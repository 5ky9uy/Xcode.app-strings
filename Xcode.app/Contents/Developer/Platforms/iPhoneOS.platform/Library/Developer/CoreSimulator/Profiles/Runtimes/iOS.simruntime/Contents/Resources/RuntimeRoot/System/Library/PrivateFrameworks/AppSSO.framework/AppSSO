@(#)PROGRAM:AppSSO  PROJECT:AppSSO-1
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/Frameworks/AuthenticationServices.framework/AuthenticationServices
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/Frameworks/AuthenticationServices.framework/AuthenticationServices
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOUI.framework/AppSSOUI
softlink:o:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:o:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
SOAuthorizationResultCore
Unable to find class %s
v8@?0
/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
/System/Library/PrivateFrameworks/AppSSOCore.framework/Contents/MacOS/AppSSOCore
Failed to connect to AppSSO service
v16@?0@"NSError"8
com.apple.AppSSO
SOExtensionServiceConnection
SOInternalProtocols
SOErrorHelper
localizedExtensionBundleDisplayName
(null)
failed to get extension view controller
NSExtension
NSExtensionPrincipalClass
failed to get extension principalClassName
failed to get extension principalClass
-[SORemoteExtensionContext beginAuthorizationWithRequestParameters:completion:]
required beginAuthorizationWithRequest is not implemented in extension
-[SORemoteExtensionContext beginAuthorizationWithServiceXPCEndpoint:completion:]
v24@?0@"SOAuthorizationRequestParameters"8@"NSError"16
-[SORemoteExtensionContext cancelAuthorizationWithCompletion:]
-[SORemoteExtensionContext finishAuthorizationWithCompletion:]
-[SORemoteExtensionContext completeFinishAuthorizationWithError:]
-[SORemoteExtensionContext openURL:completionHandler:]
-[SORemoteExtensionContext canOpenURL:]
v12@?0B8
-[SORemoteExtensionContext _disableAppSSOInCFNetwork]
SORemoteExtensionContext
ASAuthorizationProviderExtensionAuthorizationRequest
/System/Library/Frameworks/AuthenticationServices.framework/AuthenticationServices
/System/Library/Frameworks/AuthenticationServices.framework/Contents/MacOS/AuthenticationServices
com.apple.AppSSO.extension-queue-(%@)
connection to extension interrupted
v16@?0@"<NSCopying>"8
-[SOExtension setupNonUISessionWithCompletion:]
-[SOExtension requestAuthorizationViewControllerWithCompletion:]
-[SOExtension beginAuthorizationWithRequestParameters:completion:]
-[SOExtension beginAuthorizationWithServiceXPCEndpoint:completion:]
-[SOExtension cancelAuthorizationWithCompletion:]
v24@?0@"SOAuthorizationCredential"8@"NSError"16
v20@?0B8@"NSError"12
-[SOExtension _setupNonUISessionIfNecessaryWithCompletion:]
v24@?0@"NSUUID"8@"NSError"16
-[SOExtension _setupSessionIfNecessaryWithCompletion:]
-[SOExtension _finishedSettingUpSession:]
v24@?0@"<NSCopying>"8@"NSError"16
v32@?0@"<NSCopying>"8@"UIViewController"16@"NSError"24
-[SOExtension unload]
-[SOExtension checkAssociatedDomains]
application-identifier
-[SOExtension hasURLApprovedAssociatedDomain:]
<%@:%p, bundleID=%@, path=%@, associatedDomains=%@>
SOExtension
SOAuthorizationParametersCore
com.apple.AppSSO.SOExtensionManager.ExtensionsChanged
com.apple.AppSSO.extension-manager-queue
-[SOExtensionManager loadExtensionWithBundleIdentifer:completion:]
No AppSSO IdP extension found (internal error)
v24@?0@"SOExtension"8@"NSError"16
-[SOExtensionManager loadExtensionWithBundleIdentifier:]
-[SOExtensionManager loadInternalExtension]
-[SOExtensionManager beginMatchingExtensions]
-[SOExtensionManager endMatchingExtensions]
-[SOExtensionManager loadExtensions]
v24@?0@"NSArray"8@"NSError"16
-[SOExtensionManager unloadExtensions]
-[SOExtensionManager loadedExtensionWithBundleIdentifer:]
-[SOExtensionManager loadedInternalExtension]
-[SOExtensionManager isLoadedExtensionWithBundleIdentifer:]
-[SOExtensionManager _doEndMatchingExtensions]
+[SOExtensionManager _sendNotificationsLoadedExtensions:new:removed:]
extensions
removed
com.apple.AuthKitUI.AKAppSSOExtension
com.apple.ist.ds.appleconnect2.AppSSOExtension
com.apple.AppSSOKerberos.KerberosExtension
com.apple.ist.AppleConnect.App-SSO
com.apple.ist.AppleConnect.mini.App-SSO
SOExtensionManager
RequestedOperation
Realm
AuthorizationOptions
UseInternalExtensions
ResponseCode
CFNetworkInterception
CallerManaged
CallerTeamIdentifier
LocalizedCallerDisplayName
EnableUserInteraction
ImpersonationBundleIdentifier
SORequestQueue
Configuration
Plugins
Realms
Signature Validated
Associated Domains Validated
Requests
Config Version
-[SODebugHints debugHintsWithCompletion:]
not internal build
@16@?0@8
0x%016llX
SODebugConfiguration
SOUtils
ExtensionSignatureValidated
SOPreferences
-[SOConfigurationManager init]
-[SOConfigurationManager saveConfigurationData:completion:]
SOConfigurationManager
-[SOAuthorizationRequest doNotHandle]
-[SOAuthorizationRequest cancel]
-[SOAuthorizationRequest complete]
-[SOAuthorizationRequest completeWithHTTPAuthorizationHeaders:]
-[SOAuthorizationRequest completeWithHTTPResponse:httpBody:]
-[SOAuthorizationRequest completeWithAuthorizationResult:]
-[SOAuthorizationRequest completeWithError:]
-[SOAuthorizationRequest presentAuthorizationViewControllerWithHints:completion:]
Authorization has been already canceled
SOAuthorizationRequest
SOAuthorizationCredential
ASAuthorizationErrorDomain
SOAuthorizationOptionCoreNoUserInterface
com.apple.AppSSO.AuthorizationError
Subcode
configuration_removed
fetch_network_credentials
userActionInitiated
initiatorOrigin
initiatingAction
removedProfileExtensionBundleIdentifier
-[SOAuthorization init]
-[SOAuthorization getAuthorizationHintsWithURL:responseCode:completion:]
v24@?0@"SOAuthorizationHintsCore"8@"NSError"16
-[SOAuthorization beginAuthorizationWithURL:httpHeaders:httpBody:]
-[SOAuthorization beginAuthorizationWithOperation:url:httpHeaders:httpBody:]
-[SOAuthorization beginAuthorizationWithParameters:]
v24@?0@"SORemoteExtensionViewController"8@"NSError"16
v32@?0@"NSString"8@"NSXPCListenerEndpoint"16@"NSError"24
v24@?0@"SOAuthorizationCredentialCore"8@"NSError"16
-[SOAuthorization cancelAuthorization]
-[SOAuthorization debugHintsWithCompletion:]
-[SOAuthorization _finishAuthorizationWithCompletion:]
-[SOAuthorization _cancelAuthorization]
-[SOAuthorization _finishAuthorizationWithCredential:error:]
Invalid credential
-[SOAuthorization applicationDidBecomeActive:]
timeout 
-[SOAuthorization _extensionCleanup]
-[SOAuthorization authorizationDidCompleteWithCredential:error:]
-[SOAuthorization presentAuthorizationViewControllerWithHints:completion:]
no authorization delegate
-[SOAuthorization viewControllerDidCancel:]
-[SOAuthorization(Kerberos) realms]
SOAuthorization
SOAuthorizationCore
SOAuthorizationRequestParametersCore
SOAuthorizationCredentialCore
SOConfigurationClient
SOUIAuthorizationViewController
/System/Library/PrivateFrameworks/AppSSOUI.framework/AppSSOUI
/System/Library/PrivateFrameworks/AppSSOUI.framework/Contents/MacOS/AppSSOUI
SOExtensionViewService
com.apple.AppSSO.SOConfigurationHost.ConfigurationChanged
-[SOConfigurationHost init]
-[SOConfigurationHost saveConfiguration:error:]
invalid configuration format
NewConfiguration
-[SOConfigurationHost saveConfigurationData:error:]
-[SOConfigurationHost profileForURL:responseCode:]
-[SOConfigurationHost removedProfileForExtensionBundleIdentifier:]
-[SOConfigurationHost configurationForClientWithError:]
-[SOConfigurationHost profilesWithExtensionBundleIdentifier:]
-[SOConfigurationHost realms]
-[SOConfigurationHost willHandleURL:responseCode:callerBundleIdentifier:]
ssoid
+[SOConfigurationHost _loadProfilesFromDict:]
Profiles
-[SOConfigurationHost _loadConfigForFirstTime]
-[SOConfigurationHost _reloadConfigWithReason:]
-[SOConfigurationHost _configurationLoadedWithReason:]
reason
-[SOConfigurationHost _checkExtensionsExistenceForProfiles:]
-[SOConfigurationHost _checkAssociatedDomainForProfiles:]
http
https
-[SOConfigurationHost _initDataVaultIfNeededWithError:]
mobile
ExtensibleSSO
failed to check the state of datavault: %s
failed to convert to datavault: %s
-[SOConfigurationHost _saveConfigToFile:error:]
-[SOConfigurationHost _extensionsLoaded:]
FirstLoad
ExtensionsChanged
ModifiedByMDM
/var/mobile/Library/ExtensibleSSO/Configuration
IPHONE_SIMULATOR_ROOT
%@/%@
com.apple.AppSSO.configuration.plist
SOConfigurationHost
SOConfigurationVersion
SOConfiguration
SOFullProfile
-[SOHostExtensionContext openURL:completionHandler:]
com.apple.AppSSO.launch-origin
-[SOHostExtensionContext canOpenURL:completionHandler:]
SOHostExtensionContext
AppSSOCore is not available
AppSSOClientImpl
appSSO_init
appSSO_willPerform
appSSO_performResponse
appSSO_performResponseCredential
appSSO_willHandle
appSSO_handleResponse
appSSO_handleResponseCredential
appSSO_handleResponseImpersonationCredential
com.apple.AppSSO.extension-finder-queue
-[SOExtensionFinder findExtensionsWithCompletion:]
com.apple.AppSSO.idp-extension
-[SOExtensionFinder findExtensionWithBundleIdentifier:completion:]
No valid IdP extension with bundle ID: %@
More than one IdP extension with bundle ID: %@
-[SOExtensionFinder beginMatchingExtensionsWithCompletion:]
Extension matching is already in progress, ignoring request
Extension matching deallocated, request failed
-[SOExtensionFinder endMatchingExtensions]
SOExtensionFinder
missing XPC endpoint
%{public}@: XPC connection already exists
%{public}@: failed to create XPC connection
%{public}@: XPC connection invalidated
%{public}@: XPC connection interrupted
%{public}@: new XPC connection
Failed to connect to AppSSO service
AppSSO service XPC error: %{public}@
creating extension authorization request handler
Failed to get extension principalClassName: %{public}@
Failed to get extension principalClass for principalClassName: %{public}@
Error getting host context %{public}@
Error getting synchronous host context %{public}@
%s %{public}@ on %@
SOAuthorizationOperationConfigurationRemoved requires extension built with newer SDK
calling extension API beginAuthorizationWithRequest, %{public}@
finished extension API beginAuthorizationWithRequest, %{public}@
calling extension API cancelAuthorizationWithRequest, %{public}@
finished extension API cancelAuthorizationWithRequest, %{public}@
optional API cancelAuthorizationWithRequest is not implemented in extension
postponing finishAuthorization completion because of connected secKeyProxies clients (%d)
%s error: %{public}@ on %@
no finishAuthorization completion block => ignoring complete request
%s URL: %{sensitive, mask.hash}@ on %@
failed to get host context to open URL, error: %{public}@
failed to get synchronous host context to open URL, error: %{public}@
Extension interrupted. Nilling out session ID
Failed to get remote context with error %{public}@
Calling cancelAuthorizationWithCompletion on extension
Finished cancelAuthorizationWithCompletion result: %{private}@, error: %{public}@
Notifying delegate %{public}@ that extension wants to show UI, hints = %{private}@
Notifying delegate %@ that extension has finished with credential: %{private}@, error: %{public}@
Calling finishAuthorizationWithCompletion on extension
Finished finishAuthorizationWithCompletion result: %d, error: %{public}@
Using existing session for extension %@
Setting up new session for extension %@
Finished setting up new session for extension %{public}@ with error %{public}@ and session ID %{public}@
Beginning request for extension %@
Request for extension %{public}@ failed with error %{public}@
Instantiating view controller %@
Failed to instantiate view controller because of %{public}@
Passing session ID to remote view
Session with ID %{public}@ was unable to communicate with the remote service because of %{public}@
Session with ID %{public}@ was unable to get remote view service
Calling beginAuthorizationWithRequestParameters on extension
Finished beginAuthorizationWithRequestParameters result: %d, error: %{public}@
Calling beginAuthorizationWithServiceXPCEndpoint on extension
Finished beginAuthorizationWithServiceXPCEndpoint result: %d, error: %{public}@
%s  on %@
Associated domain: failed to get extension bundle proxy at path: %{public}@
Associated domain: failed to get app proxy for extension: %{public}@
Associated domain: failed to get appID for the app at path: %{public}@
Associated domain: failed to get service details for the appID: %{public}@ with error: %{public}@
Associated domain: %{public}@ is approved
Associated domain: %{public}@ is not approved
Associated domain: for app %@: %@, appID: %@, services: %@
%s url: %{sensitive, mask.hash}@ on %@
%{public}@ hasAssociatedDomainsApproved = %d
%s bundleIdentifier: %{public}@ on %@
extension not found: %{public}@, error: %{public}@
%s bundleIdentifier=%{public}@ on %@
%s %{public}@ => %{public}@ in %{public}@ on %@
restarting matching extensions because of error: %{public}@
%s extensions: %{public}@, new: %{public}@, removed: %{public}@ on %@
%{public}@: enqueueRequest: %p, %{public}@, queue count: %d
%{public}@: processNextRequest: queue count: %d
%{public}@: removeAllRequests: queue count: %d
%{public}@: processItem: %p
%{public}@: itemCompleted: %p
extensionSignatureValidated=%{public}s
no SOConfigurationManager!
%s extension API called on %@
%@: cancel -> doNotHandle
%@: cancel -> cancel
%@: cancel -> complete
%s extension API called, httpAuthorizationHeaders = %{private}@ on %@
%@: cancel -> completeWithHTTPAuthorizationHeaders
%s extension API called, httpResponse = %{private}@, httpBody = %{private}@ on %@
%@: cancel -> completeWithHTTPResponse
%s extension API called, completeWithAuthorizationResult = %{private}@ on %@
failed to create SecKey proxies: %{public}@
%s extension API called, error = %{public}@ on %@
%@: cancel -> completeWithError
%@, authorization has been already canceled
%@, authorization wants to display UI but user interaction is not enabled
finish authorization with error: %{public}@
%@, authorization wants to display UI but it is not allowed
%@, authorization wants to display UI but the device screen is locked
no remote extension context
Failed to get host extension context with error = %{public}@
invalid SecKey in the authorization result: %{public}@
SecKeyProxy:clientConnectionHandler(firstClientConnected: %d, connectedClients: %d)
SecKeyProxy:clientDisconnectionHandler(lastClientDisconnected: %d, connectedClients: %d)
AppSSOCore is not available
hints: %{public}@, error: %{public}@
%s operation = %{public}@, url = %{sensitive, mask.hash}@, httpHeaders = %{private}@, httpBody = %{private}@, auditToken = %{public}@, delegate = %{public}@, enableEmbeddedAVC = %d, enableUI = %d on %@
originator will present authorization view controller
%@ is already authorizing => ignoring a new authorization request
beginAuthorizationWithRequestParameters: extensionBundleId = %{public}@, endpoint = %{public}@, error = %{public}@
loadExtensionWithBundleIdentifer: extension = %{public}@, error = %{public}@
requestAuthorizationViewControllerWithCompletion: remoteViewController = %{public}@, error = %{public}@
beginAuthorizationWithServiceXPCEndpoint: success = %d, error = %{public}@
%s extension = %@ on %@
%s request = %{public}@, extension = %{public}@ on %@
%@ already finished => ignoring cancel request
%s credentialCore = %{private}@, error = %{public}@, requestParametersCore = %{public}@, delegate = %{public}@ on %@
%@ already finished => ignoring finish request
checkApplicationStateBeforeFinishing = %d, profile = %{private}@
no SPI authorization delegate
calling SPI authorization delegate authorizationDidCancel
calling SPI authorization delegate authorizationDidNotHandle
calling SPI authorization delegate authorizationDidComplete
calling SPI authorization delegate authorization:didCompleteWithAuthorizationResult:
failed to create SecKeys from SecKeyProxyEndpoints: %{public}@
calling SPI authorization delegate authorization:didCompleteWithHTTPAuthorizationHeaders:
calling SPI authorization delegate authorization:didCompleteWithHTTPResponse:httpBody:
calling SPI authorization delegate authorization:didCompleteWithError: (error = %{public}@)
finished SPI authorization delegate call
%{public}@ has finished
application not active => authorization pending until application activation
application activation %@=> finishing pending authorization
%s extension = %{public}@, extensionViewController = %{public}@, authorizationViewController = %{public}@ on %@
%s %{private}@, %{public}@ on %@
extensionViewController = %{public}@, authorizationViewController = %{public}@
calling SPI authorization delegate authorization:presentViewController:withCompletion:
finished SPI authorization delegate authorization:presentViewController:withCompletion: (success = %d, error = %{public}@)
%s viewController = %{public}@, authorizationViewController = %{public}@ on %@
Loading view for view service
Connecting view service (%{public}@) to context (%{public}@)
Couldn't find child view controller for context (%{public}@)
Couldn't find view for child view controller (%{public}@)
Couldn't load view for child view controller (%{public}@, %{public}@)
Connecting child view controller (%{public}@) to view service (%{public}@)
%s saving new configuration: %{private}@ on %@
unable to save new configuration, invalid format
%s saving new configuration=%{private}@ on %@
unable to save new configuration, invalid format: %{private}@
unexpected class in the configuration
profile for URL %{sensitive, mask.hash}@ => %{public}@ in %{public}@
removed profile for extension bundle ID %{public}@ => %{public}@ in %{public}@
%s extensionBundleIdentifier: %{public}@ on %@
%s URL: %{sensitive, mask.hash}@, callerBundleIdentifier: %{public}@ on %@
willHandleURL(host): checking associated domains again for URL: %{sensitive, mask.hash}@, extension: %{public}@
willHandleURL(host): reloading configuration with updated associated domains for URL: %{sensitive, mask.hash}@, extension: %{public}@
willHandleURL(host): %{sensitive, mask.hash}@ callerBundleIdentifier: %{public}@ result: %{public}@
invalid config: %{private}@
invalid profile: %{private}@
failed to load config at %{sensitive, mask.hash}@, error: %{public}@
%s reason = %@ on %@
Checking default path: %@
Removed configuration ignored for extension: %{public}@
removed profiles = %{private}@
%s reason = %{public}@, configuration = %{public}@ on %@
no extension available for profile (ignored): %{public}@
Associated domain: validation is ignored, using all URLs in AppSSO configuration
Associated domain: validation failed to find extension for profile: %{public}@, ignoring profile
Associated domain: validation skipped for extension: %{public}@
Associated domain: validation removed URL: %{sensitive, mask.hash}@ because it is not a http scheme for extension %{public}@
Associated domain: validation removed URL: %{sensitive, mask.hash}@ because it contains a wildcard in the host name for extension %{public}@
Associated domain: validation removed URL: %{sensitive, mask.hash}@ because it has no approved associated domains for extensions %{public}@
Associated domain: validation failed for URL: %{sensitive, mask.hash}@ because it has no approved associated domains for extensions %{public}@, it will be checked again when the extension is used
failed to create configuration directory at %{public}@: %{public}@
created configuration directory at %{public}@
failed to check the state of datavault: %{public}s
failed to convert to datavault: %{public}s
successfully created datavault at %{public}@
failed to change file attributes of file: %{public}@, error: %{public}@
config written to file: %{public}@, %@
failed to save config to file: %{public}@, error: %{public}@
extensions changed: %{public}@, new: %{public}@, removed: %{public}@
config file is unavailable: %{public}@
failed to get the simulator root path
Error getting remote context %{public}@
can not open URL %{sensitive, mask.hash}@
opened URL %{sensitive, mask.hash}@: success = %{public}@, error = %{public}@
can open URL %{sensitive, mask.hash}@: result = %{public}@, error = %{public}@
extensionsWithMatchingAttributes: %{public}@, error: %{public}@
findExtensionsWithCompletion: %{public}@, error: %{public}@
findExtensionWithBundleIdentifier: %{public}@, error: %{public}@
extension matching is already in progress, ignoring request
beginMatchingExtensionsWithAttributes: %{public}@, error: %{public}@
extension matching deallocated, request failed
beginMatchingExtensionsWithCompletion: %{public}@, error: %{public}@
extension matching not started, ignoring request
SOAuthorizationResult
SORemoteExtensionServiceProtocol
SOExtensionServiceProtocol
NSObject
SOExtensionServiceConnection
SOAuthorizationHints
SORequestQueueItem
SOQueueItem
SOHostExtensionContextProtocol
SOExtensionContextProtocol
SORemoteExtensionContextProtocol
SORemoteExtensionContext
SOExtensionContext
SOExtension
SOAuthorizationParameters
Internal
SOExtensionManager
SOAuthorizationRequestParameters
NSSecureCoding
NSCoding
SORequestQueue
SOAuthorizationCredential
SODebugHints
SOPreferences
SOConfigurationManager
SOAuthorizationRequest
SOAuthorization
SOExtensionDelegate
SOUIAuthorizationViewControllerDelegate
Process
Kerberos
SOHostExtensionViewProtocol
SOExtensionViewProtocol
SORemoteExtensionViewProtocol
SOExtensionViewService
SORemoteExtensionViewController
SOConfigurationHost
SOHostExtensionContext
SOExtensionFinder
init
initWithHTTPAuthorizationHeaders:
initWithHTTPResponse:httpBody:
httpAuthorizationHeaders
setHttpAuthorizationHeaders:
httpResponse
setHttpResponse:
httpBody
setHttpBody:
privateKeys
setPrivateKeys:
.cxx_destruct
_authorizationResultCore
T@"NSDictionary",&,N
T@"NSHTTPURLResponse",C,N
T@"NSData",&,N
T@"NSArray",&,N
setServiceXpcEndpoint:
_connectToService
xpcConnection
serviceXpcEndpoint
initWithListenerEndpoint:
setXpcConnection:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
beginAuthorizationWithCompletion:
interfaceWithInternalProtocol:
setRemoteObjectInterface:
setInvalidationHandler:
setInterruptionHandler:
resume
silentInternalErrorWithMessage:
remoteObjectProxyWithErrorHandler:
_xpcConnection
_serviceXpcEndpoint
T@"NSXPCConnection",&,V_xpcConnection
T@"NSXPCListenerEndpoint",&,V_serviceXpcEndpoint
localizedExtensionBundleDisplayName
dictionaryWithObjects:forKeys:count:
initWithAuthorizationHintsCore:
_localizedExtensionBundleDisplayName
T@"NSString",R,N,V_localizedExtensionBundleDisplayName
isRunning
setIsRunning:
initWithService:requestParameters:completionBlock:
service
requestParameters
completionBlock
_isRunning
_service
_requestParameters
_completionBlock
T@"<SOServiceProtocol>",R,N,V_service
T@"SOAuthorizationRequestParameters",R,N,V_requestParameters
T@?,R,C,N,V_completionBlock
TB,V_isRunning
presentAuthorizationViewControllerWithHints:completion:
authorizationDidCompleteWithCredential:error:
openURL:completionHandler:
canOpenURL:completionHandler:
interfaceWithProtocol:
beginAuthorizationWithRequestParameters:completion:
beginAuthorizationWithServiceXPCEndpoint:completion:
cancelAuthorizationWithCompletion:
finishAuthorizationWithCompletion:
_principalObject
isUserInteractionEnabled
extensionViewController
internalErrorWithMessage:
extensionAuthorizationRequestHandlerWithError:
mainBundle
infoDictionary
objectForKeyedSubscript:
_sharedExtensionContextVendor
_UUID
_setPrincipalObject:forUUID:
_auxiliaryConnection
synchronousRemoteObjectProxyWithErrorHandler:
authorizationRequestHandlerWithRequestParameters:error:
beginAuthorizationWithRequest:
requestedOperation
isEqualToString:
errorWithCode:
_disableAppSSOInCFNetwork
initWithRequestParameters:remoteExtensionContext:
initWithAuthorizationRequest:
authorizationRequest
setAuthorizationCanceled:
setCanceledAuthorizationCredential:
setCanceledAuthorizationError:
cancelAuthorizationWithRequest:
canceledAuthorizationCredential
canceledAuthorizationError
secKeyProxiesConnectedClients
setSecKeyProxies:
hostContextWithError:
synchronousHostContextWithError:
_disableAppSSO
_extensionAuxiliaryHostProtocol
_extensionAuxiliaryVendorProtocol
canOpenURL:
completeFinishAuthorizationWithError:
viewService
setViewService:
extensionAuthorizationRequest
_extensionServiceConnection
_extensionAuthorizationRequestHandler
_finishAuthorizationCompletion
_viewService
_extensionAuthorizationRequest
T@"SOExtensionViewService",W,V_viewService
T@"<ASAuthorizationProviderExtensionAuthorizationRequestHandler>",R,N
T@"ASAuthorizationProviderExtensionAuthorizationRequest",R,N,V_extensionAuthorizationRequest
localizedExtensionDisplayName
stringWithFormat:
cStringUsingEncoding:
_setupExtension
errorWithCode:message:
extension
setRequestInterruptionBlock:
_setupNonUISessionIfNecessaryWithCompletion:
_setupSessionIfNecessaryWithCompletion:
_beginAuthorizationWithRequestParameters:completion:
_beginAuthorizationWithServiceXPCEndpoint:completion:
_contextForSession
remoteContextWithError:
extensionDelegate
_finishAuthorizationWithCompletion:
setContextExtension:
_setupNonUISessionWithCompletion:
_setupSessionWithCompletion:
beginExtensionRequestWithOptions:inputItems:completion:
_setupSessionHelperForIOSWithCompletion:
_connectContextToSessionWithRequestIdentifier:completion:
instantiateViewControllerWithInputItems:listenerEndpoint:connectionHandler:
serviceViewControllerProxyWithErrorHandler:
connectToContextWithSessionID:completion:
_extensionContextForUUID:
auditToken
cancelExtensionRequestWithIdentifier:
_plugIn
containingUrl
path
objectForInfoDictionaryKey:
copy
containerAppPath
bundleWithPath:
bundleIdentifier
identifier
hasAssociatedDomainsApproved
_extensionBundle
bundleURL
pluginKitProxyForURL:
containingBundle
entitlementValueForKey:ofClass:
initWithServiceType:applicationIdentifier:domain:
serviceDetailsWithServiceSpecifier:error:
array
countByEnumeratingWithState:objects:count:
serviceSpecifier
domain
isApproved
addObject:
host
port
stringByAppendingFormat:
associatedDomains
containsObject:
count
extensionBundleIdentifier
isEqualToExtension:
initWithExtension:
setupNonUISessionWithCompletion:
requestAuthorizationViewControllerWithCompletion:
_finishedSettingUpSession:
auditTokenForSession
unload
containerAppBundleIdentifier
checkAssociatedDomains
hasURLApprovedAssociatedDomain:
setExtension:
setAssociatedDomains:
setExtensionDelegate:
_sessionID
_queue
_remoteViewController
_extension
_associatedDomains
_extensionDelegate
T@"NSExtension",&,N,V_extension
T@"NSString",R,N
T@"NSArray",&,N,V_associatedDomains
T@"<SOExtensionDelegate>",W,N,V_extensionDelegate
setUseInternalExtensions:
authorizationParametersCore
operation
setOperation:
setUrl:
httpHeaders
setHttpHeaders:
auditTokenData
setAuditTokenData:
useInternalExtensions
responseCode
setResponseCode:
isCFNetworkInterception
setCfNetworkInterception:
setCFNetworkInterception:
impersonationBundleIdentifier
setImpersonationBundleIdentifier:
_authorizationParametersCore
_impersonationBundleIdentifier
T@"NSString",C,N
T@"NSURL",&,N
TB,N
Tq,N
cfNetworkInterception
TB,N,GisCFNetworkInterception,SsetCFNetworkInterception:
T@"NSString",C,N,V_impersonationBundleIdentifier
T@"SOAuthorizationParametersCore",R,N
unloadExtensions
dealloc
_isMatchedExtension:forBundleIdentifier:
findExtensionWithBundleIdentifier:completion:
loadExtensionWithBundleIdentifer:completion:
internalExtensionBundleIdentifier
loadExtensionWithBundleIdentifier:
_doBeginMatchingExtensions
_doEndMatchingExtensions
_doLoadExtensions
findExtensionsWithCompletion:
loadedExtensions
loadedExtensionWithBundleIdentifer:
endMatchingExtensions
beginMatchingExtensions
mutableCopy
removeObject:
_sendNotificationsLoadedExtensions:new:removed:
beginMatchingExtensionsWithCompletion:
defaultCenter
postNotificationName:object:userInfo:
internalExtensionsBundleIdentifiers
sharedInstance
isInternalExtensionBundleIdentifier:
isAppleConnectExtensionBundleIdentifier:
isTiburonExtensionBundleIdentifier:
loadInternalExtension
loadExtensions
loadedInternalExtension
isLoadedExtensionWithBundleIdentifer:
_extensionManagerQueue
_extensionFinder
_loadedExtensions
T@"NSArray",R,N,V_loadedExtensions
authorizationOptions
realm
extensionData
callerBundleIdentifier
isCallerManaged
callerTeamIdentifier
localizedCallerDisplayName
decodeObjectOfClass:forKey:
setWithObjects:
decodeObjectOfClasses:forKey:
boolValue
integerValue
encodeObject:forKey:
numberWithBool:
numberWithInteger:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
initWithAuthorizationRequestParametersCore:
setRequestedOperation:
setRealm:
setExtensionData:
setCallerBundleIdentifier:
setAuthorizationOptions:
setCallerManaged:
setCallerTeamIdentifier:
setLocalizedCallerDisplayName:
setEnableUserInteraction:
_useInternalExtensions
_cfNetworkInterception
_callerManaged
_enableUserInteraction
_url
_requestedOperation
_httpHeaders
_httpBody
_realm
_extensionData
_auditTokenData
_callerBundleIdentifier
_authorizationOptions
_responseCode
_callerTeamIdentifier
_localizedCallerDisplayName
T@"NSURL",C,N,V_url
T@"NSString",C,N,V_requestedOperation
T@"NSDictionary",C,N,V_httpHeaders
T@"NSData",C,N,V_httpBody
T@"NSString",C,N,V_realm
T@"NSDictionary",C,N,V_extensionData
T@"NSData",&,N,V_auditTokenData
T@"NSString",C,N,V_callerBundleIdentifier
T@"NSDictionary",&,N,V_authorizationOptions
TB,N,V_useInternalExtensions
Tq,N,V_responseCode
TB,N,GisCFNetworkInterception,V_cfNetworkInterception
callerManaged
TB,N,GisCallerManaged,V_callerManaged
T@"NSString",C,N,V_callerTeamIdentifier
T@"NSString",C,N,V_localizedCallerDisplayName
enableUserInteraction
TB,N,GisUserInteractionEnabled,V_enableUserInteraction
dictionary
initWithIdentifier:
setObject:forKeyedSubscript:
_processItem:
_itemCompleted
firstObject
removeObjectAtIndex:
requestQueueWithIdentifier:
removeQueueWithIdentifier:
enqueueRequest:
processNextRequest
removeAllRequestsWithBlock:
queueCount
processItemBlock
setProcessItemBlock:
_identifier
_processingItem
_processItemBlock
T@?,C,N,V_processItemBlock
secKeyProxyEndpoints
initWithAuthorizationResult:
setSecKeyProxyEndpoints:
_httpAuthorizationHeaders
_httpResponse
_secKeyProxyEndpoints
T@"NSDictionary",&,N,V_httpAuthorizationHeaders
T@"NSHTTPURLResponse",C,N,V_httpResponse
T@"NSData",&,N,V_httpBody
T@"NSArray",&,N,V_secKeyProxyEndpoints
isInternalBuild
defaultManager
configurationForClientWithError:
mapArray:usingBlock:
realms
isExtensionSignatureValidated
isAssociatedDomainValidated
configVersion
debugHintsWithCompletion:
boolValueForKey:defaultValue:
TB,R,N
saveConfiguration:error:
saveConfigurationData:completion:
isAuthorizationCanceled
_hostExtensionContext
_createSecKeyProxiesForSecKeys:error:
endpoint
errorWithDomain:code:userInfo:
_isUserInterfaceAllowed
code
userInfo
intValue
initWithKey:
setSecKeyProxiesConnectedClients:
setClientConnectionHandler:
_completeFinishAuthorizationWithError:
setClientDisconnectionHandler:
doNotHandle
cancel
complete
completeWithHTTPAuthorizationHeaders:
completeWithHTTPResponse:httpBody:
completeWithAuthorizationResult:
completeWithError:
presentAuthorizationViewControllerWithCompletion:
secKeyProxies
_remoteExtensionContext
_authorizationCanceled
_secKeyProxiesConnectedClients
_canceledAuthorizationCredential
_canceledAuthorizationError
_secKeyProxies
authorizationCanceled
TB,N,GisAuthorizationCanceled,V_authorizationCanceled
T@"SOAuthorizationCredential",&,N,V_canceledAuthorizationCredential
T@"NSError",&,N,V_canceledAuthorizationError
T@"NSArray",&,N,V_secKeyProxies
Ti,N,V_secKeyProxiesConnectedClients
T@"NSString",&,N
TB,N,GisCallerManaged
TB,N,GisUserInteractionEnabled
removeObserver:
canPerformAuthorizationWithURL:responseCode:callerBundleIdentifier:useInternalExtensions:
canPerformAuthorizationWithURL:responseCode:
canPerformAuthorizationWithURL:responseCode:useInternalExtensions:
delegateDispatchQueue
setDelegateDispatchQueue:
getAuthorizationHintsWithURL:responseCode:completion:
beginAuthorizationWithParameters:
authorization:presentViewController:withCompletion:
requestParametersCore
initWithAuthorizationParameters:
_finishAuthorizationWithCredential:error:
beginAuthorizationWithParameters:completion:
_cancelAuthorization
cancelAuthorization
_extensionCleanup
initWithAuthorizationCredential:
defaultClient
profileForURL:responseCode:
setRequestParametersCore:
delegate
error:hasCode:
authorizationDidCancel:
authorizationDidNotHandle:
authorization:didCompleteWithError:
authorizationDidComplete:
authorization:didCompleteWithAuthorizationResult:
createSecKeysFromSecKeyProxyEndpoints:error:
authorization:didCompleteWithHTTPAuthorizationHeaders:
authorization:didCompleteWithHTTPResponse:httpBody:
sharedApplication
applicationState
applicationDidBecomeActive:
addObserver:selector:name:object:
_applicationActivationWithTimeout:
performBlockOnDelegateQueue:
initWithExtensionViewController:hints:
setDelegate:
setOriginatorBundleIdentifier:
originatorBundleIdentifier
viewControllerDidCancel:
T@"NSString",&
beginAuthorizationWithURL:httpHeaders:httpBody:
beginAuthorizationWithOperation:url:httpHeaders:httpBody:
enableEmbeddedAuthorizationViewController
setEnableEmbeddedAuthorizationViewController:
_authorizationCore
_extensionViewController
_authorizationViewController
_pendingFinishAuthorizationBlock
_enableEmbeddedAuthorizationViewController
_delegate
T@"<SOAuthorizationDelegate>",W,V_delegate
T@"NSObject<OS_dispatch_queue>",&
TB,N,V_enableEmbeddedAuthorizationViewController
isExtensionProcessWithAuditToken:completion:
setView:
_remoteViewControllerInterface
_exportedInterface
setExtensionContext:
extensionContext
_connectChildView
view
addChildViewController:
addSubview:
setTranslatesAutoresizingMaskIntoConstraints:
topAnchor
constraintEqualToAnchor:
bottomAnchor
leadingAnchor
trailingAnchor
arrayWithObjects:count:
activateConstraints:
didMoveToParentViewController:
loadView
remoteViewControllerInterface
exportedInterface
_extensionContext
T@"SORemoteExtensionContext",W,V_extensionContext
serviceViewControllerInterface
_loadConfigForFirstTime
initWithMode:
_loadProfilesFromDict:
parameterErrorWithMessage:
_saveConfigToFile:error:
increaseVersionWithMessage:
_checkAssociatedDomainForProfiles:
initWithProfiles:
_checkNewVersion
profiles
copyProfileForClient
copyProfile
willHandleURL:responseCode:callerBundleIdentifier:profile:
type
scheme
lowercaseString
arrayWithObject:
_reloadConfigWithReason:
stringWithHandleResult:
version
initWithProfileData:
dictionaryWithContentsOfURL:error:
_isConfigFileAvailable
_startKeyBagObserverForReloadingConfiguration
_extensionsLoaded:
_stringWithReason:
_defaultConfigurationFile
fileURLWithPath:
_loadProfilesFromURL:
_checkExtensionsExistenceForProfiles:
URLWithString:
_configurationLoadedWithReason:
empty
setAppSSOUnavailable
checkVersion
URLPrefix
removeURLPrefix:
rangeOfString:
_defaultConfigurationPath
fileExistsAtPath:isDirectory:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
UTF8String
_initDataVaultIfNeededWithError:
writeToURL:error:
setAttributes:ofItemAtPath:error:
stringWithUTF8String:
stringByAppendingPathComponent:
saveConfigurationData:error:
removedProfileForExtensionBundleIdentifier:
profilesWithExtensionBundleIdentifier:
willHandleURL:responseCode:callerBundleIdentifier:
_configuration
_configurationVersion
_removedProfiles
Tq,R,N
defaultWorkspace
openSensitiveURL:withOptions:error:
isApplicationAvailableToOpenURL:error:
contextExtension
_contextExtension
T@"SOExtension",W,V_contextExtension
extensionsWithMatchingAttributes:error:
_soExtensionsForExtensions:
objectAtIndexedSubscript:
beginMatchingExtensionsWithAttributes:completion:
endMatchingExtensions:
_extensionFinderQueue
_matchingContext
@16@0:8
@24@0:8@16
@32@0:8@16@24
v24@0:8@16
v16@0:8
@"SOAuthorizationResultCore"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@?16
v24@0:8@?<v@?@"SOAuthorizationRequestParameters"@"NSError">16
@"NSXPCConnection"
@"NSXPCListenerEndpoint"
@"NSString"
v20@0:8B16
@40@0:8@16@24@?32
@?16@0:8
@"<SOServiceProtocol>"
@"SOAuthorizationRequestParameters"
v32@0:8@16@?24
v32@0:8@16@24
v32@0:8@"NSDictionary"16@?<v@?B@"NSError">24
v32@0:8@"SOAuthorizationCredential"16@"NSError"24
v32@0:8@"NSURL"16@?<v@?B>24
v32@0:8@"SOAuthorizationRequestParameters"16@?<v@?B@"NSError">24
v32@0:8@"NSXPCListenerEndpoint"16@?<v@?B@"NSError">24
v24@0:8@?<v@?@"SOAuthorizationCredential"@"NSError">16
v24@0:8@?<v@?B@"NSError">16
B24@0:8@"NSURL"16
@32@0:8@16^@24
@24@0:8^@16
@"SOExtensionServiceConnection"
@"<ASAuthorizationProviderExtensionAuthorizationRequestHandler>"
@"SOExtensionViewService"
@"ASAuthorizationProviderExtensionAuthorizationRequest"
{?=[8I]}16@0:8
@"NSUUID"
@"NSObject<OS_dispatch_queue>"
@"SORemoteExtensionViewController"
@"NSExtension"
@"NSArray"
@"<SOExtensionDelegate>"
q16@0:8
v24@0:8q16
@"SOAuthorizationParametersCore"
v40@0:8@16@24@32
B32@0:8@16@24
@"SOExtensionFinder"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSURL"
@"NSDictionary"
@"NSData"
@"NSMutableArray"
@"NSHTTPURLResponse"
B28@0:8^{__CFString=}16B24
i16@0:8
v20@0:8i16
@"SORemoteExtensionContext"
@"SOAuthorizationCredential"
@"NSError"
B32@0:8@16q24
B36@0:8@16q24B32
B44@0:8@16q24@32B40
v24@0:8@"SOUIAuthorizationViewController"16
v40@0:8@16q24@?32
v48@0:8@16@24@32@40
@"SOAuthorizationCore"
@"SOExtension"
@"SOUIAuthorizationViewController"
@"<SOAuthorizationDelegate>"
v56@0:8{?=[8I]}16@?48
v32@0:8@"NSUUID"16@?<v@?>24
B32@0:8@16^@24
@32@0:8@16q24
q40@0:8@16q24@32
B24@0:8^@16
@24@0:8q16
@"SOConfiguration"
@"SOConfigurationVersion"
@(#)PROGRAM:AppSSO  PROJECT:AppSSO-1
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/Frameworks/AuthenticationServices.framework/AuthenticationServices
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/Frameworks/AuthenticationServices.framework/AuthenticationServices
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOUI.framework/AppSSOUI
softlink:o:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:o:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
SOAuthorizationResultCore
Unable to find class %s
v8@?0
/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
/System/Library/PrivateFrameworks/AppSSOCore.framework/Contents/MacOS/AppSSOCore
Failed to connect to AppSSO service
v16@?0@"NSError"8
com.apple.AppSSO
SOExtensionServiceConnection
SOInternalProtocols
SOErrorHelper
localizedExtensionBundleDisplayName
(null)
failed to get extension view controller
NSExtension
NSExtensionPrincipalClass
failed to get extension principalClassName
failed to get extension principalClass
-[SORemoteExtensionContext beginAuthorizationWithRequestParameters:completion:]
required beginAuthorizationWithRequest is not implemented in extension
-[SORemoteExtensionContext beginAuthorizationWithServiceXPCEndpoint:completion:]
v24@?0@"SOAuthorizationRequestParameters"8@"NSError"16
-[SORemoteExtensionContext cancelAuthorizationWithCompletion:]
-[SORemoteExtensionContext finishAuthorizationWithCompletion:]
-[SORemoteExtensionContext completeFinishAuthorizationWithError:]
-[SORemoteExtensionContext openURL:completionHandler:]
-[SORemoteExtensionContext canOpenURL:]
v12@?0B8
-[SORemoteExtensionContext _disableAppSSOInCFNetwork]
SORemoteExtensionContext
ASAuthorizationProviderExtensionAuthorizationRequest
/System/Library/Frameworks/AuthenticationServices.framework/AuthenticationServices
/System/Library/Frameworks/AuthenticationServices.framework/Contents/MacOS/AuthenticationServices
com.apple.AppSSO.extension-queue-(%@)
connection to extension interrupted
v16@?0@"<NSCopying>"8
-[SOExtension setupNonUISessionWithCompletion:]
-[SOExtension requestAuthorizationViewControllerWithCompletion:]
-[SOExtension beginAuthorizationWithRequestParameters:completion:]
-[SOExtension beginAuthorizationWithServiceXPCEndpoint:completion:]
-[SOExtension cancelAuthorizationWithCompletion:]
v24@?0@"SOAuthorizationCredential"8@"NSError"16
v20@?0B8@"NSError"12
-[SOExtension _setupNonUISessionIfNecessaryWithCompletion:]
v24@?0@"NSUUID"8@"NSError"16
-[SOExtension _setupSessionIfNecessaryWithCompletion:]
-[SOExtension _finishedSettingUpSession:]
v24@?0@"<NSCopying>"8@"NSError"16
v32@?0@"<NSCopying>"8@"UIViewController"16@"NSError"24
-[SOExtension unload]
-[SOExtension checkAssociatedDomains]
application-identifier
-[SOExtension hasURLApprovedAssociatedDomain:]
<%@:%p, bundleID=%@, path=%@, associatedDomains=%@>
SOExtension
SOAuthorizationParametersCore
com.apple.AppSSO.SOExtensionManager.ExtensionsChanged
com.apple.AppSSO.extension-manager-queue
-[SOExtensionManager loadExtensionWithBundleIdentifer:completion:]
No AppSSO IdP extension found (internal error)
v24@?0@"SOExtension"8@"NSError"16
-[SOExtensionManager loadExtensionWithBundleIdentifier:]
-[SOExtensionManager loadInternalExtension]
-[SOExtensionManager beginMatchingExtensions]
-[SOExtensionManager endMatchingExtensions]
-[SOExtensionManager loadExtensions]
v24@?0@"NSArray"8@"NSError"16
-[SOExtensionManager unloadExtensions]
-[SOExtensionManager loadedExtensionWithBundleIdentifer:]
-[SOExtensionManager loadedInternalExtension]
-[SOExtensionManager isLoadedExtensionWithBundleIdentifer:]
-[SOExtensionManager _doEndMatchingExtensions]
+[SOExtensionManager _sendNotificationsLoadedExtensions:new:removed:]
extensions
removed
com.apple.AuthKitUI.AKAppSSOExtension
com.apple.ist.ds.appleconnect2.AppSSOExtension
com.apple.AppSSOKerberos.KerberosExtension
com.apple.ist.AppleConnect.App-SSO
com.apple.ist.AppleConnect.mini.App-SSO
SOExtensionManager
RequestedOperation
Realm
AuthorizationOptions
UseInternalExtensions
ResponseCode
CFNetworkInterception
CallerManaged
CallerTeamIdentifier
LocalizedCallerDisplayName
EnableUserInteraction
ImpersonationBundleIdentifier
SORequestQueue
Configuration
Plugins
Realms
Signature Validated
Associated Domains Validated
Requests
Config Version
-[SODebugHints debugHintsWithCompletion:]
not internal build
@16@?0@8
0x%016llX
SODebugConfiguration
SOUtils
ExtensionSignatureValidated
SOPreferences
-[SOConfigurationManager init]
-[SOConfigurationManager saveConfigurationData:completion:]
SOConfigurationManager
-[SOAuthorizationRequest doNotHandle]
-[SOAuthorizationRequest cancel]
-[SOAuthorizationRequest complete]
-[SOAuthorizationRequest completeWithHTTPAuthorizationHeaders:]
-[SOAuthorizationRequest completeWithHTTPResponse:httpBody:]
-[SOAuthorizationRequest completeWithAuthorizationResult:]
-[SOAuthorizationRequest completeWithError:]
-[SOAuthorizationRequest presentAuthorizationViewControllerWithHints:completion:]
Authorization has been already canceled
SOAuthorizationRequest
SOAuthorizationCredential
ASAuthorizationErrorDomain
SOAuthorizationOptionCoreNoUserInterface
com.apple.AppSSO.AuthorizationError
Subcode
configuration_removed
fetch_network_credentials
userActionInitiated
initiatorOrigin
initiatingAction
removedProfileExtensionBundleIdentifier
-[SOAuthorization init]
-[SOAuthorization getAuthorizationHintsWithURL:responseCode:completion:]
v24@?0@"SOAuthorizationHintsCore"8@"NSError"16
-[SOAuthorization beginAuthorizationWithURL:httpHeaders:httpBody:]
-[SOAuthorization beginAuthorizationWithOperation:url:httpHeaders:httpBody:]
-[SOAuthorization beginAuthorizationWithParameters:]
v24@?0@"SORemoteExtensionViewController"8@"NSError"16
v32@?0@"NSString"8@"NSXPCListenerEndpoint"16@"NSError"24
v24@?0@"SOAuthorizationCredentialCore"8@"NSError"16
-[SOAuthorization cancelAuthorization]
-[SOAuthorization debugHintsWithCompletion:]
-[SOAuthorization _finishAuthorizationWithCompletion:]
-[SOAuthorization _cancelAuthorization]
-[SOAuthorization _finishAuthorizationWithCredential:error:]
Invalid credential
-[SOAuthorization applicationDidBecomeActive:]
timeout 
-[SOAuthorization _extensionCleanup]
-[SOAuthorization authorizationDidCompleteWithCredential:error:]
-[SOAuthorization presentAuthorizationViewControllerWithHints:completion:]
no authorization delegate
-[SOAuthorization viewControllerDidCancel:]
-[SOAuthorization(Kerberos) realms]
SOAuthorization
SOAuthorizationCore
SOAuthorizationRequestParametersCore
SOAuthorizationCredentialCore
SOConfigurationClient
SOUIAuthorizationViewController
/System/Library/PrivateFrameworks/AppSSOUI.framework/AppSSOUI
/System/Library/PrivateFrameworks/AppSSOUI.framework/Contents/MacOS/AppSSOUI
SOExtensionViewService
com.apple.AppSSO.SOConfigurationHost.ConfigurationChanged
-[SOConfigurationHost init]
-[SOConfigurationHost saveConfiguration:error:]
invalid configuration format
NewConfiguration
-[SOConfigurationHost saveConfigurationData:error:]
-[SOConfigurationHost profileForURL:responseCode:]
-[SOConfigurationHost removedProfileForExtensionBundleIdentifier:]
-[SOConfigurationHost configurationForClientWithError:]
-[SOConfigurationHost profilesWithExtensionBundleIdentifier:]
-[SOConfigurationHost realms]
-[SOConfigurationHost willHandleURL:responseCode:callerBundleIdentifier:]
ssoid
+[SOConfigurationHost _loadProfilesFromDict:]
Profiles
-[SOConfigurationHost _loadConfigForFirstTime]
-[SOConfigurationHost _reloadConfigWithReason:]
-[SOConfigurationHost _configurationLoadedWithReason:]
reason
-[SOConfigurationHost _checkExtensionsExistenceForProfiles:]
-[SOConfigurationHost _checkAssociatedDomainForProfiles:]
http
https
-[SOConfigurationHost _initDataVaultIfNeededWithError:]
mobile
ExtensibleSSO
failed to check the state of datavault: %s
failed to convert to datavault: %s
-[SOConfigurationHost _saveConfigToFile:error:]
-[SOConfigurationHost _extensionsLoaded:]
FirstLoad
ExtensionsChanged
ModifiedByMDM
/var/mobile/Library/ExtensibleSSO/Configuration
IPHONE_SIMULATOR_ROOT
%@/%@
com.apple.AppSSO.configuration.plist
SOConfigurationHost
SOConfigurationVersion
SOConfiguration
SOFullProfile
-[SOHostExtensionContext openURL:completionHandler:]
com.apple.AppSSO.launch-origin
-[SOHostExtensionContext canOpenURL:completionHandler:]
SOHostExtensionContext
AppSSOCore is not available
AppSSOClientImpl
appSSO_init
appSSO_willPerform
appSSO_performResponse
appSSO_performResponseCredential
appSSO_willHandle
appSSO_handleResponse
appSSO_handleResponseCredential
appSSO_handleResponseImpersonationCredential
com.apple.AppSSO.extension-finder-queue
-[SOExtensionFinder findExtensionsWithCompletion:]
com.apple.AppSSO.idp-extension
-[SOExtensionFinder findExtensionWithBundleIdentifier:completion:]
No valid IdP extension with bundle ID: %@
More than one IdP extension with bundle ID: %@
-[SOExtensionFinder beginMatchingExtensionsWithCompletion:]
Extension matching is already in progress, ignoring request
Extension matching deallocated, request failed
-[SOExtensionFinder endMatchingExtensions]
SOExtensionFinder
missing XPC endpoint
%{public}@: XPC connection already exists
%{public}@: failed to create XPC connection
%{public}@: XPC connection invalidated
%{public}@: XPC connection interrupted
%{public}@: new XPC connection
Failed to connect to AppSSO service
AppSSO service XPC error: %{public}@
creating extension authorization request handler
Failed to get extension principalClassName: %{public}@
Failed to get extension principalClass for principalClassName: %{public}@
Error getting host context %{public}@
Error getting synchronous host context %{public}@
%s %{public}@ on %@
SOAuthorizationOperationConfigurationRemoved requires extension built with newer SDK
calling extension API beginAuthorizationWithRequest, %{public}@
finished extension API beginAuthorizationWithRequest, %{public}@
%s  on %@
calling extension API cancelAuthorizationWithRequest, %{public}@
finished extension API cancelAuthorizationWithRequest, %{public}@
optional API cancelAuthorizationWithRequest is not implemented in extension
postponing finishAuthorization completion because of connected secKeyProxies clients (%d)
%s error: %{public}@ on %@
no finishAuthorization completion block => ignoring complete request
%s URL: %{sensitive, mask.hash}@ on %@
failed to get host context to open URL, error: %{public}@
failed to get synchronous host context to open URL, error: %{public}@
Extension interrupted. Nilling out session ID
Failed to get remote context with error %{public}@
Calling cancelAuthorizationWithCompletion on extension
Finished cancelAuthorizationWithCompletion result: %{private}@, error: %{public}@
Notifying delegate %{public}@ that extension wants to show UI, hints = %{private}@
Notifying delegate %@ that extension has finished with credential: %{private}@, error: %{public}@
Calling finishAuthorizationWithCompletion on extension
Finished finishAuthorizationWithCompletion result: %d, error: %{public}@
Using existing session for extension %@
Setting up new session for extension %@
Finished setting up new session for extension %{public}@ with error %{public}@ and session ID %{public}@
Beginning request for extension %@
Request for extension %{public}@ failed with error %{public}@
Instantiating view controller %@
Failed to instantiate view controller because of %{public}@
Passing session ID to remote view
Session with ID %{public}@ was unable to communicate with the remote service because of %{public}@
Session with ID %{public}@ was unable to get remote view service
Calling beginAuthorizationWithRequestParameters on extension
Finished beginAuthorizationWithRequestParameters result: %d, error: %{public}@
Calling beginAuthorizationWithServiceXPCEndpoint on extension
Finished beginAuthorizationWithServiceXPCEndpoint result: %d, error: %{public}@
Associated domain: failed to get extension bundle proxy at path: %{public}@
Associated domain: failed to get app proxy for extension: %{public}@
Associated domain: failed to get appID for the app at path: %{public}@
Associated domain: failed to get service details for the appID: %{public}@ with error: %{public}@
Associated domain: %{public}@ is approved
Associated domain: %{public}@ is not approved
Associated domain: for app %@: %@, appID: %@, services: %@
%s url: %{sensitive, mask.hash}@ on %@
%{public}@ hasAssociatedDomainsApproved = %d
%s bundleIdentifier: %{public}@ on %@
extension not found: %{public}@, error: %{public}@
%s bundleIdentifier=%{public}@ on %@
%s %{public}@ => %{public}@ in %{public}@ on %@
restarting matching extensions because of error: %{public}@
%s extensions: %{public}@, new: %{public}@, removed: %{public}@ on %@
%{public}@: enqueueRequest: %p, %{public}@, queue count: %d
%{public}@: processNextRequest: queue count: %d
%{public}@: removeAllRequests: queue count: %d
%{public}@: processItem: %p
%{public}@: itemCompleted: %p
extensionSignatureValidated=%{public}s
no SOConfigurationManager!
%s extension API called on %@
%@: cancel -> doNotHandle
%@: cancel -> cancel
%@: cancel -> complete
%s extension API called, httpAuthorizationHeaders = %{private}@ on %@
%@: cancel -> completeWithHTTPAuthorizationHeaders
%s extension API called, httpResponse = %{private}@, httpBody = %{private}@ on %@
%@: cancel -> completeWithHTTPResponse
%s extension API called, completeWithAuthorizationResult = %{private}@ on %@
failed to create SecKey proxies: %{public}@
%s extension API called, error = %{public}@ on %@
%@: cancel -> completeWithError
%@, authorization has been already canceled
%@, authorization wants to display UI but user interaction is not enabled
finish authorization with error: %{public}@
%@, authorization wants to display UI but it is not allowed
%@, authorization wants to display UI but the device screen is locked
no remote extension context
Failed to get host extension context with error = %{public}@
invalid SecKey in the authorization result: %{public}@
SecKeyProxy:clientConnectionHandler(firstClientConnected: %d, connectedClients: %d)
SecKeyProxy:clientDisconnectionHandler(lastClientDisconnected: %d, connectedClients: %d)
AppSSOCore is not available
hints: %{public}@, error: %{public}@
%s operation = %{public}@, url = %{sensitive, mask.hash}@, httpHeaders = %{private}@, httpBody = %{private}@, auditToken = %{public}@, delegate = %{public}@, enableEmbeddedAVC = %d, enableUI = %d on %@
originator will present authorization view controller
%@ is already authorizing => ignoring a new authorization request
beginAuthorizationWithRequestParameters: extensionBundleId = %{public}@, endpoint = %{public}@, error = %{public}@
loadExtensionWithBundleIdentifer: extension = %{public}@, error = %{public}@
requestAuthorizationViewControllerWithCompletion: remoteViewController = %{public}@, error = %{public}@
beginAuthorizationWithServiceXPCEndpoint: success = %d, error = %{public}@
%s extension = %@ on %@
%s request = %{public}@, extension = %{public}@ on %@
%@ already finished => ignoring cancel request
%s credentialCore = %{private}@, error = %{public}@, requestParametersCore = %{public}@, delegate = %{public}@ on %@
%@ already finished => ignoring finish request
checkApplicationStateBeforeFinishing = %d, profile = %{private}@
no SPI authorization delegate
calling SPI authorization delegate authorizationDidCancel
calling SPI authorization delegate authorizationDidNotHandle
calling SPI authorization delegate authorizationDidComplete
calling SPI authorization delegate authorization:didCompleteWithAuthorizationResult:
failed to create SecKeys from SecKeyProxyEndpoints: %{public}@
calling SPI authorization delegate authorization:didCompleteWithHTTPAuthorizationHeaders:
calling SPI authorization delegate authorization:didCompleteWithHTTPResponse:httpBody:
calling SPI authorization delegate authorization:didCompleteWithError: (error = %{public}@)
finished SPI authorization delegate call
%{public}@ has finished
application not active => authorization pending until application activation
application activation %@=> finishing pending authorization
%s extension = %{public}@, extensionViewController = %{public}@, authorizationViewController = %{public}@ on %@
%s %{private}@, %{public}@ on %@
extensionViewController = %{public}@, authorizationViewController = %{public}@
calling SPI authorization delegate authorization:presentViewController:withCompletion:
finished SPI authorization delegate authorization:presentViewController:withCompletion: (success = %d, error = %{public}@)
%s viewController = %{public}@, authorizationViewController = %{public}@ on %@
Loading view for view service
Connecting view service (%{public}@) to context (%{public}@)
Couldn't find child view controller for context (%{public}@)
Couldn't find view for child view controller (%{public}@)
Couldn't load view for child view controller (%{public}@, %{public}@)
Connecting child view controller (%{public}@) to view service (%{public}@)
%s saving new configuration: %{private}@ on %@
unable to save new configuration, invalid format
%s saving new configuration=%{private}@ on %@
unable to save new configuration, invalid format: %{private}@
unexpected class in the configuration
profile for URL %{sensitive, mask.hash}@ => %{public}@ in %{public}@
removed profile for extension bundle ID %{public}@ => %{public}@ in %{public}@
%s extensionBundleIdentifier: %{public}@ on %@
%s URL: %{sensitive, mask.hash}@, callerBundleIdentifier: %{public}@ on %@
willHandleURL(host): checking associated domains again for URL: %{sensitive, mask.hash}@, extension: %{public}@
willHandleURL(host): reloading configuration with updated associated domains for URL: %{sensitive, mask.hash}@, extension: %{public}@
willHandleURL(host): %{sensitive, mask.hash}@ callerBundleIdentifier: %{public}@ result: %{public}@
invalid config: %{private}@
invalid profile: %{private}@
failed to load config at %{sensitive, mask.hash}@, error: %{public}@
%s reason = %@ on %@
Checking default path: %@
Removed configuration ignored for extension: %{public}@
removed profiles = %{private}@
%s reason = %{public}@, configuration = %{public}@ on %@
no extension available for profile (ignored): %{public}@
Associated domain: validation is ignored, using all URLs in AppSSO configuration
Associated domain: validation failed to find extension for profile: %{public}@, ignoring profile
Associated domain: validation skipped for extension: %{public}@
Associated domain: validation removed URL: %{sensitive, mask.hash}@ because it is not a http scheme for extension %{public}@
Associated domain: validation removed URL: %{sensitive, mask.hash}@ because it contains a wildcard in the host name for extension %{public}@
Associated domain: validation removed URL: %{sensitive, mask.hash}@ because it has no approved associated domains for extensions %{public}@
Associated domain: validation failed for URL: %{sensitive, mask.hash}@ because it has no approved associated domains for extensions %{public}@, it will be checked again when the extension is used
failed to create configuration directory at %{public}@: %{public}@
created configuration directory at %{public}@
failed to check the state of datavault: %{public}s
failed to convert to datavault: %{public}s
successfully created datavault at %{public}@
failed to change file attributes of file: %{public}@, error: %{public}@
config written to file: %{public}@, %@
failed to save config to file: %{public}@, error: %{public}@
extensions changed: %{public}@, new: %{public}@, removed: %{public}@
config file is unavailable: %{public}@
failed to get the simulator root path
Error getting remote context %{public}@
can not open URL %{sensitive, mask.hash}@
opened URL %{sensitive, mask.hash}@: success = %{public}@, error = %{public}@
can open URL %{sensitive, mask.hash}@: result = %{public}@, error = %{public}@
extensionsWithMatchingAttributes: %{public}@, error: %{public}@
findExtensionsWithCompletion: %{public}@, error: %{public}@
findExtensionWithBundleIdentifier: %{public}@, error: %{public}@
extension matching is already in progress, ignoring request
beginMatchingExtensionsWithAttributes: %{public}@, error: %{public}@
extension matching deallocated, request failed
beginMatchingExtensionsWithCompletion: %{public}@, error: %{public}@
extension matching not started, ignoring request
SOAuthorizationResult
SORemoteExtensionServiceProtocol
SOExtensionServiceProtocol
NSObject
SOExtensionServiceConnection
SOAuthorizationHints
SORequestQueueItem
SOQueueItem
SOHostExtensionContextProtocol
SOExtensionContextProtocol
SORemoteExtensionContextProtocol
SORemoteExtensionContext
SOExtensionContext
SOExtension
SOAuthorizationParameters
Internal
SOExtensionManager
SOAuthorizationRequestParameters
NSSecureCoding
NSCoding
SORequestQueue
SOAuthorizationCredential
SODebugHints
SOPreferences
SOConfigurationManager
SOAuthorizationRequest
SOAuthorization
SOExtensionDelegate
SOUIAuthorizationViewControllerDelegate
Process
Kerberos
SOHostExtensionViewProtocol
SOExtensionViewProtocol
SORemoteExtensionViewProtocol
SOExtensionViewService
SORemoteExtensionViewController
SOConfigurationHost
SOHostExtensionContext
SOExtensionFinder
init
initWithHTTPAuthorizationHeaders:
initWithHTTPResponse:httpBody:
httpAuthorizationHeaders
setHttpAuthorizationHeaders:
httpResponse
setHttpResponse:
httpBody
setHttpBody:
privateKeys
setPrivateKeys:
.cxx_destruct
_authorizationResultCore
T@"NSDictionary",&,N
T@"NSHTTPURLResponse",C,N
T@"NSData",&,N
T@"NSArray",&,N
setServiceXpcEndpoint:
_connectToService
xpcConnection
serviceXpcEndpoint
initWithListenerEndpoint:
setXpcConnection:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
beginAuthorizationWithCompletion:
interfaceWithInternalProtocol:
setRemoteObjectInterface:
setInvalidationHandler:
setInterruptionHandler:
resume
silentInternalErrorWithMessage:
remoteObjectProxyWithErrorHandler:
_xpcConnection
_serviceXpcEndpoint
T@"NSXPCConnection",&,V_xpcConnection
T@"NSXPCListenerEndpoint",&,V_serviceXpcEndpoint
localizedExtensionBundleDisplayName
dictionaryWithObjects:forKeys:count:
initWithAuthorizationHintsCore:
_localizedExtensionBundleDisplayName
T@"NSString",R,N,V_localizedExtensionBundleDisplayName
isRunning
setIsRunning:
initWithService:requestParameters:completionBlock:
service
requestParameters
completionBlock
_isRunning
_service
_requestParameters
_completionBlock
T@"<SOServiceProtocol>",R,N,V_service
T@"SOAuthorizationRequestParameters",R,N,V_requestParameters
T@?,R,C,N,V_completionBlock
TB,V_isRunning
presentAuthorizationViewControllerWithHints:completion:
authorizationDidCompleteWithCredential:error:
openURL:completionHandler:
canOpenURL:completionHandler:
interfaceWithProtocol:
beginAuthorizationWithRequestParameters:completion:
beginAuthorizationWithServiceXPCEndpoint:completion:
cancelAuthorizationWithCompletion:
finishAuthorizationWithCompletion:
_principalObject
isUserInteractionEnabled
extensionViewController
internalErrorWithMessage:
extensionAuthorizationRequestHandlerWithError:
mainBundle
infoDictionary
objectForKeyedSubscript:
_sharedExtensionContextVendor
_UUID
_setPrincipalObject:forUUID:
_auxiliaryConnection
synchronousRemoteObjectProxyWithErrorHandler:
authorizationRequestHandlerWithRequestParameters:error:
beginAuthorizationWithRequest:
requestedOperation
isEqualToString:
errorWithCode:
_disableAppSSOInCFNetwork
initWithRequestParameters:remoteExtensionContext:
initWithAuthorizationRequest:
authorizationRequest
setAuthorizationCanceled:
setCanceledAuthorizationCredential:
setCanceledAuthorizationError:
cancelAuthorizationWithRequest:
canceledAuthorizationCredential
canceledAuthorizationError
secKeyProxiesConnectedClients
setSecKeyProxies:
hostContextWithError:
synchronousHostContextWithError:
_disableAppSSO
_extensionAuxiliaryHostProtocol
_extensionAuxiliaryVendorProtocol
canOpenURL:
completeFinishAuthorizationWithError:
viewService
setViewService:
extensionAuthorizationRequest
_extensionServiceConnection
_extensionAuthorizationRequestHandler
_finishAuthorizationCompletion
_viewService
_extensionAuthorizationRequest
T@"SOExtensionViewService",W,V_viewService
T@"<ASAuthorizationProviderExtensionAuthorizationRequestHandler>",R,N
T@"ASAuthorizationProviderExtensionAuthorizationRequest",R,N,V_extensionAuthorizationRequest
localizedExtensionDisplayName
stringWithFormat:
cStringUsingEncoding:
_setupExtension
errorWithCode:message:
extension
setRequestInterruptionBlock:
_setupNonUISessionIfNecessaryWithCompletion:
_setupSessionIfNecessaryWithCompletion:
_beginAuthorizationWithRequestParameters:completion:
_beginAuthorizationWithServiceXPCEndpoint:completion:
_contextForSession
remoteContextWithError:
extensionDelegate
_finishAuthorizationWithCompletion:
setContextExtension:
_setupNonUISessionWithCompletion:
_setupSessionWithCompletion:
beginExtensionRequestWithOptions:inputItems:completion:
_setupSessionHelperForIOSWithCompletion:
_connectContextToSessionWithRequestIdentifier:completion:
instantiateViewControllerWithInputItems:listenerEndpoint:connectionHandler:
serviceViewControllerProxyWithErrorHandler:
connectToContextWithSessionID:completion:
_extensionContextForUUID:
auditToken
cancelExtensionRequestWithIdentifier:
_plugIn
containingUrl
path
objectForInfoDictionaryKey:
copy
containerAppPath
bundleWithPath:
bundleIdentifier
identifier
hasAssociatedDomainsApproved
_extensionBundle
bundleURL
pluginKitProxyForURL:
containingBundle
entitlementValueForKey:ofClass:
initWithServiceType:applicationIdentifier:domain:
serviceDetailsWithServiceSpecifier:error:
array
countByEnumeratingWithState:objects:count:
serviceSpecifier
domain
isApproved
addObject:
host
port
stringByAppendingFormat:
associatedDomains
containsObject:
count
extensionBundleIdentifier
isEqualToExtension:
initWithExtension:
setupNonUISessionWithCompletion:
requestAuthorizationViewControllerWithCompletion:
_finishedSettingUpSession:
auditTokenForSession
unload
containerAppBundleIdentifier
checkAssociatedDomains
hasURLApprovedAssociatedDomain:
setExtension:
setAssociatedDomains:
setExtensionDelegate:
_sessionID
_queue
_remoteViewController
_extension
_associatedDomains
_extensionDelegate
T@"NSExtension",&,N,V_extension
T@"NSString",R,N
T@"NSArray",&,N,V_associatedDomains
T@"<SOExtensionDelegate>",W,N,V_extensionDelegate
setUseInternalExtensions:
authorizationParametersCore
operation
setOperation:
setUrl:
httpHeaders
setHttpHeaders:
auditTokenData
setAuditTokenData:
useInternalExtensions
responseCode
setResponseCode:
isCFNetworkInterception
setCfNetworkInterception:
setCFNetworkInterception:
impersonationBundleIdentifier
setImpersonationBundleIdentifier:
_authorizationParametersCore
_impersonationBundleIdentifier
T@"NSString",C,N
T@"NSURL",&,N
TB,N
Tq,N
cfNetworkInterception
TB,N,GisCFNetworkInterception,SsetCFNetworkInterception:
T@"NSString",C,N,V_impersonationBundleIdentifier
T@"SOAuthorizationParametersCore",R,N
unloadExtensions
dealloc
_isMatchedExtension:forBundleIdentifier:
findExtensionWithBundleIdentifier:completion:
loadExtensionWithBundleIdentifer:completion:
internalExtensionBundleIdentifier
loadExtensionWithBundleIdentifier:
_doBeginMatchingExtensions
_doEndMatchingExtensions
_doLoadExtensions
findExtensionsWithCompletion:
loadedExtensions
loadedExtensionWithBundleIdentifer:
endMatchingExtensions
beginMatchingExtensions
mutableCopy
removeObject:
_sendNotificationsLoadedExtensions:new:removed:
beginMatchingExtensionsWithCompletion:
defaultCenter
postNotificationName:object:userInfo:
internalExtensionsBundleIdentifiers
sharedInstance
isInternalExtensionBundleIdentifier:
isAppleConnectExtensionBundleIdentifier:
isTiburonExtensionBundleIdentifier:
loadInternalExtension
loadExtensions
loadedInternalExtension
isLoadedExtensionWithBundleIdentifer:
_extensionManagerQueue
_extensionFinder
_loadedExtensions
T@"NSArray",R,N,V_loadedExtensions
authorizationOptions
realm
extensionData
callerBundleIdentifier
isCallerManaged
callerTeamIdentifier
localizedCallerDisplayName
decodeObjectOfClass:forKey:
setWithObjects:
decodeObjectOfClasses:forKey:
boolValue
integerValue
encodeObject:forKey:
numberWithBool:
numberWithInteger:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
initWithAuthorizationRequestParametersCore:
setRequestedOperation:
setRealm:
setExtensionData:
setCallerBundleIdentifier:
setAuthorizationOptions:
setCallerManaged:
setCallerTeamIdentifier:
setLocalizedCallerDisplayName:
setEnableUserInteraction:
_useInternalExtensions
_cfNetworkInterception
_callerManaged
_enableUserInteraction
_url
_requestedOperation
_httpHeaders
_httpBody
_realm
_extensionData
_auditTokenData
_callerBundleIdentifier
_authorizationOptions
_responseCode
_callerTeamIdentifier
_localizedCallerDisplayName
T@"NSURL",C,N,V_url
T@"NSString",C,N,V_requestedOperation
T@"NSDictionary",C,N,V_httpHeaders
T@"NSData",C,N,V_httpBody
T@"NSString",C,N,V_realm
T@"NSDictionary",C,N,V_extensionData
T@"NSData",&,N,V_auditTokenData
T@"NSString",C,N,V_callerBundleIdentifier
T@"NSDictionary",&,N,V_authorizationOptions
TB,N,V_useInternalExtensions
Tq,N,V_responseCode
TB,N,GisCFNetworkInterception,V_cfNetworkInterception
callerManaged
TB,N,GisCallerManaged,V_callerManaged
T@"NSString",C,N,V_callerTeamIdentifier
T@"NSString",C,N,V_localizedCallerDisplayName
enableUserInteraction
TB,N,GisUserInteractionEnabled,V_enableUserInteraction
dictionary
initWithIdentifier:
setObject:forKeyedSubscript:
_processItem:
_itemCompleted
firstObject
removeObjectAtIndex:
requestQueueWithIdentifier:
removeQueueWithIdentifier:
enqueueRequest:
processNextRequest
removeAllRequestsWithBlock:
queueCount
processItemBlock
setProcessItemBlock:
_identifier
_processingItem
_processItemBlock
T@?,C,N,V_processItemBlock
secKeyProxyEndpoints
initWithAuthorizationResult:
setSecKeyProxyEndpoints:
_httpAuthorizationHeaders
_httpResponse
_secKeyProxyEndpoints
T@"NSDictionary",&,N,V_httpAuthorizationHeaders
T@"NSHTTPURLResponse",C,N,V_httpResponse
T@"NSData",&,N,V_httpBody
T@"NSArray",&,N,V_secKeyProxyEndpoints
isInternalBuild
defaultManager
configurationForClientWithError:
mapArray:usingBlock:
realms
isExtensionSignatureValidated
isAssociatedDomainValidated
configVersion
debugHintsWithCompletion:
boolValueForKey:defaultValue:
TB,R,N
saveConfiguration:error:
saveConfigurationData:completion:
isAuthorizationCanceled
_hostExtensionContext
_createSecKeyProxiesForSecKeys:error:
endpoint
errorWithDomain:code:userInfo:
_isUserInterfaceAllowed
code
userInfo
intValue
initWithKey:
setSecKeyProxiesConnectedClients:
setClientConnectionHandler:
_completeFinishAuthorizationWithError:
setClientDisconnectionHandler:
doNotHandle
cancel
complete
completeWithHTTPAuthorizationHeaders:
completeWithHTTPResponse:httpBody:
completeWithAuthorizationResult:
completeWithError:
presentAuthorizationViewControllerWithCompletion:
secKeyProxies
_remoteExtensionContext
_authorizationCanceled
_secKeyProxiesConnectedClients
_canceledAuthorizationCredential
_canceledAuthorizationError
_secKeyProxies
authorizationCanceled
TB,N,GisAuthorizationCanceled,V_authorizationCanceled
T@"SOAuthorizationCredential",&,N,V_canceledAuthorizationCredential
T@"NSError",&,N,V_canceledAuthorizationError
T@"NSArray",&,N,V_secKeyProxies
Ti,N,V_secKeyProxiesConnectedClients
T@"NSString",&,N
TB,N,GisCallerManaged
TB,N,GisUserInteractionEnabled
removeObserver:
canPerformAuthorizationWithURL:responseCode:callerBundleIdentifier:useInternalExtensions:
canPerformAuthorizationWithURL:responseCode:
canPerformAuthorizationWithURL:responseCode:useInternalExtensions:
delegateDispatchQueue
setDelegateDispatchQueue:
getAuthorizationHintsWithURL:responseCode:completion:
beginAuthorizationWithParameters:
authorization:presentViewController:withCompletion:
requestParametersCore
initWithAuthorizationParameters:
_finishAuthorizationWithCredential:error:
beginAuthorizationWithParameters:completion:
_cancelAuthorization
cancelAuthorization
_extensionCleanup
initWithAuthorizationCredential:
defaultClient
profileForURL:responseCode:
setRequestParametersCore:
delegate
error:hasCode:
authorizationDidCancel:
authorizationDidNotHandle:
authorization:didCompleteWithError:
authorizationDidComplete:
authorization:didCompleteWithAuthorizationResult:
createSecKeysFromSecKeyProxyEndpoints:error:
authorization:didCompleteWithHTTPAuthorizationHeaders:
authorization:didCompleteWithHTTPResponse:httpBody:
sharedApplication
applicationState
applicationDidBecomeActive:
addObserver:selector:name:object:
_applicationActivationWithTimeout:
performBlockOnDelegateQueue:
initWithExtensionViewController:hints:
setDelegate:
setOriginatorBundleIdentifier:
originatorBundleIdentifier
viewControllerDidCancel:
T@"NSString",&
beginAuthorizationWithURL:httpHeaders:httpBody:
beginAuthorizationWithOperation:url:httpHeaders:httpBody:
enableEmbeddedAuthorizationViewController
setEnableEmbeddedAuthorizationViewController:
_authorizationCore
_extensionViewController
_authorizationViewController
_pendingFinishAuthorizationBlock
_enableEmbeddedAuthorizationViewController
_delegate
T@"<SOAuthorizationDelegate>",W,V_delegate
T@"NSObject<OS_dispatch_queue>",&
TB,N,V_enableEmbeddedAuthorizationViewController
isExtensionProcessWithAuditToken:completion:
setView:
_remoteViewControllerInterface
_exportedInterface
setExtensionContext:
extensionContext
_connectChildView
view
addChildViewController:
addSubview:
setTranslatesAutoresizingMaskIntoConstraints:
topAnchor
constraintEqualToAnchor:
bottomAnchor
leadingAnchor
trailingAnchor
arrayWithObjects:count:
activateConstraints:
didMoveToParentViewController:
loadView
remoteViewControllerInterface
exportedInterface
_extensionContext
T@"SORemoteExtensionContext",W,V_extensionContext
serviceViewControllerInterface
_loadConfigForFirstTime
initWithMode:
_loadProfilesFromDict:
parameterErrorWithMessage:
_saveConfigToFile:error:
increaseVersionWithMessage:
_checkAssociatedDomainForProfiles:
initWithProfiles:
_checkNewVersion
profiles
copyProfileForClient
copyProfile
willHandleURL:responseCode:callerBundleIdentifier:profile:
type
scheme
lowercaseString
arrayWithObject:
_reloadConfigWithReason:
stringWithHandleResult:
version
initWithProfileData:
dictionaryWithContentsOfURL:error:
_isConfigFileAvailable
_startKeyBagObserverForReloadingConfiguration
_extensionsLoaded:
_stringWithReason:
_defaultConfigurationFile
fileURLWithPath:
_loadProfilesFromURL:
_checkExtensionsExistenceForProfiles:
URLWithString:
_configurationLoadedWithReason:
empty
setAppSSOUnavailable
checkVersion
URLPrefix
removeURLPrefix:
rangeOfString:
_defaultConfigurationPath
fileExistsAtPath:isDirectory:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
UTF8String
_initDataVaultIfNeededWithError:
writeToURL:error:
setAttributes:ofItemAtPath:error:
stringWithUTF8String:
stringByAppendingPathComponent:
saveConfigurationData:error:
removedProfileForExtensionBundleIdentifier:
profilesWithExtensionBundleIdentifier:
willHandleURL:responseCode:callerBundleIdentifier:
_configuration
_configurationVersion
_removedProfiles
Tq,R,N
defaultWorkspace
openSensitiveURL:withOptions:error:
isApplicationAvailableToOpenURL:error:
contextExtension
_contextExtension
T@"SOExtension",W,V_contextExtension
extensionsWithMatchingAttributes:error:
_soExtensionsForExtensions:
objectAtIndexedSubscript:
beginMatchingExtensionsWithAttributes:completion:
endMatchingExtensions:
_extensionFinderQueue
_matchingContext
@16@0:8
@24@0:8@16
@32@0:8@16@24
v24@0:8@16
v16@0:8
@"SOAuthorizationResultCore"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@?16
v24@0:8@?<v@?@"SOAuthorizationRequestParameters"@"NSError">16
@"NSXPCConnection"
@"NSXPCListenerEndpoint"
@"NSString"
v20@0:8B16
@40@0:8@16@24@?32
@?16@0:8
@"<SOServiceProtocol>"
@"SOAuthorizationRequestParameters"
v32@0:8@16@?24
v32@0:8@16@24
v32@0:8@"NSDictionary"16@?<v@?B@"NSError">24
v32@0:8@"SOAuthorizationCredential"16@"NSError"24
v32@0:8@"NSURL"16@?<v@?B>24
v32@0:8@"SOAuthorizationRequestParameters"16@?<v@?B@"NSError">24
v32@0:8@"NSXPCListenerEndpoint"16@?<v@?B@"NSError">24
v24@0:8@?<v@?@"SOAuthorizationCredential"@"NSError">16
v24@0:8@?<v@?B@"NSError">16
B24@0:8@"NSURL"16
@32@0:8@16^@24
@24@0:8^@16
@"SOExtensionServiceConnection"
@"<ASAuthorizationProviderExtensionAuthorizationRequestHandler>"
@"SOExtensionViewService"
@"ASAuthorizationProviderExtensionAuthorizationRequest"
{?=[8I]}16@0:8
@"NSUUID"
@"NSObject<OS_dispatch_queue>"
@"SORemoteExtensionViewController"
@"NSExtension"
@"NSArray"
@"<SOExtensionDelegate>"
q16@0:8
v24@0:8q16
@"SOAuthorizationParametersCore"
v40@0:8@16@24@32
B32@0:8@16@24
@"SOExtensionFinder"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSURL"
@"NSDictionary"
@"NSData"
@"NSMutableArray"
@"NSHTTPURLResponse"
B28@0:8^{__CFString=}16B24
i16@0:8
v20@0:8i16
@"SORemoteExtensionContext"
@"SOAuthorizationCredential"
@"NSError"
B32@0:8@16q24
B36@0:8@16q24B32
B44@0:8@16q24@32B40
v24@0:8@"SOUIAuthorizationViewController"16
v40@0:8@16q24@?32
v48@0:8@16@24@32@40
@"SOAuthorizationCore"
@"SOExtension"
@"SOUIAuthorizationViewController"
@"<SOAuthorizationDelegate>"
v56@0:8{?=[8I]}16@?48
v32@0:8@"NSUUID"16@?<v@?>24
B32@0:8@16^@24
@32@0:8@16q24
q40@0:8@16q24@32
B24@0:8^@16
@24@0:8q16
@"SOConfiguration"
@"SOConfigurationVersion"
