@(#)PROGRAM:AppSSO  PROJECT:AppSSO-1
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/Frameworks/AuthenticationServices.framework/AuthenticationServices
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/Frameworks/AuthenticationServices.framework/AuthenticationServices
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOUI.framework/AppSSOUI
softlink:o:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:o:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
softlink:r:path:/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
missing XPC endpoint
%{public}@: XPC connection already exists
%{public}@: failed to create XPC connection
%{public}@: XPC connection invalidated
%{public}@: XPC connection interrupted
%{public}@: new XPC connection
Failed to connect to AppSSO service
AppSSO service XPC error: %{public}@
Error getting host context %{public}@
Error getting synchronous host context %{public}@
%s %{public}@ on %@
SOAuthorizationOperationConfigurationRemoved requires extension built with newer SDK
failed to get host context to beginAuthorizationWithRequestParameters, error: %{public}@
calling extension API beginAuthorizationWithRequest, %{public}@
finished extension API beginAuthorizationWithRequest, %{public}@
failed to get host context to beginAuthorizationWithServiceXPCEndpoint, error: %{public}@
calling extension API cancelAuthorizationWithRequest, %{public}@
finished extension API cancelAuthorizationWithRequest, %{public}@
optional API cancelAuthorizationWithRequest is not implemented in extension
%s URL:%{private}@ on %@
failed to get host context to open URL, error: %{public}@
failed to get synchronous host context to open URL, error: %{public}@
Extension interrupted. Nilling out session ID
Failed to get remote context with error %{public}@
Notifying delegate %{public}@ that extension wants to show UI, hints = %{private}@
Notifying delegate %@ that extension has finished with credential: %{private}@, error: %{public}@
Using existing session for extension %@
Setting up new session for extension %@
Finished setting up new session for extension %{public}@ with error %{public}@ and session ID %{public}@
Instantiating view controller %@
Failed to instantiate view controller because of %{public}@
Passing session ID to remote view
Session with ID %{public}@ was unable to communicate with the remote service because of %{public}@
Session with ID %{public}@ was unable to get remote view service
Finished beginAuthorizationWithRequestParameters result: %d, error: %{public}@
Finished beginAuthorizationWithServiceXPCEndpoint result: %d, error: %{public}@
%s  on %@
Associated domain: failed to get extension bundle proxy at path: %{public}@
Associated domain: failed to get app proxy for extension: %{public}@
Associated domain: failed to get appID for the app at path: %{public}@
Associated domain: failed to get service details for the appID: %{public}@ with error: %{public}@
Associated domain: %{public}@ is approved
Associated domain: %{public}@ is not approved
Associated domain: for app %@: %@, appID: %@, services: %@
%s url: %{private}@ on %@
%{public}@ hasAssociatedDomainsApproved = %d
%s bundleIdentifier: %{public}@ on %@
extension not found: %{public}@, error: %{public}@
%s bundleIdentifier=%{public}@ on %@
%s %{public}@ => %{public}@ in %{public}@ on %@
restarting matching extensions because of error: %{public}@
%s extensions: %{public}@, new: %{public}@, removed: %{public}@ on %@
%{public}@: enqueueRequest: %p, %{public}@, queue count: %d
%{public}@: processNextRequest: queue count: %d
%{public}@: removeAllRequests: queue count: %d
%{public}@: processItem: %p
%{public}@: itemCompleted: %p
extensionSignatureValidated=%{public}s
no SOConfigurationManager!
%s extension API called on %@
%@: cancel -> doNotHandle
%@: cancel -> cancel
%@: cancel -> complete
%s extension API called, httpAuthorizationHeaders = %{private}@ on %@
%@: cancel -> completeWithHTTPAuthorizationHeaders
%s extension API called, httpResponse = %{private}@, httpBody = %{private}@ on %@
%@: cancel -> completeWithHTTPResponse
%s extension API called, error = %{public}@ on %@
%@: cancel -> completeWithError
%@, authorization has been already canceled
%@, authorization wants to display UI but it is not allowed
%@, authorization wants to display UI but the device screen is locked
AppSSOCore is not available
hints: %{public}@, error: %{public}@
%s operation = %{public}@, url = %{public}@, httpHeaders = %{public}@, httpBody = %{public}@, auditToken = %{public}@, delegate = %{public}@, enableEmbeddedAVC = %d on %@
originator will present authorization view controller
%@ is already authorizing => ignoring a new authorization request
beginAuthorizationWithRequestParameters: extensionBundleId = %{public}@, endpoint = %{public}@, error = %{public}@
loadExtensionWithBundleIdentifer: extension = %{public}@, error = %{public}@
requestAuthorizationViewControllerWithCompletion: remoteViewController = %{public}@, error = %{public}@
beginAuthorizationWithServiceXPCEndpoint: success = %d, error = %{public}@
%s request = %{public}@, extension = %{public}@ on %@
%@ already finished => ignoring cancel request
%s credentialCore = %{private}@, error = %{public}@, requestParametersCore = %{public}@, delegate = %{public}@ on %@
%@ already finished => ignoring finish request
checkApplicationStateBeforeFinishing = %d, profile = %{private}@
no SPI authorization delegate
calling SPI authorization delegate authorizationDidCancel
calling SPI authorization delegate authorizationDidNotHandle
calling SPI authorization delegate authorizationDidComplete
calling SPI authorization delegate authorization:didCompleteWithHTTPAuthorizationHeaders:
calling SPI authorization delegate authorization:didCompleteWithHTTPResponse:httpBody:
calling SPI authorization delegate authorization:didCompleteWithError: (error = %{public}@)
application not active => authorization pending until application activation
application activation %@=> finishing pending authorization
%s extension = %{public}@, extensionViewController = %{public}@ on %@
%s %{private}@, %{public}@ on %@
authorization viewController = %{public}@, extension viewController = %{public}@
calling SPI authorization delegate authorization:presentViewController:withCompletion:
finished SPI authorization delegate authorization:presentViewController:withCompletion: (success = %d, error = %{public}@)
%s %@ on %@
Loading view for view service
Connecting view service (%{public}@) to context (%{public}@)
Couldn't find child view controller for context (%{public}@)
Couldn't find view for child view controller (%{public}@)
Couldn't load view for child view controller (%{public}@, %{public}@)
Connecting child view controller (%{public}@) to view service (%{public}@)
%s saving new configuration=%{private}@ on %@
unable to save new configuration, invalid format: %{private}@
unexpected class in the configuration
profile for URL %{public}@ => %{public}@ in %{public}@
removed profile for extension bundle ID %{public}@ => %{public}@ in %{public}@
%s extensionBundleIdentifier: %{public}@ on %@
%s URL: %{private}@, callerBundleIdentifier: %{public}@ on %@
willHandleURL(host): checking associated domains again for URL: %{public}@, extension: %{public}@
willHandleURL(host): reloading configuration with updated associated domains for URL: %{public}@, extension: %{public}@
willHandleURL(host): %{private}@ callerBundleIdentifier: %{public}@ result: %{public}@
invalid config: %{private}@
invalid profile: %{private}@
failed to load config at %{public}@, error: %{public}@
%s reason = %@ on %@
Checking default path: %@
Removed configuration ignored for extension: %{public}@
removed profiles = %{private}@
%s reason = %{public}@, configuration = %{public}@ on %@
no extension available for profile (ignored): %{public}@
Associated domain: validation is ignored, using all URLs in AppSSO configuration
Associated domain: validation failed to find extension for profile: %{public}@, ignoring profile
Associated domain: validation skipped for extension: %{public}@
Associated domain: validation removed URL: %{public}@ because it is not a http scheme for extension %{public}@
Associated domain: validation removed URL: %{public}@ because it contains a wildcard in the host name for extension %{public}@
Associated domain: validation removed URL: %{public}@ because it has no approved associated domains for extensions %{public}@
Associated domain: validation failed for URL: %{public}@ because it has no approved associated domains for extensions %{public}@, it will be checked again when the extension is used
failed to create configuration directory at %{public}@: %{public}@
created configuration directory at %{public}@
failed to check the state of datavault: %{public}s
failed to convert to datavault: %{public}s
successfully created datavault at %{public}@
failed to change file attributes of file: %{public}@, error: %{public}@
config written to file: %{public}@, %@
failed to save config to file: %{public}@, error: %{public}@
extensions changed: %{public}@, new: %{public}@, removed: %{public}@
config file is unavailable: %{public}@
failed to get the simulator root path
Error getting remote context %{public}@
can not open URL %{private}@
opened URL %{private}@: success = %{public}@, error = %{public}@
can open URL %{private}@: result = %{public}@, error = %{public}@
extensionsWithMatchingAttributes: %{public}@, error: %{public}@
findExtensionsWithCompletion: %{public}@, error: %{public}@
findExtensionWithBundleIdentifier: %{public}@, error: %{public}@
extension matching is already in progress, ignoring request
beginMatchingExtensionsWithAttributes: %{public}@, error: %{public}@
beginMatchingExtensionsWithCompletion: %{public}@, error: %{public}@
extension matching not started, ignoring request
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
v8@?0
v16@?0@"NSError"8
xpcConnection
T@"NSXPCConnection",&,V_xpcConnection
serviceXpcEndpoint
T@"NSXPCListenerEndpoint",&,V_serviceXpcEndpoint
com.apple.AppSSO
SOExtensionServiceConnection
SOInternalProtocols
Unable to find class %s
/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
/System/Library/PrivateFrameworks/AppSSOCore.framework/Contents/MacOS/AppSSOCore
localizedExtensionBundleDisplayName
(null)
T@"NSString",R,N,V_localizedExtensionBundleDisplayName
service
T@"<SOServiceProtocol>",R,N,V_service
requestParameters
T@"SOAuthorizationRequestParameters",R,N,V_requestParameters
completionBlock
T@?,R,C,N,V_completionBlock
-[SORemoteExtensionContext beginAuthorizationWithRequestParameters:completion:]
required beginAuthorizationWithRequest is not implemented in extension
-[SORemoteExtensionContext beginAuthorizationWithServiceXPCEndpoint:completion:]
v24@?0@"SOAuthorizationRequestParameters"8@"NSError"16
-[SORemoteExtensionContext cancelAuthorizationWithCompletion:]
-[SORemoteExtensionContext openURL:completionHandler:]
-[SORemoteExtensionContext canOpenURL:]
v12@?0B8
-[SORemoteExtensionContext _disableAppSSOInCFNetwork]
viewService
T@"SOExtensionViewService",W,V_viewService
extensionViewController
T@"<ASAuthorizationProviderExtensionAuthorizationRequestHandler>",R,N
extensionAuthorizationRequest
T@"ASAuthorizationProviderExtensionAuthorizationRequest",R,N,V_extensionAuthorizationRequest
SORemoteExtensionContext
SOErrorHelper
ASAuthorizationProviderExtensionAuthorizationRequest
/System/Library/Frameworks/AuthenticationServices.framework/AuthenticationServices
/System/Library/Frameworks/AuthenticationServices.framework/Contents/MacOS/AuthenticationServices
com.apple.AppSSO.extension-queue-(%@)
connection to extension interrupted
v16@?0@"<NSCopying>"8
-[SOExtension requestAuthorizationViewControllerWithCompletion:]
-[SOExtension beginAuthorizationWithRequestParameters:completion:]
-[SOExtension beginAuthorizationWithServiceXPCEndpoint:completion:]
-[SOExtension cancelAuthorizationWithCompletion:]
-[SOExtension _setupSessionIfNecessaryWithCompletion:]
v24@?0@"NSUUID"8@"NSError"16
-[SOExtension _finishedSettingUpSession:]
v32@?0@"<NSCopying>"8@"UIViewController"16@"NSError"24
v20@?0B8@"NSError"12
-[SOExtension unload]
-[SOExtension checkAssociatedDomains]
application-identifier
-[SOExtension hasURLApprovedAssociatedDomain:]
<%@:%p, bundleID=%@, path=%@, associatedDomains=%@>
extension
T@"NSExtension",&,N,V_extension
extensionBundleIdentifier
T@"NSString",R,N
localizedExtensionDisplayName
containerAppPath
containerAppBundleIdentifier
associatedDomains
T@"NSArray",&,N,V_associatedDomains
extensionDelegate
T@"<SOExtensionDelegate>",W,N,V_extensionDelegate
SOExtension
operation
T@"NSString",C,N
T@"NSURL",&,N
httpHeaders
T@"NSDictionary",&,N
httpBody
T@"NSData",&,N
auditTokenData
useInternalExtensions
TB,N
responseCode
Tq,N,V_responseCode
authorizationParametersCore
T@"SOAuthorizationParametersCore",R,N
SOAuthorizationParametersCore
com.apple.AppSSO.SOExtensionManager.ExtensionsChanged
com.apple.AppSSO.extension-manager-queue
-[SOExtensionManager loadExtensionWithBundleIdentifer:completion:]
No AppSSO IdP extension found (internal error)
v24@?0@"SOExtension"8@"NSError"16
-[SOExtensionManager loadExtensionWithBundleIdentifier:]
-[SOExtensionManager loadInternalExtension]
-[SOExtensionManager beginMatchingExtensions]
-[SOExtensionManager endMatchingExtensions]
-[SOExtensionManager loadExtensions]
v24@?0@"NSArray"8@"NSError"16
-[SOExtensionManager unloadExtensions]
-[SOExtensionManager loadedExtensionWithBundleIdentifer:]
-[SOExtensionManager loadedInternalExtension]
-[SOExtensionManager isLoadedExtensionWithBundleIdentifer:]
-[SOExtensionManager _doEndMatchingExtensions]
+[SOExtensionManager _sendNotificationsLoadedExtensions:new:removed:]
extensions
removed
com.apple.AuthKitUI.AKAppSSOExtension
com.apple.ist.ds.appleconnect2.AppSSOExtension
com.apple.AppSSOKerberos.KerberosExtension
com.apple.ist.AppleConnect.App-SSO
com.apple.ist.AppleConnect.mini.App-SSO
loadedExtensions
T@"NSArray",R,N,V_loadedExtensions
SOExtensionManager
RequestedOperation
Realm
AuthorizationOptions
UseInternalExtensions
ResponseCode
CallerManaged
CallerTeamIdentifier
LocalizedCallerDisplayName
supportsSecureCoding
TB,R
T@"NSURL",C,N,V_url
requestedOperation
T@"NSString",C,N,V_requestedOperation
T@"NSDictionary",C,N,V_httpHeaders
T@"NSData",C,N,V_httpBody
realm
T@"NSString",C,N,V_realm
extensionData
T@"NSDictionary",C,N,V_extensionData
T@"NSData",&,N,V_auditTokenData
callerBundleIdentifier
T@"NSString",C,N,V_callerBundleIdentifier
authorizationOptions
T@"NSDictionary",&,N,V_authorizationOptions
TB,N,V_useInternalExtensions
callerManaged
TB,N,GisCallerManaged,V_callerManaged
callerTeamIdentifier
T@"NSString",C,N,V_callerTeamIdentifier
localizedCallerDisplayName
T@"NSString",C,N,V_localizedCallerDisplayName
processItemBlock
T@?,C,N,V_processItemBlock
SORequestQueue
httpAuthorizationHeaders
T@"NSDictionary",&,N,V_httpAuthorizationHeaders
httpResponse
T@"NSHTTPURLResponse",C,N,V_httpResponse
T@"NSData",&,N,V_httpBody
Configuration
Plugins
Realms
Signature Validated
Associated Domains Validated
Requests
Config Version
-[SODebugHints debugHintsWithCompletion:]
not internal build
@16@?0@8
SODebugConfiguration
SOUtils
ExtensionSignatureValidated
isExtensionSignatureValidated
TB,R,N
isAssociatedDomainValidated
SOPreferences
-[SOConfigurationManager init]
-[SOConfigurationManager saveConfigurationData:completion:]
SOConfigurationManager
-[SOAuthorizationRequest doNotHandle]
-[SOAuthorizationRequest cancel]
-[SOAuthorizationRequest complete]
-[SOAuthorizationRequest completeWithHTTPAuthorizationHeaders:]
-[SOAuthorizationRequest completeWithHTTPResponse:httpBody:]
-[SOAuthorizationRequest completeWithError:]
-[SOAuthorizationRequest presentAuthorizationViewControllerWithCompletion:]
Authorization has been already canceled
authorizationCanceled
TB,N,GisAuthorizationCanceled,V_authorizationCanceled
canceledAuthorizationCredential
T@"SOAuthorizationCredential",&,N,V_canceledAuthorizationCredential
canceledAuthorizationError
T@"NSError",&,N,V_canceledAuthorizationError
T@"NSString",&,N
TB,N,GisCallerManaged
SOAuthorizationRequest
SOAuthorizationCredential
ASAuthorizationErrorDomain
SOAuthorizationOptionCoreNoUserInterface
com.apple.AppSSO.AuthorizationError
Subcode
configuration_removed
userActionInitiated
initiatorOrigin
initiatingAction
removedProfileExtensionBundleIdentifier
-[SOAuthorization init]
-[SOAuthorization getAuthorizationHintsWithURL:responseCode:completion:]
v24@?0@"SOAuthorizationHintsCore"8@"NSError"16
-[SOAuthorization beginAuthorizationWithURL:httpHeaders:httpBody:]
-[SOAuthorization beginAuthorizationWithOperation:url:httpHeaders:httpBody:]
-[SOAuthorization beginAuthorizationWithParameters:]
v24@?0@"SORemoteExtensionViewController"8@"NSError"16
v32@?0@"NSString"8@"NSXPCListenerEndpoint"16@"NSError"24
v24@?0@"SOAuthorizationCredentialCore"8@"NSError"16
-[SOAuthorization cancelAuthorization]
-[SOAuthorization debugHintsWithCompletion:]
-[SOAuthorization _cancelAuthorization]
v24@?0@"SOAuthorizationCredential"8@"NSError"16
-[SOAuthorization _finishAuthorizationWithCredential:error:]
Invalid credential
-[SOAuthorization applicationDidBecomeActive:]
timeout 
-[SOAuthorization _extensionCleanup]
-[SOAuthorization authorizationDidCompleteWithCredential:error:]
-[SOAuthorization presentAuthorizationViewControllerWithHints:completion:]
no authorization delegate
-[SOAuthorization viewControllerDidCancel:]
delegate
T@"<SOAuthorizationDelegate>",W,V_delegate
delegateDispatchQueue
T@"NSObject<OS_dispatch_queue>",&
enableEmbeddedAuthorizationViewController
TB,N,V_enableEmbeddedAuthorizationViewController
-[SOAuthorization(Kerberos) realms]
SOAuthorization
SOAuthorizationCore
SOAuthorizationRequestParametersCore
SOAuthorizationCredentialCore
SOConfigurationClient
SOUIAuthorizationViewController
/System/Library/PrivateFrameworks/AppSSOUI.framework/AppSSOUI
/System/Library/PrivateFrameworks/AppSSOUI.framework/Contents/MacOS/AppSSOUI
extensionContext
T@"SORemoteExtensionContext",W,V_extensionContext
SOExtensionViewService
com.apple.AppSSO.SOConfigurationHost.ConfigurationChanged
-[SOConfigurationHost init]
-[SOConfigurationHost saveConfigurationData:error:]
NewConfiguration
invalid configuration format
-[SOConfigurationHost profileForURL:responseCode:]
-[SOConfigurationHost removedProfileForExtensionBundleIdentifier:]
-[SOConfigurationHost configurationForClientWithError:]
-[SOConfigurationHost profilesWithExtensionBundleIdentifier:]
-[SOConfigurationHost realms]
-[SOConfigurationHost willHandleURL:responseCode:callerBundleIdentifier:]
+[SOConfigurationHost _loadProfilesFromDict:]
Profiles
-[SOConfigurationHost _loadConfigForFirstTime]
-[SOConfigurationHost _reloadConfigWithReason:]
-[SOConfigurationHost _configurationLoadedWithReason:]
reason
-[SOConfigurationHost _checkExtensionsExistenceForProfiles:]
-[SOConfigurationHost _checkAssociatedDomainForProfiles:]
http
https
-[SOConfigurationHost _initDataVaultIfNeededWithError:]
mobile
ExtensibleSSO
failed to check the state of datavault: %s
failed to convert to datavault: %s
-[SOConfigurationHost _saveConfigToFile:error:]
-[SOConfigurationHost _extensionsLoaded:]
FirstLoad
ExtensionsChanged
ModifiedByMDM
/var/mobile/Library/ExtensibleSSO/Configuration
IPHONE_SIMULATOR_ROOT
%@/%@
com.apple.AppSSO.configuration.plist
configVersion
Tq,R,N
SOConfigurationHost
SOConfigurationVersion
SOConfiguration
SOFullProfile
-[SOHostExtensionContext openURL:completionHandler:]
com.apple.AppSSO.launch-origin
-[SOHostExtensionContext canOpenURL:completionHandler:]
contextExtension
T@"SOExtension",W,V_contextExtension
SOHostExtensionContext
AppSSOClientImpl
appSSO_init
appSSO_willPerform
appSSO_performResponse
appSSO_performResponseCredential
appSSO_willHandle
appSSO_handleResponse
appSSO_handleResponseCredential
com.apple.AppSSO.extension-finder-queue
-[SOExtensionFinder findExtensionsWithCompletion:]
com.apple.AppSSO.idp-extension
-[SOExtensionFinder findExtensionWithBundleIdentifier:completion:]
No valid IdP extension with bundle ID: %@
More than one IdP extension with bundle ID: %@
-[SOExtensionFinder beginMatchingExtensionsWithCompletion:]
-[SOExtensionFinder endMatchingExtensions]
SOExtensionFinder
SORemoteExtensionServiceProtocol
SOExtensionServiceProtocol
NSObject
SOExtensionServiceConnection
SOAuthorizationHints
SORequestQueueItem
SOHostExtensionContextProtocol
SOExtensionContextProtocol
SORemoteExtensionContextProtocol
SORemoteExtensionContext
SOExtensionContext
SOExtension
SOAuthorizationParameters
Internal
SOExtensionManager
SOAuthorizationRequestParameters
NSSecureCoding
NSCoding
SORequestQueue
SOAuthorizationCredential
SODebugHints
SOPreferences
SOConfigurationManager
SOAuthorizationRequest
SOAuthorization
SOExtensionDelegate
SOUIAuthorizationViewControllerDelegate
Kerberos
SOHostExtensionViewProtocol
SOExtensionViewProtocol
SORemoteExtensionViewProtocol
SOExtensionViewService
SORemoteExtensionViewController
SOConfigurationHost
SOHostExtensionContext
SOExtensionFinder
init
setServiceXpcEndpoint:
_connectToService
xpcConnection
serviceXpcEndpoint
initWithListenerEndpoint:
setXpcConnection:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
beginAuthorizationWithCompletion:
interfaceWithInternalProtocol:
setRemoteObjectInterface:
setInvalidationHandler:
setInterruptionHandler:
resume
remoteObjectProxyWithErrorHandler:
.cxx_destruct
_xpcConnection
_serviceXpcEndpoint
localizedExtensionBundleDisplayName
dictionaryWithObjects:forKeys:count:
initWithAuthorizationHintsCore:
_localizedExtensionBundleDisplayName
initWithService:requestParameters:completionBlock:
service
requestParameters
completionBlock
_service
_requestParameters
_completionBlock
presentAuthorizationViewControllerWithHints:completion:
authorizationDidCompleteWithCredential:error:
openURL:completionHandler:
canOpenURL:completionHandler:
interfaceWithProtocol:
beginAuthorizationWithRequestParameters:completion:
beginAuthorizationWithServiceXPCEndpoint:completion:
cancelAuthorizationWithCompletion:
_principalObject
_auxiliaryConnection
synchronousRemoteObjectProxyWithErrorHandler:
extensionViewController
beginAuthorizationWithRequest:
internalErrorWithMessage:
requestedOperation
isEqualToString:
errorWithCode:
hostContextWithError:
_disableAppSSOInCFNetwork
initWithRequestParameters:hostExtensionContext:
initWithAuthorizationRequest:
authorizationRequest
setAuthorizationCanceled:
setCanceledAuthorizationCredential:
setCanceledAuthorizationError:
cancelAuthorizationWithRequest:
canceledAuthorizationCredential
canceledAuthorizationError
synchronousHostContextWithError:
_disableAppSSO
_extensionAuxiliaryHostProtocol
_extensionAuxiliaryVendorProtocol
canOpenURL:
viewService
setViewService:
extensionAuthorizationRequest
_extensionServiceConnection
_viewService
_extensionAuthorizationRequest
localizedExtensionDisplayName
stringWithFormat:
cStringUsingEncoding:
_setupExtension
errorWithCode:message:
extension
setRequestInterruptionBlock:
_setupSessionIfNecessaryWithCompletion:
_beginAuthorizationWithRequestParameters:completion:
_beginAuthorizationWithServiceXPCEndpoint:completion:
_contextForSession
remoteContextWithError:
extensionDelegate
setContextExtension:
_setupSessionWithCompletion:
_setupSessionHelperForIOSWithCompletion:
_connectContextToSessionWithRequestIdentifier:completion:
instantiateViewControllerWithInputItems:listenerEndpoint:connectionHandler:
serviceViewControllerProxyWithErrorHandler:
connectToContextWithSessionID:completion:
_extensionContextForUUID:
auditToken
cancelExtensionRequestWithIdentifier:
_plugIn
containingUrl
path
objectForInfoDictionaryKey:
copy
containerAppPath
bundleWithPath:
bundleIdentifier
identifier
hasAssociatedDomainsApproved
_extensionBundle
bundleURL
pluginKitProxyForURL:
containingBundle
entitlementValueForKey:ofClass:
initWithServiceType:applicationIdentifier:domain:
serviceDetailsWithServiceSpecifier:error:
array
countByEnumeratingWithState:objects:count:
serviceSpecifier
domain
isApproved
addObject:
associatedDomains
host
containsObject:
count
extensionBundleIdentifier
isEqualToExtension:
initWithExtension:
requestAuthorizationViewControllerWithCompletion:
_finishedSettingUpSession:
auditTokenForSession
unload
containerAppBundleIdentifier
checkAssociatedDomains
hasURLApprovedAssociatedDomain:
setExtension:
setAssociatedDomains:
setExtensionDelegate:
_sessionID
_queue
_remoteViewController
_extension
_associatedDomains
_extensionDelegate
setUseInternalExtensions:
authorizationParametersCore
operation
setOperation:
setUrl:
httpHeaders
setHttpHeaders:
httpBody
setHttpBody:
auditTokenData
setAuditTokenData:
useInternalExtensions
responseCode
setResponseCode:
_authorizationParametersCore
_responseCode
unloadExtensions
dealloc
_isMatchedExtension:forBundleIdentifier:
findExtensionWithBundleIdentifier:completion:
loadExtensionWithBundleIdentifer:completion:
internalExtensionBundleIdentifier
loadExtensionWithBundleIdentifier:
_doBeginMatchingExtensions
_doEndMatchingExtensions
_doLoadExtensions
findExtensionsWithCompletion:
loadedExtensions
loadedExtensionWithBundleIdentifer:
endMatchingExtensions
beginMatchingExtensions
mutableCopy
removeObject:
_sendNotificationsLoadedExtensions:new:removed:
beginMatchingExtensionsWithCompletion:
defaultCenter
postNotificationName:object:userInfo:
internalExtensionsBundleIdentifiers
sharedInstance
isInternalExtensionBundleIdentifier:
isAppleConnectExtensionBundleIdentifier:
isTiburonExtensionBundleIdentifier:
loadInternalExtension
loadExtensions
loadedInternalExtension
isLoadedExtensionWithBundleIdentifer:
_extensionManagerQueue
_extensionFinder
_loadedExtensions
authorizationOptions
realm
extensionData
callerBundleIdentifier
isCallerManaged
callerTeamIdentifier
localizedCallerDisplayName
decodeObjectOfClass:forKey:
setWithObjects:
decodeObjectOfClasses:forKey:
boolValue
integerValue
encodeObject:forKey:
numberWithBool:
numberWithInteger:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
initWithAuthorizationRequestParametersCore:
setRequestedOperation:
setRealm:
setExtensionData:
setCallerBundleIdentifier:
setAuthorizationOptions:
setCallerManaged:
setCallerTeamIdentifier:
setLocalizedCallerDisplayName:
_useInternalExtensions
_callerManaged
_url
_requestedOperation
_httpHeaders
_httpBody
_realm
_extensionData
_auditTokenData
_callerBundleIdentifier
_authorizationOptions
_callerTeamIdentifier
_localizedCallerDisplayName
dictionary
objectForKeyedSubscript:
initWithIdentifier:
setObject:forKeyedSubscript:
_processItem:
_itemCompleted
firstObject
removeAllObjects
removeObjectAtIndex:
requestQueueWithIdentifier:
enqueueRequest:
processNextRequest
removeAllRequestsWithBlock:
processItemBlock
setProcessItemBlock:
_identifier
_processingItem
_processItemBlock
httpAuthorizationHeaders
httpResponse
setHttpAuthorizationHeaders:
setHttpResponse:
_httpAuthorizationHeaders
_httpResponse
isInternalBuild
defaultManager
configurationForClientWithError:
mapArray:usingBlock:
realms
isExtensionSignatureValidated
isAssociatedDomainValidated
configVersion
stringValue
debugHintsWithCompletion:
boolValueForKey:defaultValue:
saveConfigurationData:error:
saveConfigurationData:completion:
isAuthorizationCanceled
_isUserInterfaceAllowed
errorWithDomain:code:userInfo:
code
userInfo
intValue
doNotHandle
cancel
complete
completeWithHTTPAuthorizationHeaders:
completeWithHTTPResponse:httpBody:
completeWithError:
presentAuthorizationViewControllerWithCompletion:
_hostExtensionContext
_authorizationCanceled
_canceledAuthorizationCredential
_canceledAuthorizationError
removeObserver:
canPerformAuthorizationWithURL:responseCode:
canPerformAuthorizationWithURL:responseCode:useInternalExtensions:
delegateDispatchQueue
setDelegateDispatchQueue:
getAuthorizationHintsWithURL:responseCode:completion:
beginAuthorizationWithParameters:
authorization:presentViewController:withCompletion:
requestParametersCore
initWithAuthorizationParameters:
_finishAuthorizationWithCredential:error:
beginAuthorizationWithParameters:completion:
_cancelAuthorization
cancelAuthorization
initWithAuthorizationCredential:
defaultClient
profileForURL:responseCode:
setRequestParametersCore:
_extensionCleanup
delegate
error:hasCode:
authorizationDidCancel:
authorizationDidNotHandle:
authorization:didCompleteWithError:
authorizationDidComplete:
authorization:didCompleteWithHTTPAuthorizationHeaders:
authorization:didCompleteWithHTTPResponse:httpBody:
sharedApplication
applicationState
applicationDidBecomeActive:
addObserver:selector:name:object:
_applicationActivationWithTimeout:
performBlockOnDelegateQueue:
initWithExtensionViewController:hints:
setDelegate:
viewControllerDidCancel:
beginAuthorizationWithURL:httpHeaders:httpBody:
beginAuthorizationWithOperation:url:httpHeaders:httpBody:
enableEmbeddedAuthorizationViewController
setEnableEmbeddedAuthorizationViewController:
_authorizationCore
_extensionViewController
_pendingFinishAuthorizationBlock
_enableEmbeddedAuthorizationViewController
_delegate
setView:
_remoteViewControllerInterface
_exportedInterface
_sharedExtensionContextVendor
setExtensionContext:
extensionContext
_connectChildView
view
addChildViewController:
addSubview:
setTranslatesAutoresizingMaskIntoConstraints:
topAnchor
constraintEqualToAnchor:
bottomAnchor
leadingAnchor
trailingAnchor
arrayWithObjects:count:
activateConstraints:
didMoveToParentViewController:
loadView
remoteViewControllerInterface
exportedInterface
_extensionContext
serviceViewControllerInterface
_loadConfigForFirstTime
initWithMode:
_loadProfilesFromDict:
_saveConfigToFile:error:
_checkAssociatedDomainForProfiles:
initWithProfiles:
increaseVersionWithMessage:
parameterErrorWithMessage:
_checkNewVersion
profiles
copyProfileForClient
copyProfile
willHandleURL:responseCode:callerBundleIdentifier:profile:
type
arrayWithObject:
_reloadConfigWithReason:
stringWithHandleResult:
version
initWithProfileData:
dictionaryWithContentsOfURL:error:
_isConfigFileAvailable
_startKeyBagObserverForReloadingConfiguration
_extensionsLoaded:
_stringWithReason:
_defaultConfigurationFile
fileURLWithPath:
_loadProfilesFromURL:
_checkExtensionsExistenceForProfiles:
URLWithString:
_configurationLoadedWithReason:
empty
setAppSSOUnavailable
checkVersion
URLPrefix
scheme
removeURLPrefix:
rangeOfString:
_defaultConfigurationPath
fileExistsAtPath:isDirectory:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
UTF8String
_initDataVaultIfNeededWithError:
writeToURL:error:
setAttributes:ofItemAtPath:error:
stringWithUTF8String:
stringByAppendingPathComponent:
removedProfileForExtensionBundleIdentifier:
profilesWithExtensionBundleIdentifier:
willHandleURL:responseCode:callerBundleIdentifier:
_configuration
_configurationVersion
_removedProfiles
defaultWorkspace
openSensitiveURL:withOptions:error:
isApplicationAvailableToOpenURL:error:
contextExtension
_contextExtension
extensionsWithMatchingAttributes:error:
_soExtensionsForExtensions:
objectAtIndexedSubscript:
beginMatchingExtensionsWithAttributes:completion:
endMatchingExtensions:
_extensionFinderQueue
_matchingContext
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@?16
v24@0:8@?<v@?@"SOAuthorizationRequestParameters"@"NSError">16
@24@0:8@16
v24@0:8@16
v16@0:8
@"NSXPCConnection"
@"NSXPCListenerEndpoint"
@"NSString"
@40@0:8@16@24@?32
@?16@0:8
@"<SOServiceProtocol>"
@"SOAuthorizationRequestParameters"
v32@0:8@16@?24
v32@0:8@16@24
v32@0:8@"NSDictionary"16@?<v@?B@"NSError">24
v32@0:8@"SOAuthorizationCredential"16@"NSError"24
v32@0:8@"NSURL"16@?<v@?B>24
v32@0:8@"SOAuthorizationRequestParameters"16@?<v@?B@"NSError">24
v32@0:8@"NSXPCListenerEndpoint"16@?<v@?B@"NSError">24
v24@0:8@?<v@?@"SOAuthorizationCredential"@"NSError">16
B24@0:8@"NSURL"16
@24@0:8^@16
@"SOExtensionServiceConnection"
@"SOExtensionViewService"
@"ASAuthorizationProviderExtensionAuthorizationRequest"
{?=[8I]}16@0:8
@"NSUUID"
@"NSObject<OS_dispatch_queue>"
@"SORemoteExtensionViewController"
@"NSExtension"
@"NSArray"
@"<SOExtensionDelegate>"
v20@0:8B16
q16@0:8
v24@0:8q16
@"SOAuthorizationParametersCore"
v40@0:8@16@24@32
B32@0:8@16@24
@"SOExtensionFinder"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSURL"
@"NSDictionary"
@"NSData"
@"NSMutableArray"
@"NSHTTPURLResponse"
B28@0:8^{__CFString=}16B24
@32@0:8@16@24
@"<SOHostExtensionContextProtocol>"
@"SOAuthorizationCredential"
@"NSError"
B32@0:8@16q24
B36@0:8@16q24B32
v24@0:8@"SOUIAuthorizationViewController"16
v40@0:8@16q24@?32
v48@0:8@16@24@32@40
@"SOAuthorizationCore"
@"SOExtension"
@"<SOAuthorizationDelegate>"
v32@0:8@"NSUUID"16@?<v@?>24
@"SORemoteExtensionContext"
B32@0:8@16^@24
@32@0:8@16q24
q40@0:8@16q24@32
B24@0:8^@16
@24@0:8q16
@"SOConfiguration"
@"SOConfigurationVersion"
