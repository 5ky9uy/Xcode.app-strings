missing XPC endpoint
%{public}@: XPC connection already exists
%{public}@: failed to create XPC connection
%{public}@: XPC connection invalidated
%{public}@: XPC connection interrupted
%{public}@: new XPC connection
Failed to connect to AppSSO service
AppSSO service XPC error: %{public}@
Error getting host context %@
%s %{public}@ on %@
calling extension API beginAuthorizationWithRequest, %{public}@
finished extension API beginAuthorizationWithRequest, %{public}@
calling extension API cancelAuthorizationWithRequest, %{public}@
finished extension API cancelAuthorizationWithRequest, %{public}@
optional API cancelAuthorizationWithRequest is not implemented in extension
Extension interrupted. Nilling out session ID
Failed to get remote context with error %@
Notifying delegate %@ that extension wants to show UI, hints = %@
Notifying delegate %@ that extension has finished with credential: %@, error:  %@
Using existing session for extension %@
Setting up new session for extension %@
Finished setting up new session for extension %@ with error %@ and session ID %@
Instantiating view controller %@
Failed to instantiate view controller because of %@
Passing session ID to remote view
Session with ID %@ was unable to communicate with the remote service because of %@
Session with ID %@ was unable to get remote view service
Finished beginAuthorizationWithRequestParameters result: %d, error: %@
Finished beginAuthorizationWithServiceXPCEndpoint result: %d, error: %@
failed to get extension bundle proxy at path: %@
failed to get app proxy for extension: %@
_SWCGetServiceInfo() failed with error: %@
associated domain %@ is not approved, flags: 0x%X
associated domain %@ is approved, flags: 0x%X
Associated domain URLs for app %@: %@, services: %@
%s url: %@ on %@
%s bundleIdentifier: %@ on %@
extension not found: %@, error: %@
%s bundleIdentifier=%@ on %@
%s %{public}@ => %{public}@ in %{public}@ on %@
%s  on %@
matchingExtensions:%@, error: %@
%s extensions: %@, new: %@, removed: %@ on %@
extensionSignatureValidated=%s
associatedDomainValidated=%s
no SOConfigurationManager!
%s extension API called on %@
%@: cancel -> doNotHandle
%@: cancel -> cancel
%@: cancel -> complete
%s extension API called, httpAuthorizationHeaders = %{public}@ on %@
%@: cancel -> completeWithHTTPAuthorizationHeaders
%s extension API called, httpResponse = %{public}@, httpBody = %{public}@ on %@
%@: cancel -> completeWithHTTPResponse
%s extension API called, error = %{public}@ on %@
%@: cancel -> completeWithError
%@, authorization has been already canceled
Failed to get host extension context with error = %@
AppSSOCore is not available
%s operation = %{public}@, url = %{public}@, httpHeaders = %{public}@, httpBody = %{public}@, auditToken = %{public}@, delegate = %{public}@, enableEmbeddedAVC = %d on %@
originator will present authorization view controller
%@ is already authorizing => ignoring a new authorization request
beginAuthorizationWithRequestParameters: extensionBundleId = %{public}@, endpoint = %{public}@, error = %{public}@
loadExtensionWithBundleIdentifer: extension = %{public}@, error = %{public}@
requestAuthorizationViewControllerWithCompletion: remoteViewController = %{public}@, error = %{public}@
beginAuthorizationWithServiceXPCEndpoint: success = %d, error = %{public}@
%s request = %{public}@, extension = %{public}@ on %@
%@ already finished => ignoring cancel request
%s credentialCore = %{private}@, error = %{public}@, requestParametersCore = %{public}@, delegate = %{public}@ on %@
%@ already finished => ignoring finish request
no SPI authorization delegate
calling SPI authorization delegate authorizationDidCancel
calling SPI authorization delegate authorizationDidNotHandle
calling SPI authorization delegate authorization:didCompleteWithError:(%@)
calling SPI authorization delegate authorizationDidComplete
calling SPI authorization delegate authorization:didCompleteWithHTTPAuthorizationHeaders:
calling SPI authorization delegate authorization:didCompleteWithHTTPResponse:httpBody:
calling SPI authorization delegate authorization:didCompleteWithError:
%s extension = %{public}@, extensionViewController = %{public}@ on %@
%s %@, %@ on %@
authorization viewController = %{public}@, extension viewController = %{public}@
Loading view for view service
Connecting view service (%@) to context (%@)
Connecting child view controller (%@) to view service (%@)
Couldn't find child view controller for context (%@)
%s saving new configuration=%@ on %@
unable to save new configuration, invalid format: %@
unexpected class in the configuration
profile for URL %@ => %@ in %@
%s extensionBundleIdentifier: %@ on %@
%s URL: %@, callerBundleIdentifier: %@ on %@
willHandleURL(host): %@ callerBundleIdentifier: %@ result: %@
invalid config: %@
invalid profile: %@
failed to load config at URL:%@, error: %@
%s reason = %@ on %@
no extension available for profile (ignored): %@
associated domain validation is ignored, using all URLs in AppSSO configuration
failed to find extension for profile: %@, ignoring profile
removing URL: %@ because it has no approved associated domains for extensions %@
failed to create configuration directory at %@: %@
created configuration directory at %@
failed to check the state of datavault: %s
failed to convert to datavault: %s
successfully created datavault at %@
config written to file: %@
failed to save config to file: %@, error: %@
extensions changed: %@, new: %@, removed: %@
config file is unavailable: %@
Error getting remote context %@
%s %@ on %@
Finding extensions failed with error %@
Found extension %@
extension matching is already in progress, ignoring request
extension matching not started, ignoring request
%s matchingExtensions:%@, error: %@ on %@
Matching failed with error %@
Detected %lu AppSSO IdP extension(s)
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
v8@?0
v16@?0@"NSError"8
xpcConnection
T@"NSXPCConnection",&,V_xpcConnection
serviceXpcEndpoint
T@"NSXPCListenerEndpoint",&,V_serviceXpcEndpoint
com.apple.AppSSO
SOExtensionServiceConnection
SOInternalProtocols
Unable to find class %s
/System/Library/PrivateFrameworks/AppSSOCore.framework/AppSSOCore
service
T@"<SOServiceProtocol>",R,N,V_service
requestParameters
T@"SOAuthorizationRequestParameters",R,N,V_requestParameters
completionBlock
T@?,R,C,N,V_completionBlock
-[SORemoteExtensionContext beginAuthorizationWithRequestParameters:completion:]
required beginAuthorizationWithRequest is not implemented in extension
-[SORemoteExtensionContext beginAuthorizationWithServiceXPCEndpoint:completion:]
v24@?0@"SOAuthorizationRequestParameters"8@"NSError"16
-[SORemoteExtensionContext cancelAuthorizationWithCompletion:]
-[SORemoteExtensionContext _disableAppSSOInCFNetwork]
viewService
T@"SOExtensionViewService",W,V_viewService
extensionViewController
T@"<ASAuthorizationProviderExtensionAuthorizationRequestHandler>",R,N
extensionAuthorizationRequest
T@"ASAuthorizationProviderExtensionAuthorizationRequest",R,N,V_extensionAuthorizationRequest
SORemoteExtensionContext
SOErrorHelper
ASAuthorizationProviderExtensionAuthorizationRequest
/System/Library/Frameworks/AuthenticationServices.framework/AuthenticationServices
com.apple.AppSSO.extension-queue-(%@)
connection to extension interrupted
v16@?0@"<NSCopying>"8
-[SOExtension requestAuthorizationViewControllerWithCompletion:]
-[SOExtension beginAuthorizationWithRequestParameters:completion:]
-[SOExtension beginAuthorizationWithServiceXPCEndpoint:completion:]
-[SOExtension cancelAuthorizationWithCompletion:]
-[SOExtension _setupSessionIfNecessaryWithCompletion:]
v24@?0@"NSUUID"8@"NSError"16
-[SOExtension _finishedSettingUpSession:]
v32@?0@"<NSCopying>"8@"UIViewController"16@"NSError"24
v20@?0B8@"NSError"12
-[SOExtension unload]
-[SOExtension checkAssociatedDomains]
%@.%@
-[SOExtension hasURLApprovedAssociatedDomain:]
<%@:%p, bundleID=%@, path=%@, associatedDomains=%@>
extension
T@"NSExtension",&,N,V_extension
extensionBundleIdentifier
T@"NSString",R,N
extensionName
containerAppPath
containerAppBundleIdentifier
associatedDomains
T@"NSArray",&,N,V_associatedDomains
extensionDelegate
T@"<SOExtensionDelegate>",W,N,V_extensionDelegate
SOExtension
operation
T@"NSString",C,N
T@"NSURL",&,N
httpHeaders
T@"NSDictionary",&,N
httpBody
T@"NSData",&,N
auditTokenData
useInternalExtensions
TB,N
authorizationParametersCore
T@"SOAuthorizationParametersCore",R,N
SOAuthorizationParametersCore
com.apple.AppSSO.SOExtensionManager.ExtensionsChanged
com.apple.AppSSO.extension-manager-queue
-[SOExtensionManager loadExtensionWithBundleIdentifer:completion:]
No AppSSO IdP extension found (internal error)
v24@?0@"SOExtension"8@"NSError"16
-[SOExtensionManager loadExtensionWithBundleIdentifier:]
-[SOExtensionManager loadInternalExtension]
com.apple.AuthKitUI.ios.SSOExtension
-[SOExtensionManager beginMatchingExtensions]
-[SOExtensionManager endMatchingExtensions]
-[SOExtensionManager loadExtensions]
v24@?0@"NSArray"8@"NSError"16
-[SOExtensionManager unloadExtensions]
-[SOExtensionManager loadedExtensionWithBundleIdentifer:]
-[SOExtensionManager loadedInternalExtension]
-[SOExtensionManager isLoadedExtensionWithBundleIdentifer:]
-[SOExtensionManager _doEndMatchingExtensions]
+[SOExtensionManager _sendNotificationsLoadedExtensions:new:removed:]
extensions
removed
com.apple.AuthKitUI.AKAppSSOExtension
com.apple.ist.ds.appleconnect2.AppSSOExtension
com.apple.AppSSO.KerberosPlugin-macOS
com.apple.ist.AppleConnect.App-SSO
com.apple.AppSSO.KerberosPlugin-iOS
loadedExtensions
T@"NSArray",R,N,V_loadedExtensions
SOExtensionManager
(null)
RequestedOperation
Realm
AuthorizationOptions
UseInternalExtensions
supportsSecureCoding
TB,R
T@"NSURL",C,N,V_url
requestedOperation
T@"NSString",C,N,V_requestedOperation
T@"NSDictionary",C,N,V_httpHeaders
T@"NSData",C,N,V_httpBody
realm
T@"NSString",C,N,V_realm
extensionData
T@"NSDictionary",C,N,V_extensionData
T@"NSData",&,N,V_auditTokenData
callerBundleIdentifier
T@"NSString",C,N,V_callerBundleIdentifier
authorizationOptions
T@"NSDictionary",&,N,V_authorizationOptions
TB,N,V_useInternalExtensions
processItemBlock
T@?,C,N,V_processItemBlock
httpAuthorizationHeaders
T@"NSDictionary",&,N,V_httpAuthorizationHeaders
httpResponse
T@"NSHTTPURLResponse",C,N,V_httpResponse
T@"NSData",&,N,V_httpBody
Configuration
Plugins
Realms
Signature Validated
Associated Domains Validated
Requests
Config Version
-[SODebugHints debugHintsWithCompletion:]
not internal build
@16@?0@8
SODebugConfiguration
SOUtils
ExtensionSignatureValidated
AssociatedDomainValidated
isExtensionSignatureValidated
TB,R,N
isAssociatedDomainValidated
SOPreferences
-[SOConfigurationManager init]
-[SOConfigurationManager saveConfigurationData:completion:]
SOConfigurationManager
-[SOAuthorizationRequest doNotHandle]
-[SOAuthorizationRequest cancel]
-[SOAuthorizationRequest complete]
-[SOAuthorizationRequest completeWithHTTPAuthorizationHeaders:]
-[SOAuthorizationRequest completeWithHTTPResponse:httpBody:]
-[SOAuthorizationRequest completeWithError:]
-[SOAuthorizationRequest presentAuthorizationViewControllerWithCompletion:]
Authorization has been already canceled
EnableCancelButton
authorizationCanceled
TB,N,GisAuthorizationCanceled,V_authorizationCanceled
canceledAuthorizationCredential
T@"SOAuthorizationCredential",&,N,V_canceledAuthorizationCredential
canceledAuthorizationError
T@"NSError",&,N,V_canceledAuthorizationError
T@"NSString",&,N
SOAuthorizationRequest
SOAuthorizationCredential
com.apple.AppSSO.AuthorizationError
Subcode
userActionInitiated
initiatorOrigin
initiatingAction
-[SOAuthorization init]
-[SOAuthorization beginAuthorizationWithURL:httpHeaders:httpBody:]
-[SOAuthorization beginAuthorizationWithOperation:url:httpHeaders:httpBody:]
-[SOAuthorization beginAuthorizationWithParameters:]
v24@?0@"SORemoteExtensionViewController"8@"NSError"16
v32@?0@"NSString"8@"NSXPCListenerEndpoint"16@"NSError"24
v24@?0@"SOAuthorizationCredentialCore"8@"NSError"16
-[SOAuthorization cancelAuthorization]
-[SOAuthorization debugHintsWithCompletion:]
-[SOAuthorization _cancelAuthorization]
v24@?0@"SOAuthorizationCredential"8@"NSError"16
-[SOAuthorization _finishAuthorizationWithCredential:error:]
Invalid credential
-[SOAuthorization _extensionCleanup]
-[SOAuthorization authorizationDidCompleteWithCredential:error:]
-[SOAuthorization presentAuthorizationViewControllerWithHints:completion:]
no authorization delegate
-[SOAuthorization viewControllerDidCancel:]
delegate
T@"<SOAuthorizationDelegate>",W,V_delegate
delegateDispatchQueue
T@"NSObject<OS_dispatch_queue>",&
enableEmbeddedAuthorizationViewController
TB,N,V_enableEmbeddedAuthorizationViewController
-[SOAuthorization(Kerberos) realms]
SOAuthorization
SOAuthorizationCore
SOAuthorizationRequestParametersCore
SOAuthorizationCredentialCore
SOUIAuthorizationViewController
/System/Library/PrivateFrameworks/AppSSOUI.framework/AppSSOUI
childView
H:|[childView]|
V:|[childView]|
extensionContext
T@"SORemoteExtensionContext",W,V_extensionContext
SOExtensionViewService
-[SOConfigurationHost init]
-[SOConfigurationHost saveConfigurationData:error:]
NewConfiguration
invalid configuration format
-[SOConfigurationHost profileForURL:]
-[SOConfigurationHost configurationForClientWithError:]
-[SOConfigurationHost profilesWithExtensionBundleIdentifier:]
-[SOConfigurationHost realms]
-[SOConfigurationHost willHandleURL:callerBundleIdentifier:]
+[SOConfigurationHost _loadProfilesFromDict:]
Profiles
-[SOConfigurationHost _loadConfigForFirstTime]
-[SOConfigurationHost _reloadConfigWithReason:]
%@/%@
/var/mobile/Library/ExtensibleSSO/Configuration
com.apple.AppSSO.configuration.plist
-[SOConfigurationHost _configurationLoadedWithReason:]
-[SOConfigurationHost _checkExtensionsExistenceForProfiles:]
-[SOConfigurationHost _checkAssociatedDomainForProfiles:]
-[SOConfigurationHost _initDataVaultIfNeededWithError:]
ExtensibleSSO
failed to check the state of datavault: %s
failed to convert to datavault: %s
-[SOConfigurationHost _saveConfigToFile:error:]
-[SOConfigurationHost _extensionsLoaded:]
FirstLoad
ExtensionsChanged
ModifiedByMDM
configVersion
Tq,R,N
SOConfigurationHost
SOConfigurationVersion
SOConfiguration
SOFullProfile
contextExtension
T@"SOExtension",W,V_contextExtension
SOHostExtensionContext
AppSSOClientImpl
appSSO_init
appSSO_willPerform
appSSO_performResponse
appSSO_performResponseCredential
com.apple.AppSSO.extension-finder-queue
-[SOExtensionFinder findExtensionsWithCompletion:]
com.apple.AppSSO.idp-extension
-[SOExtensionFinder findExtensionWithBundleIdentifier:completion:]
No valid IdP extension with bundle ID: %@
More than one IdP extension with bundle ID: %@
-[SOExtensionFinder beginMatchingExtensionsWithCompletion:]
-[SOExtensionFinder endMatchingExtensions]
-[SOExtensionFinder _didFindExtensions:error:completion:]
SOExtensionFinder
?@(#)PROGRAM:AppSSO  PROJECT:AppSSO-1
SORemoteExtensionServiceProtocol
SOExtensionServiceProtocol
NSObject
SOExtensionServiceConnection
SORequestQueueItem
SOHostExtensionContextProtocol
SOExtensionContextProtocol
SORemoteExtensionContextProtocol
SORemoteExtensionContext
SOExtension
SOAuthorizationParameters
Internal
SOExtensionManager
SOAuthorizationRequestParameters
NSSecureCoding
NSCoding
SORequestQueue
SOAuthorizationCredential
SODebugHints
SOPreferences
SOConfigurationManager
SOAuthorizationRequest
SOAuthorization
SOExtensionDelegate
SOUIAuthorizationViewControllerDelegate
Kerberos
SOHostExtensionViewProtocol
SOExtensionViewProtocol
SORemoteExtensionViewProtocol
SOExtensionViewService
SORemoteExtensionViewController
SOConfigurationHost
SOHostExtensionContext
SOExtensionFinder
init
setServiceXpcEndpoint:
_connectToService
xpcConnection
serviceXpcEndpoint
initWithListenerEndpoint:
setXpcConnection:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
beginAuthorizationWithCompletion:
interfaceWithInternalProtocol:
setRemoteObjectInterface:
setInvalidationHandler:
setInterruptionHandler:
resume
remoteObjectProxyWithErrorHandler:
.cxx_destruct
_queue
_xpcConnection
_serviceXpcEndpoint
initWithService:requestParameters:completionBlock:
service
requestParameters
completionBlock
_service
_requestParameters
_completionBlock
presentAuthorizationViewControllerWithHints:completion:
authorizationDidCompleteWithCredential:error:
interfaceWithProtocol:
beginAuthorizationWithRequestParameters:completion:
beginAuthorizationWithServiceXPCEndpoint:completion:
cancelAuthorizationWithCompletion:
_principalObject
_auxiliaryConnection
synchronousRemoteObjectProxyWithErrorHandler:
extensionViewController
beginAuthorizationWithRequest:
internalErrorWithMessage:
_disableAppSSOInCFNetwork
initWithRequestParameters:remoteExtensionContext:
alloc
initWithAuthorizationRequest:
authorizationRequest
setAuthorizationCanceled:
setCanceledAuthorizationCredential:
errorWithCode:
setCanceledAuthorizationError:
cancelAuthorizationWithRequest:
canceledAuthorizationCredential
canceledAuthorizationError
_disableAppSSO
_extensionAuxiliaryHostProtocol
_extensionAuxiliaryVendorProtocol
hostContextWithError:
viewService
setViewService:
extensionAuthorizationRequest
_extensionServiceConnection
_viewService
_extensionAuthorizationRequest
extensionName
stringWithFormat:
cStringUsingEncoding:
_setupExtension
errorWithCode:message:
extension
setRequestInterruptionBlock:
_setupSessionIfNecessaryWithCompletion:
_beginAuthorizationWithRequestParameters:completion:
_beginAuthorizationWithServiceXPCEndpoint:completion:
_contextForSession
remoteContextWithError:
extensionDelegate
setContextExtension:
_setupSessionWithCompletion:
_setupSessionHelperForIOSWithCompletion:
_connectContextToSessionWithRequestIdentifier:completion:
instantiateViewControllerWithInputItems:listenerEndpoint:connectionHandler:
serviceViewControllerProxyWithErrorHandler:
connectToContextWithSessionID:completion:
_extensionContextForUUID:
auditToken
cancelExtensionRequestWithIdentifier:
_plugIn
containingUrl
path
identifier
componentsSeparatedByString:
lastObject
containerAppPath
bundleWithPath:
bundleIdentifier
_extensionBundle
bundleURL
pluginKitProxyForURL:
containingBundle
teamID
array
countByEnumeratingWithState:objects:count:
objectForKeyedSubscript:
unsignedLongLongValue
addObject:
associatedDomains
host
containsObject:
extensionBundleIdentifier
isEqualToString:
isEqualToExtension:
initWithExtension:
requestAuthorizationViewControllerWithCompletion:
_finishedSettingUpSession:
auditTokenForSession
unload
containerAppBundleIdentifier
checkAssociatedDomains
hasURLApprovedAssociatedDomain:
setExtension:
setAssociatedDomains:
setExtensionDelegate:
_sessionID
_remoteViewController
_extension
_associatedDomains
_extensionDelegate
setUseInternalExtensions:
authorizationParametersCore
operation
setOperation:
setUrl:
httpHeaders
setHttpHeaders:
httpBody
setHttpBody:
auditTokenData
setAuditTokenData:
useInternalExtensions
_authorizationParametersCore
unloadExtensions
dealloc
_isMatchedExtension:forBundleIdentifier:
findExtensionWithBundleIdentifier:completion:
loadExtensionWithBundleIdentifer:completion:
internalExtensionBundleIdentifier
loadExtensionWithBundleIdentifier:
_doBeginMatchingExtensions
_doEndMatchingExtensions
_doLoadExtensions
findExtensionsWithCompletion:
loadedExtensions
loadedExtensionWithBundleIdentifer:
mutableCopy
removeObject:
_sendNotificationsLoadedExtensions:new:removed:
beginMatchingExtensionsWithCompletion:
endMatchingExtensions
dictionaryWithObjects:forKeys:count:
defaultCenter
postNotificationName:object:userInfo:
arrayWithObjects:count:
internalExtensionsBundleIdentifiers
sharedInstance
isInternalExtensionBundleIdentifier:
loadInternalExtension
beginMatchingExtensions
loadExtensions
loadedInternalExtension
isLoadedExtensionWithBundleIdentifer:
_loadedExtensions
_extensionManagerQueue
_extensionFinder
requestedOperation
authorizationOptions
realm
extensionData
callerBundleIdentifier
decodeObjectOfClass:forKey:
setWithObjects:
decodeObjectOfClasses:forKey:
boolValue
encodeObject:forKey:
numberWithBool:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
initWithAuthorizationRequestParametersCore:
setRequestedOperation:
setRealm:
setExtensionData:
setCallerBundleIdentifier:
setAuthorizationOptions:
_useInternalExtensions
_url
_requestedOperation
_httpHeaders
_httpBody
_realm
_extensionData
_auditTokenData
_callerBundleIdentifier
_authorizationOptions
dictionary
setObject:forKeyedSubscript:
count
_processItem:
_itemCompleted
firstObject
removeAllObjects
removeObjectAtIndex:
requestQueueWithIdentifier:
enqueueRequest:
processNextRequest
removeAllRequestsWithBlock:
processItemBlock
setProcessItemBlock:
_processingItem
_processItemBlock
httpAuthorizationHeaders
httpResponse
setHttpAuthorizationHeaders:
setHttpResponse:
_httpAuthorizationHeaders
_httpResponse
isInternalBuild
defaultManager
configurationForClientWithError:
mapArray:usingBlock:
realms
isExtensionSignatureValidated
isAssociatedDomainValidated
configVersion
numberWithInteger:
stringValue
debugHintsWithCompletion:
boolValueForKey:defaultValue:
saveConfigurationData:error:
saveConfigurationData:completion:
isAuthorizationCanceled
_hostExtensionContext
doNotHandle
cancel
complete
completeWithHTTPAuthorizationHeaders:
completeWithHTTPResponse:httpBody:
completeWithError:
presentAuthorizationViewControllerWithCompletion:
_remoteExtensionContext
_authorizationCanceled
_canceledAuthorizationCredential
_canceledAuthorizationError
canPerformAuthorizationWithURL:responseCode:
canPerformAuthorizationWithURL:responseCode:useInternalExtensions:
delegateDispatchQueue
setDelegateDispatchQueue:
beginAuthorizationWithParameters:
authorization:presentViewController:withCompletion:
requestParametersCore
initWithAuthorizationParameters:
_finishAuthorizationWithCredential:error:
beginAuthorizationWithParameters:completion:
_cancelAuthorization
cancelAuthorization
initWithAuthorizationCredential:
setRequestParametersCore:
_extensionCleanup
delegate
error:hasCode:
authorizationDidCancel:
authorizationDidNotHandle:
authorization:didCompleteWithError:
authorizationDidComplete:
authorization:didCompleteWithHTTPAuthorizationHeaders:
authorization:didCompleteWithHTTPResponse:httpBody:
performBlockOnDelegateQueue:
initWithExtensionViewController:hints:
setDelegate:
viewControllerDidCancel:
beginAuthorizationWithURL:httpHeaders:httpBody:
beginAuthorizationWithOperation:url:httpHeaders:httpBody:
enableEmbeddedAuthorizationViewController
setEnableEmbeddedAuthorizationViewController:
_authorizationCore
_extensionViewController
_enableEmbeddedAuthorizationViewController
_delegate
initWithFrame:
setView:
_remoteViewControllerInterface
_exportedInterface
_sharedExtensionContextVendor
setExtensionContext:
extensionContext
_connectChildView
addChildViewController:
view
addSubview:
setTranslatesAutoresizingMaskIntoConstraints:
constraintsWithVisualFormat:options:metrics:views:
addConstraints:
loadView
remoteViewControllerInterface
exportedInterface
_extensionContext
serviceViewControllerInterface
_loadConfigForFirstTime
initWithMode:
removeObserver:
_loadProfilesFromDict:
_saveConfigToFile:error:
_checkAssociatedDomainForProfiles:
initWithProfiles:
increaseVersionWithMessage:
parameterErrorWithMessage:
_checkNewVersion
profileForURL:
profiles
copyProfileForClient
copyProfile
willHandleURL:callerBundleIdentifier:profile:
stringWithHandleResult:
version
initWithProfileData:
dictionaryWithContentsOfURL:error:
_isConfigFileAvailable
_reloadConfigWithReason:
_startKeyBagObserverForReloadingConfiguration
_extensionsLoaded:
addObserver:selector:name:object:
_stringWithReason:
fileURLWithPath:
_loadProfilesFromURL:
_checkExtensionsExistenceForProfiles:
_configurationLoadedWithReason:
empty
setAppSSOUnavailable
checkVersion
type
URLPrefix
URLWithString:
removeURLPrefix:
fileExistsAtPath:isDirectory:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
UTF8String
_initDataVaultIfNeededWithError:
writeToURL:error:
userInfo
profilesWithExtensionBundleIdentifier:
willHandleURL:callerBundleIdentifier:
_configuration
_configurationVersion
contextExtension
_contextExtension
_didFindExtensions:error:completion:
extensionsWithMatchingAttributes:completion:
_soExtensionsForExtensions:
objectAtIndexedSubscript:
beginMatchingExtensionsWithAttributes:completion:
endMatchingExtensions:
_extensionFinderQueue
_matchingContext
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@?16
v24@0:8@?<v@?@"SOAuthorizationRequestParameters"@"NSError">16
@24@0:8@16
v16@0:8
v24@0:8@16
@"NSObject<OS_dispatch_queue>"
@"NSXPCConnection"
@"NSXPCListenerEndpoint"
@40@0:8@16@24@?32
@?16@0:8
@"<SOServiceProtocol>"
@"SOAuthorizationRequestParameters"
v32@0:8@16@?24
v32@0:8@16@24
v32@0:8@"NSDictionary"16@?<v@?B@"NSError">24
v32@0:8@"SOAuthorizationCredential"16@"NSError"24
v32@0:8@"SOAuthorizationRequestParameters"16@?<v@?B@"NSError">24
v32@0:8@"NSXPCListenerEndpoint"16@?<v@?B@"NSError">24
v24@0:8@?<v@?@"SOAuthorizationCredential"@"NSError">16
@24@0:8^@16
@"SOExtensionServiceConnection"
@"SOExtensionViewService"
@"ASAuthorizationProviderExtensionAuthorizationRequest"
{?=[8I]}16@0:8
@"NSUUID"
@"SORemoteExtensionViewController"
@"NSExtension"
@"NSArray"
@"<SOExtensionDelegate>"
v20@0:8B16
@"SOAuthorizationParametersCore"
v40@0:8@16@24@32
B32@0:8@16@24
@"SOExtensionFinder"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSURL"
@"NSString"
@"NSDictionary"
@"NSData"
@"NSMutableArray"
@"NSHTTPURLResponse"
B28@0:8^{__CFString=}16B24
@32@0:8@16@24
@"SORemoteExtensionContext"
@"SOAuthorizationCredential"
@"NSError"
B32@0:8@16q24
B36@0:8@16q24B32
v24@0:8@"SOUIAuthorizationViewController"16
v48@0:8@16@24@32@40
@"SOAuthorizationCore"
@"SOExtension"
@"<SOAuthorizationDelegate>"
v32@0:8@"NSUUID"16@?<v@?>24
B32@0:8@16^@24
q32@0:8@16@24
q16@0:8
v24@0:8q16
B24@0:8^@16
@24@0:8q16
@"SOConfiguration"
@"SOConfigurationVersion"
v40@0:8@16@24@?32
