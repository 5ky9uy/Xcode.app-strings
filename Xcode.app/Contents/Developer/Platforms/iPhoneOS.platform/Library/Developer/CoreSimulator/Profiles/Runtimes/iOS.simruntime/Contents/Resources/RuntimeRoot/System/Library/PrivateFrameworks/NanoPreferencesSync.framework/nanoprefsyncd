%@ %@
value
twoWaySync
timestamp
-[NPSUserDefaultsMsgKey writeTo:]
NPSUserDefaultsMsgKey.m
nil != self->_key
kind
feature
setting
restriction
userSettingsAndRestrictions
container
domain
-[NPSUserDefaultsBackupMsg writeTo:]
NPSUserDefaultsBackupMsg.m
nil != self->_domain
com.apple.nanoprefsync
com.apple.private.alloy.preferencessync
com.apple.private.alloy.preferencessync.pairedsync
type
content
com.apple.pairedsync
UserDefaults/
ManagedConfiguration/
UserDefaultsBackup/
FileBackup/
local-device-build-version
last-active-date
paired-device-build-version
mc-data-cache
cache-is-valid
PendingIDSProtobuf for IDSProtobuf received at: %@, GUID: %@, type: %@
Unknown
UserDefault
UserDefaultsBackup
ManagedConfiguration
FileBackup
Undefined
com.apple.nanoprefsyncd.launchtransaction
com.apple.nanoprefsync.workQueue
Progress Tracker: %@
com.apple.nano
@"NSString"8@?0
v8@?0
activeDevice
com.apple.pairedsync.nanoprefsyncdfirst
com.apple.pairedsync.nanoprefsyncd
com.apple.private.alloy.preferencessync-idswake
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.private.alloy.preferencessync.pairedsync-idswake
com.apple.notifyd.matching
Notification
com.apple.Preferences.ChangedRestrictionsEnabledStateNotification
com.apple.NanoTimeKit
notificationsIndicatorEnabled
customMonogram
v16@?0@"NSString"8
com.apple.nanoprefsyncd.pairedsynctransaction
com.apple.NanoPreferencesSync
non-
com.apple.nanoprefsyncd.groupsynctransaction
v48@?0@"NSString"8@"PermittedUserDefaultsDomain"16@"NSString"24@"PermittedUserDefaultsKey"32@"NSMutableDictionary"40
v32@?0@"NSString"8@"PermittedUserDefaultsKey"16^B24
v32@?0@"NSString"8@"NSSet"16^B24
v32@?0@"NSString"8@"NSMutableDictionary"16^B24
v32@?0@"NSString"8@"PermittedUserDefaultsDomain"16^B24
v48@?0@"NSString"8@"UserDefaultsDomain"16@"NSString"24@"UserDefaultsKey"32@"NSMutableDictionary"40
v32@?0@"NSString"8@"NSArray"16^B24
v32@?0@"NSString"8@"UserDefaultsDomain"16^B24
com.apple.nanoprefsyncd.firstlaunchtransaction
B24@?0@"NSString"8@"UserDefaultsKey"16
v32@?0@"NSString"8@"NSMutableSet"16^B24
-[NPSServer checkAndUpdateCacheTimestamps]
-[NPSServer checkActiveDeviceChangedVersion]
MessageSendTimeout
PurgeRetryDelay
36A0EB23-E045-4E99-9D71-8FB9A853ADA7
NPS should not try syncing when there is no active device
com.apple.nanoprefsyncd.idstransaction
ids-reset-timeout-transaction
v28@?0@"NSString"8@"NSSet"16B24
v32@?0@"NSString"8@"NSString"16@"NSSet"24
com.apple.nanoprefsyncd.resourcetransaction
User defaults Msg: GUID: %@
<n/a>
Domain: %@
Keys: [
 %@,
Container: %@
Domain: %@
Keys: [
processing
queueing
not-nil
v32@?0@"NSString"8@"NSDictionary"16^B24
v32@?0@"NPSUserDefaultsBackupMsgKey"8Q16^B24
v24@?0Q8@"NSData"16
com.apple.nanoprefsyncd.restorremotesettingsfrombackup
@"NSError"24@?0@"NSString"8@"NSString"16
v32@?0@"NSURL"8@"NSURL"16^B24
-[NPSServer sendSetting:keys:allowedSyncGroups:messageIdentifier:messageData:cloudEnabled:backupFile:]
v32@?0@"NSString"8@16^B24
%@|%@
F4DCA831-3D30-45BC-BDCC-E99D0E482D94
 | %@
-[NPSServer applyStashedSettingsSyncMessages]
v44@?0@"NSString"8@"NSString"16@"NSData"24B32d36
com.apple.springboard
SBParentalControlsCapabilities
SBParentalControlsEnabled
-[NPSServer debounceOnWorkerQueueWithblock:]_block_invoke
debounceOnWorkerQueueWithblock
-[NPSServer synchronizeUserDefaultsDomain:keys:container:appGroupContainer:cloudEnabled:]
com.apple.nanoprefsyncd.synchronizeuserdefaultsdomain
-[NPSServer synchronizeNanoDomain:keys:cloudEnabled:]
com.apple.nanoprefsyncd.synchronizenanodomaindomain
com.apple.mobile.keybagd.first_unlock
enabling
disabling
NBExclusionListManager
Unable to find class %s
<%@ %p; uuid = (%@); url = (%@)>
uuid
-[NPSUserDefaultsMsg writeTo:]
NPSUserDefaultsMsg.m
InternalBuild
Oji6HRoPi7rH7HPdWVakuw
Domain <%@>
<key: %@; Value: %@>
fileURL
fileData
(nil)
BEGIN EXCLUSIVE TRANSACTION
ROLLBACK TRANSACTION
COMMIT TRANSACTION
meta
SELECT COUNT(*) FROM meta
Unknown Error
PRAGMA journal_mode=WAL;
CREATE TABLE IF NOT EXISTS meta (version INTEGER PRIMARY KEY AUTOINCREMENT, tstamp REAL)
CREATE TABLE IF NOT EXISTS sync_msgs (domain TEXT NOT NULL, key TEXT NOT NULL, messageID TEXT, PRIMARY KEY(domain, key))
CREATE TABLE IF NOT EXISTS backup_msgs (container TEXT NOT NULL DEFAULT (''), domain TEXT NOT NULL, key TEXT NOT NULL, messageID TEXT, PRIMARY KEY(container, domain, key))
CREATE TABLE IF NOT EXISTS msgs_type (messageID TEXT NOT NULL PRIMARY KEY, type INTEGER NOT NULL)
CREATE INDEX sync_msgs_messageID_idx ON sync_msgs (messageID ASC)
CREATE INDEX backup_msgs_messageID_idx ON backup_msgs (messageID ASC)
INSERT INTO meta (tstamp) VALUES (datetime('now'))
CREATE TABLE IF NOT EXISTS file_backup_msgs (path TEXT NOT NULL, messageID TEXT, PRIMARY KEY(path))
CREATE INDEX file_backup_msgs_messageID_idx ON file_backup_msgs (messageID ASC)
CREATE TABLE IF NOT EXISTS stashed_sync_msgs (domain TEXT NOT NULL, key TEXT NOT NULL, data BLOB, two_way_sync INTEGER, timestamp DOUBLE, PRIMARY KEY(domain, key))
ALTER TABLE sync_msgs ADD COLUMN cloudEnabled INTEGER
SELECT type FROM msgs_type WHERE messageID=?
INSERT INTO msgs_type (messageID, type) VALUES (?, ?)
INSERT OR REPLACE INTO sync_msgs (domain, key, messageID, cloudEnabled) VALUES (?, ?, ?, ?)
INSERT OR REPLACE INTO backup_msgs (container, domain, key, messageID) VALUES (?, ?, ?, ?)
INSERT OR REPLACE INTO file_backup_msgs (path, messageID) VALUES (?, ?)
DELETE FROM sync_msgs WHERE domain=? AND key=? AND cloudEnabled=?
DELETE FROM backup_msgs WHERE container=? AND domain=? AND key=?
DELETE FROM file_backup_msgs WHERE path=?
DELETE FROM sync_msgs WHERE messageID=?
DELETE FROM backup_msgs WHERE messageID=?
DELETE FROM file_backup_msgs WHERE messageID=?
DELETE FROM msgs_type WHERE messageID=?
UPDATE sync_msgs SET messageID=NULL WHERE messageID=?
UPDATE backup_msgs SET messageID=NULL WHERE messageID=?
UPDATE file_backup_msgs SET messageID=NULL WHERE messageID=?
SELECT domain, key, cloudEnabled FROM sync_msgs WHERE messageID=?
SELECT container, domain, key FROM backup_msgs WHERE messageID=?
SELECT path FROM file_backup_msgs WHERE messageID=?
SELECT domain, key, cloudEnabled FROM sync_msgs WHERE messageID IS NULL
SELECT container, domain, key FROM backup_msgs WHERE messageID IS NULL
SELECT path FROM file_backup_msgs WHERE messageID IS NULL
INSERT OR REPLACE INTO stashed_sync_msgs (domain, key, data) VALUES (?, ?, ?)
SELECT domain, key, data, two_way_sync, timestamp FROM stashed_sync_msgs
DELETE FROM stashed_sync_msgs
DELETE FROM msgs_type
DELETE FROM sync_msgs
DELETE FROM backup_msgs
DELETE FROM file_backup_msgs
kNPProgressTrackerDomain
kNPProgressTrackerLastBootedKey
kNPProgressTrackerStateKey
kNPProgressTrackerLastProcessingDomainKey
kNPProgressTrackerOversizedDomainsKey
kNPProgressTrackerStateStarted
kNPProgressTrackerStateCompleted
kNPProgressTrackerDomainsKey
start
metadata
System/Library/PreferencesSyncBundles
NPSDomains
NPSAction
NPSDefaultsDomain
NPSDefaultsKeys
NPSDefaultsKeyPrefixes
NPSChangeNotificationName
NPSContainer
NPSAppGroupContainer
NPSCloudEnabled
NPSSyncGroups
NPSPerGizmo
NPSMirrorableBBDomain
NPSMirrorableDomain
NPSMirrorableKey
OneWaySync
TwoWaySync
Whitelist
Permitlist
Local
Tinker
First
<%@: %p key = "%@" twoWaySync = %d
 isPerGizmoSetting = %d
%@%@>
BPSNanoBulletinShowsCustomSettings
<%@: %p domain = "%@" _keys = "%@"
<%@: %p key = "%@" notificationNames = "%@" twoWaySync = %d
com.apple.Carousel
DisableWristDetection
NotificationPrivacy
mirrorDNDState
workoutDND
dndState
dndStateDate
dndEffectiveOverrides
dndPrivilegedSenderTypes
self ENDSWITH '.bundle'
B44@?0@"NSBundle"8@"NSString"16B24@"<NSObject>"28#36
Key %@ not found when expected.
Item in container for key %@ expected to be of type %@.
Key %@ expected to be of type %@.
v28@?0@"NSString"8B16@"NSString"20
com.apple.bulletinboard.apps
SIMULATOR_ROOT
-[NPSUserDefaultsBackupMsgKey writeTo:]
NPSUserDefaultsBackupMsgKey.m
NanoPreferencesSync
Cache/
Backup/UserDefaults/
Backup/Files/
index
database.db
-[NPSDeviceRegistry startMonitoringPairingEventsWithQueue:]
NPSDeviceRegistry.m
queue
com.apple.nanoprefsyncd.dump
%@.%ld
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
UserDefaults
NanoSetting
undefined
-[NPSSettingAccessor requiresDeviceUnlockedSinceBoot]
-[NPSFileBackupManager backupFileAtURL:originalFileURL:]
apple-internal-install
nil _deviceRegistry
nil pairedDevice
nil pairingID
nil pairingDataStore
other1
other2
-[NPSFileBackupManager enumerateFileBackupsUsingBlock:]
v32@?0@"NSURL"8@"NPSFileBackupMetadata"16^B24
-[NPSFileBackupManager localFileURLForOriginalFileURL:]
description
dictionaryRepresentation
stringWithFormat:
dictionary
setObject:forKey:
numberWithBool:
numberWithDouble:
setKey:
setValue:
allocWithZone:
init
copyWithZone:
isMemberOfClass:
isEqual:
hash
hasValue
setTwoWaySync:
setHasTwoWaySync:
hasTwoWaySync
setTimestamp:
setHasTimestamp:
hasTimestamp
readFrom:
writeTo:
copyTo:
mergeFrom:
value
twoWaySync
timestamp
.cxx_destruct
_timestamp
_key
_value
_twoWaySync
_has
T@"NSString",&,N,V_key
TB,R,N
T@"NSData",&,N,V_value
TB,N
TB,N,V_twoWaySync
Td,N,V_timestamp
setKind:
setFeature:
setSetting:
setRestriction:
setUserSettingsAndRestrictions:
hasKind
hasFeature
hasSetting
hasRestriction
hasUserSettingsAndRestrictions
kind
feature
setting
restriction
userSettingsAndRestrictions
_feature
_kind
_restriction
_setting
_userSettingsAndRestrictions
T@"NSString",&,N,V_kind
T@"NSString",&,N,V_feature
T@"NSData",&,N,V_setting
T@"NSData",&,N,V_restriction
T@"NSData",&,N,V_userSettingsAndRestrictions
removeAllObjects
addObject:
count
objectAtIndex:
initWithCapacity:
countByEnumeratingWithState:objects:count:
addKey:
setContainer:
setDomain:
keysCount
clearKeys
keyAtIndex:
keyType
hasContainer
container
domain
keys
setKeys:
_container
_domain
_keys
T@"NSString",&,N,V_container
T@"NSString",&,N,V_domain
T@"NSMutableArray",&,N,V_keys
dataWithContentsOfFile:options:error:
unarchiveObjectOfClasses:withData:
unarchivedObjectOfClasses:fromData:error:
length
numberWithUnsignedInteger:
archivedDataWithRootObject:requiringSecureCoding:error:
unarchiveObjectOfClasses:withFile:
archiveObject:
context
outgoingResponseIdentifier
pendingIDSProtobufMessageTypeToString:
initWithFormat:
initWithIDSProtobuf:ofType:from:receivedAt:
receivedDate
idsProtobuf
messageType
fromIDSDevice
_receivedDate
_idsProtobuf
_messageType
_fromIDSDevice
T@"NSDate",R,N,V_receivedDate
T@"IDSProtobuf",R,N,V_idsProtobuf
TQ,R,N,V_messageType
T@"IDSDevice",R,N,V_fromIDSDevice
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:linkedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantUpdate:context:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
initWithNPSServer:
sharedInstance
dump
appendFormat:
dumpDomain:
initWithName:maxStringLength:block:
initCore:
removeObserver:forKeyPath:
dealloc
activeDeviceID
performMigration
loadSettingsBundles
databasePath
initWithPath:
startMonitoringPairingEventsWithQueue:
resetIfActiveDeviceChanged
initWithMachServiceName:
setDelegate:
initWithService:
handleUserDefaultsMsg:service:account:fromID:context:
setProtobufAction:forIncomingRequestsOfType:
handleFileBackupMessage:service:account:fromID:context:
handleUserDefaultsBackupMsg:service:account:fromID:context:
syncCoordinatorWithServiceName:
setDelegate:queue:
resume
addDelegate:queue:
stringWithUTF8String:
isEqualToString:
handleActiveDeviceChangedVersionNotification
handleManagedConfigurationChangedNotification
handleAppChangedRestrictions
hasPerformedInitialSync
activeDevice
setHasPerformedInitialSync:updateBuildVersion:withDevice:
checkIfTinkerLastActiveDateChanged
checkAndUpdateCacheTimestamps
addObserver:forKeyPath:options:context:
resendMessagesForMessageID:
checkActiveDeviceChangedVersion
resyncManagedConfigurationIfNeeded
initWithDeviceRegistry:
invalidate
isAltAccountDevice
dictionaryWithObjects:forKeys:count:
mutableCopy
objectForKeyedSubscript:
initWithDomain:
synchronize
isPaired
domainAccessor
boolForKey:
valueForProperty:
boolValue
setBool:forKey:
stringForKey:
systemBuildVersion
deviceRegistry
lastActiveDate
timeIntervalSinceReferenceDate
integerForKey:
initWithNanoDomain:
setWithObject:
allowedGroups
sendSetting:keys:allowedSyncGroups:messageIdentifier:messageData:cloudEnabled:backupFile:
registerSyncMessageWithIdentifier:size:
syncCompletedWithError:withDevice:
_completeActiveSyncSessionWithError:
syncDidFailWithError:
syncDidComplete
pairedDevice
purgePendingOutgoingMessages
syncSessionType
restoreRemoteFilesFromBackup
restoreRemoteSettingsFromBackup
forceResyncManagedConfigurationIsInitialSync:
setObject:forKeyedSubscript:
startPrefsSyncWithGroups:backupWriter:withCompletionHandler:
syncDidCompleteSending
reportProgress:
errorWithDomain:code:userInfo:
numberWithUnsignedLongLong:
_resumeIDSMessageProcessingWithDevice:
_suspendIDSMessageProcessing
appGroupContainer
null
isPrefix
syncGroups
shouldAllowSyncOfItemWithSyncGroups:allowedSyncGroups:
isPerGizmoSetting
initWithUserDefaultsDomain:container:appGroupContainer:
copyKeyList
hasPrefix:
permittedUserDefaults
usingPrefsFromDomain:
enumerateKeysAndObjectsUsingBlock:
keyPrefixes
excludedPerGizmoDomains
containsObject:
excludedKeysInDomain:
minusSet:
sendPUDSettingsInDomain:keys:backupFile:allowedGroups:
startedOperations
syncedUserDefaults
keyArrays
isCloudEnabled
keyPrefixArrays
sendSettingsInDomain:keys:cloudEnabled:backupFile:allowedGroups:
completedOperations
objectForKey:
getCachedTimeStampFor:key:usePerGizmoCache:
allObjects
updateCacheForDomain:keys:twoWaySyncTimestamp:isPerGizmo:
clearState
defaultManager
globalCacheDirectoryPath
contentsOfDirectoryAtPath:error:
stringByAppendingPathComponent:
dictionaryWithContentsOfFile:
allKeys
fileURLWithPath:
writeToURL:error:
URLWithString:
performFirstLaunchIntoNewBuildTasks
sendMessageData:messageType:queueOneIdentifier:identifier:isPairedSyncMessage:cloudEnabled:
initWithUUIDString:
supportsCapability:
initWithProtobufData:type:isResponse:
idsService
doesCurrentDeviceSupportNewIDSServiceForSync
idsServiceSyncState
maxSendTimeout
nps_defaultPairedDeviceIDIncludingTinkerDevices
sendProtobuf:toDestinations:priority:options:identifier:error:
nrDeviceForIDSDevice:
pairingID
data
handleUserDefaultsMsgData:backupFile:idsGuid:
handleUserDefaultsBackupMsgData:backupFile:idsGuid:
handleFileBackupMessage:resourceURL:backupFile:
code
unsignedLongLongValue
removeObjectForKey:
messageWasDelivered:
messageWasPurged:
purgeRetryDelay
getSettingsSyncDataForMessage:handler:
sendSettingsBackupInDomain:keys:container:isInitialSync:backupFile:
untrackSettingsBackupMessageForContainer:domain:keys:
getSettingsBackupDataForMessage:handler:
retryFileBackupRestoreForFilePath:
untrackFileBackupMessageForFileAtPath:
getFileBackupDataForMessage:handler:
getMessageType:forMessageID:
removeMessageFromMessageTypeTable:
intValue
handleFullBackupMessage:resourceURL:idsGuid:
deviceForFromID:
date
initWithData:
_logUserDefaults:idsGuid:
handlePermittedUserDefaultsMsg:messageData:overwriteNewerTimestamps:backupFile:
unserializeObject:error:
writeMessage:data:
doubleValue
compare:
arrayWithObjects:count:
notificationNames
unionSet:
synchronizeForWriting
_logUserDefaultsBackup:idsGuid:
backupPathForDomain:container:
createDirectoryIfNeeded:
dataWithContentsOfFile:
propertyListWithData:options:format:error:
enumerateObjectsUsingBlock:
dataWithPropertyList:format:options:error:
writeToFile:options:error:
fileExistsAtPath:
removeItemAtPath:error:
fileURL
fileBackupManager
backupFileAtURL:originalFileURL:
initWithPathToLoadBackup:
handleRestoreOfSyncingUserDefaultsMsg:backupFile:
enumerateMessages:
removeItemAtURL:error:
synchronizeUserDefaultsDomain:keys:container:appGroupContainer:cloudEnabled:
synchronizeNanoDomain:keys:cloudEnabled:
interfaceWithProtocol:
setWithArray:
setClasses:forSelector:argumentIndex:ofReply:
setExportedInterface:
setExportedObject:
setInvalidationHandler:
setInterruptionHandler:
perGizmoCacheDirectoryPath
stringByStandardizingPath
cachePathForDomain:isPerGizmo:
deleteCacheForDomain:isPerGizmo:
readCacheFromDiskForDomain:isPerGizmo:
writeCache:toDiskForDomain:isPerGizmo:
fileExistsAtPath:isDirectory:
userDefaultsBackupDirectoryPath
restoreFileBackupForLocalFileURL:originalFileURL:isInitialSync:
enumerateFileBackupsUsingBlock:
getResourceValue:forKey:error:
setFileURL:
queueOneIdentifierForFileBackupMsg:
sendResourceAtURL:metadata:toDestinations:priority:options:identifier:error:
path
sentFileBackupMessage:forFileAtPath:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
synchronizeForReading
serializedObjectForKey:error:
type
queueOneIdentifierForUserDefaultsMsg:
sentSettingsSyncMessage:forDomain:keys:cloudEnabled:
sortedArrayUsingSelector:
initWithString:
appendString:
serializeObject:error:
queueOneIdentifierForUserDefaultsBackupMsg:
sendMessageData:messageType:queueOneIdentifier:identifier:cloudEnabled:
sentSettingsBackupMessage:forContainer:domain:keys:
registerInitialSyncMessage:ofSize:orReportInitialSyncFailureWithError:
newDefaultsMsgWithDomain:
isMirroring
doesCurrentDeviceSupportGroupedTwoWayKeys
typeString
stringByAppendingFormat:
canStartOperation:
beganOperation:
sizeSafeToLoadInMemory
addToProblematicOperationList:
localizedDescription
sendUserDefaultMsg:forDomain:includedKeys:cloudEnabled:backupFile:
numberWithUnsignedLong:
addMetaDataForOperation:metaData:
completedOperation:
getStashedSettingsSyncDataWithHandler:
flushStashedSettingsSyncData
managedConfigurationSettings
setWithObjects:
synchronizeUserDefaultsDomain:keys:cloudEnabled:
debounceOnWorkerQueueWithblock:
sharedConnection
userSettings
effectiveRestrictions
resyncManagedConfigurationIfNeededIsInitialSync:
managedConfigurationData
isEqualToArray:
sendManagedConfigurationSettings:isInitialSync:
objectAtIndexedSubscript:
logManagedConfigurationDictionary:
fileURLWithPath:isDirectory:
localFileURLForOriginalFileURL:
setLaunchNotification:enabled:
UTF8String
isManagedConfigurationSettingPermittedForKind:feature:
queueOneIdentifierForManagedConfigurationMsg:
setLaunchNotificationsEnabled:
syncCoordinator:beginSyncSession:
syncCoordinator:didInvalidateSyncSession:
syncCoordinatorDidChangeSyncRestriction:
supportsMigrationSync
syncCoordinatorDidReceiveStartSyncCommand:
listener:shouldAcceptNewConnection:
hasPairedDevice
observeValueForKeyPath:ofObject:change:context:
applyStashedSettingsSyncMessages
pairedSyncCoordinatorFirstSync
setPairedSyncCoordinatorFirstSync:
pairedSyncCoordinatorRemainderSync
setPairedSyncCoordinatorRemainderSync:
activeSyncSession
setActiveSyncSession:
totalDataToSyncInBytes
setTotalDataToSyncInBytes:
remainingDataToSyncInBytes
setRemainingDataToSyncInBytes:
syncSessionProgressDictionary
syncTransaction
setSyncTransaction:
syncProgressTracker
setSyncProgressTracker:
dumper
setDumper:
workQueue
setWorkQueue:
settings
setSettings:
xpcListener
setXpcListener:
setIdsService:
setIdsServiceSyncState:
setDeviceRegistry:
database
setDatabase:
purgeTimer
setPurgeTimer:
setAllowedGroups:
currentlyUsedDomain
setCurrentlyUsedDomain:
setActiveDeviceID:
mcDebounceSource
setMcDebounceSource:
_processingIDSMessage
_pendingIDSMessages
_fileBackupManager
_pairedSyncCoordinatorFirstSync
_pairedSyncCoordinatorRemainderSync
_activeSyncSession
_totalDataToSyncInBytes
_remainingDataToSyncInBytes
_syncSessionProgressDictionary
_syncTransaction
_syncProgressTracker
_dumper
_workQueue
_settings
_xpcListener
_idsService
_idsServiceSyncState
_deviceRegistry
_database
_purgeTimer
_allowedGroups
_currentlyUsedDomain
_activeDeviceID
_mcDebounceSource
T@"NPSFileBackupManager",R,N,V_fileBackupManager
T@"PSYSyncCoordinator",&,N,V_pairedSyncCoordinatorFirstSync
T@"PSYSyncCoordinator",&,N,V_pairedSyncCoordinatorRemainderSync
T@"PSYServiceSyncSession",&,N,V_activeSyncSession
TQ,N,V_totalDataToSyncInBytes
TQ,N,V_remainingDataToSyncInBytes
T@"NSMutableDictionary",R,N,V_syncSessionProgressDictionary
T@"NSObject<OS_os_transaction>",&,N,V_syncTransaction
T@"NPProgressTracker",&,N,V_syncProgressTracker
T@"NPSOSLogStateProvider",&,N,V_dumper
T@"NSObject<OS_dispatch_queue>",&,N,V_workQueue
T@"NPSSettings",&,N,V_settings
T@"NSXPCListener",&,N,V_xpcListener
T@"IDSService",&,N,V_idsService
T@"IDSService",&,N,V_idsServiceSyncState
T@"NPSDeviceRegistry",&,N,V_deviceRegistry
T@"NPSDatabase",&,N,V_database
T@"NSObject<OS_dispatch_source>",&,N,V_purgeTimer
T@"NSDictionary",&,N,V_allowedGroups
T@"NSString",&,N,V_currentlyUsedDomain
T@"NSUUID",&,N,V_activeDeviceID
T@"NSObject<OS_dispatch_source>",&,N,V_mcDebounceSource
UUIDString
encodeObject:forKey:
decodeObjectOfClass:forKey:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
uuid
setUuid:
setUrl:
_uuid
_url
T@"NSUUID",&,N,V_uuid
T@"NSURL",&,N,V_url
allValues
setFileData:
hasFileURL
hasFileData
fileData
_fileData
_fileURL
T@"NSData",&,N,V_fileURL
T@"NSData",&,N,V_fileData
_openDBAtPath:
setMessageType:forMessageID:
fileSystemRepresentation
copy
_getSchemaVersion
untrackSettingsSyncMessagesForDomain:keys:cloudEnabled:
stashSettingsSyncData:forDomain:key:isTwoWaySync:timestamp:
setPath:
version
setDb:
getMessageTypeForMessageID
setGetMessageTypeForMessageID:
setMessageTypeForMessageID
setSetMessageTypeForMessageID:
setMessageIDForSettingSync
setSetMessageIDForSettingSync:
setMessageIDForSettingBackup
setSetMessageIDForSettingBackup:
setMessageIDForFileBackup
setSetMessageIDForFileBackup:
untrackSettingsSyncMessage
setUntrackSettingsSyncMessage:
untrackSettingsBackupMessage
setUntrackSettingsBackupMessage:
untrackFileBackupMessage
setUntrackFileBackupMessage:
untrackSettingsSyncForMessageID
setUntrackSettingsSyncForMessageID:
untrackSettingsBackupForMessageID
setUntrackSettingsBackupForMessageID:
untrackFileBackupForMessageID
setUntrackFileBackupForMessageID:
removeMessageFromMessageTypeTable
setRemoveMessageFromMessageTypeTable:
setNullMessageIDForSettingSync
setSetNullMessageIDForSettingSync:
setNullMessageIDForSettingBackup
setSetNullMessageIDForSettingBackup:
setNullMessageIDForFileBackup
setSetNullMessageIDForFileBackup:
getSettingsSyncForMessageID
setGetSettingsSyncForMessageID:
getSettingsBackupForMessageID
setGetSettingsBackupForMessageID:
getFileBackupForMessageID
setGetFileBackupForMessageID:
getSettingsSyncWithNullMessageID
setGetSettingsSyncWithNullMessageID:
getSettingsBackupWithNullMessageID
setGetSettingsBackupWithNullMessageID:
getFileBackupWithNullMessageID
setGetFileBackupWithNullMessageID:
stashSettingsSyncData
setStashSettingsSyncData:
getStashedSettingSyncData
setGetStashedSettingSyncData:
flushStashedSettingSyncData
setFlushStashedSettingSyncData:
purgeMessageTypeTable
setPurgeMessageTypeTable:
purgeSettingsSyncTable
setPurgeSettingsSyncTable:
purgeSettingsBackupTable
setPurgeSettingsBackupTable:
purgeFileBackupTable
setPurgeFileBackupTable:
_path
_version
_getMessageTypeForMessageID
_setMessageTypeForMessageID
_setMessageIDForSettingSync
_setMessageIDForSettingBackup
_setMessageIDForFileBackup
_untrackSettingsSyncMessage
_untrackSettingsBackupMessage
_untrackFileBackupMessage
_untrackSettingsSyncForMessageID
_untrackSettingsBackupForMessageID
_untrackFileBackupForMessageID
_removeMessageFromMessageTypeTable
_setNullMessageIDForSettingSync
_setNullMessageIDForSettingBackup
_setNullMessageIDForFileBackup
_getSettingsSyncForMessageID
_getSettingsBackupForMessageID
_getFileBackupForMessageID
_getSettingsSyncWithNullMessageID
_getSettingsBackupWithNullMessageID
_getFileBackupWithNullMessageID
_stashSettingsSyncData
_getStashedSettingSyncData
_flushStashedSettingSyncData
_purgeMessageTypeTable
_purgeSettingsSyncTable
_purgeSettingsBackupTable
_purgeFileBackupTable
T@"NSString",&,N,V_path
T^{sqlite3=},N,V_db
T^{sqlite3_stmt=},N,V_getMessageTypeForMessageID
T^{sqlite3_stmt=},N,V_setMessageTypeForMessageID
T^{sqlite3_stmt=},N,V_setMessageIDForSettingSync
T^{sqlite3_stmt=},N,V_setMessageIDForSettingBackup
T^{sqlite3_stmt=},N,V_setMessageIDForFileBackup
T^{sqlite3_stmt=},N,V_untrackSettingsSyncMessage
T^{sqlite3_stmt=},N,V_untrackSettingsBackupMessage
T^{sqlite3_stmt=},N,V_untrackFileBackupMessage
T^{sqlite3_stmt=},N,V_untrackSettingsSyncForMessageID
T^{sqlite3_stmt=},N,V_untrackSettingsBackupForMessageID
T^{sqlite3_stmt=},N,V_untrackFileBackupForMessageID
T^{sqlite3_stmt=},N,V_removeMessageFromMessageTypeTable
T^{sqlite3_stmt=},N,V_setNullMessageIDForSettingSync
T^{sqlite3_stmt=},N,V_setNullMessageIDForSettingBackup
T^{sqlite3_stmt=},N,V_setNullMessageIDForFileBackup
T^{sqlite3_stmt=},N,V_getSettingsSyncForMessageID
T^{sqlite3_stmt=},N,V_getSettingsBackupForMessageID
T^{sqlite3_stmt=},N,V_getFileBackupForMessageID
T^{sqlite3_stmt=},N,V_getSettingsSyncWithNullMessageID
T^{sqlite3_stmt=},N,V_getSettingsBackupWithNullMessageID
T^{sqlite3_stmt=},N,V_getFileBackupWithNullMessageID
T^{sqlite3_stmt=},N,V_stashSettingsSyncData
T^{sqlite3_stmt=},N,V_getStashedSettingSyncData
T^{sqlite3_stmt=},N,V_flushStashedSettingSyncData
T^{sqlite3_stmt=},N,V_purgeMessageTypeTable
T^{sqlite3_stmt=},N,V_purgeSettingsSyncTable
T^{sqlite3_stmt=},N,V_purgeSettingsBackupTable
T^{sqlite3_stmt=},N,V_purgeFileBackupTable
TQ,R,N,V_version
bytes
dataWithBytes:length:
createFileAtPath:contents:attributes:
fileHandleForWritingToURL:error:
fileHandleForReadingFromURL:error:
writeData:
readDataOfLength:
closeFile
offsetInFile
initWithPathToCreateBlobFile:
initWithPathToLoadBlobFile:
writeBlob:
readBlob
close
isFileGood
_offset
_done
tempFilePath
losslessFileCompressionFrom:to:shouldCompress:
stringByAppendingString:
dataWithLength:
subdataWithRange:
appendData:
initWithPathToCreateBackup:
doneWriting
compressedPath
_uncompressedPath
_compressedPath
T@"NSURL",R,N,V_compressedPath
linkedDevicesWithRelationship:
arrayWithCapacity:
addObjectsFromArray:
nps_mineTinkerDevices
nonActiveDeviceForIDSDevice:
nps_nrDevice
_processStateClearIfNeeded
_init
_clearState
_setValue:forKey:
_getOperationDictionary:
addEntriesFromDictionary:
_save:forOperation:
_lastBootedTimeFromPref
_saveLastBootedTimeToPref:
_valueForKey:
crashedDuringLastRun
setCrashedDuringLastRun:
problematicOperationList
setProblematicOperationList:
_crashedDuringLastRun
_problematicOperationList
TB,V_crashedDuringLastRun
T@"NSMutableArray",&,V_problematicOperationList
bbAppsSettings
boolForKey:keyExistsAndHasValidFormat:
setIsPrefix:
setAppGroupContainer:
setIsCloudEnabled:
setSyncGroups:
setIsPerGizmoSetting:
mirrorableBBDomain
setMirrorableBBDomain:
mirrorableDomain
setMirrorableDomain:
mirrorableKey
setMirrorableKey:
_isPrefix
_isCloudEnabled
_isPerGizmoSetting
_appGroupContainer
_syncGroups
_mirrorableBBDomain
_mirrorableDomain
_mirrorableKey
TB,N,V_isPrefix
T@"NSString",&,N,V_appGroupContainer
TB,N,V_isCloudEnabled
T@"NSSet",&,N,V_syncGroups
TB,N,V_isPerGizmoSetting
T@"NSString",&,N,V_mirrorableBBDomain
T@"NSString",&,N,V_mirrorableDomain
T@"NSString",&,N,V_mirrorableKey
setKeyArrays:
setKeyPrefixArrays:
_keyArrays
_keyPrefixArrays
T@"NSMutableDictionary",&,N,V_keyArrays
T@"NSMutableDictionary",&,N,V_keyPrefixArrays
setNotificationNames:
_notificationNames
T@"NSMutableSet",&,N,V_notificationNames
setKeyPrefixes:
_keyPrefixes
T@"NSMutableDictionary",&,N,V_keys
T@"NSMutableDictionary",&,N,V_keyPrefixes
domainShouldSyncFirst:key:
removeObject:
predicateWithFormat:
filteredArrayUsingPredicate:
_settingBundlesInDirectories:
objectForInfoDictionaryKey:
arrayWithObject:
preprocessItemSyncGroups:forDomain:key:
array
setSyncedUserDefaults:
setPermittedUserDefaults:
_syncedUserDefaults
_permittedUserDefaults
T@"NSMutableDictionary",&,N,V_syncedUserDefaults
T@"NSMutableDictionary",&,N,V_permittedUserDefaults
processInfo
environment
defaultCenter
_registryChanged:
addObserver:selector:name:object:
checkForActiveDeviceChange
waitForActiveOrAltAccountDevice
compatibilityState
initWithDomain:pairingID:pairingDataStore:
filesBackupDirectoryPath
name
activeDeviceSelectorBlock
getAllDevicesWithArchivedAltAccountDevicesMatching:
firstObject
setActiveDevice:
deviceForIDSDevice:
waitForPairedOrPairingDevice
pairingDataStore
pairingDevice
filesBackupMetadataIndexPath
queue
shouldRun
hasCheckedInWithNanoRegistry
setHasCheckedInWithNanoRegistry:
alreadyExistingAssertion
setAlreadyExistingAssertion:
setPairingDataStore:
setDomainAccessor:
setPerGizmoCacheDirectoryPath:
setGlobalCacheDirectoryPath:
setUserDefaultsBackupDirectoryPath:
setFilesBackupDirectoryPath:
setFilesBackupMetadataIndexPath:
setDatabasePath:
registryChangedSemaphores
setRegistryChangedSemaphores:
server
setServer:
_shouldRun
_hasCheckedInWithNanoRegistry
_queue
_activeDevice
_alreadyExistingAssertion
_pairingDataStore
_domainAccessor
_perGizmoCacheDirectoryPath
_globalCacheDirectoryPath
_userDefaultsBackupDirectoryPath
_filesBackupDirectoryPath
_filesBackupMetadataIndexPath
_databasePath
_registryChangedSemaphores
_server
TB,N,V_hasCheckedInWithNanoRegistry
T@"NRDevice",&,N,V_activeDevice
T@"NRActiveDeviceAssertion",W,N,V_alreadyExistingAssertion
T@"NSString",&,N,V_pairingDataStore
T@"NPSDomainAccessor",&,N,V_domainAccessor
T@"NSString",&,N,V_perGizmoCacheDirectoryPath
T@"NSString",&,N,V_globalCacheDirectoryPath
T@"NSString",&,N,V_userDefaultsBackupDirectoryPath
T@"NSString",&,N,V_filesBackupDirectoryPath
T@"NSString",&,N,V_filesBackupMetadataIndexPath
T@"NSString",&,N,V_databasePath
T@"NSMutableArray",&,N,V_registryChangedSemaphores
T@"NPSServer",W,N,V_server
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
paired
TB,R,N,GisPaired
T@"NSDate",R,N
TB,R,N,V_shouldRun
substringWithRange:
registerOSLogStateHandlerName:block:
_lastDumpString
initWithUserDefaultsDomain:containerPath:
initWithBundleIdentifier:allowPlaceholder:error:
groupContainerURLs
dataContainerURL
containerPath
sizeSafeToWrite
domainPlistSize
prefSizeFor:inContainer:
domainSize
requiresDeviceUnlockedSinceBoot
setType:
nanoDomainAccessor
setNanoDomainAccessor:
hasChangesToWrite
setHasChangesToWrite:
setContainerPath:
_hasChangesToWrite
_type
_nanoDomainAccessor
_containerPath
TB,N,V_hasChangesToWrite
T@"NSString",&,N,V_containerPath
Tq,N,V_type
T@"NPSDomainAccessor",&,N,V_nanoDomainAccessor
currentRunLoop
activeDeviceChanged
metadataIndexReadFromDiskIfNeeded
newFileUUID
persistMetadataIndex
pathToFileWithUUID:
exceptionWithName:reason:userInfo:
moveItemAtPath:toPath:error:
UUID
fileURLWithUUID:
metadataIndex
setMetadataIndex:
_metadataIndex
T@"NSUUID",N,V_activeDeviceID
T@"NSMutableDictionary",&,N,V_metadataIndex
NPSUserDefaultsMsgKey
NSCopying
NPSManagedConfigurationMsg
NPSUserDefaultsBackupMsg
NPSKeyedArchiverUtil
PendingIDSProtobuf
NPSIDSBlackHole
IDSServiceDelegate
NSObject
NPSCompanionServerProtocol
NPSServerProtocol
NPSServer
PSYSyncCoordinatorDelegate
NSXPCListenerDelegate
NPSFileBackupMetadata
NSSecureCoding
NSCoding
NPSUserDefaultsMsg
Logger
NPSFileBackupMsg
NPSDatabase
NPSBlobReaderWriter
NPSBackupReaderWriter
NPProgressTracker
UserDefaultsKey
UserDefaultsDomain
PermittedUserDefaultsKey
PermittedUserDefaultsDomain
NPSSettings
NPSUserDefaultsBackupMsgKey
NPSDeviceRegistry
NPSOSLogStateProvider
NPSSettingAccessor
NPSFullBackupMsg
NPSFileBackupManager
@24@0:8^{_NSZone=}16
B16@0:8
v20@0:8B16
v24@0:8d16
@16@0:8
B24@0:8@16
v24@0:8@16
Q16@0:8
d16@0:8
v16@0:8
@"NSString"
@"NSData"
{?="timestamp"b1"twoWaySync"b1}
#16@0:8
@24@0:8Q16
@"NSMutableArray"
@32@0:8@16@24
@24@0:8@16
@48@0:8@16Q24@32@40
@"NSDate"
@"IDSProtobuf"
@"IDSDevice"
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v64@0:8@16@24@32@40@48@56
v40@0:8@16@24@32
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v32@0:8@16@24
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v40@0:8@16@24@?32
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32@"IDSMessageContext"40
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v52@0:8@16@24@32@40B48
v52@0:8@"NSString"16@"NSSet"24@"NSString"32@"NSString"40B48
v36@0:8@16@24B32
v36@0:8@"NSString"16@"NSSet"24B32
B32@0:8@16@24
q16@0:8
v28@0:8@16B24
v32@0:8@"PSYSyncCoordinator"16@"PSYServiceSyncSession"24
v24@0:8@"PSYSyncCoordinator"16
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v24@0:8@?16
v32@0:8B16B20@24
v40@0:8@16Q24@32
v32@0:8@16Q24
v48@0:8@16@24@32^v40
@48@0:8@16i24@28^@36B44
@52@0:8@16i24@28^@36B44B48
B44@0:8@16@24B32@36
@28@0:8@16B24
B36@0:8@16@24B32
B28@0:8@16B24
v44@0:8@16@24@32B40
@36@0:8@16@24B32
@68@0:8@16@24@32^@40^@48B56@60
@52@0:8@16@24@32B40@44
v52@0:8@16@24B32@36@44
v24@0:8Q16
@"NPSFileBackupManager"
@"PSYSyncCoordinator"
@"PSYServiceSyncSession"
@"NSMutableDictionary"
@"NSObject<OS_os_transaction>"
@"NPProgressTracker"
@"NPSOSLogStateProvider"
@"NSObject<OS_dispatch_queue>"
@"NPSSettings"
@"NSXPCListener"
@"IDSService"
@"NPSDeviceRegistry"
@"NPSDatabase"
@"NSObject<OS_dispatch_source>"
@"NSDictionary"
@"NSUUID"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSURL"
{?="timestamp"b1}
B28@0:8i16@20
B32@0:8^i16@24
v32@0:8@16@?24
v52@0:8@16@24@32B40d44
i16@0:8
^{sqlite3=}16@0:8
v24@0:8^{sqlite3=}16
^{sqlite3_stmt=}16@0:8
v24@0:8^{sqlite3_stmt=}16
^{sqlite3=}
^{sqlite3_stmt=}
@"NSFileHandle"
v32@0:8Q16@24
B24@0:8@?16
@"NPSBlobReaderWriter"
@"NSSet"
@"NSMutableSet"
@40@0:8@16@24@32
@"NRDevice"
@"NRActiveDeviceAssertion"
@"NPSDomainAccessor"
@"NPSServer"
@40@0:8@16q24@?32
@32@0:8@16^@24
v24@0:8q16
Error (%@) reading data from (%@)
Error (%@) unarchiving expected classes (%@) with (%@) bytes data
Error (%@) archiving (%@)
Launching; "NanoPreferencesSyncDaemon_Sim-307" "185"
Received notification: %s
Received managed configuration change notification
Received unexepectedly NULL notification
Received unexpected non-dictionary type event: (%@)
setHasPerformedInitialSync: Alt account device. Force set sync complete.
setHasPerformedInitialSync: Alt account device. Not paired, not forcing sync complete
setHasPerformedInitialSync: (%d, %d, %{public}@)
setHasPerformedInitialSync called but the active device isn't paired to a non-archived device.
setHasPerformedInitialSync: Paired device build version being updated from %@ to %@
setHasPerformedInitialSync: Local device build version being updated from %@ to %@
setHasPerformedInitialSync: LastActiveDate being updated from %llu -> %llu
setHasPerformedInitialSync: sendSetting failed.
Not doing check for initial sync, as this is alt account device.
setHasPerformedInitialSync: Posting notification %@ (NPSHasCompletedInitialSync)
syncCompletedWithError: Sync completed: error=%@
_completeActiveSyncSessionWithError: Reporting sync failure (%@) to sync session: (%@)
_completeActiveSyncSessionWithError:Reporting successful sync completion to sync session: (%@)
coordinator: (%@)
Asked to start syncing for sync session (%@) even though there already is an active sync session (%@)
total: (%llu), remaining: (%llu); initialSyncProgressDictionary: (%@)
strongSession: (%p); _activeSyncSession: (%p)
Did not complete syncing before timer expired; Sync Session: (%@); Pending Messages: (%@)
Active device changed: %snil -> %snil
startPrefsSyncWithGroups: %{public}@
Backup list before exclusions: %@ : %@
Excluding: %@
Backup list after exclusions: %@ : %@
Removed all keys from: %@
Excluding: %@ from backup, it's on the exclusion list
startPrefsSyncWithGroups: No data synced.
checkIfTinkerLastActiveDateChanged: LastActiveDate changed from %llu -> %llu Tinker watch switch detected
%s: - value: %@
%s: %@ doesn't exist in domain %@ cache is not valid
%s: setting all timestamps to now
%s: Unable to write to url: %@.  Error: %@
%s: can't open cache dir(%@), assuming there is nothing to update: %@
%s: Skipping Paired Device Version change check. Not paired.
%s: Detected first launch after pairing; Local build version: (%@)
%s: Detected local device update; Current build version: (%@); Previous: (%@)
%s: Doing new build tasks
%s: New build tasks completed
%s: lastRegisteredPairedDeviceBuildVersion: (%@); pairedDeviceBuildVersion: (%@)
%s: Doing a sync because of a build version change
%s: No build version change detected.
%s: Skipping Paired Device Version change check. Has not performed initial sync yet.
Using IDS service for sending sync state.
Successfully sent message with identifier: (%@)
Failed sending message with error: (%@)
Suspending IDS message processing
Resuming IDS message processing. Has %lu pending IDS messages to process.
Processing %@
%@ was originated from %@, not current active device %@; dropping.
Unsupported message type on non-watchOS, ignoring
service: (%@), account: (%@), identifier: (%@), success: (%d), error: (%@)
progress: (%f), total: (%llu), remaining: (%llu)
Message (%@) failed to be delivered with error: (%@)
Purge Timer fired!
Releasing transaction for ids-reset-timeout-transaction
messageID: (%@)
Failed re-sending settings backup for container (%@), domain (%@), keys (%@).
Failed re-sending file backup (%@) for identifier (%@)!
service: (%@); account: (%@); incomingResourceAtURL: (%@); metadata: (%@); fromID: (%@); context: (%@)
nil messageType. metadata: (%@)
Un-handled message type: (%@)
%{public}@
handleUserDefaultsMsg: %s idsProtobuf: (%p); outgoingResponseIdentifier: (%@)
Added %@ to pending IDS messages queue, size = %lu
Could not parse incoming data
Handling User Defaults message for domain: (%@);        hasTimestamp: (%d);        timestamp: (%f);        overwriteNewerTimestamps: (%s)
Domain (%@) not permitted; dropping incoming message
Handling key in domain: (%@)            key: (%@);            value: (%s);            hasTimestamp: (%d);            timestamp: (%f);            overwriteNewerTimestamps: (%s)
Using timestamp from user defaults message key (%f) for <Domain %@; key %@>.
Using timestamp from user defaults message (%f) for <Domain %@; key %@>.
Key (%@) in domain (%@) not permitted; dropping incoming message
Creating domain accessor (domain: %@, container: %@, appGroupContainer: %@)
Unable to create settings accessor for Key (%@) Domain (%@); dropping incoming message.
Received User Defaults value for <%@, %@>: (%@)
Discarding cached timestamp for <%@, %@> since it is set to the future; cached: (%f); current: (%f)
Updating timestamp for domain:%@ key:%@ to timestamp: %f
Discarding incoming setting for <%@, %@>, local value is more recent
Local expects <%@, %@> to be 2-way-synced, but remote doesn't
Skipping key (%@) since incoming value is un-changed                Current value: %@; incoming value: %@
Posting (%@) for domain (%@)
Handling Restore of User Defaults message for domain: (%@); hasTimestamp: (%d); timestamp: (%f)
Domain (%@) not synced; dropping incoming message
Key (%@) in domain (%@) not synced; dropping incoming message
Skipping key (%@) since incoming value is un-changed                        Current value: %@; incoming value: %@
Kind: (%@)
Feature: (%@); Value: (%@)
handleUserDefaultsBackupMsg: %s idsProtobuf: (%p); outgoingResponseIdentifier: (%@)
Handling User Defaults Backup message for container: (%@); domain: (%@)
Failed to unserialized domain backup (%@) with error: (%@)
Read pre-existing domain (%@) backup: (%@)
Received User Defaults Backup for <%@, %@>; Value: (%@)
Failed to serialize updated domain (%@) backup dictionary (%@) with error: (%@)
Failed to write updated domain (%@) backup at path (%@) with error: (%@)
Failed to delete backup for domain (%@) at path (%@) with error: (%@)
handleFileBackupMessage: %s idsProtobuf: (%p); outgoingResponseIdentifier: (%@)
Handling file backup message for path: (%@); Temporary URL: (%@)
listener: (%p); connection: (%p)
Connection invalidated: (%p)
Failed to resolve cache path for domain: (%@); isPerGizmo: (%d)
Reading cache for domain: (%@); isPerGizmo: (%d)
Failed to unserialized domain cache (%@) %@
Read cache: (%@)
Writing cache for domain: (%@); isPerGizmo: (%d)
Cache to be written: (%@)
Failed to serialize updated domain cache dictionary (%@) with error: (%@)
Failed to write updated domain cache (%@) with error: (%@)
Deleting cache for domain: (%@); isPerGizmo: (%d)
Cache for domain (%@) does not exist.
Failed to delete cache for domain: %@
Updating timestamp for <%@; %@> to %@
Could not list content of directory (%@)
Unexpectedly found directory (%@) within container (%@) backup
Restoring remote settings from backup at path (%@)
No remote settings backup directory (%@)
Restoring remote file (%@) stored locally at (%@); isInitialSync: (%d)
Failed to retrieve file size for file URL: (%@) with error: (%@); result: (%d)
Failed to send file resource (%@) for backup at (%@) with error: (%@)
Successfully sent file backup with identifier (%@)
Requested to create directory with nil path
Failed to create backup directory (%@) with error: (%@)
Failed to resolve backup path for domain: (%@) for container: (%@)
%s: keys: %@; syncGroups: %@
%s: Settings accessor not passed.
Key (%@) is not a String.
%s: Not allowed to sync items in this sync groups.
%s: Error serializing object for key %@. Error: %@
Remote backup for domain (%@) is empty; Deleting the associated .plist
Failed to unserialize domain (%@) backup (%@) for container (%@) with error: (%@)
Restoring <%@, %@> for container (%@) to (%@)
Failed to create binary data (domain: %@; key: %@) with error: (%@)
Reading cache for domain: (%@); key: (%@); isPerGizmo: (%{public}@)
Error reading the cache file (error: %@).
Sending user defaults message for <Domain: %@, Keys: %{public}lu>
Start sending settings in Domain: %{public}@ 
             Keys: %lu
             cloudEnabled: %{public}@
Not allowed to sync groups %{public}@. Skipping key %{public}@.
Sent <Domain: %{public}@; Key: %{public}@> as individual default sync message.
Skipping <%@; %@>.
<%{public}@>Domain size not safe to load in memory. Trying to send it once.
Failed to serialize value for <Domain: %{public}@; Key: %{public}@> (Error: %@)
No cached timestamp, and value is null. Not sending value for <Domain: %{public}@; Key: %{public}@>.
Message size reached max allowed size. Sending current default message.
[STATS] Completed sending settings in <Domain: %{public}@; Keys: %lul>.
Start sending permitted defaults in Domain: %{public}@ 
            Keys: %lu
 AllowedGroups: %@
Key: %@ not allowed, not syncing/backing up
Groups: %@, allowed groups: %@
Skipping <%@; %@>
<%{public}@>Domain size not safe to load in memory. Trying to load it once.
Handling message for domain (%@) key (%@) timestamp (%f)
Invalid debounce parameter
%s: Debouncer timed out- calling block
Releasing transaction for debounceOnWorkerQueueWithblock (timer fired)
Could not create dispatch source
Releasing transaction for debounceOnWorkerQueueWithblock (unable to create source)
Will force re-sync ManagedConfiguration state
Re-syncing MC since changes were detected since last sync. isInitialSync: (%d)
Skipping MC re-sync since no change detected since last sync. isInitialSync: (%d)
Skipping MC re-sync since Tinker watch
Sending MC user settings:
Sending MC restrictions:
File Backup manager did not have an entry for original file path (%@)
%s: domain: (%@); keys: (%@); container: (%@); appGroupContainer: (%@); cloudEnabled: (%d)
Domain (%@) should not be nil, and keys (%@) should not be nil or empty.
Container should not be nil when specifing an app group container (%@) for domain (%@) and keys (%@).
%s: domain: (%@); keys: (%@)
setLaunchNotification: %@ launch notification %@
SQL Error: (%d) %s
Error fetching schema version: %d (%s)
Error opening SQLite3 DB at (%@): (%d) %s
I/O error: ACCESS
I/O error: BLOCKED
I/O error: CHECKRESERVEDLOCK
I/O error: CLOSE
I/O error: DELETE
I/O error: DIR_CLOSE
I/O error: DIR_FSYNC
I/O error: FSTAT
I/O error: FSYNC
I/O error: LOCK
I/O error: NOMEM
I/O error: RDLOCK
I/O error: READ
I/O error: SEEK
I/O error: SHMLOCK
I/O error: SHMMAP
I/O error: SHMOPEN
I/O error: SHMSIZE
I/O error: SHORT_READ
I/O error: TRUNCATE
I/O error: UNLOCK
I/O error: WRITE
sqlite3_exec(%s) Error: (%d) %s
NPSBlobReaderWriter: initWithPathToCreateBlobFile error %@
NPSBlobReaderWriter: initWithPathToLoadBlobFile error %@
File length is not right- must have been a read or write error
File length is %ld bytes as expected
NPSBackupReaderWriter writing type %d length %u
NPSBackupReaderWriter reading type %d length %u
[Progress Tracker] Started tracking progress. (Crashed last time %@)
[Progress Tracker] Can start syncing (%{public}@)? %@
[Progress Tracker] Started %@
[Progress Tracker] Completed %@
[Progress Tracker] Stopped tracking progress.
[Progress Tracker] Requested to clear state.
[Progress Tracker] Adding %{public}@ to known problematic operation list.
[Progress Tracker] State from prefs %{public}@.                  Last domain being processed %{public}@.                  List of oversized domains %{public}@
%@ '%@': %@
%@ '%@':
Failed to list contents of %@: %@
Unable to read bundle: %@
Malformed bundle plist for bundle: %@. %@
Missing %@ or %@ entry for bundle: %@.
Key %@ mutually exclusive with keys %@ and %@ in bundle %@
Keys %@ and %@ must go together in bundle %@
Cannot overwrite existing container %@ with %@ for permittted <%@, %@> in bundle %@.
Cannot overwrite existing permitted <%@, %@> in bundle %@ with a different isPerGizmoSetting value.
Cannot overwrite existing container %@ with %@ for permitted <%@, %@> in bundle %@.
Action %@ not supported in bundle (%@).
Received notification: (%@)
Paired device changed from %{public}@ to %{public}@
Failed to create directory (%@) with error: (%@)
Dumping data for %{public}@ to sysdiagnose
Could not resolve containerPath for container (%@)
error while retrieving application record %@ with error %@
Container Path for container %@ is nil!
Could not resolve containerPath for container (%@), previous containerPath: (%@)
Container path changed from (%@) to (%@)
Synchronized user defaults domain (%@) for containerPath: (%@); ret: (%d).
Synchronized user defaults domain (%@); ret: (%d).
Synchronized nano-setting domain (%@); ret: (%d).
Read containerized user default <%@, %@> for containerPath: (%@); value: (%{public}@)
Read user default <%@, %@>; value: (%{public}@)
Read nano-setting <%@, %@>; value: (%{public}@)
Not safe to write value into domain %@ for key %@. (size %lld Bytes is beyond what we can handle)
Written containerized user default <%@, %@> for containerPath: (%@); value: (%@)
Written user default <%@, %@>; value: (%@)
Written nano-setting <%@, %@>; value: (%@)
Failed to serialized value (%@) with error: %@ 
Failed to unserialized data (%@) with error: %@
Logic error! Type %ld is not handled.
%s: Protection Class for %@ at path %@ is %d
Is user defaults domain %@ protected: %@
%s: fileURL: (%@); originalURL: (%@)
%s: Skipping, active device has changed
Error backuping file (%@), originalFileURL is nil
Failed to generate file backup destination path. File will not get backuped!
Failed to delete old file backup (%@) with error: (%@)
Failed to move file (%@) to (%@) with error: (%@)
Removing file (%@) from backup
Failed to remove file (%@) with error: (%@)
Failed to write index file (%@) with error: (%@)
Failed to delete to-be-empty index file (%@) with error: (%@)
softlink:r:path:/System/Library/PrivateFrameworks/NanoBackup.framework/NanoBackup
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.managedconfiguration.profiled-access</key>
<true/>
<key>com.apple.nano.nanoregistry.pairunpairobliterate</key>
<true/>
<key>com.apple.private.MobileContainerManager.allowed</key>
<true/>
<key>com.apple.private.MobileContainerManager.otherIdLookup</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.preferencessync</string>
<string>com.apple.private.alloy.preferencessync.pairedsync</string>
</array>
<key>com.apple.private.ids.messaging.urgent-priority</key>
<array>
<string>com.apple.private.alloy.preferencessync</string>
<string>com.apple.private.alloy.preferencessync.pairedsync</string>
</array>
<key>com.apple.private.ignore-preferences-size-limits</key>
<true/>
<key>com.apple.private.security.storage.AppDataContainers</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
<string>com.apple.certificates</string>
<string>com.apple.identities</string>
</array>
</dict>
</plist>
%@ %@
value
twoWaySync
timestamp
-[NPSUserDefaultsMsgKey writeTo:]
NPSUserDefaultsMsgKey.m
nil != self->_key
kind
feature
setting
restriction
userSettingsAndRestrictions
container
domain
-[NPSUserDefaultsBackupMsg writeTo:]
NPSUserDefaultsBackupMsg.m
nil != self->_domain
com.apple.nanoprefsync
com.apple.private.alloy.preferencessync
com.apple.private.alloy.preferencessync.pairedsync
type
content
com.apple.pairedsync
UserDefaults/
ManagedConfiguration/
UserDefaultsBackup/
FileBackup/
local-device-build-version
last-active-date
paired-device-build-version
mc-data-cache
cache-is-valid
PendingIDSProtobuf for IDSProtobuf received at: %@, GUID: %@, type: %@
Unknown
UserDefault
UserDefaultsBackup
ManagedConfiguration
FileBackup
Undefined
com.apple.nanoprefsyncd.launchtransaction
com.apple.nanoprefsync.workQueue
Progress Tracker: %@
com.apple.nano
@"NSString"8@?0
v8@?0
activeDevice
com.apple.pairedsync.nanoprefsyncdfirst
com.apple.pairedsync.nanoprefsyncd
com.apple.private.alloy.preferencessync-idswake
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.private.alloy.preferencessync.pairedsync-idswake
com.apple.notifyd.matching
Notification
com.apple.Preferences.ChangedRestrictionsEnabledStateNotification
com.apple.NanoTimeKit
notificationsIndicatorEnabled
customMonogram
v16@?0@"NSString"8
com.apple.nanoprefsyncd.pairedsynctransaction
com.apple.NanoPreferencesSync
non-
com.apple.nanoprefsyncd.groupsynctransaction
v48@?0@"NSString"8@"PermittedUserDefaultsDomain"16@"NSString"24@"PermittedUserDefaultsKey"32@"NSMutableDictionary"40
v32@?0@"NSString"8@"PermittedUserDefaultsKey"16^B24
v32@?0@"NSString"8@"NSSet"16^B24
v32@?0@"NSString"8@"NSMutableDictionary"16^B24
v32@?0@"NSString"8@"PermittedUserDefaultsDomain"16^B24
v48@?0@"NSString"8@"UserDefaultsDomain"16@"NSString"24@"UserDefaultsKey"32@"NSMutableDictionary"40
v32@?0@"NSString"8@"NSArray"16^B24
v32@?0@"NSString"8@"UserDefaultsDomain"16^B24
com.apple.nanoprefsyncd.firstlaunchtransaction
B24@?0@"NSString"8@"UserDefaultsKey"16
v32@?0@"NSString"8@"NSMutableSet"16^B24
-[NPSServer checkAndUpdateCacheTimestamps]
-[NPSServer checkActiveDeviceChangedVersion]
MessageSendTimeout
PurgeRetryDelay
36A0EB23-E045-4E99-9D71-8FB9A853ADA7
NPS should not try syncing when there is no active device
com.apple.nanoprefsyncd.idstransaction
ids-reset-timeout-transaction
v28@?0@"NSString"8@"NSSet"16B24
v32@?0@"NSString"8@"NSString"16@"NSSet"24
com.apple.nanoprefsyncd.resourcetransaction
User defaults Msg: GUID: %@
<n/a>
Domain: %@
Keys: [
 %@,
Container: %@
Domain: %@
Keys: [
processing
queueing
not-nil
v32@?0@"NSString"8@"NSDictionary"16^B24
v32@?0@"NPSUserDefaultsBackupMsgKey"8Q16^B24
v24@?0Q8@"NSData"16
com.apple.nanoprefsyncd.restorremotesettingsfrombackup
@"NSError"24@?0@"NSString"8@"NSString"16
v32@?0@"NSURL"8@"NSURL"16^B24
-[NPSServer sendSetting:keys:allowedSyncGroups:messageIdentifier:messageData:cloudEnabled:backupFile:]
v32@?0@"NSString"8@16^B24
%@|%@
F4DCA831-3D30-45BC-BDCC-E99D0E482D94
 | %@
-[NPSServer applyStashedSettingsSyncMessages]
v44@?0@"NSString"8@"NSString"16@"NSData"24B32d36
com.apple.springboard
SBParentalControlsCapabilities
SBParentalControlsEnabled
-[NPSServer debounceOnWorkerQueueWithblock:]_block_invoke
debounceOnWorkerQueueWithblock
-[NPSServer synchronizeUserDefaultsDomain:keys:container:appGroupContainer:cloudEnabled:]
com.apple.nanoprefsyncd.synchronizeuserdefaultsdomain
-[NPSServer synchronizeNanoDomain:keys:cloudEnabled:]
com.apple.nanoprefsyncd.synchronizenanodomaindomain
com.apple.mobile.keybagd.first_unlock
enabling
disabling
NBExclusionListManager
Unable to find class %s
<%@ %p; uuid = (%@); url = (%@)>
uuid
-[NPSUserDefaultsMsg writeTo:]
NPSUserDefaultsMsg.m
InternalBuild
Oji6HRoPi7rH7HPdWVakuw
Domain <%@>
<key: %@; Value: %@>
fileURL
fileData
(nil)
BEGIN EXCLUSIVE TRANSACTION
ROLLBACK TRANSACTION
COMMIT TRANSACTION
meta
SELECT COUNT(*) FROM meta
Unknown Error
PRAGMA journal_mode=WAL;
CREATE TABLE IF NOT EXISTS meta (version INTEGER PRIMARY KEY AUTOINCREMENT, tstamp REAL)
CREATE TABLE IF NOT EXISTS sync_msgs (domain TEXT NOT NULL, key TEXT NOT NULL, messageID TEXT, PRIMARY KEY(domain, key))
CREATE TABLE IF NOT EXISTS backup_msgs (container TEXT NOT NULL DEFAULT (''), domain TEXT NOT NULL, key TEXT NOT NULL, messageID TEXT, PRIMARY KEY(container, domain, key))
CREATE TABLE IF NOT EXISTS msgs_type (messageID TEXT NOT NULL PRIMARY KEY, type INTEGER NOT NULL)
CREATE INDEX sync_msgs_messageID_idx ON sync_msgs (messageID ASC)
CREATE INDEX backup_msgs_messageID_idx ON backup_msgs (messageID ASC)
INSERT INTO meta (tstamp) VALUES (datetime('now'))
CREATE TABLE IF NOT EXISTS file_backup_msgs (path TEXT NOT NULL, messageID TEXT, PRIMARY KEY(path))
CREATE INDEX file_backup_msgs_messageID_idx ON file_backup_msgs (messageID ASC)
CREATE TABLE IF NOT EXISTS stashed_sync_msgs (domain TEXT NOT NULL, key TEXT NOT NULL, data BLOB, two_way_sync INTEGER, timestamp DOUBLE, PRIMARY KEY(domain, key))
ALTER TABLE sync_msgs ADD COLUMN cloudEnabled INTEGER
SELECT type FROM msgs_type WHERE messageID=?
INSERT INTO msgs_type (messageID, type) VALUES (?, ?)
INSERT OR REPLACE INTO sync_msgs (domain, key, messageID, cloudEnabled) VALUES (?, ?, ?, ?)
INSERT OR REPLACE INTO backup_msgs (container, domain, key, messageID) VALUES (?, ?, ?, ?)
INSERT OR REPLACE INTO file_backup_msgs (path, messageID) VALUES (?, ?)
DELETE FROM sync_msgs WHERE domain=? AND key=? AND cloudEnabled=?
DELETE FROM backup_msgs WHERE container=? AND domain=? AND key=?
DELETE FROM file_backup_msgs WHERE path=?
DELETE FROM sync_msgs WHERE messageID=?
DELETE FROM backup_msgs WHERE messageID=?
DELETE FROM file_backup_msgs WHERE messageID=?
DELETE FROM msgs_type WHERE messageID=?
UPDATE sync_msgs SET messageID=NULL WHERE messageID=?
UPDATE backup_msgs SET messageID=NULL WHERE messageID=?
UPDATE file_backup_msgs SET messageID=NULL WHERE messageID=?
SELECT domain, key, cloudEnabled FROM sync_msgs WHERE messageID=?
SELECT container, domain, key FROM backup_msgs WHERE messageID=?
SELECT path FROM file_backup_msgs WHERE messageID=?
SELECT domain, key, cloudEnabled FROM sync_msgs WHERE messageID IS NULL
SELECT container, domain, key FROM backup_msgs WHERE messageID IS NULL
SELECT path FROM file_backup_msgs WHERE messageID IS NULL
INSERT OR REPLACE INTO stashed_sync_msgs (domain, key, data) VALUES (?, ?, ?)
SELECT domain, key, data, two_way_sync, timestamp FROM stashed_sync_msgs
DELETE FROM stashed_sync_msgs
DELETE FROM msgs_type
DELETE FROM sync_msgs
DELETE FROM backup_msgs
DELETE FROM file_backup_msgs
kNPProgressTrackerDomain
kNPProgressTrackerLastBootedKey
kNPProgressTrackerStateKey
kNPProgressTrackerLastProcessingDomainKey
kNPProgressTrackerOversizedDomainsKey
kNPProgressTrackerStateStarted
kNPProgressTrackerStateCompleted
kNPProgressTrackerDomainsKey
start
metadata
System/Library/PreferencesSyncBundles
NPSDomains
NPSAction
NPSDefaultsDomain
NPSDefaultsKeys
NPSDefaultsKeyPrefixes
NPSChangeNotificationName
NPSContainer
NPSAppGroupContainer
NPSCloudEnabled
NPSSyncGroups
NPSPerGizmo
NPSMirrorableBBDomain
NPSMirrorableDomain
NPSMirrorableKey
OneWaySync
TwoWaySync
Whitelist
Permitlist
Local
Tinker
First
<%@: %p key = "%@" twoWaySync = %d
 isPerGizmoSetting = %d
%@%@>
BPSNanoBulletinShowsCustomSettings
<%@: %p domain = "%@" _keys = "%@"
<%@: %p key = "%@" notificationNames = "%@" twoWaySync = %d
com.apple.Carousel
DisableWristDetection
NotificationPrivacy
mirrorDNDState
workoutDND
dndState
dndStateDate
dndEffectiveOverrides
dndPrivilegedSenderTypes
self ENDSWITH '.bundle'
B44@?0@"NSBundle"8@"NSString"16B24@"<NSObject>"28#36
Key %@ not found when expected.
Item in container for key %@ expected to be of type %@.
Key %@ expected to be of type %@.
v28@?0@"NSString"8B16@"NSString"20
com.apple.bulletinboard.apps
SIMULATOR_ROOT
-[NPSUserDefaultsBackupMsgKey writeTo:]
NPSUserDefaultsBackupMsgKey.m
NanoPreferencesSync
Cache/
Backup/UserDefaults/
Backup/Files/
index
database.db
-[NPSDeviceRegistry startMonitoringPairingEventsWithQueue:]
NPSDeviceRegistry.m
queue
com.apple.nanoprefsyncd.dump
%@.%ld
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
UserDefaults
NanoSetting
undefined
-[NPSSettingAccessor requiresDeviceUnlockedSinceBoot]
-[NPSFileBackupManager backupFileAtURL:originalFileURL:]
apple-internal-install
nil _deviceRegistry
nil pairedDevice
nil pairingID
nil pairingDataStore
other1
other2
-[NPSFileBackupManager enumerateFileBackupsUsingBlock:]
v32@?0@"NSURL"8@"NPSFileBackupMetadata"16^B24
-[NPSFileBackupManager localFileURLForOriginalFileURL:]
URLWithString:
writeToURL:error:
writeToFile:options:error:
writeData:
waitForActiveOrAltAccountDevice
valueForProperty:
userSettings
unsignedLongLongValue
unionSet:
unarchivedObjectOfClasses:fromData:error:
timeIntervalSinceReferenceDate
synchronizeUserDefaultsDomain:keys:cloudEnabled:
syncSessionType
syncDidFailWithError:
syncDidCompleteSending
syncDidComplete
syncCoordinatorWithServiceName:
supportsCapability:
substringWithRange:
subdataWithRange:
stringWithUTF8String:
stringWithFormat:
stringForKey:
stringByStandardizingPath
stringByAppendingString:
stringByAppendingPathComponent:
stringByAppendingFormat:
sortedArrayUsingSelector:
sharedConnection
setWithObjects:
setWithObject:
setWithArray:
setProtobufAction:forIncomingRequestsOfType:
setObject:forKeyedSubscript:
setInvalidationHandler:
setInterruptionHandler:
setExportedObject:
setExportedInterface:
setDelegate:queue:
setDelegate:
setClasses:forSelector:argumentIndex:ofReply:
setBool:forKey:
sendResourceAtURL:metadata:toDestinations:priority:options:identifier:error:
sendProtobuf:toDestinations:priority:options:identifier:error:
resume
reportProgress:
removeObserver:forKeyPath:
removeObjectForKey:
removeObject:
removeItemAtURL:error:
removeItemAtPath:error:
removeAllObjects
readDataOfLength:
propertyListWithData:options:format:error:
processInfo
prefSizeFor:inContainer:
predicateWithFormat:
pairedDevice
outgoingResponseIdentifier
offsetInFile
objectForKeyedSubscript:
objectForInfoDictionaryKey:
objectAtIndexedSubscript:
objectAtIndex:
numberWithUnsignedLongLong:
numberWithUnsignedLong:
numberWithUnsignedInteger:
numberWithDouble:
numberWithBool:
null
nonActiveDeviceForIDSDevice:
name
mutableCopy
moveItemAtPath:toPath:error:
minusSet:
localizedDescription
linkedDevicesWithRelationship:
length
isEqualToString:
isEqualToArray:
interfaceWithProtocol:
integerForKey:
intValue
initWithUUIDString:
initWithString:
initWithService:
initWithProtobufData:type:isResponse:
initWithMachServiceName:
initWithFormat:
initWithDomain:pairingID:pairingDataStore:
initWithDomain:
initWithData:
initWithCapacity:
initWithBundleIdentifier:allowPlaceholder:error:
hasPrefix:
groupContainerURLs
getResourceValue:forKey:error:
getAllDevicesWithArchivedAltAccountDevicesMatching:
firstObject
filteredArrayUsingPredicate:
fileURLWithPath:isDirectory:
fileURLWithPath:
fileSystemRepresentation
fileHandleForWritingToURL:error:
fileHandleForReadingFromURL:error:
fileExistsAtPath:isDirectory:
fileExistsAtPath:
excludedPerGizmoDomains
excludedKeysInDomain:
exceptionWithName:reason:userInfo:
errorWithDomain:code:userInfo:
environment
enumerateObjectsUsingBlock:
enumerateKeysAndObjectsUsingBlock:
encodeObject:forKey:
effectiveRestrictions
doubleValue
domainSize
dictionaryWithObjects:forKeys:count:
dictionaryWithContentsOfFile:
dictionary
deviceForIDSDevice:
deviceForFromID:
defaultManager
defaultCenter
decodeObjectOfClass:forKey:
date
dataWithPropertyList:format:options:error:
dataWithLength:
dataWithContentsOfFile:options:error:
dataWithContentsOfFile:
dataWithBytes:length:
dataContainerURL
data
currentRunLoop
createFileAtPath:contents:attributes:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
countByEnumeratingWithState:objects:count:
count
copy
context
contentsOfDirectoryAtPath:error:
containsObject:
compatibilityState
code
closeFile
bytes
boolValue
boolForKey:keyExistsAndHasValidFormat:
boolForKey:
arrayWithObjects:count:
arrayWithObject:
arrayWithCapacity:
array
archivedDataWithRootObject:requiringSecureCoding:error:
appendString:
appendFormat:
appendData:
allocWithZone:
allValues
allObjects
allKeys
addObserver:selector:name:object:
addObserver:forKeyPath:options:context:
addObjectsFromArray:
addObject:
addEntriesFromDictionary:
addDelegate:queue:
activeDeviceSelectorBlock
UTF8String
UUIDString
UUID
description
copyWithZone:
hasValue
setTwoWaySync:
setHasTwoWaySync:
hasTwoWaySync
setTimestamp:
setHasTimestamp:
hasTimestamp
dictionaryRepresentation
readFrom:
writeTo:
copyTo:
isEqual:
hash
mergeFrom:
setKey:
value
setValue:
twoWaySync
timestamp
.cxx_destruct
_timestamp
_key
_value
_twoWaySync
_has
T@"NSString",&,N,V_key
TB,R,N
T@"NSData",&,N,V_value
TB,N
TB,N,V_twoWaySync
Td,N,V_timestamp
hasKind
hasFeature
hasSetting
hasRestriction
hasUserSettingsAndRestrictions
kind
setKind:
feature
setFeature:
setting
setSetting:
restriction
setRestriction:
userSettingsAndRestrictions
setUserSettingsAndRestrictions:
_feature
_kind
_restriction
_setting
_userSettingsAndRestrictions
T@"NSString",&,N,V_kind
T@"NSString",&,N,V_feature
T@"NSData",&,N,V_setting
T@"NSData",&,N,V_restriction
T@"NSData",&,N,V_userSettingsAndRestrictions
keyType
hasContainer
clearKeys
addKey:
keysCount
keyAtIndex:
container
setContainer:
domain
setDomain:
keys
setKeys:
_container
_domain
_keys
T@"NSString",&,N,V_container
T@"NSString",&,N,V_domain
T@"NSMutableArray",&,N,V_keys
unarchiveObjectOfClasses:withFile:
unarchiveObjectOfClasses:withData:
archiveObject:
init
pendingIDSProtobufMessageTypeToString:
initWithIDSProtobuf:ofType:from:receivedAt:
receivedDate
idsProtobuf
messageType
fromIDSDevice
_receivedDate
_idsProtobuf
_messageType
_fromIDSDevice
T@"NSDate",R,N,V_receivedDate
T@"IDSProtobuf",R,N,V_idsProtobuf
TQ,R,N,V_messageType
T@"IDSDevice",R,N,V_fromIDSDevice
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:linkedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantUpdate:context:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
dealloc
handleUserDefaultsMsg:service:account:fromID:context:
handleFileBackupMessage:service:account:fromID:context:
handleUserDefaultsBackupMsg:service:account:fromID:context:
synchronizeUserDefaultsDomain:keys:container:appGroupContainer:cloudEnabled:
synchronizeNanoDomain:keys:cloudEnabled:
compare:
shouldAllowSyncOfItemWithSyncGroups:allowedSyncGroups:
maxSendTimeout
purgeRetryDelay
logManagedConfigurationDictionary:
queueOneIdentifierForUserDefaultsMsg:
queueOneIdentifierForUserDefaultsBackupMsg:
managedConfigurationSettings
isManagedConfigurationSettingPermittedForKind:feature:
managedConfigurationData
queueOneIdentifierForManagedConfigurationMsg:
queueOneIdentifierForFileBackupMsg:
setLaunchNotificationsEnabled:
setLaunchNotification:enabled:
syncCoordinator:beginSyncSession:
syncCoordinator:didInvalidateSyncSession:
syncCoordinatorDidChangeSyncRestriction:
supportsMigrationSync
syncCoordinatorDidReceiveStartSyncCommand:
listener:shouldAcceptNewConnection:
resetIfActiveDeviceChanged
initCore:
fileBackupManager
invalidate
allowedGroups
performMigration
hasPerformedInitialSync
hasPairedDevice
setHasPerformedInitialSync:updateBuildVersion:withDevice:
registerInitialSyncMessage:ofSize:orReportInitialSyncFailureWithError:
syncCompletedWithError:withDevice:
_completeActiveSyncSessionWithError:
registerSyncMessageWithIdentifier:size:
observeValueForKeyPath:ofObject:change:context:
startPrefsSyncWithGroups:backupWriter:withCompletionHandler:
systemBuildVersion
performFirstLaunchIntoNewBuildTasks
handleActiveDeviceChangedVersionNotification
checkIfTinkerLastActiveDateChanged
checkAndUpdateCacheTimestamps
checkActiveDeviceChangedVersion
sendMessageData:messageType:queueOneIdentifier:identifier:cloudEnabled:
doesCurrentDeviceSupportNewIDSServiceForSync
sendMessageData:messageType:queueOneIdentifier:identifier:isPairedSyncMessage:cloudEnabled:
_suspendIDSMessageProcessing
_resumeIDSMessageProcessingWithDevice:
resendMessagesForMessageID:
_logUserDefaults:idsGuid:
_logUserDefaultsBackup:idsGuid:
handleUserDefaultsMsgData:backupFile:idsGuid:
handlePermittedUserDefaultsMsg:messageData:overwriteNewerTimestamps:backupFile:
handleRestoreOfSyncingUserDefaultsMsg:backupFile:
handleUserDefaultsBackupMsgData:backupFile:idsGuid:
handleFileBackupMessage:resourceURL:backupFile:
handleFullBackupMessage:resourceURL:idsGuid:
cachePathForDomain:isPerGizmo:
readCacheFromDiskForDomain:isPerGizmo:
writeCache:toDiskForDomain:isPerGizmo:
deleteCacheForDomain:isPerGizmo:
updateCacheForDomain:keys:twoWaySyncTimestamp:isPerGizmo:
restoreRemoteSettingsFromBackup
restoreRemoteFilesFromBackup
restoreFileBackupForLocalFileURL:originalFileURL:isInitialSync:
createDirectoryIfNeeded:
backupPathForDomain:container:
usingPrefsFromDomain:
sendSetting:keys:allowedSyncGroups:messageIdentifier:messageData:cloudEnabled:backupFile:
sendSettingsBackupInDomain:keys:container:isInitialSync:backupFile:
doesCurrentDeviceSupportGroupedTwoWayKeys
getCachedTimeStampFor:key:usePerGizmoCache:
newDefaultsMsgWithDomain:
sendUserDefaultMsg:forDomain:includedKeys:cloudEnabled:backupFile:
sendSettingsInDomain:keys:cloudEnabled:backupFile:allowedGroups:
sendPUDSettingsInDomain:keys:backupFile:allowedGroups:
applyStashedSettingsSyncMessages
handleAppChangedRestrictions
debounceOnWorkerQueueWithblock:
handleManagedConfigurationChangedNotification
forceResyncManagedConfigurationIsInitialSync:
resyncManagedConfigurationIfNeeded
resyncManagedConfigurationIfNeededIsInitialSync:
sendManagedConfigurationSettings:isInitialSync:
retryFileBackupRestoreForFilePath:
pairedSyncCoordinatorFirstSync
setPairedSyncCoordinatorFirstSync:
pairedSyncCoordinatorRemainderSync
setPairedSyncCoordinatorRemainderSync:
activeSyncSession
setActiveSyncSession:
totalDataToSyncInBytes
setTotalDataToSyncInBytes:
remainingDataToSyncInBytes
setRemainingDataToSyncInBytes:
syncSessionProgressDictionary
syncTransaction
setSyncTransaction:
syncProgressTracker
setSyncProgressTracker:
dumper
setDumper:
workQueue
setWorkQueue:
settings
setSettings:
xpcListener
setXpcListener:
idsService
setIdsService:
idsServiceSyncState
setIdsServiceSyncState:
deviceRegistry
setDeviceRegistry:
database
setDatabase:
purgeTimer
setPurgeTimer:
setAllowedGroups:
currentlyUsedDomain
setCurrentlyUsedDomain:
activeDeviceID
setActiveDeviceID:
mcDebounceSource
setMcDebounceSource:
_processingIDSMessage
_pendingIDSMessages
_fileBackupManager
_pairedSyncCoordinatorFirstSync
_pairedSyncCoordinatorRemainderSync
_activeSyncSession
_totalDataToSyncInBytes
_remainingDataToSyncInBytes
_syncSessionProgressDictionary
_syncTransaction
_syncProgressTracker
_dumper
_workQueue
_settings
_xpcListener
_idsService
_idsServiceSyncState
_deviceRegistry
_database
_purgeTimer
_allowedGroups
_currentlyUsedDomain
_activeDeviceID
_mcDebounceSource
T@"NPSFileBackupManager",R,N,V_fileBackupManager
T@"PSYSyncCoordinator",&,N,V_pairedSyncCoordinatorFirstSync
T@"PSYSyncCoordinator",&,N,V_pairedSyncCoordinatorRemainderSync
T@"PSYServiceSyncSession",&,N,V_activeSyncSession
TQ,N,V_totalDataToSyncInBytes
TQ,N,V_remainingDataToSyncInBytes
T@"NSMutableDictionary",R,N,V_syncSessionProgressDictionary
T@"NSObject<OS_os_transaction>",&,N,V_syncTransaction
T@"NPProgressTracker",&,N,V_syncProgressTracker
T@"NPSOSLogStateProvider",&,N,V_dumper
T@"NSObject<OS_dispatch_queue>",&,N,V_workQueue
T@"NPSSettings",&,N,V_settings
T@"NSXPCListener",&,N,V_xpcListener
T@"IDSService",&,N,V_idsService
T@"IDSService",&,N,V_idsServiceSyncState
T@"NPSDeviceRegistry",&,N,V_deviceRegistry
T@"NPSDatabase",&,N,V_database
T@"NSObject<OS_dispatch_source>",&,N,V_purgeTimer
T@"NSDictionary",&,N,V_allowedGroups
T@"NSString",&,N,V_currentlyUsedDomain
T@"NSUUID",&,N,V_activeDeviceID
T@"NSObject<OS_dispatch_source>",&,N,V_mcDebounceSource
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
uuid
setUuid:
setUrl:
_uuid
_url
T@"NSUUID",&,N,V_uuid
T@"NSURL",&,N,V_url
dumpDomain:
hasFileURL
hasFileData
fileURL
setFileURL:
fileData
setFileData:
_fileData
_fileURL
T@"NSData",&,N,V_fileURL
T@"NSData",&,N,V_fileData
initWithPath:
setMessageType:forMessageID:
getMessageType:forMessageID:
removeMessageFromMessageTypeTable:
sentSettingsSyncMessage:forDomain:keys:cloudEnabled:
untrackSettingsSyncMessagesForDomain:keys:cloudEnabled:
sentSettingsBackupMessage:forContainer:domain:keys:
untrackSettingsBackupMessageForContainer:domain:keys:
sentFileBackupMessage:forFileAtPath:
untrackFileBackupMessageForFileAtPath:
messageWasDelivered:
messageWasPurged:
getSettingsSyncDataForMessage:handler:
getSettingsBackupDataForMessage:handler:
getFileBackupDataForMessage:handler:
stashSettingsSyncData:forDomain:key:isTwoWaySync:timestamp:
getStashedSettingsSyncDataWithHandler:
flushStashedSettingsSyncData
purgePendingOutgoingMessages
_getSchemaVersion
_openDBAtPath:
path
setPath:
version
setDb:
getMessageTypeForMessageID
setGetMessageTypeForMessageID:
setMessageTypeForMessageID
setSetMessageTypeForMessageID:
setMessageIDForSettingSync
setSetMessageIDForSettingSync:
setMessageIDForSettingBackup
setSetMessageIDForSettingBackup:
setMessageIDForFileBackup
setSetMessageIDForFileBackup:
untrackSettingsSyncMessage
setUntrackSettingsSyncMessage:
untrackSettingsBackupMessage
setUntrackSettingsBackupMessage:
untrackFileBackupMessage
setUntrackFileBackupMessage:
untrackSettingsSyncForMessageID
setUntrackSettingsSyncForMessageID:
untrackSettingsBackupForMessageID
setUntrackSettingsBackupForMessageID:
untrackFileBackupForMessageID
setUntrackFileBackupForMessageID:
removeMessageFromMessageTypeTable
setRemoveMessageFromMessageTypeTable:
setNullMessageIDForSettingSync
setSetNullMessageIDForSettingSync:
setNullMessageIDForSettingBackup
setSetNullMessageIDForSettingBackup:
setNullMessageIDForFileBackup
setSetNullMessageIDForFileBackup:
getSettingsSyncForMessageID
setGetSettingsSyncForMessageID:
getSettingsBackupForMessageID
setGetSettingsBackupForMessageID:
getFileBackupForMessageID
setGetFileBackupForMessageID:
getSettingsSyncWithNullMessageID
setGetSettingsSyncWithNullMessageID:
getSettingsBackupWithNullMessageID
setGetSettingsBackupWithNullMessageID:
getFileBackupWithNullMessageID
setGetFileBackupWithNullMessageID:
stashSettingsSyncData
setStashSettingsSyncData:
getStashedSettingSyncData
setGetStashedSettingSyncData:
flushStashedSettingSyncData
setFlushStashedSettingSyncData:
purgeMessageTypeTable
setPurgeMessageTypeTable:
purgeSettingsSyncTable
setPurgeSettingsSyncTable:
purgeSettingsBackupTable
setPurgeSettingsBackupTable:
purgeFileBackupTable
setPurgeFileBackupTable:
_path
_version
_getMessageTypeForMessageID
_setMessageTypeForMessageID
_setMessageIDForSettingSync
_setMessageIDForSettingBackup
_setMessageIDForFileBackup
_untrackSettingsSyncMessage
_untrackSettingsBackupMessage
_untrackFileBackupMessage
_untrackSettingsSyncForMessageID
_untrackSettingsBackupForMessageID
_untrackFileBackupForMessageID
_removeMessageFromMessageTypeTable
_setNullMessageIDForSettingSync
_setNullMessageIDForSettingBackup
_setNullMessageIDForFileBackup
_getSettingsSyncForMessageID
_getSettingsBackupForMessageID
_getFileBackupForMessageID
_getSettingsSyncWithNullMessageID
_getSettingsBackupWithNullMessageID
_getFileBackupWithNullMessageID
_stashSettingsSyncData
_getStashedSettingSyncData
_flushStashedSettingSyncData
_purgeMessageTypeTable
_purgeSettingsSyncTable
_purgeSettingsBackupTable
_purgeFileBackupTable
T@"NSString",&,N,V_path
T^{sqlite3=},N,V_db
T^{sqlite3_stmt=},N,V_getMessageTypeForMessageID
T^{sqlite3_stmt=},N,V_setMessageTypeForMessageID
T^{sqlite3_stmt=},N,V_setMessageIDForSettingSync
T^{sqlite3_stmt=},N,V_setMessageIDForSettingBackup
T^{sqlite3_stmt=},N,V_setMessageIDForFileBackup
T^{sqlite3_stmt=},N,V_untrackSettingsSyncMessage
T^{sqlite3_stmt=},N,V_untrackSettingsBackupMessage
T^{sqlite3_stmt=},N,V_untrackFileBackupMessage
T^{sqlite3_stmt=},N,V_untrackSettingsSyncForMessageID
T^{sqlite3_stmt=},N,V_untrackSettingsBackupForMessageID
T^{sqlite3_stmt=},N,V_untrackFileBackupForMessageID
T^{sqlite3_stmt=},N,V_removeMessageFromMessageTypeTable
T^{sqlite3_stmt=},N,V_setNullMessageIDForSettingSync
T^{sqlite3_stmt=},N,V_setNullMessageIDForSettingBackup
T^{sqlite3_stmt=},N,V_setNullMessageIDForFileBackup
T^{sqlite3_stmt=},N,V_getSettingsSyncForMessageID
T^{sqlite3_stmt=},N,V_getSettingsBackupForMessageID
T^{sqlite3_stmt=},N,V_getFileBackupForMessageID
T^{sqlite3_stmt=},N,V_getSettingsSyncWithNullMessageID
T^{sqlite3_stmt=},N,V_getSettingsBackupWithNullMessageID
T^{sqlite3_stmt=},N,V_getFileBackupWithNullMessageID
T^{sqlite3_stmt=},N,V_stashSettingsSyncData
T^{sqlite3_stmt=},N,V_getStashedSettingSyncData
T^{sqlite3_stmt=},N,V_flushStashedSettingSyncData
T^{sqlite3_stmt=},N,V_purgeMessageTypeTable
T^{sqlite3_stmt=},N,V_purgeSettingsSyncTable
T^{sqlite3_stmt=},N,V_purgeSettingsBackupTable
T^{sqlite3_stmt=},N,V_purgeFileBackupTable
TQ,R,N,V_version
initWithPathToCreateBlobFile:
initWithPathToLoadBlobFile:
writeBlob:
readBlob
close
isFileGood
_offset
_done
tempFilePath
losslessFileCompressionFrom:to:shouldCompress:
initWithPathToCreateBackup:
initWithPathToLoadBackup:
writeMessage:data:
enumerateMessages:
doneWriting
compressedPath
_uncompressedPath
_compressedPath
T@"NSURL",R,N,V_compressedPath
nps_mineTinkerDevices
nps_defaultPairedDeviceIDIncludingTinkerDevices
nps_nrDevice
sharedInstance
_init
startedOperations
canStartOperation:
beganOperation:
completedOperation:
completedOperations
clearState
dump
addMetaDataForOperation:metaData:
addToProblematicOperationList:
_clearState
_processStateClearIfNeeded
_lastBootedTimeFromPref
_saveLastBootedTimeToPref:
_setValue:forKey:
_valueForKey:
_getOperationDictionary:
_save:forOperation:
crashedDuringLastRun
setCrashedDuringLastRun:
problematicOperationList
setProblematicOperationList:
_crashedDuringLastRun
_problematicOperationList
TB,V_crashedDuringLastRun
T@"NSMutableArray",&,V_problematicOperationList
isMirroring
isPrefix
setIsPrefix:
appGroupContainer
setAppGroupContainer:
isCloudEnabled
setIsCloudEnabled:
syncGroups
setSyncGroups:
isPerGizmoSetting
setIsPerGizmoSetting:
mirrorableBBDomain
setMirrorableBBDomain:
mirrorableDomain
setMirrorableDomain:
mirrorableKey
setMirrorableKey:
_isPrefix
_isCloudEnabled
_isPerGizmoSetting
_appGroupContainer
_syncGroups
_mirrorableBBDomain
_mirrorableDomain
_mirrorableKey
TB,N,V_isPrefix
T@"NSString",&,N,V_appGroupContainer
TB,N,V_isCloudEnabled
T@"NSSet",&,N,V_syncGroups
TB,N,V_isPerGizmoSetting
T@"NSString",&,N,V_mirrorableBBDomain
T@"NSString",&,N,V_mirrorableDomain
T@"NSString",&,N,V_mirrorableKey
keyArrays
setKeyArrays:
keyPrefixArrays
setKeyPrefixArrays:
_keyArrays
_keyPrefixArrays
T@"NSMutableDictionary",&,N,V_keyArrays
T@"NSMutableDictionary",&,N,V_keyPrefixArrays
notificationNames
setNotificationNames:
_notificationNames
T@"NSMutableSet",&,N,V_notificationNames
keyPrefixes
setKeyPrefixes:
_keyPrefixes
T@"NSMutableDictionary",&,N,V_keys
T@"NSMutableDictionary",&,N,V_keyPrefixes
domainShouldSyncFirst:key:
preprocessItemSyncGroups:forDomain:key:
bbAppsSettings
_settingBundlesInDirectories:
loadSettingsBundles
syncedUserDefaults
setSyncedUserDefaults:
permittedUserDefaults
setPermittedUserDefaults:
_syncedUserDefaults
_permittedUserDefaults
T@"NSMutableDictionary",&,N,V_syncedUserDefaults
T@"NSMutableDictionary",&,N,V_permittedUserDefaults
_registryChanged:
nrDeviceForIDSDevice:
initWithNPSServer:
startMonitoringPairingEventsWithQueue:
waitForPairedOrPairingDevice
isPaired
isAltAccountDevice
lastActiveDate
pairingID
pairingDataStore
pairingDevice
perGizmoCacheDirectoryPath
globalCacheDirectoryPath
domainAccessor
userDefaultsBackupDirectoryPath
filesBackupDirectoryPath
filesBackupMetadataIndexPath
databasePath
checkForActiveDeviceChange
queue
activeDevice
setActiveDevice:
shouldRun
hasCheckedInWithNanoRegistry
setHasCheckedInWithNanoRegistry:
alreadyExistingAssertion
setAlreadyExistingAssertion:
setPairingDataStore:
setDomainAccessor:
setPerGizmoCacheDirectoryPath:
setGlobalCacheDirectoryPath:
setUserDefaultsBackupDirectoryPath:
setFilesBackupDirectoryPath:
setFilesBackupMetadataIndexPath:
setDatabasePath:
registryChangedSemaphores
setRegistryChangedSemaphores:
server
setServer:
_shouldRun
_hasCheckedInWithNanoRegistry
_queue
_activeDevice
_alreadyExistingAssertion
_pairingDataStore
_domainAccessor
_perGizmoCacheDirectoryPath
_globalCacheDirectoryPath
_userDefaultsBackupDirectoryPath
_filesBackupDirectoryPath
_filesBackupMetadataIndexPath
_databasePath
_registryChangedSemaphores
_server
TB,N,V_hasCheckedInWithNanoRegistry
T@"NRDevice",&,N,V_activeDevice
T@"NRActiveDeviceAssertion",W,N,V_alreadyExistingAssertion
T@"NSString",&,N,V_pairingDataStore
T@"NPSDomainAccessor",&,N,V_domainAccessor
T@"NSString",&,N,V_perGizmoCacheDirectoryPath
T@"NSString",&,N,V_globalCacheDirectoryPath
T@"NSString",&,N,V_userDefaultsBackupDirectoryPath
T@"NSString",&,N,V_filesBackupDirectoryPath
T@"NSString",&,N,V_filesBackupMetadataIndexPath
T@"NSString",&,N,V_databasePath
T@"NSMutableArray",&,N,V_registryChangedSemaphores
T@"NPSServer",W,N,V_server
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
paired
TB,R,N,GisPaired
T@"NSDate",R,N
TB,R,N,V_shouldRun
initWithName:maxStringLength:block:
registerOSLogStateHandlerName:block:
_lastDumpString
serializeObject:error:
unserializeObject:error:
initWithUserDefaultsDomain:container:appGroupContainer:
initWithUserDefaultsDomain:containerPath:
initWithNanoDomain:
containerPath
synchronizeForReading
synchronizeForWriting
synchronize
objectForKey:
setObject:forKey:
copyKeyList
serializedObjectForKey:error:
domainPlistSize
sizeSafeToWrite
sizeSafeToLoadInMemory
typeString
requiresDeviceUnlockedSinceBoot
type
setType:
nanoDomainAccessor
setNanoDomainAccessor:
hasChangesToWrite
setHasChangesToWrite:
setContainerPath:
_hasChangesToWrite
_type
_nanoDomainAccessor
_containerPath
TB,N,V_hasChangesToWrite
T@"NSString",&,N,V_containerPath
Tq,N,V_type
T@"NPSDomainAccessor",&,N,V_nanoDomainAccessor
initWithDeviceRegistry:
activeDeviceChanged
backupFileAtURL:originalFileURL:
enumerateFileBackupsUsingBlock:
localFileURLForOriginalFileURL:
pathToFileWithUUID:
fileURLWithUUID:
metadataIndexReadFromDiskIfNeeded
persistMetadataIndex
newFileUUID
metadataIndex
setMetadataIndex:
_metadataIndex
T@"NSUUID",N,V_activeDeviceID
T@"NSMutableDictionary",&,N,V_metadataIndex
NPSUserDefaultsMsgKey
NSCopying
NPSManagedConfigurationMsg
NPSUserDefaultsBackupMsg
NPSKeyedArchiverUtil
PendingIDSProtobuf
NPSIDSBlackHole
IDSServiceDelegate
NSObject
NPSCompanionServerProtocol
NPSServerProtocol
NPSServer
PSYSyncCoordinatorDelegate
NSXPCListenerDelegate
NPSFileBackupMetadata
NSSecureCoding
NSCoding
NPSUserDefaultsMsg
Logger
NPSFileBackupMsg
NPSDatabase
NPSBlobReaderWriter
NPSBackupReaderWriter
NPProgressTracker
UserDefaultsKey
UserDefaultsDomain
PermittedUserDefaultsKey
PermittedUserDefaultsDomain
NPSSettings
NPSUserDefaultsBackupMsgKey
NPSDeviceRegistry
NPSOSLogStateProvider
NPSSettingAccessor
NPSFullBackupMsg
NPSFileBackupManager
@24@0:8^{_NSZone=}16
B16@0:8
v20@0:8B16
v24@0:8d16
@16@0:8
B24@0:8@16
v24@0:8@16
Q16@0:8
d16@0:8
v16@0:8
@"NSString"
@"NSData"
{?="timestamp"b1"twoWaySync"b1}
#16@0:8
@24@0:8Q16
@"NSMutableArray"
@32@0:8@16@24
@24@0:8@16
@48@0:8@16Q24@32@40
@"NSDate"
@"IDSProtobuf"
@"IDSDevice"
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v64@0:8@16@24@32@40@48@56
v40@0:8@16@24@32
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v32@0:8@16@24
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v40@0:8@16@24@?32
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32@"IDSMessageContext"40
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v52@0:8@16@24@32@40B48
v52@0:8@"NSString"16@"NSSet"24@"NSString"32@"NSString"40B48
v36@0:8@16@24B32
v36@0:8@"NSString"16@"NSSet"24B32
B32@0:8@16@24
q16@0:8
v28@0:8@16B24
v32@0:8@"PSYSyncCoordinator"16@"PSYServiceSyncSession"24
v24@0:8@"PSYSyncCoordinator"16
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v24@0:8@?16
v32@0:8B16B20@24
v40@0:8@16Q24@32
v32@0:8@16Q24
v48@0:8@16@24@32^v40
@48@0:8@16i24@28^@36B44
@52@0:8@16i24@28^@36B44B48
B44@0:8@16@24B32@36
@28@0:8@16B24
B36@0:8@16@24B32
B28@0:8@16B24
v44@0:8@16@24@32B40
@36@0:8@16@24B32
@68@0:8@16@24@32^@40^@48B56@60
@52@0:8@16@24@32B40@44
v52@0:8@16@24B32@36@44
v24@0:8Q16
@"NPSFileBackupManager"
@"PSYSyncCoordinator"
@"PSYServiceSyncSession"
@"NSMutableDictionary"
@"NSObject<OS_os_transaction>"
@"NPProgressTracker"
@"NPSOSLogStateProvider"
@"NSObject<OS_dispatch_queue>"
@"NPSSettings"
@"NSXPCListener"
@"IDSService"
@"NPSDeviceRegistry"
@"NPSDatabase"
@"NSObject<OS_dispatch_source>"
@"NSDictionary"
@"NSUUID"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSURL"
{?="timestamp"b1}
B28@0:8i16@20
B32@0:8^i16@24
v32@0:8@16@?24
v52@0:8@16@24@32B40d44
i16@0:8
^{sqlite3=}16@0:8
v24@0:8^{sqlite3=}16
^{sqlite3_stmt=}16@0:8
v24@0:8^{sqlite3_stmt=}16
^{sqlite3=}
^{sqlite3_stmt=}
@"NSFileHandle"
v32@0:8Q16@24
B24@0:8@?16
@"NPSBlobReaderWriter"
@"NSSet"
@"NSMutableSet"
@40@0:8@16@24@32
@"NRDevice"
@"NRActiveDeviceAssertion"
@"NPSDomainAccessor"
@"NPSServer"
@40@0:8@16q24@?32
@32@0:8@16^@24
v24@0:8q16
Error (%@) reading data from (%@)
Error (%@) unarchiving expected classes (%@) with (%@) bytes data
Error (%@) archiving (%@)
Launching; "NanoPreferencesSyncDaemon_Sim-307" "185"
Received notification: %s
Received managed configuration change notification
Received unexepectedly NULL notification
Received unexpected non-dictionary type event: (%@)
setHasPerformedInitialSync: Alt account device. Force set sync complete.
setHasPerformedInitialSync: Alt account device. Not paired, not forcing sync complete
setHasPerformedInitialSync: (%d, %d, %{public}@)
setHasPerformedInitialSync called but the active device isn't paired to a non-archived device.
setHasPerformedInitialSync: Paired device build version being updated from %@ to %@
setHasPerformedInitialSync: Local device build version being updated from %@ to %@
setHasPerformedInitialSync: LastActiveDate being updated from %llu -> %llu
setHasPerformedInitialSync: sendSetting failed.
Not doing check for initial sync, as this is alt account device.
setHasPerformedInitialSync: Posting notification %@ (NPSHasCompletedInitialSync)
syncCompletedWithError: Sync completed: error=%@
_completeActiveSyncSessionWithError: Reporting sync failure (%@) to sync session: (%@)
_completeActiveSyncSessionWithError:Reporting successful sync completion to sync session: (%@)
coordinator: (%@)
Asked to start syncing for sync session (%@) even though there already is an active sync session (%@)
total: (%llu), remaining: (%llu); initialSyncProgressDictionary: (%@)
strongSession: (%p); _activeSyncSession: (%p)
Did not complete syncing before timer expired; Sync Session: (%@); Pending Messages: (%@)
Active device changed: %snil -> %snil
startPrefsSyncWithGroups: %{public}@
Backup list before exclusions: %@ : %@
Excluding: %@
Backup list after exclusions: %@ : %@
Removed all keys from: %@
Excluding: %@ from backup, it's on the exclusion list
startPrefsSyncWithGroups: No data synced.
checkIfTinkerLastActiveDateChanged: LastActiveDate changed from %llu -> %llu Tinker watch switch detected
%s: - value: %@
%s: %@ doesn't exist in domain %@ cache is not valid
%s: setting all timestamps to now
%s: Unable to write to url: %@.  Error: %@
%s: can't open cache dir(%@), assuming there is nothing to update: %@
%s: Skipping Paired Device Version change check. Not paired.
%s: Detected first launch after pairing; Local build version: (%@)
%s: Detected local device update; Current build version: (%@); Previous: (%@)
%s: Doing new build tasks
%s: New build tasks completed
%s: lastRegisteredPairedDeviceBuildVersion: (%@); pairedDeviceBuildVersion: (%@)
%s: Doing a sync because of a build version change
%s: No build version change detected.
%s: Skipping Paired Device Version change check. Has not performed initial sync yet.
Using IDS service for sending sync state.
Successfully sent message with identifier: (%@)
Failed sending message with error: (%@)
Suspending IDS message processing
Resuming IDS message processing. Has %lu pending IDS messages to process.
Processing %@
%@ was originated from %@, not current active device %@; dropping.
Unsupported message type on non-watchOS, ignoring
service: (%@), account: (%@), identifier: (%@), success: (%d), error: (%@)
progress: (%f), total: (%llu), remaining: (%llu)
Message (%@) failed to be delivered with error: (%@)
Purge Timer fired!
Releasing transaction for ids-reset-timeout-transaction
messageID: (%@)
Failed re-sending settings backup for container (%@), domain (%@), keys (%@).
Failed re-sending file backup (%@) for identifier (%@)!
service: (%@); account: (%@); incomingResourceAtURL: (%@); metadata: (%@); fromID: (%@); context: (%@)
nil messageType. metadata: (%@)
Un-handled message type: (%@)
%{public}@
handleUserDefaultsMsg: %s idsProtobuf: (%p); outgoingResponseIdentifier: (%@)
Added %@ to pending IDS messages queue, size = %lu
Could not parse incoming data
Handling User Defaults message for domain: (%@);        hasTimestamp: (%d);        timestamp: (%f);        overwriteNewerTimestamps: (%s)
Domain (%@) not permitted; dropping incoming message
Handling key in domain: (%@)            key: (%@);            value: (%s);            hasTimestamp: (%d);            timestamp: (%f);            overwriteNewerTimestamps: (%s)
Using timestamp from user defaults message key (%f) for <Domain %@; key %@>.
Using timestamp from user defaults message (%f) for <Domain %@; key %@>.
Key (%@) in domain (%@) not permitted; dropping incoming message
Creating domain accessor (domain: %@, container: %@, appGroupContainer: %@)
Unable to create settings accessor for Key (%@) Domain (%@); dropping incoming message.
Received User Defaults value for <%@, %@>: (%@)
Discarding cached timestamp for <%@, %@> since it is set to the future; cached: (%f); current: (%f)
Updating timestamp for domain:%@ key:%@ to timestamp: %f
Discarding incoming setting for <%@, %@>, local value is more recent
Local expects <%@, %@> to be 2-way-synced, but remote doesn't
Skipping key (%@) since incoming value is un-changed                Current value: %@; incoming value: %@
Posting (%@) for domain (%@)
Handling Restore of User Defaults message for domain: (%@); hasTimestamp: (%d); timestamp: (%f)
Domain (%@) not synced; dropping incoming message
Key (%@) in domain (%@) not synced; dropping incoming message
Skipping key (%@) since incoming value is un-changed                        Current value: %@; incoming value: %@
Kind: (%@)
Feature: (%@); Value: (%@)
handleUserDefaultsBackupMsg: %s idsProtobuf: (%p); outgoingResponseIdentifier: (%@)
Handling User Defaults Backup message for container: (%@); domain: (%@)
Failed to unserialized domain backup (%@) with error: (%@)
Read pre-existing domain (%@) backup: (%@)
Received User Defaults Backup for <%@, %@>; Value: (%@)
Failed to serialize updated domain (%@) backup dictionary (%@) with error: (%@)
Failed to write updated domain (%@) backup at path (%@) with error: (%@)
Failed to delete backup for domain (%@) at path (%@) with error: (%@)
handleFileBackupMessage: %s idsProtobuf: (%p); outgoingResponseIdentifier: (%@)
Handling file backup message for path: (%@); Temporary URL: (%@)
listener: (%p); connection: (%p)
Connection invalidated: (%p)
Failed to resolve cache path for domain: (%@); isPerGizmo: (%d)
Reading cache for domain: (%@); isPerGizmo: (%d)
Failed to unserialized domain cache (%@) %@
Read cache: (%@)
Writing cache for domain: (%@); isPerGizmo: (%d)
Cache to be written: (%@)
Failed to serialize updated domain cache dictionary (%@) with error: (%@)
Failed to write updated domain cache (%@) with error: (%@)
Deleting cache for domain: (%@); isPerGizmo: (%d)
Cache for domain (%@) does not exist.
Failed to delete cache for domain: %@
Updating timestamp for <%@; %@> to %@
Could not list content of directory (%@)
Unexpectedly found directory (%@) within container (%@) backup
Restoring remote settings from backup at path (%@)
No remote settings backup directory (%@)
Restoring remote file (%@) stored locally at (%@); isInitialSync: (%d)
Failed to retrieve file size for file URL: (%@) with error: (%@); result: (%d)
Failed to send file resource (%@) for backup at (%@) with error: (%@)
Successfully sent file backup with identifier (%@)
Requested to create directory with nil path
Failed to create backup directory (%@) with error: (%@)
Failed to resolve backup path for domain: (%@) for container: (%@)
%s: keys: %@; syncGroups: %@
%s: Settings accessor not passed.
Key (%@) is not a String.
%s: Not allowed to sync items in this sync groups.
%s: Error serializing object for key %@. Error: %@
Remote backup for domain (%@) is empty; Deleting the associated .plist
Failed to unserialize domain (%@) backup (%@) for container (%@) with error: (%@)
Restoring <%@, %@> for container (%@) to (%@)
Failed to create binary data (domain: %@; key: %@) with error: (%@)
Reading cache for domain: (%@); key: (%@); isPerGizmo: (%{public}@)
Error reading the cache file (error: %@).
Sending user defaults message for <Domain: %@, Keys: %{public}lu>
Start sending settings in Domain: %{public}@ 
             Keys: %lu
             cloudEnabled: %{public}@
Not allowed to sync groups %{public}@. Skipping key %{public}@.
Sent <Domain: %{public}@; Key: %{public}@> as individual default sync message.
Skipping <%@; %@>.
<%{public}@>Domain size not safe to load in memory. Trying to send it once.
Failed to serialize value for <Domain: %{public}@; Key: %{public}@> (Error: %@)
No cached timestamp, and value is null. Not sending value for <Domain: %{public}@; Key: %{public}@>.
Message size reached max allowed size. Sending current default message.
[STATS] Completed sending settings in <Domain: %{public}@; Keys: %lul>.
Start sending permitted defaults in Domain: %{public}@ 
            Keys: %lu
 AllowedGroups: %@
Key: %@ not allowed, not syncing/backing up
Groups: %@, allowed groups: %@
Skipping <%@; %@>
<%{public}@>Domain size not safe to load in memory. Trying to load it once.
Handling message for domain (%@) key (%@) timestamp (%f)
Invalid debounce parameter
%s: Debouncer timed out- calling block
Releasing transaction for debounceOnWorkerQueueWithblock (timer fired)
Could not create dispatch source
Releasing transaction for debounceOnWorkerQueueWithblock (unable to create source)
Will force re-sync ManagedConfiguration state
Re-syncing MC since changes were detected since last sync. isInitialSync: (%d)
Skipping MC re-sync since no change detected since last sync. isInitialSync: (%d)
Skipping MC re-sync since Tinker watch
Sending MC user settings:
Sending MC restrictions:
File Backup manager did not have an entry for original file path (%@)
%s: domain: (%@); keys: (%@); container: (%@); appGroupContainer: (%@); cloudEnabled: (%d)
Domain (%@) should not be nil, and keys (%@) should not be nil or empty.
Container should not be nil when specifing an app group container (%@) for domain (%@) and keys (%@).
%s: domain: (%@); keys: (%@)
setLaunchNotification: %@ launch notification %@
SQL Error: (%d) %s
Error fetching schema version: %d (%s)
Error opening SQLite3 DB at (%@): (%d) %s
I/O error: ACCESS
I/O error: BLOCKED
I/O error: CHECKRESERVEDLOCK
I/O error: CLOSE
I/O error: DELETE
I/O error: DIR_CLOSE
I/O error: DIR_FSYNC
I/O error: FSTAT
I/O error: FSYNC
I/O error: LOCK
I/O error: NOMEM
I/O error: RDLOCK
I/O error: READ
I/O error: SEEK
I/O error: SHMLOCK
I/O error: SHMMAP
I/O error: SHMOPEN
I/O error: SHMSIZE
I/O error: SHORT_READ
I/O error: TRUNCATE
I/O error: UNLOCK
I/O error: WRITE
sqlite3_exec(%s) Error: (%d) %s
NPSBlobReaderWriter: initWithPathToCreateBlobFile error %@
NPSBlobReaderWriter: initWithPathToLoadBlobFile error %@
File length is not right- must have been a read or write error
File length is %ld bytes as expected
NPSBackupReaderWriter writing type %d length %u
NPSBackupReaderWriter reading type %d length %u
[Progress Tracker] Started tracking progress. (Crashed last time %@)
[Progress Tracker] Can start syncing (%{public}@)? %@
[Progress Tracker] Started %@
[Progress Tracker] Completed %@
[Progress Tracker] Stopped tracking progress.
[Progress Tracker] Requested to clear state.
[Progress Tracker] Adding %{public}@ to known problematic operation list.
[Progress Tracker] State from prefs %{public}@.                  Last domain being processed %{public}@.                  List of oversized domains %{public}@
%@ '%@': %@
%@ '%@':
Failed to list contents of %@: %@
Unable to read bundle: %@
Malformed bundle plist for bundle: %@. %@
Missing %@ or %@ entry for bundle: %@.
Key %@ mutually exclusive with keys %@ and %@ in bundle %@
Keys %@ and %@ must go together in bundle %@
Cannot overwrite existing container %@ with %@ for permittted <%@, %@> in bundle %@.
Cannot overwrite existing permitted <%@, %@> in bundle %@ with a different isPerGizmoSetting value.
Cannot overwrite existing container %@ with %@ for permitted <%@, %@> in bundle %@.
Action %@ not supported in bundle (%@).
Received notification: (%@)
Paired device changed from %{public}@ to %{public}@
Failed to create directory (%@) with error: (%@)
Dumping data for %{public}@ to sysdiagnose
Could not resolve containerPath for container (%@)
error while retrieving application record %@ with error %@
Container Path for container %@ is nil!
Could not resolve containerPath for container (%@), previous containerPath: (%@)
Container path changed from (%@) to (%@)
Synchronized user defaults domain (%@) for containerPath: (%@); ret: (%d).
Synchronized user defaults domain (%@); ret: (%d).
Synchronized nano-setting domain (%@); ret: (%d).
Read containerized user default <%@, %@> for containerPath: (%@); value: (%{public}@)
Read user default <%@, %@>; value: (%{public}@)
Read nano-setting <%@, %@>; value: (%{public}@)
Not safe to write value into domain %@ for key %@. (size %lld Bytes is beyond what we can handle)
Written containerized user default <%@, %@> for containerPath: (%@); value: (%@)
Written user default <%@, %@>; value: (%@)
Written nano-setting <%@, %@>; value: (%@)
Failed to serialized value (%@) with error: %@ 
Failed to unserialized data (%@) with error: %@
Logic error! Type %ld is not handled.
%s: Protection Class for %@ at path %@ is %d
Is user defaults domain %@ protected: %@
%s: fileURL: (%@); originalURL: (%@)
%s: Skipping, active device has changed
Error backuping file (%@), originalFileURL is nil
Failed to generate file backup destination path. File will not get backuped!
Failed to delete old file backup (%@) with error: (%@)
Failed to move file (%@) to (%@) with error: (%@)
Removing file (%@) from backup
Failed to remove file (%@) with error: (%@)
Failed to write index file (%@) with error: (%@)
Failed to delete to-be-empty index file (%@) with error: (%@)
softlink:r:path:/System/Library/PrivateFrameworks/NanoBackup.framework/NanoBackup
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.managedconfiguration.profiled-access</key>
<true/>
<key>com.apple.nano.nanoregistry.pairunpairobliterate</key>
<true/>
<key>com.apple.private.MobileContainerManager.allowed</key>
<true/>
<key>com.apple.private.MobileContainerManager.otherIdLookup</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.preferencessync</string>
<string>com.apple.private.alloy.preferencessync.pairedsync</string>
</array>
<key>com.apple.private.ids.messaging.urgent-priority</key>
<array>
<string>com.apple.private.alloy.preferencessync</string>
<string>com.apple.private.alloy.preferencessync.pairedsync</string>
</array>
<key>com.apple.private.ignore-preferences-size-limits</key>
<true/>
<key>com.apple.private.security.storage.AppDataContainers</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
<string>com.apple.certificates</string>
<string>com.apple.identities</string>
</array>
</dict>
</plist>
