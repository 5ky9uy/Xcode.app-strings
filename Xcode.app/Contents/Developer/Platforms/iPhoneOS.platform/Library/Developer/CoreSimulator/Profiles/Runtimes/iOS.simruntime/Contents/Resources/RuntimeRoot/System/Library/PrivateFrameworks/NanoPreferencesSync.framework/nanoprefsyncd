%@ %@
value
twoWaySync
timestamp
-[NPSUserDefaultsMsgKey writeTo:]
NPSUserDefaultsMsgKey.m
nil != self->_key
kind
feature
setting
restriction
userSettingsAndRestrictions
container
domain
-[NPSUserDefaultsBackupMsg writeTo:]
NPSUserDefaultsBackupMsg.m
nil != self->_domain
com.apple.nanoprefsync
com.apple.private.alloy.preferencessync
com.apple.private.alloy.preferencessync.pairedsync
type
content
com.apple.pairedsync
UserDefaults/
ManagedConfiguration/
UserDefaultsBackup/
FileBackup/
local-device-build-version
last-active-date
paired-device-build-version
mc-data-cache
cache-is-valid
PendingIDSProtobuf for IDSProtobuf received at: %@, GUID: %@, type: %@
Unknown
UserDefault
UserDefaultsBackup
ManagedConfiguration
FileBackup
Undefined
com.apple.nanoprefsyncd.launchtransaction
com.apple.nanoprefsync.workQueue
Progress Tracker: %@
com.apple.nano
@"NSString"8@?0
v8@?0
activeDevice
com.apple.pairedsync.nanoprefsyncdfirst
com.apple.pairedsync.nanoprefsyncd
com.apple.private.alloy.preferencessync-idswake
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.private.alloy.preferencessync.pairedsync-idswake
com.apple.notifyd.matching
Notification
com.apple.Preferences.ChangedRestrictionsEnabledStateNotification
com.apple.NanoTimeKit
notificationsIndicatorEnabled
customMonogram
v16@?0@"NSString"8
com.apple.nanoprefsyncd.pairedsynctransaction
com.apple.NanoPreferencesSync
non-
com.apple.nanoprefsyncd.groupsynctransaction
v48@?0@"NSString"8@"PermittedUserDefaultsDomain"16@"NSString"24@"PermittedUserDefaultsKey"32@"NSMutableDictionary"40
v32@?0@"NSString"8@"PermittedUserDefaultsKey"16^B24
v32@?0@"NSString"8@"NSSet"16^B24
v32@?0@"NSString"8@"NSMutableDictionary"16^B24
v32@?0@"NSString"8@"PermittedUserDefaultsDomain"16^B24
v48@?0@"NSString"8@"UserDefaultsDomain"16@"NSString"24@"UserDefaultsKey"32@"NSMutableDictionary"40
v32@?0@"NSString"8@"NSArray"16^B24
v32@?0@"NSString"8@"UserDefaultsDomain"16^B24
com.apple.nanoprefsyncd.firstlaunchtransaction
B24@?0@"NSString"8@"UserDefaultsKey"16
v32@?0@"NSString"8@"NSMutableSet"16^B24
-[NPSServer checkAndUpdateCacheTimestamps]
-[NPSServer checkActiveDeviceChangedVersion]
MessageSendTimeout
PurgeRetryDelay
36A0EB23-E045-4E99-9D71-8FB9A853ADA7
NPS should not try syncing when there is no active device
com.apple.nanoprefsyncd.idstransaction
ids-reset-timeout-transaction
v28@?0@"NSString"8@"NSSet"16B24
v32@?0@"NSString"8@"NSString"16@"NSSet"24
com.apple.nanoprefsyncd.resourcetransaction
User defaults Msg: GUID: %@
<n/a>
Domain: %@
Keys: [
 %@,
Container: %@
Domain: %@
Keys: [
processing
queueing
not-nil
v32@?0@"NSString"8@"NSDictionary"16^B24
v32@?0@"NPSUserDefaultsBackupMsgKey"8Q16^B24
v24@?0Q8@"NSData"16
com.apple.nanoprefsyncd.restorremotesettingsfrombackup
@"NSError"24@?0@"NSString"8@"NSString"16
v32@?0@"NSURL"8@"NSURL"16^B24
-[NPSServer sendSetting:keys:allowedSyncGroups:messageIdentifier:messageData:cloudEnabled:backupFile:]
v32@?0@"NSString"8@16^B24
%@|%@
F4DCA831-3D30-45BC-BDCC-E99D0E482D94
 | %@
-[NPSServer applyStashedSettingsSyncMessages]
v44@?0@"NSString"8@"NSString"16@"NSData"24B32d36
com.apple.springboard
SBParentalControlsCapabilities
SBParentalControlsEnabled
-[NPSServer debounceOnWorkerQueueWithblock:]_block_invoke
debounceOnWorkerQueueWithblock
-[NPSServer synchronizeUserDefaultsDomain:keys:container:appGroupContainer:cloudEnabled:]
com.apple.nanoprefsyncd.synchronizeuserdefaultsdomain
-[NPSServer synchronizeNanoDomain:keys:cloudEnabled:]
com.apple.nanoprefsyncd.synchronizenanodomaindomain
com.apple.mobile.keybagd.first_unlock
enabling
disabling
NBExclusionListManager
Unable to find class %s
<%@ %p; uuid = (%@); url = (%@)>
uuid
-[NPSUserDefaultsMsg writeTo:]
NPSUserDefaultsMsg.m
InternalBuild
Oji6HRoPi7rH7HPdWVakuw
Domain <%@>
<key: %@; Value: %@>
fileURL
fileData
(nil)
BEGIN EXCLUSIVE TRANSACTION
ROLLBACK TRANSACTION
COMMIT TRANSACTION
meta
SELECT COUNT(*) FROM meta
Unknown Error
PRAGMA journal_mode=WAL;
CREATE TABLE IF NOT EXISTS meta (version INTEGER PRIMARY KEY AUTOINCREMENT, tstamp REAL)
CREATE TABLE IF NOT EXISTS sync_msgs (domain TEXT NOT NULL, key TEXT NOT NULL, messageID TEXT, PRIMARY KEY(domain, key))
CREATE TABLE IF NOT EXISTS backup_msgs (container TEXT NOT NULL DEFAULT (''), domain TEXT NOT NULL, key TEXT NOT NULL, messageID TEXT, PRIMARY KEY(container, domain, key))
CREATE TABLE IF NOT EXISTS msgs_type (messageID TEXT NOT NULL PRIMARY KEY, type INTEGER NOT NULL)
CREATE INDEX sync_msgs_messageID_idx ON sync_msgs (messageID ASC)
CREATE INDEX backup_msgs_messageID_idx ON backup_msgs (messageID ASC)
INSERT INTO meta (tstamp) VALUES (datetime('now'))
CREATE TABLE IF NOT EXISTS file_backup_msgs (path TEXT NOT NULL, messageID TEXT, PRIMARY KEY(path))
CREATE INDEX file_backup_msgs_messageID_idx ON file_backup_msgs (messageID ASC)
CREATE TABLE IF NOT EXISTS stashed_sync_msgs (domain TEXT NOT NULL, key TEXT NOT NULL, data BLOB, two_way_sync INTEGER, timestamp DOUBLE, PRIMARY KEY(domain, key))
ALTER TABLE sync_msgs ADD COLUMN cloudEnabled INTEGER
SELECT type FROM msgs_type WHERE messageID=?
INSERT INTO msgs_type (messageID, type) VALUES (?, ?)
INSERT OR REPLACE INTO sync_msgs (domain, key, messageID, cloudEnabled) VALUES (?, ?, ?, ?)
INSERT OR REPLACE INTO backup_msgs (container, domain, key, messageID) VALUES (?, ?, ?, ?)
INSERT OR REPLACE INTO file_backup_msgs (path, messageID) VALUES (?, ?)
DELETE FROM sync_msgs WHERE domain=? AND key=? AND cloudEnabled=?
DELETE FROM backup_msgs WHERE container=? AND domain=? AND key=?
DELETE FROM file_backup_msgs WHERE path=?
DELETE FROM sync_msgs WHERE messageID=?
DELETE FROM backup_msgs WHERE messageID=?
DELETE FROM file_backup_msgs WHERE messageID=?
DELETE FROM msgs_type WHERE messageID=?
UPDATE sync_msgs SET messageID=NULL WHERE messageID=?
UPDATE backup_msgs SET messageID=NULL WHERE messageID=?
UPDATE file_backup_msgs SET messageID=NULL WHERE messageID=?
SELECT domain, key, cloudEnabled FROM sync_msgs WHERE messageID=?
SELECT container, domain, key FROM backup_msgs WHERE messageID=?
SELECT path FROM file_backup_msgs WHERE messageID=?
SELECT domain, key, cloudEnabled FROM sync_msgs WHERE messageID IS NULL
SELECT container, domain, key FROM backup_msgs WHERE messageID IS NULL
SELECT path FROM file_backup_msgs WHERE messageID IS NULL
INSERT OR REPLACE INTO stashed_sync_msgs (domain, key, data) VALUES (?, ?, ?)
SELECT domain, key, data, two_way_sync, timestamp FROM stashed_sync_msgs
DELETE FROM stashed_sync_msgs
DELETE FROM msgs_type
DELETE FROM sync_msgs
DELETE FROM backup_msgs
DELETE FROM file_backup_msgs
kNPProgressTrackerDomain
kNPProgressTrackerLastBootedKey
kNPProgressTrackerStateKey
kNPProgressTrackerLastProcessingDomainKey
kNPProgressTrackerOversizedDomainsKey
kNPProgressTrackerStateStarted
kNPProgressTrackerStateCompleted
kNPProgressTrackerDomainsKey
start
metadata
System/Library/PreferencesSyncBundles
NPSDomains
NPSAction
NPSDefaultsDomain
NPSDefaultsKeys
NPSDefaultsKeyPrefixes
NPSChangeNotificationName
NPSContainer
NPSAppGroupContainer
NPSCloudEnabled
NPSSyncGroups
NPSPerGizmo
NPSMirrorableBBDomain
NPSMirrorableDomain
NPSMirrorableKey
OneWaySync
TwoWaySync
Whitelist
Permitlist
Local
Tinker
First
<%@: %p key = "%@" twoWaySync = %d
 isPerGizmoSetting = %d
%@%@>
BPSNanoBulletinShowsCustomSettings
<%@: %p domain = "%@" _keys = "%@"
<%@: %p key = "%@" notificationNames = "%@" twoWaySync = %d
com.apple.Carousel
DisableWristDetection
NotificationPrivacy
mirrorDNDState
workoutDND
dndState
dndStateDate
dndEffectiveOverrides
dndPrivilegedSenderTypes
self ENDSWITH '.bundle'
B44@?0@"NSBundle"8@"NSString"16B24@"<NSObject>"28#36
Key %@ not found when expected.
Item in container for key %@ expected to be of type %@.
Key %@ expected to be of type %@.
v28@?0@"NSString"8B16@"NSString"20
com.apple.bulletinboard.apps
SIMULATOR_ROOT
-[NPSUserDefaultsBackupMsgKey writeTo:]
NPSUserDefaultsBackupMsgKey.m
NanoPreferencesSync
Cache/
Backup/UserDefaults/
Backup/Files/
index
database.db
-[NPSDeviceRegistry startMonitoringPairingEventsWithQueue:]
NPSDeviceRegistry.m
queue
com.apple.nanoprefsyncd.dump
%@.%ld
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
UserDefaults
NanoSetting
undefined
-[NPSSettingAccessor requiresDeviceUnlockedSinceBoot]
-[NPSFileBackupManager backupFileAtURL:originalFileURL:]
apple-internal-install
nil _deviceRegistry
nil pairedDevice
nil pairingID
nil pairingDataStore
other1
other2
-[NPSFileBackupManager enumerateFileBackupsUsingBlock:]
v32@?0@"NSURL"8@"NPSFileBackupMetadata"16^B24
-[NPSFileBackupManager localFileURLForOriginalFileURL:]
T@"IDSService",&,N,V_idsService
T#,R
T@"NSString",&,N,V_databasePath
T@"IDSProtobuf",R,N,V_idsProtobuf
T@"PSYSyncCoordinator",&,N,V_pairedSyncCoordinatorRemainderSync
T@"NPProgressTracker",&,N,V_syncProgressTracker
_activeDeviceID
T@"NPSDeviceRegistry",&,N,V_deviceRegistry
T@"NPSDomainAccessor",&,N,V_nanoDomainAccessor
_domain
T@"NPSOSLogStateProvider",&,N,V_dumper
_dumper
T@"NPSSettings",&,N,V_settings
_getFileBackupWithNullMessageID
T@"NSData",&,N,V_fileData
_lastDumpString
T@"NSData",&,N,V_restriction
_offset
T@"NSData",&,N,V_userSettingsAndRestrictions
_server
T@"NSDate",R,N
addKey:
T@"NSDictionary",&,N,V_allowedGroups
beganOperation:
T@"NSMutableArray",&,N,V_registryChangedSemaphores
containsObject:
T@"NSMutableDictionary",&,N,V_keyArrays
copyTo:
T@"NSMutableDictionary",&,N,V_keyPrefixes
dealloc
T@"NSMutableDictionary",&,N,V_metadataIndex
domainPlistSize
T@"NSMutableDictionary",&,N,V_syncedUserDefaults
feature
T@"NSMutableSet",&,N,V_notificationNames
hasKind
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
initWithDomain:
T@"NSObject<OS_dispatch_source>",&,N,V_purgeTimer
initWithString:
T@"NSSet",&,N,V_syncGroups
isProxy
T@"NSString",&,N,V_container
keyPrefixArrays
T@"NSString",&,N,V_currentlyUsedDomain
localFileURLForOriginalFileURL:
T@"NSString",&,N,V_feature
numberWithBool:
T@"NSString",&,N,V_filesBackupMetadataIndexPath
release
T@"NSString",&,N,V_key
requiresDeviceUnlockedSinceBoot
T@"NSString",&,N,V_mirrorableBBDomain
restoreRemoteSettingsFromBackup
T@"NSString",&,N,V_mirrorableKey
serviceSpaceDidBecomeAvailable:
T@"NSString",&,N,V_path
setBool:forKey:
T@"NSString",&,N,V_userDefaultsBackupDirectoryPath
setGetSettingsSyncForMessageID:
T@"NSURL",&,N,V_url
setKeyPrefixes:
T@"NSUUID",&,N,V_uuid
setUrl:
T@"NSXPCListener",&,N,V_xpcListener
setWithObjects:
T@"PSYSyncCoordinator",&,N,V_pairedSyncCoordinatorFirstSync
setting
TB,N,V_hasChangesToWrite
stringByAppendingPathComponent:
TB,N,V_isCloudEnabled
syncDidComplete
TB,N,V_twoWaySync
syncTransaction
TB,R,N
TB,R,N,V_shouldRun
version
TQ,N,V_remainingDataToSyncInBytes
.cxx_destruct
T@"NRDevice",&,N,V_activeDevice
T@"IDSDevice",R,N,V_fromIDSDevice
T@"NSUUID",&,N,V_activeDeviceID
T@"IDSService",&,N,V_idsServiceSyncState
TB,N,V_isPrefix
T@"NPSDatabase",&,N,V_database
_compressedPath
T@"NPSDomainAccessor",&,N,V_domainAccessor
_deviceRegistry
T@"NPSFileBackupManager",R,N,V_fileBackupManager
_domainAccessor
T@"NPSServer",W,N,V_server
T@"NRActiveDeviceAssertion",W,N,V_alreadyExistingAssertion
_isCloudEnabled
T@"NSData",&,N,V_fileURL
_logUserDefaultsBackup:idsGuid:
T@"NSData",&,N,V_setting
_pairedSyncCoordinatorFirstSync
T@"NSData",&,N,V_value
_setNullMessageIDForSettingSync
T@"NSDate",R,N,V_receivedDate
allKeys
T@"NSMutableArray",&,N,V_keys
checkActiveDeviceChangedVersion
T@"NSMutableArray",&,V_problematicOperationList
context
T@"NSMutableDictionary",&,N,V_keyPrefixArrays
dataWithLength:
T@"NSMutableDictionary",&,N,V_keys
debounceOnWorkerQueueWithblock:
T@"NSMutableDictionary",&,N,V_permittedUserDefaults
enumerateFileBackupsUsingBlock:
T@"NSMutableDictionary",R,N,V_syncSessionProgressDictionary
fileURL
T@"NSObject<OS_dispatch_queue>",&,N,V_workQueue
hasPairedDevice
T@"NSObject<OS_dispatch_source>",&,N,V_mcDebounceSource
initWithFormat:
T@"NSObject<OS_os_transaction>",&,N,V_syncTransaction
isEqualToArray:
T@"NSString",&,N,V_appGroupContainer
T@"NSString",&,N,V_containerPath
keyType
T@"NSString",&,N,V_domain
T@"NSString",&,N,V_filesBackupDirectoryPath
purgeRetryDelay
T@"NSString",&,N,V_globalCacheDirectoryPath
reportProgress:
T@"NSString",&,N,V_kind
restoreFileBackupForLocalFileURL:originalFileURL:isInitialSync:
T@"NSString",&,N,V_mirrorableDomain
T@"NSString",&,N,V_pairingDataStore
T@"NSString",&,N,V_perGizmoCacheDirectoryPath
setFlushStashedSettingSyncData:
T@"NSString",R,C
setKey:
T@"NSURL",R,N,V_compressedPath
setRestriction:
T@"NSUUID",N,V_activeDeviceID
setUserSettingsAndRestrictions:
T@"PSYServiceSyncSession",&,N,V_activeSyncSession
setXpcListener:
TB,N
sizeSafeToWrite
TB,N,V_hasCheckedInWithNanoRegistry
syncCoordinatorWithServiceName:
TB,N,V_isPerGizmoSetting
syncSessionType
TB,R
untrackSettingsSyncForMessageID
TB,R,N,GisPaired
userDefaultsBackupDirectoryPath
TB,V_crashedDuringLastRun
waitForActiveOrAltAccountDevice
TQ,N,V_totalDataToSyncInBytes
TQ,R
TQ,R,N,V_messageType
TQ,R,N,V_version
T^{sqlite3=},N,V_db
T^{sqlite3_stmt=},N,V_flushStashedSettingSyncData
T^{sqlite3_stmt=},N,V_getFileBackupForMessageID
T^{sqlite3_stmt=},N,V_getFileBackupWithNullMessageID
T^{sqlite3_stmt=},N,V_getMessageTypeForMessageID
T^{sqlite3_stmt=},N,V_getSettingsBackupForMessageID
T^{sqlite3_stmt=},N,V_getSettingsBackupWithNullMessageID
T^{sqlite3_stmt=},N,V_getSettingsSyncForMessageID
T^{sqlite3_stmt=},N,V_getSettingsSyncWithNullMessageID
T^{sqlite3_stmt=},N,V_getStashedSettingSyncData
T^{sqlite3_stmt=},N,V_purgeFileBackupTable
T^{sqlite3_stmt=},N,V_purgeMessageTypeTable
T^{sqlite3_stmt=},N,V_purgeSettingsBackupTable
T^{sqlite3_stmt=},N,V_purgeSettingsSyncTable
T^{sqlite3_stmt=},N,V_removeMessageFromMessageTypeTable
T^{sqlite3_stmt=},N,V_setMessageIDForFileBackup
T^{sqlite3_stmt=},N,V_setMessageIDForSettingBackup
T^{sqlite3_stmt=},N,V_setMessageIDForSettingSync
T^{sqlite3_stmt=},N,V_setMessageTypeForMessageID
T^{sqlite3_stmt=},N,V_setNullMessageIDForFileBackup
T^{sqlite3_stmt=},N,V_setNullMessageIDForSettingBackup
T^{sqlite3_stmt=},N,V_setNullMessageIDForSettingSync
T^{sqlite3_stmt=},N,V_stashSettingsSyncData
T^{sqlite3_stmt=},N,V_untrackFileBackupForMessageID
T^{sqlite3_stmt=},N,V_untrackFileBackupMessage
T^{sqlite3_stmt=},N,V_untrackSettingsBackupForMessageID
T^{sqlite3_stmt=},N,V_untrackSettingsBackupMessage
T^{sqlite3_stmt=},N,V_untrackSettingsSyncForMessageID
T^{sqlite3_stmt=},N,V_untrackSettingsSyncMessage
Td,N,V_timestamp
Tq,N,V_type
URLWithString:
UTF8String
UUID
UUIDString
_activeDevice
_activeSyncSession
_allowedGroups
_alreadyExistingAssertion
_appGroupContainer
_clearState
_completeActiveSyncSessionWithError:
_container
_containerPath
_crashedDuringLastRun
_currentlyUsedDomain
_database
_databasePath
_done
_feature
_fileBackupManager
_fileData
_fileURL
_filesBackupDirectoryPath
_filesBackupMetadataIndexPath
_flushStashedSettingSyncData
_fromIDSDevice
_getFileBackupForMessageID
_getMessageTypeForMessageID
_getOperationDictionary:
_getSchemaVersion
_getSettingsBackupForMessageID
_getSettingsBackupWithNullMessageID
_getSettingsSyncForMessageID
_getSettingsSyncWithNullMessageID
_getStashedSettingSyncData
_globalCacheDirectoryPath
_has
_hasChangesToWrite
_hasCheckedInWithNanoRegistry
_idsProtobuf
_idsService
_idsServiceSyncState
_init
_isPerGizmoSetting
_isPrefix
_key
_keyArrays
_keyPrefixArrays
_keyPrefixes
_keys
_kind
_lastBootedTimeFromPref
_logUserDefaults:idsGuid:
_mcDebounceSource
_messageType
_metadataIndex
_mirrorableBBDomain
_mirrorableDomain
_mirrorableKey
_nanoDomainAccessor
_notificationNames
_openDBAtPath:
_pairedSyncCoordinatorRemainderSync
_pairingDataStore
_path
_pendingIDSMessages
_perGizmoCacheDirectoryPath
_permittedUserDefaults
_problematicOperationList
_processStateClearIfNeeded
_processingIDSMessage
_purgeFileBackupTable
_purgeMessageTypeTable
_purgeSettingsBackupTable
_purgeSettingsSyncTable
_purgeTimer
_queue
_receivedDate
_registryChanged:
_registryChangedSemaphores
_remainingDataToSyncInBytes
_removeMessageFromMessageTypeTable
_restriction
_resumeIDSMessageProcessingWithDevice:
_save:forOperation:
_saveLastBootedTimeToPref:
_setMessageIDForFileBackup
_setMessageIDForSettingBackup
_setMessageIDForSettingSync
_setMessageTypeForMessageID
_setNullMessageIDForFileBackup
_setNullMessageIDForSettingBackup
_setValue:forKey:
_setting
_settingBundlesInDirectories:
_settings
_shouldRun
_stashSettingsSyncData
_suspendIDSMessageProcessing
_syncGroups
_syncProgressTracker
_syncSessionProgressDictionary
_syncTransaction
_syncedUserDefaults
_timestamp
_totalDataToSyncInBytes
_twoWaySync
_type
_uncompressedPath
_untrackFileBackupForMessageID
_untrackFileBackupMessage
_untrackSettingsBackupForMessageID
_untrackSettingsBackupMessage
_untrackSettingsSyncForMessageID
_untrackSettingsSyncMessage
_url
_userDefaultsBackupDirectoryPath
_userSettingsAndRestrictions
_uuid
_value
_valueForKey:
_version
_workQueue
_xpcListener
activeDevice
activeDeviceChanged
activeDeviceID
activeDeviceSelectorBlock
activeSyncSession
addDelegate:queue:
addEntriesFromDictionary:
addMetaDataForOperation:metaData:
addObject:
addObjectsFromArray:
addObserver:forKeyPath:options:context:
addObserver:selector:name:object:
addToProblematicOperationList:
allObjects
allValues
allocWithZone:
allowedGroups
alreadyExistingAssertion
appGroupContainer
appendData:
appendFormat:
appendString:
applyStashedSettingsSyncMessages
archiveObject:
archivedDataWithRootObject:requiringSecureCoding:error:
array
arrayWithCapacity:
arrayWithObject:
arrayWithObjects:count:
autorelease
backupFileAtURL:originalFileURL:
backupPathForDomain:container:
bbAppsSettings
boolForKey:
boolForKey:keyExistsAndHasValidFormat:
boolValue
bytes
cachePathForDomain:isPerGizmo:
canStartOperation:
checkAndUpdateCacheTimestamps
checkForActiveDeviceChange
checkIfTinkerLastActiveDateChanged
class
clearKeys
clearState
close
closeFile
code
compare:
compatibilityState
completedOperation:
completedOperations
compressedPath
conformsToProtocol:
container
containerPath
contentsOfDirectoryAtPath:error:
copy
copyKeyList
copyWithZone:
count
countByEnumeratingWithState:objects:count:
crashedDuringLastRun
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createDirectoryIfNeeded:
createFileAtPath:contents:attributes:
currentRunLoop
currentlyUsedDomain
data
dataContainerURL
dataWithBytes:length:
dataWithContentsOfFile:
dataWithContentsOfFile:options:error:
dataWithPropertyList:format:options:error:
database
databasePath
date
debugDescription
decodeObjectOfClass:forKey:
defaultCenter
defaultManager
deleteCacheForDomain:isPerGizmo:
description
deviceForFromID:
deviceForIDSDevice:
deviceRegistry
dictionary
dictionaryRepresentation
dictionaryWithContentsOfFile:
dictionaryWithObjects:forKeys:count:
doesCurrentDeviceSupportGroupedTwoWayKeys
doesCurrentDeviceSupportNewIDSServiceForSync
domain
domainAccessor
domainShouldSyncFirst:key:
domainSize
doneWriting
doubleValue
dump
dumpDomain:
dumper
effectiveRestrictions
encodeObject:forKey:
encodeWithCoder:
enumerateKeysAndObjectsUsingBlock:
enumerateMessages:
enumerateObjectsUsingBlock:
environment
errorWithDomain:code:userInfo:
exceptionWithName:reason:userInfo:
excludedKeysInDomain:
excludedPerGizmoDomains
fileBackupManager
fileData
fileExistsAtPath:
fileExistsAtPath:isDirectory:
fileHandleForReadingFromURL:error:
fileHandleForWritingToURL:error:
fileSystemRepresentation
fileURLWithPath:
fileURLWithPath:isDirectory:
fileURLWithUUID:
filesBackupDirectoryPath
filesBackupMetadataIndexPath
filteredArrayUsingPredicate:
firstObject
flushStashedSettingSyncData
flushStashedSettingsSyncData
forceResyncManagedConfigurationIsInitialSync:
fromIDSDevice
getAllDevicesWithArchivedAltAccountDevicesMatching:
getCachedTimeStampFor:key:usePerGizmoCache:
getFileBackupDataForMessage:handler:
getFileBackupForMessageID
getFileBackupWithNullMessageID
getMessageType:forMessageID:
getMessageTypeForMessageID
getResourceValue:forKey:error:
getSettingsBackupDataForMessage:handler:
getSettingsBackupForMessageID
getSettingsBackupWithNullMessageID
getSettingsSyncDataForMessage:handler:
getSettingsSyncForMessageID
getSettingsSyncWithNullMessageID
getStashedSettingSyncData
getStashedSettingsSyncDataWithHandler:
globalCacheDirectoryPath
groupContainerURLs
handleActiveDeviceChangedVersionNotification
handleAppChangedRestrictions
handleFileBackupMessage:resourceURL:backupFile:
handleFileBackupMessage:service:account:fromID:context:
handleFullBackupMessage:resourceURL:idsGuid:
handleManagedConfigurationChangedNotification
handlePermittedUserDefaultsMsg:messageData:overwriteNewerTimestamps:backupFile:
handleRestoreOfSyncingUserDefaultsMsg:backupFile:
handleUserDefaultsBackupMsg:service:account:fromID:context:
handleUserDefaultsBackupMsgData:backupFile:idsGuid:
handleUserDefaultsMsg:service:account:fromID:context:
handleUserDefaultsMsgData:backupFile:idsGuid:
hasChangesToWrite
hasCheckedInWithNanoRegistry
hasContainer
hasFeature
hasFileData
hasFileURL
hasPerformedInitialSync
hasPrefix:
hasRestriction
hasSetting
hasTimestamp
hasTwoWaySync
hasUserSettingsAndRestrictions
hasValue
hash
idsProtobuf
idsService
idsServiceSyncState
init
initCore:
initWithBundleIdentifier:allowPlaceholder:error:
initWithCapacity:
initWithCoder:
initWithData:
initWithDeviceRegistry:
initWithDomain:pairingID:pairingDataStore:
initWithIDSProtobuf:ofType:from:receivedAt:
initWithMachServiceName:
initWithNPSServer:
initWithName:maxStringLength:block:
initWithNanoDomain:
initWithPath:
initWithPathToCreateBackup:
initWithPathToCreateBlobFile:
initWithPathToLoadBackup:
initWithPathToLoadBlobFile:
initWithProtobufData:type:isResponse:
initWithService:
initWithUUIDString:
initWithUserDefaultsDomain:container:appGroupContainer:
initWithUserDefaultsDomain:containerPath:
intValue
integerForKey:
interfaceWithProtocol:
invalidate
isAltAccountDevice
isCloudEnabled
isEqual:
isEqualToString:
isFileGood
isKindOfClass:
isManagedConfigurationSettingPermittedForKind:feature:
isMemberOfClass:
isMirroring
isPaired
isPerGizmoSetting
isPrefix
keyArrays
keyAtIndex:
keyPrefixes
keys
keysCount
kind
lastActiveDate
length
linkedDevicesWithRelationship:
listener:shouldAcceptNewConnection:
loadSettingsBundles
localizedDescription
logManagedConfigurationDictionary:
losslessFileCompressionFrom:to:shouldCompress:
managedConfigurationData
managedConfigurationSettings
maxSendTimeout
mcDebounceSource
mergeFrom:
messageType
messageWasDelivered:
messageWasPurged:
metadataIndex
metadataIndexReadFromDiskIfNeeded
minusSet:
mirrorableBBDomain
mirrorableDomain
mirrorableKey
moveItemAtPath:toPath:error:
mutableCopy
name
nanoDomainAccessor
newDefaultsMsgWithDomain:
newFileUUID
nonActiveDeviceForIDSDevice:
notificationNames
nps_defaultPairedDeviceIDIncludingTinkerDevices
nps_mineTinkerDevices
nps_nrDevice
nrDeviceForIDSDevice:
null
numberWithDouble:
numberWithUnsignedInteger:
numberWithUnsignedLong:
numberWithUnsignedLongLong:
objectAtIndex:
objectAtIndexedSubscript:
objectForInfoDictionaryKey:
objectForKey:
objectForKeyedSubscript:
observeValueForKeyPath:ofObject:change:context:
offsetInFile
outgoingResponseIdentifier
paired
pairedDevice
pairedSyncCoordinatorFirstSync
pairedSyncCoordinatorRemainderSync
pairingDataStore
pairingDevice
pairingID
path
pathToFileWithUUID:
pendingIDSProtobufMessageTypeToString:
perGizmoCacheDirectoryPath
performFirstLaunchIntoNewBuildTasks
performMigration
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
permittedUserDefaults
persistMetadataIndex
predicateWithFormat:
prefSizeFor:inContainer:
preprocessItemSyncGroups:forDomain:key:
problematicOperationList
processInfo
propertyListWithData:options:format:error:
purgeFileBackupTable
purgeMessageTypeTable
purgePendingOutgoingMessages
purgeSettingsBackupTable
purgeSettingsSyncTable
purgeTimer
queue
queueOneIdentifierForFileBackupMsg:
queueOneIdentifierForManagedConfigurationMsg:
queueOneIdentifierForUserDefaultsBackupMsg:
queueOneIdentifierForUserDefaultsMsg:
readBlob
readCacheFromDiskForDomain:isPerGizmo:
readDataOfLength:
readFrom:
receivedDate
registerInitialSyncMessage:ofSize:orReportInitialSyncFailureWithError:
registerOSLogStateHandlerName:block:
registerSyncMessageWithIdentifier:size:
registryChangedSemaphores
remainingDataToSyncInBytes
removeAllObjects
removeItemAtPath:error:
removeItemAtURL:error:
removeMessageFromMessageTypeTable
removeMessageFromMessageTypeTable:
removeObject:
removeObjectForKey:
removeObserver:forKeyPath:
resendMessagesForMessageID:
resetIfActiveDeviceChanged
respondsToSelector:
restoreRemoteFilesFromBackup
restriction
resume
resyncManagedConfigurationIfNeeded
resyncManagedConfigurationIfNeededIsInitialSync:
retain
retainCount
retryFileBackupRestoreForFilePath:
self
sendManagedConfigurationSettings:isInitialSync:
sendMessageData:messageType:queueOneIdentifier:identifier:cloudEnabled:
sendMessageData:messageType:queueOneIdentifier:identifier:isPairedSyncMessage:cloudEnabled:
sendPUDSettingsInDomain:keys:backupFile:allowedGroups:
sendProtobuf:toDestinations:priority:options:identifier:error:
sendResourceAtURL:metadata:toDestinations:priority:options:identifier:error:
sendSetting:keys:allowedSyncGroups:messageIdentifier:messageData:cloudEnabled:backupFile:
sendSettingsBackupInDomain:keys:container:isInitialSync:backupFile:
sendSettingsInDomain:keys:cloudEnabled:backupFile:allowedGroups:
sendUserDefaultMsg:forDomain:includedKeys:cloudEnabled:backupFile:
sentFileBackupMessage:forFileAtPath:
sentSettingsBackupMessage:forContainer:domain:keys:
sentSettingsSyncMessage:forDomain:keys:cloudEnabled:
serializeObject:error:
serializedObjectForKey:error:
server
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:sentBytes:totalBytes:
service:account:incomingData:fromID:context:
service:account:incomingMessage:fromID:context:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:receivedGroupSessionParticipantDataUpdate:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantUpdate:context:
service:activeAccountsChanged:
service:connectedDevicesChanged:
service:devicesChanged:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:didSwitchActivePairedDevice:acknowledgementBlock:
service:linkedDevicesChanged:
service:nearbyDevicesChanged:
serviceAllowedTrafficClassifiersDidReset:
setActiveDevice:
setActiveDeviceID:
setActiveSyncSession:
setAllowedGroups:
setAlreadyExistingAssertion:
setAppGroupContainer:
setClasses:forSelector:argumentIndex:ofReply:
setContainer:
setContainerPath:
setCrashedDuringLastRun:
setCurrentlyUsedDomain:
setDatabase:
setDatabasePath:
setDb:
setDelegate:
setDelegate:queue:
setDeviceRegistry:
setDomain:
setDomainAccessor:
setDumper:
setExportedInterface:
setExportedObject:
setFeature:
setFileData:
setFileURL:
setFilesBackupDirectoryPath:
setFilesBackupMetadataIndexPath:
setGetFileBackupForMessageID:
setGetFileBackupWithNullMessageID:
setGetMessageTypeForMessageID:
setGetSettingsBackupForMessageID:
setGetSettingsBackupWithNullMessageID:
setGetSettingsSyncWithNullMessageID:
setGetStashedSettingSyncData:
setGlobalCacheDirectoryPath:
setHasChangesToWrite:
setHasCheckedInWithNanoRegistry:
setHasPerformedInitialSync:updateBuildVersion:withDevice:
setHasTimestamp:
setHasTwoWaySync:
setIdsService:
setIdsServiceSyncState:
setInterruptionHandler:
setInvalidationHandler:
setIsCloudEnabled:
setIsPerGizmoSetting:
setIsPrefix:
setKeyArrays:
setKeyPrefixArrays:
setKeys:
setKind:
setLaunchNotification:enabled:
setLaunchNotificationsEnabled:
setMcDebounceSource:
setMessageIDForFileBackup
setMessageIDForSettingBackup
setMessageIDForSettingSync
setMessageType:forMessageID:
setMessageTypeForMessageID
setMetadataIndex:
setMirrorableBBDomain:
setMirrorableDomain:
setMirrorableKey:
setNanoDomainAccessor:
setNotificationNames:
setNullMessageIDForFileBackup
setNullMessageIDForSettingBackup
setNullMessageIDForSettingSync
setObject:forKey:
setObject:forKeyedSubscript:
setPairedSyncCoordinatorFirstSync:
setPairedSyncCoordinatorRemainderSync:
setPairingDataStore:
setPath:
setPerGizmoCacheDirectoryPath:
setPermittedUserDefaults:
setProblematicOperationList:
setProtobufAction:forIncomingRequestsOfType:
setPurgeFileBackupTable:
setPurgeMessageTypeTable:
setPurgeSettingsBackupTable:
setPurgeSettingsSyncTable:
setPurgeTimer:
setRegistryChangedSemaphores:
setRemainingDataToSyncInBytes:
setRemoveMessageFromMessageTypeTable:
setServer:
setSetMessageIDForFileBackup:
setSetMessageIDForSettingBackup:
setSetMessageIDForSettingSync:
setSetMessageTypeForMessageID:
setSetNullMessageIDForFileBackup:
setSetNullMessageIDForSettingBackup:
setSetNullMessageIDForSettingSync:
setSetting:
setSettings:
setStashSettingsSyncData:
setSyncGroups:
setSyncProgressTracker:
setSyncTransaction:
setSyncedUserDefaults:
setTimestamp:
setTotalDataToSyncInBytes:
setTwoWaySync:
setType:
setUntrackFileBackupForMessageID:
setUntrackFileBackupMessage:
setUntrackSettingsBackupForMessageID:
setUntrackSettingsBackupMessage:
setUntrackSettingsSyncForMessageID:
setUntrackSettingsSyncMessage:
setUserDefaultsBackupDirectoryPath:
setUuid:
setValue:
setWithArray:
setWithObject:
setWorkQueue:
settings
sharedConnection
sharedInstance
shouldAllowSyncOfItemWithSyncGroups:allowedSyncGroups:
shouldRun
sizeSafeToLoadInMemory
sortedArrayUsingSelector:
startMonitoringPairingEventsWithQueue:
startPrefsSyncWithGroups:backupWriter:withCompletionHandler:
startedOperations
stashSettingsSyncData
stashSettingsSyncData:forDomain:key:isTwoWaySync:timestamp:
stringByAppendingFormat:
stringByAppendingString:
stringByStandardizingPath
stringForKey:
stringWithFormat:
stringWithUTF8String:
subdataWithRange:
substringWithRange:
superclass
supportsCapability:
supportsMigrationSync
supportsSecureCoding
syncCompletedWithError:withDevice:
syncCoordinator:beginSyncSession:
syncCoordinator:didInvalidateSyncSession:
syncCoordinatorDidChangeSyncRestriction:
syncCoordinatorDidReceiveStartSyncCommand:
syncDidCompleteSending
syncDidFailWithError:
syncGroups
syncProgressTracker
syncSessionProgressDictionary
syncedUserDefaults
synchronize
synchronizeForReading
synchronizeForWriting
synchronizeNanoDomain:keys:cloudEnabled:
synchronizeUserDefaultsDomain:keys:cloudEnabled:
synchronizeUserDefaultsDomain:keys:container:appGroupContainer:cloudEnabled:
systemBuildVersion
tempFilePath
timeIntervalSinceReferenceDate
timestamp
totalDataToSyncInBytes
twoWaySync
type
typeString
unarchiveObjectOfClasses:withData:
unarchiveObjectOfClasses:withFile:
unarchivedObjectOfClasses:fromData:error:
unionSet:
unserializeObject:error:
unsignedLongLongValue
untrackFileBackupForMessageID
untrackFileBackupMessage
untrackFileBackupMessageForFileAtPath:
untrackSettingsBackupForMessageID
untrackSettingsBackupMessage
untrackSettingsBackupMessageForContainer:domain:keys:
untrackSettingsSyncMessage
untrackSettingsSyncMessagesForDomain:keys:cloudEnabled:
updateCacheForDomain:keys:twoWaySyncTimestamp:isPerGizmo:
userSettings
userSettingsAndRestrictions
usingPrefsFromDomain:
uuid
value
valueForProperty:
waitForPairedOrPairingDevice
workQueue
writeBlob:
writeCache:toDiskForDomain:isPerGizmo:
writeData:
writeMessage:data:
writeTo:
writeToFile:options:error:
writeToURL:error:
xpcListener
zone
NPSUserDefaultsMsgKey
NSCopying
NPSManagedConfigurationMsg
NPSUserDefaultsBackupMsg
NPSKeyedArchiverUtil
PendingIDSProtobuf
NPSIDSBlackHole
IDSServiceDelegate
NSObject
NPSCompanionServerProtocol
NPSServerProtocol
NPSServer
PSYSyncCoordinatorDelegate
NSXPCListenerDelegate
NPSFileBackupMetadata
NSSecureCoding
NSCoding
NPSUserDefaultsMsg
Logger
NPSFileBackupMsg
NPSDatabase
NPSBlobReaderWriter
NPSBackupReaderWriter
NPProgressTracker
UserDefaultsKey
UserDefaultsDomain
PermittedUserDefaultsKey
PermittedUserDefaultsDomain
NPSSettings
NPSUserDefaultsBackupMsgKey
NPSDeviceRegistry
NPSOSLogStateProvider
NPSSettingAccessor
NPSFullBackupMsg
NPSFileBackupManager
@24@0:8^{_NSZone=}16
B16@0:8
v20@0:8B16
v24@0:8d16
@16@0:8
B24@0:8@16
v24@0:8@16
Q16@0:8
d16@0:8
v16@0:8
@"NSString"
@"NSData"
{?="timestamp"b1"twoWaySync"b1}
#16@0:8
@24@0:8Q16
@"NSMutableArray"
@32@0:8@16@24
@24@0:8@16
@48@0:8@16Q24@32@40
@"NSDate"
@"IDSProtobuf"
@"IDSDevice"
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v64@0:8@16@24@32@40@48@56
v40@0:8@16@24@32
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v32@0:8@16@24
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v40@0:8@16@24@?32
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32@"IDSMessageContext"40
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v52@0:8@16@24@32@40B48
v52@0:8@"NSString"16@"NSSet"24@"NSString"32@"NSString"40B48
v36@0:8@16@24B32
v36@0:8@"NSString"16@"NSSet"24B32
B32@0:8@16@24
q16@0:8
v28@0:8@16B24
v32@0:8@"PSYSyncCoordinator"16@"PSYServiceSyncSession"24
v24@0:8@"PSYSyncCoordinator"16
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v24@0:8@?16
v32@0:8B16B20@24
v40@0:8@16Q24@32
v32@0:8@16Q24
v48@0:8@16@24@32^v40
@48@0:8@16i24@28^@36B44
@52@0:8@16i24@28^@36B44B48
B44@0:8@16@24B32@36
@28@0:8@16B24
B36@0:8@16@24B32
B28@0:8@16B24
v44@0:8@16@24@32B40
@36@0:8@16@24B32
@68@0:8@16@24@32^@40^@48B56@60
@52@0:8@16@24@32B40@44
v52@0:8@16@24B32@36@44
v24@0:8Q16
@"NPSFileBackupManager"
@"PSYSyncCoordinator"
@"PSYServiceSyncSession"
@"NSMutableDictionary"
@"NSObject<OS_os_transaction>"
@"NPProgressTracker"
@"NPSOSLogStateProvider"
@"NSObject<OS_dispatch_queue>"
@"NPSSettings"
@"NSXPCListener"
@"IDSService"
@"NPSDeviceRegistry"
@"NPSDatabase"
@"NSObject<OS_dispatch_source>"
@"NSDictionary"
@"NSUUID"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSURL"
{?="timestamp"b1}
B28@0:8i16@20
B32@0:8^i16@24
v32@0:8@16@?24
v52@0:8@16@24@32B40d44
i16@0:8
^{sqlite3=}16@0:8
v24@0:8^{sqlite3=}16
^{sqlite3_stmt=}16@0:8
v24@0:8^{sqlite3_stmt=}16
^{sqlite3=}
^{sqlite3_stmt=}
@"NSFileHandle"
v32@0:8Q16@24
B24@0:8@?16
@"NPSBlobReaderWriter"
@"NSSet"
@"NSMutableSet"
@40@0:8@16@24@32
@"NRDevice"
@"NPSDomainAccessor"
@"NRActiveDeviceAssertion"
@"NPSServer"
@40@0:8@16q24@?32
@32@0:8@16^@24
v24@0:8q16
Error (%@) reading data from (%@)
Error (%@) unarchiving expected classes (%@) with (%@) bytes data
Error (%@) archiving (%@)
Launching; "NanoPreferencesSyncDaemon_Sim-309" "2731"
Received notification: %s
Received managed configuration change notification
Received unexepectedly NULL notification
Received unexpected non-dictionary type event: (%@)
setHasPerformedInitialSync: Alt account device. Force set sync complete.
setHasPerformedInitialSync: Alt account device. Not paired, not forcing sync complete
setHasPerformedInitialSync: (%d, %d, %{public}@)
setHasPerformedInitialSync called but the active device isn't paired to a non-archived device.
setHasPerformedInitialSync: Paired device build version being updated from %@ to %@
setHasPerformedInitialSync: Local device build version being updated from %@ to %@
setHasPerformedInitialSync: LastActiveDate being updated from %llu -> %llu
setHasPerformedInitialSync: sendSetting failed.
Not doing check for initial sync, as this is alt account device.
setHasPerformedInitialSync: Posting notification %@ (NPSHasCompletedInitialSync)
syncCompletedWithError: Sync completed: error=%@
_completeActiveSyncSessionWithError: Reporting sync failure (%@) to sync session: (%@)
_completeActiveSyncSessionWithError:Reporting successful sync completion to sync session: (%@)
coordinator: (%@)
Asked to start syncing for sync session (%@) even though there already is an active sync session (%@)
total: (%llu), remaining: (%llu); initialSyncProgressDictionary: (%@)
strongSession: (%p); _activeSyncSession: (%p)
Did not complete syncing before timer expired; Sync Session: (%@); Pending Messages: (%@)
Active device changed: %snil -> %snil
startPrefsSyncWithGroups: %{public}@
Backup list before exclusions: %@ : %@
Excluding: %@
Backup list after exclusions: %@ : %@
Removed all keys from: %@
Excluding: %@ from backup, it's on the exclusion list
startPrefsSyncWithGroups: No data synced.
checkIfTinkerLastActiveDateChanged: LastActiveDate changed from %llu -> %llu Tinker watch switch detected
%s: - value: %@
%s: %@ doesn't exist in domain %@ cache is not valid
%s: setting all timestamps to now
%s: Unable to write to url: %@.  Error: %@
%s: can't open cache dir(%@), assuming there is nothing to update: %@
%s: Skipping Paired Device Version change check. Not paired.
%s: Detected first launch after pairing; Local build version: (%@)
%s: Detected local device update; Current build version: (%@); Previous: (%@)
%s: Doing new build tasks
%s: New build tasks completed
%s: lastRegisteredPairedDeviceBuildVersion: (%@); pairedDeviceBuildVersion: (%@)
%s: Doing a sync because of a build version change
%s: No build version change detected.
%s: Skipping Paired Device Version change check. Has not performed initial sync yet.
Using IDS service for sending sync state.
Successfully sent message with identifier: (%@)
Failed sending message with error: (%@)
Suspending IDS message processing
Resuming IDS message processing. Has %lu pending IDS messages to process.
Processing %@
%@ was originated from %@, not current active device %@; dropping.
Unsupported message type on non-watchOS, ignoring
service: (%@), account: (%@), identifier: (%@), success: (%d), error: (%@)
progress: (%f), total: (%llu), remaining: (%llu)
Message (%@) failed to be delivered with error: (%@)
Purge Timer fired!
Releasing transaction for ids-reset-timeout-transaction
messageID: (%@)
Failed re-sending settings backup for container (%@), domain (%@), keys (%@).
Failed re-sending file backup (%@) for identifier (%@)!
service: (%@); account: (%@); incomingResourceAtURL: (%@); metadata: (%@); fromID: (%@); context: (%@)
nil messageType. metadata: (%@)
Un-handled message type: (%@)
%{public}@
handleUserDefaultsMsg: %s idsProtobuf: (%p); outgoingResponseIdentifier: (%@)
Added %@ to pending IDS messages queue, size = %lu
Could not parse incoming data
Handling User Defaults message for domain: (%@);        hasTimestamp: (%d);        timestamp: (%f);        overwriteNewerTimestamps: (%s)
Domain (%@) not permitted; dropping incoming message
Handling key in domain: (%@)            key: (%@);            value: (%s);            hasTimestamp: (%d);            timestamp: (%f);            overwriteNewerTimestamps: (%s)
Using timestamp from user defaults message key (%f) for <Domain %@; key %@>.
Using timestamp from user defaults message (%f) for <Domain %@; key %@>.
Key (%@) in domain (%@) not permitted; dropping incoming message
Creating domain accessor (domain: %@, container: %@, appGroupContainer: %@)
Unable to create settings accessor for Key (%@) Domain (%@); dropping incoming message.
Received User Defaults value for <%@, %@>: (%@)
Discarding cached timestamp for <%@, %@> since it is set to the future; cached: (%f); current: (%f)
Updating timestamp for domain:%@ key:%@ to timestamp: %f
Discarding incoming setting for <%@, %@>, local value is more recent
Local expects <%@, %@> to be 2-way-synced, but remote doesn't
Skipping key (%@) since incoming value is un-changed                Current value: %@; incoming value: %@
Posting (%@) for domain (%@)
Handling Restore of User Defaults message for domain: (%@); hasTimestamp: (%d); timestamp: (%f)
Domain (%@) not synced; dropping incoming message
Key (%@) in domain (%@) not synced; dropping incoming message
Skipping key (%@) since incoming value is un-changed                        Current value: %@; incoming value: %@
Kind: (%@)
Feature: (%@); Value: (%@)
handleUserDefaultsBackupMsg: %s idsProtobuf: (%p); outgoingResponseIdentifier: (%@)
Handling User Defaults Backup message for container: (%@); domain: (%@)
Failed to unserialized domain backup (%@) with error: (%@)
Read pre-existing domain (%@) backup: (%@)
Received User Defaults Backup for <%@, %@>; Value: (%@)
Failed to serialize updated domain (%@) backup dictionary (%@) with error: (%@)
Failed to write updated domain (%@) backup at path (%@) with error: (%@)
Failed to delete backup for domain (%@) at path (%@) with error: (%@)
handleFileBackupMessage: %s idsProtobuf: (%p); outgoingResponseIdentifier: (%@)
Handling file backup message for path: (%@); Temporary URL: (%@)
listener: (%p); connection: (%p)
Connection invalidated: (%p)
Failed to resolve cache path for domain: (%@); isPerGizmo: (%d)
Reading cache for domain: (%@); isPerGizmo: (%d)
Failed to unserialized domain cache (%@) %@
Read cache: (%@)
Writing cache for domain: (%@); isPerGizmo: (%d)
Cache to be written: (%@)
Failed to serialize updated domain cache dictionary (%@) with error: (%@)
Failed to write updated domain cache (%@) with error: (%@)
Deleting cache for domain: (%@); isPerGizmo: (%d)
Cache for domain (%@) does not exist.
Failed to delete cache for domain: %@
Updating timestamp for <%@; %@> to %@
Could not list content of directory (%@)
Unexpectedly found directory (%@) within container (%@) backup
Restoring remote settings from backup at path (%@)
No remote settings backup directory (%@)
Restoring remote file (%@) stored locally at (%@); isInitialSync: (%d)
Failed to retrieve file size for file URL: (%@) with error: (%@); result: (%d)
Failed to send file resource (%@) for backup at (%@) with error: (%@)
Successfully sent file backup with identifier (%@)
Requested to create directory with nil path
Failed to create backup directory (%@) with error: (%@)
Failed to resolve backup path for domain: (%@) for container: (%@)
%s: keys: %@; syncGroups: %@
%s: Settings accessor not passed.
Key (%@) is not a String.
%s: Not allowed to sync items in this sync groups.
%s: Error serializing object for key %@. Error: %@
Remote backup for domain (%@) is empty; Deleting the associated .plist
Failed to unserialize domain (%@) backup (%@) for container (%@) with error: (%@)
Restoring <%@, %@> for container (%@) to (%@)
Failed to create binary data (domain: %@; key: %@) with error: (%@)
Reading cache for domain: (%@); key: (%@); isPerGizmo: (%{public}@)
Error reading the cache file (error: %@).
Sending user defaults message for <Domain: %@, Keys: %{public}lu>
Start sending settings in Domain: %{public}@ 
             Keys: %lu
             cloudEnabled: %{public}@
Not allowed to sync groups %{public}@. Skipping key %{public}@.
Sent <Domain: %{public}@; Key: %{public}@> as individual default sync message.
Skipping <%@; %@>.
<%{public}@>Domain size not safe to load in memory. Trying to send it once.
Failed to serialize value for <Domain: %{public}@; Key: %{public}@> (Error: %@)
No cached timestamp, and value is null. Not sending value for <Domain: %{public}@; Key: %{public}@>.
Message size reached max allowed size. Sending current default message.
[STATS] Completed sending settings in <Domain: %{public}@; Keys: %lul>.
Start sending permitted defaults in Domain: %{public}@ 
            Keys: %lu
 AllowedGroups: %@
Key: %@ not allowed, not syncing/backing up
Groups: %@, allowed groups: %@
Skipping <%@; %@>
<%{public}@>Domain size not safe to load in memory. Trying to load it once.
Handling message for domain (%@) key (%@) timestamp (%f)
Invalid debounce parameter
%s: Debouncer timed out- calling block
Releasing transaction for debounceOnWorkerQueueWithblock (timer fired)
Could not create dispatch source
Releasing transaction for debounceOnWorkerQueueWithblock (unable to create source)
Will force re-sync ManagedConfiguration state
Re-syncing MC since changes were detected since last sync. isInitialSync: (%d)
Skipping MC re-sync since no change detected since last sync. isInitialSync: (%d)
Skipping MC re-sync since Tinker watch
Sending MC user settings:
Sending MC restrictions:
File Backup manager did not have an entry for original file path (%@)
%s: domain: (%@); keys: (%@); container: (%@); appGroupContainer: (%@); cloudEnabled: (%d)
Domain (%@) should not be nil, and keys (%@) should not be nil or empty.
Container should not be nil when specifing an app group container (%@) for domain (%@) and keys (%@).
%s: domain: (%@); keys: (%@)
setLaunchNotification: %@ launch notification %@
SQL Error: (%d) %s
Error fetching schema version: %d (%s)
Error opening SQLite3 DB at (%@): (%d) %s
I/O error: ACCESS
I/O error: BLOCKED
I/O error: CHECKRESERVEDLOCK
I/O error: CLOSE
I/O error: DELETE
I/O error: DIR_CLOSE
I/O error: DIR_FSYNC
I/O error: FSTAT
I/O error: FSYNC
I/O error: LOCK
I/O error: NOMEM
I/O error: RDLOCK
I/O error: READ
I/O error: SEEK
I/O error: SHMLOCK
I/O error: SHMMAP
I/O error: SHMOPEN
I/O error: SHMSIZE
I/O error: SHORT_READ
I/O error: TRUNCATE
I/O error: UNLOCK
I/O error: WRITE
sqlite3_exec(%s) Error: (%d) %s
NPSBlobReaderWriter: initWithPathToCreateBlobFile error %@
NPSBlobReaderWriter: initWithPathToLoadBlobFile error %@
File length is not right- must have been a read or write error
File length is %ld bytes as expected
NPSBackupReaderWriter writing type %d length %u
NPSBackupReaderWriter reading type %d length %u
[Progress Tracker] Started tracking progress. (Crashed last time %@)
[Progress Tracker] Can start syncing (%{public}@)? %@
[Progress Tracker] Started %@
[Progress Tracker] Completed %@
[Progress Tracker] Stopped tracking progress.
[Progress Tracker] Requested to clear state.
[Progress Tracker] Adding %{public}@ to known problematic operation list.
[Progress Tracker] State from prefs %{public}@.                  Last domain being processed %{public}@.                  List of oversized domains %{public}@
%@ '%@': %@
%@ '%@':
Failed to list contents of %@: %@
Unable to read bundle: %@
Malformed bundle plist for bundle: %@. %@
Missing %@ or %@ entry for bundle: %@.
Key %@ mutually exclusive with keys %@ and %@ in bundle %@
Keys %@ and %@ must go together in bundle %@
Cannot overwrite existing container %@ with %@ for permittted <%@, %@> in bundle %@.
Cannot overwrite existing permitted <%@, %@> in bundle %@ with a different isPerGizmoSetting value.
Cannot overwrite existing container %@ with %@ for permitted <%@, %@> in bundle %@.
Action %@ not supported in bundle (%@).
Received notification: (%@)
Paired device changed from %{public}@ to %{public}@
Failed to create directory (%@) with error: (%@)
Dumping data for %{public}@ to sysdiagnose
Could not resolve containerPath for container (%@)
error while retrieving application record %@ with error %@
Container Path for container %@ is nil!
Could not resolve containerPath for container (%@), previous containerPath: (%@)
Container path changed from (%@) to (%@)
Synchronized user defaults domain (%@) for containerPath: (%@); ret: (%d).
Synchronized user defaults domain (%@); ret: (%d).
Synchronized nano-setting domain (%@); ret: (%d).
Read containerized user default <%@, %@> for containerPath: (%@); value: (%{public}@)
Read user default <%@, %@>; value: (%{public}@)
Read nano-setting <%@, %@>; value: (%{public}@)
Not safe to write value into domain %@ for key %@. (size %lld Bytes is beyond what we can handle)
Written containerized user default <%@, %@> for containerPath: (%@); value: (%@)
Written user default <%@, %@>; value: (%@)
Written nano-setting <%@, %@>; value: (%@)
Failed to serialized value (%@) with error: %@ 
Failed to unserialized data (%@) with error: %@
Logic error! Type %ld is not handled.
%s: Protection Class for %@ at path %@ is %d
Is user defaults domain %@ protected: %@
%s: fileURL: (%@); originalURL: (%@)
%s: Skipping, active device has changed
Error backuping file (%@), originalFileURL is nil
Failed to generate file backup destination path. File will not get backuped!
Failed to delete old file backup (%@) with error: (%@)
Failed to move file (%@) to (%@) with error: (%@)
Removing file (%@) from backup
Failed to remove file (%@) with error: (%@)
Failed to write index file (%@) with error: (%@)
Failed to delete to-be-empty index file (%@) with error: (%@)
softlink:r:path:/System/Library/PrivateFrameworks/NanoBackup.framework/NanoBackup
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.managedconfiguration.profiled-access</key>
<true/>
<key>com.apple.nano.nanoregistry.pairunpairobliterate</key>
<true/>
<key>com.apple.private.MobileContainerManager.allowed</key>
<true/>
<key>com.apple.private.MobileContainerManager.otherIdLookup</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.preferencessync</string>
<string>com.apple.private.alloy.preferencessync.pairedsync</string>
</array>
<key>com.apple.private.ids.messaging.urgent-priority</key>
<array>
<string>com.apple.private.alloy.preferencessync</string>
<string>com.apple.private.alloy.preferencessync.pairedsync</string>
</array>
<key>com.apple.private.ignore-preferences-size-limits</key>
<true/>
<key>com.apple.private.security.storage.AppDataContainers</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
<string>com.apple.certificates</string>
<string>com.apple.identities</string>
</array>
</dict>
</plist>
03.com.apple.managedconfiguration.profiled-access
050com.apple.nano.nanoregistry.pairunpairobliterate
050com.apple.private.MobileContainerManager.allowed
0;6com.apple.private.MobileContainerManager.otherIdLookup
com.apple.private.ids.messaging0]'com.apple.private.alloy.preferencessync2com.apple.private.alloy.preferencessync.pairedsync0
/com.apple.private.ids.messaging.urgent-priority0]'com.apple.private.alloy.preferencessync2com.apple.private.alloy.preferencessync.pairedsync050com.apple.private.ignore-preferences-size-limits
094com.apple.private.security.storage.AppDataContainers
keychain-access-groups05
apple
com.apple.certificates
com.apple.identities
%@ %@
value
twoWaySync
timestamp
-[NPSUserDefaultsMsgKey writeTo:]
NPSUserDefaultsMsgKey.m
nil != self->_key
kind
feature
setting
restriction
userSettingsAndRestrictions
container
domain
-[NPSUserDefaultsBackupMsg writeTo:]
NPSUserDefaultsBackupMsg.m
nil != self->_domain
com.apple.nanoprefsync
com.apple.private.alloy.preferencessync
com.apple.private.alloy.preferencessync.pairedsync
type
content
com.apple.pairedsync
UserDefaults/
ManagedConfiguration/
UserDefaultsBackup/
FileBackup/
local-device-build-version
last-active-date
paired-device-build-version
mc-data-cache
cache-is-valid
PendingIDSProtobuf for IDSProtobuf received at: %@, GUID: %@, type: %@
Unknown
UserDefault
UserDefaultsBackup
ManagedConfiguration
FileBackup
Undefined
com.apple.nanoprefsyncd.launchtransaction
com.apple.nanoprefsync.workQueue
Progress Tracker: %@
com.apple.nano
@"NSString"8@?0
v8@?0
activeDevice
com.apple.pairedsync.nanoprefsyncdfirst
com.apple.pairedsync.nanoprefsyncd
com.apple.private.alloy.preferencessync-idswake
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.private.alloy.preferencessync.pairedsync-idswake
com.apple.notifyd.matching
Notification
com.apple.Preferences.ChangedRestrictionsEnabledStateNotification
com.apple.NanoTimeKit
notificationsIndicatorEnabled
customMonogram
v16@?0@"NSString"8
com.apple.nanoprefsyncd.pairedsynctransaction
com.apple.NanoPreferencesSync
non-
com.apple.nanoprefsyncd.groupsynctransaction
v48@?0@"NSString"8@"PermittedUserDefaultsDomain"16@"NSString"24@"PermittedUserDefaultsKey"32@"NSMutableDictionary"40
v32@?0@"NSString"8@"PermittedUserDefaultsKey"16^B24
v32@?0@"NSString"8@"NSSet"16^B24
v32@?0@"NSString"8@"NSMutableDictionary"16^B24
v32@?0@"NSString"8@"PermittedUserDefaultsDomain"16^B24
v48@?0@"NSString"8@"UserDefaultsDomain"16@"NSString"24@"UserDefaultsKey"32@"NSMutableDictionary"40
v32@?0@"NSString"8@"NSArray"16^B24
v32@?0@"NSString"8@"UserDefaultsDomain"16^B24
com.apple.nanoprefsyncd.firstlaunchtransaction
B24@?0@"NSString"8@"UserDefaultsKey"16
v32@?0@"NSString"8@"NSMutableSet"16^B24
-[NPSServer checkAndUpdateCacheTimestamps]
-[NPSServer checkActiveDeviceChangedVersion]
MessageSendTimeout
PurgeRetryDelay
36A0EB23-E045-4E99-9D71-8FB9A853ADA7
NPS should not try syncing when there is no active device
com.apple.nanoprefsyncd.idstransaction
ids-reset-timeout-transaction
v28@?0@"NSString"8@"NSSet"16B24
v32@?0@"NSString"8@"NSString"16@"NSSet"24
com.apple.nanoprefsyncd.resourcetransaction
User defaults Msg: GUID: %@
<n/a>
Domain: %@
Keys: [
 %@,
Container: %@
Domain: %@
Keys: [
processing
queueing
not-nil
v32@?0@"NSString"8@"NSDictionary"16^B24
v32@?0@"NPSUserDefaultsBackupMsgKey"8Q16^B24
v24@?0Q8@"NSData"16
com.apple.nanoprefsyncd.restorremotesettingsfrombackup
@"NSError"24@?0@"NSString"8@"NSString"16
v32@?0@"NSURL"8@"NSURL"16^B24
-[NPSServer sendSetting:keys:allowedSyncGroups:messageIdentifier:messageData:cloudEnabled:backupFile:]
v32@?0@"NSString"8@16^B24
%@|%@
F4DCA831-3D30-45BC-BDCC-E99D0E482D94
 | %@
-[NPSServer applyStashedSettingsSyncMessages]
v44@?0@"NSString"8@"NSString"16@"NSData"24B32d36
com.apple.springboard
SBParentalControlsCapabilities
SBParentalControlsEnabled
-[NPSServer debounceOnWorkerQueueWithblock:]_block_invoke
debounceOnWorkerQueueWithblock
-[NPSServer synchronizeUserDefaultsDomain:keys:container:appGroupContainer:cloudEnabled:]
com.apple.nanoprefsyncd.synchronizeuserdefaultsdomain
-[NPSServer synchronizeNanoDomain:keys:cloudEnabled:]
com.apple.nanoprefsyncd.synchronizenanodomaindomain
com.apple.mobile.keybagd.first_unlock
enabling
disabling
NBExclusionListManager
Unable to find class %s
<%@ %p; uuid = (%@); url = (%@)>
uuid
-[NPSUserDefaultsMsg writeTo:]
NPSUserDefaultsMsg.m
InternalBuild
Oji6HRoPi7rH7HPdWVakuw
Domain <%@>
<key: %@; Value: %@>
fileURL
fileData
(nil)
BEGIN EXCLUSIVE TRANSACTION
ROLLBACK TRANSACTION
COMMIT TRANSACTION
meta
SELECT COUNT(*) FROM meta
Unknown Error
PRAGMA journal_mode=WAL;
CREATE TABLE IF NOT EXISTS meta (version INTEGER PRIMARY KEY AUTOINCREMENT, tstamp REAL)
CREATE TABLE IF NOT EXISTS sync_msgs (domain TEXT NOT NULL, key TEXT NOT NULL, messageID TEXT, PRIMARY KEY(domain, key))
CREATE TABLE IF NOT EXISTS backup_msgs (container TEXT NOT NULL DEFAULT (''), domain TEXT NOT NULL, key TEXT NOT NULL, messageID TEXT, PRIMARY KEY(container, domain, key))
CREATE TABLE IF NOT EXISTS msgs_type (messageID TEXT NOT NULL PRIMARY KEY, type INTEGER NOT NULL)
CREATE INDEX sync_msgs_messageID_idx ON sync_msgs (messageID ASC)
CREATE INDEX backup_msgs_messageID_idx ON backup_msgs (messageID ASC)
INSERT INTO meta (tstamp) VALUES (datetime('now'))
CREATE TABLE IF NOT EXISTS file_backup_msgs (path TEXT NOT NULL, messageID TEXT, PRIMARY KEY(path))
CREATE INDEX file_backup_msgs_messageID_idx ON file_backup_msgs (messageID ASC)
CREATE TABLE IF NOT EXISTS stashed_sync_msgs (domain TEXT NOT NULL, key TEXT NOT NULL, data BLOB, two_way_sync INTEGER, timestamp DOUBLE, PRIMARY KEY(domain, key))
ALTER TABLE sync_msgs ADD COLUMN cloudEnabled INTEGER
SELECT type FROM msgs_type WHERE messageID=?
INSERT INTO msgs_type (messageID, type) VALUES (?, ?)
INSERT OR REPLACE INTO sync_msgs (domain, key, messageID, cloudEnabled) VALUES (?, ?, ?, ?)
INSERT OR REPLACE INTO backup_msgs (container, domain, key, messageID) VALUES (?, ?, ?, ?)
INSERT OR REPLACE INTO file_backup_msgs (path, messageID) VALUES (?, ?)
DELETE FROM sync_msgs WHERE domain=? AND key=? AND cloudEnabled=?
DELETE FROM backup_msgs WHERE container=? AND domain=? AND key=?
DELETE FROM file_backup_msgs WHERE path=?
DELETE FROM sync_msgs WHERE messageID=?
DELETE FROM backup_msgs WHERE messageID=?
DELETE FROM file_backup_msgs WHERE messageID=?
DELETE FROM msgs_type WHERE messageID=?
UPDATE sync_msgs SET messageID=NULL WHERE messageID=?
UPDATE backup_msgs SET messageID=NULL WHERE messageID=?
UPDATE file_backup_msgs SET messageID=NULL WHERE messageID=?
SELECT domain, key, cloudEnabled FROM sync_msgs WHERE messageID=?
SELECT container, domain, key FROM backup_msgs WHERE messageID=?
SELECT path FROM file_backup_msgs WHERE messageID=?
SELECT domain, key, cloudEnabled FROM sync_msgs WHERE messageID IS NULL
SELECT container, domain, key FROM backup_msgs WHERE messageID IS NULL
SELECT path FROM file_backup_msgs WHERE messageID IS NULL
INSERT OR REPLACE INTO stashed_sync_msgs (domain, key, data) VALUES (?, ?, ?)
SELECT domain, key, data, two_way_sync, timestamp FROM stashed_sync_msgs
DELETE FROM stashed_sync_msgs
DELETE FROM msgs_type
DELETE FROM sync_msgs
DELETE FROM backup_msgs
DELETE FROM file_backup_msgs
kNPProgressTrackerDomain
kNPProgressTrackerLastBootedKey
kNPProgressTrackerStateKey
kNPProgressTrackerLastProcessingDomainKey
kNPProgressTrackerOversizedDomainsKey
kNPProgressTrackerStateStarted
kNPProgressTrackerStateCompleted
kNPProgressTrackerDomainsKey
start
metadata
System/Library/PreferencesSyncBundles
NPSDomains
NPSAction
NPSDefaultsDomain
NPSDefaultsKeys
NPSDefaultsKeyPrefixes
NPSChangeNotificationName
NPSContainer
NPSAppGroupContainer
NPSCloudEnabled
NPSSyncGroups
NPSPerGizmo
NPSMirrorableBBDomain
NPSMirrorableDomain
NPSMirrorableKey
OneWaySync
TwoWaySync
Whitelist
Permitlist
Local
Tinker
First
<%@: %p key = "%@" twoWaySync = %d
 isPerGizmoSetting = %d
%@%@>
BPSNanoBulletinShowsCustomSettings
<%@: %p domain = "%@" _keys = "%@"
<%@: %p key = "%@" notificationNames = "%@" twoWaySync = %d
com.apple.Carousel
DisableWristDetection
NotificationPrivacy
mirrorDNDState
workoutDND
dndState
dndStateDate
dndEffectiveOverrides
dndPrivilegedSenderTypes
self ENDSWITH '.bundle'
B44@?0@"NSBundle"8@"NSString"16B24@"<NSObject>"28#36
Key %@ not found when expected.
Item in container for key %@ expected to be of type %@.
Key %@ expected to be of type %@.
v28@?0@"NSString"8B16@"NSString"20
com.apple.bulletinboard.apps
SIMULATOR_ROOT
-[NPSUserDefaultsBackupMsgKey writeTo:]
NPSUserDefaultsBackupMsgKey.m
NanoPreferencesSync
Cache/
Backup/UserDefaults/
Backup/Files/
index
database.db
-[NPSDeviceRegistry startMonitoringPairingEventsWithQueue:]
NPSDeviceRegistry.m
queue
com.apple.nanoprefsyncd.dump
%@.%ld
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
UserDefaults
NanoSetting
undefined
-[NPSSettingAccessor requiresDeviceUnlockedSinceBoot]
-[NPSFileBackupManager backupFileAtURL:originalFileURL:]
apple-internal-install
nil _deviceRegistry
nil pairedDevice
nil pairingID
nil pairingDataStore
other1
other2
-[NPSFileBackupManager enumerateFileBackupsUsingBlock:]
v32@?0@"NSURL"8@"NPSFileBackupMetadata"16^B24
-[NPSFileBackupManager localFileURLForOriginalFileURL:]
T@"IDSService",&,N,V_idsService
T#,R
T@"NSString",&,N,V_databasePath
T@"IDSProtobuf",R,N,V_idsProtobuf
T@"PSYSyncCoordinator",&,N,V_pairedSyncCoordinatorRemainderSync
T@"NPProgressTracker",&,N,V_syncProgressTracker
_activeDeviceID
T@"NPSDeviceRegistry",&,N,V_deviceRegistry
T@"NPSDomainAccessor",&,N,V_nanoDomainAccessor
_domain
T@"NPSOSLogStateProvider",&,N,V_dumper
_dumper
T@"NPSSettings",&,N,V_settings
_getFileBackupWithNullMessageID
T@"NSData",&,N,V_fileData
_lastDumpString
T@"NSData",&,N,V_restriction
_offset
T@"NSData",&,N,V_userSettingsAndRestrictions
_server
T@"NSDate",R,N
addKey:
T@"NSDictionary",&,N,V_allowedGroups
beganOperation:
T@"NSMutableArray",&,N,V_registryChangedSemaphores
containsObject:
T@"NSMutableDictionary",&,N,V_keyArrays
copyTo:
T@"NSMutableDictionary",&,N,V_keyPrefixes
dealloc
T@"NSMutableDictionary",&,N,V_metadataIndex
domainPlistSize
T@"NSMutableDictionary",&,N,V_syncedUserDefaults
feature
T@"NSMutableSet",&,N,V_notificationNames
hasKind
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
initWithDomain:
T@"NSObject<OS_dispatch_source>",&,N,V_purgeTimer
initWithString:
T@"NSSet",&,N,V_syncGroups
isProxy
T@"NSString",&,N,V_container
keyPrefixArrays
T@"NSString",&,N,V_currentlyUsedDomain
localFileURLForOriginalFileURL:
T@"NSString",&,N,V_feature
numberWithBool:
T@"NSString",&,N,V_filesBackupMetadataIndexPath
release
T@"NSString",&,N,V_key
requiresDeviceUnlockedSinceBoot
T@"NSString",&,N,V_mirrorableBBDomain
restoreRemoteSettingsFromBackup
T@"NSString",&,N,V_mirrorableKey
serviceSpaceDidBecomeAvailable:
T@"NSString",&,N,V_path
setBool:forKey:
T@"NSString",&,N,V_userDefaultsBackupDirectoryPath
setGetSettingsSyncForMessageID:
T@"NSURL",&,N,V_url
setKeyPrefixes:
T@"NSUUID",&,N,V_uuid
setUrl:
T@"NSXPCListener",&,N,V_xpcListener
setWithObjects:
T@"PSYSyncCoordinator",&,N,V_pairedSyncCoordinatorFirstSync
setting
TB,N,V_hasChangesToWrite
stringByAppendingPathComponent:
TB,N,V_isCloudEnabled
syncDidComplete
TB,N,V_twoWaySync
syncTransaction
TB,R,N
TB,R,N,V_shouldRun
version
TQ,N,V_remainingDataToSyncInBytes
.cxx_destruct
T@"NRDevice",&,N,V_activeDevice
T@"IDSDevice",R,N,V_fromIDSDevice
T@"NSUUID",&,N,V_activeDeviceID
T@"IDSService",&,N,V_idsServiceSyncState
TB,N,V_isPrefix
T@"NPSDatabase",&,N,V_database
_compressedPath
T@"NPSDomainAccessor",&,N,V_domainAccessor
_deviceRegistry
T@"NPSFileBackupManager",R,N,V_fileBackupManager
_domainAccessor
T@"NPSServer",W,N,V_server
T@"NRActiveDeviceAssertion",W,N,V_alreadyExistingAssertion
_isCloudEnabled
T@"NSData",&,N,V_fileURL
_logUserDefaultsBackup:idsGuid:
T@"NSData",&,N,V_setting
_pairedSyncCoordinatorFirstSync
T@"NSData",&,N,V_value
_setNullMessageIDForSettingSync
T@"NSDate",R,N,V_receivedDate
allKeys
T@"NSMutableArray",&,N,V_keys
checkActiveDeviceChangedVersion
T@"NSMutableArray",&,V_problematicOperationList
context
T@"NSMutableDictionary",&,N,V_keyPrefixArrays
dataWithLength:
T@"NSMutableDictionary",&,N,V_keys
debounceOnWorkerQueueWithblock:
T@"NSMutableDictionary",&,N,V_permittedUserDefaults
enumerateFileBackupsUsingBlock:
T@"NSMutableDictionary",R,N,V_syncSessionProgressDictionary
fileURL
T@"NSObject<OS_dispatch_queue>",&,N,V_workQueue
hasPairedDevice
T@"NSObject<OS_dispatch_source>",&,N,V_mcDebounceSource
initWithFormat:
T@"NSObject<OS_os_transaction>",&,N,V_syncTransaction
isEqualToArray:
T@"NSString",&,N,V_appGroupContainer
T@"NSString",&,N,V_containerPath
keyType
T@"NSString",&,N,V_domain
T@"NSString",&,N,V_filesBackupDirectoryPath
purgeRetryDelay
T@"NSString",&,N,V_globalCacheDirectoryPath
reportProgress:
T@"NSString",&,N,V_kind
restoreFileBackupForLocalFileURL:originalFileURL:isInitialSync:
T@"NSString",&,N,V_mirrorableDomain
T@"NSString",&,N,V_pairingDataStore
T@"NSString",&,N,V_perGizmoCacheDirectoryPath
setFlushStashedSettingSyncData:
T@"NSString",R,C
setKey:
T@"NSURL",R,N,V_compressedPath
setRestriction:
T@"NSUUID",N,V_activeDeviceID
setUserSettingsAndRestrictions:
T@"PSYServiceSyncSession",&,N,V_activeSyncSession
setXpcListener:
TB,N
sizeSafeToWrite
TB,N,V_hasCheckedInWithNanoRegistry
syncCoordinatorWithServiceName:
TB,N,V_isPerGizmoSetting
syncSessionType
TB,R
untrackSettingsSyncForMessageID
TB,R,N,GisPaired
userDefaultsBackupDirectoryPath
TB,V_crashedDuringLastRun
waitForActiveOrAltAccountDevice
TQ,N,V_totalDataToSyncInBytes
TQ,R
TQ,R,N,V_messageType
TQ,R,N,V_version
T^{sqlite3=},N,V_db
T^{sqlite3_stmt=},N,V_flushStashedSettingSyncData
T^{sqlite3_stmt=},N,V_getFileBackupForMessageID
T^{sqlite3_stmt=},N,V_getFileBackupWithNullMessageID
T^{sqlite3_stmt=},N,V_getMessageTypeForMessageID
T^{sqlite3_stmt=},N,V_getSettingsBackupForMessageID
T^{sqlite3_stmt=},N,V_getSettingsBackupWithNullMessageID
T^{sqlite3_stmt=},N,V_getSettingsSyncForMessageID
T^{sqlite3_stmt=},N,V_getSettingsSyncWithNullMessageID
T^{sqlite3_stmt=},N,V_getStashedSettingSyncData
T^{sqlite3_stmt=},N,V_purgeFileBackupTable
T^{sqlite3_stmt=},N,V_purgeMessageTypeTable
T^{sqlite3_stmt=},N,V_purgeSettingsBackupTable
T^{sqlite3_stmt=},N,V_purgeSettingsSyncTable
T^{sqlite3_stmt=},N,V_removeMessageFromMessageTypeTable
T^{sqlite3_stmt=},N,V_setMessageIDForFileBackup
T^{sqlite3_stmt=},N,V_setMessageIDForSettingBackup
T^{sqlite3_stmt=},N,V_setMessageIDForSettingSync
T^{sqlite3_stmt=},N,V_setMessageTypeForMessageID
T^{sqlite3_stmt=},N,V_setNullMessageIDForFileBackup
T^{sqlite3_stmt=},N,V_setNullMessageIDForSettingBackup
T^{sqlite3_stmt=},N,V_setNullMessageIDForSettingSync
T^{sqlite3_stmt=},N,V_stashSettingsSyncData
T^{sqlite3_stmt=},N,V_untrackFileBackupForMessageID
T^{sqlite3_stmt=},N,V_untrackFileBackupMessage
T^{sqlite3_stmt=},N,V_untrackSettingsBackupForMessageID
T^{sqlite3_stmt=},N,V_untrackSettingsBackupMessage
T^{sqlite3_stmt=},N,V_untrackSettingsSyncForMessageID
T^{sqlite3_stmt=},N,V_untrackSettingsSyncMessage
Td,N,V_timestamp
Tq,N,V_type
URLWithString:
UTF8String
UUID
UUIDString
_activeDevice
_activeSyncSession
_allowedGroups
_alreadyExistingAssertion
_appGroupContainer
_clearState
_completeActiveSyncSessionWithError:
_container
_containerPath
_crashedDuringLastRun
_currentlyUsedDomain
_database
_databasePath
_done
_feature
_fileBackupManager
_fileData
_fileURL
_filesBackupDirectoryPath
_filesBackupMetadataIndexPath
_flushStashedSettingSyncData
_fromIDSDevice
_getFileBackupForMessageID
_getMessageTypeForMessageID
_getOperationDictionary:
_getSchemaVersion
_getSettingsBackupForMessageID
_getSettingsBackupWithNullMessageID
_getSettingsSyncForMessageID
_getSettingsSyncWithNullMessageID
_getStashedSettingSyncData
_globalCacheDirectoryPath
_has
_hasChangesToWrite
_hasCheckedInWithNanoRegistry
_idsProtobuf
_idsService
_idsServiceSyncState
_init
_isPerGizmoSetting
_isPrefix
_key
_keyArrays
_keyPrefixArrays
_keyPrefixes
_keys
_kind
_lastBootedTimeFromPref
_logUserDefaults:idsGuid:
_mcDebounceSource
_messageType
_metadataIndex
_mirrorableBBDomain
_mirrorableDomain
_mirrorableKey
_nanoDomainAccessor
_notificationNames
_openDBAtPath:
_pairedSyncCoordinatorRemainderSync
_pairingDataStore
_path
_pendingIDSMessages
_perGizmoCacheDirectoryPath
_permittedUserDefaults
_problematicOperationList
_processStateClearIfNeeded
_processingIDSMessage
_purgeFileBackupTable
_purgeMessageTypeTable
_purgeSettingsBackupTable
_purgeSettingsSyncTable
_purgeTimer
_queue
_receivedDate
_registryChanged:
_registryChangedSemaphores
_remainingDataToSyncInBytes
_removeMessageFromMessageTypeTable
_restriction
_resumeIDSMessageProcessingWithDevice:
_save:forOperation:
_saveLastBootedTimeToPref:
_setMessageIDForFileBackup
_setMessageIDForSettingBackup
_setMessageIDForSettingSync
_setMessageTypeForMessageID
_setNullMessageIDForFileBackup
_setNullMessageIDForSettingBackup
_setValue:forKey:
_setting
_settingBundlesInDirectories:
_settings
_shouldRun
_stashSettingsSyncData
_suspendIDSMessageProcessing
_syncGroups
_syncProgressTracker
_syncSessionProgressDictionary
_syncTransaction
_syncedUserDefaults
_timestamp
_totalDataToSyncInBytes
_twoWaySync
_type
_uncompressedPath
_untrackFileBackupForMessageID
_untrackFileBackupMessage
_untrackSettingsBackupForMessageID
_untrackSettingsBackupMessage
_untrackSettingsSyncForMessageID
_untrackSettingsSyncMessage
_url
_userDefaultsBackupDirectoryPath
_userSettingsAndRestrictions
_uuid
_value
_valueForKey:
_version
_workQueue
_xpcListener
activeDevice
activeDeviceChanged
activeDeviceID
activeDeviceSelectorBlock
activeSyncSession
addDelegate:queue:
addEntriesFromDictionary:
addMetaDataForOperation:metaData:
addObject:
addObjectsFromArray:
addObserver:forKeyPath:options:context:
addObserver:selector:name:object:
addToProblematicOperationList:
allObjects
allValues
allocWithZone:
allowedGroups
alreadyExistingAssertion
appGroupContainer
appendData:
appendFormat:
appendString:
applyStashedSettingsSyncMessages
archiveObject:
archivedDataWithRootObject:requiringSecureCoding:error:
array
arrayWithCapacity:
arrayWithObject:
arrayWithObjects:count:
autorelease
backupFileAtURL:originalFileURL:
backupPathForDomain:container:
bbAppsSettings
boolForKey:
boolForKey:keyExistsAndHasValidFormat:
boolValue
bytes
cachePathForDomain:isPerGizmo:
canStartOperation:
checkAndUpdateCacheTimestamps
checkForActiveDeviceChange
checkIfTinkerLastActiveDateChanged
class
clearKeys
clearState
close
closeFile
code
compare:
compatibilityState
completedOperation:
completedOperations
compressedPath
conformsToProtocol:
container
containerPath
contentsOfDirectoryAtPath:error:
copy
copyKeyList
copyWithZone:
count
countByEnumeratingWithState:objects:count:
crashedDuringLastRun
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
createDirectoryIfNeeded:
createFileAtPath:contents:attributes:
currentRunLoop
currentlyUsedDomain
data
dataContainerURL
dataWithBytes:length:
dataWithContentsOfFile:
dataWithContentsOfFile:options:error:
dataWithPropertyList:format:options:error:
database
databasePath
date
debugDescription
decodeObjectOfClass:forKey:
defaultCenter
defaultManager
deleteCacheForDomain:isPerGizmo:
description
deviceForFromID:
deviceForIDSDevice:
deviceRegistry
dictionary
dictionaryRepresentation
dictionaryWithContentsOfFile:
dictionaryWithObjects:forKeys:count:
doesCurrentDeviceSupportGroupedTwoWayKeys
doesCurrentDeviceSupportNewIDSServiceForSync
domain
domainAccessor
domainShouldSyncFirst:key:
domainSize
doneWriting
doubleValue
dump
dumpDomain:
dumper
effectiveRestrictions
encodeObject:forKey:
encodeWithCoder:
enumerateKeysAndObjectsUsingBlock:
enumerateMessages:
enumerateObjectsUsingBlock:
environment
errorWithDomain:code:userInfo:
exceptionWithName:reason:userInfo:
excludedKeysInDomain:
excludedPerGizmoDomains
fileBackupManager
fileData
fileExistsAtPath:
fileExistsAtPath:isDirectory:
fileHandleForReadingFromURL:error:
fileHandleForWritingToURL:error:
fileSystemRepresentation
fileURLWithPath:
fileURLWithPath:isDirectory:
fileURLWithUUID:
filesBackupDirectoryPath
filesBackupMetadataIndexPath
filteredArrayUsingPredicate:
firstObject
flushStashedSettingSyncData
flushStashedSettingsSyncData
forceResyncManagedConfigurationIsInitialSync:
fromIDSDevice
getAllDevicesWithArchivedAltAccountDevicesMatching:
getCachedTimeStampFor:key:usePerGizmoCache:
getFileBackupDataForMessage:handler:
getFileBackupForMessageID
getFileBackupWithNullMessageID
getMessageType:forMessageID:
getMessageTypeForMessageID
getResourceValue:forKey:error:
getSettingsBackupDataForMessage:handler:
getSettingsBackupForMessageID
getSettingsBackupWithNullMessageID
getSettingsSyncDataForMessage:handler:
getSettingsSyncForMessageID
getSettingsSyncWithNullMessageID
getStashedSettingSyncData
getStashedSettingsSyncDataWithHandler:
globalCacheDirectoryPath
groupContainerURLs
handleActiveDeviceChangedVersionNotification
handleAppChangedRestrictions
handleFileBackupMessage:resourceURL:backupFile:
handleFileBackupMessage:service:account:fromID:context:
handleFullBackupMessage:resourceURL:idsGuid:
handleManagedConfigurationChangedNotification
handlePermittedUserDefaultsMsg:messageData:overwriteNewerTimestamps:backupFile:
handleRestoreOfSyncingUserDefaultsMsg:backupFile:
handleUserDefaultsBackupMsg:service:account:fromID:context:
handleUserDefaultsBackupMsgData:backupFile:idsGuid:
handleUserDefaultsMsg:service:account:fromID:context:
handleUserDefaultsMsgData:backupFile:idsGuid:
hasChangesToWrite
hasCheckedInWithNanoRegistry
hasContainer
hasFeature
hasFileData
hasFileURL
hasPerformedInitialSync
hasPrefix:
hasRestriction
hasSetting
hasTimestamp
hasTwoWaySync
hasUserSettingsAndRestrictions
hasValue
hash
idsProtobuf
idsService
idsServiceSyncState
init
initCore:
initWithBundleIdentifier:allowPlaceholder:error:
initWithCapacity:
initWithCoder:
initWithData:
initWithDeviceRegistry:
initWithDomain:pairingID:pairingDataStore:
initWithIDSProtobuf:ofType:from:receivedAt:
initWithMachServiceName:
initWithNPSServer:
initWithName:maxStringLength:block:
initWithNanoDomain:
initWithPath:
initWithPathToCreateBackup:
initWithPathToCreateBlobFile:
initWithPathToLoadBackup:
initWithPathToLoadBlobFile:
initWithProtobufData:type:isResponse:
initWithService:
initWithUUIDString:
initWithUserDefaultsDomain:container:appGroupContainer:
initWithUserDefaultsDomain:containerPath:
intValue
integerForKey:
interfaceWithProtocol:
invalidate
isAltAccountDevice
isCloudEnabled
isEqual:
isEqualToString:
isFileGood
isKindOfClass:
isManagedConfigurationSettingPermittedForKind:feature:
isMemberOfClass:
isMirroring
isPaired
isPerGizmoSetting
isPrefix
keyArrays
keyAtIndex:
keyPrefixes
keys
keysCount
kind
lastActiveDate
length
linkedDevicesWithRelationship:
listener:shouldAcceptNewConnection:
loadSettingsBundles
localizedDescription
logManagedConfigurationDictionary:
losslessFileCompressionFrom:to:shouldCompress:
managedConfigurationData
managedConfigurationSettings
maxSendTimeout
mcDebounceSource
mergeFrom:
messageType
messageWasDelivered:
messageWasPurged:
metadataIndex
metadataIndexReadFromDiskIfNeeded
minusSet:
mirrorableBBDomain
mirrorableDomain
mirrorableKey
moveItemAtPath:toPath:error:
mutableCopy
name
nanoDomainAccessor
newDefaultsMsgWithDomain:
newFileUUID
nonActiveDeviceForIDSDevice:
notificationNames
nps_defaultPairedDeviceIDIncludingTinkerDevices
nps_mineTinkerDevices
nps_nrDevice
nrDeviceForIDSDevice:
null
numberWithDouble:
numberWithUnsignedInteger:
numberWithUnsignedLong:
numberWithUnsignedLongLong:
objectAtIndex:
objectAtIndexedSubscript:
objectForInfoDictionaryKey:
objectForKey:
objectForKeyedSubscript:
observeValueForKeyPath:ofObject:change:context:
offsetInFile
outgoingResponseIdentifier
paired
pairedDevice
pairedSyncCoordinatorFirstSync
pairedSyncCoordinatorRemainderSync
pairingDataStore
pairingDevice
pairingID
path
pathToFileWithUUID:
pendingIDSProtobufMessageTypeToString:
perGizmoCacheDirectoryPath
performFirstLaunchIntoNewBuildTasks
performMigration
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
permittedUserDefaults
persistMetadataIndex
predicateWithFormat:
prefSizeFor:inContainer:
preprocessItemSyncGroups:forDomain:key:
problematicOperationList
processInfo
propertyListWithData:options:format:error:
purgeFileBackupTable
purgeMessageTypeTable
purgePendingOutgoingMessages
purgeSettingsBackupTable
purgeSettingsSyncTable
purgeTimer
queue
queueOneIdentifierForFileBackupMsg:
queueOneIdentifierForManagedConfigurationMsg:
queueOneIdentifierForUserDefaultsBackupMsg:
queueOneIdentifierForUserDefaultsMsg:
readBlob
readCacheFromDiskForDomain:isPerGizmo:
readDataOfLength:
readFrom:
receivedDate
registerInitialSyncMessage:ofSize:orReportInitialSyncFailureWithError:
registerOSLogStateHandlerName:block:
registerSyncMessageWithIdentifier:size:
registryChangedSemaphores
remainingDataToSyncInBytes
removeAllObjects
removeItemAtPath:error:
removeItemAtURL:error:
removeMessageFromMessageTypeTable
removeMessageFromMessageTypeTable:
removeObject:
removeObjectForKey:
removeObserver:forKeyPath:
resendMessagesForMessageID:
resetIfActiveDeviceChanged
respondsToSelector:
restoreRemoteFilesFromBackup
restriction
resume
resyncManagedConfigurationIfNeeded
resyncManagedConfigurationIfNeededIsInitialSync:
retain
retainCount
retryFileBackupRestoreForFilePath:
self
sendManagedConfigurationSettings:isInitialSync:
sendMessageData:messageType:queueOneIdentifier:identifier:cloudEnabled:
sendMessageData:messageType:queueOneIdentifier:identifier:isPairedSyncMessage:cloudEnabled:
sendPUDSettingsInDomain:keys:backupFile:allowedGroups:
sendProtobuf:toDestinations:priority:options:identifier:error:
sendResourceAtURL:metadata:toDestinations:priority:options:identifier:error:
sendSetting:keys:allowedSyncGroups:messageIdentifier:messageData:cloudEnabled:backupFile:
sendSettingsBackupInDomain:keys:container:isInitialSync:backupFile:
sendSettingsInDomain:keys:cloudEnabled:backupFile:allowedGroups:
sendUserDefaultMsg:forDomain:includedKeys:cloudEnabled:backupFile:
sentFileBackupMessage:forFileAtPath:
sentSettingsBackupMessage:forContainer:domain:keys:
sentSettingsSyncMessage:forDomain:keys:cloudEnabled:
serializeObject:error:
serializedObjectForKey:error:
server
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:sentBytes:totalBytes:
service:account:incomingData:fromID:context:
service:account:incomingMessage:fromID:context:
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:receivedGroupSessionParticipantDataUpdate:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantUpdate:context:
service:activeAccountsChanged:
service:connectedDevicesChanged:
service:devicesChanged:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:didSwitchActivePairedDevice:acknowledgementBlock:
service:linkedDevicesChanged:
service:nearbyDevicesChanged:
serviceAllowedTrafficClassifiersDidReset:
setActiveDevice:
setActiveDeviceID:
setActiveSyncSession:
setAllowedGroups:
setAlreadyExistingAssertion:
setAppGroupContainer:
setClasses:forSelector:argumentIndex:ofReply:
setContainer:
setContainerPath:
setCrashedDuringLastRun:
setCurrentlyUsedDomain:
setDatabase:
setDatabasePath:
setDb:
setDelegate:
setDelegate:queue:
setDeviceRegistry:
setDomain:
setDomainAccessor:
setDumper:
setExportedInterface:
setExportedObject:
setFeature:
setFileData:
setFileURL:
setFilesBackupDirectoryPath:
setFilesBackupMetadataIndexPath:
setGetFileBackupForMessageID:
setGetFileBackupWithNullMessageID:
setGetMessageTypeForMessageID:
setGetSettingsBackupForMessageID:
setGetSettingsBackupWithNullMessageID:
setGetSettingsSyncWithNullMessageID:
setGetStashedSettingSyncData:
setGlobalCacheDirectoryPath:
setHasChangesToWrite:
setHasCheckedInWithNanoRegistry:
setHasPerformedInitialSync:updateBuildVersion:withDevice:
setHasTimestamp:
setHasTwoWaySync:
setIdsService:
setIdsServiceSyncState:
setInterruptionHandler:
setInvalidationHandler:
setIsCloudEnabled:
setIsPerGizmoSetting:
setIsPrefix:
setKeyArrays:
setKeyPrefixArrays:
setKeys:
setKind:
setLaunchNotification:enabled:
setLaunchNotificationsEnabled:
setMcDebounceSource:
setMessageIDForFileBackup
setMessageIDForSettingBackup
setMessageIDForSettingSync
setMessageType:forMessageID:
setMessageTypeForMessageID
setMetadataIndex:
setMirrorableBBDomain:
setMirrorableDomain:
setMirrorableKey:
setNanoDomainAccessor:
setNotificationNames:
setNullMessageIDForFileBackup
setNullMessageIDForSettingBackup
setNullMessageIDForSettingSync
setObject:forKey:
setObject:forKeyedSubscript:
setPairedSyncCoordinatorFirstSync:
setPairedSyncCoordinatorRemainderSync:
setPairingDataStore:
setPath:
setPerGizmoCacheDirectoryPath:
setPermittedUserDefaults:
setProblematicOperationList:
setProtobufAction:forIncomingRequestsOfType:
setPurgeFileBackupTable:
setPurgeMessageTypeTable:
setPurgeSettingsBackupTable:
setPurgeSettingsSyncTable:
setPurgeTimer:
setRegistryChangedSemaphores:
setRemainingDataToSyncInBytes:
setRemoveMessageFromMessageTypeTable:
setServer:
setSetMessageIDForFileBackup:
setSetMessageIDForSettingBackup:
setSetMessageIDForSettingSync:
setSetMessageTypeForMessageID:
setSetNullMessageIDForFileBackup:
setSetNullMessageIDForSettingBackup:
setSetNullMessageIDForSettingSync:
setSetting:
setSettings:
setStashSettingsSyncData:
setSyncGroups:
setSyncProgressTracker:
setSyncTransaction:
setSyncedUserDefaults:
setTimestamp:
setTotalDataToSyncInBytes:
setTwoWaySync:
setType:
setUntrackFileBackupForMessageID:
setUntrackFileBackupMessage:
setUntrackSettingsBackupForMessageID:
setUntrackSettingsBackupMessage:
setUntrackSettingsSyncForMessageID:
setUntrackSettingsSyncMessage:
setUserDefaultsBackupDirectoryPath:
setUuid:
setValue:
setWithArray:
setWithObject:
setWorkQueue:
settings
sharedConnection
sharedInstance
shouldAllowSyncOfItemWithSyncGroups:allowedSyncGroups:
shouldRun
sizeSafeToLoadInMemory
sortedArrayUsingSelector:
startMonitoringPairingEventsWithQueue:
startPrefsSyncWithGroups:backupWriter:withCompletionHandler:
startedOperations
stashSettingsSyncData
stashSettingsSyncData:forDomain:key:isTwoWaySync:timestamp:
stringByAppendingFormat:
stringByAppendingString:
stringByStandardizingPath
stringForKey:
stringWithFormat:
stringWithUTF8String:
subdataWithRange:
substringWithRange:
superclass
supportsCapability:
supportsMigrationSync
supportsSecureCoding
syncCompletedWithError:withDevice:
syncCoordinator:beginSyncSession:
syncCoordinator:didInvalidateSyncSession:
syncCoordinatorDidChangeSyncRestriction:
syncCoordinatorDidReceiveStartSyncCommand:
syncDidCompleteSending
syncDidFailWithError:
syncGroups
syncProgressTracker
syncSessionProgressDictionary
syncedUserDefaults
synchronize
synchronizeForReading
synchronizeForWriting
synchronizeNanoDomain:keys:cloudEnabled:
synchronizeUserDefaultsDomain:keys:cloudEnabled:
synchronizeUserDefaultsDomain:keys:container:appGroupContainer:cloudEnabled:
systemBuildVersion
tempFilePath
timeIntervalSinceReferenceDate
timestamp
totalDataToSyncInBytes
twoWaySync
type
typeString
unarchiveObjectOfClasses:withData:
unarchiveObjectOfClasses:withFile:
unarchivedObjectOfClasses:fromData:error:
unionSet:
unserializeObject:error:
unsignedLongLongValue
untrackFileBackupForMessageID
untrackFileBackupMessage
untrackFileBackupMessageForFileAtPath:
untrackSettingsBackupForMessageID
untrackSettingsBackupMessage
untrackSettingsBackupMessageForContainer:domain:keys:
untrackSettingsSyncMessage
untrackSettingsSyncMessagesForDomain:keys:cloudEnabled:
updateCacheForDomain:keys:twoWaySyncTimestamp:isPerGizmo:
userSettings
userSettingsAndRestrictions
usingPrefsFromDomain:
uuid
value
valueForProperty:
waitForPairedOrPairingDevice
workQueue
writeBlob:
writeCache:toDiskForDomain:isPerGizmo:
writeData:
writeMessage:data:
writeTo:
writeToFile:options:error:
writeToURL:error:
xpcListener
zone
NPSUserDefaultsMsgKey
NSCopying
NPSManagedConfigurationMsg
NPSUserDefaultsBackupMsg
NPSKeyedArchiverUtil
PendingIDSProtobuf
NPSIDSBlackHole
IDSServiceDelegate
NSObject
NPSCompanionServerProtocol
NPSServerProtocol
NPSServer
PSYSyncCoordinatorDelegate
NSXPCListenerDelegate
NPSFileBackupMetadata
NSSecureCoding
NSCoding
NPSUserDefaultsMsg
Logger
NPSFileBackupMsg
NPSDatabase
NPSBlobReaderWriter
NPSBackupReaderWriter
NPProgressTracker
UserDefaultsKey
UserDefaultsDomain
PermittedUserDefaultsKey
PermittedUserDefaultsDomain
NPSSettings
NPSUserDefaultsBackupMsgKey
NPSDeviceRegistry
NPSOSLogStateProvider
NPSSettingAccessor
NPSFullBackupMsg
NPSFileBackupManager
@24@0:8^{_NSZone=}16
B16@0:8
v20@0:8B16
v24@0:8d16
@16@0:8
B24@0:8@16
v24@0:8@16
Q16@0:8
d16@0:8
v16@0:8
@"NSString"
@"NSData"
{?="timestamp"b1"twoWaySync"b1}
#16@0:8
@24@0:8Q16
@"NSMutableArray"
@32@0:8@16@24
@24@0:8@16
@48@0:8@16Q24@32@40
@"NSDate"
@"IDSProtobuf"
@"IDSDevice"
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v64@0:8@16@24@32@40@48@56
v40@0:8@16@24@32
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v32@0:8@16@24
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v40@0:8@16@24@?32
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32@"IDSMessageContext"40
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
v52@0:8@16@24@32@40B48
v52@0:8@"NSString"16@"NSSet"24@"NSString"32@"NSString"40B48
v36@0:8@16@24B32
v36@0:8@"NSString"16@"NSSet"24B32
B32@0:8@16@24
q16@0:8
v28@0:8@16B24
v32@0:8@"PSYSyncCoordinator"16@"PSYServiceSyncSession"24
v24@0:8@"PSYSyncCoordinator"16
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v24@0:8@?16
v32@0:8B16B20@24
v40@0:8@16Q24@32
v32@0:8@16Q24
v48@0:8@16@24@32^v40
@48@0:8@16i24@28^@36B44
@52@0:8@16i24@28^@36B44B48
B44@0:8@16@24B32@36
@28@0:8@16B24
B36@0:8@16@24B32
B28@0:8@16B24
v44@0:8@16@24@32B40
@36@0:8@16@24B32
@68@0:8@16@24@32^@40^@48B56@60
@52@0:8@16@24@32B40@44
v52@0:8@16@24B32@36@44
v24@0:8Q16
@"NPSFileBackupManager"
@"PSYSyncCoordinator"
@"PSYServiceSyncSession"
@"NSMutableDictionary"
@"NSObject<OS_os_transaction>"
@"NPProgressTracker"
@"NPSOSLogStateProvider"
@"NSObject<OS_dispatch_queue>"
@"NPSSettings"
@"NSXPCListener"
@"IDSService"
@"NPSDeviceRegistry"
@"NPSDatabase"
@"NSObject<OS_dispatch_source>"
@"NSDictionary"
@"NSUUID"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSURL"
{?="timestamp"b1}
B28@0:8i16@20
B32@0:8^i16@24
v32@0:8@16@?24
v52@0:8@16@24@32B40d44
i16@0:8
^{sqlite3=}16@0:8
v24@0:8^{sqlite3=}16
^{sqlite3_stmt=}16@0:8
v24@0:8^{sqlite3_stmt=}16
^{sqlite3=}
^{sqlite3_stmt=}
@"NSFileHandle"
v32@0:8Q16@24
B24@0:8@?16
@"NPSBlobReaderWriter"
@"NSSet"
@"NSMutableSet"
@40@0:8@16@24@32
@"NRDevice"
@"NPSDomainAccessor"
@"NRActiveDeviceAssertion"
@"NPSServer"
@40@0:8@16q24@?32
@32@0:8@16^@24
v24@0:8q16
Error (%@) reading data from (%@)
Error (%@) unarchiving expected classes (%@) with (%@) bytes data
Error (%@) archiving (%@)
Launching; "NanoPreferencesSyncDaemon_Sim-309" "2731"
Received notification: %s
Received managed configuration change notification
Received unexepectedly NULL notification
Received unexpected non-dictionary type event: (%@)
setHasPerformedInitialSync: Alt account device. Force set sync complete.
setHasPerformedInitialSync: Alt account device. Not paired, not forcing sync complete
setHasPerformedInitialSync: (%d, %d, %{public}@)
setHasPerformedInitialSync called but the active device isn't paired to a non-archived device.
setHasPerformedInitialSync: Paired device build version being updated from %@ to %@
setHasPerformedInitialSync: Local device build version being updated from %@ to %@
setHasPerformedInitialSync: LastActiveDate being updated from %llu -> %llu
setHasPerformedInitialSync: sendSetting failed.
Not doing check for initial sync, as this is alt account device.
setHasPerformedInitialSync: Posting notification %@ (NPSHasCompletedInitialSync)
syncCompletedWithError: Sync completed: error=%@
_completeActiveSyncSessionWithError: Reporting sync failure (%@) to sync session: (%@)
_completeActiveSyncSessionWithError:Reporting successful sync completion to sync session: (%@)
coordinator: (%@)
Asked to start syncing for sync session (%@) even though there already is an active sync session (%@)
total: (%llu), remaining: (%llu); initialSyncProgressDictionary: (%@)
strongSession: (%p); _activeSyncSession: (%p)
Did not complete syncing before timer expired; Sync Session: (%@); Pending Messages: (%@)
Active device changed: %snil -> %snil
startPrefsSyncWithGroups: %{public}@
Backup list before exclusions: %@ : %@
Excluding: %@
Backup list after exclusions: %@ : %@
Removed all keys from: %@
Excluding: %@ from backup, it's on the exclusion list
startPrefsSyncWithGroups: No data synced.
checkIfTinkerLastActiveDateChanged: LastActiveDate changed from %llu -> %llu Tinker watch switch detected
%s: - value: %@
%s: %@ doesn't exist in domain %@ cache is not valid
%s: setting all timestamps to now
%s: Unable to write to url: %@.  Error: %@
%s: can't open cache dir(%@), assuming there is nothing to update: %@
%s: Skipping Paired Device Version change check. Not paired.
%s: Detected first launch after pairing; Local build version: (%@)
%s: Detected local device update; Current build version: (%@); Previous: (%@)
%s: Doing new build tasks
%s: New build tasks completed
%s: lastRegisteredPairedDeviceBuildVersion: (%@); pairedDeviceBuildVersion: (%@)
%s: Doing a sync because of a build version change
%s: No build version change detected.
%s: Skipping Paired Device Version change check. Has not performed initial sync yet.
Using IDS service for sending sync state.
Successfully sent message with identifier: (%@)
Failed sending message with error: (%@)
Suspending IDS message processing
Resuming IDS message processing. Has %lu pending IDS messages to process.
Processing %@
%@ was originated from %@, not current active device %@; dropping.
Unsupported message type on non-watchOS, ignoring
service: (%@), account: (%@), identifier: (%@), success: (%d), error: (%@)
progress: (%f), total: (%llu), remaining: (%llu)
Message (%@) failed to be delivered with error: (%@)
Purge Timer fired!
Releasing transaction for ids-reset-timeout-transaction
messageID: (%@)
Failed re-sending settings backup for container (%@), domain (%@), keys (%@).
Failed re-sending file backup (%@) for identifier (%@)!
service: (%@); account: (%@); incomingResourceAtURL: (%@); metadata: (%@); fromID: (%@); context: (%@)
nil messageType. metadata: (%@)
Un-handled message type: (%@)
%{public}@
handleUserDefaultsMsg: %s idsProtobuf: (%p); outgoingResponseIdentifier: (%@)
Added %@ to pending IDS messages queue, size = %lu
Could not parse incoming data
Handling User Defaults message for domain: (%@);        hasTimestamp: (%d);        timestamp: (%f);        overwriteNewerTimestamps: (%s)
Domain (%@) not permitted; dropping incoming message
Handling key in domain: (%@)            key: (%@);            value: (%s);            hasTimestamp: (%d);            timestamp: (%f);            overwriteNewerTimestamps: (%s)
Using timestamp from user defaults message key (%f) for <Domain %@; key %@>.
Using timestamp from user defaults message (%f) for <Domain %@; key %@>.
Key (%@) in domain (%@) not permitted; dropping incoming message
Creating domain accessor (domain: %@, container: %@, appGroupContainer: %@)
Unable to create settings accessor for Key (%@) Domain (%@); dropping incoming message.
Received User Defaults value for <%@, %@>: (%@)
Discarding cached timestamp for <%@, %@> since it is set to the future; cached: (%f); current: (%f)
Updating timestamp for domain:%@ key:%@ to timestamp: %f
Discarding incoming setting for <%@, %@>, local value is more recent
Local expects <%@, %@> to be 2-way-synced, but remote doesn't
Skipping key (%@) since incoming value is un-changed                Current value: %@; incoming value: %@
Posting (%@) for domain (%@)
Handling Restore of User Defaults message for domain: (%@); hasTimestamp: (%d); timestamp: (%f)
Domain (%@) not synced; dropping incoming message
Key (%@) in domain (%@) not synced; dropping incoming message
Skipping key (%@) since incoming value is un-changed                        Current value: %@; incoming value: %@
Kind: (%@)
Feature: (%@); Value: (%@)
handleUserDefaultsBackupMsg: %s idsProtobuf: (%p); outgoingResponseIdentifier: (%@)
Handling User Defaults Backup message for container: (%@); domain: (%@)
Failed to unserialized domain backup (%@) with error: (%@)
Read pre-existing domain (%@) backup: (%@)
Received User Defaults Backup for <%@, %@>; Value: (%@)
Failed to serialize updated domain (%@) backup dictionary (%@) with error: (%@)
Failed to write updated domain (%@) backup at path (%@) with error: (%@)
Failed to delete backup for domain (%@) at path (%@) with error: (%@)
handleFileBackupMessage: %s idsProtobuf: (%p); outgoingResponseIdentifier: (%@)
Handling file backup message for path: (%@); Temporary URL: (%@)
listener: (%p); connection: (%p)
Connection invalidated: (%p)
Failed to resolve cache path for domain: (%@); isPerGizmo: (%d)
Reading cache for domain: (%@); isPerGizmo: (%d)
Failed to unserialized domain cache (%@) %@
Read cache: (%@)
Writing cache for domain: (%@); isPerGizmo: (%d)
Cache to be written: (%@)
Failed to serialize updated domain cache dictionary (%@) with error: (%@)
Failed to write updated domain cache (%@) with error: (%@)
Deleting cache for domain: (%@); isPerGizmo: (%d)
Cache for domain (%@) does not exist.
Failed to delete cache for domain: %@
Updating timestamp for <%@; %@> to %@
Could not list content of directory (%@)
Unexpectedly found directory (%@) within container (%@) backup
Restoring remote settings from backup at path (%@)
No remote settings backup directory (%@)
Restoring remote file (%@) stored locally at (%@); isInitialSync: (%d)
Failed to retrieve file size for file URL: (%@) with error: (%@); result: (%d)
Failed to send file resource (%@) for backup at (%@) with error: (%@)
Successfully sent file backup with identifier (%@)
Requested to create directory with nil path
Failed to create backup directory (%@) with error: (%@)
Failed to resolve backup path for domain: (%@) for container: (%@)
%s: keys: %@; syncGroups: %@
%s: Settings accessor not passed.
Key (%@) is not a String.
%s: Not allowed to sync items in this sync groups.
%s: Error serializing object for key %@. Error: %@
Remote backup for domain (%@) is empty; Deleting the associated .plist
Failed to unserialize domain (%@) backup (%@) for container (%@) with error: (%@)
Restoring <%@, %@> for container (%@) to (%@)
Failed to create binary data (domain: %@; key: %@) with error: (%@)
Reading cache for domain: (%@); key: (%@); isPerGizmo: (%{public}@)
Error reading the cache file (error: %@).
Sending user defaults message for <Domain: %@, Keys: %{public}lu>
Start sending settings in Domain: %{public}@ 
             Keys: %lu
             cloudEnabled: %{public}@
Not allowed to sync groups %{public}@. Skipping key %{public}@.
Sent <Domain: %{public}@; Key: %{public}@> as individual default sync message.
Skipping <%@; %@>.
<%{public}@>Domain size not safe to load in memory. Trying to send it once.
Failed to serialize value for <Domain: %{public}@; Key: %{public}@> (Error: %@)
No cached timestamp, and value is null. Not sending value for <Domain: %{public}@; Key: %{public}@>.
Message size reached max allowed size. Sending current default message.
[STATS] Completed sending settings in <Domain: %{public}@; Keys: %lul>.
Start sending permitted defaults in Domain: %{public}@ 
            Keys: %lu
 AllowedGroups: %@
Key: %@ not allowed, not syncing/backing up
Groups: %@, allowed groups: %@
Skipping <%@; %@>
<%{public}@>Domain size not safe to load in memory. Trying to load it once.
Handling message for domain (%@) key (%@) timestamp (%f)
Invalid debounce parameter
%s: Debouncer timed out- calling block
Releasing transaction for debounceOnWorkerQueueWithblock (timer fired)
Could not create dispatch source
Releasing transaction for debounceOnWorkerQueueWithblock (unable to create source)
Will force re-sync ManagedConfiguration state
Re-syncing MC since changes were detected since last sync. isInitialSync: (%d)
Skipping MC re-sync since no change detected since last sync. isInitialSync: (%d)
Skipping MC re-sync since Tinker watch
Sending MC user settings:
Sending MC restrictions:
File Backup manager did not have an entry for original file path (%@)
%s: domain: (%@); keys: (%@); container: (%@); appGroupContainer: (%@); cloudEnabled: (%d)
Domain (%@) should not be nil, and keys (%@) should not be nil or empty.
Container should not be nil when specifing an app group container (%@) for domain (%@) and keys (%@).
%s: domain: (%@); keys: (%@)
setLaunchNotification: %@ launch notification %@
SQL Error: (%d) %s
Error fetching schema version: %d (%s)
Error opening SQLite3 DB at (%@): (%d) %s
I/O error: ACCESS
I/O error: BLOCKED
I/O error: CHECKRESERVEDLOCK
I/O error: CLOSE
I/O error: DELETE
I/O error: DIR_CLOSE
I/O error: DIR_FSYNC
I/O error: FSTAT
I/O error: FSYNC
I/O error: LOCK
I/O error: NOMEM
I/O error: RDLOCK
I/O error: READ
I/O error: SEEK
I/O error: SHMLOCK
I/O error: SHMMAP
I/O error: SHMOPEN
I/O error: SHMSIZE
I/O error: SHORT_READ
I/O error: TRUNCATE
I/O error: UNLOCK
I/O error: WRITE
sqlite3_exec(%s) Error: (%d) %s
NPSBlobReaderWriter: initWithPathToCreateBlobFile error %@
NPSBlobReaderWriter: initWithPathToLoadBlobFile error %@
File length is not right- must have been a read or write error
File length is %ld bytes as expected
NPSBackupReaderWriter writing type %d length %u
NPSBackupReaderWriter reading type %d length %u
[Progress Tracker] Started tracking progress. (Crashed last time %@)
[Progress Tracker] Can start syncing (%{public}@)? %@
[Progress Tracker] Started %@
[Progress Tracker] Completed %@
[Progress Tracker] Stopped tracking progress.
[Progress Tracker] Requested to clear state.
[Progress Tracker] Adding %{public}@ to known problematic operation list.
[Progress Tracker] State from prefs %{public}@.                  Last domain being processed %{public}@.                  List of oversized domains %{public}@
%@ '%@': %@
%@ '%@':
Failed to list contents of %@: %@
Unable to read bundle: %@
Malformed bundle plist for bundle: %@. %@
Missing %@ or %@ entry for bundle: %@.
Key %@ mutually exclusive with keys %@ and %@ in bundle %@
Keys %@ and %@ must go together in bundle %@
Cannot overwrite existing container %@ with %@ for permittted <%@, %@> in bundle %@.
Cannot overwrite existing permitted <%@, %@> in bundle %@ with a different isPerGizmoSetting value.
Cannot overwrite existing container %@ with %@ for permitted <%@, %@> in bundle %@.
Action %@ not supported in bundle (%@).
Received notification: (%@)
Paired device changed from %{public}@ to %{public}@
Failed to create directory (%@) with error: (%@)
Dumping data for %{public}@ to sysdiagnose
Could not resolve containerPath for container (%@)
error while retrieving application record %@ with error %@
Container Path for container %@ is nil!
Could not resolve containerPath for container (%@), previous containerPath: (%@)
Container path changed from (%@) to (%@)
Synchronized user defaults domain (%@) for containerPath: (%@); ret: (%d).
Synchronized user defaults domain (%@); ret: (%d).
Synchronized nano-setting domain (%@); ret: (%d).
Read containerized user default <%@, %@> for containerPath: (%@); value: (%{public}@)
Read user default <%@, %@>; value: (%{public}@)
Read nano-setting <%@, %@>; value: (%{public}@)
Not safe to write value into domain %@ for key %@. (size %lld Bytes is beyond what we can handle)
Written containerized user default <%@, %@> for containerPath: (%@); value: (%@)
Written user default <%@, %@>; value: (%@)
Written nano-setting <%@, %@>; value: (%@)
Failed to serialized value (%@) with error: %@ 
Failed to unserialized data (%@) with error: %@
Logic error! Type %ld is not handled.
%s: Protection Class for %@ at path %@ is %d
Is user defaults domain %@ protected: %@
%s: fileURL: (%@); originalURL: (%@)
%s: Skipping, active device has changed
Error backuping file (%@), originalFileURL is nil
Failed to generate file backup destination path. File will not get backuped!
Failed to delete old file backup (%@) with error: (%@)
Failed to move file (%@) to (%@) with error: (%@)
Removing file (%@) from backup
Failed to remove file (%@) with error: (%@)
Failed to write index file (%@) with error: (%@)
Failed to delete to-be-empty index file (%@) with error: (%@)
softlink:r:path:/System/Library/PrivateFrameworks/NanoBackup.framework/NanoBackup
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.managedconfiguration.profiled-access</key>
<true/>
<key>com.apple.nano.nanoregistry.pairunpairobliterate</key>
<true/>
<key>com.apple.private.MobileContainerManager.allowed</key>
<true/>
<key>com.apple.private.MobileContainerManager.otherIdLookup</key>
<true/>
<key>com.apple.private.ids.messaging</key>
<array>
<string>com.apple.private.alloy.preferencessync</string>
<string>com.apple.private.alloy.preferencessync.pairedsync</string>
</array>
<key>com.apple.private.ids.messaging.urgent-priority</key>
<array>
<string>com.apple.private.alloy.preferencessync</string>
<string>com.apple.private.alloy.preferencessync.pairedsync</string>
</array>
<key>com.apple.private.ignore-preferences-size-limits</key>
<true/>
<key>com.apple.private.security.storage.AppDataContainers</key>
<true/>
<key>keychain-access-groups</key>
<array>
<string>apple</string>
<string>com.apple.certificates</string>
<string>com.apple.identities</string>
</array>
</dict>
</plist>
03.com.apple.managedconfiguration.profiled-access
050com.apple.nano.nanoregistry.pairunpairobliterate
050com.apple.private.MobileContainerManager.allowed
0;6com.apple.private.MobileContainerManager.otherIdLookup
com.apple.private.ids.messaging0]'com.apple.private.alloy.preferencessync2com.apple.private.alloy.preferencessync.pairedsync0
/com.apple.private.ids.messaging.urgent-priority0]'com.apple.private.alloy.preferencessync2com.apple.private.alloy.preferencessync.pairedsync050com.apple.private.ignore-preferences-size-limits
094com.apple.private.security.storage.AppDataContainers
keychain-access-groups05
apple
com.apple.certificates
com.apple.identities
