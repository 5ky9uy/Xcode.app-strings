init
dealloc
asSource
abPersonChangeId
addressBook
abGroupChangeId
count
countByEnumeratingWithState:objects:count:
changeId
itemChangeType
changedItem
cardDAVRecordItem
isContact
isGroup
isChangeHistoryTruncated
latestSequenceNumber
initWithAddressBook:
clearChangeHistoriesWithChangeIdContext:pushedActions:inContainer:changeTrackingID:
_addressBook
T^v,R,N,V_addressBook
arrayWithObjects:count:
initWithBackingAccountInfo:
accountTypeWithAccountTypeIdentifier:
setUpLocalDBHelper:
sharedMonitor
unmonitorAccount:
sharedGateKeeper
unregisterWaiterForDataclassLocks:
backingAccountInfo
identifier
parentAccount
dsidForAccount:
stringWithFormat:
description
appleIDForAccount:
familyDelegateAltDSID
accountDescription
publicDescription
initWithContactsFamilyDelegateAltDSID:familyDelegateACAccountID:
isEqualToString:
username
length
host
principalURL
absoluteString
hardCodedPrincipalPathForDSID:
hostOverride
accountProperties
objectForKeyedSubscript:
portOverride
integerValue
isValidating
wasUserInitiated
supportsAuthentication
isAuthenticated
aa_isSuspended
sharedKeychain
keychainAccessibilityType
canAccessCredentialsWithAccessibility:
additionalHeaderValues
mutableCopy
initWithCapacity:
grandSlamAppToken
setObject:forKeyedSubscript:
clientInfoHeader
aida_accountForiCloudAccount:
credentialForAccount:serviceID:
token
setHost:
port
setPort:
altDSIDForAccount:
shouldDoInitialAutodiscovery
shouldAutodiscoverAccountProperties
isEqualToAccount:
principalPath
useSSL
scheme
shouldFailAllTasks
user
noteHomeSetOnDifferentHost:
isDelegateAccount
databaseHelper
accountsType
setAccountsType:
.cxx_destruct
_databaseHelper
_accountsType
T@"ACAccountType",&,N,V_accountsType
initWithContactStore:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
handlerWithAddressBook:
handlerWithContactStore:
handleAction:forContainer:inAccount:withFolderURL:isInitialSync:arePartialResults:syncInfo:heldAsideGroups:
initWithAccount:
dictionary
setupCardDAVDelegateManager:
account
aa_isAccountClass:
initWithDelegateInfoProvider:accountID:databaseHelper:
useContactsFramework
contactStore
providerWithContactStore:
abDB
providerWithAddressBook:
dataSourceWithContactStore:
dataSourceWithAddressBook:
finalizerWithContactStore:
finalizerWithAddressBook:
setWasUserInitiated:
isWaitingForPassword
os_log_summary
discoverInitialPropertiesWithConsumer:
refreshFolderListRequireChangedFolders:isUserRequested:
setSyncWhenReachable:
_probeAndSyncWithBlock:
defaultCenter
_contactsDidChange
addObserver:selector:name:object:
isMonitoring
_validateAndSync:
removeObserver:name:object:
setShouldDoInitialAutodiscovery:
saveAccountProperties
domain
code
setIsWaitingForPassword:
handleValidationError:completion:
enabledForDADataclass:
setIsMonitoring:
observeReachabilityWithBlock:
_setUpABNotifications
sharedManager
registerDelegate:
stopObservingReachability
_tearDownABNotifications
taskManager
shutdown
unregisterDelegate:
setShouldUseOpportunisticSockets:
syncAddressBookURLsWithConsumer:
addressBooksByFolderURL
URLWithString:
addObject:
_appendSyncRequestsForFolders:remoteChanges:
addressBooks
_syncAllContactFoldersWithRemoteChanges:
removeObjectForKey:
_handlePotential503Error:
DA_isFailedDependencyError
homeURL
da_leastInfoStringRepresentationRelativeToParentURL:
changeTrackingID
abOpenDBWithClientIdentifier:
containerProvider
syncStoreIdentifier
containerWithExternalIdentifier:forAccountWithExternalIdentifier:
syncData
propertyListFromData:mutabilityOption:format:errorDescription:
dictionaryWithCapacity:
dataFromPropertyList:format:errorDescription:
setSyncData:
updateSaveRequest:
addSaveRequest:
executeAllSaveRequests
abCloseDBAndSave:
relinquishLocksForWaiter:dataclasses:moreComing:
delegateDidCompleteRefresh:
setLastRetryTimeout:
_fireWaitingFolderItemSyncRequests
updateMeCardWithWithConsumer:
actionsFinalizer
setBestMeCard
_updateMeCard
maxImageSizeFromSyncDict:
maxResourceSizeFromSyncDict:
cTag
contactsProvider
contactsInContainer:
isGuardianRestricted
isPrimaryICloudAccount
action
externalURL
externalUUID
initialActionsDataSource
generateActionsForContacts:databaseHelper:inFolderWithURL:blacklistedUUIDs:blacklistedURLs:maxImageSize:maxResourceSize:outTouchedDB:reportingBlock:
groupsProvider
groupsInContainer:
isAccountOwnerChildInFamilyCircle
actionsForGroups:isPrimaryAppleAccount:isU18Account:databaseHelper:inFolderWithURL:blacklistedUUIDs:blacklistedURLs:maxImageSize:maxResourceSize:containerIsRestricted:outTouchedDB:
finishInitialSyncOfContactsFolder:previousTag:uuidsToAddActions:hrefsToModDeleteActions:useCRUD:maxResources:maxSize:consumer:context:
_successfullyFinishedInitialSyncForFolderWithID:context:
removeAllObjects
prepareToGenerateInitialActionsWithContext:
_pushInitialSyncActionsForFolderWithURL:context:
allObjects
addObjectsFromArray:
array
contactsWithExternalUUIDs:container:
contactsWithExternalHREFs:container:
groupsWithExternalUUIDs:container:
groupsWithExternalHREFs:container:
initWithContacts:groups:
actionsHandler
abSaveDB
logSummaryForCardDAVActions:partialResults:initialSync:syncPhase:syncAccount:
countOfContacts
setStartedWithNoContacts:
startedWithNoContacts
setUuidToPersonCache:
abProcessAddedRecords
uuidToPersonCache
contactFromItem:
legacyIdentifier
numberWithInt:
setUUIDToPersonCache:
saveIfGroupWithLocalObject:toContainer:shouldMergeProperties:outMergeDidChooseLocalProperties:account:
setCTag:
syncTag
setSyncTag:
removeObject:
abProcessAddedImages
_finishInitialSyncForFolderWithURL:context:
_syncResultForFolderWithURL:newTag:newSyncToken:actions:changeIdContext:isInitialSync:arePartialResults:
userInfo
DAObjectForKeyCaseInsensitive:
doubleValue
watchedCollections
retryRefreshForDelegate:withCollections:after:originalRefreshReason:
lastRetryTimeout
_addressBookSyncTask:failedWithErrorCode:
folderURL
folder
folderID
sharedBabysitter
registerAccount:forOperationWithName:
delegateManager
updateDelegates
publicContainerProviderSummaryInfo
boolValue
setIsInitialUberSync:
actionsDataSource
prepareChangeHistoryForClientWithIdentifier:forContainer:withChangeContext:
changeHistoryIsValid
isInitialUberSync
actions
_copyCoalescedChangesInContainer:isPrimaryAppleAccount:isU18Account:databaseHelper:accountHomeURL:changeTrackingID:existingActions:maxImageSize:maxResourceSize:changeContext:outTouchedDB:
abDefaultAccountInfoSuitableForLogging
hasRemoteChanges
setHasRemoteChanges:
isResyncAfterConnectionFailed
synchronizeContactsFolder:previousTag:previousSyncToken:actions:highestIdContext:isInitialUberSync:isResyncAfterConnectionFailed:previousTagIsSuspect:moreLocalChangesAvailable:consumer:
unregisterAccount:forOperationWithName:
countOfGroups
transactionId
_reallySyncRequest:
registerWaiter:forDataclassLocks:completionHandler:
lock
copy
containsObject:
unlock
_syncRequest:
isEqual:
setActions:
initWithFolder:hasRemoteChanges:isInitialUberSync:
_appendSyncRequest:
hasPrefix:
pushTransport
uppercaseString
initWithString:
pushKeysToFolderURLs
allKeys
APSTopicHasValidPrefix:
registerTopic:forDelegate:inEnvironment:
unregisterTopic:forDelegate:inEnvironment:
accountID
scheduleIdentifier
onBehalfOfBundleIdentifier
password
_holdingDataClassLock_refreshPropertiesOfAllContactFoldersWithCompletion:
containerPropertiesToFetchDuringRefresh
error
applyRefreshedValuesFromPropFind:toContainer:
initWithPropertiesToFind:atURL:withDepth:
setCompletionBlock:
setAccountInfoProvider:
submitIndependentCoreDAVTask:
refreshPropertiesOfAllContactFoldersWithCompletion:
displayAccount
_cn_isPrimaryAccount
numberWithBool:
parentAccountForAccount:
aa_altDSID
familyCircle
isSuccess
value
members
altDSID
_cn_firstObjectPassingTest:
isDelegateChildFamilyMember:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
successfullyRetrievedAddressBookURLs
failedToRetrieveAddressBookURLsWithError:
actionFailed:forTask:error:
syncResultForContactsFolder:newTag:previousTag:newSyncToken:actions:results:changeIdContext:isInitialSync:moreAvailable:moreLocalChangesAvailable:pushedActions:
contactsFolderWithId:successfullyPushedActions:
waiterID
account:isValid:validationError:
refreshCollections:withReason:
getDAAccount
saveXpcActivity:
trustHandler
serverTokenRegistrationURL
interfaceWentUp
interfaceWentDown
fetchInterval
pushDisabled
T@"DATrustHandler",R,N
successfullyFinishedInitalUploadForFolderWithID:container:guardianRestrictedUUIDs:guardianRestrictedHREFs:blacklistedUUIDs:blacklistedHREFs:context:
failedToFinishInitialSync:error:
successfullyUpdatedServerMeCardWithURL:
failedToUpdateServerMeCardWithError:
T@"NSObject<OS_os_log>",R,N
startMonitoring
requestAgentStopMonitoringWithCompletionBlock:
syncFolderIDs:forDataclasses:isUserRequested:
_currentlySyncingFolderURLs
_outstandingFolderRequests
_folderItemSyncRequestLock
_isSyncingHierarchy
_folderURLToHeldAsideGroups
_serverTokenRegistrationURL
_containerPushKeys
_folderURLToSyncInfo
_bulkUploadUUIDBlacklist
_bulkUploadHREFBlacklist
_isPrimaryICloudAccount_cached
_isAccountOwnerChildInFamilyCircle_cached
_delegateManager
T@"CardDAVDelegateManager",R,N,V_delegateManager
exceptionWithName:reason:userInfo:
meContactInContainer:
_uuidToPersonCache
_startedWithNoContacts
T@"NSMutableDictionary",&,N,V_uuidToPersonCache
TB,N,V_startedWithNoContacts
setSearchTaskSet:
mapTableWithStrongToStrongObjects
setPushedActionsByTaskGroup:
clerkWithContactStore:
clerkWithAddressBook:
pushedActionsByTaskGroup
objectForKey:
setObject:forKey:
isForgivableError:
pushedActionsForTaskGroup:
backingAction
context
serverID
setLocalETag:forItemWithURL:inFolderWithURL:
initWithItemChangeType:changedItem:serverId:
currentImplementationClass
initWithURL:eTag:dataPayload:inContainerWithURL:withAccountInfoProvider:
_fillOutActionsArray:addedOrModified:removed:
consumerForTask:
previousCTag
isInitialSync
daActionsFromCDVActions:
contactsByExternalIdentifier
allValues
groupsByExternalIdentifier
removePushedActionsForTaskGroup:
setLastSyncDateForContainer:
removeConsumerForTask:
propertyName
setGuardianStateDirty:
externalIdentifier
eTag
firstObject
da_absoluteURLForChildLeastInfoRepresentationRelativeToParentURL:
setETag:
errorWithDomain:code:userInfo:
copyCDVActionFromDAAction:
initWithFolderURL:checkCTag:uuidsToAddActions:hrefsToModDeleteActions:context:accountInfoProvider:taskManager:
setMultiPutBatchMaxNumResources:
setMultiPutBatchMaxSize:
setDelegate:
setConsumer:forTask:
startTaskGroup
uuidToHREF
hrefToETag
hrefToStatus
setExternalIdentifier:
nextCTag
CDVIsHTTPStatusLineWithStatusCode:
enumerateKeysAndObjectsUsingBlock:
uuidToErrorItems
_shouldBlacklistForErrorItem:
guardianRestricted
extraChildItems
hrefToErrorItems
maxResourceSize
maxImageSize
invalidImageType
imageError
noUIDConflict
validAddressData
_updateMeTaskGroup:didFinishWithError:
_bulkUploadTaskGroup:didFinishWithError:
initWithAction:context:
serverId
initWithDAEditPropertyAction:
ignoresGuardianRestrictions
setIgnoresGuardianRestrictions:
setChangeContext:
changeContext
intValue
setChangeId:
copyDAActionFromCDVAction:
cdvActionsFromDAActions:
initWithFolderURL:previousCTag:previousSyncToken:actions:syncItemOrder:context:accountInfoProvider:taskManager:appSpecificDataItemClass:
setIsInitialSync:
setEnsureUpdatedCTag:
setMaxRetryOnUnexpectedSyncTokenChange:
accountProvider
fetchedAccountWithExternalIdentifier:
accountByCreatingAccountWithExternalIdentifier:
isSearchAddressBook
isAddressBook
isSharedAddressBook
containerTitle
lastPathComponent
prettyStringForDisplayName
_copyABAccount:
_typeOfDAVContainer:
addressBookConstraintsPlistPath
privileges
hasWriteContentPrivileges
hasWritePropertiesPrivileges
updateSyncDict:withDAVContainer:
createNewContainerWithType:name:externalIdentifier:constraintsPath:syncData:contentReadonly:propertiesReadonly:forAccount:
mergeAllRecordsIntoContainer:shouldInsertChangeHistoryRecords:
type
changeHistoryClerk
registerClientWithIdentifier:forContainer:
markForDeletion
abChangeTrackingID
unregisterClientWithIdentifier:forContainer:
setMPushKeysToFolderURLs:
setPushTransport:
containerURLs
pushTransports
meCardURL
pushKey
mPushKeysToFolderURLs
anyObject
allContainersForAccountWithExternalIdentifier:
constraintsPath
setConstraintsPath:
name
setName:
isSearchContainer
setType:
isContentReadonly
arePropertiesReadonly
setContentReadonly:
setArePropertiesReadonly:
isGuardianStateDirty
setGuardianRestricted:
bulkRequests
isEqualToDictionary:
_handleOrphanarium:toBeCreatedContainersByURL:
arrayWithCapacity:
newDAContainerForContainer:
_bestDefaultContainerFromCandidateContainers:
setDefaultContainer:withLocalDBHelper:onlyIfNotSet:
abValidateDefaultSource
_fillOutAddressBooksFromLocalDB
addressBookHomes
unionSet:
directoryGatewayURLs
initWithAccountInfoProvider:containerURLs:directoryGatewayURLs:taskManager:
initWithAccountInfoProvider:taskManager:
_reallySyncAddressBookURLsWithConsumer:
mAddressBooksByFolderURL
setMAddressBooksByFolderURL:
setMAddressBooks:
setMSearchAddressBooks:
mAddressBooks
mSearchAddressBooks
setFolderName:
setFolderID:
setDataclass:
searchString
maxResults
initWithSearchString:searchLimit:atURL:appSpecificDataItemClass:
setContext:
consumer
submitIndependentTask:
convertToDAContactSearchResultElement
searchQuery:returnedResults:
searchQuery:finishedWithError:
cancelTask:
discoveryTask:gotAccountInfo:error:
URLByDeletingLastPathComponent
cardURL
_updateStoredMeCardWithURL:
_copyCardFromMeIdentifierAndContainer:
asPerson
_serverMeCard:hasChangedInContainer:
stringValue
setMeContactIdentifier:
initWithAccountInfoProvider:taskManager:homeURL:cardURL:
sendMeCardEverywhere
_reallyUpdateMeCardWithWithConsumer:allowDistantUpdate:
contactsByFilteringOutContacts:withoutExternalIdentifier:
groupByFilteringOutGroups:withoutExternalIdentifier:
contactsByFilteringOutContacts:withoutExternalIUUID:
groupByFilteringOutGroups:withoutExternalUUID:
taskGroup:didFinishWithError:
copyLocalETagsForURLs:inFolderWithURL:
copyAllLocalURLsInFolderWithURL:
containerSyncTask:retrievedAddedOrModifiedActions:removed:
containerSyncTask:completedWithNewCTag:newSyncToken:addedOrModified:removed:error:
copyLocalETagsForURLToETagDict:inFolderWithURL:
syncPutTask:completedWithNewETag:parentTaskGroup:error:
syncPostTask:postedData:parentTaskGroup:error:
syncDeleteTask:parentTaskGroup:completedWithError:
syncBulkChangeTask:parentTaskGroup:completedWithError:
syncPropPatchTask:parsedResponses:parentTaskGroup:completedWithError:
syncPutTask:completedWithNewETag:error:
syncPostTask:data:error:
syncDeleteTask:error:
syncBulkChangeTask:error:
logRetryAfterEmptyResponseContainerSyncTask:retryCount:
logGaveUpAcceptedEmptyResponseContainerSyncTask:retryCount:
getAccountPropertiesTask:completedWithError:
containerInfoTask:completedWithContainers:error:
task:didFinishWithError:
containerQueryTask:completedWithFoundItems:limitReached:error:
containerQueryTask:completedWithFoundItems:error:
isTypeCardDAVSearchable:
_reallyPerformSearchQuery:
_reallyCancelSearchQuery:
_reallyCancelAllSearchQueries
_reallySearchQueriesRunning
setHomeURL:
setContactsByExternalIdentifier:
setGroupsByExternalIdentifier:
searchTaskSet
setMeCardURL:
meFolderURL
setMeFolderURL:
hasOutstandingABChanges
setHasOutstandingABChanges:
_hasOutstandingABChanges
_pushTransport
_homeURL
_mAddressBooksByFolderURL
_mAddressBooks
_mSearchAddressBooks
_contactsByExternalIdentifier
_groupsByExternalIdentifier
_mPushKeysToFolderURLs
_searchTaskSet
_meCardURL
_meFolderURL
_pushedActionsByTaskGroup
T@"NSMutableDictionary",&,N,V_mAddressBooksByFolderURL
T@"NSMutableSet",&,N,V_mAddressBooks
T@"NSMutableSet",&,N,V_mSearchAddressBooks
T@"NSMutableDictionary",&,N,V_contactsByExternalIdentifier
T@"NSMutableDictionary",&,N,V_groupsByExternalIdentifier
T@"NSMutableDictionary",&,N,V_mPushKeysToFolderURLs
T@"NSDictionary",&,N,V_pushTransport
T@"NSMutableSet",&,N,V_searchTaskSet
T@"NSURL",&,N,V_homeURL
T@"NSURL",&,N,V_meCardURL
T@"NSURL",&,N,V_meFolderURL
T@"NSMapTable",&,N,V_pushedActionsByTaskGroup
TB,N,V_hasOutstandingABChanges
T@"DAContactsProvider",R,N
T@"DAGroupsProvider",R,N
T@"DAContainerProvider",R,N
T@"DAContactsAccountProvider",R,N
T@"DAChangeHistoryClerk",R,N
T@"NSSet",R,N
T@"NSDictionary",R,N
propertyNamespace
initWithNameSpace:andName:
setWithObject:
setPayloadAsString:
initWithPropertiesToSet:andRemove:atURL:
copyPropPatchTask
_action
T@"DAEditPropertyAction",R,N,V_action
keyVector
initWithKeysToFetch:
predicateForContactsMatchingName:options:
setPredicate:
setUnifyResults:
predicateForContactsMatchingEmailAddress:
enumerateContactsWithFetchRequest:error:usingBlock:
setWithArray:
intersectSet:
setMeContact:error:
pickBestMeContactForGivenName:familyName:primaryEmail:
setContactStore:
_contactStore
T@"CNContactStore",&,N,V_contactStore
clearChangesForActions:inContainer:changeTrackingID:
cnChangeAnchor
clearChangesToAnchor:changeTrackingID:inContainer:
initWithClientIdentifier:
setToChangeAnchor:
asContainer
os_log
setContainerIdentifier:
executeChangeHistoryClearRequest:error:
setContactChangeIDs:
setGroupChangeIDs:
contactChangeIDs
person
isContainer
isAccount
setExternalUUID:
asContact
initWithABPerson:
_person
T^v,R,N,V_person
useThunderhillBetaServers
setChangeHistoryTruncated:
touchedDatabase
setTouchedDatabase:
setLatestSequenceNumber:
highestChangeID
setHighestChangeID:
_changeHistoryTruncated
_touchedDatabase
_highestChangeID
_latestSequenceNumber
_actions
changeHistoryTruncated
TB,N,GisChangeHistoryTruncated,V_changeHistoryTruncated
TB,N,V_touchedDatabase
TQ,N,V_latestSequenceNumber
T@"NSArray",&,N,V_actions
Ti,N,V_highestChangeID
initWithChangedItem:propertyName:value:propertyNamespace:serverId:
_copyABActionsOfType:inContainer:accountHomeURL:changeTrackingID:existingActions:maxImageSize:maxResourceSize:isPrimaryAppleAccount:
setAbPersonChangeId:
setAbGroupChangeId:
unsignedIntegerValue
_isValidRecordType:forDACardDAVRecord:
loadClientIDs
setLocalItem:
loadLocalItemWithAccount:
clientID
_addChangeForType:changedItemId:changeId:addedIdsToChangeId:modifiedIdsToChangeId:deletedIdsToChangeId:changeIdsToClear:
_fillOutExternalURLForRecordType:localId:changeType:inFolderWithURL:outNewExternalURL:outTouchedDB:
_fillOutExternalUUIDForRecordType:localId:changeType:outTouchedDB:
itemWithABRecord:addressBook:outNeedsDBSave:maxImageSize:maxResourceSize:inContainerWithURL:
da_newGUID
URLByAppendingPathComponent:
pickerWithContactStore:
pickerWithAddressBook:
_localRecordForExternalURL:inContainer:withFolderURL:
_copyExistingABRecordForContact:inStore:
createOrphanedABRecordFromParsedVCardOutRecordType:
initWithGroup:
moveToLocalStoreContacts:groups:
wrappedRecordFromRecord:
saveWithLocalObject:toContainer:containerURL:shouldMergeProperties:outMergeDidChooseLocalProperties:account:shouldSaveGroups:
deleteFromContainer:account:
contacts
groups
asABGroup
objectAtIndexedSubscript:
matchMode
testRecord
setMatchedRecord:
personPredicateWithGroup:source:account:
personPredicateWithValue:comparison:forProperty:
andPredicateWithSubpredicates:
searchPeopleWithPredicate:sortOrder:inAddressBook:withDelegate:
matchedRecord
personPredicateWithPhoneLike:countryHint:addressBook:
whitespaceCharacterSet
stringByTrimmingCharactersInSet:
predicateShouldContinue:
predicateShouldContinue:afterFindingRecord:
predicateShouldContinue:afterFindingRecord:metadata:
predicateShouldContinue:afterFindingRecord:moreComing:
predicateShouldContinue:afterFindingRecord:metadata:moreComing:
setMatchMode:
setTestRecord:
_matchMode
_testRecord
_matchedRecord
Ti,N,V_matchMode
T^v,N,V_testRecord
T^v,N,V_matchedRecord
initWithAction:externalUUID:externalURL:
_contacts
_groups
T@"NSArray",R,V_contacts
T@"NSArray",R,V_groups
changeHistoryResult
changesTruncated
extractContactActionsFromExistingActions:
extractGroupActionsFromExistingActions:
contactChanges
generateActionsFromContactChanges:databaseHelper:storeURL:maxImageSize:maxResourceSize:outTouchedDB:
groupChanges
generateActionsFromGroupChanges:databaseHelper:storeURL:maxImageSize:maxResourceSize:outTouchedDB:
coalesceExistingActions:withNewlyGeneratedActions:discardActionHandler:
arrayByAddingObjectsFromArray:
setIncludeGroupChanges:
setIncludeChangeIDs:
setIncludeExternalIDs:
setIncludeImagesChanged:
changeHistoryWithFetchRequest:error:
latestChangeAnchor
setCnChangeAnchor:
setChangeHistoryResult:
keysToFetch
contactIdentifier
predicateForContactsWithIdentifiers:
initWithContact:
itemForContactChange:
externalID
changeID
changeType
changeAnchor
itemWithDACardDAVRecord:contactStore:outNeedsDBSave:maxImageSize:maxResourceSize:inContainerWithURL:
initWithItemChangeType:changedItem:serverId:instanceId:
groupIdentifier
predicateForGroupsWithIdentifiers:
groupsMatchingPredicate:error:
itemForGroupChange:
instanceId
_changeHistoryResult
T@"CNContactStore",R,N,V_contactStore
T@"CNChangeHistoryResult",&,N,V_changeHistoryResult
setAddressBook:
T^v,N,V_addressBook
_kindForAction:
_nameForActionKind:
_externalUUID
_externalURL
T@"DAAction",R,N,V_action
T@"NSString",R,N,V_externalUUID
T@"NSURL",R,N,V_externalURL
collectDelegateInfoReturningError:
DAAccountPrincipalPath
existingChildAccountsWithProperty:
dsid
addChildWithDelegateInfo:
setPropertiesOnAccount:
saveAccount:
removeAccount:
_cn_map:
deleteOrphanDatabasesLackingRepresentationInDelegateInfos:
finishFutures:
removeDelegateDatabasesNotMatchingAltDSIDs:
sequence:
result:
accountStore
accountWithIdentifier:
delegateProvider
collectDelegatesForAccount:error:
childAccounts
accountPropertyForKey:
initWithAccountType:
setParentAccount:
setAuthenticationType:
_cn_canSaveAccount:
addFailureBlock:
addSuccessBlock:
_cn_saveVerifiedAccount:
flatMap:
_cn_removeAccount:
_delegateProvider
_accountID
_accountStore
T@"ACAccountStore",R,N,V_accountStore
T@"CardDAVLocalDBHelper",R,N,V_databaseHelper
T@"<CardDAVDelegateInfoProvider>",R,N,V_delegateProvider
T@"NSString",R,N,V_accountID
_setPropertiesFromParsedResponses:
successfulPropertiesToValues
CDVObjectForKeyWithNameSpace:andName:
hrefsAsFullURLs
CDVRawPath
query
fragment
initWithCDVScheme:user:password:host:port:path:query:fragment:
parameterString
initWithCDVScheme:user:password:host:port:path:parameterString:query:fragment:
setHostOverride:
setUseSSLOverride:
setPortOverride:
allContainers
isLocal
setAccountIdentifier:
markAsDefault
defaultSession
invalidateAndCancel
setDefaultSession:
setImageFetchTask:
reload
hostFromDataclassPropertiesForDataclass:
useSSLOverride
useSSLFromDataclassPropertiesForDataclass:
portFromDataclassPropertiesForDataclass:
dataclassProperties
saveVerifiedAccount:withCompletionHandler:
aa_updatePropertiesForAppleAccount:completion:
compressRequests
initWithObjectsAndKeys:
removeObjectAtIndex:
resetAccountID
fetchingImageDataRefCount
setFetchingImageDataRefCount:
CDVURLWithUser:
initWithURL:cachePolicy:timeoutInterval:
setUrlRequest:
urlRequest
_setProperty:forKey:
setValue:forHTTPHeaderField:
copyStorageSession
DARequestByApplyingStorageSession:
_setNonAppInitiated:
_sendRequest:
allHTTPHeaderFields
currentRunLoop
dateWithTimeIntervalSinceNow:
runMode:beforeDate:
setFetchedImageData:
setFetchImageError:
_assignConnectionProperties:toSessionConfiguration:
set_sourceApplicationSecondaryIdentifier:
set_sourceApplicationBundleIdentifier:
getAppleIDSession
defaultSessionConfiguration
set_appleIDContext:
setURLCache:
setDiscretionary:
customConnectionProperties
sessionWithConfiguration:delegate:delegateQueue:
dataTaskWithRequest:
imageFetchTask
resume
CDVAddItemParserMappingWithNameSpace:name:parseClass:
multiStatus
orderedResponses
payloadAsString
bestMePicker
aa_firstName
aa_lastName
aa_primaryEmail
protectionSpace
authenticationMethod
previousFailureCount
proposedCredential
_handleAuthenticationChallenge:completionHandler:
statusCode
currentRequest
fetchedImageData
appendData:
initWithIdentifier:
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:didCreateTask:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
setUseSSL:
shouldHandleHTTPCookiesForURL:
shouldSendClientInfoHeaderForURL:
shouldCompressRequests
_shouldWipeDataOnUpgradeFromAccountVersion:
copyImageContentsAtURL:outError:
fetchImageError
_defaultSessionWasUserRequested
_useSSLOverride
_fetchingImageDataRefCount
_defaultSession
_imageFetchTask
_hostOverride
_portOverride
_fetchedImageData
_fetchImageError
_urlRequest
Ti,N,V_fetchingImageDataRefCount
T@"NSMutableData",&,N,V_fetchedImageData
T@"NSError",&,N,V_fetchImageError
T@"NSMutableURLRequest",&,N,V_urlRequest
T@"DABestMeContactPicker",R,N
T@"NSURLSession",&,N,V_defaultSession
T@"NSURLSessionDataTask",&,N,V_imageFetchTask
T@"NSString",&,N,V_hostOverride
Ti,N,V_useSSLOverride
Tq,N,V_portOverride
localItemForExternalURL:forContainer:withStoreURL:
copyExistingContactForItem:inStore:
deleteFromContainer:
matchingContactForExternalID:
matchingGroupForExternalID:inContainer:
setSortOrder:
predicateForGroupsInContainerWithIdentifier:
predicateForContactsInContainerWithIdentifier:
meIdentifier
actionsForContacts:isPrimaryAppleAccount:isU18Account:databaseHelper:inFolderWithURL:blacklistedUUIDs:blacklistedURLs:maxImageSize:maxResourceSize:containerIsRestricted:outTouchedDB:
actionsForGroups:isPrimaryAppleAccount:isU18Account:inFolderWithURL:databaseHelper:blacklistedUUIDs:blacklistedURLs:maxImageSize:maxResourceSize:outTouchedDB:
mutableContact
iOSLegacyIdentifier
externalModificationTag
setExternalModificationTag:
setMarkedForDeletion:
markedForDeletion
deleteContact:
hasBeenPersisted
updateContact:
_markedForDeletion
_mutableContact
T@"CNMutableContact",R,N,V_mutableContact
TB,N,V_markedForDeletion
Clearing Person change index %d
Clearing Group change index %d
Malformed CardDAVVCardItem: %@
Change context reports this is an initial sync or changes otherwire truncated. Setting our change history cursor the change sequence when history was fetched: %d
Couldn't get a store or database to clear AddressBook changes
Clearing %@ changes in store %d to index %d
CardDAVDelegateiCloudDaemonAccount for %@ (%{public}@) does not have a familyDelegateAltDSID, failing setup!
Unable to determine principalPath for account "%@" (%{public}@)
Unable to determine host for account "%@" (%{public}@)
Unable to determine port for  %@ (%{public}@), falling back to 443
Checking auth status for account %@ (%{public}@)
Not attempting request for account %@ because the parent account credential isn't authed %{public}@
Not attempting request for account %{public}@ because the parent account needs to verify terms or is suspended. %{public}@
Not attempting request for account %{public}@ because we don't have access to keychain items with accessibility %d right now
Unable to obtain authentication account for account "%@" %@{public}
Home set is on a different host. Updating overrides for account "%@" (%{public}@)
Account "%@" (%{public}@) is waiting for a password, so we're going to ignore this refresh request
Account "%@" (%{public}@) thinks it should fail all tasks.  Doing so
Account "%@" (%{public}@) doesn't have a principal URL. Running autodiscovery.
Account "%@" (%{public}@) isn't reachable. Deferring sync.
Handling CNContactStoreDidChangeNotification for account "%@" (%{public}@); sync will occur
Account "%@" (%{public}@) was successfully autodiscovered, saving account settings
Got a password from the user. Attempting autodiscovery again for account "%@" (%{public}@)
Account "%@" (%{public}@) can't figure out its principalPath, and we couldn't get a password from the user 
We'll refresh if we find a better network connection.
reachability indicates that the network is reachable.  We're going to retry our folder sync with %{public}@.
Network is now reachable; sync will occur
DA just woke up; sync will occur with %{public}@.
The CardDAV agent was told to stop monitoring with %{public}@.
Account doesn't have a principal URL. Running autodiscovery.
Not syncing ab hierarchy, as I'm in the middle of doing that
Asked to sync folder with id %@, but I only know of these folders %@
DA retry machinations; sync will occur
Yikes: %s %@ error code:%ld error domain:%{public}@ error:%@
Initial sync failed, queue retry
Me-card sync failed, queue retry
Will avoid to block dataaccessd for too long during initial sync - slowing down pushes
Will avoid using too much memory during initial sync - slowing down pushes
Pushing %d people%s
started initial sync for %@ with no contacts - won't try to match people
Could not save local container
The server told us to try again after %f seconds.
The server returned a 503, but didn't give us a retry-after header. We'll retry again after %f seconds
We got another 503 error, but we've already backed off for 8 minutes. Giving up and retrying again at our regularly scheduled time
Daemon is ignoring task %@ which failed with status %ld and error %@
The babysitter put us in timeout, so we're going to fail this sync. %@
Syncing account "%@" (%{public}@) -- started
Syncing account "%@" (%{public}@) -- %{public}@
Agent %{public}@ asked to sync folder with id %@, but I have no matching container
My ctag of %@ is suspect, I'll get a new one
external change, folder %@
Treating request as an initial sync as our change history is invalid
This isn't an initial sync request, yet change history was truncated for our cursor. DA never expects truncation after initial sync and does not implement reconciliation. Truncation will be cleared at the conclusion of sync but this account is now in an inconsistent state with the address book database.
Blasting whitespace before first time sync
Blasted whitespace before first time sync
Default source %{public}@
Default source : <none>
%lu changes for account "%@" (%{public}@)
returning early, as we have a folder change with no remote changes, and no local changes
DATransaction starting, ID: %@
lock for %@ aborted
CardDAVAgent: locks granted for dataclasses %lx
%s: asked to sync folder request %@, but that has no server id.  Dropping this sync on the floor
Appending a sync request for folder %@
Got AB URLs from our daemon account, going to sync my folders
Yikes: %s error code:%ld error domain:%{public}@ error:%@
network unreachable during folder sync. Waiting for reachability to signal a retry.
refreshPropertiesOfAllContactFoldersWithCompletion: %@ failed to acquire data class lock, skipping container property update and aborting sync.
DA refresh machinations; sync will occur
Could find parent ACAccount of CardDAV Account %@
Could not determine altDSID for account %@. Returning assumption that account holder is not U18.
FamilyCircle lookup failed for account %@ with error: %@. Returning assumption that account holder is not U18.
Container sync task %@ completed with next cTag %@, next synctoken %@, add/modify count %lu, remove count %lu, error %@
Syncing account "%@" (%{public}@) -- sync completed with error: %@ %{public}@
Syncing account "%@" (%{public}@) -- sync complete
Our ab store went missing mid sync. Shenanigans!
Syncing account "%@" (%{public}@) -- server requested %lu etags, we matched %lu
Our ab store went missing mid sync.  Shenanigans!
Found a contact with full path %@, which I can't make into a URL relative to %@
Found a group with full path %@, which I can't make into a URL relative to %@
Syncing account "%@" (%{public}@) - server requested local urls, we provided %lu
The babysitter put us in timeout. Failing initial contacts sync. %@
Folder with id %@ supports bulk upload.  Using it
Asked to do a bulk upload to folder id %@, but it doesn't support it.  Failing
bulk upload task group %@ completed with error %@
Bulk upload finished, but I have no store for it!
For uuid %@, I have new href %@, but no local record
For href %@ with no uuid, I can't find my local record
For href %@, I have new etag %@, but no local record
For href %@, I have a 404, but no local record to de-href
Blacklisting UUID %{public}@ with error item:  %{public}@
Server rejected action for item with UUID %{public}@ because the target container is guardian restricted
An error item was returned for UUID  %{public}@ but we are not blacklisting the associated record. Error: %{public}@ child items: %{public}@
Blacklisting HREF %@ with error item: %@
Server rejected action for item with HREF %{public}@ because the target container is guardian restricted
An error item was returned for HREF %{public}@ but we are not blacklisting the associated record. Error: %{public}@ child items: %{public}@
Unacceptable DAAction %@.  Not handing it to CoreDAV
Unacceptable CoreDAVAction %@.  Not handing it to DA
The babysitter put us in timeout. Failing this sync. %@
Creating AB store for account %@
containerInfoTask for %@ completed with %lul containers, error: %{public}@ 
container info %@
Ignoring push transports from additional home set %@
Ignoring Me card from additional home set %@
Me card URL is %@
Container type from the server (%{public}ld) differs from our records (%{public}ld). Changing local type to (%{public}ld).
Unregistered container from change history because the server reports it to be a search node, yet we had categorized it as storage.
Registered container with change history because the server reports it as storage, yet we had categorized it as a search node.
The babysitter put us in timeout. Failing to sync AB URLs. %@
DEBUG: Filling in %lu containers for externalIdentifier: %{public}@
Got unexpected nil externalURL, skipping constructing a DAFolder for account with identifier: %{public}@, container with identifier: %{public}@, homeURL: %{public}@
Sending CardDAV search results back to consumer %@.
Query: %@
Results: %@
CardDAV search task %p was cancelled
The CardDAV search returned an error: (%@)
cancelling search query %@
Looking for Me card as seen on server. Folder URL: %@ - Me Card URL: %@
Server Me card %@ as seen on server not found locally
Server me card: %@ - stored one: %@
Updating known server me card to %@ in %@
Local me card: %@ - Distant me card: %@
No local me card, will use server provided one
Updating me card from server
Can't set me card from distant me card %@, identifier %d
Not updating distant me card, externalIdentifier would not change
Not updating distant me card, allowDistantUpdate is NO
Updating me card on server
Missing required container identifier
Change history not cleared: %@ error: %@
Change history not cleared: %@ error: %@ 
Unexpected error: no change history elements to clear.
A preset action for a sync request wanted a modify, but we have no server id.  Dropping the modify of %@
A preset action for a sync request didn't have an associated local event in the db action %@
A preset action for a sync request had change type %lu, which is unsupported.  Dropping that action
Looking at change with id %d type %d externalURL %@
Clearing change index %d
_addChange for type %lu, changedItemId %@ changeId %@ addedIds %@ modifiedIds %@ deletedIds %@, changeIdsToClear %@
Found a delete of a record with no external id.  Dropping this delete on the floor
adding %@
updating %@
saved %@, server id %@, clientID %@
Holding aside group with server id %@
Unexpected ABRecordType for item %@
Predicate %@ matched contact %@ with local id %d
Found a last chance matching using %@
Found no match for contact %@
Error: somebody has already set the latest sequence number for the contacts change context despite this being initial sync.
Not pushing person with uuid %@ href %@ because the server rejected it
Not pushing group with uuid %@ href %@ because the server rejected it
Syncing error; we should never be generating new DAActions with a nil change history
Syncing error; we should never be generating new DAActions with a invalid change history
discarding existing CONTACT DAAction of type: %ld change: %d
Unexpected result when clearing change %@ error %@
discarding existing GROUP DAAction of type: %ld change: %d
Unexpected error fetching change history for %@ (error: %@)
Odd, fetching change history for %@ resulted in truncated changes.  This should be very rare.
Local contact changes: %lu for %@
Local group changes:  %lu for %@
Unexpected nil change history; call fetchChangeHistoryForClientWithIdentifier before calling this
Unable to sync contact delete %@; externalID from tombstone nil
generating DAItemChangeTypeAdd action for CONTACT CNChangeHistoryChangeTypeAdd with identifier: %@ anchored at: %@ in container: %@ 
generating DAItemChangeTypeModify action for CONTACT CNChangeHistoryChangeTypeUpdate with identifier: %@ anchored at: %@ in container: %@ 
generating DAItemChangeTypeDelete action for CONTACT CNChangeHistoryChangeTypeDelete with identifier: %ld anchored at: %@ in container: %@ 
encourtered unsupported CONTACT CNChangeHistoryChangeType %ld
Unexpected error looking up changed group for %@; error %@
generating DAItemChangeTypeAdd action for GROUP CNChangeHistoryChangeTypeAdd with identifier: %ld anchored at: %@ in container: %@ 
generating DAItemChangeTypeModify action for GROUP CNChangeHistoryChangeTypeUpdate with identifier: %ld anchored at: %@ in container: %@ 
generating DAItemChangeTypeDelete action for GROUP CNChangeHistoryChangeTypeDelete with identifier: %ld anchored at: %@ in container: %@ 
encountered unsupported GROUP CNChangeHistoryChangeType %ld
Syncing account "%@" (%{public}@) -- no actions%{public}@
Syncing account "%@" (%{public}@) -- unexpected action %@
Syncing account "%@" (%{public}@) -- %{public}@ actions (add:%lu mod:%lu del:%lu)%{public}@
unexpected issue classifying action %@
Skipping delegate state update (including account account adds/removes) because we got an error fetching delegates from Family Circle. error:  %@
Unexpected condition updating deletes - no principal path for delegateInfo: %{public}@ %@
Delegate with account ID %@ cannot be saved, error %{public}@
Delegate with account ID %@ can be saved
Delegate with account ID %@ save failed, error %{public}@
Delegate with account ID %@ saved
Delegate with account ID %@ failed to be removed, error %{public}@
Delegate with account ID %@ was successfully removed
Moving along the migration of local store into a CardDAV cocoon
Home set is on a different host. Fetching new AppleAccount properties
Updated account properties are %@
Backing parent AppleAccount was %@saved successfully.
Error fetching AppleAccount properties: %@
Finishing migration of store with id %@ into a pretty CardDAV butterfly
Image URL %@ is invalid for fetching an image
Copying image from URL %@ is aborted because another fetch is in progress
Copying image from URL %@ is starting. Set fetchingImageDataRefCount to 1.
Fetching image at %@ with header fields %@
Could not get photo data from url %@.  Error %@
Fetched image at %@, data at %p
Connection property: %@ is not set
CardDAV NSURLSession Convert: session %p created dataTask %p for %@ %p
CardDAV NSURLSession Convert: could not create dataTask for %@ %p
CardDAV NSURLSession Convert: session %p didBecomeInvalidWithError for %@ %p
CardDAV NSURLSession Convert: session %p didReceiveChallenge for %@ %p
CardDAV NSURLSession Convert: session %p dataTask %p didReceiveChallenge for %@ %p
CardDAV NSURLSession Convert: session %p dataTask %p didCompleteWithError %@ for %@ %p
Completed copying image. Decrement fetchingImageDataRefCount to %d.
Fail to copy image. Decrement fetchingImageDataRefCount to %d.
CardDAV NSURLSession Convert: session %p dataTask %p didReceiveResponse %@ for %@ %p
The server blocked our image data fetch.  Request %@.  Response status code %d
CardDAV NSURLSession Convert: session %p dataTask %p didReceiveData for %@ %p
Adding fetched image data to %p
CardDAV NSURLSession Convert: session %p dataTask %p willCacheResponse for %@ %p
_CardDAVActionsABLegacyFinalizer
CardDAVDelegateiCloudDaemonAccount
CardDAVActionsHandler
CardDAVAgent
CardDAVAddressBookURLsConsumer
NSObject
DAContactsUpdateConsumer
DAActionConsumer
DADataclassLockWatcher
DAValidityCheckConsumer
DARefreshManagerDelegate
CardDAVFinishInitialSyncConsumer
CardDAVMeCardUpdateConsumer
DABabysittable
DAContactsProvider
CardDAVSyncInfo
CardDAVDaemonAccount
CoreDAVLocalDBInfoProvider
CoreDAVTaskGroupDelegate
CoreDAVGetAccountPropertiesTaskGroupDelegate
CoreDAVContainerInfoTaskGroupDelegate
CoreDAVContainerQueryTaskDelegate
CoreDAVTaskDelegate
DAEditPropertyActionAdapter
CoreDAVModifiedContainer
_DABestMeContactContactsPicker
_CardDAVActionsContactsFinalizer
CardDAVActionsDataSource
DAABLegacyContact
DAContact
DACardDAVRecord
_DABestMeContactABLegacyPicker
CardDAVFacebookDaemonAccount
ABLegacyActionsResult
_CardDAVActionsABLegacyDataSource
DABestMeContactPicker
_CardDAVActionsABLegacyHandler
ABPredicateDelegate
_CardDAVInitialActionsABLegacyDataSource
ABMoveLocalAction
DAGroupsProvider
_CardDAVActionsContactsDataSource
_DAABLegacyGroupsProvider
_DAABLegacyContactsProvider
CardDAVActionsLogger
CardDAVActionsFinalizer
DACardDAVActionResult
CardDAVInitialActionsDataSource
CardDAVDelegateManager
CardDAViCloudGetAccountPropertiesTaskGroup
CardDAViCloudDaemonAccount
NSURLSessionDelegate
NSURLSessionTaskDelegate
NSURLSessionDataDelegate
_CardDAVActionsContactsHandler
_DAContactsGroupsProvider
_DAContactsContactsProvider
_CardDAVInitialActionsContactsDataSource
DAContactsContact
@24@0:8^v16
v16@0:8
B48@0:8@16@24@32@40
^v16@0:8
@24@0:8@16
@16@0:8
B16@0:8
B24@0:8@16
q16@0:8
v24@0:8@16
@"CardDAVLocalDBHelper"
@"ACAccountType"
B72@0:8@16@24@32@40B48B52@56@64
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@"NSError"16
v40@0:8q16@24@32
v40@0:8q16@24@"NSError"32
v92@0:8@16@24@32@40@48@56@64B72B76B80@84
v32@0:8@16@24
v92@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@"NSArray"48@"NSArray"56@"ContactFolderItemsSyncContext"64B72B76B80@"NSArray"84
v32@0:8@"NSString"16@"NSArray"24
v36@0:8@16B24@28
v36@0:8@"DAAccount"16B24@"NSError"28
v28@0:8@16i24
v28@0:8@"NSSet"16i24
@"NSSet"16@0:8
@"DAAccount"16@0:8
v24@0:8@"NSObject<OS_xpc_object>"16
@"DATrustHandler"16@0:8
@"NSURL"16@0:8
v72@0:8@16@24@32@40@48@56@64
v72@0:8@"NSString"16@"<DAContainer>"24@"NSSet"32@"NSSet"40@"NSSet"48@"NSSet"56@"ContactFolderItemsSyncContext"64
v32@0:8@"NSString"16@"NSError"24
v24@0:8@"NSURL"16
v20@0:8B16
v24@0:8@?16
v24@0:8B16B20
v36@0:8@16q24B32
B64@0:8@16@24@32@40@48B56B60
v32@0:8@16q24
v28@0:8@16B24
@"NSMutableSet"
@"NSMutableArray"
@"NSLock"
@"NSMutableDictionary"
@"NSURL"
@"NSNumber"
@"CardDAVDelegateManager"
@32@0:8@16@24
v32@0:8@"CoreDAVTaskGroup"16@"NSError"24
v40@0:8@16@24@32
v64@0:8@16@24@32@40@48@56
B40@0:8@16@24@32
B32@0:8@16@24
v32@0:8@16Q24
@"NSDictionary"32@0:8@"NSArray"16@"NSURL"24
@"NSSet"24@0:8@"NSURL"16
v40@0:8@"CoreDAVContainerSyncTaskGroup"16@"NSSet"24@"NSSet"32
v64@0:8@"CoreDAVContainerSyncTaskGroup"16@"NSString"24@"NSString"32@"NSSet"40@"NSSet"48@"NSError"56
@"NSDictionary"32@0:8@"NSDictionary"16@"NSURL"24
B40@0:8@"NSString"16@"NSURL"24@"NSURL"32
B48@0:8@"CoreDAVPutTask"16@"NSString"24@"CoreDAVContainerSyncTaskGroup"32@"NSError"40
B48@0:8@"CoreDAVPostTask"16@"NSData"24@"CoreDAVContainerSyncTaskGroup"32@"NSError"40
B40@0:8@"CoreDAVDeleteTask"16@"CoreDAVContainerSyncTaskGroup"24@"NSError"32
B40@0:8@"CoreDAVBulkChangeTask"16@"CoreDAVContainerSyncTaskGroup"24@"NSError"32
B48@0:8@"CoreDAVPropPatchTask"16@"NSArray"24@"CoreDAVContainerSyncTaskGroup"32@"NSError"40
B40@0:8@"CoreDAVPutTask"16@"NSString"24@"NSError"32
B40@0:8@"CoreDAVPostTask"16@"NSData"24@"NSError"32
B32@0:8@"CoreDAVDeleteTask"16@"NSError"24
B32@0:8@"CoreDAVBulkChangeTask"16@"NSError"24
v32@0:8@"CoreDAVContainerSyncTaskGroup"16Q24
v32@0:8@"CoreDAVGetAccountPropertiesTaskGroup"16@"NSError"24
v40@0:8@"CoreDAVContainerInfoTaskGroup"16@"NSSet"24@"NSError"32
v32@0:8@"CoreDAVTask"16@"NSError"24
v44@0:8@16@24B32@36
v44@0:8@"CoreDAVContainerQueryTask"16@"NSSet"24B32@"NSError"36
v40@0:8@"CoreDAVContainerQueryTask"16@"NSSet"24@"NSError"32
B84@0:8@16@24@32@40B48q52q60@68@76
v80@0:8@16@24@32@40@48B56B60B64B68@72
@20@0:8B16
i24@0:8@16
B20@0:8i16
@24@0:8^@16
B28@0:8@16B24
@"NSDictionary"
@"NSMapTable"
@"CoreDAVPropPatchTask"16@0:8
@"DAEditPropertyAction"
@"CNContactStore"
@96@0:8@16B24B28@32@40@48@56q64q72@80^B88
v24@0:8@"CNSaveRequest"16
i16@0:8
v24@0:8@"NSString"16
@"CNMutableContact"16@0:8
v24@0:8Q16
v20@0:8i16
@"NSArray"
B28@0:8I16@20
@72@0:8I16^v20@28@36@44q52q60B68
v72@0:8Q16@24@32@40@48@56@64
B40@0:8I16i20Q24^B32
B56@0:8I16i20Q24@32^@40^B48
B32@0:8@16^v24
B40@0:8@16^v24@32
B36@0:8@16^v24B32
B44@0:8@16^v24@32B40
B24@0:8@"NSPredicate"16
B32@0:8@"NSPredicate"16^v24
B40@0:8@"NSPredicate"16^v24@"NSDictionary"32
B36@0:8@"NSPredicate"16^v24B32
B44@0:8@"NSPredicate"16^v24@"NSDictionary"32B40
^v40@0:8@16^v24@32
^v32@0:8@16^v24
v24@0:8^v16
v88@0:8@16@24@32@40@48q56q64^B72@?80
@92@0:8@16B24B28@32@40@48@56q64q72B80^B84
@64@0:8@16@24@32q40q48^B56
@40@0:8@16@24@?32
@"CNChangeHistoryResult"
v48@0:8@16B24B28@32@40
@24@0:8Q16
Q24@0:8@16
@40@0:8@16@24@32
@"DAAction"
@"NSString"
@"<CardDAVDelegateInfoProvider>"
@"ACAccountStore"
v40@0:8@16@24@?32
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
v24@0:8q16
@32@0:8@16^@24
v32@0:8@16@?24
@"NSURLSession"
@"NSURLSessionDataTask"
@"NSMutableData"
@"NSError"
@"NSMutableURLRequest"
@88@0:8@16B24B28@32@40@48@56q64q72^B80
@"CNMutableContact"
^{__CFDictionary=}24@?0^v8^v16
Person
Group
CardDAVDelegateiCloudDaemonAccount %p: accountID: %@ parentAccount: %@ dsid: %@
%@ %@
https
X-APPLE-FAMILY-AUTH-TOKEN
X-MMe-Client-Info
com.apple.gs.icloud.family.auth
CardDAVActionsHandler.m
Subclasses implement
v8@?0
com.apple.dataaccess
summary
v12@?0B8
v24@?0q8@"NSError"16
CTagIsSuspect
NeedInitialSync
CardDAVAgent.m
Actions data source called us after we told it to stop. Is it ignoring the block return value?
B24@?0@"<DAContact>"8@"DACardDAVActionResult"16
 (pushed all)
BulkRequests
in server results phase
retry-after
CardDAVSyncRequest
<summary unavailable>
contacts: %lu, groups: %lu
v20@?0q8B16
-[CardDAVAgent _fireWaitingFolderItemSyncRequests]
Attempted to queue a sync request for a folder with no folder id: %@
com.me.
com.apple.contact.
com.icloud.
APSD
PRODUCTION
production
SANDBOX
DEVELOPMENT
development
demo
v32@?0@"DAFolder"8@"CoreDAVPropFindTask"16@"<DAContainer>"24
v16@?0B8B12
@"NSNumber"8@?0
@8@?0
B16@?0@"FAFamilyMember"8
contactsInContainer: is abstract
meContactInContainer: is abstract
contactFromItem: is abstract
contactsWithHREFs: is abstract
contactsWithExternalUUIDs: is abstract
countOfContacts: is abstract
countOfGroups: is abstract
CardDAVSync
CardDAVInitialUpload
v24@?0@"NSString"8@"NSURL"16
v32@?0@"NSURL"8@"NSString"16^B24
v32@?0@"NSString"8@"CoreDAVErrorItem"16^B24
v32@?0@"NSURL"8@"CoreDAVErrorItem"16^B24
from local contact store
CardDAV
CardDAVSyncABURLS
CardDAVValidityCheck
v24@?0@"CNContact"8^B16
CardDAV-actionsfinalizer
CardDAVActionsDataSource.m
DAABLegacyContact cannot update CNSaveRequest
DAABLegacyContact cannot return a CNContact
webdav.beta.facebook.com
true
false
%@.vcf
pickBestMeContactForGivenName
v12@?0i8
groupsInContainer: is abstract
groupsWithExternalHREFs: is abstract
groupsWithExternalUUIDs: is abstract
CardDAV-actions
v16@?0@"DAAction"8
Yup, busted for %@
%@%@ %@
(partial)
(initial)
unclassifable
undetermined
contact
group
CardDAVActionsFinalizer.m
prepareToGenerateInitialActionsWithContext: is abstract
actionsForContacts: is abstract
actionsForGroups: is abstract
@"CNFuture"16@?0@"ACAccount"8
@16@?0@"CardDAVDelegateInfo"8
parent
v16@?0@"NSError"8
v16@?0@8
@"CNFuture"16@?0@"NSNumber"8
CardDAVAccountPrincipalURL
v20@?0B8@"NSError"12
NOT 
com.apple.mobilesync
v32@?0@"NSString"8@"NSString"16^B24
CardDAVImageFetch
CardDAViCloudDaemonAccount
CardDAV-actionshandler
CardDAV-actions-initial
DAContactsContact cannot return an ABRecordRef
stringByTrimmingCharactersInSet:
countByEnumeratingWithState:objects:count:
abOpenDBWithClientIdentifier:
useThunderhillBetaServers
setLastSyncDateForContainer:
initWithPropertiesToSet:andRemove:atURL:
initWithCDVScheme:user:password:host:port:path:parameterString:query:fragment:
isEqualToDictionary:
dataclassProperties
propertyName
personPredicateWithValue:comparison:forProperty:
type
markAsDefault
allKeys
allHTTPHeaderFields
registerWaiter:forDataclassLocks:completionHandler:
itemWithABRecord:addressBook:outNeedsDBSave:maxImageSize:maxResourceSize:inContainerWithURL:
groupIdentifier
backingAction
familyCircle
statusCode
setLastRetryTimeout:
changesTruncated
stopObservingReachability
abGroupChangeId
count
copyStorageSession
initWithPropertiesToFind:atURL:withDepth:
initWithObjectsAndKeys:
transactionId
contactIdentifier
propertyListFromData:mutabilityOption:format:errorDescription:
name
groupChanges
personPredicateWithPhoneLike:countryHint:addressBook:
useSSLFromDataclassPropertiesForDataclass:
registerTopic:forDelegate:inEnvironment:
dsidForAccount:
dsid
abDefaultAccountInfoSuitableForLogging
authenticationMethod
URLWithString:
setPayloadAsString:
setIsWaitingForPassword:
backingAccountInfo
privileges
setChangeContext:
dataTaskWithRequest:
allContainersForAccountWithExternalIdentifier:
mapTableWithStrongToStrongObjects
setExternalModificationTag:
changedItem
isDelegateChildFamilyMember:
setParentAccount:
personPredicateWithGroup:source:account:
saveWithLocalObject:toContainer:containerURL:shouldMergeProperties:outMergeDidChooseLocalProperties:account:shouldSaveGroups:
changeType
registerDelegate:
mutableCopy
URLByDeletingLastPathComponent
CDVAddItemParserMappingWithNameSpace:name:parseClass:
initWithNameSpace:andName:
saveVerifiedAccount:withCompletionHandler:
_setProperty:forKey:
setIsMonitoring:
abDB
URLByAppendingPathComponent:
allContainers
setCTag:
contactChanges
principalURL
token
setUnifyResults:
accountWithIdentifier:
hasWritePropertiesPrivileges
multiStatus
initWithAction:context:
registerClientWithIdentifier:forContainer:
doubleValue
useContactsFramework
startTaskGroup
_setNonAppInitiated:
initWithKeysToFetch:
payloadAsString
setIsInitialUberSync:
abCloseDBAndSave:
asSource
itemChangeType
initWithAccountType:
contactChangeIDs
previousFailureCount
changeTrackingID
isContentReadonly
setObject:forKeyedSubscript:
hasWriteContentPrivileges
setAuthenticationType:
setURLCache:
registerAccount:forOperationWithName:
abChangeTrackingID
initWithItemChangeType:changedItem:serverId:instanceId:
setUUIDToPersonCache:
domain
aida_accountForiCloudAccount:
setIsInitialSync:
DARequestByApplyingStorageSession:
saveIfGroupWithLocalObject:toContainer:shouldMergeProperties:outMergeDidChooseLocalProperties:account:
DA_isFailedDependencyError
isWaitingForPassword
aa_updatePropertiesForAppleAccount:completion:
setObject:forKey:
setEnsureUpdatedCTag:
setIncludeImagesChanged:
changeId
taskManager
accountTypeWithAccountTypeIdentifier:
consumerForTask:
changeID
displayAccount
asContainer
hasRemoteChanges
initWithAccountInfoProvider:taskManager:homeURL:cardURL:
consumer
aa_primaryEmail
copy
setName:
setType:
saveAccountProperties
isValidating
setArePropertiesReadonly:
mergeAllRecordsIntoContainer:shouldInsertChangeHistoryRecords:
previousCTag
initWithIdentifier:
setIncludeGroupChanges:
dataFromPropertyList:format:errorDescription:
uppercaseString
changeHistoryWithFetchRequest:error:
asABGroup
hasPrefix:
hasBeenPersisted
convertToDAContactSearchResultElement
da_newGUID
initWithAccountInfoProvider:taskManager:
setDiscretionary:
extraChildItems
aa_lastName
parentAccountForAccount:
prettyStringForDisplayName
query
isSuccess
DAObjectForKeyCaseInsensitive:
runMode:beforeDate:
setMultiPutBatchMaxSize:
fragment
DAAccountPrincipalPath
syncTag
addressBookHomes
accountPropertyForKey:
setIncludeExternalIDs:
directoryGatewayURLs
meIdentifier
constraintsPath
initWithAccountInfoProvider:containerURLs:directoryGatewayURLs:taskManager:
updateSyncDict:withDAVContainer:
members
isAuthenticated
isSharedAddressBook
compressRequests
initWithGroup:
context
setToChangeAnchor:
arrayWithObjects:count:
parentAccount
sharedMonitor
setMultiPutBatchMaxNumResources:
parameterString
isAddressBook
setAccountInfoProvider:
lock
addressBookConstraintsPlistPath
setIncludeChangeIDs:
da_leastInfoStringRepresentationRelativeToParentURL:
syncStoreIdentifier
setDelegate:
setAccountIdentifier:
isSearchContainer
arrayWithCapacity:
setMeContactIdentifier:
dictionaryWithCapacity:
hardCodedPrincipalPathForDSID:
containsObject:
collectDelegatesForAccount:error:
externalModificationTag
retryRefreshForDelegate:withCollections:after:originalRefreshReason:
initWithFolderURL:previousCTag:previousSyncToken:actions:syncItemOrder:context:accountInfoProvider:taskManager:appSpecificDataItemClass:
CDVURLWithUser:
sharedManager
aa_isSuspended
da_absoluteURLForChildLeastInfoRepresentationRelativeToParentURL:
resume
_cn_saveVerifiedAccount:
folderURL
accountProperties
predicateForGroupsWithIdentifiers:
arrayByAddingObjectsFromArray:
loadLocalItemWithAccount:
dictionary
setSyncWhenReachable:
invalidateAndCancel
setAbPersonChangeId:
isSearchAddressBook
aa_firstName
containerWithExternalIdentifier:forAccountWithExternalIdentifier:
setMeContact:error:
aa_isAccountClass:
sharedKeychain
pushTransports
initWithFolderURL:checkCTag:uuidsToAddActions:hrefsToModDeleteActions:context:accountInfoProvider:taskManager:
predicateForGroupsInContainerWithIdentifier:
result:
folderID
syncData
setDefaultContainer:withLocalDBHelper:onlyIfNotSet:
customConnectionProperties
whitespaceCharacterSet
updateContact:
_cn_removeAccount:
setSyncTag:
containerURLs
addSuccessBlock:
loadClientIDs
setIgnoresGuardianRestrictions:
orderedResponses
setAbGroupChangeId:
isResyncAfterConnectionFailed
currentRunLoop
array
sharedGateKeeper
initWithFolder:hasRemoteChanges:isInitialUberSync:
maxResults
folder
CDVRawPath
setDataclass:
externalID
setMaxRetryOnUnexpectedSyncTokenChange:
changeContext
flatMap:
arePropertiesReadonly
setSyncData:
code
containerTitle
_cn_map:
handleValidationError:completion:
_probeAndSyncWithBlock:
invalidImageType
imageError
changeAnchor
aa_altDSID
predicateForContactsWithIdentifiers:
deleteFromContainer:account:
sharedBabysitter
ignoresGuardianRestrictions
unsignedIntegerValue
accountByCreatingAccountWithExternalIdentifier:
intersectSet:
supportsAuthentication
length
setContext:
currentRequest
setSortOrder:
sessionWithConfiguration:delegate:delegateQueue:
maxResourceSizeFromSyncDict:
set_sourceApplicationSecondaryIdentifier:
addSaveRequest:
handleFailureInMethod:object:file:lineNumber:description:
removeObserver:name:object:
deleteFromContainer:
predicateForContactsMatchingName:options:
isMonitoring
isLocal
predicateForContactsMatchingEmailAddress:
wasUserInitiated
CDVObjectForKeyWithNameSpace:andName:
cnChangeAnchor
cardURL
pushKey
firstObject
_cn_isPrimaryAccount
setContentReadonly:
executeChangeHistoryClearRequest:error:
maxResourceSize
deleteContact:
unregisterWaiterForDataclassLocks:
integerValue
addObserver:selector:name:object:
value
serverId
iOSLegacyIdentifier
removeObjectForKey:
CDVIsHTTPStatusLineWithStatusCode:
setContainerIdentifier:
observeReachabilityWithBlock:
appleIDForAccount:
identifier
currentImplementationClass
appendData:
intValue
_cn_firstObjectPassingTest:
predicateForContactsInContainerWithIdentifier:
guardianRestricted
set_sourceApplicationBundleIdentifier:
initWithContactsFamilyDelegateAltDSID:familyDelegateACAccountID:
unregisterTopic:forDelegate:inEnvironment:
_cn_canSaveAccount:
removeObjectAtIndex:
addObjectsFromArray:
maxImageSizeFromSyncDict:
setShouldUseOpportunisticSockets:
clientInfoHeader
publicDescription
validAddressData
instanceId
latestChangeAnchor
setHasRemoteChanges:
set_appleIDContext:
isInitialUberSync
executeAllSaveRequests
objectForKeyedSubscript:
hrefsAsFullURLs
clientID
serverID
successfulPropertiesToValues
setContactChangeIDs:
anyObject
currentHandler
absoluteString
cardDAVRecordItem
maxImageSize
sequence:
setGuardianStateDirty:
isInitialSync
cancelTask:
addObject:
unregisterDelegate:
setShouldDoInitialAutodiscovery:
objectForKey:
addFailureBlock:
exceptionWithName:reason:userInfo:
removeDelegateDatabasesNotMatchingAltDSIDs:
abValidateDefaultSource
unregisterClientWithIdentifier:forContainer:
removeObject:
andPredicateWithSubpredicates:
setConsumer:forTask:
lastRetryTimeout
portFromDataclassPropertiesForDataclass:
credentialForAccount:serviceID:
clerkWithContactStore:
objectAtIndexedSubscript:
setWithObject:
isGuardianStateDirty
createOrphanedABRecordFromParsedVCardOutRecordType:
setGuardianRestricted:
sendMeCardEverywhere
setGroupChangeIDs:
uuidToHREF
submitIndependentTask:
setConstraintsPath:
hrefToStatus
errorWithDomain:code:userInfo:
setWithArray:
initWithURL:eTag:dataPayload:inContainerWithURL:withAccountInfoProvider:
lastPathComponent
clerkWithAddressBook:
uuidToErrorItems
abSaveDB
canAccessCredentialsWithAccessibility:
hrefToErrorItems
unregisterAccount:forOperationWithName:
protectionSpace
removeConsumerForTask:
keysToFetch
delegateDidCompleteRefresh:
error
defaultSessionConfiguration
setLocalItem:
numberWithInt:
setFolderName:
initWithClientIdentifier:
initWithURL:cachePolicy:timeoutInterval:
isGuardianRestricted
altDSIDForAccount:
searchString
hrefToETag
groupsMatchingPredicate:error:
createNewContainerWithType:name:externalIdentifier:constraintsPath:syncData:contentReadonly:propertiesReadonly:forAccount:
submitIndependentCoreDAVTask:
enumerateKeysAndObjectsUsingBlock:
abProcessAddedRecords
cTag
altDSID
initWithChangedItem:propertyName:value:propertyNamespace:serverId:
setCompletionBlock:
unmonitorAccount:
numberWithBool:
proposedCredential
searchQuery:returnedResults:
setValue:forHTTPHeaderField:
removeAllObjects
bulkRequests
setWasUserInitiated:
setPropertiesOnAccount:
abProcessAddedImages
setCnChangeAnchor:
enumerateContactsWithFetchRequest:error:usingBlock:
stringWithFormat:
keychainAccessibilityType
setFolderID:
initWithString:
noUIDConflict
keyVector
unlock
setPredicate:
stringValue
allValues
searchQuery:finishedWithError:
propertyNamespace
userInfo
fetchedAccountWithExternalIdentifier:
hostFromDataclassPropertiesForDataclass:
initWithSearchString:searchLimit:atURL:appSpecificDataItemClass:
boolValue
unionSet:
initWithCapacity:
abPersonChangeId
setChangeId:
dateWithTimeIntervalSinceNow:
nextCTag
initWithCDVScheme:user:password:host:port:path:query:fragment:
defaultCenter
itemWithDACardDAVRecord:contactStore:outNeedsDBSave:maxImageSize:maxResourceSize:inContainerWithURL:
allObjects
relinquishLocksForWaiter:dataclasses:moreComing:
searchPeopleWithPredicate:sortOrder:inAddressBook:withDelegate:
childAccounts
enabledForDADataclass:
isEqualToString:
init
dealloc
initWithAddressBook:
clearChangeHistoriesWithChangeIdContext:pushedActions:inContainer:changeTrackingID:
addressBook
_addressBook
T^v,R,N,V_addressBook
initWithBackingAccountInfo:
additionalHeaderValues
description
shouldDoInitialAutodiscovery
shouldAutodiscoverAccountProperties
accountDescription
setUpLocalDBHelper:
isEqualToAccount:
principalPath
host
port
useSSL
scheme
shouldFailAllTasks
user
grandSlamAppToken
noteHomeSetOnDifferentHost:
isDelegateAccount
familyDelegateAltDSID
databaseHelper
accountsType
setAccountsType:
.cxx_destruct
_databaseHelper
_accountsType
T@"ACAccountType",&,N,V_accountsType
handlerWithAddressBook:
handlerWithContactStore:
handleAction:forContainer:inAccount:withFolderURL:isInitialSync:arePartialResults:syncInfo:heldAsideGroups:
initWithAccount:
_contactsDidChange
os_log_summary
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
successfullyRetrievedAddressBookURLs
failedToRetrieveAddressBookURLsWithError:
actionFailed:forTask:error:
syncResultForContactsFolder:newTag:previousTag:newSyncToken:actions:results:changeIdContext:isInitialSync:moreAvailable:moreLocalChangesAvailable:pushedActions:
contactsFolderWithId:successfullyPushedActions:
waiterID
account:isValid:validationError:
refreshCollections:withReason:
watchedCollections
scheduleIdentifier
onBehalfOfBundleIdentifier
getDAAccount
saveXpcActivity:
trustHandler
serverTokenRegistrationURL
username
password
interfaceWentUp
interfaceWentDown
fetchInterval
pushDisabled
T@"DATrustHandler",R,N
successfullyFinishedInitalUploadForFolderWithID:container:guardianRestrictedUUIDs:guardianRestrictedHREFs:blacklistedUUIDs:blacklistedHREFs:context:
failedToFinishInitialSync:error:
successfullyUpdatedServerMeCardWithURL:
failedToUpdateServerMeCardWithError:
T@"NSObject<OS_os_log>",R,N
setupCardDAVDelegateManager:
contactsProvider
containerProvider
groupsProvider
initialActionsDataSource
actionsDataSource
actionsHandler
actionsFinalizer
_validateAndSync:
_setUpABNotifications
_tearDownABNotifications
startMonitoring
requestAgentStopMonitoringWithCompletionBlock:
refreshFolderListRequireChangedFolders:isUserRequested:
syncFolderIDs:forDataclasses:isUserRequested:
_updateMeCard
_successfullyFinishedInitialSyncForFolderWithID:context:
_pushInitialSyncActionsForFolderWithURL:context:
_finishInitialSyncForFolderWithURL:context:
_syncResultForFolderWithURL:newTag:newSyncToken:actions:changeIdContext:isInitialSync:arePartialResults:
_handlePotential503Error:
_addressBookSyncTask:failedWithErrorCode:
_reallySyncRequest:
publicContainerProviderSummaryInfo
_syncRequest:
_fireWaitingFolderItemSyncRequests
_appendSyncRequest:
_appendSyncRequestsForFolders:remoteChanges:
_syncAllContactFoldersWithRemoteChanges:
APSTopicHasValidPrefix:
refreshPropertiesOfAllContactFoldersWithCompletion:
_holdingDataClassLock_refreshPropertiesOfAllContactFoldersWithCompletion:
isPrimaryICloudAccount
isAccountOwnerChildInFamilyCircle
delegateManager
_currentlySyncingFolderURLs
_outstandingFolderRequests
_folderItemSyncRequestLock
_isSyncingHierarchy
_folderURLToHeldAsideGroups
_serverTokenRegistrationURL
_containerPushKeys
_folderURLToSyncInfo
_bulkUploadUUIDBlacklist
_bulkUploadHREFBlacklist
_isPrimaryICloudAccount_cached
_isAccountOwnerChildInFamilyCircle_cached
_delegateManager
T@"CardDAVDelegateManager",R,N,V_delegateManager
providerWithContactStore:
providerWithAddressBook:
contactsInContainer:
meContactInContainer:
contactFromItem:
contactsWithExternalHREFs:container:
contactsWithExternalUUIDs:container:
countOfContacts
countOfGroups
uuidToPersonCache
setUuidToPersonCache:
startedWithNoContacts
setStartedWithNoContacts:
_uuidToPersonCache
_startedWithNoContacts
T@"NSMutableDictionary",&,N,V_uuidToPersonCache
TB,N,V_startedWithNoContacts
discoveryTask:gotAccountInfo:error:
discoverInitialPropertiesWithConsumer:
contactsByFilteringOutContacts:withoutExternalIdentifier:
groupByFilteringOutGroups:withoutExternalIdentifier:
contactsByFilteringOutContacts:withoutExternalIUUID:
groupByFilteringOutGroups:withoutExternalUUID:
taskGroup:didFinishWithError:
copyLocalETagsForURLs:inFolderWithURL:
copyAllLocalURLsInFolderWithURL:
containerSyncTask:retrievedAddedOrModifiedActions:removed:
containerSyncTask:completedWithNewCTag:newSyncToken:addedOrModified:removed:error:
copyLocalETagsForURLToETagDict:inFolderWithURL:
setLocalETag:forItemWithURL:inFolderWithURL:
syncPutTask:completedWithNewETag:parentTaskGroup:error:
syncPostTask:postedData:parentTaskGroup:error:
syncDeleteTask:parentTaskGroup:completedWithError:
syncBulkChangeTask:parentTaskGroup:completedWithError:
syncPropPatchTask:parsedResponses:parentTaskGroup:completedWithError:
syncPutTask:completedWithNewETag:error:
syncPostTask:data:error:
syncDeleteTask:error:
syncBulkChangeTask:error:
logRetryAfterEmptyResponseContainerSyncTask:retryCount:
logGaveUpAcceptedEmptyResponseContainerSyncTask:retryCount:
getAccountPropertiesTask:completedWithError:
containerInfoTask:completedWithContainers:error:
task:didFinishWithError:
containerQueryTask:completedWithFoundItems:limitReached:error:
containerQueryTask:completedWithFoundItems:error:
addressBooks
addressBooksByFolderURL
pushKeysToFolderURLs
accountProvider
changeHistoryClerk
pushedActionsForTaskGroup:
removePushedActionsForTaskGroup:
isForgivableError:
_fillOutActionsArray:addedOrModified:removed:
finishInitialSyncOfContactsFolder:previousTag:uuidsToAddActions:hrefsToModDeleteActions:useCRUD:maxResources:maxSize:consumer:context:
_bulkUploadTaskGroup:didFinishWithError:
_shouldBlacklistForErrorItem:
copyCDVActionFromDAAction:
cdvActionsFromDAActions:
copyDAActionFromCDVAction:
daActionsFromCDVActions:
synchronizeContactsFolder:previousTag:previousSyncToken:actions:highestIdContext:isInitialUberSync:isResyncAfterConnectionFailed:previousTagIsSuspect:moreLocalChangesAvailable:consumer:
_copyABAccount:
_typeOfDAVContainer:
isTypeCardDAVSearchable:
newDAContainerForContainer:
_handleOrphanarium:toBeCreatedContainersByURL:
_bestDefaultContainerFromCandidateContainers:
_reallySyncAddressBookURLsWithConsumer:
syncAddressBookURLsWithConsumer:
containerPropertiesToFetchDuringRefresh
applyRefreshedValuesFromPropFind:toContainer:
_fillOutAddressBooksFromLocalDB
_reallyPerformSearchQuery:
_reallyCancelSearchQuery:
_reallyCancelAllSearchQueries
_reallySearchQueriesRunning
_copyCardFromMeIdentifierAndContainer:
_serverMeCard:hasChangedInContainer:
_updateStoredMeCardWithURL:
_updateMeTaskGroup:didFinishWithError:
_reallyUpdateMeCardWithWithConsumer:allowDistantUpdate:
updateMeCardWithWithConsumer:
setBestMeCard
pushTransport
setPushTransport:
homeURL
setHomeURL:
mAddressBooksByFolderURL
setMAddressBooksByFolderURL:
mAddressBooks
setMAddressBooks:
mSearchAddressBooks
setMSearchAddressBooks:
contactsByExternalIdentifier
setContactsByExternalIdentifier:
groupsByExternalIdentifier
setGroupsByExternalIdentifier:
mPushKeysToFolderURLs
setMPushKeysToFolderURLs:
searchTaskSet
setSearchTaskSet:
meCardURL
setMeCardURL:
meFolderURL
setMeFolderURL:
pushedActionsByTaskGroup
setPushedActionsByTaskGroup:
hasOutstandingABChanges
setHasOutstandingABChanges:
_hasOutstandingABChanges
_pushTransport
_homeURL
_mAddressBooksByFolderURL
_mAddressBooks
_mSearchAddressBooks
_contactsByExternalIdentifier
_groupsByExternalIdentifier
_mPushKeysToFolderURLs
_searchTaskSet
_meCardURL
_meFolderURL
_pushedActionsByTaskGroup
T@"NSMutableDictionary",&,N,V_mAddressBooksByFolderURL
T@"NSMutableSet",&,N,V_mAddressBooks
T@"NSMutableSet",&,N,V_mSearchAddressBooks
T@"NSMutableDictionary",&,N,V_contactsByExternalIdentifier
T@"NSMutableDictionary",&,N,V_groupsByExternalIdentifier
T@"NSMutableDictionary",&,N,V_mPushKeysToFolderURLs
T@"NSDictionary",&,N,V_pushTransport
T@"NSMutableSet",&,N,V_searchTaskSet
T@"NSURL",&,N,V_homeURL
T@"NSURL",&,N,V_meCardURL
T@"NSURL",&,N,V_meFolderURL
T@"NSMapTable",&,N,V_pushedActionsByTaskGroup
TB,N,V_hasOutstandingABChanges
T@"DAContactsProvider",R,N
T@"DAGroupsProvider",R,N
T@"DAContainerProvider",R,N
T@"DAContactsAccountProvider",R,N
T@"DAChangeHistoryClerk",R,N
T@"NSSet",R,N
T@"NSDictionary",R,N
copyPropPatchTask
initWithDAEditPropertyAction:
action
_action
T@"DAEditPropertyAction",R,N,V_action
initWithContactStore:
pickBestMeContactForGivenName:familyName:primaryEmail:
contactStore
setContactStore:
_contactStore
T@"CNContactStore",&,N,V_contactStore
os_log
clearChangesToAnchor:changeTrackingID:inContainer:
clearChangesForActions:inContainer:changeTrackingID:
dataSourceWithAddressBook:
dataSourceWithContactStore:
prepareChangeHistoryForClientWithIdentifier:forContainer:withChangeContext:
changeHistoryIsValid
_copyCoalescedChangesInContainer:isPrimaryAppleAccount:isU18Account:databaseHelper:accountHomeURL:changeTrackingID:existingActions:maxImageSize:maxResourceSize:changeContext:outTouchedDB:
isContact
isGroup
isContainer
isAccount
updateSaveRequest:
markForDeletion
legacyIdentifier
eTag
setETag:
externalUUID
setExternalUUID:
externalIdentifier
setExternalIdentifier:
asContact
asPerson
initWithABPerson:
person
_person
T^v,R,N,V_person
isChangeHistoryTruncated
setChangeHistoryTruncated:
touchedDatabase
setTouchedDatabase:
latestSequenceNumber
setLatestSequenceNumber:
actions
setActions:
highestChangeID
setHighestChangeID:
_changeHistoryTruncated
_touchedDatabase
_highestChangeID
_latestSequenceNumber
_actions
changeHistoryTruncated
TB,N,GisChangeHistoryTruncated,V_changeHistoryTruncated
TB,N,V_touchedDatabase
TQ,N,V_latestSequenceNumber
T@"NSArray",&,N,V_actions
Ti,N,V_highestChangeID
_isValidRecordType:forDACardDAVRecord:
_copyABActionsOfType:inContainer:accountHomeURL:changeTrackingID:existingActions:maxImageSize:maxResourceSize:isPrimaryAppleAccount:
_addChangeForType:changedItemId:changeId:addedIdsToChangeId:modifiedIdsToChangeId:deletedIdsToChangeId:changeIdsToClear:
_fillOutExternalUUIDForRecordType:localId:changeType:outTouchedDB:
_fillOutExternalURLForRecordType:localId:changeType:inFolderWithURL:outNewExternalURL:outTouchedDB:
pickerWithContactStore:
pickerWithAddressBook:
predicateShouldContinue:
predicateShouldContinue:afterFindingRecord:
predicateShouldContinue:afterFindingRecord:metadata:
predicateShouldContinue:afterFindingRecord:moreComing:
predicateShouldContinue:afterFindingRecord:metadata:moreComing:
moveToLocalStoreContacts:groups:
wrappedRecordFromRecord:
_localRecordForExternalURL:inContainer:withFolderURL:
_copyExistingABRecordForContact:inStore:
matchMode
setMatchMode:
testRecord
setTestRecord:
matchedRecord
setMatchedRecord:
_matchMode
_testRecord
_matchedRecord
Ti,N,V_matchMode
T^v,N,V_testRecord
T^v,N,V_matchedRecord
prepareToGenerateInitialActionsWithContext:
generateActionsForContacts:databaseHelper:inFolderWithURL:blacklistedUUIDs:blacklistedURLs:maxImageSize:maxResourceSize:outTouchedDB:reportingBlock:
actionsForGroups:isPrimaryAppleAccount:isU18Account:databaseHelper:inFolderWithURL:blacklistedUUIDs:blacklistedURLs:maxImageSize:maxResourceSize:containerIsRestricted:outTouchedDB:
initWithItemChangeType:changedItem:serverId:
initWithContacts:groups:
contacts
groups
_contacts
_groups
T@"NSArray",R,V_contacts
T@"NSArray",R,V_groups
groupsInContainer:
groupsWithExternalHREFs:container:
groupsWithExternalUUIDs:container:
extractContactActionsFromExistingActions:
extractGroupActionsFromExistingActions:
itemForContactChange:
generateActionsFromContactChanges:databaseHelper:storeURL:maxImageSize:maxResourceSize:outTouchedDB:
itemForGroupChange:
generateActionsFromGroupChanges:databaseHelper:storeURL:maxImageSize:maxResourceSize:outTouchedDB:
coalesceExistingActions:withNewlyGeneratedActions:discardActionHandler:
changeHistoryResult
setChangeHistoryResult:
_changeHistoryResult
T@"CNContactStore",R,N,V_contactStore
T@"CNChangeHistoryResult",&,N,V_changeHistoryResult
setAddressBook:
T^v,N,V_addressBook
logSummaryForCardDAVActions:partialResults:initialSync:syncPhase:syncAccount:
_nameForActionKind:
_kindForAction:
finalizerWithAddressBook:
finalizerWithContactStore:
initWithAction:externalUUID:externalURL:
externalURL
_externalUUID
_externalURL
T@"DAAction",R,N,V_action
T@"NSString",R,N,V_externalUUID
T@"NSURL",R,N,V_externalURL
finishFutures:
initWithDelegateInfoProvider:accountID:databaseHelper:
updateDelegates
deleteOrphanDatabasesLackingRepresentationInDelegateInfos:
account
collectDelegateInfoReturningError:
existingChildAccountsWithProperty:
addChildWithDelegateInfo:
saveAccount:
removeAccount:
delegateProvider
accountID
accountStore
_delegateProvider
_accountID
_accountStore
T@"ACAccountStore",R,N,V_accountStore
T@"CardDAVLocalDBHelper",R,N,V_databaseHelper
T@"<CardDAVDelegateInfoProvider>",R,N,V_delegateProvider
T@"NSString",R,N,V_accountID
_setPropertiesFromParsedResponses:
shutdown
reload
resetAccountID
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
URLSession:didCreateTask:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didCompleteWithError:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:willCacheResponse:completionHandler:
bestMePicker
setHost:
setUseSSL:
setPort:
shouldHandleHTTPCookiesForURL:
shouldSendClientInfoHeaderForURL:
shouldCompressRequests
_shouldWipeDataOnUpgradeFromAccountVersion:
copyImageContentsAtURL:outError:
_assignConnectionProperties:toSessionConfiguration:
_sendRequest:
_handleAuthenticationChallenge:completionHandler:
getAppleIDSession
defaultSession
setDefaultSession:
imageFetchTask
setImageFetchTask:
hostOverride
setHostOverride:
useSSLOverride
setUseSSLOverride:
portOverride
setPortOverride:
fetchingImageDataRefCount
setFetchingImageDataRefCount:
fetchedImageData
setFetchedImageData:
fetchImageError
setFetchImageError:
urlRequest
setUrlRequest:
_defaultSessionWasUserRequested
_useSSLOverride
_fetchingImageDataRefCount
_defaultSession
_imageFetchTask
_hostOverride
_portOverride
_fetchedImageData
_fetchImageError
_urlRequest
Ti,N,V_fetchingImageDataRefCount
T@"NSMutableData",&,N,V_fetchedImageData
T@"NSError",&,N,V_fetchImageError
T@"NSMutableURLRequest",&,N,V_urlRequest
T@"DABestMeContactPicker",R,N
T@"NSURLSession",&,N,V_defaultSession
T@"NSURLSessionDataTask",&,N,V_imageFetchTask
T@"NSString",&,N,V_hostOverride
Ti,N,V_useSSLOverride
Tq,N,V_portOverride
localItemForExternalURL:forContainer:withStoreURL:
matchingContactForExternalID:
matchingGroupForExternalID:inContainer:
copyExistingContactForItem:inStore:
actionsForContacts:isPrimaryAppleAccount:isU18Account:databaseHelper:inFolderWithURL:blacklistedUUIDs:blacklistedURLs:maxImageSize:maxResourceSize:containerIsRestricted:outTouchedDB:
actionsForGroups:isPrimaryAppleAccount:isU18Account:inFolderWithURL:databaseHelper:blacklistedUUIDs:blacklistedURLs:maxImageSize:maxResourceSize:outTouchedDB:
initWithContact:
mutableContact
markedForDeletion
setMarkedForDeletion:
_markedForDeletion
_mutableContact
T@"CNMutableContact",R,N,V_mutableContact
TB,N,V_markedForDeletion
Clearing Person change index %d
Clearing Group change index %d
Malformed CardDAVVCardItem: %@
Change context reports this is an initial sync or changes otherwire truncated. Setting our change history cursor the change sequence when history was fetched: %d
Couldn't get a store or database to clear AddressBook changes
Clearing %@ changes in store %d to index %d
CardDAVDelegateiCloudDaemonAccount for %@ (%{public}@) does not have a familyDelegateAltDSID, failing setup!
Unable to determine principalPath for account "%@" (%{public}@)
Unable to determine host for account "%@" (%{public}@)
Unable to determine port for  %@ (%{public}@), falling back to 443
Checking auth status for account %@ (%{public}@)
Not attempting request for account %@ because the parent account credential isn't authed %{public}@
Not attempting request for account %{public}@ because the parent account needs to verify terms or is suspended. %{public}@
Not attempting request for account %{public}@ because we don't have access to keychain items with accessibility %d right now
Unable to obtain authentication account for account "%@" %@{public}
Home set is on a different host. Updating overrides for account "%@" (%{public}@)
Account "%@" (%{public}@) is waiting for a password, so we're going to ignore this refresh request
Account "%@" (%{public}@) thinks it should fail all tasks.  Doing so
Account "%@" (%{public}@) doesn't have a principal URL. Running autodiscovery.
Account "%@" (%{public}@) isn't reachable. Deferring sync.
Handling CNContactStoreDidChangeNotification for account "%@" (%{public}@); sync will occur
Account "%@" (%{public}@) was successfully autodiscovered, saving account settings
Got a password from the user. Attempting autodiscovery again for account "%@" (%{public}@)
Account "%@" (%{public}@) can't figure out its principalPath, and we couldn't get a password from the user 
We'll refresh if we find a better network connection.
reachability indicates that the network is reachable.  We're going to retry our folder sync with %{public}@.
Network is now reachable; sync will occur
DA just woke up; sync will occur with %{public}@.
The CardDAV agent was told to stop monitoring with %{public}@.
Account doesn't have a principal URL. Running autodiscovery.
Not syncing ab hierarchy, as I'm in the middle of doing that
Asked to sync folder with id %@, but I only know of these folders %@
DA retry machinations; sync will occur
Yikes: %s %@ error code:%ld error domain:%{public}@ error:%@
Initial sync failed, queue retry
Me-card sync failed, queue retry
Will avoid to block dataaccessd for too long during initial sync - slowing down pushes
Will avoid using too much memory during initial sync - slowing down pushes
Pushing %d people%s
started initial sync for %@ with no contacts - won't try to match people
Could not save local container
The server told us to try again after %f seconds.
The server returned a 503, but didn't give us a retry-after header. We'll retry again after %f seconds
We got another 503 error, but we've already backed off for 8 minutes. Giving up and retrying again at our regularly scheduled time
Daemon is ignoring task %@ which failed with status %ld and error %@
The babysitter put us in timeout, so we're going to fail this sync. %@
Syncing account "%@" (%{public}@) -- started
Syncing account "%@" (%{public}@) -- %{public}@
Agent %{public}@ asked to sync folder with id %@, but I have no matching container
My ctag of %@ is suspect, I'll get a new one
external change, folder %@
Treating request as an initial sync as our change history is invalid
This isn't an initial sync request, yet change history was truncated for our cursor. DA never expects truncation after initial sync and does not implement reconciliation. Truncation will be cleared at the conclusion of sync but this account is now in an inconsistent state with the address book database.
Blasting whitespace before first time sync
Blasted whitespace before first time sync
Default source %{public}@
Default source : <none>
%lu changes for account "%@" (%{public}@)
returning early, as we have a folder change with no remote changes, and no local changes
DATransaction starting, ID: %@
lock for %@ aborted
CardDAVAgent: locks granted for dataclasses %lx
%s: asked to sync folder request %@, but that has no server id.  Dropping this sync on the floor
Appending a sync request for folder %@
Got AB URLs from our daemon account, going to sync my folders
Yikes: %s error code:%ld error domain:%{public}@ error:%@
network unreachable during folder sync. Waiting for reachability to signal a retry.
refreshPropertiesOfAllContactFoldersWithCompletion: %@ failed to acquire data class lock, skipping container property update and aborting sync.
DA refresh machinations; sync will occur
Could find parent ACAccount of CardDAV Account %@
Could not determine altDSID for account %@. Returning assumption that account holder is not U18.
FamilyCircle lookup failed for account %@ with error: %@. Returning assumption that account holder is not U18.
Container sync task %@ completed with next cTag %@, next synctoken %@, add/modify count %lu, remove count %lu, error %@
Syncing account "%@" (%{public}@) -- sync completed with error: %@ %{public}@
Syncing account "%@" (%{public}@) -- sync complete
Our ab store went missing mid sync. Shenanigans!
Syncing account "%@" (%{public}@) -- server requested %lu etags, we matched %lu
Our ab store went missing mid sync.  Shenanigans!
Found a contact with full path %@, which I can't make into a URL relative to %@
Found a group with full path %@, which I can't make into a URL relative to %@
Syncing account "%@" (%{public}@) - server requested local urls, we provided %lu
The babysitter put us in timeout. Failing initial contacts sync. %@
Folder with id %@ supports bulk upload.  Using it
Asked to do a bulk upload to folder id %@, but it doesn't support it.  Failing
bulk upload task group %@ completed with error %@
Bulk upload finished, but I have no store for it!
For uuid %@, I have new href %@, but no local record
For href %@ with no uuid, I can't find my local record
For href %@, I have new etag %@, but no local record
For href %@, I have a 404, but no local record to de-href
Blacklisting UUID %{public}@ with error item:  %{public}@
Server rejected action for item with UUID %{public}@ because the target container is guardian restricted
An error item was returned for UUID  %{public}@ but we are not blacklisting the associated record. Error: %{public}@ child items: %{public}@
Blacklisting HREF %@ with error item: %@
Server rejected action for item with HREF %{public}@ because the target container is guardian restricted
An error item was returned for HREF %{public}@ but we are not blacklisting the associated record. Error: %{public}@ child items: %{public}@
Unacceptable DAAction %@.  Not handing it to CoreDAV
Unacceptable CoreDAVAction %@.  Not handing it to DA
The babysitter put us in timeout. Failing this sync. %@
Creating AB store for account %@
containerInfoTask for %@ completed with %lul containers, error: %{public}@ 
container info %@
Ignoring push transports from additional home set %@
Ignoring Me card from additional home set %@
Me card URL is %@
Container type from the server (%{public}ld) differs from our records (%{public}ld). Changing local type to (%{public}ld).
Unregistered container from change history because the server reports it to be a search node, yet we had categorized it as storage.
Registered container with change history because the server reports it as storage, yet we had categorized it as a search node.
The babysitter put us in timeout. Failing to sync AB URLs. %@
DEBUG: Filling in %lu containers for externalIdentifier: %{public}@
Got unexpected nil externalURL, skipping constructing a DAFolder for account with identifier: %{public}@, container with identifier: %{public}@, homeURL: %{public}@
Sending CardDAV search results back to consumer %@.
Query: %@
Results: %@
CardDAV search task %p was cancelled
The CardDAV search returned an error: (%@)
cancelling search query %@
Looking for Me card as seen on server. Folder URL: %@ - Me Card URL: %@
Server Me card %@ as seen on server not found locally
Server me card: %@ - stored one: %@
Updating known server me card to %@ in %@
Local me card: %@ - Distant me card: %@
No local me card, will use server provided one
Updating me card from server
Can't set me card from distant me card %@, identifier %d
Not updating distant me card, externalIdentifier would not change
Not updating distant me card, allowDistantUpdate is NO
Updating me card on server
Missing required container identifier
Change history not cleared: %@ error: %@
Change history not cleared: %@ error: %@ 
Unexpected error: no change history elements to clear.
A preset action for a sync request wanted a modify, but we have no server id.  Dropping the modify of %@
A preset action for a sync request didn't have an associated local event in the db action %@
A preset action for a sync request had change type %lu, which is unsupported.  Dropping that action
Looking at change with id %d type %d externalURL %@
Clearing change index %d
_addChange for type %lu, changedItemId %@ changeId %@ addedIds %@ modifiedIds %@ deletedIds %@, changeIdsToClear %@
Found a delete of a record with no external id.  Dropping this delete on the floor
adding %@
updating %@
saved %@, server id %@, clientID %@
Holding aside group with server id %@
Unexpected ABRecordType for item %@
Predicate %@ matched contact %@ with local id %d
Found a last chance matching using %@
Found no match for contact %@
Error: somebody has already set the latest sequence number for the contacts change context despite this being initial sync.
Not pushing person with uuid %@ href %@ because the server rejected it
Not pushing group with uuid %@ href %@ because the server rejected it
Syncing error; we should never be generating new DAActions with a nil change history
Syncing error; we should never be generating new DAActions with a invalid change history
discarding existing CONTACT DAAction of type: %ld change: %d
Unexpected result when clearing change %@ error %@
discarding existing GROUP DAAction of type: %ld change: %d
Unexpected error fetching change history for %@ (error: %@)
Odd, fetching change history for %@ resulted in truncated changes.  This should be very rare.
Local contact changes: %lu for %@
Local group changes:  %lu for %@
Unexpected nil change history; call fetchChangeHistoryForClientWithIdentifier before calling this
Unable to sync contact delete %@; externalID from tombstone nil
generating DAItemChangeTypeAdd action for CONTACT CNChangeHistoryChangeTypeAdd with identifier: %@ anchored at: %@ in container: %@ 
generating DAItemChangeTypeModify action for CONTACT CNChangeHistoryChangeTypeUpdate with identifier: %@ anchored at: %@ in container: %@ 
generating DAItemChangeTypeDelete action for CONTACT CNChangeHistoryChangeTypeDelete with identifier: %ld anchored at: %@ in container: %@ 
encourtered unsupported CONTACT CNChangeHistoryChangeType %ld
Unexpected error looking up changed group for %@; error %@
generating DAItemChangeTypeAdd action for GROUP CNChangeHistoryChangeTypeAdd with identifier: %ld anchored at: %@ in container: %@ 
generating DAItemChangeTypeModify action for GROUP CNChangeHistoryChangeTypeUpdate with identifier: %ld anchored at: %@ in container: %@ 
generating DAItemChangeTypeDelete action for GROUP CNChangeHistoryChangeTypeDelete with identifier: %ld anchored at: %@ in container: %@ 
encountered unsupported GROUP CNChangeHistoryChangeType %ld
Syncing account "%@" (%{public}@) -- no actions%{public}@
Syncing account "%@" (%{public}@) -- unexpected action %@
Syncing account "%@" (%{public}@) -- %{public}@ actions (add:%lu mod:%lu del:%lu)%{public}@
unexpected issue classifying action %@
Skipping delegate state update (including account account adds/removes) because we got an error fetching delegates from Family Circle. error:  %@
Unexpected condition updating deletes - no principal path for delegateInfo: %{public}@ %@
Delegate with account ID %@ cannot be saved, error %{public}@
Delegate with account ID %@ can be saved
Delegate with account ID %@ save failed, error %{public}@
Delegate with account ID %@ saved
Delegate with account ID %@ failed to be removed, error %{public}@
Delegate with account ID %@ was successfully removed
Moving along the migration of local store into a CardDAV cocoon
Home set is on a different host. Fetching new AppleAccount properties
Updated account properties are %@
Backing parent AppleAccount was %@saved successfully.
Error fetching AppleAccount properties: %@
Finishing migration of store with id %@ into a pretty CardDAV butterfly
Image URL %@ is invalid for fetching an image
Copying image from URL %@ is aborted because another fetch is in progress
Copying image from URL %@ is starting. Set fetchingImageDataRefCount to 1.
Fetching image at %@ with header fields %@
Could not get photo data from url %@.  Error %@
Fetched image at %@, data at %p
Connection property: %@ is not set
CardDAV NSURLSession Convert: session %p created dataTask %p for %@ %p
CardDAV NSURLSession Convert: could not create dataTask for %@ %p
CardDAV NSURLSession Convert: session %p didBecomeInvalidWithError for %@ %p
CardDAV NSURLSession Convert: session %p didReceiveChallenge for %@ %p
CardDAV NSURLSession Convert: session %p dataTask %p didReceiveChallenge for %@ %p
CardDAV NSURLSession Convert: session %p dataTask %p didCompleteWithError %@ for %@ %p
Completed copying image. Decrement fetchingImageDataRefCount to %d.
Fail to copy image. Decrement fetchingImageDataRefCount to %d.
CardDAV NSURLSession Convert: session %p dataTask %p didReceiveResponse %@ for %@ %p
The server blocked our image data fetch.  Request %@.  Response status code %d
CardDAV NSURLSession Convert: session %p dataTask %p didReceiveData for %@ %p
Adding fetched image data to %p
CardDAV NSURLSession Convert: session %p dataTask %p willCacheResponse for %@ %p
_CardDAVActionsABLegacyFinalizer
CardDAVDelegateiCloudDaemonAccount
CardDAVActionsHandler
CardDAVAgent
CardDAVAddressBookURLsConsumer
NSObject
DAContactsUpdateConsumer
DAActionConsumer
DADataclassLockWatcher
DAValidityCheckConsumer
DARefreshManagerDelegate
CardDAVFinishInitialSyncConsumer
CardDAVMeCardUpdateConsumer
DABabysittable
DAContactsProvider
CardDAVSyncInfo
CardDAVDaemonAccount
CoreDAVLocalDBInfoProvider
CoreDAVTaskGroupDelegate
CoreDAVGetAccountPropertiesTaskGroupDelegate
CoreDAVContainerInfoTaskGroupDelegate
CoreDAVContainerQueryTaskDelegate
CoreDAVTaskDelegate
DAEditPropertyActionAdapter
CoreDAVModifiedContainer
_DABestMeContactContactsPicker
_CardDAVActionsContactsFinalizer
CardDAVActionsDataSource
DAABLegacyContact
DAContact
DACardDAVRecord
_DABestMeContactABLegacyPicker
CardDAVFacebookDaemonAccount
ABLegacyActionsResult
_CardDAVActionsABLegacyDataSource
DABestMeContactPicker
_CardDAVActionsABLegacyHandler
ABPredicateDelegate
_CardDAVInitialActionsABLegacyDataSource
ABMoveLocalAction
DAGroupsProvider
_CardDAVActionsContactsDataSource
_DAABLegacyGroupsProvider
_DAABLegacyContactsProvider
CardDAVActionsLogger
CardDAVActionsFinalizer
DACardDAVActionResult
CardDAVInitialActionsDataSource
CardDAVDelegateManager
CardDAViCloudGetAccountPropertiesTaskGroup
CardDAViCloudDaemonAccount
NSURLSessionDelegate
NSURLSessionTaskDelegate
NSURLSessionDataDelegate
_CardDAVActionsContactsHandler
_DAContactsGroupsProvider
_DAContactsContactsProvider
_CardDAVInitialActionsContactsDataSource
DAContactsContact
@24@0:8^v16
v16@0:8
B48@0:8@16@24@32@40
^v16@0:8
@24@0:8@16
@16@0:8
B16@0:8
B24@0:8@16
q16@0:8
v24@0:8@16
@"CardDAVLocalDBHelper"
@"ACAccountType"
B72@0:8@16@24@32@40B48B52@56@64
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@"NSError"16
v40@0:8q16@24@32
v40@0:8q16@24@"NSError"32
v92@0:8@16@24@32@40@48@56@64B72B76B80@84
v32@0:8@16@24
v92@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@"NSArray"48@"NSArray"56@"ContactFolderItemsSyncContext"64B72B76B80@"NSArray"84
v32@0:8@"NSString"16@"NSArray"24
v36@0:8@16B24@28
v36@0:8@"DAAccount"16B24@"NSError"28
v28@0:8@16i24
v28@0:8@"NSSet"16i24
@"NSSet"16@0:8
@"DAAccount"16@0:8
v24@0:8@"NSObject<OS_xpc_object>"16
@"DATrustHandler"16@0:8
@"NSURL"16@0:8
v72@0:8@16@24@32@40@48@56@64
v72@0:8@"NSString"16@"<DAContainer>"24@"NSSet"32@"NSSet"40@"NSSet"48@"NSSet"56@"ContactFolderItemsSyncContext"64
v32@0:8@"NSString"16@"NSError"24
v24@0:8@"NSURL"16
v20@0:8B16
v24@0:8@?16
v24@0:8B16B20
v36@0:8@16q24B32
B64@0:8@16@24@32@40@48B56B60
v32@0:8@16q24
v28@0:8@16B24
@"NSMutableSet"
@"NSMutableArray"
@"NSLock"
@"NSMutableDictionary"
@"NSURL"
@"NSNumber"
@"CardDAVDelegateManager"
@32@0:8@16@24
v32@0:8@"CoreDAVTaskGroup"16@"NSError"24
v40@0:8@16@24@32
v64@0:8@16@24@32@40@48@56
B40@0:8@16@24@32
B32@0:8@16@24
v32@0:8@16Q24
@"NSDictionary"32@0:8@"NSArray"16@"NSURL"24
@"NSSet"24@0:8@"NSURL"16
v40@0:8@"CoreDAVContainerSyncTaskGroup"16@"NSSet"24@"NSSet"32
v64@0:8@"CoreDAVContainerSyncTaskGroup"16@"NSString"24@"NSString"32@"NSSet"40@"NSSet"48@"NSError"56
@"NSDictionary"32@0:8@"NSDictionary"16@"NSURL"24
B40@0:8@"NSString"16@"NSURL"24@"NSURL"32
B48@0:8@"CoreDAVPutTask"16@"NSString"24@"CoreDAVContainerSyncTaskGroup"32@"NSError"40
B48@0:8@"CoreDAVPostTask"16@"NSData"24@"CoreDAVContainerSyncTaskGroup"32@"NSError"40
B40@0:8@"CoreDAVDeleteTask"16@"CoreDAVContainerSyncTaskGroup"24@"NSError"32
B40@0:8@"CoreDAVBulkChangeTask"16@"CoreDAVContainerSyncTaskGroup"24@"NSError"32
B48@0:8@"CoreDAVPropPatchTask"16@"NSArray"24@"CoreDAVContainerSyncTaskGroup"32@"NSError"40
B40@0:8@"CoreDAVPutTask"16@"NSString"24@"NSError"32
B40@0:8@"CoreDAVPostTask"16@"NSData"24@"NSError"32
B32@0:8@"CoreDAVDeleteTask"16@"NSError"24
B32@0:8@"CoreDAVBulkChangeTask"16@"NSError"24
v32@0:8@"CoreDAVContainerSyncTaskGroup"16Q24
v32@0:8@"CoreDAVGetAccountPropertiesTaskGroup"16@"NSError"24
v40@0:8@"CoreDAVContainerInfoTaskGroup"16@"NSSet"24@"NSError"32
v32@0:8@"CoreDAVTask"16@"NSError"24
v44@0:8@16@24B32@36
v44@0:8@"CoreDAVContainerQueryTask"16@"NSSet"24B32@"NSError"36
v40@0:8@"CoreDAVContainerQueryTask"16@"NSSet"24@"NSError"32
B84@0:8@16@24@32@40B48q52q60@68@76
v80@0:8@16@24@32@40@48B56B60B64B68@72
@20@0:8B16
i24@0:8@16
B20@0:8i16
@24@0:8^@16
B28@0:8@16B24
@"NSDictionary"
@"NSMapTable"
@"CoreDAVPropPatchTask"16@0:8
@"DAEditPropertyAction"
@"CNContactStore"
@96@0:8@16B24B28@32@40@48@56q64q72@80^B88
v24@0:8@"CNSaveRequest"16
i16@0:8
v24@0:8@"NSString"16
@"CNMutableContact"16@0:8
v24@0:8Q16
v20@0:8i16
@"NSArray"
B28@0:8I16@20
@72@0:8I16^v20@28@36@44q52q60B68
v72@0:8Q16@24@32@40@48@56@64
B40@0:8I16i20Q24^B32
B56@0:8I16i20Q24@32^@40^B48
B32@0:8@16^v24
B40@0:8@16^v24@32
B36@0:8@16^v24B32
B44@0:8@16^v24@32B40
B24@0:8@"NSPredicate"16
B32@0:8@"NSPredicate"16^v24
B40@0:8@"NSPredicate"16^v24@"NSDictionary"32
B36@0:8@"NSPredicate"16^v24B32
B44@0:8@"NSPredicate"16^v24@"NSDictionary"32B40
^v40@0:8@16^v24@32
^v32@0:8@16^v24
v24@0:8^v16
v88@0:8@16@24@32@40@48q56q64^B72@?80
@92@0:8@16B24B28@32@40@48@56q64q72B80^B84
@64@0:8@16@24@32q40q48^B56
@40@0:8@16@24@?32
@"CNChangeHistoryResult"
v48@0:8@16B24B28@32@40
@24@0:8Q16
Q24@0:8@16
@40@0:8@16@24@32
@"DAAction"
@"NSString"
@"<CardDAVDelegateInfoProvider>"
@"ACAccountStore"
v40@0:8@16@24@?32
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
v24@0:8q16
@32@0:8@16^@24
v32@0:8@16@?24
@"NSURLSession"
@"NSURLSessionDataTask"
@"NSMutableData"
@"NSError"
@"NSMutableURLRequest"
@88@0:8@16B24B28@32@40@48@56q64q72^B80
@"CNMutableContact"
^{__CFDictionary=}24@?0^v8^v16
Person
Group
CardDAVDelegateiCloudDaemonAccount %p: accountID: %@ parentAccount: %@ dsid: %@
%@ %@
https
X-APPLE-FAMILY-AUTH-TOKEN
X-MMe-Client-Info
com.apple.gs.icloud.family.auth
CardDAVActionsHandler.m
Subclasses implement
v8@?0
com.apple.dataaccess
summary
v12@?0B8
v24@?0q8@"NSError"16
CTagIsSuspect
NeedInitialSync
CardDAVAgent.m
Actions data source called us after we told it to stop. Is it ignoring the block return value?
B24@?0@"<DAContact>"8@"DACardDAVActionResult"16
 (pushed all)
BulkRequests
in server results phase
retry-after
CardDAVSyncRequest
<summary unavailable>
contacts: %lu, groups: %lu
v20@?0q8B16
-[CardDAVAgent _fireWaitingFolderItemSyncRequests]
Attempted to queue a sync request for a folder with no folder id: %@
com.me.
com.apple.contact.
com.icloud.
APSD
PRODUCTION
production
SANDBOX
DEVELOPMENT
development
demo
v32@?0@"DAFolder"8@"CoreDAVPropFindTask"16@"<DAContainer>"24
v16@?0B8B12
@"NSNumber"8@?0
@8@?0
B16@?0@"FAFamilyMember"8
contactsInContainer: is abstract
meContactInContainer: is abstract
contactFromItem: is abstract
contactsWithHREFs: is abstract
contactsWithExternalUUIDs: is abstract
countOfContacts: is abstract
countOfGroups: is abstract
CardDAVSync
CardDAVInitialUpload
v24@?0@"NSString"8@"NSURL"16
v32@?0@"NSURL"8@"NSString"16^B24
v32@?0@"NSString"8@"CoreDAVErrorItem"16^B24
v32@?0@"NSURL"8@"CoreDAVErrorItem"16^B24
from local contact store
CardDAV
CardDAVSyncABURLS
CardDAVValidityCheck
v24@?0@"CNContact"8^B16
CardDAV-actionsfinalizer
CardDAVActionsDataSource.m
DAABLegacyContact cannot update CNSaveRequest
DAABLegacyContact cannot return a CNContact
webdav.beta.facebook.com
true
false
%@.vcf
pickBestMeContactForGivenName
v12@?0i8
groupsInContainer: is abstract
groupsWithExternalHREFs: is abstract
groupsWithExternalUUIDs: is abstract
CardDAV-actions
v16@?0@"DAAction"8
Yup, busted for %@
%@%@ %@
(partial)
(initial)
unclassifable
undetermined
contact
group
CardDAVActionsFinalizer.m
prepareToGenerateInitialActionsWithContext: is abstract
actionsForContacts: is abstract
actionsForGroups: is abstract
@"CNFuture"16@?0@"ACAccount"8
@16@?0@"CardDAVDelegateInfo"8
parent
v16@?0@"NSError"8
v16@?0@8
@"CNFuture"16@?0@"NSNumber"8
CardDAVAccountPrincipalURL
v20@?0B8@"NSError"12
NOT 
com.apple.mobilesync
v32@?0@"NSString"8@"NSString"16^B24
CardDAVImageFetch
CardDAViCloudDaemonAccount
CardDAV-actionshandler
CardDAV-actions-initial
DAContactsContact cannot return an ABRecordRef
