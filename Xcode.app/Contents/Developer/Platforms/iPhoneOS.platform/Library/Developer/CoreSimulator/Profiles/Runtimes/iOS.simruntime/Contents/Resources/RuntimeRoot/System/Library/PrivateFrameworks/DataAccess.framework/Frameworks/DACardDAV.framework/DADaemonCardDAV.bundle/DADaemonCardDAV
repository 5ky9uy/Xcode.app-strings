CDVURLWithUser:
APSTopicHasValidPrefix:
T@"NSString",R,N,V_externalUUID
CDVIsHTTPStatusLineWithStatusCode:
_copyABAccount:
CDVRawPath
_defaultSession
DAObjectForKeyCaseInsensitive:
_fillOutAddressBooksFromLocalDB
DA_isFailedDependencyError
_imageFetchTask
T@"<CardDAVDelegateInfoProvider>",R,N,V_delegateProvider
_mutableContact
T@"ACAccountType",&,N,V_accountsType
_useSSLOverride
T@"CNContactStore",&,N,V_contactStore
abGroupChangeId
T@"CNMutableContact",R,N,V_mutableContact
accountProvider
T@"CardDAVLocalDBHelper",R,N,V_databaseHelper
addSaveRequest:
T@"DABestMeContactPicker",R,N
allKeys
T@"DAContactsAccountProvider",R,N
cardURL
T@"DAContainerProvider",R,N
containsObject:
T@"DAGroupsProvider",R,N
countOfContacts
T@"NSArray",&,N,V_actions
dealloc
T@"NSArray",R,V_groups
dsidForAccount:
T@"NSDictionary",R,N
fetchImageError
T@"NSMapTable",&,N,V_pushedActionsByTaskGroup
highestChangeID
T@"NSMutableDictionary",&,N,V_contactsByExternalIdentifier
hrefsAsFullURLs
T@"NSMutableDictionary",&,N,V_mAddressBooksByFolderURL
interfaceWentUp
T@"NSMutableDictionary",&,N,V_uuidToPersonCache
isGroup
T@"NSMutableSet",&,N,V_mSearchAddressBooks
isProxy
T@"NSMutableURLRequest",&,N,V_urlRequest
maxResourceSize
T@"NSSet",R,N
numberWithBool:
T@"NSString",R,N,V_accountID
payloadAsString
T@"NSURL",&,N,V_meCardURL
protectionSpace
T@"NSURL",R,N,V_externalURL
release
T@"NSURLSessionDataTask",&,N,V_imageFetchTask
searchPeopleWithPredicate:sortOrder:inAddressBook:withDelegate:
TB,N,V_hasOutstandingABChanges
setAddressBook:
TB,N,V_startedWithNoContacts
setMeFolderURL:
TQ,N,V_latestSequenceNumber
syncTag
T^v,N,V_addressBook
updateDelegates
T^v,N,V_testRecord
.cxx_destruct
T@"NSString",&,N,V_hostOverride
CDVAddItemParserMappingWithNameSpace:name:parseClass:
_action
CDVObjectForKeyWithNameSpace:andName:
_databaseHelper
DAAccountPrincipalPath
_defaultSessionWasUserRequested
DARequestByApplyingStorageSession:
_groups
T#,R
_kindForAction:
T@"ACAccountStore",R,N,V_accountStore
_person
T@"CNChangeHistoryResult",&,N,V_changeHistoryResult
aa_primaryEmail
T@"CNContactStore",R,N,V_contactStore
account
T@"CardDAVDelegateManager",R,N,V_delegateManager
actions
T@"DAAction",R,N,V_action
addressBookConstraintsPlistPath
T@"DAChangeHistoryClerk",R,N
altDSID
T@"DAContactsProvider",R,N
constraintsPath
T@"DAEditPropertyAction",R,N,V_action
context
T@"DATrustHandler",R,N
credentialForAccount:serviceID:
T@"NSArray",R,V_contacts
delegateManager
T@"NSDictionary",&,N,V_pushTransport
extraChildItems
T@"NSError",&,N,V_fetchImageError
groupIdentifier
T@"NSMutableData",&,N,V_fetchedImageData
homeURL
T@"NSMutableDictionary",&,N,V_groupsByExternalIdentifier
initWithString:
T@"NSMutableDictionary",&,N,V_mPushKeysToFolderURLs
isAuthenticated
T@"NSMutableSet",&,N,V_mAddressBooks
isLocal
T@"NSMutableSet",&,N,V_searchTaskSet
markForDeletion
T@"NSObject<OS_os_log>",R,N
members
T@"NSString",R,C
parameterString
T@"NSURL",&,N,V_homeURL
predicateShouldContinue:afterFindingRecord:metadata:moreComing:
T@"NSURL",&,N,V_meFolderURL
pushKey
T@"NSURLSession",&,N,V_defaultSession
result:
TB,N,GisChangeHistoryTruncated,V_changeHistoryTruncated
TB,N,V_markedForDeletion
setIgnoresGuardianRestrictions:
TB,N,V_touchedDatabase
startMonitoring
TQ,R
touchedDatabase
T^v,N,V_matchedRecord
uppercaseString
T^v,R,N,V_addressBook
T^v,R,N,V_person
Ti,N,V_fetchingImageDataRefCount
Ti,N,V_highestChangeID
Ti,N,V_matchMode
Ti,N,V_useSSLOverride
Tq,N,V_portOverride
URLByAppendingPathComponent:
URLByDeletingLastPathComponent
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:willCacheResponse:completionHandler:
URLSession:didBecomeInvalidWithError:
URLSession:didCreateTask:
URLSession:didReceiveChallenge:completionHandler:
URLSession:task:didCompleteWithError:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:needNewBodyStream:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSessionDidFinishEventsForBackgroundURLSession:
URLWithString:
_accountID
_accountStore
_accountsType
_actions
_addChangeForType:changedItemId:changeId:addedIdsToChangeId:modifiedIdsToChangeId:deletedIdsToChangeId:changeIdsToClear:
_addressBook
_addressBookSyncTask:failedWithErrorCode:
_appendSyncRequest:
_appendSyncRequestsForFolders:remoteChanges:
_assignConnectionProperties:toSessionConfiguration:
_bestDefaultContainerFromCandidateContainers:
_bulkUploadHREFBlacklist
_bulkUploadTaskGroup:didFinishWithError:
_bulkUploadUUIDBlacklist
_changeHistoryResult
_changeHistoryTruncated
_cn_canSaveAccount:
_cn_firstObjectPassingTest:
_cn_isPrimaryAccount
_cn_map:
_cn_removeAccount:
_cn_saveVerifiedAccount:
_contactStore
_contacts
_contactsByExternalIdentifier
_contactsDidChange
_containerPushKeys
_copyABActionsOfType:inContainer:accountHomeURL:changeTrackingID:existingActions:maxImageSize:maxResourceSize:isPrimaryAppleAccount:
_copyCardFromMeIdentifierAndContainer:
_copyCoalescedChangesInContainer:isPrimaryAppleAccount:isU18Account:databaseHelper:accountHomeURL:changeTrackingID:existingActions:maxImageSize:maxResourceSize:changeContext:outTouchedDB:
_copyExistingABRecordForContact:inStore:
_currentlySyncingFolderURLs
_delegateManager
_delegateProvider
_externalURL
_externalUUID
_fetchImageError
_fetchedImageData
_fetchingImageDataRefCount
_fillOutActionsArray:addedOrModified:removed:
_fillOutExternalURLForRecordType:localId:changeType:inFolderWithURL:outNewExternalURL:outTouchedDB:
_fillOutExternalUUIDForRecordType:localId:changeType:outTouchedDB:
_finishInitialSyncForFolderWithURL:context:
_fireWaitingFolderItemSyncRequests
_folderItemSyncRequestLock
_folderURLToHeldAsideGroups
_folderURLToSyncInfo
_groupsByExternalIdentifier
_handleAuthenticationChallenge:completionHandler:
_handleOrphanarium:toBeCreatedContainersByURL:
_handlePotential503Error:
_hasOutstandingABChanges
_highestChangeID
_holdingDataClassLock_refreshPropertiesOfAllContactFoldersWithCompletion:
_homeURL
_hostOverride
_isAccountOwnerChildInFamilyCircle_cached
_isPrimaryICloudAccount_cached
_isSyncingHierarchy
_isValidRecordType:forDACardDAVRecord:
_latestSequenceNumber
_localRecordForExternalURL:inContainer:withFolderURL:
_mAddressBooks
_mAddressBooksByFolderURL
_mPushKeysToFolderURLs
_mSearchAddressBooks
_markedForDeletion
_matchMode
_matchedRecord
_meCardURL
_meFolderURL
_nameForActionKind:
_outstandingFolderRequests
_portOverride
_probeAndSyncWithBlock:
_pushInitialSyncActionsForFolderWithURL:context:
_pushTransport
_pushedActionsByTaskGroup
_reallyCancelAllSearchQueries
_reallyCancelSearchQuery:
_reallyPerformSearchQuery:
_reallySearchQueriesRunning
_reallySyncAddressBookURLsWithConsumer:
_reallySyncRequest:
_reallyUpdateMeCardWithWithConsumer:allowDistantUpdate:
_searchTaskSet
_sendRequest:
_serverMeCard:hasChangedInContainer:
_serverTokenRegistrationURL
_setNonAppInitiated:
_setPropertiesFromParsedResponses:
_setProperty:forKey:
_setUpABNotifications
_shouldBlacklistForErrorItem:
_shouldWipeDataOnUpgradeFromAccountVersion:
_startedWithNoContacts
_successfullyFinishedInitialSyncForFolderWithID:context:
_syncAllContactFoldersWithRemoteChanges:
_syncRequest:
_syncResultForFolderWithURL:newTag:newSyncToken:actions:changeIdContext:isInitialSync:arePartialResults:
_tearDownABNotifications
_testRecord
_touchedDatabase
_typeOfDAVContainer:
_updateMeCard
_updateMeTaskGroup:didFinishWithError:
_updateStoredMeCardWithURL:
_urlRequest
_uuidToPersonCache
_validateAndSync:
aa_altDSID
aa_firstName
aa_isAccountClass:
aa_isSuspended
aa_lastName
aa_updatePropertiesForAppleAccount:completion:
abChangeTrackingID
abCloseDBAndSave:
abDB
abDefaultAccountInfoSuitableForLogging
abOpenDBWithClientIdentifier:
abPersonChangeId
abProcessAddedImages
abProcessAddedRecords
abSaveDB
abValidateDefaultSource
absoluteString
account:isValid:validationError:
accountByCreatingAccountWithExternalIdentifier:
accountDescription
accountID
accountProperties
accountPropertyForKey:
accountStore
accountTypeWithAccountTypeIdentifier:
accountWithIdentifier:
accountsType
action
actionFailed:forTask:error:
actionsDataSource
actionsFinalizer
actionsForContacts:isPrimaryAppleAccount:isU18Account:databaseHelper:inFolderWithURL:blacklistedUUIDs:blacklistedURLs:maxImageSize:maxResourceSize:containerIsRestricted:outTouchedDB:
actionsForGroups:isPrimaryAppleAccount:isU18Account:databaseHelper:inFolderWithURL:blacklistedUUIDs:blacklistedURLs:maxImageSize:maxResourceSize:containerIsRestricted:outTouchedDB:
actionsForGroups:isPrimaryAppleAccount:isU18Account:inFolderWithURL:databaseHelper:blacklistedUUIDs:blacklistedURLs:maxImageSize:maxResourceSize:outTouchedDB:
actionsHandler
addChildWithDelegateInfo:
addFailureBlock:
addObject:
addObjectsFromArray:
addObserver:selector:name:object:
addSuccessBlock:
additionalHeaderValues
addressBook
addressBookHomes
addressBooks
addressBooksByFolderURL
aida_accountForiCloudAccount:
allContainers
allContainersForAccountWithExternalIdentifier:
allHTTPHeaderFields
allObjects
allValues
altDSIDForAccount:
andPredicateWithSubpredicates:
anyObject
appendData:
appleIDForAccount:
applyRefreshedValuesFromPropFind:toContainer:
arePropertiesReadonly
array
arrayByAddingObjectsFromArray:
arrayWithCapacity:
arrayWithObjects:count:
asABGroup
asContact
asContainer
asPerson
asSource
authenticationMethod
autorelease
backingAccountInfo
backingAction
bestMePicker
boolValue
bulkRequests
cTag
canAccessCredentialsWithAccessibility:
cancelTask:
cardDAVRecordItem
cdvActionsFromDAActions:
changeAnchor
changeContext
changeHistoryClerk
changeHistoryIsValid
changeHistoryResult
changeHistoryTruncated
changeHistoryWithFetchRequest:error:
changeID
changeId
changeTrackingID
changeType
changedItem
changesTruncated
childAccounts
class
clearChangeHistoriesWithChangeIdContext:pushedActions:inContainer:changeTrackingID:
clearChangesForActions:inContainer:changeTrackingID:
clearChangesToAnchor:changeTrackingID:inContainer:
clerkWithAddressBook:
clerkWithContactStore:
clientID
clientInfoHeader
cnChangeAnchor
coalesceExistingActions:withNewlyGeneratedActions:discardActionHandler:
code
collectDelegateInfoReturningError:
collectDelegatesForAccount:error:
compressRequests
conformsToProtocol:
consumer
consumerForTask:
contactChangeIDs
contactChanges
contactFromItem:
contactIdentifier
contactStore
contacts
contactsByExternalIdentifier
contactsByFilteringOutContacts:withoutExternalIUUID:
contactsByFilteringOutContacts:withoutExternalIdentifier:
contactsFolderWithId:successfullyPushedActions:
contactsInContainer:
contactsProvider
contactsWithExternalHREFs:container:
contactsWithExternalUUIDs:container:
containerInfoTask:completedWithContainers:error:
containerPropertiesToFetchDuringRefresh
containerProvider
containerQueryTask:completedWithFoundItems:error:
containerQueryTask:completedWithFoundItems:limitReached:error:
containerSyncTask:completedWithNewCTag:newSyncToken:addedOrModified:removed:error:
containerSyncTask:retrievedAddedOrModifiedActions:removed:
containerTitle
containerURLs
containerWithExternalIdentifier:forAccountWithExternalIdentifier:
convertToDAContactSearchResultElement
copy
copyAllLocalURLsInFolderWithURL:
copyCDVActionFromDAAction:
copyDAActionFromCDVAction:
copyExistingContactForItem:inStore:
copyImageContentsAtURL:outError:
copyLocalETagsForURLToETagDict:inFolderWithURL:
copyLocalETagsForURLs:inFolderWithURL:
copyPropPatchTask
copyStorageSession
count
countByEnumeratingWithState:objects:count:
countOfGroups
createNewContainerWithType:name:externalIdentifier:constraintsPath:syncData:contentReadonly:propertiesReadonly:forAccount:
createOrphanedABRecordFromParsedVCardOutRecordType:
currentHandler
currentImplementationClass
currentRequest
currentRunLoop
customConnectionProperties
daActionsFromCDVActions:
da_absoluteURLForChildLeastInfoRepresentationRelativeToParentURL:
da_leastInfoStringRepresentationRelativeToParentURL:
da_newGUID
dataFromPropertyList:format:errorDescription:
dataSourceWithAddressBook:
dataSourceWithContactStore:
dataTaskWithRequest:
databaseHelper
dataclassProperties
dateWithTimeIntervalSinceNow:
debugDescription
defaultCenter
defaultSession
defaultSessionConfiguration
delegateDidCompleteRefresh:
delegateProvider
deleteContact:
deleteFromContainer:
deleteFromContainer:account:
deleteOrphanDatabasesLackingRepresentationInDelegateInfos:
description
dictionary
dictionaryWithCapacity:
directoryGatewayURLs
discoverInitialPropertiesWithConsumer:
discoveryTask:gotAccountInfo:error:
displayAccount
domain
doubleValue
dsid
eTag
enabledForDADataclass:
enumerateContactsWithFetchRequest:error:usingBlock:
enumerateKeysAndObjectsUsingBlock:
error
errorWithDomain:code:userInfo:
exceptionWithName:reason:userInfo:
executeAllSaveRequests
executeChangeHistoryClearRequest:error:
existingChildAccountsWithProperty:
externalID
externalIdentifier
externalModificationTag
externalURL
externalUUID
extractContactActionsFromExistingActions:
extractGroupActionsFromExistingActions:
failedToFinishInitialSync:error:
failedToRetrieveAddressBookURLsWithError:
failedToUpdateServerMeCardWithError:
familyCircle
familyDelegateAltDSID
fetchInterval
fetchedAccountWithExternalIdentifier:
fetchedImageData
fetchingImageDataRefCount
finalizerWithAddressBook:
finalizerWithContactStore:
finishFutures:
finishInitialSyncOfContactsFolder:previousTag:uuidsToAddActions:hrefsToModDeleteActions:useCRUD:maxResources:maxSize:consumer:context:
firstObject
flatMap:
folder
folderID
folderURL
fragment
generateActionsForContacts:databaseHelper:inFolderWithURL:blacklistedUUIDs:blacklistedURLs:maxImageSize:maxResourceSize:outTouchedDB:reportingBlock:
generateActionsFromContactChanges:databaseHelper:storeURL:maxImageSize:maxResourceSize:outTouchedDB:
generateActionsFromGroupChanges:databaseHelper:storeURL:maxImageSize:maxResourceSize:outTouchedDB:
getAccountPropertiesTask:completedWithError:
getAppleIDSession
getDAAccount
grandSlamAppToken
groupByFilteringOutGroups:withoutExternalIdentifier:
groupByFilteringOutGroups:withoutExternalUUID:
groupChanges
groups
groupsByExternalIdentifier
groupsInContainer:
groupsMatchingPredicate:error:
groupsProvider
groupsWithExternalHREFs:container:
groupsWithExternalUUIDs:container:
guardianRestricted
handleAction:forContainer:inAccount:withFolderURL:isInitialSync:arePartialResults:syncInfo:heldAsideGroups:
handleFailureInMethod:object:file:lineNumber:description:
handleValidationError:completion:
handlerWithAddressBook:
handlerWithContactStore:
hardCodedPrincipalPathForDSID:
hasBeenPersisted
hasOutstandingABChanges
hasPrefix:
hasRemoteChanges
hasWriteContentPrivileges
hasWritePropertiesPrivileges
hash
host
hostFromDataclassPropertiesForDataclass:
hostOverride
hrefToETag
hrefToErrorItems
hrefToStatus
iOSLegacyIdentifier
identifier
ignoresGuardianRestrictions
imageError
imageFetchTask
init
initWithABPerson:
initWithAccount:
initWithAccountInfoProvider:containerURLs:directoryGatewayURLs:taskManager:
initWithAccountInfoProvider:taskManager:
initWithAccountInfoProvider:taskManager:homeURL:cardURL:
initWithAccountType:
initWithAction:context:
initWithAction:externalUUID:externalURL:
initWithAddressBook:
initWithBackingAccountInfo:
initWithCDVScheme:user:password:host:port:path:parameterString:query:fragment:
initWithCDVScheme:user:password:host:port:path:query:fragment:
initWithCapacity:
initWithChangedItem:propertyName:value:propertyNamespace:serverId:
initWithClientIdentifier:
initWithContact:
initWithContactStore:
initWithContacts:groups:
initWithContactsFamilyDelegateAltDSID:familyDelegateACAccountID:
initWithDAEditPropertyAction:
initWithDelegateInfoProvider:accountID:databaseHelper:
initWithFolder:hasRemoteChanges:isInitialUberSync:
initWithFolderURL:checkCTag:uuidsToAddActions:hrefsToModDeleteActions:context:accountInfoProvider:taskManager:
initWithFolderURL:previousCTag:previousSyncToken:actions:syncItemOrder:context:accountInfoProvider:taskManager:appSpecificDataItemClass:
initWithGroup:
initWithIdentifier:
initWithItemChangeType:changedItem:serverId:
initWithItemChangeType:changedItem:serverId:instanceId:
initWithKeysToFetch:
initWithNameSpace:andName:
initWithObjectsAndKeys:
initWithPropertiesToFind:atURL:withDepth:
initWithPropertiesToSet:andRemove:atURL:
initWithSearchString:searchLimit:atURL:appSpecificDataItemClass:
initWithURL:cachePolicy:timeoutInterval:
initWithURL:eTag:dataPayload:inContainerWithURL:withAccountInfoProvider:
initialActionsDataSource
instanceId
intValue
integerValue
interfaceWentDown
intersectSet:
invalidImageType
invalidateAndCancel
isAccount
isAccountOwnerChildInFamilyCircle
isAddressBook
isChangeHistoryTruncated
isContact
isContainer
isContentReadonly
isDelegateAccount
isDelegateChildFamilyMember:
isEqual:
isEqualToAccount:
isEqualToDictionary:
isEqualToString:
isForgivableError:
isGuardianRestricted
isGuardianStateDirty
isInitialSync
isInitialUberSync
isKindOfClass:
isMemberOfClass:
isMonitoring
isPrimaryICloudAccount
isResyncAfterConnectionFailed
isSearchAddressBook
isSearchContainer
isSharedAddressBook
isSuccess
isTypeCardDAVSearchable:
isValidating
isWaitingForPassword
itemChangeType
itemForContactChange:
itemForGroupChange:
itemWithABRecord:addressBook:outNeedsDBSave:maxImageSize:maxResourceSize:inContainerWithURL:
itemWithDACardDAVRecord:contactStore:outNeedsDBSave:maxImageSize:maxResourceSize:inContainerWithURL:
keyVector
keychainAccessibilityType
keysToFetch
lastPathComponent
lastRetryTimeout
latestChangeAnchor
latestSequenceNumber
legacyIdentifier
length
loadClientIDs
loadLocalItemWithAccount:
localItemForExternalURL:forContainer:withStoreURL:
lock
logGaveUpAcceptedEmptyResponseContainerSyncTask:retryCount:
logRetryAfterEmptyResponseContainerSyncTask:retryCount:
logSummaryForCardDAVActions:partialResults:initialSync:syncPhase:syncAccount:
mAddressBooks
mAddressBooksByFolderURL
mPushKeysToFolderURLs
mSearchAddressBooks
mapTableWithStrongToStrongObjects
markAsDefault
markedForDeletion
matchMode
matchedRecord
matchingContactForExternalID:
matchingGroupForExternalID:inContainer:
maxImageSize
maxImageSizeFromSyncDict:
maxResourceSizeFromSyncDict:
maxResults
meCardURL
meContactInContainer:
meFolderURL
meIdentifier
mergeAllRecordsIntoContainer:shouldInsertChangeHistoryRecords:
moveToLocalStoreContacts:groups:
multiStatus
mutableContact
mutableCopy
name
newDAContainerForContainer:
nextCTag
noUIDConflict
noteHomeSetOnDifferentHost:
numberWithInt:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
observeReachabilityWithBlock:
onBehalfOfBundleIdentifier
orderedResponses
os_log
os_log_summary
parentAccount
parentAccountForAccount:
password
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
person
personPredicateWithGroup:source:account:
personPredicateWithPhoneLike:countryHint:addressBook:
personPredicateWithValue:comparison:forProperty:
pickBestMeContactForGivenName:familyName:primaryEmail:
pickerWithAddressBook:
pickerWithContactStore:
port
portFromDataclassPropertiesForDataclass:
portOverride
predicateForContactsInContainerWithIdentifier:
predicateForContactsMatchingEmailAddress:
predicateForContactsMatchingName:options:
predicateForContactsWithIdentifiers:
predicateForGroupsInContainerWithIdentifier:
predicateForGroupsWithIdentifiers:
predicateShouldContinue:
predicateShouldContinue:afterFindingRecord:
predicateShouldContinue:afterFindingRecord:metadata:
predicateShouldContinue:afterFindingRecord:moreComing:
prepareChangeHistoryForClientWithIdentifier:forContainer:withChangeContext:
prepareToGenerateInitialActionsWithContext:
prettyStringForDisplayName
previousCTag
previousFailureCount
principalPath
principalURL
privileges
propertyListFromData:mutabilityOption:format:errorDescription:
propertyName
propertyNamespace
proposedCredential
providerWithAddressBook:
providerWithContactStore:
publicContainerProviderSummaryInfo
publicDescription
pushDisabled
pushKeysToFolderURLs
pushTransport
pushTransports
pushedActionsByTaskGroup
pushedActionsForTaskGroup:
query
refreshCollections:withReason:
refreshFolderListRequireChangedFolders:isUserRequested:
refreshPropertiesOfAllContactFoldersWithCompletion:
registerAccount:forOperationWithName:
registerClientWithIdentifier:forContainer:
registerDelegate:
registerTopic:forDelegate:inEnvironment:
registerWaiter:forDataclassLocks:completionHandler:
relinquishLocksForWaiter:dataclasses:moreComing:
reload
removeAccount:
removeAllObjects
removeConsumerForTask:
removeDelegateDatabasesNotMatchingAltDSIDs:
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removeObserver:name:object:
removePushedActionsForTaskGroup:
requestAgentStopMonitoringWithCompletionBlock:
resetAccountID
respondsToSelector:
resume
retain
retainCount
retryRefreshForDelegate:withCollections:after:originalRefreshReason:
runMode:beforeDate:
saveAccount:
saveAccountProperties
saveIfGroupWithLocalObject:toContainer:shouldMergeProperties:outMergeDidChooseLocalProperties:account:
saveVerifiedAccount:withCompletionHandler:
saveWithLocalObject:toContainer:containerURL:shouldMergeProperties:outMergeDidChooseLocalProperties:account:shouldSaveGroups:
saveXpcActivity:
scheduleIdentifier
scheme
searchQuery:finishedWithError:
searchQuery:returnedResults:
searchString
searchTaskSet
self
sendMeCardEverywhere
sequence:
serverID
serverId
serverTokenRegistrationURL
sessionWithConfiguration:delegate:delegateQueue:
setAbGroupChangeId:
setAbPersonChangeId:
setAccountIdentifier:
setAccountInfoProvider:
setAccountsType:
setActions:
setArePropertiesReadonly:
setAuthenticationType:
setBestMeCard
setCTag:
setChangeContext:
setChangeHistoryResult:
setChangeHistoryTruncated:
setChangeId:
setCnChangeAnchor:
setCompletionBlock:
setConstraintsPath:
setConsumer:forTask:
setContactChangeIDs:
setContactStore:
setContactsByExternalIdentifier:
setContainerIdentifier:
setContentReadonly:
setContext:
setDataclass:
setDefaultContainer:withLocalDBHelper:onlyIfNotSet:
setDefaultSession:
setDelegate:
setDiscretionary:
setETag:
setEnsureUpdatedCTag:
setExternalIdentifier:
setExternalModificationTag:
setExternalUUID:
setFetchImageError:
setFetchedImageData:
setFetchingImageDataRefCount:
setFolderID:
setFolderName:
setGroupChangeIDs:
setGroupsByExternalIdentifier:
setGuardianRestricted:
setGuardianStateDirty:
setHasOutstandingABChanges:
setHasRemoteChanges:
setHighestChangeID:
setHomeURL:
setHost:
setHostOverride:
setImageFetchTask:
setIncludeChangeIDs:
setIncludeExternalIDs:
setIncludeGroupChanges:
setIncludeImagesChanged:
setIsInitialSync:
setIsInitialUberSync:
setIsMonitoring:
setIsWaitingForPassword:
setLastRetryTimeout:
setLastSyncDateForContainer:
setLatestSequenceNumber:
setLocalETag:forItemWithURL:inFolderWithURL:
setLocalItem:
setMAddressBooks:
setMAddressBooksByFolderURL:
setMPushKeysToFolderURLs:
setMSearchAddressBooks:
setMarkedForDeletion:
setMatchMode:
setMatchedRecord:
setMaxRetryOnUnexpectedSyncTokenChange:
setMeCardURL:
setMeContact:error:
setMeContactIdentifier:
setMultiPutBatchMaxNumResources:
setMultiPutBatchMaxSize:
setName:
setObject:forKey:
setObject:forKeyedSubscript:
setParentAccount:
setPayloadAsString:
setPort:
setPortOverride:
setPredicate:
setPropertiesOnAccount:
setPushTransport:
setPushedActionsByTaskGroup:
setSearchTaskSet:
setShouldDoInitialAutodiscovery:
setShouldUseOpportunisticSockets:
setSortOrder:
setStartedWithNoContacts:
setSyncData:
setSyncTag:
setSyncWhenReachable:
setTestRecord:
setToChangeAnchor:
setTouchedDatabase:
setType:
setURLCache:
setUUIDToPersonCache:
setUnifyResults:
setUpLocalDBHelper:
setUrlRequest:
setUseSSL:
setUseSSLOverride:
setUuidToPersonCache:
setValue:forHTTPHeaderField:
setWasUserInitiated:
setWithArray:
setWithObject:
set_appleIDContext:
set_sourceApplicationBundleIdentifier:
set_sourceApplicationSecondaryIdentifier:
setupCardDAVDelegateManager:
sharedBabysitter
sharedGateKeeper
sharedKeychain
sharedManager
sharedMonitor
shouldAutodiscoverAccountProperties
shouldCompressRequests
shouldDoInitialAutodiscovery
shouldFailAllTasks
shouldHandleHTTPCookiesForURL:
shouldSendClientInfoHeaderForURL:
shutdown
startTaskGroup
startedWithNoContacts
statusCode
stopObservingReachability
stringByTrimmingCharactersInSet:
stringValue
stringWithFormat:
submitIndependentCoreDAVTask:
submitIndependentTask:
successfulPropertiesToValues
successfullyFinishedInitalUploadForFolderWithID:container:guardianRestrictedUUIDs:guardianRestrictedHREFs:blacklistedUUIDs:blacklistedHREFs:context:
successfullyRetrievedAddressBookURLs
successfullyUpdatedServerMeCardWithURL:
superclass
supportsAuthentication
syncAddressBookURLsWithConsumer:
syncBulkChangeTask:error:
syncBulkChangeTask:parentTaskGroup:completedWithError:
syncData
syncDeleteTask:error:
syncDeleteTask:parentTaskGroup:completedWithError:
syncFolderIDs:forDataclasses:isUserRequested:
syncPostTask:data:error:
syncPostTask:postedData:parentTaskGroup:error:
syncPropPatchTask:parsedResponses:parentTaskGroup:completedWithError:
syncPutTask:completedWithNewETag:error:
syncPutTask:completedWithNewETag:parentTaskGroup:error:
syncResultForContactsFolder:newTag:previousTag:newSyncToken:actions:results:changeIdContext:isInitialSync:moreAvailable:moreLocalChangesAvailable:pushedActions:
syncStoreIdentifier
synchronizeContactsFolder:previousTag:previousSyncToken:actions:highestIdContext:isInitialUberSync:isResyncAfterConnectionFailed:previousTagIsSuspect:moreLocalChangesAvailable:consumer:
task:didFinishWithError:
taskGroup:didFinishWithError:
taskManager
testRecord
token
transactionId
trustHandler
type
unionSet:
unlock
unmonitorAccount:
unregisterAccount:forOperationWithName:
unregisterClientWithIdentifier:forContainer:
unregisterDelegate:
unregisterTopic:forDelegate:inEnvironment:
unregisterWaiterForDataclassLocks:
unsignedIntegerValue
updateContact:
updateMeCardWithWithConsumer:
updateSaveRequest:
updateSyncDict:withDAVContainer:
urlRequest
useContactsFramework
useSSL
useSSLFromDataclassPropertiesForDataclass:
useSSLOverride
useThunderhillBetaServers
user
userInfo
username
uuidToErrorItems
uuidToHREF
uuidToPersonCache
validAddressData
value
waiterID
wasUserInitiated
watchedCollections
whitespaceCharacterSet
wrappedRecordFromRecord:
zone
Clearing Person change index %d
Clearing Group change index %d
Malformed CardDAVVCardItem: %@
Change context reports this is an initial sync or changes otherwire truncated. Setting our change history cursor the change sequence when history was fetched: %d
Couldn't get a store or database to clear AddressBook changes
Clearing %@ changes in store %d to index %d
CardDAVDelegateiCloudDaemonAccount for %@ (%{public}@) does not have a familyDelegateAltDSID, failing setup!
Unable to determine principalPath for account "%@" (%{public}@)
Unable to determine host for account "%@" (%{public}@)
Unable to determine port for  %@ (%{public}@), falling back to 443
Checking auth status for account %@ (%{public}@)
Not attempting request for account %@ because the parent account credential isn't authed %{public}@
Not attempting request for account %{public}@ because the parent account needs to verify terms or is suspended. %{public}@
Not attempting request for account %{public}@ because we don't have access to keychain items with accessibility %d right now
Unable to obtain authentication account for account "%@" %@{public}
Home set is on a different host. Updating overrides for account "%@" (%{public}@)
Account "%@" (%{public}@) is waiting for a password, so we're going to ignore this refresh request
Account "%@" (%{public}@) thinks it should fail all tasks.  Doing so
Account "%@" (%{public}@) doesn't have a principal URL. Running autodiscovery.
Account "%@" (%{public}@) isn't reachable. Deferring sync.
Handling CNContactStoreDidChangeNotification for account "%@" (%{public}@); sync will occur
Account "%@" (%{public}@) was successfully autodiscovered, saving account settings
Got a password from the user. Attempting autodiscovery again for account "%@" (%{public}@)
Account "%@" (%{public}@) can't figure out its principalPath, and we couldn't get a password from the user 
We'll refresh if we find a better network connection.
reachability indicates that the network is reachable.  We're going to retry our folder sync with %{public}@.
Network is now reachable; sync will occur
DA just woke up; sync will occur with %{public}@.
The CardDAV agent was told to stop monitoring with %{public}@.
Account doesn't have a principal URL. Running autodiscovery.
Not syncing ab hierarchy, as I'm in the middle of doing that
Asked to sync folder with id %@, but I only know of these folders %@
DA retry machinations; sync will occur
Yikes: %s %@ error code:%ld error domain:%{public}@ error:%@
Initial sync failed, queue retry
Me-card sync failed, queue retry
Will avoid to block dataaccessd for too long during initial sync - slowing down pushes
Will avoid using too much memory during initial sync - slowing down pushes
Pushing %d people%s
started initial sync for %@ with no contacts - won't try to match people
Could not save local container
The server told us to try again after %f seconds.
The server returned a 503, but didn't give us a retry-after header. We'll retry again after %f seconds
We got another 503 error, but we've already backed off for 8 minutes. Giving up and retrying again at our regularly scheduled time
Daemon is ignoring task %@ which failed with status %ld and error %@
The babysitter put us in timeout, so we're going to fail this sync. %@
Syncing account "%@" (%{public}@) -- started
Syncing account "%@" (%{public}@) -- %{public}@
Agent %{public}@ asked to sync folder with id %@, but I have no matching container
My ctag of %@ is suspect, I'll get a new one
external change, folder %@
Treating request as an initial sync as our change history is invalid
This isn't an initial sync request, yet change history was truncated for our cursor. DA never expects truncation after initial sync and does not implement reconciliation. Truncation will be cleared at the conclusion of sync but this account is now in an inconsistent state with the address book database.
Blasting whitespace before first time sync
Blasted whitespace before first time sync
Default source %{public}@
Default source : <none>
%lu changes for account "%@" (%{public}@)
returning early, as we have a folder change with no remote changes, and no local changes
DATransaction starting, ID: %@
lock for %@ aborted
CardDAVAgent: locks granted for dataclasses %lx
%s: asked to sync folder request %@, but that has no server id.  Dropping this sync on the floor
Appending a sync request for folder %@
Got AB URLs from our daemon account, going to sync my folders
Yikes: %s error code:%ld error domain:%{public}@ error:%@
network unreachable during folder sync. Waiting for reachability to signal a retry.
refreshPropertiesOfAllContactFoldersWithCompletion: %@ failed to acquire data class lock, skipping container property update and aborting sync.
DA refresh machinations; sync will occur
Could find parent ACAccount of CardDAV Account %@
Could not determine altDSID for account %@. Returning assumption that account holder is not U18.
FamilyCircle lookup failed for account %@ with error: %@. Returning assumption that account holder is not U18.
Container sync task %@ completed with next cTag %@, next synctoken %@, add/modify count %lu, remove count %lu, error %@
Syncing account "%@" (%{public}@) -- sync completed with error: %@ %{public}@
Syncing account "%@" (%{public}@) -- sync complete
Our ab store went missing mid sync. Shenanigans!
Syncing account "%@" (%{public}@) -- server requested %lu etags, we matched %lu
Our ab store went missing mid sync.  Shenanigans!
Found a contact with full path %@, which I can't make into a URL relative to %@
Found a group with full path %@, which I can't make into a URL relative to %@
Syncing account "%@" (%{public}@) - server requested local urls, we provided %lu
The babysitter put us in timeout. Failing initial contacts sync. %@
Folder with id %@ supports bulk upload.  Using it
Asked to do a bulk upload to folder id %@, but it doesn't support it.  Failing
bulk upload task group %@ completed with error %@
Bulk upload finished, but I have no store for it!
For uuid %@, I have new href %@, but no local record
For href %@ with no uuid, I can't find my local record
For href %@, I have new etag %@, but no local record
For href %@, I have a 404, but no local record to de-href
Blacklisting UUID %{public}@ with error item:  %{public}@
Server rejected action for item with UUID %{public}@ because the target container is guardian restricted
An error item was returned for UUID  %{public}@ but we are not blacklisting the associated record. Error: %{public}@ child items: %{public}@
Blacklisting HREF %@ with error item: %@
Server rejected action for item with HREF %{public}@ because the target container is guardian restricted
An error item was returned for HREF %{public}@ but we are not blacklisting the associated record. Error: %{public}@ child items: %{public}@
Unacceptable DAAction %@.  Not handing it to CoreDAV
Unacceptable CoreDAVAction %@.  Not handing it to DA
The babysitter put us in timeout. Failing this sync. %@
Creating AB store for account %@
containerInfoTask for %@ completed with %lul containers, error: %{public}@ 
container info %@
Ignoring push transports from additional home set %@
Ignoring Me card from additional home set %@
Me card URL is %@
Container type from the server (%{public}ld) differs from our records (%{public}ld). Changing local type to (%{public}ld).
Unregistered container from change history because the server reports it to be a search node, yet we had categorized it as storage.
Registered container with change history because the server reports it as storage, yet we had categorized it as a search node.
The babysitter put us in timeout. Failing to sync AB URLs. %@
DEBUG: Filling in %lu containers for externalIdentifier: %{public}@
Got unexpected nil externalURL, skipping constructing a DAFolder for account with identifier: %{public}@, container with identifier: %{public}@, homeURL: %{public}@
Sending CardDAV search results back to consumer %@.
Query: %@
Results: %@
CardDAV search task %p was cancelled
The CardDAV search returned an error: (%@)
cancelling search query %@
Looking for Me card as seen on server. Folder URL: %@ - Me Card URL: %@
Server Me card %@ as seen on server not found locally
Server me card: %@ - stored one: %@
Updating known server me card to %@ in %@
Local me card: %@ - Distant me card: %@
No local me card, will use server provided one
Updating me card from server
Can't set me card from distant me card %@, identifier %d
Not updating distant me card, externalIdentifier would not change
Not updating distant me card, allowDistantUpdate is NO
Updating me card on server
Missing required container identifier
Change history not cleared: %@ error: %@
Change history not cleared: %@ error: %@ 
Unexpected error: no change history elements to clear.
A preset action for a sync request wanted a modify, but we have no server id.  Dropping the modify of %@
A preset action for a sync request didn't have an associated local event in the db action %@
A preset action for a sync request had change type %lu, which is unsupported.  Dropping that action
Looking at change with id %d type %d externalURL %@
Clearing change index %d
_addChange for type %lu, changedItemId %@ changeId %@ addedIds %@ modifiedIds %@ deletedIds %@, changeIdsToClear %@
Found a delete of a record with no external id.  Dropping this delete on the floor
adding %@
updating %@
saved %@, server id %@, clientID %@
Holding aside group with server id %@
Unexpected ABRecordType for item %@
Predicate %@ matched contact %@ with local id %d
Found a last chance matching using %@
Found no match for contact %@
Error: somebody has already set the latest sequence number for the contacts change context despite this being initial sync.
Not pushing person with uuid %@ href %@ because the server rejected it
Not pushing group with uuid %@ href %@ because the server rejected it
Syncing error; we should never be generating new DAActions with a nil change history
Syncing error; we should never be generating new DAActions with a invalid change history
discarding existing CONTACT DAAction of type: %ld change: %d
Unexpected result when clearing change %@ error %@
discarding existing GROUP DAAction of type: %ld change: %d
Unexpected error fetching change history for %@ (error: %@)
Odd, fetching change history for %@ resulted in truncated changes.  This should be very rare.
Local contact changes: %lu for %@
Local group changes:  %lu for %@
Unexpected nil change history; call fetchChangeHistoryForClientWithIdentifier before calling this
Unable to sync contact delete %@; externalID from tombstone nil
generating DAItemChangeTypeAdd action for CONTACT CNChangeHistoryChangeTypeAdd with identifier: %@ anchored at: %@ in container: %@ 
generating DAItemChangeTypeModify action for CONTACT CNChangeHistoryChangeTypeUpdate with identifier: %@ anchored at: %@ in container: %@ 
generating DAItemChangeTypeDelete action for CONTACT CNChangeHistoryChangeTypeDelete with identifier: %ld anchored at: %@ in container: %@ 
encourtered unsupported CONTACT CNChangeHistoryChangeType %ld
Unexpected error looking up changed group for %@; error %@
generating DAItemChangeTypeAdd action for GROUP CNChangeHistoryChangeTypeAdd with identifier: %ld anchored at: %@ in container: %@ 
generating DAItemChangeTypeModify action for GROUP CNChangeHistoryChangeTypeUpdate with identifier: %ld anchored at: %@ in container: %@ 
generating DAItemChangeTypeDelete action for GROUP CNChangeHistoryChangeTypeDelete with identifier: %ld anchored at: %@ in container: %@ 
encountered unsupported GROUP CNChangeHistoryChangeType %ld
Syncing account "%@" (%{public}@) -- no actions%{public}@
Syncing account "%@" (%{public}@) -- unexpected action %@
Syncing account "%@" (%{public}@) -- %{public}@ actions (add:%lu mod:%lu del:%lu)%{public}@
unexpected issue extracting changed item to classify action %@
unexpected issue classifying action %@
Skipping delegate state update (including account account adds/removes) because we got an error fetching delegates from Family Circle. error:  %@
Unexpected condition updating deletes - no principal path for delegateInfo: %{public}@ %@
Delegate with account ID %@ cannot be saved, error %{public}@
Delegate with account ID %@ can be saved
Delegate with account ID %@ save failed, error %{public}@
Delegate with account ID %@ saved
Delegate with account ID %@ failed to be removed, error %{public}@
Delegate with account ID %@ was successfully removed
Moving along the migration of local store into a CardDAV cocoon
Home set is on a different host. Fetching new AppleAccount properties
Updated account properties are %@
Backing parent AppleAccount was %@saved successfully.
Error fetching AppleAccount properties: %@
Finishing migration of store with id %@ into a pretty CardDAV butterfly
Image URL %@ is invalid for fetching an image
Copying image from URL %@ is aborted because another fetch is in progress
Copying image from URL %@ is starting. Set fetchingImageDataRefCount to 1.
Fetching image at %@ with header fields %@
Could not get photo data from url %@.  Error %@
Fetched image at %@, data at %p
Connection property: %@ is not set
CardDAV NSURLSession Convert: session %p created dataTask %p for %@ %p
CardDAV NSURLSession Convert: could not create dataTask for %@ %p
CardDAV NSURLSession Convert: session %p didBecomeInvalidWithError for %@ %p
CardDAV NSURLSession Convert: session %p didReceiveChallenge for %@ %p
CardDAV NSURLSession Convert: session %p dataTask %p didReceiveChallenge for %@ %p
CardDAV NSURLSession Convert: session %p dataTask %p didCompleteWithError %@ for %@ %p
Completed copying image. Decrement fetchingImageDataRefCount to %d.
Fail to copy image. Decrement fetchingImageDataRefCount to %d.
CardDAV NSURLSession Convert: session %p dataTask %p didReceiveResponse %@ for %@ %p
The server blocked our image data fetch.  Request %@.  Response status code %d
CardDAV NSURLSession Convert: session %p dataTask %p didReceiveData for %@ %p
Adding fetched image data to %p
CardDAV NSURLSession Convert: session %p dataTask %p willCacheResponse for %@ %p
_CardDAVActionsABLegacyFinalizer
CardDAVDelegateiCloudDaemonAccount
CardDAVActionsHandler
CardDAVAgent
CardDAVAddressBookURLsConsumer
NSObject
DAContactsUpdateConsumer
DAActionConsumer
DADataclassLockWatcher
DAValidityCheckConsumer
DARefreshManagerDelegate
CardDAVFinishInitialSyncConsumer
CardDAVMeCardUpdateConsumer
DABabysittable
DAContactsProvider
CardDAVSyncInfo
CardDAVDaemonAccount
CoreDAVLocalDBInfoProvider
CoreDAVTaskGroupDelegate
CoreDAVGetAccountPropertiesTaskGroupDelegate
CoreDAVContainerInfoTaskGroupDelegate
CoreDAVContainerQueryTaskDelegate
CoreDAVTaskDelegate
DAEditPropertyActionAdapter
CoreDAVModifiedContainer
_DABestMeContactContactsPicker
_CardDAVActionsContactsFinalizer
CardDAVActionsDataSource
DAABLegacyContact
DAContact
DACardDAVRecord
_DABestMeContactABLegacyPicker
CardDAVFacebookDaemonAccount
ABLegacyActionsResult
_CardDAVActionsABLegacyDataSource
DABestMeContactPicker
_CardDAVActionsABLegacyHandler
ABPredicateDelegate
_CardDAVInitialActionsABLegacyDataSource
ABMoveLocalAction
DAGroupsProvider
_CardDAVActionsContactsDataSource
_DAABLegacyGroupsProvider
_DAABLegacyContactsProvider
CardDAVActionsLogger
CardDAVActionsFinalizer
DACardDAVActionResult
CardDAVInitialActionsDataSource
CardDAVDelegateManager
CardDAViCloudGetAccountPropertiesTaskGroup
CardDAViCloudDaemonAccount
NSURLSessionDelegate
NSURLSessionTaskDelegate
NSURLSessionDataDelegate
_CardDAVActionsContactsHandler
_DAContactsGroupsProvider
_DAContactsContactsProvider
_CardDAVInitialActionsContactsDataSource
DAContactsContact
@24@0:8^v16
v16@0:8
B48@0:8@16@24@32@40
^v16@0:8
@24@0:8@16
@16@0:8
B16@0:8
B24@0:8@16
q16@0:8
v24@0:8@16
@"CardDAVLocalDBHelper"
@"ACAccountType"
B72@0:8@16@24@32@40B48B52@56@64
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@"NSError"16
v40@0:8q16@24@32
v40@0:8q16@24@"NSError"32
v92@0:8@16@24@32@40@48@56@64B72B76B80@84
v32@0:8@16@24
v92@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@"NSArray"48@"NSArray"56@"ContactFolderItemsSyncContext"64B72B76B80@"NSArray"84
v32@0:8@"NSString"16@"NSArray"24
v36@0:8@16B24@28
v36@0:8@"DAAccount"16B24@"NSError"28
v28@0:8@16i24
v28@0:8@"NSSet"16i24
@"NSSet"16@0:8
@"DAAccount"16@0:8
v24@0:8@"NSObject<OS_xpc_object>"16
@"DATrustHandler"16@0:8
@"NSURL"16@0:8
v72@0:8@16@24@32@40@48@56@64
v72@0:8@"NSString"16@"<DAContainer>"24@"NSSet"32@"NSSet"40@"NSSet"48@"NSSet"56@"ContactFolderItemsSyncContext"64
v32@0:8@"NSString"16@"NSError"24
v24@0:8@"NSURL"16
v20@0:8B16
v24@0:8@?16
v24@0:8B16B20
v36@0:8@16q24B32
B64@0:8@16@24@32@40@48B56B60
v32@0:8@16q24
v28@0:8@16B24
@"NSMutableSet"
@"NSMutableArray"
@"NSLock"
@"NSMutableDictionary"
@"NSURL"
@"NSNumber"
@"CardDAVDelegateManager"
@32@0:8@16@24
v32@0:8@"CoreDAVTaskGroup"16@"NSError"24
v40@0:8@16@24@32
v64@0:8@16@24@32@40@48@56
B40@0:8@16@24@32
B32@0:8@16@24
v32@0:8@16Q24
@"NSDictionary"32@0:8@"NSArray"16@"NSURL"24
@"NSSet"24@0:8@"NSURL"16
v40@0:8@"CoreDAVContainerSyncTaskGroup"16@"NSSet"24@"NSSet"32
v64@0:8@"CoreDAVContainerSyncTaskGroup"16@"NSString"24@"NSString"32@"NSSet"40@"NSSet"48@"NSError"56
@"NSDictionary"32@0:8@"NSDictionary"16@"NSURL"24
B40@0:8@"NSString"16@"NSURL"24@"NSURL"32
B48@0:8@"CoreDAVPutTask"16@"NSString"24@"CoreDAVContainerSyncTaskGroup"32@"NSError"40
B48@0:8@"CoreDAVPostTask"16@"NSData"24@"CoreDAVContainerSyncTaskGroup"32@"NSError"40
B40@0:8@"CoreDAVDeleteTask"16@"CoreDAVContainerSyncTaskGroup"24@"NSError"32
B40@0:8@"CoreDAVBulkChangeTask"16@"CoreDAVContainerSyncTaskGroup"24@"NSError"32
B48@0:8@"CoreDAVPropPatchTask"16@"NSArray"24@"CoreDAVContainerSyncTaskGroup"32@"NSError"40
B40@0:8@"CoreDAVPutTask"16@"NSString"24@"NSError"32
B40@0:8@"CoreDAVPostTask"16@"NSData"24@"NSError"32
B32@0:8@"CoreDAVDeleteTask"16@"NSError"24
B32@0:8@"CoreDAVBulkChangeTask"16@"NSError"24
v32@0:8@"CoreDAVContainerSyncTaskGroup"16Q24
v32@0:8@"CoreDAVGetAccountPropertiesTaskGroup"16@"NSError"24
v40@0:8@"CoreDAVContainerInfoTaskGroup"16@"NSSet"24@"NSError"32
v32@0:8@"CoreDAVTask"16@"NSError"24
v44@0:8@16@24B32@36
v44@0:8@"CoreDAVContainerQueryTask"16@"NSSet"24B32@"NSError"36
v40@0:8@"CoreDAVContainerQueryTask"16@"NSSet"24@"NSError"32
B84@0:8@16@24@32@40B48q52q60@68@76
v80@0:8@16@24@32@40@48B56B60B64B68@72
@20@0:8B16
i24@0:8@16
B20@0:8i16
@24@0:8^@16
B28@0:8@16B24
@"NSDictionary"
@"NSMapTable"
@"CoreDAVPropPatchTask"16@0:8
@"DAEditPropertyAction"
@"CNContactStore"
@96@0:8@16B24B28@32@40@48@56q64q72@80^B88
v24@0:8@"CNSaveRequest"16
i16@0:8
v24@0:8@"NSString"16
@"CNMutableContact"16@0:8
v24@0:8Q16
v20@0:8i16
@"NSArray"
B28@0:8I16@20
@72@0:8I16^v20@28@36@44q52q60B68
v72@0:8Q16@24@32@40@48@56@64
B40@0:8I16i20Q24^B32
B56@0:8I16i20Q24@32^@40^B48
B32@0:8@16^v24
B40@0:8@16^v24@32
B36@0:8@16^v24B32
B44@0:8@16^v24@32B40
B24@0:8@"NSPredicate"16
B32@0:8@"NSPredicate"16^v24
B40@0:8@"NSPredicate"16^v24@"NSDictionary"32
B36@0:8@"NSPredicate"16^v24B32
B44@0:8@"NSPredicate"16^v24@"NSDictionary"32B40
^v40@0:8@16^v24@32
^v32@0:8@16^v24
v24@0:8^v16
v88@0:8@16@24@32@40@48q56q64^B72@?80
@92@0:8@16B24B28@32@40@48@56q64q72B80^B84
@64@0:8@16@24@32q40q48^B56
@40@0:8@16@24@?32
@"CNChangeHistoryResult"
v48@0:8@16B24B28@32@40
@24@0:8Q16
Q24@0:8@16
@40@0:8@16@24@32
@"DAAction"
@"NSString"
@"<CardDAVDelegateInfoProvider>"
@"ACAccountStore"
v40@0:8@16@24@?32
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
v24@0:8q16
@32@0:8@16^@24
v32@0:8@16@?24
@"NSURLSession"
@"NSURLSessionDataTask"
@"NSMutableData"
@"NSError"
@"NSMutableURLRequest"
@88@0:8@16B24B28@32@40@48@56q64q72^B80
@"CNMutableContact"
^{__CFDictionary=}24@?0^v8^v16
Person
Group
CardDAVDelegateiCloudDaemonAccount %p: accountID: %@ parentAccount: %@ dsid: %@
%@ %@
https
X-APPLE-FAMILY-AUTH-TOKEN
X-MMe-Client-Info
com.apple.gs.icloud.family.auth
CardDAVActionsHandler.m
Subclasses implement
v8@?0
com.apple.dataaccess
summary
v12@?0B8
v24@?0q8@"NSError"16
CTagIsSuspect
NeedInitialSync
CardDAVAgent.m
Actions data source called us after we told it to stop. Is it ignoring the block return value?
B24@?0@"<DAContact>"8@"DACardDAVActionResult"16
 (pushed all)
BulkRequests
in server results phase
retry-after
CardDAVSyncRequest
<summary unavailable>
contacts: %lu, groups: %lu
v20@?0q8B16
-[CardDAVAgent _fireWaitingFolderItemSyncRequests]
Attempted to queue a sync request for a folder with no folder id: %@
com.me.
com.apple.contact.
com.icloud.
APSD
PRODUCTION
production
SANDBOX
DEVELOPMENT
development
demo
v32@?0@"DAFolder"8@"CoreDAVPropFindTask"16@"<DAContainer>"24
v16@?0B8B12
@"NSNumber"8@?0
@8@?0
B16@?0@"FAFamilyMember"8
contactsInContainer: is abstract
meContactInContainer: is abstract
contactFromItem: is abstract
contactsWithHREFs: is abstract
contactsWithExternalUUIDs: is abstract
countOfContacts: is abstract
countOfGroups: is abstract
CardDAVSync
CardDAVInitialUpload
v24@?0@"NSString"8@"NSURL"16
v32@?0@"NSURL"8@"NSString"16^B24
v32@?0@"NSString"8@"CoreDAVErrorItem"16^B24
v32@?0@"NSURL"8@"CoreDAVErrorItem"16^B24
from local contact store
CardDAV
CardDAVSyncABURLS
CardDAVValidityCheck
v24@?0@"CNContact"8^B16
CardDAV-actionsfinalizer
CardDAVActionsDataSource.m
DAABLegacyContact cannot update CNSaveRequest
DAABLegacyContact cannot return a CNContact
webdav.beta.facebook.com
true
false
%@.vcf
pickBestMeContactForGivenName
v12@?0i8
groupsInContainer: is abstract
groupsWithExternalHREFs: is abstract
groupsWithExternalUUIDs: is abstract
CardDAV-actions
v16@?0@"DAAction"8
Yup, busted for %@
%@%@ %@
(partial)
(initial)
unclassifable
undetermined
contact
group
CardDAVActionsFinalizer.m
prepareToGenerateInitialActionsWithContext: is abstract
actionsForContacts: is abstract
actionsForGroups: is abstract
@"CNFuture"16@?0@"ACAccount"8
@16@?0@"CardDAVDelegateInfo"8
parent
v16@?0@"NSError"8
v16@?0@8
@"CNFuture"16@?0@"NSNumber"8
CardDAVAccountPrincipalURL
v20@?0B8@"NSError"12
NOT 
com.apple.mobilesync
v32@?0@"NSString"8@"NSString"16^B24
CardDAVImageFetch
CardDAViCloudDaemonAccount
CardDAV-actionshandler
CardDAV-actions-initial
DAContactsContact cannot return an ABRecordRef
CDVURLWithUser:
APSTopicHasValidPrefix:
T@"NSString",R,N,V_externalUUID
CDVIsHTTPStatusLineWithStatusCode:
_copyABAccount:
CDVRawPath
_defaultSession
DAObjectForKeyCaseInsensitive:
_fillOutAddressBooksFromLocalDB
DA_isFailedDependencyError
_imageFetchTask
T@"<CardDAVDelegateInfoProvider>",R,N,V_delegateProvider
_mutableContact
T@"ACAccountType",&,N,V_accountsType
_useSSLOverride
T@"CNContactStore",&,N,V_contactStore
abGroupChangeId
T@"CNMutableContact",R,N,V_mutableContact
accountProvider
T@"CardDAVLocalDBHelper",R,N,V_databaseHelper
addSaveRequest:
T@"DABestMeContactPicker",R,N
allKeys
T@"DAContactsAccountProvider",R,N
cardURL
T@"DAContainerProvider",R,N
containsObject:
T@"DAGroupsProvider",R,N
countOfContacts
T@"NSArray",&,N,V_actions
dealloc
T@"NSArray",R,V_groups
dsidForAccount:
T@"NSDictionary",R,N
fetchImageError
T@"NSMapTable",&,N,V_pushedActionsByTaskGroup
highestChangeID
T@"NSMutableDictionary",&,N,V_contactsByExternalIdentifier
hrefsAsFullURLs
T@"NSMutableDictionary",&,N,V_mAddressBooksByFolderURL
interfaceWentUp
T@"NSMutableDictionary",&,N,V_uuidToPersonCache
isGroup
T@"NSMutableSet",&,N,V_mSearchAddressBooks
isProxy
T@"NSMutableURLRequest",&,N,V_urlRequest
maxResourceSize
T@"NSSet",R,N
numberWithBool:
T@"NSString",R,N,V_accountID
payloadAsString
T@"NSURL",&,N,V_meCardURL
protectionSpace
T@"NSURL",R,N,V_externalURL
release
T@"NSURLSessionDataTask",&,N,V_imageFetchTask
searchPeopleWithPredicate:sortOrder:inAddressBook:withDelegate:
TB,N,V_hasOutstandingABChanges
setAddressBook:
TB,N,V_startedWithNoContacts
setMeFolderURL:
TQ,N,V_latestSequenceNumber
syncTag
T^v,N,V_addressBook
updateDelegates
T^v,N,V_testRecord
.cxx_destruct
T@"NSString",&,N,V_hostOverride
CDVAddItemParserMappingWithNameSpace:name:parseClass:
_action
CDVObjectForKeyWithNameSpace:andName:
_databaseHelper
DAAccountPrincipalPath
_defaultSessionWasUserRequested
DARequestByApplyingStorageSession:
_groups
T#,R
_kindForAction:
T@"ACAccountStore",R,N,V_accountStore
_person
T@"CNChangeHistoryResult",&,N,V_changeHistoryResult
aa_primaryEmail
T@"CNContactStore",R,N,V_contactStore
account
T@"CardDAVDelegateManager",R,N,V_delegateManager
actions
T@"DAAction",R,N,V_action
addressBookConstraintsPlistPath
T@"DAChangeHistoryClerk",R,N
altDSID
T@"DAContactsProvider",R,N
constraintsPath
T@"DAEditPropertyAction",R,N,V_action
context
T@"DATrustHandler",R,N
credentialForAccount:serviceID:
T@"NSArray",R,V_contacts
delegateManager
T@"NSDictionary",&,N,V_pushTransport
extraChildItems
T@"NSError",&,N,V_fetchImageError
groupIdentifier
T@"NSMutableData",&,N,V_fetchedImageData
homeURL
T@"NSMutableDictionary",&,N,V_groupsByExternalIdentifier
initWithString:
T@"NSMutableDictionary",&,N,V_mPushKeysToFolderURLs
isAuthenticated
T@"NSMutableSet",&,N,V_mAddressBooks
isLocal
T@"NSMutableSet",&,N,V_searchTaskSet
markForDeletion
T@"NSObject<OS_os_log>",R,N
members
T@"NSString",R,C
parameterString
T@"NSURL",&,N,V_homeURL
predicateShouldContinue:afterFindingRecord:metadata:moreComing:
T@"NSURL",&,N,V_meFolderURL
pushKey
T@"NSURLSession",&,N,V_defaultSession
result:
TB,N,GisChangeHistoryTruncated,V_changeHistoryTruncated
TB,N,V_markedForDeletion
setIgnoresGuardianRestrictions:
TB,N,V_touchedDatabase
startMonitoring
TQ,R
touchedDatabase
T^v,N,V_matchedRecord
uppercaseString
T^v,R,N,V_addressBook
T^v,R,N,V_person
Ti,N,V_fetchingImageDataRefCount
Ti,N,V_highestChangeID
Ti,N,V_matchMode
Ti,N,V_useSSLOverride
Tq,N,V_portOverride
URLByAppendingPathComponent:
URLByDeletingLastPathComponent
URLSession:dataTask:didBecomeDownloadTask:
URLSession:dataTask:didBecomeStreamTask:
URLSession:dataTask:didReceiveData:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:willCacheResponse:completionHandler:
URLSession:didBecomeInvalidWithError:
URLSession:didCreateTask:
URLSession:didReceiveChallenge:completionHandler:
URLSession:task:didCompleteWithError:
URLSession:task:didFinishCollectingMetrics:
URLSession:task:didReceiveChallenge:completionHandler:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:needNewBodyStream:
URLSession:task:willBeginDelayedRequest:completionHandler:
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:taskIsWaitingForConnectivity:
URLSessionDidFinishEventsForBackgroundURLSession:
URLWithString:
_accountID
_accountStore
_accountsType
_actions
_addChangeForType:changedItemId:changeId:addedIdsToChangeId:modifiedIdsToChangeId:deletedIdsToChangeId:changeIdsToClear:
_addressBook
_addressBookSyncTask:failedWithErrorCode:
_appendSyncRequest:
_appendSyncRequestsForFolders:remoteChanges:
_assignConnectionProperties:toSessionConfiguration:
_bestDefaultContainerFromCandidateContainers:
_bulkUploadHREFBlacklist
_bulkUploadTaskGroup:didFinishWithError:
_bulkUploadUUIDBlacklist
_changeHistoryResult
_changeHistoryTruncated
_cn_canSaveAccount:
_cn_firstObjectPassingTest:
_cn_isPrimaryAccount
_cn_map:
_cn_removeAccount:
_cn_saveVerifiedAccount:
_contactStore
_contacts
_contactsByExternalIdentifier
_contactsDidChange
_containerPushKeys
_copyABActionsOfType:inContainer:accountHomeURL:changeTrackingID:existingActions:maxImageSize:maxResourceSize:isPrimaryAppleAccount:
_copyCardFromMeIdentifierAndContainer:
_copyCoalescedChangesInContainer:isPrimaryAppleAccount:isU18Account:databaseHelper:accountHomeURL:changeTrackingID:existingActions:maxImageSize:maxResourceSize:changeContext:outTouchedDB:
_copyExistingABRecordForContact:inStore:
_currentlySyncingFolderURLs
_delegateManager
_delegateProvider
_externalURL
_externalUUID
_fetchImageError
_fetchedImageData
_fetchingImageDataRefCount
_fillOutActionsArray:addedOrModified:removed:
_fillOutExternalURLForRecordType:localId:changeType:inFolderWithURL:outNewExternalURL:outTouchedDB:
_fillOutExternalUUIDForRecordType:localId:changeType:outTouchedDB:
_finishInitialSyncForFolderWithURL:context:
_fireWaitingFolderItemSyncRequests
_folderItemSyncRequestLock
_folderURLToHeldAsideGroups
_folderURLToSyncInfo
_groupsByExternalIdentifier
_handleAuthenticationChallenge:completionHandler:
_handleOrphanarium:toBeCreatedContainersByURL:
_handlePotential503Error:
_hasOutstandingABChanges
_highestChangeID
_holdingDataClassLock_refreshPropertiesOfAllContactFoldersWithCompletion:
_homeURL
_hostOverride
_isAccountOwnerChildInFamilyCircle_cached
_isPrimaryICloudAccount_cached
_isSyncingHierarchy
_isValidRecordType:forDACardDAVRecord:
_latestSequenceNumber
_localRecordForExternalURL:inContainer:withFolderURL:
_mAddressBooks
_mAddressBooksByFolderURL
_mPushKeysToFolderURLs
_mSearchAddressBooks
_markedForDeletion
_matchMode
_matchedRecord
_meCardURL
_meFolderURL
_nameForActionKind:
_outstandingFolderRequests
_portOverride
_probeAndSyncWithBlock:
_pushInitialSyncActionsForFolderWithURL:context:
_pushTransport
_pushedActionsByTaskGroup
_reallyCancelAllSearchQueries
_reallyCancelSearchQuery:
_reallyPerformSearchQuery:
_reallySearchQueriesRunning
_reallySyncAddressBookURLsWithConsumer:
_reallySyncRequest:
_reallyUpdateMeCardWithWithConsumer:allowDistantUpdate:
_searchTaskSet
_sendRequest:
_serverMeCard:hasChangedInContainer:
_serverTokenRegistrationURL
_setNonAppInitiated:
_setPropertiesFromParsedResponses:
_setProperty:forKey:
_setUpABNotifications
_shouldBlacklistForErrorItem:
_shouldWipeDataOnUpgradeFromAccountVersion:
_startedWithNoContacts
_successfullyFinishedInitialSyncForFolderWithID:context:
_syncAllContactFoldersWithRemoteChanges:
_syncRequest:
_syncResultForFolderWithURL:newTag:newSyncToken:actions:changeIdContext:isInitialSync:arePartialResults:
_tearDownABNotifications
_testRecord
_touchedDatabase
_typeOfDAVContainer:
_updateMeCard
_updateMeTaskGroup:didFinishWithError:
_updateStoredMeCardWithURL:
_urlRequest
_uuidToPersonCache
_validateAndSync:
aa_altDSID
aa_firstName
aa_isAccountClass:
aa_isSuspended
aa_lastName
aa_updatePropertiesForAppleAccount:completion:
abChangeTrackingID
abCloseDBAndSave:
abDB
abDefaultAccountInfoSuitableForLogging
abOpenDBWithClientIdentifier:
abPersonChangeId
abProcessAddedImages
abProcessAddedRecords
abSaveDB
abValidateDefaultSource
absoluteString
account:isValid:validationError:
accountByCreatingAccountWithExternalIdentifier:
accountDescription
accountID
accountProperties
accountPropertyForKey:
accountStore
accountTypeWithAccountTypeIdentifier:
accountWithIdentifier:
accountsType
action
actionFailed:forTask:error:
actionsDataSource
actionsFinalizer
actionsForContacts:isPrimaryAppleAccount:isU18Account:databaseHelper:inFolderWithURL:blacklistedUUIDs:blacklistedURLs:maxImageSize:maxResourceSize:containerIsRestricted:outTouchedDB:
actionsForGroups:isPrimaryAppleAccount:isU18Account:databaseHelper:inFolderWithURL:blacklistedUUIDs:blacklistedURLs:maxImageSize:maxResourceSize:containerIsRestricted:outTouchedDB:
actionsForGroups:isPrimaryAppleAccount:isU18Account:inFolderWithURL:databaseHelper:blacklistedUUIDs:blacklistedURLs:maxImageSize:maxResourceSize:outTouchedDB:
actionsHandler
addChildWithDelegateInfo:
addFailureBlock:
addObject:
addObjectsFromArray:
addObserver:selector:name:object:
addSuccessBlock:
additionalHeaderValues
addressBook
addressBookHomes
addressBooks
addressBooksByFolderURL
aida_accountForiCloudAccount:
allContainers
allContainersForAccountWithExternalIdentifier:
allHTTPHeaderFields
allObjects
allValues
altDSIDForAccount:
andPredicateWithSubpredicates:
anyObject
appendData:
appleIDForAccount:
applyRefreshedValuesFromPropFind:toContainer:
arePropertiesReadonly
array
arrayByAddingObjectsFromArray:
arrayWithCapacity:
arrayWithObjects:count:
asABGroup
asContact
asContainer
asPerson
asSource
authenticationMethod
autorelease
backingAccountInfo
backingAction
bestMePicker
boolValue
bulkRequests
cTag
canAccessCredentialsWithAccessibility:
cancelTask:
cardDAVRecordItem
cdvActionsFromDAActions:
changeAnchor
changeContext
changeHistoryClerk
changeHistoryIsValid
changeHistoryResult
changeHistoryTruncated
changeHistoryWithFetchRequest:error:
changeID
changeId
changeTrackingID
changeType
changedItem
changesTruncated
childAccounts
class
clearChangeHistoriesWithChangeIdContext:pushedActions:inContainer:changeTrackingID:
clearChangesForActions:inContainer:changeTrackingID:
clearChangesToAnchor:changeTrackingID:inContainer:
clerkWithAddressBook:
clerkWithContactStore:
clientID
clientInfoHeader
cnChangeAnchor
coalesceExistingActions:withNewlyGeneratedActions:discardActionHandler:
code
collectDelegateInfoReturningError:
collectDelegatesForAccount:error:
compressRequests
conformsToProtocol:
consumer
consumerForTask:
contactChangeIDs
contactChanges
contactFromItem:
contactIdentifier
contactStore
contacts
contactsByExternalIdentifier
contactsByFilteringOutContacts:withoutExternalIUUID:
contactsByFilteringOutContacts:withoutExternalIdentifier:
contactsFolderWithId:successfullyPushedActions:
contactsInContainer:
contactsProvider
contactsWithExternalHREFs:container:
contactsWithExternalUUIDs:container:
containerInfoTask:completedWithContainers:error:
containerPropertiesToFetchDuringRefresh
containerProvider
containerQueryTask:completedWithFoundItems:error:
containerQueryTask:completedWithFoundItems:limitReached:error:
containerSyncTask:completedWithNewCTag:newSyncToken:addedOrModified:removed:error:
containerSyncTask:retrievedAddedOrModifiedActions:removed:
containerTitle
containerURLs
containerWithExternalIdentifier:forAccountWithExternalIdentifier:
convertToDAContactSearchResultElement
copy
copyAllLocalURLsInFolderWithURL:
copyCDVActionFromDAAction:
copyDAActionFromCDVAction:
copyExistingContactForItem:inStore:
copyImageContentsAtURL:outError:
copyLocalETagsForURLToETagDict:inFolderWithURL:
copyLocalETagsForURLs:inFolderWithURL:
copyPropPatchTask
copyStorageSession
count
countByEnumeratingWithState:objects:count:
countOfGroups
createNewContainerWithType:name:externalIdentifier:constraintsPath:syncData:contentReadonly:propertiesReadonly:forAccount:
createOrphanedABRecordFromParsedVCardOutRecordType:
currentHandler
currentImplementationClass
currentRequest
currentRunLoop
customConnectionProperties
daActionsFromCDVActions:
da_absoluteURLForChildLeastInfoRepresentationRelativeToParentURL:
da_leastInfoStringRepresentationRelativeToParentURL:
da_newGUID
dataFromPropertyList:format:errorDescription:
dataSourceWithAddressBook:
dataSourceWithContactStore:
dataTaskWithRequest:
databaseHelper
dataclassProperties
dateWithTimeIntervalSinceNow:
debugDescription
defaultCenter
defaultSession
defaultSessionConfiguration
delegateDidCompleteRefresh:
delegateProvider
deleteContact:
deleteFromContainer:
deleteFromContainer:account:
deleteOrphanDatabasesLackingRepresentationInDelegateInfos:
description
dictionary
dictionaryWithCapacity:
directoryGatewayURLs
discoverInitialPropertiesWithConsumer:
discoveryTask:gotAccountInfo:error:
displayAccount
domain
doubleValue
dsid
eTag
enabledForDADataclass:
enumerateContactsWithFetchRequest:error:usingBlock:
enumerateKeysAndObjectsUsingBlock:
error
errorWithDomain:code:userInfo:
exceptionWithName:reason:userInfo:
executeAllSaveRequests
executeChangeHistoryClearRequest:error:
existingChildAccountsWithProperty:
externalID
externalIdentifier
externalModificationTag
externalURL
externalUUID
extractContactActionsFromExistingActions:
extractGroupActionsFromExistingActions:
failedToFinishInitialSync:error:
failedToRetrieveAddressBookURLsWithError:
failedToUpdateServerMeCardWithError:
familyCircle
familyDelegateAltDSID
fetchInterval
fetchedAccountWithExternalIdentifier:
fetchedImageData
fetchingImageDataRefCount
finalizerWithAddressBook:
finalizerWithContactStore:
finishFutures:
finishInitialSyncOfContactsFolder:previousTag:uuidsToAddActions:hrefsToModDeleteActions:useCRUD:maxResources:maxSize:consumer:context:
firstObject
flatMap:
folder
folderID
folderURL
fragment
generateActionsForContacts:databaseHelper:inFolderWithURL:blacklistedUUIDs:blacklistedURLs:maxImageSize:maxResourceSize:outTouchedDB:reportingBlock:
generateActionsFromContactChanges:databaseHelper:storeURL:maxImageSize:maxResourceSize:outTouchedDB:
generateActionsFromGroupChanges:databaseHelper:storeURL:maxImageSize:maxResourceSize:outTouchedDB:
getAccountPropertiesTask:completedWithError:
getAppleIDSession
getDAAccount
grandSlamAppToken
groupByFilteringOutGroups:withoutExternalIdentifier:
groupByFilteringOutGroups:withoutExternalUUID:
groupChanges
groups
groupsByExternalIdentifier
groupsInContainer:
groupsMatchingPredicate:error:
groupsProvider
groupsWithExternalHREFs:container:
groupsWithExternalUUIDs:container:
guardianRestricted
handleAction:forContainer:inAccount:withFolderURL:isInitialSync:arePartialResults:syncInfo:heldAsideGroups:
handleFailureInMethod:object:file:lineNumber:description:
handleValidationError:completion:
handlerWithAddressBook:
handlerWithContactStore:
hardCodedPrincipalPathForDSID:
hasBeenPersisted
hasOutstandingABChanges
hasPrefix:
hasRemoteChanges
hasWriteContentPrivileges
hasWritePropertiesPrivileges
hash
host
hostFromDataclassPropertiesForDataclass:
hostOverride
hrefToETag
hrefToErrorItems
hrefToStatus
iOSLegacyIdentifier
identifier
ignoresGuardianRestrictions
imageError
imageFetchTask
init
initWithABPerson:
initWithAccount:
initWithAccountInfoProvider:containerURLs:directoryGatewayURLs:taskManager:
initWithAccountInfoProvider:taskManager:
initWithAccountInfoProvider:taskManager:homeURL:cardURL:
initWithAccountType:
initWithAction:context:
initWithAction:externalUUID:externalURL:
initWithAddressBook:
initWithBackingAccountInfo:
initWithCDVScheme:user:password:host:port:path:parameterString:query:fragment:
initWithCDVScheme:user:password:host:port:path:query:fragment:
initWithCapacity:
initWithChangedItem:propertyName:value:propertyNamespace:serverId:
initWithClientIdentifier:
initWithContact:
initWithContactStore:
initWithContacts:groups:
initWithContactsFamilyDelegateAltDSID:familyDelegateACAccountID:
initWithDAEditPropertyAction:
initWithDelegateInfoProvider:accountID:databaseHelper:
initWithFolder:hasRemoteChanges:isInitialUberSync:
initWithFolderURL:checkCTag:uuidsToAddActions:hrefsToModDeleteActions:context:accountInfoProvider:taskManager:
initWithFolderURL:previousCTag:previousSyncToken:actions:syncItemOrder:context:accountInfoProvider:taskManager:appSpecificDataItemClass:
initWithGroup:
initWithIdentifier:
initWithItemChangeType:changedItem:serverId:
initWithItemChangeType:changedItem:serverId:instanceId:
initWithKeysToFetch:
initWithNameSpace:andName:
initWithObjectsAndKeys:
initWithPropertiesToFind:atURL:withDepth:
initWithPropertiesToSet:andRemove:atURL:
initWithSearchString:searchLimit:atURL:appSpecificDataItemClass:
initWithURL:cachePolicy:timeoutInterval:
initWithURL:eTag:dataPayload:inContainerWithURL:withAccountInfoProvider:
initialActionsDataSource
instanceId
intValue
integerValue
interfaceWentDown
intersectSet:
invalidImageType
invalidateAndCancel
isAccount
isAccountOwnerChildInFamilyCircle
isAddressBook
isChangeHistoryTruncated
isContact
isContainer
isContentReadonly
isDelegateAccount
isDelegateChildFamilyMember:
isEqual:
isEqualToAccount:
isEqualToDictionary:
isEqualToString:
isForgivableError:
isGuardianRestricted
isGuardianStateDirty
isInitialSync
isInitialUberSync
isKindOfClass:
isMemberOfClass:
isMonitoring
isPrimaryICloudAccount
isResyncAfterConnectionFailed
isSearchAddressBook
isSearchContainer
isSharedAddressBook
isSuccess
isTypeCardDAVSearchable:
isValidating
isWaitingForPassword
itemChangeType
itemForContactChange:
itemForGroupChange:
itemWithABRecord:addressBook:outNeedsDBSave:maxImageSize:maxResourceSize:inContainerWithURL:
itemWithDACardDAVRecord:contactStore:outNeedsDBSave:maxImageSize:maxResourceSize:inContainerWithURL:
keyVector
keychainAccessibilityType
keysToFetch
lastPathComponent
lastRetryTimeout
latestChangeAnchor
latestSequenceNumber
legacyIdentifier
length
loadClientIDs
loadLocalItemWithAccount:
localItemForExternalURL:forContainer:withStoreURL:
lock
logGaveUpAcceptedEmptyResponseContainerSyncTask:retryCount:
logRetryAfterEmptyResponseContainerSyncTask:retryCount:
logSummaryForCardDAVActions:partialResults:initialSync:syncPhase:syncAccount:
mAddressBooks
mAddressBooksByFolderURL
mPushKeysToFolderURLs
mSearchAddressBooks
mapTableWithStrongToStrongObjects
markAsDefault
markedForDeletion
matchMode
matchedRecord
matchingContactForExternalID:
matchingGroupForExternalID:inContainer:
maxImageSize
maxImageSizeFromSyncDict:
maxResourceSizeFromSyncDict:
maxResults
meCardURL
meContactInContainer:
meFolderURL
meIdentifier
mergeAllRecordsIntoContainer:shouldInsertChangeHistoryRecords:
moveToLocalStoreContacts:groups:
multiStatus
mutableContact
mutableCopy
name
newDAContainerForContainer:
nextCTag
noUIDConflict
noteHomeSetOnDifferentHost:
numberWithInt:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
observeReachabilityWithBlock:
onBehalfOfBundleIdentifier
orderedResponses
os_log
os_log_summary
parentAccount
parentAccountForAccount:
password
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
person
personPredicateWithGroup:source:account:
personPredicateWithPhoneLike:countryHint:addressBook:
personPredicateWithValue:comparison:forProperty:
pickBestMeContactForGivenName:familyName:primaryEmail:
pickerWithAddressBook:
pickerWithContactStore:
port
portFromDataclassPropertiesForDataclass:
portOverride
predicateForContactsInContainerWithIdentifier:
predicateForContactsMatchingEmailAddress:
predicateForContactsMatchingName:options:
predicateForContactsWithIdentifiers:
predicateForGroupsInContainerWithIdentifier:
predicateForGroupsWithIdentifiers:
predicateShouldContinue:
predicateShouldContinue:afterFindingRecord:
predicateShouldContinue:afterFindingRecord:metadata:
predicateShouldContinue:afterFindingRecord:moreComing:
prepareChangeHistoryForClientWithIdentifier:forContainer:withChangeContext:
prepareToGenerateInitialActionsWithContext:
prettyStringForDisplayName
previousCTag
previousFailureCount
principalPath
principalURL
privileges
propertyListFromData:mutabilityOption:format:errorDescription:
propertyName
propertyNamespace
proposedCredential
providerWithAddressBook:
providerWithContactStore:
publicContainerProviderSummaryInfo
publicDescription
pushDisabled
pushKeysToFolderURLs
pushTransport
pushTransports
pushedActionsByTaskGroup
pushedActionsForTaskGroup:
query
refreshCollections:withReason:
refreshFolderListRequireChangedFolders:isUserRequested:
refreshPropertiesOfAllContactFoldersWithCompletion:
registerAccount:forOperationWithName:
registerClientWithIdentifier:forContainer:
registerDelegate:
registerTopic:forDelegate:inEnvironment:
registerWaiter:forDataclassLocks:completionHandler:
relinquishLocksForWaiter:dataclasses:moreComing:
reload
removeAccount:
removeAllObjects
removeConsumerForTask:
removeDelegateDatabasesNotMatchingAltDSIDs:
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removeObserver:name:object:
removePushedActionsForTaskGroup:
requestAgentStopMonitoringWithCompletionBlock:
resetAccountID
respondsToSelector:
resume
retain
retainCount
retryRefreshForDelegate:withCollections:after:originalRefreshReason:
runMode:beforeDate:
saveAccount:
saveAccountProperties
saveIfGroupWithLocalObject:toContainer:shouldMergeProperties:outMergeDidChooseLocalProperties:account:
saveVerifiedAccount:withCompletionHandler:
saveWithLocalObject:toContainer:containerURL:shouldMergeProperties:outMergeDidChooseLocalProperties:account:shouldSaveGroups:
saveXpcActivity:
scheduleIdentifier
scheme
searchQuery:finishedWithError:
searchQuery:returnedResults:
searchString
searchTaskSet
self
sendMeCardEverywhere
sequence:
serverID
serverId
serverTokenRegistrationURL
sessionWithConfiguration:delegate:delegateQueue:
setAbGroupChangeId:
setAbPersonChangeId:
setAccountIdentifier:
setAccountInfoProvider:
setAccountsType:
setActions:
setArePropertiesReadonly:
setAuthenticationType:
setBestMeCard
setCTag:
setChangeContext:
setChangeHistoryResult:
setChangeHistoryTruncated:
setChangeId:
setCnChangeAnchor:
setCompletionBlock:
setConstraintsPath:
setConsumer:forTask:
setContactChangeIDs:
setContactStore:
setContactsByExternalIdentifier:
setContainerIdentifier:
setContentReadonly:
setContext:
setDataclass:
setDefaultContainer:withLocalDBHelper:onlyIfNotSet:
setDefaultSession:
setDelegate:
setDiscretionary:
setETag:
setEnsureUpdatedCTag:
setExternalIdentifier:
setExternalModificationTag:
setExternalUUID:
setFetchImageError:
setFetchedImageData:
setFetchingImageDataRefCount:
setFolderID:
setFolderName:
setGroupChangeIDs:
setGroupsByExternalIdentifier:
setGuardianRestricted:
setGuardianStateDirty:
setHasOutstandingABChanges:
setHasRemoteChanges:
setHighestChangeID:
setHomeURL:
setHost:
setHostOverride:
setImageFetchTask:
setIncludeChangeIDs:
setIncludeExternalIDs:
setIncludeGroupChanges:
setIncludeImagesChanged:
setIsInitialSync:
setIsInitialUberSync:
setIsMonitoring:
setIsWaitingForPassword:
setLastRetryTimeout:
setLastSyncDateForContainer:
setLatestSequenceNumber:
setLocalETag:forItemWithURL:inFolderWithURL:
setLocalItem:
setMAddressBooks:
setMAddressBooksByFolderURL:
setMPushKeysToFolderURLs:
setMSearchAddressBooks:
setMarkedForDeletion:
setMatchMode:
setMatchedRecord:
setMaxRetryOnUnexpectedSyncTokenChange:
setMeCardURL:
setMeContact:error:
setMeContactIdentifier:
setMultiPutBatchMaxNumResources:
setMultiPutBatchMaxSize:
setName:
setObject:forKey:
setObject:forKeyedSubscript:
setParentAccount:
setPayloadAsString:
setPort:
setPortOverride:
setPredicate:
setPropertiesOnAccount:
setPushTransport:
setPushedActionsByTaskGroup:
setSearchTaskSet:
setShouldDoInitialAutodiscovery:
setShouldUseOpportunisticSockets:
setSortOrder:
setStartedWithNoContacts:
setSyncData:
setSyncTag:
setSyncWhenReachable:
setTestRecord:
setToChangeAnchor:
setTouchedDatabase:
setType:
setURLCache:
setUUIDToPersonCache:
setUnifyResults:
setUpLocalDBHelper:
setUrlRequest:
setUseSSL:
setUseSSLOverride:
setUuidToPersonCache:
setValue:forHTTPHeaderField:
setWasUserInitiated:
setWithArray:
setWithObject:
set_appleIDContext:
set_sourceApplicationBundleIdentifier:
set_sourceApplicationSecondaryIdentifier:
setupCardDAVDelegateManager:
sharedBabysitter
sharedGateKeeper
sharedKeychain
sharedManager
sharedMonitor
shouldAutodiscoverAccountProperties
shouldCompressRequests
shouldDoInitialAutodiscovery
shouldFailAllTasks
shouldHandleHTTPCookiesForURL:
shouldSendClientInfoHeaderForURL:
shutdown
startTaskGroup
startedWithNoContacts
statusCode
stopObservingReachability
stringByTrimmingCharactersInSet:
stringValue
stringWithFormat:
submitIndependentCoreDAVTask:
submitIndependentTask:
successfulPropertiesToValues
successfullyFinishedInitalUploadForFolderWithID:container:guardianRestrictedUUIDs:guardianRestrictedHREFs:blacklistedUUIDs:blacklistedHREFs:context:
successfullyRetrievedAddressBookURLs
successfullyUpdatedServerMeCardWithURL:
superclass
supportsAuthentication
syncAddressBookURLsWithConsumer:
syncBulkChangeTask:error:
syncBulkChangeTask:parentTaskGroup:completedWithError:
syncData
syncDeleteTask:error:
syncDeleteTask:parentTaskGroup:completedWithError:
syncFolderIDs:forDataclasses:isUserRequested:
syncPostTask:data:error:
syncPostTask:postedData:parentTaskGroup:error:
syncPropPatchTask:parsedResponses:parentTaskGroup:completedWithError:
syncPutTask:completedWithNewETag:error:
syncPutTask:completedWithNewETag:parentTaskGroup:error:
syncResultForContactsFolder:newTag:previousTag:newSyncToken:actions:results:changeIdContext:isInitialSync:moreAvailable:moreLocalChangesAvailable:pushedActions:
syncStoreIdentifier
synchronizeContactsFolder:previousTag:previousSyncToken:actions:highestIdContext:isInitialUberSync:isResyncAfterConnectionFailed:previousTagIsSuspect:moreLocalChangesAvailable:consumer:
task:didFinishWithError:
taskGroup:didFinishWithError:
taskManager
testRecord
token
transactionId
trustHandler
type
unionSet:
unlock
unmonitorAccount:
unregisterAccount:forOperationWithName:
unregisterClientWithIdentifier:forContainer:
unregisterDelegate:
unregisterTopic:forDelegate:inEnvironment:
unregisterWaiterForDataclassLocks:
unsignedIntegerValue
updateContact:
updateMeCardWithWithConsumer:
updateSaveRequest:
updateSyncDict:withDAVContainer:
urlRequest
useContactsFramework
useSSL
useSSLFromDataclassPropertiesForDataclass:
useSSLOverride
useThunderhillBetaServers
user
userInfo
username
uuidToErrorItems
uuidToHREF
uuidToPersonCache
validAddressData
value
waiterID
wasUserInitiated
watchedCollections
whitespaceCharacterSet
wrappedRecordFromRecord:
zone
Clearing Person change index %d
Clearing Group change index %d
Malformed CardDAVVCardItem: %@
Change context reports this is an initial sync or changes otherwire truncated. Setting our change history cursor the change sequence when history was fetched: %d
Couldn't get a store or database to clear AddressBook changes
Clearing %@ changes in store %d to index %d
CardDAVDelegateiCloudDaemonAccount for %@ (%{public}@) does not have a familyDelegateAltDSID, failing setup!
Unable to determine principalPath for account "%@" (%{public}@)
Unable to determine host for account "%@" (%{public}@)
Unable to determine port for  %@ (%{public}@), falling back to 443
Checking auth status for account %@ (%{public}@)
Not attempting request for account %@ because the parent account credential isn't authed %{public}@
Not attempting request for account %{public}@ because the parent account needs to verify terms or is suspended. %{public}@
Not attempting request for account %{public}@ because we don't have access to keychain items with accessibility %d right now
Unable to obtain authentication account for account "%@" %@{public}
Home set is on a different host. Updating overrides for account "%@" (%{public}@)
Account "%@" (%{public}@) is waiting for a password, so we're going to ignore this refresh request
Account "%@" (%{public}@) thinks it should fail all tasks.  Doing so
Account "%@" (%{public}@) doesn't have a principal URL. Running autodiscovery.
Account "%@" (%{public}@) isn't reachable. Deferring sync.
Handling CNContactStoreDidChangeNotification for account "%@" (%{public}@); sync will occur
Account "%@" (%{public}@) was successfully autodiscovered, saving account settings
Got a password from the user. Attempting autodiscovery again for account "%@" (%{public}@)
Account "%@" (%{public}@) can't figure out its principalPath, and we couldn't get a password from the user 
We'll refresh if we find a better network connection.
reachability indicates that the network is reachable.  We're going to retry our folder sync with %{public}@.
Network is now reachable; sync will occur
DA just woke up; sync will occur with %{public}@.
The CardDAV agent was told to stop monitoring with %{public}@.
Account doesn't have a principal URL. Running autodiscovery.
Not syncing ab hierarchy, as I'm in the middle of doing that
Asked to sync folder with id %@, but I only know of these folders %@
DA retry machinations; sync will occur
Yikes: %s %@ error code:%ld error domain:%{public}@ error:%@
Initial sync failed, queue retry
Me-card sync failed, queue retry
Will avoid to block dataaccessd for too long during initial sync - slowing down pushes
Will avoid using too much memory during initial sync - slowing down pushes
Pushing %d people%s
started initial sync for %@ with no contacts - won't try to match people
Could not save local container
The server told us to try again after %f seconds.
The server returned a 503, but didn't give us a retry-after header. We'll retry again after %f seconds
We got another 503 error, but we've already backed off for 8 minutes. Giving up and retrying again at our regularly scheduled time
Daemon is ignoring task %@ which failed with status %ld and error %@
The babysitter put us in timeout, so we're going to fail this sync. %@
Syncing account "%@" (%{public}@) -- started
Syncing account "%@" (%{public}@) -- %{public}@
Agent %{public}@ asked to sync folder with id %@, but I have no matching container
My ctag of %@ is suspect, I'll get a new one
external change, folder %@
Treating request as an initial sync as our change history is invalid
This isn't an initial sync request, yet change history was truncated for our cursor. DA never expects truncation after initial sync and does not implement reconciliation. Truncation will be cleared at the conclusion of sync but this account is now in an inconsistent state with the address book database.
Blasting whitespace before first time sync
Blasted whitespace before first time sync
Default source %{public}@
Default source : <none>
%lu changes for account "%@" (%{public}@)
returning early, as we have a folder change with no remote changes, and no local changes
DATransaction starting, ID: %@
lock for %@ aborted
CardDAVAgent: locks granted for dataclasses %lx
%s: asked to sync folder request %@, but that has no server id.  Dropping this sync on the floor
Appending a sync request for folder %@
Got AB URLs from our daemon account, going to sync my folders
Yikes: %s error code:%ld error domain:%{public}@ error:%@
network unreachable during folder sync. Waiting for reachability to signal a retry.
refreshPropertiesOfAllContactFoldersWithCompletion: %@ failed to acquire data class lock, skipping container property update and aborting sync.
DA refresh machinations; sync will occur
Could find parent ACAccount of CardDAV Account %@
Could not determine altDSID for account %@. Returning assumption that account holder is not U18.
FamilyCircle lookup failed for account %@ with error: %@. Returning assumption that account holder is not U18.
Container sync task %@ completed with next cTag %@, next synctoken %@, add/modify count %lu, remove count %lu, error %@
Syncing account "%@" (%{public}@) -- sync completed with error: %@ %{public}@
Syncing account "%@" (%{public}@) -- sync complete
Our ab store went missing mid sync. Shenanigans!
Syncing account "%@" (%{public}@) -- server requested %lu etags, we matched %lu
Our ab store went missing mid sync.  Shenanigans!
Found a contact with full path %@, which I can't make into a URL relative to %@
Found a group with full path %@, which I can't make into a URL relative to %@
Syncing account "%@" (%{public}@) - server requested local urls, we provided %lu
The babysitter put us in timeout. Failing initial contacts sync. %@
Folder with id %@ supports bulk upload.  Using it
Asked to do a bulk upload to folder id %@, but it doesn't support it.  Failing
bulk upload task group %@ completed with error %@
Bulk upload finished, but I have no store for it!
For uuid %@, I have new href %@, but no local record
For href %@ with no uuid, I can't find my local record
For href %@, I have new etag %@, but no local record
For href %@, I have a 404, but no local record to de-href
Blacklisting UUID %{public}@ with error item:  %{public}@
Server rejected action for item with UUID %{public}@ because the target container is guardian restricted
An error item was returned for UUID  %{public}@ but we are not blacklisting the associated record. Error: %{public}@ child items: %{public}@
Blacklisting HREF %@ with error item: %@
Server rejected action for item with HREF %{public}@ because the target container is guardian restricted
An error item was returned for HREF %{public}@ but we are not blacklisting the associated record. Error: %{public}@ child items: %{public}@
Unacceptable DAAction %@.  Not handing it to CoreDAV
Unacceptable CoreDAVAction %@.  Not handing it to DA
The babysitter put us in timeout. Failing this sync. %@
Creating AB store for account %@
containerInfoTask for %@ completed with %lul containers, error: %{public}@ 
container info %@
Ignoring push transports from additional home set %@
Ignoring Me card from additional home set %@
Me card URL is %@
Container type from the server (%{public}ld) differs from our records (%{public}ld). Changing local type to (%{public}ld).
Unregistered container from change history because the server reports it to be a search node, yet we had categorized it as storage.
Registered container with change history because the server reports it as storage, yet we had categorized it as a search node.
The babysitter put us in timeout. Failing to sync AB URLs. %@
DEBUG: Filling in %lu containers for externalIdentifier: %{public}@
Got unexpected nil externalURL, skipping constructing a DAFolder for account with identifier: %{public}@, container with identifier: %{public}@, homeURL: %{public}@
Sending CardDAV search results back to consumer %@.
Query: %@
Results: %@
CardDAV search task %p was cancelled
The CardDAV search returned an error: (%@)
cancelling search query %@
Looking for Me card as seen on server. Folder URL: %@ - Me Card URL: %@
Server Me card %@ as seen on server not found locally
Server me card: %@ - stored one: %@
Updating known server me card to %@ in %@
Local me card: %@ - Distant me card: %@
No local me card, will use server provided one
Updating me card from server
Can't set me card from distant me card %@, identifier %d
Not updating distant me card, externalIdentifier would not change
Not updating distant me card, allowDistantUpdate is NO
Updating me card on server
Missing required container identifier
Change history not cleared: %@ error: %@
Change history not cleared: %@ error: %@ 
Unexpected error: no change history elements to clear.
A preset action for a sync request wanted a modify, but we have no server id.  Dropping the modify of %@
A preset action for a sync request didn't have an associated local event in the db action %@
A preset action for a sync request had change type %lu, which is unsupported.  Dropping that action
Looking at change with id %d type %d externalURL %@
Clearing change index %d
_addChange for type %lu, changedItemId %@ changeId %@ addedIds %@ modifiedIds %@ deletedIds %@, changeIdsToClear %@
Found a delete of a record with no external id.  Dropping this delete on the floor
adding %@
updating %@
saved %@, server id %@, clientID %@
Holding aside group with server id %@
Unexpected ABRecordType for item %@
Predicate %@ matched contact %@ with local id %d
Found a last chance matching using %@
Found no match for contact %@
Error: somebody has already set the latest sequence number for the contacts change context despite this being initial sync.
Not pushing person with uuid %@ href %@ because the server rejected it
Not pushing group with uuid %@ href %@ because the server rejected it
Syncing error; we should never be generating new DAActions with a nil change history
Syncing error; we should never be generating new DAActions with a invalid change history
discarding existing CONTACT DAAction of type: %ld change: %d
Unexpected result when clearing change %@ error %@
discarding existing GROUP DAAction of type: %ld change: %d
Unexpected error fetching change history for %@ (error: %@)
Odd, fetching change history for %@ resulted in truncated changes.  This should be very rare.
Local contact changes: %lu for %@
Local group changes:  %lu for %@
Unexpected nil change history; call fetchChangeHistoryForClientWithIdentifier before calling this
Unable to sync contact delete %@; externalID from tombstone nil
generating DAItemChangeTypeAdd action for CONTACT CNChangeHistoryChangeTypeAdd with identifier: %@ anchored at: %@ in container: %@ 
generating DAItemChangeTypeModify action for CONTACT CNChangeHistoryChangeTypeUpdate with identifier: %@ anchored at: %@ in container: %@ 
generating DAItemChangeTypeDelete action for CONTACT CNChangeHistoryChangeTypeDelete with identifier: %ld anchored at: %@ in container: %@ 
encourtered unsupported CONTACT CNChangeHistoryChangeType %ld
Unexpected error looking up changed group for %@; error %@
generating DAItemChangeTypeAdd action for GROUP CNChangeHistoryChangeTypeAdd with identifier: %ld anchored at: %@ in container: %@ 
generating DAItemChangeTypeModify action for GROUP CNChangeHistoryChangeTypeUpdate with identifier: %ld anchored at: %@ in container: %@ 
generating DAItemChangeTypeDelete action for GROUP CNChangeHistoryChangeTypeDelete with identifier: %ld anchored at: %@ in container: %@ 
encountered unsupported GROUP CNChangeHistoryChangeType %ld
Syncing account "%@" (%{public}@) -- no actions%{public}@
Syncing account "%@" (%{public}@) -- unexpected action %@
Syncing account "%@" (%{public}@) -- %{public}@ actions (add:%lu mod:%lu del:%lu)%{public}@
unexpected issue extracting changed item to classify action %@
unexpected issue classifying action %@
Skipping delegate state update (including account account adds/removes) because we got an error fetching delegates from Family Circle. error:  %@
Unexpected condition updating deletes - no principal path for delegateInfo: %{public}@ %@
Delegate with account ID %@ cannot be saved, error %{public}@
Delegate with account ID %@ can be saved
Delegate with account ID %@ save failed, error %{public}@
Delegate with account ID %@ saved
Delegate with account ID %@ failed to be removed, error %{public}@
Delegate with account ID %@ was successfully removed
Moving along the migration of local store into a CardDAV cocoon
Home set is on a different host. Fetching new AppleAccount properties
Updated account properties are %@
Backing parent AppleAccount was %@saved successfully.
Error fetching AppleAccount properties: %@
Finishing migration of store with id %@ into a pretty CardDAV butterfly
Image URL %@ is invalid for fetching an image
Copying image from URL %@ is aborted because another fetch is in progress
Copying image from URL %@ is starting. Set fetchingImageDataRefCount to 1.
Fetching image at %@ with header fields %@
Could not get photo data from url %@.  Error %@
Fetched image at %@, data at %p
Connection property: %@ is not set
CardDAV NSURLSession Convert: session %p created dataTask %p for %@ %p
CardDAV NSURLSession Convert: could not create dataTask for %@ %p
CardDAV NSURLSession Convert: session %p didBecomeInvalidWithError for %@ %p
CardDAV NSURLSession Convert: session %p didReceiveChallenge for %@ %p
CardDAV NSURLSession Convert: session %p dataTask %p didReceiveChallenge for %@ %p
CardDAV NSURLSession Convert: session %p dataTask %p didCompleteWithError %@ for %@ %p
Completed copying image. Decrement fetchingImageDataRefCount to %d.
Fail to copy image. Decrement fetchingImageDataRefCount to %d.
CardDAV NSURLSession Convert: session %p dataTask %p didReceiveResponse %@ for %@ %p
The server blocked our image data fetch.  Request %@.  Response status code %d
CardDAV NSURLSession Convert: session %p dataTask %p didReceiveData for %@ %p
Adding fetched image data to %p
CardDAV NSURLSession Convert: session %p dataTask %p willCacheResponse for %@ %p
_CardDAVActionsABLegacyFinalizer
CardDAVDelegateiCloudDaemonAccount
CardDAVActionsHandler
CardDAVAgent
CardDAVAddressBookURLsConsumer
NSObject
DAContactsUpdateConsumer
DAActionConsumer
DADataclassLockWatcher
DAValidityCheckConsumer
DARefreshManagerDelegate
CardDAVFinishInitialSyncConsumer
CardDAVMeCardUpdateConsumer
DABabysittable
DAContactsProvider
CardDAVSyncInfo
CardDAVDaemonAccount
CoreDAVLocalDBInfoProvider
CoreDAVTaskGroupDelegate
CoreDAVGetAccountPropertiesTaskGroupDelegate
CoreDAVContainerInfoTaskGroupDelegate
CoreDAVContainerQueryTaskDelegate
CoreDAVTaskDelegate
DAEditPropertyActionAdapter
CoreDAVModifiedContainer
_DABestMeContactContactsPicker
_CardDAVActionsContactsFinalizer
CardDAVActionsDataSource
DAABLegacyContact
DAContact
DACardDAVRecord
_DABestMeContactABLegacyPicker
CardDAVFacebookDaemonAccount
ABLegacyActionsResult
_CardDAVActionsABLegacyDataSource
DABestMeContactPicker
_CardDAVActionsABLegacyHandler
ABPredicateDelegate
_CardDAVInitialActionsABLegacyDataSource
ABMoveLocalAction
DAGroupsProvider
_CardDAVActionsContactsDataSource
_DAABLegacyGroupsProvider
_DAABLegacyContactsProvider
CardDAVActionsLogger
CardDAVActionsFinalizer
DACardDAVActionResult
CardDAVInitialActionsDataSource
CardDAVDelegateManager
CardDAViCloudGetAccountPropertiesTaskGroup
CardDAViCloudDaemonAccount
NSURLSessionDelegate
NSURLSessionTaskDelegate
NSURLSessionDataDelegate
_CardDAVActionsContactsHandler
_DAContactsGroupsProvider
_DAContactsContactsProvider
_CardDAVInitialActionsContactsDataSource
DAContactsContact
@24@0:8^v16
v16@0:8
B48@0:8@16@24@32@40
^v16@0:8
@24@0:8@16
@16@0:8
B16@0:8
B24@0:8@16
q16@0:8
v24@0:8@16
@"CardDAVLocalDBHelper"
@"ACAccountType"
B72@0:8@16@24@32@40B48B52@56@64
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@"NSError"16
v40@0:8q16@24@32
v40@0:8q16@24@"NSError"32
v92@0:8@16@24@32@40@48@56@64B72B76B80@84
v32@0:8@16@24
v92@0:8@"NSString"16@"NSString"24@"NSString"32@"NSString"40@"NSArray"48@"NSArray"56@"ContactFolderItemsSyncContext"64B72B76B80@"NSArray"84
v32@0:8@"NSString"16@"NSArray"24
v36@0:8@16B24@28
v36@0:8@"DAAccount"16B24@"NSError"28
v28@0:8@16i24
v28@0:8@"NSSet"16i24
@"NSSet"16@0:8
@"DAAccount"16@0:8
v24@0:8@"NSObject<OS_xpc_object>"16
@"DATrustHandler"16@0:8
@"NSURL"16@0:8
v72@0:8@16@24@32@40@48@56@64
v72@0:8@"NSString"16@"<DAContainer>"24@"NSSet"32@"NSSet"40@"NSSet"48@"NSSet"56@"ContactFolderItemsSyncContext"64
v32@0:8@"NSString"16@"NSError"24
v24@0:8@"NSURL"16
v20@0:8B16
v24@0:8@?16
v24@0:8B16B20
v36@0:8@16q24B32
B64@0:8@16@24@32@40@48B56B60
v32@0:8@16q24
v28@0:8@16B24
@"NSMutableSet"
@"NSMutableArray"
@"NSLock"
@"NSMutableDictionary"
@"NSURL"
@"NSNumber"
@"CardDAVDelegateManager"
@32@0:8@16@24
v32@0:8@"CoreDAVTaskGroup"16@"NSError"24
v40@0:8@16@24@32
v64@0:8@16@24@32@40@48@56
B40@0:8@16@24@32
B32@0:8@16@24
v32@0:8@16Q24
@"NSDictionary"32@0:8@"NSArray"16@"NSURL"24
@"NSSet"24@0:8@"NSURL"16
v40@0:8@"CoreDAVContainerSyncTaskGroup"16@"NSSet"24@"NSSet"32
v64@0:8@"CoreDAVContainerSyncTaskGroup"16@"NSString"24@"NSString"32@"NSSet"40@"NSSet"48@"NSError"56
@"NSDictionary"32@0:8@"NSDictionary"16@"NSURL"24
B40@0:8@"NSString"16@"NSURL"24@"NSURL"32
B48@0:8@"CoreDAVPutTask"16@"NSString"24@"CoreDAVContainerSyncTaskGroup"32@"NSError"40
B48@0:8@"CoreDAVPostTask"16@"NSData"24@"CoreDAVContainerSyncTaskGroup"32@"NSError"40
B40@0:8@"CoreDAVDeleteTask"16@"CoreDAVContainerSyncTaskGroup"24@"NSError"32
B40@0:8@"CoreDAVBulkChangeTask"16@"CoreDAVContainerSyncTaskGroup"24@"NSError"32
B48@0:8@"CoreDAVPropPatchTask"16@"NSArray"24@"CoreDAVContainerSyncTaskGroup"32@"NSError"40
B40@0:8@"CoreDAVPutTask"16@"NSString"24@"NSError"32
B40@0:8@"CoreDAVPostTask"16@"NSData"24@"NSError"32
B32@0:8@"CoreDAVDeleteTask"16@"NSError"24
B32@0:8@"CoreDAVBulkChangeTask"16@"NSError"24
v32@0:8@"CoreDAVContainerSyncTaskGroup"16Q24
v32@0:8@"CoreDAVGetAccountPropertiesTaskGroup"16@"NSError"24
v40@0:8@"CoreDAVContainerInfoTaskGroup"16@"NSSet"24@"NSError"32
v32@0:8@"CoreDAVTask"16@"NSError"24
v44@0:8@16@24B32@36
v44@0:8@"CoreDAVContainerQueryTask"16@"NSSet"24B32@"NSError"36
v40@0:8@"CoreDAVContainerQueryTask"16@"NSSet"24@"NSError"32
B84@0:8@16@24@32@40B48q52q60@68@76
v80@0:8@16@24@32@40@48B56B60B64B68@72
@20@0:8B16
i24@0:8@16
B20@0:8i16
@24@0:8^@16
B28@0:8@16B24
@"NSDictionary"
@"NSMapTable"
@"CoreDAVPropPatchTask"16@0:8
@"DAEditPropertyAction"
@"CNContactStore"
@96@0:8@16B24B28@32@40@48@56q64q72@80^B88
v24@0:8@"CNSaveRequest"16
i16@0:8
v24@0:8@"NSString"16
@"CNMutableContact"16@0:8
v24@0:8Q16
v20@0:8i16
@"NSArray"
B28@0:8I16@20
@72@0:8I16^v20@28@36@44q52q60B68
v72@0:8Q16@24@32@40@48@56@64
B40@0:8I16i20Q24^B32
B56@0:8I16i20Q24@32^@40^B48
B32@0:8@16^v24
B40@0:8@16^v24@32
B36@0:8@16^v24B32
B44@0:8@16^v24@32B40
B24@0:8@"NSPredicate"16
B32@0:8@"NSPredicate"16^v24
B40@0:8@"NSPredicate"16^v24@"NSDictionary"32
B36@0:8@"NSPredicate"16^v24B32
B44@0:8@"NSPredicate"16^v24@"NSDictionary"32B40
^v40@0:8@16^v24@32
^v32@0:8@16^v24
v24@0:8^v16
v88@0:8@16@24@32@40@48q56q64^B72@?80
@92@0:8@16B24B28@32@40@48@56q64q72B80^B84
@64@0:8@16@24@32q40q48^B56
@40@0:8@16@24@?32
@"CNChangeHistoryResult"
v48@0:8@16B24B28@32@40
@24@0:8Q16
Q24@0:8@16
@40@0:8@16@24@32
@"DAAction"
@"NSString"
@"<CardDAVDelegateInfoProvider>"
@"ACAccountStore"
v40@0:8@16@24@?32
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v48@0:8@16@24@32@?40
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?q@"NSURLRequest">40
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLAuthenticationChallenge"32@?<v@?q@"NSURLCredential">40
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLSessionTaskMetrics"32
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionDownloadTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLSessionStreamTask"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSCachedURLResponse"32@?<v@?@"NSCachedURLResponse">40
v24@0:8q16
@32@0:8@16^@24
v32@0:8@16@?24
@"NSURLSession"
@"NSURLSessionDataTask"
@"NSMutableData"
@"NSError"
@"NSMutableURLRequest"
@88@0:8@16B24B28@32@40@48@56q64q72^B80
@"CNMutableContact"
^{__CFDictionary=}24@?0^v8^v16
Person
Group
CardDAVDelegateiCloudDaemonAccount %p: accountID: %@ parentAccount: %@ dsid: %@
%@ %@
https
X-APPLE-FAMILY-AUTH-TOKEN
X-MMe-Client-Info
com.apple.gs.icloud.family.auth
CardDAVActionsHandler.m
Subclasses implement
v8@?0
com.apple.dataaccess
summary
v12@?0B8
v24@?0q8@"NSError"16
CTagIsSuspect
NeedInitialSync
CardDAVAgent.m
Actions data source called us after we told it to stop. Is it ignoring the block return value?
B24@?0@"<DAContact>"8@"DACardDAVActionResult"16
 (pushed all)
BulkRequests
in server results phase
retry-after
CardDAVSyncRequest
<summary unavailable>
contacts: %lu, groups: %lu
v20@?0q8B16
-[CardDAVAgent _fireWaitingFolderItemSyncRequests]
Attempted to queue a sync request for a folder with no folder id: %@
com.me.
com.apple.contact.
com.icloud.
APSD
PRODUCTION
production
SANDBOX
DEVELOPMENT
development
demo
v32@?0@"DAFolder"8@"CoreDAVPropFindTask"16@"<DAContainer>"24
v16@?0B8B12
@"NSNumber"8@?0
@8@?0
B16@?0@"FAFamilyMember"8
contactsInContainer: is abstract
meContactInContainer: is abstract
contactFromItem: is abstract
contactsWithHREFs: is abstract
contactsWithExternalUUIDs: is abstract
countOfContacts: is abstract
countOfGroups: is abstract
CardDAVSync
CardDAVInitialUpload
v24@?0@"NSString"8@"NSURL"16
v32@?0@"NSURL"8@"NSString"16^B24
v32@?0@"NSString"8@"CoreDAVErrorItem"16^B24
v32@?0@"NSURL"8@"CoreDAVErrorItem"16^B24
from local contact store
CardDAV
CardDAVSyncABURLS
CardDAVValidityCheck
v24@?0@"CNContact"8^B16
CardDAV-actionsfinalizer
CardDAVActionsDataSource.m
DAABLegacyContact cannot update CNSaveRequest
DAABLegacyContact cannot return a CNContact
webdav.beta.facebook.com
true
false
%@.vcf
pickBestMeContactForGivenName
v12@?0i8
groupsInContainer: is abstract
groupsWithExternalHREFs: is abstract
groupsWithExternalUUIDs: is abstract
CardDAV-actions
v16@?0@"DAAction"8
Yup, busted for %@
%@%@ %@
(partial)
(initial)
unclassifable
undetermined
contact
group
CardDAVActionsFinalizer.m
prepareToGenerateInitialActionsWithContext: is abstract
actionsForContacts: is abstract
actionsForGroups: is abstract
@"CNFuture"16@?0@"ACAccount"8
@16@?0@"CardDAVDelegateInfo"8
parent
v16@?0@"NSError"8
v16@?0@8
@"CNFuture"16@?0@"NSNumber"8
CardDAVAccountPrincipalURL
v20@?0B8@"NSError"12
NOT 
com.apple.mobilesync
v32@?0@"NSString"8@"NSString"16^B24
CardDAVImageFetch
CardDAViCloudDaemonAccount
CardDAV-actionshandler
CardDAV-actions-initial
DAContactsContact cannot return an ABRecordRef
