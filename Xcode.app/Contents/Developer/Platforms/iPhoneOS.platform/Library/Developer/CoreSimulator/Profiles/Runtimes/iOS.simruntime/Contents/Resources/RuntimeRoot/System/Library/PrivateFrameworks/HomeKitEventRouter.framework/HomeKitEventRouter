@@(#)PROGRAM:HomeKitEventRouter  PROJECT:HomeKit-1.2.3
333333
TopicRouter
Unimplemented method
[HMETopicRouter registrations: {}]
[(HM) uuid = %@]
[(AC) uuid = %@]
[(AS) keyPath = %@]
v32@?0@"NSUUID"8@"NSArray"16^B24
[HMETopicRouter registrations: %@]
settings
updated
:memory:
HMELastEventStore
PRAGMA cache_size = %@;
CREATE TABLE IF NOT EXISTS eventstore (id integer primary key autoincrement, key string not null unique, value blob not null, m_source string not null, m_timestamp double not null, m_cachepolicy integer not null, m_combinetype not null, m_qos integer not null);
CREATE INDEX IF NOT EXISTS eventstore_key_index on eventstore (key);
replace into eventstore (key, value, m_source, m_timestamp, m_cachepolicy, m_combinetype, m_qos) values (?1, ?2, ?3, ?4, ?5, ?6, ?7);
select key, value, m_source, m_timestamp, m_cachepolicy, m_combinetype, m_qos from eventstore where key = ?1;
delete from eventstore where key = ?1;
delete from eventstore where key like '%' || ?1 || '%';
delete from eventstore where m_timestamp < ?1;
insert into eventstore (key, value, m_source, m_timestamp, m_cachepolicy, m_combinetype, m_qos) values (?1, ?2, ?3, ?4, ?5, ?6, ?7) on conflict(key) do update set value=excluded.value, m_source = excluded.m_source, m_timestamp = excluded.m_timestamp, m_cachepolicy = excluded.m_cachepolicy, m_combinetype = excluded.m_combinetype, m_qos = excluded.m_qos where (excluded.m_timestamp > eventstore.m_timestamp OR excluded.m_source != eventstore.m_source);
DELETE FROM eventstore;
code
extendedCode
text
command
%@ %@
topic
event
HMERouterClient
[%@: topicRouter: %@]
Router.Delegating
[<HMEDelegatingEventRouter %p> %@: subRouters: %@]
@"NSSet"16@?0@"NSSet"8
source
timestamp
cachePolicy
combinePolicy
unknown
Can only be called by subclass
<HMEEvent size = %@>
Unknown
keep-alive
connectionless
Unknown mode
MessageDatagramClient
v32@?0@"NSUUID"8@"NSDictionary"16@"NSError"24
 with non-terminating error: 
<HMEEventInfo topic = %@, event = %@>
HMERouterServer
[%@ topicRouter: %@]
Subclass Must implement
HMEMessageDatagramServer
v16@?0@"NSError"8
v16@?0@?<v@?>8
v32@?0@"NSString"8@"HMEEvent"16^B24
PersistentConnectionClient
v24@?0@"NSDictionary"8@"NSError"16
MemoryEventBus
com.apple.HomeKitEventRouter
v8@?0
HMEErrorDomain
eventData
eventMetadata
Added topic filter %@
Removed topic filter %@
Starting up last event store
Unable to open in memory sqlite DB
Unable to set hme sqlite cache size to %@, %@
Unable to open in memory sqlite DB %@
Unable to create index %@
Unable to prepare insert statement error: %@
Unable to prepare select event statement error: %@
Unable to prepare delete event statement error: %@
Unable to prepare delete event like statement error: %@
Unable to prepare delete before timestamp statement error: %@
Unable to prepare insert if most recent event statement: %@
Unable to reset events in sqlite DB %@
Unexpected status when performing select query
Error executing select for topic: %@, error: %@
Error executing delete statement %@
Error executing delete statement topic:%@ error:%@
Error executing delete like statement topicSubstring:%@ error:%@
Error executing insert statement topic: %@, error: %@
Saved event for topic: %@
Unrecognized cache policy, will not cache. %@
Processed save request for topic: %@, didChange: %@
Not processing events when not active
Forwarding received event for topic %@
Processing received cached events %ld
Processing received cached events %@
Forwarding received cached event for topic %@
Subscribing to topics on subrouter register, router: %@, topics: %@
Registered on subRouter: %@
Changing registrations for consumer: %@, topicFilterAdditions: %@, topicFilterRemovals: %@
Unregistering consumer: %@
Received event for topic %@, event: %@
Received cached event for topic %@, event: %@
Delegating registrations to subRouter: %@, topicFilterAdditions: %@, topicFilterRemovals: %@
changed registrations on subRouter: %@
Removing connection %@ registrations on unregister
Removing connection %@ registrations on invalidation
Processing request to change registrations for connection: %@  with addedTopics:%ld removedTopics: %ld
Processing request to change registrations for connection: %@  with addedTopics:%@ removedTopics: %@
Did not expect events when not connected.
Event's from server %@ not from expected server %@.
Did not expect cached events when not connected.
Cached event's from server %@ not from expected server %@.
Server identifier changed and removing reconnection timer
Server identifier changed to %@. Currently connected to %@
Server identifier changed to %@. Currently disconnected.
Updated connection mode to %@
Updating fetch allowed to %{public}@
Sending connect request with additions %@
Successfully connected with %@.
Unable to connect to %@ got error %@
Sending change registrations request with additions: %ld removals: %ld
Sending change registrations request with additions: %@ removals: %@
Successfully processed change registrations request
Successfully processed change registrations request with additions: %@ removals: %@
Unable to process change registrations error %@
Sending disconnect request
Did not disconnect cleanly got error %@
Did disconnect
Sending keep-alive request
Keep alive request responded with terminating error: %@
Keep alive request responded%@%@
No delegate set
Sending subscription fetch request
got topics %ld
got topics %@
Starting keep alive timer.
Connection retry timer fired: %f
Starting connection retry timer with interval: %f
Removing reconnection timer
Starting dormant fetch timer.
Conditions to fetch not met will fetch later.
Unexpected connection mode.
Received cached events on connect %@
Received cached events on change registrations %@
Will disconnect due to pending server change request
Will perform connect operation
Will disconnect as connection mode is not connectionless
Posting connect event %@ on connection %@ register
Posted connect event with result %@
Posting unregister event %@ on connection %@ unregister
Posted unregister event with result %@
Will change registrations with subscription provider additions:%@, removals:%@
Error changing subscriptions with local subscription provider %@
Successfully changed subscriptions by adding:%@ removing: %@
Handling event for topic %@
Adding pending event topic: %@ to connection: %@
Delegate did not allow event %@ to %@
Removing connection on terminal error %@
Connection expiry timer fired
Debounce timer fired
Starting request to send events to connection %@
Sent events to connection: %@ with response %@
Sent events: %@ to connection: %@, response: %@
Removed connection item as connection was not found %@
Removed connection item as connection has expired %@, connection: %@
Added connection %@ with expiry %@
Updated connection %@ expiry to %@
Updated connection %@ expiry to %@ on keep-alive
Did not find connection
Removing connection %@
Has cached events to send
Creating debounce timer, have events to send.
Skip processing for connection %@
Processing connection: %@
Adding cached event topic %@
Adding cached event topic: %@
Refresion:%@
Received connect request for connection: %@ with additions: %ld
Received connect request for connection: %@ with additions: %@
Connect not allowed in current state for connection: %@
Registering connection: %@ to topics: %ld
Registering connection: %@ to topics: %@
Will not process events for connection %@
Did not find item for connection: %@
Change registrations not allowed in current state for connection: %@
Processing request to change registrations for connection: %@ with addedTopics: %ld removedTopics: %ld
Processing request to change registrations for connection: %@ with addedTopics: %@ removedTopics: %@
Did not find connection keep-alive was received for.
Returning cached events for topics:%@
Resetting all events
Resetting all connections
Reregistering topics on reconnect.
Registering consumer: %@ for topicFilters: %@
Unregistering consumer: %@ from topicFilters: %@
Changing registrations for consumer: %@, topicFilterAdditions: %ld, topicFilterRemovals: %ld
HMETopicRouter
HMELastEventStore
HMEEventPersistence
HMELastEventStoreReadHandle
NSObject
HMELastEventStoreWriteHandle
HMEProtoEventInfo
NSCopying
HMERouterClient
HMECachedEventSource
HMELastEventStoreWriter
HMETopicRouterDelegate
HMESynchronousSubscriptionProviding
HMESubscriptionProviding
HMEDelegatingEventRouter
HMEEventConsumer
HMEPersistentConnectionServer
HMEProtoEventMetadata
HMEEventMetadata
HMEEvent
HMEMessageDatagramClient
HMEPendingEventsCollection
HMEEventInfo
HMERouterServer
HMEPendingTopicsCombiner
HMEConnectionInfoItem
HMEMessageDatagramServer
HMEPersistentConnectionClient
HMEMemoryEventBus
HMEEventForwarder
HMEProtoEvent
Td,R,V_dormatFetchTimerInterval
T#,R
T@"<HMELastEventStoreReadHandle>",R,V_eventStoreReadHandle
_initWithSource:rawCachePolicy:rawCombineType:rawQos:timestamp:
T@"<HMEMemoryEventBusDataSource>",W,V_dataSource
_logger
T@"<HMEMessageDatagramClientDataSource>",W,N,V_dataSource
_rawCombineType
T@"<HMEMessageDatagramServerDataSource>",W,V_dataSource
_source
T@"<HMEPersistentConnectionClientDelegate>",W
connectionRetryIntervalProvider
T@"<HMEPersistentConnectionServerDelegate>",W,V_delegate
copyTo:
T@"<HMESynchronousSubscriptionProviding>",R,V_subscriptionProvider
initWithEvents:
T@"<HMETimer>",&,N,V_dormantFetchTimer
keepAliveConnection:completion:
T@"<HMETimer>",&,V_connectionDebounceTimer
pbEvent
T@"<HMETimerIntervalProvider>",R,V_connectionRetryIntervalProvider
T@"<HMETopicRouterDelegate>",R,W,V_delegate
resetEventStore
T@"HMEEventMetadata",R,V_eventMetadata
server:expandedTopicsForTopics:
T@"HMEPendingEventsCollection",R,N,V_pendingEventItems
setCachePolicy:
T@"HMEProtoEvent",&,N,V_event
setQos:
T@"HMETopicRouter",R,V_topicRouter
suspend
T@"NSArray",R,C,N
.cxx_destruct
_connectionMode
T@"<HMEEventForwarder>",R,V_localEventForwarder
_expiry
T@"<HMELastEventStoreWriteHandle>",R,V_eventStoreWriteHandle
_keepAliveTimer
T@"<HMEMemoryEventBusDelegate>",W,V_delegate
_rawCachePolicy
T@"<HMEMessageDatagramClientDelegate>",W
_rawQOS
T@"<HMEMessageDatagramServerDelegate>",W,V_delegate
addTopicFilters
T@"<HMEPersistentConnectionServerDataSource>",W,V_dataSource
containsObject:
T@"<HMERouterClientDelegate>",W,V_privateDelegate
dealloc
T@"<HMETimer>",&,N,V_connectionRetryTimer
isProxy
T@"<HMETimer>",&,N,V_keepAliveTimer
numberWithBool:
T@"<HMETimer>",&,V_connectionExpiryTimer
privateDelegate
T@"<HMETimerProvider>",R,V_timerProvider
release
T@"HMEEvent",R,N,V_event
sendUpdatedEvents:toConnection:
T@"HMEPendingEventsCollection",R,N,V_pendingCachedEventItems
T@"HMEPendingTopicsCombiner",R,V_pendingTopicsCombiner
setIsConnected:
T@"HMEProtoEventMetadata",&,N,V_eventMetadata
startup
T@"NSArray",R
synchronousSubscriptionProvider
T@"NSData",&,N,V_eventData
T@"NSData",R,C
T@"NSData",R,C,N,V_eventData
T@"NSDate",&,N,V_debounceStartTime
T@"NSDate",&,N,V_expiry
T@"NSMapTable",R,N,V_registrations
T@"NSMapTable",R,V_unregisterEvents
T@"NSMutableArray",&,N,V_mutableEventItems
T@"NSMutableArray",R,N,V_connectionInfoItems
T@"NSMutableSet",&,V_addTopicFilters
T@"NSMutableSet",&,V_removeTopicFilters
T@"NSMutableSet",R,N,V_registeredTopics
T@"NSObject<OS_dispatch_queue>",R,V_queue
T@"NSString",&,N,V_source
T@"NSString",&,N,V_topic
T@"NSString",R,C
T@"NSString",R,C,N,V_topic
T@"NSString",R,C,V_source
T@"NSString",R,V_fileName
T@"NSUUID",&,N,V_connectedServerIdentifier
T@"NSUUID",R,C,N,V_identifier
T@"NSUUID",R,V_identifier
T@,W,N,V_connection
TB,N
TB,N,V_dormantFetchConditionsMet
TB,N,V_hasPendingRequest
TB,N,V_hasPendingServerChangeRequest
TB,N,V_isConnected
TB,N,V_isWaitingForFetchConditionsWhenDormant
TB,R,N
TI,N,V_cachePolicy
TI,N,V_combinePolicy
TI,N,V_qos
TQ,R
TQ,R,V_rawCachePolicy
TQ,R,V_rawCombineType
TQ,R,V_rawQOS
Td,N,V_timestamp
Td,R,V_intervalSinceReferenceDate
Td,R,V_keepAliveInterval
Tq,N,V_connectionMode
UTF8String
UUID
_addTopicFilters
_cachePolicy
_combinePolicy
_connectedServerIdentifier
_connection
_connectionDebounceTimer
_connectionExpiryTimer
_connectionInfoItems
_connectionRetryIntervalProvider
_connectionRetryTimer
_dataSource
_debounceStartTime
_delegate
_dormantFetchConditionsMet
_dormantFetchTimer
_dormatFetchTimerInterval
_event
_eventData
_eventMetadata
_eventStoreReadHandle
_eventStoreWriteHandle
_fileName
_has
_hasPendingRequest
_hasPendingServerChangeRequest
_identifier
_initWithEventData:metadata:
_intervalSinceReferenceDate
_isConnected
_isWaitingForFetchConditionsWhenDormant
_keepAliveInterval
_localEventForwarder
_lock
_mutableEventItems
_pendingCachedEventItems
_pendingEventItems
_pendingTopicsCombiner
_privateDelegate
_qos
_queue
_registeredTopics
_registrations
_removeTopicFilters
_subRouters
_subscriptionProvider
_timerProvider
_timestamp
_topic
_topicRouter
_unregisterEvents
addEventInfo:
addObject:
addObjectsFromArray:
allObjects
allRegisteredTopicFilters
allocWithZone:
appendFormat:
array
arrayWithCapacity:
arrayWithObjects:count:
autorelease
bytes
cachePolicy
cachedEventsForExpandedTopics:
changeRegistrationsForConnection:topicFilterAdditions:topicFilterRemovals:completion:
changeRegistrationsForConsumer:topicFilterAdditions:topicFilterRemovals:
changeRegistrationsForConsumer:topicFilterAdditions:topicFilterRemovals:completion:
changeRegistrationsSyncForConsumer:topicFilterAdditions:topicFilterRemovals:completion:
class
client:fetchWithFilters:completion:
client:forwardingTopicsForTopics:
client:isConnectionTerminatingError:
client:sendChangeRegistrationsWithAddedFilters:removedFilters:completion:
client:sendConnectWithAddedFilters:completion:
client:upstreamTopicsForTopic:
clientDidConnect:serverIdentifier:
clientDidDisconnect:
clientIsEnabled:
combineOntoPreviousAdditions:removals:
combinePolicy
combinePreviousEvents:
combineType
combineWithAdditions:removals:
componentsJoinedByString:
componentsSeparatedByString:
conformsToProtocol:
connectWithConnection:connectEvent:unregisterEvent:completion:
connectWithConnection:connectEvent:unregisterEvent:topicFilterAdditions:completion:
connectedServerIdentifier
connection
connectionCapabilityDidChange
connectionDebounceTimer
connectionExpiryTimer
connectionInfoItems
connectionMode
connectionRetryTimer
consumersForTopic:
copy
copyWithZone:
count
countByEnumeratingWithState:objects:count:
currentDate
data
dataSource
dataWithBytes:length:
dateByAddingTimeInterval:
dateWithTimeIntervalSinceNow:
debounceStartTime
debugDescription
delegate
delegatingRouter:filteredTopics:forRouter:
delegatingRouter:upstreamTopicsFor:
deleteBeforeTimestampPreparedStatement
deleteEventByKeyLikePreparedStatement
deleteEventByKeyPreparedStatement
description
dictionary
dictionaryRepresentation
dictionaryWithObjects:forKeys:count:
didChangeRegistrationsWithTopicFilterAdditions:removals:
didConnectConnection:connectEvent:unregisterEvent:
didInvalidateConnection
didInvalidateConnection:
didReceiveCachedEvent:topic:source:
didReceiveEvent:topic:
didReceiveMessageWithCachedEvents:serverIdentifier:completion:
didReceiveMessageWithEvents:serverIdentifier:completion:
didReconnect
didRemoveConnection:
disconnectConnection:
dormantFetchConditionsMet
dormantFetchTimer
dormatFetchTimerInterval
dumpStateDescription
encodedData
enumerateKeysAndObjectsUsingBlock:
errorWithDomain:code:userInfo:
event
eventData
eventFromProtobuff:
eventInfoFromProtoData:
eventInfoMaxSizeInBytes:
eventItems
eventMetadata
eventStoreReadHandle
eventStoreWriteHandle
eventsForTopicFilters:
eventsForTopicFilters:sinceReferenceTimestamp:
eventsMapFromEventInfos:
eventsMapFromProtoEvents:
exceptionWithName:reason:userInfo:
expandedTopicsForTopics:
expiry
fetchCachedEventsForTopics:completion:
fileName
forwardEvent:topic:completion:
forwardingTopicsForAdditions:removals:current:indexProvider:
forwardingTopicsForTopics:
fromProtobuff:
handleCachedEvent:topic:
handleChangeRegistrationsWithTopicFilterAdditions:removals:
handleEvent:topic:
hasCachePolicy
hasCombinePolicy
hasEvent
hasEventData
hasEventItem
hasEventMetadata
hasPendingRequest
hasPendingServerChangeRequest
hasQos
hasSource
hasTimestamp
hasTopic
hash
identifier
init
initDefaultMetadata
initInMemoryStore
initWithConnection:expiry:
initWithData:
initWithDelegate:
initWithDelegate:logCategory:
initWithDelegate:logger:
initWithEvent:topic:
initWithEventData:
initWithEventData:metadata:
initWithFileName:
initWithQueue:
initWithQueue:dataSource:
initWithQueue:dataSource:logger:
initWithQueue:dataSource:storeReadHandle:logCategory:identifier:
initWithQueue:dataSource:storeReadHandle:logger:identifier:
initWithQueue:provider:registrationEventRouter:
initWithQueue:provider:registrationEventRouter:storeReadHandle:logCategory:
initWithQueue:provider:registrationEventRouter:storeReadHandle:logger:
initWithQueue:storeReadHandle:logger:
initWithQueue:storeReadHandle:storeWriteHandle:
initWithQueue:storeReadHandle:storeWriteHandle:logCategory:
initWithQueue:storeReadHandle:storeWriteHandle:logger:
initWithQueue:timerProvider:keepAliveInterval:dormantFetchTimerInterval:retryIntervalProvider:
initWithQueue:timerProvider:keepAliveInterval:dormantFetchTimerInterval:retryIntervalProvider:storeReadHandle:storeWriteHandle:logCategory:
initWithSource:cachePolicy:combineType:timestamp:
initWithSubclassedEventMetadata:
initWithUUIDString:
insertEventPreparedStatement
intersectSet:
intervalSinceReferenceDate
isActiveForSaving
isCachedEventSourceCurrentProcess
isConnected
isEqual:
isEqualToString:
isKindOfClass:
isMemberOfClass:
isWaitingForFetchConditionsWhenDormant
keepAliveInterval
keepAliveTimer
lastEventForTopic:
lastObject
length
localEventForwarder
mergeFrom:
minimalSpanningTopicFilters
minusSet:
mutableCopy
mutableEventItems
nextInterval
numberWithDouble:
numberWithInt:
numberWithUnsignedInt:
numberWithUnsignedInteger:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
pbEventInfo
pendingCachedEventItems
pendingEventItems
pendingTopicsCombiner
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
popEventItemsUpWithFragments:toSizeInBytes:usedBytes:
processReceivedCachedEvents:
processReceivedCachedEventsFromMessage:
processReceivedEvents:
processReceivedEventsFromMessage:
queue
rawCachePolicy
rawCombineType
rawQOS
readFrom:
refreshConnection:
registerConsumer:topicFilters:
registerConsumer:topicFilters:completion:
registerSubRouter:
registeredTopics
registrations
removeAllObjects
removeObject:
removeObjectForKey:
removeTopicFilters
replaceEventIfMoreRecentOrDifferentSourcePreparedStatement
reset
resetBeforeReferenceTimestamp:
resetExistingEvents
resetItems
resetTopic:
resetWildcardTopics:
respondsToSelector:
resume
retain
retainCount
selectEventByKeyPreparedStatement
self
sendChangeRegistrationsMessageWithAddedFilters:removedFilters:completion:
sendDisconnectForClient:completion:
sendKeepAliveForClient:completion:
sendUpdatedCachedEvents:toConnection:
server:connectionDidExpire:
server:connectionDidFail:
server:forwardingTopicsForTopics:
server:isConnectionTerminatingError:
server:logMetricsForEventTopic:eventSize:isCached:
server:logMetricsForMessageDatagramFragmentation:isFragmented:
server:sendEvents:cachedEvents:connection:completion:
server:shouldProcessEventsForConnection:shouldLogState:
server:timeoutIntervalForConnection:
server:upstreamTopicsForTopic:
serverDebounceTimeInterval:
serverDidChangeWithServerIdentifier:
serverFragmentEventsDataSize:
serverSupportFragmentCachedEvents:
serverTimerProvider:
setAddTopicFilters:
setCombinePolicy:
setConnectedServerIdentifier:
setConnection:
setConnectionDebounceTimer:
setConnectionExpiryTimer:
setConnectionMode:
setConnectionRetryTimer:
setDataSource:
setDebounceStartTime:
setDelegate:
setDormantFetchConditionsMet:
setDormantFetchTimer:
setEvent:
setEventData:
setEventMetadata:
setExpiry:
setHasCachePolicy:
setHasCombinePolicy:
setHasPendingRequest:
setHasPendingServerChangeRequest:
setHasQos:
setHasTimestamp:
setIsWaitingForFetchConditionsWhenDormant:
setKeepAliveTimer:
setMutableEventItems:
setObject:forKey:
setObject:forKeyedSubscript:
setPrivateDelegate:
setRemoveTopicFilters:
setSource:
setTimestamp:
setTopic:
setWithArray:
shouldAllowEvent:topic:connection:
source
stringWithCString:encoding:
stringWithFormat:
stringWithString:
stringWithUTF8String:
subarrayWithRange:
subscriptionProvider
substringToIndex:
superclass
timeIntervalSinceDate:
timeIntervalSinceNow
timeIntervalSinceReferenceDate
timerProvider
timerWithQueue:interval:timerFireHandler:
timestamp
topic
topicAndMetadataMaxSizeInBytes
topicFiltersToAdd
topicFiltersToRemove
topicRouter
topicsForConsumer:
unregisterConsumer:
unregisterConsumer:completion:
unregisterConsumer:topicFilters:
unregisterConsumer:topicFilters:completion:
unregisterConsumerSync:completion:
unregisterEvents
unregisterSubRouter:
updateConnectionMode:completion:
updateDormantFetchCondition:completion:
upstreamTopicsForTopic:
weakToStrongObjectsMapTable
writeTo:
writer:saveEvent:topic:
writer:saveEventIfAllowed:topic:
writer:saveEventIfDifferent:topic:
zone
@48@0:8@16@24@32@?40
@16@0:8
@24@0:8@16
@32@0:8@16r*24
@32@0:8@16@24
v32@0:8@16@24
v40@0:8@16@24@32
v24@0:8@16
v16@0:8
@"NSObject<OS_os_log>"
@"NSMapTable"
@"NSMutableSet"
@"<HMETopicRouterDelegate>"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"HMEEvent"24@0:8@"NSString"16
@"NSDictionary"24@0:8@"NSArray"16
B40@0:8@16@24@32
v40@0:8@"<HMELastEventStoreWriter>"16@"HMEEvent"24@"NSString"32
B40@0:8@"<HMELastEventStoreWriter>"16@"HMEEvent"24@"NSString"32
v24@0:8@"NSString"16
@32@0:8@16d24
v24@0:8d16
@"NSDictionary"32@0:8@"NSArray"16d24
^{sqlite3=}
^{sqlite3_stmt=}
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSString"
@24@0:8^{_NSZone=}16
@"HMEProtoEvent"
v32@0:8@"NSArray"16@"NSArray"24
@"NSSet"24@0:8@"NSString"16
v48@0:8@16@24@32@?40
v32@0:8@16@?24
v48@0:8@"<HMEEventConsumer>"16@"NSArray"24@"NSArray"32@?<v@?@"NSDictionary"@"NSError">40
v32@0:8@"<HMEEventConsumer>"16@?<v@?@"NSError">24
v40@0:8@16@24@?32
v40@0:8@"<HMEEventConsumer>"16@"NSArray"24@?<v@?@"NSDictionary"@"NSError">32
v40@0:8@"<HMEEventConsumer>"16@"NSArray"24@?<v@?@"NSError">32
@"<HMESynchronousSubscriptionProviding>"16@0:8
@48@0:8@16@24@32@40
@40@0:8@16@24@32
B32@0:8@16@24
@"<HMELastEventStoreReadHandle>"
@"<HMELastEventStoreWriteHandle>"
@"NSObject<OS_dispatch_queue>"
@"HMETopicRouter"
@"<HMERouterClientDelegate>"
v32@0:8@"HMEEvent"16@"NSString"24
v40@0:8@"HMEEvent"16@"NSString"24@"<HMECachedEventSource>"32
@56@0:8@16@24@32r*40@48
@56@0:8@16@24@32@40@48
@"NSUUID"
@"<HMEDelegatingEventRouterDataSource>"
@56@0:8@16@24@32@40r*48
@"<HMEPersistentConnectionServerDelegate>"
@"<HMEPersistentConnectionServerDataSource>"
v20@0:8B16
v20@0:8I16
d16@0:8
I16@0:8
{?="timestamp"b1"cachePolicy"b1"combinePolicy"b1"qos"b1}
@48@0:8@16Q24Q32d40
@56@0:8@16Q24Q32Q40d48
@"HMEEventMetadata"
@"NSData"
@56@0:8@16@24d32d40@48
@80@0:8@16@24d32d40@48@56@64r*72
v32@0:8q16@?24
q16@0:8
v24@0:8q16
@"<HMEMessageDatagramClientDataSource>"
@"<HMETimerIntervalProvider>"
@"<HMETimerProvider>"
@"HMEPendingTopicsCombiner"
@"<HMETimer>"
@36@0:8B16Q20^Q28
Q24@0:8@16
@"NSMutableArray"
@"HMEEvent"
@"<HMESynchronousSubscriptionProviding>"
@"<HMEEventForwarder>"
@"HMEPendingEventsCollection"
@"NSDate"
v56@0:8@16@24@32@40@?48
@"<HMEMessageDatagramServerDelegate>"
@"<HMEMessageDatagramServerDataSource>"
v40@0:8@"HMEEvent"16@"NSString"24@?<v@?@"NSError">32
@48@0:8@16@24@32r*40
@"<HMEMemoryEventBusDelegate>"
@"<HMEMemoryEventBusDataSource>"
@"HMEProtoEventMetadata"
<Z@(#)PROGRAM:HomeKitEventRouter  PROJECT:HomeKit-1.2.3
333333
TopicRouter
Unimplemented method
[HMETopicRouter registrations: {}]
[(HM) uuid = %@]
[(AC) uuid = %@]
[(AS) keyPath = %@]
v32@?0@"NSUUID"8@"NSArray"16^B24
[HMETopicRouter registrations: %@]
settings
updated
:memory:
HMELastEventStore
PRAGMA cache_size = %@;
CREATE TABLE IF NOT EXISTS eventstore (id integer primary key autoincrement, key string not null unique, value blob not null, m_source string not null, m_timestamp double not null, m_cachepolicy integer not null, m_combinetype not null, m_qos integer not null);
CREATE INDEX IF NOT EXISTS eventstore_key_index on eventstore (key);
replace into eventstore (key, value, m_source, m_timestamp, m_cachepolicy, m_combinetype, m_qos) values (?1, ?2, ?3, ?4, ?5, ?6, ?7);
select key, value, m_source, m_timestamp, m_cachepolicy, m_combinetype, m_qos from eventstore where key = ?1;
delete from eventstore where key = ?1;
delete from eventstore where key like '%' || ?1 || '%';
delete from eventstore where m_timestamp < ?1;
insert into eventstore (key, value, m_source, m_timestamp, m_cachepolicy, m_combinetype, m_qos) values (?1, ?2, ?3, ?4, ?5, ?6, ?7) on conflict(key) do update set value=excluded.value, m_source = excluded.m_source, m_timestamp = excluded.m_timestamp, m_cachepolicy = excluded.m_cachepolicy, m_combinetype = excluded.m_combinetype, m_qos = excluded.m_qos where (excluded.m_timestamp > eventstore.m_timestamp OR excluded.m_source != eventstore.m_source);
DELETE FROM eventstore;
code
extendedCode
text
command
%@ %@
topic
event
HMERouterClient
[%@: topicRouter: %@]
Router.Delegating
[<HMEDelegatingEventRouter %p> %@: subRouters: %@]
@"NSSet"16@?0@"NSSet"8
source
timestamp
cachePolicy
combinePolicy
unknown
Can only be called by subclass
<HMEEvent size = %@>
Unknown
keep-alive
connectionless
Unknown mode
MessageDatagramClient
v32@?0@"NSUUID"8@"NSDictionary"16@"NSError"24
 with non-terminating error: 
<HMEEventInfo topic = %@, event = %@>
HMERouterServer
[%@ topicRouter: %@]
Subclass Must implement
HMEMessageDatagramServer
v16@?0@"NSError"8
v16@?0@?<v@?>8
v32@?0@"NSString"8@"HMEEvent"16^B24
PersistentConnectionClient
v24@?0@"NSDictionary"8@"NSError"16
MemoryEventBus
com.apple.HomeKitEventRouter
v8@?0
HMEErrorDomain
eventData
eventMetadata
Added topic filter %@
Removed topic filter %@
Starting up last event store
Unable to open in memory sqlite DB
Unable to set hme sqlite cache size to %@, %@
Unable to open in memory sqlite DB %@
Unable to create index %@
Unable to prepare insert statement error: %@
Unable to prepare select event statement error: %@
Unable to prepare delete event statement error: %@
Unable to prepare delete event like statement error: %@
Unable to prepare delete before timestamp statement error: %@
Unable to prepare insert if most recent event statement: %@
Unable to reset events in sqlite DB %@
Unexpected status when performing select query
Error executing select for topic: %@, error: %@
Error executing delete statement %@
Error executing delete statement topic:%@ error:%@
Error executing delete like statement topicSubstring:%@ error:%@
Error executing insert statement topic: %@, error: %@
Saved event for topic: %@
Unrecognized cache policy, will not cache. %@
Processed save request for topic: %@, didChange: %@
Not processing events when not active
Forwarding received event for topic %@
Processing received cached events %ld
Processing received cached events %@
Forwarding received cached event for topic %@
Subscribing to topics on subrouter register, router: %@, topics: %@
Registered on subRouter: %@
Changing registrations for consumer: %@, topicFilterAdditions: %@, topicFilterRemovals: %@
Unregistering consumer: %@
Received event for topic %@, event: %@
Received cached event for topic %@, event: %@
Delegating registrations to subRouter: %@, topicFilterAdditions: %@, topicFilterRemovals: %@
changed registrations on subRouter: %@
Removing connection %@ registrations on unregister
Removing connection %@ registrations on invalidation
Processing request to change registrations for connection: %@  with addedTopics:%ld removedTopics: %ld
Processing request to change registrations for connection: %@  with addedTopics:%@ removedTopics: %@
Did not expect events when not connected.
Event's from server %@ not from expected server %@.
Did not expect cached events when not connected.
Cached event's from server %@ not from expected server %@.
Server identifier changed and removing reconnection timer
Server identifier changed to %@. Currently connected to %@
Server identifier changed to %@. Currently disconnected.
Updated connection mode to %@
Updating fetch allowed to %{public}@
Sending connect request with additions %@
Successfully connected with %@.
Unable to connect to %@ got error %@
Sending change registrations request with additions: %ld removals: %ld
Sending change registrations request with additions: %@ removals: %@
Successfully processed change registrations request
Successfully processed change registrations request with additions: %@ removals: %@
Unable to process change registrations error %@
Sending disconnect request
Did not disconnect cleanly got error %@
Did disconnect
Sending keep-alive request
Keep alive request responded with terminating error: %@
Keep alive request responded%@%@
No delegate set
Sending subscription fetch request
got topics %ld
got topics %@
Starting keep alive timer.
Connection retry timer fired: %f
Starting connection retry timer with interval: %f
Removing reconnection timer
Starting dormant fetch timer.
Conditions to fetch not met will fetch later.
Unexpected connection mode.
Received cached events on connect %@
Received cached events on change registrations %@
Will disconnect due to pending server change request
Will perform connect operation
Will disconnect as connection mode is not connectionless
Posting connect event %@ on connection %@ register
Posted connect event with result %@
Posting unregister event %@ on connection %@ unregister
Posted unregister event with result %@
Will change registrations with subscription provider additions:%@, removals:%@
Error changing subscriptions with local subscription provider %@
Successfully changed subscriptions by adding:%@ removing: %@
Handling event for topic %@
Adding pending event topic: %@ to connection: %@
Delegate did not allow event %@ to %@
Removing connection on terminal error %@
Connection expiry timer fired
Debounce timer fired
Starting request to send events to connection %@
Sent events to connection: %@ with response %@
Sent events: %@ to connection: %@, response: %@
Removed connection item as connection was not found %@
Removed connection item as connection has expired %@, connection: %@
Added connection %@ with expiry %@
Updated connection %@ expiry to %@
Updated connection %@ expiry to %@ on keep-alive
Did not find connection
Removing connection %@
Has cached events to send
Creating debounce timer, have events to send.
Skip processing for connection %@
Processing connection: %@
Adding cached event topic %@
Adding cached event topic: %@
Refresion:%@
Received connect request for connection: %@ with additions: %ld
Received connect request for connection: %@ with additions: %@
Connect not allowed in current state for connection: %@
Registering connection: %@ to topics: %ld
Registering connection: %@ to topics: %@
Will not process events for connection %@
Did not find item for connection: %@
Change registrations not allowed in current state for connection: %@
Processing request to change registrations for connection: %@ with addedTopics: %ld removedTopics: %ld
Processing request to change registrations for connection: %@ with addedTopics: %@ removedTopics: %@
Did not find connection keep-alive was received for.
Returning cached events for topics:%@
Resetting all events
Resetting all connections
Reregistering topics on reconnect.
Registering consumer: %@ for topicFilters: %@
Unregistering consumer: %@ from topicFilters: %@
Changing registrations for consumer: %@, topicFilterAdditions: %ld, topicFilterRemovals: %ld
HMETopicRouter
HMELastEventStore
HMEEventPersistence
HMELastEventStoreReadHandle
NSObject
HMELastEventStoreWriteHandle
HMEProtoEventInfo
NSCopying
HMERouterClient
HMECachedEventSource
HMELastEventStoreWriter
HMETopicRouterDelegate
HMESynchronousSubscriptionProviding
HMESubscriptionProviding
HMEDelegatingEventRouter
HMEEventConsumer
HMEPersistentConnectionServer
HMEProtoEventMetadata
HMEEventMetadata
HMEEvent
HMEMessageDatagramClient
HMEPendingEventsCollection
HMEEventInfo
HMERouterServer
HMEPendingTopicsCombiner
HMEConnectionInfoItem
HMEMessageDatagramServer
HMEPersistentConnectionClient
HMEMemoryEventBus
HMEEventForwarder
HMEProtoEvent
Td,R,V_dormatFetchTimerInterval
T#,R
T@"<HMELastEventStoreReadHandle>",R,V_eventStoreReadHandle
_initWithSource:rawCachePolicy:rawCombineType:rawQos:timestamp:
T@"<HMEMemoryEventBusDataSource>",W,V_dataSource
_logger
T@"<HMEMessageDatagramClientDataSource>",W,N,V_dataSource
_rawCombineType
T@"<HMEMessageDatagramServerDataSource>",W,V_dataSource
_source
T@"<HMEPersistentConnectionClientDelegate>",W
connectionRetryIntervalProvider
T@"<HMEPersistentConnectionServerDelegate>",W,V_delegate
copyTo:
T@"<HMESynchronousSubscriptionProviding>",R,V_subscriptionProvider
initWithEvents:
T@"<HMETimer>",&,N,V_dormantFetchTimer
keepAliveConnection:completion:
T@"<HMETimer>",&,V_connectionDebounceTimer
pbEvent
T@"<HMETimerIntervalProvider>",R,V_connectionRetryIntervalProvider
T@"<HMETopicRouterDelegate>",R,W,V_delegate
resetEventStore
T@"HMEEventMetadata",R,V_eventMetadata
server:expandedTopicsForTopics:
T@"HMEPendingEventsCollection",R,N,V_pendingEventItems
setCachePolicy:
T@"HMEProtoEvent",&,N,V_event
setQos:
T@"HMETopicRouter",R,V_topicRouter
suspend
T@"NSArray",R,C,N
.cxx_destruct
_connectionMode
T@"<HMEEventForwarder>",R,V_localEventForwarder
_expiry
T@"<HMELastEventStoreWriteHandle>",R,V_eventStoreWriteHandle
_keepAliveTimer
T@"<HMEMemoryEventBusDelegate>",W,V_delegate
_rawCachePolicy
T@"<HMEMessageDatagramClientDelegate>",W
_rawQOS
T@"<HMEMessageDatagramServerDelegate>",W,V_delegate
addTopicFilters
T@"<HMEPersistentConnectionServerDataSource>",W,V_dataSource
containsObject:
T@"<HMERouterClientDelegate>",W,V_privateDelegate
dealloc
T@"<HMETimer>",&,N,V_connectionRetryTimer
isProxy
T@"<HMETimer>",&,N,V_keepAliveTimer
numberWithBool:
T@"<HMETimer>",&,V_connectionExpiryTimer
privateDelegate
T@"<HMETimerProvider>",R,V_timerProvider
release
T@"HMEEvent",R,N,V_event
sendUpdatedEvents:toConnection:
T@"HMEPendingEventsCollection",R,N,V_pendingCachedEventItems
T@"HMEPendingTopicsCombiner",R,V_pendingTopicsCombiner
setIsConnected:
T@"HMEProtoEventMetadata",&,N,V_eventMetadata
startup
T@"NSArray",R
synchronousSubscriptionProvider
T@"NSData",&,N,V_eventData
T@"NSData",R,C
T@"NSData",R,C,N,V_eventData
T@"NSDate",&,N,V_debounceStartTime
T@"NSDate",&,N,V_expiry
T@"NSMapTable",R,N,V_registrations
T@"NSMapTable",R,V_unregisterEvents
T@"NSMutableArray",&,N,V_mutableEventItems
T@"NSMutableArray",R,N,V_connectionInfoItems
T@"NSMutableSet",&,V_addTopicFilters
T@"NSMutableSet",&,V_removeTopicFilters
T@"NSMutableSet",R,N,V_registeredTopics
T@"NSObject<OS_dispatch_queue>",R,V_queue
T@"NSString",&,N,V_source
T@"NSString",&,N,V_topic
T@"NSString",R,C
T@"NSString",R,C,N,V_topic
T@"NSString",R,C,V_source
T@"NSString",R,V_fileName
T@"NSUUID",&,N,V_connectedServerIdentifier
T@"NSUUID",R,C,N,V_identifier
T@"NSUUID",R,V_identifier
T@,W,N,V_connection
TB,N
TB,N,V_dormantFetchConditionsMet
TB,N,V_hasPendingRequest
TB,N,V_hasPendingServerChangeRequest
TB,N,V_isConnected
TB,N,V_isWaitingForFetchConditionsWhenDormant
TB,R,N
TI,N,V_cachePolicy
TI,N,V_combinePolicy
TI,N,V_qos
TQ,R
TQ,R,V_rawCachePolicy
TQ,R,V_rawCombineType
TQ,R,V_rawQOS
Td,N,V_timestamp
Td,R,V_intervalSinceReferenceDate
Td,R,V_keepAliveInterval
Tq,N,V_connectionMode
UTF8String
UUID
_addTopicFilters
_cachePolicy
_combinePolicy
_connectedServerIdentifier
_connection
_connectionDebounceTimer
_connectionExpiryTimer
_connectionInfoItems
_connectionRetryIntervalProvider
_connectionRetryTimer
_dataSource
_debounceStartTime
_delegate
_dormantFetchConditionsMet
_dormantFetchTimer
_dormatFetchTimerInterval
_event
_eventData
_eventMetadata
_eventStoreReadHandle
_eventStoreWriteHandle
_fileName
_has
_hasPendingRequest
_hasPendingServerChangeRequest
_identifier
_initWithEventData:metadata:
_intervalSinceReferenceDate
_isConnected
_isWaitingForFetchConditionsWhenDormant
_keepAliveInterval
_localEventForwarder
_lock
_mutableEventItems
_pendingCachedEventItems
_pendingEventItems
_pendingTopicsCombiner
_privateDelegate
_qos
_queue
_registeredTopics
_registrations
_removeTopicFilters
_subRouters
_subscriptionProvider
_timerProvider
_timestamp
_topic
_topicRouter
_unregisterEvents
addEventInfo:
addObject:
addObjectsFromArray:
allObjects
allRegisteredTopicFilters
allocWithZone:
appendFormat:
array
arrayWithCapacity:
arrayWithObjects:count:
autorelease
bytes
cachePolicy
cachedEventsForExpandedTopics:
changeRegistrationsForConnection:topicFilterAdditions:topicFilterRemovals:completion:
changeRegistrationsForConsumer:topicFilterAdditions:topicFilterRemovals:
changeRegistrationsForConsumer:topicFilterAdditions:topicFilterRemovals:completion:
changeRegistrationsSyncForConsumer:topicFilterAdditions:topicFilterRemovals:completion:
class
client:fetchWithFilters:completion:
client:forwardingTopicsForTopics:
client:isConnectionTerminatingError:
client:sendChangeRegistrationsWithAddedFilters:removedFilters:completion:
client:sendConnectWithAddedFilters:completion:
client:upstreamTopicsForTopic:
clientDidConnect:serverIdentifier:
clientDidDisconnect:
clientIsEnabled:
combineOntoPreviousAdditions:removals:
combinePolicy
combinePreviousEvents:
combineType
combineWithAdditions:removals:
componentsJoinedByString:
componentsSeparatedByString:
conformsToProtocol:
connectWithConnection:connectEvent:unregisterEvent:completion:
connectWithConnection:connectEvent:unregisterEvent:topicFilterAdditions:completion:
connectedServerIdentifier
connection
connectionCapabilityDidChange
connectionDebounceTimer
connectionExpiryTimer
connectionInfoItems
connectionMode
connectionRetryTimer
consumersForTopic:
copy
copyWithZone:
count
countByEnumeratingWithState:objects:count:
currentDate
data
dataSource
dataWithBytes:length:
dateByAddingTimeInterval:
dateWithTimeIntervalSinceNow:
debounceStartTime
debugDescription
delegate
delegatingRouter:filteredTopics:forRouter:
delegatingRouter:upstreamTopicsFor:
deleteBeforeTimestampPreparedStatement
deleteEventByKeyLikePreparedStatement
deleteEventByKeyPreparedStatement
description
dictionary
dictionaryRepresentation
dictionaryWithObjects:forKeys:count:
didChangeRegistrationsWithTopicFilterAdditions:removals:
didConnectConnection:connectEvent:unregisterEvent:
didInvalidateConnection
didInvalidateConnection:
didReceiveCachedEvent:topic:source:
didReceiveEvent:topic:
didReceiveMessageWithCachedEvents:serverIdentifier:completion:
didReceiveMessageWithEvents:serverIdentifier:completion:
didReconnect
didRemoveConnection:
disconnectConnection:
dormantFetchConditionsMet
dormantFetchTimer
dormatFetchTimerInterval
dumpStateDescription
encodedData
enumerateKeysAndObjectsUsingBlock:
errorWithDomain:code:userInfo:
event
eventData
eventFromProtobuff:
eventInfoFromProtoData:
eventInfoMaxSizeInBytes:
eventItems
eventMetadata
eventStoreReadHandle
eventStoreWriteHandle
eventsForTopicFilters:
eventsForTopicFilters:sinceReferenceTimestamp:
eventsMapFromEventInfos:
eventsMapFromProtoEvents:
exceptionWithName:reason:userInfo:
expandedTopicsForTopics:
expiry
fetchCachedEventsForTopics:completion:
fileName
forwardEvent:topic:completion:
forwardingTopicsForAdditions:removals:current:indexProvider:
forwardingTopicsForTopics:
fromProtobuff:
handleCachedEvent:topic:
handleChangeRegistrationsWithTopicFilterAdditions:removals:
handleEvent:topic:
hasCachePolicy
hasCombinePolicy
hasEvent
hasEventData
hasEventItem
hasEventMetadata
hasPendingRequest
hasPendingServerChangeRequest
hasQos
hasSource
hasTimestamp
hasTopic
hash
identifier
init
initDefaultMetadata
initInMemoryStore
initWithConnection:expiry:
initWithData:
initWithDelegate:
initWithDelegate:logCategory:
initWithDelegate:logger:
initWithEvent:topic:
initWithEventData:
initWithEventData:metadata:
initWithFileName:
initWithQueue:
initWithQueue:dataSource:
initWithQueue:dataSource:logger:
initWithQueue:dataSource:storeReadHandle:logCategory:identifier:
initWithQueue:dataSource:storeReadHandle:logger:identifier:
initWithQueue:provider:registrationEventRouter:
initWithQueue:provider:registrationEventRouter:storeReadHandle:logCategory:
initWithQueue:provider:registrationEventRouter:storeReadHandle:logger:
initWithQueue:storeReadHandle:logger:
initWithQueue:storeReadHandle:storeWriteHandle:
initWithQueue:storeReadHandle:storeWriteHandle:logCategory:
initWithQueue:storeReadHandle:storeWriteHandle:logger:
initWithQueue:timerProvider:keepAliveInterval:dormantFetchTimerInterval:retryIntervalProvider:
initWithQueue:timerProvider:keepAliveInterval:dormantFetchTimerInterval:retryIntervalProvider:storeReadHandle:storeWriteHandle:logCategory:
initWithSource:cachePolicy:combineType:timestamp:
initWithSubclassedEventMetadata:
initWithUUIDString:
insertEventPreparedStatement
intersectSet:
intervalSinceReferenceDate
isActiveForSaving
isCachedEventSourceCurrentProcess
isConnected
isEqual:
isEqualToString:
isKindOfClass:
isMemberOfClass:
isWaitingForFetchConditionsWhenDormant
keepAliveInterval
keepAliveTimer
lastEventForTopic:
lastObject
length
localEventForwarder
mergeFrom:
minimalSpanningTopicFilters
minusSet:
mutableCopy
mutableEventItems
nextInterval
numberWithDouble:
numberWithInt:
numberWithUnsignedInt:
numberWithUnsignedInteger:
objectAtIndexedSubscript:
objectForKey:
objectForKeyedSubscript:
pbEventInfo
pendingCachedEventItems
pendingEventItems
pendingTopicsCombiner
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
popEventItemsUpWithFragments:toSizeInBytes:usedBytes:
processReceivedCachedEvents:
processReceivedCachedEventsFromMessage:
processReceivedEvents:
processReceivedEventsFromMessage:
queue
rawCachePolicy
rawCombineType
rawQOS
readFrom:
refreshConnection:
registerConsumer:topicFilters:
registerConsumer:topicFilters:completion:
registerSubRouter:
registeredTopics
registrations
removeAllObjects
removeObject:
removeObjectForKey:
removeTopicFilters
replaceEventIfMoreRecentOrDifferentSourcePreparedStatement
reset
resetBeforeReferenceTimestamp:
resetExistingEvents
resetItems
resetTopic:
resetWildcardTopics:
respondsToSelector:
resume
retain
retainCount
selectEventByKeyPreparedStatement
self
sendChangeRegistrationsMessageWithAddedFilters:removedFilters:completion:
sendDisconnectForClient:completion:
sendKeepAliveForClient:completion:
sendUpdatedCachedEvents:toConnection:
server:connectionDidExpire:
server:connectionDidFail:
server:isConnectionTerminatingError:
server:logMetricsForEventTopic:eventSize:isCached:
server:logMetricsForMessageDatagramFragmentation:isFragmented:
server:sendEvents:cachedEvents:connection:completion:
server:shouldProcessEventsForConnection:shouldLogState:
server:timeoutIntervalForConnection:
server:upstreamTopicsForTopic:
serverDebounceTimeInterval:
serverDidChangeWithServerIdentifier:
serverFragmentEventsDataSize:
serverSupportFragmentCachedEvents:
serverTimerProvider:
setAddTopicFilters:
setCombinePolicy:
setConnectedServerIdentifier:
setConnection:
setConnectionDebounceTimer:
setConnectionExpiryTimer:
setConnectionMode:
setConnectionRetryTimer:
setDataSource:
setDebounceStartTime:
setDelegate:
setDormantFetchConditionsMet:
setDormantFetchTimer:
setEvent:
setEventData:
setEventMetadata:
setExpiry:
setHasCachePolicy:
setHasCombinePolicy:
setHasPendingRequest:
setHasPendingServerChangeRequest:
setHasQos:
setHasTimestamp:
setIsWaitingForFetchConditionsWhenDormant:
setKeepAliveTimer:
setMutableEventItems:
setObject:forKey:
setObject:forKeyedSubscript:
setPrivateDelegate:
setRemoveTopicFilters:
setSource:
setTimestamp:
setTopic:
setWithArray:
shouldAllowEvent:topic:connection:
source
stringWithCString:encoding:
stringWithFormat:
stringWithString:
stringWithUTF8String:
subarrayWithRange:
subscriptionProvider
substringToIndex:
superclass
timeIntervalSinceDate:
timeIntervalSinceNow
timeIntervalSinceReferenceDate
timerProvider
timerWithQueue:interval:timerFireHandler:
timestamp
topic
topicAndMetadataMaxSizeInBytes
topicFiltersToAdd
topicFiltersToRemove
topicRouter
topicsForConsumer:
unregisterConsumer:
unregisterConsumer:completion:
unregisterConsumer:topicFilters:
unregisterConsumer:topicFilters:completion:
unregisterConsumerSync:completion:
unregisterEvents
unregisterSubRouter:
updateConnectionMode:completion:
updateDormantFetchCondition:completion:
upstreamTopicsForTopic:
weakToStrongObjectsMapTable
writeTo:
writer:saveEvent:topic:
writer:saveEventIfAllowed:topic:
writer:saveEventIfDifferent:topic:
zone
@48@0:8@16@24@32@?40
@16@0:8
@24@0:8@16
@32@0:8@16r*24
@32@0:8@16@24
v32@0:8@16@24
v40@0:8@16@24@32
v24@0:8@16
v16@0:8
@"NSObject<OS_os_log>"
@"NSMapTable"
@"NSMutableSet"
@"<HMETopicRouterDelegate>"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"HMEEvent"24@0:8@"NSString"16
@"NSDictionary"24@0:8@"NSArray"16
B40@0:8@16@24@32
v40@0:8@"<HMELastEventStoreWriter>"16@"HMEEvent"24@"NSString"32
B40@0:8@"<HMELastEventStoreWriter>"16@"HMEEvent"24@"NSString"32
v24@0:8@"NSString"16
@32@0:8@16d24
v24@0:8d16
@"NSDictionary"32@0:8@"NSArray"16d24
^{sqlite3=}
^{sqlite3_stmt=}
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSString"
@24@0:8^{_NSZone=}16
@"HMEProtoEvent"
v32@0:8@"NSArray"16@"NSArray"24
@"NSSet"24@0:8@"NSString"16
v48@0:8@16@24@32@?40
v32@0:8@16@?24
v48@0:8@"<HMEEventConsumer>"16@"NSArray"24@"NSArray"32@?<v@?@"NSDictionary"@"NSError">40
v32@0:8@"<HMEEventConsumer>"16@?<v@?@"NSError">24
v40@0:8@16@24@?32
v40@0:8@"<HMEEventConsumer>"16@"NSArray"24@?<v@?@"NSDictionary"@"NSError">32
v40@0:8@"<HMEEventConsumer>"16@"NSArray"24@?<v@?@"NSError">32
@"<HMESynchronousSubscriptionProviding>"16@0:8
@48@0:8@16@24@32@40
@40@0:8@16@24@32
B32@0:8@16@24
@"<HMELastEventStoreReadHandle>"
@"<HMELastEventStoreWriteHandle>"
@"NSObject<OS_dispatch_queue>"
@"HMETopicRouter"
@"<HMERouterClientDelegate>"
v32@0:8@"HMEEvent"16@"NSString"24
v40@0:8@"HMEEvent"16@"NSString"24@"<HMECachedEventSource>"32
@56@0:8@16@24@32r*40@48
@56@0:8@16@24@32@40@48
@"NSUUID"
@"<HMEDelegatingEventRouterDataSource>"
@56@0:8@16@24@32@40r*48
@"<HMEPersistentConnectionServerDelegate>"
@"<HMEPersistentConnectionServerDataSource>"
v20@0:8B16
v20@0:8I16
d16@0:8
I16@0:8
{?="timestamp"b1"cachePolicy"b1"combinePolicy"b1"qos"b1}
@48@0:8@16Q24Q32d40
@56@0:8@16Q24Q32Q40d48
@"HMEEventMetadata"
@"NSData"
@56@0:8@16@24d32d40@48
@80@0:8@16@24d32d40@48@56@64r*72
v32@0:8q16@?24
q16@0:8
v24@0:8q16
@"<HMEMessageDatagramClientDataSource>"
@"<HMETimerIntervalProvider>"
@"<HMETimerProvider>"
@"HMEPendingTopicsCombiner"
@"<HMETimer>"
@36@0:8B16Q20^Q28
Q24@0:8@16
@"NSMutableArray"
@"HMEEvent"
@"<HMESynchronousSubscriptionProviding>"
@"<HMEEventForwarder>"
@"HMEPendingEventsCollection"
@"NSDate"
v56@0:8@16@24@32@40@?48
@"<HMEMessageDatagramServerDelegate>"
@"<HMEMessageDatagramServerDataSource>"
v40@0:8@"HMEEvent"16@"NSString"24@?<v@?@"NSError">32
@48@0:8@16@24@32r*40
@"<HMEMemoryEventBusDelegate>"
@"<HMEMemoryEventBusDataSource>"
@"HMEProtoEventMetadata"
