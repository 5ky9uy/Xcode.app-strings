@@(#)PROGRAM:HomeKitEventRouter  PROJECT:HomeKit-1.2.3
333333
TopicRouter
Unimplemented method
[HMETopicRouter registrations: {}]
[(HM) uuid = %@]
[(AC) uuid = %@]
[(AS) keyPath = %@]
v32@?0@"NSUUID"8@"NSArray"16^B24
[HMETopicRouter registrations: %@]
settings
updated
:memory:
HMELastEventStore
PRAGMA cache_size = %@;
CREATE TABLE IF NOT EXISTS eventstore (id integer primary key autoincrement, key string not null unique, value blob not null, m_source string not null, m_timestamp double not null, m_cachepolicy integer not null, m_combinetype not null, m_qos integer not null);
CREATE INDEX IF NOT EXISTS eventstore_key_index on eventstore (key);
replace into eventstore (key, value, m_source, m_timestamp, m_cachepolicy, m_combinetype, m_qos) values (?1, ?2, ?3, ?4, ?5, ?6, ?7);
select key, value, m_source, m_timestamp, m_cachepolicy, m_combinetype, m_qos from eventstore where key = ?1;
delete from eventstore where key = ?1;
delete from eventstore where key like '%' || ?1 || '%';
delete from eventstore where m_timestamp < ?1;
insert into eventstore (key, value, m_source, m_timestamp, m_cachepolicy, m_combinetype, m_qos) values (?1, ?2, ?3, ?4, ?5, ?6, ?7) on conflict(key) do update set value=excluded.value, m_source = excluded.m_source, m_timestamp = excluded.m_timestamp, m_cachepolicy = excluded.m_cachepolicy, m_combinetype = excluded.m_combinetype, m_qos = excluded.m_qos where (excluded.m_timestamp > eventstore.m_timestamp OR excluded.m_source != eventstore.m_source);
DELETE FROM eventstore;
code
extendedCode
text
command
%@ %@
topic
event
HMERouterClient
[%@: topicRouter: %@]
Router.Delegating
[<HMEDelegatingEventRouter %p> %@: subRouters: %@]
@"NSSet"16@?0@"NSSet"8
source
timestamp
cachePolicy
combinePolicy
unknown
Can only be called by subclass
<HMEEvent size = %@>
Unknown
keep-alive
connectionless
Unknown mode
MessageDatagramClient
v32@?0@"NSUUID"8@"NSDictionary"16@"NSError"24
 with non-terminating error: 
<HMEEventInfo topic = %@, event = %@>
HMERouterServer
[%@ topicRouter: %@]
Subclass Must implement
HMEMessageDatagramServer
v16@?0@"NSError"8
v16@?0@?<v@?>8
v32@?0@"NSString"8@"HMEEvent"16^B24
PersistentConnectionClient
v24@?0@"NSDictionary"8@"NSError"16
MemoryEventBus
com.apple.HomeKitEventRouter
v8@?0
HMEErrorDomain
eventData
eventMetadata
Added topic filter %@
Removed topic filter %@
Starting up last event store
Unable to open in memory sqlite DB
Unable to set hme sqlite cache size to %@, %@
Unable to open in memory sqlite DB %@
Unable to create index %@
Unable to prepare insert statement error: %@
Unable to prepare select event statement error: %@
Unable to prepare delete event statement error: %@
Unable to prepare delete event like statement error: %@
Unable to prepare delete before timestamp statement error: %@
Unable to prepare insert if most recent event statement: %@
Unable to reset events in sqlite DB %@
Unexpected status when performing select query
Error executing select for topic: %@, error: %@
Error executing delete statement %@
Error executing delete statement topic:%@ error:%@
Error executing delete like statement topicSubstring:%@ error:%@
Error executing insert statement topic: %@, error: %@
Saved event for topic: %@
Unrecognized cache policy, will not cache. %@
Processed save request for topic: %@, didChange: %@
Forwarding received event for topic %@
Processing received cached events %ld
Processing received cached events %@
Forwarding received cached event for topic %@
Subscribing to topics on subrouter register, router: %@, topics: %@
Registered on subRouter: %@
Changing registrations for consumer: %@, topicFilterAdditions: %@, topicFilterRemovals: %@
Unregistering consumer: %@
Received event for topic %@, event: %@
Received cached event for topic %@, event: %@
Delegating registrations to subRouter: %@, topicFilterAdditions: %@, topicFilterRemovals: %@
changed registrations on subRouter: %@
Removing connection %@ registrations on unregister
Removing connection %@ registrations on invalidation
Processing request to change registrations for connection: %@  with addedTopics:%ld removedTopics: %ld
Processing request to change registrations for connection: %@  with addedTopics:%@ removedTopics: %@
Did not expect events when not connected.
Event's from server %@ not from expected server %@.
Did not expect cached events when not connected.
Cached event's from server %@ not from expected server %@.
Server identifier changed to %@. Currently connected to %@
Server identifier changed to %@. Currently disconnected.
Updated connection mode to %@
Updating fetch allowed to %{public}@
Sending connect request with additions %@
Successfully connected with %@.
Unable to connect to %@ got error %@
Sending change registrations request with additions: %ld removals: %ld
Sending change registrations request with additions: %@ removals: %@
Successfully processed change registrations request
Successfully processed change registrations request with additions: %@ removals: %@
Unable to process change registrations error %@
Sending disconnect request
Did not disconnect cleanly got error %@
Sending keep-alive request
Keep alive request responded with terminating error: %@
Keep alive request responded%@%@
No delegate set
Sending subscription fetch request
got topics %ld
got topics %@
Starting keep alive timer.
Connection retry timer fired: %f
Starting connection retry timer with interval: %f
Starting dormant fetch timer.
Conditions to fetch not met will fetch later.
Unexpected connection mode.
Received cached events on connect %@
Received cached events on change registrations %@
Will disconnect due to pending server change request
Will perform connect operation
Will disconnect as connection mode is not connectionless
Posting connect event %@ on connection %@ register
Posted connect event with result %@
Posting unregister event %@ on connection %@ unregister
Posted unregister event with result %@
Will change registrations with subscription provider additions:%@, removals:%@
Error changing subscriptions with local subscription provider %@
Successfully changed subscriptions by adding:%@ removing: %@
Handling event for topic %@
Adding pending event topic: %@ to connection: %@
Delegate did not allow event %@ to %@
Removing connection on terminal error %@
Connection expiry timer fired
Debounce timer fired
Starting request to send events to connection %@
Sent events to connection: %@ with response %@
Sent events: %@ to connection: %@, response: %@
Removed connection item as connection was not found %@
Removed connection item as connection has expired %@, connection: %@
Added connection %@ with expiry %@
Updated connection %@ expiry to %@
Updated connection %@ expiry to %@ on keep-alive
Did not find connection
Removing connection %@
Has cached events to send
Creating debounce timer, have events to send.
Add cached event for topic %@
Adding cached event topic: %@ to connection: %@
Refresion:%@
Received connect request for connection: %@ with additions: %ld
Received connect request for connection: %@ with additions: %@
Connect not allowed in current state for connection: %@
Registering connection: %@ to topics: %ld
Registering connection: %@ to topics: %@
Will not process events for connection %@
Did not find item for connection: %@
Change registrations not allowed in current state for connection: %@
Processing request to change registrations for connection: %@ with addedTopics: %ld removedTopics: %ld
Processing request to change registrations for connection: %@ with addedTopics: %@ removedTopics: %@
Did not find connection keep-alive was received for.
Returning cached events for topics:%@
Resetting all events
Resetting all connections
Reregistering topics on reconnect.
Registering consumer: %@ for topicFilters: %@
Unregistering consumer: %@ from topicFilters: %@
Changing registrations for consumer: %@, topicFilterAdditions: %ld, topicFilterRemovals: %ld
HMETopicRouter
HMELastEventStore
HMEEventPersistence
HMELastEventStoreReadHandle
NSObject
HMELastEventStoreWriteHandle
HMEProtoEventInfo
NSCopying
HMERouterClient
HMECachedEventSource
HMELastEventStoreWriter
HMETopicRouterDelegate
HMESynchronousSubscriptionProviding
HMESubscriptionProviding
HMEDelegatingEventRouter
HMEEventConsumer
HMEPersistentConnectionServer
HMEProtoEventMetadata
HMEEventMetadata
HMEEvent
HMEMessageDatagramClient
HMEPendingEventsCollection
HMEEventInfo
HMERouterServer
HMEPendingTopicsCombiner
HMEConnectionInfoItem
HMEMessageDatagramServer
HMEPersistentConnectionClient
HMEMemoryEventBus
HMEEventForwarder
HMEProtoEvent
initWithDelegate:
initWithDelegate:logCategory:
initWithDelegate:logger:
init
weakToStrongObjectsMapTable
changeRegistrationsForConsumer:topicFilterAdditions:topicFilterRemovals:
countByEnumeratingWithState:objects:count:
registrations
objectForKey:
setObject:forKey:
addObject:
registeredTopics
containsObject:
removeObject:
count
delegate
allObjects
didChangeRegistrationsWithTopicFilterAdditions:removals:
copy
removeObjectForKey:
unregisterConsumer:topicFilters:
array
upstreamTopicsForTopic:
mutableCopy
intersectSet:
exceptionWithName:reason:userInfo:
addObjectsFromArray:
setWithArray:
minusSet:
arrayWithObjects:count:
dictionary
objectForKeyedSubscript:
setObject:forKeyedSubscript:
stringWithString:
appendFormat:
enumerateKeysAndObjectsUsingBlock:
stringWithFormat:
forwardingTopicsForAdditions:removals:current:indexProvider:
registerConsumer:topicFilters:
topicsForConsumer:
unregisterConsumer:
consumersForTopic:
minimalSpanningTopicFilters
allRegisteredTopicFilters
dumpStateDescription
.cxx_destruct
_logger
_registrations
_registeredTopics
_delegate
T@"NSMapTable",R,N,V_registrations
T@"NSMutableSet",R,N,V_registeredTopics
T@"<HMETopicRouterDelegate>",R,W,V_delegate
componentsSeparatedByString:
objectAtIndexedSubscript:
isEqualToString:
lastObject
initWithUUIDString:
subarrayWithRange:
componentsJoinedByString:
initWithFileName:
dealloc
fileName
UTF8String
stringWithCString:encoding:
numberWithInt:
stringWithUTF8String:
dictionaryWithObjects:forKeys:count:
errorWithDomain:code:userInfo:
bytes
length
_initWithSource:rawCachePolicy:rawCombineType:rawQos:timestamp:
initWithEventData:metadata:
eventsForTopicFilters:sinceReferenceTimestamp:
encodedData
eventMetadata
source
intervalSinceReferenceDate
rawCachePolicy
rawCombineType
rawQOS
cachePolicy
numberWithUnsignedInteger:
writer:saveEvent:topic:
numberWithBool:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
lastEventForTopic:
eventsForTopicFilters:
writer:saveEventIfAllowed:topic:
writer:saveEventIfDifferent:topic:
resetTopic:
resetBeforeReferenceTimestamp:
initInMemoryStore
startup
resetEventStore
resetWildcardTopics:
insertEventPreparedStatement
replaceEventIfMoreRecentOrDifferentSourcePreparedStatement
selectEventByKeyPreparedStatement
deleteEventByKeyPreparedStatement
deleteEventByKeyLikePreparedStatement
deleteBeforeTimestampPreparedStatement
_lock
_fileName
T@"NSString",R,V_fileName
data
dataWithBytes:length:
dictionaryRepresentation
setTopic:
setEvent:
allocWithZone:
copyWithZone:
mergeFrom:
hasTopic
hasEvent
readFrom:
writeTo:
copyTo:
topic
event
_event
_topic
TB,R,N
T@"NSString",&,N,V_topic
T@"HMEProtoEvent",&,N,V_event
initWithQueue:storeReadHandle:storeWriteHandle:logger:
initWithQueue:storeReadHandle:logger:
topicRouter
queue
eventStoreReadHandle
eventStoreWriteHandle
handleChangeRegistrationsWithTopicFilterAdditions:removals:
privateDelegate
processReceivedCachedEvents:
sendChangeRegistrationsMessageWithAddedFilters:removedFilters:completion:
changeRegistrationsSyncForConsumer:topicFilterAdditions:topicFilterRemovals:completion:
unregisterConsumerSync:completion:
didReceiveEvent:topic:
didReceiveCachedEvent:topic:source:
forwardingTopicsForTopics:
isCachedEventSourceCurrentProcess
changeRegistrationsForConsumer:topicFilterAdditions:topicFilterRemovals:completion:
registerConsumer:topicFilters:completion:
unregisterConsumer:topicFilters:completion:
unregisterConsumer:completion:
synchronousSubscriptionProvider
initWithQueue:
processReceivedEvents:
setPrivateDelegate:
_eventStoreReadHandle
_eventStoreWriteHandle
_queue
_topicRouter
_privateDelegate
T@"<HMELastEventStoreReadHandle>",R,V_eventStoreReadHandle
T@"<HMELastEventStoreWriteHandle>",R,V_eventStoreWriteHandle
T@"NSObject<OS_dispatch_queue>",R,V_queue
T@"HMETopicRouter",R,V_topicRouter
T@"<HMERouterClientDelegate>",W,V_privateDelegate
initWithQueue:dataSource:logger:
initWithQueue:dataSource:storeReadHandle:logger:identifier:
identifier
delegatingRouter:filteredTopics:forRouter:
delegatingRouter:upstreamTopicsFor:
initWithQueue:dataSource:
initWithQueue:dataSource:storeReadHandle:logCategory:identifier:
registerSubRouter:
unregisterSubRouter:
_identifier
_subRouters
_dataSource
T@"NSUUID",R,V_identifier
initWithQueue:provider:registrationEventRouter:storeReadHandle:logCategory:
initWithQueue:provider:registrationEventRouter:storeReadHandle:logger:
initWithEvent:topic:
shouldAllowEvent:topic:connection:
sendUpdatedEvents:toConnection:
sendUpdatedCachedEvents:toConnection:
dataSource
server:upstreamTopicsForTopic:
server:expandedTopicsForTopics:
didConnectConnection:connectEvent:unregisterEvent:
didRemoveConnection:
cachedEventsForExpandedTopics:
initWithQueue:provider:registrationEventRouter:
handleEvent:topic:
handleCachedEvent:topic:
expandedTopicsForTopics:
connectWithConnection:connectEvent:unregisterEvent:completion:
disconnectConnection:
didInvalidateConnection:
changeRegistrationsForConnection:topicFilterAdditions:topicFilterRemovals:completion:
setDelegate:
setDataSource:
T@"<HMEPersistentConnectionServerDelegate>",W,V_delegate
T@"<HMEPersistentConnectionServerDataSource>",W,V_dataSource
numberWithDouble:
numberWithUnsignedInt:
setSource:
hasSource
setTimestamp:
setHasTimestamp:
hasTimestamp
setCachePolicy:
setHasCachePolicy:
hasCachePolicy
setCombinePolicy:
setHasCombinePolicy:
hasCombinePolicy
setQos:
setHasQos:
hasQos
timestamp
combinePolicy
_timestamp
_cachePolicy
_combinePolicy
_qos
_source
_has
T@"NSString",&,N,V_source
TB,N
Td,N,V_timestamp
TI,N,V_cachePolicy
TI,N,V_combinePolicy
TI,N,V_qos
timeIntervalSinceReferenceDate
initWithSource:cachePolicy:combineType:timestamp:
initDefaultMetadata
combineType
_intervalSinceReferenceDate
_rawCombineType
_rawCachePolicy
_rawQOS
TQ,R,V_rawCombineType
TQ,R,V_rawCachePolicy
TQ,R,V_rawQOS
T@"NSString",R,C,V_source
Td,R,V_intervalSinceReferenceDate
_initWithEventData:metadata:
eventData
setEventData:
setEventMetadata:
hasEventData
hasEventMetadata
eventFromProtobuff:
initWithSubclassedEventMetadata:
initWithEventData:
pbEvent
_eventMetadata
_eventData
T@"NSData",R,C,N,V_eventData
T@"NSData",R,C
T@"HMEEventMetadata",R,V_eventMetadata
initWithQueue:timerProvider:keepAliveInterval:dormantFetchTimerInterval:retryIntervalProvider:storeReadHandle:storeWriteHandle:logCategory:
connectedServerIdentifier
setHasPendingServerChangeRequest:
hasPendingRequest
hasPendingServerChangeRequest
connectionMode
setConnectionMode:
dormantFetchConditionsMet
setDormantFetchConditionsMet:
isConnected
pendingTopicsCombiner
topicFiltersToAdd
reset
combineOntoPreviousAdditions:removals:
client:sendConnectWithAddedFilters:completion:
topicFiltersToRemove
client:isConnectionTerminatingError:
client:sendChangeRegistrationsWithAddedFilters:removedFilters:completion:
sendDisconnectForClient:completion:
sendKeepAliveForClient:completion:
setIsWaitingForFetchConditionsWhenDormant:
client:fetchWithFilters:completion:
keepAliveTimer
timerProvider
keepAliveInterval
timerWithQueue:interval:timerFireHandler:
setKeepAliveTimer:
resume
suspend
clientIsEnabled:
connectionRetryTimer
connectionRetryIntervalProvider
nextInterval
setConnectionRetryTimer:
dormantFetchTimer
isWaitingForFetchConditionsWhenDormant
dormatFetchTimerInterval
setDormantFetchTimer:
setIsConnected:
setConnectedServerIdentifier:
clientDidConnect:serverIdentifier:
clientDidDisconnect:
setHasPendingRequest:
combineWithAdditions:removals:
client:upstreamTopicsForTopic:
client:forwardingTopicsForTopics:
initWithQueue:timerProvider:keepAliveInterval:dormantFetchTimerInterval:retryIntervalProvider:
didReceiveMessageWithEvents:serverIdentifier:completion:
didReceiveMessageWithCachedEvents:serverIdentifier:completion:
serverDidChangeWithServerIdentifier:
connectionCapabilityDidChange
updateConnectionMode:completion:
updateDormantFetchCondition:completion:
_isConnected
_hasPendingRequest
_hasPendingServerChangeRequest
_dormantFetchConditionsMet
_isWaitingForFetchConditionsWhenDormant
_connectionRetryIntervalProvider
_timerProvider
_pendingTopicsCombiner
_keepAliveInterval
_keepAliveTimer
_connectionRetryTimer
_connectedServerIdentifier
_connectionMode
_dormatFetchTimerInterval
_dormantFetchTimer
T@"<HMETimerIntervalProvider>",R,V_connectionRetryIntervalProvider
T@"<HMETimerProvider>",R,V_timerProvider
T@"HMEPendingTopicsCombiner",R,V_pendingTopicsCombiner
TB,N,V_isConnected
TB,N,V_hasPendingRequest
TB,N,V_hasPendingServerChangeRequest
Td,R,V_keepAliveInterval
T@"<HMETimer>",&,N,V_keepAliveTimer
T@"<HMETimer>",&,N,V_connectionRetryTimer
T@"NSUUID",&,N,V_connectedServerIdentifier
Tq,N,V_connectionMode
Td,R,V_dormatFetchTimerInterval
T@"<HMETimer>",&,N,V_dormantFetchTimer
TB,N,V_dormantFetchConditionsMet
TB,N,V_isWaitingForFetchConditionsWhenDormant
T@"<HMEMessageDatagramClientDelegate>",W
T@"<HMEMessageDatagramClientDataSource>",W,N,V_dataSource
initWithEvents:
mutableEventItems
setMutableEventItems:
addEventInfo:
eventInfoMaxSizeInBytes:
topicAndMetadataMaxSizeInBytes
eventItems
combinePreviousEvents:
resetItems
hasEventItem
popEventItemsUpWithFragments:toSizeInBytes:usedBytes:
_mutableEventItems
T@"NSMutableArray",&,N,V_mutableEventItems
T@"NSArray",R,C,N
initWithData:
fromProtobuff:
eventsMapFromEventInfos:
eventInfoFromProtoData:
eventsMapFromProtoEvents:
pbEventInfo
T@"HMEEvent",R,N,V_event
T@"NSString",R,C,N,V_topic
localEventForwarder
forwardEvent:topic:completion:
unregisterEvents
subscriptionProvider
_unregisterEvents
_subscriptionProvider
_localEventForwarder
T@"NSMapTable",R,V_unregisterEvents
T@"<HMESynchronousSubscriptionProviding>",R,V_subscriptionProvider
T@"<HMEEventForwarder>",R,V_localEventForwarder
addTopicFilters
removeTopicFilters
setAddTopicFilters:
setRemoveTopicFilters:
_addTopicFilters
_removeTopicFilters
T@"NSMutableSet",&,V_addTopicFilters
T@"NSMutableSet",&,V_removeTopicFilters
T@"NSArray",R
UUID
pendingEventItems
pendingCachedEventItems
initWithConnection:expiry:
expiry
setExpiry:
debounceStartTime
setDebounceStartTime:
connection
setConnection:
_pendingEventItems
_pendingCachedEventItems
_expiry
_debounceStartTime
_connection
T@"NSUUID",R,C,N,V_identifier
T@"HMEPendingEventsCollection",R,N,V_pendingEventItems
T@"HMEPendingEventsCollection",R,N,V_pendingCachedEventItems
T@"NSDate",&,N,V_expiry
T@"NSDate",&,N,V_debounceStartTime
T@,W,N,V_connection
server:shouldProcessEventsForConnection:shouldLogState:
serverTimerProvider:
currentDate
server:forwardingTopicsForTopics:
server:isConnectionTerminatingError:
setConnectionExpiryTimer:
connectionDebounceTimer
setConnectionDebounceTimer:
connectionInfoItems
dateByAddingTimeInterval:
serverFragmentEventsDataSize:
server:sendEvents:cachedEvents:connection:completion:
timeIntervalSinceDate:
server:connectionDidExpire:
timeIntervalSinceNow
serverDebounceTimeInterval:
server:timeoutIntervalForConnection:
dateWithTimeIntervalSinceNow:
connectionExpiryTimer
serverSupportFragmentCachedEvents:
server:connectionDidFail:
removeAllObjects
refreshConnection:
connectWithConnection:connectEvent:unregisterEvent:topicFilterAdditions:completion:
keepAliveConnection:completion:
fetchCachedEventsForTopics:completion:
resetExistingEvents
_connectionInfoItems
_connectionExpiryTimer
_connectionDebounceTimer
T@"NSMutableArray",R,N,V_connectionInfoItems
T@"<HMETimer>",&,V_connectionExpiryTimer
T@"<HMETimer>",&,V_connectionDebounceTimer
T@"<HMEMessageDatagramServerDelegate>",W,V_delegate
T@"<HMEMessageDatagramServerDataSource>",W,V_dataSource
initWithQueue:storeReadHandle:storeWriteHandle:
didInvalidateConnection
didReconnect
processReceivedEventsFromMessage:
processReceivedCachedEventsFromMessage:
T@"<HMEPersistentConnectionClientDelegate>",W
initWithQueue:storeReadHandle:storeWriteHandle:logCategory:
T@"<HMEMemoryEventBusDelegate>",W,V_delegate
T@"<HMEMemoryEventBusDataSource>",W,V_dataSource
T@"NSData",&,N,V_eventData
T@"HMEProtoEventMetadata",&,N,V_eventMetadata
@48@0:8@16@24@32@?40
@16@0:8
@24@0:8@16
@32@0:8@16r*24
@32@0:8@16@24
v32@0:8@16@24
v40@0:8@16@24@32
v24@0:8@16
v16@0:8
@"NSObject<OS_os_log>"
@"NSMapTable"
@"NSMutableSet"
@"<HMETopicRouterDelegate>"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"HMEEvent"24@0:8@"NSString"16
@"NSDictionary"24@0:8@"NSArray"16
B40@0:8@16@24@32
v40@0:8@"<HMELastEventStoreWriter>"16@"HMEEvent"24@"NSString"32
B40@0:8@"<HMELastEventStoreWriter>"16@"HMEEvent"24@"NSString"32
v24@0:8@"NSString"16
@32@0:8@16d24
v24@0:8d16
@"NSDictionary"32@0:8@"NSArray"16d24
^{sqlite3=}
^{sqlite3_stmt=}
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSString"
@24@0:8^{_NSZone=}16
@"HMEProtoEvent"
v32@0:8@"NSArray"16@"NSArray"24
@"NSSet"24@0:8@"NSString"16
v48@0:8@16@24@32@?40
v32@0:8@16@?24
v48@0:8@"<HMEEventConsumer>"16@"NSArray"24@"NSArray"32@?<v@?@"NSDictionary"@"NSError">40
v32@0:8@"<HMEEventConsumer>"16@?<v@?@"NSError">24
v40@0:8@16@24@?32
v40@0:8@"<HMEEventConsumer>"16@"NSArray"24@?<v@?@"NSDictionary"@"NSError">32
v40@0:8@"<HMEEventConsumer>"16@"NSArray"24@?<v@?@"NSError">32
@"<HMESynchronousSubscriptionProviding>"16@0:8
@48@0:8@16@24@32@40
@40@0:8@16@24@32
B32@0:8@16@24
@"<HMELastEventStoreReadHandle>"
@"<HMELastEventStoreWriteHandle>"
@"NSObject<OS_dispatch_queue>"
@"HMETopicRouter"
@"<HMERouterClientDelegate>"
v32@0:8@"HMEEvent"16@"NSString"24
v40@0:8@"HMEEvent"16@"NSString"24@"<HMECachedEventSource>"32
@56@0:8@16@24@32r*40@48
@56@0:8@16@24@32@40@48
@"NSUUID"
@"<HMEDelegatingEventRouterDataSource>"
@56@0:8@16@24@32@40r*48
@"<HMEPersistentConnectionServerDelegate>"
@"<HMEPersistentConnectionServerDataSource>"
v20@0:8B16
v20@0:8I16
d16@0:8
I16@0:8
{?="timestamp"b1"cachePolicy"b1"combinePolicy"b1"qos"b1}
@48@0:8@16Q24Q32d40
@56@0:8@16Q24Q32Q40d48
@"HMEEventMetadata"
@"NSData"
@56@0:8@16@24d32d40@48
@80@0:8@16@24d32d40@48@56@64r*72
v32@0:8q16@?24
q16@0:8
v24@0:8q16
@"<HMEMessageDatagramClientDataSource>"
@"<HMETimerIntervalProvider>"
@"<HMETimerProvider>"
@"HMEPendingTopicsCombiner"
@"<HMETimer>"
@36@0:8B16Q20^Q28
Q24@0:8@16
@"NSMutableArray"
@"HMEEvent"
@"<HMESynchronousSubscriptionProviding>"
@"<HMEEventForwarder>"
@"HMEPendingEventsCollection"
@"NSDate"
v56@0:8@16@24@32@40@?48
@"<HMEMessageDatagramServerDelegate>"
@"<HMEMessageDatagramServerDataSource>"
v40@0:8@"HMEEvent"16@"NSString"24@?<v@?@"NSError">32
@48@0:8@16@24@32r*40
@"<HMEMemoryEventBusDelegate>"
@"<HMEMemoryEventBusDataSource>"
@"HMEProtoEventMetadata"
=\@(#)PROGRAM:HomeKitEventRouter  PROJECT:HomeKit-1.2.3
333333
TopicRouter
Unimplemented method
[HMETopicRouter registrations: {}]
[(HM) uuid = %@]
[(AC) uuid = %@]
[(AS) keyPath = %@]
v32@?0@"NSUUID"8@"NSArray"16^B24
[HMETopicRouter registrations: %@]
settings
updated
:memory:
HMELastEventStore
PRAGMA cache_size = %@;
CREATE TABLE IF NOT EXISTS eventstore (id integer primary key autoincrement, key string not null unique, value blob not null, m_source string not null, m_timestamp double not null, m_cachepolicy integer not null, m_combinetype not null, m_qos integer not null);
CREATE INDEX IF NOT EXISTS eventstore_key_index on eventstore (key);
replace into eventstore (key, value, m_source, m_timestamp, m_cachepolicy, m_combinetype, m_qos) values (?1, ?2, ?3, ?4, ?5, ?6, ?7);
select key, value, m_source, m_timestamp, m_cachepolicy, m_combinetype, m_qos from eventstore where key = ?1;
delete from eventstore where key = ?1;
delete from eventstore where key like '%' || ?1 || '%';
delete from eventstore where m_timestamp < ?1;
insert into eventstore (key, value, m_source, m_timestamp, m_cachepolicy, m_combinetype, m_qos) values (?1, ?2, ?3, ?4, ?5, ?6, ?7) on conflict(key) do update set value=excluded.value, m_source = excluded.m_source, m_timestamp = excluded.m_timestamp, m_cachepolicy = excluded.m_cachepolicy, m_combinetype = excluded.m_combinetype, m_qos = excluded.m_qos where (excluded.m_timestamp > eventstore.m_timestamp OR excluded.m_source != eventstore.m_source);
DELETE FROM eventstore;
code
extendedCode
text
command
%@ %@
topic
event
HMERouterClient
[%@: topicRouter: %@]
Router.Delegating
[<HMEDelegatingEventRouter %p> %@: subRouters: %@]
@"NSSet"16@?0@"NSSet"8
source
timestamp
cachePolicy
combinePolicy
unknown
Can only be called by subclass
<HMEEvent size = %@>
Unknown
keep-alive
connectionless
Unknown mode
MessageDatagramClient
v32@?0@"NSUUID"8@"NSDictionary"16@"NSError"24
 with non-terminating error: 
<HMEEventInfo topic = %@, event = %@>
HMERouterServer
[%@ topicRouter: %@]
Subclass Must implement
HMEMessageDatagramServer
v16@?0@"NSError"8
v16@?0@?<v@?>8
v32@?0@"NSString"8@"HMEEvent"16^B24
PersistentConnectionClient
v24@?0@"NSDictionary"8@"NSError"16
MemoryEventBus
com.apple.HomeKitEventRouter
v8@?0
HMEErrorDomain
eventData
eventMetadata
Added topic filter %@
Removed topic filter %@
Starting up last event store
Unable to open in memory sqlite DB
Unable to set hme sqlite cache size to %@, %@
Unable to open in memory sqlite DB %@
Unable to create index %@
Unable to prepare insert statement error: %@
Unable to prepare select event statement error: %@
Unable to prepare delete event statement error: %@
Unable to prepare delete event like statement error: %@
Unable to prepare delete before timestamp statement error: %@
Unable to prepare insert if most recent event statement: %@
Unable to reset events in sqlite DB %@
Unexpected status when performing select query
Error executing select for topic: %@, error: %@
Error executing delete statement %@
Error executing delete statement topic:%@ error:%@
Error executing delete like statement topicSubstring:%@ error:%@
Error executing insert statement topic: %@, error: %@
Saved event for topic: %@
Unrecognized cache policy, will not cache. %@
Processed save request for topic: %@, didChange: %@
Forwarding received event for topic %@
Processing received cached events %ld
Processing received cached events %@
Forwarding received cached event for topic %@
Subscribing to topics on subrouter register, router: %@, topics: %@
Registered on subRouter: %@
Changing registrations for consumer: %@, topicFilterAdditions: %@, topicFilterRemovals: %@
Unregistering consumer: %@
Received event for topic %@, event: %@
Received cached event for topic %@, event: %@
Delegating registrations to subRouter: %@, topicFilterAdditions: %@, topicFilterRemovals: %@
changed registrations on subRouter: %@
Removing connection %@ registrations on unregister
Removing connection %@ registrations on invalidation
Processing request to change registrations for connection: %@  with addedTopics:%ld removedTopics: %ld
Processing request to change registrations for connection: %@  with addedTopics:%@ removedTopics: %@
Did not expect events when not connected.
Event's from server %@ not from expected server %@.
Did not expect cached events when not connected.
Cached event's from server %@ not from expected server %@.
Server identifier changed to %@. Currently connected to %@
Server identifier changed to %@. Currently disconnected.
Updated connection mode to %@
Updating fetch allowed to %{public}@
Sending connect request with additions %@
Successfully connected with %@.
Unable to connect to %@ got error %@
Sending change registrations request with additions: %ld removals: %ld
Sending change registrations request with additions: %@ removals: %@
Successfully processed change registrations request
Successfully processed change registrations request with additions: %@ removals: %@
Unable to process change registrations error %@
Sending disconnect request
Did not disconnect cleanly got error %@
Sending keep-alive request
Keep alive request responded with terminating error: %@
Keep alive request responded%@%@
No delegate set
Sending subscription fetch request
got topics %ld
got topics %@
Starting keep alive timer.
Connection retry timer fired: %f
Starting connection retry timer with interval: %f
Starting dormant fetch timer.
Conditions to fetch not met will fetch later.
Unexpected connection mode.
Received cached events on connect %@
Received cached events on change registrations %@
Will disconnect due to pending server change request
Will perform connect operation
Will disconnect as connection mode is not connectionless
Posting connect event %@ on connection %@ register
Posted connect event with result %@
Posting unregister event %@ on connection %@ unregister
Posted unregister event with result %@
Will change registrations with subscription provider additions:%@, removals:%@
Error changing subscriptions with local subscription provider %@
Successfully changed subscriptions by adding:%@ removing: %@
Handling event for topic %@
Adding pending event topic: %@ to connection: %@
Delegate did not allow event %@ to %@
Removing connection on terminal error %@
Connection expiry timer fired
Debounce timer fired
Starting request to send events to connection %@
Sent events to connection: %@ with response %@
Sent events: %@ to connection: %@, response: %@
Removed connection item as connection was not found %@
Removed connection item as connection has expired %@, connection: %@
Added connection %@ with expiry %@
Updated connection %@ expiry to %@
Updated connection %@ expiry to %@ on keep-alive
Did not find connection
Removing connection %@
Has cached events to send
Creating debounce timer, have events to send.
Add cached event for topic %@
Adding cached event topic: %@ to connection: %@
Refresion:%@
Received connect request for connection: %@ with additions: %ld
Received connect request for connection: %@ with additions: %@
Connect not allowed in current state for connection: %@
Registering connection: %@ to topics: %ld
Registering connection: %@ to topics: %@
Will not process events for connection %@
Did not find item for connection: %@
Change registrations not allowed in current state for connection: %@
Processing request to change registrations for connection: %@ with addedTopics: %ld removedTopics: %ld
Processing request to change registrations for connection: %@ with addedTopics: %@ removedTopics: %@
Did not find connection keep-alive was received for.
Returning cached events for topics:%@
Resetting all events
Resetting all connections
Reregistering topics on reconnect.
Registering consumer: %@ for topicFilters: %@
Unregistering consumer: %@ from topicFilters: %@
Changing registrations for consumer: %@, topicFilterAdditions: %ld, topicFilterRemovals: %ld
HMETopicRouter
HMELastEventStore
HMEEventPersistence
HMELastEventStoreReadHandle
NSObject
HMELastEventStoreWriteHandle
HMEProtoEventInfo
NSCopying
HMERouterClient
HMECachedEventSource
HMELastEventStoreWriter
HMETopicRouterDelegate
HMESynchronousSubscriptionProviding
HMESubscriptionProviding
HMEDelegatingEventRouter
HMEEventConsumer
HMEPersistentConnectionServer
HMEProtoEventMetadata
HMEEventMetadata
HMEEvent
HMEMessageDatagramClient
HMEPendingEventsCollection
HMEEventInfo
HMERouterServer
HMEPendingTopicsCombiner
HMEConnectionInfoItem
HMEMessageDatagramServer
HMEPersistentConnectionClient
HMEMemoryEventBus
HMEEventForwarder
HMEProtoEvent
subarrayWithRange:
server:timeoutIntervalForConnection:
clientIsEnabled:
dictionary
sendDisconnectForClient:completion:
nextInterval
stringWithUTF8String:
countByEnumeratingWithState:objects:count:
server:shouldProcessEventsForConnection:shouldLogState:
clientDidDisconnect:
addObjectsFromArray:
weakToStrongObjectsMapTable
delegatingRouter:upstreamTopicsFor:
sendChangeRegistrationsMessageWithAddedFilters:removedFilters:completion:
server:sendEvents:cachedEvents:connection:completion:
isEqualToString:
stringWithString:
count
clientDidConnect:serverIdentifier:
addObject:
resume
server:isConnectionTerminatingError:
delegatingRouter:filteredTopics:forRouter:
mutableCopy
stringWithFormat:
timerWithQueue:interval:timerFireHandler:
setObject:forKeyedSubscript:
objectForKeyedSubscript:
client:upstreamTopicsForTopic:
minusSet:
bytes
stringWithCString:encoding:
copy
objectForKey:
setObject:forKey:
componentsSeparatedByString:
initWithData:
client:sendConnectWithAddedFilters:completion:
componentsJoinedByString:
containsObject:
arrayWithObjects:count:
dateWithTimeIntervalSinceNow:
server:expandedTopicsForTopics:
objectAtIndexedSubscript:
serverTimerProvider:
server:connectionDidFail:
client:sendChangeRegistrationsWithAddedFilters:removedFilters:completion:
timeIntervalSinceReferenceDate
UUID
shouldAllowEvent:topic:connection:
array
timeIntervalSinceNow
numberWithUnsignedInteger:
dateByAddingTimeInterval:
client:isConnectionTerminatingError:
serverSupportFragmentCachedEvents:
length
removeObjectForKey:
exceptionWithName:reason:userInfo:
server:connectionDidExpire:
appendFormat:
intersectSet:
setWithArray:
timeIntervalSinceDate:
numberWithUnsignedInt:
client:forwardingTopicsForTopics:
serverFragmentEventsDataSize:
dataWithBytes:length:
lastObject
removeObject:
initWithUUIDString:
allocWithZone:
errorWithDomain:code:userInfo:
sendUpdatedEvents:toConnection:
removeAllObjects
numberWithInt:
client:fetchWithFilters:completion:
suspend
serverDebounceTimeInterval:
enumerateKeysAndObjectsUsingBlock:
numberWithDouble:
sendUpdatedCachedEvents:toConnection:
dictionaryWithObjects:forKeys:count:
data
sendKeepAliveForClient:completion:
server:upstreamTopicsForTopic:
allObjects
currentDate
numberWithBool:
UTF8String
init
upstreamTopicsForTopic:
forwardingTopicsForAdditions:removals:current:indexProvider:
initWithDelegate:
initWithDelegate:logCategory:
initWithDelegate:logger:
registerConsumer:topicFilters:
unregisterConsumer:topicFilters:
changeRegistrationsForConsumer:topicFilterAdditions:topicFilterRemovals:
topicsForConsumer:
unregisterConsumer:
consumersForTopic:
minimalSpanningTopicFilters
allRegisteredTopicFilters
dumpStateDescription
registrations
registeredTopics
delegate
.cxx_destruct
_logger
_registrations
_registeredTopics
_delegate
T@"NSMapTable",R,N,V_registrations
T@"NSMutableSet",R,N,V_registeredTopics
T@"<HMETopicRouterDelegate>",R,W,V_delegate
dealloc
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
lastEventForTopic:
eventsForTopicFilters:
writer:saveEvent:topic:
writer:saveEventIfAllowed:topic:
writer:saveEventIfDifferent:topic:
resetTopic:
eventsForTopicFilters:sinceReferenceTimestamp:
resetBeforeReferenceTimestamp:
initInMemoryStore
initWithFileName:
startup
resetEventStore
resetWildcardTopics:
fileName
insertEventPreparedStatement
replaceEventIfMoreRecentOrDifferentSourcePreparedStatement
selectEventByKeyPreparedStatement
deleteEventByKeyPreparedStatement
deleteEventByKeyLikePreparedStatement
deleteBeforeTimestampPreparedStatement
_lock
_fileName
T@"NSString",R,V_fileName
copyWithZone:
hasTopic
hasEvent
dictionaryRepresentation
readFrom:
writeTo:
copyTo:
mergeFrom:
topic
setTopic:
event
setEvent:
_event
_topic
TB,R,N
T@"NSString",&,N,V_topic
T@"HMEProtoEvent",&,N,V_event
didReceiveCachedEvent:topic:source:
isCachedEventSourceCurrentProcess
didChangeRegistrationsWithTopicFilterAdditions:removals:
changeRegistrationsSyncForConsumer:topicFilterAdditions:topicFilterRemovals:completion:
unregisterConsumerSync:completion:
changeRegistrationsForConsumer:topicFilterAdditions:topicFilterRemovals:completion:
registerConsumer:topicFilters:completion:
unregisterConsumer:topicFilters:completion:
unregisterConsumer:completion:
synchronousSubscriptionProvider
initWithQueue:storeReadHandle:storeWriteHandle:logger:
initWithQueue:storeReadHandle:logger:
initWithQueue:
processReceivedEvents:
processReceivedCachedEvents:
handleChangeRegistrationsWithTopicFilterAdditions:removals:
forwardingTopicsForTopics:
eventStoreReadHandle
eventStoreWriteHandle
queue
topicRouter
privateDelegate
setPrivateDelegate:
_eventStoreReadHandle
_eventStoreWriteHandle
_queue
_topicRouter
_privateDelegate
T@"<HMELastEventStoreReadHandle>",R,V_eventStoreReadHandle
T@"<HMELastEventStoreWriteHandle>",R,V_eventStoreWriteHandle
T@"NSObject<OS_dispatch_queue>",R,V_queue
T@"HMETopicRouter",R,V_topicRouter
T@"<HMERouterClientDelegate>",W,V_privateDelegate
didReceiveEvent:topic:
initWithQueue:dataSource:
initWithQueue:dataSource:storeReadHandle:logCategory:identifier:
initWithQueue:dataSource:logger:
initWithQueue:dataSource:storeReadHandle:logger:identifier:
registerSubRouter:
unregisterSubRouter:
identifier
_identifier
_subRouters
_dataSource
T@"NSUUID",R,V_identifier
initWithQueue:provider:registrationEventRouter:storeReadHandle:logger:
initWithQueue:provider:registrationEventRouter:
initWithQueue:provider:registrationEventRouter:storeReadHandle:logCategory:
handleEvent:topic:
handleCachedEvent:topic:
expandedTopicsForTopics:
connectWithConnection:connectEvent:unregisterEvent:completion:
disconnectConnection:
didInvalidateConnection:
changeRegistrationsForConnection:topicFilterAdditions:topicFilterRemovals:completion:
setDelegate:
dataSource
setDataSource:
T@"<HMEPersistentConnectionServerDelegate>",W,V_delegate
T@"<HMEPersistentConnectionServerDataSource>",W,V_dataSource
hasSource
setTimestamp:
setHasTimestamp:
hasTimestamp
setCachePolicy:
setHasCachePolicy:
hasCachePolicy
setCombinePolicy:
setHasCombinePolicy:
hasCombinePolicy
setQos:
setHasQos:
hasQos
source
setSource:
timestamp
cachePolicy
combinePolicy
_timestamp
_cachePolicy
_combinePolicy
_qos
_source
_has
T@"NSString",&,N,V_source
TB,N
Td,N,V_timestamp
TI,N,V_cachePolicy
TI,N,V_combinePolicy
TI,N,V_qos
initDefaultMetadata
initWithSource:cachePolicy:combineType:timestamp:
_initWithSource:rawCachePolicy:rawCombineType:rawQos:timestamp:
combineType
intervalSinceReferenceDate
rawCombineType
rawCachePolicy
rawQOS
_intervalSinceReferenceDate
_rawCombineType
_rawCachePolicy
_rawQOS
TQ,R,V_rawCombineType
TQ,R,V_rawCachePolicy
TQ,R,V_rawQOS
T@"NSString",R,C,V_source
Td,R,V_intervalSinceReferenceDate
eventFromProtobuff:
initWithSubclassedEventMetadata:
initWithEventData:
initWithEventData:metadata:
_initWithEventData:metadata:
encodedData
pbEvent
eventMetadata
eventData
_eventMetadata
_eventData
T@"NSData",R,C,N,V_eventData
T@"NSData",R,C
T@"HMEEventMetadata",R,V_eventMetadata
initWithQueue:timerProvider:keepAliveInterval:dormantFetchTimerInterval:retryIntervalProvider:
initWithQueue:timerProvider:keepAliveInterval:dormantFetchTimerInterval:retryIntervalProvider:storeReadHandle:storeWriteHandle:logCategory:
didReceiveMessageWithEvents:serverIdentifier:completion:
didReceiveMessageWithCachedEvents:serverIdentifier:completion:
serverDidChangeWithServerIdentifier:
connectionCapabilityDidChange
updateConnectionMode:completion:
updateDormantFetchCondition:completion:
connectionRetryIntervalProvider
timerProvider
pendingTopicsCombiner
isConnected
setIsConnected:
hasPendingRequest
setHasPendingRequest:
hasPendingServerChangeRequest
setHasPendingServerChangeRequest:
keepAliveInterval
keepAliveTimer
setKeepAliveTimer:
connectionRetryTimer
setConnectionRetryTimer:
connectedServerIdentifier
setConnectedServerIdentifier:
connectionMode
setConnectionMode:
dormatFetchTimerInterval
dormantFetchTimer
setDormantFetchTimer:
dormantFetchConditionsMet
setDormantFetchConditionsMet:
isWaitingForFetchConditionsWhenDormant
setIsWaitingForFetchConditionsWhenDormant:
_isConnected
_hasPendingRequest
_hasPendingServerChangeRequest
_dormantFetchConditionsMet
_isWaitingForFetchConditionsWhenDormant
_connectionRetryIntervalProvider
_timerProvider
_pendingTopicsCombiner
_keepAliveInterval
_keepAliveTimer
_connectionRetryTimer
_connectedServerIdentifier
_connectionMode
_dormatFetchTimerInterval
_dormantFetchTimer
T@"<HMETimerIntervalProvider>",R,V_connectionRetryIntervalProvider
T@"<HMETimerProvider>",R,V_timerProvider
T@"HMEPendingTopicsCombiner",R,V_pendingTopicsCombiner
TB,N,V_isConnected
TB,N,V_hasPendingRequest
TB,N,V_hasPendingServerChangeRequest
Td,R,V_keepAliveInterval
T@"<HMETimer>",&,N,V_keepAliveTimer
T@"<HMETimer>",&,N,V_connectionRetryTimer
T@"NSUUID",&,N,V_connectedServerIdentifier
Tq,N,V_connectionMode
Td,R,V_dormatFetchTimerInterval
T@"<HMETimer>",&,N,V_dormantFetchTimer
TB,N,V_dormantFetchConditionsMet
TB,N,V_isWaitingForFetchConditionsWhenDormant
T@"<HMEMessageDatagramClientDelegate>",W
T@"<HMEMessageDatagramClientDataSource>",W,N,V_dataSource
initWithEvents:
eventItems
addEventInfo:
combinePreviousEvents:
resetItems
hasEventItem
popEventItemsUpWithFragments:toSizeInBytes:usedBytes:
eventInfoMaxSizeInBytes:
mutableEventItems
setMutableEventItems:
_mutableEventItems
T@"NSMutableArray",&,N,V_mutableEventItems
T@"NSArray",R,C,N
fromProtobuff:
eventInfoFromProtoData:
eventsMapFromEventInfos:
eventsMapFromProtoEvents:
topicAndMetadataMaxSizeInBytes
initWithEvent:topic:
pbEventInfo
T@"HMEEvent",R,N,V_event
T@"NSString",R,C,N,V_topic
didConnectConnection:connectEvent:unregisterEvent:
didRemoveConnection:
cachedEventsForExpandedTopics:
unregisterEvents
subscriptionProvider
localEventForwarder
_unregisterEvents
_subscriptionProvider
_localEventForwarder
T@"NSMapTable",R,V_unregisterEvents
T@"<HMESynchronousSubscriptionProviding>",R,V_subscriptionProvider
T@"<HMEEventForwarder>",R,V_localEventForwarder
combineWithAdditions:removals:
combineOntoPreviousAdditions:removals:
topicFiltersToAdd
topicFiltersToRemove
reset
addTopicFilters
setAddTopicFilters:
removeTopicFilters
setRemoveTopicFilters:
_addTopicFilters
_removeTopicFilters
T@"NSMutableSet",&,V_addTopicFilters
T@"NSMutableSet",&,V_removeTopicFilters
T@"NSArray",R
initWithConnection:expiry:
pendingEventItems
pendingCachedEventItems
expiry
setExpiry:
debounceStartTime
setDebounceStartTime:
connection
setConnection:
_pendingEventItems
_pendingCachedEventItems
_expiry
_debounceStartTime
_connection
T@"NSUUID",R,C,N,V_identifier
T@"HMEPendingEventsCollection",R,N,V_pendingEventItems
T@"HMEPendingEventsCollection",R,N,V_pendingCachedEventItems
T@"NSDate",&,N,V_expiry
T@"NSDate",&,N,V_debounceStartTime
T@,W,N,V_connection
refreshConnection:
connectWithConnection:connectEvent:unregisterEvent:topicFilterAdditions:completion:
keepAliveConnection:completion:
fetchCachedEventsForTopics:completion:
resetExistingEvents
connectionInfoItems
connectionExpiryTimer
setConnectionExpiryTimer:
connectionDebounceTimer
setConnectionDebounceTimer:
_connectionInfoItems
_connectionExpiryTimer
_connectionDebounceTimer
T@"NSMutableArray",R,N,V_connectionInfoItems
T@"<HMETimer>",&,V_connectionExpiryTimer
T@"<HMETimer>",&,V_connectionDebounceTimer
T@"<HMEMessageDatagramServerDelegate>",W,V_delegate
T@"<HMEMessageDatagramServerDataSource>",W,V_dataSource
initWithQueue:storeReadHandle:storeWriteHandle:
didInvalidateConnection
didReconnect
processReceivedEventsFromMessage:
processReceivedCachedEventsFromMessage:
T@"<HMEPersistentConnectionClientDelegate>",W
forwardEvent:topic:completion:
initWithQueue:storeReadHandle:storeWriteHandle:logCategory:
T@"<HMEMemoryEventBusDelegate>",W,V_delegate
T@"<HMEMemoryEventBusDataSource>",W,V_dataSource
hasEventData
hasEventMetadata
setEventData:
setEventMetadata:
T@"NSData",&,N,V_eventData
T@"HMEProtoEventMetadata",&,N,V_eventMetadata
@48@0:8@16@24@32@?40
@16@0:8
@24@0:8@16
@32@0:8@16r*24
@32@0:8@16@24
v32@0:8@16@24
v40@0:8@16@24@32
v24@0:8@16
v16@0:8
@"NSObject<OS_os_log>"
@"NSMapTable"
@"NSMutableSet"
@"<HMETopicRouterDelegate>"
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"HMEEvent"24@0:8@"NSString"16
@"NSDictionary"24@0:8@"NSArray"16
B40@0:8@16@24@32
v40@0:8@"<HMELastEventStoreWriter>"16@"HMEEvent"24@"NSString"32
B40@0:8@"<HMELastEventStoreWriter>"16@"HMEEvent"24@"NSString"32
v24@0:8@"NSString"16
@32@0:8@16d24
v24@0:8d16
@"NSDictionary"32@0:8@"NSArray"16d24
^{sqlite3=}
^{sqlite3_stmt=}
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSString"
@24@0:8^{_NSZone=}16
@"HMEProtoEvent"
v32@0:8@"NSArray"16@"NSArray"24
@"NSSet"24@0:8@"NSString"16
v48@0:8@16@24@32@?40
v32@0:8@16@?24
v48@0:8@"<HMEEventConsumer>"16@"NSArray"24@"NSArray"32@?<v@?@"NSDictionary"@"NSError">40
v32@0:8@"<HMEEventConsumer>"16@?<v@?@"NSError">24
v40@0:8@16@24@?32
v40@0:8@"<HMEEventConsumer>"16@"NSArray"24@?<v@?@"NSDictionary"@"NSError">32
v40@0:8@"<HMEEventConsumer>"16@"NSArray"24@?<v@?@"NSError">32
@"<HMESynchronousSubscriptionProviding>"16@0:8
@48@0:8@16@24@32@40
@40@0:8@16@24@32
B32@0:8@16@24
@"<HMELastEventStoreReadHandle>"
@"<HMELastEventStoreWriteHandle>"
@"NSObject<OS_dispatch_queue>"
@"HMETopicRouter"
@"<HMERouterClientDelegate>"
v32@0:8@"HMEEvent"16@"NSString"24
v40@0:8@"HMEEvent"16@"NSString"24@"<HMECachedEventSource>"32
@56@0:8@16@24@32r*40@48
@56@0:8@16@24@32@40@48
@"NSUUID"
@"<HMEDelegatingEventRouterDataSource>"
@56@0:8@16@24@32@40r*48
@"<HMEPersistentConnectionServerDelegate>"
@"<HMEPersistentConnectionServerDataSource>"
v20@0:8B16
v20@0:8I16
d16@0:8
I16@0:8
{?="timestamp"b1"cachePolicy"b1"combinePolicy"b1"qos"b1}
@48@0:8@16Q24Q32d40
@56@0:8@16Q24Q32Q40d48
@"HMEEventMetadata"
@"NSData"
@56@0:8@16@24d32d40@48
@80@0:8@16@24d32d40@48@56@64r*72
v32@0:8q16@?24
q16@0:8
v24@0:8q16
@"<HMEMessageDatagramClientDataSource>"
@"<HMETimerIntervalProvider>"
@"<HMETimerProvider>"
@"HMEPendingTopicsCombiner"
@"<HMETimer>"
@36@0:8B16Q20^Q28
Q24@0:8@16
@"NSMutableArray"
@"HMEEvent"
@"<HMESynchronousSubscriptionProviding>"
@"<HMEEventForwarder>"
@"HMEPendingEventsCollection"
@"NSDate"
v56@0:8@16@24@32@40@?48
@"<HMEMessageDatagramServerDelegate>"
@"<HMEMessageDatagramServerDataSource>"
v40@0:8@"HMEEvent"16@"NSString"24@?<v@?@"NSError">32
@48@0:8@16@24@32r*40
@"<HMEMemoryEventBusDelegate>"
@"<HMEMemoryEventBusDataSource>"
@"HMEProtoEventMetadata"
