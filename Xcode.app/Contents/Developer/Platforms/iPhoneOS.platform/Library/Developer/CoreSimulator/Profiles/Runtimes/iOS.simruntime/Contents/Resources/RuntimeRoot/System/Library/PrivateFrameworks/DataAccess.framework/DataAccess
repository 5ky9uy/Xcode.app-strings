DAAccountVersion2
DAAccountHost
DAAccountPort
DAAccountUseSSL
DAAccountEmailAddress
ACUIDisplayUsername
DASigningIdentityPersistentReference
DAEncryptionIdentityPersistentReference
DAAccountDidAutodiscover
DAExchangeOAuthSupportedKey
DAExchangeOAuthURI
DAExchangeOAuthTokenRequestURI
DAEASEndPointFQDN
DAIdentityPersist
DAIdentityPersistIsManagedByProfile
DATrustSettingsExceptions
DAAccountValidationDomain
 DAAccountFolderHierarchyChangedNotification
DAAccountFolderContentsChangedNotification
DAAccountFolderHierarchyNeedsUpdateNotification
DAAccountFolderHierarchyNeedsUpdateRequireChangedFoldersNotification
DAAccountFolderUpdatedWithNoChangesNotification
DAAccountPushedFolderPreferencesChangedNotification
DAOldKeychainURLs
DAAcountWasUpgradedFromLegacyAccount
DAAccountDoNotSaveReason
DAAccountSavePreflighted
kDAAccountIdentifiersToIgnoreForUniquenessCheck
DAAccountPrincipalPath
DAAccountUseTrustedSSLCertificate
DAAccountPersistentUUID
DAAccountConfigurationTag
v16@?0@"NSString"8
DAAccount.m
We shouldn't be resetting our account id, ever
com.apple.dataaccessd-%@
%@ %@
AccountID: %@ ("%@")
Stats %@
No Task Manager initted yet
NSPOSIXErrorDomain
https
http
v8@?0
v24@?0@"ACAccount"8@"NSError"16
%s MUST be implemented in ALL DAAccount subclasses.  Looks like it's missing in %@
Y=%@; T=%@
Cookie
Valid
InValid
com.apple.dataaccess.StorageSessionSetup
com.apple.dataaccessd.%@
%@: accountID %@ persistentUUID %@
Account class %@ MUST implement %s
v24@?0q8@"NSError"16
v20@?0B8@"NSError"12
ESAccount
Class getESAccountClass(void)_block_invoke
Unable to find class %s
void *ExchangeSyncLibrary(void)
com.apple.MobileAddressBook
com.apple.mobilephone
Calendar
Event
Reminder
Alarm
Recurrence
Store
Attendee
Organizer
EventAction
ExceptionDate
Attachment
Category
CategoryLink
Location
Sharee
InviteReply
ResourceChangeNotification
ResourceChange
Participant
CalendarItem
Notification
SuggestionNotification
SuggestedEventInfo
Contact
Conference
Error
AttachmentFile
AuxDatabase
AuxDatabaseAccount
Undefined
Unknown
com.apple.dataaccess.DATransactionMonitorQueue
DATransactionMonitor.m
Transaction count becomes negative, %d
DAReListenForAccounts
com.apple.dataaccessd.calDBQueue
DACalDBHelper.m
NULL auxDatabaseRef when trying to open aux database for client: %@
%@: tried to save a database that was never opened. accountID: %@
%@: tried to save a database that was never opened. auxDatabaseID: %d
%@: tried to close a database that was never opened. accountID: %@
%@: tried to close a database that was never opened. auxDatabaseID: %d
Client identifier is different. Expected "%@" but got "%@"
, and flushing caches
 old sequence %d
CalDBIsClosing
DAFrameworkName
DAAccountInfo
ACAccountType
ACParentAccountType
DAAccountClass
DAClientAccountClass
DADaemonAccountClass
DAAgentClass
DAAgentClassBundle
bundle
AccountInfo.plist
DAAccountLoader.m
Could not find the frameworks directory for bundle %@
Could not come up with an agent class (name %@) for account %@ parent account %@
Could not come up with an agent class (name %@) for account %@
<%@:
AccountClassName=%@
ClientAccountClassName=%@
DaemonAccountClassName=%@
AgentClassName=%@
modify
remove
fetch
preserve
move
belay-move
soft-delete
pseudo-delete
unknown
<%@: %p> { Change type: %@, ChangedItem: %@ serverId: %@%@}
, Change id: %d
DAAction.m
Who does non-keyed coding nowadays?
DAAItemChangeType
ASChangedCollectionLeaf
DAAChangedItem
DAAServerId
DAAInstanceId
DAAChangeId
DAASourceContainerId
DAASourceServerId
DAADestinationContainerId
DAPropertyName
DAPropertyNamespace
DAPropertyValue
DARStatus
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.dataaccess.ExchangeOAuthCount
count
com.apple.dataaccess.dataaccessd.dailyAnalytics
DAABLegacyContainer cannot update CNSaveRequest
DAABLegacyContainer does not support asContainer
 folderID = %@, name = %@, _parentFolderID %@, _dataclass %ld, _isDefault %@
com.apple.dataaccess.accountmonitor
DataAccess-
unit-test
v32@?0@"NSURLProtectionSpace"8@"NSDictionary"16^B24
%@?%@
?@/|:
%@:%@@
Password 
Login 
Host 
Scheme 
v24@?0^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}8^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}16
webcal://
added
modified
 NOT
google.com
yahoo.com
aol.com
Username
Hostname
PortNumber
SSLEnabled
%llu
%llu
%@ messageID "%@", onFlags %llu, offFlags %llu
%@ maxSize %d, bodyFormat %d
%@ messageID "%@"
%@ messageID "%@", maxSize %d, bodyFormat %d
%@ longID "%@", maxSize %d, bodyFormat %d
%@ message "%@", fromFolder "%@", toFolder "%@"
%@ messageID "%@", attachmentName "%@"
%@ subject "%@"
%@ status %d, sourceID "%@", destID "%@", origRequest (%@)
%@ emailAddresses %@
%@ status %ld
 email->certs 
status %ld 
(null)
 email->certs status %ld 
%@: 
<cert data length %ld hash %ld> 
 email->availability 
 email->availability status %ld 
%a, %d %b %Y %H:%M:%S %z
com.apple.dataaccess.queryqueue
DASyncStart
DASyncEnd
DACalendarItemsDownloaded
DACalendarItemsUploaded
AccountID
AccountClass
AccountName
NumberOfItemsChanged
ContainerID
NSString *acDataclassForDADataclass(DASingleDataclass)
com.apple.dataaccess.statusreport
@"NSMutableArray"8@?0
v24@?0@"NSArray"8@"NSError"16
v24@?0@"ACAccountType"8@"NSError"16
DAUtils.m
Only supports Exchange account types
int flockWithProcessAssertion(int, BOOL, NSString *__strong)
You can't flock a flocked file.  No ref counting for you
com.apple.dataaccess.unknown
0123456789ABCDEF
0123456789abcdef
CFBundleVersion
%@/%@ (%@) %@/%@
DeviceClass
ProductType
com.apple.reminders
com.apple.mobilenotes
com.apple.mobilemail
@?/:
%0.*d
%@://%@%@%@%@%@
%@://%@@%@%@%@%@%@
%@://%@
%@://%@%@
%@://%@:%u%@
%@://%@/
%@://%@:%u/
DADiagnosticsEnabled
NSDetailedErrors
NSDetailedErrors: 
Library/DataAccess/DeviceSpecificInfo.plist
com.apple.dataaccess.deviceid
DAGlobalDeviceSpecificIdentifier
iPhone Simulator
DATaskManager.m
There are queued exclusive tasks remaining during dealloc
There is an active exclusive task remaining during dealloc
There are independent tasks remaining during dealloc
There are held independent tasks remaining during dealloc
There are modal-held independent tasks remaining during dealloc
There are queued tasks remaining during dealloc
There is an active queued task remaining during dealloc
There is a modal-held active queued task remaining during dealloc
Apple-%@/%@
Out of bounds state
DATaskManager %@ state:%@
Active exclusive task: %@
Queued exclusive tasks: %@
Independent tasks: %@
Held independent tasks: %@
Modal-held independent tasks: %@
Active queued task: %@
Queued tasks: %@
Active modal task: %@
Queued modal tasks: %@
Associated with account: %@
Finished task is not being managed, so cannot be active modal task.
Finished task is not being managed, so cannot be in modal queue.
A nil task requested modal?
Cannot request modal behavior during shutdown
Only the active exclusive task can go modal immediately
Out of bounds state.
taskEndModal can only be called in Run Modal state, not %d
Only the active modal task can end modal behavior.
Cannot handle _startModal: in Shutdown state
Cannot have active queued task and active exclusive task at the same time.
Cannot have running independent tasks and an active exclusive task at the same time.
Cannot have active queued task and a modal task at the same time.
Cannot have running independent tasks and a modal task at the same time.
Cannot have active exclusive task in Nominal state.
Cannot have modal task in Nominal state.
We shouldn't be holding independent tasks in Nominal state
We shouldn't have queued exclusive tasks in Nominal state
We shouldn't have any independent tasks that are modal in Nominal state
Cannot have active exclusive task in Hold for Exclusive state.
Should not have any modal task active in Hold for Exclusive state
Should have at least one queued exclusive task in Hold for Exclusive state
Cannot have running independent tasks in Run Exclusive state.
Cannot have active queued task in Run Exclusive state.
Cannot have active modal task in Hold for Modal state.
Should have at least one queued modal task in Hold for Modal state.
Should not be running other independent tasks in Run Modal state.
Should not be running other queued task in Run Modal state.
Only the exclusive task can currently go modal.
Nominal
Hold for Exclusive
Run Exclusive
Hold for Modal
Run Modal
Shutdown
Out of bounds
GenericDataAccessAccount
GenericDataAccessAccountWithLogging
Subscribed Calendars
com.apple.dataaccessd.changeinserter
com.apple.dataaccess
CardDAV-dbhelper
com.apple.dataaccessd.abDBQueue
com.apple.dataaccessd.noteDBQueue
DALocalDBHelper.m
You can't ask for an AddressBook db if you didn't open it.  Geez! %@
ClientIdentifier can not be nil
<unknown>
local
You can't ask for a note db if you didn't open it.  Geez! %@
DAPowerAssertionManager.m
%s must have a non-nil context
%s must have a non-nil group identifier
Shared DAPowerAssertionManager object %@:
Contexts asserting power: %@
Contexts held aside: %@
Active Assertions: %@
com.apple.DataAccess:%d-%p
^{__CFArray=}8@?0
ASAccountActor.m
Must be called on subclass: %s
ESAccountActor
Class getESAccountActorClass(void)_block_invoke
com.apple.cfnetwork
apple
/Microsoft-Server-ActiveSync
q24@?0@8@16
com.apple.dataaccess.checkHolidayCalendarAccount
containerWithExternalIdentifier:forAccountWithExternalIdentifier is abstract
allContainers is abstract
allContainersForAccountWithExternalIdentifier is abstract
createNewContainerWithType is abstract
setDefaultContainer:onlyIfNotSet: is abstract
setLastSyncDateForContainer: is abstract
mergeAllRecordIntoContainer: is abstract
DADataHandlers.m
Can't initialize a DADataHandler with a nil changeTrackingID
setLastSyncDateForContainer
@"EKEventStore"8@?0
v32@?0@"DALocalDBWatcherCalConcernedParty"8@?<v@?>16^B24
DALocalDBWatcher.m
Someone registered themselves for the Note notification more than once.  Why?  Bad guy %@
_CalDatabaseChangedNotification
NoteContextDarwinNotificationWithLoggedChanges
%@: waiter %@ wants dataclasses %lx
DALocalDBGateKeeper.m
DALocalDBGateKeeper is shutting down, but the following account is still holding the dataclass lock for dataclass %lx.  Account %@
DALocalDBGateKeeper is shutting down, but the following accounts are still waiting on the dataclass lock for dataclass %lx.  Account %@
DALocalDBGateKeeper is shutting down, but the following accounts are still waiting on the dataclass lock for dataclass type %lx.  Account %@
Waiter %@ tried to relinquish a lock for data class %ld, but it was held by another waiter: %@
_contactsLockHolder %@
_contactsWaiters %@
_waiterIDsExpectingContactsLock %@
_eventsLockHolder %@
_eventsWaiters %@
_waiterIDsExpectingEventsLock %@
_notesLockHolder %@
_notesWaiters %@
_waiterIDsExpectingNotesLock %@
DAUserNotificationUtilities.m
Invalid parameter not satisfying: %@
notification != nil
completionBlock != nil
runLoop != nil
Already waiting on this notification %p
fetchedAccountWithExternalIdentifier: is abstract
accountByCreatingAccountWithExternalIdentifier: is abstract
allAccounts: is abstract
accountForContainerWithIdentifier: is abstract
com.apple.dataaccess.dataaccessd
kDAMigrationBuildVersionKey
BuildVersion
.me.com
.icloud.com
v24@?0@8^B16
v12@?0i8
com.apple.dataaccess.trustChallengeQueue
Not 
v12@?0B8
DAABLegacyAccount cannot update CNSaveRequest
com.apple.dataaccess.DATrafficQueue
^{__CFString=}76@?0i8^{__CFDate=}12^{__CFString=}20^{__CFString=}28r*36r*44Q52^v60^{__CFString=}68
DALogLevel
SBLockStateChanged
v32@?0@"NSString"8@"NSNumber"16^B24
com.apple.dataaccessd.sblockqueue
com.apple.frontboard.visibility
v32@?0@"RBSProcessMonitor"8@"RBSProcessHandle"16@"RBSProcessStateUpdate"24
v16@?0@"<RBSProcessMonitorConfiguring>"8
------
DAPriorityManager: 
[%@ 
Refresh: 0x%lx 
UI: 0x%lx 
------
DAPriorityManager.m
You can't request priority with a nil client
Background
Refresh
DAContactsContainer does not support asSource
Could not load source: %ld
/AppleInternal/Library/Frameworks/CalendarDiagnostics.framework/CalendarDiagnostics
IPHONE_SIMULATOR_ROOT
CFFIXED_USER_HOME
RestrictionTimeout
NumFailures
com.apple.dataaccess.babysitter
LastSystemVersion
RestrictedWaiters
RefreshingWaiters
FailedWaiters
DataAccessBabysitterPrefsChanged
DABabysitter.m
Use the shared babysitter, jerk.
DAAccount %p is going away...
Not clearing/refreshing account credentials for account %{public}@ because the credentials have yet to be saved.
Account %{public}@ has DAAccountVersion %d
Account %{public}@ has no DAAccountVersion, and we have no previous build version. Forcing account migration.
Account %{public}@ has no DAAccountVersion, and the previous build version string (%{public}@) could not be parsed. Forcing account migration.
Account %{public}@ has no DAAccountVersion, and the previous build version string (%{public}@) appears old enough that we think we need to migrate. Forcing account migration.
Account %{public}@ has no DAAccountVersion, and the previous build version string (%{public}@) appears new enough not to force migration. Assuming DAAccountVersion 1.
Account "%@" (%@) was toggled for a dataclass. Giving it another chance with the babysitter.
%s to be implemented by subclass
%s being ignored by %@
Added consumer %p for task %p to DAAccount %p, count: %lu
Removed consumer for task %p from DAAccount %p, count: %lu
Account %p clientToken: %@
Account %p clientTokenRequestedByServer, new token: %@
Someone wanted to set a nil password, we're editing the live ACAccountCredential
Calling _backingAccountInfo.authenticated = YES for Account identifier %@ and username %@
Could not convert account %{public}@ to persona %@, with error %@
This process needs entitlement com.apple.usermanagerd.persona.background
Could not get current persona context for account %{public}@, with error %@
Changing Host From %@ to %@
Removing contacts data for account %@, because it has a significant change
Found %ld contacts sources to remove
Removing event / todo data for account %@, because it has a significant change
Found %ld calendars to remove
Ignoring Notes orphan check.  You asked for it.
Removing notes data for account %@, because it has a significant change
Found a note account to remove
Failed to save: %@
Notes database was corrupted! Non-fatal at this point, but just barely
Account had significant property change, going to flush local data.
ChangeInfo %@
NewProperties %@
Couldn't get a Yahoo cookie. Not setting authentication headers
Fetching OAuth Credential for Backing Account %@
Account Store Returned A %@ OAuth-token From Credential Object %@ AccountID: %@
Saving account "%@" (%{public}@)
 _backingAccountInfo.authenticated is %d for Account identifier %@ and username %@
Error saving account %@: %@
Not updating non-existing account: %@
Refusing to save account because DAAccountDoNotSave is set to "%@"
Setting identity certificate. Managed by profile? %@
Account %@ (%{public}@) says it is not authenticated. Refreshing to be sure.
Account %@ (%{public}@) is still not authenticated after refreshing.
Good news! Account %@ (%{public}@) is now authenticated after refreshing.
The account %@ (%{public}@) is not marked as authenticated, but it supports authentication, appears to have credentials, and is marked to ignore the isAuthenticated property. We will try to sync this account.
Not attempting request for account %@ because the backing account credential isn't authed %{public}@
Not attempting request for account %{public}@ because the backing account needs to verify terms or is suspended. %{public}@
Not attempting request for account %{public}@ because we don't have access to keychain items with accessibility %d right now
Shutting down the task manager
Canceling task because conditions for on-power mode no longer exist (xpc_activity)
XPC: Saved XPC activity for account %@
XPC: Increment XPC activity continue count to %d for account %@
XPC: Decrement XPC activity continue count to %d for account %@
XPC: Successfully set XPC activity state to XPC_ACTIVITY_STATE_DONE for account %@
XPC: Failed to set XPC activity state to XPC_ACTIVITY_STATE_DONE for account %@
DataAccess is renewing credentials for account %{public}@ by forcing-prompt: %{public}@
Failed to save account when attempting to remove kDAAccountIgnoreAuthenticatedProperty flag: %@
DataAccess successfully renewed credentials for account %{public}@ by forcing-prompt: %{public}@
DataAccess failed to renew credentials for account %{public}@ by forcing-prompt: %{public}@ - renewalResult = %ld
Account had significant property change, going to flush local data.
OldProperties %@
NewProperties %@
Downloading attachments is not supported on account ID %@. AttachmentUUID: %@
Requesting calendar availability is not supported on account with ID [%@].
Cancelling calendar availability requests is not supported on account with ID [%@].
Requesting granted delegates list is not supported on account with ID [%@].
Cancelling granted delegates list requests is not supported on account with ID [%@].
Update granted delegate permission is not supported on account with ID [%@].
Cancelling update granted delegate permission requests is not supported on account with ID [%@].
Performing a calendar directory search is not supported on account with ID [%@].
Cancelling calendar directory searches is not supported on account with ID [%@].  searchID: [%@]
Responding to calendar shares is not supported on account ID %@. calendar ID: %@
Reporting calendar shares as junk is not supported on account ID %@. calendar ID: %@
Fetching office hours is not supported on account ID %{public}@
Setting office hours is not supported on account ID %{public}@
Transaction count is initialized to %d
Transaction count is incremented to %d
Transaction count is decremented to %d
Remaining transactions: %@
Failed to determine database directory path for accountID: %{public}@
Failed to determine database directory path for auxDatabaseID: %{public}@
Creating calendar database for clientID %{public}@
Using already-created calendar database %{public}p
Created calendar database %{public}p
Cal database %p opened for "%{public}@". Connection count is now %lu
connectionCount is > 1, at %lu
Saving calendar database %p%{public}@%{public}@.
Saving calendar database %p%{public}@.  Save failed
Resetting calendar database %p sequence %d
_closeDatabase called too many times with path: %{public}@
Decrementing database %p reference count. connectionCount is %lu. Client identifier is "%{public}@"
Destroying calendar database %p
Someone asked us to yield the calendar database. Bumping up all clients to UI priority
Handling account info mapping %@
Using pre-cached account infos
Going to the disk for our account info providers
We don't know of any bundles for account type "%@"
Could not come up with an account class (name %@) for account %@ parent account %@
Could not come up with an account class (name %@) for account %@
Could not come up with a client account class (name %@) for account %@ parent account %@
Could not come up with a client account class (name %@) for account %@
Could not come up with a daemon account class (name %@) for account %@ parent account %@
Could not come up with a daemon account class (name %@) for account %@
starting daily Analytics reporter
Updating criteria for daily Analytics xpc activity.
unregistering daily Analytics reporter
Reporting Exchange OAuth accounts count
Reported Exchange OAuth accounts count
Loading password for %@
Securing ur sekretz: moving credential for account %@ to accessibility %d
Couldn't change password accessibility, error %d
Could not find a password in the keychain for %@, error %d
Removing credential %@
Setting password for account with UUID %@
Error %d, Can't update password for account %@
Removing password for account with UUID %@
Error %d, Couldn't delete password from keychain for account %@
During Migration, password present. Setting _backingAccountInfo.authenticated = YES for Account identifier %@ and username %@
Saving password for %@
Refusing to save password in keychain because one or more of the necessary fields are null: %@%@%@%@
Error %d while trying to add a password: %@
Refusing to retrieve password from keychain because one or more of the necessary fields are null: %@%@%@
Could not find a password in the keychain for %@
Removing password for %@
Refusing to delete password from keychain because one or more of the necessary fields are null: %@%@%@
error %d: Could not delete password for %@
Setting password for account
Couldn't set password, error %d
Couldn't add password, error %d
Handling account will change %{public}@
Handling account did change %{public}@
Found an account of type %{public}@.  Sanity check enabled dataclasses.
Found an account of type %{public}@.  Sanity check account properties.
Found a parent account of type %{public}@. Sanity checking child accounts for it.
_handleAccountAddOrModify: Failed to save account with identifier %{public}@: %@
Not creating a store for account %{public}@ because it is not appropriate
Not creating a store for account %{public}@ because it is the child of a CalDAV account
Couldn't find an account type with identifier %{public}@, error = %@
Failed to remove orphaned subscribed calendar account %{public}@: error = %@
Failed to save %{public}@ subscribed calendar child account: error = %@
No calendar for account %{public}@, so we can't update it.
Couldn't save calendar with updated properties for change to account %{public}@ (%@): %@
No calendar updates needed for changes to account %{public}@ (%@)
Sanity checking CalDAV account "%@" (%{public}@). This account does %@ use the calendar home sync report. Modified dataclasses are %@.
Account "%@" (%{public}@) is being added with credentials but is not set as authenticated. Marking it to ignore the authenticated property on next sync.
BagURL has changed from %@ to %@, updated account
Found > 1 child accounts of type %@ under account %@.  Keeping %@ and removing %@
Failed to remove duplicate child account %{public}@: error = %@
Failed to add child account: error = %@
Failed to save child account: error = %@
DAMailMessage initWithCoder: should be called on a subclass only
DAMailMessage encodeWithCoder: should be called on a subclass only
Updating oof settings requested on account %@, which does not support it
Retrieving oof settings requested on account %@, which does not support it
Checking if oof settings are supported on account %@, which does not support it
Delay pending search for %f seconds
Delay new search for %f seconds
Search requested on account %@, which does not support it
%s unhandled dataclass %lx
Could not convert ACAccount (%@) to DAAccount
Could not load ACAccounts due to Account Error %@
Applying storage session %@ to request %@
Exception when reading dictionary from %@: %@
Task manager %@ is being deallocated. Ending XPC transaction
Task manager %@ is being deallocated. Ending XPC activity
Exclusive task %@ submitted, to front: %d
Begin an xpc transaction due to exclusive task
DATransaction starting, ID: %@
Retain an xpc activity due to exclusive task for account %@
Independent task %@ submitted
Begin an xpc transaction due to independent task
Retain an xpc activity due to independent task for account %@
Queued task %@ submitted
Begin an xpc transaction due to queued task
Retain an xpc activity due to queued task for account %@
Task %@ aborted
Task Manager %p shutting down with account at %p
Task Manager %p shutting down with state %@
Task manager %@ is being shut down. Ending XPC transaction
Task manager %@ is being shut down. Releasing XPC activity
Task manager %@ has finally drained its queue. Turning opportunistic socket support back on
Task manager %@ has finally drained its queue. Clearing its user initiated sync state
Task manager %@ has finally drained its queue. Ending XPC transaction
Task manager %@ has finally drained its queue. Releasing XPC activity
Task manager %@ has finally drained its queue. Reset automatic fetching state
Task %@ finished.
Early return because task %@ isn't in our collection
Pending tasks are finished for account "%@" (%{public}@)
Task %@ requesting modal
Task %@ ending modal
The _performTask is invoked after taskManager has been shutdown. Canceling %{public}@ %@
The device is in on-power fetch mode, but is no longer on power or on wifi. Canceling %{public}@ %@
The _startModal is invoked after taskManager has been shutdown. Canceling %{public}@ %@
startModal called on task %@
Task Manager %@ transitioning from state: %@
Task Manager %@ transitioning to state: %@
Scheduling selector: %s with argument: %@ in modes %@
Scheduling modal task: %@
Cancelling task %@ with reason %d
Unexpected unsaved contact changes: %lu
abDB is unsupported under modern Contacts framework :%@
Unexpected error committing save request :%@
_registerForAddressBookYieldNotifications is unsupported under modern Contacts framework :%@
Someone asked us to yield the AddressBook database. Bumping up all clients to UI priority
_abOpenDBWithClientIdentifier is unsupported under modern Contacts framework :%@
Creating ab database for client %@
Created ab database %p
Couldn't create ab database: %@
AB database %p opened. Connection count is now %d
_abConnectionCount is > 1, at %d
abOpenDBWithClientIdentifier is unsupported under modern Contacts framework :%@
abOpenDBAsGenericClient is unsupported under modern Contacts framework :%@
abSaveDB is unsupported under modern Contacts framework :%@
_abCloseDB called too many times (connection count %d).  Resetting count to 0
Decrementing database %p reference count. _abConnectionCount is %d
Destroying ab database %p
Creating note database
Created note database %p
Note database %p opened. Connection count is now %d
_noteConnectionCount is > 1, at %d
Saving notes database %p. Connection count is %d
Saving notes database %p failed with error %@
Decrementing database %p reference count. _noteConnectionCount is %d
_noteCloseDB called too many times (connection count %d).  Resetting count to 0
Destroying notes database %p
Setting unit test Address Book Database directory to: %@
Setting unit test Calendar Main Database directory to: %@, Container Provider: %@
Context %@ retaining power assertion with group identifier %@
Context %@ getting added to our held aside contexts, as group %@ is currently dropped
Context %@ releasing power assertion
Context object %@ attempting to release power assertion without first retaining it
Dropping power assertion for group identifier %@
Reattaining power assertion for group identifier %@
DAPowerAssertionManager retained power assertion %@ for context %p, outstanding assertion count %lu
DAPowerAssertionManager unable to get non-nil power assertion %@ for context %p, outstanding assertion count %lu
DAPowerAssertionManager releasing power assertion for context %p, outstanding assertion count %u ontext
Nil container passed to -mergeAllRecordsIntoContainer:shouldInsertChangeHistoryRecords, aborting merge
Could not derive an ABSource from DAContainer in -mergeAllRecordsIntoContainer:shouldInsertChangeHistoryRecords, aborting merge
About to mergeAllRecordsIntoContainer, shouldInsertChangeHistoryRecords: %{public}d 
[mergeAllRecords] Moving all records from source ID %{public}d into source ID %{public}d 
First sync finishing %{public}@, setting lastSyncDate
Another sync finishing %{public}@, not setting lastSyncDate
Could not search for Exchange credentials.  %d
Could not move Exchange credential to apple keychain access group.  %d
Saving child account %@
Child account %@ saved
Child account %@ failed to save: %@
DAAccountMigrator: Waiting for child accounts to save...
Couldn't get a Facebook account type
Upgrading all DataAccess accounts...
Calling DAAccount Upgrader to upgrade Accounts
Account "%@" (%{public}@) was upgraded. Saving account.
DAD: DataAccess Migrator sending notification: com.apple.dataaccess.checkHolidayCalendarAccount
DAD: DataAccess Migrator Request For Performing Asynchronous Data Migration
DAAccountMigrator: Starting Exchange Credential Move to Apple Access Group
DAAccountMigrator: Starting Update Facebook Authentication types.
DAAccountMigrator: Starting Upgrade DAAccount types.
DAAccountMigrator: Writing Device specificID.
DAD: DataAccess Migrator skipped several tasks because user logs in for the first time.
DAAccountMigrator: Posting HolidaySubCal Account Check Notification.
DAAccountMigrator: Updating migration Version.
DAAccountMigrator: Finished Migrator For dataaccess..returning YES/Success.
Setting default container is not implemented yet. <rdar://problem/40239535>
Setting last sync date on container is not implemented yet.
Saving sync status for source with identifier %{public}@: lastSyncStartDate = %{public}@, lastSyncEndDate = %{public}@, canceled=%{public}@ lastSyncError = %@
Initial sync canceled. Clearing start date for source with identifier %{public}@
Failed to save source sync status with source identifier %@. Error = %@
Tried to update status for store with nil externalID
Updating sync status (%@) for source with externalID %{public}@
Tried to update status for store, but could not get a corresponding EKSource for externalID %{public}@. lastSyncError is %@
Tried to update status for calendar with nil externalID
Updating sync status (%@) for calendar with externalID %@
Tried to update status for calendar, but could not get a corresponding EKCalendar for externalID %@ in source with external ID %@. lastSyncError is %@
Saving sync status for calendar with external identifier %@: lastSyncStartDate = %{public}@, lastSyncEndDate = %{public}@, canceled=%{public}@ lastSyncError = %@
Initial sync canceled. Clearing start date for calendar with external identifier %@
Failed to save calendar sync status with calendar external ID %@. Error = %@
__CalDatabaseChangedExternally - comparing current sequence number %d to saved sequence number %d in database: %@
Notifying agents that the Calendar database has changed.
No database for account: %{public}@
no path for database: %p, account: %{public}@
No dbInfo for path: %{public}@, database: %p, account: %{public}@
Registering concerned cal party: %@ for account: %{public}@
__NotesChanged externally.
Received darwin notification %@
Aborting locks for dataclasses %lx to %@
Notifying waiters for dataclasses %ldd
Granting locks for dataclasses %lx to %@
registerWaiter %@ forDataclassLocks %lx
Not allowing waiter %@ to get the gate, as we're in a holding pattern
Letting everyone know we're done with contacts
Not notifying for contacts.  Claimed %d waiters count %lu holder %p expectant waiters %lu
Letting everyone know we're done with events
Not notifying for events.  Claimed %d waiters count %lu holder %p expectant waiters %lu
Letting everyone know we're done with notes
Not notifying for notes.  Claimed %d waiters count %lu holder %p expectant waiters %lu
unregisterWaiterForDataclassLocks %@
relinquishing locks for waiter %@ dataclasses %lx
Claiming ownership of dataclasses 0x%lx
DATransaction exiting, ID: %@
Couldn't schedule response for notification %@
No completion block for notification %@
DAMigrationIsNeeded : DataAccess Migrator Comparing Version %@ With %@
DAUpdateMigrationVersion : DataAccess Migrator Current Version %@
Checking to see if we should trust the server certificate
Terminating connection because server does not have an SSL certificate. Host: %@
Account now requires trusted certificate. Setting %@ to YES for account: %@
Got SecTrustEvaluate result %u. Allowing.
Got SecTrustEvaluate result %u. Checking if needing to prompt.
Terminating connection and warning user about an untrusted SSL certificate. The account requires trusted SSL certificate. Account: %@
Account does not require trusted certificate. Prompting user. Account: %@
Got SecTrustEvaluate result %u. Denying.
IT'S A TARP!!! We received an untrusted cert for %@. You really think we're going to fall for that?
prompting certificate for host: %@
got prompt response %d
Grabbing trust challenge lock...
Lock acquired. Checking trust.
%@Continuing connection
App state changed; %@ now has foreground status: %{BOOL}i. Foreground dataclasses are 0x%lx
DAPERF: DAPriorityManager is changing the priority to %d
Client %@ requested priority %@ for dataclasses 0x%lx
Bumping all client priority requests for dataclasses 0x%lx to UI. Open bar, dude!
Babysitter: The OS version is different. Giving all accounts a second chance at life.
Babysitter: Noting that waiter %@ failed %d times for operation %@
===================
Babysitter: You're once, twice, %d times a failure. Disabling account with ID %@ until it stops crashing. Please file a bug for any dataaccessd crashes you find.
===================
===================
Babysitter: Waiter %@ has crashed %d times now. Since you have the babysitter disabled, we're going to assume you know what you're doing and not disable the waiter. Consider yourself warned.
===================
Restricted accounts are: %@
Babysitter: Marking waiter %@ as performing operation "%@" (attempt #%d)
Babysitter: Decrementing refresh count for all operations on account %@
Babysitter: Decrementing refresh count for operation "%@" on account %@
Babysitter: It's been long enough, we're going to give account %@ another try. Let's hope it doesn't crash this time.
softlink:o:path:/System/Library/PrivateFrameworks/ExchangeSync.framework/ExchangeSync
softlink:o:path:/System/Library/PrivateFrameworks/ExchangeSync.framework/ExchangeSync
softlink:o:path:/System/Library/PrivateFrameworks/ExchangeSync.framework/ExchangeSync
DAAccount
TrustHandling
HSA2Support
CoreDAVLogging
AuthenticationExtensions
Deprecated
EventsFolderItemsSyncContext
EventsSupport
DATransactionMonitor
ChillOutARC
ContactFolderItemsSyncContext
ContactsSupport
MailFolder
MailFolderSupport
InvitationSupport
DACalDBHelper
DAAccountLoader
DAAccountClassNames
DAAction
NSSecureCoding
NSCoding
DAMoveAction
DAEditPropertyAction
DAResponse
DAAnalyticsReporter
DAABLegacyContainer
DAContainer
DACardDAVRecord
NSObject
DAFolder
DAAccountMonitor
DAKeychain
DAKeychainAdditions
DAKeychainAddition
OldAndBusted
DAAccountChangeUpdaterAccountStoreWrapper
DAAccountChangeHandlerAccountStoreUpdater
DASubCalAccount
DAAccountChangeHandler
DAMailboxRequest
DAMailboxSetFlagsRequest
DAMailboxGetUpdatesRequest
DAMailboxDeleteMessageRequest
DAMailboxFetchMessageRequest
DAMailboxFetchSearchResultRequest
DAMessageMoveRequest
DAMessageFetchAttachmentRequest
DADraftMessageRequest
DAMoveResponse
DAResolveRecipientsRequest
DAResolvedRecipient
DAMailMessage
Email
Settings
Searching
SearchSubclassing
ToDosSupport
DAContactsBasedAccount
DAContactsAccount
DAExtensions
DelayedPerformWithNullSource
DAHexString
DALeastInfoURLExtension
DADAExtendedDescription
DATaskManager
DALocalDBHelper
DAPowerAssertionManager
_DAABLegacyContainerProvider
ASAccountActor
ASAccountActorMessages
DAAccountUpgrader
DAContainerProvider
DADataHandler
NotesSupport
_DAContactsContainerProvider
DAStoreSyncStatusUpdater
DALocalDBWatcher
DALocalDBWatcherDBInfo
DALocalDBWatcherCalConcernedParty
NSCopying
DARunLoopRegistry
DAWaiterWrapper
DALocalDBGateKeeper
_DAContactsAccountContactsProvider
DATransaction
DAAggDReporter
DAUserNotificationUtilities
DAUserNotificationInfo
DAiCalendarLogger
ICSLoggingDelegate
DAContactsAccountProvider
DATrustHandler
DAABLegacyAccount
DATrafficLogger
DAPriorityRequest
DAPriorityManager
DAContactsContainer
DABabysitter
DAActivity
_DAContactsAccountABLegacyProvider
sharedMonitor
unmonitorAccount:
shutdown
removeXpcActivity
dealloc
init
_refreshCredential
initWithDelegate:
resetStatusReport
persistentUUID
_setPersistentUUID:
ingestBackingAccountInfoProperties
monitorAccount:
isPropertyDirty:
identifier
_clearCachedCredentials
credential
performUsingAccountPersona:
accountType
isEqualToString:
esAccountSubclassWithBackingAccountInfo:
sharedInstance
daemonAppropriateAccountClassForACAccount:
initWithBackingAccountInfo:
useContactsFramework
contactStore
providerWithContactStore:
abDB
providerWithAddressBook:
accountIntPropertyForKey:
accountID
intValue
setAccountIntProperty:forKey:
daAccountVersion
setAccountProperty:forKey:
setDAAccountVersion:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
backingAccountInfo
parentAccount
setObject:forKeyedSubscript:
stringWithFormat:
displayAccount
accountDescription
publicDescription
setAccountDescription:
username
setUsername:
enabledDataclasses
countByEnumeratingWithState:objects:count:
isEnabledToSyncDataclass:
isEnabledForDataclass:
setEnabled:forDataclass:
enabledForDADataclass:
displayName
sharedBabysitter
giveAccountWithIDAnotherChance:
dataclassProperties
objectForKeyedSubscript:
boolValue
numberWithBool:
numberWithInt:
waiterID
accountWithIDShouldContinue:
statusReport
setSyncingAllowed:
protocolVersion
setProtocolVersion:
stateString
setObject:forKey:
count
objectForKey:
removeObjectForKey:
clientToken
length
da_newGUID
addClientToken:
password
accountBoolPropertyForKey:
sharedKeychain
migratePasswordForAccount:
setAccountBoolProperty:forKey:
identityPersist
passwordWithExpected:
setPassword:
initWithPassword:
setCredential:
setAuthenticated:
cal_personaIdentifier
sharedManager
currentPersona
copyCurrentPersonaContextWithError:
createPersonaContextForBackgroundProcessingWithPersonaUniqueString:
domain
code
restorePersonaWithSavedPersonaContext:
dataclassPropertyURLsByDataclass
URLWithString:
null
urlFromDataclassPropertiesForDataclass:
host
scheme
lowercaseString
port
integerValue
rangeOfString:
substringToIndex:
emailAddress
arrayWithObjects:count:
emailAddresses
caseInsensitiveCompare:
numberWithInteger:
DAAccountPrincipalPath
da_appendSlashIfNeeded
useSSL
principalPath
da_URLWithScheme:host:port:uri:
setUseSSL:
setHost:
setPort:
path
setPrincipalPath:
checkValidityOnAccountStore:withConsumer:inQueue:
setIsValidating:
takeValuesFromModifiedAccount:
removeFromCoreDAVLoggingDelegates
addToCoreDAVLoggingDelegates
account:isValid:validationError:
verifyCredentialsForAccount:saveWhenAuthorized:withHandler:
shouldDoInitialAutodiscovery
parentAccountIdentifier
shouldRemoveDBSyncDataOnAccountChange
sharedInstanceForAccountType:creatingClass:
changeTrackingID
abOpenDBWithClientIdentifier:
accountsProviderWithDBHelper:
fetchedAccountWithExternalIdentifier:
containerProviderWithDBHelper:
externalIdentifier
allContainersForAccountWithExternalIdentifier:
markForDeletion
updateSaveRequest:
addSaveRequest:
executeAllSaveRequests
abCloseDBAndSave:
calOpenDatabaseForAccountID:clientID:
calDatabaseForAccountID:
objectAtIndexedSubscript:
calCloseDatabaseForAccountID:save:
completelyIgnoreNotes
enableChangeLogging:
accountForAccountId:
deleteAccount:
save:
DAExtendedDescription
databaseIsCorrupt:
accountHasSignificantPropertyChangesWithChangeInfo:
_handleSignificantPropertyChanges:
removeDBSyncDataForAccountChange:
cleanupAccountFiles
credentialType
credentialItemForKey:
dictionaryWithObjects:forKeys:count:
onBehalfOfBundleIdentifier
oauthToken
monitorFoldersWithIDs:
_isIdentityManagedByProfile
setIdentityCertificatePersistentID:managedByProfile:
isAuthenticated
saveVerifiedAccount:error:
saveAccountPropertiesWithError:
accountWithIdentifier:
saveAccountProperties
credentialProtectionPolicy
_daKeychainAccessibilityForSecAccessibility:
user
da_stringByAddingPercentEscapesForUsername
da_urlBySettingUsername:
canSaveWithAccountProvider:
DAAccountSavePreflighted
leafAccountTypesToCheckForEquality
containsObject:
isEqualToAccount:
accountProperties
DAAccountIdentifiersToIgnoreForUniquenessCheck
leafAccountTypes
DAAccountDoNotSaveReason
exceptionsDict
da_hexString
mutableCopy
copyStorageSession
trustHandler
resetCertWarnings
setStatusReport:
setPersistentUUID:
setAccountType:
setDisplayName:
supportsAuthentication
refresh
isValidating
wasUserInitiated
isDelegateAccount
aa_isSuspended
keychainAccessibilityType
canAccessCredentialsWithAccessibility:
oldAccountProperties
oldUsername
description
removeAllObjects
reload
daAccountSubclassWithBackingAccountInfo:
shouldCreateAccountForBackingAccountInfo:
upgradeAccount
resetAccountID
syncStoreIdentifier
scheduleIdentifier
redactedDescription
setUser:
isDisabled
enabledForAnyDADataclasses:
setEnabled:forDADataclass:
enabledDataclassesBitmask
spinnerIdentifiers
accountPropertyForKey:
removeAccountPropertyForKey:
resumeMonitoringFoldersWithIDs:
suspendMonitoringFoldersWithIDs:
stopMonitoringFolderWithID:
setConsumer:forTask:
consumerForTask:
removeConsumerForTask:
clientTokenRequestedByServer
hostFromDataclassPropertiesForDataclass:
useSSLFromDataclassPropertiesForDataclass:
portFromDataclassPropertiesForDataclass:
usernameWithoutDomain
domainOnly
hostWithoutPath
setEmailAddress:
setEmailAddresses:
accountContainsEmailAddress:
preferredAddress
signingIdentityPersistentReference
setSigningIdentityPersistentReference:
encryptionIdentityPersistentReference
setEncryptionIdentityPersistentReference:
principalURL
setPrincipalURL:
checkValidityOnAccountStore:withConsumer:
saveModifiedPropertiesOnBackingAccount
discoverInitialPropertiesWithConsumer:
autodiscoverAccountConfigurationWithConsumer:
setShouldDoInitialAutodiscovery:
shouldAutodiscoverAccountProperties
accountDidChangeWithChangeInfo:
userAgentHeader
serverRoot
serverComplianceClasses
handleCertificateError:
additionalHeaderValues
customConnectionProperties
oauth2Token
oauthInfoProvider
tearDown
monitorFolderWithID:
stopMonitoringFoldersWithIDs:
stopMonitoringFolders
defaultContainerIdentifierForDADataclass:
removeClientCertificateData
updateExistingAccountProperties
addUsernameToURL:
preflightSaveWithAccountProvider:
exceptionsForDigest:
setExceptions:forDigest:
isChildAccount
shouldFailAllTasks
isActiveSyncAccount
isLDAPAccount
isCalDAVAccount
isCardDAVAccount
isCalDAVChildAccount
isHotmailAccount
isGoogleAccount
isSubscribedCalendarAccount
accountTypeIdentifier
shouldCancelTaskDueToOnPowerFetchMode
saveXpcActivity:
hasXpcActivity
incrementXpcActivityContinueCount
decrementXpcActivityContinueCount
saveFetchingAutomaticallyState:
getFetchingAutomaticallyState
shouldUseOpportunisticSockets
setShouldUseOpportunisticSockets:
setWasUserInitiated:
taskManager
setTrustHandler:
appIdsForPasswordPrompt
sourceApplicationBundleIdentifier
setSourceApplicationBundleIdentifier:
setDataclassPropertyURLsByDataclass:
pendingQueries
setPendingQueries:
pendingQueryQueue
setPendingQueryQueue:
lastQueryStartedTime
setLastQueryStartedTime:
.cxx_destruct
_backingAccountInfo
_hasInitted
_shouldUseOpportunisticSockets
_wasUserInitiated
_statusReport
_consumers
_storageSession
_clientToken
_taskManager
_xpcActivity
_continueCount
_isFetchingAutomatically
_shouldFailAllTasks
_isValidating
_trustHandler
_appIdsForPasswordPrompt
_sourceApplicationBundleIdentifier
_dataclassPropertyURLsByDataclass
_pendingQueries
_pendingQueryQueue
_lastQueryStartedTime
T@"NSMutableDictionary",&,N,V_dataclassPropertyURLsByDataclass
T@"DAStatusReport",&,N,V_statusReport
T@"DATrustHandler",&,N,V_trustHandler
TB,N,V_shouldUseOpportunisticSockets
TB,N,V_wasUserInitiated
T@"NSMutableArray",&,N,V_pendingQueries
T@"NSObject<OS_dispatch_queue>",&,N,V_pendingQueryQueue
T@"NSDate",&,N,V_lastQueryStartedTime
T@"NSString",R,N
Ti,N,SsetDAAccountVersion:
T@"NSString",R,C,N
T@"NSString",C,N
Tq,N
TB,N
Tq,R,N
TB,R,N
T@"ACAccount",R,N,V_backingAccountInfo
T@"DATaskManager",R,N,V_taskManager
Ti,R,N
T@"NSData",&,N
T@"NSURL",C,N
T@"NSArray",C,N
T@"NSArray",R,N,V_appIdsForPasswordPrompt
TB,R,N,V_shouldFailAllTasks
T@"NSData",R,C,N
TB,N,V_isValidating
T@"NSSet",R,N
T@"NSString",C,N,V_sourceApplicationBundleIdentifier
handleTrustChallenge:forAccount:
handleTrustChallenge:forAccount:completionHandler:
handleTrustChallenge:
handleTrustChallenge:completionHandler:
getAppleIDSession
sharedPowerAssertionManager
dropPowerAssertionsForGroupIdentifier:
reattainPowerAssertionsForGroupIdentifier:
removePersistentCredentials
renewCredentialsForAccount:options:completion:
openAuthenticationURL:forAccount:shouldConfirm:completion:
_webLoginRequestedAtURL:reasonString:inQueue:completionBlock:
userInfo
CDVObjectForKeyCaseInsensitive:
CDVIsSafeRedirectForRequestURL:
dropAssertionsAndRenewCredentialsInQueue:withHandler:
setWithObjects:
oneshotListOfAccountIDs
reacquireClientRestrictions:
localizedIdenticalAccountFailureMessage
localizedInvalidPasswordMessage
webLoginRequestedAtURL:reasonString:inQueue:completionBlock:
handleValidationError:completion:
_leafAccountTypes
initWithChangeType:accountIdentifier:accountTypeIdentifier:oldAccountProperties:username:password:oldUsername:oldPassword:modifiedDataClasses:clientName:
accountHasSignificantPropertyChangesFromOldAccountInfo:
accountDidChangeFromOldAccountInfo:
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
calEventChangeId
setCalEventChangeId:
calRecurrenceChangeId
setCalRecurrenceChangeId:
calAlarmChangeId
setCalAlarmChangeId:
calAttendeeChangeId
setCalAttendeeChangeId:
calAttachmentChangeId
setCalAttachmentChangeId:
highestSequenceNumber
setHighestSequenceNumber:
_calEventChangeId
_calRecurrenceChangeId
_calAlarmChangeId
_calAttendeeChangeId
_calAttachmentChangeId
_highestSequenceNumber
Ti,N,V_calEventChangeId
Ti,N,V_calRecurrenceChangeId
Ti,N,V_calAlarmChangeId
Ti,N,V_calAttendeeChangeId
Ti,N,V_calAttachmentChangeId
Ti,N,V_highestSequenceNumber
errorWithDomain:code:userInfo:
downloadFinishedError:
calendarAvailabilityRequestFinishedWithError:
grantedDelegatesListRequestFinishedWithResults:error:
updateGrantedDelegatePermissionFinishedWithError:
calendarDirectorySearchFinishedWithError:exceededResultLimit:
groupExpansionFinishedWithResults:error:
shareResponseFinishedWithError:
defaultEventsFolder
eventsFolders
synchronizeEventsFolder:previousTag:actions:highestIdContext:isInitialUberSync:isResyncAfterConnectionFailed:moreLocalChangesAvailable:consumer:
sendEmailsForCalEvents:consumer:
beginDownloadingAttachmentWithUUID:consumer:
cancelDownloadingInstance:error:
requestCalendarAvailabilityForStartDate:endDate:ignoredEventID:addresses:consumer:
cancelCalendarAvailabilityRequestWithID:
requestGrantedDelegatesListWithConsumer:
cancelGrantedDelegatesListRequestWithID:
updateGrantedDelegatePermission:consumer:
cancelUpdateGrantedDelegatePermissionRequestWithID:
performCalendarDirectorySearchForTerms:recordTypes:resultLimit:consumer:
performGroupExpansionForPrincipalPath:consumer:
cancelCalendarDirectorySearchWithID:
respondToShareRequestForCalendar:withResponse:consumer:
reportShareRequestAsJunkForCalendar:consumer:
cancelShareResponseInstance:error:
fetchOfficeHoursWithConsumer:error:
setOfficeHours:withConsumer:error:
cancelOfficeHoursRequestWithID:
transactionCount
setTransactionCount:
transactions
setTransactions:
addObject:
didFinishAllXPCTransactions
removeObject:
sharedTransactionMonitor
incrementTransactionCountForTransaction:
decrementTransactionCountForTransaction:
transactionMonitorDelegate
setTransactionMonitorDelegate:
_transactionCount
_transactions
_transactionMonitorDelegate
Ti,N,V_transactionCount
T@"NSMutableArray",&,N,V_transactions
T@"<DATransactionMonitorDelegate>",W,N,V_transactionMonitorDelegate
performSelector:withObject:
da_performSelectorThatDoesntAffectRetainCount:withObject:
abPersonChangeId
setAbPersonChangeId:
abGroupChangeId
setAbGroupChangeId:
isChangeHistoryTruncated
setChangeHistoryTruncated:
latestSequenceNumber
setLatestSequenceNumber:
cnChangeAnchor
setCnChangeAnchor:
_changeHistoryTruncated
_abPersonChangeId
_abGroupChangeId
_latestSequenceNumber
_cnChangeAnchor
Ti,N,V_abPersonChangeId
Ti,N,V_abGroupChangeId
changeHistoryTruncated
TB,N,GisChangeHistoryTruncated,V_changeHistoryTruncated
TQ,N,V_latestSequenceNumber
T@"CNChangeHistoryAnchor",&,N,V_cnChangeAnchor
defaultContactsFolder
contactsFolders
synchronizeContactsFolder:previousTag:previousSyncToken:actions:highestIdContext:isInitialUberSync:isResyncAfterConnectionFailed:previousTagIsSuspect:moreLocalChangesAvailable:consumer:
folderID
parentFolderID
mailboxID
parentMailboxID
inboxFolder
sentItemsFolder
deletedItemsFolder
draftsFolder
reattemptInvitationLinkageForMetaData:inFolderWithId:
unactionableICSRepresentationForMetaData:inFolderWithId:outSummary:
_canonicalizePath:
_mainDatabasePath
_pathForAccountID:createdDatabase:
_openDatabaseForPath:clientID:createdDatabaseToConsume:
initWithDirectoryURL:
setOptions:
setDataContainerProvider:
allValues
_cachedDatabaseForAccountID:path:
_cachedDatabaseForAuxDatabaseRef:path:
_saveDatabase:path:fushCaches:
saveDatabaseForAccountID:flushCaches:
_closeDatabase:path:
saveDatabaseForAuxDatabaseRef:flushCaches:
isEqual:
fileURLWithPath:
_registerForCalendarYieldNotificationsForDB:
countForObject:
lastSavedCalSequenceNumberForDatabaseInContainer:
sharedGateKeeper
claimedOwnershipOfDataclasses:
setLastSavedCalSequenceNumber:forDatabaseInContainer:
defaultCenter
postNotificationName:object:
bumpDataclassesToUIPriority:
removeSlashIfNeeded
setMainDatabasePath:containerProvider:
mainDatabasePath
containerProvider
initWithDatabaseInitOptions:
openDatabaseForAccountID:clientID:
openDatabaseForAuxDatabaseRef:clientID:
allOpenDatabases
databaseForAccountID:
databaseForAuxDatabaseRef:
closeDatabaseForAccountID:save:
closeDatabaseForAuxDatabaseRef:save:
watcher
setWatcher:
_queue
_initOptions
_cachedMainDatabasePath
_containerPathsByAccountID
_containerPathsByAuxDatabaseID
_databasesByContainerPath
_connectionCountsByPath
_watcher
T@"DALocalDBWatcher",&,N,V_watcher
_findPrivateFrameworks
setAccountClassName:
setClientAccountClassName:
setDaemonAccountClassName:
setAgentClassName:
stringByAppendingPathComponent:
stringByAppendingPathExtension:
setAcAccountTypeToAccountFrameworkSubpath:
setAcAccountTypeToAccountDaemonBundleSubpath:
setAcAccountTypeToClassNames:
setAcParentAccountTypeToChildAccountTypes:
defaultManager
dictionaryWithContentsOfFile:
_addAccountInfo:forFrameworkNamed:
contentsOfDirectoryAtPath:error:
initWithPath:
infoDictionary
bundleForClass:
privateFrameworksPath
bundleWithPath:
load
_loadFrameworkAtSubpath:
loadFrameworkForACAccountType:
accountClassName
clientAccountClassName
daemonAccountClassName
loadDaemonBundleForACAccountType:
agentClassName
daemonAccountClassForACAccount:
clientAccountClassForACAccount:
accountClassForACAccount:
agentClassForACAccount:
acAccountTypeToAccountFrameworkSubpath
acAccountTypeToAccountDaemonBundleSubpath
acAccountTypeToClassNames
acParentAccountTypeToChildAccountTypes
_acAccountTypeToAccountFrameworkSubpath
_acAccountTypeToAccountDaemonBundleSubpath
_acAccountTypeToClassNames
_acParentAccountTypeToChildAccountTypes
T@"NSMutableDictionary",&,N,V_acAccountTypeToAccountFrameworkSubpath
T@"NSMutableDictionary",&,N,V_acAccountTypeToAccountDaemonBundleSubpath
T@"NSMutableDictionary",&,N,V_acAccountTypeToClassNames
T@"NSMutableDictionary",&,N,V_acParentAccountTypeToChildAccountTypes
_accountClassName
_clientAccountClassName
_daemonAccountClassName
_agentClassName
T@"NSString",&,N,V_accountClassName
T@"NSString",&,N,V_clientAccountClassName
T@"NSString",&,N,V_daemonAccountClassName
T@"NSString",&,N,V_agentClassName
itemChangeType
stringForItemChangeType:
changedItem
serverId
changeId
allowsKeyedCoding
decodeIntForKey:
setItemChangeType:
decodeObjectOfClasses:forKey:
_setChangedItem:
decodeObjectOfClass:forKey:
setServerId:
setInstanceId:
setChangeId:
encodeInt:forKey:
encodeObject:forKey:
instanceId
hash
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
initWithItemChangeType:changedItem:serverId:
initWithItemChangeType:changedItem:serverId:instanceId:
forwardedAttendees
setForwardedAttendees:
forwardedAttendeeUUIDs
setForwardedAttendeeUUIDs:
ignoresGuardianRestrictions
setIgnoresGuardianRestrictions:
_ignoresGuardianRestrictions
_changeId
_itemChangeType
_serverId
_instanceId
_changedItem
_forwardedAttendees
_forwardedAttendeeUUIDs
TQ,N,V_itemChangeType
T@,&,N,V_serverId
T@,&,N,V_instanceId
T@,&,N,S_setChangedItem:,V_changedItem
Ti,N,V_changeId
T@,&,N,V_forwardedAttendees
T@,&,N,V_forwardedAttendeeUUIDs
TB,N,V_ignoresGuardianRestrictions
setSourceContainerId:
setSourceServerId:
setDestinationContainerId:
sourceContainerId
sourceServerId
destinationContainerId
initWithItemChangeType:changedItem:sourceContainerId:sourceServerId:destinationContainerId:
_sourceContainerId
_sourceServerId
_destinationContainerId
T@"NSString",&,N,V_sourceContainerId
T@"NSString",&,N,V_sourceServerId
T@"NSString",&,N,V_destinationContainerId
value
propertyNamespace
propertyName
initWithChangedItem:propertyName:value:propertyNamespace:serverId:
_propertyName
_value
_propertyNamespace
T@"NSString",R,N,V_propertyName
T@"NSString",R,N,V_value
T@"NSString",R,N,V_propertyNamespace
setStatus:
status
initWithItemChangeType:changedItem:serverId:status:
_status
Tq,N,V_status
reportActiveExchangeOAuthAccountsCount
accountTypeWithAccountTypeIdentifier:
accountsWithAccountType:
startDailyAnalyticsReporter
endDailyAnalyticsReporter
source
type
stringValue
exceptionWithName:reason:userInfo:
class
self
performSelector:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
isContact
isGroup
isContainer
isAccount
name
setName:
isLocal
setType:
setExternalIdentifier:
cTag
setCTag:
syncTag
setSyncTag:
syncData
setSyncData:
constraintsPath
setConstraintsPath:
meContactIdentifier
setMeContactIdentifier:
accountIdentifier
setAccountIdentifier:
isContentReadonly
setContentReadonly:
arePropertiesReadonly
setArePropertiesReadonly:
isSearchContainer
markAsDefault
asSource
asContainer
isGuardianRestricted
setGuardianRestricted:
isGuardianStateDirty
setGuardianStateDirty:
guardianRestricted
TB,N,GisGuardianRestricted
guardianStateDirty
TB,N,GisGuardianStateDirty
initWithABSource:
_source
T^v,R,N,V_source
folderName
dataclass
isDefault
stringByAppendingFormat:
setFolderName:
setFolderID:
setParentFolderID:
setDataclass:
setIsDefault:
hasRemoteChanges
setHasRemoteChanges:
_isDefault
_hasRemoteChanges
_folderName
_folderID
_parentFolderID
_dataclass
TB,N,V_hasRemoteChanges
T@"NSString",C,N,V_folderName
T@"NSString",C,N,V_folderID
T@"NSString",C,N,V_parentFolderID
Tq,N,V_dataclass
TB,N,V_isDefault
weakObjectsHashTable
setAccounts:
setAccountsQueue:
accountsQueue
accounts
allObjects
monitoredAccounts
_accounts
_accountsQueue
T@"NSHashTable",&,N,V_accounts
T@"NSObject<OS_dispatch_queue>",&,N,V_accountsQueue
stringByAppendingString:
_DACopyMutableQueryForAccountWithPersistentUUID:
_secAccessibilityForDAKeychainAccessibility:
initWithData:encoding:
_DACopyMutableAttributesForAccountWithPersistentUUID:accessibility:
sharedCredentialStorage
allCredentials
copy
persistence
removeCredential:forProtectionSpace:
enumerateKeysAndObjectsUsingBlock:
removePasswordForAccount:withPersistentUUID:
dataUsingEncoding:
passwordForAccountWithPersistentUUID:expectedAccessibility:shouldSetAccessibility:passwordExpected:
guessPasswordForURL:
removeKeychainInformationsForURL:
saveVerifiedAccount:withCompletionHandler:
setPassword:forAccount:withPersistentUUID:withAccessibility:
stringByURLQuoting
query
stringByDeletingLastPathComponent
URLWithUsername:withPassword:
URLWithoutUsername
URLWithUsername:
absoluteString
hasPrefix:
insertString:atIndex:
da_URLWithDirtyString:
URLByRemovingLastPathComponent
da_classicPortForScheme:
loadKeychainInformationsForURL:
saveKeychainInformationsForURL:andPassword:withAccessibility:
saveAccount:withCompletionHandler:
removeAccount:withDeleteSync:completion:
addAccount:withCompletionHandler:
updateAccount:withCompletionHandler:
removeAccount:completion:
initWithAccountStore:
_store
changeType
_handleAccountAddOrModify:withChangeInfo:inStore:accountUpdater:
_handleCalDAVAccountModifiedByDataAccess:withChangeInfo:inStore:accountUpdater:
_handleAccountDelete:withChangeInfo:inStore:
modifiedDataClasses
_cleanupStoreForDisabledAccount:inStore:
_setupStoreForNewAccount:
_sanityCheckChildSubCalAccountsWithParent:inStore:accountUpdater:
_sanityCheckCalDAVAccount:accountChangeInfo:
_sanityCheckEnabledDataclassesOnExchangeAccountInfo:
_sanityCheckSubscribedCalendarAccountInfo:
_handleChangeToSubscribedCalendar:withChangeInfo:inStore:accountUpdater:
_supportedChildAccountTypesForParentAccountType:
_sanityCheckChildAccountOfType:withParent:accountChangeInfo:inStore:updater:
removeStoreForDeletedAccountWithIdentifier:inDatabase:mainDatabase:accountStore:
_performBlockWithGenericClientDBForAccount:block:
childAccounts
removeStoreForAccount:withChildren:inDatabase:mainDatabase:accountStore:
setUpCalStoreForParentAccount:withChildren:inDatabase:
calOpenDatabaseAsGenericClientForAccountID:
accountTypeWithAccountTypeIdentifier:error:
CalDAVSubscribedCalendarsKey
allKeys
setWithArray:
dictionary
calDAVURLPath
array
_accountTypeWithIdentifier:inStore:
initWithAccountType:
setParentAccount:
setCalDAVURLPath:
shouldRemoveAlarms
SubCalFilterAlarmsKey
setShouldRemoveAlarms:
subscriptionURL
SubCalSubscriptionURLKey
substringFromIndex:
SubCalTitleKey
_updateSubscribedCalendarAccountProperties:
setVersionForNewAccount
shouldRemoveAttachments
setShouldRemoveAttachments:
refreshInterval
setRefreshInterval:
useFTP
setUseFTP:
calendarExternalId
T@"NSURL",R,N
Td,N
_updateCalendarFromAccount:
initWithEKOptions:
_findSubscribedCalendarForAccount:inEventStore:
subcalURL
setSubcalURL:
stripAlarms
setStripAlarms:
stripAttachments
setStripAttachments:
externalID
setExternalID:
saveCalendar:commit:error:
calendarsForEntityType:
subcalAccountID
shouldUseCalendarHomeSyncReport
calendarsDataclassModified
propertiesForDataclass:
_pickAccountToKeepWithAccount:andAccount:
setAuthenticationType:
_sanityCheckChildDAVAccount:withParent:accountChangeInfo:
creationDate
compare:
handleAccountWillChange:withChangeInfo:store:accountUpdater:
handleAccountDidChange:withChangeInfo:store:
requestType
setRequestType:
bodyFormat
setBodyFormat:
messageID
setMessageID:
_requestType
_bodyFormat
_messageID
Ti,N,V_requestType
Ti,N,V_bodyFormat
T@"NSString",C,N,V_messageID
setOnFlags:
setOffFlags:
onFlags
offFlags
initWithFormat:
initRequestWithSetFlags:unsetFlags:message:
_onFlags
_offFlags
TQ,N,V_onFlags
TQ,N,V_offFlags
setMaxSize:
maxSize
initRequestForBodyFormat:withBodySizeLimit:
_maxSize
Ti,N,V_maxSize
initRequestWithMessageID:
initRequestForBodyFormat:withMessageID:withBodySizeLimit:
setLongID:
setServerID:
longID
initRequestForBodyFormat:withLongID:withBodySizeLimit:
initRequestForBodyFormat:withFolderID:withServerID:withLongID:withBodySizeLimit:
serverID
_longID
_serverID
T@"NSString",C,N,V_longID
T@"NSString",C,N,V_serverID
setMessage:
setFromFolder:
setToFolder:
message
fromFolder
toFolder
initMoveRequestWithMessage:fromFolder:toFolder:
context
setContext:
_message
_fromFolder
_toFolder
_context
T@"NSString",C,N,V_message
T@"NSString",C,N,V_fromFolder
T@"NSString",C,N,V_toFolder
T@,&,N,V_context
setAttachmentName:
attachmentName
initWithAttachmentName:andMessageServerID:
_attachmentName
T@"NSString",C,N,V_attachmentName
setSend:
subject
initWithRequestType:message:send:
send
_send
T@"DAMailMessage",&,N,V_message
TB,N,V_send
setSourceID:
setDestID:
sourceID
destID
origRequest
initWithStatus:sourceID:destID:
setOrigRequest:
_sourceID
_destID
_origRequest
Ti,N,V_status
T@"NSString",C,N,V_sourceID
T@"NSString",C,N,V_destID
T@"DAMessageMoveRequest",&,N,V_origRequest
setRetrieveCertificates:
setRetrieveAvailablilty:
setStartTime:
setEndTime:
initWithEmailAddresses:
initWithEmailAddresses:retrieveCertificates:retrieveAvailability:withStartTime:endTime:
retrieveCertificates
retrieveAvailablilty
startTime
endTime
_retrieveCertificates
_retrieveAvailablilty
_emailAddresses
_startTime
_endTime
T@"NSArray",&,N,V_emailAddresses
TB,N,V_retrieveCertificates
TB,N,V_retrieveAvailablilty
T@"NSDate",&,N,V_startTime
T@"NSDate",&,N,V_endTime
mResolvedEmailToX509Certs
appendString:
certificatesStatus
appendFormat:
mergedFreeBusy
availabilityStatus
setMResolvedEmailToX509Certs:
resolvedEmailToX509Certs
addCert:forEmailAddress:
setCertificatesStatus:
setAvailabilityStatus:
setMergedFreeBusy:
_certificatesStatus
_availabilityStatus
_mergedFreeBusy
_mResolvedEmailToX509Certs
Tq,N,V_certificatesStatus
T@"NSMutableDictionary",&,N,V_mResolvedEmailToX509Certs
Tq,N,V_availabilityStatus
T@"NSString",&,N,V_mergedFreeBusy
T@"NSDictionary",R,N
remoteID
from
setAddressListForSender:
date
systemTimeZone
dateWithCalendarFormat:timeZone:
setHeader:forKey:
setAddressListForTo:
setAddressListForCc:
setAddressListForBcc:
replyTo
setAddressList:forKey:
encodedHeaders
appendData:
body
displayTo
importance
read
flagged
bodyType
bodySize
bodyTruncated
messageClass
attachments
meetingRequestUUID
meetingRequestMetaData
meetingRequestIsActionable
threadTopic
conversationId
conversationIndex
lastVerb
sender
isDraft
clientID
instanceID
preview
readIsSet
flaggedIsSet
verbIsSet
smimeType
rfc822Data
settingsRequestFinishedWithResults:status:error:
updateOofSettingsWithParams:consumer:
retrieveOofSettingsForConsumer:
isOofSupported
dateWithTimeIntervalSinceNow:
getPendingQueryQueue
consumer
removeObjectAtIndex:
_reallyPerformSearchQuery:
_dequeueQuery
performSelector:withObject:afterDelay:
timeIntervalSinceNow
objectAtIndex:
_reallyCancelSearchQuery:
_reallyCancelPendingSearchQuery:
arrayWithArray:
_reallyCancelAllSearchQueries
_reallySearchQueriesRunning
performSearchQuery:
cancelSearchQuery:
cancelAllSearchQueries
searchQueriesRunning
supportsMailboxSearch
supportsEmailFlagging
searchQuery:finishedWithError:
defaultToDosFolder
toDosFolders
synchronizeToDosFolder:previousTag:actions:highestIdContext:isInitialUberSync:isResyncAfterConnectionFailed:moreLocalChangesAvailable:consumer:
toDosNumberOfPastDaysToSync
setToDosNumberOfPastDaysToSync:
account
iOSLegacyIdentifier
externalIdentifierString
markedForDeletion
removeAccount:
addAccount:
setMarkedForDeletion:
legacyIdentifier
initWithAccount:
_markedForDeletion
_account
T@"CNAccount",R,N,V_account
TB,N,V_markedForDeletion
sharedConnection
registerForInterrogationWithBlock:
accountWithIdentifier:completion:
accountIdentifiersEnabledForDataclasses:withAccountTypeIdentifiers:completion:
accountsWithAccountType:completion:
accountTypeWithIdentifier:completion:
_daAccountsWithAccountTypeIdentifiers:enabledForDADataclasses:filterOnDataclasses:withCompletion:
da_loadDAAccountsWithCompletion:
da_loadDAAccountsWithAccountTypeIdentifiers:withCompletion:
accountsWithAccountTypeIdentifiers:error:
da_loadDAAccountsWithAccountTypeIdentifiers:enabledForDADataclasses:withCompletion:
da_accounts
da_accountsWithAccountTypeIdentifiers:
da_accountsWithAccountTypeIdentifiers:outError:
da_accountsWithAccountTypeIdentifiers:enabledForDADataclasses:
performSelector:withObject:afterDelay:inModes:
da_addNullRunLoopSourceAndPerformSelector:withObject:afterDelay:inModes:
isAppleInternalInstall
currentRunLoop
currentMode
bytes
initWithBytesNoCopy:length:encoding:freeWhenDone:
replaceOccurrencesOfString:withString:options:range:
uppercaseString
characterSetWithCharactersInString:
characterAtIndex:
characterIsMember:
appendBytes:length:
da_dataWithHexString:stringIsUppercase:
da_lowercaseHexStringWithoutSpaces
da_uppercaseHexStringWithoutSpaces
da_dataWithHexString:
processInfo
processName
hasSuffix:
rangeOfString:options:
UUID
UUIDString
da_stringByRemovingPercentEscapesForUsername
da_removeSlashIfNeeded
da_stringByURLEscapingPathComponent
da_hasPrefixCaseInsensitive:
da_trimWhiteSpace
da_new64ByteGUID
stringWithString:
objectEnumerator
nextObject
DACompactDescription
relativePath
da_rawPath
da_urlBySettingScheme:keepUsername:
da_urlBySettingHost:keepUsername:
da_urlBySettingPort:keepUsername:
da_urlBySettingPath:keepUsername:
whitespaceAndNewlineCharacterSet
stringByTrimmingCharactersInSet:
da_URLWithScheme:host:user:port:uri:
da_isEqualToDAVURL:
da_urlBySettingPassword:
da_urlByRemovingUsername
da_urlForLogging
da_urlBySettingScheme:
da_urlBySettingHost:
da_urlBySettingPort:
da_urlBySettingPath:
da_pathWithoutTrailingRemovingSlash
absoluteURL
CDVRawPath
da_leastInfoStringRepresentationRelativeToParentURL:
URLWithString:relativeToURL:
da_absoluteURLForChildLeastInfoRepresentationRelativeToParentURL:
_CFURLRequest
_initWithCFURLRequest:
DARequestByApplyingStorageSession:
standardUserDefaults
boolForKey:
DAMergeOverrideDictionary:
DAObjectForKeyCaseInsensitive:
fileSystemRepresentation
writeToFile:atomically:
queuedExclusiveTasks
addObjectsFromArray:
activeExclusiveTask
independentTasks
mQueuedTasks
activeQueuedTask
modalHeldActiveQueuedTask
setAccount:
setState:
invalidate
_populateVersionDescriptions
_version
submitExclusiveTask:toFrontOfQueue:
setTaskManager:
state
cancelTaskWithReason:underlyingError:
xpcTransactionTimer
setXpcTransactionTimer:
transactionId
setActiveExclusiveTask:
insertObject:atIndex:
_schedulePerformTask:
_makeStateTransition
_requestCancelTasksWithReason:
taskManagerDidAddTask:
heldIndependentTasks
setActiveQueuedTask:
cancelTask:withUnderlyingError:
allTasks
cancelTask:
managerIdleTimer
setManagerIdleTimer:
userInitiatedSyncTimer
setUserInitiatedSyncTimer:
_cancelTasksWithReason:
modalHeldIndependentTasks
activeModalTask
queuedModalTasks
shouldForceNetworking
_taskForcesNetworking:
_taskInQueueForcesNetworkConnection:
taskManagerWillRemoveTask:
_releasePowerAssertionForTask:
setModalHeldActiveQueuedTask:
_performTask:
cancelPreviousPerformRequestsWithTarget:selector:object:
_startModal:
setActiveModalTask:
_reactivateHeldTasks
_scheduleStartModal:
_hasTasksForcingNetworkConnection
_useOpportunisticSocketsAgain
initWithFireDate:interval:target:selector:userInfo:repeats:
addTimer:forMode:
_hasTasksIndicatingARunningSync
_clearUserInitiatedSyncTimer
_endXpcTransaction
isShutdown
cancelTasksDueToOnPowerMode
_retainPowerAssertionForTask:
performTask
requestCancelTaskWithReason:
startModal
lastObject
_scheduleSelector:withArgument:
cancelPreviousPerformRequestsWithTarget:
shouldHoldPowerAssertion
powerAssertionGroupID
retainPowerAssertion:withGroupIdentifier:
releasePowerAssertion:
queuedTasks
_useFakeDescriptions
deviceType
userAgent
server
OAuth2Token
accountPersistentUUID
submitExclusiveTask:
submitIndependentTask:
submitQueuedTask:
cancelAllTasks
_logSyncEnd
taskDidFinish:
taskRequestModal:
taskEndModal:
taskIsModal:
setPowerAssertionGroupID:
setQueuedExclusiveTasks:
setIndependentTasks:
setHeldIndependentTasks:
setModalHeldIndependentTasks:
setMQueuedTasks:
setQueuedModalTasks:
_transaction
_daActivity
_state
_activeModalTask
_activeQueuedTask
_powerAssertionGroupID
_queuedExclusiveTasks
_activeExclusiveTask
_independentTasks
_heldIndependentTasks
_modalHeldIndependentTasks
_mQueuedTasks
_modalHeldActiveQueuedTask
_queuedModalTasks
_managerIdleTimer
_userInitiatedSyncTimer
_xpcTransactionTimer
T@"NSMutableArray",&,N,V_queuedExclusiveTasks
T@"<DATask>",&,N,V_activeExclusiveTask
T@"NSMutableSet",&,N,V_independentTasks
T@"NSMutableSet",&,N,V_heldIndependentTasks
T@"NSMutableSet",&,N,V_modalHeldIndependentTasks
T@"NSMutableArray",&,N,V_mQueuedTasks
T@"<DATask>",&,N,V_modalHeldActiveQueuedTask
T@"<DATask>",&,N,V_activeQueuedTask
T@"NSMutableArray",&,N,V_queuedModalTasks
T@"<DATask>",&,N,V_activeModalTask
Ti,N,V_state
T@"NSTimer",&,N,V_managerIdleTimer
T@"NSTimer",&,N,V_userInitiatedSyncTimer
T@"NSTimer",&,N,V_xpcTransactionTimer
T@"DAAccount",W,N,V_account
T@"NSArray",R,N
T@"NSString",C,N,V_powerAssertionGroupID
sharedDBWatcher
os_log
callStackSymbols
abDBThrowOnNil:
executeSaveRequest:error:
useContacts
_registerForAddressBookYieldNotifications
setClientIdentifier:
_abOpenDBWithClientIdentifier:
abSaveDB
noteSaveDB
noteCalDBDirChanged
abSetTestABDBDir:
abTestABDBDir
calSetMainDatabasePath:containerProvider:
calMainDatabasePath
calContainerProvider
T@"NSObject<OS_os_log>",R,N
initWithContactsFamilyDelegateAltDSID:familyDelegateACAccountID:
abChangeTrackingID
removeDelegateDatabasesNotMatchingAltDSIDs:
abOpenDBAsGenericClient
abProcessAddedRecords
abProcessAddedImages
abValidateDefaultSource
abConstraintPlistPath
abDefaultAccountInfoSuitableForLogging
calDatabaseForAuxDatabaseRef:
calOpenDatabaseForAuxDatabaseRef:clientID:
calOpenDatabaseAsGenericClientForAuxDatabaseRef:
calSaveDatabaseForAccountID:
calSaveDatabaseAndFlushCachesForAccountID:
calSaveDatabaseForAuxDatabaseRef:
calCloseDatabaseForAuxDatabaseRef:save:
noteDB
noteOpenDB
noteCloseDBAndSave:
noteConnectionCount
setAbDB:
familyDelegateAltDSID
setFamilyDelegateAltDSID:
familyDelegateACAccountID
setFamilyDelegateACAccountID:
saveRequests
setSaveRequests:
abConnectionCount
setAbConnectionCount:
setContactStore:
calDBHelper
setCalDBHelper:
clientIdentifier
setNoteDB:
setNoteConnectionCount:
calUnitTestCallbackBlock
setCalUnitTestCallbackBlock:
_abDBQueue
_calDBQueue
_noteDBQueue
_abConnectionCount
_noteConnectionCount
_abDB
_familyDelegateAltDSID
_familyDelegateACAccountID
_saveRequests
_contactStore
_calDBHelper
_clientIdentifier
_noteDB
_calUnitTestCallbackBlock
T^v,N,V_abDB
T@"NSString",&,N,V_familyDelegateAltDSID
T@"NSString",&,N,V_familyDelegateACAccountID
T@"NSMutableArray",&,N,V_saveRequests
Ti,N,V_abConnectionCount
T@"CNContactStore",&,N,V_contactStore
T@"DACalDBHelper",&,N,V_calDBHelper
T@"NSString",&,N,V_clientIdentifier
T@"NoteContext",&,N,V_noteDB
Ti,N,V_noteConnectionCount
T@?,C,N,V_calUnitTestCallbackBlock
setContexts:
setGroupIdentifierToContexts:
setContextToGroupIdentifier:
setHeldAsideContexts:
setHeldAsideGroupIdentifiers:
setContextToPowerAssertionRef:
contexts
heldAsideContexts
heldAsideGroupIdentifiers
groupIdentifierToContexts
contextToGroupIdentifier
_retainAssertionForContext:
_releaseAssertionForContext:
contextToPowerAssertionRef
vendDaemons:
powerAssertionRetainCount:
_contexts
_groupIdentifierToContexts
_contextToGroupIdentifier
_heldAsideGroupIdentifiers
_heldAsideContexts
_contextToPowerAssertionRef
T@"NSCountedSet",&,N,V_contexts
T@"NSMapTable",&,N,V_groupIdentifierToContexts
T@"NSMapTable",&,N,V_contextToGroupIdentifier
T@"NSMutableSet",&,N,V_heldAsideGroupIdentifiers
T@"NSCountedSet",&,N,V_heldAsideContexts
T@"NSMapTable",&,N,V_contextToPowerAssertionRef
addressBook
initWithAddressBook:
containerWithExternalIdentifier:forAccountWithExternalIdentifier:
allContainers
createNewContainerWithType:name:externalIdentifier:constraintsPath:syncData:contentReadonly:propertiesReadonly:forAccount:
setDefaultContainer:withLocalDBHelper:onlyIfNotSet:
mergeAllRecordsIntoContainer:shouldInsertChangeHistoryRecords:
setLastSyncDateForContainer:
_addressBook
T^v,R,N,V_addressBook
performMailboxRequest:mailbox:previousTag:clientWinsOnSyncConflict:isUserRequested:consumer:
performMailboxRequests:mailbox:previousTag:clientWinsOnSyncConflict:isUserRequested:consumer:
initWithDAAccount:
cancelTaskWithID:
startup
mailboxes
supportsConversations
supportsDraftFolderSync
supportsSmartForwardReply
supportsUniqueServerId
mailNumberOfPastDaysToSync
setMailNumberOfPastDaysToSync:
generatesBulletins
setGeneratesBulletins:
customSignature
setCustomSignature:
monitorFoldersForUpdates:
monitorFoldersForUpdates:persistent:
stopMonitoringFoldersForUpdates:
stopMonitoringAllFolders
folderIDsThatExternalClientsCareAboutWithTag:
folderIDsThatExternalClientsCareAboutForDataclasses:withTag:
setFolderIdsThatExternalClientsCareAboutAdded:deleted:foldersTag:
sendMessageWithRFC822Data:messageID:outgoingMessageType:originalMessageFolderID:originalMessageItemID:originalMessageLongID:originalAccountID:useSmartTasksIfPossible:isUserRequested:consumer:context:
sendSmartMessageWithRFC822Data:messageID:outgoingMessageType:originalMessageFolderID:originalMessageItemID:originalMessageLongID:originalAccountID:replaceOriginalMime:isUserRequested:consumer:context:
performMailboxRequest:mailbox:previousTag:isUserRequested:consumer:
performMailboxRequests:mailbox:previousTag:isUserRequested:consumer:
performMoveRequests:consumer:
performFetchAttachmentRequest:consumer:
performFetchMessageSearchResultRequests:consumer:
performResolveRecipientsRequest:consumer:
performFolderChange:isUserRequested:
_newASPolicyKeyNotification:
_daemonDiedNotification:
_folderUpdatedNotification:
_folderHierarchyChanged
_foldersThatExternalClientsCareAboutChanged
_accountPasswordChanged
foldersTag
authenticationType
sortedArrayUsingComparator:
_moveExchangeCredentialsToAppleAccessGroup
_updateFacebookAccountAuthenticationTypes
_upgradeDAAccounts
_writeDeviceSpecificID
_notifyDaHolidaySubCalAccount
upgradeAccounts:
initWithContactStore:
newDataHandlerForDataclass:container:changeTrackingID:
initWithContainer:changeTrackingID:
setContainer:
getIdFromLocalObject:
copyLocalObjectFromId:
saveContainer
copyOfAllLocalObjectsInContainer
drainContainer
wipeServerIds
drainSuperfluousChanges
openDB
closeDBAndSave:
getDAObjectWithLocalItem:serverId:account:
getDAExceptionObjectWithLocalItem:originalEvent:account:
container
setChangeTrackingID:
_container
_changeTrackingID
T@"NSString",C,N,V_changeTrackingID
T^v,N,V_container
defaultNotesFolder
notesFolders
synchronizeNotesFolder:noteContext:previousTag:actions:changeSet:notesToDeleteAfterSync:isInitialUberSync:isResyncAfterConnectionFailed:moreLocalChangesAvailable:consumer:
predicateForAccountWithExternalIdentifier:
accountsMatchingPredicate:error:
firstObject
predicateForContainersInAccountWithIdentifier:includingDisabledContainers:
containersMatchingPredicate:error:
initWithCNContainer:
predicateForContainersIncludingDisabled:
setExternalSyncData:
T@"CNContactStore",R,N,V_contactStore
_updateStatusForStoreWithExternalID:lastSyncStartDate:lastSyncEndDate:lastSyncError:canceled:
_mappedAccountErrorFromError:
_isCanceledError:
_eventStore
sources
isSyncing
sourceType
_updateStatusForSource:lastSyncStartDate:lastSyncEndDate:lastSyncError:canceled:
setTimeout:
setPurgingAllowed:
setCreationBlock:
_eventStorePurger
acquireCachedEventStoreOrCreate:
sourceIdentifier
lastSyncEndDate
setLastSyncStartDate:
setLastSyncEndDate:
_codeForLastSyncError:userInfo:
setLastSyncError:userInfo:
eventStore
saveSource:commit:error:
sourceWithExternalID:
_updateStatusForCalendarWithExternalID:sourceExternalID:lastSyncStartDate:lastSyncEndDate:lastSyncError:canceled:
_updateStatusForCalendar:lastSyncStartDate:lastSyncEndDate:lastSyncError:canceled:
calendarWithExternalIdentifier:
cal_serializableError
_accountErrorCodeForNSError:
_ekAccountErrorFromCoreDAVErrorCode:
_ekAccountErrorFromDAErrorCode:
_ekAccountErrorFromDAValidationErrorCode:
cal_isCertificateError
_ekAccountErrorFromCoreDAVHTTPStatusCode:
_ekAccountErrorFromURLError:
_ekAccountErrorFromSubCalErrorCode:
syncStartedForStoreWithExternalID:
syncEndedForStoreWithExternalID:withError:
resetSyncStatusForAllStoresIfNecessary
resetSyncStatusIfNecessaryForStoresOfType:
syncStartedForCalendarWithExternalID:sourceExternalID:
syncEndedForCalendarWithExternalID:sourceExternalID:withError:
syncStartedForCalendar:
syncEndedForCalendar:withError:
mapTableWithWeakToStrongObjects
lastSavedSequenceNumber
blocksByConcernedParty
concernedParty
setLastSavedSequenceNumber:
_dbInfoForAccountID:create:
addBlock:forConcernedParty:account:
removeBlockForConcernedParty:account:
removeConcernedCalParty:forAccountID:
registerConcernedCalParty:forAccountID:withChangedBlock:
_handleCalChangeNotification
addObserver:selector:name:
_notesChangedExternally
registerConcernedNoteParty:withChangedBlock:
removeConcernedNoteParty:
didReceiveDarwinNotification:
_calDBInfosByPath
_noteWatcher
_concernedNotePartyToBlockMap
initWithConcernedParty:accountID:
allConcernedParties
allBlocks
setBlocksByConcernedParty:
_lastSavedSequenceNumber
_path
_blocksByConcernedParty
T@"NSString",R,N,V_path
Ti,N,V_lastSavedSequenceNumber
T@"NSMutableDictionary",&,N,V_blocksByConcernedParty
copyWithZone:
_concernedParty
_accountID
T@,R,W,N,V_concernedParty
T@"NSString",R,N,V_accountID
mainRunLoop
sharedRunLoop
T@"NSRunLoop",R,N
waiter
setWaiter:
completionHandler
setCompletionHandler:
dataclasses
setDataclasses:
waiterNum
_waiter
_dataclasses
_completionHandler
_waiterNum
T@"<DADataclassLockWatcher>",&,N,V_waiter
T@?,C,N,V_completionHandler
Tq,N,V_dataclasses
Ti,R,N,V_waiterNum
setEventsWaiters:
setWaiterIDsExpectingEventsLock:
setContactsWaiters:
setNotesWaiters:
setWaiterIDsExpectingContactsLock:
setWaiterIDsExpectingNotesLock:
requestPriority:forClient:dataclasses:
setContactsLockHolder:
setEventsLockHolder:
setNotesLockHolder:
initWithCapacity:
_canWakenWaiter:
isInHoldingPattern
_abortWaiterForWrappers:
_setUnitTestHackRunLoopMode:
_notifyWaitersForDataclasses:
_registerWaiter:forDataclassLocks:preempt:completionHandler:
relinquishLocksForWaiter:dataclasses:moreComing:
_sendAllClearNotifications
registerPreemptiveWaiter:forDataclassLocks:completionHandler:
registerWaiter:forDataclassLocks:completionHandler:
unregisterWaiterForDataclassLocks:
claimedOwnershipOfContacts
setClaimedOwnershipOfContacts:
contactsLockHolder
contactsWaiters
waiterIDsExpectingContactsLock
claimedOwnershipOfEvents
setClaimedOwnershipOfEvents:
eventsLockHolder
eventsWaiters
waiterIDsExpectingEventsLock
claimedOwnershipOfNotes
setClaimedOwnershipOfNotes:
notesLockHolder
notesWaiters
waiterIDsExpectingNotesLock
unitTestHackRunLoopMode
setUnitTestHackRunLoopMode:
_claimedOwnershipOfContacts
_claimedOwnershipOfEvents
_claimedOwnershipOfNotes
_contactsLockHolder
_contactsWaiters
_waiterIDsExpectingContactsLock
_eventsLockHolder
_eventsWaiters
_waiterIDsExpectingEventsLock
_notesLockHolder
_notesWaiters
_waiterIDsExpectingNotesLock
_unitTestHackRunLoopMode
TB,N,V_claimedOwnershipOfContacts
T@"<DADataclassLockWatcher>",&,N,V_contactsLockHolder
T@"NSMutableArray",&,N,V_contactsWaiters
T@"NSMutableSet",&,N,V_waiterIDsExpectingContactsLock
TB,N,V_claimedOwnershipOfEvents
T@"<DADataclassLockWatcher>",&,N,V_eventsLockHolder
T@"NSMutableArray",&,N,V_eventsWaiters
T@"NSMutableSet",&,N,V_waiterIDsExpectingEventsLock
TB,N,V_claimedOwnershipOfNotes
T@"<DADataclassLockWatcher>",&,N,V_notesLockHolder
T@"NSMutableArray",&,N,V_notesWaiters
T@"NSMutableSet",&,N,V_waiterIDsExpectingNotesLock
T@"NSString",&,N,V_unitTestHackRunLoopMode
initWithExternalIdentifier:
predicateForAccountForContainerWithIdentifier:
accountByCreatingAccountWithExternalIdentifier:
allAccounts
accountForContainerWithIdentifier:
initWithLabel:
UTF8String
label
_label
_transactionId
T@"NSString",R,N,V_label
T@"NSString",R,N,V_transactionId
startDailyAggDReporter
endDailyAggDReporter
getCFRunLoop
setGroupIdentifier:
setHandler:
setCallbackQueue:
showUserNotification:groupIdentifier:callbackQueue:sourceRunLoop:completionBlock:
groupIdentifier
handler
callbackQueue
_groupIdentifier
_handler
_callbackQueue
T@"NSString",C,N,V_groupIdentifier
T@?,C,N,V_handler
T@"NSObject<OS_dispatch_queue>",N,V_callbackQueue
mapTableWithStrongToStrongObjects
setDelegate:
sharedLogger
logICSMessage:atLevel:
registerWithiCalendar
defaultTrustManager
actionForTrust:forHost:andService:
delegate
allowTrust:forHost:service:
initWithObjects:
rawTrustResultForSSLTrust:hostname:service:
haveWarnedAboutCert:forHost:
promptForAllCerts
_serverSuffixesToAlwaysFail
enumerateObjectsUsingBlock:
setTrust:
setService:
setConnectionDisplayName:
setHaveWarnedAboutCert:forHost:
showPromptWithOptions:responseBlock:
protectionSpace
serverTrust
initWithTrust:
useCredential:forAuthenticationChallenge:
continueWithoutCredentialForAuthenticationChallenge:
handleTrust:forHost:forAccount:withCompletionBlock:
_actionForTrust:host:service:
haveWarnedAboutCertDict
setHaveWarnedAboutCertDict:
_delegate
_haveWarnedAboutCertDict
T@"<DATrustHandlerDelegate>",W,N,V_delegate
T@"NSMutableDictionary",&,N,V_haveWarnedAboutCertDict
initWithABAccout:
T^v,R,N,V_account
filename
DAManagedDefaultForKey:
setFilename:
_ensureCustomLogFile
enabled
removeItemAtPath:error:
initWithFilename:
logSnippet:
slurpAndRemoveLookasideFile:prefixString:suffixString:
_filename
T@"NSString",&,N,V_filename
refreshDataclasses
setRefreshDataclasses:
UIDataclasses
setUIDataclasses:
_refreshDataclasses
_UIDataclasses
Tq,N,V_refreshDataclasses
Tq,N,V_UIDataclasses
_updateForegroundDataclasses
appIDsToDataclasses
_setNewPriority
setupProcessStateMonitor
addObserver:selector:name:object:
removeObserver:name:object:
descriptor
setValues:
setEndowmentNamespaces:
setStateDescriptor:
predicateMatchingBundleIdentifier:
setPredicates:
taskState
endowmentNamespaces
bundle
appWithBundleID:isNowRunningAndVisible:
setUpdateHandler:
monitorWithConfiguration:
string
clientsToPriorityRequests
keyEnumerator
_recalculatePriority
vendPriorityManagers
_setForegroundDataclasses:
setClientsToPriorityRequests:
currentPriority
processMonitor
setProcessMonitor:
cachedAppState
setCachedAppState:
foregroundDataclasses
setForegroundDataclasses:
_currentPriority
_clientsToPriorityRequests
_processMonitor
_cachedAppState
_foregroundDataclasses
T@"NSMapTable",&,N,V_clientsToPriorityRequests
T@"RBSProcessMonitor",&,N,V_processMonitor
T@"NSMutableDictionary",&,N,V_cachedAppState
Tq,N,V_foregroundDataclasses
Ti,R,N,V_currentPriority
mutableContainer
externalModificationTag
setExternalModificationTag:
externalSyncTag
setExternalSyncTag:
externalSyncData
meIdentifier
setMeIdentifier:
restrictions
setRestrictions:
setGuardianRestricted:shouldPushChangeToServer:
setMarkedAsDefault:
deleteContainer:
updateContainer:
markedAsDefault
_markedAsDefault
_mutableContainer
T@"CNMutableContainer",R,N,V_mutableContainer
TB,N,V_markedAsDefault
_init
babysitterEnabled
distantPast
timeIntervalSinceReferenceDate
numberWithDouble:
setValue:forKey:
_reloadBabysitterProperties
_decrementRefreshCountForWaiter:forOperationWithName:
accountShouldContinue:
_incrementRefreshCountForWaiterID:operationName:
_decrementRefreshCountForWaiterID:operationName:
doubleValue
dateWithTimeIntervalSinceReferenceDate:
timeIntervalSinceDate:
registerAccount:forOperationWithName:
unregisterAccount:forOperationWithName:
buildVersion
setBuildVersion:
refreshingWaiters
setRefreshingWaiters:
failedWaiters
setFailedWaiters:
restrictedWaiters
setRestrictedWaiters:
_buildVersion
_refreshingWaiters
_failedWaiters
_restrictedWaiters
T@"NSString",&,N,V_buildVersion
T@"NSMutableDictionary",&,N,V_refreshingWaiters
T@"NSMutableDictionary",&,N,V_failedWaiters
T@"NSMutableDictionary",&,N,V_restrictedWaiters
@24@0:8@16
B24@0:8@16
v16@0:8
i16@0:8
v20@0:8i16
B16@0:8
@16@0:8
v24@0:8@16
v28@0:8B16@20
B24@0:8q16
v28@0:8B16q20
q16@0:8
v32@0:8@16@24
i24@0:8@16
v28@0:8i16@20
@20@0:8B16
v24@0:8@?16
q24@0:8@16
v20@0:8B16
Vv24@0:8@16
v24@0:8q16
v40@0:8@16@24@32
@24@0:8q16
B24@0:8^@16
B24@0:8@?16
v28@0:8@16B24
^{__CFData=}24@0:8@16
v32@0:8^{__CFData=}16@24
^{__CFURLStorageSession=}16@0:8
@"ACAccount"
@"DAStatusReport"
@"NSMapTable"
^{__CFURLStorageSession=}
@"NSString"
@"DATaskManager"
@"NSObject<OS_xpc_object>"
@"DATrustHandler"
@"NSArray"
@"NSMutableDictionary"
@"NSMutableArray"
@"NSObject<OS_dispatch_queue>"
@"NSDate"
B32@0:8@16@?24
v32@0:8@16@?24
v48@0:8@16@24@32@?40
v68@0:8@16@24@32@40B48B52B56@60
B32@0:8@16@24
@32@0:8@16@24
@56@0:8@16@24@32@40@48
@48@0:8@16@24Q32@40
@40@0:8@16q24@32
@32@0:8@16^@24
@40@0:8@16@24^@32
@"<DATransactionMonitorDelegate>"
v32@0:8:16@24
Q16@0:8
v24@0:8Q16
@"CNChangeHistoryAnchor"
v80@0:8@16@24@32@40@48B56B60B64B68@72
@20@0:8i16
@32@0:8@16^^{CalDatabase}24
v32@0:8^v16@24
^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}24@0:8@16
^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}24@0:8^v16
B28@0:8@16B24
B28@0:8^v16B24
v40@0:8@16@24^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}32
^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}32@0:8@16^@24
^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}32@0:8^v16^@24
B36@0:8^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}16@24B32
v32@0:8^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}16@24
v24@0:8^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}16
@"NSCountedSet"
@"DALocalDBWatcher"
#24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@40@0:8Q16@24@32
@48@0:8Q16@24@32@40
@24@0:8Q16
@56@0:8Q16@24@32@40@48
@48@0:8Q16@24@32q40
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@"CNSaveRequest"16
^v16@0:8
v24@0:8@"NSString"16
@"NSData"16@0:8
v24@0:8@"NSData"16
@"CNContainer"16@0:8
@24@0:8^v16
@"NSHashTable"
B20@0:8i16
^v20@0:8i16
i24@0:8^v16
^{__CFDictionary=}24@0:8@16
^{__CFDictionary=}28@0:8@16i24
@36@0:8@16i24B28B32
B44@0:8@16@24@32i40
B36@0:8@16@24i32
v32@0:8@"ACAccount"16@?<v@?B@"NSError">24
@"ACAccountStore"
d16@0:8
v24@0:8d16
@"NSURL"16@0:8
B48@0:8@16@24@32@40
B40@0:8@16@24@32
B56@0:8@16@24@32@40@48
@40@0:8Q16Q24@32
@24@0:8i16i20
@32@0:8i16@20i28
@48@0:8i16@20@28@36i44
@40@0:8@16@24@32
@32@0:8i16@20B28
@"DAMailMessage"
@36@0:8i16@20@28
@"DAMessageMoveRequest"
@48@0:8@16B24B28@32@40
@"CNAccount"
v44@0:8@16q24B32@?36
v40@0:8@16q24@?32
@32@0:8@16q24
v48@0:8:16@24d32@40
@28@0:8@16B24
@52@0:8@16@24@32i40@44
@44@0:8@16@24i32@36
@24@0:8^{__CFURLStorageSession=}16
@"DATransaction"
@"DAActivity"
@"DAAccount"
@"<DATask>"
@"NSMutableSet"
@"NSTimer"
@32@0:8@16#24
^v20@0:8B16
B20@0:8B16
v24@0:8^v16
B24@0:8^v16
@?16@0:8
@"CNContactStore"
@"DACalDBHelper"
@"NoteContext"
v24@0:8#16
Q24@0:8@16
@68@0:8i16@20@28@36@44B52B56@60
v36@0:8@16@24B32
Vv20@0:8i16
Vv20@0:8B16
Vv28@0:8@16B24
@24@0:8^@16
@32@0:8q16^@24
i92@0:8@16@24i32@36@44@52@60B68B72@76@84
i52@0:8@16@24@32B40@44
i56@0:8@16@24@32B40B44@48
i32@0:8@16@24
Vv24@0:8@"DASearchQuery"16
@"NSArray"16@0:8
Vv24@0:8@"NSData"16
Vv24@0:8@"NSString"16
Vv24@0:8@"NSArray"16
Vv28@0:8@"NSArray"16B24
@"NSSet"24@0:8^@16
@"NSSet"32@0:8q16^@24
B40@0:8@"NSSet"16@"NSSet"24@"NSString"32
i92@0:8@"NSData"16@"NSString"24i32@"NSString"36@"NSString"44@"NSString"52@"NSString"60B68B72@"<DAMessageSendConsumer>"76@84
i52@0:8@"DAMailboxRequest"16@"NSString"24@"NSString"32B40@"<DAMailboxRequestConsumer>"44
i52@0:8@"NSArray"16@"NSString"24@"NSString"32B40@"<DAMailboxRequestConsumer>"44
i56@0:8@"DAMailboxRequest"16@"NSString"24@"NSString"32B40B44@"<DAMailboxRequestConsumer>"48
i56@0:8@"NSArray"16@"NSString"24@"NSString"32B40B44@"<DAMailboxRequestConsumer>"48
i32@0:8@"NSArray"16@"<DAMessageMoveRequestConsumer>"24
i32@0:8@"DAMessageFetchAttachmentRequest"16@"<DAMessageFetchAttachmentConsumer>"24
i32@0:8@"NSArray"16@"<DAMailboxFetchSearchResultConsumer>"24
i32@0:8@"DAResolveRecipientsRequest"16@"<DAResolveRecipientsConsumer>"24
v28@0:8@"DAFolderChange"16B24
@"DAFolder"16@0:8
B32@0:8@"NSData"16@"NSString"24
@"NSString"40@0:8@"NSData"16@"NSString"24^@32
Vv24@0:8@"NSNotification"16
@40@0:8q16^v24@32
@32@0:8^v16@24
@40@0:8^v16@24@32
v84@0:8@16@24@32@40@48@56B64B68B72@76
v52@0:8@16@24@32@40B48
Q32@0:8@16^@24
v60@0:8@16@24@32@40@48B56
Q20@0:8i16
Q24@0:8q16
Q24@0:8Q16
v40@0:8@16@24@?32
v40@0:8@?16@24@32
@24@0:8^{_NSZone=}16
@"<DADataclassLockWatcher>"
v36@0:8@16q24B32
@"NSObject<OS_os_transaction>"
v56@0:8^{__CFUserNotification=}16@24@32@40@?48
v32@0:8@16q24
v32@0:8@"NSString"16q24
i40@0:8^{__SecTrust=}16@24@32
v48@0:8^{__SecTrust=}16@24@32@?40
B40@0:8@16@24@?32
@"<DATrustHandlerDelegate>"
v36@0:8i16@20q28
@"RBSProcessMonitor"
@"CNMutableContainer"
!$'*-0369<?BE]HKNQT
,8ENw
DAAccountVersion2
DAAccountHost
DAAccountPort
DAAccountUseSSL
DAAccountEmailAddress
ACUIDisplayUsername
DASigningIdentityPersistentReference
DAEncryptionIdentityPersistentReference
DAAccountDidAutodiscover
DAExchangeOAuthSupportedKey
DAExchangeOAuthURI
DAExchangeOAuthTokenRequestURI
DAEASEndPointFQDN
DAIdentityPersist
DAIdentityPersistIsManagedByProfile
DATrustSettingsExceptions
DAAccountValidationDomain
 DAAccountFolderHierarchyChangedNotification
DAAccountFolderContentsChangedNotification
DAAccountFolderHierarchyNeedsUpdateNotification
DAAccountFolderHierarchyNeedsUpdateRequireChangedFoldersNotification
DAAccountFolderUpdatedWithNoChangesNotification
DAAccountPushedFolderPreferencesChangedNotification
DAOldKeychainURLs
DAAcountWasUpgradedFromLegacyAccount
DAAccountDoNotSaveReason
DAAccountSavePreflighted
kDAAccountIdentifiersToIgnoreForUniquenessCheck
DAAccountPrincipalPath
DAAccountUseTrustedSSLCertificate
DAAccountPersistentUUID
DAAccountConfigurationTag
v16@?0@"NSString"8
DAAccount.m
We shouldn't be resetting our account id, ever
com.apple.dataaccessd-%@
%@ %@
AccountID: %@ ("%@")
Stats %@
No Task Manager initted yet
NSPOSIXErrorDomain
https
http
v8@?0
v24@?0@"ACAccount"8@"NSError"16
%s MUST be implemented in ALL DAAccount subclasses.  Looks like it's missing in %@
Y=%@; T=%@
Cookie
Valid
InValid
com.apple.dataaccess.StorageSessionSetup
com.apple.dataaccessd.%@
%@: accountID %@ persistentUUID %@
Account class %@ MUST implement %s
v24@?0q8@"NSError"16
v20@?0B8@"NSError"12
ESAccount
Class getESAccountClass(void)_block_invoke
Unable to find class %s
void *ExchangeSyncLibrary(void)
com.apple.MobileAddressBook
com.apple.mobilephone
Calendar
Event
Reminder
Alarm
Recurrence
Store
Attendee
Organizer
EventAction
ExceptionDate
Attachment
Category
CategoryLink
Location
Sharee
InviteReply
ResourceChangeNotification
ResourceChange
Participant
CalendarItem
Notification
SuggestionNotification
SuggestedEventInfo
Contact
Conference
Error
AttachmentFile
AuxDatabase
AuxDatabaseAccount
Undefined
Unknown
com.apple.dataaccess.DATransactionMonitorQueue
DATransactionMonitor.m
Transaction count becomes negative, %d
DAReListenForAccounts
com.apple.dataaccessd.calDBQueue
DACalDBHelper.m
NULL auxDatabaseRef when trying to open aux database for client: %@
%@: tried to save a database that was never opened. accountID: %@
%@: tried to save a database that was never opened. auxDatabaseID: %d
%@: tried to close a database that was never opened. accountID: %@
%@: tried to close a database that was never opened. auxDatabaseID: %d
Client identifier is different. Expected "%@" but got "%@"
, and flushing caches
 old sequence %d
CalDBIsClosing
DAFrameworkName
DAAccountInfo
ACAccountType
ACParentAccountType
DAAccountClass
DAClientAccountClass
DADaemonAccountClass
DAAgentClass
DAAgentClassBundle
bundle
AccountInfo.plist
DAAccountLoader.m
Could not find the frameworks directory for bundle %@
Could not come up with an agent class (name %@) for account %@ parent account %@
Could not come up with an agent class (name %@) for account %@
<%@:
AccountClassName=%@
ClientAccountClassName=%@
DaemonAccountClassName=%@
AgentClassName=%@
modify
remove
fetch
preserve
move
belay-move
soft-delete
pseudo-delete
unknown
<%@: %p> { Change type: %@, ChangedItem: %@ serverId: %@%@}
, Change id: %d
DAAction.m
Who does non-keyed coding nowadays?
DAAItemChangeType
ASChangedCollectionLeaf
DAAChangedItem
DAAServerId
DAAInstanceId
DAAChangeId
DAASourceContainerId
DAASourceServerId
DAADestinationContainerId
DAPropertyName
DAPropertyNamespace
DAPropertyValue
DARStatus
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.dataaccess.ExchangeOAuthCount
count
com.apple.dataaccess.dataaccessd.dailyAnalytics
DAABLegacyContainer cannot update CNSaveRequest
DAABLegacyContainer does not support asContainer
 folderID = %@, name = %@, _parentFolderID %@, _dataclass %ld, _isDefault %@
com.apple.dataaccess.accountmonitor
DataAccess-
unit-test
v32@?0@"NSURLProtectionSpace"8@"NSDictionary"16^B24
%@?%@
?@/|:
%@:%@@
Password 
Login 
Host 
Scheme 
v24@?0^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}8^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}16
webcal://
added
modified
 NOT
google.com
yahoo.com
aol.com
Username
Hostname
PortNumber
SSLEnabled
%llu
%llu
%@ messageID "%@", onFlags %llu, offFlags %llu
%@ maxSize %d, bodyFormat %d
%@ messageID "%@"
%@ messageID "%@", maxSize %d, bodyFormat %d
%@ longID "%@", maxSize %d, bodyFormat %d
%@ message "%@", fromFolder "%@", toFolder "%@"
%@ messageID "%@", attachmentName "%@"
%@ subject "%@"
%@ status %d, sourceID "%@", destID "%@", origRequest (%@)
%@ emailAddresses %@
%@ status %ld
 email->certs 
status %ld 
(null)
 email->certs status %ld 
%@: 
<cert data length %ld hash %ld> 
 email->availability 
 email->availability status %ld 
%a, %d %b %Y %H:%M:%S %z
com.apple.dataaccess.queryqueue
DASyncStart
DASyncEnd
DACalendarItemsDownloaded
DACalendarItemsUploaded
AccountID
AccountClass
AccountName
NumberOfItemsChanged
ContainerID
NSString *acDataclassForDADataclass(DASingleDataclass)
com.apple.dataaccess.statusreport
@"NSMutableArray"8@?0
v24@?0@"NSArray"8@"NSError"16
v24@?0@"ACAccountType"8@"NSError"16
DAUtils.m
Only supports Exchange account types
int flockWithProcessAssertion(int, BOOL, NSString *__strong)
You can't flock a flocked file.  No ref counting for you
com.apple.dataaccess.unknown
0123456789ABCDEF
0123456789abcdef
CFBundleVersion
%@/%@ (%@) %@/%@
DeviceClass
ProductType
com.apple.reminders
com.apple.mobilenotes
com.apple.mobilemail
@?/:
%0.*d
%@://%@%@%@%@%@
%@://%@@%@%@%@%@%@
%@://%@
%@://%@%@
%@://%@:%u%@
%@://%@/
%@://%@:%u/
DADiagnosticsEnabled
NSDetailedErrors
NSDetailedErrors: 
Library/DataAccess/DeviceSpecificInfo.plist
com.apple.dataaccess.deviceid
DAGlobalDeviceSpecificIdentifier
iPhone Simulator
DATaskManager.m
There are queued exclusive tasks remaining during dealloc
There is an active exclusive task remaining during dealloc
There are independent tasks remaining during dealloc
There are held independent tasks remaining during dealloc
There are modal-held independent tasks remaining during dealloc
There are queued tasks remaining during dealloc
There is an active queued task remaining during dealloc
There is a modal-held active queued task remaining during dealloc
Apple-%@/%@
Out of bounds state
DATaskManager %@ state:%@
Active exclusive task: %@
Queued exclusive tasks: %@
Independent tasks: %@
Held independent tasks: %@
Modal-held independent tasks: %@
Active queued task: %@
Queued tasks: %@
Active modal task: %@
Queued modal tasks: %@
Associated with account: %@
Finished task is not being managed, so cannot be active modal task.
Finished task is not being managed, so cannot be in modal queue.
A nil task requested modal?
Cannot request modal behavior during shutdown
Only the active exclusive task can go modal immediately
Out of bounds state.
taskEndModal can only be called in Run Modal state, not %d
Only the active modal task can end modal behavior.
Cannot handle _startModal: in Shutdown state
Cannot have active queued task and active exclusive task at the same time.
Cannot have running independent tasks and an active exclusive task at the same time.
Cannot have active queued task and a modal task at the same time.
Cannot have running independent tasks and a modal task at the same time.
Cannot have active exclusive task in Nominal state.
Cannot have modal task in Nominal state.
We shouldn't be holding independent tasks in Nominal state
We shouldn't have queued exclusive tasks in Nominal state
We shouldn't have any independent tasks that are modal in Nominal state
Cannot have active exclusive task in Hold for Exclusive state.
Should not have any modal task active in Hold for Exclusive state
Should have at least one queued exclusive task in Hold for Exclusive state
Cannot have running independent tasks in Run Exclusive state.
Cannot have active queued task in Run Exclusive state.
Cannot have active modal task in Hold for Modal state.
Should have at least one queued modal task in Hold for Modal state.
Should not be running other independent tasks in Run Modal state.
Should not be running other queued task in Run Modal state.
Only the exclusive task can currently go modal.
Nominal
Hold for Exclusive
Run Exclusive
Hold for Modal
Run Modal
Shutdown
Out of bounds
GenericDataAccessAccount
GenericDataAccessAccountWithLogging
Subscribed Calendars
com.apple.dataaccessd.changeinserter
com.apple.dataaccess
CardDAV-dbhelper
com.apple.dataaccessd.abDBQueue
com.apple.dataaccessd.noteDBQueue
DALocalDBHelper.m
You can't ask for an AddressBook db if you didn't open it.  Geez! %@
ClientIdentifier can not be nil
<unknown>
local
You can't ask for a note db if you didn't open it.  Geez! %@
DAPowerAssertionManager.m
%s must have a non-nil context
%s must have a non-nil group identifier
Shared DAPowerAssertionManager object %@:
Contexts asserting power: %@
Contexts held aside: %@
Active Assertions: %@
com.apple.DataAccess:%d-%p
^{__CFArray=}8@?0
ASAccountActor.m
Must be called on subclass: %s
ESAccountActor
Class getESAccountActorClass(void)_block_invoke
com.apple.cfnetwork
apple
/Microsoft-Server-ActiveSync
q24@?0@8@16
com.apple.dataaccess.checkHolidayCalendarAccount
containerWithExternalIdentifier:forAccountWithExternalIdentifier is abstract
allContainers is abstract
allContainersForAccountWithExternalIdentifier is abstract
createNewContainerWithType is abstract
setDefaultContainer:onlyIfNotSet: is abstract
setLastSyncDateForContainer: is abstract
mergeAllRecordIntoContainer: is abstract
DADataHandlers.m
Can't initialize a DADataHandler with a nil changeTrackingID
setLastSyncDateForContainer
@"EKEventStore"8@?0
v32@?0@"DALocalDBWatcherCalConcernedParty"8@?<v@?>16^B24
DALocalDBWatcher.m
Someone registered themselves for the Note notification more than once.  Why?  Bad guy %@
_CalDatabaseChangedNotification
NoteContextDarwinNotificationWithLoggedChanges
%@: waiter %@ wants dataclasses %lx
DALocalDBGateKeeper.m
DALocalDBGateKeeper is shutting down, but the following account is still holding the dataclass lock for dataclass %lx.  Account %@
DALocalDBGateKeeper is shutting down, but the following accounts are still waiting on the dataclass lock for dataclass %lx.  Account %@
DALocalDBGateKeeper is shutting down, but the following accounts are still waiting on the dataclass lock for dataclass type %lx.  Account %@
Waiter %@ tried to relinquish a lock for data class %ld, but it was held by another waiter: %@
_contactsLockHolder %@
_contactsWaiters %@
_waiterIDsExpectingContactsLock %@
_eventsLockHolder %@
_eventsWaiters %@
_waiterIDsExpectingEventsLock %@
_notesLockHolder %@
_notesWaiters %@
_waiterIDsExpectingNotesLock %@
DAUserNotificationUtilities.m
Invalid parameter not satisfying: %@
notification != nil
completionBlock != nil
runLoop != nil
Already waiting on this notification %p
fetchedAccountWithExternalIdentifier: is abstract
accountByCreatingAccountWithExternalIdentifier: is abstract
allAccounts: is abstract
accountForContainerWithIdentifier: is abstract
com.apple.dataaccess.dataaccessd
kDAMigrationBuildVersionKey
BuildVersion
.me.com
.icloud.com
v24@?0@8^B16
v12@?0i8
com.apple.dataaccess.trustChallengeQueue
Not 
v12@?0B8
DAABLegacyAccount cannot update CNSaveRequest
com.apple.dataaccess.DATrafficQueue
^{__CFString=}76@?0i8^{__CFDate=}12^{__CFString=}20^{__CFString=}28r*36r*44Q52^v60^{__CFString=}68
DALogLevel
SBLockStateChanged
v32@?0@"NSString"8@"NSNumber"16^B24
com.apple.dataaccessd.sblockqueue
com.apple.frontboard.visibility
v32@?0@"RBSProcessMonitor"8@"RBSProcessHandle"16@"RBSProcessStateUpdate"24
v16@?0@"<RBSProcessMonitorConfiguring>"8
------
DAPriorityManager: 
[%@ 
Refresh: 0x%lx 
UI: 0x%lx 
------
DAPriorityManager.m
You can't request priority with a nil client
Background
Refresh
DAContactsContainer does not support asSource
Could not load source: %ld
/AppleInternal/Library/Frameworks/CalendarDiagnostics.framework/CalendarDiagnostics
IPHONE_SIMULATOR_ROOT
CFFIXED_USER_HOME
RestrictionTimeout
NumFailures
com.apple.dataaccess.babysitter
LastSystemVersion
RestrictedWaiters
RefreshingWaiters
FailedWaiters
DataAccessBabysitterPrefsChanged
DABabysitter.m
Use the shared babysitter, jerk.
DAAccount %p is going away...
Not clearing/refreshing account credentials for account %{public}@ because the credentials have yet to be saved.
Account %{public}@ has DAAccountVersion %d
Account %{public}@ has no DAAccountVersion, and we have no previous build version. Forcing account migration.
Account %{public}@ has no DAAccountVersion, and the previous build version string (%{public}@) could not be parsed. Forcing account migration.
Account %{public}@ has no DAAccountVersion, and the previous build version string (%{public}@) appears old enough that we think we need to migrate. Forcing account migration.
Account %{public}@ has no DAAccountVersion, and the previous build version string (%{public}@) appears new enough not to force migration. Assuming DAAccountVersion 1.
Account "%@" (%@) was toggled for a dataclass. Giving it another chance with the babysitter.
%s to be implemented by subclass
%s being ignored by %@
Added consumer %p for task %p to DAAccount %p, count: %lu
Removed consumer for task %p from DAAccount %p, count: %lu
Account %p clientToken: %@
Account %p clientTokenRequestedByServer, new token: %@
Someone wanted to set a nil password, we're editing the live ACAccountCredential
Calling _backingAccountInfo.authenticated = YES for Account identifier %@ and username %@
Could not convert account %{public}@ to persona %@, with error %@
This process needs entitlement com.apple.usermanagerd.persona.background
Could not get current persona context for account %{public}@, with error %@
Changing Host From %@ to %@
Removing contacts data for account %@, because it has a significant change
Found %ld contacts sources to remove
Removing event / todo data for account %@, because it has a significant change
Found %ld calendars to remove
Ignoring Notes orphan check.  You asked for it.
Removing notes data for account %@, because it has a significant change
Found a note account to remove
Failed to save: %@
Notes database was corrupted! Non-fatal at this point, but just barely
Account had significant property change, going to flush local data.
ChangeInfo %@
NewProperties %@
Couldn't get a Yahoo cookie. Not setting authentication headers
Fetching OAuth Credential for Backing Account %@
Account Store Returned A %@ OAuth-token From Credential Object %@ AccountID: %@
Saving account "%@" (%{public}@)
 _backingAccountInfo.authenticated is %d for Account identifier %@ and username %@
Error saving account %@: %@
Not updating non-existing account: %@
Refusing to save account because DAAccountDoNotSave is set to "%@"
Setting identity certificate. Managed by profile? %@
Account %@ (%{public}@) says it is not authenticated. Refreshing to be sure.
Account %@ (%{public}@) is still not authenticated after refreshing.
Good news! Account %@ (%{public}@) is now authenticated after refreshing.
The account %@ (%{public}@) is not marked as authenticated, but it supports authentication, appears to have credentials, and is marked to ignore the isAuthenticated property. We will try to sync this account.
Not attempting request for account %@ because the backing account credential isn't authed %{public}@
Not attempting request for account %{public}@ because the backing account needs to verify terms or is suspended. %{public}@
Not attempting request for account %{public}@ because we don't have access to keychain items with accessibility %d right now
Shutting down the task manager
Canceling task because conditions for on-power mode no longer exist (xpc_activity)
XPC: Saved XPC activity for account %@
XPC: Increment XPC activity continue count to %d for account %@
XPC: Decrement XPC activity continue count to %d for account %@
XPC: Successfully set XPC activity state to XPC_ACTIVITY_STATE_DONE for account %@
XPC: Failed to set XPC activity state to XPC_ACTIVITY_STATE_DONE for account %@
DataAccess is renewing credentials for account %{public}@ by forcing-prompt: %{public}@
Failed to save account when attempting to remove kDAAccountIgnoreAuthenticatedProperty flag: %@
DataAccess successfully renewed credentials for account %{public}@ by forcing-prompt: %{public}@
DataAccess failed to renew credentials for account %{public}@ by forcing-prompt: %{public}@ - renewalResult = %ld
Account had significant property change, going to flush local data.
OldProperties %@
NewProperties %@
Downloading attachments is not supported on account ID %@. AttachmentUUID: %@
Requesting calendar availability is not supported on account with ID [%@].
Cancelling calendar availability requests is not supported on account with ID [%@].
Requesting granted delegates list is not supported on account with ID [%@].
Cancelling granted delegates list requests is not supported on account with ID [%@].
Update granted delegate permission is not supported on account with ID [%@].
Cancelling update granted delegate permission requests is not supported on account with ID [%@].
Performing a calendar directory search is not supported on account with ID [%@].
Cancelling calendar directory searches is not supported on account with ID [%@].  searchID: [%@]
Responding to calendar shares is not supported on account ID %@. calendar ID: %@
Reporting calendar shares as junk is not supported on account ID %@. calendar ID: %@
Fetching office hours is not supported on account ID %{public}@
Setting office hours is not supported on account ID %{public}@
Transaction count is initialized to %d
Transaction count is incremented to %d
Transaction count is decremented to %d
Remaining transactions: %@
Failed to determine database directory path for accountID: %{public}@
Failed to determine database directory path for auxDatabaseID: %{public}@
Creating calendar database for clientID %{public}@
Using already-created calendar database %{public}p
Created calendar database %{public}p
Cal database %p opened for "%{public}@". Connection count is now %lu
connectionCount is > 1, at %lu
Saving calendar database %p%{public}@%{public}@.
Saving calendar database %p%{public}@.  Save failed
Resetting calendar database %p sequence %d
_closeDatabase called too many times with path: %{public}@
Decrementing database %p reference count. connectionCount is %lu. Client identifier is "%{public}@"
Destroying calendar database %p
Someone asked us to yield the calendar database. Bumping up all clients to UI priority
Handling account info mapping %@
Using pre-cached account infos
Going to the disk for our account info providers
We don't know of any bundles for account type "%@"
Could not come up with an account class (name %@) for account %@ parent account %@
Could not come up with an account class (name %@) for account %@
Could not come up with a client account class (name %@) for account %@ parent account %@
Could not come up with a client account class (name %@) for account %@
Could not come up with a daemon account class (name %@) for account %@ parent account %@
Could not come up with a daemon account class (name %@) for account %@
starting daily Analytics reporter
Updating criteria for daily Analytics xpc activity.
unregistering daily Analytics reporter
Reporting Exchange OAuth accounts count
Reported Exchange OAuth accounts count
Loading password for %@
Securing ur sekretz: moving credential for account %@ to accessibility %d
Couldn't change password accessibility, error %d
Could not find a password in the keychain for %@, error %d
Removing credential %@
Setting password for account with UUID %@
Error %d, Can't update password for account %@
Removing password for account with UUID %@
Error %d, Couldn't delete password from keychain for account %@
During Migration, password present. Setting _backingAccountInfo.authenticated = YES for Account identifier %@ and username %@
Saving password for %@
Refusing to save password in keychain because one or more of the necessary fields are null: %@%@%@%@
Error %d while trying to add a password: %@
Refusing to retrieve password from keychain because one or more of the necessary fields are null: %@%@%@
Could not find a password in the keychain for %@
Removing password for %@
Refusing to delete password from keychain because one or more of the necessary fields are null: %@%@%@
error %d: Could not delete password for %@
Setting password for account
Couldn't set password, error %d
Couldn't add password, error %d
Handling account will change %{public}@
Handling account did change %{public}@
Found an account of type %{public}@.  Sanity check enabled dataclasses.
Found an account of type %{public}@.  Sanity check account properties.
Found a parent account of type %{public}@. Sanity checking child accounts for it.
_handleAccountAddOrModify: Failed to save account with identifier %{public}@: %@
Not creating a store for account %{public}@ because it is not appropriate
Not creating a store for account %{public}@ because it is the child of a CalDAV account
Couldn't find an account type with identifier %{public}@, error = %@
Failed to remove orphaned subscribed calendar account %{public}@: error = %@
Failed to save %{public}@ subscribed calendar child account: error = %@
No calendar for account %{public}@, so we can't update it.
Couldn't save calendar with updated properties for change to account %{public}@ (%@): %@
No calendar updates needed for changes to account %{public}@ (%@)
Sanity checking CalDAV account "%@" (%{public}@). This account does %@ use the calendar home sync report. Modified dataclasses are %@.
Account "%@" (%{public}@) is being added with credentials but is not set as authenticated. Marking it to ignore the authenticated property on next sync.
BagURL has changed from %@ to %@, updated account
Found > 1 child accounts of type %@ under account %@.  Keeping %@ and removing %@
Failed to remove duplicate child account %{public}@: error = %@
Failed to add child account: error = %@
Failed to save child account: error = %@
DAMailMessage initWithCoder: should be called on a subclass only
DAMailMessage encodeWithCoder: should be called on a subclass only
Updating oof settings requested on account %@, which does not support it
Retrieving oof settings requested on account %@, which does not support it
Checking if oof settings are supported on account %@, which does not support it
Delay pending search for %f seconds
Delay new search for %f seconds
Search requested on account %@, which does not support it
%s unhandled dataclass %lx
Could not convert ACAccount (%@) to DAAccount
Could not load ACAccounts due to Account Error %@
Applying storage session %@ to request %@
Exception when reading dictionary from %@: %@
Task manager %@ is being deallocated. Ending XPC transaction
Task manager %@ is being deallocated. Ending XPC activity
Exclusive task %@ submitted, to front: %d
Begin an xpc transaction due to exclusive task
DATransaction starting, ID: %@
Retain an xpc activity due to exclusive task for account %@
Independent task %@ submitted
Begin an xpc transaction due to independent task
Retain an xpc activity due to independent task for account %@
Queued task %@ submitted
Begin an xpc transaction due to queued task
Retain an xpc activity due to queued task for account %@
Task %@ aborted
Task Manager %p shutting down with account at %p
Task Manager %p shutting down with state %@
Task manager %@ is being shut down. Ending XPC transaction
Task manager %@ is being shut down. Releasing XPC activity
Task manager %@ has finally drained its queue. Turning opportunistic socket support back on
Task manager %@ has finally drained its queue. Clearing its user initiated sync state
Task manager %@ has finally drained its queue. Ending XPC transaction
Task manager %@ has finally drained its queue. Releasing XPC activity
Task manager %@ has finally drained its queue. Reset automatic fetching state
Task %@ finished.
Early return because task %@ isn't in our collection
Pending tasks are finished for account "%@" (%{public}@)
Task %@ requesting modal
Task %@ ending modal
The _performTask is invoked after taskManager has been shutdown. Canceling %{public}@ %@
The device is in on-power fetch mode, but is no longer on power or on wifi. Canceling %{public}@ %@
The _startModal is invoked after taskManager has been shutdown. Canceling %{public}@ %@
startModal called on task %@
Task Manager %@ transitioning from state: %@
Task Manager %@ transitioning to state: %@
Scheduling selector: %s with argument: %@ in modes %@
Scheduling modal task: %@
Cancelling task %@ with reason %d
Unexpected unsaved contact changes: %lu
abDB is unsupported under modern Contacts framework :%@
Unexpected error committing save request :%@
_registerForAddressBookYieldNotifications is unsupported under modern Contacts framework :%@
Someone asked us to yield the AddressBook database. Bumping up all clients to UI priority
_abOpenDBWithClientIdentifier is unsupported under modern Contacts framework :%@
Creating ab database for client %@
Created ab database %p
Couldn't create ab database: %@
AB database %p opened. Connection count is now %d
_abConnectionCount is > 1, at %d
abOpenDBWithClientIdentifier is unsupported under modern Contacts framework :%@
abOpenDBAsGenericClient is unsupported under modern Contacts framework :%@
abSaveDB is unsupported under modern Contacts framework :%@
_abCloseDB called too many times (connection count %d).  Resetting count to 0
Decrementing database %p reference count. _abConnectionCount is %d
Destroying ab database %p
Creating note database
Created note database %p
Note database %p opened. Connection count is now %d
_noteConnectionCount is > 1, at %d
Saving notes database %p. Connection count is %d
Saving notes database %p failed with error %@
Decrementing database %p reference count. _noteConnectionCount is %d
_noteCloseDB called too many times (connection count %d).  Resetting count to 0
Destroying notes database %p
Setting unit test Address Book Database directory to: %@
Setting unit test Calendar Main Database directory to: %@, Container Provider: %@
Context %@ retaining power assertion with group identifier %@
Context %@ getting added to our held aside contexts, as group %@ is currently dropped
Context %@ releasing power assertion
Context object %@ attempting to release power assertion without first retaining it
Dropping power assertion for group identifier %@
Reattaining power assertion for group identifier %@
DAPowerAssertionManager retained power assertion %@ for context %p, outstanding assertion count %lu
DAPowerAssertionManager unable to get non-nil power assertion %@ for context %p, outstanding assertion count %lu
DAPowerAssertionManager releasing power assertion for context %p, outstanding assertion count %u ontext
Nil container passed to -mergeAllRecordsIntoContainer:shouldInsertChangeHistoryRecords, aborting merge
Could not derive an ABSource from DAContainer in -mergeAllRecordsIntoContainer:shouldInsertChangeHistoryRecords, aborting merge
About to mergeAllRecordsIntoContainer, shouldInsertChangeHistoryRecords: %{public}d 
[mergeAllRecords] Moving all records from source ID %{public}d into source ID %{public}d 
First sync finishing %{public}@, setting lastSyncDate
Another sync finishing %{public}@, not setting lastSyncDate
Could not search for Exchange credentials.  %d
Could not move Exchange credential to apple keychain access group.  %d
Saving child account %@
Child account %@ saved
Child account %@ failed to save: %@
DAAccountMigrator: Waiting for child accounts to save...
Couldn't get a Facebook account type
Upgrading all DataAccess accounts...
Calling DAAccount Upgrader to upgrade Accounts
Account "%@" (%{public}@) was upgraded. Saving account.
DAD: DataAccess Migrator sending notification: com.apple.dataaccess.checkHolidayCalendarAccount
DAD: DataAccess Migrator Request For Performing Asynchronous Data Migration
DAAccountMigrator: Starting Exchange Credential Move to Apple Access Group
DAAccountMigrator: Starting Update Facebook Authentication types.
DAAccountMigrator: Starting Upgrade DAAccount types.
DAAccountMigrator: Writing Device specificID.
DAD: DataAccess Migrator skipped several tasks because user logs in for the first time.
DAAccountMigrator: Posting HolidaySubCal Account Check Notification.
DAAccountMigrator: Updating migration Version.
DAAccountMigrator: Finished Migrator For dataaccess..returning YES/Success.
Setting default container is not implemented yet. <rdar://problem/40239535>
Setting last sync date on container is not implemented yet.
Saving sync status for source with identifier %{public}@: lastSyncStartDate = %{public}@, lastSyncEndDate = %{public}@, canceled=%{public}@ lastSyncError = %@
Initial sync canceled. Clearing start date for source with identifier %{public}@
Failed to save source sync status with source identifier %@. Error = %@
Tried to update status for store with nil externalID
Updating sync status (%@) for source with externalID %{public}@
Tried to update status for store, but could not get a corresponding EKSource for externalID %{public}@. lastSyncError is %@
Tried to update status for calendar with nil externalID
Updating sync status (%@) for calendar with externalID %@
Tried to update status for calendar, but could not get a corresponding EKCalendar for externalID %@ in source with external ID %@. lastSyncError is %@
Saving sync status for calendar with external identifier %@: lastSyncStartDate = %{public}@, lastSyncEndDate = %{public}@, canceled=%{public}@ lastSyncError = %@
Initial sync canceled. Clearing start date for calendar with external identifier %@
Failed to save calendar sync status with calendar external ID %@. Error = %@
__CalDatabaseChangedExternally - comparing current sequence number %d to saved sequence number %d in database: %@
Notifying agents that the Calendar database has changed.
No database for account: %{public}@
no path for database: %p, account: %{public}@
No dbInfo for path: %{public}@, database: %p, account: %{public}@
Registering concerned cal party: %@ for account: %{public}@
__NotesChanged externally.
Received darwin notification %@
Aborting locks for dataclasses %lx to %@
Notifying waiters for dataclasses %ldd
Granting locks for dataclasses %lx to %@
registerWaiter %@ forDataclassLocks %lx
Not allowing waiter %@ to get the gate, as we're in a holding pattern
Letting everyone know we're done with contacts
Not notifying for contacts.  Claimed %d waiters count %lu holder %p expectant waiters %lu
Letting everyone know we're done with events
Not notifying for events.  Claimed %d waiters count %lu holder %p expectant waiters %lu
Letting everyone know we're done with notes
Not notifying for notes.  Claimed %d waiters count %lu holder %p expectant waiters %lu
unregisterWaiterForDataclassLocks %@
relinquishing locks for waiter %@ dataclasses %lx
Claiming ownership of dataclasses 0x%lx
DATransaction exiting, ID: %@
Couldn't schedule response for notification %@
No completion block for notification %@
DAMigrationIsNeeded : DataAccess Migrator Comparing Version %@ With %@
DAUpdateMigrationVersion : DataAccess Migrator Current Version %@
Checking to see if we should trust the server certificate
Terminating connection because server does not have an SSL certificate. Host: %@
Account now requires trusted certificate. Setting %@ to YES for account: %@
Got SecTrustEvaluate result %u. Allowing.
Got SecTrustEvaluate result %u. Checking if needing to prompt.
Terminating connection and warning user about an untrusted SSL certificate. The account requires trusted SSL certificate. Account: %@
Account does not require trusted certificate. Prompting user. Account: %@
Got SecTrustEvaluate result %u. Denying.
IT'S A TARP!!! We received an untrusted cert for %@. You really think we're going to fall for that?
prompting certificate for host: %@
got prompt response %d
Grabbing trust challenge lock...
Lock acquired. Checking trust.
%@Continuing connection
App state changed; %@ now has foreground status: %{BOOL}i. Foreground dataclasses are 0x%lx
DAPERF: DAPriorityManager is changing the priority to %d
Client %@ requested priority %@ for dataclasses 0x%lx
Bumping all client priority requests for dataclasses 0x%lx to UI. Open bar, dude!
Babysitter: The OS version is different. Giving all accounts a second chance at life.
Babysitter: Noting that waiter %@ failed %d times for operation %@
===================
Babysitter: You're once, twice, %d times a failure. Disabling account with ID %@ until it stops crashing. Please file a bug for any dataaccessd crashes you find.
===================
===================
Babysitter: Waiter %@ has crashed %d times now. Since you have the babysitter disabled, we're going to assume you know what you're doing and not disable the waiter. Consider yourself warned.
===================
Restricted accounts are: %@
Babysitter: Marking waiter %@ as performing operation "%@" (attempt #%d)
Babysitter: Decrementing refresh count for all operations on account %@
Babysitter: Decrementing refresh count for operation "%@" on account %@
Babysitter: It's been long enough, we're going to give account %@ another try. Let's hope it doesn't crash this time.
softlink:o:path:/System/Library/PrivateFrameworks/ExchangeSync.framework/ExchangeSync
softlink:o:path:/System/Library/PrivateFrameworks/ExchangeSync.framework/ExchangeSync
softlink:o:path:/System/Library/PrivateFrameworks/ExchangeSync.framework/ExchangeSync
DAAccount
TrustHandling
HSA2Support
CoreDAVLogging
AuthenticationExtensions
Deprecated
EventsFolderItemsSyncContext
EventsSupport
DATransactionMonitor
ChillOutARC
ContactFolderItemsSyncContext
ContactsSupport
MailFolder
MailFolderSupport
InvitationSupport
DACalDBHelper
DAAccountLoader
DAAccountClassNames
DAAction
NSSecureCoding
NSCoding
DAMoveAction
DAEditPropertyAction
DAResponse
DAAnalyticsReporter
DAABLegacyContainer
DAContainer
DACardDAVRecord
NSObject
DAFolder
DAAccountMonitor
DAKeychain
DAKeychainAdditions
DAKeychainAddition
OldAndBusted
DAAccountChangeUpdaterAccountStoreWrapper
DAAccountChangeHandlerAccountStoreUpdater
DASubCalAccount
DAAccountChangeHandler
DAMailboxRequest
DAMailboxSetFlagsRequest
DAMailboxGetUpdatesRequest
DAMailboxDeleteMessageRequest
DAMailboxFetchMessageRequest
DAMailboxFetchSearchResultRequest
DAMessageMoveRequest
DAMessageFetchAttachmentRequest
DADraftMessageRequest
DAMoveResponse
DAResolveRecipientsRequest
DAResolvedRecipient
DAMailMessage
Email
Settings
Searching
SearchSubclassing
ToDosSupport
DAContactsBasedAccount
DAContactsAccount
DAExtensions
DelayedPerformWithNullSource
DAHexString
DALeastInfoURLExtension
DADAExtendedDescription
DATaskManager
DALocalDBHelper
DAPowerAssertionManager
_DAABLegacyContainerProvider
ASAccountActor
ASAccountActorMessages
DAAccountUpgrader
DAContainerProvider
DADataHandler
NotesSupport
_DAContactsContainerProvider
DAStoreSyncStatusUpdater
DALocalDBWatcher
DALocalDBWatcherDBInfo
DALocalDBWatcherCalConcernedParty
NSCopying
DARunLoopRegistry
DAWaiterWrapper
DALocalDBGateKeeper
_DAContactsAccountContactsProvider
DATransaction
DAAggDReporter
DAUserNotificationUtilities
DAUserNotificationInfo
DAiCalendarLogger
ICSLoggingDelegate
DAContactsAccountProvider
DATrustHandler
DAABLegacyAccount
DATrafficLogger
DAPriorityRequest
DAPriorityManager
DAContactsContainer
DABabysitter
DAActivity
_DAContactsAccountABLegacyProvider
accountType
dataUsingEncoding:
processName
enabledDataclasses
stripAlarms
cancelPreviousPerformRequestsWithTarget:
DAManagedDefaultForKey:
setMeIdentifier:
setStripAlarms:
appendBytes:length:
continueWithoutCredentialForAuthenticationChallenge:
initWithObjects:
promptForAllCerts
stripAttachments
CDVRawPath
verifyCredentialsForAccount:saveWhenAuthorized:withHandler:
cancelPreviousPerformRequestsWithTarget:selector:object:
accountTypeWithAccountTypeIdentifier:
copy
initWithPassword:
propertiesForDataclass:
setStripAttachments:
appendData:
removeSlashIfNeeded
encodeInt:forKey:
subcalAccountID
copyCurrentPersonaContextWithError:
setAccountType:
oldAccountProperties
accountTypeWithAccountTypeIdentifier:error:
setSubcalURL:
databaseIsCorrupt:
appendFormat:
encodeObject:forKey:
removeStoreForAccount:withChildren:inDatabase:mainDatabase:accountStore:
subcalURL
oldUsername
hasPrefix:
accountTypeWithIdentifier:completion:
appendString:
initWithTrust:
lowercaseString
removeStoreForDeletedAccountWithIdentifier:inDatabase:mainDatabase:accountStore:
setEndowmentNamespaces:
encodedHeaders
cancelTaskWithReason:underlyingError:
count
setSyncingAllowed:
array
insertObject:atIndex:
hasSuffix:
protectionSpace
countByEnumeratingWithState:objects:count:
accountWithIdentifier:
CalDAVSubscribedCalendarsKey
insertString:atIndex:
arrayWithArray:
caseInsensitiveCompare:
renewCredentialsForAccount:options:completion:
countForObject:
endowmentNamespaces
weakObjectsHashTable
accountWithIdentifier:completion:
arrayWithObjects:count:
setTimeout:
setObject:forKey:
enumerateKeysAndObjectsUsingBlock:
substringFromIndex:
replaceOccurrencesOfString:withString:options:range:
createPersonaContextForBackgroundProcessingWithPersonaUniqueString:
openAuthenticationURL:forAccount:shouldConfirm:completion:
whitespaceAndNewlineCharacterSet
intValue
setExternalID:
substringToIndex:
mainRunLoop
enumerateObjectsUsingBlock:
creationDate
setAddressList:forKey:
writeToFile:atomically:
integerValue
accountsMatchingPredicate:error:
dateWithCalendarFormat:timeZone:
supportsAuthentication
errorWithDomain:code:userInfo:
credential
_clearCachedCredentials
setAddressListForBcc:
query
shouldUseCalendarHomeSyncReport
dateWithTimeIntervalSinceNow:
invalidate
authenticationType
esAccountSubclassWithBackingAccountInfo:
setExternalModificationTag:
systemTimeZone
credentialItemForKey:
CDVIsSafeRedirectForRequestURL:
mapTableWithStrongToStrongObjects
setAddressListForCc:
isAppleInternalInstall
setTrust:
setExternalSyncData:
takeValuesFromModifiedAccount:
setOptions:
changeType
dateWithTimeIntervalSinceReferenceDate:
eventStore
mapTableWithWeakToStrongObjects
credentialProtectionPolicy
accountsWithAccountType:
setAddressListForSender:
isAuthenticated
decodeIntForKey:
showPromptWithOptions:responseBlock:
setExternalSyncTag:
babysitterEnabled
exceptionWithName:reason:userInfo:
setParentAccount:
parentAccount
credentialType
setAddressListForTo:
iOSLegacyIdentifier
accountsWithAccountType:completion:
rangeOfString:
decodeObjectOfClass:forKey:
characterAtIndex:
currentHandler
parentAccountIdentifier
setUpCalStoreForParentAccount:withChildren:inDatabase:
decodeObjectOfClasses:forKey:
accountsWithAccountTypeIdentifiers:error:
rangeOfString:options:
restorePersonaWithSavedPersonaContext:
sortedArrayUsingComparator:
characterIsMember:
currentMode
taskState
acquireCachedEventStoreOrCreate:
setUpdateHandler:
CDVObjectForKeyCaseInsensitive:
rawTrustResultForSSLTrust:hostname:service:
characterSetWithCharactersInString:
meIdentifier
currentPersona
restrictions
timeIntervalSinceDate:
actionForTrust:forHost:andService:
setPersistentUUID:
timeIntervalSinceNow
setAuthenticated:
currentRunLoop
executeSaveRequest:error:
defaultCenter
save:
childAccounts
externalID
timeIntervalSinceReferenceDate
setAuthenticationType:
isEnabledToSyncDataclass:
refresh
defaultManager
boolForKey:
sourceIdentifier
aa_isSuspended
setGuardianRestricted:shouldPushChangeToServer:
saveAccount:withCompletionHandler:
infoDictionary
setPredicates:
boolValue
setValue:forKey:
defaultTrustManager
setCalDAVURLPath:
externalIdentifierString
addAccount:
sourceType
setValues:
setProtocolVersion:
externalModificationTag
setVersionForNewAccount
deleteAccount:
isEqualToString:
sourceWithExternalID:
saveCalendar:commit:error:
bundle
setPurgingAllowed:
externalSyncData
bundleForClass:
setHeader:forKey:
registerForInterrogationWithBlock:
sources
deleteContainer:
modifiedDataClasses
addClientToken:
externalSyncTag
bundleWithPath:
relativePath
standardUserDefaults
addObject:
bytes
isInHoldingPattern
descriptor
absoluteString
fileSystemRepresentation
initWithAccountType:
performSelector:withObject:afterDelay:
addObjectsFromArray:
isPropertyDirty:
startModal
fileURLWithPath:
SubCalFilterAlarmsKey
absoluteURL
saveSource:commit:error:
performSelector:withObject:afterDelay:inModes:
monitorWithConfiguration:
setRestrictions:
addObserver:selector:name:
setConnectionDisplayName:
calDAVURLPath
saveVerifiedAccount:error:
DAAccountDoNotSaveReason
code
SubCalSubscriptionURLKey
performTask
addObserver:selector:name:object:
dictionary
account:isValid:validationError:
saveVerifiedAccount:withCompletionHandler:
SubCalTitleKey
compare:
firstObject
setWithArray:
updateContainer:
initWithBytesNoCopy:length:encoding:freeWhenDone:
dictionaryWithContentsOfFile:
removeAccount:
completelyIgnoreNotes
isSyncing
mutableCopy
DAAccountPrincipalPath
setWithObjects:
persistence
addTimer:forMode:
dictionaryWithObjects:forKeys:count:
updateGrantedDelegatePermissionFinishedWithError:
searchQuery:finishedWithError:
removeAccount:withDeleteSync:completion:
DAAccountIdentifiersToIgnoreForUniquenessCheck
didFinishAllXPCTransactions
initWithCapacity:
URLWithString:
cal_isCertificateError
string
nextObject
initWithChangeType:accountIdentifier:accountTypeIdentifier:oldAccountProperties:username:password:oldUsername:oldPassword:modifiedDataClasses:clientName:
settingsRequestFinishedWithResults:status:error:
removeAllObjects
stringByAppendingFormat:
cal_personaIdentifier
displayAccount
keyEnumerator
URLWithString:relativeToURL:
postNotificationName:object:
setService:
stringByAppendingPathComponent:
cal_serializableError
accountForAccountId:
uppercaseString
getCFRunLoop
shareResponseFinishedWithError:
serverTrust
calendarAvailabilityRequestFinishedWithError:
stringByAppendingPathExtension:
lastObject
setLastSyncEndDate:
null
distantPast
allCredentials
consumer
setCreationBlock:
domain
calendarDirectorySearchFinishedWithError:exceededResultLimit:
predicateForAccountForContainerWithIdentifier:
stringByAppendingString:
removeCredential:forProtectionSpace:
numberWithBool:
setLastSyncError:userInfo:
setCredential:
initWithData:encoding:
allKeys
sharedConnection
stringByDeletingLastPathComponent
predicateForAccountWithExternalIdentifier:
setLastSyncStartDate:
grantedDelegatesListRequestFinishedWithResults:error:
doubleValue
allObjects
sharedCredentialStorage
UTF8String
numberWithDouble:
downloadFinishedError:
predicateForContainersInAccountWithIdentifier:includingDisabledContainers:
stringByTrimmingCharactersInSet:
calendarWithExternalIdentifier:
numberWithInt:
useContactsFramework
groupExpansionFinishedWithResults:error:
DAAccountSavePreflighted
UUID
predicateForContainersIncludingDisabled:
calendarsDataclassModified
numberWithInteger:
lastSyncEndDate
accountIdentifiersEnabledForDataclasses:withAccountTypeIdentifiers:completion:
UUIDString
removeItemAtPath:error:
containersMatchingPredicate:error:
setDataContainerProvider:
initWithDirectoryURL:
useCredential:forAuthenticationChallenge:
predicateMatchingBundleIdentifier:
leafAccountTypes
calendarsForEntityType:
oauthToken
containsObject:
_CFURLRequest
allValues
initWithEKOptions:
_initWithCFURLRequest:
leafAccountTypesToCheckForEquality
removeObject:
stringValue
callStackSymbols
accountProperties
contentsOfDirectoryAtPath:error:
objectAtIndex:
initWithExternalIdentifier:
stringWithFormat:
removeObjectAtIndex:
allowTrust:forHost:service:
objectAtIndexedSubscript:
userInfo
handleFailureInFunction:file:lineNumber:description:
privateFrameworksPath
allowsKeyedCoding
setStateDescriptor:
removeObjectForKey:
length
enableChangeLogging:
initWithFireDate:interval:target:selector:userInfo:repeats:
handleFailureInMethod:object:file:lineNumber:description:
stringWithString:
objectEnumerator
processInfo
initWithFormat:
stringWithUTF8String:
load
objectForKey:
removeObserver:name:object:
setDisplayName:
dealloc
init
waiterID
description
daAccountSubclassWithBackingAccountInfo:
shouldCreateAccountForBackingAccountInfo:
initWithBackingAccountInfo:
_refreshCredential
ingestBackingAccountInfoProperties
accountsProviderWithDBHelper:
containerProviderWithDBHelper:
daAccountVersion
setDAAccountVersion:
upgradeAccount
resetAccountID
accountID
syncStoreIdentifier
scheduleIdentifier
persistentUUID
_setPersistentUUID:
changeTrackingID
accountDescription
publicDescription
redactedDescription
setAccountDescription:
displayName
username
setUsername:
user
setUser:
isDisabled
isEnabledForDataclass:
setEnabled:forDataclass:
enabledForAnyDADataclasses:
enabledForDADataclass:
setEnabled:forDADataclass:
enabledDataclassesBitmask
dataclassProperties
spinnerIdentifiers
accountPropertyForKey:
setAccountProperty:forKey:
removeAccountPropertyForKey:
setObject:forKeyedSubscript:
objectForKeyedSubscript:
accountBoolPropertyForKey:
setAccountBoolProperty:forKey:
accountIntPropertyForKey:
setAccountIntProperty:forKey:
resumeMonitoringFoldersWithIDs:
suspendMonitoringFoldersWithIDs:
stopMonitoringFolderWithID:
stateString
setConsumer:forTask:
consumerForTask:
removeConsumerForTask:
clientToken
clientTokenRequestedByServer
passwordWithExpected:
password
setPassword:
performUsingAccountPersona:
urlFromDataclassPropertiesForDataclass:
hostFromDataclassPropertiesForDataclass:
useSSLFromDataclassPropertiesForDataclass:
portFromDataclassPropertiesForDataclass:
usernameWithoutDomain
domainOnly
host
setHost:
hostWithoutPath
useSSL
setUseSSL:
emailAddress
setEmailAddress:
emailAddresses
setEmailAddresses:
accountContainsEmailAddress:
preferredAddress
signingIdentityPersistentReference
setSigningIdentityPersistentReference:
encryptionIdentityPersistentReference
setEncryptionIdentityPersistentReference:
port
setPort:
principalPath
setPrincipalPath:
scheme
principalURL
setPrincipalURL:
checkValidityOnAccountStore:withConsumer:
checkValidityOnAccountStore:withConsumer:inQueue:
saveModifiedPropertiesOnBackingAccount
discoverInitialPropertiesWithConsumer:
autodiscoverAccountConfigurationWithConsumer:
shouldDoInitialAutodiscovery
setShouldDoInitialAutodiscovery:
shouldAutodiscoverAccountProperties
onBehalfOfBundleIdentifier
shouldRemoveDBSyncDataOnAccountChange
removeDBSyncDataForAccountChange:
accountDidChangeWithChangeInfo:
_handleSignificantPropertyChanges:
userAgentHeader
serverRoot
serverComplianceClasses
handleCertificateError:
additionalHeaderValues
customConnectionProperties
oauth2Token
oauthInfoProvider
tearDown
monitorFoldersWithIDs:
monitorFolderWithID:
stopMonitoringFoldersWithIDs:
stopMonitoringFolders
defaultContainerIdentifierForDADataclass:
removeClientCertificateData
saveAccountPropertiesWithError:
saveAccountProperties
updateExistingAccountProperties
keychainAccessibilityType
addUsernameToURL:
preflightSaveWithAccountProvider:
canSaveWithAccountProvider:
identityPersist
setIdentityCertificatePersistentID:managedByProfile:
_isIdentityManagedByProfile
exceptionsDict
exceptionsForDigest:
setExceptions:forDigest:
cleanupAccountFiles
isChildAccount
resetCertWarnings
resetStatusReport
shouldFailAllTasks
isEqualToAccount:
accountHasSignificantPropertyChangesWithChangeInfo:
isActiveSyncAccount
isLDAPAccount
isCalDAVAccount
isCardDAVAccount
isDelegateAccount
isCalDAVChildAccount
isHotmailAccount
isGoogleAccount
isSubscribedCalendarAccount
copyStorageSession
shutdown
reload
protocolVersion
accountTypeIdentifier
shouldCancelTaskDueToOnPowerFetchMode
saveXpcActivity:
hasXpcActivity
incrementXpcActivityContinueCount
decrementXpcActivityContinueCount
removeXpcActivity
saveFetchingAutomaticallyState:
getFetchingAutomaticallyState
backingAccountInfo
statusReport
setStatusReport:
shouldUseOpportunisticSockets
setShouldUseOpportunisticSockets:
wasUserInitiated
setWasUserInitiated:
taskManager
trustHandler
setTrustHandler:
appIdsForPasswordPrompt
isValidating
setIsValidating:
sourceApplicationBundleIdentifier
setSourceApplicationBundleIdentifier:
dataclassPropertyURLsByDataclass
setDataclassPropertyURLsByDataclass:
pendingQueries
setPendingQueries:
pendingQueryQueue
setPendingQueryQueue:
lastQueryStartedTime
setLastQueryStartedTime:
.cxx_destruct
_backingAccountInfo
_hasInitted
_shouldUseOpportunisticSockets
_wasUserInitiated
_statusReport
_consumers
_storageSession
_clientToken
_taskManager
_xpcActivity
_continueCount
_isFetchingAutomatically
_shouldFailAllTasks
_isValidating
_trustHandler
_appIdsForPasswordPrompt
_sourceApplicationBundleIdentifier
_dataclassPropertyURLsByDataclass
_pendingQueries
_pendingQueryQueue
_lastQueryStartedTime
T@"NSMutableDictionary",&,N,V_dataclassPropertyURLsByDataclass
T@"DAStatusReport",&,N,V_statusReport
T@"DATrustHandler",&,N,V_trustHandler
TB,N,V_shouldUseOpportunisticSockets
TB,N,V_wasUserInitiated
T@"NSMutableArray",&,N,V_pendingQueries
T@"NSObject<OS_dispatch_queue>",&,N,V_pendingQueryQueue
T@"NSDate",&,N,V_lastQueryStartedTime
T@"NSString",R,N
Ti,N,SsetDAAccountVersion:
T@"NSString",R,C,N
T@"NSString",C,N
Tq,N
TB,N
Tq,R,N
TB,R,N
T@"ACAccount",R,N,V_backingAccountInfo
T@"DATaskManager",R,N,V_taskManager
Ti,R,N
T@"NSData",&,N
T@"NSURL",C,N
T@"NSArray",C,N
T@"NSArray",R,N,V_appIdsForPasswordPrompt
TB,R,N,V_shouldFailAllTasks
T@"NSData",R,C,N
TB,N,V_isValidating
T@"NSSet",R,N
T@"NSString",C,N,V_sourceApplicationBundleIdentifier
handleTrustChallenge:
handleTrustChallenge:completionHandler:
getAppleIDSession
addToCoreDAVLoggingDelegates
removeFromCoreDAVLoggingDelegates
localizedIdenticalAccountFailureMessage
localizedInvalidPasswordMessage
dropAssertionsAndRenewCredentialsInQueue:withHandler:
_webLoginRequestedAtURL:reasonString:inQueue:completionBlock:
webLoginRequestedAtURL:reasonString:inQueue:completionBlock:
handleValidationError:completion:
_leafAccountTypes
oneshotListOfAccountIDs
reacquireClientRestrictions:
accountHasSignificantPropertyChangesFromOldAccountInfo:
accountDidChangeFromOldAccountInfo:
calEventChangeId
setCalEventChangeId:
calRecurrenceChangeId
setCalRecurrenceChangeId:
calAlarmChangeId
setCalAlarmChangeId:
calAttendeeChangeId
setCalAttendeeChangeId:
calAttachmentChangeId
setCalAttachmentChangeId:
highestSequenceNumber
setHighestSequenceNumber:
_calEventChangeId
_calRecurrenceChangeId
_calAlarmChangeId
_calAttendeeChangeId
_calAttachmentChangeId
_highestSequenceNumber
Ti,N,V_calEventChangeId
Ti,N,V_calRecurrenceChangeId
Ti,N,V_calAlarmChangeId
Ti,N,V_calAttendeeChangeId
Ti,N,V_calAttachmentChangeId
Ti,N,V_highestSequenceNumber
defaultEventsFolder
eventsFolders
synchronizeEventsFolder:previousTag:actions:highestIdContext:isInitialUberSync:isResyncAfterConnectionFailed:moreLocalChangesAvailable:consumer:
sendEmailsForCalEvents:consumer:
beginDownloadingAttachmentWithUUID:consumer:
cancelDownloadingInstance:error:
requestCalendarAvailabilityForStartDate:endDate:ignoredEventID:addresses:consumer:
cancelCalendarAvailabilityRequestWithID:
requestGrantedDelegatesListWithConsumer:
cancelGrantedDelegatesListRequestWithID:
updateGrantedDelegatePermission:consumer:
cancelUpdateGrantedDelegatePermissionRequestWithID:
performCalendarDirectorySearchForTerms:recordTypes:resultLimit:consumer:
performGroupExpansionForPrincipalPath:consumer:
cancelCalendarDirectorySearchWithID:
respondToShareRequestForCalendar:withResponse:consumer:
reportShareRequestAsJunkForCalendar:consumer:
cancelShareResponseInstance:error:
fetchOfficeHoursWithConsumer:error:
setOfficeHours:withConsumer:error:
cancelOfficeHoursRequestWithID:
sharedTransactionMonitor
incrementTransactionCountForTransaction:
decrementTransactionCountForTransaction:
transactionCount
setTransactionCount:
transactions
setTransactions:
transactionMonitorDelegate
setTransactionMonitorDelegate:
_transactionCount
_transactions
_transactionMonitorDelegate
Ti,N,V_transactionCount
T@"NSMutableArray",&,N,V_transactions
T@"<DATransactionMonitorDelegate>",W,N,V_transactionMonitorDelegate
da_performSelectorThatDoesntAffectRetainCount:withObject:
abPersonChangeId
setAbPersonChangeId:
abGroupChangeId
setAbGroupChangeId:
isChangeHistoryTruncated
setChangeHistoryTruncated:
latestSequenceNumber
setLatestSequenceNumber:
cnChangeAnchor
setCnChangeAnchor:
_changeHistoryTruncated
_abPersonChangeId
_abGroupChangeId
_latestSequenceNumber
_cnChangeAnchor
Ti,N,V_abPersonChangeId
Ti,N,V_abGroupChangeId
changeHistoryTruncated
TB,N,GisChangeHistoryTruncated,V_changeHistoryTruncated
TQ,N,V_latestSequenceNumber
T@"CNChangeHistoryAnchor",&,N,V_cnChangeAnchor
defaultContactsFolder
contactsFolders
synchronizeContactsFolder:previousTag:previousSyncToken:actions:highestIdContext:isInitialUberSync:isResyncAfterConnectionFailed:previousTagIsSuspect:moreLocalChangesAvailable:consumer:
mailboxID
parentMailboxID
inboxFolder
sentItemsFolder
deletedItemsFolder
draftsFolder
reattemptInvitationLinkageForMetaData:inFolderWithId:
unactionableICSRepresentationForMetaData:inFolderWithId:outSummary:
_canonicalizePath:
setMainDatabasePath:containerProvider:
mainDatabasePath
containerProvider
initWithDatabaseInitOptions:
_mainDatabasePath
openDatabaseForAccountID:clientID:
_pathForAccountID:createdDatabase:
openDatabaseForAuxDatabaseRef:clientID:
allOpenDatabases
databaseForAccountID:
databaseForAuxDatabaseRef:
saveDatabaseForAccountID:flushCaches:
saveDatabaseForAuxDatabaseRef:flushCaches:
closeDatabaseForAccountID:save:
closeDatabaseForAuxDatabaseRef:save:
_openDatabaseForPath:clientID:createdDatabaseToConsume:
_cachedDatabaseForAccountID:path:
_cachedDatabaseForAuxDatabaseRef:path:
_saveDatabase:path:fushCaches:
_closeDatabase:path:
_registerForCalendarYieldNotificationsForDB:
watcher
setWatcher:
_queue
_initOptions
_cachedMainDatabasePath
_containerPathsByAccountID
_containerPathsByAuxDatabaseID
_databasesByContainerPath
_connectionCountsByPath
_watcher
T@"DALocalDBWatcher",&,N,V_watcher
sharedInstance
_findPrivateFrameworks
_addAccountInfo:forFrameworkNamed:
_loadFrameworkAtSubpath:
loadFrameworkForACAccountType:
loadDaemonBundleForACAccountType:
accountClassForACAccount:
clientAccountClassForACAccount:
daemonAccountClassForACAccount:
agentClassForACAccount:
daemonAppropriateAccountClassForACAccount:
acAccountTypeToAccountFrameworkSubpath
setAcAccountTypeToAccountFrameworkSubpath:
acAccountTypeToAccountDaemonBundleSubpath
setAcAccountTypeToAccountDaemonBundleSubpath:
acAccountTypeToClassNames
setAcAccountTypeToClassNames:
acParentAccountTypeToChildAccountTypes
setAcParentAccountTypeToChildAccountTypes:
_acAccountTypeToAccountFrameworkSubpath
_acAccountTypeToAccountDaemonBundleSubpath
_acAccountTypeToClassNames
_acParentAccountTypeToChildAccountTypes
T@"NSMutableDictionary",&,N,V_acAccountTypeToAccountFrameworkSubpath
T@"NSMutableDictionary",&,N,V_acAccountTypeToAccountDaemonBundleSubpath
T@"NSMutableDictionary",&,N,V_acAccountTypeToClassNames
T@"NSMutableDictionary",&,N,V_acParentAccountTypeToChildAccountTypes
accountClassName
setAccountClassName:
clientAccountClassName
setClientAccountClassName:
daemonAccountClassName
setDaemonAccountClassName:
agentClassName
setAgentClassName:
_accountClassName
_clientAccountClassName
_daemonAccountClassName
_agentClassName
T@"NSString",&,N,V_accountClassName
T@"NSString",&,N,V_clientAccountClassName
T@"NSString",&,N,V_daemonAccountClassName
T@"NSString",&,N,V_agentClassName
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
initWithItemChangeType:changedItem:serverId:
initWithItemChangeType:changedItem:serverId:instanceId:
stringForItemChangeType:
hash
isEqual:
itemChangeType
setItemChangeType:
serverId
setServerId:
instanceId
setInstanceId:
changedItem
_setChangedItem:
changeId
setChangeId:
forwardedAttendees
setForwardedAttendees:
forwardedAttendeeUUIDs
setForwardedAttendeeUUIDs:
ignoresGuardianRestrictions
setIgnoresGuardianRestrictions:
_ignoresGuardianRestrictions
_changeId
_itemChangeType
_serverId
_instanceId
_changedItem
_forwardedAttendees
_forwardedAttendeeUUIDs
TQ,N,V_itemChangeType
T@,&,N,V_serverId
T@,&,N,V_instanceId
T@,&,N,S_setChangedItem:,V_changedItem
Ti,N,V_changeId
T@,&,N,V_forwardedAttendees
T@,&,N,V_forwardedAttendeeUUIDs
TB,N,V_ignoresGuardianRestrictions
initWithItemChangeType:changedItem:sourceContainerId:sourceServerId:destinationContainerId:
sourceContainerId
setSourceContainerId:
sourceServerId
setSourceServerId:
destinationContainerId
setDestinationContainerId:
_sourceContainerId
_sourceServerId
_destinationContainerId
T@"NSString",&,N,V_sourceContainerId
T@"NSString",&,N,V_sourceServerId
T@"NSString",&,N,V_destinationContainerId
initWithChangedItem:propertyName:value:propertyNamespace:serverId:
propertyName
value
propertyNamespace
_propertyName
_value
_propertyNamespace
T@"NSString",R,N,V_propertyName
T@"NSString",R,N,V_value
T@"NSString",R,N,V_propertyNamespace
initWithItemChangeType:changedItem:serverId:status:
status
setStatus:
_status
Tq,N,V_status
startDailyAnalyticsReporter
endDailyAnalyticsReporter
reportActiveExchangeOAuthAccountsCount
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
isContact
isGroup
isContainer
isAccount
updateSaveRequest:
markForDeletion
identifier
name
setName:
isLocal
type
setType:
externalIdentifier
setExternalIdentifier:
cTag
setCTag:
syncTag
setSyncTag:
syncData
setSyncData:
constraintsPath
setConstraintsPath:
meContactIdentifier
setMeContactIdentifier:
accountIdentifier
setAccountIdentifier:
isContentReadonly
setContentReadonly:
arePropertiesReadonly
setArePropertiesReadonly:
isSearchContainer
markAsDefault
asSource
asContainer
isGuardianRestricted
setGuardianRestricted:
isGuardianStateDirty
setGuardianStateDirty:
guardianRestricted
TB,N,GisGuardianRestricted
guardianStateDirty
TB,N,GisGuardianStateDirty
initWithABSource:
source
_source
T^v,R,N,V_source
folderName
setFolderName:
folderID
setFolderID:
parentFolderID
setParentFolderID:
dataclass
setDataclass:
isDefault
setIsDefault:
hasRemoteChanges
setHasRemoteChanges:
_isDefault
_hasRemoteChanges
_folderName
_folderID
_parentFolderID
_dataclass
TB,N,V_hasRemoteChanges
T@"NSString",C,N,V_folderName
T@"NSString",C,N,V_folderID
T@"NSString",C,N,V_parentFolderID
Tq,N,V_dataclass
TB,N,V_isDefault
sharedMonitor
monitorAccount:
unmonitorAccount:
monitoredAccounts
accounts
setAccounts:
accountsQueue
setAccountsQueue:
_accounts
_accountsQueue
T@"NSHashTable",&,N,V_accounts
T@"NSObject<OS_dispatch_queue>",&,N,V_accountsQueue
sharedKeychain
canAccessCredentialsWithAccessibility:
_secAccessibilityForDAKeychainAccessibility:
_daKeychainAccessibilityForSecAccessibility:
_DACopyMutableQueryForAccountWithPersistentUUID:
_DACopyMutableAttributesForAccountWithPersistentUUID:accessibility:
passwordForAccountWithPersistentUUID:expectedAccessibility:shouldSetAccessibility:passwordExpected:
removePersistentCredentials
setPassword:forAccount:withPersistentUUID:withAccessibility:
removePasswordForAccount:withPersistentUUID:
migratePasswordForAccount:
stringByURLQuoting
URLWithoutUsername
URLByRemovingLastPathComponent
URLWithUsername:withPassword:
URLWithUsername:
saveKeychainInformationsForURL:andPassword:withAccessibility:
loadKeychainInformationsForURL:
removeKeychainInformationsForURL:
guessPasswordForURL:
addAccount:withCompletionHandler:
updateAccount:withCompletionHandler:
removeAccount:completion:
initWithAccountStore:
_store
subscriptionURL
shouldRemoveAlarms
setShouldRemoveAlarms:
shouldRemoveAttachments
setShouldRemoveAttachments:
refreshInterval
setRefreshInterval:
useFTP
setUseFTP:
calendarExternalId
T@"NSURL",R,N
Td,N
handleAccountWillChange:withChangeInfo:store:accountUpdater:
handleAccountDidChange:withChangeInfo:store:
_supportedChildAccountTypesForParentAccountType:
_handleAccountAddOrModify:withChangeInfo:inStore:accountUpdater:
_handleAccountDelete:withChangeInfo:inStore:
_cleanupStoreForDisabledAccount:inStore:
_setupStoreForNewAccount:
_performBlockWithGenericClientDBForAccount:block:
_handleCalDAVAccountModifiedByDataAccess:withChangeInfo:inStore:accountUpdater:
_accountTypeWithIdentifier:inStore:
_sanityCheckChildSubCalAccountsWithParent:inStore:accountUpdater:
_handleChangeToSubscribedCalendar:withChangeInfo:inStore:accountUpdater:
_updateCalendarFromAccount:
_findSubscribedCalendarForAccount:inEventStore:
_sanityCheckSubscribedCalendarAccountInfo:
_updateSubscribedCalendarAccountProperties:
_sanityCheckCalDAVAccount:accountChangeInfo:
_sanityCheckChildDAVAccount:withParent:accountChangeInfo:
_sanityCheckChildAccountOfType:withParent:accountChangeInfo:inStore:updater:
_pickAccountToKeepWithAccount:andAccount:
_sanityCheckEnabledDataclassesOnExchangeAccountInfo:
requestType
setRequestType:
bodyFormat
setBodyFormat:
messageID
setMessageID:
_requestType
_bodyFormat
_messageID
Ti,N,V_requestType
Ti,N,V_bodyFormat
T@"NSString",C,N,V_messageID
initRequestWithSetFlags:unsetFlags:message:
onFlags
setOnFlags:
offFlags
setOffFlags:
_onFlags
_offFlags
TQ,N,V_onFlags
TQ,N,V_offFlags
initRequestForBodyFormat:withBodySizeLimit:
maxSize
setMaxSize:
_maxSize
Ti,N,V_maxSize
initRequestWithMessageID:
initRequestForBodyFormat:withMessageID:withBodySizeLimit:
initRequestForBodyFormat:withLongID:withBodySizeLimit:
initRequestForBodyFormat:withFolderID:withServerID:withLongID:withBodySizeLimit:
longID
setLongID:
serverID
setServerID:
_longID
_serverID
T@"NSString",C,N,V_longID
T@"NSString",C,N,V_serverID
initMoveRequestWithMessage:fromFolder:toFolder:
message
setMessage:
fromFolder
setFromFolder:
toFolder
setToFolder:
context
setContext:
_message
_fromFolder
_toFolder
_context
T@"NSString",C,N,V_message
T@"NSString",C,N,V_fromFolder
T@"NSString",C,N,V_toFolder
T@,&,N,V_context
initWithAttachmentName:andMessageServerID:
attachmentName
setAttachmentName:
_attachmentName
T@"NSString",C,N,V_attachmentName
initWithRequestType:message:send:
send
setSend:
_send
T@"DAMailMessage",&,N,V_message
TB,N,V_send
initWithStatus:sourceID:destID:
sourceID
setSourceID:
destID
setDestID:
origRequest
setOrigRequest:
_sourceID
_destID
_origRequest
Ti,N,V_status
T@"NSString",C,N,V_sourceID
T@"NSString",C,N,V_destID
T@"DAMessageMoveRequest",&,N,V_origRequest
initWithEmailAddresses:
initWithEmailAddresses:retrieveCertificates:retrieveAvailability:withStartTime:endTime:
retrieveCertificates
setRetrieveCertificates:
retrieveAvailablilty
setRetrieveAvailablilty:
startTime
setStartTime:
endTime
setEndTime:
_retrieveCertificates
_retrieveAvailablilty
_emailAddresses
_startTime
_endTime
T@"NSArray",&,N,V_emailAddresses
TB,N,V_retrieveCertificates
TB,N,V_retrieveAvailablilty
T@"NSDate",&,N,V_startTime
T@"NSDate",&,N,V_endTime
resolvedEmailToX509Certs
addCert:forEmailAddress:
certificatesStatus
setCertificatesStatus:
availabilityStatus
setAvailabilityStatus:
mergedFreeBusy
setMergedFreeBusy:
mResolvedEmailToX509Certs
setMResolvedEmailToX509Certs:
_certificatesStatus
_availabilityStatus
_mergedFreeBusy
_mResolvedEmailToX509Certs
Tq,N,V_certificatesStatus
T@"NSMutableDictionary",&,N,V_mResolvedEmailToX509Certs
Tq,N,V_availabilityStatus
T@"NSString",&,N,V_mergedFreeBusy
T@"NSDictionary",R,N
from
replyTo
date
subject
displayTo
importance
read
flagged
body
bodyType
bodySize
bodyTruncated
messageClass
attachments
meetingRequestUUID
meetingRequestMetaData
meetingRequestIsActionable
threadTopic
conversationId
conversationIndex
remoteID
lastVerb
sender
isDraft
clientID
instanceID
preview
readIsSet
flaggedIsSet
verbIsSet
smimeType
rfc822Data
updateOofSettingsWithParams:consumer:
retrieveOofSettingsForConsumer:
isOofSupported
_dequeueQuery
getPendingQueryQueue
performSearchQuery:
cancelSearchQuery:
cancelAllSearchQueries
searchQueriesRunning
supportsMailboxSearch
supportsEmailFlagging
_reallyPerformSearchQuery:
_reallyCancelSearchQuery:
_reallyCancelPendingSearchQuery:
_reallyCancelAllSearchQueries
_reallySearchQueriesRunning
defaultToDosFolder
toDosFolders
synchronizeToDosFolder:previousTag:actions:highestIdContext:isInitialUberSync:isResyncAfterConnectionFailed:moreLocalChangesAvailable:consumer:
toDosNumberOfPastDaysToSync
setToDosNumberOfPastDaysToSync:
legacyIdentifier
initWithAccount:
account
markedForDeletion
setMarkedForDeletion:
_markedForDeletion
_account
T@"CNAccount",R,N,V_account
TB,N,V_markedForDeletion
_daAccountsWithAccountTypeIdentifiers:enabledForDADataclasses:filterOnDataclasses:withCompletion:
da_loadDAAccountsWithCompletion:
da_loadDAAccountsWithAccountTypeIdentifiers:withCompletion:
da_loadDAAccountsWithAccountTypeIdentifiers:enabledForDADataclasses:withCompletion:
da_accounts
da_accountsWithAccountTypeIdentifiers:
da_accountsWithAccountTypeIdentifiers:outError:
da_accountsWithAccountTypeIdentifiers:enabledForDADataclasses:
da_addNullRunLoopSourceAndPerformSelector:withObject:afterDelay:inModes:
da_hexString
da_lowercaseHexStringWithoutSpaces
da_uppercaseHexStringWithoutSpaces
da_dataWithHexString:stringIsUppercase:
da_dataWithHexString:
da_stringByAddingPercentEscapesForUsername
da_stringByRemovingPercentEscapesForUsername
da_removeSlashIfNeeded
da_appendSlashIfNeeded
da_stringByURLEscapingPathComponent
da_hasPrefixCaseInsensitive:
da_trimWhiteSpace
da_newGUID
da_new64ByteGUID
DACompactDescription
da_isEqualToDAVURL:
da_urlBySettingScheme:keepUsername:
da_urlBySettingHost:keepUsername:
da_urlBySettingPort:keepUsername:
da_urlBySettingPath:keepUsername:
da_urlBySettingUsername:
da_urlBySettingPassword:
da_urlByRemovingUsername
da_urlForLogging
da_urlBySettingScheme:
da_urlBySettingHost:
da_urlBySettingPort:
da_urlBySettingPath:
da_rawPath
da_pathWithoutTrailingRemovingSlash
da_URLWithDirtyString:
da_URLWithScheme:host:user:port:uri:
da_URLWithScheme:host:port:uri:
da_classicPortForScheme:
da_leastInfoStringRepresentationRelativeToParentURL:
da_absoluteURLForChildLeastInfoRepresentationRelativeToParentURL:
DARequestByApplyingStorageSession:
DAObjectForKeyCaseInsensitive:
DAMergeOverrideDictionary:
DAExtendedDescription
setTaskManager:
shouldForceNetworking
_performTask:
_startModal:
_useOpportunisticSocketsAgain
_clearUserInitiatedSyncTimer
_endXpcTransaction
requestCancelTaskWithReason:
shouldHoldPowerAssertion
allTasks
queuedTasks
_populateVersionDescriptions
_version
_useFakeDescriptions
deviceType
userAgent
server
OAuth2Token
accountPersistentUUID
isShutdown
submitExclusiveTask:
submitExclusiveTask:toFrontOfQueue:
submitIndependentTask:
submitQueuedTask:
cancelTask:withUnderlyingError:
cancelTask:
cancelAllTasks
cancelTasksDueToOnPowerMode
_logSyncEnd
_taskForcesNetworking:
_taskInQueueForcesNetworkConnection:
_hasTasksForcingNetworkConnection
_hasTasksIndicatingARunningSync
taskDidFinish:
taskRequestModal:
taskEndModal:
taskIsModal:
_requestCancelTasksWithReason:
_reactivateHeldTasks
_makeStateTransition
_scheduleSelector:withArgument:
_schedulePerformTask:
_scheduleStartModal:
_cancelTasksWithReason:
_retainPowerAssertionForTask:
_releasePowerAssertionForTask:
queuedExclusiveTasks
independentTasks
heldIndependentTasks
modalHeldIndependentTasks
mQueuedTasks
queuedModalTasks
taskManagerDidAddTask:
taskManagerWillRemoveTask:
setAccount:
activeModalTask
setActiveModalTask:
activeQueuedTask
setActiveQueuedTask:
powerAssertionGroupID
setPowerAssertionGroupID:
setQueuedExclusiveTasks:
activeExclusiveTask
setActiveExclusiveTask:
setIndependentTasks:
setHeldIndependentTasks:
setModalHeldIndependentTasks:
setMQueuedTasks:
modalHeldActiveQueuedTask
setModalHeldActiveQueuedTask:
setQueuedModalTasks:
state
setState:
managerIdleTimer
setManagerIdleTimer:
userInitiatedSyncTimer
setUserInitiatedSyncTimer:
xpcTransactionTimer
setXpcTransactionTimer:
_transaction
_daActivity
_state
_activeModalTask
_activeQueuedTask
_powerAssertionGroupID
_queuedExclusiveTasks
_activeExclusiveTask
_independentTasks
_heldIndependentTasks
_modalHeldIndependentTasks
_mQueuedTasks
_modalHeldActiveQueuedTask
_queuedModalTasks
_managerIdleTimer
_userInitiatedSyncTimer
_xpcTransactionTimer
T@"NSMutableArray",&,N,V_queuedExclusiveTasks
T@"<DATask>",&,N,V_activeExclusiveTask
T@"NSMutableSet",&,N,V_independentTasks
T@"NSMutableSet",&,N,V_heldIndependentTasks
T@"NSMutableSet",&,N,V_modalHeldIndependentTasks
T@"NSMutableArray",&,N,V_mQueuedTasks
T@"<DATask>",&,N,V_modalHeldActiveQueuedTask
T@"<DATask>",&,N,V_activeQueuedTask
T@"NSMutableArray",&,N,V_queuedModalTasks
T@"<DATask>",&,N,V_activeModalTask
Ti,N,V_state
T@"NSTimer",&,N,V_managerIdleTimer
T@"NSTimer",&,N,V_userInitiatedSyncTimer
T@"NSTimer",&,N,V_xpcTransactionTimer
T@"DAAccount",W,N,V_account
T@"NSArray",R,N
T@"NSString",C,N,V_powerAssertionGroupID
os_log
sharedInstanceForAccountType:creatingClass:
abSetTestABDBDir:
abTestABDBDir
calSetMainDatabasePath:containerProvider:
calMainDatabasePath
calContainerProvider
T@"NSObject<OS_os_log>",R,N
initWithContactsFamilyDelegateAltDSID:familyDelegateACAccountID:
abChangeTrackingID
abDBThrowOnNil:
abDB
addSaveRequest:
executeAllSaveRequests
removeDelegateDatabasesNotMatchingAltDSIDs:
useContacts
_registerForAddressBookYieldNotifications
_abOpenDBWithClientIdentifier:
abOpenDBWithClientIdentifier:
abOpenDBAsGenericClient
abProcessAddedRecords
abProcessAddedImages
abValidateDefaultSource
abSaveDB
abCloseDBAndSave:
abConstraintPlistPath
abDefaultAccountInfoSuitableForLogging
calDatabaseForAccountID:
calDatabaseForAuxDatabaseRef:
calOpenDatabaseForAccountID:clientID:
calOpenDatabaseForAuxDatabaseRef:clientID:
calOpenDatabaseAsGenericClientForAccountID:
calOpenDatabaseAsGenericClientForAuxDatabaseRef:
calSaveDatabaseForAccountID:
calSaveDatabaseAndFlushCachesForAccountID:
calSaveDatabaseForAuxDatabaseRef:
calCloseDatabaseForAccountID:save:
calCloseDatabaseForAuxDatabaseRef:save:
noteDB
noteOpenDB
noteSaveDB
noteCloseDBAndSave:
noteConnectionCount
setAbDB:
familyDelegateAltDSID
setFamilyDelegateAltDSID:
familyDelegateACAccountID
setFamilyDelegateACAccountID:
saveRequests
setSaveRequests:
abConnectionCount
setAbConnectionCount:
contactStore
setContactStore:
calDBHelper
setCalDBHelper:
clientIdentifier
setClientIdentifier:
setNoteDB:
setNoteConnectionCount:
calUnitTestCallbackBlock
setCalUnitTestCallbackBlock:
_abDBQueue
_calDBQueue
_noteDBQueue
_abConnectionCount
_noteConnectionCount
_abDB
_familyDelegateAltDSID
_familyDelegateACAccountID
_saveRequests
_contactStore
_calDBHelper
_clientIdentifier
_noteDB
_calUnitTestCallbackBlock
T^v,N,V_abDB
T@"NSString",&,N,V_familyDelegateAltDSID
T@"NSString",&,N,V_familyDelegateACAccountID
T@"NSMutableArray",&,N,V_saveRequests
Ti,N,V_abConnectionCount
T@"CNContactStore",&,N,V_contactStore
T@"DACalDBHelper",&,N,V_calDBHelper
T@"NSString",&,N,V_clientIdentifier
T@"NoteContext",&,N,V_noteDB
Ti,N,V_noteConnectionCount
T@?,C,N,V_calUnitTestCallbackBlock
vendDaemons:
sharedPowerAssertionManager
powerAssertionRetainCount:
retainPowerAssertion:withGroupIdentifier:
releasePowerAssertion:
dropPowerAssertionsForGroupIdentifier:
reattainPowerAssertionsForGroupIdentifier:
_retainAssertionForContext:
_releaseAssertionForContext:
contexts
setContexts:
groupIdentifierToContexts
setGroupIdentifierToContexts:
contextToGroupIdentifier
setContextToGroupIdentifier:
heldAsideGroupIdentifiers
setHeldAsideGroupIdentifiers:
heldAsideContexts
setHeldAsideContexts:
contextToPowerAssertionRef
setContextToPowerAssertionRef:
_contexts
_groupIdentifierToContexts
_contextToGroupIdentifier
_heldAsideGroupIdentifiers
_heldAsideContexts
_contextToPowerAssertionRef
T@"NSCountedSet",&,N,V_contexts
T@"NSMapTable",&,N,V_groupIdentifierToContexts
T@"NSMapTable",&,N,V_contextToGroupIdentifier
T@"NSMutableSet",&,N,V_heldAsideGroupIdentifiers
T@"NSCountedSet",&,N,V_heldAsideContexts
T@"NSMapTable",&,N,V_contextToPowerAssertionRef
initWithAddressBook:
containerWithExternalIdentifier:forAccountWithExternalIdentifier:
allContainers
allContainersForAccountWithExternalIdentifier:
createNewContainerWithType:name:externalIdentifier:constraintsPath:syncData:contentReadonly:propertiesReadonly:forAccount:
setDefaultContainer:withLocalDBHelper:onlyIfNotSet:
mergeAllRecordsIntoContainer:shouldInsertChangeHistoryRecords:
setLastSyncDateForContainer:
addressBook
_addressBook
T^v,R,N,V_addressBook
cancelTaskWithID:
startup
mailboxes
supportsConversations
supportsDraftFolderSync
supportsSmartForwardReply
supportsUniqueServerId
mailNumberOfPastDaysToSync
setMailNumberOfPastDaysToSync:
generatesBulletins
setGeneratesBulletins:
customSignature
setCustomSignature:
monitorFoldersForUpdates:
monitorFoldersForUpdates:persistent:
stopMonitoringFoldersForUpdates:
stopMonitoringAllFolders
folderIDsThatExternalClientsCareAboutWithTag:
folderIDsThatExternalClientsCareAboutForDataclasses:withTag:
setFolderIdsThatExternalClientsCareAboutAdded:deleted:foldersTag:
sendMessageWithRFC822Data:messageID:outgoingMessageType:originalMessageFolderID:originalMessageItemID:originalMessageLongID:originalAccountID:useSmartTasksIfPossible:isUserRequested:consumer:context:
sendSmartMessageWithRFC822Data:messageID:outgoingMessageType:originalMessageFolderID:originalMessageItemID:originalMessageLongID:originalAccountID:replaceOriginalMime:isUserRequested:consumer:context:
performMailboxRequest:mailbox:previousTag:isUserRequested:consumer:
performMailboxRequests:mailbox:previousTag:isUserRequested:consumer:
performMailboxRequest:mailbox:previousTag:clientWinsOnSyncConflict:isUserRequested:consumer:
performMailboxRequests:mailbox:previousTag:clientWinsOnSyncConflict:isUserRequested:consumer:
performMoveRequests:consumer:
performFetchAttachmentRequest:consumer:
performFetchMessageSearchResultRequests:consumer:
performResolveRecipientsRequest:consumer:
performFolderChange:isUserRequested:
_newASPolicyKeyNotification:
_daemonDiedNotification:
_folderUpdatedNotification:
_folderHierarchyChanged
_foldersThatExternalClientsCareAboutChanged
_accountPasswordChanged
foldersTag
initWithDAAccount:
_moveExchangeCredentialsToAppleAccessGroup
_updateFacebookAccountAuthenticationTypes
_writeDeviceSpecificID
_upgradeDAAccounts
_notifyDaHolidaySubCalAccount
upgradeAccounts:
providerWithContactStore:
providerWithAddressBook:
newDataHandlerForDataclass:container:changeTrackingID:
initWithContainer:changeTrackingID:
setContainer:
getIdFromLocalObject:
copyLocalObjectFromId:
saveContainer
copyOfAllLocalObjectsInContainer
drainContainer
wipeServerIds
drainSuperfluousChanges
openDB
closeDBAndSave:
getDAObjectWithLocalItem:serverId:account:
getDAExceptionObjectWithLocalItem:originalEvent:account:
container
setChangeTrackingID:
_container
_changeTrackingID
T@"NSString",C,N,V_changeTrackingID
T^v,N,V_container
defaultNotesFolder
notesFolders
synchronizeNotesFolder:noteContext:previousTag:actions:changeSet:notesToDeleteAfterSync:isInitialUberSync:isResyncAfterConnectionFailed:moreLocalChangesAvailable:consumer:
initWithContactStore:
T@"CNContactStore",R,N,V_contactStore
syncStartedForStoreWithExternalID:
syncEndedForStoreWithExternalID:withError:
resetSyncStatusForAllStoresIfNecessary
resetSyncStatusIfNecessaryForStoresOfType:
_eventStorePurger
_eventStore
_updateStatusForSource:lastSyncStartDate:lastSyncEndDate:lastSyncError:canceled:
_codeForLastSyncError:userInfo:
_updateStatusForStoreWithExternalID:lastSyncStartDate:lastSyncEndDate:lastSyncError:canceled:
syncStartedForCalendarWithExternalID:sourceExternalID:
syncEndedForCalendarWithExternalID:sourceExternalID:withError:
syncStartedForCalendar:
syncEndedForCalendar:withError:
_updateStatusForCalendarWithExternalID:sourceExternalID:lastSyncStartDate:lastSyncEndDate:lastSyncError:canceled:
_updateStatusForCalendar:lastSyncStartDate:lastSyncEndDate:lastSyncError:canceled:
_mappedAccountErrorFromError:
_accountErrorCodeForNSError:
_ekAccountErrorFromCoreDAVErrorCode:
_ekAccountErrorFromDAErrorCode:
_ekAccountErrorFromDAValidationErrorCode:
_ekAccountErrorFromCoreDAVHTTPStatusCode:
_ekAccountErrorFromSubCalErrorCode:
_ekAccountErrorFromURLError:
_isCanceledError:
_handleCalChangeNotification
sharedDBWatcher
_dbInfoForAccountID:create:
registerConcernedCalParty:forAccountID:withChangedBlock:
removeConcernedCalParty:forAccountID:
noteCalDBDirChanged
lastSavedCalSequenceNumberForDatabaseInContainer:
setLastSavedCalSequenceNumber:forDatabaseInContainer:
_notesChangedExternally
registerConcernedNoteParty:withChangedBlock:
removeConcernedNoteParty:
didReceiveDarwinNotification:
_calDBInfosByPath
_noteWatcher
_concernedNotePartyToBlockMap
initWithPath:
addBlock:forConcernedParty:account:
removeBlockForConcernedParty:account:
allConcernedParties
allBlocks
path
lastSavedSequenceNumber
setLastSavedSequenceNumber:
blocksByConcernedParty
setBlocksByConcernedParty:
_lastSavedSequenceNumber
_path
_blocksByConcernedParty
T@"NSString",R,N,V_path
Ti,N,V_lastSavedSequenceNumber
T@"NSMutableDictionary",&,N,V_blocksByConcernedParty
copyWithZone:
initWithConcernedParty:accountID:
concernedParty
_concernedParty
_accountID
T@,R,W,N,V_concernedParty
T@"NSString",R,N,V_accountID
sharedRunLoop
T@"NSRunLoop",R,N
waiter
setWaiter:
completionHandler
setCompletionHandler:
dataclasses
setDataclasses:
waiterNum
_waiter
_dataclasses
_completionHandler
_waiterNum
T@"<DADataclassLockWatcher>",&,N,V_waiter
T@?,C,N,V_completionHandler
Tq,N,V_dataclasses
Ti,R,N,V_waiterNum
_notifyWaitersForDataclasses:
sharedGateKeeper
setContactsLockHolder:
setEventsLockHolder:
setNotesLockHolder:
_canWakenWaiter:
_abortWaiterForWrappers:
_registerWaiter:forDataclassLocks:preempt:completionHandler:
registerPreemptiveWaiter:forDataclassLocks:completionHandler:
registerWaiter:forDataclassLocks:completionHandler:
_sendAllClearNotifications
unregisterWaiterForDataclassLocks:
relinquishLocksForWaiter:dataclasses:moreComing:
claimedOwnershipOfDataclasses:
_setUnitTestHackRunLoopMode:
claimedOwnershipOfContacts
setClaimedOwnershipOfContacts:
contactsLockHolder
contactsWaiters
setContactsWaiters:
waiterIDsExpectingContactsLock
setWaiterIDsExpectingContactsLock:
claimedOwnershipOfEvents
setClaimedOwnershipOfEvents:
eventsLockHolder
eventsWaiters
setEventsWaiters:
waiterIDsExpectingEventsLock
setWaiterIDsExpectingEventsLock:
claimedOwnershipOfNotes
setClaimedOwnershipOfNotes:
notesLockHolder
notesWaiters
setNotesWaiters:
waiterIDsExpectingNotesLock
setWaiterIDsExpectingNotesLock:
unitTestHackRunLoopMode
setUnitTestHackRunLoopMode:
_claimedOwnershipOfContacts
_claimedOwnershipOfEvents
_claimedOwnershipOfNotes
_contactsLockHolder
_contactsWaiters
_waiterIDsExpectingContactsLock
_eventsLockHolder
_eventsWaiters
_waiterIDsExpectingEventsLock
_notesLockHolder
_notesWaiters
_waiterIDsExpectingNotesLock
_unitTestHackRunLoopMode
TB,N,V_claimedOwnershipOfContacts
T@"<DADataclassLockWatcher>",&,N,V_contactsLockHolder
T@"NSMutableArray",&,N,V_contactsWaiters
T@"NSMutableSet",&,N,V_waiterIDsExpectingContactsLock
TB,N,V_claimedOwnershipOfEvents
T@"<DADataclassLockWatcher>",&,N,V_eventsLockHolder
T@"NSMutableArray",&,N,V_eventsWaiters
T@"NSMutableSet",&,N,V_waiterIDsExpectingEventsLock
TB,N,V_claimedOwnershipOfNotes
T@"<DADataclassLockWatcher>",&,N,V_notesLockHolder
T@"NSMutableArray",&,N,V_notesWaiters
T@"NSMutableSet",&,N,V_waiterIDsExpectingNotesLock
T@"NSString",&,N,V_unitTestHackRunLoopMode
fetchedAccountWithExternalIdentifier:
accountByCreatingAccountWithExternalIdentifier:
allAccounts
accountForContainerWithIdentifier:
initWithLabel:
label
transactionId
_label
_transactionId
T@"NSString",R,N,V_label
T@"NSString",R,N,V_transactionId
startDailyAggDReporter
endDailyAggDReporter
showUserNotification:groupIdentifier:callbackQueue:sourceRunLoop:completionBlock:
groupIdentifier
setGroupIdentifier:
handler
setHandler:
callbackQueue
setCallbackQueue:
_groupIdentifier
_handler
_callbackQueue
T@"NSString",C,N,V_groupIdentifier
T@?,C,N,V_handler
T@"NSObject<OS_dispatch_queue>",N,V_callbackQueue
sharedLogger
logICSMessage:atLevel:
registerWithiCalendar
initWithDelegate:
haveWarnedAboutCert:forHost:
setHaveWarnedAboutCert:forHost:
_actionForTrust:host:service:
_serverSuffixesToAlwaysFail
handleTrust:forHost:forAccount:withCompletionBlock:
handleTrustChallenge:forAccount:
handleTrustChallenge:forAccount:completionHandler:
delegate
setDelegate:
haveWarnedAboutCertDict
setHaveWarnedAboutCertDict:
_delegate
_haveWarnedAboutCertDict
T@"<DATrustHandlerDelegate>",W,N,V_delegate
T@"NSMutableDictionary",&,N,V_haveWarnedAboutCertDict
initWithABAccout:
T^v,R,N,V_account
enabled
_ensureCustomLogFile
initWithFilename:
logSnippet:
slurpAndRemoveLookasideFile:prefixString:suffixString:
filename
setFilename:
_filename
T@"NSString",&,N,V_filename
refreshDataclasses
setRefreshDataclasses:
UIDataclasses
setUIDataclasses:
_refreshDataclasses
_UIDataclasses
Tq,N,V_refreshDataclasses
Tq,N,V_UIDataclasses
_setNewPriority
vendPriorityManagers
sharedManager
appIDsToDataclasses
appWithBundleID:isNowRunningAndVisible:
_updateForegroundDataclasses
setupProcessStateMonitor
_setForegroundDataclasses:
_recalculatePriority
requestPriority:forClient:dataclasses:
bumpDataclassesToUIPriority:
clientsToPriorityRequests
setClientsToPriorityRequests:
currentPriority
processMonitor
setProcessMonitor:
cachedAppState
setCachedAppState:
foregroundDataclasses
setForegroundDataclasses:
_currentPriority
_clientsToPriorityRequests
_processMonitor
_cachedAppState
_foregroundDataclasses
T@"NSMapTable",&,N,V_clientsToPriorityRequests
T@"RBSProcessMonitor",&,N,V_processMonitor
T@"NSMutableDictionary",&,N,V_cachedAppState
Tq,N,V_foregroundDataclasses
Ti,R,N,V_currentPriority
initWithCNContainer:
mutableContainer
markedAsDefault
setMarkedAsDefault:
_markedAsDefault
_mutableContainer
T@"CNMutableContainer",R,N,V_mutableContainer
TB,N,V_markedAsDefault
_reloadBabysitterProperties
sharedBabysitter
_init
_incrementRefreshCountForWaiterID:operationName:
_decrementRefreshCountForWaiter:forOperationWithName:
_decrementRefreshCountForWaiterID:operationName:
registerAccount:forOperationWithName:
unregisterAccount:forOperationWithName:
accountWithIDShouldContinue:
accountShouldContinue:
giveAccountWithIDAnotherChance:
buildVersion
setBuildVersion:
refreshingWaiters
setRefreshingWaiters:
failedWaiters
setFailedWaiters:
restrictedWaiters
setRestrictedWaiters:
_buildVersion
_refreshingWaiters
_failedWaiters
_restrictedWaiters
T@"NSString",&,N,V_buildVersion
T@"NSMutableDictionary",&,N,V_refreshingWaiters
T@"NSMutableDictionary",&,N,V_failedWaiters
T@"NSMutableDictionary",&,N,V_restrictedWaiters
@24@0:8@16
B24@0:8@16
v16@0:8
i16@0:8
v20@0:8i16
B16@0:8
@16@0:8
v24@0:8@16
v28@0:8B16@20
B24@0:8q16
v28@0:8B16q20
q16@0:8
v32@0:8@16@24
i24@0:8@16
v28@0:8i16@20
@20@0:8B16
v24@0:8@?16
q24@0:8@16
v20@0:8B16
Vv24@0:8@16
v24@0:8q16
v40@0:8@16@24@32
@24@0:8q16
B24@0:8^@16
B24@0:8@?16
v28@0:8@16B24
^{__CFData=}24@0:8@16
v32@0:8^{__CFData=}16@24
^{__CFURLStorageSession=}16@0:8
@"ACAccount"
@"DAStatusReport"
@"NSMapTable"
^{__CFURLStorageSession=}
@"NSString"
@"DATaskManager"
@"NSObject<OS_xpc_object>"
@"DATrustHandler"
@"NSArray"
@"NSMutableDictionary"
@"NSMutableArray"
@"NSObject<OS_dispatch_queue>"
@"NSDate"
B32@0:8@16@?24
v32@0:8@16@?24
v48@0:8@16@24@32@?40
v68@0:8@16@24@32@40B48B52B56@60
B32@0:8@16@24
@32@0:8@16@24
@56@0:8@16@24@32@40@48
@48@0:8@16@24Q32@40
@40@0:8@16q24@32
@32@0:8@16^@24
@40@0:8@16@24^@32
@"<DATransactionMonitorDelegate>"
v32@0:8:16@24
Q16@0:8
v24@0:8Q16
@"CNChangeHistoryAnchor"
v80@0:8@16@24@32@40@48B56B60B64B68@72
@20@0:8i16
@32@0:8@16^^{CalDatabase}24
v32@0:8^v16@24
^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}24@0:8@16
^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}24@0:8^v16
B28@0:8@16B24
B28@0:8^v16B24
v40@0:8@16@24^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}32
^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}32@0:8@16^@24
^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}32@0:8^v16^@24
B36@0:8^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}16@24B32
v32@0:8^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}16@24
v24@0:8^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}16
@"NSCountedSet"
@"DALocalDBWatcher"
#24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@40@0:8Q16@24@32
@48@0:8Q16@24@32@40
@24@0:8Q16
@56@0:8Q16@24@32@40@48
@48@0:8Q16@24@32q40
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@"CNSaveRequest"16
^v16@0:8
v24@0:8@"NSString"16
@"NSData"16@0:8
v24@0:8@"NSData"16
@"CNContainer"16@0:8
@24@0:8^v16
@"NSHashTable"
B20@0:8i16
^v20@0:8i16
i24@0:8^v16
^{__CFDictionary=}24@0:8@16
^{__CFDictionary=}28@0:8@16i24
@36@0:8@16i24B28B32
B44@0:8@16@24@32i40
B36@0:8@16@24i32
v32@0:8@"ACAccount"16@?<v@?B@"NSError">24
@"ACAccountStore"
d16@0:8
v24@0:8d16
@"NSURL"16@0:8
B48@0:8@16@24@32@40
B40@0:8@16@24@32
B56@0:8@16@24@32@40@48
@40@0:8Q16Q24@32
@24@0:8i16i20
@32@0:8i16@20i28
@48@0:8i16@20@28@36i44
@40@0:8@16@24@32
@32@0:8i16@20B28
@"DAMailMessage"
@36@0:8i16@20@28
@"DAMessageMoveRequest"
@48@0:8@16B24B28@32@40
@"CNAccount"
v44@0:8@16q24B32@?36
v40@0:8@16q24@?32
@32@0:8@16q24
v48@0:8:16@24d32@40
@28@0:8@16B24
@52@0:8@16@24@32i40@44
@44@0:8@16@24i32@36
@24@0:8^{__CFURLStorageSession=}16
@"DATransaction"
@"DAActivity"
@"DAAccount"
@"<DATask>"
@"NSMutableSet"
@"NSTimer"
@32@0:8@16#24
^v20@0:8B16
B20@0:8B16
v24@0:8^v16
B24@0:8^v16
@?16@0:8
@"CNContactStore"
@"DACalDBHelper"
@"NoteContext"
v24@0:8#16
Q24@0:8@16
@68@0:8i16@20@28@36@44B52B56@60
v36@0:8@16@24B32
Vv20@0:8i16
Vv20@0:8B16
Vv28@0:8@16B24
@24@0:8^@16
@32@0:8q16^@24
i92@0:8@16@24i32@36@44@52@60B68B72@76@84
i52@0:8@16@24@32B40@44
i56@0:8@16@24@32B40B44@48
i32@0:8@16@24
Vv24@0:8@"DASearchQuery"16
@"NSArray"16@0:8
Vv24@0:8@"NSData"16
Vv24@0:8@"NSString"16
Vv24@0:8@"NSArray"16
Vv28@0:8@"NSArray"16B24
@"NSSet"24@0:8^@16
@"NSSet"32@0:8q16^@24
B40@0:8@"NSSet"16@"NSSet"24@"NSString"32
i92@0:8@"NSData"16@"NSString"24i32@"NSString"36@"NSString"44@"NSString"52@"NSString"60B68B72@"<DAMessageSendConsumer>"76@84
i52@0:8@"DAMailboxRequest"16@"NSString"24@"NSString"32B40@"<DAMailboxRequestConsumer>"44
i52@0:8@"NSArray"16@"NSString"24@"NSString"32B40@"<DAMailboxRequestConsumer>"44
i56@0:8@"DAMailboxRequest"16@"NSString"24@"NSString"32B40B44@"<DAMailboxRequestConsumer>"48
i56@0:8@"NSArray"16@"NSString"24@"NSString"32B40B44@"<DAMailboxRequestConsumer>"48
i32@0:8@"NSArray"16@"<DAMessageMoveRequestConsumer>"24
i32@0:8@"DAMessageFetchAttachmentRequest"16@"<DAMessageFetchAttachmentConsumer>"24
i32@0:8@"NSArray"16@"<DAMailboxFetchSearchResultConsumer>"24
i32@0:8@"DAResolveRecipientsRequest"16@"<DAResolveRecipientsConsumer>"24
v28@0:8@"DAFolderChange"16B24
@"DAFolder"16@0:8
B32@0:8@"NSData"16@"NSString"24
@"NSString"40@0:8@"NSData"16@"NSString"24^@32
Vv24@0:8@"NSNotification"16
@40@0:8q16^v24@32
@32@0:8^v16@24
@40@0:8^v16@24@32
v84@0:8@16@24@32@40@48@56B64B68B72@76
v52@0:8@16@24@32@40B48
Q32@0:8@16^@24
v60@0:8@16@24@32@40@48B56
Q20@0:8i16
Q24@0:8q16
Q24@0:8Q16
v40@0:8@16@24@?32
v40@0:8@?16@24@32
@24@0:8^{_NSZone=}16
@"<DADataclassLockWatcher>"
v36@0:8@16q24B32
@"NSObject<OS_os_transaction>"
v56@0:8^{__CFUserNotification=}16@24@32@40@?48
v32@0:8@16q24
v32@0:8@"NSString"16q24
i40@0:8^{__SecTrust=}16@24@32
v48@0:8^{__SecTrust=}16@24@32@?40
B40@0:8@16@24@?32
@"<DATrustHandlerDelegate>"
v36@0:8i16@20q28
@"RBSProcessMonitor"
@"CNMutableContainer"
