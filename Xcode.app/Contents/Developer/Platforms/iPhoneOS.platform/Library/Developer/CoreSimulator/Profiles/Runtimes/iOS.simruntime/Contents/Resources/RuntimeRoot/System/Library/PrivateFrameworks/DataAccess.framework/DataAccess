DAAccountVersion2
DAAccountHost
DAAccountPort
DAAccountUseSSL
DAAccountEmailAddress
ACUIDisplayUsername
DASigningIdentityPersistentReference
DAEncryptionIdentityPersistentReference
DAAccountDidAutodiscover
DAExchangeOAuthSupportedKey
DAExchangeOAuthURI
DAExchangeOAuthTokenRequestURI
DAEASEndPointFQDN
DAIdentityPersist
DAIdentityPersistIsManagedByProfile
DATrustSettingsExceptions
DAAccountValidationDomain
 DAAccountFolderHierarchyChangedNotification
DAAccountFolderContentsChangedNotification
DAAccountFolderHierarchyNeedsUpdateNotification
DAAccountFolderHierarchyNeedsUpdateRequireChangedFoldersNotification
DAAccountFolderUpdatedWithNoChangesNotification
DAAccountPushedFolderPreferencesChangedNotification
DAOldKeychainURLs
DAAcountWasUpgradedFromLegacyAccount
DAAccountDoNotSaveReason
DAAccountSavePreflighted
kDAAccountIdentifiersToIgnoreForUniquenessCheck
DAAccountPrincipalPath
DAAccountUseTrustedSSLCertificate
DAAccountPersistentUUID
DAAccountConfigurationTag
v16@?0@"NSString"8
DAAccount.m
We shouldn't be resetting our account id, ever
com.apple.dataaccessd-%@
%@ %@
AccountID: %@ ("%@")
Stats %@
No Task Manager initted yet
NSPOSIXErrorDomain
https
http
v8@?0
v24@?0@"ACAccount"8@"NSError"16
%s MUST be implemented in ALL DAAccount subclasses.  Looks like it's missing in %@
Y=%@; T=%@
Cookie
Valid
InValid
com.apple.dataaccess.StorageSessionSetup
com.apple.dataaccessd.%@
%@: accountID %@ persistentUUID %@
Account class %@ MUST implement %s
v24@?0q8@"NSError"16
v20@?0B8@"NSError"12
ESAccount
Class getESAccountClass(void)_block_invoke
Unable to find class %s
void *ExchangeSyncLibrary(void)
com.apple.MobileAddressBook
com.apple.mobilephone
Calendar
Event
Reminder
Alarm
Recurrence
Store
Attendee
Organizer
EventAction
ExceptionDate
Attachment
Category
CategoryLink
Location
Sharee
InviteReply
ResourceChangeNotification
ResourceChange
Participant
CalendarItem
Notification
SuggestionNotification
SuggestedEventInfo
Contact
Conference
Error
AttachmentFile
AuxDatabase
AuxDatabaseAccount
Undefined
Unknown
com.apple.dataaccess.DATransactionMonitorQueue
DATransactionMonitor.m
Transaction count becomes negative, %d
DAReListenForAccounts
com.apple.dataaccessd.calDBQueue
DACalDBHelper.m
NULL auxDatabaseRef when trying to open aux database for client: %@
%@: tried to save a database that was never opened. accountID: %@
%@: tried to save a database that was never opened. auxDatabaseID: %d
%@: tried to close a database that was never opened. accountID: %@
%@: tried to close a database that was never opened. auxDatabaseID: %d
Client identifier is different. Expected "%@" but got "%@"
, and flushing caches
 old sequence %d
CalDBIsClosing
DAFrameworkName
DAAccountInfo
ACAccountType
ACParentAccountType
DAAccountClass
DAClientAccountClass
DADaemonAccountClass
DAAgentClass
DAAgentClassBundle
bundle
AccountInfo.plist
DAAccountLoader.m
Could not find the frameworks directory for bundle %@
Could not come up with an agent class (name %@) for account %@ parent account %@
Could not come up with an agent class (name %@) for account %@
<%@:
AccountClassName=%@
ClientAccountClassName=%@
DaemonAccountClassName=%@
AgentClassName=%@
modify
remove
fetch
preserve
move
belay-move
soft-delete
pseudo-delete
edit-property
forwarding
unknown (%lu)
<%@: %p> { Change type: %@, ChangedItem: %@ serverId: %@%@}
, Change id: %d
DAAction.m
Who does non-keyed coding nowadays?
DAAItemChangeType
ASChangedCollectionLeaf
DAAChangedItem
DAAServerId
DAAInstanceId
DAAChangeId
DAASourceContainerId
DAASourceServerId
DAADestinationContainerId
DAPropertyName
DAPropertyNamespace
DAPropertyValue
DARStatus
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.dataaccess.ExchangeOAuthCount
count
com.apple.dataaccess.dataaccessd.dailyAnalytics
DAABLegacyContainer cannot update CNSaveRequest
DAABLegacyContainer does not support asContainer
 folderID = %@, name = %@, _parentFolderID %@, _dataclass %ld, _isDefault %@
com.apple.dataaccess.accountmonitor
DataAccess-
unit-test
v32@?0@"NSURLProtectionSpace"8@"NSDictionary"16^B24
%@?%@
?@/|:
%@:%@@
Password 
Login 
Host 
Scheme 
v24@?0^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}8^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}16
webcal://
added
modified
 NOT
google.com
yahoo.com
aol.com
Username
Hostname
PortNumber
SSLEnabled
%llu
%llu
%@ messageID "%@", onFlags %llu, offFlags %llu
%@ maxSize %d, bodyFormat %d
%@ messageID "%@"
%@ messageID "%@", maxSize %d, bodyFormat %d
%@ longID "%@", maxSize %d, bodyFormat %d
%@ message "%@", fromFolder "%@", toFolder "%@"
%@ messageID "%@", attachmentName "%@"
%@ subject "%@"
%@ status %d, sourceID "%@", destID "%@", origRequest (%@)
%@ emailAddresses %@
%@ status %ld
 email->certs 
status %ld 
(null)
 email->certs status %ld 
%@: 
<cert data length %ld hash %ld> 
 email->availability 
 email->availability status %ld 
%a, %d %b %Y %H:%M:%S %z
com.apple.dataaccess.queryqueue
DASyncStart
DASyncEnd
DACalendarItemsDownloaded
DACalendarItemsUploaded
AccountID
AccountClass
AccountName
NumberOfItemsChanged
ContainerID
NSString *acDataclassForDADataclass(DASingleDataclass)
com.apple.dataaccess.statusreport
@"NSMutableArray"8@?0
v24@?0@"NSArray"8@"NSError"16
v24@?0@"ACAccountType"8@"NSError"16
DAUtils.m
Only supports Exchange account types
int flockWithProcessAssertion(int, BOOL, NSString *__strong)
You can't flock a flocked file.  No ref counting for you
com.apple.dataaccess.unknown
0123456789ABCDEF
0123456789abcdef
CFBundleVersion
%@/%@ (%@) %@/%@
DeviceClass
ProductType
com.apple.reminders
com.apple.mobilenotes
com.apple.mobilemail
@?/:
%0.*d
%@://%@%@%@%@%@
%@://%@@%@%@%@%@%@
%@://%@
%@://%@%@
%@://%@:%u%@
%@://%@/
%@://%@:%u/
DADiagnosticsEnabled
NSDetailedErrors
NSDetailedErrors: 
Library/DataAccess/DeviceSpecificInfo.plist
com.apple.dataaccess.deviceid
DAGlobalDeviceSpecificIdentifier
iPhone Simulator
DATaskManager.m
There are queued exclusive tasks remaining during dealloc
There is an active exclusive task remaining during dealloc
There are independent tasks remaining during dealloc
There are held independent tasks remaining during dealloc
There are modal-held independent tasks remaining during dealloc
There are queued tasks remaining during dealloc
There is an active queued task remaining during dealloc
There is a modal-held active queued task remaining during dealloc
Apple-%@/%@
Out of bounds state
DATaskManager %@ state:%@
Active exclusive task: %@
Queued exclusive tasks: %@
Independent tasks: %@
Held independent tasks: %@
Modal-held independent tasks: %@
Active queued task: %@
Queued tasks: %@
Active modal task: %@
Queued modal tasks: %@
Associated with account: %@
Finished task is not being managed, so cannot be active modal task.
Finished task is not being managed, so cannot be in modal queue.
A nil task requested modal?
Cannot request modal behavior during shutdown
Only the active exclusive task can go modal immediately
Out of bounds state.
taskEndModal can only be called in Run Modal state, not %d
Only the active modal task can end modal behavior.
Cannot handle _startModal: in Shutdown state
Cannot have active queued task and active exclusive task at the same time.
Cannot have running independent tasks and an active exclusive task at the same time.
Cannot have active queued task and a modal task at the same time.
Cannot have running independent tasks and a modal task at the same time.
Cannot have active exclusive task in Nominal state.
Cannot have modal task in Nominal state.
We shouldn't be holding independent tasks in Nominal state
We shouldn't have queued exclusive tasks in Nominal state
We shouldn't have any independent tasks that are modal in Nominal state
Cannot have active exclusive task in Hold for Exclusive state.
Should not have any modal task active in Hold for Exclusive state
Should have at least one queued exclusive task in Hold for Exclusive state
Cannot have running independent tasks in Run Exclusive state.
Cannot have active queued task in Run Exclusive state.
Cannot have active modal task in Hold for Modal state.
Should have at least one queued modal task in Hold for Modal state.
Should not be running other independent tasks in Run Modal state.
Should not be running other queued task in Run Modal state.
Only the exclusive task can currently go modal.
Nominal
Hold for Exclusive
Run Exclusive
Hold for Modal
Run Modal
Shutdown
Out of bounds
GenericDataAccessAccount
GenericDataAccessAccountWithLogging
Subscribed Calendars
com.apple.dataaccessd.changeinserter
com.apple.dataaccess
CardDAV-dbhelper
com.apple.dataaccessd.abDBQueue
com.apple.dataaccessd.noteDBQueue
DALocalDBHelper.m
You can't ask for an AddressBook db if you didn't open it.  Geez! %@
ClientIdentifier can not be nil
<unknown>
local
You can't ask for a note db if you didn't open it.  Geez! %@
DAPowerAssertionManager.m
%s must have a non-nil context
%s must have a non-nil group identifier
Shared DAPowerAssertionManager object %@:
Contexts asserting power: %@
Contexts held aside: %@
Active Assertions: %@
com.apple.DataAccess:%d-%p
^{__CFArray=}8@?0
ASAccountActor.m
Must be called on subclass: %s
ESAccountActor
Class getESAccountActorClass(void)_block_invoke
com.apple.cfnetwork
apple
/Microsoft-Server-ActiveSync
q24@?0@8@16
com.apple.dataaccess.checkHolidayCalendarAccount
containerWithExternalIdentifier:forAccountWithExternalIdentifier is abstract
allContainers is abstract
allContainersForAccountWithExternalIdentifier is abstract
createNewContainerWithType is abstract
setDefaultContainer:onlyIfNotSet: is abstract
setLastSyncDateForContainer: is abstract
mergeAllRecordIntoContainer: is abstract
DADataHandlers.m
Can't initialize a DADataHandler with a nil changeTrackingID
setLastSyncDateForContainer
@"EKEventStore"8@?0
v32@?0@"DALocalDBWatcherCalConcernedParty"8@?<v@?>16^B24
DALocalDBWatcher.m
Someone registered themselves for the Note notification more than once.  Why?  Bad guy %@
_CalDatabaseChangedNotification
NoteContextDarwinNotificationWithLoggedChanges
%@: waiter %@ wants dataclasses %lx
DALocalDBGateKeeper.m
DALocalDBGateKeeper is shutting down, but the following account is still holding the dataclass lock for dataclass %lx.  Account %@
DALocalDBGateKeeper is shutting down, but the following accounts are still waiting on the dataclass lock for dataclass %lx.  Account %@
DALocalDBGateKeeper is shutting down, but the following accounts are still waiting on the dataclass lock for dataclass type %lx.  Account %@
Waiter %@ tried to relinquish a lock for data class %ld, but it was held by another waiter: %@
_contactsLockHolder %@
_contactsWaiters %@
_waiterIDsExpectingContactsLock %@
_eventsLockHolder %@
_eventsWaiters %@
_waiterIDsExpectingEventsLock %@
_notesLockHolder %@
_notesWaiters %@
_waiterIDsExpectingNotesLock %@
DAUserNotificationUtilities.m
Invalid parameter not satisfying: %@
notification != nil
completionBlock != nil
runLoop != nil
Already waiting on this notification %p
fetchedAccountWithExternalIdentifier: is abstract
accountByCreatingAccountWithExternalIdentifier: is abstract
allAccounts: is abstract
accountForContainerWithIdentifier: is abstract
com.apple.dataaccess.dataaccessd
kDAMigrationBuildVersionKey
BuildVersion
.me.com
.icloud.com
v24@?0@8^B16
v12@?0i8
com.apple.dataaccess.trustChallengeQueue
Not 
v12@?0B8
DAABLegacyAccount cannot update CNSaveRequest
com.apple.dataaccess.DATrafficQueue
^{__CFString=}76@?0i8^{__CFDate=}12^{__CFString=}20^{__CFString=}28r*36r*44Q52^v60^{__CFString=}68
DALogLevel
SBLockStateChanged
v32@?0@"NSString"8@"NSNumber"16^B24
com.apple.dataaccessd.sblockqueue
com.apple.frontboard.visibility
v32@?0@"RBSProcessMonitor"8@"RBSProcessHandle"16@"RBSProcessStateUpdate"24
v16@?0@"<RBSProcessMonitorConfiguring>"8
------
DAPriorityManager: 
[%@ 
Refresh: 0x%lx 
UI: 0x%lx 
------
DAPriorityManager.m
You can't request priority with a nil client
Background
Refresh
DAContactsContainer does not support asSource
Could not load source: %ld
/AppleInternal/Library/Frameworks/CalendarDiagnostics.framework/CalendarDiagnostics
IPHONE_SIMULATOR_ROOT
CFFIXED_USER_HOME
RestrictionTimeout
NumFailures
com.apple.dataaccess.babysitter
LastSystemVersion
RestrictedWaiters
RefreshingWaiters
FailedWaiters
DataAccessBabysitterPrefsChanged
DABabysitter.m
Use the shared babysitter, jerk.
DAAccount %p is going away...
Not clearing/refreshing account credentials for account %{public}@ because the credentials have yet to be saved.
Account %{public}@ has DAAccountVersion %d
Account %{public}@ has no DAAccountVersion, and we have no previous build version. Forcing account migration.
Account %{public}@ has no DAAccountVersion, and the previous build version string (%{public}@) could not be parsed. Forcing account migration.
Account %{public}@ has no DAAccountVersion, and the previous build version string (%{public}@) appears old enough that we think we need to migrate. Forcing account migration.
Account %{public}@ has no DAAccountVersion, and the previous build version string (%{public}@) appears new enough not to force migration. Assuming DAAccountVersion 1.
Account "%@" (%@) was toggled for a dataclass. Giving it another chance with the babysitter.
%s to be implemented by subclass
%s being ignored by %@
Added consumer %p for task %p to DAAccount %p, count: %lu
Removed consumer for task %p from DAAccount %p, count: %lu
Account %p clientToken: %@
Account %p clientTokenRequestedByServer, new token: %@
Someone wanted to set a nil password, we're editing the live ACAccountCredential
Calling _backingAccountInfo.authenticated = YES for Account identifier %@ and username %@
Could not convert account %{public}@ to persona %@, with error %@
This process needs entitlement com.apple.usermanagerd.persona.background
Could not get current persona context for account %{public}@, with error %@
Changing Host From %@ to %@
Removing contacts data for account %@, because it has a significant change
Found %ld contacts sources to remove
Removing event / todo data for account %@, because it has a significant change
Found %ld calendars to remove
Ignoring Notes orphan check.  You asked for it.
Removing notes data for account %@, because it has a significant change
Found a note account to remove
Failed to save: %@
Notes database was corrupted! Non-fatal at this point, but just barely
Account had significant property change, going to flush local data.
ChangeInfo %@
NewProperties %@
Couldn't get a Yahoo cookie. Not setting authentication headers
Fetching OAuth Credential for Backing Account %@
Account Store Returned A %@ OAuth-token From Credential Object %@ AccountID: %@
Saving account "%@" (%{public}@)
 _backingAccountInfo.authenticated is %d for Account identifier %@ and username %@
Error saving account %@: %@
Not updating non-existing account: %@
Refusing to save account because DAAccountDoNotSave is set to "%@"
Setting identity certificate. Managed by profile? %@
Account %@ (%{public}@) says it is not authenticated. Refreshing to be sure.
Account %@ (%{public}@) is still not authenticated after refreshing.
Good news! Account %@ (%{public}@) is now authenticated after refreshing.
The account %@ (%{public}@) is not marked as authenticated, but it supports authentication, appears to have credentials, and is marked to ignore the isAuthenticated property. We will try to sync this account.
Not attempting request for account %@ because the backing account credential isn't authed %{public}@
Not attempting request for account %{public}@ because the backing account needs to verify terms or is suspended. %{public}@
Not attempting request for account %{public}@ because we don't have access to keychain items with accessibility %d right now
Shutting down the task manager
Canceling task because conditions for on-power mode no longer exist (xpc_activity)
XPC: Saved XPC activity for account %@
XPC: Increment XPC activity continue count to %d for account %@
XPC: Decrement XPC activity continue count to %d for account %@
XPC: Successfully set XPC activity state to XPC_ACTIVITY_STATE_DONE for account %@
XPC: Failed to set XPC activity state to XPC_ACTIVITY_STATE_DONE for account %@
DataAccess is renewing credentials for account %{public}@ by forcing-prompt: %{public}@
Failed to save account when attempting to remove kDAAccountIgnoreAuthenticatedProperty flag: %@
DataAccess successfully renewed credentials for account %{public}@ by forcing-prompt: %{public}@
DataAccess failed to renew credentials for account %{public}@ by forcing-prompt: %{public}@ - renewalResult = %ld
Account had significant property change, going to flush local data.
OldProperties %@
NewProperties %@
Downloading attachments is not supported on account ID %@. AttachmentUUID: %@
Requesting calendar availability is not supported on account with ID [%@].
Cancelling calendar availability requests is not supported on account with ID [%@].
Requesting granted delegates list is not supported on account with ID [%@].
Cancelling granted delegates list requests is not supported on account with ID [%@].
Update granted delegate permission is not supported on account with ID [%@].
Cancelling update granted delegate permission requests is not supported on account with ID [%@].
Performing a calendar directory search is not supported on account with ID [%@].
Cancelling calendar directory searches is not supported on account with ID [%@].  searchID: [%@]
Responding to calendar shares is not supported on account ID %@. calendar ID: %@
Reporting calendar shares as junk is not supported on account ID %@. calendar ID: %@
Fetching office hours is not supported on account ID %{public}@
Setting office hours is not supported on account ID %{public}@
Transaction count is initialized to %d
Transaction count is incremented to %d
Transaction count is decremented to %d
Remaining transactions: %@
Failed to determine database directory path for accountID: %{public}@
Failed to determine database directory path for auxDatabaseID: %{public}@
Creating calendar database for clientID %{public}@
Using already-created calendar database %{public}p
Created calendar database %{public}p
Cal database %p opened for "%{public}@". Connection count is now %lu
connectionCount is > 1, at %lu
Saving calendar database %p%{public}@%{public}@.
Saving calendar database %p%{public}@.  Save failed
Resetting calendar database %p sequence %d
_closeDatabase called too many times with path: %{public}@
Decrementing database %p reference count. connectionCount is %lu. Client identifier is "%{public}@"
Destroying calendar database %p
Someone asked us to yield the calendar database. Bumping up all clients to UI priority
Handling account info mapping %@
Using pre-cached account infos
Going to the disk for our account info providers
We don't know of any bundles for account type "%@"
Could not come up with an account class (name %@) for account %@ parent account %@
Could not come up with an account class (name %@) for account %@
Could not come up with a client account class (name %@) for account %@ parent account %@
Could not come up with a client account class (name %@) for account %@
Could not come up with a daemon account class (name %@) for account %@ parent account %@
Could not come up with a daemon account class (name %@) for account %@
starting daily Analytics reporter
Updating criteria for daily Analytics xpc activity.
unregistering daily Analytics reporter
Reporting Exchange OAuth accounts count
Reported Exchange OAuth accounts count
Loading password for %@
Securing ur sekretz: moving credential for account %@ to accessibility %d
Couldn't change password accessibility, error %d
Could not find a password in the keychain for %@, error %d
Removing credential %@
Setting password for account with UUID %@
Error %d, Can't update password for account %@
Removing password for account with UUID %@
Error %d, Couldn't delete password from keychain for account %@
During Migration, password present. Setting _backingAccountInfo.authenticated = YES for Account identifier %@ and username %@
Saving password for %@
Refusing to save password in keychain because one or more of the necessary fields are null: %@%@%@%@
Error %d while trying to add a password: %@
Refusing to retrieve password from keychain because one or more of the necessary fields are null: %@%@%@
Could not find a password in the keychain for %@
Removing password for %@
Refusing to delete password from keychain because one or more of the necessary fields are null: %@%@%@
error %d: Could not delete password for %@
Setting password for account
Couldn't set password, error %d
Couldn't add password, error %d
Handling account will change %{public}@
Handling account did change %{public}@
Found an account of type %{public}@.  Sanity check enabled dataclasses.
Found an account of type %{public}@.  Sanity check account properties.
Found a parent account of type %{public}@. Sanity checking child accounts for it.
_handleAccountAddOrModify: Failed to save account with identifier %{public}@: %@
Not creating a store for account %{public}@ because it is not appropriate
Not creating a store for account %{public}@ because it is the child of a CalDAV account
Couldn't find an account type with identifier %{public}@, error = %@
Failed to remove orphaned subscribed calendar account %{public}@: error = %@
Failed to save %{public}@ subscribed calendar child account: error = %@
No calendar for account %{public}@, so we can't update it.
Couldn't save calendar with updated properties for change to account %{public}@ (%@): %@
No calendar updates needed for changes to account %{public}@ (%@)
Sanity checking CalDAV account "%@" (%{public}@). This account does %@ use the calendar home sync report. Modified dataclasses are %@.
Account "%@" (%{public}@) is being added with credentials but is not set as authenticated. Marking it to ignore the authenticated property on next sync.
BagURL has changed from %@ to %@, updated account
Found > 1 child accounts of type %@ under account %@.  Keeping %@ and removing %@
Failed to remove duplicate child account %{public}@: error = %@
Failed to add child account: error = %@
Failed to save child account: error = %@
DAMailMessage initWithCoder: should be called on a subclass only
DAMailMessage encodeWithCoder: should be called on a subclass only
Updating oof settings requested on account %@, which does not support it
Retrieving oof settings requested on account %@, which does not support it
Checking if oof settings are supported on account %@, which does not support it
Delay pending search for %f seconds
Delay new search for %f seconds
Search requested on account %@, which does not support it
%s unhandled dataclass %lx
Could not convert ACAccount (%@) to DAAccount
Could not load ACAccounts due to Account Error %@
Applying storage session %@ to request %@
Exception when reading dictionary from %@: %@
Task manager %@ is being deallocated. Ending XPC transaction
Task manager %@ is being deallocated. Ending XPC activity
Exclusive task %@ submitted, to front: %d
Begin an xpc transaction due to exclusive task
DATransaction starting, ID: %@
Retain an xpc activity due to exclusive task for account %@
Independent task %@ submitted
Begin an xpc transaction due to independent task
Retain an xpc activity due to independent task for account %@
Queued task %@ submitted
Begin an xpc transaction due to queued task
Retain an xpc activity due to queued task for account %@
Task %@ aborted
Task Manager %p shutting down with account at %p
Task Manager %p shutting down with state %@
Task manager %@ is being shut down. Ending XPC transaction
Task manager %@ is being shut down. Releasing XPC activity
Task manager %@ has finally drained its queue. Turning opportunistic socket support back on
Task manager %@ has finally drained its queue. Clearing its user initiated sync state
Task manager %@ has finally drained its queue. Ending XPC transaction
Task manager %@ has finally drained its queue. Releasing XPC activity
Task manager %@ has finally drained its queue. Reset automatic fetching state
Task %@ finished.
Early return because task %@ isn't in our collection
Pending tasks are finished for account "%@" (%{public}@)
Task %@ requesting modal
Task %@ ending modal
The _performTask is invoked after taskManager has been shutdown. Canceling %{public}@ %@
The device is in on-power fetch mode, but is no longer on power or on wifi. Canceling %{public}@ %@
The _startModal is invoked after taskManager has been shutdown. Canceling %{public}@ %@
startModal called on task %@
Task Manager %@ transitioning from state: %@
Task Manager %@ transitioning to state: %@
Scheduling selector: %s with argument: %@ in modes %@
Scheduling modal task: %@
Cancelling task %@ with reason %d
Unexpected unsaved contact changes: %lu
abDB is unsupported under modern Contacts framework :%@
Unexpected error committing save request :%@
_registerForAddressBookYieldNotifications is unsupported under modern Contacts framework :%@
Someone asked us to yield the AddressBook database. Bumping up all clients to UI priority
_abOpenDBWithClientIdentifier is unsupported under modern Contacts framework :%@
Creating ab database for client %@
Created ab database %p
Couldn't create ab database: %@
AB database %p opened. Connection count is now %d
_abConnectionCount is > 1, at %d
abOpenDBWithClientIdentifier is unsupported under modern Contacts framework :%@
abOpenDBAsGenericClient is unsupported under modern Contacts framework :%@
abSaveDB is unsupported under modern Contacts framework :%@
_abCloseDB called too many times (connection count %d).  Resetting count to 0
Decrementing database %p reference count. _abConnectionCount is %d
Destroying ab database %p
Creating note database
Created note database %p
Note database %p opened. Connection count is now %d
_noteConnectionCount is > 1, at %d
Saving notes database %p. Connection count is %d
Saving notes database %p failed with error %@
Decrementing database %p reference count. _noteConnectionCount is %d
_noteCloseDB called too many times (connection count %d).  Resetting count to 0
Destroying notes database %p
Setting unit test Address Book Database directory to: %@
Setting unit test Calendar Main Database directory to: %@, Container Provider: %@
Context %@ retaining power assertion with group identifier %@
Context %@ getting added to our held aside contexts, as group %@ is currently dropped
Context %@ releasing power assertion
Context object %@ attempting to release power assertion without first retaining it
Dropping power assertion for group identifier %@
Reattaining power assertion for group identifier %@
DAPowerAssertionManager retained power assertion %@ for context %p, outstanding assertion count %lu
DAPowerAssertionManager unable to get non-nil power assertion %@ for context %p, outstanding assertion count %lu
DAPowerAssertionManager releasing power assertion for context %p, outstanding assertion count %u ontext
Nil container passed to -mergeAllRecordsIntoContainer:shouldInsertChangeHistoryRecords, aborting merge
Could not derive an ABSource from DAContainer in -mergeAllRecordsIntoContainer:shouldInsertChangeHistoryRecords, aborting merge
About to mergeAllRecordsIntoContainer, shouldInsertChangeHistoryRecords: %{public}d 
[mergeAllRecords] Moving all records from source ID %{public}d into source ID %{public}d 
First sync finishing %{public}@, setting lastSyncDate
Another sync finishing %{public}@, not setting lastSyncDate
Could not search for Exchange credentials.  %d
Could not move Exchange credential to apple keychain access group.  %d
Saving child account %@
Child account %@ saved
Child account %@ failed to save: %@
DAAccountMigrator: Waiting for child accounts to save...
Couldn't get a Facebook account type
Upgrading all DataAccess accounts...
Calling DAAccount Upgrader to upgrade Accounts
Account "%@" (%{public}@) was upgraded. Saving account.
DAD: DataAccess Migrator sending notification: com.apple.dataaccess.checkHolidayCalendarAccount
DAD: DataAccess Migrator Request For Performing Asynchronous Data Migration
DAAccountMigrator: Starting Exchange Credential Move to Apple Access Group
DAAccountMigrator: Starting Update Facebook Authentication types.
DAAccountMigrator: Starting Upgrade DAAccount types.
DAAccountMigrator: Writing Device specificID.
DAD: DataAccess Migrator skipped several tasks because user logs in for the first time.
DAAccountMigrator: Posting HolidaySubCal Account Check Notification.
DAAccountMigrator: Updating migration Version.
DAAccountMigrator: Finished Migrator For dataaccess..returning YES/Success.
Setting default container is not implemented yet. <rdar://problem/40239535>
Setting last sync date on container is not implemented yet.
Saving sync status for source with identifier %{public}@: lastSyncStartDate = %{public}@, lastSyncEndDate = %{public}@, canceled=%{public}@ lastSyncError = %@
Initial sync canceled. Clearing start date for source with identifier %{public}@
Failed to save source sync status with source identifier %@. Error = %@
Tried to update status for store with nil externalID
Updating sync status (%@) for source with externalID %{public}@
Tried to update status for store, but could not get a corresponding EKSource for externalID %{public}@. lastSyncError is %@
Tried to update status for calendar with nil externalID
Updating sync status (%@) for calendar with externalID %@
Tried to update status for calendar, but could not get a corresponding EKCalendar for externalID %@ in source with external ID %@. lastSyncError is %@
Saving sync status for calendar with external identifier %@: lastSyncStartDate = %{public}@, lastSyncEndDate = %{public}@, canceled=%{public}@ lastSyncError = %@
Initial sync canceled. Clearing start date for calendar with external identifier %@
Failed to save calendar sync status with calendar external ID %@. Error = %@
__CalDatabaseChangedExternally - comparing current sequence number %d to saved sequence number %d in database: %@
Notifying agents that the Calendar database has changed.
No database for account: %{public}@
no path for database: %p, account: %{public}@
No dbInfo for path: %{public}@, database: %p, account: %{public}@
Registering concerned cal party: %@ for account: %{public}@
__NotesChanged externally.
Received darwin notification %@
Aborting locks for dataclasses %lx to %@
Notifying waiters for dataclasses %ldd
Granting locks for dataclasses %lx to %@
registerWaiter %@ forDataclassLocks %lx
Not allowing waiter %@ to get the gate, as we're in a holding pattern
Letting everyone know we're done with contacts
Not notifying for contacts.  Claimed %d waiters count %lu holder %p expectant waiters %lu
Letting everyone know we're done with events
Not notifying for events.  Claimed %d waiters count %lu holder %p expectant waiters %lu
Letting everyone know we're done with notes
Not notifying for notes.  Claimed %d waiters count %lu holder %p expectant waiters %lu
unregisterWaiterForDataclassLocks %@
relinquishing locks for waiter %@ dataclasses %lx
Claiming ownership of dataclasses 0x%lx
DATransaction exiting, ID: %@
Couldn't schedule response for notification %@
No completion block for notification %@
DAMigrationIsNeeded : DataAccess Migrator Comparing Version %@ With %@
DAUpdateMigrationVersion : DataAccess Migrator Current Version %@
Checking to see if we should trust the server certificate
Terminating connection because server does not have an SSL certificate. Host: %@
Account now requires trusted certificate. Setting %@ to YES for account: %@
Got SecTrustEvaluate result %u. Allowing.
Got SecTrustEvaluate result %u. Checking if needing to prompt.
Terminating connection and warning user about an untrusted SSL certificate. The account requires trusted SSL certificate. Account: %@
Account does not require trusted certificate. Prompting user. Account: %@
Got SecTrustEvaluate result %u. Denying.
IT'S A TARP!!! We received an untrusted cert for %@. You really think we're going to fall for that?
prompting certificate for host: %@
got prompt response %d
Grabbing trust challenge lock...
Lock acquired. Checking trust.
%@Continuing connection
App state changed; %@ now has foreground status: %{BOOL}i. Foreground dataclasses are 0x%lx
DAPERF: DAPriorityManager is changing the priority to %d
Client %@ requested priority %@ for dataclasses 0x%lx
Bumping all client priority requests for dataclasses 0x%lx to UI. Open bar, dude!
Babysitter: The OS version is different. Giving all accounts a second chance at life.
Babysitter: Noting that waiter %@ failed %d times for operation %@
===================
Babysitter: You're once, twice, %d times a failure. Disabling account with ID %@ until it stops crashing. Please file a bug for any dataaccessd crashes you find.
===================
===================
Babysitter: Waiter %@ has crashed %d times now. Since you have the babysitter disabled, we're going to assume you know what you're doing and not disable the waiter. Consider yourself warned.
===================
Restricted accounts are: %@
Babysitter: Marking waiter %@ as performing operation "%@" (attempt #%d)
Babysitter: Decrementing refresh count for all operations on account %@
Babysitter: Decrementing refresh count for operation "%@" on account %@
Babysitter: It's been long enough, we're going to give account %@ another try. Let's hope it doesn't crash this time.
softlink:o:path:/System/Library/PrivateFrameworks/ExchangeSync.framework/ExchangeSync
softlink:o:path:/System/Library/PrivateFrameworks/ExchangeSync.framework/ExchangeSync
softlink:o:path:/System/Library/PrivateFrameworks/ExchangeSync.framework/ExchangeSync
DAAccount
TrustHandling
HSA2Support
CoreDAVLogging
AuthenticationExtensions
Deprecated
EventsFolderItemsSyncContext
EventsSupport
DATransactionMonitor
ChillOutARC
ContactFolderItemsSyncContext
ContactsSupport
MailFolder
MailFolderSupport
InvitationSupport
DACalDBHelper
DAAccountLoader
DAAccountClassNames
DAAction
NSSecureCoding
NSCoding
DAMoveAction
DAEditPropertyAction
DAResponse
DAAnalyticsReporter
DAABLegacyContainer
DAContainer
DACardDAVRecord
NSObject
DAFolder
DAAccountMonitor
DAKeychain
DAKeychainAdditions
DAKeychainAddition
OldAndBusted
DAAccountChangeUpdaterAccountStoreWrapper
DAAccountChangeHandlerAccountStoreUpdater
DASubCalAccount
DAAccountChangeHandler
DAMailboxRequest
DAMailboxSetFlagsRequest
DAMailboxGetUpdatesRequest
DAMailboxDeleteMessageRequest
DAMailboxFetchMessageRequest
DAMailboxFetchSearchResultRequest
DAMessageMoveRequest
DAMessageFetchAttachmentRequest
DADraftMessageRequest
DAMoveResponse
DAResolveRecipientsRequest
DAResolvedRecipient
DAMailMessage
Email
Settings
Searching
SearchSubclassing
ToDosSupport
DAContactsBasedAccount
DAContactsAccount
DAExtensions
DelayedPerformWithNullSource
DAHexString
DALeastInfoURLExtension
DADAExtendedDescription
DATaskManager
DALocalDBHelper
DAPowerAssertionManager
_DAABLegacyContainerProvider
ASAccountActor
ASAccountActorMessages
DAAccountUpgrader
DAContainerProvider
DADataHandler
NotesSupport
_DAContactsContainerProvider
DAStoreSyncStatusUpdater
DALocalDBWatcher
DALocalDBWatcherDBInfo
DALocalDBWatcherCalConcernedParty
NSCopying
DARunLoopRegistry
DAWaiterWrapper
DALocalDBGateKeeper
_DAContactsAccountContactsProvider
DATransaction
DAAggDReporter
DAUserNotificationUtilities
DAUserNotificationInfo
DAiCalendarLogger
ICSLoggingDelegate
DAContactsAccountProvider
DATrustHandler
DAABLegacyAccount
DATrafficLogger
DAPriorityRequest
DAPriorityManager
DAContactsContainer
DABabysitter
DAActivity
_DAContactsAccountABLegacyProvider
CDVIsSafeRedirectForRequestURL:
CDVRawPath
T@"DAMailMessage",&,N,V_message
DAAccountDoNotSaveReason
T@"NSArray",R,N
DAAccountPrincipalPath
T@"NSString",&,N,V_buildVersion
DACompactDescription
T@,&,N,V_forwardedAttendeeUUIDs
DAManagedDefaultForKey:
TQ,N,V_offFlags
DAObjectForKeyCaseInsensitive:
_agentClassName
OAuth2Token
_cachedAppState
SubCalSubscriptionURLKey
_codeForLastSyncError:userInfo:
T#,R
_destID
T@"<DADataclassLockWatcher>",&,N,V_eventsLockHolder
_emailAddresses
T@"<DADataclassLockWatcher>",&,N,V_waiter
_itemChangeType
T@"<DATask>",&,N,V_activeModalTask
_mergedFreeBusy
T@"<DATask>",&,N,V_modalHeldActiveQueuedTask
_parentFolderID
T@"<DATrustHandlerDelegate>",W,N,V_delegate
_processMonitor
T@"CNAccount",R,N,V_account
_setNewPriority
T@"CNContactStore",&,N,V_contactStore
_sourceServerId
T@"CNMutableContainer",R,N,V_mutableContainer
_storageSession
T@"DACalDBHelper",&,N,V_calDBHelper
_waiterIDsExpectingContactsLock
T@"DAMessageMoveRequest",&,N,V_origRequest
abGroupChangeId
T@"DATaskManager",R,N,V_taskManager
accountDidChangeWithChangeInfo:
T@"NSArray",&,N,V_emailAddresses
addClientToken:
T@"NSCountedSet",&,N,V_heldAsideContexts
allKeys
T@"NSData",R,C,N
T@"NSDate",&,N,V_lastQueryStartedTime
bundleWithPath:
T@"NSDictionary",R,N
cancelOfficeHoursRequestWithID:
T@"NSMapTable",&,N,V_clientsToPriorityRequests
clientAccountClassForACAccount:
T@"NSMapTable",&,N,V_contextToPowerAssertionRef
closeDatabaseForAccountID:save:
T@"NSMutableArray",&,N,V_contactsWaiters
contactsFolders
T@"NSMutableArray",&,N,V_mQueuedTasks
containsObject:
T@"NSMutableArray",&,N,V_pendingQueries
countForObject:
T@"NSMutableArray",&,N,V_queuedModalTasks
customSignature
T@"NSMutableArray",&,N,V_transactions
daemonAccountClassForACAccount:
T@"NSMutableDictionary",&,N,V_acAccountTypeToAccountFrameworkSubpath
enabled
T@"NSMutableDictionary",&,N,V_acParentAccountTypeToChildAccountTypes
externalSyncTag
T@"NSMutableDictionary",&,N,V_cachedAppState
giveAccountWithIDAnotherChance:
T@"NSMutableDictionary",&,N,V_failedWaiters
handler
T@"NSMutableDictionary",&,N,V_mResolvedEmailToX509Certs
identityPersist
T@"NSMutableDictionary",&,N,V_restrictedWaiters
initWithStatus:sourceID:destID:
T@"NSMutableSet",&,N,V_heldIndependentTasks
isCalDAVAccount
T@"NSMutableSet",&,N,V_modalHeldIndependentTasks
isGoogleAccount
T@"NSMutableSet",&,N,V_waiterIDsExpectingEventsLock
isLocal
T@"NSObject<OS_dispatch_queue>",&,N,V_accountsQueue
lastSyncEndDate
T@"NSObject<OS_dispatch_queue>",N,V_callbackQueue
localizedInvalidPasswordMessage
T@"NSRunLoop",R,N
mapTableWithWeakToStrongObjects
T@"NSString",&,N,V_accountClassName
markedAsDefault
T@"NSString",&,N,V_clientAccountClassName
message
T@"NSString",&,N,V_daemonAccountClassName
notesLockHolder
T@"NSString",&,N,V_familyDelegateACAccountID
onFlags
T@"NSString",&,N,V_filename
preview
T@"NSString",&,N,V_sourceContainerId
protocolVersion
T@"NSString",&,N,V_unitTestHackRunLoopMode
refreshInterval
T@"NSString",C,N,V_attachmentName
replyTo
T@"NSString",C,N,V_destID
retrieveOofSettingsForConsumer:
T@"NSString",C,N,V_folderName
saveFetchingAutomaticallyState:
T@"NSString",C,N,V_groupIdentifier
T@"NSString",C,N,V_message
setCalDBHelper:
T@"NSString",C,N,V_parentFolderID
setDisplayName:
T@"NSString",C,N,V_serverID
setIgnoresGuardianRestrictions:
T@"NSString",C,N,V_sourceID
setRequestType:
T@"NSString",R,C
setTaskManager:
T@"NSString",R,N
setWaiterIDsExpectingNotesLock:
T@"NSString",R,N,V_label
shareResponseFinishedWithError:
T@"NSString",R,N,V_propertyNamespace
shouldUseCalendarHomeSyncReport
T@"NSString",R,N,V_value
startup
T@"NSTimer",&,N,V_userInitiatedSyncTimer
stringByAppendingPathExtension:
T@"NSURL",C,N
subject
T@"NoteContext",&,N,V_noteDB
syncEndedForCalendar:withError:
T@,&,N,S_setChangedItem:,V_changedItem
updateExistingAccountProperties
T@,&,N,V_forwardedAttendees
T@,&,N,V_serverId
watcher
.cxx_destruct
CDVObjectForKeyCaseInsensitive:
CalDAVSubscribedCalendarsKey
T@"NSArray",C,N
DAAccountIdentifiersToIgnoreForUniquenessCheck
T@"NSCountedSet",&,N,V_contexts
DAAccountSavePreflighted
T@"NSString",R,N,V_propertyName
DAExtendedDescription
TB,N,V_claimedOwnershipOfEvents
DAMergeOverrideDictionary:
Ti,N,V_changeId
DARequestByApplyingStorageSession:
_attachmentName
SubCalFilterAlarmsKey
_cnChangeAnchor
SubCalTitleKey
_concernedParty
T@"<DADataclassLockWatcher>",&,N,V_contactsLockHolder
_ekAccountErrorFromDAErrorCode:
T@"<DADataclassLockWatcher>",&,N,V_notesLockHolder
_hasTasksIndicatingARunningSync
T@"<DATask>",&,N,V_activeExclusiveTask
_longID
T@"<DATask>",&,N,V_activeQueuedTask
_noteDB
T@"<DATransactionMonitorDelegate>",W,N,V_transactionMonitorDelegate
_pendingQueries
T@"ACAccount",R,N,V_backingAccountInfo
_scheduleSelector:withArgument:
T@"CNChangeHistoryAnchor",&,N,V_cnChangeAnchor
_source
T@"CNContactStore",R,N,V_contactStore
_status
T@"DAAccount",W,N,V_account
_waiter
T@"DALocalDBWatcher",&,N,V_watcher
abDBThrowOnNil:
T@"DAStatusReport",&,N,V_statusReport
account
T@"DATrustHandler",&,N,V_trustHandler
activeModalTask
T@"NSArray",R,N,V_appIdsForPasswordPrompt
addSaveRequest:
T@"NSData",&,N
arrayWithArray:
T@"NSDate",&,N,V_endTime
bundleForClass:
T@"NSDate",&,N,V_startTime
calendarWithExternalIdentifier:
T@"NSHashTable",&,N,V_accounts
cancelTask:withUnderlyingError:
T@"NSMapTable",&,N,V_contextToGroupIdentifier
closeDBAndSave:
T@"NSMapTable",&,N,V_groupIdentifierToContexts
constraintsPath
T@"NSMutableArray",&,N,V_eventsWaiters
contactsWaiters
T@"NSMutableArray",&,N,V_notesWaiters
context
T@"NSMutableArray",&,N,V_queuedExclusiveTasks
currentPriority
T@"NSMutableArray",&,N,V_saveRequests
da_URLWithScheme:host:port:uri:
T@"NSMutableDictionary",&,N,V_acAccountTypeToAccountDaemonBundleSubpath
dealloc
T@"NSMutableDictionary",&,N,V_acAccountTypeToClassNames
endTime
T@"NSMutableDictionary",&,N,V_blocksByConcernedParty
flagged
T@"NSMutableDictionary",&,N,V_dataclassPropertyURLsByDataclass
groupIdentifier
T@"NSMutableDictionary",&,N,V_haveWarnedAboutCertDict
hostWithoutPath
T@"NSMutableDictionary",&,N,V_refreshingWaiters
initWithFormat:
T@"NSMutableSet",&,N,V_heldAsideGroupIdentifiers
isAuthenticated
T@"NSMutableSet",&,N,V_independentTasks
isDraft
T@"NSMutableSet",&,N,V_waiterIDsExpectingContactsLock
isGroup
T@"NSMutableSet",&,N,V_waiterIDsExpectingNotesLock
isProxy
T@"NSObject<OS_dispatch_queue>",&,N,V_pendingQueryQueue
loadKeychainInformationsForURL:
T@"NSObject<OS_os_log>",R,N
lowercaseString
T@"NSSet",R,N
markForDeletion
T@"NSString",&,N,V_agentClassName
maxSize
T@"NSString",&,N,V_clientIdentifier
monitorAccount:
T@"NSString",&,N,V_destinationContainerId
numberWithBool:
T@"NSString",&,N,V_familyDelegateAltDSID
parentMailboxID
T@"NSString",&,N,V_mergedFreeBusy
protectionSpace
T@"NSString",&,N,V_sourceServerId
refresh
T@"NSString",C,N
release
T@"NSString",C,N,V_changeTrackingID
resumeMonitoringFoldersWithIDs:
T@"NSString",C,N,V_folderID
saveAccountPropertiesWithError:
T@"NSString",C,N,V_fromFolder
sentItemsFolder
T@"NSString",C,N,V_longID
setAccountType:
T@"NSString",C,N,V_messageID
setDataclasses:
T@"NSString",C,N,V_powerAssertionGroupID
setHaveWarnedAboutCert:forHost:
T@"NSString",C,N,V_sourceApplicationBundleIdentifier
setOrigRequest:
T@"NSString",C,N,V_toFolder
setStripAlarms:
T@"NSString",R,C,N
setToDosNumberOfPastDaysToSync:
T@"NSString",R,N,V_accountID
setWithObjects:
T@"NSString",R,N,V_path
sharedDBWatcher
T@"NSString",R,N,V_transactionId
sources
T@"NSTimer",&,N,V_managerIdleTimer
stringByAppendingPathComponent:
T@"NSTimer",&,N,V_xpcTransactionTimer
subcalAccountID
T@"NSURL",R,N
subscriptionURL
T@"RBSProcessMonitor",&,N,V_processMonitor
syncTag
T@,&,N,V_context
uppercaseString
T@,&,N,V_instanceId
userAgentHeader
T@,R,W,N,V_concernedParty
T@?,C,N,V_calUnitTestCallbackBlock
T@?,C,N,V_completionHandler
T@?,C,N,V_handler
TB,N
TB,N,GisChangeHistoryTruncated,V_changeHistoryTruncated
TB,N,GisGuardianRestricted
TB,N,GisGuardianStateDirty
TB,N,V_claimedOwnershipOfContacts
TB,N,V_claimedOwnershipOfNotes
TB,N,V_hasRemoteChanges
TB,N,V_ignoresGuardianRestrictions
TB,N,V_isDefault
TB,N,V_isValidating
TB,N,V_markedAsDefault
TB,N,V_markedForDeletion
TB,N,V_retrieveAvailablilty
TB,N,V_retrieveCertificates
TB,N,V_send
TB,N,V_shouldUseOpportunisticSockets
TB,N,V_wasUserInitiated
TB,R
TB,R,N
TB,R,N,V_shouldFailAllTasks
TQ,N,V_itemChangeType
TQ,N,V_latestSequenceNumber
TQ,N,V_onFlags
TQ,R
T^v,N,V_abDB
T^v,N,V_container
T^v,R,N,V_account
T^v,R,N,V_addressBook
T^v,R,N,V_source
Td,N
Ti,N,SsetDAAccountVersion:
Ti,N,V_abConnectionCount
Ti,N,V_abGroupChangeId
Ti,N,V_abPersonChangeId
Ti,N,V_bodyFormat
Ti,N,V_calAlarmChangeId
Ti,N,V_calAttachmentChangeId
Ti,N,V_calAttendeeChangeId
Ti,N,V_calEventChangeId
Ti,N,V_calRecurrenceChangeId
Ti,N,V_highestSequenceNumber
Ti,N,V_lastSavedSequenceNumber
Ti,N,V_maxSize
Ti,N,V_noteConnectionCount
Ti,N,V_requestType
Ti,N,V_state
Ti,N,V_status
Ti,N,V_transactionCount
Ti,R,N
Ti,R,N,V_currentPriority
Ti,R,N,V_waiterNum
Tq,N
Tq,N,V_UIDataclasses
Tq,N,V_availabilityStatus
Tq,N,V_certificatesStatus
Tq,N,V_dataclass
Tq,N,V_dataclasses
Tq,N,V_foregroundDataclasses
Tq,N,V_refreshDataclasses
Tq,N,V_status
Tq,R,N
UIDataclasses
URLByRemovingLastPathComponent
URLWithString:
URLWithString:relativeToURL:
URLWithUsername:
URLWithUsername:withPassword:
URLWithoutUsername
UTF8String
UUID
UUIDString
_CFURLRequest
_DACopyMutableAttributesForAccountWithPersistentUUID:accessibility:
_DACopyMutableQueryForAccountWithPersistentUUID:
_UIDataclasses
_abConnectionCount
_abDB
_abDBQueue
_abGroupChangeId
_abOpenDBWithClientIdentifier:
_abPersonChangeId
_abortWaiterForWrappers:
_acAccountTypeToAccountDaemonBundleSubpath
_acAccountTypeToAccountFrameworkSubpath
_acAccountTypeToClassNames
_acParentAccountTypeToChildAccountTypes
_account
_accountClassName
_accountErrorCodeForNSError:
_accountID
_accountPasswordChanged
_accountTypeWithIdentifier:inStore:
_accounts
_accountsQueue
_actionForTrust:host:service:
_activeExclusiveTask
_activeModalTask
_activeQueuedTask
_addAccountInfo:forFrameworkNamed:
_addressBook
_appIdsForPasswordPrompt
_availabilityStatus
_backingAccountInfo
_blocksByConcernedParty
_bodyFormat
_buildVersion
_cachedDatabaseForAccountID:path:
_cachedDatabaseForAuxDatabaseRef:path:
_cachedMainDatabasePath
_calAlarmChangeId
_calAttachmentChangeId
_calAttendeeChangeId
_calDBHelper
_calDBInfosByPath
_calDBQueue
_calEventChangeId
_calRecurrenceChangeId
_calUnitTestCallbackBlock
_callbackQueue
_canWakenWaiter:
_cancelTasksWithReason:
_canonicalizePath:
_certificatesStatus
_changeHistoryTruncated
_changeId
_changeTrackingID
_changedItem
_claimedOwnershipOfContacts
_claimedOwnershipOfEvents
_claimedOwnershipOfNotes
_cleanupStoreForDisabledAccount:inStore:
_clearCachedCredentials
_clearUserInitiatedSyncTimer
_clientAccountClassName
_clientIdentifier
_clientToken
_clientsToPriorityRequests
_closeDatabase:path:
_completionHandler
_concernedNotePartyToBlockMap
_connectionCountsByPath
_consumers
_contactStore
_contactsLockHolder
_contactsWaiters
_container
_containerPathsByAccountID
_containerPathsByAuxDatabaseID
_context
_contextToGroupIdentifier
_contextToPowerAssertionRef
_contexts
_continueCount
_currentPriority
_daAccountsWithAccountTypeIdentifiers:enabledForDADataclasses:filterOnDataclasses:withCompletion:
_daActivity
_daKeychainAccessibilityForSecAccessibility:
_daemonAccountClassName
_daemonDiedNotification:
_databasesByContainerPath
_dataclass
_dataclassPropertyURLsByDataclass
_dataclasses
_dbInfoForAccountID:create:
_decrementRefreshCountForWaiter:forOperationWithName:
_decrementRefreshCountForWaiterID:operationName:
_delegate
_dequeueQuery
_destinationContainerId
_ekAccountErrorFromCoreDAVErrorCode:
_ekAccountErrorFromCoreDAVHTTPStatusCode:
_ekAccountErrorFromDAValidationErrorCode:
_ekAccountErrorFromSubCalErrorCode:
_ekAccountErrorFromURLError:
_endTime
_endXpcTransaction
_ensureCustomLogFile
_eventStore
_eventStorePurger
_eventsLockHolder
_eventsWaiters
_failedWaiters
_familyDelegateACAccountID
_familyDelegateAltDSID
_filename
_findPrivateFrameworks
_findSubscribedCalendarForAccount:inEventStore:
_folderHierarchyChanged
_folderID
_folderName
_folderUpdatedNotification:
_foldersThatExternalClientsCareAboutChanged
_foregroundDataclasses
_forwardedAttendeeUUIDs
_forwardedAttendees
_fromFolder
_groupIdentifier
_groupIdentifierToContexts
_handleAccountAddOrModify:withChangeInfo:inStore:accountUpdater:
_handleAccountDelete:withChangeInfo:inStore:
_handleCalChangeNotification
_handleCalDAVAccountModifiedByDataAccess:withChangeInfo:inStore:accountUpdater:
_handleChangeToSubscribedCalendar:withChangeInfo:inStore:accountUpdater:
_handleSignificantPropertyChanges:
_handler
_hasInitted
_hasRemoteChanges
_hasTasksForcingNetworkConnection
_haveWarnedAboutCertDict
_heldAsideContexts
_heldAsideGroupIdentifiers
_heldIndependentTasks
_highestSequenceNumber
_ignoresGuardianRestrictions
_incrementRefreshCountForWaiterID:operationName:
_independentTasks
_init
_initOptions
_initWithCFURLRequest:
_instanceId
_isCanceledError:
_isDefault
_isFetchingAutomatically
_isIdentityManagedByProfile
_isValidating
_label
_lastQueryStartedTime
_lastSavedSequenceNumber
_latestSequenceNumber
_leafAccountTypes
_loadFrameworkAtSubpath:
_logSyncEnd
_mQueuedTasks
_mResolvedEmailToX509Certs
_mainDatabasePath
_makeStateTransition
_managerIdleTimer
_mappedAccountErrorFromError:
_markedAsDefault
_markedForDeletion
_maxSize
_message
_messageID
_modalHeldActiveQueuedTask
_modalHeldIndependentTasks
_moveExchangeCredentialsToAppleAccessGroup
_mutableContainer
_newASPolicyKeyNotification:
_noteConnectionCount
_noteDBQueue
_noteWatcher
_notesChangedExternally
_notesLockHolder
_notesWaiters
_notifyDaHolidaySubCalAccount
_notifyWaitersForDataclasses:
_offFlags
_onFlags
_openDatabaseForPath:clientID:createdDatabaseToConsume:
_origRequest
_path
_pathForAccountID:createdDatabase:
_pendingQueryQueue
_performBlockWithGenericClientDBForAccount:block:
_performTask:
_pickAccountToKeepWithAccount:andAccount:
_populateVersionDescriptions
_powerAssertionGroupID
_propertyName
_propertyNamespace
_queue
_queuedExclusiveTasks
_queuedModalTasks
_reactivateHeldTasks
_reallyCancelAllSearchQueries
_reallyCancelPendingSearchQuery:
_reallyCancelSearchQuery:
_reallyPerformSearchQuery:
_reallySearchQueriesRunning
_recalculatePriority
_refreshCredential
_refreshDataclasses
_refreshingWaiters
_registerForAddressBookYieldNotifications
_registerForCalendarYieldNotificationsForDB:
_registerWaiter:forDataclassLocks:preempt:completionHandler:
_releaseAssertionForContext:
_releasePowerAssertionForTask:
_reloadBabysitterProperties
_requestCancelTasksWithReason:
_requestType
_restrictedWaiters
_retainAssertionForContext:
_retainPowerAssertionForTask:
_retrieveAvailablilty
_retrieveCertificates
_sanityCheckCalDAVAccount:accountChangeInfo:
_sanityCheckChildAccountOfType:withParent:accountChangeInfo:inStore:updater:
_sanityCheckChildDAVAccount:withParent:accountChangeInfo:
_sanityCheckChildSubCalAccountsWithParent:inStore:accountUpdater:
_sanityCheckEnabledDataclassesOnExchangeAccountInfo:
_sanityCheckSubscribedCalendarAccountInfo:
_saveDatabase:path:fushCaches:
_saveRequests
_schedulePerformTask:
_scheduleStartModal:
_secAccessibilityForDAKeychainAccessibility:
_send
_sendAllClearNotifications
_serverID
_serverId
_serverSuffixesToAlwaysFail
_setChangedItem:
_setForegroundDataclasses:
_setPersistentUUID:
_setUnitTestHackRunLoopMode:
_setupStoreForNewAccount:
_shouldFailAllTasks
_shouldUseOpportunisticSockets
_sourceApplicationBundleIdentifier
_sourceContainerId
_sourceID
_startModal:
_startTime
_state
_statusReport
_store
_supportedChildAccountTypesForParentAccountType:
_taskForcesNetworking:
_taskInQueueForcesNetworkConnection:
_taskManager
_toFolder
_transaction
_transactionCount
_transactionId
_transactionMonitorDelegate
_transactions
_trustHandler
_unitTestHackRunLoopMode
_updateCalendarFromAccount:
_updateFacebookAccountAuthenticationTypes
_updateForegroundDataclasses
_updateStatusForCalendar:lastSyncStartDate:lastSyncEndDate:lastSyncError:canceled:
_updateStatusForCalendarWithExternalID:sourceExternalID:lastSyncStartDate:lastSyncEndDate:lastSyncError:canceled:
_updateStatusForSource:lastSyncStartDate:lastSyncEndDate:lastSyncError:canceled:
_updateStatusForStoreWithExternalID:lastSyncStartDate:lastSyncEndDate:lastSyncError:canceled:
_updateSubscribedCalendarAccountProperties:
_upgradeDAAccounts
_useFakeDescriptions
_useOpportunisticSocketsAgain
_userInitiatedSyncTimer
_value
_version
_waiterIDsExpectingEventsLock
_waiterIDsExpectingNotesLock
_waiterNum
_wasUserInitiated
_watcher
_webLoginRequestedAtURL:reasonString:inQueue:completionBlock:
_writeDeviceSpecificID
_xpcActivity
_xpcTransactionTimer
aa_isSuspended
abChangeTrackingID
abCloseDBAndSave:
abConnectionCount
abConstraintPlistPath
abDB
abDefaultAccountInfoSuitableForLogging
abOpenDBAsGenericClient
abOpenDBWithClientIdentifier:
abPersonChangeId
abProcessAddedImages
abProcessAddedRecords
abSaveDB
abSetTestABDBDir:
abTestABDBDir
abValidateDefaultSource
absoluteString
absoluteURL
acAccountTypeToAccountDaemonBundleSubpath
acAccountTypeToAccountFrameworkSubpath
acAccountTypeToClassNames
acParentAccountTypeToChildAccountTypes
account:isValid:validationError:
accountBoolPropertyForKey:
accountByCreatingAccountWithExternalIdentifier:
accountClassForACAccount:
accountClassName
accountContainsEmailAddress:
accountDescription
accountDidChangeFromOldAccountInfo:
accountForAccountId:
accountForContainerWithIdentifier:
accountHasSignificantPropertyChangesFromOldAccountInfo:
accountHasSignificantPropertyChangesWithChangeInfo:
accountID
accountIdentifier
accountIdentifiersEnabledForDataclasses:withAccountTypeIdentifiers:completion:
accountIntPropertyForKey:
accountPersistentUUID
accountProperties
accountPropertyForKey:
accountShouldContinue:
accountType
accountTypeIdentifier
accountTypeWithAccountTypeIdentifier:
accountTypeWithAccountTypeIdentifier:error:
accountTypeWithIdentifier:completion:
accountWithIDShouldContinue:
accountWithIdentifier:
accountWithIdentifier:completion:
accounts
accountsMatchingPredicate:error:
accountsProviderWithDBHelper:
accountsQueue
accountsWithAccountType:
accountsWithAccountType:completion:
accountsWithAccountTypeIdentifiers:error:
acquireCachedEventStoreOrCreate:
actionForTrust:forHost:andService:
activeExclusiveTask
activeQueuedTask
addAccount:
addAccount:withCompletionHandler:
addBlock:forConcernedParty:account:
addCert:forEmailAddress:
addObject:
addObjectsFromArray:
addObserver:selector:name:
addObserver:selector:name:object:
addTimer:forMode:
addToCoreDAVLoggingDelegates
addUsernameToURL:
additionalHeaderValues
addressBook
agentClassForACAccount:
agentClassName
allAccounts
allBlocks
allConcernedParties
allContainers
allContainersForAccountWithExternalIdentifier:
allCredentials
allObjects
allOpenDatabases
allTasks
allValues
allowTrust:forHost:service:
allowsKeyedCoding
appIDsToDataclasses
appIdsForPasswordPrompt
appWithBundleID:isNowRunningAndVisible:
appendBytes:length:
appendData:
appendFormat:
appendString:
arePropertiesReadonly
array
arrayWithObjects:count:
asContainer
asSource
attachmentName
attachments
authenticationType
autodiscoverAccountConfigurationWithConsumer:
autorelease
availabilityStatus
babysitterEnabled
backingAccountInfo
beginDownloadingAttachmentWithUUID:consumer:
blocksByConcernedParty
body
bodyFormat
bodySize
bodyTruncated
bodyType
boolForKey:
boolValue
buildVersion
bumpDataclassesToUIPriority:
bundle
bytes
cTag
cachedAppState
calAlarmChangeId
calAttachmentChangeId
calAttendeeChangeId
calCloseDatabaseForAccountID:save:
calCloseDatabaseForAuxDatabaseRef:save:
calContainerProvider
calDAVURLPath
calDBHelper
calDatabaseForAccountID:
calDatabaseForAuxDatabaseRef:
calEventChangeId
calMainDatabasePath
calOpenDatabaseAsGenericClientForAccountID:
calOpenDatabaseAsGenericClientForAuxDatabaseRef:
calOpenDatabaseForAccountID:clientID:
calOpenDatabaseForAuxDatabaseRef:clientID:
calRecurrenceChangeId
calSaveDatabaseAndFlushCachesForAccountID:
calSaveDatabaseForAccountID:
calSaveDatabaseForAuxDatabaseRef:
calSetMainDatabasePath:containerProvider:
calUnitTestCallbackBlock
cal_isCertificateError
cal_personaIdentifier
cal_serializableError
calendarAvailabilityRequestFinishedWithError:
calendarDirectorySearchFinishedWithError:exceededResultLimit:
calendarExternalId
calendarsDataclassModified
calendarsForEntityType:
callStackSymbols
callbackQueue
canAccessCredentialsWithAccessibility:
canSaveWithAccountProvider:
cancelAllSearchQueries
cancelAllTasks
cancelCalendarAvailabilityRequestWithID:
cancelCalendarDirectorySearchWithID:
cancelDownloadingInstance:error:
cancelGrantedDelegatesListRequestWithID:
cancelPreviousPerformRequestsWithTarget:
cancelPreviousPerformRequestsWithTarget:selector:object:
cancelSearchQuery:
cancelShareResponseInstance:error:
cancelTask:
cancelTaskWithID:
cancelTaskWithReason:underlyingError:
cancelTasksDueToOnPowerMode
cancelUpdateGrantedDelegatePermissionRequestWithID:
caseInsensitiveCompare:
certificatesStatus
changeHistoryTruncated
changeId
changeTrackingID
changeType
changedItem
characterAtIndex:
characterIsMember:
characterSetWithCharactersInString:
checkValidityOnAccountStore:withConsumer:
checkValidityOnAccountStore:withConsumer:inQueue:
childAccounts
claimedOwnershipOfContacts
claimedOwnershipOfDataclasses:
claimedOwnershipOfEvents
claimedOwnershipOfNotes
class
cleanupAccountFiles
clientAccountClassName
clientID
clientIdentifier
clientToken
clientTokenRequestedByServer
clientsToPriorityRequests
closeDatabaseForAuxDatabaseRef:save:
cnChangeAnchor
code
compare:
completelyIgnoreNotes
completionHandler
concernedParty
conformsToProtocol:
consumer
consumerForTask:
contactStore
contactsLockHolder
container
containerProvider
containerProviderWithDBHelper:
containerWithExternalIdentifier:forAccountWithExternalIdentifier:
containersMatchingPredicate:error:
contentsOfDirectoryAtPath:error:
contextToGroupIdentifier
contextToPowerAssertionRef
contexts
continueWithoutCredentialForAuthenticationChallenge:
conversationId
conversationIndex
copy
copyCurrentPersonaContextWithError:
copyLocalObjectFromId:
copyOfAllLocalObjectsInContainer
copyStorageSession
copyWithZone:
count
countByEnumeratingWithState:objects:count:
createNewContainerWithType:name:externalIdentifier:constraintsPath:syncData:contentReadonly:propertiesReadonly:forAccount:
createPersonaContextForBackgroundProcessingWithPersonaUniqueString:
creationDate
credential
credentialItemForKey:
credentialProtectionPolicy
credentialType
currentHandler
currentMode
currentPersona
currentRunLoop
customConnectionProperties
daAccountSubclassWithBackingAccountInfo:
daAccountVersion
da_URLWithDirtyString:
da_URLWithScheme:host:user:port:uri:
da_absoluteURLForChildLeastInfoRepresentationRelativeToParentURL:
da_accounts
da_accountsWithAccountTypeIdentifiers:
da_accountsWithAccountTypeIdentifiers:enabledForDADataclasses:
da_accountsWithAccountTypeIdentifiers:outError:
da_addNullRunLoopSourceAndPerformSelector:withObject:afterDelay:inModes:
da_appendSlashIfNeeded
da_classicPortForScheme:
da_dataWithHexString:
da_dataWithHexString:stringIsUppercase:
da_hasPrefixCaseInsensitive:
da_hexString
da_isEqualToDAVURL:
da_leastInfoStringRepresentationRelativeToParentURL:
da_loadDAAccountsWithAccountTypeIdentifiers:enabledForDADataclasses:withCompletion:
da_loadDAAccountsWithAccountTypeIdentifiers:withCompletion:
da_loadDAAccountsWithCompletion:
da_lowercaseHexStringWithoutSpaces
da_new64ByteGUID
da_newGUID
da_pathWithoutTrailingRemovingSlash
da_performSelectorThatDoesntAffectRetainCount:withObject:
da_rawPath
da_removeSlashIfNeeded
da_stringByAddingPercentEscapesForUsername
da_stringByRemovingPercentEscapesForUsername
da_stringByURLEscapingPathComponent
da_trimWhiteSpace
da_uppercaseHexStringWithoutSpaces
da_urlByRemovingUsername
da_urlBySettingHost:
da_urlBySettingHost:keepUsername:
da_urlBySettingPassword:
da_urlBySettingPath:
da_urlBySettingPath:keepUsername:
da_urlBySettingPort:
da_urlBySettingPort:keepUsername:
da_urlBySettingScheme:
da_urlBySettingScheme:keepUsername:
da_urlBySettingUsername:
da_urlForLogging
daemonAccountClassName
daemonAppropriateAccountClassForACAccount:
dataUsingEncoding:
databaseForAccountID:
databaseForAuxDatabaseRef:
databaseIsCorrupt:
dataclass
dataclassProperties
dataclassPropertyURLsByDataclass
dataclasses
date
dateWithCalendarFormat:timeZone:
dateWithTimeIntervalSinceNow:
dateWithTimeIntervalSinceReferenceDate:
debugDescription
decodeIntForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
decrementTransactionCountForTransaction:
decrementXpcActivityContinueCount
defaultCenter
defaultContactsFolder
defaultContainerIdentifierForDADataclass:
defaultEventsFolder
defaultManager
defaultNotesFolder
defaultToDosFolder
defaultTrustManager
delegate
deleteAccount:
deleteContainer:
deletedItemsFolder
description
descriptor
destID
destinationContainerId
deviceType
dictionary
dictionaryWithContentsOfFile:
dictionaryWithObjects:forKeys:count:
didFinishAllXPCTransactions
didReceiveDarwinNotification:
discoverInitialPropertiesWithConsumer:
displayAccount
displayName
displayTo
distantPast
domain
domainOnly
doubleValue
downloadFinishedError:
draftsFolder
drainContainer
drainSuperfluousChanges
dropAssertionsAndRenewCredentialsInQueue:withHandler:
dropPowerAssertionsForGroupIdentifier:
emailAddress
emailAddresses
enableChangeLogging:
enabledDataclasses
enabledDataclassesBitmask
enabledForAnyDADataclasses:
enabledForDADataclass:
encodeInt:forKey:
encodeObject:forKey:
encodeWithCoder:
encodedHeaders
encryptionIdentityPersistentReference
endDailyAggDReporter
endDailyAnalyticsReporter
endowmentNamespaces
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
errorWithDomain:code:userInfo:
esAccountSubclassWithBackingAccountInfo:
eventStore
eventsFolders
eventsLockHolder
eventsWaiters
exceptionWithName:reason:userInfo:
exceptionsDict
exceptionsForDigest:
executeAllSaveRequests
executeSaveRequest:error:
externalID
externalIdentifier
externalIdentifierString
externalModificationTag
externalSyncData
failedWaiters
familyDelegateACAccountID
familyDelegateAltDSID
fetchOfficeHoursWithConsumer:error:
fetchedAccountWithExternalIdentifier:
fileSystemRepresentation
fileURLWithPath:
filename
firstObject
flaggedIsSet
folderID
folderIDsThatExternalClientsCareAboutForDataclasses:withTag:
folderIDsThatExternalClientsCareAboutWithTag:
folderName
foldersTag
foregroundDataclasses
forwardedAttendeeUUIDs
forwardedAttendees
from
fromFolder
generatesBulletins
getAppleIDSession
getCFRunLoop
getDAExceptionObjectWithLocalItem:originalEvent:account:
getDAObjectWithLocalItem:serverId:account:
getFetchingAutomaticallyState
getIdFromLocalObject:
getPendingQueryQueue
grantedDelegatesListRequestFinishedWithResults:error:
groupExpansionFinishedWithResults:error:
groupIdentifierToContexts
guardianRestricted
guardianStateDirty
guessPasswordForURL:
handleAccountDidChange:withChangeInfo:store:
handleAccountWillChange:withChangeInfo:store:accountUpdater:
handleCertificateError:
handleFailureInFunction:file:lineNumber:description:
handleFailureInMethod:object:file:lineNumber:description:
handleTrust:forHost:forAccount:withCompletionBlock:
handleTrustChallenge:
handleTrustChallenge:completionHandler:
handleTrustChallenge:forAccount:
handleTrustChallenge:forAccount:completionHandler:
handleValidationError:completion:
hasPrefix:
hasRemoteChanges
hasSuffix:
hasXpcActivity
hash
haveWarnedAboutCert:forHost:
haveWarnedAboutCertDict
heldAsideContexts
heldAsideGroupIdentifiers
heldIndependentTasks
highestSequenceNumber
host
hostFromDataclassPropertiesForDataclass:
iOSLegacyIdentifier
identifier
ignoresGuardianRestrictions
importance
inboxFolder
incrementTransactionCountForTransaction:
incrementXpcActivityContinueCount
independentTasks
infoDictionary
ingestBackingAccountInfoProperties
init
initMoveRequestWithMessage:fromFolder:toFolder:
initRequestForBodyFormat:withBodySizeLimit:
initRequestForBodyFormat:withFolderID:withServerID:withLongID:withBodySizeLimit:
initRequestForBodyFormat:withLongID:withBodySizeLimit:
initRequestForBodyFormat:withMessageID:withBodySizeLimit:
initRequestWithMessageID:
initRequestWithSetFlags:unsetFlags:message:
initWithABAccout:
initWithABSource:
initWithAccount:
initWithAccountStore:
initWithAccountType:
initWithAddressBook:
initWithAttachmentName:andMessageServerID:
initWithBackingAccountInfo:
initWithBytesNoCopy:length:encoding:freeWhenDone:
initWithCNContainer:
initWithCapacity:
initWithChangeType:accountIdentifier:accountTypeIdentifier:oldAccountProperties:username:password:oldUsername:oldPassword:modifiedDataClasses:clientName:
initWithChangedItem:propertyName:value:propertyNamespace:serverId:
initWithCoder:
initWithConcernedParty:accountID:
initWithContactStore:
initWithContactsFamilyDelegateAltDSID:familyDelegateACAccountID:
initWithContainer:changeTrackingID:
initWithDAAccount:
initWithData:encoding:
initWithDatabaseInitOptions:
initWithDelegate:
initWithDirectoryURL:
initWithEKOptions:
initWithEmailAddresses:
initWithEmailAddresses:retrieveCertificates:retrieveAvailability:withStartTime:endTime:
initWithExternalIdentifier:
initWithFilename:
initWithFireDate:interval:target:selector:userInfo:repeats:
initWithItemChangeType:changedItem:serverId:
initWithItemChangeType:changedItem:serverId:instanceId:
initWithItemChangeType:changedItem:serverId:status:
initWithItemChangeType:changedItem:sourceContainerId:sourceServerId:destinationContainerId:
initWithLabel:
initWithObjects:
initWithPassword:
initWithPath:
initWithRequestType:message:send:
initWithTrust:
insertObject:atIndex:
insertString:atIndex:
instanceID
instanceId
intValue
integerValue
invalidate
isAccount
isActiveSyncAccount
isAppleInternalInstall
isCalDAVChildAccount
isCardDAVAccount
isChangeHistoryTruncated
isChildAccount
isContact
isContainer
isContentReadonly
isDefault
isDelegateAccount
isDisabled
isEnabledForDataclass:
isEnabledToSyncDataclass:
isEqual:
isEqualToAccount:
isEqualToString:
isGuardianRestricted
isGuardianStateDirty
isHotmailAccount
isInHoldingPattern
isKindOfClass:
isLDAPAccount
isMemberOfClass:
isOofSupported
isPropertyDirty:
isSearchContainer
isShutdown
isSubscribedCalendarAccount
isSyncing
isValidating
itemChangeType
keyEnumerator
keychainAccessibilityType
label
lastObject
lastQueryStartedTime
lastSavedCalSequenceNumberForDatabaseInContainer:
lastSavedSequenceNumber
lastVerb
latestSequenceNumber
leafAccountTypes
leafAccountTypesToCheckForEquality
legacyIdentifier
length
load
loadDaemonBundleForACAccountType:
loadFrameworkForACAccountType:
localizedIdenticalAccountFailureMessage
logICSMessage:atLevel:
logSnippet:
longID
mQueuedTasks
mResolvedEmailToX509Certs
mailNumberOfPastDaysToSync
mailboxID
mailboxes
mainDatabasePath
mainRunLoop
managerIdleTimer
mapTableWithStrongToStrongObjects
markAsDefault
markedForDeletion
meContactIdentifier
meIdentifier
meetingRequestIsActionable
meetingRequestMetaData
meetingRequestUUID
mergeAllRecordsIntoContainer:shouldInsertChangeHistoryRecords:
mergedFreeBusy
messageClass
messageID
migratePasswordForAccount:
modalHeldActiveQueuedTask
modalHeldIndependentTasks
modifiedDataClasses
monitorFolderWithID:
monitorFoldersForUpdates:
monitorFoldersForUpdates:persistent:
monitorFoldersWithIDs:
monitorWithConfiguration:
monitoredAccounts
mutableContainer
mutableCopy
name
newDataHandlerForDataclass:container:changeTrackingID:
nextObject
noteCalDBDirChanged
noteCloseDBAndSave:
noteConnectionCount
noteDB
noteOpenDB
noteSaveDB
notesFolders
notesWaiters
null
numberWithDouble:
numberWithInt:
numberWithInteger:
oauth2Token
oauthInfoProvider
oauthToken
objectAtIndex:
objectAtIndexedSubscript:
objectEnumerator
objectForKey:
objectForKeyedSubscript:
offFlags
oldAccountProperties
oldUsername
onBehalfOfBundleIdentifier
oneshotListOfAccountIDs
openAuthenticationURL:forAccount:shouldConfirm:completion:
openDB
openDatabaseForAccountID:clientID:
openDatabaseForAuxDatabaseRef:clientID:
origRequest
os_log
parentAccount
parentAccountIdentifier
parentFolderID
password
passwordForAccountWithPersistentUUID:expectedAccessibility:shouldSetAccessibility:passwordExpected:
passwordWithExpected:
path
pendingQueries
pendingQueryQueue
performCalendarDirectorySearchForTerms:recordTypes:resultLimit:consumer:
performFetchAttachmentRequest:consumer:
performFetchMessageSearchResultRequests:consumer:
performFolderChange:isUserRequested:
performGroupExpansionForPrincipalPath:consumer:
performMailboxRequest:mailbox:previousTag:clientWinsOnSyncConflict:isUserRequested:consumer:
performMailboxRequest:mailbox:previousTag:isUserRequested:consumer:
performMailboxRequests:mailbox:previousTag:clientWinsOnSyncConflict:isUserRequested:consumer:
performMailboxRequests:mailbox:previousTag:isUserRequested:consumer:
performMoveRequests:consumer:
performResolveRecipientsRequest:consumer:
performSearchQuery:
performSelector:
performSelector:withObject:
performSelector:withObject:afterDelay:
performSelector:withObject:afterDelay:inModes:
performSelector:withObject:withObject:
performTask
performUsingAccountPersona:
persistence
persistentUUID
port
portFromDataclassPropertiesForDataclass:
postNotificationName:object:
powerAssertionGroupID
powerAssertionRetainCount:
predicateForAccountForContainerWithIdentifier:
predicateForAccountWithExternalIdentifier:
predicateForContainersInAccountWithIdentifier:includingDisabledContainers:
predicateForContainersIncludingDisabled:
predicateMatchingBundleIdentifier:
preferredAddress
preflightSaveWithAccountProvider:
principalPath
principalURL
privateFrameworksPath
processInfo
processMonitor
processName
promptForAllCerts
propertiesForDataclass:
propertyName
propertyNamespace
providerWithAddressBook:
providerWithContactStore:
publicDescription
query
queuedExclusiveTasks
queuedModalTasks
queuedTasks
rangeOfString:
rangeOfString:options:
rawTrustResultForSSLTrust:hostname:service:
reacquireClientRestrictions:
read
readIsSet
reattainPowerAssertionsForGroupIdentifier:
reattemptInvitationLinkageForMetaData:inFolderWithId:
redactedDescription
refreshDataclasses
refreshingWaiters
registerAccount:forOperationWithName:
registerConcernedCalParty:forAccountID:withChangedBlock:
registerConcernedNoteParty:withChangedBlock:
registerForInterrogationWithBlock:
registerPreemptiveWaiter:forDataclassLocks:completionHandler:
registerWaiter:forDataclassLocks:completionHandler:
registerWithiCalendar
relativePath
releasePowerAssertion:
relinquishLocksForWaiter:dataclasses:moreComing:
reload
remoteID
removeAccount:
removeAccount:completion:
removeAccount:withDeleteSync:completion:
removeAccountPropertyForKey:
removeAllObjects
removeBlockForConcernedParty:account:
removeClientCertificateData
removeConcernedCalParty:forAccountID:
removeConcernedNoteParty:
removeConsumerForTask:
removeCredential:forProtectionSpace:
removeDBSyncDataForAccountChange:
removeDelegateDatabasesNotMatchingAltDSIDs:
removeFromCoreDAVLoggingDelegates
removeItemAtPath:error:
removeKeychainInformationsForURL:
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removeObserver:name:object:
removePasswordForAccount:withPersistentUUID:
removePersistentCredentials
removeSlashIfNeeded
removeStoreForAccount:withChildren:inDatabase:mainDatabase:accountStore:
removeStoreForDeletedAccountWithIdentifier:inDatabase:mainDatabase:accountStore:
removeXpcActivity
renewCredentialsForAccount:options:completion:
replaceOccurrencesOfString:withString:options:range:
reportActiveExchangeOAuthAccountsCount
reportShareRequestAsJunkForCalendar:consumer:
requestCalendarAvailabilityForStartDate:endDate:ignoredEventID:addresses:consumer:
requestCancelTaskWithReason:
requestGrantedDelegatesListWithConsumer:
requestPriority:forClient:dataclasses:
requestType
resetAccountID
resetCertWarnings
resetStatusReport
resetSyncStatusForAllStoresIfNecessary
resetSyncStatusIfNecessaryForStoresOfType:
resolvedEmailToX509Certs
respondToShareRequestForCalendar:withResponse:consumer:
respondsToSelector:
restorePersonaWithSavedPersonaContext:
restrictedWaiters
restrictions
retain
retainCount
retainPowerAssertion:withGroupIdentifier:
retrieveAvailablilty
retrieveCertificates
rfc822Data
save:
saveAccount:withCompletionHandler:
saveAccountProperties
saveCalendar:commit:error:
saveContainer
saveDatabaseForAccountID:flushCaches:
saveDatabaseForAuxDatabaseRef:flushCaches:
saveKeychainInformationsForURL:andPassword:withAccessibility:
saveModifiedPropertiesOnBackingAccount
saveRequests
saveSource:commit:error:
saveVerifiedAccount:error:
saveVerifiedAccount:withCompletionHandler:
saveXpcActivity:
scheduleIdentifier
scheme
searchQueriesRunning
searchQuery:finishedWithError:
self
send
sendEmailsForCalEvents:consumer:
sendMessageWithRFC822Data:messageID:outgoingMessageType:originalMessageFolderID:originalMessageItemID:originalMessageLongID:originalAccountID:useSmartTasksIfPossible:isUserRequested:consumer:context:
sendSmartMessageWithRFC822Data:messageID:outgoingMessageType:originalMessageFolderID:originalMessageItemID:originalMessageLongID:originalAccountID:replaceOriginalMime:isUserRequested:consumer:context:
sender
server
serverComplianceClasses
serverID
serverId
serverRoot
serverTrust
setAbConnectionCount:
setAbDB:
setAbGroupChangeId:
setAbPersonChangeId:
setAcAccountTypeToAccountDaemonBundleSubpath:
setAcAccountTypeToAccountFrameworkSubpath:
setAcAccountTypeToClassNames:
setAcParentAccountTypeToChildAccountTypes:
setAccount:
setAccountBoolProperty:forKey:
setAccountClassName:
setAccountDescription:
setAccountIdentifier:
setAccountIntProperty:forKey:
setAccountProperty:forKey:
setAccounts:
setAccountsQueue:
setActiveExclusiveTask:
setActiveModalTask:
setActiveQueuedTask:
setAddressList:forKey:
setAddressListForBcc:
setAddressListForCc:
setAddressListForSender:
setAddressListForTo:
setAgentClassName:
setArePropertiesReadonly:
setAttachmentName:
setAuthenticated:
setAuthenticationType:
setAvailabilityStatus:
setBlocksByConcernedParty:
setBodyFormat:
setBuildVersion:
setCTag:
setCachedAppState:
setCalAlarmChangeId:
setCalAttachmentChangeId:
setCalAttendeeChangeId:
setCalDAVURLPath:
setCalEventChangeId:
setCalRecurrenceChangeId:
setCalUnitTestCallbackBlock:
setCallbackQueue:
setCertificatesStatus:
setChangeHistoryTruncated:
setChangeId:
setChangeTrackingID:
setClaimedOwnershipOfContacts:
setClaimedOwnershipOfEvents:
setClaimedOwnershipOfNotes:
setClientAccountClassName:
setClientIdentifier:
setClientsToPriorityRequests:
setCnChangeAnchor:
setCompletionHandler:
setConnectionDisplayName:
setConstraintsPath:
setConsumer:forTask:
setContactStore:
setContactsLockHolder:
setContactsWaiters:
setContainer:
setContentReadonly:
setContext:
setContextToGroupIdentifier:
setContextToPowerAssertionRef:
setContexts:
setCreationBlock:
setCredential:
setCustomSignature:
setDAAccountVersion:
setDaemonAccountClassName:
setDataContainerProvider:
setDataclass:
setDataclassPropertyURLsByDataclass:
setDefaultContainer:withLocalDBHelper:onlyIfNotSet:
setDelegate:
setDestID:
setDestinationContainerId:
setEmailAddress:
setEmailAddresses:
setEnabled:forDADataclass:
setEnabled:forDataclass:
setEncryptionIdentityPersistentReference:
setEndTime:
setEndowmentNamespaces:
setEventsLockHolder:
setEventsWaiters:
setExceptions:forDigest:
setExternalID:
setExternalIdentifier:
setExternalModificationTag:
setExternalSyncData:
setExternalSyncTag:
setFailedWaiters:
setFamilyDelegateACAccountID:
setFamilyDelegateAltDSID:
setFilename:
setFolderID:
setFolderIdsThatExternalClientsCareAboutAdded:deleted:foldersTag:
setFolderName:
setForegroundDataclasses:
setForwardedAttendeeUUIDs:
setForwardedAttendees:
setFromFolder:
setGeneratesBulletins:
setGroupIdentifier:
setGroupIdentifierToContexts:
setGuardianRestricted:
setGuardianRestricted:shouldPushChangeToServer:
setGuardianStateDirty:
setHandler:
setHasRemoteChanges:
setHaveWarnedAboutCertDict:
setHeader:forKey:
setHeldAsideContexts:
setHeldAsideGroupIdentifiers:
setHeldIndependentTasks:
setHighestSequenceNumber:
setHost:
setIdentityCertificatePersistentID:managedByProfile:
setIndependentTasks:
setInstanceId:
setIsDefault:
setIsValidating:
setItemChangeType:
setLastQueryStartedTime:
setLastSavedCalSequenceNumber:forDatabaseInContainer:
setLastSavedSequenceNumber:
setLastSyncDateForContainer:
setLastSyncEndDate:
setLastSyncError:userInfo:
setLastSyncStartDate:
setLatestSequenceNumber:
setLongID:
setMQueuedTasks:
setMResolvedEmailToX509Certs:
setMailNumberOfPastDaysToSync:
setMainDatabasePath:containerProvider:
setManagerIdleTimer:
setMarkedAsDefault:
setMarkedForDeletion:
setMaxSize:
setMeContactIdentifier:
setMeIdentifier:
setMergedFreeBusy:
setMessage:
setMessageID:
setModalHeldActiveQueuedTask:
setModalHeldIndependentTasks:
setName:
setNoteConnectionCount:
setNoteDB:
setNotesLockHolder:
setNotesWaiters:
setObject:forKey:
setObject:forKeyedSubscript:
setOffFlags:
setOfficeHours:withConsumer:error:
setOnFlags:
setOptions:
setParentAccount:
setParentFolderID:
setPassword:
setPassword:forAccount:withPersistentUUID:withAccessibility:
setPendingQueries:
setPendingQueryQueue:
setPersistentUUID:
setPort:
setPowerAssertionGroupID:
setPredicates:
setPrincipalPath:
setPrincipalURL:
setProcessMonitor:
setProtocolVersion:
setPurgingAllowed:
setQueuedExclusiveTasks:
setQueuedModalTasks:
setRefreshDataclasses:
setRefreshInterval:
setRefreshingWaiters:
setRestrictedWaiters:
setRestrictions:
setRetrieveAvailablilty:
setRetrieveCertificates:
setSaveRequests:
setSend:
setServerID:
setServerId:
setService:
setShouldDoInitialAutodiscovery:
setShouldRemoveAlarms:
setShouldRemoveAttachments:
setShouldUseOpportunisticSockets:
setSigningIdentityPersistentReference:
setSourceApplicationBundleIdentifier:
setSourceContainerId:
setSourceID:
setSourceServerId:
setStartTime:
setState:
setStateDescriptor:
setStatus:
setStatusReport:
setStripAttachments:
setSubcalURL:
setSyncData:
setSyncTag:
setSyncingAllowed:
setTimeout:
setToFolder:
setTransactionCount:
setTransactionMonitorDelegate:
setTransactions:
setTrust:
setTrustHandler:
setType:
setUIDataclasses:
setUnitTestHackRunLoopMode:
setUpCalStoreForParentAccount:withChildren:inDatabase:
setUpdateHandler:
setUseFTP:
setUseSSL:
setUser:
setUserInitiatedSyncTimer:
setUsername:
setValue:forKey:
setValues:
setVersionForNewAccount
setWaiter:
setWaiterIDsExpectingContactsLock:
setWaiterIDsExpectingEventsLock:
setWasUserInitiated:
setWatcher:
setWithArray:
setXpcTransactionTimer:
settingsRequestFinishedWithResults:status:error:
setupProcessStateMonitor
sharedBabysitter
sharedConnection
sharedCredentialStorage
sharedGateKeeper
sharedInstance
sharedInstanceForAccountType:creatingClass:
sharedKeychain
sharedLogger
sharedManager
sharedMonitor
sharedPowerAssertionManager
sharedRunLoop
sharedTransactionMonitor
shouldAutodiscoverAccountProperties
shouldCancelTaskDueToOnPowerFetchMode
shouldCreateAccountForBackingAccountInfo:
shouldDoInitialAutodiscovery
shouldFailAllTasks
shouldForceNetworking
shouldHoldPowerAssertion
shouldRemoveAlarms
shouldRemoveAttachments
shouldRemoveDBSyncDataOnAccountChange
shouldUseOpportunisticSockets
showPromptWithOptions:responseBlock:
showUserNotification:groupIdentifier:callbackQueue:sourceRunLoop:completionBlock:
shutdown
signingIdentityPersistentReference
slurpAndRemoveLookasideFile:prefixString:suffixString:
smimeType
sortedArrayUsingComparator:
source
sourceApplicationBundleIdentifier
sourceContainerId
sourceID
sourceIdentifier
sourceServerId
sourceType
sourceWithExternalID:
spinnerIdentifiers
standardUserDefaults
startDailyAggDReporter
startDailyAnalyticsReporter
startModal
startTime
state
stateString
status
statusReport
stopMonitoringAllFolders
stopMonitoringFolderWithID:
stopMonitoringFolders
stopMonitoringFoldersForUpdates:
stopMonitoringFoldersWithIDs:
string
stringByAppendingFormat:
stringByAppendingString:
stringByDeletingLastPathComponent
stringByTrimmingCharactersInSet:
stringByURLQuoting
stringForItemChangeType:
stringValue
stringWithFormat:
stringWithString:
stringWithUTF8String:
stripAlarms
stripAttachments
subcalURL
submitExclusiveTask:
submitExclusiveTask:toFrontOfQueue:
submitIndependentTask:
submitQueuedTask:
substringFromIndex:
substringToIndex:
superclass
supportsAuthentication
supportsConversations
supportsDraftFolderSync
supportsEmailFlagging
supportsMailboxSearch
supportsSecureCoding
supportsSmartForwardReply
supportsUniqueServerId
suspendMonitoringFoldersWithIDs:
syncData
syncEndedForCalendarWithExternalID:sourceExternalID:withError:
syncEndedForStoreWithExternalID:withError:
syncStartedForCalendar:
syncStartedForCalendarWithExternalID:sourceExternalID:
syncStartedForStoreWithExternalID:
syncStoreIdentifier
synchronizeContactsFolder:previousTag:previousSyncToken:actions:highestIdContext:isInitialUberSync:isResyncAfterConnectionFailed:previousTagIsSuspect:moreLocalChangesAvailable:consumer:
synchronizeEventsFolder:previousTag:actions:highestIdContext:isInitialUberSync:isResyncAfterConnectionFailed:moreLocalChangesAvailable:consumer:
synchronizeNotesFolder:noteContext:previousTag:actions:changeSet:notesToDeleteAfterSync:isInitialUberSync:isResyncAfterConnectionFailed:moreLocalChangesAvailable:consumer:
synchronizeToDosFolder:previousTag:actions:highestIdContext:isInitialUberSync:isResyncAfterConnectionFailed:moreLocalChangesAvailable:consumer:
systemTimeZone
takeValuesFromModifiedAccount:
taskDidFinish:
taskEndModal:
taskIsModal:
taskManager
taskManagerDidAddTask:
taskManagerWillRemoveTask:
taskRequestModal:
taskState
tearDown
threadTopic
timeIntervalSinceDate:
timeIntervalSinceNow
timeIntervalSinceReferenceDate
toDosFolders
toDosNumberOfPastDaysToSync
toFolder
transactionCount
transactionId
transactionMonitorDelegate
transactions
trustHandler
type
unactionableICSRepresentationForMetaData:inFolderWithId:outSummary:
unitTestHackRunLoopMode
unmonitorAccount:
unregisterAccount:forOperationWithName:
unregisterWaiterForDataclassLocks:
updateAccount:withCompletionHandler:
updateContainer:
updateGrantedDelegatePermission:consumer:
updateGrantedDelegatePermissionFinishedWithError:
updateOofSettingsWithParams:consumer:
updateSaveRequest:
upgradeAccount
upgradeAccounts:
urlFromDataclassPropertiesForDataclass:
useContacts
useContactsFramework
useCredential:forAuthenticationChallenge:
useFTP
useSSL
useSSLFromDataclassPropertiesForDataclass:
user
userAgent
userInfo
userInitiatedSyncTimer
username
usernameWithoutDomain
value
vendDaemons:
vendPriorityManagers
verbIsSet
verifyCredentialsForAccount:saveWhenAuthorized:withHandler:
waiter
waiterID
waiterIDsExpectingContactsLock
waiterIDsExpectingEventsLock
waiterIDsExpectingNotesLock
waiterNum
wasUserInitiated
weakObjectsHashTable
webLoginRequestedAtURL:reasonString:inQueue:completionBlock:
whitespaceAndNewlineCharacterSet
wipeServerIds
writeToFile:atomically:
xpcTransactionTimer
zone
@24@0:8@16
B24@0:8@16
v16@0:8
i16@0:8
v20@0:8i16
B16@0:8
@16@0:8
v24@0:8@16
v28@0:8B16@20
B24@0:8q16
v28@0:8B16q20
q16@0:8
v32@0:8@16@24
i24@0:8@16
v28@0:8i16@20
@20@0:8B16
v24@0:8@?16
q24@0:8@16
v20@0:8B16
Vv24@0:8@16
v24@0:8q16
v40@0:8@16@24@32
@24@0:8q16
B24@0:8^@16
B24@0:8@?16
v28@0:8@16B24
^{__CFData=}24@0:8@16
v32@0:8^{__CFData=}16@24
^{__CFURLStorageSession=}16@0:8
@"ACAccount"
@"DAStatusReport"
@"NSMapTable"
^{__CFURLStorageSession=}
@"NSString"
@"DATaskManager"
@"NSObject<OS_xpc_object>"
@"DATrustHandler"
@"NSArray"
@"NSMutableDictionary"
@"NSMutableArray"
@"NSObject<OS_dispatch_queue>"
@"NSDate"
B32@0:8@16@?24
v32@0:8@16@?24
v48@0:8@16@24@32@?40
v68@0:8@16@24@32@40B48B52B56@60
B32@0:8@16@24
@32@0:8@16@24
@56@0:8@16@24@32@40@48
@48@0:8@16@24Q32@40
@40@0:8@16q24@32
@32@0:8@16^@24
@40@0:8@16@24^@32
@"<DATransactionMonitorDelegate>"
v32@0:8:16@24
Q16@0:8
v24@0:8Q16
@"CNChangeHistoryAnchor"
v80@0:8@16@24@32@40@48B56B60B64B68@72
@20@0:8i16
@32@0:8@16^^{CalDatabase}24
v32@0:8^v16@24
^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}24@0:8@16
^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}24@0:8^v16
B28@0:8@16B24
B28@0:8^v16B24
v40@0:8@16@24^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}32
^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}32@0:8@16^@24
^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}32@0:8^v16^@24
B36@0:8^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}16@24B32
v32@0:8^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}16@24
v24@0:8^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}16
@"NSCountedSet"
@"DALocalDBWatcher"
#24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@40@0:8Q16@24@32
@48@0:8Q16@24@32@40
@24@0:8Q16
@56@0:8Q16@24@32@40@48
@48@0:8Q16@24@32q40
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@"CNSaveRequest"16
^v16@0:8
v24@0:8@"NSString"16
@"NSData"16@0:8
v24@0:8@"NSData"16
@"CNContainer"16@0:8
@24@0:8^v16
@"NSHashTable"
B20@0:8i16
^v20@0:8i16
i24@0:8^v16
^{__CFDictionary=}24@0:8@16
^{__CFDictionary=}28@0:8@16i24
@36@0:8@16i24B28B32
B44@0:8@16@24@32i40
B36@0:8@16@24i32
v32@0:8@"ACAccount"16@?<v@?B@"NSError">24
@"ACAccountStore"
d16@0:8
v24@0:8d16
@"NSURL"16@0:8
B48@0:8@16@24@32@40
B40@0:8@16@24@32
B56@0:8@16@24@32@40@48
@40@0:8Q16Q24@32
@24@0:8i16i20
@32@0:8i16@20i28
@48@0:8i16@20@28@36i44
@40@0:8@16@24@32
@32@0:8i16@20B28
@"DAMailMessage"
@36@0:8i16@20@28
@"DAMessageMoveRequest"
@48@0:8@16B24B28@32@40
@"CNAccount"
v44@0:8@16q24B32@?36
v40@0:8@16q24@?32
@32@0:8@16q24
v48@0:8:16@24d32@40
@28@0:8@16B24
@52@0:8@16@24@32i40@44
@44@0:8@16@24i32@36
@24@0:8^{__CFURLStorageSession=}16
@"DATransaction"
@"DAActivity"
@"DAAccount"
@"<DATask>"
@"NSMutableSet"
@"NSTimer"
@32@0:8@16#24
^v20@0:8B16
B20@0:8B16
v24@0:8^v16
B24@0:8^v16
@?16@0:8
@"CNContactStore"
@"DACalDBHelper"
@"NoteContext"
v24@0:8#16
Q24@0:8@16
@68@0:8i16@20@28@36@44B52B56@60
v36@0:8@16@24B32
Vv20@0:8i16
Vv20@0:8B16
Vv28@0:8@16B24
@24@0:8^@16
@32@0:8q16^@24
i92@0:8@16@24i32@36@44@52@60B68B72@76@84
i52@0:8@16@24@32B40@44
i56@0:8@16@24@32B40B44@48
i32@0:8@16@24
Vv24@0:8@"DASearchQuery"16
@"NSArray"16@0:8
Vv24@0:8@"NSData"16
Vv24@0:8@"NSString"16
Vv24@0:8@"NSArray"16
Vv28@0:8@"NSArray"16B24
@"NSSet"24@0:8^@16
@"NSSet"32@0:8q16^@24
B40@0:8@"NSSet"16@"NSSet"24@"NSString"32
i92@0:8@"NSData"16@"NSString"24i32@"NSString"36@"NSString"44@"NSString"52@"NSString"60B68B72@"<DAMessageSendConsumer>"76@84
i52@0:8@"DAMailboxRequest"16@"NSString"24@"NSString"32B40@"<DAMailboxRequestConsumer>"44
i52@0:8@"NSArray"16@"NSString"24@"NSString"32B40@"<DAMailboxRequestConsumer>"44
i56@0:8@"DAMailboxRequest"16@"NSString"24@"NSString"32B40B44@"<DAMailboxRequestConsumer>"48
i56@0:8@"NSArray"16@"NSString"24@"NSString"32B40B44@"<DAMailboxRequestConsumer>"48
i32@0:8@"NSArray"16@"<DAMessageMoveRequestConsumer>"24
i32@0:8@"DAMessageFetchAttachmentRequest"16@"<DAMessageFetchAttachmentConsumer>"24
i32@0:8@"NSArray"16@"<DAMailboxFetchSearchResultConsumer>"24
i32@0:8@"DAResolveRecipientsRequest"16@"<DAResolveRecipientsConsumer>"24
v28@0:8@"DAFolderChange"16B24
@"DAFolder"16@0:8
B32@0:8@"NSData"16@"NSString"24
@"NSString"40@0:8@"NSData"16@"NSString"24^@32
Vv24@0:8@"NSNotification"16
@40@0:8q16^v24@32
@32@0:8^v16@24
@40@0:8^v16@24@32
v84@0:8@16@24@32@40@48@56B64B68B72@76
v52@0:8@16@24@32@40B48
Q32@0:8@16^@24
v60@0:8@16@24@32@40@48B56
Q20@0:8i16
Q24@0:8q16
Q24@0:8Q16
v40@0:8@16@24@?32
v40@0:8@?16@24@32
@24@0:8^{_NSZone=}16
@"<DADataclassLockWatcher>"
v36@0:8@16q24B32
@"NSObject<OS_os_transaction>"
v56@0:8^{__CFUserNotification=}16@24@32@40@?48
v32@0:8@16q24
v32@0:8@"NSString"16q24
i40@0:8^{__SecTrust=}16@24@32
v48@0:8^{__SecTrust=}16@24@32@?40
B40@0:8@16@24@?32
@"<DATrustHandlerDelegate>"
v36@0:8i16@20q28
@"RBSProcessMonitor"
@"CNMutableContainer"
!$'*-0369<?BE]HKNQT
,8ENw
DAAccountVersion2
DAAccountHost
DAAccountPort
DAAccountUseSSL
DAAccountEmailAddress
ACUIDisplayUsername
DASigningIdentityPersistentReference
DAEncryptionIdentityPersistentReference
DAAccountDidAutodiscover
DAExchangeOAuthSupportedKey
DAExchangeOAuthURI
DAExchangeOAuthTokenRequestURI
DAEASEndPointFQDN
DAIdentityPersist
DAIdentityPersistIsManagedByProfile
DATrustSettingsExceptions
DAAccountValidationDomain
 DAAccountFolderHierarchyChangedNotification
DAAccountFolderContentsChangedNotification
DAAccountFolderHierarchyNeedsUpdateNotification
DAAccountFolderHierarchyNeedsUpdateRequireChangedFoldersNotification
DAAccountFolderUpdatedWithNoChangesNotification
DAAccountPushedFolderPreferencesChangedNotification
DAOldKeychainURLs
DAAcountWasUpgradedFromLegacyAccount
DAAccountDoNotSaveReason
DAAccountSavePreflighted
kDAAccountIdentifiersToIgnoreForUniquenessCheck
DAAccountPrincipalPath
DAAccountUseTrustedSSLCertificate
DAAccountPersistentUUID
DAAccountConfigurationTag
v16@?0@"NSString"8
DAAccount.m
We shouldn't be resetting our account id, ever
com.apple.dataaccessd-%@
%@ %@
AccountID: %@ ("%@")
Stats %@
No Task Manager initted yet
NSPOSIXErrorDomain
https
http
v8@?0
v24@?0@"ACAccount"8@"NSError"16
%s MUST be implemented in ALL DAAccount subclasses.  Looks like it's missing in %@
Y=%@; T=%@
Cookie
Valid
InValid
com.apple.dataaccess.StorageSessionSetup
com.apple.dataaccessd.%@
%@: accountID %@ persistentUUID %@
Account class %@ MUST implement %s
v24@?0q8@"NSError"16
v20@?0B8@"NSError"12
ESAccount
Class getESAccountClass(void)_block_invoke
Unable to find class %s
void *ExchangeSyncLibrary(void)
com.apple.MobileAddressBook
com.apple.mobilephone
Calendar
Event
Reminder
Alarm
Recurrence
Store
Attendee
Organizer
EventAction
ExceptionDate
Attachment
Category
CategoryLink
Location
Sharee
InviteReply
ResourceChangeNotification
ResourceChange
Participant
CalendarItem
Notification
SuggestionNotification
SuggestedEventInfo
Contact
Conference
Error
AttachmentFile
AuxDatabase
AuxDatabaseAccount
Undefined
Unknown
com.apple.dataaccess.DATransactionMonitorQueue
DATransactionMonitor.m
Transaction count becomes negative, %d
DAReListenForAccounts
com.apple.dataaccessd.calDBQueue
DACalDBHelper.m
NULL auxDatabaseRef when trying to open aux database for client: %@
%@: tried to save a database that was never opened. accountID: %@
%@: tried to save a database that was never opened. auxDatabaseID: %d
%@: tried to close a database that was never opened. accountID: %@
%@: tried to close a database that was never opened. auxDatabaseID: %d
Client identifier is different. Expected "%@" but got "%@"
, and flushing caches
 old sequence %d
CalDBIsClosing
DAFrameworkName
DAAccountInfo
ACAccountType
ACParentAccountType
DAAccountClass
DAClientAccountClass
DADaemonAccountClass
DAAgentClass
DAAgentClassBundle
bundle
AccountInfo.plist
DAAccountLoader.m
Could not find the frameworks directory for bundle %@
Could not come up with an agent class (name %@) for account %@ parent account %@
Could not come up with an agent class (name %@) for account %@
<%@:
AccountClassName=%@
ClientAccountClassName=%@
DaemonAccountClassName=%@
AgentClassName=%@
modify
remove
fetch
preserve
move
belay-move
soft-delete
pseudo-delete
edit-property
forwarding
unknown (%lu)
<%@: %p> { Change type: %@, ChangedItem: %@ serverId: %@%@}
, Change id: %d
DAAction.m
Who does non-keyed coding nowadays?
DAAItemChangeType
ASChangedCollectionLeaf
DAAChangedItem
DAAServerId
DAAInstanceId
DAAChangeId
DAASourceContainerId
DAASourceServerId
DAADestinationContainerId
DAPropertyName
DAPropertyNamespace
DAPropertyValue
DARStatus
v16@?0@"NSObject<OS_xpc_object>"8
com.apple.dataaccess.ExchangeOAuthCount
count
com.apple.dataaccess.dataaccessd.dailyAnalytics
DAABLegacyContainer cannot update CNSaveRequest
DAABLegacyContainer does not support asContainer
 folderID = %@, name = %@, _parentFolderID %@, _dataclass %ld, _isDefault %@
com.apple.dataaccess.accountmonitor
DataAccess-
unit-test
v32@?0@"NSURLProtectionSpace"8@"NSDictionary"16^B24
%@?%@
?@/|:
%@:%@@
Password 
Login 
Host 
Scheme 
v24@?0^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}8^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}16
webcal://
added
modified
 NOT
google.com
yahoo.com
aol.com
Username
Hostname
PortNumber
SSLEnabled
%llu
%llu
%@ messageID "%@", onFlags %llu, offFlags %llu
%@ maxSize %d, bodyFormat %d
%@ messageID "%@"
%@ messageID "%@", maxSize %d, bodyFormat %d
%@ longID "%@", maxSize %d, bodyFormat %d
%@ message "%@", fromFolder "%@", toFolder "%@"
%@ messageID "%@", attachmentName "%@"
%@ subject "%@"
%@ status %d, sourceID "%@", destID "%@", origRequest (%@)
%@ emailAddresses %@
%@ status %ld
 email->certs 
status %ld 
(null)
 email->certs status %ld 
%@: 
<cert data length %ld hash %ld> 
 email->availability 
 email->availability status %ld 
%a, %d %b %Y %H:%M:%S %z
com.apple.dataaccess.queryqueue
DASyncStart
DASyncEnd
DACalendarItemsDownloaded
DACalendarItemsUploaded
AccountID
AccountClass
AccountName
NumberOfItemsChanged
ContainerID
NSString *acDataclassForDADataclass(DASingleDataclass)
com.apple.dataaccess.statusreport
@"NSMutableArray"8@?0
v24@?0@"NSArray"8@"NSError"16
v24@?0@"ACAccountType"8@"NSError"16
DAUtils.m
Only supports Exchange account types
int flockWithProcessAssertion(int, BOOL, NSString *__strong)
You can't flock a flocked file.  No ref counting for you
com.apple.dataaccess.unknown
0123456789ABCDEF
0123456789abcdef
CFBundleVersion
%@/%@ (%@) %@/%@
DeviceClass
ProductType
com.apple.reminders
com.apple.mobilenotes
com.apple.mobilemail
@?/:
%0.*d
%@://%@%@%@%@%@
%@://%@@%@%@%@%@%@
%@://%@
%@://%@%@
%@://%@:%u%@
%@://%@/
%@://%@:%u/
DADiagnosticsEnabled
NSDetailedErrors
NSDetailedErrors: 
Library/DataAccess/DeviceSpecificInfo.plist
com.apple.dataaccess.deviceid
DAGlobalDeviceSpecificIdentifier
iPhone Simulator
DATaskManager.m
There are queued exclusive tasks remaining during dealloc
There is an active exclusive task remaining during dealloc
There are independent tasks remaining during dealloc
There are held independent tasks remaining during dealloc
There are modal-held independent tasks remaining during dealloc
There are queued tasks remaining during dealloc
There is an active queued task remaining during dealloc
There is a modal-held active queued task remaining during dealloc
Apple-%@/%@
Out of bounds state
DATaskManager %@ state:%@
Active exclusive task: %@
Queued exclusive tasks: %@
Independent tasks: %@
Held independent tasks: %@
Modal-held independent tasks: %@
Active queued task: %@
Queued tasks: %@
Active modal task: %@
Queued modal tasks: %@
Associated with account: %@
Finished task is not being managed, so cannot be active modal task.
Finished task is not being managed, so cannot be in modal queue.
A nil task requested modal?
Cannot request modal behavior during shutdown
Only the active exclusive task can go modal immediately
Out of bounds state.
taskEndModal can only be called in Run Modal state, not %d
Only the active modal task can end modal behavior.
Cannot handle _startModal: in Shutdown state
Cannot have active queued task and active exclusive task at the same time.
Cannot have running independent tasks and an active exclusive task at the same time.
Cannot have active queued task and a modal task at the same time.
Cannot have running independent tasks and a modal task at the same time.
Cannot have active exclusive task in Nominal state.
Cannot have modal task in Nominal state.
We shouldn't be holding independent tasks in Nominal state
We shouldn't have queued exclusive tasks in Nominal state
We shouldn't have any independent tasks that are modal in Nominal state
Cannot have active exclusive task in Hold for Exclusive state.
Should not have any modal task active in Hold for Exclusive state
Should have at least one queued exclusive task in Hold for Exclusive state
Cannot have running independent tasks in Run Exclusive state.
Cannot have active queued task in Run Exclusive state.
Cannot have active modal task in Hold for Modal state.
Should have at least one queued modal task in Hold for Modal state.
Should not be running other independent tasks in Run Modal state.
Should not be running other queued task in Run Modal state.
Only the exclusive task can currently go modal.
Nominal
Hold for Exclusive
Run Exclusive
Hold for Modal
Run Modal
Shutdown
Out of bounds
GenericDataAccessAccount
GenericDataAccessAccountWithLogging
Subscribed Calendars
com.apple.dataaccessd.changeinserter
com.apple.dataaccess
CardDAV-dbhelper
com.apple.dataaccessd.abDBQueue
com.apple.dataaccessd.noteDBQueue
DALocalDBHelper.m
You can't ask for an AddressBook db if you didn't open it.  Geez! %@
ClientIdentifier can not be nil
<unknown>
local
You can't ask for a note db if you didn't open it.  Geez! %@
DAPowerAssertionManager.m
%s must have a non-nil context
%s must have a non-nil group identifier
Shared DAPowerAssertionManager object %@:
Contexts asserting power: %@
Contexts held aside: %@
Active Assertions: %@
com.apple.DataAccess:%d-%p
^{__CFArray=}8@?0
ASAccountActor.m
Must be called on subclass: %s
ESAccountActor
Class getESAccountActorClass(void)_block_invoke
com.apple.cfnetwork
apple
/Microsoft-Server-ActiveSync
q24@?0@8@16
com.apple.dataaccess.checkHolidayCalendarAccount
containerWithExternalIdentifier:forAccountWithExternalIdentifier is abstract
allContainers is abstract
allContainersForAccountWithExternalIdentifier is abstract
createNewContainerWithType is abstract
setDefaultContainer:onlyIfNotSet: is abstract
setLastSyncDateForContainer: is abstract
mergeAllRecordIntoContainer: is abstract
DADataHandlers.m
Can't initialize a DADataHandler with a nil changeTrackingID
setLastSyncDateForContainer
@"EKEventStore"8@?0
v32@?0@"DALocalDBWatcherCalConcernedParty"8@?<v@?>16^B24
DALocalDBWatcher.m
Someone registered themselves for the Note notification more than once.  Why?  Bad guy %@
_CalDatabaseChangedNotification
NoteContextDarwinNotificationWithLoggedChanges
%@: waiter %@ wants dataclasses %lx
DALocalDBGateKeeper.m
DALocalDBGateKeeper is shutting down, but the following account is still holding the dataclass lock for dataclass %lx.  Account %@
DALocalDBGateKeeper is shutting down, but the following accounts are still waiting on the dataclass lock for dataclass %lx.  Account %@
DALocalDBGateKeeper is shutting down, but the following accounts are still waiting on the dataclass lock for dataclass type %lx.  Account %@
Waiter %@ tried to relinquish a lock for data class %ld, but it was held by another waiter: %@
_contactsLockHolder %@
_contactsWaiters %@
_waiterIDsExpectingContactsLock %@
_eventsLockHolder %@
_eventsWaiters %@
_waiterIDsExpectingEventsLock %@
_notesLockHolder %@
_notesWaiters %@
_waiterIDsExpectingNotesLock %@
DAUserNotificationUtilities.m
Invalid parameter not satisfying: %@
notification != nil
completionBlock != nil
runLoop != nil
Already waiting on this notification %p
fetchedAccountWithExternalIdentifier: is abstract
accountByCreatingAccountWithExternalIdentifier: is abstract
allAccounts: is abstract
accountForContainerWithIdentifier: is abstract
com.apple.dataaccess.dataaccessd
kDAMigrationBuildVersionKey
BuildVersion
.me.com
.icloud.com
v24@?0@8^B16
v12@?0i8
com.apple.dataaccess.trustChallengeQueue
Not 
v12@?0B8
DAABLegacyAccount cannot update CNSaveRequest
com.apple.dataaccess.DATrafficQueue
^{__CFString=}76@?0i8^{__CFDate=}12^{__CFString=}20^{__CFString=}28r*36r*44Q52^v60^{__CFString=}68
DALogLevel
SBLockStateChanged
v32@?0@"NSString"8@"NSNumber"16^B24
com.apple.dataaccessd.sblockqueue
com.apple.frontboard.visibility
v32@?0@"RBSProcessMonitor"8@"RBSProcessHandle"16@"RBSProcessStateUpdate"24
v16@?0@"<RBSProcessMonitorConfiguring>"8
------
DAPriorityManager: 
[%@ 
Refresh: 0x%lx 
UI: 0x%lx 
------
DAPriorityManager.m
You can't request priority with a nil client
Background
Refresh
DAContactsContainer does not support asSource
Could not load source: %ld
/AppleInternal/Library/Frameworks/CalendarDiagnostics.framework/CalendarDiagnostics
IPHONE_SIMULATOR_ROOT
CFFIXED_USER_HOME
RestrictionTimeout
NumFailures
com.apple.dataaccess.babysitter
LastSystemVersion
RestrictedWaiters
RefreshingWaiters
FailedWaiters
DataAccessBabysitterPrefsChanged
DABabysitter.m
Use the shared babysitter, jerk.
DAAccount %p is going away...
Not clearing/refreshing account credentials for account %{public}@ because the credentials have yet to be saved.
Account %{public}@ has DAAccountVersion %d
Account %{public}@ has no DAAccountVersion, and we have no previous build version. Forcing account migration.
Account %{public}@ has no DAAccountVersion, and the previous build version string (%{public}@) could not be parsed. Forcing account migration.
Account %{public}@ has no DAAccountVersion, and the previous build version string (%{public}@) appears old enough that we think we need to migrate. Forcing account migration.
Account %{public}@ has no DAAccountVersion, and the previous build version string (%{public}@) appears new enough not to force migration. Assuming DAAccountVersion 1.
Account "%@" (%@) was toggled for a dataclass. Giving it another chance with the babysitter.
%s to be implemented by subclass
%s being ignored by %@
Added consumer %p for task %p to DAAccount %p, count: %lu
Removed consumer for task %p from DAAccount %p, count: %lu
Account %p clientToken: %@
Account %p clientTokenRequestedByServer, new token: %@
Someone wanted to set a nil password, we're editing the live ACAccountCredential
Calling _backingAccountInfo.authenticated = YES for Account identifier %@ and username %@
Could not convert account %{public}@ to persona %@, with error %@
This process needs entitlement com.apple.usermanagerd.persona.background
Could not get current persona context for account %{public}@, with error %@
Changing Host From %@ to %@
Removing contacts data for account %@, because it has a significant change
Found %ld contacts sources to remove
Removing event / todo data for account %@, because it has a significant change
Found %ld calendars to remove
Ignoring Notes orphan check.  You asked for it.
Removing notes data for account %@, because it has a significant change
Found a note account to remove
Failed to save: %@
Notes database was corrupted! Non-fatal at this point, but just barely
Account had significant property change, going to flush local data.
ChangeInfo %@
NewProperties %@
Couldn't get a Yahoo cookie. Not setting authentication headers
Fetching OAuth Credential for Backing Account %@
Account Store Returned A %@ OAuth-token From Credential Object %@ AccountID: %@
Saving account "%@" (%{public}@)
 _backingAccountInfo.authenticated is %d for Account identifier %@ and username %@
Error saving account %@: %@
Not updating non-existing account: %@
Refusing to save account because DAAccountDoNotSave is set to "%@"
Setting identity certificate. Managed by profile? %@
Account %@ (%{public}@) says it is not authenticated. Refreshing to be sure.
Account %@ (%{public}@) is still not authenticated after refreshing.
Good news! Account %@ (%{public}@) is now authenticated after refreshing.
The account %@ (%{public}@) is not marked as authenticated, but it supports authentication, appears to have credentials, and is marked to ignore the isAuthenticated property. We will try to sync this account.
Not attempting request for account %@ because the backing account credential isn't authed %{public}@
Not attempting request for account %{public}@ because the backing account needs to verify terms or is suspended. %{public}@
Not attempting request for account %{public}@ because we don't have access to keychain items with accessibility %d right now
Shutting down the task manager
Canceling task because conditions for on-power mode no longer exist (xpc_activity)
XPC: Saved XPC activity for account %@
XPC: Increment XPC activity continue count to %d for account %@
XPC: Decrement XPC activity continue count to %d for account %@
XPC: Successfully set XPC activity state to XPC_ACTIVITY_STATE_DONE for account %@
XPC: Failed to set XPC activity state to XPC_ACTIVITY_STATE_DONE for account %@
DataAccess is renewing credentials for account %{public}@ by forcing-prompt: %{public}@
Failed to save account when attempting to remove kDAAccountIgnoreAuthenticatedProperty flag: %@
DataAccess successfully renewed credentials for account %{public}@ by forcing-prompt: %{public}@
DataAccess failed to renew credentials for account %{public}@ by forcing-prompt: %{public}@ - renewalResult = %ld
Account had significant property change, going to flush local data.
OldProperties %@
NewProperties %@
Downloading attachments is not supported on account ID %@. AttachmentUUID: %@
Requesting calendar availability is not supported on account with ID [%@].
Cancelling calendar availability requests is not supported on account with ID [%@].
Requesting granted delegates list is not supported on account with ID [%@].
Cancelling granted delegates list requests is not supported on account with ID [%@].
Update granted delegate permission is not supported on account with ID [%@].
Cancelling update granted delegate permission requests is not supported on account with ID [%@].
Performing a calendar directory search is not supported on account with ID [%@].
Cancelling calendar directory searches is not supported on account with ID [%@].  searchID: [%@]
Responding to calendar shares is not supported on account ID %@. calendar ID: %@
Reporting calendar shares as junk is not supported on account ID %@. calendar ID: %@
Fetching office hours is not supported on account ID %{public}@
Setting office hours is not supported on account ID %{public}@
Transaction count is initialized to %d
Transaction count is incremented to %d
Transaction count is decremented to %d
Remaining transactions: %@
Failed to determine database directory path for accountID: %{public}@
Failed to determine database directory path for auxDatabaseID: %{public}@
Creating calendar database for clientID %{public}@
Using already-created calendar database %{public}p
Created calendar database %{public}p
Cal database %p opened for "%{public}@". Connection count is now %lu
connectionCount is > 1, at %lu
Saving calendar database %p%{public}@%{public}@.
Saving calendar database %p%{public}@.  Save failed
Resetting calendar database %p sequence %d
_closeDatabase called too many times with path: %{public}@
Decrementing database %p reference count. connectionCount is %lu. Client identifier is "%{public}@"
Destroying calendar database %p
Someone asked us to yield the calendar database. Bumping up all clients to UI priority
Handling account info mapping %@
Using pre-cached account infos
Going to the disk for our account info providers
We don't know of any bundles for account type "%@"
Could not come up with an account class (name %@) for account %@ parent account %@
Could not come up with an account class (name %@) for account %@
Could not come up with a client account class (name %@) for account %@ parent account %@
Could not come up with a client account class (name %@) for account %@
Could not come up with a daemon account class (name %@) for account %@ parent account %@
Could not come up with a daemon account class (name %@) for account %@
starting daily Analytics reporter
Updating criteria for daily Analytics xpc activity.
unregistering daily Analytics reporter
Reporting Exchange OAuth accounts count
Reported Exchange OAuth accounts count
Loading password for %@
Securing ur sekretz: moving credential for account %@ to accessibility %d
Couldn't change password accessibility, error %d
Could not find a password in the keychain for %@, error %d
Removing credential %@
Setting password for account with UUID %@
Error %d, Can't update password for account %@
Removing password for account with UUID %@
Error %d, Couldn't delete password from keychain for account %@
During Migration, password present. Setting _backingAccountInfo.authenticated = YES for Account identifier %@ and username %@
Saving password for %@
Refusing to save password in keychain because one or more of the necessary fields are null: %@%@%@%@
Error %d while trying to add a password: %@
Refusing to retrieve password from keychain because one or more of the necessary fields are null: %@%@%@
Could not find a password in the keychain for %@
Removing password for %@
Refusing to delete password from keychain because one or more of the necessary fields are null: %@%@%@
error %d: Could not delete password for %@
Setting password for account
Couldn't set password, error %d
Couldn't add password, error %d
Handling account will change %{public}@
Handling account did change %{public}@
Found an account of type %{public}@.  Sanity check enabled dataclasses.
Found an account of type %{public}@.  Sanity check account properties.
Found a parent account of type %{public}@. Sanity checking child accounts for it.
_handleAccountAddOrModify: Failed to save account with identifier %{public}@: %@
Not creating a store for account %{public}@ because it is not appropriate
Not creating a store for account %{public}@ because it is the child of a CalDAV account
Couldn't find an account type with identifier %{public}@, error = %@
Failed to remove orphaned subscribed calendar account %{public}@: error = %@
Failed to save %{public}@ subscribed calendar child account: error = %@
No calendar for account %{public}@, so we can't update it.
Couldn't save calendar with updated properties for change to account %{public}@ (%@): %@
No calendar updates needed for changes to account %{public}@ (%@)
Sanity checking CalDAV account "%@" (%{public}@). This account does %@ use the calendar home sync report. Modified dataclasses are %@.
Account "%@" (%{public}@) is being added with credentials but is not set as authenticated. Marking it to ignore the authenticated property on next sync.
BagURL has changed from %@ to %@, updated account
Found > 1 child accounts of type %@ under account %@.  Keeping %@ and removing %@
Failed to remove duplicate child account %{public}@: error = %@
Failed to add child account: error = %@
Failed to save child account: error = %@
DAMailMessage initWithCoder: should be called on a subclass only
DAMailMessage encodeWithCoder: should be called on a subclass only
Updating oof settings requested on account %@, which does not support it
Retrieving oof settings requested on account %@, which does not support it
Checking if oof settings are supported on account %@, which does not support it
Delay pending search for %f seconds
Delay new search for %f seconds
Search requested on account %@, which does not support it
%s unhandled dataclass %lx
Could not convert ACAccount (%@) to DAAccount
Could not load ACAccounts due to Account Error %@
Applying storage session %@ to request %@
Exception when reading dictionary from %@: %@
Task manager %@ is being deallocated. Ending XPC transaction
Task manager %@ is being deallocated. Ending XPC activity
Exclusive task %@ submitted, to front: %d
Begin an xpc transaction due to exclusive task
DATransaction starting, ID: %@
Retain an xpc activity due to exclusive task for account %@
Independent task %@ submitted
Begin an xpc transaction due to independent task
Retain an xpc activity due to independent task for account %@
Queued task %@ submitted
Begin an xpc transaction due to queued task
Retain an xpc activity due to queued task for account %@
Task %@ aborted
Task Manager %p shutting down with account at %p
Task Manager %p shutting down with state %@
Task manager %@ is being shut down. Ending XPC transaction
Task manager %@ is being shut down. Releasing XPC activity
Task manager %@ has finally drained its queue. Turning opportunistic socket support back on
Task manager %@ has finally drained its queue. Clearing its user initiated sync state
Task manager %@ has finally drained its queue. Ending XPC transaction
Task manager %@ has finally drained its queue. Releasing XPC activity
Task manager %@ has finally drained its queue. Reset automatic fetching state
Task %@ finished.
Early return because task %@ isn't in our collection
Pending tasks are finished for account "%@" (%{public}@)
Task %@ requesting modal
Task %@ ending modal
The _performTask is invoked after taskManager has been shutdown. Canceling %{public}@ %@
The device is in on-power fetch mode, but is no longer on power or on wifi. Canceling %{public}@ %@
The _startModal is invoked after taskManager has been shutdown. Canceling %{public}@ %@
startModal called on task %@
Task Manager %@ transitioning from state: %@
Task Manager %@ transitioning to state: %@
Scheduling selector: %s with argument: %@ in modes %@
Scheduling modal task: %@
Cancelling task %@ with reason %d
Unexpected unsaved contact changes: %lu
abDB is unsupported under modern Contacts framework :%@
Unexpected error committing save request :%@
_registerForAddressBookYieldNotifications is unsupported under modern Contacts framework :%@
Someone asked us to yield the AddressBook database. Bumping up all clients to UI priority
_abOpenDBWithClientIdentifier is unsupported under modern Contacts framework :%@
Creating ab database for client %@
Created ab database %p
Couldn't create ab database: %@
AB database %p opened. Connection count is now %d
_abConnectionCount is > 1, at %d
abOpenDBWithClientIdentifier is unsupported under modern Contacts framework :%@
abOpenDBAsGenericClient is unsupported under modern Contacts framework :%@
abSaveDB is unsupported under modern Contacts framework :%@
_abCloseDB called too many times (connection count %d).  Resetting count to 0
Decrementing database %p reference count. _abConnectionCount is %d
Destroying ab database %p
Creating note database
Created note database %p
Note database %p opened. Connection count is now %d
_noteConnectionCount is > 1, at %d
Saving notes database %p. Connection count is %d
Saving notes database %p failed with error %@
Decrementing database %p reference count. _noteConnectionCount is %d
_noteCloseDB called too many times (connection count %d).  Resetting count to 0
Destroying notes database %p
Setting unit test Address Book Database directory to: %@
Setting unit test Calendar Main Database directory to: %@, Container Provider: %@
Context %@ retaining power assertion with group identifier %@
Context %@ getting added to our held aside contexts, as group %@ is currently dropped
Context %@ releasing power assertion
Context object %@ attempting to release power assertion without first retaining it
Dropping power assertion for group identifier %@
Reattaining power assertion for group identifier %@
DAPowerAssertionManager retained power assertion %@ for context %p, outstanding assertion count %lu
DAPowerAssertionManager unable to get non-nil power assertion %@ for context %p, outstanding assertion count %lu
DAPowerAssertionManager releasing power assertion for context %p, outstanding assertion count %u ontext
Nil container passed to -mergeAllRecordsIntoContainer:shouldInsertChangeHistoryRecords, aborting merge
Could not derive an ABSource from DAContainer in -mergeAllRecordsIntoContainer:shouldInsertChangeHistoryRecords, aborting merge
About to mergeAllRecordsIntoContainer, shouldInsertChangeHistoryRecords: %{public}d 
[mergeAllRecords] Moving all records from source ID %{public}d into source ID %{public}d 
First sync finishing %{public}@, setting lastSyncDate
Another sync finishing %{public}@, not setting lastSyncDate
Could not search for Exchange credentials.  %d
Could not move Exchange credential to apple keychain access group.  %d
Saving child account %@
Child account %@ saved
Child account %@ failed to save: %@
DAAccountMigrator: Waiting for child accounts to save...
Couldn't get a Facebook account type
Upgrading all DataAccess accounts...
Calling DAAccount Upgrader to upgrade Accounts
Account "%@" (%{public}@) was upgraded. Saving account.
DAD: DataAccess Migrator sending notification: com.apple.dataaccess.checkHolidayCalendarAccount
DAD: DataAccess Migrator Request For Performing Asynchronous Data Migration
DAAccountMigrator: Starting Exchange Credential Move to Apple Access Group
DAAccountMigrator: Starting Update Facebook Authentication types.
DAAccountMigrator: Starting Upgrade DAAccount types.
DAAccountMigrator: Writing Device specificID.
DAD: DataAccess Migrator skipped several tasks because user logs in for the first time.
DAAccountMigrator: Posting HolidaySubCal Account Check Notification.
DAAccountMigrator: Updating migration Version.
DAAccountMigrator: Finished Migrator For dataaccess..returning YES/Success.
Setting default container is not implemented yet. <rdar://problem/40239535>
Setting last sync date on container is not implemented yet.
Saving sync status for source with identifier %{public}@: lastSyncStartDate = %{public}@, lastSyncEndDate = %{public}@, canceled=%{public}@ lastSyncError = %@
Initial sync canceled. Clearing start date for source with identifier %{public}@
Failed to save source sync status with source identifier %@. Error = %@
Tried to update status for store with nil externalID
Updating sync status (%@) for source with externalID %{public}@
Tried to update status for store, but could not get a corresponding EKSource for externalID %{public}@. lastSyncError is %@
Tried to update status for calendar with nil externalID
Updating sync status (%@) for calendar with externalID %@
Tried to update status for calendar, but could not get a corresponding EKCalendar for externalID %@ in source with external ID %@. lastSyncError is %@
Saving sync status for calendar with external identifier %@: lastSyncStartDate = %{public}@, lastSyncEndDate = %{public}@, canceled=%{public}@ lastSyncError = %@
Initial sync canceled. Clearing start date for calendar with external identifier %@
Failed to save calendar sync status with calendar external ID %@. Error = %@
__CalDatabaseChangedExternally - comparing current sequence number %d to saved sequence number %d in database: %@
Notifying agents that the Calendar database has changed.
No database for account: %{public}@
no path for database: %p, account: %{public}@
No dbInfo for path: %{public}@, database: %p, account: %{public}@
Registering concerned cal party: %@ for account: %{public}@
__NotesChanged externally.
Received darwin notification %@
Aborting locks for dataclasses %lx to %@
Notifying waiters for dataclasses %ldd
Granting locks for dataclasses %lx to %@
registerWaiter %@ forDataclassLocks %lx
Not allowing waiter %@ to get the gate, as we're in a holding pattern
Letting everyone know we're done with contacts
Not notifying for contacts.  Claimed %d waiters count %lu holder %p expectant waiters %lu
Letting everyone know we're done with events
Not notifying for events.  Claimed %d waiters count %lu holder %p expectant waiters %lu
Letting everyone know we're done with notes
Not notifying for notes.  Claimed %d waiters count %lu holder %p expectant waiters %lu
unregisterWaiterForDataclassLocks %@
relinquishing locks for waiter %@ dataclasses %lx
Claiming ownership of dataclasses 0x%lx
DATransaction exiting, ID: %@
Couldn't schedule response for notification %@
No completion block for notification %@
DAMigrationIsNeeded : DataAccess Migrator Comparing Version %@ With %@
DAUpdateMigrationVersion : DataAccess Migrator Current Version %@
Checking to see if we should trust the server certificate
Terminating connection because server does not have an SSL certificate. Host: %@
Account now requires trusted certificate. Setting %@ to YES for account: %@
Got SecTrustEvaluate result %u. Allowing.
Got SecTrustEvaluate result %u. Checking if needing to prompt.
Terminating connection and warning user about an untrusted SSL certificate. The account requires trusted SSL certificate. Account: %@
Account does not require trusted certificate. Prompting user. Account: %@
Got SecTrustEvaluate result %u. Denying.
IT'S A TARP!!! We received an untrusted cert for %@. You really think we're going to fall for that?
prompting certificate for host: %@
got prompt response %d
Grabbing trust challenge lock...
Lock acquired. Checking trust.
%@Continuing connection
App state changed; %@ now has foreground status: %{BOOL}i. Foreground dataclasses are 0x%lx
DAPERF: DAPriorityManager is changing the priority to %d
Client %@ requested priority %@ for dataclasses 0x%lx
Bumping all client priority requests for dataclasses 0x%lx to UI. Open bar, dude!
Babysitter: The OS version is different. Giving all accounts a second chance at life.
Babysitter: Noting that waiter %@ failed %d times for operation %@
===================
Babysitter: You're once, twice, %d times a failure. Disabling account with ID %@ until it stops crashing. Please file a bug for any dataaccessd crashes you find.
===================
===================
Babysitter: Waiter %@ has crashed %d times now. Since you have the babysitter disabled, we're going to assume you know what you're doing and not disable the waiter. Consider yourself warned.
===================
Restricted accounts are: %@
Babysitter: Marking waiter %@ as performing operation "%@" (attempt #%d)
Babysitter: Decrementing refresh count for all operations on account %@
Babysitter: Decrementing refresh count for operation "%@" on account %@
Babysitter: It's been long enough, we're going to give account %@ another try. Let's hope it doesn't crash this time.
softlink:o:path:/System/Library/PrivateFrameworks/ExchangeSync.framework/ExchangeSync
softlink:o:path:/System/Library/PrivateFrameworks/ExchangeSync.framework/ExchangeSync
softlink:o:path:/System/Library/PrivateFrameworks/ExchangeSync.framework/ExchangeSync
DAAccount
TrustHandling
HSA2Support
CoreDAVLogging
AuthenticationExtensions
Deprecated
EventsFolderItemsSyncContext
EventsSupport
DATransactionMonitor
ChillOutARC
ContactFolderItemsSyncContext
ContactsSupport
MailFolder
MailFolderSupport
InvitationSupport
DACalDBHelper
DAAccountLoader
DAAccountClassNames
DAAction
NSSecureCoding
NSCoding
DAMoveAction
DAEditPropertyAction
DAResponse
DAAnalyticsReporter
DAABLegacyContainer
DAContainer
DACardDAVRecord
NSObject
DAFolder
DAAccountMonitor
DAKeychain
DAKeychainAdditions
DAKeychainAddition
OldAndBusted
DAAccountChangeUpdaterAccountStoreWrapper
DAAccountChangeHandlerAccountStoreUpdater
DASubCalAccount
DAAccountChangeHandler
DAMailboxRequest
DAMailboxSetFlagsRequest
DAMailboxGetUpdatesRequest
DAMailboxDeleteMessageRequest
DAMailboxFetchMessageRequest
DAMailboxFetchSearchResultRequest
DAMessageMoveRequest
DAMessageFetchAttachmentRequest
DADraftMessageRequest
DAMoveResponse
DAResolveRecipientsRequest
DAResolvedRecipient
DAMailMessage
Email
Settings
Searching
SearchSubclassing
ToDosSupport
DAContactsBasedAccount
DAContactsAccount
DAExtensions
DelayedPerformWithNullSource
DAHexString
DALeastInfoURLExtension
DADAExtendedDescription
DATaskManager
DALocalDBHelper
DAPowerAssertionManager
_DAABLegacyContainerProvider
ASAccountActor
ASAccountActorMessages
DAAccountUpgrader
DAContainerProvider
DADataHandler
NotesSupport
_DAContactsContainerProvider
DAStoreSyncStatusUpdater
DALocalDBWatcher
DALocalDBWatcherDBInfo
DALocalDBWatcherCalConcernedParty
NSCopying
DARunLoopRegistry
DAWaiterWrapper
DALocalDBGateKeeper
_DAContactsAccountContactsProvider
DATransaction
DAAggDReporter
DAUserNotificationUtilities
DAUserNotificationInfo
DAiCalendarLogger
ICSLoggingDelegate
DAContactsAccountProvider
DATrustHandler
DAABLegacyAccount
DATrafficLogger
DAPriorityRequest
DAPriorityManager
DAContactsContainer
DABabysitter
DAActivity
_DAContactsAccountABLegacyProvider
CDVIsSafeRedirectForRequestURL:
CDVRawPath
T@"DAMailMessage",&,N,V_message
DAAccountDoNotSaveReason
T@"NSArray",R,N
DAAccountPrincipalPath
T@"NSString",&,N,V_buildVersion
DACompactDescription
T@,&,N,V_forwardedAttendeeUUIDs
DAManagedDefaultForKey:
TQ,N,V_offFlags
DAObjectForKeyCaseInsensitive:
_agentClassName
OAuth2Token
_cachedAppState
SubCalSubscriptionURLKey
_codeForLastSyncError:userInfo:
T#,R
_destID
T@"<DADataclassLockWatcher>",&,N,V_eventsLockHolder
_emailAddresses
T@"<DADataclassLockWatcher>",&,N,V_waiter
_itemChangeType
T@"<DATask>",&,N,V_activeModalTask
_mergedFreeBusy
T@"<DATask>",&,N,V_modalHeldActiveQueuedTask
_parentFolderID
T@"<DATrustHandlerDelegate>",W,N,V_delegate
_processMonitor
T@"CNAccount",R,N,V_account
_setNewPriority
T@"CNContactStore",&,N,V_contactStore
_sourceServerId
T@"CNMutableContainer",R,N,V_mutableContainer
_storageSession
T@"DACalDBHelper",&,N,V_calDBHelper
_waiterIDsExpectingContactsLock
T@"DAMessageMoveRequest",&,N,V_origRequest
abGroupChangeId
T@"DATaskManager",R,N,V_taskManager
accountDidChangeWithChangeInfo:
T@"NSArray",&,N,V_emailAddresses
addClientToken:
T@"NSCountedSet",&,N,V_heldAsideContexts
allKeys
T@"NSData",R,C,N
T@"NSDate",&,N,V_lastQueryStartedTime
bundleWithPath:
T@"NSDictionary",R,N
cancelOfficeHoursRequestWithID:
T@"NSMapTable",&,N,V_clientsToPriorityRequests
clientAccountClassForACAccount:
T@"NSMapTable",&,N,V_contextToPowerAssertionRef
closeDatabaseForAccountID:save:
T@"NSMutableArray",&,N,V_contactsWaiters
contactsFolders
T@"NSMutableArray",&,N,V_mQueuedTasks
containsObject:
T@"NSMutableArray",&,N,V_pendingQueries
countForObject:
T@"NSMutableArray",&,N,V_queuedModalTasks
customSignature
T@"NSMutableArray",&,N,V_transactions
daemonAccountClassForACAccount:
T@"NSMutableDictionary",&,N,V_acAccountTypeToAccountFrameworkSubpath
enabled
T@"NSMutableDictionary",&,N,V_acParentAccountTypeToChildAccountTypes
externalSyncTag
T@"NSMutableDictionary",&,N,V_cachedAppState
giveAccountWithIDAnotherChance:
T@"NSMutableDictionary",&,N,V_failedWaiters
handler
T@"NSMutableDictionary",&,N,V_mResolvedEmailToX509Certs
identityPersist
T@"NSMutableDictionary",&,N,V_restrictedWaiters
initWithStatus:sourceID:destID:
T@"NSMutableSet",&,N,V_heldIndependentTasks
isCalDAVAccount
T@"NSMutableSet",&,N,V_modalHeldIndependentTasks
isGoogleAccount
T@"NSMutableSet",&,N,V_waiterIDsExpectingEventsLock
isLocal
T@"NSObject<OS_dispatch_queue>",&,N,V_accountsQueue
lastSyncEndDate
T@"NSObject<OS_dispatch_queue>",N,V_callbackQueue
localizedInvalidPasswordMessage
T@"NSRunLoop",R,N
mapTableWithWeakToStrongObjects
T@"NSString",&,N,V_accountClassName
markedAsDefault
T@"NSString",&,N,V_clientAccountClassName
message
T@"NSString",&,N,V_daemonAccountClassName
notesLockHolder
T@"NSString",&,N,V_familyDelegateACAccountID
onFlags
T@"NSString",&,N,V_filename
preview
T@"NSString",&,N,V_sourceContainerId
protocolVersion
T@"NSString",&,N,V_unitTestHackRunLoopMode
refreshInterval
T@"NSString",C,N,V_attachmentName
replyTo
T@"NSString",C,N,V_destID
retrieveOofSettingsForConsumer:
T@"NSString",C,N,V_folderName
saveFetchingAutomaticallyState:
T@"NSString",C,N,V_groupIdentifier
T@"NSString",C,N,V_message
setCalDBHelper:
T@"NSString",C,N,V_parentFolderID
setDisplayName:
T@"NSString",C,N,V_serverID
setIgnoresGuardianRestrictions:
T@"NSString",C,N,V_sourceID
setRequestType:
T@"NSString",R,C
setTaskManager:
T@"NSString",R,N
setWaiterIDsExpectingNotesLock:
T@"NSString",R,N,V_label
shareResponseFinishedWithError:
T@"NSString",R,N,V_propertyNamespace
shouldUseCalendarHomeSyncReport
T@"NSString",R,N,V_value
startup
T@"NSTimer",&,N,V_userInitiatedSyncTimer
stringByAppendingPathExtension:
T@"NSURL",C,N
subject
T@"NoteContext",&,N,V_noteDB
syncEndedForCalendar:withError:
T@,&,N,S_setChangedItem:,V_changedItem
updateExistingAccountProperties
T@,&,N,V_forwardedAttendees
T@,&,N,V_serverId
watcher
.cxx_destruct
CDVObjectForKeyCaseInsensitive:
CalDAVSubscribedCalendarsKey
T@"NSArray",C,N
DAAccountIdentifiersToIgnoreForUniquenessCheck
T@"NSCountedSet",&,N,V_contexts
DAAccountSavePreflighted
T@"NSString",R,N,V_propertyName
DAExtendedDescription
TB,N,V_claimedOwnershipOfEvents
DAMergeOverrideDictionary:
Ti,N,V_changeId
DARequestByApplyingStorageSession:
_attachmentName
SubCalFilterAlarmsKey
_cnChangeAnchor
SubCalTitleKey
_concernedParty
T@"<DADataclassLockWatcher>",&,N,V_contactsLockHolder
_ekAccountErrorFromDAErrorCode:
T@"<DADataclassLockWatcher>",&,N,V_notesLockHolder
_hasTasksIndicatingARunningSync
T@"<DATask>",&,N,V_activeExclusiveTask
_longID
T@"<DATask>",&,N,V_activeQueuedTask
_noteDB
T@"<DATransactionMonitorDelegate>",W,N,V_transactionMonitorDelegate
_pendingQueries
T@"ACAccount",R,N,V_backingAccountInfo
_scheduleSelector:withArgument:
T@"CNChangeHistoryAnchor",&,N,V_cnChangeAnchor
_source
T@"CNContactStore",R,N,V_contactStore
_status
T@"DAAccount",W,N,V_account
_waiter
T@"DALocalDBWatcher",&,N,V_watcher
abDBThrowOnNil:
T@"DAStatusReport",&,N,V_statusReport
account
T@"DATrustHandler",&,N,V_trustHandler
activeModalTask
T@"NSArray",R,N,V_appIdsForPasswordPrompt
addSaveRequest:
T@"NSData",&,N
arrayWithArray:
T@"NSDate",&,N,V_endTime
bundleForClass:
T@"NSDate",&,N,V_startTime
calendarWithExternalIdentifier:
T@"NSHashTable",&,N,V_accounts
cancelTask:withUnderlyingError:
T@"NSMapTable",&,N,V_contextToGroupIdentifier
closeDBAndSave:
T@"NSMapTable",&,N,V_groupIdentifierToContexts
constraintsPath
T@"NSMutableArray",&,N,V_eventsWaiters
contactsWaiters
T@"NSMutableArray",&,N,V_notesWaiters
context
T@"NSMutableArray",&,N,V_queuedExclusiveTasks
currentPriority
T@"NSMutableArray",&,N,V_saveRequests
da_URLWithScheme:host:port:uri:
T@"NSMutableDictionary",&,N,V_acAccountTypeToAccountDaemonBundleSubpath
dealloc
T@"NSMutableDictionary",&,N,V_acAccountTypeToClassNames
endTime
T@"NSMutableDictionary",&,N,V_blocksByConcernedParty
flagged
T@"NSMutableDictionary",&,N,V_dataclassPropertyURLsByDataclass
groupIdentifier
T@"NSMutableDictionary",&,N,V_haveWarnedAboutCertDict
hostWithoutPath
T@"NSMutableDictionary",&,N,V_refreshingWaiters
initWithFormat:
T@"NSMutableSet",&,N,V_heldAsideGroupIdentifiers
isAuthenticated
T@"NSMutableSet",&,N,V_independentTasks
isDraft
T@"NSMutableSet",&,N,V_waiterIDsExpectingContactsLock
isGroup
T@"NSMutableSet",&,N,V_waiterIDsExpectingNotesLock
isProxy
T@"NSObject<OS_dispatch_queue>",&,N,V_pendingQueryQueue
loadKeychainInformationsForURL:
T@"NSObject<OS_os_log>",R,N
lowercaseString
T@"NSSet",R,N
markForDeletion
T@"NSString",&,N,V_agentClassName
maxSize
T@"NSString",&,N,V_clientIdentifier
monitorAccount:
T@"NSString",&,N,V_destinationContainerId
numberWithBool:
T@"NSString",&,N,V_familyDelegateAltDSID
parentMailboxID
T@"NSString",&,N,V_mergedFreeBusy
protectionSpace
T@"NSString",&,N,V_sourceServerId
refresh
T@"NSString",C,N
release
T@"NSString",C,N,V_changeTrackingID
resumeMonitoringFoldersWithIDs:
T@"NSString",C,N,V_folderID
saveAccountPropertiesWithError:
T@"NSString",C,N,V_fromFolder
sentItemsFolder
T@"NSString",C,N,V_longID
setAccountType:
T@"NSString",C,N,V_messageID
setDataclasses:
T@"NSString",C,N,V_powerAssertionGroupID
setHaveWarnedAboutCert:forHost:
T@"NSString",C,N,V_sourceApplicationBundleIdentifier
setOrigRequest:
T@"NSString",C,N,V_toFolder
setStripAlarms:
T@"NSString",R,C,N
setToDosNumberOfPastDaysToSync:
T@"NSString",R,N,V_accountID
setWithObjects:
T@"NSString",R,N,V_path
sharedDBWatcher
T@"NSString",R,N,V_transactionId
sources
T@"NSTimer",&,N,V_managerIdleTimer
stringByAppendingPathComponent:
T@"NSTimer",&,N,V_xpcTransactionTimer
subcalAccountID
T@"NSURL",R,N
subscriptionURL
T@"RBSProcessMonitor",&,N,V_processMonitor
syncTag
T@,&,N,V_context
uppercaseString
T@,&,N,V_instanceId
userAgentHeader
T@,R,W,N,V_concernedParty
T@?,C,N,V_calUnitTestCallbackBlock
T@?,C,N,V_completionHandler
T@?,C,N,V_handler
TB,N
TB,N,GisChangeHistoryTruncated,V_changeHistoryTruncated
TB,N,GisGuardianRestricted
TB,N,GisGuardianStateDirty
TB,N,V_claimedOwnershipOfContacts
TB,N,V_claimedOwnershipOfNotes
TB,N,V_hasRemoteChanges
TB,N,V_ignoresGuardianRestrictions
TB,N,V_isDefault
TB,N,V_isValidating
TB,N,V_markedAsDefault
TB,N,V_markedForDeletion
TB,N,V_retrieveAvailablilty
TB,N,V_retrieveCertificates
TB,N,V_send
TB,N,V_shouldUseOpportunisticSockets
TB,N,V_wasUserInitiated
TB,R
TB,R,N
TB,R,N,V_shouldFailAllTasks
TQ,N,V_itemChangeType
TQ,N,V_latestSequenceNumber
TQ,N,V_onFlags
TQ,R
T^v,N,V_abDB
T^v,N,V_container
T^v,R,N,V_account
T^v,R,N,V_addressBook
T^v,R,N,V_source
Td,N
Ti,N,SsetDAAccountVersion:
Ti,N,V_abConnectionCount
Ti,N,V_abGroupChangeId
Ti,N,V_abPersonChangeId
Ti,N,V_bodyFormat
Ti,N,V_calAlarmChangeId
Ti,N,V_calAttachmentChangeId
Ti,N,V_calAttendeeChangeId
Ti,N,V_calEventChangeId
Ti,N,V_calRecurrenceChangeId
Ti,N,V_highestSequenceNumber
Ti,N,V_lastSavedSequenceNumber
Ti,N,V_maxSize
Ti,N,V_noteConnectionCount
Ti,N,V_requestType
Ti,N,V_state
Ti,N,V_status
Ti,N,V_transactionCount
Ti,R,N
Ti,R,N,V_currentPriority
Ti,R,N,V_waiterNum
Tq,N
Tq,N,V_UIDataclasses
Tq,N,V_availabilityStatus
Tq,N,V_certificatesStatus
Tq,N,V_dataclass
Tq,N,V_dataclasses
Tq,N,V_foregroundDataclasses
Tq,N,V_refreshDataclasses
Tq,N,V_status
Tq,R,N
UIDataclasses
URLByRemovingLastPathComponent
URLWithString:
URLWithString:relativeToURL:
URLWithUsername:
URLWithUsername:withPassword:
URLWithoutUsername
UTF8String
UUID
UUIDString
_CFURLRequest
_DACopyMutableAttributesForAccountWithPersistentUUID:accessibility:
_DACopyMutableQueryForAccountWithPersistentUUID:
_UIDataclasses
_abConnectionCount
_abDB
_abDBQueue
_abGroupChangeId
_abOpenDBWithClientIdentifier:
_abPersonChangeId
_abortWaiterForWrappers:
_acAccountTypeToAccountDaemonBundleSubpath
_acAccountTypeToAccountFrameworkSubpath
_acAccountTypeToClassNames
_acParentAccountTypeToChildAccountTypes
_account
_accountClassName
_accountErrorCodeForNSError:
_accountID
_accountPasswordChanged
_accountTypeWithIdentifier:inStore:
_accounts
_accountsQueue
_actionForTrust:host:service:
_activeExclusiveTask
_activeModalTask
_activeQueuedTask
_addAccountInfo:forFrameworkNamed:
_addressBook
_appIdsForPasswordPrompt
_availabilityStatus
_backingAccountInfo
_blocksByConcernedParty
_bodyFormat
_buildVersion
_cachedDatabaseForAccountID:path:
_cachedDatabaseForAuxDatabaseRef:path:
_cachedMainDatabasePath
_calAlarmChangeId
_calAttachmentChangeId
_calAttendeeChangeId
_calDBHelper
_calDBInfosByPath
_calDBQueue
_calEventChangeId
_calRecurrenceChangeId
_calUnitTestCallbackBlock
_callbackQueue
_canWakenWaiter:
_cancelTasksWithReason:
_canonicalizePath:
_certificatesStatus
_changeHistoryTruncated
_changeId
_changeTrackingID
_changedItem
_claimedOwnershipOfContacts
_claimedOwnershipOfEvents
_claimedOwnershipOfNotes
_cleanupStoreForDisabledAccount:inStore:
_clearCachedCredentials
_clearUserInitiatedSyncTimer
_clientAccountClassName
_clientIdentifier
_clientToken
_clientsToPriorityRequests
_closeDatabase:path:
_completionHandler
_concernedNotePartyToBlockMap
_connectionCountsByPath
_consumers
_contactStore
_contactsLockHolder
_contactsWaiters
_container
_containerPathsByAccountID
_containerPathsByAuxDatabaseID
_context
_contextToGroupIdentifier
_contextToPowerAssertionRef
_contexts
_continueCount
_currentPriority
_daAccountsWithAccountTypeIdentifiers:enabledForDADataclasses:filterOnDataclasses:withCompletion:
_daActivity
_daKeychainAccessibilityForSecAccessibility:
_daemonAccountClassName
_daemonDiedNotification:
_databasesByContainerPath
_dataclass
_dataclassPropertyURLsByDataclass
_dataclasses
_dbInfoForAccountID:create:
_decrementRefreshCountForWaiter:forOperationWithName:
_decrementRefreshCountForWaiterID:operationName:
_delegate
_dequeueQuery
_destinationContainerId
_ekAccountErrorFromCoreDAVErrorCode:
_ekAccountErrorFromCoreDAVHTTPStatusCode:
_ekAccountErrorFromDAValidationErrorCode:
_ekAccountErrorFromSubCalErrorCode:
_ekAccountErrorFromURLError:
_endTime
_endXpcTransaction
_ensureCustomLogFile
_eventStore
_eventStorePurger
_eventsLockHolder
_eventsWaiters
_failedWaiters
_familyDelegateACAccountID
_familyDelegateAltDSID
_filename
_findPrivateFrameworks
_findSubscribedCalendarForAccount:inEventStore:
_folderHierarchyChanged
_folderID
_folderName
_folderUpdatedNotification:
_foldersThatExternalClientsCareAboutChanged
_foregroundDataclasses
_forwardedAttendeeUUIDs
_forwardedAttendees
_fromFolder
_groupIdentifier
_groupIdentifierToContexts
_handleAccountAddOrModify:withChangeInfo:inStore:accountUpdater:
_handleAccountDelete:withChangeInfo:inStore:
_handleCalChangeNotification
_handleCalDAVAccountModifiedByDataAccess:withChangeInfo:inStore:accountUpdater:
_handleChangeToSubscribedCalendar:withChangeInfo:inStore:accountUpdater:
_handleSignificantPropertyChanges:
_handler
_hasInitted
_hasRemoteChanges
_hasTasksForcingNetworkConnection
_haveWarnedAboutCertDict
_heldAsideContexts
_heldAsideGroupIdentifiers
_heldIndependentTasks
_highestSequenceNumber
_ignoresGuardianRestrictions
_incrementRefreshCountForWaiterID:operationName:
_independentTasks
_init
_initOptions
_initWithCFURLRequest:
_instanceId
_isCanceledError:
_isDefault
_isFetchingAutomatically
_isIdentityManagedByProfile
_isValidating
_label
_lastQueryStartedTime
_lastSavedSequenceNumber
_latestSequenceNumber
_leafAccountTypes
_loadFrameworkAtSubpath:
_logSyncEnd
_mQueuedTasks
_mResolvedEmailToX509Certs
_mainDatabasePath
_makeStateTransition
_managerIdleTimer
_mappedAccountErrorFromError:
_markedAsDefault
_markedForDeletion
_maxSize
_message
_messageID
_modalHeldActiveQueuedTask
_modalHeldIndependentTasks
_moveExchangeCredentialsToAppleAccessGroup
_mutableContainer
_newASPolicyKeyNotification:
_noteConnectionCount
_noteDBQueue
_noteWatcher
_notesChangedExternally
_notesLockHolder
_notesWaiters
_notifyDaHolidaySubCalAccount
_notifyWaitersForDataclasses:
_offFlags
_onFlags
_openDatabaseForPath:clientID:createdDatabaseToConsume:
_origRequest
_path
_pathForAccountID:createdDatabase:
_pendingQueryQueue
_performBlockWithGenericClientDBForAccount:block:
_performTask:
_pickAccountToKeepWithAccount:andAccount:
_populateVersionDescriptions
_powerAssertionGroupID
_propertyName
_propertyNamespace
_queue
_queuedExclusiveTasks
_queuedModalTasks
_reactivateHeldTasks
_reallyCancelAllSearchQueries
_reallyCancelPendingSearchQuery:
_reallyCancelSearchQuery:
_reallyPerformSearchQuery:
_reallySearchQueriesRunning
_recalculatePriority
_refreshCredential
_refreshDataclasses
_refreshingWaiters
_registerForAddressBookYieldNotifications
_registerForCalendarYieldNotificationsForDB:
_registerWaiter:forDataclassLocks:preempt:completionHandler:
_releaseAssertionForContext:
_releasePowerAssertionForTask:
_reloadBabysitterProperties
_requestCancelTasksWithReason:
_requestType
_restrictedWaiters
_retainAssertionForContext:
_retainPowerAssertionForTask:
_retrieveAvailablilty
_retrieveCertificates
_sanityCheckCalDAVAccount:accountChangeInfo:
_sanityCheckChildAccountOfType:withParent:accountChangeInfo:inStore:updater:
_sanityCheckChildDAVAccount:withParent:accountChangeInfo:
_sanityCheckChildSubCalAccountsWithParent:inStore:accountUpdater:
_sanityCheckEnabledDataclassesOnExchangeAccountInfo:
_sanityCheckSubscribedCalendarAccountInfo:
_saveDatabase:path:fushCaches:
_saveRequests
_schedulePerformTask:
_scheduleStartModal:
_secAccessibilityForDAKeychainAccessibility:
_send
_sendAllClearNotifications
_serverID
_serverId
_serverSuffixesToAlwaysFail
_setChangedItem:
_setForegroundDataclasses:
_setPersistentUUID:
_setUnitTestHackRunLoopMode:
_setupStoreForNewAccount:
_shouldFailAllTasks
_shouldUseOpportunisticSockets
_sourceApplicationBundleIdentifier
_sourceContainerId
_sourceID
_startModal:
_startTime
_state
_statusReport
_store
_supportedChildAccountTypesForParentAccountType:
_taskForcesNetworking:
_taskInQueueForcesNetworkConnection:
_taskManager
_toFolder
_transaction
_transactionCount
_transactionId
_transactionMonitorDelegate
_transactions
_trustHandler
_unitTestHackRunLoopMode
_updateCalendarFromAccount:
_updateFacebookAccountAuthenticationTypes
_updateForegroundDataclasses
_updateStatusForCalendar:lastSyncStartDate:lastSyncEndDate:lastSyncError:canceled:
_updateStatusForCalendarWithExternalID:sourceExternalID:lastSyncStartDate:lastSyncEndDate:lastSyncError:canceled:
_updateStatusForSource:lastSyncStartDate:lastSyncEndDate:lastSyncError:canceled:
_updateStatusForStoreWithExternalID:lastSyncStartDate:lastSyncEndDate:lastSyncError:canceled:
_updateSubscribedCalendarAccountProperties:
_upgradeDAAccounts
_useFakeDescriptions
_useOpportunisticSocketsAgain
_userInitiatedSyncTimer
_value
_version
_waiterIDsExpectingEventsLock
_waiterIDsExpectingNotesLock
_waiterNum
_wasUserInitiated
_watcher
_webLoginRequestedAtURL:reasonString:inQueue:completionBlock:
_writeDeviceSpecificID
_xpcActivity
_xpcTransactionTimer
aa_isSuspended
abChangeTrackingID
abCloseDBAndSave:
abConnectionCount
abConstraintPlistPath
abDB
abDefaultAccountInfoSuitableForLogging
abOpenDBAsGenericClient
abOpenDBWithClientIdentifier:
abPersonChangeId
abProcessAddedImages
abProcessAddedRecords
abSaveDB
abSetTestABDBDir:
abTestABDBDir
abValidateDefaultSource
absoluteString
absoluteURL
acAccountTypeToAccountDaemonBundleSubpath
acAccountTypeToAccountFrameworkSubpath
acAccountTypeToClassNames
acParentAccountTypeToChildAccountTypes
account:isValid:validationError:
accountBoolPropertyForKey:
accountByCreatingAccountWithExternalIdentifier:
accountClassForACAccount:
accountClassName
accountContainsEmailAddress:
accountDescription
accountDidChangeFromOldAccountInfo:
accountForAccountId:
accountForContainerWithIdentifier:
accountHasSignificantPropertyChangesFromOldAccountInfo:
accountHasSignificantPropertyChangesWithChangeInfo:
accountID
accountIdentifier
accountIdentifiersEnabledForDataclasses:withAccountTypeIdentifiers:completion:
accountIntPropertyForKey:
accountPersistentUUID
accountProperties
accountPropertyForKey:
accountShouldContinue:
accountType
accountTypeIdentifier
accountTypeWithAccountTypeIdentifier:
accountTypeWithAccountTypeIdentifier:error:
accountTypeWithIdentifier:completion:
accountWithIDShouldContinue:
accountWithIdentifier:
accountWithIdentifier:completion:
accounts
accountsMatchingPredicate:error:
accountsProviderWithDBHelper:
accountsQueue
accountsWithAccountType:
accountsWithAccountType:completion:
accountsWithAccountTypeIdentifiers:error:
acquireCachedEventStoreOrCreate:
actionForTrust:forHost:andService:
activeExclusiveTask
activeQueuedTask
addAccount:
addAccount:withCompletionHandler:
addBlock:forConcernedParty:account:
addCert:forEmailAddress:
addObject:
addObjectsFromArray:
addObserver:selector:name:
addObserver:selector:name:object:
addTimer:forMode:
addToCoreDAVLoggingDelegates
addUsernameToURL:
additionalHeaderValues
addressBook
agentClassForACAccount:
agentClassName
allAccounts
allBlocks
allConcernedParties
allContainers
allContainersForAccountWithExternalIdentifier:
allCredentials
allObjects
allOpenDatabases
allTasks
allValues
allowTrust:forHost:service:
allowsKeyedCoding
appIDsToDataclasses
appIdsForPasswordPrompt
appWithBundleID:isNowRunningAndVisible:
appendBytes:length:
appendData:
appendFormat:
appendString:
arePropertiesReadonly
array
arrayWithObjects:count:
asContainer
asSource
attachmentName
attachments
authenticationType
autodiscoverAccountConfigurationWithConsumer:
autorelease
availabilityStatus
babysitterEnabled
backingAccountInfo
beginDownloadingAttachmentWithUUID:consumer:
blocksByConcernedParty
body
bodyFormat
bodySize
bodyTruncated
bodyType
boolForKey:
boolValue
buildVersion
bumpDataclassesToUIPriority:
bundle
bytes
cTag
cachedAppState
calAlarmChangeId
calAttachmentChangeId
calAttendeeChangeId
calCloseDatabaseForAccountID:save:
calCloseDatabaseForAuxDatabaseRef:save:
calContainerProvider
calDAVURLPath
calDBHelper
calDatabaseForAccountID:
calDatabaseForAuxDatabaseRef:
calEventChangeId
calMainDatabasePath
calOpenDatabaseAsGenericClientForAccountID:
calOpenDatabaseAsGenericClientForAuxDatabaseRef:
calOpenDatabaseForAccountID:clientID:
calOpenDatabaseForAuxDatabaseRef:clientID:
calRecurrenceChangeId
calSaveDatabaseAndFlushCachesForAccountID:
calSaveDatabaseForAccountID:
calSaveDatabaseForAuxDatabaseRef:
calSetMainDatabasePath:containerProvider:
calUnitTestCallbackBlock
cal_isCertificateError
cal_personaIdentifier
cal_serializableError
calendarAvailabilityRequestFinishedWithError:
calendarDirectorySearchFinishedWithError:exceededResultLimit:
calendarExternalId
calendarsDataclassModified
calendarsForEntityType:
callStackSymbols
callbackQueue
canAccessCredentialsWithAccessibility:
canSaveWithAccountProvider:
cancelAllSearchQueries
cancelAllTasks
cancelCalendarAvailabilityRequestWithID:
cancelCalendarDirectorySearchWithID:
cancelDownloadingInstance:error:
cancelGrantedDelegatesListRequestWithID:
cancelPreviousPerformRequestsWithTarget:
cancelPreviousPerformRequestsWithTarget:selector:object:
cancelSearchQuery:
cancelShareResponseInstance:error:
cancelTask:
cancelTaskWithID:
cancelTaskWithReason:underlyingError:
cancelTasksDueToOnPowerMode
cancelUpdateGrantedDelegatePermissionRequestWithID:
caseInsensitiveCompare:
certificatesStatus
changeHistoryTruncated
changeId
changeTrackingID
changeType
changedItem
characterAtIndex:
characterIsMember:
characterSetWithCharactersInString:
checkValidityOnAccountStore:withConsumer:
checkValidityOnAccountStore:withConsumer:inQueue:
childAccounts
claimedOwnershipOfContacts
claimedOwnershipOfDataclasses:
claimedOwnershipOfEvents
claimedOwnershipOfNotes
class
cleanupAccountFiles
clientAccountClassName
clientID
clientIdentifier
clientToken
clientTokenRequestedByServer
clientsToPriorityRequests
closeDatabaseForAuxDatabaseRef:save:
cnChangeAnchor
code
compare:
completelyIgnoreNotes
completionHandler
concernedParty
conformsToProtocol:
consumer
consumerForTask:
contactStore
contactsLockHolder
container
containerProvider
containerProviderWithDBHelper:
containerWithExternalIdentifier:forAccountWithExternalIdentifier:
containersMatchingPredicate:error:
contentsOfDirectoryAtPath:error:
contextToGroupIdentifier
contextToPowerAssertionRef
contexts
continueWithoutCredentialForAuthenticationChallenge:
conversationId
conversationIndex
copy
copyCurrentPersonaContextWithError:
copyLocalObjectFromId:
copyOfAllLocalObjectsInContainer
copyStorageSession
copyWithZone:
count
countByEnumeratingWithState:objects:count:
createNewContainerWithType:name:externalIdentifier:constraintsPath:syncData:contentReadonly:propertiesReadonly:forAccount:
createPersonaContextForBackgroundProcessingWithPersonaUniqueString:
creationDate
credential
credentialItemForKey:
credentialProtectionPolicy
credentialType
currentHandler
currentMode
currentPersona
currentRunLoop
customConnectionProperties
daAccountSubclassWithBackingAccountInfo:
daAccountVersion
da_URLWithDirtyString:
da_URLWithScheme:host:user:port:uri:
da_absoluteURLForChildLeastInfoRepresentationRelativeToParentURL:
da_accounts
da_accountsWithAccountTypeIdentifiers:
da_accountsWithAccountTypeIdentifiers:enabledForDADataclasses:
da_accountsWithAccountTypeIdentifiers:outError:
da_addNullRunLoopSourceAndPerformSelector:withObject:afterDelay:inModes:
da_appendSlashIfNeeded
da_classicPortForScheme:
da_dataWithHexString:
da_dataWithHexString:stringIsUppercase:
da_hasPrefixCaseInsensitive:
da_hexString
da_isEqualToDAVURL:
da_leastInfoStringRepresentationRelativeToParentURL:
da_loadDAAccountsWithAccountTypeIdentifiers:enabledForDADataclasses:withCompletion:
da_loadDAAccountsWithAccountTypeIdentifiers:withCompletion:
da_loadDAAccountsWithCompletion:
da_lowercaseHexStringWithoutSpaces
da_new64ByteGUID
da_newGUID
da_pathWithoutTrailingRemovingSlash
da_performSelectorThatDoesntAffectRetainCount:withObject:
da_rawPath
da_removeSlashIfNeeded
da_stringByAddingPercentEscapesForUsername
da_stringByRemovingPercentEscapesForUsername
da_stringByURLEscapingPathComponent
da_trimWhiteSpace
da_uppercaseHexStringWithoutSpaces
da_urlByRemovingUsername
da_urlBySettingHost:
da_urlBySettingHost:keepUsername:
da_urlBySettingPassword:
da_urlBySettingPath:
da_urlBySettingPath:keepUsername:
da_urlBySettingPort:
da_urlBySettingPort:keepUsername:
da_urlBySettingScheme:
da_urlBySettingScheme:keepUsername:
da_urlBySettingUsername:
da_urlForLogging
daemonAccountClassName
daemonAppropriateAccountClassForACAccount:
dataUsingEncoding:
databaseForAccountID:
databaseForAuxDatabaseRef:
databaseIsCorrupt:
dataclass
dataclassProperties
dataclassPropertyURLsByDataclass
dataclasses
date
dateWithCalendarFormat:timeZone:
dateWithTimeIntervalSinceNow:
dateWithTimeIntervalSinceReferenceDate:
debugDescription
decodeIntForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
decrementTransactionCountForTransaction:
decrementXpcActivityContinueCount
defaultCenter
defaultContactsFolder
defaultContainerIdentifierForDADataclass:
defaultEventsFolder
defaultManager
defaultNotesFolder
defaultToDosFolder
defaultTrustManager
delegate
deleteAccount:
deleteContainer:
deletedItemsFolder
description
descriptor
destID
destinationContainerId
deviceType
dictionary
dictionaryWithContentsOfFile:
dictionaryWithObjects:forKeys:count:
didFinishAllXPCTransactions
didReceiveDarwinNotification:
discoverInitialPropertiesWithConsumer:
displayAccount
displayName
displayTo
distantPast
domain
domainOnly
doubleValue
downloadFinishedError:
draftsFolder
drainContainer
drainSuperfluousChanges
dropAssertionsAndRenewCredentialsInQueue:withHandler:
dropPowerAssertionsForGroupIdentifier:
emailAddress
emailAddresses
enableChangeLogging:
enabledDataclasses
enabledDataclassesBitmask
enabledForAnyDADataclasses:
enabledForDADataclass:
encodeInt:forKey:
encodeObject:forKey:
encodeWithCoder:
encodedHeaders
encryptionIdentityPersistentReference
endDailyAggDReporter
endDailyAnalyticsReporter
endowmentNamespaces
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
errorWithDomain:code:userInfo:
esAccountSubclassWithBackingAccountInfo:
eventStore
eventsFolders
eventsLockHolder
eventsWaiters
exceptionWithName:reason:userInfo:
exceptionsDict
exceptionsForDigest:
executeAllSaveRequests
executeSaveRequest:error:
externalID
externalIdentifier
externalIdentifierString
externalModificationTag
externalSyncData
failedWaiters
familyDelegateACAccountID
familyDelegateAltDSID
fetchOfficeHoursWithConsumer:error:
fetchedAccountWithExternalIdentifier:
fileSystemRepresentation
fileURLWithPath:
filename
firstObject
flaggedIsSet
folderID
folderIDsThatExternalClientsCareAboutForDataclasses:withTag:
folderIDsThatExternalClientsCareAboutWithTag:
folderName
foldersTag
foregroundDataclasses
forwardedAttendeeUUIDs
forwardedAttendees
from
fromFolder
generatesBulletins
getAppleIDSession
getCFRunLoop
getDAExceptionObjectWithLocalItem:originalEvent:account:
getDAObjectWithLocalItem:serverId:account:
getFetchingAutomaticallyState
getIdFromLocalObject:
getPendingQueryQueue
grantedDelegatesListRequestFinishedWithResults:error:
groupExpansionFinishedWithResults:error:
groupIdentifierToContexts
guardianRestricted
guardianStateDirty
guessPasswordForURL:
handleAccountDidChange:withChangeInfo:store:
handleAccountWillChange:withChangeInfo:store:accountUpdater:
handleCertificateError:
handleFailureInFunction:file:lineNumber:description:
handleFailureInMethod:object:file:lineNumber:description:
handleTrust:forHost:forAccount:withCompletionBlock:
handleTrustChallenge:
handleTrustChallenge:completionHandler:
handleTrustChallenge:forAccount:
handleTrustChallenge:forAccount:completionHandler:
handleValidationError:completion:
hasPrefix:
hasRemoteChanges
hasSuffix:
hasXpcActivity
hash
haveWarnedAboutCert:forHost:
haveWarnedAboutCertDict
heldAsideContexts
heldAsideGroupIdentifiers
heldIndependentTasks
highestSequenceNumber
host
hostFromDataclassPropertiesForDataclass:
iOSLegacyIdentifier
identifier
ignoresGuardianRestrictions
importance
inboxFolder
incrementTransactionCountForTransaction:
incrementXpcActivityContinueCount
independentTasks
infoDictionary
ingestBackingAccountInfoProperties
init
initMoveRequestWithMessage:fromFolder:toFolder:
initRequestForBodyFormat:withBodySizeLimit:
initRequestForBodyFormat:withFolderID:withServerID:withLongID:withBodySizeLimit:
initRequestForBodyFormat:withLongID:withBodySizeLimit:
initRequestForBodyFormat:withMessageID:withBodySizeLimit:
initRequestWithMessageID:
initRequestWithSetFlags:unsetFlags:message:
initWithABAccout:
initWithABSource:
initWithAccount:
initWithAccountStore:
initWithAccountType:
initWithAddressBook:
initWithAttachmentName:andMessageServerID:
initWithBackingAccountInfo:
initWithBytesNoCopy:length:encoding:freeWhenDone:
initWithCNContainer:
initWithCapacity:
initWithChangeType:accountIdentifier:accountTypeIdentifier:oldAccountProperties:username:password:oldUsername:oldPassword:modifiedDataClasses:clientName:
initWithChangedItem:propertyName:value:propertyNamespace:serverId:
initWithCoder:
initWithConcernedParty:accountID:
initWithContactStore:
initWithContactsFamilyDelegateAltDSID:familyDelegateACAccountID:
initWithContainer:changeTrackingID:
initWithDAAccount:
initWithData:encoding:
initWithDatabaseInitOptions:
initWithDelegate:
initWithDirectoryURL:
initWithEKOptions:
initWithEmailAddresses:
initWithEmailAddresses:retrieveCertificates:retrieveAvailability:withStartTime:endTime:
initWithExternalIdentifier:
initWithFilename:
initWithFireDate:interval:target:selector:userInfo:repeats:
initWithItemChangeType:changedItem:serverId:
initWithItemChangeType:changedItem:serverId:instanceId:
initWithItemChangeType:changedItem:serverId:status:
initWithItemChangeType:changedItem:sourceContainerId:sourceServerId:destinationContainerId:
initWithLabel:
initWithObjects:
initWithPassword:
initWithPath:
initWithRequestType:message:send:
initWithTrust:
insertObject:atIndex:
insertString:atIndex:
instanceID
instanceId
intValue
integerValue
invalidate
isAccount
isActiveSyncAccount
isAppleInternalInstall
isCalDAVChildAccount
isCardDAVAccount
isChangeHistoryTruncated
isChildAccount
isContact
isContainer
isContentReadonly
isDefault
isDelegateAccount
isDisabled
isEnabledForDataclass:
isEnabledToSyncDataclass:
isEqual:
isEqualToAccount:
isEqualToString:
isGuardianRestricted
isGuardianStateDirty
isHotmailAccount
isInHoldingPattern
isKindOfClass:
isLDAPAccount
isMemberOfClass:
isOofSupported
isPropertyDirty:
isSearchContainer
isShutdown
isSubscribedCalendarAccount
isSyncing
isValidating
itemChangeType
keyEnumerator
keychainAccessibilityType
label
lastObject
lastQueryStartedTime
lastSavedCalSequenceNumberForDatabaseInContainer:
lastSavedSequenceNumber
lastVerb
latestSequenceNumber
leafAccountTypes
leafAccountTypesToCheckForEquality
legacyIdentifier
length
load
loadDaemonBundleForACAccountType:
loadFrameworkForACAccountType:
localizedIdenticalAccountFailureMessage
logICSMessage:atLevel:
logSnippet:
longID
mQueuedTasks
mResolvedEmailToX509Certs
mailNumberOfPastDaysToSync
mailboxID
mailboxes
mainDatabasePath
mainRunLoop
managerIdleTimer
mapTableWithStrongToStrongObjects
markAsDefault
markedForDeletion
meContactIdentifier
meIdentifier
meetingRequestIsActionable
meetingRequestMetaData
meetingRequestUUID
mergeAllRecordsIntoContainer:shouldInsertChangeHistoryRecords:
mergedFreeBusy
messageClass
messageID
migratePasswordForAccount:
modalHeldActiveQueuedTask
modalHeldIndependentTasks
modifiedDataClasses
monitorFolderWithID:
monitorFoldersForUpdates:
monitorFoldersForUpdates:persistent:
monitorFoldersWithIDs:
monitorWithConfiguration:
monitoredAccounts
mutableContainer
mutableCopy
name
newDataHandlerForDataclass:container:changeTrackingID:
nextObject
noteCalDBDirChanged
noteCloseDBAndSave:
noteConnectionCount
noteDB
noteOpenDB
noteSaveDB
notesFolders
notesWaiters
null
numberWithDouble:
numberWithInt:
numberWithInteger:
oauth2Token
oauthInfoProvider
oauthToken
objectAtIndex:
objectAtIndexedSubscript:
objectEnumerator
objectForKey:
objectForKeyedSubscript:
offFlags
oldAccountProperties
oldUsername
onBehalfOfBundleIdentifier
oneshotListOfAccountIDs
openAuthenticationURL:forAccount:shouldConfirm:completion:
openDB
openDatabaseForAccountID:clientID:
openDatabaseForAuxDatabaseRef:clientID:
origRequest
os_log
parentAccount
parentAccountIdentifier
parentFolderID
password
passwordForAccountWithPersistentUUID:expectedAccessibility:shouldSetAccessibility:passwordExpected:
passwordWithExpected:
path
pendingQueries
pendingQueryQueue
performCalendarDirectorySearchForTerms:recordTypes:resultLimit:consumer:
performFetchAttachmentRequest:consumer:
performFetchMessageSearchResultRequests:consumer:
performFolderChange:isUserRequested:
performGroupExpansionForPrincipalPath:consumer:
performMailboxRequest:mailbox:previousTag:clientWinsOnSyncConflict:isUserRequested:consumer:
performMailboxRequest:mailbox:previousTag:isUserRequested:consumer:
performMailboxRequests:mailbox:previousTag:clientWinsOnSyncConflict:isUserRequested:consumer:
performMailboxRequests:mailbox:previousTag:isUserRequested:consumer:
performMoveRequests:consumer:
performResolveRecipientsRequest:consumer:
performSearchQuery:
performSelector:
performSelector:withObject:
performSelector:withObject:afterDelay:
performSelector:withObject:afterDelay:inModes:
performSelector:withObject:withObject:
performTask
performUsingAccountPersona:
persistence
persistentUUID
port
portFromDataclassPropertiesForDataclass:
postNotificationName:object:
powerAssertionGroupID
powerAssertionRetainCount:
predicateForAccountForContainerWithIdentifier:
predicateForAccountWithExternalIdentifier:
predicateForContainersInAccountWithIdentifier:includingDisabledContainers:
predicateForContainersIncludingDisabled:
predicateMatchingBundleIdentifier:
preferredAddress
preflightSaveWithAccountProvider:
principalPath
principalURL
privateFrameworksPath
processInfo
processMonitor
processName
promptForAllCerts
propertiesForDataclass:
propertyName
propertyNamespace
providerWithAddressBook:
providerWithContactStore:
publicDescription
query
queuedExclusiveTasks
queuedModalTasks
queuedTasks
rangeOfString:
rangeOfString:options:
rawTrustResultForSSLTrust:hostname:service:
reacquireClientRestrictions:
read
readIsSet
reattainPowerAssertionsForGroupIdentifier:
reattemptInvitationLinkageForMetaData:inFolderWithId:
redactedDescription
refreshDataclasses
refreshingWaiters
registerAccount:forOperationWithName:
registerConcernedCalParty:forAccountID:withChangedBlock:
registerConcernedNoteParty:withChangedBlock:
registerForInterrogationWithBlock:
registerPreemptiveWaiter:forDataclassLocks:completionHandler:
registerWaiter:forDataclassLocks:completionHandler:
registerWithiCalendar
relativePath
releasePowerAssertion:
relinquishLocksForWaiter:dataclasses:moreComing:
reload
remoteID
removeAccount:
removeAccount:completion:
removeAccount:withDeleteSync:completion:
removeAccountPropertyForKey:
removeAllObjects
removeBlockForConcernedParty:account:
removeClientCertificateData
removeConcernedCalParty:forAccountID:
removeConcernedNoteParty:
removeConsumerForTask:
removeCredential:forProtectionSpace:
removeDBSyncDataForAccountChange:
removeDelegateDatabasesNotMatchingAltDSIDs:
removeFromCoreDAVLoggingDelegates
removeItemAtPath:error:
removeKeychainInformationsForURL:
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removeObserver:name:object:
removePasswordForAccount:withPersistentUUID:
removePersistentCredentials
removeSlashIfNeeded
removeStoreForAccount:withChildren:inDatabase:mainDatabase:accountStore:
removeStoreForDeletedAccountWithIdentifier:inDatabase:mainDatabase:accountStore:
removeXpcActivity
renewCredentialsForAccount:options:completion:
replaceOccurrencesOfString:withString:options:range:
reportActiveExchangeOAuthAccountsCount
reportShareRequestAsJunkForCalendar:consumer:
requestCalendarAvailabilityForStartDate:endDate:ignoredEventID:addresses:consumer:
requestCancelTaskWithReason:
requestGrantedDelegatesListWithConsumer:
requestPriority:forClient:dataclasses:
requestType
resetAccountID
resetCertWarnings
resetStatusReport
resetSyncStatusForAllStoresIfNecessary
resetSyncStatusIfNecessaryForStoresOfType:
resolvedEmailToX509Certs
respondToShareRequestForCalendar:withResponse:consumer:
respondsToSelector:
restorePersonaWithSavedPersonaContext:
restrictedWaiters
restrictions
retain
retainCount
retainPowerAssertion:withGroupIdentifier:
retrieveAvailablilty
retrieveCertificates
rfc822Data
save:
saveAccount:withCompletionHandler:
saveAccountProperties
saveCalendar:commit:error:
saveContainer
saveDatabaseForAccountID:flushCaches:
saveDatabaseForAuxDatabaseRef:flushCaches:
saveKeychainInformationsForURL:andPassword:withAccessibility:
saveModifiedPropertiesOnBackingAccount
saveRequests
saveSource:commit:error:
saveVerifiedAccount:error:
saveVerifiedAccount:withCompletionHandler:
saveXpcActivity:
scheduleIdentifier
scheme
searchQueriesRunning
searchQuery:finishedWithError:
self
send
sendEmailsForCalEvents:consumer:
sendMessageWithRFC822Data:messageID:outgoingMessageType:originalMessageFolderID:originalMessageItemID:originalMessageLongID:originalAccountID:useSmartTasksIfPossible:isUserRequested:consumer:context:
sendSmartMessageWithRFC822Data:messageID:outgoingMessageType:originalMessageFolderID:originalMessageItemID:originalMessageLongID:originalAccountID:replaceOriginalMime:isUserRequested:consumer:context:
sender
server
serverComplianceClasses
serverID
serverId
serverRoot
serverTrust
setAbConnectionCount:
setAbDB:
setAbGroupChangeId:
setAbPersonChangeId:
setAcAccountTypeToAccountDaemonBundleSubpath:
setAcAccountTypeToAccountFrameworkSubpath:
setAcAccountTypeToClassNames:
setAcParentAccountTypeToChildAccountTypes:
setAccount:
setAccountBoolProperty:forKey:
setAccountClassName:
setAccountDescription:
setAccountIdentifier:
setAccountIntProperty:forKey:
setAccountProperty:forKey:
setAccounts:
setAccountsQueue:
setActiveExclusiveTask:
setActiveModalTask:
setActiveQueuedTask:
setAddressList:forKey:
setAddressListForBcc:
setAddressListForCc:
setAddressListForSender:
setAddressListForTo:
setAgentClassName:
setArePropertiesReadonly:
setAttachmentName:
setAuthenticated:
setAuthenticationType:
setAvailabilityStatus:
setBlocksByConcernedParty:
setBodyFormat:
setBuildVersion:
setCTag:
setCachedAppState:
setCalAlarmChangeId:
setCalAttachmentChangeId:
setCalAttendeeChangeId:
setCalDAVURLPath:
setCalEventChangeId:
setCalRecurrenceChangeId:
setCalUnitTestCallbackBlock:
setCallbackQueue:
setCertificatesStatus:
setChangeHistoryTruncated:
setChangeId:
setChangeTrackingID:
setClaimedOwnershipOfContacts:
setClaimedOwnershipOfEvents:
setClaimedOwnershipOfNotes:
setClientAccountClassName:
setClientIdentifier:
setClientsToPriorityRequests:
setCnChangeAnchor:
setCompletionHandler:
setConnectionDisplayName:
setConstraintsPath:
setConsumer:forTask:
setContactStore:
setContactsLockHolder:
setContactsWaiters:
setContainer:
setContentReadonly:
setContext:
setContextToGroupIdentifier:
setContextToPowerAssertionRef:
setContexts:
setCreationBlock:
setCredential:
setCustomSignature:
setDAAccountVersion:
setDaemonAccountClassName:
setDataContainerProvider:
setDataclass:
setDataclassPropertyURLsByDataclass:
setDefaultContainer:withLocalDBHelper:onlyIfNotSet:
setDelegate:
setDestID:
setDestinationContainerId:
setEmailAddress:
setEmailAddresses:
setEnabled:forDADataclass:
setEnabled:forDataclass:
setEncryptionIdentityPersistentReference:
setEndTime:
setEndowmentNamespaces:
setEventsLockHolder:
setEventsWaiters:
setExceptions:forDigest:
setExternalID:
setExternalIdentifier:
setExternalModificationTag:
setExternalSyncData:
setExternalSyncTag:
setFailedWaiters:
setFamilyDelegateACAccountID:
setFamilyDelegateAltDSID:
setFilename:
setFolderID:
setFolderIdsThatExternalClientsCareAboutAdded:deleted:foldersTag:
setFolderName:
setForegroundDataclasses:
setForwardedAttendeeUUIDs:
setForwardedAttendees:
setFromFolder:
setGeneratesBulletins:
setGroupIdentifier:
setGroupIdentifierToContexts:
setGuardianRestricted:
setGuardianRestricted:shouldPushChangeToServer:
setGuardianStateDirty:
setHandler:
setHasRemoteChanges:
setHaveWarnedAboutCertDict:
setHeader:forKey:
setHeldAsideContexts:
setHeldAsideGroupIdentifiers:
setHeldIndependentTasks:
setHighestSequenceNumber:
setHost:
setIdentityCertificatePersistentID:managedByProfile:
setIndependentTasks:
setInstanceId:
setIsDefault:
setIsValidating:
setItemChangeType:
setLastQueryStartedTime:
setLastSavedCalSequenceNumber:forDatabaseInContainer:
setLastSavedSequenceNumber:
setLastSyncDateForContainer:
setLastSyncEndDate:
setLastSyncError:userInfo:
setLastSyncStartDate:
setLatestSequenceNumber:
setLongID:
setMQueuedTasks:
setMResolvedEmailToX509Certs:
setMailNumberOfPastDaysToSync:
setMainDatabasePath:containerProvider:
setManagerIdleTimer:
setMarkedAsDefault:
setMarkedForDeletion:
setMaxSize:
setMeContactIdentifier:
setMeIdentifier:
setMergedFreeBusy:
setMessage:
setMessageID:
setModalHeldActiveQueuedTask:
setModalHeldIndependentTasks:
setName:
setNoteConnectionCount:
setNoteDB:
setNotesLockHolder:
setNotesWaiters:
setObject:forKey:
setObject:forKeyedSubscript:
setOffFlags:
setOfficeHours:withConsumer:error:
setOnFlags:
setOptions:
setParentAccount:
setParentFolderID:
setPassword:
setPassword:forAccount:withPersistentUUID:withAccessibility:
setPendingQueries:
setPendingQueryQueue:
setPersistentUUID:
setPort:
setPowerAssertionGroupID:
setPredicates:
setPrincipalPath:
setPrincipalURL:
setProcessMonitor:
setProtocolVersion:
setPurgingAllowed:
setQueuedExclusiveTasks:
setQueuedModalTasks:
setRefreshDataclasses:
setRefreshInterval:
setRefreshingWaiters:
setRestrictedWaiters:
setRestrictions:
setRetrieveAvailablilty:
setRetrieveCertificates:
setSaveRequests:
setSend:
setServerID:
setServerId:
setService:
setShouldDoInitialAutodiscovery:
setShouldRemoveAlarms:
setShouldRemoveAttachments:
setShouldUseOpportunisticSockets:
setSigningIdentityPersistentReference:
setSourceApplicationBundleIdentifier:
setSourceContainerId:
setSourceID:
setSourceServerId:
setStartTime:
setState:
setStateDescriptor:
setStatus:
setStatusReport:
setStripAttachments:
setSubcalURL:
setSyncData:
setSyncTag:
setSyncingAllowed:
setTimeout:
setToFolder:
setTransactionCount:
setTransactionMonitorDelegate:
setTransactions:
setTrust:
setTrustHandler:
setType:
setUIDataclasses:
setUnitTestHackRunLoopMode:
setUpCalStoreForParentAccount:withChildren:inDatabase:
setUpdateHandler:
setUseFTP:
setUseSSL:
setUser:
setUserInitiatedSyncTimer:
setUsername:
setValue:forKey:
setValues:
setVersionForNewAccount
setWaiter:
setWaiterIDsExpectingContactsLock:
setWaiterIDsExpectingEventsLock:
setWasUserInitiated:
setWatcher:
setWithArray:
setXpcTransactionTimer:
settingsRequestFinishedWithResults:status:error:
setupProcessStateMonitor
sharedBabysitter
sharedConnection
sharedCredentialStorage
sharedGateKeeper
sharedInstance
sharedInstanceForAccountType:creatingClass:
sharedKeychain
sharedLogger
sharedManager
sharedMonitor
sharedPowerAssertionManager
sharedRunLoop
sharedTransactionMonitor
shouldAutodiscoverAccountProperties
shouldCancelTaskDueToOnPowerFetchMode
shouldCreateAccountForBackingAccountInfo:
shouldDoInitialAutodiscovery
shouldFailAllTasks
shouldForceNetworking
shouldHoldPowerAssertion
shouldRemoveAlarms
shouldRemoveAttachments
shouldRemoveDBSyncDataOnAccountChange
shouldUseOpportunisticSockets
showPromptWithOptions:responseBlock:
showUserNotification:groupIdentifier:callbackQueue:sourceRunLoop:completionBlock:
shutdown
signingIdentityPersistentReference
slurpAndRemoveLookasideFile:prefixString:suffixString:
smimeType
sortedArrayUsingComparator:
source
sourceApplicationBundleIdentifier
sourceContainerId
sourceID
sourceIdentifier
sourceServerId
sourceType
sourceWithExternalID:
spinnerIdentifiers
standardUserDefaults
startDailyAggDReporter
startDailyAnalyticsReporter
startModal
startTime
state
stateString
status
statusReport
stopMonitoringAllFolders
stopMonitoringFolderWithID:
stopMonitoringFolders
stopMonitoringFoldersForUpdates:
stopMonitoringFoldersWithIDs:
string
stringByAppendingFormat:
stringByAppendingString:
stringByDeletingLastPathComponent
stringByTrimmingCharactersInSet:
stringByURLQuoting
stringForItemChangeType:
stringValue
stringWithFormat:
stringWithString:
stringWithUTF8String:
stripAlarms
stripAttachments
subcalURL
submitExclusiveTask:
submitExclusiveTask:toFrontOfQueue:
submitIndependentTask:
submitQueuedTask:
substringFromIndex:
substringToIndex:
superclass
supportsAuthentication
supportsConversations
supportsDraftFolderSync
supportsEmailFlagging
supportsMailboxSearch
supportsSecureCoding
supportsSmartForwardReply
supportsUniqueServerId
suspendMonitoringFoldersWithIDs:
syncData
syncEndedForCalendarWithExternalID:sourceExternalID:withError:
syncEndedForStoreWithExternalID:withError:
syncStartedForCalendar:
syncStartedForCalendarWithExternalID:sourceExternalID:
syncStartedForStoreWithExternalID:
syncStoreIdentifier
synchronizeContactsFolder:previousTag:previousSyncToken:actions:highestIdContext:isInitialUberSync:isResyncAfterConnectionFailed:previousTagIsSuspect:moreLocalChangesAvailable:consumer:
synchronizeEventsFolder:previousTag:actions:highestIdContext:isInitialUberSync:isResyncAfterConnectionFailed:moreLocalChangesAvailable:consumer:
synchronizeNotesFolder:noteContext:previousTag:actions:changeSet:notesToDeleteAfterSync:isInitialUberSync:isResyncAfterConnectionFailed:moreLocalChangesAvailable:consumer:
synchronizeToDosFolder:previousTag:actions:highestIdContext:isInitialUberSync:isResyncAfterConnectionFailed:moreLocalChangesAvailable:consumer:
systemTimeZone
takeValuesFromModifiedAccount:
taskDidFinish:
taskEndModal:
taskIsModal:
taskManager
taskManagerDidAddTask:
taskManagerWillRemoveTask:
taskRequestModal:
taskState
tearDown
threadTopic
timeIntervalSinceDate:
timeIntervalSinceNow
timeIntervalSinceReferenceDate
toDosFolders
toDosNumberOfPastDaysToSync
toFolder
transactionCount
transactionId
transactionMonitorDelegate
transactions
trustHandler
type
unactionableICSRepresentationForMetaData:inFolderWithId:outSummary:
unitTestHackRunLoopMode
unmonitorAccount:
unregisterAccount:forOperationWithName:
unregisterWaiterForDataclassLocks:
updateAccount:withCompletionHandler:
updateContainer:
updateGrantedDelegatePermission:consumer:
updateGrantedDelegatePermissionFinishedWithError:
updateOofSettingsWithParams:consumer:
updateSaveRequest:
upgradeAccount
upgradeAccounts:
urlFromDataclassPropertiesForDataclass:
useContacts
useContactsFramework
useCredential:forAuthenticationChallenge:
useFTP
useSSL
useSSLFromDataclassPropertiesForDataclass:
user
userAgent
userInfo
userInitiatedSyncTimer
username
usernameWithoutDomain
value
vendDaemons:
vendPriorityManagers
verbIsSet
verifyCredentialsForAccount:saveWhenAuthorized:withHandler:
waiter
waiterID
waiterIDsExpectingContactsLock
waiterIDsExpectingEventsLock
waiterIDsExpectingNotesLock
waiterNum
wasUserInitiated
weakObjectsHashTable
webLoginRequestedAtURL:reasonString:inQueue:completionBlock:
whitespaceAndNewlineCharacterSet
wipeServerIds
writeToFile:atomically:
xpcTransactionTimer
zone
@24@0:8@16
B24@0:8@16
v16@0:8
i16@0:8
v20@0:8i16
B16@0:8
@16@0:8
v24@0:8@16
v28@0:8B16@20
B24@0:8q16
v28@0:8B16q20
q16@0:8
v32@0:8@16@24
i24@0:8@16
v28@0:8i16@20
@20@0:8B16
v24@0:8@?16
q24@0:8@16
v20@0:8B16
Vv24@0:8@16
v24@0:8q16
v40@0:8@16@24@32
@24@0:8q16
B24@0:8^@16
B24@0:8@?16
v28@0:8@16B24
^{__CFData=}24@0:8@16
v32@0:8^{__CFData=}16@24
^{__CFURLStorageSession=}16@0:8
@"ACAccount"
@"DAStatusReport"
@"NSMapTable"
^{__CFURLStorageSession=}
@"NSString"
@"DATaskManager"
@"NSObject<OS_xpc_object>"
@"DATrustHandler"
@"NSArray"
@"NSMutableDictionary"
@"NSMutableArray"
@"NSObject<OS_dispatch_queue>"
@"NSDate"
B32@0:8@16@?24
v32@0:8@16@?24
v48@0:8@16@24@32@?40
v68@0:8@16@24@32@40B48B52B56@60
B32@0:8@16@24
@32@0:8@16@24
@56@0:8@16@24@32@40@48
@48@0:8@16@24Q32@40
@40@0:8@16q24@32
@32@0:8@16^@24
@40@0:8@16@24^@32
@"<DATransactionMonitorDelegate>"
v32@0:8:16@24
Q16@0:8
v24@0:8Q16
@"CNChangeHistoryAnchor"
v80@0:8@16@24@32@40@48B56B60B64B68@72
@20@0:8i16
@32@0:8@16^^{CalDatabase}24
v32@0:8^v16@24
^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}24@0:8@16
^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}24@0:8^v16
B28@0:8@16B24
B28@0:8^v16B24
v40@0:8@16@24^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}32
^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}32@0:8@16^@24
^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}32@0:8^v16^@24
B36@0:8^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}16@24B32
v32@0:8^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}16@24
v24@0:8^{CalDatabase={__CFRuntimeBase=QAQ}i^{CPRecordStore}^{CalEventOccurrenceCache}^{CalScheduledTaskCache}^{__CFDictionary}^{__CFDictionary}{os_unfair_lock_s=I}II^{__CFArray}^{__CFString}^{__CFArray}ii^{__CFString}^{__CFURL}^{__CFString}^{__CFString}Qiii@?{_opaque_pthread_mutex_t=q[56c]}B^{__CFArray}^{__CFArray}^{__CFArray}^{__CFArray}@BB^{__CFSet}@@@i@@@*IIiBBBBBB}16
@"NSCountedSet"
@"DALocalDBWatcher"
#24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@40@0:8Q16@24@32
@48@0:8Q16@24@32@40
@24@0:8Q16
@56@0:8Q16@24@32@40@48
@48@0:8Q16@24@32q40
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8@"CNSaveRequest"16
^v16@0:8
v24@0:8@"NSString"16
@"NSData"16@0:8
v24@0:8@"NSData"16
@"CNContainer"16@0:8
@24@0:8^v16
@"NSHashTable"
B20@0:8i16
^v20@0:8i16
i24@0:8^v16
^{__CFDictionary=}24@0:8@16
^{__CFDictionary=}28@0:8@16i24
@36@0:8@16i24B28B32
B44@0:8@16@24@32i40
B36@0:8@16@24i32
v32@0:8@"ACAccount"16@?<v@?B@"NSError">24
@"ACAccountStore"
d16@0:8
v24@0:8d16
@"NSURL"16@0:8
B48@0:8@16@24@32@40
B40@0:8@16@24@32
B56@0:8@16@24@32@40@48
@40@0:8Q16Q24@32
@24@0:8i16i20
@32@0:8i16@20i28
@48@0:8i16@20@28@36i44
@40@0:8@16@24@32
@32@0:8i16@20B28
@"DAMailMessage"
@36@0:8i16@20@28
@"DAMessageMoveRequest"
@48@0:8@16B24B28@32@40
@"CNAccount"
v44@0:8@16q24B32@?36
v40@0:8@16q24@?32
@32@0:8@16q24
v48@0:8:16@24d32@40
@28@0:8@16B24
@52@0:8@16@24@32i40@44
@44@0:8@16@24i32@36
@24@0:8^{__CFURLStorageSession=}16
@"DATransaction"
@"DAActivity"
@"DAAccount"
@"<DATask>"
@"NSMutableSet"
@"NSTimer"
@32@0:8@16#24
^v20@0:8B16
B20@0:8B16
v24@0:8^v16
B24@0:8^v16
@?16@0:8
@"CNContactStore"
@"DACalDBHelper"
@"NoteContext"
v24@0:8#16
Q24@0:8@16
@68@0:8i16@20@28@36@44B52B56@60
v36@0:8@16@24B32
Vv20@0:8i16
Vv20@0:8B16
Vv28@0:8@16B24
@24@0:8^@16
@32@0:8q16^@24
i92@0:8@16@24i32@36@44@52@60B68B72@76@84
i52@0:8@16@24@32B40@44
i56@0:8@16@24@32B40B44@48
i32@0:8@16@24
Vv24@0:8@"DASearchQuery"16
@"NSArray"16@0:8
Vv24@0:8@"NSData"16
Vv24@0:8@"NSString"16
Vv24@0:8@"NSArray"16
Vv28@0:8@"NSArray"16B24
@"NSSet"24@0:8^@16
@"NSSet"32@0:8q16^@24
B40@0:8@"NSSet"16@"NSSet"24@"NSString"32
i92@0:8@"NSData"16@"NSString"24i32@"NSString"36@"NSString"44@"NSString"52@"NSString"60B68B72@"<DAMessageSendConsumer>"76@84
i52@0:8@"DAMailboxRequest"16@"NSString"24@"NSString"32B40@"<DAMailboxRequestConsumer>"44
i52@0:8@"NSArray"16@"NSString"24@"NSString"32B40@"<DAMailboxRequestConsumer>"44
i56@0:8@"DAMailboxRequest"16@"NSString"24@"NSString"32B40B44@"<DAMailboxRequestConsumer>"48
i56@0:8@"NSArray"16@"NSString"24@"NSString"32B40B44@"<DAMailboxRequestConsumer>"48
i32@0:8@"NSArray"16@"<DAMessageMoveRequestConsumer>"24
i32@0:8@"DAMessageFetchAttachmentRequest"16@"<DAMessageFetchAttachmentConsumer>"24
i32@0:8@"NSArray"16@"<DAMailboxFetchSearchResultConsumer>"24
i32@0:8@"DAResolveRecipientsRequest"16@"<DAResolveRecipientsConsumer>"24
v28@0:8@"DAFolderChange"16B24
@"DAFolder"16@0:8
B32@0:8@"NSData"16@"NSString"24
@"NSString"40@0:8@"NSData"16@"NSString"24^@32
Vv24@0:8@"NSNotification"16
@40@0:8q16^v24@32
@32@0:8^v16@24
@40@0:8^v16@24@32
v84@0:8@16@24@32@40@48@56B64B68B72@76
v52@0:8@16@24@32@40B48
Q32@0:8@16^@24
v60@0:8@16@24@32@40@48B56
Q20@0:8i16
Q24@0:8q16
Q24@0:8Q16
v40@0:8@16@24@?32
v40@0:8@?16@24@32
@24@0:8^{_NSZone=}16
@"<DADataclassLockWatcher>"
v36@0:8@16q24B32
@"NSObject<OS_os_transaction>"
v56@0:8^{__CFUserNotification=}16@24@32@40@?48
v32@0:8@16q24
v32@0:8@"NSString"16q24
i40@0:8^{__SecTrust=}16@24@32
v48@0:8^{__SecTrust=}16@24@32@?40
B40@0:8@16@24@?32
@"<DATrustHandlerDelegate>"
v36@0:8i16@20q28
@"RBSProcessMonitor"
@"CNMutableContainer"
