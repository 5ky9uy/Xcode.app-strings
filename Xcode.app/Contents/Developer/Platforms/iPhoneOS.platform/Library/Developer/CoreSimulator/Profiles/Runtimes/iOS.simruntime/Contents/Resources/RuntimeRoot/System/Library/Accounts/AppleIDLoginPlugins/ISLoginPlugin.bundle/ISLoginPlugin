v8@?0
plugins.login
ISAppleIDLoginErrorDomain
library-daap
base-url
com.apple.ISAppleIDLoginPlugin
altDSID
cookies
dsid
email
firstName
lastName
newCustomer
password
storefront
strong-token
weak-token
is-managed-id
Library
Cookies
com.apple.itunesstored.2.sqlitedb
v24@?0@"SSAuthenticateResponse"8@"NSError"16
account-exists
apple-id
auth-token
device-name
drm-client
drm-type
drm-version
guid
user-agent
iTunes
com.apple.itunes
Set-Cookie
https://itunes.apple.com
v20@?0B8@"NSError"12
slot-acquired
v24@?0@"NSDictionary"8@"NSError"16
v16@?0@"NSError"8
altDSID
OSLogObject
handler
T@"NSString",R,C
lowercaseString
TQ,R
resetExpiration
_accountWithParameters:
setAllowsRetry:
_handler
setPromptStyle:
_setupHomeSharingWithParameters:
shouldLogToDisk
.cxx_destruct
handleLoginResponse:completion:
T#,R
isProxy
T@?,C,N,V_handler
release
URLWithString:
setAccountName:
_dispatchQueue
setNewCustomer:
_setCookiesWithString:userIdentifier:withCookieStorage:
setSecureToken:
_setupITunesMatchWithParameters:
_setupiTunesBiometricsWithParameters:
accountName
accountWithUniqueIdentifier:
activeAccount
authenticateWithCompletionHandler:
authenticatedAccount
autorelease
boolValue
canDetermineGroupID
class
conformsToProtocol:
contextForSignIn
contextWithBagType:
cookiesWithResponseHeaderFields:forURL:
copy
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
currentDevice
debugDescription
defaultStore
description
determineGroupIDWithCompletionHandler:
deviceName
dictionary
dictionaryWithDictionary:
enableAllAutomaticDownloadKindsWithCompletionBlock:
errorWithDomain:code:userInfo:
fileURLWithPath:
guid
hardwareName
hash
init
initWithAuthenticationContext:
initWithObjects:
initWithObjectsAndKeys:
initWithStorageLocation:
initWithURLBagContext:
invalidate
isActive
isEqual:
isEqualToNumber:
isKindOfClass:
isLibraryEmpty
isMemberOfClass:
isMultiUser
length
loadWithCompletionBlock:
mutableCopy
objectForKey:
objectForKeyedSubscript:
parametersForIdentityEstablishmentRequest
parametersForLoginRequest
pathWithComponents:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
productVersion
removeObjectForKey:
respondsToSelector:
retain
retainCount
saveAccount:verifyCredentials:error:
secureToken
self
serviceIdentifier
setActive:
setAltDSID:
setAppleID:
setAuthenticated:
setCanCreateNewAccount:
setCanSetActiveAccount:
setCategory:
setCookies:forUserIdentifier:
setFirstName:
setHandler:
setLastName:
setManagedAppleID:
setObject:forKey:
setPassword:
setPasswordEquivalentToken:
setRequiredUniqueIdentifier:
setShouldSuppressDialogs:
setStoreFrontIdentifier:
setUniqueIdentifier:
setUserIdentifier:
sharedAccountsConfig
sharedConfig
sharedInstance
sharedLibrary
sharedManager
shouldLog
startWithAuthenticateResponseBlock:
stringByDeletingLastPathComponent
stringWithCString:encoding:
superclass
uniqueIdentifier
userAgent
zone
%{public}@: %{public}@ called. parameters = %@
%{public}@: Failing to complete login. The dsID is missing.
%{public}@: Setting up Home Sharing.
%{public}@: Setting up iTunes Match.
%{public}@: Setting up iTunes Biometrics.
%{public}@: Service setups are complete. Calling the completion handler.
%{public}@: Attempting to authenticate %{public}@. This will help ensure we have needed tokens.
%{public}@: Failed to authenticate %{public}@. The account won't have all needed tokens. error = %@
%{public}@: No account with DSID %{public}@ exists. We'll create a new one.
%{public}@: An account with DSID %{public}@ already exists. A merge will take place.
%{public}@: This is a managed account.
%{public}@: Setting up storefront ID: %{public}@
%{public}@: There's no active account. We'll set %{public}@ as active.
%{public}@: %{public}@ is already the active account.
%{public}@: There's already an active account. We'll add %{public}@ as inactive.
%{public}@: Setting cookies: %@
%{public}@: Determining Home Sharing group ID.
%{public}@: Loading URL bag for dsID %{public}@.
%{public}@: library-daap dictionary: %@
%{public}@: Authenticating for iCloud Music Library.
%{public}@: iCloud Music Library isn't available.
ISAppleIDLoginPlugin
AAAppleIDLoginPlugin
NSObject
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@?24
@"NSDictionary"16@0:8
v32@0:8@"NSDictionary"16@?<v@?B@"NSError">24
@24@0:8@16
v40@0:8@16@24@32
v24@0:8@16
@?16@0:8
v24@0:8@?16
v16@0:8
@"NSObject<OS_dispatch_queue>"
v8@?0
plugins.login
ISAppleIDLoginErrorDomain
library-daap
base-url
com.apple.ISAppleIDLoginPlugin
altDSID
cookies
dsid
email
firstName
lastName
newCustomer
password
storefront
strong-token
weak-token
is-managed-id
Library
Cookies
com.apple.itunesstored.2.sqlitedb
v24@?0@"SSAuthenticateResponse"8@"NSError"16
account-exists
apple-id
auth-token
device-name
drm-client
drm-type
drm-version
guid
user-agent
iTunes
com.apple.itunes
Set-Cookie
https://itunes.apple.com
v20@?0B8@"NSError"12
slot-acquired
v24@?0@"NSDictionary"8@"NSError"16
v16@?0@"NSError"8
altDSID
OSLogObject
handler
T@"NSString",R,C
lowercaseString
TQ,R
resetExpiration
_accountWithParameters:
setAllowsRetry:
_handler
setPromptStyle:
_setupHomeSharingWithParameters:
shouldLogToDisk
.cxx_destruct
handleLoginResponse:completion:
T#,R
isProxy
T@?,C,N,V_handler
release
URLWithString:
setAccountName:
_dispatchQueue
setNewCustomer:
_setCookiesWithString:userIdentifier:withCookieStorage:
setSecureToken:
_setupITunesMatchWithParameters:
_setupiTunesBiometricsWithParameters:
accountName
accountWithUniqueIdentifier:
activeAccount
authenticateWithCompletionHandler:
authenticatedAccount
autorelease
boolValue
canDetermineGroupID
class
conformsToProtocol:
contextForSignIn
contextWithBagType:
cookiesWithResponseHeaderFields:forURL:
copy
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
currentDevice
debugDescription
defaultStore
description
determineGroupIDWithCompletionHandler:
deviceName
dictionary
dictionaryWithDictionary:
enableAllAutomaticDownloadKindsWithCompletionBlock:
errorWithDomain:code:userInfo:
fileURLWithPath:
guid
hardwareName
hash
init
initWithAuthenticationContext:
initWithObjects:
initWithObjectsAndKeys:
initWithStorageLocation:
initWithURLBagContext:
invalidate
isActive
isEqual:
isEqualToNumber:
isKindOfClass:
isLibraryEmpty
isMemberOfClass:
isMultiUser
length
loadWithCompletionBlock:
mutableCopy
objectForKey:
objectForKeyedSubscript:
parametersForIdentityEstablishmentRequest
parametersForLoginRequest
pathWithComponents:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
productVersion
removeObjectForKey:
respondsToSelector:
retain
retainCount
saveAccount:verifyCredentials:error:
secureToken
self
serviceIdentifier
setActive:
setAltDSID:
setAppleID:
setAuthenticated:
setCanCreateNewAccount:
setCanSetActiveAccount:
setCategory:
setCookies:forUserIdentifier:
setFirstName:
setHandler:
setLastName:
setManagedAppleID:
setObject:forKey:
setPassword:
setPasswordEquivalentToken:
setRequiredUniqueIdentifier:
setShouldSuppressDialogs:
setStoreFrontIdentifier:
setUniqueIdentifier:
setUserIdentifier:
sharedAccountsConfig
sharedConfig
sharedInstance
sharedLibrary
sharedManager
shouldLog
startWithAuthenticateResponseBlock:
stringByDeletingLastPathComponent
stringWithCString:encoding:
superclass
uniqueIdentifier
userAgent
zone
%{public}@: %{public}@ called. parameters = %@
%{public}@: Failing to complete login. The dsID is missing.
%{public}@: Setting up Home Sharing.
%{public}@: Setting up iTunes Match.
%{public}@: Setting up iTunes Biometrics.
%{public}@: Service setups are complete. Calling the completion handler.
%{public}@: Attempting to authenticate %{public}@. This will help ensure we have needed tokens.
%{public}@: Failed to authenticate %{public}@. The account won't have all needed tokens. error = %@
%{public}@: No account with DSID %{public}@ exists. We'll create a new one.
%{public}@: An account with DSID %{public}@ already exists. A merge will take place.
%{public}@: This is a managed account.
%{public}@: Setting up storefront ID: %{public}@
%{public}@: There's no active account. We'll set %{public}@ as active.
%{public}@: %{public}@ is already the active account.
%{public}@: There's already an active account. We'll add %{public}@ as inactive.
%{public}@: Setting cookies: %@
%{public}@: Determining Home Sharing group ID.
%{public}@: Loading URL bag for dsID %{public}@.
%{public}@: library-daap dictionary: %@
%{public}@: Authenticating for iCloud Music Library.
%{public}@: iCloud Music Library isn't available.
ISAppleIDLoginPlugin
AAAppleIDLoginPlugin
NSObject
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v32@0:8@16@?24
@"NSDictionary"16@0:8
v32@0:8@"NSDictionary"16@?<v@?B@"NSError">24
@24@0:8@16
v40@0:8@16@24@32
v24@0:8@16
@?16@0:8
v24@0:8@?16
v16@0:8
@"NSObject<OS_dispatch_queue>"
