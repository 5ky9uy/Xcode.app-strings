v8@?0
com.apple.WallpaperKit.LegacyLoading
DeviceClass
Stills
Live
v16@?0@"NSURL"8
version
type
identifier
name
family
assets
thumbnailImageFileName
logicalScreenClass
productTypes
appearanceAware
lockAndHome
lock
home
fullSizeImageFileName
videoFileName
stillTimeInVideo
backgroundColor
fullSizeImageFileURL
thumbnailImageFileURL
Dynamic
%@: Wallpaper bundle does not exist at URL '%@'.
Wallpaper.plist
%@: Wallpaper bundle does not contain a metadata file at path '%@'.
%@: Encountered error in loading metadata file (path: '%@') (error: '%@').
%@: Wallpaper bundle thumbnail does not exist at URL '%@'.
wallpaper
+[WKWallpaperBundle shouldLoadWallpaperBundleAtURL:]
%@: Attempted to lookup a file based wallpaper for location '%@' and appearance '%@' but found nil
%@: Attempted to lookup a value based wallpaper for location '%@' and appearance '%@' but found nil
%@: (path: '%@') metadata does not contain valid value for keypath: '%@'
%@: Full size image does not exist at path '%@'
%@: Thumbnail image does not exist at path '%@'
%@: Video asset does not exist at path '%@'
@8@?0
@"NAIdentity"8@?0
q16@?0@"WKWallpaperBundle"8
@"<NSObject>"16@?0@"WKWallpaperBundle"8
Could not create temporary wallpaper with an empty images dictionary.
Could not create temporary wallpaper with dictionaries of different lengths (images.count != wallpaperOptions.count).
Could not create temporary wallpaper with dictionaries of different lengths (images.count == videoAssetURLs.count).
+[WKWallpaperBundle createTemporaryWallpaperBundleWithImages:videoAssetURLs:wallpaperOptions:error:]
%@@%@x.%@
+[WKWallpaperBundle createTemporaryWallpaperBundleWithImages:videoAssetURLs:wallpaperOptions:error:]_block_invoke
UNKNOWN
Could not resolve name for video asset file.
v16@?0@"NSString"8
Wallpaper bundle only has %ld keys: '[%@]'.
@"NSURL"16@?0@"WKLiveWallpaper"8
d16@?0@"WKLiveWallpaper"8
thumbnailImageURL
fullsizeImageURL
videoAssetURL
v16@?0@"NADescriptionBuilder"8
com.apple.WallpaperKit.WallpaperMigrator
-[WKWallpaperMigrator migrateLegacyWallpaperIfNeededWithCompletion:]_block_invoke
v16@?0@"NSError"8
-[WKWallpaperMigrator resetWallpaperKitStateWithCompletion:]_block_invoke
-[WKSpringBoardMigrationInputSource bokehVariantForLocation:]
WKSpringBoardMigrationInputSource.m
[self wallpaperTypeForLocation:location] == WKWallpaperTypeDynamic
-[WKSpringBoardMigrationInputSource wallpaperOriginalImageForLocation:wallpaperAppearance:]
[self wallpaperTypeForLocation:location] != WKWallpaperTypeDynamic
-[WKSpringBoardMigrationInputSource wallpaperImageForLocation:wallpaperAppearance:]
-[WKSpringBoardMigrationInputSource wallpaperOriginalVideoURLForLocation:wallpaperAppearance:]
[self wallpaperTypeForLocation:location] == WKWallpaperTypeLive
-[WKSpringBoardMigrationInputSource wallpaperVideoURLForLocation:wallpaperAppearance:]
com.apple.WallpaperKit
migrationLastBuildVersion
ignoreProductTypesForWallpaperBundle
ignoreLogicalScreenClassForWallpaperBundle
Attempted to initialize %@ without using designated initializer.
@"UIColor"16@?0@"WKStripeWallpaper"8
_thumbnailImageURL
wallpaperValue
DYNAMIC_WALLPAPER_COLLECTION_TITLE
wallpaperCollection
Wallpapers
+[_WKSystemWallpaperCollection _createTemporaryWallpaperCollectionWithImages:videoAssetURLs:wallpaperOptions:error:]
No URL returned for the wallpaper bundle directory.
DEFAULT_WALLPAPER_COLLECTION_TITLE_KEY
WallpaperCollection.plist
-[_WKSystemWallpaperCollection _loadCollectionContents]
-[_WKSystemWallpaperCollection _loadCollectionContents]_block_invoke
%@: Wallpaper collection does not exist at URL '%@'.
%@: Wallpaper collection does not contain a metadata file at path '%@'.
+[_WKSystemWallpaperCollection shouldLoadWallpaperCollectionAtURL:]
+[_WKSystemWallpaperCollection shouldLoadWallpaperCollectionAtURL:]_block_invoke
%@: No 'Wallpapers' directory found in System wallpaper collection (not legacy) at path '%@'.
%@: Encountered error in loading contents of directory for system wallpape collection (path: '%@') (error: '%@').
B16@?0@"NSURL"8
default
%.0fw-%.0fh@%@x~%@
eQd5mlz0BN0amTp/2ccMoA
8olRm6C1xqr7AJGpLRnpSw
ILaGO+KV5JAOq7Q5GEwbWQ
/Library/Wallpaper
/AppleInternal
NSURL * _Nonnull WKWallpapersBaseURL()_block_invoke
UIProceduralWallpaperCapability
%@.%@
v24@?0@"<WKFileBasedWallpaper>"8q16
v16@?0@"NAPromise"8
@"NAFuture"16@?0@"UIImage"8
@"NAFuture"16@?0@"NSDictionary"8
v16@?0@"NSDictionary"8
You must override %@ in a subclass
q16@?0@"WKAbstractWallpaper"8
@"<NSObject>"16@?0@"WKAbstractWallpaper"8
backingType
dark
WKWallpaperLocationCoverSheet
WKWallpaperLocationHomeScreen
WKWallpaperLocationLockAndHomeScreen
WKWallpaperKitErrorDomain
Still
HeritageStripe
%s: Unable to resolve wallpaper type from string: '%@'
WKWallpaperType WKWallpaperTypeFromString(NSString *__strong _Nonnull)
%s: Unknown wallpaper type value: '%@'
NSString * _Nonnull WKStringFromWallpaperType(WKWallpaperType)
File
Value
%s: Invalid backing type value: '%@'
NSString * _Nonnull WKStringFromWallpaperBackingType(WKWallpaperBackingType)
Apple
PhotoLibrary
%s: Unknown Wallpaper Source value: '%@'
WKWallpaperContentSource WKWallpaperContentSourceFromString(NSString *__strong _Nonnull)
%s: Unknown content source value: '%@'
NSString * _Nonnull WKStringFromWallpaperContentSource(WKWallpaperContentSource)
DDDDDDDD-DDDD-DDDD-DDDD-DDDDDDDDDDDD
CCCCCCCC-CCCC-CCCC-CCCC-CCCCCCCCCCCC
v24@?0@"NSDictionary"8@"NSError"16
v40@?0@"NSDictionary"8@"NSDictionary"16@"NSDictionary"24@"NSError"32
WKWallpaperCollectionContentDidChangeNotification
order
isLegacyContent
source
You must override %s in a subclass.
-[WKWallpaperCollection identifier]
-[WKWallpaperCollection displayName]
-[WKWallpaperCollection numberOfWallpapers]
-[WKWallpaperCollection wallpaperBundleAtIndex:]
-[WKWallpaperCollection containsWallpaperRepresentingWithIdentifier:]
-[WKWallpaperCollection wallpaperRepresentingWithIdentifier:]
-[WKWallpaperCollection isDynamicCollection]
com.apple.WallpaperKit.CurrentWallpaperManager
-[WKCurrentWallpaperManager setWallpaperRepresenting:forWallpaperLocation:desiredCropRect:wallpaperOptions:completion:]_block_invoke_3
-[WKCurrentWallpaperManager setWallpaperRepresenting:forWallpaperLocation:desiredCropRect:wallpaperOptions:completion:]_block_invoke
@"NAFuture"16@?0@"<WKWallpaperRepresenting>"8
v24@?0@"NSNull"8@"NSError"16
wallpaperType
path
previews
com.apple.SettingsAndCoreApps.BundleImport
Wallpapers~%@.plist
wallpaperIdentifier
collectionIdentifier
15C2B231-F0DE-471F-978F-8E2090D6ECB1
-[WKDefaultWallpaperManager _loadDefaultWallpaperInformation]
-[WKDefaultWallpaperManager _loadDefaultWallpaperInformation]_block_invoke
400.Solid Black
GSDeviceName
DefaultWallpapers~%@.plist
ProductType
DeviceColor
DeviceEnclosureColor
-[WKWallpaperCollectionsManager _loadCollections]
-[WKWallpaperCollectionsManager _loadCollections]_block_invoke
-[WKWallpaperCollectionsManager _loadSystemWallpaperCollections]
-[WKWallpaperCollectionsManager _loadSystemWallpaperCollections]_block_invoke
Collections
Collections.plist
wallpapercollection
%@: `Collections.plist` (path: '%@') does not contain valid value for keypath: '%@'
@"NSURL"16@?0@"WKStillWallpaper"8
d16@?0@"WKStillWallpaper"8
renderedImageURL
com.apple.WallpaperKit.StripesImage
v16@?0@"UIGraphicsImageRendererContext"8
v24@?0@"UIImage"8@"NSError"16
com.apple.WallpaperKit.SetWallpaper
-WKSystemShellWallpaperManager.setLockScreenWallpaperRepresenting(wallpaperRepresenting:mirrorToHomeScreen:completion:)
-[WKSystemShellWallpaperManager setLockScreenWallpaperRepresenting:mirrorToHomeScreen:completion:]_block_invoke
-WKSystemShellWallpaperManager.setHomeScreenWallpaperRepresenting(wallpaperRepresenting:completion:)
-[WKSystemShellWallpaperManager setHomeScreenWallpaperRepresenting:completion:]_block_invoke
WKLogForCategory
WKLogging.m
category < WKLoggingCategoryCount
Base
Import
DefaultWallpaper
Processing
PerformanceSignposts
Migration
SystemShellWallpaperManager
WallpaperManager
@"NSDictionary"16@?0@"WKDynamicWallpaper"8
%{public}@: Could not find legacy wallpaper directory at path '%{public}@'
%{public}@: Wallpaper bundle does not exist at URL '%{public}@', returning nil.
%{public}@: Attempted to initialize with a `nil` Dynamic wallpaper dictionary, returning nil.
%{public}@: Wallpaper bundle does not exist at URL '%{public}@'
%{public}@: Wallpaper bundle metadata file does not exist at URL '%{public}@'
%{public}@: Encountered error in loading metadata file '%{public}@', error '%{public}@'
%{public}@: Wallpaper bundle thumbnail does not exist at URL '%{public}@'
%{public}@: Could not process wallpaper for location '%{public}@' and appearance '%{public}@'.
%s: URL does not have valid path extension ('.wallpaper') '%{public}@.
%s: No wallpaper bundle found at URL '%{public}@.
%s: No 'Wallpaper.plist' file found at URL '%{public}@.
%s: Wallpaper is in '%{public}@', should load.
%s: Could not decode 'Wallpaper.plist' at URL '%{public}@', error '%{public}@'.
%s: No entry found for '%{public}@' key in 'Wallpaper.plist' at URL '%{public}@'.
%s: Wallpaper logical screen class is '%{public}@'.
%s: Wallpaper Bundle logical screen class '%{public}@' does not match the current device logical screen class '%{public}@' or '%{public}@'.
%s: Device is configured to load wallpapers for all product types.
%s: Wallpaper bundle has '%{public}@' entry with values '%{public}@', checking if it contains '%{public}@'.
%s: Wallpaper bundle at URL '%{public}@' should be loaded
%s: Failed to create wallpaper bundle directory, error '%{public}@'.
%s: Image: %{public}@.
%s: Image data size: %{public}@.
%s: Failed to write out image for appearance '%{public}@' to url '%{public}@'. Error '%{public}@'.
%s: Failed to copy video asset for appearance '%{public}@' from '%{public}@' to url '%{public}@'. Error '%{public}@
%s: Failed to retrieve the source video asset file name from `videoAssetURL` '%{public}@' for wallpaper appearance '%{public}@'.
%{public}@: Could not process wallpaper assets for apperance '%{public}@'.
%{public}@: Could not serialized wallpaper metadata '%{public}@'.  Error: '%{public}@'.
%{public}@: Could not write out wallpaper metadata to path '%{public}@'.  Error: '%{public}@'.
%s: An XPC error has occured while attempting wallpaper migration: %{public}@.
%s: Failed to create directory for wallpaper collection. Error '%{public}@'.
%s: Created temporary wallpaper bundle at path '%{public}@'.
%s: Copying wallpaper bundle at path '%{public}@' to path '%{public}@'.
%s: Failed to copy wallpaper bundle from '%{public}@' to '%{public}@'. Error '%{public}@'.
%s: Failed to serialize wallpaper collection metadata '%{public}@' with error '%{public}@'.
%s: Failed to write out wallpaper collection metadata to path '%{public}@' with error '%{public}@'.
%s: Created custom collection at file path '%{public}@'.
%{public}@: %{public}s start.
%{public}@: %{public}s complete.
%{public}@: No wallpaper collection found at URL '%{public}@.
%{public}@: Wallpaper Collection metadata file does not exist at URL '%{public}@'
%{public}@: Encountered error in loading Wallpaper Collection metadata file '%{public}@', error '%{public}@'
%s: start.
%s: complete.
%s: No wallpaper collection found at path '%{public}@'.
%s: Wallpaper Collection metadata file does not exist at URL '%{public}@'
%{public}@: No 'Wallpapers' directory found in wallpaper collection at path '%{public}@'.
%{public}@: Encountered error in retrieving contents of collection at path '%{public}@', error '%{public}@'
%s: cannot locate '%{public}@' in runtime
%s: Set Home Screen wallpaper (identifier: %{public}@).
%s: Set Lock Screen wallpaper (identifier: %{public}@, mirror: %{public}@).
%s: Setting new cover sheet wallpaper failed with error '%{public}@'.
%s: Setting new cover sheet wallpaper complete.
%{public}@: No wallpaper configuration file found at URL '%{public}@'.
%{public}@: Unable to load content of wallpaper configuration file at URL '%{public}@', error '%{public}@'.
%{public}@: Wallpaper configuration file at URL '%{public}@' has no entries.
%{public}@: Loading a Default Wallpaper.
%{public}@: Default wallpaper lookup file does not exist at path '%{public}@'
%{public}@: Unable to load default wallpaper lookup file (path: '%{public}@') with error: '%{public}@'
%s: Start.
%s: Complete.
%s: Looking for default wallpaper based on deviceProductType '%{public}@'; logicalScreenClass: '%{public}@'.
%s: Entry found for deviceProductType '%{public}@'.
%s: Looking for device color and enclosure color specific entry for deviceProductType '%{public}@'; deviceColor '%{public}@'; deviceEnclosureColor '%{public}@'.
%s: Default wallpaper entry found for deviceProductType '%{public}@', deviceColor '%{public}@', deviceEnclosureColor '%{public}@'.
%s: Could not find default wallpaper for device color or enclosure, falling back to device default wallpaper for deviceProductType '%{public}@'.
%s: Device specific default wallpaper entry found for deviceProductType '%{public}@'.
%s: Found wallpaper on-disk for deviceProductType '%{public}@', collectionIdentifier '%{public}@', wallpaperIdentifier '%{public}@'.
%s: No device specific default wallpaper found for deviceProductType '%{public}@'; falling back to system default entry (wallpaperIdentifier: '%{public}@'; collectionIdentifier: '%{public}@').
%s: No default wallpaper found from default wallpaper lookup table.  Falling back to static system wallpaper.
%s: No compatible wallpaper found on disk (wallpaperIdentifier: '%{public}@'; collectionIdentifier: '%{public}@'.); falling back to synthesized wallpaper.
%{public}@: Failed to create synthesized wallpaper!
%{public}@: Failed to get default wallpaper!
%s: Resolved default wallpaper (wallpaperIdentifier: '%{public}@'; path '%{public}@'; collectionIdentifier: '%{public}@'; path: '%{public}@').
%{public}@: Resolving default wallpaper for device name '%{public}@'
%{public}@: Resolved to default wallpaper look up file at path '%{public}@'
%{public}@: Resolved to logical screen class '%{public}@'
%{public}@: Unable to load contents of directory at path '%{public}@'. Error '%{public}@'.
%s: Loaded wallpaper collection (identifier: '%{public}@', displayName: '%{public}@').
%s: Adding wallpaper collection (identifier: '%{public}@', displayName: '%{public}@').
%s: Skipping empty wallpaper colleciton (identifier: '%{public}@', displayName: '%{public}@').
identifier '%{public}@', mirror to home screen '%{public}@'.
-WKSystemShellWallpaperManager.setLockScreenWallpaperRepresenting(wallpaperRepresenting:mirrorToHomeScreen:completion:)
%s: Setting Procedural Wallpaper start.
%s: Setting Procedural Wallpaper complete.
%s: Setting File Based Wallpaper start.
%s: Setting File Based Wallpaper complete (Failed).
%s: Setting File Based Wallpaper complete.
identifier '%{public}@'.
-WKSystemShellWallpaperManager.setHomeScreenWallpaperRepresenting(wallpaperRepresenting:completion:)
%{public}@: set wallpaper will start
%s: Setting File Based Wallpaper complete (Success).
333333
?UUUUUU
??r
?
?^^^^^^
WKLegacyWallpaperBundleLoader
WKFileBasedWallpaper
WKWallpaper
NSCopying
WKValueBasedWallpaper
WKWallpaperBundle
NAIdentifiable
NAHashable
NSObject
NAEquatable
WKWallpaperRepresenting
WKHashable
WKLiveWallpaper
WKWallpaperMigratorProtocol
WKWallpaperMigrator
WKSpringBoardMigrationInputSource
WKWallpaperInputSource
WKAdditions
WKStripeWallpaper
_WKSystemWallpaperCollection
WKIndicatorView
WKSBSetWallpaperParameters
WKAbstractWallpaper
WKDescribable
WKWallpaperPreviewViewControllerFactory
WKWallpaperCollection
WKCurrentWallpaperManager
WKWallpaperBundleCollection
WKWallpaperBundleImporter
WKDefaultWallpaperManager
WKWallpaperCollectionsManager
WKStillWallpaper
WKHeritageStripeImageGenerator
WKSystemShellWallpaperManager
WKDynamicWallpaper
init
defaultManager
_loadingQueue
_loadAllValidWallpaperBundlesFromLegacyLocation
array
URLByAppendingPathComponent:
na_safeAddObject:
dictionary
_fileManager
path
fileExistsAtPath:isDirectory:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
countByEnumeratingWithState:objects:count:
shouldLoadWallpaperBundleAtURL:
initWithURL:
identifier
numberWithInteger:
setObject:forKeyedSubscript:
legacyWallpaperDirectories
objectForKeyedSubscript:
indexOfObject:
initWithDynamicDictionary:identifier:
set_wallpaperBundleLookup:
_wallpaperBundleLookup
defaultWallpaperBundleLoader
T@"WKLegacyWallpaperBundleLoader",R,N
wallpaperBundleForIdentifier:
set_loadingQueue:
set_fileManager:
.cxx_destruct
__loadingQueue
__fileManager
__wallpaperBundleLookup
T@"NSObject<OS_dispatch_queue>",&,N,V__loadingQueue
T@"NSFileManager",&,N,V__fileManager
T@"NSDictionary",&,N,V__wallpaperBundleLookup
copy
dictionaryWithCapacity:
_loadBundle
_loadDynamicWallpaper:
initWithIdentifier:dictionary:
_defaultAppearanceWallpapers
_bundleURL
stringWithFormat:
exceptionWithName:reason:userInfo:
raise
dictionaryWithContentsOfURL:error:
_raiseInvalidMetadataExceptionForMetadataKeypath:
unsignedIntegerValue
boolValue
_processAssetDictionary:forLocation:
wallpaperBackingTypeForLocation:
fileExistsAtPath:
isAppearanceAware
arrayWithObjects:count:
componentsJoinedByString:
_stillWallpaperWithMetadataDictionary:wallpaperAppearance:
_liveWallpaperWithMetadataDictionary:wallpaperAppearance:
_stripeWallpaperWithMetadataDictionary:wallpaperAppearance:
isEqualToString:
_darkAppearanceWallpapers
pathExtension
lowercaseString
containsString:
wk_wallpaperKitUserDefaults
wk_ignoreLogicalScreenClassForWallpaperBundle
wk_ignoreProductTypesForWallpaperBundle
count
currentDevice
sf_productType
setWithArray:
containsObject:
backingType
fileBasedWallpaperForLocation:andAppearance:
copyWithZone:
name
type
Tq,R,N
T@"NSString",R,C,N
TQ,R,N
thumbnailImageURL
fullsizeImageURL
videoAssetURL
stillTimeInVideo
T@"NSURL",R,C,N
Td,R,N
valueBasedWallpaperForLocation:andAppearance:
thumbnailImage
wallpaperValue
stringValue
integerValue
dictionaryWithObjects:forKeys:count:
_processCommonFileBackedWallpaperMetadataWithDictionary:wallpaperAppearance:
initWithIdentifier:name:thumbnailImageURL:fullsizeImageURL:renderedImageURL:
doubleValue
initWithIdentifier:name:thumbnailImageURL:fullsizeImageURL:videoAssetURL:stillTimeInVideo:
wk_colorWithHexString:
initWithIdentifier:name:backgroundColor:
builder
version
appendIntegerCharacteristic:
appendCharacteristic:
family
allValues
numberWithBool:
hasDistinctWallpapersForLocations
isDynamicWallpaperBundle
build
na_identity
hashOfObject:
isObject:equalToObject:
errorWithDomain:code:userInfo:
fileURLWithPath:
UUIDString
UUID
stringByAppendingPathExtension:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
length
mainScreen
nativeScale
numberWithDouble:
numberWithUnsignedInteger:
writeToURL:options:error:
componentsSeparatedByString:
firstObject
lastObject
lastPathComponent
copyItemAtURL:toURL:error:
na_safeSetObject:forKey:
allKeys
dataWithPropertyList:format:options:error:
createTemporaryWallpaperBundleWithImages:videoAssetURLs:wallpaperOptions:error:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
T@"NAIdentity",R,N
fileBasedWallpaperForLocation:
valueBasedWallpaperForLocation:
identifierString
contentSource
appearanceAware
TB,R,N,GisAppearanceAware
distinctWallpapersForLocations
TB,R,N,GhasDistinctWallpapersForLocations
dynamicWallpaperBundle
TB,R,N,GisDynamicWallpaperBundle
set_defaultAppearanceWallpapers:
set_darkAppearanceWallpapers:
set_bundleURL:
_appearanceAware
_distinctWallpapersForLocations
_dynamicWallpaperBundle
_thumbnailImageURL
_version
_identifier
_name
_family
__defaultAppearanceWallpapers
__darkAppearanceWallpapers
__bundleURL
T@"NSMutableDictionary",&,N,V__defaultAppearanceWallpapers
T@"NSMutableDictionary",&,N,V__darkAppearanceWallpapers
T@"NSURL",C,N,V__bundleURL
Tq,R,N,V_version
Tq,R,N,V_identifier
T@"NSString",R,C,N,V_name
T@"NSString",R,C,N,V_family
T@"NSURL",R,C,N,V_thumbnailImageURL
TB,R,N,GisAppearanceAware,V_appearanceAware
TB,R,N,GhasDistinctWallpapersForLocations,V_distinctWallpapersForLocations
TB,R,N,GisDynamicWallpaperBundle,V_dynamicWallpaperBundle
initWithIdentifier:name:
setThumbnailImageURL:
setFullsizeImageURL:
setVideoAssetURL:
setStillTimeInVideo:
builderWithIdentity:
appendDoubleCharacteristic:
descriptionBuilderBlock
appendString:withName:
appendTimeInterval:withName:decomposeUnits:
_fullsizeImageURL
_videoAssetURL
_stillTimeInVideo
T@"NSURL",C,N,V_thumbnailImageURL
T@"NSURL",C,N,V_fullsizeImageURL
T@"NSURL",C,N,V_videoAssetURL
Td,N,V_stillTimeInVideo
_setupServiceConnection
_serviceConnection
invalidate
set_serviceConnection:
dealloc
initWithServiceName:
migrateLegacyWallpaperIfNeededWithCompletion:
resetWallpaperKitStateWithCompletion:
interfaceWithProtocol:
setRemoteObjectInterface:
resume
remoteObjectProxyWithErrorHandler:
defaultMigrator
T@"WKWallpaperMigrator",R,N
__serviceConnection
T@"NSXPCConnection",&,N,V__serviceConnection
_populateMigrationInputWithConfigurationManager:
variantsShareWallpaperConfigurationForTypes:
_isAppearanceAwareWallpaperAtLocation:withConfigurationManager:
wallpaperConfigurationForVariant:includingValuesForTypes:wallpaperMode:
_isWallpaperConfigurationAppleSystemContent:
wallpaperType
wallpaperOptions
dictionaryWithObject:forKey:
proceduralWallpaperOptions
wallpaperOriginalImage
wallpaperImage
originalVideoURL
videoURL
lockScreenWallpaperType
homeScreenWallpaperType
isLockScreenIsAppearanceAware
isHomeScreenIsAppearanceAware
wallpaperTypeForLocation:
_wallpaperBokehVariantLookup
_wallpaperOriginalImageLookup
_wallpaperImageLookup
_wallpaperOriginalVideoURLLookup
_wallpaperVideoURLLookup
_wallpaperOptionsLookup
supportsCropping
dataStores
hasWallpaperImageForVariant:wallpaperMode:
isAppearanceWallpaperAtLocation:
bokehVariantForLocation:
wallpaperOriginalImageForLocation:wallpaperAppearance:
wallpaperImageForLocation:wallpaperAppearance:
wallpaperOriginalVideoURLForLocation:wallpaperAppearance:
wallpaperVideoURLForLocation:wallpaperAppearance:
wallpaperOptionsForLocation:wallpaperAppearance:
homeScreenMirrorsLockScreen
isLockScreenIsSystemContent
isHomeScreenIsSystemContent
TB,R,N
lockScreenIsAppearanceAware
TB,R,N,GisLockScreenIsAppearanceAware
lockScreenIsSystemContent
TB,R,N,GisLockScreenIsSystemContent
homeScreenIsAppearanceAware
TB,R,N,GisHomeScreenIsAppearanceAware
homeScreenIsSystemContent
TB,R,N,GisHomeScreenIsSystemContent
initWithConfigurationManager:
set_wallpaperBokehVariantLookup:
set_wallpaperOriginalImageLookup:
set_wallpaperImageLookup:
set_wallpaperOriginalVideoURLLookup:
set_wallpaperVideoURLLookup:
set_wallpaperOptionsLookup:
_homeScreenMirrorsLockScreen
_lockScreenIsAppearanceAware
_lockScreenIsSystemContent
_homeScreenIsAppearanceAware
_homeScreenIsSystemContent
_lockScreenWallpaperType
_homeScreenWallpaperType
__wallpaperBokehVariantLookup
__wallpaperOriginalImageLookup
__wallpaperImageLookup
__wallpaperOriginalVideoURLLookup
__wallpaperVideoURLLookup
__wallpaperOptionsLookup
T@"NSMutableDictionary",&,N,V__wallpaperBokehVariantLookup
T@"NSMutableDictionary",&,N,V__wallpaperOriginalImageLookup
T@"NSMutableDictionary",&,N,V__wallpaperImageLookup
T@"NSMutableDictionary",&,N,V__wallpaperOriginalVideoURLLookup
T@"NSMutableDictionary",&,N,V__wallpaperVideoURLLookup
T@"NSMutableDictionary",&,N,V__wallpaperOptionsLookup
TQ,R,N,V_lockScreenWallpaperType
TQ,R,N,V_homeScreenWallpaperType
TB,R,N,V_homeScreenMirrorsLockScreen
TB,R,N,GisLockScreenIsAppearanceAware,V_lockScreenIsAppearanceAware
TB,R,N,GisLockScreenIsSystemContent,V_lockScreenIsSystemContent
TB,R,N,GisHomeScreenIsAppearanceAware,V_homeScreenIsAppearanceAware
TB,R,N,GisHomeScreenIsSystemContent,V_homeScreenIsSystemContent
initWithSuiteName:
setObject:forKey:
stringForKey:
sf_isInternalInstall
setBool:forKey:
boolForKey:
wk_setMigrationLastBuildVersion:
wk_migrationLastBuildVersion
wk_setIgnoreProductTypesForWallpaperBundle:
wk_setIgnoreLogicalScreenClassForWallpaperBundle:
T@"NSString",&,N,Swk_setMigrationLastBuildVersion:
TB,N,Swk_setIgnoreProductTypesForWallpaperBundle:
TB,N,Swk_setIgnoreLogicalScreenClassForWallpaperBundle:
T@"NSUserDefaults",R
_thumbnailImage
defaultImageGenerator
thumbnailImageWithBackgroundColor:appearanceAware:
set_thumbnailImage:
_backgroundColor
appendObject:withName:
set_thumbnailImageURL:
set_backgroundColor:
__thumbnailImageURL
__backgroundColor
__thumbnailImage
T@"NSURL",&,N,V__thumbnailImageURL
T@"UIColor",&,N,V__backgroundColor
T@"UIImage",&,N,V__thumbnailImage
hasPrefix:
substringFromIndex:
substringWithRange:
stringByAppendingString:
scannerWithString:
scanHexInt:
colorWithRed:green:blue:alpha:
initWithSource:
wallpaperCollectionURL
bundleWithURL:
_loadCollectionContents
initWithUUIDString:
set_identifier:
bundleForClass:
set_bundleForLocalizationResources:
setDisplayNameKey:
objectAtIndexedSubscript:
_wallpaperBundles
_wallpaperLookupTable
removeItemAtURL:error:
isLegacyContent
_loadSystemContentForCollectionWithMetadata:isLegacyContent:
_bundleForLocalizationResources
displayNameKey
localizedStringForKey:value:table:
objectForKey:
na_filter:
na_each:
dynamicWallpaperCollection
_createTemporaryWallpaperCollectionWithImages:videoAssetURLs:wallpaperOptions:error:
shouldLoadWallpaperCollectionAtURL:
displayName
isDynamicCollection
numberOfWallpapers
wallpaperBundleAtIndex:
containsWallpaperRepresentingWithIdentifier:
wallpaperRepresentingWithIdentifier:
_legacyContent
_wallpaperCollectionURL
_displayNameKey
__identifier
__bundleForLocalizationResources
legacyContent
TB,R,N,GisLegacyContent,V_legacyContent
T@"NSUUID",C,N,V__identifier
T@"NSBundle",&,N,V__bundleForLocalizationResources
T@"NSString",C,N,V_displayNameKey
T@"NSURL",R,N,V_wallpaperCollectionURL
initWithFrame:
_hasBeenConfigured
setTranslatesAutoresizingMaskIntoConstraints:
traitCollection
userInterfaceStyle
initWithPrivateStyle:
_backdropView
_setContinuousCornerRadius:
addSubview:
clearColor
_label
setBackgroundColor:
secondaryLabelColor
setTextColor:
boldSystemFontOfSize:
setFont:
setNumberOfLines:
initWithActivityIndicatorStyle:
_activityIndicatorView
trailingAnchor
constraintEqualToAnchor:
leadingAnchor
topAnchor
bottomAnchor
constraintEqualToAnchor:constant:
centerYAnchor
activateConstraints:
setOpaque:
layer
setAllowsGroupOpacity:
set_hasBeenConfigured:
isMainThread
_configureViewIfNeeded
setText:
superview
centerXAnchor
constraintGreaterThanOrEqualToSystemSpacingAfterAnchor:multiplier:
bringSubviewToFront:
startAnimating
showViewWithMessage:inHostingView:
stopAnimating
removeFromSuperview
hideViewAndRemoveFromHostingView
set_backdropView:
set_activityIndicatorView:
set_label:
__hasBeenConfigured
__backdropView
__activityIndicatorView
__label
TB,N,V__hasBeenConfigured
T@"_UIBackdropView",&,N,V__backdropView
T@"UIActivityIndicatorView",&,N,V__activityIndicatorView
T@"UILabel",&,N,V__label
fixedCoordinateSpace
bounds
_referenceBounds
sf_deviceSupportsDisplayZoom
scale
sf_isiPad
floatValue
stringByAppendingPathComponent:
wallpaperLocation
wallpaperRepresenting
_retrieveLockScreenPreviewForAppleSystemFileBasedWallpaperWithCompletion:
_retrievePreviewForAppleSystemStripeWallpaperRepresentingWithCompletion:
_retrieveHomeScreenPreviewForAppleSystemFileBasedWallpaperWithCompletion:
_retrieveHomeScreenPreviewForAppleSystemValueBasedWallpaperWithCompletion:
isProceduralWallpaper
_retrievePreviewForAppleSystemDynamicWallpaperWithCompletion:
setWallpaperMode:
setSupportsCropping:
setName:
assetWithURL:
setHasVideo:
initWithContentsOfFile:
setZoomScale:
completionHandlerAdapter
requestWallpaperImageWithBackgroundColor:completion:
lazyFutureWithBlock:
finishWithResult:
flatMap:
_wallpaperPreviewInputForStripeWallpaper:wallpaperMode:
futureWithResult:
_wallpaperPreviewInputsForStripesWallpaperRepresenting
addSuccessBlock:
initForHomeScreenWithWallpaperRepresenting:
initForLockScreenWithWallpaperRepresenting:
resolveParametersForWallpaperWithCompletion:
resolveParametersForProceduralWallpaperWithCompletion:
_wallpaperRepresenting
_wallpaperLocation
T@"<WKWallpaperRepresenting>",R,N,V_wallpaperRepresenting
T@"NSString",R,C,N,V_wallpaperLocation
allocWithZone:
setType:
setBackingType:
builderWithObject:
activeMultilinePrefix
appendBodySectionWithName:multilinePrefix:block:
wk_descriptionBuilder
appendUnsignedInteger:withName:
T@"NADescriptionBuilder",R,N
T@?,R,N
_type
_backingType
TQ,N,V_type
TQ,N,V_backingType
bestWallpaperSizeForParallaxFactor:
cropRect
zoomScale
wk_cropRectInImagePointSpace
wk_fixedCoordinateCropRectForPhotosWithImageScale:
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
initWithProceduralWallpaper:options:variant:disableSegmentedControl:enableButtons:disableContents:
setModalPresentationStyle:
initWithImages:videos:variant:options:disableSegmentedControl:enableButtons:disableContents:
initWithImages:videos:variant:options:disableSegmentedControl:enableButtons:disableContents:disableParallax:
createLockScreenPreviewControllerForWallpaperRepresenting:completion:
createHomeScreenPreviewControllerForWallpaperRepresenting:completion:
strongToWeakObjectsMapTable
source
set_wallpaperBundles:
set_wallpaperLookupTable:
_source
__wallpaperBundles
__wallpaperLookupTable
T@"NSMutableArray",&,N,V__wallpaperBundles
T@"NSMapTable",&,N,V__wallpaperLookupTable
T@"NSUUID",R,C,N
TQ,R,N,V_source
dynamicCollection
TB,R,N,GisDynamicCollection
defaultCenter
initWithFileManager:notificationCenter:userDefaults:wallpaperPhotoLibrary:
setWallpaperRepresenting:forWallpaperLocation:desiredCropRect:wallpaperOptions:completion:
_wallpaperChangeQueue
schedulerWithDispatchQueue:
lazyFutureWithBlock:scheduler:
sharedManager
finishWithNoResult
setHomeScreenWallpaperRepresenting:completion:
setLockScreenWallpaperRepresenting:mirrorToHomeScreen:completion:
addCompletionBlock:
reschedule:
sharedCurrentWallpaperManager
T@"WKCurrentWallpaperManager",R,N
setWallpaperRepresenting:forWallpaperLocation:completion:
set_wallpaperChangeQueue:
_notificationCenter
set_notificationCenter:
_userDefaults
set_userDefaults:
wallpaperCollectionsDirectoryURL
__wallpaperChangeQueue
__notificationCenter
__userDefaults
_wallpaperCollectionsDirectoryURL
T@"NSObject<OS_dispatch_queue>",&,N,V__wallpaperChangeQueue
T@"NSNotificationCenter",&,N,V__notificationCenter
T@"NSUserDefaults",&,N,V__userDefaults
T@"NSURL",R,C,N,V_wallpaperCollectionsDirectoryURL
_wallpaperLookup
addObject:
initWithWallpaperType:previewBundle:
wallpaperBundleWithIdentifier:
numberOfItems
appendWallpaperBundle:
setWallpaperType:
setDisplayName:
previewBundle
setPreviewBundle:
set_wallpaperLookup:
_wallpaperType
_displayName
_previewBundle
__wallpaperLookup
TQ,N,V_wallpaperType
T@"NSString",C,N,V_displayName
T@"WKWallpaperBundle",&,N,V_previewBundle
T@"NSMutableDictionary",&,N,V__wallpaperLookup
_bundleImportQueue
_loadWallpapersFromDisk
_wallpaperTypesOrdering
_wallpaperTypeToBundleCollection
wallpapersConfigurationFileURL
arrayWithContentsOfURL:error:
defaultWallpaperBundleImporter
T@"WKWallpaperBundleImporter",R,N
numberOfWallpaperBundleCollections
wallpaperTypeAtIndex:
wallpaperBundleCollectionForWallpaperType:
set_bundleImportQueue:
set_wallpaperTypesOrdering:
set_wallpaperTypeToBundleCollection:
__bundleImportQueue
__wallpaperTypesOrdering
__wallpaperTypeToBundleCollection
T@"NSObject<OS_dispatch_queue>",&,N,V__bundleImportQueue
T@"NSArray",&,N,V__wallpaperTypesOrdering
T@"NSDictionary",&,N,V__wallpaperTypeToBundleCollection
_loadDefaultWallpaperFile
_loadDefaultWallpaperInformation
defaultWallpaperCollectionsManager
initWithCollectionsManager:
defaultWallpaperLookupURL
set_defaultWallpaperLookup:
deviceProductType
_defaultWallpaperLookup
deviceColor
deviceEnclosureColor
_collectionsManager
wallpaperCollectionWithIdentifier:
blackColor
wk_imageFromColor:
_defaultWallpaperBundle
_defaultWallpaperCollection
defaultWallpaperManager
T@"WKDefaultWallpaperManager",R,N
defaultWallpaperBundle
defaultWallpaperCollection
deviceLogicalScreenClass
set_collectionsManager:
set_defaultWallpaperCollection:
set_defaultWallpaperBundle:
__defaultWallpaperLookup
__collectionsManager
__defaultWallpaperCollection
__defaultWallpaperBundle
T@"NSDictionary",&,N,V__defaultWallpaperLookup
T@"WKWallpaperCollectionsManager",&,N,V__collectionsManager
T@"WKWallpaperCollection",&,N,V__defaultWallpaperCollection
T@"WKWallpaperBundle",&,N,V__defaultWallpaperBundle
weakToWeakObjectsMapTable
_loadCollections
_loadSystemWallpaperCollections
dictionaryWithContentsOfURL:
hasSuffix:
_wallpaperCollections
_wallpaperCollectionLookupTable
T@"WKWallpaperCollectionsManager",R,N
numberOfWallpaperCollections
wallpaperCollectionAtIndex:
set_wallpaperCollections:
set_wallpaperCollectionLookupTable:
__wallpaperCollections
__wallpaperCollectionLookupTable
T@"NSMutableArray",&,N,V__wallpaperCollections
T@"NSMapTable",&,N,V__wallpaperCollectionLookupTable
renderedImageURL
setRenderedImageURL:
renderedVideoAssetURL
_renderedImageURL
T@"NSURL",C,N,V_renderedImageURL
_wallpaperCache
initWithSize:
setFill
fillRect:
wk_parallelogramInRect:stripeIndex:firstStripeBaseY:
CGContext
CGPath
CGColor
colorWithAlphaComponent:
imageWithActions:
_wallpaperRequestQueue
wk_parallelogramInRect:stripeIndex:firstStripeBaseY:sizeScaleFactor:
T@"WKHeritageStripeImageGenerator",R,N
set_wallpaperRequestQueue:
set_wallpaperCache:
__wallpaperRequestQueue
__wallpaperCache
T@"NSObject<OS_dispatch_queue>",&,N,V__wallpaperRequestQueue
T@"NSCache",&,N,V__wallpaperCache
_currentWallpaperMode
_setWallpaperQueue
currentTraitCollection
T@"WKSystemShellWallpaperManager",R,N
set_setWallpaperQueue:
__setWallpaperQueue
T@"NSObject<OS_dispatch_queue>",&,N,V__setWallpaperQueue
traitCollectionWithUserInterfaceStyle:
traitCollectionWithTraitsFromCollections:
configuration
configurationWithTraitCollection:
imageWithConfiguration:
performAsCurrentTraitCollection:
imageAsset
registerImage:withTraitCollection:
wk_imageWithLightAppearanceImage:darkAppearanceImage:
_dynamicDictionary
set_dynamicDictionary:
__dynamicDictionary
T@"NSDictionary",&,N,V__dynamicDictionary
moveToPoint:
addLineToPoint:
closePath
@16@0:8
v16@0:8
@24@0:8q16
v24@0:8@16
@"NSObject<OS_dispatch_queue>"
@"NSFileManager"
@"NSDictionary"
@24@0:8^{_NSZone=}16
q16@0:8
Q16@0:8
@"NSString"16@0:8
d16@0:8
@"NSURL"16@0:8
@"UIImage"16@0:8
B24@0:8@16
@48@0:8@16@24@32^@40
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NAIdentity"16@0:8
Q24@0:8@16
@24@0:8@16
@32@0:8@16@24
Q24@0:8@"NSString"16
@"<WKFileBasedWallpaper>"24@0:8@"NSString"16
@"<WKFileBasedWallpaper>"32@0:8@"NSString"16@"NSString"24
@"<WKValueBasedWallpaper>"24@0:8@"NSString"16
@"<WKValueBasedWallpaper>"32@0:8@"NSString"16@"NSString"24
@32@0:8@16q24
v32@0:8@16@24
@"NSURL"
@"NSString"
@"NSMutableDictionary"
@64@0:8q16@24@32@40@48d56
@?16@0:8
v24@0:8d16
v24@0:8@?16
v24@0:8@?<v@?@"NSError">16
@"NSXPCConnection"
B24@0:8@"NSString"16
@"NSString"24@0:8@"NSString"16
@"UIImage"32@0:8@"NSString"16@"NSString"24
@"NSURL"32@0:8@"NSString"16@"NSString"24
@"SBFWallpaperOptions"32@0:8@"NSString"16@"NSString"24
B32@0:8@16@24
v20@0:8B16
@32@0:8q16@24
@40@0:8q16@24@32
@"UIColor"
@"UIImage"
v28@0:8@16B24
@"NSUUID"
@"NSBundle"
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
@"_UIBackdropView"
@"UIActivityIndicatorView"
@"UILabel"
@"<WKWallpaperRepresenting>"
@"NADescriptionBuilder"16@0:8
@?<v@?@"NADescriptionBuilder">16@0:8
v24@0:8Q16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8d16
v32@0:8@16@?24
@24@0:8Q16
@"NSMutableArray"
@"NSMapTable"
@48@0:8@16@24@32@40
v40@0:8@16@24@?32
v80@0:8@16@24{CGRect={CGPoint=dd}{CGSize=dd}}32@64@?72
@"NSNotificationCenter"
@"NSUserDefaults"
@32@0:8Q16@24
@"WKWallpaperBundle"
Q24@0:8q16
@"NSArray"
@"WKWallpaperCollectionsManager"
@"WKWallpaperCollection"
@56@0:8q16@24@32@40@48
@28@0:8@16B24
@"NSCache"
v36@0:8@16B24@?28
@64@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48d56
@72@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16q48d56d64
