version
type
identifier
name
family
assets
thumbnailImageFileName
appearanceAware
lockAndHome
lock
home
fullSizeImageFileName
%@: Wallpaper bundle does not exist at URL '%@'.
Wallpaper.plist
%@: Wallpaper bundle does not contain a metadata file at path '%@'.
%@: Encountered error in loading metadata file (path: '%@') (error: '%@').
%@: Wallpaper bundle thumbnail does not exist at URL '%@'.
Still
corona
TQ,R,N
T@"NSString",R,C,N
thumbnailImageURL
T@"NSURL",R,C,N
fullsizeImageURL
videoAssetURL
%@: Attempted to lookup a file based wallpaper for location '%@' and appearance '%@' but found nil
%@: Attempted to lookup a value based wallpaper for location '%@' and appearance '%@' but found nil
%@: (path: '%@') metadata does not contain valid value for key: '%@'
_bundleURL
T@"NSURL",&,N,V__bundleURL
_defaultAppearanceWallpapers
T@"NSMutableDictionary",&,N,V__defaultAppearanceWallpapers
_coronaAppearanceWallpapers
T@"NSMutableDictionary",&,N,V__coronaAppearanceWallpapers
versionNumber
TQ,R,N,V_versionNumber
TQ,R,N,V_identifier
T@"NSString",R,C,N,V_name
T@"NSString",R,C,N,V_family
T@"NSURL",R,C,N,V_thumbnailImageURL
TB,R,N,GisAppearanceAware,V_appearanceAware
Attempted to initialize %@ without using designated initializer.
T@"NSURL",C,N,V_thumbnailImageURL
T@"NSURL",C,N,V_fullsizeImageURL
T@"NSURL",C,N,V_videoAssetURL
%.0fw-%.0fh@%.0fx
eQd5mlz0BN0amTp/2ccMoA
8olRm6C1xqr7AJGpLRnpSw
You must override %@ in a subclass
TQ,N,V_type
default
dark
WKWallpaperLocationCoverSheet
WKWallpaperLocationHomeScreen
WKWallpaperKitErrorDomain
Live
%s: Unknown wallpaper type value: '%@'
WKWallpaperTypeFromString
WallpaperKit
v8@?0
/System/Library/PrivateFrameworks/WallpaperKit.framework
1210.WWDC_2019_Orange-
1210.WWCD_2019_Orange-
1210.Earth-
com.apple.SettingsAndCoreApps.WallpaperKit.defaultWallpaperLookup
ProductType
iPhone
~iphone.wallpaper
iPad
~ipad.wallpaper
iPod
~ipod.wallpaper
/Library/Wallpaper/Stills
/Library/Wallpaper
GSDeviceName
DefaultWallpapers~%@.plist
DeviceColor
DeviceEnclosureColor
defaultWallpaperManager
T@"WKDefaultWallpaperManager",R,N
_defaultWallpaperLookup
T@"NSDictionary",&,N,V__defaultWallpaperLookup
_wallpaperLookupQueue
T@"NSObject<OS_dispatch_queue>",&,N,V__wallpaperLookupQueue
WKLogForCategory
/BuildRoot/Library/Caches/com.apple.xbs/Sources/WallpaperSettings_Sim/WallpaperSettings-128/WallpaperKit/Utility/WKLogging.m
category < WKLoggingCategoryCount
Base
Import
com.apple.SettingsAndCoreApps.WallpaperKit
DONE
Done button for dismissing locket.
SET_AS_WALLPAPER
Button title for setting the current wallpaper being viewed in the locket as the device wallpaper
settings_icon
v12@?0B8
_openSettingsButton
T@"UIButton",&,N,V__openSettingsButton
_setWallpaperButton
T@"UIButton",&,N,V__setWallpaperButton
_doneButton
T@"UIButton",&,N,V__doneButton
_tapGestureRecognizer
T@"UITapGestureRecognizer",&,N,V__tapGestureRecognizer
delegate
T@"<WKWallpaperLocketViewControllerDelegate>",W,N,V_delegate
%{public}@: Wallpaper bundle does not exist at URL '%{public}@', returning nil.
%{public}@: Wallpaper bundle does not exist at URL '%{public}@'
%{public}@: Wallpaper bundle metadata file does not exist at URL '%{public}@'
%{public}@: Encountered error in loading metadata file '%{public}@', error '%{public}@'
%{public}@: Wallpaper bundle thumbnail does not exist at URL '%{public}@'
%{public}@: Default wallpaper lookup file does not exist at path '%{public}@'
%{public}@: Unable to load default wallpaper lookup file (path: '%{public}@') with error: '%{public}@'
Wallpaper: Unrecognized device type for Still wallpaper import: %@
%{public}@: Resolving default wallpaper for device name '%{public}@'
%{public}@: Resolved to default wallpaper look up file at path '%{public}@'
%{public}@: Resolved to logical screen class '%{public}@'
WKFileBasedWallpaper
WKWallpaper
NSCopying
WKValueBasedWallpaper
WKWallpaperBundle
WKLiveWallpaper
WKMotionWallpaperCollectionViewCell
WKPhotoWallpaperCollectionViewCell
WKAbstractWallpaper
WKAdditions
WKDefaultWallpaperManager
WKStillWallpaper
WKWallpaperLocketViewController
defaultManager
path
fileExistsAtPath:isDirectory:
init
copy
dictionaryWithCapacity:
_loadBundle
_bundleURL
stringWithFormat:
exceptionWithName:reason:userInfo:
raise
URLByAppendingPathComponent:
dictionaryWithContentsOfURL:error:
objectForKeyedSubscript:
_raiseInvalidMetadataExceptionForMetadataKey:
unsignedIntegerValue
boolValue
fileExistsAtPath:
_processAssetDictionary:forLocation:
_stillWallpaperWithMetadataDictionary:
_defaultAppearanceWallpapers
setObject:forKeyedSubscript:
isAppearanceAware
_coronaAppearanceWallpapers
fileBasedWallpaperForLocation:andAppearance:
isEqualToString:
copyWithZone:
identifier
name
type
thumbnailImageURL
fullsizeImageURL
videoAssetURL
valueBasedWallpaperForLocation:andAppearance:
thumbnailImage
wallpaperValue
arrayWithObjects:count:
componentsJoinedByString:
initWithIdentifier:name:thumbnailImageURL:fullsizeImageURL:
initWithURL:
wallpaperBackingTypeForLocation:
fileBasedWallpaperForLocation:
valueBasedWallpaperForLocation:
.cxx_destruct
versionNumber
family
set_bundleURL:
set_defaultAppearanceWallpapers:
set_coronaAppearanceWallpapers:
_appearanceAware
_versionNumber
_identifier
_name
_family
_thumbnailImageURL
__bundleURL
__defaultAppearanceWallpapers
__coronaAppearanceWallpapers
conformsToProtocol:
initWithIdentifier:name:
setThumbnailImageURL:
setFullsizeImageURL:
setVideoAssetURL:
initWithIdentifier:name:thumbnailImageURL:fullsizeImageURL:videoAssetURL:
_fullsizeImageURL
_videoAssetURL
mainScreen
_referenceBounds
scale
currentDevice
sf_isiPad
reuseIdentifier
setType:
_type
localizedStringForKey:value:table:
bundleWithPath:
buttonWithType:
setTranslatesAutoresizingMaskIntoConstraints:
setClipsToBounds:
titleLabel
setNumberOfLines:
setOpaque:
effectWithStyle:
initWithEffect:
setUserInteractionEnabled:
imageView
insertSubview:belowSubview:
array
leadingAnchor
constraintEqualToAnchor:
addObject:
trailingAnchor
topAnchor
bottomAnchor
activateConstraints:
wk_buttonWithBlurEffect
_loadDefaultWallpaperFile
defaultWallpaperLookupURL
set_defaultWallpaperLookup:
_pathForStillWallpapers
stringByAppendingString:
hasPrefix:
fileURLWithPath:
lowercaseString
defaultWallpaperManager
deviceProductType
deviceLogicalScreenClass
deviceColor
deviceEnclosureColor
defaultWallpaperBundle
_defaultWallpaperLookup
_wallpaperLookupQueue
set_wallpaperLookupQueue:
__defaultWallpaperLookup
__wallpaperLookupQueue
fractionalWidthDimension:
fractionalHeightDimension:
sizeWithWidthDimension:heightDimension:
itemWithLayoutSize:
horizontalGroupWithLayoutSize:subitems:
sectionWithGroup:
setOrthogonalScrollingBehavior:
initWithSection:
locketCollectionViewLayout
initWithCollectionViewLayout:
viewDidLoad
defaultCenter
handleContentSizeCategoryDidChangeNotification:
addObserver:selector:name:object:
_configureCollectionView
_configureSubviews
viewDidAppear:
_showButtonsAnimated
viewDidLayoutSubviews
_setWallpaperButton
frame
layer
setCornerRadius:
_openSettingsButton
_doneButton
dequeueReusableCellWithReuseIdentifier:forIndexPath:
blackColor
collectionView
setBackgroundColor:
registerClass:forCellWithReuseIdentifier:
_userDidTapOnView:
initWithTarget:action:
set_tapGestureRecognizer:
_tapGestureRecognizer
setCancelsTouchesInView:
view
addGestureRecognizer:
set_doneButton:
preferredFontDescriptorWithTextStyle:
fontDescriptorWithSymbolicTraits:
fontWithDescriptor:size:
setFont:
setTitle:forState:
whiteColor
setTitleColor:forState:
setContentEdgeInsets:
_userDidTapOnDoneButton:
addTarget:action:forControlEvents:
addSubview:
set_setWallpaperButton:
setAdjustsFontSizeToFitWidth:
setBaselineAdjustment:
_userDidTapOnSetWallpaperButton:
set_openSettingsButton:
imageNamed:inBundle:
setImage:forState:
setTintColor:
_userDidTapOnOpenSettingsButton:
centerXAnchor
constraintGreaterThanOrEqualToSystemSpacingAfterAnchor:multiplier:
constraintEqualToAnchor:constant:
constraintEqualToSystemSpacingAfterAnchor:multiplier:
centerYAnchor
heightAnchor
widthAnchor
safeAreaLayoutGuide
constraintEqualToSystemSpacingBelowAnchor:multiplier:
setHidden:
setAlpha:
_hideButtonsAnimated
performSelector:withObject:afterDelay:
animateWithDuration:delay:options:animations:completion:
cancelPreviousPerformRequestsWithTarget:selector:object:
delegate
wallpaperLocketViewControllerDidTapOnDoneButton:
alpha
prefersStatusBarHidden
numberOfSectionsInCollectionView:
collectionView:numberOfItemsInSection:
collectionView:cellForItemAtIndexPath:
setDelegate:
_delegate
__openSettingsButton
__setWallpaperButton
__doneButton
__tapGestureRecognizer
@24@0:8^{_NSZone=}16
Q16@0:8
@16@0:8
@"NSString"16@0:8
@"NSURL"16@0:8
@"UIImage"16@0:8
@24@0:8@16
v16@0:8
v32@0:8@16@24
Q24@0:8@16
@32@0:8@16@24
v24@0:8@16
B16@0:8
@"NSString"
@"NSURL"
@"NSMutableDictionary"
@32@0:8Q16@24
@56@0:8Q16@24@32@40@48
v24@0:8Q16
@"NSDictionary"
@"NSObject<OS_dispatch_queue>"
@48@0:8Q16@24@32@40
v20@0:8B16
q24@0:8@16
q32@0:8@16q24
@"<WKWallpaperLocketViewControllerDelegate>"
@"UIButton"
@"UITapGestureRecognizer"
