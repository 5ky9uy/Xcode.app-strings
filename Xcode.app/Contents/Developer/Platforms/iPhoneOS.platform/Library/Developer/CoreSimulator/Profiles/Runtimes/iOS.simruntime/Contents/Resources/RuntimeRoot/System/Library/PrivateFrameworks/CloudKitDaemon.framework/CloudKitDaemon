@(#)PROGRAM:CloudKitDaemon  PROJECT:CloudKit-2000.251.2.1
(knN
daemon/map-share-urls-to-bundle-IDs
Fetched share metadata for URL: %@
Done fetching all share metadata%{public}@%@
Fetched registered bundleIDs%{public}@%@ for URL %@
Starting mapping share urls to bundleIDs operation <%{public}@: %p; %{public}@, %@>
req: %{public}@, "Getting Bundle IDs for container %{public}@"
daemon/fetch-registered-bundle-ids
Fetch registered bundleIDs operation <%{public}@: %p; %{public}@, %@> is starting
Fetched registered bundleIDs %@ with response code %ld
Fetch registered bundleIDs operation <%{public}@: %p; %{public}@> finished with error %@
Failed to convert pRecord %@ : %@
Adding recordID %@ with etag %{public}@ to cache
Failed to generate delta proto with error: %@
Failed to create mergeable delta proto for replacement request: %@
Node failure in upload deltas request %@: %@
Ingesting manatee sharing invitation data for share %@
Setting per-participant PCS on self participant: %@
Didn't get any pre-decrypted share PCS for share %@
Error setting PCS data for share %@ in the cache: %@
Got a shared zone %@ to prep PCS for share %@
Warn: Couldn't create share PCS data: %@
Need to remove %lu public key(s) from the private share PCS: %@
Decrypting shared zone PCS data for share %@
Couldn't encrypt participant properties %@
Couldn't decrypt participant properties %@
Decrypted PII was empty
Decrypted PII was of unexpected class %{public}@
<%{public}@: %p> in %{public}@
PCS data for %{public}@ was found in the cache, but it doesn't have chain PCS data and the client requested that. Fetching from the server.
Client requested fetch of parent PCS data for item %{public}@, but the returned item type doesn't support chain PCS data.
PCS data for %{public}@ was found in the cache, but it doesn't have zoneish PCS data and the client requested that. Fetching from the server.
Client requested fetch of zoneish PCS data for item %{public}@, but the returned item type doesn't support zoneish PCS data. Returning item data anyway since it isn't a zone PCS.
Record PCS data for %{public}@ was found in the cache, but it doesn't have invited PCS data and the client requested that. Fetching from the server.
Zone PCS data for %{public}@ was found in the cache, but it doesn't have share PCS data and the client requested that. Fetching from the server.
Returning in-memory cached PCS data. item=%{public}@, protectionInfoTag=%{public}@, pcsKeyID=%@
Not adding callback to existing fetch operation %{public}@ for operation %{public}@ as it would create a dependency cycle
Adding callback to existing fetch operation %{public}@ for operation %{public}@
Creating a new fetch operation for %{public}@
Fetch operation %{public}@ for item %{public}@ finished with error: %@
Fetch operation %{public}@ for item %{public}@ finished with PCS data %@
Fetching PCS for record %@ for operation %{public}@ with options %{public}@
Fetching PCS for zone %@ for operation %{public}@ with options %{public}@
Fetching PCS for share %@ for operation %{public}@ with options %{public}@
Setting record PCS data %@ for %@ on our in-memory cache
Setting zone PCS data %@ for %{public}@ on our in-memory cache in scope %@
Setting share PCS data %@ for %{public}@ on our in-memory cache
Clearing all PCS caches
Clearing memory-based PCS caches
Clearing invalidated PCS SQL cache entries. Skipping zone pcs: %@
xpcConnection
New connection from client %@
Connection to client %@ was interrupted
Connection to client %@ was invalidated
Client %@ has gone away
Resuming new connection from client %@
Incoming client %@ connection with processBinaryName %@ is waiting to resume its xpc connection. We have %ld existing connection%@ tearing down
Server status report: %@
Client "%{public}@" has entitlement to use openByID
Client "%{public}@" has entitlement to allow access during buddy.
Client "%{public}@" has entitlement to use packages. Good luck!
Got a process scoped client proxy for %@: %@
Ignoring superfluous process scoped client proxy for %@: %@
Ignoring failed attempt to get process scoped client proxy for %@: %@
Failed to issue sandbox extension for applicationBundleID=%@ and path=%@: %@
Issued sandbox extension token for "%{public}@" at %@
Failed to allocate string for sandbox extension for applicationBundleID=%{public}@ and path=%@
Binary has invalid entitlements for %@
Unable to get SecTask for connection to determine entitlement validity
Setting up container %p for proxies %@ / %@, applicationID:%{public}@, containerID:%{public}@
TCC database changed. Clearing cached TCC info
This client requested that we hold all its operations.
CKDContainer (%p) for container %@ (%@) is forcing manatee to be enabled. Weird stuff might happen- you've been warned!
Bundle ID %@ doesn't belong to an application: %@
Purging %@ directory at %@
Registering container %p for account-change-notification
Container %p clearing caches for deletion of account %@
Clearing the asset cache for container %p
Clearing the record cache for container %p
Clearing the persisted PCS cache for container %p
Clearing the in-memory PCS cache for container %p
Clearing the container info cache for container %p
%@ in dealloc
applicationBundleID:%@, installed:%@, containerPath:%@, callingBundlePath:%@, currentPersona:%@
Reloading the account for container %p - the previous account was %@
Loaded account %@ with account override info:%@
Couldn't load an account for container %@ with account override info: %@
The account identifier changed from %@ to %@ - posting an account changed notification and cancelling all outstanding operations
No APS environment set. Falling back to production.
Echoing proxy %@ info into metadata cache for container %@
%@ dataclass disabled, denying access
Bundle %@ isn't authorized for CloudKit, denying access
Container %@ using directories %@
Prematurely failing request <%{public}@: %p; %{public}@, %@> with error %@ because that's what you asked for
A fake response is being tracked that has an invalid lifetime of %li
Asking URL Request <%{public}@: %p; %{public}@, %@> to return fake operation result %@
Using custom url override of %@
Couldn't pull url from backing account %@ or container %@
Fetched container scoped user ID of %{public}@ for dsid %@
Couldn't get a private URL. Fetching updated account properties
Using wrapping app bundle id %{public}@ for extension %{public}@ when registering push tokens
Giving %@ blanket access to any container
Allowing data repair container %{public}@ to set bundle identifier override on operation to '%{public}@'
Allowing %{public}@ to set bundle identifier override on operation to prefixed value '%{public}@'
Container %@ is not allowed to set bundle identifier override '%{public}@'
Container %@ is not allowed to set an operation sourceApplicationSecondaryIdentifier to %@
CloudKitDaemon.framework was built at %s
System is available. Starting work queue for %@
System is unavailable. Stopping work queue for %@
Flushing operation queue for %@
Cancelling all operations for %@
Waiting for all operations on the cloudkit service queue to finish for %@: %@
Waiting for all operations on the background more operations queue to finish for %@: %@
Waiting for all operations to finish for %@. operationQueue=%@ cleanupOperationQueue=%@ uncancellableOperationQueue=%@
Finished flushing operation queue for %@
Consulting TCC for access for container %@...
Setting un-initialized TCC access for bundle identifier override '%{public}@'
TCC %{public}@ access for container %@
Found cached TCC %{public}@ for container %@
No cached metadata found for outstanding operation %{public}@. Finishing it with an error
Writing down long-lived operation %{public}@ for container: %@
Account status is %{public}@
Current account is%@ secondary account with override info %@
Returning account info to client: %@%{public}@%@
Will reload the account for %@
Reloading account for %@
Permission status: %d (global: %d)
Operation %{public}@ completed%@
Deleting all cached info for operation %{public}@
Sending user identity to client for operation %{public}@ lookupInfo: %@
Sending user identity to client for operation %{public}@ userIdentity: %@
Sending save completion to client for operation %{public}@ zoneID: %@
Sending delete completion to client for operation %{public}@ zoneID: %@
Sending fetch record zones progress to client for operation %{public}@ zoneID: %@
Sending zone-was-updated progress to client for operation %{public}@ zoneID: %@
Sending zone-was-deleted progress to client for operation %{public}@ zoneID: %@
Sending zone-was-purged progress to client for operation %{public}@ zoneID: %@
Sending zone-was-delete-due-to-encrypted-data-reset progress to client for operation %{public}@ zoneID: %@
Sending change token update progress to client for operation %{public}@ error: %@
Checking eligible containers for OOP-UI container %@
Found eligible container %@
Not informing Sharing UI observers about unknown update for record in OOP UI container: %@
Broadcasting share update to client containers for container: %@
Error broadcasting share update to observer: %@
Sending record save progress %lf to client for operation %{public}@
Sending records in flight progress to client for operation %{public}@ with recordIDs: %@
Sending record save completion to client for operation %{public}@ for recordID: %@
Sending delete completion to client for operation %{public}@ for recordID: %@
Sending upload completion to client for operation %{public}@ for recordID: %@
Sending fetch completion to client for operation %{public}@ for recordID: %@ error: %@
Sending record fetch command to client for operation %{public}@ for recordID: %@
Sending record fetch completion to client for operation %{public}@ for recordID: %@ error: %@
Sending record changed progress to client for operation %{public}@ for recordID: %@
Sending record deleted progress to client for operation %{public}@ for recordID: %@
Sending change token update progress to client for operation %{public}@ for zoneID: %@
Sending completion for operation %{public}@ with server change token %@, client change token date %@, record changes status %ld
Sending record move progress to client for operation %{public}@
Sending record move completion to client for operation %{public}@ for recordID: %@
Sending record fetch completion for operation %{public}@ with record: %@
Sending query cursor update progress to client for operation %{public}@ with cursor: %@
Sending completion for operation %{public}@ with cursor %@
Sending save completion to client for operation %{public}@ for subscription ID: %@
Sending delete completion to client for operation %{public}@ for subscription ID: %@
Sending fetch subscription progress to client for operation %{public}@ for subscription ID: %@
Sending notification changed progress to client for operation %{public}@ with notification: %@
Sending completion for operation %{public}@ with server change token %@ more coming %{public}@
Sending notification mark-read progress to client for operation %{public}@ for notification ID: %@
Sending accept share progress to client for operation %{public}@ for url: %@
Sending share metadata progress to client for operation %{public}@ for url: %@
Sending bundleIDs mapping progress to client for operation %{public}@ for url: %@
Sending completion for operation %{public}@ with web auth token %@
Returning override user email %@ for container %@
Scheduling a cancel of all operations for %@
Sending sandbox extensions to client...
Error sending sandbox extensions to client: %@
Failed to create directory for "%@" at %@: %@
Sandbox extensions %@needed for %@, container: %@, proxy sandboxed: %@, hasDataContainer: %@
Resetting throttles in pid %d
After replacing record archives, client returned serialized request: %@
Asking client to deserialize initial response: %@
After deserializing initial response, client returned wire serializations: %@
Asking client to replace wire transport blobs: %@
Proxy status report: %@
Daemon submitting CKEventMetric %@.
Daemon submitted CKEventMetric %@.
Found suggested mergeable delta size: %ld
No cached configuration for suggested mergeable delta size, returning default: %ld
MMCS setup failed:%@
No MMCS for %@
No assetCache MMCS for %@
Clearing asset cache for %@
Showing all known asset caches
Clearing record cache for %@
Sending archived record progress to client for operation %{public}@ for recordID: %@
Sending archive record progress to client for operation %{public}@ for recordID: %@
Sending asset published progress to client for operation %{public}@ with recordID: %@
Sending asset published completion to client
Sending asset repair progress to client for operation %{public}@ with recordID: %@
Sending asset repair completion to client
Sending mark asset broken progress to client for operation %{public}@ with recordID: %@
Sending simulate break asset completion to client
Sending record web sharing progress to client for operation %{public}@ for recordID: %@
Sending record web unsharing progress to client for operation %{public}@ for recordID: %@
Sending record web sharing completion to client
Warn: Couldn't create a web sharing identity for client %@: %@
Warn: Couldn't convert web sharing identity to data for client %@: %@ (identity was %@)
Successfully created a web sharing identity for %@: %@
Sending record access grant progress to client for operation %{public}@ for recordID: %@
Sending record access revoke progress to client for operation %{public}@ for recordID: %@
Sending record access modification completion to client
Sending vetting completion progress to client for operation %{public}@ for url: %@
Sending vetting completion progress to client for operation %{public}@ for share metadata: %@
Sending share participant key fetch progress to client for operation %{public}@ recordID: %@
Fetched PCS for share, but result had no invitedPCS?
Sending initiate participant vetting operation progress to client for operation %{public}@ error: %@
Sending completion for operation %{public}@ with quota available %lld
Sending mergeable delta fetched progress to client for operation %{public}@ for %@
Sending fetched metadata to client for operation %{public}@ for value %@
Sending per-value replacement request completion to client for operation %{public}@ for request %@
Sending delta upload progress to client for operation %{public}@ for %@
Sending replacement progress to client for operation %{public}@ for %@
Sending completion for operation %{public}@ with bundle IDs %@
Returning boundary key to client: %@%@%@
Clearing record cache for %@ with scope %@
Clearing auth tokens for record %@
Clearing the container info cache
Clearing the persisted PCS cache for container %@
Unexpectedly found some outstanding operations: %@
Getting PCS diagnostics for all zones
Getting Record PCS diagnostics for all zones
Repairing PCS data for all zones
Repairing PCS data for zones %@
Sending zone PCS diagnostic progress to client for operation %{public}@ zoneID: %@
Tossing client configuration
daemon/deserialize-record-modifications
Operation %{public}@ is not allowed to run without an entitlement
Error while trying to determine userID: %@
CKDSerializeRecordModificationsOperation is unable to instantiate a CKDProtocolTranslator
CKDDeserializeRecordModificationsOperation is unable to deserialize its messages
Unpackaging SaveRecords of %lu records
Error transforming record: %@
Unpackaging AssociatedMergeableDeltas with %lu deltas
Error transforming CKRecordID, %@
AssociatedMergeableDelta present for missing record %@
AssociatedMergeableDelta present for missing field '%@' in record %@
Error transforming CKMergeableValueID, %@
Error transforming CKMergeableDelta with ID %@
Unpackaging DeleteRecordIDs of %lu recordIDs
Error transforming recordID: %@
Flushing all PCS memory caches
Started PCS memory cache timer.
Stopped PCS memory cache timer.
pcsMemoryCacheEvict
Attempting to evict %lu items from PCS memory cache %p
Evicted %lu items from PCS memory cache %p
Returning PCS data from in-memory cache (%{public}@). scopedItemID=%{public}@, protectionInfoTag=%{public}@
Found a memory cache entry in (%{public}@) but it has no decrypted data, removing it. scopedItemID=%{public}@
Setting PCS data in the in-memory cache (%{public}@). scopedItemID=%{public}@, protectionInfoTag=%{public}@
Removing PCS data in the in-memory cache (%{public}@). scopedItemID=%{public}@
Clearing all entries in PCS cache %p
init, reader:%p
dealloc, reader:%p
range %{public}@ overlaps with previous range
Initialized with container %p. Background: %d, cellular: %d, expensive: %d, QOS: 0x%x
daemon/?
Setting parent operation of %p to %p
Adding child operation %{public}@ to parent operation %{public}@
Child operation %{public}@ was added to parent %{public}@ but the parent has no container or operation queue to run that operation on
Operation was cancelled before it could start
Invoking main for operation %{public}@
Notifying operation info cache of an attempt for long-lived operation %{public}@
Checking application version
Application version is not allowed by the server
Couldn't get server configuration
Determining Network Service Types
Determined Network Service Type %{public}@
Using pre-determined Network Service Type %{public}@
Type=%{signpost.description:attribute,public}@ ID=%{signpost.description:attribute}@ ContainerID=%{signpost.description:attribute}@ BundleID=%{signpost.description:attribute}@ QoS=%{signpost.description:attribute,public}@ 
Starting <%{public}@: %p; %{public}@, %@>
<%{public}@: %p; %{public}@> is already cancelled and finished but it tried to start again
<%{public}@: %p; %{public}@> was cancelled before it started
Operation %{public}@ requires checking app version.  Doing so
Start ended
CKDOperation
Operation %{public}@ calling out to client about lifecycle transition
Asked client what to do for a daemon operation, it responded with an error %@
Operation %{public}@ was told to take action "%@"
main was called on CKDOperation
Finishing with error: %@
Operation is finishing on callback queue with an error
Operation is finishing on callback queue with no error
The operation %{public}@ didn't start or is already finished
Ignoring _finishInternalOnCallbackQueue invocation on already-finished operation %{public}@
Waiting for all (%lu) child operations to finish for operation %{public}@
Finished waiting for all (%lu) child operations to finish for operation %{public}@
Operation %{public}@ is waiting for its state transition lock holders to finish before it can complete
All state transition locks have been released. Finishing operation %{public}@
Finished operation <%{public}@: %p; %{public}@, %@> metrics=%@%{public}@%@
Cancelling operation <%{public}@: %p; %{public}@>
%{public}@
Operation %{public}@ transitioned from state [%{public}@] to state [%{public}@]
makeStateTransition was called on CKDOperation
Operation %{public}@ is transitioning from state [%{public}@], stop:%d, cancelled:%d, error:%{public}@
Operation %@ was assigned QoS greater than Utility but it has discretionary networking behavior. Demoting operation QoS to Utility.
A CKDOperation was assigned a QoS greater than Utility but its discretionaryNetworkingBehavior is not set nonDiscretionary. A high QoS operation may end up gated on the network.
Operation <%{public}@: %p; %{public}@>, setting current request from %{public}@ to %{public}@
Configured request <%{public}@: %p; %{public}@> for operation <%{public}@: %p; %{public}@>
Operation %{public}@ sending CoreAnalytics event %{public}@
Operation class %{public}@ does not implement %{public}@
Registering zone gate locks for IDs %@ waiter %@
Can't immediately grant gate to %@ because zone %@ held by %@
CKDZoneGatekeeper
Deferring relinquish of zone gate locks for waiter %@
Relinquishing zone gate locks for waiter %@
Can't grant gate to waiter %@ because zone %@ held by %@
Granting gate to waiter %@
daemon/fetch-mergeable-delta-metadata
Error fetching delta metadata in operation %@: %@
Fetched delta metadata for operation %@
Deallocated while fetching delta metadata
Will fetch delta metadata recursively for value IDs %@ with continuation tokens %@
Fetch metadata operation deallocated before request per value ID block
Got a continuation token for value %@
Fetch metadata operation deallocated before request completion block
Continuing fetch delta metadata with new continuation tokens: %@
Fetch delta metadatas URL request completed for operation <%{public}@: %p; %{public}@>
No per-valueID fetch block for operation %@
Failed to fetch metadatas for value %@: %@
Successfully fetched %ld delta metadatas for value %@
No record ID for delta metadata on value ID %@
Need to decrypt timestamps for metadata %@
Error fetching PCS to decrypt fetched delta metadata: %@
Failed to decrypt delta metadata %@: %@
Successfully decrypted delta metadata %@
daemon/fetch-record-pcs-diagnostics
Checking Record PCS for %ld zones: %@
Done checking PCS for records in all zones
Error fetching zone %@: %@
Zone with ID %@ was fetched: %@
Done fetching zones
Starting fetch record PCS diagnostics operation <%{public}@: %p; %{public}@, %@>
daemon/query
fetchAllResults:%{public}@ error:%@ resultsCursor:%@
Finishing daemon operation %{public}@ due to client-returned error %@
Handling record response for record %@
Warn: Query <%{public}@: %p; %{public}@> could not find record %@: %@
The full record for %@ was fetched
Executing query with cursor %@
Query request <%{public}@: %p; %{public}@> for operation %{public}@ finished with error %@
We're not done here. Sending another query with cursor %@
Record fetcher finished for query %p
Waiting for all record fetches to finish...
Zone PCS fetch operation %{public}@ received PCS data (%{public}@/%{public}@)%{public}@%@
Zone PCS fetch operation %{public}@ already has PCS data %@. Ignoring the fetch callback with %@/%@
Fetching PCS data for zone %@ from the database with scope %@
Error fetching PCS data from the database for %@: %@
Zone PCS data was fetched from the database but it didn't have the requested zoneish PCS. Fetching PCS data from the server for zone %@
PCS data was fetched from the database for zone %@
No PCS data was found in the database for zone %@ with scope %@
Not fetching zone-wide share PCS for zone %@ in the shared database since it has no shareID
Fetched PCS for share %@ in order to decrypt zone %@%{public}@%@
Successfully saved PCS on zone: %@
Saved zone ID isn't what we expected: %@ (expected %@)
Updating zone %@ with new PCS object
Couldn't serialize zone PCS: %@
Couldn't serialize zoneish PCS: %@
Saving new PCS on zone %@
Couldn't create new zone PCS: %@
Couldn't create new zoneish PCS: %@
Couldn't decode PCS data: %@
Couldn't decode zoneishPCS data: %@
Saved zoneishPCS is %@. Key ID is %{public}@
Save of new PCS object to zone %@ was %{public}@successful%{public}@%@
Found a default zone with NULL PCS data. Creating new PCS data and saving it
Error fetching PCS data for zone %@ from the server: %@
systemZone was not found. Creating systemZone and saving it
Zone %@ in the shared database has no shareID, skipping decryption
Warn: Error with PCS data for zone: %@
We need to create a zoneish PCS but we don't have the zone PCS for zone %@
Created a new zoneish PCS for zone %@: %@
Warn: Error with zoneish PCS data for zone: %@
Error decrypting PCS for zone %@: %@
Saving new zoneish PCS to the server for zone %@
Error saving zoneish PCS to server for zone %@: %@
Resetting user privacy settings for %@
Failed to reset user privacy settings for %@: %@
daemon/queued-fetch
Error fetching item with ID %@: %@
Bulk fetched item with ID %@: %@.
Not starting fetch because this operation has already been cancelled
Starting aggregate fetch %@ with %d callbacks at QoS %{public}@
Generating a batch of %ld records from index %ld
%{public}@ operation %@ finished%{public}@%@.
Bulk record fetch operation %@ finished%@%@.
<%{public}@: %p; %{public}@> Request Initializing
req: %{public}@, "dealloc"
req: %{public}@, "Not returning a request body stream because there are no items to stream"
req: %{public}@, "This request has too many operations: %lu/%lu"
req: %{public}@, "Fetching auth token"
req: %{public}@, "Preparing auth token for request " "<%{public}@: %p; %{public}@, %@>"
req: %{public}@, "Handling authentication failure"
req: %{public}@, "Auth failed but this request is already finished"
Failing credential renewal with a stale token error for tests for request %{public}@
req: %{public}@, "Auth token acquired. Retrying."
req: %{public}@, "Warn: Couldn't renew an auth token- cancelling this request"
req: %{public}@, "Our token auth is bad and we've already retried it. Giving up on request %@"
req: %{public}@, "Parsed a response object with no operationUUID.  Result %@"
req: %{public}@, "Our auth token is bad and we should feel bad."
req: %{public}@, "Syntax error in request"
req: %{public}@, "Server could not find any request operations in this request. Giving up."
req: %{public}@, "Forbidden resource in request"
req: %{public}@, "Expired app config"
req: %{public}@, "Expired global config"
req: %{public}@, "Received error %d from the server: %@"
req: %{public}@, "Plugin error in request"
req: %{public}@, "Auxiliary error in request"
req: %{public}@, "Received unknown error from the server: %@"
req: %{public}@, "Warn: Dropping protobuf result since we've alredy returned it to the client. This likely happened because of a request timeout."
req: %{public}@, "Error parsing protobuf object: %@"
req: %{public}@, "Node level failure encountered while parsing"
req: %{public}@, "Task level failure encountered while parsing"
req: %{public}@, "Successfully parsed JSON object"
req: %{public}@, "Warn: Failed to handle JSON response: %@"
req: %{public}@, "Successfully parsed plist object"
req: %{public}@, "Warn: Failed to handle plist response: %@"
req: %{public}@, "Warn: Ignoring nil value for header: %{public}@"
req: %{public}@, "%@ attempted to send request %{public}@ along with %{public}@, but they hit different servers"
req: %{public}@, "%@ attempted to send request %{public}@ along with %{public}@, but they hit different partitions"
req: %{public}@, "Couldn't determine base URL for server type %ld partition type %ld off container %@"
%{public}@ called on %{public}@ but no operation is set
req: %{public}@, "CKDURLRequest with no owning operation"
url-request
Identifier=%{signpost.description:attribute}@ Operation=%{signpost.description:attribute}@ 
CKDURLRequest
req: %{public}@, "%{public}@ Performing"
req: %{public}@, "This request requires an authenticated account, which is unavailable for CloudKit-Anonymous / App Clips processes"
req: %{public}@, "This request requires an authenticated account, which is unavailable for Background Assets Extension processes"
req: %{public}@, "This request requires an authenticated account"
req: %{public}@, "This request requires an authenticated account, the current account cannot auth with CloudKit"
req: %{public}@, "CloudKit access was denied by user settings"
req: %{public}@, "%{public}@ Requires a url for the app partition, getting it"
req: %{public}@, "%{public}@ Requires a url for the user partition, getting it"
req: %{public}@, "%{public}@ Requires configuration, getting it"
req: %{public}@, "%{public}@ allows a container scoped user id, seeing if we have one"
req: %{public}@, "Fetched container scoped user ID of %{public}@ for dsid %@"
req: %{public}@, "%{public}@ Requires device id, getting it"
Not registering push token for anonymous account: %{public}@
Not registering push token for account that can't auth: %{public}@
Not registering push token for OOP UI container operation: %{public}@
req: %{public}@, "%{public}@ Requires push token registration, doing so. isCKSystemService=%d"
req: %{public}@, "%{public}@ Failed to register push tokens: %@"
req: %{public}@, "%@ Requires zone id gates, grabbing them from gatekeeper, expectDelay %{public}@"
Using a fake CloudKit token for request %{public}@
Using nil CloudKit token for request %{public}@
Using a fake iCloud token for request %{public}@
Using nil iCloud token for request %{public}@
req: %{public}@, "Request was finished while waiting for auth tokens"
req: %{public}@, "Failed to fetch auth tokens, continuing with anonymous access"
req: %{public}@, "Encountered an error while fetching auth tokens: %@"
req: %{public}@, "Fetched auth tokens"
Performing
req: %{public}@, "%{public}@ Validation error: [%@]"
req: %{public}@, "%{public}@ Request does not have a URL. Failing."
req: %{public}@, "Performing request with URL=%@ background=%d allowCellular=%d allowExpensive=%d (timeouts %.1lfs, %.1lfs)"
req: %{public}@, "Skipping authorization header field for dsid: %@, iCloudAuthToken: %@"
req: %{public}@, "%{public}@ Outgoing request body is streamed"
req: %{public}@, "%{public}@ Outgoing request body is empty"
req: %{public}@, "%{public}@ using custom network service type %{public}@"
For session %@, task %@, set up networking delegate %@
req: %{public}@, "%{public}@: Starting request with URL session data task %@"
Resuming
req: %{public}@, "%{public}@: Dropping network request; you asked for it"
req: %{public}@, "cancel"
%{public}@, Cancelling the URL session data task %@ for request %{public}@
req: %{public}@, "%{public}@, asked to finish with error %@"
req: %{public}@, "Warn: %{public}@, request %{public}@ was already marked as finished"
req: %{public}@, "%{public}@, will finish request %{public}@ with error %@"
req: %{public}@, "Calling completion block"
req: %{public}@, "%{public}@, did finish request %@ with error %@"
req: %{public}@, "Marking as finished"
req: %{public}@, "tearDownResources"
req: %{public}@, "tearDownResourcesAndReleaseTheZoneLocks"
Would've performed a block on the lifecycle queue but it was deallocated before it could.
%{public}@ would've performed a block on the lifecycle queue but it was marked finished before it could.
req: %{public}@, "%{public}@ ignoring spurious callback from task %@, which is not my task %@"
req: %{public}@, "URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:"
req: %{public}@, "Task is getting redirected but automatic redirections are disabled.  Task: [%@]\nInitial request: [%@]\nProposed request: [%@]\nRedirect response: [%@]"
req: %{public}@, "Request is being redirected between https and http. We're not falling for that one"
req: %{public}@, "Task is getting redirected: [%@]\nInitial request: [%@]\nProposed request: [%@]\nReconstructed request: [%@]\nRedirect response: [%@]"
req: %{public}@, "%{public}@ ignoring spurious callback from task %@, which is not my session %@"
req: %{public}@, "Warn: %{public}@ sent request UUID %{public}@, received %{public}@"
req: %{public}@, "Received response UUID:%{public}@, status:%ld, responseDisposition:%ld"
req: %{public}@, "Received response UUID:%{public}@, but was already cancelled.  Cancelling NSURLSessionDataTask"
req: %{public}@, "URLSession:dataTask:didReceiveData: %ld bytes"
req: %{public}@, "URLSession:task:needNewBodyStream:"
req: %{public}@, "Asked for a new body stream while already cancelled.  Soldiering on without a request body"
req: %{public}@, "URLSession:task:didSendBodyData: %lld totalBytesSent: %lld totalBytesExpectedToSend: %lld"
Completed
req: %{public}@, "URLSession:task:didCompleteWithError: %@"
Connection Created
req: %{public}@, "Server requested an AutoBugCapture snapshot to be triggered with reason: %{public}@"
req: %{public}@, "Server requested a Tap-To-Radar prompt with reason: %{public}@"
req: %{public}@, "Server requested a auto-sysdiagnose with reason: %{public}@"
req: %{public}@, "Received a didCompleteWithError without an error but no response from the server. Treating the following task as an unknown error: %@ %@"
req: %{public}@, "%{public}@ request is marked as needing auth retry"
req: %{public}@, "Warn: request failed with http status %ld"
req: %{public}@, "Parser failed to parse with error %@"
req: %{public}@, "Received a didCompleteWithError without an error but no response body where one was expected. Treating the following task as an unknown error: %@ %@"
url-request-transmission
Established Connection
req: %{public}@, "requestForEstablishedConnection"
req: %{public}@, "Cancelling request on established connection due to cancelled CKDURLRequest"
req: %{public}@, "URLSessionTaskIsWaitingForConnection"
req: %{public}@, "conditionalRequirementsChanged to: %s"
req: %{public}@, "URLSessionWillRetryBackgroundDataTask after event %@"
Wrapping context requires a non-nil recordID and field. RecordID: %@, field: %{public}@
Invalid wrapping context for generating asset context string. File signature: %@. Reference signature: %@.
Account information changed. Clearing PCS caches
Using %{public}@ PCS Service Name %{public}@ with containerID %{public}@
CKDPCSManager/PCSIdentitiesChanged
PCS identities changed. Clearing PCS identity caches
We've come across missing identities before. Checking to see if a formerly missing key has arrived.
Couldn't get a full identity set to verify against
Service %{public}@ now has a current identity
Formerly missing public key %{public}@ was found with identity %@.
One or more previously missing PCS identities have arrived. Posting a notification to all clients
Couldn't get a %{public}@key for service: %@
OON keyswap: Failed decrypting calling participant protectionInfo: %@. CombinedOONIdentity: %@ (%@)
Couldn't create a diversified public key for the owner participant: %@
Couldn't create an identity from the public sharing key for participant: %@ (key was %{public}@)
Created public identity for participant: %@
Couldn't add public identity to per-participant PCS: %@
OON keyswap: Failed to remove combined identity: %@
OON keyswap: failed to convert PCS blob to data: %@
Error decrypting the invited PCS: %@
Error decrypting the per-participant PCS: %@
Warn: Couldn't get a self identity: %@
Added identity %@ to PCS %@
Error adding identity %@ to PCS %@: %@
Warn: Couldn't get a %@ identity: %@
Couldn't get keyIDs from pcs %@
Couldn't get private key from pcs %@
Couldn't get a public identity from PCS %@
A PCS blob could not be decrypted for service %{public}@. %{public}@ are keys that can decrypt the zone. Will notify clients if any of these keys arrive.
We are missing identities for service %{public}@. Will notify clients if any keys arrive.
Failed to get signing identity in createZonePCSWithError: %@
Warn: Couldn't get a Reminders identity: %@
Created new zone PCS: %@
Error creating new zone PCS: %@
Forcing user key registry sync retry for unit tests
Forcing user key registry sync failure for unit tests
Synchronizing user key registry before retrying zone PCS creation for service %{public}@.
Failed to synchronize user key registry: %@
Successfully synchronized user key registry. Retrying zone PCS creation for service %{public}@.
Created zone PCS data from zone PCS %@: %@.
Error creating zone PCS data from zone PCS %@: %@
Error creating PCS from encrypted data %@: %@
Got %lu pcs key(s) to match from dugong invitation
Matching participants with invitation public key: %@
PPPCS public key is not present for participant %@, checking PPPCS blob
Manatee share is already accepted by participant %@, filling anonymousID %@ for share metadata.
Could not get public key data from invitation token for share %@. This won't go well.
Stingray share is already accepted by participant %@, filling anonymousID %@ for share metadata.
Found current participant %@ on anonymous to server share %@
Failed to get current identity set trying to create anonymous userID %@
Failed to get current identity trying to create anonymous userID: %@
Failed to get exported private key data trying to create anonymous userID: %@
Generated fake anonymous user ID %@
Failed to assemble required components to generate an anonymous userID. Not returning one.
CKBehaviorOptions override - Generated anonymous user ID %@ for share %@
Generated versioned anonymous user ID %@ for share %@
A decrypt attempt on this exact PCS data has failed before and no useful identities have arrived since. Failing the decryption.
Decrypted and exported sharing invitation token with identity set %@%{public}@%@
Decryption with identity set %@ failed. Attempting to decrypt using all identities in the keychain %@
Was able to decrypt pcs with a key in the keychain, but not the %{public}@ key. Possibly a misconfigured client set up.
Created %{public}@ using identity %@ 
From data %{public}@
Error creating PCS: %@.
Identity %@
PEM data was %@
 PCS data %@.
Synchronizing user key registry before retrying decryption for service %{public}@.
Successfully synchronized user key registry. Retrying decryption for service %{public}@.
Failed to decrypt PCS data even after syncing user key registry because we have no identities. Returning retryable failure.
Failed to decrypt PCS data even after syncing user key registry. Returning permanent failure.
Failed to decrypt manatee blob because iCDP isn't available. This should've been caught and failed earlier.
Forcing CKErrorInternalPCSNoPublicIdentity after key registry sync due to unit tests
Forcing CKErrorInternalPCSDecryptFailed after key registry sync due to unit tests
Warn: No identities for service %{public}@: %@
Warn: Couldn't preflight identity for service %{public}@: %@
Forcing user key registry sync failure for current service
Synchronizing user key registry before retrying identity preflight for service %{public}@.
Successfully refetched user identities after key registry sync failure: %@. Identity preflight for %{public}@ succeeded.
Failed to synchronize user key registry: %@, marking identities missing.
Successfully synchronized user key registry. Retrying identity preflight for service %{public}@.
Created zone PCS using identity %@ from data %{public}@: %@.
Error creating zone PCS: %@.
Identity %@
PEM data was %@
Zone PCS data %@.
Error creating shared zone PCS using invited PCS for zone %@: %@
Created shared zone PCS: %@ and zoneish PCS: %@ for zone %@
Couldn't create data from zone PCS %@: %@
Successfully repaired zone PCS data
Error repairing zone PCS data: %@.
Identity: %@
PEM data: %@
Data was %@
Not checking PCS shouldRoll hint because we're asked not to!
Not checking PCS shouldRoll hint because we're using a non-manatee service identity: %{public}@
Not checking PCS shouldRoll hint because we're not allowed to in container %@
Not checking PCS shouldRoll hint because manatee isn't available. %{public}@%@
Aborting master key roll because of behavior option override
Aborting master key roll because container %@ is not on the allowlist
Aborting master key roll due to cap of %lu rolls. Current number of keys: %lu
Couldn't roll master key for record PCS %@: %@
Rolled master key for record PCS %@
Not updating zone PCS identities because we're asked not to!
Not updating zone PCS identity because container %@ is not on the allowlist
Couldn't update zone identity on pcs %@ using zone PCS %@: %@
Updated zone identity on pcs %@ with using zone pcs %@
PCS data with hash %{public}@ is undecryptable. Recording this so we fail early on future attempts.
Failed to clean up share pcs %@: %@
Cleaned up %lu private keys from pcs %@
Failed to roll the identity for share pcs %@: %@
Rolled the identity for share pcs %@
Not rolling zone PCS identities because we're asked not to!
Not rolling zone PCS identities because we're using a non-manatee service identity: %{public}@
Couldn't roll key for zone PCS %@ with current service %{public}@: %@
Rolled key for zone PCS %@ with current service: %{public}@
Not rolling zone sharing PCS identities due to behavior option
Not rolling zone sharing PCS identities because current service %{public}@ is not manatee
Attempting to roll share keys for zone-wide share in zone %@ but this operation is not permitted
Didn't get decrypted share, shared zone pcs to roll- aborting. Share PCS: %@, Zone PCS: %@, Zoneish PCS: %@
Didn't get decrypted zoneish pcs to roll- solidering on. We're probably using per-record PCS.
Rolling identities for zone-wide share and zone pcs for zone %@
Couldn't remove old invited PCS from zone PCS for zone-wide share in zone %@: %@
Couldn't remove old invited PCS from public PCS for zone-wide share in zone %@: %@
Failed to roll identity for invited PCS for zone-wide share in zone %@: %@
Failed to add rolled invited PCS key to zone PCS for zone-wide share in zone %@: %@
Failed to add rolled invited PCS key to public PCS for zone-wide share in zone %@: %@
Failed to roll identity for zone PCS for zone %@: %@
Couldn't serialize zoneish PCS for share roll: %@
Couldn't decode zoneishPCS data for share roll: %@
Couldn't update identity on zoneish PCS for zone %@: %@
Failed to roll master key for zoneish PCS for zone %@: %@
Couldn't clean up old private keys from PCS for zone %@: %@
Failed to roll keys for zone-wide share in zone %@: %@
Successfully rolled keys for zone-wide share in zone %@
Not rolling record PCS keys because current service %{public}@ is not manatee
Allowing record PCS key rolling in container %@ due to behavior option override
Didn't get decrypted record pcs and zone pcs to roll- aborting. Record PCS: %@, Zone PCS: %@
Couldn't update identity on record PCS for record %@: %@
Failed to roll master key for record PCS for record %@: %@
Failed to roll keys for record PCS for record %@: %@
Successfully rolled keys for record %@
Attempting to roll record PCS keys for zone-wide share in zone %@ but this operation is not permitted
Didn't get decrypted share, shared zone and record pcs to roll- aborting. Share PCS: %@, Zone PCS: %@, record PCS: %@
Couldn't serialize zone-wide share record PCS for share roll: %@
Couldn't decode zone-wide share record PCS data for share roll: %@
Couldn't update identity on zone-wide share record PCS for zone %@: %@
Failed to roll master key for zone-wide share record PCS for zone %@: %@
Failed to remove the old invited PCS key from zone-wide share record PCS for zone %@: %@
Failed to add rolled invited PCS key to zone-wide share record PCS for zone %@: %@
Failed to roll keys for zone-wide share record PCS in zone %@: %@
Successfully rolled keys for zone-wide share record PCS in zone %@
Couldn't create a new PCSShareProtectionRef: %@
Created %@record PCS from zone PCS %{public}@%{public}@%@: %@.
Error creating record PCS from zone PCS %@%{public}@%@: %@
Created %@record PCS from zone PCS data %{public}@%{public}@%@: %@.
Error creating record PCS from zone PCS %@%{public}@%@: %@.
Created data from record PCS %@: %@
Error creating PCS data from record PCS %@: %@
Created PCS object from data (%{public}@): %@. Share PCS was %@
Error creating PCS object: %@.
Share PCS was %@.
PEM data was %@.
Share PCS public keys were %@
Exported PCS data was %@
Refusing to add a nil share PCS to a record PCS
Refusing to add a share PCS to a nil record PCS
Adding %{public}@share PCS
To PCS
Warn: Unable to add share PCS (%@) to record PCS (%@): %@
Added share PCS %@ (%@) to record PCS %@.
Refusing to remove a nil share PCS from a record PCS
Refusing to remove a share PCS from a nil record PCS
Removing share PCS
From PCS
Warn: Unable to remove share PCS (%@) from record PCS (%@): %@
Removed share PCS %@ from record PCS %@.
Couldn't create data from record PCS %@: %@
Failed to get signing identity in createEmptySignedSharePCSForServiceType:withError: %@
Warn: Error creating a share PCS: %@
Created a new signed share PCS: %@
Created a new share PCS: %@
Setting owner public identity %@ on pcs %@
Warn: Error adding public %{public}@ identity to share PCS: %@
Warn: Error adding public sharing identity to share PCS: %@
Created new chain PCS: %@
Error creating new chain PCS: %@
Created data from share PCS %@: %@
Error creating PCS data from share PCS %@: %@
Couldn't decrypt share PCS data with share identity %@: %@
Created share PCS from data (%@): %@. Identity PCS was %@
Error creating share PCS: %@.
Identity PCS was %@.
PEM data was %@.
Record data was %@
Couldn't decrypt share PCS data with share identities %@: %@
Couldn't create an identity from private key data: %@
Couldn't create a public PCS from the PCS data %@ for identity %@: %@
Couldn't create data from encrypted share PCS: %@
Public key data for current private key for share PCS %@ is %{public}@
Trying to unlock our per-participant PCS for share %@ using the %{public}@ service
Successfully decrypted a per-participant PCS using our %{public}@ identity: %@
Attempting decryption of per-participant PCS for share %@ using our %{public}@ identity
No current per-participant PCS data found for decryption on share %@
Trying to unlock PCS blobs for the share using our PPPCS
Successfully decrypted the invited share PCS using our per-participant PCS
Successfully decrypted the public share PCS using our per-participant PCS
Trying to unlock the invited PCS using our %{public}@ service identity
Successfully decrypted the invited share PCS using our identity
Trying to unlock the public PCS using our %{public}@ service identity
Trying to unlock the public PCS using the public sharing key
Trying to unlock the public PCS using the decrypted invited PCS
Couldn't decrypt public PCS for share %@ using the private PCS. Oh well, moving on.
Successfully decrypted the public PCS for share %@ using the private PCS
We were able to decrypt the share public PCS using our identity for share %@
Couldn't decrypt share private PCS with public PCS for share %@: %@
Unlocked private share PCS for share %@ using the public PCS
We were able to decrypt the public share PCS for %@ with our identity, but since the share permission is %ld we can't decrypt the private PCS. This might not go well...
Failed to decrypt the public share PCS using our identity
Warn: Couldn't unlock the private share PCS for share %@
Share decryption called without a share
Using pre-decrypted share PCS for share %@
Decrypted share PCS for share %@
Couldn't unlock the private share PCS for share %@: %@
Creating new PCS data for share %@ with service type %{public}@
Couldn't create a private PCS object for the share %@: %@
Couldn't create a public PCS sharing identity from data (%@): %@
Using identity for public PCS on share %@: %{public}@: %@
Couldn't create a public PCS object for the share %@: %@
Couldn't create data from our public sharing identity: %@
Adding debug sharing identity to share %@
Couldn't add debug sharing identifier to share %@: %@
Adding the owner to the self-added PCS blob for share %@
Couldn't add our %{public}@ identity to the public PCS for share %@: %@
Error adding private sharing PCS to public sharing PCS for share %@: %@
Error creating PCS data for share %@: %@
Successfully created PCS data for share %@
Couldn't create data from share PCS %@: %@
Refusing to add a nil public identity to a record PCS
Refusing to add a sharing identity to a nil record PCS
Successfully added public identity %@ to record PCS %@
Error adding public identity %@ to record PCS %@
Refusing to add a nil sharing identity to a record PCS
Error getting a public identity from sharing identity %@
Refusing to remove a nil sharing identity from a record PCS
Refusing to remove a sharing identity from a nil record PCS
Couldn't create a PCS from the encrypted blob %@
Removing public identity for key %{public}@
Failed to remove public identity matching key %{public}@ from record PCS %@
Could not find matching public identity for key %{public}@ on record PCS %@
Removing public identity for keyID %{public}@
Failed to remove public identity matching keyID %{public}@ from PCS %@
Could not find matching public identity for keyID %{public}@ on record PCS %@. Soldiering on.
Got sharing identity %@ from PCS data %@
Warn: Couldn't get sharing identity from PCS data: %@
Couldn't unwrap asset key because we have no PCS object or wrapped asset key
Unwrapped wrapped asset key %{public}@ with PCS %@
Failed all decryption attempts for wrapped asset key %@ in context %@ using PCS %@: %@
Couldn't create a wrapped asset key: %@
Couldn't wrap asset key with no record PCS or asset key
Wrapped asset key with signature %@ with PCS %@
Couldn't wrap asset key with signature %@ with PCS %@
MMCSReferenceObjectCreateWithType failed with error %@
Failed all decryption attempts for encrypted data %@ in context %@ using PCS %@: %@
Unwrapped encrypted data in context %@ using keyID %@ with record PCS %@: %@
Failed to get keyID from encrypted data %@. Soldering on and trying all keyIDs.
Couldn't unwrap encrypted data in context %@ using keyID %@ with record PCS %@. Trying all keyIDs.
Wrapped encrypted data in context %@ with record PCS %@: %@
Warn: Couldn't encrypt data: %@
daemon/fetch-share-metadata
Third party process requested OON share metadata, returning error %@
Warn: Couldn't decrypt the protected full token: %@
Warn: Invalid full token length: %@
Got a full token of %@
Warn: Invalid token header, fullTokenLength:%lu, schemeByte:0x%0x, locatorLength:%lu
Warn: Unknown scheme byte: 0x%0x
Couldn't decode full token header: %@
We have no tokens to fetch short token metadata for. Giving up now
Short token metadata request finished%{public}@%@
Fetching short share token metadata from the server for %ld URLs
Warn: Couldn't get token metadata for URL %@ and token lookup info %@
Error %@ when fetching short token metadata for %@
Skipping share decryption after getting share metadata for shareURL %@
Warn: Couldn't decode the protected full token
Couldn't find current user on share with anonymous to server participants. Swizzling into share not found.
Using the service name %@ from public key version %lu of share metadata because it is manatee and this operation is initiated by another process
Share invitation token URL %@ doesn't match client-provided share URL %@. This will go badly.
Share invitation token and client-provided share URL are a match: %@
Warn: Couldn't ingest manatee sharing invitation data for share %@: %@
Successfully ingested manatee sharing invitation data for share %@
Attempting to prep PCS data for share %@ with container %@
Prepped PCS data for share %@ with container %@%{public}@%@
Warn: Couldn't get a public sharing identity for share %@: %@
Public sharing identity for share %@ is %@
No root record received when fetching share metadata %@
Prepped PCS data for share %@ with container %@%@%@
Suppressing error for OON user share metadata fetch. Error was: %@
Error fetching records: %@
Fetch records operation %{public}@ completed with error: %@ for <%{public}@: %p; %{public}@>
Suppressing error for OON user fetch with operationID %{public}@. Error was: %@
Starting fetch records operation %{public}@ for <%{public}@: %p; %{public}@>
We have no share URLs to fetch. Giving up.
Extracting short token from URL %@
Warn: Couldn't get a short token for the URL %@
Warn: Couldn't decode the short sharing token for the URL %@
Invalid shortSharingTokenData length(%lu) for the URL %@
Received invitation token %{public}@ for CKFetchShareMetadatOperation %{public}@
Found participantID on invitationToken %@
Extracted short token %@ and routing key %{public}@ from URL %@
Starting fetch share metadata operation <%{public}@: %p; %{public}@, %@>
daemon/modify-web-sharing
Record for %{public}@share (%@) was saved%{public}@%@
Oplock failure while trying to %{public}@share record %@. Retrying.
We don't have any records to save, so bailing now.
Saving %ld records: %@
Done saving all records for (un)share operation.%{public}@%@
Record %@ never received a callback when modifying records. Sending that callback now with error %@
Warn: Record %@ didn't have any share protection data on it
Warn: Couldn't deserialize share protection data on record %@: %@.
Data was %@
Received a record ID that we don't know anything about: %@
Couldn't fetch record %@ from the server: %@
Fetched record with ID %@ from the server. Unwrapping sharing identity and %{public}@sharing the record
Error getting share identity from record %@: %@
Fetched record %@ had no PCS data
Warn: Error %{public}@sharing record %@: %@
Warn: Error serializing record PCS data for %{public}@share of record %@: %@
New protection data for record %@ after %{public}@sharing is %@
Successfully %{public}@ sharing info to record %@. Preparing to save the record back to the server
Done fetching all records for web sharing
Record %@ was never fetched from the server. Returning error %@
Starting web share operation <%{public}@: %p; %{public}@, %@>
daemon/modify-record-access
Record for access %{public}@ (%@) was saved%{public}@%@
Oplock failure while trying to %{public}@ access on record %@. Retrying.
Done saving all records for record access operation.%{public}@%@
Record %@ didn't have any access token protection data on it
Warn: Couldn't deserialize access token protection data on record %@: %@.
Data was %@
Fetched record with ID %@ from the server. Unwrapping access token and %{public}@ access to the record
Record %@ had no access token on it. Creating a new one. (%@)
Warn: Error %{public}@ access to record %@: %@
Warn: Error serializing record PCS data for access %{public}@ of record %@: %@
New protection data for record %@ after %{public}@ access is %@
Done fetching all records for web access
Starting web access modification operation <%{public}@: %p; %{public}@, %@>
daemon/discover-user-identities
For lookup info %@, discovered identity %@
Error fetching contacts: %@
Found user identity %@
Unsupported Event Metric Type. Unable to assign report frequency.
Operation Group Not Found, Unable to associate operation %@ with operation group %@.
CKEventMetric %@ didCompleteWithError %@
Failed to create CKEventMetric %@ didCompleteWithError callback.
daemon/upload-mergeable-deltas
Failed to get protobuf size for delta, but moving on: %@
Will add replacement request %@
Starting delta upload request with %tu deltas (%tu bytes) for operation <%{public}@: %p; %{public}@>
Delta upload request completed for operation <%{public}@: %p; %{public}@> request: %@
Successfully uploaded delta: %@
Failed to upload delta, %@, with error: %@
Successfully replaced deltas for request: %@
Failed to replace deltas with error: %@
Missing authPutRequest
Multiple instances of header %{public}@: last one wins
Unable to set header %{public}@ with value %{private}@
Server did not return the required authPutResponse even though an authPutRequest was sent.
Missing authPutRequest.
Server did not return an authPutResponse even though an authPutRequest was sent. While unexpected, this just means the MMCS operation requires a trip to the Content server
Setting the upload token "%@" for recordID:%{public}@, MMCSItem:%@
Missing requestID on %@
Can't find assetBatch for %{public}@ on %@
daemon/verify-share-vetting
OON share reconstruct: selfAdded failed to decrypt: %@
OON share reconstruct: pcs to data conversion failed: %@
OON short token reconstructed: %{public}@
Performing vetting on token: %{public}@, for: %@
Vetting token: %{public}@ validated.
OON keyswap: Not swapping OON keys as %s is missing
Failed to create protection info in OON key-swap for participantID: %@, recordID: %@, error: %@
Invalid data in server protobuf, ignoring record. Offending record: %{public}@
Invalid data in server protobuf, ignoring record. Offending identifier: %{public}@
daemon/download-assets
Not filling in key for constructed asset URL template for asset %@ because it doesn't require a key
Couldn't create asset download URL from template %{public}@
constructedAssetDownloadURL %{public}@
Downloading assets %@, in-memory assets %@, and publish assets %@ for operation %{public}@
Returning asset from cache: %@
No assets to download for %{public}@
Failed to download MMCS item %@ for package %@ and operation %{public}@: %@
Failed to download MMCS item %@ for operation %{public}@: %@
Failed to download %lu MMCS items for operation %{public}@: %@
Expected non-nil fileURL for %@
Updated package item with index:%lu and path:%{public}@
Failed to download MMCS section item %@ for package %@ and operation %{public}@: %@
Downloaded MMCS section item %@ for package %@ and operation %{public}@: %@
Failed to download %lu MMCS section items: %@
Package section item %@ has zero file signature and non-zero size %llu
Downloading MMCS section item %@ at index %lu with MMCS items %@ for package %@ and operation %{public}@
Missing path for package manifest for package %@ and operation %{public}@: %@
Failed to read the manifest file at %@ for package %@ and operation %{public}@: %@
Read the package manifest with %lu items and %lu sections for package %@ at %{public}@
Downloading %lu/%lu package items for package %@ and operation %{public}@: %{public}@
No files or packages to download for %{public}@
maxPackageDownloadsPerBatch:%lu (%lu)
Finished downloading package manifest for package %@
Finished downloading package sections for package %@
Downloading transcoded asset %@
The self is not strong with the transcoding operation for %@
No wire serialization for transcoding record
Couldn't get encrypted master key for transcoding record
No wire serialization when handling intial transcoding response
Error fetching transcoded asset %@: %@
Transferring data from transcoded asset %@ to the response record's asset %@
No transcoded asset after fetching from transcoder
daemon/fetch-user-quota
Fetch user quota operation <%{public}@: %p; %{public}@, %@> is starting
Fetched quota (%llu) with response code %ld
Fetch quota operation <%{public}@: %p; %{public}@> finished with error %@
Warn: Hit an error while decoding fields for a record
Warn: Found an unexpected field tag: %d
Warn: Couldn't place a reader mark
Warn: Couldn't read field
Trying to create a mergeable value field from something that isn't a mergeable: %@
Trying to create a mergeable value field from something that isn't a mergeable record value: %@
Did not expect %@ field to have encrypted flag set
Invalid field value (record identifier) from server: %@
Invalid asset type from server: %@
Invalid package type from server: %@
Invalid streaming asset type from server: %@
Invalid mergeable value type from server: %@
Can't start yet, device is still in buddy
System is unavailable
System is past buddy but not yet unlocked
System is unlocked since boot but buddy is not complete
System is available
Notifying watchers of availability change. Watchers are %@
Registering watcher %@
CKDSystemAvailabilityMonitory/_systemReadyCheckFired
Received buddy notice but still reports buddy incomplete.
CKDPushConnection/didReceivePublicToken
Received public token from connection %@: %{public}@
Push connection for environment "%{public}@" changed status: %{public}@
Did reconnect to push daemon
req: %{public}@, "Couldn't create publicCloudDBURL url"
req: %{public}@, "Couldn't create publicShareServiceURL url"
req: %{public}@, "Couldn't create publicDeviceServiceURL url"
req: %{public}@, "Couldn't create publicCodeServiceURL url"
req: %{public}@, "Couldn't create publicMetricsServiceURL url"
req: %{public}@, "Couldn't parse a container scoped user id from %{public}@"
req: %{public}@, "Container scoped user ID was needed but not returned because we didn't have an iCloud auth token. Handling this as an auth failure."
req: %{public}@, "Couldn't parse an org admin user id from %{public}@"
req: %{public}@, "Org Admin user ID was needed but not returned because we didn't have an iCloud auth token. Handling this as an auth failure."
daemon/modify-record-zones
Synchronizing user key registry for operation %{public}@.
Failed to synchronize user key registry for operation %{public}@ with error %@
Successfully synchronized user key registry for operation %{public}@
Failed to save %lu zones for operation %{public}@ despite synchronizing user key registry. procName=%{public}@, containerID=%{public}@
Failed to save zone %@ to the server %d times. Bailing with error: %@.
Got a response for record zone with ID %@, but we didn't try to put that record zone.
RecordZone %@ was successfully saved to the server
Couldn't decrypt zoneish PCS for zone %@: %@
Warn: Couldn't create a PCS object from zone data for zone %@: %@
Received a failure for save of zone %@ with error code %d. Re-fetching the zone PCS and trying again
Zone PCS for %@ failed server validation. Will synchronize user key registry for operation %{public}@ before trying again.
Possible anonymous share %@ not found. Removing share from anonymous share list
Error %d when saving record zone %@ to the server
RecordZone %@ was successfully deleted from the server
Error %@ when deleting record zone %@ from the server
Skipping save of zones because there is nothing to do
Saving %ld, deleting %ld record zones on the server.
Error modifying record zones: %@
Creating new PCS data for zone %@
Couldn't create a PCS object for the zone %@: %@
Error creating PCS data for zone %@: %@
Couldn't create a zoneish PCS for zone %@: %@
Created zoneish PCS for zone %@ with key %@
Couldn't create data from zoneish PCS for zone %@: %@
Fetched pcs info for zone %@. Continuing with save for that zone.
Warn: Couldn't fetch PCS data for zone %@: %@. Refusing to save zone.
Not saving zone %@ due to a PCS error: %@
Skipping fetch of zones from the server for operation %{public}@ because it has dontFetchFromServer set
Preparing PCS data for %ld zones
Zone %@ already has PCS data.
Waiting to fetch zone PCS data
No zone to save in this operation.
Skipping zone PCS stuff because encryption is disabled
Warn: Couldn't get a shareRecord from %@: %@
Warn: Couldn't get a root record from %@: %@
Found %lu additional share hierarchy records
Parsing share hierarchy record %{public}@
Warn: Couldn't get a shared hierarchy record ID from %@: %@
Parsed share hierarchy record ID %{public}@
Warn: Couldn't get a calling participant from %@: %@
Parsed calling participant: %@
Found current user participant on share %{public}@: %@
Couldn't parse a potentially matching OON participant from %@: %@
Couldn't parse shared zone from resolve token response: %@
Parsed zone %{public}@%{public}@%{public}@from response for share metadata %@
Could not create primary backing account
Created primary backing account with ID "%@"
Created anonymous account
Could not create backing account with ID "%@"
Created backing account with ID "%@"
Could not create backing account with altDSID "%@"
Created backing account with altDSID "%@"
Could not create fake backing account with account override info "%@"
Created fake backing account with account override info "%@" and ID "%@"
Could not create mock backing account with test account "%@", test device "%@"
Created mock backing account with test account "%@", testDevice "%@"
Warn: Couldn't determine server preferred push environment from backing account %@
No backing account, so allowing cellular access from account perspective.
The CloudKit auth token for account %@ has changed since the last one we attempted. Trying again with the new token.
Account is suspended and we did attempt a renewal recently. Rate limiting this renewal request
Can't access the account with ID %@, so failing this auth token renew request
Waiting on a credential renewal for account %@
Credential renewal for account %@ finished %{public}@successfully.%{public}@%@
CKDAccount disappeared during renew.
No backing account, so not returning an auth token.
No access to existing account, so not returning an auth token.
Error getting CloudKit auth token: %@
CKDAccount disappeared during iCloud auth renew.
Error getting iCloud auth token: %@
Could not initialize zlib for compression, error %d
%{public}@, outputStream:%p
Failed to write into the outputStream:%p
Got a stream error: %@
Failed to read bytes itemID:%llu, operationID:%{public}@: %@
%@ failed to open at path %@: %@
Exiting due to disk full error creating shared database for %{public}@ at path %{public}@: %{public}@
Exiting due to error creating shared database for %{public}@ at path %{public}@: %{public}@
%@ instance at %@ became invalid. Error: %@
Failed to open package %@: %@
Zero-length asset with itemID %llu
Added section %@ with %lu items and %lu chunks
Added item %@ to section %lu
Failed to create sections for package %@: %@
Added last section %@ with %lu items and %lu chunks
Created sections for package %@
Failed to getChunkKeys MMCS item %@ for operation %{public}@: %@
Failed to register MMCS item %@ for package %@ and operation %{public}@: %@
Failed to register MMCS item %@ for operation %{public}@: %@
Invalid package manifest size for MMCS item %@, package %@ and operation %{public}@: %@
Ignoring preAuthPutResponse for batch %@ : too big at %lu bytes
Skiped rereference of empty asset
Skiped uploading empty asset file at %{public}@
Skiped uploading empty asset file with filehandle %@
MMCSv2 Not Support For Package Manifests.
Clear Asset Key Not Supported For Package Manifests.
Skipping asset keys on manifest item because encryption is disabled
Creating manifest for package %@ and operation %{public}@
Failed to create the manifest for package %@ and operation %{public}@: %@
Wrote the package manifest for package %@ and operation %{public}@: %{public}@
No assets to upload for operation %{public}@
MMCSv2 Not Support For Package Sections.
Error creating asset key for manifest item %{public}@: %@
Created asset key with reference identifier %@ for MMCS section %@
Clear Asset Key Not Supported For Package Sections.
Skipping asset keys on section item because encryption is disabled
GetChunkKeys for MMCS items for operation %{public}@
Registering MMCS items %@ for operation %{public}@
Failed MMCS item %@, package %@ and operation %{public}@: %@
Failed MMCS item %@ and operation %{public}@: %@
Failed to upload MMCS section item %@ for package %@ and operation %{public}@: %@
Failed to upload %lu MMCS section items for operation %{public}@: %@
Invalid section index %lu/%lu for section %@
Invalid section at index %lu/%lu for section %@: %@
Uploading MMCS section item %@ at index %lu for package %@ and operation %{public}@
Uploading MMCS section items %@ for package %@ and operation %{public}@
Can't find section at index %lu for package %@ and operation %{public}@
Failed to upload MMCS item %@ for package %@ and operation %{public}@: %@
Failed to upload MMCS item %@ for operation %{public}@: %@
Failed to upload %lu MMCS items for operation %{public}@: %@
Clear Asset Key Not Supported For Package Section.
No files or packages to upload for operation %{public}@
maxPackageUploadsPerBatch:%lu (%lu)
Failed to remove package manifest at %{public}@: %@
Removed package manifest at %{public}@
daemon/publish-assets
Getting asset urls for record %@
Error getting asset urls for record %@: %@
Creating asset url for asset %@
Failed to fetch record %@: %@
Fetched record %@
Warn: Record %@ contained no matching asset fields to publish
Fetch records operation <%{public}@: %p; %{public}@> finished with error %@
Fetch records operation <%{public}@: %p; %{public}@> succeeded
daemon/RemoveAnonymousShareFromSharedDB
Completed CKDPAnonymousShareRemoveURLRequest
Error CKDPAnonymousShareRemoveURLRequest: %@
daemon/fetch-mergeable-deltas
Error fetching mergeable deltas in operation %@: %@
Finished fetching mergeable deltas for operation %@
Fetch mergeable deltas operation deallocated while fetching mergeable deltas from the server
Will fetch deltas recursively for values %@ with continuation tokens %@
Got a continuation token fetching deltas for value %@
Stopping after error fetching deltas for operation %{public}@: %@
Need to continue fetching deltas for operation %{public}@
Fetch deltas URL request completed for operation <%{public}@: %p; %{public}@>
Successfully fetched delta for %@
Failed to fetch deltas for %@: %@
Unable to determine record ID for value %@
Failed to fetch PCS for value: %@
Failed to decrypt mergeable delta with error: %@
CKDPCSNotifier/SecurityViewBecameReady
Security view%{public}@%{public}@ became ready. Posting a notification to all clients
If an object is parsed in the woods and no one is there to hear it, was it really parsed? You're leaking objects on the floor. Set up a parser callback block
Error parsing message of class %{public}@ from data %@. Raw data is %{private}@
Warn: Couldn't read length from input stream
Failed to parse object from input stream
Warn: Parser encountered an error: %@
daemon/modify-subscriptions
Got a response for subscription with ID %@, but we didn't try to put that subscription.
Subscription %@ was successfully deleted from the server
Error %@ when deleting subscription %@ from the server
Saving %ld, deleting %ld subscriptions on the server.
daemon/move-photos
Decrypting destination record %@ returned from move
Failed to decrypt destination record %@
Decrypting move marker record %@ returned from move
Failed to decrypt move marker record %@
Got a response for record with ID %@, but we didn't try to move that record.
Record %@ was successfully moved on the server
Error when moving record %@: %@
Record PCS etag failed for record %@
Zone PCS etag failed for record %@
%{public}@ oplock failed for record %@
Record PCS chain was invalid
Handling error for record %@ as an oplock failure
Clearing zone PCS tag for record %@
Decrypting server record returned by oplock failure %@
Failed to decrypt the server record %@. Returning as is.
Successfully decrypted record %@
Starting Move Photos operation <%{public}@: %p; %{public}@, %@>
daemon/vetting-initiate
Preparing encrypted key for vetting: adding ourselves to the public PCS for share %@
Unable to generate encrypted key to initiate share vetting: %@
Preparing public PCS metadata for share at URL %@ using public sharing token %@
Couldn't create a sharing public identity from %@: %@
Couldn't create a public PCS from the PCS data %{public}@ for identity %@
Couldn't add our self identity to the public PCS for share at URL %@: %@
Couldn't serialize share public PCS for share at URL %@: %@
Couldn't get an etag for public PCS data on share %@
Successfully added our public identity to the share's public PCS at %@
Share metadata for the share at URL %@ doesn't have protection data on it, skipping
Sending initiate vetting request, this is a %{public}@ attempt
Received LoginRequired from the server, trying to re-authenticate the user
Received LoginRequired from the server, but this was a second attempt, not trying to re-authenticate the user again
Failed to convert subscription: %@
Generated anonymousShareTupleHash: %@ for anonymousUserID: %@
encryptShareTuple zonePCSData not available yet
_encryptShareTuple zonePCSData is still not available. Terminating without additional retry.
Error generating ckAnonymousShareHashIdentifier for CKDAnonymousShareTuple
Encrypted data with zone PCS %@:
Error encrypting data with zone PCS: %@
decryptShareTuple zonePCSData not available yet
_locked_decryptShareTuple zonePCSData is still not available. Terminating without additional retry.
Decrypted data with zone PCS %@:
Error decrypting data with zone PCS %@:
_locked_decryptShareTuple Unable to decrypt share tuple data.
Fetching %{public}@PCS data for zone %@
Fetched PCS for zone %@:
Warn: Couldn't fetch PCS for zone %@: %@
daemon/repair-zone-pcs
Uploading %ld repaired zones
Reparing %ld zones: %@
Warn: Zone %@ had bad PCS data. Attempting to repair it.
Couldn't repair zone PCS for zone %@: %@
Repaired PCS info for zone %@. Will upload new protection data: %@
Everything looked good with the PCS data on %@
Starting fetch user record operation <%{public}@: %p; %{public}@, %@>
daemon/fetch-share-participants
For fetch info %@, found user identity %@, error %@
Got lookup service for identity fetch operation: %@
Scheduling a request %@ to the lookup service
Performing identities lookup with the lookup service
Logging power event: %@
Can't convert empty server type string to a CKDPServerType
Server type "%{public}@" isn't known
Can't convert empty partition type string to a CKDPPartitionType
Partition type "%{public}@" isn't known
open, trackingUUID:%@ itemID:%llu, handle:%p
close, itemID:%llu, handle:%p
Failed to stat itemID:%llu, handle:%p, operationID:%{public}@: %@
stat, itemID:%llu, handle:%p, fileSize:%llu, fileID:%llu, generationID:%lu, modTime:%llu
Failed to pread for itemID:%llu, handle:%p, operationID:%{public}@, offset:0x%llx, length:%llu: %@
Failed to pwrite for itemID:%llu, handle:%p, operationID:%{public}@, offset:0x%llx, length:%llu: %@
packageGarbageCollection
Purging packages in: %@
Error enumerating %@ for package purges, failed to get the resource value at %@: %@
Adding %@ to package purger
req: %{public}@, "Unregistering token %{private}@ in aps environment %{public}@ for bundleID %{public}@"
req: %{public}@, "Inlining fake response operation result for function %{public}@"
Unable to read subscription object, discarding: %{public}@: %@
User key sync calling out to waiter for service %{public}@ with success:%{public}@%{public}@%@
About to sync user keys for service: %{public}@, account dsid %@
Finished syncing user keys %{public}@successfully for service %{public}@. Error: %@
Setting key sync completion date %f for service %{public}@
Key registry sync for service %{public}@ returned existing identity: %@. Service is manatee: %@
No account DSID, so we can't sync with the user key registry
Compared tracker completion date %f to zonePCS modification date %f. %@ligible for key sync
A key sync for service %{public}@ is already in progress, queueing ourselves behind it
daemon/fetch-subscriptions
Fetch subscriptions operation <%{public}@: %p; %{public}@> hit top-level error %@
Share %@ already has PCS data. Decrypting it.
Successfully decrypted PCS data for share %@: %@
Warn: Couldn't decrypt existing share protection data on share %@: %@
Fetching PCS data for share %@
Public sharing identity on share %@ does not match the public sharing identity from its root record (%@). Failing share save
Setting public sharing identity from root record %@ on share %@: %@
Didn't get a public sharing identity for root record %@
Error fetching PCS data for root record %@: %@
Warn: Couldn't fetch PCS data for share %@: %@. Refusing to save share.
Share %@ has no root record ID, so we'll generate a new PSI for the share
Fetching public sharing identity for root record %@
Using passed in data to create a public sharing identity for %@: %@
Creating a new random sharing identity for share %@
Someone is trying to save a share in the public database. That's not going to go very well.
Public sharing identity on share %@ is different. Expected %{public}@, got %{public}@
Fetched pcs info for share %@
Warn: Can't save share %@ if we have no PCS data for it%{public}@%@
Warn: Private PCS data for share %@ is nil
Warn: Public PCS data for share %@ is nil
Adding invited PCS to zone PCS for zone-wide share %@
Updating signing key on invited pcs for zone-wide share %@
Done updating pcs for share %@%{public}@%@
Operation %{public}@ needs to key roll for zone-wide share %@ due to %lu invited keys to remove and %lu removed participants
Operation %@ did attempt a key roll for zone-wide share %@%{public}@%@
Updating permission for private participant %@ from %{public}@ -> %{public}@ to match the public permission on share %@
Warn: Couldn't serialize private share PCS for share %@: %@
Warn: Couldn't create a PCS etag for share %@: %@
Warn: Couldn't serialize public share PCS for share %@: %@
Warn: Couldn't create a public PCS etag for share %@: %@
Serializing zone PCS for plugin-field update to create zone-wide share %@
Couldn't serialize zone PCS trying to create zone-wide share: %@
Serializing zoneish PCS for plugin-field update to create zone-wide share %@
Couldn't serialize zoneish PCS trying to create zone-wide share: %@
Failed to serialize PCS data for share %@: %@
Successfully serialized PCS data for share %@
Error adding public sharing PCS to private sharing PCS for share %@: %@
Error removing public sharing PCS from private sharing PCS for share %@: %@
Error cleaning up public PCS for share %@: %@
Removing public participant %@ from share %@.
Couldn't get a current public sharing identity for the owner on share %@: %@
Added public sharing identity %{public}@ to our self owner user on share %@
Couldn't get a private PCS for the share %@, so we can't upgrade our owner's PPPCS
Checking participants on share %@
Couldn't create invitedPCS for share %@: %@
Participant %@ wants a new invitation token on share %@
Setting up private participant %@ on share %@
Couldn't configure new participant on share %@: %@
Couldn't remove participant participant PCS for share %@: %@
Modifying per participant PCS permission for participant %@ on share %@
Couldn't update participant PCS for participant's role on share %@: %@
Error removing public key %{public}@ from the invited PCS blob: %@
Found more than one public identity on per-participant PCS %@. Which one will be returned is undefined.
Error deserializing protectionInfoPublicKey %@ on participant %@: %@
Successfully modified per participant PCS permission %@ on invitedPCS for participant %@ on share %@
Cannot add public identity %@ to invitedPCS %@ for per participant PCS permission update
Public identity %@ can be found on participant, but invitedPCS is not shared to it
Couldn't remove participant from share %@: %@
Removing share participant with identity %@ and public key %{public}@, PPPCS public key: %{public}@
No participant PCS found for participant %@. We can't remove them from the share
Couldn't remove per-participant PCS from invited PCS for participant %@: %@
Removed per-participant PCS from invited PCS for participant %@
Couldn't configure PCS data for removed participant %@: %@
Successfully configured PCS data for removed participant %@
Couldn't create a public key for the owner participant on share %@: %@
No private OON key exists for participant %@. We can't add them to the share
No public sharing key exists for participant %@. We can't add them to the share
Couldn't create an identity from the public sharing key for participant %@: %@ (key was %{public}@)
Ensuring %{public}@share participant with identity %@ and public key %{public}@ is in invitedPCS
Created public identity for participant %@: %@
Skipping PPPCS for the owner on share %@ because the unit tests told us to do it.
Couldn't add per-participant PCS to invited PCS for participant %@: %@
Added owner public key to invited PCS for participant %@
Couldn't create a per-participant PCS for participant %@: %@
Created a new per-participant PCS blob for participant %@: %@
Couldn't get the share authorship identity for participant %@
Admin %@ using the owner identity of self PPPCS to setup new participant
Cannot add participant %@ with missing public key to share
Couldn't create manatee sharing invitation data for participant %@: %@
Created a new manatee sharing invitation blob for participant %@: %@
Couldn't add public identity to per-participant PCS for participant %@: %@
Added participant's public identity to their per-participant blob for participant %@
Added per-participant PCS to invited PCS for participant %@
Creating invitation token for participant %@. Invitation data: %@, shareURL %@, participantID: %@
Couldn't serialize per-participant PCS for participant %@: %@
Couldn't set up PCS data for new participant %@: %@
Successfully set up PCS data for new participant %@
Couldn't create an identity from the public sharing key %{public}@: %@
Couldn't remove public key %{public}@ from the invited pcs: %@
Clearing share protection data for share %@
Throwing away cached envelope for %@
Invalid user record response from server: %@
req: %{public}@, "Inlining fake response operation result"
%@ in %{public}@ count %lld
%@ in %{public}@ not in the sharedWrappers map at key %{public}@
%@ in %{public}@ and actually dropping but did not tear down
Warn: Invalid value (%{public}@) for %{public}@ key in error %@
Programmer error starting MMCS request.
Skipping remove dir at %{public}@: %@ %{public}@
Warn: Failed to remove dir at %{public}@: %@
Removed dir at %{public}@
Found a cached MMCS wrapper %@ at path %{public}@ count %lld
Couldn't create a context, %@
setting sharedWrappers map key %{public}@ value %@ count %lld
Exception %{public}@
failed to drop %@ in %{public}@
already dropped %@ in %{public}@
Using MMCS options: %{public}@
%s %lu MMCS items, operationID:%{public}@: %@
itemID:%llu is missing file signature
%s MMCS item group %@ for operationID:%{public}@ with options %@
Missing kMMCSRequestOptionPreauthorization for CKDMMCSOperationTypePutChunkKeys
Getting MMCS item group %@ for operationID:%{public}@ with options %@
Failed getting %lu MMCS items for operationID:%{public}@: %@
Getting MMCS item group set %@ for operationID:%{public}@ with options %@
Putting MMCS item group %@ for operationID:%{public}@ with options %@
Failed putting %lu MMCS items for operationID:%{public}@: %@
Putting MMCS item group set %@ for operationID:%{public}@ with options %@
Error counting registered items %@
MMCS has %llu registered items.
Error enumerating registered items %@
MMCS itemID %llu registered.
Expected registered item IDs to be ordered ascending: Previous itemId %llu is not less than %llu.
_unregisterItemIDs Zero itemID
Unregistering itemID=%llu with MMCS
Failed putting section with %lu MMCS items for operationID:%{public}@: %@
Putting MMCS section item %@ for operationID:%{public}@ with options %@
Failed getting a section with %lu MMCS items for operationID:%{public}@: %@
Getting MMCS section item %@ for operationID:%{public}@ with options %@
MMCS item %llu was expected to be registered in MMCS for operationID:%{public}@ at %@, but there was an error: %@
MMCS item %llu signature mismatch: expect %@, got %@
MMCS item %llu has no file size
MMCS item %llu has invalid file size %{public}@
MMCS item %llu expected to have chunk count %u
MMCS item %llu chunk count mismatch: expected %u, got %u
Registered MMCS itemID=%llu signature=%@ fileSize=%{public}@ chunkCount=%{public}@ was unexpected.
Registered MMCS itemID=%llu signature=%@ was unexpected.
Error when validating asset cache and mmcs chunk store.
Registering %lu MMCS items, operationID:%{public}@: %@
Failed to %{public}s %lu MMCS items for operationID:%{public}@: %@
Failed to %{public}s MMCS items (%lu/%lu) not already registered for operationID:%{public}@: %@
Failed to fetch registered MMCS item %llu for operationID:%{public}@ %@
Failed to register MMCS item %llu for operationID:%{public}@ at %{public}@: %@
Register complete: Pushed sig and size to asset:%@ for item %@
Unable to open reader for %@: %@
Unable to get info for %@: %@
Unable to close for %@: %@
Unable to open for %@: %@
%{public}s MMCS item %llu with size:%llu, paddedSize:%llu, chunkCount:%lu, signature:%@, path:%@
{public}%s MMCS item %llu with size:%llu, paddedSize:%llu, signature:%@, path:%@
%{public}s MMCS item %llu with size:%llu, paddedSize:%llu, chunkCount:%lu, signature:%@
%{public}s MMCS item %llu with size:%llu, paddedSize:%llu, signature:%@
%{public}s MMCS item %llu signature:%@
%{public}s %lu MMCS items for operationID:%{public}@
%{public}s %lu/%lu MMCS items for operationID:%{public}@
Failed to %s for %lu MMCS items for operationID:%{public}@: %@
Failed to %s for all %lu MMCS items for operationID:%{public}@: %@
Failed to %s for MMCS item %ld for operationID:%{public}@ : %@
GetChunkKeys complete: Pushed size to asset:%@ for item %@
%s MMCS item %ld with size:%llu, paddedSize:%llu, signature:%@
%s %lu MMCS items for operationID:%{public}@
Record %@ already has protection info
Fetching protection info for record %@
Beginning signing PCS fetch. Fetching zone PCS and checking if there is a share PCS on it
Fetched zone PCS for zone %@ and it has a share PCS on it. Setting signing PCS for our record to be the share PCS
Record should be of a hierarchical share. Fetching its signing PCS by fetching its record PCS
Could not fetch record PCS for record %@. Record may not exist on server. Done with our attempt with fetch signing PCS
Successfully fetched signing PCS for record %@
Could not fetch the signing PCS for record %@
Setting signing PCS for record %@ to be invited PCS of the share: %@
Setting signing PCS for record %@ to be invited PCS of zone share
Setting signing PCS for record %@ to be that of parent: %@
Couldn't fetch signing PCS to create a signature for record %@
Couldn't get a private identity from the signing PCS %@ for record %@
Creating a new random sharing identity for record %@
Couldn't create a new sharing identity for record %@: %@
Using identity for public PCS on record %@: %@: %@
Couldn't create a public sharing identity for record %@: %@
Warn: Record %@ isn't in the private database, doesn't have a share or parent set and isn't a share
Using prepared share pcs and shared zone pcs data for share %@
Got an error fetching PCS data locally for record %@. Attempting another network-based fetch with options %lx
Didn't get PCS data for record %@: %{public}@. Fetching the zone PCS and creating new PCS data
Got an error fetching PCS data for record %@: %@
Getting ready to fetch PCS Data for record %@
Parent record %@ in the same batch didn't have chain PCS data on it for record %@
Using parent PCS data from our current batch %@
Warn: Failed to fetch share with ID %@. Not adding it to the record PCS: %@
Failed to get share or zone PCS data to roll record PCS for zone-wide share record %@, shared zone PCS: %@, share PCS: %@
Error key-rolling for record %@: %@
Successfully checked key-rolling requirements for record %@. May have rolled keys as well.
Adding share with ID %@ to record %@
Warn: Error adding share PCS %@ to record PCS %@: %@
Removing share with ID %@ from record %@
Warn: Error remvoing share PCS %@ from record PCS %@: %@
Rolling record PCS master key since we removed a share for record %@
Warn: Failed to fetch share with ID %@. Not removing it from the record PCS: %@
Waiting on share fetches so we can update the record PCS
Error fetching share PCS and adding it to the record PCS: %@
All shares have been fetched and the record PCS is updated for %@
Removing previous parent %@ with public key ID %{public}@ from record PCS for %@
Using PCS data for parent from our current batch: %@
Parent exists in the same batch but it doesn't have any chain PCS data, so we can't save %@
Fetching parent PCS data with record ID %@ for record %@
Fetched parent PCS data with record ID %@ for record %@: %@
Couldn't get PCS data for parent %@ of record %@
Error fetching parent PCS and adding it to the record PCS: %@
All parent records have been fetched and the record PCS is updated for %@
Adding parent PCS data %@ to PCS for record %@
Couldn't decrypt the chain PCS blob on parent record %@: %@
Error adding parent PCS %@ to record PCS %@: %@
Successfully added parent PCS data from record %@ to record %@. Public key ID is %{public}@
Warn: Couldn't fetch PCS for share %@: %@
All PCS data fetched. Creating PCS for record %@
Warn: Couldn't get PCS data for zone %@%{public}@%{public}@. Error was %@
Creating new PCS object for record %@
Using zoneish PCS with key %{public}@ for record %@
Couldn't create a new record PCS for %@: %@
Warn: Couldn't deserialize record PCS provided by the client: %@
Successfully deserialized client PCS data for record %@
Warn: Couldn't fetch PCS for parent %@: %@
PCS identifiers for record %@ match (%{public}@), so we'll use %{public}@ as our previous protection etag
Attempted PCS data (%{public}@) had a different identifier than the server PCS data (%{public}@) for record %@. Using the server's PCS data
We couldn't deserialize the client-provided PCS and PCS data for record %@ wasn't fetched from the server because the record doesn't exist on the server. Creating new record PCS
PCS data for record %@ wasn't fetched from the server. Using the client-provided PCS data
Couldn't fetch PCS data to verify client provided protection data for record %@: %@
Got PCS data for record=%{public}@, protectionInfoTag=%{public}@
Record %@ is a parent in this save group but it has no chain PCS data yet. Creating chain PCS data
Warn: Couldn't create protection data from chain PCS for record %@: %@
Warn: Couldn't create private chaining key from chain PCS for record %@: %@
Couldn't create a chaining PCS for %@: %@
Found %lu tombstoned key(s) on record %@
Rolling record PCS master key since we cleaned up tombstoned key(s) on record %@
Using publicSharingIdentity from share %@ for record %@
Failed to prepare public sharing key for record %@: %@
Should set signing PCS for record %@
Couldn't create PCS data for record %@: %@
Warn: Couldn't get PCS data for record %@: %@
Uploading asset %@ for key "%{public}@" on record %@ and operation %{public}@
Skipping asset %@ for key "%{public}@" on record %@ and operation %{public}@
Failing save of record %@ due to error preparing asset for upload for key "%{public}@": %@
Couldn't unwrap asset key for the package manifest asset %@: %@
Couldn't unwrap asset key for asset %@: %@. Wrapping a new asset key and re-saving the asset.
Unexpected MMCSEncryptionSupportValue of 0x%x
Couldn't create an asset key: %@
Skipping unwrapping of asset key for %@ because encryption is disabled
Generating new reference signature for streaming asset %@
Generating new file signature for streaming asset %@
Record %@ has encrypted data. Wrapping that data now...
Creating bad encrypted data for the field %{public}@. Let's hope you know what you're doing!
Warn: Can't wrap a nil encrypted data for field %{public}@
Warn: Couldn't wrap encrypte data for field %{public}@: %@
Failed to encrypt mergeable delta %@, with error: %@
Skipping wrapping of encrypted data because encryption is disabled
Warn: Couldn't get a record PCS for record %@, but it has encrypted data set on it
Clearing protection data for record %@
Account with ID %@ changed with type: %@
Waiting for all account notification handlers to run
Account notification handlers are complete
Notifying clients of updated account info
Supressing account change notification while warming up
daemon/fetch-notification-changes
notification parsed without a notification ID: %@
Failed to create trust from certificates with status code: %i
Failed to evaluate trust policy with error: %@
Successfully evaluated trust policy %{public}@
tokenRegistration
Refreshing token %{public}@ for container %@ using unit test account ID %@
Refreshing token %@ for container %@
Failed to refresh token with server: %@
Removing token %@ for container %@ push bundle identifier %{public}@
Refreshing all client push tokens. Known app containers are %@
Checking push token for container tuple %@, accountID %@
Unregistering push token for %@ because it is no longer installed
NOT registering token for container tuple %@
Tossing push token for container tuple %@
Requesting token for container tuple %@, push bundle identifier %{public}@
NOT requesting token for container tuple %@
tokenRegistrationScheduler/handlePushTokenDidUpdate
Handling token %@ for container tuple %@, push bundle identifier %{public}@
Warn: Failed to register push token for %@: %@
Successfully registered push token for %@
Failed to unregister with PDS, but continuing with CKDeviceService unregistration for %@: %@
No registered token found for appContainerAccountTuple %@. Skipping token unregister.
Failed to unregister with PDS, but continuing with CKDeviceService unregistration for %@
Unregistering token for %@
Refreshing all push tokens
tokenRegistrationScheduler/handlePublicPushTokenDidUpdate
req: %{public}@, "Sending token registration for %{public}@ with token %{private}@ in aps environment %{public}@ with bundleID %{public}@"
daemon/reset-user-privacy-settings
daemon/update-missing-assets
Completed updating missing asset status
Error updating missing asset status: %@
Got a logical device scoped client proxy for %@: %@
Ignoring superfluous logical device scoped client proxy for %@: %@
Ignoring failed attempt to get logical device scoped client proxy for %@: %@
Resetting throttles in %@
daemon/fetch-public-key
Starting  <%{public}@: %p; %{public}@, %@>
Determining transcode server public key URL for hostname: %{public}@
Overriding transcode server public key URL to %@
Transcode server public key hosted at %{public}@
Error getting transcode server public key URL: %@
Checking for cached transcode server public key for public key URL %{public}@
Couldn't find cached transcode public key
Found a cached transcode key, but it has expired on %{public}@. Clearing cached value and continuing with server fetch.
Found a transcode public key %@
Fetching transcode server public key from URL %{public}@
Fetched transcode server public key %@ with error %@
Unknown protocol name %{public}@ in operation info, ignoring
Unknown selector name %{public}@ not found on protocol %@, ignoring
Unexpected live argument types "%{public}@" vs. archived argument types "%{public}@" on -[%{public}@ %{public}@], ignoring
Unexpected exception unarchiving callback, ignoring. %{public}@
volumeIndexForVolumeUUID failed: %@
volumeIndexForVolumeUUID is returning nil for volumeUUID=%{public}@
volumeUUIDWithVolumeIndex is returning nil for volumeIndex=%{public}@
Volume %@ is not mounted. Deleting all asset handles for this volume
Invalid device volume %@
open failed: %@
fcntl(F_GETPATH) failed: %@
%{public}@, path:%{public}@
fstatfs failed: %@
getattrlist failed: %@
paths don't match: %{public}@ != %{public}@ 
Failed to create dir at %{public}@: %@
%@ in %{public}@
%@ in %{public}@ and actually dropped
%@ in %{public}@ removing from sharedCache map
%@ in %{public}@ not in the sharedCache map
After clearing asset cache, still had %ld items remaining at %{public}@
----
Chunk Registry Report for %{public}@
itemID, file signature, status
%{public}@, %{public}@, %{public}@
%{public}@ not found
%{public}@ db error: %{public}@
End Chunk Registry Report for %{public}@
----
Report for %{public}@
----
itemID, file signature, status, fileStatus, lastAccess(hrs), lastAssetDbAccess(hrs), expectedSize, actualSize
%{public}@, %{public}@, %{public}@, %{public}@, %{public}@, %{public}@
End Report for %{public}@
----
%{public}@ bytes:%llu assetHandle:%@
total bytes:%llu
Can't create temp file for data(length:%lu) at %{public}@: %@
Zero-length asset with itemID %{public}@
Warn: itemID:%{public}@ error during register %@
Warn: itemID:%{public}@ modified during register %{public}@
Warn: stale chunk registry state for itemID:%{public}@  %{public}@
Warn: itemID:%llu missing asset handle
Unable to find volumeIndex for deviceID %{public}@: Deleting asset handle for %@
Unregistering %@
itemID:%llu, missing chunk count
Cache directory was unexpectedly removed. cloudd exiting to recover.
Failed moving asset from %{public}@ to %{public}@ for itemID %llu and UUID %{public}@: %@
Moved asset from %{public}@ to %{public}@ for itemID %llu and UUID %{public}@
Asset handles span multiple volumnes
Reusing assetHandle %@
Cleaning up old assetHandle %@ because it did not match %@: %{public}@
Failed to start tracking asset handles %@: %@
Started tracking register/put asset handles %@
Look at assetHandle %@
Started tracking get asset handles %@
Stopping tracking asset handles for itemIDs %{public}@
Failed to stop tracking asset files with itemID %{public}@: %{public}@
Found asset handle with itemID:%llu %@
Unable to find asset handle with itemID:%llu
Asset handle with itemID:%llu is deferred to be deleted.
Attempt to find asset by path that is not parsable %{public}@
Attempt to find asset by path that is not in the asset cache fileDownloadPath %{public}@ vs. %{public}@
Not scheduling redundant downloads eviction for %{public}@
Scheduling downloads eviction for %{public}@
Scheduled downloads eviction cancelled for %{public}@
Completed unregister for evicted downloads for %{public}@
%@ %@
%s %llu files (%llu bytes) at %{public}@
%{public}@ %@
Ignoring file in cache %{public}@
%s %llu files (%llu bytes) at %{public}@ (forced:%{public}@, gracePeriod:%lu, gracePeriodOnHighWatermark:%lu)
%s file %@ (size:%llu) with no associated asset handle
%s file %@ for asset with itemID %llu and UUID %{public}@ (size:%llu)
Failed removing cached asset file at %{public}@: %@
%s %llu/%llu files (%llu/%llu bytes) at %{public}@
Removing registered asset handle for %@
Attempting to evict asset handle in wrong state %@
Expired %lu asset handles for %{public}@ with lastUsedTime before "%@"
In-flight asset handles marked as interrupted during un/registering:%llu upload:%llu download:%llu item unregistred:%llu
set already contained object %@
Warn: No completion block was set for the fetch of record %@
daemon/record-fetch-aggregator
Performing callback for fetch info %@
Done flushing record callbacks for <%{public}@: %p; %{public}@>. Current highest callback is %lu
Sending fetch requests for <%{public}@: %p; %{public}@>
Fetching the following record IDs from the server for operation <%{public}@: %p; %{public}@>: %@
Running the following full records through a fetch records operation for <%{public}@: %p; %{public}@>: %@
Record fetcher <%{public}@: %p; %{public}@> fetched a record with ID %@.%{public}@%@
Fetch records operation %p completed for <%{public}@: %p; %{public}@>
Starting fetch records operation %p for <%{public}@: %p; %{public}@>
Parent asked record fetch aggregator operation <%{public}@: %p; %{public}@> to finish before it started
Starting record fetch aggregator operation <%{public}@: %p; %{public}@>
Enqueuing a record fetch for record %@
Found record %@ in the cache, but it needs decryption.  Going through the fetch flow.
Found record %@ in the cache. Returning that record
Fetch aggregator %p in %{public}@
Finishing fetch aggregator <%{public}@: %p; %{public}@>
Fetch aggregator <%{public}@: %p; %{public}@> finished
Connection %{public}@ invalidated due to inactivity
Connection %{public}@ invalidation skipped due to keepAlive=%lu
Connection timeout overridden to %llu
Connection %{public}@ keep alive counter initialized to %lu
Connection %{public}@ keep alive counter incremented to %lu
Connection %{public}@ keep alive counter decremented to %lu
Unbalanced -allowToClose ignored. Connection=%{public}@
Client Proxy "%@" is not entitled to use fake entitlements.
Connection %@ has invalid client entitlements.
Connection %@ is not allowed to use the system cloudd.
The application on the other end of %@ is trying to use a custom account but it doesn't have the right entitlement. Denying connection.
Giving %@ access to container because it's a data repair proxy
Connection "%@" specified bundle identifier override '%{public}@', but it has no prefix entitlement
Allowing %@ to override bundle identifier '%{public}@' due to matching prefix
Connection "%@" specified bundle identifier override '%{public}@', but it didn't match the prefix
Connection %@ is not entitled to use CloudKit
Connection from %{public}@ not active. Device is not past buddy and it lacks the entitlement to bypass.
Connection from %{public}@ not active yet because device hasn't been unlocked since boot.
Connection from client %{public}@ is now active
Couldn't get connection to client
daemon/fetch-web-auth-token
Fetch web auth token operation <%{public}@: %p; %{public}@, %@> is starting
Fetched web auth token (%@) with response code %ld
Fetch web auth token operation <%{public}@: %p; %{public}@> finished with error %@
Creating MMCS engine at %{public}@
Error creating MMCS directory at %{public}@: %@
Failed creating MMCS engine at %{public}@
Destroying MMCS engine %@
Found a cached engine context %@
Removing context %@ for path %{public}@ from sharedContextsByPath
context %@ not in sharedContextsByPath %@ for key %{public}@
Cancelling requests for MMCS engine wrapper %@ and context %@
Did cancel for MMCS engine wrapper %@ to cancel the requests for %@
Waiting for MMCS engine wrapper %@ to cancel the requests for %@
Attempted to stop tracking untracked itemID %llu
Created a readerWriter for itemID:%llu error: %@
Failed to get the item readerWriter for itemID:%llu error: %@
CKDMMCSItemGroupContext
ignoring item with zero itemID in _stopTrackingMMCSItems %@
setting up a package section? %@
Zero-length asset with itemID %@
Invalid mmcs operation type %ld
The group is already complete: %@
Completed MMCS item group %@ with error: %@
Completed MMCS item group %@
Error: %@
Can't find MMCS item for itemID %llu
Chunk count %{public}@ and file size %{public}@ inconsistent
Progress of MMCS item %llu: s:%d p:%0.4f error:%@
Progress of MMCS item %llu: s:%d p:%0.4f
Progress of MMCS package section %{public}@: s:%d p:%0.2f error:%@
Progress of MMCS package section %{public}@: s:%d p:%0.2f
Finished getting MMCS item %@
Error completing MMCS item %@ : %@
Error putting MMCS item %@
Finished putting MMCS item %@ and asset %@
Finished putting MMCS item %@
Unregistering item without an asset handle for itemID=%llu
Cannot find deviceID for asset handle. Deferring deletion of %@
Failed to open %@ for operationID:%{public}@: %@
Scheduling delete for the asset handle with itemID:%llu, UUID:%{public}@
invalidate, reader:%p
daemon/serialize-record-modifications
Packaging SaveRecord (%lu records)
Internal error transforming record %@
Error translating CKMergerableDeltas during serialization: %@
Found and packaged AssociatedMergeableDeltas (%lu deltas)
Packaging DeleteRecordID (%lu recordIDs)
Total serialization of %lu bytes
Error converting CKDApplicationID to JSON: %@
Error converting JSON data to CKDApplicationID: %@
daemon/batch-get-user-privacy-settings
====
=====
======
=======
HEY DUMMY LOOK AT THIS LOG MESSAGE
You need to sign in to the account "%@" in settings, probably to accept some dumb T&Cs. Error: %@
=======
======
=====
====
Fetching account info for fake account with email %@
Initialized fake account with email %@ and dsid %@
Initialized fake AppleAccount for email %@ / dsid %@ lacked a cloudKit auth token
Error initializing fake account with email %@: %@
Unexpectedly found nil for SEL %@ in protocol named %@
daemon/ckcode-function-invoke
Coalescing identical request record: %@
Trying to save two RecordTransports for the same record: recordA=%@ recordB=%@
Not preparing for PCC because we have a base URL
Skipping PCC attestation because we were asked to
About to fetch public key for trusted target encryption
Failed to fetch public key from trusted target: %@
Adopter set shouldSendRecordPCSKeys. Checking if we should actually do that.
Will check server configuration to see if we should send the record keys
Error fetching configuration to check if we should send record keys: %@
Always sending record keys for internal installs
Overriding allowSendingRecordPCSKeys = %d
Setting shouldSendRecordPCSKeys = %d
About to fetch PCS data for secure compute operation
We lost ourself trying to fetch PCS to get record keys for secure compute
Error fetching PCS data in secure compute operation for %@: %@
No error, but also no PCS data during secure compute operation for record %@
Setting master key on secure compute operation for %@
Couldn't get master key in secure compute operation for %@
Error %@ when invoking function
Error %@
Function invocation completed
CKCode Function invocation finished%{public}@%@
Invoking CKCode function
CKCode Local Function invocation finished%{public}@%@
Starting CKCode function invoke operation <%{public}@: %p; %{public}@, %@>
Couldn't generate URL from entitlement string %{public}@
Un-entitled client is not allowed to set explicit code operation url of %{public}@
Couldn't read the package manifest at %{public}@
Found empty package %@
Read section with index %ld, size %lld, signature %@
Read %ld sections from manifest for package %@
Read item with index %ld, section index %ld, section offset %llu, size %lld, signature %@
Read %ld items (%llu bytes) from manifest for package %@
Wrote package section with size:%lld, signature:%@
Wrote %ld sections to manifest for package %@
Wrote package item with size:%lld, signature:%@
Wrote %ld items (%llu bytes) to manifest for package %@
Placeholder op %{public}@ starting
Placeholder op %{public}@ was cancelled - finishing the real operation
Placeholder op %{public}@ finished
System is unavailable. Scheduling operation %{public}@ on suspended operation queue %@
Adding operation %{public}@ to target queue (%lu/%ld in queue)
Placeholder op %{public}@ canceling
daemon/fetch-record-zone-pcs-diagnostics
Fetched record zone %@ (id %@) with response code %ld
Fetch record zone PCS diagnostics operation <%{public}@: %p; %{public}@, %@> is starting
Fetch record zone PCS diagnostics operation <%{public}@: %p; %{public}@> finished with error %@
Switch environment changed to '%{public}@'
Switch preferences changed. Reloading our configuration
Fetching Global Configuration for operation %p
Waiting on global configuration operation %p for operation %p
Waited on outstanding global configuration operation %p for operation %p
Got an error from CKDContainerSpecificInfoOperation: %@
Set in-memory container specific info from op result: %@
Forcing a fetch of the global config
Fetched global configuration from metadata cache: %@
Finished fetching global config on behalf of operation %p
Set container info from cached metadata: %@
No in-memory containerSpecificInfo, going to the server
Fetching container info for container %@ gave success %d error %@
Warn: Dropping all config bags and forcing a re-fetch of our config.
Could not get app site association data for hostname %@
Registering valid app site association data with LS: %@
Registration for app site association data completed with success: %@%@%@
Found ineligible or unchanged app site association data, not registering with LS: %@
Expiring configuration for %@
daemon/aggregate-zone-pcs
Fetching PCS data for %ld zones
Fetched pcs info for zone %@
Warn: Couldn't fetch PCS data for zone %@: %@
Warn: Error preparing target zone PCS: %@
Target zone %@ was successfully saved to the server
Received a PCS oplock failure for save of zone %@. Re-fetching the zone PCS and trying again
Failed to save target zone for operation %{public}@ despite synchronizing user key registry. procName=%{public}@, containerID=%{public}@
req: %{public}@, "Inlining fake response operation result for item id %@"
req: %{public}@, "Received no public key when discovering user identity, though it was requested, this is an OON case"
req: %{public}@, "OON user identity detected: %@"
req: %{public}@, "Node level failure for info %@: %@"
req: %{public}@, "Fetched configuration plist from server: %{public}@"
An existing invalidated proxy operation was found for operation %{public}@: %@. Unregistering that operation and setting %@ as the new delegate
Couldn't find metadata for operation %{public}@
Not returning operation %{public}@ as resumable since it has a delegate
Operation info entry is corrupted: %@
Unexpected operation info result: %@
Removing all cached long-lived operation info for account ID %@
Couldn't find an operation with ID %{public}@ to set the result
Registering retry number %d for operation %{public}@
Not registering a retry for operation %{public}@ since we have an interested delegate
Couldn't find an operation with ID %{public}@ to register a retry
operationInfoCacheEviction
daemon/global-configuration
Error fetching configuration from the server: %@
Fetched configuration from the server: %@
Stalling Global Config Operation, you asked for it
Error fetching archived records in zone %{public}@: %{public}@
Record PCS fetch operation %{public}@ received PCS data (%{public}@/%{public}@)%{public}@%@
Record PCS fetch operation %{public}@ already has PCS data %@. Ignoring the fetch callback with %@/%@
Fetching PCS data for record %@ from the database
PCS data was found in the database, but it didn't have the requested chain PCS. Fetching PCS data from the server for record %@.
PCS data was fetched from the database for record %@
No PCS data was found in the database for record %@
Error fetching PCS data from the server: %@
PCS data from server for %@ has no PCS chaining blob. Creating it and saving the record to the server
Got an error trying to save parent chain PCS data: %@
Successfully saved chain PCS data on record %@
Warn: We don't have a zone ID in our PCS data for record %@. Using the record's zone ID instead
Fetching PCS for zone %@ in order to decrypt record %@
Fetching parent PCS from record %@ for child record %@
Assuming %@ is a share since we have no share or parent ID set
Fetching PCS for share %@ in order to decrypt record %@
Record %@ is in shared zone %@. Using zone PCS data to decrypt it.
All PCS fetches for shared record %@ have finished.
Record has a zoneish public key set, but we didn't fetch a zoneish PCS on this zone. We'll try decrypting the record PCS anyway, but this might fail.
Attempting a decrypt of record %@ via its parent PCS (record %@)
Attempting a decrypt of record %@ via its share PCS (record %@)
Attempting a decrypt of record %@ via its shared zone PCS (zone %@)
Error decrypting chain PCS on record %@: %@
Successfully decrypted chain PCS data on record %@
Didn't get any chain PCS data on record %@, but the client requested it. This might be ok since the client might want to create it
Error decrypting public sharing key on record %@: %@
Successfully decrypted public sharing key on record %@
Bundle ID %@ doesn't belong to an extension: %@
%@, cachesPath:%@
Identified anonymous zone through CKDPZoneRetrieveChangesResponseChangedZone with anonymousZoneInfoID: %@.
Calling back to the anonymousShareProcessingBlock with %lu anonymous zone data objects.
Starting lookup for request %@
req: %{public}@, "Couldn't parse object %@"
Not caching user identity without a public sharing key: %@
Caching PILS entry for "%@" in %@
Returning a fake empty response for participant "%@". You asked for it!
Found lookup info key %@ in cache, injected it into cached identity %@. Public key is %{public}@/%lu
Found no PILS cache entry for "%@" in %@
Executing chained batched requests, triggering %@
Fetching public identities failed: %@
Fetching public identities completed
Starting execution of batched requests, triggering %@
Creating request to fetch public identity for %lu infos (batch size is %lu)
Forcing OON private key generation due to unit test
Got OON user identity %@
Generated private key for OON user identity: %@
Error while generating private key for OON user identity: %@
Saving user identity %@ with publicSharingKey %{public}@
Failed to perform a user identity lookup for lookup info %@: %@
Error while creating identity: %@
Created OON PCS identity %@
Error while extracting private key from identity: %@
Completed request: %@
daemon/break-assets
Retrying markAssetsBroken on <%{public}@: %p; %{public}@> after error %@
Simulate asset corruption operation <%{public}@: %p; %{public}@> could not fetch record with error %@
Simulate asset corruption operation <%{public}@: %p; %{public}@> completed fetch record with error %@
Simulate asset corruption operation <%{public}@: %p; %{public}@> completed fetch record
Simulate asset corruption operation <%{public}@: %p; %{public}@> could not fetch repair zone with error %@
Simulate asset corruption operation <%{public}@: %p; %{public}@> completed repair zone fetch with error %@
Simulate asset corruption operation <%{public}@: %p; %{public}@> completed repair zone fetch
Simulate asset corruption operation <%{public}@: %p; %{public}@> could not save repair zone with error %@
Simulate asset corruption operation <%{public}@: %p; %{public}@> completed repair zone touch with error %@
Simulate asset corruption operation <%{public}@: %p; %{public}@> completed repair zone touch
Simulate asset corruption operation <%{public}@: %p; %{public}@> could not upload corrupted asset with error %@
Simulate asset corruption operation <%{public}@: %p; %{public}@> completed uploading corrupted asset with error %@
Simulate asset corruption operation <%{public}@: %p; %{public}@> completed corrupted asset upload
Could not find asset or package in field %{public}@ and index %ld of record %@
Marked asset broken with response code %ld
Error breaking asset: %@
Completed marking asset broken
daemon/break-assets-url-request-wrapper
Couldn't generate a request signature with signing identity %{public}@ because we got an error from PCS: %@
Failed to convert share: %@
Fetched record %{public}@ (record: %{public}@). %{public}@%@
Fetching changes from the server for %lu zones with options:
Batch Record Fetch request <%{public}@: %p; %{public}@> for operation %{public}@ finished with error %@
We're not done here. Sending another fetch changes request for %lu zones with options:
Batched Record fetches finished%{public}@%@
daemon/fetch-record-changes
Warn: Zone %@ wasn't found on the server for fetch changes request %{public}@. Wiping caches for that zone
Fetching changes from the server for %lu zone%{public}@ with options:
Ignoring initial metasync token in shared db from adopter using anonymous-to-server share participants for operation %@
Not returning metasync token in shared db to adopter using anonymous-to-server share participants for operation %@
daemon/fetch-changed-record-zones
Fetching database changes from the server with change token %{public}@
Fetch database changes request <%{public}@: %p; %{public}@> for operation %{public}@ finished with error %@
We're not done here. Sending another fetch request with change token %{public}@
We're not done here. Sending another fetch request with change token %@
Handling encrypted anonymous share processing for: %lu number of anonymous zone data objects
Override FailAnonymousShareDecryption: Finishing daemon operation %{public}@ due to client-returned error %@
Handling encrypted anonymous share processing for: %@
daemon/fetch-records
Invalid desired key %{public}@, which should have been caught earlier
Ignoring key-rolling error for record %@: %@
Fetch records url request completed. Waiting for all record callbacks to finish before completing request <%{public}@: %p; %{public}@>
All record callbacks are complete. Finishing request %{public}@
Fetched records for <%{public}@: %p; %{public}@>
Failed to fetch records for <%{public}@: %p; %{public}@>: %@
All record callbacks are complete. Finishing fetch operation
All record callbacks are complete. Finishing decrypt operation if any.
Could not find original list key %{public}@ for desired indexed list key %{public}@
Original list key %{public}@ has incorrect value type %{public}@ for desired indexed list key %{public}@
Couldn't decrypt record %@: %@
Failed to decrypt a record from our cache. Refetching record %@ from the server and trying again
Failed to fetch PCS to decrypt mergeable value delta record %@: %@
Fetched record %{public}@, etag-matched:%{public}@, responseCode:%d
Record not found in private DB. Setting PCS data nil on caches
Remote record matches local record etag. Returning record %{public}@ from cache.
Calling completion block for nil or failed record with ID %@: %@
Prepping PCS data for share %@ with container %@
Didn't get a sharing identity from the public PCS for share %@
Using cached asset for signature %@, record %@, recordKey %{public}@ and operation %{public}@
Prepared asset %@ for record %@, recordKey %{public}@ and operation %{public}@
Using cached package %@ for record %@, recordKey %{public}@ and operation %{public}@
Prepared package %@ for record %@, recordKey %{public}@ and operation %{public}@
Preparing assets for download for record %@ and operation %{public}@ (shouldFetchAssetContent:%{public}@ inMemory:%{public}@)
Forcing asset fetch due to presence of asset-backed mergeable deltas
Forcing asset download for asset-backed mergeable field %{public}@ on record %@
Skipping asset download for key %{public}@ on record %@
Will fetch asset content in memory for key %{public}@ on record %@
Adding mergeable value download tasks for record %@ in operation %{public}@
Will download mergeable value for mergeable %@ for key '%@' on record %@ in operation %{public}@
Failed to download assets for operation %{public}@: %@
Downloaded assets for operation %{public}@
No cloud certs to download for operation %{public}@
No assets to download for operation %{public}@
Downloading assets: %@, in-memory assets: %@, and publish assets %@ for operation %{public}@
Failed to download asset %@ for record %@ and operation %{public}@: %@
Downloaded asset %@ for record %@ and operation %{public}@
Failed to fill out download URL info %@ for record %@ and operation %{public}@: %@
Filled out URL info %@ for record %@ and operation %{public}@
No mergeable values to download for operation %{public}@
Will download mergeable values for operation %{public}@
Error fetching mergeable delta %@: %@
No mergeable value task for fetched deltas for %@: %@
Fetched deltas for mergeable %@: %@
Finished mergeable delta fetch operation for %{public}@
No mergeable value delta on download task for %@ in operation %{public}@
Starting fetch records operation <%{public}@: %p; %{public}@, %@>
Operation %{public}@ is finishing early because there are no records to fetch
Fetch user record url request completed. Waiting for all record callbacks to finish before completing request <%{public}@: %p; %{public}@>
Operation %{public}@ has a decrypted PCS blob for %{public}@ %@.
Not fetching PCS data for %{public}@ %@ from the network because a local only fetch was requested
Failed to fetch PCS data from the server for %{public}@ %@: %@
%{public}@ PCS fetch operation %{public}@ has failed too many times. Giving up with error %@
Retrying PCS fetch operation %{public}@ after failure %d with error %@, dependent PCS fetch error %@
daemon/archive-records
Record with ID %@ was successfully archived
Error archiving record with ID %@: %{public}@
Starting archive records operation %{public}@ for record IDs %@
Archive records request %{public}@ is complete
daemon/mark-notifications-read
Notification with id %@ was marked read
Error %@ when marking notification with id %@ as read
daemon/fetch-share-participant-key
Returning participant key for share %@
Returning error for share %@: %@
Couldn't get a short token for share %@
Verifying decryption of the invited PCS using the exported per-participant PCS key
Couldn't create a participant identity from the exported per participant key
Successfully decrypted the share invited PCS: %@
Using base token "%{public}@" on share %@
Share %@ needs to be updated on the server so that it gets a PPPCS for the owner
No shares to fetch from the server. Returning early
Fetching %lu shares from the server for operation %{public}@
Fetch share participant key operation %{public}@ finished%{public}@%@
Error updating share %@ on the server: %@
All shares have been updated on the server
SecItemCopyMatching() failed: %ld
SecItemAdd()/SecItemUpdate() failed: %ld
SecItemDelete() for device identifier failed: %ld
Fetched deviceID from keychain
daemon/modify-records
Records needed PCS info re-fetched: %@
Fetching user public keys for operation %{public}@
Error fetching current service public keys for user: %@
Fetched %lu user public key%{public}@ for operation %{public}@
Fetching container scoped user identifier for operation %{public}@
Error fetching container scoped user identifier for operation %{public}@: %@
Fetched container scoped user identifier for operation %{public}@: %@
Skipping topo sort of all zones for container %{public}@
Fetching participants for shares: %@
Warn: Got a fetched share callback without a recordID: %@
Skipping fetch of share PCS data for %@ because encryption is disabled
Skipping fetch of record PCS data for %@ because encryption is disabled
re-referenced asset signature not found in source asset array
Error preparing assets for handler %@: %@
Fetching user boundary key for operation %{public}@
Error fetching user boundary key for operation %{public}@: %@
Fetched user boundary key for operation %{public}@: %@
Uploading assets for operation %{public}@: %@
Setting boundary key %{public}@ for operation %{public}@ on (at most) %lu assets to upload.
Failed to upload asset %@ for record %@ and operation %{public}@: %@
Failed to upload assets for operation %{public}@: %@
Of %lu potential v2 assets, set boundary keys on %d of them
Skipping saving records for operation %{public}@ after uploading assets: %@
Will skip zone %@ because handler isn't ready:
Skipping zone %@ because some items in that zone aren't ready to be uploaded yet
Record does have signing PCS %@ but failed to get private key
Failed to decrypt record with ID %@: %@.
Failed to decrypt record with ID %@: %@
Marking record %@ for another retry after fetching PCS data
Failing save of record %@ because we couldn't decrypt it
Verifying encrypted data on record %@ before uploading it
Sending %ld records to the record decrypt operation before uploading them to the server
Successfully decrypted record %@. Continuing with save of that record
Decrypting server record %@ returned from save
Failed to decrypt server record %@. Returning as is.
Successfully decrypted server record from save %@
Got a response for record with ID %@, but we didn't try to put that record.
Record %@ was successfully saved to the server
Error when saving record %@ to the server: %@
Record %@ was successfully deleted from the server
Possible anonymous share deleted. Removing share from anonymous share list: %@
Error %@ when deleting record %@ from the server
No record on modify handler for mergeable delta save for key %@ on record %@
No value on record after successful mergeable delta save
Value in record for key '%@' is not a mergeable record value: %@
Finished saving mergeable delta for key %@ on record %@
Error syncing mergeable delta for key %@ on record %@: %@
Not overwriting existing error for modify records handler
No record on modify handler for mergeable delta replacement for key %@ on record %@
Modify operation %{public}@ successfully replaced deltas for request: %@
Modify operation %{public}@ failed to replace deltas with error: %@
Skipping record save for purely mergeable record without any deltas to save: %@
Skipping record upload for purely mergeable record: %@
Record %@ isn't ready, so we're going to skip the record upload phase.
Saving %d records to the server with change token %@
Deleting %d records from the server.
No records to save or delete. Skipping sending a request to the server.
Some records failed to prepare for this save. Skipping save to the server and retrying if possible
Not sending a modify request to the server
Not uploading mergeable deltas separately
No mergeable deltas or replacements for operation %{public}@
Uploading mergeable deltas for operation %{public}@: %@
No modify handler for delta: %@
Failed to upload delta, %@, for operation %{public}@: %@
No modify handler for replacement request: %@
Failed to replace deltas %@ for operation %{public}@: %@
Successfully replaced deltas: %@
Failed to upload delta for operation %{public}@: %@
Ensuring all handlers have completed for operation %{public}@
Operation %{public}@ tried to finish without an error but it has outstanding handlers
Pretending this is an invalid sandbox path: %{public}@
Share PCS fetch operation %{public}@ received PCS data (%{public}@)%{public}@%@
Share PCS fetch operation %{public}@ already has PCS data %@. Ignoring the fetch callback with %@/%@
Fetching PCS data for share %@ from the database
PCS data was fetched from the database for share %@
Couldn't decrypt PCS data for share %@ from the database with error %@. Ignoring it and re-fetching from the server
No PCS data was found in the database for share %@
daemon/fetch-record-versions
Fetched %ld versions for record with ID %{public}@ (is deleted: %{public}@)
Couldn't decrypt data for record version %@: %@
Failed to fetch versions for record %@: %@
Fetch record versions operation <%{public}@: %p; %{public}@> finished with error %@
Error creating PDSRegistrar: %@
Error getting current registrations: %@
Can't register an incomplete container %@, skipping
Can't register tuple %@ missing push bundle identifier %{public}@ and/or containerID %@
Not registering push via PDS, it requires a logged-in iCloud account, and this container is using a not-logged-in account
Can't register a push token for an account id (%@) without a dsid
Not adding registration to PDS, as PDS is already aware of %@
Unable to add registration to PDS: %@ %@
Added registration to PDS: %@
Unable to iterate active users: %@
Removing orphaned PDSUser for unknown user %@
Unable to remove all registrations for user %@: %@
Unable to remove registration from PDS: %@ %@
Removed registration from PDS: %@
Not removing registration from PDS, as PDS is not aware of %@
Can't unregister a push token for an account id (%@) without a dsid
Skipping token unregistration for account %@, which has no dsid
Unable to remove all registrations from PDS: %@
Removed all registrations for account %@ from PDS
Removing all tokens from PDS
No mergeableDeltaMetadataRetrieveResponse for mergeableDeltaMetadataRetrieveRequest in request UUID %@
req: %{public}@, "Received response for value %@ metadataCount=%ld continuation=%@"
Error parsing delta metadata: %@
req: %{public}@, "Node failure in list metadatas request: %@"
No value ID for list metadatas node failure response
ManagedConfiguration is restricting account access
TCC rejected a token for bundleID:%@, container:%@
Got data separated volume container path %s from containermanager
Error getting data separated volume container path from containermanager: %llu
Unregistering: %s xpc activity
server public key: %@
shared info: %@
additional auth data %@ (%@)
Performed phone number canonicalization: %@ -> %@ (raw was %@)
Registering: %s xpc activity with criteria: %{public}@
%s xpc activity state: check in. criteria: %@
%s xpc activity state: run.
Couldn't set activity state to DONE
req: %{public}@, "Failed to get record ID for mergeable delta change %@"
req: %{public}@, "Failed to get record type for mergeable delta change %@"
req: %{public}@, "Failed to get record field key for %@"
req: %{public}@, "Failed to get location name from mergeable delta change %@"
req: %{public}@, "Failed to get value ID for mergeable delta change: %@"
req: %{public}@, "Failed to load delta when fetching changes: %@"
req: %{public}@, "Received mergeable delta: %@"
Error fetching changes in zone %{public}@: %{public}@
CKDBackingAccount must be subclassed
Error getting cloudKitAuthToken: %@
Error getting iCloudAuthToken: %@
It has been %f since suspended account %@ last renewal date %@. Can%@ renew credentials
Re-fetching our auth token
Renew result was %{public}@. error=%@
Can't renew auth token because we don't have an account or an account store
Got vetting auth completion, error: %@, results: %@
Couldn't create url from dataclass %{public}@ with properties %{public}@
Couldn't get sharing URL host from properties %{public}@. Falling back to legacy hostname.
Using device count override (%d)
Getting device count for account %@
Returning unknown device count for newly signed-in account
Using cached device count %ld from last fetch date %{public}@
Error saving device count: %@
Saved device count
Fetching device list for account: %@
Error fetching device list: %@
Wrong response type %{public}@ when fetching devices
Fetched device list with %ld devices
Failed to create the throttle table: %{public}@
Failed to fetch the throttle list: %{public}@
Failed to delete throttle: %{public}@
CKThrottle count at startup: %lu
Failed to save new throttle: %{public}@
Failed to save throttle changes: %{public}@
Updated the connection pool limit (%d) for "%{public}@"
Error creating mergeable delta proto for replacement request: %@
No mergeableDeltaReplaceResponse for mergeableDeltaReplaceRequest in request UUID %@
req: %{public}@, "Received response for request %@"
req: %{public}@, "Node failure in replace deltas request: %@"
daemon/fetch-record-zones
Failed to save zone %@ to the server %ld times with error %@
Failed to save %lu zones for operation %{public}@ despite synchronizing user key registry.
Couldn't create zone PCS from data: %@
Updating identity on zone PCS for zone %@
Failed to remove server provided invited key %{public}@ from zone: %@
Couldn't update identity on zone PCS for zone %@: %@
Skipping zone PCS key roll for zone because the server doesn't allow it right now %@
Warn: Couldn't export protection data for decrypting with Reminders identity: %@
Reminders zone %@ needs to be rolled for the Reminders identity
Couldn't roll Reminders identity on zone PCS for zone %@: %@
Skipping Reminders key roll for zone %@ because the server doesn't allow it right now
Couldn't decrypt zone %@ with Reminders identity: %@
Updating zoneish PCS on zone %@
Couldn't roll master key for zoneish PCS: %@
Skipping zoneish PCS key roll for zone because the server doesn't allow it right now %@
Updating zone PCS for zone %@
Couldn't add our updated service identity to zone PCS: %@
Adding Reminders specific identity for Reminders zone %@
Couldn't add Reminders specific identity for Reminders zone PCS: %@
Couldn't create a PCS etag for zone %@: %@
Saved updated zone %@%{public}@%@
Saving the following zones with updated zone PCS to the server:
useAnonymousToServerShareParticipants is not enabled
Error handling zone PCS for zone %@: %@
Fetch record zones operation <%{public}@: %p; %{public}@> is starting
Fetch record zones operation <%{public}@: %p; %{public}@> hit top-level error %@
Fetch record zones operation <%{public}@: %p; %{public}@> finished with error %@
Preflighting current service identities for zone fetch operation %{public}@
Couldn't preflight PCS identities for the current service. Failing zone fetches for operation %{public}@
Preflighting Reminders service identities for zone fetch operation %{public}@
Couldn't preflight PCS identities for the Reminders service. Failing zone fetches for operation %{public}@
Unauthorized client (%{public}@) is trying to use clear asset encryption in container (%{public}@)
daemon/db-operation
Found multiple matching PCS cache database entries. Removing them.
Failed to create PCS cache database for containerID %@
Decrypt of record %@ is complete
daemon/decrypt-records
EnQueuing decryption for record %@
Record %@ was decrypted%{public}@%@
Clearing protection data for record %@ and retrying decryption
Decryption has failed for record %@ too many times. Giving up
We need to decrypt properties on record %@. Fetching PCS data for that record
Suppressing error for record %@ because no protection data was found on the record while forcing decryption and it has no properties requiring decryption
Record %@ has items that require encryption but no protection data was found on the record
Encryption is disabled, so we're only going to pretend to unwrap the data on record %@. You asked for it!
Couldn't create a sharing identity from sharing identity data: %@
Setting CKRecordPCS on record %@: %@
Got PCS data from fetched share %@%{public}@%@
Couldn't get a PCS for our current share %@
Fetched zone PCS data. Record %p recordID %@ zoneID %@ zone PCS etag %{public}@%@
Couldn't fetch a PCS for zone %@
Couldn't get a zoneish PCS for zone %@. We'll try the record PCS if it exists, just in case.
Couldn't fetch a PCS for zone %@%{public}@
Couldn't create record PCS for record %@: %@
Couldn't create record PCS for record %@ from share: %@
Couldn't create record PCS for record %@ from parent PCS: %@
Fetched share PCS data. Record %p recordID %@ shareID %@ share PCS etag %{public}@%@
Couldn't fetch a PCS for share %@
Fetched parent PCS data from record %@ for record %@
Couldn't fetch a PCS for parent record %@
Fetching PCS data. Record %p recordID %@ zoneID %@
Couldn't get a PCS object for record %@
Couldn't get a PCS object for the record %@
Record %@ is unable to decrypt its mutableEncryptedPSK.  Dropping the value
Decrypt operation %{public}@ in %{public}@
Decrypt operation %{public}@ is finishing. Waiting for all records to finish decrypting in case it never started
Finishing decrypt records operation %{public}@
Decrypt operation %{public}@ is finishing. Waiting for all records to finish decrypting first...
All records have been decrypted for operation %{public}@
Record decrypt operation %{public}@ was asked to finish before it started
Starting decrypt records operation %{public}@
CKDContainer missing for CKEventMetric %@
Failed to fetch server configuration for CKEventMetric %@. %@
Failed to set options for CKEventMetric %@
daemon/container-specific-info
Error fetching database URL from the server: %@
Fetched database URLS from the server: %@
Expected MergeableDeltaRetrieveResponse for MergeableDeltaRetrieveRequest
Failed to load fetched delta for mergeable %@: %@
Node failure in atom sync request %@: %@
%{public}@ searching for eligible existing pcsCache
%{public}@ found existing pcsCache %{public}@
failed to create database: %@
daemon/upload-assets
We don't have a DSID so we can't copy our current PCS identity
Can't copy identity for service %{public}@. Manatee not available for current account due to %@.
Current dsid: %@. Cached identities dsid: %@. The dsid has changed underneath us and we didn't clear our identity cache. Clearing cache and failing identity request
Returning cached identity for service %{public}@ and %@ account %@
Caching a fresh %lld-type identity for service %{public}@.
Identity set %@ does not have a current key set. Not using it and removing it from cache.
Using service identity:
Didn't get a service identity from the PCS framework
Warn: Couldn't add liverpool identity to app-specific identity: %@
Couldn't get an identity for service %{public}@ from the PCS framework: %@
Got identity from the PCS framework %@
Failed to get full identity set: %@.
Can't create a diversified identity with no server entropy
Warn: Couldn't get a %{public}@ identity set: %@
Warn: Couldn't get a %{public}@ identity: %@
Warn: Couldn't create a diversified %{public}@ identity: %@
Warn: Did not get any public keys for service %{public}@.
Current identity public key data is %{public}@
Warn: Error generating fingerprint for current self identity: %@
Couldn't create a new identity set: %@
Fetching PCS identity set for account %@
Error fetching PCS identity set: %@
PCS identity set fetched:
service: %{public}@ <%{public}@>
Error fetching iCloud auth token for account %@: %@
Error setting up PCS identity set: %@
Error unarchiving a mock PCS service identity: %@
No pre-existing stingray identity for service %@ on account %@.  That's unexpected.  Filling one out
Error copying per-silo identities: %@
Refusing to try to create a sharing identity from a nil public key
Couldn't create a sharing identity from public key %{public}@: %@
Created sharing identity %@ from public key %{public}@
Couldn't create a new sharing identity: %@
Created sharing identity %@
Refusing to try to create data from a NULL sharing identity
Couldn't create data from sharing identity %@: %@
Created data from sharing identity %@: %@
Refusing to try to create a sharing identity from nil data
Couldn't create a sharing identity from data %@: %@
Created sharing identity %@ from data %@
Forcing error from security when validating the identity
Identity set %@ was expected to have a current key set %{public}@. %@
There's an iCloud account without a CloudKit Child Account. Ignoring it. %p: %@
Failed to update account properties, error %@
Failed to save verified account, error %@
CallbackRelayOperation %{public}@ was cancelled before starting
daemon/get-user-privacy-settings
Found user privacy settings %@
daemon/accept-shares
Share with URL %@ was successfully accepted
Warn: Couldn't prep PCS data %@: %@
PCS oplock failure for share with url %@.
Error accepting share with URL %@: %{public}@
Could not generate anonymous CK userID to accept share %@. Failing to accept share.
Share does not have the signingPCS to generate a signature. Failing to accept share %@.
Couldn't get a private identity from the signingPCS %@ to generate a signature. Failing to accept share %@.
No shares to accept
Error accepting shares: %@
Couldn't pull pcsData off fetched share, re-fetching: %@
Fetched share's PCS data lacked publicPCS, re-fetching
Warn: Couldn't create share PCS data while accepting metadata: %@
Fetching shares for already accepted share IDs: %@
Accepted share %@ fetched for URL %@
Warn: Error while fetching accepted shares: %@
All accepted shares were fetched successfully
Couldn't get a diversified %{public}@ identity to the public PCS for share at URL %@: %@
Couldn't add our %{public}@ identity to the public PCS for share at URL %@: %@
Decrypting the per-participant PCS for calling participant %@
Error decrypting the invited PCS on share %@: %@
Create protection info in OON key-swap for participantID: %@, recordID: %@
Share at URL %@ has already been accepted. Fetching the share instead of re-accepting it
Adding ourselves to the public PCS for share %@
Updated share public PCS for share at URL %@ is %@
Couldn't decrypt invited PCS blob for share %@
We were able to decrypt the private PCS for share %@
Failing to accept manatee share with URL %@ since we were not given a sharing invitation blob by the client
Failing to accept share with URL %@ since we are ineligible to accept as role %{public}@
Failed to accept share with URL %@ %lu times with a PCS oplock error
Fetching share metadata for %ld URL%{public}@: %@
Failing to accept anonymous share. %@
Invalid data from server: %@
daemon/save-user-privacy-settings
Missing required identity when creating a signature for record %@
Invalid data from server in response to moveRecords request: %@
req: %{public}@, "Error parsing destination server record returned for save: %@"
req: %{public}@, "Error parsing move marker server record returned for save: %@"
req: %{public}@, "Inlining fake response operation result for item id %{public}@"
Download Preauthorization Failed to Init
Invalid record identifier from server %{public}@: %@
Couldn't create a record ID from %{public}@
Didn't get a record object in %{public}@. Giving up.
Couldn't convert share ID for record: %{public}@
Couldn't create a share reference for share %{public}@
Couldn't convert parent record ID: %{public}@
Warn: Couldn't create a parent reference for record %{public}@
Warn: Caught an exception when trying to encode record: %@
Download Preauthorization For Response UUID %{public}@ Not Found
Share has no share ID: %@
Couldn't create a record ID from share ID %{public}@
Couldn't create a share with ID %{public}@. Giving up.
Failed to convert participant %@ for share %{public}@: %@
Unable to convert payload message: %@
Unable to parse dialog body %@: %@
Received malformed throttling config. Discarding.
Received throttle with unknown database type: %d. Discarding.
Received throttling config with large ttl (%d sec). Limiting to 24 hours.
Non-indexed desired key %{public}@, which should have been caught earlier
req: %{public}@, "The response for recordID %{public}@ doesn't contain the record"
Invalid data in server protobuf, ignoring response. Server response was: %@, error: %{public}@
daemon/replace-mergeable-deltas
Will replace deltas with requests: %@
Replace deltas operation deallocated before per request block
Replace deltas operation deallocated before request completion block
Replace deltas URL request completed for operation <%{public}@: %p; %{public}@>
No per-request completion block for operation %@
Failed to replace deltas for request %@: %@
Successfully replaced deltas with request %@
daemon/modify-badge
daemon/AddAnonymousShareToSharedDB
Completed CKDPAnonymousShareAddURLRequest
Error CKDPAnonymousShareAddURLRequest: %@
req: %{public}@, "Skipping record save due to purely mergeable changes in %@"
Failed to get data from delta for delta save request with error: %@
Error generating replacement requests when modifying records: %@
Invalid data from server in response to modifyRecords request: %@
req: %{public}@, "Error parsing server record returned for save: %@"
req: %{public}@, "Will call record save block for skipped record %@"
Failed to create random number generator
Failed to generate random number with error code %d
Trying to encrypt a zero-length data
Could not malloc bytes to encrypt data
Trying to decrypt a zero-length data
Could not malloc bytes to decrypt data
Tag did not match when decrypting
getattrlist() failed for path %{public}s - %{public}s
daemon/repair-assets
Repair records operation <%{public}@: %p; %{public}@> for operation <%{public}@: %p; %{public}@> could not fetch original record with error %@
Repair records sub-operation <%{public}@: %p; %{public}@> for operation <%{public}@: %p; %{public}@> completed fetch original records with error %@
Repair records sub-operation <%{public}@: %p; %{public}@> for operation <%{public}@: %p; %{public}@> completed fetch original records
Could not find original record for asset or package %@
Could not find original asset or package for asset or package %@
Progress for upload of repaired asset %@: %.2f
Failed to upload asset or package %@ with operation %{public}@: %@
Successfully uploaded asset or package %@
Repair records sub-operation <%{public}@: %p; %{public}@> for operation <%{public}@: %p; %{public}@> finished with error %@
Repair records sub-operation <%{public}@: %p; %{public}@> for operation <%{public}@: %p; %{public}@> succeeded
Received error code %ld for repair, so treating as not available
Repair records operation <%{public}@: %p; %{public}@> finished with error %@
Wrong amount of repair records to update: %ld
Repair asset sub-operation <%{public}@: %p; %{public}@> for operation <%{public}@: %p; %{public}@> completed repair record update with error %@
Repair asset sub-operation <%{public}@: %p; %{public}@> for operaiton <%{public}@: %p; %{public}@> completed repair record update
%@, %p, "%@", items:%@
Cleaning up finished fetches and starting pending fetches. Running fetches are %@ and pending fetches are %@
Fetch %@ is finished. Removing it now.
Holding queued fetch %@ because an equivalent fetch is already running
Firing queued fetch %@ immediately since a running fetch is waiting on it
Firing queued fetch %@ immediately since its been waiting too long
Fetch is %{public}@ready to fire: %@
Rescheduling queued fetch timer to fire after %.2f seconds
Re-using fetch request %@ for operation %{public}@
Creating a new fetch request for operation %{public}@
Enqueuing fetch of record %@
Posting notification now
Enqueuing fetch of share %@
Enqueuing fetch of zone %@
PCSFetchAggregator %p was cancelled
daemon/fetch-archived-records
Fetching archived records from the server for %lu zones with options:
accountsDidGrantAccessToBundleID:%@ containerIdentifiers:%@
accountsDidRevokeAccessToBundleID:%@ containerIdentifiers:%@
accountsWillDeleteAccount:%@
Will not unregister any push token as we're in Buddy
Resetting TCC access
%@ : %@ -> %@
Removing cache at %@
It's time for cloudd to die...
Found outstanding operation ID %{public}@
Error preparing for long-lived operation %@. Operation class name missing.
Will%@ enqueue outstanding operation ID %{public}@ for retry number %ld. Seconds since last retry:%ld
Starting outstanding operation ID %{public}@ for container %@
Operation %{public}@ with ckOperationClassName %{public}@ doesn't respond to selector %{public}@. Dropping from long lived cache.
Forgetting all about operation %{public}@
Returning max inline mergeable delta size from configuration: %ld
Returning default max inline mergeable delta size: %ld
Failed to convert record zone: %@
Invalid encrypted deltas for operation %{public}@: %@
No deltas to encrypt for operation %{public}@
Will encrypt deltas for operation %{public}@
Error fetching PCS to encrypt deltas: %@
Failed to encrypt delta, %@, with error: %@
Did encrypt mergeable deltas for operation %{public}@
Removing all container metadata cached info
Removing container metadata cached info for accountID %@
Got the following Apple account identifiers from Accounts:
Cached account identifiers:
Removing container metadata cached info for stale accountID %@
Missing required info on %@
Error unwrapping asset key: %@
Error find clear asset key: %@
Couldn't create url from template %@
Not using encryption keys for the asset %@
Couldn't create url from template %{public}@
re-referenced asset signature differs from expected value
CoreCDP is now reporting that manatee is%{public}@ available for the logged in account.%{public}@%@
CoreCDP reports that manatee is%{public}@ available for the logged in account.%{public}@%@
No account altDSID or accountID available for manatee status, returning manatee disabled
Manatee override behavior option is set. Returning manatee enabled value from behavior option: %@
Returning cached manatee availability originally retrieved from CoreCDP: manatee is%{public}@ available.%{public}@%@
Manatee state may have changed. Fetching new state from CoreCDP
Fetch Share Metadata
Fetch Registered bundleIDs
v8@?0
com.apple.cloudkit
com.apple.cloudd
Couldn't get metadata for the share with url %@
v32@?0@"NSURL"8@"CKShareMetadata"16@"NSError"24
 with error 
v16@?0@"CKDOperation"8
com.apple.SafariShared.CloudTabs
com.apple.test.p01.B.Xaeaeg.com.apple.SafariShared.CloudTabs
Error fetching registered bundle IDs from server: %@
v24@?0@"NSArray"8@"CKDPResponseOperationResult"16
%@ %@
container
containerEnvironment
record
shareRecord
shareMetadata
recordZone
production
sandbox
(unknown: %i)
RecordCache
rowID
recordID
zoneIdentifier
environment
databaseScope
etag
modificationTime
recordData
knownUserKeys
dsid
size
Anonymous
Unknown
v32@?0@"NSString"8@16^B24
fetchCacheEntryRecordData
CKDRecordCache.m
Can't fetch a record if we don't have a recordID
RECORDID
ENVIRONMENT
SCOPE
DSID
recordWithID
v16@?0@"<CKSQLiteTablePredicateSetup>"8
recordID = $RECORDID AND environment = $ENVIRONMENT AND databaseScope = $SCOPE AND dsid = $DSID
@"NSError"8@?0
Expected a recordID
Expected recordIDs
environment = $ENVIRONMENT AND databaseScope = $SCOPE AND dsid = $DSID AND recordID IN %@
Only suitable for testing
numberOfRecordsWithID
@"NSPredicate"8@?0
recordID = $RECORDID AND environment = $ENVIRONMENT AND dsid = $DSID
Null record
Null recordID
Null recordName
Null zoneID
Null etag
B24@?0@"NSString"8@16
v24@?0@"NSString"8^B16
addRecordFetch
Expected a recordName
Expected a zoneID
etagForRecordID
Expected a objectID
deleteRecordWithID
recordID = $RECORDID AND databaseScope = $SCOPE
Expected non-nil db for %@
clearAllRecordsInScope
databaseScope = $SCOPE
ZONEID
clearAllRecordsForZoneWithID
zoneIdentifier = $ZONEID
recordType=%@
recordID=%@
sizeUpperBound=%lu
isPackageSectionRecord=%@
-[CKDAssetRecord addMMCSItem:]
CKDAssetRecord.m
nil == item.package || item.isTemporary
-[CKDAssetRecord addRereferencedMMCSItem:]
-[CKDAssetRecord addMMCSSectionItem:]
nil != item.package
v32@?0@8@16^B24
q24@?0@8@16
@"NSArray"16@?0@"NSString"8
v32@?0@8Q16^B24
storageAvailableBytes
v16@?0@"CKDMMCSItemGroup"8
@16@?0@"CKMergeableDelta"8
CKDUploadMergeableDeltasURLRequest.m
An anonymousCKUserID is required to upload mergeable deltas when using anonymous to server share participants
Expected non-nil delta for response %@
Expected non-nil replacement request for response %@
creation
modification
CreatedInProcess
ParticipantAcceptedInProcess
NameComponents
Email
Phone
AcceptedInProcess
v24@?0@"NSData"8@"NSError"16
v16@?0@"NSError"8
Couldn't create share PCS data for share %@
v24@?0@"CKDSharePCSData"8@"NSError"16
changeID
pushMessage
moreAvailable
local-fetch-only
wants-parent
wants-zoneish
wants-invited
(%@)
none
%lu-%@
%@.%@
com.apple.CloudKit.PCSCache.callbackQueue
v24@?0@"CKDPCSSQLCache"8@"NSError"16
v16@?0@"CKDPCSData"8
CKDPCSCache.m
Invalid record ID: %@
v16@?0@?<v@?@"CKDOperation">8
Invalid zone ID: %@
Invalid share ID: %@
PCS data is of the wrong class: %@
In-memory zone cache:
In-memory record cache:
In-memory share cache:
SQL cache:
%lu outstanding fetch requests for %lu records
com.apple.CloudKit.PCSCache.fetchQueue
com.apple.cloudd.startup
.debug
com.apple.cloudkit.connectionManager.statusreport.callback
com.apple.cloudkit.connectionManager.statusreport
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
%lu connected clients
------ Shared Foreground Queue Operations -------
%lu/%ld {
No operations.
------ Global Configuration Manager -------
-------------------------------------------
------ Active Throttles -------
Cached environment is %@
%@%@
protectionInfo
protectionInfoTag
serverType
CKDatabaseService
endpoint
/api/client/record/retrieve
partitionType
databaseSpecificPartition
recordIdentifier
requestedFields
versionETag
clientVersionETag
getAssetURL
assetsToDownload
shouldFailBatch
name=%@
flags=sandboxed
%s(%d)
v24@?0@"<NSXPCProxyCreating>"8@"NSError"16
v24@?0@"<CKXPCProcessScopedClient>"8@"NSError"16
v24@?0@"CKFileMetadata"8@"NSError"16
v16@?0@"<CKXPCProcessScopedClient>"8
Daemon timed out waiting for adopter process to get metadata for %@
Adopter failed to fetch metadata for %@
Failed to issue sandbox extension for "%@" at %@: %d (%s)
file-read-data
identifier
fieldIdentifier
deltas
recordType
com.apple.cloudkit.cancellation
com.apple.cloudkit.status
com.apple.cloudkit.tccauth
v16@?0@"NSNotification"8
v20@?0@"NSString"8B16
Container %@ had an unexpectedly-nil account ivar
icns
%@-%@
Expected non-nil MMCS wrapper for %@
containerID=%@, applicationID=%@, personaID=%@, containerID=%@
sandboxed
internal
clientBundleIsAppleExecutable
zoneish
mmcsv1-v2
mmcsv2
nopcs
forceManatee
anonymousToServerShareParticipants
flags=%@
v24@?0@"CKDServerConfiguration"8@"NSError"16
v24@?0@"CKDContainerServerInfo"8@"NSError"16
v20@?0B8@"NSError"12
(unknown)
Container %@ had an unexpectedly-nil account ivar when creating a pcs cache
MasqueradeAsNonAppleAdopter
Account temporarily unavailable due to bad or missing auth token
Expected non-nil operation for proxy %@
Container %@ is not allowed to set application bundle identifier override %@ without an entitlement
B16@?0@"NSString"8
Container %@ is not allowed to set an operation sourceApplicationSecondaryIdentifier to %@ without an entitlement
Expected non-nil error for operation %@
Tue Aug  2 15:37:49 2022
%@ is CloudKit SPI and requires an entitlement. Please add the com.apple.private.cloudkit.spi entitlement to this process. This will become a hard failure.
com.apple.cloudkit.accountStatus
com.apple.cloudkit.operation.%@
com.apple.cloudkit.cleanup.%@
com.apple.cloudkit.uncancellable.%@
com.apple.cloudkit.background.%@
com.apple.cloudkit.support.%@
com.apple.cloudkit.sharedThrottlingQueue
approved
REJECTED
approval
rejection
Client went away before operation %@ could be validated; failing
No cached metadata found for outstanding operation %@
v16@?0@"CKRequestInfo"8
Operation %@ was cancelled
 not
. Error was 
v24@?0@"CKAccountInfo"8@"NSError"16
Background Assets Extension processes don't have access to an iCloud account
No iCloud account is configured
CloudKit-Anonymous / App Clips processes don't have access to an iCloud account
ALTERNATE_DISCOVERABILITY_TITLE
ALTERNATE_DISCOVERABILITY_BODY
v24@?0^{__CFUserNotification=}8Q16
v28@?0q8B16@"NSError"20
DISCOVERABILITY_TITLE
DISCOVERABILITY_BODY
DONT_ALLOW
Could not create a user notification %d
Could not create a user notification
v24@?0q8@"NSError"16
 with error
PreserveCachedLongLivedOperationMetadata
nil connection
v24@?0@"CKUserIdentityLookupInfo"8@"CKUserIdentity"16
v32@?0@"CKUserIdentityLookupInfo"8@"CKShareParticipant"16@"NSError"24
v32@?0@"CKRecordZoneID"8@"CKRecordZone"16@"NSError"24
v24@?0@"CKRecordZoneID"8@"NSError"16
v32@?0@"CKRecordZone"8@"CKRecordZoneID"16@"NSError"24
v16@?0@"CKRecordZoneID"8
v40@?0@"CKServerChangeToken"8q16@"NSError"24@?<v@?@"NSError">32
v16@?0@"CKDXPCConnection"8
v16@?0@"<CKXPCContainerScopedClient>"8
v24@?0@"CKRecordID"8d16
v24@?0@"NSArray"8@?<v@?@"NSError">16
v40@?0@"CKRecordID"8@"CKRecord"16@"CKRecord"24@"NSError"32
v24@?0@"CKRecordID"8@"NSError"16
v108@?0@"CKRecordID"8@"NSString"16q24@"NSData"32Q40Q48B56@"NSString"60d68@"NSData"76@"NSData"84@"NSData"92@"NSError"100
v24@?0@"CKRecordID"8@"NSDictionary"16
v32@?0@"CKRecord"8@"CKRecordID"16@"NSError"24
v32@?0@"CKRecordID"8@"CKRecord"16@"NSError"24
v24@?0@"CKRecordID"8@"NSString"16
v68@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24q32B40@"NSSet"44@"NSError"52@?<v@?@"NSError">60
v48@?0@"CKRecordID"8@"CKRecord"16@"CKRecord"24@"CKRecord"32@"NSError"40
v24@?0@"CKQueryCursor"8@?<v@?@"NSError">16
v24@?0@"NSString"8@"NSError"16
v32@?0@"CKSubscription"8@"NSString"16@"NSError"24
v16@?0@"CKNotification"8
true
false
v24@?0@"CKNotificationID"8@"NSError"16
v32@?0@"NSURL"8@"CKShare"16@"NSError"24
v40@?0@"NSURL"8@"NSArray"16@"NSArray"24@"NSError"32
This requires an authenticated account
not 
____ %@ Daemon Status Report: "%@" (client:"%@", container:"%@", connected since: %@)
%%%%% Operations %%%%%
Queued operations %lu/%ld {
@"NSString"16@?0@"NSOperation"8
No queued operations.
More Operations %lu/%lu/%ld {
No more operations.
Other Proxy Operations On Shared Throttling Queue %lu/%lu/%ld {
CloudKit Support Operations %lu/%ld {
More background operations %lu/%ld {
No background operations.
gatekeeper {
%%%%%%%%%%%%%%%%%%%%%%%%
%%%% Operation Statistics %%%%
----- MMCS Engine  -----
(No MMCS Engine)
------------------------
~~~~~ PCS Cache ~~~~~
(No PCS Cache)
~~~~~~~~~~~~~~~~~~~~~~~~
_____________________________
v40@?0@"NSArray"8@"NSArray"16@"NSArray"24@?<v@?@"NSData"@"NSError">32
v24@?0@"NSArray"8@"NSError"16
v24@?0@"NSData"8@?<v@?@"NSArray"@"NSError">16
v16@?0@"NSArray"8
com.apple.cloudd.metrics
Failed to retrieve host and port from %@.
Failed to create nw_endpoint for host %@ with port %@.
Failed to copy nw_endpoint.
-[CKDContainer countAssetCacheItems]
CKDContainer.m
0 && "no MMCS"
self.MMCS && "no MMCS"
-[CKDContainer showAssetCache]_block_invoke
0 && "no container.MMCS"
container.MMCS && "no container.MMCS"
v36@?0@"CKRecordID"8B16@"NSArray"20@"NSError"28
v48@?0@"CKRecordZoneID"8@"CKServerChangeToken"16q24@"NSError"32@?<v@?@"NSError">40
v40@?0@"CKRecordID"8@"NSString"16@"CKAsset"24@"NSError"32
v24@?0@"CKUploadRequestMetadata"8@"NSError"16
v40@?0@"CKRecordID"8@"NSData"16@"NSString"24@"NSError"32
v24@?0@"CKEncryptedData"8@"NSError"16
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
v16@?0@"NSURL"8
v16@?0@"CKShareMetadata"8
v32@?0@"CKRecordID"8@"NSString"16@"NSError"24
Container %@ is not allowed to decrypt share personal info
v32@?0@"CKMergeableValueID"8@"NSArray"16@"NSError"24
v24@?0@"CKReplaceDeltasRequest"8@"NSError"16
v24@?0@"CKMergeableDelta"8@"NSError"16
This requires an authenticated account, we have no account
This requires an authenticated account, we have only have an anonymous account
This requires an authenticated account, the current account cannot auth with CloudKit
The account has no apsEnv in its dataclass bag
<%lu bytes>
B16@?0@"NSOperation"8
v32@?0@"CKRecordZoneID"8@"CKZonePCSDiagnosticInformation"16@"NSError"24
v28@?0Q8B16@"NSError"20
Invalid fake response lifetime
com.apple.cloudkit.containerTCCQueue
headerKey
headerValue
-[CKDPAssetUploadTokenRetrieveResponseHeaderInfo writeTo:]
CKDPAssetUploadTokenRetrieveResponseHeaderInfo.m
nil != self->_headerKey
nil != self->_headerValue
SetupTranslator
Deserialize
PostflightRecords
Operation %@ is not allowed to run without an entitlement
CKDSerializeRecordModificationsOperation is unable to instantiate a CKDProtocolTranslator
-[CKDDeserializeRecordModificationsOperation _setupTranslator]_block_invoke
CKDDeserializeRecordModificationsOperation.m
self.error != nil || self.translator != nil
v32@?0@"NSString"8@"NSString"16@"NSError"24
CKDDeserializeRecordModificationsOperation is unable to deserialize its messages
PCSItem=%@
lastAccess=%0.0f
com.apple.cloudkit.pcs.memorycache
q24@?0@"CKDPCSMemoryCacheEntry"8@"CKDPCSMemoryCacheEntry"16
[%0.2f%% full: %lu/%lu (max: %lu) (%f min, %f oldest)] [Hit rate %0.2f%% (%lu/%lu), Updates: %lu, Deletes: %lu, Evictions: %lu Memory Status: %@]
normal
warning
critical
unknown
/api/client/test/archive
idsToArchive
assetAuthorizationResponses
throttleConfig
fieldName
order
coordinate
ascending
descending
CKDMMCSItemCommandWriter.m
Expected non-nil MMCS item
Expected non-nil MMCS request for %@
getFileMetadataWithError not implemented
readBytesAtOffset not implemented
v32@?0{_NSRange=QQ}8^B24
-[CKDAssetTokenRequest addAssetBatch:]
CKDAssetTokenRequest.m
!assetBatch.assetTokenRequest
B16@?0@"CKDAssetBatch"8
assetBatchCount=%lu
failedAssetBatchCount=%lu
applicationContainer
applicationContainerEnvironment
applicationBundle
userPrivacySettings
rowid
lookupInfo
containerIdentifier
dataSeparationHash
identity
LOOKUPINFO
HASH
lookupInfo = $LOOKUPINFO AND containerIdentifier = $ID AND dataSeparationHash = $HASH
deleteKey
cachedIdentityForLookupInfo
IdentityCache
cache
pipelining
com.apple.cloudkit.%@.callback.%p
CKDOperation.m
only one suspend is supported
resume without a suspend
Expected non-nil operationInfo
com.apple.cloudkit.%@.%@
EphemeralGroup
Operation %@ tried to dealloc with outstanding entries in the state transition group
com.apple.cloudkit.%@
(%@%@%@%@%@%@%@) 
operationID
state
executing
finished
cancelled
stateFlags
requestIDs
[%@]
background
allows-cellular
allows-expensive
long-lived
flags
runningFor
finishedChildOpIDs
@16@?0@"CKDOperation"8
<%@ %@>
childOps
operationGroupID
operationGroupName
operationGroupQuantityNumber
currentAccountID
applicationBundleIdentifierOverrideForContainerAccess
applicationBundleIdentifierOverrideForNetworkAttribution
applicationSecondaryID
containerID
request
MMCSMetrics
unitTestOverrides
%@ %@ State: %@, QoS: %@
v16@?0@"CKDOperationMetrics"8
Can't run a child operation on an orphaned parent operation
com.apple.cloudkit.operationcallback.userinteractive
com.apple.cloudkit.operationcallback.userinitiated
com.apple.cloudkit.operationcallback.default
com.apple.cloudkit.operationcallback.utility
com.apple.cloudkit.operationcallback.background
Application version is not allowed by the server
Didn't get any configuration from the server
v24@?0@"CKOperationGroupSystemImposedInfoConfiguration"8q16
Operation %@ was cancelled before it started
B8@?0
You can't restart an executing or finished CKOperation: %@
ForceTimingIssueAroundProxySetupQueue
v24@?0@"CKOperationLifecycleAction"8@"NSError"16
Must be called on subclass
Operation %@ was already marked as finished
 with error: 
Operation %@ is marked as finished
Not Started
Complete
nil clientOperationCallbackProxy
v24@?0@"CKFileOpenResult"8@"NSError"16
Daemon timed out waiting for adopter process to open file %@
Adopter failed to open file %@
v32@?0@"NSURL"8@"NSFileHandle"16@"NSError"24
Daemon timed out waiting for adopter process to finish file %@
Adopter failed to finish file %@
Simulate503ResponseWithRetryInterval
Device throttle: container=%@, type=%d
state: %@
parent: %@
container: %p
%s<%@ %@ 
QoS %@ 
running for %@ (started %@) 
%sRunning Child Operations: {
%sRequest: {
%s%@: {
%s%@
%s%lu Previous Requests: [%@]
%s%lu Finished Child Operations: [%@]
%sCloudKit metrics: {
%sMMCS metrics: {
%sError: %@
cloudd
iCloudApp
syncEngine
adopter
ckctl
code
error
success
partial
failure
indeterminate
entropy
waiter=%@, zoneIDs=%@
Deferred relinquish of %@
<%@: %p; %@>
Held Gates {
%@ -> %@
No gates held
Waiters {
%@ wants zone IDs {
foregroundZoneGatekeeper {
backgroundZoneGatekeeper {
Fetch Metadata
v40@?0@"CKMergeableValueID"8@"NSArray"16@"NSData"24@"CKDPResponseOperationResult"32
Error fetching delta for value %@ from server: %@
Must specify a record ID and field name for value %@
Failed to fetch PCS to decrypt mergeable delta timestamps
Failed to decrypt mergeable delta timestamps
v24@?0@"CKDRecordPCSData"8@"NSError"16
contactInformation
-[CKDAssetRequestPlanner addMMCSItem:]
CKDAssetRequestPlanner.m
![_items containsObject:item]
-[CKDAssetRequestPlanner addRereferencedMMCSItem:]
-[CKDAssetRequestPlanner addMMCSSectionItem:]
asset record %@ unexpectedly contains mixed types of assets
itemCount=%lu
assetRegisterAndPutBatchCount=%lu
assetGetChunkKeysBatchCount=%lu
assetTokenRequestCount=%lu
Fetching Zones
Checking Record PCS
zoneID
fetchAllQueryResults
FakePCSDecryptionFailure
TEST PCS decrypt failure
LegacyErrorHandling
Encountered an error fetching records
v32@?0@"NSString"8@"CKAssetTransferOptions"16^B24
Invalid predicate: %@
Unexpected error while encoding query %@
No query or cursor supplied for query operation
containerName
CKDQueuedRecordFetch.m
Record ID required when fetching record PCS: %@
Record ID was submitted to the wrong kind of fetcher: %@
Biggest logging call sites by size:
Total Size
Avg Size
Callsite
Most frequent logging call sites:
Total Count
Total Size
Callsite
/api/client/zone/retrieve
onlyFetchPCSInfo
continuationMarker
zone
 and error 
v24@?0@"CKDZonePCSData"8@"NSError"16
CKDPCSCacheZoneFetchOperation.m
We should have PCS data for zone %@ by this point
Couldn't save zone with updated PCS data to the server for zone %@
Couldn't serialize zone PCS
Couldn't serialize zoneish PCS
We shouldn't be trying to save a new PCS on anything other than the default zone or system zone: %@
Couldn't create a new zone PCS
Couldn't create a new zoneish PCS
NoZonePCSOnServer
Couldn't fetch zone PCS for %@ from the server
We don't have zone PCS data for zone %@
We don't have share PCS to decrypt zone PCS data for zone %@
Couldn't create a zoneish PCS for zone %@
Couldn't decrypt zone PCS for zone in order to create a zoneish PCS for zone %@
Couldn't fetch PCS for zone %@: %@
applicationID="%@", containerID="%@", personaID="%@"
%@, accountID="%@"
/api/client/anonymousShare/remove
anonymousShareTupleHash
encryptedShareTuple
Use +[CKDPrivacyManager sharedManager] instead
com.apple.cloudkit.privacyManagerQueue
com.apple.cloudkit.privacyManager.resetQueue
CKDPrivacyManager.m
Can't reset privacy settings with daemon type %@
You must call -[%@ initWithOperation:container:operationQueue:]
com.apple.cloudkit.pcs.queuedFetch.callbackQueue
%@ %p was cancelled
startDate=%@, lastRequestDate=%@, numCallbacks=%d, initialOperationInfo=%@, usesBackground=%d
CKDQueuedFetch.m
Expected non-nil runningOperationID on fetch %@
To be overridden by subclass
You can't restart a fetch that has already finished
 with errors 
application/json
application/x-apple-plist
application/x-protobuf
text/xml
text/plain
application/x-x509-ca-cert
CKDURLRequest.m
<%@ %p>: Requests must be finished before deallocation
<%@ %p>: The URL session data task should be nil: %p
%s.%p
com.apple.cloudkit.urlrequestlifecycle
<%@: %p %@>
UUID
dataTaskID
dataTask
foreground
deny-cellular
deny-expensive
POST
there is no operation associated with this request
Your request contains %ld items which is more than the maximum number of items in a single request (%ld)
FakeContainerIdentifier
Expected non-nil container
v32@?0@"NSString"8@"NSString"16^B24
You can't set both usesiCloudAuthToken and usesCloudKitAuthToken to the same value
TestAuthTokenRenewalFailsBecauseRenewedTokenIsStale
Got a CloudKit auth token that has already failed a previous auth attempt
Couldn't get an authentication token
Authentication required
no operations present
DropOperationUUIDsInResponse
FakeZoneBusyResponseFromServer
v24@?0@8@"NSData"16
v24@?0@"NSDictionary"8@"NSData"16
v24@?0@"NSData"8@"NSData"16
TestRepeatedParseResults
Received a plaintext response that we weren't expecting: %@
Received a 509 cert response that we weren't expecting: %@
Plugin-Specific Error
If you set a server type of CKServerTypeOther, you must provide your own url
%@ should be overwritten by the subclass (%@)
/api/client/batch
RequestOperation
%@; desc="%@://%@%@/static/protobuf/CloudDB/CloudDBClient.desc"; messageType=%@; delimited=true
%@ must propagate anonymous userIDs, then override this and return YES
v16@?0@"NSData"8
This request requires an authenticated account, which is unavailable for CloudKit-Anonymous / App Clips processes
This request requires an authenticated account, which is unavailable for Background Assets Extension processes
This request requires an authenticated account
This request requires an authenticated account, the current account cannot auth with CloudKit
CloudKit access was denied by user settings
You must set the container
v24@?0@"NSURL"8@"NSError"16
Request (%@) does not have a URL
Account couldn't get container scoped user id, no underlying error received
You must set the container for request %@
WaitForTokenRegistration
Can't acquire zone lock, failing the request
v12@?0B8
TestContainerSpecificOpWithNoCloudKitTokenNoRetry
TestContainerSpecificOpWithBadCloudKitToken
tacos
TestContainerSpecificOpWithNoCloudKitToken
Didn't get CloudKit credentials for account %@ with no error
Didn't get a CloudKit auth token
TestContainerSpecificOpWithBadiCloudToken
TestContainerSpecificOpWithNoiCloudToken
Didn't get mmeAuthToken credentials for account %@ with no error
Didn't get an iCloud auth token
DEBUG
gzip
https
com.apple.cloudkit.ckctl.container
%@:%@
Basic %@
Content-Encoding
no-transform
Cache-Control
%@ requestUUID:%@
Request is nil
The URL session data task should be nil
Response is nil
Can't create a NSURLSessionDataTask, failing the request
FakeRequestCFNetworkError
SilentlyDropNetworkRequest
Received a networking protocol error. Please try again
Request %@ was cancelled
HTTP/1.1
TestName
TestEmptyResponseBody
_kCFNTimingDataConnectionReused
Reason: %@
Container: %@
DSID: %@
Operation ID: %@
Request UUID: %@
MoiCTopIssueAutoSysdiagnose-
%@%@%@
Received a didCompleteWithError without receiving a response from the server
Received a didCompleteWithError without an error but no response body where one was expected
satisfied
NOT satisfied
stateFlags=%@ 
(waiting on auth)
CFNetwork task: %@ 
CKDeviceService
/api/client/badgeUpdate
userPartition
badgeCount
forDevice
signature
lastSection
owner
fileSignature
referenceSignature
com.apple.security.view-change.PCS
com.apple.ProtectedCloudStorage.HaveCredentials
Current Service
Bladerunner
Sharing
CloudKit
Reminders
%@-%@-%@
-%@-%@
%s.%@
com.apple.CloudKit.CKDPCSManager.callbackQueue
client specified
containerIdentifier default
%@%@-%@
%@. Public keys on object: %@. Attempted public keys: %@
Couldn't get a public key for our participant
diversified 
Couldn't create a diversified public key for the owner participant
Couldn't create an identity from the public sharing key: %@ (key was %@)
Couldn't add public identity to per-participant PCS: %@
Couldn't serialize PCS data after key swap on OON PCS blob
Can't add an identity to a nil pcs
Couldn't get a self identity to add to the share PCS
Couldn't get a public identity for our current user to add to PCS %@: %@
Failed to add our public identity to the PCS object
Asked to add an identity to an null PCS in addIdentityForService:toPCS:
Couldn't get a %@ identity to add to PCS
FakeOutCurrentIdentityIsMissing
Couldn't create a PCS identity
Couldn't create a new PCSShareProtectionRef
Failed to add a protection key to the zone
ForceSingleIdentityForRemindersZone
ForceKeyRegistrySyncOnRemindersZoneCreation
Couldn't get a Reminders identity to add to PCS
ForceUserKeyRegistrySyncRetryOnZonePCSCreation
Couldn't create a PCS identity for unit tests
ForceImmediateUserKeyRegistrySyncFailure
Failed to preflight PCS identities because of unit tests
v28@?0B8@"NSError"12@"CKDPCSKeySyncCoreAnalytics"20
Couldn't create a zone PCS identity
Couldn't encode zone PCS data
v16@?0r^v8
123456789
com.apple.fake.container
cloudkit.zoneshare
TestZone
%@-%@-%@-%@-%@-%@
Missing the required PCSIdentity to generate a signature
FakeEmptySignature
FakeInvalidSignature
FakeSignatureGenerationError
com.apple.protectedcloudstorage
PCSErrorDescription
PCS Signing of service key failed
CKDPCSManager.m
We failed a prior decryption of this PCS data a with manatee identity when current identity is non-manatee. Did our identity change?
PCS data wasn't decrypted because a prior attempt failed after key sync.
Forcing a manatee decryption failure due to behavior option override
copyServiceIdentityWithError: didn't return a service identity
<PCSIdentitySetRef %p service: %@, identities: {
v16@?0^{__CFString=}8
Could not decrypt PCS data with the selected identity. A key to decrypt this data does exist, but it will not be used.
Failed to decrypt PCS data with user identities
Couldn't create PCS object from data
PPPCS data
DisallowKRSToBePerformed
KRS is not allowed from unit test override
Failed to decrypt. Keys unavailable even after synchronization
iCDP not available
ForceUserKeyRegistrySyncRetryOnDecryption
Failed to decrypt zone PCS because of unit tests
ForceMissingIdentitiesErrorOnDecryptionRetry
ForceDecryptFailedErrorOnDecryptionRetry
v24@?0@"CKDPCSData"8@"NSError"16
Failed to preflight a %@ identity
ForceUserKeyRegistrySyncRetryOnIdentityPreflight
ForceUserKeyRegistrySyncRetryForReminders
SkipRefetchingIdentityAfterKeyRegistrySyncFailure
Failed to decrypt zone PCS data
Couldn't create zone PCS object from data
Couldn't decode zone PCS data
Couldn't get a public identity from our PCS service identity
Couldn't add our public identity to the existing zone PCS data
Last CoreCDP error was 
Cannot roll master key for a nil record PCS
Couldn't roll master key for record PCS
Cannot roll key for a nil zone PCS
Couldn't update zone identity on PCS
Failed to clean up the share PCS
Failed to create a new private key for share PCS
Failed to clean up the share PCS when creating a new private key
Couldn't roll key for zone PCS
Couldn't roll zone wide share PCS due to missing share or zone PCS
Couldn't roll record PCS due to missing record or zone PCS
Couldn't roll zone-wide share record PCS due to missing share or zone PCS
Can't create a record PCS with a nil zone PCS
Couldn't create a new record PCS
Couldn't add zone PCS to record PCS
Couldn't add share PCS to record PCS
lightweight 
 and share PCS 
Can't create a record PCS with nil zone PCS data
Couldn't add encrypted zone PCS to record PCS
Couldn't encode record PCS data
Can't create a PCS object without a share PCS
Failed to decrypt PCS data
You can't add a nil share PCS to a record PCS
You can't add a share PCS to a nil record PCS
READ ONLY 
Couldn't get a public identity from the share PCS
Couldn't get a private identity from the share PCS
You can't remove a nil share PCS from a record PCS
You can't remove a share PCS from a nil record PCS
Couldn't remove share PCS from record PCS
Couldn't get a public identity for our current user to sign PCS: %@
Couldn't create a new signed PCSShareProtectionRef
Failed to add a protection key to the share
Couldn't get a public identity for our current user in order to add our public %@ identity to PCS %@
Failed to add our %@ identity to the share
Couldn't create an empty share PCS
Couldn't add public PCS identity to new share PCS
Couldn't get a public identity'
Failed to add identity to the share PCS
Failed to add public identity to the share PCS
Failed to add a protection key to the chain PCS
Couldn't set the current private key on the chain PCS to the new generated chain identity
Couldn't encode share PCS data
Can't create a share PCS without a sharing identity
Failed to decrypt share PCS data
Couldn't create share PCS object from data
Failed to decrypt share PCS object
Couldn't create an identity from private key data
Couldn't create a public PCS from the PCS data %@ for identity %@
Couldn't create public key data from PCS  %@
Couldn't unlock the private share PCS for share %@
Error adding public identity %@ to record PCS %@
Couldn't get key IDs from share PCS %@
Couldn't get PCS identity with key ID %@
Error getting a public identity from sharing identity %@
Can't remove a nil public identity
Can't remove a public identity from a nil share
Couldn't remove public identity from share PCS
Couldn't remove public identity with keyID %@ from PCS %@
Can't decrypt chain PCS for record %@ because we don't have a decrypted record PCS
Can't decrypt chain PCS for record %@ because the record has no chain PCS private key
Can't decrypt chain PCS for record %@ because the record has no chain PCS data
Couldn't decrypt the private chain PCS identity
rdar://problem/32337711: There are server side plugins on container %@ that are probably going to cause you to have a bad time
Failed all decryption attempts for wrapped asset key %@ in context %@ using PCS %@
Couldn't wrap asset key with signature %@ with PCS %@
Unsupported CKDPCSAssetKeyType
MMCSReferenceObjectCreateWithType failed
Couldn't decrypt encrypted data on record using context %@: %@
Couldn't unwrap encrypted data in context %@ because %@.
there's nothing to decrypt
we don't have a record PCS
Couldn't encrypt data in context %@
Couldn't wrap encrypted data in context %@ because %@.
there's nothing to encrypt
Couldn't fetch a boundary key from PCS
No account DSID, so we can't fetch a boundary key
@16@?0@"NSData"8
com.apple.cloudkit.unittest.nopcs.CKManateeContainerTests.
com.apple.cloudkit.zoneshare.test_non_manatee
com.apple.cloudkit.unittest.zonesharing.
com.apple.cloudkit.unittest.fdb.zonesharing.
com.apple.test.p
com.apple.test.fdb.p
com.apple.cloudkit.unittest.CKAnonymousToServerShareParticipantTests.
ResetKeySyncState
AllowThrottlingWithUnitTestAccount
ForceShortThrottlePeriod
ForceKeySyncFailure
ForceKeySyncFailureForReminders
ForceKRSReturnExistingIdentityValue
ExpectedPersonaIdentifier
com.apple.cloudkit.pcsmanager.queue
Preparing Short Tokens
Retrieving Share Metadata
The user is not able to access this share
v32@?0@"CKDShortTokenLookupInfo"8@"CKShareMetadata"16@"CKDPResponseOperationResult"24
Internal error when fetching short token metadata for %@
Error %@ when fetching short token metadata for %@: %@
Couldn't decode the protected full token for %@
Couldn't find this participant on the share for %@
ForceShareAcceptTwice
No participant protection data for share %@
ForceSharePCSPrepFailure
Failing share PCS prep for unit tests
 and error: 
No sharing invitation token provided for device-to-device encrypted share %@
Couldn't parse iCloud Share URL %@
Fetching Records
Saving Records
 Error was 
Unknown error when saving record for web sharing
Couldn't fetch record from the server
Record %@ didn't contain any share protection data
Couldn't deserialize share protection data on record %@
Couldn't find record %@ on the server
Couldn't get a web sharing identity from record %@
Fetched record %@ had no PCS data
added
removed
Couldn't fetch record for web share/unshare.
CKDMMCSTestEncryptedItemReader.m
record_identifier
grant
revocation
revoke
Unknown error when saving record for record access
Record %@ didn't contain any access token protection data
Couldn't deserialize access token protection data on record %@
granting
revoking
Couldn't create an access token identity for record %@
Record %@ didn't have an access token so it can't be revoked
Couldn't create access token data for record %@
Couldn't fetch record for web access grant/revoke.
requestedSize
uploadedSize
uploadReceipt
/api/client/zone/save
zoneProtectionInfoTag
name
value
CKDQueuedZoneFetch.m
Zone ID required when fetching zone PCS: %@
Zone ID was submitted to the wrong kind of fetcher: %@
Error discovering identity for lookup info %@
v32@?0@"CKUserIdentityLookupInfo"8@"CKUserIdentity"16@"CKDPResponseOperationResult"24
FakeContactIdentifier-%@
@16@?0@"CNLabeledValue"8
v24@?0@"CNContact"8^B16
ContactsDatabaseEmails
Error discovering user identities
v32@?0@"NSString"8@"CKEventOperationGroupInfo"16^B24
@24@?0@"NSString"8@"CKEventOperationInfo"16
Encrypt Deltas
Upload Deltas
v24@?0@"CKMergeableDelta"8@"CKDPResponseOperationResult"16
v24@?0@"CKReplaceDeltasRequest"8@"CKDPResponseOperationResult"16
Error uploading mergeable delta, %@, from server: %@
Error replacing mergeable deltas %@: %@
CFBundleVersion
CloudKit/%@ (%@)
UNKNOWN
<%@>
 <%@;%@;%@>
 <%@/%@ (%@/%@)>
Accept
Accept-Encoding
Authorization
User-Agent
Content-Type
X-MMe-Client-Info
X-Apple-CKAppId
X-Apple-Operation-ID
X-Apple-Operation-Group-ID
X-Apple-Request-Log-Level
X-CloudKit-TestRun-ID
X-CloudKit-AutoBugCapture
X-CloudKit-TapToRadar-Request
X-CloudKit-TapToRadar-Request-Component
X-CloudKit-TapToRadar-Request-RelatedRadar
X-CloudKit-BundleId
X-CloudKit-BundleVersion
X-CloudKit-ContainerId
X-CloudKit-Environment
X-CloudKit-DatabaseScope
X-CloudKit-AutomatedDeviceGroup
X-CloudKit-DuetPreClearedMode
X-CloudKit-UserId
X-CloudKit-AuthToken
X-ICloud-Environment
destinationZoneID=%@
destinationDatabaseScope=%@
sourceZoneID=%@
sourceDatabaseScope=%@
-[CKDFetchContentAuthTokensForPutURLRequest generateRequestOperations]
CKDFetchContentAuthTokensForPutURLRequest.m
items.count
Missing operationUUID on %@
Missing AssetUploadTokenRetrieveResponse on %@
Can't find transactionState for %@
Can't find assetBatch for %@
Server did not return the required authPutResponse even though an authPutRequest was sent. AssetUploadTokenRetrieveResponse on %@
Missing authPutRequest. AssetUploadTokenRetrieveResponse on %@
Failed to get headers for authPutResponse AssetUploadTokenRetrieveResponse on %@
Failed to parse recordID from AssetUploadTokenRetrieveResponseUploadToken on %@ : %@
Missing Asset signature from AssetUploadTokenRetrieveResponseUploadToken on %@
Missing Asset size from AssetUploadTokenRetrieveResponseUploadToken on %@
Missing Asset owner from AssetUploadTokenRetrieveResponseUploadToken on %@
Missing Asset requestor from AssetUploadTokenRetrieveResponseUploadToken on %@
Missing Asset token from AssetUploadTokenRetrieveResponseUploadToken on %@
Missing Asset contentBaseURL from AssetUploadTokenRetrieveResponseUploadToken on %@
Malformed Asset contentBaseURL from AssetUploadTokenRetrieveResponseUploadToken on %@
Failed to find asset for assetID %@ on %@
Missing requestID on %@
Can't find transactionState
Error uploading asset: %@
Generic %@ %@ error
Vetting with AuthKit
Reconstructing short token
Force fetching share metadata
Reconstructing share URL
Verifying OON key can be swapped
encryptedKey failed to decrypt
CKDCompleteParticipantVettingOperation.m
Vetting token got validated fine, but we got an error: %@
Vetting token %@ invalid. Likely expired.
Vetting token %@ validation failed due to auth error
https://%@/share/%@%@
Couldn't force fetch share metadata for share: %@
privateToken
outOfNetworkPrivateKey
We don't have the necessary keys to perform an OON key swap
OON key-swap failed, but without error
OON key-swap validation failed, but without error
Dryrun OON keyswap failed
PublicCloudDBURL
PublicShareServiceURL
PublicDeviceServiceURL
PublicCodeServiceURL
PublicMetricsServiceURL
ContainerScopedUserID
OrgAdminUserID
Environment
publicCloudDBURL=%@, publicShareServiceURL=%@, publicDeviceServiceURL=%@, publicCodeServiceURL=%@, publicMetricsServiceURL=%@, containerScopedUserID=%@, orgAdminUserID=%@, environment=%@
application/protobuf
CKDCodeLocalFunctionInvokeURLRequest.m
Invalid database environment for local code request
Failed to parse node
CKCodeService
/api/client/code/invoke
serviceName
functionName
serializedParameters
protectedCloudComputeMetadata
attestationRequest
trustedTargetCryptoMetadata
/api/client/zone/delete
userPurge
lastMissingManateeIdentityErrorDate
CKDQueryURLRequest.m
An anonymousCKUserID is required to query in zone %@ in the shared database when using anonymous to server share participants
down|%@|%@
com.apple.cloudkit.download
@16@?0@"CKDMMCSItem"8
<CKDMMCSItem %p itemID: %lu, progress %0.2f, signature: %@ %@>
MMCS Items
Prepare For Download
Download
Post Process Downloaded Assets
Expected non-nil asset for %@
%@?%@
expected assetKey for asset %@
expected clearAssetKey for asset %@
-[CKDDownloadAssetsOperation _tryToFillInTheDerivativeTemplateWithAsset:]
CKDDownloadAssetsOperation.m
assetKey && "assetKey expected"
&pk=%@
Couldn't wrap asset key: no error
unknown public cert result for host %@ asset %@
no public cert result for host %@ asset %@
asset %@ has constructedAssetDownloadURLTemplate but cannot parse out host string
Couldn't create asset download URL from template
Missing signature for asset %@
Missing download token for asset %@
Inconsistent signature type for asset %@, Asset was %@, container does not support
Expected non-nil error for asset %@
Invalid package manifest for package %@
No package manifest found for package %@
Expected non-nil asset
Expected non-nil asset for item %@
@16@?0@"CKDMMCSItemGroup"8
Expected non-nil assetCache for %@
Expected non-nil fileURL for %@
Expected a valid sectionIndex: %ld
Operation was cancelled
Couldn't find section at index %ld for package %@
v24@?0Q8^B16
Invalid section index %ld(%lu) for package %@
Expected 0 non-empty items in the empty section %@
down|%@|%@|section:%lu
v16@?0@"CKDMMCSItem"8
Missing path for the package manifest
Invalid section index %ld for package %@
@16@?0Q8
Expected non-0 maxPackageDownloadsPerBatch
Expected max downloading tasks: %@
Expected completed tasks: %@
DownloadAssetsFakeMMCSError
v24@?0@"CKDMMCSItem"8@"NSDictionary"16
v16@?0@"CKDMMCSItemGroupSet"8
Failed to fill out download URL for asset %@
ProtectedTranscodingService
DownloadAssetsFromTranscodingService
FakeConstructedAssetDownloadParameters
TranscoderServiceName
TranscoderFunctionName
transcode
TranscoderPermittedRemoteMeasurement
[%@] (%lu operations, %lu requests, %0.2f total duration (%0.2fq/%0.2fe), data u/d: %lu/%lu, %lu connections (%lu created))
 MMCS metrics: %lu requests, (%0.2f total duration (%0.2fq/%0.2fe), data u/d: %lu/%lu, %lu connections (%lu created))
Recent errors: {
%@ - %@
range
Error fetching user quota from server: %@
v24@?0Q8@"CKDPResponseOperationResult"16
/api/client/record/resolveToken
routingKey
shortTokenHash
forceFetch
shouldFetchRootRecord
rootRecordDesiredKeys
participantId
CKDAssetZone.m
Expected Item for Zone %@ but Found %@
assetZoneKey=%@
-[CKDPAssetUploadTokenRetrieveRequestHeaderInfo writeTo:]
CKDPAssetUploadTokenRetrieveRequestHeaderInfo.m
Can't encode array %@ of unknown child class: %@
Can't encode object %@ of class %@
Nesting arrays not supported
CKDRecordFieldConversion.m
Invalid type %@ on encrypted field object %@
Did not expect encrypted types while creating field value
Invalid latitude/longitude value in location
@16@?0@"CKDPRecordFieldValue"8
Could not parse key for indexed list field operation: %@
Invalid value type for indexed list field key %@
Could not produce action for indexed list field key %@
bytesType
dateType
stringType
locationType
referenceType
assetType
int64Type
doubleType
emptyList
dateListType
bytesListType
locationListType
referenceListType
assetListType
stringListType
listType
int64ListType
doubleListType
packageType
encryptedBytesType
encryptedBytesListType
streamingAsset
streamingAssetList
mergeableValueType
encryptedMergeableValueType
%@: <%@: %p>
%@: <Watcher deallocated>
SystemAvailabilityState
CKDSystemAvailabilityMonitor.m
System does not have availability %lx
CKDPushConnectionDidReceivePublicTokenNotification
connected
disconnected
CKLogDomain
yyyy-MM-dd HH:mm
yyyy-MM-dd HH:mm:ss
HH:mm
HH:mm:ss
yyyy-MM-dd HH:mm ZZZ
yyyy-MM-dd HH:mm:ss ZZZ
yyyy-MM-dd HH:mm:ss.SSSSSSZZZ
HH:mm ZZZ
HH:mm:ss ZZZ
cryptoSessions
/setup/ck/v1/ckAppInit
Couldn't get container configuration from the server for container "%@"
cloudKitDatabaseGatewayUrl
cloudKitDatabaseUrl
cloudKitShareGatewayUrl
cloudKitShareUrl
cloudKitDeviceGatewayUrl
cloudKitDeviceUrl
cloudKitCodeGatewayUrl
cloudKitCodeUrl
cloudKitMetricsGatewayUrl
cloudKitMetricsUrl
cloudKitUserId
orgInfo
cloudKitOrgUserId
icloud
reservedSize
uploadURL
uploadURLExpirationTimeSeconds
Fetching Zone PCS
Saving Zones
Synchronizing User Key Registry
Error saving record zone to server: Protection data didn't match
Error saving record zone %@ to server: Protection data didn't match
SwizzleZoneSaveResponseToErrorZonePCSIdentityUnknown
SwizzleZoneSaveResponseToErrorZoneNotFound
zone pcs is created without the user's public key
-[CKDModifyRecordZonesOperation _handleRecordZoneSaved:responseCode:serverCapabilities:expirationDate:expired:]
CKDModifyRecordZonesOperation.m
Error saving record zone %@ to server: %@
Protection data didn't match
Error deleting record zone %@: %@
EnsureLastMissingManateeIdentityErrorDateOnZoneDelete
Failing zone delete for unit tests because we should have had a lastMissingManateeIdentityErrorDate
v44@?0@"CKRecordZoneID"8@"CKDPResponseOperationResult"16Q24@"NSDate"32B40
NO_ZONE_PCS_FOR_YOU
Couldn't create a new PCSShareProtectionRef because unit testing
ForceAddCKIdentityToZonePCS
NO_ZONE_PCS_FOR_SERVER
Couldn't create new PCS blob for zone %@
NO_ETAG_FOR_YOU
You can't save the default zone
/api/client/record/move
semantics
originId
originEtag
destinationEtag
destinationZoneProtectionInfoTag
destinationRecordProtectionInfoTag
destinationRecord
merge
failIfExists
failIfEtagMismatch
recordProtectionInfo
stableUrl
shareId
protectionInfoKeysToRemove
storageExpiration
com.apple.cloudd.volumeManager
field_id
corporateSharingEnabled
lastWebActivityUTCMills
countryCode
photosWebAccessTimestamp
accountFlags
domain
userInfo
token
asset
tokenExpiration
position
insert_after
@16@?0@"CKDShortTokenLookupInfo"8
@16@?0@"CKDPParticipant"8
 with shareID 
 without any shareID 
CKLStreamObserver.m
This must be called on a subclass
%sm%@
SIM: 
[37m%@
[0m %@[%d:%@:%@:%@]%@%@ %@
%@ %@[%d:%llu:%llu:%llu] %@
field_identifier
mergeable_deltas
platform
anonymous
explicit-credentials
mock
com.apple.cloudkit.account.authCallbackQueue
p9(7|8)-ckdatabase
AnonymousAccount
<%@ %p> ("%@" Account ID: %@)
Can't update account properties because we have no account
com.apple.cloudkit.account.authQueue
Can't renew our auth token since account is suspended and renewal is rate limited
Can't renew our auth token since we don't have access to the account
Can't renew credentials because we don't have an account
@"NSString"16@?0^@8
Got an iCloud auth token that has already failed a previous auth attempt
Can't reauth since we don't have access to the account
Request
Response
Request Object
Response Object
Response Configuration
Request Object Stream Reset
Unknown type
%li%@%li:
-[CKDTrafficLogger _logObject:ofType:]
CKDTrafficLogger.m
stringOffset == b64LogDataString.length
TrafficLogging
authorization
<Redacted string %ld characters long>
%li:%@
type
oplockFailure
uniqueFieldFailure
moveOplockFailure
expiredAppConfig
expiredGlobalConfig
badSyntax
forbidden
throttled
refused
notSupported
exists
requestAlreadyProcessed
badAuthToken
needsAuthentication
mescalSignatureMissing
invalidMescalSignature
opLockFailure
atomicFailure
resetNeeded
fieldsPerTypeLimitExceeded
typeBusy
numRecordTypesLimitExceeded
invalidContainer
invalidRecordTypeName
invalidFieldName
invalidFieldValue
invalidIdentifier
fieldNotQueryable
fieldNotSortable
queryFilterLimitExceeded
queryFilterValuesLimitExceeded
membershipQueryLimitExceeded
notificationAdditionalFieldLimitExceeded
notificationAdditionalFieldInvalidType
subscriptionLimitExceeded
uniqueTriggerLimitExceeded
triggerSubscriptionBindingTypeMismatch
zoneSizeLimitExceeded
zoneCountLimitExceeded
validatingReferenceError
fullResetNeeded
alreadyShared
emailOutOfNetwork
duplicateSubscription
expiredPutReceipt
quotaExceeded
zoneNotFound
invalidBundleId
unsupportedDevice
blocklisted
recordProtectionInfoTagMismatch
zoneProtectionInfoTagMismatch
assetSizeLimitExceeded
batchOperationLimitExceeded
requestSizeLimitExceeded
recordSizeLimitExceeded
databaseCommitSizeExceeded
userDeletedDataForZone
staleRecordUpdate
shareParticipantLimitExceeded
shareParticipantError
pcsChainingError
hierarchyAlreadyHasShare
u13Restricted
managedAppleIdRestricted
shareParticipantContactError
recordArchived
databaseAccessDenied
parentHierarchyDepthLimitExceeded
zonePcsUserIdentityUnknown
managedAppleIdBackupBlocked
outOfNetworkUsersUnsupported
gameAssignmentNotFound
queryBeginsWithValueLengthLimitExceeded
userResetEncryptedData
mergeableValueNotFound
invalidPublicKey
mergeableDeltaSizeLimitExceeded
mergeableDeltaNotFound
mergeableDeltaInvalid
mergeableValueCompactionRequired
unprovisionedICloudAccount
purgedICloudAccount
invalidDsidForICloudAccount
shareRegionUnsupported
+[NSStream(BoundPairAdditions) createBoundInputStream:outputStream:bufferSize:]
CKDProtobufStreamWriter.m
(inputStreamPtr != NULL) || (outputStreamPtr != NULL)
1.2.11
-[CKDProtobufStreamWriter open]
inputStream != nil
outputStream != nil
We just tried to finish compression twice
-[CKDProtobufStreamWriter _compressBodyData:shouldFlush:]
ret != Z_STREAM_ERROR
_zlibStream.avail_in == 0
I didn't order this stream, so why is it on my bill?
CKDMMCSClientProxyItemReader.m
Expected non-nil MMCS item for %@
Writing not supported
assetId
saveAssetRequest
saveAssetResponse
retrieveAssetResponse
targetZone
currentServerContinuationToken
clientChangeToken
deviceCount
assetQuotaUsage
metadataQuotaUsage
capabilities
zoneishPcsNeedsRolled
zoneKeyRollAllowed
zonePcsModificationTime
zonePcsModificationDevice
expired
expirationTime
CKShareService
/api/client/membership/query/stream
appPartition
alias
sortedBy
OBSOLETE_pcsServiceType
publicKeyRequested
v24@?0@"CKSQLite"8@"NSError"16
_debug
-[NSArray(CKDUploadAssetsOperationAdditions) CKSortedForUpload]_block_invoke
CKDUploadAssetsOperation.m
key1 && key2
[obj1 isKindOfClass:[CKAsset class]] && [obj2 isKindOfClass:[CKAsset class]]
0 <= index1 && 0 <= index2
com.apple.cloudkit.upload
@"NSArray"16@?0@"CKDAssetBatch"8
Fetch Configuration
Prepare For Upload
Fetch Upload Tokens
Upload
Expected non-nil package
Expected asset %@ to be marked as uploaded for %@
Invalid maxSectionChunkCount value: %lu
@16@?0@"CKPackageItem"8
-[CKDUploadAssetsOperation _planSectionsForPackage:error:]
isZeroFileSignature && "Expected zeroSizeFileSignature"
MMCSItem.chunkCount == 0 && "Expected MMCSItem.chunkCount == 0"
MMCSItem.fileSize == 0 && "Expected MMCSItem.size == 0"
i < packageItems.count
Invalid sectionChunkCount value: %lu
Number of expected file signatures did not match number of assets in package %@ (%lu versus %lu)
Did not find expected file signature for item %@ in package %@
Did not find expected file signature for asset %@
Invalid size for the manifest for package %@
nil fileURL property
nil container
-[CKDUploadAssetsOperation _prepareForUpload]
itemGroupSet.allItemGroups.count == 1
No auth request and no error
-[CKDUploadAssetsOperation _failAllItemsInAssetBatch:error:]
No authToken received for asset
No authPutResponse received for re-referenced asset
Atomic zone yo; something in the batch failed.
Expected nil error for %@
Invalid section %@ at index %lu/%lu
Expected non-nil reference signature for %@
Invalid section count %lu/%lu
Can't find section at index %lu
Expected non-0 maxPackageUploadsPerBatch
Expected max uploading tasks: %@
Expected non-0 size for the manifest for package %@
-[CKDUploadAssetsOperation _upload]
putItemGroupSet.allItemGroups.count == 1
timeStatistics
serverFields
bounds
label
criteria
rateLimit
ttlSec
Fetching PCS
CKDPublishAssetsOperation.m
Expected non nil recordID
Record %@ contained no matching asset fields to publish
/api/client/record/save
fieldsToDeleteIfExistOnMerge
conflictLoserUpdate
saveSemantics
recordProtectionInfoTag
conflictLosersToResolve
shareEtag
shareIDUpdate
parentChainProtectionInfoTag
failIfOutdated
override
Call _removeAnonymousShareFromSharedDB
v24@?0@"NSString"8@"CKDPResponseOperationResult"16
Fetch Deltas
Error fetching deltas for %@ from server: %@
B16@?0@"CKMergeableDelta"8
Unable to determine record ID for mergeable delta for value ID: %@
Failed to fetch PCS to decrypt mergeable delta
Failed to decrypt mergeable delta
CKDClientInfo.m
Use +[%@ sharedClientInfo]
com.apple.cloudkit.clientinfo.callback
UserAssignedDeviceName
v24@?0^{__CFString=}8^{__CFDictionary=}16
hostname
userToken
applicationVersion
applicationConfigVersion
globalConfigVersion
deviceIdentifier
deviceSoftwareVersion
deviceHardwareVersion
deviceLibraryName
deviceLibraryVersion
deviceProtocolVersion
locale
mmcsProtocolVersion
deviceAssignedName
deviceHardwareID
targetDatabase
userIDContainerID
isolationLevel
operationGroupQuantity
serviceIdentityKeyIDs
deviceSoftwareIsAppleInternal
assetAuthorizeGetRequestOptions
activeThrottlingLabel
deviceUDID
deviceSerialNumber
entitlementsValidated
requestOriginator
supplementalZoneInfos
privateDB
publicDB
sharedDB
orgDB
operation
recordId
assetFields
response
result
header
functionInvokeResponse
mergeableDeltaSaveResponse
mergeableDeltaMetadataRetrieveResponse
mergeableDeltaReplaceResponse
mergeableDeltaRetrieveResponse
shareVettingInitiateResponse
zoneSaveResponse
zoneRetrieveResponse
zoneDeleteResponse
zoneRetrieveChangesResponse
recordSaveResponse
recordRetrieveResponse
recordRetrieveVersionsResponse
recordRetrieveChangesResponse
recordDeleteResponse
recordResolveTokenResponse
recordMoveResponse
fetchArchivedRecordsResponse
userAvailableQuotaResponse
userRetrieveResponse
queryRetrieveResponse
assetUploadTokenRetrieveResponse
deleteContainerResponse
bundlesForContainerResponse
webAuthTokenRetrieveResponse
updateMissingAssetStatusResponse
shareAcceptResponse
anonymousShareAddResponse
anonymousShareRemoveResponse
subscriptionCreateResponse
subscriptionRetrieveResponse
subscriptionDeleteResponse
archiveRecordsResponse
markAssetBrokenResponse
userQueryResponse
userPrivacySettingsUpdateResponse
userPrivacySettingsResetResponse
userPrivacySettingsBatchLookupResponse
userPrivacySettingsRetrieveResponse
tokenRegistrationResponse
tokenUnregistrationResponse
setBadgeCountResponse
notificationSyncResponse
notificationMarkReadResponse
/api/client/anonymousShare/add
isDeleted
recordVersions
com.apple.security.view-become-ready
view
 named 
operationUUID
synchronousMode
last
requestSignature
anonymousCKUserID
noneType
zoneSaveType
zoneRetrieveType
zoneDeleteType
zoneRetrieveChangesType
recordSaveType
recordRetrieveType
recordRetrieveVersionsType
recordRetrieveChangesType
recordDeleteType
recordResolveTokenType
fetchArchivedRecordsType
recordMoveType
shareAccessType
queryRetrieveType
assetUploadTokenRetrieveType
containerDeleteType
userAvailableQuotaType
containerGetBundlesType
webAuthTokenRetrieveType
dataRepairUpdateMissingAssetStatusType
addAnonymousShareType
removeAnonymousShareType
subscriptionCreateType
subscriptionRetrieveType
subscriptionDeleteType
mergeableDeltaSaveType
mergeableDeltaMetadataRetrieveType
mergeableDeltaReplaceType
mergeableDeltaRetrieveType
userRetrieveType
userQueryType
userPrivacySettingsRetrieveType
userPrivacySettingsUpdateType
userPrivacySettingsResetType
userPrivacySettingsBatchLookup
shareAcceptType
shareVettingInitiateType
pushRegisterType
pushUnregisterType
pushBadgeType
pushSyncType
pushReadType
archiveRecordsType
datarepairMarkAssetBrokenType
functionInvokeType
CKDProtobufResponseBodyParser.m
You can't use %@ without setting a message class
_parserData has insane length %lu
Couldn't read the size of the next object from the server
_curObjectLength has insane length %lu
ParserData length %lu isn't greater than varIntLen of %lu (objectLength %llu)
Couldn't parse an object from the server
ParserData length %lu isn't greater than self.curObjectLength of %lu
Parser had %lu additional unparsed bytes remaining
Someone is parsing on another thread!
Error saving record subscription with id %@ to server: %@
Error deleting subscription %@: %@
Subscription fails conversion: %@
Subscription with a nil notificationInfo: %@
contentRequestHeaders
contentRequestAuthorizeGetOptions
/api/client/record/versions
minimumVersionEtag
@16@?0@"CKMovePhotosChange"8
@"CKTuple2"16@?0@"CKMovePhotosChange"8
CKDMovePhotosOperation.m
Not expected to move shares
Not expected to delete records in a move
How'd a move operation get a non-move handler?
moveCallbackWithMetadata:error: called twice on %@
@16@?0@"CKRecord"8
How did a move operation decide to delete records?
v48@?0@"CKDPResponseOperationResult"8@"CKRecordID"16@"CKRecord"24@"CKRecord"32@"CKRecord"40
Couldn't decrypt destination record returned from the server in response to our move of record %@
v24@?0@"CKRecord"8@"NSError"16
Couldn't decrypt move marker record returned from the server in response to our move of record %@
Got a response for record with ID %@, but we didn't try to move that record.
Record PCS oplock failed
Record
Zone PCS oplock failed
Zone
Share Etag Oplock failure
Share
Error moving record %@ on server: "%@"
Error moving record %@ on server: Protection data didn't match
Failed to decrypt the server record %@ returned from oplock failure.
Error moving record %@ on server: %@
requestedTTL
publishedURL
streamingURL
chunkInfoUrl
appQuote
aqeQuote
pckCertificate
routingToken
bundleID
functionInvokeRequest
mergeableDeltaSaveRequest
mergeableDeltaMetadataRetrieveRequest
mergeableDeltaReplaceRequest
mergeableDeltaRetrieveRequest
shareVettingInitiateRequest
zoneSaveRequest
zoneRetrieveRequest
zoneDeleteRequest
zoneRetrieveChangesRequest
recordSaveRequest
recordRetrieveRequest
recordRetrieveVersionsRequest
recordRetrieveChangesRequest
recordDeleteRequest
recordResolveTokenRequest
recordMoveRequest
fetchArchivedRecordsRequest
userAvailableQuotaRequest
userRetrieveRequest
queryRetrieveRequest
assetUploadTokenRetrieveRequest
deleteContainerRequest
bundlesForContainerRequest
webAuthTokenRetrieveRequest
updateMissingAssetStatusRequest
shareAcceptRequest
anonymousShareAddRequest
anonymousShareRemoveRequest
subscriptionCreateRequest
subscriptionRetrieveRequest
subscriptionDeleteRequest
archiveRecordsRequest
markAssetBrokenRequest
userQueryRequest
userPrivacySettingsUpdateRequest
userPrivacySettingsResetRequest
userPrivacySettingsBatchLookupRequest
userPrivacySettingsRetrieveRequest
tokenRegistrationRequest
tokenUnregistrationRequest
setBadgeCountRequest
notificationSyncRequest
notificationMarkReadRequest
/api/client/atomBatch/replace
deltaIdentifiers
ignoreMissingDeltas
containsNewData
metadata
continuation
/api/client/pushRegister
tokenRegistrationBody
version
/api/client/privacy/retrieve
Share metadata for the share at URL %@ doesn't have protection data on it
Unable to create public PCS blob using metadata %@ (private token was: %@, share's public PCS blob was %@)
first
second
Unknown error while trying to initiate vetting process for participant %@: %@
The address of participant %@ is already vetted to caller
This address is vetted to a different Apple ID
This account has too many vetted email addresses and another cannot be added
VETTING_PASSWORD_DIALOG
User session has expired and we were unable to re-authenticate user during vetting
Unable to vet due to failed authentification even after successful authentication attempt, giving up
Error code %ld while trying to initiate vetting process for participant %@
v24@?0q8@"CKDPResponseOperationResult"16
hashedEmailAddressType
containerUserIdentifier
hashedCanonicalPhoneNumber
Invalid subscription
The subscription could not be converted because it is invalid: %@
v24@?0@"NSMutableDictionary"8@"NSError"16
_locked_encryptShareTuples zonePCSData is still not available. Terminating without additional retry.
Error generating ckAnonymousShareHashIdentifier for CKDAnonymousShareTuple.
CKDAnonymousShareTuple
Failed to encrypt some anonymous share tuples.
_locked_decryptShareTuple zonePCSData is still not available. Terminating without additional retry.
_locked_decryptShareTuple Unable to decrypt share tuple data.
zoneish 
com.apple.cloudkit.anonymousSharingManager.queue
bundleIdentifier
apnsEnv
skipBundleIDCheck
development
share
bytesValue
signedValue
doubleValue
dateValue
stringValue
locationValue
referenceValue
assetValue
listValue
packageValue
streamingAssetValue
mergeableValue
encryptedMergeableValue
isEncrypted
downloadURL
downloadURLExpirationTimeSeconds
intervalLengthSec
allowedRequestCount
repeatEverySec
startTimeSecondsAfterUnixEpoch
startTimeSecondsAfterLocalMidnight
publicKeyID
reference
/api/client/pushSync
serverChangeToken
maxChanges
wantsChanges
Checking Zone PCS
Repairing PCS
int64Value
boolValue
PBUNSET
/api/client/webauth/retrieve/token
apiToken
forceFetchToken
containerScopedUserId
syncContinuationToken
movedRecordDestinationIdentifier
<%@ %p> [Type: %@, Seq: %ld, Len: %lu, UUID: %@]
com.apple.cloudkitlog.parseandprint
LogFacilityTraffic
Traffic
traff-cont: 
LogFacilityTrafficBinary
TrafficBinary
B32@?0@"CKLTrafficLogMessageFragment"8Q16^B24
cloudkitlog parse error: A traffic log packet for request %@ was likely dropped. Was expecting sequence number %li but received %li. Will attempt to parse but might be unsuccessful
CKDPRequestOperation
-[CKLStreamTrafficObserver parseRequestArrayAndPrint:]
CKLStreamTrafficObserver.m
cloudkitlog parse error: Request objects parsed with error %@
cloudkitlog parse error: Response objects parsed with error %@
cloudkitlog parse error: request object parser timed out for request %@. Likely lost some request object data logs.
cloudkitlog parse error: received request object data for request %@ but wasn't able to parse a single request object
/tmp/%@.request.dat
Wrote raw request data to %@
cloudkitlog parse error: received response object data for request %@ but wasn't able to parse a single response object
/tmp/%@.response.dat
Wrote raw response data to %@
Finished
-[CKLStreamTrafficObserver parserFromConfigurationMessage:]
v16@?0@"CKLTrafficLogMessage"8
Traffic log for request %@
ICLOUD
splunk-qa.icloud.apple.com
splunk.icloud.apple.com
/en-US/app/launcher/search
earliest
latest
search index=ck* %@
>>>>>>>> Request
=>=>=>=>=>Body stream was reset %li time%@. This was what was streamed the final time:
<<<<<<<< Response
Status %lu
End traffic log for operation %@
%@: %@
v32@?0@"CKUserIdentityLookupInfo"8@"CKUserIdentity"16@"NSError"24
/api/client/share/accept
selfAddedPcs
publicKey
publicKeyVersion
acceptedInProcess
@16@?0@"CKRecordZoneID"8
fieldValue
equals
notEquals
notIn
lessThan
lessThanOrEquals
greaterThan
greaterThanOrEquals
near
containsAllTokens
containsAnyTokens
listContains
listNotContains
listContainsAny
listNotContainsAny
beginsWith
notBeginsWith
listMemberBeginsWith
notListMemberBeginsWith
listContainsAll
listNotContainsAll
operationType
operationQualityOfService
sourceAppBundleIdentifier
CKStartDate
CKDuration
CKBytesUploaded
CKBytesDownloaded
CKConnections
CKConnectionsCreated
CKRecordsUploaded
CKRecordsDownloaded
CKRecordsDeleted
CKAssetsUploaded
CKAssetsUploadedFileSize
CKAssetsDownloaded
CKAssetsDownloadedFileSize
CKRetries
CKNumberOfRequests
CKProtoRequestOperationsByCount
MMCSDuration
MMCSBytesUploaded
MMCSBytesDownloaded
MMCSConnections
MMCSConnectionsCreated
MMCSNumberOfRequests
MMCSTotalBytesByChunkProfile
MMCSChunkCountByChunkProfile
MMCSFileCountByChunkProfile
types
filters
sorts
distinct
queryOperator
creationDate
modificationDate
creatorUserRecordID
lastModifiedUserRecordID
recordChangeTag
shareID
Unsupported operation for special key-path allTokens
Unexpected reference type
Unexpected operator for predicate
Unexpected filter type
errorKey
CKPluginUnknownDomain
Error, details unknown
CKDPParticipant_ShareParticipantKeyHealth CKDPShareParticipantKeyHealthForCKShareParticipantInvitationTokenStatus(CKShareParticipantInvitationTokenStatus)
CKDEnumConversion.m
Unexpected share participant invitation token status: %ld
CKDPShare_Permission CKDPSharePermissionForCKShareParticipantPermission(CKShareParticipantPermission)
Unexpected share participant permissions: %ld
CKDPParticipant_ShareParticipantType CKDPShareParticipantTypeForCKShareParticipantRole(CKShareParticipantRole)
Unexpected share participant role: %ld
responseUUID
authGetResponseBody
responseHeaders
extensionName
typeCode
extensionPayload
CKDMMCSItemReaderWriter.m
Expected an invalid file handle for %@
Expected a valid file handle for %@
pread error: %d (%s)
pwrite error: %d (%s)
createdBy
fields
modifiedBy
conflictLoserEtags
modifiedByDevice
pluginFields
permission
shareInfo
chainPrivateKey
chainProtectionInfo
chainParent
tombstonedPublicKeyIDs
zoneishPrimaryKeyId
readOnly
readWrite
/api/client/record/delete
participantKeyLost
publicKeys
com.apple.cloudkit.UploadPackages
com.apple.cloudkit.packagepurger
com.apple.cloudkit.packageGarbageCollection
B24@?0@"NSString"8@"NSArray"16
B24@?0@"NSURL"8@"NSError"16
CKDPackageDirectoryPurger.m
Expected: %@ to be a directory
%K IN %@
distanceToLocation:fromLocation:(%K, %@) < %f
ALL tokenize(%@, 'cdl') IN allTokens
ANY tokenize(%@, 'cdl') IN allTokens
%K CONTAINS %@
ANY %@ IN %K
%K BEGINSWITH %@
ANY %K BEGINSWITH %@
ALL %@ IN %K
NSTruePredicate
Unexpected predicate type: %@
distanceToLocation:fromLocation:
Searching for locations outside of a specified circular area is not supported: %@
Expected search radius on right hand side of operator: %@
Expected search radius on left hand side of operator: %@
Expected expected 2 arguments for function distanceToLocation:fromLocation: %@
Expected NSKeyPathExpressionType argument for distanceToLocation:fromLocation:
Expected CLLocation argument for distanceToLocation:fromLocation: but got %@
a nil location
Expected NSString or NSData on right hand side: %@
Expected array with two number arguments on right hand side, but got %@: %@
Expected array with two number arguments on right hand side: %@
allTokens
Required string or tokenize() arguments when comparing to special key-path allTokens: %@
tokenize:using:
Required NSCaseInsensitivePredicateOption, NSDiacriticInsensitivePredicateOption, and NSLocaleSensitivePredicateOption tokenization options on tokenize() function: %@
Required string argument when using tokenize(), but got %@: %@
Required string or tokenize() arguments when searching special key-path allTokens: %@
Enumerating special key-path allTokens is not allowed: %@
Required NSCaseInsensitivePredicateOption, NSDiacriticInsensitivePredicateOption, and NSLocaleSensitivePredicateOption comparison predicate options: %@
Required predicate modifier ANY or ALL when searching special key-path allTokens: %@
Required tokenize() operand when searching special key-path allTokens: %@
Required comparison operators TOKENMATCHES or IN when searching special key-path allTokens: %@
Expected key-path in comparison expression: %@
Expected constant value in comparison expression: %@
Aggregate operator ALL not allowed for comparison expression: %@
Aggregate operator ANY not allowed for comparison expression: %@
Type '%@' not allowed in comparison expression: %@
Predicate comparison options are not supported for expression: %@
Unexpected expression: %@
Expected comparison subpredicate: %@
Invalid NOT predicate: %@
q24@?0@"CKDPQueryFilter"8@"CKDPQueryFilter"16
constructedAssetDownloadParameters
@16@?0@"PCCWrappedKey"8
com.apple.cloudkit.parser.
This method must be subclassed in class %@
com.apple.reminders
CKDPCSKeySyncNonManateeServiceName
 YES
 error: 
com.apple.cloudkit.keySyncQueue
Failed to sync user keys
v16@?0@"PCSMTT"8
Underlying key sync error
CKDPCSKeySyncManager.m
Must provide a service name to syncUserKeys
No account DSID, so we can't sync with the user key registry
v24@?0B8@"NSError"12B20
PCS Sync throttled
Recently synced keys for the %@ service %f seconds ago. Throttling...
Invalid state. Received a completed handler. Expected a fresh one.
Error fetching subscription %@
v32@?0@"CKSubscription"8@"NSString"16@"CKDPResponseOperationResult"24
Error fetching all subscriptions from server: %@
v16@?0@"CKDPResponseOperationResult"8
___zoneUpdateData
CKDModifyShareHandler.m
%s called on handler %@ but it isn't in the state %s
-[CKDModifyShareHandler sideEffectRecordIDs]
CKDModifyRecordHandlerStateNeedRecordSideEffects
-[CKDModifyShareHandler fetchSharePCSData]
CKDModifyRecordHandlerStateNeedSharePCSData
Public sharing identity on share %@ does not match the public sharing identity from its root record (%@).
DisallowSharePCSToBeCreated
Share PCS creation not allowed by unit test
Can't save a share in the public database
Public sharing identity on share %@ is different. Expected %@, got %@
Couldn't create a public sharing identity for share %@
Can't save share %@ because we're missing PCS data. Public PCS: %@, Private PCS: %@
Didn't get PCS data for zone %@
Couldn't add invited PCS to zone PCS for zone-wide share %@
Couldn't update signing key on invited pcs for share %@
-[CKDModifyShareHandler prepareForSave]
CKDModifyRecordHandlerStateNeedRecordPrepareForUpload
ForceSendPublicKeyForAnonymousParticipants
ShouldRollSharePCSOnFetch
Couldn't serialize private share PCS for share %@: %@
Couldn't create a PCS etag for share %@: %@
Couldn't serialize public share PCS for share %@: %@
Couldn't create a public PCS etag for share %@: %@
Couldn't serialize zone update PCS for share %@: %@
Couldn't serialize zoneish update PCS for share %@: %@
_rawZonePCSUpdateByes
_rawZonePCSUpdateEtag
_rawZoneishPCSUpdateByes
Error adding private sharing PCS to public sharing PCS for share %@: %@
Error adding public sharing PCS to private sharing PCS for share %@: %@
Error removing public sharing PCS from private sharing PCS for share %@: %@
Error cleaning up public PCS for share %@: %@
Couldn't get a current public CloudDocs identity for the owner on share %@
Couldn't create invited PCS for share %@
Read-write
Read-only
Couldn't change per participant PCS permission on share %@
DONT-REMOVE-MY-KEY
Could not remove PPPCS public key from invited PCS for participant %@
No participant PCS or PPPCS public key exists for participant %@
Couldn't remove per-participant PCS from invited PCS for participant %@: %@
Couldn't create a public key for the owner participant on share %@
No private OON key exists for participant %@
No public sharing key exists for participant %@
Couldn't create an identity from the public sharing key for participant %@: %@ (key was %@)
OON 
NoOwnerPPPCS
Couldn't add per-participant PCS to invited PCS for participant %@: %@
Couldn't create a per-participant PCS for participant %@: %@
Cannot add participant %@ with missing public key to share
Couldn't create a manatee sharing invitation data for participant %@: %@
Couldn't add public identity to per-participant PCS for participant %@: %@
Should never get here with a nil manateeInvitationData
Couldn't serialize per-participant PCS for participant %@: %@
Couldn't create an identity from the public sharing key %@
@16@?0@"CKShareParticipant"8
Share handler called back with a CKRecord instead of a CKShare
/api/client/subscription/create
subscription
Couldn't open os log event store: %@
v24@?0@"OSLogEventSource"8@"NSError"16
Couldn't open os log event live store: %@
v24@?0@"OSLogEventLiveSource"8@"NSError"16
v16@?0@"OSLogEventProxy"8
IMadeUpThisErrorDomain
v16@?0Q8
v24@?0Q8@"OSLogEventStreamPosition"16
_has
has%c%s
_%sCKLogValue
%@%d
 failure
    
      
        
          
            
              
                
device
comment
user
overloaded
notFound
containerUnavailable
mescalSignatureParseError
zoneBusy
zoneUnavailable
invited
accepted
unsubscribed
administrator
publicUser
payload
encryptedTimestamps
Mergeable delta envelope context generation failed, missing delta identifier
Mergeable delta envelope context generation failed, invalid mergeable value ID
%@-%@-%@-%@-%@
Mergeable delta envelope context generation failed, invalid context encoding
Mergeable delta encryption failed, missing delta payload
Failed to encrypt delta payload
Mergeable delta decryption failed, encrypted payload missing
Failed to decrypt mergeable delta payload
Can't unwrap asset key for mergeable delta with no record ID
Can't unwrap asset key for mergeable delta with no field name
Failed to unwrap mergeable delta asset key
Failed to decrypt mergeable delta envelope
Failed to create mergeable delta envelope
Mergeable delta envelope missing
Failed to authenticate mergeable delta timestamps
Failed to encrypt mergeable delta timestamps
Failed to verify mergeable delta timestamps
CKEnvelopeData
CKEncryptedTimestampsKey
CKEnvelopeAuthenticatedTimestampsKey
text
localizedKey
localizedArguments
actionLocKey
launchImage
soundName
category
title
titleLocalizedKey
titleLocalizedArguments
subtitle
subtitleLocalizedKey
subtitleLocalizedArguments
idAndEtag
fullRecord
recordDeleted
/api/client/record/archives
archiveContinuationToken
newestFirst
limit
firstName
lastName
isInNetwork
field
assets
contentBaseURL=%@
owner=%@
requestor=%@
complete
use-download-preauth
error=%@
containerPrivacySettings
subscriptions
recordForOplockFailure
chunk
fetch-chunks
preauth
inline-put-complete
chunk-padding
-[CKDMMCS drop]_block_invoke
CKDMMCS.m
self.checkoutCount > 0
x-apple-mmcs-proto-version
Expected non-nil path: %@
Expected non-nil application bundle ID
+[CKDMMCS MMCSWrapperForApplicationBundleID:directoryContext:database:error:]_block_invoke
(wasCached || assetCache) && "MMCS engine context was cached or we created an asset cache"
Expected non-nil MMCS engine context
-[CKDMMCS dealloc]
_didDrop && "failed to drop CKDMMCS dealloc"
-[CKDMMCS getMMCSEngine]
0 && "already dropped"
-[CKDMMCS getMaxChunkCountForSection]
-[CKDMMCS _referenceIdentifierFromAssetKey:]
-[CKDMMCS _logMMCSOptions:]
<key hash: %@>
@16@?0@"NSDictionary"8
@"CKTuple2"24@?0@"NSString"8@16
-[CKDMMCS _contextToRegisterItemGroup:operation:options:completionHandler:]
Fetching
Registering
-[CKDMMCS _contextToRegisterItemGroup:operation:options:completionHandler:]_block_invoke
MMCSItem.signature
v16@?0@"CKDMMCSItemGroupContext"8
-[CKDMMCS registerItemGroupSet:operation:options:completionHandler:]
-[CKDMMCS _contextToGetOrPutChunkKeysItemGroup:operation:options:completionHandler:]
GetChunkKeys
PutChunkKeys
Null item signature
No auth-token for item: %@
-[CKDMMCS getChunkKeysItemGroupSet:operation:options:completionHandler:]
-[CKDMMCS _contextToGetItemGroup:operation:options:progress:command:completionHandler:]
Zero item ID
Fetching asset batch failed
-[CKDMMCS getItemGroupSet:operation:shouldFetchAssetContentInMemory:options:progress:command:completionHandler:]
-[CKDMMCS _contextToPutItemGroup:operation:options:progress:completionHandler:]
Null signature
Null auth-token
Saving asset batch failed
-[CKDMMCS putItemGroupSet:operation:options:progress:completionHandler:]
-[CKDMMCS putChunkKeysItemGroupSet:operation:options:completionHandler:]
-[CKDMMCS CKStatusReportArray]
Empty MMCS Status
-[CKDMMCS _getRegisteredItemsGreaterThan:itemIds:itemCount:error:]
-[CKDMMCS registeredItemCount:error:]
-[CKDMMCS showRegisteredItems]
-[CKDMMCS _unregisterItemIDs:]
-[CKDMMCS unregisterItemIDs:]
-[CKDMMCS _contextToPutSectionItem:operation:options:progress:completionHandler:]
nil section ID
-[CKDMMCS putSectionItem:operation:options:progress:completionHandler:]
-[CKDMMCS _contextToGetSectionItem:operation:options:progress:completionHandler:]
Fetching section failed
-[CKDMMCS getSectionItem:operation:options:progress:completionHandler:]
CKDMMCSEngineContext *mmcsEngineContext(CKDMMCSItemGroupContext *__strong)
Expected non nil CKDMMCSEngineContext
void CKDMMCSCheckRegisterCompleteCallback(void *, CFDictionaryRef)_block_invoke
Invalid response from MMCS
Item not found
itemID mismatch
fetch
register
Fetched
Registered
B16@?0@"CKDMMCSItem"8
Failed to register all assets
void CKDMMCSFetchOrRegisterCompleteCallback(void *, CFDictionaryRef, BOOL)
Stale chunk state found during registration when none expected
Failed to check registered asset
Failed to register asset
CKDMMCSFetchOrRegisterCompleteCallback
MMCSItem.fileSize == 0 && "MMCSItem.size == 0"
MMCSItem.chunkCount != 0 && "Expected MMCSItem.chunkCount != 0"
Expected either an error or a authPutRequest on the completion of the GetChunkKeys
CKDMMCSUpdateCompleteCallback_block_invoke
[MMCSItem.signature isEqualToData:signature]
Failed to update asset
Expected either an error or a putReceipt on the completion of the PutChunkKeys
uint32_t CKDownsizeOrDie(NSUInteger)
CloudKit-Prefix.pch
That number was ridiculous
CKDMMCSItem.m
Expected non-nil record for %@
itemID=%llu
putPackageSectionIdentifier=%@
trackingUUID=%@
size=%llu
paddedSize=%llu
offset=%llu
recordKey=%@
path="%@"
signature=%@
deviceID=%@
fileID=%@
generationID=%@
fileHandle="%@"
authToken=%@
uploadReceipt=%@
uploadReceiptExpiration=%@
temporary
read-encrypted
read-from-client-proxy
has-download-preauth
nil UUID
Requested to read bytes using client proxy when shouldReadAssetContentUsingClientProxy is NO
Need Record Side Effects
Need Record PCS Data
Need Share PCS Data
Need Asset Record Fetch
Need Asset Upload
Need Prepare For Upload
Need Record Upload
Need Mergeable Delta Upload
Record Upload Complete
Needs Refetch
Needs Share Participant Fetch
Atomic Failure
Permanent Failure
Retryable Failure
Completed
ShareID
RecordID
<%@ %p> (%@: %@ %@%@)
 (isDelete)
CKDModifyRecordHandler.m
-[CKDModifyRecordHandler sideEffectRecordIDs]
-[CKDModifyRecordHandler fetchRecordPCSData]
CKDModifyRecordHandlerStateNeedRecordPCSData
Lost a record: %@
Fetching signing PCS for records to delete when not needed
Unexpectedly setting signing PCS
Couldn't create public sharing identity for record %@
Need a PCS Manager (%@, %@, %@)
Record %@ isn't in the private database, doesn't have a share or parent set and isn't a share
record does not exist
no PCS data and no error
Parent record %@ in the same batch didn't have chain PCS data on it for record %@
Couldn't get PCS data for share %@ to add to record %@
Record %@ refers to share %@ but that item is a record, not a share
Didn't get PCS data for share %@
Share record %@ referenced by record %@ does not exist on the server
Didn't get dependent PCS data to roll record PCS for %@
Didn't get PCS data for share %@ to add to record %@
Got the same parent and previous parent on record %@
Couldn't remove previous parent PCS data for previous parent %@
Couldn't fetch parent PCS data for parent record %@
Parent record %@ does not exist on the server
Couldn't decrypt the chain PCS blob on parent record %@
Couldn't add parent PCS data from record %@ to record %@
DisallowRecordPCSToBeCreated
Record PCS creation not allowed by unit test
 and share 
TwoByteZoneishKeyIDs
ZoneishKeyIDWithOnlyTwoValidBytes
RandomZoneishKeyID
Couldn't fetch a zoneish PCS from zone %@ for record %@
Can't create a record PCS for %@ because there is no %@%@%@
zone PCS data 
 and no 
share PCS
We couldn't decrypt the zone PCS and this isn't a share, so we can't create a new record PCS for %@
Couldn't create a new record PCS for %@
_NEW_PROTECTION_DATA_PLOX
Couldn't fetch PCS for zone %@
Couldn't fetch PCS for share %@
Couldn't fetch PCS for parent %@
UNIT_TESTING_FAIL_PCS_ETAG_CHECK
Attempted PCS data (%@) had a different identifier than the server PCS data (%@) for record %@
Couldn't create a parent PCS for record %@
Couldn't create a public sharing key for record %@
-[CKDModifyRecordHandler fetchSharePCSData]
first element of asset array is not a CKAsset
-[CKDModifyRecordHandler prepareAssetsForUploadWithError:]
CKDModifyRecordHandlerStateNeedAssetUpload
Expected non-nil record for handler %@
Expected non-nil recordID for %@
Error preparing asset for upload for key "%@" on record %@: %@
B32@?0@8@"NSString"16@"CKMergeableDeltaID"24
Invalid list of heterogenous values for field name %@ in recordID %@
up|%@
Expected non-nil recordKey for %@
Packages not supported with clear asset encryption.
-[CKDModifyRecordHandler prepareForSave]
Couldn't encrypt data on record %@
EEEEEEEEEENCRYPTION_BREAKER
CKDAnonymousShareZoneID
CKDAnonymousShareShareID
CKDAnonymousShareHashIdentifier
radius
/api/client/subscription/retrieve
/api/client/datarepair/updateMissingAssetStatus
idx (%lu) is out of range (%lu)
missingAssetStatusRecordID
recovered
assetSize
assetPutReceipt
packageAssetSize
packagePutReceipts
anonymousZoneInfoID
anonymousZoneInfoData
content
CKDAccountNotifier.m
Observer cannot be nil
/api/client/atomBatch/retrieve
public key
public key signature
version signature
expiration
expiration signature
certs
protection source
Invalid server public key payload
Failed to verify public key data.
com.apple.cloudkit.tokenregistration
CKDTokenRegistrationScheduler.m
token must not be nil
com.apple.cloudkit.CloudKitUnitTestsHost
exportedPCSData
shareePublicKeyData
com.apple.cloudkit.operationFinished
com.apple.cloudkit.dugongKeyRollOperationFinished
containerEnvironmentString
operationClass
qualityOfService
qualityOfServiceString
applicationBundleID
errorCode
errorChain
errorName
CKQueueing
CKExecuting
MMCSQueueing
MMCSExecuting
recordIDCount
shouldFetchAssetContent
desiredKeysCount
recordZoneIDsCount
fetchAllChanges
recordToSaveCount
recordIDsToDeleteCount
savePolicyString
atomic
hasServerChangeToken
resultsLimit
com.apple.cloudkit.keyRegistrySyncFinished
shouldThrottle
isManatee
keySyncResult
overallResult
keySyncDurationSec
throttledDurationSec
context
pcsCreation
pcsPreflight
pcsDecryption
userIdentityUnknown
KRSReturnedExistingIdentity
created
expires
-[CKDPResponseOperationHeaderAssetAuthorizationResponseHeaderInfo writeTo:]
CKDPResponseOperationHeaderAssetAuthorizationResponseHeaderInfo.m
wrappedInvocationKey
@16@?0@"CKDPUserPrivacySettingsBatchLookupResponseContainerPrivacySettings"8
lastItem
/api/client/privacy/update
Call UpdateMissingAssetStatus
protectedFullToken
ownerParticipant
callerParticipant
participantPermission
participantState
participantType
rootRecordType
attestations
testDevice=%@
defaultDevice
v24@?0@"<CKXPCLogicalDeviceScopedClient>"8@"NSError"16
v16@?0@"<CKXPCLogicalDeviceScopedClient>"8
Daemon timed out waiting for adopter to read bytes for %@
Adopter failed to read bytes for %@
accountServiceSignedToken
operationId
operationGroupId
transcodeServerPublicKey
Operation %@ was not provided a transcode server hostname
TranscodeServerPublicKeyURL
Server configuration did not contain CMP public key URL
Server configuration did not contain assetKeyEncryption URL info
Could not find assetKeyEncryption URL for template URL %@
Couldn't create URL from transcode server URL string: %@
Determining public key URL
Fetching cached public key data
Fetching remote public key data
TranscodeServerKeyCertificate
1.2.840.113635.100.6.2.17
1.2.840.113635.100.6.68
ProtocolNamme
SelectorName
isCompletionCallback
ArgumentTypes
CKDLongLivedOperationPersistedCallback.m
Selector %@ not part of expected protocol %@
Unexpectedly nil reply block for -[%@ %@]
Unsuitable object type %@ for -[%@ %@]
Argument-%lu
v24@?0Q8Q16
v16@?0@"NSInvocation"8
data
encryptedData
encryptedAsset
Assets.db
itemID
lastUsedTime
volumeIndex
fileID
generationID
path
status
modTime
fileSize
chunkCount
ITEMID
assetHandleExistsInDatabase
itemID == $ITEMID
assetHandleWithUUID
saveStatus
saveChunkCount
saveLastUsedTime
oldestLastUsedTime
saveStatusAndChunkCount
STATUS
assetHandlesWithStatus
status=$STATUS
FILE_SIGNATURE
interruptedAssetWithSignature
fileSignature = $FILE_SIGNATURE AND status = $STATUS
volumeUUID
v24@?0@"CKDAssetVolume"8^B16
AssetHandle
AssetVolume
open failed at %@: %d (%s)
fcntl(F_GETPATH) failed at %@: %d (%s)
fstatfs failed at %@: %d (%s)
getattrlist on %s failed: %d (%s)
paths don't match: %@ != %@
-[CKDAssetCache drop]_block_invoke_2
CKDAssetCache.m
checkoutCount > 0
-[CKDAssetCache _deleteAssetHandlesAndUnregisterItemsForUnmountedAssetVolumes]
INDEX
UNREGISTERING
UnmountedVolumeSearch
volumeIndex=$INDEX AND status!=$UNREGISTERING
UnmountedVolumeDelete
volumeIndex=$INDEX
-[CKDAssetCache clearForced:]_block_invoke
-[CKDAssetCache clearAssetCache]_block_invoke
-[CKDAssetCache checkAssetHandlesForRegisteredMMCSItems:]_block_invoke
cachedAndRegistered
-[CKDAssetCache showAssetCache]_block_invoke
%@, %@, %@, %@, %@, %@
not found
modified
%0.2f
expected but missing
none expected
-[CKDAssetCache unregisterItemsAndDeleteUnregisteredAssetHandlesWithIDs:deleteUnregisteredAssetHandlesWithIDs:]
MMCS && "nil MMCS object"
performUnregisterItemsAndDeleteUnregisteredAssetHandlesWithIDs
status = %ld AND (itemID = $K1 OR itemID = $K2 OR itemID = $K3 OR itemID = $K4 OR itemID = $K5 OR itemID = $K6 OR itemID = $K7 OR itemID = $K8)
v16@?0@"NSNumber"8
Expected non-nil data
Invalid path
Expected non-nil MMCS items array
Expected non-nil signature for %@
Invalid signature for zero size file
-[CKDAssetCache _getAssetHandlesForCachedButNotRegisteredMMCSItems:error:]
fileMetadata.fileSize.unsignedLongLongValue == 0 && "Expected fileMetadata.fileSize.unsignedLongLongValue == 0"
Expected non-nil error
-[CKDAssetCache updateAssetHandlesForRegisteredMMCSItems:error:]_block_invoke
MMCSItem.itemID != 0 && "MMCSItem.itemID != 0"
File appears to have changed during registration
Stale chunk state found during registration
-[CKDAssetCache updateAssetHandlesForChunkedMMCSItems:error:]_block_invoke
-[CKDAssetCache updateAssetHandlesForGetMMCSItems:error:]_block_invoke
MMCSItem.itemID != 0 && "0 itemID"
MMCSItem.fileURL && "nil MMCSItem.fileURL"
-[CKDAssetCache updateAssetHandlesForPutMMCSItems:error:]_block_invoke
Expected non-nil cached but not registered MMCS items
Expected non-nil file download path
-[CKDAssetCache trackCachedButNotRegisteredMMCSItems:error:]_block_invoke
handles and items count don't match
rename failed: %d (%s)
no asset handles
v32@?0@8@"NSMutableArray"16^B24
chunkCount != NULL AND chunkCount > 0 AND volumeIndex = $VOL AND status = $STATUS AND fileID IN %@
-[CKDAssetCache startTrackingRegisterOrPutAssetHandles:operationType:error:]_block_invoke
Expected nil itemID
v24@?0@8@"NSArray"16
-[CKDAssetCache startTrackingGetAssetHandles:operationType:error:]_block_invoke
nil assetHandle.fileSignature
-[CKDAssetCache deferredStopTrackingAssetHandlesByItemIDs:]_block_invoke
-[CKDAssetCache unregisterDeferredItemIDs:andDeleteAssetHandles:]_block_invoke
itemID IN %@
-[CKDAssetCache updateDeferredLastAccessTimeForUUIDs]_block_invoke
updateDeferredLastAccessTimeForUUIDs
UUID=$UUID
v32@?0@"NSUUID"8@"NSDate"16^B24
-[CKDAssetCache stopTrackingAssetHandlesByItemIDs:]_block_invoke
-[CKDAssetCache findAssetHandleForItemID:error:]_block_invoke
couldn't find item ID %llu
-[CKDAssetCache deferredUpdateLastTimeUsedForUUID:]_block_invoke
-[CKDAssetCache assetHandleWithCachedPath:]_block_invoke
should have thrown by now
-[CKDAssetCache _scheduleEvictionForDownloadedFiles]_block_invoke
v16@?0@"NSTimer"8
-[CKDAssetCache _evictDownloadedFilesWithEvictionInfo:]
Skipped evicting
Would skip evicting
Evicting
Would evict
evictByLastUsedTime
Removing
Would remove
Evicted
Would have evicted
EXPIRYDATE
NOT_REGISTERED
_expireAssetHandlesWithExpiyDate_delete
status=$NOT_REGISTERED and lastUsedTime < $EXPIRYDATE
REGISTERED
INTERRUPTED
assetsToExpire
(status=$REGISTERED OR status=$INTERRUPTED) AND lastUsedTime < $EXPIRYDATE
-[CKDAssetCache _resetAssetInflight]
REGISTERING
_resetAssetsInFlightSearch
status=$REGISTERING OR status=$UNREGISTERING
_resetAssetsInFlightDelete
_resetAssetsInFlightResetUploading
_resetAssetsInFlightResetDownloading
-[CKDAssetCache setupPersistentStateAtStartup]_block_invoke
, %@
CKDRecordFetchAggregator.m
Fetch info isn't in the needs callback state: %@
Calling back for record %@ without a fetched record or an error: %@
fetchOrder=%lu
state=%@
hasRecord=%@
etag=%@
com.apple.cloudkit.fetchAggregator.fetchQueue
notStarted=%lu
waitingForFetch=%lu
fetchingFromServer=%lu
needsCallback=%lu
finished=%lu
fetchInfos (%@) = %@
Can't send a fetch request when another one is still outstanding
/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/Daemon/Operations/Database/CKDRecordFetchAggregator.m
Trying to invoke the record fetch completion block on completed operation %@ with record %@ and record ID %@%@%@
Didn't get any fetch infos for record with ID %@
We didn't get a callback for record %@
A fetch info with order %lu already exists. %@
Can't enqueue a new fetch after we've already finished
Can't fetch a record without a record ID
Failed to initialize fetchInfo
You can't finish a CKDRecordFetchAggregator twice
Waiting For Fetch
Needs Callback
com.apple.cloudkit.recordfetchaggregator
v20@?0B8@?<v@?>12
client
Connection %@ is not allowed to use the system cloudd.
Connection %@ is not allowed to set custom account info
Connection %@ is not allowed to set its application bundle identifier without the %@ entitlement
Connection %@ is not entitled to use CloudKit
Trying to initialize a container without an application ID
Client and daemon processes have different versions of CloudKit.framework in memory: <%@> vs. <%@>
CloudKitTestingDaemon.CKDTestServerManager
-[CKDXPCConnection getTestAdminDaemonProxyCreatorWithCompletionHandler:]
CKDXPCConnection.m
Couldn't find CKDTestServerManager in test process
NO_DEVICE_ID
/dev/null
Couldn't get connection to client
Error fetching web auth token from server: %@
clientError
serverError
extensionError
auxiliaryError
retryAfterSeconds
errorDescription
errorInternal
BuildVersion
%@/%@
com.apple.CloudKit
Expected non-nil path
Expected non-nil applicationBundleID
CKDMMCSEngineContext queue
Expected refCount=0 (%ld)
state=%ld, refCount=%ld
applicationBundleID=%@
Expected state %ld for MMCS engine context
Expected nil MMCS engine for MMCS engine context %@
Error creating MMCS directory at %@
com.apple.Dataclass.CloudKit
MMCSEngineCreate failed
Expected non-nil MMCS engine
Expected to be serialized
-[CKDMMCSEngineContext nextAvailableItemID]
CKDMMCSEngineContext.m
0 && "itemID overflow"
void runSerialized(void *, __strong dispatch_block_t)
Expected a non nil CKDMMCSEngineContext
metricObject
Expected non-nil itemID for %@
Expected non-nil MMCS engine wrapper for %@
Expected non-nil asset cache for %@
-[CKDMMCSItemGroupContext _setupRegisterMMCSItemsWithError:]
CKDMMCSItemGroupContext.m
isRegister && "isRegister"
assetHandle.fileSize.unsignedLongLongValue == 0 && "assetHandle.fileSize.unsignedLongLongValue == 0"
-[CKDMMCSItemGroupContext _setupPutMMCSItemsWithError:]
!isGet && "isGet"
-[CKDMMCSItemGroupContext updateProgressForPackageSectionState:progress:results:]
item && "nil self.MMCSPackageSectionItem"
Fetching asset failed
CKOperation was gone on MMCS callback.
Failed to open downloaded file.
Failed to get metadata for downloaded file.
Failed to finish downloaded file.
-[CKDMMCSItemGroupContext didGetItemID:signature:path:error:results:]
item.trackingUUID && "item.trackingUUID"
item.signature && "item.signature"
Moving downloaded asset failed
Failed to set destination fileURL
Getting file metadata for downloaded asset failed
File size mismatch for item %@ : %@ != %@
File size mismatch for item %@ : %@ > %@
Unknown error completing item %@
Saving asset failed
Expected either an error or a putReceipt on the completion of the upload
-[CKDMMCSItemGroupContext didPutSectionWithSignature:results:]
Expected non-nil MMCS for %@
delegate said no
not an itemTypeHint
not an itemDescription
nil reader
Unable to open file for MMCSItem:%@ itemID:%llu on unmounted volume with volumeIndex=%@
Invalid arguments, MMCSItem:%@, itemID:%llu, UUID:%@
Operation not supported
CKDMMCSItemReaderOpen_block_invoke
assetCache && "Expected non-nil asset cache"
index
is_reversed
PreflightRecords
Serialize
CKDSerializeRecordModificationsOperation does not support records with asset values
-[CKDSerializeRecordModificationsOperation _setupTranslator]_block_invoke
CKDSerializeRecordModificationsOperation.m
Internal error transforming record %@
v32@?0@"NSString"8@"CKMergeableRecordValue"16^B24
-[%@ init] is unavailable
applicationBundleIdentifier
applicationBundleIdentifierForContainerAccess
applicationBundleIdentifierForNetworkAttribution
applicationBundleIdentifierForPushTopicGeneration
applicationBundleIdentifierOverrideForTCC
/api/client/container/delete
shareIdentifier
changeType
publicAccess
invitedPcs
participant
shortTokenRoutingKey
potentialMatch
invitedKeyToRemove
publisherModel
anonymousPublicAccess
displayedHostname
publisherModelType
participantSelfRemovalBehavior
origin
participantsSeeAccepted
readOnlyCannotSeeReadOnly
selfAndOwner
anonymousPublic
setInvited
setUnsubscribed
removeFromShare
containerID=%@, applicationBundleIDs=%@, discoverable=%ld
localizedError
Email:%@---Password:%@
Email:%@---Hash:%@
Fake account was asked to refresh account properties. This is unsupported
deleteType
isAnonymous
anonymousZoneInfo
updated
deleted
userPurged
userDidResetEncryptedData
languageCode
regionCode
Preflighting request records
Waiting for client to serialize request
Retrieving CKCode Function invocation results
Waiting for client to deserialize response
Postflighting response records
Invalid record archive: %@
Cannot send two records for the same record ID in the same request: %@
Request has protected envelopes, but no data protection type: %@.%@
Request with protected envelopes and SGX data protection type must have a permittedRemoteMeasurement: %@.%@
Request with protected envelopes and trusted target data protection type must have target domain and OID: %@.%@
Cannot set shouldSendRecordPCSKeys without data protection. Please specify a dataProtectionType on your operation.
SkipAttestation
Did not receive attestation from server
Could not verify attestation using the permittedRemoteMeasurement provided
Failed to wrap invocation key
AllowSendingRecordKeysForCMP
SendFakeEncryptedMasterKeysInRecordTransports
v32@?0@"CKRecord"8Q16^B24
Error %@ when invoking function %@ on service %@: %@
v24@?0@"NSData"8@"CKDPResponseOperationResult"16
ServerMessage
Error when locally invoking function %@ on service %@
v24@?0@"NSData"8@"CKCDPError"16
Invalid pRecord: %@
http
http://%@
Process not entitled to set explicit code operation url
http://127.0.0.1:31234
/api/client/atomBatch/save
delta
evaluationType
mutationTriggers
notification
recordTypes
fireOnce
trigger
sync
metasync
insert
update
remove
itemGroups=%@
insert_into_list
delete_list_range
replace_list_range
zoneSummary
changedRecord
changedShare
pendingArchivedRecords
changedDeltas
syncObligations
inconsistent
consistent
noPendingChanges
/api/client/atomBatch/retrieveMetadata
File not readable
Failed reading package object from manifest
Failed reading section object from manifest
Failed reading item object from manifest
Package manifest is corrupt - section index %ld is out of bounds
Package manifest is corrupt - item boundary is not aligned with section boundary
@"CKPrettyError"8@?0
Package manifest is corrupt - section %lu contains %llu bytes, expected %llu bytes
Package manifest is corrupt - Expected %lu sections, found %lu
File not writable
Failed writing package object to manifest
Failed writing section object to manifest
Failed writing item object to manifest
You can't restart an executing or finished CKDPlaceholderOperation: %@
<%@ %p:%@>
realOperation
%s<%@(Placeholder) %@ 
(%@%@) 
 running for %@ (started %@) 
Fingerprint %@
Public ID %@
<PCSFPCopyDiagnostic returned NULL>
v32@?0@"CKRecordZone"8@"CKRecordZoneID"16@"CKDPResponseOperationResult"24
com.apple.cloudkit.sim
com.apple.cloudkit.test.sim
default
LogFacilityCK
LogFacilityPCS
LogFacilitySQL
STAT
LogFacilitySTAT
LogFacilityRequest
LogFacilityOP
LogStats
LogFacilityLogStats
Scheduler
LogFacilityScheduler
NotificationListener
LogFacilityNotificationListener
Engine
LogFacilityEngine
DataRepair
LogFacilityDataRepair
DiscretionaryDaemon
LogFacilityDiscretionaryDaemon
MockServer
LogFacilityMockServer
network.performance
summary
LogFacilityMMCS
MMCS
com.apple.c2
com.apple.mmcs
com.apple.chunkinglibrary
-[CKLEventFilter matchesEvent:]
CKLEventFilter.m
_categoriesBySubsystem && "_categoriesBySubsystem"
/api/client/asset/retrieve/token
uploads
authPutRequest
authPutType
authorizePut
reReference
authorizeClone
/System/Library/Frameworks/CloudKitTesting.framework/CloudKitTesting
/System/Library/PrivateFrameworks/CloudKitTesting.framework/CloudKitTesting
/AppleInternal/Library/Frameworks/CloudKitTesting.framework/CloudKitTesting
v8@?0
void *CloudKitTestingLibrary(void)
CKTestFrameworkLinking.m
Unable to find class %s
CKTestServerManager
Class getCKTestServerManagerClass(void)_block_invoke
com.apple.cloudkit.CKDServerConfigurationManager.notificationQueue
UnitTest
Default
%@-%@-%@-%@
v12@?0i8
com.apple.setmme.dnschanged
Operation's container was invalid when requesting container specific info: %@
CKDServerConfigurationManager.m
Unexpectedly-nil containerID for container %@
ForceFetchGlobalConfig
Unexpectedly-nil container for operation %@ 
com.apple.CloudKit.ShareBear
Global Configuration Manager (%lu running ops)
Global configuration operation: %@
Container specific operations:
queryResults
emailAddress
phoneNumber
/api/client/user/quota
/api/client/test/markAssetBroken
brokenAssetRecordID
listIndex
isPackage
affectedRecordType
skipWriteMissingAssetStatusRecord
Preparing Target Zone PCS
Saving Target Zone
FailZonePCSDecryptionOnZoneAggregation
Unit test Zone PCS decryption failure
Error fetching PCS data for zone %@
Couldn't get key IDs from zone PCS %@ for zone %@
Couldn't get PCS identity with key ID %@ from zone %@
Failed to add identity to the target zone PCS from zone %@
PCS_PREPARE_FAILURE
CKDAggregateZonePCSOperation.m
Only the target zone must be saved
CKErrorInternalPCSOplockFailed
recordID=%@, etag=%@, hasRecord=%@
@16@?0@"CKUserIdentityLookupInfo"8
expiresAfterSeconds
/configurations/internetservices/cloudkit/cloudkit-1.0.plist
downloadToken
downloadRequest
contentBaseURL
requestor
downloadBaseURL
downloadURLExpiration
downloadTokenExpiration
clearAssetKey
assetAuthorizationResponseUUID
constructedAssetDownloadURL
constructedAssetDownloadURLExpiration
constructedAssetDownloadEstimatedSize
reservedVoucher
userId
inviterId
createdInProcess
acceptTimestamp
outOfNetworkKeyType
acceptedTimestampDate
isOrgUser
protectionInfoPublicKey
keyHealth
inviteTimestampDate
isAnonymousInvitedParticipant
healthy
keylost
create table if not exists OperationInfo (
    operationID                   text primary key,
    applicationID                 text,
    personaID                     text,
    containerID                   text,
    accountID                     text,
    operationInfo                 blob,
    operationIsComplete           integer default 0,
    expirationDate                real,
    lastAttemptDate               real,
    retryNumber                   integer default 0
create index if not exists AppIDPersonaIDContainerIDAccountID on OperationInfo (applicationID, personaID, containerID, accountID);
create trigger if not exists DeleteOperationCallback
before delete on OperationInfo
for each row begin
  delete from Callback where operationID = OLD.operationID;
end;
create table if not exists Callback (
    operationID           text,
    callback              blob
create index if not exists OperationUUID on Callback (operationID);
OperationInfo
Callback
applicationID
personaID
accountID
operationInfo
operationIsComplete
expirationDate
lastAttemptDate
retryNumber
callback
CKDOperationInfoCache.m
Use -initWithDeviceContext:
CloudKitOperationInfo
com.apple.cloudkit.operationInfoCache
com.apple.cloudkit.operationInfoCacheDelegate
A valid delegate is already registered (%@) for operation ID %@
v16@?0@"<CKDOperationInfoDelegate>"8
v24@?0@"CKDLongLivedOperationPersistedCallback"8^B16
%@ = ?
v24@?0@"NSDictionary"8^B16
v24@?0@"<CKSQLiteDB>"8@?<B@?>16
%@ = 0
operationID = ?
%@ < ?
Only the default device context may register for operation info cache eviction
com.apple.cloudkit.operationInfoCacheEviction
StallGlobalConfigOperation
/api/client/pushUnregister
left
right
Invalid data received from server
CKDFetchArchivedRecordsURLRequest.m
Got a response for an unknown zone with request operation %@ %@
Error fetching archived records in zone %@: %@
Couldn't fetch record PCS from zone for record %@ from the server: %@
PCS fetch requested local cache only.
Couldn't fetch zone PCS for record %@ from the server: %@
Couldn't fetch zoneish PCS from zone for record %@ from the server: %@
PCS fetch requested local cache only
Couldn't fetch parent PCS (%@) or share PCS (%@) or any shared zone PCS (%@) for record %@ from the server
CKDPCSCacheRecordFetchOperation.m
We should have PCS data for record %@ by this point
We couldn't get zone PCS data for record %@
Failed to decrypt PCS data for record %@
We couldn't get any dependent PCS data to decrypt shared record %@
We don't have record PCS data for record %@
Couldn't decrypt chain PCS on record %@
ReturnWrappedEPSKForRecordPCS
Couldn't decrypt public sharing key on record %@
vettingError
isVettedToCaller
isVettedToOther
isLimitExceeded
loginRequired
cloudd_db
ClientData
Caches
AssetsDb
StagingAssets
Assets
Records
com.apple.test.container
FakeTestHash
SQLiteDBs
FakeTestStagingPathSuffix
Library
containerCloudKitDirectory
daemonCachesDirectory
packageStagingDirectory
containerDirectory
FakeUserResetEncryptedDataForZoneDelete
com.apple.cloudkit.PILSQueue
CKDPublicIdentityLookupService.m
Batch size is zero, we won't make any progress
host
port
longValue
fieldValues
listValues
boolType
longType
fieldType
/api/client/user/retrieve
/api/client/query/retrieve
query
<%@ %p> (Expires %@, Values %@)
containerOverrides
appleOverrides
bundleIds
pushTokenRegisterDays
assetKeyEncryption
cmpIdentityUrl
allowCmpOffloadForSeed
allowCmpOffloadForGM
maxBatchSize
expirationTimeout
allowExpiredDNSBehavior
c2Metrics.reportFrequency
c2Metrics.reportFrequencyBase
c2Metrics.clientOperationMetrics.reportFrequency
c2Metrics.clientOperationMetrics.reportFrequencyBase
c2Metrics.applicationMetrics.reportFrequency
c2Metrics.applicationMetrics.reportFrequencyBase
c2Metrics.allOperationMetrics.reportFrequency
c2Metrics.allOperationMetrics.reportFrequencyBase
c2Metrics.allOperationGroupMetrics.reportFrequency
c2Metrics.allOperationGroupMetrics.reportFrequencyBase
chunkProfileConfiguration.version
chunkProfileConfiguration.fileExtensionToProfileMap
chunkProfileConfiguration.defaultProfilePolicy
iCloudAppSiteAssociationData
maxInlineMergeableDeltaSize
suggestedMergeableDeltaSize
valuesData
expiry
UNIT_TEST_FAILED_LOOKUP_
Unit-test-requested error fetching share participant
GenerateOONPrivateKey
Error while generating private key for OON user identity: %@
Error fetching user identity for %@ from server: %@
Failed to fetch user identity for %@
This request was cancelled
lookupInfos=%@ + %ld more
lookupInfos=%@
Fetch Record
Touch Repair Zone (Fetch)
Touch Repair Zone (Create)
Break Asset
Call MarkAssetBroken
CKDMarkAssetBrokenOperation.m
Upload request configuration passed to cloudd should have resolved fields
FakeRecordType
FakeName
@16@?0@"CKAsset"8
Error marking asset as broken: %@
v24@?0@"CKRecordID"8@"CKDPResponseOperationResult"16
Attempting to break asset with missing base record
Could not find referenced asset
identifierForConstraintFailure
CKDAcceptSharesURLRequest.m
An anonymousCKUserID is required to accept share %@ when using anonymous to server share participants
Signature is only required for anonymous to server requests
A signing identity is required to accept share %@ when using anonymous to server share participants.
Invalid share
The share could not be converted because it is invalid: %@
atomicSaves
fetchChanges
ckql
sharingType
zoneSharing
hierarchicalSharing
hierarchical
zoneWide
configurationsByRecordZoneID
recordZoneIDs
shouldFetchAssetContents
assetTransferOptionsByKeyByRecordType
RecordNameForDecryptionFailureOnSync
Encountered a transient error fetching record %@. Please try again.
v32@?0@"NSDictionary"8Q16^B24
CKDFetchBatchedRecordsOperation.m
Expect subclass to implement
fetchAllZoneChanges
CKDFetchRecordZoneChangesOperation.m
v32@?0@"CKRecordZoneID"8@"CKDFetchZoneChangesRequestOperationResult"16^B24
fetchAllDatabaseChanges
v16@?0@"NSMutableArray"8
FailAnonymousShareDecryption
Unable to decrypt encrypted anonymous share.
v24@?0@"CKDAnonymousShareTuple"8@"NSError"16
down|%@
Fetch Records
Refetch Records
Prefetch Cloud Public Certs
Download Mergeable Values
Download Assets
Updating Records
CKDFetchRecordsOperation.m
Invalid desired key %@, which should have been caught earlier
/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/Daemon/Operations/Database/Records/CKDFetchRecordsOperation.m
Request with UUID %@ invoked progress callout after completion callout.  Progress recordID %@
v36@?0@"CKRecord"8@"CKRecordID"16B24@"CKDPResponseOperationResult"28
Failed to fetch PCS to decrypt mergeable values
Failed to create PCS data from fetched PCS while decrypting mergeable values
Error fetching record %@ from server: %@
TESTING_NO_RECORD_ERROR_OR_RECORDS_RETURNED
Expected non-nil record for operation %@
Invalid parameters to takeActionOnValue
v20@?0i8@12
shouldFetchAssetContentInMemory not for packages
No public cert key and no error
Expected non-nil record for asset %@
Expected non-nil download task for record %@
v16@?0@8
v24@?0@8d16
v24@?0@8@"NSDictionary"16
v24@?0@8@"NSError"16
Expected non-nil record for urlInfo %@
v24@?0@"CKDDownloadAssetURLInfo"8@"NSError"16
v32@?0@"CKRecord"8@"CKRecordID"16@"CKDPResponseOperationResult"24
Couldn't get PCS data from the server for %@ %@
Fetching PCS data from database
Fetching PCS data from server
Creating additional PCS data
Fetching dependent PCS blob for decryption
Decrypting PCS data
Saving PCS data to server
Saving PCS data to database
item
Error archiving record with ID %@: %@
Error marking as read notification %@: %@
v24@?0@"CKNotificationID"8@"CKDPResponseOperationResult"16
Fetching Shares
Updating Shares
Share %@ couldn't be upgraded
Couldn't get a short token for share %@
v3:%@:%@:%@
v1:%@:%@
Couldn't decrypt our per-participant PCS
v4:%@:%@:%@:%@
v2:%@:%@:%@
Couldn't get a per-participant key for share %@
Couldn't create a participant identity from the exported per participant key
Couldn't create a participant PCS from the exported per participant identity
Couldn't fetch a share with ID %@
Item with ID %@ was not a share
NoProtectectionInfoTagOnShareUpgrade
%@.%@.%@
You can't pass multiple instances of the same record to a CKModifyRecordsOperation
ForceSeparateRequestForMergeableDeltaUpload
DontRetryPCSFailures
B32@?0@"NSString"8@"CKPackage"16@"NSError"24
v28@?0B8@"NSSet"12@"NSSet"20
Determining iCloud Environment
Fetching Container-Scoped User ID
Fetching User Public Keys
Apply Side Effects
Mark Record Handlers As Uploaded
Prepare Parent PCS
Fetch Share PCS
Fetch Record PCS
Fetch Asset Records for ReReference
Modify Records
Prepare Records For Save
Upload Assets
Toposort Records
Verifying Record Encryption
Report Records In Flight
Fetching Share Participants
Uploading Mergeable Deltas
CKDModifyRecordsOperation.m
saveCallbackWithMetadata:error: called twice on %@
PreventRecordModifyRetries
Unexpected handler state in default zone %ld %ld %@
Record %@ will not be saved because of previous error in atomic zone
Record %@ will not be saved but can be retried as is
Unexpected handler state in failed atomic zone %ld %ld %@
Unexpected handler state in retryable atomic zone %ld %ld %@
v16@?0@"CKDModifyRecordHandler"8
Invalid list of records: %@
SkipToposortingRecords
SkipChainPCS
Should have a different error already
Re-referenced asset signature not found in source asset array
Can't handle fieldValue %@
assetReference
v32@?0@"NSString"8@"NSMutableArray"16^B24
FailedAssetsByFieldName
One or more referenced asset do not exist
Expected valid destination for CKAssetReference
Expected isRereferencedAssetUpload %@
Expected valid source for CKAssetReference
FailBoundaryKeyFetch
Couldn't fetch boundary key because the unit test asked for it
Expected non-nil handler for %@
Expected non-nil cached boundary key for operation %@
Expected a non-nil record for handler %@
We shouldn't get into this state if shouldOnlySaveAssetContent is true
Lost a recordID
Couldn't decrypt data on record %@
Couldn't decrypt record returned from the server in response to our save of record %@
Got a response for record with ID %@, but we didn't try to put that record.
Error saving share %@ to server: "%@"
Error saving record %@ to server: Protection data didn't match
Error saving record %@ to server: %@
Error deleting record %@: %@
Error saving mergeable delta for key '%@' on record %@: %@
Error replacing mergeable deltas: %@
v72@?0@"CKRecordID"8@"NSString"16@"CKDPDateStatistics"24@"NSDate"32@"CKDPResponseOperationResult"40@"NSSet"48@"CKRecord"56@"CKRecord"64
v32@?0@"CKRecordID"8@"NSString"16@"CKDPResponseOperationResult"24
We shouldn't get into this state if shouldModifyRecordsInDatabase is false
Long Lived Operation %@ may not save a record with a CKPackage value.  Found %@
SandboxFailureRoot
Long Lived Operation %@ may not save a record with asset %@, whose fileURL %@ is inaccessible. Note that your app should not be re-installed between enqueueing and resuming a LongLivedOperation, as your container directory will change (it's now %@)
Long Lived Operation %@ may not save a record with asset %@, whose fileURL %@ is inaccessible
If you're gonna fail our value check, there better be a reason
SaveIfServerRecordUnchanged
SaveChangedKeys
SaveAllKeys
v32@?0@"CKShare"8@"CKRecordID"16@"NSError"24
/api/client/subscription/delete
/api/client/privacy/reset
moveMarker
movedRecord
X-CloudKit-Container
X-CloudKit-Zones
X-CloudKit-App-BundleID
X-CloudKit-DeviceID
containerID=%@, applicationBundleIdentifierForNetworkAttribution="%@"
applicationSecondaryID="%@"
discretionary="%@"
duetPreClearedMode="%@"
automatically-retry-network-failures
allows-power-nap-scheduling
resumable-container-limp-mode
chunking-library-corruption-mode
list_field
Mock account was asked to refresh account properties. This is unsupported
Mock account was asked to validate vetting token. This is unsupported
%lld
MockICloud.com
mock-icloud.com
TestDevice is withholding credentials for account
CKAuthToken-%@
ICAuthToken-%@
com.apple.Dataclass.CKCodeService
icloud_gateway_url
https://gateway.icloud.com:443/ckcoderouter
https://mock-code.icloud.com:443
com.apple.Dataclass.CKDatabaseService
https://gateway.icloud.com:443/ckdatabase
https://mock-database.icloud.com:443
com.apple.Dataclass.CKDeviceService
https://gateway.icloud.com:443/ckdevice
https://mock-device.icloud.com:443
com.apple.Dataclass.CKMetricsService
https://mock-metrics.icloud.com:443
com.apple.Dataclass.CKShareService
https://gateway.icloud.com:443/ckshare
https://mock-share.icloud.com:443
Error fetching versions for record %@ from server: %@
v36@?0@"CKRecordID"8B16@"NSArray"20@"CKDPResponseOperationResult"28
com.apple.cloudkit.pdsclient
CKPDSOrphanedUserCheck
com.apple.cloudkit.cloudd
clouddocs
%@%@.%@
com.apple.icloud-container.
No DSID at push registration time
Invalid container at PDS registration time
@"NSString"16@?0@"ACAccount"8
No DSID at push unregister time
Invalid container at PDS unregistration time
serializedResult
attestationResponse
save_records
delete_recordids
associated_mergeable_deltas
@16@?0@"CKMergeableValueID"8
CKDFetchMergeableDeltaMetadataURLRequest.m
An anonymousCKUserID is required to fetch metadata for %@ when using anonymous to server share participants
Expected non-nil value ID for response %@
Unable to parse delta metadata from server response
Unable to parse delta metadata
CKDDaemonProcess.m
Not expected to have a current process here
system
test
debug
Incompatible env and cli arguments for using debug
Incompatible env and cli arguments for supporting test hooks
message
auxiliaryDomain
auxiliaryCode
auxiliaryUserInfo
targetPartition
FUNCTION_TIMEOUT
FUNCTION_ERROR
INTERNAL_ERROR
INVALID_PARTITION
CKTCCDatabaseChanged
ewogICJhcHBsaW5rcyI6IHsKICAgICJkZXRhaWxzIjogWwogICAgICB7CiAgICAgICAgImFwcElEIjogImNvbS5hcHBsZS5DbG91ZEtpdC5TaGFyZUJlYXIiLAogICAgICAgICJjb21wb25lbnRzIjogWwogICAgICAgICAgICB7ICIvIjogIi9wYWdlcy8qIiB9LAogICAgICAgICAgICB7ICIvIjogIi9udW1iZXJzLyoiIH0sCiAgICAgICAgICAgIHsgIi8iOiAiL2tleW5vdGUvKiIgfSwKICAgICAgICAgICAgeyAiLyI6ICIvaWNsb3VkZHJpdmUvKiIgfSwKICAgICAgICAgICAgeyAiLyI6ICIvc2hhcmUvKiIgfSwKICAgICAgICAgICAgeyAiLyI6ICIvbm90ZXMvKiIgfSwKICAgICAgICAgICAgeyAiLyI6ICIvcGhvdG9zLyoiIH0sCiAgICAgICAgICAgIHsgIi8iOiAiL3JlbWluZGVycy8qIiB9LAogICAgICAgICAgICB7ICIvIjogIi92LyoiIH0KICAgICAgICBdLAogICAgICAgICJhbHdheXNFbmFibGVkIjogdHJ1ZQogICAgICB9CiAgICBdCiAgfQp9Cg==
Preferences/com.apple.jett.Switch.plist
latest_selections
environment_identifier
(Automatic)
%@=%@
FrameworkCaches
Library/Caches/CloudKit
NSString * _Nonnull CKGetDataSeparatedVolumeCacheDirectory(void)
CKDDaemonUtils.m
Unexpectedly-nil cache dir for persona id %@
NULL serverPublicKeyObj
nil publicKey
nil certData
CCECCryptorImportPublicKey failed: NULL
Could not encode uri %@ to UTF-8
SecKeyCreateEncryptedDataWithParameters NULL error
CKDAcceptSharesOperation
CKDAggregateZonePCSOperation
CKDBatchFetchUserPrivacySettingsOperation
CKDCodeFunctionInvokeOperation
CKDCompleteParticipantVettingOperation
CKDDatabaseOperation
CKDDecryptRecordsOperation
CKDDiscoverUserIdentitiesOperation
CKDDownloadAssetsOperation
CKDFetchDatabaseChangesOperation
CKDFetchNotificationChangesOperation
CKDFetchRecordAncestorsOperation
CKDFetchRecordVersionsOperation
CKDFetchRecordZoneChangesOperation
CKDFetchRecordZonePCSDiagnosticsOperation
CKDFetchRecordZonesOperation
CKDFetchRecordsOperation
CKDFetchShareMetadataOperation
CKDFetchShareParticipantKeyOperation
CKDFetchShareParticipantsOperation
CKDFetchSubscriptionsOperation
CKDFetchUserQuotaOperation
CKDFetchWebAuthTokenOperation
CKDFetchRegisteredBundleIDsOperation
CKDFetchUserPrivacySettingsOperation
CKDGlobalConfigurationOperation
CKDInitiateParticipantVettingOperation
CKDMarkNotificationsReadOperation
CKDMescalSessionOperation
CKDModifyBadgeOperation
CKDContainerSpecificInfoOperation
CKDModifyRecordAccessOperation
CKDModifyRecordZonesOperation
CKDModifyRecordsOperation
CKDModifySubscriptionsOperation
CKDModifyWebSharingOperation
CKDOperation
CKDPlaceholderOperation
CKDLongLivedCallbackRelayOperation
CKDPublishAssetsOperation
CKDQueryOperation
CKDRepairZonePCSOperation
CKDResetUserPrivacySettingsOperation
CKDSaveUserPrivacySettingsOperation
CKDUploadAssetsOperation
CKDFetchBatchedRecordsOperation
CKDFetchArchivedRecordsOperation
CKDAssetTokenRequestOperation
CKDDiscoverAllUserIdentitiesOperation
CKDFetchRecordChangesOperation
CKDFetchUserRecordOperation
CKDArchiveRecordsOperation
CKDFetchRecordPCSDiagnosticsOperation
CKDOperationInfoHolderOperation
CKDFetchTranscodeServerPublicKeyOperation
CKDRepairAssetsOperation
CKDMarkAssetBrokenOperation
CKDUpdateMissingAssetStatusOperation
CKDMarkAssetBrokenURLRequestWrapperOperation
CKDAddAnonymousShareToSharedDBOperation
CKDRemoveAnonymousShareFromSharedDBOperation
CKDFetchMergeableDeltasOperation
CKDFetchMergeableDeltaMetadataOperation
CKDReplaceMergeableDeltasOperation
CKDUploadMergeableDeltasOperation
CKDMovePhotesOperation
CKDMapShareURLsToInstalledBundleIDsOperation
CKDSerializeRecordModificationsOperation
CKDDeserializeRecordModificationsOperation
*.icloud.com
*.icloud.com.cn
icloud.com
icloud.com.cn
Generated PCS key ID not found in PCS for record %@
void _CKRegisterXPCActivity(const char *, __strong os_activity_t, NSDictionary *__strong, void (^__strong)(void))
You shouldn't be registering XPC activities in daemons
You shouldn't be registering XPC activities from non-system binaries
v16@?0@"NSObject<OS_xpc_object>"8
CKRecordZonePCS
CKZoneishPCS
CKRecordPCS
PrivatePCS
PublicPCS
action
incomplete
CKDFetchRecordZoneChangesURLRequest.m
An anonymousCKUserID is required to fetch record zone changes in %@ in the shared database when using anonymous to server share participants
Failed to parse record ID
Failed to parse record type
Failed to get record field key
Failed to get mergeable ID from mergeable delta
Failed to parse mergeable value ID
Expected encrypted=%d on all mergeable deltas for %@
Failed to parse mergeable delta
Error fetching changes in zone %@: %@
CKDBackingAccount must be subclassed
%@ must be subclassed in class %@
Can't return account credentials for nil account
Can't return account credentials for account %@ because the account needs to verify new terms or is in suspended mode.
Didn't get account credentials for account %@ with no error
Couldn't get cloudKitAuthToken from credential
Couldn't get iCloudAuthToken from credential
apsEnv
CKDBackingAccount.m
Expected to be overridden in subclass
Failed to renew account credential
User rejected a prompt to enter their iCloud account password
No account exists
VETTING_PASSWORD_DIALOG_TITLE_IOS
com.apple.machelp
mchl267b6234
v24@?0@"NSDictionary"8@"NSError"16
cloudSharingURLHostname
com.apple.cloudkit.device-count
deviceCountFetchDate
v24@?0Q8@"NSError"16
Failed to fetch device list
Bad response from AppleAccount
v32@?0@"AARequest"8@"AAResponse"16@"NSError"24
Credential renewed
Renewal failed
Renewal rejected by user
missingAssetStatusRecord
Throttle
ThrottleReset
com.apple.cloudkit.BackgroundConnectionPool
manifest
sections
allAssets
/api/client/record/sync
requestedChangeTypes
ignoreCallingDeviceChanges
includeMergeableDeltas
records
shares
recordsAndShares
@16@?0@"CKReplaceDeltasRequest"8
CKDReplaceMergeableDeltasURLRequest.m
An anonymousCKUserID is required to replace deltas for %@ when using anonymous to server share participants
Expected non-nil replacement request for response: %@
Checking PCS Identity
Updating Zone PCS
UpdateBreakerZone
ZonePCSIdentityRollPartialFailure
Partially failing zone identity update because unit tests
RollZoneishMasterKeyOnFetch
RollZoneAndZoneishPCSForShareDelete
RollZoneIdentityOnFetch
ZoneKeyRollDisallowed
ZoneKeyRollAllowed
testUpdatingZonePCSAfterIdentityRoll
ShouldNotKeyRoll
CKDFetchRecordZonesOperation.m
Did not expect a key roll
Error fetching record zone %@ from server: %@
OverrideZonePCSModificationDate
FailZonePCSDecryptionOnZoneFetch
EncryptionBreaker
Error fetching all record zones from server: %@
scope: %@
%@.Anonymous
PCSCache
itemType
CKDPCSData
parentID
ZONE
ACCOUNT
SERVICE
deletePCSDataForZone
zoneID = $ZONE AND accountID = $ACCOUNT AND serviceName = $SERVICE
SHARE
deletePCSDataForShare
shareID = $SHARE AND accountID = $ACCOUNT AND serviceName = $SERVICE
IDENTIFIER
TYPE
deletePCSDataForID
identifier = $IDENTIFIER AND databaseScope = $SCOPE AND itemType = $TYPE AND accountID = $ACCOUNT AND serviceName = $SERVICE
PCSDataLookup
v24@?0@"CKSQLiteTableGroup"8^B16
PCSSQLCache
setPDSData
[Hit rate %0.2f%% (%lu/%lu)]
You must call -[%@ initWithRecord:callbackQueue:]
CKDDecryptRecordsOperation.m
You can't decrypt a nil record
You must specify a callback queue
Operation %@ has already been marked to finished. You can't enqueue any more decrypts
Faking decryption failure on record because you asked for it
Decrypt operation %@ was cancelled
Record %@ has items that require encryption but no protection data was found on the record
Couldn't create a sharing identity
Couldn't unwrap record PCS with web sharing PCS
Record %@ has items that require encryption but no share protection data was found
Record %@ has items that require encryption but no zone protection data was found
 - record has no protection data
Record %@ has items that require encryption but no protection data was found: %@
Record %@ has items that require encryption but no protection data was found
Couldn't unwrap chain PCS on parent %@
Record %@ has items that require encryption but no protection data was found for parent %@
Record %@ has items that require encryption but no shared zone protection data was found
You can't decrypt a record in the public database
Error unwrapping asset key with PCS %@ for record %@
Couldn't get a PCS object for record %@
Couldn't get a PCS object for the record %@. 
Decrypt operation %@ finished but there were still outstanding decryptions
You can't finish a decrypt operation twice
Encountered a transient error fetching protection data for record %@. Please try again.
CKDFetchMergeableDeltasURLRequest.m
An anonymousCKUserID is required to fetch %@ when using anonymous to server share participants
Expected non-nil mergeable ID for response %@
Failed to load fetched delta
failed to create database: %@
-[CKDLogicalDeviceContext testServer]
CKDLogicalDeviceContext.m
No such test device at %@
__live_device__
Detached test servers don't have a filesystem presence
CloudKitCaches
Detached test servers don't have metadata caches
Detached test servers don't have operation info caches
Detached test servers don't have throttle managers
Detached test servers don't have token registration schedulers
up|%@|%@
CKDPCSIdentityManager.m
No serviceName provided to _copyIdentityForService
Can't fetch identity, no account dsid available
Manatee is not available for explicit-credential accounts
CoreCDP failed to check manatee availability
Manatee is not available for the current account
Identity cache missed an invalidation, dsid of backing account has changed
Can't create a diversified identity with no server entropy
Couldn't get a %@ identity set
Couldn't get a %@ identity
Couldn't create a diversified %@ identity
Couldn't get a diversified identity for service %@
Couldn't get a %@ identity to add to the share PCS
Couldn't copy a public identity for our current user
Couldn't fetch identity set for service %@ to add to a mutable identity set.
Couldn't copy current identity for service %@ to add to a mutable identity set.
Empty dictionary returned while copying identities. Can't add identities for %@ to mutable identity set.
Couldn't add app-specific service identity (%@) to new identity set: %@
No account DSID, so we can't create an identity
Couldn't create a new identity set
Couldn't fetch PCS identities from stingray
Couldn't fetch identity set for service %@ to add to a new identity set.
Couldn't copy current identity for service %@ to add to a new identity set.
Couldn't create a mutable identity set for service: %@
Account %@ is not a CKDBackingExplicitCredentialsAccount
Error fetching iCloud auth token
com.apple.Dataclass.KeychainSync
escrowProxyUrl
com.apple.Dataclass.Ubiquity
Couldn't setup PCS identities from stingray
Couldn't get a public identity
Couldn't roll PCS identities for service %@
Rolling PCS identities for service %@ was unsuccessful
Account %@ is not a CKDBackingMockAccount
Error unarchiving a mock PCS service identity
@24@?0@8@16
Couldn't create a sharing identity from public key %@
Couldn't create data from web sharing identity %@
Couldn't create a sharing identity from data %@
ForceSecurityErrorOnIdentityValidation
NSCocoaErrorDomain
The connection to service named com.apple.securityd.general was invalidated.
MasqueradeAsManateeIdentity
SetManateeUnavailable
RefetchPCSIdentitySet
Identity Set: %p
Primary service name: %@
Current key: %p
public-key: %@
keyid: %@
manatee: %@
is public identity
No current key for the given service name.
Additional public keys (%lu):
fileSignature=%@
referenceSignature=%@
size=%@
uploadTokens
authPutResponse
contentResponseHeaders
Fetching Share Metadata
Fetching Accepted Shares
Preparing Share Metadata
Decrypting Share Metadata
Processing Potential Anonymous Shares
Accepting Shares
Error accepting share %@: %@
CKDAcceptSharesOperation.m
OON Participants not supported in manatee
Public sharing not supported in manatee
Public sharing not supported when using anonymous to server share participants
OON participants not supported when using anonymous to server share participants
AcceptA2AShareUsingVersionOneAnonymousIdentifier
Couldn't generate an anonymous userID to accept share at %@
Share does not have the signingPCS to generate a signature for accepting share at %@
Couldn't get a private identity from the signingPCS for accepting share at %@
v32@?0@"NSURL"8@"CKShare"16@"CKDPResponseOperationResult"24
Fetched share metadata didn't have a share ID
Couldn't fetch accepted share from the server
Couldn't get a diversified %@ identity to accept share at %@
Cannot accept share %@ as an out-of-network participant
Can not accept share at URL %@ because we couldn't decrypt the share as an invited user
Can not accept share at URL %@ because participant type %ld is unsupported
Can not accept share at URL %@: vetting of the invited email is needed
Error accepting share at URL %@: No manatee sharing invitation blob provided
Error accepting share at URL %@: %@ participant tried to accept share
Error accepting share at URL %@: Protection data didn't match
/api/client/pushRead
uuid
@16@?0@"CKRecordID"8
@16@?0@"CKDPRecord"8
@"NSArray"16@?0@"CKMovePhotosChange"8
CKDMovePhotosURLRequest.m
An anonymousCKUserID is required to move record %@ into the shared database when using anonymous to server share participants
NoRecordProtectionInfoOnSaves
Invalid values in record
The record could not be encoded because it has invalid values
CKDMMCSPackageSignatureGenerator.m
Attempted to update an invalidated signature generator
encryptedInvocationKey
protectionSource
keyVersion
scheme
unspecified
cloudMediaProcessing
CKDProtocolTranslator.m
Without a user id, this translator won't do what you want
userName
pIdentifier.name
pIdentifier.value.name
Invalid field value type
identifier.name
Convincing clang
No zone ID for mergeable value
Trying to create a mergeable value proto without a mergeable value ID
Missing mergeable delta metadata: %@
Failed to parse asset from server
Unknown or missing mergeable delta payload
No encrypted data on delta %@
Failed to get data from mergeable delta %@
No metadata on delta %@
No identifier in delta metadata proto
Missing protection info for delta metadata
No version vectors in delta metadata proto
Missing authentication tag for timestamps
No envelope on metadata: %@
No version vectors in delta metadata
Unknown error %@
Subscription from server didn't have a record type
Subscription from server didn't have a predicate
Subscription from server didn't have a zone id
zoneName
com.apple.hardcoded.bundleid
participantID
Unknown lookup field in CKUserIdentityLookupInfo: %ld
CKDFetchRecordsURLRequest.m
An anonymousCKUserID is required to fetch %@ in the shared database when using anonymous to server share participants
v32@?0@"NSString"8@"CKDPRequestedListField"16^B24
Non-indexed desired key %@, which should have been caught earlier
Invalid record
Failed to read server response: %@
timestamps
timestampsAuthTag
replacedDeltaIdentifiers
Replace Deltas
@"NSArray"16@?0@"CKReplaceDeltasRequest"8
Error performing replace deltas request: %@
/api/client/container/getBundles
RecordType
ZoneID
PCSData
Etag
KeyID
ParentID
RecordZoneID
RecordShareID
ChainPCS
ChainPrivateKey
PublicSharingKey
ChainParentPublicKeyID
ZoneishPublicKeyID
ZoneishPCSData
ZonePCSModificationDate
PublicPCSData
PublicPCSEtag
MyParticipantPCS
MyParticipantPermission
MyParticipantType
PublicPermission
ShareEtag
ServiceType
itemID=%@, etag=%@
, pcs=%@
, pcsData=%@
, encryptedChainPCSPrivateKey=%@
, recordType=%@
, chainPCSData=%@
, publicPCS=%@
, publicPCSData=%@
, publicPCSEtag=%@
, shareEtag=%@
discoverable
CKAssetVolume
volumeIndex=%@
volumeUUID=%@
numericValue
Identifier
-[CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptionsHeaderInfo writeTo:]
CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptionsHeaderInfo.m
serviceType
config
PUSH
DATABASE
CONTENT
CALDAV
ESCROWPROXY
QUOTA
duration
unset
setDuration
setExpiration
/api/client/privacy/user_batch_lookup
startDate
queueing
bytesUploaded
bytesDownloaded
connections
connectionsCreated
recordsUploaded
recordsDownloaded
recordsDeleted
assetsUploaded
assetsUploadedFileSize
assetsDownloaded
assetsDownloadedFileSize
retries
requestCount
requestOperationCountsByType
totalBytesByChunkProfile
chunkCountByChunkProfile
fileCountByChunkProfile
CloudKitMetrics
startDate=%@, duration=%0.3f, queueing=%0.3f, executing=%0.3f, bytesUploaded=%lu, bytesDownloaded=%lu, requests=%lu, connections=%lu, connectionsCreated=%lu
(UNKNOWN)
Executing
Queueing
Other
startDate=%@, duration=%0.3f, state=%@
cloudKitMetrics=%@
MMCSMetrics=%@
CKDProxyPCSManager.m
-[CKDPCSManager %@] was called in a container that should never ever ever use PCS.
Call _addAnonymousShareToSharedDB
B16@?0@"CKRecord"8
CKDModifyRecordsURLRequest.m
An anonymousCKUserID is required to modify record %@ in the shared database when using anonymous to server share participants
An anonymousCKUserID is required to delete record %@ in the shared database when using anonymous to server share participants
FakeErrorDuringMergeableProtoGenerationDeltasToSave
This is a fake error
FakeInvalidMergeableValueID
FakeErrorDuringMergeableProtoGenerationReplacementDeltas
bundleIdentifier=%@, containerIdentifier=%@, uuid=%@
serializationFormat
clientConfig
accountConfig
requestContext
authInformation
DataProtection
PROTO
JSON
changedZones
hasPendingChanges
syncComplete
clientVersionETagMatch
databaseType
invernessServiceName
invernessFunctionName
-[CKDVolume initWithVolumeUUID:deviceID:mountToPath:]
CKDVolume.m
volumeUUID && deviceID && "volumeUUID && deviceID"
mountPath=%@
@"NSArray"16@?0@"CKDAssetRecord"8
zone=%@
recordCount=%llu
isPackageSectionBatch
Fetch Asset Metadata
CKDRepairAssetsOperation.m
recordIDToUUID can never produce a nil value here
package
Expected non-nil asset or package in %@
Expected non-nil metadata for asset or package %@ in %@
Wrong amount of repair records to update: %ld
Updating multiple records currently not supported
You must call -[%@ initWithContainer:]
com.apple.cloudkit.pcs.fetchAggregator
ForceNoQueuedFetchCycleDetection
ForceNoQueuedFetchReuse
CKDPCSFetchAggregator.m
I am my parent?
DelayPCSRecordFetch
com.apple.cloudkit.DelayPCSRecordFetch
Record with ID %@ is not a share
/api/client/zone/sync
maxChangedZones
fetchArchivedRecords
CKDFetchArchivedRecordsOperation.m
Not expected to get here
v32@?0@"CKRecordZoneID"8@"CKDFetchArchivedRecordsRequestOperationResult"16^B24
v16@?0@"CKRecord"8
UnDefInEd
registering
uploading
registered
downloading
downloadInterrupted
downloadWaiting
unregistering
cachedNotRegistered
UUID=%@
lastUsedTime=%@
status=%@
modTime=%@
fileSize=%lld
chunkCount=%u
%@: %@ != %@
databaseEnvironment
deviceId
applicationBundleId
clientInfo
userAgent
operationGroup
databaseOwnerId
privateDatabase
publicDatabase
sharedDatabase
orgDatabase
teamDatabase
gameDatabase
@16@?0@"CKNotificationID"8
perform%@:withBlock:
v32@?0@"CKDAppContainerAccountTuple"8@"CKDOperationInfoMetadata"16^B24
CKDFetchRecordZonesURLRequest.m
An anonymousCKUserID is required to fetch zone %@ in the shared database when using anonymous to server share participants
Invalid record zone
The record zone could not be converted because it is invalid: %@
Unable to upload mergeable delta without a value ID
Unable to upload mergeable delta without a record ID
Failed to fetch PCS to encrypt mergeable delta
Failed to encrypt mergeable delta
v32@?0@"CKRecordID"8@"NSArray"16^B24
/api/client/shareVetting/initiate
encryptedKey
baseToken
isRead
source
dialog
sound
SHARING
CKRPC
create table if not exists PushTokens (
    applicationID             text,
    containerID               text,
    personaID                 text,
    accountID                 text,
    apsToken                  blob,
    apsEnvironment            text,
    expirationDate            real,
    unique (applicationID, containerID, personaID, accountID) on conflict replace
create table if not exists AppBundle (
    applicationID               text,
    adopterProcessType          integer,
    applicationContainerPath    text,
    clientSDKVersion            integer,
    containingBundleID          text,
    entitlements                text,
    isMainBundleAppleExecutable integer,
    unique (applicationID) on conflict replace
create table if not exists ContainerServerInfo (
    containerID                 text primary key,
    publicCloudDBURL            text,
    publicShareServiceURL       text,
    publicDeviceServiceURL      text,
    publicCodeServiceURL        text,
    publicMetricsServiceURL     text,
    scopedUserID                text,
    orgAdminUserID              text,
    accountID                   text,
    unique (containerID, accountID) on conflict replace
 create table if not exists AppContainerAccount (
    applicationID               text,
    containerID                 text,
    personaID                   text,
    accountID                   text,
    containerOptions            text,
    tokenRegistered             integer,
    unique (applicationID, containerID, personaID, accountID) on conflict replace
create table if not exists ServerConfiguration (
     valuesData            blob,
     expiry                real
create table if not exists VerifiedPublicKey (
     keyType          text,
     keyID            text,
     publicKey        blob,
     keyVersion       integer,
     keyExpiration    integer,
     keyCert          blob,
     protectionSource text,
     unique (keyType, keyID) on conflict replace
create table if not exists DSIDMap (
     accountID        text primary key,
     DSID             text
PushTokens
AppBundle
ContainerServerInfo
AppContainerAccount
ServerConfiguration
VerifiedPublicKey
DSIDMap
apsToken
apsEnvironment
adopterProcessType
applicationContainerPath
clientSDKVersion
containingBundleID
entitlements
isMainBundleAppleExecutable
publicCloudDBURL
publicShareServiceURL
publicDeviceServiceURL
publicCodeServiceURL
publicMetricsServiceURL
scopedUserID
orgAdminUserID
containerOptions
tokenRegistered
keyType
keyID
keyExpiration
keyCert
lastTokenUpdate
CKDMetadataCache.m
CloudKitMetadata
com.apple.cloudkit.metadatacache
q16@?0@"NSError"8
AND %@ > ?
%@ = %@
%@ IS NOT NULL AND %@ != ""
Must specify both key type and key identifier
Unique constraint violation in public key table
Unexpectedly-nil containerID
Data
Offset
RecordKey
ArrayIndex
Missing required info on %@
Couldn't unwrap asset key for publishing
Couldn't find clear asset key for publishing
CKDAssetExtensions.m
Unhandled code path.
Couldn't create url from template
1234
Re-referenced asset not found
Re-referenced asset missing expected values
Re-referenced asset signature differs from expected value
alert
shouldBadge
additionalFields
shouldSendContentAvailable
shouldSendMutableContent
collapseIdKey
encryptedPublicSharingKey
com.apple.security.octagon.trust-status-change
com.apple.cloudkit.account.manateeStatusQueue
Error: 
CProtectedCloudComputeQuote.c
pcc_opaque_quote_get_signature
*signature_len <= MAX_SIGNATURE_LEN
PCCPinnedVerificationDisabled
PCCPinnedVerificationHashes
CKDMapShareURLsToInstalledBundleIDsOperation
CKDFetchRegisteredBundleIDsURLRequest
CKDFetchRegisteredBundleIDsOperation
CKDPRecordResolveTokenResponse
NSCopying
CKDRecordCacheEntry
CKDRecordCacheTable
CKDRecordCaching
CKDRecordCache
CKDAssetRecord
CKDPUserAvailableQuotaResponse
CKDMMCSItemGroupSetContext
CKDCancelling
CKDUploadMergeableDeltasURLRequest
CKDPDateStatistics
CKDaemonExtensions
CKDPNotificationSyncResponse
CKDPCSCache
PCSCacheEviction
CKDXPCConnectionManager
CKDPProtectionInfo
CKDPRecordRetrieveRequest
CKDProcessScopedClientProxy
CKDPRecordRetrieveChangesResponseMergeableDeltaChange
CKXPCContainerScopedDaemonSPI
CKDContainer
CKXPCContainerScopedDaemonAPI
NSObject
CKDContainerScopedUserIDProvider
CKDSPIContainer
CKDPAssetUploadTokenRetrieveResponseHeaderInfo
CKDDeserializeRecordModificationsOperation
CKDPCSMemoryCacheEntry
CKDPCSMemoryCache
CKDPArchiveRecordsRequest
CKDPResponseOperationHeader
CKDPSetBadgeCountResponse
CKDPQuerySort
CKDMMCSItemCommandWriter
CKDMMCSItemReaderWriterProtocol
CKDAssetTokenRequest
CKDPUserPrivacySettingsBatchLookupResponseContainerPrivacySettings
CKDIdentityCacheTableEntry
CKDIdentityCacheTable
CKDIdentityCache
CKDPipeliningInfo
CKDOperation
CKThrottlingCriteria
CKDPResponseOperationResult
CKDPCodeFunctionInvokeRequestAttestationRequest
CKWaiterWrapper
CKDDeferredRelinquishPlaceholder
CKDZoneGatekeeperWaiter
CKDZoneGatekeeperImplementation
CKDZoneGatekeeper
CKDFetchMergeableDeltaMetadataOperation
CKDPUserInformationRequestAccess
CKDAssetRequestPlanner
CKDFetchRecordPCSDiagnosticsOperationInfo
NSSecureCoding
NSCoding
CKDFetchRecordPCSDiagnosticsOperation
CKDQueryOperation
CKDOperationPipelining
CKCDPCheckContainerHealthRequest
CKDQueuedRecordFetch
CKStreamLogStatsTuple
CKLStreamLogStatsObserver
CKDPZoneRetrieveRequest
CKDPCSCacheZoneFetchOperation
CKDAppContainerTuple
CKDAppContainerAccountTuple
CKDPAnonymousShareRemoveRequest
CKDPrivacyManager
CKDQueuedFetch
CKDURLRequest
C2RequestDelegate
CKDPSetBadgeCountRequest
CKDPPackageManifestSection
CKDPStreamingAssetIdentifier
CKDWrappingContext
CKDPCSManager
CKDPCSTestOverrideProvider
CKDProtocolTranslatorIdentityDelegate
CKDFetchShareMetadataOperation
CKDShareTokenMetadata
CKDModifyWebSharingOperation
CKDMMCSTestEncryptedItemReader
CKDPRealTimeMessageDeleteRecordID
CKDModifyRecordAccessOperation
CKDPStreamingAssetSaveAssetRequest
CKDPZoneSaveRequest
CKDPRecordRetrieveChangesResponseSyncObligation
CKDPConfigurationField
CKDQueuedZoneFetch
CKDDiscoverUserIdentitiesOperation
CKDDiscoverAllUserIdentitiesOperation
CKDPArchiveRecordsResponse
CKDPTokenUnregistrationResponse
CKMetricOptionAdditions
CKDUploadMergeableDeltasOperation
CKDAssetZoneKey
CKDTransactionState
CKDFetchContentAuthTokensForPutURLRequest
CKDCompleteParticipantVettingOperation
CKDContainerServerInfo
CKDCodeLocalFunctionInvokeURLRequest
CKDPCodeFunctionInvokeRequest
CKDPZoneDeleteRequest
CKDPRecordFieldIdentifier
CKDQueryURLRequest
CKDURLRequestPipelining
CKCDPCodeServiceRequestAttestationRequest
CKPackageDownloadTask
CKDDownloadAssetsOperation
CKDOperationStatistics
CKDPFieldActionReplaceListRange
CKDFetchUserQuotaOperation
CKDPRecordResolveTokenRequest
CKDAssetZone
CKDPAssetUploadTokenRetrieveRequestHeaderInfo
Helper
RecordFields
CKDPUpdateMissingAssetStatusResponse
CKDSystemAvailabilityWatcherWrapper
CKDSystemAvailabilityMonitor
CKDInitiateParticipantVettingURLRequest
CKDPEncryptedMergeableValue
CKDPushConnection
CKLogError
CKHack
CKCDPCodeServiceRequestProtectedCloudComputeMetadata
CKDContainerSpecificInfoURLRequest
CKDPStreamingAssetSaveAssetResponse
CKDModifyRecordZonesOperation
CKDPRecordMoveRequest
CloudKitAdditions
CKDPZone
CKDVolumeManager
CKDPRequestedListField
CKCDPCodeServiceRequestAccountConfig
CKDPResponseOperationResultErrorAuxiliaryError
CKDPAssetUploadTokenRetrieveResponseUploadToken
CKDPFieldActionInsertIntoList
CKDRecordResolveTokenURLRequest
CKDShortTokenLookupInfo
CKLStreamObserver
CKLStreamLogMessageObserver
CKLStreamRawMessageObserver
CKDPRealTimeMessageSaveRecord
CKCDPCodeServiceRequestAssetAuthorizeGetRequestOptionsHeaderInfo
CKDPRealTimeMessageAssociatedMergeableDeltas
CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoEntry
CKDAccount
CKDTrafficLogger
CKDPResponseOperationResultErrorClient
CKDPClouddbClientRecordsExtension
CKDPClouddbClientRecordsExtension2
CKDPClouddbClientRecordsExtension3
BoundPairAdditions
CKDProtobufStreamWriter
NSStreamDelegate
CKDPlistResponseBodyParser
CKDMMCSClientProxyItemReader
CKDPStreamingAsset
CKDPZoneRetrieveResponseZoneSummary
CKDPNotificationMarkReadResponse
CKDPUserQueryRequest
CKDSQLiteCache
CKDUploadAssetsOperationAdditions
CKDUploadAssetsOperationInfo
CKDUploadAssetsOperation
CKDPRecordSaveResponse
CKDPLocation
CKDPThrottlingConfig
CKCDPStopAllContainerResponse
CKDPublishAssetsOperation
CKDPRecordSaveRequest
CKDRemoveAnonymousShareFromSharedDBOperationInfo
CKDRemoveAnonymousShareFromSharedDBOperation
CKDFetchMergeableDeltasOperation
CKDClientInfo
CKDPRequestOperationHeader
CKDPAssetUploadTokenRetrieveRequestRecordAssetUpload
CKDPResponseOperation
CKDPClouddbClientCodeExtension
CKDPClouddbClientDsExtension
CKDPClouddbClientSharingExtension
CKDPClouddbClientRecordsExtension4
CKDPClouddbClientRecordsExtension5
CKDPClouddbClientRecordsExtension6
CKDPClouddbClientRecordsExtension7
CKDPClouddbClientRecordsExtension8
CKDPClouddbClientRecordsExtension9
CKDPClouddbClientRecordsExtension10
CKDPClouddbClientRecordsExtension11
CKDPClouddbClientRecordsExtension12
CKDPClouddbClientRecordsExtension13
CKDPClouddbClientRecordsExtension14
CKDPClouddbClientRecordsExtension15
CKDPClouddbClientRecordsExtension16
CKDPClouddbClientRecordsExtension17
CKDPClouddbClientRecordsExtension18
CKDPClouddbClientRecordsExtension19
CKDPClouddbClientRecordsExtension20
CKDPClouddbClientRecordsExtension21
CKDPClouddbClientRecordsExtension22
CKDPClouddbClientRecordsExtension23
CKDPClouddbClientSubscriptionsExtension
CKDPClouddbClientSubscriptionsExtension2
CKDPClouddbClientSubscriptionsExtension3
CKDPClouddbClientTestOperationsExtension
CKDPClouddbClientTestOperationsExtension2
CKDPClouddbClientUsersExtension
CKDPClouddbClientUsersExtension2
CKDPClouddbClientUsersExtension3
CKDPClouddbClientUsersExtension4
CKDPClouddbClientUsersExtension5
CKDPClouddbClientDeviceExtension
CKDPClouddbClientDeviceExtension2
CKDPClouddbClientDeviceExtension3
CKDPClouddbClientDeviceExtension4
CKDPClouddbClientDeviceExtension5
CKDPAnonymousShareAddRequest
CKDPRecordRetrieveVersionsResponse
CKDPCSNotifier
CKDPOperation
CKDProtobufResponseBodyParser
CKCDPCodeServiceResponseAssetAuthorizationResponseHeaderInfo
CKDModifySubscriptionsOperation
CKDPMergeableValueIdentifier
CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptions
CKDPRecordRetrieveVersionsRequest
CKDMovePhotosOperation
CKDPRecordRetrieveRequestRetrieveAssetURL
CKDPCodeFunctionInvokeResponseAttestationResponseAttestation
CKDPBundlesForContainerResponse
CKDPRequestOperation
CKDMMCSGetOperationInfo
CKDPMergeableDeltaReplaceRequest
CKDPMergeableDeltaMetadataRetrieveResponse
CKDPTokenRegistrationRequest
CKDPPackageManifestHeader
CKDPUserPrivacySettingsRetrieveRequest
CKDInitiateParticipantVettingOperation
CKDPUserAlias
CKDModifySubscriptionsURLRequest
CKDAnonymousSharingManager
CKDPTokenRegistrationBody
CKDPShareAcceptResponse
CKDPRecordFieldValue
CKDPStreamingAssetRetrieveAssetResponse
CKDPCodeFunctionInvokeRequestProtectedCloudComputeMetadata
CKDPThrottlingConfigRateLimit
CKDPRecordChainParent
CKDPNotificationSyncRequest
CKDRepairZonePCSOperation
CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoValue
CKDPWebAuthTokenRetrieveRequest
CKDPWebAuthTokenRetrieveResponse
CKDPRequestOperationHeaderSupplementalZoneInfo
CKDPMoveOplockFailure
CKLTrafficLogMessageFragment
CKLStreamTrafficObserver
CKLStreamTrafficConsoleLogObserver
CKDFetchShareParticipantsOperation
CKDPShareAcceptRequest
CKDArchiveRecordsURLRequest
CKDPQueryFilter
CKDPowerLogger
CKDTrustedTargetWrappedKey
CKDPQuery
CKDLogicalDeviceScopedStateManager
CKXPCLogicalDeviceScopedDaemon
CKDPResponseOperationHeaderAssetAuthorizationResponse
CKDPResponseOperationResultErrorExtension
CKDMMCSItemReaderWriter
CKDPRecord
CKDPRecordDeleteRequest
CKDPackageDirectoryPurger
CKDPTranscodeResponse
Conversion
CKDTokenDeletionURLRequest
CKDPTranscodeRequest
CKDCodeFunctionInvokeURLRequest
CKDFetchSubscriptionsURLRequest
CKDResponseBodyParser
CKDPCSKeySyncCoreAnalytics
CKDPCSKeySyncTracker
CKDPCSKeySyncManager
CKDFetchSubscriptionsOperation
CKDModifyShareHandler
CKDPSubscriptionCreateRequest
CKLLog
CKLResponseLogging
CKLParsedObject
CKDPResponseLogging
CKDPAnonymousShareRemoveResponse
CKDKeyEnvelopeContext
Envelope
CKEncryptable
CKDPSubscriptionNotificationAlert
CKDFetchUserRecordURLRequest
CKDPRecordRetrieveChangesResponseRecordChange
CKDPFetchArchivedRecordsRequest
CKDPUser
CKDPAssetUploadTokenRetrieveRequestAssetField
CKDMMCSItemGroup
CKDMoveRecordHandler
CKDPUserPrivacySettingsBatchLookupResponse
CKDPSubscriptionRetrieveResponse
CKDPSubscriptionCreateResponse
CKDPOplockFailure
CKCDPStopContainerResponse
CKDMMCS
CKDMMCSItem
CKDModifyRecordHandler
CKDAnonymousZoneDataObject
CKDAnonymousShareTuple
CKDJSONResponseBodyParser
CKDPLocationBound
CKDPSubscriptionRetrieveRequest
CKDPUpdateMissingAssetStatusRequest
CKDPAnonymousZoneInfo
CKDPUserPrivacySettingsRetrieveResponse
CKDTrafficMetadata
CKDFetchUserPrivacySettingsURLRequest
CKDPReservedVoucher
CKDAccountNotifier
CKDFetchNotificationChangesOperation
CKDPMergeableDeltaRetrieveRequest
CKDSignedServerPublicKeyURLRequest
CKDTokenRegistrationScheduler
CKDPAnonymousShareAddResponse
CKDPDeleteContainerResponse
CKPCSManateeShareInvitation
CKDTokenRegistrationURLRequest
CKDPMergeableValue
CKCDPStopAllContainerRequest
CKDPConfiguration
CKDResetUserPrivacySettingsOperation
CKDPResponseOperationHeaderAssetAuthorizationResponseHeaderInfo
CKDPCodeFunctionInvokeRequestProtectedCloudComputeMetadataCryptoSession
CKDBatchFetchUserPrivacySettingsURLRequest
CKDPPackageManifestItem
CKDPUserPrivacySettingsUpdateRequest
CKDPFieldActionDeleteListRange
CKDUpdateMissingAssetStatusOperationInfo
CKDUpdateMissingAssetStatusOperation
CKDPlaintextResponseBodyParser
CKDPShareMetadata
CKDPCodeFunctionInvokeResponseAttestationResponse
CKDLogicalDeviceScopedClientProxy
CKCDPCodeServiceRequestAuthInformation
CKCDPCodeServiceRequestOperationGroup
CKFetchTranscodeServerPublicKeyOperationInfo
CKDFetchTranscodeServerPublicKeyOperation
CKDLongLivedOperationPersistedCallback
CKDPMergeableDelta
CKDAssetHandleTable
CKDAssetVolumeTable
CKSAssetCacheTableGroup
CKDAssetCacheEvictionInfo
CKDAssetCache
CKDRecordFetchInfo
CKRecordFetchAggregatorOperationInfo
CKDRecordFetchAggregator
CKDFetchUserQuotaURLRequest
CKDXPCConnection
CKDSystemAvailabilityWatcher
CKPropertiesDescription
CKDXPCConnectionMuxer
CKDFetchWebAuthTokenOperation
CKDPAnonymousShareRemoveURLRequest
CKDPResponseOperationResultError
CKDMMCSEngineContext
CDKMMCSItemGroupContextDelegate
CKDMMCSItemGroupContext
CKDMMCSItemReaderWriterDelegateProtocol
CKDPListPosition
CKDSerializeRecordModificationsOperation
CKDApplicationID
CKSQLiteItem
CKSQLiteBinding
CKDPDeleteContainerRequest
CKDPRecordRetrieveChangesResponseShareChange
CKDPShare
CKDContainerPrivacySettings
CKDBatchFetchUserPrivacySettingsOperation
CKCredentialInterceptingAccount
CKDBackingExplicitCredentialsAccount
CKDPZoneRetrieveChangesResponseChangedZone
CKDPLocale
CKOperationCallbacks
CKDOperationCallbackProxy
CKDLongLivedOperationPersistedCallbackProxy
CKDCodeFunctionInvokeOperation
CKDPMergeableDeltaSaveRequest
CKDPSubscription
CKDMMCSItemGroupSet
CKDPFieldAction
CKCDPCheckContainerHealthResponse
CKDPTokenRegistrationResponse
CKDPZoneRetrieveResponse
CKDPRecordRetrieveChangesResponse
CKDPMergeableDeltaMetadataRetrieveRequest
CKDPackageManifest
CKCDPErrorUserInfoEntry
CKDPlaceholderOperation
CKDFetchRecordZonePCSDiagnosticsOperationInfo
CKDFetchRecordZonePCSDiagnosticsOperation
CKLEventFilter
CKLStatusFilter
CKDPAssetUploadTokenRetrieveRequest
CKDServerConfigurationManager
CKDPQueryRetrieveResponse
CKDPContactInformation
CKDPUserAvailableQuotaRequest
CKDPMarkAssetBrokenRequest
CKDAggregateZonePCSOperation
CKDRecordResponse
CKDDiscoverUserIdentitiesURLRequest
CKDGlobalConfigurationURLRequest
CKCDPStopContainerRequest
CKDFetchWebAuthTokenURLRequest
CKDPAsset
CKDPParticipant
CKDOperationInfoMetadata
CKDOperationInfoDelegateWrapper
CKDOperationInfoCache
CKDGlobalConfigurationOperation
CKDPTokenUnregistrationRequest
CKDPListRange
CKDFetchArchivedRecordsRequestOperationResult
CKDFetchArchivedRecordsURLRequest
CKDPCSCacheRecordFetchOperation
CKCDPCodeServiceResponseAttestationResponse
CKDPShareVettingInitiateResponse
CKDDirectoryContext
CKDFetchDatabaseChangesURLRequest
CKDPublicIdentityLookupService
CKDPRecordDeleteResponse
CKCDPCodeServiceRequestServiceClientConfig
CKDOperationInfoHolderOperation
CKDPConfigurationFieldValue
CKDAccountStore
CKDPUserRetrieveRequest
CKDPQueryRetrieveRequest
CKDFetchNotificationChangesURLRequest
CKDServerConfiguration
CKPropertyCoding
CKDPublicIdentityLookupRequest
CKDMarkAssetBrokenOperation
CKDMarkAssetBrokenURLRequestWrapperOperation
CKCDPCodeServiceRequestAssetAuthorizeGetRequestOptions
CKDPUniqueFieldFailure
CKCDPErrorUserInfoValue
CKDAcceptSharesURLRequest
CKDAcceptShareMetadata
CKDPZoneCapabilities
CKDFetchBatchedRecordsOperation
CKDFetchBatchedRecordsOperationInfo
CKDFetchRecordZoneChangesOperation
CKDFetchDatabaseChangesOperation
CKDRecordDownloadTask
CKMergeableValueDownloadTask
CKDFetchRecordsOperation
CKDFetchUserRecordOperation
CKDPCSCacheFetchOperationInfo
CKDPCSCacheFetchOperation
CKDArchiveRecordsOperation
CKDMarkNotificationsReadOperation
CKDFetchShareParticipantKeyOperation
CKDDeviceIDManager
CKDPUserPrivacySettingsResetResponse
CKDModifyRecordsOperation
CKDPCSCacheShareFetchOperation
CKDPSubscriptionDeleteRequest
CKDPMergeableDeltaReplaceResponse
CKDPUserPrivacySettingsResetRequest
CKDPRecordMoveResponse
CKDPQueryRetrieveResponseQueryResult
CKDMMCSRequestOptions
CKDPRequestedFields
CKCDPCodeServiceResponseAttestationResponseAttestation
CKDBackingMockAccount
CKDFetchRecordVersionsOperation
CKDPDSClient
CKCDPCodeServiceResponse
CKDPRealTimeMessage
CKDFetchMergeableDeltaMetadataURLRequest
CKDDaemonProcess
CKDPRecordType
CKCDPCodeServiceRequestProtectedCloudComputeMetadataCryptoSession
CKCDPError
CKDPRecordSaveRequestConflictLoserUpdate
QueryString
PCSPrivate
CKDPRecordField
CKDPFetchArchivedRecordsResponse
CKDFetchZoneChangesRequestOperationResult
CKDFetchRecordZoneChangesURLRequest
CKDPAnonymousShareAddURLRequest
CKDBackingAccount
CKDPMarkAssetBrokenResponse
CKDThrottleTableGroup
CKDThrottleManager
CKDURLSessionPool
CKDPPackage
CKDPAssetsToDownload
CKDPRecordRetrieveChangesRequest
CKDReplaceMergeableDeltasURLRequest
CKDUpdateMissingAssetStatusURLRequest
CKDPMergeableDeltaRetrieveResponse
CKDFetchRecordZonesOperation
CKDPResponseOperationResultErrorServer
CKDDatabaseOperation
CKDPCSSQLCacheEntry
CKDPCSSQLCacheTableGroup
CKDPCSSQLCacheTable
CKDPCSSQLCache
CKCDPCodeServiceResponseAssetAuthorizationResponse
CKDDecryptRecordsOperationInfo
CKRecordDecryptInfo
CKDDecryptRecordsOperation
CKReportMetricAdditions
CKDContainerSpecificInfoOperation
CKDFetchMergeableDeltasURLRequest
CKDLogicalDeviceContext
CKPackageUploadTask
CKDPCSIdentityWrapper
CKDPCSIdentityManager
CKDPCodeFunctionInvokeResponse
CKDBackingPlatformAccount
CKDLongLivedCallbackRelayOperation
CKDOperationInfoDelegate
CKDAssetID
PCSSupport
CKDFetchUserPrivacySettingsOperation
CKDPAssetUploadTokenRetrieveResponse
CKDAcceptSharesOperation
CKDPNotificationMarkReadRequest
CKDFetchRecordVersionsRequest
CKDRegisterOperationInfo
CKDDownloadAssetURLInfo
CKDDownloadAssetsOperationInfo
CKDSaveUserPrivacySettingsOperationInfo
CKDSaveUserPrivacySettingsOperation
CKDMovePhotosURLRequest
CKDMMCSPackageSignatureGenerator
CKCDPTrustedTargetCryptoMetadata
CKDProtocolTranslator
EqualityShenanigans
CKDFetchRecordsURLRequest
CKDPMergeableDeltaMetadata
CKDSaveUserPrivacySettingsURLRequest
CKDReplaceMergeableDeltasOperation
CKDPBundlesForContainerRequest
CKDPCSData
CKDChainPCSData
CKDRecordPCSData
CKDZonePCSData
CKDSharePCSData
CKDPUserPrivacySettings
CKCDPInitializeContainerRequest
CKDPUserRetrieveResponse
CKDAssetVolume
CKCDPCodeServiceRequestDatabaseOwner
CKDModifyBadgeOperation
CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptionsHeaderInfo
CKDPMergeableDeltaSaveResponse
CKDModifyBadgeURLRequest
CKCDPCodeServiceRequestClientConfig
CKDAssetTokenRequestOperationInfo
CKDAssetTokenRequestOperation
CKDPStorageExpiration
CKDPUserPrivacySettingsBatchLookupRequest
CKDPUserPrivacySettingsUpdateResponse
CKDOperationMetrics
MMCSOperationMetric
MMCSCompat
CKOperationStateTimeRange
MMCSOperationStateTimeRange
CKDOperationCombinedMetrics
CKDProxyPCSManager
CKDPUserQueryResponse
CKDPShareIdentifier
CKDAddAnonymousShareToSharedDBOperationInfo
CKDAddAnonymousShareToSharedDBOperation
CKDModifyRecordsURLRequest
CKLTrafficLogMessage
CKCDPInitializeContainerResponse
CKCDPCodeServiceRequest
CKDPZoneRetrieveChangesResponse
CKDTrustedTargetKey
CKDPSubscriptionDeleteResponse
CKDPRecordRetrieveResponse
CKDPThrottlingConfigCriteria
CKDVolume
CKDAssetBatch
CKDRepairAssetsOperation
CKDProgressTracker
CKDPCSFetchAggregator
CKDPZoneRetrieveChangesRequest
CKDFetchArchivedRecordsOperation
CKDPZoneDeleteResponse
CKDAssetHandle
CKCDPCodeServiceRequestRequestContext
CKDMarkNotificationsReadURLRequest
CKDProcessScopedStateManager
CKXPCProcessScopedDaemon
CKDResetUserPrivacySettingsURLRequest
CKDModifyRecordZonesURLRequest
CKDFetchRecordZonesURLRequest
CKDMarkAssetBrokenURLRequest
MergeableValue
CKDPRecordSaveRequestShareIdUpdate
CKDPShareVettingInitiateRequest
CKDPNotificationSyncResponsePushMessage
CKDCancelTokenGroup
CKDAppContainerAccountMetadata
CKDApplicationMetadata
CKDPushToken
CKDMetadataCache
CKDPSubscriptionNotification
CKDPRecordStableUrl
CKDAccountDataSecurityObserver
CKDPZoneSaveResponse
PCCWrappedKey
PCCAttestation
PCCKey
initWithOperationInfo:container:
shareURLs
mutableCopy
state
setState:
_fetchShareMetadata
_fetchRegisteredBundleIDs
error
finishWithError:
nameForState:
removeObject:
bundleIDsFetchedBlock
callbackQueue
container
processScopedClientProxy
logicalDeviceScopedClientProxy
initWithContainerIdentifier:environment:
initWithApplicationBundleIdentifier:
personaID
initWithApplicationID:containerID:personaID:
entitlements
options
clientConnection
sharedContainers
containerWithAppContainerTuple:processScopedClientProxy:logicalDeviceScopedClientProxy:containerEntitlements:containerOptions:sharedContainerTable:
setOverwriteContainerPCSServiceIfManatee:
setSkipShareDecryption:
setShareURLsToFetch:
errorWithCode:format:
_performCallbackForURL:withAppBundleIDs:daemonBundleIDs:error:
shareMetadatasByURL
setObject:forKeyedSubscript:
setShareMetadataFetchedBlock:
setError:
stateTransitionGroup
setCompletionBlock:
spawnAndRunOperationOfClass:operationInfo:spawnQueue:container:operationConfigurationBlock:
countByEnumeratingWithState:objects:count:
objectForKeyedSubscript:
containerID
bundleIDs
hasPrefix:
length
substringFromIndex:
addObject:
setBundleIDsFetchedBlock:
_finishOnCallbackQueueWithError:
CKDescriptionPropertiesWithPublic:private:shouldExpand:
CKPropertiesDescriptionStringFromProperties:
count
makeStateTransition:
activityCreate
operationType
makeStateTransition
main
setShareURLs:
setShareMetadatasByURL:
.cxx_destruct
_bundleIDsFetchedBlock
_shareURLs
_shareMetadatasByURL
TQ,D,N
T@"NSMutableArray",&,N,V_shareURLs
T@"NSMutableDictionary",&,N,V_shareMetadatasByURL
clientOperationCallbackProxy
T@"<CKMapShareURLsToInstalledBundleIDsOperationCallbacks>",&,D,N
T@?,C,N,V_bundleIDsFetchedBlock
arrayWithObjects:count:
requestUUID
operationRequestWithType:
setBundlesForContainerRequest:
hasBundlesForContainerResponse
bundlesForContainerResponse
result
requestOperationClasses
requiresTokenRegistration
applicationBundleIdentifierForContainerAccess
applicationBundleIdentifierForNetworkAttribution
sourceApplicationSecondaryIdentifier
generateRequestOperations
requestDidParseProtobufObject:
requestDidParseNodeFailure:
initWithOperation:
code
errorDescription
errorWithCode:userInfo:format:
setBundleIDs:
containerIdentifier
_unitTestBundleIDsByContainerID:
ckShortDescription
setRequest:
performRequest:
_bundleIDs
T@"NSArray",C,N,V_bundleIDs
T@"<CKFetchRegisteredBundleIDsOperationCallbacks>",&,D,N
removeAllObjects
objectAtIndex:
description
dictionaryRepresentation
stringWithFormat:
dictionary
setObject:forKey:
initWithCapacity:
addRecord:
setContainer:
recordsCount
clearRecords
recordAtIndex:
setShareRecord:
setShareMetadata:
setRecordZone:
allocWithZone:
init
copyWithZone:
isMemberOfClass:
isEqual:
hash
mergeFrom:
recordType
hasContainer
containerEnvironment
setContainerEnvironment:
setHasContainerEnvironment:
hasContainerEnvironment
containerEnvironmentAsString:
StringAsContainerEnvironment:
hasShareRecord
hasShareMetadata
hasRecordZone
readFrom:
writeTo:
copyTo:
records
setRecords:
shareRecord
shareMetadata
recordZone
_container
_containerEnvironment
_recordZone
_records
_shareMetadata
_shareRecord
_has
TB,R,N
T@"NSString",&,N,V_container
TB,N
Ti,N,V_containerEnvironment
T@"NSMutableArray",&,N,V_records
T@"CKDPRecord",&,N,V_shareRecord
T@"CKDPShareMetadata",&,N,V_shareMetadata
T@"CKDPZone",&,N,V_recordZone
isEqualToString:
descriptionOfEntry:
rowID
setRowID:
recordID
setRecordID:
zoneIdentifier
setZoneIdentifier:
environment
setEnvironment:
databaseScope
setDatabaseScope:
etag
setEtag:
modificationTime
setModificationTime:
recordData
setRecordData:
knownUserKeys
setKnownUserKeys:
dsid
setDsid:
size
setSize:
_rowID
_recordID
_zoneIdentifier
_environment
_databaseScope
_etag
_modificationTime
_recordData
_knownUserKeys
_dsid
_size
T@"NSString",&,N,V_rowID
T@"NSString",&,N,V_recordID
T@"NSString",&,N,V_zoneIdentifier
T@"NSNumber",&,N,V_environment
T@"NSNumber",&,N,V_databaseScope
T@"NSString",&,N,V_etag
T@"NSDate",&,N,V_modificationTime
T@"NSData",&,N,V_recordData
T@"NSSet",&,N,V_knownUserKeys
T@"NSString",&,N,V_dsid
T@"NSNumber",&,N,V_size
sharedOptions
recordCacheEntryCountLimit
recordCacheSizeLimit
cachedRecordExpiryTime
recordCacheExpireDelay
initWithLogicalTableName:entryCountLimit:dataSizeLimit:expirationTime:expireDelay:
accountType
null
containsObject:
isSubsetOfSet:
valueStore
enumerateKeysAndValuesOfClasses:usingBlock:
paddedFileSize
setWasCached:
primaryKeyProperties
fetchProperties:inObject:matchingDBProperties:label:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
account
_dsidForAccount:
sqliteRepresentation
numberWithInteger:
dictionaryWithObjects:forKeys:count:
setFetchedProperties:
orderDescendingByProperty:
predicateWithFormat:
setSearchPredicate:
entriesWithValues:label:error:setupBlock:
nextObject
_cachedRecordKnownUserKeyData:satisfiesRequiredKeys:
fetchCacheEntryRecordData:
initWithData:
initWithContainer:databaseScope:requireContainerScopedUserID:
zoneID
anonymousCKUserID
recordFromPRecord:asAnonymousCKUserID:error:
hasProtectionDataEntitlement
setSerializeProtectionData:
hasOutOfProcessUIEntitlement
hasParticipantPIIEntitlement
setSerializePersonalInfo:
extendExpiration:
performInTransaction:
setTrackChanges:
valuesByKey
allKeys
encryptedValues
disableCaching
_recordWithID:container:requiredKeys:scope:
_cachedRecordHasValidAssets:forRequiredKeys:
_trimRecord:toRequiredKeys:
recordIdentifier
recordIDFromPRecordIdentifier:error:
useAnonymousToServerShareParticipants
isEqualIgnoringAnonymousUserIDsToRecordID:
countOfEntriesMatching:label:error:predicate:
recordName
containsValueOfClasses:passingTest:
enumerateObjectsUsingBlock:
serializeProtectionData
serializePersonalInfo
setWithObject:
pRecordFromRecord:forCache:
dataRepresentation
cacheExpirationTime
initWithTimeIntervalSinceNow:
setExpirationDate:
numberWithLongLong:
modificationDate
distantPast
isNoMatchingRowError:
insertObject:
timeIntervalSinceDate:
updateUsingObject:
performTransaction:
deleteEntriesMatching:label:error:predicate:
deleteAllEntries:
recordsWithIDs:container:requiredKeys:scope:
clearAssetAuthTokensForRecord:container:scope:
setAuthToken:
setWithArray:
addRecord:container:knownUserKeys:scope:
dbProperties
entryClass
recordWithID:container:requiredKeys:scope:
etagForRecordID:container:requiredKeys:scope:
deleteRecordWithID:scope:
clearAllRecords
clearAllRecordsInScope:
clearAllRecordsForZoneWithID:
clearAssetAuthTokensForRecordWithID:container:scope:
numberOfRecordsWithID:container:
count:
groupNameWithDomain:domainIdentifier:groupName:
tableGroupInDatabase:withName:error:
databaseInDirectory:error:
recordCacheInDatabase:withContainer:
directoryContext
daemonDatabaseDirectory
path
recordCacheWithPath:forContainer:
addTable:
recordCacheForContainer:
ttlDays
createTables
forwardingTargetForSelector:
sizeUpperBound
isPackageSectionRecord
componentsJoinedByString:
CKDescription
package
isTemporary
recordKey
enumerateKeysAndObjectsUsingBlock:
numberWithUnsignedLongLong:
unsignedLongLongValue
compare:
sortedArrayUsingComparator:
CKFlatMap:
addObjectsFromArray:
allObjects
allRecordKeys
arrayByAddingObjectsFromArray:
initWithRecordType:recordID:
CKPropertiesDescription
addMMCSItem:
addRereferencedMMCSItem:
addMMCSSectionItem:
rerefSizeUpperBound
allMMCSItems
allRereferenceMMCSItems
allMMCSSectionItems
allMMCSAndSectionItems
allRegularAndSectionAndRereferenceItemsWithRecordKey:
allRegularAndSectionAndRereferenceItems
firstMMCSItemError
firstMMCSSectionItemError
isAssetRecord
isEmpty
isEmptyOfRereferencesAssets
itemsByRecordKey
setItemsByRecordKey:
rereferencedItemsByRecordKey
setRereferencedItemsByRecordKey:
sectionItemsByRecordKey
setSectionItemsByRecordKey:
sizeUpperBoundNumber
setSizeUpperBoundNumber:
rerefSizeUpperBoundNumber
setRerefSizeUpperBoundNumber:
_recordType
_itemsByRecordKey
_rereferencedItemsByRecordKey
_sectionItemsByRecordKey
_sizeUpperBoundNumber
_rerefSizeUpperBoundNumber
T@"NSMutableDictionary",&,N,V_itemsByRecordKey
T@"NSMutableDictionary",&,N,V_rereferencedItemsByRecordKey
T@"NSMutableDictionary",&,N,V_sectionItemsByRecordKey
T@"NSNumber",&,N,V_sizeUpperBoundNumber
T@"NSNumber",&,N,V_rerefSizeUpperBoundNumber
T@"NSString",R,N,V_recordType
T@"CKRecordID",R,N,V_recordID
TI,R
T@"NSArray",R,N
setStorageAvailableBytes:
setHasStorageAvailableBytes:
hasStorageAvailableBytes
storageAvailableBytes
_storageAvailableBytes
TQ,N,V_storageAvailableBytes
itemGroupSetCompletionGroup
itemGroupContexts
cancel
mmcsOperationType
setMmcsOperationType:
start
itemGroupSetCompletionBlock
itemGroupSet
setItemGroupSetCompletionBlock:
initWithItemGroupSet:itemGroupSetCompletionBlock:
addItemGroupContext:
setItemGroupSet:
operation
setOperation:
setItemGroupContexts:
itemGroupCompletionBlock
setItemGroupCompletionBlock:
setItemGroupSetCompletionGroup:
_itemGroupSet
_operation
_itemGroupContexts
_itemGroupCompletionBlock
_itemGroupSetCompletionBlock
_itemGroupSetCompletionGroup
_mmcsOperationType
T@"CKDMMCSItemGroupSet",&,N,V_itemGroupSet
T@"CKDOperation",W,N,V_operation
T@"NSMutableArray",&,N,V_itemGroupContexts
T@?,C,N,V_itemGroupCompletionBlock
T@?,C,N,V_itemGroupSetCompletionBlock
T@"NSObject<OS_dispatch_group>",&,N,V_itemGroupSetCompletionGroup
Tq,N,V_mmcsOperationType
copy
deltas
valueID
CKCompactMap:
replacementRequests
arrayByAddingObject:
zoneIDsToLock
firstObject
deltasByRequestID
request
operationUUID
requiresCKAnonymousUserIDs
CKDPIdentifier_User
setAnonymousCKUserID:
translator
pMergeableValueIdentifierFromMergeableValueID:
pMergeableDeltaFromDelta:error:
setIdentifier:
setDelta:
setMergeableDeltaSaveRequest:
requestOperationsForRequest:replaceDeltasRequests:ignoreMissingDeltas:error:
objectAtIndexedSubscript:
replacementRequestsByRequestID
hasMergeableDeltaSaveResponse
response
perDeltaCompletionBlock
hasMergeableDeltaReplaceResponse
perReplaceDeltasRequestCompletionBlock
initWithOperation:deltas:replacementRequests:
allowsAnonymousAccount
handlesAnonymousCKUserIDPropagation
anonymousUserIDForHTTPHeader
setPerDeltaCompletionBlock:
setPerReplaceDeltasRequestCompletionBlock:
setDeltasByRequestID:
setReplacementRequestsByRequestID:
_deltas
_replacementRequests
_perDeltaCompletionBlock
_perReplaceDeltasRequestCompletionBlock
_deltasByRequestID
_replacementRequestsByRequestID
T@"NSMutableDictionary",&,N,V_deltasByRequestID
T@"NSMutableDictionary",&,N,V_replacementRequestsByRequestID
T@"NSArray",R,C,N,V_deltas
T@"NSArray",R,C,N,V_replacementRequests
T@?,C,N,V_perDeltaCompletionBlock
T@?,C,N,V_perReplaceDeltasRequestCompletionBlock
setCreation:
setModification:
hasCreation
hasModification
creation
modification
_creation
_modification
T@"CKDPDate",&,N,V_creation
T@"CKDPDate",&,N,V_modification
participants
hasEncryptedPersonalInfo
_encryptPersonalInfoWithPCSBlob:inShareWithID:pcsManager:
_decryptPersonalInfoWithPCSBlob:inShareWithID:pcsManager:
pcsManager
sharingInvitationData
currentUserParticipant
setProtectionInfo:
createIngestedPPPCSDataFromInvitationData:completionHandler:
_prepPCSDataWithContainer:databaseScope:publicSharingKey:removeServerSpecifiedKeys:containerID:sharedRecordZone:completionHandler:
serviceTypeForSharing
dataWithShare:serviceType:
invitedPCS
setSharePCSData:
_encryptPersonalInfoWithPCSBlob:pcsManager:
pcsCache
_setPCSData:forFetchedShareID:withScope:withCompletionHandler:
dataWithZone:
specialContainerType
currentServiceIsManatee
errorWithCode:error:format:
invitedKeysToRemove
removePublicKeys:fromPCS:
decryptSharedZonePCSData:withInvitedPCS:error:
_setPCSData:forFetchedZoneID:withScope:withCompletionHandler:
pcsDataFromFetchedShare:withPublicSharingKey:withServiceType:completionHandler:
_decryptPersonalInfoWithPCSBlob:pcsManager:
_ingestAndExportPPPCSFromShareInvitationToken:container:completionHandler:
_prepPCSDataWithContainer:databaseScope:publicSharingKey:removeServerSpecifiedKeys:containerID:completionHandler:
_prepPCSDataUsingPreDecryptedPCSOnlyWithContainer:databaseScope:
encryptedPersonalInfo
userIdentity
createdInProcess
numberWithBool:
acceptedInProcess
participantID
setEncryptedPersonalInfo:
_encryptPersonalInfoWithPCSBlob:participantID:inShareWithID:pcsManager:
boolValue
setCreatedInProcess:
setAcceptedInProcess:
_decryptPersonalInfoWithPCSBlob:participantID:inShareWithID:pcsManager:
lookupInfo
nameComponents
setNameComponents:
emailAddress
phoneNumber
setEmailAddress:
setPhoneNumber:
encryptedData
share
setEncryptedData:
hasEncryptedData
_encryptDataWithPCSBlob:pcsManager:
_decryptDataWithPCSBlob:pcsManager:
archivedDataWithRootObject:requiringSecureCoding:error:
initWithRecordID:fieldName:mergeableDeltaID:fileSignature:referenceSignature:
wrapEncryptedData:withPCS:inContext:
initWithEncryptedData:
unwrapEncryptedData:withPCS:inContext:
data
initWithObjects:
unarchivedObjectOfClasses:fromData:error:
addPushMessage:
setChangeID:
pushMessagesCount
clearPushMessages
pushMessageAtIndex:
pushMessageType
hasChangeID
setMoreAvailable:
setHasMoreAvailable:
hasMoreAvailable
changeID
pushMessages
setPushMessages:
moreAvailable
_changeID
_pushMessages
_moreAvailable
T@"NSData",&,N,V_changeID
T@"NSMutableArray",&,N,V_pushMessages
TB,N,V_moreAvailable
arrayWithCapacity:
initWithDeviceContext:containerID:accountOverrideInfo:accountID:encryptionServiceName:
UTF8String
setMinAge:
dealloc
runCacheEviction
fetchQueue
_lockedGetSQLCacheWithCompletionHandler:
chainPCSData
zoneishPCS
signingPCS
sharePCSData
pcsKeyID
_lockedCreatePCSCacheFetchOfItem:forOperation:options:fetchCreator:withCompletionHandler:
outstandingFetches
canBeUsedForOperation:withOptions:
setPcsDataInvalidated:
_lockedGetOutstandingFetchForOperation:options:itemIDString:
parentOperation
operationID
isPCSDataInvalidated
isCancelled
fetchAggregator
fetchRequestForExistingOperation:isDependentOnOperation:
fetchGroup
pcsData
_lockedRemoveOutstandingFetch:forItemIDString:databaseScope:
_lockedAddOutstandingFetch:forItemIDString:databaseScope:
_lockedHandleMemoryFetchOfItem:pcsData:forOperation:options:fetchCreator:withCompletionHandler:
getPCSDataFromCacheForID:databaseScope:withCompletionHandler:
setItemID:
setCache:
setOptions:
spawnAndRunOperationOfClass:operationInfo:operationConfigurationBlock:
recordMemoryCache
_lockedFetchPCSForItem:memoryCache:forOperation:options:fetchCreator:withCompletionHandler:
zoneMemoryCache
shareMemoryCache
_lockedInvalidateAllOutstandingPCSFetchesForItemIDString:databaseScope:
CKHashedDescription
setPCSData:forItemID:databaseScope:withCompletionHandler:
setRecordPCSData:forRecordWithID:databaseScope:withCompletionHandler:
getSQLCache:
setZonePCSData:forZoneWithID:databaseScope:withCompletionHandler:
setSharePCSData:forShareWithID:databaseScope:withCompletionHandler:
_updateMemoryCacheWithPCSData:forItemWithID:inMemoryCache:databaseScope:withCompletionHandler:
clearCache
removePCSDataForItemsInZoneWithID:withCompletionHandler:
removePCSDataForItemsInShareWithID:withCompletionHandler:
hasStatusToReport
CKStatusReportArray
allValues
runMemoryCacheEviction
fetchPCSForRecordWithID:forOperation:options:withCompletionHandler:
fetchPCSForZoneWithID:forOperation:options:withCompletionHandler:
fetchPCSForShareWithID:forOperation:options:withCompletionHandler:
_setPCSData:forFetchedRecordID:withScope:withCompletionHandler:
updateMemoryCacheWithZonePCSData:forZoneWithID:databaseScope:withCompletionHandler:
updateMemoryCacheWithRecordPCSData:forRecordWithID:databaseScope:withCompletionHandler:
updateMemoryCacheWithSharePCSData:forShareWithID:databaseScope:withCompletionHandler:
removePCSDataForItemsInZoneWithID:
removePCSDataForItemsInShareWithID:
sqlCache
accountOverrideInfo
accountID
encryptionServiceName
setOutstandingFetches:
setFetchQueue:
setCallbackQueue:
_sqlCache
_recordMemoryCache
_zoneMemoryCache
_shareMemoryCache
_containerID
_accountOverrideInfo
_accountID
_encryptionServiceName
_outstandingFetches
_fetchQueue
_callbackQueue
T@"CKDPCSSQLCache",R,N,V_sqlCache
T@"CKDPCSMemoryCache",R,N,V_recordMemoryCache
T@"CKDPCSMemoryCache",R,N,V_zoneMemoryCache
T@"CKDPCSMemoryCache",R,N,V_shareMemoryCache
T@"NSMutableDictionary",&,N,V_outstandingFetches
T@"NSObject<OS_dispatch_queue>",&,N,V_fetchQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_callbackQueue
T@"CKContainerID",R,N,V_containerID
T@"CKAccountOverrideInfo",R,N,V_accountOverrideInfo
T@"NSString",R,N,V_accountID
T@"NSString",R,N,V_encryptionServiceName
clearInvalidatedCacheEntriesWithSkipZonePCS:completionHandler:
clearPCSCaches
clearPCSMemoryCaches
clearInvalidatedPCSSQLCacheEntriesWithSkipZonePCS:completionHandler:
enableTransactions
currentProcess
processType
isSystemInstalledBinary
stringByAppendingString:
initWithMachServiceName:
setDelegate:
setMaxConcurrentOperationCount:
sharedConnectionManager
_dumpStatusReportToFileHandle:
statusReportWithCompletionHandler:
sighandlerSource
statusReportRequestSource
stateHandle
xpcListener
resume
CKXPCDaemonToClientMuxerInterface
setRemoteObjectInterface:
CKXPCClientToDaemonMuxerInterface
setExportedInterface:
initWithXPCConnection:
setExportedObject:
setInterruptionHandler:
tearDown
clientConnections
blockOperationWithBlock:
processBinaryName
setName:
tearDownOperations
clientConnectionQueue
addOperation:
setInvalidationHandler:
keepOpen
allowToClose
name
addDependency:
allContainers
cachedEnvironment
sharedClientThrottlingOperationQueue
operations
maxConcurrentOperationCount
operationStatusReport:
sharedManager
existingDefaultContext
throttleManager
statusReportQueue
_dumpStatusReportArrayToOsTrace:
CKComponentsAndSubcomponentsJoinedByString:
dataUsingEncoding:
writeData:
statusReportCallbacks
statusReportCallbackQueue
clouddStarted
listener:shouldAcceptNewConnection:
enumerateConnections:
dumpStatusReportToFileHandle:
setXpcListener:
setClientConnections:
setTearDownOperations:
setSighandlerSource:
setClientConnectionQueue:
setStateHandle:
setStatusReportRequestSource:
setStatusReportQueue:
setStatusReportCallbackQueue:
setStatusReportCallbacks:
_xpcListener
_clientConnections
_tearDownOperations
_sighandlerSource
_clientConnectionQueue
_stateHandle
_statusReportRequestSource
_statusReportQueue
_statusReportCallbackQueue
_statusReportCallbacks
T@"NSXPCListener",&,N,V_xpcListener
T@"NSMutableArray",&,N,V_clientConnections
T@"NSMutableArray",&,N,V_tearDownOperations
T@"NSObject<OS_dispatch_source>",&,N,V_sighandlerSource
T@"NSOperationQueue",&,N,V_clientConnectionQueue
TQ,N,V_stateHandle
T@"NSObject<OS_dispatch_source>",&,N,V_statusReportRequestSource
T@"NSObject<OS_dispatch_queue>",&,N,V_statusReportQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_statusReportCallbackQueue
T@"NSMutableArray",&,N,V_statusReportCallbacks
setProtectionInfoTag:
hasProtectionInfo
hasProtectionInfoTag
protectionInfo
protectionInfoTag
_protectionInfo
_protectionInfoTag
T@"NSData",&,N,V_protectionInfo
T@"NSString",&,N,V_protectionInfoTag
setRecordIdentifier:
setRequestedFields:
setVersionETag:
setClientVersionETag:
setGetAssetURL:
setAssetsToDownload:
hasRecordIdentifier
hasRequestedFields
hasVersionETag
hasClientVersionETag
hasGetAssetURL
hasAssetsToDownload
setShouldFailBatch:
setHasShouldFailBatch:
hasShouldFailBatch
requestTypeCode
responseClass
requestedFields
versionETag
clientVersionETag
getAssetURL
assetsToDownload
shouldFailBatch
_assetsToDownload
_clientVersionETag
_getAssetURL
_recordIdentifier
_requestedFields
_versionETag
_shouldFailBatch
T@"CKDPRecordIdentifier",&,N,V_recordIdentifier
T@"CKDPRequestedFields",&,N,V_requestedFields
T@"NSString",&,N,V_versionETag
T@"NSString",&,N,V_clientVersionETag
T@"CKDPRecordRetrieveRequestRetrieveAssetURL",&,N,V_getAssetURL
T@"CKDPAssetsToDownload",&,N,V_assetsToDownload
TB,N,V_shouldFailBatch
procName
isSandboxed
date
xpcConnection
auditToken
processIdentifier
initWithAuditToken:pid:
initWithCString:encoding:
initWithFormat:
clientEntitlements
hasVFSOpenByIDEntitlement
hasAllowAccessDuringBuddyEntitlement
hasAllowPackagesEntitlement
synchronousRemoteObjectProxyWithErrorHandler:
remoteObjectProxyWithErrorHandler:
_getProcessScopedClientProxyCreatorSynchronous:completionHandler:
processScopedClientProxyCreator
setProcessScopedClientProxyCreator:
getProcessScopedClientProxyCreatorSynchronous:completionHandler:
getFileMetadataWithFileHandle:openInfo:reply:
getProcessScopedClientProxySynchronous:errorHandler:clientProxyHandler:
handleSignificantIssueBehavior:reason:
fileSystemRepresentation
applicationBundleID
CKSanitizedPath
errorWithCode:path:format:
initWithBytesNoCopy:length:encoding:freeWhenDone:
noteSystemIsAvailable
isFileURL
initWithClientConnection:
processIsAttached
getFileMetadataWithFileHandle:openInfo:error:
issueSandboxExtensionForItem:error:
hasValidatedEntitlements
canOpenFileAtURL:
setSandboxed:
connectionDate
setConnectionDate:
setClientConnection:
clientSDKVersion
setClientSDKVersion:
isClientMainBundleAppleExecutable
setIsClientMainBundleAppleExecutable:
connectionEntitlements
setConnectionEntitlements:
hasValidatedEntitlementsTernary
setHasValidatedEntitlementsTernary:
_sandboxed
_isClientMainBundleAppleExecutable
_pid
_clientSDKVersion
_processBinaryName
_procName
_connectionDate
_clientConnection
_clientEntitlements
_processScopedClientProxyCreator
_connectionEntitlements
_hasValidatedEntitlementsTernary
T@"<CKXPCProcessScopedClient>",&,V_processScopedClientProxyCreator
T@"CKDXPCConnection",W,N,V_clientConnection
sandboxed
TB,N,GisSandboxed,V_sandboxed
T@"NSDate",&,N,V_connectionDate
T@"NSDictionary",&,N,V_connectionEntitlements
Tq,N,V_hasValidatedEntitlementsTernary
Ti,R,N,V_pid
T@"NSString",R,N,V_processBinaryName
T@"NSString",R,N,V_procName
TI,N,V_clientSDKVersion
T@"CKEntitlements",R,N,V_clientEntitlements
TB,N,V_isClientMainBundleAppleExecutable
addDeltas:
setFieldIdentifier:
deltasCount
clearDeltas
deltasAtIndex:
setRecordType:
deltasType
hasIdentifier
hasFieldIdentifier
hasRecordType
identifier
fieldIdentifier
setDeltas:
_fieldIdentifier
_identifier
T@"CKDPMergeableValueIdentifier",&,N,V_identifier
T@"CKDPRecordFieldIdentifier",&,N,V_fieldIdentifier
T@"NSMutableArray",&,N,V_deltas
T@"CKDPRecordType",&,N,V_recordType
weakObjectsHashTable
appContainerTuple
_initWithAppContainerTuple:processScopedClientProxy:logicalDeviceScopedClientProxy:containerEntitlements:containerOptions:
sharedInternalUseContainers
setIsForClouddInternalUse:
metadataCache
applicationID
applicationMetadataForApplicationID:
appContainerAccountMetadataForAppContainerAccountTuple:
containerOptions
hasAllowFakeEntitlementsEntitlement
fakeEntitlements
entitlementsByAddingOverlay:
containingBundleID
setContainingBundleID:
processName
setQualityOfService:
setUnderlyingQueue:
_setupOperationQueues
defaultCenter
_lockedSetHasTCCAuthorizationTernary:
addObserverForName:object:queue:usingBlock:
hasTCCAuthorization
holdAllOperations
setContainerAvailable:
forceEnableReadOnlyManatee
_loadApplicationContainerPathAndType
initWithBundleIdentifier:error:
containingBundleRecord
bundleIdentifier
_determineHardwareInfo
temporaryDirectory
lastPathComponent
purgeDirectoryAtURL:
sharedNotifier
accountOrNil
_clearCaches
_reloadAccount:
registerObserver:forAccountChangeNotification:
clearAssetCache
clearRecordCache
expireConfigurationForContainer:
drop
dropMMCS
unregisterObserverForAccountChangeNotification:
setTCCDatabaseChangedNotificationObserver:
initWithBundleIdentifier:allowPlaceholder:error:
dataContainerURL
applicationState
isInstalled
developerType
lock
unlock
setCachedEnvironment:
deviceContext
testServer
useLiveServer
email
initAnonymousAccount
initPrimaryAccount
testDevice
initMockAccountWithTestAccount:testDevice:
password
initExplicitCredentialsAccountWithAccountOverrideInfo:
initWithAccountID:
altDSID
initWithAltDSID:
shouldUsePCSEncryption
updateAccount:clearPCSCacheHandler:
cancelAllOperations
apsEnvironmentEntitlement
compare:options:
serverPreferredPushEnvironment
setResolvedAPSEnvironmentString:
gatekeeperForContainerID:accountID:
setGatekeeper:
_writeAdopterMetadataToCache
adopterProcessType
setAdopterProcessType:
containerDirectory
setApplicationContainerPath:
setEntitlements:
setApplicationMetadata:forApplicationID:
setContainerOptions:
appContainerAccountTuple
setAppContainerAccountMetadata:forAppContainerAccountTuple:
hasCloudKitSystemServiceEntitlement
testDeviceReference
representativeDataclass
isDataclassEnabled:
isForClouddInternalUse
_cloudKitEnabledForCurrentClient
hasAllowUnverifiedAccountEntitlement
isPrimaryEmailVerified
canAuthWithCloudKit
canAccessAccount
isDataclassEnabledForCellular:
allowsCellularAccess
initWithContainer:
setDirectoryContext:
applicationDataContainerDirectoryForBundleID:outApplicationBinaryBundleURL:outAdopterProcessType:
pathExtension
stringByDeletingPathExtension
dataWithBytesNoCopy:length:freeWhenDone:
lengthOfBytesUsingEncoding:
CKUppercaseHexStringWithoutSpaces
MMCS
deviceScopedDatabase
MMCSWrapperForApplicationBundleID:directoryContext:database:error:
setMMCS:
setupMMCSWrapper:
assetCache
evictAllFilesForced:
uncancellableOperationQueue
fakeErrorsByClassName
removeObjectAtIndex:
removeObjectForKey:
fakeResponseOperationResultByClassNameByItemID
fakeResponseOperationLifetimeByClassName
integerValue
numberWithLong:
setFakeResponseOperationResultByItemID:
performRequest
addOperationWithBlock:
publicIdentitiesExpirationTimeout
serverConfig
publicIdentitiesExpirationTimeout:
useZoneWidePCS
mmcsEncryptionSupport
bypassPCSEncryption
componentsWithURL:resolvingAgainstBaseURL:
scheme
setScheme:
host
setHost:
port
setPort:
privateCloudDBURL
customCloudDBBaseURL
_urlBySettingCustomBaseURL:onURL:
publicCloudDBURL
privateShareServiceURL
customShareServiceBaseURL
publicShareServiceURL
privateDeviceServiceURL
customDeviceServiceBaseURL
publicDeviceServiceURL
privateCodeServiceURL
customCodeServiceBaseURL
publicCodeServiceURL
privateMetricsServiceURL
customMetricsServiceBaseURL
publicMetricsServiceURL
setServerConfig:
configurationForOperation:completionHandler:
setPublicCloudDBURL:
setPublicShareServiceURL:
setPublicDeviceServiceURL:
setPublicCodeServiceURL:
setPublicMetricsServiceURL:
containerScopedUserID
setContainerScopedUserID:
orgAdminUserID
setOrgAdminUserID:
containerServerInfoForOperation:requireUserIDs:completionHandler:
_fetchContainerServerInfoForOperation:requireUserIDs:completionHandler:
deviceContextForTestDeviceReference:
defaultContext
hasDeviceIdentifierEntitlement
deviceID
deviceIdentifierForContainer:
baseURLForServerType:partitionType:
updateAccountPropertiesAndSaveAccountWithCompletionHandler:
sharedClientInfo
hostname
preferredLanguages
currentLocale
objectForKey:
resolvedAPSEnvironmentString
useEncryption
pcsCacheForContainerID:accountOverrideInfo:accountID:encryptionServiceName:
applicationBundleIdentifier
associatedApplicationBundleID
initWithAppContainerTuple:accountID:
applicationBundleIdentifierOverrideForContainerAccess
applicationBundleIdentifierOverrideForNetworkAttribution
applicationBundleIdentifierOverrideForPushTopicGeneration
deviceScopedPushTopic:
serviceNameForContainerIdentifierMapEntitlement
hasSuffix:
isAppleInternal
_isAdopterAppleInternal
errorWithCode:userInfo:error:format:
operationInfo
hasMasqueradingEntitlement
clientPrefixEntitlement
stringWithValidatedFormat:validFormatSpecifiers:error:
cacheWithDeviceContext:
isAppleInternalInstall
frameworkCachesDirectoryWithCompletionHandler:
performFetchRecordVersionsOperation:clientOperationCallbackProxy:withBlock:
performFetchArchivedRecordsOperation:clientOperationCallbackProxy:withBlock:
performArchiveRecordsOperation:clientOperationCallbackProxy:withBlock:
performPublishAssetsOperation:clientOperationCallbackProxy:withBlock:
performRepairAssetsOperation:clientOperationCallbackProxy:withBlock:
performMarkAssetBrokenOperation:clientOperationCallbackProxy:withBlock:
performModifyWebSharingOperation:clientOperationCallbackProxy:withBlock:
getNewWebSharingIdentityDataWithCompletionHandler:
performModifyRecordAccessOperation:clientOperationCallbackProxy:withBlock:
performCompleteParticipantVettingOperation:clientOperationCallbackProxy:withBlock:
performFetchShareParticipantKeyOperation:clientOperationCallbackProxy:withBlock:
decryptPersonalInfoOnShare:completionHandler:
performInitiateParticipantVettingOperation:clientOperationCallbackProxy:withBlock:
performFetchUserQuotaOperation:clientOperationCallbackProxy:withBlock:
performFetchWhitelistedBundleIDsOperation:clientOperationCallbackProxy:withBlock:
performFetchRegisteredBundleIDsOperation:clientOperationCallbackProxy:withBlock:
serverPreferredPushEnvironmentWithCompletionHandler:
serverEnvironmentWithCompletionHandler:
currentDeviceIDWithCompletionHandler:
currentUserBoundaryKeyWithCompletionHandler:
performAggregateZonePCSOperation:clientOperationCallbackProxy:withBlock:
performFetchMergeableDeltasOperation:clientOperationCallbackProxy:withBlock:
performFetchMergeableDeltaMetadataOperation:clientOperationCallbackProxy:withBlock:
performReplaceMergeableDeltasOperation:clientOperationCallbackProxy:withBlock:
performUploadMergeableDeltasOperation:clientOperationCallbackProxy:withBlock:
performSerializeRecordModificationsOperation:clientOperationCallbackProxy:withBlock:
performDeserializeRecordModificationsOperation:clientOperationCallbackProxy:withBlock:
setFakeError:forNextRequestOfClassName:
setFakeResponseOperationResult:forNextRequestOfClassName:forItemID:withLifetime:
countAssetCacheItemsWithDatabaseScope:completionHandler:
clearAssetCacheWithDatabaseScope:completionHandler:
showAssetCacheWithDatabaseScope:
clearRecordCacheWithDatabaseScope:
clearAuthTokensWithRecordID:databaseScope:
clearCachesWithOptions:databaseScope:completionHandler:
clearCachesForRecordWithRecordID:databaseScope:completionHandler:
clearCachesForZoneWithZoneID:databaseScope:completionHandler:
fetchPCSFromCacheForZoneWithZoneID:databaseScope:completionHandler:
clearInvalidatedPCSCacheEntriesIfNeeded
getOutstandingOperationCountWithCompletionHandler:
dropDetachedContainersWithCompletionHandler:
setApplicationPermission:enabled:completionHandler:
resetAllApplicationPermissionsWithCompletionHandler:
statusGroupsForApplicationPermission:completionHandler:
clearContainerFromMetadataCache
clearPILSCacheForLookupInfos:
representativeDataclassEnabledWithCompletionHandler:
getPCSDiagnosticsForZonesWithCompletionHandler:
getRecordPCSDiagnosticsForZonesWithCompletionHandler:
performRepairZonePCSOperation:clientOperationCallbackProxy:withBlock:
tossConfigWithCompletionHandler:
deviceCountWithCompletionHandler:
signatureWithObjCTypes:
methodSignatureForSelector:
selector
hasSPIEntitlement
setTarget:
invoke
currentConnection
invalidate
forwardInvocation:
setSuspended:
removeObserver:name:object:
operationQueue
cleanupOperationQueue
backgroundOperationThrottleQueue
cloudKitSupportOperationThrottleQueue
clientThrottleQueueWidth
isSuspended
waitUntilAllOperationsAreFinished
tearDownAssetTransfers
applicationBundleIdentifierOverrideForTCC
_lockedHasTCCAuthorization
tccAuthQueue
isLongLived
sharedDetachedContainers
containerWithAppContainerAccountTuple:deviceContext:sharedContainerTable:
operationDaemonCallbackProtocolName
ckOperationClassName
isLongLivedCallbackRelayOperation
daemonCallbackCompletionSelector
operationInfoCache
initWithOperationID:callbackProtocol:completionSelector:operationInfoCache:
initWithClientOperationCallbackProxy:callbackProtocol:
validateAgainstLiveContainer:error:
handleOperationDidCompleteWithMetrics:error:
scheduleSendBarrierBlock:
addOperation:clientProvidedCallbackProxy:
operationInfoMetadataForOperationWithID:
retryNumber
isOutstandingOperation
longlivedOperationMaxRetryCount
setOperationInfo:forOperationID:appContainerAccountTuple:
invocationToFinishOperationWithInfo:withError:
initWithProtocol:invocation:isCompletionCallback:
archiveCallback:forOperationID:
setRequestOriginator:
_handleCompletionForOperation:initialMessageReplyBlock:customCompletionBlock:
pendingOperationIDs
cancellationQueue
callbackProxyForOperation:clientProvidedCallbackProxy:
setClientOperationCallbackProxy:
wantsRequestStatistics
handleRequestDidComplete:
setRequestCompletedBlock:
_isContainerAuthorizedForOperation:error:
CKClientSuitableError
handleLongLivedOperationDidPersist
usesBackgroundSession
hasCloudKitSupportServiceEntitlement
isCloudKitSupportOperation
initWithOperation:targetOperationQueue:
accountStatusWorkloop
_accountStatus
setAccountStatus:
setDeviceToDeviceEncryptionAvailability:
accountStatus
accountDataSecurityObserver
isManateeAvailableForAccount:isSecondaryAccount:error:
deviceToDeviceEncryptionAvailability
accountSupportsManatee:
isCarryAccount
setAccountPartition:
setHasValidCredentials:
iCloudAuthTokenWithContainer:error:
cloudKitAuthTokenWithContainer:error:
hasValidCredentials
invalidatePrimaryAccountCache
defaultConvenienceOperationConfiguration
setResolvedConfiguration:
containerForOperationInfo:
fetchImportantUserIDsForOperation:withCompletionHandler:
isBackgroundAssetsExtension
cloudServices
discoverable
_applicationPermissionStatusFromUserPrivacySetting:
enqueueOperation:clientProvidedCallbackProxy:initialMessageReplyBlock:
containerPrivacySettings
setDiscoverable:
applicationDisplayName
applicationIcon
showUserNotification:withCompletionBlock:
_globalStatusForApplicationPermission:completionHandler:
_setApplicationPermission:enabled:completionHandler:
statusForApplicationPermission:completionHandler:
unitTestOverrides
deleteAllInfoForOperationWithID:
operationStatisticsByClassName
initWithOperationClassName:
operationMetrics
openFileWithOpenInfo:error:
readBytesOfInMemoryAssetContentWithUUID:offset:length:error:
outstandingOperationInfosForIDs:
allOutstandingOperationIDsForAppContainerAccountTuple:
handleUserIdentityDiscoveryForLookupInfo:userIdentity:
setDiscoverUserIdentitiesProgressBlock:
_handleCompletionForOperation:initialMessageReplyBlock:
handleUserIdentityDiscovery:
handleShareParticipantFetchForLookupInfo:shareParticipant:error:
setShareParticipantFetchedBlock:
returnPCSMetadata
fillOutPCSMetadataInfo
handleSaveForRecordZoneID:recordZone:error:
setSaveCompletionBlock:
handleDeleteForRecordZoneID:error:
setDeleteCompletionBlock:
handleFetchForRecordZoneID:recordZone:error:
setRecordZoneFetchedProgressBlock:
handleChangeForRecordZoneID:
setRecordZoneWithIDChangedBlock:
handleDeleteForRecordZoneID:
setRecordZoneWithIDWasDeletedBlock:
handlePurgeForRecordZoneID:
setRecordZoneWithIDWasPurgedBlock:
handleEncryptedDataResetForRecordZoneID:
setRecordZoneWithIDWasDeletedDueToEncryptedDataResetBlock:
handleChangeSetCompletionWithServerChangeToken:databaseChangesStatus:error:reply:
setServerChangeTokenUpdatedBlock:
clientContainers
isEligibleForBroadcastingToContainer:
updateWithSavedRecordXPCMetadata:shouldOnlySaveAssetContent:
_copyWithoutPersonalInfo
_eligibleConnectedContainersForOOPUIContainer
handleSharingUIUpdatedShare:recordID:isDeleted:error:reply:
enumerateClientContainers:
handleRecordModificationForRecordID:didProgress:
setSaveProgressBlock:
handleRecordIDsInFlight:reply:
setRecordsInFlightBlock:
creationDate
setCreationDate:
setModificationDate:
expirationDate
setServerRecord:
shouldOnlySaveAssetContent
protectionData
setProtectionData:
setPcsKeyID:
allPCSKeyIDs
setAllPCSKeyIDs:
zoneishKeyID
setZoneishKeyID:
handleSaveForRecordID:recordMetadata:error:
_broadcastUpdateIfNeededForRecord:recordXPCMetadata:recordID:isDeleted:error:
handleDeleteForRecordID:error:
handleRecordUploadForRecordID:recordKey:arrayIndex:signature:size:paddedFileSize:uploaded:uploadReceipt:uploadReceiptExpiration:wrappedAssetKey:clearAssetKey:referenceSignature:
setUploadCompletionBlock:
userRecord
handleFetchForRecordID:record:error:
handleFetchForRecordID:didProgress:
setRecordFetchProgressBlock:
handleAssetDataForRecordID:recordKey:arrayIndex:data:offset:
setRecordFetchCommandBlock:
setRecordFetchCompletionBlock:
isFetchCurrentUserOperation
_performFetchCurrentUserRecordOperation:clientOperationCallbackProxy:withBlock:
_reallyPerformFetchRecordsOperation:clientOperationCallbackProxy:withBlock:
handleChangeForRecordID:record:error:
setRecordChangedBlock:
handleDeleteForRecordID:recordType:
setRecordDeletedBlock:
handleChangeSetCompletionForRecordZoneID:serverChangeToken:clientChangeTokenData:recordChangesStatus:hasPendingArchivedRecords:syncObligationZoneIDs:error:reply:
handleDeleteForRecordID:
handleChangeSetCompletionWithServerChangeToken:clientChangeTokenData:recordChangesStatus:reply:
resultServerChangeToken
resultClientChangeTokenData
resultStatus
handleOperationDidCompleteWithServerChangeToken:clientChangeTokenData:recordChangesStatus:metrics:error:
handleMoveForSourceRecordID:destinationMetadata:moveMarkerMetadata:error:
setMoveCompletionBlock:
handleQueryDidFetchForRecordID:record:error:
handleQueryDidFetchCursor:reply:
setQueryCursorUpdatedBlock:
resultsCursor
handleOperationDidCompleteWithCursor:metrics:error:
handleSubscriptionSaveForSubscriptionID:error:
handleSubscriptionDeleteForSubscriptionID:error:
handleSubscriptionFetchForSubscriptionID:subscription:error:
setSubscriptionFetchedProgressBlock:
handleChangedNotification:
setNotificationChangedBlock:
moreComing
handleOperationDidCompleteWithServerChangeToken:moreComing:metrics:error:
handleMarkNotificationReadCompletionForNotificationID:error:
setNotificationMarkedRead:
handleShareAcceptanceForURL:share:error:
setAcceptCompletionBlock:
setErrorOnOON:
handleShareMetadataFetchForURL:shareMetadata:error:
handleBundleIDsFetchedForURL:appBundleIDs:daemonBundleIDs:error:
webAuthToken
handleOperationDidCompleteWithWebAuthToken:metrics:error:
primaryEmail
formattedUsername
containerIdentifierToEmailOverrides
fullName
cancelOperationWithIdentifier:completionHandler:
sandboxExtensions
consumeSandboxExtensions:reply:
cachedSandboxExtensions
fileStagingDirectory
fileDownloadDirectory
assetDbDirectory
frameworkCachesDirectory
packageStagingDirectory
hasDataContainer
setCachedSandboxExtensions:
resetThrottles
addThrottle:
statusReportWithIndent:
operationCount
gatekeeper
CKStatusReportArrayIncludingSharedOperations:
handleReplaceLocalWithWireSerializations:encryptedMasterKeys:wireEnvelopes:reply:
setReplaceLocalSerializationsBlobs:
handleInitialResponseReceived:reply:
setInitialResponseReceivedCallback:
handleReplaceWireSerializationsWithRecords:
setReplaceWireSerializations:
_performCodeFunctionInvokeOperation:clientOperationCallbackProxy:block:
statusQueue
metricUUID
reportCKEventMetric:container:completionHandler:
stringValue
lastKnownServerConfiguration
suggestedMergeableDeltaSize:
setupAssetTransfers:
countAssetCacheItems
knownAppContainerAccountTuplesForAccountID:
showAssetCache
recordCache
initialize
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
accountInfoWithCompletionHandler:
reloadAccountWithCompletionHandler:
performCodeOperation:clientOperationCallbackProxy:withBlock:
performCodeFunctionInvokeOperation:clientOperationCallbackProxy:withBlock:
dumpDaemonStatusReportToFileHandle:completionHandler:
submitClientEventMetric:completeWhenQueued:completionHandler:
importantUserIDsWithCompletionHandler:
requestApplicationPermission:completionHandler:
performDiscoverUserIdentitiesOperation:clientOperationCallbackProxy:withBlock:
performDiscoverAllUserIdentitiesOperation:clientOperationCallbackProxy:withBlock:
performFetchShareParticipantsOperation:clientOperationCallbackProxy:withBlock:
performFetchRecordsOperation:clientOperationCallbackProxy:withBlock:
performModifyRecordsOperation:clientOperationCallbackProxy:withBlock:
performFetchRecordChangesOperation:clientOperationCallbackProxy:withBlock:
performFetchRecordZoneChangesOperation:clientOperationCallbackProxy:withBlock:
performQueryOperation:clientOperationCallbackProxy:withBlock:
performModifySubscriptionsOperation:clientOperationCallbackProxy:withBlock:
performFetchSubscriptionsOperation:clientOperationCallbackProxy:withBlock:
performModifyRecordZonesOperation:clientOperationCallbackProxy:withBlock:
performFetchRecordZonesOperation:clientOperationCallbackProxy:withBlock:
performFetchDatabaseChangesOperation:clientOperationCallbackProxy:withBlock:
performModifyBadgeOperation:clientOperationCallbackProxy:withBlock:
performFetchNotificationChangesOperation:clientOperationCallbackProxy:withBlock:
performMarkNotificationsReadOperation:clientOperationCallbackProxy:withBlock:
performAcceptSharesOperation:clientOperationCallbackProxy:withBlock:
performFetchShareMetadataOperation:clientOperationCallbackProxy:withBlock:
performMapShareURLsToInstalledBundleIDsOperation:clientOperationCallbackProxy:withBlock:
performFetchWebAuthTokenOperation:clientOperationCallbackProxy:withBlock:
performMovePhotosOperation:clientOperationCallbackProxy:withBlock:
fetchLongLivedOperationsWithIDs:completionHandler:
fetchAllLongLivedOperationIDsWithCompletionHandler:
fetchXPCCriteriaWithCompletionHandler:
displayInfoOnAccountWithCompletionHandler:
suggestedMergeableDeltaSizeWithCompletionHandler:
T@"NSObject<OS_dispatch_workloop>",R,N
preferAnonymousRequests
allowsExpensiveNetworkAccess
fetchConfigurationForOperation:withCompletionHandler:
fetchPublicURLForServerType:operation:completionHandler:
fetchServerEnvironmentForOperation:withCompletionHandler:
hardwareID
fetchPrivateURLForServerType:operation:completionHandler:
deviceName
languageCode
regionCode
apsEnvironmentString
anonymousSharingManager
applicationBundleIdentifierForPush
possiblyWrappedAuthTokenErrorGivenError:
publicIdentitiesDiskCache
foregroundPublicIdentityLookupService
backgroundPublicIdentityLookupService
linkWithClientContainer:
countAssetCacheItemsWithDatabaseScope:
applicationVersion
setAppContainerTuple:
setRecordCache:
setOperationQueue:
setCleanupOperationQueue:
setFakeErrorsByClassName:
setFakeResponseOperationLifetimeByClassName:
setFakeResponseOperationResultByClassNameByItemID:
accountLock
setAccountLock:
serverConfigLock
setServerConfigLock:
mmcsLock
setMmcsLock:
deviceContextLock
setDeviceContextLock:
anonymousSharingManagerLock
setAnonymousSharingManagerLock:
sandboxExtensionsLock
setSandboxExtensionsLock:
fetchAggregatorLock
setFetchAggregatorLock:
setFetchAggregator:
setApplicationIcon:
setApplicationDisplayName:
setPublicIdentitiesDiskCache:
setForegroundPublicIdentityLookupService:
setBackgroundPublicIdentityLookupService:
setCancellationQueue:
setStatusQueue:
setUncancellableOperationQueue:
setBackgroundOperationThrottleQueue:
setCloudKitSupportOperationThrottleQueue:
setPendingOperationIDs:
hasTCCAuthorizationTernary
setHasTCCAuthorizationTernary:
setDeviceContext:
setHardwareID:
tccAuthOpQueue
setTccAuthOpQueue:
setTccAuthQueue:
TCCDatabaseChangedNotificationObserver
setOperationStatisticsByClassName:
setPcsManager:
setPcsCache:
setAnonymousSharingManager:
setHasDataContainer:
setClientContainers:
_isForClouddInternalUse
_hasDataContainer
_account
_processScopedClientProxy
_logicalDeviceScopedClientProxy
_cachedEnvironment
_adopterProcessType
_applicationVersion
_directoryContext
_appContainerTuple
_entitlements
_options
_MMCS
_recordCache
_gatekeeper
_serverConfig
_publicCloudDBURL
_publicShareServiceURL
_publicDeviceServiceURL
_publicCodeServiceURL
_publicMetricsServiceURL
_containerScopedUserID
_orgAdminUserID
_operationQueue
_cleanupOperationQueue
_fakeErrorsByClassName
_fakeResponseOperationLifetimeByClassName
_fakeResponseOperationResultByClassNameByItemID
_accountLock
_serverConfigLock
_mmcsLock
_deviceContextLock
_anonymousSharingManagerLock
_sandboxExtensionsLock
_fetchAggregatorLock
_fetchAggregator
_applicationIcon
_applicationDisplayName
_resolvedAPSEnvironmentString
_containingBundleID
_publicIdentitiesDiskCache
_foregroundPublicIdentityLookupService
_backgroundPublicIdentityLookupService
_cancellationQueue
_statusQueue
_uncancellableOperationQueue
_backgroundOperationThrottleQueue
_cloudKitSupportOperationThrottleQueue
_pendingOperationIDs
_hasTCCAuthorizationTernary
_deviceContext
_hardwareID
_tccAuthOpQueue
_tccAuthQueue
_TCCDatabaseChangedNotificationObserver
_operationStatisticsByClassName
_pcsManager
_pcsCache
_anonymousSharingManager
_cachedSandboxExtensions
_clientContainers
T@"NSRecursiveLock",&,N,V_accountLock
T@"NSRecursiveLock",&,N,V_serverConfigLock
T@"NSRecursiveLock",&,N,V_mmcsLock
T@"NSRecursiveLock",&,N,V_deviceContextLock
T@"NSRecursiveLock",&,N,V_anonymousSharingManagerLock
T@"NSRecursiveLock",&,N,V_sandboxExtensionsLock
T@"NSRecursiveLock",&,N,V_fetchAggregatorLock
T@"CKDMMCS",&,N,V_MMCS
T@"CKDZoneGatekeeper",&,N,V_gatekeeper
T@"CKDPCSFetchAggregator",&,N,V_fetchAggregator
T@"NSURL",&,N,V_applicationIcon
T@"NSString",&,N,V_applicationDisplayName
T@"CKDDirectoryContext",&,N,V_directoryContext
T@"NSString",&,N,V_resolvedAPSEnvironmentString
T@"NSString",&,N,V_containingBundleID
T@"CKDIdentityCache",&,N,V_publicIdentitiesDiskCache
T@"CKDPublicIdentityLookupService",&,N,V_foregroundPublicIdentityLookupService
T@"CKDPublicIdentityLookupService",&,N,V_backgroundPublicIdentityLookupService
T@"NSObject<OS_dispatch_queue>",&,N,V_cancellationQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_statusQueue
T@"NSOperationQueue",&,N,V_operationQueue
T@"NSOperationQueue",&,N,V_cleanupOperationQueue
T@"NSOperationQueue",&,N,V_uncancellableOperationQueue
T@"NSOperationQueue",&,N,V_backgroundOperationThrottleQueue
T@"NSOperationQueue",&,N,V_cloudKitSupportOperationThrottleQueue
T@"NSMutableSet",&,N,V_pendingOperationIDs
Tq,N,V_hasTCCAuthorizationTernary
T@"CKEntitlements",&,N,V_entitlements
T@"CKContainerOptions",&,N,V_options
T@"CKDLogicalDeviceContext",&,N,V_deviceContext
T@"NSString",&,N,V_hardwareID
T@"CKDAppContainerTuple",&,N,V_appContainerTuple
T@"CKDServerConfiguration",&,N,V_serverConfig
T@"NSOperationQueue",&,N,V_tccAuthOpQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_tccAuthQueue
T@"<NSObject>",&,N,V_TCCDatabaseChangedNotificationObserver
T@"NSMutableDictionary",&,N,V_operationStatisticsByClassName
T@"CKDPCSManager",&,N,V_pcsManager
T@"CKDPCSCache",&,N,V_pcsCache
T@"CKDAnonymousSharingManager",&,N,V_anonymousSharingManager
T@"NSArray",&,N,V_cachedSandboxExtensions
TB,N,V_hasDataContainer
T@"NSMutableSet",&,N,V_clientContainers
TB,N,V_isForClouddInternalUse
T@"CKDProcessScopedClientProxy",R,W,N,V_processScopedClientProxy
T@"CKDLogicalDeviceScopedClientProxy",R,W,N,V_logicalDeviceScopedClientProxy
T@"NSString",R,N
Tq,V_cachedEnvironment
T@"CKContainerID",R,N
T@"CKDApplicationID",R
Tq,R,N,V_adopterProcessType
T@"NSString",R,N,V_applicationVersion
T@"CKDAppContainerAccountTuple",R,N
T@"CKDAccount",R,N,V_account
T@"CKAccountOverrideInfo",R,N
T@"CKDRecordCache",&,N,V_recordCache
T@"NSURL",C,V_publicCloudDBURL
T@"NSURL",C,V_publicShareServiceURL
T@"NSURL",C,V_publicDeviceServiceURL
T@"NSURL",C,V_publicCodeServiceURL
T@"NSURL",C,V_publicMetricsServiceURL
T@"NSString",C,V_containerScopedUserID
T@"NSString",C,V_orgAdminUserID
T@"NSMutableDictionary",&,N,V_fakeErrorsByClassName
T@"NSMutableDictionary",&,N,V_fakeResponseOperationLifetimeByClassName
T@"NSMutableDictionary",&,N,V_fakeResponseOperationResultByClassNameByItemID
handleFetchForRecordID:isDeleted:versions:error:
setRecordVersionFetchedBlock:
setRecordFetchedBlock:
handleChangeSetCompletionForRecordZoneID:serverChangeToken:archivedRecordStatus:error:reply:
handleRecordArchivalForRecordID:error:
setRecordArchivedBlock:
handleAssetPublishCompletionForRecordID:publishedAsset:recordKey:error:
setAssetPublishedBlock:
repairZoneRecordID
handleAssetRepairCompletionForRecordID:error:
setAssetOrPackageRepairedBlock:
handleMarkAssetBrokenCompletionWithRepairRecordID:error:
setAssetOrPackageMarkedBrokenBlock:
handleWebSharingInitiationForRecordID:sharingKey:baseSharingToken:error:
setRecordWebSharedBlock:
handleWebSharingRevocationForRecordID:error:
setRecordWebUnsharedBlock:
createRandomSharingIdentityWithError:
dataFromSharingIdentity:error:
getNewWebSharingIdentityWithCompletionHandler:
handleSerialization:error:
setSerializeCompletionBlock:
handleDeserializationOfSaves:deletes:error:
setDeserializeCompletionBlock:
handleRecordAccessInitiationForRecordID:accessToken:referenceIdentifier:error:
setAccessWasGrantedBlock:
handleRecordAccessRevocationForRecordID:error:
setAccessWasRevokedBlock:
handleReconstructedShareURL:
setVerifyProgressURLReconstructedBlock:
handleFetchedShareMetadata:
setVerifyProgressShareMetadataFetchedBlock:
handleParticipantKeyFetchForRecordID:participantKey:error:
setShareParticipantKeyFetchedBlock:
ownerName
handleParticipantVettingProgressWithError:
setParticipantVettingProgressBlock:
quotaAvailable
handleOperationDidCompleteWithQuotaAvailable:metrics:error:
handleFetchForMergeableValueID:fetchedDeltas:error:
setDeltasFetchedBlock:
handleFetchForMergeableValueID:metadatas:error:
setMetadataFetchedBlock:
handleCompletedReplaceDeltasRequest:error:
setPerReplacementCompletionBlock:
metadata
handleUploadForDeltaIdentifier:error:
setUploadDeltaCompletionBlock:
handleReplacementRequest:error:
setReplaceDeltasRequestCompletionBlock:
handleOperationDidCompleteWithBundleIDs:metrics:error:
boundaryKeyDataWithCompletionHandler:
expireGlobalConfiguration
CKFilter:
accountStore
accountTypeWithAccountTypeIdentifier:
clearAllPermissionsGrantedForAccountType:
appPermissionGroupsFromContainerPrivacySettings:
removeContainerID:
removeCacheForLookupInfos:
pcsDiagnosticInfo
corruptRecords
zoneIDs
handleZonePCSRepairForID:pcsInfo:error:
setZonePCSRepairProgressBlock:
numberWithInt:
setHeaderKey:
setHeaderValue:
headerKey
headerValue
_headerKey
_headerValue
T@"NSString",&,N,V_headerKey
T@"NSString",&,N,V_headerValue
serializedModifications
_setupTranslator
_deserialize
_postflightRecords
hasAllowRealTimeOperationsEntitlement
deserializeCompletionBlock
recordsToSave
recordIDsToDelete
setTranslator:
saveRecords
array
record
recordFromPRecord:error:
associatedMergeableDeltas
mergeableDeltas
hasData
isEncrypted
mergeableValueIDFromPMergeableValueIdentifier:recordName:fieldName:encrypted:error:
mergeableDeltaFromPDelta:valueID:error:
addUnmergedDeltas:
setRecordsToSave:
deleteRecordids
setRecordIDsToDelete:
setShouldFetchAssetContent:
setShouldFetchMergeableValues:
setFullRecordsToFetch:
setUseRecordCache:
setShouldUpdateTimestampsForFetchedMergeableValues:
setSerializedModifications:
_deserializeCompletionBlock
_serializedModifications
_translator
_recordsToSave
_recordIDsToDelete
T@"NSData",&,N,V_serializedModifications
T@"CKDProtocolTranslator",&,V_translator
T@"NSArray",&,V_recordsToSave
T@"NSArray",&,V_recordIDsToDelete
T@"<CKDeserializeRecordModificationsOperationCallbacks>",&,D,N
T@?,C,N,V_deserializeCompletionBlock
timeIntervalSinceReferenceDate
itemID
lastAccess
setPcsData:
setLastAccess:
_pcsData
_lastAccess
T@"CKDPCSData",&,N,V_pcsData
Td,V_lastAccess
setupMemoryNotifications
registerEvictionTimer
stopEvictionTimer
runMemoryCacheEvictionInAllCaches
PCSCacheSize
PCSCacheMinTime
accessQueue
cacheEntries
minAge
maxEntries
oldestCacheEntry
keysSortedByValueUsingComparator:
setOldestCacheEntry:
memoryCacheEvictCount
setMemoryCacheEvictCount:
startEvictionTimer
memoryCacheRequestCount
setMemoryCacheRequestCount:
memoryCacheHitCount
setMemoryCacheHitCount:
memoryCacheUpdateCount
setMemoryCacheUpdateCount:
memoryCacheHighwaterCount
setMemoryCacheHighwaterCount:
memoryCacheDeleteCount
setMemoryCacheDeleteCount:
_lockedEvictEntriesFromCache
_cacheCount
setMaxEntries:
setCacheEntries:
setAccessQueue:
_maxEntries
_minAge
_cacheEntries
_accessQueue
_oldestCacheEntry
_memoryCacheRequestCount
_memoryCacheHitCount
_memoryCacheHighwaterCount
_memoryCacheDeleteCount
_memoryCacheUpdateCount
_memoryCacheEvictCount
T@"NSMutableDictionary",&,N,V_cacheEntries
T@"NSObject<OS_dispatch_queue>",&,N,V_accessQueue
Td,V_oldestCacheEntry
TQ,V_memoryCacheRequestCount
TQ,V_memoryCacheHitCount
TQ,V_memoryCacheHighwaterCount
TQ,V_memoryCacheDeleteCount
TQ,V_memoryCacheUpdateCount
TQ,V_memoryCacheEvictCount
TQ,N,V_maxEntries
Td,N,V_minAge
addIdsToArchive:
idsToArchivesCount
clearIdsToArchives
idsToArchiveAtIndex:
idsToArchiveType
idsToArchives
setIdsToArchives:
_idsToArchives
T@"NSMutableArray",&,N,V_idsToArchives
addAssetAuthorizationResponses:
addThrottleConfig:
assetAuthorizationResponsesCount
clearAssetAuthorizationResponses
assetAuthorizationResponsesAtIndex:
throttleConfigsCount
clearThrottleConfigs
throttleConfigAtIndex:
assetAuthorizationResponsesType
throttleConfigType
assetAuthorizationResponses
setAssetAuthorizationResponses:
throttleConfigs
setThrottleConfigs:
_assetAuthorizationResponses
_throttleConfigs
T@"NSMutableArray",&,N,V_assetAuthorizationResponses
T@"NSMutableArray",&,N,V_throttleConfigs
setFieldName:
setCoordinate:
hasFieldName
order
setOrder:
setHasOrder:
hasOrder
orderAsString:
StringAsOrder:
hasCoordinate
fieldName
coordinate
_coordinate
_fieldName
_order
T@"CKDPRecordFieldIdentifier",&,N,V_fieldName
Ti,N,V_order
T@"CKDPLocationCoordinate",&,N,V_coordinate
indexSet
containsIndexesInRange:
addIndexesInRange:
dataWithBytes:length:
MMCSRequest
MMCSItem
handleCommand:forItem:
openWithError:
closeWithError:
getFileMetadataWithError:
readBytesAtOffset:bytes:length:bytesRead:error:
writeBytesAtOffset:bytes:length:bytesWritten:error:
T@"CKDMMCSItemGroupContext",R,N
T@"CKDMMCSItem",R,N
initWithMMCSItem:MMCSRequest:
isContiguous
setMMCSRequest:
setMMCSItem:
byteRanges
setByteRanges:
maximumLength
setMaximumLength:
_MMCSRequest
_MMCSItem
_byteRanges
_maximumLength
T@"CKDMMCSItemGroupContext",&,N,V_MMCSRequest
T@"CKDMMCSItem",&,N,V_MMCSItem
T@"NSMutableIndexSet",&,N,V_byteRanges
TQ,N,V_maximumLength
assetTokenRequest
setAssetTokenRequest:
assetBatches
failedAssetBatches
addAssetBatch:
addFailedBatch:
hasSuccessfulBatches
successfulBatches
setAssetBatches:
setFailedAssetBatches:
setSizeUpperBound:
_sizeUpperBound
_assetBatches
_failedAssetBatches
T@"NSMutableArray",&,N,V_assetBatches
T@"NSMutableSet",&,N,V_failedAssetBatches
TI,N,V_sizeUpperBound
TI,N,V_size
addApplicationBundle:
setApplicationContainer:
applicationBundlesCount
clearApplicationBundles
applicationBundleAtIndex:
setUserPrivacySettings:
applicationBundleType
hasApplicationContainer
applicationContainerEnvironment
setApplicationContainerEnvironment:
setHasApplicationContainerEnvironment:
hasApplicationContainerEnvironment
applicationContainerEnvironmentAsString:
StringAsApplicationContainerEnvironment:
hasUserPrivacySettings
applicationContainer
applicationBundles
setApplicationBundles:
userPrivacySettings
_applicationBundles
_applicationContainer
_applicationContainerEnvironment
_userPrivacySettings
T@"NSString",&,N,V_applicationContainer
Ti,N,V_applicationContainerEnvironment
T@"NSMutableArray",&,N,V_applicationBundles
T@"CKDPUserPrivacySettings",&,N,V_userPrivacySettings
rowid
setRowid:
setLookupInfo:
setContainerIdentifier:
dataSeparationHash
setDataSeparationHash:
identity
setIdentity:
_rowid
_lookupInfo
_containerIdentifier
_dataSeparationHash
_identity
T@"NSNumber",&,N,V_rowid
T@"CKUserIdentityLookupInfo",&,N,V_lookupInfo
T@"NSString",&,N,V_containerIdentifier
T@"NSString",&,N,V_dataSeparationHash
T@"CKUserIdentity",&,N,V_identity
valuesDictionaryForLookupInfo:container:
predicateForMatchingLookupInfoInContainer
dateWithTimeIntervalSinceNow:
entryWithValues:label:error:setupBlock:
setIsCached:
deleteUserIdentityForLookupInfo:container:
insertUserIdentity:forLookupInfo:container:
cachedIdentityForLookupInfo:container:
tableWithName:
cache
isUniqueConstraintError:
removeCachedValueForLookupInfo:container:
cacheUserIdentity:forLookupInfo:container:
pipeliningDescription
perRequestCallbackQueueSuspended
setPerRequestCallbackQueueSuspended:
initWithRequest:operation:
addPerRequestCallbackBlock:
disablePerRequestCallbackBlocks
cancelAndDisablePerRequestCallbackBlocks
suspendCallbackQueue
resumeCallbackQueue
perRequestCallbackGroup
setPerRequestCallbackGroup:
perRequestGroup
setPerRequestGroup:
perRequestCallbackQueue
setPerRequestCallbackQueue:
perRequestCallbackBlocks
setPerRequestCallbackBlocks:
setIsCancelled:
_perRequestCallbackQueueSuspended
_isCancelled
_request
_perRequestCallbackGroup
_perRequestGroup
_perRequestCallbackQueue
_perRequestCallbackBlocks
TB,N,V_perRequestCallbackQueueSuspended
T@"NSMutableArray",&,N,V_perRequestCallbackBlocks
TB,N,V_isCancelled
T@"<CKDURLRequestPipelining>",&,N,V_request
T@"<CKDOperationPipelining>",W,N,V_operation
T@"NSObject<OS_dispatch_group>",&,N,V_perRequestCallbackGroup
T@"NSObject<OS_dispatch_group>",&,N,V_perRequestGroup
T@"NSObject<OS_dispatch_queue>",&,N,V_perRequestCallbackQueue
shouldKeepXPCConnectionAlive
requestOriginator
initWithLog:
_ensureOperationGroup
configureQualityOfServiceFromOperationInfo:
pipelineFetchAllChangesRequests
qualityOfService
_globalOperationCallbackQueueForQOS:
topmostParentOperation
group
setGroup:
strongContainer
weakContainer
QOSClass
hasDarkWakeNetworkReachabilityEnabledEntitlement
systemScheduler
automaticallyRetryNetworkFailures
duetPreClearedMode
discretionaryWhenBackgroundedState
discretionaryNetworkBehavior
clientQueuePriority
MMCSRequestOptions
resolvedConfiguration
removeUnitTestOverride:
authPromptReason
timeoutIntervalForRequest
timeoutIntervalForResource
additionalRequestHTTPHeaders
cacheDeleteAvailableSpaceClass
operationGroupID
quantityNumber
isExecuting
isWaitingOnPCS
dictionaryWithCapacity:
CKAddPropertySafelyForKey:value:
isFinished
requestUUIDs
startDate
timeIntervalSinceNow
numberWithDouble:
CKRoundedToMaximumDecimalPlaces:
finishedChildOperationIDs
childOperations
CKMap:
operationGroupName
substringToIndex:
operationGroupQuantityNumber
MMCSMetrics
_stateFlags
cloudKitMetrics
addCKSpecificMetricsFromMetrics:
updateMetric:withBlock:
setParentOperation:
setMMCSRequestOptions:
setClientQueuePriority:
setDuetPreClearedMode:
setDiscretionaryWhenBackgroundedState:
setSystemScheduler:
clientHasValidatedEntitlements
setClientHasValidatedEntitlements:
usesAssetDownloadStagingManager
setUsesAssetDownloadStagingManager:
setUseEncryption:
requestCompletedBlock
combineMetricsWithOperation:
childOperationsGroup
spawnAndRunOperationOfClass:operationInfo:spawnQueue:operationConfigurationBlock:
_registerAttemptForOperation
registerAttemptForOperationWithID:
applicationWithBundleID:canSyncUsingVersion:forContainerID:
_determineNetworkServiceType
networkServiceType
setAllowsCellularAccess:
setIsUplink:
resolvedNetworkServiceTypeForConfig:
isPredominatelyDownload
expectedSendSize
expectedReceiveSize
systemImposedInfo
setExpectedSendSize:
setExpectedReceiveSize:
networkServiceTypePerConfig
setNetworkServiceTypePerConfig:
unsignedIntegerValue
numberWithUnsignedInteger:
approximateSendBytes
approximateReceiveBytes
setSystemImposedInfo:
handleSystemDidImposeInfo:
_continueOperationStart
osActivity
signpost
setMetricExecuteStartDate:
metricExecuteStartDate
newRangeWithOperationState:startDate:duration:
addRange:
transitionToExecuting
raise:format:
supportsDeviceThrottling
enforcedThrottleForCriteria:willSendRequest:outThrottleError:
canTestInClientProcess
setHasBeenThrottled:
addEntriesForUnitTestOverrides:
shouldCheckAppVersion
_checkAppVersion
isTopLevelDaemonOperation
takeActionOnOperation:proceedBlock:
handleDaemonOperationWillStartWithClassName:isTopLevelDaemonOperation:replyBlock:
_finishInternalOnCallbackQueueWithError:
setDuration:
isEnabled
initWithCloudKitMetrics:andMMCSMetrics:
sharedLogger
quantity
logOperationCombinedMetrics:forOperationID:operationType:operationGroupID:operationGroupName:operationGroupQuantity:operationQualityOfService:appContainerTuple:
sendCoreAnalyticsEventOperationFinished
transitionToFinished
setQueuePriority:
resolvedAutomaticallyRetryNetworkFailures
resolvedDiscretionaryNetworkBehavior
setStrongContainer:
openFileWithOpenInfo:reply:
handleFinishWithAssetDownloadStagingInfo:reply:
configureRequest:
setClientProvidedAdditionalHeaderValues:
setUnitTestOverrides:
requestCount
setRequestCount:
automatedDeviceGroup
setAutomatedDeviceGroup:
requestOperationCountsByOperationType
addRequestOperationCountsByOperationType:
responseHeaders
captureResponseHTTPHeaders
initWithRequestUUID:responseHTTPHeaders:w3cTiming:
setOperationClassName:
returnRequestOperationProto
requestOperations
setRequestOperations:
domain
userInfo
unsignedLongValue
defaultRetryAfter
setLabel:
setOperationType:
setErrorCode:
initWithMMCSOperationMetric:
setMMCSMetrics:
setCloudKitMetrics:
setTimeStyle:
setDateStyle:
stringFromDate:
appendFormat:
_startDateString
CKStatusReportProperties
appendString:
CKStatusReportLogGroups
didAttemptDugongKeyRoll
dugongKeyRollAnalyticsPayloadWithError:
analyticsPayload
baseOperationAndErrorInfoCoreAnalyticsPayloadWithError:
duration
queueing
executing
bytesUploaded
bytesDownloaded
connections
connectionsCreated
relevantZoneIDs
isOperationType:
serviceName
functionName
createSerialQueue
createInactiveSerialQueue
createConcurrentQueue
createInactiveConcurrentQueue
allowsPowerNapScheduling
checkAndClearUnitTestOverrides:
noteOperationWillWaitOnPCS
noteOperationDidFinishWaitingOnPCS
isConcurrent
expectDelayBeforeRequestBegins
finishWithAssetDownloadStagingInfo:fileURL:fileHandle:error:
request:didFinishWithMetrics:w3cNavigationTiming:
isNetworkingBehaviorEquivalentForOperation:
setStartDate:
useClearAssetEncryption
setUseClearAssetEncryption:
shouldPipelineFetchAllChangesRequests
setShouldPipelineFetchAllChangesRequests:
setOperationInfo:
setStateTransitionGroup:
setRequestUUIDs:
setChildOperations:
setFinishedChildOperationIDs:
setChildOperationsGroup:
pcsWaitCount
setPcsWaitCount:
setWeakContainer:
transaction
setDidAttemptDugongKeyRoll:
_state
_osActivity
_executionState
_useEncryption
_useClearAssetEncryption
_isLongLivedCallbackRelayOperation
_shouldPipelineFetchAllChangesRequests
_didAttemptDugongKeyRoll
_pcsWaitCount
_clientOperationCallbackProxy
_cloudKitMetrics
_MMCSMetrics
_startDate
_parentOperation
_error
_requestCompletedBlock
_operationInfo
_requestOriginator
_stateTransitionGroup
_requestUUIDs
_childOperations
_finishedChildOperationIDs
_childOperationsGroup
_weakContainer
_strongContainer
_transaction
_signpost
_metricExecuteStartDate
T@"NSMutableArray",&,N,V_requestUUIDs
T@"CKDOperation",W,N,V_parentOperation
T@"NSMutableArray",&,N,V_childOperations
T@"NSMutableArray",&,N,V_finishedChildOperationIDs
T@"NSDate",&,N,V_startDate
T@"NSObject<OS_dispatch_group>",&,N,V_childOperationsGroup
T@"CKOperationInfo",&,N,V_operationInfo
TAi,N,V_pcsWaitCount
T@"CKDContainer",W,N,V_weakContainer
T@"CKDContainer",&,N,V_strongContainer
T@"NSObject<OS_os_transaction>",R,N,V_transaction
T@"CKSignpost",R,N,V_signpost
T@"CKDLogicalDeviceContext",R,N
T@"NSDate",&,N,V_metricExecuteStartDate
TB,N,V_didAttemptDugongKeyRoll
TQ,R,N
T@"CKDOperation",R,W,N
T@"<CKOperationCallbacks>",&,N,V_clientOperationCallbackProxy
T@"CKDContainer",R,N
TB,N,V_useEncryption
TB,N,V_useClearAssetEncryption
TB,R,N,V_isLongLivedCallbackRelayOperation
TB,N,V_shouldPipelineFetchAllChangesRequests
TI,R,N
T@"NSError",&,V_error
T@"CKDURLRequest",&,N,V_request
T@"CKOperationMetrics",R,N
T@"CKDOperationMetrics",R,C,V_cloudKitMetrics
T@"CKDOperationMetrics",R,C,V_MMCSMetrics
T@?,C,N,V_requestCompletedBlock
Tq,R,N
T@"CKOperationMMCSRequestOptions",R,N
T@"NSDictionary",R,N
Td,R,N
T@"NSNumber",R,N
T@"NSObject<OS_os_activity>",R,N
TQ,N,V_requestOriginator
TQ,N
T@"NSObject<OS_dispatch_group>",&,N,V_stateTransitionGroup
setCode:
setHasCode:
hasCode
codeAsString:
StringAsCode:
hasError
_code
Ti,N,V_code
T@"CKDPResponseOperationResultError",&,N,V_error
setEntropy:
hasEntropy
entropy
_entropy
T@"NSData",&,N,V_entropy
activity
waitCompletedHandler
initWithWaiter:zoneIDs:waitCompletedHandler:activity:
invokeWaitCompletedHandler:
waiter
_waiter
_zoneIDs
_activity
_waitCompletedHandler
_personaID
T@"<CKDZoneGatekeeperWaiter>",R,N,V_waiter
T@"NSArray",R,N,V_zoneIDs
T@"NSObject<OS_os_activity>",R,N,V_activity
T@?,R,N,V_waitCompletedHandler
T@"NSString",R,N,V_personaID
underlyingCKShortDescription
initWithExistingWaiter:
_qualityOfService
_underlyingCKShortDescription
Tq,R,N,V_qualityOfService
T@"NSString",R,N,V_underlyingCKShortDescription
zoneIDsToGateHolders
waiterWrappers
relinquishLocksForWaiter:deferRelinquish:
registerWaiter:forZoneIDs:completionHandler:
setZoneIDsToGateHolders:
setWaiterWrappers:
_zoneIDsToGateHolders
_waiterWrappers
T@"NSMutableDictionary",&,N,V_zoneIDsToGateHolders
T@"NSMutableArray",&,N,V_waiterWrappers
strongToWeakObjectsMapTable
initWithObject1:object2:
_init
foreground
background
registerWaiter:forZoneIDs:expectDelayBeforeRequestBegins:completionHandler:
setForeground:
setBackground:
_foreground
_background
T@"CKDZoneGatekeeperImplementation",&,N,V_foreground
T@"CKDZoneGatekeeperImplementation",&,N,V_background
mergeableValueIDs
fetchMetadata
fetchMetadataRecursivelyForMergeableValueIDs:continuationTokens:completionHandler:
initWithOperation:mergeableValueIDs:continuationTokens:
handleFetchedMetadatasForMergeableValueID:metadatas:result:
metadataFetchedBlock
needsDecryption
setShareProtection:
setMergeableValueID:
decryptWithContext:error:
setMergeableValueIDs:
_metadataFetchedBlock
_mergeableValueIDs
T@"NSArray",&,N,V_mergeableValueIDs
T@"<CKFetchMergeableDeltaMetadataOperationCallbacks>",&,D,N
T@?,C,N,V_metadataFetchedBlock
setContactInformation:
hasContactInformation
contactInformation
_contactInformation
T@"CKDPContactInformation",&,N,V_contactInformation
assetZoneKey
initWithAssetZoneKey:
initWithAssetZone:
setUseMMCSEncryptionV2:
assetRecords
asset
assetTransferOptions
useMMCSEncryptionV2
addAssetRecord:
assetZone
destinationZoneID
isEmptyOfAssets
isFailed
setIsFailed:
assetRegisterAndPutBatches
assetGetChunkKeysBatches
items
assetTokenRequests
initWithMMCSEncryptionSupport:
resetAssetTokenRequests
planRegisterBatches
planGetChunkKeysBatches
planAssetRequests
failBatch:
hasSuccessfulAssetTokenRequests
setAssetRegisterAndPutBatches:
setAssetGetChunkKeysBatches:
assetTokenRequestSizeLimit
setAssetTokenRequests:
rerefAssetBatchesByZoneID
setRerefAssetBatchesByZoneID:
assetBatchesByZoneID
setAssetBatchesByZoneID:
setMmcsEncryptionSupport:
setItems:
assetZoneByKey
setAssetZoneByKey:
_assetTokenRequestSizeLimit
_assetRegisterAndPutBatches
_assetGetChunkKeysBatches
_assetTokenRequests
_rerefAssetBatchesByZoneID
_assetBatchesByZoneID
_mmcsEncryptionSupport
_items
_assetZoneByKey
T@"NSArray",&,N,V_assetRegisterAndPutBatches
T@"NSArray",&,N,V_assetGetChunkKeysBatches
T@"NSArray",&,N,V_assetTokenRequests
TQ,N,V_mmcsEncryptionSupport
T@"NSMutableOrderedSet",&,N,V_items
T@"NSMutableDictionary",&,N,V_assetZoneByKey
T@"NSMutableDictionary",&,N,V_assetBatchesByZoneID
T@"NSMutableDictionary",&,N,V_rerefAssetBatchesByZoneID
TI,R,N,V_assetTokenRequestSizeLimit
encodeWithCoder:
initWithCoder:
supportsSecureCoding
TB,R
recordZoneIDs
setRecordZoneIDs:
_recordZoneIDs
T@"NSArray",&,N,V_recordZoneIDs
_fetchZones
_checkRecordPCSForAllZones
fetchedZones
setFetchAllChanges:
valueForKeyPath:
setDesiredKeys:
setConfigurationsByRecordZoneID:
setForcePCSDecryptionAttempt:
mutableCorruptRecords
setIsFetchAllRecordZonesOperation:
setIgnorePCSFailures:
setZoneIDs:
setFetchedZones:
setMutableCorruptRecords:
_fetchedZones
_mutableCorruptRecords
T@"NSArray",&,N,V_zoneIDs
T@"NSMutableArray",&,N,V_fetchedZones
T@"NSMutableArray",&,N,V_mutableCorruptRecords
query
cursor
resultsLimit
shouldFetchAssetContent
desiredKeys
fetchAllResults
assetTransferOptionsByKey
initWithData:zoneID:
fetchRecordsGroup
setResultsCursor:
queryCursorUpdatedBlock
setHasCalledQueryCursorUpdatedBlock:
initWithFormat:arguments:
recordFetcher
hasCalledQueryCursorUpdatedBlock
CKIsNotFoundError
_wrapError:format:
recordFetchCompletionBlock
recordsDownloaded
setRecordsDownloaded:
assetCount
assetsDownloaded
setAssetsDownloaded:
assetDiskSize
assetsDownloadedFileSize
setAssetsDownloadedFileSize:
fetchRecords:withPerRecordCompletion:
desiredKeySet
initWithOperation:query:cursor:limit:requestedFields:zoneID:
setDesiredAssetKeys:
requestInfos
numRequestsSent
setNumRequestsSent:
_sendQueryRequestWithCursor:previousRequestSchedulerInfo:
_handleQueryRequestFinishedWithSchedulerInfo:
_handleRecordResponses:perRequestSchedulerInfo:
setRecordsParsedBlock:
pQueryFromQuery:error:
localizedDescription
setFetchAssetContents:
setPreserveOrdering:
setAssetTransferOptionsByRecordTypeAndKey:
setRecordFetcher:
setFetchAggregatorCompletionBlock:
finishIfAppropriate
T@"NSObject<OS_dispatch_queue>",&,N
setDesiredKeySet:
setZoneID:
setFetchAllResults:
setFetchRecordsGroup:
setRequestInfos:
setAssetTransferOptionsByKey:
_shouldFetchAssetContent
_fetchAllResults
_hasCalledQueryCursorUpdatedBlock
_query
_cursor
_resultsLimit
_resultsCursor
_recordFetchCompletionBlock
_queryCursorUpdatedBlock
_desiredKeySet
_zoneID
_recordFetcher
_fetchRecordsGroup
_numRequestsSent
_requestInfos
_assetTransferOptionsByKey
T@"NSSet",&,N,V_desiredKeySet
TB,N,V_shouldFetchAssetContent
T@"CKRecordZoneID",&,N,V_zoneID
T@"CKDRecordFetchAggregator",&,N,V_recordFetcher
T@"CKQueryCursor",&,N,V_resultsCursor
TB,N,V_fetchAllResults
T@"NSObject<OS_dispatch_group>",&,N,V_fetchRecordsGroup
TQ,N,V_numRequestsSent
T@"NSMutableArray",&,N,V_requestInfos
T@"NSDictionary",&,N,V_assetTransferOptionsByKey
TB,N,V_hasCalledQueryCursorUpdatedBlock
T@"<CKQueryOperationCallbacks>",&,D,N
T@"CKQuery",R,N,V_query
T@"CKQueryCursor",R,N,V_cursor
TQ,R,N,V_resultsLimit
T@?,C,N,V_recordFetchCompletionBlock
T@?,C,N,V_queryCursorUpdatedBlock
setContainerName:
hasContainerName
hasEnvironment
containerName
_containerName
T@"NSString",&,N,V_containerName
T@"NSString",&,N,V_environment
addCallbackForItemWithID:operation:callback:
setLastRequestDate:
highestQOS
setHighestQOS:
setRecordIDs:
initialOperation
setUseCachedEtags:
setSkipDecryption:
performCallbacksForItemWithID:withItem:error:
addRequestForRecordID:forOperation:withCompletionHandler:
createFetchOperationForItemIDs:operationQueue:operationConfigurationBlock:
fileAndLine
setFileAndLine:
setCount:
_fileAndLine
_count
T@"NSString",&,N,V_fileAndLine
TQ,N,V_count
TQ,N,V_size
initWithLogTypes:
composedMessage
componentsSeparatedByString:
intValue
totalSizeByLine
totalCountByLine
sortUsingComparator:
eventMatched:
finish
setTotalSizeByLine:
setTotalCountByLine:
_totalSizeByLine
_totalCountByLine
T@"NSMutableDictionary",&,V_totalSizeByLine
T@"NSMutableDictionary",&,V_totalCountByLine
setContinuationMarker:
hasZoneIdentifier
setOnlyFetchPCSInfo:
setHasOnlyFetchPCSInfo:
hasOnlyFetchPCSInfo
hasContinuationMarker
onlyFetchPCSInfo
continuationMarker
_continuationMarker
_onlyFetchPCSInfo
T@"CKDPRecordZoneIdentifier",&,N,V_zoneIdentifier
TB,N,V_onlyFetchPCSInfo
T@"NSData",&,N,V_continuationMarker
fetchOptions
zonePCSData
zoneishPCSData
needsZoneishPCS
_willRetryFetch
zoneishPublicKeyID
didFetchData
setZonePCSData:
setDidFetchData:
setFetchError:
setWasFetchedFromCache:
_handlePCSDataFetched:withError:
fetchPCSDataForZoneWithID:databaseScope:withCompletionHandler:
_fetchDepedentPCSInSharedDatabase
shareID
initWithRecordName:zoneID:
setDependentPCSFetchError:
setRecordZonesToSave:
setAllowDefaultZoneSave:
setMaxZoneSaveAttempts:
setDontFetchFromServer:
dataFromZonePCS:error:
dataFromRecordPCS:error:
etagFromPCSData:
setProtectionEtag:
setZoneishProtectionData:
setPreviousProtectionEtag:
_saveZoneToServer:completion:
isDefaultRecordZoneID
isSystemRecordZoneID
createZonePCSWithError:
createRecordPCSWithZonePCS:sharePCS:createLite:error:
createZonePCSFromData:usingServiceIdentityWithType:error:
setPcs:
zoneishProtectionData
createPCSObjectFromData:ofType:sharedToPCS:error:
setZoneishPCS:
CKLowercaseHexStringWithoutSpaces
_saveZoneToServer:withPCS:zoneishPCS:previousEtag:completion:
zoneName
_saveNewPCSOnZone:completion:
systemRecordZone
requestFetchOfZoneWithID:forOperation:withCompletionHandler:
setShouldCreateZoneishPCS:
fetchError
_decryptZonePCSInSharedDatabase
_decryptZonePCSUsingServiceIdentities
dependentPCSFetchError
_handleDecryptedZonePCSData:withError:
zonePCSModificationDate
createZonePCSFromData:usingServiceIdentityWithType:zonePCSModificationDate:completionHandler:
shouldCreateZoneishPCS
initWithZoneID:
wasFetchedFromCache
itemTypeName
hasAllPCSData
_fetchPCSDataFromDatabase
_fetchDependentPCS
_fetchPCSDataFromServer
_createAdditionalPCS
_decryptPCS
_saveUpdatedPCSToServer
_savePCSDataToCache
_shouldCreateZoneishPCS
T@"CKRecordZoneID",R,N
T@"CKDZonePCSData",&,N
TB,N,V_shouldCreateZoneishPCS
setPersonaID:
_applicationID
T@"CKDApplicationID",R,N,V_applicationID
T@"NSString",C,N,V_personaID
setAccountID:
T@"NSString",C,N,V_accountID
setAnonymousShareTupleHash:
setEncryptedShareTuple:
hasAnonymousShareTupleHash
hasEncryptedShareTuple
anonymousShareTupleHash
encryptedShareTuple
_anonymousShareTupleHash
_encryptedShareTuple
T@"NSString",&,N,V_anonymousShareTupleHash
T@"NSData",&,N,V_encryptedShareTuple
initWithCode:format:
privacyManagerQueue
knownAppContainerAccountTuples
_resetPrivacySettingsForAppContainerAccountTuple:completionHandler:
resetPrivacySettingsWithCompletionHandler:
setPrivacyManagerQueue:
setOperations:
_privacyManagerQueue
_operations
T@"NSObject<OS_dispatch_queue>",&,N,V_privacyManagerQueue
T@"NSMutableSet",&,N,V_operations
initWithName:format:
completionHandlersByItemID
dependentOperationIDsByItemID
dependentOperationIDs
addEntriesFromDictionary:
callbacksForItemWithID:
removeCallbacksForItemWithID:
allItemIDs
completionHandler
setIsFinished:
finishFetchOperationWithError:
lastRequestDate
numberOfCallbacks
scope
runningOperationID
maxBatchSize:
maxBatchSize
subarrayWithRange:
setRunningOperationID:
initWithOperation:container:operationQueue:
cancelFetchOperation
canBeUsedForOperation:
canBeUsedForPendingFetch:
dependentOperationListContainsRunningFetch:
dependentOperationListContainsOperationID:
queuedDate
setQueuedDate:
setCompletionHandler:
equivalentRunningFetch
setEquivalentRunningFetch:
setOsActivity:
setCompletionHandlersByItemID:
lastCompletionHandlerCount
setLastCompletionHandlerCount:
setScope:
setDependentOperationIDs:
setDependentOperationIDsByItemID:
setInitialOperation:
_isFinished
_queuedDate
_completionHandler
_equivalentRunningFetch
_completionHandlersByItemID
_lastCompletionHandlerCount
_lastRequestDate
_scope
_highestQOS
_runningOperationID
_dependentOperationIDs
_dependentOperationIDsByItemID
_unitTestOverrides
_initialOperation
T@"NSObject<OS_os_activity>",&,N,V_osActivity
T@"NSMutableDictionary",&,N,V_completionHandlersByItemID
TQ,N,V_lastCompletionHandlerCount
T@"NSDate",&,N,V_lastRequestDate
T@"CKDContainer",W,N,V_container
T@"NSOperationQueue",W,N,V_operationQueue
Tq,N,V_scope
Tq,N,V_highestQOS
T@"NSString",&,N,V_runningOperationID
T@"NSMutableSet",&,N,V_dependentOperationIDs
T@"NSMutableDictionary",&,N,V_dependentOperationIDsByItemID
T@"NSMutableDictionary",&,N,V_unitTestOverrides
T@"CKDOperation",&,N,V_initialOperation
TB,N,V_isFinished
T@"NSDate",&,N,V_queuedDate
T@?,C,N,V_completionHandler
T@"CKDQueuedFetch",W,N,V_equivalentRunningFetch
initWithRequestID:
_tearDownStreamWriter
urlSessionTask
lifecycleQueue
taskIdentifier
header
setHeader:
setApplicationBundle:
setApplicationVersion:
includeContainerServerInfo
setTargetDatabase:
setDeviceHardwareVersion:
setDeviceSoftwareVersion:
allThrottles
isServerThrottle
label
addActiveThrottlingLabel:
sendRequestAnonymously
setDeviceHardwareID:
CKDPIdentifier_Device
setDeviceIdentifier:
setDeviceUDID:
setDeviceSerialNumber:
setDeviceAssignedName:
isolationLevel
setIsolationLevel:
setOperationGroupName:
operationGroupQuantity
setOperationGroupQuantity:
bundleForClass:
infoDictionary
setDeviceLibraryName:
setDeviceLibraryVersion:
type
setLocale:
locale
setLanguageCode:
setRegionCode:
setDeviceSoftwareIsAppleInternal:
protocolVersion
setMmcsProtocolVersion:
setEntitlementsValidated:
requestGETPreAuth
setAssetAuthorizeGetRequestOptions:
assetAuthorizeGetRequestOptions
setContentRequestAuthorizeGetOptions:
setContentRequestHeaders:
protocolHeaders
createAssetAuthorizeGetRequestOptionsHeaderInfoWithKey:value:
contentRequestHeaders
lastObject
setLast:
addSignatureForRequestOperation:
_registerRequestOperationTypesForOperations:
streamWriter
setStreamedObjects:
open
countsByRequestOperationType
setCountsByRequestOperationType:
usesiCloudAuthToken
usesCloudKitAuthToken
cloudKitAuthTokenWithContainer:completionHandler:
iCloudAuthTokenWithContainer:completionHandler:
setIsWaitingOnAuthRenew:
cloudKitAuthToken
renewCloudKitAuthTokenWithReason:shouldForce:container:failedToken:completionHandler:
iCloudAuthToken
renewiCloudAuthTokenWithReason:shouldForce:container:failedToken:completionHandler:
didRetryAuth
setDidRetryAuth:
setIsHandlingAuthRetry:
tearDownResourcesAndReleaseTheZoneLocks:
setLastRetryAuthError:
performOnLifecycleQueueIfNotFinished:
_renewAuthTokenWithCompletionHandler:
lastRetryAuthError
hasOperationUUID
errorWithDomain:code:userInfo:
hasResult
hasClientError
clientError
hasType
_handleAuthFailure
lowercaseString
hasServerError
serverError
hasExtensionError
hasAuxiliaryError
throttleFromPThrottlingConfig:
setResponse:
_handleServerProtobufResult:rawData:
responseObjectUUIDs
consumeResponseHeader:
setRetryAfterSeconds:
setType:
setServerError:
_handleServerJSONResult:
requestDidParseJSONObject:
_handlePlistResult:
requestDidParsePlistObject:
rangeOfString:options:
initWithQoS:
expectedResponseClass
setMessageClass:
parsingStandaloneMessage
setParsingStandaloneMessage:
_protobufObjectParsedBlock
setObjectParsedBlock:
trafficLogger
logResponseConfiguration:withMessageClassString:
_jsonObjectParsedBlock
_xmlObjectParsedBlock
requestDidParsePlaintextObject:
requestDidParse509CertObject:
setTestRepeatedParseResults:
initWithData:encoding:
_finishOnLifecycleQueueWithError:
extensionError
hasTypeCode
setValue:forKey:
serverType
partitionType
URLByAppendingPathComponent:
compressRequests
protobufOperationName
setOperationUUID:
shouldCompressBody
initWithCompression:
logPartialRequestObjectData:
setLogRequestObjectBlock:
setDidReceiveResponseBodyData:
validateAnonymousUserIDPropagation
_setupPublicDatabaseURL
performASyncOnLifecycleQueueIfNotFinished:
requiresAppPartitionURL
_setupPrivateDatabaseURL
requiresUserPartitionURL
_setupConfiguration
requiresConfiguration
_fetchContainerScopedUserID
allowsAuthedAccount
initWithContainer:databaseScope:
setIdentityDelegate:
setDontCreateValidatingParentReferences:
_fetchDeviceID
requiresDeviceID
setDeviceID:
_acquireZoneGates
pushBehavior
tokenRegistrationScheduler
registerTokenForAdopterContainer:completionBlock:
_performRequest
_prepareAuthTokens
_prepareCloudKitAuthToken
prepareRequestWithCompletion:
setCloudKitAuthToken:
didFetchNilAuthToken
setDidFetchNilAuthToken:
_authTokenWithCompletionHandler:
setICloudAuthToken:
_registerPushTokens
validate:
initWithURL:
requestProperties
_setProperty:forKey:
httpMethod
setHTTPMethod:
hasRequestBody
requestContentType
setValue:forHTTPHeaderField:
sendDebugHeader
testRunIDHeader
acceptContentType
operationIDForProtobuf
base64EncodedStringWithOptions:
additionalHeaderValues
clientProvidedAdditionalHeaderValues
addValue:forHTTPHeaderField:
overriddenHeaders
setNetworkServiceType:
requestMessageClass
logRequest:toURL:withMethod:withMessageClassString:parsingStandaloneMessage:
_loadRequest:
sharedURLSessionPool
backgroundSessionConnectionPoolLimit
backgroundSessionConnectionPoolName
setOutOfProcessPoolName:
set_allowsExpensiveAccess:
set_allowsPowerNapScheduling:
set_timeoutIntervalForRequest:
set_timeoutIntervalForResource:
set_sourceApplicationBundleIdentifier:
set_sourceApplicationSecondaryIdentifier:
set_appleIDContextSessionIdentifier:
setTlsPinning:
setAllowRouting:
allowExpiredDNSBehavior:
setAllowExpiredDNSBehavior:
setDiscretionaryNetworkBehavior:
set_allowsRetryForBackgroundDataTasks:
metricOptionsForNetworkRequest:
setMetricOptions:
networkingDelegate
setNetworkingDelegate:
tearDownResources
setResponseBodyParser:
setUrlSession:
requestOptions
createDataTaskWithRequest:options:delegate:sessionHandle:
setUrlSessionTask:
_CFNetworkTaskIdentifierString
setDateRequestWentOut:
metrics
URLSession:task:didCompleteWithError:
setCancelled:
_onLifecycleQueue
_wrapErrorIfNecessary:
serverProvidedAutoBugCaptureReason
_triggerAutoBugCaptureWithErrorPayload:
serverProvidedTapToRadarRequest
triggerTapToRadarWithRequest:
markAsFinished
cancelPreviousPerformRequestsWithTarget:selector:object:
finishRequestLog
dateRequestWentOut
timingData
completionBlock
setRequestProgressBlock:
setResponseProgressBlock:
setC2RequestOptions:
taskDescription
allowAutomaticRedirects
setURL:
setHTTPShouldHandleCookies:
requestBodyStream
setHTTPBodyStream:
HTTPMethod
allHTTPHeaderFields
setAllHTTPHeaderFields:
statusCode
redirectHistory
setRedirectHistory:
allHeaderFields
CKObjectForKeyCaseInsensitive:
logResponse:
initWithURL:statusCode:HTTPVersion:headerFields:
expectedContentLength
responseProgressBlock
countOfBytesReceived
responseBodyParser
valueForKey:
defaultParserForContentType:
logPartialResponseObjectData:
processData:
logRequestBodyStreamReset
requestProgressBlock
_timingData
setConnectionsCreated:
countOfBytesSent
setBytesUploaded:
setBytesDownloaded:
setTimingData:
requestDidComplete
setServerProvidedAutoBugCaptureReason:
setTitle:
setRadarDescription:
setComponentName:
setComponentVersion:
setComponentID:
setRelatedRadar:
setServerProvidedTapToRadarRequest:
setServerProvidedAutoSysdiagnoseCollectionReason:
isHandlingAuthRetry
needsAuthRetry
setNeedsAuthRetry:
responseStatusCode
didReceiveResponseBodyData
expectsResponseBody
finishWithCompletion:
setConnections:
isWaitingOnAuthRenew
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:_willSendRequestForEstablishedConnection:completionHandler:
URLSession:_taskIsWaitingForConnection:
URLSession:task:_conditionalRequirementsChanged:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didReceiveData:
URLSession:_willRetryBackgroundDataTask:withError:
shouldLogResponseBody
expectsSingleObject
overrideRequestHeader:withValue:
lastRedirectURL
setAllowAutomaticRedirects:
setRequestProperties:
fakeResponseOperationResultByItemID
setLifecycleQueue:
c2RequestOptions
c2NetworkingDelegate
setC2NetworkingDelegate:
urlSession
setResponseObjectUUIDs:
setTrafficLogger:
numDownloadedElements
setNumDownloadedElements:
haveCachedServerType
setHaveCachedServerType:
haveCachedPartitionType
setHaveCachedPartitionType:
cachedServerType
setCachedServerType:
cachedPartitionType
setCachedPartitionType:
setMetrics:
voucher
setVoucher:
serverProvidedAutoSysdiagnoseCollectionReason
setOverriddenHeaders:
_responseStatusCode
_requestUUID
_didSendRequest
_didFinishLoading
_finished
_didRetrySignature
_responseBodyParser
_allowAutomaticRedirects
_requestProgressBlock
_responseProgressBlock
_completionBlock
_fakeResponseData
_haveParsedFakeResponseData
_streamWriter
_transmissionActivity
_needsAuthRetry
_isWaitingOnAuthRenew
_isHandlingAuthRetry
_didRetryAuth
_cancelled
_haveCachedServerType
_haveCachedPartitionType
_didReceiveResponseBodyData
_didFetchNilAuthToken
_requestProperties
_requestOperations
_automatedDeviceGroup
_clientProvidedAdditionalHeaderValues
_fakeResponseOperationResultByItemID
_lifecycleQueue
_urlSessionTask
_c2RequestOptions
_c2NetworkingDelegate
_response
_urlSession
_responseObjectUUIDs
_trafficLogger
_deviceID
_numDownloadedElements
_lastRetryAuthError
_cachedServerType
_cachedPartitionType
_dateRequestWentOut
_metrics
_voucher
_cloudKitAuthToken
_iCloudAuthToken
_serverProvidedAutoBugCaptureReason
_serverProvidedTapToRadarRequest
_serverProvidedAutoSysdiagnoseCollectionReason
_countsByRequestOperationType
_overriddenHeaders
_redirectHistory
T@"NSObject<OS_dispatch_queue>",&,N,V_lifecycleQueue
T@"NSURLSessionDataTask",&,V_urlSessionTask
T@"C2RequestOptions",&,V_c2RequestOptions
T@"NSObject<C2NetworkingDelegate>",&,N,V_c2NetworkingDelegate
T@"NSURLRequest",&,V_request
T@"NSHTTPURLResponse",&,V_response
T@"NSURLSession",&,V_urlSession
T@"NSMutableSet",&,N,V_responseObjectUUIDs
T@"CKDTrafficLogger",&,N,V_trafficLogger
T@"NSString",C,N,V_deviceID
TQ,N,V_numDownloadedElements
TB,N,V_didRetryAuth
T@"NSError",&,N,V_lastRetryAuthError
cancelled
TB,GisCancelled,V_cancelled
TB,N,V_haveCachedServerType
TB,N,V_haveCachedPartitionType
Tq,N,V_cachedServerType
Tq,N,V_cachedPartitionType
T@"CKDProtocolTranslator",&,N,V_translator
T@"NSDate",&,V_dateRequestWentOut
T@"CKDOperationMetrics",&,N,V_metrics
T@"NSDictionary",&,N,V_timingData
T@"NSObject<OS_voucher>",&,N,V_voucher
T@"NSString",&,N,V_cloudKitAuthToken
T@"NSString",&,N,V_iCloudAuthToken
TB,N,V_didReceiveResponseBodyData
T@"NSString",C,N,V_serverProvidedAutoBugCaptureReason
T@"CKTapToRadarRequest",&,N,V_serverProvidedTapToRadarRequest
T@"NSString",&,N,V_serverProvidedAutoSysdiagnoseCollectionReason
T@"NSMutableDictionary",&,N,V_countsByRequestOperationType
T@"NSMutableDictionary",&,N,V_overriddenHeaders
T@"NSMutableArray",&,N,V_redirectHistory
TB,N,V_didFetchNilAuthToken
T@"CKDContainer",R,N,V_container
TB,N,V_allowAutomaticRedirects
T@"NSDictionary",&,N,V_requestProperties
T@"NSString",&,N,V_automatedDeviceGroup
T@"NSDictionary",&,N,V_unitTestOverrides
T@"CKDProtobufStreamWriter",R,N,V_streamWriter
T@?,C,N,V_requestProgressBlock
T@?,C,N,V_responseProgressBlock
T@?,C,N,V_completionBlock
T@"CKDResponseBodyParser",&,N,V_responseBodyParser
T@"NSDictionary",&,N,V_clientProvidedAdditionalHeaderValues
T@"NSInputStream",R,N
T@"NSArray",R,N,V_requestOperations
Ti,R,N
Ti,R,N,V_requestOriginator
T@"NSURL",R,N
T@"NSDictionary",&,N,V_fakeResponseOperationResultByItemID
Tq,R,N,V_responseStatusCode
T@"NSString",R,N,V_requestUUID
TB,V_needsAuthRetry
TB,V_isWaitingOnAuthRenew
TB,V_isHandlingAuthRetry
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:description:
numberWithUnsignedInt:
setBadgeCount:
setHasBadgeCount:
hasBadgeCount
setForDevice:
setHasForDevice:
hasForDevice
badgeCount
forDevice
_badgeCount
_forDevice
TI,N,V_badgeCount
TB,N,V_forDevice
setSignature:
hasSignature
setHasSize:
hasSize
setLastSection:
setHasLastSection:
hasLastSection
signature
lastSection
_signature
_lastSection
T@"NSData",&,N,V_signature
Tq,N,V_size
TB,N,V_lastSection
setOwner:
setFileSignature:
setReferenceSignature:
hasOwner
hasFileSignature
hasReferenceSignature
owner
fileSignature
referenceSignature
_fileSignature
_owner
_referenceSignature
T@"NSString",&,N,V_owner
T@"NSData",&,N,V_fileSignature
T@"NSData",&,N,V_referenceSignature
mergeableDeltaID
deltaIdentifier
assetContextString
encryptedDataContextString
setMergeableDeltaID:
_mergeableDeltaID
T@"CKRecordID",&,N,V_recordID
T@"NSString",&,N,V_fieldName
T@"CKMergeableDeltaID",&,N,V_mergeableDeltaID
synchronizeQueue
setAccount:
identityManager
updateAccount:
setBoundaryKeyData:
missingIdentityPublicKeys
undecryptablePCSDataHashes
servicesWithMissingIdentities
_legacyServiceNameForContainerID:
manateeStatusForAccount:isSecondaryAccount:completionHandler:
initWithAccount:deviceContext:serviceName:forceEnableReadOnlyManatee:clientSDKVersion:
identitiesChanged
createFullKeychainIdentitySetWithError:
minusSet:
invalidateCachedAccountInfo
pcsUpdateSource
debugSharingIdentity
_onSynchronizeQueue:
PCSServiceStringFromCKServiceType:
setPCSServiceNameOverwrite:
copyPublicKeyForService:withError:
copyAllPublicKeysForService:withError:
containerScopedUserIDProvider
copyDiversifiedIdentityForService:userIDEntropy:withError:
copyDiversifiedPublicKeyForService:userIDEntropy:withError:
copyDiversifiedPublicKeyForService:withError:
createCombinedIdentityWithOutOfNetworkPrivateKey:publicSharingIdentity:
createSharePCSFromData:sharingIdentity:error:
createPublicSharingIdentityFromPublicKey:error:
addPublicIdentity:toSharePCS:permission:
removeSharingIdentity:fromSharePCS:
dataFromSharePCS:error:
createSharePCSFromData:ofType:withService:error:
createSharingIdentityFromData:error:
copyIdentitySetWithType:options:error:
_addIdentity:withService:toPCS:
isEqualToData:
identitySet:containsPublicKey:error:
_checkAndClearPCSTestOverrideForKey:
errorWithCode:userInfo:error:path:URL:description:
_pcsTestOverrideForKey:
setOverallResult:
sendCoreAnalyticsEventForKeySync:
_locked_createZonePCSWithSyncKeyRegistryRetry:keySyncAnalytics:completionHandler:
synchronizeUserKeyRegistryForServiceType:shouldThrottle:context:completionHandler:
createZonePCSWithSyncKeyRegistryRetry:completionHandler:
createSharePCSFromEncryptedData:error:
exportedPCSData
getAllPublicKeysForExportedData:error:
protectionInfoPublicKey
acceptanceStatus
setIsCurrentUser:
setCallingParticipant:
userRecordID
fillAnonymousCKUserID:
callingParticipant
initWithBytes:length:
_pcsObjectKindForCKDPCSBlobType:
isPreviouslyUndecryptablePCS:
containerIdentifierToForceFatalManateeZoneDecryptionFailure
initWithSharingRequestData:identitySet:error:
exportAcceptedSharingRequestWithError:
responsibleBundleID
noMatchingIdentityErrorForPCSError:withErrorCode:description:
_checkUnitTestOverridesForDecryptionFailuresWithState:shouldRetry:error:
_checkPCSTestOverrideForKey:
_locked_markMissingIdentitiesFromFailedDecryptError:serviceName:
_locked_createPCSFromData:ofType:usingPCSServiceType:tryDecryptingWithOtherServices:withSyncKeyRegistryRetry:zonePCSModificationDate:keySyncAnalytics:completionHandler:
markUndecryptablePCS:
serviceTypeIsManatee:
getKeySyncEligibilityForService:isManatee:account:zonePCSModificationDate:testOverrideProvider:completionHandler:
_createPCSFromData:ofType:usingPCSServiceType:tryDecryptingWithOtherServices:withSyncKeyRegistryRetry:zonePCSModificationDate:completionHandler:
_locked_checkIdentitiesForService:withSyncKeyRegistryRetry:keySyncAnalytics:completionHandler:
_copyShareProtectionFromExportedData:ofType:identities:error:
zonePCSNeedsKeyRolled:bypassAllowlistedContainers:
rollZonePCSIdentities
_isKeyRollingUnitTestContainerID:
_isAllowlistedKeyRollingContainerID:
internalServicesToCombineWithLiverpoolKey
liverpoolServiceOwnsPublicID:
addIdentityForService:toPCS:
rollMasterKeyForRecordPCS:bypassAllowlistedContainers:
rollRecordPCSMasterKeys
maxRecordPCSMasterKeyRolls
CKSHA256
rollZoneSharingKeys
canRollShareKeys
publicPCS
removeSharePCS:fromRecordPCS:error:
rollIdentityForSharePCS:removeAllExistingPrivateKeys:error:
addSharePCS:toRecordPCS:error:
updateZoneIdentityForPCS:usingZonePCS:bypassAllowlistedContainers:
removePrivateKeysForKeyIDs:fromPCS:
setPreKeyRollInvitedPCS:
setInvitedPCS:
setPublicPCS:
allowKeyRollingInAllContainers
preKeyRollInvitedPCS
createPCSObjectFromData:ofType:sharedToPCS:logFailure:error:
addSharePCS:toRecordPCS:permission:error:
createEmptySharePCSOfType:error:
_addPublicIdentityForService:toSharePCS:withError:
createSharePCSFromData:sharingIdentity:logFailure:error:
createSharePCSFromData:ofType:withService:logFailure:error:
_locked_decryptPCSDataOnSharePCS:withPublicSharingKey:completionHandler:
serviceType
myParticipantPCSData
setMyParticipantPCS:
publicPermission
myParticipantRole
myParticipantPCS
publicPCSData
createSharePCSFromData:sharePrivateKey:error:
_locked_decryptCurrentPerParticipantPCSDataOnSharePCS:completionHandler:
pcsDataFromFetchedShare:withServiceType:completionHandler:
_locked_pcsDataFromFetchedShare:withPublicSharingKey:withServiceType:completionHandler:
privatePCS
dataWithShareID:pcsData:
setServiceType:
createSharePCSOfType:forPCSServiceType:error:
createEmptySignedSharePCSOfType:forPCSServiceType:withError:
addSharingIdentity:toSharePCS:permission:
createSharePublicPCSWithIdentity:error:
removePublicIdentity:fromSharePCS:
encryptedChainPCSPrivateKey
containerSupportsEnhancedContext
useEnhancedPCSEncryptionContext
referenceIdentifierStringFromAssetKey:
referenceSignatureFromAssetKey:
unwrapEncryptedData:withPCS:withContextString:
setData:
_unwrapEncryptedData:usingKeyID:forPCS:withContextString:
wrapEncryptedData:withPCS:withContextString:
boundaryKeyData
_lockedBoundaryKeyDataWithCompletionHandler:
syncUserKeysForService:context:bundleID:serviceIsManatee:account:shouldThrottle:testOverrideProvider:completionHandler:
shouldThrottle
isManatee
keySyncResult
overallResult
keySyncDurationSec
throttledDurationSec
context
bundleID
KRSReturnedExistingIdentity
bytes
subdataWithRange:
setWithObjects:
pcsTestOverrides
setPcsTestOverrides:
clearOverrides
pcsOverrideKeys
overrideKeys
setOverride:value:
publicKeyIDFromIdentity:
protectionIdentifierFromShareProtection:
allProtectionIdentifiersFromShareProtection:
sharingFingerprintsContainPublicKeyWithData:error:
lastMissingManateeIdentityErrorDateForCurrentService
publicKeyVersionForServiceType:
pcsServiceName
copyDiversifiedIdentityForService:withError:
participantPublicKeyForServiceType:error:
createProtectionInfoFromOONPrivateKey:privateToken:OONProtectionInfo:error:
canDecryptInvitedProtectionData:participantProtectionInfo:serviceType:error:
createZonePCSWithCompletionHandler:
findSelfParticipantOnShareMetadata:invitationToken:
getCurrentIdentityExportedPrivateKey
generateOctopusAnonymousUserID
generateAnonymousCKUserIDForCurrentUserInShare:containerID:acceptA2AShareUsingVersionOneAnonymousIdentifier:
createSignatureWithIdentity:dataToBeSigned:error:
availableIdentityForService:error:
checkIdentitiesForService:withSyncKeyRegistryRetry:completionHandler:
etagFromZonePCS:error:
repairZonePCSData:error:
zonePCSNeedsKeyRolled:
zonePCSNeedsUpdate:
isRemindersZoneThatNeedsUpdate:
updateServiceIdentityOnZonePCS:
rollMasterKeyForRecordPCS:
updateIdentityAndRollKeyForZonePCS:usingServiceIdentityWithType:
keyRollForZoneWideShareWithZonePCS:sharePCS:
keyRollIfNeededForPerRecordPCS:
keyRollForZoneWideShareRecordPCS:sharedZonePCS:sharePCS:
createRecordPCSWithEncryptedZonePCS:sharePCS:createLite:error:
updateSigningIdentityOnPCS:usingSignedPCS:
etagFromRecordPCS:error:
setOwnerIdentity:onPCS:
createChainPCSWithError:
publicKeyDataFromPCS:error:
decryptPCSDataOnSharePCS:completionHandler:
pcsDataFromFetchedShare:completionHandler:
copyPublicAuthorshipIdentityFromPCS:
createNewSharePCSDataForShareWithID:withPublicSharingKey:addDebugIdentity:error:
etagFromSharePCS:error:
addIdentityBackToPCS:
removeEncryptedPCS:fromSharePCS:
removePublicKeyID:fromPCS:
sharingIdentityDataFromPCS:error:
decryptChainPCSForRecordPCS:
unwrapAssetKey:withRecordPCS:inContext:withError:
wrapAssetKey:withRecordPCS:inContext:withError:
newAssetKeyWithType:withError:
setLastMissingManateeIdentityErrorDateForCurrentService:
setMissingIdentityPublicKeys:
setServicesWithMissingIdentities:
setUndecryptablePCSDataHashes:
setPcsUpdateSource:
setSynchronizeQueue:
_forceEnableReadOnlyManatee
_useZoneWidePCS
_containerScopedUserIDProvider
_responsibleBundleID
_identityManager
_lastMissingManateeIdentityErrorDateForCurrentService
_missingIdentityPublicKeys
_servicesWithMissingIdentities
_undecryptablePCSDataHashes
_boundaryKeyData
_pcsUpdateSource
_synchronizeQueue
_pcsTestOverrides
T@"CKDAccount",&,V_account
T@"<CKDContainerScopedUserIDProvider>",R,W,N,V_containerScopedUserIDProvider
T@"NSString",R,N,V_responsibleBundleID
TB,R,N,V_forceEnableReadOnlyManatee
TQ,R,N,V_mmcsEncryptionSupport
TB,R,N,V_useZoneWidePCS
T@"CKDPCSIdentityManager",R,N,V_identityManager
T@"NSDate",&,N,V_lastMissingManateeIdentityErrorDateForCurrentService
T@"NSMutableSet",&,N,V_missingIdentityPublicKeys
T@"NSMutableSet",&,N,V_servicesWithMissingIdentities
T@"NSMutableSet",&,N,V_undecryptablePCSDataHashes
T@"NSData",&,N,V_boundaryKeyData
T@"NSObject<OS_dispatch_source>",&,N,V_pcsUpdateSource
T@"NSObject<OS_dispatch_queue>",&,N,V_synchronizeQueue
T@"NSMutableDictionary",&,N,V_pcsTestOverrides
T@"CKDLogicalDeviceContext",R,N,V_deviceContext
shareURLsToFetch
rootRecordDesiredKeys
shouldFetchRootRecord
overwriteContainerPCSServiceIfManatee
skipShareDecryption
shareInvitationTokensByShareURL
_prepareShortTokens
_fetchShortTokenMetadata
errorOnOON
hasDisplaysSystemAcceptPromptEntitlement
participantPermission
outOfNetworkMatches
setInvitationToken:
shareTokenMetadatasToFetchByURL
shareMetadataFetchedBlock
shortSharingTokenData
decryptFullToken:shortSharingTokenData:
initWithBytes:length:encoding:
CKDataFromBase64URLSafeString:
substringWithRange:
setPrivateTokenData:
setPublicTokenData:
routingKey
setRoutingKey:
shortSharingTokenHashData
setShortSharingTokenHashData:
setShouldFetchRootRecord:
forceDSRefetch
setForceDSRefetch:
setParticipantID:
initWithOperation:shortTokenLookupInfos:
rootRecordDesiredKeysSet
setRootRecordDesiredKeySet:
_handleTokenResolveWithLookupInfo:shareMetadata:responseCode:urlByShortTokenLookupInfos:tokensToFetchByURL:
setTokenResolveBlock:
_performCallbackForURL:withMetadata:error:
setDisplayedHostname:
setMutableURL:
protectedFullToken
_decodeProtectedFullToken:tokenMetadata:
permission
setParticipantPermission:
setParticipantStatus:
role
setParticipantRole:
participantStatus
privateTokenData
setPrivateToken:
publicTokenData
setPublicToken:
publicKeyVersion
shareURL
_continueSharePCSPrepForShareMetadata:shareURL:
_prepPPPCSDataForDugongShareMetadata:withInvitationToken:completionHandler:
participantRole
privateToken
sharedZone
_continueHandlingFetchedShareMetadata:shareURL:
setMutableEncryptedPSK:
mutableEncryptedPSK
containsAssetValues
rootRecord
_decryptRootRecordsForShareURL:withMetadata:completionHandler:
_currentUserIsOONForShareMetadata:
hasiCloudAccount
outOfNetworkPrivateKey
initWithURL:resolvingAgainstBaseURL:
setShortSharingTokenData:
setShareTokenMetadatasToFetchByURL:
setRootRecordDesiredKeysSet:
clientWillDisplaySystemAcceptPrompt
setClientWillDisplaySystemAcceptPrompt:
setShareInvitationTokensByShareURL:
_forceDSRefetch
_errorOnOON
_shouldFetchRootRecord
_clientWillDisplaySystemAcceptPrompt
_overwriteContainerPCSServiceIfManatee
_skipShareDecryption
_shareMetadataFetchedBlock
_shareURLsToFetch
_shareTokenMetadatasToFetchByURL
_rootRecordDesiredKeysSet
_shareInvitationTokensByShareURL
T@"NSMutableArray",&,N,V_shareURLsToFetch
T@"NSMutableDictionary",&,N,V_shareTokenMetadatasToFetchByURL
TB,N,V_shouldFetchRootRecord
T@"NSSet",&,N,V_rootRecordDesiredKeysSet
TB,N,V_clientWillDisplaySystemAcceptPrompt
T@"NSDictionary",&,N,V_shareInvitationTokensByShareURL
TB,N,V_overwriteContainerPCSServiceIfManatee
TB,N,V_skipShareDecryption
T@"<CKFetchShareMetadataOperationCallbacks>",&,D,N
TB,N,V_forceDSRefetch
TB,N,V_errorOnOON
T@?,C,N,V_shareMetadataFetchedBlock
CKBase64URLSafeString
shortSharingToken
_routingKey
_shortSharingTokenData
_publicTokenData
_privateTokenData
_participantID
T@"NSString",&,N,V_routingKey
T@"NSData",&,N,V_shortSharingTokenData
T@"NSData",R,N
T@"NSData",&,N,V_publicTokenData
T@"NSData",&,N,V_privateTokenData
T@"NSString",&,N,V_participantID
recordIDsToShare
recordIDsToUnshare
recordIDsToShareReadWrite
_fetchRecords
_saveRecords
recordsToSaveByID
numSaveAttempts
PCSRetryCount
recordWebSharedBlock
recordWebUnsharedBlock
setNumSaveAttempts:
setSavePolicy:
setRetryPCSFailures:
setCanSetPreviousProtectionEtag:
setTrustProtectionData:
_handleRecordSaved:error:
_copyShareProtectionFromRecord:error:
recordPCS
_handleRecordFetched:recordID:error:
fetchedRecordIDs
setRecordIDsToShare:
setRecordIDsToUnshare:
setRecordIDsToShareReadWrite:
setFetchedRecordIDs:
setRecordsToSaveByID:
_numSaveAttempts
_recordWebSharedBlock
_recordWebUnsharedBlock
_recordIDsToShare
_recordIDsToUnshare
_recordIDsToShareReadWrite
_fetchedRecordIDs
_recordsToSaveByID
T@"NSArray",&,N,V_recordIDsToShare
T@"NSArray",&,N,V_recordIDsToUnshare
T@"NSArray",&,N,V_recordIDsToShareReadWrite
T@"NSMutableSet",&,N,V_fetchedRecordIDs
T@"NSMutableDictionary",&,N,V_recordsToSaveByID
Ti,N,V_numSaveAttempts
T@"<CKModifyWebSharingOperationCallbacks>",&,D,N
T@?,C,N,V_recordWebSharedBlock
T@?,C,N,V_recordWebUnsharedBlock
fileSize
setFileSize:
underlyingItemReader
setUnderlyingItemReader:
_underlyingItemReader
T@"<CKDMMCSItemReaderWriterProtocol>",&,N,V_underlyingItemReader
recordIDsToGrant
recordIDsToRevoke
accessWasGrantedBlock
accessWasRevokedBlock
setBaseToken:
setForcePCSDecrypt:
setRecordIDsToGrant:
setRecordIDsToRevoke:
_accessWasGrantedBlock
_accessWasRevokedBlock
_recordIDsToGrant
_recordIDsToRevoke
T@"NSArray",&,N,V_recordIDsToGrant
T@"NSArray",&,N,V_recordIDsToRevoke
T@"<CKModifyRecordAccessOperationCallbacks>",&,D,N
T@?,C,N,V_accessWasGrantedBlock
T@?,C,N,V_accessWasRevokedBlock
setUploadReceipt:
setRequestedSize:
setHasRequestedSize:
hasRequestedSize
setUploadedSize:
setHasUploadedSize:
hasUploadedSize
hasUploadReceipt
requestedSize
uploadedSize
uploadReceipt
_requestedSize
_uploadedSize
_uploadReceipt
Tq,N,V_requestedSize
Tq,N,V_uploadedSize
T@"NSString",&,N,V_uploadReceipt
setZoneProtectionInfoTag:
hasZoneProtectionInfoTag
zoneProtectionInfoTag
_zoneProtectionInfoTag
T@"NSString",&,N,V_zoneProtectionInfoTag
setValue:
hasName
hasValue
value
_name
_value
T@"NSString",&,N,V_name
T@"CKDPConfigurationFieldValue",&,N,V_value
addRequestForZoneID:forOperation:withCompletionHandler:
userIdentityLookupInfos
discoverUserIdentitiesProgressBlock
initWithOperation:lookupInfos:
_handleDiscoveredIdentity:lookupInfo:responseCode:
setProgressBlock:
_discoverIdentitiesWithLookupInfos:completionBlock:
setUserIdentityLookupInfos:
_discoverUserIdentitiesProgressBlock
_userIdentityLookupInfos
T@"NSArray",&,N,V_userIdentityLookupInfos
T@?,C,N,V_discoverUserIdentitiesProgressBlock
_discoverIdentitiesBatched:
lookupInfosWithEmails:
contactIdentifiersByLookupInfo
initWithKeysToFetch:
setUnifyResults:
emailAddresses
initWithEmailAddress:
setShouldReportMissingIdentity:
phoneNumbers
initWithPhoneNumber:
enumerateContactsWithFetchRequest:error:usingBlock:
setContactIdentifiersByLookupInfo:
_populateFakeUnitTestLookupInfos:
_populateRealUserIdentityLookupInfos
_populateUserIdentityLookupInfos
setContactIdentifiers:
_contactIdentifiersByLookupInfo
T@"NSMutableDictionary",&,N,V_contactIdentifiersByLookupInfo
c2MetricsEndpoint
setC2MetricsEndpoint:
setAnonymous:
_setupC2MetricsEndpointWithContainer:
setClientProcessVersion:
setClientProcessBundleId:
c2AllOperationMetricsReportFrequency:
setReportClientOperationFrequency:
c2AllOperationMetricsReportFrequencyBase:
setReportClientOperationFrequencyBase:
c2AllOperationGroupMetricsReportFrequency:
setReportOperationGroupFrequency:
c2AllOperationGroupMetricsReportFrequencyBase:
setReportOperationGroupFrequencyBase:
_attributeCurrentContainer:config:
anonymous
setContainerScopedUserIdentifier:
containerScopedUserIdentifier
setContainerScopedDeviceIdentifier:
setApplicationBundleIdentifierOverrideForContainerAccess:
setApplicationBundleIdentifierOverrideForNetworkAttribution:
c2NetworkMetricsReportFrequency:
setReportFrequency:
c2NetworkMetricsReportFrequencyBase:
setReportFrequencyBase:
setOperationGroupId:
setOperationGroups:
setOperationId:
setOperationGroup:
setClientOperations:
metricOptionsForNetworkOperation:
isPushTriggerFired
setPushTrigger:
deviceIdentifier
containerScopedDeviceIdentifier
c2ClientOperationMetricsReportFrequency:
c2ClientOperationMetricsReportFrequencyBase:
c2ClientApplicationMetricsReportFrequency:
c2ClientApplicationMetricsReportFrequencyBase:
associatedOperationGroups
associatedOperations
operationGroup
setDidCompleteWithError:
didCompleteWithError
metricOptionsForEventMetric:metricType:container:config:reportingCompletionBlock:
arrayWithArray:
_encryptMergeableDeltas
_uploadAndReplaceDeltas
pendingDeltaUploads
replacementDeltas
_encryptMergeableDeltas:completionHandler:
pendingReplacementRequests
_uploadAndReplaceDeltas:
maximumMergeableDeltaRequestSize
protobufSize:error:
removeObjectsInArray:
handleDeltaUploaded:result:
handleReplaceDeltasRequest:result:
uploadDeltaCompletionBlock
replaceDeltasRequestCompletionBlock
setReplacementRequests:
setPendingReplacementRequests:
setPendingDeltaUploads:
_uploadDeltaCompletionBlock
_replaceDeltasRequestCompletionBlock
_pendingReplacementRequests
_pendingDeltaUploads
T@"NSArray",C,N,V_deltas
T@"NSArray",C,N,V_replacementRequests
T@"NSMutableArray",&,N,V_pendingReplacementRequests
T@"NSMutableArray",&,N,V_pendingDeltaUploads
T@"<CKUploadMergeableDeltasOperationCallbacks>",&,D,N
T@?,C,N,V_uploadDeltaCompletionBlock
T@?,C,N,V_replaceDeltasRequestCompletionBlock
productName
productVersion
buildVersion
mainBundle
whitespaceCharacterSet
stringByTrimmingCharactersInSet:
initWithDestinationZoneID:destinationDatabaseScope:sourceZoneID:sourceDatabaseScope:
destinationDatabaseScope
sourceZoneID
sourceDatabaseScope
initWithDestinationZoneID:destinationDatabaseScope:
isCrossOwner
setDestinationZoneID:
setSourceZoneID:
setSourceDatabaseScope:
setDestinationDatabaseScope:
_destinationZoneID
_sourceZoneID
_sourceDatabaseScope
_destinationDatabaseScope
T@"CKRecordZoneID",&,N,V_destinationZoneID
Tq,N,V_destinationDatabaseScope
T@"CKRecordZoneID",&,N,V_sourceZoneID
Tq,N,V_sourceDatabaseScope
assetBatch
setAssetBatch:
itemsByAssetId
setItemsByAssetId:
_assetBatch
_itemsByAssetId
T@"CKDAssetBatch",&,N,V_assetBatch
T@"NSMutableDictionary",&,N,V_itemsByAssetId
strongToStrongObjectsMapTable
setTransactionStateByRequestIDs:
pRecordIdentifierFromRecordID:
setRecordId:
setAssetFields:
setField:
setAssets:
wrappedAssetKey
clearAssetKey
setClearAssetKey:
assets
recordId
initWithRecordID:fileSignature:referenceSignature:size:
assetFields
setAssetUploadTokenRetrieveRequest:
assetUploadTokenRetrieveRequest
setUploads:
authPutRequest
setAuthPutRequest:
isRereferenceAssetBatch
setAuthPutType:
addContentRequestHeaders:
transactionStateByRequestIDs
hasAssetUploadTokenRetrieveResponse
assetUploadTokenRetrieveResponse
authPutResponse
setAuthPutResponse:
contentResponseHeadersCount
contentResponseHeaders
setAuthPutResponseHeaders:
authPutResponseHeaders
uploadTokens
requestor
token
contentBaseURL
URLWithString:
pContainerScopedRecordIdentifierWithPRecordIdentifier:
trackingUUID
setContentBaseURL:
setRequestor:
tokenExpiration
setUploadTokenExpiration:
initWithOperation:assetTokenRequest:headers:
headers
setHeaders:
_assetTokenRequest
_transactionStateByRequestIDs
_headers
T@"CKDAssetTokenRequest",&,N,V_assetTokenRequest
T@"NSMapTable",&,N,V_transactionStateByRequestIDs
T@"NSDictionary",&,N,V_headers
vettingToken
vettingEmail
vettingPhone
encryptedKey
baseToken
displayedHostname
_reconstructShortToken
_performAuthKitVerification
_forceFetchShareMetadata
_reconstructShareURL
_verifyOONParticipant
fullTokenFromBaseToken:privateToken:
shortSharingTokenFromFullToken:
setShortToken:
shortToken
validateVettingToken:vettingEmail:vettingPhone:container:completionHandler:
verifyProgressShareMetadataFetchedBlock
shareURLWithShortToken:shareTitle:shareType:containerID:displayedHostname:
verifyProgressURLReconstructedBlock
invitedProtectionData
shortSharingTokenFromData:
_verifyProgressURLReconstructedBlock
_verifyProgressShareMetadataFetchedBlock
_vettingToken
_vettingEmail
_vettingPhone
_encryptedKey
_baseToken
_displayedHostname
_shortToken
T@"NSString",R,N,V_vettingToken
T@"NSString",R,N,V_vettingEmail
T@"NSString",R,N,V_vettingPhone
T@"NSString",R,N,V_routingKey
T@"NSData",R,N,V_encryptedKey
T@"NSString",R,N,V_baseToken
T@"NSString",R,N,V_displayedHostname
T@"NSString",&,N,V_shortToken
T@"CKShareMetadata",&,N,V_shareMetadata
T@"<CKCompleteParticipantVettingOperationCallbacks>",&,D,N
T@?,C,N,V_verifyProgressURLReconstructedBlock
T@?,C,N,V_verifyProgressShareMetadataFetchedBlock
decodeObjectOfClass:forKey:
decodeIntegerForKey:
encodeObject:forKey:
encodeInteger:forKey:
T@"NSURL",C,N,V_publicCloudDBURL
T@"NSURL",C,N,V_publicShareServiceURL
T@"NSURL",C,N,V_publicDeviceServiceURL
T@"NSURL",C,N,V_publicCodeServiceURL
T@"NSURL",C,N,V_publicMetricsServiceURL
T@"NSString",C,N,V_containerScopedUserID
T@"NSString",C,N,V_orgAdminUserID
Tq,N,V_environment
usePreauth
enqueuedOnContainerService
resolvedBaseURL
setFunctionName:
serializedParameters
setSerializedParameters:
setSerializationFormat:
setUserId:
setDatabaseEnvironment:
setDeviceId:
setDatabaseType:
setRequestContext:
inputStreamWithData:
serializedResultsCallback
serializedResult
setMessage:
initWithOperation:serviceName:functionName:serializedParameters:resolvedBaseURL:
setSerializedResultsCallback:
setServiceName:
setResolvedBaseURL:
_serializedResultsCallback
_serviceName
_functionName
_serializedParameters
_resolvedBaseURL
T@"NSString",C,N,V_serviceName
T@"NSString",C,N,V_functionName
T@"NSData",&,N,V_serializedParameters
T@"NSURL",C,N,V_resolvedBaseURL
T@?,C,N,V_serializedResultsCallback
setProtectedCloudComputeMetadata:
setAttestationRequest:
setTrustedTargetCryptoMetadata:
hasServiceName
hasFunctionName
hasSerializedParameters
hasProtectedCloudComputeMetadata
hasAttestationRequest
hasTrustedTargetCryptoMetadata
protectedCloudComputeMetadata
attestationRequest
trustedTargetCryptoMetadata
_attestationRequest
_protectedCloudComputeMetadata
_trustedTargetCryptoMetadata
T@"NSString",&,N,V_serviceName
T@"NSString",&,N,V_functionName
T@"CKDPCodeFunctionInvokeRequestProtectedCloudComputeMetadata",&,N,V_protectedCloudComputeMetadata
T@"CKDPCodeFunctionInvokeRequestAttestationRequest",&,N,V_attestationRequest
T@"CKCDPTrustedTargetCryptoMetadata",&,N,V_trustedTargetCryptoMetadata
setLastMissingManateeIdentityErrorDate:
setUserPurge:
setHasUserPurge:
hasUserPurge
hasLastMissingManateeIdentityErrorDate
userPurge
lastMissingManateeIdentityErrorDate
_lastMissingManateeIdentityErrorDate
_userPurge
TB,N,V_userPurge
T@"CKDPDate",&,N,V_lastMissingManateeIdentityErrorDate
setQueryRetrieveRequest:
queryRetrieveRequest
setQuery:
pRecordZoneIdentifierFromRecordZoneID:
addFields:
limit
setLimit:
desiredAssetKeys
setAllAssets:
hasQueryRetrieveResponse
queryRetrieveResponse
queryResults
hasRecord
setRecord:
recordIDFromPRecordIdentifier:asAnonymousCKUserID:error:
hasErrorDescription
recordsParsedBlock
queryResponses
setQueryResponses:
setCursor:
recordResponses
setRecordResponses:
_queryResponses
_limit
_desiredAssetKeys
_recordsParsedBlock
_recordResponses
T@"NSMutableArray",&,N,V_queryResponses
T@"NSData",&,N,V_resultsCursor
T@"NSMutableArray",&,N,V_recordResponses
T@"CKQuery",&,N,V_query
T@"NSData",&,N,V_cursor
TQ,N,V_limit
T@"NSArray",&,N,V_requestedFields
T@"NSSet",&,N,V_desiredAssetKeys
T@?,C,N,V_recordsParsedBlock
initWithTrackingID:
stopTrackingItems:
startTrackingItems:
cancelTokens
initWithPackage:trackProgress:
setManifestAsset:
setSectionAssets:
manifestAsset
sectionAssets
itemIndices
setItemIndices:
sectionIndices
setSectionIndices:
progressTracker
setProgressTracker:
setCancelTokens:
_package
_manifestAsset
_sectionAssets
_itemIndices
_sectionIndices
_progressTracker
_MMCSRequestOptions
_group
_cancelTokens
T@"CKPackage",R,N,V_package
T@"CKAsset",&,N,V_manifestAsset
T@"NSArray",&,N,V_sectionAssets
T@,&,N,V_itemIndices
T@"NSIndexSet",&,N,V_sectionIndices
T@"CKDProgressTracker",&,N,V_progressTracker
T@"CKDMMCSRequestOptions",&,N,V_MMCSRequestOptions
T@"NSObject<OS_dispatch_group>",&,N,V_group
T@"CKDCancelTokenGroup",&,N,V_cancelTokens
packageIndexSets
assetsToDownloadInMemory
assetURLInfosToFillOut
MMCSItemsToDownload
progress
finished
removeAllCancelTokens
_prepareForDownload
_download
_postProcess
fileURL
defaultManager
removeItemAtURL:error:
setFileURL:
downloadPreparationBlock
downloadProgressBlock
arrayIndex
downloadCommandBlock
downloadCompletionBlock
constructedAssetDownloadURLTemplate
_canonicalizeTemplateURL:
percentEncodedPath
percentEncodedQuery
_templateURLRequiresAssetKey:
keyOrErrorForHostname
assetKey
publicKey
_expandTemplateURL:fieldValues:
setConstructedAssetDownloadURL:
constructedAssetDownloadURL
authToken
isValidV2Signature:
zeroSizeFileSignature
_tryToFillInTheDerivativeTemplateWithAsset:
shouldDownloadAssetFromTranscoder:
trackDownloadedData:signature:error:
setUUID:
_didDownloadAsset:error:
setDownloaded:
_didPrepareAsset:
_didMakeProgressForAsset:progress:
initWithAsset:
setPaddedFileSize:
setPackage:
_didCommandForAsset:command:
setMMCSItemsToDownloadInMemory:
setMMCSItemsToDownload:
setAssetsToDownloadFromTranscoder:
setAssetsToDownloadFromTranscoderInMemory:
setDownloadTasksByPackages:
_removeUntrackedMMCSItems:
downloadTasksByPackages
downloadLooksOkay
fileHandle
setFileHandle:
updateProgressWithItem:progress:
_collectMetricsFromMMCSOperationMetrics:
allItemGroups
setFinished:
_didDownloadMMCSItem:inMemory:error:
sectionItems
objectEnumerator
packageIndex
updateItemsAtIndexes:fileURLs:
_didDownloadMMCSSectionItem:task:error:
sectionAtIndex:
itemAtIndex:
sectionIndex
index
initWithPackage:
offset
setOffset:
setPackageIndex:
enumerateIndexesUsingBlock:
setSectionItems:
trackCachedButNotRegisteredMMCSItems:error:
setProgress:
_didMakeProgressForMMCSSectionItem:task:
queue
_collectMetricsFromCompletedItemGroup:
_didDownloadMMCSSectionItems:task:error:
getSectionItem:operation:options:progress:completionHandler:
addCancelToken:withOperation:
removeCancelToken:
_downloadPackageSectionsWithSectionEnumerator:task:completionBlock:
_downloadPackageSectionAtIndex:task:completionBlock:
readContentsOfFile:intoPackage:error:
itemCount
sectionCount
initWithIndexesInRange:
addIndex:
setZoneNames:
downloaded
containsIndex:
maxPackageDownloadsPerBatch
_downloadPackageSectionsWithPendingTasks:downloadingTasks:completedTasks:
_downloadPackageSectionsWithTask:completionBlock:
MMCSItemsToDownloadInMemory
assetsToDownloadFromTranscoder
assetsToDownloadFromTranscoderInMemory
_downloadMMCSItems:downloadTasksByPackages:shouldFetchAssetContentInMemory:
_downloadTranscodedAsset:inMemory:
maxPackageDownloadsPerBatchWithDefaultValue:
setMaxPackageDownloadsPerBatch:
initWithItems:
_didDownloadMMCSItems:inMemory:error:
_didMakeProgressForMMCSItem:inMemory:
_collectMetricsFromCompletedItemGroupSet:
getItemGroupSet:operation:shouldFetchAssetContentInMemory:options:progress:command:completionHandler:
fillInDownloadURLsForAssetWithFieldName:fileName:recordPCS:pcsManager:useEncryption:useClearAssetEncryption:alwaysAllowKeyExport:outError:
urlFilledOutBlock
setDownloadPreparationBlock:
setDownloadProgressBlock:
setDownloadCommandBlock:
setDownloadCompletionBlock:
setUrlFilledOutBlock:
performOperationCleanup
constructedAssetDownloadParameters
initWithRecord:
setConstructedAssetDownloadParameters:
transcoderServiceName
transcoderFunctionName
transcoderPermittedRemoteMeasurement
setPermittedRemoteMeasurement:
setDataProtectionType:
setShouldFetchAssetContentInMemory:
setShouldSendRecordPCSKeys:
localSerialization
setRequestLocalSerializations:
setWireSerialization:
setEncryptedMasterKey:
wireSerialization
UUID
wasCached
_didCommandForMMCSItem:command:
supportsClearAssetEncryption
setKeyOrErrorForHostname:
setQueue:
setPackageIndexSets:
setAssetsToDownloadInMemory:
setAssetURLInfosToFillOut:
_downloadPreparationBlock
_downloadProgressBlock
_downloadCommandBlock
_downloadCompletionBlock
_urlFilledOutBlock
_keyOrErrorForHostname
_queue
_packageIndexSets
_assetsToDownloadInMemory
_assetURLInfosToFillOut
_MMCSItemsToDownload
_MMCSItemsToDownloadInMemory
_assetsToDownloadFromTranscoder
_assetsToDownloadFromTranscoderInMemory
_downloadTasksByPackages
_maxPackageDownloadsPerBatch
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T@"NSArray",&,N,V_assetsToDownload
T@"NSArray",&,N,V_packageIndexSets
T@"NSArray",&,N,V_assetsToDownloadInMemory
T@"NSArray",&,N,V_assetURLInfosToFillOut
T@"NSMutableArray",&,N,V_MMCSItemsToDownload
T@"NSMutableArray",&,N,V_MMCSItemsToDownloadInMemory
T@"NSMutableArray",&,N,V_assetsToDownloadFromTranscoder
T@"NSMutableArray",&,N,V_assetsToDownloadFromTranscoderInMemory
T@"NSMapTable",&,N,V_downloadTasksByPackages
TQ,N,V_maxPackageDownloadsPerBatch
T@?,C,N,V_downloadPreparationBlock
T@?,C,N,V_downloadProgressBlock
T@?,C,N,V_downloadCommandBlock
T@?,C,N,V_downloadCompletionBlock
T@?,C,N,V_urlFilledOutBlock
T@"NSMutableDictionary",&,N,V_keyOrErrorForHostname
operationClassName
recentErrorsByDate
aggregateCKMetrics
aggregateMMCSMetrics
setQueueing:
setExecuting:
_trimmedError:
initWithDomain:code:userInfo:
_addMetrics:toAggregate:
savedErrorCount
distantFuture
merge:
_operationClassName
_recentErrorsByDate
_operationCount
_aggregateCKMetrics
_aggregateMMCSMetrics
T@"NSString",R,N,V_operationClassName
T@"NSMutableDictionary",R,N,V_recentErrorsByDate
TQ,R,V_operationCount
T@"CKDOperationMetrics",R,N,V_aggregateCKMetrics
T@"CKDOperationMetrics",R,N,V_aggregateMMCSMetrics
addValue:
setRange:
valuesCount
clearValues
valueAtIndex:
valueType
hasRange
range
values
setValues:
_range
_values
T@"CKDPListRange",&,N,V_range
T@"NSMutableArray",&,N,V_values
setQuotaAvailable:
setQuotaFetchedBlock:
_quotaAvailable
TQ,N,V_quotaAvailable
T@"<CKFetchUserQuotaOperationCallbacks>",&,D,N
addRootRecordDesiredKeys:
setShortTokenHash:
rootRecordDesiredKeysCount
clearRootRecordDesiredKeys
rootRecordDesiredKeysAtIndex:
setParticipantId:
rootRecordDesiredKeysType
hasRoutingKey
hasShortTokenHash
setForceFetch:
setHasForceFetch:
hasForceFetch
setHasShouldFetchRootRecord:
hasShouldFetchRootRecord
hasParticipantId
shortTokenHash
forceFetch
setRootRecordDesiredKeys:
participantId
_participantId
_rootRecordDesiredKeys
_shortTokenHash
_forceFetch
T@"NSData",&,N,V_shortTokenHash
TB,N,V_forceFetch
T@"NSMutableArray",&,N,V_rootRecordDesiredKeys
T@"NSString",&,N,V_participantId
setAssetZoneKey:
setAssetRecords:
assetRecordsByRecordID
setAssetRecordsByRecordID:
_assetZoneKey
_assetRecords
_assetRecordsByRecordID
T@"NSMutableOrderedSet",&,N,V_assetRecords
T@"NSMutableDictionary",&,N,V_assetRecordsByRecordID
T@"CKDAssetZoneKey",&,N,V_assetZoneKey
clearFields
writeData:forTag:
_inflateFieldsFromData:
fieldData
fieldForKey:
recordFromData:
emptyFieldWithKey:
fieldValueTypeFromEncryptedDataObject:isInList:
fieldValueTypeFromObject:
objectIsAnEncryptedType:
encryptedFieldValueOfType:withObject:
fieldValueOfType:withObject:forCache:
fieldValueFromObject:forCache:
setIsEncrypted:
setBytesValue:
fieldValueFromObject:
addListValue:
pEncryptedMergeableValueFromRecordValue:
setEncryptedMergeableValue:
doubleValue
setDoubleValue:
setDateValue:
dateValue
setTime:
setStringValue:
pReferenceFromReference:error:
setReferenceValue:
longLongValue
setSignedValue:
pAssetFromAsset:
setAssetValue:
pPackageFromPackage:
setPackageValue:
CKDPLocationCoordinateFromCLLocation:
setLocationValue:
pStreamingAssetFromStreamingAsset:forCache:
setStreamingAssetValue:
pMergeableValueFromMergeableValueID:
setMergeableValue:
setLatitude:
setLongitude:
bytesValue
objectRepresentationFromField:inRecord:asAnonymousCKUserID:
encryptedObjectRepresentationFromFieldValue:
listValues
objectRepresentationFromFieldValue:
setArrayIndex:
time
dateWithTimeIntervalSinceReferenceDate:
signedValue
locationValue
CKLocationFromPLocationCoordinate:
referenceValue
referenceFromPReference:error:
assetValue
assetFromPAsset:error:
packageValue
packageFromPPackage:error:
streamingAssetValue
streamingAssetFromPStreamingAsset:error:
mergeableRecordValueFromPRecordField:inPRecordIdentifier:asAnonymousCKUserID:error:
pFieldActionWithLocation:length:values:
addAction:
pFieldWithKey:value:forCache:
setIndex:
setIsReversed:
setPosition:
setInsertAfter:
setInsertIntoList:
setLeft:
setRight:
setReplaceListRange:
setDeleteListRange:
fieldValueOfType:withObject:
locationFieldValueWithLatitude:longitude:
pFieldWithKey:value:
delegate
systemAvailabilityChanged:
initWithDelegate:
postSystemAvailabilityChanged:
savedDelegateHash
setSavedDelegateHash:
_delegate
_savedDelegateHash
T@"<CKDSystemAvailabilityWatcher>",W,N,V_delegate
TQ,N,V_savedDelegateHash
currentAvailabilityState
postAccountChangedNotificationWithAccountID:changeType:
_systemMayNowBeReady
_logAvailabilityDescription
removeNotifications
availabilityState
setAvailabilityState:
_clearVanishedWatchers
sharedMonitor
assertAvailability:
registerWatcher:
resetToUnavailableForUnitTests
simulateBuddyCompletedForUnitTests
simulateFirstUnlockForUnitTests
watcherWrappers
setWatcherWrappers:
simulatedavailabilityState
setSimulatedavailabilityState:
_watcherWrappers
_availabilityState
_simulatedavailabilityState
T@"NSMutableSet",&,N,V_watcherWrappers
TQ,V_availabilityState
TQ,V_simulatedavailabilityState
setShareVettingInitiateRequest:
shareRecordID
pShareIdentifierFromRecordID:
shareVettingInitiateRequest
setShareId:
setEncryptedKey:
vettingInitiationRequestCompletionBlock
hasShareVettingInitiateResponse
shareVettingInitiateResponse
hasVettingError
vettingError
initWithOperation:shareRecordID:encryptedKey:participantID:baseToken:
setVettingInitiationRequestCompletionBlock:
setShareRecordID:
_vettingInitiationRequestCompletionBlock
_shareRecordID
T@"CKRecordID",C,N,V_shareRecordID
T@"NSData",C,N,V_encryptedKey
T@"NSString",C,N,V_participantID
T@"NSString",C,N,V_baseToken
T@?,C,N,V_vettingInitiationRequestCompletionBlock
T@"CKDPIdentifier",&,N,V_identifier
initWithEnvironment:
initWithEnvironmentName:namedDelegatePort:queue:
publicToken
notificationWithName:object:userInfo:
postNotification:
completionBlocks
sharedConnectionForAPSEnvironmentString:
getToken:
connection:didReceivePublicToken:
connection:didChangeConnectedStatus:
connectionDidReconnect:
setAPSEnvironmentString:
apsConnection
setApsConnection:
setCompletionBlocks:
_apsEnvironmentString
_apsConnection
_completionBlocks
T@"APSConnection",&,N,V_apsConnection
T@"NSMutableArray",&,N,V_completionBlocks
T@"NSString",&,N,SsetAPSEnvironmentString:,V_apsEnvironmentString
CKLogErrorWithCode:format:
setDateFormat:
setLenient:
systemTimeZone
setTimeZone:
ck_dateFormatterWithString:
dateFromString:
ck_dateWithNaturalLanguageString:
addCryptoSessions:
cryptoSessionsCount
clearCryptoSessions
cryptoSessionsAtIndex:
cryptoSessionsType
cryptoSessions
setCryptoSessions:
_cryptoSessions
T@"NSMutableArray",&,N,V_cryptoSessions
requireUserIDs
setupBaseURL
setPath:
CKPercentEscapedQueryString
setPercentEncodedQuery:
setContainerServerInfo:
CKFirstUrlForKeys:
containerServerInfo
initWithOperation:containerIdentifier:
setRequireUserIDs:
_requireUserIDs
_containerServerInfo
T@"CKDContainerServerInfo",C,N,V_containerServerInfo
TB,N,V_requireUserIDs
T@"NSString",C,N,V_containerIdentifier
setUploadURL:
setReservedSize:
setHasReservedSize:
hasReservedSize
hasUploadURL
setUploadURLExpirationTimeSeconds:
setHasUploadURLExpirationTimeSeconds:
hasUploadURLExpirationTimeSeconds
reservedSize
uploadURL
uploadURLExpirationTimeSeconds
_reservedSize
_uploadURLExpirationTimeSeconds
_uploadURL
Tq,N,V_reservedSize
T@"NSString",&,N,V_uploadURL
Tq,N,V_uploadURLExpirationTimeSeconds
recordZonesToSave
recordZoneIDsToDelete
allowDefaultZoneSave
markZonesAsUserPurged
maxZoneSaveAttempts
dontFetchFromServer
_fetchPCSDataForZonesFromServer:
numZoneSaveAttempts
setNumZoneSaveAttempts:
_saveZonesToServer
_synchronizeUserKeyRegistryIfNeeded
zonesWaitingOnKeyRegistrySync
_sendErrorForFailedZones
_sendCoreAnalyticsEventForKeySync
setDidSynchronizeUserKeyRegistry:
retryableErrorsByZoneID
setKeySyncAnalytics:
keySyncAnalytics
didSynchronizeUserKeyRegistry
saveCompletionBlock
recordZonesByZoneID
setCapabilities:
setExpired:
setHasUpdatedExpirationTimeInterval:
setUpdatedExpirationTimeInterval:
setPCSData:forFetchedZoneID:
setZonePCS:
removeAnonymousSharesFromSharedDB:operation:withCompletionBlock:
deleteCompletionBlock
initWithOperation:recordZonesToSave:recordZoneIDsToDelete:
setMarkZonesAsUserPurged:
_handleRecordZoneSaved:responseCode:serverCapabilities:expirationDate:expired:
_handleRecordZoneDeleted:responseCode:
setRecordZoneModifiedBlock:
previousProtectionEtag
setZonePCSModificationDate:
_createNewPCSForZone:completionHandler:
_fetchPCSDataForZone:fromServer:
_checkAndPrepareZones
setRecordZoneIDsToDelete:
setRecordZonesByZoneID:
setRetryableErrorsByZoneID:
setZonesWaitingOnKeyRegistrySync:
_hasZoneSaves
_hasZoneDeletes
_allowDefaultZoneSave
_markZonesAsUserPurged
_dontFetchFromServer
_didSynchronizeUserKeyRegistry
_numZoneSaveAttempts
_saveCompletionBlock
_deleteCompletionBlock
_recordZonesToSave
_recordZoneIDsToDelete
_recordZonesByZoneID
_retryableErrorsByZoneID
_maxZoneSaveAttempts
_zonesWaitingOnKeyRegistrySync
_keySyncAnalytics
T@"NSMutableArray",&,N,V_recordZonesToSave
T@"NSArray",&,N,V_recordZoneIDsToDelete
T@"NSMutableDictionary",&,N,V_recordZonesByZoneID
T@"NSMutableDictionary",&,N,V_retryableErrorsByZoneID
TB,N,V_allowDefaultZoneSave
TB,N,V_markZonesAsUserPurged
Ti,N,V_numZoneSaveAttempts
Tq,N,V_maxZoneSaveAttempts
TB,N,V_dontFetchFromServer
TB,N,V_didSynchronizeUserKeyRegistry
T@"NSMutableArray",&,N,V_zonesWaitingOnKeyRegistrySync
T@"CKDPCSKeySyncCoreAnalytics",&,N,V_keySyncAnalytics
T@"<CKModifyRecordZonesOperationCallbacks>",&,D,N
T@?,C,N,V_saveCompletionBlock
T@?,C,N,V_deleteCompletionBlock
setOriginId:
setOriginEtag:
setDestinationEtag:
setDestinationZoneProtectionInfoTag:
setDestinationRecordProtectionInfoTag:
setDestinationRecord:
semantics
setSemantics:
setHasSemantics:
hasSemantics
semanticsAsString:
StringAsSemantics:
hasOriginId
hasOriginEtag
hasDestinationEtag
hasDestinationZoneProtectionInfoTag
hasDestinationRecordProtectionInfoTag
hasDestinationRecord
setMerge:
setHasMerge:
hasMerge
originId
originEtag
destinationEtag
destinationZoneProtectionInfoTag
destinationRecordProtectionInfoTag
destinationRecord
merge
_destinationEtag
_destinationRecord
_destinationRecordProtectionInfoTag
_destinationZoneProtectionInfoTag
_originEtag
_originId
_semantics
_merge
Ti,N,V_semantics
T@"CKDPRecordIdentifier",&,N,V_originId
T@"NSString",&,N,V_originEtag
T@"NSString",&,N,V_destinationEtag
T@"NSString",&,N,V_destinationZoneProtectionInfoTag
T@"NSString",&,N,V_destinationRecordProtectionInfoTag
T@"CKDPRecord",&,N,V_destinationRecord
TB,N,V_merge
childAccounts
aa_cloudKitAccount
accountProperties
dataclassProperties
ck_cloudKitAccount
ck_identifier
ck_accountProperties
ck_dataclassProperties
T@"ACAccount",R,N
addProtectionInfoKeysToRemove:
setRecordProtectionInfo:
setStableUrl:
protectionInfoKeysToRemovesCount
clearProtectionInfoKeysToRemoves
protectionInfoKeysToRemoveAtIndex:
setStorageExpiration:
protectionInfoKeysToRemoveType
hasRecordProtectionInfo
hasStableUrl
hasShareId
hasStorageExpiration
recordProtectionInfo
stableUrl
shareId
protectionInfoKeysToRemoves
setProtectionInfoKeysToRemoves:
storageExpiration
_protectionInfoKeysToRemoves
_recordProtectionInfo
_shareId
_stableUrl
_storageExpiration
T@"CKDPProtectionInfo",&,N,V_protectionInfo
T@"CKDPProtectionInfo",&,N,V_recordProtectionInfo
T@"CKDPRecordStableUrl",&,N,V_stableUrl
T@"CKDPShareIdentifier",&,N,V_shareId
T@"NSMutableArray",&,N,V_protectionInfoKeysToRemoves
T@"CKDPStorageExpiration",&,N,V_storageExpiration
mountedVolumes
volumeUUID
isRootVolume
_rebuildVolumes
volumeForVolumeUUID:
volumeForDeviceID:
deviceIDForVolumeUUID:
volumeUUIDForDeviceID:
setFieldId:
rangesCount
clearRanges
rangeAtIndex:
rangeType
hasFieldId
fieldId
ranges
setRanges:
_fieldId
_ranges
T@"CKDPRecordFieldIdentifier",&,N,V_fieldId
T@"NSMutableArray",&,N,V_ranges
setCountryCode:
setCorporateSharingEnabled:
setHasCorporateSharingEnabled:
hasCorporateSharingEnabled
setLastWebActivityUTCMills:
setHasLastWebActivityUTCMills:
hasLastWebActivityUTCMills
hasCountryCode
setPhotosWebAccessTimestamp:
setHasPhotosWebAccessTimestamp:
hasPhotosWebAccessTimestamp
setAccountFlags:
setHasAccountFlags:
hasAccountFlags
corporateSharingEnabled
lastWebActivityUTCMills
countryCode
photosWebAccessTimestamp
accountFlags
_accountFlags
_lastWebActivityUTCMills
_photosWebAccessTimestamp
_countryCode
_corporateSharingEnabled
TB,N,V_corporateSharingEnabled
Tq,N,V_lastWebActivityUTCMills
T@"NSString",&,N,V_countryCode
Tq,N,V_photosWebAccessTimestamp
TQ,N,V_accountFlags
addUserInfo:
setDomain:
userInfosCount
clearUserInfos
userInfoAtIndex:
userInfoType
hasDomain
userInfos
setUserInfos:
_domain
_userInfos
T@"NSString",&,N,V_domain
T@"NSMutableArray",&,N,V_userInfos
setToken:
setAsset:
hasToken
hasAsset
setTokenExpiration:
setHasTokenExpiration:
hasTokenExpiration
_tokenExpiration
_asset
_token
T@"NSString",&,N,V_token
T@"CKDPAsset",&,N,V_asset
Tq,N,V_tokenExpiration
hasPosition
setHasInsertAfter:
hasInsertAfter
position
insertAfter
_position
_insertAfter
T@"CKDPListPosition",&,N,V_position
TB,N,V_insertAfter
lookupInfos
setRecordResolveTokenRequest:
recordResolveTokenRequest
rootRecordDesiredKeySet
lookupInfosByRequestID
hasRecordResolveTokenResponse
recordResolveTokenResponse
setContainerID:
hasParticipantType
participantType
hasParticipantState
participantState
hasParticipantPermission
setProtectedFullToken:
rootRecordType
setRootRecordType:
hasOwnerParticipant
privateDBTranslator
setPrivateDBTranslator:
ownerParticipant
userId
setOverriddenContainerScopedUserID:
setOverriddenDatabaseScope:
setShare:
setHierarchicalRootRecordID:
setSharedItemHierarchyIDs:
setRootRecord:
hasCallerParticipant
callerParticipant
shareParticipantFromPParticipant:error:
setOwnerIdentity:
shareInfo
potentialMatchsCount
potentialMatchs
setOutOfNetworkMatches:
recordZoneFromPRecordZone:error:
setSharedZone:
tokenResolveBlock
setLookupInfos:
setLookupInfosByRequestID:
_rootRecordDesiredKeySet
_tokenResolveBlock
_lookupInfos
_lookupInfosByRequestID
_privateDBTranslator
T@"NSArray",&,N,V_lookupInfos
T@"NSMutableDictionary",&,N,V_lookupInfosByRequestID
T@"CKDProtocolTranslator",&,N,V_privateDBTranslator
T@"NSSet",&,N,V_rootRecordDesiredKeySet
T@?,C,N,V_tokenResolveBlock
_shortSharingTokenHashData
T@"NSData",&,N,V_shortSharingTokenHashData
setSimulatorMessagesOnly:
simulatorMessagesOnly
setOnlyTestLogs:
onlyTestLogs
setProcessName:
processNamesByPath
filter
matchesEvent:
setSimulatorOnly:
simulatorOnly
_processNameForPath:
_handleEvent:
colorOutput
setColorOutput:
setFilter:
formatter
setProcessNamesByPath:
_colorOutput
_filter
_formatter
_processNamesByPath
T@"CKLEventFilter",&,N,V_filter
T@"NSDateFormatter",R,N,V_formatter
T@"NSMutableDictionary",&,N,V_processNamesByPath
TB,N,V_colorOutput
T@"NSString",&,N
processImagePath
senderImagePath
timeZone
threadIdentifier
_colorString:withForeground:
activityIdentifier
parentActivityIdentifier
logType
_record
T@"CKDPRecord",&,N,V_record
hasHeaderKey
hasHeaderValue
addMergeableDeltas:
mergeableDeltasCount
clearMergeableDeltas
mergeableDeltasAtIndex:
mergeableDeltasType
setMergeableDeltas:
_mergeableDeltas
T@"NSMutableArray",&,N,V_mergeableDeltas
setKey:
hasKey
_key
T@"NSString",&,N,V_key
T@"CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoValue",&,N,V_value
primaryAccount
accountWithIdentifier:
accountWithAltDSID:
accountPropertyOverrides
overridesByDataclass
explicitCredentialsAccountWithEmail:password:propertyOverrides:overridesByDataclass:
mockAccountWithTestAccount:testDevice:
backingAccount
username
formattedUsernameFromUsername:
personaIdentifier
_userCloudDBURLisInCarryPartition
accountPropertiesForDataclass:
haveWarnedAboutServerPreferredPushEnvironment
setHaveWarnedAboutServerPreferredPushEnvironment:
updateAccountPropertiesAndSaveAccount:
globalAuthTokenQueue
authTokenQueue
authTokenCallbackQueue
isAccountSuspended
canSuspendedAccountRenewCredentials
noteSuspendedAccountRenewalDate
renewAuthTokenWithOptions:completionHandler:
setLastFailedCloudKitAuthToken:
_lockedCloudKitAuthTokenWithContainer:error:
_lockedRenewTokenWithReason:shouldForce:container:tokenFetchBlock:completionHandler:
cloudKitAuthTokenWithError:
lastFailedCloudKitAuthToken
setLastFailediCloudAuthToken:
_lockediCloudAuthTokenWithContainer:error:
iCloudAuthTokenWithError:
lastFailediCloudAuthToken
validateVettingToken:vettingEmail:vettingPhone:completionHandler:
sharingURLHostname
setAuthTokenCallbackQueue:
_haveWarnedAboutServerPreferredPushEnvironment
_accountStore
_backingAccount
_authTokenCallbackQueue
_lastFailedCloudKitAuthToken
_lastFailediCloudAuthToken
T@"CKDBackingAccount",R,N,V_backingAccount
TB,N,V_haveWarnedAboutServerPreferredPushEnvironment
T@"NSObject<OS_dispatch_queue>",R,N
T@"NSObject<OS_dispatch_queue>",&,N,V_authTokenCallbackQueue
T@"NSString",C,N,V_lastFailedCloudKitAuthToken
T@"NSString",C,N,V_lastFailediCloudAuthToken
T@"NSPersonNameComponents",R,N
T@"ACAccountStore",R,N,V_accountStore
whitespaceAndNewlineCharacterSet
requestID
sequenceNumber
setSequenceNumber:
logTraffic
shouldLog
setTimestamp:
setUrl:
setMethod:
setRequestClassName:
caseInsensitiveCompare:
_logObject:ofType:
setStatus:
setRequestID:
_sequenceNumber
_requestID
Tq,N,V_sequenceNumber
T@"NSString",&,N,V_requestID
setOplockFailure:
setUniqueFieldFailure:
setMoveOplockFailure:
setHasType:
typeAsString:
StringAsType:
_moveOplockFailure
_oplockFailure
_type
_uniqueFieldFailure
Ti,N,V_type
hasOplockFailure
oplockFailure
T@"CKDPOplockFailure",&,N
hasUniqueFieldFailure
uniqueFieldFailure
T@"CKDPUniqueFieldFailure",&,N
hasMoveOplockFailure
moveOplockFailure
T@"CKDPMoveOplockFailure",&,N
createBoundInputStream:outputStream:bufferSize:
close
_tearDownOutputStream
setHaveFinishedStreaming:
bufferSize
haveFinishedCompression
setHaveFinishedCompression:
appendBytes:length:
shouldCompress
_compressBodyData:shouldFlush:
_streamNextObject:
write:maxLength:
appendData:
_dataForMessage:
logRequestObjectBlock
_prepareObjectForStreaming:
_writeDataToStream:
haveFinishedStreaming
_finishStreaming:
streamError
stream:handleEvent:
setShouldCompress:
setBufferSize:
binaryLogFileHandle
setBinaryLogFileHandle:
hasInitedCompression
setHasInitedCompression:
_allObjects
_curData
_curDataPos
_inputStream
_outputStream
_zlibStream
_haveFlushedZlib
_dispatchQueue
_shouldCompress
_hasInitedCompression
_haveFinishedCompression
_haveFinishedStreaming
_bufferSize
_logRequestObjectBlock
_binaryLogFileHandle
TB,N,V_shouldCompress
TB,N,V_hasInitedCompression
TB,N,V_haveFinishedCompression
TB,V_haveFinishedStreaming
TQ,N,V_bufferSize
T@?,C,N,V_logRequestObjectBlock
T@"NSFileHandle",&,N,V_binaryLogFileHandle
parseQueue
parserData
setParserData:
propertyListWithData:options:format:error:
setParserError:
objectParsedBlock
testRepeatedParseResults
parserError
setIsReaderReadFrom:
readBytesOfInMemoryAssetContentWithContainer:offset:length:error:
getBytes:length:
setAssetId:
setSaveAssetRequest:
setSaveAssetResponse:
setRetrieveAssetResponse:
hasAssetId
hasSaveAssetRequest
hasSaveAssetResponse
hasRetrieveAssetResponse
assetId
saveAssetRequest
saveAssetResponse
retrieveAssetResponse
_assetId
_retrieveAssetResponse
_saveAssetRequest
_saveAssetResponse
T@"CKDPStreamingAssetIdentifier",&,N,V_assetId
T@"CKDPStreamingAssetSaveAssetRequest",&,N,V_saveAssetRequest
T@"CKDPStreamingAssetSaveAssetResponse",&,N,V_saveAssetResponse
T@"CKDPStreamingAssetRetrieveAssetResponse",&,N,V_retrieveAssetResponse
setTargetZone:
setCurrentServerContinuationToken:
setClientChangeToken:
setZonePcsModificationTime:
setZonePcsModificationDevice:
setExpirationTime:
hasTargetZone
hasCurrentServerContinuationToken
hasClientChangeToken
setDeviceCount:
setHasDeviceCount:
hasDeviceCount
setAssetQuotaUsage:
setHasAssetQuotaUsage:
hasAssetQuotaUsage
setMetadataQuotaUsage:
setHasMetadataQuotaUsage:
hasMetadataQuotaUsage
hasCapabilities
setZoneishPcsNeedsRolled:
setHasZoneishPcsNeedsRolled:
hasZoneishPcsNeedsRolled
setZoneKeyRollAllowed:
setHasZoneKeyRollAllowed:
hasZoneKeyRollAllowed
hasZonePcsModificationTime
hasZonePcsModificationDevice
setHasExpired:
hasExpired
hasExpirationTime
targetZone
currentServerContinuationToken
clientChangeToken
deviceCount
assetQuotaUsage
metadataQuotaUsage
capabilities
zoneishPcsNeedsRolled
zoneKeyRollAllowed
zonePcsModificationTime
zonePcsModificationDevice
expired
expirationTime
_assetQuotaUsage
_metadataQuotaUsage
_capabilities
_clientChangeToken
_currentServerContinuationToken
_deviceCount
_expirationTime
_targetZone
_zonePcsModificationDevice
_zonePcsModificationTime
_expired
_zoneKeyRollAllowed
_zoneishPcsNeedsRolled
T@"CKDPZone",&,N,V_targetZone
T@"NSData",&,N,V_currentServerContinuationToken
T@"NSData",&,N,V_clientChangeToken
Ti,N,V_deviceCount
Tq,N,V_assetQuotaUsage
Tq,N,V_metadataQuotaUsage
T@"CKDPZoneCapabilities",&,N,V_capabilities
TB,N,V_zoneishPcsNeedsRolled
TB,N,V_zoneKeyRollAllowed
T@"CKDPDate",&,N,V_zonePcsModificationTime
T@"NSString",&,N,V_zonePcsModificationDevice
TB,N,V_expired
T@"CKDPDate",&,N,V_expirationTime
addSortedBy:
setAlias:
sortedBysCount
clearSortedBys
sortedByAtIndex:
setOBSOLETEPcsServiceType:
sortedByType
hasAlias
hasOBSOLETEPcsServiceType
publicKeyRequested
setPublicKeyRequested:
setHasPublicKeyRequested:
hasPublicKeyRequested
alias
sortedBys
setSortedBys:
oBSOLETEPcsServiceType
_alias
_oBSOLETEPcsServiceType
_sortedBys
_publicKeyRequested
T@"CKDPUserAlias",&,N,V_alias
T@"NSMutableArray",&,N,V_sortedBys
T@"NSString",&,N,V_oBSOLETEPcsServiceType
TB,N,V_publicKeyRequested
initWithCacheDir:
remove
CK_isCKSQLiteError
sqliteCode
databaseIsCorrupt
cacheDirectory
dbFileName
stringByAppendingPathComponent:
initOrExitWithPath:isSharedCache:
URLByAppendingPathComponent:isDirectory:
cacheDatabaseSchema
initWithPath:schema:
sharedCache
initWithDeviceContext:
T@"CKDLogicalDeviceContext",W,N,V_deviceContext
storageGroupingPolicy
uploadRank
compareToRecordID:
CKSortedForUpload
assetsToUpload
setAssetsToUpload:
assetUUIDToExpectedProperties
setAssetUUIDToExpectedProperties:
packageUUIDToExpectedProperties
setPackageUUIDToExpectedProperties:
temporary
setTemporary:
_temporary
_assetsToUpload
_assetUUIDToExpectedProperties
_packageUUIDToExpectedProperties
T@"NSArray",&,N,V_assetsToUpload
T@"NSDictionary",&,N,V_assetUUIDToExpectedProperties
T@"NSDictionary",&,N,V_packageUUIDToExpectedProperties
TB,N,V_temporary
_fetchConfiguration
_prepareForUpload
_fetchUploadTokens
_upload
openedPackages
setOpenedPackages:
uploadPreparationBlock
uploadProgressBlock
uploaded
uploadCompletionBlock
getMaxChunkCountForSection
itemEnumerator
setTrackingUUID:
fileID
setFileID:
generationID
setGenerationID:
itemTypeHint
setItemTypeHint:
registerItemGroupSet:operation:options:completionHandler:
chunkCount
dataByFinishingSignature
initWithIndex:signature:size:
addSection:
updateWithData:
updateItemAtIndex:withSignature:size:itemID:sectionIndex:
_didUploadAsset:error:
_didUploadMMCSItems:error:
isPackageSectionBatch
uploadTasksByPackages
isRereferencedAssetUpload
setUploaded:
setupForGetChunkKeysWithAsset:destinationDatabaseScope:
shouldReadAssetContentUsingClientProxy
getFileSizeWithOperation:error:
_openPackage:
_planSectionsForPackage:error:
setShouldReadRawEncryptedData:
setAssetKey:
writePackage:toFile:error:
setMMCSManifestItem:
setPackageManifests:
setMMCSSectionItems:
setIsCrossOwner:
_didGetChunkKeysForAssetBatch:error:
getChunkKeysItemGroupSet:operation:options:completionHandler:
_didPrepareAssetBatch:error:
_failAllItemsInAssetBatch:error:
atomic
_didFetchUploadTokensForAssetTokenRequest:error:newError:
_didUploadMMCSSectionItem:task:error:
MMCSSectionItems
itemEnumeratorForSectionAtIndex:
setPutPackageSectionIdentifier:
_didUploadMMCSSectionItems:task:error:
putSectionItem:operation:options:progress:completionHandler:
_uploadPackageSectionsWithEnumerator:task:completionBlock:
_uploadPackageSection:task:completionBlock:
_closePackage:
maxPackageUploadsPerBatch
_uploadPackageSectionsWithPendingTasks:uploadingTasks:completedTasks:
_uploadPackageSectionsWithTask:completionBlock:
uploadReceiptExpiration
setUploadReceiptExpiration:
_didUploadMMCSItem:error:
MMCSManifestItem
_initBare
setRecordKey:
maxPackageUploadsPerBatchWithDefaultValue:
setMaxPackageUploadsPerBatch:
_didUploadPackageWithTask:
_didMakeProgressForMMCSItem:
putItemGroupSet:operation:options:progress:completionHandler:
_didPutChunkKeysForAssetBatch:error:
putChunkKeysItemGroupSet:operation:options:completionHandler:
packageManifests
stopTrackingAssetHandlesByItemIDs:
_closeAllPackages
_removePackageManifests
setUploadPreparationBlock:
setUploadProgressBlock:
_fetchAssetRereferenceRecords
setAtomic:
setUploadTasksByPackages:
assetRequestPlanner
setAssetRequestPlanner:
_atomic
_uploadPreparationBlock
_uploadProgressBlock
_uploadCompletionBlock
_uploadTasksByPackages
_packageManifests
_openedPackages
_maxPackageUploadsPerBatch
_assetRequestPlanner
T@"NSMapTable",&,N,V_uploadTasksByPackages
T@"NSMutableArray",&,N,V_packageManifests
T@"NSMutableArray",&,N,V_openedPackages
TQ,N,V_maxPackageUploadsPerBatch
T@"CKDAssetRequestPlanner",&,N,V_assetRequestPlanner
T@?,C,N,V_uploadPreparationBlock
T@?,C,N,V_uploadProgressBlock
T@?,C,N,V_uploadCompletionBlock
TB,N,V_atomic
setTimeStatistics:
setServerFields:
hasEtag
hasTimeStatistics
hasServerFields
timeStatistics
serverFields
_serverFields
_timeStatistics
T@"CKDPDateStatistics",&,N,V_timeStatistics
T@"CKDPRecord",&,N,V_serverFields
setBounds:
hasBounds
bounds
_bounds
T@"CKDPLocationBound",&,N,V_bounds
setCriteria:
setRateLimit:
hasLabel
hasCriteria
hasRateLimit
setTtlSec:
setHasTtlSec:
hasTtlSec
criteria
rateLimit
ttlSec
_criteria
_label
_rateLimit
_ttlSec
T@"NSString",&,N,V_label
T@"CKDPThrottlingConfigCriteria",&,N,V_criteria
T@"CKDPThrottlingConfigRateLimit",&,N,V_rateLimit
Ti,N,V_ttlSec
setSuccess:
setHasSuccess:
hasSuccess
success
_success
TB,N,V_success
recordIDs
fileNamesByAssetFieldNames
requestedTTL
URLOptions
_fetchPCSForRecords
assetPublishedBlock
hasAllowOnDeviceAssetStreamingEntitlement
setExposeAssetKey:
fetchedRecordsByID
_dispatchAssetURLsForRecord:recordID:pcs:error:
setAssetFieldNamesToPublishURLs:
setRequestedTTL:
setURLOptions:
setFetchRecordsOperation:
fetchRecordsOperation
setFileNamesByAssetFieldNames:
setFetchedRecordsByID:
_assetPublishedBlock
_recordIDs
_fileNamesByAssetFieldNames
_requestedTTL
_URLOptions
_fetchRecordsOperation
_fetchedRecordsByID
T@"NSArray",&,N,V_recordIDs
T@"NSDictionary",&,N,V_fileNamesByAssetFieldNames
TQ,N,V_requestedTTL
TQ,N,V_URLOptions
T@"NSOperation",&,V_fetchRecordsOperation
T@"NSMutableDictionary",&,N,V_fetchedRecordsByID
T@?,C,N,V_assetPublishedBlock
T@"<CKPublishAssetsOperationCallbacks>",&,D,N
addFieldsToDeleteIfExistOnMerge:
addConflictLosersToResolve:
fieldsToDeleteIfExistOnMergesCount
clearFieldsToDeleteIfExistOnMerges
fieldsToDeleteIfExistOnMergeAtIndex:
setConflictLoserUpdate:
setRecordProtectionInfoTag:
conflictLosersToResolvesCount
clearConflictLosersToResolves
conflictLosersToResolveAtIndex:
setShareEtag:
setShareIDUpdate:
setParentChainProtectionInfoTag:
fieldsToDeleteIfExistOnMergeType
conflictLosersToResolveType
hasConflictLoserUpdate
saveSemantics
setSaveSemantics:
setHasSaveSemantics:
hasSaveSemantics
saveSemanticsAsString:
StringAsSaveSemantics:
hasRecordProtectionInfoTag
hasShareEtag
hasShareIDUpdate
hasParentChainProtectionInfoTag
fieldsToDeleteIfExistOnMerges
setFieldsToDeleteIfExistOnMerges:
conflictLoserUpdate
recordProtectionInfoTag
conflictLosersToResolves
setConflictLosersToResolves:
shareEtag
shareIDUpdate
parentChainProtectionInfoTag
_conflictLoserUpdate
_conflictLosersToResolves
_fieldsToDeleteIfExistOnMerges
_parentChainProtectionInfoTag
_recordProtectionInfoTag
_saveSemantics
_shareEtag
_shareIDUpdate
T@"NSMutableArray",&,N,V_fieldsToDeleteIfExistOnMerges
T@"CKDPRecordSaveRequestConflictLoserUpdate",&,N,V_conflictLoserUpdate
Ti,N,V_saveSemantics
T@"NSString",&,N,V_recordProtectionInfoTag
T@"NSMutableArray",&,N,V_conflictLosersToResolves
T@"NSString",&,N,V_shareEtag
T@"CKDPRecordSaveRequestShareIdUpdate",&,N,V_shareIDUpdate
T@"NSString",&,N,V_parentChainProtectionInfoTag
encryptedAnonymousSharesToRemove
setEncryptedAnonymousSharesToRemove:
anonymousShareRemovedBlock
setAnonymousShareRemovedBlock:
_encryptedAnonymousSharesToRemove
_anonymousShareRemovedBlock
T@"NSDictionary",&,N,V_encryptedAnonymousSharesToRemove
T@?,C,N,V_anonymousShareRemovedBlock
_removeAnonymousShareFromSharedDB
initWithOperation:encryptedAnonymousSharesToRemove:
fetchMergeableDeltas
fetchMergeableDeltasRecursivelyForValueIDs:continuationTokens:completionHandler:
initWithOperation:mergeableValueIDs:previousContinuationTokens:
handleMergeableDeltasFetchedForValueID:fetchedDeltas:result:
CKContains:
deltasFetchedBlock
_deltasFetchedBlock
T@"<CKFetchMergeableDeltasOperationCallbacks>",&,D,N
T@?,C,N,V_deltasFetchedBlock
_refreshHostname
willChangeValueForKey:
maximumLengthOfBytesUsingEncoding:
didChangeValueForKey:
_cachedHostname
_hostCallbackQueue
_hostNotificationToken
addServiceIdentityKeyIDs:
addSupplementalZoneInfos:
setUserToken:
setUserIDContainerID:
serviceIdentityKeyIDsCount
clearServiceIdentityKeyIDs
serviceIdentityKeyIDsAtIndex:
activeThrottlingLabelsCount
clearActiveThrottlingLabels
activeThrottlingLabelAtIndex:
supplementalZoneInfosCount
clearSupplementalZoneInfos
supplementalZoneInfosAtIndex:
serviceIdentityKeyIDsType
activeThrottlingLabelType
supplementalZoneInfosType
hasUserToken
hasApplicationBundle
hasApplicationVersion
setApplicationConfigVersion:
setHasApplicationConfigVersion:
hasApplicationConfigVersion
setGlobalConfigVersion:
setHasGlobalConfigVersion:
hasGlobalConfigVersion
hasDeviceIdentifier
hasDeviceSoftwareVersion
hasDeviceHardwareVersion
hasDeviceLibraryName
hasDeviceLibraryVersion
setDeviceProtocolVersion:
setHasDeviceProtocolVersion:
hasDeviceProtocolVersion
hasLocale
hasMmcsProtocolVersion
hasDeviceAssignedName
hasDeviceHardwareID
targetDatabase
setHasTargetDatabase:
hasTargetDatabase
targetDatabaseAsString:
StringAsTargetDatabase:
hasUserIDContainerID
setHasIsolationLevel:
hasIsolationLevel
isolationLevelAsString:
StringAsIsolationLevel:
hasOperationGroupName
setHasOperationGroupQuantity:
hasOperationGroupQuantity
setHasDeviceSoftwareIsAppleInternal:
hasDeviceSoftwareIsAppleInternal
hasAssetAuthorizeGetRequestOptions
hasDeviceUDID
hasDeviceSerialNumber
setHasEntitlementsValidated:
hasEntitlementsValidated
setHasRequestOriginator:
hasRequestOriginator
requestOriginatorAsString:
StringAsRequestOriginator:
userToken
applicationBundle
applicationConfigVersion
globalConfigVersion
deviceSoftwareVersion
deviceHardwareVersion
deviceLibraryName
deviceLibraryVersion
deviceProtocolVersion
mmcsProtocolVersion
deviceAssignedName
deviceHardwareID
userIDContainerID
serviceIdentityKeyIDs
setServiceIdentityKeyIDs:
deviceSoftwareIsAppleInternal
activeThrottlingLabels
setActiveThrottlingLabels:
deviceUDID
deviceSerialNumber
entitlementsValidated
supplementalZoneInfos
setSupplementalZoneInfos:
_applicationConfigVersion
_deviceProtocolVersion
_globalConfigVersion
_operationGroupQuantity
_activeThrottlingLabels
_applicationBundle
_assetAuthorizeGetRequestOptions
_deviceAssignedName
_deviceHardwareID
_deviceHardwareVersion
_deviceIdentifier
_deviceLibraryName
_deviceLibraryVersion
_deviceSerialNumber
_deviceSoftwareVersion
_deviceUDID
_isolationLevel
_locale
_mmcsProtocolVersion
_operationGroupName
_serviceIdentityKeyIDs
_supplementalZoneInfos
_targetDatabase
_userIDContainerID
_userToken
_deviceSoftwareIsAppleInternal
_entitlementsValidated
T@"NSString",&,N,V_userToken
T@"NSString",&,N,V_applicationBundle
T@"NSString",&,N,V_applicationVersion
TQ,N,V_applicationConfigVersion
TQ,N,V_globalConfigVersion
T@"CKDPIdentifier",&,N,V_deviceIdentifier
T@"NSString",&,N,V_deviceSoftwareVersion
T@"NSString",&,N,V_deviceHardwareVersion
T@"NSString",&,N,V_deviceLibraryName
T@"NSString",&,N,V_deviceLibraryVersion
TQ,N,V_deviceProtocolVersion
T@"CKDPLocale",&,N,V_locale
T@"NSString",&,N,V_mmcsProtocolVersion
T@"NSString",&,N,V_deviceAssignedName
T@"NSString",&,N,V_deviceHardwareID
Ti,N,V_targetDatabase
T@"NSString",&,N,V_userIDContainerID
Ti,N,V_isolationLevel
T@"NSString",&,N,V_operationGroupName
TQ,N,V_operationGroupQuantity
T@"NSMutableArray",&,N,V_serviceIdentityKeyIDs
TB,N,V_deviceSoftwareIsAppleInternal
T@"CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptions",&,N,V_assetAuthorizeGetRequestOptions
T@"NSMutableArray",&,N,V_activeThrottlingLabels
T@"NSString",&,N,V_deviceUDID
T@"NSString",&,N,V_deviceSerialNumber
TB,N,V_entitlementsValidated
Ti,N,V_requestOriginator
T@"NSMutableArray",&,N,V_supplementalZoneInfos
addAssetFields:
assetFieldsCount
clearAssetFields
assetFieldsAtIndex:
assetFieldsType
hasRecordId
_assetFields
_recordId
T@"CKDPRecordIdentifier",&,N,V_recordId
T@"CKDPRecordType",&,N,V_type
T@"NSMutableArray",&,N,V_assetFields
setResult:
setZoneSaveResponse:
setZoneRetrieveResponse:
setZoneDeleteResponse:
setZoneRetrieveChangesResponse:
setRecordSaveResponse:
setRecordRetrieveResponse:
setRecordRetrieveVersionsResponse:
setRecordRetrieveChangesResponse:
setRecordDeleteResponse:
setRecordResolveTokenResponse:
setFetchArchivedRecordsResponse:
setRecordMoveResponse:
setQueryRetrieveResponse:
setMergeableDeltaSaveResponse:
setMergeableDeltaMetadataRetrieveResponse:
setMergeableDeltaReplaceResponse:
setMergeableDeltaRetrieveResponse:
setAssetUploadTokenRetrieveResponse:
setDeleteContainerResponse:
setUserAvailableQuotaResponse:
setBundlesForContainerResponse:
setWebAuthTokenRetrieveResponse:
setUpdateMissingAssetStatusResponse:
setAnonymousShareAddResponse:
setAnonymousShareRemoveResponse:
setSubscriptionCreateResponse:
setSubscriptionRetrieveResponse:
setSubscriptionDeleteResponse:
setUserRetrieveResponse:
setUserQueryResponse:
setUserPrivacySettingsRetrieveResponse:
setUserPrivacySettingsUpdateResponse:
setUserPrivacySettingsResetResponse:
setUserPrivacySettingsBatchLookupResponse:
setShareAcceptResponse:
setShareVettingInitiateResponse:
setTokenRegistrationResponse:
setTokenUnregistrationResponse:
setSetBadgeCountResponse:
setNotificationSyncResponse:
setNotificationMarkReadResponse:
setArchiveRecordsResponse:
setMarkAssetBrokenResponse:
setFunctionInvokeResponse:
hasResponse
hasHeader
_anonymousShareAddResponse
_anonymousShareRemoveResponse
_archiveRecordsResponse
_assetUploadTokenRetrieveResponse
_bundlesForContainerResponse
_deleteContainerResponse
_fetchArchivedRecordsResponse
_functionInvokeResponse
_header
_markAssetBrokenResponse
_mergeableDeltaMetadataRetrieveResponse
_mergeableDeltaReplaceResponse
_mergeableDeltaRetrieveResponse
_mergeableDeltaSaveResponse
_notificationMarkReadResponse
_notificationSyncResponse
_queryRetrieveResponse
_recordDeleteResponse
_recordMoveResponse
_recordResolveTokenResponse
_recordRetrieveChangesResponse
_recordRetrieveResponse
_recordRetrieveVersionsResponse
_recordSaveResponse
_result
_setBadgeCountResponse
_shareAcceptResponse
_shareVettingInitiateResponse
_subscriptionCreateResponse
_subscriptionDeleteResponse
_subscriptionRetrieveResponse
_tokenRegistrationResponse
_tokenUnregistrationResponse
_updateMissingAssetStatusResponse
_userAvailableQuotaResponse
_userPrivacySettingsBatchLookupResponse
_userPrivacySettingsResetResponse
_userPrivacySettingsRetrieveResponse
_userPrivacySettingsUpdateResponse
_userQueryResponse
_userRetrieveResponse
_webAuthTokenRetrieveResponse
_zoneDeleteResponse
_zoneRetrieveChangesResponse
_zoneRetrieveResponse
_zoneSaveResponse
T@"CKDPOperation",&,N,V_response
T@"CKDPResponseOperationResult",&,N,V_result
T@"CKDPResponseOperationHeader",&,N,V_header
hasFunctionInvokeResponse
functionInvokeResponse
T@"CKDPCodeFunctionInvokeResponse",&,N
mergeableDeltaSaveResponse
hasMergeableDeltaMetadataRetrieveResponse
mergeableDeltaMetadataRetrieveResponse
mergeableDeltaReplaceResponse
hasMergeableDeltaRetrieveResponse
mergeableDeltaRetrieveResponse
T@"CKDPMergeableDeltaSaveResponse",&,N
T@"CKDPMergeableDeltaMetadataRetrieveResponse",&,N
T@"CKDPMergeableDeltaReplaceResponse",&,N
T@"CKDPMergeableDeltaRetrieveResponse",&,N
T@"CKDPShareVettingInitiateResponse",&,N
hasZoneSaveResponse
zoneSaveResponse
T@"CKDPZoneSaveResponse",&,N
hasZoneRetrieveResponse
zoneRetrieveResponse
T@"CKDPZoneRetrieveResponse",&,N
hasZoneDeleteResponse
zoneDeleteResponse
T@"CKDPZoneDeleteResponse",&,N
hasZoneRetrieveChangesResponse
zoneRetrieveChangesResponse
T@"CKDPZoneRetrieveChangesResponse",&,N
hasRecordSaveResponse
recordSaveResponse
T@"CKDPRecordSaveResponse",&,N
hasRecordRetrieveResponse
recordRetrieveResponse
T@"CKDPRecordRetrieveResponse",&,N
hasRecordRetrieveVersionsResponse
recordRetrieveVersionsResponse
T@"CKDPRecordRetrieveVersionsResponse",&,N
hasRecordRetrieveChangesResponse
recordRetrieveChangesResponse
T@"CKDPRecordRetrieveChangesResponse",&,N
hasRecordDeleteResponse
recordDeleteResponse
T@"CKDPRecordDeleteResponse",&,N
T@"CKDPRecordResolveTokenResponse",&,N
hasRecordMoveResponse
recordMoveResponse
T@"CKDPRecordMoveResponse",&,N
hasFetchArchivedRecordsResponse
fetchArchivedRecordsResponse
T@"CKDPFetchArchivedRecordsResponse",&,N
hasUserAvailableQuotaResponse
userAvailableQuotaResponse
T@"CKDPUserAvailableQuotaResponse",&,N
hasUserRetrieveResponse
userRetrieveResponse
T@"CKDPUserRetrieveResponse",&,N
T@"CKDPQueryRetrieveResponse",&,N
T@"CKDPAssetUploadTokenRetrieveResponse",&,N
hasDeleteContainerResponse
deleteContainerResponse
T@"CKDPDeleteContainerResponse",&,N
T@"CKDPBundlesForContainerResponse",&,N
hasWebAuthTokenRetrieveResponse
webAuthTokenRetrieveResponse
T@"CKDPWebAuthTokenRetrieveResponse",&,N
hasUpdateMissingAssetStatusResponse
updateMissingAssetStatusResponse
T@"CKDPUpdateMissingAssetStatusResponse",&,N
hasShareAcceptResponse
shareAcceptResponse
T@"CKDPShareAcceptResponse",&,N
hasAnonymousShareAddResponse
anonymousShareAddResponse
T@"CKDPAnonymousShareAddResponse",&,N
hasAnonymousShareRemoveResponse
anonymousShareRemoveResponse
T@"CKDPAnonymousShareRemoveResponse",&,N
hasSubscriptionCreateResponse
subscriptionCreateResponse
T@"CKDPSubscriptionCreateResponse",&,N
hasSubscriptionRetrieveResponse
subscriptionRetrieveResponse
T@"CKDPSubscriptionRetrieveResponse",&,N
hasSubscriptionDeleteResponse
subscriptionDeleteResponse
T@"CKDPSubscriptionDeleteResponse",&,N
hasArchiveRecordsResponse
archiveRecordsResponse
T@"CKDPArchiveRecordsResponse",&,N
hasMarkAssetBrokenResponse
markAssetBrokenResponse
T@"CKDPMarkAssetBrokenResponse",&,N
hasUserQueryResponse
userQueryResponse
T@"CKDPUserQueryResponse",&,N
hasUserPrivacySettingsUpdateResponse
userPrivacySettingsUpdateResponse
T@"CKDPUserPrivacySettingsUpdateResponse",&,N
hasUserPrivacySettingsResetResponse
userPrivacySettingsResetResponse
T@"CKDPUserPrivacySettingsResetResponse",&,N
hasUserPrivacySettingsBatchLookupResponse
userPrivacySettingsBatchLookupResponse
T@"CKDPUserPrivacySettingsBatchLookupResponse",&,N
hasUserPrivacySettingsRetrieveResponse
userPrivacySettingsRetrieveResponse
T@"CKDPUserPrivacySettingsRetrieveResponse",&,N
hasTokenRegistrationResponse
tokenRegistrationResponse
T@"CKDPTokenRegistrationResponse",&,N
hasTokenUnregistrationResponse
tokenUnregistrationResponse
T@"CKDPTokenUnregistrationResponse",&,N
hasSetBadgeCountResponse
setBadgeCountResponse
T@"CKDPSetBadgeCountResponse",&,N
hasNotificationSyncResponse
notificationSyncResponse
T@"CKDPNotificationSyncResponse",&,N
hasNotificationMarkReadResponse
notificationMarkReadResponse
T@"CKDPNotificationMarkReadResponse",&,N
addRecordVersions:
recordVersionsCount
clearRecordVersions
recordVersionsAtIndex:
recordVersionsType
setIsDeleted:
setHasIsDeleted:
hasIsDeleted
isDeleted
recordVersions
setRecordVersions:
_recordVersions
_isDeleted
TB,N,V_isDeleted
T@"NSMutableArray",&,N,V_recordVersions
setRequestSignature:
setSynchronousMode:
setHasSynchronousMode:
hasSynchronousMode
setHasLast:
hasLast
hasRequestSignature
hasAnonymousCKUserID
synchronousMode
last
requestSignature
_anonymousCKUserID
_operationUUID
_requestSignature
_last
_synchronousMode
T@"NSString",&,N,V_operationUUID
TB,N,V_synchronousMode
TB,N,V_last
T@"NSData",&,N,V_requestSignature
T@"CKDPIdentifier",&,N,V_anonymousCKUserID
messageClass
curObjectLength
setCurObjectLength:
initWithBytesNoCopy:length:freeWhenDone:
_parseObjectFromData:rawData:
setTailParserData:
isParsing
setIsParsing:
tailParserData
_parseObjects:
_parsingStandaloneMessage
_isParsing
_messageClass
_tailParserData
_curObjectLength
T@"NSMutableData",&,N,V_tailParserData
TQ,N,V_curObjectLength
TB,N,V_isParsing
T#,&,N,V_messageClass
TB,N,V_parsingStandaloneMessage
subscriptionsToSave
subscriptionIDsToDelete
subscriptionID
_handleSubscriptionSaved:error:
subscriptionsByServerID
pSubscriptionFromSubscription:error:
setSubscriptionsToSave:
notificationInfo
subscriptionType
initWithOperation:subscriptionsToSave:subscriptionIDsToDelete:
_handleSubscriptionSaved:responseCode:
_handleSubscriptionDeleted:responseCode:
setSubscriptionModifiedBlock:
setSubscriptionIDsToDelete:
setSubscriptionsByServerID:
_hasSubscriptionsToSave
_hasSubscriptionsToDelete
_subscriptionsToSave
_subscriptionIDsToDelete
_subscriptionsByServerID
T@"NSArray",&,N,V_subscriptionsToSave
T@"NSArray",&,N,V_subscriptionIDsToDelete
T@"NSMutableDictionary",&,N,V_subscriptionsByServerID
T@"<CKModifySubscriptionsOperationCallbacks>",&,D,N
T@"CKDPIdentifier",&,N,V_value
contentRequestHeadersCount
clearContentRequestHeaders
contentRequestHeadersAtIndex:
contentRequestHeadersType
setHasContentRequestAuthorizeGetOptions:
hasContentRequestAuthorizeGetOptions
contentRequestAuthorizeGetOptions
_contentRequestAuthorizeGetOptions
_contentRequestHeaders
T@"NSMutableArray",&,N,V_contentRequestHeaders
TQ,N,V_contentRequestAuthorizeGetOptions
setMinimumVersionEtag:
hasMinimumVersionEtag
minimumVersionEtag
_minimumVersionEtag
T@"NSString",&,N,V_minimumVersionEtag
moveChanges
CKMapToDictionary:
moveChangesByDestinationRecordID
moveHandlerWithMoveChange:operation:
moveCallbackWithMetadata:error:
moveChange
sourceRecordID
saveCompletionBlockCalled
serverDestinationRecord
streamingAssetRequestOptions
setStreamingAssetRequestOptions:
moveCompletionBlock
saveProgressBlock
serverMoveMarkerRecord
didAttemptZoneWideShareKeyRoll
recordsUploaded
setRecordsUploaded:
assetsUploaded
setAssetsUploaded:
assetsUploadedFileSize
setAssetsUploadedFileSize:
setSaveCompletionBlockCalled:
initWithOperation:moveChanges:sourceDatabaseScope:atomic:
handlersByRecordID
_handleRecordMoved:handler:responseCode:recordForOplockFailure:destinationServerRecord:moveMarkerServerRecord:
setRecordPostedBlock:
hasPropertiesRequiringEncryption
recordDecryptOperation
decryptRecord:withCompletion:
_reallyHandleRecordMoved:handler:responseCode:recordForOplockFailure:destinationServerRecord:moveMarkerServerRecord:
setServerDestinationRecord:
setServerMoveMarkerRecord:
setKnownToServer:
savePCSDataToCache
retryPCSFailures
clearProtectionDataForRecord
modifyHandlersByZoneID
setZoneProtectionEtag:
setPCSData:forFetchedRecordID:
copyWithOriginalValues
hasMovedRecordDestinationIdentifier
movedRecordDestinationIdentifier
handlerForSaveWithRecord:
handlerForDeleteWithRecordID:
callbackWithMetadata:error:
_createModifyRequestWithRecordsToSave:recordsToDelete:recordsToDeleteToEtags:recordIDsToDeleteToSigningPCSIdentity:handlersByRecordID:sendMergeableDeltas:
setMoveChangesByDestinationRecordID:
_moveCompletionBlock
_moveChangesByDestinationRecordID
T@"NSDictionary",C,N,V_moveChangesByDestinationRecordID
T@"CKRecordZoneID",C,N,V_sourceZoneID
T@"<CKMovePhotosOperationCallbacks>",&,D,N
T@?,C,N,V_moveCompletionBlock
hasAssetFields
setHasRequestedTTL:
hasRequestedTTL
T@"CKDPRequestedFields",&,N,V_assetFields
Tq,N,V_requestedTTL
setAppQuote:
setAqeQuote:
setPckCertificate:
setRoutingToken:
hasAppQuote
hasAqeQuote
hasPckCertificate
hasRoutingToken
appQuote
aqeQuote
pckCertificate
routingToken
_appQuote
_aqeQuote
_pckCertificate
_routingToken
T@"NSData",&,N,V_appQuote
T@"NSData",&,N,V_aqeQuote
T@"NSString",&,N,V_pckCertificate
T@"NSData",&,N,V_routingToken
addBundleID:
bundleIDsCount
clearBundleIDs
bundleIDAtIndex:
bundleIDType
T@"NSMutableArray",&,N,V_bundleIDs
setZoneSaveRequest:
setZoneRetrieveRequest:
setZoneDeleteRequest:
setZoneRetrieveChangesRequest:
setRecordSaveRequest:
setRecordRetrieveRequest:
setRecordRetrieveVersionsRequest:
setRecordRetrieveChangesRequest:
setRecordDeleteRequest:
setFetchArchivedRecordsRequest:
setRecordMoveRequest:
setMergeableDeltaMetadataRetrieveRequest:
setMergeableDeltaReplaceRequest:
setMergeableDeltaRetrieveRequest:
setDeleteContainerRequest:
setUserAvailableQuotaRequest:
setWebAuthTokenRetrieveRequest:
setUpdateMissingAssetStatusRequest:
setAnonymousShareAddRequest:
setAnonymousShareRemoveRequest:
setSubscriptionCreateRequest:
setSubscriptionRetrieveRequest:
setSubscriptionDeleteRequest:
setUserRetrieveRequest:
setUserQueryRequest:
setUserPrivacySettingsRetrieveRequest:
setUserPrivacySettingsUpdateRequest:
setUserPrivacySettingsResetRequest:
setUserPrivacySettingsBatchLookupRequest:
setShareAcceptRequest:
setTokenRegistrationRequest:
setTokenUnregistrationRequest:
setSetBadgeCountRequest:
setNotificationSyncRequest:
setNotificationMarkReadRequest:
setArchiveRecordsRequest:
setMarkAssetBrokenRequest:
setFunctionInvokeRequest:
hasRequest
_anonymousShareAddRequest
_anonymousShareRemoveRequest
_archiveRecordsRequest
_assetUploadTokenRetrieveRequest
_bundlesForContainerRequest
_deleteContainerRequest
_fetchArchivedRecordsRequest
_functionInvokeRequest
_markAssetBrokenRequest
_mergeableDeltaMetadataRetrieveRequest
_mergeableDeltaReplaceRequest
_mergeableDeltaRetrieveRequest
_mergeableDeltaSaveRequest
_notificationMarkReadRequest
_notificationSyncRequest
_queryRetrieveRequest
_recordDeleteRequest
_recordMoveRequest
_recordResolveTokenRequest
_recordRetrieveChangesRequest
_recordRetrieveRequest
_recordRetrieveVersionsRequest
_recordSaveRequest
_setBadgeCountRequest
_shareAcceptRequest
_shareVettingInitiateRequest
_subscriptionCreateRequest
_subscriptionDeleteRequest
_subscriptionRetrieveRequest
_tokenRegistrationRequest
_tokenUnregistrationRequest
_updateMissingAssetStatusRequest
_userAvailableQuotaRequest
_userPrivacySettingsBatchLookupRequest
_userPrivacySettingsResetRequest
_userPrivacySettingsRetrieveRequest
_userPrivacySettingsUpdateRequest
_userQueryRequest
_userRetrieveRequest
_webAuthTokenRetrieveRequest
_zoneDeleteRequest
_zoneRetrieveChangesRequest
_zoneRetrieveRequest
_zoneSaveRequest
T@"CKDPRequestOperationHeader",&,N,V_header
T@"CKDPOperation",&,N,V_request
hasFunctionInvokeRequest
functionInvokeRequest
T@"CKDPCodeFunctionInvokeRequest",&,N
hasMergeableDeltaSaveRequest
mergeableDeltaSaveRequest
hasMergeableDeltaMetadataRetrieveRequest
mergeableDeltaMetadataRetrieveRequest
hasMergeableDeltaReplaceRequest
mergeableDeltaReplaceRequest
hasMergeableDeltaRetrieveRequest
mergeableDeltaRetrieveRequest
T@"CKDPMergeableDeltaSaveRequest",&,N
T@"CKDPMergeableDeltaMetadataRetrieveRequest",&,N
T@"CKDPMergeableDeltaReplaceRequest",&,N
T@"CKDPMergeableDeltaRetrieveRequest",&,N
hasShareVettingInitiateRequest
T@"CKDPShareVettingInitiateRequest",&,N
hasZoneSaveRequest
zoneSaveRequest
T@"CKDPZoneSaveRequest",&,N
hasZoneRetrieveRequest
zoneRetrieveRequest
T@"CKDPZoneRetrieveRequest",&,N
hasZoneDeleteRequest
zoneDeleteRequest
T@"CKDPZoneDeleteRequest",&,N
hasZoneRetrieveChangesRequest
zoneRetrieveChangesRequest
T@"CKDPZoneRetrieveChangesRequest",&,N
hasRecordSaveRequest
recordSaveRequest
T@"CKDPRecordSaveRequest",&,N
hasRecordRetrieveRequest
recordRetrieveRequest
T@"CKDPRecordRetrieveRequest",&,N
hasRecordRetrieveVersionsRequest
recordRetrieveVersionsRequest
T@"CKDPRecordRetrieveVersionsRequest",&,N
hasRecordRetrieveChangesRequest
recordRetrieveChangesRequest
T@"CKDPRecordRetrieveChangesRequest",&,N
hasRecordDeleteRequest
recordDeleteRequest
T@"CKDPRecordDeleteRequest",&,N
hasRecordResolveTokenRequest
T@"CKDPRecordResolveTokenRequest",&,N
hasRecordMoveRequest
recordMoveRequest
T@"CKDPRecordMoveRequest",&,N
hasFetchArchivedRecordsRequest
fetchArchivedRecordsRequest
T@"CKDPFetchArchivedRecordsRequest",&,N
hasUserAvailableQuotaRequest
userAvailableQuotaRequest
T@"CKDPUserAvailableQuotaRequest",&,N
hasUserRetrieveRequest
userRetrieveRequest
T@"CKDPUserRetrieveRequest",&,N
hasQueryRetrieveRequest
T@"CKDPQueryRetrieveRequest",&,N
hasAssetUploadTokenRetrieveRequest
T@"CKDPAssetUploadTokenRetrieveRequest",&,N
hasDeleteContainerRequest
deleteContainerRequest
T@"CKDPDeleteContainerRequest",&,N
hasBundlesForContainerRequest
bundlesForContainerRequest
T@"CKDPBundlesForContainerRequest",&,N
hasWebAuthTokenRetrieveRequest
webAuthTokenRetrieveRequest
T@"CKDPWebAuthTokenRetrieveRequest",&,N
hasUpdateMissingAssetStatusRequest
updateMissingAssetStatusRequest
T@"CKDPUpdateMissingAssetStatusRequest",&,N
hasShareAcceptRequest
shareAcceptRequest
T@"CKDPShareAcceptRequest",&,N
hasAnonymousShareAddRequest
anonymousShareAddRequest
T@"CKDPAnonymousShareAddRequest",&,N
hasAnonymousShareRemoveRequest
anonymousShareRemoveRequest
T@"CKDPAnonymousShareRemoveRequest",&,N
hasSubscriptionCreateRequest
subscriptionCreateRequest
T@"CKDPSubscriptionCreateRequest",&,N
hasSubscriptionRetrieveRequest
subscriptionRetrieveRequest
T@"CKDPSubscriptionRetrieveRequest",&,N
hasSubscriptionDeleteRequest
subscriptionDeleteRequest
T@"CKDPSubscriptionDeleteRequest",&,N
hasArchiveRecordsRequest
archiveRecordsRequest
T@"CKDPArchiveRecordsRequest",&,N
hasMarkAssetBrokenRequest
markAssetBrokenRequest
T@"CKDPMarkAssetBrokenRequest",&,N
hasUserQueryRequest
userQueryRequest
T@"CKDPUserQueryRequest",&,N
hasUserPrivacySettingsUpdateRequest
userPrivacySettingsUpdateRequest
T@"CKDPUserPrivacySettingsUpdateRequest",&,N
hasUserPrivacySettingsResetRequest
userPrivacySettingsResetRequest
T@"CKDPUserPrivacySettingsResetRequest",&,N
hasUserPrivacySettingsBatchLookupRequest
userPrivacySettingsBatchLookupRequest
T@"CKDPUserPrivacySettingsBatchLookupRequest",&,N
hasUserPrivacySettingsRetrieveRequest
userPrivacySettingsRetrieveRequest
T@"CKDPUserPrivacySettingsRetrieveRequest",&,N
hasTokenRegistrationRequest
tokenRegistrationRequest
T@"CKDPTokenRegistrationRequest",&,N
hasTokenUnregistrationRequest
tokenUnregistrationRequest
T@"CKDPTokenUnregistrationRequest",&,N
hasSetBadgeCountRequest
setBadgeCountRequest
T@"CKDPSetBadgeCountRequest",&,N
hasNotificationSyncRequest
notificationSyncRequest
T@"CKDPNotificationSyncRequest",&,N
hasNotificationMarkReadRequest
notificationMarkReadRequest
T@"CKDPNotificationMarkReadRequest",&,N
destination
setDestination:
_destination
TQ,N,V_destination
addDeltaIdentifiers:
deltaIdentifiersCount
clearDeltaIdentifiers
deltaIdentifiersAtIndex:
deltaIdentifiersType
setIgnoreMissingDeltas:
setHasIgnoreMissingDeltas:
hasIgnoreMissingDeltas
setContainsNewData:
setHasContainsNewData:
hasContainsNewData
deltaIdentifiers
setDeltaIdentifiers:
ignoreMissingDeltas
containsNewData
_deltaIdentifiers
_containsNewData
_ignoreMissingDeltas
T@"NSMutableArray",&,N,V_deltaIdentifiers
TB,N,V_ignoreMissingDeltas
TB,N,V_containsNewData
addMetadata:
metadatasCount
clearMetadatas
metadataAtIndex:
setContinuation:
metadataType
hasContinuation
metadatas
setMetadatas:
continuation
_continuation
_metadatas
T@"NSMutableArray",&,N,V_metadatas
T@"NSData",&,N,V_continuation
setTokenRegistrationBody:
hasTokenRegistrationBody
tokenRegistrationBody
_tokenRegistrationBody
T@"CKDPTokenRegistrationBody",&,N,V_tokenRegistrationBody
setVersion:
setHasVersion:
hasVersion
version
_version
Ti,N,V_version
address
participantVettingProgressBlock
_addSelfIdentityToShareMetadataPublicPCS:forShareWithURL:error:
publicProtectionData
setPublicPCSData:
setPublicPCSEtag:
_encryptedKeyDataWithShareMetadata:error:
_sendRequest:
_handleVettingInitiationProgress:
setAddress:
_participantVettingProgressBlock
_address
T@"NSData",&,N,V_encryptedKey
T@"NSString",&,N,V_address
T@"<CKInitiateParticipantVettingOperationCallbacks>",&,D,N
T@?,C,N,V_participantVettingProgressBlock
T@"NSString",&,N,V_identifier
setSubscription:
subscription
subscriptionModifiedBlock
setClientError:
setErrorKey:
setErrorDescription:
subscriptionIDByRequestID
CKDPIdentifier_Subscription
setSubscriptionIDByRequestID:
_subscriptionModifiedBlock
_subscriptionIDByRequestID
T@"NSMutableDictionary",&,N,V_subscriptionIDByRequestID
T@"CKRecordZoneID",C,N,V_zoneID
T@?,C,N,V_subscriptionModifiedBlock
setEncryptedAnonymousSharesToAdd:
_lockedFetchSystemZonePCSDataWithCompletion:
encryptShareTuples:withCompletionBlock:
initWithZoneID:shareID:
_locked_encryptShareTuples:withCompletionBlock:
_generateHashIdentifierForAnonymousShareTuple:
setCkAnonymousShareHashIdentifier:
ckAnonymousShareHashIdentifier
_locked_decryptShareTuple:withCompletionBlock:
unarchivedObjectOfClass:fromData:error:
addAnonymousSharesToSharedDB:operation:withCompletionBlock:
decryptShareTuple:withCompletionBlock:
_zonePCSData
T@"CKDZonePCSData",&,N,V_zonePCSData
setBundleIdentifier:
hasBundleIdentifier
apnsEnv
setApnsEnv:
setHasApnsEnv:
hasApnsEnv
apnsEnvAsString:
StringAsApnsEnv:
setSkipBundleIDCheck:
setHasSkipBundleIDCheck:
hasSkipBundleIDCheck
skipBundleIDCheck
_apnsEnv
_bundleIdentifier
_skipBundleIDCheck
T@"NSData",&,N,V_token
T@"NSString",&,N,V_bundleIdentifier
Ti,N,V_apnsEnv
TB,N,V_skipBundleIDCheck
hasShare
_share
T@"CKDPShare",&,N,V_share
listValuesCount
clearListValues
listValueAtIndex:
listValueType
hasBytesValue
setHasSignedValue:
hasSignedValue
setHasDoubleValue:
hasDoubleValue
hasDateValue
hasStringValue
hasLocationValue
hasReferenceValue
hasAssetValue
hasPackageValue
hasStreamingAssetValue
hasMergeableValue
hasEncryptedMergeableValue
setHasIsEncrypted:
hasIsEncrypted
setListValues:
mergeableValue
encryptedMergeableValue
_doubleValue
_signedValue
_assetValue
_bytesValue
_dateValue
_encryptedMergeableValue
_listValues
_locationValue
_mergeableValue
_packageValue
_referenceValue
_streamingAssetValue
_stringValue
_isEncrypted
T@"NSData",&,N,V_bytesValue
Tq,N,V_signedValue
Td,N,V_doubleValue
T@"CKDPDate",&,N,V_dateValue
T@"NSString",&,N,V_stringValue
T@"CKDPLocationCoordinate",&,N,V_locationValue
T@"CKDPRecordReference",&,N,V_referenceValue
T@"CKDPAsset",&,N,V_assetValue
T@"NSMutableArray",&,N,V_listValues
T@"CKDPPackage",&,N,V_packageValue
T@"CKDPStreamingAsset",&,N,V_streamingAssetValue
T@"CKDPMergeableValue",&,N,V_mergeableValue
T@"CKDPEncryptedMergeableValue",&,N,V_encryptedMergeableValue
TB,N,V_isEncrypted
setDownloadURL:
hasDownloadURL
setDownloadURLExpirationTimeSeconds:
setHasDownloadURLExpirationTimeSeconds:
hasDownloadURLExpirationTimeSeconds
downloadURL
downloadURLExpirationTimeSeconds
_downloadURLExpirationTimeSeconds
_downloadURL
T@"NSString",&,N,V_downloadURL
Tq,N,V_downloadURLExpirationTimeSeconds
setIntervalLengthSec:
setHasIntervalLengthSec:
hasIntervalLengthSec
setAllowedRequestCount:
setHasAllowedRequestCount:
hasAllowedRequestCount
setRepeatEverySec:
setHasRepeatEverySec:
hasRepeatEverySec
setStartTimeSecondsAfterUnixEpoch:
setHasStartTimeSecondsAfterUnixEpoch:
hasStartTimeSecondsAfterUnixEpoch
setStartTimeSecondsAfterLocalMidnight:
setHasStartTimeSecondsAfterLocalMidnight:
hasStartTimeSecondsAfterLocalMidnight
intervalLengthSec
allowedRequestCount
repeatEverySec
startTimeSecondsAfterUnixEpoch
startTimeSecondsAfterLocalMidnight
_startTimeSecondsAfterLocalMidnight
_startTimeSecondsAfterUnixEpoch
_allowedRequestCount
_intervalLengthSec
_repeatEverySec
Ti,N,V_intervalLengthSec
Ti,N,V_allowedRequestCount
Ti,N,V_repeatEverySec
Tq,N,V_startTimeSecondsAfterUnixEpoch
Tq,N,V_startTimeSecondsAfterLocalMidnight
setPublicKeyID:
setReference:
hasPublicKeyID
hasReference
publicKeyID
reference
_publicKeyID
_reference
T@"NSData",&,N,V_publicKeyID
T@"CKDPRecordReference",&,N,V_reference
setServerChangeToken:
hasServerChangeToken
setMaxChanges:
setHasMaxChanges:
hasMaxChanges
setWantsChanges:
setHasWantsChanges:
hasWantsChanges
serverChangeToken
maxChanges
wantsChanges
_maxChanges
_serverChangeToken
_wantsChanges
T@"NSData",&,N,V_serverChangeToken
TI,N,V_maxChanges
TB,N,V_wantsChanges
_checkZonePCS
_uploadRepairedZones
fixedZones
zonePCSRepairProgressBlock
pcsInfoByZoneID
setPcsError:
setPcsStatus:
setPcsDiagnosticString:
_checkPCSDataForZone:
pcsStatus
setWasRepaired:
setFixedZones:
setPcsInfoByZoneID:
_zonePCSRepairProgressBlock
_fixedZones
_pcsInfoByZoneID
T@"NSMutableArray",&,N,V_fixedZones
T@"NSMutableDictionary",&,N,V_pcsInfoByZoneID
T@"<CKRepairZonePCSOperationCallbacks>",&,D,N
T@?,C,N,V_zonePCSRepairProgressBlock
clearOneofValuesForValue
setInt64Value:
setHasInt64Value:
hasInt64Value
setBoolValue:
setHasBoolValue:
hasBoolValue
setHasValue:
valueAsString:
StringAsValue:
int64Value
_int64Value
_boolValue
Tq,N,V_int64Value
TB,N,V_boolValue
Ti,N,V_value
setApiToken:
hasApiToken
setForceFetchToken:
setHasForceFetchToken:
hasForceFetchToken
apiToken
forceFetchToken
_apiToken
_forceFetchToken
T@"NSString",&,N,V_apiToken
TB,N,V_forceFetchToken
setContainerScopedUserId:
hasContainerScopedUserId
containerScopedUserId
_containerScopedUserId
T@"NSString",&,N,V_containerScopedUserId
setSyncContinuationToken:
hasSyncContinuationToken
syncContinuationToken
_syncContinuationToken
T@"NSData",&,N,V_syncContinuationToken
setMovedRecordDestinationIdentifier:
_movedRecordDestinationIdentifier
T@"CKDPRecordIdentifier",&,N,V_movedRecordDestinationIdentifier
rangeOfString:
seqNum
dataString
uuid
initWithMessage:
_uuid
_seqNum
_dataString
TQ,R,N,V_type
T@"NSString",R,N,V_uuid
Tq,R,N,V_seqNum
T@"NSString",R,N,V_dataString
category
printQueue
requestDictionary
parseRequestArrayAndPrint:
indexOfObjectWithOptions:passingTest:
insertObject:atIndex:
initWithBase64EncodedString:options:
requestClassName
setString:
parserFromConfigurationMessage:
writeToFile:atomically:
requestParsedBlock
_initWithUUID:requestMetadata:requestObjects:bodyStreamResetCount:responseMetadata:responseObjects:
logMessageFilter
evaluateWithObject:
setLogMessageFilter:
setRequestParsedBlock:
setRequestDictionary:
setPrintQueue:
_logMessageFilter
_requestParsedBlock
_requestDictionary
_printQueue
T@"NSMutableDictionary",&,V_requestDictionary
T@"NSObject<OS_dispatch_queue>",&,V_printQueue
T@"NSPredicate",C,N,V_logMessageFilter
T@?,C,N,V_requestParsedBlock
requestTime
responseTime
dateByAddingTimeInterval:
timeIntervalSince1970
queryItemWithName:value:
setQueryItems:
absoluteString
stringByReplacingOccurrencesOfString:withString:
fileHandleWithStandardOutput
CKLogToFileHandle:
requestMethod
requestURL
requestHeaders
bodyStreamResetCount
requestObjects
responseStatus
responseObjects
shareParticipantFetchedBlock
_initWithUserIdentity:
setIsOrgAdminUser:
setPendingRequest:
_handleFetchedInfo:withIdentity:error:
pendingRequest
setPerLookupInfoProgressBlock:
setLookupCompletionBlock:
scheduleRequest:
_fetchIdentities
_shareParticipantFetchedBlock
_pendingRequest
T@"CKDPublicIdentityLookupRequest",&,N,V_pendingRequest
T@"<CKFetchShareParticipantsOperationCallbacks>",&,D,N
T@?,C,N,V_shareParticipantFetchedBlock
setSelfAddedPcs:
setPublicKey:
hasSelfAddedPcs
hasPublicKey
setPublicKeyVersion:
setHasPublicKeyVersion:
hasPublicKeyVersion
setHasAcceptedInProcess:
hasAcceptedInProcess
selfAddedPcs
_publicKey
_publicKeyVersion
_selfAddedPcs
_acceptedInProcess
T@"CKDPProtectionInfo",&,N,V_selfAddedPcs
T@"CKDPProtectionInfo",&,N,V_publicKey
Ti,N,V_publicKeyVersion
TB,N,V_acceptedInProcess
zoneIDToRecordIDs
recordZoneIDByRequestID
recordArchivedBlock
initWithOperation:recordIDsToArchive:
setZoneIDToRecordIDs:
setRecordZoneIDByRequestID:
_recordArchivedBlock
_zoneIDToRecordIDs
_recordZoneIDByRequestID
T@"NSMutableDictionary",&,N,V_zoneIDToRecordIDs
T@"NSMutableDictionary",&,N,V_recordZoneIDByRequestID
T@?,C,N,V_recordArchivedBlock
setFieldValue:
hasFieldValue
fieldValue
_fieldValue
T@"CKDPRecordFieldValue",&,N,V_fieldValue
recordsDeleted
retries
requestOperationCountsByType
totalBytesByChunkProfile
chunkCountByChunkProfile
fileCountByChunkProfile
enabled
TB,R,GisEnabled
initWithWrappedKey:publicKey:
wrappedKey
setWrappedKey:
_wrappedKey
T@"NSData",C,N,V_wrappedKey
T@"CKPublicKey",C,N,V_publicKey
addTypes:
addFilters:
addSorts:
typesCount
clearTypes
typesAtIndex:
filtersCount
clearFilters
filtersAtIndex:
sortsCount
clearSorts
sortsAtIndex:
typesType
filtersType
sortsType
setDistinct:
setHasDistinct:
hasDistinct
queryOperator
setQueryOperator:
setHasQueryOperator:
hasQueryOperator
queryOperatorAsString:
StringAsQueryOperator:
types
setTypes:
filters
setFilters:
sorts
setSorts:
distinct
_filters
_queryOperator
_sorts
_types
_distinct
T@"NSMutableArray",&,N,V_types
T@"NSMutableArray",&,N,V_filters
T@"NSMutableArray",&,N,V_sorts
TB,N,V_distinct
Ti,N,V_queryOperator
clearAllClouddThrottles
allClouddThrottlesWithCompletionHandler:
addClouddThrottle:
hasErrorKey
errorKey
hasRetryAfterSeconds
retryAfterSeconds
extensionName
hasExtensionPayload
extensionPayload
typeCode
auxiliaryError
addResponseHeaders:
setResponseUUID:
setAuthGetResponseBody:
responseHeadersCount
clearResponseHeaders
responseHeadersAtIndex:
responseHeadersType
hasResponseUUID
hasAuthGetResponseBody
responseUUID
authGetResponseBody
setResponseHeaders:
_authGetResponseBody
_responseHeaders
_responseUUID
T@"NSString",&,N,V_responseUUID
T@"NSData",&,N,V_authGetResponseBody
T@"NSMutableArray",&,N,V_responseHeaders
setExtensionName:
setExtensionPayload:
hasExtensionName
setTypeCode:
setHasTypeCode:
_extensionName
_extensionPayload
_typeCode
T@"NSString",&,N,V_extensionName
TI,N,V_typeCode
T@"NSData",&,N,V_extensionPayload
willOpenItemReaderWriter:error:
openWithOperation:error:
didOpenItemReaderWriter:result:error:
getFileMetadataWithContainer:fileHandle:error:
modTimeInSeconds
fileDescriptor
_fileHandle
T@"NSFileHandle",&,N,V_fileHandle
addConflictLoserEtags:
addPluginFields:
addTombstonedPublicKeyIDs:
setCreatedBy:
fieldsCount
fieldsAtIndex:
setModifiedBy:
conflictLoserEtagsCount
clearConflictLoserEtags
conflictLoserEtagsAtIndex:
setModifiedByDevice:
pluginFieldsCount
clearPluginFields
pluginFieldsAtIndex:
setShareInfo:
setChainPrivateKey:
setChainProtectionInfo:
setChainParent:
tombstonedPublicKeyIDsCount
clearTombstonedPublicKeyIDs
tombstonedPublicKeyIDsAtIndex:
setZoneishPrimaryKeyId:
fieldsType
conflictLoserEtagsType
pluginFieldsType
tombstonedPublicKeyIDsType
hasCreatedBy
hasModifiedBy
hasModifiedByDevice
setPermission:
setHasPermission:
hasPermission
permissionAsString:
StringAsPermission:
hasShareInfo
hasChainPrivateKey
hasChainProtectionInfo
hasChainParent
hasZoneishPrimaryKeyId
createdBy
fields
setFields:
modifiedBy
conflictLoserEtags
setConflictLoserEtags:
modifiedByDevice
pluginFields
setPluginFields:
chainPrivateKey
chainProtectionInfo
chainParent
tombstonedPublicKeyIDs
setTombstonedPublicKeyIDs:
zoneishPrimaryKeyId
_chainParent
_chainPrivateKey
_chainProtectionInfo
_conflictLoserEtags
_createdBy
_fields
_modifiedBy
_modifiedByDevice
_permission
_pluginFields
_shareInfo
_tombstonedPublicKeyIDs
_zoneishPrimaryKeyId
T@"CKDPIdentifier",&,N,V_createdBy
T@"NSMutableArray",&,N,V_fields
T@"CKDPIdentifier",&,N,V_modifiedBy
T@"NSMutableArray",&,N,V_conflictLoserEtags
T@"NSString",&,N,V_modifiedByDevice
T@"NSMutableArray",&,N,V_pluginFields
Ti,N,V_permission
T@"CKDPShare",&,N,V_shareInfo
T@"NSData",&,N,V_chainPrivateKey
T@"CKDPProtectionInfo",&,N,V_chainProtectionInfo
T@"CKDPRecordChainParent",&,N,V_chainParent
T@"NSMutableArray",&,N,V_tombstonedPublicKeyIDs
T@"NSData",&,N,V_zoneishPrimaryKeyId
addPublicKeys:
publicKeysCount
clearPublicKeys
publicKeysAtIndex:
publicKeysType
setParticipantKeyLost:
setHasParticipantKeyLost:
hasParticipantKeyLost
participantKeyLost
publicKeys
setPublicKeys:
_publicKeys
_participantKeyLost
TB,N,V_participantKeyLost
T@"NSMutableArray",&,N,V_publicKeys
packageGCPeriod
sharedPurger
purgeAll
rootDirectories
purgeRootDirectory:
gcPackagesInDirectory:dbInUseBlock:
fileURLWithPath:isDirectory:
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
getResourceValue:forKey:error:
purgeDirectory:
skipDescendants
level
registerXPCActivity
addRootDirectory:
schedulePeriodicPurgesInDirectory:
_rootDirectories
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
T@"NSMutableArray",R,N,V_rootDirectories
T@"CKCodeRecordTransport",&,N,V_record
expressionForConstantValue:
expressionWithCKDPRecordFieldValue:translator:
predicateWithCKDPQueryFilters:translator:
andPredicateWithSubpredicates:
notPredicateWithSubpredicate:
radius
expressionForKeyPath:
predicateWithLeftExpression:rightExpression:modifier:type:options:
predicateWithSortedCKDPQueryFilters:translator:
CKDPQueryFiltersWithTranslator:error:
setRadius:
leftExpression
rightExpression
comparisonPredicateModifier
expressionType
function
predicateOperatorType
constantValue
arguments
keyPath
_nearFilterWithKey:location:radius:translator:
CKExpressionValue
_comparisonOptionForString:
_parseFullTextSearchUsingContainsTranslator:withError:
_parseFullTextSearchFiltersWithTranslator:withError:
_parseNearFiltersWithTranslator:withError:
_parseListContainsFiltersWithTranslator:withError:
_parseInFiltersWithTranslator:withError:
_parseListContainsAnyFiltersWithTranslator:withError:
_parseListContainsAllFiltersWithTranslator:withError:
_parseBeginsWithFiltersWithTranslator:withError:
_parseBetweenFiltersWithTranslator:withError:
_parseBasicOperatorFiltersWithTranslator:withError:
compoundPredicateType
subpredicates
ascending
CKDPQuerySort
relativeLocation
horizontalAccuracy
setHorizontalAccuracy:
altitude
setAltitude:
verticalAccuracy
setVerticalAccuracy:
course
setCourse:
speed
setSpeed:
timestamp
apsToken
initWithOperation:apsToken:apsEnvironmentString:bundleID:
setApsToken:
setApsEnvironmentString:
setBundleID:
_apsToken
_bundleID
T@"NSData",&,N,V_apsToken
T@"NSString",&,N,V_apsEnvironmentString
T@"NSString",&,N,V_bundleID
hasConstructedAssetDownloadParameters
_constructedAssetDownloadParameters
T@"NSData",&,N,V_constructedAssetDownloadParameters
pccWrappedInvocationKeys
setWrappedInvocationKey:
attestationEntropy
trustedTargetWrappedInvocationKey
setEncryptedInvocationKey:
protectionSource
setProtectionSource:
setKeyVersion:
hasAttestationResponse
attestationResponse
initWithOperation:serviceName:functionName:serializedParameters:attestationEntropy:pccWrappedInvocationKeys:trustedTargetWrappedInvocationKey:
setAttestationEntropy:
setPccWrappedInvocationKeys:
setTrustedTargetWrappedInvocationKey:
_attestationEntropy
_pccWrappedInvocationKeys
_trustedTargetWrappedInvocationKey
T@"NSData",&,N,V_attestationEntropy
T@"NSArray",C,N,V_pccWrappedInvocationKeys
T@"CKDTrustedTargetWrappedKey",C,N,V_trustedTargetWrappedInvocationKey
subscriptionIDs
subscriptions
subscriptionFromPSubscription:error:
subscriptionFetchedBlock
errorFetchingAllSubscriptionsBlock
initWithOperation:subscriptionIDs:
setSubscriptions:
setSubscriptionFetchedBlock:
setErrorFetchingAllSubscriptionsBlock:
setSubscriptionIDs:
_subscriptions
_subscriptionFetchedBlock
_errorFetchingAllSubscriptionsBlock
_subscriptionIDs
T@"NSArray",&,N,V_subscriptionIDs
T@"NSMutableArray",&,N,V_subscriptions
T@?,C,N,V_subscriptionFetchedBlock
T@?,C,N,V_errorFetchingAllSubscriptionsBlock
_parseQueue
_parserData
_testRepeatedParseResults
_parserError
_objectParsedBlock
T@"NSError",&,N,V_parserError
T@"NSMutableData",&,N
Tq,N,V_qualityOfService
TB,N,V_testRepeatedParseResults
T@?,C,N,V_objectParsedBlock
setShouldThrottle:
setIsManatee:
setKeySyncResult:
setKeySyncDurationSec:
setThrottledDurationSec:
setContext:
setKRSReturnedExistingIdentity:
_shouldThrottle
_isManatee
_keySyncResult
_overallResult
_keySyncDurationSec
_throttledDurationSec
_context
_KRSReturnedExistingIdentity
T@"NSNumber",&,N,V_shouldThrottle
T@"NSNumber",&,N,V_isManatee
T@"NSString",&,N,V_keySyncResult
T@"NSString",&,N,V_overallResult
T@"NSNumber",&,N,V_keySyncDurationSec
T@"NSNumber",&,N,V_throttledDurationSec
T@"NSString",&,N,V_context
T@"NSNumber",N,V_KRSReturnedExistingIdentity
T@"NSError",&,N,V_error
syncGroup
completionDate
syncStatus
syncError
waitOnSyncWithQueue:handler:
accountDsid
setAccountDsid:
setManatee:
setSyncGroup:
setCompletionDate:
setSyncStatus:
setSyncError:
_manatee
_accountDsid
_syncGroup
_completionDate
_syncStatus
_syncError
T@"NSString",&,N,V_accountDsid
manatee
TB,N,GisManatee,V_manatee
T@"NSObject<OS_dispatch_group>",&,N,V_syncGroup
T@"NSDate",&,N,V_completionDate
T@"NSNumber",&,N,V_syncStatus
T@"NSError",&,N,V_syncError
TB,N,V_KRSReturnedExistingIdentity
keySyncTrackerByServiceNameByAccount
keySyncQueue
_getKeySyncTrackerByServicenameForAccount:
createSyncTrackerForAccount:service:manatee:
returnedExistingIdentity
syncTrackerForAccount:service:manatee:shortThrottlePeriod:
performKeySyncWithSyncTracker:testableSyncConfig:shouldThrottle:testOverrideProvider:completionHandler:
setKeySyncTrackerByServiceNameByAccount:
setKeySyncQueue:
_keySyncTrackerByServiceNameByAccount
_keySyncQueue
T@"NSMutableDictionary",&,N,V_keySyncTrackerByServiceNameByAccount
T@"NSObject<OS_dispatch_queue>",&,N,V_keySyncQueue
isFetchAllSubscriptionsOperation
subscriptionFetchedProgressBlock
_handleSubscriptionFetched:withID:responseCode:
setIsFetchAllSubscriptionsOperation:
_isFetchAllSubscriptionsOperation
_subscriptionFetchedProgressBlock
TB,N,V_isFetchAllSubscriptionsOperation
T@"<CKFetchSubscriptionsOperationCallbacks>",&,D,N
T@?,C,N,V_subscriptionFetchedProgressBlock
_initWithRecord:operation:
_initForDeleteWithRecordID:operation:
rootRecordID
isKnownToServer
initWithRecord:action:
modifyRecordsQueue
_fetchSharePCSData
_prepareDependentPCSUpdateIfNeededForShareWithSharePCS:error:
CKIsObjectNotFoundError
_createNewSharePCSDataWithError:
_fetchRootRecordPublicSharingIdentityWithCompletionHandler:
encryptedPublicSharingKey
publicSharingIdentity
setSharePCSData:isUnitTestAccount:
setSharedZonePCSData:
isZoneWideShare
_rollShareAndZonePCSIfNeededForSharePCS:zonePCSData:
_handleSharePCSData:zonePCSData:
pcsGroup
isDelete
_addPublicKeyToSelfParticipant
_setupParticipantsProtectionInfos
_updateSharePublicPCSWithError:
_serializePCSDataForShareWithError:
allParticipants
setIsAnonymousInvitedParticipant:
setForceSendPublicKeyForAnonymousParticipants:
addedParticipants
_alignParticipantPermissions
prepareForSave
removedParticipants
setDidAttemptZoneWideShareKeyRoll:
setInvitedProtectionData:
setInvitedProtectionEtag:
sharedZonePCSData
pRecordZoneFromRecordZone:
setPublicProtectionData:
setPublicProtectionEtag:
_cleanPublicPCSforShareWithError:
setAcceptanceStatus:
haveAddedOwnerToShare
isALegacyPublicShareThatNeedsOwnerPPPCSUpgrade
_ensurePrivateParticipant:isInInvitedSharePCS:
setHaveAddedOwnerToShare:
isCloudDocsContainer
setPublicSharingKey:
publicSharingKey
setIsALegacyPublicShareThatNeedsOwnerPPPCSUpgrade:
wantsNewInvitationToken
isCurrentUser
setMyParticipantPCSData:
_removePrivateParticipantsFromInvitedPCS:error:
_modifyRoleForParticipant:invitedPCS:shareeIdentities:error:
_removePublicKey:fromInvitedPCS:
invitedPCSPermissionForParticipant:
_removePrivateParticipant:fromInvitedSharePCS:
isOutOfNetwork
_publicKeyForParticipant:error:
createPublicIdentityFromPublicKeyForParticipant:error:
_addedPrivateParticipantNeedsAManateeInvitation:
selfPPPCSOwnerIdentity
initWithShareProtectionRef:
sharingRequestDataForIdentity:owner:flags:error:
initWithSharingInvitationData:shareURL:participantID:
setProtectionInfoPublicKey:
setMutableInvitationTokenStatus:
setPrivatePCS:
setPreviousPublicProtectionEtag:
setPCSData:forFetchedShareID:
lookupField
_knownParticipantEqualToParticipant:
invitationToken
updateFromServerShare:
modifyHandlerWithShare:operation:
modifyHandlerForDeleteWithShareID:operation:
isShare
sideEffectRecordIDs
noteSideEffectRecordPendingModify:
noteSideEffectRecordAbsent:
noteSideEffectRecordPendingDelete:
fetchSharePCSData
updateParticipantsForFetchedShare:error:
setSelfPPPCSOwnerIdentity:
_haveAddedOwnerToShare
_isALegacyPublicShareThatNeedsOwnerPPPCSUpgrade
_selfPPPCSOwnerIdentity
TB,N,V_haveAddedOwnerToShare
TB,N,V_isALegacyPublicShareThatNeedsOwnerPPPCSUpgrade
T^{_PCSPublicIdentityData=},N,V_selfPPPCSOwnerIdentity
T@"CKShare",R,N
T@"CKRecordID",R,N
hasSubscription
_subscription
T@"CKDPSubscription",&,N,V_subscription
setUpgradeConfirmationHandler:
initWithSource:
setFlags:
prepareWithCompletionHandler:
initWithLiveSource:
localStore
preparedStreamFromStore:
liveLocalStore
preparedLiveStreamFromLiveStore:
storeWithArchiveURL:
streamObservers
logEventStream
setEventHandler:
liveStream
activate
absoluteStartDate
startTimeOffset
source
newestDate
oldestDate
activateStreamFromDate:
initForHostStream
initWithArchiveAtURL:
addStreamObserver:
streamLogsWithCompletion:
wantsSimulatorLogs
setWantsSimulatorLogs:
setStartTimeOffset:
setAbsoluteStartDate:
setSource:
setLogEventStream:
setLiveStream:
setStreamObservers:
_wantsSimulatorLogs
_onlyTestLogs
_startTimeOffset
_absoluteStartDate
_processName
_source
_logEventStream
_liveStream
_streamObservers
TQ,N,V_source
T@"OSLogEventStream",&,N,V_logEventStream
T@"OSLogEventLiveStream",&,N,V_liveStream
T@"NSMutableArray",&,N,V_streamObservers
TB,N,V_wantsSimulatorLogs
TB,N,V_onlyTestLogs
Td,N,V_startTimeOffset
T@"NSDate",&,N,V_absoluteStartDate
T@"NSString",&,N,V_processName
writeString:
_CKLogToFileHandle:atDepth:
currentCalendar
CKSharedCalendar
_hasIvar:
numberWithChar:
numberWithUnsignedChar:
numberWithShort:
numberWithUnsignedShort:
numberWithUnsignedLong:
numberWithFloat:
packageProcessBasePath
standaloneTranslatorWithPackageStagingDirectory:databaseScope:
removeDB
hasOwnerIdentifier
ownerIdentifier
hasDatabaseType
databaseType
hasIndex
isReversed
hasLeft
hasRight
left
right
listFields
_typeCKLogValue
_applicationContainerEnvironmentCKLogValue
_isolationLevelCKLogValue
_targetDatabaseCKLogValue
publicAccess
_publicAccessCKLogValue
_participantPermissionCKLogValue
_participantStateCKLogValue
_participantTypeCKLogValue
_stateCKLogValue
_permissionCKLogValue
_permissionAsString
mergeableValueID
shareProtection
encryptMergeableValueMetadata
setEncryptMergeableValueMetadata:
envelopeContextWithIdentifier:error:
_encryptMergeableValueMetadata
_shareProtection
_mergeableValueID
T^{_OpaquePCSShareProtection=},N,V_shareProtection
TB,N,V_encryptMergeableValueMetadata
T@"CKMergeableValueID",C,N,V_mergeableValueID
needsEncryption
envelope
deltaID
setEnvelope:
_encryptWithContext:error:
dataWithError:
unwrapAssetKeyWithShareProtection:pcsManager:error:
_decryptWithContext:error:
set_data:
encryptWithContext:error:
_envelopeWithContext:allowCreation:error:
pDistributedTimestampsFromDeltaMetadata:
setAuthenticatedTimestamps:
setEncryptedTimestamps:
authenticatedTimestamps
mergeTimestamps:intoDeltaMetadata:error:
encryptedTimestamps
T@"NSData",C,N
T@"CKTuple2",C,N
addLocalizedArguments:
addTitleLocalizedArguments:
addSubtitleLocalizedArguments:
setText:
setLocalizedKey:
localizedArgumentsCount
clearLocalizedArguments
localizedArgumentsAtIndex:
setActionLocKey:
setLaunchImage:
setSoundName:
setCategory:
setTitleLocalizedKey:
titleLocalizedArgumentsCount
clearTitleLocalizedArguments
titleLocalizedArgumentsAtIndex:
setSubtitle:
setSubtitleLocalizedKey:
subtitleLocalizedArgumentsCount
clearSubtitleLocalizedArguments
subtitleLocalizedArgumentsAtIndex:
localizedArgumentsType
titleLocalizedArgumentsType
subtitleLocalizedArgumentsType
hasText
hasLocalizedKey
hasActionLocKey
hasLaunchImage
hasSoundName
hasCategory
hasTitle
hasTitleLocalizedKey
hasSubtitle
hasSubtitleLocalizedKey
text
localizedKey
localizedArguments
setLocalizedArguments:
actionLocKey
launchImage
soundName
title
titleLocalizedKey
titleLocalizedArguments
setTitleLocalizedArguments:
subtitle
subtitleLocalizedKey
subtitleLocalizedArguments
setSubtitleLocalizedArguments:
_actionLocKey
_category
_launchImage
_localizedArguments
_localizedKey
_soundName
_subtitle
_subtitleLocalizedArguments
_subtitleLocalizedKey
_text
_title
_titleLocalizedArguments
_titleLocalizedKey
T@"NSString",&,N,V_text
T@"NSString",&,N,V_localizedKey
T@"NSMutableArray",&,N,V_localizedArguments
T@"NSString",&,N,V_actionLocKey
T@"NSString",&,N,V_launchImage
T@"NSString",&,N,V_soundName
T@"NSString",&,N,V_category
T@"NSString",&,N,V_title
T@"NSString",&,N,V_titleLocalizedKey
T@"NSMutableArray",&,N,V_titleLocalizedArguments
T@"NSString",&,N,V_subtitle
T@"NSString",&,N,V_subtitleLocalizedKey
T@"NSMutableArray",&,N,V_subtitleLocalizedArguments
user
recordFetchedBlock
setUserRecord:
_recordFetchedBlock
_userRecord
T@"CKRecord",&,N,V_userRecord
T@?,C,N,V_recordFetchedBlock
setArchiveContinuationToken:
hasArchiveContinuationToken
setNewestFirst:
setHasNewestFirst:
hasNewestFirst
setHasLimit:
hasLimit
archiveContinuationToken
newestFirst
_archiveContinuationToken
_newestFirst
T@"NSData",&,N,V_archiveContinuationToken
TB,N,V_newestFirst
TI,N,V_limit
setFirstName:
setLastName:
hasFirstName
hasLastName
isInNetwork
setIsInNetwork:
setHasIsInNetwork:
hasIsInNetwork
firstName
lastName
_firstName
_lastName
_isInNetwork
T@"NSString",&,N,V_firstName
T@"NSString",&,N,V_lastName
TB,N,V_isInNetwork
addAssets:
assetsCount
clearAssets
assetsAtIndex:
assetsType
hasField
field
_assets
_field
T@"CKDPRecordFieldIdentifier",&,N,V_field
T@"NSMutableArray",&,N,V_assets
downloadPreauthorization
complete
tuple
tupleForItem:
initWithTuple:
addItem:
setTuple:
setComplete:
_complete
_authPutRequest
_tuple
T@"NSArray",&,N,V_tuple
T@"CKAssetDownloadPreauthorization",R,N
TB,N,V_complete
T@"<MMCSOperationMetric>",&,N,V_metrics
T@"NSData",&,N,V_authPutRequest
T@"NSArray",R,N,V_items
_initCommonWithOperation:
_initWithMoveChange:operation:
serverRecord
setMoveChange:
_moveChange
_serverMoveMarkerRecord
T@"CKMovePhotosChange",&,N,V_moveChange
T@"CKDMovePhotosOperation",W,D,N
T@"CKRecord",&,N
T@"CKRecord",&,N,V_serverMoveMarkerRecord
addContainerPrivacySettings:
containerPrivacySettingsCount
clearContainerPrivacySettings
containerPrivacySettingsAtIndex:
containerPrivacySettingsType
setContainerPrivacySettings:
_containerPrivacySettings
T@"NSMutableArray",&,N,V_containerPrivacySettings
addSubscriptions:
subscriptionsCount
clearSubscriptions
subscriptionsAtIndex:
subscriptionsType
setRecordForOplockFailure:
hasRecordForOplockFailure
recordForOplockFailure
_recordForOplockFailure
T@"CKDPRecord",&,N,V_recordForOplockFailure
checkoutCount
MMCSEngineContext
sharedContextsQueue
setCheckoutCount:
sharedWrappersByPath
tearDownMMCSEngineWithContext:
didDrop
setDidDrop:
_appID
_commonErrorCodeWithMMCSError:
_errorCodeWithMMCSPutError:
_errorCodeWithMMCSGetError:
_errorCodeWithMMCSRegisterError:
_userInfoFromMMCSRetryableError:
secureCodableError:
_errorWithMMCSError:path:description:operationType:
weakToWeakObjectsMapTable
initFileURLWithPath:isDirectory:
removeItemAtPath:error:
mmcsWorkingDirectory
hasCachedCKDMMCSEngineContextForPath:
assetCacheWithApplicationBundleID:directoryContext:database:didInit:error:
isNewEmptyCache
purgeMMCSDirectoryWithPath:
setupMMCSEngineWithApplicationBundleID:path:wasCached:error:
initWithMMCSEngineContext:directoryContext:
setAssetCache:
setupPersistentStateAtStartup
assertMMCSSerialized
MMCSEngine
maxChunkCountForSection
_referenceIdentifierFromAssetKey:
CKMapKeysAndValues:
expireAssetHandlesIfNecessary
MMCSSerializeSyncRecursive:
isAlreadyRegistered
boundaryKey
didCompleteRequestWithError:
getMMCSEngine
MMCSRunSerialized:
initWithMMCS:itemGroup:operation:progress:command:start:groupCompletion:
_contextToRegisterItemGroup:operation:options:completionHandler:
assetRereferenceInfo
downloadTokenExpiration
MMCSOptions
_logMMCSOptions:
_contextToGetOrPutChunkKeysItemGroup:operation:options:completionHandler:
sparseAware
constructedAssetEstimatedSize
contentResponseBody
descriptionForError:
_errorWithMMCSError:description:operationType:
_contextToGetItemGroup:operation:options:progress:command:completionHandler:
uploadTokenExpiration
_contextToPutItemGroup:operation:options:progress:completionHandler:
registeredItemCount:error:
_getRegisteredItemsGreaterThan:itemIds:itemCount:error:
checkAssetHandlesForRegisteredMMCSItems:
_unregisterItemIDs:
putPackageSectionIdentifier
setMMCSPackageSectionItem:
_contextToPutSectionItem:operation:options:progress:completionHandler:
_contextToGetSectionItem:operation:options:progress:completionHandler:
showRegisteredItems
unregisterItemIDs:
startTrackingItemIDsForMMCSItems:
stopTrackingItemIDsForMMCSItems:
isTrackingItemID:
setMMCSEngineContext:
_trackedItemIDs
_didDrop
_path
_temporaryDirectory
_assetCache
_checkoutCount
_MMCSEngineContext
TB,N,V_didDrop
Tq,N,V_checkoutCount
T@"CKDMMCSEngineContext",&,N,V_MMCSEngineContext
T@"NSURL",R,N,V_path
T@"NSURL",R,N,V_temporaryDirectory
T@"CKDAssetCache",&,N,V_assetCache
TI,R,N,GgetMaxChunkCountForSection
itemGroup
findTrackedMMCSItemByItemID:
unsignedIntValue
isReaderReadFrom
canBeRegistered
setChunkCount:
getCKDMMCSItemReaderByPathForMMCSItem:error:
setModTimeInSeconds:
updateAssetHandlesForRegisteredMMCSItems:error:
generationCountToSave
shouldReadRawEncryptedData
assetChunkerOptions
downloadToken
assetReference
hasOffset
initWithTimeIntervalSince1970:
initWithItemID:trackingUUID:signature:
setAssetDownloadStagingInfo:
_openInfo
openWithOpenInfo:error:
getFileSizeWithOpenInfo:error:
clearFileSize
getFileSizeWithError:
getFileMetadataWithFileHandle:error:
setDownloadPreauthorization:
setWrappedAssetKey:
setBoundaryKey:
writer
setWriter:
setDownloadLooksOkay:
setDownloadTokenExpiration:
setAssetChunkerOptions:
setConstructedAssetEstimatedSize:
setHasOffset:
setShouldReadAssetContentUsingClientProxy:
setIsAlreadyRegistered:
setIsRereferencedAssetUpload:
_downloadLooksOkay
_hasSize
_hasOffset
_shouldReadRawEncryptedData
_shouldReadAssetContentUsingClientProxy
_usesAssetDownloadStagingManager
_isAlreadyRegistered
_isReaderReadFrom
_isRereferencedAssetUpload
_chunkCount
_fileURL
_fileID
_generationID
_modTimeInSeconds
_itemID
_progress
_fileSize
_paddedFileSize
_offset
_packageIndex
_putPackageSectionIdentifier
_recordKey
_itemTypeHint
_contentBaseURL
_requestor
_authToken
_downloadPreauthorization
_uploadReceiptExpiration
_sectionItems
_assetKey
_wrappedAssetKey
_clearAssetKey
_boundaryKey
_writer
_uploadTokenExpiration
_downloadTokenExpiration
_assetChunkerOptions
_constructedAssetDownloadURL
_constructedAssetEstimatedSize
_trackingUUID
T@"NSURL",&,N,V_fileURL
T@"NSNumber",&,N,V_deviceID
T@"NSNumber",&,N,V_fileID
T@"NSNumber",&,N,V_generationID
T@"NSNumber",&,N,V_modTimeInSeconds
TQ,N,V_itemID
Td,N,V_progress
TQ,N,V_fileSize
TQ,N,V_paddedFileSize
TQ,N,V_offset
TI,N,V_chunkCount
TQ,N,V_packageIndex
T@"NSString",&,N,V_putPackageSectionIdentifier
T@"CKAsset",&,N,V_asset
T@"CKPackage",&,N,V_package
T@"NSString",&,N,V_recordType
T@"NSString",&,N,V_recordKey
T@"NSString",&,N,V_itemTypeHint
T@"NSURL",&,N,V_contentBaseURL
T@"NSString",&,N,V_requestor
T@"NSString",&,N,V_authToken
T@"CKAssetDownloadPreauthorization",&,N,V_downloadPreauthorization
Td,N,V_uploadReceiptExpiration
T@"NSMutableArray",&,N,V_sectionItems
T@"NSData",&,N,V_assetKey
T@"NSData",&,N,V_wrappedAssetKey
T@"NSData",&,N,V_clearAssetKey
T@"NSData",&,N,V_boundaryKey
T@"CKDMMCSItemCommandWriter",&,N,V_writer
TB,N,V_downloadLooksOkay
TQ,N,V_uploadTokenExpiration
TQ,N,V_downloadTokenExpiration
T@"NSDictionary",&,N,V_assetChunkerOptions
T@"NSURL",&,N,V_constructedAssetDownloadURL
TQ,N,V_constructedAssetEstimatedSize
T@"NSString",&,N,V_trackingUUID
TB,N,V_hasSize
TB,N,V_hasOffset
TB,N,V_finished
TB,N,GisTemporary,V_temporary
TB,N,V_shouldReadRawEncryptedData
TB,N,V_shouldReadAssetContentUsingClientProxy
TB,N,V_usesAssetDownloadStagingManager
TB,N,V_isAlreadyRegistered
TB,N,V_isReaderReadFrom
TB,N,V_isRereferencedAssetUpload
_needsSigningPCS
_stringForState:
_fetchSigningPCSForRecordToDelete
savePolicy
hasModifiedPropertiesRequiringEncryption
hasUpdatedParent
parentsByRecordID
wantsChainPCS
wantsPublicSharingKey
setRecordPCS:
_loadPCSData
_fetchPCSData
setRecordPCSData:
recordPCSData
setSigningPCS:
signingPCSIdentity
parent
parentPCSData
setSigningPCSIdentity:
canSetPreviousProtectionEtag
_useZoneishPCS
_unwrapRecordPCSForZone
_unwrapRecordPCSWithShareID:
_unwrapRecordPCSForParent
_addShareToPCSData:withError:
dataWithRecord:
_reallyFetchPCSDataWithOptions:
_createAndSavePCS
alwaysFetchPCSFromServer
saveAttempts
_keyRollIfNeededForRecordPCSData:withError:
_reallyAddShareToPCSData:withError:
hasUpdatedShare
previousShare
_fetchSharePCSForID:withCompletionHandler:
didRollRecordPCSMasterKey
rollRecordMasterKeysOnUnshare
setDidRollRecordPCSMasterKey:
_fetchParentPCSForData:withError:
previousParent
parentID
chainParentPublicKeyID
_addParentPCS:toRecordPCS:
setParentPCSData:
_handlePCSData:withError:
setChainParentPublicKeyID:
_continueCreateAndSavePCSWithZonePCS:sharePCS:
useLightweightPCS
hasLightweightPCSEntitlement
_canSetPreviousProtectionEtag
previousProtectionEtagFromUnitTest
_fetchExistingPCSForProvidedPCSData:
_fetchParentPCSForID:withCompletionHandler:
_clearRecordProtectionDataForRecord
initWithPCSData:encryptedPrivateKey:
setChainPCSData:
setWantsPublicSharingKey:
_createPublicSharingKeyWithError:
setEncryptedPublicSharingKey:
_setSigningPCSIdentity:
setPreviousProtectionEtagFromUnitTest:
zoneProtectionEtag
changedKeys
setDestinationFieldName:
_prepareAsset:recordKey:mergeableDeltaID:record:error:
batchRank
setUploadRank:
prepareStreamingAsset:forUploadWithRecord:
deltasToSave
setLastItemPercentage:
signatureForStreamingAsset
hasModifiedEncryptedData
_wrapEncryptedDataOnRecord:
hasNonLegacyShareURLEntitlement
_wrapEncryptedData:withPCS:forField:recordID:
encryptMetadataTernary
_pretendToWrapEncryptedDataForRecordValueStore:
encryptedValueStore
_wrapEncryptedDataForRecordValueStore:withPCS:
_encryptMergeableDeltasInRecordValueStore:shareProtection:
protectionEtag
modifyHandlerWithRecord:operation:
modifyHandlerForDeleteWithRecordID:operation:
fetchRecordPCSData
assetsWhichNeedRecordFetch
prepareAssetsForUploadWithError:
setPcsGroup:
setIsDelete:
rereferencedAssetArrayByFieldname
setRereferencedAssetArrayByFieldname:
setBatchRank:
setSaveAttempts:
needsRefetch
setNeedsRefetch:
_isDelete
_saveCompletionBlockCalled
_needsRefetch
_didAttemptZoneWideShareKeyRoll
_didRollRecordPCSMasterKey
_saveAttempts
_pcsGroup
_recordPCSData
_sharePCSData
_serverRecord
_rereferencedAssetArrayByFieldname
_batchRank
_sharedZonePCSData
T@"CKRecord",&,N,V_record
TB,N,V_isDelete
T@"NSObject<OS_dispatch_group>",&,N,V_pcsGroup
T@"CKDPCSManager",R,N
T@"CKDPCSCache",R,N
TB,N,V_didRollRecordPCSMasterKey
T@"CKDModifyRecordsOperation",W,N,V_operation
T@"CKDRecordPCSData",&,N,V_recordPCSData
T@"CKDSharePCSData",&,N,V_sharePCSData
T@"CKRecord",&,N,V_serverRecord
TQ,N,V_state
T@"NSMutableDictionary",&,N,V_rereferencedAssetArrayByFieldname
Tq,N,V_batchRank
Ti,N,V_saveAttempts
TB,N,V_saveCompletionBlockCalled
TB,N,V_needsRefetch
T@"CKDZonePCSData",&,N,V_sharedZonePCSData
TB,N,V_didAttemptZoneWideShareKeyRoll
T@"NSDictionary",C,N,V_assetUUIDToExpectedProperties
initWithEncryptedData:changeType:deleteType:
encryptedTupleData
changeType
deleteType
_changeType
_deleteType
_encryptedTupleData
T@"NSData",R,N,V_encryptedTupleData
Ti,R,N,V_changeType
Ti,R,N,V_deleteType
_shareID
_ckAnonymousShareHashIdentifier
T@"CKRecordZoneID",R,N,V_zoneID
T@"CKRecordID",R,N,V_shareID
T@"NSString",C,N,V_ckAnonymousShareHashIdentifier
JSONObjectWithData:options:error:
setHasRadius:
hasRadius
_radius
Td,N,V_radius
exceptionWithName:reason:userInfo:
raise
addPackagePutReceipts:
setMissingAssetStatusRecordID:
setAssetPutReceipt:
packageAssetSizesCount
clearPackageAssetSizes
packageAssetSizeAtIndex:
addPackageAssetSize:
packagePutReceiptsCount
clearPackagePutReceipts
packagePutReceiptsAtIndex:
packagePutReceiptsType
hasMissingAssetStatusRecordID
setRecovered:
setHasRecovered:
hasRecovered
setAssetSize:
setHasAssetSize:
hasAssetSize
hasAssetPutReceipt
packageAssetSizes
setPackageAssetSizes:count:
missingAssetStatusRecordID
recovered
assetSize
assetPutReceipt
packagePutReceipts
setPackagePutReceipts:
_packageAssetSizes
_assetSize
_assetPutReceipt
_missingAssetStatusRecordID
_packagePutReceipts
_recovered
T@"CKDPRecordIdentifier",&,N,V_missingAssetStatusRecordID
TB,N,V_recovered
Tq,N,V_assetSize
T@"NSString",&,N,V_assetPutReceipt
T^q,R,N
T@"NSMutableArray",&,N,V_packagePutReceipts
setAnonymousZoneInfoID:
setAnonymousZoneInfoData:
hasAnonymousZoneInfoID
hasAnonymousZoneInfoData
anonymousZoneInfoID
anonymousZoneInfoData
_anonymousZoneInfoData
_anonymousZoneInfoID
T@"NSString",&,N,V_anonymousZoneInfoID
T@"NSData",&,N,V_anonymousZoneInfoData
method
status
encodeBool:forKey:
decodeObjectOfClasses:forKey:
decodeBoolForKey:
_timestamp
_url
_method
_status
_requestClassName
T@"NSDate",&,N,V_timestamp
T@"NSURL",&,N,V_url
T@"NSString",&,N,V_method
Tq,N,V_status
T@"NSString",&,N,V_requestClassName
setContent:
hasContent
content
_content
T@"NSData",&,N,V_content
weakToStrongObjectsMapTable
notificationHandlers
setWarmingUp:
isWarmingUp
_accountChangeNotificationOperation:
keyEnumerator
accountChangeHandlerQueue
postAccountChangedNotificationToClients
accountChangedToken
setAccountChangedToken:
setNotificationHandlers:
setAccountChangeHandlerQueue:
_warmingUp
_accountChangedToken
_notificationHandlers
_accountChangeHandlerQueue
Ti,N,V_accountChangedToken
T@"NSMapTable",&,N,V_notificationHandlers
T@"NSOperationQueue",&,N,V_accountChangeHandlerQueue
warmingUp
TB,GisWarmingUp,V_warmingUp
previousServerChangeToken
notificationChangedBlock
resultChangedNotifications
notificationID
initWithOperation:serverChangeTokenData:
setResultsLimit:
resultServerChangeTokenData
setResultServerChangeToken:
setMoreComing:
_handleFetchChangesRequestFinished:
setPreviousServerChangeToken:
_moreComing
_notificationChangedBlock
_resultServerChangeToken
_previousServerChangeToken
T@"CKServerChangeToken",&,N,V_previousServerChangeToken
TQ,N,V_resultsLimit
T@"CKServerChangeToken",&,N,V_resultServerChangeToken
TB,N,V_moreComing
T@"<CKFetchNotificationChangesOperationCallbacks>",&,D,N
T@?,C,N,V_notificationChangedBlock
plistURL
requiresProtectionSource
serverResponseIsComplete:requireProtectionSource:
certificateListServerPlist:
certificateTrustPolicy
createTrustEvalFromCertificateList:verifiedWithPolicy:
canVerifySignedPlistValues:withKey:
dateWithTimeIntervalSince1970:
nearestExpirationInCertificateList:
earlierDate:
expirationDateOverride
initWithPublicKey:version:expiration:certificateData:protectionSource:
setVerifiedPublicKey:
verifyData:withSignature:usingKey:
verifyFullIntegers
verifyInteger:withSignature:usingKey:verifyFullInteger:
initWithOperation:plistURL:verifyWithPolicy:
verifiedPublicKey
setRequiresProtectionSource:
setVerifyFullIntegers:
setExpirationDateOverride:
_requiresProtectionSource
_verifyFullIntegers
_verifiedPublicKey
_expirationDateOverride
_plistURL
_certificateTrustPolicy
T@"NSURL",R,N,V_plistURL
T^{__SecPolicy=},R,N,V_certificateTrustPolicy
T@"CKPublicKey",&,V_verifiedPublicKey
TB,N,V_requiresProtectionSource
TB,N,V_verifyFullIntegers
T@"NSDate",&,N,V_expirationDateOverride
handlePublicPushTokenDidUpdate:
addObserver:selector:name:object:
removeObserver:
unitTestingPushTokens
globalConfiguration
tokenRegisterDays:
refreshAllClientsNow:
registerTokenRefreshActivity
initWithOperationInfo:container:operationType:
initWithOperation:apsToken:apsEnvironmentString:bundleID:skipBundleIDCheck:
unregisterTokenForAppContainerAccountTuple:
setPushToken:forAppContainerAccountTuple:
tokenRegistered
_handlePushToken:forContainer:completionBlock:
dateOfLastTokenUpdate
setDateOfLastTokenUpdate:
callbackTimers
pushTokenForAppContainerAccountTuple:filterOldTokens:
callbackBlocks
setTokenRegistered:
_refreshApsToken:container:completionBlock:
sharedClient
unregisterTokenForContainer:outError:
_removeApsToken:appContainerAccountTuple:completionBlock:
unregisterAllTokensForAccountID:outError:
setCachedDSID:forAccountID:
tokenRefreshChanged
unregisterAllTokensForAccountID:completionHandler:
forceTokenRefreshForAllClients
setCallbackBlocks:
setCallbackTimers:
setUnitTestingPushTokens:
_callbackBlocks
_callbackTimers
_unitTestingPushTokens
T@"NSMutableDictionary",&,N,V_callbackBlocks
T@"NSMutableDictionary",&,N,V_callbackTimers
T@"NSMutableDictionary",&,N,V_unitTestingPushTokens
setExportedPCSData:
setShareePublicKeyData:
hasExportedPCSData
hasShareePublicKeyData
shareePublicKeyData
_exportedPCSData
_shareePublicKeyData
T@"NSData",&,N,V_exportedPCSData
T@"NSData",&,N,V_shareePublicKeyData
setCreated:
setHasCreated:
hasCreated
setExpires:
setHasExpires:
hasExpires
created
expires
_created
_expires
TQ,N,V_created
TQ,N,V_expires
hasWrappedInvocationKey
wrappedInvocationKey
_wrappedInvocationKey
T@"NSData",&,N,V_wrappedInvocationKey
containerPrivacySettingsFromPContainerPrivacySettings:
T@"NSArray",&,N,V_containerPrivacySettings
setLastItem:
setHasLastItem:
hasLastItem
lastItem
_lastItem
TB,N,V_lastItem
repairRecordID
setRepairRecordID:
isPackage
setIsPackage:
assetSizes
setAssetSizes:
assetPutReceipts
setAssetPutReceipts:
_isPackage
_repairRecordID
_assetSizes
_assetPutReceipts
T@"CKRecordID",&,N,V_repairRecordID
TB,N,V_isPackage
T@"NSArray",&,N,V_assetSizes
T@"NSArray",&,N,V_assetPutReceipts
_updateMissingAssetStatus
initWithOperation:unrecoveredRepairRecordID:
initWithOperation:recoveredAssetRepairRecordID:size:putReceipt:
initWithOperation:recoveredPackageRepairRecordID:sizes:putReceipts:
fetchOperation
setFetchOperation:
modifyOperation
setModifyOperation:
_fetchOperation
_modifyOperation
T@"CKDFetchRecordsOperation",&,N,V_fetchOperation
T@"CKDModifyRecordsOperation",&,N,V_modifyOperation
setOwnerParticipant:
setCallerParticipant:
hasProtectedFullToken
setHasParticipantPermission:
participantPermissionAsString:
StringAsParticipantPermission:
setParticipantState:
setHasParticipantState:
participantStateAsString:
StringAsParticipantState:
setParticipantType:
setHasParticipantType:
participantTypeAsString:
StringAsParticipantType:
hasRootRecordType
_callerParticipant
_ownerParticipant
_participantPermission
_participantState
_participantType
_protectedFullToken
_rootRecordType
T@"NSData",&,N,V_protectedFullToken
T@"CKDPParticipant",&,N,V_ownerParticipant
T@"CKDPParticipant",&,N,V_callerParticipant
Ti,N,V_participantPermission
Ti,N,V_participantState
Ti,N,V_participantType
T@"CKDPRecordType",&,N,V_rootRecordType
addAttestations:
attestationsCount
clearAttestations
attestationsAtIndex:
attestationsType
attestations
setAttestations:
_attestations
T@"NSMutableArray",&,N,V_attestations
_getLogicalDeviceScopedClientProxyCreatorSynchronous:completionHandler:
logicalDeviceScopedClientProxyCreator
setLogicalDeviceScopedClientProxyCreator:
getLogicalDeviceScopedClientProxyCreatorForTestDeviceReference:synchronous:completionHandler:
getLogicalDeviceScopedClientProxySynchronous:errorHandler:clientProxyHandler:
readBytesOfInMemoryAssetContentWithUUID:offset:length:reply:
throttleBlockingUntilNextRequestWindow
initWithClientConnection:deviceContext:
hasBeenThrottled
setPid:
_hasBeenThrottled
_logicalDeviceScopedClientProxyCreator
Ti,N,V_pid
T@"<CKXPCLogicalDeviceScopedClient>",&,N,V_logicalDeviceScopedClientProxyCreator
TB,V_hasBeenThrottled
setAccountServiceSignedToken:
hasAccountServiceSignedToken
accountServiceSignedToken
_accountServiceSignedToken
T@"NSString",&,N,V_accountServiceSignedToken
hasOperationId
hasOperationGroupId
operationId
operationGroupId
_operationGroupId
_operationId
T@"NSString",&,N,V_operationId
T@"NSString",&,N,V_operationGroupId
Tq,N,V_operationGroupQuantity
transcodeServerHostname
setTranscodeServerHostname:
_transcodeServerHostname
T@"NSString",&,N,V_transcodeServerHostname
Tq,N,V_type
setTranscodeServerPublicKeyURL:
cloudMediaProcessingPublicKeyURLString:
transcodeServerPublicKeyURLs:
transcodeServerPublicKeyURL
publicKeyOfType:withIdentifier:
expiration
setPublicKey:ofType:withIdentifier:
setTranscodeServerPublicKey:
createTranscodeServerTrustPolicy
determineTranscodeServerPublicKeyURL
fetchCachedTranscodePublicKey
transcodeServerPublicKey
fetchRemoteTranscodePublicKey
_transcodeServerPublicKey
_transcodeServerPublicKeyURL
T@"NSString",R,N,V_transcodeServerHostname
T@"NSURL",&,N,V_transcodeServerPublicKeyURL
T@"CKPublicKey",&,V_transcodeServerPublicKey
protocol
invocation
methodSignature
getArgument:atIndex:
numberOfArguments
CKIterateArgumentsForIndexRange:primitiveTypeBlock:objectBlock:blockBlock:
_validateInvocation
invocationWithMethodSignature:
retainArguments
setSelector:
decodeBytesForKey:returnedLength:
setArgument:atIndex:
encodeBytes:length:forKey:
setProtocol:
setInvocation:
isCompletionCallback
setIsCompletionCallback:
_isCompletionCallback
_protocol
_invocation
T@"Protocol",&,N,V_protocol
T@"NSInvocation",&,N,V_invocation
TB,N,V_isCompletionCallback
clearOneofValuesForPayload
setMetadata:
setEncryptedAsset:
hasMetadata
hasEncryptedAsset
payload
setPayload:
setHasPayload:
hasPayload
payloadAsString:
StringAsPayload:
encryptedAsset
_data
_encryptedAsset
_encryptedData
_metadata
_payload
T@"CKDPMergeableDeltaMetadata",&,N,V_metadata
T@"NSData",&,N,V_data
T@"NSData",&,N,V_encryptedData
T@"CKDPAsset",&,N,V_encryptedAsset
Ti,N,V_payload
updateProperties:usingObject:label:
orderAscendingByProperty:
lastUsedTime
assetHandleExistsInDatabase:
assetHandleWithUUID:
saveOrInsert:
saveStatus:
saveChunkCount:
saveLastUsedTime:
oldestLastUsedTime
saveStatusAndChunkCount:
selectProperties:inAssetHandlesWithStatus:error:
interruptedAssetWithSignature:error:
initWithLogicalTableName:
volumeIndex
enumerateEntrieswithBlock:
setVolumeUUID:
_lockedSetVolumeIndex:forVolumeUUID:
deleteObject:
finishInitializing:
volumeIndexForVolumeUUID:
volumeUUIDWithVolumeIndex:
unmountedAssetVolumes
_lock
_volumeUUIDByVolumeIndex
_volumeIndexByVolumeUUID
rebootShouldClearData
assetHandleTable
assetVolumeTable
_assetHandleTable
_assetVolumeTable
T@"CKDAssetHandleTable",R,N,V_assetHandleTable
T@"CKDAssetVolumeTable",R,N,V_assetVolumeTable
setForced:
setEvictNow:
setItemIDsToUnregister:
setAssetHandleItemIDsToDelete:
initWithForced:evictNow:
forced
evictNow
clearRegisteredItems
setClearRegisteredItems:
itemIDsToUnregister
assetHandleItemIDsToDelete
_forced
_evictNow
_clearRegisteredItems
_itemIDsToUnregister
_assetHandleItemIDsToDelete
TB,V_forced
TB,V_evictNow
TB,V_clearRegisteredItems
T@"NSMutableOrderedSet",&,N,V_itemIDsToUnregister
T@"NSMutableOrderedSet",&,N,V_assetHandleItemIDsToDelete
_sharedCachesQueue
_sharedCachesByDirectory
_initWithApplicationBundleID:directoryContext:database:error:
stringByStandardizingPath
stringWithCString:encoding:
stringWithFileSystemRepresentation:length:
didCreateDatabaseTables
updateGroupData:
removeLegacyDatabaseAtPath:
setLogOperations:
mmcsEngineContext
performGroupTransaction:
_evictAllFilesForced:
_evictWithEvictionInfo:
unregisterItemIDsAndDeleteAssetHandlesWithEvictionInfo:
entryWithPrimaryKey:fetchProperties:error:
string
entryEnumerator:
deleteCharactersInRange:
mayHaveAssetCacheManagedFile
deviceIDForVolumeIndex:
descriptionWithStatus:
fileExistsAtPath:isDirectory:
fileDownloadPath
contentsOfDirectoryAtPath:error:
assetHandleWithCachedPath:
attributesOfItemAtPath:error:
unregisterItemsAndDeleteUnregisteredAssetHandlesWithIDs:deleteUnregisteredAssetHandlesWithIDs:
UUIDString
writeToURL:options:error:
_saveData:error:
getFileMetadataAtPath:error:
initWithItemID:UUID:path:
volumeIndexForDeviceID:
setVolumeIndex:
setModTime:
fetchAllProperties:
isEqualRevisionOfAssetHandle:differencesDescription:
isError:withCode:
unregisterDeferredItemIDs:andDeleteAssetHandles:
updateDeferredLastAccessTimeForUUIDs
_scheduleEvictionForDownloadedFiles
_getAssetHandlesForCachedButNotRegisteredMMCSItems:error:
isEqualToNumber:
replaceObjectsInRange:withObjectsFromArray:range:
arrayWithObject:
existingEntriesForRegisterOrPutHandles:volumeIndex:
enumerateAssetHandlesSegregatedByVolume:block:
setProperties:valuesToStore:inEntriesMatching:label:error:predicate:
unionSet:
setLastUsedTime:
deferredDeletedAssetHandles
stringByDeletingLastPathComponent
parseCachedPath:assetHandleUUIDString:assetSignatureString:
initWithUUIDString:
CKDataWithHexString:stringIsUppercase:
parseCachedPath:assetHandleUUID:assetSignature:
isEvictionScheduled
setIsEvictionScheduled:
_evictDownloadedFilesWithEvictionInfo:
scheduledTimerWithTimeInterval:repeats:block:
useModTimeInAssetCacheEviction
laterDate:
evictRecentAssets
assetEvictionGracePeriodWithDefaultValue:
assetEvictionGracePeriodOnHighWatermarkWithDefaultValue:
mayBeEvicted
shouldBeUnregisteredBeforeDeleted
_expireAssetHandlesWithExpiryDate:
_deleteAssetHandlesAndUnregisterItemsForUnmountedAssetVolumes
_resetAssetInflight
openFdForDownloadPath:error:
clearForced:
updateAssetHandlesForChunkedMMCSItems:error:
updateAssetHandlesForGetMMCSItems:error:
updateAssetHandlesForPutMMCSItems:error:
startTrackingRegisterOrPutAssetHandles:operationType:error:
startTrackingGetAssetHandles:operationType:error:
deferredStopTrackingAssetHandlesByItemIDs:
findAssetHandleForItemID:error:
deferredUpdateLastTimeUsedForUUID:
predictedEvictedSizeForAllFilesForced:
assetCacheTableGroup
setOldestLastUsedTime:
setDeferredDeletedAssetHandles:
deferredLastUsedTimeByTrackingUUID
setDeferredLastUsedTimeByTrackingUUID:
_isNewEmptyCache
_isEvictionScheduled
_assetCacheTableGroup
_applicationBundleID
_oldestLastUsedTime
_deferredDeletedAssetHandles
_deferredLastUsedTimeByTrackingUUID
T@"CKSAssetCacheTableGroup",R,N,V_assetCacheTableGroup
T@"NSString",R,N,V_applicationBundleID
TB,V_isEvictionScheduled
TB,V_didDrop
T@"NSDate",&,N,V_oldestLastUsedTime
T@"NSMutableSet",&,N,V_deferredDeletedAssetHandles
T@"NSMutableDictionary",&,N,V_deferredLastUsedTimeByTrackingUUID
T@"CKDMMCS",W,N,V_MMCS
TB,R,N,V_isNewEmptyCache
recordReadySource
ignoreErrors
fetchOrder
initWithAggregator:
performCallback
setFetchOrder:
setRecordReadySource:
setIgnoreErrors:
_ignoreErrors
_fetchOrder
_recordReadySource
TQ,N,V_fetchOrder
Td,R,N,V_startDate
T@"NSObject<OS_dispatch_source>",&,N,V_recordReadySource
TB,N,V_ignoreErrors
fetchAssetContents
fetchMergeableValues
setFetchMergeableValues:
preserveOrdering
assetTransferOptionsByRecordTypeAndKey
forceDecryptionAttempt
setForceDecryptionAttempt:
_fetchAssetContents
_fetchMergeableValues
_preserveOrdering
_forceDecryptionAttempt
_desiredKeys
_assetTransferOptionsByRecordTypeAndKey
TB,N,V_fetchAssetContents
TB,N,V_fetchMergeableValues
TB,N,V_preserveOrdering
T@"NSSet",&,N,V_desiredKeys
T@"NSDictionary",&,N,V_assetTransferOptionsByRecordTypeAndKey
TB,N,V_forceDecryptionAttempt
_recordFetchesAvailable
_flushFetchedRecordsToConsumerLocked
fetchInfosByOrder
highestReturnedOrder
setHighestReturnedOrder:
_performCallbackForFetchInfoLocked:
_flushFetchedRecordsToConsumerOrderedLocked
_flushFetchedRecordsToConsumerNoOrderingLocked
currentFetchOp
useRecordCache
setCurrentFetchOp:
fetchSource
_lockedSendFetchRequest
isMarkedToFinishByParent
setStarted:
_finishRecordFetchAggregator
curFetchOrder
setCurFetchOrder:
containsMergeableValues
_fetchRecord:recordReadyHandle:withRecordCompletion:
_addRecordFetchInfos:
started
setMarkedToFinishByParent:
fetchAggregatorCompletionBlock
setFetchSource:
setFetchGroup:
setFetchInfosByOrder:
_useRecordCache
_started
_markedToFinishByParent
_fetchAggregatorCompletionBlock
_fetchSource
_fetchGroup
_fetchInfosByOrder
_curFetchOrder
_highestReturnedOrder
_currentFetchOp
T@"NSObject<OS_dispatch_source>",&,N,V_fetchSource
T@"NSObject<OS_dispatch_group>",&,N,V_fetchGroup
T@"NSMutableDictionary",&,N,V_fetchInfosByOrder
TQ,V_curFetchOrder
TQ,V_highestReturnedOrder
T@"CKDFetchRecordsOperation",W,N,V_currentFetchOp
TB,V_started
markedToFinishByParent
TB,GisMarkedToFinishByParent,V_markedToFinishByParent
TB,N,V_useRecordCache
T@?,C,N,V_fetchAggregatorCompletionBlock
quotaFetchedBlock
_quotaFetchedBlock
T@?,C,N,V_quotaFetchedBlock
keepAlive
xpcConnectionTimeoutSecondsWithDefaultValue:
initWithActivityDelay:maxActivityDelay:coalescingInterval:processingDelay:notifyBlock:
coalesce:
pointerArrayWithOptions:
addProperty:value:shouldRedact:
CKUnredactedDescription
CKRedactedDescription
setKeepAlive:
mutate:
initWithApplicationBundleIdentifier:applicationBundleIdentifierOverrideForContainerAccess:applicationBundleIdentifierOverrideForNetworkAttribution:applicationBundleIdentifierOverrideForPushTopicGeneration:applicationBundleIdentifierOverrideForTCC:
validateEntitlementsWithSDKVersion:error:
hasSystemLaunchDaemonEntitlement
hasCustomAccountsEntitlement
containerEnvironmentForContainerID:entitlements:
allDeviceContexts
logicalDeviceScopedClientProxyForDeviceContext:
allContainerPointers
addPointer:
systemAvailableQueue
canRunGivenAvailabilityState:
frameworkFingerprint
isLikelyEqual:
containerFromSetupInfo:containerScopedClientProxy:outError:
deviceScopedStateManager
serverReference
dataDirectory
fileURLWithPath:
logicalDeviceScopedClientProxiesByDeviceReference
compact
getProcessScopedClientProxyCreatorWithCompletionHandler:
getLogicalDeviceScopedClientProxyCreatorForTestDeviceReference:completionHandler:
CKDescribePropertiesUsing:
CKShortDescriptionRedact:
noteClientProcessScopedMetadata:
getContainerScopedDaemonProxyCreatorForSetupInfo:containerScopedClientProxy:completionHandler:
getLogicalDeviceScopedDaemonProxyCreatorForTestDeviceReference:completionHandler:
getProcessScopedDaemonProxyCreatorWithCompletionHandler:
getTestAdminDaemonProxyCreatorWithCompletionHandler:
redactedDescription
connection:handleInvocation:isReply:
setXpcConnection:
setProcessScopedClientProxy:
setSharedContainers:
activityCoalescer
setLogicalDeviceScopedClientProxiesByDeviceReference:
setAllDeviceContexts:
setAllContainerPointers:
setSystemAvailableQueue:
_xpcConnection
_sharedContainers
_keepAlive
_activityCoalescer
_logicalDeviceScopedClientProxiesByDeviceReference
_allDeviceContexts
_allContainerPointers
_systemAvailableQueue
T@"NSXPCConnection",&,N,V_xpcConnection
TQ,N,V_keepAlive
T@"CKCoalescer",R,N,V_activityCoalescer
T@"CKDProcessScopedClientProxy",&,N,V_processScopedClientProxy
T@"NSMutableDictionary",&,N,V_logicalDeviceScopedClientProxiesByDeviceReference
T@"NSMutableSet",&,N,V_allDeviceContexts
T@"NSHashTable",&,N,V_sharedContainers
T@"NSPointerArray",&,N,V_allContainerPointers
T@"NSOperationQueue",&,N,V_systemAvailableQueue
APIToken
setAPIToken:
setWebAuthToken:
setTokenFetchedBlock:
_webAuthToken
_APIToken
T@"NSString",C,N,V_webAuthToken
T@"NSString",C,N,V_APIToken
T@"<CKFetchWebAuthTokenOperationCallbacks>",&,D,N
encryptedAnonymousShareHashToRemoveByRequestID
setEncryptedAnonymousShareHashToRemoveByRequestID:
_encryptedAnonymousShareHashToRemoveByRequestID
T@"NSMutableDictionary",&,N,V_encryptedAnonymousShareHashToRemoveByRequestID
setErrorInternal:
setExtensionError:
setAuxiliaryError:
setHasRetryAfterSeconds:
hasErrorInternal
errorInternal
_auxiliaryError
_clientError
_errorDescription
_errorInternal
_errorKey
_extensionError
_retryAfterSeconds
_serverError
T@"CKDPResponseOperationResultErrorClient",&,N,V_clientError
T@"CKDPResponseOperationResultErrorServer",&,N,V_serverError
T@"CKDPResponseOperationResultErrorExtension",&,N,V_extensionError
T@"CKDPResponseOperationResultErrorAuxiliaryError",&,N,V_auxiliaryError
Ti,N,V_retryAfterSeconds
T@"NSString",&,N,V_errorDescription
T@"NSString",&,N,V_errorKey
T@"NSString",&,N,V_errorInternal
refCount
errorWithCode:error:path:format:
setMMCSEngine:
enableMMCSMetricsWithDefaultValue:
setMaxChunkCountForSection:
_setupMMCSEngineWithError:
sharedContextsByPath
incRefCount
initWithApplicationBundleID:path:
_setupMMCSEngineWithRetryCount:error:
decRefCount
_tearDownMMCSEngine
removeIndex:
cancelRequestWithContext:
MMCSSerializeAsyncRecursive:
nextAvailableItemID
stopTrackingItemID:
setRefCount:
setApplicationBundleID:
inMemoryItemsIDs
setInMemoryItemsIDs:
_mmcsQueue
_serializedThread
_maxChunkCountForSection
_refCount
_MMCSEngine
_inMemoryItemsIDs
Tq,N,V_refCount
Tq,N,V_state
T^{_mmcs_engine=},N,V_MMCSEngine
T@"NSString",&,N,V_applicationBundleID
T@"NSString",&,N,V_path
TI,N,V_maxChunkCountForSection
T@"NSMutableIndexSet",&,N,V_inMemoryItemsIDs
updateProgressForItemID:state:progress:error:
didGetItemID:signature:path:error:results:
updateProgressForItemID:state:progress:results:
didPutItemID:signature:results:
didGetMetricsForRequest:
getMMCSItemReaderForItemID:error:
updateProgressForPackageSectionState:progress:results:
didPutSectionWithSignature:results:
itemGroupContext:willGetMMCSItemReaderForItemID:
itemGroupContext:didGetItemReader:itemID:
itemGroupContext:willOpenItemReaderWriter:error:
itemGroupContext:didOpenItemReaderWriter:result:error:
itemGroupContext:willCloseItemReaderWriter:error:
itemGroupContext:didCloseItemReaderWriter:result:error:
itemGroupContext:willGetFileMetadataItemReaderWriter:error:
itemGroupContext:didGetFileMetadataItemReaderWriter:fileMetadata:error:
itemGroupContext:willReadFromItemReaderWriter:offset:bytes:length:bytesRead:error:
itemGroupContext:didReadFromItemReaderWriter:offset:bytes:length:bytesRead:error:
_setupMMCSItemsWithError:
startBlock
MMCSItemsByItemID
_startTrackingMMCSItems:
shouldFetchAssetContentInMemory
_setupRegisterMMCSItemsWithError:
_setupPutMMCSItemsWithError:
_setupGetMMCSItemsWithError:
_setupPutContentMetadataMMCSItemsWithError:
_cleanupMMCSRegisterItems
_stopTrackingMMCSItems:
progressBlock
_cleanupMMCSItems
MMCSPackageSectionItem
commandBlock
shouldFetchAssetContentUsingAssetDownloadStagingManager
moveItemAtPath:toPath:error:
conformingOperation
willCloseItemReaderWriter:error:
didCloseItemReaderWriter:result:error:
willGetFileMetadataItemReaderWriter:error:
didGetFileMetadataItemReaderWriter:fileMetadata:error:
willReadFromItemReaderWriter:offset:bytes:length:bytesRead:error:
didReadFromItemReaderWriter:offset:bytes:length:bytesRead:error:
shouldFetchAssetContentWithReaderWriter
hasConformingOperation
setHasConformingOperation:
setItemGroup:
setCommandBlock:
setStartBlock:
setMMCSItemsByItemID:
_hasConformingOperation
_itemGroup
_progressBlock
_commandBlock
_startBlock
_MMCSPackageSectionItem
_MMCSItemsByItemID
T@"NSNumber",&,N,V_hasConformingOperation
T@"CKDMMCSItemGroup",&,N,V_itemGroup
T@?,C,N,V_progressBlock
T@?,C,N,V_commandBlock
T@?,C,N,V_startBlock
T@"CKDMMCSItem",&,N,V_MMCSPackageSectionItem
T@"NSMapTable",&,N,V_MMCSItemsByItemID
T@,&,N,V_operationInfo
chunkProfileConfigurationVersion:
chunkProfileConfigurationFileExtensionToProfileMap:
chunkProfileConfigurationDefaultProfilePolicy:
setHasIndex:
setHasIsReversed:
hasIsReversed
_index
_isReversed
Ti,N,V_index
TB,N,V_isReversed
_preflightRecords
_serialize
serializeCompletionBlock
setShouldModifyRecordsInDatabase:
pRecordFromRecord:
setSaveRecords:
setDeleteRecordids:
setAssociatedMergeableDeltas:
_serializeCompletionBlock
T@"NSArray",&,N,V_recordsToSave
T@"NSArray",&,N,V_recordIDsToDelete
T@"NSData",&,V_serializedModifications
T@"<CKSerializeRecordModificationsOperationCallbacks>",&,D,N
T@?,C,N,V_serializeCompletionBlock
dataWithJSONObject:options:error:
initWithSqliteRepresentation:
setApplicationBundleIdentifier:
setApplicationBundleIdentifierOverrideForPushTopicGeneration:
setApplicationBundleIdentifierOverrideForTCC:
_applicationBundleIdentifier
_applicationBundleIdentifierOverrideForContainerAccess
_applicationBundleIdentifierOverrideForNetworkAttribution
_applicationBundleIdentifierOverrideForPushTopicGeneration
_applicationBundleIdentifierOverrideForTCC
T@"NSString",C,N,V_applicationBundleIdentifier
T@"NSString",C,N,V_applicationBundleIdentifierOverrideForContainerAccess
T@"NSString",C,N,V_applicationBundleIdentifierOverrideForNetworkAttribution
T@"NSString",C,N,V_applicationBundleIdentifierOverrideForPushTopicGeneration
T@"NSString",C,N,V_applicationBundleIdentifierOverrideForTCC
bindText:atIndex:
ck_bindInStatement:atIndex:
setShareIdentifier:
hasShareIdentifier
setChangeType:
setHasChangeType:
hasChangeType
changeTypeAsString:
StringAsChangeType:
shareIdentifier
_shareIdentifier
T@"CKDPShareIdentifier",&,N,V_shareIdentifier
Ti,N,V_changeType
addParticipant:
addPotentialMatch:
addInvitedKeyToRemove:
setInvitedPcs:
participantsCount
clearParticipants
participantAtIndex:
setShortTokenRoutingKey:
clearPotentialMatchs
potentialMatchAtIndex:
invitedKeyToRemovesCount
clearInvitedKeyToRemoves
invitedKeyToRemoveAtIndex:
setOrigin:
potentialMatchType
invitedKeyToRemoveType
setPublicAccess:
setHasPublicAccess:
hasPublicAccess
publicAccessAsString:
StringAsPublicAccess:
hasInvitedPcs
hasShortTokenRoutingKey
publisherModel
setPublisherModel:
setHasPublisherModel:
hasPublisherModel
anonymousPublicAccess
setAnonymousPublicAccess:
setHasAnonymousPublicAccess:
hasAnonymousPublicAccess
hasDisplayedHostname
publisherModelType
setPublisherModelType:
setHasPublisherModelType:
hasPublisherModelType
publisherModelTypeAsString:
StringAsPublisherModelType:
participantSelfRemovalBehavior
setParticipantSelfRemovalBehavior:
setHasParticipantSelfRemovalBehavior:
hasParticipantSelfRemovalBehavior
participantSelfRemovalBehaviorAsString:
StringAsParticipantSelfRemovalBehavior:
hasOrigin
invitedPcs
setParticipants:
shortTokenRoutingKey
setPotentialMatchs:
invitedKeyToRemoves
setInvitedKeyToRemoves:
origin
_invitedKeyToRemoves
_invitedPcs
_origin
_participantSelfRemovalBehavior
_participants
_potentialMatchs
_publicAccess
_publisherModelType
_shortTokenRoutingKey
_anonymousPublicAccess
_publisherModel
Ti,N,V_publicAccess
T@"CKDPProtectionInfo",&,N,V_invitedPcs
T@"NSMutableArray",&,N,V_participants
T@"NSString",&,N,V_shortTokenRoutingKey
T@"NSMutableArray",&,N,V_potentialMatchs
T@"NSMutableArray",&,N,V_invitedKeyToRemoves
TB,N,V_publisherModel
TB,N,V_anonymousPublicAccess
T@"NSString",&,N,V_displayedHostname
Ti,N,V_publisherModelType
Ti,N,V_participantSelfRemovalBehavior
T@"NSString",&,N,V_origin
applicationBundleIDs
setApplicationBundleIDs:
_applicationBundleIDs
_discoverable
T@"CKContainerID",C,N,V_containerID
T@"NSSet",C,N,V_applicationBundleIDs
Tq,N,V_discoverable
setEnabledPermissions:
setContainerIDs:
T@"NSArray",C,N,V_containerPrivacySettings
cloudKitToken
initWithAccountType:
setUsername:
setCredential:
backingExplicitCredentialsAccount
setFakeCKAccount:
aa_updateTokensWithProvisioningResponse:
setBackingExplicitCredentialsAccount:
_backingExplicitCredentialsAccount
T@"CKDBackingExplicitCredentialsAccount",W,N,V_backingExplicitCredentialsAccount
appleAccount
_setUpExplicitCredentialsAccountShenanigans
sharedAccountStore
initWithPassword:
setAppleAccount:
ckAccount
aa_updatePropertiesForAppleAccount:completion:
setAccountProperty:forKey:
propertiesForDataclass:
setProperties:forDataclass:
_initExplicitCredentialsAccountWithEmail:password:propertyOverrides:overridesByDataclass:
_initExplicitCredentialsAccountWithEmail:password:
credential
_checkAndLogIfAccountError
aa_password
_setPassword:
fakeCKAccount
deviceCountForAccount:ignoreCache:completionHandler:
_setOverridesOnVettingContext:
_fakeCKAccount
T@"ACAccount",&,N,V_fakeCKAccount
setAnonymousZoneInfo:
setDeleteType:
setHasDeleteType:
hasDeleteType
deleteTypeAsString:
StringAsDeleteType:
setIsAnonymous:
setHasIsAnonymous:
hasIsAnonymous
hasAnonymousZoneInfo
isAnonymous
anonymousZoneInfo
_anonymousZoneInfo
_isAnonymous
Ti,N,V_deleteType
TB,N,V_isAnonymous
T@"CKDPAnonymousZoneInfo",&,N,V_anonymousZoneInfo
hasLanguageCode
hasRegionCode
_languageCode
_regionCode
T@"NSString",&,N,V_languageCode
T@"NSString",&,N,V_regionCode
handleDiscretionaryOperationShouldStart:nonDiscretionary:error:
handleDiscretionaryOperationShouldSuspend
callbackProtocol
CKInvokeAndNilOutReplyBlockWithError:forProtocol:
setCallbackProtocol:
_callbackProtocol
T@"Protocol",&,N,V_callbackProtocol
setOperationID:
completionSelector
setCompletionSelector:
setOperationInfoCache:
_operationID
_completionSelector
_operationInfoCache
T@"NSString",C,N,V_operationID
T:,N,V_completionSelector
T@"CKDOperationInfoCache",&,N,V_operationInfoCache
requestLocalSerializations
requestLocalEnvelopes
dataProtectionType
permittedRemoteMeasurement
trustedTargetDomain
trustedTargetOID
shouldSendRecordPCSKeys
_checkShouldSendRecordPCSKeys
_getSerializedRequest
_invokeLocalFunction
_invokeFunction
_getDeserializedRecords
pccKey
encrypt:
trustedTargetKey
initForReadingFromData:error:
setRequestRecords:
setAlwaysFetchPCSFromServer:
_prepareForProtectedCloudCompute
_prepareForTrustedTargetEncryption
setPccKey:
getUUIDBytes:
initWithCertificate:applicationEnclaveQuote:quotingEnclaveQuote:routingToken:
initWithKey:permittedRemoteMeasurement:attestation:
setPccWrappedKeys:
setTrustedTargetKey:
setTrustedTargetWrappedKey:
allowCloudMediaProcessingOffloadForGM:
encryptData:
requestRecords
setObject:atIndexedSubscript:
clear
replaceLocalSerializationsBlobs
setSerializedArguments:
serializedArguments
pccWrappedKeys
trustedTargetWrappedKey
setSerializedResponse:
hasMessage
message
hasAuxiliaryDomain
auxiliaryDomain
hasAuxiliaryCode
auxiliaryCode
auxiliaryUserInfosCount
auxiliaryUserInfos
initialResponseReceivedCallback
serializedResponse
setResponseRecords:
responseRecords
recordFetchProgressBlock
recordFetchCommandBlock
replaceWireSerializations
componentsWithString:
applyDefaultParametersToServiceURLComponents:
codeServiceURLByContainerAndServiceEntitlement
URLFromEntitlementString:
codeServiceURLByServiceEntitlement
codeServiceURLEntitlement
clientRuntimeProvidedServiceURL
hasExplicitCodeOperationURLEntitlement
legacyIsLocalBit
entitlementURLForServiceName:container:
setRequestLocalEnvelopes:
setTrustedTargetDomain:
setTrustedTargetOID:
_shouldSendRecordPCSKeys
_shouldFetchAssetContentInMemory
_replaceLocalSerializationsBlobs
_initialResponseReceivedCallback
_replaceWireSerializations
_recordFetchProgressBlock
_recordFetchCommandBlock
_pccKey
_pccWrappedKeys
_requestLocalSerializations
_requestLocalEnvelopes
_dataProtectionType
_permittedRemoteMeasurement
_trustedTargetDomain
_trustedTargetOID
_trustedTargetKey
_trustedTargetWrappedKey
_requestRecords
_serializedArguments
_serializedResponse
_responseRecords
T@"NSString",R,C,N,V_serviceName
T@"NSString",R,C,N,V_functionName
T@"PCCKey",&,N,V_pccKey
T@"NSArray",&,N,V_pccWrappedKeys
T@"NSArray",C,N,V_requestLocalSerializations
T@"NSArray",C,N,V_requestLocalEnvelopes
TQ,N,V_dataProtectionType
T@"NSData",C,N,V_permittedRemoteMeasurement
TB,N,V_shouldSendRecordPCSKeys
T@"NSString",C,N,V_trustedTargetDomain
T@"NSString",C,N,V_trustedTargetOID
T@"CKDTrustedTargetKey",&,N,V_trustedTargetKey
T@"CKDTrustedTargetWrappedKey",&,N,V_trustedTargetWrappedKey
TB,N,V_shouldFetchAssetContentInMemory
T@"NSArray",C,N,V_requestRecords
T@"NSData",C,N,V_serializedArguments
T@"NSData",C,N,V_serializedResponse
T@"NSArray",C,N,V_responseRecords
T@"<CKCodeOperationCallbacks>",&,D,N
T@?,C,N,V_replaceLocalSerializationsBlobs
T@?,C,N,V_initialResponseReceivedCallback
T@?,C,N,V_replaceWireSerializations
T@?,C,N,V_recordFetchProgressBlock
T@?,C,N,V_recordFetchCommandBlock
hasDelta
delta
_delta
T@"CKDPMergeableDelta",&,N,V_delta
addRecordTypes:
mutationTriggersCount
clearMutationTriggers
mutationTriggersAtIndex:
addMutationTriggers:
setNotification:
recordTypesCount
clearRecordTypes
recordTypesAtIndex:
recordTypesType
evaluationType
setEvaluationType:
setHasEvaluationType:
hasEvaluationType
evaluationTypeAsString:
StringAsEvaluationType:
setHasOwner:
ownerAsString:
StringAsOwner:
mutationTriggers
setMutationTriggers:count:
mutationTriggersAsString:
StringAsMutationTriggers:
hasNotification
setFireOnce:
setHasFireOnce:
hasFireOnce
notification
recordTypes
setRecordTypes:
fireOnce
_mutationTriggers
_evaluationType
_notification
_recordTypes
_fireOnce
Ti,N,V_evaluationType
Ti,N,V_owner
T^i,R,N
T@"CKDPSubscriptionNotification",&,N,V_notification
T@"NSMutableArray",&,N,V_recordTypes
TB,N,V_fireOnce
anyObject
itemsByGroupTuple
setItemsByGroupTuple:
_itemsByGroupTuple
T@"NSMutableDictionary",&,N,V_itemsByGroupTuple
T@"NSError",R,N
hasInsertIntoList
hasDeleteListRange
hasReplaceListRange
insertIntoList
deleteListRange
replaceListRange
_deleteListRange
_insertIntoList
_replaceListRange
T@"CKDPFieldActionInsertIntoList",&,N,V_insertIntoList
T@"CKDPFieldActionDeleteListRange",&,N,V_deleteListRange
T@"CKDPFieldActionReplaceListRange",&,N,V_replaceListRange
addZoneSummary:
addAnonymousZoneInfo:
zoneSummarysCount
clearZoneSummarys
zoneSummaryAtIndex:
anonymousZoneInfosCount
clearAnonymousZoneInfos
anonymousZoneInfoAtIndex:
zoneSummaryType
anonymousZoneInfoType
zoneSummarys
setZoneSummarys:
anonymousZoneInfos
setAnonymousZoneInfos:
_anonymousZoneInfos
_zoneSummarys
T@"NSMutableArray",&,N,V_zoneSummarys
T@"NSMutableArray",&,N,V_anonymousZoneInfos
addChangedRecord:
addChangedShare:
addChangedDeltas:
addSyncObligations:
changedRecordsCount
clearChangedRecords
changedRecordAtIndex:
changedSharesCount
clearChangedShares
changedShareAtIndex:
changedDeltasCount
clearChangedDeltas
changedDeltasAtIndex:
syncObligationsCount
clearSyncObligations
syncObligationsAtIndex:
changedRecordType
changedShareType
changedDeltasType
syncObligationsType
setHasStatus:
hasStatus
statusAsString:
StringAsStatus:
setPendingArchivedRecords:
setHasPendingArchivedRecords:
hasPendingArchivedRecords
changedRecords
setChangedRecords:
changedShares
setChangedShares:
pendingArchivedRecords
changedDeltas
setChangedDeltas:
syncObligations
setSyncObligations:
_changedDeltas
_changedRecords
_changedShares
_syncObligations
_pendingArchivedRecords
T@"NSMutableArray",&,N,V_changedRecords
Ti,N,V_status
T@"NSMutableArray",&,N,V_changedShares
TB,N,V_pendingArchivedRecords
T@"NSMutableArray",&,N,V_changedDeltas
T@"NSMutableArray",&,N,V_syncObligations
isReadableFileAtPath:
inputStreamWithFileAtPath:
initWithStream:
setClassOfNextMessage:
nextMessage
initWithFileURL:
setSectionIndex:
performTransactionBlock:
packageInClientWithBasePath:error:
fileExistsAtPath:
writeToFile:options:error:
isWritableFileAtPath:
outputStreamToFileAtPath:append:
initWithOutputStream:
writeMessage:
packageInClientWithBasePath:contentsOfFile:error:
T@"CKCDPErrorUserInfoValue",&,N,V_value
realOperation
targetOperationQueue
_realOperation
_targetOperationQueue
T@"CKDOperation",R,N,V_realOperation
T@"NSOperationQueue",R,N,V_targetOperationQueue
T@"CKDContainer",R,W,N
copyServiceIdentityWithError:
myPCSIdentity
CKHexString
setIdentityInfo:
setServiceIdentityInfo:
notFoundZoneIDs
initWithOperation:recordZoneIDs:
_handleRecordZoneFetch:zoneID:responseCode:
setRecordZoneFetchedBlock:
setErrorFetchingAllRecordZonesBlock:
identityStatus
setIdentityStatus:
invalidPCSByZoneID
setInvalidPCSByZoneID:
validPCSByZoneID
setValidPCSByZoneID:
setPcsDiagnosticInfo:
_identityStatus
_invalidPCSByZoneID
_validPCSByZoneID
_pcsDiagnosticInfo
T@"NSString",&,N,V_identityStatus
T@"NSDictionary",&,N,V_invalidPCSByZoneID
T@"NSDictionary",&,N,V_validPCSByZoneID
T@"CKPCSDiagnosticInformation",&,N,V_pcsDiagnosticInfo
logTypes
hasLogType:
hasOnlyLogType:
_initFilterDict
subsystem
process
setLogTypes:
categoriesBySubsystem
setCategoriesBySubsystem:
_simulatorMessagesOnly
_logTypes
_categoriesBySubsystem
TQ,N,V_logTypes
T@"NSDictionary",&,N,V_categoriesBySubsystem
TB,N,V_simulatorMessagesOnly
addUploads:
uploadsCount
clearUploads
uploadsAtIndex:
uploadsType
hasAuthPutRequest
authPutType
setHasAuthPutType:
hasAuthPutType
authPutTypeAsString:
StringAsAuthPutType:
uploads
_authPutType
_uploads
T@"NSMutableArray",&,N,V_uploads
Ti,N,V_authPutType
shouldDropAllConfigurations
_reallyDropAllConfigurations
setSwitchNotifSource:
switchNotifSource
wipeAllConfigurations
_watchForSwitchPrefFileChanges
notificationQueue
globalConfigurationOps
configurationQueue
setConfigurationFetchedGroup:
propertyQueue
configuration
setGlobalConfiguration:
configurationFetchedGroup
isExpired
_uniqueStringForContainer:
containerSpecificInfoOperations
containerSpecificInfoQueue
setContainerServerInfo:forContainerID:accountID:
containerSpecificInfos
infoFetchedGroup
_fetchGlobalConfigForOperation:completionHandler:
containerServerInfoForContainerID:accountID:
_fetchContainerSpecificInfoForOperation:requireUserIDs:completionHandler:
expungeAllData
setShouldDropAllConfigurations:
isEqualToDictionary:
setAdditionalServiceDetailsForApplicationIdentifiers:usingContentsOfDictionary:completionHandler:
iCloudAppSiteAssociationData
_writeOutiCloudAppSiteAssociationData:
setConfigurationQueue:
setNotificationQueue:
setGlobalConfigurationOps:
setContainerSpecificInfoQueue:
setContainerSpecificInfos:
setContainerSpecificInfoOperations:
setPropertyQueue:
iCloudEnvNotifToken
setICloudEnvNotifToken:
_shouldDropAllConfigurations
_iCloudEnvNotifToken
_switchNotifSource
_configurationQueue
_notificationQueue
_globalConfiguration
_globalConfigurationOps
_containerSpecificInfoQueue
_containerSpecificInfos
_containerSpecificInfoOperations
_propertyQueue
T@"NSObject<OS_dispatch_source>",&,N,V_switchNotifSource
T@"NSOperationQueue",&,N,V_configurationQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_notificationQueue
T@"CKDServerConfiguration",&,N,V_globalConfiguration
T@"NSMutableSet",&,N,V_globalConfigurationOps
T@"NSOperationQueue",&,N,V_containerSpecificInfoQueue
T@"NSMutableDictionary",&,N,V_containerSpecificInfos
T@"NSMutableDictionary",&,N,V_containerSpecificInfoOperations
T@"NSObject<OS_dispatch_queue>",&,N,V_propertyQueue
Ti,N,V_iCloudEnvNotifToken
TB,N,V_shouldDropAllConfigurations
addQueryResults:
queryResultsCount
clearQueryResults
queryResultsAtIndex:
queryResultsType
setQueryResults:
_queryResults
T@"NSMutableArray",&,N,V_queryResults
hasEmailAddress
hasPhoneNumber
_emailAddress
_phoneNumber
T@"NSString",&,N,V_emailAddress
T@"NSString",&,N,V_phoneNumber
addFileSignature:
addReferenceSignature:
setBrokenAssetRecordID:
fileSignaturesCount
clearFileSignatures
fileSignatureAtIndex:
referenceSignaturesCount
clearReferenceSignatures
referenceSignatureAtIndex:
setAffectedRecordType:
fileSignatureType
referenceSignatureType
hasBrokenAssetRecordID
setListIndex:
setHasListIndex:
hasListIndex
setHasIsPackage:
hasIsPackage
hasAffectedRecordType
setSkipWriteMissingAssetStatusRecord:
setHasSkipWriteMissingAssetStatusRecord:
hasSkipWriteMissingAssetStatusRecord
brokenAssetRecordID
listIndex
fileSignatures
setFileSignatures:
referenceSignatures
setReferenceSignatures:
affectedRecordType
skipWriteMissingAssetStatusRecord
_affectedRecordType
_brokenAssetRecordID
_fileSignatures
_listIndex
_referenceSignatures
_skipWriteMissingAssetStatusRecord
T@"CKDPRecordIdentifier",&,N,V_brokenAssetRecordID
Ti,N,V_listIndex
T@"NSMutableArray",&,N,V_fileSignatures
T@"NSMutableArray",&,N,V_referenceSignatures
T@"NSString",&,N,V_affectedRecordType
TB,N,V_skipWriteMissingAssetStatusRecord
sourceZoneIDs
_fetchZonePCS
_prepareTargetZonePCS
_saveTargetZone
_sychronizeUserKeyRegistryIfNeeded
isHandlingRetryableError
zoneWaitingOnKeyRegistrySync
_setPermanentFailure
_fetchPCSDataForZoneID:
zonePCSDataByZoneID
_handleZoneSavedWithID:responseCode:
setCurrentError:
setZoneWaitingOnKeyRegistrySync:
setIsHandlingRetryableError:
currentError
setSourceZoneIDs:
setZonePCSDataByZoneID:
_isHandlingRetryableError
_sourceZoneIDs
_zonePCSDataByZoneID
_currentError
_zoneWaitingOnKeyRegistrySync
T@"NSArray",&,N,V_sourceZoneIDs
T@"CKRecordZone",&,N,V_targetZone
T@"NSMutableDictionary",&,N,V_zonePCSDataByZoneID
TB,V_isHandlingRetryableError
T@"NSError",&,V_currentError
Tq,N,V_numZoneSaveAttempts
T@"CKRecordZoneID",&,N,V_zoneWaitingOnKeyRegistrySync
infosToDiscover
pAliasWithIdentityLookupInfo:
initWithRecordName:
initWithUserRecordID:
setGivenName:
setFamilyName:
setHasiCloudAccount:
shouldReportMissingIdentity
wantsProtectionInfo
setWantsProtectionInfo:
setInfosToDiscover:
submittedInfos
setSubmittedInfos:
_wantsProtectionInfo
_infosToDiscover
_submittedInfos
T@"NSArray",&,N,V_infosToDiscover
T@"NSMutableDictionary",&,N,V_submittedInfos
TB,N,V_wantsProtectionInfo
configBaseURL
initWithValues:
setExpiry:
setConfiguration:
_configuration
T@"CKDServerConfiguration",&,N,V_configuration
tokenFetchedBlock
_tokenFetchedBlock
T@?,C,N,V_tokenFetchedBlock
setDownloadToken:
setDownloadRequest:
setDownloadBaseURL:
setAssetAuthorizationResponseUUID:
setReservedVoucher:
hasDownloadToken
hasDownloadRequest
hasContentBaseURL
hasRequestor
hasDownloadBaseURL
setDownloadURLExpiration:
setHasDownloadURLExpiration:
hasDownloadURLExpiration
setHasDownloadTokenExpiration:
hasDownloadTokenExpiration
hasClearAssetKey
hasAssetAuthorizationResponseUUID
hasConstructedAssetDownloadURL
setConstructedAssetDownloadURLExpiration:
setHasConstructedAssetDownloadURLExpiration:
hasConstructedAssetDownloadURLExpiration
setConstructedAssetDownloadEstimatedSize:
setHasConstructedAssetDownloadEstimatedSize:
hasConstructedAssetDownloadEstimatedSize
hasReservedVoucher
downloadRequest
downloadBaseURL
downloadURLExpiration
assetAuthorizationResponseUUID
constructedAssetDownloadURLExpiration
constructedAssetDownloadEstimatedSize
reservedVoucher
_constructedAssetDownloadEstimatedSize
_constructedAssetDownloadURLExpiration
_downloadURLExpiration
_assetAuthorizationResponseUUID
_downloadBaseURL
_downloadRequest
_downloadToken
_reservedVoucher
T@"NSString",&,N,V_downloadToken
T@"NSData",&,N,V_downloadRequest
T@"NSString",&,N,V_contentBaseURL
T@"NSString",&,N,V_downloadBaseURL
Tq,N,V_downloadURLExpiration
Tq,N,V_downloadTokenExpiration
T@"NSString",&,N,V_assetAuthorizationResponseUUID
T@"NSString",&,N,V_constructedAssetDownloadURL
Tq,N,V_constructedAssetDownloadURLExpiration
Tq,N,V_constructedAssetDownloadEstimatedSize
T@"CKDPReservedVoucher",&,N,V_reservedVoucher
setInviterId:
setOutOfNetworkPrivateKey:
setAcceptedTimestampDate:
setInviteTimestampDate:
hasUserId
setHasState:
hasState
stateAsString:
StringAsState:
hasInviterId
setHasCreatedInProcess:
hasCreatedInProcess
setAcceptTimestamp:
setHasAcceptTimestamp:
hasAcceptTimestamp
hasOutOfNetworkPrivateKey
setOutOfNetworkKeyType:
setHasOutOfNetworkKeyType:
hasOutOfNetworkKeyType
hasAcceptedTimestampDate
setIsOrgUser:
setHasIsOrgUser:
hasIsOrgUser
hasProtectionInfoPublicKey
keyHealth
setKeyHealth:
setHasKeyHealth:
hasKeyHealth
keyHealthAsString:
StringAsKeyHealth:
hasInviteTimestampDate
setHasIsAnonymousInvitedParticipant:
hasIsAnonymousInvitedParticipant
inviterId
acceptTimestamp
outOfNetworkKeyType
acceptedTimestampDate
isOrgUser
inviteTimestampDate
isAnonymousInvitedParticipant
_acceptTimestamp
_acceptedTimestampDate
_inviteTimestampDate
_inviterId
_keyHealth
_outOfNetworkKeyType
_outOfNetworkPrivateKey
_protectionInfoPublicKey
_userId
_createdInProcess
_isAnonymousInvitedParticipant
_isOrgUser
T@"CKDPIdentifier",&,N,V_participantId
T@"CKDPIdentifier",&,N,V_userId
Ti,N,V_state
T@"CKDPIdentifier",&,N,V_inviterId
TB,N,V_createdInProcess
Tq,N,V_acceptTimestamp
T@"NSData",&,N,V_outOfNetworkPrivateKey
Ti,N,V_outOfNetworkKeyType
T@"CKDPDate",&,N,V_acceptedTimestampDate
TB,N,V_isOrgUser
T@"NSData",&,N,V_protectionInfoPublicKey
Ti,N,V_keyHealth
T@"CKDPDate",&,N,V_inviteTimestampDate
TB,N,V_isAnonymousInvitedParticipant
lastAttemptDate
setLastAttemptDate:
setRetryNumber:
_lastAttemptDate
_retryNumber
T@"NSDate",&,N,V_lastAttemptDate
T@"NSNumber",&,N,V_retryNumber
performWithDelegate:
T@"<CKDOperationInfoDelegate>",W,N,V_delegate
setUserVersion:
setObjectClassPrefix:
cacheQueue
cacheDelegateQueue
delegateWrappersByOperationID
isInvalidated
wasUnexpectedlyUnregisteredForOperationID:
operationWithID:receivedCallback:
_locked_enumerateCallbacksForOperationWithID:usingBlock:
select:from:where:bindings:
selectFrom:where:bindings:orderBy:limit:block:
performDatabaseOperation:
CKNilIfLengthZero
deleteFrom:where:bindings:
equalityClauseAndBindingsForDict:
insertOrReplaceInto:values:
_lockedSetOperationInfo:forOperationID:appContainerAccountTuple:
_locked_operationInfoForID:
_lockedArchiveCallback:forOperationID:
selectAllFrom:where:bindings:
expungeOperationInfoForDeletedAccountID:
registerDelegate:forOperationWithID:
unregisterDelegate:forOperationWithID:
enumerateCallbacksForOperationWithID:usingBlock:
resumableOperationInfosByAppContainerAccountTuplesWithProgressPurged:
registerCacheEvictionActivity
setCacheQueue:
setCacheDelegateQueue:
setDelegateWrappersByOperationID:
_cacheQueue
_cacheDelegateQueue
_delegateWrappersByOperationID
T@"NSObject<OS_dispatch_queue>",&,N,V_cacheQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_cacheDelegateQueue
T@"NSMutableDictionary",&,N,V_delegateWrappersByOperationID
_configurationFetchedGroup
T@"NSObject<OS_dispatch_group>",&,N,V_configurationFetchedGroup
_left
_right
T@"CKDPListPosition",&,N,V_left
T@"CKDPListPosition",&,N,V_right
setResultServerChangeTokenData:
_resultServerChangeTokenData
T@"NSData",&,N,V_resultServerChangeTokenData
nodeErrorsByZoneID
requestResultsByRecordZoneID
configurationsByRecordZoneID
zoneIDsByRequestOperationUUID
_handleRecords:
initWithOperation:recordZoneIDs:configurationsByRecordZoneID:
zoneErrorsByZoneID
resultsByRecordZoneID
setZoneIDsByRequestOperationUUID:
setRequestResultsByRecordZoneID:
setNodeErrorsByZoneID:
_configurationsByRecordZoneID
_zoneIDsByRequestOperationUUID
_requestResultsByRecordZoneID
_nodeErrorsByZoneID
T@"NSArray",C,N,V_recordZoneIDs
T@"NSDictionary",&,N,V_configurationsByRecordZoneID
T@"NSMutableDictionary",&,N,V_zoneIDsByRequestOperationUUID
T@"NSMutableDictionary",&,N,V_requestResultsByRecordZoneID
T@"NSMutableDictionary",&,N,V_nodeErrorsByZoneID
serverRecordHasNoProtectionData
fetchPCSDataForRecordWithID:databaseScope:withCompletionHandler:
setServerRecordType:
setServerRecordHasNoProtectionData:
requestFetchOfRecordWithID:forOperation:withCompletionHandler:
needsChainPCSCreation
serverRecordType
setWantsChainPCS:
setShouldRetry:
_fetchPCSForPrivateZone
_fetchDependentPCSInSharedDatabase
_decryptRecordPCSInPrivateDatabase
_decryptRecordPCSInSharedDatabase
shouldRetry
_serverRecordHasNoProtectionData
_serverRecordType
T@"CKDRecordPCSData",&,N
TB,N,V_serverRecordHasNoProtectionData
T@"NSString",&,N,V_serverRecordType
setVettingError:
setHasVettingError:
vettingErrorAsString:
StringAsVettingError:
_vettingError
Ti,N,V_vettingError
applicationCachesDirectoryForDataContainerDirectory:usingHomeCachesDirectory:
CKSafeHashStringForPathComponent
server
CKSafeStringForPathComponent
stagingPathSuffixForCloudKitCachesDirectoryWithBundleIdentifier:
containerCloudKitDirectory
daemonCachesDirectory
daemonDatabaseDirectoryName
initWithTestRootDirectory:
recordCacheDirectory
_containerDirectory
_containerCloudKitDirectory
_daemonCachesDirectory
_daemonDatabaseDirectory
_mmcsWorkingDirectory
_assetDbDirectory
_fileStagingDirectory
_fileDownloadDirectory
_recordCacheDirectory
_frameworkCachesDirectory
_packageStagingDirectory
T@"NSString",R,N,V_dataSeparationHash
T@"NSString",R,N,V_containerIdentifier
T@"NSURL",R,N,V_containerDirectory
T@"NSURL",R,N,V_containerCloudKitDirectory
T@"NSURL",R,N,V_daemonCachesDirectory
T@"NSURL",R,N,V_daemonDatabaseDirectory
T@"NSURL",R,N,V_mmcsWorkingDirectory
T@"NSURL",R,N,V_assetDbDirectory
T@"NSURL",R,N,V_fileStagingDirectory
T@"NSURL",R,N,V_fileDownloadDirectory
T@"NSURL",R,N,V_recordCacheDirectory
T@"NSURL",R,N,V_frameworkCachesDirectory
T@"NSURL",R,N,V_packageStagingDirectory
previousServerChangeTokenData
setMaxChangedZones:
changedZones
recordZoneIDFromPRecordZoneIdentifier:error:
zoneChangedBlock
zoneDeletedDueToEncryptedDataResetBlock
zonePurgedBlock
zoneDeletedBlock
anonymousShareProcessingBlock
setServerChangeTokenData:
initWithOperation:previousServerChangeTokenData:
changedZoneIDs
deletedZoneIDs
purgedZoneIDs
serverChangeTokenData
encryptedDataResetDeletedZoneIDs
setZoneChangedBlock:
setZoneDeletedBlock:
setZonePurgedBlock:
setZoneDeletedDueToEncryptedDataResetBlock:
setAnonymousShareProcessingBlock:
recordZoneID
setRecordZoneID:
setPreviousServerChangeTokenData:
_changedZoneIDs
_deletedZoneIDs
_purgedZoneIDs
_encryptedDataResetDeletedZoneIDs
_serverChangeTokenData
_zoneChangedBlock
_zoneDeletedBlock
_zonePurgedBlock
_zoneDeletedDueToEncryptedDataResetBlock
_anonymousShareProcessingBlock
_recordZoneID
_previousServerChangeTokenData
T@"CKRecordZoneID",&,N,V_recordZoneID
T@"NSData",&,N,V_previousServerChangeTokenData
T@"NSData",&,N,V_serverChangeTokenData
T@"NSArray",R,N,V_changedZoneIDs
T@"NSArray",R,N,V_deletedZoneIDs
T@"NSArray",R,N,V_purgedZoneIDs
T@"NSArray",R,N,V_encryptedDataResetDeletedZoneIDs
T@?,C,N,V_zoneChangedBlock
T@?,C,N,V_zoneDeletedBlock
T@?,C,N,V_zonePurgedBlock
T@?,C,N,V_zoneDeletedDueToEncryptedDataResetBlock
T@?,C,N,V_anonymousShareProcessingBlock
setFetchBatchSize:
_cache
T@"CKDIdentityCache",&,N,V_cache
hasHost
setHasPort:
hasPort
_host
_port
T@"NSString",&,N,V_host
TI,N,V_port
_operationType
Ti,N,V_operationType
addFieldValues:
addListValues:
fieldValuesCount
clearFieldValues
fieldValuesAtIndex:
listValuesAtIndex:
fieldValuesType
listValuesType
setLongValue:
setHasLongValue:
hasLongValue
longValue
fieldValues
setFieldValues:
_longValue
_fieldValues
Tq,N,V_longValue
T@"NSMutableArray",&,N,V_fieldValues
initWithEffectiveBundleID:
aa_primaryAppleAccount
aa_appleAccounts
isProvisionedForDataclass:
sharedPrimaryAccount
hasQuery
T@"CKDPQuery",&,N,V_query
notificationFromPPushMessage:
_resultChangedNotifications
T@"NSArray",R,N,V_resultChangedNotifications
expiry
valuesForContainerID:
allowedAppVersionsCache
setAllowedAppVersionsCache:
valueForKeyPath:forContainerID:
allowExpiredDNSBehavior
reverseObjectEnumerator
initWithPropertyDictionary:
dictionaryPropertyEncoding
allowCloudMediaProcessingOffloadForSeed:
maxInlineMergeableDeltaSize:
_expiry
_allowedAppVersionsCache
T@"NSMutableDictionary",&,N,V_values
T@"NSMutableDictionary",&,N,V_allowedAppVersionsCache
T@"NSDate",&,N,V_expiry
_receivedUserIdentity:forLookupInfo:error:
_tryComplete
spawnURLRequests
removeObjectsInRange:
fetchBatchSize
_generateOONPrivateKeyWithError:
_saveUserIdentity:forLookupInfo:
perLookupInfoProgressBlock
lookupCompletionBlock
_lookupInfosToFetch
_missingLookupInfos
_fetchBatchSize
_perLookupInfoProgressBlock
_lookupCompletionBlock
TB,V_isCancelled
TQ,N,V_fetchBatchSize
T@?,C,N,V_perLookupInfoProgressBlock
T@?,C,N,V_lookupCompletionBlock
touchRepairZone
bypassPCSEncryptionForTouchRepairZone
simulateCorruptAsset
writeRepairRecord
uploadRequestConfiguration
_fetchRecord
_touchFetchRepairZone
_breakAsset
_markAssetBroken
repairZone
_touchCreateRepairZone
markAssetBrokenError
numMarkAssetBrokenFailures
setNumMarkAssetBrokenFailures:
setMarkAssetBrokenError:
repairZoneID
repairContainer
setRepairZone:
setZoneFetchOperation:
setZoneCreateOperation:
checkPreconditions
assetOrPackageForFetchedRecord
setShouldOnlySaveAssetContent:
setOriginatingFromDaemon:
clonedPackageInDaemonWithBasePath:filesDuplicatedIntoDirectory:error:
setCorruptOperation:
initWithRepairZoneRecordID:databaseScope:recordID:recordType:fieldName:fileSignature:referenceSignature:listIndex:
initWithRepairZoneRecordID:databaseScope:recordID:recordType:fieldName:fileSignatures:referenceSignatures:
initWithOperation:assetOrPackageMetadata:writeRepairRecord:
setUrlRequest:
assetOrPackageMarkedBrokenBlock
setAssetBrokenBlock:
setWrapperOperation:
applicationBundleIdentifierOverride
removePackages
setUploadRequestConfiguration:
setTouchRepairZone:
setBypassPCSEncryptionForTouchRepairZone:
setSimulateCorruptAsset:
setWriteRepairRecord:
zoneFetchOperation
zoneCreateOperation
corruptOperation
wrapperOperation
_touchRepairZone
_bypassPCSEncryptionForTouchRepairZone
_simulateCorruptAsset
_writeRepairRecord
_assetOrPackageMarkedBrokenBlock
_uploadRequestConfiguration
_zoneFetchOperation
_zoneCreateOperation
_corruptOperation
_wrapperOperation
_repairZone
_numMarkAssetBrokenFailures
_markAssetBrokenError
T@"CKUploadRequestConfiguration",&,N,V_uploadRequestConfiguration
TB,N,V_touchRepairZone
TB,N,V_bypassPCSEncryptionForTouchRepairZone
TB,N,V_simulateCorruptAsset
TB,N,V_writeRepairRecord
T@"NSString",&,N,V_field
Tq,N,V_listIndex
T@"CKDFetchRecordZonesOperation",&,N,V_zoneFetchOperation
T@"CKDModifyRecordZonesOperation",&,N,V_zoneCreateOperation
T@"CKDModifyRecordsOperation",&,N,V_corruptOperation
T@"CKDMarkAssetBrokenURLRequestWrapperOperation",&,N,V_wrapperOperation
T@"CKRecordZone",&,N,V_repairZone
TQ,N,V_numMarkAssetBrokenFailures
T@"NSError",&,N,V_markAssetBrokenError
T@"<CKMarkAssetBrokenOperationCallbacks>",&,D,N
T@?,C,N,V_assetOrPackageMarkedBrokenBlock
urlRequest
_urlRequest
T@"CKDMarkAssetBrokenURLRequest",&,N,V_urlRequest
setIdentifierForConstraintFailure:
hasIdentifierForConstraintFailure
identifierForConstraintFailure
_identifierForConstraintFailure
T@"CKDPIdentifier",&,N,V_identifierForConstraintFailure
shareMetadatasToAccept
publicPCSEtag
pppcsProtectionInfo
shareMetadataByRequestID
shareFromPShare:asAnonymousCKUserID:error:
shareAcceptedBlock
initWithOperation:shareMetadatasToAccept:
setShareAcceptedBlock:
setShareMetadatasToAccept:
setShareMetadataByRequestID:
_shareAcceptedBlock
_shareMetadatasToAccept
_shareMetadataByRequestID
T@"NSArray",&,N,V_shareMetadatasToAccept
T@"NSMutableDictionary",&,N,V_shareMetadataByRequestID
T@?,C,N,V_shareAcceptedBlock
setShareURL:
setPppcsProtectionInfo:
_shareURL
_publicPCSData
_publicPCSEtag
_pppcsProtectionInfo
_signingPCSIdentity
T@"NSURL",&,N,V_shareURL
T@"CKRecordID",&,N,V_shareRecordID
T@"NSData",&,N,V_publicPCSData
T@"NSString",&,N,V_publicPCSEtag
T@"NSData",&,N,V_publicKey
TQ,N,V_publicKeyVersion
T@"NSData",&,N,V_pppcsProtectionInfo
T@"NSString",&,N,V_anonymousCKUserID
T^{_PCSIdentityData=},N,V_signingPCSIdentity
setAtomicSaves:
setHasAtomicSaves:
hasAtomicSaves
setFetchChanges:
setHasFetchChanges:
hasFetchChanges
setCkql:
setHasCkql:
hasCkql
sharingType
setSharingType:
setHasSharingType:
hasSharingType
sharingTypeAsString:
StringAsSharingType:
setZoneSharing:
setHasZoneSharing:
hasZoneSharing
setHierarchicalSharing:
setHasHierarchicalSharing:
hasHierarchicalSharing
atomicSaves
fetchChanges
ckql
zoneSharing
hierarchicalSharing
_sharingType
_atomicSaves
_ckql
_fetchChanges
_hierarchicalSharing
_zoneSharing
TB,N,V_atomicSaves
TB,N,V_fetchChanges
TB,N,V_ckql
Ti,N,V_sharingType
TB,N,V_zoneSharing
TB,N,V_hierarchicalSharing
shouldFetchAssetContents
fetchAllChanges
errorReportingStyle
forcePCSDecryptionAttempt
_noteCompletedURLRequest:withSchedulerInfo:
_noteChangedRecordWithID:record:error:
_possiblyWrapError:forRecordWithID:withCode:format:
_noteDeletedRecordWithID:recordType:
_createAndConfigureURLRequestForZoneIDs:optionsByZoneID:
_optionsForZonesWithPendingChangesAfterRequest:
_sendFetchChangesRequestForZoneIDs:withOptions:previousRequestSchedulerInfo:
_handleFetchChangesRequestFinishedWithSchedulerInfo:
_noteOperationBeginning
fetchNewestChangesFirst
_noteOperationFinishedBlockEnd
_handleChangedRecords:perRequestSchedulerInfo:
_handleRecordDelete:recordType:perRequestSchedulerInfo:
_noteOperationEnding
setShouldFetchAssetContents:
setErrorReportingStyle:
_shouldFetchAssetContents
_fetchAllChanges
_forcePCSDecryptionAttempt
_errorReportingStyle
TB,N,V_forcePCSDecryptionAttempt
Tq,N,V_errorReportingStyle
TB,N,V_shouldFetchAssetContents
TB,N,V_fetchAllChanges
supplementalChangeTokenByZoneID
setSupplementalChangeTokenByZoneID:
_supplementalChangeTokenByZoneID
T@"NSDictionary",&,N,V_supplementalChangeTokenByZoneID
takeValuesFrom:
changeTypes
isSubclassOfClass:
clientIsUsingLegacyCKFetchRecordChangesOperationAPI
setResultClientChangeTokenData:
setResultStatus:
serverChangeTokenUpdatedBlock
syncObligationZoneIDs
recordChangedBlock
recordDeletedBlock
setChangeTypes:
fetchChangesForMergeableValues
setFetchChangesForMergeableValues:
setRecordsChangedBlock:
setClientIsUsingLegacyCKFetchRecordChangesOperationAPI:
_clientIsUsingLegacyCKFetchRecordChangesOperationAPI
_recordChangedBlock
_recordDeletedBlock
_serverChangeTokenUpdatedBlock
_resultClientChangeTokenData
_resultStatus
_changeTypes
Tq,N,V_changeTypes
TB,N,V_clientIsUsingLegacyCKFetchRecordChangesOperationAPI
T@"NSData",&,N,V_resultClientChangeTokenData
Tq,N,V_resultStatus
T@?,C,N,V_recordChangedBlock
T@?,C,N,V_recordDeletedBlock
T@?,C,N,V_serverChangeTokenUpdatedBlock
fetchZonesGroup
shouldReturnServerChangeTokensToAdopter
_sendFetchDatabaseChangesRequestWithChangeToken:previousRequestSchedulerInfo:
_handleFetchDatabaseChangesRequestFinishedWithSchedulerInfo:
recordZoneWithIDChangedBlock
recordZoneWithIDWasDeletedBlock
recordZoneWithIDWasPurgedBlock
recordZoneWithIDWasDeletedDueToEncryptedDataResetBlock
_handleAnonymousZoneDataObjects:schedulerInfo:
setFetchZonesGroup:
_recordZoneWithIDChangedBlock
_recordZoneWithIDWasDeletedBlock
_recordZoneWithIDWasPurgedBlock
_recordZoneWithIDWasDeletedDueToEncryptedDataResetBlock
_fetchZonesGroup
T@"CKServerChangeToken",&,N,V_serverChangeToken
T@"NSObject<OS_dispatch_group>",&,N,V_fetchZonesGroup
T@"<CKFetchDatabaseChangesOperationCallbacks>",&,D,N
T@?,C,N,V_recordZoneWithIDChangedBlock
T@?,C,N,V_recordZoneWithIDWasDeletedBlock
T@?,C,N,V_recordZoneWithIDWasPurgedBlock
T@?,C,N,V_recordZoneWithIDWasDeletedDueToEncryptedDataResetBlock
initWithRecord:trackProgress:assetsToDownload:assetsToDownloadInMemory:packageIndexSets:assetURLInfosToFillOut:
didDownloadAsset:error:
didFillOutURLInfo:error:
didCompleteTaskWithError:
T@"NSMutableArray",&,N,V_assetsToDownload
T@"NSMutableArray",&,N,V_assetsToDownloadInMemory
T@"NSMutableArray",&,N,V_packageIndexSets
T@"NSMutableArray",&,N,V_assetURLInfosToFillOut
recordValue
setRecordValue:
_recordValue
T@"CKMergeableValueID",&,N,V_mergeableValueID
T@"CKMergeableRecordValue",&,N,V_recordValue
recordIDsToETags
recordIDsToVersionETags
desiredPackageFileIndices
shouldFetchMergeableValues
assetFieldNamesToPublishURLs
webSharingIdentityDataByRecordID
recordIDsToFetch
fullRecordsToFetch
fetchRecordsWithIDs:andFullRecords:
recordIDsToRefetch
_fetchCloudCerts
_saveUpdatedShareRecords
_downloadMergeableValues
_downloadAssets
indexOfObject:inSortedRange:options:usingComparator:
shareRecordsToUpdateByRecordID
setShouldSkipPCSRetryBehavior:
_continueHandleFetchedRecord:recordID:
useCachedEtags
_findSpecialParticipantsOnShare:identityDelegate:
cachedRecords
desiredIndexedListKeys
initWithOperation:recordIDs:recordIDsToEtags:recordIDsToVersionETags:desiredKeys:
setDesiredIndexedListKeys:
_handleRecordFetch:recordID:etagMatched:responseCode:
hasRecordDecryptOperation
finishDecryption
errorsByRecordID
errorForRecordID:
trackChanges
setCompatibilityModeObjectNoValidate:forKey:
setObjectNoValidate:forKey:
shouldRollSharePCSOnFetch
setShouldRollSharePCSOnFetch:
_addDownloadTasksForRecord:completionBlock:
setWebSharingIdentityDataByRecordID:
forcePCSDecrypt
isMergeableValueDeltaRecord
_fetchPCSForMergeableValueDeltaRecord:recordID:
_reallyDecryptPropertiesOnRecord:recordID:
setError:forRecordID:
shouldUpdateTimestampsForFetchedMergeableValues
unmergedDeltas
mergeLastKnownServerTimestampVectorFromDeltas:
_handleSharePCSPrepForShare:recordID:
_decryptPropertiesIfNeededForRecord:record:
skipDecryption
_decryptPropertiesOnRecord:recordID:
setAssetTransferOptions:
_addAssetDownloadTaskForRecord:completionBlock:
_addMergeableValueDownloadTasksForRecord:completionBlock:
containsAssetBackedMergeableDeltas
hasAssetBackedDeltas
_prepareAsset:record:recordKey:assetTransferOptions:
downloadTasksByRecordID
mergeableValueDownloadTasks
setMergeableValueDownloadTasks:
_finishAllDownloadTasksWithError:
_didDownloadAssetsWithError:
addServerDeltaMetadatas:
setRecordIDsToFetch:
setCachedRecords:
setRecordIDsToETags:
setRecordIDsToVersionETags:
setDesiredPackageFileIndices:
setErrorsByRecordID:
setDownloadTasksByRecordID:
setRecordIDsToRefetch:
setShareRecordsToUpdateByRecordID:
_decryptOperation
_useCachedEtags
_forcePCSDecrypt
_skipDecryption
_shouldUpdateTimestampsForFetchedMergeableValues
_shouldFetchMergeableValues
_shouldRollSharePCSOnFetch
_fullRecordsToFetch
_recordIDsToFetch
_cachedRecords
_recordIDsToETags
_recordIDsToVersionETags
_desiredPackageFileIndices
_errorsByRecordID
_downloadTasksByRecordID
_assetFieldNamesToPublishURLs
_recordIDsToRefetch
_shareRecordsToUpdateByRecordID
_mergeableValueDownloadTasks
_webSharingIdentityDataByRecordID
T@"NSArray",&,N,V_recordIDsToFetch
T@"NSMutableDictionary",&,N,V_cachedRecords
T@"NSDictionary",&,N,V_recordIDsToETags
T@"NSDictionary",&,N,V_recordIDsToVersionETags
T@"NSDictionary",&,N,V_desiredPackageFileIndices
T@"NSMutableDictionary",&,N,V_errorsByRecordID
T@"NSMapTable",&,N,V_downloadTasksByRecordID
TB,N,V_shouldFetchMergeableValues
T@"NSSet",&,N,V_assetFieldNamesToPublishURLs
T@"CKDDecryptRecordsOperation",R,N
T@"NSMutableArray",&,N,V_recordIDsToRefetch
T@"NSMutableDictionary",&,N,V_shareRecordsToUpdateByRecordID
T@"NSMutableDictionary",&,N,V_mergeableValueDownloadTasks
T@"NSDictionary",&,N,V_webSharingIdentityDataByRecordID
TB,N,V_shouldRollSharePCSOnFetch
T@"<CKFetchRecordsOperationCallbacks>",&,D,N
TB,N,V_useCachedEtags
TB,N,V_forcePCSDecrypt
TB,N,V_skipDecryption
T@"NSArray",&,N,V_fullRecordsToFetch
TB,N,V_shouldUpdateTimestampsForFetchedMergeableValues
T@"<CKSQLiteItem>",&,N,V_itemID
T@"CKDPCSCache",&,N,V_cache
TQ,N,V_options
numRetries
setNumRetries:
needsAdditionalPCSCreation
setFetchOptions:
_didFetchData
_wasFetchedFromCache
_shouldRetry
_pcsDataInvalidated
_numRetries
_fetchOptions
_fetchError
_dependentPCSFetchError
_parentPCSData
TQ,N,V_fetchOptions
TB,N,V_didFetchData
T@"NSError",&,N,V_fetchError
T@"NSError",&,N,V_dependentPCSFetchError
TB,N,V_wasFetchedFromCache
Ti,N,V_numRetries
TB,N,V_shouldRetry
T@"CKDRecordPCSData",&,N,V_parentPCSData
pcsDataInvalidated
TB,GisPCSDataInvalidated,V_pcsDataInvalidated
T@"NSObject<OS_dispatch_group>",R,N,V_fetchGroup
_handleRecordArchived:responseCode:
T@"<CKArchiveRecordsOperationCallbacks>",&,D,N
notificationIDs
successfulNotificationIDs
errorByNotificationID
initWithOperation:notificationIDsToMarkRead:
_handleNotificationID:withResponse:
setNotificationMarkedReadProgressBlock:
notificationMarkedRead
setNotificationIDs:
setErrorByNotificationID:
setSuccessfulNotificationIDs:
_notificationMarkedRead
_notificationIDs
_errorByNotificationID
_successfulNotificationIDs
T@"NSArray",&,N,V_notificationIDs
T@"NSMutableDictionary",&,N,V_errorByNotificationID
T@"NSMutableSet",&,N,V_successfulNotificationIDs
T@"<CKMarkNotificationsReadOperationCallbacks>",&,D,N
T@?,C,N,V_notificationMarkedRead
shareIDs
baseTokensByShareID
childRecordIDsByShareID
fetchSharesFromServer
sharesNeedingUpdateByID
hasAttemptedShareUpdate
setHasAttemptedShareUpdate:
updateShares
_sendErrorForFailedShares
shareParticipantKeyFetchedBlock
_performCallbackForShareID:withParticipantKey:error:
CKBase64EncodedURLSafeString
_participantKeyFromShare:withError:
_handleFetchedShare:withID:error:
setShareIDs:
setBaseTokensByShareID:
setChildRecordIDsByShareID:
setSharesNeedingUpdateByID:
_hasAttemptedShareUpdate
_shareParticipantKeyFetchedBlock
_shareIDs
_baseTokensByShareID
_childRecordIDsByShareID
_sharesNeedingUpdateByID
T@"NSMutableArray",&,N,V_shareIDs
T@"NSDictionary",&,N,V_baseTokensByShareID
T@"NSDictionary",&,N,V_childRecordIDsByShareID
T@"NSMutableDictionary",&,N,V_sharesNeedingUpdateByID
TB,N,V_hasAttemptedShareUpdate
T@"<CKFetchShareParticipantKeyOperationCallbacks>",&,D,N
T@?,C,N,V_shareParticipantKeyFetchedBlock
deviceIDsByContainerIdentifierByContainerEnvironment
_serviceForContainer:
_perServicelookupKeyForContainer:
standardUserDefaults
dictionaryForKey:
useLegacyKeychain
_saveDeviceIdentifierToDefaults:forContainer:
createQueryForDeviceIdentifierInContainer:
deviceIdentifierForContainer:skipInMemoryCache:createIfNecessary:
deviceIDsByContainerIdentifierInContainerEnvironment:
_savedDeviceIdentifierForContainer:
_saveDeviceIdentifier:forContainer:
_deleteDeviceIdentifierForContainer:
setUseLegacyKeychain:
setDeviceIDsByContainerIdentifierByContainerEnvironment:
_useLegacyKeychain
_deviceIDsByContainerIdentifierByContainerEnvironment
T@"NSMutableDictionary",&,N,V_deviceIDsByContainerIdentifierByContainerEnvironment
TB,N,V_useLegacyKeychain
originatingFromDaemon
markAsParticipantNeedsNewInvitationToken
_claimPackagesInRecord:error:
recordIDsToDeleteToEtags
conflictLosersToResolveByRecordID
pluginFieldsForRecordDeletesByID
clientChangeTokenData
shouldSkipPCSRetryBehavior
shouldReportRecordsInFlight
shouldModifyRecordsInDatabase
claimPackagesWithSuccessBlock:failureBlock:completionBlock:
_performHandlerCallbacks
_determineEnvironment
_fetchUserPublicKeys
_applySideEffects
_topoSortRecords
_prepareParentPCS
_fetchRecordPCSData
_fetchAssetRecordsForRereferencing
_uploadAssets
_markRecordHandlersAsUploaded
_prepareRecordsForSave
shouldDecryptRecordsBeforeSave
_verifyRecordEncryption
_reportRecordsInFlight
_continueRecordsModify
_hasHandlerInState:
_fetchShareParticipants
_uploadMergeableDeltas
haveOutstandingHandlers
deleteCallbackWithMetadata:error:
saveCallbackWithMetadata:error:
releasePackages
setRecordsDeleted:
setHaveOutstandingHandlers:
setRetries:
_performCallbacksForNonAtomicZoneHandlers:
_performCallbacksForAtomicZoneHandlers:
requestNeedsUserPublicKeys
userPublicKeys
setUserPublicKeys:
_enumerateHandlersInState:withBlock:
addRecords:error:
recordsByTopologicalSortWithError:
maintainRecordUploadOrder
_shouldToposortInContainerID:
_topoSortRecordsForHandlers:
setParentsByRecordID:
handlersByAssetNeedingRecordFetch
validateAndSetRecordFetchPropertiesWithAsset:assetReference:
destinationFieldName
setHandlersByAssetNeedingRecordFetch:
clearRecordFetchProperties
setWithCapacity:
assetArrayByRecordID:didFetchRecord:recordID:error:
_didCompleteRecordFetchOperation:assetArrayByRecordID:
_prepareAssetsForUpload
setHandlersByAsset:
handlersByAsset
cachedUserBoundaryKeyData
_fetchUserBoundaryKey
setCachedUserBoundaryKeyData:
_setBoundaryKeyOnAssetsToUpload:
includeMergeableDeltasInModifyRecordsRequest
setRecordIDsToDeleteToEtags:
setRecordIDsToDeleteToSigningPCSIdentity:
deltaPRecordFromRecord:withAllFields:outDeletedMergeFields:outKeysToSend:
_handleDecryptionFailure:forRecordID:
_reallyHandleRecordSaved:handler:etag:dateStatistics:expirationDate:responseCode:keysAssociatedWithETag:recordForOplockFailure:decryptedServerRecord:
hasTime
requestedFieldsByRecordIDForRecords:
initWithOperation:recordsToSave:recordIDsToDelete:recordIDsToDeleteToSigningPCSIdentity:oplock:sendAllFields:clientChangeTokenData:requestedFieldsByRecordId:
setMarkAsParticipantNeedsNewInvitationToken:
setSendMergeableDeltas:
_handleRecordSaved:handler:etag:dateStatistics:expirationDate:responseCode:keysAssociatedWithETag:recordForOplockFailure:serverRecord:
_handleRecordDeleted:handler:responseCode:
_handleMergeableDeltaSavedForRecordID:key:result:
setMergeableDeltaSavedBlock:
_handleReplaceDeltasRequest:result:
setReplacedDeltasBlock:
setConflictLosersToResolveByRecordID:
setPluginFieldsForRecordDeletesByID:
recordsInFlightBlock
setShouldReportRecordsInFlight:
canSkipRecordSaveForMergeables
containsMergeableValuesWithDeltasToSave
recordIDsToDeleteToSigningPCSIdentity
_clearProtectionDataIfNotEntitled
trustProtectionData
hasDecryptOperation
URLByResolvingSymlinksInPath
stringByResolvingSymlinksInPath
URLByDeletingLastPathComponent
setRealPathURL:
setHandlersByRecordID:
setModifyHandlersByZoneID:
setClientChangeTokenData:
retriedRecords
setRetriedRecords:
setModifyRecordsQueue:
setRequestNeedsUserPublicKeys:
setIncludeMergeableDeltasInModifyRecordsRequest:
_hasRecordsToSave
_hasRecordsToDelete
_retryPCSFailures
_trustProtectionData
_alwaysFetchPCSFromServer
_retriedRecords
_shouldOnlySaveAssetContent
_haveOutstandingHandlers
_shouldReportRecordsInFlight
_originatingFromDaemon
_markAsParticipantNeedsNewInvitationToken
_requestNeedsUserPublicKeys
_shouldModifyRecordsInDatabase
_includeMergeableDeltasInModifyRecordsRequest
_cachedUserBoundaryKeyData
_saveProgressBlock
_recordsInFlightBlock
_recordIDsToDeleteToEtags
_recordIDsToDeleteToSigningPCSIdentity
_conflictLosersToResolveByRecordID
_pluginFieldsForRecordDeletesByID
_handlersByRecordID
_parentsByRecordID
_handlersByAssetNeedingRecordFetch
_handlersByAsset
_modifyHandlersByZoneID
_savePolicy
_clientChangeTokenData
_modifyRecordsQueue
_userPublicKeys
_streamingAssetRequestOptions
T@"NSDictionary",&,N,V_recordIDsToDeleteToEtags
T@"NSDictionary",&,N,V_recordIDsToDeleteToSigningPCSIdentity
T@"NSDictionary",&,N,V_conflictLosersToResolveByRecordID
T@"NSDictionary",&,N,V_pluginFieldsForRecordDeletesByID
T@"NSDictionary",&,N,V_handlersByRecordID
T@"NSDictionary",&,N,V_parentsByRecordID
T@"NSMapTable",&,N,V_handlersByAssetNeedingRecordFetch
T@"NSMapTable",&,N,V_handlersByAsset
T@"NSMutableDictionary",&,N,V_modifyHandlersByZoneID
Tq,N,V_savePolicy
T@"NSData",C,N,V_clientChangeTokenData
TB,N,V_retriedRecords
TB,N,V_shouldOnlySaveAssetContent
TB,N,V_haveOutstandingHandlers
TB,N,V_shouldReportRecordsInFlight
T@"NSObject<OS_dispatch_queue>",&,N,V_modifyRecordsQueue
T@"NSData",C,N,V_cachedUserBoundaryKeyData
TB,N,V_originatingFromDaemon
TB,N,V_markAsParticipantNeedsNewInvitationToken
TB,N,V_requestNeedsUserPublicKeys
T@"NSArray",&,N,V_userPublicKeys
T@"C2RequestOptions",C,N,V_streamingAssetRequestOptions
TB,N,V_shouldModifyRecordsInDatabase
TB,N,V_includeMergeableDeltasInModifyRecordsRequest
T@"<CKModifyRecordsOperationCallbacks>",&,D,N
TB,N,V_retryPCSFailures
TB,N,V_canSetPreviousProtectionEtag
TB,N,V_trustProtectionData
TB,N,V_alwaysFetchPCSFromServer
T@?,C,N,V_saveProgressBlock
T@?,C,N,V_recordsInFlightBlock
fetchPCSDataForShareWithID:databaseScope:withCompletionHandler:
requestFetchOfShareWithID:forOperation:withCompletionHandler:
T@"CKDSharePCSData",&,N
setMoveMarker:
setMovedRecord:
hasMoveMarker
hasMovedRecord
moveMarker
movedRecord
_moveMarker
_movedRecord
T@"CKDPRecord",&,N,V_moveMarker
T@"CKDPRecord",&,N,V_movedRecord
T@"CKDPRecordIdentifier",&,N,V_identifier
applicationSecondaryID
resumableContainerLimpMode
chunkingLibraryCorruptionMode
topmostParentOperationID
topmostParentOperationGroupID
zoneNames
insufficientDiskSpaceMode
setTopmostParentOperationID:
setTopmostParentOperationGroupID:
setApplicationBundleIdentifierForContainerAccess:
setApplicationBundleIdentifierForNetworkAttribution:
setApplicationSecondaryID:
setAllowsExpensiveNetworkAccess:
setAllowsPowerNapScheduling:
setResolvedAutomaticallyRetryNetworkFailures:
setResolvedDiscretionaryNetworkBehavior:
metricOptions
setCacheDeleteAvailableSpaceClass:
_allowsCellularAccess
_allowsExpensiveNetworkAccess
_allowsPowerNapScheduling
_resolvedAutomaticallyRetryNetworkFailures
_isCrossOwner
_topmostParentOperationID
_topmostParentOperationGroupID
_applicationBundleIdentifierForContainerAccess
_applicationBundleIdentifierForNetworkAttribution
_applicationSecondaryID
_zoneNames
_authPutResponse
_authPutResponseHeaders
_clientQueuePriority
_resolvedDiscretionaryNetworkBehavior
_duetPreClearedMode
_metricOptions
_cacheDeleteAvailableSpaceClass
_networkingDelegate
_networkServiceType
Tq,N,V_databaseScope
T@"CKContainerID",&,N,V_containerID
T@"NSString",&,N,V_topmostParentOperationID
T@"NSString",&,N,V_topmostParentOperationGroupID
T@"NSString",&,N,V_applicationBundleIdentifierForContainerAccess
T@"NSString",&,N,V_applicationBundleIdentifierForNetworkAttribution
T@"NSString",&,N,V_applicationSecondaryID
T@"NSArray",&,N,V_zoneNames
T@"NSData",&,N,V_authPutResponse
T@"NSDictionary",&,N,V_authPutResponseHeaders
TB,N,V_allowsCellularAccess
TB,N,V_allowsExpensiveNetworkAccess
TB,N,V_allowsPowerNapScheduling
Tq,N,V_clientQueuePriority
TB,N,V_resolvedAutomaticallyRetryNetworkFailures
TQ,N,V_resolvedDiscretionaryNetworkBehavior
TQ,N,V_duetPreClearedMode
T@"C2MetricOptions",&,N,V_metricOptions
TB,N,V_isCrossOwner
T@"NSNumber",&,N,V_cacheDeleteAvailableSpaceClass
T@"NSObject<C2NetworkingDelegate>",&,N,V_networkingDelegate
TQ,N,V_networkServiceType
T@"CKOperationMMCSRequestOptions",&,N,V_MMCSRequestOptions
addListField:
listFieldsCount
clearListFields
listFieldAtIndex:
listFieldType
setListFields:
_listFields
T@"NSMutableArray",&,N,V_listFields
setTestAccount:
setTestDevice:
uniqueID
_initMockAccountWithTestAccount:testDevice:
testAccount
globallyUniqueID
renewAuthTokenInStore:withOptions:completionHandler:
updateAccountPropertiesAndSaveAccountInStore:completionHandler:
canRenew
_testAccount
_testDevice
T@"CKTestAccount",&,N,V_testAccount
T@"CKTestDevice",&,N,V_testDevice
minimumVersionETag
setMinimumVersionETag:
setFetchVersionsGroup:
fetchVersionsGroup
recordVersionFetchedBlock
initWithOperation:recordIDs:desiredKeys:minimumVersionETag:
_handleRecordVersionsFetchedForID:isDeleted:versions:responseCode:
setRecordVersionsFetchedBlock:
_recordVersionFetchedBlock
_minimumVersionETag
_fetchVersionsGroup
T@"NSArray",&,N,V_desiredKeys
T@"NSString",&,N,V_minimumVersionETag
T@"NSObject<OS_dispatch_group>",&,N,V_fetchVersionsGroup
T@"<CKFetchRecordVersionsOperationCallbacks>",&,D,N
T@?,C,N,V_recordVersionFetchedBlock
expungeStaleDSIDs
initWithClientID:error:
registrationsByDSID
inlock_registrar
userWithDSID:
currentRegistrationsForUser:error:
_pdsTopicFromBundleIdentifier:withContainerID:
_pdsQualifierFromContainerID:
_pdsPushEnvironmentFromAPSEnvironmentString:
initWithTopic:qualifier:pushEnvironment:
cachedDSIDForAccountID:
_registrationForContainer:
inlock_registrationsForDSID:
ensureRegistrationPresent:forUser:error:
activeUsersWithError:
aa_personID
userType
userID
removeAllRegistrationsFromUser:error:
removeRegistration:fromUser:error:
_unregisterRegistration:forDSID:outError:
_registrationForAppContainerAccountTuple:pushBundleIdentifier:pdsPushEnvironment:
ensureRegistrationForContainer:outError:
unregisterAllTokens
setRegistrationsByDSID:
registrar
setRegistrar:
_registrationsByDSID
_registrar
T@"NSMutableDictionary",&,N,V_registrationsByDSID
T@"PDSRegistrar",&,N,V_registrar
setSerializedResult:
setAttestationResponse:
hasSerializedResult
_attestationResponse
_serializedResult
T@"NSData",&,N,V_serializedResult
T@"CKCDPError",&,N,V_error
T@"CKCDPCodeServiceResponseAttestationResponse",&,N,V_attestationResponse
addSaveRecords:
addDeleteRecordids:
addAssociatedMergeableDeltas:
saveRecordsCount
clearSaveRecords
saveRecordsAtIndex:
deleteRecordidsCount
clearDeleteRecordids
deleteRecordidsAtIndex:
associatedMergeableDeltasCount
clearAssociatedMergeableDeltas
associatedMergeableDeltasAtIndex:
saveRecordsType
deleteRecordidsType
associatedMergeableDeltasType
_associatedMergeableDeltas
_deleteRecordids
T@"NSMutableArray",&,N,V_saveRecords
T@"NSMutableArray",&,N,V_deleteRecordids
T@"NSMutableArray",&,N,V_associatedMergeableDeltas
mergeableValueIDByRequestID
continuationTokens
mergeableDeltaMetadataFromPMetadata:mergeableValueID:error:
setContinuationTokens:
setMergeableValueIDByRequestID:
_continuationTokens
_mergeableValueIDByRequestID
T@"NSDictionary",&,N,V_continuationTokens
T@"NSMutableDictionary",&,N,V_mergeableValueIDByRequestID
_initWithProcessType:
_initWithArgC:argv:
deriveCurrentProcessWithArgC:argv:
_isSystemInstalledBinary
_processType
Tq,R,N,V_processType
TB,R,N,V_isSystemInstalledBinary
addAuxiliaryUserInfo:
setAuxiliaryDomain:
clearAuxiliaryUserInfos
auxiliaryUserInfoAtIndex:
auxiliaryUserInfoType
setAuxiliaryCode:
setHasAuxiliaryCode:
setTargetPartition:
setHasTargetPartition:
hasTargetPartition
setAuxiliaryUserInfos:
targetPartition
_auxiliaryCode
_auxiliaryDomain
_auxiliaryUserInfos
_message
_targetPartition
T@"NSString",&,N,V_message
T@"NSString",&,N,V_auxiliaryDomain
Ti,N,V_auxiliaryCode
T@"NSMutableArray",&,N,V_auxiliaryUserInfos
Ti,N,V_targetPartition
dictionaryWithContentsOfFile:
dataWithPropertyList:format:options:error:
URLQueryAllowedCharacterSet
removeCharactersInString:
stringByAddingPercentEncodingWithAllowedCharacters:
dictionaryWithDictionary:
dataWithBytesNoCopy:length:
certData
decimalDigitCharacterSet
characterAtIndex:
characterIsMember:
zonePCS
T^{_OpaquePCSShareProtection=},N
previousPublicProtectionEtag
sharedConnection
isCloudSyncAllowed:
actionsCount
clearActions
actionAtIndex:
actionType
actions
setActions:
_actions
T@"CKDPRecordFieldIdentifier",&,N,V_identifier
T@"CKDPRecordFieldValue",&,N,V_value
T@"NSMutableArray",&,N,V_actions
setSyncObligationZoneIDs:
_hasPendingArchivedRecords
_syncObligationZoneIDs
TB,N,V_hasPendingArchivedRecords
T@"NSSet",&,N,V_syncObligationZoneIDs
setRequestedChangeTypes:
fetchChangesMadeByThisDevice
setIgnoreCallingDeviceChanges:
setIncludeMergeableDeltas:
recordsChangedBlock
initWithName:recordID:key:encrypted:
setIsMergeableValueDeltaRecord:
setValueID:
setIsValueIDKnownToServer:
_handleRecordChanges:deltaChanges:forZoneID:
_fetchChangesForMergeableValues
_recordsChangedBlock
TB,N,V_fetchChangesForMergeableValues
T@?,C,N,V_recordsChangedBlock
encryptedAnonymousSharesToAdd
encryptedAnonymousShareHashToAddByRequestID
anonymousShareSavedBlock
initWithOperation:encryptedAnonymousSharesToAdd:
setAnonymousShareSavedBlock:
setEncryptedAnonymousShareHashToAddByRequestID:
_anonymousShareSavedBlock
_encryptedAnonymousSharesToAdd
_encryptedAnonymousShareHashToAddByRequestID
T@"NSDictionary",&,N,V_encryptedAnonymousSharesToAdd
T@"NSMutableDictionary",&,N,V_encryptedAnonymousShareHashToAddByRequestID
T@?,C,N,V_anonymousShareSavedBlock
_initWithParentAccount:
aa_appleAccountWithAltDSID:
aa_primaryEmail
aa_altDSID
aa_firstName
aa_lastName
aa_regionInfo
aa_isPrimaryEmailVerified
isEnabledForDataclass:
aa_useCellularForDataclass:
credentialWithError:
_accountCredentialForAccount:withError:
aa_authToken
isCurrentAppleAccountSuspended
aa_isSuspended
credentialRenewalDatesBySuspendedAccountID
renewCredentialsForAccount:options:completion:
setReason:
setIsUsernameEditable:
setShouldUpdatePersistentServiceTokens:
setShouldSkipSettingsLaunchAlert:
setHelpBook:
setHelpAnchor:
validateVettingToken:forAltDSID:completion:
authenticateWithContext:completion:
urlForDataclass:preferringGateway:
urlForDataclass:
privateCodeServiceURLPreferringGateway:
deviceCountOverride
deviceCountQueue
saveVerifiedAccount:error:
fetchDeviceCountForAccount:completionHandler:
initWithAccount:
devices
performRequestWithHandler:
_appleAccount
T@"ACAccount",&,N,V_appleAccount
setMissingAssetStatusRecord:
hasMissingAssetStatusRecord
missingAssetStatusRecord
_missingAssetStatusRecord
T@"CKDPRecordIdentifier",&,N,V_missingAssetStatusRecord
groupName
loadThrottlesFromDatabase
existingTableGroupInDatabase:withName:error:
throttleTable:
fetchAllEntries:
invalidateAdopterThrottles
purgeGroupWithName:inDatabase:
updateRequestCount:
throttleWasAdded:
throttleWillBeRemoved:
throttleListBecameEmpty
noteDataChangeForThrottle:
_throttleTableGroup
_throttleTable
_updateBackgroundSessionConnectionPoolLimit
backgroundSessionConnectionPoolLimitWithDefaultValue:
_backgroundSessionConnectionPoolLimit
addSections:
setManifest:
sectionsCount
clearSections
sectionsAtIndex:
sectionsType
hasManifest
manifest
sections
setSections:
_manifest
_sections
T@"CKDPAsset",&,N,V_manifest
T@"NSMutableArray",&,N,V_sections
setHasAllAssets:
hasAllAssets
allAssets
_allAssets
TB,N,V_allAssets
requestedChangeTypes
setHasRequestedChangeTypes:
hasRequestedChangeTypes
requestedChangeTypesAsString:
StringAsRequestedChangeTypes:
setHasIgnoreCallingDeviceChanges:
hasIgnoreCallingDeviceChanges
setHasIncludeMergeableDeltas:
hasIncludeMergeableDeltas
ignoreCallingDeviceChanges
includeMergeableDeltas
_requestedChangeTypes
_ignoreCallingDeviceChanges
_includeMergeableDeltas
Ti,N,V_requestedChangeTypes
TB,N,V_ignoreCallingDeviceChanges
TB,N,V_includeMergeableDeltas
replaceDeltasRequests
deltaIdentifiersToReplace
replacementDeltasContainNewData
perReplacementCompletionBlock
initWithOperation:replaceDeltasRequests:ignoreMissingDeltas:
setReplaceDeltasRequests:
_replaceDeltasRequests
_perReplacementCompletionBlock
T@"NSArray",&,N,V_replaceDeltasRequests
T@?,C,N,V_perReplacementCompletionBlock
initWithOperation:repairRecordID:recovered:package:sizes:putReceipts:
T@"CKRecordID",C,N,V_repairRecordID
isFetchAllRecordZonesOperation
ignorePCSFailures
checkPCSIdentity
fetchZonesFromServer
saveZonesWithUpdatedZonePCS
zoneIDsNeedingPCSUpdateRetry
zonesToSaveForPCSUpdateByZoneID
pcsUpdateErrorsByZoneID
_locked_callbackForRecordZone:zoneID:error:
zoneIDsNeedingDugongKeyRoll
recordZoneFetchedProgressBlock
_cachePCSOnRecordZone:
_handleRecordZoneSaved:error:
fetchZonesFromServer:
_continueHandlingFetchedRecordZone:zoneID:
hasZoneProtectionDataEntitlement
_locked_checkAndUpdateZonePCSIfNeededForZone:error:
_handleAnonymousZoneDataObjects:responsecode:
setAnonymousRecordZoneTuplesFetchedBlock:
setZonesToSaveForPCSUpdateByZoneID:
setZoneIDsNeedingPCSUpdateRetry:
setPcsUpdateErrorsByZoneID:
setZoneIDsNeedingDugongKeyRoll:
_isFetchAllRecordZonesOperation
_ignorePCSFailures
_recordZoneFetchedProgressBlock
_zonesToSaveForPCSUpdateByZoneID
_zoneIDsNeedingPCSUpdateRetry
_pcsUpdateErrorsByZoneID
_zoneIDsNeedingDugongKeyRoll
TB,N,V_isFetchAllRecordZonesOperation
T@"NSMutableDictionary",&,N,V_zonesToSaveForPCSUpdateByZoneID
T@"NSMutableArray",&,N,V_zoneIDsNeedingPCSUpdateRetry
T@"NSMutableDictionary",&,N,V_pcsUpdateErrorsByZoneID
T@"NSMutableSet",&,N,V_zoneIDsNeedingDugongKeyRoll
TB,N,V_ignorePCSFailures
T@"<CKFetchRecordZonesOperationCallbacks>",&,D,N
T@?,C,N,V_recordZoneFetchedProgressBlock
isTestContainer
itemType
setItemType:
CKDPCSData
setCKDPCSData:
setShareID:
setParentID:
_itemType
_CKDPCSData
_parentID
T@"NSNumber",&,N,V_itemType
T@,&,N,V_CKDPCSData
T@"NSString",&,N,V_accountID
T@"NSString",&,N,V_zoneID
T@"NSString",&,N,V_shareID
T@"NSString",&,N,V_parentID
groupIdentifierForContainerID:accountOverrideInfo:
cacheTableGroupInDatabase:containerID:accountOverrideInfo:
cacheTable
PCSCacheValidTime
cacheValidTime
newEntryObject
isNoUniqueRowError:
deletePCSDataForID:databaseScope:itemType:accountID:serviceName:
deletePCSDataForZone:account:serviceName:
deletePCSDataForShare:account:serviceName:
PCSDataForID:databaseScope:itemType:accountID:serviceName:
enumerateGroupsInDatabase:block:
cacheRequestCount
setCacheRequestCount:
cacheHitCount
setCacheHitCount:
_lockedFetchPCSDataForID:databaseScope:itemType:
insertObject:orUpdateProperties:label:
_lockedSetPCSData:databaseScope:itemType:forID:
_setPCSData:forItemWithID:databaseScope:itemType:withCompletionHandler:
evictPCSSQLCachesForKnownContainers
_cacheGroup
_table
_asyncQueue
_cacheRequestCount
_cacheHitCount
TQ,V_cacheRequestCount
TQ,V_cacheHitCount
_setupDecryptCallbackForQueue:
decryptGroup
callback
initWithRecord:callbackQueue:
setDecryptGroup:
setCallback:
numUnwrapAttempts
setNumUnwrapAttempts:
_decryptGroup
_callback
_numUnwrapAttempts
T@"CKRecord",R,N,V_record
T@"NSObject<OS_dispatch_group>",&,N,V_decryptGroup
T@?,C,N,V_callback
TQ,V_numUnwrapAttempts
isMarkedToFinish
recordDecryptGroup
_recordInfoWasDecrypted:nextSteps:
outstandingDecryptions
recordDecryptQueue
_decryptRecordInfo:
maxUnwrapAttempts
_clearProtectionDataForRecordInfo:
recordNamesForFakingDecryptionFailure
hasPropertiesRequiringDecryption
_handleProtectionDataForRecordInfo:
_unwrapEncryptedPropertiesOnRecord:withPCS:
_decryptRecordPCSForRecord:usingSharePCS:
_decryptRecordPCSForRecord:usingZonePCS:
_decryptRecordPCSForRecord:usingChainPCS:
_decryptRecordInfo:usingWebSharingIdentityData:
_handleZoneProtectionDataForRecordInfo:
_handleShareProtectionDataForRecordInfo:
_unwrapAssetKeyForAsset:inRecordWithID:forField:withPCS:
_unwrapPackageAssets:inRecordWithID:forField:withPCS:
_unwrapMergeableRecordValue:inRecordWithID:forField:withPCS:
_unwrapEncryptedPropertiesForRecordValueStore:withPCS:
isStarted
setMarkedToFinish:
_finishDecryptOperation
setOutstandingDecryptions:
setRecordDecryptGroup:
setRecordDecryptQueue:
setMaxUnwrapAttempts:
_markedToFinish
_outstandingDecryptions
_recordDecryptGroup
_recordDecryptQueue
_maxUnwrapAttempts
T@"NSMutableArray",&,N,V_outstandingDecryptions
T@"NSObject<OS_dispatch_group>",&,N,V_recordDecryptGroup
TB,GisStarted,V_started
markedToFinish
TB,GisMarkedToFinish,V_markedToFinish
T@"NSObject<OS_dispatch_queue>",&,N,V_recordDecryptQueue
TQ,N,V_maxUnwrapAttempts
setAutomaticallyRetryNetworkFailures:
setPreferAnonymousRequests:
sourceApplicationBundleIdentifier
setSourceApplicationBundleIdentifier:
isCKInternalMetric
setMetricUUID:
eventName
startTime
endTime
attributes
reportMetricWithOptions:genericMetricType:eventName:startTime:endTime:attributes:
_infoFetchedGroup
T@"NSObject<OS_dispatch_group>",R,N,V_infoFetchedGroup
mergeableValueIDsByRequestID
previousContinuationTokens
setMergeableValueIDsByRequestID:
_previousContinuationTokens
_mergeableValueIDsByRequestID
T@"NSMutableDictionary",&,N,V_mergeableValueIDsByRequestID
T@"NSDictionary",R,N,V_previousContinuationTokens
_initWithTestDeviceReference:
sharedPcsCaches
isDetached
existingServerForReference:
deviceWithDeviceID:
deviceDirectory
isLiveDevice
setDeviceScopedDatabase:
setDeviceScopedStateManager:
setAccountDataSecurityObserver:
setTestServer:
setMetadataCache:
setThrottleManager:
setTokenRegistrationScheduler:
setSharedPcsCaches:
_testDeviceReference
_deviceScopedDatabase
_deviceScopedStateManager
_accountDataSecurityObserver
_testServer
_metadataCache
_throttleManager
_tokenRegistrationScheduler
_sharedPcsCaches
T@"CKTestServer",&,N,V_testServer
T@"CKDMetadataCache",&,N,V_metadataCache
T@"CKDThrottleManager",&,N,V_throttleManager
T@"CKDLogicalDeviceScopedStateManager",&,N,V_deviceScopedStateManager
T@"CKDTokenRegistrationScheduler",&,N,V_tokenRegistrationScheduler
T@"CKDAccountDataSecurityObserver",&,N,V_accountDataSecurityObserver
T@"CKSQLiteDatabase",&,N,V_deviceScopedDatabase
T@"NSHashTable",&,N,V_sharedPcsCaches
T@"CKTestDeviceReference",R,N,V_testDeviceReference
T@"CKTestDevice",R,N
_MMCSManifestItem
_MMCSSectionItems
T@"CKDMMCSItem",&,N,V_MMCSManifestItem
T@"NSArray",&,N,V_MMCSSectionItems
primaryServiceName
identitySet
initWithIdentitySet:withPrimaryServiceName:
identityString
_identityString
_identitySet
_primaryServiceName
T^{_PCSIdentitySetData=},R,N,V_identitySet
T@"NSString",R,N,V_primaryServiceName
T@"NSString",R,N,V_identityString
setCachedAccountDSID:
setPCSIdentityWrappersByServiceName:
PCSIdentityWrappersByServiceName
serviceIsManatee:
fakeManateeOverride
isManateeAvailableWithError:
refetchPCSIdentitySet
cachedAccountDSID
_copyTestAccountIdentitySetForService:forBackingMockAccount:withError:
_copyTestAccountIdentitySetForService:forBackingExplicitCredentialsAccount:withError:
_createIdentitySetForService:dsid:error:
_cacheIdentitySet:forService:
_hasCurrentKeyForService:inIdentitySet:withError:
_createSpecialInMemorySetCombiningLiverpoolWithServiceNamed:dsid:error:
_copyIdentityForService:useCache:validateCurrentKey:error:
_copyPublicKeyDataForIdentitySet:withService:withError:
_copyPublicKeyDataForAllIdentitiesInSet:withService:
_addIdentitiesFromServiceNamed:dsid:toMutableSet:
_generatePCSIdentityOptionsForService:forBackingExplicitCredentialsAccount:withError:
sharedFakeIdentitySetsByServiceByUsername
_copyStingrayIdentitiesForService:forBackingExplicitCredentialsAccount:withError:
_getTestAccountIdentitySetForService:forBackingExplicitCredentialsAccount:withError:
stingrayIdentitiesData
_copyStingrayIdentitiesForBackingMockAccount:withError:
CKMapValues:
setStingrayIdentitiesData:
sharedMockIdentitySetsByServiceByIdentifier
_setStingrayIdentitySet:forServiceName:backingMockAccount:withError:
_getTestAccountIdentitySetForService:forBackingMockAccount:withError:
forceManateeUnavailableForUnitTests
setForceSecurityErrorOnIdentityValidation:
setServiceIsManateeForUnitTests:
setForceManateeUnavailableForUnitTests:
setRefetchPCSIdentitySet:
forceSecurityErrorOnIdentityValidation
_rollTestAccountIdentitySetForService:forBackingExplicitCredentialsAccount:withError:
debugIdentity
setDebugIdentity:
serviceIsManateeForUnitTests
_forceSecurityErrorOnIdentityValidation
_forceManateeUnavailableForUnitTests
_serviceIsManateeForUnitTests
_refetchPCSIdentitySet
_cachedAccountDSID
_PCSIdentityWrappersByServiceName
_debugIdentity
T@"NSString",&,V_cachedAccountDSID
T@"NSMutableDictionary",&,V_PCSIdentityWrappersByServiceName
T^{_PCSIdentityData=},N,V_debugIdentity
TB,N,V_forceSecurityErrorOnIdentityValidation
TB,N,V_forceManateeUnavailableForUnitTests
TB,N,V_serviceIsManateeForUnitTests
TB,N,V_refetchPCSIdentitySet
T@"NSString",R,N,V_serviceName
T@"CKDPCodeFunctionInvokeResponseAttestationResponse",&,N,V_attestationResponse
saveVerifiedAccount:withCompletionHandler:
invalidated
TB,R,N,GisInvalidated
T@"CKDPRecordIdentifier",R,N,V_recordID
T@"NSData",R,N,V_fileSignature
T@"NSData",R,N,V_referenceSignature
T@"NSNumber",R,N,V_size
hasDiscoverable
_handleRetrievedPrivacySettings:
addUploadTokens:
addContentResponseHeaders:
uploadTokensCount
clearUploadTokens
uploadTokensAtIndex:
clearContentResponseHeaders
contentResponseHeadersAtIndex:
uploadTokensType
contentResponseHeadersType
hasAuthPutResponse
setUploadTokens:
setContentResponseHeaders:
_contentResponseHeaders
_uploadTokens
T@"NSMutableArray",&,N,V_uploadTokens
T@"NSMutableArray",&,N,V_contentResponseHeaders
_fetchMetadataForShares
_prepareShareMetadata
_fetchAcceptedShares
_decryptShareMetadata
_acceptShares
shareURLsToAccept
_processAnonymousShares
acceptedShareURLsToFetch
acceptCompletionBlock
anonymousShareTuplesAcceptAttempted
anonymousShareTuplesAccepted
_performCallbackForURL:withShare:error:
shareMetadatasToAcceptByURL
_callingParticipantOONForShareMetadata:
publicProtectionEtag
numShareAcceptAttempts
setNumShareAcceptAttempts:
_handleShareURLAccepted:forShare:responseCode:
clientProvidedMetadatasByURL
sharingServiceTypeForShareMetadata:
_keySwapForOONParticipant:
_validateInvitedPCSCanBeDecryptedForShare:
setShareURLsToAccept:
setClientProvidedMetadatasByURL:
setAcceptedShareURLsToFetch:
setShareMetadatasToAcceptByURL:
setAnonymousShareTuplesAcceptAttempted:
setAnonymousShareTuplesAccepted:
_acceptCompletionBlock
_clientProvidedMetadatasByURL
_shareURLsToAccept
_acceptedShareURLsToFetch
_shareMetadatasToAcceptByURL
_numShareAcceptAttempts
_anonymousShareTuplesAcceptAttempted
_anonymousShareTuplesAccepted
T@"NSMutableDictionary",&,N,V_clientProvidedMetadatasByURL
T@"NSMutableArray",&,N,V_shareURLsToAccept
T@"NSMutableArray",&,N,V_acceptedShareURLsToFetch
T@"NSMutableDictionary",&,N,V_shareMetadatasToAcceptByURL
TQ,N,V_numShareAcceptAttempts
T@"NSMutableDictionary",&,N,V_anonymousShareTuplesAcceptAttempted
T@"NSMutableArray",&,N,V_anonymousShareTuplesAccepted
T@"<CKAcceptSharesOperationCallbacks>",&,D,N
T@?,C,N,V_acceptCompletionBlock
setUuid:
hasUuid
T@"NSString",&,N,V_uuid
recordIDByRequestID
recordVersionsFetchedBlock
setRecordIDByRequestID:
_recordVersionsFetchedBlock
_recordIDByRequestID
T@"NSMutableDictionary",&,N,V_recordIDByRequestID
T@?,C,N,V_recordVersionsFetchedBlock
_recordPCS
T^{_OpaquePCSShareProtection=},N,V_recordPCS
sourceRecordChangeTag
recordByRequestID
recordPostedBlock
setMoveChanges:
setRecordByRequestID:
_recordPostedBlock
_moveChanges
_recordByRequestID
T@"NSArray",&,N,V_moveChanges
T@"NSMutableDictionary",&,N,V_recordByRequestID
T@?,C,N,V_recordPostedBlock
_finishGenerator
isValid
setValid:
generator
setGenerator:
_valid
_generator
T^v,N,V_generator
valid
TB,N,GisValid,V_valid
hasEncryptedInvocationKey
hasProtectionSource
setHasKeyVersion:
hasKeyVersion
setHasScheme:
hasScheme
schemeAsString:
StringAsScheme:
encryptedInvocationKey
keyVersion
_keyVersion
_encryptedInvocationKey
_protectionSource
_scheme
T@"NSData",&,N,V_encryptedInvocationKey
T@"NSString",&,N,V_protectionSource
Tq,N,V_keyVersion
Ti,N,V_scheme
addDatabaseScopeToZoneIDs
_initWithContainerScopedUserID:orgAdminUserID:packageStagingDirectory:databaseScope:addDatabaseScopeToZoneIDs:
initWithResponseUUID:contentResponseHeaders:contentResponseBody:
overriddenDatabaseScope
overriddenContainerScopedUserID
_isDefaultUserNameFromServer:
_isDefaultUserNameFromClient:
CKDPIdentifier_Record
defaultRecordZone
recordZoneIDFromPRecordZoneIdentifier:asAnonymousCKUserID:error:
pRecordIdentifierFromUserRecordName:
pContainerScopedRecordZoneIdentifierFromFromPRecordZoneIdentifier:
userNameFromPIdentifier:error:
initWithZoneName:ownerName:anonymousCKUserID:databaseScope:
CKDPIdentifier_Zone
pUserIdentifierFromUserRecordName:
setOwnerIdentifier:
pContainerScopedUserIdentifierFromPUserIdentifier:
CKDPIdentifier_ShareId
recordIDFromPShareIdentifier:asAnonymousCKUserID:error:
referenceFromPReference:asAnonymousCKUserID:error:
initWithRecordID:action:
referenceAction
_initSkippingValidationWithRecordType:recordID:
hasEncryptedPublicSharingKey
recordIDFromPUserName:error:
setCreatorUserRecordID:
setLastModifiedUserRecordID:
setParent:
_valueTypeIsAnEncryptedBytesTypeForField:
creatorUserRecordID
pIdentifierFromUserRecordID:
lastModifiedUserRecordID
pShareFromShare:forCache:
dontCreateValidatingParentReferences
hasUpdatedExpirationTimeInterval
updatedExpirationTimeInterval
canHostServerURLInfo
encryptedFullTokenData
_pRecordFromRecordSansValues:forCache:
changedKeysSet
setByAddingObjectsFromSet:
setConstructedAssetDownloadURLTemplate:
packageInDaemonWithBasePath:error:
downloadURLExpirationDate
setUploadURLExpirationDate:
setDownloadURLExpirationDate:
CKDPIdentifier_MergeableValue
initWithValueID:metadata:data:
initWithValueID:metadata:encryptedData:
initWithValueID:metadata:asset:
pMergeableDeltaMetadataFromMetadata:mergeableValueID:error:
replacedDeltaIdentifiers
initWithIdentifier:previousVector:contentsVector:removalsVector:dependenciesVector:replacedDeltaIdentifiers:
hasTimestamps
hasEncryptedTimestamps
hasTimestampsAuthTag
timestamps
timestampsAuthTag
_validate:
addReplacedDeltaIdentifiers:
setTimestamps:
setTimestampsAuthTag:
predicate
sortDescriptors
errorCode
reason
predicateWithValue:
initWithRecordType:predicate:subscriptionID:options:
initWithZoneID:subscriptionID:
initWithSubscriptionID:
setNotificationInfo:
shouldBadge
_setShouldBadgeNoValidate:
shouldSendContentAvailable
_setShouldSendContentAvailableNoValidate:
shouldSendMutableContent
_setShouldSendMutableContentNoValidate:
collapseIdKey
setCollapseIDKey:
additionalFields
hasAlert
alert
_setAlertBodyNoValidate:
_setAlertLocalizationKeyNoValidate:
_setAlertLocalizationArgsNoValidate:
_setTitleNoValidate:
_setTitleLocalizationKeyNoValidate:
_setTitleLocalizationArgsNoValidate:
_setSubtitleNoValidate:
_setSubtitleLocalizationKeyNoValidate:
_setSubtitleLocalizationArgsNoValidate:
_setAlertActionLocalizationKeyNoValidate:
_setAlertLaunchImageNoValidate:
_setSoundNameNoValidate:
_setCategoryNoValidate:
querySubscriptionOptions
setAdditionalFields:
setShouldBadge:
setShouldSendContentAvailable:
setShouldSendMutableContent:
collapseIDKey
setCollapseIdKey:
setAlert:
alertBody
alertLocalizationKey
alertLocalizationArgs
titleLocalizationKey
titleLocalizationArgs
subtitleLocalizationKey
subtitleLocalizationArgs
alertActionLocalizationKey
alertLaunchImage
recordZoneFromPRecordZone:asAnonymousCKUserID:error:
setInvitedKeysToRemove:
_initWithShareRecordID:
_setPublicPermissionNoSideEffects:
setParticipantVisibility:
setAllowsAnonymousPublicAccess:
setAllParticipants:
resetFetchedParticipants
registerFetchedParticipant:
pParticipantFromShareParticipant:forCache:
participantVisibility
allowsAnonymousPublicAccess
invitedProtectionEtag
setUserRecordID:
setInviterID:
setRole:
identityDelegate
forceSendPublicKeyForAnonymousParticipants
familyName
givenName
inviterID
isOrgAdminUser
invitationTokenStatus
notificationFromRemoteNotificationDictionary:
initWithNotificationUUID:
setNotificationID:
hasDialog
dialog
setAlertBody:
setAlertLocalizationKey:
setAlertLocalizationArgs:
setTitleLocalizationKey:
setTitleLocalizationArgs:
setSubtitleLocalizationKey:
setSubtitleLocalizationArgs:
setAlertActionLocalizationKey:
setAlertLaunchImage:
sound
setBadge:
hasIsRead
isRead
setNotificationType:
pAliasWithEmailAddress:
pAliasWithUserRecordID:
pAliasWithPhoneNumber:
pAliasWithHashedStringID:type:
hasZoneName
setZoneName:
hasOperationType
hasInvernessServiceName
invernessServiceName
hasInvernessFunctionName
invernessFunctionName
hasBundleID
setOperationGroupNamePrefix:
setIntervalLengthSeconds:
setRepeatEverySeconds:
setThrottleStartDate:
startOfDayForDate:
setIsServerThrottle:
pUserID
recordIDFromPShareIdentifier:error:
capabilitiesFromPZoneCapabilities:
shareFromPShare:error:
identityFromPUser:
setPackageStagingDirectory:
setAddDatabaseScopeToZoneIDs:
downloadPreauthorizationMap
setDownloadPreauthorizationMap:
_dontCreateValidatingParentReferences
_addDatabaseScopeToZoneIDs
_identityDelegate
_overriddenContainerScopedUserID
_overriddenDatabaseScope
_downloadPreauthorizationMap
T@"NSString",C,N,V_overriddenContainerScopedUserID
Tq,N,V_overriddenDatabaseScope
T@"NSString",C,N,V_packageStagingDirectory
TB,N,V_addDatabaseScopeToZoneIDs
T@"NSMutableDictionary",&,N,V_downloadPreauthorizationMap
TB,N,V_dontCreateValidatingParentReferences
T@"CKDPIdentifier",R,N
Tq,R,N,V_databaseScope
T@"<CKDProtocolTranslatorIdentityDelegate>",W,N,V_identityDelegate
requestedListFieldsForDesiredIndexedListKeys
clientVersionETagMatch
recordCount
setRecordCount:
_desiredIndexedListKeys
_recordCount
TQ,N,V_recordCount
T@"NSArray",&,N,V_desiredIndexedListKeys
replacedDeltaIdentifiersCount
clearReplacedDeltaIdentifiers
replacedDeltaIdentifiersAtIndex:
replacedDeltaIdentifiersType
setReplacedDeltaIdentifiers:
_encryptedTimestamps
_replacedDeltaIdentifiers
_timestamps
_timestampsAuthTag
T@"NSData",&,N,V_encryptedTimestamps
T@"CKDPDistributedTimestamps",&,N,V_timestamps
T@"NSData",&,N,V_timestampsAuthTag
T@"NSMutableArray",&,N,V_replacedDeltaIdentifiers
setDiscoverableTrinary:
discoverableTrinary
_discoverableTrinary
Tq,N,V_discoverableTrinary
T@"NSString",C,N,V_bundleID
_replaceMergeableDeltas
T@"<CKReplaceMergeableDeltasOperationCallbacks>",&,D,N
shouldEncodePCSData
initWithPCSData:
_pcs
_pcsKeyID
T@"NSString",&,N,V_pcsKeyID
T@"<NSSecureCoding>",R,N
T^{_OpaquePCSShareProtection=},N,V_pcs
T@"NSString",C,N,V_etag
T@"NSData",C,N,V_pcsData
_encryptedChainPCSPrivateKey
T@"CKEncryptedData",R,N,V_encryptedChainPCSPrivateKey
setZoneishPublicKeyID:
initWithPCSData:recordID:
_chainParentPublicKeyID
_zoneishPublicKeyID
_signingPCS
_chainPCSData
_encryptedPublicSharingKey
T@"CKRecordID",&,N,V_parentID
T@"NSData",&,N,V_chainParentPublicKeyID
T@"NSData",&,N,V_zoneishPublicKeyID
T@"CKRecordID",&,N,V_shareID
T^{_OpaquePCSShareProtection=},N,V_signingPCS
T@"CKDChainPCSData",&,N,V_chainPCSData
T@"CKEncryptedData",&,N,V_encryptedPublicSharingKey
initWithZone:
setZoneishPCSData:
_zoneishPCS
_zoneishPCSData
_zonePCSModificationDate
T@"NSData",C,N,V_zoneishPCSData
T@"NSDate",&,N,V_zonePCSModificationDate
initWithShareID:pcsData:
setMyParticipantPermission:
setMyParticipantRole:
setPublicPermission:
myParticipantPermission
_serviceType
_publicPermission
_myParticipantRole
_myParticipantPermission
_myParticipantPCS
_myParticipantPCSData
_preKeyRollInvitedPCS
_publicPCS
TQ,N,V_serviceType
Tq,N,V_publicPermission
Tq,N,V_myParticipantRole
Tq,N,V_myParticipantPermission
T^{_OpaquePCSShareProtection=},N,V_myParticipantPCS
T@"NSData",C,N,V_myParticipantPCSData
T^{_OpaquePCSShareProtection=},N,V_preKeyRollInvitedPCS
T^{_OpaquePCSShareProtection=},N,V_publicPCS
T@"NSString",C,N,V_publicPCSEtag
T@"NSData",C,N,V_publicPCSData
setHasDiscoverable:
TB,N,V_discoverable
hasPath
setUser:
hasUser
_user
T@"CKDPRecord",&,N,V_user
CKSQLiteClassName
_volumeIndex
_volumeUUID
T@"NSNumber",&,N,V_volumeIndex
T@"NSUUID",&,N,V_volumeUUID
clearOneofValuesForIdentifier
setNumericValue:
setHasNumericValue:
hasNumericValue
setHasIdentifier:
identifierAsString:
StringAsIdentifier:
numericValue
_numericValue
TQ,N,V_numericValue
Ti,N,V_identifier
badgeValue
initWithOperation:badgeValue:
_badgeValue
TQ,R,N,V_badgeValue
setConfig:
setHasServiceType:
hasServiceType
serviceTypeAsString:
StringAsServiceType:
hasConfig
config
_config
Ti,N,V_serviceType
T@"CKCDPCodeServiceRequestServiceClientConfig",&,N,V_config
setHasOperationType:
operationTypeAsString:
StringAsOperationType:
setHasDuration:
hasDuration
setHasExpirationTime:
_duration
TQ,N,V_duration
Td,N,V_expirationTime
_initWithStartDate:
mutableCopyWithZone:
setRequestOperationCountsByType:
setTotalBytesByChunkProfile:
setChunkCountByChunkProfile:
setFileCountByChunkProfile:
operationState
initWithOperationState:startDate:duration:
encodeDouble:forKey:
encodeInt64:forKey:
decodeDoubleForKey:
decodeInt64ForKey:
rangesCopy
T@"NSDate",R
Td,R
T@"NSMutableDictionary",R
T@"NSMutableSet",R
T@"NSArray",R
_queueing
_executing
_bytesUploaded
_bytesDownloaded
_connections
_connectionsCreated
_recordsUploaded
_recordsDownloaded
_recordsDeleted
_assetsUploaded
_assetsUploadedFileSize
_assetsDownloaded
_assetsDownloadedFileSize
_requestCount
_retries
_requestOperationCountsByType
_totalBytesByChunkProfile
_chunkCountByChunkProfile
_fileCountByChunkProfile
T@"NSDate",&,V_startDate
Td,V_duration
Td,V_queueing
Td,V_executing
TQ,V_bytesUploaded
TQ,V_bytesDownloaded
TQ,V_connections
TQ,V_connectionsCreated
TQ,V_recordsUploaded
TQ,V_recordsDownloaded
TQ,V_recordsDeleted
TQ,V_assetsUploaded
TQ,V_assetsUploadedFileSize
TQ,V_assetsDownloaded
TQ,V_assetsDownloadedFileSize
TQ,V_requestCount
TQ,V_retries
T@"NSMutableSet",R,V_requestUUIDs
T@"NSMutableDictionary",&,N,V_requestOperationCountsByType
T@"NSMutableDictionary",&,N,V_totalBytesByChunkProfile
T@"NSMutableDictionary",&,N,V_chunkCountByChunkProfile
T@"NSMutableDictionary",&,N,V_fileCountByChunkProfile
absoluteStart
absoluteStop
compareStartTime:
compareStopTime:
relativeStart
_operationState
TQ,R,V_operationState
Td,R,V_duration
T@"CKDOperationMetrics",R,C,N,V_cloudKitMetrics
T@"CKDOperationMetrics",R,C,N,V_MMCSMetrics
instancesRespondToSelector:
instanceMethodSignatureForSelector:
weAreNeverEverEverUsingEncryption:
PCSManagerSuperclass
setPCSManagerSuperclass:
_PCSManagerSuperclass
T#,&,N,V_PCSManagerSuperclass
T@"CKDPUser",&,N,V_user
_addAnonymousSharesToSharedDB
skippedRecordsWithPurelyMergeableChanges
sendAllFields
oplock
requestedFieldsByRecordID
sendMergeableDeltas
generateMergeableDeltaSaveOperationsForRecord:error:
mergeableFieldKeyByRequestID
mergeableDeltaSavedBlock
replacedDeltasBlock
setOplock:
setSendAllFields:
setRequestedFieldsByRecordID:
setMergeableFieldKeyByRequestID:
setContainsMergeableValues:
setSkippedRecordsWithPurelyMergeableChanges:
_sendMergeableDeltas
_oplock
_sendAllFields
_containsMergeableValues
_mergeableDeltaSavedBlock
_replacedDeltasBlock
_requestedFieldsByRecordID
_mergeableFieldKeyByRequestID
_skippedRecordsWithPurelyMergeableChanges
T@"NSArray",&,N,V_records
TB,N,V_oplock
TB,N,V_sendAllFields
T@"NSData",&,N,V_clientChangeTokenData
T@"NSDictionary",&,N,V_requestedFieldsByRecordID
T@"NSMutableDictionary",&,N,V_mergeableFieldKeyByRequestID
TB,N,V_containsMergeableValues
T@"NSMutableArray",&,N,V_skippedRecordsWithPurelyMergeableChanges
TB,N,V_sendMergeableDeltas
T@?,C,N,V_mergeableDeltaSavedBlock
T@?,C,N,V_replacedDeltasBlock
setRequestTime:
setRequestMethod:
setRequestURL:
setRequestHeaders:
setBodyStreamResetCount:
setRequestObjects:
setResponseStatus:
setResponseObjects:
_requestTime
_requestMethod
_requestURL
_requestHeaders
_bodyStreamResetCount
_requestObjects
_responseStatus
_responseTime
_responseObjects
T@"NSDate",&,N,V_requestTime
T@"NSString",&,N,V_requestMethod
T@"NSURL",&,N,V_requestURL
T@"NSDictionary",&,N,V_requestHeaders
Tq,N,V_bodyStreamResetCount
T@"NSArray",&,N,V_requestObjects
Tq,N,V_responseStatus
T@"NSDictionary",&,N,V_responseHeaders
T@"NSArray",&,N,V_responseObjects
T@"NSDate",R,N,V_responseTime
clearOneofValuesForDataProtection
addClientConfig:
clientConfigsCount
clearClientConfigs
clientConfigAtIndex:
setAccountConfig:
setAuthInformation:
clientConfigType
serializationFormat
setHasSerializationFormat:
hasSerializationFormat
serializationFormatAsString:
StringAsSerializationFormat:
hasAccountConfig
hasRequestContext
hasAuthInformation
dataProtection
setDataProtection:
setHasDataProtection:
hasDataProtection
dataProtectionAsString:
StringAsDataProtection:
clientConfigs
setClientConfigs:
accountConfig
requestContext
authInformation
_accountConfig
_authInformation
_clientConfigs
_dataProtection
_requestContext
_serializationFormat
Ti,N,V_serializationFormat
T@"NSMutableArray",&,N,V_clientConfigs
T@"CKCDPCodeServiceRequestAccountConfig",&,N,V_accountConfig
T@"CKCDPCodeServiceRequestRequestContext",&,N,V_requestContext
T@"CKCDPCodeServiceRequestAssetAuthorizeGetRequestOptions",&,N,V_assetAuthorizeGetRequestOptions
T@"CKCDPCodeServiceRequestAttestationRequest",&,N,V_attestationRequest
T@"CKCDPCodeServiceRequestAuthInformation",&,N,V_authInformation
T@"CKCDPCodeServiceRequestProtectedCloudComputeMetadata",&,N,V_protectedCloudComputeMetadata
Ti,N,V_dataProtection
addChangedZones:
changedZonesCount
clearChangedZones
changedZonesAtIndex:
changedZonesType
setChangedZones:
_changedZones
T@"NSMutableArray",&,N,V_changedZones
decrypt:
T@"NSData",&,N,V_key
setClientVersionETagMatch:
setHasClientVersionETagMatch:
hasClientVersionETagMatch
_clientVersionETagMatch
TB,N,V_clientVersionETagMatch
setInvernessServiceName:
setInvernessFunctionName:
setHasDatabaseType:
databaseTypeAsString:
StringAsDatabaseType:
_databaseType
_invernessFunctionName
_invernessServiceName
_zoneName
Ti,N,V_databaseType
T@"NSString",&,N,V_zoneName
T@"NSString",&,N,V_invernessServiceName
T@"NSString",&,N,V_invernessFunctionName
initWithUUIDBytes:
initWithVolumeUUID:deviceID:mountToPath:
volumeForPath:
mountPath
_mountPath
T@"NSUUID",R,N,V_volumeUUID
T@"NSNumber",R,N,V_deviceID
T@"NSString",R,N,V_mountPath
failIfNotDoneAllRegularAndSectionAndRereferenceItemsWithError:
setAssetZone:
_isFailed
_useMMCSEncryptionV2
_assetZone
T@"NSMutableArray",&,N,V_assetRecords
T@"CKDAssetZone",&,N,V_assetZone
TB,N,V_isFailed
T@"CKDAssetTokenRequest",W,N,V_assetTokenRequest
TB,N,V_useMMCSEncryptionV2
assetMetadata
packages
packageMetadata
unavailableAssets
unavailablePackages
_fetchAssetMetadata
_uploadAssetsModify
_updateMissingAssetServerStatus
assetOrPackageUUIDToMetadata
assetOrPackageUUIDToOriginalRecord
UUIDToAssetOrPackage
assetOrPackageForMetadata:inRecord:
assetOrPackageRepairedBlock
setAssetOrPackageUUIDToUploadError:
setUploadedAssetOrPackageUUIDs:
setUploadOperation:
uploadedAssetOrPackageUUIDs
assetOrPackageUUIDToUploadError
repairErrorShouldBeMarkedAsBroken:
unavailableAssetsAndPackages
setUpdateOperation:
setUUIDToAssetOrPackage:
setAssetOrPackageUUIDToMetadata:
setUnavailableAssetsAndPackages:
uploadOperation
updateOperation
setAssetOrPackageUUIDToOriginalRecord:
_assetOrPackageRepairedBlock
_UUIDToAssetOrPackage
_assetOrPackageUUIDToMetadata
_unavailableAssetsAndPackages
_uploadOperation
_updateOperation
_assetOrPackageUUIDToOriginalRecord
_assetOrPackageUUIDToUploadError
_uploadedAssetOrPackageUUIDs
T@"NSDictionary",&,N,V_UUIDToAssetOrPackage
T@"NSDictionary",&,N,V_assetOrPackageUUIDToMetadata
T@"NSArray",&,N,V_unavailableAssetsAndPackages
T@"CKDOperation",&,N,V_fetchOperation
T@"CKDOperation",&,N,V_uploadOperation
T@"CKDOperation",&,N,V_updateOperation
T@"NSMutableDictionary",&,N,V_assetOrPackageUUIDToOriginalRecord
T@"NSDictionary",&,N,V_assetOrPackageUUIDToUploadError
T@"NSSet",&,N,V_uploadedAssetOrPackageUUIDs
T@"<CKRepairAssetsOperationCallbacks>",&,D,N
T@?,C,N,V_assetOrPackageRepairedBlock
isConstructedAsset
trackingID
_sizeForItem:
_updateTotalBytes
_updateTotalCompletedBytes
lastItemPercentage
hasCachedTotalBytes
setHasCachedTotalBytes:
hasCachedCompletedBytes
setHasCachedCompletedBytes:
cachedTotalBytes
setCachedTotalBytes:
cachedCompletedBytes
setCachedCompletedBytes:
completedBytesByItems
setCompletedBytesByItems:
setTrackingID:
_hasCachedTotalBytes
_hasCachedCompletedBytes
_lastItemPercentage
_cachedTotalBytes
_cachedCompletedBytes
_completedBytesByItems
_trackingID
TB,N,V_hasCachedTotalBytes
TB,N,V_hasCachedCompletedBytes
TQ,N,V_cachedTotalBytes
TQ,N,V_cachedCompletedBytes
T@"NSMapTable",&,N,V_completedBytesByItems
T@"NSString",&,N,V_trackingID
Td,N,V_lastItemPercentage
opQueue
_lockedFetchesAreReady
runningFetches
queuedFetches
skipQueuedFetchCycleDetection
maximumQueuedFetchWaitTime
_lockedRescheduleFetchTimer
_lockedTearDownFetchTimer
timerSource
setTimerSource:
fetchCoalescer
setSkipQueuedFetchCycleDetection:
_lockedGetQueuedFetchForOperation:ofClass:
postNotificationName:object:
setOpQueue:
setQueuedFetches:
setRunningFetches:
setFetchCoalescer:
_skipQueuedFetchCycleDetection
_opQueue
_queuedFetches
_runningFetches
_fetchCoalescer
_timerSource
T@"NSObject<OS_dispatch_queue>",&,N,V_opQueue
T@"NSOperationQueue",&,N,V_queue
T@"NSMutableArray",&,N,V_queuedFetches
T@"NSMutableArray",&,N,V_runningFetches
T@"CKCoalescer",&,N,V_fetchCoalescer
T@"NSObject<OS_dispatch_source>",&,N,V_timerSource
TB,N,V_skipQueuedFetchCycleDetection
setHasMaxChangedZones:
hasMaxChangedZones
maxChangedZones
_maxChangedZones
TI,N,V_maxChangedZones
T@"<CKFetchArchivedRecordsOperationCallbacks>",&,D,N
modTime
statusDescription
isEqualToAssetHandle:keys:differencesDescription:
_UUID
_lastUsedTime
_modTime
T@"NSNumber",&,N,V_itemID
T@"NSUUID",&,N,V_UUID
T@"NSDate",&,N,V_lastUsedTime
T@"NSNumber",&,N,V_status
T@"NSDate",&,N,V_modTime
T@"NSNumber",&,N,V_fileSize
T@"NSNumber",&,N,V_chunkCount
setApplicationBundleId:
setClientInfo:
setUserAgent:
setDatabaseOwnerId:
databaseEnvironment
setHasDatabaseEnvironment:
hasDatabaseEnvironment
databaseEnvironmentAsString:
StringAsDatabaseEnvironment:
hasDeviceId
hasApplicationBundleId
hasClientInfo
setHasDsid:
hasDsid
hasUserAgent
hasOperationGroup
hasDatabaseOwnerId
deviceId
applicationBundleId
clientInfo
userAgent
databaseOwnerId
_applicationBundleId
_clientInfo
_databaseEnvironment
_databaseOwnerId
_deviceId
_operationGroup
_userAgent
T@"NSString",&,N,V_userId
Ti,N,V_databaseEnvironment
T@"NSString",&,N,V_deviceId
T@"NSString",&,N,V_applicationBundleId
T@"NSString",&,N,V_clientInfo
TQ,N,V_dsid
T@"NSString",&,N,V_userAgent
T@"CKCDPCodeServiceRequestOperationGroup",&,N,V_operationGroup
T@"CKCDPCodeServiceRequestDatabaseOwner",&,N,V_databaseOwnerId
notificationUUID
notificationIDsByRequestID
setNotificationIDsByRequestID:
notificationMarkedReadProgressBlock
_notificationMarkedReadProgressBlock
_notificationIDsByRequestID
T@"NSMutableDictionary",&,N,V_notificationIDsByRequestID
T@?,C,N,V_notificationMarkedReadProgressBlock
identities
personaUniqueString
enumeratorWithOptions:
_wipePersonaBasedClientCacheForAppRecord:
components:fromDate:toDate:options:
second
dumpAllClientsStatusReportToFileHandle:completionHandler:
clearPCSCachesForKnownContainersWithCompletionHandler:
accountsDidGrantAccessToBundleID:containerIdentifiers:
accountsDidRevokeAccessToBundleID:containerIdentifiers:
accountsWillDeleteAccount:completionHandler:
accountWithID:changedWithChangeType:
wipeAllCachesAndDie
wipeServerConfigurationsAndDie
updatePushTokens
maxInlineMergeableDeltaSizeWithCompletionHandler:
kickOffPendingLongLivedOperations
recordZoneModifiedBlock
_recordZoneModifiedBlock
T@"NSArray",&,N,V_recordZonesToSave
T@"NSDate",&,N,V_lastMissingManateeIdentityErrorDate
T@?,C,N,V_recordZoneModifiedBlock
zoneIDByRequestID
recordZoneFetchedBlock
setCurrentServerChangeToken:
setNeedsZoneishPCSRolled:
setZonePCSLastModifierDevice:
recordZones
anonymousRecordZoneTuplesFetchedBlock
errorFetchingAllRecordZonesBlock
setZoneIDByRequestID:
_recordZones
_recordZoneFetchedBlock
_errorFetchingAllRecordZonesBlock
_anonymousRecordZoneTuplesFetchedBlock
_zoneIDByRequestID
T@"NSMutableDictionary",&,N,V_zoneIDByRequestID
T@"NSArray",R,N,V_recordZones
T@?,C,N,V_recordZoneFetchedBlock
T@?,C,N,V_errorFetchingAllRecordZonesBlock
T@?,C,N,V_anonymousRecordZoneTuplesFetchedBlock
assetBrokenBlock
_assetBrokenBlock
T@"CKUploadRequestMetadata",C,N,V_metadata
T@?,C,N,V_assetBrokenBlock
CKCompactReduceIntoDictionary:
hasEncryptedKey
hasBaseToken
T@"NSString",&,N,V_baseToken
setDialog:
setSound:
setIsRead:
setHasIsRead:
setHasSource:
hasSource
sourceAsString:
StringAsSource:
hasSound
_dialog
_sound
_isRead
TB,N,V_isRead
Ti,N,V_source
T@"NSString",&,N,V_dialog
T@"NSString",&,N,V_sound
Ti,N,V_badgeCount
T@"NSData",&,N,V_payload
T@"NSMutableArray",&,N,V_cancelTokens
_containerOptions
_tokenRegistered
T@"CKContainerOptions",&,N,V_containerOptions
Tq,N,V_tokenRegistered
applicationContainerPath
_applicationContainerPath
Tq,N,V_adopterProcessType
T@"NSString",&,N,V_applicationContainerPath
inlock_setDateOfLastTokenUpdate:
performDatabaseOperation:withErrorHandler:
inlock_expungeDataForAccountID:
select:from:
stringByAppendingFormat:
datePropertyForKey:
setDateProperty:forKey:
inlock_applicationMetadataForApplicationID:
update:set:where:bindings:limit:
selectAllObjectsOfClass:
insertOrReplaceObject:
inlock_containerServerInfoForContainerID:accountID:
expungeOldData
expungeDataForAccountID:
expungeStaleAccountIDs
knownAppContainerTuples
knownApplicationIDs
knownContainerizedApplicationIDs
removeKnownApplicationID:
willCreateDatabase
setDownloadURLTemplate:
addAdditionalFields:
additionalFieldsCount
clearAdditionalFields
additionalFieldsAtIndex:
additionalFieldsType
setHasShouldBadge:
hasShouldBadge
setHasShouldSendContentAvailable:
hasShouldSendContentAvailable
setHasShouldSendMutableContent:
hasShouldSendMutableContent
hasCollapseIdKey
_additionalFields
_alert
_collapseIdKey
_shouldBadge
_shouldSendContentAvailable
_shouldSendMutableContent
T@"CKDPSubscriptionNotificationAlert",&,N,V_alert
TB,N,V_shouldBadge
T@"NSMutableArray",&,N,V_additionalFields
TB,N,V_shouldSendContentAvailable
TB,N,V_shouldSendMutableContent
T@"NSString",&,N,V_collapseIdKey
T@"NSData",&,N,V_encryptedPublicSharingKey
isManateeAvailable:
_lockedSetManateeAvailableForLoggedInAccount:
setLastCDPErrorForManateeStatus:
_fetchManateeAvailability:
manateeAvailableForLoggedInAccount
lastCDPErrorForManateeStatus
deviceToDeviceEncryptionEnabled
deviceToDeviceEncryptionSupportedByAccount
fakeManateeEnabled
_lockedFetchAndUpdateManateeAvailability
initWithDSID:
handleManateeStatusUpdateNotificationWithAvailability:
_manateeAvailableForLoggedInAccount
_lastCDPErrorForManateeStatus
Tq,N,S_lockedSetManateeAvailableForLoggedInAccount:,V_manateeAvailableForLoggedInAccount
T@"NSError",C,N,V_lastCDPErrorForManateeStatus
applicationEnclaveQuote
mutableBytes
quotingEnclaveQuote
certificate
cStringUsingEncoding:
stringArrayForKey:
boolForKey:
secret
T^{pcc_wrapped_invocation_key=*Q},V_wrappedInvocationKey
T@"NSData",&,V_routingToken
setCertificate:
setApplicationEnclaveQuote:
setQuotingEnclaveQuote:
_certificate
_applicationEnclaveQuote
_quotingEnclaveQuote
T@"NSString",&,N,V_certificate
T@"NSData",&,N,V_applicationEnclaveQuote
T@"NSData",&,N,V_quotingEnclaveQuote
setSecret:
_secret
T^{pcc_invocation_key=[32C]},V_secret
@32@0:8@16@24
@16@0:8
i16@0:8
B16@0:8
@24@0:8Q16
v48@0:8@16@24@32@40
v16@0:8
v24@0:8@16
@?16@0:8
v24@0:8@?16
@"NSMutableArray"
@"NSMutableDictionary"
@24@0:8@16
@"NSArray"
#16@0:8
@24@0:8^{_NSZone=}16
v20@0:8i16
v20@0:8B16
@20@0:8i16
i24@0:8@16
Q16@0:8
B24@0:8@16
@"NSString"
@"CKDPZone"
@"CKDPShareMetadata"
@"CKDPRecord"
{?="containerEnvironment"b1}
@"NSNumber"
@"NSDate"
@"NSData"
@"NSSet"
v48@0:8@16@24@32q40
@48@0:8@16@24@32q40
v32@0:8@16q24
v24@0:8q16
v40@0:8@16@24q32
Q32@0:8@16@24
Q24@0:8@16
v48@0:8@"CKRecord"16@"CKDContainer"24@"NSSet"32q40
@"CKRecord"48@0:8@"CKRecordID"16@"CKDContainer"24@"NSSet"32q40
@"NSArray"48@0:8@"NSArray"16@"CKDContainer"24@"NSSet"32q40
@"NSString"48@0:8@"CKRecordID"16@"CKDContainer"24@"NSSet"32q40
v32@0:8@"CKRecordID"16q24
v24@0:8@"CKRecordZoneID"16
v40@0:8@"CKRecordID"16@"CKDContainer"24q32
Q32@0:8@"CKRecordID"16@"CKDContainer"24
Q24@0:8@"NSError"16
B32@0:8@16@24
@24@0:8:16
@"CKDRecordCacheTable"
I16@0:8
@"CKRecordID"
v24@0:8Q16
{?="storageAvailableBytes"b1}
@32@0:8@16@?24
q16@0:8
@"CKDMMCSItemGroupSet"
@"CKDOperation"
@"NSObject<OS_dispatch_group>"
@40@0:8@16@24@32
@"CKDPDate"
v32@0:8^{_OpaquePCSShareProtection=}16@24
v40@0:8@16@24@?32
v60@0:8@16q24@32B40@44@?52
v68@0:8@16q24@32B40@44@52@?60
v40@0:8^{_OpaquePCSShareProtection=}16@24@32
v48@0:8^{_OpaquePCSShareProtection=}16@24@32@40
{?="moreAvailable"b1}
@56@0:8@16@24@32@40@48
v64@0:8@16@24@32Q40@?48@?56
@40@0:8@16Q24@32
v56@0:8@16@24Q32@?40@?48
v48@0:8@16@24Q32@?40
v48@0:8@16@24q32@?40
v56@0:8@16@24@32q40@?48
@"CKDPCSSQLCache"
@"CKDPCSMemoryCache"
@"CKContainerID"
@"CKAccountOverrideInfo"
@"NSObject<OS_dispatch_queue>"
v28@0:8B16@?20
@"NSXPCListener"
@"NSObject<OS_dispatch_source>"
@"NSOperationQueue"
@"CKDPAssetsToDownload"
@"CKDPRecordRetrieveRequestRetrieveAssetURL"
@"CKDPRecordIdentifier"
@"CKDPRequestedFields"
{?="shouldFailBatch"b1}
v36@0:8B16@?20@?28
@40@0:8@16@24^@32
v32@0:8Q16@24
@32@0:8@16^@24
v20@0:8I16
@"CKDXPCConnection"
@"CKEntitlements"
@"<CKXPCProcessScopedClient>"
@"NSDictionary"
@"CKDPRecordFieldIdentifier"
@"CKDPMergeableValueIdentifier"
@"CKDPRecordType"
v32@0:8@16@?24
v32@0:8@16@24
v44@0:8@16@24@32i40
v32@0:8q16@?24
v40@0:8Q16q24@?32
v40@0:8@16q24@?32
v36@0:8Q16B24@?28
v32@0:8Q16@?24
v24@0:8@?<v@?@"NSString"@"NSError">16
v40@0:8@"CKFetchRecordVersionsOperationInfo"16@"<CKFetchRecordVersionsOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKFetchArchivedRecordsOperationInfo"16@"<CKFetchArchivedRecordsOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKArchiveRecordsOperationInfo"16@"<CKArchiveRecordsOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKPublishAssetsOperationInfo"16@"<CKPublishAssetsOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKRepairAssetsOperationInfo"16@"<CKRepairAssetsOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKMarkAssetBrokenOperationInfo"16@"<CKMarkAssetBrokenOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKModifyWebSharingOperationInfo"16@"<CKModifyWebSharingOperationCallbacks>"24@?<v@?>32
v24@0:8@?<v@?@"NSData"@"NSError">16
v40@0:8@"CKModifyRecordAccessOperationInfo"16@"<CKModifyRecordAccessOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKCompleteParticipantVettingOperationInfo"16@"<CKCompleteParticipantVettingOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKFetchShareParticipantKeyOperationInfo"16@"<CKFetchShareParticipantKeyOperationCallbacks>"24@?<v@?>32
v32@0:8@"CKShare"16@?<v@?@"CKShare"@"NSError">24
v40@0:8@"CKInitiateParticipantVettingOperationInfo"16@"<CKInitiateParticipantVettingOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKDatabaseOperationInfo"16@"<CKFetchUserQuotaOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKOperationInfo"16@"<CKFetchWhitelistedBundleIDsOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKOperationInfo"16@"<CKFetchRegisteredBundleIDsOperationCallbacks>"24@?<v@?>32
v24@0:8@?<v@?q@"NSError">16
v40@0:8@"CKAggregateZonePCSOperationInfo"16@"<CKOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKFetchMergeableDeltasOperationInfo"16@"<CKFetchMergeableDeltasOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKFetchMergeableDeltaMetadataOperationInfo"16@"<CKFetchMergeableDeltaMetadataOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKReplaceMergeableDeltasOperationInfo"16@"<CKReplaceMergeableDeltasOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKUploadMergeableDeltasOperationInfo"16@"<CKUploadMergeableDeltasOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKSerializeRecordModificationsOperationInfo"16@"<CKSerializeRecordModificationsOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKDeserializeRecordModificationsOperationInfo"16@"<CKDeserializeRecordModificationsOperationCallbacks>"24@?<v@?>32
v32@0:8@"NSError"16@"NSString"24
v44@0:8@"CKDPResponseOperationResult"16@"NSString"24@32i40
v32@0:8q16@?<v@?Q@"NSError">24
v32@0:8q16@?<v@?@"NSError">24
v40@0:8Q16q24@?<v@?@"NSError">32
v40@0:8@"CKRecordID"16q24@?<v@?@"NSError">32
v40@0:8@"CKRecordZoneID"16q24@?<v@?@"NSError">32
v40@0:8@"CKRecordZoneID"16q24@?<v@?@"CKDPCSData"@"NSError">32
v24@0:8@?<v@?Q@"NSError">16
v24@0:8@?<v@?@"NSError">16
v36@0:8Q16B24@?<v@?q@"NSError">28
v32@0:8Q16@?<v@?@"NSArray"@"NSError">24
v24@0:8@"NSArray"16
v24@0:8@?<v@?B@"NSError">16
v24@0:8@?<v@?@"CKPCSDiagnosticInformation">16
v24@0:8@?<v@?@"NSArray">16
v40@0:8@"CKRepairZonePCSOperationInfo"16@"<CKRepairZonePCSOperationCallbacks>"24@?<v@?>32
v24@0:8@?<v@?qB@"NSError">16
@64@0:8@16@24@32@40@48@56
@40@0:8@16^@24^q32
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v36@0:8@16B24@?28
v24@0:8@?<v@?@"CKAccountInfo"@"NSError">16
v32@0:8@"NSString"16@?<v@?>24
v40@0:8@"CKCodeFunctionInvokeOperationInfo"16@"<CKCodeOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKCodeFunctionInvokeOperationInfo"16@"<CKCodeFunctionInvokeOperationCallbacks>"24@?<v@?>32
v32@0:8@"NSFileHandle"16@?<v@?@"NSError">24
v36@0:8@"CKEventMetricInfo"16B24@?<v@?>28
v24@0:8@?<v@?@"NSString"@"NSString"@"NSError">16
v32@0:8Q16@?<v@?q@"NSError">24
v40@0:8@"CKDiscoverUserIdentitiesOperationInfo"16@"<CKDiscoverUserIdentitiesOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKDiscoverUserIdentitiesOperationInfo"16@"<CKDiscoverAllUserIdentitiesOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKFetchShareParticipantsOperationInfo"16@"<CKFetchShareParticipantsOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKFetchRecordsOperationInfo"16@"<CKFetchRecordsOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKModifyRecordsOperationInfo"16@"<CKModifyRecordsOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKFetchRecordZoneChangesOperationInfo"16@"<CKFetchRecordChangesOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKFetchRecordZoneChangesOperationInfo"16@"<CKFetchRecordZoneChangesOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKQueryOperationInfo"16@"<CKQueryOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKModifySubscriptionsOperationInfo"16@"<CKModifySubscriptionsOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKFetchSubscriptionsOperationInfo"16@"<CKFetchSubscriptionsOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKModifyRecordZonesOperationInfo"16@"<CKModifyRecordZonesOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKFetchRecordZonesOperationInfo"16@"<CKFetchRecordZonesOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKFetchDatabaseChangesOperationInfo"16@"<CKFetchDatabaseChangesOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKModifyBadgeOperationInfo"16@"<CKOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKFetchNotificationChangesOperationInfo"16@"<CKFetchNotificationChangesOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKMarkNotificationsReadOperationInfo"16@"<CKMarkNotificationsReadOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKAcceptSharesOperationInfo"16@"<CKAcceptSharesOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKFetchShareMetadataOperationInfo"16@"<CKFetchShareMetadataOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKMapShareURLsToInstalledBundleIDsOperationInfo"16@"<CKMapShareURLsToInstalledBundleIDsOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKFetchWebAuthTokenOperationInfo"16@"<CKFetchWebAuthTokenOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKMovePhotosOperationInfo"16@"<CKMovePhotosOperationCallbacks>"24@?<v@?>32
v32@0:8@"NSArray"16@?<v@?@"NSArray"@"NSError">24
v24@0:8@?<v@?@"NSArray"@"NSError">16
v24@0:8@?<v@?@"NSObject<OS_xpc_object>"@"NSError">16
v24@0:8@?<v@?@"NSPersonNameComponents"@"NSString"@"NSString"@"NSError">16
v24@0:8@?<v@?q>16
B24@0:8^@16
d16@0:8
@32@0:8q16q24
v40@0:8q16@24@?32
B32@0:8@16^@24
q24@0:8q16
v40@0:8@16@?24@?32
@48@0:8@16Q24Q32^@40
v52@0:8@16@24@32B40@44
@20@0:8B16
Q24@0:8q16
@"CKDAccount"
@"CKDProcessScopedClientProxy"
@"CKDLogicalDeviceScopedClientProxy"
@"CKDDirectoryContext"
@"CKDAppContainerTuple"
@"CKContainerOptions"
@"CKDMMCS"
@"CKDRecordCache"
@"CKDZoneGatekeeper"
@"CKDServerConfiguration"
@"NSURL"
@"NSRecursiveLock"
@"CKDPCSFetchAggregator"
@"CKDIdentityCache"
@"CKDPublicIdentityLookupService"
@"NSMutableSet"
@"CKDLogicalDeviceContext"
@"<NSObject>"
@"CKDPCSManager"
@"CKDPCSCache"
@"CKDAnonymousSharingManager"
@"CKDProtocolTranslator"
v24@0:8d16
@"CKDPCSData"
@"CKDPLocationCoordinate"
{?="order"b1}
@24@0:8^@16
B56@0:8Q16*24Q32^Q40^@48
@"CKFileMetadata"24@0:8^@16
@"CKDMMCSItemGroupContext"16@0:8
@"CKDMMCSItem"16@0:8
@"CKDMMCSItemGroupContext"
@"CKDMMCSItem"
@"NSMutableIndexSet"
@"CKDPUserPrivacySettings"
{?="applicationContainerEnvironment"b1}
@"CKUserIdentityLookupInfo"
@"CKUserIdentity"
v40@0:8@16@24@32
@"<CKDURLRequestPipelining>"
@"<CKDOperationPipelining>"
@24@0:8q16
B20@0:8i16
@"CKContainerID"16@0:8
@"NSObject<NSFastEnumeration>"16@0:8
@28@0:8B16B20B24
v56@0:8#16@24@32@40@?48
v48@0:8#16@24@32@?40
v40@0:8#16@24@?32
B48@0:8@16^@24^@32^@40
@"NSObject<OS_os_activity>"
@"CKDURLRequest"
@"<CKOperationCallbacks>"
@"CKDOperationMetrics"
@"NSError"
@"CKOperationInfo"
@"CKDContainer"
@"NSObject<OS_os_transaction>"
@"CKSignpost"
@"CKDPResponseOperationResultError"
{?="code"b1}
@48@0:8@16@24@?32@40
@"<CKDZoneGatekeeperWaiter>"
v28@0:8@16B24
v44@0:8@16@24B32@?36
@"CKDZoneGatekeeperImplementation"
@"CKDPContactInformation"
@"NSMutableOrderedSet"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSObject<OS_dispatch_queue>"16@0:8
v24@0:8@"NSObject<OS_dispatch_queue>"16
@"CKQuery"
@"CKQueryCursor"
@"CKRecordZoneID"
@"CKDRecordFetchAggregator"
@"CKDPRecordZoneIdentifier"
{?="onlyFetchPCSInfo"b1}
v56@0:8@16^{_OpaquePCSShareProtection=}24^{_OpaquePCSShareProtection=}32@40@?48
@"CKDApplicationID"
@"CKDQueuedFetch"
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v48@0:8@16@24@32@?40
v36@0:8@16@24B32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?@"NSURLRequest">40
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v36@0:8@"NSURLSession"16@"NSURLSessionTask"24B32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSError"32
q32@0:8@16@24
q24@0:8@16
B24@0:8@?16
@"CKDResponseBodyParser"
@"CKDProtobufStreamWriter"
@"NSURLSessionDataTask"
@"C2RequestOptions"
@"NSObject<C2NetworkingDelegate>"
@"NSURLRequest"
@"NSHTTPURLResponse"
@"NSURLSession"
@"CKDTrafficLogger"
@"NSObject<OS_voucher>"
@"CKTapToRadarRequest"
{?="badgeCount"b1"forDevice"b1}
{?="size"b1"lastSection"b1}
@"CKMergeableDeltaID"
@40@0:8^{__CFError=}16q24@32
@24@0:8^{_OpaquePCSShareProtection=}16
B24@0:8@"NSString"16
@24@0:8@"NSString"16
B32@0:8@"NSData"16^@24
^{_PCSIdentityData=}16@0:8
Q24@0:8Q16
@32@0:8Q16^@24
^{_PCSPublicIdentityData=}32@0:8Q16^@24
^{_PCSIdentityData=}24@0:8^@16
^{_PCSIdentityData=}32@0:8@16@24
@48@0:8@16@24@32^@40
B48@0:8@16@24Q32^@40
@32@0:8^{_PCSIdentityData=}16^@24
^{_PCSIdentityData=}32@0:8@16^@24
^{_PCSPublicIdentityData=}32@0:8@16^@24
@40@0:8^{_PCSIdentitySetData=}16Q24^{_OpaquePCSShareProtection=}32
@32@0:8Q16^{_OpaquePCSShareProtection=}24
v32@0:8^{__CFError=}16@24
v36@0:8B16@20@?28
^{_OpaquePCSShareProtection=}24@0:8^@16
@32@0:8^{_OpaquePCSShareProtection=}16^@24
@36@0:8@16@24B32
@40@0:8^{_PCSIdentityData=}16@24^@32
v72@0:8@16Q24Q32B40B44@48@56@?64
B36@0:8B16^B20^@28
v64@0:8@16Q24Q32B40B44@48@?56
v48@0:8@16Q24@32@?40
B32@0:8Q16^@24
v44@0:8Q16B24@28@?36
^{_OpaquePCSShareProtection=}40@0:8@16Q24^@32
B40@0:8@16^{_OpaquePCSShareProtection=}24^@32
B24@0:8^{_OpaquePCSShareProtection=}16
B28@0:8^{_OpaquePCSShareProtection=}16B24
@28@0:8^{_OpaquePCSShareProtection=}16B24
@36@0:8^{_OpaquePCSShareProtection=}16^{_OpaquePCSShareProtection=}24B32
@32@0:8@16^{_OpaquePCSShareProtection=}24
@36@0:8^{_OpaquePCSShareProtection=}16B24^@28
@32@0:8^{_OpaquePCSShareProtection=}16Q24
^{_OpaquePCSShareProtection=}44@0:8^{_OpaquePCSShareProtection=}16^{_OpaquePCSShareProtection=}24B32^@36
^{_OpaquePCSShareProtection=}44@0:8^{__CFData=}16^{_OpaquePCSShareProtection=}24B32^@36
^{_OpaquePCSShareProtection=}52@0:8@16Q24^{_OpaquePCSShareProtection=}32B40^@44
^{_OpaquePCSShareProtection=}48@0:8@16Q24^{_OpaquePCSShareProtection=}32^@40
B48@0:8^{_OpaquePCSShareProtection=}16^{_OpaquePCSShareProtection=}24Q32^@40
B40@0:8^{_OpaquePCSShareProtection=}16^{_OpaquePCSShareProtection=}24^@32
B32@0:8^{_OpaquePCSShareProtection=}16^{_OpaquePCSShareProtection=}24
^{_OpaquePCSShareProtection=}40@0:8Q16Q24^@32
^{_OpaquePCSShareProtection=}32@0:8Q16^@24
v32@0:8^{_PCSPublicIdentityData=}16^{_OpaquePCSShareProtection=}24
B40@0:8Q16^{_OpaquePCSShareProtection=}24^@32
^{_OpaquePCSShareProtection=}32@0:8^{_PCSIdentityData=}16^@24
^{_OpaquePCSShareProtection=}44@0:8@16^{_PCSIdentityData=}24B32^@36
^{_OpaquePCSShareProtection=}40@0:8@16^{_PCSIdentityData=}24^@32
^{_OpaquePCSShareProtection=}52@0:8@16Q24Q32B40^@44
^{_OpaquePCSShareProtection=}48@0:8@16Q24Q32^@40
^{_OpaquePCSShareProtection=}40@0:8@16@24^@32
^{_OpaquePCSShareProtection=}32@0:8@16^@24
v40@0:8@16Q24@?32
^{_PCSPublicIdentityData=}24@0:8^{_OpaquePCSShareProtection=}16
@44@0:8@16@24B32^@36
@36@0:8^{_PCSPublicIdentityData=}16^{_OpaquePCSShareProtection=}24I32
@40@0:8^{_PCSIdentityData=}16^{_OpaquePCSShareProtection=}24Q32
@32@0:8^{_PCSPublicIdentityData=}16^{_OpaquePCSShareProtection=}24
@32@0:8^{_PCSIdentityData=}16^{_OpaquePCSShareProtection=}24
B32@0:8@16^{_OpaquePCSShareProtection=}24
@48@0:8@16^{_OpaquePCSShareProtection=}24@32^@40
@40@0:8@16^{_OpaquePCSShareProtection=}24@32
@48@0:8@16@24^{_OpaquePCSShareProtection=}32@40
B24@0:8Q16
^{_OpaquePCSShareProtection=}48@0:8@16Q24^{_PCSIdentitySetData=}32^^{__CFError}40
@"<CKDContainerScopedUserIDProvider>"
@"CKDPCSIdentityManager"
v56@0:8@16@24@32@40@48
@"<CKDMMCSItemReaderWriterProtocol>"
{?="requestedSize"b1"uploadedSize"b1}
@"CKDPConfigurationFieldValue"
@56@0:8@16q24@32@40@?48
@32@0:8@16q24
@48@0:8@16q24@32q40
@"CKDAssetBatch"
@"CKDAssetTokenRequest"
@"NSMapTable"
@"CKShareMetadata"
@"CKDPCodeFunctionInvokeRequestAttestationRequest"
@"CKDPCodeFunctionInvokeRequestProtectedCloudComputeMetadata"
@"CKCDPTrustedTargetCryptoMetadata"
{?="userPurge"b1}
@64@0:8@16@24@32Q40@48@56
@28@0:8@16B24
@"CKPackage"
@"CKAsset"
@"NSIndexSet"
@"CKDProgressTracker"
@"CKDMMCSRequestOptions"
@"CKDCancelTokenGroup"
v32@0:8@16d24
v36@0:8@16B24@28
@"CKDPListRange"
{?="forceFetch"b1"shouldFetchRootRecord"b1}
@"CKDAssetZoneKey"
i28@0:8@16B24
@28@0:8i16@20
@32@0:8i16@20B28
@32@0:8d16d24
@40@0:8q16Q24@32
@"<CKDSystemAvailabilityWatcher>"
@"CKDPIdentifier"
@"APSConnection"
@32@0:8q16@24
@"CKDContainerServerInfo"
{?="reservedSize"b1"uploadURLExpirationTimeSeconds"b1}
v52@0:8@16@24Q32@40B48
@"CKDPCSKeySyncCoreAnalytics"
{?="semantics"b1"merge"b1}
@"CKDPProtectionInfo"
@"CKDPShareIdentifier"
@"CKDPRecordStableUrl"
@"CKDPStorageExpiration"
{?="accountFlags"b1"lastWebActivityUTCMills"b1"photosWebAccessTimestamp"b1"corporateSharingEnabled"b1}
@"CKDPAsset"
{?="tokenExpiration"b1}
@"CKDPListPosition"
{?="insertAfter"b1}
@"CKLEventFilter"
@"NSDateFormatter"
@32@0:8@16Q24
@"CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoValue"
v52@0:8@16B24@28@?36@?44
v52@0:8@16B24@28@36@?44
@"ACAccountStore"
@"CKDBackingAccount"
v32@0:8@16Q24
v52@0:8@16@24@32@40B48
@"CKDPMoveOplockFailure"
@"CKDPOplockFailure"
@"CKDPUniqueFieldFailure"
{?="type"b1}
v40@0:8^@16^@24Q32
v32@0:8@"NSStream"16Q24
@"NSInputStream"
@"NSOutputStream"
{z_stream_s="next_in"*"avail_in"I"total_in"Q"next_out"*"avail_out"I"total_out"Q"msg"*"state"^{internal_state}"zalloc"^?"zfree"^?"opaque"^v"data_type"i"adler"Q"reserved"Q}
@"NSFileHandle"
@"CKDPStreamingAssetIdentifier"
@"CKDPStreamingAssetRetrieveAssetResponse"
@"CKDPStreamingAssetSaveAssetRequest"
@"CKDPStreamingAssetSaveAssetResponse"
@"CKDPZoneCapabilities"
{?="assetQuotaUsage"b1"metadataQuotaUsage"b1"deviceCount"b1"expired"b1"zoneKeyRollAllowed"b1"zoneishPcsNeedsRolled"b1}
@"CKDPUserAlias"
{?="publicKeyRequested"b1}
B40@0:8@16@24^@32
@"CKDAssetRequestPlanner"
@"CKDPDateStatistics"
@"CKDPLocationBound"
@"CKDPThrottlingConfigCriteria"
@"CKDPThrottlingConfigRateLimit"
{?="ttlSec"b1}
{?="success"b1}
v48@0:8@16@24^{_OpaquePCSShareProtection=}32@40
@"NSOperation"
@"CKDPRecordSaveRequestConflictLoserUpdate"
@"CKDPRecordSaveRequestShareIdUpdate"
{?="saveSemantics"b1"merge"b1}
^{MGNotificationTokenStruct=}
@"CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptions"
@"CKDPLocale"
{?="applicationConfigVersion"b1"deviceProtocolVersion"b1"globalConfigVersion"b1"operationGroupQuantity"b1"applicationContainerEnvironment"b1"isolationLevel"b1"requestOriginator"b1"targetDatabase"b1"deviceSoftwareIsAppleInternal"b1"entitlementsValidated"b1}
@"CKDPAnonymousShareAddResponse"
@"CKDPAnonymousShareRemoveResponse"
@"CKDPArchiveRecordsResponse"
@"CKDPAssetUploadTokenRetrieveResponse"
@"CKDPBundlesForContainerResponse"
@"CKDPDeleteContainerResponse"
@"CKDPFetchArchivedRecordsResponse"
@"CKDPCodeFunctionInvokeResponse"
@"CKDPResponseOperationHeader"
@"CKDPMarkAssetBrokenResponse"
@"CKDPMergeableDeltaMetadataRetrieveResponse"
@"CKDPMergeableDeltaReplaceResponse"
@"CKDPMergeableDeltaRetrieveResponse"
@"CKDPMergeableDeltaSaveResponse"
@"CKDPNotificationMarkReadResponse"
@"CKDPNotificationSyncResponse"
@"CKDPQueryRetrieveResponse"
@"CKDPRecordDeleteResponse"
@"CKDPRecordMoveResponse"
@"CKDPRecordResolveTokenResponse"
@"CKDPRecordRetrieveChangesResponse"
@"CKDPRecordRetrieveResponse"
@"CKDPRecordRetrieveVersionsResponse"
@"CKDPRecordSaveResponse"
@"CKDPOperation"
@"CKDPResponseOperationResult"
@"CKDPSetBadgeCountResponse"
@"CKDPShareAcceptResponse"
@"CKDPShareVettingInitiateResponse"
@"CKDPSubscriptionCreateResponse"
@"CKDPSubscriptionDeleteResponse"
@"CKDPSubscriptionRetrieveResponse"
@"CKDPTokenRegistrationResponse"
@"CKDPTokenUnregistrationResponse"
@"CKDPUpdateMissingAssetStatusResponse"
@"CKDPUserAvailableQuotaResponse"
@"CKDPUserPrivacySettingsBatchLookupResponse"
@"CKDPUserPrivacySettingsResetResponse"
@"CKDPUserPrivacySettingsRetrieveResponse"
@"CKDPUserPrivacySettingsUpdateResponse"
@"CKDPUserQueryResponse"
@"CKDPUserRetrieveResponse"
@"CKDPWebAuthTokenRetrieveResponse"
@"CKDPZoneDeleteResponse"
@"CKDPZoneRetrieveChangesResponse"
@"CKDPZoneRetrieveResponse"
@"CKDPZoneSaveResponse"
{?="isDeleted"b1}
{?="type"b1"last"b1"synchronousMode"b1}
B20@0:8B16
v24@0:8#16
@"NSMutableData"
{?="contentRequestAuthorizeGetOptions"b1}
@60@0:8@16@24@32@40@48B56
v64@0:8@16@24@32@40@48@56
{?="requestedTTL"b1"type"b1}
@"CKDPAnonymousShareAddRequest"
@"CKDPAnonymousShareRemoveRequest"
@"CKDPArchiveRecordsRequest"
@"CKDPAssetUploadTokenRetrieveRequest"
@"CKDPBundlesForContainerRequest"
@"CKDPDeleteContainerRequest"
@"CKDPFetchArchivedRecordsRequest"
@"CKDPCodeFunctionInvokeRequest"
@"CKDPRequestOperationHeader"
@"CKDPMarkAssetBrokenRequest"
@"CKDPMergeableDeltaMetadataRetrieveRequest"
@"CKDPMergeableDeltaReplaceRequest"
@"CKDPMergeableDeltaRetrieveRequest"
@"CKDPMergeableDeltaSaveRequest"
@"CKDPNotificationMarkReadRequest"
@"CKDPNotificationSyncRequest"
@"CKDPQueryRetrieveRequest"
@"CKDPRecordDeleteRequest"
@"CKDPRecordMoveRequest"
@"CKDPRecordResolveTokenRequest"
@"CKDPRecordRetrieveChangesRequest"
@"CKDPRecordRetrieveRequest"
@"CKDPRecordRetrieveVersionsRequest"
@"CKDPRecordSaveRequest"
@"CKDPSetBadgeCountRequest"
@"CKDPShareAcceptRequest"
@"CKDPShareVettingInitiateRequest"
@"CKDPSubscriptionCreateRequest"
@"CKDPSubscriptionDeleteRequest"
@"CKDPSubscriptionRetrieveRequest"
@"CKDPTokenRegistrationRequest"
@"CKDPTokenUnregistrationRequest"
@"CKDPUpdateMissingAssetStatusRequest"
@"CKDPUserAvailableQuotaRequest"
@"CKDPUserPrivacySettingsBatchLookupRequest"
@"CKDPUserPrivacySettingsResetRequest"
@"CKDPUserPrivacySettingsRetrieveRequest"
@"CKDPUserPrivacySettingsUpdateRequest"
@"CKDPUserQueryRequest"
@"CKDPUserRetrieveRequest"
@"CKDPWebAuthTokenRetrieveRequest"
@"CKDPZoneDeleteRequest"
@"CKDPZoneRetrieveChangesRequest"
@"CKDPZoneRetrieveRequest"
@"CKDPZoneSaveRequest"
{?="containsNewData"b1"ignoreMissingDeltas"b1}
@"CKDPTokenRegistrationBody"
{?="version"b1}
@"CKDZonePCSData"
{?="apnsEnv"b1"skipBundleIDCheck"b1}
@"CKDPShare"
@"CKDPEncryptedMergeableValue"
@"CKDPMergeableValue"
@"CKDPPackage"
@"CKDPRecordReference"
@"CKDPStreamingAsset"
{?="doubleValue"b1"signedValue"b1"type"b1"isEncrypted"b1}
{?="downloadURLExpirationTimeSeconds"b1"size"b1}
{?="startTimeSecondsAfterLocalMidnight"b1"startTimeSecondsAfterUnixEpoch"b1"allowedRequestCount"b1"intervalLengthSec"b1"repeatEverySec"b1}
{?="maxChanges"b1"wantsChanges"b1}
{?="doubleValue"b1"int64Value"b1"value"b1"boolValue"b1}
{?="forceFetchToken"b1}
@"NSPredicate"
@"CKDPublicIdentityLookupRequest"
{?="publicKeyVersion"b1"acceptedInProcess"b1}
@"CKDPRecordFieldValue"
v80@0:8@16@24q32@40@48Q56q64@72
@"CKPublicKey"
{?="queryOperator"b1"distinct"b1}
v24@0:8@"CKThrottle"16
{?="typeCode"b1}
@"CKDPRecordChainParent"
{?="permission"b1"expired"b1}
{?="participantKeyLost"b1}
@"CKCodeRecordTransport"
@48@0:8@16@24d32@40
@48@0:8@16@24@32@40
@72@0:8@16@24@32@40@48@56@64
@"CKDTrustedTargetWrappedKey"
@40@0:8@16@24B32B36
v52@0:8@16Q24B32@36@?44
v60@0:8@16B24@28@36@44@?52
v72@0:8@16@24@32B40@44B52@56@?64
^{_PCSPublicIdentityData=}16@0:8
B48@0:8@16^{_OpaquePCSShareProtection=}24@32^@40
B32@0:8^{_OpaquePCSShareProtection=}16^@24
v24@0:8^{_PCSPublicIdentityData=}16
^{_PCSPublicIdentityData=}
@"CKDPSubscription"
@"OSLogEventStream"
@"OSLogEventLiveStream"
v28@0:8@16i24
v24@0:8@"NSFileHandle"16
B24@0:8^{objc_ivar=}16
v24@0:8^{_OpaquePCSShareProtection=}16
^{_OpaquePCSShareProtection=}16@0:8
^{_OpaquePCSShareProtection=}
@"CKMergeableValueID"
B40@0:8^{_OpaquePCSShareProtection=}16@24^@32
^{__OpaquePCSKeyEnvelope=}36@0:8@16B24^@28
^{__OpaquePCSKeyEnvelope=}32@0:8@16^@24
@"CKRecord"
{?="limit"b1"newestFirst"b1}
{?="isInNetwork"b1}
@"<MMCSOperationMetric>"
@"CKMovePhotosChange"
@40@0:8@16@24q32
^{_mmcs_engine=}16@0:8
@48@0:8@16@24Q32@?40
@48@0:8@16@24@32@?40
@64@0:8@16@24@32@?40@?48@?56
@68@0:8@16@24B32@36@?44@?52@?60
@56@0:8@16@24@32@?40@?48
B48@0:8Q16^Q24^Q32^@40
B32@0:8^Q16^@24
@"CKDAssetCache"
@"CKDMMCSEngineContext"
@"CKAssetDownloadPreauthorization"
@"CKDMMCSItemCommandWriter"
B56@0:8@16@24@32@40^@48
B48@0:8@16^{_OpaquePCSShareProtection=}24@32@40
@"CKDModifyRecordsOperation"
@"CKDRecordPCSData"
@"CKDSharePCSData"
@32@0:8@16i24i28
{?="radius"b1}
^q16@0:8
q24@0:8Q16
v32@0:8^q16Q24
{?="list"^q"count"Q"size"Q}
{?="assetSize"b1"recovered"b1}
@"CKServerChangeToken"
B28@0:8@16B24
^{__SecTrust=}32@0:8@16^{__SecPolicy=}24
B44@0:8q16@24^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}32B40
B40@0:8@16@24^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}32
@40@0:8@16@24^{__SecPolicy=}32
B32@0:8@16^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}24
^{__SecPolicy=}16@0:8
^{__SecPolicy=}
@52@0:8@16@24@32@40B48
{?="created"b1"expires"b1}
{?="size"b1"lastItem"b1}
@"CKDFetchRecordsOperation"
@"CKDPParticipant"
{?="participantPermission"b1"participantState"b1"participantType"b1}
@"<CKXPCLogicalDeviceScopedClient>"
{?="operationGroupQuantity"b1}
@"Protocol"
@"NSInvocation"
@"CKDPMergeableDeltaMetadata"
{?="payload"b1}
@40@0:8@16q24^@32
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"CKDAssetHandleTable"
@"CKDAssetVolumeTable"
@24@0:8B16B20
@56@0:8@16@24@32^B40^@48
i32@0:8@16^@24
Q20@0:8B16
B40@0:8@16q24^@32
B40@0:8@16^@24^@32
@"CKSAssetCacheTableGroup"
@40@0:8@16^B24@?32
v24@0:8@"CKObjectDescription"16
@"NSString"20@0:8B16
v24@0:8@"CKProcessScopedMetadata"16
v40@0:8@"CKContainerSetupInfo"16@"<CKXPCContainerScopedClient>"24@?<v@?@"<CKXPCContainerScopedDaemon>"@"NSError">32
v32@0:8@"CKTestDeviceReference"16@?<v@?@"<CKXPCLogicalDeviceScopedDaemon>">24
v24@0:8@?<v@?@"<CKXPCProcessScopedDaemon>">16
v24@0:8@?<v@?@"<CKXPCTestDaemonAdmin>">16
@"NSXPCConnection"
@"NSHashTable"
@"CKCoalescer"
@"NSPointerArray"
@"CKDPResponseOperationResultErrorAuxiliaryError"
@"CKDPResponseOperationResultErrorClient"
@"CKDPResponseOperationResultErrorExtension"
@"CKDPResponseOperationResultErrorServer"
{?="retryAfterSeconds"b1}
@48@0:8@16@24^B32^@40
v24@0:8^v16
v24@0:8^{_mmcs_engine=}16
^{_mmcs_engine=}
B32@0:8@16Q24
@40@0:8@16@24Q32
v44@0:8@16@24B32@36
B72@0:8@16@24Q32*40Q48^Q56^@64
B32@0:8@"CKDMMCSItemGroupContext"16Q24
@"<CKDMMCSItemReaderWriterProtocol>"40@0:8@"CKDMMCSItemGroupContext"16@"<CKDMMCSItemReaderWriterProtocol>"24Q32
B40@0:8@"CKDMMCSItemGroupContext"16@"<CKDMMCSItemReaderWriterProtocol>"24^@32
v44@0:8@"CKDMMCSItemGroupContext"16@"<CKDMMCSItemReaderWriterProtocol>"24B32@"NSError"36
@"CKFileMetadata"48@0:8@"CKDMMCSItemGroupContext"16@"<CKDMMCSItemReaderWriterProtocol>"24@"CKFileMetadata"32@"NSError"40
B72@0:8@"CKDMMCSItemGroupContext"16@"<CKDMMCSItemReaderWriterProtocol>"24Q32*40Q48^Q56^@64
B64@0:8@16Q24*32Q40^Q48^@56
B32@0:8@"<CKDMMCSItemReaderWriterProtocol>"16^@24
v36@0:8@"<CKDMMCSItemReaderWriterProtocol>"16B24@"NSError"28
@"CKFileMetadata"40@0:8@"<CKDMMCSItemReaderWriterProtocol>"16@"CKFileMetadata"24@"NSError"32
B64@0:8@"<CKDMMCSItemReaderWriterProtocol>"16Q24*32Q40^Q48^@56
@72@0:8@16@24@32@?40@?48@?56@?64
v44@0:8Q16i24d28@36
v36@0:8i16d20@28
v56@0:8Q16@24@32@40@48
v40@0:8Q16@24@32
^{MMCSItemReaderWriter=}32@0:8Q16^@24
@"CKDMMCSItemGroup"
{?="index"b1"isReversed"b1}
{?="changeType"b1}
{?="participantSelfRemovalBehavior"b1"publicAccess"b1"publisherModelType"b1"anonymousPublicAccess"b1"publisherModel"b1}
@"CKDBackingExplicitCredentialsAccount"
@"ACAccount"
@"CKDPAnonymousZoneInfo"
{?="changeType"b1"deleteType"b1"isAnonymous"b1}
v32@0:8B16B20@24
v24@0:8@"CKOperationGroupSystemImposedInfo"16
v24@0:8@"CKRequestInfo"16
v32@0:8@"CKFileOpenInfo"16@?<v@?@"CKFileOpenResult"@"NSError">24
v32@0:8@"CKAssetDownloadStagingInfo"16@?<v@?@"NSURL"@"NSFileHandle"@"NSError">24
v32@0:8@"CKOperationMetrics"16@"NSError"24
v32@0:8B16B20@"NSError"24
v36@0:8@"NSString"16B24@?<v@?@"CKOperationLifecycleAction"@"NSError">28
@48@0:8@16@24:32@40
:16@0:8
v24@0:8:16
@"CKDOperationInfoCache"
@"PCCKey"
@"CKDTrustedTargetKey"
@"CKDPMergeableDelta"
^i16@0:8
i24@0:8Q16
v32@0:8^i16Q24
{?="list"^i"count"Q"size"Q}
@"CKDPSubscriptionNotification"
{?="evaluationType"b1"owner"b1"fireOnce"b1}
@"CKDPFieldActionDeleteListRange"
@"CKDPFieldActionInsertIntoList"
@"CKDPFieldActionReplaceListRange"
{?="status"b1"pendingArchivedRecords"b1}
@"CKCDPErrorUserInfoValue"
@"CKPCSDiagnosticInformation"
{?="authPutType"b1}
{?="listIndex"b1"isPackage"b1"skipWriteMissingAssetStatusRecord"b1}
@"CKRecordZone"
@"CKDPReservedVoucher"
{?="constructedAssetDownloadEstimatedSize"b1"constructedAssetDownloadURLExpiration"b1"downloadTokenExpiration"b1"downloadURLExpiration"b1"size"b1}
{?="acceptTimestamp"b1"keyHealth"b1"outOfNetworkKeyType"b1"participantType"b1"permission"b1"publicKeyVersion"b1"state"b1"acceptedInProcess"b1"createdInProcess"b1"isAnonymousInvitedParticipant"b1"isInNetwork"b1"isOrgUser"b1}
@"<CKDOperationInfoDelegate>"
{?="vettingError"b1}
{?="port"b1}
@36@0:8@16@24i32
{?="doubleValue"b1"longValue"b1"type"b1"boolValue"b1}
@"CKDPQuery"
{?="limit"b1}
@24@0:8@"NSDictionary"16
@"NSDictionary"16@0:8
B40@0:8@16@24@32
d24@0:8@16
@"CKUploadRequestConfiguration"
@"CKDFetchRecordZonesOperation"
@"CKDModifyRecordZonesOperation"
@"CKDMarkAssetBrokenURLRequestWrapperOperation"
@"CKDMarkAssetBrokenURLRequest"
v24@0:8^{_PCSIdentityData=}16
^{_PCSIdentityData=}
{?="sharingType"b1"atomicSaves"b1"ckql"b1"fetchChanges"b1"hierarchicalSharing"b1"zoneSharing"b1}
@48@0:8@16@24q32@40
@60@0:8@16B24@28@36@44@52
@"CKMergeableRecordValue"
i48@0:8@16@24@32@40
@"CKDDecryptRecordsOperation"
@"<CKSQLiteItem>"
^{__CFDictionary=}24@0:8@16
@32@0:8@16B24B28
v88@0:8@16@24@32@40@48@56@64@72@80
@"C2MetricOptions"
@"CKOperationMMCSRequestOptions"
@"CKTestAccount"
@"CKTestDevice"
v44@0:8@16B24@28@36
c24@0:8@16
@36@0:8@16@24c32
@"PDSRegistrar"
@"CKCDPCodeServiceResponseAttestationResponse"
@"CKCDPError"
v28@0:8i16r^*20
@28@0:8i16r^*20
{?="auxiliaryCode"b1"code"b1"targetPartition"b1}
{?="status"b1}
@"CKDThrottleTableGroup"
@"CKThrottleTable"
{?="allAssets"b1}
{?="maxChanges"b1"requestedChangeTypes"b1"ignoreCallingDeviceChanges"b1"includeMergeableDeltas"b1"newestFirst"b1}
@48@0:8@16@24Q32@40
@56@0:8@16@24B32B36@40@48
@56@0:8@16q24Q32@40@48
@40@0:8@16q24Q32
v48@0:8@16q24Q32@40
v56@0:8@16@24q32Q40@?48
@"CKDPCSSQLCacheTableGroup"
@"CKDPCSSQLCacheTable"
@48@0:8@16@24@32^{_OpaquePCSShareProtection=}40
@"CKTestDeviceReference"
@"CKSQLiteDatabase"
@"CKDLogicalDeviceScopedStateManager"
@"CKDAccountDataSecurityObserver"
@"CKTestServer"
@"CKDMetadataCache"
@"CKDThrottleManager"
@"CKDTokenRegistrationScheduler"
@32@0:8^{_PCSIdentitySetData=}16@24
^{_PCSIdentitySetData=}16@0:8
^{_PCSIdentitySetData=}
^{_PCSIdentitySetData=}40@0:8@16@24^@32
@48@0:8@16@24@32B40I44
^{_PCSIdentitySetData=}40@0:8@16B24B28^@32
^{_PCSIdentitySetData=}40@0:8Q16Q24^@32
^{_PCSIdentitySetData=}24@0:8^@16
^{_PCSPublicIdentityData=}40@0:8Q16@24^@32
@40@0:8Q16@24^@32
@32@0:8^{_PCSIdentitySetData=}16Q24
@40@0:8^{_PCSIdentitySetData=}16Q24^@32
@40@0:8@16@24^{_PCSIdentitySetData=}32
B48@0:8^{_PCSIdentitySetData=}16@24@32^@40
B40@0:8^{_PCSIdentitySetData=}16@24^@32
B40@0:8@16^{_PCSIdentitySetData=}24^@32
@"CKDPCodeFunctionInvokeResponseAttestationResponse"
v32@0:8@"NSString"16@"CKDLongLivedOperationPersistedCallback"24
v24@0:8@"NSString"16
@44@0:8@16@24q32B40
*16@0:8
^v16@0:8
{?="keyVersion"b1"scheme"b1}
@52@0:8@16@24@32q40B48
@36@0:8@16q24B32
@44@0:8@16B24^@28^@36
@52@0:8@16@24@32B40^@44
@28@0:8@16i24
@"<CKDProtocolTranslatorIdentityDelegate>"
@"CKDPDistributedTimestamps"
@"CKEncryptedData"
@"CKDChainPCSData"
{?="discoverable"b1}
@"NSUUID"
{?="numericValue"b1"identifier"b1}
@"CKCDPCodeServiceRequestServiceClientConfig"
{?="serviceType"b1}
{?="duration"b1"expirationTime"b1"operationType"b1}
@40@0:8Q16@24d32
v24@0:8@"<MMCSOperationStateTimeRange>"16
@"<MMCSOperationStateTimeRange>"40@0:8Q16@"NSDate"24d32
@"NSDate"16@0:8
@"NSMutableDictionary"16@0:8
@"NSMutableSet"16@0:8
@"NSArray"16@0:8
q24@0:8@"<MMCSOperationStateTimeRange>"16
@"CKDPUser"
@72@0:8@16@24@32@40B48B52@56@64
@64@0:8@16@24@32q40@48@56
@"CKCDPCodeServiceRequestAccountConfig"
@"CKCDPCodeServiceRequestAssetAuthorizeGetRequestOptions"
@"CKCDPCodeServiceRequestAttestationRequest"
@"CKCDPCodeServiceRequestAuthInformation"
@"CKCDPCodeServiceRequestProtectedCloudComputeMetadata"
@"CKCDPCodeServiceRequestRequestContext"
{?="dataProtection"b1"serializationFormat"b1}
{?="clientVersionETagMatch"b1}
{?="containerEnvironment"b1"databaseType"b1"operationType"b1}
@24@0:8r*16
@"CKDAssetZone"
d32@0:8@16d24
@32@0:8@16#24
{?="maxChangedZones"b1}
@"CKCDPCodeServiceRequestDatabaseOwner"
@"CKCDPCodeServiceRequestOperationGroup"
{?="dsid"b1"databaseEnvironment"b1"databaseType"b1}
v32@0:8@"NSString"16@"NSArray"24
v32@0:8@"NSString"16@?<v@?@"NSError">24
v32@0:8@"NSString"16q24
v24@0:8@?<v@?Q>16
@"CKUploadRequestMetadata"
{?="badgeCount"b1"source"b1"isRead"b1}
B68@0:8@16@24^{_OpaquePCSShareProtection=}32@40B48B52B56^@60
@"CKDPSubscriptionNotificationAlert"
{?="shouldBadge"b1"shouldSendContentAvailable"b1"shouldSendMutableContent"b1}
q24@0:8^@16
B36@0:8@16B24^@28
{?="expired"b1}
^{pcc_wrapped_invocation_key=*Q}16@0:8
v24@0:8^{pcc_wrapped_invocation_key=*Q}16
^{pcc_wrapped_invocation_key=*Q}
^{pcc_invocation_key=[32C]}16@0:8
v24@0:8^{pcc_invocation_key=[32C]}16
^{pcc_invocation_key=[32C]}
[K,,
ryU$
JG_D
\]^1
y,Dr
oM'+
lAE#
Hh-~
<PM0
O" '
8{:Y
@@N:g
>J?50}1
VJw~kX=
MIW'
d~ou
*(\
P"91d
]vF&
,)IKA
]'by
v{S%
0su5
:`0p
|%,Gf
8rf2
+r-R
rhak
^+ p
xPDH
nhAB
1@r~
H++Yx
4|0@
_OUBQ<"i
[mYK
gZE.o
cN5`
<@uGp
Yeu#t
J|{n
.=Ok
''Nok$%
Sqg{
lR2`
M*$_6
y({2
aS.w
#m7 
S+Ed_ZiY
jB9u
h=Fz}
q`0,
ip"7
M3a
;?`zF
BjLPB
&j(%
N"hS4Rx
 q.G
R_S.
Ru86CJ
eqf'
i+8<
q"$(
X\d"
H)i_
_7Pdl
o)fU
8pLz[=
Ogj2
|oW,L
S1fs
oG2j
V{_Yo|
"s4<
\K%u
2RH^
1D{&
gdhOf
'1Kd
Rf<T
G$E-
'*G=c
7*uk
xev*P
&R3!
9vMO}
s5r>
sZD1+
i373
*ShTz
Ww?I
Q+Gd
z#jyh
CeS
&A/<M
w9&iS
LTlk\
(F^$
'[{<
wPN9
oVmL^
kH2
wRCe
bQT
3Bv]
yA5>
4#cj0
kk~a
^o1;3
de3|
eug;
y7FM
U.T:
+_F3
aBy=O}
thDl]
4>=2
c=0<
{,a>
HQ,=
P@ct
/$) d
Dg|"
b=e5"
nkQp(l
@8*Q
a&wFxac
dum;v
mLl4
xYbA
Kt3)
=Q07
Q!P.
Oj}s
b+6
^+H!
rg6T
.\=]
J((T
/UG[
wpEvI
@(#)PROGRAM:CloudKitDaemon  PROJECT:CloudKit-2000.251.2.1
)0BUUY
.4=Pg
&9=N
'
+
!$0%
':@FLUl
3FYb
#BKj
3333337
6GM`
nqtaaaaaawz}
aaaaaaaaa
aaaaaaaaa
ADSSSSSSSSGJMP
jmpaaaaaasvy|
aaaaaaaaa
aaaaaaaaa
ADSSSSSSSSGJMP
)Hgp
!'-CLl
+-/1357
%IKM
%OQSUW
Y[]_''))a
cegi
kmoqsuwy{}
 ???"$&(*,.024
knqaaaaaatwz}
aaaaaaaaa
aaaaaaaaa
ADSSSSSSSSGJMP
#)/5;AJP^
*09P
.NTZcv
!'FM`hn
(GXw
*;Lgpt
$CLVu~
'-Lk|
 @Sf
2KQWo
#)2Qf
$7Vu
1Qbu
nqtaaaaaawz}
aaaaaaaaa
aaaaaaaaa
ADSSSSSSSSGJMP
jmpaaaaaasvy|
aaaaaaaaa
aaaaaaaaa
ADSSSSSSSSGJMP
)Hgmsssw}
(knN
/NTZ^d
'-LRXw}
daemon/map-share-urls-to-bundle-IDs
Fetched share metadata for URL: %@
Done fetching all share metadata%{public}@%@
Fetched registered bundleIDs%{public}@%@ for URL %@
Starting mapping share urls to bundleIDs operation <%{public}@: %p; %{public}@, %@>
req: %{public}@, "Getting Bundle IDs for container %{public}@"
daemon/fetch-registered-bundle-ids
Fetch registered bundleIDs operation <%{public}@: %p; %{public}@, %@> is starting
Fetched registered bundleIDs %@ with response code %ld
Fetch registered bundleIDs operation <%{public}@: %p; %{public}@> finished with error %@
Failed to convert pRecord %@ : %@
Adding recordID %@ with etag %{public}@ to cache
Failed to generate delta proto with error: %@
Failed to create mergeable delta proto for replacement request: %@
Node failure in upload deltas request %@: %@
Ingesting manatee sharing invitation data for share %@
Setting per-participant PCS on self participant: %@
Didn't get any pre-decrypted share PCS for share %@
Error setting PCS data for share %@ in the cache: %@
Got a shared zone %@ to prep PCS for share %@
Warn: Couldn't create share PCS data: %@
Need to remove %lu public key(s) from the private share PCS: %@
Decrypting shared zone PCS data for share %@
Couldn't encrypt participant properties %@
Couldn't decrypt participant properties %@
Decrypted PII was empty
Decrypted PII was of unexpected class %{public}@
<%{public}@: %p> in %{public}@
PCS data for %{public}@ was found in the cache, but it doesn't have chain PCS data and the client requested that. Fetching from the server.
Client requested fetch of parent PCS data for item %{public}@, but the returned item type doesn't support chain PCS data.
PCS data for %{public}@ was found in the cache, but it doesn't have zoneish PCS data and the client requested that. Fetching from the server.
Client requested fetch of zoneish PCS data for item %{public}@, but the returned item type doesn't support zoneish PCS data. Returning item data anyway since it isn't a zone PCS.
Record PCS data for %{public}@ was found in the cache, but it doesn't have invited PCS data and the client requested that. Fetching from the server.
Zone PCS data for %{public}@ was found in the cache, but it doesn't have share PCS data and the client requested that. Fetching from the server.
Returning in-memory cached PCS data. item=%{public}@, protectionInfoTag=%{public}@, pcsKeyID=%@
Not adding callback to existing fetch operation %{public}@ for operation %{public}@ as it would create a dependency cycle
Adding callback to existing fetch operation %{public}@ for operation %{public}@
Creating a new fetch operation for %{public}@
Fetch operation %{public}@ for item %{public}@ finished with error: %@
Fetch operation %{public}@ for item %{public}@ finished with PCS data %@
Fetching PCS for record %@ for operation %{public}@ with options %{public}@
Fetching PCS for zone %@ for operation %{public}@ with options %{public}@
Fetching PCS for share %@ for operation %{public}@ with options %{public}@
Setting record PCS data %@ for %@ on our in-memory cache
Setting zone PCS data %@ for %{public}@ on our in-memory cache in scope %@
Setting share PCS data %@ for %{public}@ on our in-memory cache
Clearing all PCS caches
Clearing memory-based PCS caches
Clearing invalidated PCS SQL cache entries. Skipping zone pcs: %@
xpcConnection
New connection from client %@
Connection to client %@ was interrupted
Connection to client %@ was invalidated
Client %@ has gone away
Resuming new connection from client %@
Incoming client %@ connection with processBinaryName %@ is waiting to resume its xpc connection. We have %ld existing connection%@ tearing down
Server status report: %@
Client "%{public}@" has entitlement to use openByID
Client "%{public}@" has entitlement to allow access during buddy.
Client "%{public}@" has entitlement to use packages. Good luck!
Got a process scoped client proxy for %@: %@
Ignoring superfluous process scoped client proxy for %@: %@
Ignoring failed attempt to get process scoped client proxy for %@: %@
Failed to issue sandbox extension for applicationBundleID=%@ and path=%@: %@
Issued sandbox extension token for "%{public}@" at %@
Failed to allocate string for sandbox extension for applicationBundleID=%{public}@ and path=%@
Binary has invalid entitlements for %@
Unable to get SecTask for connection to determine entitlement validity
Setting up container %p for proxies %@ / %@, applicationID:%{public}@, containerID:%{public}@
TCC database changed. Clearing cached TCC info
This client requested that we hold all its operations.
CKDContainer (%p) for container %@ (%@) is forcing manatee to be enabled. Weird stuff might happen- you've been warned!
Bundle ID %@ doesn't belong to an application: %@
Purging %@ directory at %@
Registering container %p for account-change-notification
Container %p clearing caches for deletion of account %@
Clearing the asset cache for container %p
Clearing the record cache for container %p
Clearing the persisted PCS cache for container %p
Clearing the in-memory PCS cache for container %p
Clearing the container info cache for container %p
%@ in dealloc
applicationBundleID:%@, installed:%@, containerPath:%@, callingBundlePath:%@, currentPersona:%@
Reloading the account for container %p - the previous account was %@
Loaded account %@ with account override info:%@
Couldn't load an account for container %@ with account override info: %@
The account identifier changed from %@ to %@ - posting an account changed notification and cancelling all outstanding operations
No APS environment set. Falling back to production.
Echoing proxy %@ info into metadata cache for container %@
%@ dataclass disabled, denying access
Bundle %@ isn't authorized for CloudKit, denying access
Container %@ using directories %@
Prematurely failing request <%{public}@: %p; %{public}@, %@> with error %@ because that's what you asked for
A fake response is being tracked that has an invalid lifetime of %li
Asking URL Request <%{public}@: %p; %{public}@, %@> to return fake operation result %@
Using custom url override of %@
Couldn't pull url from backing account %@ or container %@
Fetched container scoped user ID of %{public}@ for dsid %@
Couldn't get a private URL. Fetching updated account properties
Using wrapping app bundle id %{public}@ for extension %{public}@ when registering push tokens
Giving %@ blanket access to any container
Allowing data repair container %{public}@ to set bundle identifier override on operation to '%{public}@'
Allowing %{public}@ to set bundle identifier override on operation to prefixed value '%{public}@'
Container %@ is not allowed to set bundle identifier override '%{public}@'
Container %@ is not allowed to set an operation sourceApplicationSecondaryIdentifier to %@
CloudKitDaemon.framework was built at %s
System is available. Starting work queue for %@
System is unavailable. Stopping work queue for %@
Flushing operation queue for %@
Cancelling all operations for %@
Waiting for all operations on the cloudkit service queue to finish for %@: %@
Waiting for all operations on the background more operations queue to finish for %@: %@
Waiting for all operations to finish for %@. operationQueue=%@ cleanupOperationQueue=%@ uncancellableOperationQueue=%@
Finished flushing operation queue for %@
Consulting TCC for access for container %@...
Setting un-initialized TCC access for bundle identifier override '%{public}@'
TCC %{public}@ access for container %@
Found cached TCC %{public}@ for container %@
No cached metadata found for outstanding operation %{public}@. Finishing it with an error
Writing down long-lived operation %{public}@ for container: %@
Account status is %{public}@
Current account is%@ secondary account with override info %@
Returning account info to client: %@%{public}@%@
Will reload the account for %@
Reloading account for %@
Permission status: %d (global: %d)
Operation %{public}@ completed%@
Deleting all cached info for operation %{public}@
Sending user identity to client for operation %{public}@ lookupInfo: %@
Sending user identity to client for operation %{public}@ userIdentity: %@
Sending save completion to client for operation %{public}@ zoneID: %@
Sending delete completion to client for operation %{public}@ zoneID: %@
Sending fetch record zones progress to client for operation %{public}@ zoneID: %@
Sending zone-was-updated progress to client for operation %{public}@ zoneID: %@
Sending zone-was-deleted progress to client for operation %{public}@ zoneID: %@
Sending zone-was-purged progress to client for operation %{public}@ zoneID: %@
Sending zone-was-delete-due-to-encrypted-data-reset progress to client for operation %{public}@ zoneID: %@
Sending change token update progress to client for operation %{public}@ error: %@
Checking eligible containers for OOP-UI container %@
Found eligible container %@
Not informing Sharing UI observers about unknown update for record in OOP UI container: %@
Broadcasting share update to client containers for container: %@
Error broadcasting share update to observer: %@
Sending record save progress %lf to client for operation %{public}@
Sending records in flight progress to client for operation %{public}@ with recordIDs: %@
Sending record save completion to client for operation %{public}@ for recordID: %@
Sending delete completion to client for operation %{public}@ for recordID: %@
Sending upload completion to client for operation %{public}@ for recordID: %@
Sending fetch completion to client for operation %{public}@ for recordID: %@ error: %@
Sending record fetch command to client for operation %{public}@ for recordID: %@
Sending record fetch completion to client for operation %{public}@ for recordID: %@ error: %@
Sending record changed progress to client for operation %{public}@ for recordID: %@
Sending record deleted progress to client for operation %{public}@ for recordID: %@
Sending change token update progress to client for operation %{public}@ for zoneID: %@
Sending completion for operation %{public}@ with server change token %@, client change token date %@, record changes status %ld
Sending record move progress to client for operation %{public}@
Sending record move completion to client for operation %{public}@ for recordID: %@
Sending record fetch completion for operation %{public}@ with record: %@
Sending query cursor update progress to client for operation %{public}@ with cursor: %@
Sending completion for operation %{public}@ with cursor %@
Sending save completion to client for operation %{public}@ for subscription ID: %@
Sending delete completion to client for operation %{public}@ for subscription ID: %@
Sending fetch subscription progress to client for operation %{public}@ for subscription ID: %@
Sending notification changed progress to client for operation %{public}@ with notification: %@
Sending completion for operation %{public}@ with server change token %@ more coming %{public}@
Sending notification mark-read progress to client for operation %{public}@ for notification ID: %@
Sending accept share progress to client for operation %{public}@ for url: %@
Sending share metadata progress to client for operation %{public}@ for url: %@
Sending bundleIDs mapping progress to client for operation %{public}@ for url: %@
Sending completion for operation %{public}@ with web auth token %@
Returning override user email %@ for container %@
Scheduling a cancel of all operations for %@
Sending sandbox extensions to client...
Error sending sandbox extensions to client: %@
Failed to create directory for "%@" at %@: %@
Sandbox extensions %@needed for %@, container: %@, proxy sandboxed: %@, hasDataContainer: %@
Resetting throttles in pid %d
After replacing record archives, client returned serialized request: %@
Asking client to deserialize initial response: %@
After deserializing initial response, client returned wire serializations: %@
Asking client to replace wire transport blobs: %@
Proxy status report: %@
Daemon submitting CKEventMetric %@.
Daemon submitted CKEventMetric %@.
Found suggested mergeable delta size: %ld
No cached configuration for suggested mergeable delta size, returning default: %ld
MMCS setup failed:%@
No MMCS for %@
No assetCache MMCS for %@
Clearing asset cache for %@
Showing all known asset caches
Clearing record cache for %@
Sending archived record progress to client for operation %{public}@ for recordID: %@
Sending archive record progress to client for operation %{public}@ for recordID: %@
Sending asset published progress to client for operation %{public}@ with recordID: %@
Sending asset published completion to client
Sending asset repair progress to client for operation %{public}@ with recordID: %@
Sending asset repair completion to client
Sending mark asset broken progress to client for operation %{public}@ with recordID: %@
Sending simulate break asset completion to client
Sending record web sharing progress to client for operation %{public}@ for recordID: %@
Sending record web unsharing progress to client for operation %{public}@ for recordID: %@
Sending record web sharing completion to client
Warn: Couldn't create a web sharing identity for client %@: %@
Warn: Couldn't convert web sharing identity to data for client %@: %@ (identity was %@)
Successfully created a web sharing identity for %@: %@
Sending record access grant progress to client for operation %{public}@ for recordID: %@
Sending record access revoke progress to client for operation %{public}@ for recordID: %@
Sending record access modification completion to client
Sending vetting completion progress to client for operation %{public}@ for url: %@
Sending vetting completion progress to client for operation %{public}@ for share metadata: %@
Sending share participant key fetch progress to client for operation %{public}@ recordID: %@
Fetched PCS for share, but result had no invitedPCS?
Sending initiate participant vetting operation progress to client for operation %{public}@ error: %@
Sending completion for operation %{public}@ with quota available %lld
Sending mergeable delta fetched progress to client for operation %{public}@ for %@
Sending fetched metadata to client for operation %{public}@ for value %@
Sending per-value replacement request completion to client for operation %{public}@ for request %@
Sending delta upload progress to client for operation %{public}@ for %@
Sending replacement progress to client for operation %{public}@ for %@
Sending completion for operation %{public}@ with bundle IDs %@
Returning boundary key to client: %@%@%@
Clearing record cache for %@ with scope %@
Clearing auth tokens for record %@
Clearing the container info cache
Clearing the persisted PCS cache for container %@
Unexpectedly found some outstanding operations: %@
Getting PCS diagnostics for all zones
Getting Record PCS diagnostics for all zones
Repairing PCS data for all zones
Repairing PCS data for zones %@
Sending zone PCS diagnostic progress to client for operation %{public}@ zoneID: %@
Tossing client configuration
daemon/deserialize-record-modifications
Operation %{public}@ is not allowed to run without an entitlement
Error while trying to determine userID: %@
CKDSerializeRecordModificationsOperation is unable to instantiate a CKDProtocolTranslator
CKDDeserializeRecordModificationsOperation is unable to deserialize its messages
Unpackaging SaveRecords of %lu records
Error transforming record: %@
Unpackaging AssociatedMergeableDeltas with %lu deltas
Error transforming CKRecordID, %@
AssociatedMergeableDelta present for missing record %@
AssociatedMergeableDelta present for missing field '%@' in record %@
Error transforming CKMergeableValueID, %@
Error transforming CKMergeableDelta with ID %@
Unpackaging DeleteRecordIDs of %lu recordIDs
Error transforming recordID: %@
Flushing all PCS memory caches
Started PCS memory cache timer.
Stopped PCS memory cache timer.
pcsMemoryCacheEvict
Attempting to evict %lu items from PCS memory cache %p
Evicted %lu items from PCS memory cache %p
Returning PCS data from in-memory cache (%{public}@). scopedItemID=%{public}@, protectionInfoTag=%{public}@
Found a memory cache entry in (%{public}@) but it has no decrypted data, removing it. scopedItemID=%{public}@
Setting PCS data in the in-memory cache (%{public}@). scopedItemID=%{public}@, protectionInfoTag=%{public}@
Removing PCS data in the in-memory cache (%{public}@). scopedItemID=%{public}@
Clearing all entries in PCS cache %p
init, reader:%p
dealloc, reader:%p
range %{public}@ overlaps with previous range
Initialized with container %p. Background: %d, cellular: %d, expensive: %d, QOS: 0x%x
daemon/?
Setting parent operation of %p to %p
Adding child operation %{public}@ to parent operation %{public}@
Child operation %{public}@ was added to parent %{public}@ but the parent has no container or operation queue to run that operation on
Operation was cancelled before it could start
Invoking main for operation %{public}@
Notifying operation info cache of an attempt for long-lived operation %{public}@
Checking application version
Application version is not allowed by the server
Couldn't get server configuration
Determining Network Service Types
Determined Network Service Type %{public}@
Using pre-determined Network Service Type %{public}@
Type=%{signpost.description:attribute,public}@ ID=%{signpost.description:attribute}@ ContainerID=%{signpost.description:attribute}@ BundleID=%{signpost.description:attribute}@ QoS=%{signpost.description:attribute,public}@ 
CKDOperation
Starting <%{public}@: %p; %{public}@, %@>
<%{public}@: %p; %{public}@> is already cancelled and finished but it tried to start again
<%{public}@: %p; %{public}@> was cancelled before it started
Operation %{public}@ requires checking app version.  Doing so
Start ended
Operation %{public}@ calling out to client about lifecycle transition
Asked client what to do for a daemon operation, it responded with an error %@
Operation %{public}@ was told to take action "%@"
main was called on CKDOperation
Finishing with error: %@
Operation is finishing on callback queue with an error
Operation is finishing on callback queue with no error
The operation %{public}@ didn't start or is already finished
Ignoring _finishInternalOnCallbackQueue invocation on already-finished operation %{public}@
Waiting for all (%lu) child operations to finish for operation %{public}@
Finished waiting for all (%lu) child operations to finish for operation %{public}@
Operation %{public}@ is waiting for its state transition lock holders to finish before it can complete
All state transition locks have been released. Finishing operation %{public}@
Finished operation <%{public}@: %p; %{public}@, %@> metrics=%@%{public}@%@
Cancelling operation <%{public}@: %p; %{public}@>
%{public}@
Operation %{public}@ transitioned from state [%{public}@] to state [%{public}@]
makeStateTransition was called on CKDOperation
Operation %{public}@ is transitioning from state [%{public}@], stop:%d, cancelled:%d, error:%{public}@
Operation %@ was assigned QoS greater than Utility but it has discretionary networking behavior. Demoting operation QoS to Utility.
A CKDOperation was assigned a QoS greater than Utility but its discretionaryNetworkingBehavior is not set nonDiscretionary. A high QoS operation may end up gated on the network.
Operation <%{public}@: %p; %{public}@>, setting current request from %{public}@ to %{public}@
Configured request <%{public}@: %p; %{public}@> for operation <%{public}@: %p; %{public}@>
Operation %{public}@ sending CoreAnalytics event %{public}@
Operation class %{public}@ does not implement %{public}@
Registering zone gate locks for IDs %@ waiter %@
Can't immediately grant gate to %@ because zone %@ held by %@
CKDZoneGatekeeper
Deferring relinquish of zone gate locks for waiter %@
Relinquishing zone gate locks for waiter %@
Can't grant gate to waiter %@ because zone %@ held by %@
Granting gate to waiter %@
daemon/fetch-mergeable-delta-metadata
Error fetching delta metadata in operation %@: %@
Fetched delta metadata for operation %@
Deallocated while fetching delta metadata
Will fetch delta metadata recursively for value IDs %@ with continuation tokens %@
Fetch metadata operation deallocated before request per value ID block
Got a continuation token for value %@
Fetch metadata operation deallocated before request completion block
Continuing fetch delta metadata with new continuation tokens: %@
Fetch delta metadatas URL request completed for operation <%{public}@: %p; %{public}@>
No per-valueID fetch block for operation %@
Failed to fetch metadatas for value %@: %@
Successfully fetched %ld delta metadatas for value %@
No record ID for delta metadata on value ID %@
Need to decrypt timestamps for metadata %@
Error fetching PCS to decrypt fetched delta metadata: %@
Failed to decrypt delta metadata %@: %@
Successfully decrypted delta metadata %@
daemon/fetch-record-pcs-diagnostics
Checking Record PCS for %ld zones: %@
Done checking PCS for records in all zones
Error fetching zone %@: %@
Zone with ID %@ was fetched: %@
Done fetching zones
Starting fetch record PCS diagnostics operation <%{public}@: %p; %{public}@, %@>
daemon/query
fetchAllResults:%{public}@ error:%@ resultsCursor:%@
Finishing daemon operation %{public}@ due to client-returned error %@
Handling record response for record %@
Warn: Query <%{public}@: %p; %{public}@> could not find record %@: %@
The full record for %@ was fetched
Executing query with cursor %@
Query request <%{public}@: %p; %{public}@> for operation %{public}@ finished with error %@
We're not done here. Sending another query with cursor %@
Record fetcher finished for query %p
Waiting for all record fetches to finish...
Zone PCS fetch operation %{public}@ received PCS data (%{public}@/%{public}@)%{public}@%@
Zone PCS fetch operation %{public}@ already has PCS data %@. Ignoring the fetch callback with %@/%@
Fetching PCS data for zone %@ from the database with scope %@
Error fetching PCS data from the database for %@: %@
Zone PCS data was fetched from the database but it didn't have the requested zoneish PCS. Fetching PCS data from the server for zone %@
PCS data was fetched from the database for zone %@
No PCS data was found in the database for zone %@ with scope %@
Not fetching zone-wide share PCS for zone %@ in the shared database since it has no shareID
Fetched PCS for share %@ in order to decrypt zone %@%{public}@%@
Successfully saved PCS on zone: %@
Saved zone ID isn't what we expected: %@ (expected %@)
Updating zone %@ with new PCS object
Couldn't serialize zone PCS: %@
Couldn't serialize zoneish PCS: %@
Saving new PCS on zone %@
Couldn't create new zone PCS: %@
Couldn't create new zoneish PCS: %@
Couldn't decode PCS data: %@
Couldn't decode zoneishPCS data: %@
Saved zoneishPCS is %@. Key ID is %{public}@
Save of new PCS object to zone %@ was %{public}@successful%{public}@%@
Found a default zone with NULL PCS data. Creating new PCS data and saving it
Error fetching PCS data for zone %@ from the server: %@
systemZone was not found. Creating systemZone and saving it
Zone %@ in the shared database has no shareID, skipping decryption
Warn: Error with PCS data for zone: %@
We need to create a zoneish PCS but we don't have the zone PCS for zone %@
Created a new zoneish PCS for zone %@: %@
Warn: Error with zoneish PCS data for zone: %@
Error decrypting PCS for zone %@: %@
Saving new zoneish PCS to the server for zone %@
Error saving zoneish PCS to server for zone %@: %@
Resetting user privacy settings for %@
Failed to reset user privacy settings for %@: %@
daemon/queued-fetch
Error fetching item with ID %@: %@
Bulk fetched item with ID %@: %@.
Not starting fetch because this operation has already been cancelled
Starting aggregate fetch %@ with %d callbacks at QoS %{public}@
Generating a batch of %ld records from index %ld
%{public}@ operation %@ finished%{public}@%@.
Bulk record fetch operation %@ finished%@%@.
<%{public}@: %p; %{public}@> Request Initializing
req: %{public}@, "dealloc"
req: %{public}@, "Not returning a request body stream because there are no items to stream"
req: %{public}@, "This request has too many operations: %lu/%lu"
req: %{public}@, "Fetching auth token"
req: %{public}@, "Preparing auth token for request " "<%{public}@: %p; %{public}@, %@>"
req: %{public}@, "Handling authentication failure"
req: %{public}@, "Auth failed but this request is already finished"
Failing credential renewal with a stale token error for tests for request %{public}@
req: %{public}@, "Auth token acquired. Retrying."
req: %{public}@, "Warn: Couldn't renew an auth token- cancelling this request"
req: %{public}@, "Our token auth is bad and we've already retried it. Giving up on request %@"
req: %{public}@, "Parsed a response object with no operationUUID.  Result %@"
req: %{public}@, "Our auth token is bad and we should feel bad."
req: %{public}@, "Syntax error in request"
req: %{public}@, "Server could not find any request operations in this request. Giving up."
req: %{public}@, "Forbidden resource in request"
req: %{public}@, "Expired app config"
req: %{public}@, "Expired global config"
req: %{public}@, "Received error %d from the server: %@"
req: %{public}@, "Plugin error in request"
req: %{public}@, "Auxiliary error in request"
req: %{public}@, "Received unknown error from the server: %@"
req: %{public}@, "Warn: Dropping protobuf result since we've alredy returned it to the client. This likely happened because of a request timeout."
req: %{public}@, "Error parsing protobuf object: %@"
req: %{public}@, "Node level failure encountered while parsing"
req: %{public}@, "Task level failure encountered while parsing"
req: %{public}@, "Successfully parsed JSON object"
req: %{public}@, "Warn: Failed to handle JSON response: %@"
req: %{public}@, "Successfully parsed plist object"
req: %{public}@, "Warn: Failed to handle plist response: %@"
req: %{public}@, "Warn: Ignoring nil value for header: %{public}@"
req: %{public}@, "%@ attempted to send request %{public}@ along with %{public}@, but they hit different servers"
req: %{public}@, "%@ attempted to send request %{public}@ along with %{public}@, but they hit different partitions"
req: %{public}@, "Couldn't determine base URL for server type %ld partition type %ld off container %@"
%{public}@ called on %{public}@ but no operation is set
req: %{public}@, "CKDURLRequest with no owning operation"
url-request
Identifier=%{signpost.description:attribute}@ Operation=%{signpost.description:attribute}@ 
CKDURLRequest
req: %{public}@, "%{public}@ Performing"
req: %{public}@, "This request requires an authenticated account, which is unavailable for CloudKit-Anonymous / App Clips processes"
req: %{public}@, "This request requires an authenticated account, which is unavailable for Background Assets Extension processes"
req: %{public}@, "This request requires an authenticated account"
req: %{public}@, "This request requires an authenticated account, the current account cannot auth with CloudKit"
req: %{public}@, "CloudKit access was denied by user settings"
req: %{public}@, "%{public}@ Requires a url for the app partition, getting it"
req: %{public}@, "%{public}@ Requires a url for the user partition, getting it"
req: %{public}@, "%{public}@ Requires configuration, getting it"
req: %{public}@, "%{public}@ allows a container scoped user id, seeing if we have one"
req: %{public}@, "Fetched container scoped user ID of %{public}@ for dsid %@"
req: %{public}@, "%{public}@ Requires device id, getting it"
Not registering push token for anonymous account: %{public}@
Not registering push token for account that can't auth: %{public}@
Not registering push token for OOP UI container operation: %{public}@
req: %{public}@, "%{public}@ Requires push token registration, doing so. isCKSystemService=%d"
req: %{public}@, "%{public}@ Failed to register push tokens: %@"
req: %{public}@, "%@ Requires zone id gates, grabbing them from gatekeeper, expectDelay %{public}@"
Using a fake CloudKit token for request %{public}@
Using nil CloudKit token for request %{public}@
Using a fake iCloud token for request %{public}@
Using nil iCloud token for request %{public}@
req: %{public}@, "Request was finished while waiting for auth tokens"
req: %{public}@, "Failed to fetch auth tokens, continuing with anonymous access"
req: %{public}@, "Encountered an error while fetching auth tokens: %@"
req: %{public}@, "Fetched auth tokens"
Performing
req: %{public}@, "%{public}@ Validation error: [%@]"
req: %{public}@, "%{public}@ Request does not have a URL. Failing."
req: %{public}@, "Performing request with URL=%@ background=%d allowCellular=%d allowExpensive=%d (timeouts %.1lfs, %.1lfs)"
req: %{public}@, "Skipping authorization header field for dsid: %@, iCloudAuthToken: %@"
req: %{public}@, "%{public}@ Outgoing request body is streamed"
req: %{public}@, "%{public}@ Outgoing request body is empty"
req: %{public}@, "%{public}@ using custom network service type %{public}@"
For session %@, task %@, set up networking delegate %@
req: %{public}@, "%{public}@: Starting request with URL session data task %@"
Resuming
req: %{public}@, "%{public}@: Dropping network request; you asked for it"
req: %{public}@, "cancel"
%{public}@, Cancelling the URL session data task %@ for request %{public}@
req: %{public}@, "%{public}@, asked to finish with error %@"
req: %{public}@, "Warn: %{public}@, request %{public}@ was already marked as finished"
req: %{public}@, "%{public}@, will finish request %{public}@ with error %@"
req: %{public}@, "Calling completion block"
req: %{public}@, "%{public}@, did finish request %@ with error %@"
req: %{public}@, "Marking as finished"
req: %{public}@, "tearDownResources"
req: %{public}@, "tearDownResourcesAndReleaseTheZoneLocks"
Would've performed a block on the lifecycle queue but it was deallocated before it could.
%{public}@ would've performed a block on the lifecycle queue but it was marked finished before it could.
req: %{public}@, "%{public}@ ignoring spurious callback from task %@, which is not my task %@"
req: %{public}@, "URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:"
req: %{public}@, "Task is getting redirected but automatic redirections are disabled.  Task: [%@]\nInitial request: [%@]\nProposed request: [%@]\nRedirect response: [%@]"
req: %{public}@, "Request is being redirected between https and http. We're not falling for that one"
req: %{public}@, "Task is getting redirected: [%@]\nInitial request: [%@]\nProposed request: [%@]\nReconstructed request: [%@]\nRedirect response: [%@]"
req: %{public}@, "%{public}@ ignoring spurious callback from task %@, which is not my session %@"
req: %{public}@, "Warn: %{public}@ sent request UUID %{public}@, received %{public}@"
req: %{public}@, "Received response UUID:%{public}@, status:%ld, responseDisposition:%ld"
req: %{public}@, "Received response UUID:%{public}@, but was already cancelled.  Cancelling NSURLSessionDataTask"
req: %{public}@, "URLSession:dataTask:didReceiveData: %ld bytes"
req: %{public}@, "URLSession:task:needNewBodyStream:"
req: %{public}@, "Asked for a new body stream while already cancelled.  Soldiering on without a request body"
req: %{public}@, "URLSession:task:didSendBodyData: %lld totalBytesSent: %lld totalBytesExpectedToSend: %lld"
Completed
req: %{public}@, "URLSession:task:didCompleteWithError: %@"
Connection Created
req: %{public}@, "Server requested an AutoBugCapture snapshot to be triggered with reason: %{public}@"
req: %{public}@, "Server requested a Tap-To-Radar prompt with reason: %{public}@"
req: %{public}@, "Server requested a auto-sysdiagnose with reason: %{public}@"
req: %{public}@, "Received a didCompleteWithError without an error but no response from the server. Treating the following task as an unknown error: %@ %@"
req: %{public}@, "%{public}@ request is marked as needing auth retry"
req: %{public}@, "Warn: request failed with http status %ld"
req: %{public}@, "Parser failed to parse with error %@"
req: %{public}@, "Received a didCompleteWithError without an error but no response body where one was expected. Treating the following task as an unknown error: %@ %@"
url-request-transmission
Established Connection
req: %{public}@, "requestForEstablishedConnection"
req: %{public}@, "Cancelling request on established connection due to cancelled CKDURLRequest"
req: %{public}@, "URLSessionTaskIsWaitingForConnection"
req: %{public}@, "conditionalRequirementsChanged to: %s"
req: %{public}@, "URLSessionWillRetryBackgroundDataTask after event %@"
Wrapping context requires a non-nil recordID and field. RecordID: %@, field: %{public}@
Invalid wrapping context for generating asset context string. File signature: %@. Reference signature: %@.
Account information changed. Clearing PCS caches
Using %{public}@ PCS Service Name %{public}@ with containerID %{public}@
CKDPCSManager/PCSIdentitiesChanged
PCS identities changed. Clearing PCS identity caches
We've come across missing identities before. Checking to see if a formerly missing key has arrived.
Couldn't get a full identity set to verify against
Service %{public}@ now has a current identity
Formerly missing public key %{public}@ was found with identity %@.
One or more previously missing PCS identities have arrived. Posting a notification to all clients
Couldn't get a %{public}@key for service: %@
OON keyswap: Failed decrypting calling participant protectionInfo: %@. CombinedOONIdentity: %@ (%@)
Couldn't create a diversified public key for the owner participant: %@
Couldn't create an identity from the public sharing key for participant: %@ (key was %{public}@)
Created public identity for participant: %@
Couldn't add public identity to per-participant PCS: %@
OON keyswap: Failed to remove combined identity: %@
OON keyswap: failed to convert PCS blob to data: %@
Error decrypting the invited PCS: %@
Error decrypting the per-participant PCS: %@
Warn: Couldn't get a self identity: %@
Added identity %@ to PCS %@
Error adding identity %@ to PCS %@: %@
Warn: Couldn't get a %@ identity: %@
Couldn't get keyIDs from pcs %@
Couldn't get private key from pcs %@
Couldn't get a public identity from PCS %@
A PCS blob could not be decrypted for service %{public}@. %{public}@ are keys that can decrypt the zone. Will notify clients if any of these keys arrive.
We are missing identities for service %{public}@. Will notify clients if any keys arrive.
Failed to get signing identity in createZonePCSWithError: %@
Warn: Couldn't get a Reminders identity: %@
Created new zone PCS: %@
Error creating new zone PCS: %@
Forcing user key registry sync retry for unit tests
Forcing user key registry sync failure for unit tests
Synchronizing user key registry before retrying zone PCS creation for service %{public}@.
Failed to synchronize user key registry: %@
Successfully synchronized user key registry. Retrying zone PCS creation for service %{public}@.
Created zone PCS data from zone PCS %@: %@.
Error creating zone PCS data from zone PCS %@: %@
Error creating PCS from encrypted data %@: %@
Got %lu pcs key(s) to match from dugong invitation
Matching participants with invitation public key: %@
PPPCS public key is not present for participant %@, checking PPPCS blob
Manatee share is already accepted by participant %@, filling anonymousID %@ for share metadata.
Could not get public key data from invitation token for share %@. This won't go well.
Stingray share is already accepted by participant %@, filling anonymousID %@ for share metadata.
Found current participant %@ on anonymous to server share %@
Failed to get current identity set trying to create anonymous userID %@
Failed to get current identity trying to create anonymous userID: %@
Failed to get exported private key data trying to create anonymous userID: %@
Generated fake anonymous user ID %@
Failed to assemble required components to generate an anonymous userID. Not returning one.
CKBehaviorOptions override - Generated anonymous user ID %@ for share %@
Generated versioned anonymous user ID %@ for share %@
A decrypt attempt on this exact PCS data has failed before and no useful identities have arrived since. Failing the decryption.
Decrypted and exported sharing invitation token with identity set %@%{public}@%@
Decryption with identity set %@ failed. Attempting to decrypt using all identities in the keychain %@
Was able to decrypt pcs with a key in the keychain, but not the %{public}@ key. Possibly a misconfigured client set up.
Created %{public}@ using identity %@ 
From data %{public}@
Error creating PCS: %@.
Identity %@
PEM data was %@
 PCS data %@.
Synchronizing user key registry before retrying decryption for service %{public}@.
Successfully synchronized user key registry. Retrying decryption for service %{public}@.
Failed to decrypt PCS data even after syncing user key registry because we have no identities. Returning retryable failure.
Failed to decrypt PCS data even after syncing user key registry. Returning permanent failure.
Failed to decrypt manatee blob because iCDP isn't available. This should've been caught and failed earlier.
Forcing CKErrorInternalPCSNoPublicIdentity after key registry sync due to unit tests
Forcing CKErrorInternalPCSDecryptFailed after key registry sync due to unit tests
Warn: No identities for service %{public}@: %@
Warn: Couldn't preflight identity for service %{public}@: %@
Forcing user key registry sync failure for current service
Synchronizing user key registry before retrying identity preflight for service %{public}@.
Successfully refetched user identities after key registry sync failure: %@. Identity preflight for %{public}@ succeeded.
Failed to synchronize user key registry: %@, marking identities missing.
Successfully synchronized user key registry. Retrying identity preflight for service %{public}@.
Created zone PCS using identity %@ from data %{public}@: %@.
Error creating zone PCS: %@.
Identity %@
PEM data was %@
Zone PCS data %@.
Error creating shared zone PCS using invited PCS for zone %@: %@
Created shared zone PCS: %@ and zoneish PCS: %@ for zone %@
Couldn't create data from zone PCS %@: %@
Successfully repaired zone PCS data
Error repairing zone PCS data: %@.
Identity: %@
PEM data: %@
Data was %@
Not checking PCS shouldRoll hint because we're asked not to!
Not checking PCS shouldRoll hint because we're using a non-manatee service identity: %{public}@
Not checking PCS shouldRoll hint because we're not allowed to in container %@
Not checking PCS shouldRoll hint because manatee isn't available. %{public}@%@
Aborting master key roll because of behavior option override
Aborting master key roll because container %@ is not on the allowlist
Aborting master key roll due to cap of %lu rolls. Current number of keys: %lu
Couldn't roll master key for record PCS %@: %@
Rolled master key for record PCS %@
Not updating zone PCS identities because we're asked not to!
Not updating zone PCS identity because container %@ is not on the allowlist
Couldn't update zone identity on pcs %@ using zone PCS %@: %@
Updated zone identity on pcs %@ with using zone pcs %@
PCS data with hash %{public}@ is undecryptable. Recording this so we fail early on future attempts.
Failed to clean up share pcs %@: %@
Cleaned up %lu private keys from pcs %@
Failed to roll the identity for share pcs %@: %@
Rolled the identity for share pcs %@
Not rolling zone PCS identities because we're asked not to!
Not rolling zone PCS identities because we're using a non-manatee service identity: %{public}@
Couldn't roll key for zone PCS %@ with current service %{public}@: %@
Rolled key for zone PCS %@ with current service: %{public}@
Not rolling zone sharing PCS identities due to behavior option
Not rolling zone sharing PCS identities because current service %{public}@ is not manatee
Attempting to roll share keys for zone-wide share in zone %@ but this operation is not permitted
Didn't get decrypted share, shared zone pcs to roll- aborting. Share PCS: %@, Zone PCS: %@, Zoneish PCS: %@
Didn't get decrypted zoneish pcs to roll- solidering on. We're probably using per-record PCS.
Rolling identities for zone-wide share and zone pcs for zone %@
Couldn't remove old invited PCS from zone PCS for zone-wide share in zone %@: %@
Couldn't remove old invited PCS from public PCS for zone-wide share in zone %@: %@
Failed to roll identity for invited PCS for zone-wide share in zone %@: %@
Failed to add rolled invited PCS key to zone PCS for zone-wide share in zone %@: %@
Failed to add rolled invited PCS key to public PCS for zone-wide share in zone %@: %@
Failed to roll identity for zone PCS for zone %@: %@
Couldn't serialize zoneish PCS for share roll: %@
Couldn't decode zoneishPCS data for share roll: %@
Couldn't update identity on zoneish PCS for zone %@: %@
Failed to roll master key for zoneish PCS for zone %@: %@
Couldn't clean up old private keys from PCS for zone %@: %@
Failed to roll keys for zone-wide share in zone %@: %@
Successfully rolled keys for zone-wide share in zone %@
Not rolling record PCS keys because current service %{public}@ is not manatee
Allowing record PCS key rolling in container %@ due to behavior option override
Didn't get decrypted record pcs and zone pcs to roll- aborting. Record PCS: %@, Zone PCS: %@
Couldn't update identity on record PCS for record %@: %@
Failed to roll master key for record PCS for record %@: %@
Failed to roll keys for record PCS for record %@: %@
Successfully rolled keys for record %@
Attempting to roll record PCS keys for zone-wide share in zone %@ but this operation is not permitted
Didn't get decrypted share, shared zone and record pcs to roll- aborting. Share PCS: %@, Zone PCS: %@, record PCS: %@
Couldn't serialize zone-wide share record PCS for share roll: %@
Couldn't decode zone-wide share record PCS data for share roll: %@
Couldn't update identity on zone-wide share record PCS for zone %@: %@
Failed to roll master key for zone-wide share record PCS for zone %@: %@
Failed to remove the old invited PCS key from zone-wide share record PCS for zone %@: %@
Failed to add rolled invited PCS key to zone-wide share record PCS for zone %@: %@
Failed to roll keys for zone-wide share record PCS in zone %@: %@
Successfully rolled keys for zone-wide share record PCS in zone %@
Couldn't create a new PCSShareProtectionRef: %@
Created %@record PCS from zone PCS %{public}@%{public}@%@: %@.
Error creating record PCS from zone PCS %@%{public}@%@: %@
Created %@record PCS from zone PCS data %{public}@%{public}@%@: %@.
Error creating record PCS from zone PCS %@%{public}@%@: %@.
Created data from record PCS %@: %@
Error creating PCS data from record PCS %@: %@
Created PCS object from data (%{public}@): %@. Share PCS was %@
Error creating PCS object: %@.
Share PCS was %@.
PEM data was %@.
Share PCS public keys were %@
Exported PCS data was %@
Refusing to add a nil share PCS to a record PCS
Refusing to add a share PCS to a nil record PCS
Adding %{public}@share PCS
To PCS
Warn: Unable to add share PCS (%@) to record PCS (%@): %@
Added share PCS %@ (%@) to record PCS %@.
Refusing to remove a nil share PCS from a record PCS
Refusing to remove a share PCS from a nil record PCS
Removing share PCS
From PCS
Warn: Unable to remove share PCS (%@) from record PCS (%@): %@
Removed share PCS %@ from record PCS %@.
Couldn't create data from record PCS %@: %@
Failed to get signing identity in createEmptySignedSharePCSForServiceType:withError: %@
Warn: Error creating a share PCS: %@
Created a new signed share PCS: %@
Created a new share PCS: %@
Setting owner public identity %@ on pcs %@
Warn: Error adding public %{public}@ identity to share PCS: %@
Warn: Error adding public sharing identity to share PCS: %@
Created new chain PCS: %@
Error creating new chain PCS: %@
Created data from share PCS %@: %@
Error creating PCS data from share PCS %@: %@
Couldn't decrypt share PCS data with share identity %@: %@
Created share PCS from data (%@): %@. Identity PCS was %@
Error creating share PCS: %@.
Identity PCS was %@.
PEM data was %@.
Record data was %@
Couldn't decrypt share PCS data with share identities %@: %@
Couldn't create an identity from private key data: %@
Couldn't create a public PCS from the PCS data %@ for identity %@: %@
Couldn't create data from encrypted share PCS: %@
Public key data for current private key for share PCS %@ is %{public}@
Trying to unlock our per-participant PCS for share %@ using the %{public}@ service
Successfully decrypted a per-participant PCS using our %{public}@ identity: %@
Attempting decryption of per-participant PCS for share %@ using our %{public}@ identity
No current per-participant PCS data found for decryption on share %@
Trying to unlock PCS blobs for the share using our PPPCS
Successfully decrypted the invited share PCS using our per-participant PCS
Successfully decrypted the public share PCS using our per-participant PCS
Trying to unlock the invited PCS using our %{public}@ service identity
Successfully decrypted the invited share PCS using our identity
Trying to unlock the public PCS using our %{public}@ service identity
Trying to unlock the public PCS using the public sharing key
Trying to unlock the public PCS using the decrypted invited PCS
Couldn't decrypt public PCS for share %@ using the private PCS. Oh well, moving on.
Successfully decrypted the public PCS for share %@ using the private PCS
We were able to decrypt the share public PCS using our identity for share %@
Couldn't decrypt share private PCS with public PCS for share %@: %@
Unlocked private share PCS for share %@ using the public PCS
We were able to decrypt the public share PCS for %@ with our identity, but since the share permission is %ld we can't decrypt the private PCS. This might not go well...
Failed to decrypt the public share PCS using our identity
Warn: Couldn't unlock the private share PCS for share %@
Share decryption called without a share
Using pre-decrypted share PCS for share %@
Decrypted share PCS for share %@
Couldn't unlock the private share PCS for share %@: %@
Creating new PCS data for share %@ with service type %{public}@
Couldn't create a private PCS object for the share %@: %@
Couldn't create a public PCS sharing identity from data (%@): %@
Using identity for public PCS on share %@: %{public}@: %@
Couldn't create a public PCS object for the share %@: %@
Couldn't create data from our public sharing identity: %@
Adding debug sharing identity to share %@
Couldn't add debug sharing identifier to share %@: %@
Adding the owner to the self-added PCS blob for share %@
Couldn't add our %{public}@ identity to the public PCS for share %@: %@
Error adding private sharing PCS to public sharing PCS for share %@: %@
Error creating PCS data for share %@: %@
Successfully created PCS data for share %@
Couldn't create data from share PCS %@: %@
Refusing to add a nil public identity to a record PCS
Refusing to add a sharing identity to a nil record PCS
Successfully added public identity %@ to record PCS %@
Error adding public identity %@ to record PCS %@
Refusing to add a nil sharing identity to a record PCS
Error getting a public identity from sharing identity %@
Refusing to remove a nil sharing identity from a record PCS
Refusing to remove a sharing identity from a nil record PCS
Couldn't create a PCS from the encrypted blob %@
Removing public identity for key %{public}@
Failed to remove public identity matching key %{public}@ from record PCS %@
Could not find matching public identity for key %{public}@ on record PCS %@
Removing public identity for keyID %{public}@
Failed to remove public identity matching keyID %{public}@ from PCS %@
Could not find matching public identity for keyID %{public}@ on record PCS %@. Soldiering on.
Got sharing identity %@ from PCS data %@
Warn: Couldn't get sharing identity from PCS data: %@
Couldn't unwrap asset key because we have no PCS object or wrapped asset key
Unwrapped wrapped asset key %{public}@ with PCS %@
Failed all decryption attempts for wrapped asset key %@ in context %@ using PCS %@: %@
Couldn't create a wrapped asset key: %@
Couldn't wrap asset key with no record PCS or asset key
Wrapped asset key with signature %@ with PCS %@
Couldn't wrap asset key with signature %@ with PCS %@
MMCSReferenceObjectCreateWithType failed with error %@
Failed all decryption attempts for encrypted data %@ in context %@ using PCS %@: %@
Unwrapped encrypted data in context %@ using keyID %@ with record PCS %@: %@
Failed to get keyID from encrypted data %@. Soldering on and trying all keyIDs.
Couldn't unwrap encrypted data in context %@ using keyID %@ with record PCS %@. Trying all keyIDs.
Wrapped encrypted data in context %@ with record PCS %@: %@
Warn: Couldn't encrypt data: %@
daemon/fetch-share-metadata
Third party process requested OON share metadata, returning error %@
Warn: Couldn't decrypt the protected full token: %@
Warn: Invalid full token length: %@
Got a full token of %@
Warn: Invalid token header, fullTokenLength:%lu, schemeByte:0x%0x, locatorLength:%lu
Warn: Unknown scheme byte: 0x%0x
Couldn't decode full token header: %@
We have no tokens to fetch short token metadata for. Giving up now
Short token metadata request finished%{public}@%@
Fetching short share token metadata from the server for %ld URLs
Warn: Couldn't get token metadata for URL %@ and token lookup info %@
Error %@ when fetching short token metadata for %@
Skipping share decryption after getting share metadata for shareURL %@
Warn: Couldn't decode the protected full token
Couldn't find current user on share with anonymous to server participants. Swizzling into share not found.
Using the service name %@ from public key version %lu of share metadata because it is manatee and this operation is initiated by another process
Share invitation token URL %@ doesn't match client-provided share URL %@. This will go badly.
Share invitation token and client-provided share URL are a match: %@
Warn: Couldn't ingest manatee sharing invitation data for share %@: %@
Successfully ingested manatee sharing invitation data for share %@
Attempting to prep PCS data for share %@ with container %@
Prepped PCS data for share %@ with container %@%{public}@%@
Warn: Couldn't get a public sharing identity for share %@: %@
Public sharing identity for share %@ is %@
No root record received when fetching share metadata %@
Prepped PCS data for share %@ with container %@%@%@
Suppressing error for OON user share metadata fetch. Error was: %@
Error fetching records: %@
Fetch records operation %{public}@ completed with error: %@ for <%{public}@: %p; %{public}@>
Suppressing error for OON user fetch with operationID %{public}@. Error was: %@
Starting fetch records operation %{public}@ for <%{public}@: %p; %{public}@>
We have no share URLs to fetch. Giving up.
Extracting short token from URL %@
Warn: Couldn't get a short token for the URL %@
Warn: Couldn't decode the short sharing token for the URL %@
Invalid shortSharingTokenData length(%lu) for the URL %@
Received invitation token %{public}@ for CKFetchShareMetadatOperation %{public}@
Found participantID on invitationToken %@
Extracted short token %@ and routing key %{public}@ from URL %@
Starting fetch share metadata operation <%{public}@: %p; %{public}@, %@>
daemon/modify-web-sharing
Record for %{public}@share (%@) was saved%{public}@%@
Oplock failure while trying to %{public}@share record %@. Retrying.
We don't have any records to save, so bailing now.
Saving %ld records: %@
Done saving all records for (un)share operation.%{public}@%@
Record %@ never received a callback when modifying records. Sending that callback now with error %@
Warn: Record %@ didn't have any share protection data on it
Warn: Couldn't deserialize share protection data on record %@: %@.
Data was %@
Received a record ID that we don't know anything about: %@
Couldn't fetch record %@ from the server: %@
Fetched record with ID %@ from the server. Unwrapping sharing identity and %{public}@sharing the record
Error getting share identity from record %@: %@
Fetched record %@ had no PCS data
Warn: Error %{public}@sharing record %@: %@
Warn: Error serializing record PCS data for %{public}@share of record %@: %@
New protection data for record %@ after %{public}@sharing is %@
Successfully %{public}@ sharing info to record %@. Preparing to save the record back to the server
Done fetching all records for web sharing
Record %@ was never fetched from the server. Returning error %@
Starting web share operation <%{public}@: %p; %{public}@, %@>
daemon/modify-record-access
Record for access %{public}@ (%@) was saved%{public}@%@
Oplock failure while trying to %{public}@ access on record %@. Retrying.
Done saving all records for record access operation.%{public}@%@
Record %@ didn't have any access token protection data on it
Warn: Couldn't deserialize access token protection data on record %@: %@.
Data was %@
Fetched record with ID %@ from the server. Unwrapping access token and %{public}@ access to the record
Record %@ had no access token on it. Creating a new one. (%@)
Warn: Error %{public}@ access to record %@: %@
Warn: Error serializing record PCS data for access %{public}@ of record %@: %@
New protection data for record %@ after %{public}@ access is %@
Done fetching all records for web access
Starting web access modification operation <%{public}@: %p; %{public}@, %@>
daemon/discover-user-identities
For lookup info %@, discovered identity %@
Error fetching contacts: %@
Found user identity %@
Unsupported Event Metric Type. Unable to assign report frequency.
Operation Group Not Found, Unable to associate operation %@ with operation group %@.
CKEventMetric %@ didCompleteWithError %@
Failed to create CKEventMetric %@ didCompleteWithError callback.
daemon/upload-mergeable-deltas
Failed to get protobuf size for delta, but moving on: %@
Will add replacement request %@
Starting delta upload request with %tu deltas (%tu bytes) for operation <%{public}@: %p; %{public}@>
Delta upload request completed for operation <%{public}@: %p; %{public}@> request: %@
Successfully uploaded delta: %@
Failed to upload delta, %@, with error: %@
Successfully replaced deltas for request: %@
Failed to replace deltas with error: %@
Missing authPutRequest
Multiple instances of header %{public}@: last one wins
Unable to set header %{public}@ with value %{private}@
Server did not return the required authPutResponse even though an authPutRequest was sent.
Missing authPutRequest.
Server did not return an authPutResponse even though an authPutRequest was sent. While unexpected, this just means the MMCS operation requires a trip to the Content server
Setting the upload token "%@" for recordID:%{public}@, MMCSItem:%@
Missing requestID on %@
Can't find assetBatch for %{public}@ on %@
daemon/verify-share-vetting
OON share reconstruct: selfAdded failed to decrypt: %@
OON share reconstruct: pcs to data conversion failed: %@
OON short token reconstructed: %{public}@
Performing vetting on token: %{public}@, for: %@
Vetting token: %{public}@ validated.
OON keyswap: Not swapping OON keys as %s is missing
Failed to create protection info in OON key-swap for participantID: %@, recordID: %@, error: %@
Invalid data in server protobuf, ignoring record. Offending record: %{public}@
Invalid data in server protobuf, ignoring record. Offending identifier: %{public}@
daemon/download-assets
Not filling in key for constructed asset URL template for asset %@ because it doesn't require a key
Couldn't create asset download URL from template %{public}@
constructedAssetDownloadURL %{public}@
Downloading assets %@, in-memory assets %@, and publish assets %@ for operation %{public}@
Returning asset from cache: %@
No assets to download for %{public}@
Failed to download MMCS item %@ for package %@ and operation %{public}@: %@
Failed to download MMCS item %@ for operation %{public}@: %@
Failed to download %lu MMCS items for operation %{public}@: %@
Expected non-nil fileURL for %@
Updated package item with index:%lu and path:%{public}@
Failed to download MMCS section item %@ for package %@ and operation %{public}@: %@
Downloaded MMCS section item %@ for package %@ and operation %{public}@: %@
Failed to download %lu MMCS section items: %@
Package section item %@ has zero file signature and non-zero size %llu
Downloading MMCS section item %@ at index %lu with MMCS items %@ for package %@ and operation %{public}@
Missing path for package manifest for package %@ and operation %{public}@: %@
Failed to read the manifest file at %@ for package %@ and operation %{public}@: %@
Read the package manifest with %lu items and %lu sections for package %@ at %{public}@
Downloading %lu/%lu package items for package %@ and operation %{public}@: %{public}@
No files or packages to download for %{public}@
maxPackageDownloadsPerBatch:%lu (%lu)
Finished downloading package manifest for package %@
Finished downloading package sections for package %@
Downloading transcoded asset %@
The self is not strong with the transcoding operation for %@
No wire serialization for transcoding record
Couldn't get encrypted master key for transcoding record
No wire serialization when handling intial transcoding response
Error fetching transcoded asset %@: %@
Transferring data from transcoded asset %@ to the response record's asset %@
No transcoded asset after fetching from transcoder
daemon/fetch-user-quota
Fetch user quota operation <%{public}@: %p; %{public}@, %@> is starting
Fetched quota (%llu) with response code %ld
Fetch quota operation <%{public}@: %p; %{public}@> finished with error %@
Warn: Hit an error while decoding fields for a record
Warn: Found an unexpected field tag: %d
Warn: Couldn't place a reader mark
Warn: Couldn't read field
Trying to create a mergeable value field from something that isn't a mergeable: %@
Trying to create a mergeable value field from something that isn't a mergeable record value: %@
Did not expect %@ field to have encrypted flag set
Invalid field value (record identifier) from server: %@
Invalid asset type from server: %@
Invalid package type from server: %@
Invalid streaming asset type from server: %@
Invalid mergeable value type from server: %@
Can't start yet, device is still in buddy
System is unavailable
System is past buddy but not yet unlocked
System is unlocked since boot but buddy is not complete
System is available
Notifying watchers of availability change. Watchers are %@
Registering watcher %@
CKDSystemAvailabilityMonitory/_systemReadyCheckFired
Received buddy notice but still reports buddy incomplete.
CKDPushConnection/didReceivePublicToken
Received public token from connection %@: %{public}@
Push connection for environment "%{public}@" changed status: %{public}@
Did reconnect to push daemon
req: %{public}@, "Couldn't create publicCloudDBURL url"
req: %{public}@, "Couldn't create publicShareServiceURL url"
req: %{public}@, "Couldn't create publicDeviceServiceURL url"
req: %{public}@, "Couldn't create publicCodeServiceURL url"
req: %{public}@, "Couldn't create publicMetricsServiceURL url"
req: %{public}@, "Couldn't parse a container scoped user id from %{public}@"
req: %{public}@, "Container scoped user ID was needed but not returned because we didn't have an iCloud auth token. Handling this as an auth failure."
req: %{public}@, "Couldn't parse an org admin user id from %{public}@"
req: %{public}@, "Org Admin user ID was needed but not returned because we didn't have an iCloud auth token. Handling this as an auth failure."
daemon/modify-record-zones
Synchronizing user key registry for operation %{public}@.
Failed to synchronize user key registry for operation %{public}@ with error %@
Successfully synchronized user key registry for operation %{public}@
Failed to save %lu zones for operation %{public}@ despite synchronizing user key registry. procName=%{public}@, containerID=%{public}@
Failed to save zone %@ to the server %d times. Bailing with error: %@.
Got a response for record zone with ID %@, but we didn't try to put that record zone.
RecordZone %@ was successfully saved to the server
Couldn't decrypt zoneish PCS for zone %@: %@
Warn: Couldn't create a PCS object from zone data for zone %@: %@
Received a failure for save of zone %@ with error code %d. Re-fetching the zone PCS and trying again
Zone PCS for %@ failed server validation. Will synchronize user key registry for operation %{public}@ before trying again.
Possible anonymous share %@ not found. Removing share from anonymous share list
Error %d when saving record zone %@ to the server
RecordZone %@ was successfully deleted from the server
Error %@ when deleting record zone %@ from the server
Skipping save of zones because there is nothing to do
Saving %ld, deleting %ld record zones on the server.
Error modifying record zones: %@
Creating new PCS data for zone %@
Couldn't create a PCS object for the zone %@: %@
Error creating PCS data for zone %@: %@
Couldn't create a zoneish PCS for zone %@: %@
Created zoneish PCS for zone %@ with key %@
Couldn't create data from zoneish PCS for zone %@: %@
Fetched pcs info for zone %@. Continuing with save for that zone.
Warn: Couldn't fetch PCS data for zone %@: %@. Refusing to save zone.
Not saving zone %@ due to a PCS error: %@
Skipping fetch of zones from the server for operation %{public}@ because it has dontFetchFromServer set
Preparing PCS data for %ld zones
Zone %@ already has PCS data.
Waiting to fetch zone PCS data
No zone to save in this operation.
Skipping zone PCS stuff because encryption is disabled
Warn: Couldn't get a shareRecord from %@: %@
Warn: Couldn't get a root record from %@: %@
Found %lu additional share hierarchy records
Parsing share hierarchy record %{public}@
Warn: Couldn't get a shared hierarchy record ID from %@: %@
Parsed share hierarchy record ID %{public}@
Warn: Couldn't get a calling participant from %@: %@
Parsed calling participant: %@
Found current user participant on share %{public}@: %@
Couldn't parse a potentially matching OON participant from %@: %@
Couldn't parse shared zone from resolve token response: %@
Parsed zone %{public}@%{public}@%{public}@from response for share metadata %@
Could not create primary backing account
Created primary backing account with ID "%@"
Created anonymous account
Could not create backing account with ID "%@"
Created backing account with ID "%@"
Could not create backing account with altDSID "%@"
Created backing account with altDSID "%@"
Could not create fake backing account with account override info "%@"
Created fake backing account with account override info "%@" and ID "%@"
Could not create mock backing account with test account "%@", test device "%@"
Created mock backing account with test account "%@", testDevice "%@"
Warn: Couldn't determine server preferred push environment from backing account %@
No backing account, so allowing cellular access from account perspective.
The CloudKit auth token for account %@ has changed since the last one we attempted. Trying again with the new token.
Account is suspended and we did attempt a renewal recently. Rate limiting this renewal request
Can't access the account with ID %@, so failing this auth token renew request
Waiting on a credential renewal for account %@
Credential renewal for account %@ finished %{public}@successfully.%{public}@%@
CKDAccount disappeared during renew.
No backing account, so not returning an auth token.
No access to existing account, so not returning an auth token.
Error getting CloudKit auth token: %@
CKDAccount disappeared during iCloud auth renew.
Error getting iCloud auth token: %@
Could not initialize zlib for compression, error %d
%{public}@, outputStream:%p
Failed to write into the outputStream:%p
Got a stream error: %@
Failed to read bytes itemID:%llu, operationID:%{public}@: %@
%@ failed to open at path %@: %@
Exiting due to disk full error creating shared database for %{public}@ at path %{public}@: %{public}@
Exiting due to error creating shared database for %{public}@ at path %{public}@: %{public}@
%@ instance at %@ became invalid. Error: %@
Failed to open package %@: %@
Zero-length asset with itemID %llu
Added section %@ with %lu items and %lu chunks
Added item %@ to section %lu
Failed to create sections for package %@: %@
Added last section %@ with %lu items and %lu chunks
Created sections for package %@
Failed to getChunkKeys MMCS item %@ for operation %{public}@: %@
Failed to register MMCS item %@ for package %@ and operation %{public}@: %@
Failed to register MMCS item %@ for operation %{public}@: %@
Invalid package manifest size for MMCS item %@, package %@ and operation %{public}@: %@
Ignoring preAuthPutResponse for batch %@ : too big at %lu bytes
Skiped rereference of empty asset
Skiped uploading empty asset file at %{public}@
Skiped uploading empty asset file with filehandle %@
MMCSv2 Not Support For Package Manifests.
Clear Asset Key Not Supported For Package Manifests.
Skipping asset keys on manifest item because encryption is disabled
Creating manifest for package %@ and operation %{public}@
Failed to create the manifest for package %@ and operation %{public}@: %@
Wrote the package manifest for package %@ and operation %{public}@: %{public}@
No assets to upload for operation %{public}@
MMCSv2 Not Support For Package Sections.
Error creating asset key for manifest item %{public}@: %@
Created asset key with reference identifier %@ for MMCS section %@
Clear Asset Key Not Supported For Package Sections.
Skipping asset keys on section item because encryption is disabled
GetChunkKeys for MMCS items for operation %{public}@
Registering MMCS items %@ for operation %{public}@
Failed MMCS item %@, package %@ and operation %{public}@: %@
Failed MMCS item %@ and operation %{public}@: %@
Failed to upload MMCS section item %@ for package %@ and operation %{public}@: %@
Failed to upload %lu MMCS section items for operation %{public}@: %@
Invalid section index %lu/%lu for section %@
Invalid section at index %lu/%lu for section %@: %@
Uploading MMCS section item %@ at index %lu for package %@ and operation %{public}@
Uploading MMCS section items %@ for package %@ and operation %{public}@
Can't find section at index %lu for package %@ and operation %{public}@
Failed to upload MMCS item %@ for package %@ and operation %{public}@: %@
Failed to upload MMCS item %@ for operation %{public}@: %@
Failed to upload %lu MMCS items for operation %{public}@: %@
Clear Asset Key Not Supported For Package Section.
No files or packages to upload for operation %{public}@
maxPackageUploadsPerBatch:%lu (%lu)
Failed to remove package manifest at %{public}@: %@
Removed package manifest at %{public}@
daemon/publish-assets
Getting asset urls for record %@
Error getting asset urls for record %@: %@
Creating asset url for asset %@
Failed to fetch record %@: %@
Fetched record %@
Warn: Record %@ contained no matching asset fields to publish
Fetch records operation <%{public}@: %p; %{public}@> finished with error %@
Fetch records operation <%{public}@: %p; %{public}@> succeeded
daemon/RemoveAnonymousShareFromSharedDB
Completed CKDPAnonymousShareRemoveURLRequest
Error CKDPAnonymousShareRemoveURLRequest: %@
daemon/fetch-mergeable-deltas
Error fetching mergeable deltas in operation %@: %@
Finished fetching mergeable deltas for operation %@
Fetch mergeable deltas operation deallocated while fetching mergeable deltas from the server
Will fetch deltas recursively for values %@ with continuation tokens %@
Got a continuation token fetching deltas for value %@
Stopping after error fetching deltas for operation %{public}@: %@
Need to continue fetching deltas for operation %{public}@
Fetch deltas URL request completed for operation <%{public}@: %p; %{public}@>
Successfully fetched delta for %@
Failed to fetch deltas for %@: %@
Unable to determine record ID for value %@
Failed to fetch PCS for value: %@
Failed to decrypt mergeable delta with error: %@
CKDPCSNotifier/SecurityViewBecameReady
Security view%{public}@%{public}@ became ready. Posting a notification to all clients
If an object is parsed in the woods and no one is there to hear it, was it really parsed? You're leaking objects on the floor. Set up a parser callback block
Error parsing message of class %{public}@ from data %@. Raw data is %{private}@
Warn: Couldn't read length from input stream
Failed to parse object from input stream
Warn: Parser encountered an error: %@
daemon/modify-subscriptions
Got a response for subscription with ID %@, but we didn't try to put that subscription.
Subscription %@ was successfully deleted from the server
Error %@ when deleting subscription %@ from the server
Saving %ld, deleting %ld subscriptions on the server.
daemon/move-photos
Decrypting destination record %@ returned from move
Failed to decrypt destination record %@
Decrypting move marker record %@ returned from move
Failed to decrypt move marker record %@
Got a response for record with ID %@, but we didn't try to move that record.
Record %@ was successfully moved on the server
Error when moving record %@: %@
Record PCS etag failed for record %@
Zone PCS etag failed for record %@
%{public}@ oplock failed for record %@
Record PCS chain was invalid
Handling error for record %@ as an oplock failure
Clearing zone PCS tag for record %@
Decrypting server record returned by oplock failure %@
Failed to decrypt the server record %@. Returning as is.
Successfully decrypted record %@
Starting Move Photos operation <%{public}@: %p; %{public}@, %@>
daemon/vetting-initiate
Preparing encrypted key for vetting: adding ourselves to the public PCS for share %@
Unable to generate encrypted key to initiate share vetting: %@
Preparing public PCS metadata for share at URL %@ using public sharing token %@
Couldn't create a sharing public identity from %@: %@
Couldn't create a public PCS from the PCS data %{public}@ for identity %@
Couldn't add our self identity to the public PCS for share at URL %@: %@
Couldn't serialize share public PCS for share at URL %@: %@
Couldn't get an etag for public PCS data on share %@
Successfully added our public identity to the share's public PCS at %@
Share metadata for the share at URL %@ doesn't have protection data on it, skipping
Sending initiate vetting request, this is a %{public}@ attempt
Received LoginRequired from the server, trying to re-authenticate the user
Received LoginRequired from the server, but this was a second attempt, not trying to re-authenticate the user again
Failed to convert subscription: %@
Generated anonymousShareTupleHash: %@ for anonymousUserID: %@
encryptShareTuple zonePCSData not available yet
_encryptShareTuple zonePCSData is still not available. Terminating without additional retry.
Error generating ckAnonymousShareHashIdentifier for CKDAnonymousShareTuple
Encrypted data with zone PCS %@:
Error encrypting data with zone PCS: %@
decryptShareTuple zonePCSData not available yet
_locked_decryptShareTuple zonePCSData is still not available. Terminating without additional retry.
Decrypted data with zone PCS %@:
Error decrypting data with zone PCS %@:
_locked_decryptShareTuple Unable to decrypt share tuple data.
Fetching %{public}@PCS data for zone %@
Fetched PCS for zone %@:
Warn: Couldn't fetch PCS for zone %@: %@
daemon/repair-zone-pcs
Uploading %ld repaired zones
Reparing %ld zones: %@
Warn: Zone %@ had bad PCS data. Attempting to repair it.
Couldn't repair zone PCS for zone %@: %@
Repaired PCS info for zone %@. Will upload new protection data: %@
Everything looked good with the PCS data on %@
Starting fetch user record operation <%{public}@: %p; %{public}@, %@>
daemon/fetch-share-participants
For fetch info %@, found user identity %@, error %@
Got lookup service for identity fetch operation: %@
Scheduling a request %@ to the lookup service
Performing identities lookup with the lookup service
Logging power event: %@
Can't convert empty server type string to a CKDPServerType
Server type "%{public}@" isn't known
Can't convert empty partition type string to a CKDPPartitionType
Partition type "%{public}@" isn't known
open, trackingUUID:%@ itemID:%llu, handle:%p
close, itemID:%llu, handle:%p
Failed to stat itemID:%llu, handle:%p, operationID:%{public}@: %@
stat, itemID:%llu, handle:%p, fileSize:%llu, fileID:%llu, generationID:%lu, modTime:%llu
Failed to pread for itemID:%llu, handle:%p, operationID:%{public}@, offset:0x%llx, length:%llu: %@
Failed to pwrite for itemID:%llu, handle:%p, operationID:%{public}@, offset:0x%llx, length:%llu: %@
packageGarbageCollection
Purging packages in: %@
Error enumerating %@ for package purges, failed to get the resource value at %@: %@
Adding %@ to package purger
req: %{public}@, "Unregistering token %{private}@ in aps environment %{public}@ for bundleID %{public}@"
req: %{public}@, "Inlining fake response operation result for function %{public}@"
Unable to read subscription object, discarding: %{public}@: %@
User key sync calling out to waiter for service %{public}@ with success:%{public}@%{public}@%@
About to sync user keys for service: %{public}@, account dsid %@
Finished syncing user keys %{public}@successfully for service %{public}@. Error: %@
Setting key sync completion date %f for service %{public}@
Key registry sync for service %{public}@ returned existing identity: %@. Service is manatee: %@
No account DSID, so we can't sync with the user key registry
Compared tracker completion date %f to zonePCS modification date %f. %@ligible for key sync
A key sync for service %{public}@ is already in progress, queueing ourselves behind it
daemon/fetch-subscriptions
Fetch subscriptions operation <%{public}@: %p; %{public}@> hit top-level error %@
Share %@ already has PCS data. Decrypting it.
Successfully decrypted PCS data for share %@: %@
Warn: Couldn't decrypt existing share protection data on share %@: %@
Fetching PCS data for share %@
Public sharing identity on share %@ does not match the public sharing identity from its root record (%@). Failing share save
Setting public sharing identity from root record %@ on share %@: %@
Didn't get a public sharing identity for root record %@
Error fetching PCS data for root record %@: %@
Warn: Couldn't fetch PCS data for share %@: %@. Refusing to save share.
Share %@ has no root record ID, so we'll generate a new PSI for the share
Fetching public sharing identity for root record %@
Using passed in data to create a public sharing identity for %@: %@
Creating a new random sharing identity for share %@
Someone is trying to save a share in the public database. That's not going to go very well.
Public sharing identity on share %@ is different. Expected %{public}@, got %{public}@
Fetched pcs info for share %@
Warn: Can't save share %@ if we have no PCS data for it%{public}@%@
Warn: Private PCS data for share %@ is nil
Warn: Public PCS data for share %@ is nil
Adding invited PCS to zone PCS for zone-wide share %@
Updating signing key on invited pcs for zone-wide share %@
Done updating pcs for share %@%{public}@%@
Operation %{public}@ needs to key roll for zone-wide share %@ due to %lu invited keys to remove and %lu removed participants
Operation %@ did attempt a key roll for zone-wide share %@%{public}@%@
Updating permission for private participant %@ from %{public}@ -> %{public}@ to match the public permission on share %@
Warn: Couldn't serialize private share PCS for share %@: %@
Warn: Couldn't create a PCS etag for share %@: %@
Warn: Couldn't serialize public share PCS for share %@: %@
Warn: Couldn't create a public PCS etag for share %@: %@
Serializing zone PCS for plugin-field update to create zone-wide share %@
Couldn't serialize zone PCS trying to create zone-wide share: %@
Serializing zoneish PCS for plugin-field update to create zone-wide share %@
Couldn't serialize zoneish PCS trying to create zone-wide share: %@
Failed to serialize PCS data for share %@: %@
Successfully serialized PCS data for share %@
Error adding public sharing PCS to private sharing PCS for share %@: %@
Error removing public sharing PCS from private sharing PCS for share %@: %@
Error cleaning up public PCS for share %@: %@
Removing public participant %@ from share %@.
Couldn't get a current public sharing identity for the owner on share %@: %@
Added public sharing identity %{public}@ to our self owner user on share %@
Couldn't get a private PCS for the share %@, so we can't upgrade our owner's PPPCS
Checking participants on share %@
Couldn't create invitedPCS for share %@: %@
Participant %@ wants a new invitation token on share %@
Setting up private participant %@ on share %@
Couldn't configure new participant on share %@: %@
Couldn't remove participant participant PCS for share %@: %@
Modifying per participant PCS permission for participant %@ on share %@
Couldn't update participant PCS for participant's role on share %@: %@
Error removing public key %{public}@ from the invited PCS blob: %@
Found more than one public identity on per-participant PCS %@. Which one will be returned is undefined.
Error deserializing protectionInfoPublicKey %@ on participant %@: %@
Successfully modified per participant PCS permission %@ on invitedPCS for participant %@ on share %@
Cannot add public identity %@ to invitedPCS %@ for per participant PCS permission update
Public identity %@ can be found on participant, but invitedPCS is not shared to it
Couldn't remove participant from share %@: %@
Removing share participant with identity %@ and public key %{public}@, PPPCS public key: %{public}@
No participant PCS found for participant %@. We can't remove them from the share
Couldn't remove per-participant PCS from invited PCS for participant %@: %@
Removed per-participant PCS from invited PCS for participant %@
Couldn't configure PCS data for removed participant %@: %@
Successfully configured PCS data for removed participant %@
Couldn't create a public key for the owner participant on share %@: %@
No private OON key exists for participant %@. We can't add them to the share
No public sharing key exists for participant %@. We can't add them to the share
Couldn't create an identity from the public sharing key for participant %@: %@ (key was %{public}@)
Ensuring %{public}@share participant with identity %@ and public key %{public}@ is in invitedPCS
Created public identity for participant %@: %@
Skipping PPPCS for the owner on share %@ because the unit tests told us to do it.
Couldn't add per-participant PCS to invited PCS for participant %@: %@
Added owner public key to invited PCS for participant %@
Couldn't create a per-participant PCS for participant %@: %@
Created a new per-participant PCS blob for participant %@: %@
Couldn't get the share authorship identity for participant %@
Admin %@ using the owner identity of self PPPCS to setup new participant
Cannot add participant %@ with missing public key to share
Couldn't create manatee sharing invitation data for participant %@: %@
Created a new manatee sharing invitation blob for participant %@: %@
Couldn't add public identity to per-participant PCS for participant %@: %@
Added participant's public identity to their per-participant blob for participant %@
Added per-participant PCS to invited PCS for participant %@
Creating invitation token for participant %@. Invitation data: %@, shareURL %@, participantID: %@
Couldn't serialize per-participant PCS for participant %@: %@
Couldn't set up PCS data for new participant %@: %@
Successfully set up PCS data for new participant %@
Couldn't create an identity from the public sharing key %{public}@: %@
Couldn't remove public key %{public}@ from the invited pcs: %@
Clearing share protection data for share %@
Throwing away cached envelope for %@
Invalid user record response from server: %@
req: %{public}@, "Inlining fake response operation result"
%@ in %{public}@ count %lld
%@ in %{public}@ not in the sharedWrappers map at key %{public}@
%@ in %{public}@ and actually dropping but did not tear down
Warn: Invalid value (%{public}@) for %{public}@ key in error %@
Programmer error starting MMCS request.
Skipping remove dir at %{public}@: %@ %{public}@
Warn: Failed to remove dir at %{public}@: %@
Removed dir at %{public}@
Found a cached MMCS wrapper %@ at path %{public}@ count %lld
Couldn't create a context, %@
setting sharedWrappers map key %{public}@ value %@ count %lld
Exception %{public}@
failed to drop %@ in %{public}@
already dropped %@ in %{public}@
Using MMCS options: %{public}@
%s %lu MMCS items, operationID:%{public}@: %@
itemID:%llu is missing file signature
%s MMCS item group %@ for operationID:%{public}@ with options %@
Missing kMMCSRequestOptionPreauthorization for CKDMMCSOperationTypePutChunkKeys
Getting MMCS item group %@ for operationID:%{public}@ with options %@
Failed getting %lu MMCS items for operationID:%{public}@: %@
Getting MMCS item group set %@ for operationID:%{public}@ with options %@
Putting MMCS item group %@ for operationID:%{public}@ with options %@
Failed putting %lu MMCS items for operationID:%{public}@: %@
Putting MMCS item group set %@ for operationID:%{public}@ with options %@
Error counting registered items %@
MMCS has %llu registered items.
Error enumerating registered items %@
MMCS itemID %llu registered.
Expected registered item IDs to be ordered ascending: Previous itemId %llu is not less than %llu.
_unregisterItemIDs Zero itemID
Unregistering itemID=%llu with MMCS
Failed putting section with %lu MMCS items for operationID:%{public}@: %@
Putting MMCS section item %@ for operationID:%{public}@ with options %@
Failed getting a section with %lu MMCS items for operationID:%{public}@: %@
Getting MMCS section item %@ for operationID:%{public}@ with options %@
MMCS item %llu was expected to be registered in MMCS for operationID:%{public}@ at %@, but there was an error: %@
MMCS item %llu signature mismatch: expect %@, got %@
MMCS item %llu has no file size
MMCS item %llu has invalid file size %{public}@
MMCS item %llu expected to have chunk count %u
MMCS item %llu chunk count mismatch: expected %u, got %u
Registered MMCS itemID=%llu signature=%@ fileSize=%{public}@ chunkCount=%{public}@ was unexpected.
Registered MMCS itemID=%llu signature=%@ was unexpected.
Error when validating asset cache and mmcs chunk store.
Registering %lu MMCS items, operationID:%{public}@: %@
Failed to %{public}s %lu MMCS items for operationID:%{public}@: %@
Failed to %{public}s MMCS items (%lu/%lu) not already registered for operationID:%{public}@: %@
Failed to fetch registered MMCS item %llu for operationID:%{public}@ %@
Failed to register MMCS item %llu for operationID:%{public}@ at %{public}@: %@
Register complete: Pushed sig and size to asset:%@ for item %@
Unable to open reader for %@: %@
Unable to get info for %@: %@
Unable to close for %@: %@
Unable to open for %@: %@
%{public}s MMCS item %llu with size:%llu, paddedSize:%llu, chunkCount:%lu, signature:%@, path:%@
{public}%s MMCS item %llu with size:%llu, paddedSize:%llu, signature:%@, path:%@
%{public}s MMCS item %llu with size:%llu, paddedSize:%llu, chunkCount:%lu, signature:%@
%{public}s MMCS item %llu with size:%llu, paddedSize:%llu, signature:%@
%{public}s MMCS item %llu signature:%@
%{public}s %lu MMCS items for operationID:%{public}@
%{public}s %lu/%lu MMCS items for operationID:%{public}@
Failed to %s for %lu MMCS items for operationID:%{public}@: %@
Failed to %s for all %lu MMCS items for operationID:%{public}@: %@
Failed to %s for MMCS item %ld for operationID:%{public}@ : %@
GetChunkKeys complete: Pushed size to asset:%@ for item %@
%s MMCS item %ld with size:%llu, paddedSize:%llu, signature:%@
%s %lu MMCS items for operationID:%{public}@
Record %@ already has protection info
Fetching protection info for record %@
Beginning signing PCS fetch. Fetching zone PCS and checking if there is a share PCS on it
Fetched zone PCS for zone %@ and it has a share PCS on it. Setting signing PCS for our record to be the share PCS
Record should be of a hierarchical share. Fetching its signing PCS by fetching its record PCS
Could not fetch record PCS for record %@. Record may not exist on server. Done with our attempt with fetch signing PCS
Successfully fetched signing PCS for record %@
Could not fetch the signing PCS for record %@
Setting signing PCS for record %@ to be invited PCS of the share: %@
Setting signing PCS for record %@ to be invited PCS of zone share
Setting signing PCS for record %@ to be that of parent: %@
Couldn't fetch signing PCS to create a signature for record %@
Couldn't get a private identity from the signing PCS %@ for record %@
Creating a new random sharing identity for record %@
Couldn't create a new sharing identity for record %@: %@
Using identity for public PCS on record %@: %@: %@
Couldn't create a public sharing identity for record %@: %@
Warn: Record %@ isn't in the private database, doesn't have a share or parent set and isn't a share
Using prepared share pcs and shared zone pcs data for share %@
Got an error fetching PCS data locally for record %@. Attempting another network-based fetch with options %lx
Didn't get PCS data for record %@: %{public}@. Fetching the zone PCS and creating new PCS data
Got an error fetching PCS data for record %@: %@
Getting ready to fetch PCS Data for record %@
Parent record %@ in the same batch didn't have chain PCS data on it for record %@
Using parent PCS data from our current batch %@
Warn: Failed to fetch share with ID %@. Not adding it to the record PCS: %@
Failed to get share or zone PCS data to roll record PCS for zone-wide share record %@, shared zone PCS: %@, share PCS: %@
Error key-rolling for record %@: %@
Successfully checked key-rolling requirements for record %@. May have rolled keys as well.
Adding share with ID %@ to record %@
Warn: Error adding share PCS %@ to record PCS %@: %@
Removing share with ID %@ from record %@
Warn: Error remvoing share PCS %@ from record PCS %@: %@
Rolling record PCS master key since we removed a share for record %@
Warn: Failed to fetch share with ID %@. Not removing it from the record PCS: %@
Waiting on share fetches so we can update the record PCS
Error fetching share PCS and adding it to the record PCS: %@
All shares have been fetched and the record PCS is updated for %@
Removing previous parent %@ with public key ID %{public}@ from record PCS for %@
Using PCS data for parent from our current batch: %@
Parent exists in the same batch but it doesn't have any chain PCS data, so we can't save %@
Fetching parent PCS data with record ID %@ for record %@
Fetched parent PCS data with record ID %@ for record %@: %@
Couldn't get PCS data for parent %@ of record %@
Error fetching parent PCS and adding it to the record PCS: %@
All parent records have been fetched and the record PCS is updated for %@
Adding parent PCS data %@ to PCS for record %@
Couldn't decrypt the chain PCS blob on parent record %@: %@
Error adding parent PCS %@ to record PCS %@: %@
Successfully added parent PCS data from record %@ to record %@. Public key ID is %{public}@
Warn: Couldn't fetch PCS for share %@: %@
All PCS data fetched. Creating PCS for record %@
Warn: Couldn't get PCS data for zone %@%{public}@%{public}@. Error was %@
Creating new PCS object for record %@
Using zoneish PCS with key %{public}@ for record %@
Couldn't create a new record PCS for %@: %@
Warn: Couldn't deserialize record PCS provided by the client: %@
Successfully deserialized client PCS data for record %@
Warn: Couldn't fetch PCS for parent %@: %@
PCS identifiers for record %@ match (%{public}@), so we'll use %{public}@ as our previous protection etag
Attempted PCS data (%{public}@) had a different identifier than the server PCS data (%{public}@) for record %@. Using the server's PCS data
We couldn't deserialize the client-provided PCS and PCS data for record %@ wasn't fetched from the server because the record doesn't exist on the server. Creating new record PCS
PCS data for record %@ wasn't fetched from the server. Using the client-provided PCS data
Couldn't fetch PCS data to verify client provided protection data for record %@: %@
Got PCS data for record=%{public}@, protectionInfoTag=%{public}@
Record %@ is a parent in this save group but it has no chain PCS data yet. Creating chain PCS data
Warn: Couldn't create protection data from chain PCS for record %@: %@
Warn: Couldn't create private chaining key from chain PCS for record %@: %@
Couldn't create a chaining PCS for %@: %@
Found %lu tombstoned key(s) on record %@
Rolling record PCS master key since we cleaned up tombstoned key(s) on record %@
Using publicSharingIdentity from share %@ for record %@
Failed to prepare public sharing key for record %@: %@
Should set signing PCS for record %@
Couldn't create PCS data for record %@: %@
Warn: Couldn't get PCS data for record %@: %@
Uploading asset %@ for key "%{public}@" on record %@ and operation %{public}@
Skipping asset %@ for key "%{public}@" on record %@ and operation %{public}@
Failing save of record %@ due to error preparing asset for upload for key "%{public}@": %@
Couldn't unwrap asset key for the package manifest asset %@: %@
Couldn't unwrap asset key for asset %@: %@. Wrapping a new asset key and re-saving the asset.
Unexpected MMCSEncryptionSupportValue of 0x%x
Couldn't create an asset key: %@
Skipping unwrapping of asset key for %@ because encryption is disabled
Generating new reference signature for streaming asset %@
Generating new file signature for streaming asset %@
Record %@ has encrypted data. Wrapping that data now...
Creating bad encrypted data for the field %{public}@. Let's hope you know what you're doing!
Warn: Can't wrap a nil encrypted data for field %{public}@
Warn: Couldn't wrap encrypte data for field %{public}@: %@
Failed to encrypt mergeable delta %@, with error: %@
Skipping wrapping of encrypted data because encryption is disabled
Warn: Couldn't get a record PCS for record %@, but it has encrypted data set on it
Clearing protection data for record %@
Account with ID %@ changed with type: %@
Waiting for all account notification handlers to run
Account notification handlers are complete
Notifying clients of updated account info
Supressing account change notification while warming up
daemon/fetch-notification-changes
notification parsed without a notification ID: %@
Failed to create trust from certificates with status code: %i
Failed to evaluate trust policy with error: %@
Successfully evaluated trust policy %{public}@
tokenRegistration
Refreshing token %{public}@ for container %@ using unit test account ID %@
Refreshing token %@ for container %@
Failed to refresh token with server: %@
Removing token %@ for container %@ push bundle identifier %{public}@
Refreshing all client push tokens. Known app containers are %@
Checking push token for container tuple %@, accountID %@
Unregistering push token for %@ because it is no longer installed
NOT registering token for container tuple %@
Tossing push token for container tuple %@
Requesting token for container tuple %@, push bundle identifier %{public}@
NOT requesting token for container tuple %@
tokenRegistrationScheduler/handlePushTokenDidUpdate
Handling token %@ for container tuple %@, push bundle identifier %{public}@
Warn: Failed to register push token for %@: %@
Successfully registered push token for %@
Failed to unregister with PDS, but continuing with CKDeviceService unregistration for %@: %@
No registered token found for appContainerAccountTuple %@. Skipping token unregister.
Failed to unregister with PDS, but continuing with CKDeviceService unregistration for %@
Unregistering token for %@
Refreshing all push tokens
tokenRegistrationScheduler/handlePublicPushTokenDidUpdate
req: %{public}@, "Sending token registration for %{public}@ with token %{private}@ in aps environment %{public}@ with bundleID %{public}@"
daemon/reset-user-privacy-settings
daemon/update-missing-assets
Completed updating missing asset status
Error updating missing asset status: %@
Got a logical device scoped client proxy for %@: %@
Ignoring superfluous logical device scoped client proxy for %@: %@
Ignoring failed attempt to get logical device scoped client proxy for %@: %@
Resetting throttles in %@
daemon/fetch-public-key
Starting  <%{public}@: %p; %{public}@, %@>
Determining transcode server public key URL for hostname: %{public}@
Overriding transcode server public key URL to %@
Transcode server public key hosted at %{public}@
Error getting transcode server public key URL: %@
Checking for cached transcode server public key for public key URL %{public}@
Couldn't find cached transcode public key
Found a cached transcode key, but it has expired on %{public}@. Clearing cached value and continuing with server fetch.
Found a transcode public key %@
Fetching transcode server public key from URL %{public}@
Fetched transcode server public key %@ with error %@
Unknown protocol name %{public}@ in operation info, ignoring
Unknown selector name %{public}@ not found on protocol %@, ignoring
Unexpected live argument types "%{public}@" vs. archived argument types "%{public}@" on -[%{public}@ %{public}@], ignoring
Unexpected exception unarchiving callback, ignoring. %{public}@
volumeIndexForVolumeUUID failed: %@
volumeIndexForVolumeUUID is returning nil for volumeUUID=%{public}@
volumeUUIDWithVolumeIndex is returning nil for volumeIndex=%{public}@
Volume %@ is not mounted. Deleting all asset handles for this volume
Invalid device volume %@
open failed: %@
fcntl(F_GETPATH) failed: %@
%{public}@, path:%{public}@
fstatfs failed: %@
getattrlist failed: %@
paths don't match: %{public}@ != %{public}@ 
Failed to create dir at %{public}@: %@
%@ in %{public}@
%@ in %{public}@ and actually dropped
%@ in %{public}@ removing from sharedCache map
%@ in %{public}@ not in the sharedCache map
After clearing asset cache, still had %ld items remaining at %{public}@
----
Chunk Registry Report for %{public}@
itemID, file signature, status
%{public}@, %{public}@, %{public}@
%{public}@ not found
%{public}@ db error: %{public}@
End Chunk Registry Report for %{public}@
----
Report for %{public}@
----
itemID, file signature, status, fileStatus, lastAccess(hrs), lastAssetDbAccess(hrs), expectedSize, actualSize
%{public}@, %{public}@, %{public}@, %{public}@, %{public}@, %{public}@
End Report for %{public}@
----
%{public}@ bytes:%llu assetHandle:%@
total bytes:%llu
Can't create temp file for data(length:%lu) at %{public}@: %@
Zero-length asset with itemID %{public}@
Warn: itemID:%{public}@ error during register %@
Warn: itemID:%{public}@ modified during register %{public}@
Warn: stale chunk registry state for itemID:%{public}@  %{public}@
Warn: itemID:%llu missing asset handle
Unable to find volumeIndex for deviceID %{public}@: Deleting asset handle for %@
Unregistering %@
itemID:%llu, missing chunk count
Cache directory was unexpectedly removed. cloudd exiting to recover.
Failed moving asset from %{public}@ to %{public}@ for itemID %llu and UUID %{public}@: %@
Moved asset from %{public}@ to %{public}@ for itemID %llu and UUID %{public}@
Asset handles span multiple volumnes
Reusing assetHandle %@
Cleaning up old assetHandle %@ because it did not match %@: %{public}@
Failed to start tracking asset handles %@: %@
Started tracking register/put asset handles %@
Look at assetHandle %@
Started tracking get asset handles %@
Stopping tracking asset handles for itemIDs %{public}@
Failed to stop tracking asset files with itemID %{public}@: %{public}@
Found asset handle with itemID:%llu %@
Unable to find asset handle with itemID:%llu
Asset handle with itemID:%llu is deferred to be deleted.
Attempt to find asset by path that is not parsable %{public}@
Attempt to find asset by path that is not in the asset cache fileDownloadPath %{public}@ vs. %{public}@
Not scheduling redundant downloads eviction for %{public}@
Scheduling downloads eviction for %{public}@
Scheduled downloads eviction cancelled for %{public}@
Completed unregister for evicted downloads for %{public}@
%@ %@
%s %llu files (%llu bytes) at %{public}@
%{public}@ %@
Ignoring file in cache %{public}@
%s %llu files (%llu bytes) at %{public}@ (forced:%{public}@, gracePeriod:%lu, gracePeriodOnHighWatermark:%lu)
%s file %@ (size:%llu) with no associated asset handle
%s file %@ for asset with itemID %llu and UUID %{public}@ (size:%llu)
Failed removing cached asset file at %{public}@: %@
%s %llu/%llu files (%llu/%llu bytes) at %{public}@
Removing registered asset handle for %@
Attempting to evict asset handle in wrong state %@
Expired %lu asset handles for %{public}@ with lastUsedTime before "%@"
In-flight asset handles marked as interrupted during un/registering:%llu upload:%llu download:%llu item unregistred:%llu
set already contained object %@
Warn: No completion block was set for the fetch of record %@
daemon/record-fetch-aggregator
Performing callback for fetch info %@
Done flushing record callbacks for <%{public}@: %p; %{public}@>. Current highest callback is %lu
Sending fetch requests for <%{public}@: %p; %{public}@>
Fetching the following record IDs from the server for operation <%{public}@: %p; %{public}@>: %@
Running the following full records through a fetch records operation for <%{public}@: %p; %{public}@>: %@
Record fetcher <%{public}@: %p; %{public}@> fetched a record with ID %@.%{public}@%@
Fetch records operation %p completed for <%{public}@: %p; %{public}@>
Starting fetch records operation %p for <%{public}@: %p; %{public}@>
Parent asked record fetch aggregator operation <%{public}@: %p; %{public}@> to finish before it started
Starting record fetch aggregator operation <%{public}@: %p; %{public}@>
Enqueuing a record fetch for record %@
Found record %@ in the cache, but it needs decryption.  Going through the fetch flow.
Found record %@ in the cache. Returning that record
Fetch aggregator %p in %{public}@
Finishing fetch aggregator <%{public}@: %p; %{public}@>
Fetch aggregator <%{public}@: %p; %{public}@> finished
Connection %{public}@ invalidated due to inactivity
Connection %{public}@ invalidation skipped due to keepAlive=%lu
Connection timeout overridden to %llu
Connection %{public}@ keep alive counter initialized to %lu
Connection %{public}@ keep alive counter incremented to %lu
Connection %{public}@ keep alive counter decremented to %lu
Unbalanced -allowToClose ignored. Connection=%{public}@
Client Proxy "%@" is not entitled to use fake entitlements.
Connection %@ has invalid client entitlements.
Connection %@ is not allowed to use the system cloudd.
The application on the other end of %@ is trying to use a custom account but it doesn't have the right entitlement. Denying connection.
Giving %@ access to container because it's a data repair proxy
Connection "%@" specified bundle identifier override '%{public}@', but it has no prefix entitlement
Allowing %@ to override bundle identifier '%{public}@' due to matching prefix
Connection "%@" specified bundle identifier override '%{public}@', but it didn't match the prefix
Connection %@ is not entitled to use CloudKit
Connection from %{public}@ not active. Device is not past buddy and it lacks the entitlement to bypass.
Connection from %{public}@ not active yet because device hasn't been unlocked since boot.
Connection from client %{public}@ is now active
Couldn't get connection to client
daemon/fetch-web-auth-token
Fetch web auth token operation <%{public}@: %p; %{public}@, %@> is starting
Fetched web auth token (%@) with response code %ld
Fetch web auth token operation <%{public}@: %p; %{public}@> finished with error %@
Creating MMCS engine at %{public}@
Error creating MMCS directory at %{public}@: %@
Failed creating MMCS engine at %{public}@
Destroying MMCS engine %@
Found a cached engine context %@
Removing context %@ for path %{public}@ from sharedContextsByPath
context %@ not in sharedContextsByPath %@ for key %{public}@
Cancelling requests for MMCS engine wrapper %@ and context %@
Did cancel for MMCS engine wrapper %@ to cancel the requests for %@
Waiting for MMCS engine wrapper %@ to cancel the requests for %@
Attempted to stop tracking untracked itemID %llu
Created a readerWriter for itemID:%llu error: %@
Failed to get the item readerWriter for itemID:%llu error: %@
CKDMMCSItemGroupContext
ignoring item with zero itemID in _stopTrackingMMCSItems %@
setting up a package section? %@
Zero-length asset with itemID %@
Invalid mmcs operation type %ld
The group is already complete: %@
Completed MMCS item group %@ with error: %@
Completed MMCS item group %@
Error: %@
Can't find MMCS item for itemID %llu
Chunk count %{public}@ and file size %{public}@ inconsistent
Progress of MMCS item %llu: s:%d p:%0.4f error:%@
Progress of MMCS item %llu: s:%d p:%0.4f
Progress of MMCS package section %{public}@: s:%d p:%0.2f error:%@
Progress of MMCS package section %{public}@: s:%d p:%0.2f
Finished getting MMCS item %@
Error completing MMCS item %@ : %@
Error putting MMCS item %@
Finished putting MMCS item %@ and asset %@
Finished putting MMCS item %@
Unregistering item without an asset handle for itemID=%llu
Cannot find deviceID for asset handle. Deferring deletion of %@
Failed to open %@ for operationID:%{public}@: %@
Scheduling delete for the asset handle with itemID:%llu, UUID:%{public}@
invalidate, reader:%p
daemon/serialize-record-modifications
Packaging SaveRecord (%lu records)
Internal error transforming record %@
Error translating CKMergerableDeltas during serialization: %@
Found and packaged AssociatedMergeableDeltas (%lu deltas)
Packaging DeleteRecordID (%lu recordIDs)
Total serialization of %lu bytes
Error converting CKDApplicationID to JSON: %@
Error converting JSON data to CKDApplicationID: %@
daemon/batch-get-user-privacy-settings
====
=====
======
=======
HEY DUMMY LOOK AT THIS LOG MESSAGE
You need to sign in to the account "%@" in settings, probably to accept some dumb T&Cs. Error: %@
=======
======
=====
====
Fetching account info for fake account with email %@
Initialized fake account with email %@ and dsid %@
Initialized fake AppleAccount for email %@ / dsid %@ lacked a cloudKit auth token
Error initializing fake account with email %@: %@
Unexpectedly found nil for SEL %@ in protocol named %@
daemon/ckcode-function-invoke
Coalescing identical request record: %@
Trying to save two RecordTransports for the same record: recordA=%@ recordB=%@
Not preparing for PCC because we have a base URL
Skipping PCC attestation because we were asked to
About to fetch public key for trusted target encryption
Failed to fetch public key from trusted target: %@
Adopter set shouldSendRecordPCSKeys. Checking if we should actually do that.
Will check server configuration to see if we should send the record keys
Error fetching configuration to check if we should send record keys: %@
Always sending record keys for internal installs
Overriding allowSendingRecordPCSKeys = %d
Setting shouldSendRecordPCSKeys = %d
About to fetch PCS data for secure compute operation
We lost ourself trying to fetch PCS to get record keys for secure compute
Error fetching PCS data in secure compute operation for %@: %@
No error, but also no PCS data during secure compute operation for record %@
Setting master key on secure compute operation for %@
Couldn't get master key in secure compute operation for %@
Error %@ when invoking function
Error %@
Function invocation completed
CKCode Function invocation finished%{public}@%@
Invoking CKCode function
CKCode Local Function invocation finished%{public}@%@
Starting CKCode function invoke operation <%{public}@: %p; %{public}@, %@>
Couldn't generate URL from entitlement string %{public}@
Un-entitled client is not allowed to set explicit code operation url of %{public}@
Couldn't read the package manifest at %{public}@
Found empty package %@
Read section with index %ld, size %lld, signature %@
Read %ld sections from manifest for package %@
Read item with index %ld, section index %ld, section offset %llu, size %lld, signature %@
Read %ld items (%llu bytes) from manifest for package %@
Wrote package section with size:%lld, signature:%@
Wrote %ld sections to manifest for package %@
Wrote package item with size:%lld, signature:%@
Wrote %ld items (%llu bytes) to manifest for package %@
Placeholder op %{public}@ starting
Placeholder op %{public}@ was cancelled - finishing the real operation
Placeholder op %{public}@ finished
System is unavailable. Scheduling operation %{public}@ on suspended operation queue %@
Adding operation %{public}@ to target queue (%lu/%ld in queue)
Placeholder op %{public}@ canceling
daemon/fetch-record-zone-pcs-diagnostics
Fetched record zone %@ (id %@) with response code %ld
Fetch record zone PCS diagnostics operation <%{public}@: %p; %{public}@, %@> is starting
Fetch record zone PCS diagnostics operation <%{public}@: %p; %{public}@> finished with error %@
Switch environment changed to '%{public}@'
Switch preferences changed. Reloading our configuration
Fetching Global Configuration for operation %p
Waiting on global configuration operation %p for operation %p
Waited on outstanding global configuration operation %p for operation %p
Got an error from CKDContainerSpecificInfoOperation: %@
Set in-memory container specific info from op result: %@
Forcing a fetch of the global config
Fetched global configuration from metadata cache: %@
Finished fetching global config on behalf of operation %p
Set container info from cached metadata: %@
No in-memory containerSpecificInfo, going to the server
Fetching container info for container %@ gave success %d error %@
Warn: Dropping all config bags and forcing a re-fetch of our config.
Could not get app site association data for hostname %@
Registering valid app site association data with LS: %@
Registration for app site association data completed with success: %@%@%@
Found ineligible or unchanged app site association data, not registering with LS: %@
Expiring configuration for %@
daemon/aggregate-zone-pcs
Fetching PCS data for %ld zones
Fetched pcs info for zone %@
Warn: Couldn't fetch PCS data for zone %@: %@
Warn: Error preparing target zone PCS: %@
Target zone %@ was successfully saved to the server
Received a PCS oplock failure for save of zone %@. Re-fetching the zone PCS and trying again
Failed to save target zone for operation %{public}@ despite synchronizing user key registry. procName=%{public}@, containerID=%{public}@
req: %{public}@, "Inlining fake response operation result for item id %@"
req: %{public}@, "Received no public key when discovering user identity, though it was requested, this is an OON case"
req: %{public}@, "OON user identity detected: %@"
req: %{public}@, "Node level failure for info %@: %@"
req: %{public}@, "Fetched configuration plist from server: %{public}@"
An existing invalidated proxy operation was found for operation %{public}@: %@. Unregistering that operation and setting %@ as the new delegate
Couldn't find metadata for operation %{public}@
Not returning operation %{public}@ as resumable since it has a delegate
Operation info entry is corrupted: %@
Unexpected operation info result: %@
Removing all cached long-lived operation info for account ID %@
Couldn't find an operation with ID %{public}@ to set the result
Registering retry number %d for operation %{public}@
Not registering a retry for operation %{public}@ since we have an interested delegate
Couldn't find an operation with ID %{public}@ to register a retry
operationInfoCacheEviction
daemon/global-configuration
Error fetching configuration from the server: %@
Fetched configuration from the server: %@
Stalling Global Config Operation, you asked for it
Error fetching archived records in zone %{public}@: %{public}@
Record PCS fetch operation %{public}@ received PCS data (%{public}@/%{public}@)%{public}@%@
Record PCS fetch operation %{public}@ already has PCS data %@. Ignoring the fetch callback with %@/%@
Fetching PCS data for record %@ from the database
PCS data was found in the database, but it didn't have the requested chain PCS. Fetching PCS data from the server for record %@.
PCS data was fetched from the database for record %@
No PCS data was found in the database for record %@
Error fetching PCS data from the server: %@
PCS data from server for %@ has no PCS chaining blob. Creating it and saving the record to the server
Got an error trying to save parent chain PCS data: %@
Successfully saved chain PCS data on record %@
Warn: We don't have a zone ID in our PCS data for record %@. Using the record's zone ID instead
Fetching PCS for zone %@ in order to decrypt record %@
Fetching parent PCS from record %@ for child record %@
Assuming %@ is a share since we have no share or parent ID set
Fetching PCS for share %@ in order to decrypt record %@
Record %@ is in shared zone %@. Using zone PCS data to decrypt it.
All PCS fetches for shared record %@ have finished.
Record has a zoneish public key set, but we didn't fetch a zoneish PCS on this zone. We'll try decrypting the record PCS anyway, but this might fail.
Attempting a decrypt of record %@ via its parent PCS (record %@)
Attempting a decrypt of record %@ via its share PCS (record %@)
Attempting a decrypt of record %@ via its shared zone PCS (zone %@)
Error decrypting chain PCS on record %@: %@
Successfully decrypted chain PCS data on record %@
Didn't get any chain PCS data on record %@, but the client requested it. This might be ok since the client might want to create it
Error decrypting public sharing key on record %@: %@
Successfully decrypted public sharing key on record %@
Bundle ID %@ doesn't belong to an extension: %@
%@, cachesPath:%@
Identified anonymous zone through CKDPZoneRetrieveChangesResponseChangedZone with anonymousZoneInfoID: %@.
Calling back to the anonymousShareProcessingBlock with %lu anonymous zone data objects.
Starting lookup for request %@
req: %{public}@, "Couldn't parse object %@"
Not caching user identity without a public sharing key: %@
Caching PILS entry for "%@" in %@
Returning a fake empty response for participant "%@". You asked for it!
Found lookup info key %@ in cache, injected it into cached identity %@. Public key is %{public}@/%lu
Found no PILS cache entry for "%@" in %@
Executing chained batched requests, triggering %@
Fetching public identities failed: %@
Fetching public identities completed
Starting execution of batched requests, triggering %@
Creating request to fetch public identity for %lu infos (batch size is %lu)
Forcing OON private key generation due to unit test
Got OON user identity %@
Generated private key for OON user identity: %@
Error while generating private key for OON user identity: %@
Saving user identity %@ with publicSharingKey %{public}@
Failed to perform a user identity lookup for lookup info %@: %@
Error while creating identity: %@
Created OON PCS identity %@
Error while extracting private key from identity: %@
Completed request: %@
daemon/break-assets
Retrying markAssetsBroken on <%{public}@: %p; %{public}@> after error %@
Simulate asset corruption operation <%{public}@: %p; %{public}@> could not fetch record with error %@
Simulate asset corruption operation <%{public}@: %p; %{public}@> completed fetch record with error %@
Simulate asset corruption operation <%{public}@: %p; %{public}@> completed fetch record
Simulate asset corruption operation <%{public}@: %p; %{public}@> could not fetch repair zone with error %@
Simulate asset corruption operation <%{public}@: %p; %{public}@> completed repair zone fetch with error %@
Simulate asset corruption operation <%{public}@: %p; %{public}@> completed repair zone fetch
Simulate asset corruption operation <%{public}@: %p; %{public}@> could not save repair zone with error %@
Simulate asset corruption operation <%{public}@: %p; %{public}@> completed repair zone touch with error %@
Simulate asset corruption operation <%{public}@: %p; %{public}@> completed repair zone touch
Simulate asset corruption operation <%{public}@: %p; %{public}@> could not upload corrupted asset with error %@
Simulate asset corruption operation <%{public}@: %p; %{public}@> completed uploading corrupted asset with error %@
Simulate asset corruption operation <%{public}@: %p; %{public}@> completed corrupted asset upload
Could not find asset or package in field %{public}@ and index %ld of record %@
Marked asset broken with response code %ld
Error breaking asset: %@
Completed marking asset broken
daemon/break-assets-url-request-wrapper
Couldn't generate a request signature with signing identity %{public}@ because we got an error from PCS: %@
Failed to convert share: %@
Fetched record %{public}@ (record: %{public}@). %{public}@%@
Fetching changes from the server for %lu zones with options:
Batch Record Fetch request <%{public}@: %p; %{public}@> for operation %{public}@ finished with error %@
We're not done here. Sending another fetch changes request for %lu zones with options:
Batched Record fetches finished%{public}@%@
daemon/fetch-record-changes
Warn: Zone %@ wasn't found on the server for fetch changes request %{public}@. Wiping caches for that zone
Fetching changes from the server for %lu zone%{public}@ with options:
Ignoring initial metasync token in shared db from adopter using anonymous-to-server share participants for operation %@
Not returning metasync token in shared db to adopter using anonymous-to-server share participants for operation %@
daemon/fetch-changed-record-zones
Fetching database changes from the server with change token %{public}@
Fetch database changes request <%{public}@: %p; %{public}@> for operation %{public}@ finished with error %@
We're not done here. Sending another fetch request with change token %{public}@
We're not done here. Sending another fetch request with change token %@
Handling encrypted anonymous share processing for: %lu number of anonymous zone data objects
Override FailAnonymousShareDecryption: Finishing daemon operation %{public}@ due to client-returned error %@
Handling encrypted anonymous share processing for: %@
daemon/fetch-records
Invalid desired key %{public}@, which should have been caught earlier
Ignoring key-rolling error for record %@: %@
Fetch records url request completed. Waiting for all record callbacks to finish before completing request <%{public}@: %p; %{public}@>
All record callbacks are complete. Finishing request %{public}@
Fetched records for <%{public}@: %p; %{public}@>
Failed to fetch records for <%{public}@: %p; %{public}@>: %@
All record callbacks are complete. Finishing fetch operation
All record callbacks are complete. Finishing decrypt operation if any.
Could not find original list key %{public}@ for desired indexed list key %{public}@
Original list key %{public}@ has incorrect value type %{public}@ for desired indexed list key %{public}@
Couldn't decrypt record %@: %@
Failed to decrypt a record from our cache. Refetching record %@ from the server and trying again
Failed to fetch PCS to decrypt mergeable value delta record %@: %@
Fetched record %{public}@, etag-matched:%{public}@, responseCode:%d
Record not found in private DB. Setting PCS data nil on caches
Remote record matches local record etag. Returning record %{public}@ from cache.
Calling completion block for nil or failed record with ID %@: %@
Prepping PCS data for share %@ with container %@
Didn't get a sharing identity from the public PCS for share %@
Using cached asset for signature %@, record %@, recordKey %{public}@ and operation %{public}@
Prepared asset %@ for record %@, recordKey %{public}@ and operation %{public}@
Using cached package %@ for record %@, recordKey %{public}@ and operation %{public}@
Prepared package %@ for record %@, recordKey %{public}@ and operation %{public}@
Preparing assets for download for record %@ and operation %{public}@ (shouldFetchAssetContent:%{public}@ inMemory:%{public}@)
Forcing asset fetch due to presence of asset-backed mergeable deltas
Forcing asset download for asset-backed mergeable field %{public}@ on record %@
Skipping asset download for key %{public}@ on record %@
Will fetch asset content in memory for key %{public}@ on record %@
Adding mergeable value download tasks for record %@ in operation %{public}@
Will download mergeable value for mergeable %@ for key '%@' on record %@ in operation %{public}@
Failed to download assets for operation %{public}@: %@
Downloaded assets for operation %{public}@
No cloud certs to download for operation %{public}@
No assets to download for operation %{public}@
Downloading assets: %@, in-memory assets: %@, and publish assets %@ for operation %{public}@
Failed to download asset %@ for record %@ and operation %{public}@: %@
Downloaded asset %@ for record %@ and operation %{public}@
Failed to fill out download URL info %@ for record %@ and operation %{public}@: %@
Filled out URL info %@ for record %@ and operation %{public}@
No mergeable values to download for operation %{public}@
Will download mergeable values for operation %{public}@
Error fetching mergeable delta %@: %@
No mergeable value task for fetched deltas for %@: %@
Fetched deltas for mergeable %@: %@
Finished mergeable delta fetch operation for %{public}@
No mergeable value delta on download task for %@ in operation %{public}@
Starting fetch records operation <%{public}@: %p; %{public}@, %@>
Operation %{public}@ is finishing early because there are no records to fetch
Fetch user record url request completed. Waiting for all record callbacks to finish before completing request <%{public}@: %p; %{public}@>
Operation %{public}@ has a decrypted PCS blob for %{public}@ %@.
Not fetching PCS data for %{public}@ %@ from the network because a local only fetch was requested
Failed to fetch PCS data from the server for %{public}@ %@: %@
%{public}@ PCS fetch operation %{public}@ has failed too many times. Giving up with error %@
Retrying PCS fetch operation %{public}@ after failure %d with error %@, dependent PCS fetch error %@
daemon/archive-records
Record with ID %@ was successfully archived
Error archiving record with ID %@: %{public}@
Starting archive records operation %{public}@ for record IDs %@
Archive records request %{public}@ is complete
daemon/mark-notifications-read
Notification with id %@ was marked read
Error %@ when marking notification with id %@ as read
daemon/fetch-share-participant-key
Returning participant key for share %@
Returning error for share %@: %@
Couldn't get a short token for share %@
Verifying decryption of the invited PCS using the exported per-participant PCS key
Couldn't create a participant identity from the exported per participant key
Successfully decrypted the share invited PCS: %@
Using base token "%{public}@" on share %@
Share %@ needs to be updated on the server so that it gets a PPPCS for the owner
No shares to fetch from the server. Returning early
Fetching %lu shares from the server for operation %{public}@
Fetch share participant key operation %{public}@ finished%{public}@%@
Error updating share %@ on the server: %@
All shares have been updated on the server
SecItemCopyMatching() failed: %ld
SecItemAdd()/SecItemUpdate() failed: %ld
SecItemDelete() for device identifier failed: %ld
Fetched deviceID from keychain
daemon/modify-records
Records needed PCS info re-fetched: %@
Fetching user public keys for operation %{public}@
Error fetching current service public keys for user: %@
Fetched %lu user public key%{public}@ for operation %{public}@
Fetching container scoped user identifier for operation %{public}@
Error fetching container scoped user identifier for operation %{public}@: %@
Fetched container scoped user identifier for operation %{public}@: %@
Skipping topo sort of all zones for container %{public}@
Fetching participants for shares: %@
Warn: Got a fetched share callback without a recordID: %@
Skipping fetch of share PCS data for %@ because encryption is disabled
Skipping fetch of record PCS data for %@ because encryption is disabled
re-referenced asset signature not found in source asset array
Error preparing assets for handler %@: %@
Fetching user boundary key for operation %{public}@
Error fetching user boundary key for operation %{public}@: %@
Fetched user boundary key for operation %{public}@: %@
Uploading assets for operation %{public}@: %@
Setting boundary key %{public}@ for operation %{public}@ on (at most) %lu assets to upload.
Failed to upload asset %@ for record %@ and operation %{public}@: %@
Failed to upload assets for operation %{public}@: %@
Of %lu potential v2 assets, set boundary keys on %d of them
Skipping saving records for operation %{public}@ after uploading assets: %@
Will skip zone %@ because handler isn't ready:
Skipping zone %@ because some items in that zone aren't ready to be uploaded yet
Record does have signing PCS %@ but failed to get private key
Failed to decrypt record with ID %@: %@.
Failed to decrypt record with ID %@: %@
Marking record %@ for another retry after fetching PCS data
Failing save of record %@ because we couldn't decrypt it
Verifying encrypted data on record %@ before uploading it
Sending %ld records to the record decrypt operation before uploading them to the server
Successfully decrypted record %@. Continuing with save of that record
Decrypting server record %@ returned from save
Failed to decrypt server record %@. Returning as is.
Successfully decrypted server record from save %@
Got a response for record with ID %@, but we didn't try to put that record.
Record %@ was successfully saved to the server
Error when saving record %@ to the server: %@
Record %@ was successfully deleted from the server
Possible anonymous share deleted. Removing share from anonymous share list: %@
Error %@ when deleting record %@ from the server
No record on modify handler for mergeable delta save for key %@ on record %@
No value on record after successful mergeable delta save
Value in record for key '%@' is not a mergeable record value: %@
Finished saving mergeable delta for key %@ on record %@
Error syncing mergeable delta for key %@ on record %@: %@
Not overwriting existing error for modify records handler
No record on modify handler for mergeable delta replacement for key %@ on record %@
Modify operation %{public}@ successfully replaced deltas for request: %@
Modify operation %{public}@ failed to replace deltas with error: %@
Skipping record save for purely mergeable record without any deltas to save: %@
Skipping record upload for purely mergeable record: %@
Record %@ isn't ready, so we're going to skip the record upload phase.
Saving %d records to the server with change token %@
Deleting %d records from the server.
No records to save or delete. Skipping sending a request to the server.
Some records failed to prepare for this save. Skipping save to the server and retrying if possible
Not sending a modify request to the server
Not uploading mergeable deltas separately
No mergeable deltas or replacements for operation %{public}@
Uploading mergeable deltas for operation %{public}@: %@
No modify handler for delta: %@
Failed to upload delta, %@, for operation %{public}@: %@
No modify handler for replacement request: %@
Failed to replace deltas %@ for operation %{public}@: %@
Successfully replaced deltas: %@
Failed to upload delta for operation %{public}@: %@
Ensuring all handlers have completed for operation %{public}@
Operation %{public}@ tried to finish without an error but it has outstanding handlers
Pretending this is an invalid sandbox path: %{public}@
Share PCS fetch operation %{public}@ received PCS data (%{public}@)%{public}@%@
Share PCS fetch operation %{public}@ already has PCS data %@. Ignoring the fetch callback with %@/%@
Fetching PCS data for share %@ from the database
PCS data was fetched from the database for share %@
Couldn't decrypt PCS data for share %@ from the database with error %@. Ignoring it and re-fetching from the server
No PCS data was found in the database for share %@
daemon/fetch-record-versions
Fetched %ld versions for record with ID %{public}@ (is deleted: %{public}@)
Couldn't decrypt data for record version %@: %@
Failed to fetch versions for record %@: %@
Fetch record versions operation <%{public}@: %p; %{public}@> finished with error %@
Error creating PDSRegistrar: %@
Error getting current registrations: %@
Can't register an incomplete container %@, skipping
Can't register tuple %@ missing push bundle identifier %{public}@ and/or containerID %@
Not registering push via PDS, it requires a logged-in iCloud account, and this container is using a not-logged-in account
Can't register a push token for an account id (%@) without a dsid
Not adding registration to PDS, as PDS is already aware of %@
Unable to add registration to PDS: %@ %@
Added registration to PDS: %@
Unable to iterate active users: %@
Removing orphaned PDSUser for unknown user %@
Unable to remove all registrations for user %@: %@
Unable to remove registration from PDS: %@ %@
Removed registration from PDS: %@
Not removing registration from PDS, as PDS is not aware of %@
Can't unregister a push token for an account id (%@) without a dsid
Skipping token unregistration for account %@, which has no dsid
Unable to remove all registrations from PDS: %@
Removed all registrations for account %@ from PDS
Removing all tokens from PDS
No mergeableDeltaMetadataRetrieveResponse for mergeableDeltaMetadataRetrieveRequest in request UUID %@
req: %{public}@, "Received response for value %@ metadataCount=%ld continuation=%@"
Error parsing delta metadata: %@
req: %{public}@, "Node failure in list metadatas request: %@"
No value ID for list metadatas node failure response
ManagedConfiguration is restricting account access
TCC rejected a token for bundleID:%@, container:%@
Got data separated volume container path %s from containermanager
Error getting data separated volume container path from containermanager: %llu
Unregistering: %s xpc activity
server public key: %@
shared info: %@
additional auth data %@ (%@)
Performed phone number canonicalization: %@ -> %@ (raw was %@)
Registering: %s xpc activity with criteria: %{public}@
%s xpc activity state: check in. criteria: %@
%s xpc activity state: run.
Couldn't set activity state to DONE
req: %{public}@, "Failed to get record ID for mergeable delta change %@"
req: %{public}@, "Failed to get record type for mergeable delta change %@"
req: %{public}@, "Failed to get record field key for %@"
req: %{public}@, "Failed to get location name from mergeable delta change %@"
req: %{public}@, "Failed to get value ID for mergeable delta change: %@"
req: %{public}@, "Failed to load delta when fetching changes: %@"
req: %{public}@, "Received mergeable delta: %@"
Error fetching changes in zone %{public}@: %{public}@
CKDBackingAccount must be subclassed
Error getting cloudKitAuthToken: %@
Error getting iCloudAuthToken: %@
It has been %f since suspended account %@ last renewal date %@. Can%@ renew credentials
Re-fetching our auth token
Renew result was %{public}@. error=%@
Can't renew auth token because we don't have an account or an account store
Got vetting auth completion, error: %@, results: %@
Couldn't create url from dataclass %{public}@ with properties %{public}@
Couldn't get sharing URL host from properties %{public}@. Falling back to legacy hostname.
Using device count override (%d)
Getting device count for account %@
Returning unknown device count for newly signed-in account
Using cached device count %ld from last fetch date %{public}@
Error saving device count: %@
Saved device count
Fetching device list for account: %@
Error fetching device list: %@
Wrong response type %{public}@ when fetching devices
Fetched device list with %ld devices
Failed to create the throttle table: %{public}@
Failed to fetch the throttle list: %{public}@
Failed to delete throttle: %{public}@
CKThrottle count at startup: %lu
Failed to save new throttle: %{public}@
Failed to save throttle changes: %{public}@
Updated the connection pool limit (%d) for "%{public}@"
Error creating mergeable delta proto for replacement request: %@
No mergeableDeltaReplaceResponse for mergeableDeltaReplaceRequest in request UUID %@
req: %{public}@, "Received response for request %@"
req: %{public}@, "Node failure in replace deltas request: %@"
daemon/fetch-record-zones
Failed to save zone %@ to the server %ld times with error %@
Failed to save %lu zones for operation %{public}@ despite synchronizing user key registry.
Couldn't create zone PCS from data: %@
Updating identity on zone PCS for zone %@
Failed to remove server provided invited key %{public}@ from zone: %@
Couldn't update identity on zone PCS for zone %@: %@
Skipping zone PCS key roll for zone because the server doesn't allow it right now %@
Warn: Couldn't export protection data for decrypting with Reminders identity: %@
Reminders zone %@ needs to be rolled for the Reminders identity
Couldn't roll Reminders identity on zone PCS for zone %@: %@
Skipping Reminders key roll for zone %@ because the server doesn't allow it right now
Couldn't decrypt zone %@ with Reminders identity: %@
Updating zoneish PCS on zone %@
Couldn't roll master key for zoneish PCS: %@
Skipping zoneish PCS key roll for zone because the server doesn't allow it right now %@
Updating zone PCS for zone %@
Couldn't add our updated service identity to zone PCS: %@
Adding Reminders specific identity for Reminders zone %@
Couldn't add Reminders specific identity for Reminders zone PCS: %@
Couldn't create a PCS etag for zone %@: %@
Saved updated zone %@%{public}@%@
Saving the following zones with updated zone PCS to the server:
useAnonymousToServerShareParticipants is not enabled
Error handling zone PCS for zone %@: %@
Fetch record zones operation <%{public}@: %p; %{public}@> is starting
Fetch record zones operation <%{public}@: %p; %{public}@> hit top-level error %@
Fetch record zones operation <%{public}@: %p; %{public}@> finished with error %@
Preflighting current service identities for zone fetch operation %{public}@
Couldn't preflight PCS identities for the current service. Failing zone fetches for operation %{public}@
Preflighting Reminders service identities for zone fetch operation %{public}@
Couldn't preflight PCS identities for the Reminders service. Failing zone fetches for operation %{public}@
Unauthorized client (%{public}@) is trying to use clear asset encryption in container (%{public}@)
daemon/db-operation
Found multiple matching PCS cache database entries. Removing them.
Failed to create PCS cache database for containerID %@
Decrypt of record %@ is complete
daemon/decrypt-records
EnQueuing decryption for record %@
Record %@ was decrypted%{public}@%@
Clearing protection data for record %@ and retrying decryption
Decryption has failed for record %@ too many times. Giving up
We need to decrypt properties on record %@. Fetching PCS data for that record
Suppressing error for record %@ because no protection data was found on the record while forcing decryption and it has no properties requiring decryption
Record %@ has items that require encryption but no protection data was found on the record
Encryption is disabled, so we're only going to pretend to unwrap the data on record %@. You asked for it!
Couldn't create a sharing identity from sharing identity data: %@
Setting CKRecordPCS on record %@: %@
Got PCS data from fetched share %@%{public}@%@
Couldn't get a PCS for our current share %@
Fetched zone PCS data. Record %p recordID %@ zoneID %@ zone PCS etag %{public}@%@
Couldn't fetch a PCS for zone %@
Couldn't get a zoneish PCS for zone %@. We'll try the record PCS if it exists, just in case.
Couldn't fetch a PCS for zone %@%{public}@
Couldn't create record PCS for record %@: %@
Couldn't create record PCS for record %@ from share: %@
Couldn't create record PCS for record %@ from parent PCS: %@
Fetched share PCS data. Record %p recordID %@ shareID %@ share PCS etag %{public}@%@
Couldn't fetch a PCS for share %@
Fetched parent PCS data from record %@ for record %@
Couldn't fetch a PCS for parent record %@
Fetching PCS data. Record %p recordID %@ zoneID %@
Couldn't get a PCS object for record %@
Couldn't get a PCS object for the record %@
Record %@ is unable to decrypt its mutableEncryptedPSK.  Dropping the value
Decrypt operation %{public}@ in %{public}@
Decrypt operation %{public}@ is finishing. Waiting for all records to finish decrypting in case it never started
Finishing decrypt records operation %{public}@
Decrypt operation %{public}@ is finishing. Waiting for all records to finish decrypting first...
All records have been decrypted for operation %{public}@
Record decrypt operation %{public}@ was asked to finish before it started
Starting decrypt records operation %{public}@
CKDContainer missing for CKEventMetric %@
Failed to fetch server configuration for CKEventMetric %@. %@
Failed to set options for CKEventMetric %@
daemon/container-specific-info
Error fetching database URL from the server: %@
Fetched database URLS from the server: %@
Expected MergeableDeltaRetrieveResponse for MergeableDeltaRetrieveRequest
Failed to load fetched delta for mergeable %@: %@
Node failure in atom sync request %@: %@
%{public}@ searching for eligible existing pcsCache
%{public}@ found existing pcsCache %{public}@
failed to create database: %@
daemon/upload-assets
We don't have a DSID so we can't copy our current PCS identity
Can't copy identity for service %{public}@. Manatee not available for current account due to %@.
Current dsid: %@. Cached identities dsid: %@. The dsid has changed underneath us and we didn't clear our identity cache. Clearing cache and failing identity request
Returning cached identity for service %{public}@ and %@ account %@
Caching a fresh %lld-type identity for service %{public}@.
Identity set %@ does not have a current key set. Not using it and removing it from cache.
Using service identity:
Didn't get a service identity from the PCS framework
Warn: Couldn't add liverpool identity to app-specific identity: %@
Couldn't get an identity for service %{public}@ from the PCS framework: %@
Got identity from the PCS framework %@
Failed to get full identity set: %@.
Can't create a diversified identity with no server entropy
Warn: Couldn't get a %{public}@ identity set: %@
Warn: Couldn't get a %{public}@ identity: %@
Warn: Couldn't create a diversified %{public}@ identity: %@
Warn: Did not get any public keys for service %{public}@.
Current identity public key data is %{public}@
Warn: Error generating fingerprint for current self identity: %@
Couldn't create a new identity set: %@
Fetching PCS identity set for account %@
Error fetching PCS identity set: %@
PCS identity set fetched:
service: %{public}@ <%{public}@>
Error fetching iCloud auth token for account %@: %@
Error setting up PCS identity set: %@
Error unarchiving a mock PCS service identity: %@
No pre-existing stingray identity for service %@ on account %@.  That's unexpected.  Filling one out
Error copying per-silo identities: %@
Refusing to try to create a sharing identity from a nil public key
Couldn't create a sharing identity from public key %{public}@: %@
Created sharing identity %@ from public key %{public}@
Couldn't create a new sharing identity: %@
Created sharing identity %@
Refusing to try to create data from a NULL sharing identity
Couldn't create data from sharing identity %@: %@
Created data from sharing identity %@: %@
Refusing to try to create a sharing identity from nil data
Couldn't create a sharing identity from data %@: %@
Created sharing identity %@ from data %@
Forcing error from security when validating the identity
Identity set %@ was expected to have a current key set %{public}@. %@
There's an iCloud account without a CloudKit Child Account. Ignoring it. %p: %@
Failed to update account properties, error %@
Failed to save verified account, error %@
CallbackRelayOperation %{public}@ was cancelled before starting
daemon/get-user-privacy-settings
Found user privacy settings %@
daemon/accept-shares
Share with URL %@ was successfully accepted
Warn: Couldn't prep PCS data %@: %@
PCS oplock failure for share with url %@.
Error accepting share with URL %@: %{public}@
Could not generate anonymous CK userID to accept share %@. Failing to accept share.
Share does not have the signingPCS to generate a signature. Failing to accept share %@.
Couldn't get a private identity from the signingPCS %@ to generate a signature. Failing to accept share %@.
No shares to accept
Error accepting shares: %@
Couldn't pull pcsData off fetched share, re-fetching: %@
Fetched share's PCS data lacked publicPCS, re-fetching
Warn: Couldn't create share PCS data while accepting metadata: %@
Fetching shares for already accepted share IDs: %@
Accepted share %@ fetched for URL %@
Warn: Error while fetching accepted shares: %@
All accepted shares were fetched successfully
Couldn't get a diversified %{public}@ identity to the public PCS for share at URL %@: %@
Couldn't add our %{public}@ identity to the public PCS for share at URL %@: %@
Decrypting the per-participant PCS for calling participant %@
Error decrypting the invited PCS on share %@: %@
Create protection info in OON key-swap for participantID: %@, recordID: %@
Share at URL %@ has already been accepted. Fetching the share instead of re-accepting it
Adding ourselves to the public PCS for share %@
Updated share public PCS for share at URL %@ is %@
Couldn't decrypt invited PCS blob for share %@
We were able to decrypt the private PCS for share %@
Failing to accept manatee share with URL %@ since we were not given a sharing invitation blob by the client
Failing to accept share with URL %@ since we are ineligible to accept as role %{public}@
Failed to accept share with URL %@ %lu times with a PCS oplock error
Fetching share metadata for %ld URL%{public}@: %@
Failing to accept anonymous share. %@
Invalid data from server: %@
daemon/save-user-privacy-settings
Missing required identity when creating a signature for record %@
Invalid data from server in response to moveRecords request: %@
req: %{public}@, "Error parsing destination server record returned for save: %@"
req: %{public}@, "Error parsing move marker server record returned for save: %@"
req: %{public}@, "Inlining fake response operation result for item id %{public}@"
Download Preauthorization Failed to Init
Invalid record identifier from server %{public}@: %@
Couldn't create a record ID from %{public}@
Didn't get a record object in %{public}@. Giving up.
Couldn't convert share ID for record: %{public}@
Couldn't create a share reference for share %{public}@
Couldn't convert parent record ID: %{public}@
Warn: Couldn't create a parent reference for record %{public}@
Warn: Caught an exception when trying to encode record: %@
Download Preauthorization For Response UUID %{public}@ Not Found
Share has no share ID: %@
Couldn't create a record ID from share ID %{public}@
Couldn't create a share with ID %{public}@. Giving up.
Failed to convert participant %@ for share %{public}@: %@
Unable to convert payload message: %@
Unable to parse dialog body %@: %@
Received malformed throttling config. Discarding.
Received throttle with unknown database type: %d. Discarding.
Received throttling config with large ttl (%d sec). Limiting to 24 hours.
Non-indexed desired key %{public}@, which should have been caught earlier
req: %{public}@, "The response for recordID %{public}@ doesn't contain the record"
Invalid data in server protobuf, ignoring response. Server response was: %@, error: %{public}@
daemon/replace-mergeable-deltas
Will replace deltas with requests: %@
Replace deltas operation deallocated before per request block
Replace deltas operation deallocated before request completion block
Replace deltas URL request completed for operation <%{public}@: %p; %{public}@>
No per-request completion block for operation %@
Failed to replace deltas for request %@: %@
Successfully replaced deltas with request %@
daemon/modify-badge
daemon/AddAnonymousShareToSharedDB
Completed CKDPAnonymousShareAddURLRequest
Error CKDPAnonymousShareAddURLRequest: %@
req: %{public}@, "Skipping record save due to purely mergeable changes in %@"
Failed to get data from delta for delta save request with error: %@
Error generating replacement requests when modifying records: %@
Invalid data from server in response to modifyRecords request: %@
req: %{public}@, "Error parsing server record returned for save: %@"
req: %{public}@, "Will call record save block for skipped record %@"
Failed to create random number generator
Failed to generate random number with error code %d
Trying to encrypt a zero-length data
Could not malloc bytes to encrypt data
Trying to decrypt a zero-length data
Could not malloc bytes to decrypt data
Tag did not match when decrypting
getattrlist() failed for path %{public}s - %{public}s
daemon/repair-assets
Repair records operation <%{public}@: %p; %{public}@> for operation <%{public}@: %p; %{public}@> could not fetch original record with error %@
Repair records sub-operation <%{public}@: %p; %{public}@> for operation <%{public}@: %p; %{public}@> completed fetch original records with error %@
Repair records sub-operation <%{public}@: %p; %{public}@> for operation <%{public}@: %p; %{public}@> completed fetch original records
Could not find original record for asset or package %@
Could not find original asset or package for asset or package %@
Progress for upload of repaired asset %@: %.2f
Failed to upload asset or package %@ with operation %{public}@: %@
Successfully uploaded asset or package %@
Repair records sub-operation <%{public}@: %p; %{public}@> for operation <%{public}@: %p; %{public}@> finished with error %@
Repair records sub-operation <%{public}@: %p; %{public}@> for operation <%{public}@: %p; %{public}@> succeeded
Received error code %ld for repair, so treating as not available
Repair records operation <%{public}@: %p; %{public}@> finished with error %@
Wrong amount of repair records to update: %ld
Repair asset sub-operation <%{public}@: %p; %{public}@> for operation <%{public}@: %p; %{public}@> completed repair record update with error %@
Repair asset sub-operation <%{public}@: %p; %{public}@> for operaiton <%{public}@: %p; %{public}@> completed repair record update
%@, %p, "%@", items:%@
Cleaning up finished fetches and starting pending fetches. Running fetches are %@ and pending fetches are %@
Fetch %@ is finished. Removing it now.
Holding queued fetch %@ because an equivalent fetch is already running
Firing queued fetch %@ immediately since a running fetch is waiting on it
Firing queued fetch %@ immediately since its been waiting too long
Fetch is %{public}@ready to fire: %@
Rescheduling queued fetch timer to fire after %.2f seconds
Re-using fetch request %@ for operation %{public}@
Creating a new fetch request for operation %{public}@
Enqueuing fetch of record %@
Posting notification now
Enqueuing fetch of share %@
Enqueuing fetch of zone %@
PCSFetchAggregator %p was cancelled
daemon/fetch-archived-records
Fetching archived records from the server for %lu zones with options:
accountsDidGrantAccessToBundleID:%@ containerIdentifiers:%@
accountsDidRevokeAccessToBundleID:%@ containerIdentifiers:%@
accountsWillDeleteAccount:%@
Will not unregister any push token as we're in Buddy
Resetting TCC access
%@ : %@ -> %@
Removing cache at %@
It's time for cloudd to die...
Found outstanding operation ID %{public}@
Error preparing for long-lived operation %@. Operation class name missing.
Will%@ enqueue outstanding operation ID %{public}@ for retry number %ld. Seconds since last retry:%ld
Starting outstanding operation ID %{public}@ for container %@
Operation %{public}@ with ckOperationClassName %{public}@ doesn't respond to selector %{public}@. Dropping from long lived cache.
Forgetting all about operation %{public}@
Returning max inline mergeable delta size from configuration: %ld
Returning default max inline mergeable delta size: %ld
Failed to convert record zone: %@
Invalid encrypted deltas for operation %{public}@: %@
No deltas to encrypt for operation %{public}@
Will encrypt deltas for operation %{public}@
Error fetching PCS to encrypt deltas: %@
Failed to encrypt delta, %@, with error: %@
Did encrypt mergeable deltas for operation %{public}@
Removing all container metadata cached info
Removing container metadata cached info for accountID %@
Got the following Apple account identifiers from Accounts:
Cached account identifiers:
Removing container metadata cached info for stale accountID %@
Missing required info on %@
Error unwrapping asset key: %@
Error find clear asset key: %@
Couldn't create url from template %@
Not using encryption keys for the asset %@
Couldn't create url from template %{public}@
re-referenced asset signature differs from expected value
CoreCDP is now reporting that manatee is%{public}@ available for the logged in account.%{public}@%@
CoreCDP reports that manatee is%{public}@ available for the logged in account.%{public}@%@
No account altDSID or accountID available for manatee status, returning manatee disabled
Manatee override behavior option is set. Returning manatee enabled value from behavior option: %@
Returning cached manatee availability originally retrieved from CoreCDP: manatee is%{public}@ available.%{public}@%@
Manatee state may have changed. Fetching new state from CoreCDP
Fetch Share Metadata
Fetch Registered bundleIDs
v8@?0
com.apple.cloudkit
com.apple.cloudd
Couldn't get metadata for the share with url %@
v32@?0@"NSURL"8@"CKShareMetadata"16@"NSError"24
 with error 
v16@?0@"CKDOperation"8
com.apple.SafariShared.CloudTabs
com.apple.test.p01.B.Xaeaeg.com.apple.SafariShared.CloudTabs
Error fetching registered bundle IDs from server: %@
v24@?0@"NSArray"8@"CKDPResponseOperationResult"16
%@ %@
container
containerEnvironment
record
shareRecord
shareMetadata
recordZone
production
sandbox
(unknown: %i)
RecordCache
rowID
recordID
zoneIdentifier
environment
databaseScope
etag
modificationTime
recordData
knownUserKeys
dsid
size
Anonymous
Unknown
v32@?0@"NSString"8@16^B24
fetchCacheEntryRecordData
CKDRecordCache.m
Can't fetch a record if we don't have a recordID
RECORDID
ENVIRONMENT
SCOPE
DSID
recordWithID
v16@?0@"<CKSQLiteTablePredicateSetup>"8
recordID = $RECORDID AND environment = $ENVIRONMENT AND databaseScope = $SCOPE AND dsid = $DSID
@"NSError"8@?0
Expected a recordID
Expected recordIDs
environment = $ENVIRONMENT AND databaseScope = $SCOPE AND dsid = $DSID AND recordID IN %@
Only suitable for testing
numberOfRecordsWithID
@"NSPredicate"8@?0
recordID = $RECORDID AND environment = $ENVIRONMENT AND dsid = $DSID
Null record
Null recordID
Null recordName
Null zoneID
Null etag
B24@?0@"NSString"8@16
v24@?0@"NSString"8^B16
addRecordFetch
Expected a recordName
Expected a zoneID
etagForRecordID
Expected a objectID
deleteRecordWithID
recordID = $RECORDID AND databaseScope = $SCOPE
Expected non-nil db for %@
clearAllRecordsInScope
databaseScope = $SCOPE
ZONEID
clearAllRecordsForZoneWithID
zoneIdentifier = $ZONEID
recordType=%@
recordID=%@
sizeUpperBound=%lu
isPackageSectionRecord=%@
-[CKDAssetRecord addMMCSItem:]
CKDAssetRecord.m
nil == item.package || item.isTemporary
-[CKDAssetRecord addRereferencedMMCSItem:]
-[CKDAssetRecord addMMCSSectionItem:]
nil != item.package
v32@?0@8@16^B24
q24@?0@8@16
@"NSArray"16@?0@"NSString"8
v32@?0@8Q16^B24
storageAvailableBytes
v16@?0@"CKDMMCSItemGroup"8
@16@?0@"CKMergeableDelta"8
CKDUploadMergeableDeltasURLRequest.m
An anonymousCKUserID is required to upload mergeable deltas when using anonymous to server share participants
Expected non-nil delta for response %@
Expected non-nil replacement request for response %@
creation
modification
CreatedInProcess
ParticipantAcceptedInProcess
NameComponents
Email
Phone
AcceptedInProcess
v24@?0@"NSData"8@"NSError"16
v16@?0@"NSError"8
Couldn't create share PCS data for share %@
v24@?0@"CKDSharePCSData"8@"NSError"16
changeID
pushMessage
moreAvailable
local-fetch-only
wants-parent
wants-zoneish
wants-invited
(%@)
none
%lu-%@
%@.%@
com.apple.CloudKit.PCSCache.callbackQueue
v24@?0@"CKDPCSSQLCache"8@"NSError"16
v16@?0@"CKDPCSData"8
CKDPCSCache.m
Invalid record ID: %@
v16@?0@?<v@?@"CKDOperation">8
Invalid zone ID: %@
Invalid share ID: %@
PCS data is of the wrong class: %@
In-memory zone cache:
In-memory record cache:
In-memory share cache:
SQL cache:
%lu outstanding fetch requests for %lu records
com.apple.CloudKit.PCSCache.fetchQueue
com.apple.cloudd.startup
.debug
com.apple.cloudkit.connectionManager.statusreport.callback
com.apple.cloudkit.connectionManager.statusreport
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
%lu connected clients
------ Shared Foreground Queue Operations -------
%lu/%ld {
No operations.
------ Global Configuration Manager -------
-------------------------------------------
------ Active Throttles -------
Cached environment is %@
%@%@
protectionInfo
protectionInfoTag
serverType
CKDatabaseService
endpoint
/api/client/record/retrieve
partitionType
databaseSpecificPartition
recordIdentifier
requestedFields
versionETag
clientVersionETag
getAssetURL
assetsToDownload
shouldFailBatch
name=%@
flags=sandboxed
%s(%d)
v24@?0@"<NSXPCProxyCreating>"8@"NSError"16
v24@?0@"<CKXPCProcessScopedClient>"8@"NSError"16
v24@?0@"CKFileMetadata"8@"NSError"16
v16@?0@"<CKXPCProcessScopedClient>"8
Daemon timed out waiting for adopter process to get metadata for %@
Adopter failed to fetch metadata for %@
Failed to issue sandbox extension for "%@" at %@: %d (%s)
file-read-data
identifier
fieldIdentifier
deltas
recordType
com.apple.cloudkit.cancellation
com.apple.cloudkit.status
com.apple.cloudkit.tccauth
v16@?0@"NSNotification"8
v20@?0@"NSString"8B16
Container %@ had an unexpectedly-nil account ivar
icns
%@-%@
Expected non-nil MMCS wrapper for %@
containerID=%@, applicationID=%@, personaID=%@, containerID=%@
sandboxed
internal
clientBundleIsAppleExecutable
zoneish
mmcsv1-v2
mmcsv2
nopcs
forceManatee
anonymousToServerShareParticipants
flags=%@
v24@?0@"CKDServerConfiguration"8@"NSError"16
v24@?0@"CKDContainerServerInfo"8@"NSError"16
v20@?0B8@"NSError"12
(unknown)
Container %@ had an unexpectedly-nil account ivar when creating a pcs cache
MasqueradeAsNonAppleAdopter
Account temporarily unavailable due to bad or missing auth token
Expected non-nil operation for proxy %@
Container %@ is not allowed to set application bundle identifier override %@ without an entitlement
B16@?0@"NSString"8
Container %@ is not allowed to set an operation sourceApplicationSecondaryIdentifier to %@ without an entitlement
Expected non-nil error for operation %@
Tue Aug  2 15:37:49 2022
%@ is CloudKit SPI and requires an entitlement. Please add the com.apple.private.cloudkit.spi entitlement to this process. This will become a hard failure.
com.apple.cloudkit.accountStatus
com.apple.cloudkit.operation.%@
com.apple.cloudkit.cleanup.%@
com.apple.cloudkit.uncancellable.%@
com.apple.cloudkit.background.%@
com.apple.cloudkit.support.%@
com.apple.cloudkit.sharedThrottlingQueue
approved
REJECTED
approval
rejection
Client went away before operation %@ could be validated; failing
No cached metadata found for outstanding operation %@
v16@?0@"CKRequestInfo"8
Operation %@ was cancelled
 not
. Error was 
v24@?0@"CKAccountInfo"8@"NSError"16
Background Assets Extension processes don't have access to an iCloud account
No iCloud account is configured
CloudKit-Anonymous / App Clips processes don't have access to an iCloud account
ALTERNATE_DISCOVERABILITY_TITLE
ALTERNATE_DISCOVERABILITY_BODY
v24@?0^{__CFUserNotification=}8Q16
v28@?0q8B16@"NSError"20
DISCOVERABILITY_TITLE
DISCOVERABILITY_BODY
DONT_ALLOW
Could not create a user notification %d
Could not create a user notification
v24@?0q8@"NSError"16
 with error
PreserveCachedLongLivedOperationMetadata
nil connection
v24@?0@"CKUserIdentityLookupInfo"8@"CKUserIdentity"16
v32@?0@"CKUserIdentityLookupInfo"8@"CKShareParticipant"16@"NSError"24
v32@?0@"CKRecordZoneID"8@"CKRecordZone"16@"NSError"24
v24@?0@"CKRecordZoneID"8@"NSError"16
v32@?0@"CKRecordZone"8@"CKRecordZoneID"16@"NSError"24
v16@?0@"CKRecordZoneID"8
v40@?0@"CKServerChangeToken"8q16@"NSError"24@?<v@?@"NSError">32
v16@?0@"CKDXPCConnection"8
v16@?0@"<CKXPCContainerScopedClient>"8
v24@?0@"CKRecordID"8d16
v24@?0@"NSArray"8@?<v@?@"NSError">16
v40@?0@"CKRecordID"8@"CKRecord"16@"CKRecord"24@"NSError"32
v24@?0@"CKRecordID"8@"NSError"16
v108@?0@"CKRecordID"8@"NSString"16q24@"NSData"32Q40Q48B56@"NSString"60d68@"NSData"76@"NSData"84@"NSData"92@"NSError"100
v24@?0@"CKRecordID"8@"NSDictionary"16
v32@?0@"CKRecord"8@"CKRecordID"16@"NSError"24
v32@?0@"CKRecordID"8@"CKRecord"16@"NSError"24
v24@?0@"CKRecordID"8@"NSString"16
v68@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24q32B40@"NSSet"44@"NSError"52@?<v@?@"NSError">60
v48@?0@"CKRecordID"8@"CKRecord"16@"CKRecord"24@"CKRecord"32@"NSError"40
v24@?0@"CKQueryCursor"8@?<v@?@"NSError">16
v24@?0@"NSString"8@"NSError"16
v32@?0@"CKSubscription"8@"NSString"16@"NSError"24
v16@?0@"CKNotification"8
true
false
v24@?0@"CKNotificationID"8@"NSError"16
v32@?0@"NSURL"8@"CKShare"16@"NSError"24
v40@?0@"NSURL"8@"NSArray"16@"NSArray"24@"NSError"32
This requires an authenticated account
not 
____ %@ Daemon Status Report: "%@" (client:"%@", container:"%@", connected since: %@)
%%%%% Operations %%%%%
Queued operations %lu/%ld {
@"NSString"16@?0@"NSOperation"8
No queued operations.
More Operations %lu/%lu/%ld {
No more operations.
Other Proxy Operations On Shared Throttling Queue %lu/%lu/%ld {
CloudKit Support Operations %lu/%ld {
More background operations %lu/%ld {
No background operations.
gatekeeper {
%%%%%%%%%%%%%%%%%%%%%%%%
%%%% Operation Statistics %%%%
----- MMCS Engine  -----
(No MMCS Engine)
------------------------
~~~~~ PCS Cache ~~~~~
(No PCS Cache)
~~~~~~~~~~~~~~~~~~~~~~~~
_____________________________
v40@?0@"NSArray"8@"NSArray"16@"NSArray"24@?<v@?@"NSData"@"NSError">32
v24@?0@"NSArray"8@"NSError"16
v24@?0@"NSData"8@?<v@?@"NSArray"@"NSError">16
v16@?0@"NSArray"8
com.apple.cloudd.metrics
Failed to retrieve host and port from %@.
Failed to create nw_endpoint for host %@ with port %@.
Failed to copy nw_endpoint.
-[CKDContainer countAssetCacheItems]
CKDContainer.m
0 && "no MMCS"
self.MMCS && "no MMCS"
-[CKDContainer showAssetCache]_block_invoke
0 && "no container.MMCS"
container.MMCS && "no container.MMCS"
v36@?0@"CKRecordID"8B16@"NSArray"20@"NSError"28
v48@?0@"CKRecordZoneID"8@"CKServerChangeToken"16q24@"NSError"32@?<v@?@"NSError">40
v40@?0@"CKRecordID"8@"NSString"16@"CKAsset"24@"NSError"32
v24@?0@"CKUploadRequestMetadata"8@"NSError"16
v40@?0@"CKRecordID"8@"NSData"16@"NSString"24@"NSError"32
v24@?0@"CKEncryptedData"8@"NSError"16
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
v16@?0@"NSURL"8
v16@?0@"CKShareMetadata"8
v32@?0@"CKRecordID"8@"NSString"16@"NSError"24
Container %@ is not allowed to decrypt share personal info
v32@?0@"CKMergeableValueID"8@"NSArray"16@"NSError"24
v24@?0@"CKReplaceDeltasRequest"8@"NSError"16
v24@?0@"CKMergeableDelta"8@"NSError"16
This requires an authenticated account, we have no account
This requires an authenticated account, we have only have an anonymous account
This requires an authenticated account, the current account cannot auth with CloudKit
The account has no apsEnv in its dataclass bag
<%lu bytes>
B16@?0@"NSOperation"8
v32@?0@"CKRecordZoneID"8@"CKZonePCSDiagnosticInformation"16@"NSError"24
v28@?0Q8B16@"NSError"20
Invalid fake response lifetime
com.apple.cloudkit.containerTCCQueue
headerKey
headerValue
-[CKDPAssetUploadTokenRetrieveResponseHeaderInfo writeTo:]
CKDPAssetUploadTokenRetrieveResponseHeaderInfo.m
nil != self->_headerKey
nil != self->_headerValue
SetupTranslator
Deserialize
PostflightRecords
Operation %@ is not allowed to run without an entitlement
CKDSerializeRecordModificationsOperation is unable to instantiate a CKDProtocolTranslator
-[CKDDeserializeRecordModificationsOperation _setupTranslator]_block_invoke
CKDDeserializeRecordModificationsOperation.m
self.error != nil || self.translator != nil
v32@?0@"NSString"8@"NSString"16@"NSError"24
CKDDeserializeRecordModificationsOperation is unable to deserialize its messages
PCSItem=%@
lastAccess=%0.0f
com.apple.cloudkit.pcs.memorycache
q24@?0@"CKDPCSMemoryCacheEntry"8@"CKDPCSMemoryCacheEntry"16
[%0.2f%% full: %lu/%lu (max: %lu) (%f min, %f oldest)] [Hit rate %0.2f%% (%lu/%lu), Updates: %lu, Deletes: %lu, Evictions: %lu Memory Status: %@]
normal
warning
critical
unknown
/api/client/test/archive
idsToArchive
assetAuthorizationResponses
throttleConfig
fieldName
order
coordinate
ascending
descending
CKDMMCSItemCommandWriter.m
Expected non-nil MMCS item
Expected non-nil MMCS request for %@
getFileMetadataWithError not implemented
readBytesAtOffset not implemented
v32@?0{_NSRange=QQ}8^B24
-[CKDAssetTokenRequest addAssetBatch:]
CKDAssetTokenRequest.m
!assetBatch.assetTokenRequest
B16@?0@"CKDAssetBatch"8
assetBatchCount=%lu
failedAssetBatchCount=%lu
applicationContainer
applicationContainerEnvironment
applicationBundle
userPrivacySettings
rowid
lookupInfo
containerIdentifier
dataSeparationHash
identity
LOOKUPINFO
HASH
lookupInfo = $LOOKUPINFO AND containerIdentifier = $ID AND dataSeparationHash = $HASH
deleteKey
cachedIdentityForLookupInfo
IdentityCache
cache
pipelining
com.apple.cloudkit.%@.callback.%p
CKDOperation.m
only one suspend is supported
resume without a suspend
Expected non-nil operationInfo
com.apple.cloudkit.%@.%@
EphemeralGroup
Operation %@ tried to dealloc with outstanding entries in the state transition group
com.apple.cloudkit.%@
(%@%@%@%@%@%@%@) 
operationID
state
executing
finished
cancelled
stateFlags
requestIDs
[%@]
background
allows-cellular
allows-expensive
long-lived
flags
runningFor
finishedChildOpIDs
@16@?0@"CKDOperation"8
<%@ %@>
childOps
operationGroupID
operationGroupName
operationGroupQuantityNumber
currentAccountID
applicationBundleIdentifierOverrideForContainerAccess
applicationBundleIdentifierOverrideForNetworkAttribution
applicationSecondaryID
containerID
request
MMCSMetrics
unitTestOverrides
%@ %@ State: %@, QoS: %@
v16@?0@"CKDOperationMetrics"8
Can't run a child operation on an orphaned parent operation
com.apple.cloudkit.operationcallback.userinteractive
com.apple.cloudkit.operationcallback.userinitiated
com.apple.cloudkit.operationcallback.default
com.apple.cloudkit.operationcallback.utility
com.apple.cloudkit.operationcallback.background
Application version is not allowed by the server
Didn't get any configuration from the server
v24@?0@"CKOperationGroupSystemImposedInfoConfiguration"8q16
Operation %@ was cancelled before it started
B8@?0
You can't restart an executing or finished CKOperation: %@
ForceTimingIssueAroundProxySetupQueue
v24@?0@"CKOperationLifecycleAction"8@"NSError"16
Must be called on subclass
Operation %@ was already marked as finished
 with error: 
Operation %@ is marked as finished
Not Started
Complete
nil clientOperationCallbackProxy
v24@?0@"CKFileOpenResult"8@"NSError"16
Daemon timed out waiting for adopter process to open file %@
Adopter failed to open file %@
v32@?0@"NSURL"8@"NSFileHandle"16@"NSError"24
Daemon timed out waiting for adopter process to finish file %@
Adopter failed to finish file %@
Simulate503ResponseWithRetryInterval
Device throttle: container=%@, type=%d
state: %@
parent: %@
container: %p
%s<%@ %@ 
QoS %@ 
running for %@ (started %@) 
%sRunning Child Operations: {
%sRequest: {
%s%@: {
%s%@
%s%lu Previous Requests: [%@]
%s%lu Finished Child Operations: [%@]
%sCloudKit metrics: {
%sMMCS metrics: {
%sError: %@
cloudd
iCloudApp
syncEngine
adopter
ckctl
code
error
success
partial
failure
indeterminate
entropy
waiter=%@, zoneIDs=%@
Deferred relinquish of %@
<%@: %p; %@>
Held Gates {
%@ -> %@
No gates held
Waiters {
%@ wants zone IDs {
foregroundZoneGatekeeper {
backgroundZoneGatekeeper {
Fetch Metadata
v40@?0@"CKMergeableValueID"8@"NSArray"16@"NSData"24@"CKDPResponseOperationResult"32
Error fetching delta for value %@ from server: %@
Must specify a record ID and field name for value %@
Failed to fetch PCS to decrypt mergeable delta timestamps
Failed to decrypt mergeable delta timestamps
v24@?0@"CKDRecordPCSData"8@"NSError"16
contactInformation
-[CKDAssetRequestPlanner addMMCSItem:]
CKDAssetRequestPlanner.m
![_items containsObject:item]
-[CKDAssetRequestPlanner addRereferencedMMCSItem:]
-[CKDAssetRequestPlanner addMMCSSectionItem:]
asset record %@ unexpectedly contains mixed types of assets
itemCount=%lu
assetRegisterAndPutBatchCount=%lu
assetGetChunkKeysBatchCount=%lu
assetTokenRequestCount=%lu
Fetching Zones
Checking Record PCS
zoneID
fetchAllQueryResults
FakePCSDecryptionFailure
TEST PCS decrypt failure
LegacyErrorHandling
Encountered an error fetching records
v32@?0@"NSString"8@"CKAssetTransferOptions"16^B24
Invalid predicate: %@
Unexpected error while encoding query %@
No query or cursor supplied for query operation
containerName
CKDQueuedRecordFetch.m
Record ID required when fetching record PCS: %@
Record ID was submitted to the wrong kind of fetcher: %@
Biggest logging call sites by size:
Total Size
Avg Size
Callsite
Most frequent logging call sites:
Total Count
Total Size
Callsite
/api/client/zone/retrieve
onlyFetchPCSInfo
continuationMarker
zone
 and error 
v24@?0@"CKDZonePCSData"8@"NSError"16
CKDPCSCacheZoneFetchOperation.m
We should have PCS data for zone %@ by this point
Couldn't save zone with updated PCS data to the server for zone %@
Couldn't serialize zone PCS
Couldn't serialize zoneish PCS
We shouldn't be trying to save a new PCS on anything other than the default zone or system zone: %@
Couldn't create a new zone PCS
Couldn't create a new zoneish PCS
NoZonePCSOnServer
Couldn't fetch zone PCS for %@ from the server
We don't have zone PCS data for zone %@
We don't have share PCS to decrypt zone PCS data for zone %@
Couldn't create a zoneish PCS for zone %@
Couldn't decrypt zone PCS for zone in order to create a zoneish PCS for zone %@
Couldn't fetch PCS for zone %@: %@
applicationID="%@", containerID="%@", personaID="%@"
%@, accountID="%@"
/api/client/anonymousShare/remove
anonymousShareTupleHash
encryptedShareTuple
Use +[CKDPrivacyManager sharedManager] instead
com.apple.cloudkit.privacyManagerQueue
com.apple.cloudkit.privacyManager.resetQueue
CKDPrivacyManager.m
Can't reset privacy settings with daemon type %@
You must call -[%@ initWithOperation:container:operationQueue:]
com.apple.cloudkit.pcs.queuedFetch.callbackQueue
%@ %p was cancelled
startDate=%@, lastRequestDate=%@, numCallbacks=%d, initialOperationInfo=%@, usesBackground=%d
CKDQueuedFetch.m
Expected non-nil runningOperationID on fetch %@
To be overridden by subclass
You can't restart a fetch that has already finished
 with errors 
application/json
application/x-apple-plist
application/x-protobuf
text/xml
text/plain
application/x-x509-ca-cert
CKDURLRequest.m
<%@ %p>: Requests must be finished before deallocation
<%@ %p>: The URL session data task should be nil: %p
%s.%p
com.apple.cloudkit.urlrequestlifecycle
<%@: %p %@>
UUID
dataTaskID
dataTask
foreground
deny-cellular
deny-expensive
POST
there is no operation associated with this request
Your request contains %ld items which is more than the maximum number of items in a single request (%ld)
FakeContainerIdentifier
Expected non-nil container
v32@?0@"NSString"8@"NSString"16^B24
You can't set both usesiCloudAuthToken and usesCloudKitAuthToken to the same value
TestAuthTokenRenewalFailsBecauseRenewedTokenIsStale
Got a CloudKit auth token that has already failed a previous auth attempt
Couldn't get an authentication token
Authentication required
no operations present
DropOperationUUIDsInResponse
FakeZoneBusyResponseFromServer
v24@?0@8@"NSData"16
v24@?0@"NSDictionary"8@"NSData"16
v24@?0@"NSData"8@"NSData"16
TestRepeatedParseResults
Received a plaintext response that we weren't expecting: %@
Received a 509 cert response that we weren't expecting: %@
Plugin-Specific Error
If you set a server type of CKServerTypeOther, you must provide your own url
%@ should be overwritten by the subclass (%@)
/api/client/batch
RequestOperation
%@; desc="%@://%@%@/static/protobuf/CloudDB/CloudDBClient.desc"; messageType=%@; delimited=true
%@ must propagate anonymous userIDs, then override this and return YES
v16@?0@"NSData"8
This request requires an authenticated account, which is unavailable for CloudKit-Anonymous / App Clips processes
This request requires an authenticated account, which is unavailable for Background Assets Extension processes
This request requires an authenticated account
This request requires an authenticated account, the current account cannot auth with CloudKit
CloudKit access was denied by user settings
You must set the container
v24@?0@"NSURL"8@"NSError"16
Request (%@) does not have a URL
Account couldn't get container scoped user id, no underlying error received
You must set the container for request %@
WaitForTokenRegistration
Can't acquire zone lock, failing the request
v12@?0B8
TestContainerSpecificOpWithNoCloudKitTokenNoRetry
TestContainerSpecificOpWithBadCloudKitToken
tacos
TestContainerSpecificOpWithNoCloudKitToken
Didn't get CloudKit credentials for account %@ with no error
Didn't get a CloudKit auth token
TestContainerSpecificOpWithBadiCloudToken
TestContainerSpecificOpWithNoiCloudToken
Didn't get mmeAuthToken credentials for account %@ with no error
Didn't get an iCloud auth token
DEBUG
gzip
https
com.apple.cloudkit.ckctl.container
%@:%@
Basic %@
Content-Encoding
no-transform
Cache-Control
%@ requestUUID:%@
Request is nil
The URL session data task should be nil
Response is nil
Can't create a NSURLSessionDataTask, failing the request
FakeRequestCFNetworkError
SilentlyDropNetworkRequest
Received a networking protocol error. Please try again
Request %@ was cancelled
HTTP/1.1
TestName
TestEmptyResponseBody
_kCFNTimingDataConnectionReused
Reason: %@
Container: %@
DSID: %@
Operation ID: %@
Request UUID: %@
MoiCTopIssueAutoSysdiagnose-
%@%@%@
Received a didCompleteWithError without receiving a response from the server
Received a didCompleteWithError without an error but no response body where one was expected
satisfied
NOT satisfied
stateFlags=%@ 
(waiting on auth)
CFNetwork task: %@ 
CKDeviceService
/api/client/badgeUpdate
userPartition
badgeCount
forDevice
signature
lastSection
owner
fileSignature
referenceSignature
com.apple.security.view-change.PCS
com.apple.ProtectedCloudStorage.HaveCredentials
Current Service
Bladerunner
Sharing
CloudKit
Reminders
%@-%@-%@
-%@-%@
%s.%@
com.apple.CloudKit.CKDPCSManager.callbackQueue
client specified
containerIdentifier default
%@%@-%@
%@. Public keys on object: %@. Attempted public keys: %@
Couldn't get a public key for our participant
diversified 
Couldn't create a diversified public key for the owner participant
Couldn't create an identity from the public sharing key: %@ (key was %@)
Couldn't add public identity to per-participant PCS: %@
Couldn't serialize PCS data after key swap on OON PCS blob
Can't add an identity to a nil pcs
Couldn't get a self identity to add to the share PCS
Couldn't get a public identity for our current user to add to PCS %@: %@
Failed to add our public identity to the PCS object
Asked to add an identity to an null PCS in addIdentityForService:toPCS:
Couldn't get a %@ identity to add to PCS
FakeOutCurrentIdentityIsMissing
Couldn't create a PCS identity
Couldn't create a new PCSShareProtectionRef
Failed to add a protection key to the zone
ForceSingleIdentityForRemindersZone
ForceKeyRegistrySyncOnRemindersZoneCreation
Couldn't get a Reminders identity to add to PCS
ForceUserKeyRegistrySyncRetryOnZonePCSCreation
Couldn't create a PCS identity for unit tests
ForceImmediateUserKeyRegistrySyncFailure
Failed to preflight PCS identities because of unit tests
v28@?0B8@"NSError"12@"CKDPCSKeySyncCoreAnalytics"20
Couldn't create a zone PCS identity
Couldn't encode zone PCS data
v16@?0r^v8
123456789
com.apple.fake.container
cloudkit.zoneshare
TestZone
%@-%@-%@-%@-%@-%@
Missing the required PCSIdentity to generate a signature
FakeEmptySignature
FakeInvalidSignature
FakeSignatureGenerationError
com.apple.protectedcloudstorage
PCSErrorDescription
PCS Signing of service key failed
CKDPCSManager.m
We failed a prior decryption of this PCS data a with manatee identity when current identity is non-manatee. Did our identity change?
PCS data wasn't decrypted because a prior attempt failed after key sync.
Forcing a manatee decryption failure due to behavior option override
copyServiceIdentityWithError: didn't return a service identity
<PCSIdentitySetRef %p service: %@, identities: {
v16@?0^{__CFString=}8
Could not decrypt PCS data with the selected identity. A key to decrypt this data does exist, but it will not be used.
Failed to decrypt PCS data with user identities
Couldn't create PCS object from data
PPPCS data
DisallowKRSToBePerformed
KRS is not allowed from unit test override
Failed to decrypt. Keys unavailable even after synchronization
iCDP not available
ForceUserKeyRegistrySyncRetryOnDecryption
Failed to decrypt zone PCS because of unit tests
ForceMissingIdentitiesErrorOnDecryptionRetry
ForceDecryptFailedErrorOnDecryptionRetry
v24@?0@"CKDPCSData"8@"NSError"16
Failed to preflight a %@ identity
ForceUserKeyRegistrySyncRetryOnIdentityPreflight
ForceUserKeyRegistrySyncRetryForReminders
SkipRefetchingIdentityAfterKeyRegistrySyncFailure
Failed to decrypt zone PCS data
Couldn't create zone PCS object from data
Couldn't decode zone PCS data
Couldn't get a public identity from our PCS service identity
Couldn't add our public identity to the existing zone PCS data
Last CoreCDP error was 
Cannot roll master key for a nil record PCS
Couldn't roll master key for record PCS
Cannot roll key for a nil zone PCS
Couldn't update zone identity on PCS
Failed to clean up the share PCS
Failed to create a new private key for share PCS
Failed to clean up the share PCS when creating a new private key
Couldn't roll key for zone PCS
Couldn't roll zone wide share PCS due to missing share or zone PCS
Couldn't roll record PCS due to missing record or zone PCS
Couldn't roll zone-wide share record PCS due to missing share or zone PCS
Can't create a record PCS with a nil zone PCS
Couldn't create a new record PCS
Couldn't add zone PCS to record PCS
Couldn't add share PCS to record PCS
lightweight 
 and share PCS 
Can't create a record PCS with nil zone PCS data
Couldn't add encrypted zone PCS to record PCS
Couldn't encode record PCS data
Can't create a PCS object without a share PCS
Failed to decrypt PCS data
You can't add a nil share PCS to a record PCS
You can't add a share PCS to a nil record PCS
READ ONLY 
Couldn't get a public identity from the share PCS
Couldn't get a private identity from the share PCS
You can't remove a nil share PCS from a record PCS
You can't remove a share PCS from a nil record PCS
Couldn't remove share PCS from record PCS
Couldn't get a public identity for our current user to sign PCS: %@
Couldn't create a new signed PCSShareProtectionRef
Failed to add a protection key to the share
Couldn't get a public identity for our current user in order to add our public %@ identity to PCS %@
Failed to add our %@ identity to the share
Couldn't create an empty share PCS
Couldn't add public PCS identity to new share PCS
Couldn't get a public identity'
Failed to add identity to the share PCS
Failed to add public identity to the share PCS
Failed to add a protection key to the chain PCS
Couldn't set the current private key on the chain PCS to the new generated chain identity
Couldn't encode share PCS data
Can't create a share PCS without a sharing identity
Failed to decrypt share PCS data
Couldn't create share PCS object from data
Failed to decrypt share PCS object
Couldn't create an identity from private key data
Couldn't create a public PCS from the PCS data %@ for identity %@
Couldn't create public key data from PCS  %@
Couldn't unlock the private share PCS for share %@
Error adding public identity %@ to record PCS %@
Couldn't get key IDs from share PCS %@
Couldn't get PCS identity with key ID %@
Error getting a public identity from sharing identity %@
Can't remove a nil public identity
Can't remove a public identity from a nil share
Couldn't remove public identity from share PCS
Couldn't remove public identity with keyID %@ from PCS %@
Can't decrypt chain PCS for record %@ because we don't have a decrypted record PCS
Can't decrypt chain PCS for record %@ because the record has no chain PCS private key
Can't decrypt chain PCS for record %@ because the record has no chain PCS data
Couldn't decrypt the private chain PCS identity
rdar://problem/32337711: There are server side plugins on container %@ that are probably going to cause you to have a bad time
Failed all decryption attempts for wrapped asset key %@ in context %@ using PCS %@
Couldn't wrap asset key with signature %@ with PCS %@
Unsupported CKDPCSAssetKeyType
MMCSReferenceObjectCreateWithType failed
Couldn't decrypt encrypted data on record using context %@: %@
Couldn't unwrap encrypted data in context %@ because %@.
there's nothing to decrypt
we don't have a record PCS
Couldn't encrypt data in context %@
Couldn't wrap encrypted data in context %@ because %@.
there's nothing to encrypt
Couldn't fetch a boundary key from PCS
No account DSID, so we can't fetch a boundary key
@16@?0@"NSData"8
com.apple.cloudkit.unittest.nopcs.CKManateeContainerTests.
com.apple.cloudkit.zoneshare.test_non_manatee
com.apple.cloudkit.unittest.zonesharing.
com.apple.cloudkit.unittest.fdb.zonesharing.
com.apple.test.p
com.apple.test.fdb.p
com.apple.cloudkit.unittest.CKAnonymousToServerShareParticipantTests.
ResetKeySyncState
AllowThrottlingWithUnitTestAccount
ForceShortThrottlePeriod
ForceKeySyncFailure
ForceKeySyncFailureForReminders
ForceKRSReturnExistingIdentityValue
ExpectedPersonaIdentifier
com.apple.cloudkit.pcsmanager.queue
Preparing Short Tokens
Retrieving Share Metadata
The user is not able to access this share
v32@?0@"CKDShortTokenLookupInfo"8@"CKShareMetadata"16@"CKDPResponseOperationResult"24
Internal error when fetching short token metadata for %@
Error %@ when fetching short token metadata for %@: %@
Couldn't decode the protected full token for %@
Couldn't find this participant on the share for %@
ForceShareAcceptTwice
No participant protection data for share %@
ForceSharePCSPrepFailure
Failing share PCS prep for unit tests
 and error: 
No sharing invitation token provided for device-to-device encrypted share %@
Couldn't parse iCloud Share URL %@
Fetching Records
Saving Records
 Error was 
Unknown error when saving record for web sharing
Couldn't fetch record from the server
Record %@ didn't contain any share protection data
Couldn't deserialize share protection data on record %@
Couldn't find record %@ on the server
Couldn't get a web sharing identity from record %@
Fetched record %@ had no PCS data
added
removed
Couldn't fetch record for web share/unshare.
CKDMMCSTestEncryptedItemReader.m
record_identifier
grant
revocation
revoke
Unknown error when saving record for record access
Record %@ didn't contain any access token protection data
Couldn't deserialize access token protection data on record %@
granting
revoking
Couldn't create an access token identity for record %@
Record %@ didn't have an access token so it can't be revoked
Couldn't create access token data for record %@
Couldn't fetch record for web access grant/revoke.
requestedSize
uploadedSize
uploadReceipt
/api/client/zone/save
zoneProtectionInfoTag
name
value
CKDQueuedZoneFetch.m
Zone ID required when fetching zone PCS: %@
Zone ID was submitted to the wrong kind of fetcher: %@
Error discovering identity for lookup info %@
v32@?0@"CKUserIdentityLookupInfo"8@"CKUserIdentity"16@"CKDPResponseOperationResult"24
FakeContactIdentifier-%@
@16@?0@"CNLabeledValue"8
v24@?0@"CNContact"8^B16
ContactsDatabaseEmails
Error discovering user identities
v32@?0@"NSString"8@"CKEventOperationGroupInfo"16^B24
@24@?0@"NSString"8@"CKEventOperationInfo"16
Encrypt Deltas
Upload Deltas
v24@?0@"CKMergeableDelta"8@"CKDPResponseOperationResult"16
v24@?0@"CKReplaceDeltasRequest"8@"CKDPResponseOperationResult"16
Error uploading mergeable delta, %@, from server: %@
Error replacing mergeable deltas %@: %@
CFBundleVersion
CloudKit/%@ (%@)
UNKNOWN
<%@>
 <%@;%@;%@>
 <%@/%@ (%@/%@)>
Accept
Accept-Encoding
Authorization
User-Agent
Content-Type
X-MMe-Client-Info
X-Apple-CKAppId
X-Apple-Operation-ID
X-Apple-Operation-Group-ID
X-Apple-Request-Log-Level
X-CloudKit-TestRun-ID
X-CloudKit-AutoBugCapture
X-CloudKit-TapToRadar-Request
X-CloudKit-TapToRadar-Request-Component
X-CloudKit-TapToRadar-Request-RelatedRadar
X-CloudKit-BundleId
X-CloudKit-BundleVersion
X-CloudKit-ContainerId
X-CloudKit-Environment
X-CloudKit-DatabaseScope
X-CloudKit-AutomatedDeviceGroup
X-CloudKit-DuetPreClearedMode
X-CloudKit-UserId
X-CloudKit-AuthToken
X-ICloud-Environment
destinationZoneID=%@
destinationDatabaseScope=%@
sourceZoneID=%@
sourceDatabaseScope=%@
-[CKDFetchContentAuthTokensForPutURLRequest generateRequestOperations]
CKDFetchContentAuthTokensForPutURLRequest.m
items.count
Missing operationUUID on %@
Missing AssetUploadTokenRetrieveResponse on %@
Can't find transactionState for %@
Can't find assetBatch for %@
Server did not return the required authPutResponse even though an authPutRequest was sent. AssetUploadTokenRetrieveResponse on %@
Missing authPutRequest. AssetUploadTokenRetrieveResponse on %@
Failed to get headers for authPutResponse AssetUploadTokenRetrieveResponse on %@
Failed to parse recordID from AssetUploadTokenRetrieveResponseUploadToken on %@ : %@
Missing Asset signature from AssetUploadTokenRetrieveResponseUploadToken on %@
Missing Asset size from AssetUploadTokenRetrieveResponseUploadToken on %@
Missing Asset owner from AssetUploadTokenRetrieveResponseUploadToken on %@
Missing Asset requestor from AssetUploadTokenRetrieveResponseUploadToken on %@
Missing Asset token from AssetUploadTokenRetrieveResponseUploadToken on %@
Missing Asset contentBaseURL from AssetUploadTokenRetrieveResponseUploadToken on %@
Malformed Asset contentBaseURL from AssetUploadTokenRetrieveResponseUploadToken on %@
Failed to find asset for assetID %@ on %@
Missing requestID on %@
Can't find transactionState
Error uploading asset: %@
Generic %@ %@ error
Vetting with AuthKit
Reconstructing short token
Force fetching share metadata
Reconstructing share URL
Verifying OON key can be swapped
encryptedKey failed to decrypt
CKDCompleteParticipantVettingOperation.m
Vetting token got validated fine, but we got an error: %@
Vetting token %@ invalid. Likely expired.
Vetting token %@ validation failed due to auth error
https://%@/share/%@%@
Couldn't force fetch share metadata for share: %@
privateToken
outOfNetworkPrivateKey
We don't have the necessary keys to perform an OON key swap
OON key-swap failed, but without error
OON key-swap validation failed, but without error
Dryrun OON keyswap failed
PublicCloudDBURL
PublicShareServiceURL
PublicDeviceServiceURL
PublicCodeServiceURL
PublicMetricsServiceURL
ContainerScopedUserID
OrgAdminUserID
Environment
publicCloudDBURL=%@, publicShareServiceURL=%@, publicDeviceServiceURL=%@, publicCodeServiceURL=%@, publicMetricsServiceURL=%@, containerScopedUserID=%@, orgAdminUserID=%@, environment=%@
application/protobuf
CKDCodeLocalFunctionInvokeURLRequest.m
Invalid database environment for local code request
Failed to parse node
CKCodeService
/api/client/code/invoke
serviceName
functionName
serializedParameters
protectedCloudComputeMetadata
attestationRequest
trustedTargetCryptoMetadata
/api/client/zone/delete
userPurge
lastMissingManateeIdentityErrorDate
CKDQueryURLRequest.m
An anonymousCKUserID is required to query in zone %@ in the shared database when using anonymous to server share participants
down|%@|%@
com.apple.cloudkit.download
@16@?0@"CKDMMCSItem"8
<CKDMMCSItem %p itemID: %lu, progress %0.2f, signature: %@ %@>
MMCS Items
Prepare For Download
Download
Post Process Downloaded Assets
Expected non-nil asset for %@
%@?%@
expected assetKey for asset %@
expected clearAssetKey for asset %@
-[CKDDownloadAssetsOperation _tryToFillInTheDerivativeTemplateWithAsset:]
CKDDownloadAssetsOperation.m
assetKey && "assetKey expected"
&pk=%@
Couldn't wrap asset key: no error
unknown public cert result for host %@ asset %@
no public cert result for host %@ asset %@
asset %@ has constructedAssetDownloadURLTemplate but cannot parse out host string
Couldn't create asset download URL from template
Missing signature for asset %@
Missing download token for asset %@
Inconsistent signature type for asset %@, Asset was %@, container does not support
Expected non-nil error for asset %@
Invalid package manifest for package %@
No package manifest found for package %@
Expected non-nil asset
Expected non-nil asset for item %@
@16@?0@"CKDMMCSItemGroup"8
Expected non-nil assetCache for %@
Expected non-nil fileURL for %@
Expected a valid sectionIndex: %ld
Operation was cancelled
Couldn't find section at index %ld for package %@
v24@?0Q8^B16
Invalid section index %ld(%lu) for package %@
Expected 0 non-empty items in the empty section %@
down|%@|%@|section:%lu
v16@?0@"CKDMMCSItem"8
Missing path for the package manifest
Invalid section index %ld for package %@
@16@?0Q8
Expected non-0 maxPackageDownloadsPerBatch
Expected max downloading tasks: %@
Expected completed tasks: %@
DownloadAssetsFakeMMCSError
v24@?0@"CKDMMCSItem"8@"NSDictionary"16
v16@?0@"CKDMMCSItemGroupSet"8
Failed to fill out download URL for asset %@
ProtectedTranscodingService
DownloadAssetsFromTranscodingService
FakeConstructedAssetDownloadParameters
TranscoderServiceName
TranscoderFunctionName
transcode
TranscoderPermittedRemoteMeasurement
[%@] (%lu operations, %lu requests, %0.2f total duration (%0.2fq/%0.2fe), data u/d: %lu/%lu, %lu connections (%lu created))
 MMCS metrics: %lu requests, (%0.2f total duration (%0.2fq/%0.2fe), data u/d: %lu/%lu, %lu connections (%lu created))
Recent errors: {
%@ - %@
range
Error fetching user quota from server: %@
v24@?0Q8@"CKDPResponseOperationResult"16
/api/client/record/resolveToken
routingKey
shortTokenHash
forceFetch
shouldFetchRootRecord
rootRecordDesiredKeys
participantId
CKDAssetZone.m
Expected Item for Zone %@ but Found %@
assetZoneKey=%@
-[CKDPAssetUploadTokenRetrieveRequestHeaderInfo writeTo:]
CKDPAssetUploadTokenRetrieveRequestHeaderInfo.m
Can't encode array %@ of unknown child class: %@
Can't encode object %@ of class %@
Nesting arrays not supported
CKDRecordFieldConversion.m
Invalid type %@ on encrypted field object %@
Did not expect encrypted types while creating field value
Invalid latitude/longitude value in location
@16@?0@"CKDPRecordFieldValue"8
Could not parse key for indexed list field operation: %@
Invalid value type for indexed list field key %@
Could not produce action for indexed list field key %@
bytesType
dateType
stringType
locationType
referenceType
assetType
int64Type
doubleType
emptyList
dateListType
bytesListType
locationListType
referenceListType
assetListType
stringListType
listType
int64ListType
doubleListType
packageType
encryptedBytesType
encryptedBytesListType
streamingAsset
streamingAssetList
mergeableValueType
encryptedMergeableValueType
%@: <%@: %p>
%@: <Watcher deallocated>
SystemAvailabilityState
CKDSystemAvailabilityMonitor.m
System does not have availability %lx
CKDPushConnectionDidReceivePublicTokenNotification
connected
disconnected
CKLogDomain
yyyy-MM-dd HH:mm
yyyy-MM-dd HH:mm:ss
HH:mm
HH:mm:ss
yyyy-MM-dd HH:mm ZZZ
yyyy-MM-dd HH:mm:ss ZZZ
yyyy-MM-dd HH:mm:ss.SSSSSSZZZ
HH:mm ZZZ
HH:mm:ss ZZZ
cryptoSessions
/setup/ck/v1/ckAppInit
Couldn't get container configuration from the server for container "%@"
cloudKitDatabaseGatewayUrl
cloudKitDatabaseUrl
cloudKitShareGatewayUrl
cloudKitShareUrl
cloudKitDeviceGatewayUrl
cloudKitDeviceUrl
cloudKitCodeGatewayUrl
cloudKitCodeUrl
cloudKitMetricsGatewayUrl
cloudKitMetricsUrl
cloudKitUserId
orgInfo
cloudKitOrgUserId
icloud
reservedSize
uploadURL
uploadURLExpirationTimeSeconds
Fetching Zone PCS
Saving Zones
Synchronizing User Key Registry
Error saving record zone to server: Protection data didn't match
Error saving record zone %@ to server: Protection data didn't match
SwizzleZoneSaveResponseToErrorZonePCSIdentityUnknown
SwizzleZoneSaveResponseToErrorZoneNotFound
zone pcs is created without the user's public key
-[CKDModifyRecordZonesOperation _handleRecordZoneSaved:responseCode:serverCapabilities:expirationDate:expired:]
CKDModifyRecordZonesOperation.m
Error saving record zone %@ to server: %@
Protection data didn't match
Error deleting record zone %@: %@
EnsureLastMissingManateeIdentityErrorDateOnZoneDelete
Failing zone delete for unit tests because we should have had a lastMissingManateeIdentityErrorDate
v44@?0@"CKRecordZoneID"8@"CKDPResponseOperationResult"16Q24@"NSDate"32B40
NO_ZONE_PCS_FOR_YOU
Couldn't create a new PCSShareProtectionRef because unit testing
ForceAddCKIdentityToZonePCS
NO_ZONE_PCS_FOR_SERVER
Couldn't create new PCS blob for zone %@
NO_ETAG_FOR_YOU
You can't save the default zone
/api/client/record/move
semantics
originId
originEtag
destinationEtag
destinationZoneProtectionInfoTag
destinationRecordProtectionInfoTag
destinationRecord
merge
failIfExists
failIfEtagMismatch
recordProtectionInfo
stableUrl
shareId
protectionInfoKeysToRemove
storageExpiration
com.apple.cloudd.volumeManager
field_id
corporateSharingEnabled
lastWebActivityUTCMills
countryCode
photosWebAccessTimestamp
accountFlags
domain
userInfo
token
asset
tokenExpiration
position
insert_after
@16@?0@"CKDShortTokenLookupInfo"8
@16@?0@"CKDPParticipant"8
 with shareID 
 without any shareID 
CKLStreamObserver.m
This must be called on a subclass
%sm%@
SIM: 
[37m%@
[0m %@[%d:%@:%@:%@]%@%@ %@
%@ %@[%d:%llu:%llu:%llu] %@
field_identifier
mergeable_deltas
platform
anonymous
explicit-credentials
mock
com.apple.cloudkit.account.authCallbackQueue
p9(7|8)-ckdatabase
AnonymousAccount
<%@ %p> ("%@" Account ID: %@)
Can't update account properties because we have no account
com.apple.cloudkit.account.authQueue
Can't renew our auth token since account is suspended and renewal is rate limited
Can't renew our auth token since we don't have access to the account
Can't renew credentials because we don't have an account
@"NSString"16@?0^@8
Got an iCloud auth token that has already failed a previous auth attempt
Can't reauth since we don't have access to the account
Request
Response
Request Object
Response Object
Response Configuration
Request Object Stream Reset
Unknown type
%li%@%li:
-[CKDTrafficLogger _logObject:ofType:]
CKDTrafficLogger.m
stringOffset == b64LogDataString.length
TrafficLogging
authorization
<Redacted string %ld characters long>
%li:%@
type
oplockFailure
uniqueFieldFailure
moveOplockFailure
expiredAppConfig
expiredGlobalConfig
badSyntax
forbidden
throttled
refused
notSupported
exists
requestAlreadyProcessed
badAuthToken
needsAuthentication
mescalSignatureMissing
invalidMescalSignature
opLockFailure
atomicFailure
resetNeeded
fieldsPerTypeLimitExceeded
typeBusy
numRecordTypesLimitExceeded
invalidContainer
invalidRecordTypeName
invalidFieldName
invalidFieldValue
invalidIdentifier
fieldNotQueryable
fieldNotSortable
queryFilterLimitExceeded
queryFilterValuesLimitExceeded
membershipQueryLimitExceeded
notificationAdditionalFieldLimitExceeded
notificationAdditionalFieldInvalidType
subscriptionLimitExceeded
uniqueTriggerLimitExceeded
triggerSubscriptionBindingTypeMismatch
zoneSizeLimitExceeded
zoneCountLimitExceeded
validatingReferenceError
fullResetNeeded
alreadyShared
emailOutOfNetwork
duplicateSubscription
expiredPutReceipt
quotaExceeded
zoneNotFound
invalidBundleId
unsupportedDevice
blocklisted
recordProtectionInfoTagMismatch
zoneProtectionInfoTagMismatch
assetSizeLimitExceeded
batchOperationLimitExceeded
requestSizeLimitExceeded
recordSizeLimitExceeded
databaseCommitSizeExceeded
userDeletedDataForZone
staleRecordUpdate
shareParticipantLimitExceeded
shareParticipantError
pcsChainingError
hierarchyAlreadyHasShare
u13Restricted
managedAppleIdRestricted
shareParticipantContactError
recordArchived
databaseAccessDenied
parentHierarchyDepthLimitExceeded
zonePcsUserIdentityUnknown
managedAppleIdBackupBlocked
outOfNetworkUsersUnsupported
gameAssignmentNotFound
queryBeginsWithValueLengthLimitExceeded
userResetEncryptedData
mergeableValueNotFound
invalidPublicKey
mergeableDeltaSizeLimitExceeded
mergeableDeltaNotFound
mergeableDeltaInvalid
mergeableValueCompactionRequired
unprovisionedICloudAccount
purgedICloudAccount
invalidDsidForICloudAccount
shareRegionUnsupported
+[NSStream(BoundPairAdditions) createBoundInputStream:outputStream:bufferSize:]
CKDProtobufStreamWriter.m
(inputStreamPtr != NULL) || (outputStreamPtr != NULL)
1.2.11
-[CKDProtobufStreamWriter open]
inputStream != nil
outputStream != nil
We just tried to finish compression twice
-[CKDProtobufStreamWriter _compressBodyData:shouldFlush:]
ret != Z_STREAM_ERROR
_zlibStream.avail_in == 0
I didn't order this stream, so why is it on my bill?
CKDMMCSClientProxyItemReader.m
Expected non-nil MMCS item for %@
Writing not supported
assetId
saveAssetRequest
saveAssetResponse
retrieveAssetResponse
targetZone
currentServerContinuationToken
clientChangeToken
deviceCount
assetQuotaUsage
metadataQuotaUsage
capabilities
zoneishPcsNeedsRolled
zoneKeyRollAllowed
zonePcsModificationTime
zonePcsModificationDevice
expired
expirationTime
CKShareService
/api/client/membership/query/stream
appPartition
alias
sortedBy
OBSOLETE_pcsServiceType
publicKeyRequested
v24@?0@"CKSQLite"8@"NSError"16
_debug
-[NSArray(CKDUploadAssetsOperationAdditions) CKSortedForUpload]_block_invoke
CKDUploadAssetsOperation.m
key1 && key2
[obj1 isKindOfClass:[CKAsset class]] && [obj2 isKindOfClass:[CKAsset class]]
0 <= index1 && 0 <= index2
com.apple.cloudkit.upload
@"NSArray"16@?0@"CKDAssetBatch"8
Fetch Configuration
Prepare For Upload
Fetch Upload Tokens
Upload
Expected non-nil package
Expected asset %@ to be marked as uploaded for %@
Invalid maxSectionChunkCount value: %lu
@16@?0@"CKPackageItem"8
-[CKDUploadAssetsOperation _planSectionsForPackage:error:]
isZeroFileSignature && "Expected zeroSizeFileSignature"
MMCSItem.chunkCount == 0 && "Expected MMCSItem.chunkCount == 0"
MMCSItem.fileSize == 0 && "Expected MMCSItem.size == 0"
i < packageItems.count
Invalid sectionChunkCount value: %lu
Number of expected file signatures did not match number of assets in package %@ (%lu versus %lu)
Did not find expected file signature for item %@ in package %@
Did not find expected file signature for asset %@
Invalid size for the manifest for package %@
nil fileURL property
nil container
-[CKDUploadAssetsOperation _prepareForUpload]
itemGroupSet.allItemGroups.count == 1
No auth request and no error
-[CKDUploadAssetsOperation _failAllItemsInAssetBatch:error:]
No authToken received for asset
No authPutResponse received for re-referenced asset
Atomic zone yo; something in the batch failed.
Expected nil error for %@
Invalid section %@ at index %lu/%lu
Expected non-nil reference signature for %@
Invalid section count %lu/%lu
Can't find section at index %lu
Expected non-0 maxPackageUploadsPerBatch
Expected max uploading tasks: %@
Expected non-0 size for the manifest for package %@
-[CKDUploadAssetsOperation _upload]
putItemGroupSet.allItemGroups.count == 1
timeStatistics
serverFields
bounds
label
criteria
rateLimit
ttlSec
Fetching PCS
CKDPublishAssetsOperation.m
Expected non nil recordID
Record %@ contained no matching asset fields to publish
/api/client/record/save
fieldsToDeleteIfExistOnMerge
conflictLoserUpdate
saveSemantics
recordProtectionInfoTag
conflictLosersToResolve
shareEtag
shareIDUpdate
parentChainProtectionInfoTag
failIfOutdated
override
Call _removeAnonymousShareFromSharedDB
v24@?0@"NSString"8@"CKDPResponseOperationResult"16
Fetch Deltas
Error fetching deltas for %@ from server: %@
B16@?0@"CKMergeableDelta"8
Unable to determine record ID for mergeable delta for value ID: %@
Failed to fetch PCS to decrypt mergeable delta
Failed to decrypt mergeable delta
CKDClientInfo.m
Use +[%@ sharedClientInfo]
com.apple.cloudkit.clientinfo.callback
UserAssignedDeviceName
v24@?0^{__CFString=}8^{__CFDictionary=}16
hostname
userToken
applicationVersion
applicationConfigVersion
globalConfigVersion
deviceIdentifier
deviceSoftwareVersion
deviceHardwareVersion
deviceLibraryName
deviceLibraryVersion
deviceProtocolVersion
locale
mmcsProtocolVersion
deviceAssignedName
deviceHardwareID
targetDatabase
userIDContainerID
isolationLevel
operationGroupQuantity
serviceIdentityKeyIDs
deviceSoftwareIsAppleInternal
assetAuthorizeGetRequestOptions
activeThrottlingLabel
deviceUDID
deviceSerialNumber
entitlementsValidated
requestOriginator
supplementalZoneInfos
privateDB
publicDB
sharedDB
orgDB
operation
recordId
assetFields
response
result
header
functionInvokeResponse
mergeableDeltaSaveResponse
mergeableDeltaMetadataRetrieveResponse
mergeableDeltaReplaceResponse
mergeableDeltaRetrieveResponse
shareVettingInitiateResponse
zoneSaveResponse
zoneRetrieveResponse
zoneDeleteResponse
zoneRetrieveChangesResponse
recordSaveResponse
recordRetrieveResponse
recordRetrieveVersionsResponse
recordRetrieveChangesResponse
recordDeleteResponse
recordResolveTokenResponse
recordMoveResponse
fetchArchivedRecordsResponse
userAvailableQuotaResponse
userRetrieveResponse
queryRetrieveResponse
assetUploadTokenRetrieveResponse
deleteContainerResponse
bundlesForContainerResponse
webAuthTokenRetrieveResponse
updateMissingAssetStatusResponse
shareAcceptResponse
anonymousShareAddResponse
anonymousShareRemoveResponse
subscriptionCreateResponse
subscriptionRetrieveResponse
subscriptionDeleteResponse
archiveRecordsResponse
markAssetBrokenResponse
userQueryResponse
userPrivacySettingsUpdateResponse
userPrivacySettingsResetResponse
userPrivacySettingsBatchLookupResponse
userPrivacySettingsRetrieveResponse
tokenRegistrationResponse
tokenUnregistrationResponse
setBadgeCountResponse
notificationSyncResponse
notificationMarkReadResponse
/api/client/anonymousShare/add
isDeleted
recordVersions
com.apple.security.view-become-ready
view
 named 
operationUUID
synchronousMode
last
requestSignature
anonymousCKUserID
noneType
zoneSaveType
zoneRetrieveType
zoneDeleteType
zoneRetrieveChangesType
recordSaveType
recordRetrieveType
recordRetrieveVersionsType
recordRetrieveChangesType
recordDeleteType
recordResolveTokenType
fetchArchivedRecordsType
recordMoveType
shareAccessType
queryRetrieveType
assetUploadTokenRetrieveType
containerDeleteType
userAvailableQuotaType
containerGetBundlesType
webAuthTokenRetrieveType
dataRepairUpdateMissingAssetStatusType
addAnonymousShareType
removeAnonymousShareType
subscriptionCreateType
subscriptionRetrieveType
subscriptionDeleteType
mergeableDeltaSaveType
mergeableDeltaMetadataRetrieveType
mergeableDeltaReplaceType
mergeableDeltaRetrieveType
userRetrieveType
userQueryType
userPrivacySettingsRetrieveType
userPrivacySettingsUpdateType
userPrivacySettingsResetType
userPrivacySettingsBatchLookup
shareAcceptType
shareVettingInitiateType
pushRegisterType
pushUnregisterType
pushBadgeType
pushSyncType
pushReadType
archiveRecordsType
datarepairMarkAssetBrokenType
functionInvokeType
CKDProtobufResponseBodyParser.m
You can't use %@ without setting a message class
_parserData has insane length %lu
Couldn't read the size of the next object from the server
_curObjectLength has insane length %lu
ParserData length %lu isn't greater than varIntLen of %lu (objectLength %llu)
Couldn't parse an object from the server
ParserData length %lu isn't greater than self.curObjectLength of %lu
Parser had %lu additional unparsed bytes remaining
Someone is parsing on another thread!
Error saving record subscription with id %@ to server: %@
Error deleting subscription %@: %@
Subscription fails conversion: %@
Subscription with a nil notificationInfo: %@
contentRequestHeaders
contentRequestAuthorizeGetOptions
/api/client/record/versions
minimumVersionEtag
@16@?0@"CKMovePhotosChange"8
@"CKTuple2"16@?0@"CKMovePhotosChange"8
CKDMovePhotosOperation.m
Not expected to move shares
Not expected to delete records in a move
How'd a move operation get a non-move handler?
moveCallbackWithMetadata:error: called twice on %@
@16@?0@"CKRecord"8
How did a move operation decide to delete records?
v48@?0@"CKDPResponseOperationResult"8@"CKRecordID"16@"CKRecord"24@"CKRecord"32@"CKRecord"40
Couldn't decrypt destination record returned from the server in response to our move of record %@
v24@?0@"CKRecord"8@"NSError"16
Couldn't decrypt move marker record returned from the server in response to our move of record %@
Got a response for record with ID %@, but we didn't try to move that record.
Record PCS oplock failed
Record
Zone PCS oplock failed
Zone
Share Etag Oplock failure
Share
Error moving record %@ on server: "%@"
Error moving record %@ on server: Protection data didn't match
Failed to decrypt the server record %@ returned from oplock failure.
Error moving record %@ on server: %@
requestedTTL
publishedURL
streamingURL
chunkInfoUrl
appQuote
aqeQuote
pckCertificate
routingToken
bundleID
functionInvokeRequest
mergeableDeltaSaveRequest
mergeableDeltaMetadataRetrieveRequest
mergeableDeltaReplaceRequest
mergeableDeltaRetrieveRequest
shareVettingInitiateRequest
zoneSaveRequest
zoneRetrieveRequest
zoneDeleteRequest
zoneRetrieveChangesRequest
recordSaveRequest
recordRetrieveRequest
recordRetrieveVersionsRequest
recordRetrieveChangesRequest
recordDeleteRequest
recordResolveTokenRequest
recordMoveRequest
fetchArchivedRecordsRequest
userAvailableQuotaRequest
userRetrieveRequest
queryRetrieveRequest
assetUploadTokenRetrieveRequest
deleteContainerRequest
bundlesForContainerRequest
webAuthTokenRetrieveRequest
updateMissingAssetStatusRequest
shareAcceptRequest
anonymousShareAddRequest
anonymousShareRemoveRequest
subscriptionCreateRequest
subscriptionRetrieveRequest
subscriptionDeleteRequest
archiveRecordsRequest
markAssetBrokenRequest
userQueryRequest
userPrivacySettingsUpdateRequest
userPrivacySettingsResetRequest
userPrivacySettingsBatchLookupRequest
userPrivacySettingsRetrieveRequest
tokenRegistrationRequest
tokenUnregistrationRequest
setBadgeCountRequest
notificationSyncRequest
notificationMarkReadRequest
/api/client/atomBatch/replace
deltaIdentifiers
ignoreMissingDeltas
containsNewData
metadata
continuation
/api/client/pushRegister
tokenRegistrationBody
version
/api/client/privacy/retrieve
Share metadata for the share at URL %@ doesn't have protection data on it
Unable to create public PCS blob using metadata %@ (private token was: %@, share's public PCS blob was %@)
first
second
Unknown error while trying to initiate vetting process for participant %@: %@
The address of participant %@ is already vetted to caller
This address is vetted to a different Apple ID
This account has too many vetted email addresses and another cannot be added
VETTING_PASSWORD_DIALOG
User session has expired and we were unable to re-authenticate user during vetting
Unable to vet due to failed authentification even after successful authentication attempt, giving up
Error code %ld while trying to initiate vetting process for participant %@
v24@?0q8@"CKDPResponseOperationResult"16
hashedEmailAddressType
containerUserIdentifier
hashedCanonicalPhoneNumber
Invalid subscription
The subscription could not be converted because it is invalid: %@
v24@?0@"NSMutableDictionary"8@"NSError"16
_locked_encryptShareTuples zonePCSData is still not available. Terminating without additional retry.
Error generating ckAnonymousShareHashIdentifier for CKDAnonymousShareTuple.
CKDAnonymousShareTuple
Failed to encrypt some anonymous share tuples.
_locked_decryptShareTuple zonePCSData is still not available. Terminating without additional retry.
_locked_decryptShareTuple Unable to decrypt share tuple data.
zoneish 
com.apple.cloudkit.anonymousSharingManager.queue
bundleIdentifier
apnsEnv
skipBundleIDCheck
development
share
bytesValue
signedValue
doubleValue
dateValue
stringValue
locationValue
referenceValue
assetValue
listValue
packageValue
streamingAssetValue
mergeableValue
encryptedMergeableValue
isEncrypted
downloadURL
downloadURLExpirationTimeSeconds
intervalLengthSec
allowedRequestCount
repeatEverySec
startTimeSecondsAfterUnixEpoch
startTimeSecondsAfterLocalMidnight
publicKeyID
reference
/api/client/pushSync
serverChangeToken
maxChanges
wantsChanges
Checking Zone PCS
Repairing PCS
int64Value
boolValue
PBUNSET
/api/client/webauth/retrieve/token
apiToken
forceFetchToken
containerScopedUserId
syncContinuationToken
movedRecordDestinationIdentifier
<%@ %p> [Type: %@, Seq: %ld, Len: %lu, UUID: %@]
com.apple.cloudkitlog.parseandprint
LogFacilityTraffic
Traffic
traff-cont: 
LogFacilityTrafficBinary
TrafficBinary
B32@?0@"CKLTrafficLogMessageFragment"8Q16^B24
cloudkitlog parse error: A traffic log packet for request %@ was likely dropped. Was expecting sequence number %li but received %li. Will attempt to parse but might be unsuccessful
CKDPRequestOperation
-[CKLStreamTrafficObserver parseRequestArrayAndPrint:]
CKLStreamTrafficObserver.m
cloudkitlog parse error: Request objects parsed with error %@
cloudkitlog parse error: Response objects parsed with error %@
cloudkitlog parse error: request object parser timed out for request %@. Likely lost some request object data logs.
cloudkitlog parse error: received request object data for request %@ but wasn't able to parse a single request object
/tmp/%@.request.dat
Wrote raw request data to %@
cloudkitlog parse error: received response object data for request %@ but wasn't able to parse a single response object
/tmp/%@.response.dat
Wrote raw response data to %@
Finished
-[CKLStreamTrafficObserver parserFromConfigurationMessage:]
v16@?0@"CKLTrafficLogMessage"8
Traffic log for request %@
ICLOUD
splunk-qa.icloud.apple.com
splunk.icloud.apple.com
/en-US/app/launcher/search
earliest
latest
search index=ck* %@
>>>>>>>> Request
=>=>=>=>=>Body stream was reset %li time%@. This was what was streamed the final time:
<<<<<<<< Response
Status %lu
End traffic log for operation %@
%@: %@
v32@?0@"CKUserIdentityLookupInfo"8@"CKUserIdentity"16@"NSError"24
/api/client/share/accept
selfAddedPcs
publicKey
publicKeyVersion
acceptedInProcess
@16@?0@"CKRecordZoneID"8
fieldValue
equals
notEquals
notIn
lessThan
lessThanOrEquals
greaterThan
greaterThanOrEquals
near
containsAllTokens
containsAnyTokens
listContains
listNotContains
listContainsAny
listNotContainsAny
beginsWith
notBeginsWith
listMemberBeginsWith
notListMemberBeginsWith
listContainsAll
listNotContainsAll
operationType
operationQualityOfService
sourceAppBundleIdentifier
CKStartDate
CKDuration
CKBytesUploaded
CKBytesDownloaded
CKConnections
CKConnectionsCreated
CKRecordsUploaded
CKRecordsDownloaded
CKRecordsDeleted
CKAssetsUploaded
CKAssetsUploadedFileSize
CKAssetsDownloaded
CKAssetsDownloadedFileSize
CKRetries
CKNumberOfRequests
CKProtoRequestOperationsByCount
MMCSDuration
MMCSBytesUploaded
MMCSBytesDownloaded
MMCSConnections
MMCSConnectionsCreated
MMCSNumberOfRequests
MMCSTotalBytesByChunkProfile
MMCSChunkCountByChunkProfile
MMCSFileCountByChunkProfile
types
filters
sorts
distinct
queryOperator
creationDate
modificationDate
creatorUserRecordID
lastModifiedUserRecordID
recordChangeTag
shareID
Unsupported operation for special key-path allTokens
Unexpected reference type
Unexpected operator for predicate
Unexpected filter type
errorKey
CKPluginUnknownDomain
Error, details unknown
CKDPParticipant_ShareParticipantKeyHealth CKDPShareParticipantKeyHealthForCKShareParticipantInvitationTokenStatus(CKShareParticipantInvitationTokenStatus)
CKDEnumConversion.m
Unexpected share participant invitation token status: %ld
CKDPShare_Permission CKDPSharePermissionForCKShareParticipantPermission(CKShareParticipantPermission)
Unexpected share participant permissions: %ld
CKDPParticipant_ShareParticipantType CKDPShareParticipantTypeForCKShareParticipantRole(CKShareParticipantRole)
Unexpected share participant role: %ld
responseUUID
authGetResponseBody
responseHeaders
extensionName
typeCode
extensionPayload
CKDMMCSItemReaderWriter.m
Expected an invalid file handle for %@
Expected a valid file handle for %@
pread error: %d (%s)
pwrite error: %d (%s)
createdBy
fields
modifiedBy
conflictLoserEtags
modifiedByDevice
pluginFields
permission
shareInfo
chainPrivateKey
chainProtectionInfo
chainParent
tombstonedPublicKeyIDs
zoneishPrimaryKeyId
readOnly
readWrite
/api/client/record/delete
participantKeyLost
publicKeys
com.apple.cloudkit.UploadPackages
com.apple.cloudkit.packagepurger
com.apple.cloudkit.packageGarbageCollection
B24@?0@"NSString"8@"NSArray"16
B24@?0@"NSURL"8@"NSError"16
CKDPackageDirectoryPurger.m
Expected: %@ to be a directory
%K IN %@
distanceToLocation:fromLocation:(%K, %@) < %f
ALL tokenize(%@, 'cdl') IN allTokens
ANY tokenize(%@, 'cdl') IN allTokens
%K CONTAINS %@
ANY %@ IN %K
%K BEGINSWITH %@
ANY %K BEGINSWITH %@
ALL %@ IN %K
NSTruePredicate
Unexpected predicate type: %@
distanceToLocation:fromLocation:
Searching for locations outside of a specified circular area is not supported: %@
Expected search radius on right hand side of operator: %@
Expected search radius on left hand side of operator: %@
Expected expected 2 arguments for function distanceToLocation:fromLocation: %@
Expected NSKeyPathExpressionType argument for distanceToLocation:fromLocation:
Expected CLLocation argument for distanceToLocation:fromLocation: but got %@
a nil location
Expected NSString or NSData on right hand side: %@
Expected array with two number arguments on right hand side, but got %@: %@
Expected array with two number arguments on right hand side: %@
allTokens
Required string or tokenize() arguments when comparing to special key-path allTokens: %@
tokenize:using:
Required NSCaseInsensitivePredicateOption, NSDiacriticInsensitivePredicateOption, and NSLocaleSensitivePredicateOption tokenization options on tokenize() function: %@
Required string argument when using tokenize(), but got %@: %@
Required string or tokenize() arguments when searching special key-path allTokens: %@
Enumerating special key-path allTokens is not allowed: %@
Required NSCaseInsensitivePredicateOption, NSDiacriticInsensitivePredicateOption, and NSLocaleSensitivePredicateOption comparison predicate options: %@
Required predicate modifier ANY or ALL when searching special key-path allTokens: %@
Required tokenize() operand when searching special key-path allTokens: %@
Required comparison operators TOKENMATCHES or IN when searching special key-path allTokens: %@
Expected key-path in comparison expression: %@
Expected constant value in comparison expression: %@
Aggregate operator ALL not allowed for comparison expression: %@
Aggregate operator ANY not allowed for comparison expression: %@
Type '%@' not allowed in comparison expression: %@
Predicate comparison options are not supported for expression: %@
Unexpected expression: %@
Expected comparison subpredicate: %@
Invalid NOT predicate: %@
q24@?0@"CKDPQueryFilter"8@"CKDPQueryFilter"16
constructedAssetDownloadParameters
@16@?0@"PCCWrappedKey"8
com.apple.cloudkit.parser.
This method must be subclassed in class %@
com.apple.reminders
CKDPCSKeySyncNonManateeServiceName
 YES
 error: 
com.apple.cloudkit.keySyncQueue
Failed to sync user keys
v16@?0@"PCSMTT"8
Underlying key sync error
CKDPCSKeySyncManager.m
Must provide a service name to syncUserKeys
No account DSID, so we can't sync with the user key registry
v24@?0B8@"NSError"12B20
PCS Sync throttled
Recently synced keys for the %@ service %f seconds ago. Throttling...
Invalid state. Received a completed handler. Expected a fresh one.
Error fetching subscription %@
v32@?0@"CKSubscription"8@"NSString"16@"CKDPResponseOperationResult"24
Error fetching all subscriptions from server: %@
v16@?0@"CKDPResponseOperationResult"8
___zoneUpdateData
CKDModifyShareHandler.m
%s called on handler %@ but it isn't in the state %s
-[CKDModifyShareHandler sideEffectRecordIDs]
CKDModifyRecordHandlerStateNeedRecordSideEffects
-[CKDModifyShareHandler fetchSharePCSData]
CKDModifyRecordHandlerStateNeedSharePCSData
Public sharing identity on share %@ does not match the public sharing identity from its root record (%@).
DisallowSharePCSToBeCreated
Share PCS creation not allowed by unit test
Can't save a share in the public database
Public sharing identity on share %@ is different. Expected %@, got %@
Couldn't create a public sharing identity for share %@
Can't save share %@ because we're missing PCS data. Public PCS: %@, Private PCS: %@
Didn't get PCS data for zone %@
Couldn't add invited PCS to zone PCS for zone-wide share %@
Couldn't update signing key on invited pcs for share %@
-[CKDModifyShareHandler prepareForSave]
CKDModifyRecordHandlerStateNeedRecordPrepareForUpload
ForceSendPublicKeyForAnonymousParticipants
ShouldRollSharePCSOnFetch
Couldn't serialize private share PCS for share %@: %@
Couldn't create a PCS etag for share %@: %@
Couldn't serialize public share PCS for share %@: %@
Couldn't create a public PCS etag for share %@: %@
Couldn't serialize zone update PCS for share %@: %@
Couldn't serialize zoneish update PCS for share %@: %@
_rawZonePCSUpdateByes
_rawZonePCSUpdateEtag
_rawZoneishPCSUpdateByes
Error adding private sharing PCS to public sharing PCS for share %@: %@
Error adding public sharing PCS to private sharing PCS for share %@: %@
Error removing public sharing PCS from private sharing PCS for share %@: %@
Error cleaning up public PCS for share %@: %@
Couldn't get a current public CloudDocs identity for the owner on share %@
Couldn't create invited PCS for share %@
Read-write
Read-only
Couldn't change per participant PCS permission on share %@
DONT-REMOVE-MY-KEY
Could not remove PPPCS public key from invited PCS for participant %@
No participant PCS or PPPCS public key exists for participant %@
Couldn't remove per-participant PCS from invited PCS for participant %@: %@
Couldn't create a public key for the owner participant on share %@
No private OON key exists for participant %@
No public sharing key exists for participant %@
Couldn't create an identity from the public sharing key for participant %@: %@ (key was %@)
OON 
NoOwnerPPPCS
Couldn't add per-participant PCS to invited PCS for participant %@: %@
Couldn't create a per-participant PCS for participant %@: %@
Cannot add participant %@ with missing public key to share
Couldn't create a manatee sharing invitation data for participant %@: %@
Couldn't add public identity to per-participant PCS for participant %@: %@
Should never get here with a nil manateeInvitationData
Couldn't serialize per-participant PCS for participant %@: %@
Couldn't create an identity from the public sharing key %@
@16@?0@"CKShareParticipant"8
Share handler called back with a CKRecord instead of a CKShare
/api/client/subscription/create
subscription
Couldn't open os log event store: %@
v24@?0@"OSLogEventSource"8@"NSError"16
Couldn't open os log event live store: %@
v24@?0@"OSLogEventLiveSource"8@"NSError"16
v16@?0@"OSLogEventProxy"8
IMadeUpThisErrorDomain
v16@?0Q8
v24@?0Q8@"OSLogEventStreamPosition"16
_has
has%c%s
_%sCKLogValue
%@%d
 failure
    
      
        
          
            
              
                
device
comment
user
overloaded
notFound
containerUnavailable
mescalSignatureParseError
zoneBusy
zoneUnavailable
invited
accepted
unsubscribed
administrator
publicUser
payload
encryptedTimestamps
Mergeable delta envelope context generation failed, missing delta identifier
Mergeable delta envelope context generation failed, invalid mergeable value ID
%@-%@-%@-%@-%@
Mergeable delta envelope context generation failed, invalid context encoding
Mergeable delta encryption failed, missing delta payload
Failed to encrypt delta payload
Mergeable delta decryption failed, encrypted payload missing
Failed to decrypt mergeable delta payload
Can't unwrap asset key for mergeable delta with no record ID
Can't unwrap asset key for mergeable delta with no field name
Failed to unwrap mergeable delta asset key
Failed to decrypt mergeable delta envelope
Failed to create mergeable delta envelope
Mergeable delta envelope missing
Failed to authenticate mergeable delta timestamps
Failed to encrypt mergeable delta timestamps
Failed to verify mergeable delta timestamps
CKEnvelopeData
CKEncryptedTimestampsKey
CKEnvelopeAuthenticatedTimestampsKey
text
localizedKey
localizedArguments
actionLocKey
launchImage
soundName
category
title
titleLocalizedKey
titleLocalizedArguments
subtitle
subtitleLocalizedKey
subtitleLocalizedArguments
idAndEtag
fullRecord
recordDeleted
/api/client/record/archives
archiveContinuationToken
newestFirst
limit
firstName
lastName
isInNetwork
field
assets
contentBaseURL=%@
owner=%@
requestor=%@
complete
use-download-preauth
error=%@
containerPrivacySettings
subscriptions
recordForOplockFailure
chunk
fetch-chunks
preauth
inline-put-complete
chunk-padding
-[CKDMMCS drop]_block_invoke
CKDMMCS.m
self.checkoutCount > 0
x-apple-mmcs-proto-version
Expected non-nil path: %@
Expected non-nil application bundle ID
+[CKDMMCS MMCSWrapperForApplicationBundleID:directoryContext:database:error:]_block_invoke
(wasCached || assetCache) && "MMCS engine context was cached or we created an asset cache"
Expected non-nil MMCS engine context
-[CKDMMCS dealloc]
_didDrop && "failed to drop CKDMMCS dealloc"
-[CKDMMCS getMMCSEngine]
0 && "already dropped"
-[CKDMMCS getMaxChunkCountForSection]
-[CKDMMCS _referenceIdentifierFromAssetKey:]
-[CKDMMCS _logMMCSOptions:]
<key hash: %@>
@16@?0@"NSDictionary"8
@"CKTuple2"24@?0@"NSString"8@16
-[CKDMMCS _contextToRegisterItemGroup:operation:options:completionHandler:]
Fetching
Registering
-[CKDMMCS _contextToRegisterItemGroup:operation:options:completionHandler:]_block_invoke
MMCSItem.signature
v16@?0@"CKDMMCSItemGroupContext"8
-[CKDMMCS registerItemGroupSet:operation:options:completionHandler:]
-[CKDMMCS _contextToGetOrPutChunkKeysItemGroup:operation:options:completionHandler:]
GetChunkKeys
PutChunkKeys
Null item signature
No auth-token for item: %@
-[CKDMMCS getChunkKeysItemGroupSet:operation:options:completionHandler:]
-[CKDMMCS _contextToGetItemGroup:operation:options:progress:command:completionHandler:]
Zero item ID
Fetching asset batch failed
-[CKDMMCS getItemGroupSet:operation:shouldFetchAssetContentInMemory:options:progress:command:completionHandler:]
-[CKDMMCS _contextToPutItemGroup:operation:options:progress:completionHandler:]
Null signature
Null auth-token
Saving asset batch failed
-[CKDMMCS putItemGroupSet:operation:options:progress:completionHandler:]
-[CKDMMCS putChunkKeysItemGroupSet:operation:options:completionHandler:]
-[CKDMMCS CKStatusReportArray]
Empty MMCS Status
-[CKDMMCS _getRegisteredItemsGreaterThan:itemIds:itemCount:error:]
-[CKDMMCS registeredItemCount:error:]
-[CKDMMCS showRegisteredItems]
-[CKDMMCS _unregisterItemIDs:]
-[CKDMMCS unregisterItemIDs:]
-[CKDMMCS _contextToPutSectionItem:operation:options:progress:completionHandler:]
nil section ID
-[CKDMMCS putSectionItem:operation:options:progress:completionHandler:]
-[CKDMMCS _contextToGetSectionItem:operation:options:progress:completionHandler:]
Fetching section failed
-[CKDMMCS getSectionItem:operation:options:progress:completionHandler:]
CKDMMCSEngineContext *mmcsEngineContext(CKDMMCSItemGroupContext *__strong)
Expected non nil CKDMMCSEngineContext
void CKDMMCSCheckRegisterCompleteCallback(void *, CFDictionaryRef)_block_invoke
Invalid response from MMCS
Item not found
itemID mismatch
fetch
register
Fetched
Registered
B16@?0@"CKDMMCSItem"8
Failed to register all assets
void CKDMMCSFetchOrRegisterCompleteCallback(void *, CFDictionaryRef, BOOL)
Stale chunk state found during registration when none expected
Failed to check registered asset
Failed to register asset
CKDMMCSFetchOrRegisterCompleteCallback
MMCSItem.fileSize == 0 && "MMCSItem.size == 0"
MMCSItem.chunkCount != 0 && "Expected MMCSItem.chunkCount != 0"
Expected either an error or a authPutRequest on the completion of the GetChunkKeys
CKDMMCSUpdateCompleteCallback_block_invoke
[MMCSItem.signature isEqualToData:signature]
Failed to update asset
Expected either an error or a putReceipt on the completion of the PutChunkKeys
uint32_t CKDownsizeOrDie(NSUInteger)
CloudKit-Prefix.pch
That number was ridiculous
CKDMMCSItem.m
Expected non-nil record for %@
itemID=%llu
putPackageSectionIdentifier=%@
trackingUUID=%@
size=%llu
paddedSize=%llu
offset=%llu
recordKey=%@
path="%@"
signature=%@
deviceID=%@
fileID=%@
generationID=%@
fileHandle="%@"
authToken=%@
uploadReceipt=%@
uploadReceiptExpiration=%@
temporary
read-encrypted
read-from-client-proxy
has-download-preauth
nil UUID
Requested to read bytes using client proxy when shouldReadAssetContentUsingClientProxy is NO
Need Record Side Effects
Need Record PCS Data
Need Share PCS Data
Need Asset Record Fetch
Need Asset Upload
Need Prepare For Upload
Need Record Upload
Need Mergeable Delta Upload
Record Upload Complete
Needs Refetch
Needs Share Participant Fetch
Atomic Failure
Permanent Failure
Retryable Failure
Completed
ShareID
RecordID
<%@ %p> (%@: %@ %@%@)
 (isDelete)
CKDModifyRecordHandler.m
-[CKDModifyRecordHandler sideEffectRecordIDs]
-[CKDModifyRecordHandler fetchRecordPCSData]
CKDModifyRecordHandlerStateNeedRecordPCSData
Lost a record: %@
Fetching signing PCS for records to delete when not needed
Unexpectedly setting signing PCS
Couldn't create public sharing identity for record %@
Need a PCS Manager (%@, %@, %@)
Record %@ isn't in the private database, doesn't have a share or parent set and isn't a share
record does not exist
no PCS data and no error
Parent record %@ in the same batch didn't have chain PCS data on it for record %@
Couldn't get PCS data for share %@ to add to record %@
Record %@ refers to share %@ but that item is a record, not a share
Didn't get PCS data for share %@
Share record %@ referenced by record %@ does not exist on the server
Didn't get dependent PCS data to roll record PCS for %@
Didn't get PCS data for share %@ to add to record %@
Got the same parent and previous parent on record %@
Couldn't remove previous parent PCS data for previous parent %@
Couldn't fetch parent PCS data for parent record %@
Parent record %@ does not exist on the server
Couldn't decrypt the chain PCS blob on parent record %@
Couldn't add parent PCS data from record %@ to record %@
DisallowRecordPCSToBeCreated
Record PCS creation not allowed by unit test
 and share 
TwoByteZoneishKeyIDs
ZoneishKeyIDWithOnlyTwoValidBytes
RandomZoneishKeyID
Couldn't fetch a zoneish PCS from zone %@ for record %@
Can't create a record PCS for %@ because there is no %@%@%@
zone PCS data 
 and no 
share PCS
We couldn't decrypt the zone PCS and this isn't a share, so we can't create a new record PCS for %@
Couldn't create a new record PCS for %@
_NEW_PROTECTION_DATA_PLOX
Couldn't fetch PCS for zone %@
Couldn't fetch PCS for share %@
Couldn't fetch PCS for parent %@
UNIT_TESTING_FAIL_PCS_ETAG_CHECK
Attempted PCS data (%@) had a different identifier than the server PCS data (%@) for record %@
Couldn't create a parent PCS for record %@
Couldn't create a public sharing key for record %@
-[CKDModifyRecordHandler fetchSharePCSData]
first element of asset array is not a CKAsset
-[CKDModifyRecordHandler prepareAssetsForUploadWithError:]
CKDModifyRecordHandlerStateNeedAssetUpload
Expected non-nil record for handler %@
Expected non-nil recordID for %@
Error preparing asset for upload for key "%@" on record %@: %@
B32@?0@8@"NSString"16@"CKMergeableDeltaID"24
Invalid list of heterogenous values for field name %@ in recordID %@
up|%@
Expected non-nil recordKey for %@
Packages not supported with clear asset encryption.
-[CKDModifyRecordHandler prepareForSave]
Couldn't encrypt data on record %@
EEEEEEEEEENCRYPTION_BREAKER
CKDAnonymousShareZoneID
CKDAnonymousShareShareID
CKDAnonymousShareHashIdentifier
radius
/api/client/subscription/retrieve
/api/client/datarepair/updateMissingAssetStatus
idx (%lu) is out of range (%lu)
missingAssetStatusRecordID
recovered
assetSize
assetPutReceipt
packageAssetSize
packagePutReceipts
anonymousZoneInfoID
anonymousZoneInfoData
content
CKDAccountNotifier.m
Observer cannot be nil
/api/client/atomBatch/retrieve
public key
public key signature
version signature
expiration
expiration signature
certs
protection source
Invalid server public key payload
Failed to verify public key data.
com.apple.cloudkit.tokenregistration
CKDTokenRegistrationScheduler.m
token must not be nil
com.apple.cloudkit.CloudKitUnitTestsHost
exportedPCSData
shareePublicKeyData
com.apple.cloudkit.operationFinished
com.apple.cloudkit.dugongKeyRollOperationFinished
containerEnvironmentString
operationClass
qualityOfService
qualityOfServiceString
applicationBundleID
errorCode
errorChain
errorName
CKQueueing
CKExecuting
MMCSQueueing
MMCSExecuting
recordIDCount
shouldFetchAssetContent
desiredKeysCount
recordZoneIDsCount
fetchAllChanges
recordToSaveCount
recordIDsToDeleteCount
savePolicyString
atomic
hasServerChangeToken
resultsLimit
com.apple.cloudkit.keyRegistrySyncFinished
shouldThrottle
isManatee
keySyncResult
overallResult
keySyncDurationSec
throttledDurationSec
context
pcsCreation
pcsPreflight
pcsDecryption
userIdentityUnknown
KRSReturnedExistingIdentity
created
expires
-[CKDPResponseOperationHeaderAssetAuthorizationResponseHeaderInfo writeTo:]
CKDPResponseOperationHeaderAssetAuthorizationResponseHeaderInfo.m
wrappedInvocationKey
@16@?0@"CKDPUserPrivacySettingsBatchLookupResponseContainerPrivacySettings"8
lastItem
/api/client/privacy/update
Call UpdateMissingAssetStatus
protectedFullToken
ownerParticipant
callerParticipant
participantPermission
participantState
participantType
rootRecordType
attestations
testDevice=%@
defaultDevice
v24@?0@"<CKXPCLogicalDeviceScopedClient>"8@"NSError"16
v16@?0@"<CKXPCLogicalDeviceScopedClient>"8
Daemon timed out waiting for adopter to read bytes for %@
Adopter failed to read bytes for %@
accountServiceSignedToken
operationId
operationGroupId
transcodeServerPublicKey
Operation %@ was not provided a transcode server hostname
TranscodeServerPublicKeyURL
Server configuration did not contain CMP public key URL
Server configuration did not contain assetKeyEncryption URL info
Could not find assetKeyEncryption URL for template URL %@
Couldn't create URL from transcode server URL string: %@
Determining public key URL
Fetching cached public key data
Fetching remote public key data
TranscodeServerKeyCertificate
1.2.840.113635.100.6.2.17
1.2.840.113635.100.6.68
ProtocolNamme
SelectorName
isCompletionCallback
ArgumentTypes
CKDLongLivedOperationPersistedCallback.m
Selector %@ not part of expected protocol %@
Unexpectedly nil reply block for -[%@ %@]
Unsuitable object type %@ for -[%@ %@]
Argument-%lu
v24@?0Q8Q16
v16@?0@"NSInvocation"8
data
encryptedData
encryptedAsset
Assets.db
itemID
lastUsedTime
volumeIndex
fileID
generationID
path
status
modTime
fileSize
chunkCount
ITEMID
assetHandleExistsInDatabase
itemID == $ITEMID
assetHandleWithUUID
saveStatus
saveChunkCount
saveLastUsedTime
oldestLastUsedTime
saveStatusAndChunkCount
STATUS
assetHandlesWithStatus
status=$STATUS
FILE_SIGNATURE
interruptedAssetWithSignature
fileSignature = $FILE_SIGNATURE AND status = $STATUS
volumeUUID
v24@?0@"CKDAssetVolume"8^B16
AssetHandle
AssetVolume
open failed at %@: %d (%s)
fcntl(F_GETPATH) failed at %@: %d (%s)
fstatfs failed at %@: %d (%s)
getattrlist on %s failed: %d (%s)
paths don't match: %@ != %@
-[CKDAssetCache drop]_block_invoke_2
CKDAssetCache.m
checkoutCount > 0
-[CKDAssetCache _deleteAssetHandlesAndUnregisterItemsForUnmountedAssetVolumes]
INDEX
UNREGISTERING
UnmountedVolumeSearch
volumeIndex=$INDEX AND status!=$UNREGISTERING
UnmountedVolumeDelete
volumeIndex=$INDEX
-[CKDAssetCache clearForced:]_block_invoke
-[CKDAssetCache clearAssetCache]_block_invoke
-[CKDAssetCache checkAssetHandlesForRegisteredMMCSItems:]_block_invoke
cachedAndRegistered
-[CKDAssetCache showAssetCache]_block_invoke
%@, %@, %@, %@, %@, %@
not found
modified
%0.2f
expected but missing
none expected
-[CKDAssetCache unregisterItemsAndDeleteUnregisteredAssetHandlesWithIDs:deleteUnregisteredAssetHandlesWithIDs:]
MMCS && "nil MMCS object"
performUnregisterItemsAndDeleteUnregisteredAssetHandlesWithIDs
status = %ld AND (itemID = $K1 OR itemID = $K2 OR itemID = $K3 OR itemID = $K4 OR itemID = $K5 OR itemID = $K6 OR itemID = $K7 OR itemID = $K8)
v16@?0@"NSNumber"8
Expected non-nil data
Invalid path
Expected non-nil MMCS items array
Expected non-nil signature for %@
Invalid signature for zero size file
-[CKDAssetCache _getAssetHandlesForCachedButNotRegisteredMMCSItems:error:]
fileMetadata.fileSize.unsignedLongLongValue == 0 && "Expected fileMetadata.fileSize.unsignedLongLongValue == 0"
Expected non-nil error
-[CKDAssetCache updateAssetHandlesForRegisteredMMCSItems:error:]_block_invoke
MMCSItem.itemID != 0 && "MMCSItem.itemID != 0"
File appears to have changed during registration
Stale chunk state found during registration
-[CKDAssetCache updateAssetHandlesForChunkedMMCSItems:error:]_block_invoke
-[CKDAssetCache updateAssetHandlesForGetMMCSItems:error:]_block_invoke
MMCSItem.itemID != 0 && "0 itemID"
MMCSItem.fileURL && "nil MMCSItem.fileURL"
-[CKDAssetCache updateAssetHandlesForPutMMCSItems:error:]_block_invoke
Expected non-nil cached but not registered MMCS items
Expected non-nil file download path
-[CKDAssetCache trackCachedButNotRegisteredMMCSItems:error:]_block_invoke
handles and items count don't match
rename failed: %d (%s)
no asset handles
v32@?0@8@"NSMutableArray"16^B24
chunkCount != NULL AND chunkCount > 0 AND volumeIndex = $VOL AND status = $STATUS AND fileID IN %@
-[CKDAssetCache startTrackingRegisterOrPutAssetHandles:operationType:error:]_block_invoke
Expected nil itemID
v24@?0@8@"NSArray"16
-[CKDAssetCache startTrackingGetAssetHandles:operationType:error:]_block_invoke
nil assetHandle.fileSignature
-[CKDAssetCache deferredStopTrackingAssetHandlesByItemIDs:]_block_invoke
-[CKDAssetCache unregisterDeferredItemIDs:andDeleteAssetHandles:]_block_invoke
itemID IN %@
-[CKDAssetCache updateDeferredLastAccessTimeForUUIDs]_block_invoke
updateDeferredLastAccessTimeForUUIDs
UUID=$UUID
v32@?0@"NSUUID"8@"NSDate"16^B24
-[CKDAssetCache stopTrackingAssetHandlesByItemIDs:]_block_invoke
-[CKDAssetCache findAssetHandleForItemID:error:]_block_invoke
couldn't find item ID %llu
-[CKDAssetCache deferredUpdateLastTimeUsedForUUID:]_block_invoke
-[CKDAssetCache assetHandleWithCachedPath:]_block_invoke
should have thrown by now
-[CKDAssetCache _scheduleEvictionForDownloadedFiles]_block_invoke
v16@?0@"NSTimer"8
-[CKDAssetCache _evictDownloadedFilesWithEvictionInfo:]
Skipped evicting
Would skip evicting
Evicting
Would evict
evictByLastUsedTime
Removing
Would remove
Evicted
Would have evicted
EXPIRYDATE
NOT_REGISTERED
_expireAssetHandlesWithExpiyDate_delete
status=$NOT_REGISTERED and lastUsedTime < $EXPIRYDATE
REGISTERED
INTERRUPTED
assetsToExpire
(status=$REGISTERED OR status=$INTERRUPTED) AND lastUsedTime < $EXPIRYDATE
-[CKDAssetCache _resetAssetInflight]
REGISTERING
_resetAssetsInFlightSearch
status=$REGISTERING OR status=$UNREGISTERING
_resetAssetsInFlightDelete
_resetAssetsInFlightResetUploading
_resetAssetsInFlightResetDownloading
-[CKDAssetCache setupPersistentStateAtStartup]_block_invoke
, %@
CKDRecordFetchAggregator.m
Fetch info isn't in the needs callback state: %@
Calling back for record %@ without a fetched record or an error: %@
fetchOrder=%lu
state=%@
hasRecord=%@
etag=%@
com.apple.cloudkit.fetchAggregator.fetchQueue
notStarted=%lu
waitingForFetch=%lu
fetchingFromServer=%lu
needsCallback=%lu
finished=%lu
fetchInfos (%@) = %@
Can't send a fetch request when another one is still outstanding
/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/Daemon/Operations/Database/CKDRecordFetchAggregator.m
Trying to invoke the record fetch completion block on completed operation %@ with record %@ and record ID %@%@%@
Didn't get any fetch infos for record with ID %@
We didn't get a callback for record %@
A fetch info with order %lu already exists. %@
Can't enqueue a new fetch after we've already finished
Can't fetch a record without a record ID
Failed to initialize fetchInfo
You can't finish a CKDRecordFetchAggregator twice
Waiting For Fetch
Needs Callback
com.apple.cloudkit.recordfetchaggregator
v20@?0B8@?<v@?>12
client
Connection %@ is not allowed to use the system cloudd.
Connection %@ is not allowed to set custom account info
Connection %@ is not allowed to set its application bundle identifier without the %@ entitlement
Connection %@ is not entitled to use CloudKit
Trying to initialize a container without an application ID
Client and daemon processes have different versions of CloudKit.framework in memory: <%@> vs. <%@>
CloudKitTestingDaemon.CKDTestServerManager
-[CKDXPCConnection getTestAdminDaemonProxyCreatorWithCompletionHandler:]
CKDXPCConnection.m
Couldn't find CKDTestServerManager in test process
NO_DEVICE_ID
/dev/null
Couldn't get connection to client
Error fetching web auth token from server: %@
clientError
serverError
extensionError
auxiliaryError
retryAfterSeconds
errorDescription
errorInternal
BuildVersion
%@/%@
com.apple.CloudKit
Expected non-nil path
Expected non-nil applicationBundleID
CKDMMCSEngineContext queue
Expected refCount=0 (%ld)
state=%ld, refCount=%ld
applicationBundleID=%@
Expected state %ld for MMCS engine context
Expected nil MMCS engine for MMCS engine context %@
Error creating MMCS directory at %@
com.apple.Dataclass.CloudKit
MMCSEngineCreate failed
Expected non-nil MMCS engine
Expected to be serialized
-[CKDMMCSEngineContext nextAvailableItemID]
CKDMMCSEngineContext.m
0 && "itemID overflow"
void runSerialized(void *, __strong dispatch_block_t)
Expected a non nil CKDMMCSEngineContext
metricObject
Expected non-nil itemID for %@
Expected non-nil MMCS engine wrapper for %@
Expected non-nil asset cache for %@
-[CKDMMCSItemGroupContext _setupRegisterMMCSItemsWithError:]
CKDMMCSItemGroupContext.m
isRegister && "isRegister"
assetHandle.fileSize.unsignedLongLongValue == 0 && "assetHandle.fileSize.unsignedLongLongValue == 0"
-[CKDMMCSItemGroupContext _setupPutMMCSItemsWithError:]
!isGet && "isGet"
-[CKDMMCSItemGroupContext updateProgressForPackageSectionState:progress:results:]
item && "nil self.MMCSPackageSectionItem"
Fetching asset failed
CKOperation was gone on MMCS callback.
Failed to open downloaded file.
Failed to get metadata for downloaded file.
Failed to finish downloaded file.
-[CKDMMCSItemGroupContext didGetItemID:signature:path:error:results:]
item.trackingUUID && "item.trackingUUID"
item.signature && "item.signature"
Moving downloaded asset failed
Failed to set destination fileURL
Getting file metadata for downloaded asset failed
File size mismatch for item %@ : %@ != %@
File size mismatch for item %@ : %@ > %@
Unknown error completing item %@
Saving asset failed
Expected either an error or a putReceipt on the completion of the upload
-[CKDMMCSItemGroupContext didPutSectionWithSignature:results:]
Expected non-nil MMCS for %@
delegate said no
not an itemTypeHint
not an itemDescription
nil reader
Unable to open file for MMCSItem:%@ itemID:%llu on unmounted volume with volumeIndex=%@
Invalid arguments, MMCSItem:%@, itemID:%llu, UUID:%@
Operation not supported
CKDMMCSItemReaderOpen_block_invoke
assetCache && "Expected non-nil asset cache"
index
is_reversed
PreflightRecords
Serialize
CKDSerializeRecordModificationsOperation does not support records with asset values
-[CKDSerializeRecordModificationsOperation _setupTranslator]_block_invoke
CKDSerializeRecordModificationsOperation.m
Internal error transforming record %@
v32@?0@"NSString"8@"CKMergeableRecordValue"16^B24
-[%@ init] is unavailable
applicationBundleIdentifier
applicationBundleIdentifierForContainerAccess
applicationBundleIdentifierForNetworkAttribution
applicationBundleIdentifierForPushTopicGeneration
applicationBundleIdentifierOverrideForTCC
/api/client/container/delete
shareIdentifier
changeType
publicAccess
invitedPcs
participant
shortTokenRoutingKey
potentialMatch
invitedKeyToRemove
publisherModel
anonymousPublicAccess
displayedHostname
publisherModelType
participantSelfRemovalBehavior
origin
participantsSeeAccepted
readOnlyCannotSeeReadOnly
selfAndOwner
anonymousPublic
setInvited
setUnsubscribed
removeFromShare
containerID=%@, applicationBundleIDs=%@, discoverable=%ld
localizedError
Email:%@---Password:%@
Email:%@---Hash:%@
Fake account was asked to refresh account properties. This is unsupported
deleteType
isAnonymous
anonymousZoneInfo
updated
deleted
userPurged
userDidResetEncryptedData
languageCode
regionCode
Preflighting request records
Waiting for client to serialize request
Retrieving CKCode Function invocation results
Waiting for client to deserialize response
Postflighting response records
Invalid record archive: %@
Cannot send two records for the same record ID in the same request: %@
Request has protected envelopes, but no data protection type: %@.%@
Request with protected envelopes and SGX data protection type must have a permittedRemoteMeasurement: %@.%@
Request with protected envelopes and trusted target data protection type must have target domain and OID: %@.%@
Cannot set shouldSendRecordPCSKeys without data protection. Please specify a dataProtectionType on your operation.
SkipAttestation
Did not receive attestation from server
Could not verify attestation using the permittedRemoteMeasurement provided
Failed to wrap invocation key
AllowSendingRecordKeysForCMP
SendFakeEncryptedMasterKeysInRecordTransports
v32@?0@"CKRecord"8Q16^B24
Error %@ when invoking function %@ on service %@: %@
v24@?0@"NSData"8@"CKDPResponseOperationResult"16
ServerMessage
Error when locally invoking function %@ on service %@
v24@?0@"NSData"8@"CKCDPError"16
Invalid pRecord: %@
http
http://%@
Process not entitled to set explicit code operation url
http://127.0.0.1:31234
/api/client/atomBatch/save
delta
evaluationType
mutationTriggers
notification
recordTypes
fireOnce
trigger
sync
metasync
insert
update
remove
itemGroups=%@
insert_into_list
delete_list_range
replace_list_range
zoneSummary
changedRecord
changedShare
pendingArchivedRecords
changedDeltas
syncObligations
inconsistent
consistent
noPendingChanges
/api/client/atomBatch/retrieveMetadata
File not readable
Failed reading package object from manifest
Failed reading section object from manifest
Failed reading item object from manifest
Package manifest is corrupt - section index %ld is out of bounds
Package manifest is corrupt - item boundary is not aligned with section boundary
@"CKPrettyError"8@?0
Package manifest is corrupt - section %lu contains %llu bytes, expected %llu bytes
Package manifest is corrupt - Expected %lu sections, found %lu
File not writable
Failed writing package object to manifest
Failed writing section object to manifest
Failed writing item object to manifest
You can't restart an executing or finished CKDPlaceholderOperation: %@
<%@ %p:%@>
realOperation
%s<%@(Placeholder) %@ 
(%@%@) 
 running for %@ (started %@) 
Fingerprint %@
Public ID %@
<PCSFPCopyDiagnostic returned NULL>
v32@?0@"CKRecordZone"8@"CKRecordZoneID"16@"CKDPResponseOperationResult"24
com.apple.cloudkit.sim
com.apple.cloudkit.test.sim
default
LogFacilityCK
LogFacilityPCS
LogFacilitySQL
STAT
LogFacilitySTAT
LogFacilityRequest
LogFacilityOP
LogStats
LogFacilityLogStats
Scheduler
LogFacilityScheduler
NotificationListener
LogFacilityNotificationListener
Engine
LogFacilityEngine
DataRepair
LogFacilityDataRepair
DiscretionaryDaemon
LogFacilityDiscretionaryDaemon
MockServer
LogFacilityMockServer
network.performance
summary
LogFacilityMMCS
MMCS
com.apple.c2
com.apple.mmcs
com.apple.chunkinglibrary
-[CKLEventFilter matchesEvent:]
CKLEventFilter.m
_categoriesBySubsystem && "_categoriesBySubsystem"
/api/client/asset/retrieve/token
uploads
authPutRequest
authPutType
authorizePut
reReference
authorizeClone
/System/Library/Frameworks/CloudKitTesting.framework/CloudKitTesting
/System/Library/PrivateFrameworks/CloudKitTesting.framework/CloudKitTesting
/AppleInternal/Library/Frameworks/CloudKitTesting.framework/CloudKitTesting
v8@?0
void *CloudKitTestingLibrary(void)
CKTestFrameworkLinking.m
Unable to find class %s
CKTestServerManager
Class getCKTestServerManagerClass(void)_block_invoke
com.apple.cloudkit.CKDServerConfigurationManager.notificationQueue
UnitTest
Default
%@-%@-%@-%@
v12@?0i8
com.apple.setmme.dnschanged
Operation's container was invalid when requesting container specific info: %@
CKDServerConfigurationManager.m
Unexpectedly-nil containerID for container %@
ForceFetchGlobalConfig
Unexpectedly-nil container for operation %@ 
com.apple.CloudKit.ShareBear
Global Configuration Manager (%lu running ops)
Global configuration operation: %@
Container specific operations:
queryResults
emailAddress
phoneNumber
/api/client/user/quota
/api/client/test/markAssetBroken
brokenAssetRecordID
listIndex
isPackage
affectedRecordType
skipWriteMissingAssetStatusRecord
Preparing Target Zone PCS
Saving Target Zone
FailZonePCSDecryptionOnZoneAggregation
Unit test Zone PCS decryption failure
Error fetching PCS data for zone %@
Couldn't get key IDs from zone PCS %@ for zone %@
Couldn't get PCS identity with key ID %@ from zone %@
Failed to add identity to the target zone PCS from zone %@
PCS_PREPARE_FAILURE
CKDAggregateZonePCSOperation.m
Only the target zone must be saved
CKErrorInternalPCSOplockFailed
recordID=%@, etag=%@, hasRecord=%@
@16@?0@"CKUserIdentityLookupInfo"8
expiresAfterSeconds
/configurations/internetservices/cloudkit/cloudkit-1.0.plist
downloadToken
downloadRequest
contentBaseURL
requestor
downloadBaseURL
downloadURLExpiration
downloadTokenExpiration
clearAssetKey
assetAuthorizationResponseUUID
constructedAssetDownloadURL
constructedAssetDownloadURLExpiration
constructedAssetDownloadEstimatedSize
reservedVoucher
userId
inviterId
createdInProcess
acceptTimestamp
outOfNetworkKeyType
acceptedTimestampDate
isOrgUser
protectionInfoPublicKey
keyHealth
inviteTimestampDate
isAnonymousInvitedParticipant
healthy
keylost
create table if not exists OperationInfo (
    operationID                   text primary key,
    applicationID                 text,
    personaID                     text,
    containerID                   text,
    accountID                     text,
    operationInfo                 blob,
    operationIsComplete           integer default 0,
    expirationDate                real,
    lastAttemptDate               real,
    retryNumber                   integer default 0
create index if not exists AppIDPersonaIDContainerIDAccountID on OperationInfo (applicationID, personaID, containerID, accountID);
create trigger if not exists DeleteOperationCallback
before delete on OperationInfo
for each row begin
  delete from Callback where operationID = OLD.operationID;
end;
create table if not exists Callback (
    operationID           text,
    callback              blob
create index if not exists OperationUUID on Callback (operationID);
OperationInfo
Callback
applicationID
personaID
accountID
operationInfo
operationIsComplete
expirationDate
lastAttemptDate
retryNumber
callback
CKDOperationInfoCache.m
Use -initWithDeviceContext:
CloudKitOperationInfo
com.apple.cloudkit.operationInfoCache
com.apple.cloudkit.operationInfoCacheDelegate
A valid delegate is already registered (%@) for operation ID %@
v16@?0@"<CKDOperationInfoDelegate>"8
v24@?0@"CKDLongLivedOperationPersistedCallback"8^B16
%@ = ?
v24@?0@"NSDictionary"8^B16
v24@?0@"<CKSQLiteDB>"8@?<B@?>16
%@ = 0
operationID = ?
%@ < ?
Only the default device context may register for operation info cache eviction
com.apple.cloudkit.operationInfoCacheEviction
StallGlobalConfigOperation
/api/client/pushUnregister
left
right
Invalid data received from server
CKDFetchArchivedRecordsURLRequest.m
Got a response for an unknown zone with request operation %@ %@
Error fetching archived records in zone %@: %@
Couldn't fetch record PCS from zone for record %@ from the server: %@
PCS fetch requested local cache only.
Couldn't fetch zone PCS for record %@ from the server: %@
Couldn't fetch zoneish PCS from zone for record %@ from the server: %@
PCS fetch requested local cache only
Couldn't fetch parent PCS (%@) or share PCS (%@) or any shared zone PCS (%@) for record %@ from the server
CKDPCSCacheRecordFetchOperation.m
We should have PCS data for record %@ by this point
We couldn't get zone PCS data for record %@
Failed to decrypt PCS data for record %@
We couldn't get any dependent PCS data to decrypt shared record %@
We don't have record PCS data for record %@
Couldn't decrypt chain PCS on record %@
ReturnWrappedEPSKForRecordPCS
Couldn't decrypt public sharing key on record %@
vettingError
isVettedToCaller
isVettedToOther
isLimitExceeded
loginRequired
cloudd_db
ClientData
Caches
AssetsDb
StagingAssets
Assets
Records
com.apple.test.container
FakeTestHash
SQLiteDBs
FakeTestStagingPathSuffix
Library
containerCloudKitDirectory
daemonCachesDirectory
packageStagingDirectory
containerDirectory
FakeUserResetEncryptedDataForZoneDelete
com.apple.cloudkit.PILSQueue
CKDPublicIdentityLookupService.m
Batch size is zero, we won't make any progress
host
port
longValue
fieldValues
listValues
boolType
longType
fieldType
/api/client/user/retrieve
/api/client/query/retrieve
query
<%@ %p> (Expires %@, Values %@)
containerOverrides
appleOverrides
bundleIds
pushTokenRegisterDays
assetKeyEncryption
cmpIdentityUrl
allowCmpOffloadForSeed
allowCmpOffloadForGM
maxBatchSize
expirationTimeout
allowExpiredDNSBehavior
c2Metrics.reportFrequency
c2Metrics.reportFrequencyBase
c2Metrics.clientOperationMetrics.reportFrequency
c2Metrics.clientOperationMetrics.reportFrequencyBase
c2Metrics.applicationMetrics.reportFrequency
c2Metrics.applicationMetrics.reportFrequencyBase
c2Metrics.allOperationMetrics.reportFrequency
c2Metrics.allOperationMetrics.reportFrequencyBase
c2Metrics.allOperationGroupMetrics.reportFrequency
c2Metrics.allOperationGroupMetrics.reportFrequencyBase
chunkProfileConfiguration.version
chunkProfileConfiguration.fileExtensionToProfileMap
chunkProfileConfiguration.defaultProfilePolicy
iCloudAppSiteAssociationData
maxInlineMergeableDeltaSize
suggestedMergeableDeltaSize
valuesData
expiry
UNIT_TEST_FAILED_LOOKUP_
Unit-test-requested error fetching share participant
GenerateOONPrivateKey
Error while generating private key for OON user identity: %@
Error fetching user identity for %@ from server: %@
Failed to fetch user identity for %@
This request was cancelled
lookupInfos=%@ + %ld more
lookupInfos=%@
Fetch Record
Touch Repair Zone (Fetch)
Touch Repair Zone (Create)
Break Asset
Call MarkAssetBroken
CKDMarkAssetBrokenOperation.m
Upload request configuration passed to cloudd should have resolved fields
FakeRecordType
FakeName
@16@?0@"CKAsset"8
Error marking asset as broken: %@
v24@?0@"CKRecordID"8@"CKDPResponseOperationResult"16
Attempting to break asset with missing base record
Could not find referenced asset
identifierForConstraintFailure
CKDAcceptSharesURLRequest.m
An anonymousCKUserID is required to accept share %@ when using anonymous to server share participants
Signature is only required for anonymous to server requests
A signing identity is required to accept share %@ when using anonymous to server share participants.
Invalid share
The share could not be converted because it is invalid: %@
atomicSaves
fetchChanges
ckql
sharingType
zoneSharing
hierarchicalSharing
hierarchical
zoneWide
configurationsByRecordZoneID
recordZoneIDs
shouldFetchAssetContents
assetTransferOptionsByKeyByRecordType
RecordNameForDecryptionFailureOnSync
Encountered a transient error fetching record %@. Please try again.
v32@?0@"NSDictionary"8Q16^B24
CKDFetchBatchedRecordsOperation.m
Expect subclass to implement
fetchAllZoneChanges
CKDFetchRecordZoneChangesOperation.m
v32@?0@"CKRecordZoneID"8@"CKDFetchZoneChangesRequestOperationResult"16^B24
fetchAllDatabaseChanges
v16@?0@"NSMutableArray"8
FailAnonymousShareDecryption
Unable to decrypt encrypted anonymous share.
v24@?0@"CKDAnonymousShareTuple"8@"NSError"16
down|%@
Fetch Records
Refetch Records
Prefetch Cloud Public Certs
Download Mergeable Values
Download Assets
Updating Records
CKDFetchRecordsOperation.m
Invalid desired key %@, which should have been caught earlier
/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/Daemon/Operations/Database/Records/CKDFetchRecordsOperation.m
Request with UUID %@ invoked progress callout after completion callout.  Progress recordID %@
v36@?0@"CKRecord"8@"CKRecordID"16B24@"CKDPResponseOperationResult"28
Failed to fetch PCS to decrypt mergeable values
Failed to create PCS data from fetched PCS while decrypting mergeable values
Error fetching record %@ from server: %@
TESTING_NO_RECORD_ERROR_OR_RECORDS_RETURNED
Expected non-nil record for operation %@
Invalid parameters to takeActionOnValue
v20@?0i8@12
shouldFetchAssetContentInMemory not for packages
No public cert key and no error
Expected non-nil record for asset %@
Expected non-nil download task for record %@
v16@?0@8
v24@?0@8d16
v24@?0@8@"NSDictionary"16
v24@?0@8@"NSError"16
Expected non-nil record for urlInfo %@
v24@?0@"CKDDownloadAssetURLInfo"8@"NSError"16
v32@?0@"CKRecord"8@"CKRecordID"16@"CKDPResponseOperationResult"24
Couldn't get PCS data from the server for %@ %@
Fetching PCS data from database
Fetching PCS data from server
Creating additional PCS data
Fetching dependent PCS blob for decryption
Decrypting PCS data
Saving PCS data to server
Saving PCS data to database
item
Error archiving record with ID %@: %@
Error marking as read notification %@: %@
v24@?0@"CKNotificationID"8@"CKDPResponseOperationResult"16
Fetching Shares
Updating Shares
Share %@ couldn't be upgraded
Couldn't get a short token for share %@
v3:%@:%@:%@
v1:%@:%@
Couldn't decrypt our per-participant PCS
v4:%@:%@:%@:%@
v2:%@:%@:%@
Couldn't get a per-participant key for share %@
Couldn't create a participant identity from the exported per participant key
Couldn't create a participant PCS from the exported per participant identity
Couldn't fetch a share with ID %@
Item with ID %@ was not a share
NoProtectectionInfoTagOnShareUpgrade
%@.%@.%@
You can't pass multiple instances of the same record to a CKModifyRecordsOperation
ForceSeparateRequestForMergeableDeltaUpload
DontRetryPCSFailures
B32@?0@"NSString"8@"CKPackage"16@"NSError"24
v28@?0B8@"NSSet"12@"NSSet"20
Determining iCloud Environment
Fetching Container-Scoped User ID
Fetching User Public Keys
Apply Side Effects
Mark Record Handlers As Uploaded
Prepare Parent PCS
Fetch Share PCS
Fetch Record PCS
Fetch Asset Records for ReReference
Modify Records
Prepare Records For Save
Upload Assets
Toposort Records
Verifying Record Encryption
Report Records In Flight
Fetching Share Participants
Uploading Mergeable Deltas
CKDModifyRecordsOperation.m
saveCallbackWithMetadata:error: called twice on %@
PreventRecordModifyRetries
Unexpected handler state in default zone %ld %ld %@
Record %@ will not be saved because of previous error in atomic zone
Record %@ will not be saved but can be retried as is
Unexpected handler state in failed atomic zone %ld %ld %@
Unexpected handler state in retryable atomic zone %ld %ld %@
v16@?0@"CKDModifyRecordHandler"8
Invalid list of records: %@
SkipToposortingRecords
SkipChainPCS
Should have a different error already
Re-referenced asset signature not found in source asset array
Can't handle fieldValue %@
assetReference
v32@?0@"NSString"8@"NSMutableArray"16^B24
FailedAssetsByFieldName
One or more referenced asset do not exist
Expected valid destination for CKAssetReference
Expected isRereferencedAssetUpload %@
Expected valid source for CKAssetReference
FailBoundaryKeyFetch
Couldn't fetch boundary key because the unit test asked for it
Expected non-nil handler for %@
Expected non-nil cached boundary key for operation %@
Expected a non-nil record for handler %@
We shouldn't get into this state if shouldOnlySaveAssetContent is true
Lost a recordID
Couldn't decrypt data on record %@
Couldn't decrypt record returned from the server in response to our save of record %@
Got a response for record with ID %@, but we didn't try to put that record.
Error saving share %@ to server: "%@"
Error saving record %@ to server: Protection data didn't match
Error saving record %@ to server: %@
Error deleting record %@: %@
Error saving mergeable delta for key '%@' on record %@: %@
Error replacing mergeable deltas: %@
v72@?0@"CKRecordID"8@"NSString"16@"CKDPDateStatistics"24@"NSDate"32@"CKDPResponseOperationResult"40@"NSSet"48@"CKRecord"56@"CKRecord"64
v32@?0@"CKRecordID"8@"NSString"16@"CKDPResponseOperationResult"24
We shouldn't get into this state if shouldModifyRecordsInDatabase is false
Long Lived Operation %@ may not save a record with a CKPackage value.  Found %@
SandboxFailureRoot
Long Lived Operation %@ may not save a record with asset %@, whose fileURL %@ is inaccessible. Note that your app should not be re-installed between enqueueing and resuming a LongLivedOperation, as your container directory will change (it's now %@)
Long Lived Operation %@ may not save a record with asset %@, whose fileURL %@ is inaccessible
If you're gonna fail our value check, there better be a reason
SaveIfServerRecordUnchanged
SaveChangedKeys
SaveAllKeys
v32@?0@"CKShare"8@"CKRecordID"16@"NSError"24
/api/client/subscription/delete
/api/client/privacy/reset
moveMarker
movedRecord
X-CloudKit-Container
X-CloudKit-Zones
X-CloudKit-App-BundleID
X-CloudKit-DeviceID
containerID=%@, applicationBundleIdentifierForNetworkAttribution="%@"
applicationSecondaryID="%@"
discretionary="%@"
duetPreClearedMode="%@"
automatically-retry-network-failures
allows-power-nap-scheduling
resumable-container-limp-mode
chunking-library-corruption-mode
list_field
Mock account was asked to refresh account properties. This is unsupported
Mock account was asked to validate vetting token. This is unsupported
%lld
MockICloud.com
mock-icloud.com
TestDevice is withholding credentials for account
CKAuthToken-%@
ICAuthToken-%@
com.apple.Dataclass.CKCodeService
icloud_gateway_url
https://gateway.icloud.com:443/ckcoderouter
https://mock-code.icloud.com:443
com.apple.Dataclass.CKDatabaseService
https://gateway.icloud.com:443/ckdatabase
https://mock-database.icloud.com:443
com.apple.Dataclass.CKDeviceService
https://gateway.icloud.com:443/ckdevice
https://mock-device.icloud.com:443
com.apple.Dataclass.CKMetricsService
https://mock-metrics.icloud.com:443
com.apple.Dataclass.CKShareService
https://gateway.icloud.com:443/ckshare
https://mock-share.icloud.com:443
Error fetching versions for record %@ from server: %@
v36@?0@"CKRecordID"8B16@"NSArray"20@"CKDPResponseOperationResult"28
com.apple.cloudkit.pdsclient
CKPDSOrphanedUserCheck
com.apple.cloudkit.cloudd
clouddocs
%@%@.%@
com.apple.icloud-container.
No DSID at push registration time
Invalid container at PDS registration time
@"NSString"16@?0@"ACAccount"8
No DSID at push unregister time
Invalid container at PDS unregistration time
serializedResult
attestationResponse
save_records
delete_recordids
associated_mergeable_deltas
@16@?0@"CKMergeableValueID"8
CKDFetchMergeableDeltaMetadataURLRequest.m
An anonymousCKUserID is required to fetch metadata for %@ when using anonymous to server share participants
Expected non-nil value ID for response %@
Unable to parse delta metadata from server response
Unable to parse delta metadata
CKDDaemonProcess.m
Not expected to have a current process here
system
test
debug
Incompatible env and cli arguments for using debug
Incompatible env and cli arguments for supporting test hooks
message
auxiliaryDomain
auxiliaryCode
auxiliaryUserInfo
targetPartition
FUNCTION_TIMEOUT
FUNCTION_ERROR
INTERNAL_ERROR
INVALID_PARTITION
CKTCCDatabaseChanged
ewogICJhcHBsaW5rcyI6IHsKICAgICJkZXRhaWxzIjogWwogICAgICB7CiAgICAgICAgImFwcElEIjogImNvbS5hcHBsZS5DbG91ZEtpdC5TaGFyZUJlYXIiLAogICAgICAgICJjb21wb25lbnRzIjogWwogICAgICAgICAgICB7ICIvIjogIi9wYWdlcy8qIiB9LAogICAgICAgICAgICB7ICIvIjogIi9udW1iZXJzLyoiIH0sCiAgICAgICAgICAgIHsgIi8iOiAiL2tleW5vdGUvKiIgfSwKICAgICAgICAgICAgeyAiLyI6ICIvaWNsb3VkZHJpdmUvKiIgfSwKICAgICAgICAgICAgeyAiLyI6ICIvc2hhcmUvKiIgfSwKICAgICAgICAgICAgeyAiLyI6ICIvbm90ZXMvKiIgfSwKICAgICAgICAgICAgeyAiLyI6ICIvcGhvdG9zLyoiIH0sCiAgICAgICAgICAgIHsgIi8iOiAiL3JlbWluZGVycy8qIiB9LAogICAgICAgICAgICB7ICIvIjogIi92LyoiIH0KICAgICAgICBdLAogICAgICAgICJhbHdheXNFbmFibGVkIjogdHJ1ZQogICAgICB9CiAgICBdCiAgfQp9Cg==
Preferences/com.apple.jett.Switch.plist
latest_selections
environment_identifier
(Automatic)
%@=%@
FrameworkCaches
Library/Caches/CloudKit
NSString * _Nonnull CKGetDataSeparatedVolumeCacheDirectory(void)
CKDDaemonUtils.m
Unexpectedly-nil cache dir for persona id %@
NULL serverPublicKeyObj
nil publicKey
nil certData
CCECCryptorImportPublicKey failed: NULL
Could not encode uri %@ to UTF-8
SecKeyCreateEncryptedDataWithParameters NULL error
CKDAcceptSharesOperation
CKDAggregateZonePCSOperation
CKDBatchFetchUserPrivacySettingsOperation
CKDCodeFunctionInvokeOperation
CKDCompleteParticipantVettingOperation
CKDDatabaseOperation
CKDDecryptRecordsOperation
CKDDiscoverUserIdentitiesOperation
CKDDownloadAssetsOperation
CKDFetchDatabaseChangesOperation
CKDFetchNotificationChangesOperation
CKDFetchRecordAncestorsOperation
CKDFetchRecordVersionsOperation
CKDFetchRecordZoneChangesOperation
CKDFetchRecordZonePCSDiagnosticsOperation
CKDFetchRecordZonesOperation
CKDFetchRecordsOperation
CKDFetchShareMetadataOperation
CKDFetchShareParticipantKeyOperation
CKDFetchShareParticipantsOperation
CKDFetchSubscriptionsOperation
CKDFetchUserQuotaOperation
CKDFetchWebAuthTokenOperation
CKDFetchRegisteredBundleIDsOperation
CKDFetchUserPrivacySettingsOperation
CKDGlobalConfigurationOperation
CKDInitiateParticipantVettingOperation
CKDMarkNotificationsReadOperation
CKDMescalSessionOperation
CKDModifyBadgeOperation
CKDContainerSpecificInfoOperation
CKDModifyRecordAccessOperation
CKDModifyRecordZonesOperation
CKDModifyRecordsOperation
CKDModifySubscriptionsOperation
CKDModifyWebSharingOperation
CKDOperation
CKDPlaceholderOperation
CKDLongLivedCallbackRelayOperation
CKDPublishAssetsOperation
CKDQueryOperation
CKDRepairZonePCSOperation
CKDResetUserPrivacySettingsOperation
CKDSaveUserPrivacySettingsOperation
CKDUploadAssetsOperation
CKDFetchBatchedRecordsOperation
CKDFetchArchivedRecordsOperation
CKDAssetTokenRequestOperation
CKDDiscoverAllUserIdentitiesOperation
CKDFetchRecordChangesOperation
CKDFetchUserRecordOperation
CKDArchiveRecordsOperation
CKDFetchRecordPCSDiagnosticsOperation
CKDOperationInfoHolderOperation
CKDFetchTranscodeServerPublicKeyOperation
CKDRepairAssetsOperation
CKDMarkAssetBrokenOperation
CKDUpdateMissingAssetStatusOperation
CKDMarkAssetBrokenURLRequestWrapperOperation
CKDAddAnonymousShareToSharedDBOperation
CKDRemoveAnonymousShareFromSharedDBOperation
CKDFetchMergeableDeltasOperation
CKDFetchMergeableDeltaMetadataOperation
CKDReplaceMergeableDeltasOperation
CKDUploadMergeableDeltasOperation
CKDMovePhotesOperation
CKDMapShareURLsToInstalledBundleIDsOperation
CKDSerializeRecordModificationsOperation
CKDDeserializeRecordModificationsOperation
*.icloud.com
*.icloud.com.cn
icloud.com
icloud.com.cn
Generated PCS key ID not found in PCS for record %@
void _CKRegisterXPCActivity(const char *, __strong os_activity_t, NSDictionary *__strong, void (^__strong)(void))
You shouldn't be registering XPC activities in daemons
You shouldn't be registering XPC activities from non-system binaries
v16@?0@"NSObject<OS_xpc_object>"8
CKRecordZonePCS
CKZoneishPCS
CKRecordPCS
PrivatePCS
PublicPCS
action
incomplete
CKDFetchRecordZoneChangesURLRequest.m
An anonymousCKUserID is required to fetch record zone changes in %@ in the shared database when using anonymous to server share participants
Failed to parse record ID
Failed to parse record type
Failed to get record field key
Failed to get mergeable ID from mergeable delta
Failed to parse mergeable value ID
Expected encrypted=%d on all mergeable deltas for %@
Failed to parse mergeable delta
Error fetching changes in zone %@: %@
CKDBackingAccount must be subclassed
%@ must be subclassed in class %@
Can't return account credentials for nil account
Can't return account credentials for account %@ because the account needs to verify new terms or is in suspended mode.
Didn't get account credentials for account %@ with no error
Couldn't get cloudKitAuthToken from credential
Couldn't get iCloudAuthToken from credential
apsEnv
CKDBackingAccount.m
Expected to be overridden in subclass
Failed to renew account credential
User rejected a prompt to enter their iCloud account password
No account exists
VETTING_PASSWORD_DIALOG_TITLE_IOS
com.apple.machelp
mchl267b6234
v24@?0@"NSDictionary"8@"NSError"16
cloudSharingURLHostname
com.apple.cloudkit.device-count
deviceCountFetchDate
v24@?0Q8@"NSError"16
Failed to fetch device list
Bad response from AppleAccount
v32@?0@"AARequest"8@"AAResponse"16@"NSError"24
Credential renewed
Renewal failed
Renewal rejected by user
missingAssetStatusRecord
Throttle
ThrottleReset
com.apple.cloudkit.BackgroundConnectionPool
manifest
sections
allAssets
/api/client/record/sync
requestedChangeTypes
ignoreCallingDeviceChanges
includeMergeableDeltas
records
shares
recordsAndShares
@16@?0@"CKReplaceDeltasRequest"8
CKDReplaceMergeableDeltasURLRequest.m
An anonymousCKUserID is required to replace deltas for %@ when using anonymous to server share participants
Expected non-nil replacement request for response: %@
Checking PCS Identity
Updating Zone PCS
UpdateBreakerZone
ZonePCSIdentityRollPartialFailure
Partially failing zone identity update because unit tests
RollZoneishMasterKeyOnFetch
RollZoneAndZoneishPCSForShareDelete
RollZoneIdentityOnFetch
ZoneKeyRollDisallowed
ZoneKeyRollAllowed
testUpdatingZonePCSAfterIdentityRoll
ShouldNotKeyRoll
CKDFetchRecordZonesOperation.m
Did not expect a key roll
Error fetching record zone %@ from server: %@
OverrideZonePCSModificationDate
FailZonePCSDecryptionOnZoneFetch
EncryptionBreaker
Error fetching all record zones from server: %@
scope: %@
%@.Anonymous
PCSCache
itemType
CKDPCSData
parentID
ZONE
ACCOUNT
SERVICE
deletePCSDataForZone
zoneID = $ZONE AND accountID = $ACCOUNT AND serviceName = $SERVICE
SHARE
deletePCSDataForShare
shareID = $SHARE AND accountID = $ACCOUNT AND serviceName = $SERVICE
IDENTIFIER
TYPE
deletePCSDataForID
identifier = $IDENTIFIER AND databaseScope = $SCOPE AND itemType = $TYPE AND accountID = $ACCOUNT AND serviceName = $SERVICE
PCSDataLookup
v24@?0@"CKSQLiteTableGroup"8^B16
PCSSQLCache
setPDSData
[Hit rate %0.2f%% (%lu/%lu)]
You must call -[%@ initWithRecord:callbackQueue:]
CKDDecryptRecordsOperation.m
You can't decrypt a nil record
You must specify a callback queue
Operation %@ has already been marked to finished. You can't enqueue any more decrypts
Faking decryption failure on record because you asked for it
Decrypt operation %@ was cancelled
Record %@ has items that require encryption but no protection data was found on the record
Couldn't create a sharing identity
Couldn't unwrap record PCS with web sharing PCS
Record %@ has items that require encryption but no share protection data was found
Record %@ has items that require encryption but no zone protection data was found
 - record has no protection data
Record %@ has items that require encryption but no protection data was found: %@
Record %@ has items that require encryption but no protection data was found
Couldn't unwrap chain PCS on parent %@
Record %@ has items that require encryption but no protection data was found for parent %@
Record %@ has items that require encryption but no shared zone protection data was found
You can't decrypt a record in the public database
Error unwrapping asset key with PCS %@ for record %@
Couldn't get a PCS object for record %@
Couldn't get a PCS object for the record %@. 
Decrypt operation %@ finished but there were still outstanding decryptions
You can't finish a decrypt operation twice
Encountered a transient error fetching protection data for record %@. Please try again.
CKDFetchMergeableDeltasURLRequest.m
An anonymousCKUserID is required to fetch %@ when using anonymous to server share participants
Expected non-nil mergeable ID for response %@
Failed to load fetched delta
failed to create database: %@
-[CKDLogicalDeviceContext testServer]
CKDLogicalDeviceContext.m
No such test device at %@
__live_device__
Detached test servers don't have a filesystem presence
CloudKitCaches
Detached test servers don't have metadata caches
Detached test servers don't have operation info caches
Detached test servers don't have throttle managers
Detached test servers don't have token registration schedulers
up|%@|%@
CKDPCSIdentityManager.m
No serviceName provided to _copyIdentityForService
Can't fetch identity, no account dsid available
Manatee is not available for explicit-credential accounts
CoreCDP failed to check manatee availability
Manatee is not available for the current account
Identity cache missed an invalidation, dsid of backing account has changed
Can't create a diversified identity with no server entropy
Couldn't get a %@ identity set
Couldn't get a %@ identity
Couldn't create a diversified %@ identity
Couldn't get a diversified identity for service %@
Couldn't get a %@ identity to add to the share PCS
Couldn't copy a public identity for our current user
Couldn't fetch identity set for service %@ to add to a mutable identity set.
Couldn't copy current identity for service %@ to add to a mutable identity set.
Empty dictionary returned while copying identities. Can't add identities for %@ to mutable identity set.
Couldn't add app-specific service identity (%@) to new identity set: %@
No account DSID, so we can't create an identity
Couldn't create a new identity set
Couldn't fetch PCS identities from stingray
Couldn't fetch identity set for service %@ to add to a new identity set.
Couldn't copy current identity for service %@ to add to a new identity set.
Couldn't create a mutable identity set for service: %@
Account %@ is not a CKDBackingExplicitCredentialsAccount
Error fetching iCloud auth token
com.apple.Dataclass.KeychainSync
escrowProxyUrl
com.apple.Dataclass.Ubiquity
Couldn't setup PCS identities from stingray
Couldn't get a public identity
Couldn't roll PCS identities for service %@
Rolling PCS identities for service %@ was unsuccessful
Account %@ is not a CKDBackingMockAccount
Error unarchiving a mock PCS service identity
@24@?0@8@16
Couldn't create a sharing identity from public key %@
Couldn't create data from web sharing identity %@
Couldn't create a sharing identity from data %@
ForceSecurityErrorOnIdentityValidation
NSCocoaErrorDomain
The connection to service named com.apple.securityd.general was invalidated.
MasqueradeAsManateeIdentity
SetManateeUnavailable
RefetchPCSIdentitySet
Identity Set: %p
Primary service name: %@
Current key: %p
public-key: %@
keyid: %@
manatee: %@
is public identity
No current key for the given service name.
Additional public keys (%lu):
fileSignature=%@
referenceSignature=%@
size=%@
uploadTokens
authPutResponse
contentResponseHeaders
Fetching Share Metadata
Fetching Accepted Shares
Preparing Share Metadata
Decrypting Share Metadata
Processing Potential Anonymous Shares
Accepting Shares
Error accepting share %@: %@
CKDAcceptSharesOperation.m
OON Participants not supported in manatee
Public sharing not supported in manatee
Public sharing not supported when using anonymous to server share participants
OON participants not supported when using anonymous to server share participants
AcceptA2AShareUsingVersionOneAnonymousIdentifier
Couldn't generate an anonymous userID to accept share at %@
Share does not have the signingPCS to generate a signature for accepting share at %@
Couldn't get a private identity from the signingPCS for accepting share at %@
v32@?0@"NSURL"8@"CKShare"16@"CKDPResponseOperationResult"24
Fetched share metadata didn't have a share ID
Couldn't fetch accepted share from the server
Couldn't get a diversified %@ identity to accept share at %@
Cannot accept share %@ as an out-of-network participant
Can not accept share at URL %@ because we couldn't decrypt the share as an invited user
Can not accept share at URL %@ because participant type %ld is unsupported
Can not accept share at URL %@: vetting of the invited email is needed
Error accepting share at URL %@: No manatee sharing invitation blob provided
Error accepting share at URL %@: %@ participant tried to accept share
Error accepting share at URL %@: Protection data didn't match
/api/client/pushRead
uuid
@16@?0@"CKRecordID"8
@16@?0@"CKDPRecord"8
@"NSArray"16@?0@"CKMovePhotosChange"8
CKDMovePhotosURLRequest.m
An anonymousCKUserID is required to move record %@ into the shared database when using anonymous to server share participants
NoRecordProtectionInfoOnSaves
Invalid values in record
The record could not be encoded because it has invalid values
CKDMMCSPackageSignatureGenerator.m
Attempted to update an invalidated signature generator
encryptedInvocationKey
protectionSource
keyVersion
scheme
unspecified
cloudMediaProcessing
CKDProtocolTranslator.m
Without a user id, this translator won't do what you want
userName
pIdentifier.name
pIdentifier.value.name
Invalid field value type
identifier.name
Convincing clang
No zone ID for mergeable value
Trying to create a mergeable value proto without a mergeable value ID
Missing mergeable delta metadata: %@
Failed to parse asset from server
Unknown or missing mergeable delta payload
No encrypted data on delta %@
Failed to get data from mergeable delta %@
No metadata on delta %@
No identifier in delta metadata proto
Missing protection info for delta metadata
No version vectors in delta metadata proto
Missing authentication tag for timestamps
No envelope on metadata: %@
No version vectors in delta metadata
Unknown error %@
Subscription from server didn't have a record type
Subscription from server didn't have a predicate
Subscription from server didn't have a zone id
zoneName
com.apple.hardcoded.bundleid
participantID
Unknown lookup field in CKUserIdentityLookupInfo: %ld
CKDFetchRecordsURLRequest.m
An anonymousCKUserID is required to fetch %@ in the shared database when using anonymous to server share participants
v32@?0@"NSString"8@"CKDPRequestedListField"16^B24
Non-indexed desired key %@, which should have been caught earlier
Invalid record
Failed to read server response: %@
timestamps
timestampsAuthTag
replacedDeltaIdentifiers
Replace Deltas
@"NSArray"16@?0@"CKReplaceDeltasRequest"8
Error performing replace deltas request: %@
/api/client/container/getBundles
RecordType
ZoneID
PCSData
Etag
KeyID
ParentID
RecordZoneID
RecordShareID
ChainPCS
ChainPrivateKey
PublicSharingKey
ChainParentPublicKeyID
ZoneishPublicKeyID
ZoneishPCSData
ZonePCSModificationDate
PublicPCSData
PublicPCSEtag
MyParticipantPCS
MyParticipantPermission
MyParticipantType
PublicPermission
ShareEtag
ServiceType
itemID=%@, etag=%@
, pcs=%@
, pcsData=%@
, encryptedChainPCSPrivateKey=%@
, recordType=%@
, chainPCSData=%@
, publicPCS=%@
, publicPCSData=%@
, publicPCSEtag=%@
, shareEtag=%@
discoverable
CKAssetVolume
volumeIndex=%@
volumeUUID=%@
numericValue
Identifier
-[CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptionsHeaderInfo writeTo:]
CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptionsHeaderInfo.m
serviceType
config
PUSH
DATABASE
CONTENT
CALDAV
ESCROWPROXY
QUOTA
duration
unset
setDuration
setExpiration
/api/client/privacy/user_batch_lookup
startDate
queueing
bytesUploaded
bytesDownloaded
connections
connectionsCreated
recordsUploaded
recordsDownloaded
recordsDeleted
assetsUploaded
assetsUploadedFileSize
assetsDownloaded
assetsDownloadedFileSize
retries
requestCount
requestOperationCountsByType
totalBytesByChunkProfile
chunkCountByChunkProfile
fileCountByChunkProfile
CloudKitMetrics
startDate=%@, duration=%0.3f, queueing=%0.3f, executing=%0.3f, bytesUploaded=%lu, bytesDownloaded=%lu, requests=%lu, connections=%lu, connectionsCreated=%lu
(UNKNOWN)
Executing
Queueing
Other
startDate=%@, duration=%0.3f, state=%@
cloudKitMetrics=%@
MMCSMetrics=%@
CKDProxyPCSManager.m
-[CKDPCSManager %@] was called in a container that should never ever ever use PCS.
Call _addAnonymousShareToSharedDB
B16@?0@"CKRecord"8
CKDModifyRecordsURLRequest.m
An anonymousCKUserID is required to modify record %@ in the shared database when using anonymous to server share participants
An anonymousCKUserID is required to delete record %@ in the shared database when using anonymous to server share participants
FakeErrorDuringMergeableProtoGenerationDeltasToSave
This is a fake error
FakeInvalidMergeableValueID
FakeErrorDuringMergeableProtoGenerationReplacementDeltas
bundleIdentifier=%@, containerIdentifier=%@, uuid=%@
serializationFormat
clientConfig
accountConfig
requestContext
authInformation
DataProtection
PROTO
JSON
changedZones
hasPendingChanges
syncComplete
clientVersionETagMatch
databaseType
invernessServiceName
invernessFunctionName
-[CKDVolume initWithVolumeUUID:deviceID:mountToPath:]
CKDVolume.m
volumeUUID && deviceID && "volumeUUID && deviceID"
mountPath=%@
@"NSArray"16@?0@"CKDAssetRecord"8
zone=%@
recordCount=%llu
isPackageSectionBatch
Fetch Asset Metadata
CKDRepairAssetsOperation.m
recordIDToUUID can never produce a nil value here
package
Expected non-nil asset or package in %@
Expected non-nil metadata for asset or package %@ in %@
Wrong amount of repair records to update: %ld
Updating multiple records currently not supported
You must call -[%@ initWithContainer:]
com.apple.cloudkit.pcs.fetchAggregator
ForceNoQueuedFetchCycleDetection
ForceNoQueuedFetchReuse
CKDPCSFetchAggregator.m
I am my parent?
DelayPCSRecordFetch
com.apple.cloudkit.DelayPCSRecordFetch
Record with ID %@ is not a share
/api/client/zone/sync
maxChangedZones
fetchArchivedRecords
CKDFetchArchivedRecordsOperation.m
Not expected to get here
v32@?0@"CKRecordZoneID"8@"CKDFetchArchivedRecordsRequestOperationResult"16^B24
v16@?0@"CKRecord"8
UnDefInEd
registering
uploading
registered
downloading
downloadInterrupted
downloadWaiting
unregistering
cachedNotRegistered
UUID=%@
lastUsedTime=%@
status=%@
modTime=%@
fileSize=%lld
chunkCount=%u
%@: %@ != %@
databaseEnvironment
deviceId
applicationBundleId
clientInfo
userAgent
operationGroup
databaseOwnerId
privateDatabase
publicDatabase
sharedDatabase
orgDatabase
teamDatabase
gameDatabase
@16@?0@"CKNotificationID"8
perform%@:withBlock:
v32@?0@"CKDAppContainerAccountTuple"8@"CKDOperationInfoMetadata"16^B24
CKDFetchRecordZonesURLRequest.m
An anonymousCKUserID is required to fetch zone %@ in the shared database when using anonymous to server share participants
Invalid record zone
The record zone could not be converted because it is invalid: %@
Unable to upload mergeable delta without a value ID
Unable to upload mergeable delta without a record ID
Failed to fetch PCS to encrypt mergeable delta
Failed to encrypt mergeable delta
v32@?0@"CKRecordID"8@"NSArray"16^B24
/api/client/shareVetting/initiate
encryptedKey
baseToken
isRead
source
dialog
sound
SHARING
CKRPC
create table if not exists PushTokens (
    applicationID             text,
    containerID               text,
    personaID                 text,
    accountID                 text,
    apsToken                  blob,
    apsEnvironment            text,
    expirationDate            real,
    unique (applicationID, containerID, personaID, accountID) on conflict replace
create table if not exists AppBundle (
    applicationID               text,
    adopterProcessType          integer,
    applicationContainerPath    text,
    clientSDKVersion            integer,
    containingBundleID          text,
    entitlements                text,
    isMainBundleAppleExecutable integer,
    unique (applicationID) on conflict replace
create table if not exists ContainerServerInfo (
    containerID                 text primary key,
    publicCloudDBURL            text,
    publicShareServiceURL       text,
    publicDeviceServiceURL      text,
    publicCodeServiceURL        text,
    publicMetricsServiceURL     text,
    scopedUserID                text,
    orgAdminUserID              text,
    accountID                   text,
    unique (containerID, accountID) on conflict replace
 create table if not exists AppContainerAccount (
    applicationID               text,
    containerID                 text,
    personaID                   text,
    accountID                   text,
    containerOptions            text,
    tokenRegistered             integer,
    unique (applicationID, containerID, personaID, accountID) on conflict replace
create table if not exists ServerConfiguration (
     valuesData            blob,
     expiry                real
create table if not exists VerifiedPublicKey (
     keyType          text,
     keyID            text,
     publicKey        blob,
     keyVersion       integer,
     keyExpiration    integer,
     keyCert          blob,
     protectionSource text,
     unique (keyType, keyID) on conflict replace
create table if not exists DSIDMap (
     accountID        text primary key,
     DSID             text
PushTokens
AppBundle
ContainerServerInfo
AppContainerAccount
ServerConfiguration
VerifiedPublicKey
DSIDMap
apsToken
apsEnvironment
adopterProcessType
applicationContainerPath
clientSDKVersion
containingBundleID
entitlements
isMainBundleAppleExecutable
publicCloudDBURL
publicShareServiceURL
publicDeviceServiceURL
publicCodeServiceURL
publicMetricsServiceURL
scopedUserID
orgAdminUserID
containerOptions
tokenRegistered
keyType
keyID
keyExpiration
keyCert
lastTokenUpdate
CKDMetadataCache.m
CloudKitMetadata
com.apple.cloudkit.metadatacache
q16@?0@"NSError"8
AND %@ > ?
%@ = %@
%@ IS NOT NULL AND %@ != ""
Must specify both key type and key identifier
Unique constraint violation in public key table
Unexpectedly-nil containerID
Data
Offset
RecordKey
ArrayIndex
Missing required info on %@
Couldn't unwrap asset key for publishing
Couldn't find clear asset key for publishing
CKDAssetExtensions.m
Unhandled code path.
Couldn't create url from template
1234
Re-referenced asset not found
Re-referenced asset missing expected values
Re-referenced asset signature differs from expected value
alert
shouldBadge
additionalFields
shouldSendContentAvailable
shouldSendMutableContent
collapseIdKey
encryptedPublicSharingKey
com.apple.security.octagon.trust-status-change
com.apple.cloudkit.account.manateeStatusQueue
Error: 
CProtectedCloudComputeQuote.c
pcc_opaque_quote_get_signature
*signature_len <= MAX_SIGNATURE_LEN
PCCPinnedVerificationDisabled
PCCPinnedVerificationHashes
CKDMapShareURLsToInstalledBundleIDsOperation
CKDFetchRegisteredBundleIDsURLRequest
CKDFetchRegisteredBundleIDsOperation
CKDPRecordResolveTokenResponse
NSCopying
CKDRecordCacheEntry
CKDRecordCacheTable
CKDRecordCaching
CKDRecordCache
CKDAssetRecord
CKDPUserAvailableQuotaResponse
CKDMMCSItemGroupSetContext
CKDCancelling
CKDUploadMergeableDeltasURLRequest
CKDPDateStatistics
CKDaemonExtensions
CKDPNotificationSyncResponse
CKDPCSCache
PCSCacheEviction
CKDXPCConnectionManager
CKDPProtectionInfo
CKDPRecordRetrieveRequest
CKDProcessScopedClientProxy
CKDPRecordRetrieveChangesResponseMergeableDeltaChange
CKXPCContainerScopedDaemonSPI
CKDContainer
CKXPCContainerScopedDaemonAPI
NSObject
CKDContainerScopedUserIDProvider
CKDSPIContainer
CKDPAssetUploadTokenRetrieveResponseHeaderInfo
CKDDeserializeRecordModificationsOperation
CKDPCSMemoryCacheEntry
CKDPCSMemoryCache
CKDPArchiveRecordsRequest
CKDPResponseOperationHeader
CKDPSetBadgeCountResponse
CKDPQuerySort
CKDMMCSItemCommandWriter
CKDMMCSItemReaderWriterProtocol
CKDAssetTokenRequest
CKDPUserPrivacySettingsBatchLookupResponseContainerPrivacySettings
CKDIdentityCacheTableEntry
CKDIdentityCacheTable
CKDIdentityCache
CKDPipeliningInfo
CKDOperation
CKThrottlingCriteria
CKDPResponseOperationResult
CKDPCodeFunctionInvokeRequestAttestationRequest
CKWaiterWrapper
CKDDeferredRelinquishPlaceholder
CKDZoneGatekeeperWaiter
CKDZoneGatekeeperImplementation
CKDZoneGatekeeper
CKDFetchMergeableDeltaMetadataOperation
CKDPUserInformationRequestAccess
CKDAssetRequestPlanner
CKDFetchRecordPCSDiagnosticsOperationInfo
NSSecureCoding
NSCoding
CKDFetchRecordPCSDiagnosticsOperation
CKDQueryOperation
CKDOperationPipelining
CKCDPCheckContainerHealthRequest
CKDQueuedRecordFetch
CKStreamLogStatsTuple
CKLStreamLogStatsObserver
CKDPZoneRetrieveRequest
CKDPCSCacheZoneFetchOperation
CKDAppContainerTuple
CKDAppContainerAccountTuple
CKDPAnonymousShareRemoveRequest
CKDPrivacyManager
CKDQueuedFetch
CKDURLRequest
C2RequestDelegate
CKDPSetBadgeCountRequest
CKDPPackageManifestSection
CKDPStreamingAssetIdentifier
CKDWrappingContext
CKDPCSManager
CKDPCSTestOverrideProvider
CKDProtocolTranslatorIdentityDelegate
CKDFetchShareMetadataOperation
CKDShareTokenMetadata
CKDModifyWebSharingOperation
CKDMMCSTestEncryptedItemReader
CKDPRealTimeMessageDeleteRecordID
CKDModifyRecordAccessOperation
CKDPStreamingAssetSaveAssetRequest
CKDPZoneSaveRequest
CKDPRecordRetrieveChangesResponseSyncObligation
CKDPConfigurationField
CKDQueuedZoneFetch
CKDDiscoverUserIdentitiesOperation
CKDDiscoverAllUserIdentitiesOperation
CKDPArchiveRecordsResponse
CKDPTokenUnregistrationResponse
CKMetricOptionAdditions
CKDUploadMergeableDeltasOperation
CKDAssetZoneKey
CKDTransactionState
CKDFetchContentAuthTokensForPutURLRequest
CKDCompleteParticipantVettingOperation
CKDContainerServerInfo
CKDCodeLocalFunctionInvokeURLRequest
CKDPCodeFunctionInvokeRequest
CKDPZoneDeleteRequest
CKDPRecordFieldIdentifier
CKDQueryURLRequest
CKDURLRequestPipelining
CKCDPCodeServiceRequestAttestationRequest
CKPackageDownloadTask
CKDDownloadAssetsOperation
CKDOperationStatistics
CKDPFieldActionReplaceListRange
CKDFetchUserQuotaOperation
CKDPRecordResolveTokenRequest
CKDAssetZone
CKDPAssetUploadTokenRetrieveRequestHeaderInfo
Helper
RecordFields
CKDPUpdateMissingAssetStatusResponse
CKDSystemAvailabilityWatcherWrapper
CKDSystemAvailabilityMonitor
CKDInitiateParticipantVettingURLRequest
CKDPEncryptedMergeableValue
CKDPushConnection
CKLogError
CKHack
CKCDPCodeServiceRequestProtectedCloudComputeMetadata
CKDContainerSpecificInfoURLRequest
CKDPStreamingAssetSaveAssetResponse
CKDModifyRecordZonesOperation
CKDPRecordMoveRequest
CloudKitAdditions
CKDPZone
CKDVolumeManager
CKDPRequestedListField
CKCDPCodeServiceRequestAccountConfig
CKDPResponseOperationResultErrorAuxiliaryError
CKDPAssetUploadTokenRetrieveResponseUploadToken
CKDPFieldActionInsertIntoList
CKDRecordResolveTokenURLRequest
CKDShortTokenLookupInfo
CKLStreamObserver
CKLStreamLogMessageObserver
CKLStreamRawMessageObserver
CKDPRealTimeMessageSaveRecord
CKCDPCodeServiceRequestAssetAuthorizeGetRequestOptionsHeaderInfo
CKDPRealTimeMessageAssociatedMergeableDeltas
CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoEntry
CKDAccount
CKDTrafficLogger
CKDPResponseOperationResultErrorClient
CKDPClouddbClientRecordsExtension
CKDPClouddbClientRecordsExtension2
CKDPClouddbClientRecordsExtension3
BoundPairAdditions
CKDProtobufStreamWriter
NSStreamDelegate
CKDPlistResponseBodyParser
CKDMMCSClientProxyItemReader
CKDPStreamingAsset
CKDPZoneRetrieveResponseZoneSummary
CKDPNotificationMarkReadResponse
CKDPUserQueryRequest
CKDSQLiteCache
CKDUploadAssetsOperationAdditions
CKDUploadAssetsOperationInfo
CKDUploadAssetsOperation
CKDPRecordSaveResponse
CKDPLocation
CKDPThrottlingConfig
CKCDPStopAllContainerResponse
CKDPublishAssetsOperation
CKDPRecordSaveRequest
CKDRemoveAnonymousShareFromSharedDBOperationInfo
CKDRemoveAnonymousShareFromSharedDBOperation
CKDFetchMergeableDeltasOperation
CKDClientInfo
CKDPRequestOperationHeader
CKDPAssetUploadTokenRetrieveRequestRecordAssetUpload
CKDPResponseOperation
CKDPClouddbClientCodeExtension
CKDPClouddbClientDsExtension
CKDPClouddbClientSharingExtension
CKDPClouddbClientRecordsExtension4
CKDPClouddbClientRecordsExtension5
CKDPClouddbClientRecordsExtension6
CKDPClouddbClientRecordsExtension7
CKDPClouddbClientRecordsExtension8
CKDPClouddbClientRecordsExtension9
CKDPClouddbClientRecordsExtension10
CKDPClouddbClientRecordsExtension11
CKDPClouddbClientRecordsExtension12
CKDPClouddbClientRecordsExtension13
CKDPClouddbClientRecordsExtension14
CKDPClouddbClientRecordsExtension15
CKDPClouddbClientRecordsExtension16
CKDPClouddbClientRecordsExtension17
CKDPClouddbClientRecordsExtension18
CKDPClouddbClientRecordsExtension19
CKDPClouddbClientRecordsExtension20
CKDPClouddbClientRecordsExtension21
CKDPClouddbClientRecordsExtension22
CKDPClouddbClientRecordsExtension23
CKDPClouddbClientSubscriptionsExtension
CKDPClouddbClientSubscriptionsExtension2
CKDPClouddbClientSubscriptionsExtension3
CKDPClouddbClientTestOperationsExtension
CKDPClouddbClientTestOperationsExtension2
CKDPClouddbClientUsersExtension
CKDPClouddbClientUsersExtension2
CKDPClouddbClientUsersExtension3
CKDPClouddbClientUsersExtension4
CKDPClouddbClientUsersExtension5
CKDPClouddbClientDeviceExtension
CKDPClouddbClientDeviceExtension2
CKDPClouddbClientDeviceExtension3
CKDPClouddbClientDeviceExtension4
CKDPClouddbClientDeviceExtension5
CKDPAnonymousShareAddRequest
CKDPRecordRetrieveVersionsResponse
CKDPCSNotifier
CKDPOperation
CKDProtobufResponseBodyParser
CKCDPCodeServiceResponseAssetAuthorizationResponseHeaderInfo
CKDModifySubscriptionsOperation
CKDPMergeableValueIdentifier
CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptions
CKDPRecordRetrieveVersionsRequest
CKDMovePhotosOperation
CKDPRecordRetrieveRequestRetrieveAssetURL
CKDPCodeFunctionInvokeResponseAttestationResponseAttestation
CKDPBundlesForContainerResponse
CKDPRequestOperation
CKDMMCSGetOperationInfo
CKDPMergeableDeltaReplaceRequest
CKDPMergeableDeltaMetadataRetrieveResponse
CKDPTokenRegistrationRequest
CKDPPackageManifestHeader
CKDPUserPrivacySettingsRetrieveRequest
CKDInitiateParticipantVettingOperation
CKDPUserAlias
CKDModifySubscriptionsURLRequest
CKDAnonymousSharingManager
CKDPTokenRegistrationBody
CKDPShareAcceptResponse
CKDPRecordFieldValue
CKDPStreamingAssetRetrieveAssetResponse
CKDPCodeFunctionInvokeRequestProtectedCloudComputeMetadata
CKDPThrottlingConfigRateLimit
CKDPRecordChainParent
CKDPNotificationSyncRequest
CKDRepairZonePCSOperation
CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoValue
CKDPWebAuthTokenRetrieveRequest
CKDPWebAuthTokenRetrieveResponse
CKDPRequestOperationHeaderSupplementalZoneInfo
CKDPMoveOplockFailure
CKLTrafficLogMessageFragment
CKLStreamTrafficObserver
CKLStreamTrafficConsoleLogObserver
CKDFetchShareParticipantsOperation
CKDPShareAcceptRequest
CKDArchiveRecordsURLRequest
CKDPQueryFilter
CKDPowerLogger
CKDTrustedTargetWrappedKey
CKDPQuery
CKDLogicalDeviceScopedStateManager
CKXPCLogicalDeviceScopedDaemon
CKDPResponseOperationHeaderAssetAuthorizationResponse
CKDPResponseOperationResultErrorExtension
CKDMMCSItemReaderWriter
CKDPRecord
CKDPRecordDeleteRequest
CKDPackageDirectoryPurger
CKDPTranscodeResponse
Conversion
CKDTokenDeletionURLRequest
CKDPTranscodeRequest
CKDCodeFunctionInvokeURLRequest
CKDFetchSubscriptionsURLRequest
CKDResponseBodyParser
CKDPCSKeySyncCoreAnalytics
CKDPCSKeySyncTracker
CKDPCSKeySyncManager
CKDFetchSubscriptionsOperation
CKDModifyShareHandler
CKDPSubscriptionCreateRequest
CKLLog
CKLResponseLogging
CKLParsedObject
CKDPResponseLogging
CKDPAnonymousShareRemoveResponse
CKDKeyEnvelopeContext
Envelope
CKEncryptable
CKDPSubscriptionNotificationAlert
CKDFetchUserRecordURLRequest
CKDPRecordRetrieveChangesResponseRecordChange
CKDPFetchArchivedRecordsRequest
CKDPUser
CKDPAssetUploadTokenRetrieveRequestAssetField
CKDMMCSItemGroup
CKDMoveRecordHandler
CKDPUserPrivacySettingsBatchLookupResponse
CKDPSubscriptionRetrieveResponse
CKDPSubscriptionCreateResponse
CKDPOplockFailure
CKCDPStopContainerResponse
CKDMMCS
CKDMMCSItem
CKDModifyRecordHandler
CKDAnonymousZoneDataObject
CKDAnonymousShareTuple
CKDJSONResponseBodyParser
CKDPLocationBound
CKDPSubscriptionRetrieveRequest
CKDPUpdateMissingAssetStatusRequest
CKDPAnonymousZoneInfo
CKDPUserPrivacySettingsRetrieveResponse
CKDTrafficMetadata
CKDFetchUserPrivacySettingsURLRequest
CKDPReservedVoucher
CKDAccountNotifier
CKDFetchNotificationChangesOperation
CKDPMergeableDeltaRetrieveRequest
CKDSignedServerPublicKeyURLRequest
CKDTokenRegistrationScheduler
CKDPAnonymousShareAddResponse
CKDPDeleteContainerResponse
CKPCSManateeShareInvitation
CKDTokenRegistrationURLRequest
CKDPMergeableValue
CKCDPStopAllContainerRequest
CKDPConfiguration
CKDResetUserPrivacySettingsOperation
CKDPResponseOperationHeaderAssetAuthorizationResponseHeaderInfo
CKDPCodeFunctionInvokeRequestProtectedCloudComputeMetadataCryptoSession
CKDBatchFetchUserPrivacySettingsURLRequest
CKDPPackageManifestItem
CKDPUserPrivacySettingsUpdateRequest
CKDPFieldActionDeleteListRange
CKDUpdateMissingAssetStatusOperationInfo
CKDUpdateMissingAssetStatusOperation
CKDPlaintextResponseBodyParser
CKDPShareMetadata
CKDPCodeFunctionInvokeResponseAttestationResponse
CKDLogicalDeviceScopedClientProxy
CKCDPCodeServiceRequestAuthInformation
CKCDPCodeServiceRequestOperationGroup
CKFetchTranscodeServerPublicKeyOperationInfo
CKDFetchTranscodeServerPublicKeyOperation
CKDLongLivedOperationPersistedCallback
CKDPMergeableDelta
CKDAssetHandleTable
CKDAssetVolumeTable
CKSAssetCacheTableGroup
CKDAssetCacheEvictionInfo
CKDAssetCache
CKDRecordFetchInfo
CKRecordFetchAggregatorOperationInfo
CKDRecordFetchAggregator
CKDFetchUserQuotaURLRequest
CKDXPCConnection
CKDSystemAvailabilityWatcher
CKPropertiesDescription
CKDXPCConnectionMuxer
CKDFetchWebAuthTokenOperation
CKDPAnonymousShareRemoveURLRequest
CKDPResponseOperationResultError
CKDMMCSEngineContext
CDKMMCSItemGroupContextDelegate
CKDMMCSItemGroupContext
CKDMMCSItemReaderWriterDelegateProtocol
CKDPListPosition
CKDSerializeRecordModificationsOperation
CKDApplicationID
CKSQLiteItem
CKSQLiteBinding
CKDPDeleteContainerRequest
CKDPRecordRetrieveChangesResponseShareChange
CKDPShare
CKDContainerPrivacySettings
CKDBatchFetchUserPrivacySettingsOperation
CKCredentialInterceptingAccount
CKDBackingExplicitCredentialsAccount
CKDPZoneRetrieveChangesResponseChangedZone
CKDPLocale
CKOperationCallbacks
CKDOperationCallbackProxy
CKDLongLivedOperationPersistedCallbackProxy
CKDCodeFunctionInvokeOperation
CKDPMergeableDeltaSaveRequest
CKDPSubscription
CKDMMCSItemGroupSet
CKDPFieldAction
CKCDPCheckContainerHealthResponse
CKDPTokenRegistrationResponse
CKDPZoneRetrieveResponse
CKDPRecordRetrieveChangesResponse
CKDPMergeableDeltaMetadataRetrieveRequest
CKDPackageManifest
CKCDPErrorUserInfoEntry
CKDPlaceholderOperation
CKDFetchRecordZonePCSDiagnosticsOperationInfo
CKDFetchRecordZonePCSDiagnosticsOperation
CKLEventFilter
CKLStatusFilter
CKDPAssetUploadTokenRetrieveRequest
CKDServerConfigurationManager
CKDPQueryRetrieveResponse
CKDPContactInformation
CKDPUserAvailableQuotaRequest
CKDPMarkAssetBrokenRequest
CKDAggregateZonePCSOperation
CKDRecordResponse
CKDDiscoverUserIdentitiesURLRequest
CKDGlobalConfigurationURLRequest
CKCDPStopContainerRequest
CKDFetchWebAuthTokenURLRequest
CKDPAsset
CKDPParticipant
CKDOperationInfoMetadata
CKDOperationInfoDelegateWrapper
CKDOperationInfoCache
CKDGlobalConfigurationOperation
CKDPTokenUnregistrationRequest
CKDPListRange
CKDFetchArchivedRecordsRequestOperationResult
CKDFetchArchivedRecordsURLRequest
CKDPCSCacheRecordFetchOperation
CKCDPCodeServiceResponseAttestationResponse
CKDPShareVettingInitiateResponse
CKDDirectoryContext
CKDFetchDatabaseChangesURLRequest
CKDPublicIdentityLookupService
CKDPRecordDeleteResponse
CKCDPCodeServiceRequestServiceClientConfig
CKDOperationInfoHolderOperation
CKDPConfigurationFieldValue
CKDAccountStore
CKDPUserRetrieveRequest
CKDPQueryRetrieveRequest
CKDFetchNotificationChangesURLRequest
CKDServerConfiguration
CKPropertyCoding
CKDPublicIdentityLookupRequest
CKDMarkAssetBrokenOperation
CKDMarkAssetBrokenURLRequestWrapperOperation
CKCDPCodeServiceRequestAssetAuthorizeGetRequestOptions
CKDPUniqueFieldFailure
CKCDPErrorUserInfoValue
CKDAcceptSharesURLRequest
CKDAcceptShareMetadata
CKDPZoneCapabilities
CKDFetchBatchedRecordsOperation
CKDFetchBatchedRecordsOperationInfo
CKDFetchRecordZoneChangesOperation
CKDFetchDatabaseChangesOperation
CKDRecordDownloadTask
CKMergeableValueDownloadTask
CKDFetchRecordsOperation
CKDFetchUserRecordOperation
CKDPCSCacheFetchOperationInfo
CKDPCSCacheFetchOperation
CKDArchiveRecordsOperation
CKDMarkNotificationsReadOperation
CKDFetchShareParticipantKeyOperation
CKDDeviceIDManager
CKDPUserPrivacySettingsResetResponse
CKDModifyRecordsOperation
CKDPCSCacheShareFetchOperation
CKDPSubscriptionDeleteRequest
CKDPMergeableDeltaReplaceResponse
CKDPUserPrivacySettingsResetRequest
CKDPRecordMoveResponse
CKDPQueryRetrieveResponseQueryResult
CKDMMCSRequestOptions
CKDPRequestedFields
CKCDPCodeServiceResponseAttestationResponseAttestation
CKDBackingMockAccount
CKDFetchRecordVersionsOperation
CKDPDSClient
CKCDPCodeServiceResponse
CKDPRealTimeMessage
CKDFetchMergeableDeltaMetadataURLRequest
CKDDaemonProcess
CKDPRecordType
CKCDPCodeServiceRequestProtectedCloudComputeMetadataCryptoSession
CKCDPError
CKDPRecordSaveRequestConflictLoserUpdate
QueryString
PCSPrivate
CKDPRecordField
CKDPFetchArchivedRecordsResponse
CKDFetchZoneChangesRequestOperationResult
CKDFetchRecordZoneChangesURLRequest
CKDPAnonymousShareAddURLRequest
CKDBackingAccount
CKDPMarkAssetBrokenResponse
CKDThrottleTableGroup
CKDThrottleManager
CKDURLSessionPool
CKDPPackage
CKDPAssetsToDownload
CKDPRecordRetrieveChangesRequest
CKDReplaceMergeableDeltasURLRequest
CKDUpdateMissingAssetStatusURLRequest
CKDPMergeableDeltaRetrieveResponse
CKDFetchRecordZonesOperation
CKDPResponseOperationResultErrorServer
CKDDatabaseOperation
CKDPCSSQLCacheEntry
CKDPCSSQLCacheTableGroup
CKDPCSSQLCacheTable
CKDPCSSQLCache
CKCDPCodeServiceResponseAssetAuthorizationResponse
CKDDecryptRecordsOperationInfo
CKRecordDecryptInfo
CKDDecryptRecordsOperation
CKReportMetricAdditions
CKDContainerSpecificInfoOperation
CKDFetchMergeableDeltasURLRequest
CKDLogicalDeviceContext
CKPackageUploadTask
CKDPCSIdentityWrapper
CKDPCSIdentityManager
CKDPCodeFunctionInvokeResponse
CKDBackingPlatformAccount
CKDLongLivedCallbackRelayOperation
CKDOperationInfoDelegate
CKDAssetID
PCSSupport
CKDFetchUserPrivacySettingsOperation
CKDPAssetUploadTokenRetrieveResponse
CKDAcceptSharesOperation
CKDPNotificationMarkReadRequest
CKDFetchRecordVersionsRequest
CKDRegisterOperationInfo
CKDDownloadAssetURLInfo
CKDDownloadAssetsOperationInfo
CKDSaveUserPrivacySettingsOperationInfo
CKDSaveUserPrivacySettingsOperation
CKDMovePhotosURLRequest
CKDMMCSPackageSignatureGenerator
CKCDPTrustedTargetCryptoMetadata
CKDProtocolTranslator
EqualityShenanigans
CKDFetchRecordsURLRequest
CKDPMergeableDeltaMetadata
CKDSaveUserPrivacySettingsURLRequest
CKDReplaceMergeableDeltasOperation
CKDPBundlesForContainerRequest
CKDPCSData
CKDChainPCSData
CKDRecordPCSData
CKDZonePCSData
CKDSharePCSData
CKDPUserPrivacySettings
CKCDPInitializeContainerRequest
CKDPUserRetrieveResponse
CKDAssetVolume
CKCDPCodeServiceRequestDatabaseOwner
CKDModifyBadgeOperation
CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptionsHeaderInfo
CKDPMergeableDeltaSaveResponse
CKDModifyBadgeURLRequest
CKCDPCodeServiceRequestClientConfig
CKDAssetTokenRequestOperationInfo
CKDAssetTokenRequestOperation
CKDPStorageExpiration
CKDPUserPrivacySettingsBatchLookupRequest
CKDPUserPrivacySettingsUpdateResponse
CKDOperationMetrics
MMCSOperationMetric
MMCSCompat
CKOperationStateTimeRange
MMCSOperationStateTimeRange
CKDOperationCombinedMetrics
CKDProxyPCSManager
CKDPUserQueryResponse
CKDPShareIdentifier
CKDAddAnonymousShareToSharedDBOperationInfo
CKDAddAnonymousShareToSharedDBOperation
CKDModifyRecordsURLRequest
CKLTrafficLogMessage
CKCDPInitializeContainerResponse
CKCDPCodeServiceRequest
CKDPZoneRetrieveChangesResponse
CKDTrustedTargetKey
CKDPSubscriptionDeleteResponse
CKDPRecordRetrieveResponse
CKDPThrottlingConfigCriteria
CKDVolume
CKDAssetBatch
CKDRepairAssetsOperation
CKDProgressTracker
CKDPCSFetchAggregator
CKDPZoneRetrieveChangesRequest
CKDFetchArchivedRecordsOperation
CKDPZoneDeleteResponse
CKDAssetHandle
CKCDPCodeServiceRequestRequestContext
CKDMarkNotificationsReadURLRequest
CKDProcessScopedStateManager
CKXPCProcessScopedDaemon
CKDResetUserPrivacySettingsURLRequest
CKDModifyRecordZonesURLRequest
CKDFetchRecordZonesURLRequest
CKDMarkAssetBrokenURLRequest
MergeableValue
CKDPRecordSaveRequestShareIdUpdate
CKDPShareVettingInitiateRequest
CKDPNotificationSyncResponsePushMessage
CKDCancelTokenGroup
CKDAppContainerAccountMetadata
CKDApplicationMetadata
CKDPushToken
CKDMetadataCache
CKDPSubscriptionNotification
CKDPRecordStableUrl
CKDAccountDataSecurityObserver
CKDPZoneSaveResponse
PCCWrappedKey
PCCAttestation
PCCKey
hasModifiedPropertiesRequiringEncryption
initWithURL:
threadIdentifier
maximumQueuedFetchWaitTime
setNeedsZoneishPCSRolled:
PCSRetryCount
initWithURL:resolvingAgainstBaseURL:
throttleBlockingUntilNextRequestWindow
setNetworkServiceTypePerConfig:
initWithURL:statusCode:HTTPVersion:headerFields:
aa_altDSID
hasNonLegacyShareURLEntitlement
setDownloadURLExpirationDate:
setAdditionalServiceDetailsForApplicationIdentifiers:usingContentsOfDictionary:completionHandler:
deltaID
aa_appleAccountWithAltDSID:
initWithUUIDBytes:
deltaIdentifier
initWithUUIDString:
aa_appleAccounts
_initSkippingValidationWithRecordType:recordID:
setDownloadURLTemplate:
URLByAppendingPathComponent:
initWithUserRecordID:
aa_authToken
referenceAction
setZoneishKeyID:
setDownloaded:
URLByAppendingPathComponent:isDirectory:
aa_cloudKitAccount
initWithValueID:metadata:asset:
pcsStatus
URLByDeletingLastPathComponent
aa_firstName
setAlertActionLocalizationKey:
deltaIdentifiersToReplace
initWithValueID:metadata:data:
setNotificationID:
URLByResolvingSymlinksInPath
setAlertBody:
aa_isPrimaryEmailVerified
initWithValueID:metadata:encryptedData:
setAlertLaunchImage:
time
aa_isSuspended
setNotificationInfo:
setZoneishProtectionData:
mergeLastKnownServerTimestampVectorFromDeltas:
timeIntervalSince1970
setAlertLocalizationArgs:
aa_lastName
setEnabledPermissions:
setSearchPredicate:
fileDescriptor
URLQueryAllowedCharacterSet
timeIntervalSinceDate:
setAlertLocalizationKey:
aa_password
set_allowsExpensiveAccess:
zoneishKeyID
timeIntervalSinceNow
aa_personID
set_allowsPowerNapScheduling:
URLWithString:
setSectionIndex:
timeIntervalSinceReferenceDate
assetMetadata
aa_primaryAppleAccount
hasOutOfProcessUIEntitlement
set_allowsRetryForBackgroundDataTasks:
_initWithShareRecordID:
UTF8String
setAllHTTPHeaderFields:
fileExistsAtPath:
deltasToSave
aa_primaryEmail
set_appleIDContextSessionIdentifier:
setAllPCSKeyIDs:
fileExistsAtPath:isDirectory:
initWithZoneID:
timeZone
aa_regionInfo
hasOwnerIdentifier
set_data:
setSelector:
UUIDString
setAllParticipants:
aa_updatePropertiesForAppleAccount:completion:
setNotificationType:
set_sourceApplicationBundleIdentifier:
zoneishProtectionData
fileHandleWithStandardOutput
aa_useCellularForDataclass:
initWithZoneID:subscriptionID:
hasParticipantPIIEntitlement
set_sourceApplicationSecondaryIdentifier:
_initWithUserIdentity:
setAllowExpiredDNSBehavior:
initWithZoneName:ownerName:anonymousCKUserID:databaseScope:
set_timeoutIntervalForRequest:
setEncryptedMasterKey:
setAllowRouting:
set_timeoutIntervalForResource:
setEncryptedPersonalInfo:
absoluteString
descriptionForError:
registerFetchedParticipant:
setupBaseURL
setAllowsAnonymousPublicAccess:
descriptionOfEntry:
percentEncodedPath
setSerializePersonalInfo:
clientHasValidatedEntitlements
percentEncodedQuery
setSerializeProtectionData:
acceptanceStatus
titleLocalizationArgs
setAltitude:
assetReference
setObject:atIndexedSubscript:
titleLocalizationKey
hasPrefix:
fileSystemRepresentation
setObject:forKey:
clientPrefixEntitlement
hasPropertiesRequiringDecryption
setAnonymous:
assetRereferenceInfo
setObject:forKeyedSubscript:
inputStreamWithData:
hasPropertiesRequiringEncryption
performDatabaseOperation:
fileURLWithPath:
inputStreamWithFileAtPath:
setObjectClassPrefix:
hasProtectionDataEntitlement
performDatabaseOperation:withErrorHandler:
fileURLWithPath:isDirectory:
insertObject:
setObjectNoValidate:forKey:
_knownParticipantEqualToParticipant:
fillAnonymousCKUserID:
insertObject:atIndex:
performGroupTransaction:
clientRuntimeProvidedServiceURL
insertObject:orUpdateProperties:label:
performInTransaction:
assetTransferOptions
relativeLocation
insertOrReplaceInto:values:
destinationFieldName
clientThrottleQueueWidth
setErrorCode:
releasePackages
insertOrReplaceObject:
clonedPackageInDaemonWithBasePath:filesDuplicatedIntoDirectory:error:
remoteObjectProxyWithErrorHandler:
instanceMethodSignatureForSelector:
close
developerType
setOperationClassName:
remove
instancesRespondToSelector:
accountProperties
insufficientDiskSpaceMode
performRequestWithHandler:
removeAllObjects
performTransaction:
intValue
accountPropertyOverrides
removeAllRegistrationsFromUser:error:
performTransactionBlock:
methodSignature
integerValue
accountStatus
setOperationGroupNamePrefix:
deviceCountOverride
setOperationGroups:
setEventHandler:
cloudKitToken
invalidate
deviceDirectory
setServiceIdentityInfo:
accountTypeWithAccountTypeIdentifier:
removeCharactersInString:
cloudServices
setExpectedReceiveSize:
personaUniqueString
invalidateCachedAccountInfo
setExpectedSendSize:
coalesce:
metricUUID
removeDB
setExpirationDate:
phoneNumbers
codeServiceURLByContainerAndServiceEntitlement
removeIndex:
pipelineFetchAllChangesRequests
codeServiceURLByServiceEntitlement
invitationToken
removeItemAtPath:error:
codeServiceURLEntitlement
minusSet:
removeItemAtURL:error:
invitationTokenStatus
collapseIDKey
activate
removeLegacyDatabaseAtPath:
trackChanges
setExportedInterface:
firstObject
activateStreamFromDate:
setExportedObject:
_canonicalizeTemplateURL:
removeObject:
invitedKeysToRemove
removeObjectAtIndex:
shareURLWithShortToken:shareTitle:shareType:containerID:displayedHostname:
setExposeAssetKey:
CKBase64URLSafeString
removeObjectForKey:
activeUsersWithError:
compact
removeObjectsInArray:
setOutOfNetworkMatches:
compare:
deviceToDeviceEncryptionAvailability
removeObjectsInRange:
compare:options:
setOutOfProcessPoolName:
invitedProtectionData
activityIdentifier
removeObserver:
deviceToDeviceEncryptionEnabled
hasSPIEntitlement
compareToRecordID:
pointerArrayWithOptions:
associatedOperationGroups
removeObserver:name:object:
invitedProtectionEtag
deviceToDeviceEncryptionSupportedByAccount
comparisonPredicateModifier
associatedOperations
deviceWithDeviceID:
inviterID
modificationDate
forceSendPublicKeyForAnonymousParticipants
transcoderFunctionName
devices
setArgument:atIndex:
transcoderPermittedRemoteMeasurement
setArrayIndex:
dictionary
invocationToFinishOperationWithInfo:withError:
transcoderServiceName
removePackages
postNotification:
setFamilyName:
invocationWithMethodSignature:
dictionaryForKey:
sharedConnection
postNotificationName:object:
invoke
setOwnerIdentifier:
dictionaryWithCapacity:
setOwnerIdentity:
components:fromDate:toDate:options:
formattedUsernameFromUsername:
dictionaryWithContentsOfFile:
triggerTapToRadarWithRequest:
componentsJoinedByString:
attributes
dictionaryWithDictionary:
removeRegistration:fromUser:error:
componentsSeparatedByString:
attributesOfItemAtPath:error:
dictionaryWithObjects:forKeys:count:
componentsWithString:
auditToken
setAssetDownloadStagingInfo:
componentsWithURL:resolvingAgainstBaseURL:
frameworkFingerprint
removeUnitTestOverride:
composedMessage
predicate
isAppleInternal
didChangeValueForKey:
removedParticipants
compoundPredicateType
isAppleInternalInstall
compressRequests
predicateOperatorType
fullTokenFromBaseToken:privateToken:
configBaseURL
function
isBackgroundAssetsExtension
didCompleteWithError
renewCredentialsForAccount:options:completion:
predicateWithFormat:
setSharedItemHierarchyIDs:
didCreateDatabaseTables
isCKInternalMetric
predicateWithLeftExpression:rightExpression:modifier:type:options:
setSharedZone:
setFetchedProperties:
hasSuffix:
repairErrorShouldBeMarkedAsBroken:
sharedOptions
hasSystemLaunchDaemonEntitlement
predicateWithValue:
authenticateWithContext:completion:
gcPackagesInDirectory:dbInUseBlock:
moveItemAtPath:toPath:error:
preferredLanguages
hasTime
unarchivedObjectOfClass:fromData:error:
repairZoneID
isCloudSyncAllowed:
unarchivedObjectOfClasses:fromData:error:
repairZoneRecordID
setParent:
unavailableAssets
generationCountToSave
isConstructedAsset
sharedZone
mutableCopy
unavailablePackages
prepareWithCompletionHandler:
setAssetTransferOptions:
mutableCopyWithZone:
isCurrentAppleAccountSuspended
hasUpdatedExpirationTimeInterval
mutableEncryptedPSK
getArgument:atIndex:
isCurrentUser
replaceObjectsInRange:withObjectsFromArray:range:
hasUpdatedParent
mutate:
unionSet:
sharingInvitationData
hasUpdatedShare
getBytes:length:
uniqueID
sharingRequestDataForIdentity:owner:flags:error:
previousParent
isDefaultRecordZoneID
previousProtectionEtag
disableCaching
addDependency:
previousProtectionEtagFromUnitTest
getFileMetadataAtPath:error:
myPCSIdentity
unlock
previousPublicProtectionEtag
backgroundSessionConnectionPoolLimitWithDefaultValue:
addEntriesFromDictionary:
replacementDeltas
unmergedDeltas
isDetached
constantValue
setFlags:
replacementDeltasContainNewData
setShouldReportMissingIdentity:
setParticipantRole:
previousShare
getFileMetadataWithFileHandle:openInfo:reply:
hasVFSOpenByIDEntitlement
getFileSizeWithOpenInfo:error:
setParticipantStatus:
hasValidCredentials
constructedAssetDownloadURLTemplate
nameComponents
reportMetricWithOptions:genericMetricType:eventName:startTime:endTime:attributes:
primaryKeyProperties
base64EncodedStringWithOptions:
representativeDataclass
distantFuture
isEnabledForDataclass:
distantPast
setParticipantVisibility:
consumeSandboxExtensions:reply:
getLogicalDeviceScopedClientProxyCreatorForTestDeviceReference:completionHandler:
setForceSendPublicKeyForAnonymousParticipants:
setShouldSkipPCSRetryBehavior:
isEqualIgnoringAnonymousUserIDsToRecordID:
setShouldSkipSettingsLaunchAlert:
addIndex:
_copyWithoutPersonalInfo
addIndexesInRange:
shouldDecryptRecordsBeforeSave
bindText:atIndex:
setShouldUpdatePersistentServiceTokens:
isEqualToData:
blockOperationWithBlock:
unsignedIntValue
isEqualToDictionary:
isEqualToNumber:
containerEnvironmentForContainerID:entitlements:
hasZoneProtectionDataEntitlement
networkServiceTypePerConfig
isEqualToString:
unsignedLongLongValue
unsignedLongValue
isError:withCode:
getProcessScopedClientProxyCreatorWithCompletionHandler:
setPcsDiagnosticString:
privateToken
setGivenName:
newEntryObject
setPcsError:
getResourceValue:forKey:error:
containerIdentifierToEmailOverrides
newestDate
setHTTPBodyStream:
containerIdentifierToForceFatalManateeZoneDecryptionFailure
hasiCloudAccount
process
buildVersion
setPcsStatus:
update:set:where:bindings:limit:
setHTTPMethod:
bundleForClass:
nextMessage
setHTTPShouldHandleCookies:
nextObject
getUUIDBytes:
setAutomaticallyRetryNetworkFailures:
isFetchCurrentUserOperation
processIdentifier
givenName
addObject:
isFileURL
processImagePath
addObjectsFromArray:
downloadURLExpirationDate
notFoundZoneIDs
addObserver:selector:name:object:
notPredicateWithSubpredicate:
addObserverForName:object:queue:usingBlock:
downloaded
containerScopedDeviceIdentifier
globallyUniqueID
setSourceApplicationBundleIdentifier:
setBadge:
shouldReportMissingIdentity
setSpeed:
setPercentEncodedQuery:
setHasUpdatedExpirationTimeInterval:
bypassPCSEncryption
addOperationWithBlock:
isInstalled
updateFromServerShare:
setHasValidCredentials:
updateGroupData:
containerScopedUserIdentifier
productName
setHasiCloudAccount:
groupNameWithDomain:domainIdentifier:groupName:
bytes
isKnownToServer
productVersion
handleAssetDataForRecordID:recordKey:arrayIndex:data:offset:
updateItemAtIndex:withSignature:size:itemID:sectionIndex:
isLikelyEqual:
holdAllOperations
handleAssetPublishCompletionForRecordID:publishedAsset:recordKey:error:
updateItemsAtIndexes:fileURLs:
horizontalAccuracy
handleAssetRepairCompletionForRecordID:error:
setStingrayIdentitiesData:
earlierDate:
handleBundleIDsFetchedForURL:appBundleIDs:daemonBundleIDs:error:
email
addPointer:
propertiesForDataclass:
shouldSkipPCSRetryBehavior
handleChangeForRecordID:record:error:
propertyListWithData:options:format:error:
handleChangeForRecordZoneID:
notificationFromRemoteNotificationDictionary:
emailAddresses
addProperty:value:shouldRedact:
isManateeAvailable:
handleChangeSetCompletionForRecordZoneID:serverChangeToken:archivedRecordStatus:error:reply:
enableMMCSMetricsWithDefaultValue:
setPreferAnonymousRequests:
handleChangeSetCompletionForRecordZoneID:serverChangeToken:clientChangeTokenData:recordChangesStatus:hasPendingArchivedRecords:syncObligationZoneIDs:error:reply:
setString:
notificationID
enableTransactions
protectionData
handleChangeSetCompletionWithServerChangeToken:clientChangeTokenData:recordChangesStatus:reply:
setPreviousProtectionEtag:
encodeBool:forKey:
protectionEtag
setHelpAnchor:
handleChangeSetCompletionWithServerChangeToken:databaseChangesStatus:error:reply:
setPreviousProtectionEtagFromUnitTest:
encodeBytes:length:forKey:
containingBundleRecord
showUserNotification:withCompletionBlock:
setHelpBook:
handleChangedNotification:
notificationInfo
setByAddingObjectsFromSet:
setPreviousPublicProtectionEtag:
encodeDouble:forKey:
setHierarchicalRootRecordID:
containsAssetBackedMergeableDeltas
c2MetricsEndpoint
isMergeableValueDeltaRecord
encodeInt64:forKey:
containsAssetValues
identities
handleCompletedReplaceDeltasRequest:error:
encodeInteger:forKey:
updateProperties:usingObject:label:
containsIndex:
encodeObject:forKey:
updateRequestCount:
containsIndexesInRange:
setHorizontalAccuracy:
signatureForStreamingAsset
handleDeleteForRecordID:
setC2MetricsEndpoint:
isNoMatchingRowError:
setPrivateToken:
signatureWithObjCTypes:
handleDeleteForRecordID:error:
isNoUniqueRowError:
containsMergeableValuesWithDeltasToSave
handleDeleteForRecordID:recordType:
addRecords:error:
isOrgAdminUser
containsObject:
handleDeleteForRecordZoneID:
notificationUUID
updateUsingObject:
encryptMetadataTernary
containsValueOfClasses:passingTest:
handleDeleteForRecordZoneID:error:
notificationWithName:object:userInfo:
isOutOfNetwork
protobufSize:error:
null
isOutstandingOperation
updateWithSavedRecordXPCMetadata:shouldOnlySaveAssetContent:
cacheExpirationTime
handleDeserializationOfSaves:deletes:error:
setIdentityInfo:
handleEncryptedDataResetForRecordZoneID:
setProperties:forDataclass:
updatedExpirationTimeInterval
handleFailureInFunction:file:lineNumber:description:
setSubtitleLocalizationArgs:
setProperties:valuesToStore:inEntriesMatching:label:error:predicate:
contentResponseBody
handleFailureInMethod:object:file:lineNumber:description:
setSubtitleLocalizationKey:
handleFetchForMergeableValueID:fetchedDeltas:error:
handleFetchForMergeableValueID:metadatas:error:
setProtectionData:
skipDescendants
handleFetchForRecordID:didProgress:
setProtectionEtag:
contentsOfDirectoryAtPath:error:
setSuspended:
handleFetchForRecordID:isDeleted:versions:error:
setCallingParticipant:
numberOfArguments
addSection:
handleFetchForRecordID:record:error:
indexOfObject:inSortedRange:options:usingComparator:
numberWithBool:
handleFetchForRecordZoneID:recordZone:error:
isPushTriggerFired
addServerDeltaMetadatas:
encryptedFullTokenData
indexOfObjectWithOptions:passingTest:
CKBase64EncodedURLSafeString
sortDescriptors
numberWithChar:
setInterruptionHandler:
indexSet
sortUsingComparator:
numberWithDouble:
handleFetchedShareMetadata:
isReadableFileAtPath:
sortedArrayUsingComparator:
infoDictionary
setIntervalLengthSeconds:
numberWithFloat:
copy
setInvalidationHandler:
numberWithInt:
cachedRecordExpiryTime
handleInitialResponseReceived:reply:
encryptedPersonalInfo
numberWithInteger:
setSystemImposedInfo:
numberWithLong:
setSystemScheduler:
setInvitationToken:
numberWithLongLong:
handleMarkAssetBrokenCompletionWithRepairRecordID:error:
handleMarkNotificationReadCompletionForNotificationID:error:
numberWithShort:
uploaded
encryptedValueStore
resetFetchedParticipants
initFileURLWithPath:isDirectory:
setInvitedKeysToRemove:
setTarget:
numberWithUnsignedChar:
encryptedValues
initForReadingFromData:error:
handleMoveForSourceRecordID:destinationMetadata:moveMarkerMetadata:error:
numberWithUnsignedInt:
isServerThrottle
sourceApplicationBundleIdentifier
handleOperationDidCompleteWithBundleIDs:metrics:error:
numberWithUnsignedInteger:
endTime
setInvitedProtectionData:
handleOperationDidCompleteWithCursor:metrics:error:
numberWithUnsignedLong:
addTable:
enforcedThrottleForCriteria:willSendRequest:outThrottleError:
copyServiceIdentityWithError:
setInvitedProtectionEtag:
numberWithUnsignedLongLong:
isSubclassOfClass:
resolvedConfiguration
copyWithOriginalValues
initWithAccount:
sourceRecordChangeTag
setInviterID:
handleOperationDidCompleteWithQuotaAvailable:metrics:error:
numberWithUnsignedShort:
setClassOfNextMessage:
isSubsetOfSet:
enqueuedOnContainerService
sourceRecordID
publicProtectionData
objectAtIndex:
handleOperationDidCompleteWithServerChangeToken:clientChangeTokenData:recordChangesStatus:metrics:error:
isSuspended
resolvedNetworkServiceTypeForConfig:
ensureRegistrationPresent:forUser:error:
publicProtectionEtag
objectAtIndexedSubscript:
handleOperationDidCompleteWithServerChangeToken:moreComing:metrics:error:
initWithAccountType:
handleOperationDidCompleteWithWebAuthToken:metrics:error:
callingParticipant
objectEnumerator
setThrottleStartDate:
CKCompactMap:
isSystemRecordZoneID
publicSharingIdentity
setPublicProtectionData:
sparseAware
initWithActivityDelay:maxActivityDelay:coalescingInterval:processingDelay:notifyBlock:
objectForKey:
handleParticipantKeyFetchForRecordID:participantKey:error:
useAnonymousToServerShareParticipants
entitlementsByAddingOverlay:
addUnmergedDeltas:
setPublicProtectionEtag:
setIsCached:
publicSharingKey
handleParticipantVettingProgressWithError:
setClientHasValidatedEntitlements:
setTime:
entriesWithValues:label:error:setupBlock:
isTestContainer
publicToken
handlePurgeForRecordZoneID:
setPublicSharingKey:
entryEnumerator:
countByEnumeratingWithState:objects:count:
handleQueryDidFetchCursor:reply:
setTimeStyle:
setPublicToken:
entryWithPrimaryKey:fetchProperties:error:
countOfBytesReceived
handleQueryDidFetchForRecordID:record:error:
setClientOperations:
setTimeZone:
CKClientSuitableError
entryWithValues:label:error:setupBlock:
isUniqueConstraintError:
useEnhancedPCSEncryptionContext
specialContainerType
countOfBytesSent
setIsCurrentUser:
handleReconstructedShareURL:
setClientProcessBundleId:
addValue:forHTTPHeaderField:
countOfEntriesMatching:label:error:predicate:
speed
handleRecordAccessInitiationForRecordID:accessToken:referenceIdentifier:error:
setClientProcessVersion:
isValidV2Signature:
useLightweightPCS
purgeDirectoryAtURL:
sqliteCode
handleRecordAccessRevocationForRecordID:error:
canHostServerURLInfo
useLiveServer
setPushTrigger:
addedParticipants
course
purgeGroupWithName:inDatabase:
handleRecordArchivalForRecordID:error:
oldestDate
enumerateContactsWithFetchRequest:error:usingBlock:
handleRecordIDsInFlight:reply:
enumerateEntrieswithBlock:
useModTimeInAssetCacheEviction
stagingPathSuffixForCloudKitCachesDirectoryWithBundleIdentifier:
handleRecordModificationForRecordID:didProgress:
usePreauth
isWritableFileAtPath:
enumerateGroupsInDatabase:block:
initWithAuditToken:pid:
handleRecordUploadForRecordID:recordKey:arrayIndex:signature:size:paddedFileSize:uploaded:uploadReceipt:uploadReceiptExpiration:wrappedAssetKey:clearAssetKey:referenceSignature:
setTitleLocalizationArgs:
enumerateIndexesUsingBlock:
isZoneWideShare
initWithBase64EncodedString:options:
standardUserDefaults
setCloudKitMetrics:
canSkipRecordSaveForMergeables
setTitleLocalizationKey:
enumerateKeysAndObjectsUsingBlock:
setQueryItems:
initWithBundleIdentifier:allowPlaceholder:error:
createDataTaskWithRequest:options:delegate:sessionHandle:
handleReplaceLocalWithWireSerializations:encryptedMasterKeys:wireEnvelopes:reply:
enumerateKeysAndValuesOfClasses:usingBlock:
initWithBundleIdentifier:error:
handleReplaceWireSerializationsWithRecords:
canTestInClientProcess
setCollapseIDKey:
enumerateObjectsUsingBlock:
itemAtIndex:
initWithBytes:length:
setIsMergeableValueDeltaRecord:
handleReplacementRequest:error:
setTlsPinning:
setQueuePriority:
itemCount
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
userID
initWithBytes:length:encoding:
setIsOrgAdminUser:
itemEnumerator
enumeratorWithOptions:
initWithBytesNoCopy:length:encoding:freeWhenDone:
startOfDayForDate:
handleSaveForRecordID:recordMetadata:error:
openWithOpenInfo:error:
setCompatibilityModeObjectNoValidate:forKey:
userIdentity
itemEnumeratorForSectionAtIndex:
initWithBytesNoCopy:length:freeWhenDone:
startTime
handleSaveForRecordZoneID:recordZone:error:
alertActionLocalizationKey
initWithCString:encoding:
handleSerialization:error:
userInfo
alertBody
handleShareAcceptanceForURL:share:error:
setRadarDescription:
equalityClauseAndBindingsForDict:
alertLaunchImage
initWithCapacity:
quantity
handleShareMetadataFetchForURL:shareMetadata:error:
cancelPreviousPerformRequestsWithTarget:selector:object:
resumableContainerLimpMode
alertLocalizationArgs
quantityNumber
setIsServerThrottle:
handleShareParticipantFetchForLookupInfo:shareParticipant:error:
setComponentID:
alertLocalizationKey
setIsUplink:
operationDaemonCallbackProtocolName
handleSharingUIUpdatedShare:recordID:isDeleted:error:reply:
setComponentName:
setIsUsernameEditable:
setComponentVersion:
errorCode
queryItemWithName:value:
initWithClientID:error:
setIsValueIDKnownToServer:
handleSubscriptionDeleteForSubscriptionID:error:
retainArguments
setRealPathURL:
handleSubscriptionFetchForSubscriptionID:subscription:error:
setReason:
setTrackChanges:
handleSubscriptionSaveForSubscriptionID:error:
captureResponseHTTPHeaders
allHTTPHeaderFields
initWithCode:format:
caseInsensitiveCompare:
allHeaderFields
handleUploadForDeltaIdentifier:error:
_expandTemplateURL:fieldValues:
certData
handleUserIdentityDiscovery:
statusCode
querySubscriptionOptions
handleUserIdentityDiscoveryForLookupInfo:userIdentity:
allKeys
handleWebSharingInitiationForRecordID:sharingKey:baseSharingToken:error:
errorWithCode:error:format:
returnPCSMetadata
userRecordID
handleWebSharingRevocationForRecordID:error:
returnRequestOperationProto
cStringUsingEncoding:
errorWithCode:error:path:format:
initWithContainerIdentifier:environment:
handleZonePCSRepairForID:pcsInfo:error:
errorWithCode:format:
returnedExistingIdentity
userType
initWithDSID:
allObjects
errorWithCode:path:format:
mutableBytes
reverseObjectEnumerator
userWithDSID:
initWithData:
errorWithCode:userInfo:error:format:
initWithData:encoding:
setConstructedAssetDownloadURLTemplate:
allPCSKeyIDs
errorWithCode:userInfo:error:path:URL:description:
rightExpression
initWithData:zoneID:
errorWithCode:userInfo:format:
role
allParticipants
raise
setURL:
setContactIdentifiers:
errorWithDomain:code:userInfo:
keyEnumerator
raise:format:
stingrayIdentitiesData
rangeOfString:
setUnderlyingQueue:
keyPath
rollRecordMasterKeysOnUnshare
rangeOfString:options:
setKnownToServer:
setUnifyResults:
rollRecordPCSMasterKeys
initWithDomain:code:userInfo:
_setAlertActionLocalizationKeyNoValidate:
hasAllowAccessDuringBuddyEntitlement
changedKeys
allThrottles
rollZonePCSIdentities
initWithEffectiveBundleID:
_setAlertBodyNoValidate:
hasAllowFakeEntitlementsEntitlement
setContainerIDs:
changedKeysSet
allValues
rollZoneSharingKeys
initWithEmailAddress:
_setAlertLaunchImageNoValidate:
hasAllowOnDeviceAssetStreamingEntitlement
allocWithZone:
evaluateWithObject:
_setAlertLocalizationArgsNoValidate:
hasAllowPackagesEntitlement
orderAscendingByProperty:
rootRecord
_setAlertLocalizationKeyNoValidate:
orderDescendingByProperty:
hasAllowRealTimeOperationsEntitlement
validateEntitlementsWithSDKVersion:error:
hasAllowUnverifiedAccountEntitlement
setUpdatedExpirationTimeInterval:
stringArrayForKey:
validateVettingToken:forAltDSID:completion:
eventName
initWithEnvironmentName:namedDelegatePort:queue:
storeWithArchiveURL:
readBytesOfInMemoryAssetContentWithUUID:offset:length:reply:
setContainerScopedDeviceIdentifier:
setUpgradeConfirmationHandler:
allowExpiredDNSBehavior
streamError
_setCategoryNoValidate:
keysSortedByValueUsingComparator:
creationDate
initWithFileURL:
allowKeyRollingInAllContainers
creatorUserRecordID
outOfNetworkMatches
setContainerScopedUserIdentifier:
hasAssetBackedDeltas
rootRecordID
evictRecentAssets
initWithFormat:
credential
reason
characterAtIndex:
valueForKey:
exceptionWithName:reason:userInfo:
initWithFormat:arguments:
characterIsMember:
outputStreamToFileAtPath:append:
valueForKeyPath:
boolForKey:
credentialWithError:
setLastModifiedUserRecordID:
initWithIdentifier:previousVector:contentsVector:removalsVector:dependenciesVector:replacedDeltaIdentifiers:
setUploadRank:
string
_setPassword:
valueID
allowsAnonymousPublicAccess
initWithIndex:signature:size:
stringByAddingPercentEncodingWithAllowedCharacters:
valueStore
existingServerForReference:
_setProperty:forKey:
initWithIndexesInRange:
stringByAppendingFormat:
existingTableGroupInDatabase:withName:error:
stringByAppendingPathComponent:
_setPublicPermissionNoSideEffects:
valuesByKey
recordCacheEntryCountLimit
stringByAppendingString:
_setShouldBadgeNoValidate:
setUploadURLExpirationDate:
expectedContentLength
stringByDeletingLastPathComponent
recordCacheExpireDelay
setLatitude:
initWithItemID:trackingUUID:signature:
_setShouldSendContentAvailableNoValidate:
childAccounts
setUploaded:
expectedReceiveSize
stringByDeletingPathExtension
currentCalendar
_setShouldSendMutableContentNoValidate:
altitude
stringByReplacingOccurrencesOfString:withString:
overridesByDataclass
expectedSendSize
recordCacheSizeLimit
initWithKeysToFetch:
setLenient:
stringByResolvingSymlinksInPath
_setSoundNameNoValidate:
currentHandler
CKAddPropertySafelyForKey:value:
initWithLiveSource:
stringByStandardizingPath
andPredicateWithSubpredicates:
expiration
lastModifiedUserRecordID
currentLocale
initWithLog:
stringByTrimmingCharactersInSet:
_setSubtitleLocalizationArgsNoValidate:
ownerIdentifier
expirationDate
anonymous
stringFromDate:
_setSubtitleLocalizationKeyNoValidate:
ownerName
lastObject
currentRegistrationsForUser:error:
_setSubtitleNoValidate:
lastPathComponent
stringWithCString:encoding:
_setTitleLocalizationArgsNoValidate:
setCourse:
stringWithFileSystemRepresentation:length:
_setTitleLocalizationKeyNoValidate:
chunkingLibraryCorruptionMode
verticalAccuracy
stringWithFormat:
currentUserParticipant
setLogOperations:
_setTitleNoValidate:
stringWithUTF8String:
customCloudDBBaseURL
stringWithValidatedFormat:validFormatSpecifiers:error:
ckOperationClassName
setCreationDate:
laterDate:
customCodeServiceBaseURL
setLongitude:
setCreatorUserRecordID:
initWithMachServiceName:
customDeviceServiceBaseURL
strongToStrongObjectsMapTable
setCredential:
exportAcceptedSharingRequestWithError:
customMetricsServiceBaseURL
strongToWeakObjectsMapTable
leftExpression
customShareServiceBaseURL
initWithName:format:
subarrayWithRange:
expressionForConstantValue:
legacyIsLocalBit
subdataWithRange:
initWithName:recordID:key:encrypted:
hasCloudKitSupportServiceEntitlement
pDistributedTimestampsFromDeltaMetadata:
claimPackagesWithSuccessBlock:failureBlock:completionBlock:
expressionForKeyPath:
daemonCallbackCompletionSelector
subpredicates
initWithNotificationUUID:
hasCloudKitSystemServiceEntitlement
lengthOfBytesUsingEncoding:
expressionType
saveVerifiedAccount:error:
initWithObject1:object2:
level
saveVerifiedAccount:withCompletionHandler:
initWithObjects:
setMMCSMetrics:
setCurrentServerChangeToken:
savedErrorCount
dataContainerURL
dataDirectory
clearAllPermissionsGrantedForAccountType:
extendExpiration:
scheduleSendBarrierBlock:
anyObject
scheduledTimerWithTimeInterval:repeats:block:
subscriptionID
CKCompactReduceIntoDictionary:
CKComponentsAndSubcomponentsJoinedByString:
waitUntilAllOperationsAreFinished
CKContains:
second
CKDPIdentifier_Device
sectionAtIndex:
sectionCount
appendBytes:length:
wantsChainPCS
CKDPIdentifier_MergeableValue
setDateFormat:
fakeEntitlements
sectionIndex
appendData:
CKDPIdentifier_Record
hasCustomAccountsEntitlement
appendFormat:
wantsNewInvitationToken
liveLocalStore
dataUsingEncoding:
subscriptionType
CKDPIdentifier_ShareId
hasDarkWakeNetworkReachabilityEnabledEntitlement
setDateProperty:forKey:
appendString:
CKDPIdentifier_Subscription
wantsPublicSharingKey
dataWithBytes:length:
fakeManateeEnabled
CKDPIdentifier_User
wantsRequestStatistics
dataWithBytesNoCopy:length:
fakeManateeOverride
setDateStyle:
wasCached
dataWithBytesNoCopy:length:freeWhenDone:
CKDPIdentifier_Zone
setUserRecordID:
localSerialization
CKDPLocationCoordinateFromCLLocation:
dataWithError:
secureCodableError:
setRelatedRadar:
localStore
select:from:
dataWithJSONObject:options:error:
setRemoteObjectInterface:
select:from:where:bindings:
familyName
dataWithPropertyList:format:options:error:
substringFromIndex:
setMaxConcurrentOperationCount:
hasDeviceIdentifierEntitlement
CKDataFromBase64URLSafeString:
selectAllFrom:where:bindings:
substringToIndex:
setUserVersion:
weakObjectsHashTable
CKDataWithHexString:stringIsUppercase:
substringWithRange:
selectAllObjectsOfClass:
setUsername:
CKDescription
weakToStrongObjectsMapTable
selectFrom:where:bindings:orderBy:limit:block:
setRepeatEverySeconds:
subsystem
localizedDescription
weakToWeakObjectsMapTable
applicationBundleIdentifierOverride
fetchAllEntries:
hasDisplaysSystemAcceptPromptEntitlement
selector
CKExpressionValue
fetchAllProperties:
databaseInDirectory:error:
_templateURLRequiresAssetKey:
subtitleLocalizationArgs
CKFilter:
databaseIsCorrupt
subtitleLocalizationKey
CKFirstUrlForKeys:
setValue:forHTTPHeaderField:
CKFlatMap:
lock
recordName
setValue:forKey:
packageGCPeriod
CKHashedDescription
whitespaceAndNewlineCharacterSet
dataclassProperties
recordNamesForFakingDecryptionFailure
packageInClientWithBasePath:error:
setValueID:
setReportClientOperationFrequency:
CKHexString
date
packageInDaemonWithBasePath:error:
sendDebugHeader
setReportClientOperationFrequencyBase:
willChangeValueForKey:
CKInvokeAndNilOutReplyBlockWithError:forProtocol:
dateByAddingTimeInterval:
CKIsNotFoundError
setReportFrequency:
dateFromString:
setReportFrequencyBase:
CKIsObjectNotFoundError
setReportOperationGroupFrequency:
wireSerialization
senderImagePath
CKIterateArgumentsForIndexRange:primitiveTypeBlock:objectBlock:blockBlock:
datePropertyForKey:
packageMetadata
setReportOperationGroupFrequencyBase:
CKLocationFromPLocationCoordinate:
fetchChangesMadeByThisDevice
packageProcessBasePath
setDestinationFieldName:
CKLowercaseHexStringWithoutSpaces
dateWithTimeIntervalSince1970:
setVerticalAccuracy:
serializePersonalInfo
CKMap:
dateWithTimeIntervalSinceNow:
serializeProtectionData
dateWithTimeIntervalSinceReferenceDate:
CKMapKeysAndValues:
logTraffic
write:maxLength:
CKMapToDictionary:
applicationState
logType
CKMapValues:
setWantsChainPCS:
packages
writeData:
CKNilIfLengthZero
setRequestOperations:
CKObjectForKeyCaseInsensitive:
writeData:forTag:
parent
applyDefaultParametersToServiceURLComponents:
writeMessage:
parentActivityIdentifier
setWantsPublicSharingKey:
CKPropertiesDescriptionStringFromProperties:
approximateReceiveBytes
decimalDigitCharacterSet
approximateSendBytes
CKRedactedDescription
server
decodeBoolForKey:
setWasCached:
hasExplicitCodeOperationURLEntitlement
apsEnvironmentEntitlement
CKRoundedToMaximumDecimalPlaces:
longLongValue
decodeBytesForKey:returnedLength:
longlivedOperationMaxRetryCount
CKSHA256
fetchNewestChangesFirst
initWithOutputStream:
decodeDoubleForKey:
setWasRepaired:
writeToFile:atomically:
lookupField
CKSafeHashStringForPathComponent
decodeInt64ForKey:
writeToFile:options:error:
decodeIntegerForKey:
CKSafeStringForPathComponent
CKSanitizedPath
writeToURL:options:error:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
initWithPassword:
setDeviceToDeviceEncryptionAvailability:
lookupInfosWithEmails:
initWithPhoneNumber:
setWireSerialization:
archivedDataWithRootObject:requiringSecureCoding:error:
lowercaseString
xpcConnectionTimeoutSecondsWithDefaultValue:
synchronousRemoteObjectProxyWithErrorHandler:
decryptFullToken:shortSharingTokenData:
setMetricUUID:
setWithArray:
arguments
initWithPublicKey:version:expiration:certificateData:protectionSource:
setWithCapacity:
array
mainBundle
setWithObject:
arrayByAddingObject:
CKUnredactedDescription
maintainRecordUploadOrder
systemImposedInfo
setWithObjects:
setDidCompleteWithError:
fetchProperties:inObject:matchingDBProperties:label:
arrayByAddingObjectsFromArray:
CKUppercaseHexStringWithoutSpaces
systemRecordZone
initWithRecord:action:
CKXPCClientToDaemonMuxerInterface
arrayIndex
CKXPCDaemonToClientMuxerInterface
arrayWithArray:
serverReference
systemTimeZone
arrayWithCapacity:
setResolvedConfiguration:
CK_isCKSQLiteError
tableGroupInDatabase:withName:error:
defaultCenter
initWithRecordID:action:
HTTPMethod
arrayWithObject:
tableWithName:
participantRole
arrayWithObjects:count:
JSONObjectWithData:options:error:
defaultConvenienceOperationConfiguration
defaultManager
takeActionOnOperation:proceedBlock:
ascending
initWithRecordName:
initWithRecordName:zoneID:
takeValuesFrom:
participantStatus
setModificationDate:
defaultRecordZone
initWithRecordType:predicate:subscriptionID:options:
serviceNameForContainerIdentifierMapEntitlement
defaultRetryAfter
initWithRepairZoneRecordID:databaseScope:recordID:recordType:fieldName:fileSignature:referenceSignature:listIndex:
participantVisibility
taskDescription
initWithRepairZoneRecordID:databaseScope:recordID:recordType:fieldName:fileSignatures:referenceSignatures:
setDiscretionaryNetworkBehavior:
hasLightweightPCSEntitlement
taskIdentifier
setDiscretionaryWhenBackgroundedState:
_validate:
maxBatchSize
initWithRequestUUID:responseHTTPHeaders:w3cTiming:
hasMasqueradingEntitlement
deleteAllEntries:
initWithResponseUUID:contentResponseHeaders:contentResponseBody:
pathExtension
maxConcurrentOperationCount
setAcceptanceStatus:
initWithShareProtectionRef:
setMutableEncryptedPSK:
initWithSharingInvitationData:shareURL:participantID:
deleteCharactersInRange:
initWithSharingRequestData:identitySet:error:
setMutableInvitationTokenStatus:
recordsByTopologicalSortWithError:
setZonePCSLastModifierDevice:
deleteEntriesMatching:label:error:predicate:
setMutableURL:
initWithSource:
maxPackageDownloadsPerBatchWithDefaultValue:
deleteFrom:where:bindings:
setRole:
deleteObject:
initWithStream:
setRootRecord:
maxPackageUploadsPerBatchWithDefaultValue:
initWithSubscriptionID:
assetCount
maxRecordPCSMasterKeyRolls
initWithTimeIntervalSince1970:
setZoneProtectionEtag:
PCSCacheMinTime
initWithTimeIntervalSinceNow:
setAccountPartition:
PCSCacheSize
assetDiskSize
setNameComponents:
testRunIDHeader
initWithTopic:qualifier:pushEnvironment:
_initBare
maximumLengthOfBytesUsingEncoding:
assetEvictionGracePeriodOnHighWatermarkWithDefaultValue:
setAccountProperty:forKey:
PCSCacheValidTime
hasModifiedEncryptedData
maximumMergeableDeltaRequestSize
zoneProtectionEtag
assetEvictionGracePeriodWithDefaultValue:
setAccountStatus:
initWithOperationInfo:container:
nameForState:
_finishOnCallbackQueueWithError:
activityCreate
operationType
makeStateTransition
_performCallbackForURL:withAppBundleIDs:daemonBundleIDs:error:
_fetchShareMetadata
_fetchRegisteredBundleIDs
main
bundleIDsFetchedBlock
setBundleIDsFetchedBlock:
shareURLs
setShareURLs:
shareMetadatasByURL
setShareMetadatasByURL:
.cxx_destruct
_bundleIDsFetchedBlock
_shareURLs
_shareMetadatasByURL
state
TQ,D,N
T@"NSMutableArray",&,N,V_shareURLs
T@"NSMutableDictionary",&,N,V_shareMetadatasByURL
clientOperationCallbackProxy
T@"<CKMapShareURLsToInstalledBundleIDsOperationCallbacks>",&,D,N
T@?,C,N,V_bundleIDsFetchedBlock
requestOperationClasses
requiresTokenRegistration
applicationBundleIdentifierForContainerAccess
applicationBundleIdentifierForNetworkAttribution
sourceApplicationSecondaryIdentifier
generateRequestOperations
requestDidParseProtobufObject:
requestDidParseNodeFailure:
_unitTestBundleIDsByContainerID:
bundleIDs
setBundleIDs:
_bundleIDs
T@"NSArray",C,N,V_bundleIDs
T@"<CKFetchRegisteredBundleIDsOperationCallbacks>",&,D,N
description
recordType
copyWithZone:
hasContainer
containerEnvironment
setContainerEnvironment:
setHasContainerEnvironment:
hasContainerEnvironment
containerEnvironmentAsString:
StringAsContainerEnvironment:
clearRecords
addRecord:
recordsCount
recordAtIndex:
hasShareRecord
hasShareMetadata
hasRecordZone
dictionaryRepresentation
readFrom:
writeTo:
copyTo:
isEqual:
hash
mergeFrom:
container
setContainer:
records
setRecords:
shareRecord
setShareRecord:
shareMetadata
setShareMetadata:
recordZone
setRecordZone:
_container
_containerEnvironment
_recordZone
_records
_shareMetadata
_shareRecord
_has
TB,R,N
T@"NSString",&,N,V_container
TB,N
Ti,N,V_containerEnvironment
T@"NSMutableArray",&,N,V_records
T@"CKDPRecord",&,N,V_shareRecord
T@"CKDPShareMetadata",&,N,V_shareMetadata
T@"CKDPZone",&,N,V_recordZone
rowID
setRowID:
recordID
setRecordID:
zoneIdentifier
setZoneIdentifier:
environment
setEnvironment:
databaseScope
setDatabaseScope:
etag
setEtag:
modificationTime
setModificationTime:
recordData
setRecordData:
knownUserKeys
setKnownUserKeys:
dsid
setDsid:
size
setSize:
_rowID
_recordID
_zoneIdentifier
_environment
_databaseScope
_etag
_modificationTime
_recordData
_knownUserKeys
_dsid
_size
T@"NSString",&,N,V_rowID
T@"NSString",&,N,V_recordID
T@"NSString",&,N,V_zoneIdentifier
T@"NSNumber",&,N,V_environment
T@"NSNumber",&,N,V_databaseScope
T@"NSString",&,N,V_etag
T@"NSDate",&,N,V_modificationTime
T@"NSData",&,N,V_recordData
T@"NSSet",&,N,V_knownUserKeys
T@"NSString",&,N,V_dsid
T@"NSNumber",&,N,V_size
initWithLogicalTableName:entryCountLimit:dataSizeLimit:expirationTime:expireDelay:
dbProperties
entryClass
addRecord:container:knownUserKeys:scope:
recordWithID:container:requiredKeys:scope:
recordsWithIDs:container:requiredKeys:scope:
etagForRecordID:container:requiredKeys:scope:
deleteRecordWithID:scope:
clearAllRecords
clearAllRecordsInScope:
clearAllRecordsForZoneWithID:
clearAssetAuthTokensForRecordWithID:container:scope:
numberOfRecordsWithID:container:
count:
init
_dsidForAccount:
_cachedRecordKnownUserKeyData:satisfiesRequiredKeys:
_cachedRecordHasValidAssets:forRequiredKeys:
fetchCacheEntryRecordData:
_recordWithID:container:requiredKeys:scope:
_trimRecord:toRequiredKeys:
clearAssetAuthTokensForRecord:container:scope:
recordCacheInDatabase:withContainer:
recordCacheWithPath:forContainer:
recordCacheForContainer:
ttlDays
createTables
forwardingTargetForSelector:
initWithRecordType:recordID:
CKPropertiesDescription
addMMCSItem:
addRereferencedMMCSItem:
addMMCSSectionItem:
sizeUpperBound
rerefSizeUpperBound
allMMCSItems
allRereferenceMMCSItems
allMMCSSectionItems
allRecordKeys
allMMCSAndSectionItems
allRegularAndSectionAndRereferenceItemsWithRecordKey:
allRegularAndSectionAndRereferenceItems
firstMMCSItemError
firstMMCSSectionItemError
isPackageSectionRecord
isAssetRecord
isEmpty
isEmptyOfRereferencesAssets
itemsByRecordKey
setItemsByRecordKey:
rereferencedItemsByRecordKey
setRereferencedItemsByRecordKey:
sectionItemsByRecordKey
setSectionItemsByRecordKey:
sizeUpperBoundNumber
setSizeUpperBoundNumber:
rerefSizeUpperBoundNumber
setRerefSizeUpperBoundNumber:
_recordType
_itemsByRecordKey
_rereferencedItemsByRecordKey
_sectionItemsByRecordKey
_sizeUpperBoundNumber
_rerefSizeUpperBoundNumber
T@"NSMutableDictionary",&,N,V_itemsByRecordKey
T@"NSMutableDictionary",&,N,V_rereferencedItemsByRecordKey
T@"NSMutableDictionary",&,N,V_sectionItemsByRecordKey
T@"NSNumber",&,N,V_sizeUpperBoundNumber
T@"NSNumber",&,N,V_rerefSizeUpperBoundNumber
T@"NSString",R,N,V_recordType
T@"CKRecordID",R,N,V_recordID
TI,R
T@"NSArray",R,N
setStorageAvailableBytes:
setHasStorageAvailableBytes:
hasStorageAvailableBytes
storageAvailableBytes
_storageAvailableBytes
TQ,N,V_storageAvailableBytes
cancel
initWithItemGroupSet:itemGroupSetCompletionBlock:
addItemGroupContext:
start
itemGroupSet
setItemGroupSet:
operation
setOperation:
itemGroupContexts
setItemGroupContexts:
itemGroupCompletionBlock
setItemGroupCompletionBlock:
itemGroupSetCompletionBlock
setItemGroupSetCompletionBlock:
itemGroupSetCompletionGroup
setItemGroupSetCompletionGroup:
mmcsOperationType
setMmcsOperationType:
_itemGroupSet
_operation
_itemGroupContexts
_itemGroupCompletionBlock
_itemGroupSetCompletionBlock
_itemGroupSetCompletionGroup
_mmcsOperationType
T@"CKDMMCSItemGroupSet",&,N,V_itemGroupSet
T@"CKDOperation",W,N,V_operation
T@"NSMutableArray",&,N,V_itemGroupContexts
T@?,C,N,V_itemGroupCompletionBlock
T@?,C,N,V_itemGroupSetCompletionBlock
T@"NSObject<OS_dispatch_group>",&,N,V_itemGroupSetCompletionGroup
Tq,N,V_mmcsOperationType
initWithOperation:
initWithOperation:deltas:replacementRequests:
allowsAnonymousAccount
zoneIDsToLock
handlesAnonymousCKUserIDPropagation
anonymousUserIDForHTTPHeader
deltas
replacementRequests
perDeltaCompletionBlock
setPerDeltaCompletionBlock:
perReplaceDeltasRequestCompletionBlock
setPerReplaceDeltasRequestCompletionBlock:
deltasByRequestID
setDeltasByRequestID:
replacementRequestsByRequestID
setReplacementRequestsByRequestID:
_deltas
_replacementRequests
_perDeltaCompletionBlock
_perReplaceDeltasRequestCompletionBlock
_deltasByRequestID
_replacementRequestsByRequestID
T@"NSMutableDictionary",&,N,V_deltasByRequestID
T@"NSMutableDictionary",&,N,V_replacementRequestsByRequestID
T@"NSArray",R,C,N,V_deltas
T@"NSArray",R,C,N,V_replacementRequests
T@?,C,N,V_perDeltaCompletionBlock
T@?,C,N,V_perReplaceDeltasRequestCompletionBlock
hasCreation
hasModification
creation
setCreation:
modification
setModification:
_creation
_modification
T@"CKDPDate",&,N,V_creation
T@"CKDPDate",&,N,V_modification
hasEncryptedPersonalInfo
_encryptPersonalInfoWithPCSBlob:pcsManager:
_decryptPersonalInfoWithPCSBlob:pcsManager:
_ingestAndExportPPPCSFromShareInvitationToken:container:completionHandler:
_prepPCSDataWithContainer:databaseScope:publicSharingKey:removeServerSpecifiedKeys:containerID:completionHandler:
_prepPCSDataUsingPreDecryptedPCSOnlyWithContainer:databaseScope:
_prepPCSDataWithContainer:databaseScope:publicSharingKey:removeServerSpecifiedKeys:containerID:sharedRecordZone:completionHandler:
_encryptPersonalInfoWithPCSBlob:inShareWithID:pcsManager:
_decryptPersonalInfoWithPCSBlob:inShareWithID:pcsManager:
_encryptPersonalInfoWithPCSBlob:participantID:inShareWithID:pcsManager:
_decryptPersonalInfoWithPCSBlob:participantID:inShareWithID:pcsManager:
hasEncryptedData
_encryptDataWithPCSBlob:pcsManager:
_decryptDataWithPCSBlob:pcsManager:
pushMessageType
hasChangeID
clearPushMessages
addPushMessage:
pushMessagesCount
pushMessageAtIndex:
setMoreAvailable:
setHasMoreAvailable:
hasMoreAvailable
changeID
setChangeID:
pushMessages
setPushMessages:
moreAvailable
_changeID
_pushMessages
_moreAvailable
T@"NSData",&,N,V_changeID
T@"NSMutableArray",&,N,V_pushMessages
TB,N,V_moreAvailable
dealloc
chainPCSData
zoneishPCS
initWithDeviceContext:containerID:accountOverrideInfo:accountID:encryptionServiceName:
runMemoryCacheEviction
_lockedGetSQLCacheWithCompletionHandler:
getSQLCache:
_lockedHandleMemoryFetchOfItem:pcsData:forOperation:options:fetchCreator:withCompletionHandler:
_lockedRemoveOutstandingFetch:forItemIDString:databaseScope:
_lockedGetOutstandingFetchForOperation:options:itemIDString:
_lockedAddOutstandingFetch:forItemIDString:databaseScope:
_lockedInvalidateAllOutstandingPCSFetchesForItemIDString:databaseScope:
_lockedCreatePCSCacheFetchOfItem:forOperation:options:fetchCreator:withCompletionHandler:
_lockedFetchPCSForItem:memoryCache:forOperation:options:fetchCreator:withCompletionHandler:
fetchPCSForRecordWithID:forOperation:options:withCompletionHandler:
fetchPCSForZoneWithID:forOperation:options:withCompletionHandler:
fetchPCSForShareWithID:forOperation:options:withCompletionHandler:
_setPCSData:forFetchedRecordID:withScope:withCompletionHandler:
_setPCSData:forFetchedZoneID:withScope:withCompletionHandler:
_setPCSData:forFetchedShareID:withScope:withCompletionHandler:
_updateMemoryCacheWithPCSData:forItemWithID:inMemoryCache:databaseScope:withCompletionHandler:
updateMemoryCacheWithZonePCSData:forZoneWithID:databaseScope:withCompletionHandler:
updateMemoryCacheWithRecordPCSData:forRecordWithID:databaseScope:withCompletionHandler:
updateMemoryCacheWithSharePCSData:forShareWithID:databaseScope:withCompletionHandler:
removePCSDataForItemsInZoneWithID:
removePCSDataForItemsInShareWithID:
hasStatusToReport
CKStatusReportArray
sqlCache
recordMemoryCache
zoneMemoryCache
shareMemoryCache
containerID
accountOverrideInfo
accountID
encryptionServiceName
outstandingFetches
setOutstandingFetches:
fetchQueue
setFetchQueue:
callbackQueue
setCallbackQueue:
_sqlCache
_recordMemoryCache
_zoneMemoryCache
_shareMemoryCache
_containerID
_accountOverrideInfo
_accountID
_encryptionServiceName
_outstandingFetches
_fetchQueue
_callbackQueue
T@"CKDPCSSQLCache",R,N,V_sqlCache
T@"CKDPCSMemoryCache",R,N,V_recordMemoryCache
T@"CKDPCSMemoryCache",R,N,V_zoneMemoryCache
T@"CKDPCSMemoryCache",R,N,V_shareMemoryCache
T@"NSMutableDictionary",&,N,V_outstandingFetches
T@"NSObject<OS_dispatch_queue>",&,N,V_fetchQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_callbackQueue
T@"CKContainerID",R,N,V_containerID
T@"CKAccountOverrideInfo",R,N,V_accountOverrideInfo
T@"NSString",R,N,V_accountID
T@"NSString",R,N,V_encryptionServiceName
clearPCSCaches
clearPCSMemoryCaches
clearInvalidatedPCSSQLCacheEntriesWithSkipZonePCS:completionHandler:
clouddStarted
sharedConnectionManager
resume
listener:shouldAcceptNewConnection:
enumerateConnections:
_dumpStatusReportArrayToOsTrace:
_dumpStatusReportToFileHandle:
dumpStatusReportToFileHandle:
statusReportWithCompletionHandler:
xpcListener
setXpcListener:
clientConnections
setClientConnections:
tearDownOperations
setTearDownOperations:
sighandlerSource
setSighandlerSource:
clientConnectionQueue
setClientConnectionQueue:
stateHandle
setStateHandle:
statusReportRequestSource
setStatusReportRequestSource:
statusReportQueue
setStatusReportQueue:
statusReportCallbackQueue
setStatusReportCallbackQueue:
statusReportCallbacks
setStatusReportCallbacks:
_xpcListener
_clientConnections
_tearDownOperations
_sighandlerSource
_clientConnectionQueue
_stateHandle
_statusReportRequestSource
_statusReportQueue
_statusReportCallbackQueue
_statusReportCallbacks
T@"NSXPCListener",&,N,V_xpcListener
T@"NSMutableArray",&,N,V_clientConnections
T@"NSMutableArray",&,N,V_tearDownOperations
T@"NSObject<OS_dispatch_source>",&,N,V_sighandlerSource
T@"NSOperationQueue",&,N,V_clientConnectionQueue
TQ,N,V_stateHandle
T@"NSObject<OS_dispatch_source>",&,N,V_statusReportRequestSource
T@"NSObject<OS_dispatch_queue>",&,N,V_statusReportQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_statusReportCallbackQueue
T@"NSMutableArray",&,N,V_statusReportCallbacks
hasProtectionInfo
hasProtectionInfoTag
protectionInfo
setProtectionInfo:
protectionInfoTag
setProtectionInfoTag:
_protectionInfo
_protectionInfoTag
T@"NSData",&,N,V_protectionInfo
T@"NSString",&,N,V_protectionInfoTag
options
hasRecordIdentifier
hasRequestedFields
hasVersionETag
hasClientVersionETag
hasGetAssetURL
hasAssetsToDownload
setShouldFailBatch:
setHasShouldFailBatch:
hasShouldFailBatch
requestTypeCode
responseClass
recordIdentifier
setRecordIdentifier:
requestedFields
setRequestedFields:
versionETag
setVersionETag:
clientVersionETag
setClientVersionETag:
getAssetURL
setGetAssetURL:
assetsToDownload
setAssetsToDownload:
shouldFailBatch
_assetsToDownload
_clientVersionETag
_getAssetURL
_recordIdentifier
_requestedFields
_versionETag
_shouldFailBatch
T@"CKDPRecordIdentifier",&,N,V_recordIdentifier
T@"CKDPRequestedFields",&,N,V_requestedFields
T@"NSString",&,N,V_versionETag
T@"NSString",&,N,V_clientVersionETag
T@"CKDPRecordRetrieveRequestRetrieveAssetURL",&,N,V_getAssetURL
T@"CKDPAssetsToDownload",&,N,V_assetsToDownload
TB,N,V_shouldFailBatch
initWithClientConnection:
processIsAttached
tearDown
getProcessScopedClientProxySynchronous:errorHandler:clientProxyHandler:
_getProcessScopedClientProxyCreatorSynchronous:completionHandler:
getFileMetadataWithFileHandle:openInfo:error:
handleSignificantIssueBehavior:reason:
issueSandboxExtensionForItem:error:
noteSystemIsAvailable
hasValidatedEntitlements
canOpenFileAtURL:
processBinaryName
procName
isSandboxed
setSandboxed:
connectionDate
setConnectionDate:
clientConnection
setClientConnection:
clientSDKVersion
setClientSDKVersion:
clientEntitlements
isClientMainBundleAppleExecutable
setIsClientMainBundleAppleExecutable:
processScopedClientProxyCreator
setProcessScopedClientProxyCreator:
connectionEntitlements
setConnectionEntitlements:
hasValidatedEntitlementsTernary
setHasValidatedEntitlementsTernary:
_sandboxed
_isClientMainBundleAppleExecutable
_pid
_clientSDKVersion
_processBinaryName
_procName
_connectionDate
_clientConnection
_clientEntitlements
_processScopedClientProxyCreator
_connectionEntitlements
_hasValidatedEntitlementsTernary
T@"<CKXPCProcessScopedClient>",&,V_processScopedClientProxyCreator
T@"CKDXPCConnection",W,N,V_clientConnection
sandboxed
TB,N,GisSandboxed,V_sandboxed
T@"NSDate",&,N,V_connectionDate
T@"NSDictionary",&,N,V_connectionEntitlements
Tq,N,V_hasValidatedEntitlementsTernary
Ti,R,N,V_pid
T@"NSString",R,N,V_processBinaryName
T@"NSString",R,N,V_procName
TI,N,V_clientSDKVersion
T@"CKEntitlements",R,N,V_clientEntitlements
TB,N,V_isClientMainBundleAppleExecutable
deltasType
hasIdentifier
hasFieldIdentifier
clearDeltas
addDeltas:
deltasCount
deltasAtIndex:
hasRecordType
identifier
setIdentifier:
fieldIdentifier
setFieldIdentifier:
setDeltas:
setRecordType:
_fieldIdentifier
_identifier
T@"CKDPMergeableValueIdentifier",&,N,V_identifier
T@"CKDPRecordFieldIdentifier",&,N,V_fieldIdentifier
T@"NSMutableArray",&,N,V_deltas
T@"CKDPRecordType",&,N,V_recordType
frameworkCachesDirectoryWithCompletionHandler:
performFetchRecordVersionsOperation:clientOperationCallbackProxy:withBlock:
performFetchArchivedRecordsOperation:clientOperationCallbackProxy:withBlock:
performArchiveRecordsOperation:clientOperationCallbackProxy:withBlock:
performPublishAssetsOperation:clientOperationCallbackProxy:withBlock:
performRepairAssetsOperation:clientOperationCallbackProxy:withBlock:
performMarkAssetBrokenOperation:clientOperationCallbackProxy:withBlock:
performModifyWebSharingOperation:clientOperationCallbackProxy:withBlock:
getNewWebSharingIdentityDataWithCompletionHandler:
performModifyRecordAccessOperation:clientOperationCallbackProxy:withBlock:
performCompleteParticipantVettingOperation:clientOperationCallbackProxy:withBlock:
performFetchShareParticipantKeyOperation:clientOperationCallbackProxy:withBlock:
decryptPersonalInfoOnShare:completionHandler:
performInitiateParticipantVettingOperation:clientOperationCallbackProxy:withBlock:
performFetchUserQuotaOperation:clientOperationCallbackProxy:withBlock:
performFetchWhitelistedBundleIDsOperation:clientOperationCallbackProxy:withBlock:
performFetchRegisteredBundleIDsOperation:clientOperationCallbackProxy:withBlock:
serverPreferredPushEnvironmentWithCompletionHandler:
serverEnvironmentWithCompletionHandler:
currentDeviceIDWithCompletionHandler:
currentUserBoundaryKeyWithCompletionHandler:
performAggregateZonePCSOperation:clientOperationCallbackProxy:withBlock:
performFetchMergeableDeltasOperation:clientOperationCallbackProxy:withBlock:
performFetchMergeableDeltaMetadataOperation:clientOperationCallbackProxy:withBlock:
performReplaceMergeableDeltasOperation:clientOperationCallbackProxy:withBlock:
performUploadMergeableDeltasOperation:clientOperationCallbackProxy:withBlock:
performSerializeRecordModificationsOperation:clientOperationCallbackProxy:withBlock:
performDeserializeRecordModificationsOperation:clientOperationCallbackProxy:withBlock:
setFakeError:forNextRequestOfClassName:
setFakeResponseOperationResult:forNextRequestOfClassName:forItemID:withLifetime:
countAssetCacheItemsWithDatabaseScope:completionHandler:
clearAssetCacheWithDatabaseScope:completionHandler:
showAssetCacheWithDatabaseScope:
clearRecordCacheWithDatabaseScope:
clearAuthTokensWithRecordID:databaseScope:
clearCachesWithOptions:databaseScope:completionHandler:
clearCachesForRecordWithRecordID:databaseScope:completionHandler:
clearCachesForZoneWithZoneID:databaseScope:completionHandler:
fetchPCSFromCacheForZoneWithZoneID:databaseScope:completionHandler:
clearInvalidatedPCSCacheEntriesIfNeeded
getOutstandingOperationCountWithCompletionHandler:
dropDetachedContainersWithCompletionHandler:
setApplicationPermission:enabled:completionHandler:
resetAllApplicationPermissionsWithCompletionHandler:
statusGroupsForApplicationPermission:completionHandler:
clearContainerFromMetadataCache
clearPILSCacheForLookupInfos:
representativeDataclassEnabledWithCompletionHandler:
getPCSDiagnosticsForZonesWithCompletionHandler:
getRecordPCSDiagnosticsForZonesWithCompletionHandler:
performRepairZonePCSOperation:clientOperationCallbackProxy:withBlock:
tossConfigWithCompletionHandler:
deviceCountWithCompletionHandler:
methodSignatureForSelector:
forwardInvocation:
operationID
statusReportWithIndent:
parentOperation
sharedInternalUseContainers
sharedDetachedContainers
containerWithAppContainerTuple:processScopedClientProxy:logicalDeviceScopedClientProxy:containerEntitlements:containerOptions:sharedContainerTable:
containerWithAppContainerAccountTuple:deviceContext:sharedContainerTable:
applicationDataContainerDirectoryForBundleID:outApplicationBinaryBundleURL:outAdopterProcessType:
initialize
accountStatusWorkloop
sharedClientThrottlingOperationQueue
operationStatusReport:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
accountInfoWithCompletionHandler:
reloadAccountWithCompletionHandler:
cancelOperationWithIdentifier:completionHandler:
performCodeOperation:clientOperationCallbackProxy:withBlock:
performCodeFunctionInvokeOperation:clientOperationCallbackProxy:withBlock:
dumpDaemonStatusReportToFileHandle:completionHandler:
submitClientEventMetric:completeWhenQueued:completionHandler:
importantUserIDsWithCompletionHandler:
statusForApplicationPermission:completionHandler:
requestApplicationPermission:completionHandler:
performDiscoverUserIdentitiesOperation:clientOperationCallbackProxy:withBlock:
performDiscoverAllUserIdentitiesOperation:clientOperationCallbackProxy:withBlock:
performFetchShareParticipantsOperation:clientOperationCallbackProxy:withBlock:
performFetchRecordsOperation:clientOperationCallbackProxy:withBlock:
performModifyRecordsOperation:clientOperationCallbackProxy:withBlock:
performFetchRecordChangesOperation:clientOperationCallbackProxy:withBlock:
performFetchRecordZoneChangesOperation:clientOperationCallbackProxy:withBlock:
performQueryOperation:clientOperationCallbackProxy:withBlock:
performModifySubscriptionsOperation:clientOperationCallbackProxy:withBlock:
performFetchSubscriptionsOperation:clientOperationCallbackProxy:withBlock:
performModifyRecordZonesOperation:clientOperationCallbackProxy:withBlock:
performFetchRecordZonesOperation:clientOperationCallbackProxy:withBlock:
performFetchDatabaseChangesOperation:clientOperationCallbackProxy:withBlock:
performModifyBadgeOperation:clientOperationCallbackProxy:withBlock:
performFetchNotificationChangesOperation:clientOperationCallbackProxy:withBlock:
performMarkNotificationsReadOperation:clientOperationCallbackProxy:withBlock:
performAcceptSharesOperation:clientOperationCallbackProxy:withBlock:
performFetchShareMetadataOperation:clientOperationCallbackProxy:withBlock:
performMapShareURLsToInstalledBundleIDsOperation:clientOperationCallbackProxy:withBlock:
performFetchWebAuthTokenOperation:clientOperationCallbackProxy:withBlock:
performMovePhotosOperation:clientOperationCallbackProxy:withBlock:
fetchLongLivedOperationsWithIDs:completionHandler:
fetchAllLongLivedOperationIDsWithCompletionHandler:
fetchXPCCriteriaWithCompletionHandler:
displayInfoOnAccountWithCompletionHandler:
suggestedMergeableDeltaSizeWithCompletionHandler:
containerScopedUserID
T@"NSObject<OS_dispatch_workloop>",R,N
_initWithAppContainerTuple:processScopedClientProxy:logicalDeviceScopedClientProxy:containerEntitlements:containerOptions:
_clearCaches
dropMMCS
accountOrNil
account
_reloadAccount:
_writeAdopterMetadataToCache
_cloudKitEnabledForCurrentClient
canAccessAccount
canAuthWithCloudKit
preferAnonymousRequests
allowsCellularAccess
allowsExpensiveNetworkAccess
_loadApplicationContainerPathAndType
_determineHardwareInfo
setupMMCSWrapper:
setupAssetTransfers:
tearDownAssetTransfers
performRequest:
publicIdentitiesExpirationTimeout
setServerConfig:
_urlBySettingCustomBaseURL:onURL:
baseURLForServerType:partitionType:
fetchConfigurationForOperation:withCompletionHandler:
_fetchContainerServerInfoForOperation:requireUserIDs:completionHandler:
fetchPublicURLForServerType:operation:completionHandler:
fetchImportantUserIDsForOperation:withCompletionHandler:
fetchServerEnvironmentForOperation:withCompletionHandler:
deviceContext
deviceID
hardwareID
fetchPrivateURLForServerType:operation:completionHandler:
deviceName
languageCode
regionCode
processName
apsEnvironmentString
shouldUsePCSEncryption
pcsManager
pcsCache
anonymousSharingManager
personaID
applicationID
applicationBundleID
associatedApplicationBundleID
appContainerAccountTuple
applicationBundleIdentifierForPush
_isAdopterAppleInternal
possiblyWrappedAuthTokenErrorGivenError:
_isContainerAuthorizedForOperation:error:
publicIdentitiesDiskCache
foregroundPublicIdentityLookupService
backgroundPublicIdentityLookupService
_setupOperationQueues
setTCCDatabaseChangedNotificationObserver:
setContainerAvailable:
_lockedHasTCCAuthorization
_lockedSetHasTCCAuthorizationTernary:
hasTCCAuthorization
containerForOperationInfo:
callbackProxyForOperation:clientProvidedCallbackProxy:
enqueueOperation:clientProvidedCallbackProxy:initialMessageReplyBlock:
addOperation:clientProvidedCallbackProxy:
_applicationPermissionStatusFromUserPrivacySetting:
_accountStatus
_globalStatusForApplicationPermission:completionHandler:
_setApplicationPermission:enabled:completionHandler:
_handleCompletionForOperation:initialMessageReplyBlock:customCompletionBlock:
_handleCompletionForOperation:initialMessageReplyBlock:
openFileWithOpenInfo:error:
readBytesOfInMemoryAssetContentWithUUID:offset:length:error:
enumerateClientContainers:
isEligibleForBroadcastingToContainer:
_eligibleConnectedContainersForOOPUIContainer
_broadcastUpdateIfNeededForRecord:recordXPCMetadata:recordID:isDeleted:error:
_performFetchCurrentUserRecordOperation:clientOperationCallbackProxy:withBlock:
_reallyPerformFetchRecordsOperation:clientOperationCallbackProxy:withBlock:
cancelAllOperations
linkWithClientContainer:
sandboxExtensions
resetThrottles
addThrottle:
fetchAggregator
CKStatusReportArrayIncludingSharedOperations:
_performCodeFunctionInvokeOperation:clientOperationCallbackProxy:block:
countAssetCacheItems
countAssetCacheItemsWithDatabaseScope:
clearAssetCache
showAssetCache
clearRecordCache
isForClouddInternalUse
setIsForClouddInternalUse:
processScopedClientProxy
logicalDeviceScopedClientProxy
cachedEnvironment
setCachedEnvironment:
adopterProcessType
applicationVersion
directoryContext
setDirectoryContext:
appContainerTuple
setAppContainerTuple:
entitlements
setEntitlements:
setOptions:
MMCS
setMMCS:
recordCache
setRecordCache:
gatekeeper
setGatekeeper:
serverConfig
publicCloudDBURL
setPublicCloudDBURL:
publicShareServiceURL
setPublicShareServiceURL:
publicDeviceServiceURL
setPublicDeviceServiceURL:
publicCodeServiceURL
setPublicCodeServiceURL:
publicMetricsServiceURL
setPublicMetricsServiceURL:
setContainerScopedUserID:
orgAdminUserID
setOrgAdminUserID:
operationQueue
setOperationQueue:
cleanupOperationQueue
setCleanupOperationQueue:
fakeErrorsByClassName
setFakeErrorsByClassName:
fakeResponseOperationLifetimeByClassName
setFakeResponseOperationLifetimeByClassName:
fakeResponseOperationResultByClassNameByItemID
setFakeResponseOperationResultByClassNameByItemID:
accountLock
setAccountLock:
serverConfigLock
setServerConfigLock:
mmcsLock
setMmcsLock:
deviceContextLock
setDeviceContextLock:
anonymousSharingManagerLock
setAnonymousSharingManagerLock:
sandboxExtensionsLock
setSandboxExtensionsLock:
fetchAggregatorLock
setFetchAggregatorLock:
setFetchAggregator:
applicationIcon
setApplicationIcon:
applicationDisplayName
setApplicationDisplayName:
resolvedAPSEnvironmentString
setResolvedAPSEnvironmentString:
containingBundleID
setContainingBundleID:
setPublicIdentitiesDiskCache:
setForegroundPublicIdentityLookupService:
setBackgroundPublicIdentityLookupService:
cancellationQueue
setCancellationQueue:
statusQueue
setStatusQueue:
uncancellableOperationQueue
setUncancellableOperationQueue:
backgroundOperationThrottleQueue
setBackgroundOperationThrottleQueue:
cloudKitSupportOperationThrottleQueue
setCloudKitSupportOperationThrottleQueue:
pendingOperationIDs
setPendingOperationIDs:
hasTCCAuthorizationTernary
setHasTCCAuthorizationTernary:
setDeviceContext:
setHardwareID:
tccAuthOpQueue
setTccAuthOpQueue:
tccAuthQueue
setTccAuthQueue:
TCCDatabaseChangedNotificationObserver
operationStatisticsByClassName
setOperationStatisticsByClassName:
setPcsManager:
setPcsCache:
setAnonymousSharingManager:
cachedSandboxExtensions
setCachedSandboxExtensions:
hasDataContainer
setHasDataContainer:
clientContainers
setClientContainers:
_isForClouddInternalUse
_hasDataContainer
_account
_processScopedClientProxy
_logicalDeviceScopedClientProxy
_cachedEnvironment
_adopterProcessType
_applicationVersion
_directoryContext
_appContainerTuple
_entitlements
_options
_MMCS
_recordCache
_gatekeeper
_serverConfig
_publicCloudDBURL
_publicShareServiceURL
_publicDeviceServiceURL
_publicCodeServiceURL
_publicMetricsServiceURL
_containerScopedUserID
_orgAdminUserID
_operationQueue
_cleanupOperationQueue
_fakeErrorsByClassName
_fakeResponseOperationLifetimeByClassName
_fakeResponseOperationResultByClassNameByItemID
_accountLock
_serverConfigLock
_mmcsLock
_deviceContextLock
_anonymousSharingManagerLock
_sandboxExtensionsLock
_fetchAggregatorLock
_fetchAggregator
_applicationIcon
_applicationDisplayName
_resolvedAPSEnvironmentString
_containingBundleID
_publicIdentitiesDiskCache
_foregroundPublicIdentityLookupService
_backgroundPublicIdentityLookupService
_cancellationQueue
_statusQueue
_uncancellableOperationQueue
_backgroundOperationThrottleQueue
_cloudKitSupportOperationThrottleQueue
_pendingOperationIDs
_hasTCCAuthorizationTernary
_deviceContext
_hardwareID
_tccAuthOpQueue
_tccAuthQueue
_TCCDatabaseChangedNotificationObserver
_operationStatisticsByClassName
_pcsManager
_pcsCache
_anonymousSharingManager
_cachedSandboxExtensions
_clientContainers
T@"NSRecursiveLock",&,N,V_accountLock
T@"NSRecursiveLock",&,N,V_serverConfigLock
T@"NSRecursiveLock",&,N,V_mmcsLock
T@"NSRecursiveLock",&,N,V_deviceContextLock
T@"NSRecursiveLock",&,N,V_anonymousSharingManagerLock
T@"NSRecursiveLock",&,N,V_sandboxExtensionsLock
T@"NSRecursiveLock",&,N,V_fetchAggregatorLock
T@"CKDMMCS",&,N,V_MMCS
T@"CKDZoneGatekeeper",&,N,V_gatekeeper
T@"CKDPCSFetchAggregator",&,N,V_fetchAggregator
T@"NSURL",&,N,V_applicationIcon
T@"NSString",&,N,V_applicationDisplayName
T@"CKDDirectoryContext",&,N,V_directoryContext
T@"NSString",&,N,V_resolvedAPSEnvironmentString
T@"NSString",&,N,V_containingBundleID
T@"CKDIdentityCache",&,N,V_publicIdentitiesDiskCache
T@"CKDPublicIdentityLookupService",&,N,V_foregroundPublicIdentityLookupService
T@"CKDPublicIdentityLookupService",&,N,V_backgroundPublicIdentityLookupService
T@"NSObject<OS_dispatch_queue>",&,N,V_cancellationQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_statusQueue
T@"NSOperationQueue",&,N,V_operationQueue
T@"NSOperationQueue",&,N,V_cleanupOperationQueue
T@"NSOperationQueue",&,N,V_uncancellableOperationQueue
T@"NSOperationQueue",&,N,V_backgroundOperationThrottleQueue
T@"NSOperationQueue",&,N,V_cloudKitSupportOperationThrottleQueue
T@"NSMutableSet",&,N,V_pendingOperationIDs
Tq,N,V_hasTCCAuthorizationTernary
T@"CKEntitlements",&,N,V_entitlements
T@"CKContainerOptions",&,N,V_options
T@"CKDLogicalDeviceContext",&,N,V_deviceContext
T@"NSString",&,N,V_hardwareID
T@"CKDAppContainerTuple",&,N,V_appContainerTuple
T@"CKDServerConfiguration",&,N,V_serverConfig
T@"NSOperationQueue",&,N,V_tccAuthOpQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_tccAuthQueue
T@"<NSObject>",&,N,V_TCCDatabaseChangedNotificationObserver
T@"NSMutableDictionary",&,N,V_operationStatisticsByClassName
T@"CKDPCSManager",&,N,V_pcsManager
T@"CKDPCSCache",&,N,V_pcsCache
T@"CKDAnonymousSharingManager",&,N,V_anonymousSharingManager
T@"NSArray",&,N,V_cachedSandboxExtensions
TB,N,V_hasDataContainer
T@"NSMutableSet",&,N,V_clientContainers
TB,N,V_isForClouddInternalUse
T@"CKDProcessScopedClientProxy",R,W,N,V_processScopedClientProxy
T@"CKDLogicalDeviceScopedClientProxy",R,W,N,V_logicalDeviceScopedClientProxy
T@"NSString",R,N
Tq,V_cachedEnvironment
T@"CKContainerID",R,N
T@"CKDApplicationID",R
Tq,R,N,V_adopterProcessType
T@"NSString",R,N,V_applicationVersion
T@"CKDAppContainerAccountTuple",R,N
T@"CKDAccount",R,N,V_account
T@"CKAccountOverrideInfo",R,N
T@"CKDRecordCache",&,N,V_recordCache
T@"NSURL",C,V_publicCloudDBURL
T@"NSURL",C,V_publicShareServiceURL
T@"NSURL",C,V_publicDeviceServiceURL
T@"NSURL",C,V_publicCodeServiceURL
T@"NSURL",C,V_publicMetricsServiceURL
T@"NSString",C,V_containerScopedUserID
T@"NSString",C,V_orgAdminUserID
T@"NSMutableDictionary",&,N,V_fakeErrorsByClassName
T@"NSMutableDictionary",&,N,V_fakeResponseOperationLifetimeByClassName
T@"NSMutableDictionary",&,N,V_fakeResponseOperationResultByClassNameByItemID
getNewWebSharingIdentityWithCompletionHandler:
headerKey
setHeaderKey:
headerValue
setHeaderValue:
_headerKey
_headerValue
T@"NSString",&,N,V_headerKey
T@"NSString",&,N,V_headerValue
validateAgainstLiveContainer:error:
_setupTranslator
_deserialize
_postflightRecords
deserializeCompletionBlock
setDeserializeCompletionBlock:
serializedModifications
setSerializedModifications:
translator
setTranslator:
recordsToSave
setRecordsToSave:
recordIDsToDelete
setRecordIDsToDelete:
_deserializeCompletionBlock
_serializedModifications
_translator
_recordsToSave
_recordIDsToDelete
T@"NSData",&,N,V_serializedModifications
T@"CKDProtocolTranslator",&,V_translator
T@"NSArray",&,V_recordsToSave
T@"NSArray",&,V_recordIDsToDelete
T@"<CKDeserializeRecordModificationsOperationCallbacks>",&,D,N
T@?,C,N,V_deserializeCompletionBlock
pcsData
setPcsData:
lastAccess
setLastAccess:
_pcsData
_lastAccess
T@"CKDPCSData",&,N,V_pcsData
Td,V_lastAccess
setupMemoryNotifications
runMemoryCacheEvictionInAllCaches
startEvictionTimer
stopEvictionTimer
registerEvictionTimer
_lockedEvictEntriesFromCache
getPCSDataFromCacheForID:databaseScope:withCompletionHandler:
setPCSData:forItemID:databaseScope:withCompletionHandler:
runCacheEviction
clearCache
_cacheCount
maxEntries
setMaxEntries:
minAge
setMinAge:
cacheEntries
setCacheEntries:
accessQueue
setAccessQueue:
oldestCacheEntry
setOldestCacheEntry:
memoryCacheRequestCount
setMemoryCacheRequestCount:
memoryCacheHitCount
setMemoryCacheHitCount:
memoryCacheHighwaterCount
setMemoryCacheHighwaterCount:
memoryCacheDeleteCount
setMemoryCacheDeleteCount:
memoryCacheUpdateCount
setMemoryCacheUpdateCount:
memoryCacheEvictCount
setMemoryCacheEvictCount:
_maxEntries
_minAge
_cacheEntries
_accessQueue
_oldestCacheEntry
_memoryCacheRequestCount
_memoryCacheHitCount
_memoryCacheHighwaterCount
_memoryCacheDeleteCount
_memoryCacheUpdateCount
_memoryCacheEvictCount
T@"NSMutableDictionary",&,N,V_cacheEntries
T@"NSObject<OS_dispatch_queue>",&,N,V_accessQueue
Td,V_oldestCacheEntry
TQ,V_memoryCacheRequestCount
TQ,V_memoryCacheHitCount
TQ,V_memoryCacheHighwaterCount
TQ,V_memoryCacheDeleteCount
TQ,V_memoryCacheUpdateCount
TQ,V_memoryCacheEvictCount
TQ,N,V_maxEntries
Td,N,V_minAge
idsToArchiveType
clearIdsToArchives
addIdsToArchive:
idsToArchivesCount
idsToArchiveAtIndex:
idsToArchives
setIdsToArchives:
_idsToArchives
T@"NSMutableArray",&,N,V_idsToArchives
assetAuthorizationResponsesType
throttleConfigType
clearAssetAuthorizationResponses
addAssetAuthorizationResponses:
assetAuthorizationResponsesCount
assetAuthorizationResponsesAtIndex:
clearThrottleConfigs
addThrottleConfig:
throttleConfigsCount
throttleConfigAtIndex:
assetAuthorizationResponses
setAssetAuthorizationResponses:
throttleConfigs
setThrottleConfigs:
_assetAuthorizationResponses
_throttleConfigs
T@"NSMutableArray",&,N,V_assetAuthorizationResponses
T@"NSMutableArray",&,N,V_throttleConfigs
hasFieldName
order
setOrder:
setHasOrder:
hasOrder
orderAsString:
StringAsOrder:
hasCoordinate
fieldName
setFieldName:
coordinate
setCoordinate:
_coordinate
_fieldName
_order
T@"CKDPRecordFieldIdentifier",&,N,V_fieldName
Ti,N,V_order
T@"CKDPLocationCoordinate",&,N,V_coordinate
openWithError:
closeWithError:
getFileMetadataWithError:
readBytesAtOffset:bytes:length:bytesRead:error:
writeBytesAtOffset:bytes:length:bytesWritten:error:
MMCSRequest
MMCSItem
T@"CKDMMCSItemGroupContext",R,N
T@"CKDMMCSItem",R,N
initWithMMCSItem:MMCSRequest:
isContiguous
setMMCSRequest:
setMMCSItem:
byteRanges
setByteRanges:
maximumLength
setMaximumLength:
_MMCSRequest
_MMCSItem
_byteRanges
_maximumLength
T@"CKDMMCSItemGroupContext",&,N,V_MMCSRequest
T@"CKDMMCSItem",&,N,V_MMCSItem
T@"NSMutableIndexSet",&,N,V_byteRanges
TQ,N,V_maximumLength
addAssetBatch:
addFailedBatch:
hasSuccessfulBatches
successfulBatches
assetBatches
setAssetBatches:
failedAssetBatches
setFailedAssetBatches:
setSizeUpperBound:
_sizeUpperBound
_assetBatches
_failedAssetBatches
T@"NSMutableArray",&,N,V_assetBatches
T@"NSMutableSet",&,N,V_failedAssetBatches
TI,N,V_sizeUpperBound
TI,N,V_size
applicationBundleType
hasApplicationContainer
applicationContainerEnvironment
setApplicationContainerEnvironment:
setHasApplicationContainerEnvironment:
hasApplicationContainerEnvironment
applicationContainerEnvironmentAsString:
StringAsApplicationContainerEnvironment:
clearApplicationBundles
addApplicationBundle:
applicationBundlesCount
applicationBundleAtIndex:
hasUserPrivacySettings
applicationContainer
setApplicationContainer:
applicationBundles
setApplicationBundles:
userPrivacySettings
setUserPrivacySettings:
_applicationBundles
_applicationContainer
_applicationContainerEnvironment
_userPrivacySettings
T@"NSString",&,N,V_applicationContainer
Ti,N,V_applicationContainerEnvironment
T@"NSMutableArray",&,N,V_applicationBundles
T@"CKDPUserPrivacySettings",&,N,V_userPrivacySettings
rowid
setRowid:
lookupInfo
setLookupInfo:
containerIdentifier
setContainerIdentifier:
dataSeparationHash
setDataSeparationHash:
identity
setIdentity:
_rowid
_lookupInfo
_containerIdentifier
_dataSeparationHash
_identity
T@"NSNumber",&,N,V_rowid
T@"CKUserIdentityLookupInfo",&,N,V_lookupInfo
T@"NSString",&,N,V_containerIdentifier
T@"NSString",&,N,V_dataSeparationHash
T@"CKUserIdentity",&,N,V_identity
valuesDictionaryForLookupInfo:container:
predicateForMatchingLookupInfoInContainer
deleteUserIdentityForLookupInfo:container:
insertUserIdentity:forLookupInfo:container:
cachedIdentityForLookupInfo:container:
cacheWithDeviceContext:
cache
removeCachedValueForLookupInfo:container:
cacheUserIdentity:forLookupInfo:container:
initWithRequest:operation:
isCancelled
addPerRequestCallbackBlock:
disablePerRequestCallbackBlocks
cancelAndDisablePerRequestCallbackBlocks
suspendCallbackQueue
resumeCallbackQueue
request
setRequest:
perRequestCallbackGroup
setPerRequestCallbackGroup:
perRequestGroup
setPerRequestGroup:
perRequestCallbackQueue
setPerRequestCallbackQueue:
perRequestCallbackQueueSuspended
setPerRequestCallbackQueueSuspended:
perRequestCallbackBlocks
setPerRequestCallbackBlocks:
setIsCancelled:
_perRequestCallbackQueueSuspended
_isCancelled
_request
_perRequestCallbackGroup
_perRequestGroup
_perRequestCallbackQueue
_perRequestCallbackBlocks
TB,N,V_perRequestCallbackQueueSuspended
T@"NSMutableArray",&,N,V_perRequestCallbackBlocks
TB,N,V_isCancelled
T@"<CKDURLRequestPipelining>",&,N,V_request
T@"<CKDOperationPipelining>",W,N,V_operation
T@"NSObject<OS_dispatch_group>",&,N,V_perRequestCallbackGroup
T@"NSObject<OS_dispatch_group>",&,N,V_perRequestGroup
T@"NSObject<OS_dispatch_queue>",&,N,V_perRequestCallbackQueue
setQualityOfService:
setCompletionBlock:
_globalOperationCallbackQueueForQOS:
isPredominatelyDownload
relevantZoneIDs
isOperationType:
operationGroupName
serviceName
functionName
osActivity
_ensureOperationGroup
createSerialQueue
createInactiveSerialQueue
createConcurrentQueue
createInactiveConcurrentQueue
allowsPowerNapScheduling
resolvedAutomaticallyRetryNetworkFailures
resolvedDiscretionaryNetworkBehavior
clientQueuePriority
isLongLived
MMCSRequestOptions
unitTestOverrides
checkAndClearUnitTestOverrides:
authPromptReason
automaticallyRetryNetworkFailures
discretionaryNetworkBehavior
duetPreClearedMode
discretionaryWhenBackgroundedState
systemScheduler
timeoutIntervalForRequest
timeoutIntervalForResource
additionalRequestHTTPHeaders
isCloudKitSupportOperation
cacheDeleteAvailableSpaceClass
operationGroupID
operationGroupQuantityNumber
_stateFlags
CKDescriptionPropertiesWithPublic:private:shouldExpand:
ckShortDescription
setParentOperation:
combineMetricsWithOperation:
spawnAndRunOperationOfClass:operationInfo:spawnQueue:container:operationConfigurationBlock:
spawnAndRunOperationOfClass:operationInfo:spawnQueue:operationConfigurationBlock:
spawnAndRunOperationOfClass:operationInfo:operationConfigurationBlock:
topmostParentOperation
_continueOperationStart
_registerAttemptForOperation
_checkAppVersion
networkServiceType
_determineNetworkServiceType
supportsDeviceThrottling
_finishInternalOnCallbackQueueWithError:
finishWithError:
isTopLevelDaemonOperation
setState:
makeStateTransition:
noteOperationWillWaitOnPCS
noteOperationDidFinishWaitingOnPCS
isWaitingOnPCS
isFinished
isExecuting
transitionToExecuting
transitionToFinished
shouldCheckAppVersion
shouldKeepXPCConnectionAlive
QOSClass
configureQualityOfServiceFromOperationInfo:
isConcurrent
usesBackgroundSession
expectDelayBeforeRequestBegins
setClientOperationCallbackProxy:
finishWithAssetDownloadStagingInfo:fileURL:fileHandle:error:
configureRequest:
request:didFinishWithMetrics:w3cNavigationTiming:
operationMetrics
cloudKitMetrics
MMCSMetrics
updateMetric:withBlock:
_startDateString
CKStatusReportProperties
CKStatusReportLogGroups
isNetworkingBehaviorEquivalentForOperation:
sendCoreAnalyticsEventOperationFinished
baseOperationAndErrorInfoCoreAnalyticsPayloadWithError:
dugongKeyRollAnalyticsPayloadWithError:
analyticsPayload
startDate
setStartDate:
useEncryption
setUseEncryption:
useClearAssetEncryption
setUseClearAssetEncryption:
isLongLivedCallbackRelayOperation
shouldPipelineFetchAllChangesRequests
setShouldPipelineFetchAllChangesRequests:
error
setError:
requestCompletedBlock
setRequestCompletedBlock:
operationInfo
setOperationInfo:
requestOriginator
setRequestOriginator:
stateTransitionGroup
setStateTransitionGroup:
requestUUIDs
setRequestUUIDs:
childOperations
setChildOperations:
finishedChildOperationIDs
setFinishedChildOperationIDs:
childOperationsGroup
setChildOperationsGroup:
pcsWaitCount
setPcsWaitCount:
weakContainer
setWeakContainer:
strongContainer
setStrongContainer:
transaction
signpost
metricExecuteStartDate
setMetricExecuteStartDate:
didAttemptDugongKeyRoll
setDidAttemptDugongKeyRoll:
_state
_osActivity
_executionState
_useEncryption
_useClearAssetEncryption
_isLongLivedCallbackRelayOperation
_shouldPipelineFetchAllChangesRequests
_didAttemptDugongKeyRoll
_pcsWaitCount
_clientOperationCallbackProxy
_cloudKitMetrics
_MMCSMetrics
_startDate
_parentOperation
_error
_requestCompletedBlock
_operationInfo
_requestOriginator
_stateTransitionGroup
_requestUUIDs
_childOperations
_finishedChildOperationIDs
_childOperationsGroup
_weakContainer
_strongContainer
_transaction
_signpost
_metricExecuteStartDate
T@"NSMutableArray",&,N,V_requestUUIDs
T@"CKDOperation",W,N,V_parentOperation
T@"NSMutableArray",&,N,V_childOperations
T@"NSMutableArray",&,N,V_finishedChildOperationIDs
T@"NSDate",&,N,V_startDate
T@"NSObject<OS_dispatch_group>",&,N,V_childOperationsGroup
T@"CKOperationInfo",&,N,V_operationInfo
TAi,N,V_pcsWaitCount
T@"CKDContainer",W,N,V_weakContainer
T@"CKDContainer",&,N,V_strongContainer
T@"NSObject<OS_os_transaction>",R,N,V_transaction
T@"CKSignpost",R,N,V_signpost
T@"CKDLogicalDeviceContext",R,N
T@"NSDate",&,N,V_metricExecuteStartDate
TB,N,V_didAttemptDugongKeyRoll
TQ,R,N
T@"CKDOperation",R,W,N
T@"<CKOperationCallbacks>",&,N,V_clientOperationCallbackProxy
T@"CKDContainer",R,N
TB,N,V_useEncryption
TB,N,V_useClearAssetEncryption
TB,R,N,V_isLongLivedCallbackRelayOperation
TB,N,V_shouldPipelineFetchAllChangesRequests
TI,R,N
T@"NSError",&,V_error
T@"CKDURLRequest",&,N,V_request
T@"CKOperationMetrics",R,N
T@"CKDOperationMetrics",R,C,V_cloudKitMetrics
T@"CKDOperationMetrics",R,C,V_MMCSMetrics
T@?,C,N,V_requestCompletedBlock
Tq,R,N
T@"CKOperationMMCSRequestOptions",R,N
T@"NSDictionary",R,N
Td,R,N
T@"NSNumber",R,N
T@"NSObject<OS_os_activity>",R,N
TQ,N,V_requestOriginator
TQ,N
T@"NSObject<OS_dispatch_group>",&,N,V_stateTransitionGroup
code
setCode:
setHasCode:
hasCode
codeAsString:
StringAsCode:
hasError
_code
Ti,N,V_code
T@"CKDPResponseOperationResultError",&,N,V_error
hasEntropy
entropy
setEntropy:
_entropy
T@"NSData",&,N,V_entropy
initWithWaiter:zoneIDs:waitCompletedHandler:activity:
invokeWaitCompletedHandler:
waiter
zoneIDs
activity
waitCompletedHandler
_waiter
_zoneIDs
_activity
_waitCompletedHandler
_personaID
T@"<CKDZoneGatekeeperWaiter>",R,N,V_waiter
T@"NSArray",R,N,V_zoneIDs
T@"NSObject<OS_os_activity>",R,N,V_activity
T@?,R,N,V_waitCompletedHandler
T@"NSString",R,N,V_personaID
qualityOfService
initWithExistingWaiter:
underlyingCKShortDescription
_qualityOfService
_underlyingCKShortDescription
Tq,R,N,V_qualityOfService
T@"NSString",R,N,V_underlyingCKShortDescription
registerWaiter:forZoneIDs:completionHandler:
relinquishLocksForWaiter:deferRelinquish:
zoneIDsToGateHolders
setZoneIDsToGateHolders:
waiterWrappers
setWaiterWrappers:
_zoneIDsToGateHolders
_waiterWrappers
T@"NSMutableDictionary",&,N,V_zoneIDsToGateHolders
T@"NSMutableArray",&,N,V_waiterWrappers
gatekeeperForContainerID:accountID:
_init
registerWaiter:forZoneIDs:expectDelayBeforeRequestBegins:completionHandler:
foreground
setForeground:
background
setBackground:
_foreground
_background
T@"CKDZoneGatekeeperImplementation",&,N,V_foreground
T@"CKDZoneGatekeeperImplementation",&,N,V_background
fetchMetadata
fetchMetadataRecursivelyForMergeableValueIDs:continuationTokens:completionHandler:
handleFetchedMetadatasForMergeableValueID:metadatas:result:
metadataFetchedBlock
setMetadataFetchedBlock:
mergeableValueIDs
setMergeableValueIDs:
_metadataFetchedBlock
_mergeableValueIDs
T@"NSArray",&,N,V_mergeableValueIDs
T@"<CKFetchMergeableDeltaMetadataOperationCallbacks>",&,D,N
T@?,C,N,V_metadataFetchedBlock
hasContactInformation
contactInformation
setContactInformation:
_contactInformation
T@"CKDPContactInformation",&,N,V_contactInformation
initWithMMCSEncryptionSupport:
resetAssetTokenRequests
planRegisterBatches
planGetChunkKeysBatches
planAssetRequests
failBatch:
hasSuccessfulAssetTokenRequests
assetRegisterAndPutBatches
setAssetRegisterAndPutBatches:
assetGetChunkKeysBatches
setAssetGetChunkKeysBatches:
assetTokenRequestSizeLimit
assetTokenRequests
setAssetTokenRequests:
rerefAssetBatchesByZoneID
setRerefAssetBatchesByZoneID:
assetBatchesByZoneID
setAssetBatchesByZoneID:
mmcsEncryptionSupport
setMmcsEncryptionSupport:
items
setItems:
assetZoneByKey
setAssetZoneByKey:
_assetTokenRequestSizeLimit
_assetRegisterAndPutBatches
_assetGetChunkKeysBatches
_assetTokenRequests
_rerefAssetBatchesByZoneID
_assetBatchesByZoneID
_mmcsEncryptionSupport
_items
_assetZoneByKey
T@"NSArray",&,N,V_assetRegisterAndPutBatches
T@"NSArray",&,N,V_assetGetChunkKeysBatches
T@"NSArray",&,N,V_assetTokenRequests
TQ,N,V_mmcsEncryptionSupport
T@"NSMutableOrderedSet",&,N,V_items
T@"NSMutableDictionary",&,N,V_assetZoneByKey
T@"NSMutableDictionary",&,N,V_assetBatchesByZoneID
T@"NSMutableDictionary",&,N,V_rerefAssetBatchesByZoneID
TI,R,N,V_assetTokenRequestSizeLimit
encodeWithCoder:
initWithCoder:
supportsSecureCoding
TB,R
recordZoneIDs
setRecordZoneIDs:
_recordZoneIDs
T@"NSArray",&,N,V_recordZoneIDs
_checkRecordPCSForAllZones
_fetchZones
corruptRecords
setZoneIDs:
fetchedZones
setFetchedZones:
mutableCorruptRecords
setMutableCorruptRecords:
_fetchedZones
_mutableCorruptRecords
T@"NSArray",&,N,V_zoneIDs
T@"NSMutableArray",&,N,V_fetchedZones
T@"NSMutableArray",&,N,V_mutableCorruptRecords
pipeliningDescription
T@"NSObject<OS_dispatch_queue>",&,N
_handleQueryRequestFinishedWithSchedulerInfo:
_wrapError:format:
_handleRecordResponses:perRequestSchedulerInfo:
_sendQueryRequestWithCursor:previousRequestSchedulerInfo:
query
cursor
resultsLimit
resultsCursor
setResultsCursor:
recordFetchCompletionBlock
setRecordFetchCompletionBlock:
queryCursorUpdatedBlock
setQueryCursorUpdatedBlock:
desiredKeySet
setDesiredKeySet:
shouldFetchAssetContent
setShouldFetchAssetContent:
zoneID
setZoneID:
recordFetcher
setRecordFetcher:
fetchAllResults
setFetchAllResults:
fetchRecordsGroup
setFetchRecordsGroup:
numRequestsSent
setNumRequestsSent:
requestInfos
setRequestInfos:
assetTransferOptionsByKey
setAssetTransferOptionsByKey:
hasCalledQueryCursorUpdatedBlock
setHasCalledQueryCursorUpdatedBlock:
_shouldFetchAssetContent
_fetchAllResults
_hasCalledQueryCursorUpdatedBlock
_query
_cursor
_resultsLimit
_resultsCursor
_recordFetchCompletionBlock
_queryCursorUpdatedBlock
_desiredKeySet
_zoneID
_recordFetcher
_fetchRecordsGroup
_numRequestsSent
_requestInfos
_assetTransferOptionsByKey
T@"NSSet",&,N,V_desiredKeySet
TB,N,V_shouldFetchAssetContent
T@"CKRecordZoneID",&,N,V_zoneID
T@"CKDRecordFetchAggregator",&,N,V_recordFetcher
T@"CKQueryCursor",&,N,V_resultsCursor
TB,N,V_fetchAllResults
T@"NSObject<OS_dispatch_group>",&,N,V_fetchRecordsGroup
TQ,N,V_numRequestsSent
T@"NSMutableArray",&,N,V_requestInfos
T@"NSDictionary",&,N,V_assetTransferOptionsByKey
TB,N,V_hasCalledQueryCursorUpdatedBlock
T@"<CKQueryOperationCallbacks>",&,D,N
T@"CKQuery",R,N,V_query
T@"CKQueryCursor",R,N,V_cursor
TQ,R,N,V_resultsLimit
T@?,C,N,V_recordFetchCompletionBlock
T@?,C,N,V_queryCursorUpdatedBlock
hasContainerName
hasEnvironment
containerName
setContainerName:
_containerName
T@"NSString",&,N,V_containerName
T@"NSString",&,N,V_environment
addRequestForRecordID:forOperation:withCompletionHandler:
createFetchOperationForItemIDs:operationQueue:operationConfigurationBlock:
fileAndLine
setFileAndLine:
count
setCount:
_fileAndLine
_count
T@"NSString",&,N,V_fileAndLine
TQ,N,V_count
TQ,N,V_size
initWithLogTypes:
eventMatched:
finish
totalSizeByLine
setTotalSizeByLine:
totalCountByLine
setTotalCountByLine:
_totalSizeByLine
_totalCountByLine
T@"NSMutableDictionary",&,V_totalSizeByLine
T@"NSMutableDictionary",&,V_totalCountByLine
hasZoneIdentifier
setOnlyFetchPCSInfo:
setHasOnlyFetchPCSInfo:
hasOnlyFetchPCSInfo
hasContinuationMarker
onlyFetchPCSInfo
continuationMarker
setContinuationMarker:
_continuationMarker
_onlyFetchPCSInfo
T@"CKDPRecordZoneIdentifier",&,N,V_zoneIdentifier
TB,N,V_onlyFetchPCSInfo
T@"NSData",&,N,V_continuationMarker
_willRetryFetch
zonePCSData
setZonePCSData:
itemTypeName
needsZoneishPCS
hasAllPCSData
_handlePCSDataFetched:withError:
_fetchPCSDataFromDatabase
_fetchDependentPCS
_fetchDepedentPCSInSharedDatabase
_saveZoneToServer:completion:
_saveZoneToServer:withPCS:zoneishPCS:previousEtag:completion:
_saveNewPCSOnZone:completion:
_fetchPCSDataFromServer
_createAdditionalPCS
_decryptPCS
_decryptZonePCSInSharedDatabase
_decryptZonePCSUsingServiceIdentities
_handleDecryptedZonePCSData:withError:
_saveUpdatedPCSToServer
_savePCSDataToCache
shouldCreateZoneishPCS
setShouldCreateZoneishPCS:
_shouldCreateZoneishPCS
T@"CKRecordZoneID",R,N
T@"CKDZonePCSData",&,N
TB,N,V_shouldCreateZoneishPCS
initWithApplicationID:containerID:personaID:
setPersonaID:
_applicationID
T@"CKDApplicationID",R,N,V_applicationID
T@"NSString",C,N,V_personaID
initWithAppContainerTuple:accountID:
setAccountID:
T@"NSString",C,N,V_accountID
hasAnonymousShareTupleHash
hasEncryptedShareTuple
anonymousShareTupleHash
setAnonymousShareTupleHash:
encryptedShareTuple
setEncryptedShareTuple:
_anonymousShareTupleHash
_encryptedShareTuple
T@"NSString",&,N,V_anonymousShareTupleHash
T@"NSData",&,N,V_encryptedShareTuple
sharedManager
resetPrivacySettingsWithCompletionHandler:
_resetPrivacySettingsForAppContainerAccountTuple:completionHandler:
privacyManagerQueue
setPrivacyManagerQueue:
operations
setOperations:
_privacyManagerQueue
_operations
T@"NSObject<OS_dispatch_queue>",&,N,V_privacyManagerQueue
T@"NSMutableSet",&,N,V_operations
initWithOperation:container:operationQueue:
setIsFinished:
numberOfCallbacks
addCallbackForItemWithID:operation:callback:
removeCallbacksForItemWithID:
callbacksForItemWithID:
allItemIDs
performCallbacksForItemWithID:withItem:error:
finishFetchOperationWithError:
cancelFetchOperation
canBeUsedForOperation:
canBeUsedForPendingFetch:
dependentOperationListContainsRunningFetch:
dependentOperationListContainsOperationID:
queuedDate
setQueuedDate:
completionHandler
setCompletionHandler:
equivalentRunningFetch
setEquivalentRunningFetch:
setOsActivity:
completionHandlersByItemID
setCompletionHandlersByItemID:
lastCompletionHandlerCount
setLastCompletionHandlerCount:
lastRequestDate
setLastRequestDate:
scope
setScope:
highestQOS
setHighestQOS:
runningOperationID
setRunningOperationID:
dependentOperationIDs
setDependentOperationIDs:
dependentOperationIDsByItemID
setDependentOperationIDsByItemID:
setUnitTestOverrides:
initialOperation
setInitialOperation:
_isFinished
_queuedDate
_completionHandler
_equivalentRunningFetch
_completionHandlersByItemID
_lastCompletionHandlerCount
_lastRequestDate
_scope
_highestQOS
_runningOperationID
_dependentOperationIDs
_dependentOperationIDsByItemID
_unitTestOverrides
_initialOperation
T@"NSObject<OS_os_activity>",&,N,V_osActivity
T@"NSMutableDictionary",&,N,V_completionHandlersByItemID
TQ,N,V_lastCompletionHandlerCount
T@"NSDate",&,N,V_lastRequestDate
T@"CKDContainer",W,N,V_container
T@"NSOperationQueue",W,N,V_operationQueue
Tq,N,V_scope
Tq,N,V_highestQOS
T@"NSString",&,N,V_runningOperationID
T@"NSMutableSet",&,N,V_dependentOperationIDs
T@"NSMutableDictionary",&,N,V_dependentOperationIDsByItemID
T@"NSMutableDictionary",&,N,V_unitTestOverrides
T@"CKDOperation",&,N,V_initialOperation
TB,N,V_isFinished
T@"NSDate",&,N,V_queuedDate
T@?,C,N,V_completionHandler
T@"CKDQueuedFetch",W,N,V_equivalentRunningFetch
performRequest
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didCompleteWithError:
URLSession:task:_willSendRequestForEstablishedConnection:completionHandler:
URLSession:_taskIsWaitingForConnection:
URLSession:task:_conditionalRequirementsChanged:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didReceiveData:
URLSession:_willRetryBackgroundDataTask:withError:
_onLifecycleQueue
lifecycleQueue
httpMethod
addSignatureForRequestOperation:
requestOperations
requestBodyStream
requestOperationCountsByOperationType
_registerRequestOperationTypesForOperations:
hasRequestBody
expectsResponseBody
_authTokenWithCompletionHandler:
_renewAuthTokenWithCompletionHandler:
_handleAuthFailure
_handleServerProtobufResult:rawData:
_protobufObjectParsedBlock
_handleServerJSONResult:
_jsonObjectParsedBlock
_handlePlistResult:
_xmlObjectParsedBlock
defaultParserForContentType:
shouldLogResponseBody
additionalHeaderValues
expectsSingleObject
requestDidParseJSONObject:
requestDidParsePlistObject:
requestDidParsePlaintextObject:
requestDidParse509CertObject:
requestDidComplete
validate:
overrideRequestHeader:withValue:
serverType
partitionType
expectedResponseClass
requestMessageClass
path
shouldCompressBody
acceptContentType
protobufOperationName
parsingStandaloneMessage
requestContentType
operationRequestWithType:
requestGETPreAuth
operationGroupQuantity
validateAnonymousUserIDPropagation
requiresCKAnonymousUserIDs
operationIDForProtobuf
streamWriter
requiresAppPartitionURL
requiresUserPartitionURL
requiresConfiguration
requiresDeviceID
includeContainerServerInfo
allowsAuthedAccount
usesCloudKitAuthToken
usesiCloudAuthToken
sendRequestAnonymously
_setupPublicDatabaseURL
_setupPrivateDatabaseURL
_setupConfiguration
_fetchContainerScopedUserID
_fetchDeviceID
_registerPushTokens
_acquireZoneGates
_prepareAuthTokens
_prepareCloudKitAuthToken
prepareRequestWithCompletion:
_performRequest
requestOptions
_loadRequest:
_wrapErrorIfNecessary:
_finishOnLifecycleQueueWithError:
_triggerAutoBugCaptureWithErrorPayload:
markAsFinished
_tearDownStreamWriter
tearDownResources
tearDownResourcesAndReleaseTheZoneLocks:
performOnLifecycleQueueIfNotFinished:
performASyncOnLifecycleQueueIfNotFinished:
responseHeaders
lastRedirectURL
isolationLevel
_CFNetworkTaskIdentifierString
createAssetAuthorizeGetRequestOptionsHeaderInfoWithKey:value:
responseBodyParser
setResponseBodyParser:
responseStatusCode
requestProgressBlock
setRequestProgressBlock:
responseProgressBlock
setResponseProgressBlock:
completionBlock
allowAutomaticRedirects
setAllowAutomaticRedirects:
requestProperties
setRequestProperties:
requestUUID
automatedDeviceGroup
setAutomatedDeviceGroup:
clientProvidedAdditionalHeaderValues
setClientProvidedAdditionalHeaderValues:
fakeResponseOperationResultByItemID
setFakeResponseOperationResultByItemID:
needsAuthRetry
setNeedsAuthRetry:
isWaitingOnAuthRenew
setIsWaitingOnAuthRenew:
isHandlingAuthRetry
setIsHandlingAuthRetry:
setLifecycleQueue:
urlSessionTask
setUrlSessionTask:
c2RequestOptions
setC2RequestOptions:
c2NetworkingDelegate
setC2NetworkingDelegate:
response
setResponse:
urlSession
setUrlSession:
responseObjectUUIDs
setResponseObjectUUIDs:
trafficLogger
setTrafficLogger:
setDeviceID:
numDownloadedElements
setNumDownloadedElements:
didRetryAuth
setDidRetryAuth:
lastRetryAuthError
setLastRetryAuthError:
setCancelled:
haveCachedServerType
setHaveCachedServerType:
haveCachedPartitionType
setHaveCachedPartitionType:
cachedServerType
setCachedServerType:
cachedPartitionType
setCachedPartitionType:
dateRequestWentOut
setDateRequestWentOut:
metrics
setMetrics:
timingData
setTimingData:
voucher
setVoucher:
cloudKitAuthToken
setCloudKitAuthToken:
iCloudAuthToken
setICloudAuthToken:
didReceiveResponseBodyData
setDidReceiveResponseBodyData:
serverProvidedAutoBugCaptureReason
setServerProvidedAutoBugCaptureReason:
serverProvidedTapToRadarRequest
setServerProvidedTapToRadarRequest:
serverProvidedAutoSysdiagnoseCollectionReason
setServerProvidedAutoSysdiagnoseCollectionReason:
countsByRequestOperationType
setCountsByRequestOperationType:
overriddenHeaders
setOverriddenHeaders:
redirectHistory
setRedirectHistory:
didFetchNilAuthToken
setDidFetchNilAuthToken:
_responseStatusCode
_requestUUID
_didSendRequest
_didFinishLoading
_finished
_didRetrySignature
_responseBodyParser
_allowAutomaticRedirects
_requestProgressBlock
_responseProgressBlock
_completionBlock
_fakeResponseData
_haveParsedFakeResponseData
_streamWriter
_transmissionActivity
_needsAuthRetry
_isWaitingOnAuthRenew
_isHandlingAuthRetry
_didRetryAuth
_cancelled
_haveCachedServerType
_haveCachedPartitionType
_didReceiveResponseBodyData
_didFetchNilAuthToken
_requestProperties
_requestOperations
_automatedDeviceGroup
_clientProvidedAdditionalHeaderValues
_fakeResponseOperationResultByItemID
_lifecycleQueue
_urlSessionTask
_c2RequestOptions
_c2NetworkingDelegate
_response
_urlSession
_responseObjectUUIDs
_trafficLogger
_deviceID
_numDownloadedElements
_lastRetryAuthError
_cachedServerType
_cachedPartitionType
_dateRequestWentOut
_metrics
_timingData
_voucher
_cloudKitAuthToken
_iCloudAuthToken
_serverProvidedAutoBugCaptureReason
_serverProvidedTapToRadarRequest
_serverProvidedAutoSysdiagnoseCollectionReason
_countsByRequestOperationType
_overriddenHeaders
_redirectHistory
T@"NSObject<OS_dispatch_queue>",&,N,V_lifecycleQueue
T@"NSURLSessionDataTask",&,V_urlSessionTask
T@"C2RequestOptions",&,V_c2RequestOptions
T@"NSObject<C2NetworkingDelegate>",&,N,V_c2NetworkingDelegate
T@"NSURLRequest",&,V_request
T@"NSHTTPURLResponse",&,V_response
T@"NSURLSession",&,V_urlSession
T@"NSMutableSet",&,N,V_responseObjectUUIDs
T@"CKDTrafficLogger",&,N,V_trafficLogger
T@"NSString",C,N,V_deviceID
TQ,N,V_numDownloadedElements
TB,N,V_didRetryAuth
T@"NSError",&,N,V_lastRetryAuthError
cancelled
TB,GisCancelled,V_cancelled
TB,N,V_haveCachedServerType
TB,N,V_haveCachedPartitionType
Tq,N,V_cachedServerType
Tq,N,V_cachedPartitionType
T@"CKDProtocolTranslator",&,N,V_translator
T@"NSDate",&,V_dateRequestWentOut
T@"CKDOperationMetrics",&,N,V_metrics
T@"NSDictionary",&,N,V_timingData
T@"NSObject<OS_voucher>",&,N,V_voucher
T@"NSString",&,N,V_cloudKitAuthToken
T@"NSString",&,N,V_iCloudAuthToken
TB,N,V_didReceiveResponseBodyData
T@"NSString",C,N,V_serverProvidedAutoBugCaptureReason
T@"CKTapToRadarRequest",&,N,V_serverProvidedTapToRadarRequest
T@"NSString",&,N,V_serverProvidedAutoSysdiagnoseCollectionReason
T@"NSMutableDictionary",&,N,V_countsByRequestOperationType
T@"NSMutableDictionary",&,N,V_overriddenHeaders
T@"NSMutableArray",&,N,V_redirectHistory
TB,N,V_didFetchNilAuthToken
T@"CKDContainer",R,N,V_container
TB,N,V_allowAutomaticRedirects
T@"NSDictionary",&,N,V_requestProperties
T@"NSString",&,N,V_automatedDeviceGroup
T@"NSDictionary",&,N,V_unitTestOverrides
T@"CKDProtobufStreamWriter",R,N,V_streamWriter
T@?,C,N,V_requestProgressBlock
T@?,C,N,V_responseProgressBlock
T@?,C,N,V_completionBlock
T@"CKDResponseBodyParser",&,N,V_responseBodyParser
T@"NSDictionary",&,N,V_clientProvidedAdditionalHeaderValues
T@"NSInputStream",R,N
T@"NSArray",R,N,V_requestOperations
Ti,R,N
Ti,R,N,V_requestOriginator
T@"NSURL",R,N
T@"NSDictionary",&,N,V_fakeResponseOperationResultByItemID
Tq,R,N,V_responseStatusCode
T@"NSString",R,N,V_requestUUID
TB,V_needsAuthRetry
TB,V_isWaitingOnAuthRenew
TB,V_isHandlingAuthRetry
setBadgeCount:
setHasBadgeCount:
hasBadgeCount
setForDevice:
setHasForDevice:
hasForDevice
badgeCount
forDevice
_badgeCount
_forDevice
TI,N,V_badgeCount
TB,N,V_forDevice
hasSignature
setHasSize:
hasSize
setLastSection:
setHasLastSection:
hasLastSection
signature
setSignature:
lastSection
_signature
_lastSection
T@"NSData",&,N,V_signature
Tq,N,V_size
TB,N,V_lastSection
hasOwner
hasFileSignature
hasReferenceSignature
owner
setOwner:
fileSignature
setFileSignature:
referenceSignature
setReferenceSignature:
_fileSignature
_owner
_referenceSignature
T@"NSString",&,N,V_owner
T@"NSData",&,N,V_fileSignature
T@"NSData",&,N,V_referenceSignature
initWithRecordID:fieldName:mergeableDeltaID:fileSignature:referenceSignature:
assetContextString
encryptedDataContextString
mergeableDeltaID
setMergeableDeltaID:
_mergeableDeltaID
T@"CKRecordID",&,N,V_recordID
T@"NSString",&,N,V_fieldName
T@"CKMergeableDeltaID",&,N,V_mergeableDeltaID
_legacyServiceNameForContainerID:
noMatchingIdentityErrorForPCSError:withErrorCode:description:
publicKeyIDFromIdentity:
protectionIdentifierFromShareProtection:
allProtectionIdentifiersFromShareProtection:
pcsOverrideKeys
_checkAndClearPCSTestOverrideForKey:
_checkPCSTestOverrideForKey:
_pcsTestOverrideForKey:
sharingFingerprintsContainPublicKeyWithData:error:
serviceTypeForSharing
updateAccount:clearPCSCacheHandler:
initWithContainer:
_isAllowlistedKeyRollingContainerID:
_pcsObjectKindForCKDPCSBlobType:
debugSharingIdentity
lastMissingManateeIdentityErrorDateForCurrentService
publicKeyVersionForServiceType:
pcsServiceName
currentServiceIsManatee
setPCSServiceNameOverwrite:
copyPublicKeyForService:withError:
copyAllPublicKeysForService:withError:
copyDiversifiedIdentityForService:withError:
copyDiversifiedPublicKeyForService:withError:
participantPublicKeyForServiceType:error:
createRandomSharingIdentityWithError:
createCombinedIdentityWithOutOfNetworkPrivateKey:publicSharingIdentity:
createProtectionInfoFromOONPrivateKey:privateToken:OONProtectionInfo:error:
canDecryptInvitedProtectionData:participantProtectionInfo:serviceType:error:
dataFromSharingIdentity:error:
createSharingIdentityFromData:error:
createPublicSharingIdentityFromPublicKey:error:
_addIdentity:withService:toPCS:
addIdentityForService:toPCS:
_locked_markMissingIdentitiesFromFailedDecryptError:serviceName:
_locked_createZonePCSWithSyncKeyRegistryRetry:keySyncAnalytics:completionHandler:
createZonePCSWithSyncKeyRegistryRetry:completionHandler:
createZonePCSWithCompletionHandler:
createZonePCSWithError:
dataFromZonePCS:error:
getAllPublicKeysForExportedData:error:
findSelfParticipantOnShareMetadata:invitationToken:
getCurrentIdentityExportedPrivateKey
generateOctopusAnonymousUserID
generateAnonymousCKUserIDForCurrentUserInShare:containerID:acceptA2AShareUsingVersionOneAnonymousIdentifier:
createSignatureWithIdentity:dataToBeSigned:error:
_locked_createPCSFromData:ofType:usingPCSServiceType:tryDecryptingWithOtherServices:withSyncKeyRegistryRetry:zonePCSModificationDate:keySyncAnalytics:completionHandler:
_checkUnitTestOverridesForDecryptionFailuresWithState:shouldRetry:error:
_createPCSFromData:ofType:usingPCSServiceType:tryDecryptingWithOtherServices:withSyncKeyRegistryRetry:zonePCSModificationDate:completionHandler:
createZonePCSFromData:usingServiceIdentityWithType:zonePCSModificationDate:completionHandler:
createIngestedPPPCSDataFromInvitationData:completionHandler:
availableIdentityForService:error:
_locked_checkIdentitiesForService:withSyncKeyRegistryRetry:keySyncAnalytics:completionHandler:
checkIdentitiesForService:withSyncKeyRegistryRetry:completionHandler:
createZonePCSFromData:usingServiceIdentityWithType:error:
decryptSharedZonePCSData:withInvitedPCS:error:
etagFromZonePCS:error:
repairZonePCSData:error:
zonePCSNeedsKeyRolled:
zonePCSNeedsKeyRolled:bypassAllowlistedContainers:
zonePCSNeedsUpdate:
isRemindersZoneThatNeedsUpdate:
updateServiceIdentityOnZonePCS:
rollMasterKeyForRecordPCS:
rollMasterKeyForRecordPCS:bypassAllowlistedContainers:
updateZoneIdentityForPCS:usingZonePCS:bypassAllowlistedContainers:
isPreviouslyUndecryptablePCS:
markUndecryptablePCS:
removePrivateKeysForKeyIDs:fromPCS:
rollIdentityForSharePCS:removeAllExistingPrivateKeys:error:
updateIdentityAndRollKeyForZonePCS:usingServiceIdentityWithType:
canRollShareKeys
keyRollForZoneWideShareWithZonePCS:sharePCS:
keyRollIfNeededForPerRecordPCS:
keyRollForZoneWideShareRecordPCS:sharedZonePCS:sharePCS:
createRecordPCSWithZonePCS:sharePCS:createLite:error:
createRecordPCSWithEncryptedZonePCS:sharePCS:createLite:error:
dataFromRecordPCS:error:
createPCSObjectFromData:ofType:sharedToPCS:logFailure:error:
createPCSObjectFromData:ofType:sharedToPCS:error:
addSharePCS:toRecordPCS:permission:error:
addSharePCS:toRecordPCS:error:
updateSigningIdentityOnPCS:usingSignedPCS:
removeSharePCS:fromRecordPCS:error:
etagFromRecordPCS:error:
createEmptySignedSharePCSOfType:forPCSServiceType:withError:
createEmptySharePCSOfType:error:
setOwnerIdentity:onPCS:
_addPublicIdentityForService:toSharePCS:withError:
createSharePCSOfType:forPCSServiceType:error:
createSharePublicPCSWithIdentity:error:
createChainPCSWithError:
dataFromSharePCS:error:
createSharePCSFromData:sharingIdentity:logFailure:error:
createSharePCSFromData:sharingIdentity:error:
createSharePCSFromData:ofType:withService:logFailure:error:
createSharePCSFromData:ofType:withService:error:
createSharePCSFromData:sharePrivateKey:error:
createSharePCSFromEncryptedData:error:
publicKeyDataFromPCS:error:
decryptPCSDataOnSharePCS:completionHandler:
_locked_decryptCurrentPerParticipantPCSDataOnSharePCS:completionHandler:
_locked_decryptPCSDataOnSharePCS:withPublicSharingKey:completionHandler:
pcsDataFromFetchedShare:completionHandler:
pcsDataFromFetchedShare:withServiceType:completionHandler:
pcsDataFromFetchedShare:withPublicSharingKey:withServiceType:completionHandler:
_locked_pcsDataFromFetchedShare:withPublicSharingKey:withServiceType:completionHandler:
copyPublicAuthorshipIdentityFromPCS:
createNewSharePCSDataForShareWithID:withPublicSharingKey:addDebugIdentity:error:
etagFromSharePCS:error:
addPublicIdentity:toSharePCS:permission:
addIdentityBackToPCS:
addSharingIdentity:toSharePCS:permission:
removePublicIdentity:fromSharePCS:
removeSharingIdentity:fromSharePCS:
removeEncryptedPCS:fromSharePCS:
removePublicKeys:fromPCS:
removePublicKeyID:fromPCS:
sharingIdentityDataFromPCS:error:
decryptChainPCSForRecordPCS:
containerSupportsEnhancedContext
unwrapAssetKey:withRecordPCS:inContext:withError:
wrapAssetKey:withRecordPCS:inContext:withError:
newAssetKeyWithType:withError:
referenceIdentifierStringFromAssetKey:
referenceSignatureFromAssetKey:
unwrapEncryptedData:withPCS:inContext:
_unwrapEncryptedData:usingKeyID:forPCS:withContextString:
unwrapEncryptedData:withPCS:withContextString:
wrapEncryptedData:withPCS:inContext:
wrapEncryptedData:withPCS:withContextString:
_lockedBoundaryKeyDataWithCompletionHandler:
boundaryKeyDataWithCompletionHandler:
serviceTypeIsManatee:
synchronizeUserKeyRegistryForServiceType:shouldThrottle:context:completionHandler:
sendCoreAnalyticsEventForKeySync:
_onSynchronizeQueue:
_copyShareProtectionFromExportedData:ofType:identities:error:
etagFromPCSData:
_isKeyRollingUnitTestContainerID:
addEntriesForUnitTestOverrides:
setAccount:
containerScopedUserIDProvider
responsibleBundleID
forceEnableReadOnlyManatee
useZoneWidePCS
identityManager
setLastMissingManateeIdentityErrorDateForCurrentService:
missingIdentityPublicKeys
setMissingIdentityPublicKeys:
servicesWithMissingIdentities
setServicesWithMissingIdentities:
undecryptablePCSDataHashes
setUndecryptablePCSDataHashes:
boundaryKeyData
setBoundaryKeyData:
pcsUpdateSource
setPcsUpdateSource:
synchronizeQueue
setSynchronizeQueue:
pcsTestOverrides
setPcsTestOverrides:
_forceEnableReadOnlyManatee
_useZoneWidePCS
_containerScopedUserIDProvider
_responsibleBundleID
_identityManager
_lastMissingManateeIdentityErrorDateForCurrentService
_missingIdentityPublicKeys
_servicesWithMissingIdentities
_undecryptablePCSDataHashes
_boundaryKeyData
_pcsUpdateSource
_synchronizeQueue
_pcsTestOverrides
T@"CKDAccount",&,V_account
T@"<CKDContainerScopedUserIDProvider>",R,W,N,V_containerScopedUserIDProvider
T@"NSString",R,N,V_responsibleBundleID
TB,R,N,V_forceEnableReadOnlyManatee
TQ,R,N,V_mmcsEncryptionSupport
TB,R,N,V_useZoneWidePCS
T@"CKDPCSIdentityManager",R,N,V_identityManager
T@"NSDate",&,N,V_lastMissingManateeIdentityErrorDateForCurrentService
T@"NSMutableSet",&,N,V_missingIdentityPublicKeys
T@"NSMutableSet",&,N,V_servicesWithMissingIdentities
T@"NSMutableSet",&,N,V_undecryptablePCSDataHashes
T@"NSData",&,N,V_boundaryKeyData
T@"NSObject<OS_dispatch_source>",&,N,V_pcsUpdateSource
T@"NSObject<OS_dispatch_queue>",&,N,V_synchronizeQueue
T@"NSMutableDictionary",&,N,V_pcsTestOverrides
T@"CKDLogicalDeviceContext",R,N,V_deviceContext
_performCallbackForURL:withMetadata:error:
_decodeProtectedFullToken:tokenMetadata:
_fetchShortTokenMetadata
_handleTokenResolveWithLookupInfo:shareMetadata:responseCode:urlByShortTokenLookupInfos:tokensToFetchByURL:
_continueSharePCSPrepForShareMetadata:shareURL:
_prepPPPCSDataForDugongShareMetadata:withInvitationToken:completionHandler:
_continueHandlingFetchedShareMetadata:shareURL:
_decryptRootRecordsForShareURL:withMetadata:completionHandler:
_currentUserIsOONForShareMetadata:
_prepareShortTokens
forceDSRefetch
setForceDSRefetch:
errorOnOON
setErrorOnOON:
shareMetadataFetchedBlock
setShareMetadataFetchedBlock:
shareURLsToFetch
setShareURLsToFetch:
shareTokenMetadatasToFetchByURL
setShareTokenMetadatasToFetchByURL:
shouldFetchRootRecord
setShouldFetchRootRecord:
rootRecordDesiredKeysSet
setRootRecordDesiredKeysSet:
clientWillDisplaySystemAcceptPrompt
setClientWillDisplaySystemAcceptPrompt:
shareInvitationTokensByShareURL
setShareInvitationTokensByShareURL:
overwriteContainerPCSServiceIfManatee
setOverwriteContainerPCSServiceIfManatee:
skipShareDecryption
setSkipShareDecryption:
_forceDSRefetch
_errorOnOON
_shouldFetchRootRecord
_clientWillDisplaySystemAcceptPrompt
_overwriteContainerPCSServiceIfManatee
_skipShareDecryption
_shareMetadataFetchedBlock
_shareURLsToFetch
_shareTokenMetadatasToFetchByURL
_rootRecordDesiredKeysSet
_shareInvitationTokensByShareURL
T@"NSMutableArray",&,N,V_shareURLsToFetch
T@"NSMutableDictionary",&,N,V_shareTokenMetadatasToFetchByURL
TB,N,V_shouldFetchRootRecord
T@"NSSet",&,N,V_rootRecordDesiredKeysSet
TB,N,V_clientWillDisplaySystemAcceptPrompt
T@"NSDictionary",&,N,V_shareInvitationTokensByShareURL
TB,N,V_overwriteContainerPCSServiceIfManatee
TB,N,V_skipShareDecryption
T@"<CKFetchShareMetadataOperationCallbacks>",&,D,N
TB,N,V_forceDSRefetch
TB,N,V_errorOnOON
T@?,C,N,V_shareMetadataFetchedBlock
shortSharingToken
shortSharingTokenHashData
routingKey
setRoutingKey:
shortSharingTokenData
setShortSharingTokenData:
publicTokenData
setPublicTokenData:
privateTokenData
setPrivateTokenData:
participantID
setParticipantID:
_routingKey
_shortSharingTokenData
_publicTokenData
_privateTokenData
_participantID
T@"NSString",&,N,V_routingKey
T@"NSData",&,N,V_shortSharingTokenData
T@"NSData",R,N
T@"NSData",&,N,V_publicTokenData
T@"NSData",&,N,V_privateTokenData
T@"NSString",&,N,V_participantID
_handleRecordSaved:error:
_saveRecords
_copyShareProtectionFromRecord:error:
_handleRecordFetched:recordID:error:
_fetchRecords
recordWebSharedBlock
setRecordWebSharedBlock:
recordWebUnsharedBlock
setRecordWebUnsharedBlock:
recordIDsToShare
setRecordIDsToShare:
recordIDsToUnshare
setRecordIDsToUnshare:
recordIDsToShareReadWrite
setRecordIDsToShareReadWrite:
fetchedRecordIDs
setFetchedRecordIDs:
recordsToSaveByID
setRecordsToSaveByID:
numSaveAttempts
setNumSaveAttempts:
_numSaveAttempts
_recordWebSharedBlock
_recordWebUnsharedBlock
_recordIDsToShare
_recordIDsToUnshare
_recordIDsToShareReadWrite
_fetchedRecordIDs
_recordsToSaveByID
T@"NSArray",&,N,V_recordIDsToShare
T@"NSArray",&,N,V_recordIDsToUnshare
T@"NSArray",&,N,V_recordIDsToShareReadWrite
T@"NSMutableSet",&,N,V_fetchedRecordIDs
T@"NSMutableDictionary",&,N,V_recordsToSaveByID
Ti,N,V_numSaveAttempts
T@"<CKModifyWebSharingOperationCallbacks>",&,D,N
T@?,C,N,V_recordWebSharedBlock
T@?,C,N,V_recordWebUnsharedBlock
underlyingItemReader
setUnderlyingItemReader:
_underlyingItemReader
T@"<CKDMMCSItemReaderWriterProtocol>",&,N,V_underlyingItemReader
accessWasGrantedBlock
setAccessWasGrantedBlock:
accessWasRevokedBlock
setAccessWasRevokedBlock:
recordIDsToGrant
setRecordIDsToGrant:
recordIDsToRevoke
setRecordIDsToRevoke:
_accessWasGrantedBlock
_accessWasRevokedBlock
_recordIDsToGrant
_recordIDsToRevoke
T@"NSArray",&,N,V_recordIDsToGrant
T@"NSArray",&,N,V_recordIDsToRevoke
T@"<CKModifyRecordAccessOperationCallbacks>",&,D,N
T@?,C,N,V_accessWasGrantedBlock
T@?,C,N,V_accessWasRevokedBlock
setRequestedSize:
setHasRequestedSize:
hasRequestedSize
setUploadedSize:
setHasUploadedSize:
hasUploadedSize
hasUploadReceipt
requestedSize
uploadedSize
uploadReceipt
setUploadReceipt:
_requestedSize
_uploadedSize
_uploadReceipt
Tq,N,V_requestedSize
Tq,N,V_uploadedSize
T@"NSString",&,N,V_uploadReceipt
hasZoneProtectionInfoTag
zoneProtectionInfoTag
setZoneProtectionInfoTag:
_zoneProtectionInfoTag
T@"NSString",&,N,V_zoneProtectionInfoTag
hasName
hasValue
name
setName:
value
setValue:
_name
_value
T@"NSString",&,N,V_name
T@"CKDPConfigurationFieldValue",&,N,V_value
addRequestForZoneID:forOperation:withCompletionHandler:
_handleDiscoveredIdentity:lookupInfo:responseCode:
_discoverIdentitiesWithLookupInfos:completionBlock:
discoverUserIdentitiesProgressBlock
setDiscoverUserIdentitiesProgressBlock:
userIdentityLookupInfos
setUserIdentityLookupInfos:
_discoverUserIdentitiesProgressBlock
_userIdentityLookupInfos
T@"NSArray",&,N,V_userIdentityLookupInfos
T@?,C,N,V_discoverUserIdentitiesProgressBlock
_discoverIdentitiesBatched:
_populateFakeUnitTestLookupInfos:
_populateRealUserIdentityLookupInfos
_populateUserIdentityLookupInfos
contactIdentifiersByLookupInfo
setContactIdentifiersByLookupInfo:
_contactIdentifiersByLookupInfo
T@"NSMutableDictionary",&,N,V_contactIdentifiersByLookupInfo
_setupC2MetricsEndpointWithContainer:
_attributeCurrentContainer:config:
metricOptionsForNetworkOperation:
metricOptionsForNetworkRequest:
metricOptionsForEventMetric:metricType:container:config:reportingCompletionBlock:
_encryptMergeableDeltas
_uploadAndReplaceDeltas
_uploadAndReplaceDeltas:
handleDeltaUploaded:result:
handleReplaceDeltasRequest:result:
uploadDeltaCompletionBlock
setUploadDeltaCompletionBlock:
replaceDeltasRequestCompletionBlock
setReplaceDeltasRequestCompletionBlock:
setReplacementRequests:
pendingReplacementRequests
setPendingReplacementRequests:
pendingDeltaUploads
setPendingDeltaUploads:
_uploadDeltaCompletionBlock
_replaceDeltasRequestCompletionBlock
_pendingReplacementRequests
_pendingDeltaUploads
T@"NSArray",C,N,V_deltas
T@"NSArray",C,N,V_replacementRequests
T@"NSMutableArray",&,N,V_pendingReplacementRequests
T@"NSMutableArray",&,N,V_pendingDeltaUploads
T@"<CKUploadMergeableDeltasOperationCallbacks>",&,D,N
T@?,C,N,V_uploadDeltaCompletionBlock
T@?,C,N,V_replaceDeltasRequestCompletionBlock
initWithDestinationZoneID:destinationDatabaseScope:
initWithDestinationZoneID:destinationDatabaseScope:sourceZoneID:sourceDatabaseScope:
isCrossOwner
destinationZoneID
setDestinationZoneID:
sourceZoneID
setSourceZoneID:
sourceDatabaseScope
setSourceDatabaseScope:
destinationDatabaseScope
setDestinationDatabaseScope:
_destinationZoneID
_sourceZoneID
_sourceDatabaseScope
_destinationDatabaseScope
T@"CKRecordZoneID",&,N,V_destinationZoneID
Tq,N,V_destinationDatabaseScope
T@"CKRecordZoneID",&,N,V_sourceZoneID
Tq,N,V_sourceDatabaseScope
assetBatch
setAssetBatch:
itemsByAssetId
setItemsByAssetId:
_assetBatch
_itemsByAssetId
T@"CKDAssetBatch",&,N,V_assetBatch
T@"NSMutableDictionary",&,N,V_itemsByAssetId
initWithOperation:assetTokenRequest:headers:
assetTokenRequest
setAssetTokenRequest:
transactionStateByRequestIDs
setTransactionStateByRequestIDs:
headers
setHeaders:
_assetTokenRequest
_transactionStateByRequestIDs
_headers
T@"CKDAssetTokenRequest",&,N,V_assetTokenRequest
T@"NSMapTable",&,N,V_transactionStateByRequestIDs
T@"NSDictionary",&,N,V_headers
shortSharingTokenFromFullToken:
shortSharingTokenFromData:
_reconstructShortToken
_performAuthKitVerification
_forceFetchShareMetadata
_reconstructShareURL
_verifyOONParticipant
verifyProgressURLReconstructedBlock
setVerifyProgressURLReconstructedBlock:
verifyProgressShareMetadataFetchedBlock
setVerifyProgressShareMetadataFetchedBlock:
vettingToken
vettingEmail
vettingPhone
encryptedKey
baseToken
displayedHostname
shortToken
setShortToken:
_verifyProgressURLReconstructedBlock
_verifyProgressShareMetadataFetchedBlock
_vettingToken
_vettingEmail
_vettingPhone
_encryptedKey
_baseToken
_displayedHostname
_shortToken
T@"NSString",R,N,V_vettingToken
T@"NSString",R,N,V_vettingEmail
T@"NSString",R,N,V_vettingPhone
T@"NSString",R,N,V_routingKey
T@"NSData",R,N,V_encryptedKey
T@"NSString",R,N,V_baseToken
T@"NSString",R,N,V_displayedHostname
T@"NSString",&,N,V_shortToken
T@"CKShareMetadata",&,N,V_shareMetadata
T@"<CKCompleteParticipantVettingOperationCallbacks>",&,D,N
T@?,C,N,V_verifyProgressURLReconstructedBlock
T@?,C,N,V_verifyProgressShareMetadataFetchedBlock
T@"NSURL",C,N,V_publicCloudDBURL
T@"NSURL",C,N,V_publicShareServiceURL
T@"NSURL",C,N,V_publicDeviceServiceURL
T@"NSURL",C,N,V_publicCodeServiceURL
T@"NSURL",C,N,V_publicMetricsServiceURL
T@"NSString",C,N,V_containerScopedUserID
T@"NSString",C,N,V_orgAdminUserID
Tq,N,V_environment
initWithOperation:serviceName:functionName:serializedParameters:resolvedBaseURL:
serializedResultsCallback
setSerializedResultsCallback:
setServiceName:
setFunctionName:
serializedParameters
setSerializedParameters:
resolvedBaseURL
setResolvedBaseURL:
_serializedResultsCallback
_serviceName
_functionName
_serializedParameters
_resolvedBaseURL
T@"NSString",C,N,V_serviceName
T@"NSString",C,N,V_functionName
T@"NSData",&,N,V_serializedParameters
T@"NSURL",C,N,V_resolvedBaseURL
T@?,C,N,V_serializedResultsCallback
hasServiceName
hasFunctionName
hasSerializedParameters
hasProtectedCloudComputeMetadata
hasAttestationRequest
hasTrustedTargetCryptoMetadata
protectedCloudComputeMetadata
setProtectedCloudComputeMetadata:
attestationRequest
setAttestationRequest:
trustedTargetCryptoMetadata
setTrustedTargetCryptoMetadata:
_attestationRequest
_protectedCloudComputeMetadata
_trustedTargetCryptoMetadata
T@"NSString",&,N,V_serviceName
T@"NSString",&,N,V_functionName
T@"CKDPCodeFunctionInvokeRequestProtectedCloudComputeMetadata",&,N,V_protectedCloudComputeMetadata
T@"CKDPCodeFunctionInvokeRequestAttestationRequest",&,N,V_attestationRequest
T@"CKCDPTrustedTargetCryptoMetadata",&,N,V_trustedTargetCryptoMetadata
setUserPurge:
setHasUserPurge:
hasUserPurge
hasLastMissingManateeIdentityErrorDate
userPurge
lastMissingManateeIdentityErrorDate
setLastMissingManateeIdentityErrorDate:
_lastMissingManateeIdentityErrorDate
_userPurge
TB,N,V_userPurge
T@"CKDPDate",&,N,V_lastMissingManateeIdentityErrorDate
initWithOperation:query:cursor:limit:requestedFields:zoneID:
queryResponses
setQueryResponses:
setQuery:
setCursor:
limit
setLimit:
desiredAssetKeys
setDesiredAssetKeys:
recordsParsedBlock
setRecordsParsedBlock:
recordResponses
setRecordResponses:
_queryResponses
_limit
_desiredAssetKeys
_recordsParsedBlock
_recordResponses
T@"NSMutableArray",&,N,V_queryResponses
T@"NSData",&,N,V_resultsCursor
T@"NSMutableArray",&,N,V_recordResponses
T@"CKQuery",&,N,V_query
T@"NSData",&,N,V_cursor
TQ,N,V_limit
T@"NSArray",&,N,V_requestedFields
T@"NSSet",&,N,V_desiredAssetKeys
T@?,C,N,V_recordsParsedBlock
initWithPackage:trackProgress:
setManifestAsset:
setSectionAssets:
package
manifestAsset
sectionAssets
itemIndices
setItemIndices:
sectionIndices
setSectionIndices:
progressTracker
setProgressTracker:
setMMCSRequestOptions:
group
setGroup:
cancelTokens
setCancelTokens:
_package
_manifestAsset
_sectionAssets
_itemIndices
_sectionIndices
_progressTracker
_MMCSRequestOptions
_group
_cancelTokens
T@"CKPackage",R,N,V_package
T@"CKAsset",&,N,V_manifestAsset
T@"NSArray",&,N,V_sectionAssets
T@,&,N,V_itemIndices
T@"NSIndexSet",&,N,V_sectionIndices
T@"CKDProgressTracker",&,N,V_progressTracker
T@"CKDMMCSRequestOptions",&,N,V_MMCSRequestOptions
T@"NSObject<OS_dispatch_group>",&,N,V_group
T@"CKDCancelTokenGroup",&,N,V_cancelTokens
_removeUntrackedMMCSItems:
_didPrepareAsset:
_didMakeProgressForAsset:progress:
_didCommandForAsset:command:
_didDownloadAsset:error:
_tryToFillInTheDerivativeTemplateWithAsset:
_prepareForDownload
_didDownloadMMCSItem:inMemory:error:
_collectMetricsFromMMCSOperationMetrics:
_collectMetricsFromCompletedItemGroup:
_collectMetricsFromCompletedItemGroupSet:
_didDownloadMMCSItems:inMemory:error:
_didMakeProgressForMMCSItem:inMemory:
_didCommandForMMCSItem:command:
_didDownloadMMCSSectionItem:task:error:
_didDownloadMMCSSectionItems:task:error:
_didMakeProgressForMMCSSectionItem:task:
_downloadPackageSectionAtIndex:task:completionBlock:
_downloadPackageSectionsWithSectionEnumerator:task:completionBlock:
_downloadPackageSectionsWithTask:completionBlock:
_downloadPackageSectionsWithPendingTasks:downloadingTasks:completedTasks:
_download
_downloadMMCSItems:downloadTasksByPackages:shouldFetchAssetContentInMemory:
_postProcess
supportsClearAssetEncryption
shouldDownloadAssetFromTranscoder:
_downloadTranscodedAsset:inMemory:
downloadPreparationBlock
setDownloadPreparationBlock:
downloadProgressBlock
setDownloadProgressBlock:
downloadCommandBlock
setDownloadCommandBlock:
downloadCompletionBlock
setDownloadCompletionBlock:
urlFilledOutBlock
setUrlFilledOutBlock:
keyOrErrorForHostname
setKeyOrErrorForHostname:
queue
setQueue:
packageIndexSets
setPackageIndexSets:
assetsToDownloadInMemory
setAssetsToDownloadInMemory:
assetURLInfosToFillOut
setAssetURLInfosToFillOut:
MMCSItemsToDownload
setMMCSItemsToDownload:
MMCSItemsToDownloadInMemory
setMMCSItemsToDownloadInMemory:
assetsToDownloadFromTranscoder
setAssetsToDownloadFromTranscoder:
assetsToDownloadFromTranscoderInMemory
setAssetsToDownloadFromTranscoderInMemory:
downloadTasksByPackages
setDownloadTasksByPackages:
maxPackageDownloadsPerBatch
setMaxPackageDownloadsPerBatch:
_downloadPreparationBlock
_downloadProgressBlock
_downloadCommandBlock
_downloadCompletionBlock
_urlFilledOutBlock
_keyOrErrorForHostname
_queue
_packageIndexSets
_assetsToDownloadInMemory
_assetURLInfosToFillOut
_MMCSItemsToDownload
_MMCSItemsToDownloadInMemory
_assetsToDownloadFromTranscoder
_assetsToDownloadFromTranscoderInMemory
_downloadTasksByPackages
_maxPackageDownloadsPerBatch
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T@"NSArray",&,N,V_assetsToDownload
T@"NSArray",&,N,V_packageIndexSets
T@"NSArray",&,N,V_assetsToDownloadInMemory
T@"NSArray",&,N,V_assetURLInfosToFillOut
T@"NSMutableArray",&,N,V_MMCSItemsToDownload
T@"NSMutableArray",&,N,V_MMCSItemsToDownloadInMemory
T@"NSMutableArray",&,N,V_assetsToDownloadFromTranscoder
T@"NSMutableArray",&,N,V_assetsToDownloadFromTranscoderInMemory
T@"NSMapTable",&,N,V_downloadTasksByPackages
TQ,N,V_maxPackageDownloadsPerBatch
T@?,C,N,V_downloadPreparationBlock
T@?,C,N,V_downloadProgressBlock
T@?,C,N,V_downloadCommandBlock
T@?,C,N,V_downloadCompletionBlock
T@?,C,N,V_urlFilledOutBlock
T@"NSMutableDictionary",&,N,V_keyOrErrorForHostname
initWithOperationClassName:
_addMetrics:toAggregate:
_trimmedError:
addOperation:
merge:
operationClassName
recentErrorsByDate
operationCount
aggregateCKMetrics
aggregateMMCSMetrics
_operationClassName
_recentErrorsByDate
_operationCount
_aggregateCKMetrics
_aggregateMMCSMetrics
T@"NSString",R,N,V_operationClassName
T@"NSMutableDictionary",R,N,V_recentErrorsByDate
TQ,R,V_operationCount
T@"CKDOperationMetrics",R,N,V_aggregateCKMetrics
T@"CKDOperationMetrics",R,N,V_aggregateMMCSMetrics
valueType
hasRange
clearValues
addValue:
valuesCount
valueAtIndex:
range
setRange:
values
setValues:
_range
_values
T@"CKDPListRange",&,N,V_range
T@"NSMutableArray",&,N,V_values
quotaAvailable
setQuotaAvailable:
_quotaAvailable
TQ,N,V_quotaAvailable
T@"<CKFetchUserQuotaOperationCallbacks>",&,D,N
rootRecordDesiredKeysType
hasRoutingKey
hasShortTokenHash
setForceFetch:
setHasForceFetch:
hasForceFetch
setHasShouldFetchRootRecord:
hasShouldFetchRootRecord
clearRootRecordDesiredKeys
addRootRecordDesiredKeys:
rootRecordDesiredKeysCount
rootRecordDesiredKeysAtIndex:
hasParticipantId
shortTokenHash
setShortTokenHash:
forceFetch
rootRecordDesiredKeys
setRootRecordDesiredKeys:
participantId
setParticipantId:
_participantId
_rootRecordDesiredKeys
_shortTokenHash
_forceFetch
T@"NSData",&,N,V_shortTokenHash
TB,N,V_forceFetch
T@"NSMutableArray",&,N,V_rootRecordDesiredKeys
T@"NSString",&,N,V_participantId
initWithAssetZoneKey:
assetRecords
assetZoneKey
setAssetZoneKey:
setAssetRecords:
assetRecordsByRecordID
setAssetRecordsByRecordID:
_assetZoneKey
_assetRecords
_assetRecordsByRecordID
T@"NSMutableOrderedSet",&,N,V_assetRecords
T@"NSMutableDictionary",&,N,V_assetRecordsByRecordID
T@"CKDAssetZoneKey",&,N,V_assetZoneKey
_inflateFieldsFromData:
fieldData
fieldForKey:
dataRepresentation
recordFromData:
emptyFieldWithKey:
fieldValueTypeFromEncryptedDataObject:isInList:
fieldValueTypeFromObject:
objectIsAnEncryptedType:
fieldValueFromObject:forCache:
fieldValueFromObject:
encryptedFieldValueOfType:withObject:
fieldValueOfType:withObject:forCache:
fieldValueOfType:withObject:
locationFieldValueWithLatitude:longitude:
encryptedObjectRepresentationFromFieldValue:
objectRepresentationFromFieldValue:
objectRepresentationFromField:inRecord:asAnonymousCKUserID:
pFieldWithKey:value:forCache:
pFieldWithKey:value:
pFieldActionWithLocation:length:values:
initWithDelegate:
postSystemAvailabilityChanged:
delegate
setDelegate:
savedDelegateHash
setSavedDelegateHash:
_delegate
_savedDelegateHash
T@"<CKDSystemAvailabilityWatcher>",W,N,V_delegate
TQ,N,V_savedDelegateHash
sharedMonitor
removeNotifications
assertAvailability:
currentAvailabilityState
_logAvailabilityDescription
_clearVanishedWatchers
_systemMayNowBeReady
registerWatcher:
resetToUnavailableForUnitTests
simulateBuddyCompletedForUnitTests
simulateFirstUnlockForUnitTests
watcherWrappers
setWatcherWrappers:
availabilityState
setAvailabilityState:
simulatedavailabilityState
setSimulatedavailabilityState:
_watcherWrappers
_availabilityState
_simulatedavailabilityState
T@"NSMutableSet",&,N,V_watcherWrappers
TQ,V_availabilityState
TQ,V_simulatedavailabilityState
initWithOperation:shareRecordID:encryptedKey:participantID:baseToken:
vettingInitiationRequestCompletionBlock
setVettingInitiationRequestCompletionBlock:
shareRecordID
setShareRecordID:
setEncryptedKey:
setBaseToken:
_vettingInitiationRequestCompletionBlock
_shareRecordID
T@"CKRecordID",C,N,V_shareRecordID
T@"NSData",C,N,V_encryptedKey
T@"NSString",C,N,V_participantID
T@"NSString",C,N,V_baseToken
T@?,C,N,V_vettingInitiationRequestCompletionBlock
T@"CKDPIdentifier",&,N,V_identifier
sharedConnectionForAPSEnvironmentString:
initWithEnvironment:
getToken:
connection:didReceivePublicToken:
connection:didChangeConnectedStatus:
connectionDidReconnect:
setAPSEnvironmentString:
apsConnection
setApsConnection:
completionBlocks
setCompletionBlocks:
_apsEnvironmentString
_apsConnection
_completionBlocks
T@"APSConnection",&,N,V_apsConnection
T@"NSMutableArray",&,N,V_completionBlocks
T@"NSString",&,N,SsetAPSEnvironmentString:,V_apsEnvironmentString
CKLogErrorWithCode:format:
ck_dateFormatterWithString:
ck_dateWithNaturalLanguageString:
cryptoSessionsType
clearCryptoSessions
addCryptoSessions:
cryptoSessionsCount
cryptoSessionsAtIndex:
cryptoSessions
setCryptoSessions:
_cryptoSessions
T@"NSMutableArray",&,N,V_cryptoSessions
initWithOperation:containerIdentifier:
requireUserIDs
setRequireUserIDs:
containerServerInfo
setContainerServerInfo:
_requireUserIDs
_containerServerInfo
T@"CKDContainerServerInfo",C,N,V_containerServerInfo
TB,N,V_requireUserIDs
T@"NSString",C,N,V_containerIdentifier
setReservedSize:
setHasReservedSize:
hasReservedSize
hasUploadURL
setUploadURLExpirationTimeSeconds:
setHasUploadURLExpirationTimeSeconds:
hasUploadURLExpirationTimeSeconds
reservedSize
uploadURL
setUploadURL:
uploadURLExpirationTimeSeconds
_reservedSize
_uploadURLExpirationTimeSeconds
_uploadURL
Tq,N,V_reservedSize
T@"NSString",&,N,V_uploadURL
Tq,N,V_uploadURLExpirationTimeSeconds
_synchronizeUserKeyRegistryIfNeeded
_sendCoreAnalyticsEventForKeySync
_sendErrorForFailedZones
_handleRecordZoneSaved:responseCode:serverCapabilities:expirationDate:expired:
_handleRecordZoneDeleted:responseCode:
_saveZonesToServer
_createNewPCSForZone:completionHandler:
_fetchPCSDataForZone:fromServer:
_fetchPCSDataForZonesFromServer:
_checkAndPrepareZones
saveCompletionBlock
setSaveCompletionBlock:
deleteCompletionBlock
setDeleteCompletionBlock:
recordZonesToSave
setRecordZonesToSave:
recordZoneIDsToDelete
setRecordZoneIDsToDelete:
recordZonesByZoneID
setRecordZonesByZoneID:
retryableErrorsByZoneID
setRetryableErrorsByZoneID:
allowDefaultZoneSave
setAllowDefaultZoneSave:
markZonesAsUserPurged
setMarkZonesAsUserPurged:
numZoneSaveAttempts
setNumZoneSaveAttempts:
maxZoneSaveAttempts
setMaxZoneSaveAttempts:
dontFetchFromServer
setDontFetchFromServer:
didSynchronizeUserKeyRegistry
setDidSynchronizeUserKeyRegistry:
zonesWaitingOnKeyRegistrySync
setZonesWaitingOnKeyRegistrySync:
keySyncAnalytics
setKeySyncAnalytics:
_hasZoneSaves
_hasZoneDeletes
_allowDefaultZoneSave
_markZonesAsUserPurged
_dontFetchFromServer
_didSynchronizeUserKeyRegistry
_numZoneSaveAttempts
_saveCompletionBlock
_deleteCompletionBlock
_recordZonesToSave
_recordZoneIDsToDelete
_recordZonesByZoneID
_retryableErrorsByZoneID
_maxZoneSaveAttempts
_zonesWaitingOnKeyRegistrySync
_keySyncAnalytics
T@"NSMutableArray",&,N,V_recordZonesToSave
T@"NSArray",&,N,V_recordZoneIDsToDelete
T@"NSMutableDictionary",&,N,V_recordZonesByZoneID
T@"NSMutableDictionary",&,N,V_retryableErrorsByZoneID
TB,N,V_allowDefaultZoneSave
TB,N,V_markZonesAsUserPurged
Ti,N,V_numZoneSaveAttempts
Tq,N,V_maxZoneSaveAttempts
TB,N,V_dontFetchFromServer
TB,N,V_didSynchronizeUserKeyRegistry
T@"NSMutableArray",&,N,V_zonesWaitingOnKeyRegistrySync
T@"CKDPCSKeySyncCoreAnalytics",&,N,V_keySyncAnalytics
T@"<CKModifyRecordZonesOperationCallbacks>",&,D,N
T@?,C,N,V_saveCompletionBlock
T@?,C,N,V_deleteCompletionBlock
semantics
setSemantics:
setHasSemantics:
hasSemantics
semanticsAsString:
StringAsSemantics:
hasOriginId
hasOriginEtag
hasDestinationEtag
hasDestinationZoneProtectionInfoTag
hasDestinationRecordProtectionInfoTag
hasDestinationRecord
setMerge:
setHasMerge:
hasMerge
originId
setOriginId:
originEtag
setOriginEtag:
destinationEtag
setDestinationEtag:
destinationZoneProtectionInfoTag
setDestinationZoneProtectionInfoTag:
destinationRecordProtectionInfoTag
setDestinationRecordProtectionInfoTag:
destinationRecord
setDestinationRecord:
merge
_destinationEtag
_destinationRecord
_destinationRecordProtectionInfoTag
_destinationZoneProtectionInfoTag
_originEtag
_originId
_semantics
_merge
Ti,N,V_semantics
T@"CKDPRecordIdentifier",&,N,V_originId
T@"NSString",&,N,V_originEtag
T@"NSString",&,N,V_destinationEtag
T@"NSString",&,N,V_destinationZoneProtectionInfoTag
T@"NSString",&,N,V_destinationRecordProtectionInfoTag
T@"CKDPRecord",&,N,V_destinationRecord
TB,N,V_merge
ck_cloudKitAccount
ck_identifier
ck_accountProperties
ck_dataclassProperties
T@"ACAccount",R,N
protectionInfoKeysToRemoveType
hasRecordProtectionInfo
hasStableUrl
hasShareId
clearProtectionInfoKeysToRemoves
addProtectionInfoKeysToRemove:
protectionInfoKeysToRemovesCount
protectionInfoKeysToRemoveAtIndex:
hasStorageExpiration
recordProtectionInfo
setRecordProtectionInfo:
stableUrl
setStableUrl:
shareId
setShareId:
protectionInfoKeysToRemoves
setProtectionInfoKeysToRemoves:
storageExpiration
setStorageExpiration:
_protectionInfoKeysToRemoves
_recordProtectionInfo
_shareId
_stableUrl
_storageExpiration
T@"CKDPProtectionInfo",&,N,V_protectionInfo
T@"CKDPProtectionInfo",&,N,V_recordProtectionInfo
T@"CKDPRecordStableUrl",&,N,V_stableUrl
T@"CKDPShareIdentifier",&,N,V_shareId
T@"NSMutableArray",&,N,V_protectionInfoKeysToRemoves
T@"CKDPStorageExpiration",&,N,V_storageExpiration
_rebuildVolumes
volumeForVolumeUUID:
volumeForDeviceID:
deviceIDForVolumeUUID:
volumeUUIDForDeviceID:
rangeType
hasFieldId
clearRanges
addRange:
rangesCount
rangeAtIndex:
fieldId
setFieldId:
ranges
setRanges:
_fieldId
_ranges
T@"CKDPRecordFieldIdentifier",&,N,V_fieldId
T@"NSMutableArray",&,N,V_ranges
setCorporateSharingEnabled:
setHasCorporateSharingEnabled:
hasCorporateSharingEnabled
setLastWebActivityUTCMills:
setHasLastWebActivityUTCMills:
hasLastWebActivityUTCMills
hasCountryCode
setPhotosWebAccessTimestamp:
setHasPhotosWebAccessTimestamp:
hasPhotosWebAccessTimestamp
setAccountFlags:
setHasAccountFlags:
hasAccountFlags
corporateSharingEnabled
lastWebActivityUTCMills
countryCode
setCountryCode:
photosWebAccessTimestamp
accountFlags
_accountFlags
_lastWebActivityUTCMills
_photosWebAccessTimestamp
_countryCode
_corporateSharingEnabled
TB,N,V_corporateSharingEnabled
Tq,N,V_lastWebActivityUTCMills
T@"NSString",&,N,V_countryCode
Tq,N,V_photosWebAccessTimestamp
TQ,N,V_accountFlags
userInfoType
hasDomain
clearUserInfos
addUserInfo:
userInfosCount
userInfoAtIndex:
domain
setDomain:
userInfos
setUserInfos:
_domain
_userInfos
T@"NSString",&,N,V_domain
T@"NSMutableArray",&,N,V_userInfos
hasToken
hasAsset
setTokenExpiration:
setHasTokenExpiration:
hasTokenExpiration
token
setToken:
asset
setAsset:
tokenExpiration
_tokenExpiration
_asset
_token
T@"NSString",&,N,V_token
T@"CKDPAsset",&,N,V_asset
Tq,N,V_tokenExpiration
hasPosition
setInsertAfter:
setHasInsertAfter:
hasInsertAfter
position
setPosition:
insertAfter
_position
_insertAfter
T@"CKDPListPosition",&,N,V_position
TB,N,V_insertAfter
initWithOperation:shortTokenLookupInfos:
rootRecordDesiredKeySet
setRootRecordDesiredKeySet:
tokenResolveBlock
setTokenResolveBlock:
lookupInfos
setLookupInfos:
lookupInfosByRequestID
setLookupInfosByRequestID:
privateDBTranslator
setPrivateDBTranslator:
_rootRecordDesiredKeySet
_tokenResolveBlock
_lookupInfos
_lookupInfosByRequestID
_privateDBTranslator
T@"NSArray",&,N,V_lookupInfos
T@"NSMutableDictionary",&,N,V_lookupInfosByRequestID
T@"CKDProtocolTranslator",&,N,V_privateDBTranslator
T@"NSSet",&,N,V_rootRecordDesiredKeySet
T@?,C,N,V_tokenResolveBlock
setShortSharingTokenHashData:
_shortSharingTokenHashData
T@"NSData",&,N,V_shortSharingTokenHashData
setSimulatorOnly:
simulatorOnly
setOnlyTestLogs:
onlyTestLogs
setProcessName:
_processNameForPath:
_handleEvent:
colorOutput
setColorOutput:
filter
setFilter:
formatter
processNamesByPath
setProcessNamesByPath:
_colorOutput
_filter
_formatter
_processNamesByPath
T@"CKLEventFilter",&,N,V_filter
T@"NSDateFormatter",R,N,V_formatter
T@"NSMutableDictionary",&,N,V_processNamesByPath
TB,N,V_colorOutput
T@"NSString",&,N
_colorString:withForeground:
hasRecord
record
setRecord:
_record
T@"CKDPRecord",&,N,V_record
hasHeaderKey
hasHeaderValue
mergeableDeltasType
clearMergeableDeltas
addMergeableDeltas:
mergeableDeltasCount
mergeableDeltasAtIndex:
mergeableDeltas
setMergeableDeltas:
_mergeableDeltas
T@"NSMutableArray",&,N,V_mergeableDeltas
hasKey
setKey:
_key
T@"NSString",&,N,V_key
T@"CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoValue",&,N,V_value
globalAuthTokenQueue
initPrimaryAccount
initAnonymousAccount
initWithAccountID:
initWithAltDSID:
initExplicitCredentialsAccountWithAccountOverrideInfo:
initMockAccountWithTestAccount:testDevice:
fullName
primaryEmail
username
formattedUsername
personaIdentifier
isCarryAccount
_userCloudDBURLisInCarryPartition
accountType
serverPreferredPushEnvironment
isPrimaryEmailVerified
isDataclassEnabled:
isDataclassEnabledForCellular:
altDSID
updateAccountPropertiesAndSaveAccountWithCompletionHandler:
authTokenQueue
_lockedRenewTokenWithReason:shouldForce:container:tokenFetchBlock:completionHandler:
renewCloudKitAuthTokenWithReason:shouldForce:container:failedToken:completionHandler:
cloudKitAuthTokenWithContainer:error:
cloudKitAuthTokenWithContainer:completionHandler:
_lockedCloudKitAuthTokenWithContainer:error:
renewiCloudAuthTokenWithReason:shouldForce:container:failedToken:completionHandler:
iCloudAuthTokenWithContainer:error:
iCloudAuthTokenWithContainer:completionHandler:
_lockediCloudAuthTokenWithContainer:error:
privateCloudDBURL
privateShareServiceURL
privateDeviceServiceURL
privateCodeServiceURL
privateMetricsServiceURL
validateVettingToken:vettingEmail:vettingPhone:container:completionHandler:
sharingURLHostname
accountStore
backingAccount
haveWarnedAboutServerPreferredPushEnvironment
setHaveWarnedAboutServerPreferredPushEnvironment:
authTokenCallbackQueue
setAuthTokenCallbackQueue:
lastFailedCloudKitAuthToken
setLastFailedCloudKitAuthToken:
lastFailediCloudAuthToken
setLastFailediCloudAuthToken:
_haveWarnedAboutServerPreferredPushEnvironment
_accountStore
_backingAccount
_authTokenCallbackQueue
_lastFailedCloudKitAuthToken
_lastFailediCloudAuthToken
T@"CKDBackingAccount",R,N,V_backingAccount
TB,N,V_haveWarnedAboutServerPreferredPushEnvironment
T@"NSObject<OS_dispatch_queue>",R,N
T@"NSObject<OS_dispatch_queue>",&,N,V_authTokenCallbackQueue
T@"NSString",C,N,V_lastFailedCloudKitAuthToken
T@"NSString",C,N,V_lastFailediCloudAuthToken
T@"NSPersonNameComponents",R,N
T@"ACAccountStore",R,N,V_accountStore
initWithRequestID:
_logObject:ofType:
shouldLog
logRequest:toURL:withMethod:withMessageClassString:parsingStandaloneMessage:
logResponse:
logPartialRequestObjectData:
logRequestBodyStreamReset
logResponseConfiguration:withMessageClassString:
logPartialResponseObjectData:
finishRequestLog
sequenceNumber
setSequenceNumber:
requestID
setRequestID:
_sequenceNumber
_requestID
Tq,N,V_sequenceNumber
T@"NSString",&,N,V_requestID
type
setType:
setHasType:
hasType
typeAsString:
StringAsType:
_moveOplockFailure
_oplockFailure
_type
_uniqueFieldFailure
Ti,N,V_type
hasOplockFailure
oplockFailure
setOplockFailure:
T@"CKDPOplockFailure",&,N
hasUniqueFieldFailure
uniqueFieldFailure
setUniqueFieldFailure:
T@"CKDPUniqueFieldFailure",&,N
hasMoveOplockFailure
moveOplockFailure
setMoveOplockFailure:
T@"CKDPMoveOplockFailure",&,N
createBoundInputStream:outputStream:bufferSize:
stream:handleEvent:
initWithCompression:
_tearDownOutputStream
setStreamedObjects:
open
_compressBodyData:shouldFlush:
_finishStreaming:
_writeDataToStream:
_dataForMessage:
_prepareObjectForStreaming:
_streamNextObject:
shouldCompress
setShouldCompress:
bufferSize
setBufferSize:
logRequestObjectBlock
setLogRequestObjectBlock:
binaryLogFileHandle
setBinaryLogFileHandle:
hasInitedCompression
setHasInitedCompression:
haveFinishedCompression
setHaveFinishedCompression:
haveFinishedStreaming
setHaveFinishedStreaming:
_allObjects
_curData
_curDataPos
_inputStream
_outputStream
_zlibStream
_haveFlushedZlib
_dispatchQueue
_shouldCompress
_hasInitedCompression
_haveFinishedCompression
_haveFinishedStreaming
_bufferSize
_logRequestObjectBlock
_binaryLogFileHandle
TB,N,V_shouldCompress
TB,N,V_hasInitedCompression
TB,N,V_haveFinishedCompression
TB,V_haveFinishedStreaming
TQ,N,V_bufferSize
T@?,C,N,V_logRequestObjectBlock
T@"NSFileHandle",&,N,V_binaryLogFileHandle
processData:
finishWithCompletion:
hasAssetId
hasSaveAssetRequest
hasSaveAssetResponse
hasRetrieveAssetResponse
assetId
setAssetId:
saveAssetRequest
setSaveAssetRequest:
saveAssetResponse
setSaveAssetResponse:
retrieveAssetResponse
setRetrieveAssetResponse:
_assetId
_retrieveAssetResponse
_saveAssetRequest
_saveAssetResponse
T@"CKDPStreamingAssetIdentifier",&,N,V_assetId
T@"CKDPStreamingAssetSaveAssetRequest",&,N,V_saveAssetRequest
T@"CKDPStreamingAssetSaveAssetResponse",&,N,V_saveAssetResponse
T@"CKDPStreamingAssetRetrieveAssetResponse",&,N,V_retrieveAssetResponse
hasTargetZone
hasCurrentServerContinuationToken
hasClientChangeToken
setDeviceCount:
setHasDeviceCount:
hasDeviceCount
setAssetQuotaUsage:
setHasAssetQuotaUsage:
hasAssetQuotaUsage
setMetadataQuotaUsage:
setHasMetadataQuotaUsage:
hasMetadataQuotaUsage
hasCapabilities
setZoneishPcsNeedsRolled:
setHasZoneishPcsNeedsRolled:
hasZoneishPcsNeedsRolled
setZoneKeyRollAllowed:
setHasZoneKeyRollAllowed:
hasZoneKeyRollAllowed
hasZonePcsModificationTime
hasZonePcsModificationDevice
setExpired:
setHasExpired:
hasExpired
hasExpirationTime
targetZone
setTargetZone:
currentServerContinuationToken
setCurrentServerContinuationToken:
clientChangeToken
setClientChangeToken:
deviceCount
assetQuotaUsage
metadataQuotaUsage
capabilities
setCapabilities:
zoneishPcsNeedsRolled
zoneKeyRollAllowed
zonePcsModificationTime
setZonePcsModificationTime:
zonePcsModificationDevice
setZonePcsModificationDevice:
expired
expirationTime
setExpirationTime:
_assetQuotaUsage
_metadataQuotaUsage
_capabilities
_clientChangeToken
_currentServerContinuationToken
_deviceCount
_expirationTime
_targetZone
_zonePcsModificationDevice
_zonePcsModificationTime
_expired
_zoneKeyRollAllowed
_zoneishPcsNeedsRolled
T@"CKDPZone",&,N,V_targetZone
T@"NSData",&,N,V_currentServerContinuationToken
T@"NSData",&,N,V_clientChangeToken
Ti,N,V_deviceCount
Tq,N,V_assetQuotaUsage
Tq,N,V_metadataQuotaUsage
T@"CKDPZoneCapabilities",&,N,V_capabilities
TB,N,V_zoneishPcsNeedsRolled
TB,N,V_zoneKeyRollAllowed
T@"CKDPDate",&,N,V_zonePcsModificationTime
T@"NSString",&,N,V_zonePcsModificationDevice
TB,N,V_expired
T@"CKDPDate",&,N,V_expirationTime
sortedByType
hasAlias
clearSortedBys
addSortedBy:
sortedBysCount
sortedByAtIndex:
hasOBSOLETEPcsServiceType
publicKeyRequested
setPublicKeyRequested:
setHasPublicKeyRequested:
hasPublicKeyRequested
alias
setAlias:
sortedBys
setSortedBys:
oBSOLETEPcsServiceType
setOBSOLETEPcsServiceType:
_alias
_oBSOLETEPcsServiceType
_sortedBys
_publicKeyRequested
T@"CKDPUserAlias",&,N,V_alias
T@"NSMutableArray",&,N,V_sortedBys
T@"NSString",&,N,V_oBSOLETEPcsServiceType
TB,N,V_publicKeyRequested
initWithPath:schema:
cacheDirectory
sharedCache
cacheDatabaseSchema
dbFileName
initOrExitWithPath:isSharedCache:
initWithDeviceContext:
initWithCacheDir:
T@"CKDLogicalDeviceContext",W,N,V_deviceContext
CKSortedForUpload
assetsToUpload
setAssetsToUpload:
assetUUIDToExpectedProperties
setAssetUUIDToExpectedProperties:
packageUUIDToExpectedProperties
setPackageUUIDToExpectedProperties:
temporary
setTemporary:
_temporary
_assetsToUpload
_assetUUIDToExpectedProperties
_packageUUIDToExpectedProperties
T@"NSArray",&,N,V_assetsToUpload
T@"NSDictionary",&,N,V_assetUUIDToExpectedProperties
T@"NSDictionary",&,N,V_packageUUIDToExpectedProperties
TB,N,V_temporary
_openPackage:
_closePackage:
_closeAllPackages
_didUploadAsset:error:
_planSectionsForPackage:error:
_didGetChunkKeysForAssetBatch:error:
_didPutChunkKeysForAssetBatch:error:
_didPrepareAssetBatch:error:
_fetchAssetRereferenceRecords
_fetchConfiguration
_prepareForUpload
_failAllItemsInAssetBatch:error:
_didFetchUploadTokensForAssetTokenRequest:error:newError:
_fetchUploadTokens
_didUploadMMCSSectionItem:task:error:
_didUploadMMCSSectionItems:task:error:
_uploadPackageSection:task:completionBlock:
_uploadPackageSectionsWithEnumerator:task:completionBlock:
_uploadPackageSectionsWithTask:completionBlock:
_uploadPackageSectionsWithPendingTasks:uploadingTasks:completedTasks:
_didUploadMMCSItem:error:
_didUploadMMCSItems:error:
_didMakeProgressForMMCSItem:
_didUploadPackageWithTask:
_upload
_removePackageManifests
uploadPreparationBlock
setUploadPreparationBlock:
uploadProgressBlock
setUploadProgressBlock:
uploadCompletionBlock
setUploadCompletionBlock:
atomic
setAtomic:
uploadTasksByPackages
setUploadTasksByPackages:
packageManifests
setPackageManifests:
openedPackages
setOpenedPackages:
maxPackageUploadsPerBatch
setMaxPackageUploadsPerBatch:
assetRequestPlanner
setAssetRequestPlanner:
_atomic
_uploadPreparationBlock
_uploadProgressBlock
_uploadCompletionBlock
_uploadTasksByPackages
_packageManifests
_openedPackages
_maxPackageUploadsPerBatch
_assetRequestPlanner
T@"NSMapTable",&,N,V_uploadTasksByPackages
T@"NSMutableArray",&,N,V_packageManifests
T@"NSMutableArray",&,N,V_openedPackages
TQ,N,V_maxPackageUploadsPerBatch
T@"CKDAssetRequestPlanner",&,N,V_assetRequestPlanner
T@?,C,N,V_uploadPreparationBlock
T@?,C,N,V_uploadProgressBlock
T@?,C,N,V_uploadCompletionBlock
TB,N,V_atomic
hasEtag
hasTimeStatistics
hasServerFields
timeStatistics
setTimeStatistics:
serverFields
setServerFields:
_serverFields
_timeStatistics
T@"CKDPDateStatistics",&,N,V_timeStatistics
T@"CKDPRecord",&,N,V_serverFields
hasBounds
bounds
setBounds:
_bounds
T@"CKDPLocationBound",&,N,V_bounds
hasLabel
hasCriteria
hasRateLimit
setTtlSec:
setHasTtlSec:
hasTtlSec
label
setLabel:
criteria
setCriteria:
rateLimit
setRateLimit:
ttlSec
_criteria
_label
_rateLimit
_ttlSec
T@"NSString",&,N,V_label
T@"CKDPThrottlingConfigCriteria",&,N,V_criteria
T@"CKDPThrottlingConfigRateLimit",&,N,V_rateLimit
Ti,N,V_ttlSec
setSuccess:
setHasSuccess:
hasSuccess
success
_success
TB,N,V_success
_dispatchAssetURLsForRecord:recordID:pcs:error:
_fetchPCSForRecords
assetPublishedBlock
setAssetPublishedBlock:
recordIDs
setRecordIDs:
fileNamesByAssetFieldNames
setFileNamesByAssetFieldNames:
requestedTTL
setRequestedTTL:
URLOptions
setURLOptions:
fetchRecordsOperation
setFetchRecordsOperation:
fetchedRecordsByID
setFetchedRecordsByID:
_assetPublishedBlock
_recordIDs
_fileNamesByAssetFieldNames
_requestedTTL
_URLOptions
_fetchRecordsOperation
_fetchedRecordsByID
T@"NSArray",&,N,V_recordIDs
T@"NSDictionary",&,N,V_fileNamesByAssetFieldNames
TQ,N,V_requestedTTL
TQ,N,V_URLOptions
T@"NSOperation",&,V_fetchRecordsOperation
T@"NSMutableDictionary",&,N,V_fetchedRecordsByID
T@?,C,N,V_assetPublishedBlock
T@"<CKPublishAssetsOperationCallbacks>",&,D,N
fieldsToDeleteIfExistOnMergeType
conflictLosersToResolveType
clearFieldsToDeleteIfExistOnMerges
addFieldsToDeleteIfExistOnMerge:
fieldsToDeleteIfExistOnMergesCount
fieldsToDeleteIfExistOnMergeAtIndex:
hasConflictLoserUpdate
saveSemantics
setSaveSemantics:
setHasSaveSemantics:
hasSaveSemantics
saveSemanticsAsString:
StringAsSaveSemantics:
hasRecordProtectionInfoTag
clearConflictLosersToResolves
addConflictLosersToResolve:
conflictLosersToResolvesCount
conflictLosersToResolveAtIndex:
hasShareEtag
hasShareIDUpdate
hasParentChainProtectionInfoTag
fieldsToDeleteIfExistOnMerges
setFieldsToDeleteIfExistOnMerges:
conflictLoserUpdate
setConflictLoserUpdate:
recordProtectionInfoTag
setRecordProtectionInfoTag:
conflictLosersToResolves
setConflictLosersToResolves:
shareEtag
setShareEtag:
shareIDUpdate
setShareIDUpdate:
parentChainProtectionInfoTag
setParentChainProtectionInfoTag:
_conflictLoserUpdate
_conflictLosersToResolves
_fieldsToDeleteIfExistOnMerges
_parentChainProtectionInfoTag
_recordProtectionInfoTag
_saveSemantics
_shareEtag
_shareIDUpdate
T@"NSMutableArray",&,N,V_fieldsToDeleteIfExistOnMerges
T@"CKDPRecordSaveRequestConflictLoserUpdate",&,N,V_conflictLoserUpdate
Ti,N,V_saveSemantics
T@"NSString",&,N,V_recordProtectionInfoTag
T@"NSMutableArray",&,N,V_conflictLosersToResolves
T@"NSString",&,N,V_shareEtag
T@"CKDPRecordSaveRequestShareIdUpdate",&,N,V_shareIDUpdate
T@"NSString",&,N,V_parentChainProtectionInfoTag
encryptedAnonymousSharesToRemove
setEncryptedAnonymousSharesToRemove:
anonymousShareRemovedBlock
setAnonymousShareRemovedBlock:
_encryptedAnonymousSharesToRemove
_anonymousShareRemovedBlock
T@"NSDictionary",&,N,V_encryptedAnonymousSharesToRemove
T@?,C,N,V_anonymousShareRemovedBlock
_removeAnonymousShareFromSharedDB
fetchMergeableDeltas
fetchMergeableDeltasRecursivelyForValueIDs:continuationTokens:completionHandler:
handleMergeableDeltasFetchedForValueID:fetchedDeltas:result:
deltasFetchedBlock
setDeltasFetchedBlock:
_deltasFetchedBlock
T@"<CKFetchMergeableDeltasOperationCallbacks>",&,D,N
T@?,C,N,V_deltasFetchedBlock
sharedClientInfo
_refreshHostname
hostname
_cachedHostname
_hostCallbackQueue
_hostNotificationToken
serviceIdentityKeyIDsType
activeThrottlingLabelType
supplementalZoneInfosType
hasUserToken
hasApplicationBundle
hasApplicationVersion
setApplicationConfigVersion:
setHasApplicationConfigVersion:
hasApplicationConfigVersion
setGlobalConfigVersion:
setHasGlobalConfigVersion:
hasGlobalConfigVersion
hasDeviceIdentifier
hasDeviceSoftwareVersion
hasDeviceHardwareVersion
hasDeviceLibraryName
hasDeviceLibraryVersion
setDeviceProtocolVersion:
setHasDeviceProtocolVersion:
hasDeviceProtocolVersion
hasLocale
hasMmcsProtocolVersion
hasDeviceAssignedName
hasDeviceHardwareID
targetDatabase
setTargetDatabase:
setHasTargetDatabase:
hasTargetDatabase
targetDatabaseAsString:
StringAsTargetDatabase:
hasUserIDContainerID
setIsolationLevel:
setHasIsolationLevel:
hasIsolationLevel
isolationLevelAsString:
StringAsIsolationLevel:
hasOperationGroupName
setOperationGroupQuantity:
setHasOperationGroupQuantity:
hasOperationGroupQuantity
clearServiceIdentityKeyIDs
addServiceIdentityKeyIDs:
serviceIdentityKeyIDsCount
serviceIdentityKeyIDsAtIndex:
setDeviceSoftwareIsAppleInternal:
setHasDeviceSoftwareIsAppleInternal:
hasDeviceSoftwareIsAppleInternal
hasAssetAuthorizeGetRequestOptions
clearActiveThrottlingLabels
addActiveThrottlingLabel:
activeThrottlingLabelsCount
activeThrottlingLabelAtIndex:
hasDeviceUDID
hasDeviceSerialNumber
setEntitlementsValidated:
setHasEntitlementsValidated:
hasEntitlementsValidated
setHasRequestOriginator:
hasRequestOriginator
requestOriginatorAsString:
StringAsRequestOriginator:
clearSupplementalZoneInfos
addSupplementalZoneInfos:
supplementalZoneInfosCount
supplementalZoneInfosAtIndex:
userToken
setUserToken:
applicationBundle
setApplicationBundle:
setApplicationVersion:
applicationConfigVersion
globalConfigVersion
deviceIdentifier
setDeviceIdentifier:
deviceSoftwareVersion
setDeviceSoftwareVersion:
deviceHardwareVersion
setDeviceHardwareVersion:
deviceLibraryName
setDeviceLibraryName:
deviceLibraryVersion
setDeviceLibraryVersion:
deviceProtocolVersion
locale
setLocale:
mmcsProtocolVersion
setMmcsProtocolVersion:
deviceAssignedName
setDeviceAssignedName:
deviceHardwareID
setDeviceHardwareID:
userIDContainerID
setUserIDContainerID:
setOperationGroupName:
serviceIdentityKeyIDs
setServiceIdentityKeyIDs:
deviceSoftwareIsAppleInternal
assetAuthorizeGetRequestOptions
setAssetAuthorizeGetRequestOptions:
activeThrottlingLabels
setActiveThrottlingLabels:
deviceUDID
setDeviceUDID:
deviceSerialNumber
setDeviceSerialNumber:
entitlementsValidated
supplementalZoneInfos
setSupplementalZoneInfos:
_applicationConfigVersion
_deviceProtocolVersion
_globalConfigVersion
_operationGroupQuantity
_activeThrottlingLabels
_applicationBundle
_assetAuthorizeGetRequestOptions
_deviceAssignedName
_deviceHardwareID
_deviceHardwareVersion
_deviceIdentifier
_deviceLibraryName
_deviceLibraryVersion
_deviceSerialNumber
_deviceSoftwareVersion
_deviceUDID
_isolationLevel
_locale
_mmcsProtocolVersion
_operationGroupName
_serviceIdentityKeyIDs
_supplementalZoneInfos
_targetDatabase
_userIDContainerID
_userToken
_deviceSoftwareIsAppleInternal
_entitlementsValidated
T@"NSString",&,N,V_userToken
T@"NSString",&,N,V_applicationBundle
T@"NSString",&,N,V_applicationVersion
TQ,N,V_applicationConfigVersion
TQ,N,V_globalConfigVersion
T@"CKDPIdentifier",&,N,V_deviceIdentifier
T@"NSString",&,N,V_deviceSoftwareVersion
T@"NSString",&,N,V_deviceHardwareVersion
T@"NSString",&,N,V_deviceLibraryName
T@"NSString",&,N,V_deviceLibraryVersion
TQ,N,V_deviceProtocolVersion
T@"CKDPLocale",&,N,V_locale
T@"NSString",&,N,V_mmcsProtocolVersion
T@"NSString",&,N,V_deviceAssignedName
T@"NSString",&,N,V_deviceHardwareID
Ti,N,V_targetDatabase
T@"NSString",&,N,V_userIDContainerID
Ti,N,V_isolationLevel
T@"NSString",&,N,V_operationGroupName
TQ,N,V_operationGroupQuantity
T@"NSMutableArray",&,N,V_serviceIdentityKeyIDs
TB,N,V_deviceSoftwareIsAppleInternal
T@"CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptions",&,N,V_assetAuthorizeGetRequestOptions
T@"NSMutableArray",&,N,V_activeThrottlingLabels
T@"NSString",&,N,V_deviceUDID
T@"NSString",&,N,V_deviceSerialNumber
TB,N,V_entitlementsValidated
Ti,N,V_requestOriginator
T@"NSMutableArray",&,N,V_supplementalZoneInfos
assetFieldsType
hasRecordId
clearAssetFields
addAssetFields:
assetFieldsCount
assetFieldsAtIndex:
recordId
setRecordId:
assetFields
setAssetFields:
_assetFields
_recordId
T@"CKDPRecordIdentifier",&,N,V_recordId
T@"CKDPRecordType",&,N,V_type
T@"NSMutableArray",&,N,V_assetFields
hasResponse
hasResult
hasHeader
result
setResult:
header
setHeader:
_anonymousShareAddResponse
_anonymousShareRemoveResponse
_archiveRecordsResponse
_assetUploadTokenRetrieveResponse
_bundlesForContainerResponse
_deleteContainerResponse
_fetchArchivedRecordsResponse
_functionInvokeResponse
_header
_markAssetBrokenResponse
_mergeableDeltaMetadataRetrieveResponse
_mergeableDeltaReplaceResponse
_mergeableDeltaRetrieveResponse
_mergeableDeltaSaveResponse
_notificationMarkReadResponse
_notificationSyncResponse
_queryRetrieveResponse
_recordDeleteResponse
_recordMoveResponse
_recordResolveTokenResponse
_recordRetrieveChangesResponse
_recordRetrieveResponse
_recordRetrieveVersionsResponse
_recordSaveResponse
_result
_setBadgeCountResponse
_shareAcceptResponse
_shareVettingInitiateResponse
_subscriptionCreateResponse
_subscriptionDeleteResponse
_subscriptionRetrieveResponse
_tokenRegistrationResponse
_tokenUnregistrationResponse
_updateMissingAssetStatusResponse
_userAvailableQuotaResponse
_userPrivacySettingsBatchLookupResponse
_userPrivacySettingsResetResponse
_userPrivacySettingsRetrieveResponse
_userPrivacySettingsUpdateResponse
_userQueryResponse
_userRetrieveResponse
_webAuthTokenRetrieveResponse
_zoneDeleteResponse
_zoneRetrieveChangesResponse
_zoneRetrieveResponse
_zoneSaveResponse
T@"CKDPOperation",&,N,V_response
T@"CKDPResponseOperationResult",&,N,V_result
T@"CKDPResponseOperationHeader",&,N,V_header
hasFunctionInvokeResponse
functionInvokeResponse
setFunctionInvokeResponse:
T@"CKDPCodeFunctionInvokeResponse",&,N
hasMergeableDeltaSaveResponse
mergeableDeltaSaveResponse
setMergeableDeltaSaveResponse:
hasMergeableDeltaMetadataRetrieveResponse
mergeableDeltaMetadataRetrieveResponse
setMergeableDeltaMetadataRetrieveResponse:
hasMergeableDeltaReplaceResponse
mergeableDeltaReplaceResponse
setMergeableDeltaReplaceResponse:
hasMergeableDeltaRetrieveResponse
mergeableDeltaRetrieveResponse
setMergeableDeltaRetrieveResponse:
T@"CKDPMergeableDeltaSaveResponse",&,N
T@"CKDPMergeableDeltaMetadataRetrieveResponse",&,N
T@"CKDPMergeableDeltaReplaceResponse",&,N
T@"CKDPMergeableDeltaRetrieveResponse",&,N
hasShareVettingInitiateResponse
shareVettingInitiateResponse
setShareVettingInitiateResponse:
T@"CKDPShareVettingInitiateResponse",&,N
hasZoneSaveResponse
zoneSaveResponse
setZoneSaveResponse:
T@"CKDPZoneSaveResponse",&,N
hasZoneRetrieveResponse
zoneRetrieveResponse
setZoneRetrieveResponse:
T@"CKDPZoneRetrieveResponse",&,N
hasZoneDeleteResponse
zoneDeleteResponse
setZoneDeleteResponse:
T@"CKDPZoneDeleteResponse",&,N
hasZoneRetrieveChangesResponse
zoneRetrieveChangesResponse
setZoneRetrieveChangesResponse:
T@"CKDPZoneRetrieveChangesResponse",&,N
hasRecordSaveResponse
recordSaveResponse
setRecordSaveResponse:
T@"CKDPRecordSaveResponse",&,N
hasRecordRetrieveResponse
recordRetrieveResponse
setRecordRetrieveResponse:
T@"CKDPRecordRetrieveResponse",&,N
hasRecordRetrieveVersionsResponse
recordRetrieveVersionsResponse
setRecordRetrieveVersionsResponse:
T@"CKDPRecordRetrieveVersionsResponse",&,N
hasRecordRetrieveChangesResponse
recordRetrieveChangesResponse
setRecordRetrieveChangesResponse:
T@"CKDPRecordRetrieveChangesResponse",&,N
hasRecordDeleteResponse
recordDeleteResponse
setRecordDeleteResponse:
T@"CKDPRecordDeleteResponse",&,N
hasRecordResolveTokenResponse
recordResolveTokenResponse
setRecordResolveTokenResponse:
T@"CKDPRecordResolveTokenResponse",&,N
hasRecordMoveResponse
recordMoveResponse
setRecordMoveResponse:
T@"CKDPRecordMoveResponse",&,N
hasFetchArchivedRecordsResponse
fetchArchivedRecordsResponse
setFetchArchivedRecordsResponse:
T@"CKDPFetchArchivedRecordsResponse",&,N
hasUserAvailableQuotaResponse
userAvailableQuotaResponse
setUserAvailableQuotaResponse:
T@"CKDPUserAvailableQuotaResponse",&,N
hasUserRetrieveResponse
userRetrieveResponse
setUserRetrieveResponse:
T@"CKDPUserRetrieveResponse",&,N
hasQueryRetrieveResponse
queryRetrieveResponse
setQueryRetrieveResponse:
T@"CKDPQueryRetrieveResponse",&,N
hasAssetUploadTokenRetrieveResponse
assetUploadTokenRetrieveResponse
setAssetUploadTokenRetrieveResponse:
T@"CKDPAssetUploadTokenRetrieveResponse",&,N
hasDeleteContainerResponse
deleteContainerResponse
setDeleteContainerResponse:
T@"CKDPDeleteContainerResponse",&,N
hasBundlesForContainerResponse
bundlesForContainerResponse
setBundlesForContainerResponse:
T@"CKDPBundlesForContainerResponse",&,N
hasWebAuthTokenRetrieveResponse
webAuthTokenRetrieveResponse
setWebAuthTokenRetrieveResponse:
T@"CKDPWebAuthTokenRetrieveResponse",&,N
hasUpdateMissingAssetStatusResponse
updateMissingAssetStatusResponse
setUpdateMissingAssetStatusResponse:
T@"CKDPUpdateMissingAssetStatusResponse",&,N
hasShareAcceptResponse
shareAcceptResponse
setShareAcceptResponse:
T@"CKDPShareAcceptResponse",&,N
hasAnonymousShareAddResponse
anonymousShareAddResponse
setAnonymousShareAddResponse:
T@"CKDPAnonymousShareAddResponse",&,N
hasAnonymousShareRemoveResponse
anonymousShareRemoveResponse
setAnonymousShareRemoveResponse:
T@"CKDPAnonymousShareRemoveResponse",&,N
hasSubscriptionCreateResponse
subscriptionCreateResponse
setSubscriptionCreateResponse:
T@"CKDPSubscriptionCreateResponse",&,N
hasSubscriptionRetrieveResponse
subscriptionRetrieveResponse
setSubscriptionRetrieveResponse:
T@"CKDPSubscriptionRetrieveResponse",&,N
hasSubscriptionDeleteResponse
subscriptionDeleteResponse
setSubscriptionDeleteResponse:
T@"CKDPSubscriptionDeleteResponse",&,N
hasArchiveRecordsResponse
archiveRecordsResponse
setArchiveRecordsResponse:
T@"CKDPArchiveRecordsResponse",&,N
hasMarkAssetBrokenResponse
markAssetBrokenResponse
setMarkAssetBrokenResponse:
T@"CKDPMarkAssetBrokenResponse",&,N
hasUserQueryResponse
userQueryResponse
setUserQueryResponse:
T@"CKDPUserQueryResponse",&,N
hasUserPrivacySettingsUpdateResponse
userPrivacySettingsUpdateResponse
setUserPrivacySettingsUpdateResponse:
T@"CKDPUserPrivacySettingsUpdateResponse",&,N
hasUserPrivacySettingsResetResponse
userPrivacySettingsResetResponse
setUserPrivacySettingsResetResponse:
T@"CKDPUserPrivacySettingsResetResponse",&,N
hasUserPrivacySettingsBatchLookupResponse
userPrivacySettingsBatchLookupResponse
setUserPrivacySettingsBatchLookupResponse:
T@"CKDPUserPrivacySettingsBatchLookupResponse",&,N
hasUserPrivacySettingsRetrieveResponse
userPrivacySettingsRetrieveResponse
setUserPrivacySettingsRetrieveResponse:
T@"CKDPUserPrivacySettingsRetrieveResponse",&,N
hasTokenRegistrationResponse
tokenRegistrationResponse
setTokenRegistrationResponse:
T@"CKDPTokenRegistrationResponse",&,N
hasTokenUnregistrationResponse
tokenUnregistrationResponse
setTokenUnregistrationResponse:
T@"CKDPTokenUnregistrationResponse",&,N
hasSetBadgeCountResponse
setBadgeCountResponse
setSetBadgeCountResponse:
T@"CKDPSetBadgeCountResponse",&,N
hasNotificationSyncResponse
notificationSyncResponse
setNotificationSyncResponse:
T@"CKDPNotificationSyncResponse",&,N
hasNotificationMarkReadResponse
notificationMarkReadResponse
setNotificationMarkReadResponse:
T@"CKDPNotificationMarkReadResponse",&,N
recordVersionsType
setIsDeleted:
setHasIsDeleted:
hasIsDeleted
clearRecordVersions
addRecordVersions:
recordVersionsCount
recordVersionsAtIndex:
isDeleted
recordVersions
setRecordVersions:
_recordVersions
_isDeleted
TB,N,V_isDeleted
T@"NSMutableArray",&,N,V_recordVersions
sharedNotifier
hasOperationUUID
setSynchronousMode:
setHasSynchronousMode:
hasSynchronousMode
setLast:
setHasLast:
hasLast
hasRequestSignature
hasAnonymousCKUserID
operationUUID
setOperationUUID:
synchronousMode
last
requestSignature
setRequestSignature:
anonymousCKUserID
setAnonymousCKUserID:
_anonymousCKUserID
_operationUUID
_requestSignature
_last
_synchronousMode
T@"NSString",&,N,V_operationUUID
TB,N,V_synchronousMode
TB,N,V_last
T@"NSData",&,N,V_requestSignature
T@"CKDPIdentifier",&,N,V_anonymousCKUserID
initWithQoS:
_parseObjectFromData:rawData:
_parseObjects:
messageClass
setMessageClass:
setParsingStandaloneMessage:
tailParserData
setTailParserData:
curObjectLength
setCurObjectLength:
isParsing
setIsParsing:
_parsingStandaloneMessage
_isParsing
_messageClass
_tailParserData
_curObjectLength
T@"NSMutableData",&,N,V_tailParserData
TQ,N,V_curObjectLength
TB,N,V_isParsing
T#,&,N,V_messageClass
TB,N,V_parsingStandaloneMessage
_handleSubscriptionSaved:responseCode:
_handleSubscriptionSaved:error:
_handleSubscriptionDeleted:responseCode:
subscriptionsToSave
setSubscriptionsToSave:
subscriptionIDsToDelete
setSubscriptionIDsToDelete:
subscriptionsByServerID
setSubscriptionsByServerID:
_hasSubscriptionsToSave
_hasSubscriptionsToDelete
_subscriptionsToSave
_subscriptionIDsToDelete
_subscriptionsByServerID
T@"NSArray",&,N,V_subscriptionsToSave
T@"NSArray",&,N,V_subscriptionIDsToDelete
T@"NSMutableDictionary",&,N,V_subscriptionsByServerID
T@"<CKModifySubscriptionsOperationCallbacks>",&,D,N
T@"CKDPIdentifier",&,N,V_value
contentRequestHeadersType
clearContentRequestHeaders
addContentRequestHeaders:
contentRequestHeadersCount
contentRequestHeadersAtIndex:
setContentRequestAuthorizeGetOptions:
setHasContentRequestAuthorizeGetOptions:
hasContentRequestAuthorizeGetOptions
contentRequestHeaders
setContentRequestHeaders:
contentRequestAuthorizeGetOptions
_contentRequestAuthorizeGetOptions
_contentRequestHeaders
T@"NSMutableArray",&,N,V_contentRequestHeaders
TQ,N,V_contentRequestAuthorizeGetOptions
hasMinimumVersionEtag
minimumVersionEtag
setMinimumVersionEtag:
_minimumVersionEtag
T@"NSString",&,N,V_minimumVersionEtag
handlerForSaveWithRecord:
handlerForDeleteWithRecordID:
callbackWithMetadata:error:
moveCallbackWithMetadata:error:
_createModifyRequestWithRecordsToSave:recordsToDelete:recordsToDeleteToEtags:recordIDsToDeleteToSigningPCSIdentity:handlersByRecordID:sendMergeableDeltas:
_handleRecordMoved:handler:responseCode:recordForOplockFailure:destinationServerRecord:moveMarkerServerRecord:
_reallyHandleRecordMoved:handler:responseCode:recordForOplockFailure:destinationServerRecord:moveMarkerServerRecord:
moveCompletionBlock
setMoveCompletionBlock:
moveChangesByDestinationRecordID
setMoveChangesByDestinationRecordID:
_moveCompletionBlock
_moveChangesByDestinationRecordID
T@"NSDictionary",C,N,V_moveChangesByDestinationRecordID
T@"CKRecordZoneID",C,N,V_sourceZoneID
T@"<CKMovePhotosOperationCallbacks>",&,D,N
T@?,C,N,V_moveCompletionBlock
hasAssetFields
setHasRequestedTTL:
hasRequestedTTL
T@"CKDPRequestedFields",&,N,V_assetFields
Tq,N,V_requestedTTL
hasAppQuote
hasAqeQuote
hasPckCertificate
hasRoutingToken
appQuote
setAppQuote:
aqeQuote
setAqeQuote:
pckCertificate
setPckCertificate:
routingToken
setRoutingToken:
_appQuote
_aqeQuote
_pckCertificate
_routingToken
T@"NSData",&,N,V_appQuote
T@"NSData",&,N,V_aqeQuote
T@"NSString",&,N,V_pckCertificate
T@"NSData",&,N,V_routingToken
bundleIDType
clearBundleIDs
addBundleID:
bundleIDsCount
bundleIDAtIndex:
T@"NSMutableArray",&,N,V_bundleIDs
hasRequest
_anonymousShareAddRequest
_anonymousShareRemoveRequest
_archiveRecordsRequest
_assetUploadTokenRetrieveRequest
_bundlesForContainerRequest
_deleteContainerRequest
_fetchArchivedRecordsRequest
_functionInvokeRequest
_markAssetBrokenRequest
_mergeableDeltaMetadataRetrieveRequest
_mergeableDeltaReplaceRequest
_mergeableDeltaRetrieveRequest
_mergeableDeltaSaveRequest
_notificationMarkReadRequest
_notificationSyncRequest
_queryRetrieveRequest
_recordDeleteRequest
_recordMoveRequest
_recordResolveTokenRequest
_recordRetrieveChangesRequest
_recordRetrieveRequest
_recordRetrieveVersionsRequest
_recordSaveRequest
_setBadgeCountRequest
_shareAcceptRequest
_shareVettingInitiateRequest
_subscriptionCreateRequest
_subscriptionDeleteRequest
_subscriptionRetrieveRequest
_tokenRegistrationRequest
_tokenUnregistrationRequest
_updateMissingAssetStatusRequest
_userAvailableQuotaRequest
_userPrivacySettingsBatchLookupRequest
_userPrivacySettingsResetRequest
_userPrivacySettingsRetrieveRequest
_userPrivacySettingsUpdateRequest
_userQueryRequest
_userRetrieveRequest
_webAuthTokenRetrieveRequest
_zoneDeleteRequest
_zoneRetrieveChangesRequest
_zoneRetrieveRequest
_zoneSaveRequest
T@"CKDPRequestOperationHeader",&,N,V_header
T@"CKDPOperation",&,N,V_request
hasFunctionInvokeRequest
functionInvokeRequest
setFunctionInvokeRequest:
T@"CKDPCodeFunctionInvokeRequest",&,N
hasMergeableDeltaSaveRequest
mergeableDeltaSaveRequest
setMergeableDeltaSaveRequest:
hasMergeableDeltaMetadataRetrieveRequest
mergeableDeltaMetadataRetrieveRequest
setMergeableDeltaMetadataRetrieveRequest:
hasMergeableDeltaReplaceRequest
mergeableDeltaReplaceRequest
setMergeableDeltaReplaceRequest:
hasMergeableDeltaRetrieveRequest
mergeableDeltaRetrieveRequest
setMergeableDeltaRetrieveRequest:
T@"CKDPMergeableDeltaSaveRequest",&,N
T@"CKDPMergeableDeltaMetadataRetrieveRequest",&,N
T@"CKDPMergeableDeltaReplaceRequest",&,N
T@"CKDPMergeableDeltaRetrieveRequest",&,N
hasShareVettingInitiateRequest
shareVettingInitiateRequest
setShareVettingInitiateRequest:
T@"CKDPShareVettingInitiateRequest",&,N
hasZoneSaveRequest
zoneSaveRequest
setZoneSaveRequest:
T@"CKDPZoneSaveRequest",&,N
hasZoneRetrieveRequest
zoneRetrieveRequest
setZoneRetrieveRequest:
T@"CKDPZoneRetrieveRequest",&,N
hasZoneDeleteRequest
zoneDeleteRequest
setZoneDeleteRequest:
T@"CKDPZoneDeleteRequest",&,N
hasZoneRetrieveChangesRequest
zoneRetrieveChangesRequest
setZoneRetrieveChangesRequest:
T@"CKDPZoneRetrieveChangesRequest",&,N
hasRecordSaveRequest
recordSaveRequest
setRecordSaveRequest:
T@"CKDPRecordSaveRequest",&,N
hasRecordRetrieveRequest
recordRetrieveRequest
setRecordRetrieveRequest:
T@"CKDPRecordRetrieveRequest",&,N
hasRecordRetrieveVersionsRequest
recordRetrieveVersionsRequest
setRecordRetrieveVersionsRequest:
T@"CKDPRecordRetrieveVersionsRequest",&,N
hasRecordRetrieveChangesRequest
recordRetrieveChangesRequest
setRecordRetrieveChangesRequest:
T@"CKDPRecordRetrieveChangesRequest",&,N
hasRecordDeleteRequest
recordDeleteRequest
setRecordDeleteRequest:
T@"CKDPRecordDeleteRequest",&,N
hasRecordResolveTokenRequest
recordResolveTokenRequest
setRecordResolveTokenRequest:
T@"CKDPRecordResolveTokenRequest",&,N
hasRecordMoveRequest
recordMoveRequest
setRecordMoveRequest:
T@"CKDPRecordMoveRequest",&,N
hasFetchArchivedRecordsRequest
fetchArchivedRecordsRequest
setFetchArchivedRecordsRequest:
T@"CKDPFetchArchivedRecordsRequest",&,N
hasUserAvailableQuotaRequest
userAvailableQuotaRequest
setUserAvailableQuotaRequest:
T@"CKDPUserAvailableQuotaRequest",&,N
hasUserRetrieveRequest
userRetrieveRequest
setUserRetrieveRequest:
T@"CKDPUserRetrieveRequest",&,N
hasQueryRetrieveRequest
queryRetrieveRequest
setQueryRetrieveRequest:
T@"CKDPQueryRetrieveRequest",&,N
hasAssetUploadTokenRetrieveRequest
assetUploadTokenRetrieveRequest
setAssetUploadTokenRetrieveRequest:
T@"CKDPAssetUploadTokenRetrieveRequest",&,N
hasDeleteContainerRequest
deleteContainerRequest
setDeleteContainerRequest:
T@"CKDPDeleteContainerRequest",&,N
hasBundlesForContainerRequest
bundlesForContainerRequest
setBundlesForContainerRequest:
T@"CKDPBundlesForContainerRequest",&,N
hasWebAuthTokenRetrieveRequest
webAuthTokenRetrieveRequest
setWebAuthTokenRetrieveRequest:
T@"CKDPWebAuthTokenRetrieveRequest",&,N
hasUpdateMissingAssetStatusRequest
updateMissingAssetStatusRequest
setUpdateMissingAssetStatusRequest:
T@"CKDPUpdateMissingAssetStatusRequest",&,N
hasShareAcceptRequest
shareAcceptRequest
setShareAcceptRequest:
T@"CKDPShareAcceptRequest",&,N
hasAnonymousShareAddRequest
anonymousShareAddRequest
setAnonymousShareAddRequest:
T@"CKDPAnonymousShareAddRequest",&,N
hasAnonymousShareRemoveRequest
anonymousShareRemoveRequest
setAnonymousShareRemoveRequest:
T@"CKDPAnonymousShareRemoveRequest",&,N
hasSubscriptionCreateRequest
subscriptionCreateRequest
setSubscriptionCreateRequest:
T@"CKDPSubscriptionCreateRequest",&,N
hasSubscriptionRetrieveRequest
subscriptionRetrieveRequest
setSubscriptionRetrieveRequest:
T@"CKDPSubscriptionRetrieveRequest",&,N
hasSubscriptionDeleteRequest
subscriptionDeleteRequest
setSubscriptionDeleteRequest:
T@"CKDPSubscriptionDeleteRequest",&,N
hasArchiveRecordsRequest
archiveRecordsRequest
setArchiveRecordsRequest:
T@"CKDPArchiveRecordsRequest",&,N
hasMarkAssetBrokenRequest
markAssetBrokenRequest
setMarkAssetBrokenRequest:
T@"CKDPMarkAssetBrokenRequest",&,N
hasUserQueryRequest
userQueryRequest
setUserQueryRequest:
T@"CKDPUserQueryRequest",&,N
hasUserPrivacySettingsUpdateRequest
userPrivacySettingsUpdateRequest
setUserPrivacySettingsUpdateRequest:
T@"CKDPUserPrivacySettingsUpdateRequest",&,N
hasUserPrivacySettingsResetRequest
userPrivacySettingsResetRequest
setUserPrivacySettingsResetRequest:
T@"CKDPUserPrivacySettingsResetRequest",&,N
hasUserPrivacySettingsBatchLookupRequest
userPrivacySettingsBatchLookupRequest
setUserPrivacySettingsBatchLookupRequest:
T@"CKDPUserPrivacySettingsBatchLookupRequest",&,N
hasUserPrivacySettingsRetrieveRequest
userPrivacySettingsRetrieveRequest
setUserPrivacySettingsRetrieveRequest:
T@"CKDPUserPrivacySettingsRetrieveRequest",&,N
hasTokenRegistrationRequest
tokenRegistrationRequest
setTokenRegistrationRequest:
T@"CKDPTokenRegistrationRequest",&,N
hasTokenUnregistrationRequest
tokenUnregistrationRequest
setTokenUnregistrationRequest:
T@"CKDPTokenUnregistrationRequest",&,N
hasSetBadgeCountRequest
setBadgeCountRequest
setSetBadgeCountRequest:
T@"CKDPSetBadgeCountRequest",&,N
hasNotificationSyncRequest
notificationSyncRequest
setNotificationSyncRequest:
T@"CKDPNotificationSyncRequest",&,N
hasNotificationMarkReadRequest
notificationMarkReadRequest
setNotificationMarkReadRequest:
T@"CKDPNotificationMarkReadRequest",&,N
destination
setDestination:
_destination
TQ,N,V_destination
deltaIdentifiersType
clearDeltaIdentifiers
addDeltaIdentifiers:
deltaIdentifiersCount
deltaIdentifiersAtIndex:
setIgnoreMissingDeltas:
setHasIgnoreMissingDeltas:
hasIgnoreMissingDeltas
setContainsNewData:
setHasContainsNewData:
hasContainsNewData
deltaIdentifiers
setDeltaIdentifiers:
ignoreMissingDeltas
containsNewData
_deltaIdentifiers
_containsNewData
_ignoreMissingDeltas
T@"NSMutableArray",&,N,V_deltaIdentifiers
TB,N,V_ignoreMissingDeltas
TB,N,V_containsNewData
metadataType
clearMetadatas
addMetadata:
metadatasCount
metadataAtIndex:
hasContinuation
metadatas
setMetadatas:
continuation
setContinuation:
_continuation
_metadatas
T@"NSMutableArray",&,N,V_metadatas
T@"NSData",&,N,V_continuation
hasTokenRegistrationBody
tokenRegistrationBody
setTokenRegistrationBody:
_tokenRegistrationBody
T@"CKDPTokenRegistrationBody",&,N,V_tokenRegistrationBody
setVersion:
setHasVersion:
hasVersion
version
_version
Ti,N,V_version
_handleVettingInitiationProgress:
_encryptedKeyDataWithShareMetadata:error:
_addSelfIdentityToShareMetadataPublicPCS:forShareWithURL:error:
_sendRequest:
participantVettingProgressBlock
setParticipantVettingProgressBlock:
address
setAddress:
_participantVettingProgressBlock
_address
T@"NSData",&,N,V_encryptedKey
T@"NSString",&,N,V_address
T@"<CKInitiateParticipantVettingOperationCallbacks>",&,D,N
T@?,C,N,V_participantVettingProgressBlock
T@"NSString",&,N,V_identifier
initWithOperation:subscriptionsToSave:subscriptionIDsToDelete:
subscriptionModifiedBlock
setSubscriptionModifiedBlock:
subscriptionIDByRequestID
setSubscriptionIDByRequestID:
_subscriptionModifiedBlock
_subscriptionIDByRequestID
T@"NSMutableDictionary",&,N,V_subscriptionIDByRequestID
T@"CKRecordZoneID",C,N,V_zoneID
T@?,C,N,V_subscriptionModifiedBlock
_generateHashIdentifierForAnonymousShareTuple:
addAnonymousSharesToSharedDB:operation:withCompletionBlock:
removeAnonymousSharesFromSharedDB:operation:withCompletionBlock:
encryptShareTuples:withCompletionBlock:
_locked_encryptShareTuples:withCompletionBlock:
decryptShareTuple:withCompletionBlock:
_locked_decryptShareTuple:withCompletionBlock:
_lockedFetchSystemZonePCSDataWithCompletion:
_zonePCSData
T@"CKDZonePCSData",&,N,V_zonePCSData
hasBundleIdentifier
apnsEnv
setApnsEnv:
setHasApnsEnv:
hasApnsEnv
apnsEnvAsString:
StringAsApnsEnv:
setSkipBundleIDCheck:
setHasSkipBundleIDCheck:
hasSkipBundleIDCheck
bundleIdentifier
setBundleIdentifier:
skipBundleIDCheck
_apnsEnv
_bundleIdentifier
_skipBundleIDCheck
T@"NSData",&,N,V_token
T@"NSString",&,N,V_bundleIdentifier
Ti,N,V_apnsEnv
TB,N,V_skipBundleIDCheck
hasShare
share
setShare:
_share
T@"CKDPShare",&,N,V_share
listValueType
hasBytesValue
setSignedValue:
setHasSignedValue:
hasSignedValue
setDoubleValue:
setHasDoubleValue:
hasDoubleValue
hasDateValue
hasStringValue
hasLocationValue
hasReferenceValue
hasAssetValue
clearListValues
addListValue:
listValuesCount
listValueAtIndex:
hasPackageValue
hasStreamingAssetValue
hasMergeableValue
hasEncryptedMergeableValue
setIsEncrypted:
setHasIsEncrypted:
hasIsEncrypted
bytesValue
setBytesValue:
signedValue
doubleValue
dateValue
setDateValue:
stringValue
setStringValue:
locationValue
setLocationValue:
referenceValue
setReferenceValue:
assetValue
setAssetValue:
listValues
setListValues:
packageValue
setPackageValue:
streamingAssetValue
setStreamingAssetValue:
mergeableValue
setMergeableValue:
encryptedMergeableValue
setEncryptedMergeableValue:
isEncrypted
_doubleValue
_signedValue
_assetValue
_bytesValue
_dateValue
_encryptedMergeableValue
_listValues
_locationValue
_mergeableValue
_packageValue
_referenceValue
_streamingAssetValue
_stringValue
_isEncrypted
T@"NSData",&,N,V_bytesValue
Tq,N,V_signedValue
Td,N,V_doubleValue
T@"CKDPDate",&,N,V_dateValue
T@"NSString",&,N,V_stringValue
T@"CKDPLocationCoordinate",&,N,V_locationValue
T@"CKDPRecordReference",&,N,V_referenceValue
T@"CKDPAsset",&,N,V_assetValue
T@"NSMutableArray",&,N,V_listValues
T@"CKDPPackage",&,N,V_packageValue
T@"CKDPStreamingAsset",&,N,V_streamingAssetValue
T@"CKDPMergeableValue",&,N,V_mergeableValue
T@"CKDPEncryptedMergeableValue",&,N,V_encryptedMergeableValue
TB,N,V_isEncrypted
hasDownloadURL
setDownloadURLExpirationTimeSeconds:
setHasDownloadURLExpirationTimeSeconds:
hasDownloadURLExpirationTimeSeconds
downloadURL
setDownloadURL:
downloadURLExpirationTimeSeconds
_downloadURLExpirationTimeSeconds
_downloadURL
T@"NSString",&,N,V_downloadURL
Tq,N,V_downloadURLExpirationTimeSeconds
setIntervalLengthSec:
setHasIntervalLengthSec:
hasIntervalLengthSec
setAllowedRequestCount:
setHasAllowedRequestCount:
hasAllowedRequestCount
setRepeatEverySec:
setHasRepeatEverySec:
hasRepeatEverySec
setStartTimeSecondsAfterUnixEpoch:
setHasStartTimeSecondsAfterUnixEpoch:
hasStartTimeSecondsAfterUnixEpoch
setStartTimeSecondsAfterLocalMidnight:
setHasStartTimeSecondsAfterLocalMidnight:
hasStartTimeSecondsAfterLocalMidnight
intervalLengthSec
allowedRequestCount
repeatEverySec
startTimeSecondsAfterUnixEpoch
startTimeSecondsAfterLocalMidnight
_startTimeSecondsAfterLocalMidnight
_startTimeSecondsAfterUnixEpoch
_allowedRequestCount
_intervalLengthSec
_repeatEverySec
Ti,N,V_intervalLengthSec
Ti,N,V_allowedRequestCount
Ti,N,V_repeatEverySec
Tq,N,V_startTimeSecondsAfterUnixEpoch
Tq,N,V_startTimeSecondsAfterLocalMidnight
hasPublicKeyID
hasReference
publicKeyID
setPublicKeyID:
reference
setReference:
_publicKeyID
_reference
T@"NSData",&,N,V_publicKeyID
T@"CKDPRecordReference",&,N,V_reference
hasServerChangeToken
setMaxChanges:
setHasMaxChanges:
hasMaxChanges
setWantsChanges:
setHasWantsChanges:
hasWantsChanges
serverChangeToken
setServerChangeToken:
maxChanges
wantsChanges
_maxChanges
_serverChangeToken
_wantsChanges
T@"NSData",&,N,V_serverChangeToken
TI,N,V_maxChanges
TB,N,V_wantsChanges
_uploadRepairedZones
_checkPCSDataForZone:
_checkZonePCS
zonePCSRepairProgressBlock
setZonePCSRepairProgressBlock:
fixedZones
setFixedZones:
pcsInfoByZoneID
setPcsInfoByZoneID:
_zonePCSRepairProgressBlock
_fixedZones
_pcsInfoByZoneID
T@"NSMutableArray",&,N,V_fixedZones
T@"NSMutableDictionary",&,N,V_pcsInfoByZoneID
T@"<CKRepairZonePCSOperationCallbacks>",&,D,N
T@?,C,N,V_zonePCSRepairProgressBlock
setInt64Value:
setHasInt64Value:
hasInt64Value
setBoolValue:
setHasBoolValue:
hasBoolValue
setHasValue:
valueAsString:
StringAsValue:
clearOneofValuesForValue
int64Value
boolValue
_int64Value
_boolValue
Tq,N,V_int64Value
TB,N,V_boolValue
Ti,N,V_value
hasApiToken
setForceFetchToken:
setHasForceFetchToken:
hasForceFetchToken
apiToken
setApiToken:
forceFetchToken
_apiToken
_forceFetchToken
T@"NSString",&,N,V_apiToken
TB,N,V_forceFetchToken
hasContainerScopedUserId
containerScopedUserId
setContainerScopedUserId:
_containerScopedUserId
T@"NSString",&,N,V_containerScopedUserId
hasSyncContinuationToken
syncContinuationToken
setSyncContinuationToken:
_syncContinuationToken
T@"NSData",&,N,V_syncContinuationToken
hasMovedRecordDestinationIdentifier
movedRecordDestinationIdentifier
setMovedRecordDestinationIdentifier:
_movedRecordDestinationIdentifier
T@"CKDPRecordIdentifier",&,N,V_movedRecordDestinationIdentifier
initWithMessage:
uuid
seqNum
dataString
_uuid
_seqNum
_dataString
TQ,R,N,V_type
T@"NSString",R,N,V_uuid
Tq,R,N,V_seqNum
T@"NSString",R,N,V_dataString
parseRequestArrayAndPrint:
parserFromConfigurationMessage:
logMessageFilter
setLogMessageFilter:
requestParsedBlock
setRequestParsedBlock:
requestDictionary
setRequestDictionary:
printQueue
setPrintQueue:
_logMessageFilter
_requestParsedBlock
_requestDictionary
_printQueue
T@"NSMutableDictionary",&,V_requestDictionary
T@"NSObject<OS_dispatch_queue>",&,V_printQueue
T@"NSPredicate",C,N,V_logMessageFilter
T@?,C,N,V_requestParsedBlock
_handleFetchedInfo:withIdentity:error:
_fetchIdentities
shareParticipantFetchedBlock
setShareParticipantFetchedBlock:
pendingRequest
setPendingRequest:
_shareParticipantFetchedBlock
_pendingRequest
T@"CKDPublicIdentityLookupRequest",&,N,V_pendingRequest
T@"<CKFetchShareParticipantsOperationCallbacks>",&,D,N
T@?,C,N,V_shareParticipantFetchedBlock
hasSelfAddedPcs
hasPublicKey
publicKeyVersion
setPublicKeyVersion:
setHasPublicKeyVersion:
hasPublicKeyVersion
setAcceptedInProcess:
setHasAcceptedInProcess:
hasAcceptedInProcess
selfAddedPcs
setSelfAddedPcs:
publicKey
setPublicKey:
acceptedInProcess
_publicKey
_publicKeyVersion
_selfAddedPcs
_acceptedInProcess
T@"CKDPProtectionInfo",&,N,V_selfAddedPcs
T@"CKDPProtectionInfo",&,N,V_publicKey
Ti,N,V_publicKeyVersion
TB,N,V_acceptedInProcess
initWithOperation:recordIDsToArchive:
recordArchivedBlock
setRecordArchivedBlock:
zoneIDToRecordIDs
setZoneIDToRecordIDs:
recordZoneIDByRequestID
setRecordZoneIDByRequestID:
_recordArchivedBlock
_zoneIDToRecordIDs
_recordZoneIDByRequestID
T@"NSMutableDictionary",&,N,V_zoneIDToRecordIDs
T@"NSMutableDictionary",&,N,V_recordZoneIDByRequestID
T@?,C,N,V_recordArchivedBlock
hasFieldValue
fieldValue
setFieldValue:
_fieldValue
T@"CKDPRecordFieldValue",&,N,V_fieldValue
isEnabled
sharedLogger
enabled
TB,R,GisEnabled
logOperationCombinedMetrics:forOperationID:operationType:operationGroupID:operationGroupName:operationGroupQuantity:operationQualityOfService:appContainerTuple:
initWithWrappedKey:publicKey:
wrappedKey
setWrappedKey:
_wrappedKey
T@"NSData",C,N,V_wrappedKey
T@"CKPublicKey",C,N,V_publicKey
typesType
filtersType
sortsType
clearTypes
addTypes:
typesCount
typesAtIndex:
clearFilters
addFilters:
filtersCount
filtersAtIndex:
clearSorts
addSorts:
sortsCount
sortsAtIndex:
setDistinct:
setHasDistinct:
hasDistinct
queryOperator
setQueryOperator:
setHasQueryOperator:
hasQueryOperator
queryOperatorAsString:
StringAsQueryOperator:
types
setTypes:
filters
setFilters:
sorts
setSorts:
distinct
_filters
_queryOperator
_sorts
_types
_distinct
T@"NSMutableArray",&,N,V_types
T@"NSMutableArray",&,N,V_filters
T@"NSMutableArray",&,N,V_sorts
TB,N,V_distinct
Ti,N,V_queryOperator
clearAllClouddThrottles
allClouddThrottlesWithCompletionHandler:
addClouddThrottle:
responseHeadersType
hasResponseUUID
hasAuthGetResponseBody
clearResponseHeaders
addResponseHeaders:
responseHeadersCount
responseHeadersAtIndex:
responseUUID
setResponseUUID:
authGetResponseBody
setAuthGetResponseBody:
setResponseHeaders:
_authGetResponseBody
_responseHeaders
_responseUUID
T@"NSString",&,N,V_responseUUID
T@"NSData",&,N,V_authGetResponseBody
T@"NSMutableArray",&,N,V_responseHeaders
hasExtensionName
setTypeCode:
setHasTypeCode:
hasTypeCode
hasExtensionPayload
extensionName
setExtensionName:
typeCode
extensionPayload
setExtensionPayload:
_extensionName
_extensionPayload
_typeCode
T@"NSString",&,N,V_extensionName
TI,N,V_typeCode
T@"NSData",&,N,V_extensionPayload
fileHandle
setFileHandle:
_fileHandle
T@"NSFileHandle",&,N,V_fileHandle
fieldsType
conflictLoserEtagsType
pluginFieldsType
tombstonedPublicKeyIDsType
hasCreatedBy
clearFields
addFields:
fieldsCount
fieldsAtIndex:
hasModifiedBy
clearConflictLoserEtags
addConflictLoserEtags:
conflictLoserEtagsCount
conflictLoserEtagsAtIndex:
hasModifiedByDevice
clearPluginFields
addPluginFields:
pluginFieldsCount
pluginFieldsAtIndex:
permission
setPermission:
setHasPermission:
hasPermission
permissionAsString:
StringAsPermission:
hasShareInfo
hasChainPrivateKey
hasChainProtectionInfo
hasChainParent
clearTombstonedPublicKeyIDs
addTombstonedPublicKeyIDs:
tombstonedPublicKeyIDsCount
tombstonedPublicKeyIDsAtIndex:
hasZoneishPrimaryKeyId
createdBy
setCreatedBy:
fields
setFields:
modifiedBy
setModifiedBy:
conflictLoserEtags
setConflictLoserEtags:
modifiedByDevice
setModifiedByDevice:
pluginFields
setPluginFields:
shareInfo
setShareInfo:
chainPrivateKey
setChainPrivateKey:
chainProtectionInfo
setChainProtectionInfo:
chainParent
setChainParent:
tombstonedPublicKeyIDs
setTombstonedPublicKeyIDs:
zoneishPrimaryKeyId
setZoneishPrimaryKeyId:
_chainParent
_chainPrivateKey
_chainProtectionInfo
_conflictLoserEtags
_createdBy
_fields
_modifiedBy
_modifiedByDevice
_permission
_pluginFields
_shareInfo
_tombstonedPublicKeyIDs
_zoneishPrimaryKeyId
T@"CKDPIdentifier",&,N,V_createdBy
T@"NSMutableArray",&,N,V_fields
T@"CKDPIdentifier",&,N,V_modifiedBy
T@"NSMutableArray",&,N,V_conflictLoserEtags
T@"NSString",&,N,V_modifiedByDevice
T@"NSMutableArray",&,N,V_pluginFields
Ti,N,V_permission
T@"CKDPShare",&,N,V_shareInfo
T@"NSData",&,N,V_chainPrivateKey
T@"CKDPProtectionInfo",&,N,V_chainProtectionInfo
T@"CKDPRecordChainParent",&,N,V_chainParent
T@"NSMutableArray",&,N,V_tombstonedPublicKeyIDs
T@"NSData",&,N,V_zoneishPrimaryKeyId
publicKeysType
setParticipantKeyLost:
setHasParticipantKeyLost:
hasParticipantKeyLost
clearPublicKeys
addPublicKeys:
publicKeysCount
publicKeysAtIndex:
participantKeyLost
publicKeys
setPublicKeys:
_publicKeys
_participantKeyLost
TB,N,V_participantKeyLost
T@"NSMutableArray",&,N,V_publicKeys
sharedPurger
schedulePeriodicPurgesInDirectory:
registerXPCActivity
purgeAll
purgeDirectory:
purgeRootDirectory:
addRootDirectory:
rootDirectories
_rootDirectories
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
T@"NSMutableArray",R,N,V_rootDirectories
T@"CKCodeRecordTransport",&,N,V_record
expressionWithCKDPRecordFieldValue:translator:
CKDPQueryFiltersWithTranslator:error:
predicateWithSortedCKDPQueryFilters:translator:
predicateWithCKDPQueryFilters:translator:
_nearFilterWithKey:location:radius:translator:
_parseNearFiltersWithTranslator:withError:
_parseListContainsFiltersWithTranslator:withError:
_parseInFiltersWithTranslator:withError:
_parseListContainsAnyFiltersWithTranslator:withError:
_parseListContainsAllFiltersWithTranslator:withError:
_parseBeginsWithFiltersWithTranslator:withError:
_parseBetweenFiltersWithTranslator:withError:
_comparisonOptionForString:
_parseFullTextSearchUsingContainsTranslator:withError:
_parseFullTextSearchFiltersWithTranslator:withError:
_parseBasicOperatorFiltersWithTranslator:withError:
CKDPQuerySort
initWithOperation:apsToken:apsEnvironmentString:bundleID:
apsToken
setApsToken:
setApsEnvironmentString:
bundleID
setBundleID:
_apsToken
_bundleID
T@"NSData",&,N,V_apsToken
T@"NSString",&,N,V_apsEnvironmentString
T@"NSString",&,N,V_bundleID
hasConstructedAssetDownloadParameters
constructedAssetDownloadParameters
setConstructedAssetDownloadParameters:
_constructedAssetDownloadParameters
T@"NSData",&,N,V_constructedAssetDownloadParameters
initWithOperation:serviceName:functionName:serializedParameters:attestationEntropy:pccWrappedInvocationKeys:trustedTargetWrappedInvocationKey:
attestationEntropy
setAttestationEntropy:
pccWrappedInvocationKeys
setPccWrappedInvocationKeys:
trustedTargetWrappedInvocationKey
setTrustedTargetWrappedInvocationKey:
_attestationEntropy
_pccWrappedInvocationKeys
_trustedTargetWrappedInvocationKey
T@"NSData",&,N,V_attestationEntropy
T@"NSArray",C,N,V_pccWrappedInvocationKeys
T@"CKDTrustedTargetWrappedKey",C,N,V_trustedTargetWrappedInvocationKey
initWithOperation:subscriptionIDs:
subscriptions
setSubscriptions:
subscriptionFetchedBlock
setSubscriptionFetchedBlock:
errorFetchingAllSubscriptionsBlock
setErrorFetchingAllSubscriptionsBlock:
subscriptionIDs
setSubscriptionIDs:
_subscriptions
_subscriptionFetchedBlock
_errorFetchingAllSubscriptionsBlock
_subscriptionIDs
T@"NSArray",&,N,V_subscriptionIDs
T@"NSMutableArray",&,N,V_subscriptions
T@?,C,N,V_subscriptionFetchedBlock
T@?,C,N,V_errorFetchingAllSubscriptionsBlock
parseQueue
parserData
setParserData:
parserError
setParserError:
testRepeatedParseResults
setTestRepeatedParseResults:
objectParsedBlock
setObjectParsedBlock:
_parseQueue
_parserData
_testRepeatedParseResults
_parserError
_objectParsedBlock
T@"NSError",&,N,V_parserError
T@"NSMutableData",&,N
Tq,N,V_qualityOfService
TB,N,V_testRepeatedParseResults
T@?,C,N,V_objectParsedBlock
shouldThrottle
setShouldThrottle:
isManatee
setIsManatee:
keySyncResult
setKeySyncResult:
overallResult
setOverallResult:
keySyncDurationSec
setKeySyncDurationSec:
throttledDurationSec
setThrottledDurationSec:
context
setContext:
KRSReturnedExistingIdentity
setKRSReturnedExistingIdentity:
_shouldThrottle
_isManatee
_keySyncResult
_overallResult
_keySyncDurationSec
_throttledDurationSec
_context
_KRSReturnedExistingIdentity
T@"NSNumber",&,N,V_shouldThrottle
T@"NSNumber",&,N,V_isManatee
T@"NSString",&,N,V_keySyncResult
T@"NSString",&,N,V_overallResult
T@"NSNumber",&,N,V_keySyncDurationSec
T@"NSNumber",&,N,V_throttledDurationSec
T@"NSString",&,N,V_context
T@"NSNumber",N,V_KRSReturnedExistingIdentity
T@"NSError",&,N,V_error
waitOnSyncWithQueue:handler:
accountDsid
setAccountDsid:
setManatee:
syncGroup
setSyncGroup:
completionDate
setCompletionDate:
syncStatus
setSyncStatus:
syncError
setSyncError:
_manatee
_accountDsid
_syncGroup
_completionDate
_syncStatus
_syncError
T@"NSString",&,N,V_accountDsid
manatee
TB,N,GisManatee,V_manatee
T@"NSObject<OS_dispatch_group>",&,N,V_syncGroup
T@"NSDate",&,N,V_completionDate
T@"NSNumber",&,N,V_syncStatus
T@"NSError",&,N,V_syncError
TB,N,V_KRSReturnedExistingIdentity
_getKeySyncTrackerByServicenameForAccount:
createSyncTrackerForAccount:service:manatee:
syncTrackerForAccount:service:manatee:shortThrottlePeriod:
performKeySyncWithSyncTracker:testableSyncConfig:shouldThrottle:testOverrideProvider:completionHandler:
getKeySyncEligibilityForService:isManatee:account:zonePCSModificationDate:testOverrideProvider:completionHandler:
syncUserKeysForService:context:bundleID:serviceIsManatee:account:shouldThrottle:testOverrideProvider:completionHandler:
keySyncTrackerByServiceNameByAccount
setKeySyncTrackerByServiceNameByAccount:
keySyncQueue
setKeySyncQueue:
_keySyncTrackerByServiceNameByAccount
_keySyncQueue
T@"NSMutableDictionary",&,N,V_keySyncTrackerByServiceNameByAccount
T@"NSObject<OS_dispatch_queue>",&,N,V_keySyncQueue
_handleSubscriptionFetched:withID:responseCode:
subscriptionFetchedProgressBlock
setSubscriptionFetchedProgressBlock:
isFetchAllSubscriptionsOperation
setIsFetchAllSubscriptionsOperation:
_isFetchAllSubscriptionsOperation
_subscriptionFetchedProgressBlock
TB,N,V_isFetchAllSubscriptionsOperation
T@"<CKFetchSubscriptionsOperationCallbacks>",&,D,N
T@?,C,N,V_subscriptionFetchedProgressBlock
prepareForSave
clearProtectionDataForRecord
setServerRecord:
savePCSDataToCache
modifyHandlerWithShare:operation:
modifyHandlerForDeleteWithShareID:operation:
shareID
isShare
isCloudDocsContainer
serviceType
sideEffectRecordIDs
noteSideEffectRecordPendingModify:
noteSideEffectRecordAbsent:
noteSideEffectRecordPendingDelete:
fetchSharePCSData
_fetchSharePCSData
_fetchRootRecordPublicSharingIdentityWithCompletionHandler:
_createNewSharePCSDataWithError:
_handleSharePCSData:zonePCSData:
_prepareDependentPCSUpdateIfNeededForShareWithSharePCS:error:
_rollShareAndZonePCSIfNeededForSharePCS:zonePCSData:
_alignParticipantPermissions
_serializePCSDataForShareWithError:
_updateSharePublicPCSWithError:
_cleanPublicPCSforShareWithError:
_addPublicKeyToSelfParticipant
_setupParticipantsProtectionInfos
selfPPPCSOwnerIdentity
_modifyRoleForParticipant:invitedPCS:shareeIdentities:error:
_removePrivateParticipantsFromInvitedPCS:error:
_removePrivateParticipant:fromInvitedSharePCS:
_publicKeyForParticipant:error:
_addedPrivateParticipantNeedsAManateeInvitation:
createPublicIdentityFromPublicKeyForParticipant:error:
invitedPCSPermissionForParticipant:
_ensurePrivateParticipant:isInInvitedSharePCS:
_removePublicKey:fromInvitedPCS:
updateParticipantsForFetchedShare:error:
haveAddedOwnerToShare
setHaveAddedOwnerToShare:
isALegacyPublicShareThatNeedsOwnerPPPCSUpgrade
setIsALegacyPublicShareThatNeedsOwnerPPPCSUpgrade:
setSelfPPPCSOwnerIdentity:
_haveAddedOwnerToShare
_isALegacyPublicShareThatNeedsOwnerPPPCSUpgrade
_selfPPPCSOwnerIdentity
TB,N,V_haveAddedOwnerToShare
TB,N,V_isALegacyPublicShareThatNeedsOwnerPPPCSUpgrade
T^{_PCSPublicIdentityData=},N,V_selfPPPCSOwnerIdentity
T@"CKShare",R,N
T@"CKRecordID",R,N
hasSubscription
subscription
setSubscription:
_subscription
T@"CKDPSubscription",&,N,V_subscription
preparedStreamFromStore:
preparedLiveStreamFromLiveStore:
initForHostStream
initWithArchiveAtURL:
addStreamObserver:
streamLogsWithCompletion:
wantsSimulatorLogs
setWantsSimulatorLogs:
startTimeOffset
setStartTimeOffset:
absoluteStartDate
setAbsoluteStartDate:
source
setSource:
logEventStream
setLogEventStream:
liveStream
setLiveStream:
streamObservers
setStreamObservers:
_wantsSimulatorLogs
_onlyTestLogs
_startTimeOffset
_absoluteStartDate
_processName
_source
_logEventStream
_liveStream
_streamObservers
TQ,N,V_source
T@"OSLogEventStream",&,N,V_logEventStream
T@"OSLogEventLiveStream",&,N,V_liveStream
T@"NSMutableArray",&,N,V_streamObservers
TB,N,V_wantsSimulatorLogs
TB,N,V_onlyTestLogs
Td,N,V_startTimeOffset
T@"NSDate",&,N,V_absoluteStartDate
T@"NSString",&,N,V_processName
writeString:
_CKLogToFileHandle:atDepth:
CKLogToFileHandle:
CKSharedCalendar
length
_hasIvar:
_typeCKLogValue
_applicationContainerEnvironmentCKLogValue
_isolationLevelCKLogValue
_targetDatabaseCKLogValue
_publicAccessCKLogValue
_participantPermissionCKLogValue
_participantStateCKLogValue
_participantTypeCKLogValue
_stateCKLogValue
_permissionCKLogValue
_permissionAsString
setShareProtection:
envelopeContextWithIdentifier:error:
shareProtection
encryptMergeableValueMetadata
setEncryptMergeableValueMetadata:
mergeableValueID
setMergeableValueID:
_encryptMergeableValueMetadata
_shareProtection
_mergeableValueID
T^{_OpaquePCSShareProtection=},N,V_shareProtection
TB,N,V_encryptMergeableValueMetadata
T@"CKMergeableValueID",C,N,V_mergeableValueID
encryptWithContext:error:
decryptWithContext:error:
unwrapAssetKeyWithShareProtection:pcsManager:error:
needsEncryption
needsDecryption
envelope
setEnvelope:
encryptedTimestamps
setEncryptedTimestamps:
authenticatedTimestamps
setAuthenticatedTimestamps:
_envelopeWithContext:allowCreation:error:
_encryptWithContext:error:
_decryptWithContext:error:
T@"NSData",C,N
T@"CKTuple2",C,N
localizedArgumentsType
titleLocalizedArgumentsType
subtitleLocalizedArgumentsType
hasText
hasLocalizedKey
clearLocalizedArguments
addLocalizedArguments:
localizedArgumentsCount
localizedArgumentsAtIndex:
hasActionLocKey
hasLaunchImage
hasSoundName
hasCategory
hasTitle
hasTitleLocalizedKey
clearTitleLocalizedArguments
addTitleLocalizedArguments:
titleLocalizedArgumentsCount
titleLocalizedArgumentsAtIndex:
hasSubtitle
hasSubtitleLocalizedKey
clearSubtitleLocalizedArguments
addSubtitleLocalizedArguments:
subtitleLocalizedArgumentsCount
subtitleLocalizedArgumentsAtIndex:
text
setText:
localizedKey
setLocalizedKey:
localizedArguments
setLocalizedArguments:
actionLocKey
setActionLocKey:
launchImage
setLaunchImage:
soundName
setSoundName:
category
setCategory:
title
setTitle:
titleLocalizedKey
setTitleLocalizedKey:
titleLocalizedArguments
setTitleLocalizedArguments:
subtitle
setSubtitle:
subtitleLocalizedKey
setSubtitleLocalizedKey:
subtitleLocalizedArguments
setSubtitleLocalizedArguments:
_actionLocKey
_category
_launchImage
_localizedArguments
_localizedKey
_soundName
_subtitle
_subtitleLocalizedArguments
_subtitleLocalizedKey
_text
_title
_titleLocalizedArguments
_titleLocalizedKey
T@"NSString",&,N,V_text
T@"NSString",&,N,V_localizedKey
T@"NSMutableArray",&,N,V_localizedArguments
T@"NSString",&,N,V_actionLocKey
T@"NSString",&,N,V_launchImage
T@"NSString",&,N,V_soundName
T@"NSString",&,N,V_category
T@"NSString",&,N,V_title
T@"NSString",&,N,V_titleLocalizedKey
T@"NSMutableArray",&,N,V_titleLocalizedArguments
T@"NSString",&,N,V_subtitle
T@"NSString",&,N,V_subtitleLocalizedKey
T@"NSMutableArray",&,N,V_subtitleLocalizedArguments
recordFetchedBlock
setRecordFetchedBlock:
userRecord
setUserRecord:
_recordFetchedBlock
_userRecord
T@"CKRecord",&,N,V_userRecord
T@?,C,N,V_recordFetchedBlock
hasArchiveContinuationToken
setNewestFirst:
setHasNewestFirst:
hasNewestFirst
setHasLimit:
hasLimit
archiveContinuationToken
setArchiveContinuationToken:
newestFirst
_archiveContinuationToken
_newestFirst
T@"NSData",&,N,V_archiveContinuationToken
TB,N,V_newestFirst
TI,N,V_limit
hasFirstName
hasLastName
isInNetwork
setIsInNetwork:
setHasIsInNetwork:
hasIsInNetwork
firstName
setFirstName:
lastName
setLastName:
_firstName
_lastName
_isInNetwork
T@"NSString",&,N,V_firstName
T@"NSString",&,N,V_lastName
TB,N,V_isInNetwork
assetsType
hasField
clearAssets
addAssets:
assetsCount
assetsAtIndex:
field
setField:
assets
setAssets:
_assets
_field
T@"CKDPRecordFieldIdentifier",&,N,V_field
T@"NSMutableArray",&,N,V_assets
tupleForItem:
initWithTuple:
contentBaseURL
requestor
downloadPreauthorization
addItem:
authPutRequest
setAuthPutRequest:
tuple
setTuple:
complete
setComplete:
_complete
_authPutRequest
_tuple
T@"NSArray",&,N,V_tuple
T@"CKAssetDownloadPreauthorization",R,N
TB,N,V_complete
T@"<MMCSOperationMetric>",&,N,V_metrics
T@"NSData",&,N,V_authPutRequest
T@"NSArray",R,N,V_items
_initCommonWithOperation:
moveHandlerWithMoveChange:operation:
_initWithMoveChange:operation:
serverDestinationRecord
setServerDestinationRecord:
moveChange
setMoveChange:
serverMoveMarkerRecord
setServerMoveMarkerRecord:
_moveChange
_serverMoveMarkerRecord
T@"CKMovePhotosChange",&,N,V_moveChange
T@"CKDMovePhotosOperation",W,D,N
T@"CKRecord",&,N
T@"CKRecord",&,N,V_serverMoveMarkerRecord
containerPrivacySettingsType
clearContainerPrivacySettings
addContainerPrivacySettings:
containerPrivacySettingsCount
containerPrivacySettingsAtIndex:
containerPrivacySettings
setContainerPrivacySettings:
_containerPrivacySettings
T@"NSMutableArray",&,N,V_containerPrivacySettings
subscriptionsType
clearSubscriptions
addSubscriptions:
subscriptionsCount
subscriptionsAtIndex:
hasRecordForOplockFailure
recordForOplockFailure
setRecordForOplockFailure:
_recordForOplockFailure
T@"CKDPRecord",&,N,V_recordForOplockFailure
zeroSizeFileSignature
protocolVersion
protocolHeaders
_userInfoFromMMCSRetryableError:
_commonErrorCodeWithMMCSError:
_errorCodeWithMMCSGetError:
_errorCodeWithMMCSPutError:
_errorCodeWithMMCSRegisterError:
_errorWithMMCSError:path:description:operationType:
_errorWithMMCSError:description:operationType:
sharedWrappersByPath
purgeMMCSDirectoryWithPath:
MMCSWrapperForApplicationBundleID:directoryContext:database:error:
drop
initWithMMCSEngineContext:directoryContext:
getMMCSEngine
getMaxChunkCountForSection
_referenceIdentifierFromAssetKey:
_logMMCSOptions:
performOperationCleanup
_contextToRegisterItemGroup:operation:options:completionHandler:
registerItemGroupSet:operation:options:completionHandler:
_contextToGetOrPutChunkKeysItemGroup:operation:options:completionHandler:
getChunkKeysItemGroupSet:operation:options:completionHandler:
_contextToGetItemGroup:operation:options:progress:command:completionHandler:
getItemGroupSet:operation:shouldFetchAssetContentInMemory:options:progress:command:completionHandler:
_contextToPutItemGroup:operation:options:progress:completionHandler:
putItemGroupSet:operation:options:progress:completionHandler:
putChunkKeysItemGroupSet:operation:options:completionHandler:
_getRegisteredItemsGreaterThan:itemIds:itemCount:error:
registeredItemCount:error:
showRegisteredItems
_unregisterItemIDs:
unregisterItemIDs:
_contextToPutSectionItem:operation:options:progress:completionHandler:
putSectionItem:operation:options:progress:completionHandler:
_contextToGetSectionItem:operation:options:progress:completionHandler:
getSectionItem:operation:options:progress:completionHandler:
startTrackingItemIDsForMMCSItems:
stopTrackingItemIDsForMMCSItems:
isTrackingItemID:
temporaryDirectory
assetCache
setAssetCache:
didDrop
setDidDrop:
checkoutCount
setCheckoutCount:
MMCSEngineContext
setMMCSEngineContext:
_trackedItemIDs
_didDrop
_path
_temporaryDirectory
_assetCache
_checkoutCount
_MMCSEngineContext
TB,N,V_didDrop
Tq,N,V_checkoutCount
T@"CKDMMCSEngineContext",&,N,V_MMCSEngineContext
T@"NSURL",R,N,V_path
T@"NSURL",R,N,V_temporaryDirectory
T@"CKDAssetCache",&,N,V_assetCache
maxChunkCountForSection
TI,R,N,GgetMaxChunkCountForSection
initWithAsset:
setupForGetChunkKeysWithAsset:destinationDatabaseScope:
initWithPackage:
setFileSize:
canBeRegistered
clearFileSize
setOffset:
_openInfo
openWithOperation:error:
getFileSizeWithOperation:error:
getFileSizeWithError:
getFileMetadataWithContainer:fileHandle:error:
getFileMetadataWithFileHandle:error:
readBytesOfInMemoryAssetContentWithContainer:offset:length:error:
fileURL
setFileURL:
fileID
setFileID:
generationID
setGenerationID:
modTimeInSeconds
setModTimeInSeconds:
itemID
setItemID:
progress
setProgress:
fileSize
paddedFileSize
setPaddedFileSize:
offset
chunkCount
setChunkCount:
packageIndex
setPackageIndex:
putPackageSectionIdentifier
setPutPackageSectionIdentifier:
setPackage:
recordKey
setRecordKey:
itemTypeHint
setItemTypeHint:
setContentBaseURL:
setRequestor:
authToken
setAuthToken:
setDownloadPreauthorization:
uploadReceiptExpiration
setUploadReceiptExpiration:
sectionItems
setSectionItems:
assetKey
setAssetKey:
wrappedAssetKey
setWrappedAssetKey:
clearAssetKey
setClearAssetKey:
boundaryKey
setBoundaryKey:
writer
setWriter:
downloadLooksOkay
setDownloadLooksOkay:
uploadTokenExpiration
setUploadTokenExpiration:
downloadTokenExpiration
setDownloadTokenExpiration:
assetChunkerOptions
setAssetChunkerOptions:
constructedAssetDownloadURL
setConstructedAssetDownloadURL:
constructedAssetEstimatedSize
setConstructedAssetEstimatedSize:
trackingUUID
setTrackingUUID:
hasOffset
setHasOffset:
finished
setFinished:
isTemporary
shouldReadRawEncryptedData
setShouldReadRawEncryptedData:
shouldReadAssetContentUsingClientProxy
setShouldReadAssetContentUsingClientProxy:
usesAssetDownloadStagingManager
setUsesAssetDownloadStagingManager:
isAlreadyRegistered
setIsAlreadyRegistered:
isReaderReadFrom
setIsReaderReadFrom:
isRereferencedAssetUpload
setIsRereferencedAssetUpload:
_downloadLooksOkay
_hasSize
_hasOffset
_shouldReadRawEncryptedData
_shouldReadAssetContentUsingClientProxy
_usesAssetDownloadStagingManager
_isAlreadyRegistered
_isReaderReadFrom
_isRereferencedAssetUpload
_chunkCount
_fileURL
_fileID
_generationID
_modTimeInSeconds
_itemID
_progress
_fileSize
_paddedFileSize
_offset
_packageIndex
_putPackageSectionIdentifier
_recordKey
_itemTypeHint
_contentBaseURL
_requestor
_authToken
_downloadPreauthorization
_uploadReceiptExpiration
_sectionItems
_assetKey
_wrappedAssetKey
_clearAssetKey
_boundaryKey
_writer
_uploadTokenExpiration
_downloadTokenExpiration
_assetChunkerOptions
_constructedAssetDownloadURL
_constructedAssetEstimatedSize
_trackingUUID
T@"NSURL",&,N,V_fileURL
T@"NSNumber",&,N,V_deviceID
T@"NSNumber",&,N,V_fileID
T@"NSNumber",&,N,V_generationID
T@"NSNumber",&,N,V_modTimeInSeconds
TQ,N,V_itemID
Td,N,V_progress
TQ,N,V_fileSize
TQ,N,V_paddedFileSize
TQ,N,V_offset
TI,N,V_chunkCount
TQ,N,V_packageIndex
T@"NSString",&,N,V_putPackageSectionIdentifier
T@"CKAsset",&,N,V_asset
T@"CKPackage",&,N,V_package
T@"NSString",&,N,V_recordType
T@"NSString",&,N,V_recordKey
T@"NSString",&,N,V_itemTypeHint
T@"NSURL",&,N,V_contentBaseURL
T@"NSString",&,N,V_requestor
T@"NSString",&,N,V_authToken
T@"CKAssetDownloadPreauthorization",&,N,V_downloadPreauthorization
Td,N,V_uploadReceiptExpiration
T@"NSMutableArray",&,N,V_sectionItems
T@"NSData",&,N,V_assetKey
T@"NSData",&,N,V_wrappedAssetKey
T@"NSData",&,N,V_clearAssetKey
T@"NSData",&,N,V_boundaryKey
T@"CKDMMCSItemCommandWriter",&,N,V_writer
TB,N,V_downloadLooksOkay
TQ,N,V_uploadTokenExpiration
TQ,N,V_downloadTokenExpiration
T@"NSDictionary",&,N,V_assetChunkerOptions
T@"NSURL",&,N,V_constructedAssetDownloadURL
TQ,N,V_constructedAssetEstimatedSize
T@"NSString",&,N,V_trackingUUID
TB,N,V_hasSize
TB,N,V_hasOffset
TB,N,V_finished
TB,N,GisTemporary,V_temporary
TB,N,V_shouldReadRawEncryptedData
TB,N,V_shouldReadAssetContentUsingClientProxy
TB,N,V_usesAssetDownloadStagingManager
TB,N,V_isAlreadyRegistered
TB,N,V_isReaderReadFrom
TB,N,V_isRereferencedAssetUpload
modifyHandlerWithRecord:operation:
modifyHandlerForDeleteWithRecordID:operation:
_stringForState:
_initWithRecord:operation:
_initForDeleteWithRecordID:operation:
_needsSigningPCS
fetchRecordPCSData
_fetchSigningPCSForRecordToDelete
_setSigningPCSIdentity:
_canSetPreviousProtectionEtag
_createPublicSharingKeyWithError:
_loadPCSData
_reallyFetchPCSDataWithOptions:
_fetchPCSData
_fetchParentPCSForID:withCompletionHandler:
_fetchSharePCSForID:withCompletionHandler:
_addShareToPCSData:withError:
_keyRollIfNeededForRecordPCSData:withError:
_reallyAddShareToPCSData:withError:
_fetchParentPCSForData:withError:
_addParentPCS:toRecordPCS:
_createAndSavePCS
_useZoneishPCS
_continueCreateAndSavePCSWithZonePCS:sharePCS:
_unwrapRecordPCSForZone
_unwrapRecordPCSWithShareID:
_unwrapRecordPCSForParent
_fetchExistingPCSForProvidedPCSData:
_handlePCSData:withError:
assetsWhichNeedRecordFetch
prepareAssetsForUploadWithError:
_prepareAsset:recordKey:mergeableDeltaID:record:error:
prepareStreamingAsset:forUploadWithRecord:
_wrapEncryptedData:withPCS:forField:recordID:
_pretendToWrapEncryptedDataForRecordValueStore:
_wrapEncryptedDataForRecordValueStore:withPCS:
_encryptMergeableDeltasInRecordValueStore:shareProtection:
_wrapEncryptedDataOnRecord:
_clearRecordProtectionDataForRecord
pcsGroup
setPcsGroup:
recordPCSData
setRecordPCSData:
sharePCSData
setSharePCSData:
serverRecord
isDelete
setIsDelete:
rereferencedAssetArrayByFieldname
setRereferencedAssetArrayByFieldname:
batchRank
setBatchRank:
saveAttempts
setSaveAttempts:
saveCompletionBlockCalled
setSaveCompletionBlockCalled:
needsRefetch
setNeedsRefetch:
sharedZonePCSData
setSharedZonePCSData:
didAttemptZoneWideShareKeyRoll
setDidAttemptZoneWideShareKeyRoll:
didRollRecordPCSMasterKey
setDidRollRecordPCSMasterKey:
_isDelete
_saveCompletionBlockCalled
_needsRefetch
_didAttemptZoneWideShareKeyRoll
_didRollRecordPCSMasterKey
_saveAttempts
_pcsGroup
_recordPCSData
_sharePCSData
_serverRecord
_rereferencedAssetArrayByFieldname
_batchRank
_sharedZonePCSData
T@"CKRecord",&,N,V_record
TB,N,V_isDelete
T@"NSObject<OS_dispatch_group>",&,N,V_pcsGroup
T@"CKDPCSManager",R,N
T@"CKDPCSCache",R,N
TB,N,V_didRollRecordPCSMasterKey
T@"CKDModifyRecordsOperation",W,N,V_operation
T@"CKDRecordPCSData",&,N,V_recordPCSData
T@"CKDSharePCSData",&,N,V_sharePCSData
T@"CKRecord",&,N,V_serverRecord
TQ,N,V_state
T@"NSMutableDictionary",&,N,V_rereferencedAssetArrayByFieldname
Tq,N,V_batchRank
Ti,N,V_saveAttempts
TB,N,V_saveCompletionBlockCalled
TB,N,V_needsRefetch
T@"CKDZonePCSData",&,N,V_sharedZonePCSData
TB,N,V_didAttemptZoneWideShareKeyRoll
T@"NSDictionary",C,N,V_assetUUIDToExpectedProperties
initWithEncryptedData:
initWithEncryptedData:changeType:deleteType:
encryptedTupleData
changeType
deleteType
_changeType
_deleteType
_encryptedTupleData
T@"NSData",R,N,V_encryptedTupleData
Ti,R,N,V_changeType
Ti,R,N,V_deleteType
initWithZoneID:shareID:
ckAnonymousShareHashIdentifier
setCkAnonymousShareHashIdentifier:
_shareID
_ckAnonymousShareHashIdentifier
T@"CKRecordZoneID",R,N,V_zoneID
T@"CKRecordID",R,N,V_shareID
T@"NSString",C,N,V_ckAnonymousShareHashIdentifier
setRadius:
setHasRadius:
hasRadius
radius
_radius
Td,N,V_radius
packagePutReceiptsType
hasMissingAssetStatusRecordID
setRecovered:
setHasRecovered:
hasRecovered
setAssetSize:
setHasAssetSize:
hasAssetSize
hasAssetPutReceipt
packageAssetSizesCount
packageAssetSizes
clearPackageAssetSizes
addPackageAssetSize:
packageAssetSizeAtIndex:
setPackageAssetSizes:count:
clearPackagePutReceipts
addPackagePutReceipts:
packagePutReceiptsCount
packagePutReceiptsAtIndex:
missingAssetStatusRecordID
setMissingAssetStatusRecordID:
recovered
assetSize
assetPutReceipt
setAssetPutReceipt:
packagePutReceipts
setPackagePutReceipts:
_packageAssetSizes
_assetSize
_assetPutReceipt
_missingAssetStatusRecordID
_packagePutReceipts
_recovered
T@"CKDPRecordIdentifier",&,N,V_missingAssetStatusRecordID
TB,N,V_recovered
Tq,N,V_assetSize
T@"NSString",&,N,V_assetPutReceipt
T^q,R,N
T@"NSMutableArray",&,N,V_packagePutReceipts
hasAnonymousZoneInfoID
hasAnonymousZoneInfoData
anonymousZoneInfoID
setAnonymousZoneInfoID:
anonymousZoneInfoData
setAnonymousZoneInfoData:
_anonymousZoneInfoData
_anonymousZoneInfoID
T@"NSString",&,N,V_anonymousZoneInfoID
T@"NSData",&,N,V_anonymousZoneInfoData
timestamp
setTimestamp:
setUrl:
method
setMethod:
status
setStatus:
requestClassName
setRequestClassName:
_timestamp
_url
_method
_status
_requestClassName
T@"NSDate",&,N,V_timestamp
T@"NSURL",&,N,V_url
T@"NSString",&,N,V_method
Tq,N,V_status
T@"NSString",&,N,V_requestClassName
hasContent
content
setContent:
_content
T@"NSData",&,N,V_content
postAccountChangedNotificationWithAccountID:changeType:
postAccountChangedNotificationToClients
_accountChangeNotificationOperation:
registerObserver:forAccountChangeNotification:
unregisterObserverForAccountChangeNotification:
accountChangedToken
setAccountChangedToken:
notificationHandlers
setNotificationHandlers:
accountChangeHandlerQueue
setAccountChangeHandlerQueue:
isWarmingUp
setWarmingUp:
_warmingUp
_accountChangedToken
_notificationHandlers
_accountChangeHandlerQueue
Ti,N,V_accountChangedToken
T@"NSMapTable",&,N,V_notificationHandlers
T@"NSOperationQueue",&,N,V_accountChangeHandlerQueue
warmingUp
TB,GisWarmingUp,V_warmingUp
_handleFetchChangesRequestFinished:
notificationChangedBlock
setNotificationChangedBlock:
resultServerChangeToken
setResultServerChangeToken:
moreComing
setMoreComing:
previousServerChangeToken
setPreviousServerChangeToken:
setResultsLimit:
_moreComing
_notificationChangedBlock
_resultServerChangeToken
_previousServerChangeToken
T@"CKServerChangeToken",&,N,V_previousServerChangeToken
TQ,N,V_resultsLimit
T@"CKServerChangeToken",&,N,V_resultServerChangeToken
TB,N,V_moreComing
T@"<CKFetchNotificationChangesOperationCallbacks>",&,D,N
T@?,C,N,V_notificationChangedBlock
serverResponseIsComplete:requireProtectionSource:
certificateListServerPlist:
nearestExpirationInCertificateList:
createTrustEvalFromCertificateList:verifiedWithPolicy:
verifyInteger:withSignature:usingKey:verifyFullInteger:
verifyData:withSignature:usingKey:
initWithOperation:plistURL:verifyWithPolicy:
canVerifySignedPlistValues:withKey:
verifiedPublicKey
setVerifiedPublicKey:
requiresProtectionSource
setRequiresProtectionSource:
verifyFullIntegers
setVerifyFullIntegers:
expirationDateOverride
setExpirationDateOverride:
plistURL
certificateTrustPolicy
_requiresProtectionSource
_verifyFullIntegers
_verifiedPublicKey
_expirationDateOverride
_plistURL
_certificateTrustPolicy
T@"NSURL",R,N,V_plistURL
T^{__SecPolicy=},R,N,V_certificateTrustPolicy
T@"CKPublicKey",&,V_verifiedPublicKey
TB,N,V_requiresProtectionSource
TB,N,V_verifyFullIntegers
T@"NSDate",&,N,V_expirationDateOverride
handlePublicPushTokenDidUpdate:
registerTokenRefreshActivity
tokenRefreshChanged
_refreshApsToken:container:completionBlock:
_removeApsToken:appContainerAccountTuple:completionBlock:
refreshAllClientsNow:
_handlePushToken:forContainer:completionBlock:
unregisterTokenForAppContainerAccountTuple:
unregisterAllTokensForAccountID:completionHandler:
forceTokenRefreshForAllClients
registerTokenForAdopterContainer:completionBlock:
callbackBlocks
setCallbackBlocks:
callbackTimers
setCallbackTimers:
unitTestingPushTokens
setUnitTestingPushTokens:
_callbackBlocks
_callbackTimers
_unitTestingPushTokens
T@"NSMutableDictionary",&,N,V_callbackBlocks
T@"NSMutableDictionary",&,N,V_callbackTimers
T@"NSMutableDictionary",&,N,V_unitTestingPushTokens
hasExportedPCSData
hasShareePublicKeyData
exportedPCSData
setExportedPCSData:
shareePublicKeyData
setShareePublicKeyData:
_exportedPCSData
_shareePublicKeyData
T@"NSData",&,N,V_exportedPCSData
T@"NSData",&,N,V_shareePublicKeyData
initWithOperation:apsToken:apsEnvironmentString:bundleID:skipBundleIDCheck:
setCreated:
setHasCreated:
hasCreated
setExpires:
setHasExpires:
hasExpires
created
expires
_created
_expires
TQ,N,V_created
TQ,N,V_expires
hasWrappedInvocationKey
wrappedInvocationKey
setWrappedInvocationKey:
_wrappedInvocationKey
T@"NSData",&,N,V_wrappedInvocationKey
T@"NSArray",&,N,V_containerPrivacySettings
setLastItem:
setHasLastItem:
hasLastItem
lastItem
_lastItem
TB,N,V_lastItem
repairRecordID
setRepairRecordID:
isPackage
setIsPackage:
assetSizes
setAssetSizes:
assetPutReceipts
setAssetPutReceipts:
_isPackage
_repairRecordID
_assetSizes
_assetPutReceipts
T@"CKRecordID",&,N,V_repairRecordID
TB,N,V_isPackage
T@"NSArray",&,N,V_assetSizes
T@"NSArray",&,N,V_assetPutReceipts
_updateMissingAssetStatus
fetchOperation
setFetchOperation:
modifyOperation
setModifyOperation:
_fetchOperation
_modifyOperation
T@"CKDFetchRecordsOperation",&,N,V_fetchOperation
T@"CKDModifyRecordsOperation",&,N,V_modifyOperation
hasProtectedFullToken
hasOwnerParticipant
hasCallerParticipant
participantPermission
setParticipantPermission:
setHasParticipantPermission:
hasParticipantPermission
participantPermissionAsString:
StringAsParticipantPermission:
participantState
setParticipantState:
setHasParticipantState:
hasParticipantState
participantStateAsString:
StringAsParticipantState:
participantType
setParticipantType:
setHasParticipantType:
hasParticipantType
participantTypeAsString:
StringAsParticipantType:
hasRootRecordType
protectedFullToken
setProtectedFullToken:
ownerParticipant
setOwnerParticipant:
callerParticipant
setCallerParticipant:
rootRecordType
setRootRecordType:
_callerParticipant
_ownerParticipant
_participantPermission
_participantState
_participantType
_protectedFullToken
_rootRecordType
T@"NSData",&,N,V_protectedFullToken
T@"CKDPParticipant",&,N,V_ownerParticipant
T@"CKDPParticipant",&,N,V_callerParticipant
Ti,N,V_participantPermission
Ti,N,V_participantState
Ti,N,V_participantType
T@"CKDPRecordType",&,N,V_rootRecordType
attestationsType
clearAttestations
addAttestations:
attestationsCount
attestationsAtIndex:
attestations
setAttestations:
_attestations
T@"NSMutableArray",&,N,V_attestations
initWithClientConnection:deviceContext:
getLogicalDeviceScopedClientProxySynchronous:errorHandler:clientProxyHandler:
_getLogicalDeviceScopedClientProxyCreatorSynchronous:completionHandler:
hasBeenThrottled
setHasBeenThrottled:
setPid:
logicalDeviceScopedClientProxyCreator
setLogicalDeviceScopedClientProxyCreator:
_hasBeenThrottled
_logicalDeviceScopedClientProxyCreator
Ti,N,V_pid
T@"<CKXPCLogicalDeviceScopedClient>",&,N,V_logicalDeviceScopedClientProxyCreator
TB,V_hasBeenThrottled
hasAccountServiceSignedToken
accountServiceSignedToken
setAccountServiceSignedToken:
_accountServiceSignedToken
T@"NSString",&,N,V_accountServiceSignedToken
hasOperationId
hasOperationGroupId
operationId
setOperationId:
operationGroupId
setOperationGroupId:
_operationGroupId
_operationId
T@"NSString",&,N,V_operationId
T@"NSString",&,N,V_operationGroupId
Tq,N,V_operationGroupQuantity
transcodeServerHostname
setTranscodeServerHostname:
_transcodeServerHostname
T@"NSString",&,N,V_transcodeServerHostname
Tq,N,V_type
createTranscodeServerTrustPolicy
determineTranscodeServerPublicKeyURL
fetchCachedTranscodePublicKey
fetchRemoteTranscodePublicKey
transcodeServerPublicKey
setTranscodeServerPublicKey:
transcodeServerPublicKeyURL
setTranscodeServerPublicKeyURL:
_transcodeServerPublicKey
_transcodeServerPublicKeyURL
T@"NSString",R,N,V_transcodeServerHostname
T@"NSURL",&,N,V_transcodeServerPublicKeyURL
T@"CKPublicKey",&,V_transcodeServerPublicKey
_validateInvocation
initWithProtocol:invocation:isCompletionCallback:
protocol
setProtocol:
invocation
setInvocation:
isCompletionCallback
setIsCompletionCallback:
_isCompletionCallback
_protocol
_invocation
T@"Protocol",&,N,V_protocol
T@"NSInvocation",&,N,V_invocation
TB,N,V_isCompletionCallback
hasMetadata
hasData
setData:
setEncryptedData:
hasEncryptedAsset
setEncryptedAsset:
payload
setPayload:
setHasPayload:
hasPayload
payloadAsString:
StringAsPayload:
clearOneofValuesForPayload
metadata
setMetadata:
data
encryptedData
encryptedAsset
_data
_encryptedAsset
_encryptedData
_metadata
_payload
T@"CKDPMergeableDeltaMetadata",&,N,V_metadata
T@"NSData",&,N,V_data
T@"NSData",&,N,V_encryptedData
T@"CKDPAsset",&,N,V_encryptedAsset
Ti,N,V_payload
assetHandleExistsInDatabase:
assetHandleWithUUID:
saveOrInsert:
saveStatus:
saveChunkCount:
saveLastUsedTime:
oldestLastUsedTime
saveStatusAndChunkCount:
selectProperties:inAssetHandlesWithStatus:error:
interruptedAssetWithSignature:error:
initWithLogicalTableName:
finishInitializing:
_lockedSetVolumeIndex:forVolumeUUID:
volumeIndexForVolumeUUID:
volumeUUIDWithVolumeIndex:
unmountedAssetVolumes
_lock
_volumeUUIDByVolumeIndex
_volumeIndexByVolumeUUID
rebootShouldClearData
assetHandleTable
assetVolumeTable
_assetHandleTable
_assetVolumeTable
T@"CKDAssetHandleTable",R,N,V_assetHandleTable
T@"CKDAssetVolumeTable",R,N,V_assetVolumeTable
initWithForced:evictNow:
forced
setForced:
evictNow
setEvictNow:
clearRegisteredItems
setClearRegisteredItems:
itemIDsToUnregister
setItemIDsToUnregister:
assetHandleItemIDsToDelete
setAssetHandleItemIDsToDelete:
_forced
_evictNow
_clearRegisteredItems
_itemIDsToUnregister
_assetHandleItemIDsToDelete
TB,V_forced
TB,V_evictNow
TB,V_clearRegisteredItems
T@"NSMutableOrderedSet",&,N,V_itemIDsToUnregister
T@"NSMutableOrderedSet",&,N,V_assetHandleItemIDsToDelete
_sharedCachesQueue
_sharedCachesByDirectory
assetCacheWithApplicationBundleID:directoryContext:database:didInit:error:
openFdForDownloadPath:error:
_initWithApplicationBundleID:directoryContext:database:error:
mmcsEngineContext
fileDownloadPath
_deleteAssetHandlesAndUnregisterItemsForUnmountedAssetVolumes
deviceIDForVolumeIndex:
volumeIndexForDeviceID:
clearForced:
checkAssetHandlesForRegisteredMMCSItems:
unregisterItemsAndDeleteUnregisteredAssetHandlesWithIDs:deleteUnregisteredAssetHandlesWithIDs:
unregisterItemIDsAndDeleteAssetHandlesWithEvictionInfo:
_saveData:error:
_getAssetHandlesForCachedButNotRegisteredMMCSItems:error:
updateAssetHandlesForRegisteredMMCSItems:error:
updateAssetHandlesForChunkedMMCSItems:error:
updateAssetHandlesForGetMMCSItems:error:
updateAssetHandlesForPutMMCSItems:error:
trackCachedButNotRegisteredMMCSItems:error:
trackDownloadedData:signature:error:
enumerateAssetHandlesSegregatedByVolume:block:
existingEntriesForRegisterOrPutHandles:volumeIndex:
startTrackingRegisterOrPutAssetHandles:operationType:error:
startTrackingGetAssetHandles:operationType:error:
deferredStopTrackingAssetHandlesByItemIDs:
unregisterDeferredItemIDs:andDeleteAssetHandles:
updateDeferredLastAccessTimeForUUIDs
stopTrackingAssetHandlesByItemIDs:
findAssetHandleForItemID:error:
deferredUpdateLastTimeUsedForUUID:
parseCachedPath:assetHandleUUIDString:assetSignatureString:
parseCachedPath:assetHandleUUID:assetSignature:
assetHandleWithCachedPath:
_scheduleEvictionForDownloadedFiles
_evictDownloadedFilesWithEvictionInfo:
_evictWithEvictionInfo:
_evictAllFilesForced:
evictAllFilesForced:
predictedEvictedSizeForAllFilesForced:
_expireAssetHandlesWithExpiryDate:
expireAssetHandlesIfNecessary
_resetAssetInflight
setupPersistentStateAtStartup
isNewEmptyCache
assetCacheTableGroup
isEvictionScheduled
setIsEvictionScheduled:
setOldestLastUsedTime:
deferredDeletedAssetHandles
setDeferredDeletedAssetHandles:
deferredLastUsedTimeByTrackingUUID
setDeferredLastUsedTimeByTrackingUUID:
_isNewEmptyCache
_isEvictionScheduled
_assetCacheTableGroup
_applicationBundleID
_oldestLastUsedTime
_deferredDeletedAssetHandles
_deferredLastUsedTimeByTrackingUUID
T@"CKSAssetCacheTableGroup",R,N,V_assetCacheTableGroup
T@"NSString",R,N,V_applicationBundleID
TB,V_isEvictionScheduled
TB,V_didDrop
T@"NSDate",&,N,V_oldestLastUsedTime
T@"NSMutableSet",&,N,V_deferredDeletedAssetHandles
T@"NSMutableDictionary",&,N,V_deferredLastUsedTimeByTrackingUUID
T@"CKDMMCS",W,N,V_MMCS
TB,R,N,V_isNewEmptyCache
initWithAggregator:
performCallback
fetchOrder
setFetchOrder:
recordReadySource
setRecordReadySource:
ignoreErrors
setIgnoreErrors:
_ignoreErrors
_fetchOrder
_recordReadySource
TQ,N,V_fetchOrder
Td,R,N,V_startDate
T@"NSObject<OS_dispatch_source>",&,N,V_recordReadySource
TB,N,V_ignoreErrors
fetchAssetContents
setFetchAssetContents:
fetchMergeableValues
setFetchMergeableValues:
preserveOrdering
setPreserveOrdering:
desiredKeys
setDesiredKeys:
assetTransferOptionsByRecordTypeAndKey
setAssetTransferOptionsByRecordTypeAndKey:
forceDecryptionAttempt
setForceDecryptionAttempt:
_fetchAssetContents
_fetchMergeableValues
_preserveOrdering
_forceDecryptionAttempt
_desiredKeys
_assetTransferOptionsByRecordTypeAndKey
TB,N,V_fetchAssetContents
TB,N,V_fetchMergeableValues
TB,N,V_preserveOrdering
T@"NSSet",&,N,V_desiredKeys
T@"NSDictionary",&,N,V_assetTransferOptionsByRecordTypeAndKey
TB,N,V_forceDecryptionAttempt
_performCallbackForFetchInfoLocked:
_flushFetchedRecordsToConsumerOrderedLocked
_flushFetchedRecordsToConsumerNoOrderingLocked
_flushFetchedRecordsToConsumerLocked
_lockedSendFetchRequest
_recordFetchesAvailable
_addRecordFetchInfos:
_fetchRecord:recordReadyHandle:withRecordCompletion:
fetchRecords:withPerRecordCompletion:
finishIfAppropriate
_finishRecordFetchAggregator
useRecordCache
setUseRecordCache:
fetchAggregatorCompletionBlock
setFetchAggregatorCompletionBlock:
fetchSource
setFetchSource:
fetchGroup
setFetchGroup:
fetchInfosByOrder
setFetchInfosByOrder:
curFetchOrder
setCurFetchOrder:
highestReturnedOrder
setHighestReturnedOrder:
currentFetchOp
setCurrentFetchOp:
started
setStarted:
isMarkedToFinishByParent
setMarkedToFinishByParent:
_useRecordCache
_started
_markedToFinishByParent
_fetchAggregatorCompletionBlock
_fetchSource
_fetchGroup
_fetchInfosByOrder
_curFetchOrder
_highestReturnedOrder
_currentFetchOp
T@"NSObject<OS_dispatch_source>",&,N,V_fetchSource
T@"NSObject<OS_dispatch_group>",&,N,V_fetchGroup
T@"NSMutableDictionary",&,N,V_fetchInfosByOrder
TQ,V_curFetchOrder
TQ,V_highestReturnedOrder
T@"CKDFetchRecordsOperation",W,N,V_currentFetchOp
TB,V_started
markedToFinishByParent
TB,GisMarkedToFinishByParent,V_markedToFinishByParent
TB,N,V_useRecordCache
T@?,C,N,V_fetchAggregatorCompletionBlock
quotaFetchedBlock
setQuotaFetchedBlock:
_quotaFetchedBlock
T@?,C,N,V_quotaFetchedBlock
systemAvailabilityChanged:
CKDescribePropertiesUsing:
CKShortDescriptionRedact:
noteClientProcessScopedMetadata:
getContainerScopedDaemonProxyCreatorForSetupInfo:containerScopedClientProxy:completionHandler:
getLogicalDeviceScopedDaemonProxyCreatorForTestDeviceReference:completionHandler:
getProcessScopedDaemonProxyCreatorWithCompletionHandler:
getTestAdminDaemonProxyCreatorWithCompletionHandler:
initWithXPCConnection:
redactedDescription
connection:handleInvocation:isReply:
keepOpen
allowToClose
containerFromSetupInfo:containerScopedClientProxy:outError:
canRunGivenAvailabilityState:
logicalDeviceScopedClientProxyForDeviceContext:
allContainers
getProcessScopedClientProxyCreatorSynchronous:completionHandler:
getLogicalDeviceScopedClientProxyCreatorForTestDeviceReference:synchronous:completionHandler:
xpcConnection
setXpcConnection:
setProcessScopedClientProxy:
sharedContainers
setSharedContainers:
keepAlive
setKeepAlive:
activityCoalescer
logicalDeviceScopedClientProxiesByDeviceReference
setLogicalDeviceScopedClientProxiesByDeviceReference:
allDeviceContexts
setAllDeviceContexts:
allContainerPointers
setAllContainerPointers:
systemAvailableQueue
setSystemAvailableQueue:
_xpcConnection
_sharedContainers
_keepAlive
_activityCoalescer
_logicalDeviceScopedClientProxiesByDeviceReference
_allDeviceContexts
_allContainerPointers
_systemAvailableQueue
T@"NSXPCConnection",&,N,V_xpcConnection
TQ,N,V_keepAlive
T@"CKCoalescer",R,N,V_activityCoalescer
T@"CKDProcessScopedClientProxy",&,N,V_processScopedClientProxy
T@"NSMutableDictionary",&,N,V_logicalDeviceScopedClientProxiesByDeviceReference
T@"NSMutableSet",&,N,V_allDeviceContexts
T@"NSHashTable",&,N,V_sharedContainers
T@"NSPointerArray",&,N,V_allContainerPointers
T@"NSOperationQueue",&,N,V_systemAvailableQueue
webAuthToken
setWebAuthToken:
APIToken
setAPIToken:
_webAuthToken
_APIToken
T@"NSString",C,N,V_webAuthToken
T@"NSString",C,N,V_APIToken
T@"<CKFetchWebAuthTokenOperationCallbacks>",&,D,N
initWithOperation:encryptedAnonymousSharesToRemove:
encryptedAnonymousShareHashToRemoveByRequestID
setEncryptedAnonymousShareHashToRemoveByRequestID:
_encryptedAnonymousShareHashToRemoveByRequestID
T@"NSMutableDictionary",&,N,V_encryptedAnonymousShareHashToRemoveByRequestID
hasClientError
hasServerError
hasExtensionError
hasAuxiliaryError
setRetryAfterSeconds:
setHasRetryAfterSeconds:
hasRetryAfterSeconds
hasErrorDescription
hasErrorKey
hasErrorInternal
clientError
setClientError:
serverError
setServerError:
extensionError
setExtensionError:
auxiliaryError
setAuxiliaryError:
retryAfterSeconds
errorDescription
setErrorDescription:
errorKey
setErrorKey:
errorInternal
setErrorInternal:
_auxiliaryError
_clientError
_errorDescription
_errorInternal
_errorKey
_extensionError
_retryAfterSeconds
_serverError
T@"CKDPResponseOperationResultErrorClient",&,N,V_clientError
T@"CKDPResponseOperationResultErrorServer",&,N,V_serverError
T@"CKDPResponseOperationResultErrorExtension",&,N,V_extensionError
T@"CKDPResponseOperationResultErrorAuxiliaryError",&,N,V_auxiliaryError
Ti,N,V_retryAfterSeconds
T@"NSString",&,N,V_errorDescription
T@"NSString",&,N,V_errorKey
T@"NSString",&,N,V_errorInternal
_appID
sharedContextsQueue
sharedContextsByPath
hasCachedCKDMMCSEngineContextForPath:
setupMMCSEngineWithApplicationBundleID:path:wasCached:error:
tearDownMMCSEngineWithContext:
initWithApplicationBundleID:path:
incRefCount
decRefCount
_setupMMCSEngineWithError:
_setupMMCSEngineWithRetryCount:error:
_tearDownMMCSEngine
cancelRequestWithContext:
MMCSSerializeSyncRecursive:
MMCSSerializeAsyncRecursive:
MMCSRunSerialized:
assertMMCSSerialized
nextAvailableItemID
stopTrackingItemID:
refCount
setRefCount:
MMCSEngine
setMMCSEngine:
setApplicationBundleID:
setPath:
setMaxChunkCountForSection:
inMemoryItemsIDs
setInMemoryItemsIDs:
_mmcsQueue
_serializedThread
_maxChunkCountForSection
_refCount
_MMCSEngine
_inMemoryItemsIDs
Tq,N,V_refCount
Tq,N,V_state
T^{_mmcs_engine=},N,V_MMCSEngine
T@"NSString",&,N,V_applicationBundleID
T@"NSString",&,N,V_path
TI,N,V_maxChunkCountForSection
T@"NSMutableIndexSet",&,N,V_inMemoryItemsIDs
itemGroupContext:willGetMMCSItemReaderForItemID:
itemGroupContext:didGetItemReader:itemID:
itemGroupContext:willOpenItemReaderWriter:error:
itemGroupContext:didOpenItemReaderWriter:result:error:
itemGroupContext:willCloseItemReaderWriter:error:
itemGroupContext:didCloseItemReaderWriter:result:error:
itemGroupContext:willGetFileMetadataItemReaderWriter:error:
itemGroupContext:didGetFileMetadataItemReaderWriter:fileMetadata:error:
itemGroupContext:willReadFromItemReaderWriter:offset:bytes:length:bytesRead:error:
itemGroupContext:didReadFromItemReaderWriter:offset:bytes:length:bytesRead:error:
willOpenItemReaderWriter:error:
didOpenItemReaderWriter:result:error:
willCloseItemReaderWriter:error:
didCloseItemReaderWriter:result:error:
willGetFileMetadataItemReaderWriter:error:
didGetFileMetadataItemReaderWriter:fileMetadata:error:
willReadFromItemReaderWriter:offset:bytes:length:bytesRead:error:
didReadFromItemReaderWriter:offset:bytes:length:bytesRead:error:
initWithMMCS:itemGroup:operation:progress:command:start:groupCompletion:
shouldFetchAssetContentInMemory
shouldFetchAssetContentUsingAssetDownloadStagingManager
shouldFetchAssetContentWithReaderWriter
_startTrackingMMCSItems:
_stopTrackingMMCSItems:
findTrackedMMCSItemByItemID:
_setupRegisterMMCSItemsWithError:
_setupPutMMCSItemsWithError:
_setupPutContentMetadataMMCSItemsWithError:
_setupGetMMCSItemsWithError:
_setupMMCSItemsWithError:
_cleanupMMCSRegisterItems
_cleanupMMCSItems
didCompleteRequestWithError:
updateProgressForItemID:state:progress:results:
updateProgressForPackageSectionState:progress:results:
updateProgressForItemID:state:progress:error:
handleCommand:forItem:
didGetItemID:signature:path:error:results:
didPutItemID:signature:results:
didPutSectionWithSignature:results:
didGetMetricsForRequest:
conformingOperation
getMMCSItemReaderForItemID:error:
getCKDMMCSItemReaderByPathForMMCSItem:error:
hasConformingOperation
setHasConformingOperation:
itemGroup
setItemGroup:
progressBlock
setProgressBlock:
commandBlock
setCommandBlock:
startBlock
setStartBlock:
MMCSPackageSectionItem
setMMCSPackageSectionItem:
MMCSItemsByItemID
setMMCSItemsByItemID:
_hasConformingOperation
_itemGroup
_progressBlock
_commandBlock
_startBlock
_MMCSPackageSectionItem
_MMCSItemsByItemID
T@"NSNumber",&,N,V_hasConformingOperation
T@"CKDMMCSItemGroup",&,N,V_itemGroup
T@?,C,N,V_progressBlock
T@?,C,N,V_commandBlock
T@?,C,N,V_startBlock
T@"CKDMMCSItem",&,N,V_MMCSPackageSectionItem
T@"NSMapTable",&,N,V_MMCSItemsByItemID
T@,&,N,V_operationInfo
setIndex:
setHasIndex:
hasIndex
setIsReversed:
setHasIsReversed:
hasIsReversed
index
isReversed
_index
_isReversed
Ti,N,V_index
TB,N,V_isReversed
_preflightRecords
_serialize
serializeCompletionBlock
setSerializeCompletionBlock:
_serializeCompletionBlock
T@"NSArray",&,N,V_recordsToSave
T@"NSArray",&,N,V_recordIDsToDelete
T@"NSData",&,V_serializedModifications
T@"<CKSerializeRecordModificationsOperationCallbacks>",&,D,N
T@?,C,N,V_serializeCompletionBlock
applicationBundleIdentifier
applicationBundleIdentifierOverrideForContainerAccess
applicationBundleIdentifierOverrideForNetworkAttribution
applicationBundleIdentifierOverrideForPushTopicGeneration
applicationBundleIdentifierOverrideForTCC
sqliteRepresentation
initWithSqliteRepresentation:
initWithApplicationBundleIdentifier:
initWithApplicationBundleIdentifier:applicationBundleIdentifierOverrideForContainerAccess:applicationBundleIdentifierOverrideForNetworkAttribution:applicationBundleIdentifierOverrideForPushTopicGeneration:applicationBundleIdentifierOverrideForTCC:
setApplicationBundleIdentifier:
setApplicationBundleIdentifierOverrideForContainerAccess:
setApplicationBundleIdentifierOverrideForNetworkAttribution:
setApplicationBundleIdentifierOverrideForPushTopicGeneration:
setApplicationBundleIdentifierOverrideForTCC:
_applicationBundleIdentifier
_applicationBundleIdentifierOverrideForContainerAccess
_applicationBundleIdentifierOverrideForNetworkAttribution
_applicationBundleIdentifierOverrideForPushTopicGeneration
_applicationBundleIdentifierOverrideForTCC
T@"NSString",C,N,V_applicationBundleIdentifier
T@"NSString",C,N,V_applicationBundleIdentifierOverrideForContainerAccess
T@"NSString",C,N,V_applicationBundleIdentifierOverrideForNetworkAttribution
T@"NSString",C,N,V_applicationBundleIdentifierOverrideForPushTopicGeneration
T@"NSString",C,N,V_applicationBundleIdentifierOverrideForTCC
ck_bindInStatement:atIndex:
hasShareIdentifier
setChangeType:
setHasChangeType:
hasChangeType
changeTypeAsString:
StringAsChangeType:
shareIdentifier
setShareIdentifier:
_shareIdentifier
T@"CKDPShareIdentifier",&,N,V_shareIdentifier
Ti,N,V_changeType
potentialMatchType
invitedKeyToRemoveType
publicAccess
setPublicAccess:
setHasPublicAccess:
hasPublicAccess
publicAccessAsString:
StringAsPublicAccess:
hasInvitedPcs
clearParticipants
addParticipant:
participantsCount
participantAtIndex:
hasShortTokenRoutingKey
clearPotentialMatchs
addPotentialMatch:
potentialMatchsCount
potentialMatchAtIndex:
clearInvitedKeyToRemoves
addInvitedKeyToRemove:
invitedKeyToRemovesCount
invitedKeyToRemoveAtIndex:
publisherModel
setPublisherModel:
setHasPublisherModel:
hasPublisherModel
anonymousPublicAccess
setAnonymousPublicAccess:
setHasAnonymousPublicAccess:
hasAnonymousPublicAccess
hasDisplayedHostname
publisherModelType
setPublisherModelType:
setHasPublisherModelType:
hasPublisherModelType
publisherModelTypeAsString:
StringAsPublisherModelType:
participantSelfRemovalBehavior
setParticipantSelfRemovalBehavior:
setHasParticipantSelfRemovalBehavior:
hasParticipantSelfRemovalBehavior
participantSelfRemovalBehaviorAsString:
StringAsParticipantSelfRemovalBehavior:
hasOrigin
invitedPcs
setInvitedPcs:
participants
setParticipants:
shortTokenRoutingKey
setShortTokenRoutingKey:
potentialMatchs
setPotentialMatchs:
invitedKeyToRemoves
setInvitedKeyToRemoves:
setDisplayedHostname:
origin
setOrigin:
_invitedKeyToRemoves
_invitedPcs
_origin
_participantSelfRemovalBehavior
_participants
_potentialMatchs
_publicAccess
_publisherModelType
_shortTokenRoutingKey
_anonymousPublicAccess
_publisherModel
Ti,N,V_publicAccess
T@"CKDPProtectionInfo",&,N,V_invitedPcs
T@"NSMutableArray",&,N,V_participants
T@"NSString",&,N,V_shortTokenRoutingKey
T@"NSMutableArray",&,N,V_potentialMatchs
T@"NSMutableArray",&,N,V_invitedKeyToRemoves
TB,N,V_publisherModel
TB,N,V_anonymousPublicAccess
T@"NSString",&,N,V_displayedHostname
Ti,N,V_publisherModelType
Ti,N,V_participantSelfRemovalBehavior
T@"NSString",&,N,V_origin
setContainerID:
applicationBundleIDs
setApplicationBundleIDs:
discoverable
setDiscoverable:
_applicationBundleIDs
_discoverable
T@"CKContainerID",C,N,V_containerID
T@"NSSet",C,N,V_applicationBundleIDs
Tq,N,V_discoverable
appPermissionGroupsFromContainerPrivacySettings:
T@"NSArray",C,N,V_containerPrivacySettings
aa_updateTokensWithProvisioningResponse:
backingExplicitCredentialsAccount
setBackingExplicitCredentialsAccount:
_backingExplicitCredentialsAccount
T@"CKDBackingExplicitCredentialsAccount",W,N,V_backingExplicitCredentialsAccount
_setUpExplicitCredentialsAccountShenanigans
explicitCredentialsAccountWithEmail:password:propertyOverrides:overridesByDataclass:
_checkAndLogIfAccountError
_initExplicitCredentialsAccountWithEmail:password:propertyOverrides:overridesByDataclass:
_initExplicitCredentialsAccountWithEmail:password:
renewAuthTokenWithOptions:completionHandler:
updateAccountPropertiesAndSaveAccount:
_setOverridesOnVettingContext:
ckAccount
cloudKitAuthTokenWithError:
iCloudAuthTokenWithError:
password
fakeCKAccount
setFakeCKAccount:
_fakeCKAccount
T@"ACAccount",&,N,V_fakeCKAccount
setDeleteType:
setHasDeleteType:
hasDeleteType
deleteTypeAsString:
StringAsDeleteType:
setIsAnonymous:
setHasIsAnonymous:
hasIsAnonymous
hasAnonymousZoneInfo
isAnonymous
anonymousZoneInfo
setAnonymousZoneInfo:
_anonymousZoneInfo
_isAnonymous
Ti,N,V_deleteType
TB,N,V_isAnonymous
T@"CKDPAnonymousZoneInfo",&,N,V_anonymousZoneInfo
hasLanguageCode
hasRegionCode
setLanguageCode:
setRegionCode:
_languageCode
_regionCode
T@"NSString",&,N,V_languageCode
T@"NSString",&,N,V_regionCode
handleLongLivedOperationDidPersist
handleSystemDidImposeInfo:
handleRequestDidComplete:
openFileWithOpenInfo:reply:
handleFinishWithAssetDownloadStagingInfo:reply:
handleOperationDidCompleteWithMetrics:error:
handleDiscretionaryOperationShouldStart:nonDiscretionary:error:
handleDiscretionaryOperationShouldSuspend
handleDaemonOperationWillStartWithClassName:isTopLevelDaemonOperation:replyBlock:
initWithClientOperationCallbackProxy:callbackProtocol:
callbackProtocol
setCallbackProtocol:
_callbackProtocol
T@"Protocol",&,N,V_callbackProtocol
initWithOperationID:callbackProtocol:completionSelector:operationInfoCache:
setOperationID:
completionSelector
setCompletionSelector:
operationInfoCache
setOperationInfoCache:
_operationID
_completionSelector
_operationInfoCache
T@"NSString",C,N,V_operationID
T:,N,V_completionSelector
T@"CKDOperationInfoCache",&,N,V_operationInfoCache
URLFromEntitlementString:
entitlementURLForServiceName:container:
encryptData:
_prepareForProtectedCloudCompute
_prepareForTrustedTargetEncryption
_checkShouldSendRecordPCSKeys
_getSerializedRequest
_invokeFunction
_invokeLocalFunction
_getDeserializedRecords
replaceLocalSerializationsBlobs
setReplaceLocalSerializationsBlobs:
initialResponseReceivedCallback
setInitialResponseReceivedCallback:
replaceWireSerializations
setReplaceWireSerializations:
recordFetchProgressBlock
setRecordFetchProgressBlock:
recordFetchCommandBlock
setRecordFetchCommandBlock:
pccKey
setPccKey:
pccWrappedKeys
setPccWrappedKeys:
requestLocalSerializations
setRequestLocalSerializations:
requestLocalEnvelopes
setRequestLocalEnvelopes:
dataProtectionType
setDataProtectionType:
permittedRemoteMeasurement
setPermittedRemoteMeasurement:
shouldSendRecordPCSKeys
setShouldSendRecordPCSKeys:
trustedTargetDomain
setTrustedTargetDomain:
trustedTargetOID
setTrustedTargetOID:
trustedTargetKey
setTrustedTargetKey:
trustedTargetWrappedKey
setTrustedTargetWrappedKey:
setShouldFetchAssetContentInMemory:
requestRecords
setRequestRecords:
serializedArguments
setSerializedArguments:
serializedResponse
setSerializedResponse:
responseRecords
setResponseRecords:
_shouldSendRecordPCSKeys
_shouldFetchAssetContentInMemory
_replaceLocalSerializationsBlobs
_initialResponseReceivedCallback
_replaceWireSerializations
_recordFetchProgressBlock
_recordFetchCommandBlock
_pccKey
_pccWrappedKeys
_requestLocalSerializations
_requestLocalEnvelopes
_dataProtectionType
_permittedRemoteMeasurement
_trustedTargetDomain
_trustedTargetOID
_trustedTargetKey
_trustedTargetWrappedKey
_requestRecords
_serializedArguments
_serializedResponse
_responseRecords
T@"NSString",R,C,N,V_serviceName
T@"NSString",R,C,N,V_functionName
T@"PCCKey",&,N,V_pccKey
T@"NSArray",&,N,V_pccWrappedKeys
T@"NSArray",C,N,V_requestLocalSerializations
T@"NSArray",C,N,V_requestLocalEnvelopes
TQ,N,V_dataProtectionType
T@"NSData",C,N,V_permittedRemoteMeasurement
TB,N,V_shouldSendRecordPCSKeys
T@"NSString",C,N,V_trustedTargetDomain
T@"NSString",C,N,V_trustedTargetOID
T@"CKDTrustedTargetKey",&,N,V_trustedTargetKey
T@"CKDTrustedTargetWrappedKey",&,N,V_trustedTargetWrappedKey
TB,N,V_shouldFetchAssetContentInMemory
T@"NSArray",C,N,V_requestRecords
T@"NSData",C,N,V_serializedArguments
T@"NSData",C,N,V_serializedResponse
T@"NSArray",C,N,V_responseRecords
T@"<CKCodeOperationCallbacks>",&,D,N
T@?,C,N,V_replaceLocalSerializationsBlobs
T@?,C,N,V_initialResponseReceivedCallback
T@?,C,N,V_replaceWireSerializations
T@?,C,N,V_recordFetchProgressBlock
T@?,C,N,V_recordFetchCommandBlock
hasDelta
delta
setDelta:
_delta
T@"CKDPMergeableDelta",&,N,V_delta
recordTypesType
evaluationType
setEvaluationType:
setHasEvaluationType:
hasEvaluationType
evaluationTypeAsString:
StringAsEvaluationType:
setHasOwner:
ownerAsString:
StringAsOwner:
mutationTriggersCount
mutationTriggers
clearMutationTriggers
addMutationTriggers:
mutationTriggersAtIndex:
setMutationTriggers:count:
mutationTriggersAsString:
StringAsMutationTriggers:
hasNotification
clearRecordTypes
addRecordTypes:
recordTypesCount
recordTypesAtIndex:
setFireOnce:
setHasFireOnce:
hasFireOnce
notification
setNotification:
recordTypes
setRecordTypes:
fireOnce
_mutationTriggers
_evaluationType
_notification
_recordTypes
_fireOnce
Ti,N,V_evaluationType
Ti,N,V_owner
T^i,R,N
T@"CKDPSubscriptionNotification",&,N,V_notification
T@"NSMutableArray",&,N,V_recordTypes
TB,N,V_fireOnce
initWithItems:
allItemGroups
itemsByGroupTuple
setItemsByGroupTuple:
_itemsByGroupTuple
T@"NSMutableDictionary",&,N,V_itemsByGroupTuple
T@"NSError",R,N
hasInsertIntoList
hasDeleteListRange
hasReplaceListRange
insertIntoList
setInsertIntoList:
deleteListRange
setDeleteListRange:
replaceListRange
setReplaceListRange:
_deleteListRange
_insertIntoList
_replaceListRange
T@"CKDPFieldActionInsertIntoList",&,N,V_insertIntoList
T@"CKDPFieldActionDeleteListRange",&,N,V_deleteListRange
T@"CKDPFieldActionReplaceListRange",&,N,V_replaceListRange
zoneSummaryType
anonymousZoneInfoType
clearZoneSummarys
addZoneSummary:
zoneSummarysCount
zoneSummaryAtIndex:
clearAnonymousZoneInfos
addAnonymousZoneInfo:
anonymousZoneInfosCount
anonymousZoneInfoAtIndex:
zoneSummarys
setZoneSummarys:
anonymousZoneInfos
setAnonymousZoneInfos:
_anonymousZoneInfos
_zoneSummarys
T@"NSMutableArray",&,N,V_zoneSummarys
T@"NSMutableArray",&,N,V_anonymousZoneInfos
changedRecordType
changedShareType
changedDeltasType
syncObligationsType
clearChangedRecords
addChangedRecord:
changedRecordsCount
changedRecordAtIndex:
setHasStatus:
hasStatus
statusAsString:
StringAsStatus:
clearChangedShares
addChangedShare:
changedSharesCount
changedShareAtIndex:
setPendingArchivedRecords:
setHasPendingArchivedRecords:
hasPendingArchivedRecords
clearChangedDeltas
addChangedDeltas:
changedDeltasCount
changedDeltasAtIndex:
clearSyncObligations
addSyncObligations:
syncObligationsCount
syncObligationsAtIndex:
changedRecords
setChangedRecords:
changedShares
setChangedShares:
pendingArchivedRecords
changedDeltas
setChangedDeltas:
syncObligations
setSyncObligations:
_changedDeltas
_changedRecords
_changedShares
_syncObligations
_pendingArchivedRecords
T@"NSMutableArray",&,N,V_changedRecords
Ti,N,V_status
T@"NSMutableArray",&,N,V_changedShares
TB,N,V_pendingArchivedRecords
T@"NSMutableArray",&,N,V_changedDeltas
T@"NSMutableArray",&,N,V_syncObligations
readContentsOfFile:intoPackage:error:
packageInClientWithBasePath:contentsOfFile:error:
writePackage:toFile:error:
T@"CKCDPErrorUserInfoValue",&,N,V_value
initWithOperation:targetOperationQueue:
realOperation
targetOperationQueue
_realOperation
_targetOperationQueue
T@"CKDOperation",R,N,V_realOperation
T@"NSOperationQueue",R,N,V_targetOperationQueue
T@"CKDContainer",R,W,N
pcsDiagnosticInfo
_handleRecordZoneFetch:zoneID:responseCode:
identityStatus
setIdentityStatus:
invalidPCSByZoneID
setInvalidPCSByZoneID:
validPCSByZoneID
setValidPCSByZoneID:
setPcsDiagnosticInfo:
_identityStatus
_invalidPCSByZoneID
_validPCSByZoneID
_pcsDiagnosticInfo
T@"NSString",&,N,V_identityStatus
T@"NSDictionary",&,N,V_invalidPCSByZoneID
T@"NSDictionary",&,N,V_validPCSByZoneID
T@"CKPCSDiagnosticInformation",&,N,V_pcsDiagnosticInfo
hasLogType:
hasOnlyLogType:
_initFilterDict
matchesEvent:
logTypes
setLogTypes:
simulatorMessagesOnly
setSimulatorMessagesOnly:
categoriesBySubsystem
setCategoriesBySubsystem:
_simulatorMessagesOnly
_logTypes
_categoriesBySubsystem
TQ,N,V_logTypes
T@"NSDictionary",&,N,V_categoriesBySubsystem
TB,N,V_simulatorMessagesOnly
uploadsType
clearUploads
addUploads:
uploadsCount
uploadsAtIndex:
hasAuthPutRequest
authPutType
setAuthPutType:
setHasAuthPutType:
hasAuthPutType
authPutTypeAsString:
StringAsAuthPutType:
uploads
setUploads:
_authPutType
_uploads
T@"NSMutableArray",&,N,V_uploads
Ti,N,V_authPutType
_uniqueStringForContainer:
_watchForSwitchPrefFileChanges
_fetchGlobalConfigForOperation:completionHandler:
_fetchContainerSpecificInfoForOperation:requireUserIDs:completionHandler:
configurationForOperation:completionHandler:
containerServerInfoForOperation:requireUserIDs:completionHandler:
_reallyDropAllConfigurations
wipeAllConfigurations
_writeOutiCloudAppSiteAssociationData:
setGlobalConfiguration:
expireGlobalConfiguration
expireConfigurationForContainer:
lastKnownServerConfiguration
switchNotifSource
setSwitchNotifSource:
configurationQueue
setConfigurationQueue:
notificationQueue
setNotificationQueue:
globalConfiguration
globalConfigurationOps
setGlobalConfigurationOps:
containerSpecificInfoQueue
setContainerSpecificInfoQueue:
containerSpecificInfos
setContainerSpecificInfos:
containerSpecificInfoOperations
setContainerSpecificInfoOperations:
propertyQueue
setPropertyQueue:
iCloudEnvNotifToken
setICloudEnvNotifToken:
shouldDropAllConfigurations
setShouldDropAllConfigurations:
_shouldDropAllConfigurations
_iCloudEnvNotifToken
_switchNotifSource
_configurationQueue
_notificationQueue
_globalConfiguration
_globalConfigurationOps
_containerSpecificInfoQueue
_containerSpecificInfos
_containerSpecificInfoOperations
_propertyQueue
T@"NSObject<OS_dispatch_source>",&,N,V_switchNotifSource
T@"NSOperationQueue",&,N,V_configurationQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_notificationQueue
T@"CKDServerConfiguration",&,N,V_globalConfiguration
T@"NSMutableSet",&,N,V_globalConfigurationOps
T@"NSOperationQueue",&,N,V_containerSpecificInfoQueue
T@"NSMutableDictionary",&,N,V_containerSpecificInfos
T@"NSMutableDictionary",&,N,V_containerSpecificInfoOperations
T@"NSObject<OS_dispatch_queue>",&,N,V_propertyQueue
Ti,N,V_iCloudEnvNotifToken
TB,N,V_shouldDropAllConfigurations
queryResultsType
clearQueryResults
addQueryResults:
queryResultsCount
queryResultsAtIndex:
queryResults
setQueryResults:
_queryResults
T@"NSMutableArray",&,N,V_queryResults
hasEmailAddress
hasPhoneNumber
emailAddress
setEmailAddress:
phoneNumber
setPhoneNumber:
_emailAddress
_phoneNumber
T@"NSString",&,N,V_emailAddress
T@"NSString",&,N,V_phoneNumber
fileSignatureType
referenceSignatureType
hasBrokenAssetRecordID
setListIndex:
setHasListIndex:
hasListIndex
clearFileSignatures
addFileSignature:
fileSignaturesCount
fileSignatureAtIndex:
clearReferenceSignatures
addReferenceSignature:
referenceSignaturesCount
referenceSignatureAtIndex:
setHasIsPackage:
hasIsPackage
hasAffectedRecordType
setSkipWriteMissingAssetStatusRecord:
setHasSkipWriteMissingAssetStatusRecord:
hasSkipWriteMissingAssetStatusRecord
brokenAssetRecordID
setBrokenAssetRecordID:
listIndex
fileSignatures
setFileSignatures:
referenceSignatures
setReferenceSignatures:
affectedRecordType
setAffectedRecordType:
skipWriteMissingAssetStatusRecord
_affectedRecordType
_brokenAssetRecordID
_fileSignatures
_listIndex
_referenceSignatures
_skipWriteMissingAssetStatusRecord
T@"CKDPRecordIdentifier",&,N,V_brokenAssetRecordID
Ti,N,V_listIndex
T@"NSMutableArray",&,N,V_fileSignatures
T@"NSMutableArray",&,N,V_referenceSignatures
T@"NSString",&,N,V_affectedRecordType
TB,N,V_skipWriteMissingAssetStatusRecord
_fetchZonePCS
_fetchPCSDataForZoneID:
_prepareTargetZonePCS
_saveTargetZone
_sychronizeUserKeyRegistryIfNeeded
_handleZoneSavedWithID:responseCode:
_setPermanentFailure
sourceZoneIDs
setSourceZoneIDs:
zonePCSDataByZoneID
setZonePCSDataByZoneID:
isHandlingRetryableError
setIsHandlingRetryableError:
currentError
setCurrentError:
zoneWaitingOnKeyRegistrySync
setZoneWaitingOnKeyRegistrySync:
_isHandlingRetryableError
_sourceZoneIDs
_zonePCSDataByZoneID
_currentError
_zoneWaitingOnKeyRegistrySync
T@"NSArray",&,N,V_sourceZoneIDs
T@"CKRecordZone",&,N,V_targetZone
T@"NSMutableDictionary",&,N,V_zonePCSDataByZoneID
TB,V_isHandlingRetryableError
T@"NSError",&,V_currentError
Tq,N,V_numZoneSaveAttempts
T@"CKRecordZoneID",&,N,V_zoneWaitingOnKeyRegistrySync
initWithOperation:lookupInfos:
wantsProtectionInfo
setWantsProtectionInfo:
infosToDiscover
setInfosToDiscover:
submittedInfos
setSubmittedInfos:
_wantsProtectionInfo
_infosToDiscover
_submittedInfos
T@"NSArray",&,N,V_infosToDiscover
T@"NSMutableDictionary",&,N,V_submittedInfos
TB,N,V_wantsProtectionInfo
configuration
setConfiguration:
_configuration
T@"CKDServerConfiguration",&,N,V_configuration
tokenFetchedBlock
setTokenFetchedBlock:
_tokenFetchedBlock
T@?,C,N,V_tokenFetchedBlock
hasDownloadToken
hasDownloadRequest
hasContentBaseURL
hasRequestor
hasDownloadBaseURL
setDownloadURLExpiration:
setHasDownloadURLExpiration:
hasDownloadURLExpiration
setHasDownloadTokenExpiration:
hasDownloadTokenExpiration
hasClearAssetKey
hasAssetAuthorizationResponseUUID
hasConstructedAssetDownloadURL
setConstructedAssetDownloadURLExpiration:
setHasConstructedAssetDownloadURLExpiration:
hasConstructedAssetDownloadURLExpiration
setConstructedAssetDownloadEstimatedSize:
setHasConstructedAssetDownloadEstimatedSize:
hasConstructedAssetDownloadEstimatedSize
hasReservedVoucher
downloadToken
setDownloadToken:
downloadRequest
setDownloadRequest:
downloadBaseURL
setDownloadBaseURL:
downloadURLExpiration
assetAuthorizationResponseUUID
setAssetAuthorizationResponseUUID:
constructedAssetDownloadURLExpiration
constructedAssetDownloadEstimatedSize
reservedVoucher
setReservedVoucher:
_constructedAssetDownloadEstimatedSize
_constructedAssetDownloadURLExpiration
_downloadURLExpiration
_assetAuthorizationResponseUUID
_downloadBaseURL
_downloadRequest
_downloadToken
_reservedVoucher
T@"NSString",&,N,V_downloadToken
T@"NSData",&,N,V_downloadRequest
T@"NSString",&,N,V_contentBaseURL
T@"NSString",&,N,V_downloadBaseURL
Tq,N,V_downloadURLExpiration
Tq,N,V_downloadTokenExpiration
T@"NSString",&,N,V_assetAuthorizationResponseUUID
T@"NSString",&,N,V_constructedAssetDownloadURL
Tq,N,V_constructedAssetDownloadURLExpiration
Tq,N,V_constructedAssetDownloadEstimatedSize
T@"CKDPReservedVoucher",&,N,V_reservedVoucher
hasUserId
setHasState:
hasState
stateAsString:
StringAsState:
hasInviterId
setCreatedInProcess:
setHasCreatedInProcess:
hasCreatedInProcess
setAcceptTimestamp:
setHasAcceptTimestamp:
hasAcceptTimestamp
hasOutOfNetworkPrivateKey
setOutOfNetworkKeyType:
setHasOutOfNetworkKeyType:
hasOutOfNetworkKeyType
hasAcceptedTimestampDate
setIsOrgUser:
setHasIsOrgUser:
hasIsOrgUser
hasProtectionInfoPublicKey
keyHealth
setKeyHealth:
setHasKeyHealth:
hasKeyHealth
keyHealthAsString:
StringAsKeyHealth:
hasInviteTimestampDate
setIsAnonymousInvitedParticipant:
setHasIsAnonymousInvitedParticipant:
hasIsAnonymousInvitedParticipant
userId
setUserId:
inviterId
setInviterId:
createdInProcess
acceptTimestamp
outOfNetworkPrivateKey
setOutOfNetworkPrivateKey:
outOfNetworkKeyType
acceptedTimestampDate
setAcceptedTimestampDate:
isOrgUser
protectionInfoPublicKey
setProtectionInfoPublicKey:
inviteTimestampDate
setInviteTimestampDate:
isAnonymousInvitedParticipant
_acceptTimestamp
_acceptedTimestampDate
_inviteTimestampDate
_inviterId
_keyHealth
_outOfNetworkKeyType
_outOfNetworkPrivateKey
_protectionInfoPublicKey
_userId
_createdInProcess
_isAnonymousInvitedParticipant
_isOrgUser
T@"CKDPIdentifier",&,N,V_participantId
T@"CKDPIdentifier",&,N,V_userId
Ti,N,V_state
T@"CKDPIdentifier",&,N,V_inviterId
TB,N,V_createdInProcess
Tq,N,V_acceptTimestamp
T@"NSData",&,N,V_outOfNetworkPrivateKey
Ti,N,V_outOfNetworkKeyType
T@"CKDPDate",&,N,V_acceptedTimestampDate
TB,N,V_isOrgUser
T@"NSData",&,N,V_protectionInfoPublicKey
Ti,N,V_keyHealth
T@"CKDPDate",&,N,V_inviteTimestampDate
TB,N,V_isAnonymousInvitedParticipant
lastAttemptDate
setLastAttemptDate:
retryNumber
setRetryNumber:
_lastAttemptDate
_retryNumber
T@"NSDate",&,N,V_lastAttemptDate
T@"NSNumber",&,N,V_retryNumber
performWithDelegate:
T@"<CKDOperationInfoDelegate>",W,N,V_delegate
registerDelegate:forOperationWithID:
unregisterDelegate:forOperationWithID:
operationInfoMetadataForOperationWithID:
_locked_enumerateCallbacksForOperationWithID:usingBlock:
enumerateCallbacksForOperationWithID:usingBlock:
resumableOperationInfosByAppContainerAccountTuplesWithProgressPurged:
outstandingOperationInfosForIDs:
allOutstandingOperationIDsForAppContainerAccountTuple:
expungeOperationInfoForDeletedAccountID:
deleteAllInfoForOperationWithID:
_lockedSetOperationInfo:forOperationID:appContainerAccountTuple:
setOperationInfo:forOperationID:appContainerAccountTuple:
_lockedArchiveCallback:forOperationID:
archiveCallback:forOperationID:
registerAttemptForOperationWithID:
_locked_operationInfoForID:
registerCacheEvictionActivity
cacheQueue
setCacheQueue:
cacheDelegateQueue
setCacheDelegateQueue:
delegateWrappersByOperationID
setDelegateWrappersByOperationID:
_cacheQueue
_cacheDelegateQueue
_delegateWrappersByOperationID
T@"NSObject<OS_dispatch_queue>",&,N,V_cacheQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_cacheDelegateQueue
T@"NSMutableDictionary",&,N,V_delegateWrappersByOperationID
configurationFetchedGroup
setConfigurationFetchedGroup:
_configurationFetchedGroup
T@"NSObject<OS_dispatch_group>",&,N,V_configurationFetchedGroup
hasLeft
hasRight
left
setLeft:
right
setRight:
_left
_right
T@"CKDPListPosition",&,N,V_left
T@"CKDPListPosition",&,N,V_right
resultServerChangeTokenData
setResultServerChangeTokenData:
_resultServerChangeTokenData
T@"NSData",&,N,V_resultServerChangeTokenData
initWithOperation:recordZoneIDs:configurationsByRecordZoneID:
zoneErrorsByZoneID
resultsByRecordZoneID
_handleRecords:
configurationsByRecordZoneID
setConfigurationsByRecordZoneID:
zoneIDsByRequestOperationUUID
setZoneIDsByRequestOperationUUID:
requestResultsByRecordZoneID
setRequestResultsByRecordZoneID:
nodeErrorsByZoneID
setNodeErrorsByZoneID:
_configurationsByRecordZoneID
_zoneIDsByRequestOperationUUID
_requestResultsByRecordZoneID
_nodeErrorsByZoneID
T@"NSArray",C,N,V_recordZoneIDs
T@"NSDictionary",&,N,V_configurationsByRecordZoneID
T@"NSMutableDictionary",&,N,V_zoneIDsByRequestOperationUUID
T@"NSMutableDictionary",&,N,V_requestResultsByRecordZoneID
T@"NSMutableDictionary",&,N,V_nodeErrorsByZoneID
needsChainPCSCreation
_fetchPCSForPrivateZone
_fetchDependentPCSInSharedDatabase
_decryptRecordPCSInPrivateDatabase
_decryptRecordPCSInSharedDatabase
serverRecordHasNoProtectionData
setServerRecordHasNoProtectionData:
serverRecordType
setServerRecordType:
_serverRecordHasNoProtectionData
_serverRecordType
T@"CKDRecordPCSData",&,N
TB,N,V_serverRecordHasNoProtectionData
T@"NSString",&,N,V_serverRecordType
vettingError
setVettingError:
setHasVettingError:
hasVettingError
vettingErrorAsString:
StringAsVettingError:
_vettingError
Ti,N,V_vettingError
daemonDatabaseDirectoryName
initWithTestRootDirectory:
applicationCachesDirectoryForDataContainerDirectory:usingHomeCachesDirectory:
containerDirectory
containerCloudKitDirectory
daemonCachesDirectory
daemonDatabaseDirectory
mmcsWorkingDirectory
assetDbDirectory
fileStagingDirectory
fileDownloadDirectory
recordCacheDirectory
frameworkCachesDirectory
packageStagingDirectory
_containerDirectory
_containerCloudKitDirectory
_daemonCachesDirectory
_daemonDatabaseDirectory
_mmcsWorkingDirectory
_assetDbDirectory
_fileStagingDirectory
_fileDownloadDirectory
_recordCacheDirectory
_frameworkCachesDirectory
_packageStagingDirectory
T@"NSString",R,N,V_dataSeparationHash
T@"NSString",R,N,V_containerIdentifier
T@"NSURL",R,N,V_containerDirectory
T@"NSURL",R,N,V_containerCloudKitDirectory
T@"NSURL",R,N,V_daemonCachesDirectory
T@"NSURL",R,N,V_daemonDatabaseDirectory
T@"NSURL",R,N,V_mmcsWorkingDirectory
T@"NSURL",R,N,V_assetDbDirectory
T@"NSURL",R,N,V_fileStagingDirectory
T@"NSURL",R,N,V_fileDownloadDirectory
T@"NSURL",R,N,V_recordCacheDirectory
T@"NSURL",R,N,V_frameworkCachesDirectory
T@"NSURL",R,N,V_packageStagingDirectory
initWithOperation:previousServerChangeTokenData:
changedZoneIDs
deletedZoneIDs
purgedZoneIDs
serverChangeTokenData
setServerChangeTokenData:
encryptedDataResetDeletedZoneIDs
zoneChangedBlock
setZoneChangedBlock:
zoneDeletedBlock
setZoneDeletedBlock:
zonePurgedBlock
setZonePurgedBlock:
zoneDeletedDueToEncryptedDataResetBlock
setZoneDeletedDueToEncryptedDataResetBlock:
anonymousShareProcessingBlock
setAnonymousShareProcessingBlock:
recordZoneID
setRecordZoneID:
previousServerChangeTokenData
setPreviousServerChangeTokenData:
_changedZoneIDs
_deletedZoneIDs
_purgedZoneIDs
_encryptedDataResetDeletedZoneIDs
_serverChangeTokenData
_zoneChangedBlock
_zoneDeletedBlock
_zonePurgedBlock
_zoneDeletedDueToEncryptedDataResetBlock
_anonymousShareProcessingBlock
_recordZoneID
_previousServerChangeTokenData
T@"CKRecordZoneID",&,N,V_recordZoneID
T@"NSData",&,N,V_previousServerChangeTokenData
T@"NSData",&,N,V_serverChangeTokenData
T@"NSArray",R,N,V_changedZoneIDs
T@"NSArray",R,N,V_deletedZoneIDs
T@"NSArray",R,N,V_purgedZoneIDs
T@"NSArray",R,N,V_encryptedDataResetDeletedZoneIDs
T@?,C,N,V_zoneChangedBlock
T@?,C,N,V_zoneDeletedBlock
T@?,C,N,V_zonePurgedBlock
T@?,C,N,V_zoneDeletedDueToEncryptedDataResetBlock
T@?,C,N,V_anonymousShareProcessingBlock
scheduleRequest:
removeCacheForLookupInfos:
setCache:
_cache
T@"CKDIdentityCache",&,N,V_cache
hasHost
setPort:
setHasPort:
hasPort
host
setHost:
port
_host
_port
T@"NSString",&,N,V_host
TI,N,V_port
initWithOperationInfo:container:operationType:
setOperationType:
_operationType
Ti,N,V_operationType
fieldValuesType
listValuesType
setLongValue:
setHasLongValue:
hasLongValue
clearFieldValues
addFieldValues:
fieldValuesCount
fieldValuesAtIndex:
addListValues:
listValuesAtIndex:
longValue
fieldValues
setFieldValues:
_longValue
_fieldValues
Tq,N,V_longValue
T@"NSMutableArray",&,N,V_fieldValues
sharedAccountStore
sharedPrimaryAccount
invalidatePrimaryAccountCache
hasQuery
T@"CKDPQuery",&,N,V_query
initWithOperation:serverChangeTokenData:
resultChangedNotifications
_resultChangedNotifications
T@"NSArray",R,N,V_resultChangedNotifications
unsignedIntegerValue
initWithPropertyDictionary:
dictionaryPropertyEncoding
initWithValues:
isExpired
valuesForContainerID:
valueForKeyPath:forContainerID:
applicationWithBundleID:canSyncUsingVersion:forContainerID:
tokenRegisterDays:
transcodeServerPublicKeyURLs:
cloudMediaProcessingPublicKeyURLString:
allowCloudMediaProcessingOffloadForSeed:
allowCloudMediaProcessingOffloadForGM:
maxBatchSize:
publicIdentitiesExpirationTimeout:
allowExpiredDNSBehavior:
c2NetworkMetricsReportFrequency:
c2NetworkMetricsReportFrequencyBase:
c2ClientOperationMetricsReportFrequency:
c2ClientOperationMetricsReportFrequencyBase:
c2ClientApplicationMetricsReportFrequency:
c2ClientApplicationMetricsReportFrequencyBase:
c2AllOperationMetricsReportFrequency:
c2AllOperationMetricsReportFrequencyBase:
c2AllOperationGroupMetricsReportFrequency:
c2AllOperationGroupMetricsReportFrequencyBase:
chunkProfileConfigurationVersion:
chunkProfileConfigurationFileExtensionToProfileMap:
chunkProfileConfigurationDefaultProfilePolicy:
iCloudAppSiteAssociationData
maxInlineMergeableDeltaSize:
suggestedMergeableDeltaSize:
expiry
setExpiry:
allowedAppVersionsCache
setAllowedAppVersionsCache:
_expiry
_allowedAppVersionsCache
T@"NSMutableDictionary",&,N,V_values
T@"NSMutableDictionary",&,N,V_allowedAppVersionsCache
T@"NSDate",&,N,V_expiry
_saveUserIdentity:forLookupInfo:
_receivedUserIdentity:forLookupInfo:error:
spawnURLRequests
_generateOONPrivateKeyWithError:
_tryComplete
fetchBatchSize
setFetchBatchSize:
perLookupInfoProgressBlock
setPerLookupInfoProgressBlock:
lookupCompletionBlock
setLookupCompletionBlock:
_lookupInfosToFetch
_missingLookupInfos
_fetchBatchSize
_perLookupInfoProgressBlock
_lookupCompletionBlock
TB,V_isCancelled
TQ,N,V_fetchBatchSize
T@?,C,N,V_perLookupInfoProgressBlock
T@?,C,N,V_lookupCompletionBlock
_fetchRecord
_touchFetchRepairZone
_touchCreateRepairZone
_breakAsset
_markAssetBroken
repairContainer
assetOrPackageForFetchedRecord
checkPreconditions
assetOrPackageMarkedBrokenBlock
setAssetOrPackageMarkedBrokenBlock:
uploadRequestConfiguration
setUploadRequestConfiguration:
touchRepairZone
setTouchRepairZone:
bypassPCSEncryptionForTouchRepairZone
setBypassPCSEncryptionForTouchRepairZone:
simulateCorruptAsset
setSimulateCorruptAsset:
writeRepairRecord
setWriteRepairRecord:
zoneFetchOperation
setZoneFetchOperation:
zoneCreateOperation
setZoneCreateOperation:
corruptOperation
setCorruptOperation:
wrapperOperation
setWrapperOperation:
repairZone
setRepairZone:
numMarkAssetBrokenFailures
setNumMarkAssetBrokenFailures:
markAssetBrokenError
setMarkAssetBrokenError:
_touchRepairZone
_bypassPCSEncryptionForTouchRepairZone
_simulateCorruptAsset
_writeRepairRecord
_assetOrPackageMarkedBrokenBlock
_uploadRequestConfiguration
_zoneFetchOperation
_zoneCreateOperation
_corruptOperation
_wrapperOperation
_repairZone
_numMarkAssetBrokenFailures
_markAssetBrokenError
T@"CKUploadRequestConfiguration",&,N,V_uploadRequestConfiguration
TB,N,V_touchRepairZone
TB,N,V_bypassPCSEncryptionForTouchRepairZone
TB,N,V_simulateCorruptAsset
TB,N,V_writeRepairRecord
T@"NSString",&,N,V_field
Tq,N,V_listIndex
T@"CKDFetchRecordZonesOperation",&,N,V_zoneFetchOperation
T@"CKDModifyRecordZonesOperation",&,N,V_zoneCreateOperation
T@"CKDModifyRecordsOperation",&,N,V_corruptOperation
T@"CKDMarkAssetBrokenURLRequestWrapperOperation",&,N,V_wrapperOperation
T@"CKRecordZone",&,N,V_repairZone
TQ,N,V_numMarkAssetBrokenFailures
T@"NSError",&,N,V_markAssetBrokenError
T@"<CKMarkAssetBrokenOperationCallbacks>",&,D,N
T@?,C,N,V_assetOrPackageMarkedBrokenBlock
urlRequest
setUrlRequest:
_urlRequest
T@"CKDMarkAssetBrokenURLRequest",&,N,V_urlRequest
hasIdentifierForConstraintFailure
identifierForConstraintFailure
setIdentifierForConstraintFailure:
_identifierForConstraintFailure
T@"CKDPIdentifier",&,N,V_identifierForConstraintFailure
initWithOperation:shareMetadatasToAccept:
shareAcceptedBlock
setShareAcceptedBlock:
shareMetadatasToAccept
setShareMetadatasToAccept:
shareMetadataByRequestID
setShareMetadataByRequestID:
_shareAcceptedBlock
_shareMetadatasToAccept
_shareMetadataByRequestID
T@"NSArray",&,N,V_shareMetadatasToAccept
T@"NSMutableDictionary",&,N,V_shareMetadataByRequestID
T@?,C,N,V_shareAcceptedBlock
setSigningPCSIdentity:
shareURL
setShareURL:
publicPCSData
setPublicPCSData:
publicPCSEtag
setPublicPCSEtag:
pppcsProtectionInfo
setPppcsProtectionInfo:
signingPCSIdentity
_shareURL
_publicPCSData
_publicPCSEtag
_pppcsProtectionInfo
_signingPCSIdentity
T@"NSURL",&,N,V_shareURL
T@"CKRecordID",&,N,V_shareRecordID
T@"NSData",&,N,V_publicPCSData
T@"NSString",&,N,V_publicPCSEtag
T@"NSData",&,N,V_publicKey
TQ,N,V_publicKeyVersion
T@"NSData",&,N,V_pppcsProtectionInfo
T@"NSString",&,N,V_anonymousCKUserID
T^{_PCSIdentityData=},N,V_signingPCSIdentity
setAtomicSaves:
setHasAtomicSaves:
hasAtomicSaves
setFetchChanges:
setHasFetchChanges:
hasFetchChanges
setCkql:
setHasCkql:
hasCkql
sharingType
setSharingType:
setHasSharingType:
hasSharingType
sharingTypeAsString:
StringAsSharingType:
setZoneSharing:
setHasZoneSharing:
hasZoneSharing
setHierarchicalSharing:
setHasHierarchicalSharing:
hasHierarchicalSharing
atomicSaves
fetchChanges
ckql
zoneSharing
hierarchicalSharing
_sharingType
_atomicSaves
_ckql
_fetchChanges
_hierarchicalSharing
_zoneSharing
TB,N,V_atomicSaves
TB,N,V_fetchChanges
TB,N,V_ckql
Ti,N,V_sharingType
TB,N,V_zoneSharing
TB,N,V_hierarchicalSharing
_handleFetchChangesRequestFinishedWithSchedulerInfo:
_handleChangedRecords:perRequestSchedulerInfo:
_handleRecordDelete:recordType:perRequestSchedulerInfo:
_sendFetchChangesRequestForZoneIDs:withOptions:previousRequestSchedulerInfo:
_possiblyWrapError:forRecordWithID:withCode:format:
_noteChangedRecordWithID:record:error:
_noteDeletedRecordWithID:recordType:
_createAndConfigureURLRequestForZoneIDs:optionsByZoneID:
_optionsForZonesWithPendingChangesAfterRequest:
_noteCompletedURLRequest:withSchedulerInfo:
_noteOperationBeginning
_noteOperationEnding
_noteOperationFinishedBlockEnd
shouldFetchAssetContents
setShouldFetchAssetContents:
fetchAllChanges
setFetchAllChanges:
forcePCSDecryptionAttempt
setForcePCSDecryptionAttempt:
errorReportingStyle
setErrorReportingStyle:
_shouldFetchAssetContents
_fetchAllChanges
_forcePCSDecryptionAttempt
_errorReportingStyle
TB,N,V_forcePCSDecryptionAttempt
Tq,N,V_errorReportingStyle
TB,N,V_shouldFetchAssetContents
TB,N,V_fetchAllChanges
supplementalChangeTokenByZoneID
setSupplementalChangeTokenByZoneID:
_supplementalChangeTokenByZoneID
T@"NSDictionary",&,N,V_supplementalChangeTokenByZoneID
recordChangedBlock
setRecordChangedBlock:
recordDeletedBlock
setRecordDeletedBlock:
serverChangeTokenUpdatedBlock
setServerChangeTokenUpdatedBlock:
resultClientChangeTokenData
setResultClientChangeTokenData:
resultStatus
setResultStatus:
changeTypes
setChangeTypes:
clientIsUsingLegacyCKFetchRecordChangesOperationAPI
setClientIsUsingLegacyCKFetchRecordChangesOperationAPI:
_clientIsUsingLegacyCKFetchRecordChangesOperationAPI
_recordChangedBlock
_recordDeletedBlock
_serverChangeTokenUpdatedBlock
_resultClientChangeTokenData
_resultStatus
_changeTypes
Tq,N,V_changeTypes
TB,N,V_clientIsUsingLegacyCKFetchRecordChangesOperationAPI
T@"NSData",&,N,V_resultClientChangeTokenData
Tq,N,V_resultStatus
T@?,C,N,V_recordChangedBlock
T@?,C,N,V_recordDeletedBlock
T@?,C,N,V_serverChangeTokenUpdatedBlock
shouldReturnServerChangeTokensToAdopter
_handleFetchDatabaseChangesRequestFinishedWithSchedulerInfo:
_sendFetchDatabaseChangesRequestWithChangeToken:previousRequestSchedulerInfo:
_handleAnonymousZoneDataObjects:schedulerInfo:
recordZoneWithIDChangedBlock
setRecordZoneWithIDChangedBlock:
recordZoneWithIDWasDeletedBlock
setRecordZoneWithIDWasDeletedBlock:
recordZoneWithIDWasPurgedBlock
setRecordZoneWithIDWasPurgedBlock:
recordZoneWithIDWasDeletedDueToEncryptedDataResetBlock
setRecordZoneWithIDWasDeletedDueToEncryptedDataResetBlock:
fetchZonesGroup
setFetchZonesGroup:
_recordZoneWithIDChangedBlock
_recordZoneWithIDWasDeletedBlock
_recordZoneWithIDWasPurgedBlock
_recordZoneWithIDWasDeletedDueToEncryptedDataResetBlock
_fetchZonesGroup
T@"CKServerChangeToken",&,N,V_serverChangeToken
T@"NSObject<OS_dispatch_group>",&,N,V_fetchZonesGroup
T@"<CKFetchDatabaseChangesOperationCallbacks>",&,D,N
T@?,C,N,V_recordZoneWithIDChangedBlock
T@?,C,N,V_recordZoneWithIDWasDeletedBlock
T@?,C,N,V_recordZoneWithIDWasPurgedBlock
T@?,C,N,V_recordZoneWithIDWasDeletedDueToEncryptedDataResetBlock
initWithRecord:trackProgress:assetsToDownload:assetsToDownloadInMemory:packageIndexSets:assetURLInfosToFillOut:
didDownloadAsset:error:
didFillOutURLInfo:error:
didCompleteTaskWithError:
T@"NSMutableArray",&,N,V_assetsToDownload
T@"NSMutableArray",&,N,V_assetsToDownloadInMemory
T@"NSMutableArray",&,N,V_packageIndexSets
T@"NSMutableArray",&,N,V_assetURLInfosToFillOut
recordValue
setRecordValue:
_recordValue
T@"CKMergeableValueID",&,N,V_mergeableValueID
T@"CKMergeableRecordValue",&,N,V_recordValue
desiredIndexedListKeys
_saveUpdatedShareRecords
_findSpecialParticipantsOnShare:identityDelegate:
fetchRecordsWithIDs:andFullRecords:
errorForRecordID:
setError:forRecordID:
_continueHandleFetchedRecord:recordID:
recordDecryptOperation
hasRecordDecryptOperation
_decryptPropertiesOnRecord:recordID:
_reallyDecryptPropertiesOnRecord:recordID:
_fetchPCSForMergeableValueDeltaRecord:recordID:
_handleRecordFetch:recordID:etagMatched:responseCode:
_handleSharePCSPrepForShare:recordID:
_decryptPropertiesIfNeededForRecord:record:
_prepareAsset:record:recordKey:assetTransferOptions:
_addDownloadTasksForRecord:completionBlock:
_addAssetDownloadTaskForRecord:completionBlock:
_addMergeableValueDownloadTasksForRecord:completionBlock:
_finishAllDownloadTasksWithError:
_didDownloadAssetsWithError:
_fetchCloudCerts
_downloadAssets
_downloadMergeableValues
useCachedEtags
setUseCachedEtags:
forcePCSDecrypt
setForcePCSDecrypt:
skipDecryption
setSkipDecryption:
fullRecordsToFetch
setFullRecordsToFetch:
shouldUpdateTimestampsForFetchedMergeableValues
setShouldUpdateTimestampsForFetchedMergeableValues:
recordIDsToFetch
setRecordIDsToFetch:
cachedRecords
setCachedRecords:
recordIDsToETags
setRecordIDsToETags:
recordIDsToVersionETags
setRecordIDsToVersionETags:
desiredPackageFileIndices
setDesiredPackageFileIndices:
errorsByRecordID
setErrorsByRecordID:
downloadTasksByRecordID
setDownloadTasksByRecordID:
shouldFetchMergeableValues
setShouldFetchMergeableValues:
assetFieldNamesToPublishURLs
setAssetFieldNamesToPublishURLs:
recordIDsToRefetch
setRecordIDsToRefetch:
shareRecordsToUpdateByRecordID
setShareRecordsToUpdateByRecordID:
mergeableValueDownloadTasks
setMergeableValueDownloadTasks:
webSharingIdentityDataByRecordID
setWebSharingIdentityDataByRecordID:
shouldRollSharePCSOnFetch
setShouldRollSharePCSOnFetch:
_decryptOperation
_useCachedEtags
_forcePCSDecrypt
_skipDecryption
_shouldUpdateTimestampsForFetchedMergeableValues
_shouldFetchMergeableValues
_shouldRollSharePCSOnFetch
_fullRecordsToFetch
_recordIDsToFetch
_cachedRecords
_recordIDsToETags
_recordIDsToVersionETags
_desiredPackageFileIndices
_errorsByRecordID
_downloadTasksByRecordID
_assetFieldNamesToPublishURLs
_recordIDsToRefetch
_shareRecordsToUpdateByRecordID
_mergeableValueDownloadTasks
_webSharingIdentityDataByRecordID
T@"NSArray",&,N,V_recordIDsToFetch
T@"NSMutableDictionary",&,N,V_cachedRecords
T@"NSDictionary",&,N,V_recordIDsToETags
T@"NSDictionary",&,N,V_recordIDsToVersionETags
T@"NSDictionary",&,N,V_desiredPackageFileIndices
T@"NSMutableDictionary",&,N,V_errorsByRecordID
T@"NSMapTable",&,N,V_downloadTasksByRecordID
TB,N,V_shouldFetchMergeableValues
T@"NSSet",&,N,V_assetFieldNamesToPublishURLs
T@"CKDDecryptRecordsOperation",R,N
T@"NSMutableArray",&,N,V_recordIDsToRefetch
T@"NSMutableDictionary",&,N,V_shareRecordsToUpdateByRecordID
T@"NSMutableDictionary",&,N,V_mergeableValueDownloadTasks
T@"NSDictionary",&,N,V_webSharingIdentityDataByRecordID
TB,N,V_shouldRollSharePCSOnFetch
T@"<CKFetchRecordsOperationCallbacks>",&,D,N
TB,N,V_useCachedEtags
TB,N,V_forcePCSDecrypt
TB,N,V_skipDecryption
T@"NSArray",&,N,V_fullRecordsToFetch
TB,N,V_shouldUpdateTimestampsForFetchedMergeableValues
T@"<CKSQLiteItem>",&,N,V_itemID
T@"CKDPCSCache",&,N,V_cache
TQ,N,V_options
canBeUsedForOperation:withOptions:
needsAdditionalPCSCreation
fetchOptions
setFetchOptions:
didFetchData
setDidFetchData:
fetchError
setFetchError:
dependentPCSFetchError
setDependentPCSFetchError:
wasFetchedFromCache
setWasFetchedFromCache:
numRetries
setNumRetries:
shouldRetry
setShouldRetry:
parentPCSData
setParentPCSData:
isPCSDataInvalidated
setPcsDataInvalidated:
_didFetchData
_wasFetchedFromCache
_shouldRetry
_pcsDataInvalidated
_numRetries
_fetchOptions
_fetchError
_dependentPCSFetchError
_parentPCSData
TQ,N,V_fetchOptions
TB,N,V_didFetchData
T@"NSError",&,N,V_fetchError
T@"NSError",&,N,V_dependentPCSFetchError
TB,N,V_wasFetchedFromCache
Ti,N,V_numRetries
TB,N,V_shouldRetry
T@"CKDRecordPCSData",&,N,V_parentPCSData
pcsDataInvalidated
TB,GisPCSDataInvalidated,V_pcsDataInvalidated
T@"NSObject<OS_dispatch_group>",R,N,V_fetchGroup
_handleRecordArchived:responseCode:
T@"<CKArchiveRecordsOperationCallbacks>",&,D,N
_handleNotificationID:withResponse:
notificationMarkedRead
setNotificationMarkedRead:
notificationIDs
setNotificationIDs:
errorByNotificationID
setErrorByNotificationID:
successfulNotificationIDs
setSuccessfulNotificationIDs:
_notificationMarkedRead
_notificationIDs
_errorByNotificationID
_successfulNotificationIDs
T@"NSArray",&,N,V_notificationIDs
T@"NSMutableDictionary",&,N,V_errorByNotificationID
T@"NSMutableSet",&,N,V_successfulNotificationIDs
T@"<CKMarkNotificationsReadOperationCallbacks>",&,D,N
T@?,C,N,V_notificationMarkedRead
_performCallbackForShareID:withParticipantKey:error:
_sendErrorForFailedShares
_participantKeyFromShare:withError:
_handleFetchedShare:withID:error:
fetchSharesFromServer
updateShares
shareParticipantKeyFetchedBlock
setShareParticipantKeyFetchedBlock:
shareIDs
setShareIDs:
baseTokensByShareID
setBaseTokensByShareID:
childRecordIDsByShareID
setChildRecordIDsByShareID:
sharesNeedingUpdateByID
setSharesNeedingUpdateByID:
hasAttemptedShareUpdate
setHasAttemptedShareUpdate:
_hasAttemptedShareUpdate
_shareParticipantKeyFetchedBlock
_shareIDs
_baseTokensByShareID
_childRecordIDsByShareID
_sharesNeedingUpdateByID
T@"NSMutableArray",&,N,V_shareIDs
T@"NSDictionary",&,N,V_baseTokensByShareID
T@"NSDictionary",&,N,V_childRecordIDsByShareID
T@"NSMutableDictionary",&,N,V_sharesNeedingUpdateByID
TB,N,V_hasAttemptedShareUpdate
T@"<CKFetchShareParticipantKeyOperationCallbacks>",&,D,N
T@?,C,N,V_shareParticipantKeyFetchedBlock
deviceIDsByContainerIdentifierInContainerEnvironment:
_serviceForContainer:
_perServicelookupKeyForContainer:
_savedDeviceIdentifierForContainer:
_saveDeviceIdentifierToDefaults:forContainer:
createQueryForDeviceIdentifierInContainer:
_saveDeviceIdentifier:forContainer:
_deleteDeviceIdentifierForContainer:
deviceIdentifierForContainer:
deviceIdentifierForContainer:skipInMemoryCache:createIfNecessary:
useLegacyKeychain
setUseLegacyKeychain:
deviceIDsByContainerIdentifierByContainerEnvironment
setDeviceIDsByContainerIdentifierByContainerEnvironment:
_useLegacyKeychain
_deviceIDsByContainerIdentifierByContainerEnvironment
T@"NSMutableDictionary",&,N,V_deviceIDsByContainerIdentifierByContainerEnvironment
TB,N,V_useLegacyKeychain
_claimPackagesInRecord:error:
retryPCSFailures
_hasHandlerInState:
_enumerateHandlersInState:withBlock:
hasDecryptOperation
saveCallbackWithMetadata:error:
deleteCallbackWithMetadata:error:
_performCallbacksForNonAtomicZoneHandlers:
_performCallbacksForAtomicZoneHandlers:
_performHandlerCallbacks
_determineEnvironment
_fetchUserPublicKeys
_applySideEffects
_topoSortRecordsForHandlers:
_shouldToposortInContainerID:
_topoSortRecords
_fetchShareParticipants
_prepareParentPCS
_fetchRecordPCSData
assetArrayByRecordID:didFetchRecord:recordID:error:
_didCompleteRecordFetchOperation:assetArrayByRecordID:
_fetchAssetRecordsForRereferencing
_prepareAssetsForUpload
_fetchUserBoundaryKey
_uploadAssets
_setBoundaryKeyOnAssetsToUpload:
_markRecordHandlersAsUploaded
_prepareRecordsForSave
_handleDecryptionFailure:forRecordID:
_verifyRecordEncryption
_handleRecordSaved:handler:etag:dateStatistics:expirationDate:responseCode:keysAssociatedWithETag:recordForOplockFailure:serverRecord:
_reallyHandleRecordSaved:handler:etag:dateStatistics:expirationDate:responseCode:keysAssociatedWithETag:recordForOplockFailure:decryptedServerRecord:
_handleRecordDeleted:handler:responseCode:
_handleMergeableDeltaSavedForRecordID:key:result:
_handleReplaceDeltasRequest:result:
requestedFieldsByRecordIDForRecords:
_reportRecordsInFlight
_continueRecordsModify
_uploadMergeableDeltas
_clearProtectionDataIfNotEntitled
setRetryPCSFailures:
canSetPreviousProtectionEtag
setCanSetPreviousProtectionEtag:
trustProtectionData
setTrustProtectionData:
alwaysFetchPCSFromServer
setAlwaysFetchPCSFromServer:
cachedUserBoundaryKeyData
setCachedUserBoundaryKeyData:
saveProgressBlock
setSaveProgressBlock:
recordsInFlightBlock
setRecordsInFlightBlock:
recordIDsToDeleteToEtags
setRecordIDsToDeleteToEtags:
recordIDsToDeleteToSigningPCSIdentity
setRecordIDsToDeleteToSigningPCSIdentity:
conflictLosersToResolveByRecordID
setConflictLosersToResolveByRecordID:
pluginFieldsForRecordDeletesByID
setPluginFieldsForRecordDeletesByID:
handlersByRecordID
setHandlersByRecordID:
parentsByRecordID
setParentsByRecordID:
handlersByAssetNeedingRecordFetch
setHandlersByAssetNeedingRecordFetch:
handlersByAsset
setHandlersByAsset:
modifyHandlersByZoneID
setModifyHandlersByZoneID:
savePolicy
setSavePolicy:
clientChangeTokenData
setClientChangeTokenData:
retriedRecords
setRetriedRecords:
shouldOnlySaveAssetContent
setShouldOnlySaveAssetContent:
haveOutstandingHandlers
setHaveOutstandingHandlers:
shouldReportRecordsInFlight
setShouldReportRecordsInFlight:
modifyRecordsQueue
setModifyRecordsQueue:
originatingFromDaemon
setOriginatingFromDaemon:
markAsParticipantNeedsNewInvitationToken
setMarkAsParticipantNeedsNewInvitationToken:
requestNeedsUserPublicKeys
setRequestNeedsUserPublicKeys:
userPublicKeys
setUserPublicKeys:
streamingAssetRequestOptions
setStreamingAssetRequestOptions:
shouldModifyRecordsInDatabase
setShouldModifyRecordsInDatabase:
includeMergeableDeltasInModifyRecordsRequest
setIncludeMergeableDeltasInModifyRecordsRequest:
_hasRecordsToSave
_hasRecordsToDelete
_retryPCSFailures
_trustProtectionData
_alwaysFetchPCSFromServer
_retriedRecords
_shouldOnlySaveAssetContent
_haveOutstandingHandlers
_shouldReportRecordsInFlight
_originatingFromDaemon
_markAsParticipantNeedsNewInvitationToken
_requestNeedsUserPublicKeys
_shouldModifyRecordsInDatabase
_includeMergeableDeltasInModifyRecordsRequest
_cachedUserBoundaryKeyData
_saveProgressBlock
_recordsInFlightBlock
_recordIDsToDeleteToEtags
_recordIDsToDeleteToSigningPCSIdentity
_conflictLosersToResolveByRecordID
_pluginFieldsForRecordDeletesByID
_handlersByRecordID
_parentsByRecordID
_handlersByAssetNeedingRecordFetch
_handlersByAsset
_modifyHandlersByZoneID
_savePolicy
_clientChangeTokenData
_modifyRecordsQueue
_userPublicKeys
_streamingAssetRequestOptions
T@"NSDictionary",&,N,V_recordIDsToDeleteToEtags
T@"NSDictionary",&,N,V_recordIDsToDeleteToSigningPCSIdentity
T@"NSDictionary",&,N,V_conflictLosersToResolveByRecordID
T@"NSDictionary",&,N,V_pluginFieldsForRecordDeletesByID
T@"NSDictionary",&,N,V_handlersByRecordID
T@"NSDictionary",&,N,V_parentsByRecordID
T@"NSMapTable",&,N,V_handlersByAssetNeedingRecordFetch
T@"NSMapTable",&,N,V_handlersByAsset
T@"NSMutableDictionary",&,N,V_modifyHandlersByZoneID
Tq,N,V_savePolicy
T@"NSData",C,N,V_clientChangeTokenData
TB,N,V_retriedRecords
TB,N,V_shouldOnlySaveAssetContent
TB,N,V_haveOutstandingHandlers
TB,N,V_shouldReportRecordsInFlight
T@"NSObject<OS_dispatch_queue>",&,N,V_modifyRecordsQueue
T@"NSData",C,N,V_cachedUserBoundaryKeyData
TB,N,V_originatingFromDaemon
TB,N,V_markAsParticipantNeedsNewInvitationToken
TB,N,V_requestNeedsUserPublicKeys
T@"NSArray",&,N,V_userPublicKeys
T@"C2RequestOptions",C,N,V_streamingAssetRequestOptions
TB,N,V_shouldModifyRecordsInDatabase
TB,N,V_includeMergeableDeltasInModifyRecordsRequest
T@"<CKModifyRecordsOperationCallbacks>",&,D,N
TB,N,V_retryPCSFailures
TB,N,V_canSetPreviousProtectionEtag
TB,N,V_trustProtectionData
TB,N,V_alwaysFetchPCSFromServer
T@?,C,N,V_saveProgressBlock
T@?,C,N,V_recordsInFlightBlock
T@"CKDSharePCSData",&,N
hasMoveMarker
hasMovedRecord
moveMarker
setMoveMarker:
movedRecord
setMovedRecord:
_moveMarker
_movedRecord
T@"CKDPRecord",&,N,V_moveMarker
T@"CKDPRecord",&,N,V_movedRecord
T@"CKDPRecordIdentifier",&,N,V_identifier
MMCSOptions
topmostParentOperationID
setTopmostParentOperationID:
topmostParentOperationGroupID
setTopmostParentOperationGroupID:
setApplicationBundleIdentifierForContainerAccess:
setApplicationBundleIdentifierForNetworkAttribution:
applicationSecondaryID
setApplicationSecondaryID:
zoneNames
setZoneNames:
authPutResponse
setAuthPutResponse:
authPutResponseHeaders
setAuthPutResponseHeaders:
setAllowsCellularAccess:
setAllowsExpensiveNetworkAccess:
setAllowsPowerNapScheduling:
setClientQueuePriority:
setResolvedAutomaticallyRetryNetworkFailures:
setResolvedDiscretionaryNetworkBehavior:
setDuetPreClearedMode:
metricOptions
setMetricOptions:
setIsCrossOwner:
setCacheDeleteAvailableSpaceClass:
networkingDelegate
setNetworkingDelegate:
setNetworkServiceType:
_allowsCellularAccess
_allowsExpensiveNetworkAccess
_allowsPowerNapScheduling
_resolvedAutomaticallyRetryNetworkFailures
_isCrossOwner
_topmostParentOperationID
_topmostParentOperationGroupID
_applicationBundleIdentifierForContainerAccess
_applicationBundleIdentifierForNetworkAttribution
_applicationSecondaryID
_zoneNames
_authPutResponse
_authPutResponseHeaders
_clientQueuePriority
_resolvedDiscretionaryNetworkBehavior
_duetPreClearedMode
_metricOptions
_cacheDeleteAvailableSpaceClass
_networkingDelegate
_networkServiceType
Tq,N,V_databaseScope
T@"CKContainerID",&,N,V_containerID
T@"NSString",&,N,V_topmostParentOperationID
T@"NSString",&,N,V_topmostParentOperationGroupID
T@"NSString",&,N,V_applicationBundleIdentifierForContainerAccess
T@"NSString",&,N,V_applicationBundleIdentifierForNetworkAttribution
T@"NSString",&,N,V_applicationSecondaryID
T@"NSArray",&,N,V_zoneNames
T@"NSData",&,N,V_authPutResponse
T@"NSDictionary",&,N,V_authPutResponseHeaders
TB,N,V_allowsCellularAccess
TB,N,V_allowsExpensiveNetworkAccess
TB,N,V_allowsPowerNapScheduling
Tq,N,V_clientQueuePriority
TB,N,V_resolvedAutomaticallyRetryNetworkFailures
TQ,N,V_resolvedDiscretionaryNetworkBehavior
TQ,N,V_duetPreClearedMode
T@"C2MetricOptions",&,N,V_metricOptions
TB,N,V_isCrossOwner
T@"NSNumber",&,N,V_cacheDeleteAvailableSpaceClass
T@"NSObject<C2NetworkingDelegate>",&,N,V_networkingDelegate
TQ,N,V_networkServiceType
T@"CKOperationMMCSRequestOptions",&,N,V_MMCSRequestOptions
listFieldType
clearListFields
addListField:
listFieldsCount
listFieldAtIndex:
listFields
setListFields:
_listFields
T@"NSMutableArray",&,N,V_listFields
mockAccountWithTestAccount:testDevice:
_initMockAccountWithTestAccount:testDevice:
renewAuthTokenInStore:withOptions:completionHandler:
updateAccountPropertiesAndSaveAccountInStore:completionHandler:
validateVettingToken:vettingEmail:vettingPhone:completionHandler:
canRenew
accountPropertiesForDataclass:
testAccount
setTestAccount:
testDevice
setTestDevice:
_testAccount
_testDevice
T@"CKTestAccount",&,N,V_testAccount
T@"CKTestDevice",&,N,V_testDevice
_handleRecordVersionsFetchedForID:isDeleted:versions:responseCode:
recordVersionFetchedBlock
setRecordVersionFetchedBlock:
minimumVersionETag
setMinimumVersionETag:
fetchVersionsGroup
setFetchVersionsGroup:
_recordVersionFetchedBlock
_minimumVersionETag
_fetchVersionsGroup
T@"NSArray",&,N,V_desiredKeys
T@"NSString",&,N,V_minimumVersionETag
T@"NSObject<OS_dispatch_group>",&,N,V_fetchVersionsGroup
T@"<CKFetchRecordVersionsOperationCallbacks>",&,D,N
T@?,C,N,V_recordVersionFetchedBlock
sharedClient
inlock_registrar
inlock_registrationsForDSID:
_pdsPushEnvironmentFromAPSEnvironmentString:
_pdsQualifierFromContainerID:
_pdsTopicFromBundleIdentifier:withContainerID:
_registrationForContainer:
_registrationForAppContainerAccountTuple:pushBundleIdentifier:pdsPushEnvironment:
ensureRegistrationForContainer:outError:
expungeStaleDSIDs
_unregisterRegistration:forDSID:outError:
unregisterTokenForContainer:outError:
unregisterAllTokensForAccountID:outError:
unregisterAllTokens
registrationsByDSID
setRegistrationsByDSID:
registrar
setRegistrar:
_registrationsByDSID
_registrar
T@"NSMutableDictionary",&,N,V_registrationsByDSID
T@"PDSRegistrar",&,N,V_registrar
hasSerializedResult
hasAttestationResponse
serializedResult
setSerializedResult:
attestationResponse
setAttestationResponse:
_attestationResponse
_serializedResult
T@"NSData",&,N,V_serializedResult
T@"CKCDPError",&,N,V_error
T@"CKCDPCodeServiceResponseAttestationResponse",&,N,V_attestationResponse
saveRecordsType
deleteRecordidsType
associatedMergeableDeltasType
clearSaveRecords
addSaveRecords:
saveRecordsCount
saveRecordsAtIndex:
clearDeleteRecordids
addDeleteRecordids:
deleteRecordidsCount
deleteRecordidsAtIndex:
clearAssociatedMergeableDeltas
addAssociatedMergeableDeltas:
associatedMergeableDeltasCount
associatedMergeableDeltasAtIndex:
saveRecords
setSaveRecords:
deleteRecordids
setDeleteRecordids:
associatedMergeableDeltas
setAssociatedMergeableDeltas:
_associatedMergeableDeltas
_deleteRecordids
T@"NSMutableArray",&,N,V_saveRecords
T@"NSMutableArray",&,N,V_deleteRecordids
T@"NSMutableArray",&,N,V_associatedMergeableDeltas
initWithOperation:mergeableValueIDs:continuationTokens:
continuationTokens
setContinuationTokens:
mergeableValueIDByRequestID
setMergeableValueIDByRequestID:
_continuationTokens
_mergeableValueIDByRequestID
T@"NSDictionary",&,N,V_continuationTokens
T@"NSMutableDictionary",&,N,V_mergeableValueIDByRequestID
currentProcess
deriveCurrentProcessWithArgC:argv:
_initWithProcessType:
_initWithArgC:argv:
processType
isSystemInstalledBinary
_isSystemInstalledBinary
_processType
Tq,R,N,V_processType
TB,R,N,V_isSystemInstalledBinary
auxiliaryUserInfoType
hasMessage
hasAuxiliaryDomain
setAuxiliaryCode:
setHasAuxiliaryCode:
hasAuxiliaryCode
clearAuxiliaryUserInfos
addAuxiliaryUserInfo:
auxiliaryUserInfosCount
auxiliaryUserInfoAtIndex:
setTargetPartition:
setHasTargetPartition:
hasTargetPartition
message
setMessage:
auxiliaryDomain
setAuxiliaryDomain:
auxiliaryCode
auxiliaryUserInfos
setAuxiliaryUserInfos:
targetPartition
_auxiliaryCode
_auxiliaryDomain
_auxiliaryUserInfos
_message
_targetPartition
T@"NSString",&,N,V_message
T@"NSString",&,N,V_auxiliaryDomain
Ti,N,V_auxiliaryCode
T@"NSMutableArray",&,N,V_auxiliaryUserInfos
Ti,N,V_targetPartition
CKPercentEscapedQueryString
zonePCS
setZonePCS:
setZoneishPCS:
fillOutPCSMetadataInfo
T^{_OpaquePCSShareProtection=},N
recordPCS
setRecordPCS:
privatePCS
setPrivatePCS:
publicPCS
setPublicPCS:
setSharePCSData:isUnitTestAccount:
actionType
clearActions
addAction:
actionsCount
actionAtIndex:
actions
setActions:
_actions
T@"CKDPRecordFieldIdentifier",&,N,V_identifier
T@"CKDPRecordFieldValue",&,N,V_value
T@"NSMutableArray",&,N,V_actions
syncObligationZoneIDs
setSyncObligationZoneIDs:
_hasPendingArchivedRecords
_syncObligationZoneIDs
TB,N,V_hasPendingArchivedRecords
T@"NSSet",&,N,V_syncObligationZoneIDs
_handleRecordChanges:deltaChanges:forZoneID:
fetchChangesForMergeableValues
setFetchChangesForMergeableValues:
recordsChangedBlock
setRecordsChangedBlock:
_fetchChangesForMergeableValues
_recordsChangedBlock
TB,N,V_fetchChangesForMergeableValues
T@?,C,N,V_recordsChangedBlock
initWithOperation:encryptedAnonymousSharesToAdd:
anonymousShareSavedBlock
setAnonymousShareSavedBlock:
encryptedAnonymousSharesToAdd
setEncryptedAnonymousSharesToAdd:
encryptedAnonymousShareHashToAddByRequestID
setEncryptedAnonymousShareHashToAddByRequestID:
_anonymousShareSavedBlock
_encryptedAnonymousSharesToAdd
_encryptedAnonymousShareHashToAddByRequestID
T@"NSDictionary",&,N,V_encryptedAnonymousSharesToAdd
T@"NSMutableDictionary",&,N,V_encryptedAnonymousShareHashToAddByRequestID
T@?,C,N,V_anonymousShareSavedBlock
accountWithIdentifier:
accountWithAltDSID:
primaryAccount
credentialRenewalDatesBySuspendedAccountID
deviceCountQueue
deviceCountForAccount:ignoreCache:completionHandler:
fetchDeviceCountForAccount:completionHandler:
_accountCredentialForAccount:withError:
isAccountSuspended
canSuspendedAccountRenewCredentials
noteSuspendedAccountRenewalDate
urlForDataclass:preferringGateway:
urlForDataclass:
privateCodeServiceURLPreferringGateway:
appleAccount
setAppleAccount:
_appleAccount
T@"ACAccount",&,N,V_appleAccount
hasMissingAssetStatusRecord
missingAssetStatusRecord
setMissingAssetStatusRecord:
_missingAssetStatusRecord
T@"CKDPRecordIdentifier",&,N,V_missingAssetStatusRecord
groupName
throttleTable:
loadThrottlesFromDatabase
invalidateAdopterThrottles
throttleWasAdded:
throttleWillBeRemoved:
throttleListBecameEmpty
noteDataChangeForThrottle:
_throttleTableGroup
_throttleTable
sharedURLSessionPool
backgroundSessionConnectionPoolName
_updateBackgroundSessionConnectionPoolLimit
backgroundSessionConnectionPoolLimit
_backgroundSessionConnectionPoolLimit
sectionsType
hasManifest
clearSections
addSections:
sectionsCount
sectionsAtIndex:
manifest
setManifest:
sections
setSections:
_manifest
_sections
T@"CKDPAsset",&,N,V_manifest
T@"NSMutableArray",&,N,V_sections
setAllAssets:
setHasAllAssets:
hasAllAssets
allAssets
_allAssets
TB,N,V_allAssets
requestedChangeTypes
setRequestedChangeTypes:
setHasRequestedChangeTypes:
hasRequestedChangeTypes
requestedChangeTypesAsString:
StringAsRequestedChangeTypes:
setIgnoreCallingDeviceChanges:
setHasIgnoreCallingDeviceChanges:
hasIgnoreCallingDeviceChanges
setIncludeMergeableDeltas:
setHasIncludeMergeableDeltas:
hasIncludeMergeableDeltas
ignoreCallingDeviceChanges
includeMergeableDeltas
_requestedChangeTypes
_ignoreCallingDeviceChanges
_includeMergeableDeltas
Ti,N,V_requestedChangeTypes
TB,N,V_ignoreCallingDeviceChanges
TB,N,V_includeMergeableDeltas
requestOperationsForRequest:replaceDeltasRequests:ignoreMissingDeltas:error:
initWithOperation:replaceDeltasRequests:ignoreMissingDeltas:
replaceDeltasRequests
setReplaceDeltasRequests:
perReplacementCompletionBlock
setPerReplacementCompletionBlock:
_replaceDeltasRequests
_perReplacementCompletionBlock
T@"NSArray",&,N,V_replaceDeltasRequests
T@?,C,N,V_perReplacementCompletionBlock
initWithOperation:unrecoveredRepairRecordID:
initWithOperation:recoveredAssetRepairRecordID:size:putReceipt:
initWithOperation:recoveredPackageRepairRecordID:sizes:putReceipts:
initWithOperation:repairRecordID:recovered:package:sizes:putReceipts:
T@"CKRecordID",C,N,V_repairRecordID
_locked_callbackForRecordZone:zoneID:error:
_locked_checkAndUpdateZonePCSIfNeededForZone:error:
_handleRecordZoneSaved:error:
saveZonesWithUpdatedZonePCS
_handleAnonymousZoneDataObjects:responsecode:
_continueHandlingFetchedRecordZone:zoneID:
_cachePCSOnRecordZone:
fetchZonesFromServer
fetchZonesFromServer:
checkPCSIdentity
recordZoneFetchedProgressBlock
setRecordZoneFetchedProgressBlock:
isFetchAllRecordZonesOperation
setIsFetchAllRecordZonesOperation:
zonesToSaveForPCSUpdateByZoneID
setZonesToSaveForPCSUpdateByZoneID:
zoneIDsNeedingPCSUpdateRetry
setZoneIDsNeedingPCSUpdateRetry:
pcsUpdateErrorsByZoneID
setPcsUpdateErrorsByZoneID:
zoneIDsNeedingDugongKeyRoll
setZoneIDsNeedingDugongKeyRoll:
ignorePCSFailures
setIgnorePCSFailures:
_isFetchAllRecordZonesOperation
_ignorePCSFailures
_recordZoneFetchedProgressBlock
_zonesToSaveForPCSUpdateByZoneID
_zoneIDsNeedingPCSUpdateRetry
_pcsUpdateErrorsByZoneID
_zoneIDsNeedingDugongKeyRoll
TB,N,V_isFetchAllRecordZonesOperation
T@"NSMutableDictionary",&,N,V_zonesToSaveForPCSUpdateByZoneID
T@"NSMutableArray",&,N,V_zoneIDsNeedingPCSUpdateRetry
T@"NSMutableDictionary",&,N,V_pcsUpdateErrorsByZoneID
T@"NSMutableSet",&,N,V_zoneIDsNeedingDugongKeyRoll
TB,N,V_ignorePCSFailures
T@"<CKFetchRecordZonesOperationCallbacks>",&,D,N
T@?,C,N,V_recordZoneFetchedProgressBlock
itemType
setItemType:
CKDPCSData
setCKDPCSData:
setShareID:
parentID
setParentID:
_itemType
_CKDPCSData
_parentID
T@"NSNumber",&,N,V_itemType
T@,&,N,V_CKDPCSData
T@"NSString",&,N,V_accountID
T@"NSString",&,N,V_zoneID
T@"NSString",&,N,V_shareID
T@"NSString",&,N,V_parentID
groupIdentifierForContainerID:accountOverrideInfo:
cacheTableGroupInDatabase:containerID:accountOverrideInfo:
cacheTable
cacheValidTime
deletePCSDataForZone:account:serviceName:
deletePCSDataForShare:account:serviceName:
deletePCSDataForID:databaseScope:itemType:accountID:serviceName:
PCSDataForID:databaseScope:itemType:accountID:serviceName:
evictPCSSQLCachesForKnownContainers
_lockedFetchPCSDataForID:databaseScope:itemType:
fetchPCSDataForRecordWithID:databaseScope:withCompletionHandler:
fetchPCSDataForZoneWithID:databaseScope:withCompletionHandler:
fetchPCSDataForShareWithID:databaseScope:withCompletionHandler:
_lockedSetPCSData:databaseScope:itemType:forID:
_setPCSData:forItemWithID:databaseScope:itemType:withCompletionHandler:
setZonePCSData:forZoneWithID:databaseScope:withCompletionHandler:
setRecordPCSData:forRecordWithID:databaseScope:withCompletionHandler:
setSharePCSData:forShareWithID:databaseScope:withCompletionHandler:
removePCSDataForItemsInZoneWithID:withCompletionHandler:
removePCSDataForItemsInShareWithID:withCompletionHandler:
clearInvalidatedCacheEntriesWithSkipZonePCS:completionHandler:
cacheRequestCount
setCacheRequestCount:
cacheHitCount
setCacheHitCount:
_cacheGroup
_table
_asyncQueue
_cacheRequestCount
_cacheHitCount
TQ,V_cacheRequestCount
TQ,V_cacheHitCount
initWithRecord:callbackQueue:
_setupDecryptCallbackForQueue:
decryptGroup
setDecryptGroup:
callback
setCallback:
numUnwrapAttempts
setNumUnwrapAttempts:
_decryptGroup
_callback
_numUnwrapAttempts
T@"CKRecord",R,N,V_record
T@"NSObject<OS_dispatch_group>",&,N,V_decryptGroup
T@?,C,N,V_callback
TQ,V_numUnwrapAttempts
decryptRecord:withCompletion:
_recordInfoWasDecrypted:nextSteps:
_clearProtectionDataForRecordInfo:
_decryptRecordInfo:
_decryptRecordInfo:usingWebSharingIdentityData:
_handleZoneProtectionDataForRecordInfo:
_decryptRecordPCSForRecord:usingZonePCS:
_decryptRecordPCSForRecord:usingSharePCS:
_decryptRecordPCSForRecord:usingChainPCS:
_handleShareProtectionDataForRecordInfo:
_handleProtectionDataForRecordInfo:
_unwrapAssetKeyForAsset:inRecordWithID:forField:withPCS:
_unwrapPackageAssets:inRecordWithID:forField:withPCS:
_unwrapMergeableRecordValue:inRecordWithID:forField:withPCS:
_unwrapEncryptedPropertiesForRecordValueStore:withPCS:
_unwrapEncryptedPropertiesOnRecord:withPCS:
finishDecryption
_finishDecryptOperation
outstandingDecryptions
setOutstandingDecryptions:
recordDecryptGroup
setRecordDecryptGroup:
isStarted
isMarkedToFinish
setMarkedToFinish:
recordDecryptQueue
setRecordDecryptQueue:
maxUnwrapAttempts
setMaxUnwrapAttempts:
_markedToFinish
_outstandingDecryptions
_recordDecryptGroup
_recordDecryptQueue
_maxUnwrapAttempts
T@"NSMutableArray",&,N,V_outstandingDecryptions
T@"NSObject<OS_dispatch_group>",&,N,V_recordDecryptGroup
TB,GisStarted,V_started
markedToFinish
TB,GisMarkedToFinish,V_markedToFinish
T@"NSObject<OS_dispatch_queue>",&,N,V_recordDecryptQueue
TQ,N,V_maxUnwrapAttempts
reportCKEventMetric:container:completionHandler:
infoFetchedGroup
_infoFetchedGroup
T@"NSObject<OS_dispatch_group>",R,N,V_infoFetchedGroup
initWithOperation:mergeableValueIDs:previousContinuationTokens:
previousContinuationTokens
mergeableValueIDsByRequestID
setMergeableValueIDsByRequestID:
_previousContinuationTokens
_mergeableValueIDsByRequestID
T@"NSMutableDictionary",&,N,V_mergeableValueIDsByRequestID
T@"NSDictionary",R,N,V_previousContinuationTokens
defaultContext
existingDefaultContext
deviceContextForTestDeviceReference:
pcsCacheForContainerID:accountOverrideInfo:accountID:encryptionServiceName:
_initWithTestDeviceReference:
testServer
isLiveDevice
metadataCache
throttleManager
tokenRegistrationScheduler
pushBehavior
deviceScopedPushTopic:
testDeviceReference
deviceScopedDatabase
setDeviceScopedDatabase:
deviceScopedStateManager
setDeviceScopedStateManager:
accountDataSecurityObserver
setAccountDataSecurityObserver:
setTestServer:
setMetadataCache:
setThrottleManager:
setTokenRegistrationScheduler:
sharedPcsCaches
setSharedPcsCaches:
_testDeviceReference
_deviceScopedDatabase
_deviceScopedStateManager
_accountDataSecurityObserver
_testServer
_metadataCache
_throttleManager
_tokenRegistrationScheduler
_sharedPcsCaches
T@"CKTestServer",&,N,V_testServer
T@"CKDMetadataCache",&,N,V_metadataCache
T@"CKDThrottleManager",&,N,V_throttleManager
T@"CKDLogicalDeviceScopedStateManager",&,N,V_deviceScopedStateManager
T@"CKDTokenRegistrationScheduler",&,N,V_tokenRegistrationScheduler
T@"CKDAccountDataSecurityObserver",&,N,V_accountDataSecurityObserver
T@"CKSQLiteDatabase",&,N,V_deviceScopedDatabase
T@"NSHashTable",&,N,V_sharedPcsCaches
T@"CKTestDeviceReference",R,N,V_testDeviceReference
T@"CKTestDevice",R,N
storageGroupingPolicy
uploadRank
setMMCSManifestItem:
setMMCSSectionItems:
MMCSManifestItem
MMCSSectionItems
_MMCSManifestItem
_MMCSSectionItems
T@"CKDMMCSItem",&,N,V_MMCSManifestItem
T@"NSArray",&,N,V_MMCSSectionItems
initWithIdentitySet:withPrimaryServiceName:
identityString
identitySet
primaryServiceName
_identityString
_identitySet
_primaryServiceName
T^{_PCSIdentitySetData=},R,N,V_identitySet
T@"NSString",R,N,V_primaryServiceName
T@"NSString",R,N,V_identityString
_copyStingrayIdentitiesForService:forBackingExplicitCredentialsAccount:withError:
sharedFakeIdentitySetsByServiceByUsername
_getTestAccountIdentitySetForService:forBackingExplicitCredentialsAccount:withError:
_generatePCSIdentityOptionsForService:forBackingExplicitCredentialsAccount:withError:
_rollTestAccountIdentitySetForService:forBackingExplicitCredentialsAccount:withError:
sharedMockIdentitySetsByServiceByIdentifier
overrideKeys
initWithAccount:deviceContext:serviceName:forceEnableReadOnlyManatee:clientSDKVersion:
updateAccount:
identitiesChanged
_cacheIdentitySet:forService:
_copyIdentityForService:useCache:validateCurrentKey:error:
_createIdentitySetForService:dsid:error:
copyIdentitySetWithType:options:error:
createFullKeychainIdentitySetWithError:
liverpoolServiceOwnsPublicID:
copyDiversifiedIdentityForService:userIDEntropy:withError:
copyDiversifiedPublicKeyForService:userIDEntropy:withError:
_copyPublicKeyDataForAllIdentitiesInSet:withService:
_copyPublicKeyDataForIdentitySet:withService:withError:
_addIdentitiesFromServiceNamed:dsid:toMutableSet:
_createSpecialInMemorySetCombiningLiverpoolWithServiceNamed:dsid:error:
_copyTestAccountIdentitySetForService:forBackingExplicitCredentialsAccount:withError:
_copyStingrayIdentitiesForBackingMockAccount:withError:
_setStingrayIdentitySet:forServiceName:backingMockAccount:withError:
_getTestAccountIdentitySetForService:forBackingMockAccount:withError:
_copyTestAccountIdentitySetForService:forBackingMockAccount:withError:
isManateeAvailableWithError:
serviceIsManatee:
identitySet:containsPublicKey:error:
_hasCurrentKeyForService:inIdentitySet:withError:
internalServicesToCombineWithLiverpoolKey
PCSServiceStringFromCKServiceType:
clearOverrides
setOverride:value:
cachedAccountDSID
setCachedAccountDSID:
PCSIdentityWrappersByServiceName
setPCSIdentityWrappersByServiceName:
debugIdentity
setDebugIdentity:
forceSecurityErrorOnIdentityValidation
setForceSecurityErrorOnIdentityValidation:
forceManateeUnavailableForUnitTests
setForceManateeUnavailableForUnitTests:
serviceIsManateeForUnitTests
setServiceIsManateeForUnitTests:
refetchPCSIdentitySet
setRefetchPCSIdentitySet:
_forceSecurityErrorOnIdentityValidation
_forceManateeUnavailableForUnitTests
_serviceIsManateeForUnitTests
_refetchPCSIdentitySet
_cachedAccountDSID
_PCSIdentityWrappersByServiceName
_debugIdentity
T@"NSString",&,V_cachedAccountDSID
T@"NSMutableDictionary",&,V_PCSIdentityWrappersByServiceName
T^{_PCSIdentityData=},N,V_debugIdentity
TB,N,V_forceSecurityErrorOnIdentityValidation
TB,N,V_forceManateeUnavailableForUnitTests
TB,N,V_serviceIsManateeForUnitTests
TB,N,V_refetchPCSIdentitySet
T@"NSString",R,N,V_serviceName
T@"CKDPCodeFunctionInvokeResponseAttestationResponse",&,N,V_attestationResponse
_initWithParentAccount:
operationWithID:receivedCallback:
wasUnexpectedlyUnregisteredForOperationID:
isInvalidated
invalidated
TB,R,N,GisInvalidated
initWithRecordID:fileSignature:referenceSignature:size:
T@"CKDPRecordIdentifier",R,N,V_recordID
T@"NSData",R,N,V_fileSignature
T@"NSData",R,N,V_referenceSignature
T@"NSNumber",R,N,V_size
setPCSData:forFetchedRecordID:
setPCSData:forFetchedZoneID:
setPCSData:forFetchedShareID:
_handleRetrievedPrivacySettings:
uploadTokensType
contentResponseHeadersType
clearUploadTokens
addUploadTokens:
uploadTokensCount
uploadTokensAtIndex:
hasAuthPutResponse
clearContentResponseHeaders
addContentResponseHeaders:
contentResponseHeadersCount
contentResponseHeadersAtIndex:
uploadTokens
setUploadTokens:
contentResponseHeaders
setContentResponseHeaders:
_contentResponseHeaders
_uploadTokens
T@"NSMutableArray",&,N,V_uploadTokens
T@"NSMutableArray",&,N,V_contentResponseHeaders
_performCallbackForURL:withShare:error:
_handleShareURLAccepted:forShare:responseCode:
_acceptShares
sharingServiceTypeForShareMetadata:
_decryptShareMetadata
_fetchAcceptedShares
_validateInvitedPCSCanBeDecryptedForShare:
_keySwapForOONParticipant:
_callingParticipantOONForShareMetadata:
_prepareShareMetadata
_fetchMetadataForShares
_processAnonymousShares
acceptCompletionBlock
setAcceptCompletionBlock:
clientProvidedMetadatasByURL
setClientProvidedMetadatasByURL:
shareURLsToAccept
setShareURLsToAccept:
acceptedShareURLsToFetch
setAcceptedShareURLsToFetch:
shareMetadatasToAcceptByURL
setShareMetadatasToAcceptByURL:
numShareAcceptAttempts
setNumShareAcceptAttempts:
anonymousShareTuplesAcceptAttempted
setAnonymousShareTuplesAcceptAttempted:
anonymousShareTuplesAccepted
setAnonymousShareTuplesAccepted:
_acceptCompletionBlock
_clientProvidedMetadatasByURL
_shareURLsToAccept
_acceptedShareURLsToFetch
_shareMetadatasToAcceptByURL
_numShareAcceptAttempts
_anonymousShareTuplesAcceptAttempted
_anonymousShareTuplesAccepted
T@"NSMutableDictionary",&,N,V_clientProvidedMetadatasByURL
T@"NSMutableArray",&,N,V_shareURLsToAccept
T@"NSMutableArray",&,N,V_acceptedShareURLsToFetch
T@"NSMutableDictionary",&,N,V_shareMetadatasToAcceptByURL
TQ,N,V_numShareAcceptAttempts
T@"NSMutableDictionary",&,N,V_anonymousShareTuplesAcceptAttempted
T@"NSMutableArray",&,N,V_anonymousShareTuplesAccepted
T@"<CKAcceptSharesOperationCallbacks>",&,D,N
T@?,C,N,V_acceptCompletionBlock
hasUuid
setUuid:
T@"NSString",&,N,V_uuid
initWithOperation:recordIDs:desiredKeys:minimumVersionETag:
recordVersionsFetchedBlock
setRecordVersionsFetchedBlock:
recordIDByRequestID
setRecordIDByRequestID:
_recordVersionsFetchedBlock
_recordIDByRequestID
T@"NSMutableDictionary",&,N,V_recordIDByRequestID
T@?,C,N,V_recordVersionsFetchedBlock
_recordPCS
T^{_OpaquePCSShareProtection=},N,V_recordPCS
initWithOperation:moveChanges:sourceDatabaseScope:atomic:
recordPostedBlock
setRecordPostedBlock:
moveChanges
setMoveChanges:
recordByRequestID
setRecordByRequestID:
_recordPostedBlock
_moveChanges
_recordByRequestID
T@"NSArray",&,N,V_moveChanges
T@"NSMutableDictionary",&,N,V_recordByRequestID
T@?,C,N,V_recordPostedBlock
_finishGenerator
updateWithData:
dataByFinishingSignature
generator
setGenerator:
isValid
setValid:
_valid
_generator
T^v,N,V_generator
valid
TB,N,GisValid,V_valid
hasEncryptedInvocationKey
hasProtectionSource
setKeyVersion:
setHasKeyVersion:
hasKeyVersion
scheme
setScheme:
setHasScheme:
hasScheme
schemeAsString:
StringAsScheme:
encryptedInvocationKey
setEncryptedInvocationKey:
protectionSource
setProtectionSource:
keyVersion
_keyVersion
_encryptedInvocationKey
_protectionSource
_scheme
T@"NSData",&,N,V_encryptedInvocationKey
T@"NSString",&,N,V_protectionSource
Tq,N,V_keyVersion
Ti,N,V_scheme
objectForKeyedSubscript:
standaloneTranslatorWithPackageStagingDirectory:databaseScope:
_initWithContainerScopedUserID:orgAdminUserID:packageStagingDirectory:databaseScope:addDatabaseScopeToZoneIDs:
initWithContainer:databaseScope:
initWithContainer:databaseScope:requireContainerScopedUserID:
consumeResponseHeader:
_isDefaultUserNameFromServer:
_isDefaultUserNameFromClient:
pUserID
recordIDFromPUserName:error:
pIdentifierFromUserRecordID:
pUserIdentifierFromUserRecordName:
pContainerScopedUserIdentifierFromPUserIdentifier:
pRecordIdentifierFromUserRecordName:
userNameFromPIdentifier:error:
recordIDFromPRecordIdentifier:asAnonymousCKUserID:error:
recordIDFromPRecordIdentifier:error:
pRecordIdentifierFromRecordID:
pContainerScopedRecordIdentifierWithPRecordIdentifier:
recordZoneIDFromPRecordZoneIdentifier:asAnonymousCKUserID:error:
recordZoneIDFromPRecordZoneIdentifier:error:
pRecordZoneIdentifierFromRecordZoneID:
pContainerScopedRecordZoneIdentifierFromFromPRecordZoneIdentifier:
pShareIdentifierFromRecordID:
recordIDFromPShareIdentifier:asAnonymousCKUserID:error:
recordIDFromPShareIdentifier:error:
referenceFromPReference:error:
referenceFromPReference:asAnonymousCKUserID:error:
pReferenceFromReference:error:
recordFromPRecord:error:
recordFromPRecord:asAnonymousCKUserID:error:
_valueTypeIsAnEncryptedBytesTypeForField:
_pRecordFromRecordSansValues:forCache:
pRecordFromRecord:forCache:
pRecordFromRecord:
deltaPRecordFromRecord:withAllFields:outDeletedMergeFields:outKeysToSend:
assetFromPAsset:error:
pAssetFromAsset:
packageFromPPackage:error:
pPackageFromPackage:
pStreamingAssetFromStreamingAsset:forCache:
streamingAssetFromPStreamingAsset:error:
pMergeableValueIdentifierFromMergeableValueID:
mergeableValueIDFromPMergeableValueIdentifier:recordName:fieldName:encrypted:error:
mergeableRecordValueFromPRecordField:inPRecordIdentifier:asAnonymousCKUserID:error:
pMergeableValueFromMergeableValueID:
pEncryptedMergeableValueFromRecordValue:
mergeableDeltaFromPDelta:valueID:error:
pMergeableDeltaFromDelta:error:
mergeableDeltaMetadataFromPMetadata:mergeableValueID:error:
mergeTimestamps:intoDeltaMetadata:error:
pMergeableDeltaMetadataFromMetadata:mergeableValueID:error:
pQueryFromQuery:error:
subscriptionFromPSubscription:error:
pSubscriptionFromSubscription:error:
recordZoneFromPRecordZone:error:
recordZoneFromPRecordZone:asAnonymousCKUserID:error:
pRecordZoneFromRecordZone:
capabilitiesFromPZoneCapabilities:
containerPrivacySettingsFromPContainerPrivacySettings:
shareFromPShare:error:
shareFromPShare:asAnonymousCKUserID:error:
pShareFromShare:forCache:
shareParticipantFromPParticipant:error:
pParticipantFromShareParticipant:forCache:
notificationFromPPushMessage:
pAliasWithIdentityLookupInfo:
pAliasWithEmailAddress:
pAliasWithPhoneNumber:
pAliasWithHashedStringID:type:
pAliasWithUserRecordID:
identityFromPUser:
throttleFromPThrottlingConfig:
dontCreateValidatingParentReferences
setDontCreateValidatingParentReferences:
setPackageStagingDirectory:
identityDelegate
setIdentityDelegate:
overriddenContainerScopedUserID
setOverriddenContainerScopedUserID:
overriddenDatabaseScope
setOverriddenDatabaseScope:
addDatabaseScopeToZoneIDs
setAddDatabaseScopeToZoneIDs:
downloadPreauthorizationMap
setDownloadPreauthorizationMap:
_dontCreateValidatingParentReferences
_addDatabaseScopeToZoneIDs
_identityDelegate
_overriddenContainerScopedUserID
_overriddenDatabaseScope
_downloadPreauthorizationMap
T@"NSString",C,N,V_overriddenContainerScopedUserID
Tq,N,V_overriddenDatabaseScope
T@"NSString",C,N,V_packageStagingDirectory
TB,N,V_addDatabaseScopeToZoneIDs
T@"NSMutableDictionary",&,N,V_downloadPreauthorizationMap
TB,N,V_dontCreateValidatingParentReferences
T@"CKDPIdentifier",R,N
Tq,R,N,V_databaseScope
T@"<CKDProtocolTranslatorIdentityDelegate>",W,N,V_identityDelegate
initWithOperation:recordIDs:recordIDsToEtags:recordIDsToVersionETags:desiredKeys:
requestedListFieldsForDesiredIndexedListKeys
setDesiredIndexedListKeys:
recordCount
setRecordCount:
_desiredIndexedListKeys
_recordCount
TQ,N,V_recordCount
T@"NSArray",&,N,V_desiredIndexedListKeys
replacedDeltaIdentifiersType
hasEncryptedTimestamps
hasTimestamps
hasTimestampsAuthTag
clearReplacedDeltaIdentifiers
addReplacedDeltaIdentifiers:
replacedDeltaIdentifiersCount
replacedDeltaIdentifiersAtIndex:
timestamps
setTimestamps:
timestampsAuthTag
setTimestampsAuthTag:
replacedDeltaIdentifiers
setReplacedDeltaIdentifiers:
_encryptedTimestamps
_replacedDeltaIdentifiers
_timestamps
_timestampsAuthTag
T@"NSData",&,N,V_encryptedTimestamps
T@"CKDPDistributedTimestamps",&,N,V_timestamps
T@"NSData",&,N,V_timestampsAuthTag
T@"NSMutableArray",&,N,V_replacedDeltaIdentifiers
discoverableTrinary
setDiscoverableTrinary:
_discoverableTrinary
Tq,N,V_discoverableTrinary
T@"NSString",C,N,V_bundleID
_replaceMergeableDeltas
T@"<CKReplaceMergeableDeltasOperationCallbacks>",&,D,N
initWithPCSData:
shouldEncodePCSData
setPcs:
pcsKeyID
setPcsKeyID:
_pcs
_pcsKeyID
T@"NSString",&,N,V_pcsKeyID
T@"<NSSecureCoding>",R,N
T^{_OpaquePCSShareProtection=},N,V_pcs
T@"NSString",C,N,V_etag
T@"NSData",C,N,V_pcsData
initWithPCSData:encryptedPrivateKey:
encryptedChainPCSPrivateKey
_encryptedChainPCSPrivateKey
T@"CKEncryptedData",R,N,V_encryptedChainPCSPrivateKey
dataWithRecord:
initWithPCSData:recordID:
initWithRecord:
setSigningPCS:
chainParentPublicKeyID
setChainParentPublicKeyID:
zoneishPublicKeyID
setZoneishPublicKeyID:
signingPCS
setChainPCSData:
encryptedPublicSharingKey
setEncryptedPublicSharingKey:
_chainParentPublicKeyID
_zoneishPublicKeyID
_signingPCS
_chainPCSData
_encryptedPublicSharingKey
T@"CKRecordID",&,N,V_parentID
T@"NSData",&,N,V_chainParentPublicKeyID
T@"NSData",&,N,V_zoneishPublicKeyID
T@"CKRecordID",&,N,V_shareID
T^{_OpaquePCSShareProtection=},N,V_signingPCS
T@"CKDChainPCSData",&,N,V_chainPCSData
T@"CKEncryptedData",&,N,V_encryptedPublicSharingKey
dataWithZone:
initWithZone:
zoneishPCSData
setZoneishPCSData:
zonePCSModificationDate
setZonePCSModificationDate:
_zoneishPCS
_zoneishPCSData
_zonePCSModificationDate
T@"NSData",C,N,V_zoneishPCSData
T@"NSDate",&,N,V_zonePCSModificationDate
dataWithShare:serviceType:
dataWithShareID:pcsData:
initWithShareID:pcsData:
setInvitedPCS:
invitedPCS
setMyParticipantPCS:
setPreKeyRollInvitedPCS:
setServiceType:
publicPermission
setPublicPermission:
myParticipantRole
setMyParticipantRole:
myParticipantPermission
setMyParticipantPermission:
myParticipantPCS
myParticipantPCSData
setMyParticipantPCSData:
preKeyRollInvitedPCS
_serviceType
_publicPermission
_myParticipantRole
_myParticipantPermission
_myParticipantPCS
_myParticipantPCSData
_preKeyRollInvitedPCS
_publicPCS
TQ,N,V_serviceType
Tq,N,V_publicPermission
Tq,N,V_myParticipantRole
Tq,N,V_myParticipantPermission
T^{_OpaquePCSShareProtection=},N,V_myParticipantPCS
T@"NSData",C,N,V_myParticipantPCSData
T^{_OpaquePCSShareProtection=},N,V_preKeyRollInvitedPCS
T^{_OpaquePCSShareProtection=},N,V_publicPCS
T@"NSString",C,N,V_publicPCSEtag
T@"NSData",C,N,V_publicPCSData
setHasDiscoverable:
hasDiscoverable
TB,N,V_discoverable
hasPath
hasUser
user
setUser:
_user
T@"CKDPRecord",&,N,V_user
CKSQLiteClassName
volumeIndex
setVolumeIndex:
volumeUUID
setVolumeUUID:
_volumeIndex
_volumeUUID
T@"NSNumber",&,N,V_volumeIndex
T@"NSUUID",&,N,V_volumeUUID
setNumericValue:
setHasNumericValue:
hasNumericValue
setHasIdentifier:
identifierAsString:
StringAsIdentifier:
clearOneofValuesForIdentifier
numericValue
_numericValue
TQ,N,V_numericValue
Ti,N,V_identifier
badgeValue
_badgeValue
TQ,R,N,V_badgeValue
initWithOperation:badgeValue:
setHasServiceType:
hasServiceType
serviceTypeAsString:
StringAsServiceType:
hasConfig
config
setConfig:
_config
Ti,N,V_serviceType
T@"CKCDPCodeServiceRequestServiceClientConfig",&,N,V_config
setHasOperationType:
hasOperationType
operationTypeAsString:
StringAsOperationType:
setDuration:
setHasDuration:
hasDuration
setHasExpirationTime:
duration
_duration
TQ,N,V_duration
Td,N,V_expirationTime
newRangeWithOperationState:startDate:duration:
queueing
setQueueing:
executing
setExecuting:
bytesUploaded
setBytesUploaded:
bytesDownloaded
setBytesDownloaded:
connections
setConnections:
connectionsCreated
setConnectionsCreated:
totalBytesByChunkProfile
chunkCountByChunkProfile
fileCountByChunkProfile
rangesCopy
T@"NSDate",R
Td,R
T@"NSMutableDictionary",R
T@"NSMutableSet",R
T@"NSArray",R
_initWithStartDate:
requestOperationCountsByType
addRequestOperationCountsByOperationType:
addCKSpecificMetricsFromMetrics:
recordsUploaded
setRecordsUploaded:
recordsDownloaded
setRecordsDownloaded:
recordsDeleted
setRecordsDeleted:
assetsUploaded
setAssetsUploaded:
assetsUploadedFileSize
setAssetsUploadedFileSize:
assetsDownloaded
setAssetsDownloaded:
assetsDownloadedFileSize
setAssetsDownloadedFileSize:
requestCount
setRequestCount:
retries
setRetries:
setRequestOperationCountsByType:
setTotalBytesByChunkProfile:
setChunkCountByChunkProfile:
setFileCountByChunkProfile:
_queueing
_executing
_bytesUploaded
_bytesDownloaded
_connections
_connectionsCreated
_recordsUploaded
_recordsDownloaded
_recordsDeleted
_assetsUploaded
_assetsUploadedFileSize
_assetsDownloaded
_assetsDownloadedFileSize
_requestCount
_retries
_requestOperationCountsByType
_totalBytesByChunkProfile
_chunkCountByChunkProfile
_fileCountByChunkProfile
T@"NSDate",&,V_startDate
Td,V_duration
Td,V_queueing
Td,V_executing
TQ,V_bytesUploaded
TQ,V_bytesDownloaded
TQ,V_connections
TQ,V_connectionsCreated
TQ,V_recordsUploaded
TQ,V_recordsDownloaded
TQ,V_recordsDeleted
TQ,V_assetsUploaded
TQ,V_assetsUploadedFileSize
TQ,V_assetsDownloaded
TQ,V_assetsDownloadedFileSize
TQ,V_requestCount
TQ,V_retries
T@"NSMutableSet",R,V_requestUUIDs
T@"NSMutableDictionary",&,N,V_requestOperationCountsByType
T@"NSMutableDictionary",&,N,V_totalBytesByChunkProfile
T@"NSMutableDictionary",&,N,V_chunkCountByChunkProfile
T@"NSMutableDictionary",&,N,V_fileCountByChunkProfile
initWithMMCSOperationMetric:
compareStartTime:
compareStopTime:
operationState
absoluteStart
absoluteStop
initWithOperationState:startDate:duration:
relativeStart
_operationState
TQ,R,V_operationState
Td,R,V_duration
initWithCloudKitMetrics:andMMCSMetrics:
T@"CKDOperationMetrics",R,C,N,V_cloudKitMetrics
T@"CKDOperationMetrics",R,C,N,V_MMCSMetrics
weAreNeverEverEverUsingEncryption:
PCSManagerSuperclass
setPCSManagerSuperclass:
_PCSManagerSuperclass
T#,&,N,V_PCSManagerSuperclass
T@"CKDPUser",&,N,V_user
_addAnonymousSharesToSharedDB
initWithOperation:recordsToSave:recordIDsToDelete:recordIDsToDeleteToSigningPCSIdentity:oplock:sendAllFields:clientChangeTokenData:requestedFieldsByRecordId:
generateMergeableDeltaSaveOperationsForRecord:error:
sendMergeableDeltas
setSendMergeableDeltas:
mergeableDeltaSavedBlock
setMergeableDeltaSavedBlock:
replacedDeltasBlock
setReplacedDeltasBlock:
oplock
setOplock:
sendAllFields
setSendAllFields:
requestedFieldsByRecordID
setRequestedFieldsByRecordID:
mergeableFieldKeyByRequestID
setMergeableFieldKeyByRequestID:
containsMergeableValues
setContainsMergeableValues:
skippedRecordsWithPurelyMergeableChanges
setSkippedRecordsWithPurelyMergeableChanges:
_sendMergeableDeltas
_oplock
_sendAllFields
_containsMergeableValues
_mergeableDeltaSavedBlock
_replacedDeltasBlock
_requestedFieldsByRecordID
_mergeableFieldKeyByRequestID
_skippedRecordsWithPurelyMergeableChanges
T@"NSArray",&,N,V_records
TB,N,V_oplock
TB,N,V_sendAllFields
T@"NSData",&,N,V_clientChangeTokenData
T@"NSDictionary",&,N,V_requestedFieldsByRecordID
T@"NSMutableDictionary",&,N,V_mergeableFieldKeyByRequestID
TB,N,V_containsMergeableValues
T@"NSMutableArray",&,N,V_skippedRecordsWithPurelyMergeableChanges
TB,N,V_sendMergeableDeltas
T@?,C,N,V_mergeableDeltaSavedBlock
T@?,C,N,V_replacedDeltasBlock
_initWithUUID:requestMetadata:requestObjects:bodyStreamResetCount:responseMetadata:responseObjects:
requestTime
setRequestTime:
requestMethod
setRequestMethod:
requestURL
setRequestURL:
requestHeaders
setRequestHeaders:
bodyStreamResetCount
setBodyStreamResetCount:
requestObjects
setRequestObjects:
responseStatus
setResponseStatus:
responseTime
responseObjects
setResponseObjects:
_requestTime
_requestMethod
_requestURL
_requestHeaders
_bodyStreamResetCount
_requestObjects
_responseStatus
_responseTime
_responseObjects
T@"NSDate",&,N,V_requestTime
T@"NSString",&,N,V_requestMethod
T@"NSURL",&,N,V_requestURL
T@"NSDictionary",&,N,V_requestHeaders
Tq,N,V_bodyStreamResetCount
T@"NSArray",&,N,V_requestObjects
Tq,N,V_responseStatus
T@"NSDictionary",&,N,V_responseHeaders
T@"NSArray",&,N,V_responseObjects
T@"NSDate",R,N,V_responseTime
clientConfigType
serializationFormat
setSerializationFormat:
setHasSerializationFormat:
hasSerializationFormat
serializationFormatAsString:
StringAsSerializationFormat:
clearClientConfigs
addClientConfig:
clientConfigsCount
clientConfigAtIndex:
hasAccountConfig
hasRequestContext
hasAuthInformation
dataProtection
setDataProtection:
setHasDataProtection:
hasDataProtection
dataProtectionAsString:
StringAsDataProtection:
clearOneofValuesForDataProtection
clientConfigs
setClientConfigs:
accountConfig
setAccountConfig:
requestContext
setRequestContext:
authInformation
setAuthInformation:
_accountConfig
_authInformation
_clientConfigs
_dataProtection
_requestContext
_serializationFormat
Ti,N,V_serializationFormat
T@"NSMutableArray",&,N,V_clientConfigs
T@"CKCDPCodeServiceRequestAccountConfig",&,N,V_accountConfig
T@"CKCDPCodeServiceRequestRequestContext",&,N,V_requestContext
T@"CKCDPCodeServiceRequestAssetAuthorizeGetRequestOptions",&,N,V_assetAuthorizeGetRequestOptions
T@"CKCDPCodeServiceRequestAttestationRequest",&,N,V_attestationRequest
T@"CKCDPCodeServiceRequestAuthInformation",&,N,V_authInformation
T@"CKCDPCodeServiceRequestProtectedCloudComputeMetadata",&,N,V_protectedCloudComputeMetadata
Ti,N,V_dataProtection
changedZonesType
clearChangedZones
addChangedZones:
changedZonesCount
changedZonesAtIndex:
changedZones
setChangedZones:
_changedZones
T@"NSMutableArray",&,N,V_changedZones
encrypt:
decrypt:
T@"NSData",&,N,V_key
setClientVersionETagMatch:
setHasClientVersionETagMatch:
hasClientVersionETagMatch
clientVersionETagMatch
_clientVersionETagMatch
TB,N,V_clientVersionETagMatch
databaseType
setDatabaseType:
setHasDatabaseType:
hasDatabaseType
databaseTypeAsString:
StringAsDatabaseType:
hasZoneName
hasBundleID
hasInvernessServiceName
hasInvernessFunctionName
zoneName
setZoneName:
invernessServiceName
setInvernessServiceName:
invernessFunctionName
setInvernessFunctionName:
_databaseType
_invernessFunctionName
_invernessServiceName
_zoneName
Ti,N,V_databaseType
T@"NSString",&,N,V_zoneName
T@"NSString",&,N,V_invernessServiceName
T@"NSString",&,N,V_invernessFunctionName
volumeForPath:
mountedVolumes
initWithVolumeUUID:deviceID:mountToPath:
isRootVolume
mountPath
_mountPath
T@"NSUUID",R,N,V_volumeUUID
T@"NSNumber",R,N,V_deviceID
T@"NSString",R,N,V_mountPath
initWithAssetZone:
addAssetRecord:
failIfNotDoneAllRegularAndSectionAndRereferenceItemsWithError:
isPackageSectionBatch
isRereferenceAssetBatch
isEmptyOfAssets
assetZone
setAssetZone:
isFailed
setIsFailed:
useMMCSEncryptionV2
setUseMMCSEncryptionV2:
_isFailed
_useMMCSEncryptionV2
_assetZone
T@"NSMutableArray",&,N,V_assetRecords
T@"CKDAssetZone",&,N,V_assetZone
TB,N,V_isFailed
T@"CKDAssetTokenRequest",W,N,V_assetTokenRequest
TB,N,V_useMMCSEncryptionV2
_fetchAssetMetadata
_uploadAssetsModify
_updateMissingAssetServerStatus
assetOrPackageForMetadata:inRecord:
assetOrPackageRepairedBlock
setAssetOrPackageRepairedBlock:
UUIDToAssetOrPackage
setUUIDToAssetOrPackage:
assetOrPackageUUIDToMetadata
setAssetOrPackageUUIDToMetadata:
unavailableAssetsAndPackages
setUnavailableAssetsAndPackages:
uploadOperation
setUploadOperation:
updateOperation
setUpdateOperation:
assetOrPackageUUIDToOriginalRecord
setAssetOrPackageUUIDToOriginalRecord:
assetOrPackageUUIDToUploadError
setAssetOrPackageUUIDToUploadError:
uploadedAssetOrPackageUUIDs
setUploadedAssetOrPackageUUIDs:
_assetOrPackageRepairedBlock
_UUIDToAssetOrPackage
_assetOrPackageUUIDToMetadata
_unavailableAssetsAndPackages
_uploadOperation
_updateOperation
_assetOrPackageUUIDToOriginalRecord
_assetOrPackageUUIDToUploadError
_uploadedAssetOrPackageUUIDs
T@"NSDictionary",&,N,V_UUIDToAssetOrPackage
T@"NSDictionary",&,N,V_assetOrPackageUUIDToMetadata
T@"NSArray",&,N,V_unavailableAssetsAndPackages
T@"CKDOperation",&,N,V_fetchOperation
T@"CKDOperation",&,N,V_uploadOperation
T@"CKDOperation",&,N,V_updateOperation
T@"NSMutableDictionary",&,N,V_assetOrPackageUUIDToOriginalRecord
T@"NSDictionary",&,N,V_assetOrPackageUUIDToUploadError
T@"NSSet",&,N,V_uploadedAssetOrPackageUUIDs
T@"<CKRepairAssetsOperationCallbacks>",&,D,N
T@?,C,N,V_assetOrPackageRepairedBlock
_sizeForItem:
initWithTrackingID:
startTrackingItems:
stopTrackingItems:
_updateTotalBytes
_updateTotalCompletedBytes
updateProgressWithItem:progress:
lastItemPercentage
setLastItemPercentage:
hasCachedTotalBytes
setHasCachedTotalBytes:
hasCachedCompletedBytes
setHasCachedCompletedBytes:
cachedTotalBytes
setCachedTotalBytes:
cachedCompletedBytes
setCachedCompletedBytes:
completedBytesByItems
setCompletedBytesByItems:
trackingID
setTrackingID:
_hasCachedTotalBytes
_hasCachedCompletedBytes
_lastItemPercentage
_cachedTotalBytes
_cachedCompletedBytes
_completedBytesByItems
_trackingID
TB,N,V_hasCachedTotalBytes
TB,N,V_hasCachedCompletedBytes
TQ,N,V_cachedTotalBytes
TQ,N,V_cachedCompletedBytes
T@"NSMapTable",&,N,V_completedBytesByItems
T@"NSString",&,N,V_trackingID
Td,N,V_lastItemPercentage
_lockedFetchesAreReady
_lockedTearDownFetchTimer
_lockedRescheduleFetchTimer
_lockedGetQueuedFetchForOperation:ofClass:
fetchRequestForExistingOperation:isDependentOnOperation:
requestFetchOfRecordWithID:forOperation:withCompletionHandler:
requestFetchOfShareWithID:forOperation:withCompletionHandler:
requestFetchOfZoneWithID:forOperation:withCompletionHandler:
opQueue
setOpQueue:
queuedFetches
setQueuedFetches:
runningFetches
setRunningFetches:
fetchCoalescer
setFetchCoalescer:
timerSource
setTimerSource:
skipQueuedFetchCycleDetection
setSkipQueuedFetchCycleDetection:
_skipQueuedFetchCycleDetection
_opQueue
_queuedFetches
_runningFetches
_fetchCoalescer
_timerSource
T@"NSObject<OS_dispatch_queue>",&,N,V_opQueue
T@"NSOperationQueue",&,N,V_queue
T@"NSMutableArray",&,N,V_queuedFetches
T@"NSMutableArray",&,N,V_runningFetches
T@"CKCoalescer",&,N,V_fetchCoalescer
T@"NSObject<OS_dispatch_source>",&,N,V_timerSource
TB,N,V_skipQueuedFetchCycleDetection
setMaxChangedZones:
setHasMaxChangedZones:
hasMaxChangedZones
maxChangedZones
_maxChangedZones
TI,N,V_maxChangedZones
T@"<CKFetchArchivedRecordsOperationCallbacks>",&,D,N
descriptionWithStatus:
mayBeEvicted
shouldBeUnregisteredBeforeDeleted
mayHaveAssetCacheManagedFile
statusDescription
initWithItemID:UUID:path:
isEqualToAssetHandle:keys:differencesDescription:
isEqualRevisionOfAssetHandle:differencesDescription:
UUID
setUUID:
lastUsedTime
setLastUsedTime:
modTime
setModTime:
_UUID
_lastUsedTime
_modTime
T@"NSNumber",&,N,V_itemID
T@"NSUUID",&,N,V_UUID
T@"NSDate",&,N,V_lastUsedTime
T@"NSNumber",&,N,V_status
T@"NSDate",&,N,V_modTime
T@"NSNumber",&,N,V_fileSize
T@"NSNumber",&,N,V_chunkCount
databaseEnvironment
setDatabaseEnvironment:
setHasDatabaseEnvironment:
hasDatabaseEnvironment
databaseEnvironmentAsString:
StringAsDatabaseEnvironment:
hasDeviceId
hasApplicationBundleId
hasClientInfo
setHasDsid:
hasDsid
hasUserAgent
hasOperationGroup
hasDatabaseOwnerId
deviceId
setDeviceId:
applicationBundleId
setApplicationBundleId:
clientInfo
setClientInfo:
userAgent
setUserAgent:
operationGroup
setOperationGroup:
databaseOwnerId
setDatabaseOwnerId:
_applicationBundleId
_clientInfo
_databaseEnvironment
_databaseOwnerId
_deviceId
_operationGroup
_userAgent
T@"NSString",&,N,V_userId
Ti,N,V_databaseEnvironment
T@"NSString",&,N,V_deviceId
T@"NSString",&,N,V_applicationBundleId
T@"NSString",&,N,V_clientInfo
TQ,N,V_dsid
T@"NSString",&,N,V_userAgent
T@"CKCDPCodeServiceRequestOperationGroup",&,N,V_operationGroup
T@"CKCDPCodeServiceRequestDatabaseOwner",&,N,V_databaseOwnerId
initWithOperation:notificationIDsToMarkRead:
notificationMarkedReadProgressBlock
setNotificationMarkedReadProgressBlock:
notificationIDsByRequestID
setNotificationIDsByRequestID:
_notificationMarkedReadProgressBlock
_notificationIDsByRequestID
T@"NSMutableDictionary",&,N,V_notificationIDsByRequestID
T@?,C,N,V_notificationMarkedReadProgressBlock
dumpAllClientsStatusReportToFileHandle:completionHandler:
clearPCSCachesForKnownContainersWithCompletionHandler:
accountsDidGrantAccessToBundleID:containerIdentifiers:
accountsDidRevokeAccessToBundleID:containerIdentifiers:
accountsWillDeleteAccount:completionHandler:
accountWithID:changedWithChangeType:
wipeAllCachesAndDie
wipeServerConfigurationsAndDie
updatePushTokens
maxInlineMergeableDeltaSizeWithCompletionHandler:
_wipePersonaBasedClientCacheForAppRecord:
kickOffPendingLongLivedOperations
initWithOperation:recordZonesToSave:recordZoneIDsToDelete:
recordZoneModifiedBlock
setRecordZoneModifiedBlock:
_recordZoneModifiedBlock
T@"NSArray",&,N,V_recordZonesToSave
T@"NSDate",&,N,V_lastMissingManateeIdentityErrorDate
T@?,C,N,V_recordZoneModifiedBlock
initWithOperation:recordZoneIDs:
recordZones
recordZoneFetchedBlock
setRecordZoneFetchedBlock:
errorFetchingAllRecordZonesBlock
setErrorFetchingAllRecordZonesBlock:
anonymousRecordZoneTuplesFetchedBlock
setAnonymousRecordZoneTuplesFetchedBlock:
zoneIDByRequestID
setZoneIDByRequestID:
_recordZones
_recordZoneFetchedBlock
_errorFetchingAllRecordZonesBlock
_anonymousRecordZoneTuplesFetchedBlock
_zoneIDByRequestID
T@"NSMutableDictionary",&,N,V_zoneIDByRequestID
T@"NSArray",R,N,V_recordZones
T@?,C,N,V_recordZoneFetchedBlock
T@?,C,N,V_errorFetchingAllRecordZonesBlock
T@?,C,N,V_anonymousRecordZoneTuplesFetchedBlock
initWithOperation:assetOrPackageMetadata:writeRepairRecord:
assetBrokenBlock
setAssetBrokenBlock:
_assetBrokenBlock
T@"CKUploadRequestMetadata",C,N,V_metadata
T@?,C,N,V_assetBrokenBlock
_encryptMergeableDeltas:completionHandler:
hasEncryptedKey
hasBaseToken
T@"NSString",&,N,V_baseToken
setIsRead:
setHasIsRead:
hasIsRead
setHasSource:
hasSource
sourceAsString:
StringAsSource:
hasDialog
hasSound
isRead
dialog
setDialog:
sound
setSound:
_dialog
_sound
_isRead
TB,N,V_isRead
Ti,N,V_source
T@"NSString",&,N,V_dialog
T@"NSString",&,N,V_sound
Ti,N,V_badgeCount
T@"NSData",&,N,V_payload
addCancelToken:withOperation:
removeCancelToken:
removeAllCancelTokens
T@"NSMutableArray",&,N,V_cancelTokens
containerOptions
setContainerOptions:
tokenRegistered
setTokenRegistered:
_containerOptions
_tokenRegistered
T@"CKContainerOptions",&,N,V_containerOptions
Tq,N,V_tokenRegistered
setAdopterProcessType:
applicationContainerPath
setApplicationContainerPath:
_applicationContainerPath
Tq,N,V_adopterProcessType
T@"NSString",&,N,V_applicationContainerPath
expungeAllData
expungeOldData
inlock_expungeDataForAccountID:
expungeDataForAccountID:
expungeStaleAccountIDs
pushTokenForAppContainerAccountTuple:filterOldTokens:
setPushToken:forAppContainerAccountTuple:
knownAppContainerAccountTuplesForAccountID:
knownAppContainerTuples
knownAppContainerAccountTuples
appContainerAccountMetadataForAppContainerAccountTuple:
setAppContainerAccountMetadata:forAppContainerAccountTuple:
dateOfLastTokenUpdate
inlock_setDateOfLastTokenUpdate:
setDateOfLastTokenUpdate:
inlock_applicationMetadataForApplicationID:
applicationMetadataForApplicationID:
setApplicationMetadata:forApplicationID:
knownApplicationIDs
knownContainerizedApplicationIDs
removeKnownApplicationID:
publicKeyOfType:withIdentifier:
setPublicKey:ofType:withIdentifier:
inlock_containerServerInfoForContainerID:accountID:
containerServerInfoForContainerID:accountID:
setContainerServerInfo:forContainerID:accountID:
removeContainerID:
setCachedDSID:forAccountID:
cachedDSIDForAccountID:
willCreateDatabase
fillInDownloadURLsForAssetWithFieldName:fileName:recordPCS:pcsManager:useEncryption:useClearAssetEncryption:alwaysAllowKeyExport:outError:
clearRecordFetchProperties
validateAndSetRecordFetchPropertiesWithAsset:assetReference:
additionalFieldsType
hasAlert
setShouldBadge:
setHasShouldBadge:
hasShouldBadge
clearAdditionalFields
addAdditionalFields:
additionalFieldsCount
additionalFieldsAtIndex:
setShouldSendContentAvailable:
setHasShouldSendContentAvailable:
hasShouldSendContentAvailable
setShouldSendMutableContent:
setHasShouldSendMutableContent:
hasShouldSendMutableContent
hasCollapseIdKey
alert
setAlert:
shouldBadge
additionalFields
setAdditionalFields:
shouldSendContentAvailable
shouldSendMutableContent
collapseIdKey
setCollapseIdKey:
_additionalFields
_alert
_collapseIdKey
_shouldBadge
_shouldSendContentAvailable
_shouldSendMutableContent
T@"CKDPSubscriptionNotificationAlert",&,N,V_alert
TB,N,V_shouldBadge
T@"NSMutableArray",&,N,V_additionalFields
TB,N,V_shouldSendContentAvailable
TB,N,V_shouldSendMutableContent
T@"NSString",&,N,V_collapseIdKey
hasEncryptedPublicSharingKey
T@"NSData",&,N,V_encryptedPublicSharingKey
_lockedSetManateeAvailableForLoggedInAccount:
_fetchManateeAvailability:
handleManateeStatusUpdateNotificationWithAvailability:
_lockedFetchAndUpdateManateeAvailability
manateeStatusForAccount:isSecondaryAccount:completionHandler:
isManateeAvailableForAccount:isSecondaryAccount:error:
accountSupportsManatee:
manateeAvailableForLoggedInAccount
lastCDPErrorForManateeStatus
setLastCDPErrorForManateeStatus:
_manateeAvailableForLoggedInAccount
_lastCDPErrorForManateeStatus
Tq,N,S_lockedSetManateeAvailableForLoggedInAccount:,V_manateeAvailableForLoggedInAccount
T@"NSError",C,N,V_lastCDPErrorForManateeStatus
initWithKey:permittedRemoteMeasurement:attestation:
clear
T^{pcc_wrapped_invocation_key=*Q},V_wrappedInvocationKey
T@"NSData",&,V_routingToken
initWithCertificate:applicationEnclaveQuote:quotingEnclaveQuote:routingToken:
certificate
setCertificate:
applicationEnclaveQuote
setApplicationEnclaveQuote:
quotingEnclaveQuote
setQuotingEnclaveQuote:
_certificate
_applicationEnclaveQuote
_quotingEnclaveQuote
T@"NSString",&,N,V_certificate
T@"NSData",&,N,V_applicationEnclaveQuote
T@"NSData",&,N,V_quotingEnclaveQuote
secret
setSecret:
_secret
T^{pcc_invocation_key=[32C]},V_secret
@32@0:8@16@24
@16@0:8
i16@0:8
B16@0:8
@24@0:8Q16
v48@0:8@16@24@32@40
v16@0:8
v24@0:8@16
@?16@0:8
v24@0:8@?16
@"NSMutableArray"
@"NSMutableDictionary"
@24@0:8@16
@"NSArray"
#16@0:8
@24@0:8^{_NSZone=}16
v20@0:8i16
v20@0:8B16
@20@0:8i16
i24@0:8@16
Q16@0:8
B24@0:8@16
@"NSString"
@"CKDPZone"
@"CKDPShareMetadata"
@"CKDPRecord"
{?="containerEnvironment"b1}
@"NSNumber"
@"NSDate"
@"NSData"
@"NSSet"
v48@0:8@16@24@32q40
@48@0:8@16@24@32q40
v32@0:8@16q24
v24@0:8q16
v40@0:8@16@24q32
Q32@0:8@16@24
Q24@0:8@16
v48@0:8@"CKRecord"16@"CKDContainer"24@"NSSet"32q40
@"CKRecord"48@0:8@"CKRecordID"16@"CKDContainer"24@"NSSet"32q40
@"NSArray"48@0:8@"NSArray"16@"CKDContainer"24@"NSSet"32q40
@"NSString"48@0:8@"CKRecordID"16@"CKDContainer"24@"NSSet"32q40
v32@0:8@"CKRecordID"16q24
v24@0:8@"CKRecordZoneID"16
v40@0:8@"CKRecordID"16@"CKDContainer"24q32
Q32@0:8@"CKRecordID"16@"CKDContainer"24
Q24@0:8@"NSError"16
B32@0:8@16@24
@24@0:8:16
@"CKDRecordCacheTable"
I16@0:8
@"CKRecordID"
v24@0:8Q16
{?="storageAvailableBytes"b1}
@32@0:8@16@?24
q16@0:8
@"CKDMMCSItemGroupSet"
@"CKDOperation"
@"NSObject<OS_dispatch_group>"
@40@0:8@16@24@32
@"CKDPDate"
v32@0:8^{_OpaquePCSShareProtection=}16@24
v40@0:8@16@24@?32
v60@0:8@16q24@32B40@44@?52
v68@0:8@16q24@32B40@44@52@?60
v40@0:8^{_OpaquePCSShareProtection=}16@24@32
v48@0:8^{_OpaquePCSShareProtection=}16@24@32@40
{?="moreAvailable"b1}
@56@0:8@16@24@32@40@48
v64@0:8@16@24@32Q40@?48@?56
@40@0:8@16Q24@32
v56@0:8@16@24Q32@?40@?48
v48@0:8@16@24Q32@?40
v48@0:8@16@24q32@?40
v56@0:8@16@24@32q40@?48
@"CKDPCSSQLCache"
@"CKDPCSMemoryCache"
@"CKContainerID"
@"CKAccountOverrideInfo"
@"NSObject<OS_dispatch_queue>"
v28@0:8B16@?20
@"NSXPCListener"
@"NSObject<OS_dispatch_source>"
@"NSOperationQueue"
@"CKDPAssetsToDownload"
@"CKDPRecordRetrieveRequestRetrieveAssetURL"
@"CKDPRecordIdentifier"
@"CKDPRequestedFields"
{?="shouldFailBatch"b1}
v36@0:8B16@?20@?28
@40@0:8@16@24^@32
v32@0:8Q16@24
@32@0:8@16^@24
v20@0:8I16
@"CKDXPCConnection"
@"CKEntitlements"
@"<CKXPCProcessScopedClient>"
@"NSDictionary"
@"CKDPRecordFieldIdentifier"
@"CKDPMergeableValueIdentifier"
@"CKDPRecordType"
v32@0:8@16@?24
v32@0:8@16@24
v44@0:8@16@24@32i40
v32@0:8q16@?24
v40@0:8Q16q24@?32
v40@0:8@16q24@?32
v36@0:8Q16B24@?28
v32@0:8Q16@?24
v24@0:8@?<v@?@"NSString"@"NSError">16
v40@0:8@"CKFetchRecordVersionsOperationInfo"16@"<CKFetchRecordVersionsOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKFetchArchivedRecordsOperationInfo"16@"<CKFetchArchivedRecordsOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKArchiveRecordsOperationInfo"16@"<CKArchiveRecordsOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKPublishAssetsOperationInfo"16@"<CKPublishAssetsOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKRepairAssetsOperationInfo"16@"<CKRepairAssetsOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKMarkAssetBrokenOperationInfo"16@"<CKMarkAssetBrokenOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKModifyWebSharingOperationInfo"16@"<CKModifyWebSharingOperationCallbacks>"24@?<v@?>32
v24@0:8@?<v@?@"NSData"@"NSError">16
v40@0:8@"CKModifyRecordAccessOperationInfo"16@"<CKModifyRecordAccessOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKCompleteParticipantVettingOperationInfo"16@"<CKCompleteParticipantVettingOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKFetchShareParticipantKeyOperationInfo"16@"<CKFetchShareParticipantKeyOperationCallbacks>"24@?<v@?>32
v32@0:8@"CKShare"16@?<v@?@"CKShare"@"NSError">24
v40@0:8@"CKInitiateParticipantVettingOperationInfo"16@"<CKInitiateParticipantVettingOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKDatabaseOperationInfo"16@"<CKFetchUserQuotaOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKOperationInfo"16@"<CKFetchWhitelistedBundleIDsOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKOperationInfo"16@"<CKFetchRegisteredBundleIDsOperationCallbacks>"24@?<v@?>32
v24@0:8@?<v@?q@"NSError">16
v40@0:8@"CKAggregateZonePCSOperationInfo"16@"<CKOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKFetchMergeableDeltasOperationInfo"16@"<CKFetchMergeableDeltasOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKFetchMergeableDeltaMetadataOperationInfo"16@"<CKFetchMergeableDeltaMetadataOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKReplaceMergeableDeltasOperationInfo"16@"<CKReplaceMergeableDeltasOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKUploadMergeableDeltasOperationInfo"16@"<CKUploadMergeableDeltasOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKSerializeRecordModificationsOperationInfo"16@"<CKSerializeRecordModificationsOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKDeserializeRecordModificationsOperationInfo"16@"<CKDeserializeRecordModificationsOperationCallbacks>"24@?<v@?>32
v32@0:8@"NSError"16@"NSString"24
v44@0:8@"CKDPResponseOperationResult"16@"NSString"24@32i40
v32@0:8q16@?<v@?Q@"NSError">24
v32@0:8q16@?<v@?@"NSError">24
v40@0:8Q16q24@?<v@?@"NSError">32
v40@0:8@"CKRecordID"16q24@?<v@?@"NSError">32
v40@0:8@"CKRecordZoneID"16q24@?<v@?@"NSError">32
v40@0:8@"CKRecordZoneID"16q24@?<v@?@"CKDPCSData"@"NSError">32
v24@0:8@?<v@?Q@"NSError">16
v24@0:8@?<v@?@"NSError">16
v36@0:8Q16B24@?<v@?q@"NSError">28
v32@0:8Q16@?<v@?@"NSArray"@"NSError">24
v24@0:8@"NSArray"16
v24@0:8@?<v@?B@"NSError">16
v24@0:8@?<v@?@"CKPCSDiagnosticInformation">16
v24@0:8@?<v@?@"NSArray">16
v40@0:8@"CKRepairZonePCSOperationInfo"16@"<CKRepairZonePCSOperationCallbacks>"24@?<v@?>32
v24@0:8@?<v@?qB@"NSError">16
@64@0:8@16@24@32@40@48@56
@40@0:8@16^@24^q32
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v36@0:8@16B24@?28
v24@0:8@?<v@?@"CKAccountInfo"@"NSError">16
v32@0:8@"NSString"16@?<v@?>24
v40@0:8@"CKCodeFunctionInvokeOperationInfo"16@"<CKCodeOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKCodeFunctionInvokeOperationInfo"16@"<CKCodeFunctionInvokeOperationCallbacks>"24@?<v@?>32
v32@0:8@"NSFileHandle"16@?<v@?@"NSError">24
v36@0:8@"CKEventMetricInfo"16B24@?<v@?>28
v24@0:8@?<v@?@"NSString"@"NSString"@"NSError">16
v32@0:8Q16@?<v@?q@"NSError">24
v40@0:8@"CKDiscoverUserIdentitiesOperationInfo"16@"<CKDiscoverUserIdentitiesOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKDiscoverUserIdentitiesOperationInfo"16@"<CKDiscoverAllUserIdentitiesOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKFetchShareParticipantsOperationInfo"16@"<CKFetchShareParticipantsOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKFetchRecordsOperationInfo"16@"<CKFetchRecordsOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKModifyRecordsOperationInfo"16@"<CKModifyRecordsOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKFetchRecordZoneChangesOperationInfo"16@"<CKFetchRecordChangesOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKFetchRecordZoneChangesOperationInfo"16@"<CKFetchRecordZoneChangesOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKQueryOperationInfo"16@"<CKQueryOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKModifySubscriptionsOperationInfo"16@"<CKModifySubscriptionsOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKFetchSubscriptionsOperationInfo"16@"<CKFetchSubscriptionsOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKModifyRecordZonesOperationInfo"16@"<CKModifyRecordZonesOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKFetchRecordZonesOperationInfo"16@"<CKFetchRecordZonesOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKFetchDatabaseChangesOperationInfo"16@"<CKFetchDatabaseChangesOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKModifyBadgeOperationInfo"16@"<CKOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKFetchNotificationChangesOperationInfo"16@"<CKFetchNotificationChangesOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKMarkNotificationsReadOperationInfo"16@"<CKMarkNotificationsReadOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKAcceptSharesOperationInfo"16@"<CKAcceptSharesOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKFetchShareMetadataOperationInfo"16@"<CKFetchShareMetadataOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKMapShareURLsToInstalledBundleIDsOperationInfo"16@"<CKMapShareURLsToInstalledBundleIDsOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKFetchWebAuthTokenOperationInfo"16@"<CKFetchWebAuthTokenOperationCallbacks>"24@?<v@?>32
v40@0:8@"CKMovePhotosOperationInfo"16@"<CKMovePhotosOperationCallbacks>"24@?<v@?>32
v32@0:8@"NSArray"16@?<v@?@"NSArray"@"NSError">24
v24@0:8@?<v@?@"NSArray"@"NSError">16
v24@0:8@?<v@?@"NSObject<OS_xpc_object>"@"NSError">16
v24@0:8@?<v@?@"NSPersonNameComponents"@"NSString"@"NSString"@"NSError">16
v24@0:8@?<v@?q>16
B24@0:8^@16
d16@0:8
@32@0:8q16q24
v40@0:8q16@24@?32
B32@0:8@16^@24
q24@0:8q16
v40@0:8@16@?24@?32
@48@0:8@16Q24Q32^@40
v52@0:8@16@24@32B40@44
@20@0:8B16
Q24@0:8q16
@"CKDAccount"
@"CKDProcessScopedClientProxy"
@"CKDLogicalDeviceScopedClientProxy"
@"CKDDirectoryContext"
@"CKDAppContainerTuple"
@"CKContainerOptions"
@"CKDMMCS"
@"CKDRecordCache"
@"CKDZoneGatekeeper"
@"CKDServerConfiguration"
@"NSURL"
@"NSRecursiveLock"
@"CKDPCSFetchAggregator"
@"CKDIdentityCache"
@"CKDPublicIdentityLookupService"
@"NSMutableSet"
@"CKDLogicalDeviceContext"
@"<NSObject>"
@"CKDPCSManager"
@"CKDPCSCache"
@"CKDAnonymousSharingManager"
@"CKDProtocolTranslator"
v24@0:8d16
@"CKDPCSData"
@"CKDPLocationCoordinate"
{?="order"b1}
@24@0:8^@16
B56@0:8Q16*24Q32^Q40^@48
@"CKFileMetadata"24@0:8^@16
@"CKDMMCSItemGroupContext"16@0:8
@"CKDMMCSItem"16@0:8
@"CKDMMCSItemGroupContext"
@"CKDMMCSItem"
@"NSMutableIndexSet"
@"CKDPUserPrivacySettings"
{?="applicationContainerEnvironment"b1}
@"CKUserIdentityLookupInfo"
@"CKUserIdentity"
v40@0:8@16@24@32
@"<CKDURLRequestPipelining>"
@"<CKDOperationPipelining>"
@24@0:8q16
B20@0:8i16
@"CKContainerID"16@0:8
@"NSObject<NSFastEnumeration>"16@0:8
@28@0:8B16B20B24
v56@0:8#16@24@32@40@?48
v48@0:8#16@24@32@?40
v40@0:8#16@24@?32
B48@0:8@16^@24^@32^@40
@"NSObject<OS_os_activity>"
@"CKDURLRequest"
@"<CKOperationCallbacks>"
@"CKDOperationMetrics"
@"NSError"
@"CKOperationInfo"
@"CKDContainer"
@"NSObject<OS_os_transaction>"
@"CKSignpost"
@"CKDPResponseOperationResultError"
{?="code"b1}
@48@0:8@16@24@?32@40
@"<CKDZoneGatekeeperWaiter>"
v28@0:8@16B24
v44@0:8@16@24B32@?36
@"CKDZoneGatekeeperImplementation"
@"CKDPContactInformation"
@"NSMutableOrderedSet"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSObject<OS_dispatch_queue>"16@0:8
v24@0:8@"NSObject<OS_dispatch_queue>"16
@"CKQuery"
@"CKQueryCursor"
@"CKRecordZoneID"
@"CKDRecordFetchAggregator"
@"CKDPRecordZoneIdentifier"
{?="onlyFetchPCSInfo"b1}
v56@0:8@16^{_OpaquePCSShareProtection=}24^{_OpaquePCSShareProtection=}32@40@?48
@"CKDApplicationID"
@"CKDQueuedFetch"
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v48@0:8@16@24@32@?40
v36@0:8@16@24B32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?@"NSURLRequest">40
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v36@0:8@"NSURLSession"16@"NSURLSessionTask"24B32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSError"32
q32@0:8@16@24
q24@0:8@16
B24@0:8@?16
@"CKDResponseBodyParser"
@"CKDProtobufStreamWriter"
@"NSURLSessionDataTask"
@"C2RequestOptions"
@"NSObject<C2NetworkingDelegate>"
@"NSURLRequest"
@"NSHTTPURLResponse"
@"NSURLSession"
@"CKDTrafficLogger"
@"NSObject<OS_voucher>"
@"CKTapToRadarRequest"
{?="badgeCount"b1"forDevice"b1}
{?="size"b1"lastSection"b1}
@"CKMergeableDeltaID"
@40@0:8^{__CFError=}16q24@32
@24@0:8^{_OpaquePCSShareProtection=}16
B24@0:8@"NSString"16
@24@0:8@"NSString"16
B32@0:8@"NSData"16^@24
^{_PCSIdentityData=}16@0:8
Q24@0:8Q16
@32@0:8Q16^@24
^{_PCSPublicIdentityData=}32@0:8Q16^@24
^{_PCSIdentityData=}24@0:8^@16
^{_PCSIdentityData=}32@0:8@16@24
@48@0:8@16@24@32^@40
B48@0:8@16@24Q32^@40
@32@0:8^{_PCSIdentityData=}16^@24
^{_PCSIdentityData=}32@0:8@16^@24
^{_PCSPublicIdentityData=}32@0:8@16^@24
@40@0:8^{_PCSIdentitySetData=}16Q24^{_OpaquePCSShareProtection=}32
@32@0:8Q16^{_OpaquePCSShareProtection=}24
v32@0:8^{__CFError=}16@24
v36@0:8B16@20@?28
^{_OpaquePCSShareProtection=}24@0:8^@16
@32@0:8^{_OpaquePCSShareProtection=}16^@24
@36@0:8@16@24B32
@40@0:8^{_PCSIdentityData=}16@24^@32
v72@0:8@16Q24Q32B40B44@48@56@?64
B36@0:8B16^B20^@28
v64@0:8@16Q24Q32B40B44@48@?56
v48@0:8@16Q24@32@?40
B32@0:8Q16^@24
v44@0:8Q16B24@28@?36
^{_OpaquePCSShareProtection=}40@0:8@16Q24^@32
B40@0:8@16^{_OpaquePCSShareProtection=}24^@32
B24@0:8^{_OpaquePCSShareProtection=}16
B28@0:8^{_OpaquePCSShareProtection=}16B24
@28@0:8^{_OpaquePCSShareProtection=}16B24
@36@0:8^{_OpaquePCSShareProtection=}16^{_OpaquePCSShareProtection=}24B32
@32@0:8@16^{_OpaquePCSShareProtection=}24
@36@0:8^{_OpaquePCSShareProtection=}16B24^@28
@32@0:8^{_OpaquePCSShareProtection=}16Q24
^{_OpaquePCSShareProtection=}44@0:8^{_OpaquePCSShareProtection=}16^{_OpaquePCSShareProtection=}24B32^@36
^{_OpaquePCSShareProtection=}44@0:8^{__CFData=}16^{_OpaquePCSShareProtection=}24B32^@36
^{_OpaquePCSShareProtection=}52@0:8@16Q24^{_OpaquePCSShareProtection=}32B40^@44
^{_OpaquePCSShareProtection=}48@0:8@16Q24^{_OpaquePCSShareProtection=}32^@40
B48@0:8^{_OpaquePCSShareProtection=}16^{_OpaquePCSShareProtection=}24Q32^@40
B40@0:8^{_OpaquePCSShareProtection=}16^{_OpaquePCSShareProtection=}24^@32
B32@0:8^{_OpaquePCSShareProtection=}16^{_OpaquePCSShareProtection=}24
^{_OpaquePCSShareProtection=}40@0:8Q16Q24^@32
^{_OpaquePCSShareProtection=}32@0:8Q16^@24
v32@0:8^{_PCSPublicIdentityData=}16^{_OpaquePCSShareProtection=}24
B40@0:8Q16^{_OpaquePCSShareProtection=}24^@32
^{_OpaquePCSShareProtection=}32@0:8^{_PCSIdentityData=}16^@24
^{_OpaquePCSShareProtection=}44@0:8@16^{_PCSIdentityData=}24B32^@36
^{_OpaquePCSShareProtection=}40@0:8@16^{_PCSIdentityData=}24^@32
^{_OpaquePCSShareProtection=}52@0:8@16Q24Q32B40^@44
^{_OpaquePCSShareProtection=}48@0:8@16Q24Q32^@40
^{_OpaquePCSShareProtection=}40@0:8@16@24^@32
^{_OpaquePCSShareProtection=}32@0:8@16^@24
v40@0:8@16Q24@?32
^{_PCSPublicIdentityData=}24@0:8^{_OpaquePCSShareProtection=}16
@44@0:8@16@24B32^@36
@36@0:8^{_PCSPublicIdentityData=}16^{_OpaquePCSShareProtection=}24I32
@40@0:8^{_PCSIdentityData=}16^{_OpaquePCSShareProtection=}24Q32
@32@0:8^{_PCSPublicIdentityData=}16^{_OpaquePCSShareProtection=}24
@32@0:8^{_PCSIdentityData=}16^{_OpaquePCSShareProtection=}24
B32@0:8@16^{_OpaquePCSShareProtection=}24
@48@0:8@16^{_OpaquePCSShareProtection=}24@32^@40
@40@0:8@16^{_OpaquePCSShareProtection=}24@32
@48@0:8@16@24^{_OpaquePCSShareProtection=}32@40
B24@0:8Q16
^{_OpaquePCSShareProtection=}48@0:8@16Q24^{_PCSIdentitySetData=}32^^{__CFError}40
@"<CKDContainerScopedUserIDProvider>"
@"CKDPCSIdentityManager"
v56@0:8@16@24@32@40@48
@"<CKDMMCSItemReaderWriterProtocol>"
{?="requestedSize"b1"uploadedSize"b1}
@"CKDPConfigurationFieldValue"
@56@0:8@16q24@32@40@?48
@32@0:8@16q24
@48@0:8@16q24@32q40
@"CKDAssetBatch"
@"CKDAssetTokenRequest"
@"NSMapTable"
@"CKShareMetadata"
@"CKDPCodeFunctionInvokeRequestAttestationRequest"
@"CKDPCodeFunctionInvokeRequestProtectedCloudComputeMetadata"
@"CKCDPTrustedTargetCryptoMetadata"
{?="userPurge"b1}
@64@0:8@16@24@32Q40@48@56
@28@0:8@16B24
@"CKPackage"
@"CKAsset"
@"NSIndexSet"
@"CKDProgressTracker"
@"CKDMMCSRequestOptions"
@"CKDCancelTokenGroup"
v32@0:8@16d24
v36@0:8@16B24@28
@"CKDPListRange"
{?="forceFetch"b1"shouldFetchRootRecord"b1}
@"CKDAssetZoneKey"
i28@0:8@16B24
@28@0:8i16@20
@32@0:8i16@20B28
@32@0:8d16d24
@40@0:8q16Q24@32
@"<CKDSystemAvailabilityWatcher>"
@"CKDPIdentifier"
@"APSConnection"
@32@0:8q16@24
@"CKDContainerServerInfo"
{?="reservedSize"b1"uploadURLExpirationTimeSeconds"b1}
v52@0:8@16@24Q32@40B48
@"CKDPCSKeySyncCoreAnalytics"
{?="semantics"b1"merge"b1}
@"CKDPProtectionInfo"
@"CKDPShareIdentifier"
@"CKDPRecordStableUrl"
@"CKDPStorageExpiration"
{?="accountFlags"b1"lastWebActivityUTCMills"b1"photosWebAccessTimestamp"b1"corporateSharingEnabled"b1}
@"CKDPAsset"
{?="tokenExpiration"b1}
@"CKDPListPosition"
{?="insertAfter"b1}
@"CKLEventFilter"
@"NSDateFormatter"
@32@0:8@16Q24
@"CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoValue"
v52@0:8@16B24@28@?36@?44
v52@0:8@16B24@28@36@?44
@"ACAccountStore"
@"CKDBackingAccount"
v32@0:8@16Q24
v52@0:8@16@24@32@40B48
@"CKDPMoveOplockFailure"
@"CKDPOplockFailure"
@"CKDPUniqueFieldFailure"
{?="type"b1}
v40@0:8^@16^@24Q32
v32@0:8@"NSStream"16Q24
@"NSInputStream"
@"NSOutputStream"
{z_stream_s="next_in"*"avail_in"I"total_in"Q"next_out"*"avail_out"I"total_out"Q"msg"*"state"^{internal_state}"zalloc"^?"zfree"^?"opaque"^v"data_type"i"adler"Q"reserved"Q}
@"NSFileHandle"
@"CKDPStreamingAssetIdentifier"
@"CKDPStreamingAssetRetrieveAssetResponse"
@"CKDPStreamingAssetSaveAssetRequest"
@"CKDPStreamingAssetSaveAssetResponse"
@"CKDPZoneCapabilities"
{?="assetQuotaUsage"b1"metadataQuotaUsage"b1"deviceCount"b1"expired"b1"zoneKeyRollAllowed"b1"zoneishPcsNeedsRolled"b1}
@"CKDPUserAlias"
{?="publicKeyRequested"b1}
B40@0:8@16@24^@32
@"CKDAssetRequestPlanner"
@"CKDPDateStatistics"
@"CKDPLocationBound"
@"CKDPThrottlingConfigCriteria"
@"CKDPThrottlingConfigRateLimit"
{?="ttlSec"b1}
{?="success"b1}
v48@0:8@16@24^{_OpaquePCSShareProtection=}32@40
@"NSOperation"
@"CKDPRecordSaveRequestConflictLoserUpdate"
@"CKDPRecordSaveRequestShareIdUpdate"
{?="saveSemantics"b1"merge"b1}
^{MGNotificationTokenStruct=}
@"CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptions"
@"CKDPLocale"
{?="applicationConfigVersion"b1"deviceProtocolVersion"b1"globalConfigVersion"b1"operationGroupQuantity"b1"applicationContainerEnvironment"b1"isolationLevel"b1"requestOriginator"b1"targetDatabase"b1"deviceSoftwareIsAppleInternal"b1"entitlementsValidated"b1}
@"CKDPAnonymousShareAddResponse"
@"CKDPAnonymousShareRemoveResponse"
@"CKDPArchiveRecordsResponse"
@"CKDPAssetUploadTokenRetrieveResponse"
@"CKDPBundlesForContainerResponse"
@"CKDPDeleteContainerResponse"
@"CKDPFetchArchivedRecordsResponse"
@"CKDPCodeFunctionInvokeResponse"
@"CKDPResponseOperationHeader"
@"CKDPMarkAssetBrokenResponse"
@"CKDPMergeableDeltaMetadataRetrieveResponse"
@"CKDPMergeableDeltaReplaceResponse"
@"CKDPMergeableDeltaRetrieveResponse"
@"CKDPMergeableDeltaSaveResponse"
@"CKDPNotificationMarkReadResponse"
@"CKDPNotificationSyncResponse"
@"CKDPQueryRetrieveResponse"
@"CKDPRecordDeleteResponse"
@"CKDPRecordMoveResponse"
@"CKDPRecordResolveTokenResponse"
@"CKDPRecordRetrieveChangesResponse"
@"CKDPRecordRetrieveResponse"
@"CKDPRecordRetrieveVersionsResponse"
@"CKDPRecordSaveResponse"
@"CKDPOperation"
@"CKDPResponseOperationResult"
@"CKDPSetBadgeCountResponse"
@"CKDPShareAcceptResponse"
@"CKDPShareVettingInitiateResponse"
@"CKDPSubscriptionCreateResponse"
@"CKDPSubscriptionDeleteResponse"
@"CKDPSubscriptionRetrieveResponse"
@"CKDPTokenRegistrationResponse"
@"CKDPTokenUnregistrationResponse"
@"CKDPUpdateMissingAssetStatusResponse"
@"CKDPUserAvailableQuotaResponse"
@"CKDPUserPrivacySettingsBatchLookupResponse"
@"CKDPUserPrivacySettingsResetResponse"
@"CKDPUserPrivacySettingsRetrieveResponse"
@"CKDPUserPrivacySettingsUpdateResponse"
@"CKDPUserQueryResponse"
@"CKDPUserRetrieveResponse"
@"CKDPWebAuthTokenRetrieveResponse"
@"CKDPZoneDeleteResponse"
@"CKDPZoneRetrieveChangesResponse"
@"CKDPZoneRetrieveResponse"
@"CKDPZoneSaveResponse"
{?="isDeleted"b1}
{?="type"b1"last"b1"synchronousMode"b1}
B20@0:8B16
v24@0:8#16
@"NSMutableData"
{?="contentRequestAuthorizeGetOptions"b1}
@60@0:8@16@24@32@40@48B56
v64@0:8@16@24@32@40@48@56
{?="requestedTTL"b1"type"b1}
@"CKDPAnonymousShareAddRequest"
@"CKDPAnonymousShareRemoveRequest"
@"CKDPArchiveRecordsRequest"
@"CKDPAssetUploadTokenRetrieveRequest"
@"CKDPBundlesForContainerRequest"
@"CKDPDeleteContainerRequest"
@"CKDPFetchArchivedRecordsRequest"
@"CKDPCodeFunctionInvokeRequest"
@"CKDPRequestOperationHeader"
@"CKDPMarkAssetBrokenRequest"
@"CKDPMergeableDeltaMetadataRetrieveRequest"
@"CKDPMergeableDeltaReplaceRequest"
@"CKDPMergeableDeltaRetrieveRequest"
@"CKDPMergeableDeltaSaveRequest"
@"CKDPNotificationMarkReadRequest"
@"CKDPNotificationSyncRequest"
@"CKDPQueryRetrieveRequest"
@"CKDPRecordDeleteRequest"
@"CKDPRecordMoveRequest"
@"CKDPRecordResolveTokenRequest"
@"CKDPRecordRetrieveChangesRequest"
@"CKDPRecordRetrieveRequest"
@"CKDPRecordRetrieveVersionsRequest"
@"CKDPRecordSaveRequest"
@"CKDPSetBadgeCountRequest"
@"CKDPShareAcceptRequest"
@"CKDPShareVettingInitiateRequest"
@"CKDPSubscriptionCreateRequest"
@"CKDPSubscriptionDeleteRequest"
@"CKDPSubscriptionRetrieveRequest"
@"CKDPTokenRegistrationRequest"
@"CKDPTokenUnregistrationRequest"
@"CKDPUpdateMissingAssetStatusRequest"
@"CKDPUserAvailableQuotaRequest"
@"CKDPUserPrivacySettingsBatchLookupRequest"
@"CKDPUserPrivacySettingsResetRequest"
@"CKDPUserPrivacySettingsRetrieveRequest"
@"CKDPUserPrivacySettingsUpdateRequest"
@"CKDPUserQueryRequest"
@"CKDPUserRetrieveRequest"
@"CKDPWebAuthTokenRetrieveRequest"
@"CKDPZoneDeleteRequest"
@"CKDPZoneRetrieveChangesRequest"
@"CKDPZoneRetrieveRequest"
@"CKDPZoneSaveRequest"
{?="containsNewData"b1"ignoreMissingDeltas"b1}
@"CKDPTokenRegistrationBody"
{?="version"b1}
@"CKDZonePCSData"
{?="apnsEnv"b1"skipBundleIDCheck"b1}
@"CKDPShare"
@"CKDPEncryptedMergeableValue"
@"CKDPMergeableValue"
@"CKDPPackage"
@"CKDPRecordReference"
@"CKDPStreamingAsset"
{?="doubleValue"b1"signedValue"b1"type"b1"isEncrypted"b1}
{?="downloadURLExpirationTimeSeconds"b1"size"b1}
{?="startTimeSecondsAfterLocalMidnight"b1"startTimeSecondsAfterUnixEpoch"b1"allowedRequestCount"b1"intervalLengthSec"b1"repeatEverySec"b1}
{?="maxChanges"b1"wantsChanges"b1}
{?="doubleValue"b1"int64Value"b1"value"b1"boolValue"b1}
{?="forceFetchToken"b1}
@"NSPredicate"
@"CKDPublicIdentityLookupRequest"
{?="publicKeyVersion"b1"acceptedInProcess"b1}
@"CKDPRecordFieldValue"
v80@0:8@16@24q32@40@48Q56q64@72
@"CKPublicKey"
{?="queryOperator"b1"distinct"b1}
v24@0:8@"CKThrottle"16
{?="typeCode"b1}
@"CKDPRecordChainParent"
{?="permission"b1"expired"b1}
{?="participantKeyLost"b1}
@"CKCodeRecordTransport"
@48@0:8@16@24d32@40
@48@0:8@16@24@32@40
@72@0:8@16@24@32@40@48@56@64
@"CKDTrustedTargetWrappedKey"
@40@0:8@16@24B32B36
v52@0:8@16Q24B32@36@?44
v60@0:8@16B24@28@36@44@?52
v72@0:8@16@24@32B40@44B52@56@?64
^{_PCSPublicIdentityData=}16@0:8
B48@0:8@16^{_OpaquePCSShareProtection=}24@32^@40
B32@0:8^{_OpaquePCSShareProtection=}16^@24
v24@0:8^{_PCSPublicIdentityData=}16
^{_PCSPublicIdentityData=}
@"CKDPSubscription"
@"OSLogEventStream"
@"OSLogEventLiveStream"
v28@0:8@16i24
v24@0:8@"NSFileHandle"16
B24@0:8^{objc_ivar=}16
v24@0:8^{_OpaquePCSShareProtection=}16
^{_OpaquePCSShareProtection=}16@0:8
^{_OpaquePCSShareProtection=}
@"CKMergeableValueID"
B40@0:8^{_OpaquePCSShareProtection=}16@24^@32
^{__OpaquePCSKeyEnvelope=}36@0:8@16B24^@28
^{__OpaquePCSKeyEnvelope=}32@0:8@16^@24
@"CKRecord"
{?="limit"b1"newestFirst"b1}
{?="isInNetwork"b1}
@"<MMCSOperationMetric>"
@"CKMovePhotosChange"
@40@0:8@16@24q32
^{_mmcs_engine=}16@0:8
@48@0:8@16@24Q32@?40
@48@0:8@16@24@32@?40
@64@0:8@16@24@32@?40@?48@?56
@68@0:8@16@24B32@36@?44@?52@?60
@56@0:8@16@24@32@?40@?48
B48@0:8Q16^Q24^Q32^@40
B32@0:8^Q16^@24
@"CKDAssetCache"
@"CKDMMCSEngineContext"
@"CKAssetDownloadPreauthorization"
@"CKDMMCSItemCommandWriter"
B56@0:8@16@24@32@40^@48
B48@0:8@16^{_OpaquePCSShareProtection=}24@32@40
@"CKDModifyRecordsOperation"
@"CKDRecordPCSData"
@"CKDSharePCSData"
@32@0:8@16i24i28
{?="radius"b1}
^q16@0:8
q24@0:8Q16
v32@0:8^q16Q24
{?="list"^q"count"Q"size"Q}
{?="assetSize"b1"recovered"b1}
@"CKServerChangeToken"
B28@0:8@16B24
^{__SecTrust=}32@0:8@16^{__SecPolicy=}24
B44@0:8q16@24^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}32B40
B40@0:8@16@24^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}32
@40@0:8@16@24^{__SecPolicy=}32
B32@0:8@16^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}24
^{__SecPolicy=}16@0:8
^{__SecPolicy=}
@52@0:8@16@24@32@40B48
{?="created"b1"expires"b1}
{?="size"b1"lastItem"b1}
@"CKDFetchRecordsOperation"
@"CKDPParticipant"
{?="participantPermission"b1"participantState"b1"participantType"b1}
@"<CKXPCLogicalDeviceScopedClient>"
{?="operationGroupQuantity"b1}
@"Protocol"
@"NSInvocation"
@"CKDPMergeableDeltaMetadata"
{?="payload"b1}
@40@0:8@16q24^@32
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"CKDAssetHandleTable"
@"CKDAssetVolumeTable"
@24@0:8B16B20
@56@0:8@16@24@32^B40^@48
i32@0:8@16^@24
Q20@0:8B16
B40@0:8@16q24^@32
B40@0:8@16^@24^@32
@"CKSAssetCacheTableGroup"
@40@0:8@16^B24@?32
v24@0:8@"CKObjectDescription"16
@"NSString"20@0:8B16
v24@0:8@"CKProcessScopedMetadata"16
v40@0:8@"CKContainerSetupInfo"16@"<CKXPCContainerScopedClient>"24@?<v@?@"<CKXPCContainerScopedDaemon>"@"NSError">32
v32@0:8@"CKTestDeviceReference"16@?<v@?@"<CKXPCLogicalDeviceScopedDaemon>">24
v24@0:8@?<v@?@"<CKXPCProcessScopedDaemon>">16
v24@0:8@?<v@?@"<CKXPCTestDaemonAdmin>">16
@"NSXPCConnection"
@"NSHashTable"
@"CKCoalescer"
@"NSPointerArray"
@"CKDPResponseOperationResultErrorAuxiliaryError"
@"CKDPResponseOperationResultErrorClient"
@"CKDPResponseOperationResultErrorExtension"
@"CKDPResponseOperationResultErrorServer"
{?="retryAfterSeconds"b1}
@48@0:8@16@24^B32^@40
v24@0:8^v16
v24@0:8^{_mmcs_engine=}16
^{_mmcs_engine=}
B32@0:8@16Q24
@40@0:8@16@24Q32
v44@0:8@16@24B32@36
B72@0:8@16@24Q32*40Q48^Q56^@64
B32@0:8@"CKDMMCSItemGroupContext"16Q24
@"<CKDMMCSItemReaderWriterProtocol>"40@0:8@"CKDMMCSItemGroupContext"16@"<CKDMMCSItemReaderWriterProtocol>"24Q32
B40@0:8@"CKDMMCSItemGroupContext"16@"<CKDMMCSItemReaderWriterProtocol>"24^@32
v44@0:8@"CKDMMCSItemGroupContext"16@"<CKDMMCSItemReaderWriterProtocol>"24B32@"NSError"36
@"CKFileMetadata"48@0:8@"CKDMMCSItemGroupContext"16@"<CKDMMCSItemReaderWriterProtocol>"24@"CKFileMetadata"32@"NSError"40
B72@0:8@"CKDMMCSItemGroupContext"16@"<CKDMMCSItemReaderWriterProtocol>"24Q32*40Q48^Q56^@64
B64@0:8@16Q24*32Q40^Q48^@56
B32@0:8@"<CKDMMCSItemReaderWriterProtocol>"16^@24
v36@0:8@"<CKDMMCSItemReaderWriterProtocol>"16B24@"NSError"28
@"CKFileMetadata"40@0:8@"<CKDMMCSItemReaderWriterProtocol>"16@"CKFileMetadata"24@"NSError"32
B64@0:8@"<CKDMMCSItemReaderWriterProtocol>"16Q24*32Q40^Q48^@56
@72@0:8@16@24@32@?40@?48@?56@?64
v44@0:8Q16i24d28@36
v36@0:8i16d20@28
v56@0:8Q16@24@32@40@48
v40@0:8Q16@24@32
^{MMCSItemReaderWriter=}32@0:8Q16^@24
@"CKDMMCSItemGroup"
{?="index"b1"isReversed"b1}
{?="changeType"b1}
{?="participantSelfRemovalBehavior"b1"publicAccess"b1"publisherModelType"b1"anonymousPublicAccess"b1"publisherModel"b1}
@"CKDBackingExplicitCredentialsAccount"
@"ACAccount"
@"CKDPAnonymousZoneInfo"
{?="changeType"b1"deleteType"b1"isAnonymous"b1}
v32@0:8B16B20@24
v24@0:8@"CKOperationGroupSystemImposedInfo"16
v24@0:8@"CKRequestInfo"16
v32@0:8@"CKFileOpenInfo"16@?<v@?@"CKFileOpenResult"@"NSError">24
v32@0:8@"CKAssetDownloadStagingInfo"16@?<v@?@"NSURL"@"NSFileHandle"@"NSError">24
v32@0:8@"CKOperationMetrics"16@"NSError"24
v32@0:8B16B20@"NSError"24
v36@0:8@"NSString"16B24@?<v@?@"CKOperationLifecycleAction"@"NSError">28
@48@0:8@16@24:32@40
:16@0:8
v24@0:8:16
@"CKDOperationInfoCache"
@"PCCKey"
@"CKDTrustedTargetKey"
@"CKDPMergeableDelta"
^i16@0:8
i24@0:8Q16
v32@0:8^i16Q24
{?="list"^i"count"Q"size"Q}
@"CKDPSubscriptionNotification"
{?="evaluationType"b1"owner"b1"fireOnce"b1}
@"CKDPFieldActionDeleteListRange"
@"CKDPFieldActionInsertIntoList"
@"CKDPFieldActionReplaceListRange"
{?="status"b1"pendingArchivedRecords"b1}
@"CKCDPErrorUserInfoValue"
@"CKPCSDiagnosticInformation"
{?="authPutType"b1}
{?="listIndex"b1"isPackage"b1"skipWriteMissingAssetStatusRecord"b1}
@"CKRecordZone"
@"CKDPReservedVoucher"
{?="constructedAssetDownloadEstimatedSize"b1"constructedAssetDownloadURLExpiration"b1"downloadTokenExpiration"b1"downloadURLExpiration"b1"size"b1}
{?="acceptTimestamp"b1"keyHealth"b1"outOfNetworkKeyType"b1"participantType"b1"permission"b1"publicKeyVersion"b1"state"b1"acceptedInProcess"b1"createdInProcess"b1"isAnonymousInvitedParticipant"b1"isInNetwork"b1"isOrgUser"b1}
@"<CKDOperationInfoDelegate>"
{?="vettingError"b1}
{?="port"b1}
@36@0:8@16@24i32
{?="doubleValue"b1"longValue"b1"type"b1"boolValue"b1}
@"CKDPQuery"
{?="limit"b1}
@24@0:8@"NSDictionary"16
@"NSDictionary"16@0:8
B40@0:8@16@24@32
d24@0:8@16
@"CKUploadRequestConfiguration"
@"CKDFetchRecordZonesOperation"
@"CKDModifyRecordZonesOperation"
@"CKDMarkAssetBrokenURLRequestWrapperOperation"
@"CKDMarkAssetBrokenURLRequest"
v24@0:8^{_PCSIdentityData=}16
^{_PCSIdentityData=}
{?="sharingType"b1"atomicSaves"b1"ckql"b1"fetchChanges"b1"hierarchicalSharing"b1"zoneSharing"b1}
@48@0:8@16@24q32@40
@60@0:8@16B24@28@36@44@52
@"CKMergeableRecordValue"
i48@0:8@16@24@32@40
@"CKDDecryptRecordsOperation"
@"<CKSQLiteItem>"
^{__CFDictionary=}24@0:8@16
@32@0:8@16B24B28
v88@0:8@16@24@32@40@48@56@64@72@80
@"C2MetricOptions"
@"CKOperationMMCSRequestOptions"
@"CKTestAccount"
@"CKTestDevice"
v44@0:8@16B24@28@36
c24@0:8@16
@36@0:8@16@24c32
@"PDSRegistrar"
@"CKCDPCodeServiceResponseAttestationResponse"
@"CKCDPError"
v28@0:8i16r^*20
@28@0:8i16r^*20
{?="auxiliaryCode"b1"code"b1"targetPartition"b1}
{?="status"b1}
@"CKDThrottleTableGroup"
@"CKThrottleTable"
{?="allAssets"b1}
{?="maxChanges"b1"requestedChangeTypes"b1"ignoreCallingDeviceChanges"b1"includeMergeableDeltas"b1"newestFirst"b1}
@48@0:8@16@24Q32@40
@56@0:8@16@24B32B36@40@48
@56@0:8@16q24Q32@40@48
@40@0:8@16q24Q32
v48@0:8@16q24Q32@40
v56@0:8@16@24q32Q40@?48
@"CKDPCSSQLCacheTableGroup"
@"CKDPCSSQLCacheTable"
@48@0:8@16@24@32^{_OpaquePCSShareProtection=}40
@"CKTestDeviceReference"
@"CKSQLiteDatabase"
@"CKDLogicalDeviceScopedStateManager"
@"CKDAccountDataSecurityObserver"
@"CKTestServer"
@"CKDMetadataCache"
@"CKDThrottleManager"
@"CKDTokenRegistrationScheduler"
@32@0:8^{_PCSIdentitySetData=}16@24
^{_PCSIdentitySetData=}16@0:8
^{_PCSIdentitySetData=}
^{_PCSIdentitySetData=}40@0:8@16@24^@32
@48@0:8@16@24@32B40I44
^{_PCSIdentitySetData=}40@0:8@16B24B28^@32
^{_PCSIdentitySetData=}40@0:8Q16Q24^@32
^{_PCSIdentitySetData=}24@0:8^@16
^{_PCSPublicIdentityData=}40@0:8Q16@24^@32
@40@0:8Q16@24^@32
@32@0:8^{_PCSIdentitySetData=}16Q24
@40@0:8^{_PCSIdentitySetData=}16Q24^@32
@40@0:8@16@24^{_PCSIdentitySetData=}32
B48@0:8^{_PCSIdentitySetData=}16@24@32^@40
B40@0:8^{_PCSIdentitySetData=}16@24^@32
B40@0:8@16^{_PCSIdentitySetData=}24^@32
@"CKDPCodeFunctionInvokeResponseAttestationResponse"
v32@0:8@"NSString"16@"CKDLongLivedOperationPersistedCallback"24
v24@0:8@"NSString"16
@44@0:8@16@24q32B40
*16@0:8
^v16@0:8
{?="keyVersion"b1"scheme"b1}
@52@0:8@16@24@32q40B48
@36@0:8@16q24B32
@44@0:8@16B24^@28^@36
@52@0:8@16@24@32B40^@44
@28@0:8@16i24
@"<CKDProtocolTranslatorIdentityDelegate>"
@"CKDPDistributedTimestamps"
@"CKEncryptedData"
@"CKDChainPCSData"
{?="discoverable"b1}
@"NSUUID"
{?="numericValue"b1"identifier"b1}
@"CKCDPCodeServiceRequestServiceClientConfig"
{?="serviceType"b1}
{?="duration"b1"expirationTime"b1"operationType"b1}
@40@0:8Q16@24d32
v24@0:8@"<MMCSOperationStateTimeRange>"16
@"<MMCSOperationStateTimeRange>"40@0:8Q16@"NSDate"24d32
@"NSDate"16@0:8
@"NSMutableDictionary"16@0:8
@"NSMutableSet"16@0:8
@"NSArray"16@0:8
q24@0:8@"<MMCSOperationStateTimeRange>"16
@"CKDPUser"
@72@0:8@16@24@32@40B48B52@56@64
@64@0:8@16@24@32q40@48@56
@"CKCDPCodeServiceRequestAccountConfig"
@"CKCDPCodeServiceRequestAssetAuthorizeGetRequestOptions"
@"CKCDPCodeServiceRequestAttestationRequest"
@"CKCDPCodeServiceRequestAuthInformation"
@"CKCDPCodeServiceRequestProtectedCloudComputeMetadata"
@"CKCDPCodeServiceRequestRequestContext"
{?="dataProtection"b1"serializationFormat"b1}
{?="clientVersionETagMatch"b1}
{?="containerEnvironment"b1"databaseType"b1"operationType"b1}
@24@0:8r*16
@"CKDAssetZone"
d32@0:8@16d24
@32@0:8@16#24
{?="maxChangedZones"b1}
@"CKCDPCodeServiceRequestDatabaseOwner"
@"CKCDPCodeServiceRequestOperationGroup"
{?="dsid"b1"databaseEnvironment"b1"databaseType"b1}
v32@0:8@"NSString"16@"NSArray"24
v32@0:8@"NSString"16@?<v@?@"NSError">24
v32@0:8@"NSString"16q24
v24@0:8@?<v@?Q>16
@"CKUploadRequestMetadata"
{?="badgeCount"b1"source"b1"isRead"b1}
B68@0:8@16@24^{_OpaquePCSShareProtection=}32@40B48B52B56^@60
@"CKDPSubscriptionNotificationAlert"
{?="shouldBadge"b1"shouldSendContentAvailable"b1"shouldSendMutableContent"b1}
q24@0:8^@16
B36@0:8@16B24^@28
{?="expired"b1}
^{pcc_wrapped_invocation_key=*Q}16@0:8
v24@0:8^{pcc_wrapped_invocation_key=*Q}16
^{pcc_wrapped_invocation_key=*Q}
^{pcc_invocation_key=[32C]}16@0:8
v24@0:8^{pcc_invocation_key=[32C]}16
^{pcc_invocation_key=[32C]}
[K,,
ryU$
JG_D
\]^1
y,Dr
oM'+
lAE#
Hh-~
<PM0
O" '
8{:Y
@@N:g
>J?50}1
VJw~kX=
MIW'
d~ou
*(\
P"91d
]vF&
,)IKA
]'by
v{S%
0su5
:`0p
|%,Gf
8rf2
+r-R
rhak
^+ p
xPDH
nhAB
1@r~
H++Yx
4|0@
_OUBQ<"i
[mYK
gZE.o
cN5`
<@uGp
Yeu#t
J|{n
.=Ok
''Nok$%
Sqg{
lR2`
M*$_6
y({2
aS.w
#m7 
S+Ed_ZiY
jB9u
h=Fz}
q`0,
ip"7
M3a
;?`zF
BjLPB
&j(%
N"hS4Rx
 q.G
R_S.
Ru86CJ
eqf'
i+8<
q"$(
X\d"
H)i_
_7Pdl
o)fU
8pLz[=
Ogj2
|oW,L
S1fs
oG2j
V{_Yo|
"s4<
\K%u
2RH^
1D{&
gdhOf
'1Kd
Rf<T
G$E-
'*G=c
7*uk
xev*P
&R3!
9vMO}
s5r>
sZD1+
i373
*ShTz
Ww?I
Q+Gd
z#jyh
CeS
&A/<M
w9&iS
LTlk\
(F^$
'[{<
wPN9
oVmL^
kH2
wRCe
bQT
3Bv]
yA5>
4#cj0
kk~a
^o1;3
de3|
eug;
y7FM
U.T:
+_F3
aBy=O}
thDl]
4>=2
c=0<
{,a>
HQ,=
P@ct
/$) d
Dg|"
b=e5"
nkQp(l
@8*Q
a&wFxac
dum;v
mLl4
xYbA
Kt3)
=Q07
Q!P.
Oj}s
b+6
^+H!
rg6T
.\=]
J((T
/UG[
wpEvI
