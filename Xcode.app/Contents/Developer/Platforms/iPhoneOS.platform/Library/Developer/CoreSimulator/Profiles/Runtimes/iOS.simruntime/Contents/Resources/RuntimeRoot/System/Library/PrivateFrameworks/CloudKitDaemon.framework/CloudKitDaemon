%@ %@
container
containerEnvironment
record
shareRecord
shareMetadata
protectionInfo
recordProtectionInfo
recordZone
hasContainer
TB,R,N
T@"NSString",&,N,V_container
hasContainerEnvironment
TB,N
Ti,N,V_containerEnvironment
records
T@"NSMutableArray",&,N,V_records
hasShareRecord
T@"CKDPRecord",&,N,V_shareRecord
hasShareMetadata
T@"CKDPShareMetadata",&,N,V_shareMetadata
hasProtectionInfo
T@"CKDPProtectionInfo",&,N,V_protectionInfo
hasRecordProtectionInfo
T@"CKDPProtectionInfo",&,N,V_recordProtectionInfo
hasRecordZone
T@"CKDPZone",&,N,V_recordZone
production
sandbox
(unknown: %i)
MMCS
Records
CloudKit
Assets
Packages
AssetsDb
v8@?0
purged
TB,N,V_purged
oldCacheDirs
T@"NSArray",R,N,V_oldCacheDirs
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/RecordCache/CKDRecordCache.m
<Unknown File>
Expected non-nil db
Expected an opened db at %@
Expected non-nil db pool
Expected non-nil db for %@
Anonymous
Unknown
B24@?0@"NSString"8@16
Can't fetch a record if we don't have a recordID
No container ID
No scope
No environment
No dsid
recordData
knownUserKeys
Record
identifier = ? and expirationTime > ? and containerIdentifier = ? and containerScope = ? and containerEnvironment = ? and dsid = ?
modificationTime DESC
Expected a recordID
Expected recordIDs
No containerID
identifier IN ( ?
(%@) and expirationTime > ? and containerIdentifier = ? and containerScope = ? and containerEnvironment = ? and dsid = ?
identifier
Null record
Null recordID
Null recordName
Null zoneID
Null etag
zoneIdentifier
containerIdentifier
containerScope
etag
modificationTime
expirationTime
dsid
size
excluded.modificationTime >= Record.modificationTime
Expected a recordName
Expected a zoneID
No context
identifier = ? and containerIdentifier = ? and containerScope = ? and containerEnvironment = ? and dsid = ? and expirationTime > ?
Expected a objectID
identifier = ? and containerIdentifier = ? and containerScope = ? and containerEnvironment = ?
containerIdentifier = ? and containerScope = ? and containerEnvironment = ? and dsid = ?
containerIdentifier = ? and containerEnvironment = ? and dsid = ?
zoneIdentifier = ? and containerIdentifier = ? and containerScope = ? and containerEnvironment = ? and dsid = ?
yyyy-MM-dd HH:mm:ss
recordSizeTotal
delete from Record where expirationTime < %llu
rowid
v24@?0@"NSDictionary"8^B16
rowid IN (%@)
queue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
T@"CKSQLite",&,N,V_db
dbPool
T@"CKSQLitePool",&,N,V_dbPool
context
T@"CKDClientContext",&,N,V_context
scope
Tq,N,V_scope
lastExpiryAttempt
T@"NSDate",&,N,V_lastExpiryAttempt
recordType=%@
recordID=%@
sizeUpperBound=%lu
isPackageSectionRecord=%@
-[CKDAssetRecord addMMCSItem:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/Assets/CKDAssetRecord.m
nil == item.package || item.isTemporary
-[CKDAssetRecord addRereferencedMMCSItem:]
-[CKDAssetRecord addMMCSSectionItem:]
nil != item.package
v32@?0@8@16^B24
q24@?0@8@16
v32@?0@8Q16^B24
itemsByRecordKey
T@"NSMutableDictionary",&,N,V_itemsByRecordKey
rereferencedItemsByRecordKey
T@"NSMutableDictionary",&,N,V_rereferencedItemsByRecordKey
sectionItemsByRecordKey
T@"NSMutableDictionary",&,N,V_sectionItemsByRecordKey
sizeUpperBoundNumber
T@"NSNumber",&,N,V_sizeUpperBoundNumber
rerefSizeUpperBoundNumber
T@"NSNumber",&,N,V_rerefSizeUpperBoundNumber
recordType
T@"NSString",R,N,V_recordType
recordID
T@"CKRecordID",R,N,V_recordID
sizeUpperBound
TI,R
rerefSizeUpperBound
allMMCSItems
T@"NSArray",R,N
allMMCSSectionItems
Records.db
create table if not exists Record (
    identifier           text,
    zoneIdentifier       text,
    containerIdentifier  text,
    containerScope       integer,
    containerEnvironment integer,
    etag                 text,
    modificationTime     integer not null,
    expirationTime       integer not null,
    recordData           blob,
    knownUserKeys        blob,
    dsid                 text,
    size                 integer,
    primary key (identifier, containerIdentifier, containerScope, containerEnvironment, dsid, knownUserKeys));
create index if not exists RecordIDIndex on Record (identifier, containerIdentifier, containerScope, containerEnvironment, dsid);
create index if not exists ZoneIDIndex on Record (zoneIdentifier, containerIdentifier, containerScope, containerEnvironment, dsid);
create index if not exists RecordExpirationTimeIndex on Record (expirationTime);
create index if not exists RecordModificationTimeIndex on Record (modificationTime);
create trigger if not exists UpdateRecordSizeTotalDelete before delete on Record
    begin
    update Properties set value = cast((cast(value as integer) - Old.size) as text) where key = "recordSizeTotal";
    end;
create trigger if not exists UpdateRecordSizeTotalAdd after insert on Record
    begin
    update Properties set value = cast((cast(value as integer) + New.size) as text) where key = "recordSizeTotal";
    end;
insert or ignore into Properties values ("recordSizeTotal", "0");
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/RecordCache/CKDRecordCachePool.m
Expected non-nil context
com.apple.cloudkit.%@
com.apple.cloudkit.recordCachePool.recordExpiryQueue
com.apple.cloudkit.recordCachePool.expireRecords
Context doesn't have an applicationContainerCloudKitDirectory: %@
@"CKSQLite"8@?0
Couldn't create a cache at %@
pools
T@"NSMutableDictionary",&,N,V_pools
recordExpiryQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_recordExpiryQueue
storageAvailableBytes
hasStorageAvailableBytes
TQ,N,V_storageAvailableBytes
v16@?0@"CKDMMCSItemGroup"8
itemGroupSet
T@"CKDMMCSItemGroupSet",&,N,V_itemGroupSet
operation
T@"CKDOperation",W,N,V_operation
itemGroupContexts
T@"NSMutableArray",&,N,V_itemGroupContexts
itemGroupCompletionBlock
T@?,C,N,V_itemGroupCompletionBlock
itemGroupSetCompletionBlock
T@?,C,N,V_itemGroupSetCompletionBlock
itemGroupSetCompletionGroup
T@"NSObject<OS_dispatch_group>",&,N,V_itemGroupSetCompletionGroup
mmcsOperationType
Tq,N,V_mmcsOperationType
creation
modification
hasCreation
T@"CKDPDate",&,N,V_creation
hasModification
T@"CKDPDate",&,N,V_modification
CreatedInProcess
ParticipantAcceptedInProcess
NameComponents
Email
Phone
AcceptedInProcess
v24@?0@"NSData"8@"NSError"16
v16@?0@"NSError"8
Couldn't create share PCS data for share %@
v24@?0@"CKDSharePCSData"8@"NSError"16
changeID
pushMessage
moreAvailable
hasChangeID
T@"NSData",&,N,V_changeID
pushMessages
T@"NSMutableArray",&,N,V_pushMessages
hasMoreAvailable
TB,N,V_moreAvailable
local-fetch-only
wants-parent
wants-zoneish
(%@)
none
%lu-%@
com.apple.CloudKit.PCSCache.fetchQueue
com.apple.CloudKit.PCSCache.callbackQueue
v24@?0@"CKDPCSSQLCache"8@"NSError"16
v16@?0@"CKDOperation"8
v16@?0@"CKDPCSData"8
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/ProtectedCloudStorage/CKDPCSCache.m
Invalid record ID: %@
v16@?0@?<v@?@"CKDOperation">8
Invalid zone ID: %@
Invalid share ID: %@
PCS data is of the wrong class: %@
In-memory zone cache:
In-memory record cache:
In-memory share cache:
SQL cache:
%lu outstanding fetch requests for %lu records
T@"CKDClientContext",W,N,V_context
sqlCache
T@"CKDPCSSQLCache",R,N,V_sqlCache
recordMemoryCache
T@"CKDPCSMemoryCache",R,N,V_recordMemoryCache
zoneMemoryCache
T@"CKDPCSMemoryCache",R,N,V_zoneMemoryCache
shareMemoryCache
T@"CKDPCSMemoryCache",R,N,V_shareMemoryCache
outstandingFetches
T@"NSMutableDictionary",&,N,V_outstandingFetches
fetchQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_fetchQueue
callbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_callbackQueue
com.apple.cloudkit.server.statusreport.callback
com.apple.cloudkit.server.statusreport
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
v12@?0i8
hash
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
%lu connected clients
%lu recent clients:
------ Shared Foreground Queue Operations -------
%lu/%ld {
No operations.
------ Global Configuration Manager -------
-------------------------------------------
------ Operations Holding Power Assertions -------
Cached environment is %@
Error preparing for long-lived operation %@. Operation class missing.
 not
v32@?0@"CKDAppContainerTuple"8@"CKDOperationInfoMetadata"16^B24
xpcListener
T@"NSXPCListener",&,N,V_xpcListener
connectedClients
T@"NSMutableArray",&,N,V_connectedClients
recentClientsByProcessName
T@"NSMutableDictionary",&,N,V_recentClientsByProcessName
sighandlerSource
T@"NSObject<OS_dispatch_source>",&,N,V_sighandlerSource
clientTeardownQueue
T@"NSOperationQueue",&,N,V_clientTeardownQueue
stateHandle
TQ,N,V_stateHandle
statusReportRequestSource
T@"NSObject<OS_dispatch_source>",&,N,V_statusReportRequestSource
statusReportQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_statusReportQueue
statusReportCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_statusReportCallbackQueue
statusReportCallbacks
T@"NSMutableArray",&,N,V_statusReportCallbacks
tccToken
Ti,N,V_tccToken
com.apple.tcc.access.changed
protectionInfoTag
T@"NSData",&,N,V_protectionInfo
hasProtectionInfoTag
T@"NSString",&,N,V_protectionInfoTag
serverType
CKDatabaseService
endpoint
/api/client/record/retrieve
partitionType
databaseSpecificPartition
recordIdentifier
requestedFields
versionETag
clientVersionETag
getAssetURL
assetsToDownload
shouldFailBatch
hasRecordIdentifier
T@"CKDPRecordIdentifier",&,N,V_recordIdentifier
hasRequestedFields
T@"CKDPRequestedFields",&,N,V_requestedFields
hasVersionETag
T@"NSString",&,N,V_versionETag
hasClientVersionETag
T@"NSString",&,N,V_clientVersionETag
hasGetAssetURL
T@"CKDPRecordRetrieveRequestRetrieveAssetURL",&,N,V_getAssetURL
hasAssetsToDownload
T@"CKDPAssetsToDownload",&,N,V_assetsToDownload
hasShouldFailBatch
TB,N,V_shouldFailBatch
proxy
T@"CKDClientProxy",W,N,V_proxy
isExecuting
TB,N,V_isExecuting
isFinished
TB,N,V_isFinished
name=%@
flags=sandboxed
com.apple.cloudkit.accountStatus
com.apple.cloudkit.setup
com.apple.cloudkit.cancellation
com.apple.cloudkit.status
com.apple.cloudkit.tccauth
%s(%d)
v16@?0@"NSNotification"8
approved
REJECTED
approval
rejection
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/CKDClientProxy.m
Trying to fetch the value for entitlement with key %@, but %@ hasn't been added to CKAllClientEntitlementKeys() set so it was never fetched
application-identifier
Expected non-nil operation for proxy %@
Expected non-nil context for operation %@
Expected non-nil bundleIdentifier for operation %@
Connection %@ is not allowed to set an operation sourceApplicationBundleIdentifier to %@ without an entitlement
Connection %@ is not allowed to set an operation sourceApplicationSecondaryIdentifier to %@ without an entitlement
Expected non-nil error for operation %@
nil setupInfo
v24@?0@"CKDClientContext"8@"NSError"16
Expected non-nil context for %@
Expected non-nil operation with operationID %@ and proxy %@
v16@?0@"CKRequestInfo"8
Operation %@ was cancelled
Client went away before operation %@ could be validated; failing
. Error was 
No iCloud account is configured
@"CKDOperation"24@?0@"CKDClientProxy"8@"CKDClientContext"16
ALTERNATE_DISCOVERABILITY_TITLE
ALTERNATE_DISCOVERABILITY_BODY
v24@?0^v8Q16
v28@?0q8B16@"NSError"20
DISCOVERABILITY_TITLE
DISCOVERABILITY_BODY
DONT_ALLOW
Could not create a user notification %d
Could not create a user notification
v24@?0q8@"NSError"16
nil connection
v24@?0@"CKFileOpenResult"8@"NSError"16
timeout
open failed
v24@?0@"CKFileMetadata"8@"NSError"16
timeout waiting on file metadata
metadata fetch failed
timeout waiting for read bytes
read bytes failed
v24@?0@"CKUserIdentityLookupInfo"8@"CKUserIdentity"16
v32@?0@"CKUserIdentityLookupInfo"8@"CKShareParticipant"16@"NSError"24
v32@?0@"CKRecordZoneID"8@"CKRecordZone"16@"NSError"24
v24@?0@"CKRecordZoneID"8@"NSError"16
v32@?0@"CKRecordZone"8@"CKRecordZoneID"16@"NSError"24
v16@?0@"CKRecordZoneID"8
v24@?0@"NSDictionary"8@"NSError"16
v32@?0@"CKServerChangeToken"8q16@?<v@?>24
v24@?0@"CKRecordID"8d16
v24@?0@"NSArray"8@?<v@?>16
v40@?0@"CKRecordID"8@"CKRecord"16@"CKRecord"24@"NSError"32
v24@?0@"CKRecordID"8@"NSError"16
v108@?0@"CKRecordID"8@"NSString"16q24@"NSData"32Q40Q48B56@"NSString"60d68@"NSData"76@"NSData"84@"NSData"92@"NSError"100
v24@?0@"CKRecordID"8@"NSDictionary"16
v32@?0@"CKRecord"8@"CKRecordID"16@"NSError"24
v40@?0@"CKRecordID"8@"NSString"16@"CKRecord"24@"NSError"32
v60@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24q32B40@"NSError"44@?<v@?>52
v36@?0@"CKRecordID"8B16@"NSArray"20@"NSError"28
v24@?0@"CKRecord"8@"NSError"16
v48@?0@"CKRecordZoneID"8@"CKServerChangeToken"16q24@"NSError"32@?<v@?>40
v40@?0@"CKRecordID"8@"NSString"16@"CKAsset"24@"NSError"32
v24@?0@"CKUploadRequestMetadata"8@"NSError"16
Missing %@ entilement
v40@?0@"CKRecordID"8@"NSData"16@"NSString"24@"NSError"32
v24@?0@"CKEncryptedData"8@"NSError"16
Failed to retrieve host and port from %@.
Failed to create nw_endpoint for host %@ with port %@.
Failed to copy nw_endpoint.
v24@?0Q8@"NSError"16
v16@?0@"CKRecord"8
v24@?0@"CKQueryCursor"8@?<v@?>16
v24@?0@"NSString"8@"NSError"16
v32@?0@"CKSubscription"8@"NSString"16@"NSError"24
v16@?0@"CKNotification"8
v24@?0@"CKNotificationID"8@"NSError"16
v32@?0@"NSURL"8@"CKShare"16@"NSError"24
v32@?0@"NSURL"8@"CKShareMetadata"16@"NSError"24
v16@?0@"NSURL"8
v16@?0@"CKShareMetadata"8
v32@?0@"CKRecordID"8@"NSString"16@"NSError"24
Connection %@ is not allowed to decrypt share personal info
v32@?0@"NSArray"8@"NSArray"16@?<v@?@"NSData"@"NSError">24
v24@?0@"NSData"8@?<v@?@"NSArray"@"NSError">16
v16@?0@"NSArray"8
This requires an authenticated account, we have no account
This requires an authenticated account, we have only have an anonymous account
This requires an authenticated account, the current account cannot auth with CloudKit
The account has no apsEnv in its dataclass bag
<%lu bytes>
This requires an authenticated account
Expected non-nil setupInfo for proxy %@
Connection %@ is not entitled to use fake entitlements.
Connection %@ is not allowed to set custom account info
Connection %@ is missing the %@ or %@ entitlement
Connection %@ is not allowed to set its bundleID to %@ without the %@ entitlement
Connection %@ has an incorrectly formatted entitlement value for "%@".
Connection %@ is not entitled to use CloudKit
v24@?0@"NSArray"8@"NSError"16
Expected non-nil client context for proxy %@
v16@?0@"CKDRecordCache"8
v16@?0@"CKSyncingClientInfo"8
v24@?0@"CKSyncingClientInfo"8d16
v24@?0@"CKSyncingClientInfo"8@"NSError"16
v32@?0@"CKRecordZoneID"8@"CKZonePCSDiagnosticInformation"16@"NSError"24
____ %@ Daemon Status Report: "%@" (client:"%@", container:"%@", connected since: %@)
%%%%% Operations %%%%%
Queued operations %lu/%ld {
No queued operations.
More Operations %lu/%lu/%ld {
No more operations.
Other Proxy Operations On Shared Throttling Queue %lu/%lu/%ld {
CloudKit Support Operations %lu/%ld {
More background operations %lu/%ld {
No background operations.
foregroundZoneGatekeeper {
backgroundZoneGatekeeper {
%%%%%%%%%%%%%%%%%%%%%%%%
%%%% Operation Statistics %%%%
~~~~~ Flow Control ~~~~~
~~~~~~~~~~~~~~~~~~~~~~~~
----- MMCS Engine  -----
(No MMCS Engine)
------------------------
~~~~~ PCS Cache ~~~~~
(No PCS Cache)
~~~~~~~~~~~~~~~~~~~~~~~~
_____________________________
v24@?0@"LSBundleProxy"8^B16
Library/Caches/CloudKit
ckctl triggered AutoBugCapture
com.apple.cloudd.metrics
file-read-data
Missing entitlement (%@)
accountStatusWorkloop
T@"NSObject<OS_dispatch_workloop>",R,N
setupQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_setupQueue
cancellationQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_cancellationQueue
statusQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_statusQueue
cloudKitSupportOperationThrottleQueue
T@"NSOperationQueue",&,N,V_cloudKitSupportOperationThrottleQueue
backgroundOperationThrottleQueue
T@"NSOperationQueue",&,N,V_backgroundOperationThrottleQueue
cachedSandboxExtensions
T@"NSArray",&,N,V_cachedSandboxExtensions
pendingContexts
T@"NSMutableArray",&,N,V_pendingContexts
sandboxed
TB,N,GisSandboxed,V_sandboxed
canUsePackages
TB,N,V_canUsePackages
canOpenByID
TB,N,V_canOpenByID
holdAllOperations
TB,N,V_holdAllOperations
pendingOperationIDs
T@"NSMutableSet",&,N,V_pendingOperationIDs
connectionDate
T@"NSDate",&,N,V_connectionDate
hasTCCAuthorizationTernary
Tq,N,V_hasTCCAuthorizationTernary
connectionEntitlements
T@"NSDictionary",&,N,V_connectionEntitlements
hasFakeEntitlements
TB,N,V_hasFakeEntitlements
tccAuthOpQueue
T@"NSOperationQueue",&,N,V_tccAuthOpQueue
tccAuthQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_tccAuthQueue
TCCDatabaseChangedNotificationObserver
T@"<NSObject>",&,N,V_TCCDatabaseChangedNotificationObserver
operationStatisticsByClassName
T@"NSMutableDictionary",&,N,V_operationStatisticsByClassName
cachedApplicationBundleID
T@"NSString",&,N,V_cachedApplicationBundleID
sourceApplicationBundleID
T@"NSString",&,N,V_sourceApplicationBundleID
connection
T@"NSXPCConnection",W,N,V_connection
_outstandingOperationCount
TQ,R,N
associatedApplicationBundleID
T@"NSString",R,N
applicationBundleIDForPush
fetchAggregator
T@"CKDPCSFetchAggregator",&,N,V_fetchAggregator
T@"CKDClientContext",&,N
operationQueue
T@"NSOperationQueue",&,N,V_operationQueue
cleanupOperationQueue
T@"NSOperationQueue",&,N,V_cleanupOperationQueue
Ti,R,N,V_pid
procName
T@"NSString",R,N,V_procName
com.apple.cloudkit.proxyTCCQueue
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/CKDClientContext.m
Client context must be init with valid appContainerTuple
old pathname overlaps with new pathname %@
v20@?0@"NSString"8B16
System
AppleInternal
v24@?0@8^B16
Library/Caches
StagingAssets
FrameworkCaches
icns
%@-%@
not 
Failed to issue sandbox extension for "%@" at %@: %d (%s)
Expected non-nil MMCS wrapper for %@
UUID=%@, applicationBundleID=%@, sourceApplicationBundleID=%@, personaID=%@, containerID=%@
internal
zoneish
mmcsv1-v2
mmcsv2
nopcs
forceManatee
flags=%@
The PCS Service name entitlement currently being used in %@ (%@) is different than one provided in finishSetup (%@).
v24@?0@"CKDServerConfiguration"8@"NSError"16
v24@?0@"CKDContainerInfo"8@"NSError"16
v20@?0B8@"NSError"12
(unknown)
You must have an applicationBundleID set on context %@
PublicIdentities
Invalid fake response lifetime
-[CKDClientContext countAssetCacheItems]
0 && "no context.MMCS"
self.MMCS && "no context.MMCS"
-[CKDClientContext showAssetCache]_block_invoke
context.MMCS && "no context.MMCS"
contextType
Tq,R,N
config
T@"CKDServerConfiguration",R,N
flowControlManager
T@"CKDFlowControlManager",R,N
pcsManager
T@"CKDPCSManager",R,N
foregroundZoneGatekeeper
T@"CKDZoneGatekeeper",R,N
backgroundZoneGatekeeper
containerScopedUserID
containerID
T@"CKContainerID",R,N
applicationBundleID
personaID
hardwareID
deviceName
languageCode
regionCode
applicationVersion
applicationFrameworkCachesDirectory
applicationPackageStagingDirectory
bypassPCSEncryption
canAccessProtectionData
canAuthWithCloudKit
hasSystemServiceEntitlement
apsEnvironmentString
applicationBundleIDForServer
processName
canAccessAccount
account
T@"CKDAccount",&,V_account
T@"CKDMMCS",&,V_MMCS
finishedAppProxySetup
TB,N,V_finishedAppProxySetup
finishedProxySetup
TB,N,V_finishedProxySetup
contextID
T@"NSString",R,N,V_contextID
T@"CKDZoneGatekeeper",&,N,V_foregroundZoneGatekeeper
T@"CKDZoneGatekeeper",&,N,V_backgroundZoneGatekeeper
cachePurger
T@"CKDCachePurger",&,N,V_cachePurger
applicationContainerPath
T@"NSString",&,N,V_applicationContainerPath
applicationContainerCloudKitDirectory
T@"NSString",&,N,V_applicationContainerCloudKitDirectory
applicationCachesDirectory
T@"NSString",&,N,V_applicationCachesDirectory
applicationMMCSDirectory
T@"NSString",&,N,V_applicationMMCSDirectory
applicationAssetDbDirectory
T@"NSString",&,N,V_applicationAssetDbDirectory
applicationFileStagingDirectory
T@"NSString",&,N,V_applicationFileStagingDirectory
applicationFileDownloadDirectory
T@"NSString",&,N,V_applicationFileDownloadDirectory
applicationRecordCacheDirectory
T@"NSString",&,N,V_applicationRecordCacheDirectory
T@"NSString",&,N,V_applicationFrameworkCachesDirectory
T@"NSString",&,N,V_applicationPackageStagingDirectory
wasInitializedWithProxy
TB,N,V_wasInitializedWithProxy
containerEncryptionServiceName
T@"NSString",&,N,V_containerEncryptionServiceName
entitlementSpecifiedPCSServiceName
T@"NSString",&,N,V_entitlementSpecifiedPCSServiceName
publicIdentitiesDiskCache
T@"CKDKeyValueDiskCache",&,N,V_publicIdentitiesDiskCache
foregroundPublicIdentityLookupService
T@"CKDPublicIdentityLookupService",&,N,V_foregroundPublicIdentityLookupService
backgroundPublicIdentityLookupService
T@"CKDPublicIdentityLookupService",&,N,V_backgroundPublicIdentityLookupService
appContainerIntersectionMetadata
T@"CKDAppContainerIntersectionMetadata",&,N,V_appContainerIntersectionMetadata
applicationMetadata
T@"CKDApplicationMetadata",&,N,V_applicationMetadata
T@"CKDFlowControlManager",&,N,V_flowControlManager
T@"NSString",&,N,V_applicationVersion
T@"CKDPCSManager",&,N,V_pcsManager
proxies
T@"NSHashTable",&,N,V_proxies
mmcsEncryptionSupport
TQ,R,N,V_mmcsEncryptionSupport
T@"NSString",&,N,V_applicationBundleID
T@"NSString",&,N
hasMasqueradingEntitlement
hasAllowSetEnvironmentEntitlement
hasAllowCustomAccountsEntitlement
clientPrefixEntitlement
hasTCCAuthorization
Tq,N,V_contextType
proxyPreparationGroup
T@"NSObject<OS_dispatch_group>",&,N,V_proxyPreparationGroup
T@"CKDServerConfiguration",&,N,V_config
publicCloudDBURL
T@"NSURL",C,V_publicCloudDBURL
publicShareServiceURL
T@"NSURL",C,V_publicShareServiceURL
publicDeviceServiceURL
T@"NSURL",C,V_publicDeviceServiceURL
publicCodeServiceURL
T@"NSURL",C,V_publicCodeServiceURL
publicMetricsServiceURL
T@"NSURL",C,V_publicMetricsServiceURL
publicDatabaseRPCServiceURL
T@"NSURL",C,V_publicDatabaseRPCServiceURL
T@"NSString",C,V_containerScopedUserID
orgAdminUserID
T@"NSString",C,V_orgAdminUserID
isForClouddInternalUse
TB,N,V_isForClouddInternalUse
cachedEnvironment
Tq,V_cachedEnvironment
T@"CKContainerID",R,N,V_containerID
T@"NSString",R,N,V_sourceApplicationBundleID
T@"NSString",R,N,V_personaID
applicationIcon
T@"NSURL",R,N,V_applicationIcon
applicationDisplayName
T@"NSString",R,N,V_applicationDisplayName
applicationTemporaryDirectory
T@"NSString",R,N,V_applicationTemporaryDirectory
appContainerTuple
T@"CKDAppContainerTuple",R,N,V_appContainerTuple
T@"NSString",R,N,V_hardwareID
T@"NSString",&,N,SsetAPSEnvironmentString:
accountInfoOverride
T@"CKAccountOverrideInfo",R,N,V_accountInfoOverride
allowsCellularAccess
hasDataContainer
TB,N,V_hasDataContainer
canAccessZoneProtectionData
canSetDeviceIdentifier
TB,N,SsetHasSystemServiceEntitlement:
allowsPowerNapScheduling
hasAllowAccessDuringBuddyEntitlement
hasLightweightPCSEntitlement
captureResponseHTTPHeaders
TB,N,V_captureResponseHTTPHeaders
hasOutOfProcessUIEntitlement
hasParticipantPIIEntitlement
hasDisplaysSystemAcceptPromptEntitlement
useZoneWidePCS
TB,R,N,V_useZoneWidePCS
returnPCSMetadata
TB,N,V_returnPCSMetadata
encryptionServiceName
TB,R,N,V_bypassPCSEncryption
forceEnableReadOnlyManatee
TB,R,N,V_forceEnableReadOnlyManatee
clientSDKVersion
TI,N,V_clientSDKVersion
isSiloedContext
TB,R,N,V_isSiloedContext
hasNonLegacyShareURLEntitlement
hasAllowUnverifiedAccountEntitlement
hasExplicitCodeOperationURLEntitlement
pcsCache
T@"CKDPCSCache",R,N,V_pcsCache
fakeErrorsByClassName
T@"NSMutableDictionary",&,N,V_fakeErrorsByClassName
fakeResponseOperationLifetimeByClassName
T@"NSMutableDictionary",&,N,V_fakeResponseOperationLifetimeByClassName
fakeResponseOperationResultByClassNameByItemID
T@"NSMutableDictionary",&,N,V_fakeResponseOperationResultByClassNameByItemID
headerKey
headerValue
-[CKDPAssetUploadTokenRetrieveResponseHeaderInfo writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Protocol/Source/CKDPAssetUploadTokenRetrieveResponseHeaderInfo.m
nil != self->_headerKey
nil != self->_headerValue
T@"NSString",&,N,V_headerKey
T@"NSString",&,N,V_headerValue
com.apple.cloudkit.pcs.flushCaches
PCSItem=%@
lastAccess=%0.0f
pcsData
T@"CKDPCSData",&,N,V_pcsData
lastAccess
Td,V_lastAccess
com.apple.cloudkit.pcs.memorycache
q24@?0@"CKDPCSMemoryCacheEntry"8@"CKDPCSMemoryCacheEntry"16
[%0.2f%% full: %lu/%lu (max: %lu) (%f min, %f oldest)] [Hit rate %0.2f%% (%lu/%lu), Updates: %lu, Deletes: %lu, Evictions: %lu Memory Status: %@]
cacheEntries
T@"NSMutableDictionary",&,N,V_cacheEntries
accessQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_accessQueue
memoryNotificationSource
T@"NSObject<OS_dispatch_source>",&,N,V_memoryNotificationSource
memoryStatus
TQ,V_memoryStatus
memoryStatusChanged
TB,V_memoryStatusChanged
memoryCacheEvictNotificationObserver
T@"<NSObject>",&,N,V_memoryCacheEvictNotificationObserver
oldestCacheEntry
Td,V_oldestCacheEntry
memoryCacheRequestCount
TQ,V_memoryCacheRequestCount
memoryCacheHitCount
TQ,V_memoryCacheHitCount
memoryCacheHighwaterCount
TQ,V_memoryCacheHighwaterCount
memoryCacheDeleteCount
TQ,V_memoryCacheDeleteCount
memoryCacheUpdateCount
TQ,V_memoryCacheUpdateCount
memoryCacheEvictCount
TQ,V_memoryCacheEvictCount
maxEntries
TQ,N,V_maxEntries
minAge
Td,N,V_minAge
normal
warning
critical
unknown
/api/client/test/archive
idsToArchive
idsToArchives
T@"NSMutableArray",&,N,V_idsToArchives
assetAuthorizationResponses
T@"NSMutableArray",&,N,V_assetAuthorizationResponses
fieldName
order
coordinate
hasFieldName
T@"CKDPRecordFieldIdentifier",&,N,V_fieldName
hasOrder
Ti,N,V_order
hasCoordinate
T@"CKDPLocationCoordinate",&,N,V_coordinate
ascending
descending
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/Assets/CKDMMCSItemCommandWriter.m
Expected non-nil MMCS item
Expected non-nil MMCS request for %@
getFileMetadataWithError not implemented
readBytesAtOffset not implemented
v32@?0{_NSRange=QQ}8^B24
MMCSRequest
T@"CKDMMCSItemGroupContext",R,N
MMCSItem
T@"CKDMMCSItem",R,N
T@"CKDMMCSItemGroupContext",&,N,V_MMCSRequest
T@"CKDMMCSItem",&,N,V_MMCSItem
byteRanges
T@"NSMutableIndexSet",&,N,V_byteRanges
maximumLength
TQ,N,V_maximumLength
-[CKDAssetTokenRequest addAssetBatch:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/Assets/CKDAssetTokenRequest.m
!assetBatch.assetTokenRequest
assetBatchCount=%lu
failedAssetBatchCount=%lu
assetBatches
T@"NSMutableArray",&,N,V_assetBatches
failedAssetBatches
T@"NSMutableSet",&,N,V_failedAssetBatches
TI,N,V_sizeUpperBound
TI,N,V_size
applicationContainer
applicationContainerEnvironment
applicationBundle
userPrivacySettings
hasApplicationContainer
T@"NSString",&,N,V_applicationContainer
hasApplicationContainerEnvironment
Ti,N,V_applicationContainerEnvironment
applicationBundles
T@"NSMutableArray",&,N,V_applicationBundles
hasUserPrivacySettings
T@"CKDPUserPrivacySettings",&,N,V_userPrivacySettings
create table key_value_cache (key blob not null PRIMARY KEY, value blob not null, insertion_date real)
DELETE FROM key_value_cache
DELETE FROM key_value_cache WHERE insertion_date < %f
INSERT INTO key_value_cache (value, key, insertion_date) VALUES (%@, %s, %f)
UPDATE key_value_cache SET value = %@, insertion_date = %f WHERE key = %s
B16@?0@"PQLConnection"8
SELECT insertion_date, value FROM key_value_cache WHERE key = %s
DELETE FROM key_value_cache WHERE key = %s
T@"PQLConnection",&,N,V_db
T@"NSString",&,N,V_identifier
expirationTimeout
Td,N,V_expirationTimeout
WasFlowControlled
pipelining
com.apple.cloudkit.%@.callback.%p
perRequestCallbackBlocks
T@"NSMutableArray",&,N,V_perRequestCallbackBlocks
isCancelled
TB,N,V_isCancelled
request
T@"<CKDURLRequestPipelining>",&,N,V_request
T@"<CKDOperationPipelining>",W,N,V_operation
perRequestCallbackGroup
T@"NSObject<OS_dispatch_group>",&,N,V_perRequestCallbackGroup
perRequestGroup
T@"NSObject<OS_dispatch_group>",&,N,V_perRequestGroup
perRequestCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_perRequestCallbackQueue
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/Operations/CKDOperation.m
Expected non-nil operationInfo
com.apple.cloudkit.%@.%p
EphemeralGroup
Operation %@ tried to dealloc with outstanding entries in the state transition group
(%@%@%@%@%@%@) 
operationID
state
executing
finished
cancelled
stateFlags
requestIDs
[%@]
background
allows-cellular
long-lived
flags
runningFor
finishedChildOpIDs
<%@ %@>
childOps
operationGroupID
operationGroupName
%@%@
operationGroupQuantityNumber
applicationSecondaryID
MMCSMetrics
%@ %@ State: %@, QoS: %@
Can't run a child operation on an orphaned parent operation
com.apple.cloudkit.operationcallback.userinteractive
com.apple.cloudkit.operationcallback.userinitiated
com.apple.cloudkit.operationcallback.default
com.apple.cloudkit.operationcallback.utility
com.apple.cloudkit.operationcallback.background
Application version is not allowed by the server
Didn't get any configuration from the server
v24@?0@"CKOperationGroupSystemImposedInfoConfiguration"8q16
Operation %@ was cancelled before it started
You can't restart an executing or finished CKOperation: %@
This operation has been rate limited%@%@
 due to an earlier error: 
Must be called on subclass
Operation %@ was already marked as finished
 with error: 
Operation %@ is marked as finished
Not Started
Complete
Operation running - 
A CKDOperation was assigned a QoS greater than Utility but its discretionaryNetworkingBehavior is not set nonDiscretionary. A high QoS operation may end up gated on the network.
%0.4f seconds
%0.2f minutes
%0.2f hours
state: %@
parent: %@
context: %p
proxy: %p
%s<%@ %@ 
QoS %@ 
running for %@ (started %@) 
%sRunning Child Operations: {
%sRequest: {
%s%@: {
%s%@
%s%lu Previous Requests: [%@]
%s%lu Finished Child Operations: [%@]
%sCloudKit metrics: {
%sMMCS metrics: {
%sError: %@
flowControlKey
requestUUIDs
T@"NSMutableArray",&,N,V_requestUUIDs
parentOperation
T@"CKDOperation",W,N,V_parentOperation
childOperations
T@"NSMutableArray",&,N,V_childOperations
finishedChildOperationIDs
T@"NSMutableArray",&,N,V_finishedChildOperationIDs
startDate
T@"NSDate",&,N,V_startDate
powerAssertion
T@"<NSObject>",&,N,V_powerAssertion
childOperationsGroup
T@"NSObject<OS_dispatch_group>",&,N,V_childOperationsGroup
clientSuppliedDeviceIdentifier
T@"NSString",&,N,V_clientSuppliedDeviceIdentifier
operationInfo
T@"CKOperationInfo",&,N,V_operationInfo
pcsWaitCount
TAi,N,V_pcsWaitCount
didAttemptDugongKeyRoll
TB,N,V_didAttemptDugongKeyRoll
resolvedAutomaticallyRetryNetworkFailures
resolvedDiscretionaryNetworkBehavior
duetPreClearedMode
discretionaryWhenBackgroundedState
systemScheduler
topmostParentOperation
T@"CKDOperation",R,W,N
useEncryption
TB,N,V_useEncryption
useClearAssetEncryption
TB,N,V_useClearAssetEncryption
isProxyOperation
TB,R,N,V_isProxyOperation
shouldCheckAppVersion
usesBackgroundSession
shouldPipelineFetchAllChangesRequests
TB,N,V_shouldPipelineFetchAllChangesRequests
QOSClass
TI,R,N
error
T@"NSError",&,V_error
T@"CKDURLRequest",&,N,V_request
operationResult
T@"CKOperationResult",R,N
cloudKitMetrics
T@"CKDOperationMetrics",&,N,V_cloudKitMetrics
T@"CKDOperationMetrics",&,N,V_MMCSMetrics
metricExecuteStartDate
T@"NSDate",&,N,V_metricExecuteStartDate
requestCompletedBlock
T@?,C,N,V_requestCompletedBlock
isLongLived
deviceIdentifier
MMCSRequestOptions
T@"CKOperationMMCSRequestOptions",R,N
sourceApplicationBundleIdentifier
sourceApplicationSecondaryIdentifier
authPromptReason
automaticallyRetryNetworkFailures
preferAnonymousRequests
allowsBackgroundNetworking
timeoutIntervalForRequest
Td,R,N
timeoutIntervalForResource
T@"NSNumber",R,N
shouldSkipZonePCSUpdate
isCloudKitSupportOperation
networkServiceType
osActivity
T@"NSObject<OS_os_activity>",R,N
TQ,N
stateTransitionGroup
T@"NSObject<OS_dispatch_group>",&,N,V_stateTransitionGroup
code
hasCode
Ti,N,V_code
hasError
T@"CKDPResponseOperationResultError",&,N,V_error
success
partial
failure
indeterminate
entropy
hasEntropy
T@"NSData",&,N,V_entropy
waiter=%@, zoneIDs=%@
waiter
T@"<CKDZoneGatekeeperWaiter>",R,N,V_waiter
zoneIDs
T@"NSArray",R,N,V_zoneIDs
activity
T@"NSObject<OS_os_activity>",R,N,V_activity
completionHandler
T@?,R,N,V_completionHandler
Held Gates {
%@ -> %@
No gates held
Waiters {
%@ wants zone ids {
zoneIDsToGateHolders
T@"NSMutableDictionary",&,N,V_zoneIDsToGateHolders
waiterWrappers
T@"NSMutableArray",&,N,V_waiterWrappers
-[CKDAssetRequestPlanner addMMCSItem:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/Assets/CKDAssetRequestPlanner.m
![_items containsObject:item]
-[CKDAssetRequestPlanner addRereferencedMMCSItem:]
-[CKDAssetRequestPlanner addMMCSSectionItem:]
itemCount=%lu
assetRegisterAndPutBatchCount=%lu
assetGetChunkKeysBatchCount=%lu
assetTokenRequestCount=%lu
assetRegisterAndPutBatches
T@"NSArray",&,N,V_assetRegisterAndPutBatches
assetGetChunkKeysBatches
T@"NSArray",&,N,V_assetGetChunkKeysBatches
assetTokenRequests
T@"NSArray",&,N,V_assetTokenRequests
TQ,N,V_mmcsEncryptionSupport
items
T@"NSMutableOrderedSet",&,N,V_items
assetZoneByKey
T@"NSMutableDictionary",&,N,V_assetZoneByKey
assetBatchesByZoneID
T@"NSMutableDictionary",&,N,V_assetBatchesByZoneID
rerefAssetBatchesByZoneID
T@"NSMutableDictionary",&,N,V_rerefAssetBatchesByZoneID
assetTokenRequestSizeLimit
TI,R,N,V_assetTokenRequestSizeLimit
supportsSecureCoding
TB,R
recordZoneIDs
T@"NSArray",&,N,V_recordZoneIDs
Fetching Zones
Checking Record PCS
zoneID
T@"NSArray",&,N,V_zoneIDs
fetchedZones
T@"NSMutableArray",&,N,V_fetchedZones
mutableCorruptRecords
T@"NSMutableArray",&,N,V_mutableCorruptRecords
corruptRecords
fetchAllQueryResults
FETCHALLRESULTS_TEST
TEST PCS decrypt failure
Encountered an error fetching records
v32@?0@"CKRecordID"8@"CKRecord"16@"NSError"24
v32@?0@"NSString"8@"CKAssetTransferOptions"16^B24
Invalid predicate: %@
Unexpected error while encoding query %@
No query or cursor supplied for query operation
pipeliningDescription
T@"NSObject<OS_dispatch_queue>",&,N
desiredKeySet
T@"NSSet",&,N,V_desiredKeySet
shouldFetchAssetContent
TB,N,V_shouldFetchAssetContent
T@"CKRecordZoneID",&,N,V_zoneID
recordFetcher
T@"CKDRecordFetchAggregator",&,N,V_recordFetcher
resultsCursor
T@"CKQueryCursor",&,N,V_resultsCursor
fetchAllResults
TB,N,V_fetchAllResults
fetchRecordsGroup
T@"NSObject<OS_dispatch_group>",&,N,V_fetchRecordsGroup
numRequestsSent
TQ,N,V_numRequestsSent
requestInfos
T@"NSMutableArray",&,N,V_requestInfos
assetTransferOptionsByKey
T@"NSDictionary",&,N,V_assetTransferOptionsByKey
hasCalledQueryCursorUpdatedBlock
TB,N,V_hasCalledQueryCursorUpdatedBlock
query
T@"CKQuery",R,N,V_query
cursor
T@"CKQueryCursor",R,N,V_cursor
resultsLimit
TQ,R,N,V_resultsLimit
recordFetchedBlock
T@?,C,N,V_recordFetchedBlock
queryCursorUpdatedBlock
T@?,C,N,V_queryCursorUpdatedBlock
containerName
environment
hasContainerName
T@"NSString",&,N,V_containerName
hasEnvironment
T@"NSString",&,N,V_environment
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/ProtectedCloudStorage/CKDQueuedRecordFetch.m
Record ID was submitted to the wrong kind of fetcher: %@
fileAndLine
T@"NSString",&,N,V_fileAndLine
count
TQ,N,V_count
TQ,N,V_size
Biggest logging call sites by size:
Total Size
Avg Size
Callsite
Most frequent logging call sites:
Total Count
Total Size
Callsite
totalSizeByLine
T@"NSMutableDictionary",&,V_totalSizeByLine
totalCountByLine
T@"NSMutableDictionary",&,V_totalCountByLine
/api/client/zone/retrieve
onlyFetchPCSInfo
continuationMarker
hasZoneIdentifier
T@"CKDPRecordZoneIdentifier",&,N,V_zoneIdentifier
hasOnlyFetchPCSInfo
TB,N,V_onlyFetchPCSInfo
hasContinuationMarker
T@"NSData",&,N,V_continuationMarker
zone
 and error 
v24@?0@"CKDZonePCSData"8@"NSError"16
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/ProtectedCloudStorage/CKDPCSCacheZoneFetchOperation.m
We should have PCS data for zone %@ by this point
Couldn't save zone with updated PCS data to the server for zone %@
Couldn't serialize zone PCS
Couldn't serialize zoneish PCS
We shouldn't be trying to save a new PCS on anything except the default zone: %@
Couldn't create a new zone PCS
Couldn't create a new zoneish PCS
NoZonePCSOnServer
Couldn't fetch zone PCS for %@ from the server
We don't have zone PCS data for zone %@
We don't have share PCS to decrypt zone PCS data for zone %@
Couldn't create a zoneish PCS for zone %@
Couldn't decrypt zone PCS for zone in order to create a zoneish PCS for zone %@
Couldn't fetch PCS for zone %@: %@
needsZoneishPCS
T@"CKRecordZoneID",R,N
zonePCSData
T@"CKDZonePCSData",&,N
shouldCreateZoneishPCS
TB,N,V_shouldCreateZoneishPCS
com.apple.cloudkit.cloudkitlog
Showing stream of buffered live logs (containing %ld events)
Streaming live logs
Showing system logs from %@
to %@
Starting live stream of logs
logPersistence
T@"OSLogPersistence",&,N,V_logPersistence
activityStream
T@"OSActivityStream",&,N,V_activityStream
results
T@"NSMutableArray",&,N,V_results
stillReadingFromArchive
TB,N,V_stillReadingFromArchive
continueToReturnResults
TB,N,V_continueToReturnResults
applicationBundleID="%@", sourceApplicationBundleID="%@", applicationContainerPath="%@", containerID="%@", personaID:"%@", useZoneWidePCS="%@", mmcsEncryptionSupport="%@", encryptionDisabled="%@", containerEncryptionServiceName="%@", wantsSiloedContext="%@", forceEnableReadOnlyManatee="%@"
T@"NSString",R,N,V_applicationBundleID
T@"NSString",R,N,V_applicationContainerPath
TB,N,V_useZoneWidePCS
TB,N,V_bypassPCSEncryption
TB,N,V_forceEnableReadOnlyManatee
wantsSiloedContext
TB,N,V_wantsSiloedContext
%@, accountID="%@"
T@"CKDAppContainerTuple",&,N,V_appContainerTuple
accountID
T@"NSString",C,N,V_accountID
Use +[CKDPrivacyManager sharedManager] instead
com.apple.cloudkit.privacyManagerQueue
com.apple.cloudkit.privacyManager.resetQueue
privacyManagerQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_privacyManagerQueue
operations
T@"NSMutableSet",&,N,V_operations
You must call -[%@ initWithOperation:context:operationQueue:]
com.apple.cloudkit.pcs.queuedFetch.callbackQueue
%@ %p was cancelled
startDate=%@, lastRequestDate=%@, numCallbacks=%d, initialOperationInfo=%@, usesBackground=%d
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/ProtectedCloudStorage/CKDQueuedFetch.m
Expected non-nil runningOperationID on fetch %@
To be overridden by subclass
You can't restart a fetch that has already finished
 with error 
 with errors 
T@"NSObject<OS_os_activity>",&,N,V_osActivity
completionHandlersByItemID
T@"NSMutableDictionary",&,N,V_completionHandlersByItemID
lastCompletionHandlerCount
TQ,N,V_lastCompletionHandlerCount
lastRequestDate
T@"NSDate",&,N,V_lastRequestDate
T@"NSOperationQueue",W,N,V_operationQueue
highestQOS
Tq,N,V_highestQOS
runningOperationID
T@"NSString",&,N,V_runningOperationID
dependentOperationIDs
T@"NSMutableSet",&,N,V_dependentOperationIDs
dependentOperationIDsByItemID
T@"NSMutableDictionary",&,N,V_dependentOperationIDsByItemID
initialOperation
T@"CKDOperation",&,N,V_initialOperation
queuedDate
T@"NSDate",&,N,V_queuedDate
T@?,C,N,V_completionHandler
equivalentRunningFetch
T@"CKDQueuedFetch",W,N,V_equivalentRunningFetch
application/x-protobuf
application/json
text/xml
text/plain
application/x-x509-ca-cert
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/Service/CKDURLRequest.m
<%@ %p>: Requests must be finished before deallocation
<%@ %p>: The URL session data task should be nil: %p
%s.%p
com.apple.cloudkit.urlrequestlifecycle
<%@: %p %@>
UUID
dataTaskID
dataTask
foreground
deny-cellular
POST
there is no operation associated with this request
Your request contains %ld items which is more than the maximum number of items in a single request (%ld)
Expected non-nil contextInfoProvider
v32@?0@"NSString"8@"NSString"16^B24
You can't set both usesiCloudAuthToken and usesCloudKitAuthToken to the same value
Couldn't get an authentication token
Authentication required
no operations present
Error, details unknown
Budget exceeded via normal requests
Error returned by server: %@
v24@?0@8@"NSData"16
v24@?0@"NSDictionary"8@"NSData"16
v24@?0@"NSData"8@"NSData"16
Received a plaintext response that we weren't expecting: %@
Received a 509 cert response that we weren't expecting: %@
Plugin-Specific Error
If you set a server type of CKServerTypeOther, you must provide your own url
%@ should be overwritten by the subclass (%@)
/api/client/batch
RequestOperation
%@; desc="%@://%@%@/static/protobuf/CloudDB/CloudDBClient.desc"; messageType=%@; delimited=true
CKDURLRequest with no owning operation
v16@?0@"NSData"8
This request requires an authenticated account
This request requires an authenticated account, the current account cannot auth with CloudKit
CloudKit access was denied by user settings
You must set the contextInfoProvider
v24@?0@"NSURL"8@"NSError"16
Request (%@) does not have a URL
You must set the accountInfoProvider
Account couldn't get container scoped user id, no underlying error received
v32@?0@"NSString"8@"NSString"16@"NSError"24
You must set the accountInfoProvider for request %@
You must set the contextInfoProvider for request %@
v12@?0B8
Didn't get a CloudKit auth token
Didn't get an iCloud auth token
DEBUG
gzip
https
com.apple.cloudkit.ckctl.container
%@:%@
Basic %@
Content-Encoding
no-transform
Cache-Control
%@ requestUUID:%@
com.apple.cloudkit
Request is nil
The URL session data task should be nil
Response is nil
Can't create a NSURLSessionDataTask, failing the request
Received a networking protocol error. Please try again
Request %@ was cancelled
Unknown CK Server Trigger
TestName
TestEmptyResponseBody
_kCFNTimingDataConnectionReused
MoiCTopIssueAutoSysdiagnose-
%@%@%@
Received a didCompleteWithError without receiving a response from the server
Received a didCompleteWithError without an error but no response body where one was expected
satisfied
NOT satisfied
Expected failure HTTP status code (%ld)
Request failed with http status code %ld
stateFlags=%@ 
(waiting on auth)
CFNetwork task: %@ 
qualityOfService
lifecycleQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_lifecycleQueue
urlSessionTask
T@"NSURLSessionDataTask",&,V_urlSessionTask
c2RequestOptions
T@"C2RequestOptions",&,V_c2RequestOptions
T@"NSURLRequest",&,V_request
response
T@"NSHTTPURLResponse",&,V_response
urlSession
T@"NSURLSession",&,V_urlSession
responseObjectUUIDs
T@"NSMutableSet",&,N,V_responseObjectUUIDs
trafficLogger
T@"CKDTrafficLogger",&,N,V_trafficLogger
deviceID
T@"NSString",C,N,V_deviceID
numDownloadedElements
TQ,N,V_numDownloadedElements
didRetryAuth
TB,N,V_didRetryAuth
TB,GisCancelled,V_cancelled
haveCachedServerType
TB,N,V_haveCachedServerType
haveCachedPartitionType
TB,N,V_haveCachedPartitionType
cachedServerType
Tq,N,V_cachedServerType
cachedPartitionType
Tq,N,V_cachedPartitionType
translator
T@"CKDProtocolTranslator",&,N,V_translator
dateRequestWentOut
T@"NSDate",&,V_dateRequestWentOut
metrics
T@"CKDOperationMetrics",&,N,V_metrics
timingData
T@"NSDictionary",&,N,V_timingData
voucher
T@"NSObject<OS_voucher>",&,N,V_voucher
cloudKitAuthToken
T@"NSString",&,N,V_cloudKitAuthToken
iCloudAuthToken
T@"NSString",&,N,V_iCloudAuthToken
didReceiveResponseBodyData
TB,N,V_didReceiveResponseBodyData
serverProvidedAutoBugCaptureReason
T@"NSString",C,N,V_serverProvidedAutoBugCaptureReason
serverProvidedTapToRadarRequest
T@"CKDTapToRadarRequest",&,N,V_serverProvidedTapToRadarRequest
serverProvidedAutoSysdiagnoseCollectionReason
T@"NSString",&,N,V_serverProvidedAutoSysdiagnoseCollectionReason
countsByRequestOperationType
T@"NSMutableDictionary",&,N,V_countsByRequestOperationType
overriddenHeaders
T@"NSMutableDictionary",&,N,V_overriddenHeaders
redirectHistory
T@"NSMutableArray",&,N,V_redirectHistory
operationIDForProtobuf
operationGroupQuantity
accountInfoProvider
T@"<CKDAccountInfoProvider>",&,N,V_accountInfoProvider
contextInfoProvider
T@"<CKDContextInfoProvider>",&,N,V_contextInfoProvider
accountAccessInfoProvider
T@"<CKDAccountAccessInfoProvider>",&,N,V_accountAccessInfoProvider
metricsDelegate
T@"<CKDURLRequestMetricsDelegate>",W,N,V_metricsDelegate
authRetryDelegate
T@"<CKDURLRequestAuthRetryDelegate>",W,N,V_authRetryDelegate
allowAutomaticRedirects
TB,N,V_allowAutomaticRedirects
requestProperties
T@"NSDictionary",&,N,V_requestProperties
sendRequestAnonymously
automatedDeviceGroup
T@"NSString",&,N,V_automatedDeviceGroup
databaseScope
streamWriter
T@"CKDProtobufStreamWriter",R,N,V_streamWriter
requestProgressBlock
T@?,C,N,V_requestProgressBlock
responseProgressBlock
T@?,C,N,V_responseProgressBlock
completionBlock
T@?,C,N,V_completionBlock
responseBodyParser
T@"CKDResponseBodyParser",&,N,V_responseBodyParser
httpMethod
additionalHeaderValues
T@"NSDictionary",R,N
clientProvidedAdditionalHeaderValues
T@"NSDictionary",&,N,V_clientProvidedAdditionalHeaderValues
hasRequestBody
expectsResponseBody
requestBodyStream
T@"NSInputStream",R,N
requestOperations
T@"NSArray",R,N,V_requestOperations
requestOperationClasses
isolationLevel
Ti,R,N
operationType
path
T@"NSURL",R,N
shouldCompressBody
acceptContentType
requestContentType
protobufOperationName
requestGETPreAuth
sectionID
fakeResponseOperationResultByItemID
T@"NSDictionary",&,N,V_fakeResponseOperationResultByItemID
responseHeaders
responseStatusCode
Tq,R,N,V_responseStatusCode
lastRedirectURL
requestUUID
T@"NSString",R,N,V_requestUUID
needsAuthRetry
TB,V_needsAuthRetry
isWaitingOnAuthRenew
TB,V_isWaitingOnAuthRenew
isHandlingAuthRetry
TB,V_isHandlingAuthRetry
CKDeviceService
/api/client/badgeUpdate
userPartition
badgeCount
forDevice
hasBadgeCount
TI,N,V_badgeCount
hasForDevice
TB,N,V_forDevice
B36@?0@"NSString"8B16Q20@"NSDate"28
B24@?0@"NSURL"8@"NSError"16
paths
T@"NSArray",&,N,V_paths
shouldSkipFileBlock
T@?,C,N,V_shouldSkipFileBlock
shouldRemoveFileBlock
T@?,C,N,V_shouldRemoveFileBlock
signature
lastSection
hasSignature
T@"NSData",&,N,V_signature
hasSize
Tq,N,V_size
hasLastSection
TB,N,V_lastSection
owner
fileSignature
referenceSignature
hasOwner
T@"NSString",&,N,V_owner
hasFileSignature
T@"NSData",&,N,V_fileSignature
hasReferenceSignature
T@"NSData",&,N,V_referenceSignature
com.apple.security.view-change.PCS
com.apple.ProtectedCloudStorage.HaveCredentials
Current Service
Bladerunner
Sharing
Wrapping context requires a non-nil recordID and field. RecordID: %@, field: %@
Invalid wrapping context for generating asset context string. File signature: %@. Reference signature: %@.
%@-%@-%@-%@-%@
%@-%@-%@
T@"CKRecordID",&,N,V_recordID
T@"NSString",&,N,V_fieldName
com.apple.CloudKit.CKDPCSManager.callbackQueue
client specified
containerID default
%@. Public keys on object: %@. Attempted public keys: %@
Couldn't get a public key for our participant
diversified 
Couldn't create a diversified public key for the owner participant
Couldn't create an identity from the public sharing key: %@ (key was %@)
Couldn't add public identity to per-participant PCS: %@
Couldn't serialize PCS data after key swap on OON PCS blob
Can't add an identity to a nil pcs
Couldn't get a self identity to add to the share PCS
Couldn't get a public identity for our current user to add to PCS %@: %@
Failed to add our public identity to the PCS object
Asked to add an identity to an null PCS in addIdentityForService:toPCS:
Couldn't get a %@ identity to add to PCS
Couldn't create a PCS identity
Couldn't create a new PCSShareProtectionRef
Failed to add a protection key to the zone
Couldn't encode zone PCS data
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/ProtectedCloudStorage/CKDPCSManager.m
We failed a prior decryption of this PCS data a with manatee identity when current identity is non-manatee. Did our identity change?
PCS data wasn't decrypted because a prior attempt failed after key sync.
Forcing a manatee decryption failure due to behavior option override
copyServiceIdentityWithError: didn't return a service identity
<PCSIdentitySetRef %p service: %@, identities: {
v16@?0^{__CFString=}8
Could not decrypt PCS data with the selected identity. A key to decrypt this data does exist, but it will not be used.
Failed to decrypt PCS data with user identities
Couldn't create PCS object from data
PPPCS data
Failed to decrypt. Keys unavailable even after synchronization
Failed to decrypt. Keys unavailable even after syncrhonization
iCDP not available
Couldn't decrypt PCS data even after syncing key registry
v24@?0@"CKDPCSData"8@"NSError"16
Failed to preflight a %@ identity
Failed to decrypt zone PCS data
Couldn't create zone PCS object from data
Couldn't decode zone PCS data
Couldn't get a public identity from our PCS service identity
Couldn't add our public identity to the existing zone PCS data
Last CoreCDP error was 
Cannot roll master key for a nil record PCS
Couldn't roll master key for record PCS
Cannot roll key for a nil zone PCS
Couldn't update zone identity on PCS
Failed to clean up the share PCS
Failed to create a new private key for share PCS
Failed to clean up the share PCS when creating a new private key
Couldn't roll key for zone PCS
Couldn't roll zone wide share PCS due to missing share or zone PCS
Can't create a record PCS with a nil zone PCS
Couldn't create a new record PCS
Couldn't add zone PCS to record PCS
Couldn't add share PCS to record PCS
lightweight 
 and share PCS 
Can't create a record PCS with nil zone PCS data
Couldn't add encrypted zone PCS to record PCS
Couldn't encode record PCS data
Can't create a PCS object without a share PCS
Failed to decrypt PCS data
You can't add a nil share PCS to a record PCS
You can't add a share PCS to a nil record PCS
READ ONLY 
Couldn't get a public identity from the share PCS
Couldn't get a private identity from the share PCS
You can't remove a nil share PCS from a record PCS
You can't remove a share PCS from a nil record PCS
Couldn't remove share PCS from record PCS
Couldn't get a public identity for our current user to sign PCS: %@
Couldn't create a new signed PCSShareProtectionRef
Failed to add a protection key to the share
Couldn't get a public identity for our current user in order to add our public %@ identity to PCS %@
Failed to add our %@ identity to the share
Couldn't create an empty share PCS
Couldn't add public PCS identity to new share PCS
Couldn't get a public identity'
Failed to add identity to the share PCS
Failed to add public identity to the share PCS
Failed to add a protection key to the chain PCS
Couldn't set the current private key on the chain PCS to the new generated chain identity
Couldn't encode share PCS data
Can't create a share PCS without a sharing identity
Failed to decrypt share PCS data
Couldn't create share PCS object from data
Failed to decrypt share PCS object
Couldn't create an identity from private key data
Couldn't create a public PCS from the PCS data %@ for identity %@
Couldn't create public key data from PCS  %@
Couldn't unlock the private share PCS for share %@
Error adding public identity %@ to record PCS %@
Couldn't get key IDs from share PCS %@
Couldn't get PCS identity with key ID %@
Error getting a public identity from sharing identity %@
Can't remove a nil public identity
Can't remove a public identity from a nil share
Couldn't remove public identity from share PCS
v16@?0r^v8
Couldn't remove public identity with keyID %@ from PCS %@
Can't decrypt chain PCS for record %@ because we don't have a decrypted record PCS
Can't decrypt chain PCS for record %@ because the record has no chain PCS private key
Can't decrypt chain PCS for record %@ because the record has no chain PCS data
Couldn't decrypt the private chain PCS identity
rdar://problem/32337711: There are server side plugins on the clouddocs container that are probably going to cause you to have a bad time
rdar://problem/32337711: There are server side plugins on the backup container that are probably going to cause you to have a bad time
Couldn't wrap asset key with signature %@ with PCS %@
Unsupported CKDPCSAssetKeyType
MMCSReferenceObjectCreateWithType failed
Couldn't decrypt encrypted data on record using context %@: %@
Couldn't unwrap encrypted data in context %@ because %@.
we don't have a record PCS
there's nothing to decrypt
Couldn't encrypt data in context %@
Couldn't wrap encrypted data in context %@ because %@.
there's nothing to encrypt
Couldn't fetch a boundary key from PCS
No account DSID, so we can't fetch a boundary key
containerScopedUserIDProvider
T@"<CKDContainerScopedUserIDProvider>",R,W,N,V_containerScopedUserIDProvider
isSiloed
TB,R,N,V_isSiloed
responsibleBundleID
T@"NSString",R,N,V_responsibleBundleID
identityManager
T@"CKDPCSIdentityManager",R,N,V_identityManager
lastMissingManateeIdentityErrorDateForCurrentService
T@"NSDate",&,N,V_lastMissingManateeIdentityErrorDateForCurrentService
missingIdentityPublicKeys
T@"NSMutableSet",&,N,V_missingIdentityPublicKeys
servicesWithMissingIdentities
T@"NSMutableSet",&,N,V_servicesWithMissingIdentities
undecryptablePCSDataHashes
T@"NSMutableSet",&,N,V_undecryptablePCSDataHashes
boundaryKeyData
T@"NSData",&,N,V_boundaryKeyData
pcsUpdateSource
T@"NSObject<OS_dispatch_source>",&,N,V_pcsUpdateSource
synchronizeQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_synchronizeQueue
pcsServiceName
currentServiceIsManatee
serviceTypeForSharing
com.apple.cloudkit.pcsmanager.queue
Preparing Short Tokens
Retrieving Share Metadata
The user is not able to access this share
v32@?0@"CKDShortTokenLookupInfo"8@"CKShareMetadata"16@"CKDPResponseOperationResult"24
Internal error when fetching short token metadata for %@
Error %@ when fetching short token metadata for %@: %@
Couldn't decode the protected full token for %@
No participant protection data for share %@
 and error: 
OOP UI does not support device-to-device encrypted share %@
No sharing invitation token provided for device-to-device encrypted share %@
Couldn't parse iCloud Share URL %@
shareURLsToFetch
T@"NSMutableArray",&,N,V_shareURLsToFetch
shareTokenMetadatasToFetchByURL
T@"NSMutableDictionary",&,N,V_shareTokenMetadatasToFetchByURL
shouldFetchRootRecord
TB,N,V_shouldFetchRootRecord
rootRecordDesiredKeysSet
T@"NSSet",&,N,V_rootRecordDesiredKeysSet
clientWillDisplaySystemAcceptPrompt
TB,N,V_clientWillDisplaySystemAcceptPrompt
shareInvitationTokensByShareURL
T@"NSDictionary",&,N,V_shareInvitationTokensByShareURL
forceDSRefetch
TB,N,V_forceDSRefetch
errorOnOON
TB,N,V_errorOnOON
shareMetadataFetchedBlock
T@?,C,N,V_shareMetadataFetchedBlock
routingKey
T@"NSString",&,N,V_routingKey
shortSharingTokenData
T@"NSData",&,N,V_shortSharingTokenData
shortSharingToken
shortSharingTokenHashData
T@"NSData",R,N
publicTokenData
T@"NSData",&,N,V_publicTokenData
privateTokenData
T@"NSData",&,N,V_privateTokenData
Fetching Records
Saving Records
 Error was 
Unknown error when saving record for web sharing
Couldn't fetch record from the server
Record %@ didn't contain any share protection data
Couldn't deserialize share protection data on record %@
Couldn't find record %@ on the server
Couldn't get a web sharing identity from record %@
Fetched record %@ had no PCS data
added
removed
Couldn't fetch record for web share/unshare.
recordIDsToShare
T@"NSArray",&,N,V_recordIDsToShare
recordIDsToUnshare
T@"NSArray",&,N,V_recordIDsToUnshare
recordIDsToShareReadWrite
T@"NSArray",&,N,V_recordIDsToShareReadWrite
fetchedRecordIDs
T@"NSMutableSet",&,N,V_fetchedRecordIDs
recordsToSaveByID
T@"NSMutableDictionary",&,N,V_recordsToSaveByID
numSaveAttempts
Ti,N,V_numSaveAttempts
recordWebSharedBlock
T@?,C,N,V_recordWebSharedBlock
recordWebUnsharedBlock
T@?,C,N,V_recordWebUnsharedBlock
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/Assets/CKDMMCSTestEncryptedItemReader.m
underlyingItemReader
T@"<CKDMMCSItemReaderWriterProtocol>",&,N,V_underlyingItemReader
grant
revocation
revoke
Unknown error when saving record for record access
Record %@ didn't contain any access token protection data
Couldn't deserialize access token protection data on record %@
granting
revoking
Couldn't create an access token identity for record %@
Record %@ didn't have an access token so it can't be revoked
Couldn't create access token data for record %@
Couldn't fetch record for web access grant/revoke.
recordIDsToGrant
T@"NSArray",&,N,V_recordIDsToGrant
recordIDsToRevoke
T@"NSArray",&,N,V_recordIDsToRevoke
accessWasGrantedBlock
T@?,C,N,V_accessWasGrantedBlock
accessWasRevokedBlock
T@?,C,N,V_accessWasRevokedBlock
requestedSize
uploadedSize
uploadReceipt
hasRequestedSize
Tq,N,V_requestedSize
hasUploadedSize
Tq,N,V_uploadedSize
hasUploadReceipt
T@"NSString",&,N,V_uploadReceipt
/api/client/zone/save
zoneProtectionInfoTag
hasZoneProtectionInfoTag
T@"NSString",&,N,V_zoneProtectionInfoTag
name
value
hasName
T@"NSString",&,N,V_name
hasValue
T@"CKDPConfigurationFieldValue",&,N,V_value
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/ProtectedCloudStorage/CKDQueuedZoneFetch.m
Zone ID was submitted to the wrong kind of fetcher: %@
Error discovering identity for lookup info %@
v32@?0@"CKUserIdentityLookupInfo"8@"CKUserIdentity"16@"CKDPResponseOperationResult"24
userIdentityLookupInfos
T@"NSArray",&,N,V_userIdentityLookupInfos
discoverUserIdentitiesProgressBlock
T@?,C,N,V_discoverUserIdentitiesProgressBlock
pearl.233.paid@icloud.com
james.526.paid@icloud.com
studentcarry.01@ckclient.q-branch.com
studentcarry.02@ckclient.q-branch.com
studentcarry.01@cloudkitclient-1.q-branch.com
studentcarry.02@cloudkitclient-1.q-branch.com
ckclient_ic1_1@icloud.com
ckclient_ic1_2@icloud.com
student-01@ck1ic1.q-branch.com
student-02@ck1ic1.q-branch.com
student-01@ck2ic1.q-branch.com
ckclient_ic2_1@icloud.com
ckclient_ic2_2@icloud.com
student-01@ck1ic2.q-branch.com
student-02@ck1ic2.q-branch.com
student-01@ck2ic2.q-branch.com
ckclient_ic3_1@icloud.com
ckclient_ic3_2@icloud.com
student-01@ck1ic3.q-branch.com
student-02@ck1ic3.q-branch.com
student-01@ck2ic3.q-branch.com
ckclient_ic4_1@icloud.com
ckclient_ic4_2@icloud.com
student-01@ck1ic4.q-branch.com
student-02@ck1ic4.q-branch.com
student-01@ck2ic4.q-branch.com
FakeContactIdentifier-%@
v24@?0@"CNContact"8^B16
Error discovering user identities
contactIdentifiersByLookupInfo
T@"NSMutableDictionary",&,N,V_contactIdentifiersByLookupInfo
v32@?0@"NSString"8@"CKEventOperationGroupInfo"16^B24
v32@?0@"NSString"8@"CKEventOperationInfo"16^B24
B32@?0@8@16^B24
CFBundleVersion
CloudKit/%@ (%@)
UNKNOWN
<%@>
 <%@;%@;%@>
 <%@/%@ (%@/%@)>
Accept
Accept-Encoding
Authorization
User-Agent
Retry-After
Content-Type
X-MMe-Client-Info
X-Apple-CKAppId
X-Apple-Request-UUID
X-Apple-Operation-ID
X-Apple-Operation-Group-ID
X-Apple-Request-Log-Level
X-CloudKit-TestRun-ID
X-CloudKit-AutoBugCapture
X-CloudKit-TapToRadar-Request
X-CloudKit-TapToRadar-Request-Component
X-CloudKit-TapToRadar-Request-RelatedRadar
X-CloudKit-BundleId
X-CloudKit-BundleVersion
X-CloudKit-ContainerId
X-CloudKit-Environment
X-CloudKit-DatabaseScope
X-CloudKit-AutomatedDeviceGroup
X-CloudKit-UserId
X-CloudKit-AuthToken
destinationZoneID=%@
sourceZoneID=%@
destinationZoneID
T@"CKRecordZoneID",&,N,V_destinationZoneID
sourceZoneID
T@"CKRecordZoneID",&,N,V_sourceZoneID
assetBatch
T@"CKDAssetBatch",&,N,V_assetBatch
itemByAssetId
T@"NSMutableDictionary",&,N,V_itemByAssetId
-[CKDGetContentAuthTokensForPutURLRequest generateRequestOperations]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/Service/CKDGetContentAuthTokensForPutURLRequest.m
items.count
Missing operationUUID on %@
Missing AssetUploadTokenRetrieveResponse on %@
Can't find transactionState for %@
Can't find assetBatch for %@
Server did not return the required authPutResponse even though an authPutRequest was sent. AssetUploadTokenRetrieveResponse on %@
Missing authPutRequest. AssetUploadTokenRetrieveResponse on %@
Failed to get headers for authPutResponse AssetUploadTokenRetrieveResponse on %@
Failed to parse recordID from AssetUploadTokenRetrieveResponseUploadToken on %@ : %@
Missing Asset signature from AssetUploadTokenRetrieveResponseUploadToken on %@
Missing Asset size from AssetUploadTokenRetrieveResponseUploadToken on %@
Missing Asset owner from AssetUploadTokenRetrieveResponseUploadToken on %@
Missing Asset requestor from AssetUploadTokenRetrieveResponseUploadToken on %@
Missing Asset token from AssetUploadTokenRetrieveResponseUploadToken on %@
Missing Asset contentBaseURL from AssetUploadTokenRetrieveResponseUploadToken on %@
Malformed Asset contentBaseURL from AssetUploadTokenRetrieveResponseUploadToken on %@
Failed to find asset for assetID %@ on %@
Missing requestID on %@
Can't find transactionState
Error fetching auth tokens from server: %@
Generic %@ %@ error
assetTokenRequest
T@"CKDAssetTokenRequest",&,N,V_assetTokenRequest
transactionStateByRequestIDs
T@"NSMapTable",&,N,V_transactionStateByRequestIDs
headers
T@"NSDictionary",&,N,V_headers
Vetting with AuthKit
Reconstructing short token
Force fetching share metadata
Reconstructing share URL
Verifying OON key can be swapped
encryptedKey failed to decrypt
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/Operations/CKDCompleteParticipantVettingOperation.m
Vetting token got validated fine, but we got an error: %@
Vetting token %@ invalid. Likely expired.
Vetting token %@ validation failed due to auth error
https://%@/share/%@%@
Couldn't force fetch share metadata for share: %@
privateToken
outOfNetworkPrivateKey
We don't have the necessary keys to perform an OON key swap
OON key-swap failed, but without error
OON key-swap validation failed, but without error
Dryrun OON keyswap failed
vettingToken
T@"NSString",R,N,V_vettingToken
vettingEmail
T@"NSString",R,N,V_vettingEmail
vettingPhone
T@"NSString",R,N,V_vettingPhone
T@"NSString",R,N,V_routingKey
encryptedKey
T@"NSData",R,N,V_encryptedKey
baseToken
T@"NSString",R,N,V_baseToken
displayedHostname
T@"NSString",R,N,V_displayedHostname
T^{_OpaquePCSShareProtection=},N,V_protectionInfo
shortToken
T@"NSString",&,N,V_shortToken
T@"CKShareMetadata",&,N,V_shareMetadata
verifyProgressURLReconstructedBlock
T@?,C,N,V_verifyProgressURLReconstructedBlock
verifyProgressShareMetadataFetchedBlock
T@?,C,N,V_verifyProgressShareMetadataFetchedBlock
verifyCompletionBlock
T@?,C,N,V_verifyCompletionBlock
PublicCloudDBURL
PublicShareServiceURL
PublicDeviceServiceURL
PublicCodeServiceURL
PublicMetricsServiceURL
PublicDatabaseRPCServiceURL
ContainerScopedUserID
OrgAdminUserID
Environment
publicCloudDBURL=%@, publicShareServiceURL=%@, publicDeviceServiceURL=%@, publicCodeServiceURL=%@, publicMetricsServiceURL=%@, publicDatabaseRPCURL=%@, containerScopedUserID=%@, orgAdminUserID=%@, environment=%@
T@"NSURL",C,N,V_publicCloudDBURL
T@"NSURL",C,N,V_publicShareServiceURL
T@"NSURL",C,N,V_publicDeviceServiceURL
T@"NSURL",C,N,V_publicCodeServiceURL
T@"NSURL",C,N,V_publicMetricsServiceURL
T@"NSURL",C,N,V_publicDatabaseRPCServiceURL
T@"NSString",C,N,V_containerScopedUserID
T@"NSString",C,N,V_orgAdminUserID
Tq,N,V_environment
http://127.0.0.1:31234
route
application/protobuf
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/Service/CKDCodeLocalFunctionInvokeURLRequest.m
Invalid database environment for local code request
Failed to parse node
serviceName
T@"NSString",C,N,V_serviceName
functionName
T@"NSString",C,N,V_functionName
serializedParameters
T@"NSData",&,N,V_serializedParameters
explicitBaseURL
T@"NSURL",C,N,V_explicitBaseURL
serializedResultsCallback
T@?,C,N,V_serializedResultsCallback
CKCodeService
/api/client/code/invoke
protectedCloudComputeMetadata
attestationRequest
hasServiceName
T@"NSString",&,N,V_serviceName
hasFunctionName
T@"NSString",&,N,V_functionName
hasSerializedParameters
hasProtectedCloudComputeMetadata
T@"CKDPCodeFunctionInvokeRequestProtectedCloudComputeMetadata",&,N,V_protectedCloudComputeMetadata
hasAttestationRequest
T@"CKDPCodeFunctionInvokeRequestAttestationRequest",&,N,V_attestationRequest
/api/client/zone/delete
userPurge
lastMissingManateeIdentityErrorDate
hasUserPurge
TB,N,V_userPurge
hasLastMissingManateeIdentityErrorDate
T@"CKDPDate",&,N,V_lastMissingManateeIdentityErrorDate
queryResponses
T@"NSMutableArray",&,N,V_queryResponses
T@"NSData",&,N,V_resultsCursor
recordResponses
T@"NSMutableArray",&,N,V_recordResponses
T@"CKQuery",&,N,V_query
T@"NSData",&,N,V_cursor
limit
TQ,N,V_limit
T@"NSArray",&,N,V_requestedFields
desiredAssetKeys
T@"NSSet",&,N,V_desiredAssetKeys
recordsParsedBlock
T@?,C,N,V_recordsParsedBlock
create table if not exists OperationMetrics (
    operationID               text primary key,
    operationGroupID          text,
    operationGroupName        text,
    operationGroupQuantity    integer,
    operationQualityOfService integer,
    operationType             integer,
    appBundleIdentifier       text,
    sourceAppBundleIdentifier text,
    containerIdentifier       text,
    containerEnvironment      integer,
    operationMetrics          blob
OperationMetrics
operationQualityOfService
appBundleIdentifier
sourceAppBundleIdentifier
operationMetrics
CloudKitOperationMetrics
com.apple.cloudkit.operationMetricsCache
VACUUM
operationID = ?
cacheQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_cacheQueue
down|%@|%@
package
T@"CKPackage",R,N,V_package
manifestAsset
T@"CKAsset",&,N,V_manifestAsset
sectionAssets
T@"NSArray",&,N,V_sectionAssets
itemIndices
T@,&,N,V_itemIndices
sectionIndices
T@"NSIndexSet",&,N,V_sectionIndices
progressTracker
T@"CKDProgressTracker",&,N,V_progressTracker
T@"CKDMMCSRequestOptions",&,N,V_MMCSRequestOptions
group
T@"NSObject<OS_dispatch_group>",&,N,V_group
cancelTokens
T@"CKDCancelTokenGroup",&,N,V_cancelTokens
com.apple.cloudkit.download
<CKDMMCSItem %p itemID: %lu, progress %0.2f, signature: %@ %@>
MMCS Items
Prepare For Download
Download
Post Process Downloaded Assets
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/Operations/CKDDownloadAssetsOperation.m
Expected non-nil asset for %@
%@?%@
expected assetKey for asset %@
expected clearAssetKey for asset %@
-[CKDDownloadAssetsOperation _tryToFillInTheDerivativeTemplateWithAsset:]
assetKey && "assetKey expected"
&pk=%@
Couldn't wrap asset key: no error
Couldn't create url from template
unknown public cert result for host %@ asset %@
no public cert result for host %@ asset %@
asset %@ has constructedAssetDownloadURLTemplate but cannot parse out host string
Missing signature for asset %@
Missing download token for asset %@
Inconsistent signature type for asset %@, Asset was %@, context does not support
Expected non-nil error for asset %@
Invalid package manifest for package %@
No package manifest found for package %@
Expected non-nil asset
Expected non-nil asset for item %@
Expected non-nil assetCache for %@
Expected non-nil fileURL for %@
Expected a valid sectionIndex: %ld
Operation was cancelled
Couldn't find section at index %ld for package %@
Package section item %@ has zero file signature and non-zero size %llu
v24@?0Q8^B16
Invalid section index %ld(%lu) for package %@
Expected 0 non-empty items in the empty section %@
down|%@|%@|section:%lu
v16@?0@"CKDMMCSItem"8
Missing path for the package manifest
Invalid section index %ld for package %@
Expected non-0 maxPackageDownloadsPerBatch
Expected max downloading tasks: %@
Expected completed tasks: %@
v24@?0@"CKDMMCSItem"8@"NSDictionary"16
v16@?0@"CKDMMCSItemGroupSet"8
fake.txt
Failed to fill out download URL for asset %@
T@"NSArray",&,N,V_assetsToDownload
packageIndexSets
T@"NSArray",&,N,V_packageIndexSets
assetsToDownloadInMemory
T@"NSArray",&,N,V_assetsToDownloadInMemory
assetURLInfosToFillOut
T@"NSArray",&,N,V_assetURLInfosToFillOut
MMCSItemsToDownload
T@"NSMutableArray",&,N,V_MMCSItemsToDownload
MMCSItemsToDownloadInMemory
T@"NSMutableArray",&,N,V_MMCSItemsToDownloadInMemory
downloadTasksByPackages
T@"NSMapTable",&,N,V_downloadTasksByPackages
maxPackageDownloadsPerBatch
TQ,N,V_maxPackageDownloadsPerBatch
downloadPreparationBlock
T@?,C,N,V_downloadPreparationBlock
downloadProgressBlock
T@?,C,N,V_downloadProgressBlock
downloadCommandBlock
T@?,C,N,V_downloadCommandBlock
downloadCompletionBlock
T@?,C,N,V_downloadCompletionBlock
urlFilledOutBlock
T@?,C,N,V_urlFilledOutBlock
keyOrErrorForHostname
T@"NSMutableDictionary",&,N,V_keyOrErrorForHostname
nil publicKey
nil certData
CCECCryptorImportPublicKey failed: NULL
Could not encode uri %@ to UTF-8
SecKeyCreateEncryptedDataWithParameters NULL error
[%@] (%lu operations, %lu requests, %0.2f total duration (%0.2fq/%0.2fe), data u/d: %lu/%lu, %lu connections (%lu created))
 MMCS metrics: %lu requests, (%0.2f total duration (%0.2fq/%0.2fe), data u/d: %lu/%lu, %lu connections (%lu created))
Recent errors: {
%@ - %@
operationClassName
T@"NSString",R,N,V_operationClassName
recentErrorsByDate
T@"NSMutableDictionary",R,N,V_recentErrorsByDate
operationCount
TQ,R,V_operationCount
aggregateCKMetrics
T@"CKDOperationMetrics",R,N,V_aggregateCKMetrics
aggregateMMCSMetrics
T@"CKDOperationMetrics",R,N,V_aggregateMMCSMetrics
range
hasRange
T@"CKDPListRange",&,N,V_range
values
T@"NSMutableArray",&,N,V_values
Error fetching user quota from server: %@
v24@?0Q8@"CKDPResponseOperationResult"16
quotaAvailable
TQ,N,V_quotaAvailable
/api/client/record/resolveToken
shortTokenHash
forceFetch
rootRecordDesiredKeys
hasRoutingKey
hasShortTokenHash
T@"NSData",&,N,V_shortTokenHash
hasForceFetch
TB,N,V_forceFetch
hasShouldFetchRootRecord
T@"NSMutableArray",&,N,V_rootRecordDesiredKeys
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/Assets/CKDAssetZone.m
Expected Item for Zone %@ but Found %@
assetZoneKey=%@
assetRecords
T@"NSMutableOrderedSet",&,N,V_assetRecords
assetRecordsByRecordID
T@"NSMutableDictionary",&,N,V_assetRecordsByRecordID
assetZoneKey
T@"CKDAssetZoneKey",&,N,V_assetZoneKey
-[CKDPAssetUploadTokenRetrieveRequestHeaderInfo writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Protocol/Source/CKDPAssetUploadTokenRetrieveRequestHeaderInfo.m
LastTTRPromptDates
message
T@"NSString",&,N,V_message
uuid
T@"NSString",&,N,V_uuid
componentName
T@"NSString",&,N,V_componentName
componentVersion
T@"NSString",&,N,V_componentVersion
componentID
T@"NSString",&,N,V_componentID
relatedRadar
T@"NSString",&,N,V_relatedRadar
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/CKDTapToRadarManager.m
Please use +[CKDTapToRadarManager sharedManager]
com.apple.cloudkit.taptoradar.alertQueue
com.apple.cloudd
LSApplicationWorkspace
MobileCoreServices.framework
Server Generated CloudKit Bug: "%@"
552485
tap-to-radar://new?Title=%@&ComponentID=%@&ComponentName=%@&ComponentVersion=%@&Classification=Serious Bug&Description=%@%@%@&Reproducibility=I Didn't Try
CloudKit Problem Detected
A problem has been detected with your iCloud account:
"%@"
File a radar
Not now
alertQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_alertQueue
userDefaults
T@"NSUserDefaults",&,N,V_userDefaults
lastPromptDateByMessageHash
T@"NSMutableDictionary",&,N,V_lastPromptDateByMessageHash
Can't encode array %@ of unknown child class: %@
Can't encode object %@ of class %@
Nesting arrays not supported
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Protocol/CKDRecordFieldConversion.m
Invalid type %@ on encrypted field object %@
Did not expect encrypted types while creating field value
Invalid latitude/longitude value in location
Did not expect asset or package field type to have encrypted flag set
Did not expect bytesList or encryptedBytesList field to have encrypted flag set
Could not parse key for indexed list field operation: %@
Invalid value type for indexed list field key %@
Could not produce action for indexed list field key %@
assetType
int64Type
doubleType
emptyList
dateListType
bytesListType
locationListType
referenceListType
assetListType
stringListType
listType
int64ListType
doubleListType
packageType
encryptedBytesType
encryptedBytesListType
streamingAsset
streamingAssetList
delegate
T@"<CKDSystemAvailabilityWatcher>",W,N,V_delegate
T@"NSString",C,N,V_personaID
Use +[CKDSystemAvailabilityMonitor sharedMonitor] instead
com.apple.cloudkit.systemAvailabilityQueue
v16@?0@"<CKDSystemAvailabilityWatcher>"8
watcherWrappers
T@"NSMutableSet",&,N,V_watcherWrappers
availabilityQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_availabilityQueue
availabilityState
TQ,V_availabilityState
systemIsAvailable
shareRecordID
T@"CKRecordID",C,N,V_shareRecordID
T@"NSData",C,N,V_encryptedKey
participantID
T@"NSString",C,N,V_participantID
T@"NSString",C,N,V_baseToken
vettingInitiationRequestCompletionBlock
T@?,C,N,V_vettingInitiationRequestCompletionBlock
CKDPushConnectionDidReceivePublicTokenNotification
connected
disconnected
apsConnection
T@"APSConnection",&,N,V_apsConnection
completionBlocks
T@"NSMutableArray",&,N,V_completionBlocks
T@"NSString",&,N,SsetAPSEnvironmentString:,V_apsEnvironmentString
CKLogDomain
yyyy-MM-dd HH:mm
HH:mm
HH:mm:ss
yyyy-MM-dd HH:mm ZZZ
yyyy-MM-dd HH:mm:ss ZZZ
HH:mm ZZZ
HH:mm:ss ZZZ
cryptoSessions
T@"NSMutableArray",&,N,V_cryptoSessions
/setup/ck/v1/ckAppInit
Couldn't get container configuration from the server for container "%@"
cloudKitDatabaseGatewayUrl
cloudKitDatabaseUrl
cloudKitShareGatewayUrl
cloudKitShareUrl
cloudKitDeviceGatewayUrl
cloudKitDeviceUrl
cloudKitCodeGatewayUrl
cloudKitCodeUrl
cloudKitMetricsGatewayUrl
cloudKitMetricsUrl
cloudKitUserId
orgInfo
cloudKitOrgUserId
icloud
containerInfo
T@"CKDContainerInfo",C,N,V_containerInfo
requireUserIDs
TB,N,V_requireUserIDs
T@"NSString",N,V_containerIdentifier
reservedSize
uploadURL
uploadURLExpirationTimeSeconds
hasReservedSize
Tq,N,V_reservedSize
hasUploadURL
T@"NSString",&,N,V_uploadURL
hasUploadURLExpirationTimeSeconds
Tq,N,V_uploadURLExpirationTimeSeconds
Fetching Zone PCS
Saving Zones
Synchronizing User Key Registry
Zone PCS validation failed across key registry sync
Error saving record zone %@ to server: Protection data didn't match
zone pcs is created without the user's public key
-[CKDModifyRecordZonesOperation _handleRecordZoneSaved:responseCode:serverCapabilities:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/Operations/CKDModifyRecordZonesOperation.m
Error saving record zone %@ to server: %@
Protection data didn't match
Error deleting record zone %@: %@
v32@?0@"CKRecordZoneID"8@"CKDPResponseOperationResult"16Q24
NO_ZONE_PCS_FOR_SERVER
Couldn't create new PCS blob for zone %@
NO_ETAG_FOR_YOU
You can't save the default zone
recordZonesToSave
T@"NSMutableArray",&,N,V_recordZonesToSave
recordZoneIDsToDelete
T@"NSArray",&,N,V_recordZoneIDsToDelete
recordZonesByZoneID
T@"NSMutableDictionary",&,N,V_recordZonesByZoneID
retryableErrorsByZoneID
T@"NSMutableDictionary",&,N,V_retryableErrorsByZoneID
allowDefaultZoneSave
TB,N,V_allowDefaultZoneSave
markZonesAsUserPurged
TB,N,V_markZonesAsUserPurged
numZoneSaveAttempts
Ti,N,V_numZoneSaveAttempts
maxZoneSaveAttempts
Tq,N,V_maxZoneSaveAttempts
dontFetchFromServer
TB,N,V_dontFetchFromServer
didSynchronizeUserKeyRegistry
TB,N,V_didSynchronizeUserKeyRegistry
zonesWaitingOnKeyRegistrySync
T@"NSMutableArray",&,N,V_zonesWaitingOnKeyRegistrySync
saveCompletionBlock
T@?,C,N,V_saveCompletionBlock
deleteCompletionBlock
T@?,C,N,V_deleteCompletionBlock
ck_cloudKitAccount
T@"ACAccount",R,N
ck_identifier
ck_accountProperties
ck_dataclassProperties
ck_personaIdentifier
encryptedZoneishLastRollDate
stableUrl
shareId
protectionInfoKeysToRemove
hasEncryptedZoneishLastRollDate
T@"NSData",&,N,V_encryptedZoneishLastRollDate
hasStableUrl
T@"CKDPRecordStableUrl",&,N,V_stableUrl
hasShareId
T@"CKDPShareIdentifier",&,N,V_shareId
protectionInfoKeysToRemoves
T@"NSMutableArray",&,N,V_protectionInfoKeysToRemoves
com.apple.cloudd.volumeManager
/.vol/%d/%lld
CFFIXED_USER_HOME
field_id
hasFieldId
fieldId
T@"CKDPRecordFieldIdentifier",&,N,V_fieldId
ranges
T@"NSMutableArray",&,N,V_ranges
corporateSharingEnabled
lastWebActivityUTCMills
hasCorporateSharingEnabled
TB,N,V_corporateSharingEnabled
hasLastWebActivityUTCMills
Tq,N,V_lastWebActivityUTCMills
domain
userInfo
hasDomain
T@"NSString",&,N,V_domain
userInfos
T@"NSMutableArray",&,N,V_userInfos
token
asset
tokenExpiration
hasToken
T@"NSString",&,N,V_token
hasAsset
T@"CKDPAsset",&,N,V_asset
hasTokenExpiration
Tq,N,V_tokenExpiration
position
insert_after
hasPosition
T@"CKDPListPosition",&,N,V_position
hasInsertAfter
insertAfter
TB,N,V_insertAfter
 with shareID 
 without any shareID 
lookupInfos
T@"NSArray",&,N,V_lookupInfos
lookupInfosByRequestID
T@"NSMutableDictionary",&,N,V_lookupInfosByRequestID
rootRecordDesiredKeySet
T@"NSSet",&,N,V_rootRecordDesiredKeySet
tokenResolveBlock
T@?,C,N,V_tokenResolveBlock
T@"NSData",&,N,V_shortSharingTokenHashData
MMM d kk:mm:ss:SSSSS
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/cklog/CKLStreamObserver.m
This must be called on a subclass
filter
T@"CKLEventFilter",&,N,V_filter
formatter
T@"NSDateFormatter",R,N,V_formatter
processNamesByPath
T@"NSMutableDictionary",&,N,V_processNamesByPath
simulatorOnly
colorOutput
TB,N,V_colorOutput
%sm%@
SIM: 
[37m%@
[0m %@[%d:%@:%@:%@]%@%@ %@
%@ %@[%d:%llu:%llu:%llu] %@
hasHeaderKey
hasHeaderValue
hasKey
T@"NSString",&,N,V_key
T@"CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoValue",&,N,V_value
com.apple.cloudkit.account.authCallbackQueue
AnonymousAccount
p9(7|8)-ckdatabase
com.apple.Dataclass.Account
iCloudEnv
<%@ %p> ("%@" Account ID: %@)
Can't update account properties because we have no account
com.apple.cloudkit.account.authQueue
Can't renew our auth token since we don't have access to the account
Can't renew credentials because we don't have an account
@"NSString"16@?0^@8
Got a CloudKit auth token that has already failed a previous auth attempt
Got an iCloud auth token that has already failed a previous auth attempt
Can't reauth since we don't have access to the account
accountIdentifier
isAnonymousAccount
isUnitTestingAccount
accountWantsPushRegistration
isCarryAccount
isiCloudDevEnvironmentAccount
serverPreferredPushEnvironment
isFakeAccount
fakeAccountInfo
T@"CKAccountOverrideInfo",R,N
accountStore
T@"ACAccountStore",&,N,V_accountStore
backingAccount
T@"CKDBackingAccount",R,N,V_backingAccount
TB,N,V_isAnonymousAccount
haveWarnedAboutServerPreferredPushEnvironment
TB,N,V_haveWarnedAboutServerPreferredPushEnvironment
authTokenQueue
T@"NSObject<OS_dispatch_queue>",R,N
authTokenCallbackQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_authTokenCallbackQueue
lastFailedCloudKitAuthToken
T@"NSString",C,N,V_lastFailedCloudKitAuthToken
lastFailediCloudAuthToken
T@"NSString",C,N,V_lastFailediCloudAuthToken
fullName
T@"NSPersonNameComponents",R,N
primaryEmail
username
formattedUsername
personaIdentifier
T@"CKAccountOverrideInfo",R,N,V_fakeAccountInfo
TB,N,V_isUnitTestingAccount
TB,N,V_accountWantsPushRegistration
accountWantsFlowControl
TB,N,V_accountWantsFlowControl
iCloudDriveAllowsCellularAccess
isPrimaryEmailVerified
privateCloudDBURL
privateShareServiceURL
privateDeviceServiceURL
privateCodeServiceURL
privateMetricsServiceURL
privateDatabaseRPCServiceURL
Request
Response
Request Object
Response Object
Response Configuration
Request Object Stream Reset
Unknown type
%li%@%li:
-[CKDTrafficLogger _logObject:ofType:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/Service/CKDTrafficLogger.m
stringOffset == b64LogDataString.length
authorization
<Redacted string %ld characters long>
%li:%@
sequenceNumber
Tq,N,V_sequenceNumber
requestID
T@"NSString",&,N,V_requestID
type
oplockFailure
uniqueFieldFailure
hasType
Ti,N,V_type
hasOplockFailure
T@"CKDPOplockFailure",&,N
hasUniqueFieldFailure
T@"CKDPUniqueFieldFailure",&,N
expiredAppConfig
expiredGlobalConfig
badSyntax
forbidden
throttled
refused
notSupported
exists
requestAlreadyProcessed
badAuthToken
needsAuthentication
mescalSignatureMissing
invalidMescalSignature
opLockFailure
atomicFailure
resetNeeded
fieldsPerTypeLimitExceeded
typeBusy
numRecordTypesLimitExceeded
invalidContainer
invalidRecordTypeName
invalidFieldName
invalidFieldValue
invalidIdentifier
fieldNotQueryable
fieldNotSortable
queryFilterLimitExceeded
queryFilterValuesLimitExceeded
membershipQueryLimitExceeded
notificationAdditionalFieldLimitExceeded
notificationAdditionalFieldInvalidType
subscriptionLimitExceeded
uniqueTriggerLimitExceeded
triggerSubscriptionBindingTypeMismatch
zoneSizeLimitExceeded
zoneCountLimitExceeded
validatingReferenceError
fullResetNeeded
alreadyShared
emailOutOfNetwork
duplicateSubscription
expiredPutReceipt
quotaExceeded
zoneNotFound
invalidBundleId
unsupportedDevice
blacklisted
recordProtectionInfoTagMismatch
zoneProtectionInfoTagMismatch
assetSizeLimitExceeded
batchOperationLimitExceeded
requestSizeLimitExceeded
recordSizeLimitExceeded
databaseCommitSizeExceeded
userDeletedDataForZone
staleRecordUpdate
shareParticipantLimitExceeded
shareParticipantError
pcsChainingError
hierarchyAlreadyHasShare
u13Restricted
managedAppleIdRestricted
shareParticipantContactError
recordArchived
databaseAccessDenied
parentHierarchyDepthLimitExceeded
zonePcsUserIdentityUnknown
managedAppleIdBackupBlocked
outOfNetworkUsersUnsupported
+[NSStream(BoundPairAdditions) createBoundInputStream:outputStream:bufferSize:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/Service/CKDProtobufStreamWriter.m
(inputStreamPtr != NULL) || (outputStreamPtr != NULL)
1.2.11
-[CKDProtobufStreamWriter open]
inputStream != nil
outputStream != nil
We just tried to finish compression twice
-[CKDProtobufStreamWriter _compressBodyData:shouldFlush:]
ret != Z_STREAM_ERROR
_zlibStream.avail_in == 0
I didn't order this stream, so why is it on my bill?
shouldCompress
TB,N,V_shouldCompress
hasInitedCompression
TB,N,V_hasInitedCompression
haveFinishedCompression
TB,N,V_haveFinishedCompression
haveFinishedStreaming
TB,V_haveFinishedStreaming
bufferSize
TQ,N,V_bufferSize
logRequestObjectBlock
T@?,C,N,V_logRequestObjectBlock
binaryLogFileHandle
T@"NSFileHandle",&,N,V_binaryLogFileHandle
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/CKDMMCSClientProxyItemReader.m
Expected non-nil MMCS item for %@
nil proxy
Writing not supported
assetId
saveAssetRequest
saveAssetResponse
retrieveAssetResponse
hasAssetId
T@"CKDPStreamingAssetIdentifier",&,N,V_assetId
hasSaveAssetRequest
T@"CKDPStreamingAssetSaveAssetRequest",&,N,V_saveAssetRequest
hasSaveAssetResponse
T@"CKDPStreamingAssetSaveAssetResponse",&,N,V_saveAssetResponse
hasRetrieveAssetResponse
T@"CKDPStreamingAssetRetrieveAssetResponse",&,N,V_retrieveAssetResponse
targetZone
currentServerContinuationToken
clientChangeToken
deviceCount
assetQuotaUsage
metadataQuotaUsage
capabilities
zoneishPcsNeedsRolled
zoneKeyRollAllowed
zonePcsModificationTime
zonePcsModificationDevice
hasTargetZone
T@"CKDPZone",&,N,V_targetZone
hasCurrentServerContinuationToken
T@"NSData",&,N,V_currentServerContinuationToken
hasClientChangeToken
T@"NSData",&,N,V_clientChangeToken
hasDeviceCount
Ti,N,V_deviceCount
hasAssetQuotaUsage
Tq,N,V_assetQuotaUsage
hasMetadataQuotaUsage
Tq,N,V_metadataQuotaUsage
hasCapabilities
T@"CKDPZoneCapabilities",&,N,V_capabilities
hasZoneishPcsNeedsRolled
TB,N,V_zoneishPcsNeedsRolled
hasZoneKeyRollAllowed
TB,N,V_zoneKeyRollAllowed
hasZonePcsModificationTime
T@"CKDPDate",&,N,V_zonePcsModificationTime
hasZonePcsModificationDevice
T@"NSString",&,N,V_zonePcsModificationDevice
CKShareService
/api/client/membership/query/stream
appPartition
alias
sortedBy
OBSOLETE_pcsServiceType
publicKeyRequested
hasAlias
T@"CKDPUserAlias",&,N,V_alias
sortedBys
T@"NSMutableArray",&,N,V_sortedBys
hasOBSOLETEPcsServiceType
oBSOLETEPcsServiceType
T@"NSString",&,N,V_oBSOLETEPcsServiceType
hasPublicKeyRequested
TB,N,V_publicKeyRequested
-[NSArray(CKDUploadAssetsOperationAdditions) CKSortedForUpload]_block_invoke
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/Operations/CKDUploadAssetsOperation.m
key1 && key2
[obj1 isKindOfClass:[CKAsset class]] && [obj2 isKindOfClass:[CKAsset class]]
0 <= index1 && 0 <= index2
assetsToUpload
T@"NSArray",&,N,V_assetsToUpload
assetUUIDToExpectedProperties
T@"NSDictionary",&,N,V_assetUUIDToExpectedProperties
packageUUIDToExpectedProperties
T@"NSDictionary",&,N,V_packageUUIDToExpectedProperties
temporary
TB,N,V_temporary
com.apple.cloudkit.upload
Prepare For Upload
Fetch Upload Tokens
Upload
Expected non-nil package
Expected asset %@ to be marked as uploaded for %@
Invalid maxSectionChunkCount value: %lu
-[CKDUploadAssetsOperation _planSectionsForPackage:error:]
isZeroFileSignature && "Expected zeroSizeFileSignature"
MMCSItem.chunkCount == 0 && "Expected MMCSItem.chunkCount == 0"
MMCSItem.fileSize == 0 && "Expected MMCSItem.size == 0"
i < packageItems.count
Invalid sectionChunkCount value: %lu
Number of expected file signatures did not match number of assets in package %@ (%lu versus %lu)
Did not find expected file signature for item %@ in package %@
Did not find expected file signature for asset %@
Invalid size for the manifest for package %@
nil fileURL property
-[CKDUploadAssetsOperation _prepareForUpload]
itemGroupSet.allItemGroups.count == 1
No auth request and no error
-[CKDUploadAssetsOperation _failAllItemsInAssetBatch:error:]
No authToken received for asset
No authPutResponse received for re-referenced asset
Atomic zone yo; something in the batch failed.
Expected nil error for %@
Invalid section %@ at index %lu/%lu
Expected non-nil reference signature for %@
Invalid section count %lu/%lu
Can't find section at index %lu
Expected non-0 maxPackageUploadsPerBatch
Expected max uploading tasks: %@
Expected non-0 size for the manifest for package %@
-[CKDUploadAssetsOperation _upload]
putItemGroupSet.allItemGroups.count == 1
uploadTasksByPackages
T@"NSMapTable",&,N,V_uploadTasksByPackages
packageManifests
T@"NSMutableArray",&,N,V_packageManifests
openedPackages
T@"NSMutableArray",&,N,V_openedPackages
maxPackageUploadsPerBatch
TQ,N,V_maxPackageUploadsPerBatch
assetRequestPlanner
T@"CKDAssetRequestPlanner",&,N,V_assetRequestPlanner
uploadPreparationBlock
T@?,C,N,V_uploadPreparationBlock
uploadProgressBlock
T@?,C,N,V_uploadProgressBlock
uploadCompletionBlock
T@?,C,N,V_uploadCompletionBlock
atomic
TB,N,V_atomic
timeStatistics
serverFields
hasEtag
T@"NSString",&,N,V_etag
hasTimeStatistics
T@"CKDPDateStatistics",&,N,V_timeStatistics
hasServerFields
T@"CKDPRecord",&,N,V_serverFields
bounds
hasBounds
T@"CKDPLocationBound",&,N,V_bounds
hasSuccess
TB,N,V_success
Fetching PCS
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/Operations/CKDPublishAssetsOperation.m
Expected non nil recordID
Record %@ contained no matching asset fields to publish
recordIDs
T@"NSArray",&,N,V_recordIDs
fileNamesByAssetFieldNames
T@"NSDictionary",&,N,V_fileNamesByAssetFieldNames
requestedTTL
TQ,N,V_requestedTTL
URLOptions
TQ,N,V_URLOptions
fetchRecordsOperation
T@"NSOperation",&,V_fetchRecordsOperation
fetchedRecordsByID
T@"NSMutableDictionary",&,N,V_fetchedRecordsByID
assetPublishedBlock
T@?,C,N,V_assetPublishedBlock
/api/client/record/save
merge
fieldsToDeleteIfExistOnMerge
conflictLoserUpdate
saveSemantics
recordProtectionInfoTag
conflictLosersToResolve
shareEtag
shareIDUpdate
parentChainProtectionInfoTag
hasRecord
T@"CKDPRecord",&,N,V_record
hasMerge
TB,N,V_merge
fieldsToDeleteIfExistOnMerges
T@"NSMutableArray",&,N,V_fieldsToDeleteIfExistOnMerges
hasConflictLoserUpdate
T@"CKDPRecordSaveRequestConflictLoserUpdate",&,N,V_conflictLoserUpdate
hasSaveSemantics
Ti,N,V_saveSemantics
hasRecordProtectionInfoTag
T@"NSString",&,N,V_recordProtectionInfoTag
conflictLosersToResolves
T@"NSMutableArray",&,N,V_conflictLosersToResolves
hasShareEtag
T@"NSString",&,N,V_shareEtag
hasShareIDUpdate
T@"CKDPRecordSaveRequestShareIdUpdate",&,N,V_shareIDUpdate
hasParentChainProtectionInfoTag
T@"NSString",&,N,V_parentChainProtectionInfoTag
failIfOutdated
failIfExists
override
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/CKDClientInfo.m
Use +[%@ sharedClientInfo]
com.apple.cloudkit.clientinfo.callback
UserAssignedDeviceName
v24@?0^{__CFString=}8^{__CFDictionary=}16
hostname
userToken
applicationConfigVersion
globalConfigVersion
deviceSoftwareVersion
deviceHardwareVersion
deviceLibraryName
deviceLibraryVersion
deviceFlowControlKey
deviceFlowControlBudget
deviceFlowControlBudgetCap
deviceFlowControlRegeneration
deviceProtocolVersion
locale
mmcsProtocolVersion
deviceAssignedName
deviceHardwareID
targetDatabase
userIDContainerID
serviceIdentityKeyIDs
deviceSoftwareIsAppleInternal
assetAuthorizeGetRequestOptions
hasUserToken
T@"NSString",&,N,V_userToken
hasApplicationBundle
T@"NSString",&,N,V_applicationBundle
hasApplicationVersion
hasApplicationConfigVersion
TQ,N,V_applicationConfigVersion
hasGlobalConfigVersion
TQ,N,V_globalConfigVersion
hasDeviceIdentifier
T@"CKDPIdentifier",&,N,V_deviceIdentifier
hasDeviceSoftwareVersion
T@"NSString",&,N,V_deviceSoftwareVersion
hasDeviceHardwareVersion
T@"NSString",&,N,V_deviceHardwareVersion
hasDeviceLibraryName
T@"NSString",&,N,V_deviceLibraryName
hasDeviceLibraryVersion
T@"NSString",&,N,V_deviceLibraryVersion
hasDeviceFlowControlKey
T@"NSString",&,N,V_deviceFlowControlKey
hasDeviceFlowControlBudget
TQ,N,V_deviceFlowControlBudget
hasDeviceFlowControlBudgetCap
TQ,N,V_deviceFlowControlBudgetCap
hasDeviceFlowControlRegeneration
Tf,N,V_deviceFlowControlRegeneration
hasDeviceProtocolVersion
TQ,N,V_deviceProtocolVersion
hasLocale
T@"CKDPLocale",&,N,V_locale
hasMmcsProtocolVersion
T@"NSString",&,N,V_mmcsProtocolVersion
hasDeviceAssignedName
T@"NSString",&,N,V_deviceAssignedName
hasDeviceHardwareID
T@"NSString",&,N,V_deviceHardwareID
hasTargetDatabase
Ti,N,V_targetDatabase
hasUserIDContainerID
T@"NSString",&,N,V_userIDContainerID
hasIsolationLevel
Ti,N,V_isolationLevel
hasOperationGroupName
T@"NSString",&,N,V_operationGroupName
hasOperationGroupQuantity
TQ,N,V_operationGroupQuantity
T@"NSMutableArray",&,N,V_serviceIdentityKeyIDs
hasDeviceSoftwareIsAppleInternal
TB,N,V_deviceSoftwareIsAppleInternal
hasAssetAuthorizeGetRequestOptions
T@"CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptions",&,N,V_assetAuthorizeGetRequestOptions
privateDB
publicDB
sharedDB
orgDB
recordId
assetFields
hasRecordId
T@"CKDPRecordIdentifier",&,N,V_recordId
T@"CKDPRecordType",&,N,V_type
T@"NSMutableArray",&,N,V_assetFields
operationCost
result
header
shareVettingInitiateResponse
zoneSaveResponse
zoneRetrieveResponse
zoneDeleteResponse
zoneRetrieveChangesResponse
recordSaveResponse
recordRetrieveResponse
recordRetrieveVersionsResponse
recordRetrieveChangesResponse
recordDeleteResponse
recordResolveTokenResponse
fetchArchivedRecordsResponse
userAvailableQuotaResponse
userRetrieveResponse
queryRetrieveResponse
assetUploadTokenRetrieveResponse
deleteContainerResponse
bundlesForContainerResponse
webAuthTokenRetrieveResponse
updateMissingAssetStatusResponse
shareAcceptResponse
functionInvokeResponse
subscriptionCreateResponse
subscriptionRetrieveResponse
subscriptionDeleteResponse
archiveRecordsResponse
markAssetBrokenResponse
userQueryResponse
userPrivacySettingsUpdateResponse
userPrivacySettingsResetResponse
userPrivacySettingsBatchLookupResponse
userPrivacySettingsRetrieveResponse
tokenRegistrationResponse
tokenUnregistrationResponse
setBadgeCountResponse
notificationSyncResponse
notificationMarkReadResponse
hasOperationCost
TI,N,V_operationCost
hasResponse
T@"CKDPOperation",&,N,V_response
hasResult
T@"CKDPResponseOperationResult",&,N,V_result
hasHeader
T@"CKDPResponseOperationHeader",&,N,V_header
hasShareVettingInitiateResponse
T@"CKDPShareVettingInitiateResponse",&,N
hasZoneSaveResponse
T@"CKDPZoneSaveResponse",&,N
hasZoneRetrieveResponse
T@"CKDPZoneRetrieveResponse",&,N
hasZoneDeleteResponse
T@"CKDPZoneDeleteResponse",&,N
hasZoneRetrieveChangesResponse
T@"CKDPZoneRetrieveChangesResponse",&,N
hasRecordSaveResponse
T@"CKDPRecordSaveResponse",&,N
hasRecordRetrieveResponse
T@"CKDPRecordRetrieveResponse",&,N
hasRecordRetrieveVersionsResponse
T@"CKDPRecordRetrieveVersionsResponse",&,N
hasRecordRetrieveChangesResponse
T@"CKDPRecordRetrieveChangesResponse",&,N
hasRecordDeleteResponse
T@"CKDPRecordDeleteResponse",&,N
hasRecordResolveTokenResponse
T@"CKDPRecordResolveTokenResponse",&,N
hasFetchArchivedRecordsResponse
T@"CKDPFetchArchivedRecordsResponse",&,N
hasUserAvailableQuotaResponse
T@"CKDPUserAvailableQuotaResponse",&,N
hasUserRetrieveResponse
T@"CKDPUserRetrieveResponse",&,N
hasQueryRetrieveResponse
T@"CKDPQueryRetrieveResponse",&,N
hasAssetUploadTokenRetrieveResponse
T@"CKDPAssetUploadTokenRetrieveResponse",&,N
hasDeleteContainerResponse
T@"CKDPDeleteContainerResponse",&,N
hasBundlesForContainerResponse
T@"CKDPBundlesForContainerResponse",&,N
hasWebAuthTokenRetrieveResponse
T@"CKDPWebAuthTokenRetrieveResponse",&,N
hasUpdateMissingAssetStatusResponse
T@"CKDPUpdateMissingAssetStatusResponse",&,N
hasShareAcceptResponse
T@"CKDPShareAcceptResponse",&,N
hasFunctionInvokeResponse
T@"CKDPCodeFunctionInvokeResponse",&,N
hasSubscriptionCreateResponse
T@"CKDPSubscriptionCreateResponse",&,N
hasSubscriptionRetrieveResponse
T@"CKDPSubscriptionRetrieveResponse",&,N
hasSubscriptionDeleteResponse
T@"CKDPSubscriptionDeleteResponse",&,N
hasArchiveRecordsResponse
T@"CKDPArchiveRecordsResponse",&,N
hasMarkAssetBrokenResponse
T@"CKDPMarkAssetBrokenResponse",&,N
hasUserQueryResponse
T@"CKDPUserQueryResponse",&,N
hasUserPrivacySettingsUpdateResponse
T@"CKDPUserPrivacySettingsUpdateResponse",&,N
hasUserPrivacySettingsResetResponse
T@"CKDPUserPrivacySettingsResetResponse",&,N
hasUserPrivacySettingsBatchLookupResponse
T@"CKDPUserPrivacySettingsBatchLookupResponse",&,N
hasUserPrivacySettingsRetrieveResponse
T@"CKDPUserPrivacySettingsRetrieveResponse",&,N
hasTokenRegistrationResponse
T@"CKDPTokenRegistrationResponse",&,N
hasTokenUnregistrationResponse
T@"CKDPTokenUnregistrationResponse",&,N
hasSetBadgeCountResponse
T@"CKDPSetBadgeCountResponse",&,N
hasNotificationSyncResponse
T@"CKDPNotificationSyncResponse",&,N
hasNotificationMarkReadResponse
T@"CKDPNotificationMarkReadResponse",&,N
isDeleted
recordVersions
hasIsDeleted
TB,N,V_isDeleted
T@"NSMutableArray",&,N,V_recordVersions
com.apple.security.view-become-ready
view
 named 
operationUUID
synchronousMode
last
hasOperationUUID
T@"NSString",&,N,V_operationUUID
hasSynchronousMode
TB,N,V_synchronousMode
hasLast
TB,N,V_last
noneType
zoneSaveType
zoneRetrieveType
zoneDeleteType
zoneRetrieveChangesType
recordSaveType
recordRetrieveType
recordRetrieveVersionsType
recordRetrieveChangesType
recordDeleteType
recordResolveTokenType
fetchArchivedRecordsType
queryRetrieveType
assetUploadTokenRetrieveType
containerDeleteType
userAvailableQuotaType
containerGetBundlesType
webAuthTokenRetrieveType
dataRepairUpdateMissingAssetStatusType
subscriptionCreateType
subscriptionRetrieveType
subscriptionDeleteType
userRetrieveType
userQueryType
userPrivacySettingsRetrieveType
userPrivacySettingsUpdateType
userPrivacySettingsResetType
userPrivacySettingsBatchLookup
shareAcceptType
shareVettingInitiateType
pushRegisterType
pushUnregisterType
pushBadgeType
pushSyncType
pushReadType
archiveRecordsType
datarepairMarkAssetBrokenType
functionInvokeType
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/Service/CKDProtobufResponseBodyParser.m
You can't use %@ without setting a message class
_parserData has insane length %lu
Couldn't read the size of the next object from the server
_curObjectLength has insane length %lu
ParserData length %lu isn't greater than varIntLen of %lu (objectLength %llu)
Couldn't parse an object from the server
ParserData length %lu isn't greater than self.curObjectLength of %lu
Someone is parsing on another thread!
tailParserData
T@"NSMutableData",&,N,V_tailParserData
curObjectLength
TQ,N,V_curObjectLength
isParsing
TB,N,V_isParsing
messageClass
T#,N,V_messageClass
parsingStandaloneMessage
TB,N,V_parsingStandaloneMessage
Error saving record subscription with id %@ to server: %@
Error deleting subscription %@: %@
Subscription fails conversion: %@
Subscription with a nil notificationInfo: %@
v24@?0@"NSString"8@"CKDPResponseOperationResult"16
subscriptionsToSave
T@"NSArray",&,N,V_subscriptionsToSave
subscriptionIDsToDelete
T@"NSArray",&,N,V_subscriptionIDsToDelete
subscriptionsByServerID
T@"NSMutableDictionary",&,N,V_subscriptionsByServerID
contentRequestHeaders
contentRequestAuthorizeGetOptions
T@"NSMutableArray",&,N,V_contentRequestHeaders
hasContentRequestAuthorizeGetOptions
TQ,N,V_contentRequestAuthorizeGetOptions
/api/client/record/versions
minimumVersionEtag
hasMinimumVersionEtag
T@"NSString",&,N,V_minimumVersionEtag
hasAssetFields
T@"CKDPRequestedFields",&,N,V_assetFields
hasRequestedTTL
Tq,N,V_requestedTTL
publishedURL
streamingURL
appQuote
aqeQuote
pckCertificate
routingToken
hasAppQuote
T@"NSData",&,N,V_appQuote
hasAqeQuote
T@"NSData",&,N,V_aqeQuote
hasPckCertificate
T@"NSString",&,N,V_pckCertificate
hasRoutingToken
T@"NSData",&,N,V_routingToken
bundleID
bundleIDs
T@"NSMutableArray",&,N,V_bundleIDs
shareVettingInitiateRequest
zoneSaveRequest
zoneRetrieveRequest
zoneDeleteRequest
zoneRetrieveChangesRequest
recordSaveRequest
recordRetrieveRequest
recordRetrieveVersionsRequest
recordRetrieveChangesRequest
recordDeleteRequest
recordResolveTokenRequest
fetchArchivedRecordsRequest
userAvailableQuotaRequest
userRetrieveRequest
queryRetrieveRequest
assetUploadTokenRetrieveRequest
deleteContainerRequest
bundlesForContainerRequest
webAuthTokenRetrieveRequest
updateMissingAssetStatusRequest
shareAcceptRequest
functionInvokeRequest
subscriptionCreateRequest
subscriptionRetrieveRequest
subscriptionDeleteRequest
archiveRecordsRequest
markAssetBrokenRequest
userQueryRequest
userPrivacySettingsUpdateRequest
userPrivacySettingsResetRequest
userPrivacySettingsBatchLookupRequest
userPrivacySettingsRetrieveRequest
tokenRegistrationRequest
tokenUnregistrationRequest
setBadgeCountRequest
notificationSyncRequest
notificationMarkReadRequest
T@"CKDPRequestOperationHeader",&,N,V_header
hasRequest
T@"CKDPOperation",&,N,V_request
hasShareVettingInitiateRequest
T@"CKDPShareVettingInitiateRequest",&,N
hasZoneSaveRequest
T@"CKDPZoneSaveRequest",&,N
hasZoneRetrieveRequest
T@"CKDPZoneRetrieveRequest",&,N
hasZoneDeleteRequest
T@"CKDPZoneDeleteRequest",&,N
hasZoneRetrieveChangesRequest
T@"CKDPZoneRetrieveChangesRequest",&,N
hasRecordSaveRequest
T@"CKDPRecordSaveRequest",&,N
hasRecordRetrieveRequest
T@"CKDPRecordRetrieveRequest",&,N
hasRecordRetrieveVersionsRequest
T@"CKDPRecordRetrieveVersionsRequest",&,N
hasRecordRetrieveChangesRequest
T@"CKDPRecordRetrieveChangesRequest",&,N
hasRecordDeleteRequest
T@"CKDPRecordDeleteRequest",&,N
hasRecordResolveTokenRequest
T@"CKDPRecordResolveTokenRequest",&,N
hasFetchArchivedRecordsRequest
T@"CKDPFetchArchivedRecordsRequest",&,N
hasUserAvailableQuotaRequest
T@"CKDPUserAvailableQuotaRequest",&,N
hasUserRetrieveRequest
T@"CKDPUserRetrieveRequest",&,N
hasQueryRetrieveRequest
T@"CKDPQueryRetrieveRequest",&,N
hasAssetUploadTokenRetrieveRequest
T@"CKDPAssetUploadTokenRetrieveRequest",&,N
hasDeleteContainerRequest
T@"CKDPDeleteContainerRequest",&,N
hasBundlesForContainerRequest
T@"CKDPBundlesForContainerRequest",&,N
hasWebAuthTokenRetrieveRequest
T@"CKDPWebAuthTokenRetrieveRequest",&,N
hasUpdateMissingAssetStatusRequest
T@"CKDPUpdateMissingAssetStatusRequest",&,N
hasShareAcceptRequest
T@"CKDPShareAcceptRequest",&,N
hasFunctionInvokeRequest
T@"CKDPCodeFunctionInvokeRequest",&,N
hasSubscriptionCreateRequest
T@"CKDPSubscriptionCreateRequest",&,N
hasSubscriptionRetrieveRequest
T@"CKDPSubscriptionRetrieveRequest",&,N
hasSubscriptionDeleteRequest
T@"CKDPSubscriptionDeleteRequest",&,N
hasArchiveRecordsRequest
T@"CKDPArchiveRecordsRequest",&,N
hasMarkAssetBrokenRequest
T@"CKDPMarkAssetBrokenRequest",&,N
hasUserQueryRequest
T@"CKDPUserQueryRequest",&,N
hasUserPrivacySettingsUpdateRequest
T@"CKDPUserPrivacySettingsUpdateRequest",&,N
hasUserPrivacySettingsResetRequest
T@"CKDPUserPrivacySettingsResetRequest",&,N
hasUserPrivacySettingsBatchLookupRequest
T@"CKDPUserPrivacySettingsBatchLookupRequest",&,N
hasUserPrivacySettingsRetrieveRequest
T@"CKDPUserPrivacySettingsRetrieveRequest",&,N
hasTokenRegistrationRequest
T@"CKDPTokenRegistrationRequest",&,N
hasTokenUnregistrationRequest
T@"CKDPTokenUnregistrationRequest",&,N
hasSetBadgeCountRequest
T@"CKDPSetBadgeCountRequest",&,N
hasNotificationSyncRequest
T@"CKDPNotificationSyncRequest",&,N
hasNotificationMarkReadRequest
T@"CKDPNotificationMarkReadRequest",&,N
shouldFetchAssetContentInMemory
TB,N,V_shouldFetchAssetContentInMemory
/api/client/pushRegister
tokenRegistrationBody
hasTokenRegistrationBody
T@"CKDPTokenRegistrationBody",&,N,V_tokenRegistrationBody
version
hasVersion
Ti,N,V_version
/api/client/privacy/retrieve
Share metadata for the share at URL %@ doesn't have protection data on it
Unable to create public PCS blob using metadata %@ (private token was: %@, share's public PCS blob was %@)
first
second
Unknown error while trying to initiate vetting process for participant %@: %@
The address of participant %@ is already vetted to caller
This address is vetted to a different Apple ID
This account has too many vetted email addresses and another cannot be added
VETTING_PASSWORD_DIALOG
User session has expired and we were unable to re-authenticate user during vetting
Unable to vet due to failed authentification even after successful authentication attempt, giving up
Error code %ld while trying to initiate vetting process for participant %@
v24@?0q8@"CKDPResponseOperationResult"16
T@"NSData",&,N,V_encryptedKey
T@"NSString",&,N,V_participantID
address
T@"NSString",&,N,V_address
participantVettingProgressBlock
T@?,C,N,V_participantVettingProgressBlock
hasIdentifier
hashedEmailAddressType
containerUserIdentifier
hashedCanonicalPhoneNumber
Invalid subscription
The subscription could not be converted because it is invalid: %@
subscriptionIDByRequestID
T@"NSMutableDictionary",&,N,V_subscriptionIDByRequestID
T@"CKRecordZoneID",C,N,V_zoneID
subscriptionModifiedBlock
T@?,C,N,V_subscriptionModifiedBlock
bundleIdentifier
apnsEnv
T@"NSData",&,N,V_token
hasBundleIdentifier
T@"NSString",&,N,V_bundleIdentifier
hasApnsEnv
Ti,N,V_apnsEnv
development
share
hasShare
T@"CKDPShare",&,N,V_share
bytesValue
signedValue
doubleValue
dateValue
stringValue
locationValue
referenceValue
assetValue
listValue
packageValue
streamingAssetValue
isEncrypted
hasBytesValue
T@"NSData",&,N,V_bytesValue
hasSignedValue
Tq,N,V_signedValue
hasDoubleValue
Td,N,V_doubleValue
hasDateValue
T@"CKDPDate",&,N,V_dateValue
hasStringValue
T@"NSString",&,N,V_stringValue
hasLocationValue
T@"CKDPLocationCoordinate",&,N,V_locationValue
hasReferenceValue
T@"CKDPRecordReference",&,N,V_referenceValue
hasAssetValue
T@"CKDPAsset",&,N,V_assetValue
listValues
T@"NSMutableArray",&,N,V_listValues
hasPackageValue
T@"CKDPPackage",&,N,V_packageValue
hasStreamingAssetValue
T@"CKDPStreamingAsset",&,N,V_streamingAssetValue
hasIsEncrypted
TB,N,V_isEncrypted
bytesType
dateType
stringType
locationType
referenceType
downloadURL
downloadURLExpirationTimeSeconds
hasDownloadURL
T@"NSString",&,N,V_downloadURL
hasDownloadURLExpirationTimeSeconds
Tq,N,V_downloadURLExpirationTimeSeconds
publicKeyID
reference
hasPublicKeyID
T@"NSData",&,N,V_publicKeyID
hasReference
T@"CKDPRecordReference",&,N,V_reference
/api/client/pushSync
serverChangeToken
maxChanges
wantsChanges
hasServerChangeToken
T@"NSData",&,N,V_serverChangeToken
hasMaxChanges
TI,N,V_maxChanges
hasWantsChanges
TB,N,V_wantsChanges
Checking Zone PCS
Repairing PCS
fixedZones
T@"NSMutableArray",&,N,V_fixedZones
pcsInfoByZoneID
T@"NSMutableDictionary",&,N,V_pcsInfoByZoneID
zonePCSRepairProgressBlock
T@?,C,N,V_zonePCSRepairProgressBlock
int64Value
boolValue
hasInt64Value
Tq,N,V_int64Value
hasBoolValue
TB,N,V_boolValue
v32@?0@"NSString"8@"CKDPRequestedListField"16^B24
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/Service/CKDGetRecordsURLRequest.m
Invalid desired key %@, which should have been caught earlier
Non-indexed desired key %@, which should have been caught earlier
Expected non-nil recordID for %@
Invalid record
Failed to read server response: %@
recordIDsToETags
T@"NSDictionary",&,N,V_recordIDsToETags
recordIDsToVersionETags
T@"NSDictionary",&,N,V_recordIDsToVersionETags
recordCount
TQ,N,V_recordCount
recordIDByRequestID
T@"NSMutableDictionary",&,N,V_recordIDByRequestID
desiredKeys
T@"NSSet",&,N,V_desiredKeys
assetFieldNamesToPublishURLs
T@"NSSet",&,N,V_assetFieldNamesToPublishURLs
desiredIndexedListKeys
T@"NSArray",&,N,V_desiredIndexedListKeys
/api/client/webauth/retrieve/token
apiToken
forceFetchToken
hasApiToken
T@"NSString",&,N,V_apiToken
hasForceFetchToken
TB,N,V_forceFetchToken
containerScopedUserId
hasContainerScopedUserId
T@"NSString",&,N,V_containerScopedUserId
<%@ %p> [Type: %@, Seq: %ld, Len: %lu, UUID: %@]
TQ,R,N,V_type
T@"NSString",R,N,V_uuid
seqNum
Tq,R,N,V_seqNum
dataString
T@"NSString",R,N,V_dataString
com.apple.cloudkitlog.parseandprint
LogFacilityTraffic
Traffic
traff-cont: 
LogFacilityTrafficBinary
TrafficBinary
B32@?0@"CKLTrafficLogMessageFragment"8Q16^B24
cloudkitlog parse error: A traffic log packet for request %@ was likely dropped. Was expecting sequence number %li but received %li. Will attempt to parse but might be unsuccessful
CKDPRequestOperation
-[CKLStreamTrafficObserver parseRequestArrayAndPrint:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/cklog/CKLStreamTrafficObserver.m
false
cloudkitlog parse error: Request objects parsed with error %@
cloudkitlog parse error: Response objects parsed with error %@
cloudkitlog parse error: request object parser timed out for request %@. Likely lost some request object data logs.
cloudkitlog parse error: received request object data for request %@ but wasn't able to parse a single request object
cloudkitlog parse error: received response object data for request %@ but wasn't able to parse a single response object
Finished
-[CKLStreamTrafficObserver parserFromConfigurationMessage:]
requestDictionary
T@"NSMutableDictionary",&,V_requestDictionary
printQueue
T@"NSObject<OS_dispatch_queue>",&,V_printQueue
requestParsedBlock
T@?,C,N,V_requestParsedBlock
v16@?0@"CKLTrafficLogMessage"8
Traffic log for request %@
>>>>>>>> Request
=>=>=>=>=>Body stream was reset %li time%@. This was what was streamed the final time:
<<<<<<<< Response
Status %lu
End traffic log for operation %@
%@: %@
v32@?0@"CKUserIdentityLookupInfo"8@"CKUserIdentity"16@"NSError"24
pendingRequest
T@"CKDPublicIdentityLookupRequest",&,N,V_pendingRequest
shareParticipantFetchedBlock
T@?,C,N,V_shareParticipantFetchedBlock
/api/client/share/accept
selfAddedPcs
publicKey
participantId
publicKeyVersion
acceptedInProcess
hasSelfAddedPcs
T@"CKDPProtectionInfo",&,N,V_selfAddedPcs
hasPublicKey
T@"CKDPProtectionInfo",&,N,V_publicKey
hasParticipantId
T@"NSString",&,N,V_participantId
hasPublicKeyVersion
Ti,N,V_publicKeyVersion
hasAcceptedInProcess
TB,N,V_acceptedInProcess
zoneIDToRecordIDs
T@"NSMutableDictionary",&,N,V_zoneIDToRecordIDs
recordZoneIDByRequestID
T@"NSMutableDictionary",&,N,V_recordZoneIDByRequestID
recordArchivedBlock
T@?,C,N,V_recordArchivedBlock
fieldValue
hasFieldValue
T@"CKDPRecordFieldValue",&,N,V_fieldValue
equals
notEquals
notIn
lessThan
lessThanOrEquals
greaterThan
greaterThanOrEquals
near
containsAllTokens
containsAnyTokens
listContains
listNotContains
listContainsAny
listNotContainsAny
beginsWith
notBeginsWith
listMemberBeginsWith
notListMemberBeginsWith
listContainsAll
listNotContainsAll
types
filters
sorts
distinct
queryOperator
T@"NSMutableArray",&,N,V_types
T@"NSMutableArray",&,N,V_filters
T@"NSMutableArray",&,N,V_sorts
hasDistinct
TB,N,V_distinct
hasQueryOperator
Ti,N,V_queryOperator
creationDate
modificationDate
creatorUserRecordID
lastModifiedUserRecordID
recordChangeTag
shareID
Unsupported operation for special key-path allTokens
Unexpected reference type
Unexpected operator for predicate
Unexpected filter type
errorKey
CKPluginUnknownDomain
CKDPParticipant_ShareParticipantKeyHealth CKDPShareParticipantKeyHealthForCKShareParticipantInvitationTokenStatus(CKShareParticipantInvitationTokenStatus)
<Unknown Function>
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Protocol/CKDEnumConversion.m
Unexpected share participant invitation token status: %ld
CKDPShare_Permission CKDPSharePermissionForCKShareParticipantPermission(CKShareParticipantPermission)
Unexpected share participant permissions: %ld
CKDPParticipant_ShareParticipantType CKDPShareParticipantTypeForCKShareParticipantRole(CKShareParticipantRole)
Unexpected share participant role: %ld
responseUUID
authGetResponseBody
hasResponseUUID
T@"NSString",&,N,V_responseUUID
hasAuthGetResponseBody
T@"NSData",&,N,V_authGetResponseBody
T@"NSMutableArray",&,N,V_responseHeaders
extensionName
typeCode
extensionPayload
hasExtensionName
T@"NSString",&,N,V_extensionName
hasTypeCode
TI,N,V_typeCode
hasExtensionPayload
T@"NSData",&,N,V_extensionPayload
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/CKDMMCSItemReader.m
Expected an invalid file handle for %@
Expected a valid file handle for %@
pread error: %d (%s)
pwrite error: %d (%s)
fileHandle
T@"NSFileHandle",&,N,V_fileHandle
createdBy
fields
modifiedBy
conflictLoserEtags
modifiedByDevice
pluginFields
permission
shareInfo
chainPrivateKey
chainProtectionInfo
chainParent
tombstonedPublicKeyIDs
zoneishMasterKeyId
hasCreatedBy
T@"CKDPIdentifier",&,N,V_createdBy
T@"NSMutableArray",&,N,V_fields
hasModifiedBy
T@"CKDPIdentifier",&,N,V_modifiedBy
T@"NSMutableArray",&,N,V_conflictLoserEtags
hasModifiedByDevice
T@"NSString",&,N,V_modifiedByDevice
T@"NSMutableArray",&,N,V_pluginFields
hasPermission
Ti,N,V_permission
hasShareInfo
T@"CKDPShare",&,N,V_shareInfo
hasChainPrivateKey
T@"NSData",&,N,V_chainPrivateKey
hasChainProtectionInfo
T@"CKDPProtectionInfo",&,N,V_chainProtectionInfo
hasChainParent
T@"CKDPRecordChainParent",&,N,V_chainParent
T@"NSMutableArray",&,N,V_tombstonedPublicKeyIDs
hasZoneishMasterKeyId
T@"NSData",&,N,V_zoneishMasterKeyId
readOnly
readWrite
/api/client/record/delete
participantKeyLost
publicKeys
hasParticipantKeyLost
TB,N,V_participantKeyLost
T@"NSMutableArray",&,N,V_publicKeys
com.apple.cloudkit.UploadPackages
com.apple.cloudkit.packagepurger
com.apple.cloudkit.packageGarbageCollection
B24@?0@"NSString"8@"NSArray"16
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Utility/CKDPackageDirectoryPurger.m
Expected: %@ to be a directory
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
rootDirectories
T@"NSMutableArray",R,N,V_rootDirectories
%K IN %@
distanceToLocation:fromLocation:(%K, %@) < %f
ALL tokenize(%@, 'cdl') IN allTokens
ANY tokenize(%@, 'cdl') IN allTokens
%K CONTAINS %@
ANY %@ IN %K
%K BEGINSWITH %@
ANY %K BEGINSWITH %@
ALL %@ IN %K
NSTruePredicate
Unexpected predicate type: %@
distanceToLocation:fromLocation:
Searching for locations outside of a specified circular area is not supported: %@
Expected search radius on right hand side of operator: %@
Expected search radius on left hand side of operator: %@
Expected expected 2 arguments for function distanceToLocation:fromLocation: %@
Expected NSKeyPathExpressionType argument for distanceToLocation:fromLocation:
Expected CLLocation argument for distanceToLocation:fromLocation: but got %@
a nil location
Expected NSString or NSData on right hand side: %@
Expected array with two number arguments on right hand side, but got %@: %@
Expected array with two number arguments on right hand side: %@
allTokens
Required string or tokenize() arguments when comparing to special key-path allTokens: %@
tokenize:using:
Required NSCaseInsensitivePredicateOption, NSDiacriticInsensitivePredicateOption, and NSLocaleSensitivePredicateOption tokenization options on tokenize() function: %@
Required string argument when using tokenize(), but got %@: %@
Required string or tokenize() arguments when searching special key-path allTokens: %@
Enumerating special key-path allTokens is not allowed: %@
Required NSCaseInsensitivePredicateOption, NSDiacriticInsensitivePredicateOption, and NSLocaleSensitivePredicateOption comparison predicate options: %@
Required predicate modifier ANY or ALL when searching special key-path allTokens: %@
Required tokenize() operand when searching special key-path allTokens: %@
Required comparison operators TOKENMATCHES or IN when searching special key-path allTokens: %@
Expected key-path in comparison expression: %@
Expected constant value in comparison expression: %@
Aggregate operator ALL not allowed for comparison expression: %@
Aggregate operator ANY not allowed for comparison expression: %@
Type '%@' not allowed in comparison expression: %@
Predicate comparison options are not supported for expression: %@
Unexpected expression: %@
Expected comparison subpredicate: %@
Invalid NOT predicate: %@
q24@?0@"CKDPQueryFilter"8@"CKDPQueryFilter"16
apsToken
T@"NSData",&,N,V_apsToken
T@"NSString",&,N,V_apsEnvironmentString
T@"NSString",&,N,V_bundleID
attestationEntropy
T@"NSData",&,N,V_attestationEntropy
pccWrappedInvocationKeys
T@"NSArray",C,N,V_pccWrappedInvocationKeys
device
subscriptionIDs
T@"NSArray",&,N,V_subscriptionIDs
subscriptions
T@"NSMutableArray",&,N,V_subscriptions
subscriptionFetchedBlock
T@?,C,N,V_subscriptionFetchedBlock
com.apple.cloudkit.parser.
This method must be subclassed in class %@
parserError
T@"NSError",&,N,V_parserError
parseQueue
parserData
T@"NSMutableData",&,N
Tq,N,V_qualityOfService
objectParsedBlock
T@?,C,N,V_objectParsedBlock
CKDPCSKeySyncNonManateeServiceName
 YES
 error: 
manatee
TB,N,GisManatee,V_manatee
syncGroup
T@"NSObject<OS_dispatch_group>",&,N,V_syncGroup
completionDate
T@"NSDate",&,N,V_completionDate
syncStatus
T@"NSNumber",&,N,V_syncStatus
syncError
T@"NSError",&,N,V_syncError
com.apple.cloudkit.keySyncQueue
Failed to sync user keys
Underlying key sync error
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/ProtectedCloudStorage/CKDPCSKeySyncManager.m
Must provide a service name to syncUserKeys
No account DSID, so we can't sync with the user key registry
Recently synced keys for the %@ service %f seconds ago. Throttling...
Invalid state. Received a completed handler. Expected a fresh one.
keySyncTrackerByServiceName
T@"NSMutableDictionary",&,N,V_keySyncTrackerByServiceName
keySyncQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_keySyncQueue
Error fetching subscription %@
v32@?0@"CKSubscription"8@"NSString"16@"CKDPResponseOperationResult"24
isFetchAllSubscriptionsOperation
TB,N,V_isFetchAllSubscriptionsOperation
subscriptionFetchedProgressBlock
T@?,C,N,V_subscriptionFetchedProgressBlock
___zoneUpdateData
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/CKDModifyShareHandler.m
%s called on handler %@ but it isn't in the state %s
-[CKDModifyShareHandler sideEffectRecordIDs]
CKDModifyRecordHandlerStateNeedRecordSideEffects
-[CKDModifyShareHandler fetchSharePCSData]
CKDModifyRecordHandlerStateNeedSharePCSData
Public sharing identity on share %@ does not match the public sharing identity from its root record (%@).
v24@?0@"CKDRecordPCSData"8@"NSError"16
Can't save a share in the public database
Public sharing identity on share %@ is different. Expected %@, got %@
Couldn't create a public sharing identity for share %@
Can't save share %@ because we're missing PCS data. Public PCS: %@, Private PCS: %@
Didn't get PCS data for zone %@
Couldn't add invited PCS to zone PCS for zone-wide share %@
Couldn't update signing key on invited pcs for share %@
-[CKDModifyShareHandler prepareForSave]
CKDModifyRecordHandlerStateNeedRecordPrepareForUpload
Couldn't serialize private share PCS for share %@: %@
Couldn't create a PCS etag for share %@: %@
Couldn't serialize public share PCS for share %@: %@
Couldn't create a public PCS etag for share %@: %@
Couldn't serialize zone update PCS for share %@: %@
Couldn't serialize zoneish update PCS for share %@: %@
Error adding private sharing PCS to public sharing PCS for share %@: %@
Error adding public sharing PCS to private sharing PCS for share %@: %@
Error removing public sharing PCS from private sharing PCS for share %@: %@
Error cleaning up public PCS for share %@: %@
Couldn't get a current public CloudDocs identity for the owner on share %@
Couldn't create invited PCS for share %@
DONT-REMOVE-MY-KEY
Could not remove PPPCS public key from invited PCS for participant %@
No participant PCS or PPPCS public key exists for participant %@
Couldn't remove per-participant PCS from invited PCS for participant %@: %@
Couldn't create a public key for the owner participant on share %@
No private OON key exists for participant %@
No public sharing key exists for participant %@
Couldn't create an identity from the public sharing key for participant %@: %@ (key was %@)
OON 
Couldn't create a per-participant PCS for participant %@: %@
Cannot add participant %@ with missing public key to share
Couldn't create a manatee sharing invitation data for participant %@: %@
Couldn't add public identity to per-participant PCS for participant %@: %@
Couldn't add per-participant PCS to invited PCS for participant %@: %@
Couldn't serialize per-participant PCS for participant %@: %@
Couldn't create an identity from the public sharing key %@
Share handler called back with a CKRecord instead of a CKShare
haveAddedOwnerToShare
TB,N,V_haveAddedOwnerToShare
isALegacyPublicShareThatNeedsOwnerPPPCSUpgrade
TB,N,V_isALegacyPublicShareThatNeedsOwnerPPPCSUpgrade
T@"CKShare",R,N
T@"CKRecordID",R,N
/api/client/subscription/create
subscription
hasSubscription
T@"CKDPSubscription",&,N,V_subscription
%lu decode failures while reading from the archive at %@
source
TQ,N,V_source
archiveSource
T@"OSLogPersistence",&,N,V_archiveSource
streamSource
T@"OSActivityStream",&,N,V_streamSource
streamObservers
T@"NSMutableArray",&,N,V_streamObservers
wantsSimulatorLogs
TB,N,V_wantsSimulatorLogs
startTimeOffset
Td,N,V_startTimeOffset
absoluteStartDate
T@"NSDate",&,N,V_absoluteStartDate
T@"NSString",&,N,V_processName
_has
has%c%s
_%sCKLogValue
 Operation 
 (last)
 failure
    
      
        
          
            
              
                
comment
user
overloaded
notFound
containerUnavailable
mescalSignatureParseError
zoneBusy
zoneUnavailable
invited
accepted
administrator
publicUser
text
localizedKey
localizedArguments
actionLocKey
launchImage
soundName
category
title
titleLocalizedKey
titleLocalizedArguments
subtitle
subtitleLocalizedKey
subtitleLocalizedArguments
hasText
T@"NSString",&,N,V_text
hasLocalizedKey
T@"NSString",&,N,V_localizedKey
T@"NSMutableArray",&,N,V_localizedArguments
hasActionLocKey
T@"NSString",&,N,V_actionLocKey
hasLaunchImage
T@"NSString",&,N,V_launchImage
hasSoundName
T@"NSString",&,N,V_soundName
hasCategory
T@"NSString",&,N,V_category
hasTitle
T@"NSString",&,N,V_title
hasTitleLocalizedKey
T@"NSString",&,N,V_titleLocalizedKey
T@"NSMutableArray",&,N,V_titleLocalizedArguments
hasSubtitle
T@"NSString",&,N,V_subtitle
hasSubtitleLocalizedKey
T@"NSString",&,N,V_subtitleLocalizedKey
T@"NSMutableArray",&,N,V_subtitleLocalizedArguments
userRecord
T@"CKRecord",&,N,V_userRecord
hasRecordType
T@"CKDPRecordType",&,N,V_recordType
idAndEtag
fullRecord
recordDeleted
/api/client/record/archives
archiveContinuationToken
newestFirst
hasArchiveContinuationToken
T@"NSData",&,N,V_archiveContinuationToken
hasNewestFirst
TB,N,V_newestFirst
hasLimit
TI,N,V_limit
firstName
lastName
isInNetwork
T@"CKDPIdentifier",&,N,V_identifier
hasFirstName
T@"NSString",&,N,V_firstName
hasLastName
T@"NSString",&,N,V_lastName
hasIsInNetwork
TB,N,V_isInNetwork
field
assets
hasField
T@"CKDPRecordFieldIdentifier",&,N,V_field
T@"NSMutableArray",&,N,V_assets
contentBaseURL=%@
owner=%@
requestor=%@
complete
use-download-preauth
error=%@
tuple
T@"NSArray",&,N,V_tuple
contentBaseURL
requestor
T@"NSError",&,N,V_error
downloadPreauthorization
T@"CKAssetDownloadPreauthorization",R,N
TB,N,V_complete
T@"<MMCSOperationMetric>",&,N,V_metrics
authPutRequest
T@"NSData",&,N,V_authPutRequest
T@"NSArray",R,N,V_items
containerPrivacySettings
T@"NSMutableArray",&,N,V_containerPrivacySettings
recordForOplockFailure
hasRecordForOplockFailure
T@"CKDPRecord",&,N,V_recordForOplockFailure
chunk
fetch-chunks
preauth
inline-put-complete
chunk-padding
-[CKDMMCS drop]_block_invoke
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/Assets/CKDMMCS.m
self.checkoutCount > 0
x-apple-mmcs-proto-version
Programmer error starting MMCS request.
Expected non-nil path: %@
Expected non-nil application bundle ID
Expected non-nil path for %@
Expected non-nil asset db path for %@
Expected non-nil file download path for %@
+[CKDMMCS MMCSWrapperForApplicationBundleID:assetDirectoryContext:isUTAccount:error:]_block_invoke
(wasCached || assetCache) && "MMCS engine context was cached or we created an asset cache"
Expected non-nil MMCS engine context
-[CKDMMCS dealloc]
_didDrop && "failed to drop CKDMMCS dealloc"
-[CKDMMCS getMMCSEngine]
0 && "already dropped"
Expected MMCSEngineRef is only be accessed from the thread its runLoop belongs
-[CKDMMCS getMaxChunkCountForSection]
-[CKDMMCS _referenceIdentifierFromAssetKey:]
-[CKDMMCS _logMMCSOptions:]
<key hash: %@>
-[CKDMMCS _contextToRegisterItemGroup:operation:options:completionHandler:]
Fetching
Registering
-[CKDMMCS _contextToRegisterItemGroup:operation:options:completionHandler:]_block_invoke
MMCSItem.signature
v16@?0@"CKDMMCSItemGroupContext"8
-[CKDMMCS registerItemGroupSet:operation:options:completionHandler:]
-[CKDMMCS _contextToGetOrPutChunkKeysItemGroup:operation:options:completionHandler:]
GetChunkKeys
PutChunkKeys
Null item signature
No auth-token for item: %@
-[CKDMMCS getChunkKeysItemGroupSet:operation:options:completionHandler:]
-[CKDMMCS _contextToGetItemGroup:operation:options:progress:command:completionHandler:]
Zero item ID
Fetching asset batch failed
-[CKDMMCS getItemGroupSet:operation:shouldFetchAssetContentInMemory:options:progress:command:completionHandler:]
-[CKDMMCS _contextToPutItemGroup:operation:options:progress:completionHandler:]
Null signature
Null auth-token
Saving asset batch failed
-[CKDMMCS putItemGroupSet:operation:options:progress:completionHandler:]
-[CKDMMCS putChunkKeysItemGroupSet:operation:options:completionHandler:]
-[CKDMMCS CKStatusReportArray]
Empty MMCS Status
-[CKDMMCS _getRegisteredItemsGreaterThan:itemIds:itemCount:error:]
-[CKDMMCS registeredItemCount:error:]
-[CKDMMCS showRegisteredItems]
-[CKDMMCS _unregisterItemIDs:]
-[CKDMMCS unregisterItemIDs:]
-[CKDMMCS unregisterItemIDs:completionBlock:]
-[CKDMMCS performOnRunLoop:]
-[CKDMMCS _contextToPutSectionItem:operation:options:progress:completionHandler:]
nil section ID
-[CKDMMCS putSectionItem:operation:options:progress:completionHandler:]
-[CKDMMCS _contextToGetSectionItem:operation:options:progress:completionHandler:]
Fetching section failed
-[CKDMMCS getSectionItem:operation:options:progress:completionHandler:]
Expected non-nil MMCS item reader for %@
didDrop
TB,N,V_didDrop
checkoutCount
Tq,N,V_checkoutCount
MMCSEngineContext
T@"CKDMMCSEngineContext",&,N,V_MMCSEngineContext
T@"NSString",&,N,V_path
assetCache
T@"CKDAssetCache",&,N,V_assetCache
clientContext
T@"CKDClientContext",W,N,V_clientContext
maxChunkCountForSection
TI,R,N,GgetMaxChunkCountForSection
void CKDMMCSCheckRegisterCompleteCallback(void *, CFDictionaryRef)
Invalid response from MMCS
Item not found
itemID mismatch
Error when validating asset cache and mmcs chunk store.
fetch
register
Fetched
Registered
Failed to register all assets
void CKDMMCSFetchOrRegisterCompleteCallback(void *, CFDictionaryRef, BOOL)
Stale chunk state found during registration when none expected
Failed to check registered asset
Failed to register asset
CKDMMCSFetchOrRegisterCompleteCallback
MMCSItem.fileSize == 0 && "MMCSItem.size == 0"
MMCSItem.chunkCount != 0 && "Expected MMCSItem.chunkCount != 0"
Expected either an error or a authPutRequest on the completion of the GetChunkKeys
CKDMMCSUpdateCompleteCallback
[MMCSItem.signature isEqualToData:signature]
Failed to update asset
Expected either an error or a putReceipt on the completion of the PutChunkKeys
uint32_t CKDownsizeOrDie(NSUInteger)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/CloudKit-Prefix.pch
That number was ridiculous
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/Assets/CKDMMCSItem.m
Expected non-nil record for %@
itemID=%llu
putPackageSectionIdentifier=%@
trackingUUID=%@
size=%llu
paddedSize=%llu
offset=%llu
recordKey=%@
path="%@"
signature=%@
deviceID=%@
fileID=%@
generationID=%@
clientOpenedFH="%@"
authToken=%@
uploadReceipt=%@
uploadReceiptExpiration=%@
read-encrypted
read-from-client-proxy
has-download-preauth
nil UUID
Requested to read bytes using client proxy when shouldReadAssetContentUsingClientProxy is NO
fileURL
T@"NSURL",&,N,V_fileURL
T@"NSNumber",&,N,V_deviceID
fileID
T@"NSNumber",&,N,V_fileID
generationID
T@"NSNumber",&,N,V_generationID
clientOpenedFileHandle
T@"NSFileHandle",&,N,V_clientOpenedFileHandle
modTimeInSeconds
T@"NSNumber",&,N,V_modTimeInSeconds
itemID
TQ,N,V_itemID
progress
Td,N,V_progress
fileSize
TQ,N,V_fileSize
paddedFileSize
TQ,N,V_paddedFileSize
offset
TQ,N,V_offset
chunkCount
TI,N,V_chunkCount
packageIndex
TQ,N,V_packageIndex
putPackageSectionIdentifier
T@"NSString",&,N,V_putPackageSectionIdentifier
T@"CKAsset",&,N,V_asset
T@"CKPackage",&,N,V_package
T@"NSString",&,N,V_recordType
recordKey
T@"NSString",&,N,V_recordKey
itemTypeHint
T@"NSString",&,N,V_itemTypeHint
T@"NSURL",&,N,V_contentBaseURL
T@"NSString",&,N,V_requestor
authToken
T@"NSString",&,N,V_authToken
T@"CKAssetDownloadPreauthorization",&,N,V_downloadPreauthorization
uploadReceiptExpiration
Td,N,V_uploadReceiptExpiration
sectionItems
T@"NSMutableArray",&,N,V_sectionItems
assetKey
T@"NSData",&,N,V_assetKey
wrappedAssetKey
T@"NSData",&,N,V_wrappedAssetKey
clearAssetKey
T@"NSData",&,N,V_clearAssetKey
boundaryKey
T@"NSData",&,N,V_boundaryKey
writer
T@"CKDMMCSItemCommandWriter",&,N,V_writer
inMemoryDownloadLooksOkay
TB,N,V_inMemoryDownloadLooksOkay
uploadTokenExpiration
TQ,N,V_uploadTokenExpiration
downloadTokenExpiration
TQ,N,V_downloadTokenExpiration
assetChunkerOptions
T@"NSDictionary",&,N,V_assetChunkerOptions
constructedAssetDownloadURL
T@"NSURL",&,N,V_constructedAssetDownloadURL
constructedAssetEstimatedSize
TQ,N,V_constructedAssetEstimatedSize
trackingUUID
T@"NSString",&,N,V_trackingUUID
TB,N,V_hasSize
hasOffset
TB,N,V_hasOffset
TB,N,V_finished
TB,N,GisTemporary,V_temporary
shouldReadRawEncryptedData
TB,N,V_shouldReadRawEncryptedData
shouldReadAssetContentUsingClientProxy
TB,N,V_shouldReadAssetContentUsingClientProxy
isAlreadyRegistered
TB,N,V_isAlreadyRegistered
isReaderReadFrom
TB,N,V_isReaderReadFrom
isRereferencedAssetUpload
TB,N,V_isRereferencedAssetUpload
Need Record Side Effects
Need Record PCS Data
Need Share PCS Data
Need Asset Record Fetch
Need Asset Upload
Need Prepare For Upload
Need Record Upload
Record Upload Complete
Needs Refetch
Needs Share Participant Fetch
Atomic Failure
Permanent Failure
Retryable Failure
Completed
ShareID
Share
RecordID
<%@ %p> (%@: %@ %@%@)
 (isDelete)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/CKDModifyRecordHandler.m
-[CKDModifyRecordHandler sideEffectRecordIDs]
-[CKDModifyRecordHandler fetchRecordPCSData]
CKDModifyRecordHandlerStateNeedRecordPCSData
Lost a record: %@
Couldn't create public sharing identity for record %@
Need a PCS Manager (%@, %@, %@)
Record %@ isn't in the private database, doesn't have a share or parent set and isn't a share
record does not exist
no PCS data and no error
Parent record %@ in the same batch didn't have chain PCS data on it for record %@
Couldn't get PCS data for share %@ to add to record %@
Record %@ refers to share %@ but that item is a record, not a share
Didn't get PCS data for share %@
Share record %@ referenced by record %@ does not exist on the server
Didn't get PCS data for share %@ to add to record %@
Got the same parent and previous parent on record %@
Couldn't remove previous parent PCS data for previous parent %@
Couldn't fetch parent PCS data for parent record %@
Parent record %@ does not exist on the server
Couldn't decrypt the chain PCS blob on parent record %@
Couldn't add parent PCS data from record %@ to record %@
zoneish 
 and share 
Couldn't fetch a zoneish PCS from zone %@ for record %@
Can't create a record PCS for %@ because there is no %@%@%@
zone PCS data 
 and no 
share PCS
We couldn't decrypt the zone PCS and this isn't a share, so we can't create a new record PCS for %@
Couldn't create a new record PCS for %@
Couldn't fetch PCS for zone %@
_NEW_PROTECTION_DATA_PLOX
Couldn't fetch PCS for share %@
Couldn't fetch PCS for parent %@
UNIT_TESTING_FAIL_PCS_ETAG_CHECK
Attempted PCS data (%@) had a different identifier than the server PCS data (%@) for record %@
Couldn't create a parent PCS for record %@
Couldn't create a public sharing key for record %@
-[CKDModifyRecordHandler fetchSharePCSData]
first element of asset array is not a CKAsset
-[CKDModifyRecordHandler prepareAssetsForUploadWithError:]
CKDModifyRecordHandlerStateNeedAssetUpload
Expected non-nil record for handler %@
Error preparing asset for upload for key "%@" on record %@: %@
Invalid list of heterogenous values for field name %@ in recordID %@
up|%@
Expected non-nil recordKey for %@
Packages not supported with clear asset encryption.
-[CKDModifyRecordHandler prepareForSave]
Couldn't encrypt data on record %@
EEEEEEEEEENCRYPTION_BREAKER
T@"CKRecord",&,N,V_record
isDelete
TB,N,V_isDelete
pcsGroup
T@"NSObject<OS_dispatch_group>",&,N,V_pcsGroup
T@"CKDPCSCache",R,N
didRollRecordPCSMasterKey
TB,N,V_didRollRecordPCSMasterKey
T@"CKDModifyRecordsOperation",W,N,V_operation
recordPCSData
T@"CKDRecordPCSData",&,N,V_recordPCSData
sharePCSData
T@"CKDSharePCSData",&,N,V_sharePCSData
serverRecord
T@"CKRecord",&,N,V_serverRecord
TQ,N,V_state
rereferencedAssetArrayByFieldname
T@"NSMutableDictionary",&,N,V_rereferencedAssetArrayByFieldname
batchRank
Tq,N,V_batchRank
saveAttempts
Ti,N,V_saveAttempts
saveCompletionBlockCalled
TB,N,V_saveCompletionBlockCalled
isShare
needsRefetch
TB,N,V_needsRefetch
sharedZonePCSData
T@"CKDZonePCSData",&,N,V_sharedZonePCSData
T@"NSDictionary",C,N,V_assetUUIDToExpectedProperties
radius
hasRadius
Td,N,V_radius
/api/client/subscription/retrieve
/api/client/datarepair/updateMissingAssetStatus
idx (%tu) is out of range (%tu)
missingAssetStatusRecordID
recovered
assetSize
assetPutReceipt
packageAssetSize
packagePutReceipts
hasMissingAssetStatusRecordID
T@"CKDPRecordIdentifier",&,N,V_missingAssetStatusRecordID
hasRecovered
TB,N,V_recovered
hasAssetSize
Tq,N,V_assetSize
hasAssetPutReceipt
T@"NSString",&,N,V_assetPutReceipt
packageAssetSizesCount
packageAssetSizes
T^q,R,N
T@"NSMutableArray",&,N,V_packagePutReceipts
timestamp
T@"NSDate",&,N,V_timestamp
T@"NSURL",&,N,V_url
method
T@"NSString",&,N,V_method
status
Tq,N,V_status
requestClassName
T@"NSString",&,N,V_requestClassName
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/CKDAccountNotifier.m
Observer cannot be nil
accountChangedToken
Ti,N,V_accountChangedToken
notificationHandlers
T@"NSMapTable",&,N,V_notificationHandlers
accountChangeHandlerQueue
T@"NSOperationQueue",&,N,V_accountChangeHandlerQueue
previousServerChangeToken
T@"CKServerChangeToken",&,N,V_previousServerChangeToken
TQ,N,V_resultsLimit
resultServerChangeToken
T@"CKServerChangeToken",&,N,V_resultServerChangeToken
moreComing
TB,N,V_moreComing
notificationChangedBlock
T@?,C,N,V_notificationChangedBlock
public key
public key signature
version signature
expiration
expiration signature
certs
Invalid server public key payload
Failed to verify public key data.
plistURL
T@"NSURL",R,N,V_plistURL
certificateTrustPolicy
T^{__SecPolicy=},R,N,V_certificateTrustPolicy
verifiedPublicKey
T@"CKPublicKey",&,V_verifiedPublicKey
com.apple.cloudkit.tokenregistration
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/CKDTokenRegistrationScheduler.m
token must not be nil
com.apple.cloudkit.CloudKitUnitTestsHost
schedulerIsAvailable
TB,N,V_schedulerIsAvailable
callbackBlocks
T@"NSMutableDictionary",&,N,V_callbackBlocks
callbackTimers
T@"NSMutableDictionary",&,N,V_callbackTimers
unitTestingAccountInfoProvider
T@"<CKDAccountInfoProvider>",&,N,V_unitTestingAccountInfoProvider
unitTestingPushTokens
T@"NSMutableDictionary",&,N,V_unitTestingPushTokens
Error fetching whitelisted bundle ids from server: %@
v24@?0@"NSArray"8@"CKDPResponseOperationResult"16
T@"NSArray",C,N,V_bundleIDs
TokenRegistrationRequest
com.apple.cloudkit.operationFinished
com.apple.cloudkit.dugongKeyRollOperationFinished
operationClass
errorCode
errorChain
errorName
CKDuration
CKQueueing
CKExecuting
CKBytesUploaded
CKBytesDownloaded
CKConnections
CKConnectionsCreated
MMCSDuration
MMCSQueueing
MMCSExecuting
MMCSBytesUploaded
MMCSBytesDownloaded
MMCSConnections
MMCSConnectionsCreated
recordIDCount
desiredKeysCount
recordZoneIDsCount
fetchAllChanges
recordToSaveCount
recordIDsToDeleteCount
savePolicy
zoneName
created
expires
hasCreated
TQ,N,V_created
hasExpires
TQ,N,V_expires
---- Recent Client %@ last seen: %@ (%lu connections) containers: (%@)
%%%% Operation Statistics %%%%
T@"NSString",R,N,V_processName
containerIdentifiers
T@"NSMutableSet",R,N,V_containerIdentifiers
lastSeen
T@"NSDate",R,N,V_lastSeen
connectionCount
TQ,R,V_connectionCount
T@"NSMutableDictionary",R,N,V_operationStatisticsByClassName
-[CKDPResponseOperationHeaderAssetAuthorizationResponseHeaderInfo writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Protocol/Source/CKDPResponseOperationHeaderAssetAuthorizationResponseHeaderInfo.m
wrappedInvocationKey
hasWrappedInvocationKey
T@"NSData",&,N,V_wrappedInvocationKey
T@"NSArray",&,N,V_containerPrivacySettings
lastItem
hasLastItem
TB,N,V_lastItem
/api/client/privacy/update
repairRecordID
T@"CKRecordID",&,N,V_repairRecordID
isPackage
TB,N,V_isPackage
assetSizes
T@"NSArray",&,N,V_assetSizes
assetPutReceipts
T@"NSArray",&,N,V_assetPutReceipts
Call UpdateMissingAssetStatus
fetchOperation
T@"CKDFetchRecordsOperation",&,N,V_fetchOperation
modifyOperation
T@"CKDModifyRecordsOperation",&,N,V_modifyOperation
protectedFullToken
ownerParticipant
callerParticipant
participantPermission
participantState
participantType
rootRecordType
hasProtectedFullToken
T@"NSData",&,N,V_protectedFullToken
hasOwnerParticipant
T@"CKDPParticipant",&,N,V_ownerParticipant
hasCallerParticipant
T@"CKDPParticipant",&,N,V_callerParticipant
hasParticipantPermission
Ti,N,V_participantPermission
hasParticipantState
Ti,N,V_participantState
hasParticipantType
Ti,N,V_participantType
hasRootRecordType
T@"CKDPRecordType",&,N,V_rootRecordType
attestations
T@"NSMutableArray",&,N,V_attestations
operationId
operationGroupId
hasOperationId
T@"NSString",&,N,V_operationId
hasOperationGroupId
T@"NSString",&,N,V_operationGroupId
Tq,N,V_operationGroupQuantity
v16@?0@"NSDictionary"8
No cached metadata found for outstanding operation %@
v16@?0@"CKDClientContext"8
v16@?0@"CKDClientProxy"8
T@"CKDClientProxy",&,N,V_proxy
transcodeServerPublicKey
transcodeServerHostname
T@"NSString",&,N,V_transcodeServerHostname
Operation %@ was not provided a transcode server hostname
Server configuration did not contain assetKeyEncryption URL info
Could not find assetKeyEncryption URL for template URL %@
Couldn't create URL from transcode server URL string: %@
Determining public key URL
Fetching cached public key data
Fetching remote public key data
TranscodeServerKeyCertificate
1.2.840.113635.100.6.2.17
1.2.840.113635.100.6.68
T@"NSString",R,N,V_transcodeServerHostname
transcodeServerPublicKeyURL
T@"NSURL",&,N,V_transcodeServerPublicKeyURL
T@"CKPublicKey",&,V_transcodeServerPublicKey
AssetHandleExpiration
Assets.db
create table if not exists AssetHandle (
    itemID        integer primary key,
    UUID          blob not null,
    lastUsedTime  integer not null,
    volumeIndex      integer,
    fileID        integer,
    generationID  integer,
    path          text,
    fileSignature blob,
    status        integer,
    modTime       integer,
    fileSize      integer,
    chunkCount    integer
create index if not exists AssetHandleUUIDIndex on AssetHandle (UUID);
create index if not exists AssetHandleSignatureIndex on AssetHandle (fileSignature);
create index if not exists AssetHandleLastUsedTimeIndex on AssetHandle (lastUsedTime);
create index if not exists AssetHandleStatusIndex on AssetHandle (status);
create index if not exists AssetHandleFileIDIndex on AssetHandle (fileID);
create table if not exists AssetVolume (
    volumeIndex     integer primary key,
    volumeUUID      blob
create index if not exists AssetVolumeVolumeUUIDIndex on AssetVolume (volumeUUID);
forced
TB,V_forced
evictNow
TB,V_evictNow
clearRegisteredItems
TB,V_clearRegisteredItems
T@"CKDClientContext",&,N,V_clientContext
itemIDsToUnregister
T@"NSMutableOrderedSet",&,N,V_itemIDsToUnregister
assetHandleItemIDsToDelete
T@"NSMutableOrderedSet",&,N,V_assetHandleItemIDsToDelete
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/Assets/CKDAssetCache.m
Expected non-nil asset db directory for %@
Expected non-nil asset download directory for %@
open failed at %@: %d (%s)
fcntl(F_GETPATH) failed at %@: %d (%s)
fstatfs failed at %@: %d (%s)
getattrlist on %s failed: %d (%s)
paths don't match: %@ != %@
%@.%p
-[CKDAssetCache drop]_block_invoke
-[CKDAssetCache dealloc]
0 && "failed to drop"
Expected non-0 lastInsertRowID
B24@?0@8^@16
Unable to delete object %@
-[CKDAssetCache _deleteAssetHandlesAndUnregisterItemsForUnmountedAssetVolumesWithDB:]
volumeIndex > ?
volumeIndex
volumeIndex = ? AND itemID > ?
-[CKDAssetCache _clearForced:group:]
-[CKDAssetCache clearForced:]
-[CKDAssetCache clearAssetCache]
-[CKDAssetCache checkAssetHandlesForRegisteredMMCSItems:]
itemID = ?
registeredNotCached
cachedAndRegistered
(multiple asset handles)
-[CKDAssetCache countAssetCacheItems]
-[CKDAssetCache showAssetCache]
%0.2f
%@, %@, %@, %@, %@, %@
not found
modified
expected but missing
none expected
-[CKDAssetCache unregisterItemIDs:completionBlock:]
MMCS && "nil MMCS object"
-[CKDAssetCache scheduleUnregisterItemsAndDeleteUnregisteredAssetHandlesWithIDs:deleteUnregisteredAssetHandlesWithIDs:completionBlock:]
itemID=? AND status=%ld
itemID=?
-[CKDAssetCache scheduleUnregisterItemsAndDeleteUnregisteredAssetHandlesWithIDs:]
-[CKDAssetCache scheduleUnregisterItemIDsAndDeleteAssetHandlesWithEvictionInfo:completionBlock:]
Expected non-nil data
Invalid path
-[CKDAssetCache _getAssetHandlesForDownloadedMMCSItems:error:]
Expected non-nil MMCS items array
Expected non-nil signature for %@
Invalid signature for zero size file
fileMetadata.fileSize.unsignedLongLongValue == 0 && "Expected fileMetadata.fileSize.unsignedLongLongValue == 0"
Expected non-nil error
-[CKDAssetCache _getAssetHandlesForCachedButNotRegisteredMMCSItems:error:]
-[CKDAssetCache updateAssetHandlesForRegisteredMMCSItems:error:]
-[CKDAssetCache updateAssetHandlesForRegisteredMMCSItems:error:]_block_invoke_2
MMCSItem.itemID != 0 && "MMCSItem.itemID != 0"
[itemID isEqual:previousAssetHandle.itemID] && "[itemID isEqual:previousAssetHandle.itemID]"
File appears to have changed during registration
Stale chunk state found during registration
-[CKDAssetCache updateAssetHandlesForChunkedMMCSItems:error:]
itemID = %lld
-[CKDAssetCache updateAssetHandlesForGetMMCSItems:error:]
-[CKDAssetCache updateAssetHandlesForGetMMCSItems:error:]_block_invoke_2
MMCSItem.itemID != 0 && "0 itemID"
MMCSItem.fileURL && "nil MMCSItem.fileURL"
-[CKDAssetCache updateAssetHandlesForPutMMCSItems:error:]
-[CKDAssetCache updateAssetHandlesForPutMMCSItems:error:]_block_invoke_2
-[CKDAssetCache trackDownloadedMMCSItems:error:]
Expected non-nil downloaded MMCS items
Expected non-nil file download path
downloadPathFd:%d
handles and items count don't match
open failed: %d (%s)
%@.%@
renameat failed: %d (%s)
-[CKDAssetCache trackCachedButNotRegisteredMMCSItems:error:]
Expected non-nil cached but not registered MMCS items
-[CKDAssetCache trackDownloadedData:signature:error:]
-[CKDAssetCache startTrackingRegisterOrPutAssetHandles:operationType:error:]
Expected nil itemID
fileID=?
-[CKDAssetCache startTrackingGetAssetHandles:operationType:error:]
nil assetHandle.fileSignature
fileSignature=? AND status=?
-[CKDAssetCache startTrackingGetAssetHandles:operationType:error:]_block_invoke
reusedHandle.fileSignature && assetHandle.fileSignature && [reusedHandle.fileSignature isEqualToData:assetHandle.fileSignature]
reusedHandle.status.integerValue == CKDAssetHandleStatusDownloadInterrupted
-[CKDAssetCache deferredStopTrackingAssetHandlesByItemIDs:]
-[CKDAssetCache unregisterDeferredItemIDs:andDeleteAssetHandles:usingDB:]
-[CKDAssetCache updateDeferredLastAccessTimeForUUIDsUsingDB:]
lastUsedTime = ?
UUID = ?
-[CKDAssetCache stopTrackingAssetHandlesByItemIDs:]
-[CKDAssetCache findAssetHandleForItemID:error:]
itemID = ? and UUID is not null
couldn't find item ID %llu
-[CKDAssetCache deferredUpdateLastTimeUsedForUUID:]
-[CKDAssetCache assetHandleWithCachedPath:]
should have thrown by now
-[CKDAssetCache _scheduleEvictionForDownloadedFiles]
-[CKDAssetCache _evictDownloadedFilesEvictionInfo:]
-[CKDAssetCache _evictDownloadedFilesWithDatabase:evictionInfo:]
Skipped evicting
Would skip evicting
Evicting
Would evict
lastUsedTime ASC
Removing
Would remove
Evicted
Would have evicted
status=?
-[CKDAssetCache _evictWithEvictionInfo:]
-[CKDAssetCache evictAllFilesForced:]
-[CKDAssetCache predictedEvictedSizeForAllFilesForced:]
-[CKDAssetCache _expireAssetHandlesWithExpiryDate:group:]
(status=%ld OR status=%ld OR status=%ld) AND lastUsedTime < ?
Attempting to evict asset handle in wrong state %@
Unable to unregister %@
Unable to delete %@
-[CKDAssetCache _expireAssetHandlesWithGroup:]
com.apple.cloudkit.assetHandleExpiration
-[CKDAssetCache _scheduleExpirationForAssetHandles]
-[CKDAssetCache expireAssetHandlesIfNecessaryWithGroup:]
-[CKDAssetCache _resetAssetInflightUsingDB:]
AssetHandle
status = %ld OR status = %ld
status = %ld
-[CKDAssetCache setupPersistentStateAtStartup]
dbPath
T@"NSString",&,N,V_dbPath
fileStagingPath
T@"NSString",&,N,V_fileStagingPath
fileDownloadPath
T@"NSString",&,N,V_fileDownloadPath
opQueue
T@"NSOperationQueue",&,N,V_opQueue
fileDownloadPathFd
Ti,N,V_fileDownloadPathFd
isEvictionScheduled
TB,V_isEvictionScheduled
hasMigrated
TB,N,V_hasMigrated
assetHandleExpirationNotificationObserver
T@"<NSObject>",&,N,V_assetHandleExpirationNotificationObserver
volumeUUIDByVolumeIndex
T@"NSMutableDictionary",&,N,V_volumeUUIDByVolumeIndex
volumeIndexByVolumeUUID
T@"NSMutableDictionary",&,N,V_volumeIndexByVolumeUUID
deferredDeletedAssetHandles
T@"NSMutableSet",&,N,V_deferredDeletedAssetHandles
deferredLastUsedTimeByTrackingUUID
T@"NSMutableDictionary",&,N,V_deferredLastUsedTimeByTrackingUUID
T@"CKDMMCS",W,N,V_MMCS
T@"CKSQLitePool",R,N,V_dbPool
, %@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/Operations/CKDRecordFetchAggregator.m
Fetch info isn't in the needs callback state: %@
Calling back for record %@ without a fetched record or an error: %@
fetchOrder=%lu
state=%@
hasRecord=%@
etag=%@
fetchOrder
TQ,N,V_fetchOrder
Td,R,N,V_startDate
recordReadySource
T@"NSObject<OS_dispatch_source>",&,N,V_recordReadySource
ignoreErrors
TB,N,V_ignoreErrors
fetchAssetContents
TB,N,V_fetchAssetContents
preserveOrdering
TB,N,V_preserveOrdering
assetTransferOptionsByRecordTypeAndKey
T@"NSDictionary",&,N,V_assetTransferOptionsByRecordTypeAndKey
forceDecryptionAttempt
TB,N,V_forceDecryptionAttempt
com.apple.cloudkit.fetchAggregator.fetchQueue
notStarted=%lu
waitingForFetch=%lu
fetchingFromServer=%lu
needsCallback=%lu
finished=%lu
fetchInfos (%@) = %@
Can't send a fetch request when another one is still outstanding
Trying to invoke the record fetch completion block on completed operation %@ with record %@ and record ID %@%@%@
Didn't get any fetch infos for record with ID %@
We didn't get a callback for record %@
A fetch info with order %lu already exists. %@
Can't enqueue a new fetch after we've already finished
Can't fetch a record without a record ID
Failed to initialize fetchInfo
You can't finish a CKDRecordFetchAggregator twice
fetchSource
T@"NSObject<OS_dispatch_source>",&,N,V_fetchSource
fetchGroup
T@"NSObject<OS_dispatch_group>",&,N,V_fetchGroup
fetchInfosByOrder
T@"NSMutableDictionary",&,N,V_fetchInfosByOrder
curFetchOrder
TQ,V_curFetchOrder
highestReturnedOrder
TQ,V_highestReturnedOrder
currentFetchOp
T@"CKDFetchRecordsOperation",W,N,V_currentFetchOp
recordCache
T@"CKDRecordCache",R,N
started
TB,V_started
markedToFinishByParent
TB,GisMarkedToFinishByParent,V_markedToFinishByParent
useRecordCache
TB,N,V_useRecordCache
fetchAggregatorCompletionBlock
T@?,C,N,V_fetchAggregatorCompletionBlock
Waiting For Fetch
Needs Callback
com.apple.cloudkit.recordfetchaggregator
quotaFetchedBlock
T@?,C,N,V_quotaFetchedBlock
Error fetching web auth token from server: %@
webAuthToken
T@"NSString",C,N,V_webAuthToken
APIToken
T@"NSString",C,N,V_APIToken
clientError
serverError
extensionError
auxiliaryError
retryAfterSeconds
errorDescription
errorInternal
hasClientError
T@"CKDPResponseOperationResultErrorClient",&,N,V_clientError
hasServerError
T@"CKDPResponseOperationResultErrorServer",&,N,V_serverError
hasExtensionError
T@"CKDPResponseOperationResultErrorExtension",&,N,V_extensionError
hasAuxiliaryError
T@"CKDPResponseOperationResultErrorAuxiliaryError",&,N,V_auxiliaryError
hasRetryAfterSeconds
Ti,N,V_retryAfterSeconds
hasErrorDescription
T@"NSString",&,N,V_errorDescription
hasErrorKey
T@"NSString",&,N,V_errorKey
hasErrorInternal
T@"NSString",&,N,V_errorInternal
BuildVersion
%@/%@
com.apple.CloudKit
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/Assets/CKDMMCSEngineContext.m
Expected non-nil path
Expected non-nil applicationBundleID
CKDMMCSRunLoop%p
Expected refCount=0 (%ld)
state=%ld, refCount=%ld
applicationBundleID=%@
cloudd.mmcs
Expected state %ld for MMCS engine context
Expected nil MMCS engine for MMCS engine context %@
Error creating MMCS directory at %@
com.apple.Dataclass.CloudKit
MMCSEngineCreate failed
Expected non-nil runLoop for %@
Expected non-nil MMCS engine
Expected non-nil runLoop
Expected non-nil runLoopMode
this would block
-[CKDMMCSEngineContext nextAvailableItemID]
0 && "itemID overflow"
refCount
Tq,N,V_refCount
Tq,N,V_state
stopMMCSThread
TB,N,V_stopMMCSThread
MMCSEngine
T^{_mmcs_engine=},N,V_MMCSEngine
semaphore
T@"NSObject<OS_dispatch_semaphore>",&,N,V_semaphore
runLoop
T@"NSRunLoop",&,N,V_runLoop
runLoopMode
T@"NSString",&,N,V_runLoopMode
TI,N,V_maxChunkCountForSection
inMemoryItemsIDs
T@"NSMutableIndexSet",&,N,V_inMemoryItemsIDs
metricObject
threw %@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/Assets/CKDMMCSItemGroupContext.m
Expected non-nil itemID for %@
Expected non-nil MMCS engine wrapper for %@
Expected non-nil asset cache for %@
-[CKDMMCSItemGroupContext _setupRegisterMMCSItemsWithError:]
isRegister && "isRegister"
assetHandle.fileSize.unsignedLongLongValue == 0 && "assetHandle.fileSize.unsignedLongLongValue == 0"
-[CKDMMCSItemGroupContext _setupPutMMCSItemsWithError:]
!isGet && "isGet"
-[CKDMMCSItemGroupContext updateProgressForPackageSectionState:progress:results:]
item && "nil self.MMCSPackageSectionItem"
Fetching asset failed
-[CKDMMCSItemGroupContext didGetItemID:signature:path:error:results:]
item.trackingUUID && "item.trackingUUID"
item.signature && "item.signature"
Moving downloaded asset failed
File size mismatch for item %@ : %@ != %@
File size mismatch for item %@ : %@ > %@
Getting file metadata for downloaded asset failed
Saving asset failed
Expected either an error or a putReceipt on the completion of the upload
-[CKDMMCSItemGroupContext didPutSectionWithSignature:results:]
Expected non-nil MMCS for %@
delegate said no
not an itemTypeHint
not an itemDescription
nil reader
Unable to open file for MMCSItem:%@ itemID:%llu on unmounted volume with volumeIndex=%@
Invalid arguments, MMCSItem:%@, itemID:%llu, UUID:%@
Operation not supported
hasConformingOperation
T@"NSNumber",&,N,V_hasConformingOperation
T@"CKDMMCS",&,N,V_MMCS
itemGroup
T@"CKDMMCSItemGroup",&,N,V_itemGroup
progressBlock
T@?,C,N,V_progressBlock
commandBlock
T@?,C,N,V_commandBlock
startBlock
T@?,C,N,V_startBlock
MMCSPackageSectionItem
T@"CKDMMCSItem",&,N,V_MMCSPackageSectionItem
MMCSItemsByItemID
T@"NSMapTable",&,N,V_MMCSItemsByItemID
T@,&,N,V_operationInfo
CKDMMCSItemReaderOpen
assetCache && "Expected non-nil asset cache"
index
is_reversed
hasIndex
Ti,N,V_index
hasIsReversed
isReversed
TB,N,V_isReversed
/api/client/container/delete
shareIdentifier
changeType
hasShareIdentifier
T@"CKDPShareIdentifier",&,N,V_shareIdentifier
hasChangeType
Ti,N,V_changeType
publicAccess
invitedPcs
participant
shortTokenRoutingKey
potentialMatch
invitedKeyToRemove
publisherModel
anonymousPublicAccess
publisherModelType
origin
hasPublicAccess
Ti,N,V_publicAccess
hasInvitedPcs
T@"CKDPProtectionInfo",&,N,V_invitedPcs
participants
T@"NSMutableArray",&,N,V_participants
hasShortTokenRoutingKey
T@"NSString",&,N,V_shortTokenRoutingKey
potentialMatchs
T@"NSMutableArray",&,N,V_potentialMatchs
invitedKeyToRemoves
T@"NSMutableArray",&,N,V_invitedKeyToRemoves
hasPublisherModel
TB,N,V_publisherModel
hasAnonymousPublicAccess
TB,N,V_anonymousPublicAccess
hasDisplayedHostname
T@"NSString",&,N,V_displayedHostname
hasPublisherModelType
Ti,N,V_publisherModelType
hasOrigin
T@"NSString",&,N,V_origin
participantsSeeAccepted
readOnlyCannotSeeReadOnly
selfAndOwner
anonymousPublic
containerID=%@, applicationBundleIDs=%@, discoverable=%ld
T@"CKContainerID",C,N,V_containerID
applicationBundleIDs
T@"NSSet",C,N,V_applicationBundleIDs
discoverable
Tq,N,V_discoverable
T@"NSArray",C,N,V_containerPrivacySettings
localizedError
FakeAccount-%@
com.apple.fakeAccountInfoQueue-%@
v32@?0@"NSString"8@"NSString"16@"NSDictionary"24
Email:%@---Password:%@
This method should not be called on a fake account
regionInfo
tokens
cloudKitToken
mmeAuthToken
Fake account was asked to refresh account properties. This is unsupported
T@"NSString",&,N,V_primaryEmail
password
T@"NSString",&,N,V_password
T@"NSString",&,N,V_dsid
altDsid
T@"NSString",&,N,V_altDsid
accountBag
T@"NSDictionary",&,N,V_accountBag
propertyOverrides
T@"NSDictionary",&,N,V_propertyOverrides
fakeAccountInfoQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_fakeAccountInfoQueue
overridesByDataclass
T@"NSDictionary",&,N,V_overridesByDataclass
deleteType
hasDeleteType
Ti,N,V_deleteType
updated
deleted
userPurged
hasLanguageCode
T@"NSString",&,N,V_languageCode
hasRegionCode
T@"NSString",&,N,V_regionCode
Preflighting request records
Waiting for client to serialize request
Retrieving CKCode Function invocation results
Waiting for client to deserialize response
Postflighting response records
Invalid record archive: %@
permittedRemoteMeasurement was not specified for request: %@.%@
Did not receive attestation from server
Could not verify attestation using the permittedRemoteMeasurement provided
Error %@ when invoking function %@ on service %@: %@
v24@?0@"NSData"8@"CKDPResponseOperationResult"16
ServerMessage
Error when locally invoking function %@ on service %@
v24@?0@"NSData"8@"CKCDPError"16
Invalid pRecord: %@
Process not entitled to set explicit code operation url
T@"NSString",R,C,N,V_serviceName
T@"NSString",R,C,N,V_functionName
pccKey
T@"PCCKey",&,N,V_pccKey
pccWrappedKeys
T@"NSArray",&,N,V_pccWrappedKeys
requestLocalSerializations
T@"NSArray",C,N,V_requestLocalSerializations
requestLocalEnvelopes
T@"NSArray",C,N,V_requestLocalEnvelopes
permittedRemoteMeasurement
T@"NSData",C,N,V_permittedRemoteMeasurement
local
TB,N,V_local
requestRecords
T@"NSArray",C,N,V_requestRecords
requestEnvelopes
T@"NSArray",C,N,V_requestEnvelopes
serializedArguments
T@"NSData",C,N,V_serializedArguments
serializedResponse
T@"NSData",C,N,V_serializedResponse
responseRecords
T@"NSArray",C,N,V_responseRecords
replaceLocalSerializationsBlobs
T@?,C,N,V_replaceLocalSerializationsBlobs
initialResponseReceivedCallback
T@?,C,N,V_initialResponseReceivedCallback
replaceWireSerializations
T@?,C,N,V_replaceWireSerializations
recordFetchCompletionBlock
T@?,C,N,V_recordFetchCompletionBlock
recordFetchProgressBlock
T@?,C,N,V_recordFetchProgressBlock
recordFetchCommandBlock
T@?,C,N,V_recordFetchCommandBlock
evaluationType
mutationTriggers
notification
recordTypes
fireOnce
hasEvaluationType
Ti,N,V_evaluationType
Ti,N,V_owner
mutationTriggersCount
T^i,R,N
hasNotification
T@"CKDPSubscriptionNotification",&,N,V_notification
T@"NSMutableArray",&,N,V_recordTypes
hasFireOnce
TB,N,V_fireOnce
trigger
sync
metasync
insert
update
remove
itemGroups=%@
itemsByGroupTuple
T@"NSMutableDictionary",&,N,V_itemsByGroupTuple
T@"NSError",R,N
CKDFileWatcher
+[CKDFileWatcher queue]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Utility/CKDFileWatcher.m
CKDFileWatcher required path to watch.
CKDFileWatcher failed to initialize.
CKDFileWatcher failed to retrieve file system representation for path %@.
CKDFileWatcher - Unable to open file path %@ with error %s
CKDFileWatcher - Failed to create dispatch_source for file path %@ with fd %d
Failed to create event dispatch_block for file path %@
Failed to create cancel dispatch_block for file path %@
T@"NSObject<OS_dispatch_source>",&,N,V_source
Ti,N,V_fd
insert_into_list
delete_list_range
replace_list_range
hasInsertIntoList
insertIntoList
T@"CKDPFieldActionInsertIntoList",&,N,V_insertIntoList
hasDeleteListRange
deleteListRange
T@"CKDPFieldActionDeleteListRange",&,N,V_deleteListRange
hasReplaceListRange
replaceListRange
T@"CKDPFieldActionReplaceListRange",&,N,V_replaceListRange
zoneSummary
zoneSummarys
T@"NSMutableArray",&,N,V_zoneSummarys
budget=%ld, regeneration=%0.2f, maximumThrottle=%0.0f
%@ = %@
operationFlowControls
T@"NSMutableDictionary",&,N,V_operationFlowControls
defaultBudget
defaultRegeneration
Td,N
maximumThrottleTime
Td,V_maximumThrottleTime
changedRecord
syncContinuationToken
changedShare
pendingArchivedRecords
changedRecords
T@"NSMutableArray",&,N,V_changedRecords
hasSyncContinuationToken
T@"NSData",&,N,V_syncContinuationToken
hasStatus
Ti,N,V_status
changedShares
T@"NSMutableArray",&,N,V_changedShares
hasPendingArchivedRecords
TB,N,V_pendingArchivedRecords
inconsistent
consistent
noPendingChanges
File not readable
Failed reading package object from manifest
Failed reading section object from manifest
Failed reading item object from manifest
Package manifest is corrupt - section index %ld is out of bounds
Package manifest is corrupt - item boundary is not aligned with section boundary
Package manifest is corrupt - section %lu contains %llu bytes, expected %llu bytes
Package manifest is corrupt - Expected %lu sections, found %lu
File not writable
Failed writing package object to manifest
Failed writing section object to manifest
Failed writing item object to manifest
T@"CKCDPErrorUserInfoValue",&,N,V_value
You can't restart an executing or finished CKDPlaceholderOperation: %@
<%@ %p:%@>
realOperation
%s<%@(Placeholder) %@ 
(%@%@) 
 running for %@ (started %@) 
T@"CKDOperation",R,N,V_realOperation
targetOperationQueue
T@"NSOperationQueue",R,N,V_targetOperationQueue
T@"CKDClientProxy",R,W,N
T@"CKDClientContext",R,N
Fingerprint %@
Public ID %@
<PCSFPCopyDiagnostic returned NULL>
v32@?0@"CKRecordZone"8@"CKRecordZoneID"16@"CKDPResponseOperationResult"24
identityStatus
T@"NSString",&,N,V_identityStatus
invalidPCSByZoneID
T@"NSDictionary",&,N,V_invalidPCSByZoneID
validPCSByZoneID
T@"NSDictionary",&,N,V_validPCSByZoneID
pcsDiagnosticInfo
T@"CKPCSDiagnosticInformation",&,N,V_pcsDiagnosticInfo
com.apple.cloudkit.sim
default
LogFacilityCK
LogFacilityPCS
LogFacilitySQL
STAT
LogFacilitySTAT
LogFacilityRequest
LogFacilityOP
LogStats
LogFacilityLogStats
Scheduler
LogFacilityScheduler
NotificationListener
LogFacilityNotificationListener
Engine
LogFacilityEngine
DataRepair
LogFacilityDataRepair
DiscretionaryDaemon
LogFacilityDiscretionaryDaemon
network.performance
summary
LogFacilityMMCS
com.apple.c2
com.apple.mmcs
com.apple.chunkinglibrary
-[CKLEventFilter matchesEvent:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/cklog/CKLEventFilter.m
_categoriesBySubsystem && "_categoriesBySubsystem"
logTypes
TQ,N,V_logTypes
categoriesBySubsystem
T@"NSDictionary",&,N,V_categoriesBySubsystem
simulatorMessagesOnly
TB,N,V_simulatorMessagesOnly
cloudd
/api/client/asset/retrieve/token
uploads
authPutType
T@"NSMutableArray",&,N,V_uploads
hasAuthPutRequest
hasAuthPutType
Ti,N,V_authPutType
authorizePut
reReference
authorizeClone
UnitTest
Default
com.apple.setmme.dnschanged
com.apple.cloudkit.launchservices.hostnames.plist
host-names
Global Configuration Manager (%lu running ops)
Global configuration operation: %@
Container specific operations:
switchNotifSource
T@"NSObject<OS_dispatch_source>",&,N,V_switchNotifSource
configurationQueue
T@"NSOperationQueue",&,N,V_configurationQueue
globalConfiguration
T@"CKDServerConfiguration",&,N,V_globalConfiguration
globalConfigurationOps
T@"NSMutableSet",&,N,V_globalConfigurationOps
containerSpecificInfoQueue
T@"NSOperationQueue",&,N,V_containerSpecificInfoQueue
containerSpecificInfos
T@"NSMutableDictionary",&,N,V_containerSpecificInfos
containerSpecificInfoOperations
T@"NSMutableDictionary",&,N,V_containerSpecificInfoOperations
propertyQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_propertyQueue
iCloudEnvNotifToken
Ti,N,V_iCloudEnvNotifToken
shouldDropAllConfigurations
TB,N,V_shouldDropAllConfigurations
queryResults
T@"NSMutableArray",&,N,V_queryResults
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/CKDPowerAssertionObserver.m
You should call -[%@ sharedManager]
operationsHoldingPowerAssertionsByID
T@"NSMapTable",&,N,V_operationsHoldingPowerAssertionsByID
emailAddress
phoneNumber
hasEmailAddress
T@"NSString",&,N,V_emailAddress
hasPhoneNumber
T@"NSString",&,N,V_phoneNumber
/api/client/user/quota
/api/client/test/markAssetBroken
brokenAssetRecordID
listIndex
affectedRecordType
skipWriteMissingAssetStatusRecord
hasBrokenAssetRecordID
T@"CKDPRecordIdentifier",&,N,V_brokenAssetRecordID
hasListIndex
Ti,N,V_listIndex
fileSignatures
T@"NSMutableArray",&,N,V_fileSignatures
referenceSignatures
T@"NSMutableArray",&,N,V_referenceSignatures
hasIsPackage
hasAffectedRecordType
T@"NSString",&,N,V_affectedRecordType
hasSkipWriteMissingAssetStatusRecord
TB,N,V_skipWriteMissingAssetStatusRecord
Preparing Target Zone PCS
Saving Target Zone
Error fetching PCS data for zone %@
Couldn't get key IDs from zone PCS %@ for zone %@
Couldn't get PCS identity with key ID %@ from zone %@
Failed to add identity to the target zone PCS from zone %@
PCS_PREPARE_FAILURE
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/Operations/CKDAggregateZonePCSOperation.m
Only the target zone must be saved
sourceZoneIDs
T@"NSArray",&,N,V_sourceZoneIDs
T@"CKRecordZone",&,N,V_targetZone
zonePCSDataByZoneID
T@"NSMutableDictionary",&,N,V_zonePCSDataByZoneID
isHandlingPCSOplockFailure
TB,V_isHandlingPCSOplockFailure
Tq,N,V_numZoneSaveAttempts
recordID=%@, etag=%@, hasRecord=%@
infosToDiscover
T@"NSArray",&,N,V_infosToDiscover
submittedInfos
T@"NSMutableDictionary",&,N,V_submittedInfos
wantsProtectionInfo
TB,N,V_wantsProtectionInfo
expiresAfterSeconds
/configurations/internetservices/cloudkit/cloudkit-1.0.plist
configuration
T@"CKDServerConfiguration",&,N,V_configuration
tokenFetchedBlock
T@?,C,N,V_tokenFetchedBlock
downloadToken
downloadRequest
downloadBaseURL
downloadURLExpiration
assetAuthorizationResponseUUID
constructedAssetDownloadURLExpiration
constructedAssetDownloadEstimatedSize
hasDownloadToken
T@"NSString",&,N,V_downloadToken
hasDownloadRequest
T@"NSData",&,N,V_downloadRequest
hasContentBaseURL
T@"NSString",&,N,V_contentBaseURL
hasRequestor
hasDownloadBaseURL
T@"NSString",&,N,V_downloadBaseURL
hasDownloadURLExpiration
Tq,N,V_downloadURLExpiration
hasDownloadTokenExpiration
Tq,N,V_downloadTokenExpiration
hasClearAssetKey
hasAssetAuthorizationResponseUUID
T@"NSString",&,N,V_assetAuthorizationResponseUUID
hasConstructedAssetDownloadURL
T@"NSString",&,N,V_constructedAssetDownloadURL
hasConstructedAssetDownloadURLExpiration
Tq,N,V_constructedAssetDownloadURLExpiration
hasConstructedAssetDownloadEstimatedSize
Tq,N,V_constructedAssetDownloadEstimatedSize
userId
contactInformation
inviterId
createdInProcess
acceptTimestamp
outOfNetworkKeyType
acceptedTimestampDate
isOrgUser
protectionInfoPublicKey
keyHealth
inviteTimestampDate
T@"CKDPIdentifier",&,N,V_participantId
hasUserId
T@"CKDPIdentifier",&,N,V_userId
hasContactInformation
T@"CKDPContactInformation",&,N,V_contactInformation
hasState
Ti,N,V_state
hasInviterId
T@"CKDPIdentifier",&,N,V_inviterId
hasCreatedInProcess
TB,N,V_createdInProcess
hasAcceptTimestamp
Tq,N,V_acceptTimestamp
hasOutOfNetworkPrivateKey
T@"NSData",&,N,V_outOfNetworkPrivateKey
hasOutOfNetworkKeyType
Ti,N,V_outOfNetworkKeyType
hasAcceptedTimestampDate
T@"CKDPDate",&,N,V_acceptedTimestampDate
hasIsOrgUser
TB,N,V_isOrgUser
hasProtectionInfoPublicKey
T@"NSData",&,N,V_protectionInfoPublicKey
hasKeyHealth
Ti,N,V_keyHealth
hasInviteTimestampDate
T@"CKDPDate",&,N,V_inviteTimestampDate
healthy
expired
keylost
create table if not exists OperationInfo (
    operationID                   text primary key,
    appBundleIdentifier           text,
    sourceAppBundleIdentifier     text,
    personaID                     text,
    applicationContainerPath      text,
    containerIdentifier           text,
    containerEnvironment          integer,
    operationInfo                 blob,
    operationResult               blob,
    expirationDate                real,
    lastAttemptDate               real,
    retryNumber                   integer default 0,
    zoneWidePCS                   integer default 0,
    mmcsEncryptionSupport         integer default 0,
    bypassPCSEncryption           integer default 0,
    forceEnableReadOnlyManatee    integer default 0,
    encryptionServiceName         text,
    accountID                     text
create index if not exists BundleIDSourceAppIDAppContainerPathContainerIDContainerEnv on OperationInfo (appBundleIdentifier, sourceAppBundleIdentifier, personaID, applicationContainerPath, containerIdentifier, containerEnvironment);
create trigger if not exists DeleteOperationCallbackInfo
before delete on OperationInfo
for each row begin
  delete from CallbackInfo where operationID = OLD.operationID;
end;
create table if not exists CallbackInfo (
    operationID     text,
    callbackInfo    blob
create index if not exists OperationUUID on CallbackInfo (operationID);
OperationInfo
CallbackInfo
expirationDate
lastAttemptDate
retryNumber
zoneWidePCS
callbackInfo
T@"NSDate",&,N,V_lastAttemptDate
T@"NSNumber",&,N,V_retryNumber
T@"<CKDOperationInfoDelegate>",W,N,V_delegate
CloudKitOperationInfo
com.apple.cloudkit.operationInfoCache
com.apple.cloudkit.operationInfoCacheDelegate
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/CKDOperationInfoCache.m
A valid delegate is already registered (%@) for operation ID %@
v16@?0@"<CKDOperationInfoDelegate>"8
%@ = ?
%@ = ? and operationResult is not null
operationResult is null
%@ = ? AND %@ = ? AND %@ = ? AND %@ = ? AND %@ = ? AND %@ = ? AND %@ = ?
%@ < ?
com.apple.cloudkit.operationInfoCacheEviction
cacheDelegateQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_cacheDelegateQueue
delegateWrappersByOperationID
T@"NSMutableDictionary",&,N,V_delegateWrappersByOperationID
configurationFetchedGroup
T@"NSObject<OS_dispatch_group>",&,N,V_configurationFetchedGroup
Messages
com.apple.messages
Photos
com.apple.cloudphotod
willBeginSyncRequestWithClientsBlock
T@?,C,N,V_willBeginSyncRequestWithClientsBlock
clientSyncStartedBlock
T@?,C,N,V_clientSyncStartedBlock
clientSyncProgressedBlock
T@?,C,N,V_clientSyncProgressedBlock
clientSyncCompletedBlock
T@?,C,N,V_clientSyncCompletedBlock
/api/client/pushUnregister
left
right
hasLeft
T@"CKDPListPosition",&,N,V_left
hasRight
T@"CKDPListPosition",&,N,V_right
resultServerChangeTokenData
T@"NSData",&,N,V_resultServerChangeTokenData
Invalid data received from server
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/Service/CKDFetchArchivedRecordsURLRequest.m
Got a response for an unknown zone with request operation %@
Error fetching archived records in zone %@: %@
T@"NSArray",C,N,V_recordZoneIDs
configurationsByRecordZoneID
T@"NSDictionary",&,N,V_configurationsByRecordZoneID
zoneIDsByRequestOperationUUID
T@"NSMutableDictionary",&,N,V_zoneIDsByRequestOperationUUID
requestResultsByRecordZoneID
T@"NSMutableDictionary",&,N,V_requestResultsByRecordZoneID
nodeErrorsByZoneID
T@"NSMutableDictionary",&,N,V_nodeErrorsByZoneID
resultsByRecordZoneID
zoneErrorsByZoneID
Couldn't fetch record PCS from zone for record %@ from the server: %@
PCS fetch requested local cache only.
Couldn't fetch zone PCS for record %@ from the server: %@
Couldn't fetch zoneish PCS from zone for record %@ from the server: %@
PCS fetch requested local cache only
Couldn't fetch parent PCS (%@) or share PCS (%@) or any shared zone PCS (%@) for record %@ from the server
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/ProtectedCloudStorage/CKDPCSCacheRecordFetchOperation.m
We should have PCS data for record %@ by this point
We couldn't get zone PCS data for record %@
Failed to decrypt PCS data for record %@
We couldn't get any dependent PCS data to decrypt shared record %@
We don't have record PCS data for record %@
Couldn't decrypt chain PCS on record %@
Couldn't decrypt public sharing key on record %@
T@"CKDRecordPCSData",&,N
serverRecordHasNoProtectionData
TB,N,V_serverRecordHasNoProtectionData
serverRecordType
T@"NSString",&,N,V_serverRecordType
vettingError
hasVettingError
Ti,N,V_vettingError
isVettedToCaller
isVettedToOther
isLimitExceeded
loginRequired
mmcsWorkingDirectory
T@"NSString",&,N,V_mmcsWorkingDirectory
assetDbPath
T@"NSString",&,N,V_assetDbPath
recordZoneID
T@"CKRecordZoneID",&,N,V_recordZoneID
previousServerChangeTokenData
T@"NSData",&,N,V_previousServerChangeTokenData
serverChangeTokenData
T@"NSData",&,N,V_serverChangeTokenData
changedZoneIDs
T@"NSArray",R,N,V_changedZoneIDs
deletedZoneIDs
T@"NSArray",R,N,V_deletedZoneIDs
purgedZoneIDs
T@"NSArray",R,N,V_purgedZoneIDs
zoneChangedBlock
T@?,C,N,V_zoneChangedBlock
zoneDeletedBlock
T@?,C,N,V_zoneDeletedBlock
zonePurgedBlock
T@?,C,N,V_zonePurgedBlock
com.apple.cloudkit.PILSQueue
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/CKDPublicIdentityLookupService.m
Should be the same context
Batch size is zero, we won't make any progress
cache
T@"CKDKeyValueDiskCache",&,N,V_cache
host
port
useTls
hasHost
T@"NSString",&,N,V_host
hasPort
TI,N,V_port
hasUseTls
TB,N,V_useTls
longValue
fieldValues
hasLongValue
Tq,N,V_longValue
T@"NSMutableArray",&,N,V_fieldValues
boolType
longType
fieldType
You must get an ACAccountStore by calling +[%@ sharedAccountStoreWithEffectiveBundleID:]
/api/client/user/retrieve
/api/client/query/retrieve
hasQuery
T@"CKDPQuery",&,N,V_query
resultChangedNotifications
T@"NSArray",R,N,V_resultChangedNotifications
<%@ %p> (Expires %@, Values %@)
containerOverrides
appleOverrides
bundleIds
pushTokenRegisterDays
assetKeyEncryption
flowControl.initialBudget
flowControl.regenRate
flowControl.maximumThrottleSeconds
maxBatchSize
allowExpiredDNSBehavior
c2Metrics.reportFrequency
c2Metrics.reportFrequencyBase
c2Metrics.clientOperationMetrics.reportFrequency
c2Metrics.clientOperationMetrics.reportFrequencyBase
c2Metrics.applicationMetrics.reportFrequency
c2Metrics.applicationMetrics.reportFrequencyBase
c2Metrics.allOperationMetrics.reportFrequency
c2Metrics.allOperationMetrics.reportFrequencyBase
c2Metrics.allOperationGroupMetrics.reportFrequency
c2Metrics.allOperationGroupMetrics.reportFrequencyBase
validHostnames
valuesData
expiry
T@"NSMutableDictionary",&,N,V_values
allowedAppVersionsCache
T@"NSMutableDictionary",&,N,V_allowedAppVersionsCache
T@"NSDate",&,N,V_expiry
Error while generating private key for OON user identity: %@
The server returned a failure: %@
Failed to fetch user identity for %@
This request was cancelled
lookupInfos=%@ + %ld more
lookupInfos=%@
originalLookupInfosToFetch
T@"NSArray",&,N,V_originalLookupInfosToFetch
lookupInfosToFetch
T@"NSMutableArray",&,N,V_lookupInfosToFetch
T@"CKDDiscoverUserIdentitiesURLRequest",&,N,V_request
perLookupInfoProgressBlock
T@?,C,N,V_perLookupInfoProgressBlock
lookupCompletionBlock
T@?,C,N,V_lookupCompletionBlock
Fetch Record
Touch Repair Zone (Fetch)
Touch Repair Zone (Create)
Break Asset
Call MarkAssetBroken
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/Operations/CKDMarkAssetBrokenOperation.m
Upload request configuration passed to cloudd should have resolved fields
FakeRecordType
FakeName
Error marking asset as broken: %@
v24@?0@"CKRecordID"8@"CKDPResponseOperationResult"16
Attempting to break asset with missing base record
Could not find referenced asset
uploadRequestConfiguration
T@"CKUploadRequestConfiguration",&,N,V_uploadRequestConfiguration
touchRepairZone
TB,N,V_touchRepairZone
bypassPCSEncryptionForTouchRepairZone
TB,N,V_bypassPCSEncryptionForTouchRepairZone
simulateCorruptAsset
TB,N,V_simulateCorruptAsset
writeRepairRecord
TB,N,V_writeRepairRecord
T@"NSString",&,N,V_field
Tq,N,V_listIndex
zoneFetchOperation
T@"CKDFetchRecordZonesOperation",&,N,V_zoneFetchOperation
zoneCreateOperation
T@"CKDModifyRecordZonesOperation",&,N,V_zoneCreateOperation
corruptOperation
T@"CKDModifyRecordsOperation",&,N,V_corruptOperation
wrapperOperation
T@"CKDMarkAssetBrokenURLRequestWrapperOperation",&,N,V_wrapperOperation
repairZone
T@"CKRecordZone",&,N,V_repairZone
numMarkAssetBrokenFailures
TQ,N,V_numMarkAssetBrokenFailures
markAssetBrokenError
T@"NSError",&,N,V_markAssetBrokenError
assetOrPackageMarkedBrokenBlock
T@?,C,N,V_assetOrPackageMarkedBrokenBlock
urlRequest
T@"CKDMarkAssetBrokenURLRequest",&,N,V_urlRequest
identifierForConstraintFailure
hasIdentifierForConstraintFailure
T@"CKDPIdentifier",&,N,V_identifierForConstraintFailure
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/Service/CKDAcceptSharesURLRequest.m
Incomplete accept share metadata for OON participant: %@, %@, %@
Invalid share
The share could not be converted because it is invalid: %@
shareMetadatasToAccept
T@"NSArray",&,N,V_shareMetadatasToAccept
shareMetadataByRequestID
T@"NSMutableDictionary",&,N,V_shareMetadataByRequestID
shareAcceptedBlock
T@?,C,N,V_shareAcceptedBlock
shareURL
T@"NSURL",&,N,V_shareURL
T@"CKRecordID",&,N,V_shareRecordID
publicPCSData
T@"NSData",&,N,V_publicPCSData
publicPCSEtag
T@"NSString",&,N,V_publicPCSEtag
T@"NSData",&,N,V_publicKey
TQ,N,V_publicKeyVersion
oonProtectionInfo
T@"NSData",&,N,V_oonProtectionInfo
oonParticipantID
T@"NSString",&,N,V_oonParticipantID
dugongInvitationProtectionInfo
T@"NSData",&,N,V_dugongInvitationProtectionInfo
atomicSaves
fetchChanges
sharing
ckql
sharingType
zoneSharing
hierarchicalSharing
hasAtomicSaves
TB,N,V_atomicSaves
hasFetchChanges
TB,N,V_fetchChanges
hasSharing
TB,N,V_sharing
hasCkql
TB,N,V_ckql
hasSharingType
Ti,N,V_sharingType
hasZoneSharing
TB,N,V_zoneSharing
hasHierarchicalSharing
TB,N,V_hierarchicalSharing
hierarchical
zoneWide
shouldFetchAssetContents
assetTransferOptionsByKeyByRecordType
Encountered a transient error fetching record %@. Please try again.
v32@?0@"NSDictionary"8Q16^B24
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/Operations/CKDFetchBatchedRecordsOperation.m
Expect subclass to implement
forcePCSDecryptionAttempt
TB,N,V_forcePCSDecryptionAttempt
shouldReportAllPerItemFailures
TB,N,V_shouldReportAllPerItemFailures
T@"CKDRecordCache",R,N,V_recordCache
TB,N,V_shouldFetchAssetContents
TB,N,V_fetchAllChanges
fetchAllZoneChanges
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/Operations/CKDFetchRecordZoneChangesOperation.m
v32@?0@"CKRecordZoneID"8@"CKDFetchZoneChangesRequestOperationResult"16^B24
v24@?0@"CKRecordID"8@"NSString"16
changeTypes
Tq,N,V_changeTypes
savedResult
T@"CKDFetchZoneChangesRequestOperationResult",&,N,V_savedResult
clientIsUsingLegacyCKFetchRecordChangesOperationAPI
TB,N,V_clientIsUsingLegacyCKFetchRecordChangesOperationAPI
recordChangedBlock
T@?,C,N,V_recordChangedBlock
serverChangeTokenUpdatedBlock
T@?,C,N,V_serverChangeTokenUpdatedBlock
fetchAllDatabaseChanges
T@"CKServerChangeToken",&,N,V_serverChangeToken
fetchZonesGroup
T@"NSObject<OS_dispatch_group>",&,N,V_fetchZonesGroup
recordZoneWithIDChangedBlock
T@?,C,N,V_recordZoneWithIDChangedBlock
recordZoneWithIDWasDeletedBlock
T@?,C,N,V_recordZoneWithIDWasDeletedBlock
recordZoneWithIDWasPurgedBlock
T@?,C,N,V_recordZoneWithIDWasPurgedBlock
bundleIDsFetchedBlock
T@?,C,N,V_bundleIDsFetchedBlock
down|%@
T@"NSMutableArray",&,N,V_assetsToDownload
T@"NSMutableArray",&,N,V_assetsToDownloadInMemory
T@"NSMutableArray",&,N,V_packageIndexSets
T@"NSMutableArray",&,N,V_assetURLInfosToFillOut
Fetch Records
Refetch Records
Prefetch Cloud Public Certs
Download Assets
Updating Records
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/Operations/CKDFetchRecordsOperation.m
Expected non-nil cache for %@
Request with UUID %@ invoked progress callout after completion callout.  Progress recordID %@
v36@?0@"CKRecord"8@"CKRecordID"16B24@"CKDPResponseOperationResult"28
Error fetching record %@ from server: %@
TESTING_NO_RECORD_ERROR_OR_RECORDS_RETURNED
Expected non-nil record for operation %@
Invalid parameters to takeActionOnValue
v20@?0i8@12
shouldFetchAssetContentInMemory not for packages
No public cert key and no error
Expected non-nil record for asset %@
Expected non-nil download task for record %@
v16@?0@8
v24@?0@8d16
v24@?0@8@"NSDictionary"16
v24@?0@8@"NSError"16
Expected non-nil record for urlInfo %@
v24@?0@"CKDDownloadAssetURLInfo"8@"NSError"16
recordIDsToFetch
T@"NSArray",&,N,V_recordIDsToFetch
cachedRecords
T@"NSMutableDictionary",&,N,V_cachedRecords
desiredPackageFileIndices
T@"NSDictionary",&,N,V_desiredPackageFileIndices
errorsByRecordID
T@"NSMutableDictionary",&,N,V_errorsByRecordID
downloadTasksByRecordID
T@"NSMapTable",&,N,V_downloadTasksByRecordID
T@"CKDRecordCache",&,N,V_cache
recordDecryptOperation
T@"CKDDecryptRecordsOperation",R,N
hasRecordDecryptOperation
recordIDsToRefetch
T@"NSMutableArray",&,N,V_recordIDsToRefetch
shareRecordsToUpdate
T@"NSMutableArray",&,N,V_shareRecordsToUpdate
webSharingIdentityDataByRecordID
T@"NSDictionary",&,N,V_webSharingIdentityDataByRecordID
useCachedEtags
TB,N,V_useCachedEtags
forcePCSDecrypt
TB,N,V_forcePCSDecrypt
skipDecryption
TB,N,V_skipDecryption
fullRecordsToFetch
T@"NSArray",&,N,V_fullRecordsToFetch
v32@?0@"CKRecord"8@"CKRecordID"16@"CKDPResponseOperationResult"24
T@"<CKSQLiteItem>",&,N,V_itemID
T@"CKDPCSCache",&,N,V_cache
options
TQ,N,V_options
Couldn't get PCS data from the server for %@ %@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/ProtectedCloudStorage/CKDPCSCacheFetchOperation.m
CKDPCSCacheFetchOperation subclass (%@) didn't call [super _willRetryFetch]
Fetching PCS data from database
Fetching PCS data from server
Creating additional PCS data
Fetching dependent PCS blob for decryption
Decrypting PCS data
Saving PCS data to server
Saving PCS data to database
item
willRetryFetchSuperCalled
TB,N,V_willRetryFetchSuperCalled
fetchOptions
TQ,N,V_fetchOptions
didFetchData
TB,N,V_didFetchData
fetchError
T@"NSError",&,N,V_fetchError
wasFetchedFromCache
TB,N,V_wasFetchedFromCache
numRetries
Ti,N,V_numRetries
shouldRetry
TB,N,V_shouldRetry
parentPCSData
T@"CKDRecordPCSData",&,N,V_parentPCSData
hasAllPCSData
itemTypeName
pcsDataInvalidated
TB,GisPCSDataInvalidated,V_pcsDataInvalidated
T@"NSObject<OS_dispatch_group>",R,N,V_fetchGroup
Error archiving record with ID %@: %@
Error marking as read notification %@: %@
v24@?0@"CKNotificationID"8@"CKDPResponseOperationResult"16
notificationIDs
T@"NSArray",&,N,V_notificationIDs
errorByNotificationID
T@"NSMutableDictionary",&,N,V_errorByNotificationID
successfulNotificationIDs
T@"NSMutableSet",&,N,V_successfulNotificationIDs
notificationMarkedRead
T@?,C,N,V_notificationMarkedRead
Fetching Shares
Updating Shares
Share %@ couldn't be upgraded
Couldn't get a short token for share %@
v3:%@:%@:%@
v1:%@:%@
Couldn't decrypt our per-participant PCS
v4:%@:%@:%@:%@
v2:%@:%@:%@
Couldn't get a per-participant key for share %@
Couldn't create a participant identity from the exported per participant key
Couldn't create a participant PCS from the exported per participant identity
Couldn't fetch a share with ID %@
Item with ID %@ was not a share
shareIDs
T@"NSMutableArray",&,N,V_shareIDs
baseTokensByShareID
T@"NSDictionary",&,N,V_baseTokensByShareID
childRecordIDsByShareID
T@"NSDictionary",&,N,V_childRecordIDsByShareID
sharesNeedingUpdateByID
T@"NSMutableDictionary",&,N,V_sharesNeedingUpdateByID
hasAttemptedShareUpdate
TB,N,V_hasAttemptedShareUpdate
shareParticipantKeyFetchedBlock
T@?,C,N,V_shareParticipantKeyFetchedBlock
%@.%@.%@
deviceIDs
T@"NSMutableDictionary",&,N,V_deviceIDs
You can't pass multiple instances of the same record to a CKModifyRecordsOperation
B32@?0@"NSString"8@"CKPackage"16@"NSError"24
v28@?0B8@"NSSet"12@"NSSet"20
Determining iCloud Environment
Fetching Container-Scoped User ID
Fetching User Public Keys
Apply Side Effects
Mark Record Handlers As Uploaded
Prepare Parent PCS
Fetch Share PCS
Fetch Record PCS
Fetch Asset Records for ReReference
Modify Records
Prepare Records For Save
Upload Assets
Toposort Records
Verifying Record Encryption
Report Records In Flight
Fetching Share Participants
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/Operations/CKDModifyRecordsOperation.m
saveCallbackWithMetadata:error: called twice on %@
Unexpected handler state in default zone %ld %ld %@
Record %@ will not be saved because of previous error in atomic zone
Record %@ will not be saved but can be retried as is
Unexpected handler state in failed atomic zone %ld %ld %@
Unexpected handler state in retryable atomic zone %ld %ld %@
v16@?0@"CKDModifyRecordHandler"8
Invalid list of records: %@
Should have a different error already
Re-referenced asset signature not found in source asset array
Can't handle fieldValue %@
assetReference
v32@?0@"NSString"8@"NSMutableArray"16^B24
FailedAssetsByFieldName
One or more referenced asset do not exist
Expected isRereferencedAssetUpload %@
Expected non-nil handler for %@
Expected non-nil cached boundary key for operation %@
Expected a non-nil record for handler %@
We shouldn't get into this state if shouldOnlySaveAssetContent is true
Lost a recordID
Failed to decrypt record with ID %@: %@
Couldn't decrypt data on record %@
Couldn't decrypt record returned from the server in response to our save of record %@
Got a response for record with ID %@, but we didn't try to put that record.
Record PCS oplock failed
Zone PCS oplock failed
Zone
Share Etag Oplock failure
Error saving share %@ to server: "%@"
Error saving record %@ to server: Protection data didn't match
Error saving record %@ to server: %@
Error deleting record %@: %@
v64@?0@"CKRecordID"8@"NSString"16@"CKDPDateStatistics"24@"CKDPResponseOperationResult"32@"NSSet"40@"CKRecord"48@"CKRecord"56
Operation %@ tried to finish without an error but it has outstanding handlers
recordsToSave
T@"NSArray",&,N,V_recordsToSave
recordIDsToDelete
T@"NSArray",&,N,V_recordIDsToDelete
recordIDsToDeleteToEtags
T@"NSDictionary",&,N,V_recordIDsToDeleteToEtags
conflictLosersToResolveByRecordID
T@"NSDictionary",&,N,V_conflictLosersToResolveByRecordID
pluginFieldsForRecordDeletesByID
T@"NSDictionary",&,N,V_pluginFieldsForRecordDeletesByID
handlersByRecordID
T@"NSDictionary",&,N,V_handlersByRecordID
parentsByRecordID
T@"NSDictionary",&,N,V_parentsByRecordID
handlersByAssetNeedingRecordFetch
T@"NSMapTable",&,N,V_handlersByAssetNeedingRecordFetch
handlersByAsset
T@"NSMapTable",&,N,V_handlersByAsset
modifyHandlersByZoneID
T@"NSMutableDictionary",&,N,V_modifyHandlersByZoneID
Tq,N,V_savePolicy
clientChangeTokenData
T@"NSData",C,N,V_clientChangeTokenData
retriedRecords
TB,N,V_retriedRecords
shouldOnlySaveAssetContent
TB,N,V_shouldOnlySaveAssetContent
haveOutstandingHandlers
TB,N,V_haveOutstandingHandlers
shouldReportRecordsInFlight
TB,N,V_shouldReportRecordsInFlight
modifyRecordsQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_modifyRecordsQueue
hasDecryptOperation
cachedUserBoundaryKeyData
T@"NSData",C,N,V_cachedUserBoundaryKeyData
originatingFromDaemon
TB,N,V_originatingFromDaemon
markAsParticipantNeedsNewInvitationToken
TB,N,V_markAsParticipantNeedsNewInvitationToken
requestNeedsUserPublicKeys
TB,N,V_requestNeedsUserPublicKeys
userPublicKeys
T@"NSArray",&,N,V_userPublicKeys
streamingAssetRequestOptions
T@"C2RequestOptions",C,N,V_streamingAssetRequestOptions
retryPCSFailures
TB,N,V_retryPCSFailures
canSetPreviousProtectionEtag
TB,N,V_canSetPreviousProtectionEtag
trustProtectionData
TB,N,V_trustProtectionData
shouldModifyRecordsInDatabase
TB,N,V_shouldModifyRecordsInDatabase
saveProgressBlock
T@?,C,N,V_saveProgressBlock
recordsInFlightBlock
T@?,C,N,V_recordsInFlightBlock
Long Lived Operation %@ may not save a record with a CKPackage value.  Found %@
Long Lived Operation %@ may not save a record with asset %@, whose fileURL %@ is inaccessible
If you're gonna fail our value check, there better be a reason
v32@?0@"CKShare"8@"CKRecordID"16@"NSError"24
T@"CKDSharePCSData",&,N
/api/client/subscription/delete
/api/client/privacy/reset
T@"CKDPRecordIdentifier",&,N,V_identifier
X-CloudKit-Container
X-CloudKit-Zones
X-CloudKit-App-BundleID
X-CloudKit-DeviceID
containerID=%@, applicationBundleID="%@"
applicationSecondaryID="%@"
discretionary="%@"
duetPreClearedMode="%@"
automatically-retry-network-failures
allows-power-nap-scheduling
resumable-container-limp-mode
chunking-library-corruption-mode
Tq,N,V_databaseScope
Tq,N,V_containerEnvironment
topmostParentOperationID
T@"NSString",&,N,V_topmostParentOperationID
topmostParentOperationGroupID
T@"NSString",&,N,V_topmostParentOperationGroupID
T@"NSString",&,N,V_applicationSecondaryID
T@"NSString",&,N,V_containerID
zoneNames
T@"NSArray",&,N,V_zoneNames
authPutResponse
T@"NSData",&,N,V_authPutResponse
authPutResponseHeaders
T@"NSDictionary",&,N,V_authPutResponseHeaders
TB,N,V_allowsCellularAccess
TB,N,V_allowsPowerNapScheduling
queuePriority
Tq,N,V_queuePriority
TB,N,V_resolvedAutomaticallyRetryNetworkFailures
TQ,N,V_resolvedDiscretionaryNetworkBehavior
TQ,N,V_duetPreClearedMode
metricOptions
T@"C2MetricOptions",&,N,V_metricOptions
TQ,N,V_networkServiceType
T@"CKOperationMMCSRequestOptions",&,N,V_MMCSRequestOptions
list_field
listFields
T@"NSMutableArray",&,N,V_listFields
Error fetching versions for record %@ from server: %@
v36@?0@"CKRecordID"8B16@"NSArray"20@"CKDPResponseOperationResult"28
T@"NSArray",&,N,V_desiredKeys
minimumVersionETag
T@"NSString",&,N,V_minimumVersionETag
fetchVersionsGroup
T@"NSObject<OS_dispatch_group>",&,N,V_fetchVersionsGroup
recordVersionFetchedBlock
T@?,C,N,V_recordVersionFetchedBlock
serializedResult
hasSerializedResult
T@"NSData",&,N,V_serializedResult
T@"CKCDPError",&,N,V_error
auxiliaryDomain
auxiliaryCode
auxiliaryUserInfo
hasMessage
hasAuxiliaryDomain
T@"NSString",&,N,V_auxiliaryDomain
hasAuxiliaryCode
Ti,N,V_auxiliaryCode
auxiliaryUserInfos
T@"NSMutableArray",&,N,V_auxiliaryUserInfos
FUNCTION_TIMEOUT
FUNCTION_ERROR
INTERNAL_ERROR
CKTCCDatabaseChanged
Preferences/com.apple.jett.Switch.plist
latest_selections
environment_identifier
(Automatic)
%@=%@
BOOL _isBundleAuthorizedForCloudKit(NSString *__strong, CKDClientContext *__strong)
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Utility/CKDDaemonUtils.m
This is always non-nil.  This check here just to appease clang
v16@?0@"NSObject<OS_xpc_object>"8
CKDAcceptSharesOperation
CKDAggregateZonePCSOperation
CKDBatchGetUserPrivacySettingsOperation
CKDCodeFunctionInvokeOperation
CKDCompleteParticipantVettingOperation
CKDDatabaseOperation
CKDDecryptRecordsOperation
CKDDiscoverUserIdentitiesOperation
CKDDownloadAssetsOperation
CKDFetchDatabaseChangesOperation
CKDFetchNotificationChangesOperation
CKDFetchRecordAncestorsOperation
CKDFetchRecordVersionsOperation
CKDFetchRecordZoneChangesOperation
CKDFetchRecordZonePCSDiagnosticsOperation
CKDFetchRecordZonesOperation
CKDFetchRecordsOperation
CKDFetchShareMetadataOperation
CKDFetchShareParticipantKeyOperation
CKDFetchShareParticipantsOperation
CKDFetchSubscriptionsOperation
CKDFetchUserQuotaOperation
CKDFetchWebAuthTokenOperation
CKDFetchWhitelistedBundleIDsOperation
CKDGetUserPrivacySettingsOperation
CKDGlobalConfigurationOperation
CKDInitiateParticipantVettingOperation
CKDMarkNotificationsReadOperation
CKDMescalSessionOperation
CKDModifyBadgeOperation
CKDContainerSpecificInfoOperation
CKDModifyRecordAccessOperation
CKDModifyRecordZonesOperation
CKDModifyRecordsOperation
CKDModifySubscriptionsOperation
CKDModifyWebSharingOperation
CKDOperation
CKDPlaceholderOperation
CKDProxyOperation
CKDPublishAssetsOperation
CKDQueryOperation
CKDRepairZonePCSOperation
CKDResetUserPrivacySettingsOperation
CKDSaveUserPrivacySettingsOperation
CKDUploadAssetsOperation
CKDFetchBatchedRecordsOperation
CKDFetchArchivedRecordsOperation
CKDAssetTokenRequestOperation
CKDDiscoverAllUserIdentitiesOperation
CKDFetchRecordChangesOperation
CKDGetUserRecordOperation
CKDArchiveRecordsOperation
CKDFetchRecordPCSDiagnosticsOperation
CKDOperationInfoHolderOperation
CKDFetchTranscodeServerPublicKeyOperation
CKDSyncRequestOperation
CKDRepairAssetsOperation
CKDMarkAssetBrokenOperation
CKDUpdateMissingAssetStatusOperation
CKDMarkAssetBrokenURLRequestWrapperOperation
zonePCS
T^{_OpaquePCSShareProtection=},N
zoneishPCS
Generated PCS key ID not found in PCS for record %@
recordPCS
None
With-Budget
Without-Budget
CKRecordZonePCS
CKZoneishPCS
CKRecordPCS
PrivatePCS
PublicPCS
action
T@"CKDPRecordFieldIdentifier",&,N,V_identifier
T@"CKDPRecordFieldValue",&,N,V_value
actions
T@"NSMutableArray",&,N,V_actions
incomplete
resultClientChangeTokenData
T@"NSData",&,N,V_resultClientChangeTokenData
TB,N,V_hasPendingArchivedRecords
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/Service/CKDFetchRecordZoneChangesURLRequest.m
Error fetching changes in zone %@: %@
recordsChangedBlock
T@?,C,N,V_recordsChangedBlock
recordDeletedBlock
T@?,C,N,V_recordDeletedBlock
com.apple.cloudkit.accountCheckQueue
You must initialize a subclass of %@
%@ must be subclassed in class %@
com.apple.Dataclass.CKDatabaseService
apsEnv
No account exists
VETTING_PASSWORD_DIALOG_TITLE_IOS
com.apple.machelp
mchl267b6234
icloud_gateway_url
com.apple.Dataclass.CKShareService
com.apple.Dataclass.CKDeviceService
com.apple.Dataclass.CKCodeService
com.apple.Dataclass.CKMetricsService
com.apple.Dataclass.CKDatabaseRPCService
cloudSharingURLHostname
deviceCountFetchDate
Failed to fetch device list
Bad response from AppleAccount
v32@?0@"AARequest"8@"AAResponse"16@"NSError"24
sharingURLHostname
TB,R,N,V_isPrimaryEmailVerified
Credential renewed
Renewal failed
Renewal rejected by user
missingAssetStatusRecord
hasMissingAssetStatusRecord
T@"CKDPRecordIdentifier",&,N,V_missingAssetStatusRecord
com.apple.cloudkit.BackgroundConnectionPool
backgroundSessionConnectionPoolLimit
manifest
sections
hasManifest
T@"CKDPAsset",&,N,V_manifest
T@"NSMutableArray",&,N,V_sections
allAssets
hasAllAssets
TB,N,V_allAssets
/api/client/record/sync
requestedChangeTypes
ignoreCallingDeviceChanges
hasRequestedChangeTypes
Ti,N,V_requestedChangeTypes
hasIgnoreCallingDeviceChanges
TB,N,V_ignoreCallingDeviceChanges
shares
recordsAndShares
T@"CKRecordID",C,N,V_repairRecordID
Checking PCS Identity
Updating Zone PCS
UpdateBreakerZone
Error fetching record zone %@ from server: %@
isFetchAllRecordZonesOperation
TB,N,V_isFetchAllRecordZonesOperation
zonesToSaveForPCSUpdateByZoneID
T@"NSMutableDictionary",&,N,V_zonesToSaveForPCSUpdateByZoneID
zoneIDsNeedingPCSUpdateRetry
T@"NSMutableArray",&,N,V_zoneIDsNeedingPCSUpdateRetry
pcsUpdateErrorsByZoneID
T@"NSMutableDictionary",&,N,V_pcsUpdateErrorsByZoneID
zoneIDsNeedingDugongKeyRoll
T@"NSMutableSet",&,N,V_zoneIDsNeedingDugongKeyRoll
ignorePCSFailures
TB,N,V_ignorePCSFailures
recordZoneFetchedProgressBlock
T@?,C,N,V_recordZoneFetchedProgressBlock
scope: %@
pcs.db
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/ProtectedCloudStorage/CKDPCSSQLCache.m
We don't have a database queue yet
com.apple.CloudKit.PCSCache.recordQueue
Anonymous-%@
DROP TABLE IF EXISTS PCSData;
CREATE TABLE PCSData (identifier TEXT, databaseScope INTEGER, itemType INTEGER, CKDPCSData BLOB, serviceName TEXT, accountID TEXT, zoneID TEXT, shareID TEXT, parentID TEXT, date INTEGER, PRIMARY KEY (identifier));
CREATE INDEX IdentifierIndex ON PCSData(identifier, databaseScope, itemType, serviceName, accountID, date);
CREATE INDEX ZoneItemIndex ON PCSData(zoneID, accountID, serviceName);
CREATE INDEX ShareItemIndex ON PCSData(shareID, accountID, serviceName);
CREATE INDEX DateIndex ON PCSData(date);
SELECT CKDPCSData FROM PCSData WHERE identifier = %@ AND databaseScope = %ld AND itemType = %ld AND accountID = %@ AND serviceName = %@ AND date >= %f
DELETE FROM PCSData WHERE identifier = %@ AND databaseScope = %ld AND itemType = %ld AND accountID = %@ AND serviceName = %@
INSERT OR REPLACE INTO PCSData (identifier, databaseScope, itemType, CKDPCSData, accountID, serviceName, zoneID, shareID, parentID, date) VALUES (%@, %ld, %ld, %@, %@, %@, %@, %@, %@, %@)
DELETE FROM PCSData WHERE zoneID = %@ AND accountID = %@ AND serviceName = %@
DELETE FROM PCSData WHERE shareID = %@ AND accountID = %@ AND serviceName = %@
DELETE FROM PCSData;
DELETE FROM PCSData WHERE date < %f
[Hit rate %0.2f%% (%lu/%lu)]
[Not initialized yet]
com.apple.CloudKit.PCSSQLCache.evictionQueue
com.apple.cloudkit.pcs.sqlcache.evict
recordQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_recordQueue
earliestValidDate
cacheRequestCount
TQ,V_cacheRequestCount
cacheHitCount
TQ,V_cacheHitCount
Underretain on shared cache.
cachesByPath
T@"NSMutableDictionary",&,N,V_cachesByPath
checkoutsByPath
T@"NSMutableDictionary",&,N,V_checkoutsByPath
ALTER TABLE PCSData ADD COLUMN itemType INTEGER
CREATE INDEX IdentifierIndex ON PCSData(identifier, databaseScope, itemType, accountID, date)
ALTER TABLE PCSData ADD COLUMN serviceName INTEGER
DROP INDEX IdentifierIndex
CREATE INDEX IdentifierIndex ON PCSData(identifier, databaseScope, itemType, serviceName, accountID, date)
You must call -[%@ initWithRecord:callbackQueue:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/Operations/CKDDecryptRecordsOperation.m
You can't decrypt a nil record
You must specify a callback queue
T@"CKRecord",R,N,V_record
decryptGroup
T@"NSObject<OS_dispatch_group>",&,N,V_decryptGroup
callback
T@?,C,N,V_callback
numUnwrapAttempts
TQ,V_numUnwrapAttempts
Operation %@ has already been marked to finished. You can't enqueue any more decrypts
Faking decryption failure on record because you asked for it
Decrypt operation %@ was cancelled
Record %@ has items that require encryption but no protection data was found on the record
Couldn't create a sharing identity
Couldn't unwrap record PCS with web sharing PCS
Record %@ has items that require encryption but no zone protection data was found
 - record has no protection data
Record %@ has items that require encryption but no protection data was found: %@
Record %@ has items that require encryption but no protection data was found
Couldn't unwrap chain PCS on parent %@
Record %@ has items that require encryption but no share protection data was found
Record %@ has items that require encryption but no protection data was found for parent %@
Record %@ has items that require encryption but no shared zone protection data was found
You can't decrypt a record in the public database
Error unwrapping asset key with PCS %@ for record %@
Couldn't get a PCS object for record %@
Couldn't get a PCS object for the record %@. 
Decrypt operation %@ finished but there were still outstanding decryptions
You can't finish a decrypt operation twice
Encountered a transient error fetching protection data for record %@. Please try again.
outstandingDecryptions
T@"NSMutableArray",&,N,V_outstandingDecryptions
recordDecryptGroup
T@"NSObject<OS_dispatch_group>",&,N,V_recordDecryptGroup
TB,GisStarted,V_started
markedToFinish
TB,GisMarkedToFinish,V_markedToFinish
recordDecryptQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_recordDecryptQueue
maxUnwrapAttempts
TQ,N,V_maxUnwrapAttempts
infoFetchedGroup
T@"NSObject<OS_dispatch_group>",R,N,V_infoFetchedGroup
up|%@|%@
MMCSManifestItem
T@"CKDMMCSItem",&,N,V_MMCSManifestItem
MMCSSectionItems
T@"NSArray",&,N,V_MMCSSectionItems
storageGroupingPolicy
uploadRank
identitySet
T^{_PCSIdentitySetData=},R,N,V_identitySet
primaryServiceName
T@"NSString",R,N,V_primaryServiceName
identityString
T@"NSString",R,N,V_identityString
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/ProtectedCloudStorage/CKDPCSIdentityManager.m
No serviceName provided to _copyIdentityForService
Can't fetch identity, no account dsid available
Manatee is not available for fake accounts
CoreCDP failed to check manatee availability
Manatee is not available for the current account
Identity cache missed an invalidation, dsid of backing account has changed
fake 
Can't create a diversified identity with no server entropy
Couldn't get a %@ identity set
Couldn't get a %@ identity
Couldn't create a diversified %@ identity
Couldn't get a diversified identity for service %@
Couldn't get a %@ identity to add to the share PCS
Couldn't copy a public identity for our current user
Couldn't fetch identity set for service %@ to add to a mutable identity set.
Couldn't copy current identity for service %@ to add to a mutable identity set.
Empty dictionary returned while copying identities. Can't add identities for %@ to mutable identity set.
Couldn't add app-specific service identity (%@) to new identity set: %@
No account DSID, so we can't create an identity
Couldn't create a new identity set
Account %@ is not a CKDBackingFakeAccount
Error fetching iCloud auth token
com.apple.Dataclass.KeychainSync
escrowProxyUrl
com.apple.Dataclass.Ubiquity
Couldn't fetch PCS identities from stingray
Couldn't create a sharing identity from public key %@
Couldn't create data from web sharing identity %@
Couldn't create a sharing identity from data %@
cachedAccountDSID
T@"NSString",&,V_cachedAccountDSID
PCSIdentityWrappersByServiceName
T@"NSMutableDictionary",&,V_PCSIdentityWrappersByServiceName
debugIdentity
T^{_PCSIdentityData=},N,V_debugIdentity
T@"NSString",R,N,V_serviceName
Identity Set: %p
Primary service name: %@
Current key: %p
public-key: %@
keyid: %@
manatee: %@
is public identity
No current key for the given service name.
Additional public keys (%lu):
attestationResponse
hasAttestationResponse
T@"CKDPCodeFunctionInvokeResponseAttestationResponse",&,N,V_attestationResponse
Can't return account credentials for nil account
Can't return account credentials for account %@ because the account needs to verify new terms or is in suspended mode.
Didn't get account credentials for account %@ with no error
Couldn't get cloudKitAuthToken from credential
Couldn't get iCloudAuthToken from credential
com.apple.cloudkit.aarequesthandler
v16@?0@"AAResponse"8
T@"ACAccountStore",R,N,V_accountStore
ckAccount
parentAppleAccount
T@"ACAccount",&,N,V_parentAppleAccount
invalidated
TB,R,N,GisInvalidated
cachedResult
T@"CKOperationResult",&,N,V_cachedResult
didHandleCancel
TB,N,V_didHandleCancel
operationProgressedBlock
T@?,C,N,V_operationProgressedBlock
fileSignature=%@
referenceSignature=%@
size=%@
T@"CKDPRecordIdentifier",R,N,V_recordID
T@"NSData",R,N,V_fileSignature
T@"NSData",R,N,V_referenceSignature
T@"NSNumber",R,N,V_size
uploadTokens
contentResponseHeaders
T@"NSMutableArray",&,N,V_uploadTokens
hasAuthPutResponse
T@"NSMutableArray",&,N,V_contentResponseHeaders
Fetching Share Metadata
Fetching Accepted Shares
Preparing Share Metadata
Decrypting Share Metadata
Accepting Shares
Error accepting share %@: %@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/Operations/CKDAcceptSharesOperation.m
OON Participants not supported in manatee
Public sharing not supported in manatee
v32@?0@"NSURL"8@"CKShare"16@"CKDPResponseOperationResult"24
Fetched share metadata didn't have a share ID
Couldn't fetch accepted share from the server
Couldn't get a diversified %@ identity to accept share at %@
Cannot accept share %@ as an out-of-network participant
Can not accept share at URL %@ because we couldn't decrypt the share as an invited user
Can not accept share at URL %@ because participant type %ld is unsupported
Can not accept share at URL %@: vetting of the invited email is needed
Error accepting share at URL %@: No manatee sharing invitation blob provided
Error accepting share at URL %@: %@ participant tried to accept share
Error accepting share at URL %@: Protection data didn't match
Couldn't get metadata for the share with url %@
clientProvidedMetadatasByURL
T@"NSMutableDictionary",&,N,V_clientProvidedMetadatasByURL
shareURLsToAccept
T@"NSMutableArray",&,N,V_shareURLsToAccept
acceptedShareURLsToFetch
T@"NSMutableArray",&,N,V_acceptedShareURLsToFetch
shareMetadatasToAcceptByURL
T@"NSMutableDictionary",&,N,V_shareMetadatasToAcceptByURL
numShareAcceptAttempts
TQ,N,V_numShareAcceptAttempts
acceptCompletionBlock
T@?,C,N,V_acceptCompletionBlock
/api/client/pushRead
hasUuid
recordVersionsFetchedBlock
T@?,C,N,V_recordVersionsFetchedBlock
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/Assets/CKDMMCSItemFileWriter.m
read error: %d (%s)
data
T@"NSMutableData",&,N,V_data
T^{_OpaquePCSShareProtection=},N,V_recordPCS
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/Assets/CKDMMCSPackageSignatureGenerator.m
Attempted to update an invalidated signature generator
generator
T^v,N,V_generator
valid
TB,N,GisValid,V_valid
_defaultOwner
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Protocol/CKDProtocolTranslator.m
Without a user id, this translator won't do what you want
userName
pIdentifier.name
pIdentifier.value.name
Unknown error %@
Subscription from server didn't have a record type
Subscription from server didn't have a predicate
Subscription from server didn't have a zone id
com.apple.hardcoded.bundleid
Unknown lookup field in CKUserIdentityLookupInfo: %ld
overriddenContainerScopedUserID
T@"NSString",C,N,V_overriddenContainerScopedUserID
packageStagingDirectory
T@"NSString",C,N,V_packageStagingDirectory
downloadPreauthorizationMap
T@"NSMutableDictionary",&,N,V_downloadPreauthorizationMap
dontCreateValidatingParentReferences
TB,N,V_dontCreateValidatingParentReferences
pUserID
T@"CKDPIdentifier",R,N
Tq,R,N,V_databaseScope
identityDelegate
T@"<CKDProtocolTranslatorIdentityDelegate>",W,N,V_identityDelegate
discoverableTrinary
Tq,N,V_discoverableTrinary
T@"NSString",C,N,V_bundleID
/api/client/container/getBundles
RecordType
ZoneID
PCSData
Etag
KeyID
ParentID
RecordZoneID
RecordShareID
ChainPCS
ChainPrivateKey
PublicSharingKey
ChainParentPublicKeyID
ZoneishPublicKeyID
ZoneishPCSData
PublicPCSData
PublicPCSEtag
MyParticipantPCS
MyParticipantPermission
MyParticipantType
PublicPermission
ShareEtag
ServiceType
itemID=%@, etag=%@
, pcs=%@
, pcsData=%@
pcsKeyID
T@"NSString",&,N,V_pcsKeyID
T@"<NSSecureCoding>",R,N
T^{_OpaquePCSShareProtection=},N,V_pcs
T@"NSString",C,N,V_etag
T@"NSData",C,N,V_pcsData
, encryptedChainPCSPrivateKey=%@
encryptedChainPCSPrivateKey
T@"CKEncryptedData",R,N,V_encryptedChainPCSPrivateKey
, recordType=%@
, chainPCSData=%@
parentID
T@"CKRecordID",&,N,V_parentID
chainParentPublicKeyID
T@"NSData",&,N,V_chainParentPublicKeyID
T@"CKDZonePCSData",&,N,V_zonePCSData
zoneishPublicKeyID
T@"NSData",&,N,V_zoneishPublicKeyID
T@"CKRecordID",&,N,V_shareID
chainPCSData
T@"CKDChainPCSData",&,N,V_chainPCSData
encryptedPublicSharingKey
T@"CKEncryptedData",&,N,V_encryptedPublicSharingKey
zoneishPCSData
T@"NSData",C,N,V_zoneishPCSData
, publicPCS=%@
, publicPCSData=%@
, publicPCSEtag=%@
, shareEtag=%@
serviceType
TQ,N,V_serviceType
publicPermission
Tq,N,V_publicPermission
myParticipantRole
Tq,N,V_myParticipantRole
myParticipantPermission
Tq,N,V_myParticipantPermission
myParticipantPCS
T^{_OpaquePCSShareProtection=},N,V_myParticipantPCS
myParticipantPCSData
T@"NSData",C,N,V_myParticipantPCSData
invitedPCS
publicPCS
T@"NSString",C,N,V_publicPCSEtag
T@"NSData",C,N,V_publicPCSData
hasDiscoverable
TB,N,V_discoverable
hasPath
hasUser
T@"CKDPRecord",&,N,V_user
CKAssetVolume
volumeIndex=%@
volumeUUID=%@
T@"NSNumber",&,N,V_volumeIndex
volumeUUID
T@"NSUUID",&,N,V_volumeUUID
v24@?0@"CKDLongLivedClientProxy"8^B16
appBundleID/sourceAppID=%@/%@
perform%@:withBlock:
badgeValue
TQ,R,N,V_badgeValue
-[CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptionsHeaderInfo writeTo:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Protocol/Source/CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptionsHeaderInfo.m
hasServiceType
Ti,N,V_serviceType
hasConfig
T@"CKCDPCodeServiceRequestServiceClientConfig",&,N,V_config
PUSH
DATABASE
CONTENT
CALDAV
ESCROWPROXY
/api/client/privacy/user_batch_lookup
duration
queueing
bytesUploaded
bytesDownloaded
connections
connectionsCreated
recordsUploaded
recordsDownloaded
recordsDeleted
assetsUploaded
assetsUploadedFileSize
assetsDownloaded
assetsDownloadedFileSize
retries
requestCount
requestOperationCountsByType
totalBytesByChunkProfile
chunkCountByChunkProfile
fileCountByChunkProfile
CloudKitMetrics
startDate=%@, duration=%0.3f, queueing=%0.3f, executing=%0.3f, bytesUploaded=%lu, bytesDownloaded=%lu, requests=%lu, connections=%lu, connectionsCreated=%lu
T@"NSDate",R
Td,R
T@"NSMutableDictionary",R
T@"NSMutableSet",R
rangesCopy
T@"NSArray",R
T@"NSDate",&,V_startDate
Td,V_duration
Td,V_queueing
Td,V_executing
TQ,V_bytesUploaded
TQ,V_bytesDownloaded
TQ,V_connections
TQ,V_connectionsCreated
TQ,V_recordsUploaded
TQ,V_recordsDownloaded
TQ,V_recordsDeleted
TQ,V_assetsUploaded
TQ,V_assetsUploadedFileSize
TQ,V_assetsDownloaded
TQ,V_assetsDownloadedFileSize
TQ,V_requestCount
TQ,V_retries
T@"NSMutableSet",R,V_requestUUIDs
T@"NSMutableDictionary",&,N,V_requestOperationCountsByType
T@"NSMutableDictionary",&,N,V_totalBytesByChunkProfile
T@"NSMutableDictionary",&,N,V_chunkCountByChunkProfile
T@"NSMutableDictionary",&,N,V_fileCountByChunkProfile
(UNKNOWN)
Executing
Queueing
Other
startDate=%@, duration=%0.3f, state=%@
operationState
absoluteStart
absoluteStop
TQ,R,V_operationState
Td,R,V_duration
relativeStart
cloudKitMetrics=%@
MMCSMetrics=%@
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/ProtectedCloudStorage/CKDProxyPCSManager.m
-[CKDPCSManager %@] was called in a container that should never ever ever use PCS.
PCSManagerSuperclass
T#,&,N,V_PCSManagerSuperclass
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/CKDCacheBasedRequest.m
You need to override this method in a child class: %@ (called object is %@)
T@"CKDKeyValueDiskCache",W,N,V_cache
lookupService
T@"CKDPublicIdentityLookupService",W,N,V_lookupService
fetchBatchSize
TQ,N,V_fetchBatchSize
T@"CKDPUser",&,N,V_user
T@"CKDPIdentifier",&,N,V_value
Invalid values in record
The record could not be encoded because it has invalid values
T@"NSArray",&,N,V_records
oplock
TB,N,V_oplock
sendAllFields
TB,N,V_sendAllFields
T@"NSData",&,N,V_clientChangeTokenData
requestedFieldsByRecordID
T@"NSDictionary",&,N,V_requestedFieldsByRecordID
recordByRequestID
T@"NSMutableDictionary",&,N,V_recordByRequestID
recordPostedBlock
T@?,C,N,V_recordPostedBlock
%@ [%@]
requestTime
T@"NSDate",&,N,V_requestTime
requestMethod
T@"NSString",&,N,V_requestMethod
requestURL
T@"NSURL",&,N,V_requestURL
requestHeaders
T@"NSDictionary",&,N,V_requestHeaders
bodyStreamResetCount
Tq,N,V_bodyStreamResetCount
requestObjects
T@"NSArray",&,N,V_requestObjects
responseStatus
Tq,N,V_responseStatus
T@"NSDictionary",&,N,V_responseHeaders
responseObjects
T@"NSArray",&,N,V_responseObjects
responseTime
T@"NSDate",R,N,V_responseTime
serializationFormat
clientConfig
accountConfig
requestContext
hasSerializationFormat
Ti,N,V_serializationFormat
clientConfigs
T@"NSMutableArray",&,N,V_clientConfigs
hasAccountConfig
T@"CKCDPCodeServiceRequestAccountConfig",&,N,V_accountConfig
hasRequestContext
T@"CKCDPCodeServiceRequestRequestContext",&,N,V_requestContext
T@"CKCDPCodeServiceRequestAssetAuthorizeGetRequestOptions",&,N,V_assetAuthorizeGetRequestOptions
T@"CKCDPCodeServiceRequestProtectedCloudComputeMetadata",&,N,V_protectedCloudComputeMetadata
PROTO
JSON
changedZones
T@"NSMutableArray",&,N,V_changedZones
hasPendingChanges
syncComplete
clientVersionETagMatch
hasClientVersionETagMatch
TB,N,V_clientVersionETagMatch
-[CKDVolume initWithVolumeUUID:deviceID:mountToPath:]
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/Assets/CKDVolume.m
volumeUUID && deviceID && "volumeUUID && deviceID"
mountToPath=%@
mountToPath
T@"NSString",&,N,V_mountToPath
zone=%@
recordCount=%llu
isPackageSectionBatch
T@"NSMutableArray",&,N,V_assetRecords
assetZone
T@"CKDAssetZone",&,N,V_assetZone
isFailed
TB,N,V_isFailed
T@"CKDAssetTokenRequest",W,N,V_assetTokenRequest
allRereferenceMMCSItems
useMMCSEncryptionV2
TB,N,V_useMMCSEncryptionV2
allRegularAndSectionAndRereferenceItems
Fetch Asset Metadata
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/Operations/CKDRepairAssetsOperation.m
recordIDToUUID can never produce a nil value here
payload
Expected non-nil asset or package in %@
Expected non-nil metadata for asset or package %@ in %@
Wrong amount of repair records to update: %ld
Updating multiple records currently not supported
UUIDToAssetOrPackage
T@"NSDictionary",&,N,V_UUIDToAssetOrPackage
assetOrPackageUUIDToMetadata
T@"NSDictionary",&,N,V_assetOrPackageUUIDToMetadata
unavailableAssetsAndPackages
T@"NSArray",&,N,V_unavailableAssetsAndPackages
T@"CKDOperation",&,N,V_fetchOperation
uploadOperation
T@"CKDOperation",&,N,V_uploadOperation
updateOperation
T@"CKDOperation",&,N,V_updateOperation
assetOrPackageUUIDToOriginalRecord
T@"NSMutableDictionary",&,N,V_assetOrPackageUUIDToOriginalRecord
assetOrPackageUUIDToUploadError
T@"NSDictionary",&,N,V_assetOrPackageUUIDToUploadError
uploadedAssetOrPackageUUIDs
T@"NSSet",&,N,V_uploadedAssetOrPackageUUIDs
assetOrPackageRepairedBlock
T@?,C,N,V_assetOrPackageRepairedBlock
hasCachedTotalBytes
TB,N,V_hasCachedTotalBytes
hasCachedCompletedBytes
TB,N,V_hasCachedCompletedBytes
cachedTotalBytes
TQ,N,V_cachedTotalBytes
cachedCompletedBytes
TQ,N,V_cachedCompletedBytes
completedBytesByItems
T@"NSMapTable",&,N,V_completedBytesByItems
trackingID
T@"NSString",&,N,V_trackingID
lastItemPercentage
Td,N,V_lastItemPercentage
You must call -[%@ initWithContext:]
com.apple.cloudkit.pcs.fetchAggregator
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/ProtectedCloudStorage/CKDPCSFetchAggregator.m
I am my parent?
Record with ID %@ is not a share
T@"NSObject<OS_dispatch_queue>",&,N,V_opQueue
T@"NSOperationQueue",&,N,V_queue
queuedFetches
T@"NSMutableArray",&,N,V_queuedFetches
runningFetches
T@"NSMutableArray",&,N,V_runningFetches
timerSource
T@"NSObject<OS_dispatch_source>",&,N,V_timerSource
/api/client/zone/sync
maxChangedZones
hasMaxChangedZones
TI,N,V_maxChangedZones
fetchArchivedRecords
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/Operations/CKDFetchArchivedRecordsOperation.m
Not expected to get here
v32@?0@"CKRecordZoneID"8@"CKDFetchArchivedRecordsRequestOperationResult"16^B24
CKAssetHandle
lastUsedTime
modTime
UnDefInEd
registering
uploading
registered
downloading
downloadInterrupted
downloadWaiting
unregistering
cachedNotRegistered
UUID=%@
lastUsedTime=%lld
status=%@
modTime=%ld
fileSize=%lld
chunkCount=%u
%@: %@ != %@
T@"NSNumber",&,N,V_itemID
T@"NSUUID",&,N,V_UUID
T@"NSNumber",&,N,V_lastUsedTime
T@"NSNumber",&,N,V_status
T@"NSNumber",&,N,V_modTime
T@"NSNumber",&,N,V_fileSize
T@"NSNumber",&,N,V_chunkCount
databaseEnvironment
databaseType
deviceId
applicationBundleId
databasePartition
clientInfo
userAgent
operationGroup
T@"NSString",&,N,V_userId
hasDatabaseEnvironment
Ti,N,V_databaseEnvironment
hasDatabaseType
Ti,N,V_databaseType
hasDeviceId
T@"NSString",&,N,V_deviceId
hasApplicationBundleId
T@"NSString",&,N,V_applicationBundleId
hasDatabasePartition
Ti,N,V_databasePartition
hasClientInfo
T@"NSString",&,N,V_clientInfo
hasDsid
TQ,N,V_dsid
hasUserAgent
T@"NSString",&,N,V_userAgent
hasOperationGroup
T@"CKCDPCodeServiceRequestOperationGroup",&,N,V_operationGroup
privateDatabase
publicDatabase
sharedDatabase
orgDatabase
notificationIDsByRequestID
T@"NSMutableDictionary",&,N,V_notificationIDsByRequestID
notificationMarkedReadProgressBlock
T@?,C,N,V_notificationMarkedReadProgressBlock
TQ,N,V_version
upgradeFunction
T^?,N,V_upgradeFunction
shouldVacuum
TB,N,V_shouldVacuum
shouldTruncateDatabase
TB,N,V_shouldTruncateDatabase
vacuum;
Something went really wrong with the cache: %@
v32@?0@"PQLConnection"8@"PQLStatement"16@"NSError"24
PCSCache-%lu
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/ProtectedCloudStorage/CKDPQLCache.m
We don't have a serial queue yet. What gives?
-shm
-wal
Trying to perform something on the db queue but it doesn't exist yet
You must implement %@
dbQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_dbQueue
openHandles
TQ,N,V_openHandles
contexts
T@"NSHashTable",R,N,V_contexts
database
T@"PQLConnection",R,N,V_pdb
isOpen
createInitialTablesSQL
com.apple.CloudKit.PCSCache.dbQueue
T@"NSArray",&,N,V_recordZonesToSave
T@"NSDate",&,N,V_lastMissingManateeIdentityErrorDate
recordZoneModifiedBlock
T@?,C,N,V_recordZoneModifiedBlock
Invalid record zone
The record zone could not be converted because it is invalid: %@
zoneIDByRequestID
T@"NSMutableDictionary",&,N,V_zoneIDByRequestID
recordZones
T@"NSArray",R,N,V_recordZones
recordZoneFetchedBlock
T@?,C,N,V_recordZoneFetchedBlock
metadata
T@"CKUploadRequestMetadata",C,N,V_metadata
assetBrokenBlock
T@?,C,N,V_assetBrokenBlock
/api/client/shareVetting/initiate
hasEncryptedKey
hasBaseToken
T@"NSString",&,N,V_baseToken
isRead
dialog
sound
hasIsRead
TB,N,V_isRead
hasSource
Ti,N,V_source
hasDialog
T@"NSString",&,N,V_dialog
hasSound
T@"NSString",&,N,V_sound
Ti,N,V_badgeCount
hasPayload
T@"NSData",&,N,V_payload
SHARING
CKRPC
T@"NSMutableArray",&,N,V_cancelTokens
create table if not exists PushTokens (
    appBundleIdentifier       text,
    sourceAppBundleIdentifier text,
    containerIdentifier       text,
    containerEnvironment      integer,
    apsToken                  blob,
    apsEnvironment            text,
    expirationDate            real,
    accountID                 text,
    unique (appBundleIdentifier, sourceAppBundleIdentifier, containerIdentifier, containerEnvironment, accountID) on conflict replace
create table if not exists AppBundle (
    appBundleIdentifier                       text,
    sourceAppBundleIdentifier                 text,
    apsEnvironment                            text,
    isApplication                             integer,
    isCKSystemService                         integer, 
    appIdentifier                             text, 
    canMasquerade                             integer, 
    canSetEnvironment                         integer, 
    allowCustomAccounts                       integer, 
    clientPrefix                              text, 
    pushBundleID                              text, 
    associatedApplicationBundleID             text,
    applicationContainerPath                  text,
    canAccessProtectionData                   integer, 
    canAccessZoneProtectionData               integer, 
    canSetDeviceIdentifier                    integer, 
    hasAccessDuringBuddy                      integer, 
    hasLightweightPCS                         integer, 
    hasTCCAuthorization                       integer, 
    allowsPowerNapScheduling                  integer, 
    isOOPUI                                   integer, 
    allowsParticipantPII                      integer, 
    displaysSystemAcceptPrompt                integer, 
    entitlementPCSServiceName                 text, 
    canUseNonLegacyShareURL                   integer, 
    allowUnverifiedAccount                    integer, 
    canSetExplicitCodeOperationURL            integer, 
    unique (appBundleIdentifier, sourceAppBundleIdentifier) on conflict replace
create table if not exists Container (
    containerIdentifier         text primary key,
    containerEnvironment        integer,
    publicCloudDBURL            text,
    publicShareServiceURL       text,
    publicDeviceServiceURL      text,
    publicCodeServiceURL        text,
    publicMetricsServiceURL     text,
    publicDatabaseRPCServiceURL text,
    scopedUserID                text,
    orgAdminUserID              text,
    accountID                   text,
    expirationDate              real,
    unique (containerIdentifier, containerEnvironment, accountID) on conflict replace
 create table if not exists AppContainerIntersection (
    appBundleIdentifier         text,
    sourceAppBundleIdentifier   text,
    personaID                   text,
    containerIdentifier         text,
    containerEnvironment        integer,
    tokenRegistered             integer,
    accountID                   text,
    unique (appBundleIdentifier, sourceAppBundleIdentifier, personaID, containerIdentifier, containerEnvironment, accountID) on conflict replace
create table if not exists ServerConfiguration (
     valuesData            blob,
     expiry                real
create table if not exists VerifiedPublicKey (
     keyType          text,
     keyID            text,
     publicKey        blob,
     keyVersion       integer,
     keyExpiration    integer,
     keyCert          blob,
     unique (keyType, keyID) on conflict replace
PushTokens
AppBundle
Container
AppContainerIntersection
ServerConfiguration
VerifiedPublicKey
apsEnvironment
isApplication
isCKSystemService
appIdentifier
canMasquerade
canSetEnvironment
allowCustomAccounts
clientPrefix
pushBundleID
hasAccessDuringBuddy
hasLightweightPCS
isOOPUI
allowsParticipantPII
displaysSystemAcceptPrompt
entitlementPCSServiceName
canUseNonLegacyShareURL
allowUnverifiedAccount
canSetExplicitCodeOperationURL
scopedUserID
tokenRegistered
keyType
keyID
keyVersion
keyExpiration
keyCert
lastTokenUpdate
Tq,N,V_tokenRegistered
Tq,N,V_isApplication
TB,N,V_isCKSystemService
TB,N,V_canMasquerade
TB,N,V_canSetEnvironment
TB,N,V_allowCustomAccounts
TB,N,V_canAccessProtectionData
TB,N,V_canAccessZoneProtectionData
TB,N,V_canSetDeviceIdentifier
TB,N,V_hasAccessDuringBuddy
TB,N,V_hasLightweightPCS
TB,N,V_hasTCCAuthorization
TB,N,V_isOOPUI
TB,N,V_allowsParticipantPII
TB,N,V_displaysSystemAcceptPrompt
applicationIdentifier
T@"NSString",&,N,V_applicationIdentifier
T@"NSString",&,N,V_clientPrefix
T@"NSString",&,N,V_pushBundleID
T@"NSString",&,N,V_associatedApplicationBundleID
TB,N,V_canUseNonLegacyShareURL
TB,N,V_allowUnverifiedAccount
TB,N,V_canSetExplicitCodeOperationURL
CloudKitMetadata
com.apple.cloudkit.metadatacache
%@ = ? AND %@ = ? AND %@ = ? AND %@ = ? AND %@ = ?
AND %@ > ?
%@ = ? AND %@ = ? AND %@ = ? AND %@ = ? AND %@ = ? AND %@ = ?
%@ = ? AND %@ = ?
%@ = %@
%@ IS NOT NULL AND %@ != ""
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/CKDMetadataCache.m
Must specify both key type and key identifier
Unique constraint violation in public key table
%@ = ? AND %@ = ? AND %@ = ?
Missing required info on %@
Couldn't unwrap asset key for publishing
Couldn't find clear asset key for publishing
/BuildRoot/Library/Caches/com.apple.xbs/Sources/CloudKitTools_Sim/CloudKit-852/Daemon/Assets/CKDAssetExtensions.m
Unhandled code path.
1234
alert
shouldBadge
additionalFields
shouldSendContentAvailable
shouldSendMutableContent
collapseIdKey
hasAlert
T@"CKDPSubscriptionNotificationAlert",&,N,V_alert
hasShouldBadge
TB,N,V_shouldBadge
T@"NSMutableArray",&,N,V_additionalFields
hasShouldSendContentAvailable
TB,N,V_shouldSendContentAvailable
hasShouldSendMutableContent
TB,N,V_shouldSendMutableContent
hasCollapseIdKey
T@"NSString",&,N,V_collapseIdKey
hasEncryptedPublicSharingKey
T@"NSData",&,N,V_encryptedPublicSharingKey
com.apple.security.octagon.trust-status-change
com.apple.cloudkit.account.manateeStatusQueue
Error: %@
manateeAvailableForLoggedInAccount
Tq,N,S_lockedSetManateeAvailableForLoggedInAccount:,V_manateeAvailableForLoggedInAccount
lastCDPError
T@"NSError",C,N,V_lastCDPError
PCCPinnedVerificationDisabled
PCCPinnedVerificationHashes
T^{pcc_wrapped_invocation_key=*Q},V_wrappedInvocationKey
T@"NSData",&,V_routingToken
certificate
T@"NSString",&,N,V_certificate
applicationEnclaveQuote
T@"NSData",&,N,V_applicationEnclaveQuote
quotingEnclaveQuote
T@"NSData",&,N,V_quotingEnclaveQuote
secret
T^{pcc_invocation_key=[32C]},V_secret
Purging old cache directory at %@
Failed to convert pRecord %@ : %@
Adding recordID %@ with etag %@ to cache
Expiring all cached records with an expiration date before "%@" (%llu) for database at %@
Database at %@ is over the size limit by %lu bytes. Finding records to clean up.
Deleting %lu records from the database at %@ to get it back under the size limit
recordCacheExpiry
Error creating record cache dir at %@: %@
Ingesting manatee sharing invitation data for share %@
Setting per-participant PCS on self participant: %@
Didn't get any pre-decrypted share PCS for share %@
Error setting PCS data for share %@ in the cache: %@
Got a shared zone %@ to prep PCS for share %@
Warn: Couldn't create share PCS data: %@
Need to remove %lu public key(s) from the private share PCS: %@
Decrypting shared zone PCS data for share %@
Couldn't encrypt participant properties %@
Couldn't decrypt participant properties %@
Decrypted PII was empty
Decrypted PII was of unexpected class %{public}@
%@ in %@
Error opening PCS SQL cache at %@: %@
PCS data for %@ was found in the cache, but it doesn't have chain PCS data and the client requested that. Fetching from the server.
Client requested fetch of parent PCS data for item %@, but the returned item type doesn't support chain PCS data.
PCS data for %@ was found in the cache, but it doesn't have zoneish PCS data and the client requested that. Fetching from the server.
Client requested fetch of zoneish PCS data for item %@, but the returned item type doesn't support zoneish PCS data. Returning item data anyway since it isn't a zone PCS.
Returning in-memory cached PCS data for item %@: %@
Not adding callback to existing fetch operation %{public}@ for operation %{public}@ as it would create a dependency cycle
Adding callback to existing fetch operation %{public}@ for operation %{public}@
Creating a new fetch operation for %@
Fetch operation %{public}@ for item %@ finished with error: %@
Fetch operation %{public}@ for item %@ finished with PCS data %@
Fetching PCS for record %@ for operation %{public}@ with options %@
Fetching PCS for zone %@ for operation %{public}@ with options %@
Fetching PCS for share %@ for operation %{public}@ with options %@
Setting record PCS data %@ for %@ on our in-memory cache
Setting zone PCS data %@ for %@ on our in-memory cache
Setting share PCS data %@ for %@ on our in-memory cache
Clearing all PCS caches
Clearing memory-based PCS caches
Clearing invalidated PCS SQL cache entries
xpcConnection
New connection from client %@
Connection to client %@ was interrupted
Client %@ has gone away
Found outstanding operation ID %{public}@
Will%@ enqueue outstanding operation ID %{public}@ for retry number %ld. Seconds since last retry:%ld
Starting outstanding operation ID %{public}@ for context %@
Forgetting all about operation %{public}@
Couldn't fetch client entitlements across xpc connection %@ because we couldn't get a security task.
Couldn't fetch client entitlements across xpc connection %@ because we got an error from Security: %@
Client "%@" has entitlement to use openByID
Client "%@" has entitlement to allow access during buddy.
Client "%@" has entitlement to use packages. Good luck!
Waiting for system to become available before starting %@
TCC database changed. Clearing cached TCC info
Device is not past buddy and client does not have entitlement to bypass.
Device hasn't been unlocked since boot.
This client requested that we hold all its operations.
System is available. Starting work queue for %@
System is unavailable. Stopping work queue for %@
Flushing operation queue for %@
Cancelling all operations for %@
Waiting for all operations on the cloudkit service queue to finish for %@
Waiting for all operations on the background more operations queue to finish for %@
Waiting for all operations to finish for %@
Finished flushing operation queue for %@
Consulting TCC for access for proxy %@...
TCC %@ access for proxy %@
Found cached TCC %@ for proxy %@
Couldn't fetch application entitlements over XPC connection %@ for client proxy %@. %@
Using wrapping app bundle id %@ for extension %@ when registering push tokens
Couldn't determine wrapping app bundle for extension %@
Giving %@ blanket access to any container
Allowing %@ to set sourceApplicationBundleIdentifier on operation to prefixed value '%@'
Connection %@ is not allowed to set an operation sourceApplicationBundleIdentifier to %@
Connection %@ is not allowed to set an operation sourceApplicationSecondaryIdentifier to %@
Writing down long-lived operation %{public}@ for context %@
Account status is %@
Returning account status to client: %@%@%@
Returning account info to client: %@%@%@
Permission status: %d (global: %d)
Operation <%{public}@: %p; %{public}@, %@> completed with result <%{public}@: %p; %{public}@, %@>
Deleting all cached info for operation %{public}@
Operation %{public}@ hit a checkpoint with arguments %@
Couldn't get the remote object proxy: %@
Sending user identity to client: %@
Sending save completion to client: %@
Sending delete completion to client: %@
Sending fetch record zones progress to client: %@
Sending zone-was-updated progress to client for operation %{public}@ with arguments: %@
Sending zone-was-deleted progress to client for operation %{public}@ with arguments: %@
Sending zone-was-purged progress to client for operation %{public}@ with arguments: %@
Sending change token update progress to client for operation %{public}@ with arguments: %@
Sending record save progress to client for operation %{public}@
Sending records in flight progress to client for operation %{public}@ with arguments: %@
Sending record save completion to client for operation %{public}@ with arguments (sans record): %@
Sending delete completion to client for operation %{public}@ with arguments: %@
Sending upload completion to client for operation %{public}@ with arguments: %@
Sending fetch completion to client for operation %{public}@ with arguments (sans record): %@
Sending record fetch command to client for operation %{public}@ with arguments: %@
Sending record fetch completion to client for operation %{public}@ with arguments (sans record): %@
Sending record changed progress to client for operation %{public}@ with arguments (sans record): %@
Sending fetch record version progress to client: %@
Sending archived record progress to client for operation %{public}@ with arguments (sans record): %@
Sending archive record progress to client for operation %{public}@ with arguments: %@
Sending asset published progress to client: %@
Sending asset published completion to client
Sending asset repair progress to client: %@
Sending asset repair completion to client
Sending mark asset broken progress to client: %@
Sending simulate break asset completion to client
Rejecting message %@ due to missing entitlement: %@
Sending record web sharing progress to client: %@
Sending record web unsharing progress to client: %@
Sending record web sharing completion to client
Warn: Couldn't create a web sharing identity for client %@: %@
Warn: Couldn't convert web sharing identity to data for client %@: %@ (identity was %@)
Successfully created a web sharing identity for %@: %@
Sending record access grant progress to client: %@
Sending record access revoke progress to client: %@
Sending record access modification completion to client
Sending query progress to client for record %@
Sending query cursor update progress to client for operation %{public}@ with arguments: %@
Sending fetch subscription progress to client: %@
Sending notification changed progress to client for notification %@
Sending notification mark-read progress to client: %@
Sending accept share progress to client: %@
Sending share metadata progress to client: %@
Sending vetting completion progress to client for operation %{public}@ with arguments: %@
Sending verify share vetting progress to client: %@
Sending share participant key fetch progress to client: %@
Fetched PCS for share, but result had no invitedPCS?
Vetting initiation is done for share metadata %@, error is %@
Asking client to replace record archives: %@
After replacing record archives, client returned serialized request: %@
Asking client to deserialize initial response: %@
After deserializing initial response, client returned wire serializations: %@
Asking client to replace wire transport blobs: %@
Rejecting message %@ due to missing entitlement (%@)
accountsDidGrantAccessToBundleID:%@ containerIdentifiers:%@
accountsDidRevokeAccessToBundleID:%@ sourceApplicationBundleID:%@ containerIdentifiers:%@
accountsWillDeleteAccount:%@
Will not unregister any push token as we're in Buddy
Resetting TCC access
%@ : %@ -> %@
Tossing client configuration
Returning boundary key to client: %@%@%@
Scheduling a cancel of all operations
Cancelling all operations
Connection "%@" is not entitled to use fake entitlements.
Setting up the client context for connection "%@", bundleIdentifier:%@, containerID:%@, proxy:%@
The application on the other end of %@ is trying to use a custom account but it doesn't have the right entitlement. Denying connection.
The application on the other end of %@ is missing an appropriate entitlement value for "%@" and/or "%@".  This is a permanent issue, and access to CloudKit will be denied until this is resolved.
Giving %@ access to containers with prefix '%@'
Connection "%@" is not allowed to set its bundleID to %@
The application on the other end of %@ has an incorrectly formatted entitlment value for "%@".
Allowing %@ to set any environment
Client "%@" requested sandbox environment for all containers
Client "%@" has a malformed value "%@" for entitlement %@
Connection %@ is not entitled to use CloudKit
Client "%@" requested sandbox environment for container id %@
Client "%@" tried to access environment "%@", even though the entitlements specified "%@"
Client "%@" changed containerID from "%@" to "%@"
Client "%@" setting containerID to "%@"
Sending sandbox extensions to client...
Error sending sandbox extensions to client: %@
Finishing the client context setup for %@, proxy:%@
Failed to setup sandbox extensions for container %@:%@
Setup sandbox %lu extensions for container %@
Clearing the asset cache for context %p
Clearing the record cache for context %p
Clearing the persisted PCS cache for context %p
Clearing the in-memory PCS cache for context %p
Clearing the container info cache
Getting PCS diagnostics for all zones
Getting Record PCS diagnostics for all zones
Repairing PCS data for all zones
Repairing PCS data for zones %@
Sending zone PCS diagnostic progress to client: %@
Removing cache at %@
It's time for cloudd to die...
Triggering AutoBugCapture snapshot
Failed to set up client context for CKEventMetric %@. %@
Daemon submitting CKEventMetric %@.
Daemon submitted CKEventMetric %@.
Creating a new client context (%p) with appContainerTuple:%@, accountInfo:%@, proxy:%@
Client context (%p) for container %@ (%@) is forcing manatee to be enabled. Weird stuff might happen- you've been warned!
old pathname overlaps with new pathname %@
Purging %@ directory at %@
Registering context %p for account-change-notification
Context %p clearing caches for deletion of account %@
Clearing the container info cache for context %p
applicationBundleID:%@, installed:%@, containerPath:%@, applicationBundlePath:%@, currentPersona:%@
Searching for a shared context that matches %@
Found a cached client context %@
Cancelling all long-lived operations for stale context %@
Removed a stale client context %@
Created a new client context with appContainerTuple:%@, accountInfo:%@, proxy:%@: %@
Reloading the account for context %p - the previous account was %@
Loaded account %@ with account-info:%@
Couldn't load an account for container %@ with account-info: %@
The account identifier changed from %@ to %@ - posting an account changed notification and cancelling all outstanding operations
%@ dataclass disabled, denying access
Checking TCC authorization for with %lu prox%@.
TCC rejected a token for proxy:%@
Bundle %@ isn't authorized for CloudKit, denying access
%@, cachesPath:%@
Failed to create directory for "%@" at %@: %@
Created directory for "%@" at %@
Sandbox extensions %@needed for %@, proxy: %@, proxyIsSandboxed: %@, hasDataContainer: %@
Failed to issue sandbox extension for applicationBundleID=%@ and path=%@: %@
Issued sandbox extension token for "%@" at %@
Prematurely failing request <%{public}@: %p; %{public}@, %@> with error %@ because that's what you asked for
A fake response is being tracked that has an invalid lifetime of %li
Asking URL Request <%{public}@: %p; %{public}@, %@> to return fake operation result %@
Identity cache expiration timeout is %f sec (cache is %p)
Configuration updated. New flow control budget is %lu and new regeneration rate is %f. Maximum throttle time is %f
Skipping client context setup for %@ with long-lived proxy %@
First time setup for context %@ with proxy %@
apsEnvironment:%@, applicationBundleID:%@
Client "%@" has entitlements setting push environment to "%@"
apsEnvironment:%@, isSystemService:%d, applicationBundleID:%@
Prepared context %@ asked to setup again with proxy %@
Using custom url override of %@
Couldn't pull url from backing account %@ or context %@
Couldn't get a private URL. Fetching updated account properties
%@: Initializing PCS Manager before CKDClientContext finished setup with proxy. encryptionServiceName=%@
MMCS setup failed:%@
No MMCS for %@
No assetCache MMCS for %@
Clearing asset cache for %@
Showing all known asset caches
Clearing record cache for %@
Clearing record cache for %@ with scope %@
Clearing auth tokens for record %@
pcsMemoryCacheEvict
Flushing all PCS memory caches
Attempting to evict %lu items from PCS memory cache %p
Evicted %lu items from PCS memory cache %p
Returning PCS data from in-memory cache for item %@: %@
Found a memory cache entry for %@ but it has no decrypted data. Removing it.
Setting PCS data for item %@ in the in-memory cache
Removing PCS data for item %@ in the in-memory cache
Clearing all entries in PCS cache %p
init, reader:%p
dealloc, reader:%p
range %@ overlaps with previous range
Can't open %@ cache at %@: %@
Can't close db %@: %@
Can't GC cache: %@
Garbage collected %ld items from cache
Can't set a null value: is that what you really want? Assuming remove
Can't insert or update cache: %@
Can't read cache: %@
[Operation %p] Initialized with context %p. Background: %d, cellular: %d, QOS: 0x%x
daemon/?
[Operation %p] Setting parent operation to %p
[Operation %p] Adding child operation %p
Adding child operation %{public}@ to parent operation %{public}@
Child operation %{public}@ was added to parent %{public}@ but the parent has no proxy or operation queue to run that operation on
[Operation %p] Operation was cancelled before it could start
[Operation %p] Continuing operation start
Invoking main for operation <%{public}@: %p; %{public}@, %@>
Notifying operation info cache of an attempt for long-lived operation %{public}@
[Operation %p] Checking application version
[Operation %p] Application version is not allowed by the server
[Operation %p] Couldn't get server configuration
[Operation %p] Determining Network Service Types
Determining Network Service Types
Determined Network Service Type %@
Using pre-determined Network Service Type %@
[Operation %p] Starting operation
Starting <%{public}@: %p; %{public}@, %@>
[Operation %p] Operation is already cancelled and finished but it tried to start again
<%{public}@: %p; %{public}@, %@> is already cancelled and finished but it tried to start again
[Operation %p] Operation was cancelled before it started
<%{public}@: %p; %{public}@, %@> was cancelled before it started
Not starting CKDOperation <%{public}@: %p; %{public}@, %@> due to flow control limiting, releases in %f seconds.
<%{public}@: %p; %{public}@, %@> Requires checking app version.  Doing so
main was called on CKDOperation
[Operation %p] Operation is finishing on callback queue with an error
[Operation %p] Operation is finishing on callback queue with no error
[Operation %p] Waiting for all child operations of finish
Waiting for all (%lu) child operations to finish for operation %{public}@
Finished waiting for all (%lu) child operations to finish for operation %{public}@
Operation %@ is waiting for its state transition lock holders to finish before it can complete
All state transition locks have been released. Finishing operation %@
[Operation %p] Operation is getting flow controlled due to a local error
[Operation %p] Operation has been rate limited. Setting retry-after to %lu
Finished operation <%{public}@: %p; %{public}@, %@> %@%@
[Operation %p] Operation was cancelled
Cancelling operation <%{public}@: %p; %{public}@, %@>
Operation %{public}@ transitioned from state [%@] to state [%@]
makeStateTransition was called on CKDOperation
[Operation %p] Operation transitioning from state %ld (cancelled=%d, stop=%d, error=%d)
Operation %{public}@ is transitioning from state [%@], stop:%@, cancelled:%@, error:%@
[Operation %p] Operation is now in state %ld
Operation %{public}@ is now in state [%@]
[Operation %p] Dropping power assertion %p for %p
Dropping power assertion %p for %p
Not dropping nil power assertion for %p
[Operation %p] Acquired power assertion %p for %p
Acquired power assertion %p for %p
Not acquiring power assertion for %p, I already have one
[Operation %p] Operation was marked as finished
[Operation %p] Operation marked as not finished
[Operation %p] Operation was marked as executing
[Operation %p] Operation marked as not executing
Operation %@ was assigned QoS greater than Utility but it has discretionary networking behavior. Demoting operation QoS to Utility.
[Operation %p] Request %p set on operation
Operation <%{public}@: %p; %{public}@>, setting current request from %@ to %@
Configured request <%{public}@: %p; %{public}@> for operation <%{public}@: %p; %{public}@>
Operation %@ sending CoreAnalytics event %@
Registering zone gate locks for ids %@ waiter %@
Can't immediately grant gate to %@ because zone %@ held by %@
CKDZoneGatekeeper
Relinquishing zone gate locks for waiter %@
Can't grant gate to waiter %@ because zone %@ held by %@
Granting gate to waiter %@
daemon/fetch-record-pcs-diagnostics
Checking Record PCS for %ld zones: %@
Done checking PCS for records in all zones
Error fetching zone %@: %@
Zone with ID %@ was fetched: %@
Done fetching zones
Starting fetch record PCS diagnostics operation <%{public}@: %p; %{public}@, %@>
daemon/query
fetchAllResults:%@ error:%@ resultsCursor:%@
Handling record response for record %@
The full record for %@ was fetched
Warn: Query <%{public}@: %p; %{public}@, %@> failed to fetch record %@: %@
Executing query with cursor %@
Query request <%{public}@: %p; %{public}@, %@> for operation %{public}@ finished with error %@
We're not done here. Sending another query with cursor %@
Record fetcher finished for query %p
Waiting for all record fetches to finish...
Zone PCS fetch operation %{public}@ received PCS data (%@/%@)%@%@
Zone PCS fetch operation %{public}@ already has PCS data %@. Ignoring the fetch callback with %@/%@
Fetching PCS data for zone %@ from the database
Error fetching PCS data from the database for %@: %@
Zone PCS data was fetched from the database but it didn't have the requested zoneish PCS. Fetching PCS data from the server for zone %@
PCS data was fetched from the database for zone %@
No PCS data was found in the database for zone %@
Not fetching zone-wide share PCS for zone %@ in the shared database since it has no shareID
Fetched PCS for share %@ in order to decrypt zone %@%@%@
Successfully saved PCS on zone: %@
Saved zone ID isn't what we expected: %@ (expected %@)
Updating zone %@ with new PCS object
Couldn't serialize zone PCS: %@
Couldn't serialize zoneish PCS: %@
Saving new PCS on default zone %@
Couldn't create new zone PCS: %@
Couldn't create new zoneish PCS: %@
Couldn't decode PCS data: %@
Couldn't decode zoneishPCS data: %@
Saved zoneishPCS is %@. Key ID is %@
Save of new PCS object to zone %@ was %@successful%@%@
Found a default zone with NULL PCS data. Creating new PCS data and saving it
Error fetching PCS data for zone %@ from the server: %@
Zone %@ in the shared database has no shareID, skipping decryption
Warn: Error with PCS data for zone: %@
Created a new zoneish PCS for zone %@: %@
We need to create a zoneish PCS but we don't have the zone PCS for zone %@
Warn: Error with zoneish PCS data for zone: %@
Error decrypting PCS for zone %@: %@
Saving new zoneish PCS to the server for zone %@
Error saving zoneish PCS to server for zone %@: %@
Resetting user privacy settings for %@
Failed to reset user privacy settings for %@: %@
daemon/queued-fetch
Error fetching item with ID %@: %@
Bulk fetched item with ID %@: %@.
Not starting fetch because this operation has already been cancelled
Starting aggregate fetch %@ with %d callbacks at QoS %@
Generating a batch of %ld records from index %ld
%{public}@ operation %@ finished%@%@.
Bulk record fetch operation %@ finished%@%@.
<%@: %p; %{public}@> Request Initializing
req: %{public}@, "%@, %@"
[Request %p] Not returning a request body stream because there are no items to stream
[Request %p] This request has too many operations: %lu/%lu
req: %{public}@, "Fetching auth token"
[Request %p] Preparing auth token
req: %{public}@, "Preparing auth token for request " "<%{public}@: %p; %{public}@, %@>"
[Request %p] Handling authentication failure
[Request %p] Auth failed but this request is already finished
[Request %p] Auth token acquired
req: %{public}@, "Auth token acquired. Retrying."
[Request %p] Couldn't get an auth token
req: %{public}@, "Warn: Couldn't renew an auth token- cancelling this request"
[Request %p] Auth token is bad and a retry has already been attemped
req: %{public}@, "Our token auth is bad and we've already retried it. Giving up on request %@"
[Request %p] Received a bad auth token error
req: %{public}@, "Our auth token is bad and we should feel bad."
[Request %p] Syntax error
req: %{public}@, "Syntax error in request"
req: %{public}@, "Server could not find any request operations in this request. Giving up."
[Request %p] Forbidden error
req: %{public}@, "Forbidden resource in request"
[Request %p] Expired app config
[Request %p] Expired global config
[Request %p] Received an unhandled error (%d) from the server
req: %{public}@, "Received error %d from the server: %@"
[Request %p] Received a server error (%d)
[Request %p] Plugin specific error
req: %{public}@, "Plugin error in request"
[Request %p] Auxiliary error
req: %{public}@, "Auxiliary error in request"
[Request %p] Unknown server error
req: %{public}@, "Received unknown error from the server: %@"
req: %{public}@, "Warn: Dropping protobuf result since we've alredy returned it to the client. This likely happened because of a request timeout."
[Request %p] Error parsing protobuf object
req: %{public}@, "Error parsing protobuf object: %@"
[Request %p] Node level failure encountered while parsing
[Request %p] Task level failure encountered while parsing
[Request %p] Successfully parsed JSON object
[Request %p] Failed to handle JSON response
req: %{public}@, "Warn: Failed to handle JSON response: %@"
[Request %p] Successfully parsed plist object
[Request %p] Failed to handle plist response
req: %{public}@, "Warn: Failed to handle plist response: %@"
req: %{public}@, "Warn: Ignoring nil value for header: %@"
req: %{public}@, "%@ attempted to send request %@ along with %@, but they hit different servers"
req: %{public}@, "%@ attempted to send request %@ along with %@, but they hit different partitions"
req: %{public}@, "Couldn't determine base URL for server type %ld partition type %ld off context info provider %@"
We have a CKDURLRequest with no owning operation.  Triggering ABC snapshot
url-request
[Request %p] Performing
req: %{public}@, "%@ Performing"
[Request %p] Request was cancelled before it started
[Request %p] This request requires an authenticated account
[Request %p] This request requires an authenticated account, the current account cannot auth with CloudKit
[Request %p] CloudKit access was denied by user settings
[Request %p] Getting URL for the app partition
req: %{public}@, "%@ Requires a url for the app partition, getting it"
[Request %p] Getting URL for the user partition
req: %{public}@, "%@ Requires a url for the user partition, getting it"
[Request %p] Getting configuration
req: %{public}@, "%@ Requires configuration, getting it"
[Request %p] Fetching important user IDs
req: %{public}@, "%@ allows a container scoped user id, seeing if we have one"
req: %{public}@, "Fetched container scoped user ID of %@ for dsid %@"
[Request %p] Getting device ID
req: %{public}@, "%@ Requires device id, getting it"
Not registering push token for anonymous account: %@
Not registering push token for account that can't auth: %@
[Request %p] Getting push token
req: %{public}@, "%@ Requires push token registration, doing so"
req: %{public}@, "isCKSystemService:%d"
req: %{public}@, "%@ Failed to get push token."
[Request %p] Getting zone gates
req: %{public}@, "%@ Requires zone id gates, grabbing them"
req: %{public}@, "Ignoring failure to acquire zone lock"
req: %{public}@, "Request was finished while waiting for auth tokens"
req: %{public}@, "Failed to fetch auth tokens, continuing with anonymous access"
req: %{public}@, "Encountered an error while fetching auth tokens: %@"
req: %{public}@, "Fetched auth tokens"
[Request %p] Validation error
req: %{public}@, "%@ Validation error: [%@]"
[Request %p] Request does not have a URL
req: %{public}@, "%@ Request does not have a URL. Failing."
req: %{public}@, "%@ URL: %@ (timeouts %.1lfs, %.1lfs)"
[Request %p] Performing request. Background=%d, cellular=%d
req: %{public}@, "Skipping authorization header field for dsid: %@, iCloudAuthToken: %@"
[Request %p] Streaming request body
req: %{public}@, "%@ Outgoing request body is streamed"
[Request %p] Request body is empty
req: %{public}@, "%@ Outgoing request body is empty"
req: %{public}@, "%@ using custom network service type %@"
[Request %p] Loading request %p
req: %{public}@, "%@: Starting request with URL session data task %@"
[Request %p] Cancelling request
%@, %@
%@, Cancelling the URL session data task %@ for request %@
[Request %p] Finishing request with no error
[Request %p] Finishing request with error %p
req: %{public}@, "%@, asked to finish %@ with error %@"
req: %{public}@, "Warn: %@, request %@ was already marked as finished"
req: %{public}@, "%@, will finish request %@ with error %@"
[Request %p] Calling completion block
[Request %p] Did finish
req: %{public}@, "%@, did finish request %@ with error %@"
[Request %p] Marking as finished
[Request %p] Tearing down resources
[Request %p] Releasing zone locks
%@ would've performed a block on the lifecycle queue but it was marked finished before it could.
req: %{public}@, "%@ ignoring spurious callback from task %@, which is not my task %@"
[Request %p] URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
req: %{public}@, "%@ URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:"
[Request %p] Task is getting redirected but automatic redirections are disabled.
req: %{public}@, "Task is getting redirected but automatic redirections are disabled.  Task: [%@]\nInitial request: [%@]\nProposed request: [%@]\nRedirect response: [%@]"
[Request %p] Request is being redirected between https and http. We're not falling for that one
[Request %p] Request is getting redirected
req: %{public}@, "%{public}@ %p Task is getting redirected: [%@]\nInitial request: [%@]\nProposed request: [%@]\nReconstructed request: [%@]\nRedirect response: [%@]"
req: %{public}@, "%@ ignoring spurious callback from task %@, which is not my session %@"
[Request %p] URLSession:dataTask:didReceiveResponse:completionHandler:
req: %{public}@, "%@ URLSession:dataTask:didReceiveResponse:completionHandler:"
req: %{public}@, "Warn: %@ sent request UUID %{public}@, received %{public}@"
req: %{public}@, "%@ Received response UUID:%{public}@, status:%ld, responseDisposition:%ld"
[Request %p] URLSession:dataTask:didReceiveData:
req: %{public}@, "%@ URLSession:dataTask:didReceiveData: %ld bytes"
[Request %p] URLSession:task:needNewBodyStream:
req: %{public}@, "%@ URLSession:task:needNewBodyStream:"
[Request %p] URLSession:task:didSendBodyData: %lld totalBytesSent: %lld totalBytesExpectedToSend: %lld
[Request %p] URLSession:task:didCompleteWithError:
[Request %p] Request completed with error
req: %{public}@, "%@ URLSession:task:didCompleteWithError: %@"
req: %{public}@, "Server requested an AutoBugCapture snapshot to be triggered with reason: %@"
req: %{public}@, "Server requested a Tap-To-Radar prompt with reason: %@"
req: %{public}@, "Server requested a auto-sysdiagnose with reason: %@"
[Request %p] Received a didCompleteWithError without an error but no response from the server.
req: %{public}@, "Received a didCompleteWithError without an error but no response from the server. Treating the following task as an unknown error: %@ %@"
req: %{public}@, "%@ request is marked as needing auth retry"
[Request %p] Request failed with http status %ld
req: %{public}@, "Warn: %@ request failed with http status %ld"
[Request %p] Parser failed to parse data from the server
req: %{public}@, "Parser failed to parse with error %@"
[Request %p] Received a didCompleteWithError without an error but no response body where one was expected.
req: %{public}@, "Received a didCompleteWithError without an error but no response body where one was expected. Treating the following task as an unknown error: %@ %@"
url-request-transmission
[Request %p] requestForEstablishedConnection
req: %{public}@, "%@ requestForEstablishedConnection"
[Request %p] URLSessionTaskIsWaitingForConnection
req: %{public}@, "%@ URLSessionTaskIsWaitingForConnection"
[Request %p] conditionalRequirementsChanged to %d
req: %{public}@, "%@ conditionalRequirementsChanged to: %s"
[Request %p] URLSessionWillRetryBackgroundDataTask
req: %{public}@, "%@ URLSessionWillRetryBackgroundDataTask after event %@"
req: %{public}@, "Warn: %@ invalid value (%@) for %@ header field"
Warn: Failed to get the resource value at %@: %@
Skipped %@, %@/%lu, creationDate:"%@" (%llds)
Warn: Failed to remove %@: %@
Removed %@, %@/%lu, creationDate:"%@" (%llds)
Account information changed. Clearing PCS caches
Using %@ PCS Service Name %@ with container ID %@
CKDPCSManager/PCSIdentitiesChanged
PCS identities changed. Clearing PCS identity caches
We've come across missing identities before. Checking to see if a formerly missing key has arrived.
Couldn't get a full identity set to verify against
Service %@ now has a current identity
Formerly missing public key %@ was found with identity %@.
One or more previously missing PCS identities have arrived. Posting a notification to all clients
Couldn't get a %@key for service: %@
OON keyswap: Failed decrypting calling participant protectionInfo: %@. CombinedOONIdentity: %@ (%@)
Couldn't create a diversified public key for the owner participant: %@
Couldn't create an identity from the public sharing key for participant: %@ (key was %@)
Created public identity for participant: %@
Couldn't add public identity to per-participant PCS: %@
OON keyswap: Failed to remove combined identity: %@
OON keyswap: failed to convert PCS blob to data: %@
Error decrypting the invited PCS: %@
Error decrypting the per-participant PCS: %@
Warn: Couldn't get a self identity: %@
Added identity %@ to PCS %@
Error adding identity %@ to PCS %@: %@
Warn: Couldn't get a %@ identity: %@
Couldn't get keyIDs from pcs %@
Couldn't get private key from pcs %@
Couldn't get a public identity from PCS %@
A PCS blob could not be decrypted for service %@. %@ are keys that can decrypt the zone. Will notify clients if any of these keys arrive.
We are missing identities for service %@. Will notify clients if any keys arrive.
Failed to get signing identity in createZonePCSWithError: %@
Created new zone PCS: %@
Error creating new zone PCS: %@
Synchronizing user key registry before retrying zone PCS creation for service %@.
Failed to synchronize user key registry: %@
Successfully synchronized user key registry. Retrying zone PCS creation for service %@.
Created zone PCS data from zone PCS %@: %@.
Error creating zone PCS data from zone PCS %@: %@
A decrypt attempt on this exact PCS data has failed before and no useful identities have arrived since. Failing the decryption.
Decrypted and exported sharing invitation token with identity set %@%@%@
Decryption with identity set %@ failed. Attempting to decrypt using all identities in the keychain %@
Was able to decrypt pcs with a key in the keychain, but not the %@ key. Possibly a misconfigured client set up.
Created %@ using identity %@ 
From data %@
Error creating PCS: %@.
Identity %@
PEM data was %@
 PCS data %@.
Synchronizing user key registry before retrying decryption for service %@.
Successfully synchronized user key registry. Retrying decryption for service %@.
Failed to decrypt PCS data even after syncing user key registry because we have no identities. Returning retryable failure.
Failed to decrypt PCS data even after syncing user key registry. Returning permanent failure.
Failed to decrypt manatee blob because iCDP isn't available. This should've been caught and failed earlier.
Warn: No identities for service %@: %@
Warn: Couldn't preflight identity for service %@: %@
Synchronizing user key registry before retrying identity preflight for service %@.
Successfully synchronized user key registry. Retrying identity preflight for service %@.
Created zone PCS using identity %@ from data %@: %@.
Error creating zone PCS: %@.
Identity %@
PEM data was %@
Zone PCS data %@.
Error creating shared zone PCS using invited PCS for zone %@: %@
Created shared zone PCS: %@ and zoneish PCS: %@ for zone %@
Couldn't create data from zone PCS %@: %@
Successfully repaired zone PCS data
Error repairing zone PCS data: %@.
Identity: %@
PEM data: %@
Data was %@
Not checking PCS shouldRoll hint because we're asked not to!
Not checking PCS shouldRoll hint because we're using a non-manatee service identity: %@
Not checking PCS shouldRoll hint because we're not allowed to in container %@
Not checking PCS shouldRoll hint because manatee isn't available. %@%@
Aborting master key roll because of behavior option override
Aborting master key roll because container %@ is not whitelisted
Aborting master key roll due to cap of %lu rolls. Current number of keys: %lu
Couldn't roll master key for record PCS %@: %@
Rolled master key for record PCS %@
Not updating zone PCS identities because we're asked not to!
Not updating zone PCS identity because container %@ is not whitelisted
Couldn't update zone identity on pcs %@ using zone PCS %@: %@
Updated zone identity on pcs %@ with using zone pcs %@
PCS data with hash %@ is undecryptable. Recording this so we fail early on future attempts.
Failed to clean up share pcs %@: %@
Cleaned up %lu private keys from pcs %@
Failed to roll the identity for share pcs %@: %@
Rolled the identity for share pcs %@
Not rolling zone PCS identities because we're asked not to!
Not rolling zone PCS identities because we're using a non-manatee service identity: %@
Couldn't roll key for zone PCS %@ with current service %@: %@
Rolled key for zone PCS %@ with current service: %@
Not rolling zone sharing PCS identities due to behavior option
Not rolling zone sharing PCS identities because current service %@ is not manatee
Attempting to roll share keys for zone-wide share in zone %@ but this operation is not permitted
Didn't get decrypted share, shared zone and zoneish pcs to roll- aborting. Share PCS: %@, Zone PCS: %@, Zoneish PCS: %@
Rolling identities for zone-wide share and zone pcs for zone %@
Couldn't remove old invited PCS from zone PCS for zone-wide share in zone %@: %@
Couldn't remove old invited PCS from public PCS for zone-wide share in zone %@: %@
Failed to roll identity for invited PCS for zone-wide share in zone %@: %@
Failed to add rolled invited PCS key to zone PCS for zone-wide share in zone %@: %@
Failed to add rolled invited PCS key to public PCS for zone-wide share in zone %@: %@
Failed to roll identity for zone PCS for zone %@: %@
Couldn't serialize zoneish PCS for share roll: %@
Couldn't decode zoneishPCS data for share roll: %@
Couldn't update identity on zoneish PCS for zone %@: %@
Couldn't clean up old private keys from PCS for zone %@: %@
Failed to roll master key for zoneish PCS for zone %@: %@
Failed to roll keys for zone-wide share in zone %@: %@
Successfully rolled keys for zone-wide share in zone %@
Couldn't create a new PCSShareProtectionRef: %@
Created %@record PCS from zone PCS %@%@%@: %@.
Error creating record PCS from zone PCS %@%@%@: %@
Created %@record PCS from zone PCS data %@%@%@: %@.
Error creating record PCS from zone PCS %@%@%@: %@.
Created data from record PCS %@: %@
Error creating PCS data from record PCS %@: %@
Created PCS object from data (%@): %@. Share PCS was %@
Error creating PCS object: %@.
Share PCS was %@.
PEM data was %@.
Share PCS public keys were %@
Exported PCS data was %@
Refusing to add a nil share PCS to a record PCS
Refusing to add a share PCS to a nil record PCS
Adding %@share PCS
To PCS
Warn: Unable to add share PCS (%@) to record PCS (%@): %@
Added share PCS %@ (%@) to record PCS %@.
Refusing to remove a nil share PCS from a record PCS
Refusing to remove a share PCS from a nil record PCS
Removing share PCS
From PCS
Warn: Unable to remove share PCS (%@) from record PCS (%@): %@
Removed share PCS %@ from record PCS %@.
Couldn't create data from record PCS %@: %@
Failed to get signing identity in createEmptySignedSharePCSForServiceType:withError: %@
Warn: Error creating a share PCS: %@
Created a new signed share PCS: %@
Created a new share PCS: %@
Setting owner public identity %@ on pcs %@
Warn: Error adding public %@ identity to share PCS: %@
Warn: Error adding public sharing identity to share PCS: %@
Created new chain PCS: %@
Error creating new chain PCS: %@
Created data from share PCS %@: %@
Error creating PCS data from share PCS %@: %@
Couldn't decrypt share PCS data with share identity %@: %@
Created share PCS from data (%@): %@. Identity PCS was %@
Error creating share PCS: %@.
Identity PCS was %@.
PEM data was %@.
Record data was %@
Couldn't decrypt share PCS data with share identities %@: %@
Couldn't create an identity from private key data: %@
Couldn't create a public PCS from the PCS data %@ for identity %@: %@
Couldn't create data from encrypted share PCS: %@
Public key data for current private key for share PCS %@ is %@
Trying to unlock our per-participant PCS for share %@ using the %@ service
Successfully decrypted a per-participant PCS using our %@ identity: %@
Trying to unlock our per-participant PCS for share %@ using the Sharing service
Successfully decrypted a per-participant PCS using our Sharing identity: %@
Successfully decrypted a per-participant PCS using our BR identity: %@
No current per-participant PCS data found for decryption on share %@
Trying to unlock PCS blobs for the share using our PPPCS
Successfully decrypted the invited share PCS using our per-participant PCS
Successfully decrypted the public share PCS using our per-participant PCS
Trying to unlock the invited PCS using our %@ service identity
Successfully decrypted the invited share PCS using our identity
Trying to unlock the public PCS using our %@ service identity
Trying to unlock the public PCS using the public sharing key
Trying to unlock the public PCS using the decrypted invited PCS
Couldn't decrypt public PCS for share %@ using the private PCS. Oh well, moving on.
Successfully decrypted the public PCS for share %@ using the private PCS
We were able to decrypt the share public PCS using our identity for share %@
Couldn't decrypt share private PCS with public PCS for share %@: %@
Unlocked private share PCS for share %@ using the public PCS
We were able to decrypt the public share PCS for %@ with our identity, but since the share permission is %ld we can't decrypt the private PCS. This might not go well...
Failed to decrypt the public share PCS using our identity
Warn: Couldn't unlock the private share PCS for share %@
Share decryption called without a share
Using pre-decrypted share PCS for share %@
Decrypted share PCS for share %@
Couldn't unlock the private share PCS for share %@: %@
Creating new PCS data for share %@ with service type %@
Couldn't create a private PCS object for the share %@: %@
Couldn't create a public PCS sharing identity from data (%@): %@
Using identity for public PCS on share %@: %@: %@
Couldn't create a public PCS object for the share %@: %@
Couldn't create data from our public sharing identity: %@
Adding debug sharing identity to share %@
Couldn't add debug sharing identifier to share %@: %@
Adding the owner to the self-added PCS blob for share %@
Couldn't add our %@ identity to the public PCS for share %@: %@
Error adding private sharing PCS to public sharing PCS for share %@: %@
Error creating PCS data for share %@: %@
Successfully created PCS data for share %@
Couldn't create data from share PCS %@: %@
Refusing to add a nil public identity to a record PCS
Refusing to add a sharing identity to a nil record PCS
Successfully added public identity %@ to record PCS %@
Error adding public identity %@ to record PCS %@
Refusing to add a nil sharing identity to a record PCS
Error getting a public identity from sharing identity %@
Refusing to remove a nil sharing identity from a record PCS
Refusing to remove a sharing identity from a nil record PCS
Couldn't create a PCS from the encrypted blob %@
Removing public identity for key %@
Failed to remove public identity matching key %@ from record PCS %@
Could not find matching public identity for key %@ on record PCS %@
Removing public identity for keyID %@
Failed to remove public identity matching keyID %@ from PCS %@
Could not find matching public identity for keyID %@ on record PCS %@. Soldiering on.
Got sharing identity %@ from PCS data %@
Warn: Couldn't get sharing identity from PCS data: %@
Couldn't unwrap asset key because we have no PCS object or wrapped asset key
Unwrapped wrapped asset key %@ with PCS %@
Failed all decryption attempts for wrapped asset key %@ in context %@ using PCS %@: %@
Couldn't create a wrapped asset key: %@
Couldn't wrap asset key with no record PCS or asset key
Wrapped asset key with signature %@ with PCS %@
Couldn't wrap asset key with signature %@ with PCS %@
MMCSReferenceObjectCreateWithType failed with error %@
Failed all decryption attempts for encrypted data %@ in context %@ using PCS %@: %@
Unwrapped encrypted data in context %@ with record PCS %@: %@
Wrapped encrypted data in context %@ with record PCS %@: %@
Warn: Couldn't encrypt data: %@
daemon/fetch-share-metadata
Third party process requested OON share metadata, returning error %@
Warn: Couldn't decrypt the protected full token: %@
Warn: Invalid full token length: %@
Got a full token of %@
Warn: Invalid token header, fullTokenLength:%lu, schemeByte:0x%0x, locatorLength:%lu
Warn: Unknown scheme byte: 0x%0x
Couldn't decode full token header: %@
We have no tokens to fetch short token metadata for. Giving up now
Short token metadata request finished%@%@
Fetching short share token metadata from the server for %ld URLs
Warn: Couldn't get token metadata for URL %@ and token lookup info %@
Error %@ when fetching short token metadata for %@
Warn: Couldn't decode the protected full token
Share invitation token URL %@ doesn't match client-provided share URL %@. This will go badly.
Share invitation token and client-provided share URL are a match: %@
Warn: Couldn't ingest manatee sharing invitation data for share %@: %@
Successfully ingested manatee sharing invitation data for share %@
Attempting to prep PCS data for share %@ with context %@
Prepped PCS data for share %@ with context %@%@%@
Warn: Couldn't get a public sharing identity for share %@: %@
Public sharing identity for share %@ is %@
No root record received when fetching share metadata %@
No operationInfo.setupInfo, creating a new one from scratch.  Bogus operation: %@
Suppressing error for OON user share metadata fetch. Error was: %@
Error fetching records: %@
Fetch records operation %{public}@ completed for <%{public}@: %p; %{public}@, %@>
Suppressing error for OON user fetch with operationID %@. Error was: %@
Starting fetch records operation %{public}@ for <%{public}@: %p; %{public}@, %@>
We have no share URLs to fetch. Giving up.
Extracting short token from URL %@
Warn: Couldn't get a short token for the URL %@
Warn: Couldn't decode the short sharing token for the URL %@
Invalid shortSharingTokenData length(%lu) for the URL %@
Extracted short token %@ and routing key %@ from URL %@
Starting fetch share metadata operation <%{public}@: %p; %{public}@, %@>
daemon/modify-web-sharing
Record for %@share (%@) was saved%@%@
Oplock failure while trying to %@share record %@. Retrying.
We don't have any records to save, so bailing now.
Saving %ld records: %@
Done saving all records for (un)share operation.%@%@
Record %@ never received a callback when modifying records. Sending that callback now with error %@
Warn: Record %@ didn't have any share protection data on it
Warn: Couldn't deserialize share protection data on record %@: %@.
Data was %@
Received a record ID that we don't know anything about: %@
Couldn't fetch record %@ from the server: %@
Fetched record with ID %@ from the server. Unwrapping sharing identity and %@sharing the record
Error getting share identity from record %@: %@
Fetched record %@ had no PCS data
Warn: Error %@sharing record %@: %@
Warn: Error serializing record PCS data for %@share of record %@: %@
New protection data for record %@ after %@sharing is %@
Successfully %@ sharing info to record %@. Preparing to save the record back to the server
Done fetching all records for web sharing
Record %@ was never fetched from the server. Returning error %@
Starting web share operation <%{public}@: %p; %{public}@, %@>
daemon/modify-record-access
Record for access %@ (%@) was saved%@%@
Oplock failure while trying to %@ access on record %@. Retrying.
Done saving all records for record access operation.%@%@
Record %@ didn't have any access token protection data on it
Warn: Couldn't deserialize access token protection data on record %@: %@.
Data was %@
Fetched record with ID %@ from the server. Unwrapping access token and %@ access to the record
Record %@ had no access token on it. Creating a new one. (%@)
Warn: Error %@ access to record %@: %@
Warn: Error serializing record PCS data for access %@ of record %@: %@
New protection data for record %@ after %@ access is %@
Done fetching all records for web access
Starting web access modification operation <%{public}@: %p; %{public}@, %@>
daemon/discover-user-identities
For lookup info %@, discovered identity %@
Error fetching contacts: %@
Found user identity %@
Unsupported Event Metric Type. Unable to assign report frequency.
Operation Group Not Found, Unable to associate operation %@ with operation group %@.
CKEventMetric %@ didCompleteWithError %@
Failed to create CKEventMetric %@ didCompleteWithError callback.
Missing authPutRequest
Multiple instances of header %@: last one wins
Unable to set header %@ with value %@
Server did not return the required authPutResponse even though an authPutRequest was sent.
Missing authPutRequest.
Server did not return an authPutResponse even though an authPutRequest was sent. While unexpected, this just means the MMCS operation requires a trip to the Content server
Setting the upload token "%@" for recordID:%@, MMCSItem:%@
Missing requestID on %@
Can't find assetBatch for %@ on %@
daemon/verify-share-vetting
OON share reconstruct: selfAdded failed to decrypt: %@
OON share reconstruct: pcs to data conversion failed: %@
OON short token reconstructed: %@
Performing vetting on token: %@, for: %@
Vetting token: %@ validated.
OON keyswap: Not swapping OON keys as %s is missing
Failed to create protection info in OON key-swap for participantID: %@, recordID: %@, error: %@
Invalid data in server protobuf, ignoring record. Offending record: %@
Invalid data in server protobuf, ignoring record. Offending identifier: %@
Vacuuming operation metrics database at %@ after reporting %ld events to powerlog
daemon/download-assets
Couldn't create url from template %@
constructedAssetDownloadURL %@
Downloading assets %@, in-memory assets %@, and publish assets %@ for operation %{public}@
Returning asset from cache: %@
No assets to download for %{public}@
Failed to download MMCS item %@ for package %@ and operation %{public}@: %@
Failed to download MMCS item %@ for operation %{public}@: %@
Failed to download %lu MMCS items for operation %{public}@: %@
Expected non-nil fileURL for %@
Updated package item with index:%lu and path:%@
Failed to download MMCS section item %@ for package %@ and operation %{public}@: %@
Downloaded MMCS section item %@ for package %@ and operation %{public}@: %@
Failed to download %lu MMCS section items: %@
Downloading MMCS section item %@ at index %lu with MMCS items %@ for package %@ and operation %{public}@
Missing path for package manifest for package %@ and operation %{public}@: %@
Failed to read the manifest file at %@ for package %@ and operation %{public}@: %@
Read the package manifest with %lu items and %lu sections for package %@ at %@
Downloading %lu/%lu package items for package %@ and operation %{public}@: %@
No files or packages to download for %{public}@
maxPackageDownloadsPerBatch:%lu (%lu)
Finished downloading package manifest for package %@
Finished downloading package sections for package %@
server public key: %@
shared info: %@
additional auth data %@ (%@)
daemon/fetch-user-quota
Fetch user quota operation <%{public}@: %p; %{public}@, %@> is starting
Fetched quota (%llu) with response code %ld
Fetch quota operation <%{public}@: %p; %{public}@, %@> finished with error %@
Not creating a TTR notification because it hasn't been long enough since the last prompt (%0.1fs) for message "%@"
Creating a TTR prompt for "%@"
Warn: Hit an error while decoding fields for a record
Warn: Found an unexpected field tag: %d
Warn: Couldn't place a reader mark
Warn: Couldn't read field
Invalid field value (record identifier) from server: %@
Invalid asset type from server: %@
Invalid package type from server: %@
Invalid streaming asset type from server: %@
Notifying watchers of availablity change. Watchers are %@
Can't start yet, device is still in buddy
System is %@available.
Registering watcher %@
Unregistering watcher %@
CKDSystemAvailabilityMonitory/_systemReadyCheckFired
CKDPushConnection/didReceivePublicToken
Received public token from connection %@: %@
Push connection for environment "%@" changed status: %@
Did reconnect to push daemon
req: %{public}@, "Couldn't create publicCloudDBURL url"
req: %{public}@, "Couldn't create publicShareServiceURL url"
req: %{public}@, "Couldn't create publicDeviceServiceURL url"
req: %{public}@, "Couldn't create publicCodeServiceURL url"
req: %{public}@, "Couldn't create publicMetricsServiceURL url"
req: %{public}@, "Couldn't parse a container scoped user id from %@"
req: %{public}@, "Container scoped user ID was needed but not returned because we didn't have an iCloud auth token. Handling this as an auth failure."
req: %{public}@, "Couldn't parse an org admin user id from %@"
req: %{public}@, "Org Admin user ID was needed but not returned because we didn't have an iCloud auth token. Handling this as an auth failure."
req: %{public}@, "Couldn't create publicDatabaseRPCServiceURL url"
daemon/modify-record-zones
Synchronizing user key registry for operation %{public}@.
Failed to synchronize user key registry for operation %{public}@ with error %@
Successfully synchronized user key registry for operation %{public}@
Failed to save %lu zones for operation %{public}@ despite synchronizing user key registry. Triggering ABC snapshot.
Failed to save zone %@ to the server %d times. Bailing with error: %@.
Got a response for record zone with ID %@, but we didn't try to put that record zone.
RecordZone %@ was successfully saved to the server
Couldn't decrypt zoneish PCS for zone %@: %@
Warn: Couldn't create a PCS object from zone data for zone %@: %@
Received a failure for save of zone %@ with error code %d. Re-fetching the zone PCS and trying again
Zone PCS for %@ failed server validation. Will synchronize user key registry for operation %{public}@ before trying again.
Error %d when saving record zone %@ to the server
RecordZone %@ was successfully deleted from the server
Error %@ when deleting record zone %@ from the server
Skipping save of zones because there is nothing to do
Saving %ld, deleting %ld record zones on the server.
Error modifying record zones: %@
Creating new PCS data for zone %@
Couldn't create a PCS object for the zone %@: %@
Error creating PCS data for zone %@: %@
Couldn't create a zoneish PCS for zone %@: %@
Created zoneish PCS for zone %@ with key %@
Couldn't create data from zoneish PCS for zone %@: %@
Fetched pcs info for zone %@. Continuing with save for that zone.
Warn: Couldn't fetch PCS data for zone %@: %@. Refusing to save zone.
Not saving zone %@ due to a PCS error: %@
Skipping fetch of zones from the server for operation %{public}@ because it has dontFetchFromServer set
Preparing PCS data for %ld zones
Zone %@ already has PCS data.
Waiting to fetch zone PCS data
No zone to save in this operation.
Skipping zone PCS stuff because encryption is disabled
Couldn't pick out CloudKit child account from account store %@ on account %@ at %p.
VolumeManager: Created %@
stat(%s) failed
VolumeManager: No cached CKDVolume for device %ld
VolumeManager: Could not find volume uuid %@
Warn: Couldn't get a shareRecord from %@: %@
Warn: Couldn't get a root record from %@: %@
Found %lu additional share hierarchy records
Parsing share hierarchy record %@
Warn: Couldn't get a shared hierarchy record ID from %@: %@
Parsed share hierarchy record ID %@
Warn: Couldn't get a calling participant from %@: %@
Parsed calling participant: %@
Found current user participant on share %@: %@
Couldn't parse a potentially matching OON participant from %@: %@
Couldn't parse shared zone from resolve token response: %@
Parsed zone %@%@%@from response for share metadata %@
Could not create primary backing account
Created primary backing account with ID "%@"
Created anonymous account
Could not create backing account with ID "%@"
Created backing account with ID "%@"
Could not create fake backing account with account override info "%@"
Created fake backing account with account override info "%@" and ID "%@"
Warn: Couldn't determine server preferred push environment from backing account %@
No backing account, so allowing cellular access from account perspective.
The CloudKit auth token for account %@ has changed since the last one we attempted. Trying again with the new token.
Account asked me not to renew, so failing this auth token renew request
Can't access the account with ID %@, so failing this auth token renew request
Waiting on a credential renewal for account %@
Credential renewal for account %@ finished %@successfully.%@%@
No backing account, so not returning an auth token.
No access to existing account, so not returning an auth token.
Error getting CloudKit auth token: %@
Error getting iCloud auth token: %@
Could not initialize zlib for compression, error %d
%@, outputStream:%p
Failed to write into the outputStream:%p
Got a stream error: %@
Failed to read bytes for itemID:%llu, operationID:%{public}@ - nil proxy: %@
Failed to read bytes itemID:%llu, operationID:%{public}@: %@
Zero-length asset with itemID %llu
Added section %@ with %lu items and %lu chunks
Added item %@ to section %lu
Failed to create sections for package %@: %@
Added last section %@ with %lu items and %lu chunks
Created sections for package %@
Failed to getChunkKeys MMCS item %@ for operation %{public}@: %@
Failed to register MMCS item %@ for package %@ and operation %{public}@: %@
Failed to register MMCS item %@ for operation %{public}@: %@
Invalid package manifest size for MMCS item %@, package %@ and operation %{public}@: %@
Ignoring preAuthPutResponse for batch %@ : too big at %lu bytes
Skiped uploading empty asset file at %@
Skiped uploading empty asset file with filehandle %@
MMCSv2 Not Support For Package Manifests.
Error creating asset key for manifest item %@: %@
Clear Asset Key Not Supported For Package Manifests.
Skipping asset keys on manifest item because encryption is disabled
Creating manifest for package %@ and operation %{public}@
Failed to create the manifest for package %@ and operation %{public}@: %@
Wrote the package manifest for package %@ and operation %{public}@: %@
No assets to upload for operation %{public}@
MMCSv2 Not Support For Package Sections.
Created asset key with reference identifier %@ for MMCS section %@
Clear Asset Key Not Supported For Package Sections.
Skipping asset keys on section item because encryption is disabled
GetChunkKeys for MMCS items for operation %{public}@
Registering MMCS items %@ for operation %{public}@
Failed MMCS item %@, package %@ and operation %{public}@: %@
Failed MMCS item %@ and operation %{public}@: %@
Failed to upload MMCS section item %@ for package %@ and operation %{public}@: %@
Failed to upload %lu MMCS section items for operation %{public}@: %@
Invalid section index %lu/%lu for section %@
Invalid section at index %lu/%lu for section %@: %@
Uploading MMCS section item %@ at index %lu for package %@ and operation %{public}@
Uploading MMCS section items %@ for package %@ and operation %{public}@
Can't find section at index %lu for package %@ and operation %{public}@
Failed to upload MMCS item %@ for package %@ and operation %{public}@: %@
Failed to upload MMCS item %@ for operation %{public}@: %@
Failed to upload %lu MMCS items for operation %{public}@: %@
Clear Asset Key Not Supported For Package Section.
No files or packages to upload for operation %{public}@
maxPackageUploadsPerBatch:%lu (%lu)
Failed to remove package manifest at %@: %@
Removed package manifest at %@
daemon/publish-assets
Getting asset urls for record %@
Error getting asset urls for record %@: %@
Creating asset url for asset %@
Failed to fetch record %@: %@
Fetched record %@
Warn: Record %@ contained no matching asset fields to publish
Fetch records operation <%{public}@: %p; %{public}@, %@> finished with error %@
Fetch records operation <%{public}@: %p; %{public}@, %@> succeeded
CKDPCSNotifier/SecurityViewBecameReady
Security view%@%@ became ready. Posting a notification to all clients
If an object is parsed in the woods and no one is there to hear it, was it really parsed? You're leaking objects on the floor, dude. Set up a parser callback block
Error parsing message of class %{public}@ from data %@. Raw data is %@
Warn: Couldn't read length from input stream
Failed to parse object from input stream
Warn: Parser encountered an error: %@
daemon/modify-subscriptions
Got a response for subscription with ID %@, but we didn't try to put that subscription.
Subscription %@ was successfully deleted from the server
Error %@ when deleting subscription %@ from the server
Saving %ld, deleting %ld subscriptions on the server.
daemon/vetting-initiate
Preparing encrypted key for vetting: adding ourselves to the public PCS for share %@
Unable to generate encrypted key to initiate share vetting: %@
Preparing public PCS metadata for share at URL %@ using public sharing token %@
Couldn't create a sharing public identity from %@: %@
Couldn't create a public PCS from the PCS data %@ for identity %@
Couldn't add our self identity to the public PCS for share at URL %@: %@
Couldn't serialize share public PCS for share at URL %@: %@
Couldn't get an etag for public PCS data on share %@
Successfully added our public identity to the share's public PCS at %@
Share metadata for the share at URL %@ doesn't have protection data on it, skipping
Sending initiate vetting request, this is a %@ attempt
Received LoginRequired from the server, trying to re-authenticate the user
Received LoginRequired from the server, but this was a second attempt, not trying to re-authenticate the user again
Failed to convert subscription: %@
daemon/repair-zone-pcs
Uploading %ld repaired zones
Reparing %ld zones: %@
Warn: Zone %@ had bad PCS data. Attempting to repair it.
Couldn't repair zone PCS for zone %@: %@
Repaired PCS info for zone %@. Will upload new protection data: %@
Everything looked good with the PCS data on %@
Starting fetch user record operation <%{public}@: %p; %{public}@, %@>
Invalid desired key %@, which should have been caught earlier
Non-indexed desired key %@, which should have been caught earlier
req: %{public}@, "The response for recordID %@ doesn't contain the record"
Invalid data in server protobuf, ignoring response. Server response was: %@, error: %@
daemon/fetch-share-participants
For fetch info %@, found user identity %@
Got lookup service for identity fetch operation: %@
Scheduling a request %@ to the lookup service
Performing identities lookup with the lookup service
Can't convert empty server type string to a CKDPServerType
Server type "%@" isn't known
Can't convert empty partition type string to a CKDPPartitionType
Partition type "%@" isn't known
Failed to open itemID:%llu, operationID:%{public}@ - nil proxy: %@
open, %@ itemID:%llu, handle:%p, operationID:%{public}@
close, itemID:%llu, handle:%p
Failed to get metadata for itemID:%llu, operationID:%{public}@ - nil proxy: %@
Failed to stat itemID:%llu, handle:%p, operationID:%{public}@: %@
stat, itemID:%llu, handle:%p, fileSize:%llu, fileID:%llu, generationID:%lu, modTime:%llu
Failed to pread for itemID:%llu, handle:%p, operationID:%{public}@, offset:0x%llx, length:%llu: %@
Failed to pwrite for itemID:%llu, handle:%p, operationID:%{public}@, offset:0x%llx, length:%llu: %@
pwrite, itemID:%llu, handle:%p, offset:0x%llx, length:%llu, bytesRead:%lld
packageGarbageCollection
Purging packages in: %@
Error enumerating %@ for package purges, failed to get the resource value at %@: %@
Adding %@ to package purger
req: %{public}@, "Unregistering token %@ in aps environment %@ for bundleID %@"
req: %{public}@, "Inlining fake response operation result for function %@"
Unable to read subscription object, discarding: %@: %@
User key sync calling out to waiter for service %@ with success:%@%@%@
About to sync user keys for service: %@
Finished syncing user keys %@successfully. Error: %@
A key sync for service %@ is already in progress, queueing ourselves behind it
daemon/fetch-subscriptions
Share %@ already has PCS data. Decrypting it.
Successfully decrypted PCS data for share %@: %@
Warn: Couldn't decrypt existing share protection data on share %@: %@
Fetching PCS data for share %@
Public sharing identity on share %@ does not match the public sharing identity from its root record (%@). Failing share save
Setting public sharing identity from root record %@ on share %@: %@
Didn't get a public sharing identity for root record %@
Error fetching PCS data for root record %@: %@
Warn: Couldn't fetch PCS data for share %@: %@. Refusing to save share.
Share %@ has no root record ID, so we'll generate a new PSI for the share
Fetching public sharing identity for root record %@
Using passed in data to create a public sharing identity for %@: %@
Creating a new random sharing identity for share %@
Someone is trying to save a share in the public database. That's not going to go very well.
Public sharing identity on share %@ is different. Expected %@, got %@
Fetched pcs info for share %@
Warn: Can't save share %@ if we have no PCS data for it%@%@
Warn: Private PCS data for share %@ is nil
Warn: Public PCS data for share %@ is nil
Updating zone pcs for zone-wide share %@
Adding invited PCS to zone PCS for zone-wide share %@
Done updating pcs for share %@%@%@
Operation %@ needs to key roll for zone-wide share %@ due to %lu invited keys to remove and %lu removed participants
Operation %@ did attempt a key roll for zone-wide share %@%@%@
Updating permission for private participant %@ from %@ -> %@ to match the public permission on share %@
Warn: Couldn't serialize private share PCS for share %@: %@
Warn: Couldn't create a PCS etag for share %@: %@
Warn: Couldn't serialize public share PCS for share %@: %@
Warn: Couldn't create a public PCS etag for share %@: %@
Serializing zone PCS for plugin-field update to create zone-wide share %@
Couldn't serialize zone PCS trying to create zone-wide share: %@
Serializing zoneish PCS for plugin-field update to create zone-wide share %@
Couldn't serialize zoneish PCS trying to create zone-wide share: %@
Failed to serialize PCS data for share %@: %@
Successfully serialized PCS data for share %@
Error adding public sharing PCS to private sharing PCS for share %@: %@
Error removing public sharing PCS from private sharing PCS for share %@: %@
Error cleaning up public PCS for share %@: %@
Removing public participant %@ from share %@.
Couldn't get a current public sharing identity for the owner on share %@: %@
Added public sharing identity %@ to our self owner user on share %@
Couldn't get a private PCS for the share %@, so we can't upgrade our owner's PPPCS
Checking participants on share %@
Couldn't create invitedPCS for share %@: %@
Participant %@ wants a new invitation token on share %@
Setting up private participant %@ on share %@
Couldn't configure new participant on share %@: %@
Couldn't remove participant participant PCS for share %@: %@
Error removing public key %@ from the invited PCS blob: %@
Couldn't remove participant from share %@: %@
Removing share participant with identity %@ and public key %@, PPPCS public key: %@
No participant PCS found for participant %@. We can't remove them from the share
Couldn't remove per-participant PCS from invited PCS for participant %@: %@
Removed per-participant PCS from invited PCS for participant %@
Couldn't configure PCS data for removed participant %@: %@
Successfully configured PCS data for removed participant %@
Couldn't create a public key for the owner participant on share %@: %@
No private OON key exists for participant %@. We can't add them to the share
No public sharing key exists for participant %@. We can't add them to the share
Couldn't create an identity from the public sharing key for participant %@: %@ (key was %@)
Ensuring %@share participant with identity %@ and public key %@ is in invitedPCS
Created public identity for participant %@: %@
Couldn't create a per-participant PCS for participant %@: %@
Created a new per-participant PCS blob for participant %@: %@
Couldn't get the share authorship identity for participant %@
Cannot add participant %@ with missing public key to share
Couldn't create manatee sharing invitation data for participant %@: %@
Created a new manatee sharing invitation blob for participant %@: %@
Couldn't add public identity to per-participant PCS for participant %@: %@
Added participant's public identity to their per-participant blob for participant %@
Couldn't add per-participant PCS to invited PCS for participant %@: %@
Added per-participant PCS to invited PCS for participant %@
Couldn't serialize per-participant PCS for participant %@: %@
Couldn't set up PCS data for new participant %@: %@
Successfully set up PCS data for new participant %@
Couldn't create an identity from the public sharing key %@: %@
Couldn't remove public key %@ from the invited pcs: %@
Clearing share protection data for share %@
Invalid user record response from server: %@
%@ in %@ count %lld
%@ in %@ not in the sharedWrappers map at key %@
%@ in %@ and actually dropping but did not tear down
Warn: Invalid value (%@) for %@ key in error %@
Skipping remove dir at %@: %@ %@
Warn: Failed to remove dir at %@: %@
Removed dir at %@
Found a cached MMCS wrapper %@ at path %@ count %lld
Couldn't create a context, %@
setting sharedWrappers map key %@ value %@ count %lld
Exception %@
failed to drop %@ in %@
already dropped %@ in %@
Using MMCS options: %@
%s %lu MMCS items, operationID:%{public}@: %@
itemID:%llu is missing file signature
%s MMCS item group %@ for operationID:%{public}@ with options %@
Missing kMMCSRequestOptionPreauthorization for CKDMMCSOperationTypePutChunkKeys
Getting MMCS item group %@ for operationID:%{public}@ with options %@
Failed getting %lu MMCS items for operationID:%{public}@: %@
Getting MMCS item group set %@ for operationID:%{public}@ with options %@
Putting MMCS item group %@ for operationID:%{public}@ with options %@
Failed putting %lu MMCS items for operationID:%{public}@: %@
Putting MMCS item group set %@ for operationID:%{public}@ with options %@
Error counting registered items %@
MMCS has %llu registered items.
Error enumerating registered items %@
MMCS itemID %llu registered.
Expected registered item ids to be ordered ascending: Previous itemId %llu is not less than %llu.
_unregisterItemIDs Zero itemID
Unregistering itemID=%llu with MMCS
Failed putting section with %lu MMCS items for operationID:%{public}@: %@
Putting MMCS section item %@ for operationID:%{public}@ with options %@
Failed getting a section with %lu MMCS items for operationID:%{public}@: %@
Getting MMCS section item %@ for operationID:%{public}@ with options %@
MMCS item %llu was expected to be registered in MMCS for operationID:%{public}@ at %@, but there was an error: %@
MMCS item %llu signature mismatch: expect %@, got %@
MMCS item %llu has no file size
MMCS item %llu has invalid file size %@
MMCS item %llu expected to have chunk count %u
MMCS item %llu chunk count mismatch: expected %u, got %u
Registered MMCS itemID=%llu signature=%@ fileSize=%@ chunkCount=%@ was unexpected.
Registered MMCS itemID=%llu signature=%@ was unexpected.
Registering %lu MMCS items, operationID:%{public}@: %@
Failed to %{public}s %lu MMCS items for operationID:%{public}@: %@
Failed to %{public}s MMCS items (%lu/%lu) not already registered for operationID:%{public}@: %@
Failed to fetch registered MMCS item %llu for operationID:%{public}@ %@
Failed to register MMCS item %llu for operationID:%{public}@ at %@: %@
Register complete: Pushed sig and size to asset:%@ for item %@
Unable to open reader for %@: %@
Unable to get info for %@: %@
Unable to close for %@: %@
Unable to open for %@: %@
%{public}s MMCS item %llu with size:%llu, paddedSize:%llu, chunkCount:%lu, signature:%@, path:%@
{public}%s MMCS item %llu with size:%llu, paddedSize:%llu, signature:%@, path:%@
%{public}s MMCS item %llu with size:%llu, paddedSize:%llu, chunkCount:%lu, signature:%@
%{public}s MMCS item %llu with size:%llu, paddedSize:%llu, signature:%@
%{public}s MMCS item %llu signature:%@
%{public}s %lu MMCS items for operationID:%{public}@
%{public}s %lu/%lu MMCS items for operationID:%{public}@
Failed to %s for %lu MMCS items for operationID:%{public}@: %@
Failed to %s for all %lu MMCS items for operationID:%{public}@: %@
Failed to %s for MMCS item %ld for operationID:%{public}@ : %@
GetChunkKeys complete: Pushed size to asset:%@ for item %@
%s MMCS item %ld with size:%llu, paddedSize:%llu, signature:%@
%s %lu MMCS items for operationID:%{public}@
Record %@ already has protection info
Fetching protection info for record %@
Creating a new random sharing identity for record %@
Couldn't create a new sharing identity for record %@: %@
Using identity for public PCS on record %@: %@: %@
Couldn't create a public sharing identity for record %@: %@
Warn: Record %@ isn't in the private database, doesn't have a share or parent set and isn't a share
Using prepared share pcs and shared zone pcs data for share %@
Got an error fetching PCS data locally for record %@. Attempting another network-based fetch with options %lx
Didn't get PCS data for record %@: %@. Fetching the zone PCS and creating new PCS data
Got an error fetching PCS data for record %@: %@
Getting ready to fetch PCS Data for record %@
Parent record %@ in the same batch didn't have chain PCS data on it for record %@
Using parent PCS data from our current batch %@
Warn: Failed to fetch share with ID %@. Not adding it to the record PCS: %@
Adding share with ID %@ to record %@
Warn: Error adding share PCS %@ to record PCS %@: %@
Removing share with ID %@ from record %@
Warn: Error remvoing share PCS %@ from record PCS %@: %@
Rolling record PCS master key since we removed a share for record %@
Warn: Failed to fetch share with ID %@. Not removing it from the record PCS: %@
Waiting on share fetches so we can update the record PCS
Error fetching share PCS and adding it to the record PCS: %@
All shares have been fetched and the record PCS is updated for %@
Removing previous parent %@ with public key ID %@ from record PCS for %@
Using PCS data for parent from our current batch: %@
Parent exists in the same batch but it doesn't have any chain PCS data, so we can't save %@
Fetching parent PCS data with record ID %@ for record %@
Fetched parent PCS data with record ID %@ for record %@: %@
Couldn't get PCS data for parent %@ of record %@
Error fetching parent PCS and adding it to the record PCS: %@
All parent records have been fetched and the record PCS is updated for %@
Adding parent PCS data %@ to PCS for record %@
Couldn't decrypt the chain PCS blob on parent record %@: %@
Error adding parent PCS %@ to record PCS %@: %@
Successfully added parent PCS data from record %@ to record %@. Public key ID is %@
Fetching %@PCS data for zone %@
Warn: Couldn't fetch PCS for zone %@: %@
Warn: Couldn't fetch PCS for share %@: %@
All PCS data fetched. Creating PCS for record %@
Warn: Couldn't get PCS data for zone %@%@%@. Error was %@
Creating new PCS object for record %@
Using zoneish PCS with key %@ for record %@
Couldn't create a new record PCS for %@: %@
Warn: Couldn't deserialize record PCS provided by the client: %@
Successfully deserialized client PCS data for record %@
Warn: Couldn't fetch PCS for parent %@: %@
PCS identifiers for record %@ match (%@), so we'll use %@ as our previous protection etag
Attempted PCS data (%@) had a different identifier than the server PCS data (%@) for record %@. Using the server's PCS data
We couldn't deserialize the client-provided PCS and PCS data for record %@ wasn't fetched from the server because the record doesn't exist on the server. Creating new record PCS
PCS data for record %@ wasn't fetched from the server. Using the client-provided PCS data
Couldn't fetch PCS data to verify client provided protection data for record %@: %@
Got PCS data for record %@: %@
Record %@ is a parent in this save group but it has no chain PCS data yet. Creating chain PCS data
Warn: Couldn't create protection data from chain PCS for record %@: %@
Warn: Couldn't create private chaining key from chain PCS for record %@: %@
Couldn't create a chaining PCS for %@: %@
Found %lu tombstoned key(s) on record %@
Rolling record PCS master key since we cleaned up tombstoned key(s) on record %@
Using publicSharingIdentity from share %@ for record %@
Failed to prepare public sharing key for record %@: %@
Couldn't create PCS data for record %@: %@
Warn: Couldn't get PCS data for record %@: %@
Uploading asset %@ for key "%@" on record %@ and operation %{public}@
Skipping asset %@ for key "%@" on record %@ and operation %{public}@
Failing save of record %@ due to error preparing asset for key "%@": %@
Failing save of record %@ due to error preparing asset for upload for key "%@": %@
Couldn't unwrap asset key for the package manifest asset %@: %@
Couldn't unwrap asset key for asset %@: %@. Wrapping a new asset key and re-saving the asset.
Unexpected MMCSEncryptionSupportValue of 0x%x
Couldn't create an asset key: %@
Skipping unwrapping of asset key for %@ because encryption is disabled
Generating new reference signature for streaming asset %@
Generating new file signature for streaming asset %@
Record %@ has encrypted data. Wrapping that data now...
Creating bad encrypted data for the field %@. Let's hope you know what you're doing!
Warn: Can't wrap a nil encrypted data for field %@
Warn: Couldn't wrap encrypte data for field %@: %@
Skipping wrapping of encrypted data because encryption is disabled
Warn: Couldn't get a record PCS for record %@, but it has encrypted data set on it
Clearing protection data for record %@
Account with ID %@ changed
Notifying clients of updated account info
daemon/fetch-notification-changes
notification parsed without a notification id: %@
Failed to create trust from certificates with status code: %i
Failed to evaluate trust policy with error: %@
Successfully evaluated trust policy %@
Waiting for system to become available for %@
System is available, but I already knew that.
System is unavailable, but I already knew that.
tokenRegistration
Refreshing token %@ for container %@ using unit test account %@
Refreshing token %@ for container %@
Failed to refresh token with server: %@
Removing token %@ for container %@ push bundle identifier %@
Refreshing all client push tokens. Known app containers are %@
Checking push token for container tuple %@, accountID %@
Unregistering push token for %@ because it is no longer installed
Tossing push token for container tuple %@
Requesting token for container tuple %@, push bundle identifier %@
NOT requesting token for container tuple %@
NOT registering token for container tuple %@
tokenRegistrationScheduler/handlePushTokenDidUpdate
Handling token %@ for container tuple %@, push bundle identifier %@
Warn: Failed to register push token for %@: %@
Successfully registered push token for %@
No registered token found for appContainerAccountTuple %@. Skipping token unregister.
Unregistering token for %@, isSystemService:%@
Refreshing all push tokens
tokenRegistrationScheduler/handlePublicPushTokenDidUpdate
daemon/fetch-whitelisted-bundle-ids
Fetch whitelisted bundleIDs operation <%{public}@: %p; %{public}@, %@> is starting
Fetched whitelisted bundleIDs %@ with response code %ld
Fetch whitelisted bundleIDs operation <%{public}@: %p; %{public}@, %@> finished with error %@
req: %{public}@, "Sending token registration for %@ with token %@ in aps environment %@ with bundleID %@"
daemon/reset-user-privacy-settings
daemon/update-missing-assets
Completed updating missing asset status
Error updating missing asset status: %@
No cached metadata found for outstanding operation %{public}@. Finishing it with an error
Starting  <%{public}@: %p; %{public}@, %@>
Determining transcode server public key URL for hostname: %@
Transcode server public key hosted at %@. Error: %@
Checking for cached transcode server public key for public key URL %@
Couldn't find cached transcode public key
Found a cached transcode key, but it has expired on %@. Clearing cached value and continuing with server fetch.
Found a transcode public key %@
Fetching transcode server public key from URL %@
Fetched transcode server public key %@ with error %@
ass:open failed: %@
ass:fcntl(F_GETPATH) failed: %@
ass:%@, path:%@
ass:fstatfs failed: %@
ass:getattrlist failed: %@
ass:paths don't match: %@ != %@ 
ass:Failed to create dir at %@: %@
ass:Failed to open fd for %@: %@
ass:%@ in %@
ass:%@ in %@ removing from sharedCache map
ass:%@ in %@ not in the sharedCache map
ass:%@ in %@ and actually dropped
ass:%@ in %@ did not tear down
ass:failed to drop %@ in %@
ass:Already cached volumeIndex=%@ for %@, ignoring %@
ass:Already cached %@ for volumeIndex=%@, ignoring %@
ass:Created new AssetVolume %@
ass:Forgetting assetVolume %@
ass:VolumeID already forgotten %@
ass:already dropped %@ in %@
ass:Volume %@ is not mounted. Deleting all asset handles for this volume
ass:Invalid device volume %@
ass:Unable to begin deleting %@
ass:Unable to delete %@
ass:For unmounted volume, deleted asset handle %@
ass:Cannot %@ since clientContext is nil
ass:----
Chunk Registry Report for %@
ass:itemID, file signature, status
ass:%@, %@, %@
ass:Error for %@: %@
ass:End Chunk Registry Report for %@
----
ass:why not path?
ass:Report for %@
----
ass:itemID, file signature, status, fileStatus, lastAccess(hrs), lastAssetDbAccess(hrs), expectedSize, actualSize
ass:%@, %@, %@, %@, %@, %@
ass:End Report for %@
----
ass:%@ bytes:%llu assetHandle:%@
ass:total bytes:%llu
ass:Unregister
ass:unregisterItemIDs returned error %@
ass:Failed to delete  asset handle %@
ass:Failed to delete nonexistant asset handle with itemID=%llu
ass:Deleted asset handle with itemID=%llu
ass:Can't create temp file for data(length:%lu) at %@: %@
ass:Zero-length asset with itemID %@
ass:Warn: itemID:%@ error during register %@
ass:rowID mismatch: itemID:%@ lastInsertRowID:%llu
ass:Warn: itemID:%@ modified during register %@
ass:Warn: stale chunk registry state for itemID:%@  %@
ass:Warn: itemID:%llu missing asset handle
ass:itemID:%llu, lastInsertRowID:%llu
ass:Unable to find volumeIndex for deviceID %@: Deleting asset handle for %@
ass:Unregistering %@
ass:itemID:%llu, missing chunk count
ass:Failed to open %@: %@
ass:Failed moving asset from %@ to %@ for itemID %llu and UUID %@: %@
ass:Moved asset from %@ to %@ for itemID %llu and UUID %@
ass:Ignoring asset handle with no chunk count %@
ass:Reusing assetHandle %@
ass:Cleaning up old assetHandle %@ because it did not match %@: %@
ass:missing one or more of deviceID, fileID and/or generationID so not reusing an asset handle
ass:An exception was caught= %@
ass:Failed to start tracking asset handles %@: %@
ass:Started tracking asset handles %@
ass:Look at assetHandle %@
ass:Failed to stop tracking asset files with itemIDs %@: %@
ass:Stopped tracking asset handles for itemIDs %@
ass:Found asset handle with itemID:%llu %@
ass:Unable to find asset handle with itemID:%llu
ass:Asset handle with itemID:%llu is deferred to be deleted.
ass:Attempt to find asset by path that is not parsable %@
ass:Attempt to find asset by path that is not in the asset cache fileDownloadPath %@
ass:Not scheduling redundant downloads eviction for %@
ass:Scheduling downloads eviction for %@
ass:Scheduled downloads eviction cancelled for %@
ass:Completed unregister for evicted downloads for %@
ass:%@ %@
ass:%s %llu files (%llu bytes) at %@
ass:Ignoring file in cache %@
ass:%s %llu files (%llu bytes) at %@ (forced:%@, gracePeriod:%lu, gracePeriodOnHighWatermark:%lu)
ass:%s file %@ (size:%llu) with no associated asset handle
ass:%s file %@ for asset with itemID %llu and UUID %@ (size:%llu)
ass:Failed removing cached asset file at %@: %@
ass:%s %llu/%llu files (%llu/%llu bytes) at %@
ass:Removing registered asset handle for %@
ass:Attempting to evict asset handle in wrong state %@
ass:Unable to unregister %@
ass:Delete asset handle %@
ass:Expired %lu asset handles for %@ with lastUsedTime before "%@" (%lld)
ass:Expiring all asset handles for %@ with lastUsedTime before "%@" (%lld)
CloudKit asset cache handle expiration
assetHandleExpiration
ass:Scheduled asset handle expiration for once every hour
ass:Asset handle expiration timer fired for %@
ass:In-flight asset handles marked as interrupted during un/registering:%d upload:%d download:%d item unregistred:%lu
ass:set already contained object %@
Warn: No completion block was set for the fetch of record %@
daemon/record-fetch-aggregator
Performing callback for fetch info %@
Done flushing record callbacks for <%{public}@: %p; %{public}@>. Current highest callback is %lu
Sending fetch requests for <%{public}@: %p; %{public}@>
Fetching the following record IDs from the server for operation <%{public}@: %p; %{public}@>: %@
Running the following full records through a fetch records operation for <%{public}@: %p; %{public}@>: %@
Record fetcher <%{public}@: %p; %{public}@> fetched a record with ID %@.%@%@
Fetch records operation %p completed for <%{public}@: %p; %{public}@>
Starting fetch records operation %p for <%{public}@: %p; %{public}@>
Parent asked record fetch aggregator operation <%{public}@: %p; %{public}@> to finish before it started
Starting record fetch aggregator operation <%{public}@: %p; %{public}@>
Enqueuing a record fetch for record %@
Found record %@ in the cache, but it needs decryption.  Going through the fetch flow.
Found record %@ in the cache. Returning that record
Fetch aggregator %p in %@
Finishing fetch aggregator <%{public}@: %p; %{public}@>
Fetch aggregator <%{public}@: %p; %{public}@> finished
daemon/fetch-web-auth-token
Fetch web auth token operation <%{public}@: %p; %{public}@, %@> is starting
Fetched web auth token (%@) with response code %ld
Fetch web auth token operation <%{public}@: %p; %{public}@, %@> finished with error %@
Creating MMCS engine at %@
Error creating MMCS directory at %@: %@
Failed creating MMCS engine at %@
Destroying MMCS engine %@
Found a cached engine context %@
Removing context %@ for path %@ from sharedContextsByPath
context %@ not in sharedContextsByPath %@ for key %@
Cancelling requests for MMCS engine wrapper %@ and context %@
Did cancel for MMCS engine wrapper %@ to cancel the requests for %@
Waiting for MMCS engine wrapper %@ to cancel the requests for %@
This would block
Attempted to stop tracking untracked itemID %llu
ignoring exception; threw %@
Expected to have created a writer for itemID:%llu: %@
Failed to get the item reader for itemID:%llu: %@
ignoring item with zero itemID in _stopTrackingMMCSItems %@
setting up a package section? %@
Zero-length asset with itemID %@
Invalid mmcs operation type %ld
The group is already complete: %@
Completed MMCS item group %@ with error: %@
Completed MMCS item group %@
Can't find MMCS item for itemID %llu
Chunk count %@ and file size %@ inconsistent
Progress of MMCS item %llu: s:%d p:%0.4f error:%@
Progress of MMCS item %llu: s:%d p:%0.4f
Progress of MMCS package section %@: s:%d p:%0.2f error:%@
Progress of MMCS package section %@: s:%d p:%0.2f
Error getting MMCS item %@
File size mismatch for item %@ : %@ != %@
Finished getting MMCS item %@
Error getting file metadata for MMCS item %@ : %@
Error putting MMCS item %@
Finished putting MMCS item %@ and asset %@
Finished putting MMCS item %@
Unregistering item without an asset handle for itemID=%llu
Cannot find deviceID for asset handle. Deferring deletion of %@
threw %@
Failed to open %@ for operationID:%{public}@: %@
Scheduling delete for the asset handle with itemID:%llu, UUID:%@
invalidate, reader:%p
CKDMMCSItemReaderCopyProperty threw %@
daemon/batch-get-user-privacy-settings
====
=====
======
=======
HEY DUMMY LOOK AT THIS LOG MESSAGE
You need to sign in to the account "%@" in settings, probably to accept some dumb T&Cs. Error: %@
=======
======
=====
====
Fetching account info for fake account with email %@
Initialized fake account with email %@ and dsid %@
Got vetting auth completion, error: %@, results: %@
daemon/ckcode-function-invoke
Error %@ when invoking function
Error %@
Function invocation completed
CKCode Function invocation finished%@%@
Invoking CKCode function
CKCode Local Function invocation finished%@%@
Starting CKCode function invoke operation <%{public}@: %p; %{public}@, %@>
Un-entitled client is not allowed to set explicit code operation url of %@
Path %@ deleted/renamed, exiting.
Operation key: %@ seconds until not flow control limited: %.2f
Operation key: %@ flow control limited: %@
Generating flow control object for operation key: %@, budgetCap: %lu, regeneration: %.2f/s
Expended flow control cost: %lu for operation key: %@, budget is now: %.2f
Expended flow control for retry-after of %lu seconds (cost of %lu) for operation key: %@, budget is now: %.2f
Expended flow control for local error with cost: %lu for operation key: %@, budget is now: %.2f
Couldn't read the package manifest at %@
Found empty package %@
Read section with index %ld, size %lld, signature %@
Read %ld sections from manifest for package %@
Read item with index %ld, section index %ld, section offset %llu, size %lld, signature %@
Read %ld items (%llu bytes) from manifest for package %@
Wrote package section with size:%lld, signature:%@
Wrote %ld sections to manifest for package %@
Wrote package item with size:%lld, signature:%@
Wrote %ld items (%llu bytes) to manifest for package %@
Placeholder op %{public}@ starting
Placeholder op %{public}@ was cancelled - finishing the real operation
Placeholder op %{public}@ finished
System is unavailable. Scheduling operation %{public}@ on suspended operation queue %@
Placeholder op %{public}@ canceling
daemon/fetch-record-zone-pcs-diagnostics
Fetched record zone %@ (id %@) with response code %ld
Fetch record zone PCS diagnostics operation <%{public}@: %p; %{public}@, %@> is starting
Fetch record zone PCS diagnostics operation <%{public}@: %p; %{public}@, %@> finished with error %@
Switch environment changed to '%@'
Switch preferences changed. Reloading our configuration
Fetching Global Configuration for operation %p
Waiting on global configuration operation %p for operation %p
Waited on outstanding global configuration operation %p for operation %p
Got an error from CKDContainerSpecificInfoOperation: %@
Set in-memory container specific info from op result: %@
Fetched global configuration from metadata cache: %@
Finished fetching global config on behalf of operation %p
Set container info from cached metadata: %@
No in-memory containerSpecificInfo, going to the server
Fetching container info for context %@ gave success %d error %@
Warn: Dropping all config bags and forcing a re-fetch of our config.
CKDServerConfigurationManager/_behaviorOptionsChanged
Warn: The config or setup server address changed.
Expiring configuration for %@
daemon/aggregate-zone-pcs
Fetching PCS data for %ld zones
Fetched pcs info for zone %@
Warn: Couldn't fetch PCS data for zone %@: %@
Warn: Error preparing target zone PCS: %@
Target zone %@ was successfully saved to the server
Received a PCS oplock failure for save of zone %@. Re-fetching the zone PCS and trying again
Failed to save zone %@ to the server %ld times with a PCS oplock error
req: %{public}@, "Inlining fake response operation result for item id %@"
req: %{public}@, "Received no public key when discovering user identity, though it was requested, this is an OON case"
req: %{public}@, "OON user identity detected: %@"
req: %{public}@, "Node level failure for info %@: %@"
req: %{public}@, "Fetched configuration plist from server: %@"
An existing invalidated proxy operation was found for operation %{public}@: %@. Unregistering that operation and setting %@ as the new delegate
Couldn't find metadata for operation %{public}@
Not returning operation %{public}@ as resumable since it has a delegate
Operation info entry is corrupted: %@
Unexpected operation info result: %@
Removing all cached long-lived operation info for account ID %@
Couldn't find an operation with ID %{public}@ to set the result
Registering retry number %d for operation %{public}@
Not registering a retry for operation %{public}@ since we have an interested delegate
Couldn't find an operation with ID %{public}@ to register a retry
operationInfoCacheEviction
daemon/global-configuration
Error fetching configuration from the server: %@
Fetched configuration from the server: %@
Error fetching archived records in zone %@: %@
Record PCS fetch operation %{public}@ received PCS data (%@/%@)%@%@
Record PCS fetch operation %{public}@ already has PCS data %@. Ignoring the fetch callback with %@/%@
Fetching PCS data for record %@ from the database
PCS data was found in the database, but it didn't have the requested chain PCS. Fetching PCS data from the server for record %@.
PCS data was fetched from the database for record %@
No PCS data was found in the database for record %@
Error fetching PCS data from the server: %@
PCS data from server for %@ has no PCS chaining blob. Creating it and saving the record to the server
Got an error trying to save parent chain PCS data: %@
Successfully saved chain PCS data on record %@
Warn: We don't have a zone ID in our PCS data for record %@. Using the record's zone ID instead
Fetching PCS for zone %@ in order to decrypt record %@
Fetching parent PCS from record %@ for child record %@
Assuming %@ is a share since we have no share or parent ID set
Fetching PCS for share %@ in order to decrypt record %@
Record %@ is in shared zone %@. Using zone PCS data to decrypt it.
All PCS fetches for shared record %@ have finished.
Record has a zoneish public key set, but we didn't fetch a zoneish PCS on this zone. We'll try decrypting the record PCS anyway, but this might fail.
Attempting a decrypt of record %@ via its parent PCS (record %@)
Attempting a decrypt of record %@ via its share PCS (record %@)
Attempting a decrypt of record %@ via its shared zone PCS (zone %@)
Error decrypting chain PCS on record %@: %@
Successfully decrypted chain PCS data on record %@
Didn't get any chain PCS data on record %@, but the client requested it. This might be ok since the client might want to create it
Error decrypting public sharing key on record %@: %@
Successfully decrypted public sharing key on record %@
Starting lookup for request %@
req: %{public}@, "Couldn't parse object %@"
Not caching user identity without a public sharing key: %@
Found lookup info key %@ in cache, injected it into cached identity %@. Public key is %@/%lu
Chaining batched requests, %@ will trigger %@
Executing chained batched requests, triggering %@
Fetching public identities failed: %@
Fetching public identities completed
Starting execution of batched requests, triggering %@
Creating request to fetch public identity for %lu infos (batch size is %lu)
Got OON user identity %@
Generated private key for OON user identity: %@
Error while generating private key for OON user identity: %@
Saving user identity %@ with publicSharingKey %@
Failed to perform a user identity lookup for lookup info %@: %@
Error while creating identity: %@
Created OON PCS identity %@
Error while extracting private key from identity: %@
daemon/break-assets
Retrying markAssetsBroken on <%{public}@: %p; %{public}@, %@> after error %@
Simulate asset corruption operation <%{public}@: %p; %{public}@, %@> could not fetch record with error %@
Simulate asset corruption operation <%{public}@: %p; %{public}@, %@> completed fetch record with error %@
Simulate asset corruption operation <%{public}@: %p; %{public}@, %@> completed fetch record
Simulate asset corruption operation <%{public}@: %p; %{public}@, %@> could not fetch repair zone with error %@
Simulate asset corruption operation <%{public}@: %p; %{public}@, %@> completed repair zone fetch with error %@
Simulate asset corruption operation <%{public}@: %p; %{public}@, %@> completed repair zone fetch
Simulate asset corruption operation <%{public}@: %p; %{public}@, %@> could not save repair zone with error %@
Simulate asset corruption operation <%{public}@: %p; %{public}@, %@> completed repair zone touch with error %@
Simulate asset corruption operation <%{public}@: %p; %{public}@, %@> completed repair zone touch
Simulate asset corruption operation <%{public}@: %p; %{public}@, %@> could not upload corrupted asset with error %@
Simulate asset corruption operation <%{public}@: %p; %{public}@, %@> completed uploading corrupted asset with error %@
Simulate asset corruption operation <%{public}@: %p; %{public}@, %@> completed corrupted asset upload
Could not find asset or package in field %@ and index %ld of record %@
Marked asset broken with response code %ld
Error breaking asset: %@
Completed marking asset broken
daemon/break-assets-url-request-wrapper
Failed to convert share: %@
Fetched record %@ (record: %@). %@%@
Client wants per-item PCS errors so not failing operation %@ due to PCS error for record %@
Fetching changes from the server for %lu zones with options:
Batch Record Fetch request <%{public}@: %p; %{public}@, %@> for operation %{public}@ finished with error %@
We're not done here. Sending another fetch changes request for %lu zones with options:
Batched Record fetches finished%@%@
daemon/fetch-record-changes
Warn: Zone %@ wasn't found on the server for fetch changes request %{public}@. Wiping caches for that zone
Fetching changes from the server for %lu zone%@ with options:
daemon/fetch-changed-record-zones
Fetching database changes from the server with change token %@
Fetch database changes request <%{public}@: %p; %{public}@, %@> for operation %{public}@ finished with error %@
We're not done here. Sending another fetch request with change token %@
req: %{public}@, "Getting Bundle IDs for container %@"
daemon/fetch-records
Fetch records url request completed. Waiting for all record callbacks to finish before completing request <%{public}@: %p; %{public}@, %@>
All record callbacks are complete. Finishing request %{public}@
Fetched records for <%{public}@: %p; %{public}@, %@>
Failed to fetch records for <%{public}@: %p; %{public}@, %@>: %@
All record callbacks are complete. Finishing fetch operation
All record callbacks are complete. Finishing decrypt operation if any.
Could not find original list key %@ for desired indexed list key %@
Original list key %@ has incorrect value type %@ for desired indexed list key %@
Couldn't decrypt record %@: %@
Failed to decrypt a record from our cache. Refetching record %@ from the server and trying again
Fetched record %@, etag-matched:%@, responseCode:%d
Record not found in private DB. Setting PCS data nil on caches
Returning record %@ from cache.
Calling completion block for nil or failed record with ID %@: %@
Prepping PCS data for share %@ with context %@
Didn't get a sharing identity from the public PCS for share %@
Using cached asset for signature %@, record %@, recordKey %@ and operation %{public}@
Prepared asset %@ for record %@, recordKey %@ and operation %{public}@
Using cached package %@ for record %@, recordKey %@ and operation %{public}@
Prepared package %@ for record %@, recordKey %@ and operation %{public}@
Preparing assets for download for record %@ and operation %{public}@ (shouldFetchAssetContent:%@ inMemory:%@)
Skipping asset download for key %@ on record %@
Will fetch asset content in memory for key %@ on record %@
Failed to download assets for operation %{public}@: %@
Downloaded assets for operation %{public}@
No cloud certs to download for operation %{public}@
No assets to download for operation %{public}@
Downloading assets: %@, in-memory assets: %@, and publish assets %@ for operation %{public}@
Failed to download asset %@ for record %@ and operation %{public}@: %@
Downloaded asset %@ for record %@ and operation %{public}@
Failed to fill out download URL info %@ for record %@ and operation %{public}@: %@
Filled out URL info %@ for record %@ and operation %{public}@
Starting fetch records operation <%{public}@: %p; %{public}@, %@>
Operation %{public}@ is finishing early because there are no records to fetch
Fetch user record url request completed. Waiting for all record callbacks to finish before completing request <%{public}@: %p; %{public}@, %@>
Operation %{public}@ has a decrypted PCS blob for %@ %@.
Not fetching PCS data for %@ %@ from the network because a local only fetch was requested
Failed to fetch PCS data from the server for %@ %@: %@
%@ PCS fetch operation %{public}@ has failed too many times. Giving up with error %@
Retrying PCS fetch operation %{public}@ after failure %d with error %@
daemon/archive-records
Record with ID %@ was successfully archived
Error archiving record with ID %@: %@
Starting archive records operation %{public}@ for record IDs %@
Archive records request %{public}@ is complete
daemon/mark-notifications-read
Notification with id %@ was marked read
Error %@ when marking notification with id %@ as read
daemon/fetch-share-participant-key
Returning participant key for share %@
Returning error for share %@: %@
Couldn't get a short token for share %@
Verifying decryption of the invited PCS using the exported per-participant PCS key
Couldn't create a participant identity from the exported per participant key
Successfully decrypted the share invited PCS: %@
Using base token "%@" on share %@
Share %@ needs to be updated on the server so that it gets a PPPCS for the owner
No shares to fetch from the server. Returning early
Fetching %lu shares from the server for operation %{public}@
Fetch share participant key operation %{public}@ finished%@%@
Error updating share %@ on the server: %@
All shares have been updated on the server
SecItemCopyMatching() failed: %ld
SecItemAdd()/SecItemUpdate() failed: %ld
Fetched deviceID from keychain
daemon/modify-records
Records needed PCS info re-fetched: %@
Fetching user public keys for operation %{public}@
Error fetching current service public keys for user: %@
Fetched %lu user public key%@ for operation %{public}@
Fetching container scoped user identifier for operation %{public}@
Error fetching container scoped user identifier for operation %{public}@: %@
Fetched container scoped user identifier for operation %{public}@: %@
Skipping topo sort of all zones for container %@
Fetching participants for shares: %@
Warn: Got a fetched share callback without a recordID: %@
Skipping fetch of share PCS data for %@ because encryption is disabled
Skipping fetch of record PCS data for %@ because encryption is disabled
re-referenced asset signature not found in source asset array
Error preparing assets for handler %@: %@
Fetching user boundary key for operation %{public}@
Error fetching user boundary key for operation %{public}@: %@
Fetched user boundary key for operation %{public}@: %@
Uploading assets for operation %{public}@: %@
Setting boundary key %@ for operation %{public}@ on (at most) %lu assets to upload.
Failed to upload asset %@ for record %@ and operation %{public}@: %@
Failed to upload assets for operation %{public}@: %@
Of %lu potential v2 assets, set boundary keys on %d of them
Skipping saving records for operation %{public}@ after uploading assets: %@
Will skip zone %@ because handler isn't ready:
Skipping zone %@ because some items in that zone aren't ready to be uploaded yet
Failed to decrypt record with ID %@: %@.
We had PCS data but failed to decrypt. This is going badly.
Marking record %@ for another retry after fetching PCS data
Failing save of record %@ because we couldn't decrypt it
Verifying encrypted data on record %@ before uploading it
Sending %ld records to the record decrypt operation before uploading them to the server
Successfully decrypted record %@. Continuing with save of that record
Decrypting server record %@ returned from save
Failed to decrypt server record %@. Returning as is.
Successfully decrypted server record from save %@
Got a response for record with ID %@, but we didn't try to put that record.
Record %@ was successfully saved to the server
Error when saving record %@ to the server: %@
Record PCS etag failed for record %@
Zone PCS etag failed for record %@
%@ oplock failed for record %@
Record PCS chain was invalid
Handling error for record %@ as an oplock failure
Clearing zone PCS tag for record %@
Decrypting server record returned by oplock failure %@
Failed to decrypt record %@. Returning as is.
Successfully decrypted record %@
Record %@ was successfully deleted from the server
Error %@ when deleting record %@ from the server
Record %@ isn't ready, so we're going to skip the record upload phase.
Saving %d records to the server with change token %@
Deleting %d records from the server.
No records to save or delete. Skipping sending a request to the server.
Some records failed to prepare for this save. Skipping save to the server and retrying if possible
Not sending a modify request to the server
Ensuring all handlers have completed for operation %{public}@
Share PCS fetch operation %{public}@ received PCS data (%@)%@%@
Share PCS fetch operation %{public}@ already has PCS data %@. Ignoring the fetch callback with %@/%@
Fetching PCS data for share %@ from the database
PCS data was fetched from the database for share %@
Couldn't decrypt PCS data for share %@ from the database with error %@. Ignoring it and re-fetching from the server
No PCS data was found in the database for share %@
daemon/fetch-record-versions
Fetched %ld versions for record with ID %@ (is deleted: %@)
Couldn't decrypt data for record version %@: %@
Failed to fetch versions for record %@: %@
Fetch record versions operation <%{public}@: %p; %{public}@, %@> finished with error %@
ManagedConfiguration is restricting account access
Checking TCC authorization for bundleID:%@ with %lu prox%@.
TCC accepted a token for bundleID:%@, proxy:%@
TCC rejected a token for bundleID:%@, proxy:%@
TCC is restricting account access for bundleID:%@
Got enterprise volume container path %s from containermanager
Error getting enterprise volume container path from containermanager: %llu
Registering: %s xpc activity, activityInterval: %lld, activityGracePeriod: %lld
%s xpc activity state: check in. criteria: %@
%s xpc activity state: run.
Couldn't set activity state to DONE
Performed phone number canonicalization: %@ -> %@ (raw was %@)
Error fetching changes in zone %@: %@
There's an iCloud account %p: %@ without a CloudKit Child Account. This ain't right, I'll make a new one.
Saving CloudKit account %p: %@ with parent account %p: %@
New CK account save failed: %p: %@: %@
Saved new CK Account %p: %@
Re-fetching our auth token
Renew result was %@
Can't renew auth token because we don't have an account or an account store
Couldn't create url from dataclass %{public}@ with properties %{public}@
Couldn't get sharing URL host from properties %{public}@. Falling back to legacy hostname.
Using device count override (%d)
Getting device count for account %@
Using cached device count %ld from last fetch date %@
Fetching device list for account: %@
Error fetching device list: %@
Wrong response type %@ when fetching devices
Fetched device list with %ld devices
Error saving device count: %@
Saved device count
Updated the connection pool limit (%d) for "%@"
daemon/fetch-record-zones
Failed to save zone %@ to the server %ld times with error %@
Updating identity on zone PCS for zone %@
Failed to remove server provided invited key %@ from zone: %@
Couldn't update identity on zone PCS for zone %@: %@
Updating zoneish PCS on zone %@
Couldn't roll master key for zoneish PCS: %@
Updating zone PCS for zone %@
Couldn't add our updated service identity to zone PCS: %@
Couldn't create a PCS etag for zone %@: %@
Saved updated zone %@%@%@
Saving the following zones with updated zone PCS to the server:
Error creating zone PCS for zone %@: %@
Fetch record zones operation <%{public}@: %p; %{public}@, %@> is starting
Fetch record zones operation <%{public}@: %p; %{public}@, %@> finished with error %@
Preflighting PCS identities for zone fetch operation %@
Couldn't preflight PCS identities for the current service. Failing zone fetches for operation %@
daemon/db-operation
Error closing PCS SQL cache at %@: %@
Cannot vacuum db %@ while in transaction
Flushing batch for db %@ before vacuuming
About to incremental_vacuum %ld bytes of the PCS cache. Currently have %ld bytes in the free list
Failed to incremental_vacuum the PCS cache
pcsSQLCacheEviction
Evicting all PCS SQL caches. Known app containers are %@
Done evicting PCS SQL caches for all known contexts
Evicting PCS SQL caches for context %@
Done evicting PCS SQL caches for context %@
Decrypt of record %@ is complete
daemon/decrypt-records
Enqueing decryption for record %@
Record %@ was decrypted%@%@
Clearing protection data for record %@ and retrying decryption
Decryption has failed for record %@ too many times. Giving up
We need to decrypt properties on record %@. Fetching PCS data for that record
Suppressing error for record %@ because no protection data was found on the record while forcing decryption and it has no properties requiring decryption
Record %@ has items that require encryption but no protection data was found on the record
Encryption is disabled, so we're only going to pretend to unwrap the data on record %@. You asked for it!
Couldn't create a sharing identity from sharing identity data: %@
Setting CKRecordPCS on record %@: %@
Fetched zone PCS data. Record %p recordID %@ zoneID %@ zone PCS etag %@%@
Couldn't fetch a PCS for zone %@
Couldn't get a zoneish PCS for zone %@. We'll try the record PCS if it exists, just in case.
Couldn't fetch a PCS for zone %@%@
Couldn't create record PCS for record %@: %@
Couldn't create record PCS for record %@ from share: %@
Couldn't create record PCS for record %@ from parent PCS: %@
Fetched share PCS data. Record %p recordID %@ shareID %@ share PCS etag %@%@
Couldn't fetch a PCS for share %@
Fetched parent PCS data from record %@ for record %@
Couldn't fetch a PCS for parent record %@
Got PCS data from fetched share %@%@%@
Couldn't get a PCS for our current share %@
Fetching PCS data.  Record %p recordID %@ zoneID %@
Couldn't get a PCS object for record %@
Couldn't get a PCS object for the record %@
Decrypt operation %{public}@ in %@
Decrypt operation %{public}@ is finishing. Waiting for all records to finish decrypting in case it never started
Finishing decrypt records operation %{public}@
Decrypt operation %{public}@ is finishing. Waiting for all records to finish decrypting first...
All records have been decrypted for operation %{public}@
Record decrypt operation %{public}@ was asked to finish before it started
Starting decrypt records operation %{public}@
CKDClientContext missing for CKEventMetric %@
Failed to fetch server configuration for CKEventMetric %@. %@
Failed to set options for CKEventMetric %@
daemon/container-specific-info
Error fetching database URL from the server: %@
Fetched database URLS from the server: %@
daemon/upload-assets
We don't have a DSID so we can't copy our current PCS identity
Can't copy identity for service %@. Manatee not available for current account due to %@
Current dsid: %@. Cached identities dsid: %@. The dsid has changed underneath us and we didn't clear our identity cache. Clearing cache and failing identity request
Returning cached identity for service %@ and %@account %@
Caching a fresh %@identity for service %@.
Identity set %@ does not have a current key set. Not using it and removing it from cache.
Using service identity:
Didn't get a service identity from the PCS framework
Warn: Couldn't add liverpool identity to app-specific identity: %@
Couldn't get an identity for service %@ from the PCS framework: %@
Got identity from the PCS framework %@
Failed to get full identity set: %@.
Can't create a diversified identity with no server entropy
Warn: Couldn't get a %@ identity set: %@
Warn: Couldn't create a diversified %@ identity: %@
Warn: Did not get any public keys for service %@.
Current identity public key data is %@
Warn: Error generating fingerprint for current self identity: %@
Couldn't create a new identity set: %@
Error fetching iCloud auth token for account %@: %@
Fetching PCS identity set for account %@
Error fetching PCS identity set: %@
PCS identity set fetched:
service: %@ <%@>
Error copying per-silo identities: %@
Refusing to try to create a sharing identity from a nil public key
Couldn't create a sharing identity from public key %@: %@
Created sharing identity %@ from public key %@
Couldn't create a new sharing identity: %@
Created sharing identity %@
Refusing to try to create data from a NULL sharing identity
Couldn't create data from sharing identity %@: %@
Created data from sharing identity %@: %@
Refusing to try to create a sharing identity from nil data
Couldn't create a sharing identity from data %@: %@
Created sharing identity %@ from data %@
Identity set %@ was expected to have a current key set %@. %@
Error getting cloudKitAuthToken: %@
Error getting iCloudAuthToken: %@
Failed to update account properties, error %@
Failed to save verified account, error %@
Determining CloudKit info for %@
authenticate Succeeded. Email %@ gave dsid %@ altDsid %@ auth token %@
The overridden email / password of "%@" / "%@" didn't yield a happy response %@
Couldn't provision overridden email / password of "%@" / "%@": %@
daemon/get-user-privacy-settings
Found user privacy settings %@
daemon/accept-shares
Share with URL %@ was successfully accepted
Warn: Couldn't prep PCS data %@: %@
PCS oplock failure for share with url %@.
Error accepting share with URL %@: %@
No shares to accept
Error accepting shares: %@
Couldn't pull pcsData off fetched share, re-fetching: %@
Fetched share's PCS data lacked publicPCS, re-fetching
Warn: Couldn't create share PCS data while accepting metadata: %@
Fetching shares for already accepted share IDs: %@
Accepted share %@ fetched for URL %@
Warn: Error while fetching accepted shares: %@
All accepted shares were fetched successfully
Couldn't get a diversified %@ identity to the public PCS for share at URL %@: %@
Couldn't add our %@ identity to the public PCS for share at URL %@: %@
Decrypting the per-participant PCS for calling participant %@
Error decrypting the invited PCS on share %@: %@
Create protection info in OON key-swap for participantID: %@, recordID: %@
Share at URL %@ has already been accepted. Fetching the share instead of re-accepting it
Adding ourselves to the public PCS for share %@
Updated share public PCS for share at URL %@ is %@
Couldn't decrypt invited PCS blob for share %@
We were able to decrypt the private PCS for share %@
Failing to accept manatee share with URL %@ since we were not given a sharing invitation blob by the client
Failing to accept share with URL %@ since we are ineligible to accept as role %@
Failed to accept share with URL %@ %lu times with a PCS oplock error
Fetching share metadata for %ld URL%@: %@
Done fetching all share metadata%@%@
Invalid data from server: %@
daemon/save-user-privacy-settings
Download Preauthorization Failed to Init
Invalid record identifier from server %@: %@
Couldn't create a record ID from %@
Didn't get a record object in %@. Giving up.
Couldn't convert share ID for record: %@
Couldn't create a share reference for share %@
Couldn't convert parent record ID: %@
Warn: Couldn't create a parent reference for record %@
Warn: Caught an exception when trying to encode record: %@
Download Preauthorization For Response UUID %@ Not Found
Share has no share ID: %@
Couldn't create a record ID from share ID %@
Couldn't create a share with ID %@. Giving up.
Failed to convert participant %@ for share %@: %@
Unable to convert payload message: %@
Unable to parse dialog body %@: %@
Matching long-lived proxy %@ that has context %@
Found a cached long-lived proxy: %@ with context %@
Created a new long-lived proxy with context %@
Operation %{public}@ with operationClass %{public}@ doesn't respond to selector %{public}@. Dropping from long lived cache.
daemon/modify-badge
Completed request: %@
Invalid data from server in response to modifyRecords request: %@
req: %{public}@, "Error parsing server record returned for save: %@"
daemon/repair-assets
Repair records operation <%{public}@: %p; %{public}@, %@> could not fetch original record with error %@
Repair records operation <%{public}@: %p; %{public}@, %@> completed fetch original records with error %@
Repair records operation <%{public}@: %p; %{public}@, %@> completed fetch original records
Could not find original record for asset or package %@
Could not find original asset or package for asset or package %@
Progress for upload of repaired asset %@: %.2f
Failed to upload asset or package %@ with operation %{public}@: %@
Successfully uploaded asset or package %@
Repair records operation <%{public}@: %p; %{public}@, %@> finished with error %@
Repair records operation <%{public}@: %p; %{public}@, %@> succeeded
Received error code %ld for repair, so treating as not available
Wrong amount of repair records to update: %ld
Repair asset operation <%{public}@: %p; %{public}@, %@> completed repair record update with error %@
Repair asset operation <%{public}@: %p; %{public}@, %@> completed repair record update
%@, %p, "%@", items:%@
Cleaning up finished fetches and starting pending fetches. Running fetches are %@ and pending fetches are %@
Fetch %@ is finished. Removing it now.
Holding queued fetch %@ because an equivalent fetch is already running
Firing queued fetch %@ immediately since a running fetch is waiting on it
Firing queued fetch %@ immediately since its been waiting too long
Fetch is %@ready to fire: %@
Rescheduling queued fetch timer to fire after %.2f seconds
Re-using fetch request %@ for operation %{public}@
Creating a new fetch request for operation %{public}@
Enqueing fetch of record %@
Enqueing fetch of share %@
Enqueing fetch of zone %@
PCSFetchAggregator %p was cancelled
daemon/fetch-archived-records
Fetching archived records from the server for %lu zones with options:
Can't close database: %@
Unable to truncate database: %d; %s
Can't unlink '%@'
Couldn't set up connection the database at %@. Giving up on setup
Couldn't get current cache version: %@
Truncating old database
Couldn't truncate the database at %@. Giving up on setup
Creating initial database tables at %@
Creating initial tables failed
Migrating database to version %d
No upgradeInfos should tell us to truncate if we're trying to incrementally upgrade the database.
Can't migrate to version %d: %@
Migration to version %d failed
Vacuum after migration to version %d failed: %@
Vacuumed after migrating database to version %d
Sqlite request %@ failed on %@ with error [%@]
Sqlite failed on %@ with error [%@]
Something went really wrong with the cache: %@
The database is corrupt and will be deleted because of error %@
The database could not be deleted because of error %@
Couldn't create directory at path %@: %@
Exception setting up database: %@
Error on our first try opening the database at %@: %@
Error on our second try opening the database at %@: %@
Error removing the database at %@
%@ in %@. Force close
Resetting database at %@
Removing database at %@
Failed to convert record zone: %@
Removing all container metadata cached info
Removing container metadata cached info for accountID %@
Got the following Apple account identifiers from Accounts:
Cached account identifiers:
Removing container metadata cached info for stale accountID %@
token metadata is corrupted: %@
Missing required info on %@
Error unwrapping asset key: %@
Error find clear asset key: %@
Not using encryption keys for the asset %@
CoreCDP is now reporting that manatee is%@ available for the logged in account.%@
CoreCDP reports that manatee is%@ available for the logged in account.%@
Returning cached manatee availability originally retrieved from CoreCDP: manatee is%@ available.%@
Manatee state may have changed. Fetching new state from CoreCDP
0A(knN
u"A@(#)PROGRAM:CloudKitDaemon  PROJECT:CloudKit-852
CKDPRecordResolveTokenResponse
NSCopying
CKDCachePurger
CKDRecordCache
CKDAssetRecord
CKDRecordCachePool
CKDPUserAvailableQuotaResponse
CKDMMCSItemGroupSetContext
CKDCancelling
CKDPDateStatistics
CKDaemonExtensions
CKDPNotificationSyncResponse
CKDPCSCache
PCSCacheEviction
CKXPCDaemon
NSObject
CKXPCClient
CKDCloudDatabaseServer
CKDPProtectionInfo
CKDPRecordRetrieveRequest
CKDProxyOperationQueue
CKDProxySetupOperation
CKXPCExtensions
CKDClientProxy
CKDSystemAvailabilityWatcher
CKDClientContext
CKDContextInfoProvider
CKDAccountAccessInfoProvider
CKDContainerScopedUserIDProvider
CKDPAssetUploadTokenRetrieveResponseHeaderInfo
CKDPCSMemoryCacheEntry
CKDPCSMemoryCache
CKDPArchiveRecordsRequest
CKDPResponseOperationHeader
CKDPSetBadgeCountResponse
CKDPQuerySort
CKDMMCSItemCommandWriter
CKDMMCSItemReaderWriterProtocol
CKDAssetTokenRequest
CKDPUserPrivacySettingsBatchLookupResponseContainerPrivacySettings
CKDKeyValueDiskCache
CKDPipeliningInfo
CKDOperation
CKDURLRequestMetricsDelegate
CKDURLRequestAuthRetryDelegate
CKDFlowControllable
DaemonExtensions
CKDPResponseOperationResult
CKDPCodeFunctionInvokeRequestAttestationRequest
CKWaiterWrapper
CKDZoneGatekeeper
CKDAssetRequestPlanner
CKDFetchRecordPCSDiagnosticsOperationInfo
NSSecureCoding
NSCoding
CKDFetchRecordPCSDiagnosticsOperation
CKDQueryOperation
CKDOperationPipelining
CKCDPCheckContainerHealthRequest
CKDQueuedRecordFetch
CKStreamLogStatsTuple
CKLStreamLogStatsObserver
CKDPZoneRetrieveRequest
CKDPCSCacheZoneFetchOperation
CKLTailLog
OSLogPersistenceDelegate
OSActivityStreamDelegate
CKDAppContainerTuple
CKDAppContainerAccountTuple
CKDPrivacyManager
CKDQueuedFetch
CKDURLRequest
C2RequestDelegate
CKDZoneGatekeeperWaiter
CKDPSetBadgeCountRequest
CKDDirectoryPurger
CKDPPackageManifestSection
CKDPStreamingAssetIdentifier
CKDWrappingContext
CKDPCSManager
CKDPCSTestOverrideProvider
CKDProtocolTranslatorIdentityDelegate
CKDFetchShareMetadataOperation
CKDShareTokenMetadata
CKDModifyWebSharingOperation
CKDMMCSTestEncryptedItemReader
CKDModifyRecordAccessOperation
CKDPStreamingAssetSaveAssetRequest
CKDPZoneSaveRequest
CKDPConfigurationField
CKDQueuedZoneFetch
CKDDiscoverUserIdentitiesOperation
CKDDiscoverAllUserIdentitiesOperation
CKDPArchiveRecordsResponse
CKDPTokenUnregistrationResponse
CKMetricOptionAdditions
CloudKitExtensions
CKDAssetZoneKey
CKDTransactionState
CKDGetContentAuthTokensForPutURLRequest
CKDCompleteParticipantVettingOperation
CKDContainerInfo
CKDCodeLocalFunctionInvokeURLRequest
CKDPCodeFunctionInvokeRequest
CKDPZoneDeleteRequest
CKDPRecordFieldIdentifier
CKDQueryURLRequest
CKDURLRequestPipelining
CKDOperationMetricsCache
CKPackageDownloadTask
CKDDownloadAssetsOperation
CKDOperationStatistics
CKDPFieldActionReplaceListRange
CKDFetchUserQuotaOperation
CKDPRecordResolveTokenRequest
CKDAssetZone
CKDPAssetUploadTokenRetrieveRequestHeaderInfo
CKDTapToRadarRequest
CKDTapToRadarManager
Helper
RecordFields
CKDPUpdateMissingAssetStatusResponse
CKDSystemAvailabilityWatcherWrapper
CKDSystemAvailabilityMonitor
CKDInitiateParticipantVettingURLRequest
CKDPushConnection
CKLogError
CKHack
CKCDPCodeServiceRequestProtectedCloudComputeMetadata
CKDContainerSpecificInfoURLRequest
CKDPStreamingAssetSaveAssetResponse
CKDModifyRecordZonesOperation
CloudKitAdditions
CKDPZone
CKDVolumeManager
CKDPRequestedListField
CKCDPCodeServiceRequestAccountConfig
CKDPResponseOperationResultErrorAuxiliaryError
CKDPAssetUploadTokenRetrieveResponseUploadToken
CKDPFieldActionInsertIntoList
CKDRecordResolveTokenURLRequest
CKDShortTokenLookupInfo
CKLStreamObserver
CKLStreamLogMessageObserver
CKLStreamRawMessageObserver
CKCDPCodeServiceRequestAssetAuthorizeGetRequestOptionsHeaderInfo
CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoEntry
CKDAccount
CKDAccountInfoProvider
CKDTrafficLogger
CKDPResponseOperationResultErrorClient
CKDPClouddbClientRecordsExtension
CKDPClouddbClientRecordsExtension2
BoundPairAdditions
CKDProtobufStreamWriter
NSStreamDelegate
CKDPlistResponseBodyParser
CKDMMCSClientProxyItemReader
CKDPStreamingAsset
CKDPZoneRetrieveResponseZoneSummary
CKDPNotificationMarkReadResponse
CKDPUserQueryRequest
CKDUploadAssetsOperationAdditions
CKDUploadAssetsOperationInfo
CKDUploadAssetsOperation
CKDPRecordSaveResponse
CKDPLocation
CKCDPStopAllContainerResponse
CKDPublishAssetsOperation
CKDPRecordSaveRequest
CKDClientInfo
CKDPRequestOperationHeader
CKDPAssetUploadTokenRetrieveRequestRecordAssetUpload
CKDPResponseOperation
CKDPClouddbClientSharingExtension
CKDPClouddbClientRecordsExtension3
CKDPClouddbClientRecordsExtension4
CKDPClouddbClientRecordsExtension5
CKDPClouddbClientRecordsExtension6
CKDPClouddbClientRecordsExtension7
CKDPClouddbClientRecordsExtension8
CKDPClouddbClientRecordsExtension9
CKDPClouddbClientRecordsExtension10
CKDPClouddbClientRecordsExtension11
CKDPClouddbClientRecordsExtension12
CKDPClouddbClientRecordsExtension13
CKDPClouddbClientRecordsExtension14
CKDPClouddbClientRecordsExtension15
CKDPClouddbClientRecordsExtension16
CKDPClouddbClientRecordsExtension17
CKDPClouddbClientRecordsExtension18
CKDPClouddbClientRecordsExtension19
CKDPClouddbClientRecordsExtension20
CKDPClouddbClientCodeExtension
CKDPClouddbClientSubscriptionsExtension
CKDPClouddbClientSubscriptionsExtension2
CKDPClouddbClientSubscriptionsExtension3
CKDPClouddbClientTestOperationsExtension
CKDPClouddbClientTestOperationsExtension2
CKDPClouddbClientUsersExtension
CKDPClouddbClientUsersExtension2
CKDPClouddbClientUsersExtension3
CKDPClouddbClientUsersExtension4
CKDPClouddbClientUsersExtension5
CKDPClouddbClientDeviceExtension
CKDPClouddbClientDeviceExtension2
CKDPClouddbClientDeviceExtension3
CKDPClouddbClientDeviceExtension4
CKDPClouddbClientDeviceExtension5
CKDPRecordRetrieveVersionsResponse
CKDPCSNotifier
CKDPOperation
CKDProtobufResponseBodyParser
CKCDPCodeServiceResponseAssetAuthorizationResponseHeaderInfo
CKDModifySubscriptionsOperation
CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptions
CKDPRecordRetrieveVersionsRequest
CKDPRecordRetrieveRequestRetrieveAssetURL
CKDPCodeFunctionInvokeResponseAttestationResponseAttestation
CKDPBundlesForContainerResponse
CKDPRequestOperation
CKDMMCSGetOperationInfo
CKDPTokenRegistrationRequest
CKDPPackageManifestHeader
CKDPUserPrivacySettingsRetrieveRequest
CKDInitiateParticipantVettingOperation
CKDPUserAlias
CKDModifySubscriptionsURLRequest
CKDPTokenRegistrationBody
CKDPShareAcceptResponse
CKDPRecordFieldValue
CKDPStreamingAssetRetrieveAssetResponse
CKDPCodeFunctionInvokeRequestProtectedCloudComputeMetadata
CKDPRecordChainParent
CKDPNotificationSyncRequest
CKDRepairZonePCSOperation
CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoValue
CKDGetRecordsURLRequest
CKDPWebAuthTokenRetrieveRequest
CKDPWebAuthTokenRetrieveResponse
CKLTrafficLogMessageFragment
CKLStreamTrafficObserver
CKLStreamTrafficConsoleLogObserver
CKDFetchShareParticipantsOperation
CKDPShareAcceptRequest
CKDArchiveRecordsURLRequest
CKDPQueryFilter
CKDPowerLogger
CKDPQuery
CKDPResponseOperationHeaderAssetAuthorizationResponse
CKDPResponseOperationResultErrorExtension
CKDMMCSItemReader
CKDPRecord
CKDPRecordDeleteRequest
CKDPackageDirectoryPurger
Conversion
CKDTokenDeletionURLRequest
CKDCodeFunctionInvokeURLRequest
CKDGetSubscriptionsURLRequest
CKDResponseBodyParser
CKPrequeliteBindings
PQLValuable
PQLBindable
CKDPCSKeySyncTracker
CKDPCSKeySyncManager
CKDFetchSubscriptionsOperation
CKDModifyShareHandler
CKDPSubscriptionCreateRequest
CKLLog
CKLResponseLogging
CKLParsedObject
CKDPResponseLogging
CKDPSubscriptionNotificationAlert
CKDGetUserRecordURLRequest
CKDPRecordRetrieveChangesResponseRecordChange
CKDPFetchArchivedRecordsRequest
CKDPUser
CKDPAssetUploadTokenRetrieveRequestAssetField
CKDMMCSItemGroup
CKDPUserPrivacySettingsBatchLookupResponse
CKDPSubscriptionRetrieveResponse
CKDPSubscriptionCreateResponse
CKDPOplockFailure
CKCDPStopContainerResponse
CKDMMCS
CKDMMCSItem
CKDModifyRecordHandler
CKDJSONResponseBodyParser
CKDPLocationBound
CKDPSubscriptionRetrieveRequest
CKDPUpdateMissingAssetStatusRequest
CKDPUserPrivacySettingsRetrieveResponse
CKDTrafficMetadata
CKDGetUserPrivacySettingsURLRequest
CKDAccountNotifier
CKDFetchNotificationChangesOperation
CKDSignedServerPublicKeyURLRequest
CKDTokenRegistrationScheduler
CKDPDeleteContainerResponse
CKDFetchWhitelistedBundleIDsOperation
CKDTokenRegistrationURLRequest
CKCDPStopAllContainerRequest
CKDPConfiguration
CKDResetUserPrivacySettingsOperation
CKDRecentProxyInfo
CKDPResponseOperationHeaderAssetAuthorizationResponseHeaderInfo
CKDPCodeFunctionInvokeRequestProtectedCloudComputeMetadataCryptoSession
CKDBatchGetUserPrivacySettingsURLRequest
CKDPPackageManifestItem
CKDPUserPrivacySettingsUpdateRequest
CKDPFieldActionDeleteListRange
CKDUpdateMissingAssetStatusOperationInfo
CKDUpdateMissingAssetStatusOperation
CKDPlaintextResponseBodyParser
CKDPShareMetadata
CKDPCodeFunctionInvokeResponseAttestationResponse
CKCDPCodeServiceRequestOperationGroup
CKDClientConnection
CKFetchTranscodeServerPublicKeyOperationInfo
CKDFetchTranscodeServerPublicKeyOperation
CKDAssetCacheEvictionInfo
CKDAssetCache
CKDRecordFetchInfo
CKRecordFetchAggregatorOperationInfo
CKDRecordFetchAggregator
CKDFetchUserQuotaURLRequest
CKDFetchWebAuthTokenOperation
CKDPResponseOperationResultError
CKDMMCSEngineContext
CDKMMCSItemGroupContextDelegate
CKDMMCSItemGroupContext
CKDMMCSItemReaderWriterDelegateProtocol
CKDPListPosition
CKDPDeleteContainerRequest
CKDPRecordRetrieveChangesResponseShareChange
CKDPShare
CKDContainerPrivacySettings
CKDBatchGetUserPrivacySettingsOperation
CKDBackingFakeAccount
CKDPZoneRetrieveChangesResponseChangedZone
CKDPLocale
CKDCodeFunctionInvokeOperation
CKDPSubscription
CKDMMCSItemGroupSet
CKDFileWatcher
CKDPFieldAction
CKCDPCheckContainerHealthResponse
CKDPTokenRegistrationResponse
CKDPZoneRetrieveResponse
CKDFlowControlManager
CKDPRecordRetrieveChangesResponse
CKPackageManifest
CKCDPErrorUserInfoEntry
CKDPlaceholderOperation
CKDFetchRecordZonePCSDiagnosticsOperationInfo
CKDFetchRecordZonePCSDiagnosticsOperation
CKLEventFilter
CKLStatusFilter
CKDPAssetUploadTokenRetrieveRequest
CKDServerConfigurationManager
CKDPQueryRetrieveResponse
CKDPowerAssertionObserver
CKDPContactInformation
CKDPUserAvailableQuotaRequest
CKDPMarkAssetBrokenRequest
CKDAggregateZonePCSOperation
CKDRecordResponse
CKDDiscoverUserIdentitiesURLRequest
CKDGlobalConfigurationURLRequest
CKCDPStopContainerRequest
CKDFetchWebAuthTokenURLRequest
CKDPAsset
CKDPParticipant
CKDOperationInfoMetadata
CKDOperationInfoDelegateWrapper
CKDOperationInfoCache
CKDGlobalConfigurationOperation
CKDSyncRequestOperation
CKDPTokenUnregistrationRequest
CKDPListRange
CKDFetchArchivedRecordsRequestOperationResult
CKDFetchArchivedRecordsURLRequest
CKDPCSCacheRecordFetchOperation
CKDPShareVettingInitiateResponse
CKDAssetDirectoryContext
CKDFetchDatabaseChangesURLRequest
CKDPublicIdentityLookupService
CKDPRecordDeleteResponse
CKCDPCodeServiceRequestServiceClientConfig
CKDOperationInfoHolderOperation
CKDPConfigurationFieldValue
CKDAccountStore
CKDPUserRetrieveRequest
CKDPQueryRetrieveRequest
CKDFetchNotificationChangesURLRequest
CKDServerConfiguration
CKPropertyCoding
CKDPublicIdentityLookupRequest
CKDMarkAssetBrokenOperation
CKDMarkAssetBrokenURLRequestWrapperOperation
CKCDPCodeServiceRequestAssetAuthorizeGetRequestOptions
CKDPUniqueFieldFailure
CKCDPErrorUserInfoValue
CKDAcceptSharesURLRequest
CKDAcceptShareMetadata
CKDPZoneCapabilities
CKDFetchBatchedRecordsOperation
CKDFetchBatchedRecordsOperationInfo
CKDFetchRecordZoneChangesOperation
CKDFetchDatabaseChangesOperation
CKDFetchWhitelistedBundleIDsURLRequest
CKDRecordDownloadTask
CKDFetchRecordsOperation
CKDGetUserRecordOperation
CKDPCSCacheFetchOperationInfo
CKDPCSCacheFetchOperation
CKDArchiveRecordsOperation
CKDMarkNotificationsReadOperation
CKDFetchShareParticipantKeyOperation
CKDDeviceManager
CKDPUserPrivacySettingsResetResponse
CKDModifyRecordsOperation
CKDPCSCacheShareFetchOperation
CKDPSubscriptionDeleteRequest
CKDPUserPrivacySettingsResetRequest
CKDPQueryRetrieveResponseQueryResult
CKDMMCSRequestOptions
CKDPRequestedFields
CKDFetchRecordVersionsOperation
CKCDPCodeServiceResponse
CKDPRecordType
CKCDPCodeServiceRequestProtectedCloudComputeMetadataCryptoSession
CKCDPError
CKDPRecordSaveRequestConflictLoserUpdate
QueryString
PCSPrivate
CKDPRecordField
CKDPFetchArchivedRecordsResponse
CKDFetchZoneChangesRequestOperationResult
CKDFetchRecordZoneChangesURLRequest
CKDBackingAccount
CKDPMarkAssetBrokenResponse
CKDURLSessionPool
CKDPPackage
CKDPAssetsToDownload
CKDPRecordRetrieveChangesRequest
CKDUpdateMissingAssetStatusURLRequest
CKDFetchRecordZonesOperation
CKDPResponseOperationResultErrorServer
CKDDatabaseOperation
CKDPCSSQLCache
CKDPCSSQLCachePool
CKCDPCodeServiceResponseAssetAuthorizationResponse
CKDDecryptRecordsOperationInfo
CKRecordDecryptInfo
CKDDecryptRecordsOperation
CKReportMetricAdditions
CKDContainerSpecificInfoOperation
CKPackageUploadTask
CKDPCSIdentityWrapper
CKDPCSIdentityManager
CKDPCodeFunctionInvokeResponse
CKDBackingiOSAccount
CKDProxyOperation
CKDOperationInfoDelegate
CKDAssetID
PCSSupport
CKDGetUserPrivacySettingsOperation
CKDPAssetUploadTokenRetrieveResponse
CKDAcceptSharesOperation
CKDPNotificationMarkReadRequest
CKDFetchRecordVersionsRequest
CKDMMCSItemFileWriter
CKDRegisterOperationInfo
CKDDownloadAssetURLInfo
CKDDownloadAssetsOperationInfo
CKDSaveUserPrivacySettingsOperationInfo
CKDSaveUserPrivacySettingsOperation
CKDMMCSPackageSignatureGenerator
CKDProtocolTranslator
CKDSaveUserPrivacySettingsURLRequest
CKDPBundlesForContainerRequest
CKDPCSData
CKDChainPCSData
CKDRecordPCSData
CKDZonePCSData
CKDSharePCSData
CKDPUserPrivacySettings
CKCDPInitializeContainerRequest
CKDPUserRetrieveResponse
CKDAssetVolume
CKDLongLivedClientProxy
CKDModifyBadgeOperation
CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptionsHeaderInfo
CKDModifyBadgeURLRequest
CKCDPCodeServiceRequestClientConfig
CKDAssetTokenRequestOperationInfo
CKDAssetTokenRequestOperation
CKDPUserPrivacySettingsBatchLookupRequest
CKDPUserPrivacySettingsUpdateResponse
CKDOperationMetrics
MMCSOperationMetric
MMCSCompat
CKOperationStateTimeRange
MMCSOperationStateTimeRange
CKDOperationCombinedMetrics
CKDProxyPCSManager
CKDCacheBasedRequest
CKDPUserQueryResponse
CKDPShareIdentifier
CKDModifyRecordsURLRequest
CKLTrafficLogMessage
CKCDPInitializeContainerResponse
CKCDPCodeServiceRequest
CKDPZoneRetrieveChangesResponse
CKDPSubscriptionDeleteResponse
CKDPRecordRetrieveResponse
CKDVolume
CKDAssetBatch
CKDRepairAssetsOperation
CKDProgressTracker
CKDPCSFetchAggregator
CKDPZoneRetrieveChangesRequest
CKDFetchArchivedRecordsOperation
CKDPZoneDeleteResponse
CKDAssetHandle
CKCDPCodeServiceRequestRequestContext
CKDMarkNotificationsReadURLRequest
CKDPQLUpgradeInfo
CKDPQLCache
CKDResetUserPrivacySettingsURLRequest
CKDModifyRecordZonesURLRequest
CKDGetRecordZonesURLRequest
CKDMarkAssetBrokenURLRequest
CKDPRecordSaveRequestShareIdUpdate
CKDPShareVettingInitiateRequest
CKDPNotificationSyncResponsePushMessage
CKDCancelTokenGroup
CKDAppContainerIntersectionMetadata
CKDApplicationMetadata
CKDPushToken
CKDMetadataCache
CKDPSubscriptionNotification
CKDPRecordStableUrl
CKDAccountManateeObserver
CKDPZoneSaveResponse
PCCWrappedKey
PCCAttestation
PCCKey
removeAllObjects
init
addObject:
count
objectAtIndex:
description
dictionaryRepresentation
stringWithFormat:
dictionary
setObject:forKey:
initWithCapacity:
countByEnumeratingWithState:objects:count:
addRecord:
setContainer:
recordsCount
clearRecords
recordAtIndex:
setShareRecord:
setShareMetadata:
setProtectionInfo:
setRecordProtectionInfo:
setRecordZone:
allocWithZone:
copyWithZone:
isMemberOfClass:
isEqual:
hash
mergeFrom:
recordType
hasContainer
containerEnvironment
setContainerEnvironment:
setHasContainerEnvironment:
hasContainerEnvironment
containerEnvironmentAsString:
StringAsContainerEnvironment:
hasShareRecord
hasShareMetadata
hasProtectionInfo
hasRecordProtectionInfo
hasRecordZone
readFrom:
writeTo:
copyTo:
.cxx_destruct
container
records
setRecords:
shareRecord
shareMetadata
protectionInfo
recordProtectionInfo
recordZone
_container
_containerEnvironment
_protectionInfo
_recordProtectionInfo
_recordZone
_records
_shareMetadata
_shareRecord
_has
isEqualToString:
enumerateOldCachesForApplicationBundleID:sourceApplicationBundleID:containerPath:cachesPath:
arrayWithObjects:count:
stringByAppendingPathComponent:
CKSafeStringForPathComponent
CKSafeHashStringForPathComponent
initWithArray:
purged
setPurged:
oldCacheDirs
defaultManager
fileExistsAtPath:isDirectory:
CKSanitizedPath
removeItemAtPath:error:
initWithApplicationBundleID:sourceApplicationBundleID:containerPath:cachePath:
purgeOldCacheDirectories
_purged
_oldCacheDirs
stringWithUTF8String:
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
isOpen
path
queue
distantPast
dbPool
releaseDatabase:
setDb:
open
close
context
account
isAnonymousAccount
dsid
setWithObjects:
unarchivedObjectOfClasses:fromData:error:
isSubsetOfSet:
valueStore
containsObject:
checkProperties:withValueCheckBlock:
paddedFileSize
setWasCached:
timeIntervalSinceReferenceDate
containerID
containerIdentifier
scope
numberWithInteger:
environment
_dsid
numberWithUnsignedLongLong:
select:from:where:bindings:orderBy:
objectForKeyedSubscript:
_cachedRecordKnownUserKeyData:satisfiesRequiredKeys:
initWithData:
applicationPackageStagingDirectory
translatorIgnoringUserIDsWithPackageStagingDirectory:databaseScope:
recordFromPRecord:error:
canAccessProtectionData
setSerializeProtectionData:
hasOutOfProcessUIEntitlement
hasParticipantPIIEntitlement
setSerializePersonalInfo:
setTrackChanges:
valuesByKey
allKeys
setObject:forKeyedSubscript:
encryptedValuesByKey
sharedOptions
disableCaching
_recordWithID:requiredKeys:
_cachedRecordHasValidAssets:forRequiredKeys:
_trimRecord:toRequiredKeys:
mutableCopy
objectAtIndexedSubscript:
setObject:atIndexedSubscript:
appendString:
addObjectsFromArray:
select:from:where:bindings:
recordID
recordName
zoneID
etag
null
cachedRecordExpiryTime
initWithTimeIntervalSinceNow:
checkPropertiesWithModifiedPropertiesOnly:includingAllArrayItems:withValueCheckBlock:
serializeProtectionData
serializePersonalInfo
modificationDate
pRecordFromRecord:forCache:
dataRepresentation
archivedDataWithRootObject:requiringSecureCoding:error:
length
numberWithUnsignedInteger:
dictionaryWithObjects:forKeys:count:
upsertInto:values:onConflict:doUpdate:where:
_lockedSizeOfAllRecordsInDb
recordCacheSizeLimit
_attemptRecordExpiryIfNeeded
applicationBundleID
deleteFrom:where:bindings:
recordsWithIDs:requiredKeys:
clearAssetAuthTokensForRecord:
setAuthToken:
setWithArray:
addRecord:knownUserKeys:
setDateFormat:
propertyForKey:
integerValue
date
lastExpiryAttempt
timeIntervalSinceDate:
setLastExpiryAttempt:
scheduleRecordExpirationWithExpiryDate:completionBlock:
_expiryDateFormatter
stringFromDate:
executeSQL:
unsignedIntegerValue
select:from:where:bindings:orderBy:limit:block:
componentsJoinedByString:
initWithDatabase:dbPool:context:scope:
releaseDatabase
recordWithID:requiredKeys:
numberOfRecordsWithID:
etagForRecordID:requiredKeys:
deleteRecordWithID:
clearAllRecordsInScope
clearAllRecords
clearAllRecordsForZoneWithID:
clearAssetAuthTokensForRecordWithID:
setDbPool:
setContext:
setScope:
setQueue:
_dbPool
_context
_scope
_queue
_lastExpiryAttempt
sizeUpperBound
isPackageSectionRecord
CKDescription
package
isTemporary
recordKey
enumerateKeysAndObjectsUsingBlock:
unsignedLongLongValue
compare:
sortedArrayUsingComparator:
allObjects
allRecordKeys
error
enumerateObjectsUsingBlock:
initWithRecordType:recordID:
CKPropertiesDescription
addMMCSItem:
addRereferencedMMCSItem:
addMMCSSectionItem:
rerefSizeUpperBound
allMMCSItems
allRereferenceMMCSItems
allMMCSSectionItems
allMMCSAndSectionItems
allRegularAndSectionAndRereferenceItemsWithRecordKey:
allRegularAndSectionAndRereferenceItems
firstMMCSItemError
firstMMCSSectionItemError
isAssetRecord
isEmpty
isEmptyOfRereferencesAssets
itemsByRecordKey
setItemsByRecordKey:
rereferencedItemsByRecordKey
setRereferencedItemsByRecordKey:
sectionItemsByRecordKey
setSectionItemsByRecordKey:
sizeUpperBoundNumber
setSizeUpperBoundNumber:
rerefSizeUpperBoundNumber
setRerefSizeUpperBoundNumber:
_recordType
_recordID
_itemsByRecordKey
_rereferencedItemsByRecordKey
_sectionItemsByRecordKey
_sizeUpperBoundNumber
_rerefSizeUpperBoundNumber
sharedPool
acquireCacheWithContext:scope:
releaseCache:
initWithFormat:
UTF8String
pools
recordExpiryQueue
_purgeRecordCachesForApplicationContainerPaths:expiryDate:
firstObject
removeObjectAtIndex:
acquireDatabase:
removeObjectForKey:
applicationContainerCloudKitDirectory
applicationRecordCacheDirectory
initWithPath:schema:
setUserVersion:
initWithFactory:queueAttr:
_poolForContext:
performWithClientContext:scope:block:
setPools:
setRecordExpiryQueue:
_pools
_recordExpiryQueue
setStorageAvailableBytes:
setHasStorageAvailableBytes:
hasStorageAvailableBytes
storageAvailableBytes
_storageAvailableBytes
numberWithInt:
itemGroupSetCompletionGroup
itemGroupContexts
cancel
mmcsOperationType
setMmcsOperationType:
start
itemGroupSetCompletionBlock
itemGroupSet
setItemGroupSetCompletionBlock:
initWithItemGroupSet:completionHandler:
addItemGroupContext:
setItemGroupSet:
operation
setOperation:
setItemGroupContexts:
itemGroupCompletionBlock
setItemGroupCompletionBlock:
setItemGroupSetCompletionGroup:
_itemGroupSet
_operation
_itemGroupContexts
_itemGroupCompletionBlock
_itemGroupSetCompletionBlock
_itemGroupSetCompletionGroup
_mmcsOperationType
setCreation:
setModification:
hasCreation
hasModification
creation
modification
_creation
_modification
participants
hasEncryptedPersonalInfo
_encryptPersonalInfoWithPCSBlob:inShareWithID:pcsManager:
_decryptPersonalInfoWithPCSBlob:inShareWithID:pcsManager:
pcsManager
sharingInvitationData
currentUserParticipant
createIngestedPPPCSDataFromInvitationData:completionHandler:
_prepPCSDataWithContext:databaseScope:publicSharingKey:removeServerSpecifiedKeys:containerIdentifier:sharedRecordZone:completionHandler:
serviceTypeForSharing
dataWithShare:serviceType:
invitedPCS
setSharePCSData:
_encryptPersonalInfoWithPCSBlob:pcsManager:
pcsCache
_setPCSData:forFetchedShareID:withScope:withCompletionHandler:
dataWithZone:
hasSuffix:
currentServiceIsManatee
errorWithCode:error:format:
invitedKeysToRemove
removePublicKeys:fromPCS:
decryptSharedZonePCSData:withInvitedPCS:error:
_setPCSData:forFetchedZoneID:withScope:withCompletionHandler:
pcsDataFromFetchedShare:withPublicSharingKey:withServiceType:completionHandler:
_decryptPersonalInfoWithPCSBlob:pcsManager:
_ingestAndExportPPPCSFromShareInvitationToken:context:completionHandler:
_prepPCSDataWithContext:databaseScope:publicSharingKey:removeServerSpecifiedKeys:containerIdentifier:completionHandler:
_prepPCSDataUsingPreDecryptedPCSOnlyWithContext:databaseScope:
encryptedPersonalInfo
userIdentity
createdInProcess
numberWithBool:
acceptedInProcess
participantID
setEncryptedPersonalInfo:
_encryptPersonalInfoWithPCSBlob:participantID:inShareWithID:pcsManager:
boolValue
setCreatedInProcess:
setAcceptedInProcess:
_decryptPersonalInfoWithPCSBlob:participantID:inShareWithID:pcsManager:
lookupInfo
nameComponents
setNameComponents:
emailAddress
phoneNumber
setEmailAddress:
setPhoneNumber:
encryptedData
share
setEncryptedData:
hasEncryptedData
_encryptDataWithPCSBlob:pcsManager:
_decryptDataWithPCSBlob:pcsManager:
initWithRecordID:fieldName:fileSignature:referenceSignature:
wrapEncryptedData:withPCS:inContext:
initWithEncryptedData:
unwrapEncryptedData:withPCS:inContext:
data
initWithObjects:
addPushMessage:
setChangeID:
pushMessagesCount
clearPushMessages
pushMessageAtIndex:
pushMessageType
hasChangeID
setMoreAvailable:
setHasMoreAvailable:
hasMoreAvailable
changeID
pushMessages
setPushMessages:
moreAvailable
_changeID
_pushMessages
_moreAvailable
arrayWithCapacity:
cacheForContext:
setMinAge:
releaseCache:forContext:
dealloc
fetchQueue
openWithError:
callbackQueue
_lockedGetSQLCacheWithCompletionHandler:
chainPCSData
zoneishPCS
pcsKeyID
_lockedCreatePCSCacheFetchOfItem:forOperation:options:fetchCreator:withCompletionHandler:
outstandingFetches
removeObject:
databaseScope
canBeUsedForOperation:withOptions:
setPcsDataInvalidated:
_lockedGetOutstandingFetchForOperation:options:itemIDString:
parentOperation
operationID
isPCSDataInvalidated
isCancelled
proxy
fetchAggregator
fetchRequestForExistingOperation:isDependentOnOperation:
fetchGroup
pcsData
_lockedRemoveOutstandingFetch:forItemIDString:databaseScope:
setCompletionBlock:
_lockedAddOutstandingFetch:forItemIDString:databaseScope:
_lockedHandleMemoryFetchOfItem:pcsData:forOperation:options:fetchCreator:withCompletionHandler:
getPCSDataFromCacheForID:databaseScope:withCompletionHandler:
sqliteRepresentation
setItemID:
setCache:
setOptions:
spawnAndRunOperationOfClass:operationInfo:operationConfigurationBlock:
recordMemoryCache
_lockedFetchPCSForItem:memoryCache:forOperation:options:fetchCreator:withCompletionHandler:
zoneMemoryCache
shareMemoryCache
_lockedInvalidateAllOutstandingPCSFetchesForItemIDString:databaseScope:
hashedDescription
setPCSData:forItemID:databaseScope:withCompletionHandler:
setRecordPCSData:forRecordWithID:databaseScope:withCompletionHandler:
getSQLCache:
setZonePCSData:forZoneWithID:databaseScope:withCompletionHandler:
setSharePCSData:forShareWithID:databaseScope:withCompletionHandler:
_updateMemoryCacheWithPCSData:forItemWithID:inMemoryCache:databaseScope:withCompletionHandler:
clearCache
removePCSDataForItemsInZoneWithID:withCompletionHandler:
removePCSDataForItemsInShareWithID:withCompletionHandler:
hasStatusToReport
CKStatusReportArray
allValues
initWithClientContext:
fetchPCSForRecordWithID:forOperation:options:withCompletionHandler:
fetchPCSForZoneWithID:forOperation:options:withCompletionHandler:
fetchPCSForShareWithID:forOperation:options:withCompletionHandler:
_setPCSData:forFetchedRecordID:withScope:withCompletionHandler:
updateMemoryCacheWithZonePCSData:forZoneWithID:databaseScope:withCompletionHandler:
updateMemoryCacheWithRecordPCSData:forRecordWithID:databaseScope:withCompletionHandler:
updateMemoryCacheWithSharePCSData:forShareWithID:databaseScope:withCompletionHandler:
removePCSDataForItemsInZoneWithID:
removePCSDataForItemsInShareWithID:
sqlCache
setOutstandingFetches:
setFetchQueue:
setCallbackQueue:
_sqlCache
_recordMemoryCache
_zoneMemoryCache
_shareMemoryCache
_outstandingFetches
_fetchQueue
_callbackQueue
clearInvalidatedCacheEntriesWithCompletionHandler:
clearPCSCaches
clearPCSMemoryCaches
clearInvalidatedPCSSQLCacheEntriesWithCompletionHandler:
enableTransactions
initWithMachServiceName:
setDelegate:
setMaxConcurrentOperationCount:
_dumpStatusReportToFileHandle:
statusReportWithCompletionHandler:
defaultCenter
postNotificationName:object:
sighandlerSource
statusReportRequestSource
stateHandle
xpcListener
resume
initWithConnection:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
debugDescription
cancelOperationWithIdentifier:completionHandler:
accountStatusWithSetupInfo:completionHandler:
accountInfoWithSetupInfo:completionHandler:
importantUserIDsWithSetupInfo:completionHandler:
statusForApplicationPermission:setupInfo:completionHandler:
requestApplicationPermission:setupInfo:completionHandler:
getSandboxExtensionsWithSetupInfo:completionHandler:
frameworkCachesDirectoryWithSetupInfo:completionHandler:
performDiscoverUserIdentitiesOperation:withBlock:
performDiscoverAllIdentitiesOperation:withBlock:
performFetchShareParticipantsOperation:withBlock:
performFetchRecordsOperation:withBlock:
performModifyRecordsOperation:withBlock:
performFetchRecordChangesOperation:withBlock:
performFetchRecordZoneChangesOperation:withBlock:
performFetchRecordVersionsOperation:withBlock:
performFetchArchivedRecordsOperation:withBlock:
performArchiveRecordsOperation:withBlock:
performPublishAssetsOperation:withBlock:
performRepairAssetsOperation:withBlock:
performMarkAssetBrokenOperation:withBlock:
performModifyWebSharingOperation:withBlock:
getNewWebSharingIdentityWithSetupInfo:completionHandler:
getNewWebSharingIdentityDataWithSetupInfo:completionHandler:
fetchXPCCriteriaWithSetupInfo:completionHandler:
performModifyRecordAccessOperation:withBlock:
performQueryOperation:withBlock:
performModifySubscriptionsOperation:withBlock:
performFetchSubscriptionsOperation:withBlock:
performModifyRecordZonesOperation:withBlock:
performFetchRecordZonesOperation:withBlock:
performFetchDatabaseChangesOperation:withBlock:
performModifyBadgeOperation:withBlock:
performFetchNotificationChangesOperation:withBlock:
performMarkNotificationsReadOperation:withBlock:
performAcceptSharesOperation:withBlock:
performCompleteParticipantVettingOperation:withBlock:
performFetchShareMetadataOperation:withBlock:
performFetchShareParticipantKeyOperation:withBlock:
decryptPersonalInfoOnShare:setupInfo:completionHandler:
performInitiateParticipantVettingOperation:withBlock:
performFetchUserQuotaOperation:withBlock:
performFetchWebAuthTokenOperation:withBlock:
performFetchWhitelistedBundleIDsOperation:withBlock:
performCodeFunctionInvokeOperation:withBlock:
fetchLongLivedOperationsWithIDs:setupInfo:completionHandler:
fetchAllLongLivedOperationIDsWithSetupInfo:completionHandler:
serverPreferredPushEnvironmentWithSetupInfo:completionHandler:
serverEnvironmentWithSetupInfo:completionHandler:
currentDeviceIDWithSetupInfo:completionHandler:
displayInfoOnAccountWithSetupInfo:completionHandler:
currentUserBoundaryKeyWithSetupInfo:completionHandler:
performAggregateZonePCSOperation:withBlock:
dumpAllClientsStatusReportToFileHandle:completionHandler:
dumpDaemonStatusReportToFileHandle:completionHandler:
setFakeError:forNextRequestOfClassName:setupInfo:
setFakeResponseOperationResult:forNextRequestOfClassName:forItemID:withLifetime:setupInfo:
countAssetCacheItemsWithSetupInfo:databaseScope:completionHandler:
clearAssetCacheWithSetupInfo:databaseScope:completionHandler:
showAssetCacheWithSetupInfo:databaseScope:
clearRecordCacheWithSetupInfo:databaseScope:
clearAuthTokensWithSetupInfo:recordID:databaseScope:
clearCachesWithSetupInfo:options:databaseScope:completionHandler:
clearCachesForRecordWithSetupInfo:recordID:databaseScope:completionHandler:
clearCachesForZoneWithSetupInfo:zoneID:databaseScope:completionHandler:
wipeAllCachedLongLivedProxiesWithSetupInfo:completionHandler:
getOutstandingOperationCountWithSetupInfo:completionHandler:
clearPCSCachesForKnownContextsWithSetupInfo:completionHandler:
getBehaviorOptionForKey:isContainerOption:completionHandler:
accountsDidGrantAccessToBundleID:containerIdentifiers:
accountsDidRevokeAccessToBundleID:sourceApplicationBundleID:containerIdentifiers:
accountsWillDeleteAccount:completionHandler:
accountWithID:changedWithChangeType:
setApplicationPermission:enabled:setupInfo:completionHandler:
resetAllApplicationPermissionsWithSetupInfo:completionHandler:
statusGroupsForApplicationPermission:setupInfo:completionHandler:
wipeAllCachesAndDie
clearContextFromMetadataCache
clearPILSCacheForLookupInfos:
updatePushTokens
dataclassEnabled:withSetupInfo:completionHandler:
flushOperationMetricsToPowerLog
triggerAutoBugCaptureSnapshot
submitClientEventMetric:withSetupInfo:completeWhenQueued:completionHandler:
getPCSDiagnosticsForZonesWithSetupInfo:completionHandler:
getRecordPCSDiagnosticsForZonesWithSetupInfo:completionHandler:
repairZonePCSWithOperationInfo:withBlock:
tossConfigWithSetupInfo:completionHandler:
requestClientSyncWithOperationInfo:withBlock:
deviceCountWithSetupInfo:completionHandler:
interfaceWithProtocol:
setClasses:forSelector:argumentIndex:ofReply:
handleOperationProgress:forOperationWithID:reply:
handleOperationStatistics:forOperationWithID:
handleOperationProgress:forOperationWithID:
handleOperationCompletion:forOperationWithID:
handleOperationCheckpoint:forOperationWithID:
openFileWithOpenInfo:reply:
getFileMetadataWithFileHandle:openInfo:reply:
readBytesOfInMemoryAssetContentWithUUID:offset:length:reply:
consumeSandboxExtensions:reply:
setRemoteObjectInterface:
setExportedInterface:
setExportedObject:
connectedClients
setInterruptionHandler:
tearDown
recentClientsByProcessName
setRecentClientsByProcessName:
procName
initWithProxy:
mergeProxy:
_cleanRecentClients
blockOperationWithBlock:
clientTeardownQueue
addOperation:
setInvalidationHandler:
maxRecentProxyAge
lastSeen
timeIntervalSinceNow
removeObjectsForKeys:
recentProxiesToSave
keysSortedByValueUsingComparator:
subarrayWithRange:
copy
cachedEnvironment
sharedClientThrottlingOperationQueue
operations
maxConcurrentOperationCount
operationStatusReport:
sharedManager
sharedObserver
statusReportQueue
_dumpStatusReportArrayToOsTrace:
CKComponentsAndSubcomponentsJoinedByString:
dataUsingEncoding:
writeData:
statusReportCallbacks
statusReportCallbackQueue
sharedCache
resumableOperationInfosByAppContainerTuplesWithProgressPurged:
operationInfo
retryNumber
lastAttemptDate
currentCalendar
components:fromDate:toDate:options:
second
longlivedOperationMaxRetryCount
operationClass
setupInfo
accountInfoOverride
contextWithAppContainerTuple:accountInfoOverride:proxy:
longLivedProxyWithContext:
addClientProxy:
addOperationWithOperationInfo:
deleteAllInfoForOperationWithID:
sharedServer
listener:shouldAcceptNewConnection:
dumpStatusReportToFileHandle:
kickOffPendingLongLivedOperations
setXpcListener:
setConnectedClients:
setSighandlerSource:
setClientTeardownQueue:
setStateHandle:
setStatusReportRequestSource:
setStatusReportQueue:
setStatusReportCallbackQueue:
setStatusReportCallbacks:
tccToken
setTccToken:
_tccToken
_xpcListener
_connectedClients
_recentClientsByProcessName
_sighandlerSource
_clientTeardownQueue
_stateHandle
_statusReportRequestSource
_statusReportQueue
_statusReportCallbackQueue
_statusReportCallbacks
setProtectionInfoTag:
hasProtectionInfoTag
protectionInfoTag
_protectionInfoTag
setRecordIdentifier:
setRequestedFields:
setVersionETag:
setClientVersionETag:
setGetAssetURL:
setAssetsToDownload:
options
hasRecordIdentifier
hasRequestedFields
hasVersionETag
hasClientVersionETag
hasGetAssetURL
hasAssetsToDownload
setShouldFailBatch:
setHasShouldFailBatch:
hasShouldFailBatch
requestTypeCode
responseClass
recordIdentifier
requestedFields
versionETag
clientVersionETag
getAssetURL
assetsToDownload
shouldFailBatch
_assetsToDownload
_clientVersionETag
_getAssetURL
_recordIdentifier
_requestedFields
_versionETag
_shouldFailBatch
setProxy:
_proxy
alloc
initWithProxy:context:
setIsExecuting:
_markFinished
forceFinishClientSetupWithClientContext:completionHandler:
willChangeValueForKey:
_setIsExecuting:
didChangeValueForKey:
_setIsFinished:
operationWithProxy:context:
isAsynchronous
setIsFinished:
isFinished
isExecuting
_isFinished
_isExecuting
auditToken
CKValueForEntitlements:error:
isSandboxed
setSuspended:
setQualityOfService:
setUnderlyingQueue:
processIdentifier
_setupOperationQueues
valueForEntitlement:
hasAllowAccessDuringBuddyEntitlement
sharedMonitor
availabilityState
canRunGivenAvailabilityState:
setClientProxyAvailable:
registerWatcher:
_lockedSetHasTCCAuthorizationTernary:
addObserverForName:object:queue:usingBlock:
setTCCDatabaseChangedNotificationObserver:
removeObserver:name:object:
holdAllOperations
operationQueue
cleanupOperationQueue
backgroundOperationThrottleQueue
cloudKitSupportOperationThrottleQueue
tearDownAssetTransfers
clientThrottleQueueWidth
setupQueue
unregisterWatcher:
isSuspended
cancelAllOperations
waitUntilAllOperationsAreFinished
removeClientProxy:
pendingContexts
proxyPreparationGroup
connection
_lockedHasTCCAuthorization
tccAuthQueue
_hasEntitlementForKey:
connectionEntitlements
setConnectionEntitlements:
setHasFakeEntitlements:
cachedApplicationBundleID
applicationIdentifier
setCachedApplicationBundleID:
operationCount
sourceApplicationBundleID
associatedApplicationBundleID
_xpcConnection
pluginKitProxyForIdentifier:
containingBundle
bundleIdentifier
lowercaseString
sourceApplicationBundleIdentifier
sourceApplicationSecondaryIdentifier
hasMasqueradingEntitlement
_clientPrefixEntitlement
hasPrefix:
errorWithCode:format:
pendingOperationIDs
_startClientSetupWithSetupInfo:completionHandler:
cancellationQueue
wantsRequestStatistics
_handleStatisticsForOperation:withArguments:
setRequestCompletedBlock:
_isConnectionAuthorizedForOperation:error:
isLongLived
validateAgainstLiveProxy:error:
CKClientSuitableError
finishWithError:
isOutstandingOperation
createAppContainerTuple
accountIdentifier
setOperationInfo:forOperationID:appContainerTuple:accountID:
handleCheckpointForOperationWithID:withArguments:
usesBackgroundSession
hasCloudKitSupportServiceEntitlement
isCloudKitSupportOperation
initWithOperation:targetOperationQueue:
accountStatusWorkloop
hasAccountAccessAndTCCAuth
_accountStatusWithClientContext:
_setupClientWithSetupInfo:completionHandler:
setAccountStatus:
forceEnableReadOnlyManatee
setDeviceToDeviceEncryptionAvailability:
isManateeAvailable:
deviceToDeviceEncryptionAvailability
accountSupportsManatee:
isCarryAccount
setAccountPartition:
setHasValidCredentials:
iCloudAuthTokenWithAccessProvider:error:
cloudKitAuthTokenWithAccessProvider:error:
setDiscretionaryNetworkBehavior:
setAllowsCellularAccess:
setAutomaticallyRetryNetworkFailures:
setSourceApplicationBundleIdentifier:
setPerOpConfiguration:
initWithOperationInfo:clientContext:
fetchImportantUserIDsForOperation:withCompletionHandler:
setSetupInfo:
perOpConfiguration
discoverable
_applicationPermissionStatusFromUserPrivacySetting:
_addOperationWithOperationInfo:factoryBlock:
containerPrivacySettings
setDiscoverable:
bundleForClass:
localizedStringForKey:value:table:
applicationDisplayName
applicationIcon
showUserNotification:withCompletionBlock:
_globalStatusForApplicationPermission:setupInfo:completionHandler:
isUnitTestingAccount
_setApplicationPermission:enabled:setupInfo:completionHandler:
_handleProgressForOperationWithID:withArguments:completion:
_unboostingRemoteObjectProxy
remoteObjectProxyWithErrorHandler:
CKDescriptionPropertiesWithPublic:private:shouldExpand:
CKPropertiesDescriptionStringFromProperties:
operationResult
addBarrierBlock:
operationStatisticsByClassName
initWithOperationClassName:
outstandingOperationInfosForIDs:
allOutstandingOperationIDsForAppContainerTuple:accountID:
setValue:forKey:
_handleProgressForOperation:withArguments:
setDiscoverUserIdentitiesProgressBlock:
_handleCompletionForOperation:withBlock:
setShareParticipantFetchedBlock:
returnPCSMetadata
fillOutPCSMetadataInfo
setSaveCompletionBlock:
setDeleteCompletionBlock:
setRecordZoneFetchedProgressBlock:
setRecordZoneWithIDChangedBlock:
setRecordZoneWithIDWasDeletedBlock:
setRecordZoneWithIDWasPurgedBlock:
_handleProgressForOperation:withArguments:completion:
setServerChangeTokenUpdatedBlock:
numberWithDouble:
setSaveProgressBlock:
setRecordsInFlightBlock:
creationDate
shouldOnlySaveAssetContent
protectionData
zoneishKeyID
setUploadCompletionBlock:
userRecord
setRecordFetchProgressBlock:
setRecordFetchCommandBlock:
setRecordFetchCompletionBlock:
isFetchCurrentUserOperation
_performFetchCurrentUserRecordOperation:withBlock:
_reallyPerformFetchRecordsOperation:withBlock:
setRecordChangedBlock:
setRecordVersionFetchedBlock:
setRecordFetchedBlock:
setRecordArchivedBlock:
setAssetPublishedBlock:
repairZoneRecordID
fieldName
setAssetOrPackageRepairedBlock:
setAssetOrPackageMarkedBrokenBlock:
setRecordWebSharedBlock:
setRecordWebUnsharedBlock:
createRandomSharingIdentityWithError:
dataFromSharingIdentity:error:
baseURLForServerType:partitionType:
host
port
stringValue
deviceCountWithCompletionHandler:
setAccessWasGrantedBlock:
setAccessWasRevokedBlock:
setQueryCursorUpdatedBlock:
setSubscriptionFetchedProgressBlock:
notificationID
setNotificationChangedBlock:
setNotificationMarkedRead:
setAcceptCompletionBlock:
setErrorOnOON:
setShareMetadataFetchedBlock:
setVerifyProgressURLReconstructedBlock:
setVerifyProgressShareMetadataFetchedBlock:
setVerifyCompletionBlock:
setShareParticipantKeyFetchedBlock:
ownerName
setDatabaseScope:
setParticipantVettingProgressBlock:
setReplaceLocalSerializationsBlobs:
setInitialResponseReceivedCallback:
setReplaceWireSerializations:
knownAppContainerTuplesForAccountID:
personaID
initWithAppContainerTuple:accountID:
sharedScheduler
unregisterTokenForAppContainerAccountTuple:
unregisterAllTokensForAccountID:completionHandler:
sharedNotifier
postAccountChangedNotificationWithAccountID:changeType:
setOperationID:
appPermissionGroupsFromContainerPrivacySettings:
accountStore
accountTypeWithAccountTypeIdentifier:
clearAllPermissionsGrantedForAccountType:
expireGlobalConfiguration
expireConfigurationForContextInfoProvider:accountInfoProvider:
canAuthWithCloudKit
serverPreferredPushEnvironment
boundaryKeyDataWithCompletionHandler:
fetchServerEnvironmentForOperation:withCompletionHandler:
hardwareID
fullName
primaryEmail
formattedUsername
statusQueue
CKStatusReportArrayIncludingSharedOperations:
_behaviorContainerOptionForKey:
_behaviorOptionForKey:
proxies
setRepresentation
_locked_eligiblePendingContextForSetupInfo:
fakeEntitlements
_updateConnectionEntitlementsWithFakeEntitlements:
_hasCustomAccountsEntitlement
setHoldAllOperations:
systemAvailabilityChanged:
_hasEnvironmentEntitlement
compare:options:
initWithContainerIdentifier:environment:
initWithApplicationBundleID:sourceApplicationBundleID:containerID:personaID:
useZoneWidePCS
setUseZoneWidePCS:
mmcsEncryptionSupport
setMmcsEncryptionSupport:
containerEncryptionServiceName
setContainerEncryptionServiceName:
bypassPCSEncryption
setBypassPCSEncryption:
setForceEnableReadOnlyManatee:
wantsSiloedContext
setWantsSiloedContext:
hasFakeEntitlements
masqueradeAsThirdPartyApp
sharedContextWithAppContainerTuple:accountInfoOverride:proxy:
captureResponseHTTPHeaders
setCaptureResponseHTTPHeaders:
setReturnPCSMetadata:
clientSDKVersion
setClientSDKVersion:
setContextType:
setSourceApplicationBundleID:
startSetupWithClientProxy:completionHandler:
setCachedSandboxExtensions:
_finishClientSetupWithClientContext:completionHandler:
finishSetupWithClientProxy:completionHandler:
cachedSandboxExtensions
applicationFrameworkCachesDirectory
setFakeError:forNextRequestOfClassName:
setFakeResponseOperationResult:forNextRequestOfClassName:forItemID:withLifetime:
countAssetCacheItemsWithDatabaseScope:
showAssetCacheWithDatabaseScope:
clearAssetCacheWithDatabaseScope:
clearRecordCacheWithDatabaseScope:
clearAuthTokensForRecordWithID:databaseScope:
clearCachedLongLivedProxies
setWillBeginSyncRequestWithClientsBlock:
setClientSyncStartedBlock:
setClientSyncProgressedBlock:
setClientSyncCompletedBlock:
evictPCSSQLCachesForKnownClientContexts
aggregatedOutstandingOperationCount
initWithContext:
pcsDiagnosticInfo
corruptRecords
zoneIDs
setZonePCSRepairProgressBlock:
statusReportWithIndent:
connectionDate
foregroundZoneGatekeeper
backgroundZoneGatekeeper
flowControlManager
MMCS
defaultWorkspace
isContainerized
dataContainerURL
URLByAppendingPathComponent:
absoluteString
fileExistsAtPath:
removeItemAtURL:error:
enumerateBundlesOfType:block:
forceTokenRefreshForAllClients
flushMetricsToPowerLog
isDataclassEnabled:
metricUUID
reportCKEventMetric:proxy:completionHandler:
isFileURL
fileSystemRepresentation
canUsePackages
hasTCCAuthorization
getTCCAuthorizationWithCompletion:
hasProtectionDataEntitlement
hasZoneProtectionDataEntitlement
hasDeviceIdentifierEntitlement
hasCloudKitSystemServiceEntitlement
hasDarkWakeNetworkReachabilityEnabledEntitlement
hasLightweightPCSEntitlement
hasDisplaysSystemAcceptPromptEntitlement
hasNonLegacyShareURLEntitlement
hasAllowUnverifiedAccountEntitlement
hasExplicitCodeOperationURLEntitlement
serviceNameForContainerMapEntitlement
_outstandingOperationCount
applicationBundleIDForPush
apsEnvironmentEntitlement
openFileWithOpenInfo:error:
getFileMetadataWithFileHandle:openInfo:error:
readBytesOfInMemoryAssetContentWithUUID:offset:length:error:
canOpenFileAtURL:
canUsePackagesWithError:
setOperationQueue:
setCleanupOperationQueue:
setSandboxed:
setSetupQueue:
setCancellationQueue:
setStatusQueue:
setCloudKitSupportOperationThrottleQueue:
setBackgroundOperationThrottleQueue:
setPendingContexts:
setCanUsePackages:
canOpenByID
setCanOpenByID:
setPendingOperationIDs:
setConnectionDate:
hasTCCAuthorizationTernary
setHasTCCAuthorizationTernary:
tccAuthOpQueue
setTccAuthOpQueue:
setTccAuthQueue:
TCCDatabaseChangedNotificationObserver
setOperationStatisticsByClassName:
setConnection:
setFetchAggregator:
_sandboxed
_canUsePackages
_canOpenByID
_holdAllOperations
_hasFakeEntitlements
_pid
_operationQueue
_cleanupOperationQueue
_procName
_setupQueue
_cancellationQueue
_statusQueue
_cloudKitSupportOperationThrottleQueue
_backgroundOperationThrottleQueue
_cachedSandboxExtensions
_pendingContexts
_pendingOperationIDs
_connectionDate
_hasTCCAuthorizationTernary
_connectionEntitlements
_tccAuthOpQueue
_tccAuthQueue
_TCCDatabaseChangedNotificationObserver
_operationStatisticsByClassName
_cachedApplicationBundleID
_sourceApplicationBundleID
_connection
_fetchAggregator
weakObjectsHashTable
_reloadAccount:
applicationContainerPathForBundleID:bundleURL:contextType:
applicationCachesPathForBundleID:
_loadApplicationContainerPathAndType
_determineHardwareInfo
array
applicationContainerPath
applicationCachesDirectory
applicationTemporaryDirectory
applicationMMCSDirectory
applicationAssetDbDirectory
applicationFileStagingDirectory
applicationFileDownloadDirectory
lastPathComponent
purgeDirectoryAtPath:
accountID
_clearCaches
registerObserver:forAccountChangeNotification:
clearAssetCache
clearRecordCache
drop
dropMMCS
unregisterObserverForAccountChangeNotification:
applicationProxyForIdentifier:
appState
isInstalled
applicationType
bundleURL
pathComponents
sharedContexts
isForClouddInternalUse
encryptionServiceName
_cancelAllLongLivedOperations
_sharedContextWithAppContainerTuple:accountInfoOverride:proxy:forInternalUse:
setIsForClouddInternalUse:
_sharedContextWithAppContainerTuple:accountInfoOverride:proxy:forInternalUse:addToSharedContexts:
initWithAccountID:
appContainerTuple
fakeAccountInfo
setCachedEnvironment:
email
initAnonymousAccount
password
initFakeAccountWithAccountOverrideInfo:
initPrimaryAccount
setIsUnitTestingAccount:
accountWantsPushRegistration
setAccountWantsPushRegistration:
setAccount:
shouldUsePCSEncryption
updateAccount:clearPCSCacheHandler:
hasSystemServiceEntitlement
_dataclassNameForContainerIdentifier:
_cloudKitEnabledForCurrentClient
_anyAssociatedProxyHasTCCAuthorization
isPrimaryEmailVerified
iCloudDriveAllowsCellularAccess
applicationCachesPathForBundleID:usingHomeCachesDirectory:
stringByDeletingLastPathComponent
stringByAppendingString:
stagingPathSuffixForCloudKitCachesDirectoryWithBundleIdentifier:
pathExtension
stringByDeletingPathExtension
dataWithBytesNoCopy:length:freeWhenDone:
lengthOfBytesUsingEncoding:
CKUppercaseHexStringWithoutSpaces
hasDataContainer
_issueSandboxExtensionForPath:withAuditToken:error:
errorWithCode:path:format:
dataWithBytesNoCopy:length:
initWithAppContainerTuple:accountInfoOverride:proxy:
initWithApplicationBundleID:sourceApplicationBundleID:applicationContainerPath:containerID:personaID:
setMmcsWorkingDirectory:
setAssetDbPath:
setFileStagingPath:
setFileDownloadPath:
assetDirectoryContext
MMCSWrapperForApplicationBundleID:assetDirectoryContext:isUTAccount:error:
setMMCS:
setClientContext:
_setupDirectoriesWithClientProxy:sandboxExtensions:error:
setupMMCSWrapperWithError:
assetCache
cancelExpiryTimer
evictAllFilesForced:
anyObject
setContextInfoProvider:
setAccountInfoProvider:
setAccountAccessInfoProvider:
fakeErrorsByClassName
fakeResponseOperationResultByClassNameByItemID
fakeResponseOperationLifetimeByClassName
numberWithLong:
setFakeResponseOperationResultByItemID:
performRequest
config
flowControlBudgetForContainer:
flowControlRegenerationForContainer:
flowControlMaximumThrottleTime:
flowControlBudget
flowControlRegeneration
maximumThrottleSeconds
flowControlBudgetOverride
flowControlRegenerationOverride
doubleValue
initWithDefaultBudget:maximumThrottleTime:andDefaultRegeneration:
publicIdentitiesExpirationTimeoutForContainer:
publicIdentitiesExpirationTimeout
setExpirationTimeout:
expirationTimeout
setDefaultBudget:
setDefaultRegeneration:
setMaximumThrottleTime:
defaultBudget
defaultRegeneration
maximumThrottleTime
contextID
setFinishedAppProxySetup:
setFinishedProxySetup:
finishedAppProxySetup
isFakeAccount
entitlementValueForKey:ofClass:
setAPSEnvironmentString:
finishedProxySetup
applicationMetadata
setApsEnvironmentString:
appContainerIntersectionMetadata
setAppContainerIntersectionMetadata:forAppContainerAccountTuple:
setIsCKSystemService:
setCanMasquerade:
setCanSetEnvironment:
setAllowCustomAccounts:
setAssociatedApplicationBundleID:
setClientPrefix:
setPushBundleID:
setHasTCCAuthorization:
setApplicationIdentifier:
setCanAccessProtectionData:
setCanAccessZoneProtectionData:
setCanSetDeviceIdentifier:
setAllowsPowerNapScheduling:
setHasAccessDuringBuddy:
setHasLightweightPCS:
setIsOOPUI:
setAllowsParticipantPII:
setDisplaysSystemAcceptPrompt:
setCanUseNonLegacyShareURL:
setAllowUnverifiedAccount:
setCanSetExplicitCodeOperationURL:
setApplicationContainerPath:
setEntitlementSpecifiedPCSServiceName:
entitlementSpecifiedPCSServiceName
setApplicationMetadata:forApplicationBundleID:sourceApplicationBundleID:
componentsWithURL:resolvingAgainstBaseURL:
scheme
setScheme:
setHost:
setPort:
privateCloudDBURL
customCloudDBBaseURL
_urlBySettingCustomBaseURL:onURL:
publicCloudDBURL
privateShareServiceURL
customShareServiceBaseURL
publicShareServiceURL
privateDeviceServiceURL
customDeviceServiceBaseURL
publicDeviceServiceURL
privateCodeServiceURL
customCodeServiceBaseURL
publicCodeServiceURL
privateMetricsServiceURL
customMetricsServiceBaseURL
publicMetricsServiceURL
privateDatabaseRPCServiceURL
publicDatabaseRPCServiceURL
setConfig:
configurationForOperation:completionHandler:
setPublicCloudDBURL:
setPublicShareServiceURL:
setPublicDeviceServiceURL:
setPublicCodeServiceURL:
setPublicMetricsServiceURL:
setPublicDatabaseRPCServiceURL:
containerScopedUserID
setContainerScopedUserID:
orgAdminUserID
setOrgAdminUserID:
containerInfoForOperation:requireUserIDs:completionHandler:
_fetchContainerInfoForOperation:requireUserIDs:completionHandler:
deviceIdentifierForContext:
updateAccountPropertiesAndSaveAccountWithCompletionHandler:
sharedClientInfo
hostname
preferredLanguages
currentLocale
objectForKey:
appContainerIntersectionMetadataForAppContainerAccountTuple:
applicationMetadataForApplicationBundleID:sourceApplicationBundleID:
useEncryption
initWithAccount:containerScopedUserIDProvider:serviceName:appContainerTuple:
allowsPowerNapScheduling
apsEnvironmentString
isCKSystemService
canMasquerade
canSetEnvironment
allowCustomAccounts
canAccessZoneProtectionData
canSetDeviceIdentifier
hasAccessDuringBuddy
hasLightweightPCS
isOOPUI
allowsParticipantPII
displaysSystemAcceptPrompt
wasInitializedWithProxy
clientPrefix
pushBundleID
initWithIdentifier:context:
canUseNonLegacyShareURL
allowUnverifiedAccount
canSetExplicitCodeOperationURL
setFakeErrorsByClassName:
setFakeResponseOperationResultByClassNameByItemID:
setFakeResponseOperationLifetimeByClassName:
setupAssetTransfersWithClientProxy:error:
countAssetCacheItems
showAssetCache
removeContainerID:
backgroundPublicIdentityLookupService
removeCacheForLookupInfos:
foregroundPublicIdentityLookupService
sharedContextForInternalUseWithAppContainerAccountTuple:
sharedContextForInternalUseWithAppContainerTuple:unitTestingAccountInfoProvider:
performRequest:
deviceIDForOperation:
fetchConfigurationForOperation:withCompletionHandler:
fetchPublicURLForServerType:operation:completionHandler:
fetchPrivateURLForServerType:operation:completionHandler:
contextType
deviceName
languageCode
regionCode
applicationVersion
applicationBundleIDForServer
processName
canAccessAccount
allowsCellularAccess
setHasSystemServiceEntitlement:
setHasMasqueradingEntitlement:
hasAllowSetEnvironmentEntitlement
setHasAllowSetEnvironmentEntitlement:
hasAllowCustomAccountsEntitlement
setHasAllowCustomAccountsEntitlement:
setHasAllowAccessDuringBuddyEntitlement:
setHasLightweightPCSEntitlement:
setHasOutOfProcessUIEntitlement:
setHasParticipantPIIEntitlement:
setHasDisplaysSystemAcceptPromptEntitlement:
clientPrefixEntitlement
setClientPrefixEntitlement:
publicIdentitiesDiskCache
setHasNonLegacyShareURLEntitlement:
setHasAllowUnverifiedAccountEntitlement:
setHasExplicitCodeOperationURLEntitlement:
setProxies:
setApplicationBundleID:
setApplicationVersion:
setApplicationContainerCloudKitDirectory:
setApplicationCachesDirectory:
setApplicationMMCSDirectory:
setApplicationAssetDbDirectory:
setApplicationFileStagingDirectory:
setApplicationFileDownloadDirectory:
setApplicationRecordCacheDirectory:
setApplicationFrameworkCachesDirectory:
setApplicationPackageStagingDirectory:
setHasDataContainer:
isSiloedContext
setForegroundZoneGatekeeper:
setBackgroundZoneGatekeeper:
cachePurger
setCachePurger:
setWasInitializedWithProxy:
setPublicIdentitiesDiskCache:
setForegroundPublicIdentityLookupService:
setBackgroundPublicIdentityLookupService:
setAppContainerIntersectionMetadata:
setApplicationMetadata:
setFlowControlManager:
setPcsManager:
setProxyPreparationGroup:
_isForClouddInternalUse
_hasDataContainer
_captureResponseHTTPHeaders
_useZoneWidePCS
_returnPCSMetadata
_bypassPCSEncryption
_forceEnableReadOnlyManatee
_isSiloedContext
_finishedAppProxySetup
_finishedProxySetup
_wasInitializedWithProxy
_clientSDKVersion
_config
_publicCloudDBURL
_publicShareServiceURL
_publicDeviceServiceURL
_publicCodeServiceURL
_publicMetricsServiceURL
_publicDatabaseRPCServiceURL
_containerScopedUserID
_orgAdminUserID
_proxies
_cachedEnvironment
_containerID
_applicationBundleID
_personaID
_applicationVersion
_applicationIcon
_applicationDisplayName
_applicationContainerPath
_applicationContainerCloudKitDirectory
_applicationCachesDirectory
_applicationTemporaryDirectory
_applicationMMCSDirectory
_applicationAssetDbDirectory
_applicationFileStagingDirectory
_applicationFileDownloadDirectory
_applicationRecordCacheDirectory
_applicationFrameworkCachesDirectory
_applicationPackageStagingDirectory
_appContainerTuple
_hardwareID
_contextType
_account
_accountInfoOverride
_MMCS
_pcsCache
_foregroundZoneGatekeeper
_backgroundZoneGatekeeper
_fakeErrorsByClassName
_fakeResponseOperationLifetimeByClassName
_fakeResponseOperationResultByClassNameByItemID
_contextID
_cachePurger
_containerEncryptionServiceName
_entitlementSpecifiedPCSServiceName
_publicIdentitiesDiskCache
_foregroundPublicIdentityLookupService
_backgroundPublicIdentityLookupService
_appContainerIntersectionMetadata
_applicationMetadata
_flowControlManager
_pcsManager
_mmcsEncryptionSupport
_proxyPreparationGroup
setHeaderKey:
setHeaderValue:
headerKey
headerValue
_headerKey
_headerValue
itemID
lastAccess
setPcsData:
setLastAccess:
_pcsData
_lastAccess
PCSCacheSize
PCSCacheMinTime
memoryNotificationSource
setMemoryStatus:
setMemoryStatusChanged:
registerEvictionTimer
globalEvictQueue
runCacheEviction
setMemoryCacheEvictNotificationObserver:
accessQueue
cacheEntries
minAge
maxEntries
memoryStatus
oldestCacheEntry
setOldestCacheEntry:
memoryCacheEvictCount
setMemoryCacheEvictCount:
memoryCacheRequestCount
setMemoryCacheRequestCount:
memoryCacheHitCount
setMemoryCacheHitCount:
memoryStatusChanged
_lockedEvictEntriesFromCache
memoryCacheUpdateCount
setMemoryCacheUpdateCount:
memoryCacheHighwaterCount
setMemoryCacheHighwaterCount:
memoryCacheDeleteCount
setMemoryCacheDeleteCount:
_cacheCount
setMaxEntries:
setCacheEntries:
setAccessQueue:
setMemoryNotificationSource:
memoryCacheEvictNotificationObserver
_memoryStatusChanged
_maxEntries
_minAge
_cacheEntries
_accessQueue
_memoryNotificationSource
_memoryStatus
_memoryCacheEvictNotificationObserver
_oldestCacheEntry
_memoryCacheRequestCount
_memoryCacheHitCount
_memoryCacheHighwaterCount
_memoryCacheDeleteCount
_memoryCacheUpdateCount
_memoryCacheEvictCount
addIdsToArchive:
idsToArchivesCount
clearIdsToArchives
idsToArchiveAtIndex:
idsToArchiveType
idsToArchives
setIdsToArchives:
_idsToArchives
addAssetAuthorizationResponses:
assetAuthorizationResponsesCount
clearAssetAuthorizationResponses
assetAuthorizationResponsesAtIndex:
assetAuthorizationResponsesType
assetAuthorizationResponses
setAssetAuthorizationResponses:
_assetAuthorizationResponses
setFieldName:
setCoordinate:
hasFieldName
order
setOrder:
setHasOrder:
hasOrder
orderAsString:
StringAsOrder:
hasCoordinate
coordinate
_coordinate
_fieldName
_order
indexSet
containsIndexesInRange:
addIndexesInRange:
dataWithBytes:length:
MMCSRequest
MMCSItem
handleCommand:forItem:
closeWithError:
getFileMetadataWithError:
readBytesAtOffset:bytes:length:bytesRead:error:
writeBytesAtOffset:bytes:length:bytesWritten:error:
initWithMMCSItem:MMCSRequest:
isContiguous
setMMCSRequest:
setMMCSItem:
byteRanges
setByteRanges:
maximumLength
setMaximumLength:
_MMCSRequest
_MMCSItem
_byteRanges
_maximumLength
assetTokenRequest
setAssetTokenRequest:
size
assetBatches
failedAssetBatches
addAssetBatch:
addFailedBatch:
hasSuccessfulBatches
successfulBatches
setAssetBatches:
setSize:
setFailedAssetBatches:
setSizeUpperBound:
_size
_sizeUpperBound
_assetBatches
_failedAssetBatches
addApplicationBundle:
setApplicationContainer:
applicationBundlesCount
clearApplicationBundles
applicationBundleAtIndex:
setUserPrivacySettings:
applicationBundleType
hasApplicationContainer
applicationContainerEnvironment
setApplicationContainerEnvironment:
setHasApplicationContainerEnvironment:
hasApplicationContainerEnvironment
applicationContainerEnvironmentAsString:
StringAsApplicationContainerEnvironment:
hasUserPrivacySettings
applicationContainer
applicationBundles
setApplicationBundles:
userPrivacySettings
_applicationBundles
_applicationContainer
_applicationContainerEnvironment
_userPrivacySettings
setupCacheWithError:
dbPath
serialQueue
close:
stringByAppendingPathExtension:
fileURLWithPath:
openAtURL:withFlags:error:
setupPragmas
lastError
userVersion
execute:
_garbageCollectExpiredEntries
useBatchingWithDelay:changeCount:
flush
timeIntervalSince1970
changes
removeCachedValueForKey:
performWithFlags:action:
fetch:
next
doubleAtIndex:
dataAtIndex:
deleteCachedValuesBecauseOfLowDisk
setCachedValue:forKey:
cachedValueForKey:
identifier
setIdentifier:
_expirationTimeout
_identifier
pipeliningDescription
initWithRequest:operation:
addPerRequestCallbackBlock:
disablePerRequestCallbackBlocks
cancelAndDisablePerRequestCallbackBlocks
request
setRequest:
perRequestCallbackGroup
setPerRequestCallbackGroup:
perRequestGroup
setPerRequestGroup:
perRequestCallbackQueue
setPerRequestCallbackQueue:
perRequestCallbackBlocks
setPerRequestCallbackBlocks:
setIsCancelled:
_isCancelled
_request
_perRequestCallbackGroup
_perRequestGroup
_perRequestCallbackQueue
_perRequestCallbackBlocks
_ensureOperationGroup
configureQualityOfServiceFromOperationInfo:
pipelineFetchAllChangesRequests
qualityOfService
_globalOperationCallbackQueueForQOS:
setCloudKitMetrics:
activityCreate
topmostParentOperation
group
setName:
setGroup:
stateTransitionGroup
QOSClass
clientSuppliedDeviceIdentifier
deviceIdentifier
systemScheduler
automaticallyRetryNetworkFailures
duetPreClearedMode
discretionaryWhenBackgroundedState
discretionaryNetworkBehavior
MMCSRequestOptions
authPromptReason
preferAnonymousRequests
allowsBackgroundNetworking
timeoutIntervalForRequest
timeoutIntervalForResource
additionalRequestHTTPHeaders
shouldSkipZonePCSUpdate
operationGroupID
name
quantityNumber
isWaitingOnPCS
dictionaryWithCapacity:
CKAddPropertySafelyForKey:value:
state
nameForState:
requestUUIDs
startDate
finishedChildOperationIDs
childOperations
operationGroupName
substringToIndex:
operationGroupQuantityNumber
MMCSMetrics
_stateFlags
setMMCSMetrics:
cloudKitMetrics
addCKSpecificMetricsFromMetrics:
setParentOperation:
setDeviceIdentifier:
setMMCSRequestOptions:
setDuetPreClearedMode:
setDiscretionaryWhenBackgroundedState:
setSystemScheduler:
setUseEncryption:
requestCompletedBlock
combineMetricsWithOperation:
childOperationsGroup
addDependency:
spawnAndRunOperationOfClass:operationInfo:spawnQueue:clientContext:operationConfigurationBlock:
spawnAndRunOperationOfClass:operationInfo:spawnQueue:operationConfigurationBlock:
_acquirePowerAssertion
_registerAttemptForOperation
main
isProxyOperation
registerAttemptForOperationWithID:
applicationWithBundleID:canSyncUsingVersion:forContainer:
_determineNetworkServiceType
networkServiceType
setIsUplink:
resolvedNetworkServiceTypeForConfig:
isPredominatelyDownload
expectedSendSize
expectedReceiveSize
systemImposedInfo
setExpectedSendSize:
setExpectedReceiveSize:
networkServiceTypePerConfig
setNetworkServiceTypePerConfig:
approximateSendBytes
approximateReceiveBytes
setSystemImposedInfo:
_continueOperationStart
accountWantsFlowControl
osActivity
setMetricExecuteStartDate:
metricExecuteStartDate
newRangeWithOperationState:startDate:duration:
addRange:
raise:format:
_reallyStart
operationShouldBeFlowControlled
checkFlowControlIsLimited:outReportableError:
secondsUntilFlowControlNotLimited:
errorWithCode:userInfo:error:format:
shouldCheckAppVersion
_checkAppVersion
setError:
_finishOnCallbackQueueWithError:
_finishInternalOnCallbackQueueWithError:
_dropPowerAssertion
_errorShouldImpactFlowControl:
userInfo
updateFlowControlForOperation:reportableError:
updateFlowControl:withRetryAfter:reportableError:
setDuration:
sendCoreAnalyticsEventOperationFinished
setState:
makeStateTransition
makeStateTransition:
domain
code
processInfo
endActivity:
operationDidReleasePowerAssertion:
_dropPowerAssertionsForSelfAndParent
beginActivityWithOptions:reason:
operationDidAcquirePowerAssertion:
_acquirePowerAssertionsForSelfAndParent
flowControlKey
resolvedAutomaticallyRetryNetworkFailures
resolvedDiscretionaryNetworkBehavior
ckShortDescription
configureRequest:
setClientProvidedAdditionalHeaderValues:
setMetricsDelegate:
setAuthRetryDelegate:
requestUUID
requestCount
setRequestCount:
isAppleInternalInstall
automatedDeviceGroup
setAutomatedDeviceGroup:
requestOperationCountsByOperationType
addRequestOperationCountsByOperationType:
responseHeaders
initWithRequestUUID:responseHTTPHeaders:w3cTiming:
setMetrics:
initWithMMCSOperationMetric:
metrics
operationResultClass
fillOutOperationResult:
setTimeStyle:
setDateStyle:
appendFormat:
_runDurationString
_startDateString
CKStatusReportProperties
CKStatusReportLogGroups
didAttemptDugongKeyRoll
dugongKeyRollAnalyticsPayloadWithError:
isTopLevelDaemonOperationForMetrics
analyticsPayload
baseOperationAndErrorInfoCoreAnalyticsPayloadWithError:
duration
queueing
executing
bytesUploaded
bytesDownloaded
connections
connectionsCreated
request:didFinishWithMetrics:w3cNavigationTiming:
requestDidBeginWaitingForUserAuth:
requestDidEndWaitingForUserAuth:
createSerialQueue
createInactiveSerialQueue
createConcurrentQueue
createInactiveConcurrentQueue
noteOperationWillWaitOnPCS
noteOperationDidFinishWaitingOnPCS
isConcurrent
isNetworkingBehaviorEquivalentForOperation:
setStartDate:
useClearAssetEncryption
setUseClearAssetEncryption:
shouldPipelineFetchAllChangesRequests
setShouldPipelineFetchAllChangesRequests:
setOperationInfo:
setStateTransitionGroup:
setRequestUUIDs:
setChildOperations:
setFinishedChildOperationIDs:
powerAssertion
setPowerAssertion:
setChildOperationsGroup:
setClientSuppliedDeviceIdentifier:
pcsWaitCount
setPcsWaitCount:
setDidAttemptDugongKeyRoll:
_state
_osActivity
_useEncryption
_useClearAssetEncryption
_isProxyOperation
_shouldPipelineFetchAllChangesRequests
_didAttemptDugongKeyRoll
_pcsWaitCount
_startDate
_parentOperation
_error
_cloudKitMetrics
_MMCSMetrics
_metricExecuteStartDate
_requestCompletedBlock
_operationInfo
_stateTransitionGroup
_requestUUIDs
_childOperations
_finishedChildOperationIDs
_powerAssertion
_childOperationsGroup
_clientSuppliedDeviceIdentifier
setCode:
setHasCode:
hasCode
codeAsString:
StringAsCode:
hasError
_code
setEntropy:
hasEntropy
entropy
_entropy
activity
completionHandler
initWithWaiter:zoneIDs:completionHandler:activity:
invokeCompletionHandler:
waiter
_waiter
_zoneIDs
_activity
_completionHandler
zoneIDsToGateHolders
waiterWrappers
registerWaiter:forZoneIDs:completionHandler:
relinquishLocksForWaiter:
setZoneIDsToGateHolders:
setWaiterWrappers:
_zoneIDsToGateHolders
_waiterWrappers
assetZoneKey
initWithAssetZoneKey:
initWithAssetZone:
setUseMMCSEncryptionV2:
assetRecords
asset
assetTransferOptions
useMMCSEncryptionV2
addAssetRecord:
assetZone
destinationZoneID
isEmptyOfAssets
isFailed
setIsFailed:
assetRegisterAndPutBatches
assetGetChunkKeysBatches
items
assetTokenRequests
initWithMMCSEncryptionSupport:
resetAssetTokenRequests
planRegisterBatches
planGetChunkKeysBatches
planAssetRequests
failBatch:
hasSuccessfulAssetTokenRequests
setAssetRegisterAndPutBatches:
setAssetGetChunkKeysBatches:
assetTokenRequestSizeLimit
setAssetTokenRequests:
rerefAssetBatchesByZoneID
setRerefAssetBatchesByZoneID:
assetBatchesByZoneID
setAssetBatchesByZoneID:
setItems:
assetZoneByKey
setAssetZoneByKey:
_assetTokenRequestSizeLimit
_assetRegisterAndPutBatches
_assetGetChunkKeysBatches
_assetTokenRequests
_rerefAssetBatchesByZoneID
_assetBatchesByZoneID
_items
_assetZoneByKey
encodeWithCoder:
initWithCoder:
supportsSecureCoding
recordZoneIDs
setRecordZoneIDs:
_recordZoneIDs
_fetchZones
_checkRecordPCSForAllZones
fetchedZones
setFetchAllChanges:
valueForKeyPath:
setDesiredKeys:
setConfigurationsByRecordZoneID:
setForcePCSDecryptionAttempt:
mutableCorruptRecords
setIsFetchAllRecordZonesOperation:
setIgnorePCSFailures:
setZoneIDs:
setFetchedZones:
setMutableCorruptRecords:
_fetchedZones
_mutableCorruptRecords
query
cursor
resultsLimit
shouldFetchAssetContent
desiredKeys
fetchAllResults
assetTransferOptionsByKey
resultsCursor
initWithData:zoneID:
setResultsCursor:
fetchRecordsGroup
queryCursorUpdatedBlock
setHasCalledQueryCursorUpdatedBlock:
initWithFormat:arguments:
recordFetcher
zoneName
hasCalledQueryCursorUpdatedBlock
recordFetchedBlock
CKIsNotFoundError
_wrapError:format:
recordsDownloaded
setRecordsDownloaded:
assetCount
assetsDownloaded
setAssetsDownloaded:
assetDiskSize
assetsDownloadedFileSize
setAssetsDownloadedFileSize:
fetchRecords:withPerRecordCompletion:
desiredKeySet
initWithQuery:cursor:limit:requestedFields:zoneID:
setDesiredAssetKeys:
setShouldFetchAssetContent:
requestInfos
numRequestsSent
setNumRequestsSent:
_sendQueryRequestWithCursor:previousRequestSchedulerInfo:
_handleQueryRequestFinishedWithSchedulerInfo:
_handleRecordResponses:perRequestSchedulerInfo:
setRecordsParsedBlock:
pQueryFromQuery:error:
localizedDescription
setFetchAssetContents:
setPreserveOrdering:
setAssetTransferOptionsByRecordTypeAndKey:
setRecordFetcher:
setFetchAggregatorCompletionBlock:
finishIfAppropriate
setCursor:
setDesiredKeySet:
setZoneID:
setFetchAllResults:
setFetchRecordsGroup:
setRequestInfos:
setAssetTransferOptionsByKey:
_shouldFetchAssetContent
_fetchAllResults
_hasCalledQueryCursorUpdatedBlock
_query
_cursor
_resultsLimit
_resultsCursor
_recordFetchedBlock
_queryCursorUpdatedBlock
_desiredKeySet
_zoneID
_recordFetcher
_fetchRecordsGroup
_numRequestsSent
_requestInfos
_assetTransferOptionsByKey
setContainerName:
setEnvironment:
hasContainerName
hasEnvironment
containerName
_containerName
_environment
addCallbackForItemWithID:operation:callback:
setLastRequestDate:
highestQOS
setHighestQOS:
setRecordIDs:
initialOperation
setUseCachedEtags:
setSkipDecryption:
performCallbacksForItemWithID:withItem:error:
addRequestForRecordID:forOperation:withCompletionHandler:
createFetchOperationForItemIDs:operationQueue:operationConfigurationBlock:
fileAndLine
setFileAndLine:
setCount:
_fileAndLine
_count
initWithLogTypes:
eventMessage
componentsSeparatedByString:
intValue
totalSizeByLine
totalCountByLine
sortUsingComparator:
eventMatched:
finish
setTotalSizeByLine:
setTotalCountByLine:
_totalSizeByLine
_totalCountByLine
setZoneIdentifier:
setContinuationMarker:
hasZoneIdentifier
setOnlyFetchPCSInfo:
setHasOnlyFetchPCSInfo:
hasOnlyFetchPCSInfo
hasContinuationMarker
zoneIdentifier
onlyFetchPCSInfo
continuationMarker
_continuationMarker
_zoneIdentifier
_onlyFetchPCSInfo
fetchOptions
zonePCSData
zoneishPCSData
needsZoneishPCS
zoneishPublicKeyID
didFetchData
setZonePCSData:
setDidFetchData:
setFetchError:
cache
setWasFetchedFromCache:
_handlePCSDataFetched:withError:
fetchPCSDataForZoneWithID:databaseScope:withCompletionHandler:
_fetchDepedentPCSInSharedDatabase
shareID
initWithRecordName:zoneID:
setRecordZonesToSave:
setAllowDefaultZoneSave:
setMaxZoneSaveAttempts:
setDontFetchFromServer:
dataFromZonePCS:error:
dataFromRecordPCS:error:
setProtectionData:
etagFromPCSData:
setProtectionEtag:
setZoneishProtectionData:
setPreviousProtectionEtag:
_saveZoneToServer:completion:
isDefaultRecordZoneID
createZonePCSWithError:
createRecordPCSWithZonePCS:sharePCS:createLite:error:
createZonePCSFromData:usingServiceIdentityWithType:error:
setPcs:
zoneishProtectionData
createPCSObjectFromData:ofType:sharedToPCS:error:
setZoneishPCS:
CKLowercaseHexStringWithoutSpaces
_saveZoneToServer:withPCS:zoneishPCS:previousEtag:completion:
_saveNewPCSOnDefaultZone:completion:
requestFetchOfZoneWithID:forOperation:withCompletionHandler:
setShouldCreateZoneishPCS:
fetchError
_decryptZonePCSInSharedDatabase
_decryptZonePCSUsingServiceIdentities
sharePCSData
_handleDecryptedZonePCSData:withError:
createZonePCSFromData:usingServiceIdentityWithType:completionHandler:
shouldCreateZoneishPCS
initWithZoneID:
wasFetchedFromCache
itemTypeName
hasAllPCSData
_willRetryFetch
_fetchPCSDataFromDatabase
_fetchDependentPCS
_fetchPCSDataFromServer
_createAdditionalPCS
_decryptPCS
_saveUpdatedPCSToServer
_savePCSDataToCache
_shouldCreateZoneishPCS
delegate
activityStream:results:
streamDidFail:error:
streamDidStop:
eventFilter
setEventFilter:
fetchFromStartDate:toEndDate:
dateWithTimeIntervalSinceNow:
stop
persistence:results:error:
persistenceDidFinishReadingForStartDate:endDate:
streamDidStart:
activityStream:results:error:
startFromStartDate:
logPersistence
setLogPersistence:
activityStream
setActivityStream:
results
setResults:
stillReadingFromArchive
setStillReadingFromArchive:
continueToReturnResults
setContinueToReturnResults:
_stillReadingFromArchive
_continueToReturnResults
_logPersistence
_activityStream
_results
initWithApplicationBundleID:containerID:personaID:
_wantsSiloedContext
setAppContainerTuple:
setAccountID:
_accountID
_init
initWithCode:format:
privacyManagerQueue
knownAppContainerAccountTuples
_resetPrivacySettingsForAppContainerAccountTuple:completionHandler:
resetPrivacySettingsWithCompletionHandler:
setPrivacyManagerQueue:
setOperations:
_privacyManagerQueue
_operations
initWithName:format:
completionHandlersByItemID
dependentOperationIDsByItemID
dependentOperationIDs
callbacksForItemWithID:
removeCallbacksForItemWithID:
allItemIDs
errorWithCode:userInfo:format:
finishFetchOperationWithError:
lastRequestDate
numberOfCallbacks
runningOperationID
maxBatchSizeForContainer:
maxBatchSize
setRunningOperationID:
initWithOperation:context:operationQueue:
cancelFetchOperation
canBeUsedForOperation:
canBeUsedForPendingFetch:
dependentOperationListContainsRunningFetch:
dependentOperationListContainsOperationID:
queuedDate
setQueuedDate:
setCompletionHandler:
equivalentRunningFetch
setEquivalentRunningFetch:
setOsActivity:
setCompletionHandlersByItemID:
lastCompletionHandlerCount
setLastCompletionHandlerCount:
setDependentOperationIDs:
setDependentOperationIDsByItemID:
setInitialOperation:
_queuedDate
_equivalentRunningFetch
_completionHandlersByItemID
_lastCompletionHandlerCount
_lastRequestDate
_highestQOS
_runningOperationID
_dependentOperationIDs
_dependentOperationIDsByItemID
_initialOperation
initWithRequestID:
_tearDownStreamWriter
urlSessionTask
lifecycleQueue
taskIdentifier
generateRequestOperations
requestOperations
contextInfoProvider
header
setHeader:
setApplicationBundle:
includeContainerInfo
setTargetDatabase:
setDeviceHardwareVersion:
setDeviceSoftwareVersion:
sendRequestAnonymously
setDeviceHardwareID:
CKDPIdentifier_Device
deviceID
setDeviceAssignedName:
isolationLevel
setIsolationLevel:
setOperationGroupName:
operationGroupQuantity
setOperationGroupQuantity:
infoDictionary
setDeviceLibraryName:
setDeviceLibraryVersion:
type
setLocale:
locale
setLanguageCode:
setRegionCode:
setDeviceFlowControlKey:
currentBudget:
setDeviceFlowControlBudget:
currentBudgetCap:
setDeviceFlowControlBudgetCap:
currentRegeneration:
setDeviceFlowControlRegeneration:
setDeviceSoftwareIsAppleInternal:
protocolVersion
setMmcsProtocolVersion:
requestGETPreAuth
setAssetAuthorizeGetRequestOptions:
assetAuthorizeGetRequestOptions
setContentRequestAuthorizeGetOptions:
setContentRequestHeaders:
protocolHeaders
createAssetAuthorizeGetRequestOptionsHeaderInfoWithKey:value:
contentRequestHeaders
lastObject
setLast:
_registerRequestOperationTypesForOperations:
streamWriter
setStreamedObjects:
countsByRequestOperationType
setCountsByRequestOperationType:
authRetryDelegate
usesiCloudAuthToken
usesCloudKitAuthToken
accountInfoProvider
accountAccessInfoProvider
cloudKitAuthTokenWithAccessProvider:completionHandler:
iCloudAuthTokenWithAccessProvider:completionHandler:
setIsWaitingOnAuthRenew:
cloudKitAuthToken
renewCloudKitAuthTokenWithReason:shouldForce:accessProvider:failedToken:completionHandler:
iCloudAuthToken
renewiCloudAuthTokenWithReason:shouldForce:accessProvider:failedToken:completionHandler:
didRetryAuth
setDidRetryAuth:
setIsHandlingAuthRetry:
tearDownResourcesAndReleaseTheZoneLocks
performOnLifecycleQueueIfNotFinished:
_renewAuthTokenWithCompletionHandler:
hasResult
result
hasClientError
clientError
hasType
_handleAuthFailure
errorDescription
errorWithDomain:code:userInfo:
hasServerError
serverError
hasExtensionError
hasAuxiliaryError
hasOperationCost
operationCost
updateFlowControl:withCost:reportableError:
_handleServerProtobufResult:rawData:
response
operationUUID
responseObjectUUIDs
translator
consumeResponseHeader:
requestDidParseProtobufObject:
hasRetryAfterSeconds
retryAfterSeconds
requestDidParseNodeFailure:
_handleServerJSONResult:
requestDidParseJSONObject:
_handlePlistResult:
requestDidParsePlistObject:
rangeOfString:options:
initWithQoS:
expectedResponseClass
setMessageClass:
parsingStandaloneMessage
setParsingStandaloneMessage:
_protobufObjectParsedBlock
setObjectParsedBlock:
trafficLogger
logResponseConfiguration:withMessageClassString:
_jsonObjectParsedBlock
_xmlObjectParsedBlock
requestDidParsePlaintextObject:
requestDidParse509CertObject:
initWithData:encoding:
_finishOnLifecycleQueueWithError:
extensionError
hasTypeCode
requestOperationClasses
serverType
partitionType
compressRequests
protobufOperationName
setOperationUUID:
setType:
setReason:
shouldCompressBody
initWithCompression:
setBufferSize:
logPartialRequestObjectData:
setLogRequestObjectBlock:
allowsAnonymousAccount
setDidReceiveResponseBodyData:
_setupPublicDatabaseURL
performASyncOnLifecycleQueueIfNotFinished:
requiresAppPartitionURL
_setupPrivateDatabaseURL
requiresUserPartitionURL
_setupConfiguration
requiresConfiguration
_fetchContainerScopedUserID
allowsAuthedAccount
initWithContainerScopedUserID:orgAdminUserID:packageStagingDirectory:databaseScope:
setTranslator:
setIdentityDelegate:
setDontCreateValidatingParentReferences:
_fetchDeviceID
requiresDeviceID
setDeviceID:
_acquireZoneGates
requiresTokenRegistration
sharedSchedulerWithUnitTestingContextInfoProvider:accountInfoProvider:
ensureTokenRefreshForAppContainerAccountTuple:contextInfoProvider:completionBlock:
_performRequest
zoneIDsToLock
_prepareAuthTokens
_prepareCloudKitAuthToken
prepareRequestWithCompletion:
setCloudKitAuthToken:
_authTokenWithCompletionHandler:
setICloudAuthToken:
_registerPushTokens
validate:
initWithURL:
requestProperties
_setProperty:forKey:
httpMethod
setHTTPMethod:
hasRequestBody
requestContentType
setValue:forHTTPHeaderField:
sendDebugHeader
testRunIDHeader
acceptContentType
operationIDForProtobuf
base64EncodedStringWithOptions:
additionalHeaderValues
clientProvidedAdditionalHeaderValues
overriddenHeaders
setNetworkServiceType:
requestMessageClass
logRequest:toURL:withMethod:withMessageClassString:parsingStandaloneMessage:
_loadRequest:
sharedURLSessionPool
backgroundSessionConnectionPoolLimit
backgroundSessionConnectionPoolName
setOutOfProcessPoolName:
set_allowsExpensiveAccess:
set_allowsPowerNapScheduling:
set_timeoutIntervalForRequest:
set_timeoutIntervalForResource:
set_sourceApplicationBundleIdentifier:
set_sourceApplicationSecondaryIdentifier:
set_appleIDContextSessionIdentifier:
setTlsPinning:
setAllowRouting:
allowExpiredDNSBehavior:
setAllowExpiredDNSBehavior:
set_allowsRetryForBackgroundDataTasks:
metricOptionsForNetworkRequest:
setMetricOptions:
tearDownResources
setResponseBodyParser:
setUrlSession:
requestOptions
createDataTaskWithRequest:options:delegate:sessionHandle:
setUrlSessionTask:
_CFNetworkTaskIdentifierString
setDateRequestWentOut:
setCancelled:
_onLifecycleQueue
defaultRetryAfter
_wrapErrorIfNecessary:
serverProvidedAutoBugCaptureReason
_triggerAutoBugCaptureWithErrorPayload:
serverProvidedTapToRadarRequest
triggerTapToRadarWithRequest:
markAsFinished
cancelPreviousPerformRequestsWithTarget:selector:object:
finishRequestLog
dateRequestWentOut
metricsDelegate
timingData
completionBlock
setRequestProgressBlock:
setResponseProgressBlock:
setContainerID:
setErrorPayload:
setProcName:
setResponse:
setC2RequestOptions:
taskDescription
allowAutomaticRedirects
setURL:
setHTTPShouldHandleCookies:
requestBodyStream
setHTTPBodyStream:
HTTPMethod
allHTTPHeaderFields
setAllHTTPHeaderFields:
statusCode
redirectHistory
setRedirectHistory:
protectionSpace
authenticationMethod
allHeaderFields
CKObjectForKeyCaseInsensitive:
logResponse:
expectedContentLength
responseProgressBlock
countOfBytesReceived
responseBodyParser
valueForKey:
defaultParserForContentType:
logPartialResponseObjectData:
processData:
logRequestBodyStreamReset
requestProgressBlock
_timingData
setConnectionsCreated:
countOfBytesSent
setBytesUploaded:
setBytesDownloaded:
setTimingData:
requestDidComplete
setServerProvidedAutoBugCaptureReason:
setMessage:
setComponentName:
setComponentVersion:
setComponentID:
setRelatedRadar:
setServerProvidedTapToRadarRequest:
substringFromIndex:
setServerProvidedAutoSysdiagnoseCollectionReason:
isHandlingAuthRetry
needsAuthRetry
setNeedsAuthRetry:
responseStatusCode
_errorFromHTTPResponse:
didReceiveResponseBodyData
expectsResponseBody
finishWithCompletion:
setConnections:
dictionaryWithObjectsAndKeys:
isWaitingOnAuthRenew
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
URLSession:task:needNewBodyStream:
URLSession:task:didSendBodyData:totalBytesSent:totalBytesExpectedToSend:
URLSession:task:didCompleteWithError:
URLSession:task:_willSendRequestForEstablishedConnection:completionHandler:
URLSession:_taskIsWaitingForConnection:
URLSession:task:_conditionalRequirementsChanged:
URLSession:dataTask:didReceiveResponse:completionHandler:
URLSession:dataTask:didReceiveData:
URLSession:_willRetryBackgroundDataTask:withError:
shouldLogResponseBody
expectsSingleObject
overrideRequestHeader:withValue:
operationType
operationRequestWithType:
URLSession:task:didReceiveChallenge:completionHandler:
lastRedirectURL
sectionID
setAllowAutomaticRedirects:
setRequestProperties:
fakeResponseOperationResultByItemID
setLifecycleQueue:
c2RequestOptions
urlSession
setResponseObjectUUIDs:
setTrafficLogger:
numDownloadedElements
setNumDownloadedElements:
haveCachedServerType
setHaveCachedServerType:
haveCachedPartitionType
setHaveCachedPartitionType:
cachedServerType
setCachedServerType:
cachedPartitionType
setCachedPartitionType:
voucher
setVoucher:
serverProvidedAutoSysdiagnoseCollectionReason
setOverriddenHeaders:
_accountInfoProvider
_contextInfoProvider
_accountAccessInfoProvider
_responseStatusCode
_requestUUID
_didSendRequest
_didFinishLoading
_finished
_didRetrySignature
_responseBodyParser
_allowAutomaticRedirects
_requestProgressBlock
_responseProgressBlock
_completionBlock
_fakeResponseData
_haveParsedFakeResponseData
_streamWriter
_transmissionActivity
_needsAuthRetry
_isWaitingOnAuthRenew
_isHandlingAuthRetry
_didRetryAuth
_cancelled
_haveCachedServerType
_haveCachedPartitionType
_didReceiveResponseBodyData
_requestProperties
_requestOperations
_metricsDelegate
_authRetryDelegate
_translator
_automatedDeviceGroup
_clientProvidedAdditionalHeaderValues
_fakeResponseOperationResultByItemID
_lifecycleQueue
_urlSessionTask
_c2RequestOptions
_response
_urlSession
_responseObjectUUIDs
_trafficLogger
_deviceID
_numDownloadedElements
_cachedServerType
_cachedPartitionType
_dateRequestWentOut
_metrics
_voucher
_cloudKitAuthToken
_iCloudAuthToken
_serverProvidedAutoBugCaptureReason
_serverProvidedTapToRadarRequest
_serverProvidedAutoSysdiagnoseCollectionReason
_countsByRequestOperationType
_overriddenHeaders
_redirectHistory
handleFailureInFunction:file:lineNumber:description:
numberWithUnsignedInt:
setBadgeCount:
setHasBadgeCount:
hasBadgeCount
setForDevice:
setHasForDevice:
hasForDevice
badgeCount
forDevice
_badgeCount
_forDevice
initWithPaths:
setShouldRemoveFileBlock:
purge
paths
enumeratorAtURL:includingPropertiesForKeys:options:errorHandler:
getResourceValue:forKey:error:
level
shouldSkipFileBlock
skipDescendants
shouldRemoveFileBlock
setShouldSkipFileBlock:
setPaths:
_shouldSkipFileBlock
_shouldRemoveFileBlock
_paths
numberWithLongLong:
setSignature:
hasSignature
setHasSize:
hasSize
setLastSection:
setHasLastSection:
hasLastSection
signature
lastSection
_signature
_lastSection
setOwner:
setFileSignature:
setReferenceSignature:
hasOwner
hasFileSignature
hasReferenceSignature
owner
fileSignature
referenceSignature
_fileSignature
_owner
_referenceSignature
assetContextString
encryptedDataContextString
setRecordID:
synchronizeQueue
identityManager
updateAccount:
setBoundaryKeyData:
missingIdentityPublicKeys
undecryptablePCSDataHashes
servicesWithMissingIdentities
_legacyServiceNameForContainerIDMapping:
statusForCurrentlyLoggedInAccountWithCompletionHandler:
initWithAccount:serviceName:isSiloed:forceEnableReadOnlyManatee:
identitiesChanged
createFullKeychainIdentitySetWithError:
minusSet:
pcsUpdateSource
debugSharingIdentity
_onSynchronizeQueue:
serviceName
PCSServiceStringFromCKServiceType:
copyPublicKeyForService:withError:
copyAllPublicKeysForService:withError:
containerScopedUserIDProvider
copyDiversifiedIdentityForService:userIDEntropy:withError:
copyDiversifiedPublicKeyForService:userIDEntropy:withError:
copyDiversifiedPublicKeyForService:withError:
createCombinedIdentityWithOutOfNetworkPrivateKey:publicSharingIdentity:
createSharePCSFromData:sharingIdentity:error:
createPublicSharingIdentityFromPublicKey:error:
addPublicIdentity:toSharePCS:permission:
removeSharingIdentity:fromSharePCS:
dataFromSharePCS:error:
createSharePCSFromData:ofType:withService:error:
createSharingIdentityFromData:error:
copyIdentitySetWithType:options:error:
_addIdentity:withService:toPCS:
isEqualToData:
identitySet:containsPublicKey:error:
errorWithCode:userInfo:error:path:URL:description:
_locked_createZonePCSWithSyncKeyRegistryRetry:completionHandler:
synchronizeUserKeyRegistryForServiceType:shouldThrottle:completionHandler:
createZonePCSWithSyncKeyRegistryRetry:completionHandler:
_pcsObjectKindForCKDPCSBlobType:
isPreviouslyUndecryptablePCS:
containerIDToForceFatalManateeZoneDecryptionFailure
initWithSharingRequestData:identitySet:error:
exportAcceptedSharingRequestWithError:
responsibleBundleID
noMatchingIdentityErrorForPCSError:withErrorCode:description:
_locked_markMissingIdentitiesFromFailedDecryptError:serviceName:
_locked_createPCSFromData:ofType:usingPCSServiceType:withSyncKeyRegistryRetry:completionHandler:
markUndecryptablePCS:
_triggerAutobugCaptureForLostManateeIdentityError
_createPCSFromData:ofType:usingPCSServiceType:withSyncKeyRegistryRetry:completionHandler:
_locked_preflightIdentitiesForService:withSyncKeyRegistryRetry:completionHandler:
_copyShareProtectionFromExportedData:ofType:identities:error:
zonePCSNeedsKeyRolled:bypassWhitelistedContainers:
rollZonePCSIdentities
_isWhitelistedKeyRollingContainerIdentifier:
internalServicesToCombineWithLiverpoolKey
liverpoolPublicKey
addIdentityForService:toPCS:
rollMasterKeyForRecordPCS:bypassWhitelistedContainers:
rollRecordPCSMasterKeys
maxRecordPCSMasterKeyRolls
CKSHA256
rollZoneSharingKeys
canRollShareKeys
publicPCS
removeSharePCS:fromRecordPCS:error:
rollIdentityForSharePCS:removeAllExistingPrivateKeys:error:
addSharePCS:toRecordPCS:error:
updateZoneIdentityForPCS:usingZonePCS:bypassWhitelistedContainers:
removePrivateKeysForKeyIDs:fromPCS:
setInvitedPCS:
setPublicPCS:
createPCSObjectFromData:ofType:sharedToPCS:logFailure:error:
addSharePCS:toRecordPCS:permission:error:
createEmptySharePCSOfType:error:
_addPublicIdentityForService:toSharePCS:withError:
createSharePCSFromData:sharingIdentity:logFailure:error:
createSharePCSFromData:ofType:withService:logFailure:error:
_locked_decryptPCSDataOnSharePCS:withPublicSharingKey:completionHandler:
serviceType
myParticipantPCSData
setMyParticipantPCS:
myParticipantPCS
publicPCSData
createSharePCSFromData:sharePrivateKey:error:
publicPermission
_locked_decryptCurrentPerParticipantPCSDataOnSharePCS:completionHandler:
pcsDataFromFetchedShare:withServiceType:completionHandler:
_locked_pcsDataFromFetchedShare:withPublicSharingKey:withServiceType:completionHandler:
privatePCS
dataWithShareID:pcsData:
setServiceType:
createSharePCSOfType:forPCSServiceType:error:
createEmptySignedSharePCSOfType:forPCSServiceType:withError:
addSharingIdentity:toSharePCS:permission:
createSharePublicPCSWithIdentity:error:
removePublicIdentity:fromSharePCS:
createSharePCSFromEncryptedData:error:
encryptedChainPCSPrivateKey
containerSupportsEnhancedContext
useEnhancedPCSEncryptionContext
referenceIdentifierStringFromAssetKey:
referenceSignatureFromAssetKey:
unwrapEncryptedData:withPCS:withContextString:
setData:
wrapEncryptedData:withPCS:withContextString:
boundaryKeyData
_lockedBoundaryKeyDataWithCompletionHandler:
syncUserKeysForService:serviceIsManatee:account:shouldThrottle:testOverrideProvider:completionHandler:
bytes
subdataWithRange:
publicKeyIDFromIdentity:
protectionIdentifierFromShareProtection:
allProtectionIdentifiersFromShareProtection:
_checkAndClearPCSTestOverrideForKey:
_checkPCSTestOverrideForKey:
_pcsTestOverrideForKey:
sharingFingerprintsContainPublicKeyWithData:error:
lastMissingManateeIdentityErrorDateForCurrentService
publicKeyVersionForServiceType:
pcsServiceName
copyDiversifiedIdentityForService:withError:
participantPublicKeyForServiceType:error:
createProtectionInfoFromOONPrivateKey:privateToken:OONProtectionInfo:error:
canDecryptInvitedProtectionData:participantProtectionInfo:serviceType:error:
createZonePCSWithCompletionHandler:
availableIdentityForService:error:
preflightIdentitiesForService:withSyncKeyRegistryRetry:completionHandler:
etagFromZonePCS:error:
repairZonePCSData:error:
zonePCSNeedsKeyRolled:
zonePCSNeedsUpdate:
updateServiceIdentityOnZonePCS:
rollMasterKeyForRecordPCS:
updateIdentityAndRollKeyForZonePCS:usingServiceIdentityWithType:
keyRollForZoneWideShareWithZonePCS:sharePCS:
createRecordPCSWithEncryptedZonePCS:sharePCS:createLite:error:
updateSigningIdentityOnPCS:usingSignedPCS:
etagFromRecordPCS:error:
setOwnerIdentity:onPCS:
createChainPCSWithError:
publicKeyDataFromPCS:error:
decryptPCSDataOnSharePCS:completionHandler:
pcsDataFromFetchedShare:completionHandler:
copyPublicAuthorshipIdentityFromPCS:
createNewSharePCSDataForShareWithID:withPublicSharingKey:addDebugIdentity:error:
etagFromSharePCS:error:
addIdentityBackToPCS:
removeEncryptedPCS:fromSharePCS:
removePublicKeyID:fromPCS:
sharingIdentityDataFromPCS:error:
decryptChainPCSForRecordPCS:
unwrapAssetKey:withRecordPCS:inContext:withError:
wrapAssetKey:withRecordPCS:inContext:withError:
newAssetKeyWithType:withError:
isSiloed
setLastMissingManateeIdentityErrorDateForCurrentService:
setMissingIdentityPublicKeys:
setServicesWithMissingIdentities:
setUndecryptablePCSDataHashes:
setPcsUpdateSource:
setSynchronizeQueue:
_isSiloed
_containerScopedUserIDProvider
_responsibleBundleID
_identityManager
_lastMissingManateeIdentityErrorDateForCurrentService
_missingIdentityPublicKeys
_servicesWithMissingIdentities
_undecryptablePCSDataHashes
_boundaryKeyData
_pcsUpdateSource
_synchronizeQueue
shareURLsToFetch
rootRecordDesiredKeys
shouldFetchRootRecord
shareInvitationTokensByShareURL
_prepareShortTokens
_fetchShortTokenMetadata
errorOnOON
participantPermission
outOfNetworkMatches
setInvitationToken:
shareTokenMetadatasToFetchByURL
shareMetadataFetchedBlock
shortSharingTokenData
decryptFullToken:shortSharingTokenData:
initWithBytes:length:encoding:
CKDataFromBase64URLSafeString:
substringWithRange:
setPrivateTokenData:
setPublicTokenData:
routingKey
setRoutingKey:
shortSharingTokenHashData
setShortSharingTokenHashData:
setShouldFetchRootRecord:
forceDSRefetch
setForceDSRefetch:
initWithShortTokenLookupInfos:
rootRecordDesiredKeysSet
setRootRecordDesiredKeySet:
_handleTokenResolveWithLookupInfo:shareMetadata:responseCode:urlByShortTokenLookupInfos:tokensToFetchByURL:
setTokenResolveBlock:
_performCallbackForURL:withMetadata:error:
setDisplayedHostname:
setMutableURL:
protectedFullToken
_decodeProtectedFullToken:tokenMetadata:
privateTokenData
setPrivateToken:
publicTokenData
setPublicToken:
callingParticipant
acceptanceStatus
shareURL
_continueSharePCSPrepForShareMetadata:shareURL:
_prepPPPCSDataForDugongShareMetadata:withInvitationToken:completionHandler:
privateToken
sharedZone
_continueHandlingFetchedShareMetadata:shareURL:
setMutableEncryptedPSK:
mutableEncryptedPSK
containsAssetValues
rootRecord
_decryptRootRecordsForShareURL:withMetadata:completionHandler:
participantRole
setAccountInfoOverride:
_currentUserIsOONForShareMetadata:
setFullRecordsToFetch:
hasiCloudAccount
initWithURL:resolvingAgainstBaseURL:
setShortSharingTokenData:
setShareURLsToFetch:
setShareTokenMetadatasToFetchByURL:
setRootRecordDesiredKeysSet:
clientWillDisplaySystemAcceptPrompt
setClientWillDisplaySystemAcceptPrompt:
setShareInvitationTokensByShareURL:
_forceDSRefetch
_errorOnOON
_shouldFetchRootRecord
_clientWillDisplaySystemAcceptPrompt
_shareMetadataFetchedBlock
_shareURLsToFetch
_shareTokenMetadatasToFetchByURL
_rootRecordDesiredKeysSet
_shareInvitationTokensByShareURL
CKBase64URLSafeString
shortSharingToken
_routingKey
_shortSharingTokenData
_publicTokenData
_privateTokenData
recordIDsToShare
recordIDsToUnshare
recordIDsToShareReadWrite
_fetchRecords
_saveRecords
recordsToSaveByID
numSaveAttempts
PCSRetryCount
recordWebSharedBlock
recordWebUnsharedBlock
setNumSaveAttempts:
setRecordsToSave:
setSavePolicy:
setRetryPCSFailures:
setCanSetPreviousProtectionEtag:
setTrustProtectionData:
_handleRecordSaved:error:
_copyShareProtectionFromRecord:error:
recordPCS
_handleRecordFetched:recordID:error:
fetchedRecordIDs
setRecordIDsToShare:
setRecordIDsToUnshare:
setRecordIDsToShareReadWrite:
setFetchedRecordIDs:
setRecordsToSaveByID:
_numSaveAttempts
_recordWebSharedBlock
_recordWebUnsharedBlock
_recordIDsToShare
_recordIDsToUnshare
_recordIDsToShareReadWrite
_fetchedRecordIDs
_recordsToSaveByID
fileSize
setFileSize:
underlyingItemReader
setUnderlyingItemReader:
_underlyingItemReader
recordIDsToGrant
recordIDsToRevoke
accessWasGrantedBlock
accessWasRevokedBlock
setBaseToken:
setForcePCSDecrypt:
setRecordIDsToGrant:
setRecordIDsToRevoke:
_accessWasGrantedBlock
_accessWasRevokedBlock
_recordIDsToGrant
_recordIDsToRevoke
setUploadReceipt:
setRequestedSize:
setHasRequestedSize:
hasRequestedSize
setUploadedSize:
setHasUploadedSize:
hasUploadedSize
hasUploadReceipt
requestedSize
uploadedSize
uploadReceipt
_requestedSize
_uploadedSize
_uploadReceipt
setZoneProtectionInfoTag:
hasZoneProtectionInfoTag
zoneProtectionInfoTag
_zoneProtectionInfoTag
setValue:
hasName
hasValue
value
_name
_value
addRequestForZoneID:forOperation:withCompletionHandler:
userIdentityLookupInfos
discoverUserIdentitiesProgressBlock
initWithLookupInfos:
_handleDiscoveredIdentity:lookupInfo:responseCode:
setProgressBlock:
_discoverIdentitiesWithLookupInfos:completionBlock:
setUserIdentityLookupInfos:
_discoverUserIdentitiesProgressBlock
_userIdentityLookupInfos
setContactIdentifiersByLookupInfo:
lookupInfosWithEmails:
setWithObject:
contactIdentifiersByLookupInfo
initWithKeysToFetch:
setUnifyResults:
emailAddresses
initWithEmailAddress:
setShouldReportMissingIdentity:
phoneNumbers
initWithPhoneNumber:
enumerateContactsWithFetchRequest:error:usingBlock:
_discoverIdentitiesBatched:
setLookupInfo:
setContactIdentifiers:
_contactIdentifiersByLookupInfo
c2MetricsEndpoint
setC2MetricsEndpoint:
setAnonymous:
_setupC2MetricsEndpointWithContext:
setClientProcessVersion:
setClientProcessBundleId:
c2AllOperationMetricsReportFrequency:
setReportClientOperationFrequency:
c2AllOperationMetricsReportFrequencyBase:
setReportClientOperationFrequencyBase:
c2AllOperationGroupMetricsReportFrequency:
setReportOperationGroupFrequency:
c2AllOperationGroupMetricsReportFrequencyBase:
setReportOperationGroupFrequencyBase:
_attributeCurrentProxy:config:
anonymous
c2NetworkMetricsReportFrequency:
setReportFrequency:
c2NetworkMetricsReportFrequencyBase:
setReportFrequencyBase:
setOperationGroupId:
setOperationGroups:
setOperationId:
setOperationType:
setOperationGroup:
setClientOperations:
metricOptionsForNetworkOperation:
isPushTriggerFired
setPushTrigger:
c2ClientOperationMetricsReportFrequency:
c2ClientOperationMetricsReportFrequencyBase:
c2ClientApplicationMetricsReportFrequency:
c2ClientApplicationMetricsReportFrequencyBase:
associatedOperationGroups
associatedOperations
operationGroup
setDidCompleteWithError:
didCompleteWithError
metricOptionsForEventMetric:metricType:proxy:config:completionHandler:
capitalizedString
caseInsensitiveCompare:
keysOfEntriesPassingTest:
productName
productVersion
buildVersion
mainBundle
whitespaceCharacterSet
stringByTrimmingCharactersInSet:
initWithDestinationZoneID:sourceZoneID:
sourceZoneID
initWithDestinationZoneID:
setDestinationZoneID:
setSourceZoneID:
_destinationZoneID
_sourceZoneID
assetBatch
setAssetBatch:
itemByAssetId
setItemByAssetId:
_assetBatch
_itemByAssetId
strongToStrongObjectsMapTable
setTransactionStateByRequestIDs:
pRecordIdentifierFromRecordID:
setRecordId:
setAssetFields:
setField:
setAssets:
assetReference
wrappedAssetKey
clearAssetKey
setClearAssetKey:
assets
recordId
initWithRecordID:fileSignature:referenceSignature:size:
assetFields
setAssetUploadTokenRetrieveRequest:
assetUploadTokenRetrieveRequest
setUploads:
authPutRequest
setAuthPutRequest:
isRereferenceAssetBatch
setAuthPutType:
addContentRequestHeaders:
transactionStateByRequestIDs
hasAssetUploadTokenRetrieveResponse
assetUploadTokenRetrieveResponse
authPutResponse
setAuthPutResponse:
contentResponseHeadersCount
contentResponseHeaders
setAuthPutResponseHeaders:
authPutResponseHeaders
uploadTokens
recordIDFromPRecordIdentifier:error:
requestor
token
contentBaseURL
URLWithString:
pContainerScopedRecordIdentifierWithPRecordIdentifier:
setContentBaseURL:
setRequestor:
tokenExpiration
setUploadTokenExpiration:
initWithAssetTokenRequest:headers:
headers
setHeaders:
_assetTokenRequest
_transactionStateByRequestIDs
_headers
vettingToken
vettingEmail
vettingPhone
encryptedKey
baseToken
displayedHostname
_reconstructShortToken
_performAuthKitVerification
_forceFetchShareMetadata
_reconstructShareURL
_verifyOONParticipant
fullTokenFromBaseToken:privateToken:
shortSharingTokenFromFullToken:
setShortToken:
shortToken
validateVettingToken:vettingEmail:vettingPhone:accountAccessProvider:completionHandler:
verifyProgressShareMetadataFetchedBlock
shareURLWithShortToken:shareTitle:shareType:containerID:displayedHostname:
verifyProgressURLReconstructedBlock
outOfNetworkPrivateKey
invitedProtectionData
shortSharingTokenFromData:
verifyCompletionBlock
_verifyProgressURLReconstructedBlock
_verifyProgressShareMetadataFetchedBlock
_verifyCompletionBlock
_vettingToken
_vettingEmail
_vettingPhone
_encryptedKey
_baseToken
_displayedHostname
_shortToken
decodeObjectOfClass:forKey:
decodeIntegerForKey:
encodeObject:forKey:
encodeInteger:forKey:
usePreauth
explicitBaseURL
functionName
setFunctionName:
serializedParameters
setSerializedParameters:
setSerializationFormat:
setUserId:
setDatabaseEnvironment:
setDeviceId:
setDatabaseType:
setRequestContext:
setUseTls:
addClientConfig:
inputStreamWithData:
serializedResultsCallback
serializedResult
initWithServiceName:functionName:serializedParameters:explicitBaseURL:
setSerializedResultsCallback:
setServiceName:
setExplicitBaseURL:
_serializedResultsCallback
_serviceName
_functionName
_serializedParameters
_explicitBaseURL
setProtectedCloudComputeMetadata:
setAttestationRequest:
hasServiceName
hasFunctionName
hasSerializedParameters
hasProtectedCloudComputeMetadata
hasAttestationRequest
protectedCloudComputeMetadata
attestationRequest
_attestationRequest
_protectedCloudComputeMetadata
setLastMissingManateeIdentityErrorDate:
setUserPurge:
setHasUserPurge:
hasUserPurge
hasLastMissingManateeIdentityErrorDate
userPurge
lastMissingManateeIdentityErrorDate
_lastMissingManateeIdentityErrorDate
_userPurge
setQueryRetrieveRequest:
queryRetrieveRequest
setQuery:
pRecordZoneIdentifierFromRecordZoneID:
addFields:
limit
setLimit:
desiredAssetKeys
setAllAssets:
hasQueryRetrieveResponse
queryRetrieveResponse
queryResults
hasRecord
record
setRecord:
hasIdentifier
setEtag:
hasErrorDescription
recordsParsedBlock
queryResponses
setQueryResponses:
recordResponses
setRecordResponses:
_queryResponses
_limit
_desiredAssetKeys
_recordsParsedBlock
_recordResponses
_initWithCacheDir:
dbFileName
setObjectClassPrefix:
cacheQueue
CKNilIfLengthZero
unarchivedObjectOfClass:fromData:error:
sharedLogger
logOperationCombinedMetrics:forOperationID:operationType:operationGroupID:operationGroupName:operationGroupQuantity:operationQualityOfService:appContainerTuple:
selectFrom:where:bindings:orderBy:limit:block:
insertOrReplaceInto:values:
addOperationCombinedMetrics:forOperationID:operationType:operationGroupID:operationGroupName:operationGroupQuantity:operationQualityOfService:appContainerTuple:
setCacheQueue:
_cacheQueue
initWithTrackingID:
stopTrackingItems:
startTrackingItems:
cancelTokens
initWithPackage:trackProgress:
setManifestAsset:
setSectionAssets:
manifestAsset
sectionAssets
itemIndices
setItemIndices:
sectionIndices
setSectionIndices:
progressTracker
setProgressTracker:
setCancelTokens:
_package
_manifestAsset
_sectionAssets
_itemIndices
_sectionIndices
_progressTracker
_MMCSRequestOptions
_group
_cancelTokens
packageIndexSets
assetsToDownloadInMemory
assetURLInfosToFillOut
MMCSItemsToDownload
progress
finished
removeAllCancelTokens
_prepareForDownload
_download
_postProcess
fileURL
trackingUUID
setFileURL:
downloadPreparationBlock
downloadProgressBlock
arrayIndex
downloadCommandBlock
downloadCompletionBlock
constructedAssetDownloadURLTemplate
_canonicalizeTemplateURL:
percentEncodedPath
percentEncodedQuery
keyOrErrorForHostname
assetKey
publicKey
_expandTemplateURL:fieldValues:
setConstructedAssetDownloadURL:
constructedAssetDownloadURL
authToken
isValidV2Signature:
zeroSizeFileSignature
_tryToFillInTheDerivativeTemplateWithAsset:
trackDownloadedData:signature:error:
setUUID:
_didDownloadAsset:error:
setDownloaded:
_didPrepareAsset:
_didMakeProgressForAsset:progress:
initWithAsset:
setPaddedFileSize:
setPackage:
_didCommandForAsset:command:
setMMCSItemsToDownloadInMemory:
setMMCSItemsToDownload:
setDownloadTasksByPackages:
_removeUntrackedMMCSItems:
downloadTasksByPackages
inMemoryDownloadLooksOkay
updateProgressWithItem:progress:
_collectMetricsFromMMCSOperationMetrics:
allItemGroups
setFinished:
_didDownloadMMCSItem:inMemory:error:
sectionItems
objectEnumerator
nextObject
packageIndex
updateItemsAtIndexes:fileURLs:
_didDownloadMMCSSectionItem:task:error:
sectionAtIndex:
itemAtIndex:
sectionIndex
index
initWithPackage:
offset
setOffset:
setPackageIndex:
enumerateIndexesUsingBlock:
setSectionItems:
trackCachedButNotRegisteredMMCSItems:error:
setProgress:
_didMakeProgressForMMCSSectionItem:task:
_collectMetricsFromCompletedItemGroup:
_didDownloadMMCSSectionItems:task:error:
getSectionItem:operation:options:progress:completionHandler:
addCancelToken:withOperation:
removeCancelToken:
_downloadPackageSectionsWithSectionEnumerator:task:completionBlock:
_downloadPackageSectionAtIndex:task:completionBlock:
readContentsOfFile:intoPackage:error:
itemCount
sectionCount
initWithIndexesInRange:
addIndex:
initWithOperation:
setZoneNames:
downloaded
containsIndex:
maxPackageDownloadsPerBatch
removeObjectsInArray:
_downloadPackageSectionsWithPendingTasks:downloadingTasks:completedTasks:
_downloadPackageSectionsWithTask:completionBlock:
MMCSItemsToDownloadInMemory
_downloadMMCSItems:downloadTasksByPackages:shouldFetchAssetContentInMemory:
maxPackageDownloadsPerBatchWithDefaultValue:
setMaxPackageDownloadsPerBatch:
initWithItems:
_didMakeProgressForMMCSItem:inMemory:
_collectMetricsFromCompletedItemGroupSet:
_didDownloadMMCSItems:inMemory:error:
getItemGroupSet:operation:shouldFetchAssetContentInMemory:options:progress:command:completionHandler:
fillInDownloadURLsForAssetWithFieldName:fileName:recordPCS:pcsManager:useEncryption:useClearAssetEncryption:outError:
urlFilledOutBlock
setDownloadPreparationBlock:
setDownloadProgressBlock:
setDownloadCommandBlock:
setDownloadCompletionBlock:
setUrlFilledOutBlock:
_didCommandForMMCSItem:command:
setKeyOrErrorForHostname:
setPackageIndexSets:
setAssetsToDownloadInMemory:
setAssetURLInfosToFillOut:
_downloadPreparationBlock
_downloadProgressBlock
_downloadCommandBlock
_downloadCompletionBlock
_urlFilledOutBlock
_keyOrErrorForHostname
_packageIndexSets
_assetsToDownloadInMemory
_assetURLInfosToFillOut
_MMCSItemsToDownload
_MMCSItemsToDownloadInMemory
_downloadTasksByPackages
_maxPackageDownloadsPerBatch
certData
operationClassName
recentErrorsByDate
aggregateCKMetrics
aggregateMMCSMetrics
setQueueing:
setExecuting:
_trimmedError:
initWithDomain:code:userInfo:
_addMetrics:toAggregate:
savedErrorCount
distantFuture
addEntriesFromDictionary:
merge:
_operationClassName
_recentErrorsByDate
_operationCount
_aggregateCKMetrics
_aggregateMMCSMetrics
addValue:
setRange:
valuesCount
clearValues
valueAtIndex:
valueType
hasRange
range
values
setValues:
_range
_values
setQuotaAvailable:
setQuotaFetchedBlock:
quotaAvailable
_quotaAvailable
addRootRecordDesiredKeys:
setShortTokenHash:
rootRecordDesiredKeysCount
clearRootRecordDesiredKeys
rootRecordDesiredKeysAtIndex:
rootRecordDesiredKeysType
hasRoutingKey
hasShortTokenHash
setForceFetch:
setHasForceFetch:
hasForceFetch
setHasShouldFetchRootRecord:
hasShouldFetchRootRecord
shortTokenHash
forceFetch
setRootRecordDesiredKeys:
_rootRecordDesiredKeys
_shortTokenHash
_forceFetch
setAssetZoneKey:
setAssetRecords:
assetRecordsByRecordID
setAssetRecordsByRecordID:
_assetZoneKey
_assetRecords
_assetRecordsByRecordID
message
uuid
setUuid:
componentName
componentVersion
componentID
relatedRadar
_message
_uuid
_componentName
_componentVersion
_componentID
_relatedRadar
initWithSuiteName:
alertQueue
lastPromptDateByMessageHash
_hashForMessage:
userDefaults
URLQueryAllowedCharacterSet
stringByAddingPercentEncodingWithAllowedCharacters:
openURL:configuration:completionHandler:
_lastPromptDateForMessage:
minTTRPromptInterval
_notePromptAttemptForMessage:
_launchTTRWithRequest:
_lockedTriggerTapToRadarWithRequest:
setAlertQueue:
setUserDefaults:
setLastPromptDateByMessageHash:
_alertQueue
_userDefaults
_lastPromptDateByMessageHash
clearFields
writeData:forTag:
_inflateFieldsFromData:
fieldData
fieldForKey:
recordFromData:
emptyFieldWithKey:
fieldValueTypeFromEncryptedDataObject:isInList:
fieldValueTypeFromObject:
objectIsAnEncryptedType:
encryptedFieldValueOfType:withObject:
fieldValueOfType:withObject:forCache:
fieldValueFromObject:forCache:
setIsEncrypted:
setBytesValue:
fieldValueFromObject:
addListValue:
setDoubleValue:
setDateValue:
dateValue
setTime:
setStringValue:
pReferenceFromReference:error:
setReferenceValue:
longLongValue
setSignedValue:
pAssetFromAsset:
setAssetValue:
pPackageFromPackage:
setPackageValue:
setLatitude:
setLongitude:
horizontalAccuracy
setHorizontalAccuracy:
altitude
setAltitude:
verticalAccuracy
setVerticalAccuracy:
course
setCourse:
speed
setSpeed:
timestamp
setTimestamp:
setLocationValue:
pStreamingAssetFromStreamingAsset:forCache:
setStreamingAssetValue:
bytesValue
isEncrypted
encryptedObjectRepresentationFromFieldValue:
listValues
objectRepresentationFromFieldValue:
setArrayIndex:
time
dateWithTimeIntervalSinceReferenceDate:
signedValue
locationValue
latitude
longitude
initWithCoordinate:altitude:horizontalAccuracy:verticalAccuracy:course:speed:timestamp:
referenceValue
referenceFromPReference:error:
assetValue
assetFromPAsset:error:
packageValue
packageFromPPackage:error:
streamingAssetValue
streamingAssetFromPStreamingAsset:error:
pFieldActionWithLocation:length:values:
addAction:
pFieldWithKey:value:forCache:
setIndex:
setIsReversed:
setPosition:
setInsertAfter:
setInsertIntoList:
setLeft:
setRight:
setReplaceListRange:
setDeleteListRange:
fieldValueOfType:withObject:
locationFieldValueWithLatitude:longitude:
pFieldWithKey:value:
initWithDelegate:
performWithDelegate:
setPersonaID:
_delegate
_systemMayNowBeReady
availabilityQueue
watcherWrappers
setAvailabilityState:
_notifyWatchersOfStateChange
systemIsAvailable
setWatcherWrappers:
setAvailabilityQueue:
_availabilityState
_watcherWrappers
_availabilityQueue
setShareVettingInitiateRequest:
shareRecordID
pShareIdentifierFromRecordID:
shareVettingInitiateRequest
setShareId:
setEncryptedKey:
setParticipantId:
vettingInitiationRequestCompletionBlock
hasShareVettingInitiateResponse
shareVettingInitiateResponse
hasVettingError
vettingError
initWithShareRecordID:encryptedKey:participantID:baseToken:
setVettingInitiationRequestCompletionBlock:
setShareRecordID:
setParticipantID:
_vettingInitiationRequestCompletionBlock
_shareRecordID
_participantID
initWithEnvironment:
initWithEnvironmentName:namedDelegatePort:queue:
publicToken
notificationWithName:object:userInfo:
postNotification:
completionBlocks
sharedConnectionForAPSEnvironmentString:
getToken:
connection:didReceivePublicToken:
connection:didChangeConnectedStatus:
connectionDidReconnect:
apsConnection
setApsConnection:
setCompletionBlocks:
_apsEnvironmentString
_apsConnection
_completionBlocks
CKLogErrorWithCode:format:
setLenient:
systemTimeZone
setTimeZone:
ck_dateFormatterWithString:
dateFromString:
ck_dateWithNaturalLanguageString:
addCryptoSessions:
cryptoSessionsCount
clearCryptoSessions
cryptoSessionsAtIndex:
cryptoSessionsType
cryptoSessions
setCryptoSessions:
_cryptoSessions
requireUserIDs
setupBaseURL
setPath:
CKPercentEscapedQueryString
setPercentEncodedQuery:
setContainerInfo:
CKFirstUrlForKeys:
containerInfo
databaseRPCURLWithCodeServicesURL:inEnvironment:
initWithContainerIdentifier:
setRequireUserIDs:
setContainerIdentifier:
_requireUserIDs
_containerIdentifier
_containerInfo
setUploadURL:
setReservedSize:
setHasReservedSize:
hasReservedSize
hasUploadURL
setUploadURLExpirationTimeSeconds:
setHasUploadURLExpirationTimeSeconds:
hasUploadURLExpirationTimeSeconds
reservedSize
uploadURL
uploadURLExpirationTimeSeconds
_reservedSize
_uploadURLExpirationTimeSeconds
_uploadURL
recordZonesToSave
recordZoneIDsToDelete
allowDefaultZoneSave
markZonesAsUserPurged
maxZoneSaveAttempts
dontFetchFromServer
_fetchPCSDataForZonesFromServer:
numZoneSaveAttempts
setNumZoneSaveAttempts:
_saveZonesToServer
_sychronizeUserKeyRegistryIfNeeded
zonesWaitingOnKeyRegistrySync
_sendErrorForFailedZones
setDidSynchronizeUserKeyRegistry:
retryableErrorsByZoneID
didSynchronizeUserKeyRegistry
saveCompletionBlock
recordZonesByZoneID
setCapabilities:
setPCSData:forFetchedZoneID:
setZonePCS:
deleteCompletionBlock
initWithRecordZonesToSave:recordZoneIDsToDelete:
setMarkZonesAsUserPurged:
_handleRecordZoneSaved:responseCode:serverCapabilities:
_handleRecordZoneDeleted:responseCode:
setRecordZoneModifiedBlock:
previousProtectionEtag
_createNewPCSForZone:completionHandler:
_fetchPCSDataForZone:fromServer:
_checkAndPrepareZones
setRecordZoneIDsToDelete:
setRecordZonesByZoneID:
setRetryableErrorsByZoneID:
setZonesWaitingOnKeyRegistrySync:
_allowDefaultZoneSave
_markZonesAsUserPurged
_dontFetchFromServer
_didSynchronizeUserKeyRegistry
_numZoneSaveAttempts
_saveCompletionBlock
_deleteCompletionBlock
_recordZonesToSave
_recordZoneIDsToDelete
_recordZonesByZoneID
_retryableErrorsByZoneID
_maxZoneSaveAttempts
_zonesWaitingOnKeyRegistrySync
childAccounts
childAccountsWithAccountTypeIdentifier:
ck_identifier
accountProperties
dataclassProperties
ck_accountProperties
ck_cloudKitAccount
ck_dataclassProperties
ck_personaIdentifier
addProtectionInfoKeysToRemove:
setEncryptedZoneishLastRollDate:
setStableUrl:
protectionInfoKeysToRemovesCount
clearProtectionInfoKeysToRemoves
protectionInfoKeysToRemoveAtIndex:
protectionInfoKeysToRemoveType
hasEncryptedZoneishLastRollDate
hasStableUrl
hasShareId
encryptedZoneishLastRollDate
stableUrl
shareId
protectionInfoKeysToRemoves
setProtectionInfoKeysToRemoves:
_encryptedZoneishLastRollDate
_protectionInfoKeysToRemoves
_shareId
_stableUrl
initWithUUIDBytes:
initWithVolumeUUID:deviceID:mountToPath:
_volumeForDisk:mountToPath:error:
createVolumeForDevice:error:
volumeUUID
existingVolumeForDevice:
invalidateVolume:
startVolumes
shutdownVolumes
deviceIDForVolumeUUID:
volumeUUIDForDeviceID:
UUIDString
setFieldId:
rangesCount
clearRanges
rangeAtIndex:
rangeType
hasFieldId
fieldId
ranges
setRanges:
_fieldId
_ranges
setCorporateSharingEnabled:
setHasCorporateSharingEnabled:
hasCorporateSharingEnabled
setLastWebActivityUTCMills:
setHasLastWebActivityUTCMills:
hasLastWebActivityUTCMills
corporateSharingEnabled
lastWebActivityUTCMills
_lastWebActivityUTCMills
_corporateSharingEnabled
addUserInfo:
setDomain:
userInfosCount
clearUserInfos
userInfoAtIndex:
userInfoType
hasDomain
userInfos
setUserInfos:
_domain
_userInfos
setToken:
setAsset:
hasToken
hasAsset
setTokenExpiration:
setHasTokenExpiration:
hasTokenExpiration
_tokenExpiration
_asset
_token
hasPosition
setHasInsertAfter:
hasInsertAfter
position
insertAfter
_position
_insertAfter
lookupInfos
setRecordResolveTokenRequest:
recordResolveTokenRequest
rootRecordDesiredKeySet
arrayWithArray:
lookupInfosByRequestID
hasRecordResolveTokenResponse
recordResolveTokenResponse
hasParticipantType
participantType
setParticipantRole:
hasParticipantState
participantState
setParticipantStatus:
hasParticipantPermission
setParticipantPermission:
setProtectedFullToken:
rootRecordType
setRootRecordType:
hasOwnerParticipant
ownerParticipant
userId
setOverriddenContainerScopedUserID:
setShare:
setRootRecordID:
setSharedItemHierarchyIDs:
setRootRecord:
hasCallerParticipant
callerParticipant
shareParticipantFromPParticipant:error:
setCallingParticipant:
setIsCurrentUser:
setOwnerIdentity:
shareInfo
potentialMatchsCount
potentialMatchs
setOutOfNetworkMatches:
recordZoneFromPRecordZone:error:
setSharedZone:
tokenResolveBlock
setLookupInfos:
setLookupInfosByRequestID:
_rootRecordDesiredKeySet
_tokenResolveBlock
_lookupInfos
_lookupInfosByRequestID
_shortSharingTokenHashData
setSimulatorMessagesOnly:
simulatorMessagesOnly
setProcessName:
processNamesByPath
filter
matchesEvent:
setSimulatorOnly:
simulatorOnly
_processNameForPath:
_handleEvent:
colorOutput
setColorOutput:
setFilter:
formatter
setProcessNamesByPath:
_colorOutput
_filter
_formatter
_processNamesByPath
processImagePath
senderImagePath
threadID
_colorString:withForeground:
activityID
parentActivityID
eventType
messageType
processID
hasHeaderKey
hasHeaderValue
setKey:
hasKey
_key
primaryAccountInStore:
accountWithIdentifier:inStore:
accountPropertyOverrides
overridesByDataclass
fakeAccountWithEmail:password:propertyOverrides:overridesByDataclass:
sharedAccountStore
backingAccount
username
formattedUsernameFromUsername:
personaIdentifier
_userCloudDBURLisInCarryPartition
accountPropertiesForDataclass:
haveWarnedAboutServerPreferredPushEnvironment
setHaveWarnedAboutServerPreferredPushEnvironment:
updateAccountPropertiesAndSaveAccountInStore:completionHandler:
globalAuthTokenQueue
authTokenQueue
authTokenCallbackQueue
canRenew
renewAuthTokenInStore:withOptions:completionHandler:
setLastFailedCloudKitAuthToken:
_lockedCloudKitAuthTokenWithAccessProvider:error:
_lockedRenewTokenWithReason:shouldForce:accountAccessProvider:tokenFetchBlock:completionHandler:
cloudKitAuthTokenWithError:
lastFailedCloudKitAuthToken
setLastFailediCloudAuthToken:
_lockediCloudAuthTokenWithAccessProvider:error:
iCloudAuthTokenWithError:
lastFailediCloudAuthToken
privateCodeServiceURLPreferringGateway:
validateVettingToken:vettingEmail:vettingPhone:completionHandler:
sharingURLHostname
isiCloudDevEnvironmentAccount
setAccountWantsFlowControl:
setAccountStore:
setIsAnonymousAccount:
setAuthTokenCallbackQueue:
_isUnitTestingAccount
_accountWantsPushRegistration
_accountWantsFlowControl
_isAnonymousAccount
_haveWarnedAboutServerPreferredPushEnvironment
_fakeAccountInfo
_accountStore
_backingAccount
_authTokenCallbackQueue
_lastFailedCloudKitAuthToken
_lastFailediCloudAuthToken
whitespaceAndNewlineCharacterSet
requestID
sequenceNumber
logTrafficToTextFile
setSequenceNumber:
logTraffic
shouldLog
setUrl:
setMethod:
setRequestClassName:
_logObject:ofType:
setStatus:
setRequestID:
_sequenceNumber
_requestID
setOplockFailure:
setUniqueFieldFailure:
setHasType:
typeAsString:
StringAsType:
_oplockFailure
_type
_uniqueFieldFailure
hasOplockFailure
oplockFailure
hasUniqueFieldFailure
uniqueFieldFailure
createBoundInputStream:outputStream:bufferSize:
_tearDownOutputStream
setHaveFinishedStreaming:
bufferSize
haveFinishedCompression
setHaveFinishedCompression:
appendBytes:length:
shouldCompress
_compressBodyData:shouldFlush:
_streamNextObject:
write:maxLength:
appendData:
_dataForMessage:
logRequestObjectBlock
_prepareObjectForStreaming:
_writeDataToStream:
haveFinishedStreaming
_finishStreaming:
streamError
stream:handleEvent:
setShouldCompress:
binaryLogFileHandle
setBinaryLogFileHandle:
hasInitedCompression
setHasInitedCompression:
_allObjects
_curData
_curDataPos
_inputStream
_outputStream
_zlibStream
_haveFlushedZlib
_dispatchQueue
_shouldCompress
_hasInitedCompression
_haveFinishedCompression
_haveFinishedStreaming
_bufferSize
_logRequestObjectBlock
_binaryLogFileHandle
parseQueue
parserData
setParserData:
propertyListWithData:options:format:error:
setParserError:
objectParsedBlock
parserError
setIsReaderReadFrom:
readBytesOfInMemoryAssetContentWithProxy:offset:length:error:
getBytes:length:
setAssetId:
setSaveAssetRequest:
setSaveAssetResponse:
setRetrieveAssetResponse:
hasAssetId
hasSaveAssetRequest
hasSaveAssetResponse
hasRetrieveAssetResponse
assetId
saveAssetRequest
saveAssetResponse
retrieveAssetResponse
_assetId
_retrieveAssetResponse
_saveAssetRequest
_saveAssetResponse
setTargetZone:
setCurrentServerContinuationToken:
setClientChangeToken:
setZonePcsModificationTime:
setZonePcsModificationDevice:
hasTargetZone
hasCurrentServerContinuationToken
hasClientChangeToken
setDeviceCount:
setHasDeviceCount:
hasDeviceCount
setAssetQuotaUsage:
setHasAssetQuotaUsage:
hasAssetQuotaUsage
setMetadataQuotaUsage:
setHasMetadataQuotaUsage:
hasMetadataQuotaUsage
hasCapabilities
setZoneishPcsNeedsRolled:
setHasZoneishPcsNeedsRolled:
hasZoneishPcsNeedsRolled
setZoneKeyRollAllowed:
setHasZoneKeyRollAllowed:
hasZoneKeyRollAllowed
hasZonePcsModificationTime
hasZonePcsModificationDevice
targetZone
currentServerContinuationToken
clientChangeToken
deviceCount
assetQuotaUsage
metadataQuotaUsage
capabilities
zoneishPcsNeedsRolled
zoneKeyRollAllowed
zonePcsModificationTime
zonePcsModificationDevice
_assetQuotaUsage
_metadataQuotaUsage
_capabilities
_clientChangeToken
_currentServerContinuationToken
_deviceCount
_targetZone
_zonePcsModificationDevice
_zonePcsModificationTime
_zoneKeyRollAllowed
_zoneishPcsNeedsRolled
addSortedBy:
setAlias:
sortedBysCount
clearSortedBys
sortedByAtIndex:
setOBSOLETEPcsServiceType:
sortedByType
hasAlias
hasOBSOLETEPcsServiceType
publicKeyRequested
setPublicKeyRequested:
setHasPublicKeyRequested:
hasPublicKeyRequested
alias
sortedBys
setSortedBys:
oBSOLETEPcsServiceType
_alias
_oBSOLETEPcsServiceType
_sortedBys
_publicKeyRequested
storageGroupingPolicy
uploadRank
compareToRecordID:
CKSortedForUpload
assetsToUpload
setAssetsToUpload:
assetUUIDToExpectedProperties
setAssetUUIDToExpectedProperties:
packageUUIDToExpectedProperties
setPackageUUIDToExpectedProperties:
temporary
setTemporary:
_temporary
_assetsToUpload
_assetUUIDToExpectedProperties
_packageUUIDToExpectedProperties
_prepareForUpload
_fetchUploadTokens
_upload
openedPackages
setOpenedPackages:
uploadPreparationBlock
uploadProgressBlock
uploaded
uploadCompletionBlock
getMaxChunkCountForSection
itemEnumerator
UUID
setTrackingUUID:
fileID
setFileID:
generationID
setGenerationID:
itemTypeHint
setItemTypeHint:
registerItemGroupSet:operation:options:completionHandler:
chunkCount
dataByFinishingSignature
initWithIndex:signature:size:
addSection:
updateWithData:
updateItemAtIndex:withSignature:size:itemID:sectionIndex:
_didUploadAsset:error:
_didUploadMMCSItems:error:
isPackageSectionBatch
uploadTasksByPackages
isRereferencedAssetUpload
setupForGetChunkKeysWithAsset:
clientOpenedFileHandle
shouldReadAssetContentUsingClientProxy
getFileSizeWithProxy:error:
setUploaded:
_openPackage:
_planSectionsForPackage:error:
fileURLWithPath:isDirectory:
setShouldReadRawEncryptedData:
setAssetKey:
writePackage:toFile:error:
setMMCSManifestItem:
setPackageManifests:
setMMCSSectionItems:
_didGetChunkKeysForAssetBatch:error:
getChunkKeysItemGroupSet:operation:options:completionHandler:
_didPrepareAssetBatch:error:
_failAllItemsInAssetBatch:error:
atomic
_didFetchUploadTokensForAssetTokenRequest:error:newError:
_didUploadMMCSSectionItem:task:error:
MMCSSectionItems
itemEnumeratorForSectionAtIndex:
setPutPackageSectionIdentifier:
_didUploadMMCSSectionItems:task:error:
putSectionItem:operation:options:progress:completionHandler:
_uploadPackageSectionsWithEnumerator:task:completionBlock:
_uploadPackageSection:task:completionBlock:
_closePackage:
maxPackageUploadsPerBatch
_uploadPackageSectionsWithPendingTasks:uploadingTasks:completedTasks:
_uploadPackageSectionsWithTask:completionBlock:
uploadReceiptExpiration
setUploadReceiptExpiration:
_didUploadMMCSItem:error:
MMCSManifestItem
_initBare
setRecordKey:
maxPackageUploadsPerBatchWithDefaultValue:
setMaxPackageUploadsPerBatch:
_didUploadPackageWithTask:
_didMakeProgressForMMCSItem:
putItemGroupSet:operation:options:progress:completionHandler:
_didPutChunkKeysForAssetBatch:error:
putChunkKeysItemGroupSet:operation:options:completionHandler:
packageManifests
stopTrackingAssetHandlesByItemIDs:
_closeAllPackages
_removePackageManifests
setUploadPreparationBlock:
setUploadProgressBlock:
_fetchAssetRereferenceRecords
setAtomic:
setUploadTasksByPackages:
assetRequestPlanner
setAssetRequestPlanner:
_atomic
_uploadPreparationBlock
_uploadProgressBlock
_uploadCompletionBlock
_uploadTasksByPackages
_packageManifests
_openedPackages
_maxPackageUploadsPerBatch
_assetRequestPlanner
setTimeStatistics:
setServerFields:
hasEtag
hasTimeStatistics
hasServerFields
timeStatistics
serverFields
_etag
_serverFields
_timeStatistics
setBounds:
hasBounds
bounds
_bounds
setSuccess:
setHasSuccess:
hasSuccess
success
_success
recordIDs
fileNamesByAssetFieldNames
requestedTTL
URLOptions
_fetchPCSForRecords
assetPublishedBlock
fetchedRecordsByID
_dispatchAssetURLsForRecord:recordID:pcs:error:
setAssetFieldNamesToPublishURLs:
setRequestedTTL:
setURLOptions:
setFetchRecordsOperation:
fetchRecordsOperation
setFileNamesByAssetFieldNames:
setFetchedRecordsByID:
_assetPublishedBlock
_recordIDs
_fileNamesByAssetFieldNames
_requestedTTL
_URLOptions
_fetchRecordsOperation
_fetchedRecordsByID
addFieldsToDeleteIfExistOnMerge:
addConflictLosersToResolve:
fieldsToDeleteIfExistOnMergesCount
clearFieldsToDeleteIfExistOnMerges
fieldsToDeleteIfExistOnMergeAtIndex:
setConflictLoserUpdate:
setRecordProtectionInfoTag:
conflictLosersToResolvesCount
clearConflictLosersToResolves
conflictLosersToResolveAtIndex:
setShareEtag:
setShareIDUpdate:
setParentChainProtectionInfoTag:
fieldsToDeleteIfExistOnMergeType
conflictLosersToResolveType
setMerge:
setHasMerge:
hasMerge
hasConflictLoserUpdate
saveSemantics
setSaveSemantics:
setHasSaveSemantics:
hasSaveSemantics
saveSemanticsAsString:
StringAsSaveSemantics:
hasRecordProtectionInfoTag
hasShareEtag
hasShareIDUpdate
hasParentChainProtectionInfoTag
merge
fieldsToDeleteIfExistOnMerges
setFieldsToDeleteIfExistOnMerges:
conflictLoserUpdate
recordProtectionInfoTag
conflictLosersToResolves
setConflictLosersToResolves:
shareEtag
shareIDUpdate
parentChainProtectionInfoTag
_conflictLoserUpdate
_conflictLosersToResolves
_fieldsToDeleteIfExistOnMerges
_parentChainProtectionInfoTag
_record
_recordProtectionInfoTag
_saveSemantics
_shareEtag
_shareIDUpdate
_merge
_refreshHostname
maximumLengthOfBytesUsingEncoding:
_cachedHostname
_hostCallbackQueue
_hostNotificationToken
numberWithFloat:
addServiceIdentityKeyIDs:
setUserToken:
setUserIDContainerID:
serviceIdentityKeyIDsCount
clearServiceIdentityKeyIDs
serviceIdentityKeyIDsAtIndex:
serviceIdentityKeyIDsType
hasUserToken
hasApplicationBundle
hasApplicationVersion
setApplicationConfigVersion:
setHasApplicationConfigVersion:
hasApplicationConfigVersion
setGlobalConfigVersion:
setHasGlobalConfigVersion:
hasGlobalConfigVersion
hasDeviceIdentifier
hasDeviceSoftwareVersion
hasDeviceHardwareVersion
hasDeviceLibraryName
hasDeviceLibraryVersion
hasDeviceFlowControlKey
setHasDeviceFlowControlBudget:
hasDeviceFlowControlBudget
setHasDeviceFlowControlBudgetCap:
hasDeviceFlowControlBudgetCap
setHasDeviceFlowControlRegeneration:
hasDeviceFlowControlRegeneration
setDeviceProtocolVersion:
setHasDeviceProtocolVersion:
hasDeviceProtocolVersion
hasLocale
hasMmcsProtocolVersion
hasDeviceAssignedName
hasDeviceHardwareID
targetDatabase
setHasTargetDatabase:
hasTargetDatabase
targetDatabaseAsString:
StringAsTargetDatabase:
hasUserIDContainerID
setHasIsolationLevel:
hasIsolationLevel
isolationLevelAsString:
StringAsIsolationLevel:
hasOperationGroupName
setHasOperationGroupQuantity:
hasOperationGroupQuantity
setHasDeviceSoftwareIsAppleInternal:
hasDeviceSoftwareIsAppleInternal
hasAssetAuthorizeGetRequestOptions
userToken
applicationBundle
applicationConfigVersion
globalConfigVersion
deviceSoftwareVersion
deviceHardwareVersion
deviceLibraryName
deviceLibraryVersion
deviceFlowControlKey
deviceFlowControlBudget
deviceFlowControlBudgetCap
deviceFlowControlRegeneration
deviceProtocolVersion
mmcsProtocolVersion
deviceAssignedName
deviceHardwareID
userIDContainerID
serviceIdentityKeyIDs
setServiceIdentityKeyIDs:
deviceSoftwareIsAppleInternal
_applicationConfigVersion
_deviceFlowControlBudget
_deviceFlowControlBudgetCap
_deviceProtocolVersion
_globalConfigVersion
_operationGroupQuantity
_applicationBundle
_assetAuthorizeGetRequestOptions
_deviceAssignedName
_deviceFlowControlKey
_deviceFlowControlRegeneration
_deviceHardwareID
_deviceHardwareVersion
_deviceIdentifier
_deviceLibraryName
_deviceLibraryVersion
_deviceSoftwareVersion
_isolationLevel
_locale
_mmcsProtocolVersion
_operationGroupName
_serviceIdentityKeyIDs
_targetDatabase
_userIDContainerID
_userToken
_deviceSoftwareIsAppleInternal
addAssetFields:
assetFieldsCount
clearAssetFields
assetFieldsAtIndex:
assetFieldsType
hasRecordId
_assetFields
_recordId
setResult:
setZoneSaveResponse:
setZoneRetrieveResponse:
setZoneDeleteResponse:
setZoneRetrieveChangesResponse:
setRecordSaveResponse:
setRecordRetrieveResponse:
setRecordRetrieveVersionsResponse:
setRecordRetrieveChangesResponse:
setRecordDeleteResponse:
setRecordResolveTokenResponse:
setFetchArchivedRecordsResponse:
setQueryRetrieveResponse:
setAssetUploadTokenRetrieveResponse:
setDeleteContainerResponse:
setUserAvailableQuotaResponse:
setBundlesForContainerResponse:
setWebAuthTokenRetrieveResponse:
setUpdateMissingAssetStatusResponse:
setSubscriptionCreateResponse:
setSubscriptionRetrieveResponse:
setSubscriptionDeleteResponse:
setUserRetrieveResponse:
setUserQueryResponse:
setUserPrivacySettingsRetrieveResponse:
setUserPrivacySettingsUpdateResponse:
setUserPrivacySettingsResetResponse:
setUserPrivacySettingsBatchLookupResponse:
setShareAcceptResponse:
setShareVettingInitiateResponse:
setTokenRegistrationResponse:
setTokenUnregistrationResponse:
setSetBadgeCountResponse:
setNotificationSyncResponse:
setNotificationMarkReadResponse:
setArchiveRecordsResponse:
setMarkAssetBrokenResponse:
setFunctionInvokeResponse:
setOperationCost:
setHasOperationCost:
hasResponse
hasHeader
_archiveRecordsResponse
_assetUploadTokenRetrieveResponse
_bundlesForContainerResponse
_deleteContainerResponse
_fetchArchivedRecordsResponse
_functionInvokeResponse
_header
_markAssetBrokenResponse
_notificationMarkReadResponse
_notificationSyncResponse
_operationCost
_queryRetrieveResponse
_recordDeleteResponse
_recordResolveTokenResponse
_recordRetrieveChangesResponse
_recordRetrieveResponse
_recordRetrieveVersionsResponse
_recordSaveResponse
_result
_setBadgeCountResponse
_shareAcceptResponse
_shareVettingInitiateResponse
_subscriptionCreateResponse
_subscriptionDeleteResponse
_subscriptionRetrieveResponse
_tokenRegistrationResponse
_tokenUnregistrationResponse
_updateMissingAssetStatusResponse
_userAvailableQuotaResponse
_userPrivacySettingsBatchLookupResponse
_userPrivacySettingsResetResponse
_userPrivacySettingsRetrieveResponse
_userPrivacySettingsUpdateResponse
_userQueryResponse
_userRetrieveResponse
_webAuthTokenRetrieveResponse
_zoneDeleteResponse
_zoneRetrieveChangesResponse
_zoneRetrieveResponse
_zoneSaveResponse
hasZoneSaveResponse
zoneSaveResponse
hasZoneRetrieveResponse
zoneRetrieveResponse
hasZoneDeleteResponse
zoneDeleteResponse
hasZoneRetrieveChangesResponse
zoneRetrieveChangesResponse
hasRecordSaveResponse
recordSaveResponse
hasRecordRetrieveResponse
recordRetrieveResponse
hasRecordRetrieveVersionsResponse
recordRetrieveVersionsResponse
hasRecordRetrieveChangesResponse
recordRetrieveChangesResponse
hasRecordDeleteResponse
recordDeleteResponse
hasFetchArchivedRecordsResponse
fetchArchivedRecordsResponse
hasUserAvailableQuotaResponse
userAvailableQuotaResponse
hasUserRetrieveResponse
userRetrieveResponse
hasDeleteContainerResponse
deleteContainerResponse
hasBundlesForContainerResponse
bundlesForContainerResponse
hasWebAuthTokenRetrieveResponse
webAuthTokenRetrieveResponse
hasUpdateMissingAssetStatusResponse
updateMissingAssetStatusResponse
hasShareAcceptResponse
shareAcceptResponse
hasFunctionInvokeResponse
functionInvokeResponse
hasSubscriptionCreateResponse
subscriptionCreateResponse
hasSubscriptionRetrieveResponse
subscriptionRetrieveResponse
hasSubscriptionDeleteResponse
subscriptionDeleteResponse
hasArchiveRecordsResponse
archiveRecordsResponse
hasMarkAssetBrokenResponse
markAssetBrokenResponse
hasUserQueryResponse
userQueryResponse
hasUserPrivacySettingsUpdateResponse
userPrivacySettingsUpdateResponse
hasUserPrivacySettingsResetResponse
userPrivacySettingsResetResponse
hasUserPrivacySettingsBatchLookupResponse
userPrivacySettingsBatchLookupResponse
hasUserPrivacySettingsRetrieveResponse
userPrivacySettingsRetrieveResponse
hasTokenRegistrationResponse
tokenRegistrationResponse
hasTokenUnregistrationResponse
tokenUnregistrationResponse
hasSetBadgeCountResponse
setBadgeCountResponse
hasNotificationSyncResponse
notificationSyncResponse
hasNotificationMarkReadResponse
notificationMarkReadResponse
addRecordVersions:
recordVersionsCount
clearRecordVersions
recordVersionsAtIndex:
recordVersionsType
setIsDeleted:
setHasIsDeleted:
hasIsDeleted
isDeleted
recordVersions
setRecordVersions:
_recordVersions
_isDeleted
hasOperationUUID
setSynchronousMode:
setHasSynchronousMode:
hasSynchronousMode
setHasLast:
hasLast
synchronousMode
last
_operationUUID
_last
_synchronousMode
messageClass
curObjectLength
setCurObjectLength:
initWithBytesNoCopy:length:freeWhenDone:
_parseObjectFromData:rawData:
initWithBytes:length:
setTailParserData:
isParsing
setIsParsing:
tailParserData
_parseObjects:
_parsingStandaloneMessage
_isParsing
_messageClass
_tailParserData
_curObjectLength
subscriptionsToSave
subscriptionIDsToDelete
subscriptionID
_handleSubscriptionSaved:error:
subscriptionsByServerID
pSubscriptionFromSubscription:error:
setSubscriptionsToSave:
notificationInfo
subscriptionType
initWithSubscriptionsToSave:subscriptionIDsToDelete:
_handleSubscriptionSaved:responseCode:
_handleSubscriptionDeleted:responseCode:
setSubscriptionModifiedBlock:
setSubscriptionIDsToDelete:
setSubscriptionsByServerID:
_subscriptionsToSave
_subscriptionIDsToDelete
_subscriptionsByServerID
contentRequestHeadersCount
clearContentRequestHeaders
contentRequestHeadersAtIndex:
contentRequestHeadersType
setHasContentRequestAuthorizeGetOptions:
hasContentRequestAuthorizeGetOptions
contentRequestAuthorizeGetOptions
_contentRequestAuthorizeGetOptions
_contentRequestHeaders
setMinimumVersionEtag:
hasMinimumVersionEtag
minimumVersionEtag
_minimumVersionEtag
hasAssetFields
setHasRequestedTTL:
hasRequestedTTL
setAppQuote:
setAqeQuote:
setPckCertificate:
setRoutingToken:
hasAppQuote
hasAqeQuote
hasPckCertificate
hasRoutingToken
appQuote
aqeQuote
pckCertificate
routingToken
_appQuote
_aqeQuote
_pckCertificate
_routingToken
addBundleID:
bundleIDsCount
clearBundleIDs
bundleIDAtIndex:
bundleIDType
bundleIDs
setBundleIDs:
_bundleIDs
setZoneSaveRequest:
setZoneRetrieveRequest:
setZoneDeleteRequest:
setZoneRetrieveChangesRequest:
setRecordSaveRequest:
setRecordRetrieveRequest:
setRecordRetrieveVersionsRequest:
setRecordRetrieveChangesRequest:
setRecordDeleteRequest:
setFetchArchivedRecordsRequest:
setDeleteContainerRequest:
setUserAvailableQuotaRequest:
setBundlesForContainerRequest:
setWebAuthTokenRetrieveRequest:
setUpdateMissingAssetStatusRequest:
setSubscriptionCreateRequest:
setSubscriptionRetrieveRequest:
setSubscriptionDeleteRequest:
setUserRetrieveRequest:
setUserQueryRequest:
setUserPrivacySettingsRetrieveRequest:
setUserPrivacySettingsUpdateRequest:
setUserPrivacySettingsResetRequest:
setUserPrivacySettingsBatchLookupRequest:
setShareAcceptRequest:
setTokenRegistrationRequest:
setTokenUnregistrationRequest:
setSetBadgeCountRequest:
setNotificationSyncRequest:
setNotificationMarkReadRequest:
setArchiveRecordsRequest:
setMarkAssetBrokenRequest:
setFunctionInvokeRequest:
hasRequest
_archiveRecordsRequest
_assetUploadTokenRetrieveRequest
_bundlesForContainerRequest
_deleteContainerRequest
_fetchArchivedRecordsRequest
_functionInvokeRequest
_markAssetBrokenRequest
_notificationMarkReadRequest
_notificationSyncRequest
_queryRetrieveRequest
_recordDeleteRequest
_recordResolveTokenRequest
_recordRetrieveChangesRequest
_recordRetrieveRequest
_recordRetrieveVersionsRequest
_recordSaveRequest
_setBadgeCountRequest
_shareAcceptRequest
_shareVettingInitiateRequest
_subscriptionCreateRequest
_subscriptionDeleteRequest
_subscriptionRetrieveRequest
_tokenRegistrationRequest
_tokenUnregistrationRequest
_updateMissingAssetStatusRequest
_userAvailableQuotaRequest
_userPrivacySettingsBatchLookupRequest
_userPrivacySettingsResetRequest
_userPrivacySettingsRetrieveRequest
_userPrivacySettingsUpdateRequest
_userQueryRequest
_userRetrieveRequest
_webAuthTokenRetrieveRequest
_zoneDeleteRequest
_zoneRetrieveChangesRequest
_zoneRetrieveRequest
_zoneSaveRequest
hasShareVettingInitiateRequest
hasZoneSaveRequest
zoneSaveRequest
hasZoneRetrieveRequest
zoneRetrieveRequest
hasZoneDeleteRequest
zoneDeleteRequest
hasZoneRetrieveChangesRequest
zoneRetrieveChangesRequest
hasRecordSaveRequest
recordSaveRequest
hasRecordRetrieveRequest
recordRetrieveRequest
hasRecordRetrieveVersionsRequest
recordRetrieveVersionsRequest
hasRecordRetrieveChangesRequest
recordRetrieveChangesRequest
hasRecordDeleteRequest
recordDeleteRequest
hasRecordResolveTokenRequest
hasFetchArchivedRecordsRequest
fetchArchivedRecordsRequest
hasUserAvailableQuotaRequest
userAvailableQuotaRequest
hasUserRetrieveRequest
userRetrieveRequest
hasQueryRetrieveRequest
hasAssetUploadTokenRetrieveRequest
hasDeleteContainerRequest
deleteContainerRequest
hasBundlesForContainerRequest
bundlesForContainerRequest
hasWebAuthTokenRetrieveRequest
webAuthTokenRetrieveRequest
hasUpdateMissingAssetStatusRequest
updateMissingAssetStatusRequest
hasShareAcceptRequest
shareAcceptRequest
hasFunctionInvokeRequest
functionInvokeRequest
hasSubscriptionCreateRequest
subscriptionCreateRequest
hasSubscriptionRetrieveRequest
subscriptionRetrieveRequest
hasSubscriptionDeleteRequest
subscriptionDeleteRequest
hasArchiveRecordsRequest
archiveRecordsRequest
hasMarkAssetBrokenRequest
markAssetBrokenRequest
hasUserQueryRequest
userQueryRequest
hasUserPrivacySettingsUpdateRequest
userPrivacySettingsUpdateRequest
hasUserPrivacySettingsResetRequest
userPrivacySettingsResetRequest
hasUserPrivacySettingsBatchLookupRequest
userPrivacySettingsBatchLookupRequest
hasUserPrivacySettingsRetrieveRequest
userPrivacySettingsRetrieveRequest
hasTokenRegistrationRequest
tokenRegistrationRequest
hasTokenUnregistrationRequest
tokenUnregistrationRequest
hasSetBadgeCountRequest
setBadgeCountRequest
hasNotificationSyncRequest
notificationSyncRequest
hasNotificationMarkReadRequest
notificationMarkReadRequest
shouldFetchAssetContentInMemory
setShouldFetchAssetContentInMemory:
_shouldFetchAssetContentInMemory
setTokenRegistrationBody:
hasTokenRegistrationBody
tokenRegistrationBody
_tokenRegistrationBody
setVersion:
setHasVersion:
hasVersion
version
_version
address
participantVettingProgressBlock
_addSelfIdentityToShareMetadataPublicPCS:forShareWithURL:error:
publicProtectionData
setPublicPCSData:
setPublicPCSEtag:
_encryptedKeyDataWithShareMetadata:error:
_sendRequest:
_handleVettingInitiationProgress:
setAddress:
_participantVettingProgressBlock
_address
setSubscription:
subscription
subscriptionModifiedBlock
setClientError:
setErrorKey:
setErrorDescription:
subscriptionIDByRequestID
CKDPIdentifier_Subscription
setSubscriptionIDByRequestID:
_subscriptionModifiedBlock
_subscriptionIDByRequestID
setBundleIdentifier:
hasBundleIdentifier
apnsEnv
setApnsEnv:
setHasApnsEnv:
hasApnsEnv
apnsEnvAsString:
StringAsApnsEnv:
_apnsEnv
_bundleIdentifier
hasShare
_share
listValuesCount
clearListValues
listValueAtIndex:
listValueType
hasBytesValue
setHasSignedValue:
hasSignedValue
setHasDoubleValue:
hasDoubleValue
hasDateValue
hasStringValue
hasLocationValue
hasReferenceValue
hasAssetValue
hasPackageValue
hasStreamingAssetValue
setHasIsEncrypted:
hasIsEncrypted
setListValues:
_doubleValue
_signedValue
_assetValue
_bytesValue
_dateValue
_listValues
_locationValue
_packageValue
_referenceValue
_streamingAssetValue
_stringValue
_isEncrypted
setDownloadURL:
hasDownloadURL
setDownloadURLExpirationTimeSeconds:
setHasDownloadURLExpirationTimeSeconds:
hasDownloadURLExpirationTimeSeconds
downloadURL
downloadURLExpirationTimeSeconds
_downloadURLExpirationTimeSeconds
_downloadURL
setPublicKeyID:
setReference:
hasPublicKeyID
hasReference
publicKeyID
reference
_publicKeyID
_reference
setServerChangeToken:
hasServerChangeToken
setMaxChanges:
setHasMaxChanges:
hasMaxChanges
setWantsChanges:
setHasWantsChanges:
hasWantsChanges
serverChangeToken
maxChanges
wantsChanges
_maxChanges
_serverChangeToken
_wantsChanges
_checkZonePCS
_uploadRepairedZones
fixedZones
zonePCSRepairProgressBlock
pcsInfoByZoneID
setPcsError:
setPcsStatus:
setPcsDiagnosticString:
_checkPCSDataForZone:
pcsStatus
setWasRepaired:
setFixedZones:
setPcsInfoByZoneID:
_zonePCSRepairProgressBlock
_fixedZones
_pcsInfoByZoneID
setInt64Value:
setHasInt64Value:
hasInt64Value
setBoolValue:
setHasBoolValue:
hasBoolValue
int64Value
_int64Value
_boolValue
recordIDsToVersionETags
recordIDsToETags
desiredIndexedListKeys
requestedListFieldsForDesiredIndexedListKeys
addListField:
assetFieldNamesToPublishURLs
recordIDByRequestID
clientVersionETagMatch
recordCount
setRecordCount:
initWithRecordIDs:recordIDsToEtags:recordIDsToVersionETags:desiredKeys:
setDesiredIndexedListKeys:
setRecordIDsToETags:
setRecordIDsToVersionETags:
setRecordIDByRequestID:
_assetFieldNamesToPublishURLs
_desiredIndexedListKeys
_recordIDsToETags
_recordIDsToVersionETags
_recordCount
_recordIDByRequestID
_desiredKeys
setApiToken:
hasApiToken
setForceFetchToken:
setHasForceFetchToken:
hasForceFetchToken
apiToken
forceFetchToken
_apiToken
_forceFetchToken
setContainerScopedUserId:
hasContainerScopedUserId
containerScopedUserId
_containerScopedUserId
rangeOfString:
seqNum
dataString
initWithMessage:
_seqNum
_dataString
category
printQueue
requestDictionary
parseRequestArrayAndPrint:
indexOfObjectWithOptions:passingTest:
insertObject:atIndex:
initWithBase64EncodedString:options:
requestClassName
setString:
parserFromConfigurationMessage:
requestParsedBlock
_initWithUUID:requestMetadata:requestObjects:bodyStreamResetCount:responseMetadata:responseObjects:
setRequestParsedBlock:
setRequestDictionary:
setPrintQueue:
_requestParsedBlock
_requestDictionary
_printQueue
fileHandleWithStandardOutput
requestTime
CKLogToFileHandle:
requestMethod
requestURL
requestHeaders
bodyStreamResetCount
requestObjects
responseTime
responseStatus
responseObjects
shareParticipantFetchedBlock
_initWithUserIdentity:
userRecordID
setIsOrgAdminUser:
setPendingRequest:
_handleFetchedInfo:withIdentity:error:
pendingRequest
setPerLookupInfoProgressBlock:
setLookupCompletionBlock:
scheduleRequest:forOperation:
_fetchIdentities
_shareParticipantFetchedBlock
_pendingRequest
setSelfAddedPcs:
setPublicKey:
hasSelfAddedPcs
hasPublicKey
hasParticipantId
publicKeyVersion
setPublicKeyVersion:
setHasPublicKeyVersion:
hasPublicKeyVersion
setHasAcceptedInProcess:
hasAcceptedInProcess
selfAddedPcs
participantId
_participantId
_publicKey
_publicKeyVersion
_selfAddedPcs
_acceptedInProcess
zoneIDToRecordIDs
recordZoneIDByRequestID
recordArchivedBlock
initWithRecordIDsToArchive:
setZoneIDToRecordIDs:
setRecordZoneIDByRequestID:
_recordArchivedBlock
_zoneIDToRecordIDs
_recordZoneIDByRequestID
setFieldValue:
hasFieldValue
fieldValue
_fieldValue
cacheOperationCombinedMetrics:forOperationID:operationType:operationGroupID:operationGroupName:operationGroupQuantity:operationQualityOfService:appContainerTuple:
registerPowerLoggingXPCActivity
addTypes:
addFilters:
addSorts:
typesCount
clearTypes
typesAtIndex:
filtersCount
clearFilters
filtersAtIndex:
sortsCount
clearSorts
sortsAtIndex:
typesType
filtersType
sortsType
setDistinct:
setHasDistinct:
hasDistinct
queryOperator
setQueryOperator:
setHasQueryOperator:
hasQueryOperator
queryOperatorAsString:
StringAsQueryOperator:
types
setTypes:
filters
setFilters:
sorts
setSorts:
distinct
_filters
_queryOperator
_sorts
_types
_distinct
hasErrorKey
errorKey
extensionName
hasExtensionPayload
extensionPayload
typeCode
auxiliaryError
addResponseHeaders:
setResponseUUID:
setAuthGetResponseBody:
responseHeadersCount
clearResponseHeaders
responseHeadersAtIndex:
responseHeadersType
hasResponseUUID
hasAuthGetResponseBody
responseUUID
authGetResponseBody
setResponseHeaders:
_authGetResponseBody
_responseHeaders
_responseUUID
setExtensionName:
setExtensionPayload:
hasExtensionName
setTypeCode:
setHasTypeCode:
_extensionName
_extensionPayload
_typeCode
fileHandle
willOpenItemReaderWriter:error:
openWithProxy:error:
setFileHandle:
didOpenItemReaderWriter:result:error:
closeFile
getFileMetadataWithProxy:fileHandle:error:
unsignedLongValue
modTimeInSeconds
fileDescriptor
_fileHandle
addConflictLoserEtags:
addPluginFields:
addTombstonedPublicKeyIDs:
setCreatedBy:
fieldsCount
fieldsAtIndex:
setModifiedBy:
conflictLoserEtagsCount
clearConflictLoserEtags
conflictLoserEtagsAtIndex:
setModifiedByDevice:
pluginFieldsCount
clearPluginFields
pluginFieldsAtIndex:
setShareInfo:
setChainPrivateKey:
setChainProtectionInfo:
setChainParent:
tombstonedPublicKeyIDsCount
clearTombstonedPublicKeyIDs
tombstonedPublicKeyIDsAtIndex:
setZoneishMasterKeyId:
fieldsType
conflictLoserEtagsType
pluginFieldsType
tombstonedPublicKeyIDsType
hasCreatedBy
hasModifiedBy
hasModifiedByDevice
permission
setPermission:
setHasPermission:
hasPermission
permissionAsString:
StringAsPermission:
hasShareInfo
hasChainPrivateKey
hasChainProtectionInfo
hasChainParent
hasZoneishMasterKeyId
createdBy
fields
setFields:
modifiedBy
conflictLoserEtags
setConflictLoserEtags:
modifiedByDevice
pluginFields
setPluginFields:
chainPrivateKey
chainProtectionInfo
chainParent
tombstonedPublicKeyIDs
setTombstonedPublicKeyIDs:
zoneishMasterKeyId
_chainParent
_chainPrivateKey
_chainProtectionInfo
_conflictLoserEtags
_createdBy
_fields
_modifiedBy
_modifiedByDevice
_permission
_pluginFields
_shareInfo
_tombstonedPublicKeyIDs
_zoneishMasterKeyId
addPublicKeys:
publicKeysCount
clearPublicKeys
publicKeysAtIndex:
publicKeysType
setParticipantKeyLost:
setHasParticipantKeyLost:
hasParticipantKeyLost
participantKeyLost
publicKeys
setPublicKeys:
_publicKeys
_participantKeyLost
packageGCPeriod
purgeAll
rootDirectories
purgeRootDirectory:
gcPackagesInDirectory:dbInUseBlock:
purgeDirectory:
registerXPCActivity
sharedPurger
addRootDirectory:
schedulePeriodicPurgesInDirectory:
_rootDirectories
expressionForConstantValue:
expressionWithCKDPRecordFieldValue:translator:
predicateWithCKDPQueryFilters:translator:
andPredicateWithSubpredicates:
predicateWithFormat:
notPredicateWithSubpredicate:
radius
expressionForKeyPath:
predicateWithLeftExpression:rightExpression:modifier:type:options:
predicateWithSortedCKDPQueryFilters:translator:
CKDPQueryFiltersWithTranslator:error:
setRadius:
leftExpression
rightExpression
comparisonPredicateModifier
expressionType
function
predicateOperatorType
constantValue
arguments
keyPath
_nearFilterWithKey:location:radius:translator:
CKExpressionValue
_comparisonOptionForString:
_parseFullTextSearchUsingContainsTranslator:withError:
_parseFullTextSearchFiltersWithTranslator:withError:
_parseNearFiltersWithTranslator:withError:
_parseListContainsFiltersWithTranslator:withError:
_parseInFiltersWithTranslator:withError:
_parseListContainsAnyFiltersWithTranslator:withError:
_parseListContainsAllFiltersWithTranslator:withError:
_parseBeginsWithFiltersWithTranslator:withError:
_parseBetweenFiltersWithTranslator:withError:
_parseBasicOperatorFiltersWithTranslator:withError:
compoundPredicateType
subpredicates
ascending
CKDPQuerySort
relativeLocation
apsToken
bundleID
initWithApsToken:apsEnvironmentString:bundleID:
setApsToken:
setBundleID:
_apsToken
_bundleID
pccWrappedInvocationKeys
setWrappedInvocationKey:
attestationEntropy
hasAttestationResponse
attestationResponse
initWithServiceName:functionName:serializedParameters:attestationEntropy:pccWrappedInvocationKeys:
setAttestationEntropy:
setPccWrappedInvocationKeys:
_attestationEntropy
_pccWrappedInvocationKeys
subscriptionIDs
subscriptions
subscriptionFromPSubscription:error:
subscriptionFetchedBlock
initWithSubscriptionIDs:
setSubscriptions:
setSubscriptionFetchedBlock:
setSubscriptionIDs:
_subscriptions
_subscriptionFetchedBlock
_subscriptionIDs
_parseQueue
_parserData
_parserError
_objectParsedBlock
_qualityOfService
sqliteBind:index:
newFromSqliteStatement:atIndex:
newFromSqliteValue:
stringWithCString:encoding:
initWithSqliteRepresentation:
syncGroup
completionDate
syncStatus
syncError
waitOnSyncWithQueue:handler:
isManatee
setManatee:
setSyncGroup:
setCompletionDate:
setSyncStatus:
setSyncError:
_manatee
_syncGroup
_completionDate
_syncStatus
_syncError
keySyncQueue
keySyncTrackerByServiceName
createSyncTrackerForService:manatee:
syncTrackerForService:manatee:shortThrottlePeriod:
performKeySyncWithSyncTracker:testableSyncConfig:shouldThrottle:completionHandler:
setKeySyncTrackerByServiceName:
setKeySyncQueue:
_keySyncTrackerByServiceName
_keySyncQueue
isFetchAllSubscriptionsOperation
subscriptionFetchedProgressBlock
_handleSubscriptionFetched:withID:responseCode:
setIsFetchAllSubscriptionsOperation:
_isFetchAllSubscriptionsOperation
_subscriptionFetchedProgressBlock
_initWithRecord:operation:
_initForDeleteWithRecordID:operation:
rootRecordID
isKnownToServer
initWithRecord:action:
modifyRecordsQueue
_fetchSharePCSData
_prepareDependentPCSUpdateIfNeededForShareWithSharePCS:error:
_createNewSharePCSDataWithError:
_fetchRootRecordPublicSharingIdentityWithCompletionHandler:
encryptedPublicSharingKey
publicSharingIdentity
setSharePCSData:isUnitTestAccount:
setSharedZonePCSData:
isZoneWideShare
_rollShareAndZonePCSIfNeededForSharePCS:zonePCSData:
_handleSharePCSData:zonePCSData:
pcsGroup
isDelete
_addPublicKeyToSelfParticipant
_setupParticipantsProtectionInfos
_updateSharePublicPCSWithError:
_serializePCSDataForShareWithError:
addedParticipants
_alignParticipantPermissions
prepareForSave
removedParticipants
role
setInvitedProtectionData:
setInvitedProtectionEtag:
sharedZonePCSData
pRecordZoneFromRecordZone:
setPublicProtectionData:
setPublicProtectionEtag:
_cleanPublicPCSforShareWithError:
setAcceptanceStatus:
haveAddedOwnerToShare
isALegacyPublicShareThatNeedsOwnerPPPCSUpgrade
_ensurePrivateParticipant:isInInvitedSharePCS:
setHaveAddedOwnerToShare:
isCloudDocsContainer
setPublicSharingKey:
publicSharingKey
setIsALegacyPublicShareThatNeedsOwnerPPPCSUpgrade:
allParticipants
wantsNewInvitationToken
isCurrentUser
setMyParticipantPCSData:
_removePrivateParticipantsFromInvitedPCS:error:
_removePublicKey:fromInvitedPCS:
_removePrivateParticipant:fromInvitedSharePCS:
protectionInfoPublicKey
isOutOfNetwork
_publicKeyForParticipant:error:
createPublicIdentityFromPublicKeyForParticipant:error:
_addedPrivateParticipantNeedsAManateeInvitation:
initWithShareProtectionRef:
sharingRequestDataForIdentity:owner:flags:error:
initWithSharingInvitationData:shareURL:
setProtectionInfoPublicKey:
setMutableInvitationTokenStatus:
clearProtectionDataForRecord
setPrivatePCS:
setPreviousPublicProtectionEtag:
setPCSData:forFetchedShareID:
lookupField
_knownParticipantEqualToParticipant:
invitationToken
setServerRecord:
savePCSDataToCache
updateFromServerShare:
modifyHandlerWithShare:operation:
modifyHandlerForDeleteWithShareID:operation:
isShare
sideEffectRecordIDs
noteSideEffectRecordPendingModify:
noteSideEffectRecordAbsent:
noteSideEffectRecordPendingDelete:
fetchSharePCSData
updateParticipantsForFetchedShare:error:
_haveAddedOwnerToShare
_isALegacyPublicShareThatNeedsOwnerPPPCSUpgrade
hasSubscription
_subscription
_configureStreamSource:
setDevice:
setLogArchive:
streamObservers
absoluteStartDate
startTimeOffset
archiveSource
endDate
dateByAddingTimeInterval:
streamSource
source
decodeFailures
logArchive
initForHostStream
initWithRemoteDevice:
initWithArchiveAtURL:
addStreamObserver:
streamLogsWithCompletion:
wantsSimulatorLogs
setWantsSimulatorLogs:
setStartTimeOffset:
setAbsoluteStartDate:
setSource:
setArchiveSource:
setStreamSource:
setStreamObservers:
_wantsSimulatorLogs
_startTimeOffset
_absoluteStartDate
_processName
_source
_archiveSource
_streamSource
_streamObservers
writeString:
_CKLogToFileHandle:atDepth:
CKSharedCalendar
_hasIvar:
numberWithChar:
numberWithUnsignedChar:
numberWithShort:
numberWithUnsignedShort:
numberWithUnsignedLong:
packageProcessBasePath
removeDB
hasOwnerIdentifier
ownerIdentifier
_typeCKLogValue
_applicationContainerEnvironmentCKLogValue
_isolationLevelCKLogValue
_targetDatabaseCKLogValue
publicAccess
_publicAccessCKLogValue
_participantPermissionCKLogValue
_participantStateCKLogValue
_participantTypeCKLogValue
_stateCKLogValue
_permissionCKLogValue
_permissionAsString
addLocalizedArguments:
addTitleLocalizedArguments:
addSubtitleLocalizedArguments:
setText:
setLocalizedKey:
localizedArgumentsCount
clearLocalizedArguments
localizedArgumentsAtIndex:
setActionLocKey:
setLaunchImage:
setSoundName:
setCategory:
setTitle:
setTitleLocalizedKey:
titleLocalizedArgumentsCount
clearTitleLocalizedArguments
titleLocalizedArgumentsAtIndex:
setSubtitle:
setSubtitleLocalizedKey:
subtitleLocalizedArgumentsCount
clearSubtitleLocalizedArguments
subtitleLocalizedArgumentsAtIndex:
localizedArgumentsType
titleLocalizedArgumentsType
subtitleLocalizedArgumentsType
hasText
hasLocalizedKey
hasActionLocKey
hasLaunchImage
hasSoundName
hasCategory
hasTitle
hasTitleLocalizedKey
hasSubtitle
hasSubtitleLocalizedKey
text
localizedKey
localizedArguments
setLocalizedArguments:
actionLocKey
launchImage
soundName
title
titleLocalizedKey
titleLocalizedArguments
setTitleLocalizedArguments:
subtitle
subtitleLocalizedKey
subtitleLocalizedArguments
setSubtitleLocalizedArguments:
_actionLocKey
_category
_launchImage
_localizedArguments
_localizedKey
_soundName
_subtitle
_subtitleLocalizedArguments
_subtitleLocalizedKey
_text
_title
_titleLocalizedArguments
_titleLocalizedKey
user
setUserRecord:
_userRecord
setRecordType:
hasRecordType
setArchiveContinuationToken:
hasArchiveContinuationToken
setNewestFirst:
setHasNewestFirst:
hasNewestFirst
setHasLimit:
hasLimit
archiveContinuationToken
newestFirst
_archiveContinuationToken
_newestFirst
setFirstName:
setLastName:
hasFirstName
hasLastName
isInNetwork
setIsInNetwork:
setHasIsInNetwork:
hasIsInNetwork
firstName
lastName
_firstName
_lastName
_isInNetwork
addAssets:
assetsCount
clearAssets
assetsAtIndex:
assetsType
hasField
field
_assets
_field
downloadPreauthorization
complete
tuple
tupleForItem:
initWithTuple:
addItem:
setTuple:
setComplete:
_complete
_authPutRequest
_tuple
addContainerPrivacySettings:
containerPrivacySettingsCount
clearContainerPrivacySettings
containerPrivacySettingsAtIndex:
containerPrivacySettingsType
setContainerPrivacySettings:
_containerPrivacySettings
addSubscriptions:
subscriptionsCount
clearSubscriptions
subscriptionsAtIndex:
subscriptionsType
setRecordForOplockFailure:
hasRecordForOplockFailure
recordForOplockFailure
_recordForOplockFailure
checkoutCount
MMCSEngineContext
sharedContextsQueue
setCheckoutCount:
sharedWrappersByPath
tearDownMMCSEngineWithContext:
didDrop
setDidDrop:
_appID
_commonErrorCodeWithMMCSError:
_errorCodeWithMMCSPutError:
_errorCodeWithMMCSGetError:
_errorCodeWithMMCSRegisterError:
_userInfoFromMMCSRetryableError:
secureCodableError:
_errorWithMMCSError:path:description:operationType:
weakToWeakObjectsMapTable
initFileURLWithPath:isDirectory:
mmcsWorkingDirectory
assetDbPath
fileDownloadPath
hasCachedCKDMMCSEngineContextForPath:
assetCacheWithApplicationBundleID:assetDirectoryContext:didInit:error:
hasMigrated
purgeMMCSDirectoryWithPath:
setupMMCSEngineWithApplicationBundleID:path:wasCached:error:
initWithMMCSEngineContext:path:
setAssetCache:
setupPersistentStateAtStartup
runLoop
currentRunLoop
MMCSEngine
maxChunkCountForSection
_referenceIdentifierFromAssetKey:
isAlreadyRegistered
boundaryKey
didCompleteRequestWithError:
getMMCSEngine
initWithMMCS:itemGroup:operation:progress:command:start:completionHandler:
_contextToRegisterItemGroup:operation:options:completionHandler:
assetRereferenceInfo
downloadTokenExpiration
MMCSOptions
_logMMCSOptions:
_contextToGetOrPutChunkKeysItemGroup:operation:options:completionHandler:
sparseAware
constructedAssetEstimatedSize
contentResponseBody
descriptionForError:
_errorWithMMCSError:description:operationType:
_contextToGetItemGroup:operation:options:progress:command:completionHandler:
uploadTokenExpiration
_contextToPutItemGroup:operation:options:progress:completionHandler:
getCFRunLoop
performOnRunLoop:
registeredItemCount:error:
_getRegisteredItemsGreaterThan:itemIds:itemCount:error:
checkAssetHandlesForRegisteredMMCSItems:
_unregisterItemIDs:
putPackageSectionIdentifier
setMMCSPackageSectionItem:
_contextToPutSectionItem:operation:options:progress:completionHandler:
_contextToGetSectionItem:operation:options:progress:completionHandler:
sharedMMCSItemReaders
sharedItemIDs
startTrackingMMCSItemReader:
stopTrackingMMCSItemReader:
startTrackingItemIDsForMMCSItems:
stopTrackingItemIDsForMMCSItems:
isTrackingItemID:
showRegisteredItems
unregisterItemIDs:
unregisterItemIDs:completionBlock:
clientContext
setMMCSEngineContext:
_didDrop
_path
_assetCache
_clientContext
_checkoutCount
_MMCSEngineContext
itemGroup
findTrackedMMCSItemByItemID:
unsignedIntValue
isReaderReadFrom
canBeRegistered
setChunkCount:
getCKDMMCSItemReaderByPathForMMCSItem:error:
setModTimeInSeconds:
updateAssetHandlesForRegisteredMMCSItems:error:
generationCountToSave
shouldReadRawEncryptedData
assetChunkerOptions
downloadToken
hasOffset
initWithTimeIntervalSince1970:
setClientOpenedFileHandle:
_openInfo
openWithOpenInfo:error:
getFileSizeWithOpenInfo:error:
clearFileSize
getFileSizeWithError:
getFileMetadataWithFileHandle:error:
setDownloadPreauthorization:
setWrappedAssetKey:
setBoundaryKey:
writer
setWriter:
setInMemoryDownloadLooksOkay:
setDownloadTokenExpiration:
setAssetChunkerOptions:
setConstructedAssetEstimatedSize:
setHasOffset:
setShouldReadAssetContentUsingClientProxy:
setIsAlreadyRegistered:
setIsRereferencedAssetUpload:
_inMemoryDownloadLooksOkay
_hasSize
_hasOffset
_shouldReadRawEncryptedData
_shouldReadAssetContentUsingClientProxy
_isAlreadyRegistered
_isReaderReadFrom
_isRereferencedAssetUpload
_chunkCount
_fileURL
_fileID
_generationID
_clientOpenedFileHandle
_modTimeInSeconds
_itemID
_progress
_fileSize
_paddedFileSize
_offset
_packageIndex
_putPackageSectionIdentifier
_recordKey
_itemTypeHint
_contentBaseURL
_requestor
_authToken
_downloadPreauthorization
_uploadReceiptExpiration
_sectionItems
_assetKey
_wrappedAssetKey
_clearAssetKey
_boundaryKey
_writer
_uploadTokenExpiration
_downloadTokenExpiration
_assetChunkerOptions
_constructedAssetDownloadURL
_constructedAssetEstimatedSize
_trackingUUID
_initCommonWithOperation:
_stringForState:
savePolicy
hasPropertiesRequiringEncryption
hasModifiedPropertiesRequiringEncryption
hasUpdatedParent
parentsByRecordID
wantsChainPCS
wantsPublicSharingKey
setRecordPCS:
_loadPCSData
_fetchPCSData
canSetPreviousProtectionEtag
_unwrapRecordPCSForZone
_unwrapRecordPCSWithShareID:
parent
_unwrapRecordPCSForParent
_addShareToPCSData:withError:
_useZoneishPCS
setZoneishKeyID:
dataWithRecord:
_reallyFetchPCSDataWithOptions:
_createAndSavePCS
saveAttempts
recordPCSData
handlersByRecordID
hasUpdatedShare
previousShare
_fetchSharePCSForID:withCompletionHandler:
didRollRecordPCSMasterKey
rollRecordMasterKeysOnUnshare
setDidRollRecordPCSMasterKey:
_fetchParentPCSForData:withError:
previousParent
parentID
chainParentPublicKeyID
_addParentPCS:toRecordPCS:
_handlePCSData:withError:
setChainParentPublicKeyID:
_continueCreateAndSavePCSWithZonePCS:sharePCS:
useLightweightPCS
_canSetPreviousProtectionEtag
previousProtectionEtagFromUnitTest
_fetchExistingPCSForProvidedPCSData:
setParentPCSData:
_fetchParentPCSForID:withCompletionHandler:
retryPCSFailures
_clearRecordProtectionDataForRecord
initWithPCSData:encryptedPrivateKey:
setChainPCSData:
setWantsPublicSharingKey:
_createPublicSharingKeyWithError:
setEncryptedPublicSharingKey:
setPreviousProtectionEtagFromUnitTest:
zoneProtectionEtag
setZoneProtectionEtag:
setRecordPCSData:
changedKeys
setDestinationFieldName:
_prepareAsset:recordKey:record:error:
batchRank
setUploadRank:
prepareStreamingAsset:forUploadWithRecord:
saveProgressBlock
setLastItemPercentage:
signatureForStreamingAsset
hasModifiedEncryptedData
_wrapEncryptedDataOnRecord:
_wrapEncryptedData:withPCS:forField:recordID:
_pretendToWrapEncryptedDataForRecordValueStore:
encryptedValueStore
_wrapEncryptedDataForRecordValueStore:withPCS:
protectionEtag
setPCSData:forFetchedRecordID:
modifyHandlerWithRecord:operation:
modifyHandlerForDeleteWithRecordID:operation:
fetchRecordPCSData
assetsWhichNeedRecordFetch
prepareAssetsForUploadWithError:
setPcsGroup:
serverRecord
setIsDelete:
rereferencedAssetArrayByFieldname
setRereferencedAssetArrayByFieldname:
setBatchRank:
setSaveAttempts:
saveCompletionBlockCalled
setSaveCompletionBlockCalled:
needsRefetch
setNeedsRefetch:
_isDelete
_saveCompletionBlockCalled
_needsRefetch
_didRollRecordPCSMasterKey
_saveAttempts
_pcsGroup
_recordPCSData
_sharePCSData
_serverRecord
_rereferencedAssetArrayByFieldname
_batchRank
_sharedZonePCSData
JSONObjectWithData:options:error:
setHasRadius:
hasRadius
_radius
exceptionWithName:reason:userInfo:
raise
addPackagePutReceipts:
setMissingAssetStatusRecordID:
setAssetPutReceipt:
packageAssetSizesCount
clearPackageAssetSizes
packageAssetSizeAtIndex:
addPackageAssetSize:
packagePutReceiptsCount
clearPackagePutReceipts
packagePutReceiptsAtIndex:
packagePutReceiptsType
hasMissingAssetStatusRecordID
setRecovered:
setHasRecovered:
hasRecovered
setAssetSize:
setHasAssetSize:
hasAssetSize
hasAssetPutReceipt
packageAssetSizes
setPackageAssetSizes:count:
missingAssetStatusRecordID
recovered
assetSize
assetPutReceipt
packagePutReceipts
setPackagePutReceipts:
_packageAssetSizes
_assetSize
_assetPutReceipt
_missingAssetStatusRecordID
_packagePutReceipts
_recovered
method
status
encodeBool:forKey:
decodeObjectOfClasses:forKey:
decodeBoolForKey:
_timestamp
_url
_method
_status
_requestClassName
weakToStrongObjectsMapTable
notificationHandlers
keyEnumerator
accountChangeHandlerQueue
postAccountChangedNotificationToClients
accountChangedToken
setAccountChangedToken:
setNotificationHandlers:
setAccountChangeHandlerQueue:
_accountChangedToken
_notificationHandlers
_accountChangeHandlerQueue
previousServerChangeToken
notificationChangedBlock
resultChangedNotifications
initWithServerChangeTokenData:
setResultsLimit:
resultServerChangeTokenData
setResultServerChangeToken:
moreComing
setMoreComing:
_handleFetchChangesRequestFinished:
resultServerChangeToken
setPreviousServerChangeToken:
_moreComing
_notificationChangedBlock
_previousServerChangeToken
_resultServerChangeToken
plistURL
serverResponseIsComplete:
certificateListServerPlist:
certificateTrustPolicy
createTrustEvalFromCertificateList:verifiedWithPolicy:
canVerifySignedPlistValues:withKey:
dateWithTimeIntervalSince1970:
nearestExpirationInCertificateList:
earlierDate:
initWithPublicKey:version:expiration:certificateData:
hasExpired
setVerifiedPublicKey:
verifyData:withSignature:usingKey:
verifyInteger:withSignature:usingKey:
initWithPlistURL:verifyWithPolicy:
verifiedPublicKey
_verifiedPublicKey
_plistURL
_certificateTrustPolicy
initWithAccountInfoProvider:
handlePublicPushTokenDidUpdate:
addObserver:selector:name:object:
setSchedulerAvailable:
removeObserver:
schedulerIsAvailable
setSchedulerIsAvailable:
unitTestingAccountInfoProvider
globalConfiguration
tokenRegisterDaysForContainer:
refreshAllClientsNow:
registerTokenRefreshActivity
isApplication
setPushToken:forAppContainerAccountTuple:
tokenRegistered
_handlePushToken:forAppContainerAccountTuple:applicationMetadata:appContainerIntersectionMetadata:
setDateOfLastTokenUpdate:
callbackTimers
unitTestingPushTokens
pushTokenForAppContainerAccountTuple:filterOldTokens:
callbackBlocks
setTokenRegistered:
_refreshApsToken:appContainerAccountTuple:apsEnvironmentString:pushBundleIdentifier:isCKSystemService:completionBlock:
_removeApsToken:appContainerAccountTuple:apsEnvironmentString:pushBundleIdentifier:isCKSystemService:completionBlock:
tokenRefreshChanged
setCallbackBlocks:
setCallbackTimers:
setUnitTestingAccountInfoProvider:
setUnitTestingPushTokens:
_schedulerIsAvailable
_callbackBlocks
_callbackTimers
_unitTestingAccountInfoProvider
_unitTestingPushTokens
setBundleIDsFetchedBlock:
setCreated:
setHasCreated:
hasCreated
setExpires:
setHasExpires:
hasExpires
created
expires
_created
_expires
containerIdentifiers
connectionCount
_containerIdentifiers
_lastSeen
_connectionCount
hasWrappedInvocationKey
wrappedInvocationKey
_wrappedInvocationKey
containerPrivacySettingsFromPContainerPrivacySettings:
setLastItem:
setHasLastItem:
hasLastItem
lastItem
_lastItem
repairRecordID
setRepairRecordID:
isPackage
setIsPackage:
assetSizes
setAssetSizes:
assetPutReceipts
setAssetPutReceipts:
_isPackage
_repairRecordID
_assetSizes
_assetPutReceipts
_updateMissingAssetStatus
initWithUnrecoveredRepairRecordID:
initWithRecoveredAssetRepairRecordID:size:putReceipt:
initWithRecoveredPackageRepairRecordID:sizes:putReceipts:
fetchOperation
setFetchOperation:
modifyOperation
setModifyOperation:
_fetchOperation
_modifyOperation
setOwnerParticipant:
setCallerParticipant:
hasProtectedFullToken
setHasParticipantPermission:
participantPermissionAsString:
StringAsParticipantPermission:
setParticipantState:
setHasParticipantState:
participantStateAsString:
StringAsParticipantState:
setParticipantType:
setHasParticipantType:
participantTypeAsString:
StringAsParticipantType:
hasRootRecordType
_callerParticipant
_ownerParticipant
_participantPermission
_participantState
_participantType
_protectedFullToken
_rootRecordType
addAttestations:
attestationsCount
clearAttestations
attestationsAtIndex:
attestationsType
attestations
setAttestations:
_attestations
hasOperationId
hasOperationGroupId
operationId
operationGroupId
_operationGroupId
_operationId
setOperationProgressedBlock:
operationInfoMetadataForOperationWithID:
registerOperationAndSetResult:forOperationInfo:appContainerTuple:accountID:
_addProxyOperationWithInfo:withBlock:longlivedProxyPreparationBlock:
_handlePerformDaemonCallWithOperationInfo:completionBlock:forwardingBlock:
transcodeServerHostname
setTranscodeServerHostname:
_transcodeServerHostname
transcodeServerPublicKeyURLsForContainer:
setTranscodeServerPublicKeyURL:
transcodeServerPublicKeyURL
publicKeyOfType:withIdentifier:
expiration
setPublicKey:ofType:withIdentifier:
setTranscodeServerPublicKey:
createTranscodeServerTrustPolicy
determineTranscodeServerPublicKeyURL
fetchCachedTranscodePublicKey
transcodeServerPublicKey
fetchRemoteTranscodePublicKey
_transcodeServerPublicKey
_transcodeServerPublicKeyURL
setForced:
setEvictNow:
setItemIDsToUnregister:
setAssetHandleItemIDsToDelete:
initWithClientContext:forced:evictNow:
forced
evictNow
clearRegisteredItems
setClearRegisteredItems:
itemIDsToUnregister
assetHandleItemIDsToDelete
_forced
_evictNow
_clearRegisteredItems
_itemIDsToUnregister
_assetHandleItemIDsToDelete
_sharedCachesQueue
_sharedCachesByPath
_initWithApplicationBundleID:assetDirectoryContext:error:
initDatabaseWithError:
stringByStandardizingPath
stringWithFileSystemRepresentation:length:
openFdForDownloadPath:error:
initWithFactory:
closeAll
setAssetHandleExpirationNotificationObserver:
cleanup
setVolumeUUID:
insertOrReplaceObject:
setVolumeIndex:
volumeIndex
_setVolumeIndex:forVolumeUUID:
existingOrNewVolumeIndexForVolumeUUID:usingDB:
performWithDatabase:error:
deleteExactObject:
selectAllObjectsOfClass:where:bindings:orderBy:limit:block:
isEqualToNumber:
shouldBeUnregisteredBeforeDeleted
volumeUUIDWithVolumeIndex:
existingOrNewVolumeIndexForVolumeUUID:
expireAssetHandlesIfNecessaryWithGroup:
_clearForced:group:
_evictWithEvictionInfo:
scheduleUnregisterItemIDsAndDeleteAssetHandlesWithEvictionInfo:completionBlock:
selectAllObjectsOfClass:where:bindings:
string
deleteCharactersInRange:
mayHaveAssetCacheManagedFile
lastUsedTime
deviceIDForVolumeIndex:
descriptionWithStatus:
contentsOfDirectoryAtPath:error:
assetHandleWithCachedPath:
attributesOfItemAtPath:error:
deleteAllObjectsOfClass:where:bindings:
selectObjectOfClass:where:bindings:
scheduleUnregisterItemsAndDeleteUnregisteredAssetHandlesWithIDs:deleteUnregisteredAssetHandlesWithIDs:completionBlock:
writeToFile:options:error:
_saveData:error:
getFileMetadataAtPath:error:
initWithItemID:UUID:path:
existingOrNewVolumeIndexForDeviceID:
setModTime:
existingOrNewVolumeIndexForDeviceID:usingDB:
isEqualRevisionOfAssetHandle:differencesDescription:
lastInsertRowID
isError:withCode:
unregisterDeferredItemIDs:andDeleteAssetHandles:usingDB:
updateDeferredLastAccessTimeForUUIDsUsingDB:
_scheduleEvictionForDownloadedFiles
_scheduleExpirationForAssetHandles
fileDownloadPathFd
_getAssetHandlesForDownloadedMMCSItems:error:
_getAssetHandlesForCachedButNotRegisteredMMCSItems:error:
selectAllObjectsOfClass:where:bindings:limit:
updateAllObjectsOfClass:set:where:bindings:
deferredDeletedAssetHandles
parseCachedPath:assetHandleUUIDString:assetSignatureString:
initWithUUIDString:
CKDataWithHexString:stringIsUppercase:
parseCachedPath:assetHandleUUID:assetSignature:
isEvictionScheduled
setIsEvictionScheduled:
_evictDownloadedFilesEvictionInfo:
_evictDownloadedFilesWithDatabase:evictionInfo:
useModTimeInAssetCacheEviction
setLastUsedTime:
evictRecentAssets
assetEvictionGracePeriodWithDefaultValue:
assetEvictionGracePeriodOnHighWatermarkWithDefaultValue:
mayBeEvicted
_expireAssetHandlesWithExpiryDate:group:
opQueue
_expireAssetHandlesWithGroup:
acquireDatabaseWithError:
setHasMigrated:
_deleteAssetHandlesAndUnregisterItemsForUnmountedAssetVolumesWithDB:
_resetAssetInflightUsingDB:
registerExpirationForAssetHandles
forgetVolumeUUID:
clearForced:
scheduleUnregisterItemsAndDeleteUnregisteredAssetHandlesWithIDs:
updateAssetHandlesForChunkedMMCSItems:error:
updateAssetHandlesForGetMMCSItems:error:
updateAssetHandlesForPutMMCSItems:error:
trackDownloadedMMCSItems:error:
startTrackingRegisterOrPutAssetHandles:operationType:error:
startTrackingGetAssetHandles:operationType:error:
deferredStopTrackingAssetHandlesByItemIDs:
findAssetHandleForItemID:error:
deferredUpdateLastTimeUsedForUUID:
predictedEvictedSizeForAllFilesForced:
setDbPath:
fileStagingPath
setOpQueue:
setFileDownloadPathFd:
assetHandleExpirationNotificationObserver
volumeUUIDByVolumeIndex
setVolumeUUIDByVolumeIndex:
volumeIndexByVolumeUUID
setVolumeIndexByVolumeUUID:
setDeferredDeletedAssetHandles:
deferredLastUsedTimeByTrackingUUID
setDeferredLastUsedTimeByTrackingUUID:
_hasMigrated
_isEvictionScheduled
_fileDownloadPathFd
_fileDownloadPath
_dbPath
_fileStagingPath
_opQueue
_assetHandleExpirationNotificationObserver
_volumeUUIDByVolumeIndex
_volumeIndexByVolumeUUID
_deferredDeletedAssetHandles
_deferredLastUsedTimeByTrackingUUID
recordReadySource
ignoreErrors
fetchOrder
initWithAggregator:
performCallback
setFetchOrder:
setRecordReadySource:
setIgnoreErrors:
_ignoreErrors
_fetchOrder
_recordReadySource
fetchAssetContents
preserveOrdering
assetTransferOptionsByRecordTypeAndKey
forceDecryptionAttempt
setForceDecryptionAttempt:
_fetchAssetContents
_preserveOrdering
_forceDecryptionAttempt
_assetTransferOptionsByRecordTypeAndKey
_recordFetchesAvailable
_flushFetchedRecordsToConsumerLocked
useRecordCache
fetchInfosByOrder
highestReturnedOrder
setHighestReturnedOrder:
_performCallbackForFetchInfoLocked:
_flushFetchedRecordsToConsumerOrderedLocked
_flushFetchedRecordsToConsumerNoOrderingLocked
currentFetchOp
arrayWithObject:
setUseRecordCache:
setCurrentFetchOp:
fetchSource
_lockedSendFetchRequest
isMarkedToFinishByParent
setStarted:
_finishRecordFetchAggregator
curFetchOrder
setCurFetchOrder:
recordCache
_fetchRecord:recordReadyHandle:withRecordCompletion:
_addRecordFetchInfos:
started
setMarkedToFinishByParent:
fetchAggregatorCompletionBlock
setFetchSource:
setFetchGroup:
setFetchInfosByOrder:
_recordCache
_useRecordCache
_started
_markedToFinishByParent
_fetchAggregatorCompletionBlock
_fetchSource
_fetchGroup
_fetchInfosByOrder
_curFetchOrder
_highestReturnedOrder
_currentFetchOp
quotaFetchedBlock
_quotaFetchedBlock
APIToken
setAPIToken:
setWebAuthToken:
setTokenFetchedBlock:
webAuthToken
_webAuthToken
_APIToken
setServerError:
setErrorInternal:
setExtensionError:
setAuxiliaryError:
setRetryAfterSeconds:
setHasRetryAfterSeconds:
hasErrorInternal
errorInternal
_auxiliaryError
_clientError
_errorDescription
_errorInternal
_errorKey
_extensionError
_retryAfterSeconds
_serverError
refCount
setStopMMCSThread:
setRunLoop:
semaphore
_MMCSTreadAbort
initWithFireDate:interval:target:selector:userInfo:repeats:
runLoopMode
addTimer:forMode:
stopMMCSThread
invalidate
errorWithCode:error:path:format:
_MMCSThread
performSelectorInBackground:withObject:
setMMCSEngine:
enableMMCSMetricsWithDefaultValue:
setMaxChunkCountForSection:
_setupMMCSEngineWithError:
sharedContextsByPath
incRefCount
initWithApplicationBundleID:path:
_setupMMCSEngineWithRetryCount:error:
decRefCount
_tearDownMMCSEngine
removeIndex:
cancelRequestWithContext:
nextAvailableItemID
stopTrackingItemID:
setRefCount:
setSemaphore:
setRunLoopMode:
inMemoryItemsIDs
setInMemoryItemsIDs:
_stopMMCSThread
_maxChunkCountForSection
_refCount
_MMCSEngine
_semaphore
_runLoop
_runLoopMode
_inMemoryItemsIDs
updateProgressForItemID:state:progress:error:
didGetItemID:signature:path:error:results:
updateProgressForItemID:state:progress:results:
didPutItemID:signature:results:
didGetMetricsForRequest:
getMMCSItemReaderForItemID:error:
updateProgressForPackageSectionState:progress:results:
didPutSectionWithSignature:results:
itemGroupContext:willGetMMCSItemReaderForItemID:
itemGroupContext:didGetItemReader:itemID:
itemGroupContext:willOpenItemReaderWriter:error:
itemGroupContext:didOpenItemReaderWriter:result:error:
itemGroupContext:willCloseItemReaderWriter:error:
itemGroupContext:didCloseItemReaderWriter:result:error:
itemGroupContext:willGetFileMetadataItemReaderWriter:error:
itemGroupContext:didGetFileMetadataItemReaderWriter:fileMetadata:error:
itemGroupContext:willReadFromItemReaderWriter:offset:bytes:length:bytesRead:error:
itemGroupContext:didReadFromItemReaderWriter:offset:bytes:length:bytesRead:error:
_setupMMCSItemsWithError:
startBlock
MMCSItemsByItemID
_startTrackingMMCSItems:
_setupRegisterMMCSItemsWithError:
_setupPutMMCSItemsWithError:
_setupGetMMCSItemsWithError:
_setupPutContentMetadataMMCSItemsWithError:
_cleanupMMCSRegisterItems
_stopTrackingMMCSItems:
progressBlock
_cleanupMMCSItems
MMCSPackageSectionItem
commandBlock
moveItemAtPath:toPath:error:
conformingOperation
willCloseItemReaderWriter:error:
didCloseItemReaderWriter:result:error:
willGetFileMetadataItemReaderWriter:error:
didGetFileMetadataItemReaderWriter:fileMetadata:error:
willReadFromItemReaderWriter:offset:bytes:length:bytesRead:error:
didReadFromItemReaderWriter:offset:bytes:length:bytesRead:error:
hasConformingOperation
setHasConformingOperation:
setItemGroup:
setCommandBlock:
setStartBlock:
setMMCSItemsByItemID:
_hasConformingOperation
_itemGroup
_progressBlock
_commandBlock
_startBlock
_MMCSPackageSectionItem
_MMCSItemsByItemID
setHasIndex:
hasIndex
setHasIsReversed:
hasIsReversed
isReversed
_index
_isReversed
setShareIdentifier:
hasShareIdentifier
changeType
setChangeType:
setHasChangeType:
hasChangeType
changeTypeAsString:
StringAsChangeType:
shareIdentifier
_changeType
_shareIdentifier
addParticipant:
addPotentialMatch:
addInvitedKeyToRemove:
setInvitedPcs:
participantsCount
clearParticipants
participantAtIndex:
setShortTokenRoutingKey:
clearPotentialMatchs
potentialMatchAtIndex:
invitedKeyToRemovesCount
clearInvitedKeyToRemoves
invitedKeyToRemoveAtIndex:
setOrigin:
potentialMatchType
invitedKeyToRemoveType
setPublicAccess:
setHasPublicAccess:
hasPublicAccess
publicAccessAsString:
StringAsPublicAccess:
hasInvitedPcs
hasShortTokenRoutingKey
publisherModel
setPublisherModel:
setHasPublisherModel:
hasPublisherModel
anonymousPublicAccess
setAnonymousPublicAccess:
setHasAnonymousPublicAccess:
hasAnonymousPublicAccess
hasDisplayedHostname
publisherModelType
setPublisherModelType:
setHasPublisherModelType:
hasPublisherModelType
publisherModelTypeAsString:
StringAsPublisherModelType:
hasOrigin
invitedPcs
setParticipants:
shortTokenRoutingKey
setPotentialMatchs:
invitedKeyToRemoves
setInvitedKeyToRemoves:
origin
_invitedKeyToRemoves
_invitedPcs
_origin
_participants
_potentialMatchs
_publicAccess
_publisherModelType
_shortTokenRoutingKey
_anonymousPublicAccess
_publisherModel
applicationBundleIDs
setApplicationBundleIDs:
_applicationBundleIDs
_discoverable
setEnabledPermissions:
setContainerIDs:
accountBag
_platformBackingAccountClass
setDsid:
setAltDsid:
setAccountBag:
_checkAndLogIfAccountError
fakeAccountInfoQueue
determineCloudKitInfoFromEmail:password:completion:
_initFakeAccountWithEmail:password:
setPropertyOverrides:
setOverridesByDataclass:
propertyOverrides
setUsername:
_setPassword:
setIsUsernameEditable:
setShouldUpdatePersistentServiceTokens:
setShouldSkipSettingsLaunchAlert:
validateVettingToken:forAltDSID:completion:
authenticateWithContext:completion:
deviceCountForAccount:ignoreCache:completionHandler:
ckAccount
altDsid
setPrimaryEmail:
setPassword:
setFakeAccountInfoQueue:
_altDsid
_primaryEmail
_password
_accountBag
_propertyOverrides
_fakeAccountInfoQueue
_overridesByDataclass
deleteType
setDeleteType:
setHasDeleteType:
hasDeleteType
deleteTypeAsString:
StringAsDeleteType:
_deleteType
hasLanguageCode
hasRegionCode
_languageCode
_regionCode
requestLocalSerializations
requestLocalEnvelopes
permittedRemoteMeasurement
local
_preflightRecords
_getSerializedRequest
_invokeLocalFunction
_invokeFunction
_getDeserializedRecords
_postflightRecords
initForReadingFromData:error:
setRequestRecords:
setShouldModifyRecordsInDatabase:
setLocal:
setPccKey:
pccKey
encrypt:
setRequestEnvelopes:
getUUIDBytes:
initWithCertificate:applicationEnclaveQuote:quotingEnclaveQuote:routingToken:
initWithKey:permittedRemoteMeasurement:attestation:
clear
setPccWrappedKeys:
requestRecords
pRecordFromRecord:
replaceLocalSerializationsBlobs
requestEnvelopes
setSerializedArguments:
serializedArguments
pccWrappedKeys
setSerializedResponse:
hasMessage
hasAuxiliaryDomain
auxiliaryDomain
hasAuxiliaryCode
auxiliaryCode
auxiliaryUserInfosCount
auxiliaryUserInfos
initialResponseReceivedCallback
serializedResponse
setResponseRecords:
responseRecords
recordFetchCompletionBlock
recordFetchProgressBlock
recordFetchCommandBlock
replaceWireSerializations
setRequestLocalSerializations:
setRequestLocalEnvelopes:
setPermittedRemoteMeasurement:
_local
_replaceLocalSerializationsBlobs
_initialResponseReceivedCallback
_replaceWireSerializations
_recordFetchCompletionBlock
_recordFetchProgressBlock
_recordFetchCommandBlock
_pccKey
_pccWrappedKeys
_requestLocalSerializations
_requestLocalEnvelopes
_permittedRemoteMeasurement
_requestRecords
_requestEnvelopes
_serializedArguments
_serializedResponse
_responseRecords
addRecordTypes:
mutationTriggersCount
clearMutationTriggers
mutationTriggersAtIndex:
addMutationTriggers:
setNotification:
recordTypesCount
clearRecordTypes
recordTypesAtIndex:
recordTypesType
evaluationType
setEvaluationType:
setHasEvaluationType:
hasEvaluationType
evaluationTypeAsString:
StringAsEvaluationType:
setHasOwner:
ownerAsString:
StringAsOwner:
mutationTriggers
setMutationTriggers:count:
mutationTriggersAsString:
StringAsMutationTriggers:
hasNotification
setFireOnce:
setHasFireOnce:
hasFireOnce
notification
recordTypes
setRecordTypes:
fireOnce
_mutationTriggers
_evaluationType
_notification
_recordTypes
_fireOnce
itemsByGroupTuple
setItemsByGroupTuple:
_itemsByGroupTuple
setFd:
initWithPath:
hasInsertIntoList
hasDeleteListRange
hasReplaceListRange
insertIntoList
deleteListRange
replaceListRange
_deleteListRange
_insertIntoList
_replaceListRange
addZoneSummary:
zoneSummarysCount
clearZoneSummarys
zoneSummaryAtIndex:
zoneSummaryType
zoneSummarys
setZoneSummarys:
_zoneSummarys
setOperationFlowControls:
operationFlowControls
secondsUntilBudgetLimitationRemoved
isLimited
lastReportableError
flowControlWithBudgetCap:withMaximumThrottleTime:andRegenerationPerSecond:
_flowControlForOperation:createIfNecessary:
expendWithCost:reportableError:
budget
regenerationPerSecond
budgetCap
setBudgetCap:
setRegenerationPerSecond:
_flowControlForOperation:
_defaultBudget
_defaultRegeneration
_maximumThrottleTime
_operationFlowControls
addChangedRecord:
addChangedShare:
changedRecordsCount
clearChangedRecords
changedRecordAtIndex:
setSyncContinuationToken:
changedSharesCount
clearChangedShares
changedShareAtIndex:
changedRecordType
changedShareType
hasSyncContinuationToken
setHasStatus:
hasStatus
statusAsString:
StringAsStatus:
setPendingArchivedRecords:
setHasPendingArchivedRecords:
hasPendingArchivedRecords
changedRecords
setChangedRecords:
syncContinuationToken
changedShares
setChangedShares:
pendingArchivedRecords
_changedRecords
_changedShares
_syncContinuationToken
_pendingArchivedRecords
isReadableFileAtPath:
inputStreamWithFileAtPath:
initWithStream:
setClassOfNextMessage:
nextMessage
beginTransaction
endTransaction
initWithFileURL:
setSectionIndex:
packageInClientWithBasePath:error:
isWritableFileAtPath:
outputStreamToFileAtPath:append:
initWithOutputStream:
writeMessage:
packageInClientWithBasePath:contentsOfFile:error:
realOperation
targetOperationQueue
_realOperation
_targetOperationQueue
copyServiceIdentityWithError:
myPCSIdentity
CKHexString
setIdentityInfo:
setServiceIdentityInfo:
notFoundZoneIDs
initWithRecordZoneIDs:
_handleRecordZoneFetch:zoneID:responseCode:
setRecordZoneFetchedBlock:
identityStatus
setIdentityStatus:
invalidPCSByZoneID
setInvalidPCSByZoneID:
validPCSByZoneID
setValidPCSByZoneID:
setPcsDiagnosticInfo:
_identityStatus
_invalidPCSByZoneID
_validPCSByZoneID
_pcsDiagnosticInfo
logTypes
hasLogType:
hasOnlyLogType:
_initFilterDict
subsystem
process
setLogTypes:
categoriesBySubsystem
setCategoriesBySubsystem:
_simulatorMessagesOnly
_logTypes
_categoriesBySubsystem
addUploads:
uploadsCount
clearUploads
uploadsAtIndex:
uploadsType
hasAuthPutRequest
authPutType
setHasAuthPutType:
hasAuthPutType
authPutTypeAsString:
StringAsAuthPutType:
uploads
_authPutType
_uploads
shouldDropAllConfigurations
_reallyDropAllConfigurations
setSwitchNotifSource:
switchNotifSource
_dropAllConfigurations
_watchForSwitchPrefFileChanges
_behaviorOptionsChanged:
globalConfigurationOps
configurationQueue
setConfigurationFetchedGroup:
propertyQueue
configuration
setGlobalConfiguration:
configurationFetchedGroup
isExpired
_uniqueStringForContext:account:
containerSpecificInfoOperations
containerSpecificInfoQueue
setContainerInfo:forContainerID:accountID:
containerSpecificInfos
infoFetchedGroup
_fetchGlobalConfigForOperation:completionHandler:
containerInfoForContainerID:accountID:
_fetchContainerSpecificInfoForOperation:requireUserIDs:completionHandler:
expungeWithDeletedAccountID:forceRemove:
setShouldDropAllConfigurations:
writeToFile:atomically:
iCloudHostnames
_writeOutiCloudHostnames:
setConfigurationQueue:
setGlobalConfigurationOps:
setContainerSpecificInfoQueue:
setContainerSpecificInfos:
setContainerSpecificInfoOperations:
setPropertyQueue:
iCloudEnvNotifToken
setICloudEnvNotifToken:
_shouldDropAllConfigurations
_iCloudEnvNotifToken
_switchNotifSource
_configurationQueue
_globalConfiguration
_globalConfigurationOps
_containerSpecificInfoQueue
_containerSpecificInfos
_containerSpecificInfoOperations
_propertyQueue
addQueryResults:
queryResultsCount
clearQueryResults
queryResultsAtIndex:
queryResultsType
setQueryResults:
_queryResults
strongToWeakObjectsMapTable
operationsHoldingPowerAssertionsByID
setOperationsHoldingPowerAssertionsByID:
_operationsHoldingPowerAssertionsByID
hasEmailAddress
hasPhoneNumber
_emailAddress
_phoneNumber
addFileSignature:
addReferenceSignature:
setBrokenAssetRecordID:
fileSignaturesCount
clearFileSignatures
fileSignatureAtIndex:
referenceSignaturesCount
clearReferenceSignatures
referenceSignatureAtIndex:
setAffectedRecordType:
fileSignatureType
referenceSignatureType
hasBrokenAssetRecordID
setListIndex:
setHasListIndex:
hasListIndex
setHasIsPackage:
hasIsPackage
hasAffectedRecordType
setSkipWriteMissingAssetStatusRecord:
setHasSkipWriteMissingAssetStatusRecord:
hasSkipWriteMissingAssetStatusRecord
brokenAssetRecordID
listIndex
fileSignatures
setFileSignatures:
referenceSignatures
setReferenceSignatures:
affectedRecordType
skipWriteMissingAssetStatusRecord
_affectedRecordType
_brokenAssetRecordID
_fileSignatures
_listIndex
_referenceSignatures
_skipWriteMissingAssetStatusRecord
sourceZoneIDs
_fetchZonePCS
_prepareTargetZonePCS
_saveTargetZone
isHandlingPCSOplockFailure
_setPermanentOplockFailure
arrayByAddingObject:
_fetchPCSDataForZoneID:
zonePCSDataByZoneID
_handleZoneSavedWithID:responseCode:
setIsHandlingPCSOplockFailure:
setSourceZoneIDs:
setZonePCSDataByZoneID:
_isHandlingPCSOplockFailure
_sourceZoneIDs
_zonePCSDataByZoneID
infosToDiscover
pAliasWithIdentityLookupInfo:
initWithRecordName:
initWithUserRecordID:
setGivenName:
setFamilyName:
setHasiCloudAccount:
shouldReportMissingIdentity
wantsProtectionInfo
setWantsProtectionInfo:
setInfosToDiscover:
submittedInfos
setSubmittedInfos:
_wantsProtectionInfo
_infosToDiscover
_submittedInfos
configBaseURL
initWithValues:
setExpiry:
setConfiguration:
_configuration
tokenFetchedBlock
_tokenFetchedBlock
setDownloadToken:
setDownloadRequest:
setDownloadBaseURL:
setAssetAuthorizationResponseUUID:
hasDownloadToken
hasDownloadRequest
hasContentBaseURL
hasRequestor
hasDownloadBaseURL
setDownloadURLExpiration:
setHasDownloadURLExpiration:
hasDownloadURLExpiration
setHasDownloadTokenExpiration:
hasDownloadTokenExpiration
hasClearAssetKey
hasAssetAuthorizationResponseUUID
hasConstructedAssetDownloadURL
setConstructedAssetDownloadURLExpiration:
setHasConstructedAssetDownloadURLExpiration:
hasConstructedAssetDownloadURLExpiration
setConstructedAssetDownloadEstimatedSize:
setHasConstructedAssetDownloadEstimatedSize:
hasConstructedAssetDownloadEstimatedSize
downloadRequest
downloadBaseURL
downloadURLExpiration
assetAuthorizationResponseUUID
constructedAssetDownloadURLExpiration
constructedAssetDownloadEstimatedSize
_constructedAssetDownloadEstimatedSize
_constructedAssetDownloadURLExpiration
_downloadURLExpiration
_assetAuthorizationResponseUUID
_downloadBaseURL
_downloadRequest
_downloadToken
setContactInformation:
setInviterId:
setOutOfNetworkPrivateKey:
setAcceptedTimestampDate:
setInviteTimestampDate:
hasUserId
hasContactInformation
setHasState:
hasState
stateAsString:
StringAsState:
hasInviterId
setHasCreatedInProcess:
hasCreatedInProcess
setAcceptTimestamp:
setHasAcceptTimestamp:
hasAcceptTimestamp
hasOutOfNetworkPrivateKey
setOutOfNetworkKeyType:
setHasOutOfNetworkKeyType:
hasOutOfNetworkKeyType
hasAcceptedTimestampDate
setIsOrgUser:
setHasIsOrgUser:
hasIsOrgUser
hasProtectionInfoPublicKey
keyHealth
setKeyHealth:
setHasKeyHealth:
hasKeyHealth
keyHealthAsString:
StringAsKeyHealth:
hasInviteTimestampDate
contactInformation
inviterId
acceptTimestamp
outOfNetworkKeyType
acceptedTimestampDate
isOrgUser
inviteTimestampDate
_acceptTimestamp
_acceptedTimestampDate
_contactInformation
_inviteTimestampDate
_inviterId
_keyHealth
_outOfNetworkKeyType
_outOfNetworkPrivateKey
_protectionInfoPublicKey
_userId
_createdInProcess
_isOrgUser
setLastAttemptDate:
setRetryNumber:
_lastAttemptDate
_retryNumber
cacheDelegateQueue
delegateWrappersByOperationID
isInvalidated
wasUnexpectedlyUnregisteredForOperationID:
operationWithID:didProgress:
_locked_enumerateCallbackArgumentsForOperationWithID:usingBlock:
_lockedResultForOperationWithID:
operationWithID:didComplete:
_lockedSetOperationInfo:forOperationID:appContainerTuple:accountID:
_lockedSetOperationResult:forOperationID:
begin
_locked_operationInfoForID:
selectAllFrom:where:bindings:
expungeOperationInfoForDeletedAccountID:
registerDelegate:forOperationWithID:
unregisterDelegate:forOperationWithID:
resultForOperationWithID:
enumerateCallbackArgumentsForOperationWithID:usingBlock:
setProgressCallbackArguments:forOperationID:
setOperationResult:forOperationID:
registerCacheEvictionActivity
setCacheDelegateQueue:
setDelegateWrappersByOperationID:
_cacheDelegateQueue
_delegateWrappersByOperationID
_configurationFetchedGroup
setDisplayName:
willBeginSyncRequestWithClientsBlock
clientSyncStartedBlock
clientSyncProgressedBlock
clientSyncCompletedBlock
_willBeginSyncRequestWithClientsBlock
_clientSyncStartedBlock
_clientSyncProgressedBlock
_clientSyncCompletedBlock
hasLeft
hasRight
left
right
_left
_right
setResultServerChangeTokenData:
_resultServerChangeTokenData
nodeErrorsByZoneID
requestResultsByRecordZoneID
configurationsByRecordZoneID
zoneIDsByRequestOperationUUID
_handleRecords:
initWithRecordZoneIDs:configurationsByRecordZoneID:
zoneErrorsByZoneID
resultsByRecordZoneID
setZoneIDsByRequestOperationUUID:
setRequestResultsByRecordZoneID:
setNodeErrorsByZoneID:
_configurationsByRecordZoneID
_zoneIDsByRequestOperationUUID
_requestResultsByRecordZoneID
_nodeErrorsByZoneID
serverRecordHasNoProtectionData
fetchPCSDataForRecordWithID:databaseScope:withCompletionHandler:
setServerRecordType:
setServerRecordHasNoProtectionData:
requestFetchOfRecordWithID:forOperation:withCompletionHandler:
needsChainPCSCreation
serverRecordType
setWantsChainPCS:
setShouldRetry:
parentPCSData
_fetchPCSForPrivateZone
_fetchDependentPCSInSharedDatabase
_decryptRecordPCSInPrivateDatabase
_decryptRecordPCSInSharedDatabase
shouldRetry
_serverRecordHasNoProtectionData
_serverRecordType
setVettingError:
setHasVettingError:
vettingErrorAsString:
StringAsVettingError:
_vettingError
_mmcsWorkingDirectory
_assetDbPath
previousServerChangeTokenData
setMaxChangedZones:
changedZones
recordZoneIDFromPRecordZoneIdentifier:error:
zoneChangedBlock
zonePurgedBlock
zoneDeletedBlock
setServerChangeTokenData:
initWithPreviousServerChangeTokenData:
changedZoneIDs
deletedZoneIDs
purgedZoneIDs
serverChangeTokenData
setZoneChangedBlock:
setZoneDeletedBlock:
setZonePurgedBlock:
recordZoneID
setRecordZoneID:
setPreviousServerChangeTokenData:
_changedZoneIDs
_deletedZoneIDs
_purgedZoneIDs
_serverChangeTokenData
_zoneChangedBlock
_zoneDeletedBlock
_zonePurgedBlock
_recordZoneID
_previousServerChangeTokenData
configureRequest:parentOperation:
setLookupService:
setFetchBatchSize:
removeCacheForLookupInfos:inCache:
_cache
hasHost
setHasPort:
hasPort
setHasUseTls:
hasUseTls
useTls
_host
_port
_useTls
addFieldValues:
addListValues:
fieldValuesCount
clearFieldValues
fieldValuesAtIndex:
listValuesAtIndex:
fieldValuesType
listValuesType
setLongValue:
setHasLongValue:
hasLongValue
longValue
fieldValues
setFieldValues:
_longValue
_fieldValues
isProvisionedForDataclass:
personaAwarePrimaryAppleAccountFromAccounts:defaultPrimaryAccount:
hasQuery
notificationFromPPushMessage:
_resultChangedNotifications
expiry
allowedAppVersionsCache
setAllowedAppVersionsCache:
valueForKeyPath:forContainer:
allowExpiredDNSBehavior
initWithPropertyDictionary:
dictionaryPropertyEncoding
_expiry
_allowedAppVersionsCache
_receivedUserIdentity:forLookupInfo:error:
lookupInfosToFetch
setIsCached:
_tryComplete
spawnURLRequests
fetchBatchSize
_generateOONPrivateKeyWithError:
_saveUserIdentity:forLookupInfo:
originalLookupInfosToFetch
perLookupInfoProgressBlock
lookupCompletionBlock
setOriginalLookupInfosToFetch:
setLookupInfosToFetch:
_perLookupInfoProgressBlock
_lookupCompletionBlock
_originalLookupInfosToFetch
_lookupInfosToFetch
touchRepairZone
bypassPCSEncryptionForTouchRepairZone
simulateCorruptAsset
writeRepairRecord
uploadRequestConfiguration
_fetchRecord
_touchFetchRepairZone
_breakAsset
_markAssetBroken
repairZone
_touchCreateRepairZone
markAssetBrokenError
numMarkAssetBrokenFailures
setNumMarkAssetBrokenFailures:
setMarkAssetBrokenError:
repairZoneID
repairContext
setRepairZone:
setZoneFetchOperation:
setZoneCreateOperation:
checkPreconditions
assetOrPackageForFetchedRecord
setShouldOnlySaveAssetContent:
setOriginatingFromDaemon:
stringByReplacingOccurrencesOfString:withString:
clonedPackageInDaemonWithBasePath:filesDuplicatedIntoDirectory:error:
setCorruptOperation:
initWithRepairZoneRecordID:databaseScope:recordID:recordType:fieldName:fileSignature:referenceSignature:
initWithRepairZoneRecordID:databaseScope:recordID:recordType:fieldName:fileSignatures:referenceSignatures:
initWithAssetOrPackageMetadata:writeRepairRecord:
setUrlRequest:
assetOrPackageMarkedBrokenBlock
setAssetBrokenBlock:
setWrapperOperation:
removePackages
setUploadRequestConfiguration:
setTouchRepairZone:
setBypassPCSEncryptionForTouchRepairZone:
setSimulateCorruptAsset:
setWriteRepairRecord:
zoneFetchOperation
zoneCreateOperation
corruptOperation
wrapperOperation
_touchRepairZone
_bypassPCSEncryptionForTouchRepairZone
_simulateCorruptAsset
_writeRepairRecord
_assetOrPackageMarkedBrokenBlock
_uploadRequestConfiguration
_zoneFetchOperation
_zoneCreateOperation
_corruptOperation
_wrapperOperation
_repairZone
_numMarkAssetBrokenFailures
_markAssetBrokenError
urlRequest
_urlRequest
setIdentifierForConstraintFailure:
hasIdentifierForConstraintFailure
identifierForConstraintFailure
_identifierForConstraintFailure
shareMetadatasToAccept
publicPCSEtag
dugongInvitationProtectionInfo
oonProtectionInfo
oonParticipantID
shareMetadataByRequestID
shareFromPShare:error:
shareAcceptedBlock
initWithShareMetadatasToAccept:
setShareAcceptedBlock:
setShareMetadatasToAccept:
setShareMetadataByRequestID:
_shareAcceptedBlock
_shareMetadatasToAccept
_shareMetadataByRequestID
setShareURL:
setOonProtectionInfo:
setOonParticipantID:
setDugongInvitationProtectionInfo:
_shareURL
_publicPCSData
_publicPCSEtag
_oonProtectionInfo
_oonParticipantID
_dugongInvitationProtectionInfo
setAtomicSaves:
setHasAtomicSaves:
hasAtomicSaves
setFetchChanges:
setHasFetchChanges:
hasFetchChanges
setSharing:
setHasSharing:
hasSharing
setCkql:
setHasCkql:
hasCkql
sharingType
setSharingType:
setHasSharingType:
hasSharingType
sharingTypeAsString:
StringAsSharingType:
setZoneSharing:
setHasZoneSharing:
hasZoneSharing
setHierarchicalSharing:
setHasHierarchicalSharing:
hasHierarchicalSharing
atomicSaves
fetchChanges
sharing
ckql
zoneSharing
hierarchicalSharing
_sharingType
_atomicSaves
_ckql
_fetchChanges
_hierarchicalSharing
_sharing
_zoneSharing
shouldFetchAssetContents
fetchAllChanges
shouldReportAllPerItemFailures
forcePCSDecryptionAttempt
_noteCompletedURLRequest:withSchedulerInfo:
_noteChangedRecordWithID:recordType:record:error:
_possiblyWrapError:forRecordWithID:withCode:format:
_noteDeletedRecordWithID:recordType:
_createAndConfigureURLRequestForZoneIDs:optionsByZoneID:
_optionsForZonesWithPendingChangesAfterRequest:
_sendFetchChangesRequestForZoneIDs:withOptions:previousRequestSchedulerInfo:
_handleFetchChangesRequestFinishedWithSchedulerInfo:
_noteOperationBeginning
fetchNewestChangesFirst
_noteOperationFinishedBlockEnd
_handleChangedRecords:perRequestSchedulerInfo:
_handleRecordDelete:recordType:perRequestSchedulerInfo:
_noteOperationEnding
setShouldFetchAssetContents:
setShouldReportAllPerItemFailures:
_shouldFetchAssetContents
_fetchAllChanges
_forcePCSDecryptionAttempt
_shouldReportAllPerItemFailures
takeValuesFrom:
changeTypes
isSubclassOfClass:
clientIsUsingLegacyCKFetchRecordChangesOperationAPI
setSavedResult:
serverChangeTokenUpdatedBlock
resultClientChangeTokenData
recordChangedBlock
setChangeTypes:
setRecordsChangedBlock:
setRecordDeletedBlock:
savedResult
setClientChangeTokenData:
setClientIsUsingLegacyCKFetchRecordChangesOperationAPI:
_clientIsUsingLegacyCKFetchRecordChangesOperationAPI
_recordChangedBlock
_serverChangeTokenUpdatedBlock
_changeTypes
_savedResult
fetchZonesGroup
_sendFetchDatabaseChangesRequestWithChangeToken:previousRequestSchedulerInfo:
_handleFetchDatabaseChangesRequestFinishedWithSchedulerInfo:
recordZoneWithIDChangedBlock
recordZoneWithIDWasDeletedBlock
recordZoneWithIDWasPurgedBlock
setFetchZonesGroup:
_recordZoneWithIDChangedBlock
_recordZoneWithIDWasDeletedBlock
_recordZoneWithIDWasPurgedBlock
_fetchZonesGroup
bundleIDsFetchedBlock
_bundleIDsFetchedBlock
initWithRecord:trackProgress:assetsToDownload:assetsToDownloadInMemory:packageIndexSets:assetURLInfosToFillOut:
didDownloadAsset:error:
didFillOutURLInfo:error:
didCompleteTaskWithError:
desiredPackageFileIndices
webSharingIdentityDataByRecordID
recordIDsToFetch
fullRecordsToFetch
fetchRecordsWithIDs:andFullRecords:
recordIDsToRefetch
_fetchCloudCerts
_saveUpdatedShareRecords
_downloadAssets
indexOfObject:inSortedRange:options:usingComparator:
shareRecordsToUpdate
setShouldSkipPCSRetryBehavior:
setError:forRecordID:
_continueHandleFetchedRecord:recordID:
useCachedEtags
_findSpecialParticipantsOnShare:identityDelegate:
cachedRecords
_handleRecordFetch:recordID:etagMatched:responseCode:
hasRecordDecryptOperation
recordDecryptOperation
finishDecryption
errorsByRecordID
errorForRecordID:
trackChanges
setCompatibilityModeObjectNoValidate:forKey:
setObjectNoValidate:forKey:
_addDownloadTaskForRecord:completionBlock:
setWebSharingIdentityDataByRecordID:
forcePCSDecrypt
wasCached
decryptRecord:withCompletion:
_handleSharePCSPrepForShare:recordID:
_decryptPropertiesIfNeededForRecord:record:
skipDecryption
_decryptPropertiesOnRecord:recordID:
setAssetTransferOptions:
_prepareAsset:record:recordKey:assetTransferOptions:
downloadTasksByRecordID
_finishAllDownloadTasksWithError:
_didDownloadAssetsWithError:
setRecordIDsToFetch:
setCachedRecords:
setDesiredPackageFileIndices:
setErrorsByRecordID:
setDownloadTasksByRecordID:
setRecordIDsToRefetch:
setShareRecordsToUpdate:
_decryptOperation
_useCachedEtags
_forcePCSDecrypt
_skipDecryption
_fullRecordsToFetch
_recordIDsToFetch
_cachedRecords
_desiredPackageFileIndices
_errorsByRecordID
_downloadTasksByRecordID
_recordIDsToRefetch
_shareRecordsToUpdate
_webSharingIdentityDataByRecordID
_options
numRetries
setWillRetryFetchSuperCalled:
willRetryFetchSuperCalled
setNumRetries:
needsAdditionalPCSCreation
setFetchOptions:
_willRetryFetchSuperCalled
_didFetchData
_wasFetchedFromCache
_shouldRetry
_pcsDataInvalidated
_numRetries
_fetchOptions
_fetchError
_parentPCSData
_handleRecordArchived:responseCode:
notificationIDs
successfulNotificationIDs
errorByNotificationID
initWithNotificationIDsToMarkRead:
_handleNotificationID:withResponse:
setNotificationMarkedReadProgressBlock:
notificationMarkedRead
setNotificationIDs:
setErrorByNotificationID:
setSuccessfulNotificationIDs:
_notificationMarkedRead
_notificationIDs
_errorByNotificationID
_successfulNotificationIDs
shareIDs
baseTokensByShareID
childRecordIDsByShareID
fetchSharesFromServer
sharesNeedingUpdateByID
hasAttemptedShareUpdate
setHasAttemptedShareUpdate:
updateShares
_sendErrorForFailedShares
shareParticipantKeyFetchedBlock
_performCallbackForShareID:withParticipantKey:error:
CKBase64EncodedURLSafeString
_participantKeyFromShare:withError:
_handleFetchedShare:withID:error:
setShareIDs:
setBaseTokensByShareID:
setChildRecordIDsByShareID:
setSharesNeedingUpdateByID:
_hasAttemptedShareUpdate
_shareParticipantKeyFetchedBlock
_shareIDs
_baseTokensByShareID
_childRecordIDsByShareID
_sharesNeedingUpdateByID
_serviceForContext:
_lookupKeyForContext:
deviceIDs
_savedDeviceIdentifierForContext:
_saveDeviceIdentifier:forContext:
setDeviceIDs:
_deviceIDs
originatingFromDaemon
markAsParticipantNeedsNewInvitationToken
recordsToSave
_claimPackagesInRecord:error:
recordIDsToDelete
recordIDsToDeleteToEtags
conflictLosersToResolveByRecordID
pluginFieldsForRecordDeletesByID
clientChangeTokenData
shouldSkipPCSRetryBehavior
shouldReportRecordsInFlight
claimPackagesWithSuccessBlock:failureBlock:completionBlock:
modifyHandlersByZoneID
_performHandlerCallbacks
_determineEnvironment
_fetchUserPublicKeys
_applySideEffects
_topoSortRecords
_prepareParentPCS
_fetchRecordPCSData
_fetchAssetRecordsForRereferencing
_uploadAssets
_markRecordHandlersAsUploaded
_prepareRecordsForSave
shouldDecryptRecordsBeforeSave
_verifyRecordEncryption
_reportRecordsInFlight
shouldModifyRecordsInDatabase
_continueRecordsModify
_hasHandlerInState:
_fetchShareParticipants
haveOutstandingHandlers
deleteCallbackWithMetadata:error:
saveCallbackWithMetadata:error:
streamingAssetRequestOptions
metricOptions
setStreamingAssetMetricOptions:
releasePackages
recordsUploaded
setRecordsUploaded:
assetsUploaded
setAssetsUploaded:
assetsUploadedFileSize
setAssetsUploadedFileSize:
recordsDeleted
setRecordsDeleted:
setHaveOutstandingHandlers:
retries
setRetries:
callbackWithMetadata:error:
_performCallbacksForNonAtomicZoneHandlers:
_performCallbacksForAtomicZoneHandlers:
requestNeedsUserPublicKeys
userPublicKeys
setUserPublicKeys:
_enumerateHandlersInState:withBlock:
addRecords:error:
recordsByTopologicalSortWithError:
_shouldToposortInContainerID:
_topoSortRecordsForHandlers:
setParentsByRecordID:
handlersByAssetNeedingRecordFetch
validateAndSetRecordFetchPropertiesWithAsset:assetReference:useEncryption:useClearAssetEncryption:
destinationFieldName
setHandlersByAssetNeedingRecordFetch:
clearRecordFetchProperties
setWithCapacity:
assetArrayByRecordID:didFetchRecord:recordID:error:
_didCompleteRecordFetchOperation:assetArrayByRecordID:
_prepareAssetsForUpload
setHandlersByAsset:
handlersByAsset
cachedUserBoundaryKeyData
_fetchUserBoundaryKey
setCachedUserBoundaryKeyData:
_setBoundaryKeyOnAssetsToUpload:
setRecordIDsToDelete:
setRecordIDsToDeleteToEtags:
initWithPackageStagingDirectory:databaseScope:
deltaPRecordFromRecord:withAllFields:outDeletedMergeFields:outKeysToSend:
_handleDecryptionFailure:forRecordID:
_reallyHandleRecordSaved:handler:etag:dateStatistics:responseCode:keysAssociatedWithETag:recordForOplockFailure:decryptedServerRecord:
setKnownToServer:
hasTime
setCreationDate:
setModificationDate:
copyWithOriginalValues
requestedFieldsByRecordIDForRecords:
initWithRecordsToSave:recordIDsToDelete:oplock:sendAllFields:clientChangeTokenData:requestedFieldsByRecordId:
setMarkAsParticipantNeedsNewInvitationToken:
_handleRecordSaved:handler:etag:dateStatistics:responseCode:keysAssociatedWithETag:recordForOplockFailure:serverRecord:
_handleRecordDeleted:handler:responseCode:
setRecordPostedBlock:
setConflictLosersToResolveByRecordID:
setPluginFieldsForRecordDeletesByID:
recordsInFlightBlock
setShouldReportRecordsInFlight:
_createModifyRequestWithRecordsToSave:recordsToDelete:recordsToDeleteToEtags:handlersByRecordID:
setStreamingAssetRequestOptions:
_clearProtectionDataIfNotEntitled
trustProtectionData
hasDecryptOperation
_containerIDsNotToTopoSort
setHandlersByRecordID:
setModifyHandlersByZoneID:
retriedRecords
setRetriedRecords:
setModifyRecordsQueue:
setRequestNeedsUserPublicKeys:
_retryPCSFailures
_trustProtectionData
_shouldModifyRecordsInDatabase
_retriedRecords
_shouldOnlySaveAssetContent
_haveOutstandingHandlers
_shouldReportRecordsInFlight
_originatingFromDaemon
_markAsParticipantNeedsNewInvitationToken
_requestNeedsUserPublicKeys
_cachedUserBoundaryKeyData
_saveProgressBlock
_recordsInFlightBlock
_recordsToSave
_recordIDsToDelete
_recordIDsToDeleteToEtags
_conflictLosersToResolveByRecordID
_pluginFieldsForRecordDeletesByID
_handlersByRecordID
_parentsByRecordID
_handlersByAssetNeedingRecordFetch
_handlersByAsset
_modifyHandlersByZoneID
_savePolicy
_clientChangeTokenData
_modifyRecordsQueue
_userPublicKeys
_streamingAssetRequestOptions
URLByResolvingSymlinksInPath
setRealPathURL:
fetchPCSDataForShareWithID:databaseScope:withCompletionHandler:
requestFetchOfShareWithID:forOperation:withCompletionHandler:
queuePriority
applicationSecondaryID
resumableContainerLimpMode
chunkingLibraryCorruptionMode
topmostParentOperationID
topmostParentOperationGroupID
zoneNames
setTopmostParentOperationID:
setTopmostParentOperationGroupID:
setApplicationSecondaryID:
setQueuePriority:
setResolvedAutomaticallyRetryNetworkFailures:
setResolvedDiscretionaryNetworkBehavior:
_allowsCellularAccess
_allowsPowerNapScheduling
_resolvedAutomaticallyRetryNetworkFailures
_databaseScope
_topmostParentOperationID
_topmostParentOperationGroupID
_applicationSecondaryID
_zoneNames
_authPutResponse
_authPutResponseHeaders
_queuePriority
_resolvedDiscretionaryNetworkBehavior
_duetPreClearedMode
_metricOptions
_networkServiceType
listFieldsCount
clearListFields
listFieldAtIndex:
listFieldType
listFields
setListFields:
_listFields
minimumVersionETag
setMinimumVersionETag:
setFetchVersionsGroup:
fetchVersionsGroup
recordVersionFetchedBlock
initWithRecordIDs:desiredKeys:minimumVersionETag:
_handleRecordVersionsFetchedForID:isDeleted:versions:responseCode:
setRecordVersionsFetchedBlock:
_recordVersionFetchedBlock
_minimumVersionETag
_fetchVersionsGroup
setSerializedResult:
hasSerializedResult
_serializedResult
addAuxiliaryUserInfo:
setAuxiliaryDomain:
clearAuxiliaryUserInfos
auxiliaryUserInfoAtIndex:
auxiliaryUserInfoType
setAuxiliaryCode:
setHasAuxiliaryCode:
setAuxiliaryUserInfos:
_auxiliaryCode
_auxiliaryDomain
_auxiliaryUserInfos
dictionaryWithContentsOfFile:
dataWithPropertyList:format:options:error:
removeCharactersInString:
decimalDigitCharacterSet
characterAtIndex:
characterIsMember:
zonePCS
setPcsKeyID:
previousPublicProtectionEtag
sharedConnection
isCloudSyncAllowed:
actionsCount
clearActions
actionAtIndex:
actionType
actions
setActions:
_actions
setResultClientChangeTokenData:
_hasPendingArchivedRecords
_resultClientChangeTokenData
setRequestedChangeTypes:
fetchChangesMadeByThisDevice
setIgnoreCallingDeviceChanges:
recordDeletedBlock
recordsChangedBlock
_handleRecordChanges:
_recordsChangedBlock
_recordDeletedBlock
accountQueue
initWithAccountType:
setParentAccount:
parentAccount
saveVerifiedAccount:withCompletionHandler:
_lockedEnsureCloudKitChildAccountOnParentAccount:inStore:
reload
parentAppleAccount
renewCredentialsForAccount:options:completion:
setHelpBook:
setHelpAnchor:
urlForDataclass:preferringGateway:
urlForDataclass:
deviceCountOverride
initWithAccount:
devices
saveVerifiedAccount:error:
performRequestWithHandler:
ensureCloudKitChildAccountOnParentAccount:inStore:
_isPrimaryEmailVerified
setMissingAssetStatusRecord:
hasMissingAssetStatusRecord
missingAssetStatusRecord
_missingAssetStatusRecord
_updateBackgroundSessionConnectionPoolLimit
backgroundSessionConnectionPoolLimitWithDefaultValue:
_backgroundSessionConnectionPoolLimit
addSections:
setManifest:
sectionsCount
clearSections
sectionsAtIndex:
sectionsType
hasManifest
manifest
sections
setSections:
_manifest
_sections
setHasAllAssets:
hasAllAssets
allAssets
_allAssets
requestedChangeTypes
setHasRequestedChangeTypes:
hasRequestedChangeTypes
requestedChangeTypesAsString:
StringAsRequestedChangeTypes:
setHasIgnoreCallingDeviceChanges:
hasIgnoreCallingDeviceChanges
ignoreCallingDeviceChanges
_requestedChangeTypes
_ignoreCallingDeviceChanges
initWithRepairRecordID:recovered:package:sizes:putReceipts:
isFetchAllRecordZonesOperation
ignorePCSFailures
checkPCSIdentity
fetchZonesFromServer
saveZonesWithUpdatedZonePCS
zoneIDsNeedingPCSUpdateRetry
zonesToSaveForPCSUpdateByZoneID
pcsUpdateErrorsByZoneID
_locked_callbackForRecordZone:zoneID:error:
zoneIDsNeedingDugongKeyRoll
recordZoneFetchedProgressBlock
_cachePCSOnRecordZone:
_handleRecordZoneSaved:error:
_continueHandlingFetchedRecordZone:zoneID:
_locked_checkAndUpdateZonePCSIfNeededForZone:error:
setZonesToSaveForPCSUpdateByZoneID:
setZoneIDsNeedingPCSUpdateRetry:
setPcsUpdateErrorsByZoneID:
setZoneIDsNeedingDugongKeyRoll:
_isFetchAllRecordZonesOperation
_ignorePCSFailures
_recordZoneFetchedProgressBlock
_zonesToSaveForPCSUpdateByZoneID
_zoneIDsNeedingPCSUpdateRetry
_pcsUpdateErrorsByZoneID
_zoneIDsNeedingDugongKeyRoll
registerPCSSQLCacheEvictionActivity
dbQueue
contexts
pathForContext:
upgradeInfoWithVersion:function:shouldVacuum:shouldTruncate:
cacheRequestCount
setCacheRequestCount:
database
earliestValidDate
fetchObjectOfClass:sql:
cacheHitCount
setCacheHitCount:
recordQueue
_lockedFetchPCSDataForID:databaseScope:itemType:ofClass:
_lockedSetPCSData:databaseScope:itemType:forID:
_setPCSData:forItemWithID:databaseScope:itemType:withCompletionHandler:
isInTransaction
label
isInBatch
autovacuumableSpaceInBytes
incrementalVacuum:
_evictPCSSQLCachesForAppContainerAccountTuples:
globalPCSSQLCacheEvictionQueue
removeLastObject
_initWithClientContext:
createInitialTablesSQL
infoToUpgradeFromVersion:
setRecordQueue:
_recordQueue
_cacheRequestCount
_cacheHitCount
cachesByPath
checkoutsByPath
setCachesByPath:
setCheckoutsByPath:
_cachesByPath
_checkoutsByPath
_setupDecryptCallbackForQueue:
decryptGroup
callback
initWithRecord:callbackQueue:
setDecryptGroup:
setCallback:
numUnwrapAttempts
setNumUnwrapAttempts:
_decryptGroup
_callback
_numUnwrapAttempts
isMarkedToFinish
recordDecryptGroup
_recordInfoWasDecrypted:withCompletion:
outstandingDecryptions
recordDecryptQueue
_decryptRecordInfo:
maxUnwrapAttempts
_clearProtectionDataForRecordInfo:
recordNamesForFakingDecryptionFailure
hasPropertiesRequiringDecryption
_handleProtectionDataForRecordInfo:
_unwrapEncryptedPropertiesOnRecord:withPCS:
_decryptRecordPCSForRecord:usingZonePCS:
_decryptRecordPCSForRecord:usingSharePCS:
_decryptRecordPCSForRecord:usingChainPCS:
_decryptRecordInfo:usingWebSharingIdentityData:
_handleZoneProtectionDataForRecordInfo:
_handleShareProtectionDataForRecordInfo:
_unwrapAssetKeyForAsset:inRecordWithID:forField:withPCS:
_unwrapPackageAssets:inRecordWithID:forField:withPCS:
_unwrapEncryptedPropertiesForRecordValueStore:withPCS:
isStarted
setMarkedToFinish:
_finishDecryptOperation
setOutstandingDecryptions:
setRecordDecryptGroup:
setRecordDecryptQueue:
setMaxUnwrapAttempts:
_markedToFinish
_outstandingDecryptions
_recordDecryptGroup
_recordDecryptQueue
_maxUnwrapAttempts
setPreferAnonymousRequests:
setSourceApplicationSecondaryIdentifier:
isCKInternalMetric
setMetricUUID:
eventName
startTime
endTime
attributes
reportMetricWithOptions:genericMetricType:eventName:startTime:endTime:attributes:
_infoFetchedGroup
_MMCSManifestItem
_MMCSSectionItems
primaryServiceName
identitySet
initWithIdentitySet:withPrimaryServiceName:
identityString
_identityString
_identitySet
_primaryServiceName
setCachedAccountDSID:
setPCSIdentityWrappersByServiceName:
PCSIdentityWrappersByServiceName
serviceIsManatee:
manateeIsAvailableWithError:
cachedAccountDSID
_copyTestAccountIdentitySetForService:forBackingFakeAccount:withError:
_createIdentitySetForService:dsid:error:
_cacheIdentitySet:forService:
_hasCurrentKeyForService:inIdentitySet:withError:
_createSpecialInMemorySetCombiningLiverpoolWithServiceNamed:dsid:error:
_copyIdentityForService:useCache:validateCurrentKey:error:
_copyPublicKeyDataForIdentitySet:withService:withError:
_copyPublicKeyDataForAllIdentitiesInSet:withService:
_addIdentitiesFromServiceNamed:dsid:toMutableSet:
sharedFakeIdentitySetsByServiceByUsername
_copyStingrayIdentitiesForService:forBackingFakeAccount:withError:
_getTestAccountIdentitySetForService:forBackingFakeAccount:withError:
debugIdentity
setDebugIdentity:
_cachedAccountDSID
_PCSIdentityWrappersByServiceName
_debugIdentity
setAttestationResponse:
_attestationResponse
accountWithIdentifier:
_initWithParentAccount:inStore:
aa_primaryAppleAccount
aa_primaryEmail
aa_personID
aa_firstName
aa_lastName
aa_regionInfo
aa_isPrimaryEmailVerified
isEnabledForDataclass:
aa_isSuspended
credentialWithError:
_accountCredentialForAccount:withError:
aa_updatePropertiesForAppleAccount:completion:
aa_useCellularForDataclass:
propertiesForDataclass:
aa_setPassword:
initWithUsername:password:
personID
altDSID
responseDictionary
initWithRequest:handler:
setHandlerQueue:
setParentAppleAccount:
_parentAppleAccount
_cancelOnCallbackQueueIfNecessary
operationProgressedBlock
setCachedResult:
didHandleCancel
setDidHandleCancel:
cachedResult
_didHandleCancel
_operationProgressedBlock
_cachedResult
hasDiscoverable
_handleRetrievedPrivacySettings:
addUploadTokens:
addContentResponseHeaders:
uploadTokensCount
clearUploadTokens
uploadTokensAtIndex:
clearContentResponseHeaders
contentResponseHeadersAtIndex:
uploadTokensType
contentResponseHeadersType
hasAuthPutResponse
setUploadTokens:
setContentResponseHeaders:
_contentResponseHeaders
_uploadTokens
_fetchMetadataForShares
_prepareShareMetadata
_fetchAcceptedShares
_decryptShareMetadata
_acceptShares
shareURLsToAccept
acceptedShareURLsToFetch
acceptCompletionBlock
_performCallbackForURL:withShare:error:
shareMetadatasToAcceptByURL
_callingParticipantOONForShareMetadata:
publicProtectionEtag
numShareAcceptAttempts
setNumShareAcceptAttempts:
_handleShareURLAccepted:forShare:responseCode:
clientProvidedMetadatasByURL
sharingServiceTypeForShareMetadata:
participantStatus
_keySwapForOONParticipant:
_validateInvitedPCSCanBeDecryptedForShare:
setShareURLsToAccept:
setClientProvidedMetadatasByURL:
setAcceptedShareURLsToFetch:
setShareMetadatasToAcceptByURL:
_acceptCompletionBlock
_clientProvidedMetadatasByURL
_shareURLsToAccept
_acceptedShareURLsToFetch
_shareMetadatasToAcceptByURL
_numShareAcceptAttempts
hasUuid
recordVersionsFetchedBlock
_recordVersionsFetchedBlock
setLength:
replaceBytesInRange:withBytes:length:
_data
_recordPCS
_finishGenerator
isValid
setValid:
generator
setGenerator:
_valid
_generator
_initWithContainerScopedUserID:orgAdminUserID:packageStagingDirectory:databaseScope:
initWithResponseUUID:contentResponseHeaders:contentResponseBody:
overriddenContainerScopedUserID
CKDPIdentifier_User
_isDefaultUserNameFromServer:
_isDefaultUserNameFromClient:
CKDPIdentifier_Record
defaultRecordZone
pRecordIdentifierFromUserRecordName:
pContainerScopedRecordZoneIdentifierFromFromPRecordZoneIdentifier:
userNameFromPIdentifier:error:
initWithZoneName:ownerName:
CKDPIdentifier_Zone
pUserIdentifierFromUserRecordName:
setOwnerIdentifier:
pContainerScopedUserIdentifierFromPUserIdentifier:
CKDPIdentifier_ShareId
initWithRecordID:action:
referenceAction
_initSkippingValidationWithRecordType:recordID:
hasEncryptedPublicSharingKey
recordIDFromPUserName:error:
setCreatorUserRecordID:
setLastModifiedUserRecordID:
recordIDFromPShareIdentifier:error:
setParent:
_valueTypeIsAnEncryptedBytesTypeForField:
creatorUserRecordID
pIdentifierFromUserRecordID:
lastModifiedUserRecordID
pShareFromShare:forCache:
dontCreateValidatingParentReferences
canHostServerURLInfo
encryptedFullTokenData
_pRecordFromRecordSansValues:forCache:
changedKeysSet
setByAddingObjectsFromSet:
setConstructedAssetDownloadURLTemplate:
packageStagingDirectory
packageInDaemonWithBasePath:error:
downloadURLExpirationDate
setUploadURLExpirationDate:
setDownloadURLExpirationDate:
predicate
sortDescriptors
errorCode
reason
predicateWithValue:
initWithRecordType:predicate:subscriptionID:options:
initWithZoneID:subscriptionID:
initWithSubscriptionID:
setNotificationInfo:
shouldBadge
_setShouldBadgeNoValidate:
shouldSendContentAvailable
_setShouldSendContentAvailableNoValidate:
shouldSendMutableContent
_setShouldSendMutableContentNoValidate:
collapseIdKey
setCollapseIDKey:
additionalFields
hasAlert
alert
_setAlertBodyNoValidate:
_setAlertLocalizationKeyNoValidate:
_setAlertLocalizationArgsNoValidate:
_setTitleNoValidate:
_setTitleLocalizationKeyNoValidate:
_setTitleLocalizationArgsNoValidate:
_setSubtitleNoValidate:
_setSubtitleLocalizationKeyNoValidate:
_setSubtitleLocalizationArgsNoValidate:
_setAlertActionLocalizationKeyNoValidate:
_setAlertLaunchImageNoValidate:
_setSoundNameNoValidate:
_setCategoryNoValidate:
_subscriptionOptions
setAdditionalFields:
setShouldBadge:
setShouldSendContentAvailable:
setShouldSendMutableContent:
collapseIDKey
setCollapseIdKey:
setAlert:
alertBody
alertLocalizationKey
alertLocalizationArgs
titleLocalizationKey
titleLocalizationArgs
subtitleLocalizationKey
subtitleLocalizationArgs
alertActionLocalizationKey
alertLaunchImage
setInvitedKeysToRemove:
_initWithShareRecordID:
_setPublicPermissionNoSideEffects:
setParticipantVisibility:
setAllowsAnonymousPublicAccess:
setAllParticipants:
resetFetchedParticipants
registerFetchedParticipant:
pParticipantFromShareParticipant:forCache:
participantVisibility
allowsAnonymousPublicAccess
invitedProtectionEtag
setUserRecordID:
setInviterID:
setRole:
identityDelegate
familyName
givenName
inviterID
isOrgAdminUser
invitationTokenStatus
payload
notificationFromRemoteNotificationDictionary:
setNotificationUUID:
setNotificationID:
hasDialog
dialog
setAlertBody:
setAlertLocalizationKey:
setAlertLocalizationArgs:
setTitleLocalizationKey:
setTitleLocalizationArgs:
setSubtitleLocalizationKey:
setSubtitleLocalizationArgs:
setAlertActionLocalizationKey:
setAlertLaunchImage:
sound
setBadge:
hasIsRead
isRead
setNotificationType:
pAliasWithEmailAddress:
pAliasWithUserRecordID:
pAliasWithPhoneNumber:
pAliasWithHashedStringID:type:
pUserID
capabilitiesFromPZoneCapabilities:
identityFromPUser:
setPackageStagingDirectory:
downloadPreauthorizationMap
setDownloadPreauthorizationMap:
_dontCreateValidatingParentReferences
_packageStagingDirectory
_identityDelegate
_overriddenContainerScopedUserID
_downloadPreauthorizationMap
setDiscoverableTrinary:
discoverableTrinary
_discoverableTrinary
shouldEncodePCSData
initWithPCSData:
_pcs
_pcsKeyID
_encryptedChainPCSPrivateKey
initWithRecord:
setZoneishPublicKeyID:
setShareID:
setParentID:
initWithPCSData:recordID:
_parentID
_chainParentPublicKeyID
_zonePCSData
_zoneishPublicKeyID
_shareID
_chainPCSData
_encryptedPublicSharingKey
initWithZone:
setZoneishPCSData:
_zoneishPCS
_zoneishPCSData
initWithShareID:pcsData:
setMyParticipantPermission:
setMyParticipantRole:
setPublicPermission:
myParticipantPermission
myParticipantRole
_publicPCS
_serviceType
_publicPermission
_myParticipantRole
_myParticipantPermission
_myParticipantPCS
_myParticipantPCSData
setHasDiscoverable:
hasPath
setUser:
hasUser
_user
CKSQLiteClassName
_volumeIndex
_volumeUUID
sharedLongLivedProxies
_sharedLongLivedProxyForContext:
methodSignatureForSelector:
invocationWithMethodSignature:
setTarget:
setSelector:
setArgument:atIndex:
invoke
badgeValue
initWithBadgeValue:
_badgeValue
setHasServiceType:
hasServiceType
serviceTypeAsString:
StringAsServiceType:
hasConfig
_initWithStartDate:
requestOperationCountsByType
setRequestOperationCountsByType:
totalBytesByChunkProfile
setTotalBytesByChunkProfile:
chunkCountByChunkProfile
setChunkCountByChunkProfile:
fileCountByChunkProfile
setFileCountByChunkProfile:
operationState
initWithOperationState:startDate:duration:
encodeDouble:forKey:
encodeInt64:forKey:
decodeDoubleForKey:
decodeInt64ForKey:
rangesCopy
_duration
_queueing
_executing
_bytesUploaded
_bytesDownloaded
_connections
_connectionsCreated
_recordsUploaded
_recordsDownloaded
_recordsDeleted
_assetsUploaded
_assetsUploadedFileSize
_assetsDownloaded
_assetsDownloadedFileSize
_requestCount
_retries
_requestOperationCountsByType
_totalBytesByChunkProfile
_chunkCountByChunkProfile
_fileCountByChunkProfile
absoluteStart
absoluteStop
compareStartTime:
compareStopTime:
relativeStart
_operationState
initWithCloudKitMetrics:andMMCSMetrics:
selector
instancesRespondToSelector:
instanceMethodSignatureForSelector:
weAreNeverEverEverUsingEncryption:
forwardInvocation:
PCSManagerSuperclass
setPCSManagerSuperclass:
_PCSManagerSuperclass
lookupService
_lookupService
_fetchBatchSize
sendAllFields
oplock
requestedFieldsByRecordID
recordByRequestID
recordPostedBlock
setOplock:
setSendAllFields:
setRequestedFieldsByRecordID:
setRecordByRequestID:
_oplock
_sendAllFields
_recordPostedBlock
_requestedFieldsByRecordID
_recordByRequestID
setRequestTime:
setRequestMethod:
setRequestURL:
setRequestHeaders:
setBodyStreamResetCount:
setRequestObjects:
setResponseStatus:
setResponseObjects:
_requestTime
_requestMethod
_requestURL
_requestHeaders
_bodyStreamResetCount
_requestObjects
_responseStatus
_responseTime
_responseObjects
clientConfigsCount
clearClientConfigs
clientConfigAtIndex:
setAccountConfig:
clientConfigType
serializationFormat
setHasSerializationFormat:
hasSerializationFormat
serializationFormatAsString:
StringAsSerializationFormat:
hasAccountConfig
hasRequestContext
clientConfigs
setClientConfigs:
accountConfig
requestContext
_accountConfig
_clientConfigs
_requestContext
_serializationFormat
addChangedZones:
changedZonesCount
clearChangedZones
changedZonesAtIndex:
changedZonesType
setChangedZones:
_changedZones
setClientVersionETagMatch:
setHasClientVersionETagMatch:
hasClientVersionETagMatch
_clientVersionETagMatch
mountToPath
setMountToPath:
_mountToPath
failIfNotDoneAllRegularAndSectionAndRereferenceItemsWithError:
setAssetZone:
_isFailed
_useMMCSEncryptionV2
_assetZone
assetMetadata
packages
packageMetadata
unavailableAssets
unavailablePackages
arrayByAddingObjectsFromArray:
_fetchAssetMetadata
_uploadAssetsModify
_updateMissingAssetServerStatus
assetOrPackageUUIDToMetadata
assetOrPackageUUIDToOriginalRecord
UUIDToAssetOrPackage
assetOrPackageForMetadata:inRecord:
assetOrPackageRepairedBlock
setAssetOrPackageUUIDToUploadError:
setUploadedAssetOrPackageUUIDs:
setUploadOperation:
uploadedAssetOrPackageUUIDs
assetOrPackageUUIDToUploadError
repairErrorShouldBeMarkedAsBroken:
unavailableAssetsAndPackages
setUpdateOperation:
setUUIDToAssetOrPackage:
setAssetOrPackageUUIDToMetadata:
setUnavailableAssetsAndPackages:
uploadOperation
updateOperation
setAssetOrPackageUUIDToOriginalRecord:
_assetOrPackageRepairedBlock
_UUIDToAssetOrPackage
_assetOrPackageUUIDToMetadata
_unavailableAssetsAndPackages
_uploadOperation
_updateOperation
_assetOrPackageUUIDToOriginalRecord
_assetOrPackageUUIDToUploadError
_uploadedAssetOrPackageUUIDs
isConstructedAsset
trackingID
_sizeForItem:
_updateTotalBytes
_updateTotalCompletedBytes
lastItemPercentage
hasCachedTotalBytes
setHasCachedTotalBytes:
hasCachedCompletedBytes
setHasCachedCompletedBytes:
cachedTotalBytes
setCachedTotalBytes:
cachedCompletedBytes
setCachedCompletedBytes:
completedBytesByItems
setCompletedBytesByItems:
setTrackingID:
_hasCachedTotalBytes
_hasCachedCompletedBytes
_lastItemPercentage
_cachedTotalBytes
_cachedCompletedBytes
_completedBytesByItems
_trackingID
_lockedFetchesAreReady
runningFetches
queuedFetches
maximumQueuedFetchWaitTime
_lockedRescheduleFetchTimer
_lockedTearDownFetchTimer
timerSource
setTimerSource:
_lockedGetQueuedFetchForOperation:ofClass:
setQueuedFetches:
setRunningFetches:
_queuedFetches
_runningFetches
_timerSource
setHasMaxChangedZones:
hasMaxChangedZones
maxChangedZones
_maxChangedZones
modTime
statusDescription
isEqualToAssetHandle:keys:differencesDescription:
_UUID
_lastUsedTime
_modTime
setApplicationBundleId:
setClientInfo:
setUserAgent:
databaseEnvironment
setHasDatabaseEnvironment:
hasDatabaseEnvironment
databaseEnvironmentAsString:
StringAsDatabaseEnvironment:
databaseType
setHasDatabaseType:
hasDatabaseType
databaseTypeAsString:
StringAsDatabaseType:
hasDeviceId
hasApplicationBundleId
setDatabasePartition:
setHasDatabasePartition:
hasDatabasePartition
hasClientInfo
setHasDsid:
hasDsid
hasUserAgent
hasOperationGroup
deviceId
applicationBundleId
databasePartition
clientInfo
userAgent
_applicationBundleId
_clientInfo
_databaseEnvironment
_databasePartition
_databaseType
_deviceId
_operationGroup
_userAgent
notificationUUID
notificationIDsByRequestID
setNotificationIDsByRequestID:
notificationMarkedReadProgressBlock
_notificationMarkedReadProgressBlock
_notificationIDsByRequestID
fetch:args:
initWithVersion:function:shouldVacuum:shouldTruncate:
upgradeFunction
setUpgradeFunction:
shouldVacuum
setShouldVacuum:
shouldTruncateDatabase
setShouldTruncateDatabase:
_shouldVacuum
_shouldTruncateDatabase
_upgradeFunction
dbHandle
_setupConnectionWithError:
_truncateAndReconnectToDatabaseWithError:
executeRaw:
sqlBatchTime
sqlBatchCount
useSerialQueue
removeCorruptDatabaseWithError:
setSqliteErrorHandler:
sqliteErrorHandler
setAutoRollbackHandler:
setLabel:
shouldProfileSQL
setTraced:
setCrashIfUsedAfterClose:
setStatementCacheMaxCount:
_newConnection:
_setupCacheWithError:
openHandles
setOpenHandles:
_lockedOpenDatabase:
removeDatabaseFilesWithError:
performOnDBQueue:
_closeWithError:force:
forceCloseWithError:
resetWithError:
setDbQueue:
_pdb
_contexts
_dbQueue
_openHandles
recordZoneModifiedBlock
_recordZoneModifiedBlock
zoneIDByRequestID
recordZoneFetchedBlock
setCurrentServerChangeToken:
setNeedsZoneishPCSRolled:
setZonePCSModificationDate:
setZonePCSLastModifierDevice:
recordZones
setZoneIDByRequestID:
_recordZones
_recordZoneFetchedBlock
_zoneIDByRequestID
metadata
assetBrokenBlock
setMetadata:
_assetBrokenBlock
_metadata
hasEncryptedKey
hasBaseToken
setDialog:
setSound:
setPayload:
setIsRead:
setHasIsRead:
setHasSource:
hasSource
sourceAsString:
StringAsSource:
hasSound
hasPayload
_dialog
_payload
_sound
_isRead
_tokenRegistered
setIsApplication:
_isCKSystemService
_canMasquerade
_canSetEnvironment
_allowCustomAccounts
_canAccessProtectionData
_canAccessZoneProtectionData
_canSetDeviceIdentifier
_hasAccessDuringBuddy
_hasLightweightPCS
_hasTCCAuthorization
_isOOPUI
_allowsParticipantPII
_displaysSystemAcceptPrompt
_canUseNonLegacyShareURL
_allowUnverifiedAccount
_canSetExplicitCodeOperationURL
_isApplication
_applicationIdentifier
_clientPrefix
_pushBundleID
_associatedApplicationBundleID
inlock_setDateOfLastTokenUpdate:
select:from:
accountsWithAccountTypeIdentifiers:error:
stringByAppendingFormat:
datePropertyForKey:
setDateProperty:forKey:
inlock_applicationMetadataForApplicationBundleID:sourceApplicationBundleID:
update:set:where:bindings:limit:
selectAllObjectsOfClass:
inlock_containerInfoForContainerID:accountID:
expungeStaleAccountIDs
dateOfLastTokenUpdate
knownApplicationBundleIDs
knownContainerizedApplicationBundleIDs
removeKnownApplicationBundleID:sourceApplicationBundleID:
setDownloadURLTemplate:
addAdditionalFields:
additionalFieldsCount
clearAdditionalFields
additionalFieldsAtIndex:
additionalFieldsType
setHasShouldBadge:
hasShouldBadge
setHasShouldSendContentAvailable:
hasShouldSendContentAvailable
setHasShouldSendMutableContent:
hasShouldSendMutableContent
hasCollapseIdKey
_additionalFields
_alert
_collapseIdKey
_shouldBadge
_shouldSendContentAvailable
_shouldSendMutableContent
_lockedSetManateeAvailableForLoggedInAccount:
setLastCDPError:
_fetchManateeAvailability:
manateeAvailableForLoggedInAccount
lastCDPError
_lockedFetchAndUpdateManateeAvailability
initWithDSID:
accountStatus
handleUpdateNotificationWithAvailability:
_manateeAvailableForLoggedInAccount
_lastCDPError
mutableBytes
cStringUsingEncoding:
standardUserDefaults
stringArrayForKey:
boolForKey:
certificate
setCertificate:
applicationEnclaveQuote
setApplicationEnclaveQuote:
quotingEnclaveQuote
setQuotingEnclaveQuote:
_certificate
_applicationEnclaveQuote
_quotingEnclaveQuote
decrypt:
secret
setSecret:
_secret
#16@0:8
@24@0:8^{_NSZone=}16
B16@0:8
i16@0:8
v20@0:8i16
v20@0:8B16
@20@0:8i16
i24@0:8@16
v16@0:8
v24@0:8@16
Q16@0:8
@24@0:8Q16
@16@0:8
B24@0:8@16
@"NSString"
@"CKDPProtectionInfo"
@"CKDPZone"
@"NSMutableArray"
@"CKDPShareMetadata"
@"CKDPRecord"
{?="containerEnvironment"b1}
@48@0:8@16@24@32@40
@"NSArray"
@48@0:8@16@24@32q40
B32@0:8@16@24
@32@0:8@16@24
Q24@0:8@16
v32@0:8@16@24
v32@0:8@16@?24
q16@0:8
v24@0:8q16
@"CKSQLite"
@"CKSQLitePool"
@"CKDClientContext"
@"NSObject<OS_dispatch_queue>"
@"NSDate"
I16@0:8
@24@0:8@16
@"CKRecordID"
@"NSMutableDictionary"
@"NSNumber"
v40@0:8@16q24@?32
@32@0:8@16q24
v24@0:8Q16
{?="storageAvailableBytes"b1}
@32@0:8@16@?24
@?16@0:8
v24@0:8@?16
@"CKDMMCSItemGroupSet"
@"CKDOperation"
@"NSObject<OS_dispatch_group>"
@"CKDPDate"
v32@0:8^{_OpaquePCSShareProtection=}16@24
v40@0:8@16@24@?32
v60@0:8@16q24@32B40@44@?52
v32@0:8@16q24
v68@0:8@16q24@32B40@44@52@?60
v40@0:8^{_OpaquePCSShareProtection=}16@24@32
v48@0:8^{_OpaquePCSShareProtection=}16@24@32@40
@"NSData"
{?="moreAvailable"b1}
v64@0:8@16@24@32Q40@?48@?56
v40@0:8@16@24q32
@40@0:8@16Q24@32
v56@0:8@16@24Q32@?40@?48
v48@0:8@16@24Q32@?40
v48@0:8@16@24q32@?40
v56@0:8@16@24@32q40@?48
@"CKDPCSSQLCache"
@"CKDPCSMemoryCache"
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8Q16@24@?32
v40@0:8@16@24@32
v52@0:8@16@24@32i40@44
v48@0:8@16Q24q32@?40
v36@0:8@16B24@?28
v44@0:8Q16B24@28@?36
v44@0:8@16@24B32@?36
v32@0:8@"NSString"16@?<v@?>24
v32@0:8@"CKContainerSetupInfo"16@?<v@?q@"NSError">24
v32@0:8@"CKContainerSetupInfo"16@?<v@?@"CKAccountInfo"@"NSError">24
v32@0:8@"CKContainerSetupInfo"16@?<v@?@"NSString"@"NSString"@"NSError">24
v40@0:8Q16@"CKContainerSetupInfo"24@?<v@?q@"NSError">32
v32@0:8@"CKContainerSetupInfo"16@?<v@?@"NSArray"@"NSError">24
v32@0:8@"CKContainerSetupInfo"16@?<v@?@"NSString"@"NSError">24
v32@0:8@"CKDiscoverUserIdentitiesOperationInfo"16@?<v@?>24
v32@0:8@"CKFetchShareParticipantsOperationInfo"16@?<v@?>24
v32@0:8@"CKFetchRecordsOperationInfo"16@?<v@?>24
v32@0:8@"CKModifyRecordsOperationInfo"16@?<v@?>24
v32@0:8@"CKFetchRecordZoneChangesOperationInfo"16@?<v@?>24
v32@0:8@"CKFetchRecordVersionsOperationInfo"16@?<v@?>24
v32@0:8@"CKFetchArchivedRecordsOperationInfo"16@?<v@?>24
v32@0:8@"CKArchiveRecordsOperationInfo"16@?<v@?>24
v32@0:8@"CKPublishAssetsOperationInfo"16@?<v@?>24
v32@0:8@"CKRepairAssetsOperationInfo"16@?<v@?>24
v32@0:8@"CKMarkAssetBrokenOperationInfo"16@?<v@?>24
v32@0:8@"CKModifyWebSharingOperationInfo"16@?<v@?>24
v32@0:8@"CKContainerSetupInfo"16@?<v@?@"CKEncryptedData"@"NSError">24
v32@0:8@"CKContainerSetupInfo"16@?<v@?@"NSData"@"NSError">24
v32@0:8@"CKContainerSetupInfo"16@?<v@?@"NSObject<OS_xpc_object>"@"NSError">24
v32@0:8@"CKModifyRecordAccessOperationInfo"16@?<v@?>24
v32@0:8@"CKQueryOperationInfo"16@?<v@?>24
v32@0:8@"CKModifySubscriptionsOperationInfo"16@?<v@?>24
v32@0:8@"CKFetchSubscriptionsOperationInfo"16@?<v@?>24
v32@0:8@"CKModifyRecordZonesOperationInfo"16@?<v@?>24
v32@0:8@"CKFetchRecordZonesOperationInfo"16@?<v@?>24
v32@0:8@"CKFetchDatabaseChangesOperationInfo"16@?<v@?>24
v32@0:8@"CKModifyBadgeOperationInfo"16@?<v@?>24
v32@0:8@"CKFetchNotificationChangesOperationInfo"16@?<v@?>24
v32@0:8@"CKMarkNotificationsReadOperationInfo"16@?<v@?>24
v32@0:8@"CKAcceptSharesOperationInfo"16@?<v@?>24
v32@0:8@"CKCompleteParticipantVettingOperationInfo"16@?<v@?>24
v32@0:8@"CKFetchShareMetadataOperationInfo"16@?<v@?>24
v32@0:8@"CKFetchShareParticipantKeyOperationInfo"16@?<v@?>24
v40@0:8@"CKShare"16@"CKContainerSetupInfo"24@?<v@?@"CKShare"@"NSError">32
v32@0:8@"CKInitiateParticipantVettingOperationInfo"16@?<v@?>24
v32@0:8@"CKDatabaseOperationInfo"16@?<v@?>24
v32@0:8@"CKFetchWebAuthTokenOperationInfo"16@?<v@?>24
v32@0:8@"CKOperationInfo"16@?<v@?>24
v32@0:8@"CKCodeFunctionInvokeOperationInfo"16@?<v@?>24
v40@0:8@"NSArray"16@"CKContainerSetupInfo"24@?<v@?@"NSArray"@"NSError">32
v32@0:8@"CKContainerSetupInfo"16@?<v@?@"NSPersonNameComponents"@"NSString"@"NSString"@"NSError">24
v32@0:8@"CKAggregateZonePCSOperationInfo"16@?<v@?>24
v32@0:8@"NSFileHandle"16@?<v@?@"NSError">24
v40@0:8@"NSError"16@"NSString"24@"CKContainerSetupInfo"32
v52@0:8@"CKDPResponseOperationResult"16@"NSString"24@32i40@"CKContainerSetupInfo"44
v40@0:8@"CKContainerSetupInfo"16q24@?<v@?Q@"NSError">32
v40@0:8@"CKContainerSetupInfo"16q24@?<v@?@"NSError">32
v32@0:8@"CKContainerSetupInfo"16q24
v40@0:8@"CKContainerSetupInfo"16@"CKRecordID"24q32
v48@0:8@"CKContainerSetupInfo"16Q24q32@?<v@?@"NSError">40
v48@0:8@"CKContainerSetupInfo"16@"CKRecordID"24q32@?<v@?@"NSError">40
v48@0:8@"CKContainerSetupInfo"16@"CKRecordZoneID"24q32@?<v@?@"NSError">40
v32@0:8@"CKContainerSetupInfo"16@?<v@?@"NSError">24
v32@0:8@"CKContainerSetupInfo"16@?<v@?Q@"NSError">24
v36@0:8@"NSString"16B24@?<v@?@>28
v32@0:8@"NSString"16@"NSArray"24
v40@0:8@"NSString"16@"NSString"24@"NSArray"32
v32@0:8@"NSString"16@?<v@?@"NSError">24
v32@0:8@"NSString"16q24
v44@0:8Q16B24@"CKContainerSetupInfo"28@?<v@?q@"NSError">36
v40@0:8Q16@"CKContainerSetupInfo"24@?<v@?@"NSArray"@"NSError">32
v24@0:8@"NSArray"16
v40@0:8@"NSString"16@"CKContainerSetupInfo"24@?<v@?@"NSString"B@"NSError">32
v44@0:8@"CKEventMetricInfo"16@"CKContainerSetupInfo"24B32@?<v@?>36
v32@0:8@"CKContainerSetupInfo"16@?<v@?@"CKPCSDiagnosticInformation">24
v32@0:8@"CKContainerSetupInfo"16@?<v@?@"NSArray">24
v32@0:8@"CKRepairZonePCSOperationInfo"16@?<v@?>24
v48@0:8@16Q24Q32@?40
v40@0:8@"NSDictionary"16@"NSString"24@?<v@?@"NSDictionary"@"NSError">32
v32@0:8@"NSDictionary"16@"NSString"24
v32@0:8@"CKOperationResult"16@"NSString"24
v32@0:8@"CKFileOpenInfo"16@?<v@?@"CKFileOpenResult"@"NSError">24
v40@0:8@"NSFileHandle"16@"CKFileOpenInfo"24@?<v@?@"CKFileMetadata"@"NSError">32
v48@0:8@"NSString"16Q24Q32@?<v@?@"NSData"@"NSError">40
v32@0:8@"NSArray"16@?<v@?>24
@"NSXPCListener"
@"NSObject<OS_dispatch_source>"
@"NSOperationQueue"
@"CKDPAssetsToDownload"
@"CKDPRecordRetrieveRequestRetrieveAssetURL"
@"CKDPRecordIdentifier"
@"CKDPRequestedFields"
{?="shouldFailBatch"b1}
@"CKDClientProxy"
@32@0:8@16^@24
B24@0:8Q16
B32@0:8@16^@24
q24@0:8q16
q24@0:8@16
@40@0:8@16@24^@32
@48@0:8@16Q24Q32^@40
@20@0:8B16
B24@0:8^@16
@"NSMutableSet"
@"NSDictionary"
@"<NSObject>"
@"NSXPCConnection"
@"CKDPCSFetchAggregator"
@40@0:8@16^@24^q32
@44@0:8@16@24@32B40
@48@0:8@16@24@32B40B44
@40@0:8@16@24@32
@28@0:8@16B24
@32@0:8q16q24
v40@0:8q16@24@?32
v24@0:8@"CKDURLRequest"16
@"NSURL"32@0:8q16q24
@"NSString"24@0:8@"CKDOperation"16
v32@0:8@"CKDOperation"16@?<v@?@"CKDServerConfiguration"@"NSError">24
v40@0:8q16@"CKDOperation"24@?<v@?@"NSURL"@"NSError">32
v32@0:8@"CKDOperation"16@?<v@?@"NSString"@"NSString"@"NSError">24
v32@0:8@"CKDOperation"16@?<v@?q@"NSError">24
@"CKDServerConfiguration"16@0:8
@"CKDFlowControlManager"16@0:8
@"CKDPCSManager"16@0:8
@"CKDZoneGatekeeper"16@0:8
@"CKContainerID"16@0:8
B40@0:8@16^@24^@32
@64@0:8@16{?=[8I]}24^@56
v32@0:8^v16@?24
d16@0:8
v44@0:8@16@24@32i40
Q24@0:8q16
v20@0:8I16
@"CKDServerConfiguration"
@"NSURL"
@"NSHashTable"
@"CKContainerID"
@"CKDAppContainerTuple"
@"CKDAccount"
@"CKAccountOverrideInfo"
@"CKDMMCS"
@"CKDPCSCache"
@"CKDZoneGatekeeper"
@"CKDCachePurger"
@"CKDKeyValueDiskCache"
@"CKDPublicIdentityLookupService"
@"CKDAppContainerIntersectionMetadata"
@"CKDApplicationMetadata"
@"CKDFlowControlManager"
@"CKDPCSManager"
v24@0:8d16
@"CKDPCSData"
@"CKDPLocationCoordinate"
@"CKDPRecordFieldIdentifier"
{?="order"b1}
@24@0:8^@16
B56@0:8Q16*24Q32^Q40^@48
@"CKFileMetadata"24@0:8^@16
@"CKDMMCSItemGroupContext"16@0:8
@"CKDMMCSItem"16@0:8
@"CKDMMCSItemGroupContext"
@"CKDMMCSItem"
@"NSMutableIndexSet"
@"CKDPUserPrivacySettings"
{?="applicationContainerEnvironment"b1}
@"PQLConnection"
@"<CKDURLRequestPipelining>"
@"<CKDOperationPipelining>"
@24@0:8q16
v40@0:8@"CKDURLRequest"16@"CKDOperationMetrics"24@"NSDictionary"32
@28@0:8B16B20B24
v56@0:8#16@24@32@40@?48
v48@0:8#16@24@32@?40
v40@0:8#16@24@?32
@"NSObject<OS_os_activity>"
@"CKDURLRequest"
@"NSError"
@"CKDOperationMetrics"
@"CKOperationInfo"
@"CKDPResponseOperationResultError"
{?="code"b1}
@48@0:8@16@24@?32@40
@"<CKDZoneGatekeeperWaiter>"
@"NSMutableOrderedSet"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@"NSObject<OS_dispatch_queue>"16@0:8
v24@0:8@"NSObject<OS_dispatch_queue>"16
@"CKQuery"
@"CKQueryCursor"
@"NSSet"
@"CKRecordZoneID"
@"CKDRecordFetchAggregator"
@"CKDPRecordZoneIdentifier"
{?="onlyFetchPCSInfo"b1}
v56@0:8@16^{_OpaquePCSShareProtection=}24^{_OpaquePCSShareProtection=}32@40@?48
B40@0:8@16@24@32
B40@0:8@"OSLogPersistence"16@"NSArray"24@"NSError"32
v32@0:8@"NSDate"16@"NSDate"24
B32@0:8@"OSActivityStream"16@"NSArray"24
v24@0:8@"OSActivityStream"16
v32@0:8@"OSActivityStream"16@"NSError"24
B40@0:8@"OSActivityStream"16@"NSArray"24@"NSError"32
@"OSLogPersistence"
@"OSActivityStream"
@56@0:8@16@24@32@40@48
@"CKDQueuedFetch"
v56@0:8@16@24@32@40@?48
v56@0:8@16@24q32q40q48
v48@0:8@16@24@32@?40
v36@0:8@16@24B32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSHTTPURLResponse"32@"NSURLRequest"40@?<v@?@"NSURLRequest">48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@?<v@?@"NSInputStream">32
v56@0:8@"NSURLSession"16@"NSURLSessionTask"24q32q40q48
v40@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSError"32
v48@0:8@"NSURLSession"16@"NSURLSessionTask"24@"NSURLRequest"32@?<v@?@"NSURLRequest">40
v32@0:8@"NSURLSession"16@"NSURLSessionTask"24
v36@0:8@"NSURLSession"16@"NSURLSessionTask"24B32
v48@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSURLResponse"32@?<v@?q>40
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSData"32
v40@0:8@"NSURLSession"16@"NSURLSessionDataTask"24@"NSError"32
q32@0:8@16@24
@"<CKDAccountInfoProvider>"
@"<CKDContextInfoProvider>"
@"<CKDAccountAccessInfoProvider>"
@"CKDResponseBodyParser"
@"CKDProtobufStreamWriter"
@"<CKDURLRequestMetricsDelegate>"
@"<CKDURLRequestAuthRetryDelegate>"
@"CKDProtocolTranslator"
@"NSURLSessionDataTask"
@"C2RequestOptions"
@"NSURLRequest"
@"NSHTTPURLResponse"
@"NSURLSession"
@"CKDTrafficLogger"
@"NSObject<OS_voucher>"
@"CKDTapToRadarRequest"
{?="badgeCount"b1"forDevice"b1}
{?="size"b1"lastSection"b1}
@40@0:8^{__CFError=}16q24@32
@24@0:8^{_OpaquePCSShareProtection=}16
B24@0:8@"NSString"16
@24@0:8@"NSString"16
B32@0:8@"NSData"16^@24
^{_PCSIdentityData=}16@0:8
Q24@0:8Q16
@32@0:8Q16^@24
^{_PCSPublicIdentityData=}32@0:8Q16^@24
^{_PCSIdentityData=}24@0:8^@16
^{_PCSIdentityData=}32@0:8@16@24
@48@0:8@16@24@32^@40
B48@0:8@16@24Q32^@40
@32@0:8^{_PCSIdentityData=}16^@24
^{_PCSIdentityData=}32@0:8@16^@24
^{_PCSPublicIdentityData=}32@0:8@16^@24
@40@0:8^{_PCSIdentitySetData=}16Q24^{_OpaquePCSShareProtection=}32
@32@0:8Q16^{_OpaquePCSShareProtection=}24
v32@0:8^{__CFError=}16@24
v28@0:8B16@?20
^{_OpaquePCSShareProtection=}24@0:8^@16
@32@0:8^{_OpaquePCSShareProtection=}16^@24
v52@0:8@16Q24Q32B40@?44
v40@0:8@16Q24@?32
B32@0:8Q16^@24
v36@0:8Q16B24@?28
^{_OpaquePCSShareProtection=}40@0:8@16Q24^@32
B40@0:8@16^{_OpaquePCSShareProtection=}24^@32
B24@0:8^{_OpaquePCSShareProtection=}16
B28@0:8^{_OpaquePCSShareProtection=}16B24
@28@0:8^{_OpaquePCSShareProtection=}16B24
@36@0:8^{_OpaquePCSShareProtection=}16^{_OpaquePCSShareProtection=}24B32
@32@0:8@16^{_OpaquePCSShareProtection=}24
@36@0:8^{_OpaquePCSShareProtection=}16B24^@28
@32@0:8^{_OpaquePCSShareProtection=}16Q24
^{_OpaquePCSShareProtection=}44@0:8^{_OpaquePCSShareProtection=}16^{_OpaquePCSShareProtection=}24B32^@36
^{_OpaquePCSShareProtection=}44@0:8^{__CFData=}16^{_OpaquePCSShareProtection=}24B32^@36
^{_OpaquePCSShareProtection=}52@0:8@16Q24^{_OpaquePCSShareProtection=}32B40^@44
^{_OpaquePCSShareProtection=}48@0:8@16Q24^{_OpaquePCSShareProtection=}32^@40
B48@0:8^{_OpaquePCSShareProtection=}16^{_OpaquePCSShareProtection=}24Q32^@40
B40@0:8^{_OpaquePCSShareProtection=}16^{_OpaquePCSShareProtection=}24^@32
B32@0:8^{_OpaquePCSShareProtection=}16^{_OpaquePCSShareProtection=}24
^{_OpaquePCSShareProtection=}40@0:8Q16Q24^@32
^{_OpaquePCSShareProtection=}32@0:8Q16^@24
v32@0:8^{_PCSPublicIdentityData=}16^{_OpaquePCSShareProtection=}24
^{_OpaquePCSShareProtection=}40@0:8Q16^{_OpaquePCSShareProtection=}24^@32
^{_OpaquePCSShareProtection=}32@0:8^{_PCSIdentityData=}16^@24
^{_OpaquePCSShareProtection=}44@0:8@16^{_PCSIdentityData=}24B32^@36
^{_OpaquePCSShareProtection=}40@0:8@16^{_PCSIdentityData=}24^@32
^{_OpaquePCSShareProtection=}52@0:8@16Q24Q32B40^@44
^{_OpaquePCSShareProtection=}48@0:8@16Q24Q32^@40
^{_OpaquePCSShareProtection=}40@0:8@16@24^@32
^{_OpaquePCSShareProtection=}32@0:8@16^@24
^{_PCSPublicIdentityData=}24@0:8^{_OpaquePCSShareProtection=}16
@44@0:8@16@24B32^@36
@40@0:8^{_PCSPublicIdentityData=}16^{_OpaquePCSShareProtection=}24Q32
@40@0:8^{_PCSIdentityData=}16^{_OpaquePCSShareProtection=}24Q32
@32@0:8^{_PCSPublicIdentityData=}16^{_OpaquePCSShareProtection=}24
@32@0:8^{_PCSIdentityData=}16^{_OpaquePCSShareProtection=}24
B32@0:8@16^{_OpaquePCSShareProtection=}24
@48@0:8@16^{_OpaquePCSShareProtection=}24@32^@40
@40@0:8@16^{_OpaquePCSShareProtection=}24@32
^{_OpaquePCSShareProtection=}48@0:8@16Q24^{_PCSIdentitySetData=}32^^{__CFError}40
@"<CKDContainerScopedUserIDProvider>"
@"CKDPCSIdentityManager"
v56@0:8@16@24@32@40@48
@"<CKDMMCSItemReaderWriterProtocol>"
{?="requestedSize"b1"uploadedSize"b1}
@"CKDPConfigurationFieldValue"
@56@0:8@16q24@32@40@?48
@"CKDAssetBatch"
@"CKDAssetTokenRequest"
@"NSMapTable"
^{_OpaquePCSShareProtection=}16@0:8
v24@0:8^{_OpaquePCSShareProtection=}16
^{_OpaquePCSShareProtection=}
@"CKShareMetadata"
@"CKDPCodeFunctionInvokeRequestAttestationRequest"
@"CKDPCodeFunctionInvokeRequestProtectedCloudComputeMetadata"
{?="userPurge"b1}
@56@0:8@16@24Q32@40@48
v80@0:8@16@24q32@40@48Q56q64@72
@"CKPackage"
@"CKAsset"
@"NSIndexSet"
@"CKDProgressTracker"
@"CKDMMCSRequestOptions"
@"CKDCancelTokenGroup"
v32@0:8@16d24
v36@0:8@16B24@28
v28@0:8@16B24
@"CKDPListRange"
{?="forceFetch"b1"shouldFetchRootRecord"b1}
@"CKDAssetZoneKey"
@"NSUserDefaults"
i28@0:8@16B24
@28@0:8i16@20
@32@0:8i16@20B28
@32@0:8d16d24
@36@0:8@16@24B32
@40@0:8q16Q24@32
@"<CKDSystemAvailabilityWatcher>"
@"APSConnection"
@32@0:8q16@24
@"CKDContainerInfo"
{?="reservedSize"b1"uploadURLExpirationTimeSeconds"b1}
v40@0:8@16@24Q32
@"CKDPShareIdentifier"
@"CKDPRecordStableUrl"
@40@0:8r^{?=i[16C]}16@24^@32
@28@0:8i16^@20
{?="lastWebActivityUTCMills"b1"corporateSharingEnabled"b1}
@"CKDPAsset"
{?="tokenExpiration"b1}
@"CKDPListPosition"
{?="insertAfter"b1}
@"CKLEventFilter"
@"NSDateFormatter"
@32@0:8@16Q24
@"CKDPResponseOperationResultErrorAuxiliaryErrorErrorUserInfoValue"
v52@0:8@16B24@28@36@?44
v32@0:8@"<CKDAccountAccessInfoProvider>"16@?<v@?@"NSString"@"NSError">24
@"NSString"32@0:8@"<CKDAccountAccessInfoProvider>"16^@24
v52@0:8@"NSString"16B24@"<CKDAccountAccessInfoProvider>"28@"NSString"36@?<v@?B@"NSError">44
@"CKAccountOverrideInfo"16@0:8
v52@0:8@16B24@28@?36@?44
@"ACAccountStore"
@"CKDBackingAccount"
v32@0:8@16Q24
v52@0:8@16@24@32@40B48
v32@0:8Q16@24
@"CKDPOplockFailure"
@"CKDPUniqueFieldFailure"
{?="type"b1}
v40@0:8^@16^@24Q32
v32@0:8@"NSStream"16Q24
@"NSInputStream"
@"NSOutputStream"
{z_stream_s="next_in"*"avail_in"I"total_in"Q"next_out"*"avail_out"I"total_out"Q"msg"*"state"^{internal_state}"zalloc"^?"zfree"^?"opaque"^v"data_type"i"adler"Q"reserved"Q}
@"NSFileHandle"
@"CKDPStreamingAssetIdentifier"
@"CKDPStreamingAssetRetrieveAssetResponse"
@"CKDPStreamingAssetSaveAssetRequest"
@"CKDPStreamingAssetSaveAssetResponse"
@"CKDPZoneCapabilities"
{?="assetQuotaUsage"b1"metadataQuotaUsage"b1"deviceCount"b1"zoneKeyRollAllowed"b1"zoneishPcsNeedsRolled"b1}
@"CKDPUserAlias"
{?="publicKeyRequested"b1}
B40@0:8@16@24^@32
@"CKDAssetRequestPlanner"
@"CKDPDateStatistics"
@"CKDPLocationBound"
{?="success"b1}
v48@0:8@16@24^{_OpaquePCSShareProtection=}32@40
@"NSOperation"
@"CKDPRecordSaveRequestConflictLoserUpdate"
@"CKDPRecordSaveRequestShareIdUpdate"
{?="saveSemantics"b1"merge"b1}
^{MGNotificationTokenStruct=}
v20@0:8f16
f16@0:8
@"CKDPRequestOperationHeaderAssetAuthorizeGetRequestOptions"
@"CKDPIdentifier"
@"CKDPLocale"
{?="applicationConfigVersion"b1"deviceFlowControlBudget"b1"deviceFlowControlBudgetCap"b1"deviceProtocolVersion"b1"globalConfigVersion"b1"operationGroupQuantity"b1"applicationContainerEnvironment"b1"deviceFlowControlRegeneration"b1"isolationLevel"b1"targetDatabase"b1"deviceSoftwareIsAppleInternal"b1}
@"CKDPRecordType"
@"CKDPArchiveRecordsResponse"
@"CKDPAssetUploadTokenRetrieveResponse"
@"CKDPBundlesForContainerResponse"
@"CKDPDeleteContainerResponse"
@"CKDPFetchArchivedRecordsResponse"
@"CKDPCodeFunctionInvokeResponse"
@"CKDPResponseOperationHeader"
@"CKDPMarkAssetBrokenResponse"
@"CKDPNotificationMarkReadResponse"
@"CKDPNotificationSyncResponse"
@"CKDPQueryRetrieveResponse"
@"CKDPRecordDeleteResponse"
@"CKDPRecordResolveTokenResponse"
@"CKDPRecordRetrieveChangesResponse"
@"CKDPRecordRetrieveResponse"
@"CKDPRecordRetrieveVersionsResponse"
@"CKDPRecordSaveResponse"
@"CKDPOperation"
@"CKDPResponseOperationResult"
@"CKDPSetBadgeCountResponse"
@"CKDPShareAcceptResponse"
@"CKDPShareVettingInitiateResponse"
@"CKDPSubscriptionCreateResponse"
@"CKDPSubscriptionDeleteResponse"
@"CKDPSubscriptionRetrieveResponse"
@"CKDPTokenRegistrationResponse"
@"CKDPTokenUnregistrationResponse"
@"CKDPUpdateMissingAssetStatusResponse"
@"CKDPUserAvailableQuotaResponse"
@"CKDPUserPrivacySettingsBatchLookupResponse"
@"CKDPUserPrivacySettingsResetResponse"
@"CKDPUserPrivacySettingsRetrieveResponse"
@"CKDPUserPrivacySettingsUpdateResponse"
@"CKDPUserQueryResponse"
@"CKDPUserRetrieveResponse"
@"CKDPWebAuthTokenRetrieveResponse"
@"CKDPZoneDeleteResponse"
@"CKDPZoneRetrieveChangesResponse"
@"CKDPZoneRetrieveResponse"
@"CKDPZoneSaveResponse"
{?="operationCost"b1}
{?="isDeleted"b1}
{?="type"b1"last"b1"synchronousMode"b1}
B20@0:8B16
v24@0:8#16
@"NSMutableData"
{?="contentRequestAuthorizeGetOptions"b1}
{?="requestedTTL"b1"type"b1}
@"CKDPArchiveRecordsRequest"
@"CKDPAssetUploadTokenRetrieveRequest"
@"CKDPBundlesForContainerRequest"
@"CKDPDeleteContainerRequest"
@"CKDPFetchArchivedRecordsRequest"
@"CKDPCodeFunctionInvokeRequest"
@"CKDPRequestOperationHeader"
@"CKDPMarkAssetBrokenRequest"
@"CKDPNotificationMarkReadRequest"
@"CKDPNotificationSyncRequest"
@"CKDPQueryRetrieveRequest"
@"CKDPRecordDeleteRequest"
@"CKDPRecordResolveTokenRequest"
@"CKDPRecordRetrieveChangesRequest"
@"CKDPRecordRetrieveRequest"
@"CKDPRecordRetrieveVersionsRequest"
@"CKDPRecordSaveRequest"
@"CKDPSetBadgeCountRequest"
@"CKDPShareAcceptRequest"
@"CKDPShareVettingInitiateRequest"
@"CKDPSubscriptionCreateRequest"
@"CKDPSubscriptionDeleteRequest"
@"CKDPSubscriptionRetrieveRequest"
@"CKDPTokenRegistrationRequest"
@"CKDPTokenUnregistrationRequest"
@"CKDPUpdateMissingAssetStatusRequest"
@"CKDPUserAvailableQuotaRequest"
@"CKDPUserPrivacySettingsBatchLookupRequest"
@"CKDPUserPrivacySettingsResetRequest"
@"CKDPUserPrivacySettingsRetrieveRequest"
@"CKDPUserPrivacySettingsUpdateRequest"
@"CKDPUserQueryRequest"
@"CKDPUserRetrieveRequest"
@"CKDPWebAuthTokenRetrieveRequest"
@"CKDPZoneDeleteRequest"
@"CKDPZoneRetrieveChangesRequest"
@"CKDPZoneRetrieveRequest"
@"CKDPZoneSaveRequest"
@"CKDPTokenRegistrationBody"
{?="version"b1}
{?="apnsEnv"b1}
@"CKDPShare"
@"CKDPPackage"
@"CKDPRecordReference"
@"CKDPStreamingAsset"
{?="doubleValue"b1"signedValue"b1"type"b1"isEncrypted"b1}
{?="downloadURLExpirationTimeSeconds"b1"size"b1}
{?="maxChanges"b1"wantsChanges"b1}
{?="doubleValue"b1"int64Value"b1"boolValue"b1}
{?="forceFetchToken"b1}
@"CKDPublicIdentityLookupRequest"
{?="publicKeyVersion"b1"acceptedInProcess"b1}
@"CKDPRecordFieldValue"
{?="queryOperator"b1"distinct"b1}
{?="typeCode"b1}
@"CKDPRecordChainParent"
{?="permission"b1}
{?="participantKeyLost"b1}
@48@0:8@16@24d32@40
v28@0:8^{sqlite3_stmt=}16i24
@28@0:8^{sqlite3_stmt=}16i24
@24@0:8^{sqlite3_value=}16
@32@0:8@16B24B28
v44@0:8@16Q24B32@?36
v56@0:8@16B24@28B36@40@?48
B32@0:8^{_OpaquePCSShareProtection=}16^@24
@"CKDPSubscription"
v28@0:8@16i24
v24@0:8@"NSFileHandle"16
B24@0:8^{objc_ivar=}16
@"CKRecord"
{?="limit"b1"newestFirst"b1}
{?="isInNetwork"b1}
@"<MMCSOperationMetric>"
@40@0:8@16@24q32
^{_mmcs_engine=}16@0:8
@48@0:8@16@24Q32@?40
@48@0:8@16@24@32@?40
@64@0:8@16@24@32@?40@?48@?56
@68@0:8@16@24B32@36@?44@?52@?60
@56@0:8@16@24@32@?40@?48
B48@0:8Q16^Q24^Q32^@40
B32@0:8^Q16^@24
@"CKDAssetCache"
@"CKDMMCSEngineContext"
@"CKAssetDownloadPreauthorization"
@"CKDMMCSItemCommandWriter"
B48@0:8@16@24@32^@40
B48@0:8@16^{_OpaquePCSShareProtection=}24@32@40
@"CKDModifyRecordsOperation"
@"CKDRecordPCSData"
@"CKDSharePCSData"
@"CKDZonePCSData"
{?="radius"b1}
^q16@0:8
q24@0:8Q16
v32@0:8^q16Q24
{?="list"^q"count"Q"size"Q}
{?="assetSize"b1"recovered"b1}
@"CKServerChangeToken"
^{__SecTrust=}32@0:8@16^{__SecPolicy=}24
B40@0:8q16@24^{__SecKey=}32
B40@0:8@16@24^{__SecKey=}32
@32@0:8@16^{__SecPolicy=}24
B32@0:8@16^{__SecKey=}24
^{__SecPolicy=}16@0:8
@"CKPublicKey"
^{__SecPolicy=}
v60@0:8@16@24@32@40B48@?52
v48@0:8@16@24@32@40
{?="created"b1"expires"b1}
{?="size"b1"lastItem"b1}
@"CKDFetchRecordsOperation"
@"CKDPParticipant"
{?="participantPermission"b1"participantState"b1"participantType"b1}
{?="operationGroupQuantity"b1}
v40@0:8@16@?24@?32
@48@0:8@16@24^B32^@40
i32@0:8@16^@24
Q28@0:8B16@20
Q20@0:8B16
B40@0:8@16q24^@32
Q32@0:8@16@24
@40@0:8@16^B24@?32
@"CKDRecordCache"
@"CKDPResponseOperationResultErrorAuxiliaryError"
@"CKDPResponseOperationResultErrorClient"
@"CKDPResponseOperationResultErrorExtension"
@"CKDPResponseOperationResultErrorServer"
{?="retryAfterSeconds"b1}
v24@0:8^v16
v24@0:8^{_mmcs_engine=}16
^{_mmcs_engine=}
@"NSObject<OS_dispatch_semaphore>"
@"NSRunLoop"
B32@0:8@16Q24
@40@0:8@16@24Q32
v44@0:8@16@24B32@36
B72@0:8@16@24Q32*40Q48^Q56^@64
B32@0:8@"CKDMMCSItemGroupContext"16Q24
@"<CKDMMCSItemReaderWriterProtocol>"40@0:8@"CKDMMCSItemGroupContext"16@"<CKDMMCSItemReaderWriterProtocol>"24Q32
B40@0:8@"CKDMMCSItemGroupContext"16@"<CKDMMCSItemReaderWriterProtocol>"24^@32
v44@0:8@"CKDMMCSItemGroupContext"16@"<CKDMMCSItemReaderWriterProtocol>"24B32@"NSError"36
@"CKFileMetadata"48@0:8@"CKDMMCSItemGroupContext"16@"<CKDMMCSItemReaderWriterProtocol>"24@"CKFileMetadata"32@"NSError"40
B72@0:8@"CKDMMCSItemGroupContext"16@"<CKDMMCSItemReaderWriterProtocol>"24Q32*40Q48^Q56^@64
B64@0:8@16Q24*32Q40^Q48^@56
B32@0:8@"<CKDMMCSItemReaderWriterProtocol>"16^@24
v36@0:8@"<CKDMMCSItemReaderWriterProtocol>"16B24@"NSError"28
@"CKFileMetadata"40@0:8@"<CKDMMCSItemReaderWriterProtocol>"16@"CKFileMetadata"24@"NSError"32
B64@0:8@"<CKDMMCSItemReaderWriterProtocol>"16Q24*32Q40^Q48^@56
@72@0:8@16@24@32@?40@?48@?56@?64
v44@0:8Q16i24d28@36
v36@0:8i16d20@28
v56@0:8Q16@24@32@40@48
v40@0:8Q16@24@32
^{MMCSItemReaderWriter=}32@0:8Q16^@24
@"CKDMMCSItemGroup"
{?="index"b1"isReversed"b1}
{?="changeType"b1}
{?="publicAccess"b1"publisherModelType"b1"anonymousPublicAccess"b1"publisherModel"b1}
{?="changeType"b1"deleteType"b1}
@"PCCKey"
^i16@0:8
i24@0:8Q16
v32@0:8^i16Q24
{?="list"^i"count"Q"size"Q}
@"CKDPSubscriptionNotification"
{?="evaluationType"b1"owner"b1"fireOnce"b1}
@"CKDPFieldActionDeleteListRange"
@"CKDPFieldActionInsertIntoList"
@"CKDPFieldActionReplaceListRange"
@40@0:8Q16d24d32
d24@0:8@16
v40@0:8@16Q24@32
{?="status"b1"pendingArchivedRecords"b1}
@"CKCDPErrorUserInfoValue"
@"CKPCSDiagnosticInformation"
{?="authPutType"b1}
{?="listIndex"b1"isPackage"b1"skipWriteMissingAssetStatusRecord"b1}
@"CKRecordZone"
{?="constructedAssetDownloadEstimatedSize"b1"constructedAssetDownloadURLExpiration"b1"downloadTokenExpiration"b1"downloadURLExpiration"b1"size"b1}
@"CKDPContactInformation"
{?="acceptTimestamp"b1"keyHealth"b1"outOfNetworkKeyType"b1"participantType"b1"permission"b1"publicKeyVersion"b1"state"b1"acceptedInProcess"b1"createdInProcess"b1"isInNetwork"b1"isOrgUser"b1}
@"<CKDOperationInfoDelegate>"
{?="vettingError"b1}
{?="port"b1"useTls"b1}
{?="doubleValue"b1"longValue"b1"type"b1"boolValue"b1}
@"CKDPQuery"
{?="limit"b1}
@24@0:8@"NSDictionary"16
@"NSDictionary"16@0:8
@"CKDDiscoverUserIdentitiesURLRequest"
@"CKUploadRequestConfiguration"
@"CKDFetchRecordZonesOperation"
@"CKDModifyRecordZonesOperation"
@"CKDMarkAssetBrokenURLRequestWrapperOperation"
@"CKDMarkAssetBrokenURLRequest"
{?="sharingType"b1"atomicSaves"b1"ckql"b1"fetchChanges"b1"hierarchicalSharing"b1"sharing"b1"zoneSharing"b1}
@48@0:8@16@24q32@40
@"CKDFetchZoneChangesRequestOperationResult"
@60@0:8@16B24@28@36@44@52
i48@0:8@16@24@32@40
@"CKDDecryptRecordsOperation"
@"<CKSQLiteItem>"
v32@0:8Q16@?24
v80@0:8@16@24@32@40@48@56@64@72
@"C2MetricOptions"
@"CKOperationMMCSRequestOptions"
v44@0:8@16B24@28@36
@"CKCDPError"
{?="auxiliaryCode"b1"code"b1}
{?="status"b1}
{?="allAssets"b1}
{?="maxChanges"b1"requestedChangeTypes"b1"ignoreCallingDeviceChanges"b1"newestFirst"b1}
@48@0:8@16B24B28@32@40
@48@0:8@16q24Q32#40
v48@0:8@16q24Q32@40
v56@0:8@16@24q32Q40@?48
@48@0:8@16@24@32^{_OpaquePCSShareProtection=}40
@32@0:8^{_PCSIdentitySetData=}16@24
^{_PCSIdentitySetData=}16@0:8
^{_PCSIdentitySetData=}
^{_PCSIdentitySetData=}40@0:8@16@24^@32
@40@0:8@16@24B32B36
^{_PCSIdentitySetData=}40@0:8@16B24B28^@32
^{_PCSIdentitySetData=}40@0:8Q16Q24^@32
^{_PCSIdentitySetData=}24@0:8^@16
^{_PCSPublicIdentityData=}40@0:8Q16@24^@32
@40@0:8Q16@24^@32
@32@0:8^{_PCSIdentitySetData=}16Q24
@40@0:8^{_PCSIdentitySetData=}16Q24^@32
@40@0:8@16@24^{_PCSIdentitySetData=}32
B40@0:8^{_PCSIdentitySetData=}16@24^@32
B40@0:8@16^{_PCSIdentitySetData=}24^@32
v24@0:8^{_PCSIdentityData=}16
^{_PCSIdentityData=}
@"CKDPCodeFunctionInvokeResponseAttestationResponse"
@"ACAccount"
v32@0:8@"NSString"16@"NSDictionary"24
v32@0:8@"NSString"16@"CKOperationResult"24
v24@0:8@"NSString"16
@"CKOperationResult"
*16@0:8
^v16@0:8
@44@0:8@16B24^@28^@36
@28@0:8@16i24
@"<CKDProtocolTranslatorIdentityDelegate>"
@"CKEncryptedData"
@"CKDChainPCSData"
{?="discoverable"b1}
@"NSUUID"
@"CKCDPCodeServiceRequestServiceClientConfig"
{?="serviceType"b1}
@40@0:8Q16@24d32
v24@0:8@"<MMCSOperationStateTimeRange>"16
@"<MMCSOperationStateTimeRange>"40@0:8Q16@"NSDate"24d32
@"NSDate"16@0:8
@"NSMutableDictionary"16@0:8
@"NSMutableSet"16@0:8
@"NSArray"16@0:8
q24@0:8@"<MMCSOperationStateTimeRange>"16
@"CKDPUser"
@56@0:8@16@24B32B36@40@48
@64@0:8@16@24@32q40@48@56
@"CKCDPCodeServiceRequestAccountConfig"
@"CKCDPCodeServiceRequestAssetAuthorizeGetRequestOptions"
@"CKCDPCodeServiceRequestProtectedCloudComputeMetadata"
@"CKCDPCodeServiceRequestRequestContext"
{?="serializationFormat"b1}
{?="clientVersionETagMatch"b1}
@"CKDAssetZone"
d32@0:8@16d24
@32@0:8@16#24
{?="maxChangedZones"b1}
@"CKCDPCodeServiceRequestOperationGroup"
{?="dsid"b1"databaseEnvironment"b1"databasePartition"b1"databaseType"b1}
@40@0:8Q16^?24B32B36
^?16@0:8
v24@0:8^?16
B28@0:8^@16B24
@"CKUploadRequestMetadata"
{?="badgeCount"b1"source"b1"isRead"b1}
B64@0:8@16@24^{_OpaquePCSShareProtection=}32@40B48B52^@56
@"CKDPSubscriptionNotificationAlert"
{?="shouldBadge"b1"shouldSendContentAvailable"b1"shouldSendMutableContent"b1}
q24@0:8^@16
^{pcc_wrapped_invocation_key=*Q}16@0:8
v24@0:8^{pcc_wrapped_invocation_key=*Q}16
^{pcc_wrapped_invocation_key=*Q}
^{pcc_invocation_key=[32C]}16@0:8
v24@0:8^{pcc_invocation_key=[32C]}16
^{pcc_invocation_key=[32C]}
OIB/N^C
9YM$
aOe[
RSD}
NaijW,%
'oDV
#(L2
\.Vxo
