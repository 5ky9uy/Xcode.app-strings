@(#)PROGRAM:AvatarPersistence  PROJECT:Animoji-306.1
&@333333
?333333
?333333
?333333
Coalescer already received an eventHandler
Coalescer did not receive an eventHandler
v8@?0
com.apple.AvatarUI.AVTCoreDataStoreBackend.changesObserverQueue
self in %@
v24@?0@"NSManagedObjectContext"8@"NSArray"16
%@ : unexpected class is %@
v16@?0@"NSManagedObjectContext"8
@"NSUUID"16@?0@"AVTAvatarRecord"8
%K IN %@
@"NSUUID"16@?0@"AVTAvatarManagedRecord"8
%K == %@
%K > %@ AND %K < %@
%K in %@
NOT (%K in %@)
AVTAvatarStoreDomainMessages
AVTAvatarStoreDomainFunCam
AVTAvatarStoreDomainFaceTime
AVTAvatarStoreDomainInternal
Unexpected object class for %@
Unexpected object protocol for %@
v16@?0@"NSNotification"8
v16@?0@"NSPointerArray"8
v16@?0@"<AVTAvatarRecordDataSourceObserver>"8
v16@?0@"NSMutableArray"8
Index %lu out of datasource %p bounds, count: %lu
B32@?0@"<AVTAvatarRecord>"8Q16^B24
v16@?0@"AVTAvatarRecord"8
v16@?0@"AVTAvatarPuppetRecord"8
Can't decode memoji! Error: %@
B32@?0@"AVTAvatarPuppetRecord"8Q16^B24
 criteria:%ld limit:%ld ari:%@ sci:%@
com.apple.AvatarUI.AVTCoreDataStoreMaintenance.workQueue
StoreMaintenanceObservedChange
v16@?0@?<v@?>8
v32@?0@"NSUUID"8@"NSArray"16^B24
count
count:
%@ > 1
@"NSUUID"16@?0@"NSDictionary"8
Got nil transformed object for %@
v32@?0@8@"<NSCopying>"16^B24
Nil key provided for %@
Already have an object for %@
@"NSXPCConnection"8@?0
com.apple.avatar.support
v16@?0@"NSError"8
v16@?0@"NSXPCConnection"8
v16@?0@"<AVTAvatarsDaemon>"8
Already observing notifications
Export already in flight, try again later
v16@?0@"NSCloudKitMirroringResult"8
Disabled mirroring handler!
identifier
Add handler before starting to observe!
NSPersistentStoreRemoteChangeNotification
v32@?0@?<v@?@"NSManagedObjectContext"@"NSArray">8Q16^B24
Already observing!
com.apple.AvatarUI.AVTCoreDataRemoteChangesObserver.RemoteNotification
v12@?0B8
 object:%@
B16@?0@"NSPersistentHistoryChange"8
v24@?0@"NSPropertyDescription"8^B16
B24@?0@"NSArray"8@"NSString"16
B16@?0@"NSArray"8
@"NSObject<OS_dispatch_queue>"16@?0r*8
SIMULATOR_SHARED_RESOURCES_DIRECTORY
Library/Avatar
Images
Animoji
Stickers
Can't get image cache location %@
com.apple.avatar.activity.PostInstallMigration
com.apple.avatar.activity.UserRequestedBackup
domainIdentifier
primaryAvatarIdentifier
AVTAvatarUIShowAssetsWarning
AVTAvatarUIShowPerfHUD
AVTAvatarUIEditorShowAssetsName
AVTAvatarUILastCacheVersion
AVTAvatarUIThumbnailCaching
AVTAvatarUIFlushThumbnailCache
AVTAvatarShowTrackingLostReticle
AVTUIGlobalPreferencesMemojiClassicDisclosureWarning
AVTAvatarUseLocalEditorModel
AVTAvatarHasDisplayedSplashScreen
AVTAvatarHasDisplayedAnimojiSplashScreen
AVTAvatarHasDisplayedCameraEffectsSplashScreen
AVTAvatarHasDisplayedCameraDisclosureSplashScreen
AVTAvatarHasDisplayedAnimojiCameraDisclosureSplashScreen
AVTAvatarHasDisplayedCameraEffectsCameraDisclosureSplashScreen
AVTAvatarAlwaysShowSplashScreen
AVTAvatarForceCameraDisclosures
AVTAvatarHasDisplayedPaddleView
AVTAvatarAlwaysShowPaddleView
AVTUIGlobalPreferencesHasDisplayedCategoriesDiscoverability
AVTUIGlobalPreferencesDisableDeleteConfirmation
AVTUIGlobalPreferencesDisablEditAfterDuplicate
AVTUIGlobalPreferencesGroupDialUsesMasking
AVTAvatarPreLoadOnLaunch
AVTAdaptativeFrameRate
AVTAvatarUIWipeCloudKitContainer
AVTAvatarUIUseTestCloudKitContainer
AVTAvatarUIWipeDatabase
AVTSyncEnabled
AVTUIEditorGroupName
AVTSyncImportDate
AVTUISyncExportRequired
AVTUISyncPreserveContentOnAccountChange
AVTUIRestrictMaxAvatarCount
AVTUIGlobalPreferencesStickersLastSelected
AVTUIGlobalPreferencesStickersDisclosureWarning
AVTUIGlobalPreferencesStickerRecentsDisclosureWarning
AVTUIGlobalPreferencesStickersCaching
AVTUIGlobalPreferencesFlushStickersCache
AVTUIGlobalPreferencesShowPrereleaseStickerPack
AVTUIGlobalPreferencesShowPrereleaseStickerLabel
AVTUIGlobalPreferencesStickersHEICSSequence
com.apple.Animoji.StickerRecents.SplashVersion
AVTUIGlobalPreferencesAlwaysShowStickerRecentsSplashScreen
AVTUIGlobalPreferencesForceNoMemojiStickerRecentsSplashScreen
AVTUIGlobalPreferencesStickerRecentsMigrationVersion
com.apple.AvatarUI.Staryu
SBIconVisibility
.GlobalPreferences
domains
records
v24@?0@"NSArray"8@"NSError"16
v20@?0B8@"NSError"12
v28@?0B8@"<AVTAvatarRecord>"12@"NSError"20
AVTAvatarUIErrorDomain
AVTAvatarUIMultipleErrorsKey
B32@?0@"AVTAvatarRecord"8Q16^B24
avatarData
orderDate
avatarDataString
B32@?0@"AVTStickerRecord"8Q16^B24
avatarRecordIdentifier
stickerConfigurationIdentifier
frequencySum
serializationVersion
 identifer:%@ ari:%@ sci:%@ frequencySum:%ld version:%ld
B32@?0@"AVTArchiverBasedDomain"8Q16^B24
v24@?0Q8^B16
AVTAvatarStoreDidChangeNotification
changedRecordIDs
com.apple.AvatarUI.AVTAvatarStore.backendAcccessQueue
com.apple.AvatarUI.AVTAvatarStore.workQueue
com.apple.AvatarUI.AVTAvatarStore.puppetStoreAccessQueue
Running as setup user
v16@?0@"<AVTStoreBackend>"8
v16@?0@"AVTPuppetStore"8
@"AVTAvatarRecord"16@?0@"NSString"8
AVTTypeMismatchException
com.apple.animoji
AVTRecentStickers
AVTStickersArray
AVTFrequencyCounter
AVTRecentStickerChangedExternallyNotification
avatars.db
avatars.version
Version object is not of expected class
backendVersion
avatarKitVersion
 backend:%2.2f avatarKit:%2.2f
currentHistoryToken
Got a nil NSPersistentHistoryResult, but no error filled in
 type:%ld identifier:%@
@"NSString"16@?0@"AVTAvatarRecord"8
AVTCoreDataContainer
movedaside
AvatarUIClient
com.apple.avatar.service
v24@?0@"NSPersistentStoreDescription"8@"NSError"16
CoreDataBackend
B24@?0^{__CFString=}8^@16
v24@?0@"NSNumber"8@"NSError"16
InvalidClass
Record identifier is not of type NSUUID
Record has a nil identifier
@"NSString"16@?0@"<AVTAvatarRecordChange>"8
isPuppet
avatarRecord
com.apple.avatar.AvatarUI
General
UserInteraction
Backend
com.apple.AvatarUI.AVTCoreDataStoreServer.backgroundQueue
@"<AVTStoreBackendMigrator>"8@?0
com.apple.AvatarUI.AVTCoreDataStoreServer.stickerBackend
@"NSManagedObjectContext"8@?0
Cancelling due to running as Setup User
Completed Internal Settings changes
v16@?0@?<v@?q>8
com.apple.AvatarUI.AVTCoreDataServer.setup
com.apple.AvatarUI.AVTCoreDataServer.backupStatus
com.apple.AvatarUI.AVTCoreDataServer.migration
com.apple.AvatarUI.AVTCoreDataServer.import
com.apple.AvatarUI.AVTCoreDataServer.Maintenance
com.apple.AvatarUI.AVTCoreDataServer.export
com.apple.AvatarUI.AVTCoreDataServer.updateThumbnails
com.apple.AvatarUI.AVTCoreDataServer.deleteStickerRecents
com.apple.AvatarUI.AVTCoreDataServer.pushNotification
com.apple.AvatarUI.AVTCoreDataServer.didResetSync
com.apple.AvatarUI.AVTCoreDataServer.ClientCheckin
com.apple.AvatarUI.AVTPushNotificationSupport.connectionQueue
com.apple.aps.avatar.service
Unable to create an APSConnection
v24@?0@"NSString"8@"NSError"16
com.apple.avatarsd
com.apple.icloud-container.
Avatar
com.apple.Avatars
iCloud.com.apple.AvatarUI.Staryu
v24@?0@"CKAccountInfo"8@"NSError"16
com.apple.Memoji
[AVTUIDEBUG] %@
Error loading templates %@
Parsing metadata definitions
Error parsing metadata definitions %@
Rendering model color %@
Rendering model preset %@
Rendering configuration %@
RenderSnapshot
Rendering record %@, at size %2.2fx%2.2f
Snapshot returned %@
No avatar preset for %@
Creating AVTAvatarStore instance %@
Creating empty database at path %@
Creating Folder at path %@
Error creating folder or empty data %@
Saving backend
Deleting record with identifier %@
Deleting images with identifier prefix %@
Duplicating record with identifier %@
Reading backend at %@
Error while saving backend %@
Error while reading backend %@
Record not found in any store (%@)
Puppet(s) not found (%@)
Avatar Record(s) not found (%@)
Error saving recent stickers (%@)
Error fetching recent stickers (%@)
Error fetched an unusable recent sticker (%@)
Error can't find sticker for a recent sticker (%@). Forcing migration
Performed sticker recents migration, found orphaned: %{public}d
SavingRecords
DeletingRecords
FetchingRecords
DuplicatingRecords
Fetched %lu record(s), criteria: %ld
Skipped fetching records: %@
Detected a version mismatch, found %{public}@, current is %{public}@
Avatar record has a version lower than what AvatarKit supports, dropping. %@
Exiting avatarsd for reason: %@
Error updating version %@
Error migrating backend %@
Did finish editing avatar successfully
Error when finishing editing %@
File system error: %@
Creating image store at path %@
Image Store Cache miss: %@
Image Store Cache HIT for %@, size %lu
Image Store failed to save with error: %@, code %ld
SavingImage
Image Store saved image at path %@
[InMemCache] Storage for %@
[InMemCache] HIT for %@
[InMemCache] Evicting object %@
Generating image for record %@, with scope %@, type %ld
Error generating image: %@
Error deleting thumbnails for identifier %@, %@
Error deleting Some thumbnails: %@
Error duplicating thumbnails for identifier %@, %@
Error fetching records %@
[PreLoading] Needed - %lu|%lu
[PreLoading] %@ requested - %lu|%lu
[PreLoading] %@ starts
[PreLoading] %@ CANCELED!
[PreLoading] %@ looking up %@
[PreLoading] %@ loading %@
PreLoadingPreset
[PreLoading] %@ Got thumbnail
Updating live avatar with %@
Requesting thumbnail for %@|%lu
Throttling AVTView
Unthrottling AVTView
Error snapshotting the AVTView: %{public}@
Carousel snapshot for record at index %lu, size %2.2fx%2.2f
-[AVTAvatar preloadAvatar:] identifier %@
AvatarPreLoad
Can't generate a AVTView snapshot, no window present
We have %ld memoji(s)
Clusters of record with small differences: %ld
Clusters of record with big differences: %ld
Starting up server
SettingUpStore
ExportingRecords
ImportingRecords
XPCActivityPostInstallMigration
Finished running migration XPC activity!
XPCActivityUserRequestedBackup
Finished running User Requested Backup XPC activity!
Sync is ENABLED
CloudKit Import Request FAILED, error %@
CloudKit Import Request SUCCEEDED
CloudKit Export Request FAILED, error %@
CloudKit Export Request SUCCEEDED
Mirroring request failed with error (%ld) %@
Migration
Migrating source %@
Error updating records for migration: %@
Found existing record during migration with identifier %@
Error deleting migrated content: %@
Found an existing record with same identifier during migration!
Error adding persistent store: %@
Error starting server! %@
Error setting up store: %@
Received public token %@
Received per-topic push token %@ for topic %@ identifier %@
Received Push Notification for topic: %@, payload: %@
Unable to create Push Connection! %@
ProcessingRemoteChanges
Start observing NSPersistentStoreRemoteChangeNotification from %@
Received NSPersistentStoreRemoteChangeNotification: %@
Dispatching NSPersistentStoreRemoteChangeNotification with %lu transactions; %lu handlers listening
Error fetching change history: %@
notification.userInfo doesn't contain a value for NSPersistentHistoryTokenKey
Changes require export!
Changes require thumbnail update!
Error pinning context to current query generation token: %@
Inspecting changes after token: %@
Unable to read remote record! %@
SavingChangeTrackerToken
Current history token file doesn't exist at path %@
Error reading current history token %@
Author %@ is processing %lu changes: %@
Transaction has changes but nil token! Can't process those changes.
Unable to save change token: %@, location %@
Found record identifier %@ for change type %ld, managedObjectID %@
Did NOT find record identifier for change type %ld, managedObjectID %@ - could be processing ancient history.
DeletingStickerRecentsForRemoteChanges
Deleting sticker recents for sync
UpdatingThumbnailsForRemoteChanges
Error processing change transactions to update thumbnails: %@
Checking if migration needed
Updating thumbnails if needed
Scheduling import of records
Scheduling thumbnail update
WILL RESET CLOUDKIT ZONE!
Did reset CloudKit zone with success %d, error %@
Will tear down CoreData stack for path %@
Error tearing down CoreData stack
Error removing store folder
AVTAvatarStoreDidChangeNotification
Posting change notification for %lu record id(s) %@
Not importing on launch, still remains %02luh %02lum %02lus
failed to configure sandbox storage for avatarsd: %{darwin.errno}d
failed to %{public}@: %{darwin.errno}d
failed to enter sandbox: %{public}s
$HOME not set, falling back to using getpwuid
WillResetSync
DidResetSync
CopyingStorageAside
RestoringStorage
Starting to observe NSCloudKitMirroringDelegateWillResetSyncNotificationName / NSCloudKitMirroringDelegateDidResetSyncNotificationName
Got a notification but no NSCloudKitMirroringDelegateResetSyncReasonKey!
Got a change with a tombstone missing identifier!
Got a change that didn't seem interesting: %@
Reset Sync reason: %lu
Error copying storage aside: %@
Error merging copied aside content: %@
Setup - will check if migration is needed
Setup - scheduling import
Setup - scheduling export
Coalescable event occured: %{public}@
Error getting changed records, %@ for identifiers %@
Too many avatars! (%lu/%lu). %lu won't display.
CheckingAccount
Got account info! HSA2: %d, status: %ld, description: %@
Error getting account info %@
Error migrating backup inclusion status: %@
Error updating backup inclusion status: %@
Will NOT include database in backup.
Will include database in backup.
Accepting incoming connection on side channel
CheckIn from client with pid %d
Connection to avatarsd INTERRUPTED!
Connection to avatarsd invalidated
Error getting proxy to avatarsd: %@
Cant get a proxy to avatarsd! Work won't be performed.
CheckingIn
RunningStoreMaintenance
Error mitigating duplicates %@
Store maintenance completed!
Discovered %lu group(s) of duplicates: %@
Fixing duplicate with identifier %@ to have identifier %@
Sticker Generator Pool has to steal a generator in Use, %ld in use, %ld max
PaddleView Video Player failed with error %@; restarting videos
Rendering sticker %@ for record %@
RenderSticker
StickerViewController preparing for snapshot for bounds %@ offset %f
[StickerTaskScheduler] Added task: %@, task count: %ld
[StickerTaskScheduler] Started task: %@, scheduler rule: %@
[StickerTaskScheduler] Cancelled task: %@
[StickerTaskScheduler] Cancelled sticker sheet tasks for identifier: %@
[StickerTaskScheduler] Cancelled all tasks
[AVTBodyCarousel] bodyPoseCell is nil or unexpected type at indexPath %@
Nil image returned from AVTUIStickerRenderer
Nil image returned from _AVTAvatarRecordImageProvider
Animoji Usage Analysis Service checking in. Criteria: %@
Animoji Usage Analysis Service will perform analysis
Animoji Usage Analysis Service did perform analysis
Animoji Usage Analysis Service did did not process the %@ state
Carousel changing to single avatar mode
Carousel changing to multi avatar mode
Carousel changes center item to:%@
Carousel transtioning center item:%@, center cell:%@
Carousel stops focusing on center item:%@, center cell:%@
Single mode controller STARTS using liveView: %@
Single mode controller STOPS using liveView: %@
[AVTTransition:%@] Carousel Cell STARTS using liveView, cell:%@
[AVTTransition:%@] Carousel Cell STOPS using liveView, cell:%@
[AVTTransition:%@] -> Carousel adds transition to coordinator
[AVTTransition:%@] -> starts, state: %ld
[AVTTransition:%@] -> Setup done, state: %ld, finished %@
[AVTTransition:%@] -> Perform
[AVTTransition:%@] -> CANCEL!
[AVTTransition:%@] -> reached stage %lu, state: %lu
ToLive
[AVTView] Set avatar: %@
AVTViewSetAvatar
[AVTView] Did render avatar: %@, current avatar %@, match %@
Did not get a valid frame for element at index %ld
[Delegate] Did Focus on record %@
[Delegate] Will End Focus on record %@
[Delegate] Did Move (%2.2lf) Toward record %d, editable %d
[Delegate] Did Update with record %@
Carousel ends dragging with velocity:%2.2lf, switch instead of scroll back: %d, switch for high velocity: %d
Setup User has no Memoji data to import
Setup User data import failed to unarchive data at path: %@, error: %@
Setup User import attempting to save %ld records
Setup User data import failed to save avatar records, error: %@
Setup - checking for Setup User data to import
Setup User data import failed to remove draft data file
Requesting Animoji sticker snapshot generated in service
Failed to set up remote connection, error: %@
Generating image and writing to cache in service for record: %@
Image saved to cache by MemojiImageRenderService at path %@
Image save failed in MemojiImageRenderService at path %@, with error: %@
Retrieving snapshot in service from cache at path %@
Semaphore timed out at %f seconds waiting for snapshot to generate sticker %@
Failed to generate sticker in service %@
Incrementing remote renderer transaction count to  %li
Decrementing remote renderer transaction count to  %li
Cancelling cleanup block in remote render service
Cleanup timer completed, clean exiting remote render service
AVTEventCoalescer
AVTPassthroughEventCoalescer
AVTCoreDataStoreBackend
AVTStoreBackend
NSObject
AVTAvatarStoreInternal
AVTAvatarStore
AVTStickerBackend
AVTPAvatarRecordDataSource
AVTAvatarStoreDelegate
AVTAvatarRecordDataSourceInternal
AVTAvatarRecordDataSource
Convenience
AVTAvatarRecordInternal
AVTAvatarRecord
NSSecureCoding
NSCoding
NSCopying
AVTAvatarRecordRendering
AVTPuppetStore
AVTStickerFetchRequest
AVTCoreDataStoreMaintenance
AvatarUI
AVTAvatarsDaemonClient
AVTAvatarsDaemon
AVTCoreDataCloudKitMirroringHandler
AVTDisabledMirroringHandler
AVTAvatarPuppetRecord
AVTCoreDataRemoteChangesObserver
AVTCoreEnvironment
AVTBackgroundActivitySchedulerFactory
AVTArchiverBasedDomain
AVTArchiverBasedStoreRoot
AVTAvatarRecordSerializer
AVTBlockScheduler
AVTObservableAvatarStore
AVTArchiverBasedStoreMigratableSource
AVTStoreBackendMigratableSource
AVTError
AVTStickerRecord
AVTArchiverBasedStoreBackend
AVTAvatarStoreNotification
AVTPAvatarStore
AVTStoreBackendDelegate
AVTAvatarStoreServer
AVTStickerUserDefaultsBackend
AVTAvatarFetchRequest
AVTArchiverBasedStorePersistence
AVTBackendVersion
AVTCoreDataChangeTracker
AVTAvatarRecordChangeTracker
AVTCoreDataChangeTrackerChange
AVTAvatarRecordChange
AVTStoreBackendMigrator
AVTSyncSchedulingAuthority
AVTCoreDataPersistentStoreConfiguration
_AVTCoreDataPersistentStoreRemoteConfiguration
_AVTCoreDataPersistentStoreLocalConfiguration
AVTCoreDataPersistentStoreLocalConfiguration
AVTAvatarManagedRecordTransformer
AVTStickerChangeObserver
AVTAvatarsDaemonServer
NSXPCListenerDelegate
AVTSerializedAvatarRecord
AVTUILogger
AVTStubbedStoreBackend
AVTCoreDataStoreServer
AVTPushNotificationsSupportDelegate
AVTCoreDataCloudKitMirroringHandlerDelegate
AVTAvatarsDaemonServerDelegate
AVTPushNotificationsSupport
APSConnectionDelegate
AVTPushNotificationsConnectionFactory
AVTAvatarManagedRecord
AVTSideCoreDataStoreMigratableSource
AVTCoreDataCloudKitMirroringConfiguration
T@"<AVTAvatarManagedRecordTransformer>",R,N,V_recordTransformer
T#,R
T@"NSArray",C,N,V_sortedAvatars
T@"<AVTAvatarRecordChangeTracker>",R,N
T@"NSNumber",R,N,V_frequencySum
T@"<AVTAvatarRecordChangeTracker>",R,N,V_recordChangeTracker
T@"NSString",R,C,N,V_puppetName
T@"<AVTAvatarStoreInternal>",R,N,V_store
T@"NSURL",R,C,N,V_storeLocation
T@"<AVTAvatarsDaemonServer>",R,N,V_daemonServer
TB,N,V_isPuppet
T@"<AVTAvatarsDaemonServerDelegate>",W,N,Vdelegate
_avtui_deepCopy
T@"<AVTBlockScheduler>",R,N,V_scheduler
_blockScheduler
T@"<AVTCoreDataCloudKitMirroringHandlerDelegate>",W,N
_eventCoalescer
T@"<AVTCoreDataPersistentStoreConfiguration>",R,N,V_configuration
_folderLocation
T@"<AVTCoreDataRemoteChangesObserver>",R,N,V_remoteChangesObserver
_logger
T@"<AVTEventCoalescer>",R,N,V_coalescer
_pushConnection
T@"<AVTPBackendImageHandlingDelegate>",R,N,V_imageHandlingDelegate
_setupCompleted
T@"<AVTPushNotificationsSupport>",R,N,V_pushNotificationsSupport
_stickerConfigurationIdentifier
T@"<AVTPushNotificationsSupportDelegate>",W,N,V_delegate
avt_description
T@"<AVTStickerBackendDelegate>",W,N
backendDelegate
T@"<AVTStoreBackend>",R,N,V_backend
base64EncodedStringWithOptions:
T@"<AVTStoreBackendDelegate>",W,N,VbackendDelegate
changedObjectID
T@"<AVTUILogger>",R,N,V_logger
checkIn
T@"<NSObject>",&,N,V_nts_changeNotificationObserver
connectionQueue
T@"<NSObject>",&,N,V_willResetNotificationToken
currentHistoryTokenForLocation:
T@"AVTArchiverBasedStoreRoot",&,N,V_model
dealloc
T@"AVTCoreEnvironment",R,N,V_environment
domains
T@"AVTPAvatarStore",R,N,V_underlyingStore
initWithLogger:
T@"AVTPushNotificationsConnectionFactory",R,N,V_connectionFactory
logAvatarsDaemonClientChecksIn:
T@"NSArray",R,C,N,V_domains
logCarouselChangingToSingleMode
T@"NSArray",R,C,N,V_records
logErrorCreatingBackendContent:
T@"NSData",&,N,V_avatarData
logInMemoryCacheEvictsResource:
T@"NSDate",R,N,V_orderDate
logMigrationXPCActivityFinished
T@"NSMutableArray",&,N,V_nts_recordStorage
logSavingError:
T@"NSMutableArray",R,N,V_changeHandlers
maximumNumberOfFetchableAvatars
T@"NSNotificationCenter",&,N,V_notificationCenter
migrationNeeded
T@"NSNumber",R,N,V_serializationVersion
neutralMemojiDataRepresentation
T@"NSObject<OS_dispatch_queue>",R,N,V_backendAccessQueue
numberWithBool:
T@"NSObject<OS_dispatch_queue>",R,N,V_callbackQueue
performingMigrationXPCActivity:
T@"NSObject<OS_dispatch_queue>",R,N,V_puppetStoreAccessQueue
processInternalSettingsChanges:
T@"NSObject<OS_os_log>",R,N,V_backendLog
release
T@"NSObject<OS_os_log>",R,N,V_interactionLog
requestForAvatarWithIdentifier:
T@"NSPersistentStoreCoordinator",R,N,V_coordinator
setMigrationActivityCompletion:
T@"NSPointerArray",R,N,V_nts_observers
setURL:
T@"NSString",R,C
setWithObjects:
T@"NSString",R,C,N,V_avatarIdentifier
stringByAppendingPathComponent:
T@"NSString",R,C,N,V_domainIdentifier
underlyingStore
T@"NSString",R,C,N,V_stickerConfigurationIdentifier
.cxx_destruct
T@"NSArray",C,N,V_puppetRecords
T@"<AVTAvatarRecord>",R,C,N,V_avatarRecord
T@"NSArray",R,C,N,V_identifiers
T@"<AVTAvatarRecordChangeTracker>",R,N,V_changeTracker
T@"NSString",R,C,N,V_identifier
T@"<AVTAvatarStoreDelegate>",W,N,V_delegate
T@"NSURL",R,C,N
T@"<AVTAvatarsDaemon>",R,N,V_daemonClient
T@?,R,C,N,V_serialQueueProvider
T@"<AVTAvatarsDaemonServerDelegate>",W,N
_avtui_changedRecordIdentifiers
T@"<AVTBlockScheduler>",R,N,V_blockScheduler
_backendVersion
T@"<AVTCoreDataCloudKitMirroringHandler>",R,N,V_mirroringHandler
_changeHandlers
T@"<AVTCoreDataCloudKitMirroringHandlerDelegate>",W,N,V_delegate
_exportInFlight
T@"<AVTCoreDataPersistentStoreLocalConfiguration>",R,N,V_configuration
_interactionLog
T@"<AVTCoreDataStoreMaintenance>",R,N,V_storeMaintenance
_nts_changeNotificationObserver
T@"<AVTEventCoalescer>",R,N,V_eventCoalescer
_server
T@"<AVTPBackendImageHandlingDelegate>",W,N,V_imageHandlingDelegate
_stickerBackend
T@"<AVTPushNotificationsSupportDelegate>",W,N
arrayWithArray:
T@"<AVTStickerBackend>",R,N,V_stickerBackend
backend
T@"<AVTStickerBackendDelegate>",W,N,V_stickerBackendDelegate
backgroundQueue
T@"<AVTStoreBackendDelegate>",W,N
canCreateAvatar
T@"<AVTSyncSchedulingAuthority>",R,N,V_schedulingAuthority
changes
T@"<NSObject>",&,N,V_didResetNotificationToken
compact
T@"<NSObject>",&,N,V_observationToken
containsObject:
T@"APSConnection",&,N,V_pushConnection
databaseFolderForStoreLocation:
T@"AVTAvatarFetchRequest",R,N,V_fetchRequest
deleteAvatar:completionHandler:
T@"AVTObservableAvatarStore",R,N,V_backingStore
handler
T@"AVTPuppetStore",R,N,V_puppetStore
isProxy
T@"AVTStickerChangeObserver",R,N,V_stickerChangeObserver
logCarouselChangesCenterItemTo:
T@"NSArray",R,C,N,V_excludingIdentifiers
logCreatingBackendFolderAtPath:
T@"NSData",&,D,N
logErrorFetchingRecentStickers:
T@"NSDate",&,D,N
logInMemoryCacheHitForResource:
T@"NSDictionary",C,N,V_avatarsByIdentifiers
logPaddleViewVideoPlayerFailed:
T@"NSMutableArray",&,N,V_stickers
logSetupUserImportFailedToUnarchiveDataAtPath:errorDescription:
T@"NSMutableArray",R,N,V_transactionsForPendingChanges
migrate
T@"NSNotificationCenter",R,N,V_notificationCenter
modelV1
T@"NSObject<OS_dispatch_queue>",R,C,N,V_backgroundQueue
numberOfRecords
T@"NSObject<OS_dispatch_queue>",R,N,V_backgroundQueue
options
T@"NSObject<OS_dispatch_queue>",R,N,V_connectionQueue
processChangeTransactionsWithChangeTokenLocation:handler:error:
T@"NSObject<OS_dispatch_queue>",R,N,V_workQueue
records
T@"NSObject<OS_os_log>",R,N,V_generalLog
removeObserver:
T@"NSPersistentContainer",R,N,V_container
scheduleImportExportIfRequiredWithPostImportHandler:completion:
T@"NSPersistentStoreDescription",R,N,V_storeDescription
setPersistentStoreDescriptions:
T@"NSString",C,N,V_eventLabel
setUseDeviceToDeviceEncryption:
T@"NSString",R,C,N
settingUpStore:
T@"NSString",R,C,N,V_avatarRecordIdentifier
success
T@"NSString",R,C,N,V_primaryAvatarIdentifier
updateManagedRecord:withRecord:
T@"NSString",R,C,N,V_stickerIdentifier
T@"NSString",R,N
T@"NSString",R,N,V_localProcessName
T@"NSString",R,N,V_recordIdentifier
T@"NSURL",R,N,V_cacheLocation
T@"NSURL",R,N,V_databaseLocation
T@"NSURL",R,N,V_folderLocation
T@"NSURL",R,N,V_storeLocation
T@"NSUUID",&,D,N
T@"NSUserDefaults",R,N,V_userDefaults
T@"NSXPCListener",R,N,V_listener
T@"NSXPCStoreServer",&,N,V_server
T@?,C,N,V_eventHandler
T@?,C,N,V_handler
T@?,C,N,V_migrationActivityCompletion
T@?,C,N,V_userRequestedBackupActivityCompletion
T@?,R,C,N,V_connectionFactory
T@?,R,C,N,V_lockProvider
T@?,R,C,N,V_migratorProvider
T@?,R,C,N,V_mocFactory
TB,N,V_eventDeliveryScheduled
TB,N,V_exportInFlight
TB,N,V_setupCompleted
TB,R
TB,R,N,GisEditable
TB,R,N,GisPuppet
TQ,N,V_frequencyCounter
TQ,R
Td,R,N,V_avatarKitVersion
Td,R,N,V_backendVersion
Td,R,N,V_delay
Tq,R,N
Tq,R,N,V_changeType
Tq,R,N,V_criteria
Tq,R,N,V_fetchLimit
Tq,R,N,V_resultLimit
URIRepresentation
URLByAppendingPathComponent:
URLByAppendingPathExtension:
URLForDirectory:inDomain:appropriateForURL:create:error:
UUID
UUIDString
_avatarData
_avatarIdentifier
_avatarKitVersion
_avatarRecord
_avatarRecordIdentifier
_avatarsByIdentifiers
_avtui_dictionaryByIndexingObjectsInArray:by:
_backend
_backendAccessQueue
_backendLog
_backgroundQueue
_backingStore
_cacheLocation
_callbackQueue
_castRecord:andDoRecordHandlingBlock:puppetHandlingBlock:
_changeTracker
_changeType
_coalescer
_configuration
_connectionFactory
_connectionQueue
_container
_coordinator
_createStoreEmptyFileIfNeededAtLocation:logger:fileManager:error:
_createStoreFolderIfNeededAtLocation:logger:fileManager:error:
_createStoreIfNeededAtLocation:logger:error:
_criteria
_daemonClient
_daemonServer
_databaseLocation
_delay
_delegate
_didResetNotificationToken
_domainIdentifier
_domains
_environment
_eventDeliveryScheduled
_eventHandler
_eventLabel
_excludingIdentifiers
_fetchLimit
_fetchRequest
_frequencyCounter
_frequencySum
_generalLog
_handler
_identifier
_identifiers
_imageCacheStoreLocation
_imageHandlingDelegate
_imageStoreLocation
_isPuppet
_listener
_localProcessName
_lockProvider
_migrateDifferentAvatarKitVersionsForContent:logger:
_migrateFromPre0_5ToCurrentForStoreAtLocation:logger:fileManager:error:
_migrateFromPre0_6ToCurrentForStoreAtLocation:logger:fileManager:error:
_migrationActivityCompletion
_migratorProvider
_mirroringHandler
_mocFactory
_model
_notificationCenter
_nts_observers
_nts_recordStorage
_observationToken
_orderDate
_performMigrationIfNeededForStoreAtLocation:logger:fileManager:error:
_primaryAvatarIdentifier
_puppetName
_puppetRecords
_puppetStore
_puppetStoreAccessQueue
_pushNotificationsSupport
_readContentFromDiskAtLocation:logger:error:
_recentStickersChangedExternally
_recordChangeTracker
_recordIdentifier
_recordTransformer
_records
_remoteChangesObserver
_resultLimit
_scheduler
_schedulingAuthority
_serialQueueProvider
_serializationVersion
_sortedAvatars
_stickerBackendDelegate
_stickerChangeObserver
_stickerIdentifier
_stickerImageStoreLocation
_stickers
_store
_storeDescription
_storeLocation
_storeMaintenance
_transactionsForPendingChanges
_underlyingStore
_userDefaults
_userRequestedBackupActivityCompletion
_willResetNotificationToken
_workQueue
_writeContent:toDiskAtLocation:logger:error:
accountInfoWithCompletionHandler:
accountStatus
addChangesHandler:
addNextFrequencyCountToFrequencySum:
addObject:
addObjectsFromArray:
addObserver:
addObserverForName:object:queue:usingBlock:
addPersistentStoreWithDescription:completionHandler:
addPointer:
addPriorityObserver:
addStickerWithAvatarIdentifier:stickerIdentifier:
allAvatarPuppetsExcluding:error:
allAvatarPuppetsWithError:
allAvatars
allObjects
allPuppetRecords
animojiNamed:
animojiNames
appendFormat:
appendString:
archivedDataWithRootObject:requiringSecureCoding:error:
areRecordsLoaded
array
arrayByAddingObjectsFromArray:
arrayWithCapacity:
arrayWithObjects:count:
attributesOfItemAtPath:error:
author
autorelease
avatarCountWithError:
avatarData
avatarForRecord:
avatarForRecord:usageIntent:
avatarIdentifier
avatarKitVersion
avatarPuppetsForFetchRequest:error:
avatarRecord
avatarRecordFromData:
avatarRecordIdentifier
avatarStoreDidChange:
avatarWithDataRepresentation:usageIntent:error:
avatarsByIdentifiers
avatarsExcludingIdentifiers:error:
avatarsForFetchRequest:error:
avatarsWithIdentifiers:error:
avt_firstObjectPassingTest:
avt_map:
backend:didChangeRecordsWithIdentifiers:
backendAccessQueue
backendLog
backendVersion
backingStore
blockScheduler
boolValue
bundleID
bytes
cacheLocation
callbackQueue
canCreateAvatarWithError:
canLoadAvatarWithData:
canLoadDataRepresentation:
cdFetchRequestForAvatarFetchRequest:recordTransformer:
cdFetchRequestWithPredicate:fetchLimit:
changeHandlers
changeTracker
changeTransactionsForToken:managedObjectContext:
changeType
checkingAccountInfo:
checkingIn:
class
classifyRecordsByIdentifiers:
clearContentAtLocation:
clearStickersForAvatarRecordIdentifier:withEnvironment:
clientDidCheckInForServer:
cloudKitMirroringEnabled
coalescer
code
compare:
completeMigrationActivityIfNeeded
completeUserRequestedBackupActivityIfNeeded
componentsJoinedByString:
configuration
configureMirroringRequestOptions:
configureMirroringRequestOptions:discretionary:
configureStoreDescriptionForMirroring:logger:
conformsToProtocol:
connection:channelSubscriptionsFailedWithFailures:
connection:didChangeConnectedStatus:
connection:didFailToSendOutgoingMessage:error:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didReceivePublicToken:
connection:didReceiveToken:forInfo:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveURLToken:forInfo:
connection:didReceiveURLTokenError:forInfo:
connection:didSendOutgoingMessage:
connectionDidReconnect:
connectionFactory
connectionWithEnvironmentName:namedDelegatePort:queue:
container
containerWithIdentifier:
contentDidChangeWithIdentifiers:
contentExists
contentExistsAtLocation:
coordinator
copiedAsideMigratableSource
copy
copyItemAtURL:toURL:error:
copyStorageAside:
copyWithZone:
copyingStorageAside:
count
countByEnumeratingWithState:objects:count:
countForFetchRequest:error:
createContainerForRemoteConfiguration
createDatabaseDirectoryIfNeeded:usingFileManager:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
createManagedObjectContext
createMirroringHandlerWithEnvironment:
createModel
createPuppetRecords
createSourceBackend
createStoreDescriptionWithDatabaseLocation:logger:
createStoreServerWithError:
criteria
currentConnection
currentContainerIdentifier
currentManagedObjectModel
currentQueryGenerationToken
currentVersion
daemonClient
daemonServer
dataForNeutralRecord
dataForNewRecord
dataFromAvatarRecord:
dataRepresentation
dataSource:didAddRecord:atIndex:
dataSource:didEditRecord:atIndex:
dataSource:didRemoveRecord:atIndex:
dataWithContentsOfURL:options:error:
databaseLocation
databaseLocationForFolderLocation:
date
dateByAddingTimeInterval:
dateWithTimeIntervalSinceNow:
dbLocationForStoreLocation:
debugDescription
decodeBoolForKey:
decodeDoubleForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
defaultAvatarRecord
defaultBackendWithWorkQueue:environment:
defaultCenter
defaultEnvironment
defaultManager
defaultServer
defaultServerWithImageHandlingDelegate:
defaultUIDataSourceWithDomainIdentifier:
delay
delegate
deleteAvatarWithIdentifier:completionBlock:
deleteAvatarWithIdentifier:error:
deleteImagesForAvatarRecordIdentifier:error:
deleteRecentStickersForChangeTracker:completionHandler:
deleteRecentStickersWithAvatarIdentifier:stickerIdentifier:completionHandler:
deleteStickerRecents
deleteThumbnailsForAvatarRecordsWithIdentifiers:error:
deletingRecords:
deletingStickerRecentsForRemoteChanges:
description
deviceConfigurationSupportsCloudKitMirroringWithLogger:completionHandler:
dictionary
dictionaryRepresentation
dictionaryWithCapacity:
dictionaryWithObjects:forKeys:count:
didReceivePushNotification
didReceivePushNotification:
didRecieveAvatarChangeDistributedNotification:
didResetNotificationToken
didResetSync
didResetSync:
didUseStickerWithAvatarIdentifier:stickerIdentifier:completionHandler:
domain
domainBySettingPrimaryAvatarIdentifier:
domainIdentifier
doubleValue
duplicateAvatar:completionBlock:
duplicateAvatarRecord:error:
duplicatedIdentifiersInManagedObjectContext:error:
duplicatingRecords:
editable
encodeBool:forKey:
encodeDouble:forKey:
encodeObject:forKey:
encodeWithCoder:
entity
enumerateChangesAfterToken:managedObjectContext:changesHandler:error:
enumerateIndexesUsingBlock:
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
enumerateObserversRespondingToSelector:withBlock:
environment
error
errorWithCode:userInfo:
errorWithDomain:code:userInfo:
eventCoalescer
eventDeliveryScheduled
eventDidOccur:
eventHandler
eventLabel
exchangeObjectAtIndex:withObjectAtIndex:
excludingIdentifiers
executeFetchRequest:error:
executeRequest:error:
exportChangesWithManagedObjectContext:discretionary:workQueue:completionHandler:
exportDidCompleteSuccessfully
exportInFlight
exportRequired
exportingRecords:
expressionForFunction:arguments:
expressionForKeyPath:
expressionForVariable:
fetchAllStickers
fetchAvatarsForFetchRequest:completionHandler:
fetchDuplicatedRecordsForIdentifiers:managedObjectContext:error:
fetchHistoryAfterToken:
fetchHistoryTransactionForToken:
fetchLimit
fetchMostRecentStickersWithLimit:
fetchRequest
fetchRequestCriteriaSupported:
fetchRequestWithEntityName:
fetchStickersWithAvatarIdentifier:stickerIdentifier:
fetchingRecords:
fileExistsAtPath:
fileURLWithPath:
finalizeMigration:
firstObject
fixDuplicateRecordIdentifiers:managedObjectContext:error:
flushRecordsForEnteringBackground
folderLocation
frequencyCounter
frequencySum
generalLog
generateThumbnailsForAvatarRecord:avatar:error:
generateThumbnailsForAvatarRecords:error:
generateThumbnailsForDuplicateAvatarRecord:originalRecord:error:
getAPSEnvironmentString:
getChangedObjectIDsOfInterest:deletedIdentifiers:forTransactions:
getResourceValue:forKey:error:
getStickersFromUserDefaults
hash
identifier
identifierForManagedRecordIdentifier:
identifiers
imageCacheStoreLocation
imageCacheStoreLocationWithError:
imageHandlingDelegate
imageStoreLocation
importChangesWithManagedObjectContext:discretionary:workQueue:completionHandler:
importDidCompleteSuccessfully
importRequired
importSetupUserDataIfNeeded
importingRecords:
indexForInsertingDuplicateRecord:original:inRecords:
indexForInsertingRecord:inRecords:
indexOfObject:
indexOfObjectPassingTest:
indexOfRecordPassingTest:
indexSetForEditableRecords
indexesOfObjectsPassingTest:
indexesOfRecordsPassingTest:
init
initForStoreWithURL:usingModel:options:policy:
initWithAvatarData:
initWithAvatarData:identifier:orderDate:
initWithAvatarData:orderDate:
initWithAvatarRecord:
initWithBackend:backendAccessQueue:puppetStore:stickerBackend:environment:
initWithBackendVersion:avatarKitVersion:
initWithCoder:
initWithConcurrencyType:
initWithConfiguration:environment:
initWithConfiguration:recordTransformer:environment:
initWithConfiguration:recordTransformer:remoteChangesObserver:localProcessName:recordChangeTracker:environment:
initWithConfiguration:workQueue:coalescer:environment:
initWithConnectionFactory:logger:
initWithContainerIdentifier:
initWithCriteria:
initWithCriteria:avatarIdentifier:stickerIdentifier:
initWithCriteria:identifier:
initWithCriteria:identifiers:excludedIdentifiers:fetchLimit:
initWithCriteria:resultLimit:
initWithDaemonClient:environment:
initWithData:encoding:
initWithDelay:queue:logger:
initWithDomainIdentifier:
initWithDomainIdentifier:primaryAvatarIdentifier:
initWithDomains:records:
initWithEnvironment:
initWithEnvironment:connectionFactory:
initWithEnvironment:imageHandlingDelegate:
initWithEnvironment:managedObjectContextFactory:
initWithEnvironmentName:namedDelegatePort:queue:
initWithFetchRequest:
initWithIdentifier:
initWithIdentifier:avatarRecordIdentifier:stickerConfigurationIdentifier:frequencySum:serializationVersion:
initWithListener:logger:
initWithLocalBackend:configuration:migratorProvider:pushSupport:mirroringHandler:schedulingAuthority:remoteChangesObserver:stickerChangeObserver:changeTracker:daemonServer:storeMaintenance:backgroundQueue:environment:imageHandlingDelegate:
initWithLogger:blockScheduler:
initWithMachServiceName:
initWithMachServiceName:options:
initWithManagedObjectModel:
initWithName:managedObjectModel:
initWithOptions:
initWithOptions:completionBlock:
initWithPuppetName:
initWithRecordIdentifier:changeType:
initWithRecordStore:fetchRequest:
initWithRecordStore:fetchRequest:callbackQueue:environment:
initWithRecordStore:fetchRequest:callbackQueue:logger:notificationCenter:
initWithRecordStore:fetchRequest:environment:
initWithStickerBackend:environment:
initWithStore:callbackQueue:
initWithStoreLocation:copiedAside:environment:
initWithStoreLocation:domainIdentifier:environment:
initWithStoreLocation:environment:
initWithUUIDBytes:
initWithUUIDString:
initWithWorkQueue:environment:userDefaults:
initWithWorkQueue:managedObjectContextFactory:eventCoalescer:logger:
insertNewObjectForEntityForName:inManagedObjectContext:
insertObject:atIndex:
insertPointer:atIndex:
integerValue
interactionLog
interfaceWithProtocol:
internalRecordStore
invalidate
isEditable
isEqual:
isEqualToString:
isFileNotFoundError:
isKindOfClass:
isMemberOfClass:
isObservingChanges
isPuppet
length
listener
listener:shouldAcceptNewConnection:
loadContentFromDisk:
loadContentFromDiskIfNeeded:
loadModel:
loadPersistentStoresWithCompletionHandler:
loadPuppetRecordsIfNeeded
loadRecordsWithStore:request:logger:
localConfigurationWithStoreLocation:environment:
localProcessName
lockProvider
logAVTViewCancelingRenderingAvatar:
logAVTViewDidRenderAvatar:currentAvatar:
logAVTViewDidRenderCurrentAvatar:
logAVTViewSetAvatar:
logAccountInfo:status:deviceToDeviceEncryption:
logAnalysisServiceCheckingIn:
logAnalysisServiceDidNotProcessState:
logAnalysisServiceDidRun
logAnalysisServiceWillRun
logAvatarPreloadBeginForIdentifier:
logAvatarPreloadEnd
logAvatarsDaemonClientConnectionInterrupted
logAvatarsDaemonClientConnectionInvalidated
logAvatarsDaemonReceivesIncomingConnection
logAvatarsdExitingWithReason:
logBackendVersionMismatch:actual:
logCancelTransition:
logCancelingPreLoadingTask:
logCancellingCleanupBlock
logCarouselAddsTransitionToCoordinator:
logCarouselCellStartUsingLiveView:associatedTransition:
logCarouselCellStopUsingLiveView:associatedTransition:
logCarouselChangingToMultiMode
logCarouselDelegateDidFocusRecord:
logCarouselDelegateDidUpdateRecord:
logCarouselDelegateNearnessFactorDidChange:towardRecord:editable:
logCarouselDelegateWillEndFocusRecord:
logCarouselEndsDraggingWithVelocity:willSwitchIndexPathInsteadOfScrollBack:forHighVelocity:
logCarouselErrorGettingFrameForElementAtIndex:
logCarouselSnapshotForIndex:size:
logCarouselStopsFocusingOnCenterItem:withCell:
logCarouselTransitionCenterItem:withCell:
logChangesRequireExport
logChangesRequireThumbnailUpdate
logCheckingIfMigrationNeeded
logCleanupTimerComplete
logCoalesceableEventOccured:
logCouldntFindRecordIdentifierForChangeType:managedObjectID:
logCreatingBackendDBAtPath:
logCreatingImageStoreForPath:
logCreatingStore:
logCurrentHistoryTokenFileDoesntExist:
logDebug:
logDecrementingRemoteRendererTransactionCount:
logDeduplicateRecordWithIdentifier:toNewRecordWithIdentifier:
logDeletingImagesWithIdentifierPrefix:
logDeletingRecordWithIdentifier:
logDeletingStickerRecents
logDidFinishEditingWithError:
logDidFinishEditingWithSuccess
logDidResetZoneWithSuccess:error:
logDiscoveredDuplicates:count:
logDispatchingRemoteChangeWithTransactionCount:handlersCount:
logDonePreLoadingPreset:task:
logDonePreLoadingThumbnailForPreLoadingTask:
logDroppingUnsupportedAvatarRecord:
logDuplicatingRecordWithIdentifier:
logErrorAddingPersistentStore:
logErrorCopyingStorageAside:
logErrorDeletingMigratedContent:
logErrorDeletingSomeThumbnail:
logErrorDeletingThumbnailsForIdentifier:error:
logErrorDuplicatingThumbnailsForIdentifier:error:
logErrorFetchingChangeHistory:
logErrorFetchingRecords:
logErrorGettingAccountInfo:
logErrorGettingAvatarsDaemonClientProxy:
logErrorGettingChangedRecordsContentForIdentifiers:error:
logErrorLoadingTemplates:
logErrorMergingCopiedAsideContent:
logErrorMigratingBackupInclusionStatus:
logErrorMitigatingDuplicates:
logErrorPinningContextToCurrentQueryGenerationToken:
logErrorProcessingChangeTransactionsToUpdateThumbnails:
logErrorReadingCurrentHistoryToken:
logErrorRemovingStoreFolder:
logErrorSandboxInit:
logErrorSavingChangeToken:location:
logErrorSavingRecentSticker:
logErrorSettingUpStore:
logErrorSettingUserDirSuffixForSandbox:
logErrorSnapshottingAVTView:
logErrorStartingServer:
logErrorTearingDownCoreDataStack:
logErrorUpdatingBackupInclusionStatus:
logErrorUpdatingBodyCarouselVisibleCellAtIndexPath:
logErrorUpdatingRecordsForMigration:
logErrorUpdatingVersion:
logErrorWhileMigratingBackend:
logExportRequestResult:error:
logFailedToGenerateStickerInService:
logFetchedOrphanedRecentSticker:
logFetchedRecentStickerWithNoStickerConfiguration:
logFetchedRecords:criteria:
logFileSystemError:
logFoundExistingRecordDuringMigration
logFoundExistingRecordDuringMigration:
logFoundRecordIdentifier:changeType:managedObjectID:
logGeneratingImageError:
logGeneratingImageForRecord:scope:type:
logGeneratingImageInServiceForRecord:
logGenericSandboxError:error:
logImageRenderServiceConnectionError:
logImageStoreBeginSavingImageForPath:
logImageStoreCacheHitForItemDescription:sizeCost:
logImageStoreCacheMiss:
logImageStoreDoneInServiceForPath:
logImageStoreDoneSavingImageForPath:
logImageStoreFailedInServiceForPath:error:
logImageStoreSavingError:code:
logImportRequestResult:error:
logInMemoryCacheStorageForResource:
logIncrementingRemoteRendererTransactionCount:
logInspectingChangesForExportAfterToken:
logLookingUpPreLoadedPreset:task:
logMaintenanceCompleted
logMigratingSource:
logMirroringRequestErrorWithCode:description:
logMissingResetSyncReasonKey
logMissingTombstonedIdentifier
logNilImageReturnedFromAVTAvatarRecordImageProvider
logNilImageReturnedFromAVTUIStickerRenderer
logNoAvatarPreset:
logNoProxyToAvatarsDaemon
logNotImportingOnLaunchWithRemainingTime:
logNotificationDoesntContainChangeHistoryToken
logParsingMetadataDefinitions
logParsingMetadataDefinitionsError:
logPerformTransition:
logPerformedRecentStickersMigration:
logPersistentChangeNotOfInterest:
logPostingChangeNotificationForIdentifiers:
logPreLoadingNeededForIndex:section:
logPreLoadingPreset:task:
logPushConnectionReceivedPublicToken:
logPushConnectionReceivedToken:topic:identifier:
logPushNotificationReceivedForTopic:payload:
logReadingBackendAtPath:
logReadingError:
logReceivedRemoteChange:
logRecordsNotFoundInAnyStore:
logRecordsNotFoundInPuppetStore:
logRecordsNotFoundInRecordStore:
logRenderingConfiguration:
logRenderingModelColor:
logRenderingModelPreset:
logRenderingRecord:size:
logRenderingStickerEnd:
logRenderingStickerStart:forRecord:
logRequestedAnimojiSticker:
logRequestingPreLoadingTask:forIndex:section:
logRequestingThumbnailForIndex:section:
logResetSyncReason:
logRetrievingSnapshotInServiceForPath:
logSavingBackend
logSchedulingImport
logSchedulingUpdateThumbnails
logSetupHandlerCompletedForTransition:state:finished:
logSetupSchedulingExport
logSetupSchedulingImport
logSetupSchedulingMigrationCheck
logSetupUserDataImportCheck
logSetupUserHasNoMemojiData
logSetupUserImportAttempting:
logSetupUserImportFailedToRemoveFileWithError:
logSetupUserImportSaveError:
logSingleModeCantSnapshotForLackOfWindow
logSingleModeControllerStartUsingLiveView:
logSingleModeControllerStopUsingLiveView:
logSkippedFetchingRecordsWithReason:
logSnapshotReturnedImage:
logStartObservingRemoteChangeNotificationFrom:
logStartObservingResetSync
logStartTransition:state:
logStartingPreLoadingTask:
logStartingServer
logStickerGeneratorPoolDidntHaveAvailableGenerator:maxCount:
logStickerSchedulerAddedTask:taskCount:
logStickerSchedulerCancelledAllTasks
logStickerSchedulerCancelledStickerSheetTasksForIdentifier:
logStickerSchedulerCancelledTask:
logStickerSchedulerStartedTask:forSchedulerRule:
logStickerViewSnapshotForBounds:offset:
logSyncEnabled
logTearingDownCoreDataStack:
logThrottlingAVTView
logTimedOutWaitingForSnapshotInService:
logToLivePoseTransitionBegins:
logToLivePoseTransitionEnds:
logTooManyAvatars:limit:
logTrackerProcessingChanges:count:from:
logTransactionHasChangesButNoToken
logTransition:state:reachedStage:
logUnableToCreatePushConnection:
logUnableToReadRemoteRecord:isCritical:
logUnthrottlingAVTView
logUpdatingBackupExclusionStatus:
logUpdatingLiveAvatarWithConfiguration:
logUpdatingThumbnails
logUsageTrackingBigDifferencesClusterCount:
logUsageTrackingRecordCount:
logUsageTrackingSmallDifferencesClusterCount:
logUserRequestedBackupXPCActivityFinished
logWarningNoHOME
logWillResetZone
logger
madeLocalChanges
managedModelAttributesRequiredForMirroring
managedRecordIdentifierForIdentifier:
manateeContainer:
matchingIdentifierTest:
maximumNumberOfSavableAvatars
memoji
memojiForRecord:
memojiForRecord:usageIntent:
migratableSources
migrateContentFromSource:toDestination:error:
migratedRecordFromRecord:index:totalCount:
migratingPersistedContent:
migrationActivityCompletion
migratorProvider
mirroringHandler
mirroringHandler:didResetSyncWithReason:
mirroringHandler:willResetSyncWithReason:
mitigateDuplicatesWithManagedObjectContext:error:
mocFactory
model
mutableCopy
name
newBackgroundContext
newManagedObjectContext
nextFrequencyCount
notificationCenter
notificationFromRemoteNotificationDictionary:
nts_avatarCountWithManagedObjectContext:error:
nts_changeNotificationObserver
nts_observers
nts_recordStorage
nts_saveManagedObjectContext:error:
numberWithInteger:
numberWithUnsignedInteger:
object
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:inDomain:
objectForKeyedSubscript:
objectWithID:
objectsAtIndexes:
observationToken
orderDate
path
performAsynchronousWork:
performBackendWork:
performBlock:afterDelay:onQueue:
performBlockAndWait:
performManagedObjectContextWork:
performObserversWork:
performPuppetStoreWork:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performSyncWorkWithRecords:
performWorkWithConnection:
performWorkWithManagedObjectContext:
performWorkWithSynchronousProxy:
performingUserRequestedBackupActivity:
persistentStoreCoordinator
persistentStoreDescriptions
persistentStores
postChangeNotificationForRecordWithIdentifiers:remote:
postNotificationName:object:userInfo:
postingAvatarStoreChangeNotification:
predicateWithFormat:
preloadAllAvatarsWithStore:completionHandler:
preloadAllAvatarsWithStore:environment:completionHandler:
preloadAvatar:
preloadAvatarsWithFetchRequests:store:environment:completionHandler:
preloadAvatarsWithIdentifiers:store:completionHandler:
preloadAvatarsWithIdentifiers:store:environment:completionHandler:
primaryAvatarIdentifier
processChangesForChangeTracker:completionHandler:
processID
processIdentifier
processInfo
processName
processRemoteChangeNotification:completion:
processingDidResetSyncNotification:
processingRemoteChangeNotification:
processingWillResetSyncNotification:
puppet
puppetName
puppetRecords
puppetStore
puppetStoreAccessQueue
pushConnection
pushNotificationsSupport
raise:format:
readContentFromDiskAtLocation:logger:error:
readVersionForStoreAtLocation:error:
recentStickersDidChange:
recentStickersForFetchRequest:error:
recordAtIndex:
recordChangeTracker
recordIdentifier
recordIdentifierForChange:managedObjectContext:
recordIdentifiersForManagedObjectIDs:managedObjectContext:error:
recordStore
recordTransformer
recordWithManagedRecord:error:
registerCoalescerEventHandler
registerEventForCoalescingWithLabel:handler:
remoteChangesObserver
remoteConfigurationWithDaemonClient:environment:
remoteConfigurationWithEnvironment:
removeAllObjects
removeFilesAtLocation:error:
removeItemAtURL:error:
removeObjectAtIndex:
removeObjectsAtIndexes:
removePersistentStore:error:
removePointerAtIndex:
replaceObjectAtIndex:withObject:
requestForAllAvatars
requestForAllAvatarsExcluding:
requestForAllRecentStickers
requestForAvatarsWithIdentifiers:
requestForCustomAvatars
requestForCustomAvatarsWithLimit:
requestForMostRecentStickersWithResultLimit:
requestForPredefinedAvatars
requestForPredefinedAvatarsExcluding:
requestForStickersWithAvatarIdentifier:stickerIdentifier:
requestForStorePrimaryAvatar
resetFlushCacheValuesIfNeeded
resetSyncShouldPreserveContentForReason:
resetZoneWithManagedObjectContext:completionHandler:
respondsToSelector:
restoringStorage:
result
resultLimit
resume
retain
retainCount
rootByRemovingAvatarWithIdentifier:fromRoot:
rootBySavingAvatarRecord:afterAvatarRecord:forDomainIdentifier:toRoot:
runMaintenanceTasks
runningMaintenance:
save:
saveAvatar:error:
saveAvatarRecord:thumbnailAvatar:completionBlock:thumbnailGenerationCompletionBlock:
saveAvatars:error:
saveModel:logger:error:
saveStickersToUserDefaults
saveToDiskAtLocation:error:
saveToken:location:error:
savingChangeTrackerToken:
savingRecords:
scheduleExportChangesWithManagedObjectContext:discretionary:workQueue:completionHandler:
scheduleExportWithManagedObjectContext:discretionary:completion:
scheduleImportChangesWithManagedObjectContext:workQueue:completionHandler:
scheduleImportDiscretionary:completionBlock:
scheduleMigrationThen:
scheduleSetupThen:
scheduleUpdateThumbnails
scheduleWithBlock:
scheduler
schedulerForPostInstallMigrationActivity
schedulerForUserRequestedBackupActivity
schedulingAuthority
self
serialQueueProvider
serializationVersion
server
setApplicationBundleIdentifierOverrideForNetworkAttribution:
setAttributeType:
setAttributes:ofItemAtPath:error:
setAvatarData:
setAvatarsByIdentifiers:
setBackendDelegate:
setContainerOptions:
setDelegate:
setDidResetNotificationToken:
setDiscretionaryNetworkBehavior:
setEntities:
setEventDeliveryScheduled:
setEventHandler:
setEventLabel:
setExportInFlight:
setExportedInterface:
setExportedObject:
setExpression:
setExpressionResultType:
setFetchLimit:
setFrequencyCounter:
setHandler:
setHavingPredicate:
setIdentifier:
setImageHandlingDelegate:
setInterruptionHandler:
setInvalidationHandler:
setIsPuppet:
setManagedObjectClassName:
setMirroringDelegate:
setModel:
setName:
setNotificationCenter:
setNts_changeNotificationObserver:
setNts_recordStorage:
setObject:atIndexedSubscript:
setObject:forKey:inDomain:
setObject:forKeyedSubscript:
setObservationToken:
setOperationConfiguration:
setOption:forKey:
setOrderDate:
setPersistentStoreCoordinator:
setPredicate:
setPreregistered:
setPreservesValueInHistoryOnDeletion:
setProperties:
setPropertiesToFetch:
setPropertiesToGroupBy:
setPuppetRecords:
setPushConnection:
setQueryGenerationFromToken:error:
setRemoteObjectInterface:
setResourceValue:forKey:error:
setResultType:
setReturnsObjectsAsFaults:
setServer:
setSetupCompleted:
setShouldAddStoreAsynchronously:
setSortDescriptors:
setSortedAvatars:
setStickerBackendDelegate:
setStickers:
setTransactionAuthor:
setType:
setUseZoneWidePCS:
setUserRequestedBackupActivityCompletion:
setWillResetNotificationToken:
setupCompleted
setupConnectionWithCompletionHandler:
setupIfNeeded:
setupStoreIfNeeded:
setupThen:
sideDatabaseFolderForStoreLocation:
significantRecordChangeInDataSource:
sortDescriptorWithKey:ascending:
sortedAvatars
sortedRecordsEditableFirstReverseOrder:
standardUserDefaults
startListening
startListeningToPushNotifications
startObservingChanges
startObservingChangesIfNeeded
startObservingResetSyncWithNotificationCenter:
stickerBackend
stickerBackendDelegate
stickerChangeObserver
stickerConfigurationIdentifier
stickerIdentifier
stickerImageStoreLocation
stickers
stickersIndexesMatchingAvatarIdentifier:stickerIdentifier:
stopListeningToPushNotifications
store
store:didCreateDuplicateAvatar:forOriginal:postCompletionHandler:
store:didDeleteAvatarWithIdentifier:postCompletionHandler:
store:didSaveAvatar:postCompletionHandler:
storeDescription
storeDidChange
storeLocation
storeLocationForDomainIdentifier:environment:
storeMaintenance
stringByAppendingFormat:
stringByAppendingString:
stringByReplacingOccurrencesOfString:withString:
stringWithFormat:
subarrayWithRange:
superclass
supportsDeviceToDeviceEncryption
supportsSecureCoding
synchronousRemoteObjectProxyWithErrorHandler:
tearDownAndEraseAllContent:
timeIntervalSinceDate:
token
tokenFileURLForLocation:
tombstone
topic
trackerChangeTypeFromPersistentChangeType:
trackerChangesFromPersistentChanges:managedObjectContext:
transactionsForPendingChanges
unarchivedObjectOfClass:fromData:error:
unarchivedObjectOfClasses:fromData:error:
unsignedIntegerValue
updateBackupInclusionStatusOnQueue:completionHandler:
updateStickerAtIndex:
updateThumbnails
updateThumbnailsForChangesWithTracker:recordProvider:
updatedProperties
updatedRecordsForMigratingRecords:source:destinationBackend:error:
updatingThumbnailsForRemoteChanges:
userDefaults
userInfo
userRequestedBackupActivityCompletion
versionFileLocationForStoreLocation:
versionFromDiskAtLocation:error:
weakObjectsPointerArray
willResetNotificationToken
willResetSync:
workQueue
writeContent:toDiskAtLocation:logger:error:
writeToURL:options:error:
writeVersion:toDiskAtLocation:error:
xpcInterface
zone
v32@0:8@16@?24
v24@0:8@?16
v32@0:8@"NSString"16@?<v@?>24
v24@0:8@?<v@?B>16
@40@0:8d16@24@32
@?16@0:8
@16@0:8
v24@0:8@16
d16@0:8
B16@0:8
v20@0:8B16
v16@0:8
@"NSString"
@"<AVTUILogger>"
@"NSObject<OS_dispatch_queue>"
@32@0:8@16q24
@32@0:8@16@24
B24@0:8q16
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@32@0:8@16^@24
B32@0:8@16^@24
B24@0:8^@16
@"NSArray"32@0:8@"AVTAvatarFetchRequest"16^@24
B32@0:8@"AVTAvatarRecord"16^@24
B32@0:8@"NSArray"16^@24
B32@0:8@"NSString"16^@24
@"AVTAvatarRecord"32@0:8@"AVTAvatarRecord"16^@24
@"<AVTStoreBackendDelegate>"16@0:8
v24@0:8@"<AVTStoreBackendDelegate>"16
@"<AVTAvatarRecordChangeTracker>"16@0:8
@64@0:8@16@24@32@40@48@56
@40@0:8@16@24^@32
v40@0:8^@16^@24@32
Q32@0:8@16^@24
@"<AVTStoreBackendDelegate>"
@"<AVTAvatarRecordChangeTracker>"
@"<AVTCoreDataPersistentStoreConfiguration>"
@"<AVTAvatarManagedRecordTransformer>"
@"<AVTCoreDataRemoteChangesObserver>"
v48@0:8@16@24@?32@?40
v32@0:8@"AVTAvatarFetchRequest"16@?<v@?@"NSArray"@"NSError">24
v48@0:8@"<AVTAvatarRecord>"16@"AVTMemoji"24@?<v@?B@"NSError">32@?<v@?B@"NSError">40
v32@0:8@"<AVTAvatarRecord>"16@?<v@?B@"NSError">24
v32@0:8@"<AVTAvatarRecord>"16@?<v@?B@"<AVTAvatarRecord>"@"NSError">24
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v40@0:8@16@24@?32
@"NSArray"32@0:8@"AVTStickerFetchRequest"16^@24
v40@0:8@"NSString"16@"NSString"24@?<v@?B@"NSError">32
v32@0:8@"<AVTAvatarRecordChangeTracker>"16@?<v@?B@"NSError">24
@"<AVTStickerBackendDelegate>"16@0:8
v24@0:8@"<AVTStickerBackendDelegate>"16
@24@0:8@16
Q32@0:8@16@24
Q40@0:8@16@24@32
@40@0:8@16@24@32
v48@0:8@16@24@32@?40
v40@0:8@"<AVTAvatarStoreInternal>"16@"<AVTAvatarRecord>"24@?<v@?@?<v@?>>32
v40@0:8@"<AVTAvatarStoreInternal>"16@"NSString"24@?<v@?@?<v@?>>32
v48@0:8@"<AVTAvatarStoreInternal>"16@"<AVTAvatarRecord>"24@"<AVTAvatarRecord>"32@?<v@?@?<v@?>>40
@24@0:8Q16
@24@0:8@?16
Q24@0:8@?16
@"<AVTAvatarRecord>"24@0:8Q16
@"<AVTAvatarStore>"16@0:8
@"NSIndexSet"24@0:8@?<B@?@"<AVTAvatarRecord>"Q^B>16
Q24@0:8@?<B@?@"<AVTAvatarRecord>"Q^B>16
@"NSIndexSet"16@0:8
@"<AVTAvatarStoreInternal>"16@0:8
@48@0:8@16@24@32@40
@56@0:8@16@24@32@40@48
v32@0:8:16@?24
@"AVTPAvatarStore"
@"AVTObservableAvatarStore"
@"AVTAvatarFetchRequest"
@"NSMutableArray"
@"NSNotificationCenter"
@"NSPointerArray"
@"<NSObject>"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^{_NSZone=}16
@32@0:8@16Q24
v40@0:8@16@?24@?32
@24@0:8^@16
@"NSArray"
@24@0:8q16
@32@0:8q16q24
@40@0:8q16@24@32
q16@0:8
@32@0:8@16@?24
@48@0:8@16@?24@32@40
B40@0:8@16@24^@32
@"<AVTEventCoalescer>"
@32@0:8@?16@24
v44@0:8@16B24@28@?36
v24@0:8@"NSNotificationCenter"16
v44@0:8@"NSManagedObjectContext"16B24@"NSObject<OS_dispatch_queue>"28@?<v@?B@"NSError">36
v32@0:8@"NSManagedObjectContext"16@?<v@?B@"NSError">24
@"<AVTCoreDataCloudKitMirroringHandlerDelegate>"16@0:8
v24@0:8@"<AVTCoreDataCloudKitMirroringHandlerDelegate>"16
@"<AVTCoreDataCloudKitMirroringHandlerDelegate>"
@"<AVTBlockScheduler>"
@?24@0:8@16
v24@0:8@?<v@?@"NSManagedObjectContext"@"NSArray">16
@"AVTCoreEnvironment"
@"NSURL"
v40@0:8@?16d24@32
v40@0:8@?<v@?>16d24@"NSObject<OS_dispatch_queue>"32
@"<AVTAvatarStoreDelegate>"
@"<AVTAvatarStoreInternal>"
@40@0:8@16Q24Q32
@"<AVTStoreBackend>"16@0:8
@"AVTAvatarRecord"40@0:8@"AVTAvatarRecord"16Q24Q32
@32@0:8q16@24
@"NSData"
@"NSDate"
@"NSNumber"
Q24@0:8^@16
@"AVTArchiverBasedStoreRoot"
@"NSDictionary"
v32@0:8@16@24
v32@0:8@"<AVTStoreBackend>"16@"NSArray"24
v28@0:8@16B24
@"<AVTPBackendImageHandlingDelegate>"
@"<AVTStoreBackend>"
@"AVTPuppetStore"
@"<AVTStickerBackend>"
v24@0:8Q16
@"<AVTStickerBackendDelegate>"
@"NSUserDefaults"
@48@0:8q16@24@32q40
B48@0:8@16@24@32^@40
@32@0:8d16d24
B40@0:8@16@?24^@32
B40@0:8@"NSURL"16@?<B@?@"NSArray">24^@32
@48@0:8@16@24@?32^@40
q24@0:8q16
B40@0:8@"<AVTStoreBackendMigratableSource>"16@"<AVTStoreBackend>"24^@32
@48@0:8@16@24@32^@40
@"NSPersistentStoreCoordinator"16@0:8
@"NSManagedObjectContext"16@0:8
@"NSPersistentStoreDescription"16@0:8
@"NSPersistentContainer"
@"<AVTAvatarsDaemon>"
@"NSArray"16@0:8
@"NSXPCStoreServer"24@0:8^@16
@"<AVTStoreBackendMigratableSource>"16@0:8
v32@0:8@"NSObject<OS_dispatch_queue>"16@?<v@?B@"NSError">24
@36@0:8@16B24@28
B32@0:8^@16@24
@"NSPersistentStoreCoordinator"
@"NSPersistentStoreDescription"
@"NSUUID"24@0:8@"NSString"16
@"NSString"24@0:8@"NSUUID"16
v32@0:8@"AVTAvatarManagedRecord"16@"AVTAvatarRecord"24
@"AVTAvatarRecord"32@0:8@"AVTAvatarManagedRecord"16^@24
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"<AVTAvatarsDaemonServerDelegate>"16@0:8
v24@0:8@"<AVTAvatarsDaemonServerDelegate>"16
@"<AVTAvatarsDaemonServerDelegate>"
@"NSXPCListener"
@"<AVTAvatarRecord>"
v40@0:8@16{CGSize=dd}24
v32@0:8Q16q24
v32@0:8@16Q24
v32@0:8@16q24
v40@0:8@16@24q32
v32@0:8Q16Q24
v40@0:8@16Q24Q32
v32@0:8Q16@24
v40@0:8Q16{CGSize=dd}24
v28@0:8B16@20
v32@0:8q16@24
v40@0:8@16@24@32
v40@0:8@16Q24@32
v40@0:8@16q24@32
v24@0:8d16
v20@0:8i16
v28@0:8@16i24
v24@0:8*16
v36@0:8@16q24B32
v32@0:8q16q24
v40@0:8@16{CGPoint=dd}24
v32@0:8d16B24B28
v24@0:8q16
v24@0:8@"NSString"16
v40@0:8@"NSString"16{CGSize=dd}24
v32@0:8@"NSString"16@"NSString"24
v24@0:8@?<v@?@?<v@?>>16
v32@0:8@"NSString"16Q24
v32@0:8@"NSString"16q24
v40@0:8@"NSString"16@"NSString"24q32
v40@0:8@"NSString"16Q24Q32
v32@0:8Q16@"NSString"24
v28@0:8B16@"NSString"20
v32@0:8q16@"NSString"24
v40@0:8@"NSString"16@"NSString"24@"NSString"32
v28@0:8@"NSString"16B24
v40@0:8@"NSString"16Q24@"NSString"32
v40@0:8@"NSString"16q24@"NSString"32
v24@0:8@"NSArray"16
v28@0:8@"NSString"16i24
v36@0:8@"NSString"16q24B32
v24@0:8@"NSError"16
v40@0:8@"NSString"16{CGPoint=dd}24
v24@0:8@"NSIndexPath"16
@"NSObject<OS_os_log>"
B24@0:8Q16
v24@0:8@"<AVTPushNotificationsSupport>"16
v32@0:8@"<AVTCoreDataCloudKitMirroringHandler>"16Q24
v24@0:8@"<AVTAvatarsDaemonServer>"16
@128@0:8@16@24@?32@40@48@56@64@72@80@88@96@104@112@120
v32@0:8@?16@?24
v28@0:8B16@?20
B24@0:8@?16
v36@0:8@16B24@?28
@"<AVTCoreDataPersistentStoreLocalConfiguration>"
@"NSXPCStoreServer"
@"<AVTPushNotificationsSupport>"
@"<AVTCoreDataCloudKitMirroringHandler>"
@"<AVTSyncSchedulingAuthority>"
@"AVTStickerChangeObserver"
@"<AVTAvatarsDaemonServer>"
@"<AVTCoreDataStoreMaintenance>"
v48@0:8@16@24@32@40
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v40@0:8@"APSConnection"16@"NSData"24@"APSAppTokenInfo"32
v40@0:8@"APSConnection"16@"APSURLToken"24@"APSURLTokenInfo"32
v40@0:8@"APSConnection"16@"NSError"24@"APSURLTokenInfo"32
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
@"<AVTPushNotificationsSupportDelegate>"16@0:8
v24@0:8@"<AVTPushNotificationsSupportDelegate>"16
@"<AVTPushNotificationsSupportDelegate>"
@"APSConnection"
@"AVTPushNotificationsConnectionFactory"
@(#)PROGRAM:AvatarPersistence  PROJECT:Animoji-306.1
333333
?333333
?333333
?333333
Coalescer already received an eventHandler
Coalescer did not receive an eventHandler
v8@?0
com.apple.AvatarUI.AVTCoreDataStoreBackend.changesObserverQueue
self in %@
v24@?0@"NSManagedObjectContext"8@"NSArray"16
%@ : unexpected class is %@
v16@?0@"NSManagedObjectContext"8
@"NSUUID"16@?0@"AVTAvatarRecord"8
%K IN %@
@"NSUUID"16@?0@"AVTAvatarManagedRecord"8
%K == %@
%K > %@ AND %K < %@
%K in %@
NOT (%K in %@)
AVTAvatarStoreDomainMessages
AVTAvatarStoreDomainFunCam
AVTAvatarStoreDomainFaceTime
AVTAvatarStoreDomainInternal
Unexpected object class for %@
Unexpected object protocol for %@
v16@?0@"NSNotification"8
v16@?0@"NSPointerArray"8
v16@?0@"<AVTAvatarRecordDataSourceObserver>"8
v16@?0@"NSMutableArray"8
Index %lu out of datasource %p bounds, count: %lu
B32@?0@"<AVTAvatarRecord>"8Q16^B24
v16@?0@"AVTAvatarRecord"8
v16@?0@"AVTAvatarPuppetRecord"8
Can't decode memoji! Error: %@
B32@?0@"AVTAvatarPuppetRecord"8Q16^B24
 criteria:%ld limit:%ld ari:%@ sci:%@
com.apple.AvatarUI.AVTCoreDataStoreMaintenance.workQueue
StoreMaintenanceObservedChange
v16@?0@?<v@?>8
v32@?0@"NSUUID"8@"NSArray"16^B24
count
count:
%@ > 1
@"NSUUID"16@?0@"NSDictionary"8
Got nil transformed object for %@
v32@?0@8@"<NSCopying>"16^B24
Nil key provided for %@
Already have an object for %@
@"NSXPCConnection"8@?0
com.apple.avatar.support
v16@?0@"NSError"8
v16@?0@"NSXPCConnection"8
v16@?0@"<AVTAvatarsDaemon>"8
Already observing notifications
Export already in flight, try again later
v16@?0@"NSCloudKitMirroringResult"8
Disabled mirroring handler!
identifier
Add handler before starting to observe!
NSPersistentStoreRemoteChangeNotification
v32@?0@?<v@?@"NSManagedObjectContext"@"NSArray">8Q16^B24
Already observing!
com.apple.AvatarUI.AVTCoreDataRemoteChangesObserver.RemoteNotification
v12@?0B8
 object:%@
B16@?0@"NSPersistentHistoryChange"8
v24@?0@"NSPropertyDescription"8^B16
B24@?0@"NSArray"8@"NSString"16
B16@?0@"NSArray"8
@"NSObject<OS_dispatch_queue>"16@?0r*8
SIMULATOR_SHARED_RESOURCES_DIRECTORY
Library/Avatar
Images
Animoji
Stickers
Can't get image cache location %@
com.apple.avatar.activity.PostInstallMigration
com.apple.avatar.activity.UserRequestedBackup
domainIdentifier
primaryAvatarIdentifier
AVTAvatarUIShowAssetsWarning
AVTAvatarUIShowPerfHUD
AVTAvatarUIEditorShowAssetsName
AVTAvatarUILastCacheVersion
AVTAvatarUIThumbnailCaching
AVTAvatarUIFlushThumbnailCache
AVTAvatarShowTrackingLostReticle
AVTUIGlobalPreferencesMemojiClassicDisclosureWarning
AVTAvatarUseLocalEditorModel
AVTAvatarHasDisplayedSplashScreen
AVTAvatarHasDisplayedAnimojiSplashScreen
AVTAvatarHasDisplayedCameraEffectsSplashScreen
AVTAvatarHasDisplayedCameraDisclosureSplashScreen
AVTAvatarHasDisplayedAnimojiCameraDisclosureSplashScreen
AVTAvatarHasDisplayedCameraEffectsCameraDisclosureSplashScreen
AVTAvatarAlwaysShowSplashScreen
AVTAvatarForceCameraDisclosures
AVTAvatarHasDisplayedPaddleView
AVTAvatarAlwaysShowPaddleView
AVTUIGlobalPreferencesHasDisplayedCategoriesDiscoverability
AVTUIGlobalPreferencesDisableDeleteConfirmation
AVTUIGlobalPreferencesDisablEditAfterDuplicate
AVTUIGlobalPreferencesGroupDialUsesMasking
AVTAvatarPreLoadOnLaunch
AVTAdaptativeFrameRate
AVTAvatarUIWipeCloudKitContainer
AVTAvatarUIUseTestCloudKitContainer
AVTAvatarUIWipeDatabase
AVTSyncEnabled
AVTUIEditorGroupName
AVTSyncImportDate
AVTUISyncExportRequired
AVTUISyncPreserveContentOnAccountChange
AVTUIRestrictMaxAvatarCount
AVTUIGlobalPreferencesStickersLastSelected
AVTUIGlobalPreferencesStickersDisclosureWarning
AVTUIGlobalPreferencesStickerRecentsDisclosureWarning
AVTUIGlobalPreferencesStickersCaching
AVTUIGlobalPreferencesFlushStickersCache
AVTUIGlobalPreferencesShowPrereleaseStickerPack
AVTUIGlobalPreferencesShowPrereleaseStickerLabel
AVTUIGlobalPreferencesStickersHEICSSequence
com.apple.Animoji.StickerRecents.SplashVersion
AVTUIGlobalPreferencesAlwaysShowStickerRecentsSplashScreen
AVTUIGlobalPreferencesForceNoMemojiStickerRecentsSplashScreen
AVTUIGlobalPreferencesStickerRecentsMigrationVersion
com.apple.AvatarUI.Staryu
SBIconVisibility
.GlobalPreferences
domains
records
v24@?0@"NSArray"8@"NSError"16
v20@?0B8@"NSError"12
v28@?0B8@"<AVTAvatarRecord>"12@"NSError"20
AVTAvatarUIErrorDomain
AVTAvatarUIMultipleErrorsKey
B32@?0@"AVTAvatarRecord"8Q16^B24
avatarData
orderDate
avatarDataString
B32@?0@"AVTStickerRecord"8Q16^B24
avatarRecordIdentifier
stickerConfigurationIdentifier
frequencySum
serializationVersion
 identifer:%@ ari:%@ sci:%@ frequencySum:%ld version:%ld
B32@?0@"AVTArchiverBasedDomain"8Q16^B24
v24@?0Q8^B16
AVTAvatarStoreDidChangeNotification
changedRecordIDs
com.apple.AvatarUI.AVTAvatarStore.backendAcccessQueue
com.apple.AvatarUI.AVTAvatarStore.workQueue
com.apple.AvatarUI.AVTAvatarStore.puppetStoreAccessQueue
Running as setup user
v16@?0@"<AVTStoreBackend>"8
v16@?0@"AVTPuppetStore"8
@"AVTAvatarRecord"16@?0@"NSString"8
AVTTypeMismatchException
com.apple.animoji
AVTRecentStickers
AVTStickersArray
AVTFrequencyCounter
AVTRecentStickerChangedExternallyNotification
avatars.db
avatars.version
Version object is not of expected class
backendVersion
avatarKitVersion
 backend:%2.2f avatarKit:%2.2f
currentHistoryToken
Got a nil NSPersistentHistoryResult, but no error filled in
 type:%ld identifier:%@
@"NSString"16@?0@"AVTAvatarRecord"8
AVTCoreDataContainer
movedaside
AvatarUIClient
com.apple.avatar.service
v24@?0@"NSPersistentStoreDescription"8@"NSError"16
CoreDataBackend
B24@?0^{__CFString=}8^@16
v24@?0@"NSNumber"8@"NSError"16
InvalidClass
Record identifier is not of type NSUUID
Record has a nil identifier
@"NSString"16@?0@"<AVTAvatarRecordChange>"8
isPuppet
avatarRecord
com.apple.avatar.AvatarUI
General
UserInteraction
Backend
com.apple.AvatarUI.AVTCoreDataStoreServer.backgroundQueue
@"<AVTStoreBackendMigrator>"8@?0
com.apple.AvatarUI.AVTCoreDataStoreServer.stickerBackend
@"NSManagedObjectContext"8@?0
Cancelling due to running as Setup User
Completed Internal Settings changes
v16@?0@?<v@?q>8
com.apple.AvatarUI.AVTCoreDataServer.setup
com.apple.AvatarUI.AVTCoreDataServer.backupStatus
com.apple.AvatarUI.AVTCoreDataServer.migration
com.apple.AvatarUI.AVTCoreDataServer.import
com.apple.AvatarUI.AVTCoreDataServer.Maintenance
com.apple.AvatarUI.AVTCoreDataServer.export
com.apple.AvatarUI.AVTCoreDataServer.updateThumbnails
com.apple.AvatarUI.AVTCoreDataServer.deleteStickerRecents
com.apple.AvatarUI.AVTCoreDataServer.pushNotification
com.apple.AvatarUI.AVTCoreDataServer.didResetSync
com.apple.AvatarUI.AVTCoreDataServer.ClientCheckin
com.apple.AvatarUI.AVTPushNotificationSupport.connectionQueue
com.apple.aps.avatar.service
Unable to create an APSConnection
v24@?0@"NSString"8@"NSError"16
com.apple.avatarsd
com.apple.icloud-container.
Avatar
com.apple.Avatars
iCloud.com.apple.AvatarUI.Staryu
v24@?0@"CKAccountInfo"8@"NSError"16
com.apple.Memoji
[AVTUIDEBUG] %@
Error loading templates %@
Parsing metadata definitions
Error parsing metadata definitions %@
Rendering model color %@
Rendering model preset %@
Rendering configuration %@
RenderSnapshot
Rendering record %@, at size %2.2fx%2.2f
Snapshot returned %@
No avatar preset for %@
Creating AVTAvatarStore instance %@
Creating empty database at path %@
Creating Folder at path %@
Error creating folder or empty data %@
Saving backend
Deleting record with identifier %@
Deleting images with identifier prefix %@
Duplicating record with identifier %@
Reading backend at %@
Error while saving backend %@
Error while reading backend %@
Record not found in any store (%@)
Puppet(s) not found (%@)
Avatar Record(s) not found (%@)
Error saving recent stickers (%@)
Error fetching recent stickers (%@)
Error fetched an unusable recent sticker (%@)
Error can't find sticker for a recent sticker (%@). Forcing migration
Performed sticker recents migration, found orphaned: %{public}d
SavingRecords
DeletingRecords
FetchingRecords
DuplicatingRecords
Fetched %lu record(s), criteria: %ld
Skipped fetching records: %@
Detected a version mismatch, found %{public}@, current is %{public}@
Avatar record has a version lower than what AvatarKit supports, dropping. %@
Exiting avatarsd for reason: %@
Error updating version %@
Error migrating backend %@
Did finish editing avatar successfully
Error when finishing editing %@
File system error: %@
Creating image store at path %@
Image Store Cache miss: %@
Image Store Cache HIT for %@, size %lu
Image Store failed to save with error: %@, code %ld
SavingImage
Image Store saved image at path %@
[InMemCache] Storage for %@
[InMemCache] HIT for %@
[InMemCache] Evicting object %@
Generating image for record %@, with scope %@, type %ld
Error generating image: %@
Error deleting thumbnails for identifier %@, %@
Error deleting Some thumbnails: %@
Error duplicating thumbnails for identifier %@, %@
Error fetching records %@
[PreLoading] Needed - %lu|%lu
[PreLoading] %@ requested - %lu|%lu
[PreLoading] %@ starts
[PreLoading] %@ CANCELED!
[PreLoading] %@ looking up %@
[PreLoading] %@ loading %@
PreLoadingPreset
[PreLoading] %@ Got thumbnail
Updating live avatar with %@
Requesting thumbnail for %@|%lu
Throttling AVTView
Unthrottling AVTView
Error snapshotting the AVTView: %{public}@
Carousel snapshot for record at index %lu, size %2.2fx%2.2f
-[AVTAvatar preloadAvatar:] identifier %@
AvatarPreLoad
Can't generate a AVTView snapshot, no window present
We have %ld memoji(s)
Clusters of record with small differences: %ld
Clusters of record with big differences: %ld
Starting up server
SettingUpStore
ExportingRecords
ImportingRecords
XPCActivityPostInstallMigration
Finished running migration XPC activity!
XPCActivityUserRequestedBackup
Finished running User Requested Backup XPC activity!
Sync is ENABLED
CloudKit Import Request FAILED, error %@
CloudKit Import Request SUCCEEDED
CloudKit Export Request FAILED, error %@
CloudKit Export Request SUCCEEDED
Mirroring request failed with error (%ld) %@
Migration
Migrating source %@
Error updating records for migration: %@
Found existing record during migration with identifier %@
Error deleting migrated content: %@
Found an existing record with same identifier during migration!
Error adding persistent store: %@
Error starting server! %@
Error setting up store: %@
Received public token %@
Received per-topic push token %@ for topic %@ identifier %@
Received Push Notification for topic: %@, payload: %@
Unable to create Push Connection! %@
ProcessingRemoteChanges
Start observing NSPersistentStoreRemoteChangeNotification from %@
Received NSPersistentStoreRemoteChangeNotification: %@
Dispatching NSPersistentStoreRemoteChangeNotification with %lu transactions; %lu handlers listening
Error fetching change history: %@
notification.userInfo doesn't contain a value for NSPersistentHistoryTokenKey
Changes require export!
Changes require thumbnail update!
Error pinning context to current query generation token: %@
Inspecting changes after token: %@
Unable to read remote record! %@
SavingChangeTrackerToken
Current history token file doesn't exist at path %@
Error reading current history token %@
Author %@ is processing %lu changes: %@
Transaction has changes but nil token! Can't process those changes.
Unable to save change token: %@, location %@
Found record identifier %@ for change type %ld, managedObjectID %@
Did NOT find record identifier for change type %ld, managedObjectID %@ - could be processing ancient history.
DeletingStickerRecentsForRemoteChanges
Deleting sticker recents for sync
UpdatingThumbnailsForRemoteChanges
Error processing change transactions to update thumbnails: %@
Checking if migration needed
Updating thumbnails if needed
Scheduling import of records
Scheduling thumbnail update
WILL RESET CLOUDKIT ZONE!
Did reset CloudKit zone with success %d, error %@
Will tear down CoreData stack for path %@
Error tearing down CoreData stack
Error removing store folder
AVTAvatarStoreDidChangeNotification
Posting change notification for %lu record id(s) %@
Not importing on launch, still remains %02luh %02lum %02lus
failed to configure sandbox storage for avatarsd: %{darwin.errno}d
failed to %{public}@: %{darwin.errno}d
failed to enter sandbox: %{public}s
$HOME not set, falling back to using getpwuid
WillResetSync
DidResetSync
CopyingStorageAside
RestoringStorage
Starting to observe NSCloudKitMirroringDelegateWillResetSyncNotificationName / NSCloudKitMirroringDelegateDidResetSyncNotificationName
Got a notification but no NSCloudKitMirroringDelegateResetSyncReasonKey!
Got a change with a tombstone missing identifier!
Got a change that didn't seem interesting: %@
Reset Sync reason: %lu
Error copying storage aside: %@
Error merging copied aside content: %@
Setup - will check if migration is needed
Setup - scheduling import
Setup - scheduling export
Coalescable event occured: %{public}@
Error getting changed records, %@ for identifiers %@
Too many avatars! (%lu/%lu). %lu won't display.
CheckingAccount
Got account info! HSA2: %d, status: %ld, description: %@
Error getting account info %@
Error migrating backup inclusion status: %@
Error updating backup inclusion status: %@
Will NOT include database in backup.
Will include database in backup.
Accepting incoming connection on side channel
CheckIn from client with pid %d
Connection to avatarsd INTERRUPTED!
Connection to avatarsd invalidated
Error getting proxy to avatarsd: %@
Cant get a proxy to avatarsd! Work won't be performed.
CheckingIn
RunningStoreMaintenance
Error mitigating duplicates %@
Store maintenance completed!
Discovered %lu group(s) of duplicates: %@
Fixing duplicate with identifier %@ to have identifier %@
Sticker Generator Pool has to steal a generator in Use, %ld in use, %ld max
PaddleView Video Player failed with error %@; restarting videos
Rendering sticker %@ for record %@
RenderSticker
StickerViewController preparing for snapshot for bounds %@ offset %f
[StickerTaskScheduler] Added task: %@, task count: %ld
[StickerTaskScheduler] Started task: %@, scheduler rule: %@
[StickerTaskScheduler] Cancelled task: %@
[StickerTaskScheduler] Cancelled sticker sheet tasks for identifier: %@
[StickerTaskScheduler] Cancelled all tasks
[AVTBodyCarousel] bodyPoseCell is nil or unexpected type at indexPath %@
Nil image returned from AVTUIStickerRenderer
Nil image returned from _AVTAvatarRecordImageProvider
Animoji Usage Analysis Service checking in. Criteria: %@
Animoji Usage Analysis Service will perform analysis
Animoji Usage Analysis Service did perform analysis
Animoji Usage Analysis Service did did not process the %@ state
Carousel changing to single avatar mode
Carousel changing to multi avatar mode
Carousel changes center item to:%@
Carousel transtioning center item:%@, center cell:%@
Carousel stops focusing on center item:%@, center cell:%@
Single mode controller STARTS using liveView: %@
Single mode controller STOPS using liveView: %@
[AVTTransition:%@] Carousel Cell STARTS using liveView, cell:%@
[AVTTransition:%@] Carousel Cell STOPS using liveView, cell:%@
[AVTTransition:%@] -> Carousel adds transition to coordinator
[AVTTransition:%@] -> starts, state: %ld
[AVTTransition:%@] -> Setup done, state: %ld, finished %@
[AVTTransition:%@] -> Perform
[AVTTransition:%@] -> CANCEL!
[AVTTransition:%@] -> reached stage %lu, state: %lu
ToLive
[AVTView] Set avatar: %@
AVTViewSetAvatar
[AVTView] Did render avatar: %@, current avatar %@, match %@
Did not get a valid frame for element at index %ld
[Delegate] Did Focus on record %@
[Delegate] Will End Focus on record %@
[Delegate] Did Move (%2.2lf) Toward record %d, editable %d
[Delegate] Did Update with record %@
Carousel ends dragging with velocity:%2.2lf, switch instead of scroll back: %d, switch for high velocity: %d
Setup User has no Memoji data to import
Setup User data import failed to unarchive data at path: %@, error: %@
Setup User import attempting to save %ld records
Setup User data import failed to save avatar records, error: %@
Setup - checking for Setup User data to import
Setup User data import failed to remove draft data file
Requesting Animoji sticker snapshot generated in service
Failed to set up remote connection, error: %@
Generating image and writing to cache in service for record: %@
Image saved to cache by MemojiImageRenderService at path %@
Image save failed in MemojiImageRenderService at path %@, with error: %@
Retrieving snapshot in service from cache at path %@
Semaphore timed out at %f seconds waiting for snapshot to generate sticker %@
Failed to generate sticker in service %@
Incrementing remote renderer transaction count to  %li
Decrementing remote renderer transaction count to  %li
Cancelling cleanup block in remote render service
Cleanup timer completed, clean exiting remote render service
AVTEventCoalescer
AVTPassthroughEventCoalescer
AVTCoreDataStoreBackend
AVTStoreBackend
NSObject
AVTAvatarStoreInternal
AVTAvatarStore
AVTStickerBackend
AVTPAvatarRecordDataSource
AVTAvatarStoreDelegate
AVTAvatarRecordDataSourceInternal
AVTAvatarRecordDataSource
Convenience
AVTAvatarRecordInternal
AVTAvatarRecord
NSSecureCoding
NSCoding
NSCopying
AVTAvatarRecordRendering
AVTPuppetStore
AVTStickerFetchRequest
AVTCoreDataStoreMaintenance
AvatarUI
AVTAvatarsDaemonClient
AVTAvatarsDaemon
AVTCoreDataCloudKitMirroringHandler
AVTDisabledMirroringHandler
AVTAvatarPuppetRecord
AVTCoreDataRemoteChangesObserver
AVTCoreEnvironment
AVTBackgroundActivitySchedulerFactory
AVTArchiverBasedDomain
AVTArchiverBasedStoreRoot
AVTAvatarRecordSerializer
AVTBlockScheduler
AVTObservableAvatarStore
AVTArchiverBasedStoreMigratableSource
AVTStoreBackendMigratableSource
AVTError
AVTStickerRecord
AVTArchiverBasedStoreBackend
AVTAvatarStoreNotification
AVTPAvatarStore
AVTStoreBackendDelegate
AVTAvatarStoreServer
AVTStickerUserDefaultsBackend
AVTAvatarFetchRequest
AVTArchiverBasedStorePersistence
AVTBackendVersion
AVTCoreDataChangeTracker
AVTAvatarRecordChangeTracker
AVTCoreDataChangeTrackerChange
AVTAvatarRecordChange
AVTStoreBackendMigrator
AVTSyncSchedulingAuthority
AVTCoreDataPersistentStoreConfiguration
_AVTCoreDataPersistentStoreRemoteConfiguration
_AVTCoreDataPersistentStoreLocalConfiguration
AVTCoreDataPersistentStoreLocalConfiguration
AVTAvatarManagedRecordTransformer
AVTStickerChangeObserver
AVTAvatarsDaemonServer
NSXPCListenerDelegate
AVTSerializedAvatarRecord
AVTUILogger
AVTStubbedStoreBackend
AVTCoreDataStoreServer
AVTPushNotificationsSupportDelegate
AVTCoreDataCloudKitMirroringHandlerDelegate
AVTAvatarsDaemonServerDelegate
AVTPushNotificationsSupport
APSConnectionDelegate
AVTPushNotificationsConnectionFactory
AVTAvatarManagedRecord
AVTSideCoreDataStoreMigratableSource
AVTCoreDataCloudKitMirroringConfiguration
T@"<AVTAvatarManagedRecordTransformer>",R,N,V_recordTransformer
T#,R
T@"NSArray",C,N,V_sortedAvatars
T@"<AVTAvatarRecordChangeTracker>",R,N
T@"NSNumber",R,N,V_frequencySum
T@"<AVTAvatarRecordChangeTracker>",R,N,V_recordChangeTracker
T@"NSString",R,C,N,V_puppetName
T@"<AVTAvatarStoreInternal>",R,N,V_store
T@"NSURL",R,C,N,V_storeLocation
T@"<AVTAvatarsDaemonServer>",R,N,V_daemonServer
TB,N,V_isPuppet
T@"<AVTAvatarsDaemonServerDelegate>",W,N,Vdelegate
_avtui_deepCopy
T@"<AVTBlockScheduler>",R,N,V_scheduler
_blockScheduler
T@"<AVTCoreDataCloudKitMirroringHandlerDelegate>",W,N
_eventCoalescer
T@"<AVTCoreDataPersistentStoreConfiguration>",R,N,V_configuration
_folderLocation
T@"<AVTCoreDataRemoteChangesObserver>",R,N,V_remoteChangesObserver
_logger
T@"<AVTEventCoalescer>",R,N,V_coalescer
_pushConnection
T@"<AVTPBackendImageHandlingDelegate>",R,N,V_imageHandlingDelegate
_setupCompleted
T@"<AVTPushNotificationsSupport>",R,N,V_pushNotificationsSupport
_stickerConfigurationIdentifier
T@"<AVTPushNotificationsSupportDelegate>",W,N,V_delegate
avt_description
T@"<AVTStickerBackendDelegate>",W,N
backendDelegate
T@"<AVTStoreBackend>",R,N,V_backend
base64EncodedStringWithOptions:
T@"<AVTStoreBackendDelegate>",W,N,VbackendDelegate
changedObjectID
T@"<AVTUILogger>",R,N,V_logger
checkIn
T@"<NSObject>",&,N,V_nts_changeNotificationObserver
connectionQueue
T@"<NSObject>",&,N,V_willResetNotificationToken
currentHistoryTokenForLocation:
T@"AVTArchiverBasedStoreRoot",&,N,V_model
dealloc
T@"AVTCoreEnvironment",R,N,V_environment
domains
T@"AVTPAvatarStore",R,N,V_underlyingStore
initWithLogger:
T@"AVTPushNotificationsConnectionFactory",R,N,V_connectionFactory
logAvatarsDaemonClientChecksIn:
T@"NSArray",R,C,N,V_domains
logCarouselChangingToSingleMode
T@"NSArray",R,C,N,V_records
logErrorCreatingBackendContent:
T@"NSData",&,N,V_avatarData
logInMemoryCacheEvictsResource:
T@"NSDate",R,N,V_orderDate
logMigrationXPCActivityFinished
T@"NSMutableArray",&,N,V_nts_recordStorage
logSavingError:
T@"NSMutableArray",R,N,V_changeHandlers
maximumNumberOfFetchableAvatars
T@"NSNotificationCenter",&,N,V_notificationCenter
migrationNeeded
T@"NSNumber",R,N,V_serializationVersion
neutralMemojiDataRepresentation
T@"NSObject<OS_dispatch_queue>",R,N,V_backendAccessQueue
numberWithBool:
T@"NSObject<OS_dispatch_queue>",R,N,V_callbackQueue
performingMigrationXPCActivity:
T@"NSObject<OS_dispatch_queue>",R,N,V_puppetStoreAccessQueue
processInternalSettingsChanges:
T@"NSObject<OS_os_log>",R,N,V_backendLog
release
T@"NSObject<OS_os_log>",R,N,V_interactionLog
requestForAvatarWithIdentifier:
T@"NSPersistentStoreCoordinator",R,N,V_coordinator
setMigrationActivityCompletion:
T@"NSPointerArray",R,N,V_nts_observers
setURL:
T@"NSString",R,C
setWithObjects:
T@"NSString",R,C,N,V_avatarIdentifier
stringByAppendingPathComponent:
T@"NSString",R,C,N,V_domainIdentifier
underlyingStore
T@"NSString",R,C,N,V_stickerConfigurationIdentifier
.cxx_destruct
T@"NSArray",C,N,V_puppetRecords
T@"<AVTAvatarRecord>",R,C,N,V_avatarRecord
T@"NSArray",R,C,N,V_identifiers
T@"<AVTAvatarRecordChangeTracker>",R,N,V_changeTracker
T@"NSString",R,C,N,V_identifier
T@"<AVTAvatarStoreDelegate>",W,N,V_delegate
T@"NSURL",R,C,N
T@"<AVTAvatarsDaemon>",R,N,V_daemonClient
T@?,R,C,N,V_serialQueueProvider
T@"<AVTAvatarsDaemonServerDelegate>",W,N
_avtui_changedRecordIdentifiers
T@"<AVTBlockScheduler>",R,N,V_blockScheduler
_backendVersion
T@"<AVTCoreDataCloudKitMirroringHandler>",R,N,V_mirroringHandler
_changeHandlers
T@"<AVTCoreDataCloudKitMirroringHandlerDelegate>",W,N,V_delegate
_exportInFlight
T@"<AVTCoreDataPersistentStoreLocalConfiguration>",R,N,V_configuration
_interactionLog
T@"<AVTCoreDataStoreMaintenance>",R,N,V_storeMaintenance
_nts_changeNotificationObserver
T@"<AVTEventCoalescer>",R,N,V_eventCoalescer
_server
T@"<AVTPBackendImageHandlingDelegate>",W,N,V_imageHandlingDelegate
_stickerBackend
T@"<AVTPushNotificationsSupportDelegate>",W,N
arrayWithArray:
T@"<AVTStickerBackend>",R,N,V_stickerBackend
backend
T@"<AVTStickerBackendDelegate>",W,N,V_stickerBackendDelegate
backgroundQueue
T@"<AVTStoreBackendDelegate>",W,N
canCreateAvatar
T@"<AVTSyncSchedulingAuthority>",R,N,V_schedulingAuthority
changes
T@"<NSObject>",&,N,V_didResetNotificationToken
compact
T@"<NSObject>",&,N,V_observationToken
containsObject:
T@"APSConnection",&,N,V_pushConnection
databaseFolderForStoreLocation:
T@"AVTAvatarFetchRequest",R,N,V_fetchRequest
deleteAvatar:completionHandler:
T@"AVTObservableAvatarStore",R,N,V_backingStore
handler
T@"AVTPuppetStore",R,N,V_puppetStore
isProxy
T@"AVTStickerChangeObserver",R,N,V_stickerChangeObserver
logCarouselChangesCenterItemTo:
T@"NSArray",R,C,N,V_excludingIdentifiers
logCreatingBackendFolderAtPath:
T@"NSData",&,D,N
logErrorFetchingRecentStickers:
T@"NSDate",&,D,N
logInMemoryCacheHitForResource:
T@"NSDictionary",C,N,V_avatarsByIdentifiers
logPaddleViewVideoPlayerFailed:
T@"NSMutableArray",&,N,V_stickers
logSetupUserImportFailedToUnarchiveDataAtPath:errorDescription:
T@"NSMutableArray",R,N,V_transactionsForPendingChanges
migrate
T@"NSNotificationCenter",R,N,V_notificationCenter
modelV1
T@"NSObject<OS_dispatch_queue>",R,C,N,V_backgroundQueue
numberOfRecords
T@"NSObject<OS_dispatch_queue>",R,N,V_backgroundQueue
options
T@"NSObject<OS_dispatch_queue>",R,N,V_connectionQueue
processChangeTransactionsWithChangeTokenLocation:handler:error:
T@"NSObject<OS_dispatch_queue>",R,N,V_workQueue
records
T@"NSObject<OS_os_log>",R,N,V_generalLog
removeObserver:
T@"NSPersistentContainer",R,N,V_container
scheduleImportExportIfRequiredWithPostImportHandler:completion:
T@"NSPersistentStoreDescription",R,N,V_storeDescription
setPersistentStoreDescriptions:
T@"NSString",C,N,V_eventLabel
setUseDeviceToDeviceEncryption:
T@"NSString",R,C,N
settingUpStore:
T@"NSString",R,C,N,V_avatarRecordIdentifier
success
T@"NSString",R,C,N,V_primaryAvatarIdentifier
updateManagedRecord:withRecord:
T@"NSString",R,C,N,V_stickerIdentifier
T@"NSString",R,N
T@"NSString",R,N,V_localProcessName
T@"NSString",R,N,V_recordIdentifier
T@"NSURL",R,N,V_cacheLocation
T@"NSURL",R,N,V_databaseLocation
T@"NSURL",R,N,V_folderLocation
T@"NSURL",R,N,V_storeLocation
T@"NSUUID",&,D,N
T@"NSUserDefaults",R,N,V_userDefaults
T@"NSXPCListener",R,N,V_listener
T@"NSXPCStoreServer",&,N,V_server
T@?,C,N,V_eventHandler
T@?,C,N,V_handler
T@?,C,N,V_migrationActivityCompletion
T@?,C,N,V_userRequestedBackupActivityCompletion
T@?,R,C,N,V_connectionFactory
T@?,R,C,N,V_lockProvider
T@?,R,C,N,V_migratorProvider
T@?,R,C,N,V_mocFactory
TB,N,V_eventDeliveryScheduled
TB,N,V_exportInFlight
TB,N,V_setupCompleted
TB,R
TB,R,N,GisEditable
TB,R,N,GisPuppet
TQ,N,V_frequencyCounter
TQ,R
Td,R,N,V_avatarKitVersion
Td,R,N,V_backendVersion
Td,R,N,V_delay
Tq,R,N
Tq,R,N,V_changeType
Tq,R,N,V_criteria
Tq,R,N,V_fetchLimit
Tq,R,N,V_resultLimit
URIRepresentation
URLByAppendingPathComponent:
URLByAppendingPathExtension:
URLForDirectory:inDomain:appropriateForURL:create:error:
UUID
UUIDString
_avatarData
_avatarIdentifier
_avatarKitVersion
_avatarRecord
_avatarRecordIdentifier
_avatarsByIdentifiers
_avtui_dictionaryByIndexingObjectsInArray:by:
_backend
_backendAccessQueue
_backendLog
_backgroundQueue
_backingStore
_cacheLocation
_callbackQueue
_castRecord:andDoRecordHandlingBlock:puppetHandlingBlock:
_changeTracker
_changeType
_coalescer
_configuration
_connectionFactory
_connectionQueue
_container
_coordinator
_createStoreEmptyFileIfNeededAtLocation:logger:fileManager:error:
_createStoreFolderIfNeededAtLocation:logger:fileManager:error:
_createStoreIfNeededAtLocation:logger:error:
_criteria
_daemonClient
_daemonServer
_databaseLocation
_delay
_delegate
_didResetNotificationToken
_domainIdentifier
_domains
_environment
_eventDeliveryScheduled
_eventHandler
_eventLabel
_excludingIdentifiers
_fetchLimit
_fetchRequest
_frequencyCounter
_frequencySum
_generalLog
_handler
_identifier
_identifiers
_imageCacheStoreLocation
_imageHandlingDelegate
_imageStoreLocation
_isPuppet
_listener
_localProcessName
_lockProvider
_migrateDifferentAvatarKitVersionsForContent:logger:
_migrateFromPre0_5ToCurrentForStoreAtLocation:logger:fileManager:error:
_migrateFromPre0_6ToCurrentForStoreAtLocation:logger:fileManager:error:
_migrationActivityCompletion
_migratorProvider
_mirroringHandler
_mocFactory
_model
_notificationCenter
_nts_observers
_nts_recordStorage
_observationToken
_orderDate
_performMigrationIfNeededForStoreAtLocation:logger:fileManager:error:
_primaryAvatarIdentifier
_puppetName
_puppetRecords
_puppetStore
_puppetStoreAccessQueue
_pushNotificationsSupport
_readContentFromDiskAtLocation:logger:error:
_recentStickersChangedExternally
_recordChangeTracker
_recordIdentifier
_recordTransformer
_records
_remoteChangesObserver
_resultLimit
_scheduler
_schedulingAuthority
_serialQueueProvider
_serializationVersion
_sortedAvatars
_stickerBackendDelegate
_stickerChangeObserver
_stickerIdentifier
_stickerImageStoreLocation
_stickers
_store
_storeDescription
_storeLocation
_storeMaintenance
_transactionsForPendingChanges
_underlyingStore
_userDefaults
_userRequestedBackupActivityCompletion
_willResetNotificationToken
_workQueue
_writeContent:toDiskAtLocation:logger:error:
accountInfoWithCompletionHandler:
accountStatus
addChangesHandler:
addNextFrequencyCountToFrequencySum:
addObject:
addObjectsFromArray:
addObserver:
addObserverForName:object:queue:usingBlock:
addPersistentStoreWithDescription:completionHandler:
addPointer:
addPriorityObserver:
addStickerWithAvatarIdentifier:stickerIdentifier:
allAvatarPuppetsExcluding:error:
allAvatarPuppetsWithError:
allAvatars
allObjects
allPuppetRecords
animojiNamed:
animojiNames
appendFormat:
appendString:
archivedDataWithRootObject:requiringSecureCoding:error:
areRecordsLoaded
array
arrayByAddingObjectsFromArray:
arrayWithCapacity:
arrayWithObjects:count:
attributesOfItemAtPath:error:
author
autorelease
avatarCountWithError:
avatarData
avatarForRecord:
avatarForRecord:usageIntent:
avatarIdentifier
avatarKitVersion
avatarPuppetsForFetchRequest:error:
avatarRecord
avatarRecordFromData:
avatarRecordIdentifier
avatarStoreDidChange:
avatarWithDataRepresentation:usageIntent:error:
avatarsByIdentifiers
avatarsExcludingIdentifiers:error:
avatarsForFetchRequest:error:
avatarsWithIdentifiers:error:
avt_firstObjectPassingTest:
avt_map:
backend:didChangeRecordsWithIdentifiers:
backendAccessQueue
backendLog
backendVersion
backingStore
blockScheduler
boolValue
bundleID
bytes
cacheLocation
callbackQueue
canCreateAvatarWithError:
canLoadAvatarWithData:
canLoadDataRepresentation:
cdFetchRequestForAvatarFetchRequest:recordTransformer:
cdFetchRequestWithPredicate:fetchLimit:
changeHandlers
changeTracker
changeTransactionsForToken:managedObjectContext:
changeType
checkingAccountInfo:
checkingIn:
class
classifyRecordsByIdentifiers:
clearContentAtLocation:
clearStickersForAvatarRecordIdentifier:withEnvironment:
clientDidCheckInForServer:
cloudKitMirroringEnabled
coalescer
code
compare:
completeMigrationActivityIfNeeded
completeUserRequestedBackupActivityIfNeeded
componentsJoinedByString:
configuration
configureMirroringRequestOptions:
configureMirroringRequestOptions:discretionary:
configureStoreDescriptionForMirroring:logger:
conformsToProtocol:
connection:channelSubscriptionsFailedWithFailures:
connection:didChangeConnectedStatus:
connection:didFailToSendOutgoingMessage:error:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didReceivePublicToken:
connection:didReceiveToken:forInfo:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveURLToken:forInfo:
connection:didReceiveURLTokenError:forInfo:
connection:didSendOutgoingMessage:
connectionDidReconnect:
connectionFactory
connectionWithEnvironmentName:namedDelegatePort:queue:
container
containerWithIdentifier:
contentDidChangeWithIdentifiers:
contentExists
contentExistsAtLocation:
coordinator
copiedAsideMigratableSource
copy
copyItemAtURL:toURL:error:
copyStorageAside:
copyWithZone:
copyingStorageAside:
count
countByEnumeratingWithState:objects:count:
countForFetchRequest:error:
createContainerForRemoteConfiguration
createDatabaseDirectoryIfNeeded:usingFileManager:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
createManagedObjectContext
createMirroringHandlerWithEnvironment:
createModel
createPuppetRecords
createSourceBackend
createStoreDescriptionWithDatabaseLocation:logger:
createStoreServerWithError:
criteria
currentConnection
currentContainerIdentifier
currentManagedObjectModel
currentQueryGenerationToken
currentVersion
daemonClient
daemonServer
dataForNeutralRecord
dataForNewRecord
dataFromAvatarRecord:
dataRepresentation
dataSource:didAddRecord:atIndex:
dataSource:didEditRecord:atIndex:
dataSource:didRemoveRecord:atIndex:
dataWithContentsOfURL:options:error:
databaseLocation
databaseLocationForFolderLocation:
date
dateByAddingTimeInterval:
dateWithTimeIntervalSinceNow:
dbLocationForStoreLocation:
debugDescription
decodeBoolForKey:
decodeDoubleForKey:
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
defaultAvatarRecord
defaultBackendWithWorkQueue:environment:
defaultCenter
defaultEnvironment
defaultManager
defaultServer
defaultServerWithImageHandlingDelegate:
defaultUIDataSourceWithDomainIdentifier:
delay
delegate
deleteAvatarWithIdentifier:completionBlock:
deleteAvatarWithIdentifier:error:
deleteImagesForAvatarRecordIdentifier:error:
deleteRecentStickersForChangeTracker:completionHandler:
deleteRecentStickersWithAvatarIdentifier:stickerIdentifier:completionHandler:
deleteStickerRecents
deleteThumbnailsForAvatarRecordsWithIdentifiers:error:
deletingRecords:
deletingStickerRecentsForRemoteChanges:
description
deviceConfigurationSupportsCloudKitMirroringWithLogger:completionHandler:
dictionary
dictionaryRepresentation
dictionaryWithCapacity:
dictionaryWithObjects:forKeys:count:
didReceivePushNotification
didReceivePushNotification:
didRecieveAvatarChangeDistributedNotification:
didResetNotificationToken
didResetSync
didResetSync:
didUseStickerWithAvatarIdentifier:stickerIdentifier:completionHandler:
domain
domainBySettingPrimaryAvatarIdentifier:
domainIdentifier
doubleValue
duplicateAvatar:completionBlock:
duplicateAvatarRecord:error:
duplicatedIdentifiersInManagedObjectContext:error:
duplicatingRecords:
editable
encodeBool:forKey:
encodeDouble:forKey:
encodeObject:forKey:
encodeWithCoder:
entity
enumerateChangesAfterToken:managedObjectContext:changesHandler:error:
enumerateIndexesUsingBlock:
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
enumerateObserversRespondingToSelector:withBlock:
environment
error
errorWithCode:userInfo:
errorWithDomain:code:userInfo:
eventCoalescer
eventDeliveryScheduled
eventDidOccur:
eventHandler
eventLabel
exchangeObjectAtIndex:withObjectAtIndex:
excludingIdentifiers
executeFetchRequest:error:
executeRequest:error:
exportChangesWithManagedObjectContext:discretionary:workQueue:completionHandler:
exportDidCompleteSuccessfully
exportInFlight
exportRequired
exportingRecords:
expressionForFunction:arguments:
expressionForKeyPath:
expressionForVariable:
fetchAllStickers
fetchAvatarsForFetchRequest:completionHandler:
fetchDuplicatedRecordsForIdentifiers:managedObjectContext:error:
fetchHistoryAfterToken:
fetchHistoryTransactionForToken:
fetchLimit
fetchMostRecentStickersWithLimit:
fetchRequest
fetchRequestCriteriaSupported:
fetchRequestWithEntityName:
fetchStickersWithAvatarIdentifier:stickerIdentifier:
fetchingRecords:
fileExistsAtPath:
fileURLWithPath:
finalizeMigration:
firstObject
fixDuplicateRecordIdentifiers:managedObjectContext:error:
flushRecordsForEnteringBackground
folderLocation
frequencyCounter
frequencySum
generalLog
generateThumbnailsForAvatarRecord:avatar:error:
generateThumbnailsForAvatarRecords:error:
generateThumbnailsForDuplicateAvatarRecord:originalRecord:error:
getAPSEnvironmentString:
getChangedObjectIDsOfInterest:deletedIdentifiers:forTransactions:
getResourceValue:forKey:error:
getStickersFromUserDefaults
hash
identifier
identifierForManagedRecordIdentifier:
identifiers
imageCacheStoreLocation
imageCacheStoreLocationWithError:
imageHandlingDelegate
imageStoreLocation
importChangesWithManagedObjectContext:discretionary:workQueue:completionHandler:
importDidCompleteSuccessfully
importRequired
importSetupUserDataIfNeeded
importingRecords:
indexForInsertingDuplicateRecord:original:inRecords:
indexForInsertingRecord:inRecords:
indexOfObject:
indexOfObjectPassingTest:
indexOfRecordPassingTest:
indexSetForEditableRecords
indexesOfObjectsPassingTest:
indexesOfRecordsPassingTest:
init
initForStoreWithURL:usingModel:options:policy:
initWithAvatarData:
initWithAvatarData:identifier:orderDate:
initWithAvatarData:orderDate:
initWithAvatarRecord:
initWithBackend:backendAccessQueue:puppetStore:stickerBackend:environment:
initWithBackendVersion:avatarKitVersion:
initWithCoder:
initWithConcurrencyType:
initWithConfiguration:environment:
initWithConfiguration:recordTransformer:environment:
initWithConfiguration:recordTransformer:remoteChangesObserver:localProcessName:recordChangeTracker:environment:
initWithConfiguration:workQueue:coalescer:environment:
initWithConnectionFactory:logger:
initWithContainerIdentifier:
initWithCriteria:
initWithCriteria:avatarIdentifier:stickerIdentifier:
initWithCriteria:identifier:
initWithCriteria:identifiers:excludedIdentifiers:fetchLimit:
initWithCriteria:resultLimit:
initWithDaemonClient:environment:
initWithData:encoding:
initWithDelay:queue:logger:
initWithDomainIdentifier:
initWithDomainIdentifier:primaryAvatarIdentifier:
initWithDomains:records:
initWithEnvironment:
initWithEnvironment:connectionFactory:
initWithEnvironment:imageHandlingDelegate:
initWithEnvironment:managedObjectContextFactory:
initWithEnvironmentName:namedDelegatePort:queue:
initWithFetchRequest:
initWithIdentifier:
initWithIdentifier:avatarRecordIdentifier:stickerConfigurationIdentifier:frequencySum:serializationVersion:
initWithListener:logger:
initWithLocalBackend:configuration:migratorProvider:pushSupport:mirroringHandler:schedulingAuthority:remoteChangesObserver:stickerChangeObserver:changeTracker:daemonServer:storeMaintenance:backgroundQueue:environment:imageHandlingDelegate:
initWithLogger:blockScheduler:
initWithMachServiceName:
initWithMachServiceName:options:
initWithManagedObjectModel:
initWithName:managedObjectModel:
initWithOptions:
initWithOptions:completionBlock:
initWithPuppetName:
initWithRecordIdentifier:changeType:
initWithRecordStore:fetchRequest:
initWithRecordStore:fetchRequest:callbackQueue:environment:
initWithRecordStore:fetchRequest:callbackQueue:logger:notificationCenter:
initWithRecordStore:fetchRequest:environment:
initWithStickerBackend:environment:
initWithStore:callbackQueue:
initWithStoreLocation:copiedAside:environment:
initWithStoreLocation:domainIdentifier:environment:
initWithStoreLocation:environment:
initWithUUIDBytes:
initWithUUIDString:
initWithWorkQueue:environment:userDefaults:
initWithWorkQueue:managedObjectContextFactory:eventCoalescer:logger:
insertNewObjectForEntityForName:inManagedObjectContext:
insertObject:atIndex:
insertPointer:atIndex:
integerValue
interactionLog
interfaceWithProtocol:
internalRecordStore
invalidate
isEditable
isEqual:
isEqualToString:
isFileNotFoundError:
isKindOfClass:
isMemberOfClass:
isObservingChanges
isPuppet
length
listener
listener:shouldAcceptNewConnection:
loadContentFromDisk:
loadContentFromDiskIfNeeded:
loadModel:
loadPersistentStoresWithCompletionHandler:
loadPuppetRecordsIfNeeded
loadRecordsWithStore:request:logger:
localConfigurationWithStoreLocation:environment:
localProcessName
lockProvider
logAVTViewCancelingRenderingAvatar:
logAVTViewDidRenderAvatar:currentAvatar:
logAVTViewDidRenderCurrentAvatar:
logAVTViewSetAvatar:
logAccountInfo:status:deviceToDeviceEncryption:
logAnalysisServiceCheckingIn:
logAnalysisServiceDidNotProcessState:
logAnalysisServiceDidRun
logAnalysisServiceWillRun
logAvatarPreloadBeginForIdentifier:
logAvatarPreloadEnd
logAvatarsDaemonClientConnectionInterrupted
logAvatarsDaemonClientConnectionInvalidated
logAvatarsDaemonReceivesIncomingConnection
logAvatarsdExitingWithReason:
logBackendVersionMismatch:actual:
logCancelTransition:
logCancelingPreLoadingTask:
logCancellingCleanupBlock
logCarouselAddsTransitionToCoordinator:
logCarouselCellStartUsingLiveView:associatedTransition:
logCarouselCellStopUsingLiveView:associatedTransition:
logCarouselChangingToMultiMode
logCarouselDelegateDidFocusRecord:
logCarouselDelegateDidUpdateRecord:
logCarouselDelegateNearnessFactorDidChange:towardRecord:editable:
logCarouselDelegateWillEndFocusRecord:
logCarouselEndsDraggingWithVelocity:willSwitchIndexPathInsteadOfScrollBack:forHighVelocity:
logCarouselErrorGettingFrameForElementAtIndex:
logCarouselSnapshotForIndex:size:
logCarouselStopsFocusingOnCenterItem:withCell:
logCarouselTransitionCenterItem:withCell:
logChangesRequireExport
logChangesRequireThumbnailUpdate
logCheckingIfMigrationNeeded
logCleanupTimerComplete
logCoalesceableEventOccured:
logCouldntFindRecordIdentifierForChangeType:managedObjectID:
logCreatingBackendDBAtPath:
logCreatingImageStoreForPath:
logCreatingStore:
logCurrentHistoryTokenFileDoesntExist:
logDebug:
logDecrementingRemoteRendererTransactionCount:
logDeduplicateRecordWithIdentifier:toNewRecordWithIdentifier:
logDeletingImagesWithIdentifierPrefix:
logDeletingRecordWithIdentifier:
logDeletingStickerRecents
logDidFinishEditingWithError:
logDidFinishEditingWithSuccess
logDidResetZoneWithSuccess:error:
logDiscoveredDuplicates:count:
logDispatchingRemoteChangeWithTransactionCount:handlersCount:
logDonePreLoadingPreset:task:
logDonePreLoadingThumbnailForPreLoadingTask:
logDroppingUnsupportedAvatarRecord:
logDuplicatingRecordWithIdentifier:
logErrorAddingPersistentStore:
logErrorCopyingStorageAside:
logErrorDeletingMigratedContent:
logErrorDeletingSomeThumbnail:
logErrorDeletingThumbnailsForIdentifier:error:
logErrorDuplicatingThumbnailsForIdentifier:error:
logErrorFetchingChangeHistory:
logErrorFetchingRecords:
logErrorGettingAccountInfo:
logErrorGettingAvatarsDaemonClientProxy:
logErrorGettingChangedRecordsContentForIdentifiers:error:
logErrorLoadingTemplates:
logErrorMergingCopiedAsideContent:
logErrorMigratingBackupInclusionStatus:
logErrorMitigatingDuplicates:
logErrorPinningContextToCurrentQueryGenerationToken:
logErrorProcessingChangeTransactionsToUpdateThumbnails:
logErrorReadingCurrentHistoryToken:
logErrorRemovingStoreFolder:
logErrorSandboxInit:
logErrorSavingChangeToken:location:
logErrorSavingRecentSticker:
logErrorSettingUpStore:
logErrorSettingUserDirSuffixForSandbox:
logErrorSnapshottingAVTView:
logErrorStartingServer:
logErrorTearingDownCoreDataStack:
logErrorUpdatingBackupInclusionStatus:
logErrorUpdatingBodyCarouselVisibleCellAtIndexPath:
logErrorUpdatingRecordsForMigration:
logErrorUpdatingVersion:
logErrorWhileMigratingBackend:
logExportRequestResult:error:
logFailedToGenerateStickerInService:
logFetchedOrphanedRecentSticker:
logFetchedRecentStickerWithNoStickerConfiguration:
logFetchedRecords:criteria:
logFileSystemError:
logFoundExistingRecordDuringMigration
logFoundExistingRecordDuringMigration:
logFoundRecordIdentifier:changeType:managedObjectID:
logGeneratingImageError:
logGeneratingImageForRecord:scope:type:
logGeneratingImageInServiceForRecord:
logGenericSandboxError:error:
logImageRenderServiceConnectionError:
logImageStoreBeginSavingImageForPath:
logImageStoreCacheHitForItemDescription:sizeCost:
logImageStoreCacheMiss:
logImageStoreDoneInServiceForPath:
logImageStoreDoneSavingImageForPath:
logImageStoreFailedInServiceForPath:error:
logImageStoreSavingError:code:
logImportRequestResult:error:
logInMemoryCacheStorageForResource:
logIncrementingRemoteRendererTransactionCount:
logInspectingChangesForExportAfterToken:
logLookingUpPreLoadedPreset:task:
logMaintenanceCompleted
logMigratingSource:
logMirroringRequestErrorWithCode:description:
logMissingResetSyncReasonKey
logMissingTombstonedIdentifier
logNilImageReturnedFromAVTAvatarRecordImageProvider
logNilImageReturnedFromAVTUIStickerRenderer
logNoAvatarPreset:
logNoProxyToAvatarsDaemon
logNotImportingOnLaunchWithRemainingTime:
logNotificationDoesntContainChangeHistoryToken
logParsingMetadataDefinitions
logParsingMetadataDefinitionsError:
logPerformTransition:
logPerformedRecentStickersMigration:
logPersistentChangeNotOfInterest:
logPostingChangeNotificationForIdentifiers:
logPreLoadingNeededForIndex:section:
logPreLoadingPreset:task:
logPushConnectionReceivedPublicToken:
logPushConnectionReceivedToken:topic:identifier:
logPushNotificationReceivedForTopic:payload:
logReadingBackendAtPath:
logReadingError:
logReceivedRemoteChange:
logRecordsNotFoundInAnyStore:
logRecordsNotFoundInPuppetStore:
logRecordsNotFoundInRecordStore:
logRenderingConfiguration:
logRenderingModelColor:
logRenderingModelPreset:
logRenderingRecord:size:
logRenderingStickerEnd:
logRenderingStickerStart:forRecord:
logRequestedAnimojiSticker:
logRequestingPreLoadingTask:forIndex:section:
logRequestingThumbnailForIndex:section:
logResetSyncReason:
logRetrievingSnapshotInServiceForPath:
logSavingBackend
logSchedulingImport
logSchedulingUpdateThumbnails
logSetupHandlerCompletedForTransition:state:finished:
logSetupSchedulingExport
logSetupSchedulingImport
logSetupSchedulingMigrationCheck
logSetupUserDataImportCheck
logSetupUserHasNoMemojiData
logSetupUserImportAttempting:
logSetupUserImportFailedToRemoveFileWithError:
logSetupUserImportSaveError:
logSingleModeCantSnapshotForLackOfWindow
logSingleModeControllerStartUsingLiveView:
logSingleModeControllerStopUsingLiveView:
logSkippedFetchingRecordsWithReason:
logSnapshotReturnedImage:
logStartObservingRemoteChangeNotificationFrom:
logStartObservingResetSync
logStartTransition:state:
logStartingPreLoadingTask:
logStartingServer
logStickerGeneratorPoolDidntHaveAvailableGenerator:maxCount:
logStickerSchedulerAddedTask:taskCount:
logStickerSchedulerCancelledAllTasks
logStickerSchedulerCancelledStickerSheetTasksForIdentifier:
logStickerSchedulerCancelledTask:
logStickerSchedulerStartedTask:forSchedulerRule:
logStickerViewSnapshotForBounds:offset:
logSyncEnabled
logTearingDownCoreDataStack:
logThrottlingAVTView
logTimedOutWaitingForSnapshotInService:
logToLivePoseTransitionBegins:
logToLivePoseTransitionEnds:
logTooManyAvatars:limit:
logTrackerProcessingChanges:count:from:
logTransactionHasChangesButNoToken
logTransition:state:reachedStage:
logUnableToCreatePushConnection:
logUnableToReadRemoteRecord:isCritical:
logUnthrottlingAVTView
logUpdatingBackupExclusionStatus:
logUpdatingLiveAvatarWithConfiguration:
logUpdatingThumbnails
logUsageTrackingBigDifferencesClusterCount:
logUsageTrackingRecordCount:
logUsageTrackingSmallDifferencesClusterCount:
logUserRequestedBackupXPCActivityFinished
logWarningNoHOME
logWillResetZone
logger
madeLocalChanges
managedModelAttributesRequiredForMirroring
managedRecordIdentifierForIdentifier:
manateeContainer:
matchingIdentifierTest:
maximumNumberOfSavableAvatars
memoji
memojiForRecord:
memojiForRecord:usageIntent:
migratableSources
migrateContentFromSource:toDestination:error:
migratedRecordFromRecord:index:totalCount:
migratingPersistedContent:
migrationActivityCompletion
migratorProvider
mirroringHandler
mirroringHandler:didResetSyncWithReason:
mirroringHandler:willResetSyncWithReason:
mitigateDuplicatesWithManagedObjectContext:error:
mocFactory
model
mutableCopy
name
newBackgroundContext
newManagedObjectContext
nextFrequencyCount
notificationCenter
notificationFromRemoteNotificationDictionary:
nts_avatarCountWithManagedObjectContext:error:
nts_changeNotificationObserver
nts_observers
nts_recordStorage
nts_saveManagedObjectContext:error:
numberWithInteger:
numberWithUnsignedInteger:
object
objectAtIndex:
objectAtIndexedSubscript:
objectForKey:inDomain:
objectForKeyedSubscript:
objectWithID:
objectsAtIndexes:
observationToken
orderDate
path
performAsynchronousWork:
performBackendWork:
performBlock:afterDelay:onQueue:
performBlockAndWait:
performManagedObjectContextWork:
performObserversWork:
performPuppetStoreWork:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performSyncWorkWithRecords:
performWorkWithConnection:
performWorkWithManagedObjectContext:
performWorkWithSynchronousProxy:
performingUserRequestedBackupActivity:
persistentStoreCoordinator
persistentStoreDescriptions
persistentStores
postChangeNotificationForRecordWithIdentifiers:remote:
postNotificationName:object:userInfo:
postingAvatarStoreChangeNotification:
predicateWithFormat:
preloadAllAvatarsWithStore:completionHandler:
preloadAllAvatarsWithStore:environment:completionHandler:
preloadAvatar:
preloadAvatarsWithFetchRequests:store:environment:completionHandler:
preloadAvatarsWithIdentifiers:store:completionHandler:
preloadAvatarsWithIdentifiers:store:environment:completionHandler:
primaryAvatarIdentifier
processChangesForChangeTracker:completionHandler:
processID
processIdentifier
processInfo
processName
processRemoteChangeNotification:completion:
processingDidResetSyncNotification:
processingRemoteChangeNotification:
processingWillResetSyncNotification:
puppet
puppetName
puppetRecords
puppetStore
puppetStoreAccessQueue
pushConnection
pushNotificationsSupport
raise:format:
readContentFromDiskAtLocation:logger:error:
readVersionForStoreAtLocation:error:
recentStickersDidChange:
recentStickersForFetchRequest:error:
recordAtIndex:
recordChangeTracker
recordIdentifier
recordIdentifierForChange:managedObjectContext:
recordIdentifiersForManagedObjectIDs:managedObjectContext:error:
recordStore
recordTransformer
recordWithManagedRecord:error:
registerCoalescerEventHandler
registerEventForCoalescingWithLabel:handler:
remoteChangesObserver
remoteConfigurationWithDaemonClient:environment:
remoteConfigurationWithEnvironment:
removeAllObjects
removeFilesAtLocation:error:
removeItemAtURL:error:
removeObjectAtIndex:
removeObjectsAtIndexes:
removePersistentStore:error:
removePointerAtIndex:
replaceObjectAtIndex:withObject:
requestForAllAvatars
requestForAllAvatarsExcluding:
requestForAllRecentStickers
requestForAvatarsWithIdentifiers:
requestForCustomAvatars
requestForCustomAvatarsWithLimit:
requestForMostRecentStickersWithResultLimit:
requestForPredefinedAvatars
requestForPredefinedAvatarsExcluding:
requestForStickersWithAvatarIdentifier:stickerIdentifier:
requestForStorePrimaryAvatar
resetFlushCacheValuesIfNeeded
resetSyncShouldPreserveContentForReason:
resetZoneWithManagedObjectContext:completionHandler:
respondsToSelector:
restoringStorage:
result
resultLimit
resume
retain
retainCount
rootByRemovingAvatarWithIdentifier:fromRoot:
rootBySavingAvatarRecord:afterAvatarRecord:forDomainIdentifier:toRoot:
runMaintenanceTasks
runningMaintenance:
save:
saveAvatar:error:
saveAvatarRecord:thumbnailAvatar:completionBlock:thumbnailGenerationCompletionBlock:
saveAvatars:error:
saveModel:logger:error:
saveStickersToUserDefaults
saveToDiskAtLocation:error:
saveToken:location:error:
savingChangeTrackerToken:
savingRecords:
scheduleExportChangesWithManagedObjectContext:discretionary:workQueue:completionHandler:
scheduleExportWithManagedObjectContext:discretionary:completion:
scheduleImportChangesWithManagedObjectContext:workQueue:completionHandler:
scheduleImportDiscretionary:completionBlock:
scheduleMigrationThen:
scheduleSetupThen:
scheduleUpdateThumbnails
scheduleWithBlock:
scheduler
schedulerForPostInstallMigrationActivity
schedulerForUserRequestedBackupActivity
schedulingAuthority
self
serialQueueProvider
serializationVersion
server
setApplicationBundleIdentifierOverrideForNetworkAttribution:
setAttributeType:
setAttributes:ofItemAtPath:error:
setAvatarData:
setAvatarsByIdentifiers:
setBackendDelegate:
setContainerOptions:
setDelegate:
setDidResetNotificationToken:
setDiscretionaryNetworkBehavior:
setEntities:
setEventDeliveryScheduled:
setEventHandler:
setEventLabel:
setExportInFlight:
setExportedInterface:
setExportedObject:
setExpression:
setExpressionResultType:
setFetchLimit:
setFrequencyCounter:
setHandler:
setHavingPredicate:
setIdentifier:
setImageHandlingDelegate:
setInterruptionHandler:
setInvalidationHandler:
setIsPuppet:
setManagedObjectClassName:
setMirroringDelegate:
setModel:
setName:
setNotificationCenter:
setNts_changeNotificationObserver:
setNts_recordStorage:
setObject:atIndexedSubscript:
setObject:forKey:inDomain:
setObject:forKeyedSubscript:
setObservationToken:
setOperationConfiguration:
setOption:forKey:
setOrderDate:
setPersistentStoreCoordinator:
setPredicate:
setPreregistered:
setPreservesValueInHistoryOnDeletion:
setProperties:
setPropertiesToFetch:
setPropertiesToGroupBy:
setPuppetRecords:
setPushConnection:
setQueryGenerationFromToken:error:
setRemoteObjectInterface:
setResourceValue:forKey:error:
setResultType:
setReturnsObjectsAsFaults:
setServer:
setSetupCompleted:
setShouldAddStoreAsynchronously:
setSortDescriptors:
setSortedAvatars:
setStickerBackendDelegate:
setStickers:
setTransactionAuthor:
setType:
setUseZoneWidePCS:
setUserRequestedBackupActivityCompletion:
setWillResetNotificationToken:
setupCompleted
setupConnectionWithCompletionHandler:
setupIfNeeded:
setupStoreIfNeeded:
setupThen:
sideDatabaseFolderForStoreLocation:
significantRecordChangeInDataSource:
sortDescriptorWithKey:ascending:
sortedAvatars
sortedRecordsEditableFirstReverseOrder:
standardUserDefaults
startListening
startListeningToPushNotifications
startObservingChanges
startObservingChangesIfNeeded
startObservingResetSyncWithNotificationCenter:
stickerBackend
stickerBackendDelegate
stickerChangeObserver
stickerConfigurationIdentifier
stickerIdentifier
stickerImageStoreLocation
stickers
stickersIndexesMatchingAvatarIdentifier:stickerIdentifier:
stopListeningToPushNotifications
store
store:didCreateDuplicateAvatar:forOriginal:postCompletionHandler:
store:didDeleteAvatarWithIdentifier:postCompletionHandler:
store:didSaveAvatar:postCompletionHandler:
storeDescription
storeDidChange
storeLocation
storeLocationForDomainIdentifier:environment:
storeMaintenance
stringByAppendingFormat:
stringByAppendingString:
stringByReplacingOccurrencesOfString:withString:
stringWithFormat:
subarrayWithRange:
superclass
supportsDeviceToDeviceEncryption
supportsSecureCoding
synchronousRemoteObjectProxyWithErrorHandler:
tearDownAndEraseAllContent:
timeIntervalSinceDate:
token
tokenFileURLForLocation:
tombstone
topic
trackerChangeTypeFromPersistentChangeType:
trackerChangesFromPersistentChanges:managedObjectContext:
transactionsForPendingChanges
unarchivedObjectOfClass:fromData:error:
unarchivedObjectOfClasses:fromData:error:
unsignedIntegerValue
updateBackupInclusionStatusOnQueue:completionHandler:
updateStickerAtIndex:
updateThumbnails
updateThumbnailsForChangesWithTracker:recordProvider:
updatedProperties
updatedRecordsForMigratingRecords:source:destinationBackend:error:
updatingThumbnailsForRemoteChanges:
userDefaults
userInfo
userRequestedBackupActivityCompletion
versionFileLocationForStoreLocation:
versionFromDiskAtLocation:error:
weakObjectsPointerArray
willResetNotificationToken
willResetSync:
workQueue
writeContent:toDiskAtLocation:logger:error:
writeToURL:options:error:
writeVersion:toDiskAtLocation:error:
xpcInterface
zone
v32@0:8@16@?24
v24@0:8@?16
v32@0:8@"NSString"16@?<v@?>24
v24@0:8@?<v@?B>16
@40@0:8d16@24@32
@?16@0:8
@16@0:8
v24@0:8@16
d16@0:8
B16@0:8
v20@0:8B16
v16@0:8
@"NSString"
@"<AVTUILogger>"
@"NSObject<OS_dispatch_queue>"
@32@0:8@16q24
@32@0:8@16@24
B24@0:8q16
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@32@0:8@16^@24
B32@0:8@16^@24
B24@0:8^@16
@"NSArray"32@0:8@"AVTAvatarFetchRequest"16^@24
B32@0:8@"AVTAvatarRecord"16^@24
B32@0:8@"NSArray"16^@24
B32@0:8@"NSString"16^@24
@"AVTAvatarRecord"32@0:8@"AVTAvatarRecord"16^@24
@"<AVTStoreBackendDelegate>"16@0:8
v24@0:8@"<AVTStoreBackendDelegate>"16
@"<AVTAvatarRecordChangeTracker>"16@0:8
@64@0:8@16@24@32@40@48@56
@40@0:8@16@24^@32
v40@0:8^@16^@24@32
Q32@0:8@16^@24
@"<AVTStoreBackendDelegate>"
@"<AVTAvatarRecordChangeTracker>"
@"<AVTCoreDataPersistentStoreConfiguration>"
@"<AVTAvatarManagedRecordTransformer>"
@"<AVTCoreDataRemoteChangesObserver>"
v48@0:8@16@24@?32@?40
v32@0:8@"AVTAvatarFetchRequest"16@?<v@?@"NSArray"@"NSError">24
v48@0:8@"<AVTAvatarRecord>"16@"AVTMemoji"24@?<v@?B@"NSError">32@?<v@?B@"NSError">40
v32@0:8@"<AVTAvatarRecord>"16@?<v@?B@"NSError">24
v32@0:8@"<AVTAvatarRecord>"16@?<v@?B@"<AVTAvatarRecord>"@"NSError">24
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v40@0:8@16@24@?32
@"NSArray"32@0:8@"AVTStickerFetchRequest"16^@24
v40@0:8@"NSString"16@"NSString"24@?<v@?B@"NSError">32
v32@0:8@"<AVTAvatarRecordChangeTracker>"16@?<v@?B@"NSError">24
@"<AVTStickerBackendDelegate>"16@0:8
v24@0:8@"<AVTStickerBackendDelegate>"16
@24@0:8@16
Q32@0:8@16@24
Q40@0:8@16@24@32
@40@0:8@16@24@32
v48@0:8@16@24@32@?40
v40@0:8@"<AVTAvatarStoreInternal>"16@"<AVTAvatarRecord>"24@?<v@?@?<v@?>>32
v40@0:8@"<AVTAvatarStoreInternal>"16@"NSString"24@?<v@?@?<v@?>>32
v48@0:8@"<AVTAvatarStoreInternal>"16@"<AVTAvatarRecord>"24@"<AVTAvatarRecord>"32@?<v@?@?<v@?>>40
@24@0:8Q16
@24@0:8@?16
Q24@0:8@?16
@"<AVTAvatarRecord>"24@0:8Q16
@"<AVTAvatarStore>"16@0:8
@"NSIndexSet"24@0:8@?<B@?@"<AVTAvatarRecord>"Q^B>16
Q24@0:8@?<B@?@"<AVTAvatarRecord>"Q^B>16
@"NSIndexSet"16@0:8
@"<AVTAvatarStoreInternal>"16@0:8
@48@0:8@16@24@32@40
@56@0:8@16@24@32@40@48
v32@0:8:16@?24
@"AVTPAvatarStore"
@"AVTObservableAvatarStore"
@"AVTAvatarFetchRequest"
@"NSMutableArray"
@"NSNotificationCenter"
@"NSPointerArray"
@"<NSObject>"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^{_NSZone=}16
@32@0:8@16Q24
v40@0:8@16@?24@?32
@24@0:8^@16
@"NSArray"
@24@0:8q16
@32@0:8q16q24
@40@0:8q16@24@32
q16@0:8
@32@0:8@16@?24
@48@0:8@16@?24@32@40
B40@0:8@16@24^@32
@"<AVTEventCoalescer>"
@32@0:8@?16@24
v44@0:8@16B24@28@?36
v24@0:8@"NSNotificationCenter"16
v44@0:8@"NSManagedObjectContext"16B24@"NSObject<OS_dispatch_queue>"28@?<v@?B@"NSError">36
v32@0:8@"NSManagedObjectContext"16@?<v@?B@"NSError">24
@"<AVTCoreDataCloudKitMirroringHandlerDelegate>"16@0:8
v24@0:8@"<AVTCoreDataCloudKitMirroringHandlerDelegate>"16
@"<AVTCoreDataCloudKitMirroringHandlerDelegate>"
@"<AVTBlockScheduler>"
@?24@0:8@16
v24@0:8@?<v@?@"NSManagedObjectContext"@"NSArray">16
@"AVTCoreEnvironment"
@"NSURL"
v40@0:8@?16d24@32
v40@0:8@?<v@?>16d24@"NSObject<OS_dispatch_queue>"32
@"<AVTAvatarStoreDelegate>"
@"<AVTAvatarStoreInternal>"
@40@0:8@16Q24Q32
@"<AVTStoreBackend>"16@0:8
@"AVTAvatarRecord"40@0:8@"AVTAvatarRecord"16Q24Q32
@32@0:8q16@24
@"NSData"
@"NSDate"
@"NSNumber"
Q24@0:8^@16
@"AVTArchiverBasedStoreRoot"
@"NSDictionary"
v32@0:8@16@24
v32@0:8@"<AVTStoreBackend>"16@"NSArray"24
v28@0:8@16B24
@"<AVTPBackendImageHandlingDelegate>"
@"<AVTStoreBackend>"
@"AVTPuppetStore"
@"<AVTStickerBackend>"
v24@0:8Q16
@"<AVTStickerBackendDelegate>"
@"NSUserDefaults"
@48@0:8q16@24@32q40
B48@0:8@16@24@32^@40
@32@0:8d16d24
B40@0:8@16@?24^@32
B40@0:8@"NSURL"16@?<B@?@"NSArray">24^@32
@48@0:8@16@24@?32^@40
q24@0:8q16
B40@0:8@"<AVTStoreBackendMigratableSource>"16@"<AVTStoreBackend>"24^@32
@48@0:8@16@24@32^@40
@"NSPersistentStoreCoordinator"16@0:8
@"NSManagedObjectContext"16@0:8
@"NSPersistentStoreDescription"16@0:8
@"NSPersistentContainer"
@"<AVTAvatarsDaemon>"
@"NSArray"16@0:8
@"NSXPCStoreServer"24@0:8^@16
@"<AVTStoreBackendMigratableSource>"16@0:8
v32@0:8@"NSObject<OS_dispatch_queue>"16@?<v@?B@"NSError">24
@36@0:8@16B24@28
B32@0:8^@16@24
@"NSPersistentStoreCoordinator"
@"NSPersistentStoreDescription"
@"NSUUID"24@0:8@"NSString"16
@"NSString"24@0:8@"NSUUID"16
v32@0:8@"AVTAvatarManagedRecord"16@"AVTAvatarRecord"24
@"AVTAvatarRecord"32@0:8@"AVTAvatarManagedRecord"16^@24
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"<AVTAvatarsDaemonServerDelegate>"16@0:8
v24@0:8@"<AVTAvatarsDaemonServerDelegate>"16
@"<AVTAvatarsDaemonServerDelegate>"
@"NSXPCListener"
@"<AVTAvatarRecord>"
v40@0:8@16{CGSize=dd}24
v32@0:8Q16q24
v32@0:8@16Q24
v32@0:8@16q24
v40@0:8@16@24q32
v32@0:8Q16Q24
v40@0:8@16Q24Q32
v32@0:8Q16@24
v40@0:8Q16{CGSize=dd}24
v28@0:8B16@20
v32@0:8q16@24
v40@0:8@16@24@32
v40@0:8@16Q24@32
v40@0:8@16q24@32
v24@0:8d16
v20@0:8i16
v28@0:8@16i24
v24@0:8*16
v36@0:8@16q24B32
v32@0:8q16q24
v40@0:8@16{CGPoint=dd}24
v32@0:8d16B24B28
v24@0:8q16
v24@0:8@"NSString"16
v40@0:8@"NSString"16{CGSize=dd}24
v32@0:8@"NSString"16@"NSString"24
v24@0:8@?<v@?@?<v@?>>16
v32@0:8@"NSString"16Q24
v32@0:8@"NSString"16q24
v40@0:8@"NSString"16@"NSString"24q32
v40@0:8@"NSString"16Q24Q32
v32@0:8Q16@"NSString"24
v28@0:8B16@"NSString"20
v32@0:8q16@"NSString"24
v40@0:8@"NSString"16@"NSString"24@"NSString"32
v28@0:8@"NSString"16B24
v40@0:8@"NSString"16Q24@"NSString"32
v40@0:8@"NSString"16q24@"NSString"32
v24@0:8@"NSArray"16
v28@0:8@"NSString"16i24
v36@0:8@"NSString"16q24B32
v24@0:8@"NSError"16
v40@0:8@"NSString"16{CGPoint=dd}24
v24@0:8@"NSIndexPath"16
@"NSObject<OS_os_log>"
B24@0:8Q16
v24@0:8@"<AVTPushNotificationsSupport>"16
v32@0:8@"<AVTCoreDataCloudKitMirroringHandler>"16Q24
v24@0:8@"<AVTAvatarsDaemonServer>"16
@128@0:8@16@24@?32@40@48@56@64@72@80@88@96@104@112@120
v32@0:8@?16@?24
v28@0:8B16@?20
B24@0:8@?16
v36@0:8@16B24@?28
@"<AVTCoreDataPersistentStoreLocalConfiguration>"
@"NSXPCStoreServer"
@"<AVTPushNotificationsSupport>"
@"<AVTCoreDataCloudKitMirroringHandler>"
@"<AVTSyncSchedulingAuthority>"
@"AVTStickerChangeObserver"
@"<AVTAvatarsDaemonServer>"
@"<AVTCoreDataStoreMaintenance>"
v48@0:8@16@24@32@40
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v40@0:8@"APSConnection"16@"NSData"24@"APSAppTokenInfo"32
v40@0:8@"APSConnection"16@"APSURLToken"24@"APSURLTokenInfo"32
v40@0:8@"APSConnection"16@"NSError"24@"APSURLTokenInfo"32
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
@"<AVTPushNotificationsSupportDelegate>"16@0:8
v24@0:8@"<AVTPushNotificationsSupportDelegate>"16
@"<AVTPushNotificationsSupportDelegate>"
@"APSConnection"
@"AVTPushNotificationsConnectionFactory"
