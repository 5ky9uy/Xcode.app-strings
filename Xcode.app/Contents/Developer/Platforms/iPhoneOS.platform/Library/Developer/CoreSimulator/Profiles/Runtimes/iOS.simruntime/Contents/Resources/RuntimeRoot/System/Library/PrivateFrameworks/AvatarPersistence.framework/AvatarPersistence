@(#)PROGRAM:AvatarPersistence  PROJECT:Animoji-1
$@333333
?333333
?333333
?333333
Coalescer already received an eventHandler
Coalescer did not receive an eventHandler
v8@?0
com.apple.AvatarUI.AVTCoreDataStoreBackend.changesObserverQueue
self in %@
v24@?0@"NSManagedObjectContext"8@"NSArray"16
v16@?0@"NSManagedObjectContext"8
@"NSUUID"16@?0@"AVTAvatarRecord"8
%K IN %@
@"NSUUID"16@?0@"AVTAvatarManagedRecord"8
%K == %@
%K > %@ AND %K < %@
%K in %@
NOT (%K in %@)
AVTAvatarStoreDomainMessages
AVTAvatarStoreDomainFunCam
AVTAvatarStoreDomainFaceTime
AVTAvatarStoreDomainInternal
Unexpected object class for %@
Unexpected object protocol for %@
v16@?0@"NSNotification"8
v16@?0@"NSPointerArray"8
v16@?0@"<AVTAvatarRecordDataSourceObserver>"8
v16@?0@"NSMutableArray"8
Index %lu out of datasource %p bounds, count: %lu
B32@?0@"<AVTAvatarRecord>"8Q16^B24
v16@?0@"AVTAvatarRecord"8
v16@?0@"AVTAvatarPuppetRecord"8
Can't decode memoji! Error: %@
B32@?0@"AVTAvatarPuppetRecord"8Q16^B24
 criteria:%ld limit:%ld ari:%@ sci:%@
com.apple.AvatarUI.AVTCoreDataStoreMaintenance.workQueue
StoreMaintenanceObservedChange
v16@?0@?<v@?>8
v32@?0@"NSUUID"8@"NSArray"16^B24
count
count:
%@ > 1
@"NSUUID"16@?0@"NSDictionary"8
Got nil transformed object for %@
v32@?0@8@"<NSCopying>"16^B24
Nil key provided for %@
Already have an object for %@
@"NSXPCConnection"8@?0
com.apple.avatar.support
v16@?0@"NSError"8
v16@?0@"NSXPCConnection"8
v16@?0@"<AVTAvatarsDaemon>"8
Already observing notifications
Export already in flight, try again later
v16@?0@"NSCloudKitMirroringResult"8
Disabled mirroring handler!
identifier
Add handler before starting to observe!
NSPersistentStoreRemoteChangeNotification
v32@?0@?<v@?@"NSManagedObjectContext"@"NSArray">8Q16^B24
Already observing!
com.apple.AvatarUI.AVTCoreDataRemoteChangesObserver.RemoteNotification
v12@?0B8
 object:%@
B16@?0@"NSPersistentHistoryChange"8
v24@?0@"NSPropertyDescription"8^B16
B24@?0@"NSArray"8@"NSString"16
B16@?0@"NSArray"8
@"NSObject<OS_dispatch_queue>"16@?0r*8
SIMULATOR_SHARED_RESOURCES_DIRECTORY
Library/Avatar
Images
Animoji
Stickers
Can't get image cache location %@
com.apple.avatar.activity.PostInstallMigration
com.apple.avatar.activity.UserRequestedBackup
domainIdentifier
primaryAvatarIdentifier
AVTAvatarUIShowAssetsWarning
AVTAvatarUIShowPerfHUD
AVTAvatarUIEditorShowAssetsName
AVTAvatarUILastCacheVersion
AVTAvatarUIThumbnailCaching
AVTAvatarUIFlushThumbnailCache
AVTAvatarShowTrackingLostReticle
AVTUIGlobalPreferencesMemojiClassicDisclosureWarning
AVTAvatarUseLocalEditorModel
AVTAvatarHasDisplayedSplashScreen
AVTAvatarHasDisplayedAnimojiSplashScreen
AVTAvatarHasDisplayedCameraEffectsSplashScreen
AVTAvatarHasDisplayedCameraDisclosureSplashScreen
AVTAvatarHasDisplayedAnimojiCameraDisclosureSplashScreen
AVTAvatarHasDisplayedCameraEffectsCameraDisclosureSplashScreen
AVTAvatarAlwaysShowSplashScreen
AVTAvatarForceCameraDisclosures
AVTAvatarHasDisplayedPaddleView
AVTAvatarAlwaysShowPaddleView
AVTUIGlobalPreferencesHasDisplayedCategoriesDiscoverability
AVTUIGlobalPreferencesDisableDeleteConfirmation
AVTUIGlobalPreferencesDisablEditAfterDuplicate
AVTUIGlobalPreferencesGroupDialUsesMasking
AVTAvatarPreLoadOnLaunch
AVTAdaptativeFrameRate
AVTAvatarUIWipeCloudKitContainer
AVTAvatarUIUseTestCloudKitContainer
AVTAvatarUIWipeDatabase
AVTSyncEnabled
AVTUIEditorGroupName
AVTSyncImportDate
AVTUISyncExportRequired
AVTUISyncPreserveContentOnAccountChange
AVTUIRestrictMaxAvatarCount
AVTUIGlobalPreferencesStickersLastSelected
AVTUIGlobalPreferencesStickersDisclosureWarning
AVTUIGlobalPreferencesStickerRecentsDisclosureWarning
AVTUIGlobalPreferencesStickersCaching
AVTUIGlobalPreferencesFlushStickersCache
AVTUIGlobalPreferencesShowPrereleaseStickerPack
AVTUIGlobalPreferencesShowPrereleaseStickerLabel
AVTUIGlobalPreferencesStickersHEICSSequence
com.apple.Animoji.StickerRecents.SplashVersion
AVTUIGlobalPreferencesAlwaysShowStickerRecentsSplashScreen
AVTUIGlobalPreferencesForceNoMemojiStickerRecentsSplashScreen
AVTUIGlobalPreferencesStickerRecentsMigrationVersion
com.apple.AvatarUI.Staryu
SBIconVisibility
.GlobalPreferences
domains
records
v24@?0@"NSArray"8@"NSError"16
v20@?0B8@"NSError"12
v28@?0B8@"<AVTAvatarRecord>"12@"NSError"20
AVTAvatarUIErrorDomain
AVTAvatarUIMultipleErrorsKey
B32@?0@"AVTAvatarRecord"8Q16^B24
avatarData
orderDate
avatarDataString
B32@?0@"AVTStickerRecord"8Q16^B24
avatarRecordIdentifier
stickerConfigurationIdentifier
frequencySum
serializationVersion
 identifer:%@ ari:%@ sci:%@ frequencySum:%ld version:%ld
B32@?0@"AVTArchiverBasedDomain"8Q16^B24
v24@?0Q8^B16
AVTAvatarStoreDidChangeNotification
changedRecordIDs
com.apple.AvatarUI.AVTAvatarStore.backendAcccessQueue
com.apple.AvatarUI.AVTAvatarStore.workQueue
com.apple.AvatarUI.AVTAvatarStore.puppetStoreAccessQueue
Running as setup user
v16@?0@"<AVTStoreBackend>"8
v16@?0@"AVTPuppetStore"8
@"AVTAvatarRecord"16@?0@"NSString"8
AVTTypeMismatchException
com.apple.animoji
AVTRecentStickers
AVTStickersArray
AVTFrequencyCounter
AVTRecentStickerChangedExternallyNotification
avatars.db
avatars.version
Version object is not of expected class
backendVersion
avatarKitVersion
 backend:%2.2f avatarKit:%2.2f
currentHistoryToken
Got a nil NSPersistentHistoryResult, but no error filled in
 type:%ld identifier:%@
@"NSString"16@?0@"AVTAvatarRecord"8
AVTCoreDataContainer
movedaside
AvatarUIClient
com.apple.avatar.service
v24@?0@"NSPersistentStoreDescription"8@"NSError"16
CoreDataBackend
B24@?0^{__CFString=}8^@16
v24@?0@"NSNumber"8@"NSError"16
Record has a nil identifier
@"NSString"16@?0@"<AVTAvatarRecordChange>"8
isPuppet
avatarRecord
com.apple.avatar.AvatarUI
General
UserInteraction
Backend
com.apple.AvatarUI.AVTCoreDataStoreServer.backgroundQueue
@"<AVTStoreBackendMigrator>"8@?0
com.apple.AvatarUI.AVTCoreDataStoreServer.stickerBackend
@"NSManagedObjectContext"8@?0
Cancelling due to running as Setup User
Completed Internal Settings changes
v16@?0@?<v@?q>8
com.apple.AvatarUI.AVTCoreDataServer.setup
com.apple.AvatarUI.AVTCoreDataServer.backupStatus
com.apple.AvatarUI.AVTCoreDataServer.migration
com.apple.AvatarUI.AVTCoreDataServer.import
com.apple.AvatarUI.AVTCoreDataServer.Maintenance
com.apple.AvatarUI.AVTCoreDataServer.export
com.apple.AvatarUI.AVTCoreDataServer.updateThumbnails
com.apple.AvatarUI.AVTCoreDataServer.deleteStickerRecents
com.apple.AvatarUI.AVTCoreDataServer.pushNotification
com.apple.AvatarUI.AVTCoreDataServer.didResetSync
com.apple.AvatarUI.AVTCoreDataServer.ClientCheckin
com.apple.AvatarUI.AVTPushNotificationSupport.connectionQueue
com.apple.aps.avatar.service
Unable to create an APSConnection
v24@?0@"NSString"8@"NSError"16
com.apple.avatarsd
com.apple.icloud-container.
Avatar
com.apple.Avatars
iCloud.com.apple.AvatarUI.Staryu
v24@?0@"CKAccountInfo"8@"NSError"16
com.apple.MobileSMS
[AVTUIDEBUG] %@
Error loading templates %@
Parsing metadata definitions
Error parsing metadata definitions %@
Rendering model color %@
Rendering model preset %@
Rendering configuration %@
RenderSnapshot
Rendering record %@, at size %2.2fx%2.2f
Snapshot returned %@
No avatar preset for %@
Creating AVTAvatarStore instance %@
Creating empty database at path %@
Creating Folder at path %@
Error creating folder or empty data %@
Saving backend
Deleting record with identifier %@
Deleting images with identifier prefix %@
Duplicating record with identifier %@
Reading backend at %@
Error while saving backend %@
Error while reading backend %@
Record not found in any store (%@)
Puppet(s) not found (%@)
Avatar Record(s) not found (%@)
Error saving recent stickers (%@)
Error fetching recent stickers (%@)
Error fetched an unusable recent sticker (%@)
Error can't find sticker for a recent sticker (%@). Forcing migration
Performed sticker recents migration, found orphaned: %{public}d
SavingRecords
DeletingRecords
FetchingRecords
DuplicatingRecords
Fetched %lu record(s), criteria: %ld
Skipped fetching records: %@
Detected a version mismatch, found %{public}@, current is %{public}@
Avatar record has a version lower than what AvatarKit supports, dropping. %@
Exiting avatarsd for reason: %@
Error updating version %@
Error migrating backend %@
Did finish editing avatar successfully
Error when finishing editing %@
File system error: %@
Creating image store at path %@
Image Store Cache miss: %@
Image Store Cache HIT for %@, size %lu
Image Store failed to save with error: %@, code %ld
SavingImage
Image Store saved image at path %@
[InMemCache] Storage for %@
[InMemCache] HIT for %@
[InMemCache] Evicting object %@
Generating image for record %@, with scope %@, type %ld
Error generating image: %@
Error deleting thumbnails for identifier %@, %@
Error deleting Some thumbnails: %@
Error duplicating thumbnails for identifier %@, %@
Error fetching records %@
[PreLoading] Needed - %lu|%lu
[PreLoading] %@ requested - %lu|%lu
[PreLoading] %@ starts
[PreLoading] %@ CANCELED!
[PreLoading] %@ looking up %@
[PreLoading] %@ loading %@
PreLoadingPreset
[PreLoading] %@ Got thumbnail
Updating live avatar with %@
Requesting thumbnail for %@|%lu
Throttling AVTView
Unthrottling AVTView
Error snapshotting the AVTView: %{public}@
Carousel snapshot for record at index %lu, size %2.2fx%2.2f
-[AVTAvatar preloadAvatar:] identifier %@
AvatarPreLoad
Can't generate a AVTView snapshot, no window present
We have %ld memoji(s)
Clusters of record with small differences: %ld
Clusters of record with big differences: %ld
Starting up server
SettingUpStore
ExportingRecords
ImportingRecords
XPCActivityPostInstallMigration
Finished running migration XPC activity!
XPCActivityUserRequestedBackup
Finished running User Requested Backup XPC activity!
Sync is ENABLED
CloudKit Import Request FAILED, error %@
CloudKit Import Request SUCCEEDED
CloudKit Export Request FAILED, error %@
CloudKit Export Request SUCCEEDED
Mirroring request failed with error (%ld) %@
Migration
Migrating source %@
Error updating records for migration: %@
Found existing record during migration with identifier %@
Error deleting migrated content: %@
Found an existing record with same identifier during migration!
Error adding persistent store: %@
Error starting server! %@
Error setting up store: %@
Received public token %@
Received per-topic push token %@ for topic %@ identifier %@
Received Push Notification for topic: %@, payload: %@
Unable to create Push Connection! %@
ProcessingRemoteChanges
Start observing NSPersistentStoreRemoteChangeNotification from %@
Received NSPersistentStoreRemoteChangeNotification: %@
Dispatching NSPersistentStoreRemoteChangeNotification with %lu transactions; %lu handlers listening
Error fetching change history: %@
notification.userInfo doesn't contain a value for NSPersistentHistoryTokenKey
Changes require export!
Changes require thumbnail update!
Error pinning context to current query generation token: %@
Inspecting changes after token: %@
Unable to read remote record! %@
SavingChangeTrackerToken
Current history token file doesn't exist at path %@
Error reading current history token %@
Author %@ is processing %lu changes: %@
Transaction has changes but nil token! Can't process those changes.
Unable to save change token: %@, location %@
Found record identifier %@ for change type %ld, managedObjectID %@
Did NOT find record identifier for change type %ld, managedObjectID %@ - could be processing ancient history.
DeletingStickerRecentsForRemoteChanges
Deleting sticker recents for sync
UpdatingThumbnailsForRemoteChanges
Error processing change transactions to update thumbnails: %@
Checking if migration needed
Updating thumbnails if needed
Scheduling import of records
Scheduling thumbnail update
WILL RESET CLOUDKIT ZONE!
Did reset CloudKit zone with success %d, error %@
Will tear down CoreData stack for path %@
Error tearing down CoreData stack
Error removing store folder
AVTAvatarStoreDidChangeNotification
Posting change notification for %lu record id(s) %@
Not importing on launch, still remains %02luh %02lum %02lus
failed to configure sandbox storage for avatarsd: %{darwin.errno}d
failed to %{public}@: %{darwin.errno}d
failed to enter sandbox: %{public}s
$HOME not set, falling back to using getpwuid
WillResetSync
DidResetSync
CopyingStorageAside
RestoringStorage
Starting to observe NSCloudKitMirroringDelegateWillResetSyncNotificationName / NSCloudKitMirroringDelegateDidResetSyncNotificationName
Got a notification but no NSCloudKitMirroringDelegateResetSyncReasonKey!
Got a change with a tombstone missing identifier!
Got a change that didn't seem interesting: %@
Reset Sync reason: %lu
Error copying storage aside: %@
Error merging copied aside content: %@
Setup - will check if migration is needed
Setup - scheduling import
Setup - scheduling export
Coalescable event occured: %{public}@
Error getting changed records, %@ for identifiers %@
Too many avatars! (%lu/%lu). %lu won't display.
CheckingAccount
Got account info! HSA2: %d, status: %ld, description: %@
Error getting account info %@
Error migrating backup inclusion status: %@
Error updating backup inclusion status: %@
Will NOT include database in backup.
Will include database in backup.
Accepting incoming connection on side channel
CheckIn from client with pid %d
Connection to avatarsd INTERRUPTED!
Connection to avatarsd invalidated
Error getting proxy to avatarsd: %@
Cant get a proxy to avatarsd! Work won't be performed.
CheckingIn
RunningStoreMaintenance
Error mitigating duplicates %@
Store maintenance completed!
Discovered %lu group(s) of duplicates: %@
Fixing duplicate with identifier %@ to have identifier %@
Sticker Generator Pool has to steal a generator in Use, %ld in use, %ld max
PaddleView Video Player failed with error %@; restarting videos
Rendering sticker %@ for record %@
RenderSticker
StickerViewController preparing for snapshot for bounds %@ offset %f
[StickerTaskScheduler] Added task: %@, task count: %ld
[StickerTaskScheduler] Started task: %@, scheduler rule: %@
[StickerTaskScheduler] Cancelled task: %@
[StickerTaskScheduler] Cancelled sticker sheet tasks for identifier: %@
[StickerTaskScheduler] Cancelled all tasks
[AVTBodyCarousel] bodyPoseCell is nil or unexpected type at indexPath %@
Nil image returned from AVTUIStickerRenderer
Nil image returned from _AVTAvatarRecordImageProvider
Carousel changing to single avatar mode
Carousel changing to multi avatar mode
Carousel changes center item to:%@
Carousel transtioning center item:%@, center cell:%@
Carousel stops focusing on center item:%@, center cell:%@
Single mode controller STARTS using liveView: %@
Single mode controller STOPS using liveView: %@
[AVTTransition:%@] Carousel Cell STARTS using liveView, cell:%@
[AVTTransition:%@] Carousel Cell STOPS using liveView, cell:%@
[AVTTransition:%@] -> Carousel adds transition to coordinator
[AVTTransition:%@] -> starts, state: %ld
[AVTTransition:%@] -> Setup done, state: %ld, finished %@
[AVTTransition:%@] -> Perform
[AVTTransition:%@] -> CANCEL!
[AVTTransition:%@] -> reached stage %lu, state: %lu
ToLive
[AVTView] Set avatar: %@
AVTViewSetAvatar
[AVTView] Did render avatar: %@, current avatar %@, match %@
Did not get a valid frame for element at index %ld
[Delegate] Did Focus on record %@
[Delegate] Will End Focus on record %@
[Delegate] Did Move (%2.2lf) Toward record %d, editable %d
[Delegate] Did Update with record %@
Carousel ends dragging with velocity:%2.2lf, switch instead of scroll back: %d, switch for high velocity: %d
Setup User has no Memoji data to import
Setup User data import failed to unarchive data at path: %@, error: %@
Setup User import attempting to save %ld records
Setup User data import failed to save avatar records, error: %@
Setup - checking for Setup User data to import
Setup User data import failed to remove draft data file
AVTEventCoalescer
AVTPassthroughEventCoalescer
AVTCoreDataStoreBackend
AVTStoreBackend
NSObject
AVTAvatarStoreInternal
AVTAvatarStore
AVTStickerBackend
AVTPAvatarRecordDataSource
AVTAvatarStoreDelegate
AVTAvatarRecordDataSourceInternal
AVTAvatarRecordDataSource
Convenience
AVTAvatarRecordInternal
AVTAvatarRecord
NSSecureCoding
NSCoding
NSCopying
AVTAvatarRecordRendering
AVTPuppetStore
AVTStickerFetchRequest
AVTCoreDataStoreMaintenance
AvatarUI
AVTAvatarsDaemonClient
AVTAvatarsDaemon
AVTCoreDataCloudKitMirroringHandler
AVTDisabledMirroringHandler
AVTAvatarPuppetRecord
AVTCoreDataRemoteChangesObserver
AVTCoreEnvironment
AVTBackgroundActivitySchedulerFactory
AVTArchiverBasedDomain
AVTArchiverBasedStoreRoot
AVTAvatarRecordSerializer
AVTBlockScheduler
AVTObservableAvatarStore
AVTArchiverBasedStoreMigratableSource
AVTStoreBackendMigratableSource
AVTError
AVTStickerRecord
AVTArchiverBasedStoreBackend
AVTAvatarStoreNotification
AVTPAvatarStore
AVTStoreBackendDelegate
AVTAvatarStoreServer
AVTStickerUserDefaultsBackend
AVTAvatarFetchRequest
AVTArchiverBasedStorePersistence
AVTBackendVersion
AVTCoreDataChangeTracker
AVTAvatarRecordChangeTracker
AVTCoreDataChangeTrackerChange
AVTAvatarRecordChange
AVTStoreBackendMigrator
AVTSyncSchedulingAuthority
AVTCoreDataPersistentStoreConfiguration
_AVTCoreDataPersistentStoreRemoteConfiguration
_AVTCoreDataPersistentStoreLocalConfiguration
AVTCoreDataPersistentStoreLocalConfiguration
AVTAvatarManagedRecordTransformer
AVTStickerChangeObserver
AVTAvatarsDaemonServer
NSXPCListenerDelegate
AVTSerializedAvatarRecord
AVTUILogger
AVTStubbedStoreBackend
AVTCoreDataStoreServer
AVTPushNotificationsSupportDelegate
AVTCoreDataCloudKitMirroringHandlerDelegate
AVTAvatarsDaemonServerDelegate
AVTPushNotificationsSupport
APSConnectionDelegate
AVTPushNotificationsConnectionFactory
AVTAvatarManagedRecord
AVTSideCoreDataStoreMigratableSource
AVTCoreDataCloudKitMirroringConfiguration
init
eventHandler
raise:format:
setEventLabel:
setEventHandler:
logger
eventLabel
logCoalesceableEventOccured:
workQueue
eventDeliveryScheduled
setEventDeliveryScheduled:
delay
registerEventForCoalescingWithLabel:handler:
eventDidOccur:
initWithDelay:queue:logger:
.cxx_destruct
_eventDeliveryScheduled
_eventHandler
_eventLabel
_logger
_workQueue
_delay
T@?,C,N,V_eventHandler
T@"NSString",C,N,V_eventLabel
T@"<AVTUILogger>",R,N,V_logger
T@"NSObject<OS_dispatch_queue>",R,N,V_workQueue
Td,R,N,V_delay
TB,N,V_eventDeliveryScheduled
setHandler:
handler
_handler
T@?,C,N,V_handler
serialQueueProvider
initWithConfiguration:workQueue:coalescer:environment:
initWithConfiguration:recordTransformer:environment:
processInfo
processName
initWithConfiguration:recordTransformer:remoteChangesObserver:localProcessName:recordChangeTracker:environment:
configuration
createManagedObjectContext
newManagedObjectContext
performBlockAndWait:
setupIfNeeded:
startObservingChangesIfNeeded
fetchRequestWithEntityName:
setResultType:
arrayWithObjects:count:
setPropertiesToFetch:
predicateWithFormat:
setPredicate:
executeFetchRequest:error:
array
countByEnumeratingWithState:objects:count:
objectForKeyedSubscript:
bytes
initWithUUIDBytes:
recordTransformer
identifierForManagedRecordIdentifier:
addObject:
localProcessName
processID
isEqual:
changes
changeType
tombstone
logMissingTombstonedIdentifier
changedObjectID
description
logPersistentChangeNotOfInterest:
copy
remoteChangesObserver
isObservingChanges
getChangedObjectIDsOfInterest:deletedIdentifiers:forTransactions:
count
recordIdentifiersForManagedObjectIDs:managedObjectContext:error:
logErrorGettingChangedRecordsContentForIdentifiers:error:
arrayByAddingObjectsFromArray:
contentDidChangeWithIdentifiers:
addChangesHandler:
startObservingChanges
criteria
fetchRequestCriteriaSupported:
setupStoreIfNeeded:
cdFetchRequestForAvatarFetchRequest:recordTransformer:
maximumNumberOfFetchableAvatars
logTooManyAvatars:limit:
subarrayWithRange:
recordWithManagedRecord:error:
logUnableToReadRemoteRecord:
performWorkWithManagedObjectContext:
errorWithCode:userInfo:
saveAvatars:error:
identifier
managedRecordIdentifierForIdentifier:
avt_map:
cdFetchRequestWithPredicate:fetchLimit:
_avtui_dictionaryByIndexingObjectsInArray:by:
nts_avatarCountWithManagedObjectContext:error:
maximumNumberOfSavableAvatars
insertNewObjectForEntityForName:inManagedObjectContext:
updateManagedRecord:withRecord:
nts_saveManagedObjectContext:error:
save:
initWithFetchRequest:
executeRequest:error:
result
boolValue
orderDate
dateByAddingTimeInterval:
firstObject
timeIntervalSinceDate:
avatarData
initWithAvatarData:orderDate:
countForFetchRequest:error:
backendDelegate
backend:didChangeRecordsWithIdentifiers:
setReturnsObjectsAsFaults:
setFetchLimit:
sortDescriptorWithKey:ascending:
setSortDescriptors:
identifiers
objectAtIndexedSubscript:
arrayWithCapacity:
excludingIdentifiers
fetchLimit
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
avatarsForFetchRequest:error:
saveAvatar:error:
deleteAvatarWithIdentifier:error:
duplicateAvatarRecord:error:
canCreateAvatarWithError:
setBackendDelegate:
recordChangeTracker
T@"<AVTStoreBackendDelegate>",W,N
T@"<AVTAvatarRecordChangeTracker>",R,N
initWithConfiguration:environment:
_recordChangeTracker
_configuration
_recordTransformer
_remoteChangesObserver
_localProcessName
T@"<AVTCoreDataPersistentStoreConfiguration>",R,N,V_configuration
T@"<AVTAvatarManagedRecordTransformer>",R,N,V_recordTransformer
T@"<AVTCoreDataRemoteChangesObserver>",R,N,V_remoteChangesObserver
T@"NSString",R,N,V_localProcessName
T@"<AVTStoreBackendDelegate>",W,N,VbackendDelegate
T@"<AVTAvatarRecordChangeTracker>",R,N,V_recordChangeTracker
isEditable
insertObject:atIndex:
compare:
defaultEnvironment
initWithRecordStore:fetchRequest:environment:
canCreateAvatar
fetchAvatarsForFetchRequest:completionHandler:
saveAvatarRecord:thumbnailAvatar:completionBlock:thumbnailGenerationCompletionBlock:
deleteAvatar:completionHandler:
duplicateAvatar:completionBlock:
deleteAvatarWithIdentifier:completionBlock:
recentStickersForFetchRequest:error:
didUseStickerWithAvatarIdentifier:stickerIdentifier:completionHandler:
deleteRecentStickersWithAvatarIdentifier:stickerIdentifier:completionHandler:
deleteRecentStickersForChangeTracker:completionHandler:
stickerBackendDelegate
setStickerBackendDelegate:
T@"<AVTStickerBackendDelegate>",W,N
initWithRecordStore:fetchRequest:callbackQueue:environment:
notificationCenter
initWithRecordStore:fetchRequest:callbackQueue:logger:notificationCenter:
initWithStore:callbackQueue:
setDelegate:
weakObjectsPointerArray
setNts_recordStorage:
nts_changeNotificationObserver
removeObserver:
dealloc
callbackQueue
nts_recordStorage
avatarStoreDidChange:
addObserverForName:object:queue:usingBlock:
setNts_changeNotificationObserver:
areRecordsLoaded
backingStore
fetchRequest
loadRecordsWithStore:request:logger:
mutableCopy
nts_observers
compact
addPointer:
performObserversWork:
insertPointer:atIndex:
allObjects
indexOfObject:
removePointerAtIndex:
logReadingError:
sortedRecordsEditableFirstReverseOrder:
object
underlyingStore
significantRecordChangeInDataSource:
enumerateObserversRespondingToSelector:withBlock:
performSyncWorkWithRecords:
internalRecordStore
indexesOfObjectsPassingTest:
indexOfObjectPassingTest:
indexesOfRecordsPassingTest:
indexForInsertingRecord:inRecords:
replaceObjectAtIndex:withObject:
dataSource:didAddRecord:atIndex:
dataSource:didEditRecord:atIndex:
isEqualToString:
objectAtIndex:
removeObjectAtIndex:
dataSource:didRemoveRecord:atIndex:
indexForInsertingDuplicateRecord:original:inRecords:
store:didSaveAvatar:postCompletionHandler:
store:didDeleteAvatarWithIdentifier:postCompletionHandler:
store:didCreateDuplicateAvatar:forOriginal:postCompletionHandler:
numberOfRecords
recordAtIndex:
recordStore
indexOfRecordPassingTest:
indexSetForEditableRecords
initWithRecordStore:fetchRequest:
flushRecordsForEnteringBackground
addObserver:
addPriorityObserver:
didRecieveAvatarChangeDistributedNotification:
_callbackQueue
_underlyingStore
_backingStore
_fetchRequest
_nts_recordStorage
_notificationCenter
_nts_observers
_nts_changeNotificationObserver
T@"NSObject<OS_dispatch_queue>",R,N,V_callbackQueue
T@"AVTPAvatarStore",R,N,V_underlyingStore
T@"AVTObservableAvatarStore",R,N,V_backingStore
T@"AVTAvatarFetchRequest",R,N,V_fetchRequest
T@"NSMutableArray",&,N,V_nts_recordStorage
T@"NSNotificationCenter",R,N,V_notificationCenter
T@"NSPointerArray",R,N,V_nts_observers
T@"<NSObject>",&,N,V_nts_changeNotificationObserver
requestForAllAvatars
defaultUIDataSourceWithDomainIdentifier:
avatarForRecord:usageIntent:
memojiForRecord:usageIntent:
puppetName
animojiNamed:
_castRecord:andDoRecordHandlingBlock:puppetHandlingBlock:
avatarWithDataRepresentation:usageIntent:error:
T@"NSString",R,C,N
editable
TB,R,N,GisEditable
encodeWithCoder:
initWithCoder:
supportsSecureCoding
TB,R
copyWithZone:
isPuppet
puppet
TB,R,N,GisPuppet
preloadAvatarsWithIdentifiers:store:environment:completionHandler:
preloadAllAvatarsWithStore:environment:completionHandler:
requestForAvatarWithIdentifier:
preloadAvatarsWithFetchRequests:store:environment:completionHandler:
backgroundQueue
logErrorFetchingRecords:
avatarForRecord:
logAvatarPreloadBeginForIdentifier:
preloadAvatar:
logAvatarPreloadEnd
memojiForRecord:
preloadAvatarsWithIdentifiers:store:completionHandler:
preloadAllAvatarsWithStore:completionHandler:
loadPuppetRecordsIfNeeded
puppetRecords
createPuppetRecords
setPuppetRecords:
animojiNames
initWithPuppetName:
allAvatarPuppetsWithError:
avatarsWithIdentifiers:error:
allAvatarPuppetsExcluding:error:
matchingIdentifierTest:
objectsAtIndexes:
initWithEnvironment:
allPuppetRecords
avatarPuppetsForFetchRequest:error:
_puppetRecords
T@"NSArray",C,N,V_puppetRecords
initWithCriteria:
initWithCriteria:resultLimit:
initWithCriteria:avatarIdentifier:stickerIdentifier:
resultLimit
avatarIdentifier
stickerIdentifier
appendFormat:
requestForAllRecentStickers
requestForMostRecentStickersWithResultLimit:
requestForStickersWithAvatarIdentifier:stickerIdentifier:
_resultLimit
_avatarIdentifier
_stickerIdentifier
_criteria
Tq,R,N,V_resultLimit
T@"NSString",R,C,N,V_avatarIdentifier
T@"NSString",R,C,N,V_stickerIdentifier
Tq,R,N,V_criteria
initWithWorkQueue:managedObjectContextFactory:eventCoalescer:logger:
runMaintenanceTasks
eventCoalescer
mocFactory
currentQueryGenerationToken
setQueryGenerationFromToken:error:
logErrorPinningContextToCurrentQueryGenerationToken:
mitigateDuplicatesWithManagedObjectContext:error:
logErrorMitigatingDuplicates:
logMaintenanceCompleted
runningMaintenance:
duplicatedIdentifiersInManagedObjectContext:error:
fetchDuplicatedRecordsForIdentifiers:managedObjectContext:error:
fixDuplicateRecordIdentifiers:managedObjectContext:error:
UUID
setIdentifier:
UUIDString
logDeduplicateRecordWithIdentifier:toNewRecordWithIdentifier:
enumerateKeysAndObjectsUsingBlock:
dictionary
setObject:forKeyedSubscript:
expressionForKeyPath:
setName:
expressionForFunction:arguments:
setExpression:
setExpressionResultType:
setPropertiesToGroupBy:
expressionForVariable:
setHavingPredicate:
logDiscoveredDuplicates:count:
storeDidChange
initWithEnvironment:managedObjectContextFactory:
_eventCoalescer
_mocFactory
T@"<AVTEventCoalescer>",R,N,V_eventCoalescer
T@?,R,C,N,V_mocFactory
stringByReplacingOccurrencesOfString:withString:
arrayWithArray:
avt_description
avt_firstObjectPassingTest:
_avtui_deepCopy
initWithMachServiceName:options:
initWithConnectionFactory:logger:
connectionFactory
logAvatarsDaemonClientConnectionInterrupted
setInterruptionHandler:
logAvatarsDaemonClientConnectionInvalidated
setInvalidationHandler:
xpcInterface
setRemoteObjectInterface:
resume
invalidate
logErrorGettingAvatarsDaemonClientProxy:
synchronousRemoteObjectProxyWithErrorHandler:
performWorkWithConnection:
checkIn
performWorkWithSynchronousProxy:
checkingIn:
initWithLogger:
_connectionFactory
T@?,R,C,N,V_connectionFactory
willResetNotificationToken
didResetNotificationToken
logStartObservingResetSync
setNotificationCenter:
willResetSync:
setWillResetNotificationToken:
didResetSync:
setDidResetNotificationToken:
userInfo
unsignedIntegerValue
logMissingResetSyncReasonKey
logResetSyncReason:
delegate
mirroringHandler:willResetSyncWithReason:
processingWillResetSyncNotification:
mirroringHandler:didResetSyncWithReason:
processingDidResetSyncNotification:
blockScheduler
exportInFlight
dictionaryWithObjects:forKeys:count:
setExportInFlight:
exportChangesWithManagedObjectContext:discretionary:workQueue:completionHandler:
performBlock:afterDelay:onQueue:
success
error
logImportRequestResult:error:
initWithOptions:completionBlock:
options
configureMirroringRequestOptions:discretionary:
code
logMirroringRequestErrorWithCode:description:
importingRecords:
logExportRequestResult:error:
exportingRecords:
configureMirroringRequestOptions:
startObservingResetSyncWithNotificationCenter:
scheduleExportChangesWithManagedObjectContext:discretionary:workQueue:completionHandler:
importChangesWithManagedObjectContext:discretionary:workQueue:completionHandler:
resetZoneWithManagedObjectContext:completionHandler:
T@"<AVTCoreDataCloudKitMirroringHandlerDelegate>",W,N
initWithLogger:blockScheduler:
_exportInFlight
_delegate
_blockScheduler
_willResetNotificationToken
_didResetNotificationToken
T@"<AVTBlockScheduler>",R,N,V_blockScheduler
T@"<NSObject>",&,N,V_willResetNotificationToken
T@"<NSObject>",&,N,V_didResetNotificationToken
T@"NSNotificationCenter",&,N,V_notificationCenter
TB,N,V_exportInFlight
T@"<AVTCoreDataCloudKitMirroringHandlerDelegate>",W,N,V_delegate
scheduleImportChangesWithManagedObjectContext:workQueue:completionHandler:
decodeObjectOfClass:forKey:
encodeObject:forKey:
_puppetName
T@"NSString",R,C,N,V_puppetName
observationToken
changeHandlers
coalescer
transactionsForPendingChanges
removeAllObjects
logDispatchingRemoteChangeWithTransactionCount:handlersCount:
enumerateObjectsUsingBlock:
performManagedObjectContextWork:
registerCoalescerEventHandler
persistentStoreCoordinator
logStartObservingRemoteChangeNotificationFrom:
environment
processRemoteChangeNotification:completion:
setObservationToken:
stringByAppendingFormat:
logReceivedRemoteChange:
logNotificationDoesntContainChangeHistoryToken
changeTransactionsForToken:managedObjectContext:
addObjectsFromArray:
processingRemoteChangeNotification:
logInspectingChangesForExportAfterToken:
fetchHistoryTransactionForToken:
logErrorFetchingChangeHistory:
_coalescer
_environment
_observationToken
_changeHandlers
_transactionsForPendingChanges
T@"<AVTEventCoalescer>",R,N,V_coalescer
T@"AVTCoreEnvironment",R,N,V_environment
T@"<NSObject>",&,N,V_observationToken
T@"NSMutableArray",R,N,V_changeHandlers
T@"NSMutableArray",R,N,V_transactionsForPendingChanges
updatedProperties
name
containsObject:
author
bundleID
entity
defaultCenter
resetFlushCacheValuesIfNeeded
stringByAppendingPathComponent:
fileURLWithPath:
storeLocation
URLByAppendingPathComponent:
URLForDirectory:inDomain:appropriateForURL:create:error:
imageStoreLocation
imageCacheStoreLocationWithError:
stringWithFormat:
logFileSystemError:
stickerImageStoreLocation
imageCacheStoreLocation
scheduler
lockProvider
_storeLocation
_imageStoreLocation
_stickerImageStoreLocation
_imageCacheStoreLocation
_scheduler
_serialQueueProvider
_lockProvider
_backgroundQueue
T@"<AVTBlockScheduler>",R,N,V_scheduler
T@?,R,C,N,V_serialQueueProvider
T@?,R,C,N,V_lockProvider
T@"NSObject<OS_dispatch_queue>",R,C,N,V_backgroundQueue
T@"NSURL",R,C,N
initWithIdentifier:
setPreregistered:
schedulerForPostInstallMigrationActivity
schedulerForUserRequestedBackupActivity
domainIdentifier
initWithDomainIdentifier:primaryAvatarIdentifier:
primaryAvatarIdentifier
domainBySettingPrimaryAvatarIdentifier:
_domainIdentifier
_primaryAvatarIdentifier
T@"NSString",R,C,N,V_domainIdentifier
T@"NSString",R,C,N,V_primaryAvatarIdentifier
numberWithBool:
integerValue
numberWithInteger:
interfaceWithProtocol:
setWithObjects:
decodeObjectOfClasses:forKey:
initWithDomains:records:
domains
records
_domains
_records
T@"NSArray",R,C,N,V_domains
T@"NSArray",R,C,N,V_records
initWithAvatarRecord:
archivedDataWithRootObject:requiringSecureCoding:error:
unarchivedObjectOfClass:fromData:error:
avatarRecord
dataFromAvatarRecord:
avatarRecordFromData:
store
_store
T@"<AVTAvatarStoreInternal>",R,N,V_store
T@"<AVTAvatarStoreDelegate>",W,N,V_delegate
recordIdentifier
contentExistsAtLocation:
initWithStoreLocation:domainIdentifier:environment:
dateWithTimeIntervalSinceNow:
initWithAvatarData:identifier:orderDate:
removeFilesAtLocation:error:
migrationNeeded
createSourceBackend
finalizeMigration:
migratedRecordFromRecord:index:totalCount:
initWithStoreLocation:environment:
T@"NSURL",R,N,V_storeLocation
errorWithDomain:code:userInfo:
memoji
dataRepresentation
neutralMemojiDataRepresentation
canLoadDataRepresentation:
dataForNeutralRecord
date
initWithAvatarData:
appendString:
initWithData:encoding:
dataForNewRecord
canLoadAvatarWithData:
defaultAvatarRecord
dictionaryRepresentation
setAvatarData:
_identifier
_avatarData
_orderDate
T@"NSData",&,N,V_avatarData
T@"NSDate",R,N,V_orderDate
T@"NSString",R,C,N,V_identifier
initWithIdentifier:avatarRecordIdentifier:stickerConfigurationIdentifier:frequencySum:serializationVersion:
avatarRecordIdentifier
stickerConfigurationIdentifier
frequencySum
serializationVersion
_avatarRecordIdentifier
_stickerConfigurationIdentifier
_frequencySum
_serializationVersion
T@"NSNumber",R,N,V_frequencySum
T@"NSNumber",R,N,V_serializationVersion
T@"NSString",R,C,N,V_avatarRecordIdentifier
T@"NSString",R,C,N,V_stickerConfigurationIdentifier
model
loadContentFromDisk:
readContentFromDiskAtLocation:logger:error:
loadModel:
classifyRecordsByIdentifiers:
setModel:
setSortedAvatars:
setAvatarsByIdentifiers:
loadContentFromDiskIfNeeded:
allAvatars
avatarsExcludingIdentifiers:error:
sortedAvatars
rootBySavingAvatarRecord:afterAvatarRecord:forDomainIdentifier:toRoot:
saveModel:logger:error:
logDeletingRecordWithIdentifier:
rootByRemovingAvatarWithIdentifier:fromRoot:
logDuplicatingRecordWithIdentifier:
avatarCountWithError:
writeContent:toDiskAtLocation:logger:error:
enumerateIndexesUsingBlock:
dictionaryWithCapacity:
storeLocationForDomainIdentifier:environment:
avatarsByIdentifiers
_model
_avatarsByIdentifiers
_sortedAvatars
T@"NSURL",R,C,N,V_storeLocation
T@"AVTArchiverBasedStoreRoot",&,N,V_model
T@"NSDictionary",C,N,V_avatarsByIdentifiers
T@"NSArray",C,N,V_sortedAvatars
_avtui_changedRecordIdentifiers
remoteConfigurationWithEnvironment:
defaultBackendWithWorkQueue:environment:
standardUserDefaults
initWithWorkQueue:environment:userDefaults:
initWithBackend:backendAccessQueue:puppetStore:stickerBackend:environment:
logCreatingStore:
logSkippedFetchingRecordsWithReason:
performBackendWork:
logFetchedRecords:criteria:
fetchingRecords:
performPuppetStoreWork:
domain
logRecordsNotFoundInRecordStore:
logRecordsNotFoundInPuppetStore:
logRecordsNotFoundInAnyStore:
backendAccessQueue
backend
puppetStoreAccessQueue
puppetStore
performAsynchronousWork:
imageHandlingDelegate
deleteThumbnailsForAvatarRecordsWithIdentifiers:error:
clearStickersForAvatarRecordIdentifier:withEnvironment:
generateThumbnailsForAvatarRecord:avatar:error:
generateThumbnailsForAvatarRecords:error:
postChangeNotificationForRecordWithIdentifiers:remote:
savingRecords:
logErrorDeletingThumbnailsForIdentifier:error:
stickerBackend
deletingRecords:
generateThumbnailsForDuplicateAvatarRecord:originalRecord:error:
logErrorDuplicatingThumbnailsForIdentifier:error:
duplicatingRecords:
logPostingChangeNotificationForIdentifiers:
postNotificationName:object:userInfo:
updateThumbnailsForChangesWithTracker:recordProvider:
initWithDomainIdentifier:
setImageHandlingDelegate:
_imageHandlingDelegate
_backendAccessQueue
_puppetStoreAccessQueue
_backend
_puppetStore
_stickerBackend
T@"NSObject<OS_dispatch_queue>",R,N,V_backendAccessQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_puppetStoreAccessQueue
T@"<AVTStoreBackend>",R,N,V_backend
T@"AVTPuppetStore",R,N,V_puppetStore
T@"<AVTStickerBackend>",R,N,V_stickerBackend
T@"<AVTPBackendImageHandlingDelegate>",W,N,V_imageHandlingDelegate
defaultServerWithImageHandlingDelegate:
initWithEnvironment:imageHandlingDelegate:
defaultServer
getStickersFromUserDefaults
stickers
fetchAllStickers
fetchMostRecentStickersWithLimit:
fetchStickersWithAvatarIdentifier:stickerIdentifier:
addStickerWithAvatarIdentifier:stickerIdentifier:
updateStickerAtIndex:
saveStickersToUserDefaults
stickersIndexesMatchingAvatarIdentifier:stickerIdentifier:
removeObjectsAtIndexes:
cacheLocation
processChangeTransactionsWithChangeTokenLocation:handler:error:
deletingStickerRecentsForRemoteChanges:
frequencyCounter
recentStickersDidChange:
userDefaults
objectForKey:inDomain:
unarchivedObjectOfClasses:fromData:error:
setFrequencyCounter:
numberWithUnsignedInteger:
setObject:forKey:inDomain:
nextFrequencyCount
addNextFrequencyCountToFrequencySum:
setObject:atIndexedSubscript:
exchangeObjectAtIndex:withObjectAtIndex:
length
_recentStickersChangedExternally
setStickers:
_stickerBackendDelegate
_userDefaults
_cacheLocation
_stickers
_frequencyCounter
T@"NSUserDefaults",R,N,V_userDefaults
T@"NSURL",R,N,V_cacheLocation
T@"NSMutableArray",&,N,V_stickers
TQ,N,V_frequencyCounter
T@"<AVTStickerBackendDelegate>",W,N,V_stickerBackendDelegate
initWithCriteria:identifiers:excludedIdentifiers:fetchLimit:
initWithCriteria:identifier:
requestForAllAvatarsExcluding:
requestForAvatarsWithIdentifiers:
requestForPredefinedAvatars
requestForPredefinedAvatarsExcluding:
requestForCustomAvatars
requestForCustomAvatarsWithLimit:
requestForStorePrimaryAvatar
_identifiers
_excludingIdentifiers
_fetchLimit
T@"NSArray",R,C,N,V_identifiers
T@"NSArray",R,C,N,V_excludingIdentifiers
Tq,R,N,V_fetchLimit
currentVersion
dbLocationForStoreLocation:
path
fileExistsAtPath:
versionFileLocationForStoreLocation:
removeItemAtURL:error:
versionFromDiskAtLocation:error:
saveToDiskAtLocation:error:
_createStoreIfNeededAtLocation:logger:error:
_readContentFromDiskAtLocation:logger:error:
logReadingBackendAtPath:
dataWithContentsOfURL:options:error:
isFileNotFoundError:
logSavingBackend
_createStoreFolderIfNeededAtLocation:logger:fileManager:error:
logSavingError:
_writeContent:toDiskAtLocation:logger:error:
writeVersion:toDiskAtLocation:error:
logErrorUpdatingVersion:
writeToURL:options:error:
_performMigrationIfNeededForStoreAtLocation:logger:fileManager:error:
_createStoreEmptyFileIfNeededAtLocation:logger:fileManager:error:
readVersionForStoreAtLocation:error:
logBackendVersionMismatch:actual:
backendVersion
_migrateFromPre0_5ToCurrentForStoreAtLocation:logger:fileManager:error:
_migrateFromPre0_6ToCurrentForStoreAtLocation:logger:fileManager:error:
avatarKitVersion
_migrateDifferentAvatarKitVersionsForContent:logger:
attributesOfItemAtPath:error:
setAttributes:ofItemAtPath:error:
logDroppingUnsupportedAvatarRecord:
logCreatingBackendFolderAtPath:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
logErrorCreatingBackendContent:
logCreatingBackendDBAtPath:
initWithBackendVersion:avatarKitVersion:
doubleValue
decodeDoubleForKey:
encodeDouble:forKey:
_backendVersion
_avatarKitVersion
Td,R,N,V_backendVersion
Td,R,N,V_avatarKitVersion
currentHistoryTokenForLocation:
trackerChangesFromPersistentChanges:managedObjectContext:
logTrackerProcessingChanges:count:from:
enumerateChangesAfterToken:managedObjectContext:changesHandler:error:
saveToken:location:error:
logErrorSavingChangeToken:location:
recordIdentifierForChange:managedObjectContext:
trackerChangeTypeFromPersistentChangeType:
initWithRecordIdentifier:changeType:
tokenFileURLForLocation:
logCurrentHistoryTokenFileDoesntExist:
logErrorReadingCurrentHistoryToken:
savingChangeTrackerToken:
fetchHistoryAfterToken:
token
logTransactionHasChangesButNoToken
objectWithID:
URIRepresentation
logCouldntFindRecordIdentifierForChangeType:managedObjectID:
logFoundRecordIdentifier:changeType:managedObjectID:
T@"NSString",R,N
Tq,R,N
_recordIdentifier
_changeType
T@"NSString",R,N,V_recordIdentifier
Tq,R,N,V_changeType
logMigratingSource:
updatedRecordsForMigratingRecords:source:destinationBackend:error:
logErrorUpdatingRecordsForMigration:
logErrorDeletingMigratedContent:
migratingPersistedContent:
logFoundExistingRecordDuringMigration
migrateContentFromSource:toDestination:error:
logNotImportingOnLaunchWithRemainingTime:
importRequired
exportRequired
importDidCompleteSuccessfully
exportDidCompleteSuccessfully
didReceivePushNotification
didResetSync
madeLocalChanges
remoteConfigurationWithDaemonClient:environment:
initWithDaemonClient:environment:
initWithStoreLocation:copiedAside:environment:
createModel
modelV1
setManagedObjectClassName:
setAttributeType:
setPreservesValueInHistoryOnDeletion:
managedModelAttributesRequiredForMirroring
setProperties:
setEntities:
localConfigurationWithStoreLocation:environment:
currentManagedObjectModel
createContainerForRemoteConfiguration
initWithName:managedObjectModel:
setType:
setOption:forKey:
setShouldAddStoreAsynchronously:
setPersistentStoreDescriptions:
container
persistentStores
daemonClient
loadPersistentStoresWithCompletionHandler:
newBackgroundContext
setTransactionAuthor:
persistentStoreDescriptions
storeDescription
_container
_daemonClient
T@"NSPersistentContainer",R,N,V_container
T@"<AVTAvatarsDaemon>",R,N,V_daemonClient
sideDatabaseFolderForStoreLocation:
databaseFolderForStoreLocation:
databaseLocationForFolderLocation:
initWithManagedObjectModel:
createStoreDescriptionWithDatabaseLocation:logger:
cloudKitMirroringEnabled
logSyncEnabled
configureStoreDescriptionForMirroring:logger:
setURL:
URLByAppendingPathExtension:
copiedAsideMigratableSource
folderLocation
coordinator
defaultManager
createDatabaseDirectoryIfNeeded:usingFileManager:
logErrorAddingPersistentStore:
addPersistentStoreWithDescription:completionHandler:
initWithConcurrencyType:
setPersistentStoreCoordinator:
databaseLocation
initForStoreWithURL:usingModel:options:policy:
logTearingDownCoreDataStack:
removePersistentStore:error:
logErrorTearingDownCoreDataStack:
logErrorRemovingStoreFolder:
copyItemAtURL:toURL:error:
copyingStorageAside:
logUpdatingBackupExclusionStatus:
getResourceValue:forKey:error:
setResourceValue:forKey:error:
logErrorMigratingBackupInclusionStatus:
logErrorUpdatingBackupInclusionStatus:
deviceConfigurationSupportsCloudKitMirroringWithLogger:completionHandler:
migratableSources
createStoreServerWithError:
tearDownAndEraseAllContent:
contentExists
copyStorageAside:
updateBackupInclusionStatusOnQueue:completionHandler:
_coordinator
_storeDescription
_folderLocation
_databaseLocation
T@"NSPersistentStoreCoordinator",R,N,V_coordinator
T@"NSPersistentStoreDescription",R,N,V_storeDescription
T@"NSURL",R,N,V_folderLocation
T@"NSURL",R,N,V_databaseLocation
initWithUUIDString:
setOrderDate:
deleteImagesForAvatarRecordIdentifier:error:
initWithStickerBackend:environment:
processChangesForChangeTracker:completionHandler:
initWithMachServiceName:
initWithListener:logger:
listener
logAvatarsDaemonReceivesIncomingConnection
setExportedInterface:
setExportedObject:
currentConnection
processIdentifier
logAvatarsDaemonClientChecksIn:
clientDidCheckInForServer:
listener:shouldAcceptNewConnection:
startListening
T@"<AVTAvatarsDaemonServerDelegate>",W,N
_listener
T@"NSXPCListener",R,N,V_listener
T@"<AVTAvatarsDaemonServerDelegate>",W,N,Vdelegate
setIsPuppet:
decodeBoolForKey:
encodeBool:forKey:
_isPuppet
_avatarRecord
TB,N,V_isPuppet
T@"<AVTAvatarRecord>",R,C,N,V_avatarRecord
backendLog
generalLog
componentsJoinedByString:
interactionLog
logDebug:
logErrorLoadingTemplates:
logParsingMetadataDefinitions
logParsingMetadataDefinitionsError:
logRenderingModelColor:
logRenderingModelPreset:
logRenderingConfiguration:
logRenderingRecord:size:
logSnapshotReturnedImage:
logNoAvatarPreset:
logAvatarsdExitingWithReason:
logErrorWhileMigratingBackend:
logDeletingImagesWithIdentifierPrefix:
logErrorSavingRecentSticker:
logErrorFetchingRecentStickers:
logFetchedOrphanedRecentSticker:
logFetchedRecentStickerWithNoStickerConfiguration:
logPerformedRecentStickersMigration:
logCreatingImageStoreForPath:
logImageStoreCacheMiss:
logImageStoreCacheHitForItemDescription:sizeCost:
logImageStoreSavingError:code:
logImageStoreBeginSavingImageForPath:
logImageStoreDoneSavingImageForPath:
logInMemoryCacheStorageForResource:
logInMemoryCacheHitForResource:
logInMemoryCacheEvictsResource:
logGeneratingImageForRecord:scope:type:
logGeneratingImageError:
logErrorDeletingSomeThumbnail:
logDidFinishEditingWithSuccess
logDidFinishEditingWithError:
logPreLoadingNeededForIndex:section:
logRequestingPreLoadingTask:forIndex:section:
logStartingPreLoadingTask:
logCancelingPreLoadingTask:
logLookingUpPreLoadedPreset:task:
logPreLoadingPreset:task:
logDonePreLoadingPreset:task:
logDonePreLoadingThumbnailForPreLoadingTask:
logUpdatingLiveAvatarWithConfiguration:
logRequestingThumbnailForIndex:section:
logThrottlingAVTView
logUnthrottlingAVTView
logErrorSnapshottingAVTView:
logCarouselSnapshotForIndex:size:
logSingleModeCantSnapshotForLackOfWindow
logUsageTrackingRecordCount:
logUsageTrackingSmallDifferencesClusterCount:
logUsageTrackingBigDifferencesClusterCount:
logStartingServer
settingUpStore:
performingMigrationXPCActivity:
logMigrationXPCActivityFinished
performingUserRequestedBackupActivity:
logUserRequestedBackupXPCActivityFinished
logErrorSettingUpStore:
logErrorStartingServer:
logUnableToCreatePushConnection:
logPushConnectionReceivedPublicToken:
logPushConnectionReceivedToken:topic:identifier:
logPushNotificationReceivedForTopic:payload:
logChangesRequireExport
logChangesRequireThumbnailUpdate
updatingThumbnailsForRemoteChanges:
logErrorProcessingChangeTransactionsToUpdateThumbnails:
logCheckingIfMigrationNeeded
logUpdatingThumbnails
logSchedulingImport
logSchedulingUpdateThumbnails
logDeletingStickerRecents
logWillResetZone
logDidResetZoneWithSuccess:error:
postingAvatarStoreChangeNotification:
logErrorSettingUserDirSuffixForSandbox:
logGenericSandboxError:error:
logErrorSandboxInit:
logWarningNoHOME
restoringStorage:
logErrorCopyingStorageAside:
logErrorMergingCopiedAsideContent:
logSetupSchedulingMigrationCheck
logSetupSchedulingImport
logSetupSchedulingExport
checkingAccountInfo:
logAccountInfo:status:deviceToDeviceEncryption:
logErrorGettingAccountInfo:
logNoProxyToAvatarsDaemon
logStickerGeneratorPoolDidntHaveAvailableGenerator:maxCount:
logPaddleViewVideoPlayerFailed:
logRenderingStickerStart:forRecord:
logRenderingStickerEnd:
logStickerViewSnapshotForBounds:offset:
logStickerSchedulerAddedTask:taskCount:
logStickerSchedulerStartedTask:forSchedulerRule:
logStickerSchedulerCancelledTask:
logStickerSchedulerCancelledStickerSheetTasksForIdentifier:
logStickerSchedulerCancelledAllTasks
logErrorUpdatingBodyCarouselVisibleCellAtIndexPath:
logNilImageReturnedFromAVTUIStickerRenderer
logNilImageReturnedFromAVTAvatarRecordImageProvider
logCarouselChangingToSingleMode
logCarouselChangingToMultiMode
logCarouselChangesCenterItemTo:
logCarouselTransitionCenterItem:withCell:
logCarouselStopsFocusingOnCenterItem:withCell:
logSingleModeControllerStartUsingLiveView:
logSingleModeControllerStopUsingLiveView:
logCarouselCellStartUsingLiveView:associatedTransition:
logCarouselCellStopUsingLiveView:associatedTransition:
logCarouselAddsTransitionToCoordinator:
logStartTransition:state:
logSetupHandlerCompletedForTransition:state:finished:
logPerformTransition:
logCancelTransition:
logTransition:state:reachedStage:
logToLivePoseTransitionBegins:
logToLivePoseTransitionEnds:
logAVTViewSetAvatar:
logAVTViewDidRenderAvatar:currentAvatar:
logAVTViewDidRenderCurrentAvatar:
logAVTViewCancelingRenderingAvatar:
logCarouselErrorGettingFrameForElementAtIndex:
logCarouselDelegateDidFocusRecord:
logCarouselDelegateWillEndFocusRecord:
logCarouselDelegateNearnessFactorDidChange:towardRecord:editable:
logCarouselDelegateDidUpdateRecord:
logCarouselEndsDraggingWithVelocity:willSwitchIndexPathInsteadOfScrollBack:forHighVelocity:
logSetupUserHasNoMemojiData
logSetupUserImportAttempting:
logSetupUserImportFailedToUnarchiveDataAtPath:errorDescription:
logSetupUserImportSaveError:
logSetupUserDataImportCheck
logSetupUserImportFailedToRemoveFileWithError:
logFoundExistingRecordDuringMigration:
_generalLog
_interactionLog
_backendLog
T@"NSObject<OS_os_log>",R,N,V_generalLog
T@"NSObject<OS_os_log>",R,N,V_interactionLog
T@"NSObject<OS_os_log>",R,N,V_backendLog
initWithEnvironment:connectionFactory:
createMirroringHandlerWithEnvironment:
initWithLocalBackend:configuration:migratorProvider:pushSupport:mirroringHandler:schedulingAuthority:remoteChangesObserver:stickerChangeObserver:changeTracker:daemonServer:storeMaintenance:backgroundQueue:environment:imageHandlingDelegate:
processInternalSettingsChanges:
setServer:
server
daemonServer
pushNotificationsSupport
startListeningToPushNotifications
schedulingAuthority
scheduleExportWithManagedObjectContext:discretionary:completion:
storeMaintenance
scheduleUpdateThumbnails
deleteStickerRecents
mirroringHandler
setMigrationActivityCompletion:
completeMigrationActivityIfNeeded
scheduleWithBlock:
setUserRequestedBackupActivityCompletion:
setupCompleted
completeUserRequestedBackupActivityIfNeeded
scheduleImportExportIfRequiredWithPostImportHandler:completion:
importSetupUserDataIfNeeded
scheduleSetupThen:
migrationActivityCompletion
userRequestedBackupActivityCompletion
setupThen:
setSetupCompleted:
updateThumbnails
scheduleMigrationThen:
scheduleImportDiscretionary:completionBlock:
migrate
migratorProvider
clearContentAtLocation:
changeTracker
stickerChangeObserver
resetSyncShouldPreserveContentForReason:
didReceivePushNotification:
_setupCompleted
_migratorProvider
_server
_pushNotificationsSupport
_mirroringHandler
_schedulingAuthority
_stickerChangeObserver
_changeTracker
_daemonServer
_storeMaintenance
_migrationActivityCompletion
_userRequestedBackupActivityCompletion
T@"<AVTPBackendImageHandlingDelegate>",R,N,V_imageHandlingDelegate
T@"<AVTCoreDataPersistentStoreLocalConfiguration>",R,N,V_configuration
T@?,R,C,N,V_migratorProvider
T@"NSXPCStoreServer",&,N,V_server
T@"NSObject<OS_dispatch_queue>",R,N,V_backgroundQueue
T@"<AVTPushNotificationsSupport>",R,N,V_pushNotificationsSupport
T@"<AVTCoreDataCloudKitMirroringHandler>",R,N,V_mirroringHandler
T@"<AVTSyncSchedulingAuthority>",R,N,V_schedulingAuthority
T@"AVTStickerChangeObserver",R,N,V_stickerChangeObserver
T@"<AVTAvatarRecordChangeTracker>",R,N,V_changeTracker
T@"<AVTAvatarsDaemonServer>",R,N,V_daemonServer
T@"<AVTCoreDataStoreMaintenance>",R,N,V_storeMaintenance
TB,N,V_setupCompleted
T@?,C,N,V_migrationActivityCompletion
T@?,C,N,V_userRequestedBackupActivityCompletion
connectionQueue
connectionWithEnvironmentName:namedDelegatePort:queue:
getAPSEnvironmentString:
base64EncodedStringWithOptions:
notificationFromRemoteNotificationDictionary:
topic
stringByAppendingString:
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
connection:channelSubscriptionsFailedWithFailures:
stopListeningToPushNotifications
T@"<AVTPushNotificationsSupportDelegate>",W,N
setupConnectionWithCompletionHandler:
pushConnection
setPushConnection:
_pushConnection
_connectionQueue
T@"APSConnection",&,N,V_pushConnection
T@"NSObject<OS_dispatch_queue>",R,N,V_connectionQueue
T@"AVTPushNotificationsConnectionFactory",R,N,V_connectionFactory
T@"<AVTPushNotificationsSupportDelegate>",W,N,V_delegate
initWithEnvironmentName:namedDelegatePort:queue:
T@"NSUUID",&,D,N
T@"NSData",&,D,N
T@"NSDate",&,D,N
currentContainerIdentifier
containerWithIdentifier:
accountStatus
supportsDeviceToDeviceEncryption
manateeContainer:
accountInfoWithCompletionHandler:
initWithContainerIdentifier:
setUseZoneWidePCS:
setUseDeviceToDeviceEncryption:
setContainerOptions:
initWithOptions:
setMirroringDelegate:
setSourceApplicationSecondaryIdentifier:
setSourceApplicationBundleIdentifier:
setDiscretionaryNetworkBehavior:
setOperationConfiguration:
v32@0:8@16@?24
v24@0:8@?16
v32@0:8@"NSString"16@?<v@?>24
v24@0:8@?<v@?B>16
@40@0:8d16@24@32
@?16@0:8
@16@0:8
v24@0:8@16
d16@0:8
B16@0:8
v20@0:8B16
v16@0:8
@"NSString"
@"<AVTUILogger>"
@"NSObject<OS_dispatch_queue>"
@32@0:8@16q24
@32@0:8@16@24
B24@0:8q16
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@32@0:8@16^@24
B32@0:8@16^@24
B24@0:8^@16
@"NSArray"32@0:8@"AVTAvatarFetchRequest"16^@24
B32@0:8@"AVTAvatarRecord"16^@24
B32@0:8@"NSArray"16^@24
B32@0:8@"NSString"16^@24
@"AVTAvatarRecord"32@0:8@"AVTAvatarRecord"16^@24
@"<AVTStoreBackendDelegate>"16@0:8
v24@0:8@"<AVTStoreBackendDelegate>"16
@"<AVTAvatarRecordChangeTracker>"16@0:8
@64@0:8@16@24@32@40@48@56
@40@0:8@16@24^@32
v40@0:8^@16^@24@32
Q32@0:8@16^@24
@"<AVTStoreBackendDelegate>"
@"<AVTAvatarRecordChangeTracker>"
@"<AVTCoreDataPersistentStoreConfiguration>"
@"<AVTAvatarManagedRecordTransformer>"
@"<AVTCoreDataRemoteChangesObserver>"
v48@0:8@16@24@?32@?40
v32@0:8@"AVTAvatarFetchRequest"16@?<v@?@"NSArray"@"NSError">24
v48@0:8@"<AVTAvatarRecord>"16@"AVTMemoji"24@?<v@?B@"NSError">32@?<v@?B@"NSError">40
v32@0:8@"<AVTAvatarRecord>"16@?<v@?B@"NSError">24
v32@0:8@"<AVTAvatarRecord>"16@?<v@?B@"<AVTAvatarRecord>"@"NSError">24
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v40@0:8@16@24@?32
@"NSArray"32@0:8@"AVTStickerFetchRequest"16^@24
v40@0:8@"NSString"16@"NSString"24@?<v@?B@"NSError">32
v32@0:8@"<AVTAvatarRecordChangeTracker>"16@?<v@?B@"NSError">24
@"<AVTStickerBackendDelegate>"16@0:8
v24@0:8@"<AVTStickerBackendDelegate>"16
@24@0:8@16
Q32@0:8@16@24
Q40@0:8@16@24@32
@40@0:8@16@24@32
v48@0:8@16@24@32@?40
v40@0:8@"<AVTAvatarStoreInternal>"16@"<AVTAvatarRecord>"24@?<v@?@?<v@?>>32
v40@0:8@"<AVTAvatarStoreInternal>"16@"NSString"24@?<v@?@?<v@?>>32
v48@0:8@"<AVTAvatarStoreInternal>"16@"<AVTAvatarRecord>"24@"<AVTAvatarRecord>"32@?<v@?@?<v@?>>40
@24@0:8Q16
@24@0:8@?16
Q24@0:8@?16
@"<AVTAvatarRecord>"24@0:8Q16
@"<AVTAvatarStore>"16@0:8
@"NSIndexSet"24@0:8@?<B@?@"<AVTAvatarRecord>"Q^B>16
Q24@0:8@?<B@?@"<AVTAvatarRecord>"Q^B>16
@"NSIndexSet"16@0:8
@"<AVTAvatarStoreInternal>"16@0:8
@48@0:8@16@24@32@40
@56@0:8@16@24@32@40@48
v32@0:8:16@?24
@"AVTPAvatarStore"
@"AVTObservableAvatarStore"
@"AVTAvatarFetchRequest"
@"NSMutableArray"
@"NSNotificationCenter"
@"NSPointerArray"
@"<NSObject>"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^{_NSZone=}16
@32@0:8@16Q24
v40@0:8@16@?24@?32
@24@0:8^@16
@"NSArray"
@24@0:8q16
@32@0:8q16q24
@40@0:8q16@24@32
q16@0:8
@32@0:8@16@?24
@48@0:8@16@?24@32@40
B40@0:8@16@24^@32
@"<AVTEventCoalescer>"
@32@0:8@?16@24
v44@0:8@16B24@28@?36
v24@0:8@"NSNotificationCenter"16
v44@0:8@"NSManagedObjectContext"16B24@"NSObject<OS_dispatch_queue>"28@?<v@?B@"NSError">36
v32@0:8@"NSManagedObjectContext"16@?<v@?B@"NSError">24
@"<AVTCoreDataCloudKitMirroringHandlerDelegate>"16@0:8
v24@0:8@"<AVTCoreDataCloudKitMirroringHandlerDelegate>"16
@"<AVTCoreDataCloudKitMirroringHandlerDelegate>"
@"<AVTBlockScheduler>"
@?24@0:8@16
v24@0:8@?<v@?@"NSManagedObjectContext"@"NSArray">16
@"AVTCoreEnvironment"
@"NSURL"
v40@0:8@?16d24@32
v40@0:8@?<v@?>16d24@"NSObject<OS_dispatch_queue>"32
@"<AVTAvatarStoreDelegate>"
@"<AVTAvatarStoreInternal>"
@40@0:8@16Q24Q32
@"<AVTStoreBackend>"16@0:8
@"AVTAvatarRecord"40@0:8@"AVTAvatarRecord"16Q24Q32
@32@0:8q16@24
@"NSData"
@"NSDate"
@"NSNumber"
Q24@0:8^@16
@"AVTArchiverBasedStoreRoot"
@"NSDictionary"
v32@0:8@16@24
v32@0:8@"<AVTStoreBackend>"16@"NSArray"24
v28@0:8@16B24
@"<AVTPBackendImageHandlingDelegate>"
@"<AVTStoreBackend>"
@"AVTPuppetStore"
@"<AVTStickerBackend>"
v24@0:8Q16
@"<AVTStickerBackendDelegate>"
@"NSUserDefaults"
@48@0:8q16@24@32q40
B48@0:8@16@24@32^@40
@32@0:8d16d24
B40@0:8@16@?24^@32
B40@0:8@"NSURL"16@?<B@?@"NSArray">24^@32
@48@0:8@16@24@?32^@40
q24@0:8q16
B40@0:8@"<AVTStoreBackendMigratableSource>"16@"<AVTStoreBackend>"24^@32
@48@0:8@16@24@32^@40
@"NSPersistentStoreCoordinator"16@0:8
@"NSManagedObjectContext"16@0:8
@"NSPersistentStoreDescription"16@0:8
@"NSPersistentContainer"
@"<AVTAvatarsDaemon>"
@"NSArray"16@0:8
@"NSXPCStoreServer"24@0:8^@16
@"<AVTStoreBackendMigratableSource>"16@0:8
v32@0:8@"NSObject<OS_dispatch_queue>"16@?<v@?B@"NSError">24
@36@0:8@16B24@28
B32@0:8^@16@24
@"NSPersistentStoreCoordinator"
@"NSPersistentStoreDescription"
@"NSUUID"24@0:8@"NSString"16
@"NSString"24@0:8@"NSUUID"16
v32@0:8@"AVTAvatarManagedRecord"16@"AVTAvatarRecord"24
@"AVTAvatarRecord"32@0:8@"AVTAvatarManagedRecord"16^@24
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"<AVTAvatarsDaemonServerDelegate>"16@0:8
v24@0:8@"<AVTAvatarsDaemonServerDelegate>"16
@"<AVTAvatarsDaemonServerDelegate>"
@"NSXPCListener"
@"<AVTAvatarRecord>"
v40@0:8@16{CGSize=dd}24
v32@0:8Q16q24
v32@0:8@16Q24
v32@0:8@16q24
v40@0:8@16@24q32
v32@0:8Q16Q24
v40@0:8@16Q24Q32
v32@0:8Q16@24
v40@0:8Q16{CGSize=dd}24
v28@0:8B16@20
v32@0:8q16@24
v40@0:8@16@24@32
v40@0:8@16Q24@32
v40@0:8@16q24@32
v24@0:8d16
v20@0:8i16
v28@0:8@16i24
v24@0:8*16
v36@0:8@16q24B32
v32@0:8q16q24
v40@0:8@16{CGPoint=dd}24
v32@0:8d16B24B28
v24@0:8q16
v24@0:8@"NSString"16
v40@0:8@"NSString"16{CGSize=dd}24
v32@0:8@"NSString"16@"NSString"24
v24@0:8@?<v@?@?<v@?>>16
v32@0:8@"NSString"16Q24
v32@0:8@"NSString"16q24
v40@0:8@"NSString"16@"NSString"24q32
v40@0:8@"NSString"16Q24Q32
v32@0:8Q16@"NSString"24
v28@0:8B16@"NSString"20
v32@0:8q16@"NSString"24
v40@0:8@"NSString"16@"NSString"24@"NSString"32
v40@0:8@"NSString"16Q24@"NSString"32
v40@0:8@"NSString"16q24@"NSString"32
v24@0:8@"NSArray"16
v28@0:8@"NSString"16i24
v36@0:8@"NSString"16q24B32
v24@0:8@"NSError"16
v40@0:8@"NSString"16{CGPoint=dd}24
v24@0:8@"NSIndexPath"16
@"NSObject<OS_os_log>"
B24@0:8Q16
v24@0:8@"<AVTPushNotificationsSupport>"16
v32@0:8@"<AVTCoreDataCloudKitMirroringHandler>"16Q24
v24@0:8@"<AVTAvatarsDaemonServer>"16
@128@0:8@16@24@?32@40@48@56@64@72@80@88@96@104@112@120
v32@0:8@?16@?24
v28@0:8B16@?20
B24@0:8@?16
v36@0:8@16B24@?28
@"<AVTCoreDataPersistentStoreLocalConfiguration>"
@"NSXPCStoreServer"
@"<AVTPushNotificationsSupport>"
@"<AVTCoreDataCloudKitMirroringHandler>"
@"<AVTSyncSchedulingAuthority>"
@"AVTStickerChangeObserver"
@"<AVTAvatarsDaemonServer>"
@"<AVTCoreDataStoreMaintenance>"
v48@0:8@16@24@32@40
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
@"<AVTPushNotificationsSupportDelegate>"16@0:8
v24@0:8@"<AVTPushNotificationsSupportDelegate>"16
@"<AVTPushNotificationsSupportDelegate>"
@"APSConnection"
@"AVTPushNotificationsConnectionFactory"
@(#)PROGRAM:AvatarPersistence  PROJECT:Animoji-1
333333
?333333
?333333
?333333
Coalescer already received an eventHandler
Coalescer did not receive an eventHandler
v8@?0
com.apple.AvatarUI.AVTCoreDataStoreBackend.changesObserverQueue
self in %@
v24@?0@"NSManagedObjectContext"8@"NSArray"16
v16@?0@"NSManagedObjectContext"8
@"NSUUID"16@?0@"AVTAvatarRecord"8
%K IN %@
@"NSUUID"16@?0@"AVTAvatarManagedRecord"8
%K == %@
%K > %@ AND %K < %@
%K in %@
NOT (%K in %@)
AVTAvatarStoreDomainMessages
AVTAvatarStoreDomainFunCam
AVTAvatarStoreDomainFaceTime
AVTAvatarStoreDomainInternal
Unexpected object class for %@
Unexpected object protocol for %@
v16@?0@"NSNotification"8
v16@?0@"NSPointerArray"8
v16@?0@"<AVTAvatarRecordDataSourceObserver>"8
v16@?0@"NSMutableArray"8
Index %lu out of datasource %p bounds, count: %lu
B32@?0@"<AVTAvatarRecord>"8Q16^B24
v16@?0@"AVTAvatarRecord"8
v16@?0@"AVTAvatarPuppetRecord"8
Can't decode memoji! Error: %@
B32@?0@"AVTAvatarPuppetRecord"8Q16^B24
 criteria:%ld limit:%ld ari:%@ sci:%@
com.apple.AvatarUI.AVTCoreDataStoreMaintenance.workQueue
StoreMaintenanceObservedChange
v16@?0@?<v@?>8
v32@?0@"NSUUID"8@"NSArray"16^B24
count
count:
%@ > 1
@"NSUUID"16@?0@"NSDictionary"8
Got nil transformed object for %@
v32@?0@8@"<NSCopying>"16^B24
Nil key provided for %@
Already have an object for %@
@"NSXPCConnection"8@?0
com.apple.avatar.support
v16@?0@"NSError"8
v16@?0@"NSXPCConnection"8
v16@?0@"<AVTAvatarsDaemon>"8
Already observing notifications
Export already in flight, try again later
v16@?0@"NSCloudKitMirroringResult"8
Disabled mirroring handler!
identifier
Add handler before starting to observe!
NSPersistentStoreRemoteChangeNotification
v32@?0@?<v@?@"NSManagedObjectContext"@"NSArray">8Q16^B24
Already observing!
com.apple.AvatarUI.AVTCoreDataRemoteChangesObserver.RemoteNotification
v12@?0B8
 object:%@
B16@?0@"NSPersistentHistoryChange"8
v24@?0@"NSPropertyDescription"8^B16
B24@?0@"NSArray"8@"NSString"16
B16@?0@"NSArray"8
@"NSObject<OS_dispatch_queue>"16@?0r*8
SIMULATOR_SHARED_RESOURCES_DIRECTORY
Library/Avatar
Images
Animoji
Stickers
Can't get image cache location %@
com.apple.avatar.activity.PostInstallMigration
com.apple.avatar.activity.UserRequestedBackup
domainIdentifier
primaryAvatarIdentifier
AVTAvatarUIShowAssetsWarning
AVTAvatarUIShowPerfHUD
AVTAvatarUIEditorShowAssetsName
AVTAvatarUILastCacheVersion
AVTAvatarUIThumbnailCaching
AVTAvatarUIFlushThumbnailCache
AVTAvatarShowTrackingLostReticle
AVTUIGlobalPreferencesMemojiClassicDisclosureWarning
AVTAvatarUseLocalEditorModel
AVTAvatarHasDisplayedSplashScreen
AVTAvatarHasDisplayedAnimojiSplashScreen
AVTAvatarHasDisplayedCameraEffectsSplashScreen
AVTAvatarHasDisplayedCameraDisclosureSplashScreen
AVTAvatarHasDisplayedAnimojiCameraDisclosureSplashScreen
AVTAvatarHasDisplayedCameraEffectsCameraDisclosureSplashScreen
AVTAvatarAlwaysShowSplashScreen
AVTAvatarForceCameraDisclosures
AVTAvatarHasDisplayedPaddleView
AVTAvatarAlwaysShowPaddleView
AVTUIGlobalPreferencesHasDisplayedCategoriesDiscoverability
AVTUIGlobalPreferencesDisableDeleteConfirmation
AVTUIGlobalPreferencesDisablEditAfterDuplicate
AVTUIGlobalPreferencesGroupDialUsesMasking
AVTAvatarPreLoadOnLaunch
AVTAdaptativeFrameRate
AVTAvatarUIWipeCloudKitContainer
AVTAvatarUIUseTestCloudKitContainer
AVTAvatarUIWipeDatabase
AVTSyncEnabled
AVTUIEditorGroupName
AVTSyncImportDate
AVTUISyncExportRequired
AVTUISyncPreserveContentOnAccountChange
AVTUIRestrictMaxAvatarCount
AVTUIGlobalPreferencesStickersLastSelected
AVTUIGlobalPreferencesStickersDisclosureWarning
AVTUIGlobalPreferencesStickerRecentsDisclosureWarning
AVTUIGlobalPreferencesStickersCaching
AVTUIGlobalPreferencesFlushStickersCache
AVTUIGlobalPreferencesShowPrereleaseStickerPack
AVTUIGlobalPreferencesShowPrereleaseStickerLabel
AVTUIGlobalPreferencesStickersHEICSSequence
com.apple.Animoji.StickerRecents.SplashVersion
AVTUIGlobalPreferencesAlwaysShowStickerRecentsSplashScreen
AVTUIGlobalPreferencesForceNoMemojiStickerRecentsSplashScreen
AVTUIGlobalPreferencesStickerRecentsMigrationVersion
com.apple.AvatarUI.Staryu
SBIconVisibility
.GlobalPreferences
domains
records
v24@?0@"NSArray"8@"NSError"16
v20@?0B8@"NSError"12
v28@?0B8@"<AVTAvatarRecord>"12@"NSError"20
AVTAvatarUIErrorDomain
AVTAvatarUIMultipleErrorsKey
B32@?0@"AVTAvatarRecord"8Q16^B24
avatarData
orderDate
avatarDataString
B32@?0@"AVTStickerRecord"8Q16^B24
avatarRecordIdentifier
stickerConfigurationIdentifier
frequencySum
serializationVersion
 identifer:%@ ari:%@ sci:%@ frequencySum:%ld version:%ld
B32@?0@"AVTArchiverBasedDomain"8Q16^B24
v24@?0Q8^B16
AVTAvatarStoreDidChangeNotification
changedRecordIDs
com.apple.AvatarUI.AVTAvatarStore.backendAcccessQueue
com.apple.AvatarUI.AVTAvatarStore.workQueue
com.apple.AvatarUI.AVTAvatarStore.puppetStoreAccessQueue
Running as setup user
v16@?0@"<AVTStoreBackend>"8
v16@?0@"AVTPuppetStore"8
@"AVTAvatarRecord"16@?0@"NSString"8
AVTTypeMismatchException
com.apple.animoji
AVTRecentStickers
AVTStickersArray
AVTFrequencyCounter
AVTRecentStickerChangedExternallyNotification
avatars.db
avatars.version
Version object is not of expected class
backendVersion
avatarKitVersion
 backend:%2.2f avatarKit:%2.2f
currentHistoryToken
Got a nil NSPersistentHistoryResult, but no error filled in
 type:%ld identifier:%@
@"NSString"16@?0@"AVTAvatarRecord"8
AVTCoreDataContainer
movedaside
AvatarUIClient
com.apple.avatar.service
v24@?0@"NSPersistentStoreDescription"8@"NSError"16
CoreDataBackend
B24@?0^{__CFString=}8^@16
v24@?0@"NSNumber"8@"NSError"16
Record has a nil identifier
@"NSString"16@?0@"<AVTAvatarRecordChange>"8
isPuppet
avatarRecord
com.apple.avatar.AvatarUI
General
UserInteraction
Backend
com.apple.AvatarUI.AVTCoreDataStoreServer.backgroundQueue
@"<AVTStoreBackendMigrator>"8@?0
com.apple.AvatarUI.AVTCoreDataStoreServer.stickerBackend
@"NSManagedObjectContext"8@?0
Cancelling due to running as Setup User
Completed Internal Settings changes
v16@?0@?<v@?q>8
com.apple.AvatarUI.AVTCoreDataServer.setup
com.apple.AvatarUI.AVTCoreDataServer.backupStatus
com.apple.AvatarUI.AVTCoreDataServer.migration
com.apple.AvatarUI.AVTCoreDataServer.import
com.apple.AvatarUI.AVTCoreDataServer.Maintenance
com.apple.AvatarUI.AVTCoreDataServer.export
com.apple.AvatarUI.AVTCoreDataServer.updateThumbnails
com.apple.AvatarUI.AVTCoreDataServer.deleteStickerRecents
com.apple.AvatarUI.AVTCoreDataServer.pushNotification
com.apple.AvatarUI.AVTCoreDataServer.didResetSync
com.apple.AvatarUI.AVTCoreDataServer.ClientCheckin
com.apple.AvatarUI.AVTPushNotificationSupport.connectionQueue
com.apple.aps.avatar.service
Unable to create an APSConnection
v24@?0@"NSString"8@"NSError"16
com.apple.avatarsd
com.apple.icloud-container.
Avatar
com.apple.Avatars
iCloud.com.apple.AvatarUI.Staryu
v24@?0@"CKAccountInfo"8@"NSError"16
com.apple.MobileSMS
[AVTUIDEBUG] %@
Error loading templates %@
Parsing metadata definitions
Error parsing metadata definitions %@
Rendering model color %@
Rendering model preset %@
Rendering configuration %@
RenderSnapshot
Rendering record %@, at size %2.2fx%2.2f
Snapshot returned %@
No avatar preset for %@
Creating AVTAvatarStore instance %@
Creating empty database at path %@
Creating Folder at path %@
Error creating folder or empty data %@
Saving backend
Deleting record with identifier %@
Deleting images with identifier prefix %@
Duplicating record with identifier %@
Reading backend at %@
Error while saving backend %@
Error while reading backend %@
Record not found in any store (%@)
Puppet(s) not found (%@)
Avatar Record(s) not found (%@)
Error saving recent stickers (%@)
Error fetching recent stickers (%@)
Error fetched an unusable recent sticker (%@)
Error can't find sticker for a recent sticker (%@). Forcing migration
Performed sticker recents migration, found orphaned: %{public}d
SavingRecords
DeletingRecords
FetchingRecords
DuplicatingRecords
Fetched %lu record(s), criteria: %ld
Skipped fetching records: %@
Detected a version mismatch, found %{public}@, current is %{public}@
Avatar record has a version lower than what AvatarKit supports, dropping. %@
Exiting avatarsd for reason: %@
Error updating version %@
Error migrating backend %@
Did finish editing avatar successfully
Error when finishing editing %@
File system error: %@
Creating image store at path %@
Image Store Cache miss: %@
Image Store Cache HIT for %@, size %lu
Image Store failed to save with error: %@, code %ld
SavingImage
Image Store saved image at path %@
[InMemCache] Storage for %@
[InMemCache] HIT for %@
[InMemCache] Evicting object %@
Generating image for record %@, with scope %@, type %ld
Error generating image: %@
Error deleting thumbnails for identifier %@, %@
Error deleting Some thumbnails: %@
Error duplicating thumbnails for identifier %@, %@
Error fetching records %@
[PreLoading] Needed - %lu|%lu
[PreLoading] %@ requested - %lu|%lu
[PreLoading] %@ starts
[PreLoading] %@ CANCELED!
[PreLoading] %@ looking up %@
[PreLoading] %@ loading %@
PreLoadingPreset
[PreLoading] %@ Got thumbnail
Updating live avatar with %@
Requesting thumbnail for %@|%lu
Throttling AVTView
Unthrottling AVTView
Error snapshotting the AVTView: %{public}@
Carousel snapshot for record at index %lu, size %2.2fx%2.2f
-[AVTAvatar preloadAvatar:] identifier %@
AvatarPreLoad
Can't generate a AVTView snapshot, no window present
We have %ld memoji(s)
Clusters of record with small differences: %ld
Clusters of record with big differences: %ld
Starting up server
SettingUpStore
ExportingRecords
ImportingRecords
XPCActivityPostInstallMigration
Finished running migration XPC activity!
XPCActivityUserRequestedBackup
Finished running User Requested Backup XPC activity!
Sync is ENABLED
CloudKit Import Request FAILED, error %@
CloudKit Import Request SUCCEEDED
CloudKit Export Request FAILED, error %@
CloudKit Export Request SUCCEEDED
Mirroring request failed with error (%ld) %@
Migration
Migrating source %@
Error updating records for migration: %@
Found existing record during migration with identifier %@
Error deleting migrated content: %@
Found an existing record with same identifier during migration!
Error adding persistent store: %@
Error starting server! %@
Error setting up store: %@
Received public token %@
Received per-topic push token %@ for topic %@ identifier %@
Received Push Notification for topic: %@, payload: %@
Unable to create Push Connection! %@
ProcessingRemoteChanges
Start observing NSPersistentStoreRemoteChangeNotification from %@
Received NSPersistentStoreRemoteChangeNotification: %@
Dispatching NSPersistentStoreRemoteChangeNotification with %lu transactions; %lu handlers listening
Error fetching change history: %@
notification.userInfo doesn't contain a value for NSPersistentHistoryTokenKey
Changes require export!
Changes require thumbnail update!
Error pinning context to current query generation token: %@
Inspecting changes after token: %@
Unable to read remote record! %@
SavingChangeTrackerToken
Current history token file doesn't exist at path %@
Error reading current history token %@
Author %@ is processing %lu changes: %@
Transaction has changes but nil token! Can't process those changes.
Unable to save change token: %@, location %@
Found record identifier %@ for change type %ld, managedObjectID %@
Did NOT find record identifier for change type %ld, managedObjectID %@ - could be processing ancient history.
DeletingStickerRecentsForRemoteChanges
Deleting sticker recents for sync
UpdatingThumbnailsForRemoteChanges
Error processing change transactions to update thumbnails: %@
Checking if migration needed
Updating thumbnails if needed
Scheduling import of records
Scheduling thumbnail update
WILL RESET CLOUDKIT ZONE!
Did reset CloudKit zone with success %d, error %@
Will tear down CoreData stack for path %@
Error tearing down CoreData stack
Error removing store folder
AVTAvatarStoreDidChangeNotification
Posting change notification for %lu record id(s) %@
Not importing on launch, still remains %02luh %02lum %02lus
failed to configure sandbox storage for avatarsd: %{darwin.errno}d
failed to %{public}@: %{darwin.errno}d
failed to enter sandbox: %{public}s
$HOME not set, falling back to using getpwuid
WillResetSync
DidResetSync
CopyingStorageAside
RestoringStorage
Starting to observe NSCloudKitMirroringDelegateWillResetSyncNotificationName / NSCloudKitMirroringDelegateDidResetSyncNotificationName
Got a notification but no NSCloudKitMirroringDelegateResetSyncReasonKey!
Got a change with a tombstone missing identifier!
Got a change that didn't seem interesting: %@
Reset Sync reason: %lu
Error copying storage aside: %@
Error merging copied aside content: %@
Setup - will check if migration is needed
Setup - scheduling import
Setup - scheduling export
Coalescable event occured: %{public}@
Error getting changed records, %@ for identifiers %@
Too many avatars! (%lu/%lu). %lu won't display.
CheckingAccount
Got account info! HSA2: %d, status: %ld, description: %@
Error getting account info %@
Error migrating backup inclusion status: %@
Error updating backup inclusion status: %@
Will NOT include database in backup.
Will include database in backup.
Accepting incoming connection on side channel
CheckIn from client with pid %d
Connection to avatarsd INTERRUPTED!
Connection to avatarsd invalidated
Error getting proxy to avatarsd: %@
Cant get a proxy to avatarsd! Work won't be performed.
CheckingIn
RunningStoreMaintenance
Error mitigating duplicates %@
Store maintenance completed!
Discovered %lu group(s) of duplicates: %@
Fixing duplicate with identifier %@ to have identifier %@
Sticker Generator Pool has to steal a generator in Use, %ld in use, %ld max
PaddleView Video Player failed with error %@; restarting videos
Rendering sticker %@ for record %@
RenderSticker
StickerViewController preparing for snapshot for bounds %@ offset %f
[StickerTaskScheduler] Added task: %@, task count: %ld
[StickerTaskScheduler] Started task: %@, scheduler rule: %@
[StickerTaskScheduler] Cancelled task: %@
[StickerTaskScheduler] Cancelled sticker sheet tasks for identifier: %@
[StickerTaskScheduler] Cancelled all tasks
[AVTBodyCarousel] bodyPoseCell is nil or unexpected type at indexPath %@
Nil image returned from AVTUIStickerRenderer
Nil image returned from _AVTAvatarRecordImageProvider
Carousel changing to single avatar mode
Carousel changing to multi avatar mode
Carousel changes center item to:%@
Carousel transtioning center item:%@, center cell:%@
Carousel stops focusing on center item:%@, center cell:%@
Single mode controller STARTS using liveView: %@
Single mode controller STOPS using liveView: %@
[AVTTransition:%@] Carousel Cell STARTS using liveView, cell:%@
[AVTTransition:%@] Carousel Cell STOPS using liveView, cell:%@
[AVTTransition:%@] -> Carousel adds transition to coordinator
[AVTTransition:%@] -> starts, state: %ld
[AVTTransition:%@] -> Setup done, state: %ld, finished %@
[AVTTransition:%@] -> Perform
[AVTTransition:%@] -> CANCEL!
[AVTTransition:%@] -> reached stage %lu, state: %lu
ToLive
[AVTView] Set avatar: %@
AVTViewSetAvatar
[AVTView] Did render avatar: %@, current avatar %@, match %@
Did not get a valid frame for element at index %ld
[Delegate] Did Focus on record %@
[Delegate] Will End Focus on record %@
[Delegate] Did Move (%2.2lf) Toward record %d, editable %d
[Delegate] Did Update with record %@
Carousel ends dragging with velocity:%2.2lf, switch instead of scroll back: %d, switch for high velocity: %d
Setup User has no Memoji data to import
Setup User data import failed to unarchive data at path: %@, error: %@
Setup User import attempting to save %ld records
Setup User data import failed to save avatar records, error: %@
Setup - checking for Setup User data to import
Setup User data import failed to remove draft data file
AVTEventCoalescer
AVTPassthroughEventCoalescer
AVTCoreDataStoreBackend
AVTStoreBackend
NSObject
AVTAvatarStoreInternal
AVTAvatarStore
AVTStickerBackend
AVTPAvatarRecordDataSource
AVTAvatarStoreDelegate
AVTAvatarRecordDataSourceInternal
AVTAvatarRecordDataSource
Convenience
AVTAvatarRecordInternal
AVTAvatarRecord
NSSecureCoding
NSCoding
NSCopying
AVTAvatarRecordRendering
AVTPuppetStore
AVTStickerFetchRequest
AVTCoreDataStoreMaintenance
AvatarUI
AVTAvatarsDaemonClient
AVTAvatarsDaemon
AVTCoreDataCloudKitMirroringHandler
AVTDisabledMirroringHandler
AVTAvatarPuppetRecord
AVTCoreDataRemoteChangesObserver
AVTCoreEnvironment
AVTBackgroundActivitySchedulerFactory
AVTArchiverBasedDomain
AVTArchiverBasedStoreRoot
AVTAvatarRecordSerializer
AVTBlockScheduler
AVTObservableAvatarStore
AVTArchiverBasedStoreMigratableSource
AVTStoreBackendMigratableSource
AVTError
AVTStickerRecord
AVTArchiverBasedStoreBackend
AVTAvatarStoreNotification
AVTPAvatarStore
AVTStoreBackendDelegate
AVTAvatarStoreServer
AVTStickerUserDefaultsBackend
AVTAvatarFetchRequest
AVTArchiverBasedStorePersistence
AVTBackendVersion
AVTCoreDataChangeTracker
AVTAvatarRecordChangeTracker
AVTCoreDataChangeTrackerChange
AVTAvatarRecordChange
AVTStoreBackendMigrator
AVTSyncSchedulingAuthority
AVTCoreDataPersistentStoreConfiguration
_AVTCoreDataPersistentStoreRemoteConfiguration
_AVTCoreDataPersistentStoreLocalConfiguration
AVTCoreDataPersistentStoreLocalConfiguration
AVTAvatarManagedRecordTransformer
AVTStickerChangeObserver
AVTAvatarsDaemonServer
NSXPCListenerDelegate
AVTSerializedAvatarRecord
AVTUILogger
AVTStubbedStoreBackend
AVTCoreDataStoreServer
AVTPushNotificationsSupportDelegate
AVTCoreDataCloudKitMirroringHandlerDelegate
AVTAvatarsDaemonServerDelegate
AVTPushNotificationsSupport
APSConnectionDelegate
AVTPushNotificationsConnectionFactory
AVTAvatarManagedRecord
AVTSideCoreDataStoreMigratableSource
AVTCoreDataCloudKitMirroringConfiguration
init
eventHandler
raise:format:
setEventLabel:
setEventHandler:
logger
eventLabel
logCoalesceableEventOccured:
workQueue
eventDeliveryScheduled
setEventDeliveryScheduled:
delay
registerEventForCoalescingWithLabel:handler:
eventDidOccur:
initWithDelay:queue:logger:
.cxx_destruct
_eventDeliveryScheduled
_eventHandler
_eventLabel
_logger
_workQueue
_delay
T@?,C,N,V_eventHandler
T@"NSString",C,N,V_eventLabel
T@"<AVTUILogger>",R,N,V_logger
T@"NSObject<OS_dispatch_queue>",R,N,V_workQueue
Td,R,N,V_delay
TB,N,V_eventDeliveryScheduled
setHandler:
handler
_handler
T@?,C,N,V_handler
serialQueueProvider
initWithConfiguration:workQueue:coalescer:environment:
initWithConfiguration:recordTransformer:environment:
processInfo
processName
initWithConfiguration:recordTransformer:remoteChangesObserver:localProcessName:recordChangeTracker:environment:
configuration
createManagedObjectContext
newManagedObjectContext
performBlockAndWait:
setupIfNeeded:
startObservingChangesIfNeeded
fetchRequestWithEntityName:
setResultType:
arrayWithObjects:count:
setPropertiesToFetch:
predicateWithFormat:
setPredicate:
executeFetchRequest:error:
array
countByEnumeratingWithState:objects:count:
objectForKeyedSubscript:
bytes
initWithUUIDBytes:
recordTransformer
identifierForManagedRecordIdentifier:
addObject:
localProcessName
processID
isEqual:
changes
changeType
tombstone
logMissingTombstonedIdentifier
changedObjectID
description
logPersistentChangeNotOfInterest:
copy
remoteChangesObserver
isObservingChanges
getChangedObjectIDsOfInterest:deletedIdentifiers:forTransactions:
count
recordIdentifiersForManagedObjectIDs:managedObjectContext:error:
logErrorGettingChangedRecordsContentForIdentifiers:error:
arrayByAddingObjectsFromArray:
contentDidChangeWithIdentifiers:
addChangesHandler:
startObservingChanges
criteria
fetchRequestCriteriaSupported:
setupStoreIfNeeded:
cdFetchRequestForAvatarFetchRequest:recordTransformer:
maximumNumberOfFetchableAvatars
logTooManyAvatars:limit:
subarrayWithRange:
recordWithManagedRecord:error:
logUnableToReadRemoteRecord:
performWorkWithManagedObjectContext:
errorWithCode:userInfo:
saveAvatars:error:
identifier
managedRecordIdentifierForIdentifier:
avt_map:
cdFetchRequestWithPredicate:fetchLimit:
_avtui_dictionaryByIndexingObjectsInArray:by:
nts_avatarCountWithManagedObjectContext:error:
maximumNumberOfSavableAvatars
insertNewObjectForEntityForName:inManagedObjectContext:
updateManagedRecord:withRecord:
nts_saveManagedObjectContext:error:
save:
initWithFetchRequest:
executeRequest:error:
result
boolValue
orderDate
dateByAddingTimeInterval:
firstObject
timeIntervalSinceDate:
avatarData
initWithAvatarData:orderDate:
countForFetchRequest:error:
backendDelegate
backend:didChangeRecordsWithIdentifiers:
setReturnsObjectsAsFaults:
setFetchLimit:
sortDescriptorWithKey:ascending:
setSortDescriptors:
identifiers
objectAtIndexedSubscript:
arrayWithCapacity:
excludingIdentifiers
fetchLimit
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
avatarsForFetchRequest:error:
saveAvatar:error:
deleteAvatarWithIdentifier:error:
duplicateAvatarRecord:error:
canCreateAvatarWithError:
setBackendDelegate:
recordChangeTracker
T@"<AVTStoreBackendDelegate>",W,N
T@"<AVTAvatarRecordChangeTracker>",R,N
initWithConfiguration:environment:
_recordChangeTracker
_configuration
_recordTransformer
_remoteChangesObserver
_localProcessName
T@"<AVTCoreDataPersistentStoreConfiguration>",R,N,V_configuration
T@"<AVTAvatarManagedRecordTransformer>",R,N,V_recordTransformer
T@"<AVTCoreDataRemoteChangesObserver>",R,N,V_remoteChangesObserver
T@"NSString",R,N,V_localProcessName
T@"<AVTStoreBackendDelegate>",W,N,VbackendDelegate
T@"<AVTAvatarRecordChangeTracker>",R,N,V_recordChangeTracker
isEditable
insertObject:atIndex:
compare:
defaultEnvironment
initWithRecordStore:fetchRequest:environment:
canCreateAvatar
fetchAvatarsForFetchRequest:completionHandler:
saveAvatarRecord:thumbnailAvatar:completionBlock:thumbnailGenerationCompletionBlock:
deleteAvatar:completionHandler:
duplicateAvatar:completionBlock:
deleteAvatarWithIdentifier:completionBlock:
recentStickersForFetchRequest:error:
didUseStickerWithAvatarIdentifier:stickerIdentifier:completionHandler:
deleteRecentStickersWithAvatarIdentifier:stickerIdentifier:completionHandler:
deleteRecentStickersForChangeTracker:completionHandler:
stickerBackendDelegate
setStickerBackendDelegate:
T@"<AVTStickerBackendDelegate>",W,N
initWithRecordStore:fetchRequest:callbackQueue:environment:
notificationCenter
initWithRecordStore:fetchRequest:callbackQueue:logger:notificationCenter:
initWithStore:callbackQueue:
setDelegate:
weakObjectsPointerArray
setNts_recordStorage:
nts_changeNotificationObserver
removeObserver:
dealloc
callbackQueue
nts_recordStorage
avatarStoreDidChange:
addObserverForName:object:queue:usingBlock:
setNts_changeNotificationObserver:
areRecordsLoaded
backingStore
fetchRequest
loadRecordsWithStore:request:logger:
mutableCopy
nts_observers
compact
addPointer:
performObserversWork:
insertPointer:atIndex:
allObjects
indexOfObject:
removePointerAtIndex:
logReadingError:
sortedRecordsEditableFirstReverseOrder:
object
underlyingStore
significantRecordChangeInDataSource:
enumerateObserversRespondingToSelector:withBlock:
performSyncWorkWithRecords:
internalRecordStore
indexesOfObjectsPassingTest:
indexOfObjectPassingTest:
indexesOfRecordsPassingTest:
indexForInsertingRecord:inRecords:
replaceObjectAtIndex:withObject:
dataSource:didAddRecord:atIndex:
dataSource:didEditRecord:atIndex:
isEqualToString:
objectAtIndex:
removeObjectAtIndex:
dataSource:didRemoveRecord:atIndex:
indexForInsertingDuplicateRecord:original:inRecords:
store:didSaveAvatar:postCompletionHandler:
store:didDeleteAvatarWithIdentifier:postCompletionHandler:
store:didCreateDuplicateAvatar:forOriginal:postCompletionHandler:
numberOfRecords
recordAtIndex:
recordStore
indexOfRecordPassingTest:
indexSetForEditableRecords
initWithRecordStore:fetchRequest:
flushRecordsForEnteringBackground
addObserver:
addPriorityObserver:
didRecieveAvatarChangeDistributedNotification:
_callbackQueue
_underlyingStore
_backingStore
_fetchRequest
_nts_recordStorage
_notificationCenter
_nts_observers
_nts_changeNotificationObserver
T@"NSObject<OS_dispatch_queue>",R,N,V_callbackQueue
T@"AVTPAvatarStore",R,N,V_underlyingStore
T@"AVTObservableAvatarStore",R,N,V_backingStore
T@"AVTAvatarFetchRequest",R,N,V_fetchRequest
T@"NSMutableArray",&,N,V_nts_recordStorage
T@"NSNotificationCenter",R,N,V_notificationCenter
T@"NSPointerArray",R,N,V_nts_observers
T@"<NSObject>",&,N,V_nts_changeNotificationObserver
requestForAllAvatars
defaultUIDataSourceWithDomainIdentifier:
avatarForRecord:usageIntent:
memojiForRecord:usageIntent:
puppetName
animojiNamed:
_castRecord:andDoRecordHandlingBlock:puppetHandlingBlock:
avatarWithDataRepresentation:usageIntent:error:
T@"NSString",R,C,N
editable
TB,R,N,GisEditable
encodeWithCoder:
initWithCoder:
supportsSecureCoding
TB,R
copyWithZone:
isPuppet
puppet
TB,R,N,GisPuppet
preloadAvatarsWithIdentifiers:store:environment:completionHandler:
preloadAllAvatarsWithStore:environment:completionHandler:
requestForAvatarWithIdentifier:
preloadAvatarsWithFetchRequests:store:environment:completionHandler:
backgroundQueue
logErrorFetchingRecords:
avatarForRecord:
logAvatarPreloadBeginForIdentifier:
preloadAvatar:
logAvatarPreloadEnd
memojiForRecord:
preloadAvatarsWithIdentifiers:store:completionHandler:
preloadAllAvatarsWithStore:completionHandler:
loadPuppetRecordsIfNeeded
puppetRecords
createPuppetRecords
setPuppetRecords:
animojiNames
initWithPuppetName:
allAvatarPuppetsWithError:
avatarsWithIdentifiers:error:
allAvatarPuppetsExcluding:error:
matchingIdentifierTest:
objectsAtIndexes:
initWithEnvironment:
allPuppetRecords
avatarPuppetsForFetchRequest:error:
_puppetRecords
T@"NSArray",C,N,V_puppetRecords
initWithCriteria:
initWithCriteria:resultLimit:
initWithCriteria:avatarIdentifier:stickerIdentifier:
resultLimit
avatarIdentifier
stickerIdentifier
appendFormat:
requestForAllRecentStickers
requestForMostRecentStickersWithResultLimit:
requestForStickersWithAvatarIdentifier:stickerIdentifier:
_resultLimit
_avatarIdentifier
_stickerIdentifier
_criteria
Tq,R,N,V_resultLimit
T@"NSString",R,C,N,V_avatarIdentifier
T@"NSString",R,C,N,V_stickerIdentifier
Tq,R,N,V_criteria
initWithWorkQueue:managedObjectContextFactory:eventCoalescer:logger:
runMaintenanceTasks
eventCoalescer
mocFactory
currentQueryGenerationToken
setQueryGenerationFromToken:error:
logErrorPinningContextToCurrentQueryGenerationToken:
mitigateDuplicatesWithManagedObjectContext:error:
logErrorMitigatingDuplicates:
logMaintenanceCompleted
runningMaintenance:
duplicatedIdentifiersInManagedObjectContext:error:
fetchDuplicatedRecordsForIdentifiers:managedObjectContext:error:
fixDuplicateRecordIdentifiers:managedObjectContext:error:
UUID
setIdentifier:
UUIDString
logDeduplicateRecordWithIdentifier:toNewRecordWithIdentifier:
enumerateKeysAndObjectsUsingBlock:
dictionary
setObject:forKeyedSubscript:
expressionForKeyPath:
setName:
expressionForFunction:arguments:
setExpression:
setExpressionResultType:
setPropertiesToGroupBy:
expressionForVariable:
setHavingPredicate:
logDiscoveredDuplicates:count:
storeDidChange
initWithEnvironment:managedObjectContextFactory:
_eventCoalescer
_mocFactory
T@"<AVTEventCoalescer>",R,N,V_eventCoalescer
T@?,R,C,N,V_mocFactory
stringByReplacingOccurrencesOfString:withString:
arrayWithArray:
avt_description
avt_firstObjectPassingTest:
_avtui_deepCopy
initWithMachServiceName:options:
initWithConnectionFactory:logger:
connectionFactory
logAvatarsDaemonClientConnectionInterrupted
setInterruptionHandler:
logAvatarsDaemonClientConnectionInvalidated
setInvalidationHandler:
xpcInterface
setRemoteObjectInterface:
resume
invalidate
logErrorGettingAvatarsDaemonClientProxy:
synchronousRemoteObjectProxyWithErrorHandler:
performWorkWithConnection:
checkIn
performWorkWithSynchronousProxy:
checkingIn:
initWithLogger:
_connectionFactory
T@?,R,C,N,V_connectionFactory
willResetNotificationToken
didResetNotificationToken
logStartObservingResetSync
setNotificationCenter:
willResetSync:
setWillResetNotificationToken:
didResetSync:
setDidResetNotificationToken:
userInfo
unsignedIntegerValue
logMissingResetSyncReasonKey
logResetSyncReason:
delegate
mirroringHandler:willResetSyncWithReason:
processingWillResetSyncNotification:
mirroringHandler:didResetSyncWithReason:
processingDidResetSyncNotification:
blockScheduler
exportInFlight
dictionaryWithObjects:forKeys:count:
setExportInFlight:
exportChangesWithManagedObjectContext:discretionary:workQueue:completionHandler:
performBlock:afterDelay:onQueue:
success
error
logImportRequestResult:error:
initWithOptions:completionBlock:
options
configureMirroringRequestOptions:discretionary:
code
logMirroringRequestErrorWithCode:description:
importingRecords:
logExportRequestResult:error:
exportingRecords:
configureMirroringRequestOptions:
startObservingResetSyncWithNotificationCenter:
scheduleExportChangesWithManagedObjectContext:discretionary:workQueue:completionHandler:
importChangesWithManagedObjectContext:discretionary:workQueue:completionHandler:
resetZoneWithManagedObjectContext:completionHandler:
T@"<AVTCoreDataCloudKitMirroringHandlerDelegate>",W,N
initWithLogger:blockScheduler:
_exportInFlight
_delegate
_blockScheduler
_willResetNotificationToken
_didResetNotificationToken
T@"<AVTBlockScheduler>",R,N,V_blockScheduler
T@"<NSObject>",&,N,V_willResetNotificationToken
T@"<NSObject>",&,N,V_didResetNotificationToken
T@"NSNotificationCenter",&,N,V_notificationCenter
TB,N,V_exportInFlight
T@"<AVTCoreDataCloudKitMirroringHandlerDelegate>",W,N,V_delegate
scheduleImportChangesWithManagedObjectContext:workQueue:completionHandler:
decodeObjectOfClass:forKey:
encodeObject:forKey:
_puppetName
T@"NSString",R,C,N,V_puppetName
observationToken
changeHandlers
coalescer
transactionsForPendingChanges
removeAllObjects
logDispatchingRemoteChangeWithTransactionCount:handlersCount:
enumerateObjectsUsingBlock:
performManagedObjectContextWork:
registerCoalescerEventHandler
persistentStoreCoordinator
logStartObservingRemoteChangeNotificationFrom:
environment
processRemoteChangeNotification:completion:
setObservationToken:
stringByAppendingFormat:
logReceivedRemoteChange:
logNotificationDoesntContainChangeHistoryToken
changeTransactionsForToken:managedObjectContext:
addObjectsFromArray:
processingRemoteChangeNotification:
logInspectingChangesForExportAfterToken:
fetchHistoryTransactionForToken:
logErrorFetchingChangeHistory:
_coalescer
_environment
_observationToken
_changeHandlers
_transactionsForPendingChanges
T@"<AVTEventCoalescer>",R,N,V_coalescer
T@"AVTCoreEnvironment",R,N,V_environment
T@"<NSObject>",&,N,V_observationToken
T@"NSMutableArray",R,N,V_changeHandlers
T@"NSMutableArray",R,N,V_transactionsForPendingChanges
updatedProperties
name
containsObject:
author
bundleID
entity
defaultCenter
resetFlushCacheValuesIfNeeded
stringByAppendingPathComponent:
fileURLWithPath:
storeLocation
URLByAppendingPathComponent:
URLForDirectory:inDomain:appropriateForURL:create:error:
imageStoreLocation
imageCacheStoreLocationWithError:
stringWithFormat:
logFileSystemError:
stickerImageStoreLocation
imageCacheStoreLocation
scheduler
lockProvider
_storeLocation
_imageStoreLocation
_stickerImageStoreLocation
_imageCacheStoreLocation
_scheduler
_serialQueueProvider
_lockProvider
_backgroundQueue
T@"<AVTBlockScheduler>",R,N,V_scheduler
T@?,R,C,N,V_serialQueueProvider
T@?,R,C,N,V_lockProvider
T@"NSObject<OS_dispatch_queue>",R,C,N,V_backgroundQueue
T@"NSURL",R,C,N
initWithIdentifier:
setPreregistered:
schedulerForPostInstallMigrationActivity
schedulerForUserRequestedBackupActivity
domainIdentifier
initWithDomainIdentifier:primaryAvatarIdentifier:
primaryAvatarIdentifier
domainBySettingPrimaryAvatarIdentifier:
_domainIdentifier
_primaryAvatarIdentifier
T@"NSString",R,C,N,V_domainIdentifier
T@"NSString",R,C,N,V_primaryAvatarIdentifier
numberWithBool:
integerValue
numberWithInteger:
interfaceWithProtocol:
setWithObjects:
decodeObjectOfClasses:forKey:
initWithDomains:records:
domains
records
_domains
_records
T@"NSArray",R,C,N,V_domains
T@"NSArray",R,C,N,V_records
initWithAvatarRecord:
archivedDataWithRootObject:requiringSecureCoding:error:
unarchivedObjectOfClass:fromData:error:
avatarRecord
dataFromAvatarRecord:
avatarRecordFromData:
store
_store
T@"<AVTAvatarStoreInternal>",R,N,V_store
T@"<AVTAvatarStoreDelegate>",W,N,V_delegate
recordIdentifier
contentExistsAtLocation:
initWithStoreLocation:domainIdentifier:environment:
dateWithTimeIntervalSinceNow:
initWithAvatarData:identifier:orderDate:
removeFilesAtLocation:error:
migrationNeeded
createSourceBackend
finalizeMigration:
migratedRecordFromRecord:index:totalCount:
initWithStoreLocation:environment:
T@"NSURL",R,N,V_storeLocation
errorWithDomain:code:userInfo:
memoji
dataRepresentation
neutralMemojiDataRepresentation
canLoadDataRepresentation:
dataForNeutralRecord
date
initWithAvatarData:
appendString:
initWithData:encoding:
dataForNewRecord
canLoadAvatarWithData:
defaultAvatarRecord
dictionaryRepresentation
setAvatarData:
_identifier
_avatarData
_orderDate
T@"NSData",&,N,V_avatarData
T@"NSDate",R,N,V_orderDate
T@"NSString",R,C,N,V_identifier
initWithIdentifier:avatarRecordIdentifier:stickerConfigurationIdentifier:frequencySum:serializationVersion:
avatarRecordIdentifier
stickerConfigurationIdentifier
frequencySum
serializationVersion
_avatarRecordIdentifier
_stickerConfigurationIdentifier
_frequencySum
_serializationVersion
T@"NSNumber",R,N,V_frequencySum
T@"NSNumber",R,N,V_serializationVersion
T@"NSString",R,C,N,V_avatarRecordIdentifier
T@"NSString",R,C,N,V_stickerConfigurationIdentifier
model
loadContentFromDisk:
readContentFromDiskAtLocation:logger:error:
loadModel:
classifyRecordsByIdentifiers:
setModel:
setSortedAvatars:
setAvatarsByIdentifiers:
loadContentFromDiskIfNeeded:
allAvatars
avatarsExcludingIdentifiers:error:
sortedAvatars
rootBySavingAvatarRecord:afterAvatarRecord:forDomainIdentifier:toRoot:
saveModel:logger:error:
logDeletingRecordWithIdentifier:
rootByRemovingAvatarWithIdentifier:fromRoot:
logDuplicatingRecordWithIdentifier:
avatarCountWithError:
writeContent:toDiskAtLocation:logger:error:
enumerateIndexesUsingBlock:
dictionaryWithCapacity:
storeLocationForDomainIdentifier:environment:
avatarsByIdentifiers
_model
_avatarsByIdentifiers
_sortedAvatars
T@"NSURL",R,C,N,V_storeLocation
T@"AVTArchiverBasedStoreRoot",&,N,V_model
T@"NSDictionary",C,N,V_avatarsByIdentifiers
T@"NSArray",C,N,V_sortedAvatars
_avtui_changedRecordIdentifiers
remoteConfigurationWithEnvironment:
defaultBackendWithWorkQueue:environment:
standardUserDefaults
initWithWorkQueue:environment:userDefaults:
initWithBackend:backendAccessQueue:puppetStore:stickerBackend:environment:
logCreatingStore:
logSkippedFetchingRecordsWithReason:
performBackendWork:
logFetchedRecords:criteria:
fetchingRecords:
performPuppetStoreWork:
domain
logRecordsNotFoundInRecordStore:
logRecordsNotFoundInPuppetStore:
logRecordsNotFoundInAnyStore:
backendAccessQueue
backend
puppetStoreAccessQueue
puppetStore
performAsynchronousWork:
imageHandlingDelegate
deleteThumbnailsForAvatarRecordsWithIdentifiers:error:
clearStickersForAvatarRecordIdentifier:withEnvironment:
generateThumbnailsForAvatarRecord:avatar:error:
generateThumbnailsForAvatarRecords:error:
postChangeNotificationForRecordWithIdentifiers:remote:
savingRecords:
logErrorDeletingThumbnailsForIdentifier:error:
stickerBackend
deletingRecords:
generateThumbnailsForDuplicateAvatarRecord:originalRecord:error:
logErrorDuplicatingThumbnailsForIdentifier:error:
duplicatingRecords:
logPostingChangeNotificationForIdentifiers:
postNotificationName:object:userInfo:
updateThumbnailsForChangesWithTracker:recordProvider:
initWithDomainIdentifier:
setImageHandlingDelegate:
_imageHandlingDelegate
_backendAccessQueue
_puppetStoreAccessQueue
_backend
_puppetStore
_stickerBackend
T@"NSObject<OS_dispatch_queue>",R,N,V_backendAccessQueue
T@"NSObject<OS_dispatch_queue>",R,N,V_puppetStoreAccessQueue
T@"<AVTStoreBackend>",R,N,V_backend
T@"AVTPuppetStore",R,N,V_puppetStore
T@"<AVTStickerBackend>",R,N,V_stickerBackend
T@"<AVTPBackendImageHandlingDelegate>",W,N,V_imageHandlingDelegate
defaultServerWithImageHandlingDelegate:
initWithEnvironment:imageHandlingDelegate:
defaultServer
getStickersFromUserDefaults
stickers
fetchAllStickers
fetchMostRecentStickersWithLimit:
fetchStickersWithAvatarIdentifier:stickerIdentifier:
addStickerWithAvatarIdentifier:stickerIdentifier:
updateStickerAtIndex:
saveStickersToUserDefaults
stickersIndexesMatchingAvatarIdentifier:stickerIdentifier:
removeObjectsAtIndexes:
cacheLocation
processChangeTransactionsWithChangeTokenLocation:handler:error:
deletingStickerRecentsForRemoteChanges:
frequencyCounter
recentStickersDidChange:
userDefaults
objectForKey:inDomain:
unarchivedObjectOfClasses:fromData:error:
setFrequencyCounter:
numberWithUnsignedInteger:
setObject:forKey:inDomain:
nextFrequencyCount
addNextFrequencyCountToFrequencySum:
setObject:atIndexedSubscript:
exchangeObjectAtIndex:withObjectAtIndex:
length
_recentStickersChangedExternally
setStickers:
_stickerBackendDelegate
_userDefaults
_cacheLocation
_stickers
_frequencyCounter
T@"NSUserDefaults",R,N,V_userDefaults
T@"NSURL",R,N,V_cacheLocation
T@"NSMutableArray",&,N,V_stickers
TQ,N,V_frequencyCounter
T@"<AVTStickerBackendDelegate>",W,N,V_stickerBackendDelegate
initWithCriteria:identifiers:excludedIdentifiers:fetchLimit:
initWithCriteria:identifier:
requestForAllAvatarsExcluding:
requestForAvatarsWithIdentifiers:
requestForPredefinedAvatars
requestForPredefinedAvatarsExcluding:
requestForCustomAvatars
requestForCustomAvatarsWithLimit:
requestForStorePrimaryAvatar
_identifiers
_excludingIdentifiers
_fetchLimit
T@"NSArray",R,C,N,V_identifiers
T@"NSArray",R,C,N,V_excludingIdentifiers
Tq,R,N,V_fetchLimit
currentVersion
dbLocationForStoreLocation:
path
fileExistsAtPath:
versionFileLocationForStoreLocation:
removeItemAtURL:error:
versionFromDiskAtLocation:error:
saveToDiskAtLocation:error:
_createStoreIfNeededAtLocation:logger:error:
_readContentFromDiskAtLocation:logger:error:
logReadingBackendAtPath:
dataWithContentsOfURL:options:error:
isFileNotFoundError:
logSavingBackend
_createStoreFolderIfNeededAtLocation:logger:fileManager:error:
logSavingError:
_writeContent:toDiskAtLocation:logger:error:
writeVersion:toDiskAtLocation:error:
logErrorUpdatingVersion:
writeToURL:options:error:
_performMigrationIfNeededForStoreAtLocation:logger:fileManager:error:
_createStoreEmptyFileIfNeededAtLocation:logger:fileManager:error:
readVersionForStoreAtLocation:error:
logBackendVersionMismatch:actual:
backendVersion
_migrateFromPre0_5ToCurrentForStoreAtLocation:logger:fileManager:error:
_migrateFromPre0_6ToCurrentForStoreAtLocation:logger:fileManager:error:
avatarKitVersion
_migrateDifferentAvatarKitVersionsForContent:logger:
attributesOfItemAtPath:error:
setAttributes:ofItemAtPath:error:
logDroppingUnsupportedAvatarRecord:
logCreatingBackendFolderAtPath:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
logErrorCreatingBackendContent:
logCreatingBackendDBAtPath:
initWithBackendVersion:avatarKitVersion:
doubleValue
decodeDoubleForKey:
encodeDouble:forKey:
_backendVersion
_avatarKitVersion
Td,R,N,V_backendVersion
Td,R,N,V_avatarKitVersion
currentHistoryTokenForLocation:
trackerChangesFromPersistentChanges:managedObjectContext:
logTrackerProcessingChanges:count:from:
enumerateChangesAfterToken:managedObjectContext:changesHandler:error:
saveToken:location:error:
logErrorSavingChangeToken:location:
recordIdentifierForChange:managedObjectContext:
trackerChangeTypeFromPersistentChangeType:
initWithRecordIdentifier:changeType:
tokenFileURLForLocation:
logCurrentHistoryTokenFileDoesntExist:
logErrorReadingCurrentHistoryToken:
savingChangeTrackerToken:
fetchHistoryAfterToken:
token
logTransactionHasChangesButNoToken
objectWithID:
URIRepresentation
logCouldntFindRecordIdentifierForChangeType:managedObjectID:
logFoundRecordIdentifier:changeType:managedObjectID:
T@"NSString",R,N
Tq,R,N
_recordIdentifier
_changeType
T@"NSString",R,N,V_recordIdentifier
Tq,R,N,V_changeType
logMigratingSource:
updatedRecordsForMigratingRecords:source:destinationBackend:error:
logErrorUpdatingRecordsForMigration:
logErrorDeletingMigratedContent:
migratingPersistedContent:
logFoundExistingRecordDuringMigration
migrateContentFromSource:toDestination:error:
logNotImportingOnLaunchWithRemainingTime:
importRequired
exportRequired
importDidCompleteSuccessfully
exportDidCompleteSuccessfully
didReceivePushNotification
didResetSync
madeLocalChanges
remoteConfigurationWithDaemonClient:environment:
initWithDaemonClient:environment:
initWithStoreLocation:copiedAside:environment:
createModel
modelV1
setManagedObjectClassName:
setAttributeType:
setPreservesValueInHistoryOnDeletion:
managedModelAttributesRequiredForMirroring
setProperties:
setEntities:
localConfigurationWithStoreLocation:environment:
currentManagedObjectModel
createContainerForRemoteConfiguration
initWithName:managedObjectModel:
setType:
setOption:forKey:
setShouldAddStoreAsynchronously:
setPersistentStoreDescriptions:
container
persistentStores
daemonClient
loadPersistentStoresWithCompletionHandler:
newBackgroundContext
setTransactionAuthor:
persistentStoreDescriptions
storeDescription
_container
_daemonClient
T@"NSPersistentContainer",R,N,V_container
T@"<AVTAvatarsDaemon>",R,N,V_daemonClient
sideDatabaseFolderForStoreLocation:
databaseFolderForStoreLocation:
databaseLocationForFolderLocation:
initWithManagedObjectModel:
createStoreDescriptionWithDatabaseLocation:logger:
cloudKitMirroringEnabled
logSyncEnabled
configureStoreDescriptionForMirroring:logger:
setURL:
URLByAppendingPathExtension:
copiedAsideMigratableSource
folderLocation
coordinator
defaultManager
createDatabaseDirectoryIfNeeded:usingFileManager:
logErrorAddingPersistentStore:
addPersistentStoreWithDescription:completionHandler:
initWithConcurrencyType:
setPersistentStoreCoordinator:
databaseLocation
initForStoreWithURL:usingModel:options:policy:
logTearingDownCoreDataStack:
removePersistentStore:error:
logErrorTearingDownCoreDataStack:
logErrorRemovingStoreFolder:
copyItemAtURL:toURL:error:
copyingStorageAside:
logUpdatingBackupExclusionStatus:
getResourceValue:forKey:error:
setResourceValue:forKey:error:
logErrorMigratingBackupInclusionStatus:
logErrorUpdatingBackupInclusionStatus:
deviceConfigurationSupportsCloudKitMirroringWithLogger:completionHandler:
migratableSources
createStoreServerWithError:
tearDownAndEraseAllContent:
contentExists
copyStorageAside:
updateBackupInclusionStatusOnQueue:completionHandler:
_coordinator
_storeDescription
_folderLocation
_databaseLocation
T@"NSPersistentStoreCoordinator",R,N,V_coordinator
T@"NSPersistentStoreDescription",R,N,V_storeDescription
T@"NSURL",R,N,V_folderLocation
T@"NSURL",R,N,V_databaseLocation
initWithUUIDString:
setOrderDate:
deleteImagesForAvatarRecordIdentifier:error:
initWithStickerBackend:environment:
processChangesForChangeTracker:completionHandler:
initWithMachServiceName:
initWithListener:logger:
listener
logAvatarsDaemonReceivesIncomingConnection
setExportedInterface:
setExportedObject:
currentConnection
processIdentifier
logAvatarsDaemonClientChecksIn:
clientDidCheckInForServer:
listener:shouldAcceptNewConnection:
startListening
T@"<AVTAvatarsDaemonServerDelegate>",W,N
_listener
T@"NSXPCListener",R,N,V_listener
T@"<AVTAvatarsDaemonServerDelegate>",W,N,Vdelegate
setIsPuppet:
decodeBoolForKey:
encodeBool:forKey:
_isPuppet
_avatarRecord
TB,N,V_isPuppet
T@"<AVTAvatarRecord>",R,C,N,V_avatarRecord
backendLog
generalLog
componentsJoinedByString:
interactionLog
logDebug:
logErrorLoadingTemplates:
logParsingMetadataDefinitions
logParsingMetadataDefinitionsError:
logRenderingModelColor:
logRenderingModelPreset:
logRenderingConfiguration:
logRenderingRecord:size:
logSnapshotReturnedImage:
logNoAvatarPreset:
logAvatarsdExitingWithReason:
logErrorWhileMigratingBackend:
logDeletingImagesWithIdentifierPrefix:
logErrorSavingRecentSticker:
logErrorFetchingRecentStickers:
logFetchedOrphanedRecentSticker:
logFetchedRecentStickerWithNoStickerConfiguration:
logPerformedRecentStickersMigration:
logCreatingImageStoreForPath:
logImageStoreCacheMiss:
logImageStoreCacheHitForItemDescription:sizeCost:
logImageStoreSavingError:code:
logImageStoreBeginSavingImageForPath:
logImageStoreDoneSavingImageForPath:
logInMemoryCacheStorageForResource:
logInMemoryCacheHitForResource:
logInMemoryCacheEvictsResource:
logGeneratingImageForRecord:scope:type:
logGeneratingImageError:
logErrorDeletingSomeThumbnail:
logDidFinishEditingWithSuccess
logDidFinishEditingWithError:
logPreLoadingNeededForIndex:section:
logRequestingPreLoadingTask:forIndex:section:
logStartingPreLoadingTask:
logCancelingPreLoadingTask:
logLookingUpPreLoadedPreset:task:
logPreLoadingPreset:task:
logDonePreLoadingPreset:task:
logDonePreLoadingThumbnailForPreLoadingTask:
logUpdatingLiveAvatarWithConfiguration:
logRequestingThumbnailForIndex:section:
logThrottlingAVTView
logUnthrottlingAVTView
logErrorSnapshottingAVTView:
logCarouselSnapshotForIndex:size:
logSingleModeCantSnapshotForLackOfWindow
logUsageTrackingRecordCount:
logUsageTrackingSmallDifferencesClusterCount:
logUsageTrackingBigDifferencesClusterCount:
logStartingServer
settingUpStore:
performingMigrationXPCActivity:
logMigrationXPCActivityFinished
performingUserRequestedBackupActivity:
logUserRequestedBackupXPCActivityFinished
logErrorSettingUpStore:
logErrorStartingServer:
logUnableToCreatePushConnection:
logPushConnectionReceivedPublicToken:
logPushConnectionReceivedToken:topic:identifier:
logPushNotificationReceivedForTopic:payload:
logChangesRequireExport
logChangesRequireThumbnailUpdate
updatingThumbnailsForRemoteChanges:
logErrorProcessingChangeTransactionsToUpdateThumbnails:
logCheckingIfMigrationNeeded
logUpdatingThumbnails
logSchedulingImport
logSchedulingUpdateThumbnails
logDeletingStickerRecents
logWillResetZone
logDidResetZoneWithSuccess:error:
postingAvatarStoreChangeNotification:
logErrorSettingUserDirSuffixForSandbox:
logGenericSandboxError:error:
logErrorSandboxInit:
logWarningNoHOME
restoringStorage:
logErrorCopyingStorageAside:
logErrorMergingCopiedAsideContent:
logSetupSchedulingMigrationCheck
logSetupSchedulingImport
logSetupSchedulingExport
checkingAccountInfo:
logAccountInfo:status:deviceToDeviceEncryption:
logErrorGettingAccountInfo:
logNoProxyToAvatarsDaemon
logStickerGeneratorPoolDidntHaveAvailableGenerator:maxCount:
logPaddleViewVideoPlayerFailed:
logRenderingStickerStart:forRecord:
logRenderingStickerEnd:
logStickerViewSnapshotForBounds:offset:
logStickerSchedulerAddedTask:taskCount:
logStickerSchedulerStartedTask:forSchedulerRule:
logStickerSchedulerCancelledTask:
logStickerSchedulerCancelledStickerSheetTasksForIdentifier:
logStickerSchedulerCancelledAllTasks
logErrorUpdatingBodyCarouselVisibleCellAtIndexPath:
logNilImageReturnedFromAVTUIStickerRenderer
logNilImageReturnedFromAVTAvatarRecordImageProvider
logCarouselChangingToSingleMode
logCarouselChangingToMultiMode
logCarouselChangesCenterItemTo:
logCarouselTransitionCenterItem:withCell:
logCarouselStopsFocusingOnCenterItem:withCell:
logSingleModeControllerStartUsingLiveView:
logSingleModeControllerStopUsingLiveView:
logCarouselCellStartUsingLiveView:associatedTransition:
logCarouselCellStopUsingLiveView:associatedTransition:
logCarouselAddsTransitionToCoordinator:
logStartTransition:state:
logSetupHandlerCompletedForTransition:state:finished:
logPerformTransition:
logCancelTransition:
logTransition:state:reachedStage:
logToLivePoseTransitionBegins:
logToLivePoseTransitionEnds:
logAVTViewSetAvatar:
logAVTViewDidRenderAvatar:currentAvatar:
logAVTViewDidRenderCurrentAvatar:
logAVTViewCancelingRenderingAvatar:
logCarouselErrorGettingFrameForElementAtIndex:
logCarouselDelegateDidFocusRecord:
logCarouselDelegateWillEndFocusRecord:
logCarouselDelegateNearnessFactorDidChange:towardRecord:editable:
logCarouselDelegateDidUpdateRecord:
logCarouselEndsDraggingWithVelocity:willSwitchIndexPathInsteadOfScrollBack:forHighVelocity:
logSetupUserHasNoMemojiData
logSetupUserImportAttempting:
logSetupUserImportFailedToUnarchiveDataAtPath:errorDescription:
logSetupUserImportSaveError:
logSetupUserDataImportCheck
logSetupUserImportFailedToRemoveFileWithError:
logFoundExistingRecordDuringMigration:
_generalLog
_interactionLog
_backendLog
T@"NSObject<OS_os_log>",R,N,V_generalLog
T@"NSObject<OS_os_log>",R,N,V_interactionLog
T@"NSObject<OS_os_log>",R,N,V_backendLog
initWithEnvironment:connectionFactory:
createMirroringHandlerWithEnvironment:
initWithLocalBackend:configuration:migratorProvider:pushSupport:mirroringHandler:schedulingAuthority:remoteChangesObserver:stickerChangeObserver:changeTracker:daemonServer:storeMaintenance:backgroundQueue:environment:imageHandlingDelegate:
processInternalSettingsChanges:
setServer:
server
daemonServer
pushNotificationsSupport
startListeningToPushNotifications
schedulingAuthority
scheduleExportWithManagedObjectContext:discretionary:completion:
storeMaintenance
scheduleUpdateThumbnails
deleteStickerRecents
mirroringHandler
setMigrationActivityCompletion:
completeMigrationActivityIfNeeded
scheduleWithBlock:
setUserRequestedBackupActivityCompletion:
setupCompleted
completeUserRequestedBackupActivityIfNeeded
scheduleImportExportIfRequiredWithPostImportHandler:completion:
importSetupUserDataIfNeeded
scheduleSetupThen:
migrationActivityCompletion
userRequestedBackupActivityCompletion
setupThen:
setSetupCompleted:
updateThumbnails
scheduleMigrationThen:
scheduleImportDiscretionary:completionBlock:
migrate
migratorProvider
clearContentAtLocation:
changeTracker
stickerChangeObserver
resetSyncShouldPreserveContentForReason:
didReceivePushNotification:
_setupCompleted
_migratorProvider
_server
_pushNotificationsSupport
_mirroringHandler
_schedulingAuthority
_stickerChangeObserver
_changeTracker
_daemonServer
_storeMaintenance
_migrationActivityCompletion
_userRequestedBackupActivityCompletion
T@"<AVTPBackendImageHandlingDelegate>",R,N,V_imageHandlingDelegate
T@"<AVTCoreDataPersistentStoreLocalConfiguration>",R,N,V_configuration
T@?,R,C,N,V_migratorProvider
T@"NSXPCStoreServer",&,N,V_server
T@"NSObject<OS_dispatch_queue>",R,N,V_backgroundQueue
T@"<AVTPushNotificationsSupport>",R,N,V_pushNotificationsSupport
T@"<AVTCoreDataCloudKitMirroringHandler>",R,N,V_mirroringHandler
T@"<AVTSyncSchedulingAuthority>",R,N,V_schedulingAuthority
T@"AVTStickerChangeObserver",R,N,V_stickerChangeObserver
T@"<AVTAvatarRecordChangeTracker>",R,N,V_changeTracker
T@"<AVTAvatarsDaemonServer>",R,N,V_daemonServer
T@"<AVTCoreDataStoreMaintenance>",R,N,V_storeMaintenance
TB,N,V_setupCompleted
T@?,C,N,V_migrationActivityCompletion
T@?,C,N,V_userRequestedBackupActivityCompletion
connectionQueue
connectionWithEnvironmentName:namedDelegatePort:queue:
getAPSEnvironmentString:
base64EncodedStringWithOptions:
notificationFromRemoteNotificationDictionary:
topic
stringByAppendingString:
connection:didReceivePublicToken:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didSendOutgoingMessage:
connection:didFailToSendOutgoingMessage:error:
connection:didChangeConnectedStatus:
connectionDidReconnect:
connection:channelSubscriptionsFailedWithFailures:
stopListeningToPushNotifications
T@"<AVTPushNotificationsSupportDelegate>",W,N
setupConnectionWithCompletionHandler:
pushConnection
setPushConnection:
_pushConnection
_connectionQueue
T@"APSConnection",&,N,V_pushConnection
T@"NSObject<OS_dispatch_queue>",R,N,V_connectionQueue
T@"AVTPushNotificationsConnectionFactory",R,N,V_connectionFactory
T@"<AVTPushNotificationsSupportDelegate>",W,N,V_delegate
initWithEnvironmentName:namedDelegatePort:queue:
T@"NSUUID",&,D,N
T@"NSData",&,D,N
T@"NSDate",&,D,N
currentContainerIdentifier
containerWithIdentifier:
accountStatus
supportsDeviceToDeviceEncryption
manateeContainer:
accountInfoWithCompletionHandler:
initWithContainerIdentifier:
setUseZoneWidePCS:
setUseDeviceToDeviceEncryption:
setContainerOptions:
initWithOptions:
setMirroringDelegate:
setSourceApplicationSecondaryIdentifier:
setSourceApplicationBundleIdentifier:
setDiscretionaryNetworkBehavior:
setOperationConfiguration:
v32@0:8@16@?24
v24@0:8@?16
v32@0:8@"NSString"16@?<v@?>24
v24@0:8@?<v@?B>16
@40@0:8d16@24@32
@?16@0:8
@16@0:8
v24@0:8@16
d16@0:8
B16@0:8
v20@0:8B16
v16@0:8
@"NSString"
@"<AVTUILogger>"
@"NSObject<OS_dispatch_queue>"
@32@0:8@16q24
@32@0:8@16@24
B24@0:8q16
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@32@0:8@16^@24
B32@0:8@16^@24
B24@0:8^@16
@"NSArray"32@0:8@"AVTAvatarFetchRequest"16^@24
B32@0:8@"AVTAvatarRecord"16^@24
B32@0:8@"NSArray"16^@24
B32@0:8@"NSString"16^@24
@"AVTAvatarRecord"32@0:8@"AVTAvatarRecord"16^@24
@"<AVTStoreBackendDelegate>"16@0:8
v24@0:8@"<AVTStoreBackendDelegate>"16
@"<AVTAvatarRecordChangeTracker>"16@0:8
@64@0:8@16@24@32@40@48@56
@40@0:8@16@24^@32
v40@0:8^@16^@24@32
Q32@0:8@16^@24
@"<AVTStoreBackendDelegate>"
@"<AVTAvatarRecordChangeTracker>"
@"<AVTCoreDataPersistentStoreConfiguration>"
@"<AVTAvatarManagedRecordTransformer>"
@"<AVTCoreDataRemoteChangesObserver>"
v48@0:8@16@24@?32@?40
v32@0:8@"AVTAvatarFetchRequest"16@?<v@?@"NSArray"@"NSError">24
v48@0:8@"<AVTAvatarRecord>"16@"AVTMemoji"24@?<v@?B@"NSError">32@?<v@?B@"NSError">40
v32@0:8@"<AVTAvatarRecord>"16@?<v@?B@"NSError">24
v32@0:8@"<AVTAvatarRecord>"16@?<v@?B@"<AVTAvatarRecord>"@"NSError">24
v32@0:8@"NSString"16@?<v@?B@"NSError">24
v40@0:8@16@24@?32
@"NSArray"32@0:8@"AVTStickerFetchRequest"16^@24
v40@0:8@"NSString"16@"NSString"24@?<v@?B@"NSError">32
v32@0:8@"<AVTAvatarRecordChangeTracker>"16@?<v@?B@"NSError">24
@"<AVTStickerBackendDelegate>"16@0:8
v24@0:8@"<AVTStickerBackendDelegate>"16
@24@0:8@16
Q32@0:8@16@24
Q40@0:8@16@24@32
@40@0:8@16@24@32
v48@0:8@16@24@32@?40
v40@0:8@"<AVTAvatarStoreInternal>"16@"<AVTAvatarRecord>"24@?<v@?@?<v@?>>32
v40@0:8@"<AVTAvatarStoreInternal>"16@"NSString"24@?<v@?@?<v@?>>32
v48@0:8@"<AVTAvatarStoreInternal>"16@"<AVTAvatarRecord>"24@"<AVTAvatarRecord>"32@?<v@?@?<v@?>>40
@24@0:8Q16
@24@0:8@?16
Q24@0:8@?16
@"<AVTAvatarRecord>"24@0:8Q16
@"<AVTAvatarStore>"16@0:8
@"NSIndexSet"24@0:8@?<B@?@"<AVTAvatarRecord>"Q^B>16
Q24@0:8@?<B@?@"<AVTAvatarRecord>"Q^B>16
@"NSIndexSet"16@0:8
@"<AVTAvatarStoreInternal>"16@0:8
@48@0:8@16@24@32@40
@56@0:8@16@24@32@40@48
v32@0:8:16@?24
@"AVTPAvatarStore"
@"AVTObservableAvatarStore"
@"AVTAvatarFetchRequest"
@"NSMutableArray"
@"NSNotificationCenter"
@"NSPointerArray"
@"<NSObject>"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^{_NSZone=}16
@32@0:8@16Q24
v40@0:8@16@?24@?32
@24@0:8^@16
@"NSArray"
@24@0:8q16
@32@0:8q16q24
@40@0:8q16@24@32
q16@0:8
@32@0:8@16@?24
@48@0:8@16@?24@32@40
B40@0:8@16@24^@32
@"<AVTEventCoalescer>"
@32@0:8@?16@24
v44@0:8@16B24@28@?36
v24@0:8@"NSNotificationCenter"16
v44@0:8@"NSManagedObjectContext"16B24@"NSObject<OS_dispatch_queue>"28@?<v@?B@"NSError">36
v32@0:8@"NSManagedObjectContext"16@?<v@?B@"NSError">24
@"<AVTCoreDataCloudKitMirroringHandlerDelegate>"16@0:8
v24@0:8@"<AVTCoreDataCloudKitMirroringHandlerDelegate>"16
@"<AVTCoreDataCloudKitMirroringHandlerDelegate>"
@"<AVTBlockScheduler>"
@?24@0:8@16
v24@0:8@?<v@?@"NSManagedObjectContext"@"NSArray">16
@"AVTCoreEnvironment"
@"NSURL"
v40@0:8@?16d24@32
v40@0:8@?<v@?>16d24@"NSObject<OS_dispatch_queue>"32
@"<AVTAvatarStoreDelegate>"
@"<AVTAvatarStoreInternal>"
@40@0:8@16Q24Q32
@"<AVTStoreBackend>"16@0:8
@"AVTAvatarRecord"40@0:8@"AVTAvatarRecord"16Q24Q32
@32@0:8q16@24
@"NSData"
@"NSDate"
@"NSNumber"
Q24@0:8^@16
@"AVTArchiverBasedStoreRoot"
@"NSDictionary"
v32@0:8@16@24
v32@0:8@"<AVTStoreBackend>"16@"NSArray"24
v28@0:8@16B24
@"<AVTPBackendImageHandlingDelegate>"
@"<AVTStoreBackend>"
@"AVTPuppetStore"
@"<AVTStickerBackend>"
v24@0:8Q16
@"<AVTStickerBackendDelegate>"
@"NSUserDefaults"
@48@0:8q16@24@32q40
B48@0:8@16@24@32^@40
@32@0:8d16d24
B40@0:8@16@?24^@32
B40@0:8@"NSURL"16@?<B@?@"NSArray">24^@32
@48@0:8@16@24@?32^@40
q24@0:8q16
B40@0:8@"<AVTStoreBackendMigratableSource>"16@"<AVTStoreBackend>"24^@32
@48@0:8@16@24@32^@40
@"NSPersistentStoreCoordinator"16@0:8
@"NSManagedObjectContext"16@0:8
@"NSPersistentStoreDescription"16@0:8
@"NSPersistentContainer"
@"<AVTAvatarsDaemon>"
@"NSArray"16@0:8
@"NSXPCStoreServer"24@0:8^@16
@"<AVTStoreBackendMigratableSource>"16@0:8
v32@0:8@"NSObject<OS_dispatch_queue>"16@?<v@?B@"NSError">24
@36@0:8@16B24@28
B32@0:8^@16@24
@"NSPersistentStoreCoordinator"
@"NSPersistentStoreDescription"
@"NSUUID"24@0:8@"NSString"16
@"NSString"24@0:8@"NSUUID"16
v32@0:8@"AVTAvatarManagedRecord"16@"AVTAvatarRecord"24
@"AVTAvatarRecord"32@0:8@"AVTAvatarManagedRecord"16^@24
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"<AVTAvatarsDaemonServerDelegate>"16@0:8
v24@0:8@"<AVTAvatarsDaemonServerDelegate>"16
@"<AVTAvatarsDaemonServerDelegate>"
@"NSXPCListener"
@"<AVTAvatarRecord>"
v40@0:8@16{CGSize=dd}24
v32@0:8Q16q24
v32@0:8@16Q24
v32@0:8@16q24
v40@0:8@16@24q32
v32@0:8Q16Q24
v40@0:8@16Q24Q32
v32@0:8Q16@24
v40@0:8Q16{CGSize=dd}24
v28@0:8B16@20
v32@0:8q16@24
v40@0:8@16@24@32
v40@0:8@16Q24@32
v40@0:8@16q24@32
v24@0:8d16
v20@0:8i16
v28@0:8@16i24
v24@0:8*16
v36@0:8@16q24B32
v32@0:8q16q24
v40@0:8@16{CGPoint=dd}24
v32@0:8d16B24B28
v24@0:8q16
v24@0:8@"NSString"16
v40@0:8@"NSString"16{CGSize=dd}24
v32@0:8@"NSString"16@"NSString"24
v24@0:8@?<v@?@?<v@?>>16
v32@0:8@"NSString"16Q24
v32@0:8@"NSString"16q24
v40@0:8@"NSString"16@"NSString"24q32
v40@0:8@"NSString"16Q24Q32
v32@0:8Q16@"NSString"24
v28@0:8B16@"NSString"20
v32@0:8q16@"NSString"24
v40@0:8@"NSString"16@"NSString"24@"NSString"32
v40@0:8@"NSString"16Q24@"NSString"32
v40@0:8@"NSString"16q24@"NSString"32
v24@0:8@"NSArray"16
v28@0:8@"NSString"16i24
v36@0:8@"NSString"16q24B32
v24@0:8@"NSError"16
v40@0:8@"NSString"16{CGPoint=dd}24
v24@0:8@"NSIndexPath"16
@"NSObject<OS_os_log>"
B24@0:8Q16
v24@0:8@"<AVTPushNotificationsSupport>"16
v32@0:8@"<AVTCoreDataCloudKitMirroringHandler>"16Q24
v24@0:8@"<AVTAvatarsDaemonServer>"16
@128@0:8@16@24@?32@40@48@56@64@72@80@88@96@104@112@120
v32@0:8@?16@?24
v28@0:8B16@?20
B24@0:8@?16
v36@0:8@16B24@?28
@"<AVTCoreDataPersistentStoreLocalConfiguration>"
@"NSXPCStoreServer"
@"<AVTPushNotificationsSupport>"
@"<AVTCoreDataCloudKitMirroringHandler>"
@"<AVTSyncSchedulingAuthority>"
@"AVTStickerChangeObserver"
@"<AVTAvatarsDaemonServer>"
@"<AVTCoreDataStoreMaintenance>"
v48@0:8@16@24@32@40
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
@"<AVTPushNotificationsSupportDelegate>"16@0:8
v24@0:8@"<AVTPushNotificationsSupportDelegate>"16
@"<AVTPushNotificationsSupportDelegate>"
@"APSConnection"
@"AVTPushNotificationsConnectionFactory"
