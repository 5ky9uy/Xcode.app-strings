com.apple.AppleID.Service.Cloud
LOCATION_SHARING
LocalizableUI
ShareMyLocationIcon
-[FMFSpecifierProvider locationSharingSpecifierWasTapped:]
com.apple.springboard
SBParentalControlsCapabilities
location
TitleView_iOS
v8@?0
v24@?0@"NSString"8@"NSError"16
prefs:root=ROOT#AIRPLANE_MODE
prefs:root=MOBILE_DATA_SETTINGS_ID
ALERT_NO_NETWORK_ACTION_BUTTON_SETTINGS
v16@?0@"UIAlertAction"8
OK_BUTTON
ALERT_NO_NETWORK_TITLE_NO_INTERNET
ALERT_NO_NETWORK_TITLE_CELLULAR_DISABLED
ALERT_NO_NETWORK_MESSAGE_CELLULAR_DISABLED
ALERT_NO_NETWORK_TITLE_AIRPLANE_MODE
com.apple.findmy
FMFFindMyDeviceStateChanged
com.apple.icloud.fmfui.fmflocationsharingviewcontroller.specifiersqueue
APP_NAME_TITLE
ContactStoreDidChange
SHARE_FOOTER_LOC_SVCS_OFF
SHARE_MY_LOCATION_FOOTER
SHARE_MY_LOCATION
THIS_DEVICE_SELECTION
NOT_SELECTED
AND_WATCHES
CHANGE_ME_DEVICE
v32@?0@"FMFHandle"8Q16^B24
FOLLOWERS_HEADER
NO_FOLLOWERS_HEADER
v24@?0@"FMFDevice"8@"NSError"16
FIND_MY_DEVICE_FOOTER
FIND_MY_DEVICE_SWITCH
FindMyDevice-Settings
FIND_MY_DEVICE_ON
FIND_MY_DEVICE_OFF
v24@?0@"FMFHandle"8^B16
OFFER_TIME_REMAINING_MINUTE
OFFER_TIME_REMAINING_MINUTES
OFFER_TIME_REMAINING_LESS_THAN_A_MINUTE
OFFER_TIME_REMAINING_HOURS_MINUTES
OFFER_TIME_REMAINING_HOUR_MINUTES
OFFER_TIME_REMAINING_HOURS_MINUTE
OFFER_TIME_REMAINING_HOUR_MINUTE
v16@?0@"NSError"8
GENERIC_ALERT_TITLE
GENERIC_ALERT_TEXT
hashedDSID
REMOVE_FOLLOWER
hashedDSID = %@
v24@?0@"NSDictionary"8@"NSError"16
v16@?0@"NSString"8
v24@?0Q8@"NSError"16
FMDUIFMIPiCloudSettingsViewController
/System/Library/PrivateFrameworks/FindMyDeviceUI.framework/FindMyDeviceUI
{?=d^{__CFString}q^{__CFString}BB}
Image
{?=dq^{__CFString}BB}
#%02lX%02lX%02lX
bg_grid
locatingInProgressChanged
LOCATING
LOCATION_NOT_AVAILABLE
person_noloc
profile
ActiveDeviceLinkNameKey
ActiveDeviceLinkDetailsKey
FROM_TITLE
PSFollowerDetailsTitleTextColorKey
v12@?0B8
FMFMapViewController_iPad
FMFMapViewController_iPhone
AB_CHANGED_NOTIFICATION
MAP_TYPE_DEFAULT_KEY
DIRECTIONS
fmf1://friend/
identifier
%@%@
fmf1://friends/
v24@?0@"NSSet"8@"NSError"16
FMFMapViewController.m
FIXME: Test this code path.  As of Whitetail MapKit was never calling this method and it was just added for protocol conformance.
person
refresh
ACCESSIBILITY_REFRESH_BUTTON_VALUE_REFRESHING
ACCESSIBILITY_REFRESH_BUTTON_VALUE_NOT_REFRESHING
ACCESSIBILITY_REFRESH_BUTTON_LABEL
ACCESSIBILITY_REFRESH_BUTTON_HINT
FMFMapOptions
v24@?0@"NSSet"8@"UIEvent"16
fmfAnnotation
%@, %@
com.apple.icloud.fmfd
FMFTitleView: Error getting pretty name for handle %@
No reason to show internet unavailable alert.
FMFLocationSharingViewController: viewDidLoad
FMFLocationSharingViewController: viewWillAppear
FMFLocationSharingViewController: viewDidAppear
FMFLocationSharingViewController: specifiers to show %ld
Preference change failed because of error - %@
Preferences setHideMyLocationEnabled: %@
Error finding specifier in _showHandleDetails: %@
_showHandleDetails: %@
_pushAddressBookUIForHandle: %@
Cannot remove follower due to restrictions.
Removing Share My Location For Family Member: %@ %@
Removing Share My Location For Actual Handle: %@ %@
Removing Share My Location Followers: %@
Cannot add follower due to restrictions.
hashed: %@ %@
hashed: %@
Starting Share My Location For Family Member: %@ %@
_meDeviceSpecifierWasTapped
_findMyDeviceSpecifierWasTapped
Received server error: %@
Updated network reachability status, Is reachable: %d
Cannot switch active device. Restrictions are on.
Error while setting active device. Error - %@
No FMFSession instance available.
FMFMonogramUtility monogramImageOfDiameterForContact: %@
FMFMonogramUtility: Record found, using %@
FMFMonogramUtility: No Record, using placeholder
FMFMonogramUtility: Using cached image %@
No handles received from service yet.
No location received from service yet.
Updating labels for FMFNoLocationView isLocating: %d handles: %@
FMFMapViewController: fmf_dismissModalViewController
FMFMapViewController: fmf_dismissModalViewController completed
DEALLOC_MAPVIEW
cachedMapView = %@
Creating no location view
open URL for handles: %@
Received application did become active notification, adding handles to session to kick a refresh cycle
Saving cached map
mapView = %@
enablePreloadedHandles (%@)
updateNoLocationView appearing(%d) canShowNoLocation (%d)
Setting no location view visible: %d
FMFMapViewController : Animating map
FMFMapViewController : Appearing : Animating no location view %f
FMFMapViewController : Animating no location view %f
FMFMapViewController : Not animating map
updateMapWithNewLocation location(%d) existingLocation(%d)
Error refreshing handles: %@ error: %@
Opening Map Items in Maps: %@
Error opening map items in maps: %@
Getting directions in Maps from %@ to %@
Error opening map directions
FMFMapViewController: dismiss %@
FMFMapViewController: mapTypeChanged %lu
Start showing location for handles: %@
Stop showing location for handles: %@
zoomAndSelectHandle: location not found for handle: %@
mapViewDidFinishRenderingMap
locatingInProgressChanged in FMFRefreshBarButtonItem
FMFMapOptionsViewController: viewDidLoad
FMFMapOptionsViewController: newMapType %lu
Not zooming due to invalid region (0,0).
FMMapViewDelegateInternal: camera updated %@
zoomToFitAnnotationsForMapView
FMFMapViewDelegateInternal: zoomToFitAnnotationsForMapView new camera %@
FMMapViewDelegateInternal: before top: %f, left: %f, right: %f, bottom: %f
FMMapViewDelegateInternal: after top: %f, left: %f, right: %f, bottom: %f
Creating shared instance of FMFMapImageCache
?333333
(@-C
FMFSpecifierProvider
AAUISpecifierProvider
NSObject
FMFMapUtilities
FMFTitleView
FMFNoNetworkAlertInfo
FMFNoNetworkAlert
FMFLocationSharingViewController
FMFSessionDelegateInternal
FMFSessionDelegate
FMFMonogramUtility
FMFNoLocationView
ActiveDeviceLinkCell
FMFTintedActivityIndicatorView
FollowerDetailsLinkCell
FMFModal
FMFMapViewController
FMFMapViewDelegateInternalDelegate
MKUserTrackingView
FMFNoLocationViewDelegate
FMFMapOptionsViewControllerDelegate
FrameExtensions
FMFRefreshWrapperButton
FMFRefreshBarButtonItem
FMFMapOptionsViewController
FMFMapViewDelegateInternal
UIGestureRecognizerDelegate
MKMapViewDelegate
FMFWildcardGestureRecognizer
FMFMapImageCache
init
shouldShowLocationSharingSpecifier
bundleForClass:
localizedStringForKey:value:table:
preferenceSpecifierNamed:target:set:get:detail:cell:edit:
locationSharingSpecifierWasTapped:
setControllerLoadAction:
setIdentifier:
imageNamed:inBundle:
setProperty:forKey:
shouldEnableLocationSharingSpecifier
arrayWithObjects:count:
setSpecifier:
delegate
specifierProvider:showViewController:
isAccountInGrayMode
locationServicesDisabledByRestrictions
containsObject:
accountManager
accounts
objectForKeyedSubscript:
aa_isSuspended
aa_isPrimaryEmailVerified
aa_repairState
unsignedIntegerValue
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
initWithAccountManager:
setDelegate:
specifiers
setSpecifiers:
handleURL:
T@"<AAUISpecifierProviderDelegate>",W,N
T@"NSArray",C,N
setAccountManager:
.cxx_destruct
_delegate
_specifiers
_accountManager
T@"AIDAAccountManager",&,N,V_accountManager
T@"<AAUISpecifierProviderDelegate>",W,N,V_delegate
T@"NSArray",C,N,V_specifiers
countByEnumeratingWithState:objects:count:
coordinate
initWithLatitude:longitude:
centerCoordinate
distanceFromLocation:
regionForAnnotations:
mapRectForCoordinateRegion:
doNotAnimateToNewLocation:forMapView:
loadNibNamed:owner:options:
lastObject
setLocation:
_updateLabels:
locationShortAddressWithAge
subtitleLabel
setText:
location
titleBottomConstraint
setConstant:
sharedInstance
handle
titleLabel
getPrettyNameForHandle:completion:
initFromNib
updateLocation:
setTitleLabel:
setSubtitleLabel:
setTitleBottomConstraint:
_titleLabel
_subtitleLabel
_titleBottomConstraint
_location
T@"UILabel",&,N,V_titleLabel
T@"UILabel",&,N,V_subtitleLabel
T@"NSLayoutConstraint",&,N,V_titleBottomConstraint
T@"FMFLocation",&,N,V_location
title
setTitle:
message
setMessage:
actionURL
setActionURL:
_title
_message
_actionURL
T@"NSString",&,N,V_title
T@"NSString",&,N,V_message
T@"NSURL",&,N,V_actionURL
reasonForNoInternet
alertInfoForInternetUnavailableReason:
alertControllerWithTitle:message:preferredStyle:
defaultWorkspace
openSensitiveURL:withOptions:
actionWithTitle:style:handler:
addAction:
isAirplaneModeEnabled
isGlobalCellularEnabled
deviceSupportsCellularData
fm_wifiToWLAN
URLWithString:
isEnabled
refresh
airplaneMode
newAlertController
setGlobalCellularEnabled:
_globalCellularEnabled
globalCellularEnabled
TB,N,GisGlobalCellularEnabled,V_globalCellularEnabled
preferredContentSizeCategory
dictionary
dealloc
viewDidLoad
specifiersQueue
viewWillAppear:
startMonitoring
updateFindMyDeviceStatus
_loadFamilyMembers:
reloadSpecifiers
defaultCenter
contactStoreDidChange:
addObserver:selector:name:object:
viewDidAppear:
viewWillDisappear:
removeObserver:name:object:
viewDidDisappear:
stopMonitoring
reloadSpecifiersOnMainQueue
FMFAllowed
areSpecifiersLoaded
_findMyDeviceSpecifiers
addObjectsFromArray:
deviceSpecifiers
familySpecifiers
followersSpecifiers
areMeDeviceInfoLoaded
emptyGroupSpecifier
addObject:
_defaultSpecifiers
count
getAllDevices
FMFRestricted
locationServicesEnabled
isThisDevice
_setShareSwitchEnabled:forSpecifier:
_shareSwitchEnabled:
numberWithBool:
meDeviceChangePending
deviceName
isAutoMeCapable
numberWithDouble:
modelSpecificLocalizedStringKeyForKey:
saveActiveDeviceSelection
setButtonAction:
setDeviceSpecifiers:
setMeDevices:
setAreMeDeviceInfoLoaded:
getHandlesFollowingMyLocation
sortedFollowersWithCombinedRecords:
setAllFollowersHandles:
setFamilySpecifiers:
array
allFollowersHandles
hashedFamilyDsids
hashedDSID
_specifierForHandle:
enumerateObjectsUsingBlock:
setFollowersHandles:
setFollowersSpecifiers:
setAreSpecifiersLoaded:
getActiveLocationSharingDevice:
_findMyDeviceStatus:
_findMyDeviceSpecifierWasTapped:
isFindMyDeviceOn
dictionaryWithCapacity:
setWithCapacity:
identifierForHandle:
setObject:forKey:
allValues
setByAddingObjectsFromArray:
allObjects
prettyNameCompare:
sortedArrayUsingSelector:
isActiveDevice
prettyName
monogramForHandle:
_showHandleDetails:
getOfferExpirationForHandle:groupId:callerId:
date
laterDate:
compare:
timeIntervalSinceNow
offerTimeRemaining:
initWithStyle:diameter:
recordId
descriptorForRequiredKeysIncludingImage:
getContactForHandle:keysToFetch:
monogramForContact:
silhouetteMonogram
setFormatterBehavior:
setNumberStyle:
stringFromNumber:
formatStringForHours:minutes:
numberWithInteger:
stringWithFormat:
boolValue
genericAlertController
displayAlertController:
setHideMyLocationEnabled:completion:
isNetworkUp
genericErrorAlert
presentedViewController
setGenericErrorAlert:
presentViewController:animated:completion:
length
isMyLocationEnabled
indexOfObject:
followersHandles
objectAtIndex:
setLastSelectedHandle:
identifier
_pushAddressBookUIForHandle:
_isHandleAFollower:
isFamilyMember
descriptorForRequiredKeys
viewControllerForContact:
setAllowsActions:
allHandlesMatchingABCardForSelectedHandle:
emailAddresses
value
isEqualToString:
phoneNumbers
stringValue
phoneNumberMatches:phone2:
highlightPropertyWithKey:identifier:
contentViewController
addRemoveActionToContactViewController:
addShareActionToContactViewController:
navigationController
pushViewController:animated:
initWithLabel:value:
setEmailAddresses:
initWithStringValue:
setPhoneNumbers:
viewControllerForUnknownContact:
_isFamilyMemberAFollower:
handleWithId:
canShareLocationWithHandle:groupId:callerId:
valueForKey:
alphanumericCharacterSet
invertedSet
stringByKeepingCharacterSet:inString:
reverseString:
substringWithRange:
rangeOfCharacterFromSet:
stringByReplacingCharactersInRange:withString:
string
appendString:
getContactForHandle:
removeFollower:
cardBottomGroup
addActionWithTitle:target:selector:inGroup:destructive:
shareMyLocation:
lastSelectedHandle
_followerHandleWithHashedDSID:
dsid
setWithObject:
stopSharingMyLocationWithHandles:groupId:callerId:completion:
popViewControllerAnimated:
predicateWithFormat:
filteredArrayUsingPredicate:
sendFriendshipOfferToHandles:groupId:callerId:endDate:completion:
iCloudAccountNameWithCompletion:
aa_primaryAppleAccount
setAccount:
_loadSpecifiers
forceRefresh
meDevices
setMeDeviceChangePending:
setActiveDevice:completion:
setIsFindMyDeviceOn:
fmipStateWithCompletion:
postNotificationName:object:
traitCollectionDidChange:
setIsAccessibilitySize:
didReceiveLocation:
didFailToFetchLocationForHandle:withError:
connectionError:
didReceiveFriendshipRequest:
didStartSharingMyLocationWithHandle:
didStopSharingMyLocationWithHandle:
didStartAbilityToGetLocationForHandle:
didStopAbilityToGetLocationForHandle:
didUpdateHidingStatus:
sendMappingPacket:toHandle:
mappingPacketProcessingCompleted:
didFailToHandleMappingPacket:error:
didChangeActiveLocationSharingDevice:
didUpdateActiveDeviceList:
didUpdatePendingOffersForHandles:
didReceiveServerError:
didUpdateFavoriteHandles:
didUpdateFences:
didUpdatePreferences:
networkReachabilityUpdated:
removeAllFriendLocationsFromMap
useFamilyCirclePhotos
_loadFamilyMemberPhotos
noMeDeviceSelected:
_showFamilyMemberDetails:
_meDeviceSpecifierWasTapped:
dsidToFamilyPhoto
setDsidToFamilyPhoto:
setHashedFamilyDsids:
setIsMyLocationEnabled:
familyMembers
setFamilyMembers:
setUseFamilyCirclePhotos:
useFamilyCirclePhotosLoaded
setUseFamilyCirclePhotosLoaded:
isAccessibilitySize
setSpecifiersQueue:
_isMyLocationEnabled
_useFamilyCirclePhotos
_useFamilyCirclePhotosLoaded
_areSpecifiersLoaded
_areMeDeviceInfoLoaded
_isFindMyDeviceOn
_meDeviceChangePending
_isAccessibilitySize
_followersSpecifiers
_familySpecifiers
_deviceSpecifiers
_allFollowersHandles
_followersHandles
_dsidToFamilyPhoto
_hashedFamilyDsids
_lastSelectedHandle
_familyMembers
_genericErrorAlert
_specifiersQueue
_meDevices
T@"NSArray",&,N,V_followersSpecifiers
T@"NSArray",&,N,V_familySpecifiers
T@"NSArray",&,N,V_deviceSpecifiers
T@"NSArray",&,N,V_allFollowersHandles
T@"NSArray",&,N,V_followersHandles
T@"NSMutableDictionary",&,N,V_dsidToFamilyPhoto
T@"NSArray",&,N,V_hashedFamilyDsids
T@"FMFHandle",&,N,V_lastSelectedHandle
TB,N,V_isMyLocationEnabled
T@"NSArray",&,N,V_familyMembers
T@"UIAlertController",&,N,V_genericErrorAlert
TB,N,V_useFamilyCirclePhotos
TB,N,V_useFamilyCirclePhotosLoaded
TB,N,V_areSpecifiersLoaded
TB,N,V_areMeDeviceInfoLoaded
TB,N,V_isFindMyDeviceOn
TB,N,V_meDeviceChangePending
TB,N,V_isAccessibilitySize
T@"NSObject<OS_dispatch_queue>",&,N,V_specifiersQueue
T@"NSSet",&,N,V_meDevices
setEvictsObjectsWithDiscardedContent:
removeAllObjects
systemFontOfSize:weight:design:
monogramImageOfDiameter:forContact:monogramStyle:tintColor:customFont:isPersonImage:
hexStringFromColor:
value:withObjCType:
contactImageCache
contactStatusCache
objectForKey:
monogrammerWithDiameter:style:useTintColor:customFont:
monogramForContact:isContactImage:
placeholderContactImageOfDiameter:monogramStyle:useTintColor:
isMainThread
monogramsWithTint:
setFont:
CGColor
clearMonogramCache
monogramImageOfDiameter:forContact:useTintColor:useCustomFont:isPersonImage:
initWithFrame:
bounds
setBlur:
colorWithPatternImage:
setBackgroundColor:
addSubview:
sendSubviewToBack:
offlineProfileImage
initWithImage:
setOfflineProfileImageView:
setPersonImageView:
setDetailsLabel:
systemFontOfSize:
setTextAlignment:
colorWithRed:green:blue:alpha:
setTextColor:
setInsetView:
clearColor
addLayoutConstraints
setAlpha:
updateLabel
updatePersonImageViewImage
updateLabelNotification:
setTranslatesAutoresizingMaskIntoConstraints:
constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:
addConstraint:
setTopInsetConstraint:
setBottomInsetConstraint:
updateConstriantsForInsets
edgeInsets
blockLabelUpdates
handlesShowingLocations
cachedLocationForHandle:
isLocatingInProgress
detailsLabel
sizeToFit
invalidateIntrinsicContentSize
alpha
personImageView
setImage:
setOfflineProfileImage:
accessibilityLabel
setBlockLabelUpdates:
topInsetConstraint
bottomInsetConstraint
offlineProfileImageView
blur
insetView
_blockLabelUpdates
_topInsetConstraint
_bottomInsetConstraint
_offlineProfileImage
_offlineProfileImageView
_personImageView
_detailsLabel
_blur
_insetView
T@"NSLayoutConstraint",&,N,V_topInsetConstraint
T@"NSLayoutConstraint",&,N,V_bottomInsetConstraint
T@"UIImage",&,N,V_offlineProfileImage
T@"UIImageView",&,N,V_offlineProfileImageView
T@"UIImageView",&,N,V_personImageView
T@"UILabel",&,N,V_detailsLabel
T@"UIView",&,N,V_blur
T@"UIView",&,N,V_insetView
T@"<FMFNoLocationViewDelegate>",W,N,V_delegate
TB,N,V_blockLabelUpdates
initWithStyle:reuseIdentifier:specifier:
setupSubviews
setupConstraints
refreshCellContentsWithSpecifier:
fromLabel
propertyForKey:
deviceNameLabel
text
detailsHeightContraint
setActive:
setNeedsLayout
userInterfaceLayoutDirection
setFromLabel:
preferredFontForTextStyle:
setDeviceNameLabel:
tableCellGrayTextColor
contentView
setContentHuggingPriority:forAxis:
setContentCompressionResistancePriority:forAxis:
leadingAnchor
layoutMarginsGuide
constraintEqualToAnchor:
topAnchor
constraintEqualToAnchor:constant:
trailingAnchor
bottomAnchor
setNumberOfLines:
heightAnchor
constraintEqualToConstant:
setDetailsHeightContraint:
layoutSubviews
specifier
setHidden:
setCellEnabled:
cellStyle
_fromLabel
_deviceNameLabel
_detailsHeightContraint
T@"UILabel",&,N,V_fromLabel
T@"UILabel",&,N,V_deviceNameLabel
T@"NSLayoutConstraint",&,N,V_detailsHeightContraint
awakeFromNib
tintColor
setColor:
tintColorDidChange
textLabel
labelColor
detailTextLabel
view
blackColor
setAutoresizingMask:
setTag:
setFrame:
addChildViewController:
fmf_afterPresentAnimation:
animateWithDuration:animations:
willMoveToParentViewController:
fmf_dimmingViewForViewController:
fmf_afterDismissAnimation:
animateWithDuration:animations:completion:
parentViewController
viewWithTag:
didMoveToParentViewController:
removeFromSuperview
removeFromParentViewController
fmf_presentModalViewController:
fmf_dismissModalViewController:
fmfOrangeColor
initWithNibName:bundle:
initializeDefaults
set_preloadedHandles:
setIsSimpleMap:
removeObserver:
destroySession
mapView
setLargeAnnotationBorderVisible:
setThickAnnotationBorder:
_authorizeMonitoringLocation
setShouldZoomToFitNewLocations:
applicationDidBecomeActive:
updateAllAnnotationsDueToAddressBookUpdate
mapTypeChangedNotification:
setEdgeInsets:
authorizationStatus
requestWhenInUseAuthorization
loadView
set_isRenderingInitialMap:
isSimpleMap
frame
setMapView:
setShowsUserLocation:
cachedMapView
refreshButtonTapped:
initWithTarget:action:
setRefreshButton:
setImageInsets:
titleViewForSelectedHandle
navigationItem
setTitleView:
setRightBarButtonItem:
setShowsAttribution:
_setEdgeInsets:
loadDelegate
enablePreloadedHandles
setupToolbarItems
getDirections
initWithTitle:style:target:action:
setDirectionsBarButtonItem:
buttonWithType:
infoButtonTapped:
addTarget:action:forControlEvents:
initWithCustomView:
setInfoBarButtonItem:
initWithBarButtonSystemItem:target:action:
setWidth:
userTrackingButtonItem
setToolbarItems:
setNoLocationView:
mapViewDelegate
setIsMapCenteringDisabled:
setCachedMapView:
buttonWithUserTrackingView:
setUserTrackingButton:
_updateLocationButtonEnabled
updateUserTrackingButtonState
_internalHandlesShowingLocations
componentsJoinedByString:
setViewWillAppearCalled:
cachedMapForHandles:
isToolbarHidden
setWasToolbarPreviouslyHidden:
setToolbarHidden:animated:
set_blockDidReceiveAnimation:
viewWillAppearWillMoveToWindowSetup
defaultMapType
setMapType:
addHandlesToSession
loadCachedLocationsForHandles
shouldZoomToFitMeAndLocations
zoomToFitAnnotationsForMapView:includeMe:disallowAnimation:
updateNoLocationView:
hideCachedMap
noLocationView
_isRenderingInitialMap
cacheMap:forHandles:
wasToolbarPreviouslyHidden
removeHandlesFromSession
_refreshingIsPaused
fmfSession
addHandles:
removeHandles:
invalidate
initWithDelegate:mapView:
setMapViewDelegate:
isMapCenteringDisabled
_preloadedHandles
getHandlesSharingLocationsWithMe
_enablePreloadedHandles:
getHandlesSharingLocationsWithMe:
startShowingLocationsForHandles:
set_internalHandlesShowingLocations:
updateMapWithNewLocation:animated:
updateRefreshForLocation:
_updateTitleViewLocation:
didReceiveMemoryWarning
viewWillTransitionToSize:withTransitionCoordinator:
viewWillLayoutSubviews
viewWillAppearCalled
canShowNoLocation
mapHasUserLocations
performWithoutAnimation:
annotations
locationOnMapForHandle:enforceServerId:
removeAnnotation:
serverId
isLocationAlreadyOnMap:
addAnnotation:
selectAnnotationIfSingleFriend:
performSelector:withObject:afterDelay:
shouldZoomToFitNewLocations
_blockDidReceiveAnimation
updateOverlaysForAnnotationMove:mapView:
canSelectAnnotation:
singleAnnotationOnMap
selectAnnotation:
deselectAnnotation:animated:
handles
setWithSet:
refreshLocationForHandles:callerId:priority:completion:
initWithCoordinate:addressDictionary:
initWithPlacemark:
setName:
openMapsWithItems:launchOptions:
titleView
directionsBarButtonItem
setEnabled:
mapItemForCurrentLocation
dictionaryWithObjectsAndKeys:
arrayWithObjects:
presentMapOptionsModal:
traitCollection
traitCollectionWithVerticalSizeClass:
containsTraitsInCollection:
traitCollectionWithHorizontalSizeClass:
setMapOptionsVC:
isCompact
setModalPresentationStyle:
popoverPresentationController
paneSize
setPopoverContentSize:
infoBarButtonItem
setBarButtonItem:
mapOptionsVC
presentingViewController
dismissViewControllerAnimated:completion:
setMapTypeLoaded:
setDefaultMapType:
standardUserDefaults
numberWithUnsignedInteger:
synchronize
mapTypeLoaded
mapTypeChanged:
set_refreshingIsPaused:
deselectAllAnnotations
selectAnnotationIfSingleForMac
mutableCopy
minusSet:
stopShowingLocationsForHandles:
removeAnnotationsFromMapForHandle:
refreshButton
removeLocationForHandle:
zoomToFitLocation:forMapView:
initWithDelegate:
setFmfSession:
sessionContainsHandle:
didReceiveLocationForDelegateCallback:
addLocation:
userTrackingButton
_setState:
setCurrentTrackingMode:
setShouldZoomToFitMeAndLocations:
setUserTrackingMode:animated:
zoomToFit
currentTrackingMode
headingAvailable
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
isCurrentlyRotated
fmfMapViewController:didSelectHandle:
fmfMapViewController:didDeselectHandle:
fmfMapViewController:regionWillChangeAnimated:
fmfMapViewController:regionDidChangeAnimated:
fmfMapViewController:didReceiveLocation:
annotationContactForHandle:
annotationImageSize
_internalAnnotationTintColor
setIsBorderEnabled:
tintedImageWithColor:
_selectedHandleAnnotation
_updateDirectionsButtonEnabled
selectedAnnotations
annotationTintColor
addressBookDidChange
hasUserLocation
didSelectLocation:
didDeselectLocation:
regionWillChangeAnimated:
regionDidChangeAnimated:
reZoomToFit
didUpdateUserLocation:
mapViewDidFinishRenderingMap
alwaysShowAccuracy
annotationImageForAnnotation:andHandle:
userTrackingMode
_setUserTrackingMode:animated:fromTrackingButton:
canRotateForHeading
hasRenderedSomething
postsMapViewInitialRenderingNotification
openInMapsButtonTapped:
_dismiss:
initSimpleMapWithDelegate:handles:
initWithDelegate:handles:
openInAppURL
stopRefreshingLocations
resumeRefreshingLocations
setShowFloatingMapLocationButton:
setHandlesShowingLocations:
zoomToFit:
zoomAndSelectHandle:
showFloatingMapLocationButton
setAnnotationTintColor:
setAlwaysShowAccuracy:
setUserTrackingButtonItem:
_shouldZoomToFitNewLocations
_shouldZoomToFitMeAndLocations
_showFloatingMapLocationButton
_isMapCenteringDisabled
_isSimpleMap
__refreshingIsPaused
__blockDidReceiveAnimation
__isRenderingInitialMap
_viewWillAppearCalled
_alwaysShowAccuracy
_wasToolbarPreviouslyHidden
_mapTypeLoaded
_mapView
_annotationTintColor
_fmfSession
_mapViewDelegate
__preloadedHandles
_noLocationView
__internalHandlesShowingLocations
_mapOptionsVC
_titleView
_userTrackingButtonItem
_directionsBarButtonItem
_infoBarButtonItem
_refreshButton
_cachedMapView
_defaultMapType
_userTrackingButton
_currentTrackingMode
_edgeInsets
T@"MKMapView",&,N,V_mapView
T@"FMFSession",&,N,V_fmfSession
T@"FMFMapViewDelegateInternal",&,N,V_mapViewDelegate
T@"NSSet",&,N,V__preloadedHandles
TB,N,V_isSimpleMap
T@"FMFNoLocationView",&,N,V_noLocationView
T@"NSSet",&,N,V__internalHandlesShowingLocations
TB,N,V__refreshingIsPaused
TB,N,V__blockDidReceiveAnimation
TB,N,V__isRenderingInitialMap
TB,N,V_viewWillAppearCalled
TB,N,V_alwaysShowAccuracy
TB,N,V_wasToolbarPreviouslyHidden
T@"FMFMapOptionsViewController",&,N,V_mapOptionsVC
T@"FMFTitleView",&,N,V_titleView
T@"UIBarButtonItem",&,N,V_userTrackingButtonItem
T@"UIBarButtonItem",&,N,V_directionsBarButtonItem
T@"UIBarButtonItem",&,N,V_infoBarButtonItem
T@"FMFRefreshBarButtonItem",&,N,V_refreshButton
T@"UIImageView",&,N,V_cachedMapView
TQ,N,V_defaultMapType
TB,N,V_mapTypeLoaded
T@"_MKUserTrackingButton",&,N,V_userTrackingButton
Tq,N,V_currentTrackingMode
T@"<FMFMapViewControllerDelegate>",W,N,V_delegate
TB,N,V_shouldZoomToFitNewLocations
TB,N,V_shouldZoomToFitMeAndLocations
TB,N,V_showFloatingMapLocationButton
TB,N,V_isMapCenteringDisabled
T{UIEdgeInsets=dddd},N,V_edgeInsets
T@"NSSet",C,N
T@"UIColor",C,N,V_annotationTintColor
currentDevice
userInterfaceIdiom
centerHorizontalInView:
centerVerticalInView:
setWrapperInsets:
wrapperInsets
alignmentRectInsets
_wrapperInsets
T{UIEdgeInsets=dddd},N,V_wrapperInsets
imageWithRenderingMode:
initWithActivityIndicatorStyle:
setAiv:
setImageView:
imageView
setWrapperButton:
wrapperButton
localTapped
setCustomView:
superview
widthAnchor
locatingInProgressChanged:
isAnimating
startAnimating
setAccessibilityValue:
stopAnimating
_updateLocateInProgress
locations
removeObject:
setLocations:
anyLocationIsUpdating
updateLocations
accessibilityHint
locateNotification
setLocateNotification:
_locations
_wrapperButton
_aiv
_imageView
_locateNotification
T@"FMFRefreshWrapperButton",&,N,V_wrapperButton
T@"FMFTintedActivityIndicatorView",&,N,V_aiv
T@"UIImageView",&,N,V_imageView
T@,&,N,V_locateNotification
T@"NSSet",&,N,V_locations
systemLayoutSizeFittingSize:
topTapView
addGestureRecognizer:
mapAttributionButton
mapAttribution
setAttributedTitle:forState:
mapType
segmentedControl
setSelectedSegmentIndex:
boldSystemFontOfSize:
dictionaryWithObjects:forKeys:count:
mapAttributionWithStringAttributes:underlineText:
setMapAttribution:
openURL:withOptions:
selectedSegmentIndex
openInMaps:
attributionButtonPressed:
segmentedControlChanged:
setMapAttributionButton:
setTopTapView:
setSegmentedControl:
bottomWhitePane
setBottomWhitePane:
_mapAttributionButton
_topTapView
_segmentedControl
_bottomWhitePane
_mapAttribution
T@"UIButton",&,N,V_mapAttributionButton
T@"UIView",&,N,V_topTapView
T@"UISegmentedControl",&,N,V_segmentedControl
T@"UIView",&,N,V_bottomWhitePane
T@"MKMapAttribution",&,N,V_mapAttribution
T@"<FMFMapOptionsViewControllerDelegate>",W,N,V_delegate
setGr:
setRespondingToUserTouch:
setTouchesBeganCallback:
endTouches
setTouchesEndedCallback:
selectAnnotation:animated:
dequeueReusableAnnotationViewWithIdentifier:
setTintColor:
setSmallAnnotationIcon:
setLargeAnnotationIcon:
initWithAnnotation:reuseIdentifier:tintColor:
locationShortAddressWithAgeIncludeLocating
setAccessibilityLabel:
setShouldPreventLargeAnnotationState:
annotation
overlays
removeOverlays:
accuracyCircleForLocation:
addOverlay:
slideAnnotation:intoViewIfNeededForMapView:
selectedAnnotationView
setSelectedAnnotationView:
respondingToUserTouch
region
convertCoordinate:toPointToView:
setLastUserLocationCoordinate:
initWithCircle:
fmfOverlayColorSatellite
fmfOverlayColor
setFillColor:
colorWithAlphaComponent:
horizontalAccuracy
circleWithCenterCoordinate:radius:
_moveCenterByOffset:from:mapView:
convertPoint:toCoordinateFromView:
setCenterCoordinate:animated:
regionIsValid:
edgeInsetsWithMinApplied:
mapRectThatFits:edgePadding:
_cameraLookingAtMapRect:forViewSize:
setCamera:animated:
firstObject
mapRectMakeWithRadialDistanceForCoordinate:andRadius:
gestureRecognizerShouldBegin:
gestureRecognizer:shouldRecognizeSimultaneouslyWithGestureRecognizer:
gestureRecognizer:shouldRequireFailureOfGestureRecognizer:
gestureRecognizer:shouldBeRequiredToFailByGestureRecognizer:
gestureRecognizer:shouldReceiveTouch:
gestureRecognizer:shouldReceivePress:
gestureRecognizer:shouldReceiveEvent:
mapView:regionWillChangeAnimated:
mapView:regionDidChangeAnimated:
mapViewDidChangeVisibleRegion:
mapViewWillStartLoadingMap:
mapViewDidFinishLoadingMap:
mapViewDidFailLoadingMap:withError:
mapViewWillStartRenderingMap:
mapViewDidFinishRenderingMap:fullyRendered:
mapView:viewForAnnotation:
mapView:didAddAnnotationViews:
mapView:annotationView:calloutAccessoryControlTapped:
mapView:didSelectAnnotationView:
mapView:didDeselectAnnotationView:
mapViewWillStartLocatingUser:
mapViewDidStopLocatingUser:
mapView:didUpdateUserLocation:
mapView:didFailToLocateUserWithError:
mapView:annotationView:didChangeDragState:fromOldState:
mapView:didChangeUserTrackingMode:animated:
mapView:rendererForOverlay:
mapView:didAddOverlayRenderers:
mapView:viewForOverlay:
mapView:didAddOverlayViews:
mapView:clusterAnnotationForMemberAnnotations:
lastUserLocationCoordinate
_respondingToUserTouch
_selectedAnnotationView
_lastUserLocationCoordinate
T@"<FMFMapViewDelegateInternalDelegate>",W,N,V_delegate
TB,N,V_respondingToUserTouch
T@"FMFWildcardGestureRecognizer",&,N,V_gr
T@"FMAnnotationView",N,V_selectedAnnotationView
T@"MKMapView",N,V_mapView
T{CLLocationCoordinate2D=dd},N,V_lastUserLocationCoordinate
setCancelsTouchesInView:
touchesBegan:withEvent:
touchesCancelled:withEvent:
touchesEnded:withEvent:
touchesMoved:withEvent:
reset
ignoreTouch:forEvent:
canPreventGestureRecognizer:
touchesBeganCallback
touchesEndedCallback
_touchesBeganCallback
_touchesEndedCallback
T@?,C,N,V_touchesBeganCallback
T@?,C,N,V_touchesEndedCallback
_keyForHandles:
_imageForMap:
_cache
sharedApplication
statusBarOrientation
localizedCaseInsensitiveCompare:
sortDescriptorWithKey:ascending:selector:
sortedArrayUsingDescriptors:
_orientationKey
stringByAppendingString:
layer
renderInContext:
set_cache:
setCountLimit:
__cache
T@"NSCache",&,N,V__cache
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@24@0:8@16
v24@0:8@16
@24@0:8@"AIDAAccountManager"16
@"<AAUISpecifierProviderDelegate>"16@0:8
v24@0:8@"<AAUISpecifierProviderDelegate>"16
@"NSArray"16@0:8
v24@0:8@"NSArray"16
B24@0:8@"NSDictionary"16
v16@0:8
@"<AAUISpecifierProviderDelegate>"
@"NSArray"
@"AIDAAccountManager"
{?={CLLocationCoordinate2D=dd}{?=dd}}24@0:8@16
{?={?=dd}{?=dd}}48@0:8{?={CLLocationCoordinate2D=dd}{?=dd}}16
B40@0:8{CLLocationCoordinate2D=dd}16@32
@"UILabel"
@"NSLayoutConstraint"
@"FMFLocation"
@"NSString"
@"NSURL"
@24@0:8Q16
v20@0:8B16
v32@0:8@16@24
v24@0:8@"FMFLocation"16
v32@0:8@"FMFHandle"16@"NSError"24
v24@0:8@"NSError"16
v24@0:8@"FMFFriendshipRequest"16
v24@0:8@"FMFHandle"16
v32@0:8@"NSString"16@"FMFHandle"24
v24@0:8@"NSString"16
v32@0:8@"NSString"16@"NSError"24
v24@0:8@"FMFDevice"16
v24@0:8@"NSSet"16
v24@0:8@"NSDictionary"16
@24@0:8d16
@32@0:8q16q24
B32@0:8@16@24
@32@0:8@16@24
@"NSMutableDictionary"
@"FMFHandle"
@"UIAlertController"
@"NSObject<OS_dispatch_queue>"
@"NSSet"
@52@0:8d16@24@32B40^B44
@64@0:8d16@24q32@40@48^B56
@40@0:8d16q24@32
@48@0:8d16q24@32@40
^{__CFString=}24@0:8@16
@48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v24@0:8d16
@"<FMFNoLocationViewDelegate>"
@"UIImage"
@"UIImageView"
@"UIView"
q16@0:8
@40@0:8q16@24@32
{CGSize=dd}16@0:8
{UIEdgeInsets=dddd}16@0:8
v24@0:8@"MKUserLocation"16
B24@0:8@"<MKAnnotation>"16
@"UIImage"32@0:8@"FMFLocation"16@"FMFHandle"24
@"UIColor"16@0:8
v32@0:8q16B24B28
@"NSSet"16@0:8
v24@0:8Q16
@"MKMapView"16@0:8
v48@0:8{UIEdgeInsets=dddd}16
v40@0:8{CGSize=dd}16@32
v28@0:8@16B24
@28@0:8@16B24
v24@0:8q16
@"<FMFMapViewControllerDelegate>"
@"MKMapView"
@"UIColor"
@"FMFSession"
@"FMFMapViewDelegateInternal"
@"FMFNoLocationView"
@"FMFMapOptionsViewController"
@"FMFTitleView"
@"UIBarButtonItem"
@"FMFRefreshBarButtonItem"
@"_MKUserTrackingButton"
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
@32@0:8@16:24
@"FMFRefreshWrapperButton"
@"FMFTintedActivityIndicatorView"
@"<FMFMapOptionsViewControllerDelegate>"
@"UIButton"
@"UISegmentedControl"
@"MKMapAttribution"
B24@0:8@"UIGestureRecognizer"16
B32@0:8@"UIGestureRecognizer"16@"UIGestureRecognizer"24
B32@0:8@"UIGestureRecognizer"16@"UITouch"24
B32@0:8@"UIGestureRecognizer"16@"UIPress"24
B32@0:8@"UIGestureRecognizer"16@"UIEvent"24
v40@0:8@16@24@32
v48@0:8@16@24Q32Q40
v36@0:8@16q24B32
v28@0:8@"MKMapView"16B24
v24@0:8@"MKMapView"16
v32@0:8@"MKMapView"16@"NSError"24
@"MKAnnotationView"32@0:8@"MKMapView"16@"<MKAnnotation>"24
v32@0:8@"MKMapView"16@"NSArray"24
v40@0:8@"MKMapView"16@"MKAnnotationView"24@"UIControl"32
v32@0:8@"MKMapView"16@"MKAnnotationView"24
v32@0:8@"MKMapView"16@"MKUserLocation"24
v48@0:8@"MKMapView"16@"MKAnnotationView"24Q32Q40
v36@0:8@"MKMapView"16q24B32
@"MKOverlayRenderer"32@0:8@"MKMapView"16@"<MKOverlay>"24
@"MKOverlayView"32@0:8@"MKMapView"16@"<MKOverlay>"24
@"MKClusterAnnotation"32@0:8@"MKMapView"16@"NSArray"24
v56@0:8{CGPoint=dd}16{CLLocationCoordinate2D=dd}32@48
v32@0:8@16B24B28
{?={?=dd}{?=dd}}40@0:8{CLLocationCoordinate2D=dd}16d32
{UIEdgeInsets=dddd}48@0:8{UIEdgeInsets=dddd}16
B48@0:8{?={CLLocationCoordinate2D=dd}{?=dd}}16
{CLLocationCoordinate2D=dd}16@0:8
v32@0:8{CLLocationCoordinate2D=dd}16
@"<FMFMapViewDelegateInternalDelegate>"
@"FMFWildcardGestureRecognizer"
@"FMAnnotationView"
{CLLocationCoordinate2D="latitude"d"longitude"d}
@?16@0:8
v24@0:8@?16
@"NSCache"
