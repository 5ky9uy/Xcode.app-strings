SleepDaemon
HelloWorld
HDSPHelloWorld
@16@0:8
Querying
HDSPSleepScreenUnlockCount
v8@?0
Activity
Explicit
com.apple.sleepd.cloudkit.reset
DataVersion
CloudStorageDataVersion
LocalDataVersion
v16@?0@"HKSPChange"8
v16@?0@"<HDSPSleepStorageObserver>"8
Local Data: %@
CloudKit Data %@
Data: %@
Local Data
none
CloudKit Data
Data
HDSPSleepScheduleStateChangeReason
HDSPSleepModeChangeReason
sleepIntervalScheduler
@"NAFuture"16@?0@"NSArray"8
SleepDailyAnalyticsReportQuery
com.apple.sleep.analytics-daily.activity
v16@?0@"<HDSPActivity>"8
v32@?0@"HKSleepDaySummaryQuery"8@"NSArray"16@"NSError"24
Analytics
Disabled
@"HDSPSleepStorage"16@?0@"HDSPEnvironment"8
@"HDSPSleepScheduleModelManager"16@?0@"HDSPEnvironment"8
@"HDSPSleepEventScheduler"16@?0@"HDSPEnvironment"8
@"HDSPSleepStoreServer"16@?0@"HDSPEnvironment"8
@"HDSPSleepScheduleStateCoordinator"16@?0@"HDSPEnvironment"8
@"HDSPSleepActionManager"16@?0@"HDSPEnvironment"8
@"HDSPSleepAlarmManager"16@?0@"HDSPEnvironment"8
@"HDSPContextStoreManager"16@?0@"HDSPEnvironment"8
@"HDSPBiomeManager"16@?0@"HDSPEnvironment"8
@"HDSPSleepScheduleModelMigrationManager"16@?0@"HDSPEnvironment"8
@"HDSPNotificationListener"16@?0@"HDSPEnvironment"8
@"HDSPSleepLockScreenManager"16@?0@"HDSPEnvironment"8
@"HDSPSleepWidgetManager"16@?0@"HDSPEnvironment"8
@"HDSPIDSServiceManager"16@?0@"HDSPEnvironment"8
@"HDSPDiagnostics"16@?0@"HDSPEnvironment"8
@"HDSPSystemMonitor"16@?0@"HDSPEnvironment"8
@"HDSPTimeChangeListener"16@?0@"HDSPEnvironment"8
@"HKSPSensitiveUIMonitor"16@?0@"HDSPEnvironment"8
@"HDSPSleepModeManager"16@?0@"HDSPEnvironment"8
v16@?0@"<HDSPChargingReminderStateMachineDelegate>"8
com.apple.healthlite.SleepDetectedActivity
com.apple.healthlite.SleepSessionEndRequest
com.apple.sleep.applaunch.registration
@"<HDSPTimeAsleepTracker>"8@?0
v16@?0@"<HDSPTimeAsleepAnalysis>"8
@"HDSPSleepSessionInterval"16@?0@"<HDSPSleepStage>"8
v24@?0@"NSObject<NSCopying><NSSecureCoding>"8@"NSObject<NSCopying><NSSecureCoding>"16
v16@?0@"_CDContextualChangeRegistration"8
Current State: %@
Current State
HDSPWakeUpResultsNotificationErrorDomain
Query returned data insufficient to attempt wake up result computation
RESULT_NOTIFICATION_TITLE
HDSPWakeUpResultsNotificationLocalizer.m
This method can only localized content for One Day Wake Up Results; received category %@
This method can only localized content for One Week Wake Up Results; received category %@
One Week goal achieved count must be 3 or 4; received %@
This method can only localized content for Two Week Wake Up Results; received category %@
Daily sleep duration goal requires OneDay category
Weekly goal achieved requires OneWeek or TwoWeek category
WAKE_UP_RESULT_ONE_DAY_DURATION
WAKE_UP_RESULT_THREE_DAY_GOAL_ACHIEVED
WAKE_UP_RESULT_FOUR_DAY_GOAL_ACHIEVED
WAKE_UP_RESULT_TWO_WEEK_GOAL_ACHIEVED
%@_%ld
%@_%ld_SUBSTITUTION
%@_NAME_%ld
%@_NAME_%ld_SUBSTITUTION
com.apple.sleepd.diagnostics
com.apple.sleepd
<none>
v16@?0@"<HDSPDiagnosticsProvider>"8
ActivityDetecting
com.apple.sleepd.contextstore-registration
v24@?0@"NSString"8@"NSDictionary"16
v16@?0@"<HDSPSleepSessionObserver>"8
HDSPSleepLockStateMachineLaunchContext
WaitingForRetry
ActivityTracking
Demo
HDSPUnprocessedSessions
SleepSessions.data
@16@?0@"HDSPSleepSession"8
v24@?0@8@"NSError"16
v16@?0@"NSArray"8
v16@?0@8
@"NAFuture"16@?0@"HDSPSleepSession"8
ActivityAfterWakeUpTracking
com.apple.sleep.BatteryMonitoring.activity
B16@?0@"HKSleepDaySummary"8
v32@?0@"NSDateInterval"8Q16^B24
v16@?0@"HKSleepPeriodSegment"8
@16@?0@"HKSPAnalyticsWindDownEventData"8
not set
female
male
other
v32@?0@"HKSleepPeriodSegment"8Q16^B24
v32@?0@"HKSleepPeriod"8Q16^B24
Waiting
NotOnboarded
Bedtime
WaitingForWakeUp
HDSPEnvironmentContext
@"HDSPSleepTrackingManager"16@?0@"HDSPEnvironment"8
@"HDSPGoodMorningAlertManager"16@?0@"HDSPEnvironment"8
@"HDSPChargingReminderManager"16@?0@"HDSPEnvironment"8
@"HDSPWakeDetectionManager"16@?0@"HDSPEnvironment"8
@"HDSPWakeUpResultsNotificationManager"16@?0@"HDSPEnvironment"8
@"HDSPSleepNotificationManager"16@?0@"HDSPEnvironment"8
@"HDSPAnalyticsManager"16@?0@"HDSPEnvironment"8
defaultCallbackScheduler
v16@?0@"<HDSPEnvironmentAware>"8
v24@?0@"NSNull"8@"NSError"16
(%@) Current State: %@, System Ready: %d, Environment Ready: %d
Environment
System Ready
Environment Ready
com.apple.sleep.HDSPSleepStoreServer
@"HKSPXPCConnectionListener"16@?0@"HDSPSleepStoreServer"8
v24@?0@"HKSPXPCClientIdentifier"8@"NSError"16
v16@?0@"HKSPXPCClient"8
v24@?0@"HDSPWakeUpResultsNotificationBuilder"8@"NSError"16
B16@?0@"HKSPXPCClient"8
v16@?0@"<HKSPSleepClient>"8
v16@?0@"<HKSPSyncAnchor>"8
v24@?0@"HKSPSyncAnchorContainer"8@"NSError"16
Sync Anchor Container: %@
Connected Clients: %@
Sync Anchor Container
Connected Clients
com.apple.rootrobot
configuration
minimal
WindDown
AutomatedOffFromManual
com.apple.SleepLockScreen
SleepLockScreen.LockScreenViewController
v16@?0@"NSError"8
com.apple.mobile.keybagd.first_unlock
v16@?0@"<HDSPDeviceUnlockObserver>"8
Greeting
v12@?0B8
EARLY_WAKEUP_TITLE_ALARM_AND_SLEEP_FOCUS
EARLY_WAKEUP_TITLE_SLEEP_FOCUS
EARLY_WAKEUP_TITLE_ALARM
EARLY_WAKEUP_TITLE_NONE
EARLY_WAKEUP_BODY_ALARM_AND_SLEEP_FOCUS
EARLY_WAKEUP_BODY_SLEEP_FOCUS
EARLY_WAKEUP_BODY_ALARM
EARLY_WAKEUP_BODY_NONE
EARLY_DISMISS_TURN_OFF
EARLY_DISMISS_YES
EARLY_DISMISS_LEAVE_ON
EARLY_DISMISS_NO
AutoTracking
v20@?0B8@"NSError"12
v16@?0@"NAPromise"8
@"NAFuture"16@?0@"NSError"8
v24@?0@"NSArray"8@"NSError"16
isOnWrist
lastOnWristDate
v16@?0@"<HDSPWatchOnWristObserver>"8
Initial
v16@?0@"<HDSPGoodMorningAlertStateMachineDelegate>"8
snoozedUntilDate
v16@?0@"<HDSPApplicationWorkspaceObserver>"8
B16@?0@"_HDSPCFUserNotificationCenterRegistration"8
Launched: %@
Launched
v16@?0@"<HDSPEnvironmentStateMachineDelegate>"8
DelayedWakeUp
confirmedUntilDate
wakeUpConfirmedDate
wakeUpConfirmedUntilDate
Notified
v16@?0@"<HDSPWakeUpResultsNotificationStateMachineDelegate>"8
@"<HDSPSyncedUserDefaults>"8@?0
v16@?0@"NSSet"8
v16@?0@"<HKSPUserDefaults>"8
v16@?0@"HDSPSyncedDefaultsKeySet"8
@"<HDSPWakeDetector>"16@?0@"HDSPEnvironment"8
@"<HDSPWakeDetector>"16@?0@?<@"<HDSPWakeDetector>"@?@"HDSPEnvironment">8
B16@?0@"<HDSPWakeDetector>"8
v16@?0@"<HDSPWakeDetector>"8
Presenting
InternalEnd
WakeUpResultsNotificationDelayOverride
com.apple.sleep.WakeUpResultsNotificationRetry.activity
HDSPWakeUpResultsNotificationManager.m
_queryResultFuture must be finished before we can post notification
v16@?0@"HDSPWakeUpResultsNotificationBuilder"8
WakeUpResults
ManualOff
@"NSSet"16@?0@"HDSPSyncedDefaultsKeySet"8
B16@?0@"HDSPSyncedDefaultsKeySet"8
B24@?0@"NSString"8@"HDSPSyncedDefaultsKeySet"16
@24@?0@"NSString"8@"HDSPSyncedDefaultsKeySet"16
HKSPLastSchedule
HKSPLastSettings
HKSPLastRecord
com.apple.sleepd.ids.test
date
identifier
dismissedDate
Bedtime In Progress
HDSPLastEventTriggerDate
HDSPLastStandardSleepEvent
HDSPRescheduleAssertion
HDSPRescheduleTransaction
HDSPNotifyDueAssertion
@"<HDSPEventScheduler>"16@?0@"HDSPEnvironment"8
@"HKSPThrottler"16@?0@?<v@?>8
com.apple.sleep.HDSPSleepEventScheduler
v16@?0@"<HDSPSleepEventProvider>"8
B16@?0@"HKSPSleepEvent"8
v16@?0@"HKSPSleepEvent"8
@"NAFuture"16@?0@"<HDSPSleepEventHandler>"8
Scheduled Events: %@, Last Standard Sleep Event: %@
Scheduled Events
Last Standard Sleep Event
com.apple.kvs.store-did-change.com.apple.sleepd
v24@?0@"NSString"8@"<NSCopying><NSCoding>"16
v16@?0@"NSString"8
@"<HDSPProcessState>"12@?0i8
@"RBSProcessPredicate"16@?0@"RBSProcessIdentifier"8
v32@?0@"RBSProcessMonitor"8@"RBSProcessHandle"16@"RBSProcessStateUpdate"24
v16@?0@"<RBSProcessMonitorConfiguring>"8
SignificantTimeChange
com.apple.system.timezone
v16@?0@"<HDSPTimeChangeObserver>"8
com.apple.alarm
com.apple.sleepd.NextAlarm
Date
UserVisible
Ready
sleepEvents
Ready: %d
Has Been Unlocked: %d
Charging: %d
Battery: %f
On Wrist: %d
Has Been Unlocked
Charging
Battery
OnWrist
com.apple.SleepDaemon
Localizable
GeneratedCoaching
@"NSString"16@?0@"<HDSPAssertion>"8
B16@?0@"<HDSPAssertion>"8
transactions
assertions
Assertions: %@
Transactions: %@
Assertions
Transactions
@"NAFuture"16@?0@"<HDSPSleepScheduleStateObserver>"8
@"NAFuture"8@?0
BedtimeInProgress
sleepModeOn
Migration
v16@?0@"<BMStoreData>"8
eventBody.semanticModeIdentifier
com.apple.sleep.HDSPBiomeManager.queue
com.apple.sleepd.biome
v16@?0@"BPSCompletion"8
v16@?0@"BMStoreEvent"8
v16@?0@"<HDSPGoodMorningAlertObserver>"8
v16@?0@"<HDSPSleepNotificationPublisher><HDSPEnvironmentAware>"8
v16@?0@"<HDSPSleepNotificationPublisher>"8
sleepd
ExplicitDetecting
@"NAFuture"16@?0@"<HDSPSleepActionObserver>"8
v16@?0@"<HDSPSleepActionObserver>"8
v16@?0@"MTAlarm"8
@"NSDate"16@?0@"MTAlarm"8
v16@?0@"<HDSPWakeDetectionStateMachineDelegate>"8
Upcoming
isSignificantChange
isSignificantEventRecordUpdate
topLevelChangeKeys
com.apple.system.powersources.source
v16@?0@"<HDSPDevicePowerObserver>"8
v16@?0@"<HDSPSleepLockScreenStateMachineDelegate>"8
v16@?0@"NSObject<OS_xpc_object>"8
DelayingForTracking
goodMorningDismissed
WakeUp
v16@?0@"<HDSPSleepScheduleStateCoordinatorStateMachineDelegate>"8
com.apple.private.alloy.sleep.classd
com.apple.private.alloy.avconference.avctester
%@ (%@)
cloud
local
B16@?0@"IDSDevice"8
@16@?0@"IDSDevice"8
source
changeEvaluation
SleepSessionDateInterval
SleepSessionSleepIntervals
SleepSessionEndReason
SleepSessionMetadata
RequiresFirstUnlock
@"NSDateInterval"8@?0
@"NSArray"8@?0
Q8@?0
@"NSDictionary"8@?0
B8@?0
interval
sleepIntervals
endReason
requiresFirstUnlock
SleepSessionInterval
SleepSessionType
type
Awake
InBed
UnspecifiedSleep
CoreSleep
DeepSleep
REMSleep
Manual
OnCharger
ActivityDetectedAfterWakeUp
AppLaunchedAfterWakeUp
Internal
TimeOut
Cancel
Error
Scheduled
v16@?0@"<HDSPSleepScheduleModelObserver>"8
B16@?0^@8
B16@?0@"HKSPSleepScheduleOccurrence"8
Sleep Schedule Model: %@
Sleep Schedule Model
Carousel
Springboard
v12@?0i8
v16@?0@"<HDSPSpringboardObserver>"8
com.apple.springboard.finishedstartup
ManualTracking
B16@?0@"UNNotification"8
@16@?0@"UNNotification"8
en_US_POSIX
yyyy-MM-dd_HH:mm
BEDTIME_REMINDER_TITLE
BEDTIME_REMINDER_MESSAGE
WIND_DOWN_REMINDER_TITLE
WIND_DOWN_REMINDER_MESSAGE
WIND_DOWN_REMINDER_MESSAGE_PRE_ONBOARDING
HDSPUserNotificationCenter.m
This method can only be used to format localized strings containing bedtime or wakeUp times.
_SINGULAR
CHARGE_WATCH_TITLE
CHARGE_WATCH_ALARM_MESSAGE
CHARGE_WATCH_SLEEP_TRACKING_MESSAGE
CHARGE_WATCH_NO_ALARM_OR_SLEEP_TRACKING_MESSAGE
v16@?0@"<HDSPSleepModeStateMachineDelegate>"8
v16@?0@"<HDSPSleepWidgetStateMachineDelegate>"8
com.apple.sleep.sync.SleepScheduleDidChange
com.apple.sleep.sync.SleepSettingsDidChange
com.apple.sleep.sync.SleepRecordDidChange
com.apple.sleep.NPSDomainAccessor.serial
AutomatedOff
NotReady
NeedsProtectedData
com.apple.distnoted.matching
com.apple.notifyd.matching
Notification
@"NAFuture"16@?0@"<HDSPNotificationObserver>"8
Monitoring
com.apple.mobiletimerd.MTAlarmServer
v24@?0@"MTAlarm"8@"NSError"16
@"NAFuture"16@?0@"NSNull"8
ManualBedtime
v16@?0@"BMUserFocusComputedModeEvent"8
HDSPSleepModeManager.m
Unable to set wind down via this method
v16@?0@"<HDSPSleepModeObserver>"8
state
specificState
sleepScreenEnabled
So8NSObjectC
[%{public}@] Received query failed with error %{public}@
[%{public}@] Received query completion event
[%{public}@] Received protected heath data available event
[%{public}@] Executing query
[%{public}@] startDetecting
[%{public}@] stopDetecting
[%{public}@] setNumberOfTimesDismissed: %ld
[%{public}@] sleepLockWasDismissed (%ld times)
[%{public}@] counts as early wake up
[%{public}@] performing initial sync
[%{public}@] saving data version
[%{public}@] loading schedule
[%{public}@] persisting schedule %{public}@
[%{public}@] persisting schedule changes %{public}@
[%{public}@] removing sleep schedule
[%{public}@] loading settings
[%{public}@] persisting settings %{public}@
[%{public}@] persisting settings changes %{public}@
[%{public}@] removing sleep settings
[%{public}@] loading event record
[%{public}@] creating default event record
[%{public}@] persisting event record %{public}@
[%{public}@] persisting event record changes %{public}@
[%{public}@] removing sleep event record
[%{public}@] loading model
[%{public}@] persisting model
[%{public}@] nothing persisted for properties of class %{public}@
[%{public}@] failed deserialization of class %{public}@ with error %{public}@
[%{public}@] failed serialization with error %{public}@
[%{public}@] environmentWillBecomeReady
[%{public}@] resetting Cloud storage
[%{public}@] syncedDefaultsDidChangeExternally
[%{public}@] received %{public}@
[%{public}@] sleep features disabled
[%{public}@] no sleep focus mode exists
[%{public}@] it's bedtime, turning on bedtime mode if it's not on
[%{public}@] it's wind down, turning on wind down mode if it's not on
[%{public}@] turning off sleep mode if it's on
[%{public}@] it's wind down, turning on sleep mode mode
[%{public}@] it's wind down but sleep mode is disabled, turning off sleep mode
[%{public}@] it's bedtime, turning on sleep mode mode
[%{public}@] it's bedtime but sleep mode is disabled, turning off sleep mode
[%{public}@] it's wake up, turning off sleep mode
[%{public}@] sleep schedule state was disabled
[%{public}@] bedtime mode turned on (%{public}@)
[%{public}@] ignoring automation turn on
[%{public}@] ignoring automation turn off
[%{public}@] bedtime mode turned on for an unknown reason, treating as user requested
[%{public}@] sleep schedule disabled
[%{public}@] time in bed tracking disabled
[%{public}@] state changed to wake up (%{public}@)
[%{public}@] ending time in bed tracking
[%{public}@] ending sleep session with reason %{public}@
[%{public}@] created %{public}@
[%{public}@] using 90 minutes before bedtime %{public}@ as session start
[%{public}@] using bedtime date %{public}@ as session start
[%{public}@] computing in bed intervals inside %{public}@
[%{public}@] _computeSessionMetadataForInterval: %{public}@
[%{public}@] previous occurrence: %{public}@
[%{public}@] user set wake time: %{public}@ user set bed time: %{public}@
[%{public}@] finished processing session: %{public}@
[%{public}@] processed session has intervals: %@
[%{public}@] Environment will become ready
[%{public}@] Environment did become ready
[%{public}@] Significant time change detected
[%{public}@] Updating schedule activity
[%{public}@] Scheduling daily collection activity
[%{public}@] Running daily collection activity
[%{public}@] Cancelling daily collection activity
[%{public}@] Data collection disabled; not executing query
[%{public}@] Data collection is already in progress; not executing query
[%{public}@] Query failed with error: %{public}@
[%{public}@] Query succeeded
[%{public}@] Sending daily reports: %{public}@
[%{public}@] Pruning wind down action data prior to %{public}@
[%{public}@] wake detection disabled
[%{public}@] in detection window for activity (and explicit)
[%{public}@] in detection window for explicit
[%{public}@] sleep tracking onboarding not completed
[%{public}@] sleep coaching onboarding not completed
[%{public}@] setting initial demo schedule
[%{public}@] resetDemoMode
[%{public}@] failed to delete schedule with error %{public}@
[%{public}@] failed to save model with error %{public}@
[%{public}@] environmentDidBecomeReady
[%{public}@] updateState
[%{public}@] telling scheduler we have events to schedule
[%{public}@] telling scheduler we no longer have events to schedule
[%{public}@] starting sleep session (%{public}@)
[%{public}@] sleep tracker completed sleep analysis for session with end reason %{public}@
[%{public}@] no sleep analysis provided
[%{public}@] not saving session with end reason %{public}@
[%{public}@] invalid session with start date %{public}@ after end date %{public}@!
[%{public}@] created session has intervals: %@
[%{public}@] starting activity detection
[%{public}@] stopping activity detection
[%{public}@] starting app launch detection
[%{public}@] app launch detected: %{public}@
[%{public}@] stopping app launch detection
[%{public}@] notifying for activity detected on date %{public}@
[%{public}@] didUpdateSleepScheduleModel: %{public}@
[%{public}@] sleepScheduleStateDidChange: %{public}@ previousState: %{public}@ (%{public}@)
[%{public}@] scheduling expiration of %{public}@
[%{public}@] %{public}@ expired
[%{public}@] sleepModeDidChange: %{public}@ (%{public}@)
[%{public}@] device charging state changed: %d
[%{public}@] wristDetectEnabledDidChange: %d
[%{public}@] significant time change detected
[%{public}@] ignoring stopDetecting
[%{public}@] previousSessionFinished
[%{public}@.%p] initializing...
----------------------------%{public}@----------------------------
[%{public}@]
[%{public}@] sleep mode did change: %{public}@ (%{public}@)
[%{public}@] sleep settings did change
[%{public}@] present the good morning alert
[%{public}@] dismiss the good morning alert
[%{public}@] sleepLockScreenStateDidChange: %ld previousState: %ld
[%{public}@] updating assertion, sleep screen enabled: %@, sleep mode on: %@
[%{public}@] significantTimeChangeDetected
[%{public}@] timeZoneChangeDetected
[%{public}@] overriding lock screen state: %@ (userInfo: %@)
[%{public}@] registering predicate %{public}@ for identifier %{public}@
[%{public}@] processing callback with identifier %{public}@
[%{public}@] unregistering %{public}@
[%{public}@] sleep state changed from %{public}@ to %{public}@ (%{public}@)
[%{public}@] ignoring wake up state as it was not due to normal reason
[%{public}@] sleep event due %{public}@
[%{public}@] sleep mode changed from %{public}@ to %{public}@ (%{public}@)
[%{public}@] adding %{public}@ to context
[%{public}@] previous context is %{public}@
[%{public}@] previous context is of unexpected class %{public}@
[%{public}@] new context is %{public}@
[%{public}@] didSaveSession %{public}@
[%{public}@] didSaveArchivedSessions %{public}@
[%{public}@] requestsProcessedSessionForSession %{public}@
[%{public}@] sleepSessionManagerDidFinishSession
[%{public}@] presenting good morning alert
[%{public}@] skipping good morning alert, lock screen isn't active
[%{public}@] user turned on sleep mode
[%{public}@] determined state: %{public}@
[%{public}@] sleep mode is off, waiting to be told to present greeting
[%{public}@] sleep mode is off, not presenting greeting (%{public}@)
[%{public}@] sleep screen disabled
[%{public}@] Received retry event
[%{public}@] overriding widget state
[%{public}@] sleep schedule model did change
[%{public}@] sleep schedule state did change
[%{public}@] sleep mode did change
[%{public}@] sleepWidgetStateDidChange: %{public}@ (%{public}@)
[%{public}@] sleepWidgetShouldReload (%{public}@)
[%{public}@] activity detected during sleep window %{public}@, notifying
[%{public}@] good morning alerts disabled
[%{public}@] starting session
[%{public}@] stopping session
[%{public}@] there are unprocessed sessions to save
[%{public}@] can write session data
[%{public}@] can't write sessions until first unlock
[%{public}@] no unprocessed sessions to save
[%{public}@] waiting for first unlock
[%{public}@] %ld unprocessed sessions
[%{public}@] %ld processed sessions
[%{public}@] caught exception %{public}@ when trying to read sessions
[%{public}@] unarchiving failed with error %{public}@
[%{public}@] no data found in file %{public}@
[%{public}@] archiveSession: %{public}@
[%{public}@] creating session directory at %{public}@
[%{public}@] failed to create directory at %{public}@ with error %{public}@
[%{public}@] wrote sessions to file %{public}@
[%{public}@] failed to write sessions file with error %{public}@
[%{public}@] saveSession %{public}@
[%{public}@] session has nothing to write
[%{public}@] session needs additional processing
[%{public}@] session is ready to write
[%{public}@] saving processed session %{public}@
[%{public}@] archiving session for now
[%{public}@] failed to remove session data file error %{public}@
[%{public}@] deviceHasBeenUnlocked
[%{public}@] saving session %{public}@ from %{public}@
[%{public}@] determining state
[%{public}@] not onboarded, determined state: %{public}@
[%{public}@] schedule disabled, determined state: %{public}@
[%{public}@] in user requested sleep mode, determined state: %{public}@
[%{public}@] wake up date: %{public}@ (secondsAfterWakeUp: %f)
[%{public}@] schedule state is disabled
[%{public}@] schedule state is wind down
[%{public}@] timed out waiting for activity, ending tracking.
[%{public}@] activity detected after wake up (%{public}@), ending tracking
[%{public}@] app launched after wake up (%{public}@), ending tracking
[%{public}@] sleepScheduleStateDidChange
[%{public}@] deviceChangedChargingState (isCharging: %d)
[%{public}@] ignoring monitor end date (%{public}@) before start date (%{public}@)
[%{public}@] monitor window is: %{public}@
[%{public}@] already passed current window %{public}@
[%{public}@] startBatteryMonitoring
[%{public}@] checkBatteryLevel
[%{public}@] stopBatteryMonitoring
[%{public}@] it's bedtime
[%{public}@] posting battery reminder notification
[%{public}@] Building daily analytics report from %{public}lu summaries in range %{public}@
[%{public}@] Summary: %{public}@
[%{public}@] Schedule's last modified date occurred after the current date
[%{public}@] Onboard date occurred after the current date
[%{public}@] Unable access biological sex due to error: %{public}@
[%{public}@] Unable access age due to error: %{public}@
[%{public}@] skipping good morning alert, watch is charging
[%{public}@] wake time reached and alarm enabled
[%{public}@] wake time reached and alarm disabled
[%{public}@] wake up was confirmed
[%{public}@] Received wake up event
[%{public}@] Transitioning to delaying for tracking state
[%{public}@] received waiing expired event due
[%{public}@] shutdown
[%{public}@] prepare
[%{public}@] systemDidBecomeReady
[%{public}@] environment needs migration
[%{public}@] dataMigrationDidComplete (error: %{public}@))
[%{public}@] environment is ready
[%{public}@] startListening
[%{public}@] client was nil!
[%{public}@] Environment will become invalid
[%{public}@] connect received from %{public}@
[%{public}@] server disabled
[%{public}@] check in received from %{public}@ with sync anchor container: %{public}@
[%{public}@] request received for sleep schedule from: %{public}@
[%{public}@] performing request for sleep schedule from: %{public}@
[%{public}@] completing request for sleep schedule: %{public}@ from: %{public}@
[%{public}@] request received to save current sleep schedule: %{public}@ from: %{public}@
[%{public}@] performing request to save current sleep schedule: %{public}@ from: %{public}@
[%{public}@] request received to save current sleep schedule failed: %{public}@
[%{public}@] completing request to save current sleep schedule: %{public}@ from: %{public}@
[%{public}@] request received for sleep settings from: %{public}@
[%{public}@] performing request for sleep settings from: %{public}@
[%{public}@] completing request for sleep settings: %{public}@ from: %{public}@
[%{public}@] request received to save current sleep settings: %{public}@ from: %{public}@
[%{public}@] performing request to save current sleep settings: %{public}@ from: %{public}@
[%{public}@] request received to save current sleep settings failed: %{public}@
[%{public}@] completing request to save current sleep settings: %{public}@ from: %{public}@
[%{public}@] request received for sleep event record from: %{public}@
[%{public}@] performing request for sleep event record from: %{public}@
[%{public}@] completing request for sleep event record: %{public}@ from: %{public}@
[%{public}@] request received to save current sleep event record: %{public}@ from: %{public}@
[%{public}@] performing request to save current sleep event record: %{public}@ from: %{public}@
[%{public}@] request received to save current sleep event record failed: %{public}@
[%{public}@] completing request to save current sleep event record: %{public}@ from: %{public}@
[%{public}@] request received for sleep mode on from: %{public}@
[%{public}@] performing request for sleep mode on from: %{public}@
[%{public}@] completing request for sleep mode: %{public}@ from: %{public}@
[%{public}@] request received to set sleep mode: %{public}@ (%{public}@) from: %{public}@
[%{public}@] performing request set sleep mode: %{public}@ (%{public}@) from: %{public}@
[%{public}@] completing request to set sleep mode: %{public}@ (%{public}@) from: %{public}@
[%{public}@] request received for sleep schedule state
[%{public}@] performing request for sleep schedule state
[%{public}@] completing request for sleep schedule state: %{public}@
[%{public}@] request received for sleep widget state
[%{public}@] performing request for sleep widget state
[%{public}@] completing request for sleep widget state: %{public}@
[%{public}@] Request received to publish notification: %@
[%{public}@] Performing request to publish notification: %@
[%{public}@] Completing request to publish notification: %@
[%{public}@] Request received to publish wake up results notification
[%{public}@] Performing request to publish wake up results notification
[%{public}@] Request received to override lock screen state: %@ (userInfo: %@)
[%{public}@] Performing request override lock screen state: %@
[%{public}@] lock screen not supported on this device
[%{public}@] Completing request override lock screen state: %@
[%{public}@] Request received to override sleep widget state: %@
[%{public}@] Performing request to override sleep widget state: %@
[%{public}@] widgets not supported on this device
[%{public}@] Completing request to override sleep widget state: %@
[%{public}@] Request received to clear sleep widget override
[%{public}@] Performing request clear sleep widget override
[%{public}@] Completing request to clear sleep widget override
[%{public}@] Request received to create sleep focus mode
[%{public}@] Performing request to create sleep focus mode
[%{public}@] Completing request to create sleep focus mode
[%{public}@] Request received to delete sleep focus mode
[%{public}@] Performing request to delete sleep focus mode
[%{public}@] Completing request to delete sleep focus mode
[%{public}@] Request received to confirm awake from: %{public}@
[%{public}@] Performing request to confirm awake
[%{public}@] Completing request to confirm awake
[%{public}@] Request received to dismiss good morning from: %{public}@
[%{public}@] Performing request to dismiss good morning
[%{public}@] Completing request to dismiss good morning
[%{public}@] Request received to dismiss sleep lock from: %{public}@
[%{public}@] Performing request to dismiss sleep lock
[%{public}@] Completing request to dismiss sleep lock
[%{public}@] Request received for sleep alarm dismissal on %{public}@ (%{public}@) from: %{public}@
[%{public}@] Performing request for sleep alarm dismissal on %{public}@
[%{public}@] Completing request for sleep alarm dismissal on %{public}@
[%{public}@] Request received for sleep alarm snooze until %{public}@ (%{public}@) from: %{public}@
[%{public}@] Performing request for sleep alarm snooze until %{public}@
[%{public}@] Completing request for sleep alarm snooze until %{public}@
[%{public}@] Request received for sleep alarm modified (%{public}@) from: %{public}@
[%{public}@] Performing request for sleep alarm modified
[%{public}@] Completing request for sleep alarm modified
[%{public}@] source: %{public}@ didUpdateSleepSchedule: %{public}@
[%{public}@] source: %{public}@ didUpdateSleepSettings: %{public}@
[%{public}@] source: %{public}@ didUpdateSleepEventRecord: %{public}@
[%{public}@] sleepEventIsDue: %{public}@
[%{public}@] sleepScheduleStateDidChange: %{public}@ (%{public}@)
[%{public}@] sleepModeDidChange: %ld previousMode: %ld reason: %{public}@
[%{public}@] skipping notification to suspended client: %{public}@
[%{public}@] asking newly running client to check in: %{public}@
[%{public}@] check in received from %{public}@ with container: %{public}@
[%{public}@] client did become suspended: %{public}@
[%{public}@] initializing with %{public}@
[%{public}@] Carousel is started.
[%{public}@] Waiting for Carousel to start.
[%{public}@] we're in demo environment
[%{public}@] Checking if we are in root robot.
[%{public}@] Running in root robot %d
[%{public}@] Carousel has started
[%{public}@] restore finished
[%{public}@] sleep mode turned on via automation
[%{public}@] going back into %{public}@
[%{public}@] sleep mode turned on via unknown reason, treating like automation
[%{public}@] received bedtime expired event due
[%{public}@] lock screen assertion already taken
[%{public}@] taking lock screen assertion
[%{public}@] invalidated lock screen assertion
[%{public}@] error acquiring lock screen assertion: %{public}@
[%{public}@] sending state: %@
[%{public}@] lock screen assertion already invalidated
[%{public}@] invalidating lock screen assertion
[%{public}@] lock screen service did connect
[%{public}@] lock screen service did dismiss due to error
[%{public}@] lock screen service did dismiss due to assertion invalidation
[%{public}@] lock screen service did dismiss due to notification
[%{public}@] lock screen service did dismiss due to home gesture
[%{public}@] lock screen service did dismiss due to dismiss button
[%{public}@] lock screen service did dismiss due to camera launch
[%{public}@] lock screen service did dismiss due to lock screen dismissal
[%{public}@] lock screen service did dismiss due to tap
[%{public}@] interruption handler
[%{public}@] invalidation handler
[%{public}@] time to start battery monitoring
[%{public}@] found initial hasBeenUnlockedSinceBoot value of [%d]
[%{public}@] handleFirstUnlock
[%{public}@] received greeting expired event due
[%{public}@] publishWakeDetectionNotification
[%{public}@] sleep mode is on
[%{public}@] alarm is enabled
[%{public}@] confirming the awake notification
[%{public}@] dismissing the awake notification
[%{public}@] publishing notification with properties %{public}@
[%{public}@] posting CFUserNotification for %{public}@
[%{public}@] failed to post CFUserNotification (%d)
[%{public}@] failed to create CFUserNotification (%d)
[%{public}@] calling handler for %{public}@
[%{public}@] cancelling CFUserNotification for %{public}@
[%{public}@] sleep schedule disabled, ending tracking.
[%{public}@] user confirmed wake up, ending tracking.
[%{public}@] alarm disabled and wake time reached, continuing tracking until activity is detected.
[%{public}@] wake up occurred because of expired alarm, ending tracking
[%{public}@] started in wake up state, continuing tracking until activity is detected.
[%{public}@] wake up occurred for another reason, ending tracking.
[%{public}@] sleep mode exited during automatic tracking (%{public}@), ignoring.
[%{public}@] starting activity tracking
[%{public}@] skipping CloudKit migration because feature is disabled
[%{public}@] performing CloudKit migration
[%{public}@] initial sync failed, continuing anyway
[%{public}@] skipping MobileTimer migration because this device doesn't support legacy alarms
[%{public}@] migrating from MobileTimer
[%{public}@] migrating from sleep alarm %{public}@
[%{public}@] migrating settings based on onboarding
[%{public}@] sleep coaching completed, enabling dnd during wind down
[%{public}@] sleep tracking completed, enabling watch face
[%{public}@] migrating sleep focus
[%{public}@] creating sleep focus because we've already onboarded or enabled scheduledSleepMode
[%{public}@] failed to migrate sleep focus
[%{public}@] skipping focus creation
[%{public}@] migrating home screen
[%{public}@] creating home screen page because we've already onboarded shortcuts
[%{public}@] failed to migrate home screen: %{public}@
[%{public}@] skipping home screen page creation because we haven't onboarded shortcuts
[%{public}@] wristDetectionSettingManagerDidObserveWristDetectChange
[%{public}@] HID requested sleep session end, ending tracking.
[%{public}@] failed to create application record: %{public}@.
[%{public}@] System is ready
[%{public}@] Springboard started
sleepd disabled
sleepd entering demo mode
sleepd setting up sigterm handler
sleepd received sigterm
[%{public}@] treating disabled alarm as confirmed wake up
[%{public}@] still waiting for snoozed alarm %{public}@
[%{public}@] waiting until %{public}@
[%{public}@] it's time for wind down
[%{public}@] it's time for bed
[%{public}@] dismissing good morning alert
[%{public}@] wakeup has changed to be later, treating state as expired
[%{public}@] not posting wake detection notification
[%{public}@] wake detection disabled after notifying
[%{public}@] detectedOnWristOnDate: %{public}@
[%{public}@] cloud sync is disabled
[%{public}@] loading default value %{public}@ for key: %{public}@
[%{public}@] loading default value %{public}@ for per-gizmo key: %{public}@
[%{public}@] not syncing to CloudKit because sync disabled
[%{public}@] not syncing to CloudKit because initial sync needed
[%{public}@] sync now enabled, syncing from CloudKit
[%{public}@] syncing key to CloudKit: %@
[%{public}@] doing a full CloudKit sync
[%{public}@] full CloudKit sync completed
[%{public}@] full CloudKit sync failed: %{public}@
[%{public}@] hdsp_setExternalChangeDelegate %{public}@
[%{public}@] synchronizing keys: %{public}@
[%{public}@] updating stored data version from %lu to %lu
[%{public}@] not updating newer stored data version from %lu to %lu
[%{public}@] updating stored local data version from %lu to %lu
[%{public}@] not updating newer stored local data version from %lu to %lu
[%{public}@] updating stored cloud data version from %lu to %lu
[%{public}@] not updating newer stored cloud data version from %lu to %lu
[%{public}@] _nanoDefaultsDidReceiveExternalChange
[%{public}@] _nanoDefaultsDidReceiveExternalChangeForKeys: %{public}@
[%{public}@] _cloudDefaultsDidReceiveExternalChange
[%{public}@] _cloudDefaultsDidReceiveExternalChangeForKeys: %{public}@
[%{public}@] serverCloudKitDataVersion %lu
[%{public}@] localCloudKitDataVersion %lu
[%{public}@] syncing to CloudKit: %{public}@
[%{public}@] updates: %{public}@
[%{public}@] removes: %{public}@
[%{public}@] syncing from CloudKit: %{public}@
[%{public}@] performing differential sync
[%{public}@] looking at keySet: %{public}@
[%{public}@] local last modified: %{public}@
[%{public}@] server last modified: %{public}@
[%{public}@] local modified later, syncing to CloudKit
[%{public}@] server modified later, syncing from CloudKit
[%{public}@] resetting
[%{public}@] has wakeDetectors: %{public}@
[%{public}@] wake up event was detected by %{public}@ at %{public}@
[%{public}@] startWakeDetection: %{public}@
[%{public}@] stopWakeDetection
[%{public}@] posting wake detection notification
[%{public}@] auto-confirming awake user turned off sleep focus and alarm is off
[%{public}@] wake detection notification posted on other device
sleepInterval is nil
Sleep interval: %f greater than allowed: %f. Will not be used
[%{public}@] presentAlertForGoodMorning
[%{public}@] dismissAlertForGoodMorning
[%{public}@] good morning alert dismissed %{public}@
[%{public}@] keeping off until next %{public}@ at %{public}@
[%{public}@] going to regular off state
[%{public}@] %{public}@ entered from %{public}@ (%{public}@)
[%{public}@] updating for initial change because schedule was previously disabled
[%{public}@] ignoring initial state change
[%{public}@] updating
[%{public}@] ignoring
[%{public}@] updating state
[%{public}@] Update state
[%{public}@] Environment did become ready.
[%{public}@] Sleep model changed
[%{public}@] sleepScheduleStateChanged from %{public}@ to %{public}@ for %{public}@
[%{public}@] Resolved attempt window beforeDate: %@ (passed: %@)
[%{public}@] Overriding default notification delay to %{public}@s
[%{public}@] Requesting to schedule tracking delay
[%{public}@] Requesting to cancel tracking delay
[%{public}@] Scheduling retry attempt
[%{public}@] Attempting retry
[%{public}@] Unscheduling retry attempt
[%{public}@] Start observing protected data availability
[%{public}@] Stop observing protected data availability
[%{public}@] Starting new query
[%{public}@] Unexpected call to start query while already in progress
[%{public}@] Preparing daily results notification
[%{public}@] Query succeeded with result: %{public}@
[%{public}@] Unable to fetch user name with error %{public}@
[%{public}@] no previous model to restore
[%{public}@] restoring previous model
[%{public}@] sleep schedule added
[%{public}@] sleep schedule changes were significant
[%{public}@] sleep schedule removed
[%{public}@] sleep settings added
[%{public}@] sleep settings changes were significant
[%{public}@] sleep record added
[%{public}@] sleep record changes were significant
[%{public}@] syncing notifiedForEarlyWakeUpMessage %{public}@
[%{public}@] syncing testIDSMessage %{public}@
[%{public}@] syncing setSleepModeMessage %{public}@
[%{public}@] checking if paired device supports focus mode
[%{public}@] not syncing because paired device supports focus mode
[%{public}@] not syncing message for source %{public}@
[%{public}@] syncing confirmWakeUpMessage %{public}@
[%{public}@] not syncing alarm message from NanoSync
[%{public}@] not syncing alarm message from Cloud
[%{public}@] syncing wakeUpAlarmWasDismissed %{public}@
[%{public}@] syncing wakeUpAlarmWasSnoozed %{public}@
[%{public}@] syncing dismissGoodMorningMessage %{public}@
[%{public}@] not sending cloud message because share across devices is disabled
[%{public}@] sending message %{public}@ on service %{public}@
[%{public}@] sent message %{public}@ on service %{public}@
[%{public}@] failed to send message %{public}@ with error %{public}@ on service %{public}@
[%{public}@] received message %{public}@ from service %{public}@
[%{public}@] ignoring message because watch sleep features are disabled
[%{public}@] ignoring cloud message because share across devices is disabled
[%{public}@] unexpected message received %{public}@
[%{public}@] _handleSetSleepModeMessage: %{public}@
[%{public}@] _handleConfirmWakeUpMessage: %{public}@
[%{public}@] _handleDismissGoodMorningMessage: %{public}@
[%{public}@] _handleNotifiedForEarlyWakeUpMessage: %{public}@
[%{public}@] _handleSleepAlarmDismissedMessage: %{public}@
[%{public}@] _handleSleepAlarmSnoozedMessage: %{public}@
[%{public}@] _handleTestMessage: %{public}@
[%{public}@] wakeupEventDetected: %{public}@ - %{public}@
[%{public}@] ignoring wake up event because it's outside of detection window
[%{public}@] wake detection event found
[%{public}@] earlyWakeUpWasNotifiedRemotely
_HDSPPowerAssertion
[%{public}@] Error setting relevant shortcuts in store %{public}@
[%{public}@] rescheduling events...
[%{public}@] unscheduling events...
[%{public}@] sleep schedule disabled, not scheduling
[%{public}@] sleep features disabled for this watch, not scheduling
[%{public}@] failed to deserialize sleep event %{public}@ with error %{public}@
[%{public}@] updating last standard sleep event: %{public}@
[%{public}@] failed to serialize sleep event %{public}@ with error %{public}@
[%{public}@] gathering pending events
[%{public}@] looking for events due after: %{public}@ from: %{public}@
[%{public}@] %{public}@ has upcoming events: %{public}@
[%{public}@] %{public}@ has no upcoming events
[%{public}@] all upcoming events: %{public}@
[%{public}@] next event is %{public}@
[%{public}@] event is already due
[%{public}@] no upcoming events
[%{public}@] scheduledEventIsDue
[%{public}@] overdue events: %{public}@
[%{public}@] notifying %{public}@ for %{public}@
[%{public}@] eventProviderHasUpcomingEvents: %{public}@
[%{public}@] eventProviderCancelledEvents: %{public}@
[%{public}@] event provider %{public}@ didn't synthesize a delegate
[%{public}@] setting lastEventTriggerDate to current date because it's in the future
[%{public}@] saving sessions
[%{public}@] checking auth status
[%{public}@] doesn't have write access for HKCategoryTypeIdentifierSleepAnalysis
[%{public}@] processing session: %@
[%{public}@] skipping session due to missing bedtime or wake time: %@
[%{public}@] creating HealthKit samples
[%{public}@] saving samples to HealthKit failed with error: %{public}@
[%{public}@] finished saving %lu samples
[%{public}@] reset sleep alarm snooze state
[%{public}@] updating sleep alarms for model change
[%{public}@] failed to create NSUbiquitousKeyValueStore
[%{public}@] keyValueStoreDidChange: %{public}@
[%{public}@] performing full sync
[%{public}@] successfully completed full sync
[%{public}@] full sync failed with error: %{public}@
[%{public}@] received %{public}@, synchronizing...
[%{public}@] syncing keys: %{public}@
[%{public}@] failed to fetch handle with error: %{public}@
[%{public}@] monitoring process: %{public}@
[%{public}@] no longer monitoring process: %{public}@
[%{public}@] process %{public}@ no longer suspended
[%{public}@] process %{public}@ is suspended
[%{public}@] handleSignificantTimeChange
[%{public}@] timeZone: %{public}@
[%{public}@] handleTimeZoneChange
[%{public}@] bedtime has changed to be later, treating state as expired
[%{public}@] charging reminders disabled after notifying
[%{public}@] system is ready
[%{public}@] system not ready
[%{public}@] Taking assertion with identifier %{public}@
[%{public}@] Releasing assertion with identifier %{public}@
_HDSPOSTransaction
[%{public}@] transaction timed out
[%{public}@] _updateSleepScheduleState
[%{public}@] notifying observers for sleepScheduleStateDidChange from %{public}@ to %{public}@ with reason %{public}@
[%{public}@] failed to save event record with error %{public}@
[%{public}@] setting wakeUpAlarmDismissedDate to %{public}@
[%{public}@] snoozeFireDateShouldBeReset
[%{public}@] wakeTimeReached
[%{public}@] bedtimeReached
[%{public}@] windDownReached
[%{public}@] wakeNotificationWasConfirmed
[%{public}@] wakeUpAlarmWasDismissed
[%{public}@] user turned on sleep mode, staying here
[%{public}@] in user requested sleep mode, staying here
[%{public}@] Init failed: Invalid morning index range %{public}@
[%{public}@] Init failed: Nil sleep day summaries
[%{public}@] Init failed: Zero sleep day summaries
[%{public}@] Init failed: No sleep day summary for last night
[%{public}@] Init failed: No asleep duration for last night
[%{public}@] Building notification from %lu summaries in range %{public}@
[%{public}@] Did not meet sleep duration goal last night; this is required for all notifications
[%{public}@] Not enough days achieved for two-week goal notification
[%{public}@] Too many days achieved for two-week goal notification
[%{public}@] Not enough days achieved for short-week goal notification
[%{public}@] Too many days achieved for short-week goal notification
[%{public}@] Not enough days achieved for last night goal notification
[%{public}@] Too many days achieved for last night goal notification
[%{public}@] dropping Biome callback
[%{public}@] subscribing publisher %{public}@
[%{public}@] unsubscribing %{public}@
[%{public}@] we're in user requested sleep mode before wind down/bedtime, telling Biome
[%{public}@] not writing to biome because sleep features are disabled for this watch
[%{public}@] writing event: [%{public}@]
[%{public}@] finished publishing with error %{public}@
[%{public}@] received callback with event %{public}@
[%{public}@] goodMorningWasDismissed
[%{public}@] telling observers to present good morning alert
[%{public}@] telling observers to dismiss good morning alert
[%{public}@] publishNotificationForEvent: %{public}@
[%{public}@] tearDownNotifications
[%{public}@] posting good morning notification
[%{public}@] didUpdateSleepSchedule: %{public}@
[%{public}@] tearing down notifications at bedtime
[%{public}@] tearing down notifications at wake up
[%{public}@] tearing down charging reminder
[%{public}@] tearing down bedtime reminder
[%{public}@] tearing down wind down reminder
[%{public}@] tearing down wake detection notification
[%{public}@] tearing down good morning notification
[%{public}@] Telling scheduler we have events to schedule
[%{public}@] Bedtime and wind down notifications disabled
[%{public}@] Bedtime and wind down notifications disabled since sleep features are disabled on Watch.
[%{public}@] Ignoring event %{public}@ due to being in current state %{public}@
[%{public}@] reloading timeline
[%{public}@] Error reloading sleep widget timeline %{public}@
[%{public}@] wind down mode turned off by user (%{public}@)
[%{public}@] wind down mode turned off for an unknown reason, treating as user requested
[%{public}@] wind down mode turned off by automation (%{public}@)
[%{public}@] ignoring unknown sleep mode turn on because we're already in wind down
[%{public}@] successfully set mode configuration
[%{public}@] failed to set mode configuration with error: %{public}@
[%{public}@] failed to create default mode configuration with error: %{public}@
[%{public}@] failed to get mode configuration with error: %{public}@
[%{public}@] sleep mode configuration already exists
[%{public}@] wake up notification confirmed (%{public}@)
[%{public}@] Ignoring request to confirm wake up due to state %{public}@
[%{public}@] wake up notification confirmed at %{public}@, until %{public}@, (%{public}@)
[%{public}@] Dismissing good morning (%{public}@)
[%{public}@] Good morning was dismissed %{public}@
[%{public}@] Dismissed sleep lock (%{public}@)
[%{public}@] sleep alarm did dismiss: %{public}@ (%{public}@)
[%{public}@] sleepAlarm has nil dismiss date
[%{public}@] sleepAlarm has old dismiss date: %{public}@
[%{public}@] sleep alarm dismissed at %{public}@
[%{public}@] sleep alarm did snooze: %{public}@ (%{public}@)
[%{public}@] sleep alarm snoozed until %{public}@
[%{public}@] fetch alarms failed with error: %{public}@
[%{public}@] no sleep alarms found
[%{public}@] sleep alarms modified (%{public}@)
[%{public}@] latest sleep alarm modified date: %{public}@
[%{public}@] latest sleep alarm snooze date: %{public}@
[%{public}@] snooze date was reset
[%{public}@] charging: %d
[%{public}@] battery level: %f
Failed to defer XPC activity (%{public}@)
XPC activity was deferred (%{public}@)
[%{public}@] expired
[%{public}@] creating suggested home screen page
[%{public}@] failed to get suggested pages: %{public}@
[%{public}@] no suggested pages found
[%{public}@] failed to get sleep focus mode: %{public}@
[%{public}@] no sleep focus mode found
[%{public}@] found %ld pages, creating home screen request
[%{public}@] submitted home screen request
[%{public}@] sleep tracking event due, starting tracking
[%{public}@] bedtime occurred, starting tracking
[%{public}@] user engaged sleep mode, starting tracking
[%{public}@] sending message %{public}@
[%{public}@] failed to serialize message %{public}@ with error %{public}@
[%{public}@] destinations: %{public}@
[%{public}@] enqueuing message %{public}@ with options %{public}@
[%{public}@] successfully enqueued message %{public}@
[%{public}@] failed to enqueue message %{public}@ with error %{public}@
[%{public}@] received incoming message %{public}@
[%{public}@] failed to deserialize incoming message with error %{public}@
[%{public}@] successfully sent message %{public}@
[%{public}@] failed to send message %{public}@ with error %{public}@
[%{public}@] failed to load model: %{public}@
[%{public}@] loading model...
[%{public}@] failed to load schedule: %{public}@
[%{public}@] failed to load settings: %{public}@
[%{public}@] failed to load record: %{public}@
[%{public}@] sleepScheduleModel: %{public}@ - %{public}@
[%{public}@] removeSleepScheduleModel %{public}@
[%{public}@] notifying observers for sleepScheduleModel changes from %{public}@
[%{public}@] loading schedule...
[%{public}@] persisted schedule invalid: %{public}@
[%{public}@] persisting valid schedule: %{public}@
[%{public}@] no valid schedule could be made
[%{public}@] failed to load schedule with error %{public}@
[%{public}@] loaded %{public}@
[%{public}@] saveSleepSchedule: %{public}@ - %{public}@
[%{public}@] no changes to save
[%{public}@] sleep schedule was created
[%{public}@] sleep schedule was updated
[%{public}@] applying changes: %{public}@
[%{public}@] resetting snooze fire date
[%{public}@] override that happened today (%{public}@) moving to the future (%{public}@)
[%{public}@] override that happened today (%{public}@) deleted
[%{public}@] set wakeUpOverriddenDate to %{public}@
[%{public}@] set wakeUpConfirmedUntilDate to %{public}@
[%{public}@] sleep schedule validation failed due to invalid occurrence
[%{public}@] sleep schedule validation failed: %{public}@
[%{public}@] sleep schedule was deleted
[%{public}@] notifying observers for sleepSchedule change from %{public}@
[%{public}@] loading settings...
[%{public}@] failed to load settings with error %{public}@
[%{public}@] saveSleepSettings: %{public}@ - %{public}@
[%{public}@] sleep settings were created
[%{public}@] sleep settings were updated
[%{public}@] sleep settings were reset
[%{public}@] notifying observers for sleepSettings change from %{public}@
[%{public}@] loading event record...
[%{public}@] failed to load event record with error %{public}@
[%{public}@] saveSleepEventRecord: %{public}@ - %{public}@
[%{public}@] sleep event record was updated
[%{public}@] sleep tracking completed, enabling watch screen
[%{public}@] sleep event record was created
[%{public}@] sleep event record was reset
[%{public}@] save failed with error: %{public}@
[%{public}@] notifying observers for sleepEventRecord change from %{public}@
[%{public}@] setting lastModifiedDate on schedule to current date because it's in the future
[%{public}@] setting lastModifiedDate on settings to current date because it's in the future
[%{public}@] resetting wakeUpEarlyNotificationConfirmedDate because it's in the future
[%{public}@] resetting wakeUpOverriddenDate because it's in the future
[%{public}@] setting lastModifiedDate on event record to current date because it's in the future
[%{public}@] setting wakeUpAlarmDismissedDate on event record to current date because it's in the future
[%{public}@] setting goodMorningDismissedDate on event record to current date because it's in the future
[%{public}@] observedApplicationDidUninstall
[%{public}@] turning off watch sleep features since sleep app was removed
[%{public}@] failed to turn off watch sleep features with error %{public}@
[%{public}@] turning off sleep schedule since Health app was removed
[%{public}@] failed to turn off sleep schedule with error %{public}@
[%{public}@] sleepStorageDidChangeExternally
[%{public}@] failed to load sleep schedule after sync with error %{public}@
[%{public}@] %{public}@ started = %d
[%{public}@] Start monitoring %{public}@ start
[%{public}@] Alreay monitoring %{public}@
[%{public}@] Stop monitoring %{public}@ start
[%{public}@] Sending notification
[%{public}@] Received posting notification completion event
[%{public}@] bedtime mode turned off by user (%{public}@)
[%{public}@] bedtime mode turned off for an unknown reason, treating as user requested
[%{public}@] bedtime mode turned off by automation (%{public}@)
[%{public}@] ignoring unknown sleep mode turn on because we're already in bedtime
[%{public}@] sleep mode exited outside of bedtime (%{public}@), ending tracking.
[%{public}@] unable to create notification identifier for event %{public}@
[%{public}@] unable to create notification content for event %{public}@
[%{public}@] failed to publish %{public}@ with error %{public}@
[%{public}@] published %{public}@
[%{public}@] tearDownNotificationForEventIdentifier %{public}@
[%{public}@] Tearing down %{public}@
[%{public}@] Tearing down all notifications
[%{public}@] Unable to find next event with identifier %{public}@ for message %{public}@
[%{public}@] Cannot create content for wake up results without valid data: %@
[%{public}@] Creating content for %{public}@
[%{public}@] sleep features disabled for this watch
[%{public}@] sleep schedule is nil
[%{public}@] sleep schedule is disabled
[%{public}@] currently in a wind down session
[%{public}@] currently in a bedtime session
[%{public}@] not in a session, must be awake
[%{public}@] significant time change occurred
[%{public}@] timezone change occurred
[%{public}@] treating significant record update as confirmed
[%{public}@] significant schedule change occurred (reason: %{public}@)
[%{public}@] schedule change not significant
[%{public}@] notifying for external change for keys: %{public}@
[%{public}@] failed to create NPSDomainAccessor
[%{public}@] re-creating NPSDomainAccessor
[%{public}@] _handleActivePairedDeviceDidChange: %{public}@
[%{public}@] synchronize failed with error %{public}@
[%{public}@] npsManager is nil when syncing
[%{public}@] syncing per-gizmo keys: %{public}@
[%{public}@] ignoring remote sleep mode exit
[%{public}@] sleep mode manually exited, treating as wake up event
[%{public}@] Transitioning to querying state
[%{public}@] in monitoring window
[%{public}@] wind down time is greater than monitor window
[%{public}@] currently charging
[%{public}@] received notification %{public}@, taking assertion
[%{public}@] batteryLevelChanged: %f
[%{public}@] we should charge
[%{public}@] we don't need to charge yet
[%{public}@] lazily checking alarm server
[%{public}@] alarm server not ready yet
[%{public}@] alarm server is ready
[%{public}@] received notification that alarm server is ready
[%{public}@] failed to update sleep alarms with error %{public}@
[%{public}@] failed to reset snooze state with error %{public}@
[%{public}@] Posting HKSPNotificationPresentGoodMorningAlert
[%{public}@] not posting %{public}@ because sensitive UI is disabled
[%{public}@] Posting HKSPNotificationDismissGoodMorningAlert
[%{public}@] it's wind down, but staying in manual bedtime mode
[%{public}@] it's bedtime, but staying in manual bedtime mode
[%{public}@] staying in manual bedtime mode
[%{public}@] sleep schedule changed to disabled from %{public}@
[%{public}@] sleep schedule state is disabled but staying in manual bedtime mode
[%{public}@] manual bedtime mode turned off by automation (%{public}@)
[%{public}@] in wake detection window
[%{public}@] in sleep tracking window
[%{public}@] in user requested sleep mode
[%{public}@] watch is charging
[%{public}@] watch sleep features disabled
[%{public}@] sleep tracking disabled
[%{public}@] wrist detect disabled
[%{public}@] sleep schedule disabled, only manual tracking supported
[%{public}@] received biome event: %{public}@
[%{public}@] setSleepMode: %{public}@ (%{public}@)
[%{public}@] ignoring biome event because sleep features are disabled for this watch
[%{public}@] handling biome event for user action
[%{public}@] handling biome event for automation
[%{public}@] handling biome event for unknown
[%{public}@] ignoring biome event for scheduled
[%{public}@] sleep mode engaged from Hunter watch, making sure focus mode is created
[%{public}@] failed to create focus mode: %{public}@
[%{public}@] sleepScheduleStateChanged: %{public}@ reason: %{public}@
[%{public}@] sleepModeDidChange: %{public}@ previousMode: %{public}@ reason: %{public}@, notifying observers
[%{public}@] failed to fetch sleep focus mode: %{public}@)
[%{public}@] wake up alarm was snoozed
[%{public}@] wake up alarm already dismissed
[%{public}@] wake up alarm is firing
[%{public}@] next wake up date is beyond maximum interval (%{public}@)
[%{public}@] user visible end date is %{public}@
[%{public}@] sleep mode during wind down not enabled
[%{public}@] scheduled sleep mode not enabled
[%{public}@] no sleep schedule
[%{public}@] sleep schedule not enabled
[%{public}@] scheduledSleepMode disabled
[%{public}@] device is in demo mode
[%{public}@] user hasn't onboarded wind down yet
[%{public}@] sleepFocusModeDidChange
[%{public}@] user just enabled scheduledSleepMode
[%{public}@] user just onboarded sleep 
[%{public}@] creating sleep focus mode
[%{public}@] failed to create sleep focus mode: %{public}@
[%{public}@] successfully created sleep focus mode
[%{public}@] deleting sleep focus mode
[%{public}@] failed to delete sleep focus mode: %{public}@
[%{public}@] successfully deleted sleep focus mode
[%{public}@] creating home screen page
HDSPWakeUpResultsNotificationQueryingState
HDSPSleepScreenUnlockDetector
HDSPSleepActionObserver
NSObject
HDSPSleepModeObserver
HDSPWakeDetector
HDSPEnvironmentAware
HDSPSleepStorage
HDSPSyncedUserDefaultsExternalChangeDelegate
HDSPNotificationObserver
HDSPDiagnosticsProvider
HKSPDiagnosticsProvider
HDSPSource
HDSPSleepModeStateMachineState
HDSPSleepModeStateMachineEventHandler
HKSPStateMachineEventHandler
HDSPTimeInBedTracker
HDSPSleepScheduleStateObserver
HDSPSleepTracker
HDSPAnalyticsManager
HDSPTimeChangeObserver
HDSPGoodMorningAlertDisabledState
HDSPWakeDetectionStateMachineState
HDSPWakeDetectionStateMachineEventHandler
HKSPPersistentStateMachineEventHandler
HDSPSleepScheduleStateCoordinatorStateMachineContext
HDSPDemoModeEnvironment
HDSPSleepModeOffState
HDSPChargingReminderStateMachine
HDSPChargingReminderStateMachineDelegate
HKSPPersistentStateMachineDelegate
HKSPStateMachineDelegate
HDSPChargingReminderStateMachineInfoProvider
HKSPStateMachineInfoProvider
HDSPChargingReminderStateMachineEventHandler
HDSPSleep
HDSPTimeAsleepTracker
HDSPSleepEventHandler
HDSPSleepEventProvider
HDSPTimeAsleepTrackerStateMachineInfoProvider
HDSPTimeAsleepTrackerStateMachineDelegate
HDSPSleepScheduleModelObserver
HDSPDevicePowerObserver
HDSPWatchOnWristObserver
HDSPWakeUpResultsNotification
HDSPWakeDetectionDisabledState
HDSPTimeAsleepTrackerStateMachine
HDSPTimeAsleepTrackerStateMachineEventHandler
HDSPWakeUpResultsNotificationLocalizer
HDSPDiagnostics
HDSPWakeDetectionActivityDetectingState
HDSPSleepLockScreenManager
HDSPSleepLockScreenStateMachineInfoProvider
HDSPSleepLockScreenStateMachineDelegate
HDSPSleepLockScreenAssertionManagerDelegate
HKSPSensitiveUIObserver
HDSPGoodMorningAlertObserver
HDSPContextStoreManager
HDSPSleepTrackingManager
HDSPSleepSessionManagerDelegate
HDSPSleepLockScreenStateMachineState
HDSPSleepLockScreenStateMachineEventHandler
HDSPWakeUpResultsNotificationWaitingForRetryState
HDSPSleepWidgetManager
HDSPSleepWidgetStateMachineInfoProvider
HDSPSleepWidgetStateMachineDelegate
HDSPTimeAsleepTrackerActivityTrackingState
HDSPGoodMorningAlertStateMachineState
HDSPGoodMorningAlertStateMachineEventHandler
HDSPNotifiedForEarlyWakeUpIDSMessage
HDSPIDSMessage
HKSPDictionarySerializable
NSCoding
NSCopying
HDSPEnvironmentDemoState
HDSPSleepSessionManager
HDSPSleepTrackerDelegate
HDSPDeviceUnlockObserver
HDSPSleepWidgetStateMachineState
HDSPSleepWidgetStateMachineEventHandler
HDSPTimeAsleepTrackerActivityAfterWakeUpTrackingState
HDSPChargingReminderManager
HDSPAnalyticsDailyReportBuilder
Analytics
HDSPGoodMorningAlertWaitingState
HDSPSleepWidgetNotOnboardedState
HDSPSleepScheduleStateCoordinatorBedtimeState
HDSPWakeUpResultsNotificationWaitingForWakeUpState
HDSPSleepWidgetWaitingState
HDSPEnvironment
HDSPEnvironmentStateMachineDelegate
HDSPEnvironmentStateMachineInfoProvider
HDSPSystemReadyDelegate
HDSPSleepStoreServer
HKSPSleepServer
HKSPServer
HDSPProcessStateManagerDelegate
HKSPXPCConnectionListenerDelegate
HDSPWatchReadyProvider
HDSPSpringboardObserver
HDSPSystemReadyProvider
HDSPSleepLockScreenWindDownState
HDSPSleepModeAutomatedOffFromManualState
HDSPSleepWidgetBedtimeState
HKSPSleepLockScreenClient
HKSPSleepLockScreenServer
HDSPSleepLockScreenAssertionManager
NSXPCListenerDelegate
HDSPChargingReminderWaitingState
HDSPDeviceUnlockMonitor
HDSPSleepWidgetGreetingState
HDSPCFUserNotificationCenter
HDSPSleepNotificationPublisher
HDSPTimeAsleepTrackerAutoTrackingState
HDSPTimeAsleepTrackerDisabledState
_HDSPConcreteSource
HDSPSleepScheduleModelMigrationManager
HDSPWatchOnWristMonitor
HKWristDetectionSettingManagerObserver
HDSPSleepScheduleStateCoordinatorInitialState
HDSPTimeAsleepTrackerSleepTrackingState
HDSPGoodMorningAlertStateMachine
HDSPGoodMorningAlertStateMachineDelegate
HDSPGoodMorningAlertStateMachineInfoProvider
HDSPSleepAlarmSnoozedIDSMessage
HDSPApplicationWorkspaceMonitor
LSApplicationWorkspaceObserverProtocol
HDSPWakeUpResultsNotificationDisabledState
_HDSPCFUserNotificationCenterRegistration
HDSPCFUserNotificationCenterManager
HDSPPhoneReadyProvider
HDSPSleepDaemon
HDSPEnvironmentStateMachine
HDSPEnvironmentStateMachineEventHandler
HDSPSimulatorReadyProvider
HDSPSleepScheduleStateCoordinatorDelayedWakeUpState
HDSPSleepLockScreenBedtimeState
HDSPConfirmWakeUpIDSMessage
HDSPSleepWidgetDisabledState
HDSPSleepLockScreenGreetingState
HDSPWakeDetectionNotifiedState
HDSPWakeUpResultsNotificationStateMachine
HDSPWakeUpResultsNotificationStateMachineDelegate
HDSPWakeUpResultsNotificationStateMachineEventHandler
HDSPWatchOnWristWakeDetector
HDSPSyncedDefaults
HDSPSyncedUserDefaults
HKSPUserDefaults
HDSPWakeDetectionManager
HDSPWakeDetectorDelegate
HDSPWakeDetectionStateMachineDelegate
HDSPWakeDetectionStateMachineInfoProvider
HDSPGoodMorningAlertPresentingState
_HDSPSleepModeTurnedOffState
HDSPTimeAsleepTrackerInternalEndState
HDSPWakeUpResultsNotificationManager
HDSPWakeUpResultsNotificationStateMachineInfoProvider
HDSPSleepModeManualOffState
HDSPSyncedDefaultsConfiguration
HDSPSyncedDefaultsInfo
HDSPSyncedDefaultsKeySet
HDSPSleepScheduleModelChangeEvaluator
HDSPIDSServiceManager
HDSPIDSServiceDelegate
_HDSPWakeDetectionDetectingState
HDSPEventRecordMessage
BSDescriptionProviding
_HDSPPowerAssertion
HDSPAssertion
HDSPWidgetRelevantShortcutDonor
HDSPWidgetRelevanceDonor
HDSPSleepAlarmDismissedIDSMessage
HDSPSleepLockScreenBedtimeInProgressState
Daemon
HDSPSleepEventScheduler
HDSPEventScheduleDelegate
HDSPSleepEventDelegate
HDSPSleepSessionPersistence
HDSPSleepAlarmManager
HDSPMacReadyProvider
HDSPCloudDefaults
HDSPSleepScheduleStateCoordinatorDisabledState
HDSPProcessStateManager
HDSPTimeChangeListener
HDSPChargingReminderNotifiedState
HDSPXPCAlarmScheduler
HDSPEventScheduler
HDSPEnvironmentReadyState
HDSPSleepEventList
HDSPSystemMonitor
HDSPAssertionManager
_HDSPOSTransaction
HDSPTestIDSMessage
HDSPSleepScheduleStateCoordinator
HDSPSleepScheduleStateCoordinatorStateMachineDelegate
HDSPSleepScheduleStateCoordinatorStateMachineInfoProvider
HDSPGCDTimerScheduler
HDSPSleepWidgetBedtimeInProgressState
HDSPSetSleepModeIDSMessage
HDSPEnvironmentMigrationState
HDSPSleepLockScreenOffState
HDSPWakeUpResultsNotificationBuilder
HDSPDisabledEnvironment
HDSPBiomeManager
_HDSPBiomeBridge
HDSPBiomeInterface
HDSPGoodMorningAlertManager
HDSPWakeDetectionWaitingState
HDSPSleepScheduleStateCoordinatorWindDownState
HDSPSleepNotificationManager
HDSPWidgetTimelineReloader
HDSPWidgetReloader
HDSPSleepModeWindDownState
Editing
HDSPSleepFocusModeBridge
HKSPSleepFocusModeBridge
HDSPWakeUpResultsNotificationStateMachineState
HDSPWakeDetectionExplicitDetectingState
HDSPSleepActionManager
HDSPCFUserNotification
HDSPWakeDetectionStateMachine
HDSPSleepWidgetUpcomingState
HDSPEnvironmentState
HDSPSleepScheduleModelChangeEvaluation
HDSPSleepWidgetWindDownState
HDSPDevicePowerMonitor
HDSPSleepLockScreenStateMachine
HDSPXPCActivityScheduler
HDSPActivityScheduler
HDSPXPCActivity
HDSPActivity
HDSPSleepScheduleModelSaveResult
HDSPWakeUpResultsNotificationDelayingForTrackingState
HDSPAppPredictionClient
HDSPSleepProactiveBridge
HDSPDismissGoodMorningIDSMessage
HDSPSleepScheduleStateCoordinatorWakeUpState
HDSPSleepScheduleStateCoordinatorStateMachine
HDSPSleepScheduleStateCoordinatorStateMachineEventHandler
HDSPTimeAsleepTrackerWaitingState
HDSPIDSService
_HDSPIDSService
IDSServiceDelegate
HDSPEnvironmentContext
HDSPSleepSession
NSSecureCoding
HDSPSleepSessionInterval
HDSPSleepScheduleModelManager
HDSPSleepStorageObserver
HDSPApplicationWorkspaceObserver
HDSPSpringboardMonitor
HDSPWakeUpResultsNotificationNotifiedState
HDSPSleepModeBedtimeState
HDSPTimeAsleepTrackerManualTrackingState
HDSPUserNotificationCenter
HDSPSleepModeStateMachine
HDSPSleepModeStateMachineDelegate
HDSPSleepModeStateMachineInfoProvider
HDSPSleepScheduleStateCoordinatorStateMachineState
HDSPSleepWidgetStateMachine
HDSPNanoDefaults
HDSPSleepScheduleModelValidationResult
HDSPSleepModeAutomatedOffState
HDSPEnvironmentNotReadyState
HDSPChargingReminderDisabledState
HDSPSleepModeExitDetector
HDSPWakeUpResultsNotificationNeedsProtectedDataState
HDSPChargingReminderStateMachineState
HDSPNotificationListener
HDSPChargingReminderMonitoringState
HDSPMobileTimerBridge
HDSPDarwinNotificationCenter
HDSPSleepModeManualBedtimeState
HDSPTimeAsleepTrackerStateMachineState
HDSPSleepModeManager
HKSPSleepFocusModeBridgeDelegate
init
dealloc
saySomething
initWithCoder:
infoProvider
currentDate
notificationAttemptWindowForWakeUpBeforeDate:
endDate
isMemberOfClass:
stateMachine
needsProtectedDataState
delegate
startObservingProtectedHealthDataAvailability
_executeQuery
stopObservingProtectedHealthDataAvailability
hksp_isHealthDatabaseInaccessibleError
_retryQueryIfNeededOrTransitionToNeedsProtectedDataState
hdsp_isInsufficientAsleepDataError
_transitionToRetryState
_transitionToWaitingForWakeUpState
_transitionToNotifiedState
executeQuery
enterState:
waitingForWakeUpState
notifiedState
waitingForRetryState
stateName
expirationDate
schedulesExpiration
didEnterWithPreviousState:context:
didExitWithNextState:context:
queryDidFailWithError:
queryDidComplete
protectedHealthDataDidBecomeAvailable
_shouldRetryImmediatelyOnFailure
environment
performBlock:withLock:
sleepModeManager
addObserver:
actionManager
_resetCounter
removeObserver:
setNumberOfTimesDismissed:
_withLock:
userDefaults
hksp_setInteger:forKey:
hksp_integerForKey:
isDetecting
numberOfTimesDismissed
wakeDetectorDelegate
currentDateProvider
wakeDetector:didDetectWakeUpEventOnDate:
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
wakeUpAlarmWasDismissedFromSource:
wakeUpAlarmWasSnoozedFromSource:
goodMorningWasDismissed
wakeNotificationWasConfirmed
sleepLockWasDismissed
sleepModeDidChange:previousMode:reason:
startDetecting
stopDetecting
type
setWakeDetectorDelegate:
TB,R,N
TQ,R,N
T@"<HDSPWakeDetectorDelegate>",W,N
initWithEnvironment:
environmentWillBecomeReady:
environmentDidBecomeReady:
environmentWillInvalidate:
T@"HDSPEnvironment",R,W,N
dismissCounterLock
.cxx_destruct
_isDetecting
_dismissCounterLock
_wakeDetectorDelegate
_environment
TQ,N
T{os_unfair_lock_s=I},R,N,V_dismissCounterLock
TB,R,N,V_isDetecting
T@"<HDSPWakeDetectorDelegate>",W,N,V_wakeDetectorDelegate
T@"HDSPEnvironment",R,W,N,V_environment
addObject:
componentsJoinedByString:
sharedBehavior
features
autobahn
initWithDataVersionKey:currentDataVersion:cloudDataVersionKey:currentCloudDataVersion:cloudSyncEnabledKey:localDataVersionKey:currentLocalDataVersion:
initWithIdentifier:modficationDateKey:keysToPersist:keysToSync:
initWithIdentifier:modficationDateKey:keysToPersist:keysToSync:perGizmoKeys:defaultValues:
arrayWithObjects:count:
initWithInfo:keySets:
standardConfiguration
initWithEnvironment:configuration:
initWithEnvironment:configuration:syncedDefaults:
defaultCallbackScheduler
initWithCallbackScheduler:
syncedDefaults
dataVersion
behavior
sleepCloudKitSync
cloudStorageDataVersion
localDataVersion
hdsp_forceSynchronizeWithCompletion:
saveDataVersion
setWithObject:
innerClasses
setByAddingObjectsFromSet:
_loadObjectOfClass:allowedClasses:propertiesToLoad:error:
_saveObject:error:
_saveObjectChanges:versionKey:currentVersion:error:
_removeObjectProperties:error:
loadSleepSchedule:
loadSleepSettings:
loadSleepEventRecord:
sleepScheduleModelWithSleepSchedule:sleepSettings:sleepEventRecord:
sleepSchedule
saveSleepSchedule:error:
sleepSettings
saveSleepSettings:error:
sleepEventRecord
saveSleepEventRecord:error:
hksp_dictionaryRepresentationForKeys:
count
dictionaryWithObjects:forKeys:count:
initWithAllowedClasses:serializedDictionary:
deserializeObjectOfClass:error:
serialize:error:
serializedDictionary
hksp_serializedProperties
mutableCopy
hksp_saveDictionary:
hksp_serializedClassName
keySetForIdentifier:
keysToPersist
allKeys
setWithArray:
na_setByRemovingObjectsFromSet:
hksp_removeObjectsForKeys:
hksp_synchronize
changes
changedValue
isAdd
isUpdate
copyWithZone:
property
identifier
setObject:forKeyedSubscript:
na_each:
numberWithUnsignedInteger:
hksp_setObject:forKey:
diagnostics
addProvider:
notificationListener
hdsp_setExternalChangeDelegate:
resetCloudData
sleepStorageDidChangeExternally:
enumerateObserversWithBlock:
isEqualToString:
futureWithNoResult
resetCloudStorage
localDefaultsDictionaryRepresentation
cloudKitDefaultsDictionaryRepresentation
stringWithFormat:
syncedUserDefaultsDidChangeExternally:
syncedUserDefaults:didChangeExternallyForKeys:
notificationListener:didReceiveNotificationWithName:
diagnosticInfo
diagnosticDescription
sourceIdentifier
dontNotify
dontSync
T@"NSString",R,N
needsMigration
performInitialSyncWithCompletion:
saveSleepScheduleChanges:error:
removeSleepScheduleWithError:
saveSleepSettingsChanges:error:
removeSleepSettingsWithError:
saveSleepEventRecordChanges:error:
removeSleepEventRecordWithError:
loadSleepScheduleModel:
saveSleepScheduleModel:error:
configuration
observers
_syncedDefaults
_configuration
_observers
T@"HDSPSyncedDefaults",R,N,V_syncedDefaults
T@"HDSPSyncedDefaultsConfiguration",R,N,V_configuration
T@"HKSPObserverSet",R,N,V_observers
objectForKeyedSubscript:
integerValue
defaultChangeReason
unsignedIntegerValue
sleepMode
_nextSleepModeStateFromTimeline:
isAppleWatch
sleepFeaturesEnabled
offState
hasSleepFocusMode
_nextSleepModeStateCommon:
sleepScheduleState
shouldGoIntoSleepModeDuringState:
bedtimeState
windDownState
enterState:context:
updateState
manualBedtimeState
updateStateWithContext:
sleepScheduleStateChangedToWindDown:fromState:
sleepScheduleStateChangedToBedtime:fromState:
sleepScheduleStateChangedToWakeUp:
sleepScheduleStateChangedToDisabledFromState:
userTurnedOnSleepModeWithReason:
userTurnedOffSleepModeWithReason:
automationTurnedOnSleepModeWithReason:
automationTurnedOffSleepModeWithReason:
sleepModeTurnedOnForUnknownReason
sleepModeTurnedOffForUnknownReason
nextStateWithContext:
T@"HDSPSleepModeStateMachine",R,W,D,N
Tq,R,N
sleepCoordinator
sleepScheduleModel
isEnabledAndHasOccurrences
timeInBedTracking
sleepScheduleModelManager
isTimeInBedTrackingEnabled
_endSleepSessionWithReason:
_createSleepSessionWithEndDate:endReason:
sleepTracker:didEndSession:reason:
_computeSleepSessionStartBeforeDate:
initWithStartDate:endDate:
_computeSessionMetadataForInterval:
sleepSessionWithDateInterval:sleepIntervals:endReason:metadata:requiresFirstUnlock:
previousEventWithIdentifier:dueBeforeDate:
sleepTracking
dateByAddingTimeInterval:
futureWithResult:
previousOccurrenceBeforeDate:
isSingleDayOverride
hk_gregorianCalendar
wakeUpComponents
dateFromComponents:
bedtimeComponents
hksp_dateNearestMatchingComponents:
startDate
systemTimeZone
name
requiresFirstUnlock
interval
computeSleepIntervalsForInterval:
endReason
metadata
sleepIntervals
flatMap:
sleepScheduleStateDidChange:previousState:reason:
setDelegate:
processedSessionForSession:
previousSessionFinished
T@"<HDSPSleepTrackerDelegate>",W,N
sleepIntervalScheduler
_delegate
_sleepIntervalScheduler
T@"<HKSPQueueBackedScheduler>",R,N,V_sleepIntervalScheduler
T@"HKSPSleepScheduleModel",R,N
T@"<HDSPSleepTrackerDelegate>",W,N,V_delegate
hksp_analyticsUserDefaults
initWithUserDefaults:
initWithEnvironment:analyticsManager:dataCollectionScheduler:
timeChangeListener
updateScheduledActivity
isDataCollectionEnabled
scheduleDailyCollectionActivity
cancelDailyCollectionActivity
dataCollectionScheduler
dailyCollectionActivity
_lock_executeQuery:
scheduleActivity:activityHandler:
unscheduleActivities
dailyCollectionCriteria
initWithEventName:options:criteria:
isDiagnosticDataSubmissionAllowed
isDataCollectionInProgress
_queryMorningIndexRangeForDate:
deferIfNecessary
_processQueryResultsWithSummaries:queryRange:error:
_makeReportQueryWithMorningIndexRange:resultsHandler:
initWithIdentifier:mode:
setCacheSettings:
healthStoreProvider
healthStore
executeQuery:
initWithEnvironment:daySummaries:morningIndexRange:
_submitAnalyticsReportsUsingBuilder:
_pruneExpiredWindDownActionDataBeforeQueryRange:
hk_dayIndexWithCalendar:
initWithMorningIndexRange:ascending:limit:options:resultsHandler:
setDebugIdentifier:
buildReports
analyticsManager
trackEvents:
numberWithInteger:
analyticsStore
removeAllWindDownActionsBeforeMorningIndex:
significantTimeChangeDetected:
timeZoneChangeDetected:
_unit_testing_pruneExpiredWindDownActionData
analyticsLock
_isDataCollectionInProgress
_analyticsLock
_dataCollectionScheduler
_analyticsManager
T{os_unfair_lock_s=I},R,N,V_analyticsLock
T@"<HDSPActivityScheduler>",R,N,V_dataCollectionScheduler
TB,R,N,V_isDataCollectionInProgress
T@"HKSPAnalyticsManager",R,N,V_analyticsManager
isWakeDetectionDisabled
disabledState
activeTypes
activityDetectingState
explicitDetectingState
waitingState
isWatch
watchSleepFeaturesEnabled
isAnySleepTrackingOnboardingCompleted
isAnySleepCoachingOnboardingCompleted
stateWithIdentifierDidExpire:
wakeupEventDetected:date:
earlyWakeUpWasNotifiedRemotely
isDetectingState
wakeDetectionEventDue
T@"HDSPWakeDetectionStateMachine",R,W,D,N
contextWithReason:
contextForAlarmTurnedOffWhileFiring
reason
isForAlarmTurnedOffWhileFiring
_isForAlarmTurnedOffWhileFiring
_reason
TQ,R,N,V_reason
TB,R,N,V_isForAlarmTurnedOffWhileFiring
_sleepModeManagerProvider
hksp_supportsSleepAlarms
hksp_supportsHealthData
initWithLocalDeviceHealthStore
hksp_supportsSleepLockScreen
hksp_supportsSleepWidget
standardUserDefaults
initWithBehavior:sleepStorageProvider:sleepScheduleModelManagerProvider:sleepSchedulerProvider:sleepServerProvider:sleepCoordinatorProvider:sleepModeManagerProvider:sleepTrackingManagerProvider:goodMorningAlertManagerProvider:chargingReminderManagerProvider:wakeDetectionManagerProvider:wakeUpResultsNotificationManagerProvider:actionManagerProvider:sleepAlarmManagerProvider:healthStoreProvider:contextStoreManagerProvider:biomeManagerProvider:migrationManagerProvider:notificationManagerProvider:notificationListenerProvider:sleepLockScreenManagerProvider:sleepWidgetManagerProvider:idsServiceManagerProvider:diagnosticsProvider:systemMonitorProvider:assertionManager:timeChangeListenerProvider:sensitiveUIMonitorProvider:analyticsManagerProvider:userDefaults:currentDateProvider:defaultCallbackScheduler:
hksp_isRunningUnitTests
initWithEnvironment:sleepFocusModeBridge:sleepProactiveBridge:
environmentDidBecomeReady
setInitialSchedule
resetDemoMode
setSleepMode:
demoScheduleModel
perform:withSource:
demoSleepSchedule
demoSleepSettings
demoEventRecord
setScheduledSleepMode:
setSleepTracking:
setTimeInBedTracking:
setBedtimeReminders:
setChargingReminders:
setWakeUpResults:
sleepModeOptions
setSleepModeOptions:
setWeekdays:
setHour:
setMinute:
setWakeUpComponents:
setBedtimeComponents:
alarmConfiguration
setEnabled:
setAlarmConfiguration:
saveOccurrence:
setSleepDurationGoal:
copy
setSleepCoachingOnboardingCompletedVersion:
setSleepTrackingOnboardingCompletedVersion:
setSleepWindDownShortcutsOnboardingCompletedVersion:
sleepCoachingOnboardingFirstCompletedDate
setSleepCoachingOnboardingFirstCompletedDate:
sleepTrackingOnboardingFirstCompletedDate
setSleepTrackingOnboardingFirstCompletedDate:
sleepWindDownShortcutsOnboardingFirstCompletedDate
setSleepWindDownShortcutsOnboardingFirstCompletedDate:
isDemoEnvironment
initWithIdentifier:allowedStates:persistence:delegate:infoProvider:currentDateProvider:
initWithStateMachine:
persistedState
setInitialState:
currentState
batteryLevelChanged:
postChargingReminderNotification
notifyDelegateWithBlock:
startBatteryMonitoring
stopBatteryMonitoring
monitoringWindowAfterDate:
isCharging
callbackScheduler
T@"<NAScheduler>",R,N
scheduleStateExpiration
unscheduleStateExpiration
T@"NSDate",R,N
initWithIdentifier:persistence:delegate:infoProvider:currentDateProvider:
allStates
loggingCategory
monitoringState
_disabledState
_waitingState
_monitoringState
_notifiedState
T@"<HDSPChargingReminderStateMachineDelegate>",R,W,D,N
T@"<HDSPChargingReminderStateMachineInfoProvider>",R,W,D,N
T@"HDSPChargingReminderDisabledState",R,N,V_disabledState
T@"HDSPChargingReminderWaitingState",R,N,V_waitingState
T@"HDSPChargingReminderMonitoringState",R,N,V_monitoringState
T@"HDSPChargingReminderNotifiedState",R,N,V_notifiedState
soundWithAlertType:
setShouldRepeat:
setAlertTopic:
hdsp_bedtimeReminderSound
hdsp_chargingReminderSound
hdsp_wakeUpResultsSound
hdsp_wakeDetectionSound
initWithEnvironment:sleepTrackerProvider:
performBlock:assertLock:
sleepScheduler
addEventHandler:
addEventProvider:
systemMonitor
devicePowerMonitor
watchOnWristMonitor
isWristDetectEnabled
inUserRequestedSleepMode
currentSleepScheduleState
nextEventWithIdentifier:dueAfterDate:
hksp_isBeforeDate:
sleepEventDelegate
eventProviderHasUpcomingEvents:
eventProviderCancelledEvents:
hdsp_startSleepTrackingSessionWithReason:
sleepTrackerDidStartSession:
_handleSleepSessionAnalysisResults:endReason:
hdsp_endSleepTrackingSessionWithReason:resultsHandler:
_createSleepSessionWithSleepAnalysis:endReason:
hksp_isAfterDate:
sleepStageIntervals
intervalType
sleepSessionIntervalWithInterval:type:
na_map:
addObjectsFromArray:
startActivityUpdates
stopActivityUpdates
_assertLock:
contextStoreManager
healthAppForegroundPredicate
_handleAppLaunched:onDate:
registerPredicate:identifier:callback:
sleepAppForegroundPredicate
appLaunchedOnDate:
unregister:
bedtimeOccurred
wakeUpOccurredWithReason:
currentStateExpirationDate
currentStateIdentifier
sleepEventWithIdentifier:dueDate:
scheduledExpirationStateIdentifiers
userEngagedSleepMode
sleepModeExitedWithReason:
_handleActivityDetectedOnDate:
_handleInternalSleepSessionEndRequest
activityDetectedOnDate:
sleepSessionEndRequestedInternally
startWakeDetectionOccurred
sleepSessionFinished
sleepEventIsDue:
eventIdentifiers
upcomingEventsDueAfterDate:
providerIdentifier
setSleepEventDelegate:
T@"NSString",R,C,N
T@"<HDSPSleepEventDelegate>",W,N
trackingWindowAfterDate:
inWakeDetectionWindow
startSleepTrackingSessionWithReason:
endSleepTrackingSessionWithReason:
startActivityDetection
stopActivityDetection
startAppLaunchDetection
stopAppLaunchDetection
notifyForActivityDetectedOnDate:
sleepScheduleModelManager:didUpdateSleepSchedule:
sleepScheduleModelManager:didUpdateSleepSettings:
sleepScheduleModelManager:didUpdateSleepEventRecord:
sleepScheduleModelManager:didUpdateSleepScheduleModel:
deviceChangedChargingState:
detectedOnWristOnDate:
detectedOffWristOnDate:
wristDetectEnabledDidChange
sleepTrackerProvider
sleepTracker
timeAsleepTrackerLock
appLaunchRegistrations
isPendingDetectionEnd
_isPendingDetectionEnd
_timeAsleepTrackerLock
_sleepEventDelegate
_sleepTrackerProvider
_sleepTracker
_stateMachine
_appLaunchRegistrations
T@?,R,C,N,V_sleepTrackerProvider
T@"<HDSPTimeAsleepTracker>",R,N,V_sleepTracker
T{os_unfair_lock_s=I},R,N,V_timeAsleepTrackerLock
T@"HDSPTimeAsleepTrackerStateMachine",R,N,V_stateMachine
T@"NSArray",R,N,V_appLaunchRegistrations
TB,R,N,V_isPendingDetectionEnd
T@"<HDSPSleepEventDelegate>",W,N,V_sleepEventDelegate
errorWithDomain:code:userInfo:
domain
code
hdsp_insufficientAsleepDataError
autoTrackingState
activityTrackingState
activityAfterWakeUpTrackingState
manualTrackingState
internalEndState
_autoTrackingState
_activityTrackingState
_activityAfterWakeUpTrackingState
_manualTrackingState
_internalEndState
T@"<HDSPTimeAsleepTrackerStateMachineDelegate>",R,W,D,N
T@"<HDSPTimeAsleepTrackerStateMachineInfoProvider>",R,W,D,N
T@"HDSPTimeAsleepTrackerDisabledState",R,N,V_disabledState
T@"HDSPTimeAsleepTrackerWaitingState",R,N,V_waitingState
T@"HDSPTimeAsleepTrackerAutoTrackingState",R,N,V_autoTrackingState
T@"HDSPTimeAsleepTrackerActivityTrackingState",R,N,V_activityTrackingState
T@"HDSPTimeAsleepTrackerActivityAfterWakeUpTrackingState",R,N,V_activityAfterWakeUpTrackingState
T@"HDSPTimeAsleepTrackerManualTrackingState",R,N,V_manualTrackingState
T@"HDSPTimeAsleepTrackerInternalEndState",R,N,V_internalEndState
notification
category
_localizedBodyForOneDayNotification
_localizedBodyForOneWeekDayNotification
_localizedBodyForTwoWeekNotification
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
dailySleepDurationGoal
numberWithDouble:
localizedStringFromNumber:numberStyle:
userFirstName
_embeddedNameLocalizedStringKey
length
_embeddedNameSubstitutionStringKey
localizedStringWithFormat:
_regularLocalizedStringKey
_regularSubstitutionStringKey
weeklyGoalAchieved
notificationVariant
goalAchieved
secondUnit
doubleValueForUnit:
dayUnit
_localizedStringKeyBase
initWithNotification:healthStore:
localizedTitle
localizedBody
_notification
_healthStore
T@"HDSPWakeUpResultsNotification",R,N,V_notification
T@"HKHealthStore",R,N,V_healthStore
immediateScheduler
initWithLabel:
removeProvider:
_logDiagnostics:
countByEnumeratingWithState:objects:count:
providers
_providers
_diagnostics
T@"HKSPObserverSet",R,N,V_providers
T@"HKSPDiagnostics",R,N,V_diagnostics
nextWakeUp
initWithEnvironment:assertionManager:
goodMorningAlertManager
sensitiveUIMonitor
sleepModeDidChange:reason:
presentAlertForGoodMorning
dismissAlertForGoodMorning
_lock_updateLockScreenAssertion
shouldHideForSensitivity:
numberWithBool:
_lock_resolvedLockScreenState
_lock_overridingLockScreenState
_lock_shouldShowLockScreenForState:
takeAssertionIfNeeded
sendLockScreenState:userInfo:
invalidateAssertion
hasLockScreenConnection
_currentState
isLockScreenActive
sleepLockScreenStateDidChange:previousState:
lockScreenDidConnect
sensitiveUIStateChanged
currentLockScreenState
overrideLockScreenState:userInfo:
sleepLockScreenLock
assertionManager
setCurrentLockScreenState:
didUpdateAlertAssertion
setDidUpdateAlertAssertion:
_state
_overrideState
_overrideUserInfo
_sleepLockScreenLock
_assertionManager
_currentLockScreenState
_didUpdateAlertAssertion
T{os_unfair_lock_s=I},R,N,V_sleepLockScreenLock
T@"HDSPSleepLockScreenStateMachine",R,N,V_stateMachine
T@"<HDSPSleepLockScreenAssertionManager>",R,N,V_assertionManager
Tq,N,V_currentLockScreenState
T@?,C,N,V_didUpdateAlertAssertion
userContext
initWithEnvironment:context:
value
localWakingRegistrationWithIdentifier:contextualPredicate:clientIdentifier:callback:
registerCallback:
deregisterCallback:
keyPathForDefaultPairedDeviceForegroundApp
predicateForKeyPath:equalToValue:
keyPathForForegroundApp
_writeSleepInfoToContextStore:
lastModifiedDate
updateForScheduleModelModifiedOnDate:
sleepScheduleModelDateModified
sleepEvent
sleepModeState
sleepModeOn
contextualKeyPath
addEntriesFromDictionary:
keyPathForSleepStateDictionary
context
contextLock
_contextLock
_context
T{os_unfair_lock_s=I},R,N,V_contextLock
T@"<_CDLocalContext>",R,N,V_context
platformSpecificTrackerWithEnvironment:
initWithEnvironment:sleepSessionManager:sleepTracker:
savePendingSessions
sleepSessionSaved:
archivedSleepSessionsSaved:
sleepSessionManager:didSaveSession:
sleepSessionManager:didSaveArchivedSessions:
sleepSessionManager:requestsProcessedSessionForSession:
sleepSessionManagerDidFinishSession:
sleepSessionObservers
sleepSessionManager
_sleepSessionObservers
_sleepSessionManager
T@"HKSPObserverSet",R,N,V_sleepSessionObservers
T@"HDSPSleepSessionManager",R,N,V_sleepSessionManager
T@"<HDSPSleepTracker>",R,N,V_sleepTracker
sleepLockScreenState
greetingState
_nextStateForSleepMode:reason:context:
_isSleepLockScreenDisabled
bedtimeInProgressState
timeIntervalSinceDate:
goodMorningScreenEnabledWithLogObject:
T@"HDSPSleepLockScreenStateMachine",R,W,D,N
scheduleRetryAttempt
unscheduleRetryAttempt
queryingState
retryAttemptEventDue
reloadSleepWidget
initWithInterval:executeBlock:
initWithEnvironment:widgetReloader:reloadThrottler:relevanceDonor:
_lock_currentSleepWidgetState
widgetState
sleepScheduleModelDidChange:
sleepScheduleStateDidChange:
sleepModeDidChange:isUserRequested:
significantTimeChangeOccurred
currentContext
source
execute
donateRelevanceForWidgetState:
currentSleepWidgetState
isOnboarded
sleepWidgetStateDidChange:previousState:
sleepWidgetShouldReload
overrideWidgetState:
clearWidgetOverrideState
_sleepWidgetLock
_widgetReloader
_reloadThrottler
_relevanceDonor
_isOverridingWidgetState
isActivityTrackingState
inExpectedAutoTrackingWindow
goodMorningAlertEnabled
sleepScheduleStateChangedToBedtime
sleepScheduleStateChangedToWakeUp
goodMorningAlertTimedOut
T@"HDSPGoodMorningAlertStateMachine",R,W,D,N
encodeWithCoder:
destinations
sleepHealthStore
initWithEnvironment:persistence:
deviceUnlockMonitor
firstObject
mainBundle
bundleIdentifier
stringByAppendingPathComponent:
_archivedSessionDirectory
hdsp_startSession
hdsp_stopSession
_hasUnprocessedSessions
hasBeenUnlockedSinceBoot
_locked_savePendingSessions
_waitForFirstUnlock
defaultManager
_archivedSessionFile
fileExistsAtPath:isDirectory:
_unprocessedSessions
combineAllFutures:
hdsp_persistSessions:
removeSessionDataFile
addCompletionBlock:
addSuccessBlock:
initWithContentsOfFile:
initForReadingFromData:error:
decodeObjectOfClasses:forKey:
finishDecoding
fileExistsAtPath:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
initRequiringSecureCoding:
encodeObject:forKey:
finishEncoding
encodedData
writeToFile:options:error:
archiveSession:
removeItemAtPath:error:
startSession
saveSession:
stopSession
deviceHasBeenUnlocked
persistence
deviceUnlockManager
sessionLock
_sessionLock
_persistence
_deviceUnlockManager
T@"<HDSPSleepSessionPersistence>",R,N,V_persistence
T@"HDSPDeviceUnlockMonitor",R,N,V_deviceUnlockManager
T{os_unfair_lock_s=I},R,N,V_sessionLock
T@"<HDSPSleepSessionManagerDelegate>",W,N,V_delegate
notOnboardedState
expirationDuration
shouldGoIntoUpcomingState
upcomingState
hksp_isAfterOrSameAsDate:
widgetStateHasTimeComponent
reloadsWidgetOnModelChange
reloadsWidgetOnTimeChange
T@"HDSPSleepWidgetStateMachine",R,W,D,N
stateDidExpireWithContext:
initWithEnvironment:monitoringScheduler:
bedtimeReminders
windDownTime
earlierDate:
hksp_isBeforeOrSameAsDate:
hkspDescription
monitorActivity
checkBatteryLevel
monitorCriteria
batteryLevel
arrayByAddingObject:
nextOccurrenceAfterDate:
isEnabled
notificationManager
publishNotificationForEvent:userInfo:
chargingReminderLock
monitoringScheduler
_chargingReminderLock
_monitoringScheduler
T{os_unfair_lock_s=I},R,N,V_chargingReminderLock
T@"HDSPChargingReminderStateMachine",R,N,V_stateMachine
T@"<HDSPActivityScheduler>",R,N,V_monitoringScheduler
daySummaries
morningIndexRange
showSensitiveLogItems
_dailyReportEvent
_windDownEvents
markAllActionsAsCollected
goalProgressForDaySummaries:inMorningIndexRange:
isImproveHealthAndActivitySubmissionAllowed
setIsImproveHealthAndActivitySubmissionAllowed:
_userAgeForCurrentDate:
setUserAge:
_biologicalSex
setBiologicalSex:
activePairedWatchProductType
setActiveWatchProductType:
_weeksSinceOnboardDate:currentDate:calendar:
setWeeksSinceOnboardedSleepSchedule:
setWeeksSinceOnboardedSleepTracking:
setWeeksSinceOnboardedWindDownActions:
occurrences
setScheduleMigration:
sleepDurationGoal
setSleepGoal:
setWatchSleepTrackingEnabled:
setTimeInBedTrackingEnabled:
setBedTimeWindDownRemindersEnabled:
wakeUpResults
setWakeUpResultsEnabled:
scheduledSleepMode
setScheduledSleepModeEnabled:
chargingReminders
setChargeRemindersEnabled:
_didInteractWithWindDownActionsWithinLastTwoDays
setInteractedWithWindDownLast24Hrs:
setUseSleepScreen:
occurrenceOnDay:
setScheduleMonday:
setAlarmMonday:
toneIdentifier
setHapticToneIdentifierMonday:
usesDefaultBedtimeAndWakeUpComponents
setIsDefaultScheduleMonday:
setScheduleTuesday:
setAlarmTuesday:
setHapticToneIdentifierTuesday:
setIsDefaultScheduleTuesday:
setScheduleWednesday:
setAlarmWednesday:
setHapticToneIdentifierWednesday:
setIsDefaultScheduleWednesday:
setScheduleThursday:
setAlarmThursday:
setHapticToneIdentifierThursday:
setIsDefaultScheduleThursday:
setScheduleFriday:
setAlarmFriday:
setHapticToneIdentifierFriday:
setIsDefaultScheduleFriday:
setScheduleSaturday:
setAlarmSaturday:
setHapticToneIdentifierSaturday:
setIsDefaultScheduleSaturday:
setScheduleSunday:
setAlarmSunday:
setHapticToneIdentifierSunday:
setIsDefaultScheduleSunday:
setScheduleDisabled:
_changedSchedule:withinNumberOfDays:currentDate:calendar:
setScheduleChangePast24Hours:
setScheduleChangePast7days:
standardDeviationActualTimeAsleep
setStddevActualTimeAsleep:
standardDeviationScheduledTimeAsleep
setStddevScheduledTimeAsleep:
standardDeviationActualVsScheduledTimeAsleep
setStddevActualVsScheduledTimeAsleep:
_daysWatchWornToSleepOverLastNumberOfDays:excludeWeekdays:calendar:
setDaysWornWatchToSleepInLast7Days:
setDaysWornWatchToSleepInLast30Days:
setWeekendDaysWornWatchToSleepInLast7Days:
_woreWatchToSleepLastNight
setDidWearWatchToSleepLastNight:
_bucketedSleepDurationLastNight
setSleepDurationLastNight:
_sleepDurationLastNightIncludingAwake:
_lastNightsDurationForSleepStage:
_stageDurationPercentage:ofTotalDuration:
setSleepStagePercentAwakeLastNight:
setSleepStagePercentRemLastNight:
setSleepStagePercentCoreLastNight:
setSleepStagePercentDeepLastNight:
hk_weekendDays
morningIndex
containsPeriodsWithAppleSleepTrackingData
dateInterval
component:fromDate:
containsObject:
hk_filter:
na_firstObjectPassingTest:
sampleIntervals
duration
enumerateObjectsUsingBlock:
hdsp_enumerateFirstPartyWatchSleepTrackingSegmentsWithBlock:
uncollectedWindDownActions
initWithWindDownEventData:watchProductType:weeksSinceOnboarded:
hk_morningIndexWithCalendar:
windDownActionsAfterMorningIndex:
allValues
wasUsed
components:fromDate:toDate:options:
startOfDayForDate:
weekOfYear
biologicalSexWithError:
biologicalSex
dateOfBirthComponentsWithError:
hk_ageWithCurrentDate:
_daySummaries
_morningIndexRange
T@"NSArray",R,N,V_daySummaries
T{?=qq},R,N,V_morningIndexRange
periods
containsSegmentsWithAppleSleepTrackingData
segments
containsAppleSleepTrackingData
isOnCharger
presentingState
isAlarmEnabled
delayedWakeUpState
wakeUpState
scheduleState
wakeTimeReached
wakeUpConfirmed
_transitionToDelayingForTrackingState
delayingForTrackingState
wakeUpDidOccur
setThreadIdentifier:
hdsp_notificationContentWithEnvironment:
hksp_supportsSleepTracking
hksp_supportsGoodMorningAlerts
hksp_supportsChargingReminders
hksp_supportsWakeDetection
hksp_supportsWakeUpResults
hksp_supportsDailyAnalytics
hksp_sleepdUserDefaults
startListening
initWithDelegate:infoProvider:
shutdown
_environmentAwareComponents
performWhenEnvironmentIsReady:withContext:
perform:withContext:
contextWithSource:
currentThread
threadDictionary
removeLastObject
lastObject
systemDidBecomeReady
readyState
isSystemReady
needDataMigration
performDataMigration
dataMigrationDidComplete
na_safeAddObject:
finishWithNoResult
isEnvironmentReady
standardEnvironment
disabledEnvironment
demoModeEnvironment
environmentShouldMigrateData
needsDataMigration
performWhenEnvironmentIsReady:
currentSource
prepare
isDisabled
sleepStorage
sleepTrackingManager
stateMachineLock
environmentIsReady
sleepServer
chargingReminderManager
wakeDetectionManager
wakeUpResultsNotificationManager
sleepAlarmManager
sleepLockScreenManager
sleepWidgetManager
migrationManager
biomeManager
idsServiceManager
_stateMachineLock
_behavior
_sleepScheduleModelManager
_sleepStorage
_sleepScheduler
_sleepCoordinator
_sleepModeManager
_sleepTrackingManager
_actionManager
_notificationManager
_environmentIsReady
_currentDateProvider
_userDefaults
_sleepServer
_goodMorningAlertManager
_chargingReminderManager
_wakeDetectionManager
_wakeUpResultsNotificationManager
_sleepAlarmManager
_healthStoreProvider
_notificationListener
_sleepLockScreenManager
_sleepWidgetManager
_systemMonitor
_timeChangeListener
_sensitiveUIMonitor
_migrationManager
_contextStoreManager
_biomeManager
_idsServiceManager
_defaultCallbackScheduler
T@"HDSPEnvironmentStateMachine",R,N,V_stateMachine
T{os_unfair_lock_s=I},R,N,V_stateMachineLock
T@"NAFuture",R,N,V_environmentIsReady
T@?,R,C,N,V_currentDateProvider
T@"<HKSPUserDefaults>",R,N,V_userDefaults
T@"HDSPSleepStoreServer",R,N,V_sleepServer
T@"HDSPGoodMorningAlertManager",R,N,V_goodMorningAlertManager
T@"HDSPChargingReminderManager",R,N,V_chargingReminderManager
T@"HDSPWakeDetectionManager",R,N,V_wakeDetectionManager
T@"HDSPWakeUpResultsNotificationManager",R,N,V_wakeUpResultsNotificationManager
T@"HDSPSleepAlarmManager",R,N,V_sleepAlarmManager
T@"HKSPHealthStoreProvider",R,N,V_healthStoreProvider
T@"HDSPDiagnostics",R,N,V_diagnostics
T@"HDSPNotificationListener",R,N,V_notificationListener
T@"HDSPSleepLockScreenManager",R,N,V_sleepLockScreenManager
T@"HDSPSleepWidgetManager",R,N,V_sleepWidgetManager
T@"HDSPSystemMonitor",R,N,V_systemMonitor
T@"HDSPAssertionManager",R,N,V_assertionManager
T@"HDSPTimeChangeListener",R,N,V_timeChangeListener
T@"HKSPSensitiveUIMonitor",R,N,V_sensitiveUIMonitor
T@"HDSPSleepScheduleModelMigrationManager",R,N,V_migrationManager
T@"HDSPContextStoreManager",R,N,V_contextStoreManager
T@"HDSPBiomeManager",R,N,V_biomeManager
T@"HDSPIDSServiceManager",R,N,V_idsServiceManager
T@"<HKSPQueueBackedScheduler>",R,N,V_defaultCallbackScheduler
T@"HDSPAnalyticsManager",R,N,V_analyticsManager
T@"_HKBehavior",R,N,V_behavior
T@"HDSPSleepScheduleModelManager",R,N,V_sleepScheduleModelManager
T@"HDSPSleepStorage",R,N,V_sleepStorage
T@"HDSPSleepEventScheduler",R,N,V_sleepScheduler
T@"HDSPSleepScheduleStateCoordinator",R,N,V_sleepCoordinator
T@"HDSPSleepModeManager",R,N,V_sleepModeManager
T@"HDSPSleepTrackingManager",R,N,V_sleepTrackingManager
T@"HDSPSleepActionManager",R,N,V_actionManager
T@"HDSPSleepNotificationManager",R,N,V_notificationManager
infoForMachServiceName:remoteObjectInterface:exportedObject:exportedObjectInterface:lifecycleNotification:requiredEntitlement:options:
listenerWithConnectionInfo:
initWithEnvironment:connectionListenerProvider:processStateManager:
initWithIdentifier:defaults:
connectionListener
currentClient
_performWhenClientIsReady:block:
clientIdentifierProvider
_performWhenEnvironmentIsReady:withContext:
_performWhenEnvironmentIsReady:
syncAnchorContainer
inMemoryCopy
_notifyClient:forMissedMessagesWithSyncAnchorContainer:
setSleepMode:reason:
_performWhenCurrentClientIsReady:
performImmediateQueryForNotification
buildNotification
userInfo
createFocusModeWithError:
deleteFocusModeWithError:
confirmAwakeNotification
dismissGoodMorning
dismissSleepLock
sleepAlarmDismissedOnDate:source:
sleepAlarmSnoozedUntilDate:source:
sleepAlarmWasModified
connectedClients
incrementSleepScheduleSyncAnchor
clientIdentifier
sleepScheduleChanged:clientIdentifier:
_checkForSuspendedBlock
performRemoteBlockOnClients:passingTest:
incrementSleepSettingsSyncAnchor
objectWithSyncAnchor:
sleepSettingsChanged:clientIdentifier:
incrementSleepEventRecordSyncAnchor
sleepEventRecordChanged:clientIdentifier:
incrementSleepEventSyncAnchor
sleepEventOccurred:
standardEventIdentifiers
incrementSleepScheduleStateSyncAnchor
initWithScheduleState:syncAnchor:
sleepScheduleStateChanged:
incrementSleepModeSyncAnchor
initWithSleepMode:syncAnchor:
sleepModeChanged:
processID
isProcessSuspended:
performRemoteBlock:onClient:
lastStandardSleepEvent
compareWithContainer:sleepScheduleSyncAnchorOutOfDate:sleepSettingsSyncAnchorOutOfDate:sleepEventRecordSyncAnchorOutOfDate:sleepScheduleStateSyncAnchorOutOfDate:sleepModeSyncAnchorOutOfDate:sleepEventSyncAnchorOutOfDate:
connectedClientsWithPID:
clientShouldCheckInWithCompletion:
startMonitoringProcessState:
stopMonitoringProcessState:
connectWithCompletion:
checkInWithSyncAnchorContainer:completion:
getSleepScheduleWithCompletion:
saveSleepSchedule:completion:
getSleepSettingsWithCompletion:
saveSleepSettings:completion:
getSleepEventRecordWithCompletion:
saveSleepEventRecord:completion:
getSleepModeWithCompletion:
setSleepMode:reason:completion:
getSleepScheduleStateWithCompletion:
getSleepWidgetStateWithCompletion:
confirmAwakeWithCompletion:
dismissGoodMorningWithCompletion:
dismissSleepLockWithCompletion:
sleepAlarmWasDismissedOnDate:source:completion:
sleepAlarmWasSnoozedUntilDate:source:completion:
sleepAlarmWasModifiedFromSource:completion:
publishNotificationWithIdentifier:userInfo:completion:
publishWakeUpResultsNotificationWithCompletion:
setLockScreenOverrideState:userInfo:completion:
setWidgetOverrideState:completion:
clearWidgetOverrideWithCompletion:
createSleepFocusModeWithCompletion:
deleteSleepFocusModeWithCompletion:
processNoLongerSuspended:
processDidBecomeSuspended:
connectionListenerDidAddClient:
connectionListenerDidRemoveClient:
processStateManager
setSyncAnchorContainer:
_connectionListener
_processStateManager
_syncAnchorContainer
T@"HKSPXPCConnectionListener",R,N,V_connectionListener
T@"HDSPProcessStateManager",R,N,V_processStateManager
T@"HKSPPersistentSyncAnchorContainer",&,N,V_syncAnchorContainer
initWithCallbackScheduler:isAppleWatch:
isSpringboardStarted
_waitForInitialSync
_isInRootRobot
initWithSuiteName:
stringForKey:
_finishWaitingForInitialSync
springboardDidStart
T@"<HDSPSystemReadyDelegate>",W,N
isInRootRobotOrDemoMode
restoreDidFinish
springboardMonitor
observingRestore
lock
_observingRestore
_lock
_springboardMonitor
T@"HDSPSpringboardMonitor",R,N,V_springboardMonitor
TB,R,N,V_observingRestore
T{os_unfair_lock_s=I},R,N,V_lock
T@"<HDSPSystemReadyDelegate>",W,N,V_delegate
takeIndefiniteAssertionWithIdentifier:type:
anonymousListener
resume
initWithServiceName:viewControllerClassName:
endpoint
_endpoint
setXpcEndpoint:
acquireRemoteContentAssertionWithDefinition:errorHandler:
connection
remoteObjectProxy
setLockScreenState:userInfo:
invalidate
releaseAssertionWithIdentifier:
interfaceWithProtocol:
setRemoteObjectInterface:
connect
didDismissWithReason:
setExportedInterface:
setExportedObject:
setInterruptionHandler:
setConnection:
setInvalidationHandler:
listener:shouldAcceptNewConnection:
T@"<HDSPSleepLockScreenAssertionManagerDelegate>",W,N
lockScreenAssertion
_listener
_connection
_connectionLock
_lockScreenAssertion
T@"SBSLockScreenRemoteContentAssertion",R,N,V_lockScreenAssertion
T@"NSXPCConnection",&,N
T@"<HDSPSleepLockScreenAssertionManagerDelegate>",W,N,V_delegate
hkspMainThreadScheduler
overrideDeviceHasBeenUnlockedSinceBoot
boolValue
_latestKeyBagValueForHasBeenUnlockedSinceBoot
handleFirstUnlock
setOverrideDeviceHasBeenUnlockedSinceBoot:
monitorLock
_hasBeenUnlockedSinceBoot
_monitorLock
_overrideDeviceHasBeenUnlockedSinceBoot
T{os_unfair_lock_s=I},R,N,V_monitorLock
T@"NSNumber",&,N,V_overrideDeviceHasBeenUnlockedSinceBoot
TB,R,N,V_hasBeenUnlockedSinceBoot
_publishWakeDetectionNotificationForUserInfo:
_wakeDetectionAlertTitleForAlarmEnabled:sleepModeOn:
_wakeDetectionAlertBodyForAlarmEnabled:sleepModeOn:
_confirmTextForForAlarmEnabled:sleepModeOn:
_ignoreTextForForAlarmEnabled:sleepModeOn:
_publishNotificationWithIdentifier:title:message:defaultButtonTitle:otherButtonTitle:bypassDND:aboveLockScreen:actionHandler:
userNotificationWithIdentifier:notification:actionHandler:
takeAssertionWithIdentifier:type:timeout:
sharedManager
postNotification:fromCenter:
removeObjectForKey:
actionHandler
cancelNotification:fromCenter:
tearDownNotificationForEventIdentifier:
tearDownNotifications
handleResponse:forUserNotification:
notificationLock
notifications
_notificationLock
_notifications
T{os_unfair_lock_s=I},R,N,V_notificationLock
T@"NSMutableDictionary",R,N,V_notifications
sleepTrackingIsDisabledWithContext:
isSleepScheduleDisabled
inTrackingWindow
setSourceIdentifier:
setDontNotify:
setDontSync:
_dontNotify
_dontSync
_sourceIdentifier
T@"NSString",&,N,V_sourceIdentifier
TB,N,V_dontNotify
TB,N,V_dontSync
_migrateToCloudKit
_migrateSleepScheduleFromMobileTimer
_migrateSleepFocus
_migrateOnboardingSettings
_migrateHomeScreenPage
chainFutures:
finishWithResult:
finishWithResult:error:
lazyFutureWithBlock:
recover:
hksp_supportsLegacySleepAlarms
sleepAlarmProvider
sleepAlarmsFuture
finishWithError:
sleepScheduleModelFromSleepAlarm:
isAnySleepWindDownShortcutsOnboardingCompleted
hksp_springBoardUserDefaults
hksp_boolForKey:
setSpringBoardSuggestedPageCreated:
createHomeScreenPageWithCompletion:
initWithUserDefaults:callbackScheduler:
addObserver:wasFirst:
registerObserver:
removeObserver:wasLast:
unregisterObserver:
_lock_isOnWrist
hksp_setBool:forKey:
_lock_lastOnWristDate
hksp_objectForKey:
wristDetectionSettingManagerDidObserveWristDetectChange:
isOnWrist
_lock_setIsOnWrist:
lastOnWristDate
_lock_setLastOnWristDate:
wristDetectionSettingsManager
_wristDetectionSettingsManager
T@"HKWristDetectionSettingManager",R,N,V_wristDetectionSettingsManager
nextStateWithContext:forceUpdate:
isSleepTrackingState
defaultStartReason
defaultEndReason
_presentingState
T@"<HDSPGoodMorningAlertStateMachineDelegate>",R,W,D,N
T@"<HDSPGoodMorningAlertStateMachineInfoProvider>",R,W,D,N
T@"HDSPGoodMorningAlertDisabledState",R,N,V_disabledState
T@"HDSPGoodMorningAlertWaitingState",R,N,V_waitingState
T@"HDSPGoodMorningAlertPresentingState",R,N,V_presentingState
initWithDate:
date
initWithSnoozedUntilDate:
snoozedUntilDate
dateDescription
defaultWorkspace
initWithBundleIdentifier:allowPlaceholder:error:
applicationState
isValid
isInstalled
isPlaceholder
observedApplicationBundleIdentifiers
observedApplicationDidInstall:
observedApplicationDidUninstall:
applicationInstallsDidStart:
applicationInstallsDidChange:
applicationInstallsDidUpdateIcon:
applicationsWillInstall:
applicationsDidInstall:
pluginsDidInstall:
applicationsDidFailToInstall:
applicationsWillUninstall:
pluginsWillUninstall:
applicationsDidUninstall:
pluginsDidUninstall:
applicationsDidFailToUninstall:
applicationInstallsArePrioritized:arePaused:
applicationInstallsDidPause:
applicationInstallsDidResume:
applicationInstallsDidCancel:
applicationInstallsDidPrioritize:
applicationStateDidChange:
applicationIconDidChange:
networkUsageChanged:
observeLaunchProhibitedApps
deviceManagementPolicyDidChange:
applicationsDidChangePersonas:
databaseWasRebuilt
isApplicationInstalled:
isNotificationEnabled
setNotification:
notificationCenter
setNotificationCenter:
_notificationCenter
T@"HDSPCFUserNotification",&,N,V_notification
T@"HDSPCFUserNotificationCenter",&,N,V_notificationCenter
removeObject:
registrationLock
registrations
_registrationLock
_registrations
T{os_unfair_lock_s=I},R,N,V_registrationLock
T@"NSMutableArray",R,N,V_registrations
initWithBehavior:
hksp_supportsSleep
hksp_demoMode
_setupSigtermHandler
_handleSigterm
start
launchDate
sigtermSource
_launchDate
_sigtermSource
T@"NSDate",R,N,V_launchDate
T@"NSObject<OS_dispatch_source>",R,N,V_sigtermSource
T@"HDSPEnvironment",R,N,V_environment
notReadyState
migrationState
demoState
_notReadyState
_migrationState
_readyState
_demoState
T@"<HDSPEnvironmentStateMachineDelegate>",R,W,D,N
T@"<HDSPEnvironmentStateMachineInfoProvider>",R,W,D,N
T@"HDSPEnvironmentNotReadyState",R,N,V_notReadyState
T@"HDSPEnvironmentMigrationState",R,N,V_migrationState
T@"HDSPEnvironmentReadyState",R,N,V_readyState
T@"HDSPEnvironmentDemoState",R,N,V_demoState
isInDemoMode
snoozeFireDateShouldBeReset
significantScheduleChangeOccurred:
wakeUpAlarmSnoozedUntilDate
windDownReached
bedtimeReached
decodeObjectOfClass:forKey:
builderWithObject:
wakeUpConfirmedDate
appendObject:withName:
wakeUpConfirmedUntilDate
initWithWakeUpConfirmedDate:wakeUpConfirmedUntilDate:
succinctDescriptionBuilder
_wakeUpConfirmedUntilDate
T@"NSDate",R,N,V_wakeUpConfirmedUntilDate
nextEventDueAfterDate:
lifetimeInterval
dueDate
postWakeDetectionNotification:
didPostResultsNotification
postResultsNotification
isWaitingForWakeUp
isDelayingForTracking
_waitingForWakeUpState
_delayingForTrackingState
_waitingForRetryState
_queryingState
_needsProtectedDataState
T@"<HDSPWakeUpResultsNotificationStateMachineDelegate>",R,W,D,N
T@"<HDSPWakeUpResultsNotificationStateMachineInfoProvider>",R,W,D,N
T@"HDSPWakeUpResultsNotificationWaitingForWakeUpState",R,N,V_waitingForWakeUpState
T@"HDSPWakeUpResultsNotificationDelayingForTrackingState",R,N,V_delayingForTrackingState
T@"HDSPWakeUpResultsNotificationWaitingForRetryState",R,N,V_waitingForRetryState
T@"HDSPWakeUpResultsNotificationQueryingState",R,N,V_queryingState
T@"HDSPWakeUpResultsNotificationNeedsProtectedDataState",R,N,V_needsProtectedDataState
T@"HDSPWakeUpResultsNotificationNotifiedState",R,N,V_notifiedState
T@"HDSPWakeUpResultsNotificationDisabledState",R,N,V_disabledState
onWristMonitor
_nanoDefaultsProvider
_cloudDefaultsProvider
initWithEnvironment:configuration:nanoDefaultsProvider:cloudDefaultsProvider:throttleInterval:
_throttled_synchronizeKeys:
initWithInterval:updateBlock:scheduler:
info
cloudSyncEnabledKey
allKeysToPersist
allDefaultValues
allPerGizmoKeys
na_setByIntersectingWithSet:
hksp_saveDictionary:syncToCloudKit:
_setDefaultForKey:setBlock:syncToCloudKit:
hksp_removeObjectsForKeys:syncToCloudKit:
hksp_removeObjectForKey:
shouldPersistKey:
_defaultsForKey:
syncDisabled
needsInitialSync
setNeedsSyncFromCloud:
shouldSyncKey:
setNeedsInitialSync:
_initialCloudKitSync
_setDefaultForKey:setBlock:
floatValue
hksp_setFloat:forKey:
hksp_dataForKey:
hksp_dictionaryRepresentation
_hksp_synchronizeKeys:
saveCloudDataVersion
dataVersionKey
cloudDataVersionKey
setByAddingObjectsFromArray:
allObjects
accumulateValues:
hksp_synchronizeKeys:
supportsNanoSync
needsSyncFromCloud
_syncCloudKitToLocal
minusSet:
currentDataVersion
localDataVersionKey
currentLocalDataVersion
currentCloudDataVersion
_nanoDefaultsDidReceiveExternalChange
_cloudDefaultsDidReceiveExternalChange
_nanoDefaultsDidReceiveExternalChangeForKeys:
_cloudDefaultsDidReceiveExternalChangeForKeys:
_differentialCloudKitSync
_syncKeysToCloudKit:
_syncKeysFromCloudKit:
_syncLocalToCloudKit
allKeysToSync
keySets
_differentialCloudKitSyncForKeySet:
modificationDateKey
keysToSync
hksp_reset
hksp_floatForKey:
_localDefaults
_nanoDefaults
_cloudDefaults
_keysNeedingSynchronize
_syncAccumulator
_needsInitialSync
_needsSyncFromCloud
T@"<HDSPSyncedUserDefaultsExternalChangeDelegate>",W,N,V_delegate
TB,N,V_needsInitialSync
TB,N,V_needsSyncFromCloud
platformSpecificProviders:
initWithEnvironment:wakeDetectorProviders:
arrayWithArray:
startWakeDetection:
na_filter:
performBlock:
relevantOccurrence
sendNotifiedForEarlyWakeUpMessage
_detectionWindowForType:wakeUpDate:bedtimeDate:
laterDate:
stopWakeDetection
detectionWindowForType:
sleepModeIsOff
upcomingStartDetection
T@"HKSPSleepScheduleOccurrence",R,N
_startWakeDetection
wakeDetectors
wakeDetectionLock
_wakeDetectionLock
_wakeDetectors
T@"NSArray",R,N,V_wakeDetectors
T{os_unfair_lock_s=I},R,N,V_wakeDetectionLock
T@"HDSPWakeDetectionStateMachine",R,N,V_stateMachine
categoryTypeForIdentifier:
maximumAllowedDuration
localDevice
categorySampleWithType:value:startDate:endDate:device:metadata:
hdsp_categorySampleForSleepSessionInterval:metadata:
goodMorningDismissedDate
shouldUpdateSleepModeStateForState:changeReason:previousState:
hk_stripLeadingTrailingWhitespace
goalAchievedQuantityForCategory:userInfo:
initWithCategory:endMorningIndex:goalAchieved:notificationVariant:userFirstName:
goalAchievedUserInfoKeyForCategory:
goalAchievedUserInfoValue
initWithDictionary:
endMorningIndex
isEqualToNotification:
isOneNight
doubleValue
quantityWithUnit:doubleValue:
wakeUpResultsNotificationFromUserInfo:
categoryIdentifier
_category
_goalAchieved
_endMorningIndex
_notificationVariant
_userFirstName
TQ,R,N,V_category
T@"HKQuantity",R,C,N,V_goalAchieved
Tq,R,N,V_endMorningIndex
Tq,R,N,V_notificationVariant
T@"NSString",R,C,N,V_userFirstName
T@"NSDictionary",R,C,N
initWithEnvironment:retryAttemptScheduler:
_updateState
stringWithUTF8String:
_sleepScheduleModel
_trackingDelayDuration
initWithStartDate:duration:
objectForKey:
retryAttemptScheduler
retryActivity
retryCriteria
registerForLaunchNotificationWithName:key:
unregisterForLaunchNotificationWithName:key:
isFinished
_lock_startQuery
calendarWithIdentifier:
addFailureBlock:
healthAppDefaultsDomainWithHealthStore:
propertyListValueForKey:error:
localizedDescription
initWithDaySummaries:morningIndexRange:userFirstName:
isWakeUpResultsNotificationEnabled
_isDelayingForTracking
_isWaitingForWakeUp
queryResultFuture
goalProgressEngine
_queryResultFuture
_goalProgressEngine
_retryAttemptScheduler
T@"HDSPWakeUpResultsNotificationStateMachine",R,N,V_stateMachine
T@"NAFuture",R,N,V_queryResultFuture
T@"HKSHGoalProgressEngine",R,N,V_goalProgressEngine
T@"<HDSPActivityScheduler>",R,N,V_retryAttemptScheduler
_createKeySetMapForKeySets:
unionSet:
_accumulateKeysWithBlock:includeVersionInfo:isForSync:
perGizmoKeys
defaultValues
intersectsSet:
_keySetForKey:
filteredKeySetsWithKeysToSync:
_keySetMap
_info
T@"HDSPSyncedDefaultsInfo",R,N,V_info
T@"NSArray",R,N
T@"NSSet",R,N
T@"NSDictionary",R,N
_dataVersionKey
_currentDataVersion
_cloudDataVersionKey
_currentCloudDataVersion
_cloudSyncEnabledKey
_localDataVersionKey
_currentLocalDataVersion
T@"NSString",R,C,N,V_dataVersionKey
TQ,R,N,V_currentDataVersion
T@"NSString",R,C,N,V_cloudDataVersionKey
TQ,R,N,V_currentCloudDataVersion
T@"NSString",R,N,V_cloudSyncEnabledKey
T@"NSString",R,C,N,V_localDataVersionKey
TQ,R,N,V_currentLocalDataVersion
_identifier
_modificationDateKey
_keysToPersist
_keysToSync
_perGizmoKeys
_defaultValues
T@"NSString",R,C,N,V_identifier
T@"NSString",R,C,N,V_modificationDateKey
T@"NSSet",R,N,V_keysToPersist
T@"NSSet",R,N,V_keysToSync
T@"NSSet",R,N,V_perGizmoKeys
T@"NSDictionary",R,N,V_defaultValues
_loadPersistedModel
_persistModel:
_restorePersistedModelWithScheduleData:settingsData:recordData:
unarchivedObjectOfClass:fromData:error:
setLastSchedule:
setLastSettings:
setLastRecord:
_persistSchedule:
_persistSettings:
_persistRecord:
lastSchedule
archivedDataWithRootObject:requiringSecureCoding:error:
lastSettings
lastRecord
significantChangeWithTopLevelChangeKeys:
_evaluateChangesFromObject:toObject:outChangeSet:
topLevelChangeKeys
initWithIsSignificantChange:isSignificantEventRecordUpdate:topLevelChangeKeys:
evaluateSleepScheduleAdd:
evaluateSleepScheduleRemove
evaluateSleepScheduleUpdate:
evaluateSleepSettingsAdd:
evaluateSleepSettingsUpdate:
evaluateSleepRecordAdd:
evaluateSleepRecordUpdate:
combinedEvaluation:
evaluateSleepScheduleModelChange:
_lastSchedule
_lastSettings
_lastRecord
T@"HKSPSleepSchedule",C,N,V_lastSchedule
T@"HKSPSleepSettings",C,N,V_lastSettings
T@"HKSPSleepEventRecord",C,N,V_lastRecord
localServiceWithScheduler:
cloudServiceWithScheduler:
initWithEnvironment:localService:cloudService:
sendMessage:
_shouldSyncSleepModeWithReason:
initWithSleepModeOn:
_shouldSyncMessage
hksp_activePairedDeviceSupportsFocusMode
wakeUpEarlyNotificationConfirmedDate
_shouldSyncAlarmMessageFromSource:
wakeUpAlarmDismissedDate
initWithDismissedDate:
initWithGoodMorningDismissedDate:
_sendMessage:onService:
_shouldSendCloudMessage:
shareAcrossDevices
sendMessage:completion:
_shouldHandleMessageFromService:
_handleReceivedMessage:
_handleSetSleepModeMessage:
_handleConfirmWakeUpMessage:
_handleDismissGoodMorningMessage:
_handleNotifiedForEarlyWakeUpMessage:
_handleSleepAlarmDismissedMessage:
_handleSleepAlarmSnoozedMessage:
_handleTestMessage:
confirmAwakeNotificationOnDate:confirmUntilDate:
goodMorningDismissed
dismissGoodMorningOnDate:
dismissedDate
sendTestIDSMessage
_allowedMessageClasses
service:didReceiveMessage:
localService
cloudService
_localService
_cloudService
T@"<HDSPIDSService>",R,N,V_localService
T@"<HDSPIDSService>",R,N,V_cloudService
hksp_containsDate:
_isActivityDateInDetectionWindow:type:
succinctDescription
build
descriptionBuilderWithMultilinePrefix:
descriptionWithMultilinePrefix:
_date
T@"NSDate",R,N,V_date
assertionWithIdentifier:timeout:
initWithIdentifier:timeout:
_locked_release
releaseAssertion
appendString:withName:
assertionWithIdentifier:
signpost_id
assertionLock
_assertionLock
_signpost_id
TQ,R,N,V_signpost_id
T{os_unfair_lock_s=I},R,N,V_assertionLock
defaultStore
dateWithTimeIntervalSinceNow:
_setRelevantShortcuts:
initWithIntent:
initWithShortcut:
setWidgetKind:
setRelevanceProviders:
setRelevantShortcuts:completionHandler:
_store
initWithCurrentDateProvider:
serialDispatchQueueSchedulerWithName:
initWithInterval:executeBlock:scheduler:
initWithEnvironment:schedulerProvider:throttlerProvider:
weakObjectsHashTable
_schedulePendingEvents
_lock_rescheduleEvents
_lock_shouldScheduleEvents
takeAssertionWithIdentifier:type:
removeAllEvents
removeAllObjects
unschedule
_loadLastStandardSleepEvent
rescheduleEvents
lastEventTriggerDate
distantPast
removeEventsForProvider:
addEvents:provider:
nextEvent
_lock_scheduledEventIsDue
isUserVisible
scheduleEventForDate:options:
setLastEventTriggerDate:
overdueEventsForDate:
isExpired:
removeEvents:
_lock_updateLastStandardSleepEvent:
_shouldNotifyHandler:forEvent:
enumerateObserversWithFutureBlock:
sleepEvents
allEvents
_allSleepEvents
scheduledEventIsDue
removeEventProvider:
removeEventHandler:
setLastStandardSleepEvent:
scheduleLock
eventHandlers
eventProviders
pendingEventProviders
scheduler
throttler
_scheduleLock
_lastStandardSleepEvent
_sleepEvents
_eventHandlers
_eventProviders
_pendingEventProviders
_scheduler
_throttler
T{os_unfair_lock_s=I},R,N,V_scheduleLock
T@"HDSPSleepEventList",R,N,V_sleepEvents
T@"HKSPObserverSet",R,N,V_eventHandlers
T@"NSHashTable",R,N,V_eventProviders
T@"NSHashTable",R,N,V_pendingEventProviders
T@"<HDSPEventScheduler>",R,N,V_scheduler
T@"HKSPThrottler",R,N,V_throttler
T@"HKSPSleepEvent",&,N,V_lastStandardSleepEvent
T@"NSDate",&,N
startSleepTrackingSession
stopSleepTrackingSession
authorizationStatusForType:
na_genericError
saveSleepTrackingSamples:completion:
initWithEnvironment:sleepAlarmProvider:
sleepAlarmsFutureIgnoringCache:
resetSleepAlarmSnoozeState
updateSleepAlarms
currentSleepAlarms
_sleepAlarmProvider
T@"<HDSPSleepAlarmProvider>",R,N,V_sleepAlarmProvider
_createKVS
initWithInterval:updateBlock:
sleepCloudKitManatee
_initWithStoreIdentifier:usingEndToEndEncryption:
synchronize
synchronizeWithCompletionHandler:
defaultCenter
keyValueStoreDidChange:
addObserver:selector:name:object:
setObject:forKey:
boolForKey:
setBool:forKey:
numberWithFloat:
dataForKey:
dictionaryRepresentation
hksp_dictionaryByFilteringKeys:
_accumulator
identifierWithPid:
handleForIdentifier:error:
initWithProcessStateProvider:
taskState
_updateConfiguration
predicateMatchingIdentifier:
setPredicates:
setValues:
setStateDescriptor:
previousState
state
_process:didUpdateFromState:toState:
setUpdateHandler:
updateConfiguration:
_processStateMonitor
_processIdentifiers
_processStateProvider
T@"<HDSPProcessStateManagerDelegate>",W,N,V_delegate
handleSignificantTimeChange
handleTimeZoneChange
resetSystemTimeZone
T@"HDSPEnvironment",R,W,N,Venvironment
isChargingReminderDisabled
UTF8String
T@"<HDSPEventScheduleDelegate>",W,N
T@"<HDSPEventScheduleDelegate>",W,N,Vdelegate
_sortEvents
sortUsingComparator:
appendArraySection:withName:multilinePrefix:skipIfEmpty:
eventsByProvider
sortedEvents
_eventsByProvider
_sortedEvents
T@"NSMutableDictionary",R,N,V_eventsByProvider
T@"NSArray",R,N,V_sortedEvents
initWithEnvironment:watchOnWristMonitor:devicePowerMonitor:deviceUnlockMonitor:
_platformSpecificReadyProviderForEnvironment:
initWithEnvironment:watchOnWristMonitor:devicePowerMonitor:deviceUnlockMonitor:systemReadyProvider:applicationWorkspaceMonitor:
appendFormat:
dictionaryWithDictionary:
applicationWorkspaceMonitor
systemReadyProvider
systemReady
systemMonitorLock
_systemReady
_systemMonitorLock
_deviceUnlockMonitor
_devicePowerMonitor
_applicationWorkspaceMonitor
_watchOnWristMonitor
_systemReadyProvider
T@"<HDSPSystemReadyProvider>",R,N,V_systemReadyProvider
TB,R,N,V_systemReady
T{os_unfair_lock_s=I},R,N,V_systemMonitorLock
T@"HDSPDeviceUnlockMonitor",R,N,V_deviceUnlockMonitor
T@"HDSPDevicePowerMonitor",R,N,V_devicePowerMonitor
T@"HDSPApplicationWorkspaceMonitor",R,N,V_applicationWorkspaceMonitor
T@"HDSPWatchOnWristMonitor",R,N,V_watchOnWristMonitor
bundleWithIdentifier:
localizedStringForKey:value:table:
assertionClassForType:
takeAssertion:
distantFuture
timeIntervalSinceNow
_assertionsOfType:
activeAssertionIdentifiersOfType:
assertionsLock
assertions
setAssertions:
_assertionsLock
_assertions
T{os_unfair_lock_s=I},R,N,V_assertionsLock
T@"NSMutableDictionary",&,N,V_assertions
transaction
transactionLock
timer
_transactionLock
_transaction
_timer
T@"NSObject<OS_os_transaction>",R,N,V_transaction
T{os_unfair_lock_s=I},R,N,V_transactionLock
T@"NSObject<OS_dispatch_source>",R,N,V_timer
_updateEventRecordForSleepScheduleState:context:notifyBlock:
_updateEventRecordHelper:sleepScheduleState:context:
saveSleepEventRecord:error:preNotifyBlock:
setWakeUpAlarmDismissedDate:
setWakeUpAlarmSnoozedUntilDate:
changeEvaluation
scheduleModelChanged:
significantTimeChange
timeZoneChange
sleepScheduleStateDidChange:previousState:context:
previousOccurrence
_updateSleepScheduleState
T@"HDSPSleepScheduleStateCoordinatorStateMachine",R,N,V_stateMachine
encodeBool:forKey:
decodeBoolForKey:
appendBool:withName:
_sleepModeOn
TB,R,N,V_sleepModeOn
sleepDuration
_didMeetSleepDurationGoalLastNight
_sleepDurationGoalAchievedTwoWeekNotification
_sleepDurationGoalAchievedShortWeekNotification
_sleepDurationGoalAchievedLastNightNotification
sleepDurationGoalAchievedCount
_notificationForCategory:morningIndexRange:goalAchieved:
_randomNotificationVariantForCategory:
T@"NSString",R,N,V_userFirstName
sleepModePublisher
subscribe:callback:
initWithEnvironment:biomeInterface:
cancel
userFocusComputedMode
publisher
filterWithKeyPath:value:
_writeSleepModeToBiome:reason:
_shouldWriteToBiome
computeUserVisibleEndDate
sleepModeStream
biomeSleepModeStateForSleepModeState:
biomeSleepModeChangeReasonForSleepModeChangeReason:
initWithSleepModeState:sleepModeChangeReason:expectedEndDate:
sendEvent:toStream:
unsubscribe:
biomeInterface
_biomeInterface
T@"<HDSPBiomeInterface>",R,N,V_biomeInterface
initWithIdentifier:targetQueue:waking:
subscribeOn:
error
eventBody
sinkWithCompletion:receiveInput:
sendEvent:
T@"BMBiomeScheduler",R,N,V_scheduler
goodMorningAlertNotificationsEnabledWithLogObject:
goodMorningAlertLock
goodMorningAlertObservers
_goodMorningAlertLock
_goodMorningAlertObservers
T{os_unfair_lock_s=I},R,N,V_goodMorningAlertLock
T@"HDSPGoodMorningAlertStateMachine",R,N,V_stateMachine
T@"HKSPObserverSet",R,N,V_goodMorningAlertObservers
hksp_supportsUserNotificationCenter
hksp_supportsCFUserNotifications
initWithEnvironment:notificationPublishers:
_rescheduleEvents
_windDownNotificationEventAfterDate:
_bedtimeNotificationEventAfterDate:
_bedtimeOrWindDownNotificationsEnabled
_bedtimeOrWindDownNotificationEventIsDue:
_tearDownWakeDetectionNotification
_tearDownMorningNotification
_tearDownChargingReminder
_tearDownWindDownReminder
_tearDownBedtimeReminder
sleepEventWithIdentifier:dueDate:expirationDate:isUserVisible:
bedtimeReminderWasConfirmed
bedtimeReminderWasDismissed
wakeNotificationWasDismissed
notificationPublishers
_notificationPublishers
T@"NSArray",R,N,V_notificationPublishers
initWithExtensionBundleIdentifier:kind:
reloadTimelineWithReason:
_timelineController
manualOffState
automatedOffState
hasSleepFocusMode:
modeConfigService
createDefaultSleepingModeConfigurationWithError:
setModeConfiguration:error:
mode
updateCachedUUID:
removeModeConfigurationForModeIdentifier:error:
createSleepFocusMode:
removeSleepFocusMode:
sleepFocusConfiguration:
T@"<HKSPSleepFocusModeBridgeDelegate>",W,N
T@"HDSPWakeUpResultsNotificationStateMachine",R,W,D,N
T@"<HDSPWakeUpResultsNotificationStateMachineInfoProvider>",R,N
notificationEnabled
TB,R,N,GisNotificationEnabled
confirmAwakeNotificationOnDate:
computeConfirmedWakeUpUntilDateForEarlyWakeUpDate:
setWakeUpEarlyNotificationConfirmedDate:
setWakeUpConfirmedUntilDate:
setGoodMorningDismissedDate:
isEqualToDate:
_latestDateInAlarms:dateBlock:
snoozeFireDate
_isValidSnoozeDate:
initWithIdentifier:notification:actionHandler:
_actionHandler
T@"NSString",R,N,V_identifier
T^{__CFUserNotification=},R,N,V_notification
T@?,R,C,N,V_actionHandler
_explicitDetectingState
_activityDetectingState
T@"<HDSPWakeDetectionStateMachineDelegate>",R,W,D,N
T@"<HDSPWakeDetectionStateMachineInfoProvider>",R,W,D,N
T@"HDSPWakeDetectionDisabledState",R,N,V_disabledState
T@"HDSPWakeDetectionWaitingState",R,N,V_waitingState
T@"HDSPWakeDetectionExplicitDetectingState",R,N,V_explicitDetectingState
T@"HDSPWakeDetectionActivityDetectingState",R,N,V_activityDetectingState
T@"HDSPWakeDetectionNotifiedState",R,N,V_notifiedState
T@"HDSPEnvironmentStateMachine",R,W,D,N
isSignificantChange
isSignificantEventRecordUpdate
appendBool:withName:ifEqualTo:
appendInteger:withName:
emptyEvaluation
significantEventRecordUpdateWithTopLevelChangeKeys:
_isSignificantChange
_isSignificantEventRecordUpdate
_topLevelChangeKeys
TB,R,N,V_isSignificantChange
TB,R,N,V_isSignificantEventRecordUpdate
T@"NSSet",R,N,V_topLevelChangeKeys
isChargingOverride
setIsChargingOverride:
batteryLevelOverride
setBatteryLevelOverride:
_isChargingOverride
_batteryLevelOverride
T@"NSNumber",&,N,V_isChargingOverride
T@"NSNumber",&,N,V_batteryLevelOverride
Tf,R,N
_offState
_windDownState
_bedtimeState
_bedtimeInProgressState
_greetingState
T@"<HDSPSleepLockScreenStateMachineDelegate>",R,W,D,N
T@"<HDSPSleepLockScreenStateMachineInfoProvider>",R,W,D,N
T@"HDSPSleepLockScreenOffState",R,N,V_offState
T@"HDSPSleepLockScreenWindDownState",R,N,V_windDownState
T@"HDSPSleepLockScreenBedtimeState",R,N,V_bedtimeState
T@"HDSPSleepLockScreenBedtimeInProgressState",R,N,V_bedtimeInProgressState
T@"HDSPSleepLockScreenGreetingState",R,N,V_greetingState
criteria
options
initWithEventName:options:criteria:activity:
eventNames
eventNamesLock
_eventNamesLock
_callbackScheduler
_eventNames
T@"<NAScheduler>",R,N,V_callbackScheduler
T@"NSMutableSet",R,N,V_eventNames
T{os_unfair_lock_s=I},R,N,V_eventNamesLock
activity
_options
_name
_criteria
_activity
T@"NSObject<OS_xpc_object>",R,N,V_criteria
T@"NSObject<OS_xpc_object>",R,N,V_activity
T@"NSString",R,C,N,V_name
TQ,R,N,V_options
initWithSuccess:changeEvaluation:error:shouldNotify:
emptyResult
saveFailedWithError:
success
shouldNotify
_success
_shouldNotify
_changeEvaluation
_error
TB,R,N,V_success
T@"HDSPSleepScheduleModelChangeEvaluation",R,N,V_changeEvaluation
T@"NSError",R,N,V_error
TB,R,N,V_shouldNotify
setPageType:
uuid
UUIDString
initWithFocusModeIdentifier:
setProactivePages:
setAppendExistingPages:
addSuggestedHomeScreenPageWithRequest:
suggestedPagesWithFilter:layoutOptions:completionHandler:
createSuggestedHomeScreenPageWithCompletion:
initWithSleepFocusModeBridge:
sleepFocusModeBridge
_sleepFocusModeBridge
T@"<HKSPSleepFocusModeBridge>",R,N,V_sleepFocusModeBridge
initialState
_wakeUpState
_delayedWakeUpState
_initialState
T@"<HDSPSleepScheduleStateCoordinatorStateMachineDelegate>",R,W,D,N
T@"<HDSPSleepScheduleStateCoordinatorStateMachineInfoProvider>",R,W,D,N
T@"HDSPSleepScheduleStateCoordinatorDisabledState",R,N,V_disabledState
T@"HDSPSleepScheduleStateCoordinatorWakeUpState",R,N,V_wakeUpState
T@"HDSPSleepScheduleStateCoordinatorBedtimeState",R,N,V_bedtimeState
T@"HDSPSleepScheduleStateCoordinatorWindDownState",R,N,V_windDownState
T@"HDSPSleepScheduleStateCoordinatorDelayedWakeUpState",R,N,V_delayedWakeUpState
T@"HDSPSleepScheduleStateCoordinatorInitialState",R,N,V_initialState
initWithIsCloudService:scheduler:
initWithService:
queue
addDelegate:queue:
_loggingDescription
_sendSerializedMessage:identifier:completion:
_cloudDestinations
_localDestinations
numberWithInt:
sendMessage:toDestinations:priority:options:identifier:error:
devices
isActive
isDefaultPairedDevice
isCloudService
T@"<HDSPIDSServiceDelegate>",W,N
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:linkedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantUpdate:context:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
_service
_isCloudService
TB,R,N,V_isCloudService
T@"<HDSPIDSServiceDelegate>",W,N,V_delegate
initWithSource:changeEvaluation:
appendObject:withName:skipIfNil:
contextByApplyingChangeEvaluation:
_source
T@"<HDSPSource>",R,N,V_source
initWithDateInterval:sleepIntervals:endReason:metadata:requiresFirstUnlock:
encodeInteger:forKey:
decodeIntegerForKey:
builderWithObject:ofExpectedClass:
appendObject:counterpart:
appendUnsignedInteger:counterpart:
appendBool:counterpart:
isEqual
appendUnsignedInteger:withName:
supportsSecureCoding
TB,R
_requiresFirstUnlock
_interval
_sleepIntervals
_endReason
_metadata
T@"NSDateInterval",R,N,V_interval
T@"NSArray",R,N,V_sleepIntervals
TQ,R,N,V_endReason
T@"NSDictionary",R,N,V_metadata
TB,R,N,V_requiresFirstUnlock
initWithInterval:type:
_type
TQ,R,N,V_type
_loadSleepScheduleModel:
_shouldTurnOffWatchSleepFeatures
_turnOffWatchSleepFeatures
_shouldTurnOffSleepSchedule
_turnOffSleepSchedule
_locked_loadSleepScheduleModel:
_locked_loadSleepSchedule:
_locked_loadSleepSettings:
_locked_loadSleepEventRecord:
_locked_saveSleepSchedule:
_locked_saveSleepSettings:
_locked_saveSleepEventRecord:
_locked_notifyObserversForSleepScheduleModelChange:
_locked_sleepScheduleModel
_locked_validateSleepSchedule:generateValidSchedule:
timelineResults
validSleepSchedule
_locked_saveSleepSchedule:error:
_locked_notifyObserversForSleepScheduleChange:
_locked_removeSleepSchedule
_locked_updateSleepSchedule:
_locked_setSleepSchedule:
_locked_applyNecessaryChangesBeforeSaving:
_locked_updateModelWithBlock:persistBlock:error:
_locked_canApplyChangesFrom:to:error:
changeSet
_locked_applyNecessaryChangesBeforeSavingSleepSchedule:validationResult:
_locked_applyNecessaryEventRecordChangesBeforeSavingSleepSchedule:validationResult:
snoozeFireDateNeedsReset
hasChangeForPropertyIdentifier:
originalValueForPropertyIdentifier:
changedValueForPropertyIdentifier:
isDate:inSameDayAsDate:
previousResolvedOccurrenceBeforeDate:
wakeUpEvent
occurrence
setWakeUpOverriddenDate:
wakeUpOverriddenDate
computeConfirmedWakeUpUntilDateForOverrideWakeUpDate:
hksp_latestFromDates:
_locked_saveSleepEventRecord:error:
isValidOccurrence
na_all:
hksp_validationErrorWithReason:
emptyFailureWithError:
builderWithSleepScheduleModel:date:
buildTimelineWithOptions:
sleepScheduleInvalid
sleepScheduleInvalidReason
initWithSuccess:timelineResults:error:
_locked_resetSleepEventRecord
_locked_saveSleepSettings:error:
_locked_notifyObserversForSleepSettingsChange:
_locked_resetSleepSettings
_locked_updateSleepSettings:
_locked_setSleepSettings:
_locked_saveSleepEventRecord:error:preNotifyBlock:
_locked_notifyObserversForSleepEventRecordChange:
_locked_updateSleepEventRecord:
_locked_setSleepEventRecord:
_locked_applyNecessaryChangesBeforeSavingSleepEventRecord:
_locked_applyNecessarySleepSettingsChangesBeforeSavingSleepEventRecord:
setLastModifiedDate:
_earliestDateToScheduleEventsForDate:
setWithObjects:
setWatchSleepFeaturesEnabled:
setShareAcrossDevices:
removeSleepScheduleModelWithError:
_loadSleepSchedule:
notifyObserversForSleepScheduleChange:
_loadSleepSettings:
notifyObserversForSleepSettingsChange:
_loadSleepEventRecord:
notifyObserversForSleepEventRecordChange:
storeLock
changeEvaluator
_storeLock
_sleepSchedule
_sleepSettings
_sleepEventRecord
_changeEvaluator
T{os_unfair_lock_s=I},R,N,V_storeLock
T@"HDSPSleepScheduleModelChangeEvaluator",R,N,V_changeEvaluator
T@"HKSPSleepSchedule",R,N,V_sleepSchedule
T@"HKSPSleepSettings",R,N,V_sleepSettings
T@"HKSPSleepEventRecord",R,N,V_sleepEventRecord
_checkSpringBoardStarted
_processName
_stopMonitoring
_startMonitoring
_checkAndNotify
notifyToken
springboardStarted
springboardStartedLock
_isAppleWatch
_springboardStarted
_notifyToken
_springboardStartedLock
TB,R,N,V_isAppleWatch
Ti,R,N,V_notifyToken
TB,R,N,V_springboardStarted
T{os_unfair_lock_s=I},R,N,V_springboardStartedLock
numberWithUnsignedLong:
initWithBundleIdentifier:
initWithEnvironment:notificationCenter:
_notificationRequestForEvent:userInfo:
_publishNotificationRequest:
_notificationRequestIdentifierForEvent:
_notificationContentForEventIdentifier:userInfo:
requestWithIdentifier:content:trigger:destinations:
addNotificationRequest:withCompletionHandler:
request
content
removeDeliveredNotificationsWithIdentifiers:
getDeliveredNotificationsWithCompletionHandler:
_notificationIdentifierPrefixForEventIdentifier:
_generateUniqueIdentifierForNotificationIdentifierPrefix:eventDate:
_stringForEventDate:
stringByAppendingFormat:
localeWithLocaleIdentifier:
setLocale:
timeZoneForSecondsFromGMT:
setTimeZone:
setDateFormat:
stringFromDate:
_windDownReminderContent
_bedtimeReminderContent
_chargingReminderContentWithUserInfo:
_wakeUpResultsContentWithUserInfo:
_wakeDetectionContentWithUserInfo:
_contentByAddingCommonUserInfoTo:
setUserInfo:
setCategoryIdentifier:
setTitle:
_localizedBedtimeOrWindDownReminderBodyWithKey:embeddingTimeForEvent:
setBody:
setSound:
setExpirationDate:
_windDownReminderBodyContent
localizedStringFromDate:dateStyle:timeStyle:
currentCalendar
hksp_dateRequiresSingularTimeString:
stringByAppendingString:
localizedStandardRangeOfString:
replaceCharactersInRange:withString:
_chargingReminderBodyForAlarmEnabled:sleepTrackingEnabled:
setShouldIgnoreDoNotDisturb:
T@"UNUserNotificationCenter",R,N,V_notificationCenter
automatedOffFromManualState
_manualOffState
_manualBedtimeState
_automatedOffState
_automatedOffFromManualState
T@"<HDSPSleepModeStateMachineDelegate>",R,W,D,N
T@"<HDSPSleepModeStateMachineInfoProvider>",R,W,D,N
T@"HDSPSleepModeOffState",R,N,V_offState
T@"HDSPSleepModeWindDownState",R,N,V_windDownState
T@"HDSPSleepModeManualOffState",R,N,V_manualOffState
T@"HDSPSleepModeBedtimeState",R,N,V_bedtimeState
T@"HDSPSleepModeManualBedtimeState",R,N,V_manualBedtimeState
T@"HDSPSleepModeAutomatedOffState",R,N,V_automatedOffState
T@"HDSPSleepModeAutomatedOffFromManualState",R,N,V_automatedOffFromManualState
_determineNextStateFromTimeline
_forceUpdateStateWithChangeReason:
timeline
_timelineForDate:
resolvedOccurrenceContainingDate:
windDownInterval
hksp_containsDate:searchOptions:
bedtimeInterval
_scheduleState
T@"HDSPSleepScheduleStateCoordinatorStateMachine",R,W,D,N
TQ,R,N,V_scheduleState
_upcomingState
_notOnboardedState
T@"<HDSPSleepWidgetStateMachineDelegate>",R,W,D,N
T@"<HDSPSleepWidgetStateMachineInfoProvider>",R,W,D,N
T@"HDSPSleepWidgetDisabledState",R,N,V_disabledState
T@"HDSPSleepWidgetWaitingState",R,N,V_waitingState
T@"HDSPSleepWidgetUpcomingState",R,N,V_upcomingState
T@"HDSPSleepWidgetWindDownState",R,N,V_windDownState
T@"HDSPSleepWidgetBedtimeState",R,N,V_bedtimeState
T@"HDSPSleepWidgetBedtimeInProgressState",R,N,V_bedtimeInProgressState
T@"HDSPSleepWidgetGreetingState",R,N,V_greetingState
T@"HDSPSleepWidgetNotOnboardedState",R,N,V_notOnboardedState
initWithDomain:
_keysForChangeNotification:
_handleNanoPreferencesSync:
_resetNPSDomainAccessor
npsDomainAccessor
_registerForNotifications
_handleActivePairedDeviceDidChange:
floatForKey:
setFloat:forKey:
integerForKey:
setInteger:forKey:
synchronizeUserDefaultsDomain:keys:
synchronizeNanoDomain:keys:
_npsManager
_npsDomainAccessorQueue
_notifyAccumulator
_npsDomainAccessor
T@"NPSDomainAccessor",R,N,V_npsDomainAccessor
_timelineResults
T@"HKSPSleepEventTimelineResults",R,N,V_timelineResults
_nextSystemReadyState
_transitionToQueryingState
_inMonitoringWindow
chargingRemindersEnabledWithLogObject:
T@"HDSPChargingReminderStateMachine",R,W,D,N
initWithUTF8String:
_registerForStream:
stringWithCString:encoding:
_handleNotificationWithName:completion:
launchNotificationRegistrations
launchNotificationRegistrationLock
_launchNotificationRegistrationLock
_launchNotificationRegistrations
T@"NSMutableDictionary",R,N,V_launchNotificationRegistrations
T{os_unfair_lock_s=I},R,N,V_launchNotificationRegistrationLock
initWithAlarmManager:
_checkAlarmServer
sleepAlarm
removeObserver:name:object:
_alarmServerReady
sleepAlarms
hour
minute
bedtimeHour
bedtimeMinute
repeatSchedule
weekdays
bedtimeReminder
bedtimeReminderMinutes
windDownMinutes
sound
soundVolume
vibrationIdentifier
setWindDownMinutes:
setSoundVolume:
setToneIdentifier:
setVibrationIdentifier:
sleepAlarm:matchesSleepScheduleModel:
alarmServerReady
alarmManager
_alarmManager
T@"MTAlarmManager",R,N,V_alarmManager
T@"NAFuture",R,N,V_alarmServerReady
isTimeAsleepTrackingDisabled
T@"HDSPTimeAsleepTrackerStateMachine",R,W,D,N
sleepFocusConfigurationServiceWithOptions:
_handleFocusModeEvent:
_ensureFocusModeCreatedForSleepMode:reason:
_userTurnedOffSleepModeWithReason:
_automationTurnedOffSleepModeWithReason:
_sleepModeTurnedOffForUnknownReason
_userTurnedOnSleepModeWithReason:
_automationTurnedOnSleepModeWithReason:
_sleepModeTurnedOnForUnknownReason
_shouldHandleBiomeEvent:
modeUpdateReason
modeUpdateSource
_sleepModeChangeReasonForBiomeReason:source:
isStarting
_createFocusModeIfNeeded
sleepScreenEnabled
_powerLogSleepMode:sleepScreenEnabled:
notifyObserversForSleepModeChange:previousMode:reason:
_isScheduledSleepModeEnabled
_isSleepModeDuringWindDownEnabled
sleepFocusModeBridge:didUpdateSleepFocusConfiguration:
sleepModeLock
sleepModeObservers
sleepProactiveBridge
_sleepModeLock
_sleepModeObservers
_sleepProactiveBridge
T{os_unfair_lock_s=I},R,N,V_sleepModeLock
T@"HDSPSleepModeStateMachine",R,N,V_stateMachine
T@"HKSPObserverSet",R,N,V_sleepModeObservers
T@"<HDSPSleepFocusModeBridge>",R,N,V_sleepFocusModeBridge
T@"<HDSPSleepProactiveBridge>",R,N,V_sleepProactiveBridge
Tq,N
@24@0:8@16
@16@0:8
B16@0:8
v32@0:8@16@24
v24@0:8@16
v16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8Q16
v40@0:8q16q24Q32
@"<HDSPWakeDetectorDelegate>"16@0:8
v24@0:8@"<HDSPWakeDetectorDelegate>"16
@24@0:8@"HDSPEnvironment"16
@"HDSPEnvironment"16@0:8
v24@0:8@"HDSPEnvironment"16
v24@0:8@?16
{os_unfair_lock_s=I}16@0:8
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"<HDSPWakeDetectorDelegate>"
@"HDSPEnvironment"
v24@0:8@"<HDSPSyncedUserDefaults>"16
v32@0:8@"<HDSPSyncedUserDefaults>"16@"NSSet"24
@32@0:8@16@24
@"NAFuture"32@0:8@"HDSPNotificationListener"16@"NSString"24
@"NSDictionary"16@0:8
@40@0:8@16@24@32
@24@0:8^@16
B32@0:8@16^@24
B24@0:8^@16
@48@0:8#16@24@32^@40
B48@0:8@16@24Q32^@40
@"HDSPSyncedDefaults"
@"HDSPSyncedDefaultsConfiguration"
@"HKSPObserverSet"
v32@0:8Q16Q24
q16@0:8
v40@0:8Q16Q24Q32
@"<HDSPSleepTrackerDelegate>"16@0:8
v24@0:8@"<HDSPSleepTrackerDelegate>"16
@"NAFuture"24@0:8@"HDSPSleepSession"16
@32@0:8@16Q24
@"<HDSPSleepTrackerDelegate>"
@"<HKSPQueueBackedScheduler>"
v24@0:8@"HDSPTimeChangeListener"16
v48@0:8@16{?=qq}24@40
{?=qq}24@0:8@16
@40@0:8{?=qq}16@?32
v32@0:8{?=qq}16
@"<HDSPActivityScheduler>"
@"HKSPAnalyticsManager"
v24@0:8@"NSString"16
v32@0:8Q16@24
v32@0:8Q16@"NSDate"24
@24@0:8Q16
@?16@0:8
@"<NAScheduler>"16@0:8
@"NSDateInterval"24@0:8@"NSDate"16
@"NSDate"16@0:8
@"HKSPSleepScheduleModel"16@0:8
v20@0:8f16
@56@0:8@16@24@32@40@?48
@"HDSPChargingReminderDisabledState"
@"HDSPChargingReminderWaitingState"
@"HDSPChargingReminderMonitoringState"
@"HDSPChargingReminderNotifiedState"
v24@0:8@"HKSPSleepEvent"16
@"NSSet"16@0:8
@"NSArray"24@0:8@"NSDate"16
@"<HDSPSleepEventDelegate>"16@0:8
v24@0:8@"<HDSPSleepEventDelegate>"16
v24@0:8@"NSDate"16
v32@0:8@"HDSPSleepScheduleModelManager"16@"HKSPSleepSchedule"24
v32@0:8@"HDSPSleepScheduleModelManager"16@"HKSPSleepSettings"24
v32@0:8@"HDSPSleepScheduleModelManager"16@"HKSPSleepEventRecord"24
v32@0:8@"HDSPSleepScheduleModelManager"16@"HKSPSleepScheduleModel"24
v20@0:8B16
@32@0:8@16@?24
v32@0:8@16Q24
@"<HDSPSleepEventDelegate>"
@"<HDSPTimeAsleepTracker>"
@"HDSPTimeAsleepTrackerStateMachine"
@"NSArray"
@"HDSPTimeAsleepTrackerDisabledState"
@"HDSPTimeAsleepTrackerWaitingState"
@"HDSPTimeAsleepTrackerAutoTrackingState"
@"HDSPTimeAsleepTrackerActivityTrackingState"
@"HDSPTimeAsleepTrackerActivityAfterWakeUpTrackingState"
@"HDSPTimeAsleepTrackerManualTrackingState"
@"HDSPTimeAsleepTrackerInternalEndState"
d16@0:8
@"HDSPWakeUpResultsNotification"
@"HKHealthStore"
@"HKSPDiagnostics"
v32@0:8q16q24
B24@0:8q16
v32@0:8q16@24
v24@0:8q16
@"NSDictionary"
@"HDSPSleepLockScreenStateMachine"
@"<HDSPSleepLockScreenAssertionManager>"
@40@0:8@16@24@?32
@"<_CDLocalContext>"
v32@0:8@"HDSPSleepSessionManager"16@"HDSPSleepSession"24
v32@0:8@"HDSPSleepSessionManager"16@"NSArray"24
@"NAFuture"32@0:8@"HDSPSleepSessionManager"16@"HDSPSleepSession"24
v24@0:8@"HDSPSleepSessionManager"16
@"HDSPSleepSessionManager"
@"<HDSPSleepTracker>"
v32@0:8q16Q24
@40@0:8q16Q24^@32
@48@0:8@16@24@32@40
@"HDSPSleepWidgetStateMachine"
@"<HDSPWidgetReloader>"
@"HKSPThrottler"
@"<HDSPWidgetRelevanceDonor>"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^{_NSZone=}16
v40@0:8@16@24Q32
v24@0:8@"<HDSPSleepTracker>"16
v40@0:8@"<HDSPSleepTracker>"16@"HDSPSleepSession"24Q32
@"<HDSPSleepSessionManagerDelegate>"
@"<HDSPSleepSessionPersistence>"
@"HDSPDeviceUnlockMonitor"
v28@0:8q16B24
v24@0:8@"HKSPSleepScheduleModel"16
@"HDSPChargingReminderStateMachine"
Q32@0:8d16d24
@48@0:8@16@24{?=qq}32
q36@0:8q16B24@28
d20@0:8B16
d24@0:8q16
B48@0:8@16Q24@32@40
{?=qq}16@0:8
{?="start"q"duration"q}
@272@0:8@16@?24@?32@?40@?48@?56@?64@?72@?80@?88@?96@?104@?112@?120@128@?136@?144@?152@?160@?168@?176@?184@?192@?200@?208@216@?224@?232@?240@248@?256@264
v32@0:8@?16^{os_unfair_lock_s=I}24
v32@0:8@?16@24
@"_HKBehavior"
@"HDSPSleepScheduleModelManager"
@"HDSPSleepStorage"
@"HDSPSleepEventScheduler"
@"HDSPSleepScheduleStateCoordinator"
@"HDSPSleepModeManager"
@"HDSPSleepTrackingManager"
@"HDSPSleepActionManager"
@"HDSPSleepNotificationManager"
@"HDSPEnvironmentStateMachine"
@"NAFuture"
@"<HKSPUserDefaults>"
@"HDSPSleepStoreServer"
@"HDSPGoodMorningAlertManager"
@"HDSPChargingReminderManager"
@"HDSPWakeDetectionManager"
@"HDSPWakeUpResultsNotificationManager"
@"HDSPSleepAlarmManager"
@"HKSPHealthStoreProvider"
@"HDSPDiagnostics"
@"HDSPNotificationListener"
@"HDSPSleepLockScreenManager"
@"HDSPSleepWidgetManager"
@"HDSPSystemMonitor"
@"HDSPAssertionManager"
@"HDSPTimeChangeListener"
@"HKSPSensitiveUIMonitor"
@"HDSPSleepScheduleModelMigrationManager"
@"HDSPContextStoreManager"
@"HDSPBiomeManager"
@"HDSPIDSServiceManager"
@"HDSPAnalyticsManager"
v32@0:8@16@?24
v24@0:8@?<v@?@"HKSPSyncAnchorContainer"@"NSError">16
v32@0:8@"HKSPSyncAnchorContainer"16@?<v@?B@"NSError">24
v40@0:8q16Q24@?32
v40@0:8@16Q24@?32
v32@0:8Q16@?24
v40@0:8@16@24@?32
v40@0:8q16@24@?32
v32@0:8q16@?24
v24@0:8@?<v@?@"HKSPSleepSchedule"@"NSError">16
v32@0:8@"HKSPSleepSchedule"16@?<v@?@"NSError">24
v24@0:8@?<v@?@"HKSPSleepSettings"@"NSError">16
v32@0:8@"HKSPSleepSettings"16@?<v@?@"NSError">24
v24@0:8@?<v@?@"HKSPSleepEventRecord"@"NSError">16
v32@0:8@"HKSPSleepEventRecord"16@?<v@?@"NSError">24
v24@0:8@?<v@?q@"NSError">16
v40@0:8q16Q24@?<v@?@"NSError">32
v24@0:8@?<v@?Q@"NSError">16
v24@0:8@?<v@?B@"NSError">16
v40@0:8@"NSDate"16Q24@?<v@?B@"NSError">32
v32@0:8Q16@?<v@?B@"NSError">24
v40@0:8@"NSString"16@"NSDictionary"24@?<v@?B@"NSError">32
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v40@0:8q16@"NSDictionary"24@?<v@?B@"NSError">32
v32@0:8q16@?<v@?B@"NSError">24
v20@0:8i16
v24@0:8@"HKSPXPCClient"16
@40@0:8@16@?24@32
@"HKSPXPCConnectionListener"
@"HDSPProcessStateManager"
@"HKSPPersistentSyncAnchorContainer"
@"<HDSPSystemReadyDelegate>"16@0:8
v24@0:8@"<HDSPSystemReadyDelegate>"16
@"<HDSPSystemReadyDelegate>"
@"HDSPSpringboardMonitor"
v32@0:8q16@"NSDictionary"24
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"<HDSPSleepLockScreenAssertionManagerDelegate>"16@0:8
v24@0:8@"<HDSPSleepLockScreenAssertionManagerDelegate>"16
@"NSXPCListener"
@"NSXPCConnection"
@"<HDSPSleepLockScreenAssertionManagerDelegate>"
@"SBSLockScreenRemoteContentAssertion"
@"NSNumber"
v32@0:8@"HKSPSleepEvent"16@"NSDictionary"24
@24@0:8B16B20
v72@0:8@16@24@32@40@48B56B60@?64
@"NSMutableDictionary"
@"NSString"
v24@0:8@"HKWristDetectionSettingManager"16
@"HKWristDetectionSettingManager"
@28@0:8^@16B24
@"HDSPGoodMorningAlertDisabledState"
@"HDSPGoodMorningAlertWaitingState"
@"HDSPGoodMorningAlertPresentingState"
v24@0:8@"NSArray"16
v32@0:8@"NSArray"16@"NSArray"24
@"HDSPCFUserNotification"
@"HDSPCFUserNotificationCenter"
@"NSMutableArray"
@"NSDate"
@"NSObject<OS_dispatch_source>"
@"HDSPEnvironmentNotReadyState"
@"HDSPEnvironmentMigrationState"
@"HDSPEnvironmentReadyState"
@"HDSPEnvironmentDemoState"
v24@0:8@"NSError"16
@"HDSPWakeUpResultsNotificationWaitingForWakeUpState"
@"HDSPWakeUpResultsNotificationDelayingForTrackingState"
@"HDSPWakeUpResultsNotificationWaitingForRetryState"
@"HDSPWakeUpResultsNotificationQueryingState"
@"HDSPWakeUpResultsNotificationNeedsProtectedDataState"
@"HDSPWakeUpResultsNotificationNotifiedState"
@"HDSPWakeUpResultsNotificationDisabledState"
v28@0:8B16@20
f24@0:8@16
v28@0:8f16@20
q24@0:8@16
@24@0:8@"NSString"16
v32@0:8@16@"NSString"24
B24@0:8@"NSString"16
v28@0:8B16@"NSString"20
f24@0:8@"NSString"16
v28@0:8f16@"NSString"20
q24@0:8@"NSString"16
v32@0:8q16@"NSString"24
@"NSData"24@0:8@"NSString"16
@"NSDictionary"24@0:8@"NSSet"16
v24@0:8@"NSDictionary"16
v24@0:8@"NSSet"16
v24@0:8@"<HDSPSyncedUserDefaultsExternalChangeDelegate>"16
@56@0:8@16@24@?32@?40d48
v28@0:8@16B24
v36@0:8@16@?24B32
@"<HDSPSyncedUserDefaults>"
@"NSMutableSet"
@"HKSPAccumulator"
@"<HDSPSyncedUserDefaultsExternalChangeDelegate>"
v32@0:8@"<HDSPWakeDetector>"16@"NSDate"24
@"NSDateInterval"24@0:8Q16
@"HKSPSleepScheduleOccurrence"16@0:8
@40@0:8Q16@24@32
@"HDSPWakeDetectionStateMachine"
B40@0:8Q16Q24Q32
@32@0:8Q16@24
@56@0:8Q16q24@32q40@48
@"HKQuantity"
@"HDSPWakeUpResultsNotificationStateMachine"
@"HKSHGoalProgressEngine"
@32@0:8@?16B24B28
@"HDSPSyncedDefaultsInfo"
@72@0:8@16Q24@32Q40@48@56Q64
@64@0:8@16@24@32@40@48@56
@"NSSet"
Q40@0:8@16@24^@32
v40@0:8@16@24@32
@"HKSPSleepSchedule"
@"HKSPSleepSettings"
@"HKSPSleepEventRecord"
v32@0:8@"<HDSPIDSService>"16@"<HDSPIDSMessage>"24
B24@0:8Q16
@"<HDSPIDSService>"
B32@0:8@16Q24
@"NSString"24@0:8@"NSString"16
@"BSDescriptionBuilder"24@0:8@"NSString"16
@"BSDescriptionBuilder"16@0:8
@32@0:8@16d24
@32@0:8@"NSString"16d24
@"INRelevantShortcutStore"
v24@0:8@"<HDSPSleepEventProvider>"16
@40@0:8@16@?24@?32
@"HKSPSleepEvent"
@"HDSPSleepEventList"
@"NSHashTable"
@"<HDSPEventScheduler>"
@"NAFuture"24@0:8@"NSArray"16
@"<HDSPSleepAlarmProvider>"
@"NSUbiquitousKeyValueStore"
@24@0:8@?16
B20@0:8i16
@"RBSProcessMonitor"
@"<HDSPProcessStateManagerDelegate>"
v32@0:8@"NSDate"16Q24
@"<HDSPEventScheduleDelegate>"16@0:8
v24@0:8@"<HDSPEventScheduleDelegate>"16
@"<HDSPEventScheduleDelegate>"
@"HDSPDevicePowerMonitor"
@"HDSPApplicationWorkspaceMonitor"
@"HDSPWatchOnWristMonitor"
@"<HDSPSystemReadyProvider>"
#24@0:8Q16
v40@0:8@16Q24d32
@"NSObject<OS_os_transaction>"
v40@0:8Q16Q24@32
v40@0:8Q16Q24@"HDSPSleepScheduleStateCoordinatorStateMachineContext"32
v40@0:8Q16@24@?32
B40@0:8@16Q24@32
@"HDSPSleepScheduleStateCoordinatorStateMachine"
@20@0:8B16
@48@0:8@16{?=qq}24@40
q24@0:8Q16
@48@0:8Q16{?=qq}24@40
Q24@0:8q16
Q24@0:8Q16
@"<HDSPBiomeInterface>"
@32@0:8@16@?<v@?@"<BMStoreData>">24
v32@0:8@"<BMStoreData>"16@"<BMSourceStream>"24
@"BMBiomeScheduler"
@"HDSPGoodMorningAlertStateMachine"
@"CHSTimelineController"
@"HKSPSleepFocusConfiguration"24@0:8^@16
@"<HKSPSleepFocusModeBridgeDelegate>"16@0:8
v24@0:8@"<HKSPSleepFocusModeBridgeDelegate>"16
@40@0:8@16^{__CFUserNotification=}24@?32
^{__CFUserNotification=}16@0:8
^{__CFUserNotification=}
@"HDSPWakeDetectionDisabledState"
@"HDSPWakeDetectionWaitingState"
@"HDSPWakeDetectionExplicitDetectingState"
@"HDSPWakeDetectionActivityDetectingState"
@"HDSPWakeDetectionNotifiedState"
@32@0:8B16B20@24
f16@0:8
@"HDSPSleepLockScreenOffState"
@"HDSPSleepLockScreenWindDownState"
@"HDSPSleepLockScreenBedtimeState"
@"HDSPSleepLockScreenBedtimeInProgressState"
@"HDSPSleepLockScreenGreetingState"
v32@0:8@"<HDSPActivity>"16@?<v@?@"<HDSPActivity>">24
@"<NAScheduler>"
@40@0:8@16Q24@32
@48@0:8@16Q24@32@40
@"NSObject<OS_xpc_object>"
@40@0:8B16@20@28B36
@"HDSPSleepScheduleModelChangeEvaluation"
@"NSError"
@"<HKSPSleepFocusModeBridge>"
v24@0:8@"HDSPSleepScheduleModelChangeEvaluation"16
@"HDSPSleepScheduleStateCoordinatorDisabledState"
@"HDSPSleepScheduleStateCoordinatorWakeUpState"
@"HDSPSleepScheduleStateCoordinatorBedtimeState"
@"HDSPSleepScheduleStateCoordinatorWindDownState"
@"HDSPSleepScheduleStateCoordinatorDelayedWakeUpState"
@"HDSPSleepScheduleStateCoordinatorInitialState"
v32@0:8@"<HDSPIDSMessage>"16@?<v@?B@"NSError">24
@"<HDSPIDSServiceDelegate>"16@0:8
v24@0:8@"<HDSPIDSServiceDelegate>"16
v64@0:8@16@24@32@40@48@56
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32@"IDSMessageContext"40
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
@28@0:8B16@20
@"IDSService"
@"<HDSPIDSServiceDelegate>"
@"<HDSPSource>"
@52@0:8@16@24Q32@40B48
@"NSDateInterval"
v24@0:8@"HDSPSleepStorage"16
@28@0:8@16B24
B40@0:8@16^@24@?32
B40@0:8@?16@?24^@32
B40@0:8@16@24^@32
@"HDSPSleepScheduleModelChangeEvaluator"
i16@0:8
@"UNUserNotificationCenter"
@"HDSPSleepModeOffState"
@"HDSPSleepModeWindDownState"
@"HDSPSleepModeManualOffState"
@"HDSPSleepModeBedtimeState"
@"HDSPSleepModeManualBedtimeState"
@"HDSPSleepModeAutomatedOffState"
@"HDSPSleepModeAutomatedOffFromManualState"
@"HDSPSleepWidgetDisabledState"
@"HDSPSleepWidgetWaitingState"
@"HDSPSleepWidgetUpcomingState"
@"HDSPSleepWidgetWindDownState"
@"HDSPSleepWidgetBedtimeState"
@"HDSPSleepWidgetBedtimeInProgressState"
@"HDSPSleepWidgetGreetingState"
@"HDSPSleepWidgetNotOnboardedState"
@"NPSManager"
@"NSObject<OS_dispatch_queue>"
@"NPSDomainAccessor"
@36@0:8B16@20@28
@"HKSPSleepEventTimelineResults"
v32@0:8r*16@24
@"MTAlarmManager"
Q32@0:8Q16q24
v32@0:8@"<HKSPSleepFocusModeBridge>"16@"HKSPSleepFocusConfiguration"24
@"HDSPSleepModeStateMachine"
@"<HDSPSleepFocusModeBridge>"
@"<HDSPSleepProactiveBridge>"
SleepDaemon
HelloWorld
-AUi}
+;;I
HDSPHelloWorld
@16@0:8
Querying
HDSPSleepScreenUnlockCount
v8@?0
Activity
Explicit
com.apple.sleepd.cloudkit.reset
DataVersion
CloudStorageDataVersion
LocalDataVersion
v16@?0@"HKSPChange"8
v16@?0@"<HDSPSleepStorageObserver>"8
Local Data: %@
CloudKit Data %@
Data: %@
Local Data
none
CloudKit Data
Data
HDSPSleepScheduleStateChangeReason
HDSPSleepModeChangeReason
sleepIntervalScheduler
@"NAFuture"16@?0@"NSArray"8
SleepDailyAnalyticsReportQuery
com.apple.sleep.analytics-daily.activity
v16@?0@"<HDSPActivity>"8
v32@?0@"HKSleepDaySummaryQuery"8@"NSArray"16@"NSError"24
Analytics
Disabled
@"HDSPSleepStorage"16@?0@"HDSPEnvironment"8
@"HDSPSleepScheduleModelManager"16@?0@"HDSPEnvironment"8
@"HDSPSleepEventScheduler"16@?0@"HDSPEnvironment"8
@"HDSPSleepStoreServer"16@?0@"HDSPEnvironment"8
@"HDSPSleepScheduleStateCoordinator"16@?0@"HDSPEnvironment"8
@"HDSPSleepActionManager"16@?0@"HDSPEnvironment"8
@"HDSPSleepAlarmManager"16@?0@"HDSPEnvironment"8
@"HDSPContextStoreManager"16@?0@"HDSPEnvironment"8
@"HDSPBiomeManager"16@?0@"HDSPEnvironment"8
@"HDSPSleepScheduleModelMigrationManager"16@?0@"HDSPEnvironment"8
@"HDSPNotificationListener"16@?0@"HDSPEnvironment"8
@"HDSPSleepLockScreenManager"16@?0@"HDSPEnvironment"8
@"HDSPSleepWidgetManager"16@?0@"HDSPEnvironment"8
@"HDSPIDSServiceManager"16@?0@"HDSPEnvironment"8
@"HDSPDiagnostics"16@?0@"HDSPEnvironment"8
@"HDSPSystemMonitor"16@?0@"HDSPEnvironment"8
@"HDSPTimeChangeListener"16@?0@"HDSPEnvironment"8
@"HKSPSensitiveUIMonitor"16@?0@"HDSPEnvironment"8
@"HDSPSleepModeManager"16@?0@"HDSPEnvironment"8
v16@?0@"<HDSPChargingReminderStateMachineDelegate>"8
com.apple.healthlite.SleepDetectedActivity
com.apple.healthlite.SleepSessionEndRequest
com.apple.sleep.applaunch.registration
@"<HDSPTimeAsleepTracker>"8@?0
v16@?0@"<HDSPTimeAsleepAnalysis>"8
@"HDSPSleepSessionInterval"16@?0@"<HDSPSleepStage>"8
v24@?0@"NSObject<NSCopying><NSSecureCoding>"8@"NSObject<NSCopying><NSSecureCoding>"16
v16@?0@"_CDContextualChangeRegistration"8
Current State: %@
Current State
HDSPWakeUpResultsNotificationErrorDomain
Query returned data insufficient to attempt wake up result computation
RESULT_NOTIFICATION_TITLE
HDSPWakeUpResultsNotificationLocalizer.m
This method can only localized content for One Day Wake Up Results; received category %@
This method can only localized content for One Week Wake Up Results; received category %@
One Week goal achieved count must be 3 or 4; received %@
This method can only localized content for Two Week Wake Up Results; received category %@
Daily sleep duration goal requires OneDay category
Weekly goal achieved requires OneWeek or TwoWeek category
WAKE_UP_RESULT_ONE_DAY_DURATION
WAKE_UP_RESULT_THREE_DAY_GOAL_ACHIEVED
WAKE_UP_RESULT_FOUR_DAY_GOAL_ACHIEVED
WAKE_UP_RESULT_TWO_WEEK_GOAL_ACHIEVED
%@_%ld
%@_%ld_SUBSTITUTION
%@_NAME_%ld
%@_NAME_%ld_SUBSTITUTION
com.apple.sleepd.diagnostics
com.apple.sleepd
<none>
v16@?0@"<HDSPDiagnosticsProvider>"8
ActivityDetecting
com.apple.sleepd.contextstore-registration
v24@?0@"NSString"8@"NSDictionary"16
v16@?0@"<HDSPSleepSessionObserver>"8
HDSPSleepLockStateMachineLaunchContext
WaitingForRetry
ActivityTracking
Demo
HDSPUnprocessedSessions
SleepSessions.data
@16@?0@"HDSPSleepSession"8
v24@?0@8@"NSError"16
v16@?0@"NSArray"8
v16@?0@8
@"NAFuture"16@?0@"HDSPSleepSession"8
ActivityAfterWakeUpTracking
com.apple.sleep.BatteryMonitoring.activity
B16@?0@"HKSleepDaySummary"8
v32@?0@"NSDateInterval"8Q16^B24
v16@?0@"HKSleepPeriodSegment"8
@16@?0@"HKSPAnalyticsWindDownEventData"8
not set
female
male
other
v32@?0@"HKSleepPeriodSegment"8Q16^B24
v32@?0@"HKSleepPeriod"8Q16^B24
Waiting
NotOnboarded
Bedtime
WaitingForWakeUp
HDSPEnvironmentContext
@"HDSPSleepTrackingManager"16@?0@"HDSPEnvironment"8
@"HDSPGoodMorningAlertManager"16@?0@"HDSPEnvironment"8
@"HDSPChargingReminderManager"16@?0@"HDSPEnvironment"8
@"HDSPWakeDetectionManager"16@?0@"HDSPEnvironment"8
@"HDSPWakeUpResultsNotificationManager"16@?0@"HDSPEnvironment"8
@"HDSPSleepNotificationManager"16@?0@"HDSPEnvironment"8
@"HDSPAnalyticsManager"16@?0@"HDSPEnvironment"8
defaultCallbackScheduler
v16@?0@"<HDSPEnvironmentAware>"8
v24@?0@"NSNull"8@"NSError"16
(%@) Current State: %@, System Ready: %d, Environment Ready: %d
Environment
System Ready
Environment Ready
com.apple.sleep.HDSPSleepStoreServer
@"HKSPXPCConnectionListener"16@?0@"HDSPSleepStoreServer"8
v24@?0@"HKSPXPCClientIdentifier"8@"NSError"16
v16@?0@"HKSPXPCClient"8
v24@?0@"HDSPWakeUpResultsNotificationBuilder"8@"NSError"16
B16@?0@"HKSPXPCClient"8
v16@?0@"<HKSPSleepClient>"8
v16@?0@"<HKSPSyncAnchor>"8
v24@?0@"HKSPSyncAnchorContainer"8@"NSError"16
Sync Anchor Container: %@
Connected Clients: %@
Sync Anchor Container
Connected Clients
com.apple.rootrobot
configuration
minimal
WindDown
AutomatedOffFromManual
com.apple.SleepLockScreen
SleepLockScreen.LockScreenViewController
v16@?0@"NSError"8
com.apple.mobile.keybagd.first_unlock
v16@?0@"<HDSPDeviceUnlockObserver>"8
Greeting
v12@?0B8
EARLY_WAKEUP_TITLE_ALARM_AND_SLEEP_FOCUS
EARLY_WAKEUP_TITLE_SLEEP_FOCUS
EARLY_WAKEUP_TITLE_ALARM
EARLY_WAKEUP_TITLE_NONE
EARLY_WAKEUP_BODY_ALARM_AND_SLEEP_FOCUS
EARLY_WAKEUP_BODY_SLEEP_FOCUS
EARLY_WAKEUP_BODY_ALARM
EARLY_WAKEUP_BODY_NONE
EARLY_DISMISS_TURN_OFF
EARLY_DISMISS_YES
EARLY_DISMISS_LEAVE_ON
EARLY_DISMISS_NO
AutoTracking
v20@?0B8@"NSError"12
v16@?0@"NAPromise"8
@"NAFuture"16@?0@"NSError"8
v24@?0@"NSArray"8@"NSError"16
isOnWrist
lastOnWristDate
v16@?0@"<HDSPWatchOnWristObserver>"8
Initial
v16@?0@"<HDSPGoodMorningAlertStateMachineDelegate>"8
snoozedUntilDate
v16@?0@"<HDSPApplicationWorkspaceObserver>"8
B16@?0@"_HDSPCFUserNotificationCenterRegistration"8
Launched: %@
Launched
v16@?0@"<HDSPEnvironmentStateMachineDelegate>"8
DelayedWakeUp
confirmedUntilDate
wakeUpConfirmedDate
wakeUpConfirmedUntilDate
Notified
v16@?0@"<HDSPWakeUpResultsNotificationStateMachineDelegate>"8
@"<HDSPSyncedUserDefaults>"8@?0
v16@?0@"NSSet"8
v16@?0@"<HKSPUserDefaults>"8
v16@?0@"HDSPSyncedDefaultsKeySet"8
@"<HDSPWakeDetector>"16@?0@"HDSPEnvironment"8
@"<HDSPWakeDetector>"16@?0@?<@"<HDSPWakeDetector>"@?@"HDSPEnvironment">8
B16@?0@"<HDSPWakeDetector>"8
v16@?0@"<HDSPWakeDetector>"8
Presenting
InternalEnd
WakeUpResultsNotificationDelayOverride
com.apple.sleep.WakeUpResultsNotificationRetry.activity
HDSPWakeUpResultsNotificationManager.m
_queryResultFuture must be finished before we can post notification
v16@?0@"HDSPWakeUpResultsNotificationBuilder"8
WakeUpResults
ManualOff
@"NSSet"16@?0@"HDSPSyncedDefaultsKeySet"8
B16@?0@"HDSPSyncedDefaultsKeySet"8
B24@?0@"NSString"8@"HDSPSyncedDefaultsKeySet"16
@24@?0@"NSString"8@"HDSPSyncedDefaultsKeySet"16
HKSPLastSchedule
HKSPLastSettings
HKSPLastRecord
com.apple.sleepd.ids.test
date
identifier
dismissedDate
Bedtime In Progress
HDSPLastEventTriggerDate
HDSPLastStandardSleepEvent
HDSPRescheduleAssertion
HDSPRescheduleTransaction
HDSPNotifyDueAssertion
@"<HDSPEventScheduler>"16@?0@"HDSPEnvironment"8
@"HKSPThrottler"16@?0@?<v@?>8
com.apple.sleep.HDSPSleepEventScheduler
v16@?0@"<HDSPSleepEventProvider>"8
B16@?0@"HKSPSleepEvent"8
v16@?0@"HKSPSleepEvent"8
@"NAFuture"16@?0@"<HDSPSleepEventHandler>"8
Scheduled Events: %@, Last Standard Sleep Event: %@
Scheduled Events
Last Standard Sleep Event
com.apple.kvs.store-did-change.com.apple.sleepd
v24@?0@"NSString"8@"<NSCopying><NSCoding>"16
v16@?0@"NSString"8
@"<HDSPProcessState>"12@?0i8
@"RBSProcessPredicate"16@?0@"RBSProcessIdentifier"8
v32@?0@"RBSProcessMonitor"8@"RBSProcessHandle"16@"RBSProcessStateUpdate"24
v16@?0@"<RBSProcessMonitorConfiguring>"8
SignificantTimeChange
com.apple.system.timezone
v16@?0@"<HDSPTimeChangeObserver>"8
com.apple.alarm
com.apple.sleepd.NextAlarm
Date
UserVisible
Ready
sleepEvents
Ready: %d
Has Been Unlocked: %d
Charging: %d
Battery: %f
On Wrist: %d
Has Been Unlocked
Charging
Battery
OnWrist
com.apple.SleepDaemon
Localizable
GeneratedCoaching
@"NSString"16@?0@"<HDSPAssertion>"8
B16@?0@"<HDSPAssertion>"8
transactions
assertions
Assertions: %@
Transactions: %@
Assertions
Transactions
@"NAFuture"16@?0@"<HDSPSleepScheduleStateObserver>"8
@"NAFuture"8@?0
BedtimeInProgress
sleepModeOn
Migration
v16@?0@"<BMStoreData>"8
eventBody.semanticModeIdentifier
com.apple.sleep.HDSPBiomeManager.queue
com.apple.sleepd.biome
v16@?0@"BPSCompletion"8
v16@?0@"BMStoreEvent"8
v16@?0@"<HDSPGoodMorningAlertObserver>"8
v16@?0@"<HDSPSleepNotificationPublisher><HDSPEnvironmentAware>"8
v16@?0@"<HDSPSleepNotificationPublisher>"8
sleepd
ExplicitDetecting
@"NAFuture"16@?0@"<HDSPSleepActionObserver>"8
v16@?0@"<HDSPSleepActionObserver>"8
v16@?0@"MTAlarm"8
@"NSDate"16@?0@"MTAlarm"8
v16@?0@"<HDSPWakeDetectionStateMachineDelegate>"8
Upcoming
isSignificantChange
isSignificantEventRecordUpdate
topLevelChangeKeys
com.apple.system.powersources.source
v16@?0@"<HDSPDevicePowerObserver>"8
v16@?0@"<HDSPSleepLockScreenStateMachineDelegate>"8
v16@?0@"NSObject<OS_xpc_object>"8
DelayingForTracking
goodMorningDismissed
WakeUp
v16@?0@"<HDSPSleepScheduleStateCoordinatorStateMachineDelegate>"8
com.apple.private.alloy.sleep.classd
com.apple.private.alloy.avconference.avctester
%@ (%@)
cloud
local
B16@?0@"IDSDevice"8
@16@?0@"IDSDevice"8
source
changeEvaluation
SleepSessionDateInterval
SleepSessionSleepIntervals
SleepSessionEndReason
SleepSessionMetadata
RequiresFirstUnlock
@"NSDateInterval"8@?0
@"NSArray"8@?0
Q8@?0
@"NSDictionary"8@?0
B8@?0
interval
sleepIntervals
endReason
requiresFirstUnlock
SleepSessionInterval
SleepSessionType
type
Awake
InBed
UnspecifiedSleep
CoreSleep
DeepSleep
REMSleep
Manual
OnCharger
ActivityDetectedAfterWakeUp
AppLaunchedAfterWakeUp
Internal
TimeOut
Cancel
Error
Scheduled
v16@?0@"<HDSPSleepScheduleModelObserver>"8
B16@?0^@8
B16@?0@"HKSPSleepScheduleOccurrence"8
Sleep Schedule Model: %@
Sleep Schedule Model
Carousel
Springboard
v12@?0i8
v16@?0@"<HDSPSpringboardObserver>"8
com.apple.springboard.finishedstartup
ManualTracking
B16@?0@"UNNotification"8
@16@?0@"UNNotification"8
en_US_POSIX
yyyy-MM-dd_HH:mm
BEDTIME_REMINDER_TITLE
BEDTIME_REMINDER_MESSAGE
WIND_DOWN_REMINDER_TITLE
WIND_DOWN_REMINDER_MESSAGE
WIND_DOWN_REMINDER_MESSAGE_PRE_ONBOARDING
HDSPUserNotificationCenter.m
This method can only be used to format localized strings containing bedtime or wakeUp times.
_SINGULAR
CHARGE_WATCH_TITLE
CHARGE_WATCH_ALARM_MESSAGE
CHARGE_WATCH_SLEEP_TRACKING_MESSAGE
CHARGE_WATCH_NO_ALARM_OR_SLEEP_TRACKING_MESSAGE
v16@?0@"<HDSPSleepModeStateMachineDelegate>"8
v16@?0@"<HDSPSleepWidgetStateMachineDelegate>"8
com.apple.sleep.sync.SleepScheduleDidChange
com.apple.sleep.sync.SleepSettingsDidChange
com.apple.sleep.sync.SleepRecordDidChange
com.apple.sleep.NPSDomainAccessor.serial
AutomatedOff
NotReady
NeedsProtectedData
com.apple.distnoted.matching
com.apple.notifyd.matching
Notification
@"NAFuture"16@?0@"<HDSPNotificationObserver>"8
Monitoring
com.apple.mobiletimerd.MTAlarmServer
v24@?0@"MTAlarm"8@"NSError"16
@"NAFuture"16@?0@"NSNull"8
ManualBedtime
v16@?0@"BMUserFocusComputedModeEvent"8
HDSPSleepModeManager.m
Unable to set wind down via this method
v16@?0@"<HDSPSleepModeObserver>"8
state
specificState
sleepScreenEnabled
So8NSObjectC
[%{public}@] Received query failed with error %{public}@
[%{public}@] Received query completion event
[%{public}@] Received protected heath data available event
[%{public}@] Executing query
[%{public}@] startDetecting
[%{public}@] stopDetecting
[%{public}@] setNumberOfTimesDismissed: %ld
[%{public}@] sleepLockWasDismissed (%ld times)
[%{public}@] counts as early wake up
[%{public}@] performing initial sync
[%{public}@] saving data version
[%{public}@] loading schedule
[%{public}@] persisting schedule %{public}@
[%{public}@] persisting schedule changes %{public}@
[%{public}@] removing sleep schedule
[%{public}@] loading settings
[%{public}@] persisting settings %{public}@
[%{public}@] persisting settings changes %{public}@
[%{public}@] removing sleep settings
[%{public}@] loading event record
[%{public}@] creating default event record
[%{public}@] persisting event record %{public}@
[%{public}@] persisting event record changes %{public}@
[%{public}@] removing sleep event record
[%{public}@] loading model
[%{public}@] persisting model
[%{public}@] nothing persisted for properties of class %{public}@
[%{public}@] failed deserialization of class %{public}@ with error %{public}@
[%{public}@] failed serialization with error %{public}@
[%{public}@] environmentWillBecomeReady
[%{public}@] resetting Cloud storage
[%{public}@] syncedDefaultsDidChangeExternally
[%{public}@] received %{public}@
[%{public}@] sleep features disabled
[%{public}@] no sleep focus mode exists
[%{public}@] it's bedtime, turning on bedtime mode if it's not on
[%{public}@] it's wind down, turning on wind down mode if it's not on
[%{public}@] turning off sleep mode if it's on
[%{public}@] it's wind down, turning on sleep mode mode
[%{public}@] it's wind down but sleep mode is disabled, turning off sleep mode
[%{public}@] it's bedtime, turning on sleep mode mode
[%{public}@] it's bedtime but sleep mode is disabled, turning off sleep mode
[%{public}@] it's wake up, turning off sleep mode
[%{public}@] sleep schedule state was disabled
[%{public}@] bedtime mode turned on (%{public}@)
[%{public}@] ignoring automation turn on
[%{public}@] ignoring automation turn off
[%{public}@] bedtime mode turned on for an unknown reason, treating as user requested
[%{public}@] sleep schedule disabled
[%{public}@] time in bed tracking disabled
[%{public}@] state changed to wake up (%{public}@)
[%{public}@] ending time in bed tracking
[%{public}@] ending sleep session with reason %{public}@
[%{public}@] created %{public}@
[%{public}@] using 90 minutes before bedtime %{public}@ as session start
[%{public}@] using bedtime date %{public}@ as session start
[%{public}@] computing in bed intervals inside %{public}@
[%{public}@] _computeSessionMetadataForInterval: %{public}@
[%{public}@] previous occurrence: %{public}@
[%{public}@] user set wake time: %{public}@ user set bed time: %{public}@
[%{public}@] finished processing session: %{public}@
[%{public}@] processed session has intervals: %@
[%{public}@] Environment will become ready
[%{public}@] Environment did become ready
[%{public}@] Significant time change detected
[%{public}@] Updating schedule activity
[%{public}@] Scheduling daily collection activity
[%{public}@] Running daily collection activity
[%{public}@] Cancelling daily collection activity
[%{public}@] Data collection disabled; not executing query
[%{public}@] Data collection is already in progress; not executing query
[%{public}@] Query failed with error: %{public}@
[%{public}@] Query succeeded
[%{public}@] Sending daily reports: %{public}@
[%{public}@] Pruning wind down action data prior to %{public}@
[%{public}@] wake detection disabled
[%{public}@] in detection window for activity (and explicit)
[%{public}@] in detection window for explicit
[%{public}@] sleep tracking onboarding not completed
[%{public}@] sleep coaching onboarding not completed
[%{public}@] setting initial demo schedule
[%{public}@] resetDemoMode
[%{public}@] failed to delete schedule with error %{public}@
[%{public}@] failed to save model with error %{public}@
[%{public}@] environmentDidBecomeReady
[%{public}@] updateState
[%{public}@] telling scheduler we have events to schedule
[%{public}@] telling scheduler we no longer have events to schedule
[%{public}@] starting sleep session (%{public}@)
[%{public}@] sleep tracker completed sleep analysis for session with end reason %{public}@
[%{public}@] no sleep analysis provided
[%{public}@] not saving session with end reason %{public}@
[%{public}@] invalid session with start date %{public}@ after end date %{public}@!
[%{public}@] created session has intervals: %@
[%{public}@] starting activity detection
[%{public}@] stopping activity detection
[%{public}@] starting app launch detection
[%{public}@] app launch detected: %{public}@
[%{public}@] stopping app launch detection
[%{public}@] notifying for activity detected on date %{public}@
[%{public}@] didUpdateSleepScheduleModel: %{public}@
[%{public}@] sleepScheduleStateDidChange: %{public}@ previousState: %{public}@ (%{public}@)
[%{public}@] scheduling expiration of %{public}@
[%{public}@] %{public}@ expired
[%{public}@] sleepModeDidChange: %{public}@ (%{public}@)
[%{public}@] device charging state changed: %d
[%{public}@] wristDetectEnabledDidChange: %d
[%{public}@] significant time change detected
[%{public}@] ignoring stopDetecting
[%{public}@] previousSessionFinished
[%{public}@.%p] initializing...
----------------------------%{public}@----------------------------
[%{public}@]
[%{public}@] sleep mode did change: %{public}@ (%{public}@)
[%{public}@] sleep settings did change
[%{public}@] present the good morning alert
[%{public}@] dismiss the good morning alert
[%{public}@] sleepLockScreenStateDidChange: %ld previousState: %ld
[%{public}@] updating assertion, sleep screen enabled: %@, sleep mode on: %@
[%{public}@] significantTimeChangeDetected
[%{public}@] timeZoneChangeDetected
[%{public}@] overriding lock screen state: %@ (userInfo: %@)
[%{public}@] registering predicate %{public}@ for identifier %{public}@
[%{public}@] processing callback with identifier %{public}@
[%{public}@] unregistering %{public}@
[%{public}@] sleep state changed from %{public}@ to %{public}@ (%{public}@)
[%{public}@] ignoring wake up state as it was not due to normal reason
[%{public}@] sleep event due %{public}@
[%{public}@] sleep mode changed from %{public}@ to %{public}@ (%{public}@)
[%{public}@] adding %{public}@ to context
[%{public}@] previous context is %{public}@
[%{public}@] previous context is of unexpected class %{public}@
[%{public}@] new context is %{public}@
[%{public}@] didSaveSession %{public}@
[%{public}@] didSaveArchivedSessions %{public}@
[%{public}@] requestsProcessedSessionForSession %{public}@
[%{public}@] sleepSessionManagerDidFinishSession
[%{public}@] presenting good morning alert
[%{public}@] skipping good morning alert, lock screen isn't active
[%{public}@] user turned on sleep mode
[%{public}@] determined state: %{public}@
[%{public}@] sleep mode is off, waiting to be told to present greeting
[%{public}@] sleep mode is off, not presenting greeting (%{public}@)
[%{public}@] sleep screen disabled
[%{public}@] Received retry event
[%{public}@] overriding widget state
[%{public}@] sleep schedule model did change
[%{public}@] sleep schedule state did change
[%{public}@] sleep mode did change
[%{public}@] sleepWidgetStateDidChange: %{public}@ (%{public}@)
[%{public}@] sleepWidgetShouldReload (%{public}@)
[%{public}@] activity detected during sleep window %{public}@, notifying
[%{public}@] good morning alerts disabled
[%{public}@] starting session
[%{public}@] stopping session
[%{public}@] there are unprocessed sessions to save
[%{public}@] can write session data
[%{public}@] can't write sessions until first unlock
[%{public}@] no unprocessed sessions to save
[%{public}@] waiting for first unlock
[%{public}@] %ld unprocessed sessions
[%{public}@] %ld processed sessions
[%{public}@] caught exception %{public}@ when trying to read sessions
[%{public}@] unarchiving failed with error %{public}@
[%{public}@] no data found in file %{public}@
[%{public}@] archiveSession: %{public}@
[%{public}@] creating session directory at %{public}@
[%{public}@] failed to create directory at %{public}@ with error %{public}@
[%{public}@] wrote sessions to file %{public}@
[%{public}@] failed to write sessions file with error %{public}@
[%{public}@] saveSession %{public}@
[%{public}@] session has nothing to write
[%{public}@] session needs additional processing
[%{public}@] session is ready to write
[%{public}@] saving processed session %{public}@
[%{public}@] archiving session for now
[%{public}@] failed to remove session data file error %{public}@
[%{public}@] deviceHasBeenUnlocked
[%{public}@] saving session %{public}@ from %{public}@
[%{public}@] determining state
[%{public}@] not onboarded, determined state: %{public}@
[%{public}@] schedule disabled, determined state: %{public}@
[%{public}@] in user requested sleep mode, determined state: %{public}@
[%{public}@] wake up date: %{public}@ (secondsAfterWakeUp: %f)
[%{public}@] schedule state is disabled
[%{public}@] schedule state is wind down
[%{public}@] timed out waiting for activity, ending tracking.
[%{public}@] activity detected after wake up (%{public}@), ending tracking
[%{public}@] app launched after wake up (%{public}@), ending tracking
[%{public}@] sleepScheduleStateDidChange
[%{public}@] deviceChangedChargingState (isCharging: %d)
[%{public}@] ignoring monitor end date (%{public}@) before start date (%{public}@)
[%{public}@] monitor window is: %{public}@
[%{public}@] already passed current window %{public}@
[%{public}@] startBatteryMonitoring
[%{public}@] checkBatteryLevel
[%{public}@] stopBatteryMonitoring
[%{public}@] it's bedtime
[%{public}@] posting battery reminder notification
[%{public}@] Building daily analytics report from %{public}lu summaries in range %{public}@
[%{public}@] Summary: %{public}@
[%{public}@] Schedule's last modified date occurred after the current date
[%{public}@] Onboard date occurred after the current date
[%{public}@] Unable access biological sex due to error: %{public}@
[%{public}@] Unable access age due to error: %{public}@
[%{public}@] skipping good morning alert, watch is charging
[%{public}@] wake time reached and alarm enabled
[%{public}@] wake time reached and alarm disabled
[%{public}@] wake up was confirmed
[%{public}@] Received wake up event
[%{public}@] Transitioning to delaying for tracking state
[%{public}@] received waiing expired event due
[%{public}@] shutdown
[%{public}@] prepare
[%{public}@] systemDidBecomeReady
[%{public}@] environment needs migration
[%{public}@] dataMigrationDidComplete (error: %{public}@))
[%{public}@] environment is ready
[%{public}@] startListening
[%{public}@] client was nil!
[%{public}@] Environment will become invalid
[%{public}@] connect received from %{public}@
[%{public}@] server disabled
[%{public}@] check in received from %{public}@ with sync anchor container: %{public}@
[%{public}@] request received for sleep schedule from: %{public}@
[%{public}@] performing request for sleep schedule from: %{public}@
[%{public}@] completing request for sleep schedule: %{public}@ from: %{public}@
[%{public}@] request received to save current sleep schedule: %{public}@ from: %{public}@
[%{public}@] performing request to save current sleep schedule: %{public}@ from: %{public}@
[%{public}@] request received to save current sleep schedule failed: %{public}@
[%{public}@] completing request to save current sleep schedule: %{public}@ from: %{public}@
[%{public}@] request received for sleep settings from: %{public}@
[%{public}@] performing request for sleep settings from: %{public}@
[%{public}@] completing request for sleep settings: %{public}@ from: %{public}@
[%{public}@] request received to save current sleep settings: %{public}@ from: %{public}@
[%{public}@] performing request to save current sleep settings: %{public}@ from: %{public}@
[%{public}@] request received to save current sleep settings failed: %{public}@
[%{public}@] completing request to save current sleep settings: %{public}@ from: %{public}@
[%{public}@] request received for sleep event record from: %{public}@
[%{public}@] performing request for sleep event record from: %{public}@
[%{public}@] completing request for sleep event record: %{public}@ from: %{public}@
[%{public}@] request received to save current sleep event record: %{public}@ from: %{public}@
[%{public}@] performing request to save current sleep event record: %{public}@ from: %{public}@
[%{public}@] request received to save current sleep event record failed: %{public}@
[%{public}@] completing request to save current sleep event record: %{public}@ from: %{public}@
[%{public}@] request received for sleep mode on from: %{public}@
[%{public}@] performing request for sleep mode on from: %{public}@
[%{public}@] completing request for sleep mode: %{public}@ from: %{public}@
[%{public}@] request received to set sleep mode: %{public}@ (%{public}@) from: %{public}@
[%{public}@] performing request set sleep mode: %{public}@ (%{public}@) from: %{public}@
[%{public}@] completing request to set sleep mode: %{public}@ (%{public}@) from: %{public}@
[%{public}@] request received for sleep schedule state
[%{public}@] performing request for sleep schedule state
[%{public}@] completing request for sleep schedule state: %{public}@
[%{public}@] request received for sleep widget state
[%{public}@] performing request for sleep widget state
[%{public}@] completing request for sleep widget state: %{public}@
[%{public}@] Request received to publish notification: %@
[%{public}@] Performing request to publish notification: %@
[%{public}@] Completing request to publish notification: %@
[%{public}@] Request received to publish wake up results notification
[%{public}@] Performing request to publish wake up results notification
[%{public}@] Request received to override lock screen state: %@ (userInfo: %@)
[%{public}@] Performing request override lock screen state: %@
[%{public}@] lock screen not supported on this device
[%{public}@] Completing request override lock screen state: %@
[%{public}@] Request received to override sleep widget state: %@
[%{public}@] Performing request to override sleep widget state: %@
[%{public}@] widgets not supported on this device
[%{public}@] Completing request to override sleep widget state: %@
[%{public}@] Request received to clear sleep widget override
[%{public}@] Performing request clear sleep widget override
[%{public}@] Completing request to clear sleep widget override
[%{public}@] Request received to create sleep focus mode
[%{public}@] Performing request to create sleep focus mode
[%{public}@] Completing request to create sleep focus mode
[%{public}@] Request received to delete sleep focus mode
[%{public}@] Performing request to delete sleep focus mode
[%{public}@] Completing request to delete sleep focus mode
[%{public}@] Request received to confirm awake from: %{public}@
[%{public}@] Performing request to confirm awake
[%{public}@] Completing request to confirm awake
[%{public}@] Request received to dismiss good morning from: %{public}@
[%{public}@] Performing request to dismiss good morning
[%{public}@] Completing request to dismiss good morning
[%{public}@] Request received to dismiss sleep lock from: %{public}@
[%{public}@] Performing request to dismiss sleep lock
[%{public}@] Completing request to dismiss sleep lock
[%{public}@] Request received for sleep alarm dismissal on %{public}@ (%{public}@) from: %{public}@
[%{public}@] Performing request for sleep alarm dismissal on %{public}@
[%{public}@] Completing request for sleep alarm dismissal on %{public}@
[%{public}@] Request received for sleep alarm snooze until %{public}@ (%{public}@) from: %{public}@
[%{public}@] Performing request for sleep alarm snooze until %{public}@
[%{public}@] Completing request for sleep alarm snooze until %{public}@
[%{public}@] Request received for sleep alarm modified (%{public}@) from: %{public}@
[%{public}@] Performing request for sleep alarm modified
[%{public}@] Completing request for sleep alarm modified
[%{public}@] source: %{public}@ didUpdateSleepSchedule: %{public}@
[%{public}@] source: %{public}@ didUpdateSleepSettings: %{public}@
[%{public}@] source: %{public}@ didUpdateSleepEventRecord: %{public}@
[%{public}@] sleepEventIsDue: %{public}@
[%{public}@] sleepScheduleStateDidChange: %{public}@ (%{public}@)
[%{public}@] sleepModeDidChange: %ld previousMode: %ld reason: %{public}@
[%{public}@] skipping notification to suspended client: %{public}@
[%{public}@] asking newly running client to check in: %{public}@
[%{public}@] check in received from %{public}@ with container: %{public}@
[%{public}@] client did become suspended: %{public}@
[%{public}@] initializing with %{public}@
[%{public}@] Carousel is started.
[%{public}@] Waiting for Carousel to start.
[%{public}@] we're in demo environment
[%{public}@] Checking if we are in root robot.
[%{public}@] Running in root robot %d
[%{public}@] Carousel has started
[%{public}@] restore finished
[%{public}@] sleep mode turned on via automation
[%{public}@] going back into %{public}@
[%{public}@] sleep mode turned on via unknown reason, treating like automation
[%{public}@] received bedtime expired event due
[%{public}@] lock screen assertion already taken
[%{public}@] taking lock screen assertion
[%{public}@] invalidated lock screen assertion
[%{public}@] error acquiring lock screen assertion: %{public}@
[%{public}@] sending state: %@
[%{public}@] lock screen assertion already invalidated
[%{public}@] invalidating lock screen assertion
[%{public}@] lock screen service did connect
[%{public}@] lock screen service did dismiss due to error
[%{public}@] lock screen service did dismiss due to assertion invalidation
[%{public}@] lock screen service did dismiss due to notification
[%{public}@] lock screen service did dismiss due to home gesture
[%{public}@] lock screen service did dismiss due to dismiss button
[%{public}@] lock screen service did dismiss due to camera launch
[%{public}@] lock screen service did dismiss due to lock screen dismissal
[%{public}@] lock screen service did dismiss due to tap
[%{public}@] interruption handler
[%{public}@] invalidation handler
[%{public}@] time to start battery monitoring
[%{public}@] found initial hasBeenUnlockedSinceBoot value of [%d]
[%{public}@] handleFirstUnlock
[%{public}@] received greeting expired event due
[%{public}@] publishWakeDetectionNotification
[%{public}@] sleep mode is on
[%{public}@] alarm is enabled
[%{public}@] confirming the awake notification
[%{public}@] dismissing the awake notification
[%{public}@] publishing notification with properties %{public}@
[%{public}@] posting CFUserNotification for %{public}@
[%{public}@] failed to post CFUserNotification (%d)
[%{public}@] failed to create CFUserNotification (%d)
[%{public}@] calling handler for %{public}@
[%{public}@] cancelling CFUserNotification for %{public}@
[%{public}@] sleep schedule disabled, ending tracking.
[%{public}@] user confirmed wake up, ending tracking.
[%{public}@] alarm disabled and wake time reached, continuing tracking until activity is detected.
[%{public}@] wake up occurred because of expired alarm, ending tracking
[%{public}@] started in wake up state, continuing tracking until activity is detected.
[%{public}@] wake up occurred for another reason, ending tracking.
[%{public}@] sleep mode exited during automatic tracking (%{public}@), ignoring.
[%{public}@] starting activity tracking
[%{public}@] skipping CloudKit migration because feature is disabled
[%{public}@] performing CloudKit migration
[%{public}@] initial sync failed, continuing anyway
[%{public}@] skipping MobileTimer migration because this device doesn't support legacy alarms
[%{public}@] migrating from MobileTimer
[%{public}@] migrating from sleep alarm %{public}@
[%{public}@] migrating settings based on onboarding
[%{public}@] sleep coaching completed, enabling dnd during wind down
[%{public}@] sleep tracking completed, enabling watch face
[%{public}@] migrating sleep focus
[%{public}@] creating sleep focus because we've already onboarded or enabled scheduledSleepMode
[%{public}@] failed to migrate sleep focus
[%{public}@] skipping focus creation
[%{public}@] migrating home screen
[%{public}@] creating home screen page because we've already onboarded shortcuts
[%{public}@] failed to migrate home screen: %{public}@
[%{public}@] skipping home screen page creation because we haven't onboarded shortcuts
[%{public}@] wristDetectionSettingManagerDidObserveWristDetectChange
[%{public}@] HID requested sleep session end, ending tracking.
[%{public}@] failed to create application record: %{public}@.
[%{public}@] System is ready
[%{public}@] Springboard started
sleepd disabled
sleepd entering demo mode
sleepd setting up sigterm handler
sleepd received sigterm
[%{public}@] treating disabled alarm as confirmed wake up
[%{public}@] still waiting for snoozed alarm %{public}@
[%{public}@] waiting until %{public}@
[%{public}@] it's time for wind down
[%{public}@] it's time for bed
[%{public}@] dismissing good morning alert
[%{public}@] wakeup has changed to be later, treating state as expired
[%{public}@] not posting wake detection notification
[%{public}@] wake detection disabled after notifying
[%{public}@] detectedOnWristOnDate: %{public}@
[%{public}@] cloud sync is disabled
[%{public}@] loading default value %{public}@ for key: %{public}@
[%{public}@] loading default value %{public}@ for per-gizmo key: %{public}@
[%{public}@] not syncing to CloudKit because sync disabled
[%{public}@] not syncing to CloudKit because initial sync needed
[%{public}@] sync now enabled, syncing from CloudKit
[%{public}@] syncing key to CloudKit: %@
[%{public}@] doing a full CloudKit sync
[%{public}@] full CloudKit sync completed
[%{public}@] full CloudKit sync failed: %{public}@
[%{public}@] hdsp_setExternalChangeDelegate %{public}@
[%{public}@] synchronizing keys: %{public}@
[%{public}@] updating stored data version from %lu to %lu
[%{public}@] not updating newer stored data version from %lu to %lu
[%{public}@] updating stored local data version from %lu to %lu
[%{public}@] not updating newer stored local data version from %lu to %lu
[%{public}@] updating stored cloud data version from %lu to %lu
[%{public}@] not updating newer stored cloud data version from %lu to %lu
[%{public}@] _nanoDefaultsDidReceiveExternalChange
[%{public}@] _nanoDefaultsDidReceiveExternalChangeForKeys: %{public}@
[%{public}@] _cloudDefaultsDidReceiveExternalChange
[%{public}@] _cloudDefaultsDidReceiveExternalChangeForKeys: %{public}@
[%{public}@] serverCloudKitDataVersion %lu
[%{public}@] localCloudKitDataVersion %lu
[%{public}@] syncing to CloudKit: %{public}@
[%{public}@] updates: %{public}@
[%{public}@] removes: %{public}@
[%{public}@] syncing from CloudKit: %{public}@
[%{public}@] performing differential sync
[%{public}@] looking at keySet: %{public}@
[%{public}@] local last modified: %{public}@
[%{public}@] server last modified: %{public}@
[%{public}@] local modified later, syncing to CloudKit
[%{public}@] server modified later, syncing from CloudKit
[%{public}@] resetting
[%{public}@] has wakeDetectors: %{public}@
[%{public}@] wake up event was detected by %{public}@ at %{public}@
[%{public}@] startWakeDetection: %{public}@
[%{public}@] stopWakeDetection
[%{public}@] posting wake detection notification
[%{public}@] auto-confirming awake user turned off sleep focus and alarm is off
[%{public}@] wake detection notification posted on other device
sleepInterval is nil
Sleep interval: %f greater than allowed: %f. Will not be used
[%{public}@] presentAlertForGoodMorning
[%{public}@] dismissAlertForGoodMorning
[%{public}@] good morning alert dismissed %{public}@
[%{public}@] keeping off until next %{public}@ at %{public}@
[%{public}@] going to regular off state
[%{public}@] %{public}@ entered from %{public}@ (%{public}@)
[%{public}@] updating for initial change because schedule was previously disabled
[%{public}@] ignoring initial state change
[%{public}@] updating
[%{public}@] ignoring
[%{public}@] updating state
[%{public}@] Update state
[%{public}@] Environment did become ready.
[%{public}@] Sleep model changed
[%{public}@] sleepScheduleStateChanged from %{public}@ to %{public}@ for %{public}@
[%{public}@] Resolved attempt window beforeDate: %@ (passed: %@)
[%{public}@] Overriding default notification delay to %{public}@s
[%{public}@] Requesting to schedule tracking delay
[%{public}@] Requesting to cancel tracking delay
[%{public}@] Scheduling retry attempt
[%{public}@] Attempting retry
[%{public}@] Unscheduling retry attempt
[%{public}@] Start observing protected data availability
[%{public}@] Stop observing protected data availability
[%{public}@] Starting new query
[%{public}@] Unexpected call to start query while already in progress
[%{public}@] Preparing daily results notification
[%{public}@] Query succeeded with result: %{public}@
[%{public}@] Unable to fetch user name with error %{public}@
[%{public}@] no previous model to restore
[%{public}@] restoring previous model
[%{public}@] sleep schedule added
[%{public}@] sleep schedule changes were significant
[%{public}@] sleep schedule removed
[%{public}@] sleep settings added
[%{public}@] sleep settings changes were significant
[%{public}@] sleep record added
[%{public}@] sleep record changes were significant
[%{public}@] syncing notifiedForEarlyWakeUpMessage %{public}@
[%{public}@] syncing testIDSMessage %{public}@
[%{public}@] syncing setSleepModeMessage %{public}@
[%{public}@] checking if paired device supports focus mode
[%{public}@] not syncing because paired device supports focus mode
[%{public}@] not syncing message for source %{public}@
[%{public}@] syncing confirmWakeUpMessage %{public}@
[%{public}@] not syncing alarm message from NanoSync
[%{public}@] not syncing alarm message from Cloud
[%{public}@] syncing wakeUpAlarmWasDismissed %{public}@
[%{public}@] syncing wakeUpAlarmWasSnoozed %{public}@
[%{public}@] syncing dismissGoodMorningMessage %{public}@
[%{public}@] not sending cloud message because share across devices is disabled
[%{public}@] sending message %{public}@ on service %{public}@
[%{public}@] sent message %{public}@ on service %{public}@
[%{public}@] failed to send message %{public}@ with error %{public}@ on service %{public}@
[%{public}@] received message %{public}@ from service %{public}@
[%{public}@] ignoring message because watch sleep features are disabled
[%{public}@] ignoring cloud message because share across devices is disabled
[%{public}@] unexpected message received %{public}@
[%{public}@] _handleSetSleepModeMessage: %{public}@
[%{public}@] _handleConfirmWakeUpMessage: %{public}@
[%{public}@] _handleDismissGoodMorningMessage: %{public}@
[%{public}@] _handleNotifiedForEarlyWakeUpMessage: %{public}@
[%{public}@] _handleSleepAlarmDismissedMessage: %{public}@
[%{public}@] _handleSleepAlarmSnoozedMessage: %{public}@
[%{public}@] _handleTestMessage: %{public}@
[%{public}@] wakeupEventDetected: %{public}@ - %{public}@
[%{public}@] ignoring wake up event because it's outside of detection window
[%{public}@] wake detection event found
[%{public}@] earlyWakeUpWasNotifiedRemotely
_HDSPPowerAssertion
[%{public}@] Error setting relevant shortcuts in store %{public}@
[%{public}@] rescheduling events...
[%{public}@] unscheduling events...
[%{public}@] sleep schedule disabled, not scheduling
[%{public}@] sleep features disabled for this watch, not scheduling
[%{public}@] failed to deserialize sleep event %{public}@ with error %{public}@
[%{public}@] updating last standard sleep event: %{public}@
[%{public}@] failed to serialize sleep event %{public}@ with error %{public}@
[%{public}@] gathering pending events
[%{public}@] looking for events due after: %{public}@ from: %{public}@
[%{public}@] %{public}@ has upcoming events: %{public}@
[%{public}@] %{public}@ has no upcoming events
[%{public}@] all upcoming events: %{public}@
[%{public}@] next event is %{public}@
[%{public}@] event is already due
[%{public}@] no upcoming events
[%{public}@] scheduledEventIsDue
[%{public}@] overdue events: %{public}@
[%{public}@] notifying %{public}@ for %{public}@
[%{public}@] eventProviderHasUpcomingEvents: %{public}@
[%{public}@] eventProviderCancelledEvents: %{public}@
[%{public}@] event provider %{public}@ didn't synthesize a delegate
[%{public}@] setting lastEventTriggerDate to current date because it's in the future
[%{public}@] saving sessions
[%{public}@] checking auth status
[%{public}@] doesn't have write access for HKCategoryTypeIdentifierSleepAnalysis
[%{public}@] processing session: %@
[%{public}@] skipping session due to missing bedtime or wake time: %@
[%{public}@] creating HealthKit samples
[%{public}@] saving samples to HealthKit failed with error: %{public}@
[%{public}@] finished saving %lu samples
[%{public}@] reset sleep alarm snooze state
[%{public}@] updating sleep alarms for model change
[%{public}@] failed to create NSUbiquitousKeyValueStore
[%{public}@] keyValueStoreDidChange: %{public}@
[%{public}@] performing full sync
[%{public}@] successfully completed full sync
[%{public}@] full sync failed with error: %{public}@
[%{public}@] received %{public}@, synchronizing...
[%{public}@] syncing keys: %{public}@
[%{public}@] failed to fetch handle with error: %{public}@
[%{public}@] monitoring process: %{public}@
[%{public}@] no longer monitoring process: %{public}@
[%{public}@] process %{public}@ no longer suspended
[%{public}@] process %{public}@ is suspended
[%{public}@] handleSignificantTimeChange
[%{public}@] timeZone: %{public}@
[%{public}@] handleTimeZoneChange
[%{public}@] bedtime has changed to be later, treating state as expired
[%{public}@] charging reminders disabled after notifying
[%{public}@] system is ready
[%{public}@] system not ready
[%{public}@] Taking assertion with identifier %{public}@
[%{public}@] Releasing assertion with identifier %{public}@
_HDSPOSTransaction
[%{public}@] transaction timed out
[%{public}@] _updateSleepScheduleState
[%{public}@] notifying observers for sleepScheduleStateDidChange from %{public}@ to %{public}@ with reason %{public}@
[%{public}@] failed to save event record with error %{public}@
[%{public}@] setting wakeUpAlarmDismissedDate to %{public}@
[%{public}@] snoozeFireDateShouldBeReset
[%{public}@] wakeTimeReached
[%{public}@] bedtimeReached
[%{public}@] windDownReached
[%{public}@] wakeNotificationWasConfirmed
[%{public}@] wakeUpAlarmWasDismissed
[%{public}@] user turned on sleep mode, staying here
[%{public}@] in user requested sleep mode, staying here
[%{public}@] Init failed: Invalid morning index range %{public}@
[%{public}@] Init failed: Nil sleep day summaries
[%{public}@] Init failed: Zero sleep day summaries
[%{public}@] Init failed: No sleep day summary for last night
[%{public}@] Init failed: No asleep duration for last night
[%{public}@] Building notification from %lu summaries in range %{public}@
[%{public}@] Did not meet sleep duration goal last night; this is required for all notifications
[%{public}@] Not enough days achieved for two-week goal notification
[%{public}@] Too many days achieved for two-week goal notification
[%{public}@] Not enough days achieved for short-week goal notification
[%{public}@] Too many days achieved for short-week goal notification
[%{public}@] Not enough days achieved for last night goal notification
[%{public}@] Too many days achieved for last night goal notification
[%{public}@] dropping Biome callback
[%{public}@] subscribing publisher %{public}@
[%{public}@] unsubscribing %{public}@
[%{public}@] we're in user requested sleep mode before wind down/bedtime, telling Biome
[%{public}@] not writing to biome because sleep features are disabled for this watch
[%{public}@] writing event: [%{public}@]
[%{public}@] finished publishing with error %{public}@
[%{public}@] received callback with event %{public}@
[%{public}@] goodMorningWasDismissed
[%{public}@] telling observers to present good morning alert
[%{public}@] telling observers to dismiss good morning alert
[%{public}@] publishNotificationForEvent: %{public}@
[%{public}@] tearDownNotifications
[%{public}@] posting good morning notification
[%{public}@] didUpdateSleepSchedule: %{public}@
[%{public}@] tearing down notifications at bedtime
[%{public}@] tearing down notifications at wake up
[%{public}@] tearing down charging reminder
[%{public}@] tearing down bedtime reminder
[%{public}@] tearing down wind down reminder
[%{public}@] tearing down wake detection notification
[%{public}@] tearing down good morning notification
[%{public}@] Telling scheduler we have events to schedule
[%{public}@] Bedtime and wind down notifications disabled
[%{public}@] Bedtime and wind down notifications disabled since sleep features are disabled on Watch.
[%{public}@] Ignoring event %{public}@ due to being in current state %{public}@
[%{public}@] reloading timeline
[%{public}@] Error reloading sleep widget timeline %{public}@
[%{public}@] wind down mode turned off by user (%{public}@)
[%{public}@] wind down mode turned off for an unknown reason, treating as user requested
[%{public}@] wind down mode turned off by automation (%{public}@)
[%{public}@] ignoring unknown sleep mode turn on because we're already in wind down
[%{public}@] successfully set mode configuration
[%{public}@] failed to set mode configuration with error: %{public}@
[%{public}@] failed to create default mode configuration with error: %{public}@
[%{public}@] failed to get mode configuration with error: %{public}@
[%{public}@] sleep mode configuration already exists
[%{public}@] wake up notification confirmed (%{public}@)
[%{public}@] Ignoring request to confirm wake up due to state %{public}@
[%{public}@] wake up notification confirmed at %{public}@, until %{public}@, (%{public}@)
[%{public}@] Dismissing good morning (%{public}@)
[%{public}@] Good morning was dismissed %{public}@
[%{public}@] Dismissed sleep lock (%{public}@)
[%{public}@] sleep alarm did dismiss: %{public}@ (%{public}@)
[%{public}@] sleepAlarm has nil dismiss date
[%{public}@] sleepAlarm has old dismiss date: %{public}@
[%{public}@] sleep alarm dismissed at %{public}@
[%{public}@] sleep alarm did snooze: %{public}@ (%{public}@)
[%{public}@] sleep alarm snoozed until %{public}@
[%{public}@] fetch alarms failed with error: %{public}@
[%{public}@] no sleep alarms found
[%{public}@] sleep alarms modified (%{public}@)
[%{public}@] latest sleep alarm modified date: %{public}@
[%{public}@] latest sleep alarm snooze date: %{public}@
[%{public}@] snooze date was reset
[%{public}@] charging: %d
[%{public}@] battery level: %f
Failed to defer XPC activity (%{public}@)
XPC activity was deferred (%{public}@)
[%{public}@] expired
[%{public}@] creating suggested home screen page
[%{public}@] failed to get suggested pages: %{public}@
[%{public}@] no suggested pages found
[%{public}@] failed to get sleep focus mode: %{public}@
[%{public}@] no sleep focus mode found
[%{public}@] found %ld pages, creating home screen request
[%{public}@] submitted home screen request
[%{public}@] sleep tracking event due, starting tracking
[%{public}@] bedtime occurred, starting tracking
[%{public}@] user engaged sleep mode, starting tracking
[%{public}@] sending message %{public}@
[%{public}@] failed to serialize message %{public}@ with error %{public}@
[%{public}@] destinations: %{public}@
[%{public}@] enqueuing message %{public}@ with options %{public}@
[%{public}@] successfully enqueued message %{public}@
[%{public}@] failed to enqueue message %{public}@ with error %{public}@
[%{public}@] received incoming message %{public}@
[%{public}@] failed to deserialize incoming message with error %{public}@
[%{public}@] successfully sent message %{public}@
[%{public}@] failed to send message %{public}@ with error %{public}@
[%{public}@] failed to load model: %{public}@
[%{public}@] loading model...
[%{public}@] failed to load schedule: %{public}@
[%{public}@] failed to load settings: %{public}@
[%{public}@] failed to load record: %{public}@
[%{public}@] sleepScheduleModel: %{public}@ - %{public}@
[%{public}@] removeSleepScheduleModel %{public}@
[%{public}@] notifying observers for sleepScheduleModel changes from %{public}@
[%{public}@] loading schedule...
[%{public}@] persisted schedule invalid: %{public}@
[%{public}@] persisting valid schedule: %{public}@
[%{public}@] no valid schedule could be made
[%{public}@] failed to load schedule with error %{public}@
[%{public}@] loaded %{public}@
[%{public}@] saveSleepSchedule: %{public}@ - %{public}@
[%{public}@] no changes to save
[%{public}@] sleep schedule was created
[%{public}@] sleep schedule was updated
[%{public}@] applying changes: %{public}@
[%{public}@] resetting snooze fire date
[%{public}@] override that happened today (%{public}@) moving to the future (%{public}@)
[%{public}@] override that happened today (%{public}@) deleted
[%{public}@] set wakeUpOverriddenDate to %{public}@
[%{public}@] set wakeUpConfirmedUntilDate to %{public}@
[%{public}@] sleep schedule validation failed due to invalid occurrence
[%{public}@] sleep schedule validation failed: %{public}@
[%{public}@] sleep schedule was deleted
[%{public}@] notifying observers for sleepSchedule change from %{public}@
[%{public}@] loading settings...
[%{public}@] failed to load settings with error %{public}@
[%{public}@] saveSleepSettings: %{public}@ - %{public}@
[%{public}@] sleep settings were created
[%{public}@] sleep settings were updated
[%{public}@] sleep settings were reset
[%{public}@] notifying observers for sleepSettings change from %{public}@
[%{public}@] loading event record...
[%{public}@] failed to load event record with error %{public}@
[%{public}@] saveSleepEventRecord: %{public}@ - %{public}@
[%{public}@] sleep event record was updated
[%{public}@] sleep tracking completed, enabling watch screen
[%{public}@] sleep event record was created
[%{public}@] sleep event record was reset
[%{public}@] save failed with error: %{public}@
[%{public}@] notifying observers for sleepEventRecord change from %{public}@
[%{public}@] setting lastModifiedDate on schedule to current date because it's in the future
[%{public}@] setting lastModifiedDate on settings to current date because it's in the future
[%{public}@] resetting wakeUpEarlyNotificationConfirmedDate because it's in the future
[%{public}@] resetting wakeUpOverriddenDate because it's in the future
[%{public}@] setting lastModifiedDate on event record to current date because it's in the future
[%{public}@] setting wakeUpAlarmDismissedDate on event record to current date because it's in the future
[%{public}@] setting goodMorningDismissedDate on event record to current date because it's in the future
[%{public}@] observedApplicationDidUninstall
[%{public}@] turning off watch sleep features since sleep app was removed
[%{public}@] failed to turn off watch sleep features with error %{public}@
[%{public}@] turning off sleep schedule since Health app was removed
[%{public}@] failed to turn off sleep schedule with error %{public}@
[%{public}@] sleepStorageDidChangeExternally
[%{public}@] failed to load sleep schedule after sync with error %{public}@
[%{public}@] %{public}@ started = %d
[%{public}@] Start monitoring %{public}@ start
[%{public}@] Alreay monitoring %{public}@
[%{public}@] Stop monitoring %{public}@ start
[%{public}@] Sending notification
[%{public}@] Received posting notification completion event
[%{public}@] bedtime mode turned off by user (%{public}@)
[%{public}@] bedtime mode turned off for an unknown reason, treating as user requested
[%{public}@] bedtime mode turned off by automation (%{public}@)
[%{public}@] ignoring unknown sleep mode turn on because we're already in bedtime
[%{public}@] sleep mode exited outside of bedtime (%{public}@), ending tracking.
[%{public}@] unable to create notification identifier for event %{public}@
[%{public}@] unable to create notification content for event %{public}@
[%{public}@] failed to publish %{public}@ with error %{public}@
[%{public}@] published %{public}@
[%{public}@] tearDownNotificationForEventIdentifier %{public}@
[%{public}@] Tearing down %{public}@
[%{public}@] Tearing down all notifications
[%{public}@] Unable to find next event with identifier %{public}@ for message %{public}@
[%{public}@] Cannot create content for wake up results without valid data: %@
[%{public}@] Creating content for %{public}@
[%{public}@] sleep features disabled for this watch
[%{public}@] sleep schedule is nil
[%{public}@] sleep schedule is disabled
[%{public}@] currently in a wind down session
[%{public}@] currently in a bedtime session
[%{public}@] not in a session, must be awake
[%{public}@] significant time change occurred
[%{public}@] timezone change occurred
[%{public}@] treating significant record update as confirmed
[%{public}@] significant schedule change occurred (reason: %{public}@)
[%{public}@] schedule change not significant
[%{public}@] notifying for external change for keys: %{public}@
[%{public}@] failed to create NPSDomainAccessor
[%{public}@] re-creating NPSDomainAccessor
[%{public}@] _handleActivePairedDeviceDidChange: %{public}@
[%{public}@] synchronize failed with error %{public}@
[%{public}@] npsManager is nil when syncing
[%{public}@] syncing per-gizmo keys: %{public}@
[%{public}@] ignoring remote sleep mode exit
[%{public}@] sleep mode manually exited, treating as wake up event
[%{public}@] Transitioning to querying state
[%{public}@] in monitoring window
[%{public}@] wind down time is greater than monitor window
[%{public}@] currently charging
[%{public}@] received notification %{public}@, taking assertion
[%{public}@] batteryLevelChanged: %f
[%{public}@] we should charge
[%{public}@] we don't need to charge yet
[%{public}@] lazily checking alarm server
[%{public}@] alarm server not ready yet
[%{public}@] alarm server is ready
[%{public}@] received notification that alarm server is ready
[%{public}@] failed to update sleep alarms with error %{public}@
[%{public}@] failed to reset snooze state with error %{public}@
[%{public}@] Posting HKSPNotificationPresentGoodMorningAlert
[%{public}@] not posting %{public}@ because sensitive UI is disabled
[%{public}@] Posting HKSPNotificationDismissGoodMorningAlert
[%{public}@] it's wind down, but staying in manual bedtime mode
[%{public}@] it's bedtime, but staying in manual bedtime mode
[%{public}@] staying in manual bedtime mode
[%{public}@] sleep schedule changed to disabled from %{public}@
[%{public}@] sleep schedule state is disabled but staying in manual bedtime mode
[%{public}@] manual bedtime mode turned off by automation (%{public}@)
[%{public}@] in wake detection window
[%{public}@] in sleep tracking window
[%{public}@] in user requested sleep mode
[%{public}@] watch is charging
[%{public}@] watch sleep features disabled
[%{public}@] sleep tracking disabled
[%{public}@] wrist detect disabled
[%{public}@] sleep schedule disabled, only manual tracking supported
[%{public}@] received biome event: %{public}@
[%{public}@] setSleepMode: %{public}@ (%{public}@)
[%{public}@] ignoring biome event because sleep features are disabled for this watch
[%{public}@] handling biome event for user action
[%{public}@] handling biome event for automation
[%{public}@] handling biome event for unknown
[%{public}@] ignoring biome event for scheduled
[%{public}@] sleep mode engaged from Hunter watch, making sure focus mode is created
[%{public}@] failed to create focus mode: %{public}@
[%{public}@] sleepScheduleStateChanged: %{public}@ reason: %{public}@
[%{public}@] sleepModeDidChange: %{public}@ previousMode: %{public}@ reason: %{public}@, notifying observers
[%{public}@] failed to fetch sleep focus mode: %{public}@)
[%{public}@] wake up alarm was snoozed
[%{public}@] wake up alarm already dismissed
[%{public}@] wake up alarm is firing
[%{public}@] next wake up date is beyond maximum interval (%{public}@)
[%{public}@] user visible end date is %{public}@
[%{public}@] sleep mode during wind down not enabled
[%{public}@] scheduled sleep mode not enabled
[%{public}@] no sleep schedule
[%{public}@] sleep schedule not enabled
[%{public}@] scheduledSleepMode disabled
[%{public}@] device is in demo mode
[%{public}@] user hasn't onboarded wind down yet
[%{public}@] sleepFocusModeDidChange
[%{public}@] user just enabled scheduledSleepMode
[%{public}@] user just onboarded sleep 
[%{public}@] creating sleep focus mode
[%{public}@] failed to create sleep focus mode: %{public}@
[%{public}@] successfully created sleep focus mode
[%{public}@] deleting sleep focus mode
[%{public}@] failed to delete sleep focus mode: %{public}@
[%{public}@] successfully deleted sleep focus mode
[%{public}@] creating home screen page
HDSPWakeUpResultsNotificationQueryingState
HDSPSleepScreenUnlockDetector
HDSPSleepActionObserver
NSObject
HDSPSleepModeObserver
HDSPWakeDetector
HDSPEnvironmentAware
HDSPSleepStorage
HDSPSyncedUserDefaultsExternalChangeDelegate
HDSPNotificationObserver
HDSPDiagnosticsProvider
HKSPDiagnosticsProvider
HDSPSource
HDSPSleepModeStateMachineState
HDSPSleepModeStateMachineEventHandler
HKSPStateMachineEventHandler
HDSPTimeInBedTracker
HDSPSleepScheduleStateObserver
HDSPSleepTracker
HDSPAnalyticsManager
HDSPTimeChangeObserver
HDSPGoodMorningAlertDisabledState
HDSPWakeDetectionStateMachineState
HDSPWakeDetectionStateMachineEventHandler
HKSPPersistentStateMachineEventHandler
HDSPSleepScheduleStateCoordinatorStateMachineContext
HDSPDemoModeEnvironment
HDSPSleepModeOffState
HDSPChargingReminderStateMachine
HDSPChargingReminderStateMachineDelegate
HKSPPersistentStateMachineDelegate
HKSPStateMachineDelegate
HDSPChargingReminderStateMachineInfoProvider
HKSPStateMachineInfoProvider
HDSPChargingReminderStateMachineEventHandler
HDSPSleep
HDSPTimeAsleepTracker
HDSPSleepEventHandler
HDSPSleepEventProvider
HDSPTimeAsleepTrackerStateMachineInfoProvider
HDSPTimeAsleepTrackerStateMachineDelegate
HDSPSleepScheduleModelObserver
HDSPDevicePowerObserver
HDSPWatchOnWristObserver
HDSPWakeUpResultsNotification
HDSPWakeDetectionDisabledState
HDSPTimeAsleepTrackerStateMachine
HDSPTimeAsleepTrackerStateMachineEventHandler
HDSPWakeUpResultsNotificationLocalizer
HDSPDiagnostics
HDSPWakeDetectionActivityDetectingState
HDSPSleepLockScreenManager
HDSPSleepLockScreenStateMachineInfoProvider
HDSPSleepLockScreenStateMachineDelegate
HDSPSleepLockScreenAssertionManagerDelegate
HKSPSensitiveUIObserver
HDSPGoodMorningAlertObserver
HDSPContextStoreManager
HDSPSleepTrackingManager
HDSPSleepSessionManagerDelegate
HDSPSleepLockScreenStateMachineState
HDSPSleepLockScreenStateMachineEventHandler
HDSPWakeUpResultsNotificationWaitingForRetryState
HDSPSleepWidgetManager
HDSPSleepWidgetStateMachineInfoProvider
HDSPSleepWidgetStateMachineDelegate
HDSPTimeAsleepTrackerActivityTrackingState
HDSPGoodMorningAlertStateMachineState
HDSPGoodMorningAlertStateMachineEventHandler
HDSPNotifiedForEarlyWakeUpIDSMessage
HDSPIDSMessage
HKSPDictionarySerializable
NSCoding
NSCopying
HDSPEnvironmentDemoState
HDSPSleepSessionManager
HDSPSleepTrackerDelegate
HDSPDeviceUnlockObserver
HDSPSleepWidgetStateMachineState
HDSPSleepWidgetStateMachineEventHandler
HDSPTimeAsleepTrackerActivityAfterWakeUpTrackingState
HDSPChargingReminderManager
HDSPAnalyticsDailyReportBuilder
Analytics
HDSPGoodMorningAlertWaitingState
HDSPSleepWidgetNotOnboardedState
HDSPSleepScheduleStateCoordinatorBedtimeState
HDSPWakeUpResultsNotificationWaitingForWakeUpState
HDSPSleepWidgetWaitingState
HDSPEnvironment
HDSPEnvironmentStateMachineDelegate
HDSPEnvironmentStateMachineInfoProvider
HDSPSystemReadyDelegate
HDSPSleepStoreServer
HKSPSleepServer
HKSPServer
HDSPProcessStateManagerDelegate
HKSPXPCConnectionListenerDelegate
HDSPWatchReadyProvider
HDSPSpringboardObserver
HDSPSystemReadyProvider
HDSPSleepLockScreenWindDownState
HDSPSleepModeAutomatedOffFromManualState
HDSPSleepWidgetBedtimeState
HKSPSleepLockScreenClient
HKSPSleepLockScreenServer
HDSPSleepLockScreenAssertionManager
NSXPCListenerDelegate
HDSPChargingReminderWaitingState
HDSPDeviceUnlockMonitor
HDSPSleepWidgetGreetingState
HDSPCFUserNotificationCenter
HDSPSleepNotificationPublisher
HDSPTimeAsleepTrackerAutoTrackingState
HDSPTimeAsleepTrackerDisabledState
_HDSPConcreteSource
HDSPSleepScheduleModelMigrationManager
HDSPWatchOnWristMonitor
HKWristDetectionSettingManagerObserver
HDSPSleepScheduleStateCoordinatorInitialState
HDSPTimeAsleepTrackerSleepTrackingState
HDSPGoodMorningAlertStateMachine
HDSPGoodMorningAlertStateMachineDelegate
HDSPGoodMorningAlertStateMachineInfoProvider
HDSPSleepAlarmSnoozedIDSMessage
HDSPApplicationWorkspaceMonitor
LSApplicationWorkspaceObserverProtocol
HDSPWakeUpResultsNotificationDisabledState
_HDSPCFUserNotificationCenterRegistration
HDSPCFUserNotificationCenterManager
HDSPPhoneReadyProvider
HDSPSleepDaemon
HDSPEnvironmentStateMachine
HDSPEnvironmentStateMachineEventHandler
HDSPSimulatorReadyProvider
HDSPSleepScheduleStateCoordinatorDelayedWakeUpState
HDSPSleepLockScreenBedtimeState
HDSPConfirmWakeUpIDSMessage
HDSPSleepWidgetDisabledState
HDSPSleepLockScreenGreetingState
HDSPWakeDetectionNotifiedState
HDSPWakeUpResultsNotificationStateMachine
HDSPWakeUpResultsNotificationStateMachineDelegate
HDSPWakeUpResultsNotificationStateMachineEventHandler
HDSPWatchOnWristWakeDetector
HDSPSyncedDefaults
HDSPSyncedUserDefaults
HKSPUserDefaults
HDSPWakeDetectionManager
HDSPWakeDetectorDelegate
HDSPWakeDetectionStateMachineDelegate
HDSPWakeDetectionStateMachineInfoProvider
HDSPGoodMorningAlertPresentingState
_HDSPSleepModeTurnedOffState
HDSPTimeAsleepTrackerInternalEndState
HDSPWakeUpResultsNotificationManager
HDSPWakeUpResultsNotificationStateMachineInfoProvider
HDSPSleepModeManualOffState
HDSPSyncedDefaultsConfiguration
HDSPSyncedDefaultsInfo
HDSPSyncedDefaultsKeySet
HDSPSleepScheduleModelChangeEvaluator
HDSPIDSServiceManager
HDSPIDSServiceDelegate
_HDSPWakeDetectionDetectingState
HDSPEventRecordMessage
BSDescriptionProviding
_HDSPPowerAssertion
HDSPAssertion
HDSPWidgetRelevantShortcutDonor
HDSPWidgetRelevanceDonor
HDSPSleepAlarmDismissedIDSMessage
HDSPSleepLockScreenBedtimeInProgressState
Daemon
HDSPSleepEventScheduler
HDSPEventScheduleDelegate
HDSPSleepEventDelegate
HDSPSleepSessionPersistence
HDSPSleepAlarmManager
HDSPMacReadyProvider
HDSPCloudDefaults
HDSPSleepScheduleStateCoordinatorDisabledState
HDSPProcessStateManager
HDSPTimeChangeListener
HDSPChargingReminderNotifiedState
HDSPXPCAlarmScheduler
HDSPEventScheduler
HDSPEnvironmentReadyState
HDSPSleepEventList
HDSPSystemMonitor
HDSPAssertionManager
_HDSPOSTransaction
HDSPTestIDSMessage
HDSPSleepScheduleStateCoordinator
HDSPSleepScheduleStateCoordinatorStateMachineDelegate
HDSPSleepScheduleStateCoordinatorStateMachineInfoProvider
HDSPGCDTimerScheduler
HDSPSleepWidgetBedtimeInProgressState
HDSPSetSleepModeIDSMessage
HDSPEnvironmentMigrationState
HDSPSleepLockScreenOffState
HDSPWakeUpResultsNotificationBuilder
HDSPDisabledEnvironment
HDSPBiomeManager
_HDSPBiomeBridge
HDSPBiomeInterface
HDSPGoodMorningAlertManager
HDSPWakeDetectionWaitingState
HDSPSleepScheduleStateCoordinatorWindDownState
HDSPSleepNotificationManager
HDSPWidgetTimelineReloader
HDSPWidgetReloader
HDSPSleepModeWindDownState
Editing
HDSPSleepFocusModeBridge
HKSPSleepFocusModeBridge
HDSPWakeUpResultsNotificationStateMachineState
HDSPWakeDetectionExplicitDetectingState
HDSPSleepActionManager
HDSPCFUserNotification
HDSPWakeDetectionStateMachine
HDSPSleepWidgetUpcomingState
HDSPEnvironmentState
HDSPSleepScheduleModelChangeEvaluation
HDSPSleepWidgetWindDownState
HDSPDevicePowerMonitor
HDSPSleepLockScreenStateMachine
HDSPXPCActivityScheduler
HDSPActivityScheduler
HDSPXPCActivity
HDSPActivity
HDSPSleepScheduleModelSaveResult
HDSPWakeUpResultsNotificationDelayingForTrackingState
HDSPAppPredictionClient
HDSPSleepProactiveBridge
HDSPDismissGoodMorningIDSMessage
HDSPSleepScheduleStateCoordinatorWakeUpState
HDSPSleepScheduleStateCoordinatorStateMachine
HDSPSleepScheduleStateCoordinatorStateMachineEventHandler
HDSPTimeAsleepTrackerWaitingState
HDSPIDSService
_HDSPIDSService
IDSServiceDelegate
HDSPEnvironmentContext
HDSPSleepSession
NSSecureCoding
HDSPSleepSessionInterval
HDSPSleepScheduleModelManager
HDSPSleepStorageObserver
HDSPApplicationWorkspaceObserver
HDSPSpringboardMonitor
HDSPWakeUpResultsNotificationNotifiedState
HDSPSleepModeBedtimeState
HDSPTimeAsleepTrackerManualTrackingState
HDSPUserNotificationCenter
HDSPSleepModeStateMachine
HDSPSleepModeStateMachineDelegate
HDSPSleepModeStateMachineInfoProvider
HDSPSleepScheduleStateCoordinatorStateMachineState
HDSPSleepWidgetStateMachine
HDSPNanoDefaults
HDSPSleepScheduleModelValidationResult
HDSPSleepModeAutomatedOffState
HDSPEnvironmentNotReadyState
HDSPChargingReminderDisabledState
HDSPSleepModeExitDetector
HDSPWakeUpResultsNotificationNeedsProtectedDataState
HDSPChargingReminderStateMachineState
HDSPNotificationListener
HDSPChargingReminderMonitoringState
HDSPMobileTimerBridge
HDSPDarwinNotificationCenter
HDSPSleepModeManualBedtimeState
HDSPTimeAsleepTrackerStateMachineState
HDSPSleepModeManager
HKSPSleepFocusModeBridgeDelegate
standardDeviationActualTimeAsleep
toneIdentifier
fileExistsAtPath:
sleepEventWithIdentifier:dueDate:
request
isDate:inSameDayAsDate:
appendUnsignedInteger:withName:
soundVolume
localizedStringFromNumber:numberStyle:
hksp_isBeforeOrSameAsDate:
setSleepTrackingOnboardingFirstCompletedDate:
replaceCharactersInRange:withString:
appendUnsignedInteger:counterpart:
sleepEventRecordChanged:clientIdentifier:
features
sound
localizedStringFromDate:dateStyle:timeStyle:
computeConfirmedWakeUpUntilDateForOverrideWakeUpDate:
hksp_isBeforeDate:
setDebugIdentifier:
timeline
setSleepTrackingOnboardingCompletedVersion:
repeatSchedule
appendString:withName:
computeConfirmedWakeUpUntilDateForEarlyWakeUpDate:
sortUsingComparator:
setDaysWornWatchToSleepInLast7Days:
hksp_isAfterOrSameAsDate:
localizedStringForKey:value:table:
timeZoneForSecondsFromGMT:
setSleepTracking:
appendObject:withName:skipIfNil:
sleepEventOccurred:
localizedStandardRangeOfString:
setDaysWornWatchToSleepInLast30Days:
hksp_isAfterDate:
componentsJoinedByString:
originalValueForPropertyIdentifier:
setSleepStagePercentRemLastNight:
appendObject:withName:
setDateFormat:
localizedDescription
components:fromDate:toDate:options:
setSleepStagePercentDeepLastNight:
appendObject:counterpart:
writeToFile:options:error:
executeQuery:
snoozeFireDateNeedsReset
component:fromDate:
timeIntervalSinceNow
setSleepStagePercentCoreLastNight:
appendInteger:withName:
sleepEvent
localeWithLocaleIdentifier:
snoozeFireDate
compareWithContainer:sleepScheduleSyncAnchorOutOfDate:sleepSettingsSyncAnchorOutOfDate:sleepEventRecordSyncAnchorOutOfDate:sleepScheduleStateSyncAnchorOutOfDate:sleepModeSyncAnchorOutOfDate:sleepEventSyncAnchorOutOfDate:
setChargingReminders:
defaultWorkspace
setSleepStagePercentAwakeLastNight:
sleepDurationGoalAchievedCount
timeIntervalSinceDate:
appendFormat:
removeObserver:wasLast:
isAnySleepWindDownShortcutsOnboardingCompleted
windDownTime
execute
hksp_dictionaryByFilteringKeys:
setChargeRemindersEnabled:
localWakingRegistrationWithIdentifier:contextualPredicate:clientIdentifier:callback:
sleepWindDownShortcutsOnboardingFirstCompletedDate
occurrences
setSleepModeOptions:
timeInBedTracking
removeObserver:name:object:
appendBool:withName:ifEqualTo:
sleepDurationGoal
isAnySleepTrackingOnboardingCompleted
setCategoryIdentifier:
hksp_demoMode
combineAllFutures:
defaultStore
sleepDuration
occurrenceOnDay:
appendBool:withName:
isAnySleepCoachingOnboardingCompleted
hksp_dateRequiresSingularTimeString:
localDevice
code
setCacheSettings:
occurrence
threadDictionary
windDownMinutes
appendBool:counterpart:
removeObjectForKey:
setByAddingObjectsFromSet:
hksp_dateNearestMatchingComponents:
windDownInterval
setSleepGoal:
defaultManager
eventBody
appendArraySection:withName:multilinePrefix:skipIfEmpty:
removeObject:
sleepCoachingOnboardingFirstCompletedDate
isAdd
setByAddingObjectsFromArray:
sleepTrackingOnboardingFirstCompletedDate
initWithDomain:
removeModeConfigurationForModeIdentifier:error:
windDownActionsAfterMorningIndex:
sleepCloudKitSync
hksp_containsDate:searchOptions:
setBool:forKey:
taskState
setSleepDurationLastNight:
isActive
sleepCloudKitManatee
anonymousListener
removeLastObject
setBody:
hksp_containsDate:
defaultCenter
initWithDictionary:
objectWithSyncAnchor:
setSleepDurationGoal:
removeItemAtPath:error:
setBiologicalSex:
sleepTracking
setSleepCoachingOnboardingFirstCompletedDate:
objectForKeyedSubscript:
clientShouldCheckInWithCompletion:
setBedtimeReminders:
hksp_analyticsUserDefaults
objectForKey:
weekdays
decodeObjectOfClasses:forKey:
setSleepCoachingOnboardingCompletedVersion:
allValues
intervalType
UTF8String
hksp_activePairedDeviceSupportsFocusMode
clientIdentifierProvider
listenerWithConnectionInfo:
setBedtimeComponents:
numberWithUnsignedLong:
sleepAlarms
decodeObjectOfClass:forKey:
setShouldRepeat:
removeDeliveredNotificationsWithIdentifiers:
weekOfYear
lifetimeInterval
hkspMainThreadScheduler
clientIdentifier
setBedTimeWindDownRemindersEnabled:
setShouldIgnoreDoNotDisturb:
decodeIntegerForKey:
weakObjectsHashTable
numberWithUnsignedInteger:
intersectsSet:
allObjects
removeAllWindDownActionsBeforeMorningIndex:
setAppendExistingPages:
hkspDescription
length
setShareAcrossDevices:
decodeBoolForKey:
numberWithInteger:
systemTimeZone
removeAllObjects
watchSleepFeaturesEnabled
lazyFutureWithBlock:
hk_weekendDays
setAlertTopic:
numberWithInt:
setScheduledSleepModeEnabled:
dayUnit
interfaceWithProtocol:
_endpoint
errorWithDomain:code:userInfo:
chargingRemindersEnabledWithLogObject:
hk_stripLeadingTrailingWhitespace
laterDate:
setAlarmWednesday:
sleepStageIntervals
numberWithFloat:
initWithContentsOfFile:
setScheduledSleepMode:
remoteObjectProxy
allKeys
wasUsed
integerValue
setAlarmTuesday:
sleepSettingsChanged:clientIdentifier:
hk_morningIndexWithCalendar:
chargingReminders
synchronizeWithCompletionHandler:
integerForKey:
numberWithDouble:
setScheduleWednesday:
setAlarmThursday:
changes
hk_gregorianCalendar
synchronizeUserDefaultsDomain:keys:
dateWithTimeIntervalSinceNow:
sleepAlarm
setScheduleTuesday:
numberWithBool:
changedValueForPropertyIdentifier:
hk_filter:
setAlarmSunday:
synchronizeNanoDomain:keys:
dateOfBirthComponentsWithError:
setScheduleThursday:
reloadTimelineWithReason:
sinkWithCompletion:receiveInput:
initWithWindDownEventData:watchProductType:weeksSinceOnboarded:
alarmConfiguration
setAlarmSaturday:
sleepSessionSaved:
hk_dayIndexWithCalendar:
changedValue
synchronize
initWithBundleIdentifier:allowPlaceholder:error:
dateInterval
setScheduleSunday:
addSuggestedHomeScreenPageWithRequest:
changeSet
hk_ageWithCurrentDate:
setAlarmMonday:
initWithBundleIdentifier:
setScheduleSaturday:
dateFromComponents:
wakeUpResults
addSuccessBlock:
lastObject
setAlarmFriday:
wakeUpOverriddenDate
setScheduleMonday:
chainFutures:
lastModifiedDate
setAlarmConfiguration:
setScheduleMigration:
initWithUTF8String:
notifyDelegateWithBlock:
dateByAddingTimeInterval:
enumerateObserversWithFutureBlock:
addObserver:wasFirst:
categoryTypeForIdentifier:
setActiveWatchProductType:
setScheduleFriday:
initWithAllowedClasses:serializedDictionary:
wakeUpEvent
addObserver:selector:name:object:
initWithSuiteName:
enumerateObserversWithBlock:
healthAppDefaultsDomainWithHealthStore:
categorySampleWithType:value:startDate:endDate:device:metadata:
setScheduleDisabled:
wakeUpEarlyNotificationConfirmedDate
enumerateObjectsUsingBlock:
supportsNanoSync
setScheduleChangePast7days:
initRequiringSecureCoding:
registerObserver:
showSensitiveLogItems
addObjectsFromArray:
enterState:context:
serializedDictionary
suggestedPagesWithFilter:layoutOptions:completionHandler:
setScheduleChangePast24Hours:
initForReadingFromData:error:
addObject:
enterState:
initWithStateMachine:
serialize:error:
dataForKey:
addNotificationRequest:withCompletionHandler:
setRemoteObjectInterface:
endpoint
registerCallback:
initWithStartDate:endDate:
serialDispatchQueueSchedulerWithName:
keyPathForSleepStateDictionary
hdsp_startSleepTrackingSessionWithReason:
setRelevantShortcuts:completionHandler:
infoForMachServiceName:remoteObjectInterface:exportedObject:exportedObjectInterface:lifecycleNotification:requiredEntitlement:options:
addFailureBlock:
initWithStartDate:duration:
recover:
cancel
keyPathForForegroundApp
setRelevanceProviders:
wakeUpComponents
calendarWithIdentifier:
keyPathForDefaultPairedDeviceForegroundApp
setProactivePages:
subscribeOn:
incrementSleepSettingsSyncAnchor
shouldHideForSensitivity:
bundleWithIdentifier:
setPredicates:
queue
incrementSleepScheduleSyncAnchor
initWithSleepModeState:sleepModeChangeReason:expectedEndDate:
endDate
sendMessage:toDestinations:priority:options:identifier:error:
bundleIdentifier
setPageType:
stringWithUTF8String:
incrementSleepScheduleStateSyncAnchor
currentThread
wakeUpAlarmSnoozedUntilDate
encodedData
addEntriesFromDictionary:
builderWithSleepScheduleModel:date:
incrementSleepModeSyncAnchor
currentStateIdentifier
stringWithFormat:
setObject:forKeyedSubscript:
addDelegate:queue:
wakeUpAlarmDismissedDate
initWithSleepMode:syncAnchor:
encodeObject:forKey:
builderWithObject:ofExpectedClass:
stringWithCString:encoding:
setObject:forKey:
incrementSleepEventSyncAnchor
currentStateExpirationDate
encodeInteger:forKey:
addCompletionBlock:
sharedBehavior
builderWithObject:
stringFromDate:
incrementSleepEventRecordSyncAnchor
nextOccurrenceAfterDate:
encodeBool:forKey:
initWithShortcut:
shareAcrossDevices
quantityWithUnit:doubleValue:
isValidOccurrence
buildTimelineWithOptions:
stringForKey:
nextEventWithIdentifier:dueAfterDate:
publisher
initWithServiceName:viewControllerClassName:
setXpcEndpoint:
hdsp_endSleepTrackingSessionWithReason:resultsHandler:
sendEvent:
isValid
nextEventDueAfterDate:
initWithService:
stringByAppendingString:
setWithObjects:
isUserVisible
segments
sleepScheduleStateChanged:
stringByAppendingPathComponent:
initWithScheduleState:syncAnchor:
setWithObject:
build
secondUnit
isUpdate
stringByAppendingFormat:
inMemoryCopy
setWithArray:
boolValue
sleepScheduleModelWithSleepSchedule:sleepSettings:sleepEventRecord:
setModeConfiguration:error:
setWindDownMinutes:
immediateScheduler
propertyListValueForKey:error:
earlierDate:
boolForKey:
scheduledSleepMode
stopSleepTrackingSession
setWidgetKind:
currentHandler
setMinute:
duration
activePairedWatchProductType
initWithMorningIndexRange:ascending:limit:options:resultsHandler:
property
scheduledExpirationStateIdentifiers
identifierWithPid:
vibrationIdentifier
dueDate
setWeeksSinceOnboardedWindDownActions:
initWithLocalDeviceHealthStore
isStarting
setLocale:
setWeeksSinceOnboardedSleepTracking:
value
initWithLabel:
doubleValueForUnit:
hasChangeForPropertyIdentifier:
hour
validSleepSchedule
doubleValue
processID
setWeeksSinceOnboardedSleepSchedule:
biologicalSexWithError:
hksp_validationErrorWithReason:
uuid
acquireRemoteContentAssertionWithDefinition:errorHandler:
setWeekendDaysWornWatchToSleepInLast7Days:
biologicalSex
na_setByRemovingObjectsFromSet:
previousState
accumulateValues:
initWithInterval:updateBlock:scheduler:
usesDefaultBedtimeAndWakeUpComponents
setWeekdays:
isSingleDayOverride
setLastModifiedDate:
na_setByIntersectingWithSet:
currentClient
initWithInterval:updateBlock:
setWatchSleepTrackingEnabled:
sleepScheduleModelDateModified
currentCalendar
na_safeAddObject:
hksp_supportsWakeUpResults
stopActivityUpdates
setWatchSleepFeaturesEnabled:
previousResolvedOccurrenceBeforeDate:
domain
handleForIdentifier:error:
bedtimeReminders
hksp_supportsWakeDetection
setIsImproveHealthAndActivitySubmissionAllowed:
distantPast
na_map:
initWithInterval:executeBlock:scheduler:
setWakeUpResultsEnabled:
previousOccurrenceBeforeDate:
bedtimeReminderMinutes
sleepScheduleInvalidReason
saveSleepTrackingSamples:completion:
hksp_supportsUserNotificationCenter
na_genericError
setIsDefaultScheduleWednesday:
distantFuture
initWithInterval:executeBlock:
setWakeUpResults:
bedtimeReminder
sleepScheduleInvalid
isPlaceholder
handleFailureInMethod:object:file:lineNumber:description:
na_firstObjectPassingTest:
setIsDefaultScheduleTuesday:
hksp_supportsSleepWidget
setWakeUpOverriddenDate:
userFocusComputedMode
initWithIntent:
previousEventWithIdentifier:dueBeforeDate:
sleepScheduleChanged:clientIdentifier:
na_filter:
hksp_supportsSleepTracking
setIsDefaultScheduleThursday:
setWakeUpEarlyNotificationConfirmedDate:
state
setIsDefaultScheduleSunday:
setWakeUpConfirmedUntilDate:
hksp_supportsSleepLockScreen
na_each:
bedtimeMinute
goodMorningScreenEnabledWithLogObject:
na_all:
setIsDefaultScheduleSaturday:
createDirectoryAtPath:withIntermediateDirectories:attributes:error:
hksp_supportsSleepAlarms
initWithIdentifier:targetQueue:waking:
setWakeUpComponents:
bedtimeInterval
goodMorningDismissedDate
createDefaultSleepingModeConfigurationWithError:
hksp_supportsSleep
setIsDefaultScheduleMonday:
mutableCopy
setWakeUpAlarmSnoozedUntilDate:
predicateMatchingIdentifier:
userContext
sleepModeStream
hksp_supportsLegacySleepAlarms
setIsDefaultScheduleFriday:
countByEnumeratingWithState:objects:count:
setWakeUpAlarmDismissedDate:
bedtimeHour
predicateForKeyPath:equalToValue:
goodMorningAlertNotificationsEnabledWithLogObject:
sleepModeState
startSleepTrackingSession
setInvalidationHandler:
morningIndex
hksp_supportsHealthData
count
bedtimeComponents
setInterruptionHandler:
hksp_supportsGoodMorningAlerts
setVibrationIdentifier:
isInstalled
sleepModeOptions
hksp_supportsDailyAnalytics
startOfDayForDate:
setInteractedWithWindDownLast24Hrs:
copy
setValues:
initWithIdentifier:mode:
dictionaryWithObjects:forKeys:count:
goalProgressForDaySummaries:inMorningIndexRange:
setInteger:forKey:
hksp_supportsChargingReminders
setUserInfo:
dictionaryWithDictionary:
updateConfiguration:
initWithIdentifier:defaults:
isImproveHealthAndActivitySubmissionAllowed
saveOccurrence:
hksp_supportsCFUserNotifications
setInitialState:
updateCachedUUID:
dictionaryRepresentation
setUserAge:
hksp_springBoardUserDefaults
UUIDString
initWithFocusModeIdentifier:
setUseSleepScreen:
isFinished
modeUpdateSource
hksp_sleepdUserDefaults
setHour:
initWithExtensionBundleIdentifier:kind:
setUpdateHandler:
isExpired:
modeUpdateReason
setToneIdentifier:
setHapticToneIdentifierWednesday:
startDate
devices
persistedState
getDeliveredNotificationsWithCompletionHandler:
sampleIntervals
autobahn
isEqualToString:
modeConfigService
setHapticToneIdentifierTuesday:
setTitle:
periods
unsignedIntegerValue
futureWithResult:
content
mode
setHapticToneIdentifierThursday:
setTimeZone:
isEqualToDate:
authorizationStatusForType:
sleepModeChanged:
futureWithNoResult
minute
containsSegmentsWithAppleSleepTrackingData
setHapticToneIdentifierSunday:
startActivityUpdates
setTimeInBedTrackingEnabled:
floatValue
minusSet:
containsPeriodsWithAppleSleepTrackingData
setHapticToneIdentifierSaturday:
hksp_serializedProperties
performRemoteBlockOnClients:passingTest:
setTimeInBedTracking:
floatForKey:
isEqual
containsObject:
setHapticToneIdentifierMonday:
hksp_serializedClassName
standardUserDefaults
unregisterObserver:
performRemoteBlock:onClient:
setThreadIdentifier:
resume
flatMap:
standardEventIdentifiers
containsAppleSleepTrackingData
setHapticToneIdentifierFriday:
resolvedOccurrenceContainingDate:
setStddevScheduledTimeAsleep:
firstObject
isEnabledAndHasOccurrences
setGoodMorningDismissedDate:
maximumAllowedDuration
setStddevActualVsScheduledTimeAsleep:
deserializeObjectOfClass:error:
resetSystemTimeZone
_initWithStoreIdentifier:usingEndToEndEncryption:
finishWithResult:error:
isEnabled
arrayWithObjects:count:
setFloat:forKey:
standardDeviationScheduledTimeAsleep
markAllActionsAsCollected
unionSet:
setStddevActualTimeAsleep:
arrayWithArray:
finishWithResult:
setExportedObject:
connectedClientsWithPID:
standardDeviationActualVsScheduledTimeAsleep
setStateDescriptor:
uncollectedWindDownActions
finishWithNoResult
arrayByAddingObject:
sleepHealthStore
isDiagnosticDataSubmissionAllowed
setExportedInterface:
connectedClients
setSleepWindDownShortcutsOnboardingCompletedVersion:
unarchivedObjectOfClass:fromData:error:
setSpringBoardSuggestedPageCreated:
sleepFocusConfigurationServiceWithOptions:
finishWithError:
setExpirationDate:
performBlock:
deregisterCallback:
archivedDataWithRootObject:requiringSecureCoding:error:
finishEncoding
setSoundVolume:
mainBundle
setEnabled:
finishDecoding
hksp_latestFromDates:
setSound:
trackEvents:
filterWithKeyPath:value:
hksp_isRunningUnitTests
setSleepWindDownShortcutsOnboardingFirstCompletedDate:
requestWithIdentifier:content:trigger:destinations:
isDefaultPairedDevice
sleepEventWithIdentifier:dueDate:expirationDate:isUserVisible:
applicationState
fileExistsAtPath:isDirectory:
setDidWearWatchToSleepLastNight:
localizedStringWithFormat:
soundWithAlertType:
hksp_isHealthDatabaseInaccessibleError
init
dealloc
saySomething
initWithCoder:
stateName
expirationDate
schedulesExpiration
didEnterWithPreviousState:context:
didExitWithNextState:context:
queryDidFailWithError:
queryDidComplete
protectedHealthDataDidBecomeAvailable
_executeQuery
_retryQueryIfNeededOrTransitionToNeedsProtectedDataState
_transitionToWaitingForWakeUpState
_transitionToNotifiedState
_transitionToRetryState
_shouldRetryImmediatelyOnFailure
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
wakeUpAlarmWasDismissedFromSource:
wakeUpAlarmWasSnoozedFromSource:
goodMorningWasDismissed
wakeNotificationWasConfirmed
sleepLockWasDismissed
sleepModeDidChange:previousMode:reason:
startDetecting
stopDetecting
isDetecting
type
wakeDetectorDelegate
setWakeDetectorDelegate:
TB,R,N
TQ,R,N
T@"<HDSPWakeDetectorDelegate>",W,N
initWithEnvironment:
environment
environmentWillBecomeReady:
environmentDidBecomeReady:
environmentWillInvalidate:
T@"HDSPEnvironment",R,W,N
_withLock:
_resetCounter
setNumberOfTimesDismissed:
numberOfTimesDismissed
dismissCounterLock
.cxx_destruct
_isDetecting
_dismissCounterLock
_wakeDetectorDelegate
_environment
TQ,N
T{os_unfair_lock_s=I},R,N,V_dismissCounterLock
TB,R,N,V_isDetecting
T@"<HDSPWakeDetectorDelegate>",W,N,V_wakeDetectorDelegate
T@"HDSPEnvironment",R,W,N,V_environment
standardConfiguration
syncedUserDefaultsDidChangeExternally:
syncedUserDefaults:didChangeExternallyForKeys:
notificationListener:didReceiveNotificationWithName:
diagnosticInfo
diagnosticDescription
sourceIdentifier
dontNotify
dontSync
T@"NSString",R,N
initWithEnvironment:configuration:syncedDefaults:
dataVersion
cloudStorageDataVersion
localDataVersion
needsMigration
performInitialSyncWithCompletion:
saveDataVersion
loadSleepSchedule:
saveSleepSchedule:error:
saveSleepScheduleChanges:error:
removeSleepScheduleWithError:
loadSleepSettings:
saveSleepSettings:error:
saveSleepSettingsChanges:error:
removeSleepSettingsWithError:
loadSleepEventRecord:
saveSleepEventRecord:error:
saveSleepEventRecordChanges:error:
removeSleepEventRecordWithError:
loadSleepScheduleModel:
saveSleepScheduleModel:error:
_loadObjectOfClass:allowedClasses:propertiesToLoad:error:
_saveObject:error:
_saveObjectChanges:versionKey:currentVersion:error:
_removeObjectProperties:error:
addObserver:
removeObserver:
resetCloudStorage
syncedDefaults
configuration
observers
_syncedDefaults
_configuration
_observers
T@"HDSPSyncedDefaults",R,N,V_syncedDefaults
T@"HDSPSyncedDefaultsConfiguration",R,N,V_configuration
T@"HKSPObserverSet",R,N,V_observers
updateStateWithContext:
sleepScheduleStateChangedToWindDown:fromState:
sleepScheduleStateChangedToBedtime:fromState:
sleepScheduleStateChangedToWakeUp:
sleepScheduleStateChangedToDisabledFromState:
userTurnedOnSleepModeWithReason:
userTurnedOffSleepModeWithReason:
automationTurnedOnSleepModeWithReason:
automationTurnedOffSleepModeWithReason:
sleepModeTurnedOnForUnknownReason
sleepModeTurnedOffForUnknownReason
nextStateWithContext:
_nextSleepModeStateCommon:
_nextSleepModeStateFromTimeline:
sleepMode
defaultChangeReason
stateMachine
T@"HDSPSleepModeStateMachine",R,W,D,N
Tq,R,N
sleepScheduleStateDidChange:previousState:reason:
delegate
setDelegate:
processedSessionForSession:
previousSessionFinished
T@"<HDSPSleepTrackerDelegate>",W,N
isTimeInBedTrackingEnabled
sleepScheduleModel
_endSleepSessionWithReason:
_createSleepSessionWithEndDate:endReason:
_computeSleepSessionStartBeforeDate:
computeSleepIntervalsForInterval:
_computeSessionMetadataForInterval:
sleepIntervalScheduler
_delegate
_sleepIntervalScheduler
T@"<HKSPQueueBackedScheduler>",R,N,V_sleepIntervalScheduler
T@"HKSPSleepScheduleModel",R,N
T@"<HDSPSleepTrackerDelegate>",W,N,V_delegate
dailyCollectionCriteria
dailyCollectionActivity
significantTimeChangeDetected:
timeZoneChangeDetected:
initWithEnvironment:analyticsManager:dataCollectionScheduler:
updateScheduledActivity
scheduleDailyCollectionActivity
cancelDailyCollectionActivity
isDataCollectionEnabled
currentDate
_lock_executeQuery:
_processQueryResultsWithSummaries:queryRange:error:
_queryMorningIndexRangeForDate:
_makeReportQueryWithMorningIndexRange:resultsHandler:
_submitAnalyticsReportsUsingBuilder:
_pruneExpiredWindDownActionDataBeforeQueryRange:
_unit_testing_pruneExpiredWindDownActionData
analyticsLock
dataCollectionScheduler
isDataCollectionInProgress
analyticsManager
_isDataCollectionInProgress
_analyticsLock
_dataCollectionScheduler
_analyticsManager
T{os_unfair_lock_s=I},R,N,V_analyticsLock
T@"<HDSPActivityScheduler>",R,N,V_dataCollectionScheduler
TB,R,N,V_isDataCollectionInProgress
T@"HKSPAnalyticsManager",R,N,V_analyticsManager
stateWithIdentifierDidExpire:
wakeupEventDetected:date:
earlyWakeUpWasNotifiedRemotely
isDetectingState
isWakeDetectionDisabled
wakeDetectionEventDue
T@"HDSPWakeDetectionStateMachine",R,W,D,N
contextWithReason:
contextForAlarmTurnedOffWhileFiring
reason
isForAlarmTurnedOffWhileFiring
_isForAlarmTurnedOffWhileFiring
_reason
TQ,R,N,V_reason
TB,R,N,V_isForAlarmTurnedOffWhileFiring
environmentDidBecomeReady
_sleepModeManagerProvider
isDemoEnvironment
setInitialSchedule
resetDemoMode
demoScheduleModel
demoSleepSettings
demoSleepSchedule
demoEventRecord
initWithIdentifier:allowedStates:persistence:delegate:infoProvider:currentDateProvider:
callbackScheduler
T@"<NAScheduler>",R,N
scheduleStateExpiration
unscheduleStateExpiration
startBatteryMonitoring
stopBatteryMonitoring
postChargingReminderNotification
monitoringWindowAfterDate:
sleepFeaturesEnabled
sleepScheduleState
isCharging
T@"NSDate",R,N
batteryLevelChanged:
initWithIdentifier:persistence:delegate:infoProvider:currentDateProvider:
allStates
loggingCategory
disabledState
waitingState
monitoringState
notifiedState
_disabledState
_waitingState
_monitoringState
_notifiedState
T@"<HDSPChargingReminderStateMachineDelegate>",R,W,D,N
infoProvider
T@"<HDSPChargingReminderStateMachineInfoProvider>",R,W,D,N
T@"HDSPChargingReminderDisabledState",R,N,V_disabledState
T@"HDSPChargingReminderWaitingState",R,N,V_waitingState
T@"HDSPChargingReminderMonitoringState",R,N,V_monitoringState
T@"HDSPChargingReminderNotifiedState",R,N,V_notifiedState
hdsp_bedtimeReminderSound
hdsp_chargingReminderSound
hdsp_wakeUpResultsSound
hdsp_wakeDetectionSound
sleepEventIsDue:
eventIdentifiers
upcomingEventsDueAfterDate:
providerIdentifier
sleepEventDelegate
setSleepEventDelegate:
T@"NSString",R,C,N
T@"<HDSPSleepEventDelegate>",W,N
trackingWindowAfterDate:
isWristDetectEnabled
inUserRequestedSleepMode
inWakeDetectionWindow
startSleepTrackingSessionWithReason:
endSleepTrackingSessionWithReason:
startActivityDetection
stopActivityDetection
startAppLaunchDetection
stopAppLaunchDetection
notifyForActivityDetectedOnDate:
sleepScheduleModelManager:didUpdateSleepSchedule:
sleepScheduleModelManager:didUpdateSleepSettings:
sleepScheduleModelManager:didUpdateSleepEventRecord:
sleepScheduleModelManager:didUpdateSleepScheduleModel:
deviceChangedChargingState:
detectedOnWristOnDate:
detectedOffWristOnDate:
wristDetectEnabledDidChange
initWithEnvironment:sleepTrackerProvider:
_assertLock:
updateState
_handleSleepSessionAnalysisResults:endReason:
_createSleepSessionWithSleepAnalysis:endReason:
_handleAppLaunched:onDate:
_handleActivityDetectedOnDate:
_handleInternalSleepSessionEndRequest
currentState
sleepTrackerProvider
sleepTracker
timeAsleepTrackerLock
appLaunchRegistrations
isPendingDetectionEnd
_isPendingDetectionEnd
_timeAsleepTrackerLock
_sleepEventDelegate
_sleepTrackerProvider
_sleepTracker
_stateMachine
_appLaunchRegistrations
T@?,R,C,N,V_sleepTrackerProvider
T@"<HDSPTimeAsleepTracker>",R,N,V_sleepTracker
T{os_unfair_lock_s=I},R,N,V_timeAsleepTrackerLock
T@"HDSPTimeAsleepTrackerStateMachine",R,N,V_stateMachine
T@"NSArray",R,N,V_appLaunchRegistrations
TB,R,N,V_isPendingDetectionEnd
T@"<HDSPSleepEventDelegate>",W,N,V_sleepEventDelegate
hdsp_isInsufficientAsleepDataError
hdsp_insufficientAsleepDataError
bedtimeOccurred
wakeUpOccurredWithReason:
userEngagedSleepMode
sleepModeExitedWithReason:
startWakeDetectionOccurred
activityDetectedOnDate:
appLaunchedOnDate:
sleepSessionEndRequestedInternally
sleepSessionFinished
autoTrackingState
activityTrackingState
activityAfterWakeUpTrackingState
manualTrackingState
internalEndState
_autoTrackingState
_activityTrackingState
_activityAfterWakeUpTrackingState
_manualTrackingState
_internalEndState
T@"<HDSPTimeAsleepTrackerStateMachineDelegate>",R,W,D,N
T@"<HDSPTimeAsleepTrackerStateMachineInfoProvider>",R,W,D,N
T@"HDSPTimeAsleepTrackerDisabledState",R,N,V_disabledState
T@"HDSPTimeAsleepTrackerWaitingState",R,N,V_waitingState
T@"HDSPTimeAsleepTrackerAutoTrackingState",R,N,V_autoTrackingState
T@"HDSPTimeAsleepTrackerActivityTrackingState",R,N,V_activityTrackingState
T@"HDSPTimeAsleepTrackerActivityAfterWakeUpTrackingState",R,N,V_activityAfterWakeUpTrackingState
T@"HDSPTimeAsleepTrackerManualTrackingState",R,N,V_manualTrackingState
T@"HDSPTimeAsleepTrackerInternalEndState",R,N,V_internalEndState
initWithNotification:healthStore:
localizedTitle
localizedBody
_localizedBodyForOneDayNotification
_localizedBodyForOneWeekDayNotification
_localizedBodyForTwoWeekNotification
category
notificationVariant
dailySleepDurationGoal
weeklyGoalAchieved
userFirstName
_localizedStringKeyBase
_regularLocalizedStringKey
_regularSubstitutionStringKey
_embeddedNameLocalizedStringKey
_embeddedNameSubstitutionStringKey
notification
healthStore
_notification
_healthStore
T@"HDSPWakeUpResultsNotification",R,N,V_notification
T@"HKHealthStore",R,N,V_healthStore
addProvider:
removeProvider:
_logDiagnostics:
providers
diagnostics
_providers
_diagnostics
T@"HKSPObserverSet",R,N,V_providers
T@"HKSPDiagnostics",R,N,V_diagnostics
activeTypes
isLockScreenActive
sleepLockScreenStateDidChange:previousState:
lockScreenDidConnect
sensitiveUIStateChanged
presentAlertForGoodMorning
dismissAlertForGoodMorning
initWithEnvironment:assertionManager:
_lock_shouldShowLockScreenForState:
_lock_updateLockScreenAssertion
_lock_overridingLockScreenState
_lock_resolvedLockScreenState
currentLockScreenState
overrideLockScreenState:userInfo:
_currentState
sleepLockScreenLock
assertionManager
setCurrentLockScreenState:
didUpdateAlertAssertion
setDidUpdateAlertAssertion:
_state
_overrideState
_overrideUserInfo
_sleepLockScreenLock
_assertionManager
_currentLockScreenState
_didUpdateAlertAssertion
T{os_unfair_lock_s=I},R,N,V_sleepLockScreenLock
T@"HDSPSleepLockScreenStateMachine",R,N,V_stateMachine
T@"<HDSPSleepLockScreenAssertionManager>",R,N,V_assertionManager
Tq,N,V_currentLockScreenState
T@?,C,N,V_didUpdateAlertAssertion
healthAppForegroundPredicate
sleepAppForegroundPredicate
contextualKeyPath
initWithEnvironment:context:
registerPredicate:identifier:callback:
unregister:
updateForScheduleModelModifiedOnDate:
_writeSleepInfoToContextStore:
context
contextLock
_contextLock
_context
T{os_unfair_lock_s=I},R,N,V_contextLock
T@"<_CDLocalContext>",R,N,V_context
archivedSleepSessionsSaved:
platformSpecificTrackerWithEnvironment:
sleepSessionManager:didSaveSession:
sleepSessionManager:didSaveArchivedSessions:
sleepSessionManager:requestsProcessedSessionForSession:
sleepSessionManagerDidFinishSession:
initWithEnvironment:sleepSessionManager:sleepTracker:
sleepSessionObservers
sleepSessionManager
_sleepSessionObservers
_sleepSessionManager
T@"HKSPObserverSet",R,N,V_sleepSessionObservers
T@"HDSPSleepSessionManager",R,N,V_sleepSessionManager
T@"<HDSPSleepTracker>",R,N,V_sleepTracker
sleepModeDidChange:reason:
_nextStateForSleepMode:reason:context:
sleepLockScreenState
_isSleepLockScreenDisabled
T@"HDSPSleepLockScreenStateMachine",R,W,D,N
retryAttemptEventDue
isOnboarded
sleepWidgetStateDidChange:previousState:
sleepWidgetShouldReload
initWithEnvironment:widgetReloader:reloadThrottler:relevanceDonor:
currentSleepWidgetState
_lock_currentSleepWidgetState
overrideWidgetState:
clearWidgetOverrideState
_sleepWidgetLock
_widgetReloader
_reloadThrottler
_relevanceDonor
_isOverridingWidgetState
isActivityTrackingState
inExpectedAutoTrackingWindow
sleepScheduleStateChangedToBedtime
sleepScheduleStateChangedToWakeUp
goodMorningAlertTimedOut
T@"HDSPGoodMorningAlertStateMachine",R,W,D,N
encodeWithCoder:
copyWithZone:
innerClasses
identifier
destinations
_archivedSessionDirectory
_archivedSessionFile
sleepTrackerDidStartSession:
sleepTracker:didEndSession:reason:
deviceHasBeenUnlocked
initWithEnvironment:persistence:
startSession
stopSession
savePendingSessions
_hasUnprocessedSessions
_waitForFirstUnlock
_locked_savePendingSessions
_unprocessedSessions
archiveSession:
saveSession:
removeSessionDataFile
persistence
deviceUnlockManager
sessionLock
_sessionLock
_persistence
_deviceUnlockManager
T@"<HDSPSleepSessionPersistence>",R,N,V_persistence
T@"HDSPDeviceUnlockMonitor",R,N,V_deviceUnlockManager
T{os_unfair_lock_s=I},R,N,V_sessionLock
T@"<HDSPSleepSessionManagerDelegate>",W,N,V_delegate
sleepModeDidChange:isUserRequested:
sleepScheduleModelDidChange:
sleepScheduleStateDidChange:
significantTimeChangeOccurred
widgetState
reloadsWidgetOnModelChange
reloadsWidgetOnTimeChange
widgetStateHasTimeComponent
shouldGoIntoUpcomingState
T@"HDSPSleepWidgetStateMachine",R,W,D,N
expirationDuration
stateDidExpireWithContext:
monitorCriteria
monitorActivity
initWithEnvironment:monitoringScheduler:
devicePowerMonitor
checkBatteryLevel
chargingReminderLock
monitoringScheduler
_chargingReminderLock
_monitoringScheduler
T{os_unfair_lock_s=I},R,N,V_chargingReminderLock
T@"HDSPChargingReminderStateMachine",R,N,V_stateMachine
T@"<HDSPActivityScheduler>",R,N,V_monitoringScheduler
_stageDurationPercentage:ofTotalDuration:
initWithEnvironment:daySummaries:morningIndexRange:
buildReports
sleepSchedule
sleepSettings
analyticsStore
_dailyReportEvent
_daysWatchWornToSleepOverLastNumberOfDays:excludeWeekdays:calendar:
_woreWatchToSleepLastNight
_bucketedSleepDurationLastNight
_sleepDurationLastNightIncludingAwake:
_lastNightsDurationForSleepStage:
_windDownEvents
_didInteractWithWindDownActionsWithinLastTwoDays
_changedSchedule:withinNumberOfDays:currentDate:calendar:
_weeksSinceOnboardDate:currentDate:calendar:
_biologicalSex
_userAgeForCurrentDate:
daySummaries
morningIndexRange
_daySummaries
_morningIndexRange
T@"NSArray",R,N,V_daySummaries
T{?=qq},R,N,V_morningIndexRange
hdsp_enumerateFirstPartyWatchSleepTrackingSegmentsWithBlock:
scheduleState
wakeTimeReached
wakeUpConfirmed
wakeUpDidOccur
_transitionToDelayingForTrackingState
hdsp_notificationContentWithEnvironment:
standardEnvironment
disabledEnvironment
demoModeEnvironment
environmentShouldMigrateData
isSystemReady
needsDataMigration
systemDidBecomeReady
initWithBehavior:sleepStorageProvider:sleepScheduleModelManagerProvider:sleepSchedulerProvider:sleepServerProvider:sleepCoordinatorProvider:sleepModeManagerProvider:sleepTrackingManagerProvider:goodMorningAlertManagerProvider:chargingReminderManagerProvider:wakeDetectionManagerProvider:wakeUpResultsNotificationManagerProvider:actionManagerProvider:sleepAlarmManagerProvider:healthStoreProvider:contextStoreManagerProvider:biomeManagerProvider:migrationManagerProvider:notificationManagerProvider:notificationListenerProvider:sleepLockScreenManagerProvider:sleepWidgetManagerProvider:idsServiceManagerProvider:diagnosticsProvider:systemMonitorProvider:assertionManager:timeChangeListenerProvider:sensitiveUIMonitorProvider:analyticsManagerProvider:userDefaults:currentDateProvider:defaultCallbackScheduler:
shutdown
performBlock:withLock:
performBlock:assertLock:
performWhenEnvironmentIsReady:
performWhenEnvironmentIsReady:withContext:
perform:withSource:
perform:withContext:
currentContext
currentSource
prepare
isEnvironmentReady
_environmentAwareComponents
isDisabled
behavior
sleepScheduleModelManager
sleepStorage
sleepScheduler
sleepCoordinator
sleepModeManager
sleepTrackingManager
actionManager
notificationManager
stateMachineLock
environmentIsReady
currentDateProvider
userDefaults
sleepServer
goodMorningAlertManager
chargingReminderManager
wakeDetectionManager
wakeUpResultsNotificationManager
sleepAlarmManager
healthStoreProvider
notificationListener
sleepLockScreenManager
sleepWidgetManager
systemMonitor
timeChangeListener
sensitiveUIMonitor
migrationManager
contextStoreManager
biomeManager
idsServiceManager
defaultCallbackScheduler
_stateMachineLock
_behavior
_sleepScheduleModelManager
_sleepStorage
_sleepScheduler
_sleepCoordinator
_sleepModeManager
_sleepTrackingManager
_actionManager
_notificationManager
_environmentIsReady
_currentDateProvider
_userDefaults
_sleepServer
_goodMorningAlertManager
_chargingReminderManager
_wakeDetectionManager
_wakeUpResultsNotificationManager
_sleepAlarmManager
_healthStoreProvider
_notificationListener
_sleepLockScreenManager
_sleepWidgetManager
_systemMonitor
_timeChangeListener
_sensitiveUIMonitor
_migrationManager
_contextStoreManager
_biomeManager
_idsServiceManager
_defaultCallbackScheduler
T@"HDSPEnvironmentStateMachine",R,N,V_stateMachine
T{os_unfair_lock_s=I},R,N,V_stateMachineLock
T@"NAFuture",R,N,V_environmentIsReady
T@?,R,C,N,V_currentDateProvider
T@"<HKSPUserDefaults>",R,N,V_userDefaults
T@"HDSPSleepStoreServer",R,N,V_sleepServer
T@"HDSPGoodMorningAlertManager",R,N,V_goodMorningAlertManager
T@"HDSPChargingReminderManager",R,N,V_chargingReminderManager
T@"HDSPWakeDetectionManager",R,N,V_wakeDetectionManager
T@"HDSPWakeUpResultsNotificationManager",R,N,V_wakeUpResultsNotificationManager
T@"HDSPSleepAlarmManager",R,N,V_sleepAlarmManager
T@"HKSPHealthStoreProvider",R,N,V_healthStoreProvider
T@"HDSPDiagnostics",R,N,V_diagnostics
T@"HDSPNotificationListener",R,N,V_notificationListener
T@"HDSPSleepLockScreenManager",R,N,V_sleepLockScreenManager
T@"HDSPSleepWidgetManager",R,N,V_sleepWidgetManager
T@"HDSPSystemMonitor",R,N,V_systemMonitor
T@"HDSPAssertionManager",R,N,V_assertionManager
T@"HDSPTimeChangeListener",R,N,V_timeChangeListener
T@"HKSPSensitiveUIMonitor",R,N,V_sensitiveUIMonitor
T@"HDSPSleepScheduleModelMigrationManager",R,N,V_migrationManager
T@"HDSPContextStoreManager",R,N,V_contextStoreManager
T@"HDSPBiomeManager",R,N,V_biomeManager
T@"HDSPIDSServiceManager",R,N,V_idsServiceManager
T@"<HKSPQueueBackedScheduler>",R,N,V_defaultCallbackScheduler
T@"HDSPAnalyticsManager",R,N,V_analyticsManager
T@"_HKBehavior",R,N,V_behavior
T@"HDSPSleepScheduleModelManager",R,N,V_sleepScheduleModelManager
T@"HDSPSleepStorage",R,N,V_sleepStorage
T@"HDSPSleepEventScheduler",R,N,V_sleepScheduler
T@"HDSPSleepScheduleStateCoordinator",R,N,V_sleepCoordinator
T@"HDSPSleepModeManager",R,N,V_sleepModeManager
T@"HDSPSleepTrackingManager",R,N,V_sleepTrackingManager
T@"HDSPSleepActionManager",R,N,V_actionManager
T@"HDSPSleepNotificationManager",R,N,V_notificationManager
connectWithCompletion:
checkInWithSyncAnchorContainer:completion:
getSleepScheduleWithCompletion:
saveSleepSchedule:completion:
getSleepSettingsWithCompletion:
saveSleepSettings:completion:
getSleepEventRecordWithCompletion:
saveSleepEventRecord:completion:
getSleepModeWithCompletion:
setSleepMode:reason:completion:
getSleepScheduleStateWithCompletion:
getSleepWidgetStateWithCompletion:
confirmAwakeWithCompletion:
dismissGoodMorningWithCompletion:
dismissSleepLockWithCompletion:
sleepAlarmWasDismissedOnDate:source:completion:
sleepAlarmWasSnoozedUntilDate:source:completion:
sleepAlarmWasModifiedFromSource:completion:
publishNotificationWithIdentifier:userInfo:completion:
publishWakeUpResultsNotificationWithCompletion:
setLockScreenOverrideState:userInfo:completion:
setWidgetOverrideState:completion:
clearWidgetOverrideWithCompletion:
createSleepFocusModeWithCompletion:
deleteSleepFocusModeWithCompletion:
processNoLongerSuspended:
processDidBecomeSuspended:
connectionListenerDidAddClient:
connectionListenerDidRemoveClient:
initWithEnvironment:connectionListenerProvider:processStateManager:
startListening
_performWhenCurrentClientIsReady:
_performWhenClientIsReady:block:
_performWhenEnvironmentIsReady:
_performWhenEnvironmentIsReady:withContext:
_checkForSuspendedBlock
_notifyClient:forMissedMessagesWithSyncAnchorContainer:
connectionListener
processStateManager
syncAnchorContainer
setSyncAnchorContainer:
_connectionListener
_processStateManager
_syncAnchorContainer
T@"HKSPXPCConnectionListener",R,N,V_connectionListener
T@"HDSPProcessStateManager",R,N,V_processStateManager
T@"HKSPPersistentSyncAnchorContainer",&,N,V_syncAnchorContainer
springboardDidStart
T@"<HDSPSystemReadyDelegate>",W,N
_waitForInitialSync
_finishWaitingForInitialSync
isInRootRobotOrDemoMode
_isInRootRobot
restoreDidFinish
springboardMonitor
observingRestore
lock
_observingRestore
_lock
_springboardMonitor
T@"HDSPSpringboardMonitor",R,N,V_springboardMonitor
TB,R,N,V_observingRestore
T{os_unfair_lock_s=I},R,N,V_lock
T@"<HDSPSystemReadyDelegate>",W,N,V_delegate
setLockScreenState:userInfo:
connect
didDismissWithReason:
listener:shouldAcceptNewConnection:
takeAssertionIfNeeded
sendLockScreenState:userInfo:
invalidateAssertion
hasLockScreenConnection
T@"<HDSPSleepLockScreenAssertionManagerDelegate>",W,N
setConnection:
connection
lockScreenAssertion
_listener
_connection
_connectionLock
_lockScreenAssertion
T@"SBSLockScreenRemoteContentAssertion",R,N,V_lockScreenAssertion
T@"NSXPCConnection",&,N
T@"<HDSPSleepLockScreenAssertionManagerDelegate>",W,N,V_delegate
initWithCallbackScheduler:
setOverrideDeviceHasBeenUnlockedSinceBoot:
hasBeenUnlockedSinceBoot
_latestKeyBagValueForHasBeenUnlockedSinceBoot
handleFirstUnlock
monitorLock
overrideDeviceHasBeenUnlockedSinceBoot
_hasBeenUnlockedSinceBoot
_monitorLock
_overrideDeviceHasBeenUnlockedSinceBoot
T{os_unfair_lock_s=I},R,N,V_monitorLock
T@"NSNumber",&,N,V_overrideDeviceHasBeenUnlockedSinceBoot
TB,R,N,V_hasBeenUnlockedSinceBoot
publishNotificationForEvent:userInfo:
tearDownNotificationForEventIdentifier:
tearDownNotifications
_publishWakeDetectionNotificationForUserInfo:
_wakeDetectionAlertTitleForAlarmEnabled:sleepModeOn:
_wakeDetectionAlertBodyForAlarmEnabled:sleepModeOn:
_confirmTextForForAlarmEnabled:sleepModeOn:
_ignoreTextForForAlarmEnabled:sleepModeOn:
_publishNotificationWithIdentifier:title:message:defaultButtonTitle:otherButtonTitle:bypassDND:aboveLockScreen:actionHandler:
handleResponse:forUserNotification:
notificationLock
notifications
_notificationLock
_notifications
T{os_unfair_lock_s=I},R,N,V_notificationLock
T@"NSMutableDictionary",R,N,V_notifications
setSourceIdentifier:
setDontNotify:
setDontSync:
_dontNotify
_dontSync
_sourceIdentifier
T@"NSString",&,N,V_sourceIdentifier
TB,N,V_dontNotify
TB,N,V_dontSync
needDataMigration
performDataMigration
_migrateToCloudKit
_migrateSleepScheduleFromMobileTimer
_migrateOnboardingSettings
_migrateSleepFocus
_migrateHomeScreenPage
wristDetectionSettingManagerDidObserveWristDetectChange:
initWithUserDefaults:
initWithUserDefaults:callbackScheduler:
isOnWrist
_lock_isOnWrist
_lock_setIsOnWrist:
lastOnWristDate
_lock_lastOnWristDate
_lock_setLastOnWristDate:
wristDetectionSettingsManager
_wristDetectionSettingsManager
T@"HKWristDetectionSettingManager",R,N,V_wristDetectionSettingsManager
nextStateWithContext:forceUpdate:
defaultStartReason
defaultEndReason
isSleepTrackingState
goodMorningAlertEnabled
isAppleWatch
isOnCharger
presentingState
_presentingState
T@"<HDSPGoodMorningAlertStateMachineDelegate>",R,W,D,N
T@"<HDSPGoodMorningAlertStateMachineInfoProvider>",R,W,D,N
T@"HDSPGoodMorningAlertDisabledState",R,N,V_disabledState
T@"HDSPGoodMorningAlertWaitingState",R,N,V_waitingState
T@"HDSPGoodMorningAlertPresentingState",R,N,V_presentingState
initWithSnoozedUntilDate:
snoozedUntilDate
dateDescription
applicationInstallsDidStart:
applicationInstallsDidChange:
applicationInstallsDidUpdateIcon:
applicationsWillInstall:
applicationsDidInstall:
pluginsDidInstall:
applicationsDidFailToInstall:
applicationsWillUninstall:
pluginsWillUninstall:
applicationsDidUninstall:
pluginsDidUninstall:
applicationsDidFailToUninstall:
applicationInstallsArePrioritized:arePaused:
applicationInstallsDidPause:
applicationInstallsDidResume:
applicationInstallsDidCancel:
applicationInstallsDidPrioritize:
applicationStateDidChange:
applicationIconDidChange:
networkUsageChanged:
observeLaunchProhibitedApps
deviceManagementPolicyDidChange:
applicationsDidChangePersonas:
databaseWasRebuilt
isApplicationInstalled:
setNotification:
notificationCenter
setNotificationCenter:
_notificationCenter
T@"HDSPCFUserNotification",&,N,V_notification
T@"HDSPCFUserNotificationCenter",&,N,V_notificationCenter
sharedManager
postNotification:fromCenter:
cancelNotification:fromCenter:
registrationLock
registrations
_registrationLock
_registrations
T{os_unfair_lock_s=I},R,N,V_registrationLock
T@"NSMutableArray",R,N,V_registrations
initWithBehavior:
start
_setupSigtermHandler
_handleSigterm
launchDate
sigtermSource
_launchDate
_sigtermSource
T@"NSDate",R,N,V_launchDate
T@"NSObject<OS_dispatch_source>",R,N,V_sigtermSource
T@"HDSPEnvironment",R,N,V_environment
initWithDelegate:infoProvider:
dataMigrationDidComplete
notReadyState
migrationState
readyState
demoState
_notReadyState
_migrationState
_readyState
_demoState
T@"<HDSPEnvironmentStateMachineDelegate>",R,W,D,N
T@"<HDSPEnvironmentStateMachineInfoProvider>",R,W,D,N
T@"HDSPEnvironmentNotReadyState",R,N,V_notReadyState
T@"HDSPEnvironmentMigrationState",R,N,V_migrationState
T@"HDSPEnvironmentReadyState",R,N,V_readyState
T@"HDSPEnvironmentDemoState",R,N,V_demoState
isInDemoMode
significantScheduleChangeOccurred:
windDownReached
bedtimeReached
initWithDate:
initWithWakeUpConfirmedDate:wakeUpConfirmedUntilDate:
wakeUpConfirmedDate
succinctDescriptionBuilder
wakeUpConfirmedUntilDate
_wakeUpConfirmedUntilDate
T@"NSDate",R,N,V_wakeUpConfirmedUntilDate
scheduleRetryAttempt
unscheduleRetryAttempt
startObservingProtectedHealthDataAvailability
stopObservingProtectedHealthDataAvailability
executeQuery
postResultsNotification
didPostResultsNotification
isWaitingForWakeUp
isDelayingForTracking
waitingForWakeUpState
delayingForTrackingState
waitingForRetryState
queryingState
needsProtectedDataState
_waitingForWakeUpState
_delayingForTrackingState
_waitingForRetryState
_queryingState
_needsProtectedDataState
T@"<HDSPWakeUpResultsNotificationStateMachineDelegate>",R,W,D,N
T@"<HDSPWakeUpResultsNotificationStateMachineInfoProvider>",R,W,D,N
T@"HDSPWakeUpResultsNotificationWaitingForWakeUpState",R,N,V_waitingForWakeUpState
T@"HDSPWakeUpResultsNotificationDelayingForTrackingState",R,N,V_delayingForTrackingState
T@"HDSPWakeUpResultsNotificationWaitingForRetryState",R,N,V_waitingForRetryState
T@"HDSPWakeUpResultsNotificationQueryingState",R,N,V_queryingState
T@"HDSPWakeUpResultsNotificationNeedsProtectedDataState",R,N,V_needsProtectedDataState
T@"HDSPWakeUpResultsNotificationNotifiedState",R,N,V_notifiedState
T@"HDSPWakeUpResultsNotificationDisabledState",R,N,V_disabledState
onWristMonitor
hksp_objectForKey:
hksp_setObject:forKey:
hksp_removeObjectForKey:
hksp_boolForKey:
hksp_setBool:forKey:
hksp_floatForKey:
hksp_setFloat:forKey:
hksp_integerForKey:
hksp_setInteger:forKey:
hksp_dataForKey:
hksp_dictionaryRepresentation
hksp_dictionaryRepresentationForKeys:
hksp_saveDictionary:
hksp_removeObjectsForKeys:
hksp_synchronize
hksp_synchronizeKeys:
hksp_reset
hdsp_forceSynchronizeWithCompletion:
hdsp_setExternalChangeDelegate:
_nanoDefaultsProvider
_cloudDefaultsProvider
initWithEnvironment:configuration:
initWithEnvironment:configuration:nanoDefaultsProvider:cloudDefaultsProvider:throttleInterval:
syncDisabled
hksp_saveDictionary:syncToCloudKit:
hksp_removeObjectsForKeys:syncToCloudKit:
_setDefaultForKey:setBlock:
_setDefaultForKey:setBlock:syncToCloudKit:
_defaultsForKey:
localDefaultsDictionaryRepresentation
cloudKitDefaultsDictionaryRepresentation
_hksp_synchronizeKeys:
_throttled_synchronizeKeys:
saveCloudDataVersion
_nanoDefaultsDidReceiveExternalChange
_nanoDefaultsDidReceiveExternalChangeForKeys:
_cloudDefaultsDidReceiveExternalChange
_cloudDefaultsDidReceiveExternalChangeForKeys:
_initialCloudKitSync
_syncLocalToCloudKit
_syncKeysToCloudKit:
_syncCloudKitToLocal
_syncKeysFromCloudKit:
_differentialCloudKitSync
_differentialCloudKitSyncForKeySet:
resetCloudData
needsInitialSync
setNeedsInitialSync:
needsSyncFromCloud
setNeedsSyncFromCloud:
_localDefaults
_nanoDefaults
_cloudDefaults
_keysNeedingSynchronize
_syncAccumulator
_needsInitialSync
_needsSyncFromCloud
T@"<HDSPSyncedUserDefaultsExternalChangeDelegate>",W,N,V_delegate
TB,N,V_needsInitialSync
TB,N,V_needsSyncFromCloud
platformSpecificProviders:
wakeDetector:didDetectWakeUpEventOnDate:
startWakeDetection:
stopWakeDetection
postWakeDetectionNotification:
detectionWindowForType:
relevantOccurrence
sleepModeIsOff
isWatch
nextWakeUp
upcomingStartDetection
T@"HKSPSleepScheduleOccurrence",R,N
initWithEnvironment:wakeDetectorProviders:
_startWakeDetection
_detectionWindowForType:wakeUpDate:bedtimeDate:
wakeDetectors
wakeDetectionLock
_wakeDetectionLock
_wakeDetectors
T@"NSArray",R,N,V_wakeDetectors
T{os_unfair_lock_s=I},R,N,V_wakeDetectionLock
T@"HDSPWakeDetectionStateMachine",R,N,V_stateMachine
hdsp_categorySampleForSleepSessionInterval:metadata:
shouldUpdateSleepModeStateForState:changeReason:previousState:
wakeUpResultsNotificationFromUserInfo:
goalAchievedUserInfoKeyForCategory:
goalAchievedQuantityForCategory:userInfo:
initWithCategory:endMorningIndex:goalAchieved:notificationVariant:userFirstName:
categoryIdentifier
userInfo
isEqualToNotification:
isOneNight
goalAchievedUserInfoValue
goalAchieved
endMorningIndex
_category
_goalAchieved
_endMorningIndex
_notificationVariant
_userFirstName
TQ,R,N,V_category
T@"HKQuantity",R,C,N,V_goalAchieved
Tq,R,N,V_endMorningIndex
Tq,R,N,V_notificationVariant
T@"NSString",R,C,N,V_userFirstName
T@"NSDictionary",R,C,N
retryCriteria
retryActivity
notificationAttemptWindowForWakeUpBeforeDate:
isWakeUpResultsNotificationEnabled
initWithEnvironment:retryAttemptScheduler:
performImmediateQueryForNotification
_sleepScheduleModel
_updateState
_trackingDelayDuration
_lock_startQuery
_isDelayingForTracking
_isWaitingForWakeUp
queryResultFuture
goalProgressEngine
retryAttemptScheduler
_queryResultFuture
_goalProgressEngine
_retryAttemptScheduler
T@"HDSPWakeUpResultsNotificationStateMachine",R,N,V_stateMachine
T@"NAFuture",R,N,V_queryResultFuture
T@"HKSHGoalProgressEngine",R,N,V_goalProgressEngine
T@"<HDSPActivityScheduler>",R,N,V_retryAttemptScheduler
initWithInfo:keySets:
_createKeySetMapForKeySets:
keySets
_accumulateKeysWithBlock:includeVersionInfo:isForSync:
allKeysToPersist
allKeysToSync
allPerGizmoKeys
allDefaultValues
shouldPersistKey:
shouldSyncKey:
_keySetForKey:
keySetForIdentifier:
filteredKeySetsWithKeysToSync:
info
_keySetMap
_info
T@"HDSPSyncedDefaultsInfo",R,N,V_info
T@"NSArray",R,N
T@"NSSet",R,N
T@"NSDictionary",R,N
initWithDataVersionKey:currentDataVersion:cloudDataVersionKey:currentCloudDataVersion:cloudSyncEnabledKey:localDataVersionKey:currentLocalDataVersion:
dataVersionKey
currentDataVersion
cloudDataVersionKey
currentCloudDataVersion
cloudSyncEnabledKey
localDataVersionKey
currentLocalDataVersion
_dataVersionKey
_currentDataVersion
_cloudDataVersionKey
_currentCloudDataVersion
_cloudSyncEnabledKey
_localDataVersionKey
_currentLocalDataVersion
T@"NSString",R,C,N,V_dataVersionKey
TQ,R,N,V_currentDataVersion
T@"NSString",R,C,N,V_cloudDataVersionKey
TQ,R,N,V_currentCloudDataVersion
T@"NSString",R,N,V_cloudSyncEnabledKey
T@"NSString",R,C,N,V_localDataVersionKey
TQ,R,N,V_currentLocalDataVersion
initWithIdentifier:modficationDateKey:keysToPersist:keysToSync:
initWithIdentifier:modficationDateKey:keysToPersist:keysToSync:perGizmoKeys:defaultValues:
modificationDateKey
keysToPersist
keysToSync
perGizmoKeys
defaultValues
_identifier
_modificationDateKey
_keysToPersist
_keysToSync
_perGizmoKeys
_defaultValues
T@"NSString",R,C,N,V_identifier
T@"NSString",R,C,N,V_modificationDateKey
T@"NSSet",R,N,V_keysToPersist
T@"NSSet",R,N,V_keysToSync
T@"NSSet",R,N,V_perGizmoKeys
T@"NSDictionary",R,N,V_defaultValues
_evaluateChangesFromObject:toObject:outChangeSet:
_loadPersistedModel
_restorePersistedModelWithScheduleData:settingsData:recordData:
_persistModel:
_persistSchedule:
_persistSettings:
_persistRecord:
evaluateSleepScheduleAdd:
evaluateSleepScheduleUpdate:
evaluateSleepScheduleRemove
evaluateSleepSettingsAdd:
evaluateSleepSettingsUpdate:
evaluateSleepRecordAdd:
evaluateSleepRecordUpdate:
evaluateSleepScheduleModelChange:
lastSchedule
setLastSchedule:
lastSettings
setLastSettings:
lastRecord
setLastRecord:
_lastSchedule
_lastSettings
_lastRecord
T@"HKSPSleepSchedule",C,N,V_lastSchedule
T@"HKSPSleepSettings",C,N,V_lastSettings
T@"HKSPSleepEventRecord",C,N,V_lastRecord
_sendMessage:onService:
_allowedMessageClasses
service:didReceiveMessage:
initWithEnvironment:localService:cloudService:
sendNotifiedForEarlyWakeUpMessage
sendTestIDSMessage
_shouldSyncSleepModeWithReason:
_shouldSyncMessage
_shouldSyncAlarmMessageFromSource:
sendMessage:
_shouldSendCloudMessage:
_shouldHandleMessageFromService:
_handleReceivedMessage:
_handleSetSleepModeMessage:
_handleConfirmWakeUpMessage:
_handleDismissGoodMorningMessage:
_handleNotifiedForEarlyWakeUpMessage:
_handleSleepAlarmDismissedMessage:
_handleSleepAlarmSnoozedMessage:
_handleTestMessage:
localService
cloudService
_localService
_cloudService
T@"<HDSPIDSService>",R,N,V_localService
T@"<HDSPIDSService>",R,N,V_cloudService
_isActivityDateInDetectionWindow:type:
descriptionWithMultilinePrefix:
descriptionBuilderWithMultilinePrefix:
succinctDescription
date
_date
T@"NSDate",R,N,V_date
assertionWithIdentifier:
assertionWithIdentifier:timeout:
releaseAssertion
initWithIdentifier:timeout:
_locked_release
signpost_id
assertionLock
_assertionLock
_signpost_id
TQ,R,N,V_signpost_id
T{os_unfair_lock_s=I},R,N,V_assertionLock
donateRelevanceForWidgetState:
_setRelevantShortcuts:
_store
initWithDismissedDate:
dismissedDate
scheduledEventIsDue
eventProviderHasUpcomingEvents:
eventProviderCancelledEvents:
initWithEnvironment:schedulerProvider:throttlerProvider:
rescheduleEvents
_lock_rescheduleEvents
_lock_shouldScheduleEvents
_loadLastStandardSleepEvent
_lock_updateLastStandardSleepEvent:
_schedulePendingEvents
lastEventTriggerDate
setLastEventTriggerDate:
lastStandardSleepEvent
_lock_scheduledEventIsDue
_shouldNotifyHandler:forEvent:
addEventProvider:
removeEventProvider:
addEventHandler:
removeEventHandler:
_allSleepEvents
setLastStandardSleepEvent:
scheduleLock
sleepEvents
eventHandlers
eventProviders
pendingEventProviders
scheduler
throttler
_scheduleLock
_lastStandardSleepEvent
_sleepEvents
_eventHandlers
_eventProviders
_pendingEventProviders
_scheduler
_throttler
T{os_unfair_lock_s=I},R,N,V_scheduleLock
T@"HDSPSleepEventList",R,N,V_sleepEvents
T@"HKSPObserverSet",R,N,V_eventHandlers
T@"NSHashTable",R,N,V_eventProviders
T@"NSHashTable",R,N,V_pendingEventProviders
T@"<HDSPEventScheduler>",R,N,V_scheduler
T@"HKSPThrottler",R,N,V_throttler
T@"HKSPSleepEvent",&,N,V_lastStandardSleepEvent
T@"NSDate",&,N
hdsp_startSession
hdsp_stopSession
hdsp_persistSessions:
initWithEnvironment:sleepAlarmProvider:
currentSleepAlarms
resetSleepAlarmSnoozeState
sleepAlarmProvider
_sleepAlarmProvider
T@"<HDSPSleepAlarmProvider>",R,N,V_sleepAlarmProvider
keyValueStoreDidChange:
_createKVS
_accumulator
initWithProcessStateProvider:
isProcessSuspended:
startMonitoringProcessState:
stopMonitoringProcessState:
_updateConfiguration
_process:didUpdateFromState:toState:
_processStateMonitor
_processIdentifiers
_processStateProvider
T@"<HDSPProcessStateManagerDelegate>",W,N,V_delegate
handleSignificantTimeChange
handleTimeZoneChange
T@"HDSPEnvironment",R,W,N,Venvironment
scheduleEventForDate:options:
unschedule
T@"<HDSPEventScheduleDelegate>",W,N
initWithCurrentDateProvider:
T@"<HDSPEventScheduleDelegate>",W,N,Vdelegate
addEvents:provider:
_sortEvents
removeEventsForProvider:
removeEvents:
removeAllEvents
nextEvent
overdueEventsForDate:
allEvents
eventsByProvider
sortedEvents
_eventsByProvider
_sortedEvents
T@"NSMutableDictionary",R,N,V_eventsByProvider
T@"NSArray",R,N,V_sortedEvents
_platformSpecificReadyProviderForEnvironment:
initWithEnvironment:watchOnWristMonitor:devicePowerMonitor:deviceUnlockMonitor:
initWithEnvironment:watchOnWristMonitor:devicePowerMonitor:deviceUnlockMonitor:systemReadyProvider:applicationWorkspaceMonitor:
deviceUnlockMonitor
applicationWorkspaceMonitor
watchOnWristMonitor
systemReadyProvider
systemReady
systemMonitorLock
_systemReady
_systemMonitorLock
_deviceUnlockMonitor
_devicePowerMonitor
_applicationWorkspaceMonitor
_watchOnWristMonitor
_systemReadyProvider
T@"<HDSPSystemReadyProvider>",R,N,V_systemReadyProvider
TB,R,N,V_systemReady
T{os_unfair_lock_s=I},R,N,V_systemMonitorLock
T@"HDSPDeviceUnlockMonitor",R,N,V_deviceUnlockMonitor
T@"HDSPDevicePowerMonitor",R,N,V_devicePowerMonitor
T@"HDSPApplicationWorkspaceMonitor",R,N,V_applicationWorkspaceMonitor
T@"HDSPWatchOnWristMonitor",R,N,V_watchOnWristMonitor
assertionClassForType:
takeAssertionWithIdentifier:type:
takeAssertionWithIdentifier:type:timeout:
takeIndefiniteAssertionWithIdentifier:type:
takeAssertion:
releaseAssertionWithIdentifier:
activeAssertionIdentifiersOfType:
_assertionsOfType:
assertionsLock
assertions
setAssertions:
_assertionsLock
_assertions
T{os_unfair_lock_s=I},R,N,V_assertionsLock
T@"NSMutableDictionary",&,N,V_assertions
transaction
transactionLock
timer
_transactionLock
_transaction
_timer
T@"NSObject<OS_os_transaction>",R,N,V_transaction
T{os_unfair_lock_s=I},R,N,V_transactionLock
T@"NSObject<OS_dispatch_source>",R,N,V_timer
sleepScheduleStateDidChange:previousState:context:
snoozeFireDateShouldBeReset
previousOccurrence
_updateSleepScheduleState
_updateEventRecordForSleepScheduleState:context:notifyBlock:
_updateEventRecordHelper:sleepScheduleState:context:
currentSleepScheduleState
T@"HDSPSleepScheduleStateCoordinatorStateMachine",R,N,V_stateMachine
initWithSleepModeOn:
sleepModeOn
_sleepModeOn
TB,R,N,V_sleepModeOn
initWithDaySummaries:morningIndexRange:userFirstName:
buildNotification
_didMeetSleepDurationGoalLastNight
_sleepDurationGoalAchievedTwoWeekNotification
_sleepDurationGoalAchievedShortWeekNotification
_sleepDurationGoalAchievedLastNightNotification
_randomNotificationVariantForCategory:
_notificationForCategory:morningIndexRange:goalAchieved:
T@"NSString",R,N,V_userFirstName
sleepModePublisher
biomeSleepModeStateForSleepModeState:
biomeSleepModeChangeReasonForSleepModeChangeReason:
initWithEnvironment:biomeInterface:
subscribe:callback:
unsubscribe:
_shouldWriteToBiome
_writeSleepModeToBiome:reason:
biomeInterface
_biomeInterface
T@"<HDSPBiomeInterface>",R,N,V_biomeInterface
sendEvent:toStream:
T@"BMBiomeScheduler",R,N,V_scheduler
goodMorningAlertLock
goodMorningAlertObservers
_goodMorningAlertLock
_goodMorningAlertObservers
T{os_unfair_lock_s=I},R,N,V_goodMorningAlertLock
T@"HDSPGoodMorningAlertStateMachine",R,N,V_stateMachine
T@"HKSPObserverSet",R,N,V_goodMorningAlertObservers
initWithEnvironment:notificationPublishers:
bedtimeReminderWasConfirmed
bedtimeReminderWasDismissed
wakeNotificationWasDismissed
_tearDownChargingReminder
_tearDownBedtimeReminder
_tearDownWindDownReminder
_tearDownWakeDetectionNotification
_tearDownMorningNotification
_rescheduleEvents
_bedtimeNotificationEventAfterDate:
_windDownNotificationEventAfterDate:
_bedtimeOrWindDownNotificationsEnabled
_bedtimeOrWindDownNotificationEventIsDue:
notificationPublishers
_notificationPublishers
T@"NSArray",R,N,V_notificationPublishers
reloadSleepWidget
_timelineController
createSleepFocusMode:
removeSleepFocusMode:
hasSleepFocusMode:
sleepFocusConfiguration:
invalidate
T@"<HKSPSleepFocusModeBridgeDelegate>",W,N
isNotificationEnabled
T@"HDSPWakeUpResultsNotificationStateMachine",R,W,D,N
T@"<HDSPWakeUpResultsNotificationStateMachineInfoProvider>",R,N
notificationEnabled
TB,R,N,GisNotificationEnabled
_latestDateInAlarms:dateBlock:
_isValidSnoozeDate:
confirmAwakeNotification
confirmAwakeNotificationOnDate:
confirmAwakeNotificationOnDate:confirmUntilDate:
dismissGoodMorning
dismissGoodMorningOnDate:
dismissSleepLock
sleepAlarmDismissedOnDate:source:
sleepAlarmSnoozedUntilDate:source:
sleepAlarmWasModified
userNotificationWithIdentifier:notification:actionHandler:
initWithIdentifier:notification:actionHandler:
actionHandler
_actionHandler
T@"NSString",R,N,V_identifier
T^{__CFUserNotification=},R,N,V_notification
T@?,R,C,N,V_actionHandler
explicitDetectingState
activityDetectingState
_explicitDetectingState
_activityDetectingState
T@"<HDSPWakeDetectionStateMachineDelegate>",R,W,D,N
T@"<HDSPWakeDetectionStateMachineInfoProvider>",R,W,D,N
T@"HDSPWakeDetectionDisabledState",R,N,V_disabledState
T@"HDSPWakeDetectionWaitingState",R,N,V_waitingState
T@"HDSPWakeDetectionExplicitDetectingState",R,N,V_explicitDetectingState
T@"HDSPWakeDetectionActivityDetectingState",R,N,V_activityDetectingState
T@"HDSPWakeDetectionNotifiedState",R,N,V_notifiedState
T@"HDSPEnvironmentStateMachine",R,W,D,N
combinedEvaluation:
emptyEvaluation
significantChangeWithTopLevelChangeKeys:
significantEventRecordUpdateWithTopLevelChangeKeys:
initWithIsSignificantChange:isSignificantEventRecordUpdate:topLevelChangeKeys:
isSignificantChange
isSignificantEventRecordUpdate
topLevelChangeKeys
_isSignificantChange
_isSignificantEventRecordUpdate
_topLevelChangeKeys
TB,R,N,V_isSignificantChange
TB,R,N,V_isSignificantEventRecordUpdate
T@"NSSet",R,N,V_topLevelChangeKeys
batteryLevel
isChargingOverride
setIsChargingOverride:
batteryLevelOverride
setBatteryLevelOverride:
_isChargingOverride
_batteryLevelOverride
T@"NSNumber",&,N,V_isChargingOverride
T@"NSNumber",&,N,V_batteryLevelOverride
Tf,R,N
offState
windDownState
bedtimeState
bedtimeInProgressState
greetingState
_offState
_windDownState
_bedtimeState
_bedtimeInProgressState
_greetingState
T@"<HDSPSleepLockScreenStateMachineDelegate>",R,W,D,N
T@"<HDSPSleepLockScreenStateMachineInfoProvider>",R,W,D,N
T@"HDSPSleepLockScreenOffState",R,N,V_offState
T@"HDSPSleepLockScreenWindDownState",R,N,V_windDownState
T@"HDSPSleepLockScreenBedtimeState",R,N,V_bedtimeState
T@"HDSPSleepLockScreenBedtimeInProgressState",R,N,V_bedtimeInProgressState
T@"HDSPSleepLockScreenGreetingState",R,N,V_greetingState
scheduleActivity:activityHandler:
unscheduleActivities
eventNames
eventNamesLock
_eventNamesLock
_callbackScheduler
_eventNames
T@"<NAScheduler>",R,N,V_callbackScheduler
T@"NSMutableSet",R,N,V_eventNames
T{os_unfair_lock_s=I},R,N,V_eventNamesLock
deferIfNecessary
name
options
initWithEventName:options:criteria:
initWithEventName:options:criteria:activity:
criteria
activity
_options
_name
_criteria
_activity
T@"NSObject<OS_xpc_object>",R,N,V_criteria
T@"NSObject<OS_xpc_object>",R,N,V_activity
T@"NSString",R,C,N,V_name
TQ,R,N,V_options
emptyResult
saveFailedWithError:
initWithSuccess:changeEvaluation:error:shouldNotify:
success
changeEvaluation
error
shouldNotify
_success
_shouldNotify
_changeEvaluation
_error
TB,R,N,V_success
T@"HDSPSleepScheduleModelChangeEvaluation",R,N,V_changeEvaluation
T@"NSError",R,N,V_error
TB,R,N,V_shouldNotify
createSuggestedHomeScreenPageWithCompletion:
initWithSleepFocusModeBridge:
sleepFocusModeBridge
_sleepFocusModeBridge
T@"<HKSPSleepFocusModeBridge>",R,N,V_sleepFocusModeBridge
initWithGoodMorningDismissedDate:
goodMorningDismissed
significantTimeChange
timeZoneChange
scheduleModelChanged:
wakeUpState
delayedWakeUpState
initialState
_wakeUpState
_delayedWakeUpState
_initialState
T@"<HDSPSleepScheduleStateCoordinatorStateMachineDelegate>",R,W,D,N
T@"<HDSPSleepScheduleStateCoordinatorStateMachineInfoProvider>",R,W,D,N
T@"HDSPSleepScheduleStateCoordinatorDisabledState",R,N,V_disabledState
T@"HDSPSleepScheduleStateCoordinatorWakeUpState",R,N,V_wakeUpState
T@"HDSPSleepScheduleStateCoordinatorBedtimeState",R,N,V_bedtimeState
T@"HDSPSleepScheduleStateCoordinatorWindDownState",R,N,V_windDownState
T@"HDSPSleepScheduleStateCoordinatorDelayedWakeUpState",R,N,V_delayedWakeUpState
T@"HDSPSleepScheduleStateCoordinatorInitialState",R,N,V_initialState
localServiceWithScheduler:
cloudServiceWithScheduler:
sendMessage:completion:
isCloudService
T@"<HDSPIDSServiceDelegate>",W,N
service:account:incomingOpportunisticData:withIdentifier:fromID:context:
service:didSendOpportunisticDataWithIdentifier:toIDs:
service:account:incomingMessage:fromID:context:
service:account:incomingData:fromID:context:
service:account:incomingUnhandledProtobuf:fromID:context:
service:account:incomingResourceAtURL:fromID:context:
service:account:incomingResourceAtURL:metadata:fromID:context:
service:account:incomingPendingMessageOfType:fromID:context:
service:activeAccountsChanged:
service:devicesChanged:
service:nearbyDevicesChanged:
service:connectedDevicesChanged:
service:linkedDevicesChanged:
service:account:identifier:didSendWithSuccess:error:
service:account:identifier:didSendWithSuccess:error:context:
service:account:identifier:sentBytes:totalBytes:
service:account:identifier:hasBeenDeliveredWithContext:
service:account:identifier:fromID:hasBeenDeliveredWithContext:
service:account:inviteReceivedForSession:fromID:
service:account:inviteReceivedForSession:fromID:withOptions:
service:account:inviteReceivedForSession:fromID:withContext:
service:account:receivedGroupSessionParticipantUpdate:
service:account:receivedGroupSessionParticipantUpdate:context:
service:account:receivedGroupSessionParticipantDataUpdate:
serviceSpaceDidBecomeAvailable:
serviceAllowedTrafficClassifiersDidReset:
service:didSwitchActivePairedDevice:acknowledgementBlock:
initWithIsCloudService:scheduler:
_loggingDescription
_sendSerializedMessage:identifier:completion:
_localDestinations
_cloudDestinations
_service
_isCloudService
TB,R,N,V_isCloudService
T@"<HDSPIDSServiceDelegate>",W,N,V_delegate
contextWithSource:
contextByApplyingChangeEvaluation:
initWithSource:changeEvaluation:
source
_source
T@"<HDSPSource>",R,N,V_source
sleepSessionWithDateInterval:sleepIntervals:endReason:metadata:requiresFirstUnlock:
supportsSecureCoding
TB,R
initWithDateInterval:sleepIntervals:endReason:metadata:requiresFirstUnlock:
interval
sleepIntervals
endReason
metadata
requiresFirstUnlock
_requiresFirstUnlock
_interval
_sleepIntervals
_endReason
_metadata
T@"NSDateInterval",R,N,V_interval
T@"NSArray",R,N,V_sleepIntervals
TQ,R,N,V_endReason
T@"NSDictionary",R,N,V_metadata
TB,R,N,V_requiresFirstUnlock
sleepSessionIntervalWithInterval:type:
initWithInterval:type:
_type
TQ,R,N,V_type
sleepStorageDidChangeExternally:
observedApplicationDidInstall:
observedApplicationDidUninstall:
observedApplicationBundleIdentifiers
_loadSleepScheduleModel:
_locked_loadSleepScheduleModel:
removeSleepScheduleModelWithError:
_locked_notifyObserversForSleepScheduleModelChange:
_locked_sleepScheduleModel
_loadSleepSchedule:
_locked_loadSleepSchedule:
_locked_saveSleepSchedule:error:
_locked_saveSleepSchedule:
_locked_setSleepSchedule:
_locked_updateSleepSchedule:
_locked_applyNecessaryChangesBeforeSavingSleepSchedule:validationResult:
_locked_applyNecessaryEventRecordChangesBeforeSavingSleepSchedule:validationResult:
_locked_validateSleepSchedule:generateValidSchedule:
_locked_removeSleepSchedule
notifyObserversForSleepScheduleChange:
_locked_notifyObserversForSleepScheduleChange:
_loadSleepSettings:
_locked_loadSleepSettings:
_locked_saveSleepSettings:error:
_locked_saveSleepSettings:
_locked_setSleepSettings:
_locked_updateSleepSettings:
_locked_resetSleepSettings
notifyObserversForSleepSettingsChange:
_locked_notifyObserversForSleepSettingsChange:
_loadSleepEventRecord:
_locked_loadSleepEventRecord:
_locked_saveSleepEventRecord:error:
saveSleepEventRecord:error:preNotifyBlock:
_locked_saveSleepEventRecord:error:preNotifyBlock:
_locked_saveSleepEventRecord:
_locked_updateSleepEventRecord:
_locked_applyNecessaryChangesBeforeSavingSleepEventRecord:
_locked_applyNecessarySleepSettingsChangesBeforeSavingSleepEventRecord:
_locked_setSleepEventRecord:
_locked_resetSleepEventRecord
_locked_updateModelWithBlock:persistBlock:error:
_locked_canApplyChangesFrom:to:error:
_locked_applyNecessaryChangesBeforeSaving:
notifyObserversForSleepEventRecordChange:
_locked_notifyObserversForSleepEventRecordChange:
sleepEventRecord
_earliestDateToScheduleEventsForDate:
_shouldTurnOffWatchSleepFeatures
_turnOffWatchSleepFeatures
_shouldTurnOffSleepSchedule
_turnOffSleepSchedule
storeLock
changeEvaluator
_storeLock
_sleepSchedule
_sleepSettings
_sleepEventRecord
_changeEvaluator
T{os_unfair_lock_s=I},R,N,V_storeLock
T@"HDSPSleepScheduleModelChangeEvaluator",R,N,V_changeEvaluator
T@"HKSPSleepSchedule",R,N,V_sleepSchedule
T@"HKSPSleepSettings",R,N,V_sleepSettings
T@"HKSPSleepEventRecord",R,N,V_sleepEventRecord
initWithCallbackScheduler:isAppleWatch:
isSpringboardStarted
_checkSpringBoardStarted
_processName
_startMonitoring
_checkAndNotify
_stopMonitoring
notifyToken
springboardStarted
springboardStartedLock
_isAppleWatch
_springboardStarted
_notifyToken
_springboardStartedLock
TB,R,N,V_isAppleWatch
Ti,R,N,V_notifyToken
TB,R,N,V_springboardStarted
T{os_unfair_lock_s=I},R,N,V_springboardStartedLock
_generateUniqueIdentifierForNotificationIdentifierPrefix:eventDate:
_stringForEventDate:
initWithEnvironment:notificationCenter:
_notificationRequestForEvent:userInfo:
_publishNotificationRequest:
_notificationRequestIdentifierForEvent:
_notificationIdentifierPrefixForEventIdentifier:
_notificationContentForEventIdentifier:userInfo:
_contentByAddingCommonUserInfoTo:
_bedtimeReminderContent
_windDownReminderContent
_windDownReminderBodyContent
_localizedBedtimeOrWindDownReminderBodyWithKey:embeddingTimeForEvent:
_chargingReminderContentWithUserInfo:
_chargingReminderBodyForAlarmEnabled:sleepTrackingEnabled:
_wakeDetectionContentWithUserInfo:
_wakeUpResultsContentWithUserInfo:
T@"UNUserNotificationCenter",R,N,V_notificationCenter
shouldGoIntoSleepModeDuringState:
hasSleepFocusMode
manualOffState
manualBedtimeState
automatedOffState
automatedOffFromManualState
_manualOffState
_manualBedtimeState
_automatedOffState
_automatedOffFromManualState
T@"<HDSPSleepModeStateMachineDelegate>",R,W,D,N
T@"<HDSPSleepModeStateMachineInfoProvider>",R,W,D,N
T@"HDSPSleepModeOffState",R,N,V_offState
T@"HDSPSleepModeWindDownState",R,N,V_windDownState
T@"HDSPSleepModeManualOffState",R,N,V_manualOffState
T@"HDSPSleepModeBedtimeState",R,N,V_bedtimeState
T@"HDSPSleepModeManualBedtimeState",R,N,V_manualBedtimeState
T@"HDSPSleepModeAutomatedOffState",R,N,V_automatedOffState
T@"HDSPSleepModeAutomatedOffFromManualState",R,N,V_automatedOffFromManualState
_forceUpdateStateWithChangeReason:
isSleepScheduleDisabled
isAlarmEnabled
_timelineForDate:
_determineNextStateFromTimeline
_scheduleState
T@"HDSPSleepScheduleStateCoordinatorStateMachine",R,W,D,N
TQ,R,N,V_scheduleState
upcomingState
notOnboardedState
_upcomingState
_notOnboardedState
T@"<HDSPSleepWidgetStateMachineDelegate>",R,W,D,N
T@"<HDSPSleepWidgetStateMachineInfoProvider>",R,W,D,N
T@"HDSPSleepWidgetDisabledState",R,N,V_disabledState
T@"HDSPSleepWidgetWaitingState",R,N,V_waitingState
T@"HDSPSleepWidgetUpcomingState",R,N,V_upcomingState
T@"HDSPSleepWidgetWindDownState",R,N,V_windDownState
T@"HDSPSleepWidgetBedtimeState",R,N,V_bedtimeState
T@"HDSPSleepWidgetBedtimeInProgressState",R,N,V_bedtimeInProgressState
T@"HDSPSleepWidgetGreetingState",R,N,V_greetingState
T@"HDSPSleepWidgetNotOnboardedState",R,N,V_notOnboardedState
_handleActivePairedDeviceDidChange:
_keysForChangeNotification:
npsDomainAccessor
_resetNPSDomainAccessor
_handleNanoPreferencesSync:
_registerForNotifications
_npsManager
_npsDomainAccessorQueue
_notifyAccumulator
_npsDomainAccessor
T@"NPSDomainAccessor",R,N,V_npsDomainAccessor
emptyFailureWithError:
initWithSuccess:timelineResults:error:
timelineResults
_timelineResults
T@"HKSPSleepEventTimelineResults",R,N,V_timelineResults
_nextSystemReadyState
_transitionToQueryingState
isChargingReminderDisabled
_inMonitoringWindow
T@"HDSPChargingReminderStateMachine",R,W,D,N
registerForLaunchNotificationWithName:key:
unregisterForLaunchNotificationWithName:key:
_registerForStream:
_handleNotificationWithName:completion:
launchNotificationRegistrations
launchNotificationRegistrationLock
_launchNotificationRegistrationLock
_launchNotificationRegistrations
T@"NSMutableDictionary",R,N,V_launchNotificationRegistrations
T{os_unfair_lock_s=I},R,N,V_launchNotificationRegistrationLock
_alarmServerReady
sleepAlarm:matchesSleepScheduleModel:
sleepScheduleModelFromSleepAlarm:
initWithAlarmManager:
_checkAlarmServer
sleepAlarmsFutureIgnoringCache:
sleepAlarmsFuture
updateSleepAlarms
alarmServerReady
alarmManager
_alarmManager
T@"MTAlarmManager",R,N,V_alarmManager
T@"NAFuture",R,N,V_alarmServerReady
sleepTrackingIsDisabledWithContext:
isTimeAsleepTrackingDisabled
inTrackingWindow
T@"HDSPTimeAsleepTrackerStateMachine",R,W,D,N
_sleepModeChangeReasonForBiomeReason:source:
sleepFocusModeBridge:didUpdateSleepFocusConfiguration:
initWithEnvironment:sleepFocusModeBridge:sleepProactiveBridge:
setSleepMode:
setSleepMode:reason:
_userTurnedOnSleepModeWithReason:
_userTurnedOffSleepModeWithReason:
_automationTurnedOnSleepModeWithReason:
_automationTurnedOffSleepModeWithReason:
_sleepModeTurnedOnForUnknownReason
_sleepModeTurnedOffForUnknownReason
_handleFocusModeEvent:
_shouldHandleBiomeEvent:
_ensureFocusModeCreatedForSleepMode:reason:
notifyObserversForSleepModeChange:previousMode:reason:
_powerLogSleepMode:sleepScreenEnabled:
sleepScreenEnabled
computeUserVisibleEndDate
_isScheduledSleepModeEnabled
_isSleepModeDuringWindDownEnabled
_createFocusModeIfNeeded
createFocusModeWithError:
deleteFocusModeWithError:
createHomeScreenPageWithCompletion:
sleepModeLock
sleepModeObservers
sleepProactiveBridge
_sleepModeLock
_sleepModeObservers
_sleepProactiveBridge
T{os_unfair_lock_s=I},R,N,V_sleepModeLock
T@"HDSPSleepModeStateMachine",R,N,V_stateMachine
T@"HKSPObserverSet",R,N,V_sleepModeObservers
T@"<HDSPSleepFocusModeBridge>",R,N,V_sleepFocusModeBridge
T@"<HDSPSleepProactiveBridge>",R,N,V_sleepProactiveBridge
Tq,N
@24@0:8@16
@16@0:8
B16@0:8
v32@0:8@16@24
v24@0:8@16
v16@0:8
B24@0:8@16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v24@0:8Q16
v40@0:8q16q24Q32
@"<HDSPWakeDetectorDelegate>"16@0:8
v24@0:8@"<HDSPWakeDetectorDelegate>"16
@24@0:8@"HDSPEnvironment"16
@"HDSPEnvironment"16@0:8
v24@0:8@"HDSPEnvironment"16
v24@0:8@?16
{os_unfair_lock_s=I}16@0:8
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"<HDSPWakeDetectorDelegate>"
@"HDSPEnvironment"
v24@0:8@"<HDSPSyncedUserDefaults>"16
v32@0:8@"<HDSPSyncedUserDefaults>"16@"NSSet"24
@32@0:8@16@24
@"NAFuture"32@0:8@"HDSPNotificationListener"16@"NSString"24
@"NSDictionary"16@0:8
@40@0:8@16@24@32
@24@0:8^@16
B32@0:8@16^@24
B24@0:8^@16
@48@0:8#16@24@32^@40
B48@0:8@16@24Q32^@40
@"HDSPSyncedDefaults"
@"HDSPSyncedDefaultsConfiguration"
@"HKSPObserverSet"
v32@0:8Q16Q24
q16@0:8
v40@0:8Q16Q24Q32
@"<HDSPSleepTrackerDelegate>"16@0:8
v24@0:8@"<HDSPSleepTrackerDelegate>"16
@"NAFuture"24@0:8@"HDSPSleepSession"16
@32@0:8@16Q24
@"<HDSPSleepTrackerDelegate>"
@"<HKSPQueueBackedScheduler>"
v24@0:8@"HDSPTimeChangeListener"16
v48@0:8@16{?=qq}24@40
{?=qq}24@0:8@16
@40@0:8{?=qq}16@?32
v32@0:8{?=qq}16
@"<HDSPActivityScheduler>"
@"HKSPAnalyticsManager"
v24@0:8@"NSString"16
v32@0:8Q16@24
v32@0:8Q16@"NSDate"24
@24@0:8Q16
@?16@0:8
@"<NAScheduler>"16@0:8
@"NSDateInterval"24@0:8@"NSDate"16
@"NSDate"16@0:8
@"HKSPSleepScheduleModel"16@0:8
v20@0:8f16
@56@0:8@16@24@32@40@?48
@"HDSPChargingReminderDisabledState"
@"HDSPChargingReminderWaitingState"
@"HDSPChargingReminderMonitoringState"
@"HDSPChargingReminderNotifiedState"
v24@0:8@"HKSPSleepEvent"16
@"NSSet"16@0:8
@"NSArray"24@0:8@"NSDate"16
@"<HDSPSleepEventDelegate>"16@0:8
v24@0:8@"<HDSPSleepEventDelegate>"16
v24@0:8@"NSDate"16
v32@0:8@"HDSPSleepScheduleModelManager"16@"HKSPSleepSchedule"24
v32@0:8@"HDSPSleepScheduleModelManager"16@"HKSPSleepSettings"24
v32@0:8@"HDSPSleepScheduleModelManager"16@"HKSPSleepEventRecord"24
v32@0:8@"HDSPSleepScheduleModelManager"16@"HKSPSleepScheduleModel"24
v20@0:8B16
@32@0:8@16@?24
v32@0:8@16Q24
@"<HDSPSleepEventDelegate>"
@"<HDSPTimeAsleepTracker>"
@"HDSPTimeAsleepTrackerStateMachine"
@"NSArray"
@"HDSPTimeAsleepTrackerDisabledState"
@"HDSPTimeAsleepTrackerWaitingState"
@"HDSPTimeAsleepTrackerAutoTrackingState"
@"HDSPTimeAsleepTrackerActivityTrackingState"
@"HDSPTimeAsleepTrackerActivityAfterWakeUpTrackingState"
@"HDSPTimeAsleepTrackerManualTrackingState"
@"HDSPTimeAsleepTrackerInternalEndState"
d16@0:8
@"HDSPWakeUpResultsNotification"
@"HKHealthStore"
@"HKSPDiagnostics"
v32@0:8q16q24
B24@0:8q16
v32@0:8q16@24
v24@0:8q16
@"NSDictionary"
@"HDSPSleepLockScreenStateMachine"
@"<HDSPSleepLockScreenAssertionManager>"
@40@0:8@16@24@?32
@"<_CDLocalContext>"
v32@0:8@"HDSPSleepSessionManager"16@"HDSPSleepSession"24
v32@0:8@"HDSPSleepSessionManager"16@"NSArray"24
@"NAFuture"32@0:8@"HDSPSleepSessionManager"16@"HDSPSleepSession"24
v24@0:8@"HDSPSleepSessionManager"16
@"HDSPSleepSessionManager"
@"<HDSPSleepTracker>"
v32@0:8q16Q24
@40@0:8q16Q24^@32
@48@0:8@16@24@32@40
@"HDSPSleepWidgetStateMachine"
@"<HDSPWidgetReloader>"
@"HKSPThrottler"
@"<HDSPWidgetRelevanceDonor>"
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^{_NSZone=}16
v40@0:8@16@24Q32
v24@0:8@"<HDSPSleepTracker>"16
v40@0:8@"<HDSPSleepTracker>"16@"HDSPSleepSession"24Q32
@"<HDSPSleepSessionManagerDelegate>"
@"<HDSPSleepSessionPersistence>"
@"HDSPDeviceUnlockMonitor"
v28@0:8q16B24
v24@0:8@"HKSPSleepScheduleModel"16
@"HDSPChargingReminderStateMachine"
Q32@0:8d16d24
@48@0:8@16@24{?=qq}32
q36@0:8q16B24@28
d20@0:8B16
d24@0:8q16
B48@0:8@16Q24@32@40
{?=qq}16@0:8
{?="start"q"duration"q}
@272@0:8@16@?24@?32@?40@?48@?56@?64@?72@?80@?88@?96@?104@?112@?120@128@?136@?144@?152@?160@?168@?176@?184@?192@?200@?208@216@?224@?232@?240@248@?256@264
v32@0:8@?16^{os_unfair_lock_s=I}24
v32@0:8@?16@24
@"_HKBehavior"
@"HDSPSleepScheduleModelManager"
@"HDSPSleepStorage"
@"HDSPSleepEventScheduler"
@"HDSPSleepScheduleStateCoordinator"
@"HDSPSleepModeManager"
@"HDSPSleepTrackingManager"
@"HDSPSleepActionManager"
@"HDSPSleepNotificationManager"
@"HDSPEnvironmentStateMachine"
@"NAFuture"
@"<HKSPUserDefaults>"
@"HDSPSleepStoreServer"
@"HDSPGoodMorningAlertManager"
@"HDSPChargingReminderManager"
@"HDSPWakeDetectionManager"
@"HDSPWakeUpResultsNotificationManager"
@"HDSPSleepAlarmManager"
@"HKSPHealthStoreProvider"
@"HDSPDiagnostics"
@"HDSPNotificationListener"
@"HDSPSleepLockScreenManager"
@"HDSPSleepWidgetManager"
@"HDSPSystemMonitor"
@"HDSPAssertionManager"
@"HDSPTimeChangeListener"
@"HKSPSensitiveUIMonitor"
@"HDSPSleepScheduleModelMigrationManager"
@"HDSPContextStoreManager"
@"HDSPBiomeManager"
@"HDSPIDSServiceManager"
@"HDSPAnalyticsManager"
v32@0:8@16@?24
v24@0:8@?<v@?@"HKSPSyncAnchorContainer"@"NSError">16
v32@0:8@"HKSPSyncAnchorContainer"16@?<v@?B@"NSError">24
v40@0:8q16Q24@?32
v40@0:8@16Q24@?32
v32@0:8Q16@?24
v40@0:8@16@24@?32
v40@0:8q16@24@?32
v32@0:8q16@?24
v24@0:8@?<v@?@"HKSPSleepSchedule"@"NSError">16
v32@0:8@"HKSPSleepSchedule"16@?<v@?@"NSError">24
v24@0:8@?<v@?@"HKSPSleepSettings"@"NSError">16
v32@0:8@"HKSPSleepSettings"16@?<v@?@"NSError">24
v24@0:8@?<v@?@"HKSPSleepEventRecord"@"NSError">16
v32@0:8@"HKSPSleepEventRecord"16@?<v@?@"NSError">24
v24@0:8@?<v@?q@"NSError">16
v40@0:8q16Q24@?<v@?@"NSError">32
v24@0:8@?<v@?Q@"NSError">16
v24@0:8@?<v@?B@"NSError">16
v40@0:8@"NSDate"16Q24@?<v@?B@"NSError">32
v32@0:8Q16@?<v@?B@"NSError">24
v40@0:8@"NSString"16@"NSDictionary"24@?<v@?B@"NSError">32
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v40@0:8q16@"NSDictionary"24@?<v@?B@"NSError">32
v32@0:8q16@?<v@?B@"NSError">24
v20@0:8i16
v24@0:8@"HKSPXPCClient"16
@40@0:8@16@?24@32
@"HKSPXPCConnectionListener"
@"HDSPProcessStateManager"
@"HKSPPersistentSyncAnchorContainer"
@"<HDSPSystemReadyDelegate>"16@0:8
v24@0:8@"<HDSPSystemReadyDelegate>"16
@"<HDSPSystemReadyDelegate>"
@"HDSPSpringboardMonitor"
v32@0:8q16@"NSDictionary"24
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
@"<HDSPSleepLockScreenAssertionManagerDelegate>"16@0:8
v24@0:8@"<HDSPSleepLockScreenAssertionManagerDelegate>"16
@"NSXPCListener"
@"NSXPCConnection"
@"<HDSPSleepLockScreenAssertionManagerDelegate>"
@"SBSLockScreenRemoteContentAssertion"
@"NSNumber"
v32@0:8@"HKSPSleepEvent"16@"NSDictionary"24
@24@0:8B16B20
v72@0:8@16@24@32@40@48B56B60@?64
@"NSMutableDictionary"
@"NSString"
v24@0:8@"HKWristDetectionSettingManager"16
@"HKWristDetectionSettingManager"
@28@0:8^@16B24
@"HDSPGoodMorningAlertDisabledState"
@"HDSPGoodMorningAlertWaitingState"
@"HDSPGoodMorningAlertPresentingState"
v24@0:8@"NSArray"16
v32@0:8@"NSArray"16@"NSArray"24
@"HDSPCFUserNotification"
@"HDSPCFUserNotificationCenter"
@"NSMutableArray"
@"NSDate"
@"NSObject<OS_dispatch_source>"
@"HDSPEnvironmentNotReadyState"
@"HDSPEnvironmentMigrationState"
@"HDSPEnvironmentReadyState"
@"HDSPEnvironmentDemoState"
v24@0:8@"NSError"16
@"HDSPWakeUpResultsNotificationWaitingForWakeUpState"
@"HDSPWakeUpResultsNotificationDelayingForTrackingState"
@"HDSPWakeUpResultsNotificationWaitingForRetryState"
@"HDSPWakeUpResultsNotificationQueryingState"
@"HDSPWakeUpResultsNotificationNeedsProtectedDataState"
@"HDSPWakeUpResultsNotificationNotifiedState"
@"HDSPWakeUpResultsNotificationDisabledState"
v28@0:8B16@20
f24@0:8@16
v28@0:8f16@20
q24@0:8@16
@24@0:8@"NSString"16
v32@0:8@16@"NSString"24
B24@0:8@"NSString"16
v28@0:8B16@"NSString"20
f24@0:8@"NSString"16
v28@0:8f16@"NSString"20
q24@0:8@"NSString"16
v32@0:8q16@"NSString"24
@"NSData"24@0:8@"NSString"16
@"NSDictionary"24@0:8@"NSSet"16
v24@0:8@"NSDictionary"16
v24@0:8@"NSSet"16
v24@0:8@"<HDSPSyncedUserDefaultsExternalChangeDelegate>"16
@56@0:8@16@24@?32@?40d48
v28@0:8@16B24
v36@0:8@16@?24B32
@"<HDSPSyncedUserDefaults>"
@"NSMutableSet"
@"HKSPAccumulator"
@"<HDSPSyncedUserDefaultsExternalChangeDelegate>"
v32@0:8@"<HDSPWakeDetector>"16@"NSDate"24
@"NSDateInterval"24@0:8Q16
@"HKSPSleepScheduleOccurrence"16@0:8
@40@0:8Q16@24@32
@"HDSPWakeDetectionStateMachine"
B40@0:8Q16Q24Q32
@32@0:8Q16@24
@56@0:8Q16q24@32q40@48
@"HKQuantity"
@"HDSPWakeUpResultsNotificationStateMachine"
@"HKSHGoalProgressEngine"
@32@0:8@?16B24B28
@"HDSPSyncedDefaultsInfo"
@72@0:8@16Q24@32Q40@48@56Q64
@64@0:8@16@24@32@40@48@56
@"NSSet"
Q40@0:8@16@24^@32
v40@0:8@16@24@32
@"HKSPSleepSchedule"
@"HKSPSleepSettings"
@"HKSPSleepEventRecord"
v32@0:8@"<HDSPIDSService>"16@"<HDSPIDSMessage>"24
B24@0:8Q16
@"<HDSPIDSService>"
B32@0:8@16Q24
@"NSString"24@0:8@"NSString"16
@"BSDescriptionBuilder"24@0:8@"NSString"16
@"BSDescriptionBuilder"16@0:8
@32@0:8@16d24
@32@0:8@"NSString"16d24
@"INRelevantShortcutStore"
v24@0:8@"<HDSPSleepEventProvider>"16
@40@0:8@16@?24@?32
@"HKSPSleepEvent"
@"HDSPSleepEventList"
@"NSHashTable"
@"<HDSPEventScheduler>"
@"NAFuture"24@0:8@"NSArray"16
@"<HDSPSleepAlarmProvider>"
@"NSUbiquitousKeyValueStore"
@24@0:8@?16
B20@0:8i16
@"RBSProcessMonitor"
@"<HDSPProcessStateManagerDelegate>"
v32@0:8@"NSDate"16Q24
@"<HDSPEventScheduleDelegate>"16@0:8
v24@0:8@"<HDSPEventScheduleDelegate>"16
@"<HDSPEventScheduleDelegate>"
@"HDSPDevicePowerMonitor"
@"HDSPApplicationWorkspaceMonitor"
@"HDSPWatchOnWristMonitor"
@"<HDSPSystemReadyProvider>"
#24@0:8Q16
v40@0:8@16Q24d32
@"NSObject<OS_os_transaction>"
v40@0:8Q16Q24@32
v40@0:8Q16Q24@"HDSPSleepScheduleStateCoordinatorStateMachineContext"32
v40@0:8Q16@24@?32
B40@0:8@16Q24@32
@"HDSPSleepScheduleStateCoordinatorStateMachine"
@20@0:8B16
@48@0:8@16{?=qq}24@40
q24@0:8Q16
@48@0:8Q16{?=qq}24@40
Q24@0:8q16
Q24@0:8Q16
@"<HDSPBiomeInterface>"
@32@0:8@16@?<v@?@"<BMStoreData>">24
v32@0:8@"<BMStoreData>"16@"<BMSourceStream>"24
@"BMBiomeScheduler"
@"HDSPGoodMorningAlertStateMachine"
@"CHSTimelineController"
@"HKSPSleepFocusConfiguration"24@0:8^@16
@"<HKSPSleepFocusModeBridgeDelegate>"16@0:8
v24@0:8@"<HKSPSleepFocusModeBridgeDelegate>"16
@40@0:8@16^{__CFUserNotification=}24@?32
^{__CFUserNotification=}16@0:8
^{__CFUserNotification=}
@"HDSPWakeDetectionDisabledState"
@"HDSPWakeDetectionWaitingState"
@"HDSPWakeDetectionExplicitDetectingState"
@"HDSPWakeDetectionActivityDetectingState"
@"HDSPWakeDetectionNotifiedState"
@32@0:8B16B20@24
f16@0:8
@"HDSPSleepLockScreenOffState"
@"HDSPSleepLockScreenWindDownState"
@"HDSPSleepLockScreenBedtimeState"
@"HDSPSleepLockScreenBedtimeInProgressState"
@"HDSPSleepLockScreenGreetingState"
v32@0:8@"<HDSPActivity>"16@?<v@?@"<HDSPActivity>">24
@"<NAScheduler>"
@40@0:8@16Q24@32
@48@0:8@16Q24@32@40
@"NSObject<OS_xpc_object>"
@40@0:8B16@20@28B36
@"HDSPSleepScheduleModelChangeEvaluation"
@"NSError"
@"<HKSPSleepFocusModeBridge>"
v24@0:8@"HDSPSleepScheduleModelChangeEvaluation"16
@"HDSPSleepScheduleStateCoordinatorDisabledState"
@"HDSPSleepScheduleStateCoordinatorWakeUpState"
@"HDSPSleepScheduleStateCoordinatorBedtimeState"
@"HDSPSleepScheduleStateCoordinatorWindDownState"
@"HDSPSleepScheduleStateCoordinatorDelayedWakeUpState"
@"HDSPSleepScheduleStateCoordinatorInitialState"
v32@0:8@"<HDSPIDSMessage>"16@?<v@?B@"NSError">24
@"<HDSPIDSServiceDelegate>"16@0:8
v24@0:8@"<HDSPIDSServiceDelegate>"16
v64@0:8@16@24@32@40@48@56
v56@0:8@16@24@32@40@48
v56@0:8@16@24q32@40@48
v52@0:8@16@24@32B40@44
v60@0:8@16@24@32B40@44@52
v56@0:8@16@24@32q40q48
v48@0:8@16@24@32@40
v64@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"NSString"48@"IDSMessageContext"56
v40@0:8@"IDSService"16@"NSString"24@"NSArray"32
v56@0:8@"IDSService"16@"IDSAccount"24@"NSDictionary"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSData"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSProtobuf"32@"NSString"40@"IDSMessageContext"48
v56@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSString"40@"IDSMessageContext"48
v64@0:8@"IDSService"16@"IDSAccount"24@"NSURL"32@"NSDictionary"40@"NSString"48@"IDSMessageContext"56
v56@0:8@"IDSService"16@"IDSAccount"24q32@"NSString"40@"IDSMessageContext"48
v32@0:8@"IDSService"16@"NSSet"24
v32@0:8@"IDSService"16@"NSArray"24
v52@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44
v60@0:8@"IDSService"16@"IDSAccount"24@"NSString"32B40@"NSError"44@"IDSMessageContext"52
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32q40q48
v48@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@40
v56@0:8@"IDSService"16@"IDSAccount"24@"NSString"32@"NSString"40@48
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSDictionary"48
v56@0:8@"IDSService"16@"IDSAccount"24@"IDSSession"32@"NSString"40@"NSData"48
v40@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32
v48@0:8@"IDSService"16@"IDSAccount"24@"IDSGroupSessionParticipantUpdate"32@"IDSMessageContext"40
v24@0:8@"IDSService"16
v40@0:8@"IDSService"16@"IDSDevice"24@?<v@?>32
@28@0:8B16@20
@"IDSService"
@"<HDSPIDSServiceDelegate>"
@"<HDSPSource>"
@52@0:8@16@24Q32@40B48
@"NSDateInterval"
v24@0:8@"HDSPSleepStorage"16
@28@0:8@16B24
B40@0:8@16^@24@?32
B40@0:8@?16@?24^@32
B40@0:8@16@24^@32
@"HDSPSleepScheduleModelChangeEvaluator"
i16@0:8
@"UNUserNotificationCenter"
@"HDSPSleepModeOffState"
@"HDSPSleepModeWindDownState"
@"HDSPSleepModeManualOffState"
@"HDSPSleepModeBedtimeState"
@"HDSPSleepModeManualBedtimeState"
@"HDSPSleepModeAutomatedOffState"
@"HDSPSleepModeAutomatedOffFromManualState"
@"HDSPSleepWidgetDisabledState"
@"HDSPSleepWidgetWaitingState"
@"HDSPSleepWidgetUpcomingState"
@"HDSPSleepWidgetWindDownState"
@"HDSPSleepWidgetBedtimeState"
@"HDSPSleepWidgetBedtimeInProgressState"
@"HDSPSleepWidgetGreetingState"
@"HDSPSleepWidgetNotOnboardedState"
@"NPSManager"
@"NSObject<OS_dispatch_queue>"
@"NPSDomainAccessor"
@36@0:8B16@20@28
@"HKSPSleepEventTimelineResults"
v32@0:8r*16@24
@"MTAlarmManager"
Q32@0:8Q16q24
v32@0:8@"<HKSPSleepFocusModeBridge>"16@"HKSPSleepFocusConfiguration"24
@"HDSPSleepModeStateMachine"
@"<HDSPSleepFocusModeBridge>"
@"<HDSPSleepProactiveBridge>"
