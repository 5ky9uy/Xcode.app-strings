<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>22A380007</string>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
<key>CFBundleExecutable</key>
<string>storebookkeeperd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.storebookkeeperd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>14E6097d</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.4</string>
<key>DTSDKBuild</key>
<string>20E5212d</string>
<key>DTSDKName</key>
<string>iphonesimulator16.4.internal</string>
<key>DTXcode</key>
<string>1430</string>
<key>DTXcodeBuild</key>
<string>14E6097d</string>
<key>MinimumOSVersion</key>
<string>16.4</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>DataProtectionClass</key>
<string>NSFileProtectionComplete</string>
<key>application-identifier</key>
<string>com.apple.storebookkeeperd</string>
<key>aps-connection-initiate</key>
<true/>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.authkit.client.internal</key>
<true/>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.private.applemediaservices</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceMediaLibrary</string>
</array>
<key>com.apple.private.tcc.manager.get-identity-for-credential</key>
<true/>
</dict>
</plist>
DataProtectionClass
NSFileProtectionComplete04
application-identifier
com.apple.storebookkeeperd0
aps-connection-initiate
0/*com.apple.accounts.appleaccount.fullaccess
0&!com.apple.authkit.client.internal
com.apple.itunesstored.private
0)$com.apple.private.applemediaservices
com.apple.private.tcc.allow0
kTCCServiceMediaLibrary0>9com.apple.private.tcc.manager.get-identity-for-credential
T@"NSString",R,C,N,V_identifier
SBKBeginTransactionWithItemsToSyncEnumerationBlock:
_accountsDidChangeNotification:
SBKCommitUniversalPlaybackPositionTransaction:domainVersion:metadataEnumerationBlock:
_enabledDomains
SBKQueryForTracksNeedingPushWithEntityRevisionAnchor:orderingTerms:
_operationQueue
SBKUniversalPlaybackPositionMetadata
_targetSyncDate
T@"<SBCPlaybackPositionClientProtocol>",R,N,V_clientProxy
allKeys
T@"APSConnection",R,N,V_connection
beginTransactionWithIdentifier:
T@"ML3MusicLibrary",R,W,N,V_musicLibrary
currentRevision
T@"NSArray",R,N,V_serviceConnections
defaultRenderer
T@"NSMutableArray",R,N,V_openTransactions
initWithDomain:
T@"NSMutableDictionary",R,N,V_registeredAccountsForDomains
initWithPersistentID:inLibrary:
T@"NSMutableSet",&,N,V_ubiquitousIdentifiersToSync
isInTransaction
T@"NSNumber",R,C,N
numberWithBool:
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
removeObserver:
T@"NSString",C,N
T@"NSString",C,N,V_lastSyncedDomainVersion
setUbiquitousIdentifiersToSync:
T@"NSString",R,C,N,V_domain
suspend
.cxx_destruct
TQ,N,V_lastSyncedEntityRevision
SBKCancelUniversalPlaybackPositionTransaction:
_domain
SBKPropertyValueForML3PropertyValue:ML3Property:
_entity
SBKSQLQueryStringForItemsNeedingPush
_storeAccountID
T#,R
allHeaderFields
T@"<SBDPushNotificationControllerDelegate>",W,N,V_delegate
base64EncodedStringWithOptions:
T@"ML3MusicLibrary",&,N,V_musicLibrary
containsObject:
T@"ML3Track",R,N,V_track
dealloc
T@"NSDate",&,N
endTransaction:
T@"NSMutableDictionary",R,N,V_pendingAccountRequests
initWithDomain:dataSource:automaticSynchronizeOptions:isActive:
T@"NSMutableDictionary",R,N,V_weakDomainDelegates
initWithPlaybackPositionDomain:
T@"NSNumber",C,N,V_accountIdentifier
isProxy
T@"NSNumber",R,N,V_storeAccountID
release
T@"NSSet",&,N
T@"NSString",C,N,V_domain
setMaxConcurrentOperationCount:
T@"NSString",R,C
stringFromDate:
T@"NSString",R,N,V_identifier
T@"NSXPCConnection",R,N,V_XPCConnection
T@"NSXPCListener",R,N,V_xpcListener
T@"SBCClientConfiguration",R,N,V_clientConfiguration
T@"SBCPlaybackPositionDomain",R,C,N,V_playbackPositionDomain
T@"SBCPlaybackPositionDomain",R,N,V_domain
T@"SBCPlaybackPositionEntity",R,N,V_entity
T@"SBDDomainSyncServiceHandler",R,N,V_syncHandler
T@"SBDDomainSyncedStorageController",R,N,V_syncedStorageController
T@"SBDDomainValueServiceHandler",R,N,V_valueHandler
T@"SBDPushNotificationController",R,N,V_pushNotificationController
T@"SBKUniversalPlaybackPositionStore",R,N,V_cloudStore
TB,R,N
TB,R,N,V_hasChangesToPush
TB,R,N,V_isActive
TB,R,N,V_optIn
TQ,N
TQ,N,V_transactionEntityRevision
TQ,R
Td,R,N,V_preferredSynchronizeInterval
Tq,R,N,V_persistentID
UPPDomainIdentifier
URLWithString:
UTF8String
XPCConnection
XPCInterfaceDebugDescription
_SBKSBKSharedMusicLibraryImportFinishedObserver
_SBKStoreAccountChangedNotificationObserver
_XPCConnection
_accountChangeUpdatePending
_accountChangeUpdateShouldReloadAccounts
_accountIdentifier
_bagLoaded
_clientConfiguration
_clientProxy
_cloudStore
_connection
_connectionClientIdentity
_databaseHasBookmarkableContents
_databaseHasEntryForEntity:
_delegate
_environment
_fakeNotificationObserver
_hasChangesToPush
_identifier
_init
_isActive
_isEnabled
_lastSyncedDomainVersion
_lastSyncedEntityRevision
_loadURLBagWithCompletionHandler:
_musicLibrary
_observers
_onOperationQueue_scheduleSyncBeforeDate:isCheckpoint:
_onQueueSynchronizeWithInterval:isCheckpoint:
_onQueue_clearHasChanges
_onQueue_updateConnectionTopicsAndStoreRegistrations
_onQueue_updateStoreBookkeeperNotificationRegistration:
_onQueue_updateStoreBookkeeperNotificationRegistrationForDomain:optIn:accountID:withCompletionHandler:
_openTransactions
_optIn
_pendingAccountRequests
_performOnDomainSyncServiceHandlerWithBookkeeperDomain:forAccountWithIdentifier:completion:
_persistentID
_playbackPositionDomain
_portNameForEnvironmentName:
_preferredSynchronizeInterval
_pushEnabled
_pushNotificationController
_queue
_registeredAccountIDs
_registeredAccountsForDomains
_registrationUpdateScheduled
_requestPropertiesForDomain:optIn:typeRegistrationURL:
_sendSyncHandlerMessageWithBlock:
_sendValueHandlerMessageWithBlock:
_serviceConnections
_setValue:forDatabaseProperty:
_startServiceConnectionsWithCompletionHandler:
_syncHandler
_syncedStorageController
_systemSyncHandlers
_temporaryConnectionsByEnvironment
_track
_transaction
_transactionEntityRevision
_typeRegistrationURL
_ubiquitousDatabase
_ubiquitousIdentifiersToSync
_updateForAccountChangeAfterReloadingAccounts:
_updateForSharedLibraryImportFinished
_updatePushNotificationRegistrations
_updateUbiquitousDatabase_setBookmarkMetadataWithValuesFromTrackWithMetadataIdentifier:hasBeenPlayed:playCount:bookmarkTime:timestamp:syncRevision:usingConnection:
_uppStore
_valueForDatabaseProperty:
_valueHandler
_weakDomainDelegates
_xpcListener
accountDSID
accountIdentifier
addObject:
addObserver:selector:name:object:
addObserverForName:object:queue:usingBlock:
addOperationWithBlock:
addStorageObserver:
allObjects
allSyncingDomains
allValues
anyInLibrary:predicate:
appendFormat:
appendString:
archivedDataWithRootObject:requiringSecureCoding:error:
array
arrayByAddingObject:
arrayWithObjects:count:
auditToken
autorelease
beginAccessingPlaybackPositionEntities
beginTransactionWithItemsToSyncEnumerationBlock:
bodyData
bookkeeperStorageControllerDidSync:
bookmarkTime
bookmarkTimeModified
bookmarkTimestamp
bookmarkTimestampModified
boolValue
cancel
cancelUniversalPlaybackPositionTransaction:
class
clientConfiguration
clientProxy
close
cloudStore
commitUniversalPlaybackPositionTransaction:domainVersion:metadataEnumerationBlock:
componentsSeparatedByString:
conformsToProtocol:
connection
connection:channelSubscriptionsFailedWithFailures:
connection:didChangeConnectedStatus:
connection:didFailToSendOutgoingMessage:error:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didReceivePublicToken:
connection:didReceiveToken:forInfo:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveURLToken:forInfo:
connection:didReceiveURLTokenError:forInfo:
connection:didSendOutgoingMessage:
connectionDidReconnect:
copy
copyDeviceGUID
copyWithValuesFromSBKUniversalPlaybackPositionMetadata:
count
countByEnumeratingWithState:objects:count:
currentHandler
currentRunLoop
databaseConnectionAllowingWrites:withBlock:
databasePath
date
dateLastSynced
dateToSyncWithUbiquitousStore
dateWithTimeIntervalSinceNow:
dateWithTimeIntervalSinceReferenceDate:
debugDescription
defaultCenter
defaultIdentityStore
defaultStore
delegate
deletePlaybackPositionEntities
deletePlaybackPositionEntitiesWithClientIdentity:
deletePlaybackPositionEntity:
deletePlaybackPositionEntity:clientIdentity:
description
dictionary
dictionaryWithCapacity:
dictionaryWithObjects:forKeys:count:
distantFuture
domain
domainForSyncingMusicLibraryWithLibraryPath:
domainIdentifier
doubleValue
dumpUbiquitousMetadata
enableTransactions
enabledDomains
endAccessingPlaybackPositionEntities
entity
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
enumeratePersistentIDsUsingBlock:
enumerateRowsWithBlock:
enumerateValuesForProperties:usingBlock:
executeQuery:
executeQuery:withParameters:
executeUpdate:withParameters:error:
firstObject
foreignDatabaseEntityID
foreignDatabasePath
getValues:forProperties:count:
handleFailureInMethod:object:file:lineNumber:description:
hasAtLeastOneRow
hasBeenPlayed
hasBeenPlayedModified
hasChangesToPush
hasLocalChangesToPush
hasRemoteChangesToPull
hasSyncedAtleastOnce
hash
identifier
init
initWithCapacity:
initWithClientIdentity:
initWithDomain:code:userInfo:
initWithDomain:dataSource:automaticSynchronizeOptions:accountIdentifier:isActive:
initWithDomain:optIn:accountID:typeRegistrationURL:
initWithEnvironmentName:namedDelegatePort:queue:
initWithIdentifier:
initWithMusicLibrary:
initWithObjects:
initWithPath:
initWithPlaybackPositionDomain:ubiquitousIdentifier:foreignDatabaseEntityID:
initWithRequestProperties:
initWithURL:
initWithURLBagContext:
initWithUbiquitousIdentifier:inLibrary:
initWithXPCConnection:
initializeBackgroundTaskAgentWithJobRunner:
integerValue
invalidate
isActive
isEnabledForDomain:
isEqual:
isEqualToRegistrationRequest:
isEqualToSet:
isEqualToString:
isKindOfClass:
isMemberOfClass:
itemIdentifier
jobSchedulerForAccount:withDomain:
lastNotificationDomainVersion
lastSyncedDomainVersion
lastSyncedEntityRevision
lastSynchronizationFailureAccountIdentifier
lastSynchronizedAccountIdentifier
length
listener:shouldAcceptNewConnection:
loadBagContextWithCompletionBlock:
loadWithCompletionBlock:
longLongValue
makeObjectsPerformSelector:
musicLibrary
musicLibraryForUserAccount:
needsInitialSync
needsPoll
needsPull
needsPush
newListener
null
numberForColumnIndex:
numberWithDouble:
numberWithInteger:
numberWithLongLong:
numberWithUnsignedInteger:
numberWithUnsignedLongLong:
objectAtIndex:
objectForKey:
objectForKey:withDefaultValue:
objectForKeyedSubscript:
open
openTransactions
optIn
pendingAccountRequests
performDatabaseTransactionWithBlock:
performReadOnlyDatabaseTransactionWithBlock:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
persistPlaybackPositionEntity:clientIdentity:completionBlock:
persistPlaybackPositionEntity:isCheckpoint:clientIdentity:completionBlock:
persistPlaybackPositionEntity:isCheckpoint:completionBlock:
persistentID
playCount
playbackPositionDomain
pollingIntervalInSeconds
predicateMatchingPredicates:
predicateWithProperty:equalToValue:
predicateWithProperty:value:comparison:
preferredSynchronizeInterval
propertyListFromData:mutabilityOption:format:errorDescription:
publicToken
pullLocalPlaybackPositionForEntityIdentifiers:clientIdentity:completionBlock:
pullLocalPlaybackPositionForEntityIdentifiers:completionBlock:
pullMetadataItemWithItemIdentifier:completionBlock:
pullPlaybackPositionEntity:completionBlock:
pushMetadataItem:completionBlock:
pushNotificationController
pushNotificationController:didReceiveUpdateRequestForAccount:withBookkeeperDomain:toDomainRevision:
pushPlaybackPositionEntity:completionBlock:
queue
readUbiquitousDatabaseMetadataValuesForIdentifiers:clientIdentity:
readUbiquitousDatabaseMetadataValuesWithClientIdentity:identifier:
readUbiquitousDatabaseMetadataValuesWithClientIdentity:identifiers:
registeredAccountsForDomains
reloadAccounts
remoteObjectProxy
removeFromRunLoop
removeObject:
removeObjectForKey:
removeObjectsForKeys:
removeObserver:name:object:
removeScheduledJobs
removeStorageObserver:
requestForDomain:optIn:accountID:typeRegistrationURL:
requestProperties
respondsToSelector:
resume
retain
retainCount
scheduleUpdateJobWithTimeInterval:replaceExisting:
self
server
serviceClientInterface
serviceConnections
serviceForXPCConnection:
serviceInterface
setAccountIdentifier:
setBookmarkTime:
setBookmarkTimestamp:
setClientConfiguration:
setDateLastSynced:
setDateStyle:
setDateToSyncWithUbiquitousStore:
setDelegate:
setDelegate:forBookkeeperDomain:
setDomain:
setEnabledDomains:
setEnabledTopics:
setExportedInterface:
setExportedObject:
setHTTPMethod:
setHasBeenPlayed:
setHttpArchiveBufferSize:
setITunesStoreRequest:
setInterruptionHandler:
setInvalidationHandler:
setLastNotificationDomainVersion:
setLastSyncedDomainVersion:
setLastSyncedEntityRevision:
setMusicLibrary:
setObject:forKey:
setObject:forKeyedSubscript:
setPrivacyContext:
setRemoteObjectInterface:
setRequestParameters:
setTimeStyle:
setTransactionEntityRevision:
setUserPlayCount:
setValue:forDatabaseProperty:
setValue:forHTTPHeaderField:
setValuesForPropertiesWithDictionary:
setWithArray:
sharedInstance
sharedManager
start
startWithConnectionResponseBlock:
statementWithPrefix:inParameterCount:
statusCode
storageControllerForPlaybackPositionDomain:
storeAccountID
storeBookkeeperPreferences
stringForColumnIndex:
stringValue
stringWithFormat:
stringWithString:
subarrayWithRange:
superclass
supportsSyncProtocol
supportsUPP
syncHandler
syncedStorageController
synchronizeBeforeDate:isCheckpoint:
synchronizeForChangedAccountByResetInvalidatingLocalChanges:
synchronizeForChangedAccountByResetInvalidatingLocalChanges:beforeDate:
synchronizeForChangedAccountStatus
synchronizeForUpdateJobForAccount:withDomain:withCompletionHandler:
synchronizeForUpdatedRemoteDomainVersion:
synchronizeForUpdatedRemoteDomainVersion:beforeDate:
synchronizeIfNeedsInitialSynchronization
synchronizeImmediately
synchronizeImmediatelyWithCompletionHandler:
timeIntervalSinceDate:
timeIntervalSinceNow
timeIntervalSinceReferenceDate
timestamp
track
transactionEntityRevision
ubiquitousIdentifier
ubiquitousIdentifiersToSync
unarchivedObjectOfClasses:fromData:error:
unionSet:
unrestrictedAllItemsQueryWithlibrary:predicate:orderingTerms:
unsignedIntValue
unsignedIntegerValue
unsignedLongLongValue
unsignedLongValue
updateForeignDatabaseWithValuesFromPlaybackPositionEntity:
updateForeignDatabaseWithValuesFromPlaybackPositionEntity:clientIdentity:
updateMusicLibraryWithClientIdentity:applyUbiquitousBookmarkMetadataToTrackWithPersistentID:
updateNotificationRegistrationsWithCompletionBlock:
updateStoreBookkeeperNotificationRegistration:
updateUbiquitousDatabaseByInsertingUbiquitousMetadataForTrackWithMetadataIdentifier:hasBeenPlayed:playCount:bookmarkTime:timestamp:syncRevision:
updateUbiquitousDatabaseByPerformingWriteTransactionWithBlock:
updateUbiquitousDatabaseByResetingSyncEntityRevisionForItemsWithMetadataIdentifiers:
updateUbiquitousDatabaseWithClientIdentity:persistUbiquitousMetadataWithEntity:
updateUbiquitousDatabaseWithClientIdentity:removeUbiquitousMetadataFromTrackWithPersistentID:
uppDatabase
userIdentitiesForManageableAccountsWithError:
userPlayCount
userPlayCountModified
valueForDatabaseProperty:
valueForKey:
valueForKeyPath:
valueForProperty:
valueHandler
weakDomainDelegates
xpcListener
zone
Connection invalidated: %@
Connection interrupted: %@
client %@ did not supply a domain in client connection configuration %@
Could not create client identity with nil connection
Could not create client identity from XPCConnection=%@
attempt to use sync APIs on domain (%@) that does not support the sync protocol
Starting storebookkeeperd
Vending services: %@
Exiting storebookkeeperd main()
SBCPlaybackPositionDomain: Error fetching user identities. err=%@
Starting service 'SBCPlaybackPositionService'
reloading store accounts
Handling account did change notification
Dropping handler. foreignDatabasePath=nil
Dropping handler. handlerAccountID=nil
Dropping handler. handlerAccountID not in storeAccountIdentifiers
Scheduling reset sync
[SBDDomainSyncServiceHandler synchronizeForUpdatedRemoteDomainVersion]
synchronizeImmediatelyWithCompletionHandler
unable to load bag and determine polling interval
checking needsPoll, pollIntervalInSeconds = %@, lastSynced = %@ (%@)
received request update for domain version change to version: %@
skipping scheduling a sync, last synced domain version already %@
received request handle account change (set sync anchor to 0%@)
clearing all local changes that had been scheduled for push
reseting sync anchor to 0, and scheduling pull from server
running synchronizeImmediatelyWithCompletionHandler: now
received request to scheduleSyncBeforeDate: %@ (in %.2f sec)
target sync date from client: %@ (in %.2f sec)
target sync date in database has been passed, using sync date of 'now': %@ (in %.2f sec)
target sync date from database: %@ (in %.2f sec)
setting target date to: %@ (in %.2f sec)
scheduling sync NOW.
scheduling sync (via BackgroundTaskJob) %f seconds from now...
setting %@ to %@
failed to update ubiquitous bookmarkmatadata for metadata identifier %@.
updateMusicLibraryByApplyingUbiquitousBookmarkMetadataToTrackWithPersistentID:, persistentID %lld doesn't exist.
Error: SBDPushNotificationController init: Error unarchiving _registeredDomains from registeredDomains. registeredDomains=%@ error=%@
%@ APSConnection (env:%@) = %@ removed from runloop in dealloc
%@ connection:%@ didReceivePublicToken:%@
%@ connection:%@ didReceiveMessageForTopic:%@ userInfo:%@
Received push notification for storebookkeeper topic '%@' with userInfo %@
Received push notification for storebookkeeper domain '%@
Processing push notification for storebookkeeper domain '%@', version %@
%@ connection:%@ didReceiveIncomingMessage:%@
%@ connection:%@ didSendOutgoingMessage:%@
%@ connection:%@ didFailToSendOutgoingMessage:%@, error = %@
%@ connection:%@ didChangeConnectedStatus: connected = %d
%@ connectionDidReconnect:%@
Setting APNS connection enabled topics to %@ on connection %@
%@ Beginning APS bringup - creating connections...
%@ Push enabled: %d, environment: %@
%@->_connection (env:%@) = %@
%@ APSConnection (env:%@) = %@ removed from runloop
Push token: %@
Loading URL Bag
Finished loading URL Bag.  _pushEnabled = %@, _typeRegistrationURL = %@, _env = %@
Unable to update push notification registration to %@ for domain '%@' (accountID %@): reason = 'URL bag has not been loaded'.
Unable to update push notification registration to %@ for domain '%@' (accountID %@): reason = 'type registration URL not found in URL bag'.
Skipping opt-in push notification registration attempt for domain '%@' (accountID %@).  reason = 'push is not enabled at the moment'.
Unable to update push notification registration to %@ for domain '%@' (accountID %@): reason = 'account ID missing, not set, or unspecified'.
Skipping opt-out push notification registration attempt for domain '%@' (accountID %@).  reason = 'itunesstored has already sent an opt-out on our behalf'.
Making sure blocked accountID %@ is opted-out for push notifications
%@ push notification registration for domain '%@' (accountID: %@)
StoreBookkeeper update push notification registration to %@ for domain '%@' (accountID %@) issuing request %@ with properties %@
StoreBookkeeper update push notification registration to %@ for domain '%@' (accountID: %@) returned response %@ with status %ld with decoded body %@%@
...response-headers %@
ERROR: exception while handling SBKBlacklistedAccountIDs preference: %@
Received request: -%@, client=%@, entity=%@
[UPP] attempt to set hasChangeToPush while inactive may result in changes not being pushed to the servers.
received push notification event, %@'s version changed to %@
received changed account event, will reset sync%@
received request to do initial sync
received changed account event, will schedule sync
received request to synchronize immediately
v16@?0@"SBDDomainSyncServiceHandler"8
v16@?0@"SBDDomainValueServiceHandler"8
SBDServer.m
Use +sharedInstance instead
com.apple.storebookkeeperd.SBDServer
SBKStoreAccountChangedNotification
v16@?0@"NSNotification"8
SBKSharedMusicLibraryImportFinished
v32@?0@"NSNumber"8@"NSString"16@?<v@?B@"NSError">24
v20@?0B8@"NSError"12
XPCConnection
com.apple.storebookkeeperd.launched
@distinctUnionOfObjects.domain.foreignDatabasePath
com.apple.storebookkeeperd.XPCTransactionController
%@ identifier = %@ %@
DaemonTemporaryKeepAlive
v20@?0@"SBKStoreURLBagContext"8B16
 and clear last-sync revision number
com.apple.amp.storebookkeeperd
Default
Push
Server
SBDML3UbiquitousDatabase.m
use initWithMusicLibrary:
MLUbiquitousBookmarkEntityRevisionAnchor
MPUbiquitousBookmarkDomainVersionAnchorToken
MPDateLastSynced
MPUbiquitousBookmarkDomainVersionRemoteToken
MPDateToSyncWithUbiquitousStore
INSERT OR REPLACE INTO cloud_kvs (key, play_count_user, has_been_played, bookmark_time_ms, bookmark_sync_timestamp, bookmark_sync_revision) VALUES (?, ?, ?, ?, ?, ?)
has_been_played
play_count_user
bookmark_time_ms
bookmark_sync_timestamp
bookmark_sync_revision
%@ = ?
v32@?0@"NSString"8Q16^B24
UPDATE cloud_kvs SET %@ WHERE key = ?
SELECT item_pid, play_count_user, has_been_played, bookmark_time_ms FROM cloud_kvs INNER JOIN item_kvs USING (key) LEFT OUTER JOIN item USING (item_pid) WHERE key = ? AND item.item_pid IS NOT NULL
UPDATE item_stats SET bookmark_time_ms = ?, has_been_played = ?, play_count_user = ? where item_pid = ?
SELECT key FROM cloud_kvs WHERE key = ?
v16@?0@"ML3DatabaseConnection"8
DELETE FROM cloud_kvs WHERE key = ?
SELECT play_count_user, has_been_played, bookmark_time_ms FROM cloud_kvs WHERE key = ?
UPDATE cloud_kvs SET bookmark_sync_timestamp = ?, bookmark_sync_revision = ? WHERE key = ?
UPDATE cloud_kvs SET bookmark_sync_revision = 0 WHERE key
SELECT key, play_count_user, has_been_played, bookmark_time_ms, bookmark_sync_timestamp FROM cloud_kvs WHERE key
SELECT key, title, item_pid, bookmark_sync_timestamp, bookmark_time_ms, has_been_played, play_count_user  FROM cloud_kvs JOIN item_kvs using (key) JOIN item_extra using (item_pid)
id = %s; titles = %s; item_pids = %s; timestamp = %s; bookmark_time_ms = %s; has_been_played = %s; play_count_user %s
__SBDML3UbiquitousDatabaseKey
<NO VERSION>
%@: lastSyncedDomainVersion = %@, entityRevisions.lastSynced = %llu, entityRevisions.currentSyncTransaction = %llu)
v32@?0@"NSString"8@16^B24
%@ properties = %@
@16@?0@8
SELECT key FROM cloud_kvs LEFT OUTER JOIN item_kvs using (key) WHERE item_pid IS NULL AND bookmark_sync_timestamp != 0 AND bookmark_sync_revision >= ?
v32@?0q8Q16^B24
v32@?0@"ML3DatabaseRow"8@"NSError"16^B24
B16@?0@"ML3DatabaseConnection"8
v32@?0@"SBKUniversalPlaybackPositionMetadata"8@"ML3Track"16^B24
v32@?0@"SBKUniversalPlaybackPositionMetadata"8@16^B24
v32@?0@8@16^B24
com.apple.storebookkeeper
push-notifications.environment
push-notification-types.add-push-notification-type-url
SBKPushNotificationRegisteredDomains
com.apple.SBD.push-notification-controller
v32@?0@"NSString"8@"APSConnection"16^B24
PushNotificationConfiguration-LoadURLBag
v24@?0@"NSDictionary"8@"NSError"16
com.apple.aps.storebookkeeperd
com.apple.aps.storebookkeeperd.dev
com.apple.aps.storebookkeeperd.demo
Opt-in to
Opt-out of
, **error** = %@, %@
status
v24@?0@"SSURLConnectionResponse"8@"NSError"16
v28@?0@"NSString"8B16@"NSNumber"20
v32@?0@"NSString"8@"SBDPushRegistrationRequest"16^B24
domain
v32@?0@"NSString"8@"NSSet"16^B24
POST
application/x-apple-plist
Content-Type
bookkeeperDomain:%@
guid
notification-type
mzbookkeeper
put-parameters
SBKBlacklistedAccountIDs
unknown error
bad password token
unrecognized push notification type
no push device error
bad parameters in request
Request Failed: response status error (%d) '%@'
v8@?0
v12@?0B8
 (dropping local changes)
v40@?0@"SBKUniversalPlaybackPositionMetadata"8@"NSString"16@"NSString"24@"NSError"32
SBDPlaybackPositionService
SBCPlaybackPositionServiceProtocol_Internal
SBCPlaybackPositionServiceProtocol
SBCDomainSyncServiceProtocol
NSObject
SBCDomainValueServiceProtocol
SBCDomainSyncServiceProtocol_Internal
SBDDomainServiceHandler
SBDServer
NSXPCListenerDelegate
SBDPushNotificationControllerDelegate
XPCTransactionController
XPCTransaction
SBDDomainSyncedStorageController
SBKUniversalPlaybackPositionDataSource
SBDML3UbiquitousDatabase
SBDPlaybackPositionTransaction
SBKUniversalPlaybackPositionTransactionContext
SBDPlaybackPositionMediaItem
SBKUniversalPlaybackPositionMediaItem
SBDPlaybackPositionML3TrackMediaItem
SBKML3Properties
SBKSync
SBDWeakDomainDelegate
SBDPushNotificationController
APSConnectionDelegate
SBDPushRegistrationRequest
SBDDomainSyncServiceHandler
SBDDomainSyncedStorageObserver
SBDDomainValueServiceHandler
SBDJobScheduler
@24@0:8@16
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
Vv36@0:8@16B24@?28
Vv24@0:8@16
Vv32@0:8@16@?24
Vv36@0:8@"SBCPlaybackPositionEntity"16B24@?<v@?B>28
Vv24@0:8@"SBCPlaybackPositionEntity"16
Vv32@0:8@"NSArray"16@?<v@?B@"NSError"@"NSArray">24
Vv32@0:8@"SBCPlaybackPositionEntity"16@?<v@?B@"NSError"@"SBCPlaybackPositionEntity">24
Vv24@0:8@?16
Vv24@0:8@?<v@?B@"NSError">16
Vv24@0:8@"SBCClientConfiguration"16
v24@0:8@?16
v16@0:8
@"NSXPCConnection"
@"NSObject<OS_dispatch_queue>"
@"<SBCPlaybackPositionClientProtocol>"
@"SBDDomainSyncServiceHandler"
@"SBDDomainValueServiceHandler"
@"SBCClientConfiguration"
@"SBCPlaybackPositionDomain"
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v48@0:8@16@24@32@40
v48@0:8@"SBDPushNotificationController"16@"NSNumber"24@"NSString"32@"NSString"40
v20@0:8B16
v24@0:8@16
v40@0:8@16@24@?32
@"NSMutableArray"
@"NSXPCListener"
@"SBDPushNotificationController"
@"NSArray"
@"NSObject<OS_os_transaction>"
@"NSString"
@24@0:8@?16
@"<SBKUniversalPlaybackPositionTransactionContext>"24@0:8@?<v@?@"<SBKUniversalPlaybackPositionMediaItem>">16
v24@0:8@"<SBKUniversalPlaybackPositionTransactionContext>"16
v40@0:8@"<SBKUniversalPlaybackPositionTransactionContext>"16@"NSString"24@?<@"SBKUniversalPlaybackPositionMetadata"@?>32
v28@0:8@16B24
v32@0:8@16@24
v28@0:8B16@20
@32@0:8@16@24
@"NSOperationQueue"
@"SBKUniversalPlaybackPositionStore"
@"SBDML3UbiquitousDatabase"
@"ML3MusicLibrary"
@"NSNumber"
@"NSDate"
v24@0:8Q16
B68@0:8@16B24Q28d36d44q52@60
B60@0:8@16B24Q28d36d44q52
v32@0:8@16q24
@"NSMutableSet"
v32@0:8@16@?24
v32@0:8@"NSSet"16@?<v@?@"NSString"@^B>24
@"SBCPlaybackPositionEntity"
@32@0:8q16@24
q16@0:8
@"ML3Track"
@32@0:8Q16@24
@"<SBDPushNotificationControllerDelegate>"
v40@0:8@16@24@32
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v40@0:8@"APSConnection"16@"NSData"24@"APSAppTokenInfo"32
v40@0:8@"APSConnection"16@"APSURLToken"24@"APSURLTokenInfo"32
v40@0:8@"APSConnection"16@"NSError"24@"APSURLTokenInfo"32
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
v44@0:8@16B24@28@?36
@"NSMutableDictionary"
@"NSURL"
@"NSSet"
@"APSConnection"
@44@0:8@16B24@28@36
@36@0:8@16B24@28
v24@0:8@"SBDDomainSyncedStorageController"16
v28@0:8d16B24
d16@0:8
@"SBDDomainSyncedStorageController"
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>22A380007</string>
<key>CFBundleAllowMixedLocalizations</key>
<true/>
<key>CFBundleExecutable</key>
<string>storebookkeeperd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.storebookkeeperd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>14E6097d</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>16.4</string>
<key>DTSDKBuild</key>
<string>20E5212d</string>
<key>DTSDKName</key>
<string>iphonesimulator16.4.internal</string>
<key>DTXcode</key>
<string>1430</string>
<key>DTXcodeBuild</key>
<string>14E6097d</string>
<key>MinimumOSVersion</key>
<string>16.4</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
<integer>2</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>DataProtectionClass</key>
<string>NSFileProtectionComplete</string>
<key>application-identifier</key>
<string>com.apple.storebookkeeperd</string>
<key>aps-connection-initiate</key>
<true/>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.authkit.client.internal</key>
<true/>
<key>com.apple.itunesstored.private</key>
<true/>
<key>com.apple.private.applemediaservices</key>
<true/>
<key>com.apple.private.tcc.allow</key>
<array>
<string>kTCCServiceMediaLibrary</string>
</array>
<key>com.apple.private.tcc.manager.get-identity-for-credential</key>
<true/>
</dict>
</plist>
DataProtectionClass
NSFileProtectionComplete04
application-identifier
com.apple.storebookkeeperd0
aps-connection-initiate
0/*com.apple.accounts.appleaccount.fullaccess
0&!com.apple.authkit.client.internal
com.apple.itunesstored.private
0)$com.apple.private.applemediaservices
com.apple.private.tcc.allow0
kTCCServiceMediaLibrary0>9com.apple.private.tcc.manager.get-identity-for-credential
T@"NSString",R,C,N,V_identifier
SBKBeginTransactionWithItemsToSyncEnumerationBlock:
_accountsDidChangeNotification:
SBKCommitUniversalPlaybackPositionTransaction:domainVersion:metadataEnumerationBlock:
_enabledDomains
SBKQueryForTracksNeedingPushWithEntityRevisionAnchor:orderingTerms:
_operationQueue
SBKUniversalPlaybackPositionMetadata
_targetSyncDate
T@"<SBCPlaybackPositionClientProtocol>",R,N,V_clientProxy
allKeys
T@"APSConnection",R,N,V_connection
beginTransactionWithIdentifier:
T@"ML3MusicLibrary",R,W,N,V_musicLibrary
currentRevision
T@"NSArray",R,N,V_serviceConnections
defaultRenderer
T@"NSMutableArray",R,N,V_openTransactions
initWithDomain:
T@"NSMutableDictionary",R,N,V_registeredAccountsForDomains
initWithPersistentID:inLibrary:
T@"NSMutableSet",&,N,V_ubiquitousIdentifiersToSync
isInTransaction
T@"NSNumber",R,C,N
numberWithBool:
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
removeObserver:
T@"NSString",C,N
T@"NSString",C,N,V_lastSyncedDomainVersion
setUbiquitousIdentifiersToSync:
T@"NSString",R,C,N,V_domain
suspend
.cxx_destruct
TQ,N,V_lastSyncedEntityRevision
SBKCancelUniversalPlaybackPositionTransaction:
_domain
SBKPropertyValueForML3PropertyValue:ML3Property:
_entity
SBKSQLQueryStringForItemsNeedingPush
_storeAccountID
T#,R
allHeaderFields
T@"<SBDPushNotificationControllerDelegate>",W,N,V_delegate
base64EncodedStringWithOptions:
T@"ML3MusicLibrary",&,N,V_musicLibrary
containsObject:
T@"ML3Track",R,N,V_track
dealloc
T@"NSDate",&,N
endTransaction:
T@"NSMutableDictionary",R,N,V_pendingAccountRequests
initWithDomain:dataSource:automaticSynchronizeOptions:isActive:
T@"NSMutableDictionary",R,N,V_weakDomainDelegates
initWithPlaybackPositionDomain:
T@"NSNumber",C,N,V_accountIdentifier
isProxy
T@"NSNumber",R,N,V_storeAccountID
release
T@"NSSet",&,N
T@"NSString",C,N,V_domain
setMaxConcurrentOperationCount:
T@"NSString",R,C
stringFromDate:
T@"NSString",R,N,V_identifier
T@"NSXPCConnection",R,N,V_XPCConnection
T@"NSXPCListener",R,N,V_xpcListener
T@"SBCClientConfiguration",R,N,V_clientConfiguration
T@"SBCPlaybackPositionDomain",R,C,N,V_playbackPositionDomain
T@"SBCPlaybackPositionDomain",R,N,V_domain
T@"SBCPlaybackPositionEntity",R,N,V_entity
T@"SBDDomainSyncServiceHandler",R,N,V_syncHandler
T@"SBDDomainSyncedStorageController",R,N,V_syncedStorageController
T@"SBDDomainValueServiceHandler",R,N,V_valueHandler
T@"SBDPushNotificationController",R,N,V_pushNotificationController
T@"SBKUniversalPlaybackPositionStore",R,N,V_cloudStore
TB,R,N
TB,R,N,V_hasChangesToPush
TB,R,N,V_isActive
TB,R,N,V_optIn
TQ,N
TQ,N,V_transactionEntityRevision
TQ,R
Td,R,N,V_preferredSynchronizeInterval
Tq,R,N,V_persistentID
UPPDomainIdentifier
URLWithString:
UTF8String
XPCConnection
XPCInterfaceDebugDescription
_SBKSBKSharedMusicLibraryImportFinishedObserver
_SBKStoreAccountChangedNotificationObserver
_XPCConnection
_accountChangeUpdatePending
_accountChangeUpdateShouldReloadAccounts
_accountIdentifier
_bagLoaded
_clientConfiguration
_clientProxy
_cloudStore
_connection
_connectionClientIdentity
_databaseHasBookmarkableContents
_databaseHasEntryForEntity:
_delegate
_environment
_fakeNotificationObserver
_hasChangesToPush
_identifier
_init
_isActive
_isEnabled
_lastSyncedDomainVersion
_lastSyncedEntityRevision
_loadURLBagWithCompletionHandler:
_musicLibrary
_observers
_onOperationQueue_scheduleSyncBeforeDate:isCheckpoint:
_onQueueSynchronizeWithInterval:isCheckpoint:
_onQueue_clearHasChanges
_onQueue_updateConnectionTopicsAndStoreRegistrations
_onQueue_updateStoreBookkeeperNotificationRegistration:
_onQueue_updateStoreBookkeeperNotificationRegistrationForDomain:optIn:accountID:withCompletionHandler:
_openTransactions
_optIn
_pendingAccountRequests
_performOnDomainSyncServiceHandlerWithBookkeeperDomain:forAccountWithIdentifier:completion:
_persistentID
_playbackPositionDomain
_portNameForEnvironmentName:
_preferredSynchronizeInterval
_pushEnabled
_pushNotificationController
_queue
_registeredAccountIDs
_registeredAccountsForDomains
_registrationUpdateScheduled
_requestPropertiesForDomain:optIn:typeRegistrationURL:
_sendSyncHandlerMessageWithBlock:
_sendValueHandlerMessageWithBlock:
_serviceConnections
_setValue:forDatabaseProperty:
_startServiceConnectionsWithCompletionHandler:
_syncHandler
_syncedStorageController
_systemSyncHandlers
_temporaryConnectionsByEnvironment
_track
_transaction
_transactionEntityRevision
_typeRegistrationURL
_ubiquitousDatabase
_ubiquitousIdentifiersToSync
_updateForAccountChangeAfterReloadingAccounts:
_updateForSharedLibraryImportFinished
_updatePushNotificationRegistrations
_updateUbiquitousDatabase_setBookmarkMetadataWithValuesFromTrackWithMetadataIdentifier:hasBeenPlayed:playCount:bookmarkTime:timestamp:syncRevision:usingConnection:
_uppStore
_valueForDatabaseProperty:
_valueHandler
_weakDomainDelegates
_xpcListener
accountDSID
accountIdentifier
addObject:
addObserver:selector:name:object:
addObserverForName:object:queue:usingBlock:
addOperationWithBlock:
addStorageObserver:
allObjects
allSyncingDomains
allValues
anyInLibrary:predicate:
appendFormat:
appendString:
archivedDataWithRootObject:requiringSecureCoding:error:
array
arrayByAddingObject:
arrayWithObjects:count:
auditToken
autorelease
beginAccessingPlaybackPositionEntities
beginTransactionWithItemsToSyncEnumerationBlock:
bodyData
bookkeeperStorageControllerDidSync:
bookmarkTime
bookmarkTimeModified
bookmarkTimestamp
bookmarkTimestampModified
boolValue
cancel
cancelUniversalPlaybackPositionTransaction:
class
clientConfiguration
clientProxy
close
cloudStore
commitUniversalPlaybackPositionTransaction:domainVersion:metadataEnumerationBlock:
componentsSeparatedByString:
conformsToProtocol:
connection
connection:channelSubscriptionsFailedWithFailures:
connection:didChangeConnectedStatus:
connection:didFailToSendOutgoingMessage:error:
connection:didReceiveIncomingMessage:
connection:didReceiveMessageForTopic:userInfo:
connection:didReceivePublicToken:
connection:didReceiveToken:forInfo:
connection:didReceiveToken:forTopic:identifier:
connection:didReceiveURLToken:forInfo:
connection:didReceiveURLTokenError:forInfo:
connection:didSendOutgoingMessage:
connectionDidReconnect:
copy
copyDeviceGUID
copyWithValuesFromSBKUniversalPlaybackPositionMetadata:
count
countByEnumeratingWithState:objects:count:
currentHandler
currentRunLoop
databaseConnectionAllowingWrites:withBlock:
databasePath
date
dateLastSynced
dateToSyncWithUbiquitousStore
dateWithTimeIntervalSinceNow:
dateWithTimeIntervalSinceReferenceDate:
debugDescription
defaultCenter
defaultIdentityStore
defaultStore
delegate
deletePlaybackPositionEntities
deletePlaybackPositionEntitiesWithClientIdentity:
deletePlaybackPositionEntity:
deletePlaybackPositionEntity:clientIdentity:
description
dictionary
dictionaryWithCapacity:
dictionaryWithObjects:forKeys:count:
distantFuture
domain
domainForSyncingMusicLibraryWithLibraryPath:
domainIdentifier
doubleValue
dumpUbiquitousMetadata
enableTransactions
enabledDomains
endAccessingPlaybackPositionEntities
entity
enumerateKeysAndObjectsUsingBlock:
enumerateObjectsUsingBlock:
enumeratePersistentIDsUsingBlock:
enumerateRowsWithBlock:
enumerateValuesForProperties:usingBlock:
executeQuery:
executeQuery:withParameters:
executeUpdate:withParameters:error:
firstObject
foreignDatabaseEntityID
foreignDatabasePath
getValues:forProperties:count:
handleFailureInMethod:object:file:lineNumber:description:
hasAtLeastOneRow
hasBeenPlayed
hasBeenPlayedModified
hasChangesToPush
hasLocalChangesToPush
hasRemoteChangesToPull
hasSyncedAtleastOnce
hash
identifier
init
initWithCapacity:
initWithClientIdentity:
initWithDomain:code:userInfo:
initWithDomain:dataSource:automaticSynchronizeOptions:accountIdentifier:isActive:
initWithDomain:optIn:accountID:typeRegistrationURL:
initWithEnvironmentName:namedDelegatePort:queue:
initWithIdentifier:
initWithMusicLibrary:
initWithObjects:
initWithPath:
initWithPlaybackPositionDomain:ubiquitousIdentifier:foreignDatabaseEntityID:
initWithRequestProperties:
initWithURL:
initWithURLBagContext:
initWithUbiquitousIdentifier:inLibrary:
initWithXPCConnection:
initializeBackgroundTaskAgentWithJobRunner:
integerValue
invalidate
isActive
isEnabledForDomain:
isEqual:
isEqualToRegistrationRequest:
isEqualToSet:
isEqualToString:
isKindOfClass:
isMemberOfClass:
itemIdentifier
jobSchedulerForAccount:withDomain:
lastNotificationDomainVersion
lastSyncedDomainVersion
lastSyncedEntityRevision
lastSynchronizationFailureAccountIdentifier
lastSynchronizedAccountIdentifier
length
listener:shouldAcceptNewConnection:
loadBagContextWithCompletionBlock:
loadWithCompletionBlock:
longLongValue
makeObjectsPerformSelector:
musicLibrary
musicLibraryForUserAccount:
needsInitialSync
needsPoll
needsPull
needsPush
newListener
null
numberForColumnIndex:
numberWithDouble:
numberWithInteger:
numberWithLongLong:
numberWithUnsignedInteger:
numberWithUnsignedLongLong:
objectAtIndex:
objectForKey:
objectForKey:withDefaultValue:
objectForKeyedSubscript:
open
openTransactions
optIn
pendingAccountRequests
performDatabaseTransactionWithBlock:
performReadOnlyDatabaseTransactionWithBlock:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
persistPlaybackPositionEntity:clientIdentity:completionBlock:
persistPlaybackPositionEntity:isCheckpoint:clientIdentity:completionBlock:
persistPlaybackPositionEntity:isCheckpoint:completionBlock:
persistentID
playCount
playbackPositionDomain
pollingIntervalInSeconds
predicateMatchingPredicates:
predicateWithProperty:equalToValue:
predicateWithProperty:value:comparison:
preferredSynchronizeInterval
propertyListFromData:mutabilityOption:format:errorDescription:
publicToken
pullLocalPlaybackPositionForEntityIdentifiers:clientIdentity:completionBlock:
pullLocalPlaybackPositionForEntityIdentifiers:completionBlock:
pullMetadataItemWithItemIdentifier:completionBlock:
pullPlaybackPositionEntity:completionBlock:
pushMetadataItem:completionBlock:
pushNotificationController
pushNotificationController:didReceiveUpdateRequestForAccount:withBookkeeperDomain:toDomainRevision:
pushPlaybackPositionEntity:completionBlock:
queue
readUbiquitousDatabaseMetadataValuesForIdentifiers:clientIdentity:
readUbiquitousDatabaseMetadataValuesWithClientIdentity:identifier:
readUbiquitousDatabaseMetadataValuesWithClientIdentity:identifiers:
registeredAccountsForDomains
reloadAccounts
remoteObjectProxy
removeFromRunLoop
removeObject:
removeObjectForKey:
removeObjectsForKeys:
removeObserver:name:object:
removeScheduledJobs
removeStorageObserver:
requestForDomain:optIn:accountID:typeRegistrationURL:
requestProperties
respondsToSelector:
resume
retain
retainCount
scheduleUpdateJobWithTimeInterval:replaceExisting:
self
server
serviceClientInterface
serviceConnections
serviceForXPCConnection:
serviceInterface
setAccountIdentifier:
setBookmarkTime:
setBookmarkTimestamp:
setClientConfiguration:
setDateLastSynced:
setDateStyle:
setDateToSyncWithUbiquitousStore:
setDelegate:
setDelegate:forBookkeeperDomain:
setDomain:
setEnabledDomains:
setEnabledTopics:
setExportedInterface:
setExportedObject:
setHTTPMethod:
setHasBeenPlayed:
setHttpArchiveBufferSize:
setITunesStoreRequest:
setInterruptionHandler:
setInvalidationHandler:
setLastNotificationDomainVersion:
setLastSyncedDomainVersion:
setLastSyncedEntityRevision:
setMusicLibrary:
setObject:forKey:
setObject:forKeyedSubscript:
setPrivacyContext:
setRemoteObjectInterface:
setRequestParameters:
setTimeStyle:
setTransactionEntityRevision:
setUserPlayCount:
setValue:forDatabaseProperty:
setValue:forHTTPHeaderField:
setValuesForPropertiesWithDictionary:
setWithArray:
sharedInstance
sharedManager
start
startWithConnectionResponseBlock:
statementWithPrefix:inParameterCount:
statusCode
storageControllerForPlaybackPositionDomain:
storeAccountID
storeBookkeeperPreferences
stringForColumnIndex:
stringValue
stringWithFormat:
stringWithString:
subarrayWithRange:
superclass
supportsSyncProtocol
supportsUPP
syncHandler
syncedStorageController
synchronizeBeforeDate:isCheckpoint:
synchronizeForChangedAccountByResetInvalidatingLocalChanges:
synchronizeForChangedAccountByResetInvalidatingLocalChanges:beforeDate:
synchronizeForChangedAccountStatus
synchronizeForUpdateJobForAccount:withDomain:withCompletionHandler:
synchronizeForUpdatedRemoteDomainVersion:
synchronizeForUpdatedRemoteDomainVersion:beforeDate:
synchronizeIfNeedsInitialSynchronization
synchronizeImmediately
synchronizeImmediatelyWithCompletionHandler:
timeIntervalSinceDate:
timeIntervalSinceNow
timeIntervalSinceReferenceDate
timestamp
track
transactionEntityRevision
ubiquitousIdentifier
ubiquitousIdentifiersToSync
unarchivedObjectOfClasses:fromData:error:
unionSet:
unrestrictedAllItemsQueryWithlibrary:predicate:orderingTerms:
unsignedIntValue
unsignedIntegerValue
unsignedLongLongValue
unsignedLongValue
updateForeignDatabaseWithValuesFromPlaybackPositionEntity:
updateForeignDatabaseWithValuesFromPlaybackPositionEntity:clientIdentity:
updateMusicLibraryWithClientIdentity:applyUbiquitousBookmarkMetadataToTrackWithPersistentID:
updateNotificationRegistrationsWithCompletionBlock:
updateStoreBookkeeperNotificationRegistration:
updateUbiquitousDatabaseByInsertingUbiquitousMetadataForTrackWithMetadataIdentifier:hasBeenPlayed:playCount:bookmarkTime:timestamp:syncRevision:
updateUbiquitousDatabaseByPerformingWriteTransactionWithBlock:
updateUbiquitousDatabaseByResetingSyncEntityRevisionForItemsWithMetadataIdentifiers:
updateUbiquitousDatabaseWithClientIdentity:persistUbiquitousMetadataWithEntity:
updateUbiquitousDatabaseWithClientIdentity:removeUbiquitousMetadataFromTrackWithPersistentID:
uppDatabase
userIdentitiesForManageableAccountsWithError:
userPlayCount
userPlayCountModified
valueForDatabaseProperty:
valueForKey:
valueForKeyPath:
valueForProperty:
valueHandler
weakDomainDelegates
xpcListener
zone
Connection invalidated: %@
Connection interrupted: %@
client %@ did not supply a domain in client connection configuration %@
Could not create client identity with nil connection
Could not create client identity from XPCConnection=%@
attempt to use sync APIs on domain (%@) that does not support the sync protocol
Starting storebookkeeperd
Vending services: %@
Exiting storebookkeeperd main()
SBCPlaybackPositionDomain: Error fetching user identities. err=%@
Starting service 'SBCPlaybackPositionService'
reloading store accounts
Handling account did change notification
Dropping handler. foreignDatabasePath=nil
Dropping handler. handlerAccountID=nil
Dropping handler. handlerAccountID not in storeAccountIdentifiers
Scheduling reset sync
[SBDDomainSyncServiceHandler synchronizeForUpdatedRemoteDomainVersion]
synchronizeImmediatelyWithCompletionHandler
unable to load bag and determine polling interval
checking needsPoll, pollIntervalInSeconds = %@, lastSynced = %@ (%@)
received request update for domain version change to version: %@
skipping scheduling a sync, last synced domain version already %@
received request handle account change (set sync anchor to 0%@)
clearing all local changes that had been scheduled for push
reseting sync anchor to 0, and scheduling pull from server
running synchronizeImmediatelyWithCompletionHandler: now
received request to scheduleSyncBeforeDate: %@ (in %.2f sec)
target sync date from client: %@ (in %.2f sec)
target sync date in database has been passed, using sync date of 'now': %@ (in %.2f sec)
target sync date from database: %@ (in %.2f sec)
setting target date to: %@ (in %.2f sec)
scheduling sync NOW.
scheduling sync (via BackgroundTaskJob) %f seconds from now...
setting %@ to %@
failed to update ubiquitous bookmarkmatadata for metadata identifier %@.
updateMusicLibraryByApplyingUbiquitousBookmarkMetadataToTrackWithPersistentID:, persistentID %lld doesn't exist.
Error: SBDPushNotificationController init: Error unarchiving _registeredDomains from registeredDomains. registeredDomains=%@ error=%@
%@ APSConnection (env:%@) = %@ removed from runloop in dealloc
%@ connection:%@ didReceivePublicToken:%@
%@ connection:%@ didReceiveMessageForTopic:%@ userInfo:%@
Received push notification for storebookkeeper topic '%@' with userInfo %@
Received push notification for storebookkeeper domain '%@
Processing push notification for storebookkeeper domain '%@', version %@
%@ connection:%@ didReceiveIncomingMessage:%@
%@ connection:%@ didSendOutgoingMessage:%@
%@ connection:%@ didFailToSendOutgoingMessage:%@, error = %@
%@ connection:%@ didChangeConnectedStatus: connected = %d
%@ connectionDidReconnect:%@
Setting APNS connection enabled topics to %@ on connection %@
%@ Beginning APS bringup - creating connections...
%@ Push enabled: %d, environment: %@
%@->_connection (env:%@) = %@
%@ APSConnection (env:%@) = %@ removed from runloop
Push token: %@
Loading URL Bag
Finished loading URL Bag.  _pushEnabled = %@, _typeRegistrationURL = %@, _env = %@
Unable to update push notification registration to %@ for domain '%@' (accountID %@): reason = 'URL bag has not been loaded'.
Unable to update push notification registration to %@ for domain '%@' (accountID %@): reason = 'type registration URL not found in URL bag'.
Skipping opt-in push notification registration attempt for domain '%@' (accountID %@).  reason = 'push is not enabled at the moment'.
Unable to update push notification registration to %@ for domain '%@' (accountID %@): reason = 'account ID missing, not set, or unspecified'.
Skipping opt-out push notification registration attempt for domain '%@' (accountID %@).  reason = 'itunesstored has already sent an opt-out on our behalf'.
Making sure blocked accountID %@ is opted-out for push notifications
%@ push notification registration for domain '%@' (accountID: %@)
StoreBookkeeper update push notification registration to %@ for domain '%@' (accountID %@) issuing request %@ with properties %@
StoreBookkeeper update push notification registration to %@ for domain '%@' (accountID: %@) returned response %@ with status %ld with decoded body %@%@
...response-headers %@
ERROR: exception while handling SBKBlacklistedAccountIDs preference: %@
Received request: -%@, client=%@, entity=%@
[UPP] attempt to set hasChangeToPush while inactive may result in changes not being pushed to the servers.
received push notification event, %@'s version changed to %@
received changed account event, will reset sync%@
received request to do initial sync
received changed account event, will schedule sync
received request to synchronize immediately
v16@?0@"SBDDomainSyncServiceHandler"8
v16@?0@"SBDDomainValueServiceHandler"8
SBDServer.m
Use +sharedInstance instead
com.apple.storebookkeeperd.SBDServer
SBKStoreAccountChangedNotification
v16@?0@"NSNotification"8
SBKSharedMusicLibraryImportFinished
v32@?0@"NSNumber"8@"NSString"16@?<v@?B@"NSError">24
v20@?0B8@"NSError"12
XPCConnection
com.apple.storebookkeeperd.launched
@distinctUnionOfObjects.domain.foreignDatabasePath
com.apple.storebookkeeperd.XPCTransactionController
%@ identifier = %@ %@
DaemonTemporaryKeepAlive
v20@?0@"SBKStoreURLBagContext"8B16
 and clear last-sync revision number
com.apple.amp.storebookkeeperd
Default
Push
Server
SBDML3UbiquitousDatabase.m
use initWithMusicLibrary:
MLUbiquitousBookmarkEntityRevisionAnchor
MPUbiquitousBookmarkDomainVersionAnchorToken
MPDateLastSynced
MPUbiquitousBookmarkDomainVersionRemoteToken
MPDateToSyncWithUbiquitousStore
INSERT OR REPLACE INTO cloud_kvs (key, play_count_user, has_been_played, bookmark_time_ms, bookmark_sync_timestamp, bookmark_sync_revision) VALUES (?, ?, ?, ?, ?, ?)
has_been_played
play_count_user
bookmark_time_ms
bookmark_sync_timestamp
bookmark_sync_revision
%@ = ?
v32@?0@"NSString"8Q16^B24
UPDATE cloud_kvs SET %@ WHERE key = ?
SELECT item_pid, play_count_user, has_been_played, bookmark_time_ms FROM cloud_kvs INNER JOIN item_kvs USING (key) LEFT OUTER JOIN item USING (item_pid) WHERE key = ? AND item.item_pid IS NOT NULL
UPDATE item_stats SET bookmark_time_ms = ?, has_been_played = ?, play_count_user = ? where item_pid = ?
SELECT key FROM cloud_kvs WHERE key = ?
v16@?0@"ML3DatabaseConnection"8
DELETE FROM cloud_kvs WHERE key = ?
SELECT play_count_user, has_been_played, bookmark_time_ms FROM cloud_kvs WHERE key = ?
UPDATE cloud_kvs SET bookmark_sync_timestamp = ?, bookmark_sync_revision = ? WHERE key = ?
UPDATE cloud_kvs SET bookmark_sync_revision = 0 WHERE key
SELECT key, play_count_user, has_been_played, bookmark_time_ms, bookmark_sync_timestamp FROM cloud_kvs WHERE key
SELECT key, title, item_pid, bookmark_sync_timestamp, bookmark_time_ms, has_been_played, play_count_user  FROM cloud_kvs JOIN item_kvs using (key) JOIN item_extra using (item_pid)
id = %s; titles = %s; item_pids = %s; timestamp = %s; bookmark_time_ms = %s; has_been_played = %s; play_count_user %s
__SBDML3UbiquitousDatabaseKey
<NO VERSION>
%@: lastSyncedDomainVersion = %@, entityRevisions.lastSynced = %llu, entityRevisions.currentSyncTransaction = %llu)
v32@?0@"NSString"8@16^B24
%@ properties = %@
@16@?0@8
SELECT key FROM cloud_kvs LEFT OUTER JOIN item_kvs using (key) WHERE item_pid IS NULL AND bookmark_sync_timestamp != 0 AND bookmark_sync_revision >= ?
v32@?0q8Q16^B24
v32@?0@"ML3DatabaseRow"8@"NSError"16^B24
B16@?0@"ML3DatabaseConnection"8
v32@?0@"SBKUniversalPlaybackPositionMetadata"8@"ML3Track"16^B24
v32@?0@"SBKUniversalPlaybackPositionMetadata"8@16^B24
v32@?0@8@16^B24
com.apple.storebookkeeper
push-notifications.environment
push-notification-types.add-push-notification-type-url
SBKPushNotificationRegisteredDomains
com.apple.SBD.push-notification-controller
v32@?0@"NSString"8@"APSConnection"16^B24
PushNotificationConfiguration-LoadURLBag
v24@?0@"NSDictionary"8@"NSError"16
com.apple.aps.storebookkeeperd
com.apple.aps.storebookkeeperd.dev
com.apple.aps.storebookkeeperd.demo
Opt-in to
Opt-out of
, **error** = %@, %@
status
v24@?0@"SSURLConnectionResponse"8@"NSError"16
v28@?0@"NSString"8B16@"NSNumber"20
v32@?0@"NSString"8@"SBDPushRegistrationRequest"16^B24
domain
v32@?0@"NSString"8@"NSSet"16^B24
POST
application/x-apple-plist
Content-Type
bookkeeperDomain:%@
guid
notification-type
mzbookkeeper
put-parameters
SBKBlacklistedAccountIDs
unknown error
bad password token
unrecognized push notification type
no push device error
bad parameters in request
Request Failed: response status error (%d) '%@'
v8@?0
v12@?0B8
 (dropping local changes)
v40@?0@"SBKUniversalPlaybackPositionMetadata"8@"NSString"16@"NSString"24@"NSError"32
SBDPlaybackPositionService
SBCPlaybackPositionServiceProtocol_Internal
SBCPlaybackPositionServiceProtocol
SBCDomainSyncServiceProtocol
NSObject
SBCDomainValueServiceProtocol
SBCDomainSyncServiceProtocol_Internal
SBDDomainServiceHandler
SBDServer
NSXPCListenerDelegate
SBDPushNotificationControllerDelegate
XPCTransactionController
XPCTransaction
SBDDomainSyncedStorageController
SBKUniversalPlaybackPositionDataSource
SBDML3UbiquitousDatabase
SBDPlaybackPositionTransaction
SBKUniversalPlaybackPositionTransactionContext
SBDPlaybackPositionMediaItem
SBKUniversalPlaybackPositionMediaItem
SBDPlaybackPositionML3TrackMediaItem
SBKML3Properties
SBKSync
SBDWeakDomainDelegate
SBDPushNotificationController
APSConnectionDelegate
SBDPushRegistrationRequest
SBDDomainSyncServiceHandler
SBDDomainSyncedStorageObserver
SBDDomainValueServiceHandler
SBDJobScheduler
@24@0:8@16
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
Vv36@0:8@16B24@?28
Vv24@0:8@16
Vv32@0:8@16@?24
Vv36@0:8@"SBCPlaybackPositionEntity"16B24@?<v@?B>28
Vv24@0:8@"SBCPlaybackPositionEntity"16
Vv32@0:8@"NSArray"16@?<v@?B@"NSError"@"NSArray">24
Vv32@0:8@"SBCPlaybackPositionEntity"16@?<v@?B@"NSError"@"SBCPlaybackPositionEntity">24
Vv24@0:8@?16
Vv24@0:8@?<v@?B@"NSError">16
Vv24@0:8@"SBCClientConfiguration"16
v24@0:8@?16
v16@0:8
@"NSXPCConnection"
@"NSObject<OS_dispatch_queue>"
@"<SBCPlaybackPositionClientProtocol>"
@"SBDDomainSyncServiceHandler"
@"SBDDomainValueServiceHandler"
@"SBCClientConfiguration"
@"SBCPlaybackPositionDomain"
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v48@0:8@16@24@32@40
v48@0:8@"SBDPushNotificationController"16@"NSNumber"24@"NSString"32@"NSString"40
v20@0:8B16
v24@0:8@16
v40@0:8@16@24@?32
@"NSMutableArray"
@"NSXPCListener"
@"SBDPushNotificationController"
@"NSArray"
@"NSObject<OS_os_transaction>"
@"NSString"
@24@0:8@?16
@"<SBKUniversalPlaybackPositionTransactionContext>"24@0:8@?<v@?@"<SBKUniversalPlaybackPositionMediaItem>">16
v24@0:8@"<SBKUniversalPlaybackPositionTransactionContext>"16
v40@0:8@"<SBKUniversalPlaybackPositionTransactionContext>"16@"NSString"24@?<@"SBKUniversalPlaybackPositionMetadata"@?>32
v28@0:8@16B24
v32@0:8@16@24
v28@0:8B16@20
@32@0:8@16@24
@"NSOperationQueue"
@"SBKUniversalPlaybackPositionStore"
@"SBDML3UbiquitousDatabase"
@"ML3MusicLibrary"
@"NSNumber"
@"NSDate"
v24@0:8Q16
B68@0:8@16B24Q28d36d44q52@60
B60@0:8@16B24Q28d36d44q52
v32@0:8@16q24
@"NSMutableSet"
v32@0:8@16@?24
v32@0:8@"NSSet"16@?<v@?@"NSString"@^B>24
@"SBCPlaybackPositionEntity"
@32@0:8q16@24
q16@0:8
@"ML3Track"
@32@0:8Q16@24
@"<SBDPushNotificationControllerDelegate>"
v40@0:8@16@24@32
v32@0:8@"APSConnection"16@"NSData"24
v48@0:8@"APSConnection"16@"NSData"24@"NSString"32@"NSString"40
v40@0:8@"APSConnection"16@"NSData"24@"APSAppTokenInfo"32
v40@0:8@"APSConnection"16@"APSURLToken"24@"APSURLTokenInfo"32
v40@0:8@"APSConnection"16@"NSError"24@"APSURLTokenInfo"32
v32@0:8@"APSConnection"16@"APSIncomingMessage"24
v40@0:8@"APSConnection"16@"NSString"24@"NSDictionary"32
v32@0:8@"APSConnection"16@"APSOutgoingMessage"24
v40@0:8@"APSConnection"16@"APSOutgoingMessage"24@"NSError"32
v28@0:8@"APSConnection"16B24
v24@0:8@"APSConnection"16
v32@0:8@"APSConnection"16@"NSArray"24
v44@0:8@16B24@28@?36
@"NSMutableDictionary"
@"NSURL"
@"NSSet"
@"APSConnection"
@44@0:8@16B24@28@36
@36@0:8@16B24@28
v24@0:8@"SBDDomainSyncedStorageController"16
v28@0:8d16B24
d16@0:8
@"SBDDomainSyncedStorageController"
