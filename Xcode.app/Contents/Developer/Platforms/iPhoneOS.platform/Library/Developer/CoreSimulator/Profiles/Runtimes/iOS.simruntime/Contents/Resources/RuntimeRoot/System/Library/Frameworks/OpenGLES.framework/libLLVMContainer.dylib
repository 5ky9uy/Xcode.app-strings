%(c:
%*c:
%4c:
%6c:
%8c:
%Bc:
%Dc:
%Fc:
%Pc:
%Rc:
%Xe:
%Ze:
%\e:
%^e:
%`e:
%be:
%de:
%fe:
%he:
%je:
%le:
%ne:
%pe:
%re:
%te:
%ve:
%xe:
%ze:
%|e:
%~e:
%f:
% f:
%"f:
%$f:
%&f:
%(f:
%*f:
%,f:
%.f:
%0f:
%2f:
%4f:
%6f:
%8f:
%:f:
%<f:
%>f:
%@f:
%Bf:
%Df:
%Ff:
%Hf:
%Jf:
%Lf:
%Nf:
%Pf:
%Rf:
enable-objc-arc-opts
enable/disable all ARC Optimizations
ObjC ARC optimization
objc-arc
clang.imprecise_release
clang.arc.copy_on_escape
clang.arc.no_objc_arc_exceptions
objc_retain
objc_release
objc_autorelease
objc_retainAutoreleasedReturnValue
objc_retainBlock
objc_autoreleaseReturnValue
objc_autoreleasePoolPush
objc_loadWeakRetained
objc_loadWeak
objc_destroyWeak
objc_storeWeak
objc_initWeak
objc_moveWeak
objc_copyWeak
objc_retainedObject
objc_unretainedObject
objc_unretainedPointer
clang.arc.use
L_OBJC_SELECTOR_REFERENCES_
L_OBJC_CLASSLIST_REFERENCES_
L_OBJC_CLASSLIST_SUP_REFS_$_
L_OBJC_METH_VAR_NAME_
l_objc_msgSend_fixup_
ObjC ARC expansion
objc-arc-expand
ObjC ARC autorelease pool elimination
objc-arc-apelim
llvm.global_ctors
ObjC-ARC-Based Alias Analysis
objc-arc-aa
IC_Retain
IC_RetainRV
IC_RetainBlock
IC_Release
IC_Autorelease
IC_AutoreleaseRV
IC_AutoreleasepoolPush
IC_AutoreleasepoolPop
IC_NoopCast
IC_FusedRetainAutorelease
IC_FusedRetainAutoreleaseRV
IC_LoadWeakRetained
IC_StoreWeak
IC_InitWeak
IC_LoadWeak
IC_MoveWeak
IC_CopyWeak
IC_DestroyWeak
IC_StoreStrong
IC_CallOrUser
IC_Call
IC_User
IC_IntrinsicUser
IC_None
objc_autoreleasePoolPop
objc_retain_autorelease
objc_retainAutorelease
objc_retainAutoreleaseReturnValue
objc_sync_enter
objc_sync_exit
objc_storeStrong
llvm.arc.annotation.topdown.bbstart
llvm.arc.annotation.topdown.bbend
llvm.arc.annotation.bottomup.bbstart
llvm.arc.annotation.bottomup.bbend
ObjC ARC contraction
objc-arc-contract
clang.arc.retainAutoreleasedReturnValueMarker
 Opt:
 Index:
 Values: [
GroupClass
InputClass
UnknownClass
FlagClass
JoinedClass
SeparateClass
CommaJoinedClass
MultiArgClass
JoinedOrSeparateClass
JoinedAndSeparateClass
RemainingArgsClass
 Prefixes:[
 Name:"
 Group:
 Alias:
 NumArgs:
OVERVIEW: 
USAGE: 
 [options] <inputs>
OPTIONS
 <value>
<value>
Could not open input file: 
Parse IR
LLVM IR Parsing
target does not support JIT code generation
Target does not support machine code emission!
Error reading function '
' from bitcode file: 
Program used external function '
' which could not be resolved!
__dso_handle
Could not resolve external global address: 
Compilation of non-internal GlobalValue is disabled!
LLVM JIT requested to do lazy compilation of function '
' when lazy compiles are disabled!
Initialize memory with machine specific constant poolentry has not been implemented!
Allocation failed when allocating new memory in the JIT
exit
atexit
__main
Corrupt free list; points to 
Next and Prev pointers do not match.
Found free header at 
 that is not in free list.
Block size in header points out of current MemoryBlock.
End of block size marker (
and BlockSize (
) don't match.
Hdr->PrevAllocated (
) != 
LastHdr->ThisAllocated (
The first header should have PrevAllocated true.
asan-instrument-reads
instrument read instructions
asan-instrument-writes
instrument write instructions
asan-instrument-atomics
instrument atomic instructions (rmw, cmpxchg)
asan-always-slow-path
use instrumentation with slow path for all accesses
asan-max-ins-per-bb
maximal number of instructions to instrument in any given BB
asan-stack
Handle stack memory
asan-use-after-return
Check return-after-free
asan-globals
Handle global objects
asan-coverage
ASan coverage. 0: none, 1: entry block, 2: all blocks
asan-coverage-block-threshold
Add coverage instrumentation only to the entry block if there are more than this number of blocks.
asan-initialization-order
Handle C++ initializer order
asan-detect-invalid-pointer-pair
Instrument <, <=, >, >=, - with pointer operands
asan-realign-stack
Realign stack to the value of this flag (power of two)
asan-instrumentation-with-call-threshold
If the function being instrumented contains more than this number of memory accesses, use callbacks instead of inline checks (-1 means never use callbacks).
asan-memory-access-callback-prefix
Prefix for memory access callbacks
__asan_
asan-keep-uninstrumented-functions
Keep uninstrumented copies of functions
asan-mapping-scale
scale of asan shadow mapping
asan-opt
Optimize instrumentation
asan-opt-same-temp
Instrument the same temp just once
asan-opt-globals
Don't instrument scalar globals
asan-check-lifetime
Use llvm.lifetime intrinsics to insert extra checks
asan-stack-dynamic-alloca
Use dynamic alloca to represent stack variables
asan-debug
debug
asan-debug-stack
debug stack
asan-debug-func
Debug func
asan-debug-min
Debug min inst
asan-debug-max
Debug man inst
AddressSanitizer: detects use-after-free and out-of-bounds bugs.
asan
AddressSanitizerFunctionPass
data layout missing
asan.module_ctor
__asan_init_v5
llvm.asan.globals
trying to redefine an AddressSanitizer interface function
NOASAN_
NOASAN
ASAN
store
load
__asan_report_
__asan_report_load_n
__asan_report_store_n
loadN
storeN
memmove
memcpy
memset
__asan_handle_no_return
__sanitizer_cov
__sanitizer_ptr_cmp
__sanitizer_ptr_sub
 load]
nosanitize
llvm.
__asan_stack_malloc_
__asan_stack_free_
__asan_poison_stack_memory
__asan_unpoison_stack_memory
__asan_option_detect_stack_use_after_return
MyAlloca
__asan_gen_
__asan_gen_cov_
AddressSanitizer: detects use-after-free and out-of-bounds bugs.ModulePass
asan-module
AddressSanitizerModule
__asan_before_dynamic_init
__asan_after_dynamic_init
__asan_register_globals
__asan_unregister_globals
__sanitizer_cov_module_init
asan.module_dtor
L_OBJC_
l_OBJC_
__OBJC,
__DATA, __objc_
__DATA,__cfstring
__TEXT,__cstring,cstring_literals
.CRT
llvm.metadata
bounds-checking-single-trap
Use one trap block per function
Run-time bounds checking
bounds-checking
trap
dfsan-preserve-alignment
respect alignment requirements provided by input IR
dfsan-abilist
File listing native ABI functions and how the pass treats them
dfsan-args-abi
Use the argument ABI rather than the TLS ABI
dfsan-combine-pointer-labels-on-load
Combine the label of the pointer with the label of the data when loading from memory.
dfsan-combine-pointer-labels-on-store
Combine the label of the pointer with the label of the data when storing in memory.
dfsan-debug-nonzero-labels
Insert calls to __dfsan_nonzero_label on observing a parameter, load or return with a nonzero label
DataFlowSanitizer: dynamic data flow analysis.
dfsan
skip
__dfsan_arg_tls
__dfsan_retval_tls
__dfsan_union
dfsan_union
__dfsan_union_load
__dfsan_unimplemented
__dfsan_set_label
__dfsan_nonzero_label
dfsw$
uninstrumented
global
type
<unknown type>
.symver 
entry
functional
discard
custom
__dfsw_
labelreturn
debug-ir
DebugIR unable to determine file name in input. Ensure Module contains an identifier, a valid DICompileUnit, or construct DebugIR with non-empty Filename/Directory parameters.
.debug-ll
llvm.dbg.cu
<stdin>
DebugIR pass supports only a signle compile unit per Module.
LLVM Version 3.6
Printing <null> Type
Enable debugging IR
DebugIR
default-gcov-version
402*
Invalid -default-gcov-version: 
Insert instrumentation for GCOV profiling
insert-gcov-profiling
GCOV Profiler
gcno
oncg
llvm.gcov
__llvm_gcov_ctr
__llvm_gcov_init
llvm_gcov_init
__llvm_gcda_edge_table
__llvm_gcov_global_state_pred
__llvm_gcov_indirect_counter_increment
__llvm_gcov_writeout
gcda
llvm_gcda_start_file
llvm_gcda_emit_function
llvm_gcda_emit_arcs
llvm_gcda_summary_info
llvm_gcda_end_file
__llvm_gcov_flush
invalid return type for __llvm_gcov_flush
predecessor
pred
counters
counter
msan-track-origins
Track origins (allocation sites) of poisoned memory
msan-keep-going
keep going after reporting a UMR
msan-poison-stack
poison uninitialized stack variables
msan-poison-stack-with-call
poison uninitialized stack variables with a call
msan-poison-stack-pattern
poison uninitialized stack variables with the given patter
msan-poison-undef
poison undef temps
msan-handle-icmp
propagate shadow through ICmpEQ and ICmpNE
msan-handle-icmp-exact
exact handling of relational integer ICmp
msan-check-access-address
report accesses through a pointer which has poisoned shadow
msan-dump-strict-instructions
print out instructions with default strict semantics
msan-instrumentation-with-call-threshold
If the function being instrumented requires more than this number of checks and origin stores, use callbacks instead of inline checks (-1 means never use callbacks).
msan-wrap-indirect-calls
Wrap indirect calls with a given function
msan-wrap-indirect-calls-fast
Do not wrap indirect calls with target in the same module
MemorySanitizer: detects uninitialized reads.
msan
MemorySanitizer
unsupported pointer size
__msan_init
__msan_track_origins
__msan_keep_going
main
_msarg
_msarg_o
__msan_warning
__msan_warning_noreturn
__msan_maybe_warning_
__msan_maybe_store_origin_
__msan_set_alloca_origin4
__msan_poison_stack
__msan_chain_origin
__msan_memmove
__msan_memcpy
__msan_memset
__msan_retval_tls
__msan_retval_origin_tls
__msan_param_tls
__msan_param_origin_tls
__msan_va_arg_tls
__msan_va_arg_overflow_size_tls
__msan_origin_tls
__executable_start
_end
_msret
ZZZ call 
ZZZ 
QQQ 
_msprop
msprop_mul_cst
----
_msld
_msprop_ptrtoint
_msprop_inttoptr
_msprop_icmp
_msprop_icmpslt
_msphi_s
_msphi_o
_msprop_vector_pack
_msprop_select
_mscmp
msandr.indirect_target
Frontend instrumentation-based coverage lowering.
instrprof
Frontend instrumentation-based coverage lowering
__llvm_coverage_mapping
pgocount
data
__DATA,__llvm_prf_names
__llvm_prf_names
__llvm_profile_
__DATA,__llvm_prf_cnts
__llvm_prf_cnts
__DATA,__llvm_prf_data
__llvm_prf_data
__DATA,__llvm_covmap
__llvm_covmap
__llvm_profile_register_functions
__llvm_profile_register_function
__llvm_profile_runtime
__llvm_profile_runtime_user
llvm.used
__llvm_profile_init
tsan-instrument-memory-accesses
Instrument memory accesses
tsan-instrument-func-entry-exit
Instrument function entry and exit
tsan-instrument-atomics
Instrument atomics
tsan-instrument-memintrinsics
Instrument memintrinsics (memset/memcpy/memmove)
ThreadSanitizer: detects data races.
tsan
ThreadSanitizer
__tsan_init
__tsan_func_entry
__tsan_func_exit
__tsan_read
__tsan_write
__tsan_atomic
_load
_store
_exchange
_fetch_add
_fetch_sub
_fetch_and
_fetch_or
_fetch_xor
_fetch_nand
_compare_exchange_val
__tsan_vptr_update
__tsan_vptr_read
__tsan_atomic_thread_fence
__tsan_atomic_signal_fence
ThreadSanitizer interface function redefined
constant bigger than 64 bits detected!
constant bigger than 128 bits detected!
end of file in global variable name
Null bytes are not allowed in names
invalid value number (too large)!
end of file in COMDAT variable name
end of file in string constant
bitwidth for integer type out of range!
true
false
declare
define
constant
private
internal
available_externally
linkonce
linkonce_odr
weak
weak_odr
appending
dllimport
dllexport
common
default
hidden
protected
unnamed_addr
externally_initialized
extern_weak
external
thread_local
localdynamic
initialexec
localexec
zeroinitializer
undef
null
tail
musttail
target
triple
unwind
deplibs
datalayout
volatile
atomic
unordered
monotonic
acquire
release
acq_rel
seq_cst
singlethread
nnan
ninf
arcp
fast
exact
inbounds
align
addrspace
section
alias
module
sideeffect
alignstack
inteldialect
prefix
fastcc
coldcc
x86_stdcallcc
x86_fastcallcc
x86_thiscallcc
arm_apcscc
arm_aapcscc
arm_aapcs_vfpcc
msp430_intrcc
ptx_kernel
ptx_device
spir_kernel
spir_func
intel_ocl_bicc
x86_64_sysvcc
x86_64_win64cc
webkit_jscc
anyregcc
preserve_mostcc
preserve_allcc
attributes
alwaysinline
builtin
byval
inalloca
cold
dereferenceable
inlinehint
inreg
jumptable
minsize
naked
nest
noalias
nobuiltin
nocapture
noduplicate
noimplicitfloat
noinline
nonlazybind
nonnull
noredzone
noreturn
nounwind
optnone
optsize
readnone
readonly
returned
returns_twice
signext
sret
sspreq
sspstrong
sanitize_address
sanitize_thread
sanitize_memory
uwtable
zeroext
opaque
comdat
exactmatch
largest
noduplicates
samesize
xchg
nand
umax
umin
blockaddress
uselistorder
uselistorder_bb
personality
cleanup
catch
filter
void
half
float
double
x86_fp80
fp128
ppc_fp128
label
metadata
x86_mmx
fadd
fsub
fmul
udiv
sdiv
fdiv
urem
srem
frem
lshr
ashr
icmp
fcmp
call
trunc
zext
sext
fptrunc
fpext
uitofp
sitofp
fptoui
fptosi
inttoptr
ptrtoint
bitcast
addrspacecast
select
va_arg
switch
indirectbr
invoke
resume
unreachable
alloca
cmpxchg
atomicrmw
fence
getelementptr
extractelement
insertelement
shufflevector
extractvalue
insertvalue
landingpad
use of undefined metadata '!
expected function name in blockaddress
use of undefined type '%
use of undefined type named '
use of undefined comdat '$
use of undefined value '@
expected top-level entity
expected 'module asm'
unknown target property
expected '=' after target triple
expected '=' after target datalayout
expected '=' after deplibs
expected ']' at end of list
expected '=' after name
expected 'type' after '='
non-struct types may not be recursive
expected 'type' after name
expected 'global' or 'constant'
variable expected to be numbered '%
expected '=' in global variable
expected '=' here
expected comdat keyword
expected comdat type
unknown selection kind
redefinition of comdat '$
Expected '!' here
Expected '{' here
expected end of metadata node
Metadata id is already used
invalid linkage type for alias
symbol with local linkage must have default visibility
invalid aliasee
An alias must have pointer type
redefinition of global named '@
forward reference and definition of alias have different types
invalid type for global variable
redefinition of global '@
forward reference and definition of global have different types
expected global section string
unknown global variable property!
expected '{' here
expected end of attribute group
attribute group has no attributes
unterminated attribute group
cannot have an attribute group reference in an attribute group
invalid use of attribute on a function
invalid use of parameter-only attribute on a function
global variable reference must have pointer type
' defined with type '
expected string constant
expected integer
expected 32-bit integer (too large)
expected localdynamic, initialexec or localexec
expected ')' after thread local model
expected '(' in address space
expected ')' in address space
invalid use of function-only attribute
invalid use of parameter-only attribute
invalid use of attribute on return type
expected metadata after comma
expected '!' here
alignment is not a power of two
huge alignments are not supported yet
expected '('
expected ')'
dereferenceable bytes must be non-zero
expected metadata or 'align'
Expected ordering on atomic instruction
stack alignment is not a power of two
expected ',' as start of index list
expected type
expected '>' at end of packed struct
void type only allowed for function results
basic block pointers are invalid
pointers to void are invalid - use i8* instead
pointer to this type is invalid
pointers to void are invalid; use i8* instead
expected '*' in address space
expected '(' in call
expected ',' in argument list
argument can not have void type
invalid type for function argument
expected ')' at end of argument list
invalid function return type
argument name invalid in function type
argument attributes invalid in function type
redefinition of type
forward references to non-struct type
expected '>' in packed struct
invalid element type for struct
expected '}' at end of struct
expected number in address space
expected 'x' after element count
expected end of sequential type
zero element vector is illegal
size too large for vector
invalid vector element type
invalid array element type
use of undefined value '%
' is not a basic block
invalid use of a non-first-class type
instructions returning void cannot have a name
instruction expected to be numbered '%
instruction forward referenced with type '
multiple definition of local value named '
expected value token
expected end of struct constant
expected end of packed struct
expected end of constant
constant vector must not be empty
vector elements must have integer, pointer or floating point type
vector element #
 is not of type '
expected end of array constant
invalid array element type: 
array element #
expected string
expected comma in inline asm expression
expected constraint string
expected '(' in block address expression
expected comma in block address expression
expected ')' in block address expression
expected basic block name in blockaddress
cannot take blockaddress inside a declaration
referenced value is not a basic block
cannot take address of numeric label after the function is defined
expected '(' after constantexpr cast
expected 'to' in constantexpr cast
expected ')' at end of constantexpr cast
invalid cast opcode for cast from '
' to '
expected '(' in extractvalue constantexpr
expected ')' in extractvalue constantexpr
extractvalue operand must be aggregate type
invalid indices for extractvalue
expected '(' in insertvalue constantexpr
expected comma in insertvalue constantexpr
expected ')' in insertvalue constantexpr
insertvalue operand must be aggregate type
invalid indices for insertvalue
expected '(' in compare constantexpr
expected comma in compare constantexpr
expected ')' in compare constantexpr
compare operands must have the same type
fcmp requires floating point operands
icmp requires pointer or integer operands
expected '(' in binary constantexpr
expected comma in binary constantexpr
expected ')' in binary constantexpr
operands of constexpr must have same type
nuw only applies to integer operations
nsw only applies to integer operations
constexpr requires integer operands
constexpr requires fp operands
expected '(' in logical constantexpr
expected comma in logical constantexpr
expected ')' in logical constantexpr
constexpr requires integer or integer vector operands
expected '(' in constantexpr
expected ')' in constantexpr
getelementptr requires pointer operand
invalid indices for getelementptr
expected three operands to select
expected three operands to shufflevector
invalid operands to shufflevector
expected two operands to extractelement
invalid extractelement operands
expected three operands to insertelement
invalid insertelement operands
global values must be constants
expected comdat variable
functions are not values, refer to them as pointers
invalid use of function-local name
invalid type for inline asm constraint string
metadata value must have metadata type
integer constant must have integer type
floating point constant invalid for type
floating point constant does not have type '
null must be a pointer type
invalid type for undef constant
invalid empty array initializer
invalid type for null constant
constant expression type mismatch
initializer with struct type has wrong # elements
packed'ness of initializer and type don't match
element 
 of struct initializer doesn't match struct element type
expected a basic block
invalid linkage for function definition
invalid linkage for function declaration
invalid function linkage type
function expected to be numbered '%
expected function name
expected '(' in function argument list
'builtin' attribute not valid on function
functions with 'sret' argument must return void
invalid forward reference to function as global value!
invalid forward reference to function '
' with wrong type!
invalid redefinition of function '
redefinition of function '@
type of definition and forward reference of '@
' disagree
redefinition of argument '%
expected '{' in function body
function body requires at least one basic block
expected '=' after instruction id
expected '=' after instruction name
found end of file when expecting more instructions
expected instruction opcode
expected fcmp predicate (e.g. 'oeq')
expected icmp predicate (e.g. 'eq')
value doesn't match function result type '
branch condition must have 'i1' type
expected ',' after branch condition
expected ',' after true destination
expected ',' after switch condition
expected '[' with switch table
switch condition must have integer type
expected ',' after case value
duplicate case value in switch
case value is not a constant integer
expected ',' after indirectbr address
expected '[' with indirectbr
indirectbr address must have pointer type
expected ']' at end of block list
expected 'to' in invoke
expected 'unwind' in invoke
Invalid result type for LLVM function
too many arguments specified
argument is not of expected type '
not enough parameters specified for call
expected ',' in arithmetic operation
invalid operand type for instruction
expected ',' in logical operation
instruction requires integer or integer vector operands
expected ',' after compare value
icmp requires integer operands
expected 'to' after cast value
expected ',' after select condition
expected ',' after select value
expected ',' after vaarg operand
va_arg requires operand with first class type
expected ',' after extract value
expected ',' after insertelement value
expected ',' after shuffle mask
expected ',' after shuffle value
invalid shufflevector operands
expected '[' in phi value list
expected ']' in phi value list
phi node must have first class type
expected 'personality'
'catch' clause has an invalid type
'filter' clause has an invalid type
expected 'tail call'
element count must have integer type
load operand must be a pointer to a first class type
atomic load must have explicit non-zero alignment
atomic load cannot use Release ordering
expected ',' after store operand
store operand must be a pointer
store operand must be a first class value
stored value and pointer type do not match
atomic store must have explicit non-zero alignment
atomic store cannot use Acquire ordering
expected ',' after cmpxchg address
expected ',' after cmpxchg cmp operand
cmpxchg cannot be unordered
cmpxchg must be at least as ordered on success as failure
cmpxchg failure ordering cannot include release semantics
cmpxchg operand must be a pointer
compare value and pointer type do not match
new value and pointer type do not match
cmpxchg operand must be an integer
cmpxchg operand must be power-of-two byte-sized integer
expected binary operation in atomicrmw
expected ',' after atomicrmw address
atomicrmw cannot be unordered
atomicrmw operand must be a pointer
atomicrmw value and pointer type do not match
atomicrmw operand must be an integer
atomicrmw operand must be power-of-two byte-sized integer
fence cannot be unordered
fence cannot be monotonic
base of getelementptr must be a pointer
getelementptr index must be an integer
getelementptr index type missmatch
getelementptr vector index has a wrong number of elements
base element of getelementptr must be sized
invalid getelementptr indices
expected comma after insertvalue operand
value has no uses
value only has one use
wrong number of indexes, expected 
expected non-empty list of uselistorder indexes
expected '}' here
expected >= 2 uselistorder indexes
expected distinct uselistorder indexes in range [0, size)
expected uselistorder indexes to change the order
expected uselistorder directive
expected comma in uselistorder directive
expected comma in uselistorder_bb directive
expected function name in uselistorder_bb
invalid function forward reference in uselistorder_bb
invalid declaration in uselistorder_bb
invalid numeric label in uselistorder_bb
expected basic block name in uselistorder_bb
invalid basic block in uselistorder_bb
expected basic block in uselistorder_bb
expected index
<string>
WARNING: Linking two modules of different data layouts: '
' is '
' whereas '
WARNING: Linking two modules of different target triples: 
Linking COMDATs named '
': invalid selection kinds!
': noduplicates has been violated!
': can't do size dependent selection without DataLayout!
': ExactMatch violated!
': SameSize violated!
': COMDAT key involves incomputable alias size.
': GlobalVariable required for data dependent selection!
llvm.global_dtors
Linking globals named '
': can only link appending global with another appending global!
Appending variables with different element types!
Appending variables linked with different const'ness!
Appending variables with different alignment need to be linked!
Appending variables with different visibility need to be linked!
Appending variables with different unnamed_addr need to be linked!
Appending variables with different section name need to be linked!
': symbol multiply defined!
linking module flags '
': IDs have conflicting override values
': IDs have conflicting behaviors
': IDs have conflicting values
WARNING: linking module flags '
': does not have the required value
Promote 'by reference' arguments to scalars
argpromotion
.val
.idx
A No-Op Barrier Pass
barrier
Merge Duplicate Global Constants
constmerge
llvm.compiler.used
Dead Argument Elimination
deadargelim
Dead Argument Hacking (BUGPOINT USE ONLY; DO NOT USE)
deadarghaX0r
newret
oldret
Deduce function attributes
functionattrs
Dead Global Elimination
globaldce
Global Variable Optimizer
globalopt
.body
newgv
.init
notinit
isneg
isnull
malloc_cont
malloc_ret_null
free_it
next
Interprocedural constant propagation
ipconstprop
Inliner for always_inline functions
always-inline
Function Integration/Inlining
inline
inline-threshold
Control the amount of inlining to perform (default = 225)
inlinehint-threshold
Threshold for inlining functions with inline hint
inlinecold-threshold
Threshold for inlining functions with cold attribute
 should always be inlined (cost=always)
 should never be inlined (cost=never)
 too costly to inline (cost=
, threshold=
Not inlining. Cost of inlining 
 increases the cost of inlining 
 in other contexts
 can be inlined into 
 with cost=
 (threshold=
 will not be inlined into 
 inlined into 
internalize-public-api-file
filename
A file containing list of symbol names to preserve
internalize-public-api-list
list
A list of symbol names to preserve
Internalize Global Symbols
internalize
WARNING: Internalize couldn't load file '
'! Continuing as if it's empty.
llvm.global.annotations
__stack_chk_fail
__stack_chk_guard
extract-blocks-file
A file containing list of basic blocks to not extract
Extract loops into new functions
loop-extract
Extract at most one loop into a new function
loop-extract-single
Extract Basic Blocks From Module (for bugpoint use)
extract-blocks
WARNING: BlockExtractor couldn't load file '
mergefunc-sanity
How many functions in module could be used for MergeFunctions pass sanity check. '0' disables this check. Works only with '-debug' key.
Merge Functions
mergefunc
Partial Inliner
partial-inliner
vectorize-loops
Run the Loop vectorization passes
vectorize-slp
Run the SLP vectorization passes
vectorize-slp-aggressive
Run the BB vectorization passes
use-gvn-after-vectorization
Run GVN instead of Early CSE after vectorization passes
use-new-sroa
Enable the new, experimental SROA pass
reroll-loops
Run the loop rerolling pass
combine-loads
Run the load combining pass
run-slp-after-loop-vectorization
Run the SLP vectorizer (and BB vectorizer) after the Loop vectorizer instead of before
Remove unused exception handling info
prune-eh
Strip Unused Function Prototypes
strip-dead-prototypes
Strip all symbols from a module
strip
llvm.dbg
Strip all symbols, except dbg symbols, from a module
strip-nondebug
Strip all llvm.dbg.declare intrinsics
strip-debug-declare
llvm.dbg.declare
Strip debug info for unused symbols
strip-dead-debug-info
bb-vectorize-ignore-target-info
Ignore target information
bb-vectorize-req-chain-depth
The required chain depth for vectorization
bb-vectorize-use-chain-depth
Use the chain depth requirement with target information
bb-vectorize-search-limit
The maximum search distance for instruction pairs
bb-vectorize-splat-breaks-chain
Replicating one element to a pair breaks the chain
bb-vectorize-vector-bits
The size of the native vector registers
bb-vectorize-max-iter
The maximum number of pairing iterations
bb-vectorize-pow2-len-only
Don't try to form non-2^n-length vectors
bb-vectorize-max-instr-per-group
The maximum number of pairable instructions per group
bb-vectorize-max-pairs-per-group
The maximum number of candidate instruction pairs per group
bb-vectorize-max-cycle-check-pairs
The maximum number of candidate pairs with which to use a full cycle check
bb-vectorize-no-bools
Don't try to vectorize boolean (i1) values
bb-vectorize-no-ints
Don't try to vectorize integer values
bb-vectorize-no-floats
Don't try to vectorize floating-point values
bb-vectorize-no-pointers
Don't try to vectorize pointer values
bb-vectorize-no-casts
Don't try to vectorize casting (conversion) operations
bb-vectorize-no-math
Don't try to vectorize floating-point math intrinsics
bb-vectorize-no-bitmanip
Don't try to vectorize BitManipulation intrinsics
bb-vectorize-no-fma
Don't try to vectorize the fused-multiply-add intrinsic
bb-vectorize-no-select
Don't try to vectorize select instructions
bb-vectorize-no-cmp
Don't try to vectorize comparison instructions
bb-vectorize-no-gep
Don't try to vectorize getelementptr instructions
bb-vectorize-no-mem-ops
Don't try to vectorize loads and stores
bb-vectorize-aligned-only
Only generate aligned loads and stores
bb-vectorize-no-mem-op-boost
Don't boost the chain-depth contribution of loads and stores
bb-vectorize-fast-dep
Use a fast instruction dependency analysis
bb-vectorize
.v.i
.v.r
force-vector-width
Sets the SIMD width. Zero is autoselect.
force-vector-unroll
Sets the vectorization unroll count. Zero is autoselect.
enable-if-conversion
Enable if-conversion during vectorization.
vectorizer-min-trip-count
Don't vectorize loops with a constant trip count that is smaller than this value.
enable-mem-access-versioning
Enable symblic stride memory access versioning
force-target-num-scalar-regs
A flag that overrides the target's number of scalar registers.
force-target-num-vector-regs
A flag that overrides the target's number of vector registers.
force-target-max-scalar-unroll
A flag that overrides the target's max unroll factor for scalar loops.
force-target-max-vector-unroll
A flag that overrides the target's max unroll factor for vectorized loops.
force-target-instruction-cost
A flag that overrides the target's expected cost for an instruction to a single constant value. Mostly useful for getting consistent testing.
small-loop-cost
The cost of a loop that is considered 'small' by the unroller.
loop-vectorize-with-block-frequency
Enable the use of the block frequency analysis to access PGO heuristics minimizing code growth in cold regions and being more aggressive in hot regions.
enable-loadstore-runtime-unroll
Enable runtime unrolling until load/store ports are saturated
vectorize-num-stores-pred
Max number of stores to be predicated behind an if.
enable-ind-var-reg-heur
Count the induction variable only once when unrolling
enable-cond-stores-vec
Enable if predication of stores during vectorization.
loop-vectorize
loop not vectorized: vector width and interleave count are explicitly set to 1
vectorization is not beneficial and is not explicitly forced
loop not vectorized due to NoImplicitFloat attribute
not beneficial to vectorize and user disabled interleaving
unrolled with interleaving factor 
 (vectorization not beneficial)
vectorized loop (vectorization factor: 
, unrolling interleave factor: 
llvm.loop.
vectorize.width
vectorize.enable
interleave.count
vectorization is explicitly disabled
use -Rpass-analysis=loop-vectorize for more info
 (Force=true
, Vector Width=
, Interleave Count=
loop not vectorized: 
loop control flow is not understood by vectorizer
loop is not the innermost loop
could not determine number of loop iterations
if-conversion is disabled
loop contains a switch statement
control flow cannot be substituted for a select
no-nans-fp-math
value could not be identified as an induction or reduction variable
control flow not understood by vectorizer
use of induction value outside of the loop is not handled by vectorizer
value that could not be identified as reduction is used outside the loop
call instruction cannot be vectorized
intrinsic instruction cannot be vectorized
instruction return type cannot be vectorized
store instruction cannot be vectorized
value cannot be used outside the loop
loop induction variable could not be identified
read with atomic ordering or volatile read
instruction cannot be vectorized
write with atomic ordering or volatile write
write to a loop invariant address could not be vectorized
cannot identify array bounds
cannot check memory dependencies at runtime
 exceeds limit of 
 dependent memory operations checked at runtime
unsafe dependent memory operations in loop
failed explicitly specified loop vectorization
failed explicitly specified loop interleaving
runtime pointer checks needed. Enable vectorization of this loop with '#pragma clang loop vectorize(enable)' when compiling with -Os
store that is conditionally executed prevents vectorization
unable to calculate the loop count due to complex control flow
cannot optimize for size and vectorize at the same time. Enable vectorization of this loop with '#pragma clang loop vectorize(enable)' when compiling with -Os
cond.store
.cloned
else
gep.indvar.base
gep.indvar.idx
wide.load
broadcast
.splatinsert
.splat
induction
reverse
minmax.ident
rdx.vec.exit.phi
bin.rdx
rdx.shuf
bc.merge.rdx
vec.phi
predphi
normalized.idx
offset.idx
resize.norm.idx
reverse.idx
gep.ridx
gep.idx
next.gep
insert.gep
rdx.minmax.cmp
rdx.minmax.select
backedge.ptrcnt.to.int
backedge.overflow
overflow.check.anchor
vector.ph
vector.body
middle.block
scalar.ph
index
ptrcnt.to.int
cnt.cast
end.idx
n.mod.vf
n.vec
end.idx.rnd.down
cmp.zero
overflow.checked
vector.stridecheck
vector.memcheck
resume.val
trunc.resume.val
bc.resume.val
bc.trunc.resume.val
cast.crd
ind.end
rev.ind.end
ptr.ind.end
rev.ptr.ind.end
new.indc.resume.val
cmp.n
index.next
stride.chk
stride.not.one
bound0
bound1
found.conflict
conflict.rdx
memcheck.conflict
slp-threshold
Only vectorize if you gain more than this number 
slp-vectorize-hor
Attempt to vectorize horizontal reductions
slp-vectorize-hor-store
Attempt to vectorize horizontal reductions feeding into a store
slp-vectorizer
rdx.shuf.l
rdx.shuf.r
Target does not support MC emission!
not yet implemented
.eh_frame
Unable to allocate memory for common symbols!
<common symbols>
Unable to allocate section memory!
Incompatible object format!
File '
' not found. 
No stubs registered.
Available files are:
Section '
' not found in file '
Symbol '
' not found.
Expression '
' is false: 
0x%llx
 != 
Unexpected end of expression
expected '(', '*', identifier, or number
Expected '{' following '*'.
Invalid size for dereference.
Missing '}' for dereference.
decode_operand
next_pc
stub_addr
section_addr
No known address for symbol '
 (this appears to be an assembler local label -  perhaps drop the 'L'?)
0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ:_.$
Cannot decode unknown symbol '
expected ','
Couldn't decode instruction at '
Invalid operand index '
' for instruction '
'. Instruction has only 
 operands.
Instruction is:
Operand '
' of instruction '
' is not an immediate.
Instruction is:
expected number
0123456789abcdefABCDEF
0123456789
expected ':'
expected ']'
Error evaluating expression '
Encountered unexpected token '
' while parsing subexpression '
.got
.toc
.tocbss
.plt
.opd
.TOC.
Unable to allocate memory for GOT!
File too short!
Section header table goes past end of file!
Section table goes past end of file!
More than one .symtab_shndx!
More than one .symtab!
More than one .dynsym!
More than one .dynamic!
More than one .gnu.version section!
More than one .gnu.version_d section!
More than one .gnu.version_r section!
Invalid section index!
String table must end with a null terminator!
Invalid section type in Rel!
Invalid symbol table section type!
Unknown
ELF32-i386
ELF32-x86-64
ELF32-arm
ELF32-hexagon
ELF32-mips
ELF32-ppc
ELF32-sparc
ELF32-unknown
ELF64-i386
ELF64-x86-64
ELF64-aarch64
ELF64-ppc64
ELF64-s390
ELF64-sparc
ELF64-mips
ELF64-unknown
Invalid ELFCLASS!
Section ended unexpectedly while scanning version definitions.
Unexpected verdef version
Section ended unexpectedly while scanning version needed records.
Unexpected verneed version
Section ended unexpected while scanning auxiliary version needed records.
resolveRelocation Section: 
 LocalAddress: 
 FinalAddress: 
0x%016llx
 Value: 
 Addend: 
 isPCRel: 
 MachoType: 
 Size: 
Relocation type not implemented yet!
__eh_frame
__text
__gcc_except_tab
__nl_symbol_ptr
Unexpected SECTDIFF relocation addend.
__jump_table
__pointers
Invalid number of arguments of main() supplied
Invalid type for third argument of main() supplied
Invalid type for second argument of main() supplied
Invalid type for first argument of main() supplied
Invalid return type of main() supplied
Cannot create an interpreter with a memory manager.
Cannot create a legacy JIT with a runtime dyld memory manager.
WARNING: This target JIT is not designed for the host
 you are running.  If bad things happen, please choose
 a different -march switch.
Interpreter has not been linked in.
JIT has not been linked in.
ConstantExpr not handled: 
ERROR: Constant unimplemented for type: 
Cannot store value of type 
Cannot load value of type 
Refusing to use options struct that is larger than my own; assuming LLVM library mismatch.
No available targets are compatible with this -march, see -version for the available targets.
: Unexpected decode table opcode!
symbol stub for: 
Objc message: 
literal pool symbol address: 
literal pool for: "
Objc cfstring ref: @"
Objc message ref: 
Objc selector ref: 
Objc class ref: 
aarch64-a57-fp-load-balancing-force-all
Always modify dest registers regardless of color
aarch64-a57-fp-load-balancing-override
Ignore balance information, always return (1: Even, 2: Odd).
A57 FP Anti-dependency breaker
aarch64-type-promotion
Enable the type promotion pass
aarch64-type-promotion-merge
Enable merging of redundant sexts when one is dominating the other.
AArch64 Type Promotion Pass
AArch64 Address Type Promotion
aarch64-simd-scalar-force-all
Force use of AdvSIMD scalar instructions everywhere
AdvSIMD Scalar Operation Optimization
AArch64 Assembly Printer
DEBUG_VALUE: 
 <- 
aarch64-branch-relax
Relax out of range conditional branches
aarch64-tbz-offset-bits
Restrict range of TB[N]Z instructions (DEBUG)
aarch64-cbz-offset-bits
Restrict range of CB[N]Z instructions (DEBUG)
aarch64-bcc-offset-bits
Restrict range of Bcc instructions (DEBUG)
AArch64 branch relaxation pass
Local Dynamic TLS Access Clean-up
_TLS_MODULE_BASE_
aarch64-collect-loh-pre-collect-register
Restrict analysis to registers invovled in LOHs
aarch64-collect-loh-bb-only
Restrict analysis at basic block scope
AArch64 Collect Linker Optimization Hint (LOH)
aarch64-collect-loh
aarch64-ccmp-limit
Maximum number of instructions per speculated block.
aarch64-stress-ccmp
Turn all knobs to 11
AArch64 CCMP Pass
aarch64-ccmp
AArch64 Conditional Compares
Dead register definitions
AArch64 pseudo instruction expansion pass
aarch64-redzone
enable use of redzone on AArch64
AArch64 Instruction Selection
cyclone
Load/store alignment support
aarch64-strict-align
Disallow all unaligned memory accesses
aarch64-no-strict-align
Allow unaligned memory accesses
aarch64-extr-generation
Allow AArch64 (or (shift)(shift))->extract
aarch64-shift-insert-generation
Allow AArch64 SLI/SRI formation
AArch64ISD::CALL
AArch64ISD::ADRP
AArch64ISD::ADDlow
AArch64ISD::LOADgot
AArch64ISD::RET_FLAG
AArch64ISD::BRCOND
AArch64ISD::CSEL
AArch64ISD::FCSEL
AArch64ISD::CSINV
AArch64ISD::CSNEG
AArch64ISD::CSINC
AArch64ISD::THREAD_POINTER
AArch64ISD::TLSDESC_CALL
AArch64ISD::ADC
AArch64ISD::SBC
AArch64ISD::ADDS
AArch64ISD::SUBS
AArch64ISD::ADCS
AArch64ISD::SBCS
AArch64ISD::ANDS
AArch64ISD::FCMP
AArch64ISD::FMIN
AArch64ISD::FMAX
AArch64ISD::DUP
AArch64ISD::DUPLANE8
AArch64ISD::DUPLANE16
AArch64ISD::DUPLANE32
AArch64ISD::DUPLANE64
AArch64ISD::MOVI
AArch64ISD::MOVIshift
AArch64ISD::MOVIedit
AArch64ISD::MOVImsl
AArch64ISD::FMOV
AArch64ISD::MVNIshift
AArch64ISD::MVNImsl
AArch64ISD::BICi
AArch64ISD::ORRi
AArch64ISD::BSL
AArch64ISD::NEG
AArch64ISD::EXTR
AArch64ISD::ZIP1
AArch64ISD::ZIP2
AArch64ISD::UZP1
AArch64ISD::UZP2
AArch64ISD::TRN1
AArch64ISD::TRN2
AArch64ISD::REV16
AArch64ISD::REV32
AArch64ISD::REV64
AArch64ISD::EXT
AArch64ISD::VSHL
AArch64ISD::VLSHR
AArch64ISD::VASHR
AArch64ISD::CMEQ
AArch64ISD::CMGE
AArch64ISD::CMGT
AArch64ISD::CMHI
AArch64ISD::CMHS
AArch64ISD::FCMEQ
AArch64ISD::FCMGE
AArch64ISD::FCMGT
AArch64ISD::CMEQz
AArch64ISD::CMGEz
AArch64ISD::CMGTz
AArch64ISD::CMLEz
AArch64ISD::CMLTz
AArch64ISD::FCMEQz
AArch64ISD::FCMGEz
AArch64ISD::FCMGTz
AArch64ISD::FCMLEz
AArch64ISD::FCMLTz
AArch64ISD::NOT
AArch64ISD::BIT
AArch64ISD::CBZ
AArch64ISD::CBNZ
AArch64ISD::TBZ
AArch64ISD::TBNZ
AArch64ISD::TC_RETURN
AArch64ISD::SITOF
AArch64ISD::UITOF
AArch64ISD::SQSHL_I
AArch64ISD::UQSHL_I
AArch64ISD::SRSHR_I
AArch64ISD::URSHR_I
AArch64ISD::SQSHLU_I
AArch64ISD::WrapperLarge
AArch64ISD::LD2post
AArch64ISD::LD3post
AArch64ISD::LD4post
AArch64ISD::ST2post
AArch64ISD::ST3post
AArch64ISD::ST4post
AArch64ISD::LD1x2post
AArch64ISD::LD1x3post
AArch64ISD::LD1x4post
AArch64ISD::ST1x2post
AArch64ISD::ST1x3post
AArch64ISD::ST1x4post
AArch64ISD::LD1DUPpost
AArch64ISD::LD2DUPpost
AArch64ISD::LD3DUPpost
AArch64ISD::LD4DUPpost
AArch64ISD::LD1LANEpost
AArch64ISD::LD2LANEpost
AArch64ISD::LD3LANEpost
AArch64ISD::LD4LANEpost
AArch64ISD::ST2LANEpost
AArch64ISD::ST3LANEpost
AArch64ISD::ST4LANEpost
__sincos_stret
__sincosf_stret
failed to perform tail call elimination on a call site marked musttail
Invalid register name global variable
{cc}
lohi
lo64
hi64
val64
Cannot find option named '
cortex-a57
__clear_cache
cortex-a53
aarch64-load-store-scan-limit
aarch64-unscaled-mem-op
Allow AArch64 unscaled load/store combining
AArch64 load / store optimization pass
aarch64-stress-promote-const
Promote all vector constants
AArch64 Promote Constant Pass
aarch64-promote-const
AArch64 Promote Constant
_PromotedConst
GPR32sponly
tcGPR64
QQQQ_with_qsub0_in_FPR128_lo+QQQQ_with_qsub3_in_FPR128_lo
FPR8
GPR32all
bsub
dsub
dsub0
dsub1
dsub2
dsub3
hsub
qhisub
qsub
qsub0
qsub1
qsub2
qsub3
ssub
sub_32
dsub1_then_bsub
dsub1_then_hsub
dsub1_then_ssub
dsub3_then_bsub
dsub3_then_hsub
dsub3_then_ssub
dsub2_then_bsub
dsub2_then_hsub
dsub2_then_ssub
qsub1_then_bsub
qsub1_then_dsub
qsub1_then_hsub
qsub1_then_ssub
qsub3_then_bsub
qsub3_then_dsub
qsub3_then_hsub
qsub3_then_ssub
qsub2_then_bsub
qsub2_then_dsub
qsub2_then_hsub
qsub2_then_ssub
dsub0_dsub1
dsub0_dsub1_dsub2
dsub1_dsub2
dsub1_dsub2_dsub3
dsub2_dsub3
dsub_qsub1_then_dsub
dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
dsub_qsub1_then_dsub_qsub2_then_dsub
qsub0_qsub1
qsub0_qsub1_qsub2
qsub1_qsub2
qsub1_qsub2_qsub3
qsub2_qsub3
qsub1_then_dsub_qsub2_then_dsub
qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
qsub2_then_dsub_qsub3_then_dsub
AArch64 Store Pair Suppression
Expected a variant SchedClass
aarch64-early-ifcvt
Enable the early if converter pass
aarch64-use-tbi
Assume that top byte of an address is ignored
generic
e-m:o-i64:64-i128:128-n32:64-S128
e-m:e-i64:64-i128:128-n32:64-S128
E-m:e-i64:64-i128:128-n32:64-S128
bzero
Enable the CCMP formation pass
aarch64-mcr
Enable the machine combiner pass
aarch64-stp-suppress
Suppress STP for AArch64
aarch64-simd-scalar
Enable use of AdvSIMD scalar integer instructions
Enable the promote constant pass
Enable the pass that emits the linker optimization hints (LOH)
aarch64-dead-def-elimination
Enable the pass that removes dead definitons and replaces stores to them with stores to the zero register
aarch64-load-store-opt
Enable the load/store pair optimization pass
aarch64-atomic-cfg-tidy
Run SimplifyCFG after expanding atomic operations to make use of cmpxchg flow-based information
aarch64-enable-early-ifcvt
Run early if-conversion
AArch64 Target Transform Info
aarch64tti
nzcv
b.eq
b.ne
b.hs
b.cs
b.lo
b.cc
b.mi
b.pl
b.vs
b.vc
b.hi
b.ls
b.ge
b.lt
b.gt
b.le
b.al
b.nv
.req
tlbi
invalid condition code
ccmp
ccmn
fccmp
fccmpe
fcsel
csel
csinc
csinv
csneg
cset
csetm
cinc
cinv
cneg
unexpected token in argument list
vector register without type specifier expected
register name or alias expected
unexpected input in .req directive
ignoring redefinition of register alias '
vector register expected
invalid vector kind qualifier
.16b
invalid operand
ialluis
iallu
ivau
invalid operand for IC instruction
ivac
cvac
cvau
civac
cisw
invalid operand for DC instruction
s1e1r
s1e2r
s1e3r
s1e1w
s1e2w
s1e3w
s1e0r
s1e0w
s12e1r
s12e1w
s12e0r
s12e0w
invalid operand for AT instruction
vmalle1is
alle2is
alle3is
vae1is
vae2is
vae3is
aside1is
vaae1is
alle1is
vale1is
vaale1is
vmalle1
alle2
vale2is
vale3is
alle3
vae1
vae2
vae3
aside1
vaae1
alle1
vale1
vale2
vale3
vaale1
ipas2e1
ipas2le1
ipas2e1is
ipas2le1is
vmalls12e1
vmalls12e1is
invalid operand for TLBI instruction
expected register operand
specified 
 op requires a register
 op does not use a register
<fpimm 
<barrier 
<barrier invalid #
<shiftedimm 
, lsl #
<condcode 
<register 
<vectorlist 
<vectorindex 
<sysreg: 
<prfop 
<prfop invalid #
<imp>
uxtb
uxth
uxtw
uxtx
sxtb
sxth
sxtw
sxtx
immediate value expected for vector index
']' expected
fcmpe
fcmeq
fcmge
fcmgt
fcmle
fcmlt
unexpected floating point literal
expected floating-point constant #0.0
unexpected token in operand
movz
Immediate too large for register
adcs
addhn
addhn2
addp
adds
addv
adrp
aesd
aese
aesimc
aesmc
ands
asrv
bics
cbnz
ccmn
ccmp
cinc
cinv
clrex
cmeq
cmge
cmgt
cmhi
cmhs
cmle
cmlo
cmls
cmlt
cmtst
cneg
crc32b
crc32cb
crc32ch
crc32cw
crc32cx
crc32h
crc32w
crc32x
csel
cset
csetm
csinc
csinv
csneg
dcps1
dcps2
dcps3
drps
eret
extr
fabd
fabs
facge
facgt
facle
faclt
fadd
faddp
fccmp
fccmpe
fcmeq
fcmge
fcmgt
fcmle
fcmlt
fcmp
fcmpe
fcsel
fcvt
fcvtas
fcvtau
fcvtl
fcvtl2
fcvtms
fcvtmu
fcvtn
fcvtn2
fcvtns
fcvtnu
fcvtps
fcvtpu
fcvtxn
fcvtxn2
fcvtzs
fcvtzu
fdiv
fmadd
fmax
fmaxnm
fmaxnmp
fmaxnmv
fmaxp
fmaxv
fmin
fminnm
fminnmp
fminnmv
fminp
fminv
fmla
fmls
fmov
fmsub
fmul
fmulx
fneg
fnmadd
fnmsub
fnmul
frecpe
frecps
frecpx
frinta
frinti
frintm
frintn
frintp
frintx
frintz
frsqrte
frsqrts
fsqrt
fsub
hint
ld1r
ld2r
ld3r
ld4r
ldar
ldarb
ldarh
ldaxp
ldaxr
ldaxrb
ldaxrh
ldnp
ldpsw
ldrb
ldrh
ldrsb
ldrsh
ldrsw
ldtr
ldtrb
ldtrh
ldtrsb
ldtrsh
ldtrsw
ldur
ldurb
ldurh
ldursb
ldursh
ldursw
ldxp
ldxr
ldxrb
ldxrh
lslv
lsrv
madd
mneg
movi
movk
movn
movz
msub
mvni
negs
ngcs
pmul
pmull
pmull2
prfm
prfum
raddhn
raddhn2
rbit
rev16
rev32
rev64
rorv
rshrn
rshrn2
rsubhn
rsubhn2
saba
sabal
sabal2
sabd
sabdl
sabdl2
sadalp
saddl
saddl2
saddlp
saddlv
saddw
saddw2
sbcs
sbfm
scvtf
sdiv
sevl
sha1c
sha1h
sha1m
sha1p
sha1su0
sha1su1
sha256h
sha256h2
sha256su0
sha256su1
shadd
shll
shll2
shrn
shrn2
shsub
smaddl
smax
smaxp
smaxv
smin
sminp
sminv
smlal
smlal2
smlsl
smlsl2
smnegl
smov
smsubl
smulh
smull
smull2
sqabs
sqadd
sqdmlal
sqdmlal2
sqdmlsl
sqdmlsl2
sqdmulh
sqdmull
sqdmull2
sqneg
sqrdmulh
sqrshl
sqrshrn
sqrshrn2
sqrshrun
sqrshrun2
sqshl
sqshlu
sqshrn
sqshrn2
sqshrun
sqshrun2
sqsub
sqxtn
sqxtn2
sqxtun
sqxtun2
srhadd
srshl
srshr
srsra
sshl
sshll
sshll2
sshr
ssra
ssubl
ssubl2
ssubw
ssubw2
stlr
stlrb
stlrh
stlxp
stlxr
stlxrb
stlxrh
stnp
strb
strh
sttr
sttrb
sttrh
stur
sturb
sturh
stxp
stxr
stxrb
stxrh
subhn
subhn2
subs
suqadd
sxtb
sxth
sxtl
sxtl2
sxtw
sysl
tbnz
trn1
trn2
uaba
uabal
uabal2
uabd
uabdl
uabdl2
uadalp
uaddl
uaddl2
uaddlp
uaddlv
uaddw
uaddw2
ubfm
ucvtf
udiv
uhadd
uhsub
umaddl
umax
umaxp
umaxv
umin
uminp
uminv
umlal
umlal2
umlsl
umlsl2
umnegl
umov
umsubl
umulh
umull
umull2
uqadd
uqrshl
uqrshrn
uqrshrn2
uqshl
uqshrn
uqshrn2
uqsub
uqxtn
uqxtn2
urecpe
urhadd
urshl
urshr
ursqrte
ursra
ushl
ushll
ushll2
ushr
usqadd
usra
usubl
usubl2
usubw
usubw2
uxtb
uxth
uxtl
uxtl2
uxtw
uzp1
uzp2
xtn2
yield
zip1
zip2
only 'lsl #+N' valid after immediate
positive shift amount required
gotpage label reference not allowed an addend
page or gotpage label reference expected
immediate value expected for barrier operand
barrier operand out of range
invalid operand for instruction
invalid barrier option name
'sy' or #imm operand expected
expected compatible register or floating-point constant
encoded floating point value out of range
invalid floating point immediate
index must be absent or #0
immediate value expected for prefetch operand
prefetch operand out of range, [0,31] expected
pre-fetch hint expected
Expected cN operand where 0 <= N <= 15
expect relocation specifier in operand after ':'
lo12
abs_g3
abs_g2
abs_g2_s
abs_g2_nc
abs_g1
abs_g1_s
abs_g1_nc
abs_g0
abs_g0_s
abs_g0_nc
dtprel_g2
dtprel_g1
dtprel_g1_nc
dtprel_g0
dtprel_g0_nc
dtprel_hi12
dtprel_lo12
dtprel_lo12_nc
tprel_g2
tprel_g1
tprel_g1_nc
tprel_g0
tprel_g0_nc
tprel_hi12
tprel_lo12
tprel_lo12_nc
tlsdesc_lo12
got_lo12
gottprel
gottprel_lo12
gottprel_g1
gottprel_g0_nc
tlsdesc
expect ':' after relocation specifier
mismatched register size suffix
invalid number of vectors
registers must be sequential
'}' expected
condition codes AL and NV are invalid for this instruction
expected #imm after shift specifier
expected integer shift amount
expected constant '#imm' after shift specifier
.hword
.word
.xword
.tlsdesccall
.ltorg
.pool
.unreq
unexpected token in directive
expected symbol after directive
unexpected input in .unreq directive.
expected an identifier or a number in directive
invalid numeric identifier in directive
invalid identifier in directive
expected identifier in directive
unexpected token in '
' directive
.loh
AdrpAdrp
AdrpLdr
AdrpAddLdr
AdrpLdrGotLdr
AdrpAddStr
AdrpLdrGotStr
AdrpAdd
AdrpLdrGot
ubfm
sbfiz
ubfiz
expected integer in range [0, 31]
expected integer in range [1, 32]
requested insert overflows register
sbfm
bfxil
sbfx
ubfx
requested extract overflows register
movi
fmov
instruction requires:
too few operands for instruction
unpredictable LDP instruction, writeback base is also a destination
unpredictable LDP instruction, Rt2==Rt
unpredictable STP instruction, writeback base is also a source
unpredictable LDR instruction, writeback base is also a source
unpredictable STR instruction, writeback base is also a source
invalid immediate expression
fp-armv8
neon
crypto
(unknown)
instruction requires a CPU feature not currently enabled
invalid type suffix for instruction
expected AArch64 condition code
expected '[su]xt[bhw]' or 'lsl' with optional integer in range [0, 4]
expected 'sxtx' 'uxtx' or 'lsl' with optional integer in range [0, 4]
expected compatible register, symbol or integer in range [0, 4095]
expected compatible register or logical immediate
expected 'lsl' with optional integer 0 or 16
expected 'lsl' with optional integer 0, 16, 32 or 48
expected 'lsl', 'lsr' or 'asr' with optional integer in range [0, 31]
expected 'lsl', 'lsr' or 'asr' with optional integer in range [0, 63]
index must be an integer in range [-256, 255].
index must be a multiple of 4 in range [-256, 252].
index must be a multiple of 8 in range [-512, 504].
index must be a multiple of 16 in range [-1024, 1008].
expected 'uxtw' or 'sxtw' with optional shift of #0
expected 'uxtw' or 'sxtw' with optional shift of #0 or #1
expected 'uxtw' or 'sxtw' with optional shift of #0 or #2
expected 'uxtw' or 'sxtw' with optional shift of #0 or #3
expected 'uxtw' or 'sxtw' with optional shift of #0 or #4
expected 'lsl' or 'sxtx' with optional shift of #0
expected 'lsl' or 'sxtx' with optional shift of #0 or #1
expected 'lsl' or 'sxtx' with optional shift of #0 or #2
expected 'lsl' or 'sxtx' with optional shift of #0 or #3
expected 'lsl' or 'sxtx' with optional shift of #0 or #4
index must be an integer in range [0, 4095].
index must be a multiple of 2 in range [0, 8190].
index must be a multiple of 4 in range [0, 16380].
index must be a multiple of 8 in range [0, 32760].
index must be a multiple of 16 in range [0, 65520].
immediate must be an integer in range [0, 7].
immediate must be an integer in range [0, 15].
immediate must be an integer in range [0, 31].
immediate must be an integer in range [0, 63].
immediate must be an integer in range [0, 127].
immediate must be an integer in range [0, 65535].
immediate must be an integer in range [1, 8].
immediate must be an integer in range [1, 16].
immediate must be an integer in range [1, 32].
immediate must be an integer in range [1, 64].
expected lane specifier '[1]'
vector lane must be an integer in range [0, 15].
vector lane must be an integer in range [0, 7].
vector lane must be an integer in range [0, 3].
vector lane must be an integer in range [0, 1].
expected label or encodable integer pc offset
expected readable system register
expected writable system register or pstate
unrecognized instruction mnemonic
__TEXT
__ustring
__DATA
__cfstring
__objc_classrefs
__objc_catlist
fixup_aarch64_pcrel_adr_imm21
fixup_aarch64_pcrel_adrp_imm21
fixup_aarch64_add_imm12
fixup_aarch64_ldst_imm12_scale1
fixup_aarch64_ldst_imm12_scale2
fixup_aarch64_ldst_imm12_scale4
fixup_aarch64_ldst_imm12_scale8
fixup_aarch64_ldst_imm12_scale16
fixup_aarch64_ldr_pcrel_imm19
fixup_aarch64_movw
fixup_aarch64_pcrel_branch14
fixup_aarch64_pcrel_branch19
fixup_aarch64_pcrel_branch26
fixup_aarch64_pcrel_call26
fixup_aarch64_tlsdesc_call
fixup value out of range
invalid imm12 fixup value
no resolvable MOVZ/MOVK fixups supported yet
fixup not sufficiently aligned
invalid fixup for add (uimm12) instruction
invalid fixup for 8-bit load/store instruction
invalid fixup for 16-bit load/store instruction
invalid fixup for 32-bit load/store instruction
invalid fixup for 64-bit load/store instruction
invalid fixup for 128-bit load/store instruction
invalid fixup for movz/movk instruction
aarch64-neon-syntax
Choose style of NEON code to emit from AArch64 backend:
Emit generic NEON assembly
apple
Emit Apple-style NEON assembly
.code
.hword
.word
.xword
.weak
Not supported instr: 
:lo12:
:abs_g3:
:abs_g2:
:abs_g2_s:
:abs_g2_nc:
:abs_g1:
:abs_g1_s:
:abs_g1_nc:
:abs_g0:
:abs_g0_s:
:abs_g0_nc:
:dtprel_g2:
:dtprel_g1:
:dtprel_g1_nc:
:dtprel_g0:
:dtprel_g0_nc:
:dtprel_hi12:
:dtprel_lo12:
:dtprel_lo12_nc:
:tprel_g2:
:tprel_g1:
:tprel_g1_nc:
:tprel_g0:
:tprel_g0_nc:
:tprel_hi12:
:tprel_lo12:
:tprel_lo12_nc:
:tlsdesc_lo12:
:got:
:got_lo12:
:gottprel:
:gottprel_lo12:
:gottprel_g1:
:gottprel_g0_nc:
:tlsdesc:
Cortex-A53 ARM processors
Cortex-A57 ARM processors
Enable ARMv8 CRC-32 checksum instructions
Enable cryptographic instructions
Cyclone
fix-16473581
Fix for radar://16473581.
Enable ARMv8 FP
Enable Advanced SIMD instructions
Has TBI (address top-byte ignored) option
Has zero-cycle register moves
Has zero-cycle zeroing instructions
Select the cortex-a53 processor
Select the cortex-a57 processor
Select the cyclone processor
Select the generic processor
FPR16
FPR32
GPR32
GPR32sp
GPR32common
GPR64all
FPR64
GPR64
GPR64sp
GPR64common
GPR64sponly
FPR128
FPR128_lo
DDDD
QQ_with_qsub0_in_FPR128_lo
QQ_with_qsub1_in_FPR128_lo
QQ_with_qsub0_in_FPR128_lo_and_QQ_with_qsub1_in_FPR128_lo
QQQ_with_qsub0_in_FPR128_lo
QQQ_with_qsub1_in_FPR128_lo
QQQ_with_qsub2_in_FPR128_lo
QQQ_with_qsub0_in_FPR128_lo_and_QQQ_with_qsub1_in_FPR128_lo
QQQ_with_qsub1_in_FPR128_lo_and_QQQ_with_qsub2_in_FPR128_lo
QQQ_with_qsub0_in_FPR128_lo_and_QQQ_with_qsub2_in_FPR128_lo
QQQQ
QQQQ_with_qsub0_in_FPR128_lo
QQQQ_with_qsub1_in_FPR128_lo
QQQQ_with_qsub2_in_FPR128_lo
QQQQ_with_qsub3_in_FPR128_lo
QQQQ_with_qsub0_in_FPR128_lo_and_QQQQ_with_qsub1_in_FPR128_lo
QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_lo
QQQQ_with_qsub2_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
QQQQ_with_qsub0_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_lo
QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
QQQQ_with_qsub0_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
Only small and large code models are allowed on AArch64
conditional branch requires assembler-local label. '
' is external.
Invalid relocation on conditional branch!
unknown AArch64 fixup kind!
PC relative absolute relocation!
unsupported relocation of modified symbol
unsupported pc-relative relocation of difference
unsupported relocation of local symbol '
'. Must have non-local symbol earlier in section.
unsupported relocation with identical base
unable to resolve variable '
unsupported relocation of variable '
ADR/ADRP relocations must be GOT relative
arm64
ARM64 (little endian)
aarch64
AArch64 (little endian)
aarch64_be
AArch64 (big endian)
.16b, 
.2s, 
.2d, 
.4h, 
.4s, 
.8h, 
.8b, 
, #0.0
.1q, 
.1d, 
.16b, #0
, #0
.2s, #0
.2d, #0
.4h, #0
.4s, #0
.8h, #0
.8b, #0
.2s, #0.0
.2d, #0.0
.4s, #0.0
.16b, #8
.2s, #32
.4h, #16
.4s, #32
.8h, #16
.8b, #8
cmn $
cmn $
cmn $
adds $
cmn $
mov $
add $
tst $
tst $
tst $
ands $
tst $
and $
bics $
bic $
bic $
.2s, $
bic $
.4h, $
bic $
.4s, $
bic $
.8h, $
clrex
cset $
cinc $
csetm $
cinv $
cneg $
dcps1
dcps2
dcps3
eon $
eor $
ror $
yield
sevl
, [$
], #64
, [$
], #32
, [$
], #64
, [$
], #32
, [$
], #32
, [$
], #64
, [$
], #32
, [$
], #64
, [$
], #16
, [$
], #8
, [$
], #16
, [$
], #8
, [$
], #8
, [$
], #16
, [$
], #8
, [$
], #16
ld1r
, [$
], #1
ld1r
, [$
], #8
ld1r
, [$
], #8
ld1r
, [$
], #4
ld1r
, [$
], #2
ld1r
, [$
], #4
ld1r
, [$
], #1
ld1r
, [$
], #2
, [$
], #48
, [$
], #24
, [$
], #48
, [$
], #24
, [$
], #24
, [$
], #48
, [$
], #24
, [$
], #48
, [$
], #32
, [$
], #16
, [$
], #32
, [$
], #16
, [$
], #16
, [$
], #32
, [$
], #16
, [$
], #32
, [$
], #2
, [$
], #4
, [$
], #8
, [$
], #1
ld2r
, [$
], #2
ld2r
, [$
], #16
ld2r
, [$
], #16
ld2r
, [$
], #8
ld2r
, [$
], #4
ld2r
, [$
], #8
ld2r
, [$
], #2
ld2r
, [$
], #4
, [$
], #32
, [$
], #32
, [$
], #16
, [$
], #16
, [$
], #32
, [$
], #16
, [$
], #32
, [$
], #4
, [$
], #8
, [$
], #16
, [$
], #2
ld3r
, [$
], #3
ld3r
, [$
], #24
ld3r
, [$
], #24
ld3r
, [$
], #12
ld3r
, [$
], #6
ld3r
, [$
], #12
ld3r
, [$
], #3
ld3r
, [$
], #6
, [$
], #48
, [$
], #48
, [$
], #24
, [$
], #24
, [$
], #48
, [$
], #24
, [$
], #48
, [$
], #6
, [$
], #12
, [$
], #24
, [$
], #3
, [$
], #64
, [$
], #64
, [$
], #32
, [$
], #32
, [$
], #64
, [$
], #32
, [$
], #64
ld4r
, [$
], #4
ld4r
, [$
], #32
ld4r
, [$
], #32
ld4r
, [$
], #16
ld4r
, [$
], #8
ld4r
, [$
], #16
ld4r
, [$
], #4
ld4r
, [$
], #8
, [$
], #8
, [$
], #16
, [$
], #32
, [$
], #4
ldnp
, [$
ldp $
, [$
ldpsw $
, [$
ldrb $
, [$
ldrb $
, [$
ldr $
, [$
ldr $
, [$
ldrh $
, [$
ldrh $
, [$
ldrsb $
, [$
ldrsb $
, [$
ldrsh $
, [$
ldrsh $
, [$
ldrsw $
, [$
ldrsw $
, [$
ldtrb $
, [$
ldtrh $
, [$
ldtrsb $
, [$
ldtrsh $
, [$
ldtrsw $
, [$
ldtr $
, [$
ldurb $
, [$
ldur $
, [$
ldurh $
, [$
ldursb $
, [$
ldursh $
, [$
ldursw $
, [$
mul $
movk $
mneg $
mvn $
.16b, $
.16b
mvn $
.8b, $
mvn $
mvn $
orn $
mov $
orr $
.16b, $
.16b
orr $
.2s, $
orr $
.4h, $
orr $
.4s, $
orr $
.8h, $
.8b, $
prfm $
, [$
prfm $
, [$
prfum $
, [$
ngcs $
ngc $
asr $
sxtb $
sxth $
sxtw $
smull $
smnegl $
, [$
], #64
, [$
], #32
, [$
], #64
, [$
], #32
, [$
], #32
, [$
], #64
, [$
], #32
, [$
], #64
, [$
], #16
, [$
], #8
, [$
], #16
, [$
], #8
, [$
], #8
, [$
], #16
, [$
], #8
, [$
], #16
, [$
], #48
, [$
], #24
, [$
], #48
, [$
], #24
, [$
], #24
, [$
], #48
, [$
], #24
, [$
], #48
, [$
], #32
, [$
], #16
, [$
], #32
, [$
], #16
, [$
], #16
, [$
], #32
, [$
], #16
, [$
], #32
, [$
], #2
, [$
], #4
, [$
], #8
, [$
], #1
, [$
], #32
, [$
], #32
, [$
], #16
, [$
], #16
, [$
], #32
, [$
], #16
, [$
], #32
, [$
], #4
, [$
], #8
, [$
], #16
, [$
], #2
, [$
], #48
, [$
], #48
, [$
], #24
, [$
], #24
, [$
], #48
, [$
], #24
, [$
], #48
, [$
], #6
, [$
], #12
, [$
], #24
, [$
], #3
, [$
], #64
, [$
], #64
, [$
], #32
, [$
], #32
, [$
], #64
, [$
], #32
, [$
], #64
, [$
], #8
, [$
], #16
, [$
], #32
, [$
], #4
stnp
, [$
stp $
, [$
strb $
, [$
strb $
, [$
str $
, [$
str $
, [$
strh $
, [$
strh $
, [$
sttrb $
, [$
sttrh $
, [$
sttr $
, [$
sturb $
, [$
stur $
, [$
sturh $
, [$
cmp $
cmp $
cmp $
negs $
negs $
subs $
cmp $
neg $
neg $
sub $
sys $
lsr $
uxtb $
uxth $
uxtw $
umull $
umnegl $
, #8
, #32
, #16
mov.h
mov.h $
mov.s
mov.s $
mov.d
mov.d $
mov.b
mov.b $
mvn.16b $
mvn.8b $
mov.16b
mov.8b
mov.s
mov.d
bfxil
movz
movn
movk
ialluis
iallu
ivau
ivac
cvac
cvau
civac
cisw
s1e1r
s1e1w
s1e0r
s1e0w
s1e2r
s1e2w
s12e1r
s12e1w
s12e0r
s12e0w
s1e3r
s1e3w
tlbi
vmalle1is
tlbi
vae1is
tlbi
aside1is
tlbi
vaae1is
tlbi
vale1is
tlbi
vaale1is
tlbi
alle2is
tlbi
vae2is
tlbi
alle1is
tlbi
vale2is
tlbi
vmalls12e1is
tlbi
alle3is
tlbi
vae3is
tlbi
vale3is
tlbi
ipas2e1is
tlbi
ipas2le1is
tlbi
ipas2e1
tlbi
ipas2le1
tlbi
vmalle1
tlbi
vae1
tlbi
aside1
tlbi
vaae1
tlbi
vale1
tlbi
vaale1
tlbi
alle2
tlbi
vae2
tlbi
alle1
tlbi
vale2
tlbi
vmalls12e1
tlbi
alle3
tlbi
vae3
tlbi
vale3
#%#llx
#%.8f
#%#016llx
ld1r
ld2r
ld3r
ld4r
oshld
oshst
nshld
nshst
ishld
ishst
pldl1keep
pldl1strm
pldl2keep
pldl2strm
pldl3keep
pldl3strm
plil1keep
plil1strm
plil2keep
plil2strm
plil3keep
plil3strm
pstl1keep
pstl1strm
pstl2keep
pstl2strm
pstl3keep
pstl3strm
spsel
daifset
daifclr
mdccsr_el0
dbgdtrrx_el0
mdrar_el1
oslsr_el1
dbgauthstatus_el1
pmceid0_el0
pmceid1_el0
midr_el1
ccsidr_el1
clidr_el1
ctr_el0
mpidr_el1
revidr_el1
aidr_el1
dczid_el0
id_pfr0_el1
id_pfr1_el1
id_dfr0_el1
id_afr0_el1
id_mmfr0_el1
id_mmfr1_el1
id_mmfr2_el1
id_mmfr3_el1
id_isar0_el1
id_isar1_el1
id_isar2_el1
id_isar3_el1
id_isar4_el1
id_isar5_el1
id_aa64pfr0_el1
id_aa64pfr1_el1
id_aa64dfr0_el1
id_aa64dfr1_el1
id_aa64afr0_el1
id_aa64afr1_el1
id_aa64isar0_el1
id_aa64isar1_el1
id_aa64mmfr0_el1
id_aa64mmfr1_el1
mvfr0_el1
mvfr1_el1
mvfr2_el1
rvbar_el1
rvbar_el2
rvbar_el3
isr_el1
cntpct_el0
cntvct_el0
trcstatr
trcidr8
trcidr9
trcidr10
trcidr11
trcidr12
trcidr13
trcidr0
trcidr1
trcidr2
trcidr3
trcidr4
trcidr5
trcidr6
trcidr7
trcoslsr
trcpdsr
trcdevaff0
trcdevaff1
trclsr
trcauthstatus
trcdevarch
trcdevid
trcdevtype
trcpidr4
trcpidr5
trcpidr6
trcpidr7
trcpidr0
trcpidr1
trcpidr2
trcpidr3
trccidr0
trccidr1
trccidr2
trccidr3
icc_iar1_el1
icc_iar0_el1
icc_hppir1_el1
icc_hppir0_el1
icc_rpr_el1
ich_vtr_el2
ich_eisr_el2
ich_elsr_el2
dbgdtrtx_el0
oslar_el1
pmswinc_el0
trcoslar
trclar
icc_eoir1_el1
icc_eoir0_el1
icc_dir_el1
icc_sgi1r_el1
icc_asgi1r_el1
icc_sgi0r_el1
osdtrrx_el1
osdtrtx_el1
teecr32_el1
mdccint_el1
mdscr_el1
dbgdtr_el0
oseccr_el1
dbgvcr32_el2
dbgbvr0_el1
dbgbvr1_el1
dbgbvr2_el1
dbgbvr3_el1
dbgbvr4_el1
dbgbvr5_el1
dbgbvr6_el1
dbgbvr7_el1
dbgbvr8_el1
dbgbvr9_el1
dbgbvr10_el1
dbgbvr11_el1
dbgbvr12_el1
dbgbvr13_el1
dbgbvr14_el1
dbgbvr15_el1
dbgbcr0_el1
dbgbcr1_el1
dbgbcr2_el1
dbgbcr3_el1
dbgbcr4_el1
dbgbcr5_el1
dbgbcr6_el1
dbgbcr7_el1
dbgbcr8_el1
dbgbcr9_el1
dbgbcr10_el1
dbgbcr11_el1
dbgbcr12_el1
dbgbcr13_el1
dbgbcr14_el1
dbgbcr15_el1
dbgwvr0_el1
dbgwvr1_el1
dbgwvr2_el1
dbgwvr3_el1
dbgwvr4_el1
dbgwvr5_el1
dbgwvr6_el1
dbgwvr7_el1
dbgwvr8_el1
dbgwvr9_el1
dbgwvr10_el1
dbgwvr11_el1
dbgwvr12_el1
dbgwvr13_el1
dbgwvr14_el1
dbgwvr15_el1
dbgwcr0_el1
dbgwcr1_el1
dbgwcr2_el1
dbgwcr3_el1
dbgwcr4_el1
dbgwcr5_el1
dbgwcr6_el1
dbgwcr7_el1
dbgwcr8_el1
dbgwcr9_el1
dbgwcr10_el1
dbgwcr11_el1
dbgwcr12_el1
dbgwcr13_el1
dbgwcr14_el1
dbgwcr15_el1
teehbr32_el1
osdlr_el1
dbgprcr_el1
dbgclaimset_el1
dbgclaimclr_el1
csselr_el1
vpidr_el2
vmpidr_el2
sctlr_el1
sctlr_el2
sctlr_el3
actlr_el1
actlr_el2
actlr_el3
cpacr_el1
hcr_el2
scr_el3
mdcr_el2
sder32_el3
cptr_el2
cptr_el3
hstr_el2
hacr_el2
mdcr_el3
ttbr0_el1
ttbr0_el2
ttbr0_el3
ttbr1_el1
tcr_el1
tcr_el2
tcr_el3
vttbr_el2
vtcr_el2
dacr32_el2
spsr_el1
spsr_el2
spsr_el3
elr_el1
elr_el2
elr_el3
sp_el0
sp_el1
sp_el2
daif
currentel
spsr_irq
spsr_abt
spsr_und
spsr_fiq
fpcr
fpsr
dspsr_el0
dlr_el0
ifsr32_el2
afsr0_el1
afsr0_el2
afsr0_el3
afsr1_el1
afsr1_el2
afsr1_el3
esr_el1
esr_el2
esr_el3
fpexc32_el2
far_el1
far_el2
far_el3
hpfar_el2
par_el1
pmcr_el0
pmcntenset_el0
pmcntenclr_el0
pmovsclr_el0
pmselr_el0
pmccntr_el0
pmxevtyper_el0
pmxevcntr_el0
pmuserenr_el0
pmintenset_el1
pmintenclr_el1
pmovsset_el0
mair_el1
mair_el2
mair_el3
amair_el1
amair_el2
amair_el3
vbar_el1
vbar_el2
vbar_el3
rmr_el1
rmr_el2
rmr_el3
contextidr_el1
tpidr_el0
tpidr_el2
tpidr_el3
tpidrro_el0
tpidr_el1
cntfrq_el0
cntvoff_el2
cntkctl_el1
cnthctl_el2
cntp_tval_el0
cnthp_tval_el2
cntps_tval_el1
cntp_ctl_el0
cnthp_ctl_el2
cntps_ctl_el1
cntp_cval_el0
cnthp_cval_el2
cntps_cval_el1
cntv_tval_el0
cntv_ctl_el0
cntv_cval_el0
pmevcntr0_el0
pmevcntr1_el0
pmevcntr2_el0
pmevcntr3_el0
pmevcntr4_el0
pmevcntr5_el0
pmevcntr6_el0
pmevcntr7_el0
pmevcntr8_el0
pmevcntr9_el0
pmevcntr10_el0
pmevcntr11_el0
pmevcntr12_el0
pmevcntr13_el0
pmevcntr14_el0
pmevcntr15_el0
pmevcntr16_el0
pmevcntr17_el0
pmevcntr18_el0
pmevcntr19_el0
pmevcntr20_el0
pmevcntr21_el0
pmevcntr22_el0
pmevcntr23_el0
pmevcntr24_el0
pmevcntr25_el0
pmevcntr26_el0
pmevcntr27_el0
pmevcntr28_el0
pmevcntr29_el0
pmevcntr30_el0
pmccfiltr_el0
pmevtyper0_el0
pmevtyper1_el0
pmevtyper2_el0
pmevtyper3_el0
pmevtyper4_el0
pmevtyper5_el0
pmevtyper6_el0
pmevtyper7_el0
pmevtyper8_el0
pmevtyper9_el0
pmevtyper10_el0
pmevtyper11_el0
pmevtyper12_el0
pmevtyper13_el0
pmevtyper14_el0
pmevtyper15_el0
pmevtyper16_el0
pmevtyper17_el0
pmevtyper18_el0
pmevtyper19_el0
pmevtyper20_el0
pmevtyper21_el0
pmevtyper22_el0
pmevtyper23_el0
pmevtyper24_el0
pmevtyper25_el0
pmevtyper26_el0
pmevtyper27_el0
pmevtyper28_el0
pmevtyper29_el0
pmevtyper30_el0
trcprgctlr
trcprocselr
trcconfigr
trcauxctlr
trceventctl0r
trceventctl1r
trcstallctlr
trctsctlr
trcsyncpr
trcccctlr
trcbbctlr
trctraceidr
trcqctlr
trcvictlr
trcviiectlr
trcvissctlr
trcvipcssctlr
trcvdctlr
trcvdsacctlr
trcvdarcctlr
trcseqevr0
trcseqevr1
trcseqevr2
trcseqrstevr
trcseqstr
trcextinselr
trccntrldvr0
trccntrldvr1
trccntrldvr2
trccntrldvr3
trccntctlr0
trccntctlr1
trccntctlr2
trccntctlr3
trccntvr0
trccntvr1
trccntvr2
trccntvr3
trcimspec0
trcimspec1
trcimspec2
trcimspec3
trcimspec4
trcimspec5
trcimspec6
trcimspec7
trcrsctlr2
trcrsctlr3
trcrsctlr4
trcrsctlr5
trcrsctlr6
trcrsctlr7
trcrsctlr8
trcrsctlr9
trcrsctlr10
trcrsctlr11
trcrsctlr12
trcrsctlr13
trcrsctlr14
trcrsctlr15
trcrsctlr16
trcrsctlr17
trcrsctlr18
trcrsctlr19
trcrsctlr20
trcrsctlr21
trcrsctlr22
trcrsctlr23
trcrsctlr24
trcrsctlr25
trcrsctlr26
trcrsctlr27
trcrsctlr28
trcrsctlr29
trcrsctlr30
trcrsctlr31
trcssccr0
trcssccr1
trcssccr2
trcssccr3
trcssccr4
trcssccr5
trcssccr6
trcssccr7
trcsscsr0
trcsscsr1
trcsscsr2
trcsscsr3
trcsscsr4
trcsscsr5
trcsscsr6
trcsscsr7
trcsspcicr0
trcsspcicr1
trcsspcicr2
trcsspcicr3
trcsspcicr4
trcsspcicr5
trcsspcicr6
trcsspcicr7
trcpdcr
trcacvr0
trcacvr1
trcacvr2
trcacvr3
trcacvr4
trcacvr5
trcacvr6
trcacvr7
trcacvr8
trcacvr9
trcacvr10
trcacvr11
trcacvr12
trcacvr13
trcacvr14
trcacvr15
trcacatr0
trcacatr1
trcacatr2
trcacatr3
trcacatr4
trcacatr5
trcacatr6
trcacatr7
trcacatr8
trcacatr9
trcacatr10
trcacatr11
trcacatr12
trcacatr13
trcacatr14
trcacatr15
trcdvcvr0
trcdvcvr1
trcdvcvr2
trcdvcvr3
trcdvcvr4
trcdvcvr5
trcdvcvr6
trcdvcvr7
trcdvcmr0
trcdvcmr1
trcdvcmr2
trcdvcmr3
trcdvcmr4
trcdvcmr5
trcdvcmr6
trcdvcmr7
trccidcvr0
trccidcvr1
trccidcvr2
trccidcvr3
trccidcvr4
trccidcvr5
trccidcvr6
trccidcvr7
trcvmidcvr0
trcvmidcvr1
trcvmidcvr2
trcvmidcvr3
trcvmidcvr4
trcvmidcvr5
trcvmidcvr6
trcvmidcvr7
trccidcctlr0
trccidcctlr1
trcvmidcctlr0
trcvmidcctlr1
trcitctrl
trcclaimset
trcclaimclr
icc_bpr1_el1
icc_bpr0_el1
icc_pmr_el1
icc_ctlr_el1
icc_ctlr_el3
icc_sre_el1
icc_sre_el2
icc_sre_el3
icc_igrpen0_el1
icc_igrpen1_el1
icc_igrpen1_el3
icc_seien_el1
icc_ap0r0_el1
icc_ap0r1_el1
icc_ap0r2_el1
icc_ap0r3_el1
icc_ap1r0_el1
icc_ap1r1_el1
icc_ap1r2_el1
icc_ap1r3_el1
ich_ap0r0_el2
ich_ap0r1_el2
ich_ap0r2_el2
ich_ap0r3_el2
ich_ap1r0_el2
ich_ap1r1_el2
ich_ap1r2_el2
ich_ap1r3_el2
ich_hcr_el2
ich_misr_el2
ich_vmcr_el2
ich_vseir_el2
ich_lr0_el2
ich_lr1_el2
ich_lr2_el2
ich_lr3_el2
ich_lr4_el2
ich_lr5_el2
ich_lr6_el2
ich_lr7_el2
ich_lr8_el2
ich_lr9_el2
ich_lr10_el2
ich_lr11_el2
ich_lr12_el2
ich_lr13_el2
ich_lr14_el2
ich_lr15_el2
cpm_ioacc_ctl_el3
^s([0-3])_([0-7])_c([0-9]|1[0-5])_c([0-9]|1[0-5])_([0-7])$
#&(%,$+'bcdefghiZ[\]^_`arstuvwxyz{|}~
RSTUVWXY
 !BCDEFGHI23456789:)
Read from 0x%llx to 0x%llx: length %zu
Instruction exceeds 15-byte limit
readPrefixes()
Redundant Group 1 prefix
Redundant Group 2 prefix
Redundant Group 3 prefix
Redundant Group 4 prefix
Found prefix 0x%hhx
Couldn't read second byte of EVEX prefix
Couldn't read third byte of EVEX prefix
Couldn't read fourth byte of EVEX prefix
Found EVEX prefix 0x%hhx 0x%hhx 0x%hhx 0x%hhx
Couldn't read second byte of VEX
Found VEX prefix 0x%hhx 0x%hhx 0x%hhx
Found VEX prefix 0x%hhx 0x%hhx
Couldn't read second byte of XOP
Found XOP prefix 0x%hhx 0x%hhx 0x%hhx
Redundant REX prefix
Found REX prefix 0x%hhx
readOpcode()
Unhandled mm field for instruction (0x%hhx)
Unhandled m-mmmm field for instruction (0x%hhx)
Found a two-byte escape prefix (0x%hhx)
Found a three-byte escape prefix (0x%hhx)
Didn't find a three-byte escape prefix
getID()
readModRM()
readDisplacement()
readSIB()
SIB-based addressing doesn't work in 16-bit mode
readOperands()
We currently don't hande code-offset encodings
Encountered an operand with an unknown encoding.
readVVVV()
fixupReg()
readImmediate()
readOpcodeRegister()
readMaskRegister()
asan-instrument-assembly
instrument assembly with AddressSanitizer checks
invalid register name
register %
 is only available in 64-bit mode
expected stack index
invalid stack index
lags
setb
setnb
vcmp
unord
eq_uq
neq_oq
eq_os
lt_oq
le_oq
unord_s
neq_us
nlt_uq
nle_uq
ord_s
eq_us
nge_uq
ngt_uq
false_os
neq_os
ge_oq
gt_oq
true_us
vcmpss
cmpss
vcmpsd
cmpsd
vcmpps
cmpps
vcmppd
cmppd
lock
repe
repz
repne
repnz
rex64
data16
outb
outw
outl
insb
insw
insl
insd
outs
outsb
outsw
outsl
outsd
lods
lodsb
lodsw
lodsl
lodsd
lodsq
stos
stosb
stosw
stosl
stosd
stosq
scas
scasb
scasw
scasl
scasd
scasq
cmps
cmpsb
cmpsw
cmpsl
cmpsq
mismatching source and destination index registers
movs
movsb
movsw
movsl
movsd
movsq
smov
smovb
smovw
smovl
smovd
smovq
int3
offset
OFFSET
length
LENGTH
size
SIZE
TYPE
Expected 'PTR' or 'ptr' token!
expected a positive immediate displacement before bracketed expr.
unable to lookup expression
BYTE
byte
WORD
word
DWORD
dword
QWORD
qword
XWORD
xword
XMMWORD
xmmword
YMMWORD
ymmword
ZMMWORD
zmmword
OPAQUE
unknown token in expression
Unexpected identifier!
invalid reference to undefined symbol
scale factor in address must be 1, 2, 4 or 8
Unexpected operator!
cannot use more than one symbol in memory operand
cannot use base register with variable reference
cannot use index register with variable reference
Expected '[' token!
Non-constant offsets are not supported!
Unable to lookup field reference!
Unexpected token type!
base register is 64-bit, but index register is not
base register is 32-bit, but index register is not
base register is 16-bit, but index register is not
invalid 16-bit base/index register combination
Expected ':' token!
%eiz and %riz can only be used as index registers
invalid segment register
eiz and riz can only be used as index registers
expected comma in scale expression
expected scale expression
scale factor in 16-bit address must be 1
scale factor without index register is ignored
unexpected token in memory operand
invalid 16-bit base register
16-bit memory operand may not include only index register
Expected 1to<NUM> at this point
{1to2}
{1to4}
{1to8}
to16
{1to16}
Invalid memory broadcast primitive.
Expected } at this point
Expected z at this point
.code
.att_syntax
noprefix
'.att_syntax noprefix' is not supported: registers must have a '%' prefix in .att_syntax
.intel_syntax
'.intel_syntax prefix' is not supported: registers must not have a '%' prefix in .intel_syntax
.code16
.code32
.code64
unknown directive 
adcb
adcl
adcq
adcw
adcx
adcxl
adcxq
addb
addl
addpd
addps
addq
addsd
addss
addsubpd
addsubps
addw
adox
adoxl
adoxq
aesdec
aesdeclast
aesenc
aesenclast
aesimc
aeskeygenassist
andb
andl
andn
andnl
andnpd
andnps
andnq
andpd
andps
andq
andw
arpl
bextr
bextrl
bextrq
blcfill
blci
blcic
blcmsk
blcs
blendpd
blendps
blendvpd
blendvps
blsfill
blsi
blsic
blsil
blsiq
blsmsk
blsmskl
blsmskq
blsr
blsrl
blsrq
bound
bsfl
bsfq
bsfw
bsrl
bsrq
bsrw
bswap
bswapl
bswapq
btcl
btcq
btcw
btrl
btrq
btrw
btsl
btsq
btsw
bzhi
bzhil
bzhiq
call
calll
callq
callw
cbtw
cdqe
clac
clflush
clgi
clrb
clrl
clrq
clrw
cltd
cltq
clts
cmova
cmovae
cmovael
cmovaeq
cmovaew
cmoval
cmovaq
cmovaw
cmovb
cmovbe
cmovbel
cmovbeq
cmovbew
cmovbl
cmovbq
cmovbw
cmove
cmovel
cmoveq
cmovew
cmovg
cmovge
cmovgel
cmovgeq
cmovgew
cmovgl
cmovgq
cmovgw
cmovl
cmovle
cmovlel
cmovleq
cmovlew
cmovll
cmovlq
cmovlw
cmovne
cmovnel
cmovneq
cmovnew
cmovno
cmovnol
cmovnoq
cmovnow
cmovnp
cmovnpl
cmovnpq
cmovnpw
cmovns
cmovnsl
cmovnsq
cmovnsw
cmovo
cmovol
cmovoq
cmovow
cmovp
cmovpl
cmovpq
cmovpw
cmovs
cmovsl
cmovsq
cmovsw
cmpb
cmpl
cmppd
cmpps
cmpq
cmpsb
cmpsd
cmpsl
cmpsq
cmpss
cmpsw
cmpw
cmpxchg
cmpxchg16b
cmpxchg8b
cmpxchgb
cmpxchgl
cmpxchgq
cmpxchgw
comisd
comiss
cpuid
cqto
crc32
crc32b
crc32l
crc32q
crc32w
cvtdq2pd
cvtdq2ps
cvtpd2dq
cvtpd2pi
cvtpd2ps
cvtpi2pd
cvtpi2ps
cvtps2dq
cvtps2pd
cvtps2pi
cvtsd2si
cvtsd2sil
cvtsd2siq
cvtsd2ss
cvtsi2sd
cvtsi2sdl
cvtsi2sdq
cvtsi2ss
cvtsi2ssl
cvtsi2ssq
cvtss2sd
cvtss2si
cvtss2sil
cvtss2siq
cvttpd2dq
cvttpd2pi
cvttps2dq
cvttps2pi
cvttsd2si
cvttsd2sil
cvttsd2siq
cvttss2si
cvttss2sil
cvttss2siq
cwde
cwtd
cwtl
data16
decb
decl
decq
decw
divb
divl
divpd
divps
divq
divsd
divss
divw
dppd
dpps
emms
encls
enclu
enter
extractps
extrq
f2xm1
fabs
fadd
faddl
faddp
fadds
fbld
fbstp
fchs
fcmovb
fcmovbe
fcmove
fcmovnb
fcmovnbe
fcmovne
fcmovnu
fcmovu
fcom
fcomi
fcoml
fcomp
fcompi
fcompl
fcompp
fcomps
fcoms
fcos
fdecstp
fdiv
fdivl
fdivp
fdivr
fdivrl
fdivrp
fdivrs
fdivs
femms
ffree
fiadd
fiaddl
fiadds
ficom
ficoml
ficomp
ficompl
ficomps
ficoms
fidiv
fidivl
fidivr
fidivrl
fidivrs
fidivs
fild
fildl
fildll
filds
fimul
fimull
fimuls
fincstp
fist
fistl
fistp
fistpl
fistpll
fistps
fists
fisttp
fisttpl
fisttpll
fisttps
fisub
fisubl
fisubr
fisubrl
fisubrs
fisubs
fld1
fldcw
fldenv
fldl
fldl2e
fldl2t
fldlg2
fldln2
fldpi
flds
fldt
fldz
fmul
fmull
fmulp
fmuls
fnclex
fninit
fnop
fnsave
fnstcw
fnstenv
fnstsw
fpatan
fprem
fprem1
fptan
frndint
frstor
fscale
fsin
fsincos
fsqrt
fstl
fstp
fstpl
fstps
fstpt
fsts
fsub
fsubl
fsubp
fsubr
fsubrl
fsubrp
fsubrs
fsubs
ftst
fucom
fucomi
fucomp
fucompi
fucompp
fxam
fxch
fxrstor
fxrstor64
fxrstorq
fxsave
fxsave64
fxsaveq
fxtract
fyl2x
fyl2xp1
haddpd
haddps
hsubpd
hsubps
idiv
idivb
idivl
idivq
idivw
imul
imulb
imull
imulq
imulw
incb
incl
incq
incw
insb
insd
insertps
insertq
insl
insw
int3
into
invd
invept
invlpg
invlpga
invpcid
invvpid
iret
iretd
iretl
iretq
iretw
jcxz
jecxz
jmpl
jmpq
jmpw
jrcxz
kandb
kandd
kandnb
kandnd
kandnq
kandnw
kandq
kandw
kmovb
kmovd
kmovq
kmovw
knotb
knotd
knotq
knotw
korb
kord
korq
kortestw
korw
kshiftlw
kshiftrw
kunpckbw
kxnorb
kxnord
kxnorq
kxnorw
kxorb
kxord
kxorq
kxorw
lahf
larl
larq
larw
lcall
lcalll
lcallq
lcallw
lddqu
ldmxcsr
ldsl
ldsw
leal
leaq
leave
leaw
lesl
lesw
lfence
lfsl
lfsq
lfsw
lgdt
lgdtl
lgdtq
lgdtw
lgsl
lgsq
lgsw
lidt
lidtl
lidtq
lidtw
ljmp
ljmpl
ljmpq
ljmpw
lldt
lldtw
lmsw
lmsww
lock
lods
lodsb
lodsd
lodsl
lodsq
lodsw
loop
loope
loopne
lretl
lretq
lretw
lsll
lslq
lslw
lssl
lssq
lssw
ltrw
lzcnt
lzcntl
lzcntq
lzcntw
maskmovdqu
maskmovq
maxpd
maxps
maxsd
maxss
mfence
minpd
minps
minsd
minss
monitor
montmul
movabs
movabsb
movabsl
movabsq
movabsw
movapd
movaps
movb
movbe
movbel
movbeq
movbew
movd
movddup
movdq2q
movdqa
movdqu
movhlps
movhpd
movhps
movl
movlhps
movlpd
movlps
movmskpd
movmskps
movntdq
movntdqa
movnti
movntil
movntiq
movntpd
movntps
movntq
movntsd
movntss
movq
movq2dq
movsb
movsbl
movsbq
movsbw
movsd
movshdup
movsl
movsldup
movslq
movsq
movss
movsw
movswl
movswq
movsx
movsxd
movupd
movups
movw
movzbl
movzbq
movzbw
movzwl
movzwq
movzx
mpsadbw
mulb
mull
mulpd
mulps
mulq
mulsd
mulss
mulw
mulx
mulxl
mulxq
mwait
negb
negl
negq
negw
nopl
nopw
notb
notl
notq
notw
orpd
orps
outb
outl
outsb
outsd
outsl
outsw
outw
pabsb
pabsd
pabsw
packssdw
packsswb
packusdw
packuswb
paddb
paddd
paddq
paddsb
paddsw
paddusb
paddusw
paddw
palignr
pand
pandn
pause
pavgb
pavgusb
pavgw
pblendvb
pblendwpclmulhqhqdqpclmulhqlqdqpclmullqhqdqpclmullqlqdq
pclmulqdq
pcmpeqb
pcmpeqd
pcmpeqq
pcmpeqw
pcmpestri
pcmpestrm
pcmpgtb
pcmpgtd
pcmpgtq
pcmpgtw
pcmpistri
pcmpistrm
pdep
pdepl
pdepq
pext
pextl
pextq
pextrb
pextrd
pextrq
pextrw
pf2id
pf2iw
pfacc
pfadd
pfcmpeq
pfcmpge
pfcmpgt
pfmax
pfmin
pfmul
pfnacc
pfpnacc
pfrcp
pfrcpit1
pfrcpit2
pfrsqit1
pfrsqrt
pfsub
pfsubr
phaddd
phaddsw
phaddw
phminposuw
phsubd
phsubsw
phsubw
pi2fd
pi2fw
pinsrb
pinsrd
pinsrq
pinsrw
pmaddubsw
pmaddwd
pmaxsb
pmaxsd
pmaxsw
pmaxub
pmaxud
pmaxuw
pminsb
pminsd
pminsw
pminub
pminud
pminuw
pmovmskb
pmovsxbd
pmovsxbq
pmovsxbw
pmovsxdq
pmovsxwd
pmovsxwq
pmovzxbd
pmovzxbq
pmovzxbw
pmovzxdq
pmovzxwd
pmovzxwq
pmuldq
pmulhrsw
pmulhrw
pmulhuw
pmulhw
pmulld
pmullw
pmuludq
popal
popaw
popcnt
popcntl
popcntq
popcntw
popf
popfd
popfl
popfq
popfw
popl
popq
popw
prefetch
prefetchnta
prefetcht0
prefetcht1
prefetcht2
prefetchw
psadbw
pshufb
pshufd
pshufhw
pshuflw
pshufw
psignb
psignd
psignw
pslld
pslldq
psllq
psllw
psrad
psraw
psrld
psrldq
psrlq
psrlw
psubb
psubd
psubq
psubsb
psubsw
psubusb
psubusw
psubw
pswapd
ptest
punpckhbw
punpckhdq
punpckhqdq
punpckhwd
punpcklbw
punpckldq
punpcklqdq
punpcklwd
push
pushal
pushaw
pushf
pushfd
pushfl
pushfq
pushfw
pushl
pushq
pushw
pxor
rclb
rcll
rclq
rclw
rcpps
rcpss
rcrb
rcrl
rcrq
rcrw
rdfsbase
rdfsbasel
rdfsbaseq
rdgsbase
rdgsbasel
rdgsbaseq
rdmsr
rdpmc
rdrand
rdrandl
rdrandq
rdrandw
rdseed
rdseedl
rdseedq
rdseedw
rdtsc
rdtscp
repne
retf
retfq
retl
retq
retw
rex64
rolb
roll
rolq
rolw
rorb
rorl
rorq
rorw
rorx
rorxl
rorxq
roundpd
roundps
roundsd
roundss
rsqrtps
rsqrtss
sahf
sarb
sarl
sarq
sarw
sarx
sarxl
sarxq
sbbb
sbbl
sbbq
sbbw
scas
scasb
scasd
scasl
scasq
scasw
seta
setae
setb
setbe
sete
setg
setge
setl
setle
setne
setno
setnp
setns
seto
setp
sets
sfence
sgdt
sgdtl
sgdtq
sgdtw
sha1msg1
sha1msg2
sha1nexte
sha1rnds4
sha256msg1
sha256msg2
sha256rnds2
shlb
shld
shldl
shldq
shldw
shll
shlq
shlw
shlx
shlxl
shlxq
shrb
shrd
shrdl
shrdq
shrdw
shrl
shrq
shrw
shrx
shrxl
shrxq
shufpd
shufps
sidt
sidtl
sidtq
sidtw
skinit
sldt
sldtl
sldtq
sldtw
smsw
smswl
smswq
smsww
sqrtpd
sqrtps
sqrtsd
sqrtss
stac
stgi
stmxcsr
stos
stosb
stosd
stosl
stosq
stosw
strl
strq
strw
subb
subl
subpd
subps
subq
subsd
subss
subw
swapgs
syscall
sysenter
sysexit
sysexitl
sysexitq
sysret
sysretl
sysretq
t1mskc
test
testb
testl
testq
testw
tzcnt
tzcntl
tzcntq
tzcntw
tzmsk
ucomisd
ucomiss
ud2b
unpckhpd
unpckhps
unpcklpd
unpcklps
vaddpd
vaddps
vaddsd
vaddss
vaddsubpd
vaddsubps
vaesdec
vaesdeclast
vaesenc
vaesenclast
vaesimc
vaeskeygenassist
valignd
valignq
vandnpd
vandnps
vandpd
vandps
vblendmpd
vblendmps
vblendpd
vblendps
vblendvpd
vblendvps
vbroadcastf128
vbroadcasti128
vbroadcasti32x4
vbroadcasti64x4vbroadcastsdvbroadcastss
vcmp
vcmppd
vcmpps
vcmpsd
vcmpss
vcomisd
vcomiss
vcvtdq2pd
vcvtdq2ps
vcvtpd2dq
vcvtpd2dqx
vcvtpd2dqy
vcvtpd2ps
vcvtpd2psx
vcvtpd2psy
vcvtpd2udq
vcvtph2ps
vcvtps2dq
vcvtps2pd
vcvtps2ph
vcvtps2udq
vcvtsd2si
vcvtsd2sil
vcvtsd2siq
vcvtsd2ss
vcvtsd2usi
vcvtsi2sd
vcvtsi2sdl
vcvtsi2sdq
vcvtsi2ss
vcvtsi2ssl
vcvtsi2ssq
vcvtss2sd
vcvtss2si
vcvtss2sil
vcvtss2siq
vcvtss2usi
vcvttpd2dq
vcvttpd2dqx
vcvttpd2dqy
vcvttpd2udq
vcvttps2dq
vcvttps2udq
vcvttsd2si
vcvttsd2sil
vcvttsd2siq
vcvttsd2usi
vcvttss2si
vcvttss2sil
vcvttss2siq
vcvttss2usi
vcvtudq2pd
vcvtudq2ps
vcvtusi2sd
vcvtusi2sdl
vcvtusi2sdq
vcvtusi2ss
vcvtusi2ssl
vcvtusi2ssq
vdivpd
vdivps
vdivsd
vdivss
vdppd
vdpps
verr
verwvextractf128
vextractf32x4
vextractf64x4vextracti128
vextracti32x4
vextracti64x4
vextractps
vfmadd132pd
vfmadd132ps
vfmadd132sd
vfmadd132ss
vfmadd213pd
vfmadd213ps
vfmadd213sd
vfmadd213ss
vfmadd231pd
vfmadd231ps
vfmadd231sd
vfmadd231ss
vfmaddpd
vfmaddps
vfmaddsd
vfmaddss
vfmaddsub132pd
vfmaddsub132ps
vfmaddsub213pd
vfmaddsub213ps
vfmaddsub231pd
vfmaddsub231ps
vfmaddsubpd
vfmaddsubps
vfmsub132pd
vfmsub132ps
vfmsub132sd
vfmsub132ss
vfmsub213pd
vfmsub213ps
vfmsub213sd
vfmsub213ss
vfmsub231pd
vfmsub231ps
vfmsub231sd
vfmsub231ss
vfmsubadd132pd
vfmsubadd132ps
vfmsubadd213pd
vfmsubadd213ps
vfmsubadd231pd
vfmsubadd231ps
vfmsubaddpd
vfmsubaddps
vfmsubpd
vfmsubps
vfmsubsd
vfmsubssvfnmadd132pdvfnmadd132psvfnmadd132sdvfnmadd132ssvfnmadd213pdvfnmadd213psvfnmadd213sdvfnmadd213ssvfnmadd231pdvfnmadd231psvfnmadd231sdvfnmadd231ss
vfnmaddpd
vfnmaddps
vfnmaddsd
vfnmaddssvfnmsub132pdvfnmsub132psvfnmsub132sdvfnmsub132ssvfnmsub213pdvfnmsub213psvfnmsub213sdvfnmsub213ssvfnmsub231pdvfnmsub231psvfnmsub231sdvfnmsub231ss
vfnmsubpd
vfnmsubps
vfnmsubsd
vfnmsubss
vfrczpd
vfrczps
vfrczsd
vfrczss
vgatherdpd
vgatherdps
vgatherpf0dpd
vgatherpf0dps
vgatherpf0qpd
vgatherpf0qps
vgatherpf1dpd
vgatherpf1dps
vgatherpf1qpd
vgatherpf1qps
vgatherqpd
vgatherqps
vhaddpd
vhaddps
vhsubpd
vhsubps
vinsertf128vinsertf32x4vinsertf64x4
vinserti128vinserti32x4vinserti64x4
vinsertps
vlddqu
vldmxcsr
vmaskmovdqu
vmaskmovpd
vmaskmovps
vmaxpd
vmaxps
vmaxsd
vmaxss
vmcall
vmclear
vmfunc
vminpd
vminps
vminsd
vminss
vmlaunch
vmload
vmmcall
vmovapd
vmovaps
vmovd
vmovddup
vmovdqa
vmovdqa32
vmovdqa64
vmovdqu
vmovdqu16
vmovdqu32
vmovdqu64
vmovdqu8
vmovhlps
vmovhpd
vmovhps
vmovlhps
vmovlpd
vmovlps
vmovmskpd
vmovmskps
vmovntdq
vmovntdqa
vmovntpd
vmovntps
vmovq
vmovsd
vmovshdup
vmovsldup
vmovss
vmovupd
vmovups
vmpsadbw
vmptrld
vmptrst
vmread
vmreadl
vmreadq
vmresume
vmrun
vmsave
vmulpd
vmulps
vmulsd
vmulss
vmwrite
vmwritel
vmwriteq
vmxoff
vmxon
vorpd
vorps
vpabsb
vpabsd
vpabsq
vpabsw
vpackssdw
vpacksswb
vpackusdw
vpackuswb
vpaddb
vpaddd
vpaddq
vpaddsb
vpaddsw
vpaddusb
vpaddusw
vpaddw
vpalignr
vpand
vpandd
vpandn
vpandnd
vpandnq
vpandq
vpavgb
vpavgw
vpblendd
vpblendmd
vpblendmq
vpblendvb
vpblendwvpbroadcastbvpbroadcastd
vpbroadcastmb2q
vpbroadcastmw2dvpbroadcastqvpbroadcastw
vpclmulhqhqdq
vpclmulhqlqdq
vpclmullqhqdq
vpclmullqlqdq
vpclmulqdq
vpcmov
vpcmp
vpcmpd
vpcmpeqb
vpcmpeqd
vpcmpeqq
vpcmpeqw
vpcmpestri
vpcmpestrm
vpcmpgtb
vpcmpgtd
vpcmpgtq
vpcmpgtw
vpcmpistri
vpcmpistrm
vpcmpq
vpcmpud
vpcmpuq
vpcomb
vpcomd
vpcomq
vpcomub
vpcomud
vpcomuq
vpcomuw
vpcomw
vpconflictd
vpconflictq
vperm2f128
vperm2i128
vpermd
vpermi2d
vpermi2pd
vpermi2ps
vpermi2q
vpermil2pd
vpermil2ps
vpermilpd
vpermilps
vpermpd
vpermps
vpermq
vpermt2d
vpermt2pd
vpermt2ps
vpermt2q
vpextrb
vpextrd
vpextrq
vpextrw
vpgatherdd
vpgatherdq
vpgatherqd
vpgatherqq
vphaddbd
vphaddbq
vphaddbw
vphaddd
vphadddq
vphaddsw
vphaddubd
vphaddubq
vphaddubw
vphaddudq
vphadduwd
vphadduwq
vphaddw
vphaddwd
vphaddwq
vphminposuw
vphsubbw
vphsubd
vphsubdq
vphsubsw
vphsubw
vphsubwd
vpinsrb
vpinsrd
vpinsrq
vpinsrw
vplzcntd
vplzcntq
vpmacsdd
vpmacsdqh
vpmacsdql
vpmacssdd
vpmacssdqh
vpmacssdql
vpmacsswd
vpmacssww
vpmacswd
vpmacsww
vpmadcsswd
vpmadcswd
vpmaddubsw
vpmaddwd
vpmaskmovd
vpmaskmovq
vpmaxsb
vpmaxsd
vpmaxsq
vpmaxsw
vpmaxub
vpmaxud
vpmaxuq
vpmaxuw
vpminsb
vpminsd
vpminsq
vpminsw
vpminub
vpminud
vpminuq
vpminuw
vpmovdb
vpmovdw
vpmovmskb
vpmovqb
vpmovqd
vpmovqw
vpmovsdb
vpmovsdw
vpmovsqb
vpmovsqd
vpmovsqw
vpmovsxbd
vpmovsxbq
vpmovsxbw
vpmovsxdq
vpmovsxwd
vpmovsxwq
vpmovusdb
vpmovusdw
vpmovusqb
vpmovusqd
vpmovusqw
vpmovzxbd
vpmovzxbq
vpmovzxbw
vpmovzxdq
vpmovzxwd
vpmovzxwq
vpmuldq
vpmulhrsw
vpmulhuw
vpmulhw
vpmulld
vpmullw
vpmuludq
vpor
vpord
vporq
vpperm
vprotb
vprotd
vprotq
vprotw
vpsadbw
vpscatterdd
vpscatterdq
vpscatterqd
vpscatterqq
vpshab
vpshad
vpshaq
vpshaw
vpshlb
vpshld
vpshlq
vpshlw
vpshufb
vpshufd
vpshufhw
vpshuflw
vpsignb
vpsignd
vpsignw
vpslld
vpslldq
vpsllq
vpsllvd
vpsllvq
vpsllw
vpsrad
vpsraq
vpsravd
vpsravq
vpsraw
vpsrld
vpsrldq
vpsrlq
vpsrlvd
vpsrlvq
vpsrlw
vpsubb
vpsubd
vpsubq
vpsubsb
vpsubsw
vpsubusb
vpsubusw
vpsubw
vptest
vptestmd
vptestmq
vptestnmd
vptestnmq
vpunpckhbw
vpunpckhdq
vpunpckhqdq
vpunpckhwd
vpunpcklbw
vpunpckldq
vpunpcklqdq
vpunpcklwd
vpxor
vpxord
vpxorq
vrcp14pd
vrcp14ps
vrcp14sd
vrcp14ss
vrcp28pd
vrcp28ps
vrcp28sd
vrcp28ss
vrcpps
vrcpss
vrndscalepd
vrndscaleps
vrndscalesd
vrndscaless
vroundpd
vroundps
vroundsd
vroundss
vrsqrt14pd
vrsqrt14ps
vrsqrt14sd
vrsqrt14ss
vrsqrt28pd
vrsqrt28ps
vrsqrt28sd
vrsqrt28ss
vrsqrtps
vrsqrtss
vscatterdpd
vscatterdps
vscatterpf0dpd
vscatterpf0dps
vscatterpf0qpd
vscatterpf0qps
vscatterpf1dpd
vscatterpf1dps
vscatterpf1qpd
vscatterpf1qps
vscatterqpd
vscatterqps
vshufpd
vshufps
vsqrtpd
vsqrtps
vsqrtsd
vsqrtss
vstmxcsr
vsubpd
vsubps
vsubsd
vsubss
vtestpd
vtestps
vucomisd
vucomiss
vunpckhpd
vunpckhps
vunpcklpd
vunpcklps
vxorpd
vxorps
vzeroall
vzeroupper
wait
wbinvd
wrfsbase
wrfsbasel
wrfsbaseq
wrgsbase
wrgsbasel
wrgsbaseq
wrmsr
xabort
xacquire
xadd
xaddb
xaddl
xaddq
xaddw
xbegin
xchg
xchgb
xchgl
xchgq
xchgw
xcryptcbc
xcryptcfb
xcryptctr
xcryptecb
xcryptofb
xend
xgetbv
xlatb
xorb
xorl
xorpd
xorps
xorq
xorw
xrelease
xrstor
xrstor64
xrstorq
xsave
xsave64
xsaveopt
xsaveopt64
xsaveoptq
xsaveq
xsetbv
xsha1
xsha256
xstore
xstorerng
xtest
finit
fninit
fsave
fnsave
fstcw
fnstcw
fstcww
fstenv
fnstenv
fstsw
fnstsw
fstsww
fclex
fnclex
ambiguous instructions require an explicit suffix (could be 
invalid instruction mnemonic '
unknown use of instruction mnemonic without a size suffix
cbtw
cltd
cqto
cwtd
popw
popl
popq
retw
retl
retq
callw
calll
callq
cltq
cwtl
iretw
iretl
lgdtw
lgdtl
lgdtq
lidtw
lidtl
lidtq
lretw
lretl
popaw
popal
popfw
popfl
popfq
pushw
pushl
pushq
shlb
shll
shlq
shlw
sgdtw
sgdtl
sgdtq
sidtw
sidtl
sidtq
fildll
wait
oopz
loope
pushaw
pushal
pushfw
pushfl
pushfq
epnz
errw
verr
cmovbl
cmovbq
cmovbw
cmovel
cmoveq
cmovew
fcmovnbe
fcmove
fcompi
stpq
fistpll
dcww
fldcw
leave
opnz
loopne
ushfd
ysret
sysretl
cmovbel
cmovbeq
cmovbew
cmovael
cmovaeq
cmovaew
cmovlel
cmovleq
cmovlew
cmovgel
cmovgeq
cmovgew
cmovnel
cmovneq
cmovnew
cmovpl
cmovpq
cmovpw
cmovnpl
cmovnpq
cmovnpw
fcmovnb
fcmovbe
sttpq
fisttpll
comip
fucompi
ysexit
sysexitl
movn
cmoval
cmovaq
cmovaw
cmovll
cmovlq
cmovlw
cmovgl
cmovgq
cmovgw
cmovnae
fcmovb
popa
cmovb
cmove
cmovbe
cmovae
cmovle
cmovge
cmovne
cmovp
cmovnp
ushad
cmovn
cmova
cmovl
cmovg
sete
setbe
setae
setle
setge
setne
setp
setnp
setn
seta
setl
setg
{sae}
AVX-512 ISA
AVX-512 VLX ISA
Not 64-bit mode
64-bit mode
16-bit mode
Not 16-bit mode
32-bit mode
(%rip)
no-rip
@feat.00
 /EXPORT:
 -export:
,DATA
,data
__IMPORT
_fltused
__fltused
$stub
$non_lazy_ptr
__imp_
 + [.-
@TLSGD
@TLSLD
@TLSLDM
@GOTTPOFF
@INDNTPOFF
@TPOFF
@DTPOFF
@NTPOFF
@GOTNTPOFF
@GOTPCREL
@GOT
@GOTOFF
@PLT
@TLVP
@SECREL32
subreg
X86 Assembly / Object Emitter
atomicrmw.end
atomicrmw.start
loaded
newloaded
success
X86 Machine Code Emitter
JIT does not support inline asm!
SSE register return with SSE disabled
X86 FP Stackifier
Stack overflow!
Access past stack top!
Cannot pop empty stack!
Stack empty??
Stack cannot be empty!
fixed input regs must be last on the x87 stack
output regs must be last on the x87 stack
clobbers must be last on the x87 stack
implicitly popped regs must be last on the x87 stack
_ftol2
___chkstk_ms
__chkstk
_alloca
_chkstk
Segmented stacks do not support vararg functions.
Segmented stacks not supported on this platform.
Segmented stacks not supported on FreeBSD i386.
__morestack
erlang.
bif_
inc_stack_0
Segmented stacks does not support fastcall with nested function.
X86 DAG->DAG Instruction Selection
x86-experimental-vector-widening-legalization
Enable an experimental vector type legalization through widening rather than promotion.
x86-experimental-vector-shuffle-lowering
Enable an experimental vector shuffle lowering code path.
_alldiv
_aulldiv
_allrem
_aullrem
_allmul
sincosf
sincos
SSE2 register return with SSE2 disabled
cannot use inalloca attribute on a register parameter
any parameter with the inalloca attribute must be the only memory argument
_tls_array
_tls_index
Cannot use segmented stacks with functions that have nested arguments.
Nest register in use - reduce number of inreg parameters!
X86ISD::BSF
X86ISD::BSR
X86ISD::SHLD
X86ISD::SHRD
X86ISD::FAND
X86ISD::FANDN
X86ISD::FOR
X86ISD::FXOR
X86ISD::FSRL
X86ISD::FILD
X86ISD::FILD_FLAG
X86ISD::FP_TO_INT16_IN_MEM
X86ISD::FP_TO_INT32_IN_MEM
X86ISD::FP_TO_INT64_IN_MEM
X86ISD::FLD
X86ISD::FST
X86ISD::CALL
X86ISD::RDTSC_DAG
X86ISD::RDTSCP_DAG
X86ISD::RDPMC_DAG
X86ISD::BT
X86ISD::CMP
X86ISD::COMI
X86ISD::UCOMI
X86ISD::CMPM
X86ISD::CMPMU
X86ISD::SETCC
X86ISD::SETCC_CARRY
X86ISD::FSETCC
X86ISD::CMOV
X86ISD::BRCOND
X86ISD::RET_FLAG
X86ISD::REP_STOS
X86ISD::REP_MOVS
X86ISD::GlobalBaseReg
X86ISD::Wrapper
X86ISD::WrapperRIP
X86ISD::PEXTRB
X86ISD::PEXTRW
X86ISD::INSERTPS
X86ISD::PINSRB
X86ISD::PINSRW
X86ISD::PSHUFB
X86ISD::ANDNP
X86ISD::PSIGN
X86ISD::BLENDV
X86ISD::BLENDI
X86ISD::SUBUS
X86ISD::HADD
X86ISD::HSUB
X86ISD::FHADD
X86ISD::FHSUB
X86ISD::UMAX
X86ISD::UMIN
X86ISD::SMAX
X86ISD::SMIN
X86ISD::FMAX
X86ISD::FMIN
X86ISD::FMAXC
X86ISD::FMINC
X86ISD::FRSQRT
X86ISD::FRCP
X86ISD::TLSADDR
X86ISD::TLSBASEADDR
X86ISD::TLSCALL
X86ISD::EH_SJLJ_SETJMP
X86ISD::EH_SJLJ_LONGJMP
X86ISD::EH_RETURN
X86ISD::TC_RETURN
X86ISD::FNSTCW16m
X86ISD::FNSTSW16r
X86ISD::LCMPXCHG_DAG
X86ISD::LCMPXCHG8_DAG
X86ISD::LCMPXCHG16_DAG
X86ISD::VZEXT_MOVL
X86ISD::VZEXT_LOAD
X86ISD::VZEXT
X86ISD::VSEXT
X86ISD::VTRUNC
X86ISD::VTRUNCM
X86ISD::VINSERT
X86ISD::VFPEXT
X86ISD::VFPROUND
X86ISD::VSHLDQ
X86ISD::VSRLDQ
X86ISD::VSHL
X86ISD::VSRL
X86ISD::VSRA
X86ISD::VSHLI
X86ISD::VSRLI
X86ISD::VSRAI
X86ISD::CMPP
X86ISD::PCMPEQ
X86ISD::PCMPGT
X86ISD::PCMPEQM
X86ISD::PCMPGTM
X86ISD::ADD
X86ISD::SUB
X86ISD::ADC
X86ISD::SBB
X86ISD::SMUL
X86ISD::UMUL
X86ISD::INC
X86ISD::DEC
X86ISD::OR
X86ISD::XOR
X86ISD::AND
X86ISD::BEXTR
X86ISD::MUL_IMM
X86ISD::PTEST
X86ISD::TESTP
X86ISD::TESTM
X86ISD::TESTNM
X86ISD::KORTEST
X86ISD::PACKSS
X86ISD::PACKUS
X86ISD::PALIGNR
X86ISD::VALIGN
X86ISD::PSHUFD
X86ISD::PSHUFHW
X86ISD::PSHUFLW
X86ISD::SHUFP
X86ISD::MOVLHPS
X86ISD::MOVLHPD
X86ISD::MOVHLPS
X86ISD::MOVLPS
X86ISD::MOVLPD
X86ISD::MOVDDUP
X86ISD::MOVSHDUP
X86ISD::MOVSLDUP
X86ISD::MOVSD
X86ISD::MOVSS
X86ISD::UNPCKL
X86ISD::UNPCKH
X86ISD::VBROADCAST
X86ISD::VBROADCASTM
X86ISD::VEXTRACT
X86ISD::VPERMILP
X86ISD::VPERM2X128
X86ISD::VPERMV
X86ISD::VPERMV3
X86ISD::VPERMIV3
X86ISD::VPERMI
X86ISD::PMULUDQ
X86ISD::PMULDQ
X86ISD::VASTART_SAVE_XMM_REGS
X86ISD::VAARG_64
X86ISD::WIN_ALLOCA
X86ISD::MEMBARRIER
X86ISD::SEG_ALLOCA
X86ISD::WIN_FTOL
X86ISD::SAHF
X86ISD::RDRAND
X86ISD::RDSEED
X86ISD::FMADD
X86ISD::FMSUB
X86ISD::FNMADD
X86ISD::FNMSUB
X86ISD::FMADDSUB
X86ISD::FMSUBADD
X86ISD::PCMPESTRI
X86ISD::PCMPISTRI
X86ISD::XTEST
__morestack_allocate_stack_space
___chkstk
bswap
bswapl
bswapq
${0:q}
=r,0,
rorw
$$8,
${0:w}
rolw
rorl
$$16,
%eax
%edx
xchgl
%eax,
{st}
{flags}
~{cc}
~{flags}
~{fpsr}
~{dirflag}
disable-spill-fusing
Disable fusing of spill code into instructions
print-failed-fuse-candidates
Print instructions that the allocator wants to fuse, but the X86 backend currently can't
remat-pic-stub-load
Re-materialize load from stub in PIC mode
We failed to fuse operand 
 in 
X86 PIC Global Base Reg Initialization
_GLOBAL_OFFSET_TABLE_
MEMBARRIER
eh_return, addr: %
TAILCALL
zero
__tls_get_addr
___tls_get_addr
X86 Atom pad short functions
GR8_ABCD_H
GR8_ABCD_L
SEGMENT_REG
RFP32
GR8_NOREX
DEBUG_REG
VR64
GR8_NOREX+GR64_NOREX_and_GR64_TC
GR8_NOREX+GR64_TCW64
FR32
CONTROL_REG
GR64_NOREX
GR8_NOREX+GR64_TC
GR8+GR64_TCW64
GR64_NOREX+GR64_TC
GR8+GR64_NOREX
GR8+GR64_TC
FR32X
GR64
force-align-stack
Force align the stack to the minimum alignment needed for the function.
x86-use-base-pointer
Enable use of a base pointer for complex stack frames
Stack realignment in presence of dynamic allocas is not supported withthis calling convention.
no-realign-stack
sub_8bit
sub_8bit_hi
sub_16bit
sub_32bit
sub_xmm
sub_ymm
x86-early-ifcvt
Enable early if-conversion on X86
__bzero
target-cpu
target-features
+64bit,+sse2,
+64bit,+sse2
-p:32:32
-i64:64
-f64:32:64
-f80:128
-f80:32
-n8:16:32:64
-n8:16:32
-S32
-S128
x86-use-vzeroupper
Minimize AVX to SSE transition penalty
__ImageBase
__xmm@
__ymm@
.rdata
X86 Target Transform Info
x86tti
X86 vzeroupper inserter
X86 LEA Fixup
combiner-alias-analysis
Enable DAG combiner alias-analysis heuristics
combiner-global-alias-analysis
Enable DAG combiner's use of IR alias analysis
combiner-use-tbaa
Enable DAG combiner's use of TBAA
combiner-stress-load-slicing
Bypass the profitability model of load slicing
combiner-split-load-index
DAG combiner may split indexing from loads
nontemporal
invariant.load
__sync_synchronize
abort
enable-legalize-types-checking
Unprocessed value in a map!
Value with legal type was transformed!
Processed value not in any map!
Value in multiple maps!
 ReplacedValues
 PromotedIntegers
 SoftenedFloats
 ScalarizedVectors
 ExpandedIntegers
 ExpandedFloats
 SplitVectors
 WidenedVectors
Do not know how to scalarize the result of this operator!
Do not know how to split the result of this operator!
Do not know how to split this operator's operand!
disable-dfa-sched
Disable use of DFA during scheduling
dfa-sched-reg-pressure-threshold
Track reg pressure and switch priority to in-depth
Fast suboptimal list scheduling
linearize
Linearize DAG, no scheduling
Can't handle live physical register dependency!
list-burr
Bottom-up register reduction list scheduling
source
Similar to list-burr but schedules in source order when possible
list-hybrid
Bottom-up register pressure aware list scheduling which tries to balance latency and register pressure
list-ilp
Bottom-up register pressure aware list scheduling which tries to balance ILP and register pressure
disable-sched-cycles
Disable cycle-level precision during preRA scheduling
disable-sched-reg-pressure
Disable regpressure priority in sched=list-ilp
disable-sched-live-uses
Disable live use priority in sched=list-ilp
disable-sched-vrcycle
Disable virtual register cycle interference checks
disable-sched-physreg-join
Disable physreg def-use affinity
disable-sched-stalls
Disable no-stall priority in sched=list-ilp
disable-sched-critical-path
Disable critical path priority in sched=list-ilp
disable-sched-height
Disable scheduled-height priority in sched=list-ilp
disable-2addr-hack
Disable scheduler's two-address hack
max-sched-reorder
Number of instructions to allow ahead of the critical path in sched=list-ilp
sched-avg-ipc
Average inst/cycle whan no target itinerary exists.
sched-high-latency-cycles
Roughly estimate the number of cycles that 'long latency'instructions take for targets with no itinerary
sunit-dag.
limit-float-precision
Generate low-precision inline sequences for some float libcalls
Cannot generate unaligned atomic load
Cannot generate unaligned atomic store
_setjmp
_longjmp
Unsupported asm: input constraint with a matching output constraint of incompatible type!
srcloc
couldn't allocate output register for constraint '
inline asm not supported yet: don't know how to handle tied indirect register inputs
inline asm error: This value type register class is not natively supported!
invalid operand for inline asm constraint '
Don't know how to handle indirect register inputs yet for constraint '
couldn't allocate input reg for constraint '
scalar-to-vector conversion failed
, possible invalid constraint for vector type
Indirect operand for inline asm not a pointer!
non-trivial scalar-to-vector conversion
<<Unknown DAG Node>>
<<Unknown Machine Node #
<<Unknown Target Node #
<<Unknown Node #
AtomicFence
AtomicCmpSwap
AtomicCmpSwapWithSuccess
AtomicSwap
AtomicLoadAdd
AtomicLoadSub
AtomicLoadAnd
AtomicLoadOr
AtomicLoadXor
AtomicLoadNand
AtomicLoadMin
AtomicLoadMax
AtomicLoadUMin
AtomicLoadUMax
AtomicLoad
AtomicStore
ReadCycleCounter
MDNode
EntryToken
TokenFactor
AssertSext
AssertZext
BasicBlock
ValueType
RegisterMask
OpaqueConstant
ConstantFP
GlobalAddress
GlobalTLSAddress
FrameIndex
JumpTable
GLOBAL_OFFSET_TABLE
RETURNADDR
FRAMEADDR
READ_REGISTER
WRITE_REGISTER
FRAME_TO_ARGS_OFFSET
EH_RETURN
EH_SJLJ_SETJMP
EH_SJLJ_LONGJMP
ConstantPool
TargetIndex
ExternalSymbol
BlockAddress
BUILD_VECTOR
OpaqueTargetConstant
TargetConstant
TargetConstantFP
TargetGlobalAddress
TargetGlobalTLSAddress
TargetFrameIndex
TargetJumpTable
TargetConstantPool
TargetExternalSymbol
TargetBlockAddress
CopyToReg
CopyFromReg
merge_values
inlineasm
handlenode
fsqrt
fsincos
ftrunc
ffloor
fceil
frint
fnearbyint
fround
fexp2
flog2
flog10
mulhu
mulhs
smul_lohi
umul_lohi
sdivrem
udivrem
fcopysign
fpowi
setcc
vselect
select_cc
insert_vector_elt
extract_vector_elt
concat_vectors
insert_subvector
extract_subvector
scalar_to_vector
vector_shuffle
carry_false
saddo
uaddo
ssubo
usubo
smulo
umulo
shl_parts
sra_parts
srl_parts
sign_extend
zero_extend
any_extend
sign_extend_inreg
any_extend_vector_inreg
sign_extend_vector_inreg
zero_extend_vector_inreg
flt_rounds
fp_round_inreg
fp_extend
sint_to_fp
uint_to_fp
fp_to_sint
fp_to_uint
fp16_to_fp
fp_to_fp16
cvt_ff
cvt_fs
cvt_fu
cvt_sf
cvt_uf
cvt_ss
cvt_su
cvt_us
cvt_uu
brind
br_jt
brcond
br_cc
callseq_start
callseq_end
vaarg
vacopy
vaend
vastart
dynamic_stackalloc
extract_element
build_pair
stacksave
stackrestore
debugtrap
lifetime.start
lifetime.end
ctpop
cttz_zero_undef
ctlz_zero_undef
init_trampoline
adjust_trampoline
setoeq
setogt
setoge
setolt
setole
setone
setuo
setue
setugt
setuge
setult
setule
setune
seteq
setgt
setlt
settrue
setfalse2
<pre-inc>
<pre-dec>
<post-inc>
<post-dec>
Mem:
<APFloat(
 [TF=
<null>
, anyext
, sext
, zext
 from 
, trunc to 
 -> 
 [ORD=
 [ID=
 dbg:
<unknown>
SelectionDAG has 
 nodes:
: <multiple use>
fast-isel-verbose
Enable verbose messages in the "fast" instruction selector
fast-isel-abort
Enable abort calls when "fast" instruction selection fails to lower an instruction
fast-isel-abort-args
Enable abort calls when "fast" instruction selection fails to lower a formal argument
use-mbpi
use Machine Branch Probability Info
pre-RA-sched
Instruction schedulers available (before register allocation):
Best scheduler for the target
Instruction Selection and Scheduling
DAG Combining 1
Type Legalization
DAG Combining after legalize types
Vector Legalization
Type Legalization 2
DAG Combining after legalize vectors
DAG Legalization
DAG Combining 2
Instruction Selection
Instruction Scheduling
Instruction Creation
Instruction Scheduling Cleanup
FastISel missed call: 
FastISel missed terminator: 
FastISel miss: 
Could not match memory address.  Inline asm failure!
Cannot select: 
In function: 
intrinsic %
target intrinsic %
unknown intrinsic #
SelectionDAG::viewGraph is only available in debug builds on 
systems with Graphviz or gv!
SelectionDAG::clearGraphAttrs is only available in debug builds
 on systems with Graphviz or gv!
SelectionDAG::setGraphAttrs is only available in debug builds
SelectionDAG::getGraphAttrs is only available in debug builds
SelectionDAG::setGraphColor is only available in debug builds
SelectionDAG::setSubgraphColor is only available in debug builds
    
CROSS RC COPY
plaintext=circle
GraphRoot
color=blue,style=dashed
Node
 label ="
 -> Node
vliw-td
VLIW scheduler
memory
argument to '__builtin_return_address' must be a constant integer
Named registers not implemented for this target
eh_func_begin
eh_func_end
>> Catch TypeInfos <<
TypeInfo 
>> Filter TypeInfos <<
FilterInfo 
Start of file scope inline assembly
End of file scope inline assembly
Debug Info Emission
CodeView Line Tables
DWARF Emission
DWARF Exception Writer
$tlv$init
_tlv_bootstrap
Address taken block that was later removed
' label emitted multiple times to assembly file
implicit-def: 
avoids zero-length function
Address of block that was removed by CodeGen
llvm.init.trampoline
.constructors_used
.destructors_used
llvm.ident
_set_
Block address taken
 BB#
no GCMetadataPrinter registered for GC: 
-byte Reload
-byte Folded Reload
-byte Spill
-byte Folded Spill
 Reload Reuse
 [piece offset=
 size=
(long double) 
kill:
<def>
<kill>
Unsupported expression in static initializer: 
0x%llx
float 
double 
  in Loop: Header=BB
 Depth=
This 
Inner 
Loop Header: Depth=
Parent Loop BB
Child Loop BB
 Depth 
DW_CFA_offset + Reg (
 Encoding = 
Encoding = 
DW_OP_bit_piece
DW_OP_piece
super-register
sub-register
nop (could not find a dwarf register number)
nop (invalid dwarf register number for indirect loc)
absptr
omit
pcrel
udata4
udata8
sdata4
sdata8
pcrel udata4
pcrel sdata4
pcrel udata8
pcrel sdata8
indirect pcrel udata4
indirect pcrel sdata4
indirect pcrel udata8
indirect pcrel sdata8
<unknown encoding>
DW_OP_regx
DW_OP_constu
DW_OP_shr
DW_OP_bregx
DW_OP_deref
<inline asm>
Inline asm not supported by this streamer because we don't have an asm parser for this target
Error parsing inline asm
comment
Unknown special formatter '
' for machine instr: 
Nested variants found in inline asm string: '
Unterminated ${:foo} operand in inline asm string: '
Bad $ operand number in inline asm string: '
Bad ${:} expression in inline asm string: '
Bad ${} expression in inline asm string: '
Invalid $ operand number in inline asm string: '
invalid operand in inline asm: '
.intel_syntax
.att_syntax
EOM(1)
EOM(2)
Header Magic
Header Version
Header Hash Function
Header Bucket Count
Header Hash Count
Header Data Length
HeaderData Die Offset Base
HeaderData Atom Count
Bucket 
Hash in Bucket 
Offset in Bucket 
Num DIEs
exception
disable-debug-info-print
Disable debug info printing
use-unknown-locations
Make an absence of debug location information explicit.
generate-gnu-dwarf-pub-sections
Generate GNU-style pubnames and pubtypes
generate-arange-section
Generate dwarf aranges
dwarf-accel-tables
Output prototype dwarf accelerator tables.
Default
Default for platform
Enable
Enabled
Disable
Disabled
split-dwarf
Output DWARF5 split debug info.
generate-dwarf-pub-sections
Generate DWARF pubnames and pubtypes sections
info_string
skel_string
DWARF Debug Writer
debug_ranges
cu_ranges
debug_end
debug_loc
func_begin
func_end
section_info
section_info_dwo
section_types_dwo
section_abbrev
section_abbrev_dwo
section_line
addr_sec
skel_loc
section_debug_loc
debug_range
Abbrev [
] 0x
End Of Children Mark
Extended Op
Op size
DW_LNE_set_address
Section end label
section_end
DW_LNE_end_sequence
Names
names_begin
ObjC
objc_begin
namespac
namespac_begin
types
types_begin
Length of Public 
 Info
_begin
DWARF Version
Offset of Compilation Unit Info
Compilation Unit Length
DIE offset
Kind: 
External Name
End Mark
Types
DW_OP_consts
DW_OP_plus_uconst
Loc expr size
Length of ARange Set
DWARF Arange version number
Offset Into Debug Info Section
Address Size (in bytes)
Segment Size (in bytes)
ARange terminator
Length of Unit
Abbreviation Code
EOM(3)
generate-type-units
Generate DWARF4 type units.
__forwarding
(anonymous namespace)
sizetype
DWARF version number
Offset Into Abbrev. Section
Type Signature
Type DIE Offset
GCC_except_table
_LSDA_
@LPStart
@TType
@TType base offset
Call site
Call site table length
>> Call Site 
  On exception at call site 
  Action: cleanup
  Action: 
  Call between 
 and 
    has no landing pad
    jumps to 
  On action: cleanup
  On action: 
>> Action Record 
  Catch TypeInfo 
  Filter TypeInfo 
  Cleanup
  No further actions
  Continue to action 
erlang
erlang-compatible garbage collector
.note.gc
safe point count
safe point address
stack frame size (in words)
stack arity
live root count
stack index (offset / wordsize)
ocaml
ocaml 3.10-compatible collector
code_begin
data_begin
caml
code_end
data_end
frametable
 Too much descriptor for ocaml GC
Function '
' is too large for the ocaml GC! Frame size 
>= 65536.
live roots for 
' is too large for the ocaml GC! Live root count 
 >= 65536.
GC root stack offset is outside of fixed stack frame and out of range for ocaml GC!
\..\
Linetable subsection for 
Segment for file '
' begins
File index to string table offset subsection
String table
agg-antidep-debugdiv
Debug control for aggressive anti-dep breaker
agg-antidep-debugmod
llvm.eh.catch.all.value
Expand Atomic calls in terms of load-linked & store-conditional
atomic-ll-sc
tryagain
cmpxchg.end
cmpxchg.failure
cmpxchg.success
cmpxchg.trystore
cmpxchg.start
should_store
partial-unrolling-threshold
Threshold for partial unrolling
Target independent code generator's TTI
basictti
enable-tail-merge
tail-merge-threshold
Max number of predecessors to consider tail merging
tail-merge-size
Min number of instructions to consider tail merging
Control Flow Optimizer
branch-folder
calc-spill-weights-uses-loop-depth
The calculation of spill weights uses loop depth heuristic
disable-cgp-branch-opts
Disable branch optimizations in CodeGenPrepare
disable-cgp-select2branch
Disable select to branch conversion.
addr-sink-using-gep
Address sinking in CGP using GEPs.
enable-andcmp-sinking
Enable sinkinig and/cmp into branches.
disable-cgp-store-extract
Disable store(extract) optimizations in CodeGenPrepare
stress-cgp-store-extract
Stress test store(extract) optimizations in CodeGenPrepare
Optimize for code generation
codegenprepare
CodeGen Prepare
.cond.split
sunkaddr
promoted
select.end
select.mid
Remove dead machine instructions
dead-mi-elimination
Exception handling preparation
unwind_resume
exn.obj
early-ifcvt-limit
stress-early-ifcvt
Early If Converter
early-ifcvt
Early If-Conversion
view-edge-bundles
Pop up a window to show edge bundle graphs
digraph {
"BB#
" [ shape=box ]
 -> "BB#
" -> 
" -> "BB#
" [ color=lightgray ]
EdgeBundles
Bundle Machine CFG Edges
edge-bundles
error opening file '
' for writing!
 done. 
Execution dependency fix
Expand ISel Pseudo-instructions
expand-isel-pseudos
Post-RA pseudo instruction expansion pass
postrapseudos
unsupported GC: 
Create Garbage Collector Module Metadata
collector-metadata
Print Garbage Collector Information
GC roots for 
[sp]
GC safe points for 
, live = {
loop
return
pre-call
post-call
 must override performCustomLowering.
 must override findCustomSafePoints.
GC Lowering
gc-lowering
Lower Garbage Collection Instructions
Analyze Machine Code For Garbage Collection
gc-analysis
enable-global-merge
Enable global merge pass
global-merge-on-const
Enable global merge pass on constants
global-merge-on-external
Enable global merge pass on external linkage
Merge global variables
global-merge
Merge internal globals
.llvm.
_MergedGlobals_
_MergedGlobals
ifcvt-fn-start
ifcvt-fn-stop
ifcvt-limit
disable-ifcvt-simple
disable-ifcvt-simple-false
disable-ifcvt-triangle
disable-ifcvt-triangle-rev
disable-ifcvt-triangle-false
disable-ifcvt-triangle-false-rev
disable-ifcvt-diamond
ifcvt-branch-fold
If Converter
if-converter
ifcvt
Number of simple if-conversions performed
Number of simple (F) if-conversions performed
Number of triangle if-conversions performed
Number of triangle (R) if-conversions performed
Number of triangle (F) if-conversions performed
Number of triangle (F/R) if-conversions performed
Number of diamond if-conversions performed
disable-spill-hoist
Disable inline spill hoisting
setjmp
longjmp
sqrtf
sqrt
sqrtl
sinf
sinl
cosf
cosl
powf
powl
logf
logl
log2f
log2
log2l
log10f
log10
log10l
expf
expl
exp2f
exp2
exp2l
Cannot lower a call to a non-intrinsic function '
Code generator does not support intrinsic function '
.not
WARNING: this target does not support the llvm.stack
save
restore
 intrinsic.
WARNING: this target does not support the llvm.
frame
address intrinsic.
WARNING: this target does not support the llvm.readcyclecoun
ter intrinsic.  It is being lowered to a constant 0
ceilf
ceil
ceill
cppop.and1
ctpop.sh
cppop.and2
ctpop.step
ctpop.part
ctpop.part.sh
bswap.2
bswap.1
bswap.i16
bswap.4
bswap.3
bswap.and3
bswap.and2
bswap.or1
bswap.or2
bswap.i32
bswap.8
bswap.7
bswap.6
bswap.5
bswap.and7
bswap.and6
bswap.and5
bswap.and4
bswap.or3
bswap.or4
bswap.or5
bswap.or6
bswap.i64
ctlz.sh
ctlz.step
__llvm_jump_instr_table_
Jump-Instruction Tables
jump-instr-tables
fast-isel
Enable the "fast" instruction selector
live-debug-variables
Enable the live debug variables pass
Debug Variable Analysis
livedebugvars
EMPTY
-phi
Clean updater: 
Null updater.
 updater with gap = 
, last start = 
  Area 1:
  Spills:
  Area 2:
********** INTERVALS **********
RegMasks:
********** MACHINEINSTRS **********
Live Interval Analysis
liveintervals
 empty
Live Register Matrix
liveregmatrix
Live Registers:
 (uninitialized)
 (empty)
 [Unknown]
Live Stack Slot Analysis
livestacks
regalloc=... not currently supported with -O0
Live Variable Analysis
livevars
Local Stack Slot Allocation
localstackalloc
(null)
Can't print out MachineBasicBlock because parent MachineFunction
 is null
derived from LLVM BB 
EH LANDING PAD
ADDRESS TAKEN
Align 
 bytes)
    Live Ins:
    Predecessors according to CFG:
  * 
    Successors according to CFG:
MachineBlockFrequencyInfo::view is only available in debug builds on systems with Graphviz or gv!
Machine Block Frequency Analysis
machine-block-freq
block-frequency-info: 
: float = 
, int = 
align-all-blocks
Force the alignment of all blocks in the function.
block-placement-exit-block-bias
Block frequency percentage a loop exit block needs over the original exit to be considered the new exit.
Branch Probability Basic Block Placement
block-placement2
Basic Block Placement Stats
block-placement-stats
edge MBB#
 -> MBB#
 probability is 
 [HOT edge]
Machine Branch Probability Analysis
machine-branch-prob
Machine Common Subexpression Elimination
machine-cse
Machine InstCombiner
machine-combiner
Machine Copy Propagation Pass
machine-cp
MachineCopyPropagation should be run after register allocation!
=============================--------------------------------
Inorder PostDominator Tree: 
Inorder Dominator Tree: 
DFSNumbers invalid: 
 slow queries.
MachineDominator Tree Construction
machinedomtree
 <<exit node>>
  DomFrontier for BB 
 is:
<<exit node>>
Machine Dominance Frontier Construction
machine-domfrontier
split-stack
# Machine code for function 
Post SSA
, not tracking liveness
Function Live Ins: 
# End machine code for function 
MachineFunction::viewCFG is only available in debug builds on 
MachineFunction::viewCFGOnly is only available in debug builds on 
Frame Objects:
  fi#
dead
variable sized
size=
, align=
, fixed
, at location [SP
Jump Tables:
  jt#
Constant Pool:
  cp#
Machine Function Analysis
scalar-evolution
iv-users
memdep
live-values
domtree
domfrontier
loops
stack-protector
Machine Function Printer
print-machineinstrs
MachineFunction Printer
earlyclobber,
imp-
,read-undef
imp-use
kill
dead
tied
<BB#
<fi#
<cp#
<ti#
<jt#
<ga:
<es:
<regmask>
<regliveout>
<MCSym=
<call frame instruction>
[TF=
Volatile 
(addrspace=
(align=
(tbaa=
(alias.scope=
(noalias=
(nontemporal)
UNKNOWN
 [sideeffect]
 [mayload]
 [maystore]
 [alignstack]
 [attdialect]
 [inteldialect]
pred:
opt:
:[reguse
:[regdef
:[regdef-ec
:[clobber
:[imm
:[mem
:[??
 tiedto:$
 ...
 flags: 
FrameSetup
 mem:
 line no:
 inlined @[ 
Unpack machine instruction bundles
unpack-mi-bundles
Finalize machine instruction bundles
finalize-mi-bundles
avoid-speculation
MachineLICM should avoid speculation
Machine Loop Invariant Code Motion
machinelicm
Loop at depth 
 containing: 
<header>
<latch>
<exiting>
Machine Natural Loop Construction
machine-loops
Machine Module Information
machinemoduleinfo
MachinePostDominator Tree Construction
machinepostdomtree
<Function Return>
 => 
Region tree:
End region tree
Detect single entry single exit regions
regions
misched-topdown
Force top-down list scheduling
misched-bottomup
Force bottom-up list scheduling
misched-dcpl
Print critical path length to stdout
misched-regpressure
Enable register pressure scheduling.
misched-cyclicpath
Enable cyclic critical path analysis.
misched-cluster
Enable load clustering.
misched-fusion
Enable scheduling for macro fusion.
verify-misched
Verify machine instrs before and after machine scheduling
misched
Machine instruction scheduler to use
Use the target's default scheduler choice.
Critical Path(GS-RR ): 
converge
Standard converging scheduler.
Critical Path(PGS-RR ): 
ilpmax
Schedule bottom-up for max ILP
ilpmin
Schedule bottom-up for min ILP
ScheduleDAGMI::viewGraph is only available in debug builds on 
Scheduling-Units Graph for 
Machine Instruction Scheduler
Before machine scheduling.
After machine scheduling.
:BB# 
PostRA Machine Instruction Scheduler
postmisched
Before post machine scheduling.
After post machine scheduling.
TopQ
BotQ
machine-sink-split
Split critical edges during machine sinking
machine-sink-bfi
Use block frequency info to find successors to sink
Machine code sinking
machine-sink
 ensemble:
  BB#
depth=
 pred=BB#
 pred=null
 head=BB#
 +instrs
depth invalid
height=
 succ=BB#
 succ=null
 tail=BB#
height invalid
, crit=
 trace BB#
 --> BB#
 instrs.
 cycles.
 <- BB#
 -> BB#
Machine Trace Metrics
machine-trace-metrics
MinInstr
Verify generated machine code
machineverifier
LLVM_VERIFY_MACHINEINSTRS
Error opening '
Bad instruction parent pointer
Instruction: 
Missing BundledPred flag, BundledSucc was set on predecessor
BundledPred flag is set, but BundledSucc not set on predecessor
No bundle header
BundledSucc flag set on last instruction in block
Found 
 machine code errors.
MBB has duplicate entries in its predecessor list.
MBB has duplicate entries in its successor list.
FrameSetup is after another FrameSetup
FrameDestroy is not after a FrameSetup
FrameDestroy <n> is after FrameSetup <m>
FrameDestroy <
> is after FrameSetup <
The exit stack state of a predecessor is inconsistent.
Predecessor BB#
 has exit state (
), while BB#
 has entry state (
The entry stack state of a successor is inconsistent.
Successor BB#
A return block ends with a FrameSetup.
A return block ends with a nonzero stack adjustment.
MBB has allocable live-in, but isn't entry or landing-pad.
MBB has successor that isn't part of the function.
Inconsistent CFG
MBB is not in the predecessor list of the successor BB#
MBB has predecessor that isn't part of the function.
MBB is not in the successor list of the predecessor BB#
MBB has more than one landing pad successor
MBB exits via unconditional fall-through but doesn't have exactly one CFG successor!
MBB exits via unconditional fall-through but its successor differs from its CFG successor!
MBB exits via unconditional fall-through but ends with a barrier instruction!
MBB exits via unconditional fall-through but has a condition!
MBB exits via unconditional branch but doesn't have exactly one CFG successor!
MBB exits via unconditional branch but the CFG successor doesn't match the actual successor!
MBB exits via unconditional branch but doesn't contain any instructions!
MBB exits via unconditional branch but doesn't end with a barrier instruction!
MBB exits via unconditional branch but the branch isn't a terminator instruction!
MBB conditionally falls through out of function!
MBB exits via conditional branch/fall-through but only has one CFG successor!
MBB exits via conditional branch/fall-through but the CFG successor don't match the actual successor!
MBB exits via conditional branch/fall-through but doesn't have exactly two CFG successors!
MBB exits via conditional branch/fall-through but the CFG successors don't match the actual successors!
MBB exits via conditional branch/fall-through but doesn't contain any instructions!
MBB exits via conditional branch/fall-through but ends with a barrier instruction!
MBB exits via conditional branch/fall-through but the branch isn't a terminator instruction!
MBB exits via conditional branch/branch through but only has one CFG successor!
MBB exits via conditional branch/branch through but the CFG successor don't match the actual successor!
MBB exits via conditional branch/branch but doesn't have exactly two CFG successors!
MBB exits via conditional branch/branch but the CFG successors don't match the actual successors!
MBB exits via conditional branch/branch but doesn't contain any instructions!
MBB exits via conditional branch/branch but doesn't end with a barrier instruction!
MBB exits via conditional branch/branch but the branch isn't a terminator instruction!
MBB exits via conditinal branch/branch but there's no condition!
AnalyzeBranch returned invalid data!
MBB live-in list contains non-physical register
- basic block: BB#
*** Bad machine code: 
 ***
- function:    
- instruction: 
Instruction index out of order
Last instruction was at 
Non-terminator instruction after the first terminator
First terminator was:
Too few operands
 operands expected, but 
 given.
Missing mayLoad flag
Missing mayStore flag
Debug instruction has a slot index
Instruction inside bundle has a slot index
Missing slot index
Too few operands on inline asm
Asm string must be an external symbol
Asm flags must be an immediate
Unknown asm flags
Missing operands in last group
Expected implicit register after groups
- operand 
:   
Explicit definition must be a register
Explicit definition marked as use
Explicit definition marked as implicit
Explicit operand marked as def
Explicit operand marked as implicit
Tied use must be a register
Operand should be tied
Tied def doesn't match MCInstrDesc
Explicit operand should not be tied
Extra explicit operand on non-variadic instruction
Must be tied to a register
Missing tie flags on tied operand
Inconsistent tie links
Explicit def tied to explicit use without tie constraint
Explicit def should be tied to implicit use
Two-address instruction operands must be identical
Illegal subregister index for physical register
Illegal physical register for instruction
 is not a 
 register.
Invalid subregister index for virtual register
Register class 
 does not support subreg index 
Invalid register class for subregister index
 does not fully support subreg index 
No largest legal super class exists.
No matching super-reg register class.
Illegal virtual register for instruction
Expected a 
 register, but got a 
 register
PHI operand is not in the CFG
Instruction loads from dead spill slot
Live stack: 
Instruction stores to dead spill slot
Kill missing from LiveVariables
No live segment at use
 is not live in 
Live range continues after kill flag
Live range: 
Virtual register has no live interval
Using an undefined physical register
Reading virtual register without a def
Using a killed virtual register
Multiple virtual register defs in SSA form
Inconsistent valno->def
Valno 
 is not defined at 
No live segment at def
Live range continues after dead def flag
Virtual register has no Live interval
Block ends before last instruction index
Block ends at 
 last instruction was at 
Virtual register killed in block, but needed live out.
Virtual register 
 is used after the block.
Virtual register def doesn't dominate all uses.
PHI operand is not live-out from predecessor
Missing PHI operand
 is a predecessor according to the CFG.
LiveVariables: Block missing from AliveBlocks
 must be live through the block.
LiveVariables: Block should not be in AliveBlocks
 is not needed live through the block.
Missing live interval for virtual register
 still has defs or uses
Multiple connected components in live interval
: valnos
- interval:    
Valno not live at def and not marked unused
Valno #
Live segment at def has different valno
 is defined at 
 where valno #
 is live
Invalid definition index
PHIDef value is not defined at MBB start
, not at the beginning of BB#
No instruction at def index
Defining instruction does not modify register
Early clobber def must be at an early-clobber slot
Non-PHI, non-early clobber def must be at a register slot
- liverange:    
Foreign valno in live segment
 has a bad valno
Live segment valno is marked unused
Bad start of live segment, no basic block
Live segment must begin at MBB entry or valno def
Bad end of live segment, no basic block
Live segment doesn't end at a valid instruction
Live segment ends at B slot of an instruction
Live segment ending at dead slot spans instructions
Live segment ending at early clobber slot must be redefined by an EC def in the same instruction
Instruction ending live segment doesn't read the register
Register not marked live out of predecessor
 live into BB#
, not live before 
Different value live out of predecessor
 live out of BB#
Valno #
ocaml 3.10-compatible GC
Optimize machine instruction PHIs
opt-phis
disable-phi-elim-edge-splitting
Disable critical edge splitting during PHI elimination
phi-elim-split-all-critical-edges
Split all critical edges during PHI elimination
Eliminate PHI nodes for register allocation
phi-node-elimination
disable-post-ra
Disable Post Regalloc
disable-branch-fold
Disable branch folding
disable-tail-duplicate
Disable tail duplication
disable-early-taildup
Disable pre-register allocation tail duplication
disable-block-placement
Disable probability-driven block placement
enable-block-placement-stats
Collect probability-driven block placement stats
disable-ssc
Disable Stack Slot Coloring
disable-machine-dce
Disable Machine Dead Code Elimination
disable-early-ifcvt
Disable Early If-conversion
disable-machine-licm
Disable Machine LICM
disable-machine-cse
Disable Machine Common Subexpression Elimination
optimize-regalloc
Enable optimized register allocation compilation path.
enable-misched
Enable the machine instruction scheduling pass.
disable-postra-machine-licm
disable-machine-sink
Disable Machine Sinking
disable-lsr
Disable Loop Strength Reduction Pass
disable-constant-hoisting
Disable ConstantHoisting
disable-cgp
Disable Codegen Prepare
disable-copyprop
Disable Copy Propagation pass
disable-partial-libcall-inlining
Disable Partial Libcall Inlining
print-lsr-output
Print LLVM IR produced by the loop-reduce pass
print-isel-input
Print LLVM IR input to isel pass
print-gc
Dump garbage collector data
verify-machineinstrs
Print machine instrs
pass-name
option-unspecified
misched-postra
Run MachineScheduler post regalloc (independent of preRA sched)
early-live-intervals
Run live interval analysis earlier in the pipeline
Cannot stop compilation after pass that is not run
*** Code after LSR ***
*** Final LLVM Code input to ISel ***
After Instruction Selection
After ExpandISelPseudos
After PreRegAlloc passes
After PostRegAlloc passes
After PrologEpilogCodeInserter
After ExpandPostRAPseudos
After PreSched2 passes
After PostRAScheduler
After PreEmit passes
After Pre-RegAlloc TailDuplicate
After codegen DCE pass
After ILP optimizations
After Machine LICM, CSE and Sinking passes
After codegen peephole optimization pass
pick register allocator based on -O option
regalloc
Register allocator to use
After Register Allocation
After Machine Scheduling
After Register Allocation, before rewriter
After pre-rewrite passes
After Virtual Register Rewriter
After StackSlotColoring and postra Machine LICM
After BranchFolding
After TailDuplicate
After copy propagation pass
After machine block placement.
Target Pass Configuration
targetpassconfig
Target cannot enable pass
aggressive-ext-opt
Aggressive extension optimization
disable-peephole
Disable the peephole optimizer
disable-adv-copy-opt
Disable advanced copy optimization
Peephole Optimizations
peephole-opts
post-RA-scheduler
Enable scheduling after register allocation
break-anti-dependencies
Break post-RA scheduling anti-dependencies: "critical", "all", or "none"
none
postra-sched-debugdiv
Debug control MBBs that are scheduled
postra-sched-debugmod
Post RA top-down list latency scheduler
post-RA-sched
critical
Process Implicit Definitions
processimpdefs
warn-stack-size
Warn for stack size bigger than the given number
Prologue/Epilogue Insertion & Frame Finalization
prologepilog
FixedStack
Stack
verify-regalloc
Verify during register allocation
Seed Live Regs
inline assembly requires more registers than available
ran out of registers during register allocation
basic
basic register allocator
Basic Register Allocator
fast register allocator
Fast Register Allocator
split-spill-mode
Spill mode for splitting live ranges
Optimize for size
speed
Optimize for speed
lcr-max-depth
Last chance recoloring max depth
lcr-max-interf
Last chance recoloring maximum number of considered interference at a time
exhaustive-register-search
Exhaustive Search for registers bypassing the depth and interference cutoffs of last chance recoloring
enable-local-reassign
Local reassignment can yield better allocation decisions, but may be compile time intensive
regalloc-csr-first-time-cost
Cost for first time use of callee-saved register.
greedy
greedy register allocator
Greedy Register Allocator
Before greedy register allocator
register allocation failed: maximum depth for recoloring reached. Use -fexhaustive-register-search to skip cutoffs
register allocation failed: maximum interference for recoloring reached. Use -fexhaustive-register-search to skip cutoffs
register allocation failed: maximum interference and depth for recoloring reached. Use -fexhaustive-register-search to skip cutoffs
Spiller
After spilling
After splitting live range around region
Evict
Local Splitting
Global Splitting
After splitting live range around basic blocks
pbqp
PBQP register allocator
pbqp-coalescing
Attempt coalescing during PBQP register allocation.
PBQP Register Allocator
stress-regalloc
Limit all regclasses to N registers
join-liveintervals
Coalesce copies (default=true)
join-splitedges
Coalesce copies on split edges (default=subtarget)
join-globalcopies
Coalesce copies that span blocks (default=subtarget)
verify-coalescing
Verify machine instrs before and after register coalescing
Simple Register Coalescing
simple-register-coalescing
Before register coalescing
After register coalescing
Max Pressure: 
Live In: 
Live Out: 
Curr Pressure: 
enable-aa-sched-mi
Enable use of AA during MI GAD construction
use-tbaa-in-sched-mi
Enable use of TBAA during MI GAD construction
<entry>
<exit>
dag.
BADILP
ScheduleDAG::viewGraph is only available in debug builds on 
shadow-stack
Very portable GC for uncooperative code generators
gc_map
gc_stackentry
llvm_gc_root_chain
gc_frame
gc_currhead
gc_frame.map
gc_root
gc_frame.next
gc_newhead
gc_cleanup
gc_savedhead
gc_map.
__gc_
gc_stackentry.
__gcc_personality_v0
cleanup.lpad
.cont
SJLJ Exception Handling preparation
_Unwind_SjLj_Register
_Unwind_SjLj_Unregister
jbuf_gep
jbuf_fp_gep
jbuf_sp_gep
.tmp
fn_context
__data
exception_gep
exn_val
exn_selector_gep
exn_selector_val
pers_fn_gep
lsda_addr
lsda_gep
lpad.val
call_site
Berd
invalid
Slot index numbering
slotindexes
spill-uses-loop-depth
Spill uses loop depth heuristic
Spill Code Placement Analysis
spill-code-placement
spiller
Spiller to use: (default: standard)
trivial
trivial spiller
inline spiller
no-stack-coloring
Disable stack coloring
protect-from-escaped-allocas
Do not optimize lifetime zones that are broken
Merge disjoint stack slots
stack-coloring
enable-selectiondag-sp
stack-protector-buffer-size
SP_return
CallStackCheckFailBlk
__stack_smash_handler
Insert stack protectors
__guard_local
StackGuardSlot
StackGuard
no-stack-slot-sharing
Suppress slot sharing during stack coloring
ssc-dce-limit
Stack Slot Coloring
stack-slot-coloring
stackslotcoloring
Number of trivially dead stack accesses eliminated
enable-patchpoint-liveness
Enable PatchPoint Liveness Analysis Pass
StackMap Liveness Analysis
stackmap-liveness
stackmap-version
Specify the stackmap encoding version (default = 1)
Stack Maps: 
__LLVM_StackMaps
tail-dup-size
Maximum instructions to consider tail duplicating
tail-dup-verify
Verify sanity of PHI instructions during taildup
tail-dup-limit
Tail Duplication
tailduplication
Malformed PHI in BB#
  missing input from predecessor BB#
Warning: malformed PHI in BB#
  extra input from predecessor BB#
  non-existing BB#
Number of tails duplicated
disable-sched-hazard
Disable hazard detection during preRA scheduling
cannot spill patchpoint subregister operand
__ashlhi3
__ashlsi3
__ashldi3
__ashlti3
__lshrhi3
__lshrsi3
__lshrdi3
__lshrti3
__ashrhi3
__ashrsi3
__ashrdi3
__ashrti3
__mulqi3
__mulhi3
__mulsi3
__muldi3
__multi3
__mulosi4
__mulodi4
__muloti4
__divqi3
__divhi3
__divsi3
__divdi3
__divti3
__udivqi3
__udivhi3
__udivsi3
__udivdi3
__udivti3
__modqi3
__modhi3
__modsi3
__moddi3
__modti3
__umodqi3
__umodhi3
__umodsi3
__umoddi3
__umodti3
__negsi2
__negdi2
__addsf3
__adddf3
__addxf3
__addtf3
__gcc_qadd
__subsf3
__subdf3
__subxf3
__subtf3
__gcc_qsub
__mulsf3
__muldf3
__mulxf3
__multf3
__gcc_qmul
__divsf3
__divdf3
__divxf3
__divtf3
__gcc_qdiv
fmodf
fmod
fmodl
fmaf
fmal
__powisf2
__powidf2
__powixf2
__powitf2
truncf
truncl
rintf
rint
rintl
nearbyintf
nearbyint
nearbyintl
roundf
round
roundl
floorf
floor
floorl
copysignf
copysign
copysignl
__extenddftf2
__extendsftf2
__extendsfdf2
__gnu_h2f_ieee
__gnu_f2h_ieee
__truncdfhf2
__truncxfhf2
__trunctfhf2
__truncdfsf2
__truncxfsf2
__trunctfsf2
__truncxfdf2
__trunctfdf2
__fixsfqi
__fixsfhi
__fixsfsi
__fixsfdi
__fixsfti
__fixdfqi
__fixdfhi
__fixdfsi
__fixdfdi
__fixdfti
__fixxfsi
__fixxfdi
__fixxfti
__fixtfsi
__fixtfdi
__fixtfti
__fixunssfqi
__fixunssfhi
__fixunssfsi
__fixunssfdi
__fixunssfti
__fixunsdfqi
__fixunsdfhi
__fixunsdfsi
__fixunsdfdi
__fixunsdfti
__fixunsxfsi
__fixunsxfdi
__fixunsxfti
__fixunstfsi
__fixunstfdi
__fixunstfti
__floatsisf
__floatsidf
__floatsixf
__floatsitf
__floatdisf
__floatdidf
__floatdixf
__floatditf
__floattisf
__floattidf
__floattixf
__floattitf
__floatunsisf
__floatunsidf
__floatunsixf
__floatunsitf
__floatundisf
__floatundidf
__floatundixf
__floatunditf
__floatuntisf
__floatuntidf
__floatuntixf
__floatuntitf
__eqsf2
__eqdf2
__eqtf2
__nesf2
__nedf2
__netf2
__gesf2
__gedf2
__getf2
__ltsf2
__ltdf2
__lttf2
__lesf2
__ledf2
__letf2
__gtsf2
__gtdf2
__gttf2
__unordsf2
__unorddf2
__unordtf2
_Unwind_Resume
__sync_val_compare_and_swap_1
__sync_val_compare_and_swap_2
__sync_val_compare_and_swap_4
__sync_val_compare_and_swap_8
__sync_val_compare_and_swap_16
__sync_lock_test_and_set_1
__sync_lock_test_and_set_2
__sync_lock_test_and_set_4
__sync_lock_test_and_set_8
__sync_lock_test_and_set_16
__sync_fetch_and_add_1
__sync_fetch_and_add_2
__sync_fetch_and_add_4
__sync_fetch_and_add_8
__sync_fetch_and_add_16
__sync_fetch_and_sub_1
__sync_fetch_and_sub_2
__sync_fetch_and_sub_4
__sync_fetch_and_sub_8
__sync_fetch_and_sub_16
__sync_fetch_and_and_1
__sync_fetch_and_and_2
__sync_fetch_and_and_4
__sync_fetch_and_and_8
__sync_fetch_and_and_16
__sync_fetch_and_or_1
__sync_fetch_and_or_2
__sync_fetch_and_or_4
__sync_fetch_and_or_8
__sync_fetch_and_or_16
__sync_fetch_and_xor_1
__sync_fetch_and_xor_2
__sync_fetch_and_xor_4
__sync_fetch_and_xor_8
__sync_fetch_and_xor_16
__sync_fetch_and_nand_1
__sync_fetch_and_nand_2
__sync_fetch_and_nand_4
__sync_fetch_and_nand_8
__sync_fetch_and_nand_16
__sync_fetch_and_max_1
__sync_fetch_and_max_2
__sync_fetch_and_max_4
__sync_fetch_and_max_8
__sync_fetch_and_max_16
__sync_fetch_and_umax_1
__sync_fetch_and_umax_2
__sync_fetch_and_umax_4
__sync_fetch_and_umax_8
__sync_fetch_and_umax_16
__sync_fetch_and_min_1
__sync_fetch_and_min_2
__sync_fetch_and_min_4
__sync_fetch_and_min_8
__sync_fetch_and_min_16
__sync_fetch_and_umin_1
__sync_fetch_and_umin_2
__sync_fetch_and_umin_4
__sync_fetch_and_umin_8
__sync_fetch_and_umin_16
sincosl
DW.ref.
We do not support this DWARF encoding yet!
.data.
.DW.stub
.rodata.str1.
.rodata.str2.
.rodata.str4.
.init_array.
.ctors.
.fini_array.
.dtors.
.init_array
.fini_array
Objective-C Image Info Version
Objective-C Garbage Collection
Objective-C GC Only
Objective-C Is Simulated
Objective-C Image Swift Version
Objective-C Image Info Section
Linker Options
Invalid section specifier '
L_OBJC_IMAGE_INFO
Global variable '
' has an invalid section specifier '
' section type or attributes does not match previous section specifier
/DEFAULTLIB:
.bss
.bss.
.gnu.linkonce.b.
.llvm.linkonce.b.
.sbss
.sbss.
.gnu.linkonce.sb.
.llvm.linkonce.sb.
.tdata
.tdata.
.gnu.linkonce.td.
.llvm.linkonce.td.
.tbss
.tbss.
.gnu.linkonce.tb.
.llvm.linkonce.tb.
ELF COMDATs only support SelectionKind::Any, '
' cannot be lowered.
.preinit_array
.text.
.rodata.
.data.rel.local.
.data.rel.
.data.rel.ro.local.
.data.rel.ro.
MachO doesn't support COMDATs, '
Associative COMDAT symbol '
' does not exist.
' is not a key for it's COMDAT.
.text
.tls$
.data
no-frame-pointer-elim-non-leaf
%noreg
%vreg
%physreg
:sub(
Unit~
BadUnit~
schedmodel
Use TargetSchedModel for latency lookup
scheditins
Use InstrItineraryData for latency lookup
twoaddr-reschedule
Coalesce copies by rescheduling (default=true)
Two-Address instruction pass
twoaddressinstruction
After two-address instruction pass
Remove unreachable blocks from the CFG
unreachableblockelim
Remove unreachable machine basic blocks
unreachable-mbb-elimination
********** REGISTER MAP **********
 -> fi#
Virtual Register Map
virtregmap
Virtual Register Rewriter
virtregrewriter
Aggressive Dead Code Elimination
adce
Constant Hoisting
consthoist
const
const_mat
Simple constant propagation
constprop
Value Propagation
correlated-propagation
Dead Instruction Elimination
Dead Code Elimination
Dead Store Elimination
early-cse
Early CSE
Flatten the CFG
flattencfg
enable-pre
enable-load-pre
max-recurse-depth
Max recurse depth (default = 1000)
.pre
.pre-phi
Global Value Numbering
verify-indvars
Verify the ScalarEvolution result after running indvars
liv-reduce
Reduce live induction variables.
Induction Variable Simplification
indvars
.int
indvar.conv
.wide
lftr.wideiv
exitcond
lftr.limit
jump-threading-threshold
Max block size to duplicate for jump threading
Jump Threading
jump-threading
.thr_comm
.thread
select.unfold
thread-pre-split
disable-licm-promotion
Disable memory promotion in LICM pass
Loop Invariant Code Motion
licm
.lcssa
.promoted
LoadCombine
.combined
combine.extract
.shift
.trunc
load-combine
Number of loads combined
Combine Adjacent Loads
Delete dead loops
loop-deletion
Recognize loop idioms
loop-idiom
memset_pattern16
.memset_pattern
tcphi
tcdec
Simplify instructions in loops
loop-instsimplify
max-reroll-increment
The maximum increment for loop rerolling
Reroll loops
loop-reroll
reroll
rotation-max-header-size
The default maximum header size for automatic loop rotation
Rotate Loops
loop-rotate
.lr.ph
enable-lsr-phielim
Enable LSR phi elimination
Loop Strength Reduction
loop-reduce
IV.S.
IV.S.next.
.termcond
scmp
lsr.chain
unroll-threshold
The cut-off point for automatic loop unrolling
unroll-count
Use this unroll count for all loops including those with unroll_count pragma values, for testing purposes
unroll-allow-partial
Allows loops to be partially unrolled until -unroll-threshold loop size is reached.
unroll-runtime
Unroll loops with run-time trip counts
pragma-unroll-threshold
Unrolled size limit for loops with an unroll(full) or unroll_count pragma.
Unroll loops
loop-unroll
Unable to fully unroll loop as directed by unroll(full) pragma because unrolled size is too large.
Unable to fully unroll loop as directed by unroll(full) pragma because loop has a runtime trip count.
Unable to unroll loop the number of times directed by unroll_count pragma because unrolled size is too large.
llvm.loop.unroll.disable
llvm.loop.unroll.full
llvm.loop.unroll.count
llvm.loop.unroll.
loop-unswitch-threshold
Max loop size to unswitch
Unswitch loops
loop-unswitch
us-unreachable
.us-lcssa
Lower atomic intrinsics to non-atomic form
loweratomic
memcpyopt
tmpcast
MemCpy Optimization
mlsm
Enable motion of merged load and store
.sink
MergedLoadStoreMotion
mldst-motion
Partially inline calls to library functions
partially-inline-libcalls
call.sqrt
Reassociate expressions
reassociate
.neg
and.ra
factor
Demote all values to stack slots
reg2mem
reg2mem alloca point
Sparse Conditional Constant Propagation
sccp
SCCP: Don't know how to handle: 
Interprocedural Sparse Conditional Constant Propagation
ipsccp
force-ssa-updater
sroa-random-shuffle-slices
sroa-strict-inbounds
SROA
sroa
.fca
.sroa.
insert
extract
Maximum number of uses of a partition
Maximum number of partitions per alloca
Scalar Replacement Of Aggregates
sample-profile-file
Profile file loaded by -sample-profile
sample-profile-max-propagate-iterations
Maximum number of iterations to go through when propagating sample block/edge weights through the CFG.
Sample Profile loader
sample-profile
Sample profile pass
^([^0-9].*):([0-9]+):([0-9]+)$
^([0-9]+)\.?([0-9]+)?: ([0-9]+)(.*)$
Expected 'mangled_name:NUM:NUM', found 
Expected 'NUM[.NUM]: NUM[ mangled_name:NUM]*', found 
No debug information found in function 
Scalar Replacement of Aggregates (DT)
scalarrepl
Scalar Replacement of Aggregates (SSAUp)
scalarrepl-ssa
sroa.load.elt
sroa.store.elt
srcval
dyn.offset
mask
scalarize-load-store
Allow the scalarizer pass to scalarize loads and store
Scalarize vector operations
scalarizer
llvm.mem.parallel_loop_access
.cast
.upto
disable-separate-const-offset-from-gep
Do not separate the constant offset from a GEP instruction
Split GEPs to a variadic base and a constant offset for better CSE
separate-const-offset-from-gep
uglygep
idxprom
Simplify the CFG
simplifycfg
merge
Code sinking
sink
Structurize the CFG
structurizecfg
Structurize control flow
.inv
entry.orig
Flow
Tail Call Elimination
tailcallelim
marked this readnone call a tail call candidate
marked this call a tail call candidate
transforming tail recursion to loop
tailrecurse
accumulator.tr
enable-double-float-shrink
Enable unsafe double to float shrinking for math lib calls
phitmp
.sum
Combine redundant instructions
instcombine
.cmp
__gnat_eh_personality
__gxx_personality_v0
__objc_personality_v0
.offs
addconv
diff.neg
.off
fold
.masked
and.shrunk
.demorgan
bitfield
notlhs
notrhs
umul_with_overflow
blendv
.lobit
.mask
sqrtfcall
.unshifted
sadd
sadd.result
sadd.overflow
uadd
uadd.overflow
umul
umul.value
.sub
storemerge
suba
subc
extract.t
not.
.Elt
.lhs
.rhs
.elt
no-discriminators
Disable generation of discriminator information.
Add DWARF path discriminators
add-discriminators
.split
lpad
lpad.phi
_crit_edge
split
Break critical edges in CFG
break-crit-edges
cstr
strlen
strnlen
strchr
strncmp
strncpy
__memcpy_chk
memchr
memcmp
putchar
chari
puts
fputc
fputs
__mempcpy_chk
__memmove_chk
__memset_chk
__strcpy_chk
__stpcpy_chk
__strncpy_chk
__stpncpy_chk
aggregate-extracted-args
Aggregate arguments to code-extracted functions
.ret
gep_
loadgep_
.out
.loc
structArg
targetBlock
gep_reload_
.reload
.exitStub
codeRepl
newFuncRoot
.reg2mem
enable-noalias-to-md-conversion
Convert noalias attributes to metadata during inlining.
savedstack
.exit
: argument 
.noexc
.lpad-body
eh.lpad-body
Assign names to anonymous instructions
instnamer
_udiv-special-cases
udiv-end
udiv-loop-exit
udiv-do-while
udiv-preheader
udiv-bb1
lcssa
Loop-Closed SSA Form Pass
cond
.preheader
.split-lp
loop-simplify
.loopexit
.nonloopexit
.outer
.backedge
Canonicalize natural loops
completely unrolled loop with 
 iterations
 with a breakout at trip 
 with 
 trips per branch
 with run-time trip count
unrolled loop by a factor of 
xtraiter
lcmp.mod
lcmp.overflow
lcmp.or
unr.cmp
un.tmp
.unr
.unr-lcssa
.unr1-lcssa
.unr2-lcssa
likely-branch-weight
Weight of the branch likely to be taken (default = 64)
unlikely-branch-weight
Weight of the branch unlikely to be taken (default = 4)
Lower 'expect' Intrinsics
lower-expect
Lower invoke and unwind, for unwindless code generators
lowerinvoke
Lower SwitchInst's to branches
lowerswitch
mem2reg
NewDefault
NodeBlock
Pivot
LeafBlock
SwitchLeaf
Promote Memory to Register
Assign new names to everything
metarenamer
quux
barney
snork
blam
hoge
wibble
wobble
widget
wombat
eggs
pluto
spam
struct.
phi-node-folding-threshold
Control the amount of phi node folding to perform (default = 1)
simplifycfg-dup-ret
Duplicate return instructions into unconditional branches
simplifycfg-sink-common
Sink common instructions down to the end block
simplifycfg-hoist-cond-stores
Hoist conditional stores if an unconditional store precedes
.old
or.cond
not.cond
and.cond
switch.edge
branch_weights
magicptr
infloop
switch.early.test
.critedge
brmerge
.mux
retval
switch.lookup
switch.tableidx
switch.hole_check
switch.maskindex
switch.shifted
switch.lobit
switch.table
switch.cast
switch.shiftamt
switch.downshift
switch.masked
switch.tableidx.zext
switch.gep
switch.load
Remove redundant instructions
instsimplify
error-reporting-is-cold
Treat error-reporting calls as cold
endptr
strrchr
strcmpload
simplify-libcalls
folded strlen(select) to select of constants
strlenfirst
strpbrk
strstr
lhsc
lhsv
rhsc
rhsv
chardiff
__sincospif_stret
__sincospi_stret
sincospi
sinpi
cospi
cttz
ispos
isdigittmp
isdigit
isascii
stderr
iprintf
siprintf
char
leninc
fiprintf
_chk
fabs
pow2
powrecip
UnifiedUnreachableBlock
UnifiedReturnBlock
UnifiedRetVal
Unify function exit nodes
mergereturn
CallGraph Root is: 
<<null function: 0x
Call graph node for function: '
Call graph node <<null function>>
>>  #uses=
  CS<
> calls 
function '
external node
No call graph has been built!
CallGraph Construction
basiccg
max-cg-scc-iterations
CallGraph Pass Manager
Call Graph SCC Pass Manager
cgscc-passmgr
Maximum CGSCCPassMgr iterations on one SCC
Printing <null> Function
View call graph
view-callgraph
Print call graph to 'dot' file
dot-callgraph
callgraph
Call graph
digraph "
label="
 [shape=record,
label="{
}"];
external node
.dot
Writing '
'...
  error opening file for writing!
Types in use by this module:
Find Used Types
print-used-types
Simple mod/ref analysis for globals
globalsmodref-aa
Inline Cost Analysis
inline-cost
Alias Analysis
count-aa-print-all-queries
count-aa-print-all-failed-queries
Count Alias Analysis Query Responses
count-aa
===== Alias Analysis Counter Report =====
  Analysis counted:
 Total Alias Queries Performed
no alias
may alias
partial alias
must alias
  Alias Analysis Counter Summary: 
 Total Mod/Ref Queries Performed
no mod/ref
mod/ref
  Mod/Ref Analysis Counter Summary: 
 responses (
No alias
May alias
Partial alias
Must alias
NoModRef
JustRef
JustMod
ModRef
:  Ptr: 
print-all-alias-modref-info
print-no-aliases
print-may-aliases
print-partial-aliases
print-must-aliases
print-no-modref
print-mod
print-ref
print-modref
evaluate-aa-metadata
Exhaustive Alias Analysis Precision Evaluator
aa-eval
===== Alias Analysis Evaluator Report =====
  Alias Analysis Evaluator Summary: No pointers!
 no alias responses 
 may alias responses 
 partial alias responses 
 must alias responses 
  Alias Analysis Evaluator Pointer Alias Summary: 
  Alias Analysis Mod/Ref Evaluator Summary: no mod/ref!
 Total ModRef Queries Performed
 no mod/ref responses 
 mod responses 
 ref responses 
 mod & ref responses 
  Alias Analysis Evaluator Mod/Ref Summary: 
Function: 
 pointers, 
 call sites
NoAlias
MayAlias
PartialAlias
MustAlias
Just Mod
Just Ref
Both ModRef
 <-> 
AA use debugger
debug-aa
  AliasSet[
must
 alias, 
No access 
Ref       
Mod       
Mod/Ref   
[volatile] 
 forwarding to 
Pointers: 
 Unknown instructions: 
Alias Set Tracker: 
 alias sets for 
 pointer values.
Alias Set Printer
print-alias-sets
Broken module found, compilation aborted!
Broken function found, compilation aborted!
Basic Alias Analysis (stateless AA impl)
basicaa
BlockFrequencyInfo::view is only available in debug builds on systems with Graphviz or gv!
Block Frequency Analysis
block-freq
---- Branch Probabilities ----
edge 
Branch Probability Analysis
branch-prob
View CFG of function
view-cfg
View CFG of function (with no function bodies)
view-cfg-only
Print CFG of function to 'dot' file
dot-cfg
Print CFG of function to 'dot' file (with no function bodies)
dot-cfg-only
cfg.
digraph unnamed {
CFG for '
' function
\l...
|<s64>truncated...
debug-cgscc-pass-manager
Print CGSCC pass management debugging information
Starting CGSCC pass manager run.
Running CGSCC pass: 
Finished CGSCC pass manager run.
costmodel-reduxcost
Recognize reduction patterns.
cost-model
Cost Model: Found an estimated cost of 
Cost Model: Unknown cost
 for instruction: 
acos
asin
atan
atan2
cosh
sinh
tanh
delinearize
Delinearization on function 
Inst:
In Loop with Header: 
AddRec: 
failed to delinearize
Base offset: 
ArrayDecl[UnknownSize]
 with elements of 
 bytes.
ArrayRef
da-delinearize
Try to delinearize array references.
 Empty
 Any
 Point is <
 Distance is 
*X + 
*Y = 
 Line is 
confused
consistent 
flow
output
anti
input
 splitable
Dependence Analysis
da analyze - 
da analyze - split level = 
, iteration = 
none!
View dominance tree of function
view-dom
View dominance tree of function (with no function bodies)
view-dom-only
View postdominance tree of function
view-postdom
View postdominance tree of function (with no function bodies)
view-postdom-only
Print dominance tree of function to 'dot' file
dot-dom
Print dominance tree of function to 'dot' file (with no function bodies)
dot-dom-only
Print postdominance tree of function to 'dot' file
dot-postdom
Print postdominance tree of function to 'dot' file (with no function bodies)
dot-postdom-only
 for '
Dominator tree
Post dominance root node
domonly
postdom
Post dominator tree
postdomonly
Dominance Frontier Construction
IV Users for loop 
 with backedge-taken count 
 (post-inc with loop 
 in  
Printing <null> User
Induction Variable Users
Counts the various types of Instructions
instcount
Number of GetElementPtr insts
Number of Load insts
Number of Store insts
Number of Call insts
Number of Invoke insts
Number of Alloca insts
-------------------------------------------------------------
Interval Contents:
Interval Predecessors:
Interval Successors:
Interval Partition Construction
intervals
Jump-Instruction Table Info
jump-instr-table-info
Printing the call graph for module: 
  Call edges in function: 
    -> 
  SCC with 
 functions:
    
undefined
overdefined
notconstant<
constantrange<
constant<
Lazy Value Information Analysis
lazy-value-info
LibCall Alias Analysis
libcall-aa
Statically lint-checks LLVM IR
lint
Unusual: Unnamed function with non-local linkage
Unusual: Return statement in function with noreturn attribute
Unusual: Returning alloca value
Undefined behavior: indirectbr with no destinations
Undefined behavior: Null pointer dereference
Undefined behavior: Undef pointer dereference
Unusual: All-ones pointer dereference
Unusual: Address one pointer dereference
Undefined behavior: Write to read-only memory
Undefined behavior: Write to text section
Unusual: Load from function body
Undefined behavior: Load from block address
Undefined behavior: Call to block address
Undefined behavior: Branch to non-blockaddress
Undefined behavior: Buffer overflow
Undefined behavior: Memory reference address is misaligned
Undefined behavior: Caller and callee calling convention differ
Undefined behavior: Call argument count mismatches callee argument count
Undefined behavior: Call return type mismatches callee return type
Undefined behavior: Call argument type mismatches callee parameter type
Unusual: noalias argument aliases another argument
Undefined behavior: Call with "tail" keyword references alloca
Undefined behavior: memcpy source and destination overlap
Undefined behavior: va_start called in a non-varargs function
Unusual: unreachable immediately preceded by instruction without side effects
Undefined result: sub(undef, undef)
Undefined behavior: Division by zero
Undefined result: Shift count out of range
Undefined result: xor(undef, undef)
Pessimization: Static alloca outside of entry block
Undefined result: extractelement index out of range
Undefined result: insertelement index out of range
verify-loop-info
Verify loop info (time consuming)
llvm.loop
Natural Loop Information
<deleted>
Loop Pass Manager
Printing <null> block
Loop Pass Manager
Print MemDeps of function
print-memdeps
 in block 
 from: 
Clobber
NonFuncLocal
Memory Dependence Analysis
Decodes module-level debug info
module-debuginfo
Compile Unit: 
Subprogram: 
GlobalVariable: 
Type: 
No Alias Analysis (always returns 'may' alias)
no-aa
PHITransAddr contains extra instructions:
  InstInput #
 is 
.phi.trans.insert
Instruction in PHITransAddr is not phi-translatable:
Post-Dominator Tree Construction
postdomtree
verify-region-info
Verify region info (time consuming)
print-region-style
style of printing regions
print no details
print regions in detail with block_iterator
print regions in detail with element_iterator
Region Pass Manager
Printing <null> Block
Region Pass Manager
only-simple-regions
Show only simple regions in the graphviz viewer
Print regions of function to 'dot' file
dot-regions
View regions of function
view-regions
View regions of function (with no function bodies)
view-regions-only
Print regions of function to 'dot' file (with no function bodies)
dot-regions-only
Region Graph
Not implemented
constraint=false
colorscheme = "paired12"
subgraph cluster_
label = "";
style = filled;
color = 
style = solid;
Node
regonly
scalar-evolution-max-iterations
Maximum number of iterations SCEV will symbolically execute a constant derived loop
verify-scev
Verify ScalarEvolution's backedge taken counts (slow)
(trunc 
 to 
(zext 
(sext 
nuw><
nsw><
nw><
 umax 
 smax 
<nuw>
<nsw>
 /u 
sizeof(
alignof(
offsetof(
***COULDNOTCOMPUTE***
Classifying expressions for: 
  -->  
Exits: 
<<Unknown>>
Determining loop execution counts for: 
SCEVValidator: SCEV for loop '
' changed from '
Scalar Evolution Analysis
Loop 
<multiple exits> 
backedge-taken count is 
Unpredictable backedge-taken count. 
Loop 
max backedge-taken count is 
Unpredictable max backedge-taken count. 
<nw>
ScalarEvolution-based Alias Analysis
scev-aa
scevgep
.iv.next
indvar
indvar.next
smax
untracked
unknown lattice value
FUNCTION: 
INFEASIBLE: 
; anon bb
Target Information
No target information
notti
fabsf
fabsl
ffsl
labs
llabs
; Trace from function 
, blocks:
; Trace parent function: 
enable-tbaa
vtable pointer
Type-Based Alias Analysis
tbaa
enable-scoped-noalias
Scoped NoAlias Alias Analysis
scoped-noalias
_IO_getc
_IO_putc
_ZdaPv
_ZdaPvRKSt9nothrow_t
_ZdlPv
_ZdlPvRKSt9nothrow_t
_Znaj
_ZnajRKSt9nothrow_t
_Znam
_ZnamRKSt9nothrow_t
_Znwj
_ZnwjRKSt9nothrow_t
_Znwm
_ZnwmRKSt9nothrow_t
__cospi
__cospif
__cxa_atexit
__cxa_guard_abort
__cxa_guard_acquire
__cxa_guard_release
__isoc99_scanf
__isoc99_sscanf
__sinpi
__sinpif
__sqrt_finite
__sqrtf_finite
__sqrtl_finite
__strdup
__strndup
__strtok_r
access
acosf
acosh
acoshf
acoshl
acosl
asinf
asinh
asinhf
asinhl
asinl
atan2f
atan2l
atanf
atanh
atanhf
atanhl
atanl
atof
atoi
atol
atoll
bcmp
bcopy
calloc
cbrt
cbrtf
cbrtl
chmod
chown
clearerr
closedir
coshf
coshl
ctermid
exp10
exp10f
exp10l
expm1
expm1f
expm1l
fclose
fdopen
feof
ferror
fflush
ffsll
fgetc
fgetpos
fgets
fileno
flockfile
fmax
fmaxf
fmaxl
fmin
fminf
fminl
fopen
fopen64
fprintf
fread
free
frexp
frexpf
frexpl
fscanf
fseek
fseeko
fseeko64
fsetpos
fstat
fstat64
fstatvfs
fstatvfs64
ftell
ftello
ftello64
ftrylockfile
funlockfile
fwrite
getc
getc_unlocked
getchar
getenv
getitimer
getlogin_r
getpwnam
gets
gettimeofday
htonl
htons
lchown
ldexp
ldexpf
ldexpl
log1p
log1pf
log1pl
logb
logbf
logbl
lstat
lstat64
malloc
memalign
memccpy
memrchr
mkdir
mktime
modf
modff
modfl
ntohl
ntohs
open
open64
opendir
pclose
perror
popen
posix_memalign
pread
printf
putc
pwrite
qsort
read
readlink
realloc
reallocf
realpath
remove
rename
rewind
rmdir
scanf
setbuf
setitimer
setvbuf
sinhf
sinhl
snprintf
sprintf
sscanf
stat
stat64
statvfs
statvfs64
stpcpy
stpncpy
strcasecmp
strcat
strcmp
strcoll
strcpy
strcspn
strdup
strncasecmp
strncat
strndup
strspn
strtod
strtof
strtok
strtok_r
strtol
strtold
strtoll
strtoul
strtoull
strxfrm
system
tanf
tanhf
tanhl
tanl
times
tmpfile
tmpfile64
toascii
uname
ungetc
unlink
unsetenv
utime
utimes
valloc
vfprintf
vfscanf
vprintf
vscanf
vsnprintf
vsprintf
vsscanf
write
Target Library Information
targetlibinfo
fwrite$UNIX2003
fputs$UNIX2003
_copysign
__exp10
__exp10f
no-frame-pointer-elim
less-precise-fpmad
unsafe-fp-math
no-infs-fp-math
use-soft-float
disable-tail-calls
No DataLayout in TargetMachine
TargetMachine can't emit a file of this type
misched-bench
Migrate from the target's default SD scheduler to MI scheduler
mc-x86-disable-arith-relaxation
Disable relaxation of arithmetic instruction for X86
x86_64h
i386
i486
i586
pentium
pentium-mmx
i686
k6-2
k6-3
geode
winchip-c6
winchip2
c3-2
reloc_riprel_4byte
reloc_riprel_4byte_movq_load
reloc_signed_4byte
reloc_global_offset_table
unexpected instruction to relax: 
GR16
GR16_NOREX
VK16
VK16WM
VK1WM
VK2WM
VK4WM
VK8WM
GR16_ABCD
FPCCR
GR32
GR32_NOAX
GR32_NOSP
GR32_NOAX_and_GR32_NOSP
GR32_NOREX
VK32
GR32_NOAX_and_GR32_NOREX
GR32_NOREX_NOSP
VK32WM
GR32_NOAX_and_GR32_NOREX_NOSP
GR32_ABCD
GR32_ABCD_and_GR32_NOAX
GR32_TC
GR32_AD
GR32_NOAX_and_GR32_TC
GR32_AD_and_GR32_NOAX
RFP64
FR64X
FR64
GR64_with_sub_8bit
GR64_NOSP
GR64_with_sub_32bit_in_GR32_NOAX
GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOSP
GR64_TC
GR64_NOSP_and_GR64_TC
GR64_with_sub_16bit_in_GR16_NOREX
VK64
GR64_NOREX_NOSP
GR64_TC_and_GR64_with_sub_32bit_in_GR32_NOAX
GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOREX
VK64WM
GR64_NOREX_and_GR64_TC
GR64_TCW64
GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOREX_NOSP
GR64_NOREX_NOSP_and_GR64_TC
GR64_TCW64_and_GR64_with_sub_32bit_in_GR32_NOAX
GR64_ABCD
GR64_TC_and_GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOREX
GR64_with_sub_32bit_in_GR32_ABCD_and_GR32_NOAX
GR64_with_sub_32bit_in_GR32_TC
GR64_with_sub_32bit_in_GR32_AD
GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_TC
GR64_with_sub_32bit_in_GR32_AD_and_GR32_NOAX
RFP80
VR128X
VR128
VR256X
VR256
VR512
VR512_with_sub_xmm_in_FR32
16bit-mode
16-bit mode (i8086)
32bit-mode
32-bit mode (80386)
3dnow
Enable 3DNow! instructions
3dnowa
Enable 3DNow! Athlon instructions
64bit
Support 64-bit instructions
64bit-mode
64-bit mode (x86_64)
Support ADX instructions
Enable AES instructions
atom
Intel Atom processors
Enable AVX instructions
avx2
Enable AVX2 instructions
avx512bw
Enable AVX-512 Byte and Word Instructions
avx512cd
Enable AVX-512 Conflict Detection Instructions
avx512dq
Enable AVX-512 Doubleword and Quadword Instructions
avx512er
Enable AVX-512 Exponential and Reciprocal Instructions
avx512f
Enable AVX-512 instructions
avx512pf
Enable AVX-512 PreFetch Instructions
avx512vl
Enable AVX-512 Vector Length eXtensions
Support BMI instructions
bmi2
Support BMI2 instructions
call-reg-indirect
Call register indirect
cmov
Enable conditional move instructions
cx16
64-bit with cmpxchg16b
f16c
Support 16-bit floating point conversion instructions
fast-unaligned-mem
Fast unaligned memory access
Enable three-operand fused multiple-add
fma4
Enable four-operand fused multiple-add
fsgsbase
Support FS/GS Base instructions
Support HLE
idiv-to-divb
Use small divide for positive values less than 256
lea-sp
Use LEA for adjusting the stack pointer
lea-uses-ag
LEA instruction needs inputs at AG stage
lzcnt
Support LZCNT instruction
Enable MMX instructions
movbe
Support MOVBE instruction
pad-short-functions
Pad short functions
pclmul
Enable packed carry-less multiplication instructions
popcnt
Support POPCNT instruction
prfchw
Support PRFCHW instructions
rdrnd
Support RDRAND instruction
rdseed
Support RDSEED instruction
Support RTM instructions
Support SGX instructions
Enable SHA instructions
Intel Silvermont processors
slow-bt-mem
Bit testing of memory is slow
slow-incdec
INC and DEC instructions are slower than ADD and SUB
slow-lea
LEA instruction with certain arguments is slow
slow-shld
SHLD instruction is slow
Enable SSE instructions
sse2
Enable SSE2 instructions
sse3
Enable SSE3 instructions
sse4.1
Enable SSE 4.1 instructions
sse4.2
Enable SSE 4.2 instructions
sse4a
Support SSE 4a instructions
ssse3
Enable SSSE3 instructions
Enable TBM instructions
vector-unaligned-mem
Allow unaligned memory operands on vector/SIMD instructions
Enable XOP instructions
amdfam10
Select the amdfam10 processor
athlon
Select the athlon processor
athlon-4
Select the athlon-4 processor
athlon-fx
Select the athlon-fx processor
athlon-mp
Select the athlon-mp processor
athlon-tbird
Select the athlon-tbird processor
athlon-xp
Select the athlon-xp processor
athlon64
Select the athlon64 processor
athlon64-sse3
Select the athlon64-sse3 processor
Select the atom processor
bdver1
Select the bdver1 processor
bdver2
Select the bdver2 processor
bdver3
Select the bdver3 processor
bdver4
Select the bdver4 processor
btver1
Select the btver1 processor
btver2
Select the btver2 processor
Select the c3 processor
Select the c3-2 processor
core-avx-i
Select the core-avx-i processor
core-avx2
Select the core-avx2 processor
core2
Select the core2 processor
corei7
Select the corei7 processor
corei7-avx
Select the corei7-avx processor
Select the geode processor
Select the i386 processor
Select the i486 processor
Select the i586 processor
Select the i686 processor
Select the k6 processor
Select the k6-2 processor
Select the k6-3 processor
Select the k8 processor
k8-sse3
Select the k8-sse3 processor
Select the knl processor
nehalem
Select the nehalem processor
nocona
Select the nocona processor
opteron
Select the opteron processor
opteron-sse3
Select the opteron-sse3 processor
penryn
Select the penryn processor
Select the pentium processor
pentium-m
Select the pentium-m processor
Select the pentium-mmx processor
pentium2
Select the pentium2 processor
pentium3
Select the pentium3 processor
pentium3m
Select the pentium3m processor
pentium4
Select the pentium4 processor
pentium4m
Select the pentium4m processor
pentiumpro
Select the pentiumpro processor
prescott
Select the prescott processor
Select the skx processor
Select the slm processor
westmere
Select the westmere processor
Select the winchip-c6 processor
Select the winchip2 processor
x86-64
Select the x86-64 processor
yonah
Select the yonah processor
+64bit-mode,-32bit-mode,-16bit-mode
-64bit-mode,+32bit-mode,-16bit-mode
-64bit-mode,-32bit-mode,+16bit-mode
x86-asm-syntax
Choose style of code to emit from X86 backend:
Emit AT&T-style assembly
intel
Emit Intel-style assembly
mark-data-regions
Mark code section jump table data regions.
.note.GNU-stack
FORM: 
unsupported relocation with subtraction expression
unsupported relocation of undefined symbol '
unsupported symbol modifier in relocation
unsupported symbol modifier in branch relocation
TLVP symbol modifier should have been rip-rel
32-bit absolute addressing is not supported in 64-bit mode
0x%x
Section too large, can't encode r_address (
) into 24 bits of scattered relocation entry.
Expected X86_64_RELOC_UNSIGNED after X86_64_RELOC_SUBTRACTOR.
!<arch>
__.SYMDEF
__.SYMDEF SORTED
COFF-i386
COFF-x86-64
COFF-ARM
COFF-<unknown arch>
getRelocationAddress not implemented in COFFObjectFile
IMAGE_REL_AMD64_ABSOLUTE
IMAGE_REL_AMD64_ADDR64
IMAGE_REL_AMD64_ADDR32
IMAGE_REL_AMD64_ADDR32NB
IMAGE_REL_AMD64_REL32
IMAGE_REL_AMD64_REL32_1
IMAGE_REL_AMD64_REL32_2
IMAGE_REL_AMD64_REL32_3
IMAGE_REL_AMD64_REL32_4
IMAGE_REL_AMD64_REL32_5
IMAGE_REL_AMD64_SECTION
IMAGE_REL_AMD64_SECREL
IMAGE_REL_AMD64_SECREL7
IMAGE_REL_AMD64_TOKEN
IMAGE_REL_AMD64_SREL32
IMAGE_REL_AMD64_PAIR
IMAGE_REL_AMD64_SSPAN32
IMAGE_REL_ARM_ABSOLUTE
IMAGE_REL_ARM_ADDR32
IMAGE_REL_ARM_ADDR32NB
IMAGE_REL_ARM_BRANCH24
IMAGE_REL_ARM_BRANCH11
IMAGE_REL_ARM_TOKEN
IMAGE_REL_ARM_BLX24
IMAGE_REL_ARM_BLX11
IMAGE_REL_ARM_SECTION
IMAGE_REL_ARM_SECREL
IMAGE_REL_ARM_MOV32A
IMAGE_REL_ARM_MOV32T
IMAGE_REL_ARM_BRANCH20T
IMAGE_REL_ARM_BRANCH24T
IMAGE_REL_ARM_BLX23T
IMAGE_REL_I386_ABSOLUTE
IMAGE_REL_I386_DIR16
IMAGE_REL_I386_REL16
IMAGE_REL_I386_DIR32
IMAGE_REL_I386_DIR32NB
IMAGE_REL_I386_SEG12
IMAGE_REL_I386_SECTION
IMAGE_REL_I386_SECREL
IMAGE_REL_I386_TOKEN
IMAGE_REL_I386_SECREL7
IMAGE_REL_I386_REL32
IMAGE_COMDAT_SELECT_NODUPLICATES
IMAGE_COMDAT_SELECT_ANY
IMAGE_COMDAT_SELECT_SAME_SIZE
IMAGE_COMDAT_SELECT_EXACT_MATCH
IMAGE_COMDAT_SELECT_ASSOCIATIVE
IMAGE_COMDAT_SELECT_LARGEST
IMAGE_COMDAT_SELECT_NEWEST
IMAGE_WEAK_EXTERN_SEARCH_NOLIBRARY
IMAGE_WEAK_EXTERN_SEARCH_LIBRARY
IMAGE_WEAK_EXTERN_SEARCH_ALIAS
IMAGE_AUX_SYMBOL_TYPE_TOKEN_DEF
IMAGE_FILE_MACHINE_UNKNOWN
IMAGE_FILE_MACHINE_AM33
IMAGE_FILE_MACHINE_AMD64
IMAGE_FILE_MACHINE_ARM
IMAGE_FILE_MACHINE_ARMNT
IMAGE_FILE_MACHINE_EBC
IMAGE_FILE_MACHINE_I386
IMAGE_FILE_MACHINE_IA64
IMAGE_FILE_MACHINE_M32R
IMAGE_FILE_MACHINE_MIPS16
IMAGE_FILE_MACHINE_MIPSFPU
IMAGE_FILE_MACHINE_MIPSFPU16
IMAGE_FILE_MACHINE_POWERPC
IMAGE_FILE_MACHINE_POWERPCFP
IMAGE_FILE_MACHINE_R4000
IMAGE_FILE_MACHINE_SH3
IMAGE_FILE_MACHINE_SH3DSP
IMAGE_FILE_MACHINE_SH4
IMAGE_FILE_MACHINE_SH5
IMAGE_FILE_MACHINE_THUMB
IMAGE_FILE_MACHINE_WCEMIPSV2
IMAGE_SYM_TYPE_NULL
IMAGE_SYM_TYPE_VOID
IMAGE_SYM_TYPE_CHAR
IMAGE_SYM_TYPE_SHORT
IMAGE_SYM_TYPE_INT
IMAGE_SYM_TYPE_LONG
IMAGE_SYM_TYPE_FLOAT
IMAGE_SYM_TYPE_DOUBLE
IMAGE_SYM_TYPE_STRUCT
IMAGE_SYM_TYPE_UNION
IMAGE_SYM_TYPE_ENUM
IMAGE_SYM_TYPE_MOE
IMAGE_SYM_TYPE_BYTE
IMAGE_SYM_TYPE_WORD
IMAGE_SYM_TYPE_UINT
IMAGE_SYM_TYPE_DWORD
IMAGE_SYM_CLASS_END_OF_FUNCTION
IMAGE_SYM_CLASS_NULL
IMAGE_SYM_CLASS_AUTOMATIC
IMAGE_SYM_CLASS_EXTERNAL
IMAGE_SYM_CLASS_STATIC
IMAGE_SYM_CLASS_REGISTER
IMAGE_SYM_CLASS_EXTERNAL_DEF
IMAGE_SYM_CLASS_LABEL
IMAGE_SYM_CLASS_UNDEFINED_LABEL
IMAGE_SYM_CLASS_MEMBER_OF_STRUCT
IMAGE_SYM_CLASS_ARGUMENT
IMAGE_SYM_CLASS_STRUCT_TAG
IMAGE_SYM_CLASS_MEMBER_OF_UNION
IMAGE_SYM_CLASS_UNION_TAG
IMAGE_SYM_CLASS_TYPE_DEFINITION
IMAGE_SYM_CLASS_UNDEFINED_STATIC
IMAGE_SYM_CLASS_ENUM_TAG
IMAGE_SYM_CLASS_MEMBER_OF_ENUM
IMAGE_SYM_CLASS_REGISTER_PARAM
IMAGE_SYM_CLASS_BIT_FIELD
IMAGE_SYM_CLASS_BLOCK
IMAGE_SYM_CLASS_FUNCTION
IMAGE_SYM_CLASS_END_OF_STRUCT
IMAGE_SYM_CLASS_FILE
IMAGE_SYM_CLASS_SECTION
IMAGE_SYM_CLASS_WEAK_EXTERNAL
IMAGE_SYM_CLASS_CLR_TOKEN
IMAGE_SYM_DTYPE_NULL
IMAGE_SYM_DTYPE_POINTER
IMAGE_SYM_DTYPE_FUNCTION
IMAGE_SYM_DTYPE_ARRAY
IMAGE_FILE_RELOCS_STRIPPED
IMAGE_FILE_EXECUTABLE_IMAGE
IMAGE_FILE_LINE_NUMS_STRIPPED
IMAGE_FILE_LOCAL_SYMS_STRIPPED
IMAGE_FILE_AGGRESSIVE_WS_TRIM
IMAGE_FILE_LARGE_ADDRESS_AWARE
IMAGE_FILE_BYTES_REVERSED_LO
IMAGE_FILE_32BIT_MACHINE
IMAGE_FILE_DEBUG_STRIPPED
IMAGE_FILE_REMOVABLE_RUN_FROM_SWAP
IMAGE_FILE_NET_RUN_FROM_SWAP
IMAGE_FILE_SYSTEM
IMAGE_FILE_DLL
IMAGE_FILE_UP_SYSTEM_ONLY
IMAGE_FILE_BYTES_REVERSED_HI
IMAGE_SCN_TYPE_NO_PAD
IMAGE_SCN_CNT_CODE
IMAGE_SCN_CNT_INITIALIZED_DATA
IMAGE_SCN_CNT_UNINITIALIZED_DATA
IMAGE_SCN_LNK_OTHER
IMAGE_SCN_LNK_INFO
IMAGE_SCN_LNK_REMOVE
IMAGE_SCN_LNK_COMDAT
IMAGE_SCN_GPREL
IMAGE_SCN_MEM_PURGEABLE
IMAGE_SCN_MEM_16BIT
IMAGE_SCN_MEM_LOCKED
IMAGE_SCN_MEM_PRELOAD
IMAGE_SCN_LNK_NRELOC_OVFL
IMAGE_SCN_MEM_DISCARDABLE
IMAGE_SCN_MEM_NOT_CACHED
IMAGE_SCN_MEM_NOT_PAGED
IMAGE_SCN_MEM_SHARED
IMAGE_SCN_MEM_EXECUTE
IMAGE_SCN_MEM_READ
IMAGE_SCN_MEM_WRITE
VirtualAddress
SymbolName
Type
Machine
Characteristics
TagIndex
TotalSize
PointerToLinenumber
PointerToNextFunction
Linenumber
Length
NumberOfRelocations
NumberOfLinenumbers
CheckSum
Number
Selection
AuxType
SymbolTableIndex
Name
Value
SectionNumber
SimpleType
ComplexType
StorageClass
FunctionDefinition
bfAndefSymbol
WeakExternal
File
SectionDefinition
CLRToken
Alignment
SectionData
Relocations
header
sections
symbols
Null
NULL
True
TRUE
False
FALSE
.nan
.NaN
.NAN
.inf
.Inf
.INF
^(\.[0-9]+|[0-9]+(\.[0-9]*)?)([eE][-+]?[0-9]+)?$
R_X86_64_NONE
R_X86_64_64
R_X86_64_PC32
R_X86_64_GOT32
R_X86_64_PLT32
R_X86_64_COPY
R_X86_64_GLOB_DAT
R_X86_64_JUMP_SLOT
R_X86_64_RELATIVE
R_X86_64_GOTPCREL
R_X86_64_32
R_X86_64_32S
R_X86_64_16
R_X86_64_PC16
R_X86_64_8
R_X86_64_PC8
R_X86_64_DTPMOD64
R_X86_64_DTPOFF64
R_X86_64_TPOFF64
R_X86_64_TLSGD
R_X86_64_TLSLD
R_X86_64_DTPOFF32
R_X86_64_GOTTPOFF
R_X86_64_TPOFF32
R_X86_64_PC64
R_X86_64_GOTOFF64
R_X86_64_GOTPC32
R_X86_64_GOT64
R_X86_64_GOTPCREL64
R_X86_64_GOTPC64
R_X86_64_GOTPLT64
R_X86_64_PLTOFF64
R_X86_64_SIZE32
R_X86_64_SIZE64
R_X86_64_GOTPC32_TLSDESC
R_X86_64_TLSDESC_CALL
R_X86_64_TLSDESC
R_X86_64_IRELATIVE
R_386_NONE
R_386_32
R_386_PC32
R_386_GOT32
R_386_PLT32
R_386_COPY
R_386_GLOB_DAT
R_386_JUMP_SLOT
R_386_RELATIVE
R_386_GOTOFF
R_386_GOTPC
R_386_32PLT
R_386_TLS_TPOFF
R_386_TLS_IE
R_386_TLS_GOTIE
R_386_TLS_LE
R_386_TLS_GD
R_386_TLS_LDM
R_386_16
R_386_PC16
R_386_8
R_386_PC8
R_386_TLS_GD_32
R_386_TLS_GD_PUSH
R_386_TLS_GD_CALL
R_386_TLS_GD_POP
R_386_TLS_LDM_32
R_386_TLS_LDM_PUSH
R_386_TLS_LDM_CALL
R_386_TLS_LDM_POP
R_386_TLS_LDO_32
R_386_TLS_IE_32
R_386_TLS_LE_32
R_386_TLS_DTPMOD32
R_386_TLS_DTPOFF32
R_386_TLS_TPOFF32
R_386_TLS_GOTDESC
R_386_TLS_DESC_CALL
R_386_TLS_DESC
R_386_IRELATIVE
R_MIPS_NONE
R_MIPS_16
R_MIPS_32
R_MIPS_REL32
R_MIPS_26
R_MIPS_HI16
R_MIPS_LO16
R_MIPS_GPREL16
R_MIPS_LITERAL
R_MIPS_GOT16
R_MIPS_PC16
R_MIPS_CALL16
R_MIPS_GPREL32
R_MIPS_SHIFT5
R_MIPS_SHIFT6
R_MIPS_64
R_MIPS_GOT_DISP
R_MIPS_GOT_PAGE
R_MIPS_GOT_OFST
R_MIPS_GOT_HI16
R_MIPS_GOT_LO16
R_MIPS_SUB
R_MIPS_INSERT_A
R_MIPS_INSERT_B
R_MIPS_DELETE
R_MIPS_HIGHER
R_MIPS_HIGHEST
R_MIPS_CALL_HI16
R_MIPS_CALL_LO16
R_MIPS_SCN_DISP
R_MIPS_REL16
R_MIPS_ADD_IMMEDIATE
R_MIPS_PJUMP
R_MIPS_RELGOT
R_MIPS_JALR
R_MIPS_TLS_DTPMOD32
R_MIPS_TLS_DTPREL32
R_MIPS_TLS_DTPMOD64
R_MIPS_TLS_DTPREL64
R_MIPS_TLS_GD
R_MIPS_TLS_LDM
R_MIPS_TLS_DTPREL_HI16
R_MIPS_TLS_DTPREL_LO16
R_MIPS_TLS_GOTTPREL
R_MIPS_TLS_TPREL32
R_MIPS_TLS_TPREL64
R_MIPS_TLS_TPREL_HI16
R_MIPS_TLS_TPREL_LO16
R_MIPS_GLOB_DAT
R_MIPS_PC21_S2
R_MIPS_PC26_S2
R_MIPS_PC18_S3
R_MIPS_PC19_S2
R_MIPS_PCHI16
R_MIPS_PCLO16
R_MIPS16_GOT16
R_MIPS16_HI16
R_MIPS16_LO16
R_MIPS_COPY
R_MIPS_JUMP_SLOT
R_MICROMIPS_26_S1
R_MICROMIPS_HI16
R_MICROMIPS_LO16
R_MICROMIPS_GOT16
R_MICROMIPS_PC16_S1
R_MICROMIPS_CALL16
R_MICROMIPS_GOT_DISP
R_MICROMIPS_GOT_PAGE
R_MICROMIPS_GOT_OFST
R_MICROMIPS_TLS_GD
R_MICROMIPS_TLS_LDM
R_MICROMIPS_TLS_DTPREL_HI16
R_MICROMIPS_TLS_DTPREL_LO16
R_MICROMIPS_TLS_TPREL_HI16
R_MICROMIPS_TLS_TPREL_LO16
R_MIPS_NUM
R_MIPS_PC32
R_AARCH64_NONE
R_AARCH64_ABS64
R_AARCH64_ABS32
R_AARCH64_ABS16
R_AARCH64_PREL64
R_AARCH64_PREL32
R_AARCH64_PREL16
R_AARCH64_MOVW_UABS_G0
R_AARCH64_MOVW_UABS_G0_NC
R_AARCH64_MOVW_UABS_G1
R_AARCH64_MOVW_UABS_G1_NC
R_AARCH64_MOVW_UABS_G2
R_AARCH64_MOVW_UABS_G2_NC
R_AARCH64_MOVW_UABS_G3
R_AARCH64_MOVW_SABS_G0
R_AARCH64_MOVW_SABS_G1
R_AARCH64_MOVW_SABS_G2
R_AARCH64_LD_PREL_LO19
R_AARCH64_ADR_PREL_LO21
R_AARCH64_ADR_PREL_PG_HI21
R_AARCH64_ADD_ABS_LO12_NC
R_AARCH64_LDST8_ABS_LO12_NC
R_AARCH64_TSTBR14
R_AARCH64_CONDBR19
R_AARCH64_JUMP26
R_AARCH64_CALL26
R_AARCH64_LDST16_ABS_LO12_NC
R_AARCH64_LDST32_ABS_LO12_NC
R_AARCH64_LDST64_ABS_LO12_NC
R_AARCH64_LDST128_ABS_LO12_NC
R_AARCH64_GOTREL64
R_AARCH64_GOTREL32
R_AARCH64_ADR_GOT_PAGE
R_AARCH64_LD64_GOT_LO12_NC
R_AARCH64_TLSLD_MOVW_DTPREL_G2
R_AARCH64_TLSLD_MOVW_DTPREL_G1
R_AARCH64_TLSLD_MOVW_DTPREL_G1_NC
R_AARCH64_TLSLD_MOVW_DTPREL_G0
R_AARCH64_TLSLD_MOVW_DTPREL_G0_NC
R_AARCH64_TLSLD_ADD_DTPREL_HI12
R_AARCH64_TLSLD_ADD_DTPREL_LO12
R_AARCH64_TLSLD_ADD_DTPREL_LO12_NC
R_AARCH64_TLSLD_LDST8_DTPREL_LO12
R_AARCH64_TLSLD_LDST8_DTPREL_LO12_NC
R_AARCH64_TLSLD_LDST16_DTPREL_LO12
R_AARCH64_TLSLD_LDST16_DTPREL_LO12_NC
R_AARCH64_TLSLD_LDST32_DTPREL_LO12
R_AARCH64_TLSLD_LDST32_DTPREL_LO12_NC
R_AARCH64_TLSLD_LDST64_DTPREL_LO12
R_AARCH64_TLSLD_LDST64_DTPREL_LO12_NC
R_AARCH64_TLSIE_MOVW_GOTTPREL_G1
R_AARCH64_TLSIE_MOVW_GOTTPREL_G0_NC
R_AARCH64_TLSIE_ADR_GOTTPREL_PAGE21
R_AARCH64_TLSIE_LD64_GOTTPREL_LO12_NC
R_AARCH64_TLSIE_LD_GOTTPREL_PREL19
R_AARCH64_TLSLE_MOVW_TPREL_G2
R_AARCH64_TLSLE_MOVW_TPREL_G1
R_AARCH64_TLSLE_MOVW_TPREL_G1_NC
R_AARCH64_TLSLE_MOVW_TPREL_G0
R_AARCH64_TLSLE_MOVW_TPREL_G0_NC
R_AARCH64_TLSLE_ADD_TPREL_HI12
R_AARCH64_TLSLE_ADD_TPREL_LO12
R_AARCH64_TLSLE_ADD_TPREL_LO12_NC
R_AARCH64_TLSLE_LDST8_TPREL_LO12
R_AARCH64_TLSLE_LDST8_TPREL_LO12_NC
R_AARCH64_TLSLE_LDST16_TPREL_LO12
R_AARCH64_TLSLE_LDST16_TPREL_LO12_NC
R_AARCH64_TLSLE_LDST32_TPREL_LO12
R_AARCH64_TLSLE_LDST32_TPREL_LO12_NC
R_AARCH64_TLSLE_LDST64_TPREL_LO12
R_AARCH64_TLSLE_LDST64_TPREL_LO12_NC
R_AARCH64_TLSDESC_ADR_PAGE
R_AARCH64_TLSDESC_LD64_LO12_NC
R_AARCH64_TLSDESC_ADD_LO12_NC
R_AARCH64_TLSDESC_CALL
R_AARCH64_COPY
R_AARCH64_GLOB_DAT
R_AARCH64_JUMP_SLOT
R_AARCH64_RELATIVE
R_AARCH64_TLS_DTPREL64
R_AARCH64_TLS_DTPMOD64
R_AARCH64_TLS_TPREL64
R_AARCH64_TLSDESC
R_AARCH64_IRELATIVE
R_ARM_NONE
R_ARM_PC24
R_ARM_ABS32
R_ARM_REL32
R_ARM_LDR_PC_G0
R_ARM_ABS16
R_ARM_ABS12
R_ARM_THM_ABS5
R_ARM_ABS8
R_ARM_SBREL32
R_ARM_THM_CALL
R_ARM_THM_PC8
R_ARM_BREL_ADJ
R_ARM_TLS_DESC
R_ARM_THM_SWI8
R_ARM_XPC25
R_ARM_THM_XPC22
R_ARM_TLS_DTPMOD32
R_ARM_TLS_DTPOFF32
R_ARM_TLS_TPOFF32
R_ARM_COPY
R_ARM_GLOB_DAT
R_ARM_JUMP_SLOT
R_ARM_RELATIVE
R_ARM_GOTOFF32
R_ARM_BASE_PREL
R_ARM_GOT_BREL
R_ARM_PLT32
R_ARM_CALL
R_ARM_JUMP24
R_ARM_THM_JUMP24
R_ARM_BASE_ABS
R_ARM_ALU_PCREL_7_0
R_ARM_ALU_PCREL_15_8
R_ARM_ALU_PCREL_23_15
R_ARM_LDR_SBREL_11_0_NC
R_ARM_ALU_SBREL_19_12_NC
R_ARM_ALU_SBREL_27_20_CK
R_ARM_TARGET1
R_ARM_SBREL31
R_ARM_V4BX
R_ARM_TARGET2
R_ARM_PREL31
R_ARM_MOVW_ABS_NC
R_ARM_MOVT_ABS
R_ARM_MOVW_PREL_NC
R_ARM_MOVT_PREL
R_ARM_THM_MOVW_ABS_NC
R_ARM_THM_MOVT_ABS
R_ARM_THM_MOVW_PREL_NC
R_ARM_THM_MOVT_PREL
R_ARM_THM_JUMP19
R_ARM_THM_JUMP6
R_ARM_THM_ALU_PREL_11_0
R_ARM_THM_PC12
R_ARM_ABS32_NOI
R_ARM_REL32_NOI
R_ARM_ALU_PC_G0_NC
R_ARM_ALU_PC_G0
R_ARM_ALU_PC_G1_NC
R_ARM_ALU_PC_G1
R_ARM_ALU_PC_G2
R_ARM_LDR_PC_G1
R_ARM_LDR_PC_G2
R_ARM_LDRS_PC_G0
R_ARM_LDRS_PC_G1
R_ARM_LDRS_PC_G2
R_ARM_LDC_PC_G0
R_ARM_LDC_PC_G1
R_ARM_LDC_PC_G2
R_ARM_ALU_SB_G0_NC
R_ARM_ALU_SB_G0
R_ARM_ALU_SB_G1_NC
R_ARM_ALU_SB_G1
R_ARM_ALU_SB_G2
R_ARM_LDR_SB_G0
R_ARM_LDR_SB_G1
R_ARM_LDR_SB_G2
R_ARM_LDRS_SB_G0
R_ARM_LDRS_SB_G1
R_ARM_LDRS_SB_G2
R_ARM_LDC_SB_G0
R_ARM_LDC_SB_G1
R_ARM_LDC_SB_G2
R_ARM_MOVW_BREL_NC
R_ARM_MOVT_BREL
R_ARM_MOVW_BREL
R_ARM_THM_MOVW_BREL_NC
R_ARM_THM_MOVT_BREL
R_ARM_THM_MOVW_BREL
R_ARM_TLS_GOTDESC
R_ARM_TLS_CALL
R_ARM_TLS_DESCSEQ
R_ARM_THM_TLS_CALL
R_ARM_PLT32_ABS
R_ARM_GOT_ABS
R_ARM_GOT_PREL
R_ARM_GOT_BREL12
R_ARM_GOTOFF12
R_ARM_GOTRELAX
R_ARM_GNU_VTENTRY
R_ARM_GNU_VTINHERIT
R_ARM_THM_JUMP11
R_ARM_THM_JUMP8
R_ARM_TLS_GD32
R_ARM_TLS_LDM32
R_ARM_TLS_LDO32
R_ARM_TLS_IE32
R_ARM_TLS_LE32
R_ARM_TLS_LDO12
R_ARM_TLS_LE12
R_ARM_TLS_IE12GP
R_ARM_PRIVATE_0
R_ARM_PRIVATE_1
R_ARM_PRIVATE_2
R_ARM_PRIVATE_3
R_ARM_PRIVATE_4
R_ARM_PRIVATE_5
R_ARM_PRIVATE_6
R_ARM_PRIVATE_7
R_ARM_PRIVATE_8
R_ARM_PRIVATE_9
R_ARM_PRIVATE_10
R_ARM_PRIVATE_11
R_ARM_PRIVATE_12
R_ARM_PRIVATE_13
R_ARM_PRIVATE_14
R_ARM_PRIVATE_15
R_ARM_ME_TOO
R_ARM_THM_TLS_DESCSEQ16
R_ARM_THM_TLS_DESCSEQ32
R_HEX_NONE
R_HEX_B22_PCREL
R_HEX_B15_PCREL
R_HEX_B7_PCREL
R_HEX_LO16
R_HEX_HI16
R_HEX_32
R_HEX_16
R_HEX_8
R_HEX_GPREL16_0
R_HEX_GPREL16_1
R_HEX_GPREL16_2
R_HEX_GPREL16_3
R_HEX_HL16
R_HEX_B13_PCREL
R_HEX_B9_PCREL
R_HEX_B32_PCREL_X
R_HEX_32_6_X
R_HEX_B22_PCREL_X
R_HEX_B15_PCREL_X
R_HEX_B13_PCREL_X
R_HEX_B9_PCREL_X
R_HEX_B7_PCREL_X
R_HEX_16_X
R_HEX_12_X
R_HEX_11_X
R_HEX_10_X
R_HEX_9_X
R_HEX_8_X
R_HEX_7_X
R_HEX_6_X
R_HEX_32_PCREL
R_HEX_COPY
R_HEX_GLOB_DAT
R_HEX_JMP_SLOT
R_HEX_RELATIVE
R_HEX_PLT_B22_PCREL
R_HEX_GOTREL_LO16
R_HEX_GOTREL_HI16
R_HEX_GOTREL_32
R_HEX_GOT_LO16
R_HEX_GOT_HI16
R_HEX_GOT_32
R_HEX_GOT_16
R_HEX_DTPMOD_32
R_HEX_DTPREL_LO16
R_HEX_DTPREL_HI16
R_HEX_DTPREL_32
R_HEX_DTPREL_16
R_HEX_GD_PLT_B22_PCREL
R_HEX_GD_GOT_LO16
R_HEX_GD_GOT_HI16
R_HEX_GD_GOT_32
R_HEX_GD_GOT_16
R_HEX_IE_LO16
R_HEX_IE_HI16
R_HEX_IE_32
R_HEX_IE_GOT_LO16
R_HEX_IE_GOT_HI16
R_HEX_IE_GOT_32
R_HEX_IE_GOT_16
R_HEX_TPREL_LO16
R_HEX_TPREL_HI16
R_HEX_TPREL_32
R_HEX_TPREL_16
R_HEX_6_PCREL_X
R_HEX_GOTREL_32_6_X
R_HEX_GOTREL_16_X
R_HEX_GOTREL_11_X
R_HEX_GOT_32_6_X
R_HEX_GOT_16_X
R_HEX_GOT_11_X
R_HEX_DTPREL_32_6_X
R_HEX_DTPREL_16_X
R_HEX_DTPREL_11_X
R_HEX_GD_GOT_32_6_X
R_HEX_GD_GOT_16_X
R_HEX_GD_GOT_11_X
R_HEX_IE_32_6_X
R_HEX_IE_16_X
R_HEX_IE_GOT_32_6_X
R_HEX_IE_GOT_16_X
R_HEX_IE_GOT_11_X
R_HEX_TPREL_32_6_X
R_HEX_TPREL_16_X
R_HEX_TPREL_11_X
R_PPC_NONE
R_PPC_ADDR32
R_PPC_ADDR24
R_PPC_ADDR16
R_PPC_ADDR16_LO
R_PPC_ADDR16_HI
R_PPC_ADDR16_HA
R_PPC_ADDR14
R_PPC_ADDR14_BRTAKEN
R_PPC_ADDR14_BRNTAKEN
R_PPC_REL24
R_PPC_REL14
R_PPC_REL14_BRTAKEN
R_PPC_REL14_BRNTAKEN
R_PPC_GOT16
R_PPC_GOT16_LO
R_PPC_GOT16_HI
R_PPC_GOT16_HA
R_PPC_PLTREL24
R_PPC_REL32
R_PPC_TLS
R_PPC_DTPMOD32
R_PPC_TPREL16
R_PPC_TPREL16_LO
R_PPC_TPREL16_HI
R_PPC_TPREL16_HA
R_PPC_TPREL32
R_PPC_DTPREL16
R_PPC_DTPREL16_LO
R_PPC_DTPREL16_HI
R_PPC_DTPREL16_HA
R_PPC_DTPREL32
R_PPC_GOT_TLSGD16
R_PPC_GOT_TLSGD16_LO
R_PPC_GOT_TLSGD16_HI
R_PPC_GOT_TLSGD16_HA
R_PPC_GOT_TLSLD16
R_PPC_GOT_TLSLD16_LO
R_PPC_GOT_TLSLD16_HI
R_PPC_GOT_TLSLD16_HA
R_PPC_GOT_TPREL16
R_PPC_GOT_TPREL16_LO
R_PPC_GOT_TPREL16_HI
R_PPC_GOT_TPREL16_HA
R_PPC_GOT_DTPREL16
R_PPC_GOT_DTPREL16_LO
R_PPC_GOT_DTPREL16_HI
R_PPC_GOT_DTPREL16_HA
R_PPC_TLSGD
R_PPC_TLSLD
R_PPC_REL16
R_PPC_REL16_LO
R_PPC_REL16_HI
R_PPC_REL16_HA
R_PPC64_NONE
R_PPC64_ADDR32
R_PPC64_ADDR24
R_PPC64_ADDR16
R_PPC64_ADDR16_LO
R_PPC64_ADDR16_HI
R_PPC64_ADDR16_HA
R_PPC64_ADDR14
R_PPC64_ADDR14_BRTAKEN
R_PPC64_ADDR14_BRNTAKEN
R_PPC64_REL24
R_PPC64_REL14
R_PPC64_REL14_BRTAKEN
R_PPC64_REL14_BRNTAKEN
R_PPC64_GOT16
R_PPC64_GOT16_LO
R_PPC64_GOT16_HI
R_PPC64_GOT16_HA
R_PPC64_REL32
R_PPC64_ADDR64
R_PPC64_ADDR16_HIGHER
R_PPC64_ADDR16_HIGHERA
R_PPC64_ADDR16_HIGHEST
R_PPC64_ADDR16_HIGHESTA
R_PPC64_REL64
R_PPC64_TOC16
R_PPC64_TOC16_LO
R_PPC64_TOC16_HI
R_PPC64_TOC16_HA
R_PPC64_TOC
R_PPC64_ADDR16_DS
R_PPC64_ADDR16_LO_DS
R_PPC64_GOT16_DS
R_PPC64_GOT16_LO_DS
R_PPC64_TOC16_DS
R_PPC64_TOC16_LO_DS
R_PPC64_TLS
R_PPC64_DTPMOD64
R_PPC64_TPREL16
R_PPC64_TPREL16_LO
R_PPC64_TPREL16_HI
R_PPC64_TPREL16_HA
R_PPC64_TPREL64
R_PPC64_DTPREL16
R_PPC64_DTPREL16_LO
R_PPC64_DTPREL16_HI
R_PPC64_DTPREL16_HA
R_PPC64_DTPREL64
R_PPC64_GOT_TLSGD16
R_PPC64_GOT_TLSGD16_LO
R_PPC64_GOT_TLSGD16_HI
R_PPC64_GOT_TLSGD16_HA
R_PPC64_GOT_TLSLD16
R_PPC64_GOT_TLSLD16_LO
R_PPC64_GOT_TLSLD16_HI
R_PPC64_GOT_TLSLD16_HA
R_PPC64_GOT_TPREL16_DS
R_PPC64_GOT_TPREL16_LO_DS
R_PPC64_GOT_TPREL16_HI
R_PPC64_GOT_TPREL16_HA
R_PPC64_GOT_DTPREL16_DS
R_PPC64_GOT_DTPREL16_LO_DS
R_PPC64_GOT_DTPREL16_HI
R_PPC64_GOT_DTPREL16_HA
R_PPC64_TPREL16_DS
R_PPC64_TPREL16_LO_DS
R_PPC64_TPREL16_HIGHER
R_PPC64_TPREL16_HIGHERA
R_PPC64_TPREL16_HIGHEST
R_PPC64_TPREL16_HIGHESTA
R_PPC64_DTPREL16_DS
R_PPC64_DTPREL16_LO_DS
R_PPC64_DTPREL16_HIGHER
R_PPC64_DTPREL16_HIGHERA
R_PPC64_DTPREL16_HIGHEST
R_PPC64_DTPREL16_HIGHESTA
R_PPC64_TLSGD
R_PPC64_TLSLD
R_PPC64_REL16
R_PPC64_REL16_LO
R_PPC64_REL16_HI
R_PPC64_REL16_HA
R_390_NONE
R_390_8
R_390_12
R_390_16
R_390_32
R_390_PC32
R_390_GOT12
R_390_GOT32
R_390_PLT32
R_390_COPY
R_390_GLOB_DAT
R_390_JMP_SLOT
R_390_RELATIVE
R_390_GOTOFF
R_390_GOTPC
R_390_GOT16
R_390_PC16
R_390_PC16DBL
R_390_PLT16DBL
R_390_PC32DBL
R_390_PLT32DBL
R_390_GOTPCDBL
R_390_64
R_390_PC64
R_390_GOT64
R_390_PLT64
R_390_GOTENT
R_390_GOTOFF16
R_390_GOTOFF64
R_390_GOTPLT12
R_390_GOTPLT16
R_390_GOTPLT32
R_390_GOTPLT64
R_390_GOTPLTENT
R_390_PLTOFF16
R_390_PLTOFF32
R_390_PLTOFF64
R_390_TLS_LOAD
R_390_TLS_GDCALL
R_390_TLS_LDCALL
R_390_TLS_GD32
R_390_TLS_GD64
R_390_TLS_GOTIE12
R_390_TLS_GOTIE32
R_390_TLS_GOTIE64
R_390_TLS_LDM32
R_390_TLS_LDM64
R_390_TLS_IE32
R_390_TLS_IE64
R_390_TLS_IEENT
R_390_TLS_LE32
R_390_TLS_LE64
R_390_TLS_LDO32
R_390_TLS_LDO64
R_390_TLS_DTPMOD
R_390_TLS_DTPOFF
R_390_TLS_TPOFF
R_390_20
R_390_GOT20
R_390_GOTPLT20
R_390_TLS_GOTIE20
R_390_IRELATIVE
R_SPARC_NONE
R_SPARC_8
R_SPARC_16
R_SPARC_32
R_SPARC_DISP8
R_SPARC_DISP16
R_SPARC_DISP32
R_SPARC_WDISP30
R_SPARC_WDISP22
R_SPARC_HI22
R_SPARC_22
R_SPARC_13
R_SPARC_LO10
R_SPARC_GOT10
R_SPARC_GOT13
R_SPARC_GOT22
R_SPARC_PC10
R_SPARC_PC22
R_SPARC_WPLT30
R_SPARC_COPY
R_SPARC_GLOB_DAT
R_SPARC_JMP_SLOT
R_SPARC_RELATIVE
R_SPARC_UA32
R_SPARC_PLT32
R_SPARC_HIPLT22
R_SPARC_LOPLT10
R_SPARC_PCPLT32
R_SPARC_PCPLT22
R_SPARC_PCPLT10
R_SPARC_10
R_SPARC_11
R_SPARC_64
R_SPARC_OLO10
R_SPARC_HH22
R_SPARC_HM10
R_SPARC_LM22
R_SPARC_PC_HH22
R_SPARC_PC_HM10
R_SPARC_PC_LM22
R_SPARC_WDISP16
R_SPARC_WDISP19
R_SPARC_7
R_SPARC_5
R_SPARC_6
R_SPARC_DISP64
R_SPARC_PLT64
R_SPARC_HIX22
R_SPARC_LOX10
R_SPARC_H44
R_SPARC_M44
R_SPARC_L44
R_SPARC_REGISTER
R_SPARC_UA64
R_SPARC_UA16
R_SPARC_TLS_GD_HI22
R_SPARC_TLS_GD_LO10
R_SPARC_TLS_GD_ADD
R_SPARC_TLS_GD_CALL
R_SPARC_TLS_LDM_HI22
R_SPARC_TLS_LDM_LO10
R_SPARC_TLS_LDM_ADD
R_SPARC_TLS_LDM_CALL
R_SPARC_TLS_LDO_HIX22
R_SPARC_TLS_LDO_LOX10
R_SPARC_TLS_LDO_ADD
R_SPARC_TLS_IE_HI22
R_SPARC_TLS_IE_LO10
R_SPARC_TLS_IE_LD
R_SPARC_TLS_IE_LDX
R_SPARC_TLS_IE_ADD
R_SPARC_TLS_LE_HIX22
R_SPARC_TLS_LE_LOX10
R_SPARC_TLS_DTPMOD32
R_SPARC_TLS_DTPMOD64
R_SPARC_TLS_DTPOFF32
R_SPARC_TLS_DTPOFF64
R_SPARC_TLS_TPOFF32
R_SPARC_TLS_TPOFF64
R_SPARC_GOTDATA_HIX22
R_SPARC_GOTDATA_LOX22
R_SPARC_GOTDATA_OP_HIX22
R_SPARC_GOTDATA_OP_LOX22
R_SPARC_GOTDATA_OP
ET_NONE
ET_REL
ET_EXEC
ET_DYN
ET_CORE
EM_NONE
EM_M32
EM_SPARC
EM_386
EM_68K
EM_88K
EM_486
EM_860
EM_MIPS
EM_S370
EM_MIPS_RS3_LE
EM_PARISC
EM_VPP500
EM_SPARC32PLUS
EM_960
EM_PPC
EM_PPC64
EM_S390
EM_SPU
EM_V800
EM_FR20
EM_RH32
EM_RCE
EM_ARM
EM_ALPHA
EM_SH
EM_SPARCV9
EM_TRICORE
EM_ARC
EM_H8_300
EM_H8_300H
EM_H8S
EM_H8_500
EM_IA_64
EM_MIPS_X
EM_COLDFIRE
EM_68HC12
EM_MMA
EM_PCP
EM_NCPU
EM_NDR1
EM_STARCORE
EM_ME16
EM_ST100
EM_TINYJ
EM_X86_64
EM_PDSP
EM_PDP10
EM_PDP11
EM_FX66
EM_ST9PLUS
EM_ST7
EM_68HC16
EM_68HC11
EM_68HC08
EM_68HC05
EM_SVX
EM_ST19
EM_VAX
EM_CRIS
EM_JAVELIN
EM_FIREPATH
EM_ZSP
EM_MMIX
EM_HUANY
EM_PRISM
EM_AVR
EM_FR30
EM_D10V
EM_D30V
EM_V850
EM_M32R
EM_MN10300
EM_MN10200
EM_PJ
EM_OPENRISC
EM_ARC_COMPACT
EM_XTENSA
EM_VIDEOCORE
EM_TMM_GPP
EM_NS32K
EM_TPC
EM_SNP1K
EM_ST200
EM_IP2K
EM_MAX
EM_CR
EM_F2MC16
EM_MSP430
EM_BLACKFIN
EM_SE_C33
EM_SEP
EM_ARCA
EM_UNICORE
EM_EXCESS
EM_DXP
EM_ALTERA_NIOS2
EM_CRX
EM_XGATE
EM_C166
EM_M16C
EM_DSPIC30F
EM_CE
EM_M32C
EM_TSK3000
EM_RS08
EM_SHARC
EM_ECOG2
EM_SCORE7
EM_DSP24
EM_VIDEOCORE3
EM_LATTICEMICO32
EM_SE_C17
EM_TI_C6000
EM_TI_C2000
EM_TI_C5500
EM_MMDSP_PLUS
EM_CYPRESS_M8C
EM_R32C
EM_TRIMEDIA
EM_HEXAGON
EM_8051
EM_STXP7X
EM_NDS32
EM_ECOG1
EM_ECOG1X
EM_MAXQ30
EM_XIMO16
EM_MANIK
EM_CRAYNV2
EM_RX
EM_METAG
EM_MCST_ELBRUS
EM_ECOG16
EM_CR16
EM_ETPU
EM_SLE9X
EM_L10M
EM_K10M
EM_AARCH64
EM_AVR32
EM_STM8
EM_TILE64
EM_TILEPRO
EM_CUDA
EM_TILEGX
EM_CLOUDSHIELD
EM_COREA_1ST
EM_COREA_2ND
EM_ARC_COMPACT2
EM_OPEN8
EM_RL78
EM_VIDEOCORE5
EM_78KOR
EM_56800EX
ELFCLASS32
ELFCLASS64
ELFDATA2LSB
ELFDATA2MSB
ELFOSABI_NONE
ELFOSABI_HPUX
ELFOSABI_NETBSD
ELFOSABI_GNU
ELFOSABI_HURD
ELFOSABI_SOLARIS
ELFOSABI_AIX
ELFOSABI_IRIX
ELFOSABI_FREEBSD
ELFOSABI_TRU64
ELFOSABI_MODESTO
ELFOSABI_OPENBSD
ELFOSABI_OPENVMS
ELFOSABI_NSK
ELFOSABI_AROS
ELFOSABI_FENIXOS
ELFOSABI_C6000_ELFABI
ELFOSABI_C6000_LINUX
ELFOSABI_ARM
ELFOSABI_STANDALONE
EF_ARM_SOFT_FLOAT
EF_ARM_VFP_FLOAT
EF_ARM_EABI_UNKNOWN
EF_ARM_EABI_VER1
EF_ARM_EABI_VER2
EF_ARM_EABI_VER3
EF_ARM_EABI_VER4
EF_ARM_EABI_VER5
EF_MIPS_NOREORDER
EF_MIPS_PIC
EF_MIPS_CPIC
EF_MIPS_ABI2
EF_MIPS_32BITMODE
EF_MIPS_ABI_O32
EF_MIPS_MICROMIPS
EF_MIPS_ARCH_ASE_M16
EF_MIPS_ARCH_1
EF_MIPS_ARCH_2
EF_MIPS_ARCH_3
EF_MIPS_ARCH_4
EF_MIPS_ARCH_5
EF_MIPS_ARCH_32
EF_MIPS_ARCH_64
EF_MIPS_ARCH_32R2
EF_MIPS_ARCH_64R2
EF_MIPS_ARCH_32R6
EF_MIPS_ARCH_64R6
EF_HEXAGON_MACH_V2
EF_HEXAGON_MACH_V3
EF_HEXAGON_MACH_V4
EF_HEXAGON_MACH_V5
EF_HEXAGON_ISA_V2
EF_HEXAGON_ISA_V3
EF_HEXAGON_ISA_V4
EF_HEXAGON_ISA_V5
SHT_NULL
SHT_PROGBITS
SHT_STRTAB
SHT_RELA
SHT_HASH
SHT_DYNAMIC
SHT_NOTE
SHT_NOBITS
SHT_REL
SHT_SHLIB
SHT_DYNSYM
SHT_INIT_ARRAY
SHT_FINI_ARRAY
SHT_PREINIT_ARRAY
SHT_GROUP
SHT_SYMTAB_SHNDX
SHT_LOOS
SHT_GNU_ATTRIBUTES
SHT_GNU_HASH
SHT_GNU_verdef
SHT_GNU_verneed
SHT_GNU_versym
SHT_HIOS
SHT_LOPROC
SHT_ARM_EXIDX
SHT_ARM_PREEMPTMAP
SHT_ARM_ATTRIBUTES
SHT_ARM_DEBUGOVERLAY
SHT_ARM_OVERLAYSECTION
SHT_HEX_ORDERED
SHT_X86_64_UNWIND
SHT_MIPS_REGINFO
SHT_MIPS_OPTIONS
SHT_MIPS_ABIFLAGS
SHF_WRITE
SHF_ALLOC
SHF_EXCLUDE
SHF_EXECINSTR
SHF_MERGE
SHF_STRINGS
SHF_INFO_LINK
SHF_LINK_ORDER
SHF_OS_NONCONFORMING
SHF_GROUP
SHF_TLS
STT_NOTYPE
STT_OBJECT
STT_FUNC
STT_SECTION
STT_FILE
STT_COMMON
STT_TLS
STT_GNU_IFUNC
STV_DEFAULT
STV_INTERNAL
STV_HIDDEN
STV_PROTECTED
R_MIPS_UNUSED1
R_MIPS_UNUSED2
R_386_NUM
Class
Data
OSABI
Flags
Entry
Section
Size
Visibility
Local
Global
Weak
Section size must be greater or equal to the content size
Offset
Symbol
Addend
FileHeader
Sections
Symbols
Info
Address
Link
AddressAlign
Content
llvm.object
Success
No object file for requested architecture
The file was not recognized as a valid object file
Invalid data was encountered while parsing the file
The end of the file was unexpectedly encountered
GENERIC_RELOC_VANILLA
GENERIC_RELOC_PAIR
GENERIC_RELOC_SECTDIFF
GENERIC_RELOC_PB_LA_PTR
GENERIC_RELOC_LOCAL_SECTDIFF
GENERIC_RELOC_TLV
X86_64_RELOC_UNSIGNED
X86_64_RELOC_SIGNED
X86_64_RELOC_BRANCH
X86_64_RELOC_GOT_LOAD
X86_64_RELOC_GOT
X86_64_RELOC_SUBTRACTOR
X86_64_RELOC_SIGNED_1
X86_64_RELOC_SIGNED_2
X86_64_RELOC_SIGNED_4
X86_64_RELOC_TLV
ARM_RELOC_VANILLA
ARM_RELOC_PAIR
ARM_RELOC_SECTDIFF
ARM_RELOC_LOCAL_SECTDIFF
ARM_RELOC_PB_LA_PTR
ARM_RELOC_BR24
ARM_THUMB_RELOC_BR22
ARM_THUMB_32BIT_BRANCH
ARM_RELOC_HALF
ARM_RELOC_HALF_SECTDIFF
ARM64_RELOC_UNSIGNED
ARM64_RELOC_SUBTRACTOR
ARM64_RELOC_BRANCH26
ARM64_RELOC_PAGE21
ARM64_RELOC_PAGEOFF12
ARM64_RELOC_GOT_LOAD_PAGE21
ARM64_RELOC_GOT_LOAD_PAGEOFF12
ARM64_RELOC_POINTER_TO_GOT
ARM64_RELOC_TLVP_LOAD_PAGE21
ARM64_RELOC_TLVP_LOAD_PAGEOFF12
ARM64_RELOC_ADDEND
PPC_RELOC_VANILLA
PPC_RELOC_PAIR
PPC_RELOC_BR14
PPC_RELOC_BR24
PPC_RELOC_HI16
PPC_RELOC_LO16
PPC_RELOC_HA16
PPC_RELOC_LO14
PPC_RELOC_SECTDIFF
PPC_RELOC_PB_LA_PTR
PPC_RELOC_HI16_SECTDIFF
PPC_RELOC_LO16_SECTDIFF
PPC_RELOC_HA16_SECTDIFF
PPC_RELOC_JBSR
PPC_RELOC_LO14_SECTDIFF
PPC_RELOC_LOCAL_SECTDIFF
PCREL
@TLV
Expected GENERIC_RELOC_PAIR after GENERIC_RELOC_SECTDIFF.
Expected GENERIC_RELOC_PAIR after GENERIC_RELOC_LOCAL_SECTDIFF.
:upper16:(
:lower16:(
Expected ARM_RELOC_PAIR after ARM_RELOC_HALF
.framework/
Versions/
.dylib
.qtx
Mach-O 32-bit i386
Mach-O arm
Mach-O 32-bit ppc
Mach-O 32-bit unknown
Mach-O 64-bit x86-64
Mach-O arm64
Mach-O 64-bit ppc64
Mach-O 64-bit unknown
i386-apple-darwin
x86_64-apple-darwin
x86_64h-apple-darwin
armv4t-apple-darwin
armv5e-apple-darwin
xscale-apple-darwin
armv6-apple-darwin
cortex-m0
armv6m-apple-darwin
armv7-apple-darwin
cortex-m4
armv7em-apple-darwin
armv7k-apple-darwin
cortex-m3
armv7m-apple-darwin
armv7s-apple-darwin
arm64-apple-darwin
ppc-apple-darwin
ppc64-apple-darwin
thumbv4t-apple-darwin
thumbv5e-apple-darwin
thumbv6-apple-darwin
thumbv6m-apple-darwin
thumbv7-apple-darwin
thumbv7em-apple-darwin
thumbv7k-apple-darwin
thumbv7m-apple-darwin
thumbv7s-apple-darwin
x86_64
armv4t
armv5e
armv6
armv6m
armv7em
armv7k
armv7m
armv7s
ppc64
invalid hexadecimal floating-point constant: expected at least one significand digit
invalid hexadecimal floating-point constant: expected exponent part 'p'
invalid hexadecimal floating-point constant: expected at least one exponent digit
unterminated comment
invalid decimal number
invalid hexdecimal number
invalid binary number
invalid hexadecimal number
invalid octal number
unterminated single quote
single quote way too long
unterminated string constant
invalid character in input
fatal-assembler-warnings
Consider warnings as error
.set
.equ
.equiv
.ascii
.asciz
.string
.byte
.short
.value
.2byte
.long
.4byte
.quad
.8byte
.octa
.single
.float
.double
.align
.align32
.balign
.balignw
.balignl
.p2align
.p2alignw
.p2alignl
.org
.fill
.zero
.extern
.globl
.global
.lazy_reference
.no_dead_strip
.symbol_resolver
.alt_entry
.private_extern
.reference
.weak_definition
.weak_reference
.weak_def_can_be_hidden
.comm
.common
.lcomm
.abort
.include
.incbin
.code16gcc
.rept
.rep
.irp
.irpc
.endr
.bundle_align_mode
.bundle_lock
.bundle_unlock
.ifeq
.ifge
.ifgt
.ifle
.iflt
.ifne
.ifb
.ifnb
.ifc
.ifeqs
.ifnc
.ifdef
.ifndef
.ifnotdef
.elseif
.else
.end
.endif
.skip
.space
.line
.stabs
.sleb128
.uleb128
.cfi_sections
.cfi_startproc
.cfi_endproc
.cfi_def_cfa
.cfi_def_cfa_offset
.cfi_adjust_cfa_offset
.cfi_def_cfa_register
.cfi_offset
.cfi_rel_offset
.cfi_personality
.cfi_lsda
.cfi_remember_state
.cfi_restore_state
.cfi_same_value
.cfi_restore
.cfi_escape
.cfi_signal_frame
.cfi_undefined
.cfi_register
.cfi_window_save
.macros_on
.macros_off
.macro
.exitm
.endm
.endmacro
.purgem
.err
.error
.warning
unmatched .ifs or .elses
unassigned file number: 
 for .file directives
assembler local symbol '
' not defined
unexpected token at start of statement
invalid use of pseudo-symbol '.' as a label
invalid symbol redefinition
 not supported yet
unknown directive
_emit
__emit
_EMIT
__EMIT
ALIGN
parsed instruction: [
unexpected token in '.if' directive
unexpected token in '.ifb' directive
unexpected token in '.ifc' directive
expected string parameter for '.ifeqs' directive
expected comma after first string for '.ifeqs' directive
expected identifier after '.ifdef'
Encountered a .elseif that doesn't follow a .if or  an .elseif
unexpected token in '.elseif' directive
unexpected token in '.else' directive
Encountered a .else that doesn't follow a .if or an .elseif
unexpected token in '.endif' directive
Encountered a .endif that doesn't follow a .if or .else
unexpected token in assignment
Recursive use of '
redefinition of '
invalid assignment to '
invalid reassignment of non-absolute variable '
expected absolute expression
macros cannot be nested more than 20 levels deep
.endmacro
<instantiation>
invalid argument identifier for formal argument
expected '=' after formal parameter identifier
cannot mix positional and keyword arguments
parameter named '
' does not exist for macro '
missing value for required parameter '
' in macro '
too many positional arguments
unexpected token in macro instantiation
unbalanced parentheses in macro argument
Wrong number of arguments
expected identifier after '
expected string in '
literal value out of range for directive
infinity
invalid floating point literal
invalid alignment value
alignment must be a power of 2
alignment directive can never be satisfied in this many bytes, ignoring maximum bytes expression
maximum bytes expression exceeds alignment and has no effect
unexpected token in '.org' directive
expected assembly-time absolute expression
'.fill' directive with negative repeat count has no effect
unexpected token in '.fill' directive
'.fill' directive with negative size has no effect
'.fill' directive with size greater than 8 has been truncated to 8
'.fill' directive pattern has been truncated to 32-bits
unexpected token in '.zero' directive
non-local symbol required in directive
unable to emit symbol attribute
alignment not supported on this target
unexpected token in '.comm' or '.lcomm' directive
invalid '.comm' or '.lcomm' directive size, can't be less than zero
invalid '.comm' or '.lcomm' directive alignment, can't be less than zero
unexpected token in '.abort' directive
.abort detected. Assembly stopping.
.abort '
' detected. Assembly stopping.
expected string in '.include' directive
unexpected token in '.include' directive
Could not find include file '
expected string in '.incbin' directive
unexpected token in '.incbin' directive
Could not find incbin file '
Count is negative
no matching '.endr' in definition
unexpected token in '.endr' directive
.endr
expected identifier in '.irp' directive
expected comma in '.irp' directive
expected identifier in '.irpc' directive
expected comma in '.irpc' directive
unexpected token in '.irpc' directive
unmatched '.endr' directive
unexpected token after expression in '.bundle_align_mode' directive
invalid bundle alignment size (expected between 0 and 30)
invalid option for '.bundle_lock' directive
align_to_end
unexpected token after '.bundle_lock' directive option
unexpected token in '.bundle_unlock' directive
invalid number of bytes in '
file number less than one
unexpected token in '.file' directive
explicit path specified, but no file number
input can't have .file dwarf directives when -g is used to generate dwarf debug info for assembly code
file number already allocated
unexpected token in '.line' directive
unexpected token in '.loc' directive
file number less than one in '.loc' directive
unassigned file number in '.loc' directive
line number less than zero in '.loc' directive
column position less than zero in '.loc' directive
basic_block
prologue_end
epilogue_begin
is_stmt
is_stmt value not 0 or 1
is_stmt value not the constant value of 0 or 1
isa number less than zero
isa number not a constant value
discriminator
unknown sub-directive in '.loc' directive
unsupported directive '.stabs'
Expected an identifier
.debug_frame
simple
unexpected token in .cfi_startproc directive
unsupported encoding.
unexpected token in '.cfi_signal_frame'
expected identifier in '.macro' directive
Vararg parameter '
' should be last one in the list of parameters.
missing parameter qualifier for '
vararg
 is not a valid parameter qualifier for '
pointless default value for required parameter '
no matching '.endmacro' in definition
macro '
' is already defined
macro defined with named parameters which are not used in macro body, possible positional parameter found in body which will have no effect
unexpected '
' in file, no current macro definition
expected identifier in '.purgem' directive
unexpected token in '.purgem' directive
' is not defined
unexpected token in '.end' directive
.err encountered
.error directive invoked in source file
.error argument must be a string
.warning directive invoked in source file
.warning argument must be a string
unexpected expression in _emit
unexpected expression in align
literal value not a power of two greater then zero
byte ptr 
word ptr 
dword ptr 
qword ptr 
xword ptr 
xmmword ptr 
ymmword ptr 
.align 
while in macro instantiation
unexpected backslash at end of string
invalid octal escape sequence (out of range)
invalid escape sequence (unrecognized character)
unexpected symbol modifier following '@'
invalid variant '
invalid modifier '
' (no symbols present)
invalid variant on expression '
' (already modified)
invalid token in expression
expected symbol variant after '@'
unexpected token in variant, expected ')'
unexpected modifier on variable reference
brackets expression not supported on this target
expected ')' in parentheses expression
expected ']' in brackets expression
expected section directive before assembly directive
.section
.def
.scl
.type
.endef
.secrel32
.secidx
.linkonce
.seh_proc
.seh_endproc
.seh_startchained
.seh_endchained
.seh_handler
.seh_handlerdata
.seh_pushreg
.seh_setframe
.seh_stackalloc
.seh_savereg
.seh_savexmm
.seh_pushframe
.seh_endprologue
.weak
unexpected token in section switching directive
expected string in directive
expected comdat type such as 'discard' or 'largest' after protection bits
expected comma in directive
conflicting section flags 'b' and 'd'.
unknown flag
one_only
same_size
same_contents
associative
newest
unrecognized COMDAT type '
cannot make section associative with .linkonce
section '
' is already linkonce
you must specify one or both of @unwind or @except
a handler attribute must begin with '@'
expected @unwind or @except
except
register can't be represented in SEH unwind info
register number is too high
you must specify a stack pointer offset
offset is not a multiple of 16
size is not a multiple of 8
you must specify an offset on the stack
code
expected @code
.desc
.indirect_symbol
.lsym
.subsections_via_symbols
.dump
.load
.pushsection
.popsection
.previous
.secure_log_unique
.secure_log_reset
.zerofill
.data_region
.end_data_region
.const
.const_data
.constructor
.cstring
.destructor
.dyld
.fvmlib_init0
.fvmlib_init1
.lazy_symbol_pointer
.linker_option
.literal16
.literal4
.literal8
.mod_init_func
.mod_term_func
.non_lazy_symbol_pointer
.objc_cat_cls_meth
.objc_cat_inst_meth
.objc_category
.objc_class
.objc_class_names
.objc_class_vars
.objc_cls_meth
.objc_cls_refs
.objc_inst_meth
.objc_instance_vars
.objc_message_refs
.objc_meta_class
.objc_meth_var_names
.objc_meth_var_types
.objc_module_info
.objc_protocol
.objc_selector_strs
.objc_string_object
.objc_symbols
.picsymbol_stub
.static_const
.static_data
.symbol_stub
.thread_init_func
.tlv
.ident
.ios_version_min
.macosx_version_min
unexpected token in '.desc' directive
indirect symbol not in a symbol pointer or stub section
expected identifier in .indirect_symbol directive
unable to emit indirect symbol attribute for: 
unexpected token in '.indirect_symbol' directive
unexpected token in '.lsym' directive
directive '.lsym' is unsupported
unexpected token in '.subsections_via_symbols' directive
expected string in '.dump' or '.load' directive
unexpected token in '.dump' or '.load' directive
ignoring directive .dump for now
ignoring directive .load for now
expected identifier after '.section' directive
unexpected token in '.section' directive
.popsection without corresponding .pushsection
.previous without corresponding .section
unexpected token in '.secure_log_unique' directive
.secure_log_unique specified multiple times
.secure_log_unique used but AS_SECURE_LOG_FILE environment variable unset.
can't open secure log file: 
unexpected token in '.secure_log_reset' directive
unexpected token in '.tbss' directive
invalid '.tbss' directive size, can't be less thanzero
invalid '.tbss' alignment, can't be lessthan zero
__thread_bss
expected segment name after '.zerofill' directive
expected section name after comma in '.zerofill' directive
unexpected token in '.zerofill' directive
invalid '.zerofill' directive size, can't be less than zero
invalid '.zerofill' directive alignment, can't be less than zero
expected region type after '.data_region' directive
jt16
jt32
unknown region type in '.data_region' directive
unexpected token in '.end_data_region' directive
__bss
__const
__constructor
__cstring
__destructor
__dyld
__fvmlib_init0
__fvmlib_init1
__la_symbol_ptr
__literal16
__literal4
__literal8
__mod_init_func
__mod_term_func
__OBJC
__cat_cls_meth
__cat_inst_meth
__category
__class
__class_vars
__cls_meth
__cls_refs
__inst_meth
__instance_vars
__message_refs
__meta_class
__module_info
__protocol
__selector_strs
__string_object
__symbols
__picsymbol_stub
__static_const
__static_data
__symbol_stub
__thread_data
__thread_init
__thread_vars
invalid OS major version number
minor OS version number required, comma expected
invalid OS minor version number
invalid update specifier, comma expected
invalid OS update number
.rodata
.data.rel
.data.rel.ro
.data.rel.ro.local
.size
.symver
.version
.weakref
.local
.protected
.internal
.hidden
.subsection
.fini
Section cannot specifiy a group name while also acting as a member of the last group
Mergeable section must specify the type
Group section must specify the type
expected '@<type>', '%<type>' or "<type>"
expected the entry size
entry size must be positive
expected group name
Linkage must be 'comdat'
.note
init_array
fini_array
preinit_array
nobits
progbits
note
unknown section type
DWARF2 only supports one section per compilation unit
alloc
execinstr
expected STT_<TYPE_IN_UPPER_CASE>, '#<type>', '@<type>', '%<type>' or "<type>"
expected symbol type in directive
unsupported attribute in '.type' directive
unexpected token in '.type' directive
function
object
tls_object
notype
gnu_indirect_function
gnu_unique_object
unexpected token in '.ident' directive
expected a comma
expected a '@' in the name
unexpected token in '.version' directive
llvm.bitcode
Conflicting METADATA_KIND records
Could not find function in stream
Expected a constant
Insufficient function protos
Invalid bitcode signature
Invalid bitcode wrapper header
Invalid ronstant reference
Invalid ID
Invalid instruction with no BB
Invalid record
Invalid type for value
Invalid TYPE table
Invalid type
Malformed block
Malformed global initializer set
Invalid multiple blocks
Never resolved value found in function
Never resolved function from blockaddress
Invalid value
Latency: 
32-bit X86: Pentium-Pro and above
64-bit X86: EM64T and AMD64
, %rax
{1to16}, 
{1to8}, 
, %ax
, %eax
, %al
, %st(0)
  # NOREX
, %dx
  # TAILCALL
{sae}, 
{sae}, 
} {z}
} {z} 
cvtsd2siq
imulw $
imull $
imulq $
xstorerng
<reg:
lock
{rn-sae}
{rd-sae}
{ru-sae}
{rz-sae}
<imm:
imm = 0x%llX
<mem:
%es:(
, st(0)
, dx
, ax
, eax
, rax
, al
, cl
} {z}, 
, {sae}
es:[
opaque ptr 
zmmword ptr 
A @@ version cannot be undefined
No relocation available to represent this relative expression
Cannot represent a difference across sections
.debug_
ZLIB
.rela
.rel
.shstrtab
.symtab
.strtab
.symtab_shndxr
Size expression must be absolute.
.ARM.exidx
FK_Data_1
FK_Data_2
FK_Data_4
FK_Data_8
FK_PCRel_1
FK_PCRel_2
FK_PCRel_4
FK_PCRel_8
FK_GPRel_1
FK_GPRel_2
FK_GPRel_4
FK_GPRel_8
FK_SecRel_1
FK_SecRel_2
FK_SecRel_4
FK_SecRel_8
NO_APP
.zero
.ascii
.asciz
.byte
.short
.long
.quad
.globl
 InlineAsm Start
 InlineAsm End
.weak_reference 
.space
.cfi_startproc
 simple
.cfi_endproc
.syntax unified
.linker_option "
.data_region
.data_region jt8
.data_region jt16
.data_region jt32
.end_data_region
.ios_version_min
.macosx_version_min
.thumb_func
.weakref 
.type
no_type
.hidden
.indirect_symbol
.internal
.lazy_reference
.local
.no_dead_strip
.symbol_resolver
.alt_entry
.private_extern
.protected
.reference
.weak_definition
.weak_def_can_be_hidden
.def
.scl
.endef
.secidx
.secrel32
.size
.comm
.lcomm
.zerofill 
.tbss 
Don't know how to emit this value.
.uleb128 
.sleb128 
.align
.p2alignw 
.p2alignl 
, 0x
.org 
.file
.ident
.loc
 basic_block
 prologue_end
 epilogue_begin
 is_stmt 
 isa 
 discriminator 
.cfi_sections 
, .debug_frame
.cfi_def_cfa 
.cfi_def_cfa_offset 
.cfi_def_cfa_register 
.cfi_offset 
.cfi_personality 
.cfi_lsda 
.cfi_remember_state
.cfi_restore_state
.cfi_same_value 
.cfi_rel_offset 
.cfi_adjust_cfa_offset 
.cfi_signal_frame
.cfi_undefined 
.cfi_register 
.cfi_window_save
.seh_proc 
.seh_endproc
.seh_startchained
.seh_endchained
.seh_pushreg 
.seh_setframe 
.seh_stackalloc 
.seh_savereg 
.seh_savexmm 
.seh_pushframe
 @code
.seh_endprologue
.seh_handler 
, @unwind
, @except
.seh_handlerdata
encoding: [
0x%02x
  fixup 
offset: 
, value: 
, kind: 
.bundle_align_mode 
.bundle_lock
 align_to_end
.bundle_unlock
' could not be evaluated in a subtraction expression
expected relocatable expression
invalid .org offset '
' (at offset '
Fragment can't be larger than a bundle size
Padding cannot exceed 255 bytes
non-zero initializer found in section '
non-zero initializer found in virtual section
<MCFixup
 Offset:
 Value:
 Kind:
unable to evaluate offset for variable '
unable to evaluate offset to undefined symbol '
unable to write NOP sequence of 
 bytes
undefined .align directive, value size '
' is not a divisor of padding size '
unable to write nop sequence of 
AS_SECURE_LOG_FILE
.group
llvm-mc (based on LLVM 3.6.0svn)
Unterminated .bundle_lock when changing a section
Emitting values inside a locked bundle is forbidden
.comment
.bundle_align_mode should be only set once per file
.bundle_lock forbidden when bundling is disabled
Nesting of .bundle_lock is forbidden
.bundle_unlock forbidden when bundling is disabled
.bundle_unlock without matching lock
Empty bundle-locked group is forbidden
<<invalid>>
<<none>>
GOTOFF
GOTPCREL
GOTTPOFF
INDNTPOFF
NTPOFF
GOTNTPOFF
TLSGD
TLSLD
TLSLDM
TPOFF
DTPOFF
TLVP
TLVPPAGE
TLVPPAGEOFF
PAGE
PAGEOFF
GOTPAGE
GOTPAGEOFF
SECREL32
WEAKREF
target1
target2
prel31
tlsldo
tlscall
tlsdescseq
higher
highera
highest
highesta
got@l
got@h
got@ha
tocbase
toc@l
toc@h
toc@ha
dtpmod
tprel
tprel@l
tprel@h
tprel@ha
tprel@higher
tprel@highera
tprel@highest
tprel@highesta
dtprel
dtprel@l
dtprel@h
dtprel@ha
dtprel@higher
dtprel@highera
dtprel@highest
dtprel@highesta
got@tprel
got@tprel@l
got@tprel@h
got@tprel@ha
got@dtprel
got@dtprel@l
got@dtprel@h
got@dtprel@ha
got@tlsgd
got@tlsgd@l
got@tlsgd@h
got@tlsgd@ha
tlsgd
got@tlsld
got@tlsld@l
got@tlsld@h
got@tlsld@ha
tlsld
GPREL
GOT_CALL
GOT16
ABS_HI
ABS_LO
DTPREL_HI
DTPREL_LO
GOTTPREL
TPREL_HI
TPREL_LO
GPOFF_HI
GPOFF_LO
GOT_DISP
GOT_PAGE
GOT_OFST
HIGHER
HIGHEST
GOT_HI16
GOT_LO16
CALL_HI16
CALL_LO16
PCREL_HI16
PCREL_LO16
IMGREL32
gotoff
gotpcrel
GOT_PREL
got_prel
gottpoff
indntpoff
ntpoff
gotntpoff
tlsldm
tpoff
dtpoff
tlvp
tlvppage
tlvppageoff
page
pageoff
gotpage
gotpageoff
IMGREL
imgrel
secrel32
HIGHERA
HIGHESTA
GOT@L
GOT@H
GOT@HA
TOCBASE
TOC@L
TOC@H
TOC@HA
DTPMOD
TPREL
TPREL@L
TPREL@H
TPREL@HA
TPREL@HIGHER
TPREL@HIGHERA
TPREL@HIGHEST
TPREL@HIGHESTA
DTPREL
DTPREL@L
DTPREL@H
DTPREL@HA
DTPREL@HIGHER
DTPREL@HIGHERA
DTPREL@HIGHEST
DTPREL@HIGHESTA
GOT@TPREL
GOT@TPREL@L
GOT@TPREL@H
GOT@TPREL@HA
GOT@DTPREL
GOT@DTPREL@L
GOT@DTPREL@H
GOT@DTPREL@HA
GOT@TLSGD
GOT@TLSGD@L
GOT@TLSGD@H
GOT@TLSGD@HA
GOT@TLSLD
GOT@TLSLD@L
GOT@TLSLD@H
GOT@TLSLD@HA
NONE
TARGET1
TARGET2
PREL31
TLSLDO
TLSCALL
TLSDESC
<MCOperand 
INVALID
Reg:
Imm:
Expr:(
Inst:(
UNDEFINED
<MCInst 
<MCInst #
%lld
-0x%llx
-0%llxh
-%llxh
0%llxh
%llxh
__textcoal_nt
__const_coal
__datacoal_nt
__common
__LD
__compact_unwind
__DWARF
__apple_names
__apple_objc
__apple_namespac
__apple_types
__debug_abbrev
__debug_info
__debug_line
__debug_frame
__debug_pubnames
__debug_pubtypes
__debug_gnu_pubn
__debug_gnu_pubt
__debug_str
__debug_loc
__debug_aranges
__debug_ranges
__debug_macinfo
__debug_inlined
__LLVM_STACKMAPS
__llvm_stackmaps
.data.rel.local
.rodata.cst4
.rodata.cst8
.rodata.cst16
.ctors
.dtors
.gcc_except_table
.debug_abbrev
.debug_info
.debug_line
.debug_pubnames
.debug_pubtypes
.debug_gnu_pubnames
.debug_gnu_pubtypes
.debug_str
.debug_loc
.debug_aranges
.debug_ranges
.debug_macinfo
.apple_names
.apple_objc
.apple_namespaces
.apple_types
.debug_info.dwo
.debug_types.dwo
.debug_abbrev.dwo
.debug_str.dwo
.debug_line.dwo
.debug_loc.dwo
.debug_str_offsets.dwo
.debug_addr
.llvm_stackmaps
.CRT$XCU
.CRT$XTX
.debug$S
.drectve
.pdata
.xdata
.debug_types
This file format doesn't support weak aliases.
Cannot evaluate subsection number
Subsection number out of range
.section
one_only,
discard,
same_size,
same_contents,
associative,
largest,
newest,
,#alloc
,#execinstr
,#write
,#exclude
,#tls
,comdat
.subsection
0123456789_.abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
,none,
mach-o section specifier requires a segment whose length is between 1 and 16 characters
mach-o section specifier requires a segment and section separated by a comma
mach-o section specifier requires a section whose length is between 1 and 16 characters
mach-o section specifier uses an unknown section type
mach-o section specifier of type 'symbol_stubs' requires a size specifier
mach-o section specifier has invalid attribute
mach-o section specifier cannot have a stub size specified because it does not have type 'symbol_stubs'
mach-o section specifier has a malformed stub size
regular
S_REGULAR
S_ZEROFILL
cstring_literals
S_CSTRING_LITERALS
4byte_literals
S_4BYTE_LITERALS
8byte_literals
S_8BYTE_LITERALS
literal_pointers
S_LITERAL_POINTERS
non_lazy_symbol_pointers
S_NON_LAZY_SYMBOL_POINTERS
lazy_symbol_pointers
S_LAZY_SYMBOL_POINTERS
symbol_stubs
S_SYMBOL_STUBS
mod_init_funcs
S_MOD_INIT_FUNC_POINTERS
mod_term_funcs
S_MOD_TERM_FUNC_POINTERS
coalesced
S_COALESCED
S_GB_ZEROFILL
interposing
S_INTERPOSING
16byte_literals
S_16BYTE_LITERALS
S_DTRACE_DOF
S_LAZY_DYLIB_SYMBOL_POINTERS
thread_local_regular
S_THREAD_LOCAL_REGULAR
thread_local_zerofill
S_THREAD_LOCAL_ZEROFILL
thread_local_variables
S_THREAD_LOCAL_VARIABLES
thread_local_variable_pointers
S_THREAD_LOCAL_VARIABLE_POINTERS
thread_local_init_function_pointers
S_THREAD_LOCAL_INIT_FUNCTION_POINTERS
pure_instructions
S_ATTR_PURE_INSTRUCTIONS
no_toc
S_ATTR_NO_TOC
strip_static_syms
S_ATTR_STRIP_STATIC_SYMS
no_dead_strip
S_ATTR_NO_DEAD_STRIP
live_support
S_ATTR_LIVE_SUPPORT
self_modifying_code
S_ATTR_SELF_MODIFYING_CODE
S_ATTR_DEBUG
S_ATTR_SOME_INSTRUCTIONS
S_ATTR_EXT_RELOC
S_ATTR_LOC_RELOC
unsupported directive in streamer
line_table_start
No open frame
Starting a frame before finishing the previous one!
No open Win64 EH frame function!
Starting a function before ending the previous one!
Not all chained regions terminated!
End of a chained region outside a chained region!
Chained unwind areas can't have handlers!
Don't know what kind of handler this is!
Frame register and offset already specified!
Misaligned frame pointer offset!
Frame offset must be less than or equal to 240!
Allocation size must be non-zero!
Misaligned stack allocation!
Misaligned saved register offset!
Misaligned saved vector register offset!
If present, PushMachFrame must be the first UOP
EmitRawText called on an MCStreamer that doesn't support it,  something must not be fully mc'ized
Unfinished frame!
' is not a recognized processor for this target
 (ignoring processor)
invalid 'common' alignment '
' for '
indirect symbol '
' not in a symbol pointer or stub section
' is not a recognized feature for this target
 (ignoring feature)
help
+help
altivec
Available CPUs for this target:
  %-*s - %s.
Available features for this target:
Use +feature to enable a feature, or -feature to disable it.
For example, llc -mcpu=mycpu -mattr=+feature1,-feature2
.file
two sections have the same comdat
Weak externals may only alias symbols
.weak.
.default
conflicting sections for symbol
symbol '
' can not be undefined
' can not be undefined in a subtraction expression
Missing associated COMDAT section for section 
COFF string table is greater than 64 GB.
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/
starting a new symbol definition without completing the previous one
storage class specified outside of symbol definition
storage class value '
' out of range
symbol type specified outside of a symbol definition
type value '
ending symbol definition without starting one
alignment is limited to 32-bytes
BinaryRef hex string must contain an even number of nybbles.
BinaryRef hex string must contain only hex digits.
%"type 
 addrspace(
<null operand!>
 singlethread
 <bad ordering 
 unordered
 monotonic
 acquire
 release
 acq_rel
 seq_cst
; ModuleID = '
target datalayout = "
target triple = "
module asm "
<empty name> 
 = !{
<badref>
; Materializable
external 
unnamed_addr 
addrspace(
externally_initialized 
constant 
global 
, section "
, comdat 
, align 
<<nameless>> = 
alias 
 <<NULL ALIASEE>>
 = type 
; Function Attrs: 
declare 
define 
 unnamed_addr
 section "
 comdat 
 align 
 gc "
 prefix 
; <label>:
; Error: Block without parent!
 No predecessors!
 preds = 
<badref> = 
musttail 
tail 
 atomic
 weak
 volatile
 personality 
          cleanup
          catch 
          filter 
 void
          to 
 unwind 
inalloca 
, !<unknown kind #
 = metadata 
attributes #
 = { 
_bb 
, { 
; uselistorder directives
 = comdat 
asm 
sideeffect 
alignstack 
inteldialect 
", "
private 
internal 
linkonce 
linkonce_odr 
weak 
weak_odr 
common 
appending 
extern_weak 
available_externally 
hidden 
protected 
dllimport 
dllexport 
thread_local 
thread_local(localdynamic) 
thread_local(initialexec) 
thread_local(localexec) 
 fast
 nnan
 ninf
 nsz
 arcp
 nuw
 nsw
 exact
 inbounds
unknown
 <unknown operation 
 xchg
 add
 sub
 and
 nand
 xor
 max
 min
 umax
 umin
; [ DW_TAG_user_base ]
blockaddress(
<placeholder or erroneous Constant>
PAL[
  { 
llvm.x86.sse2.pcmpeq.
llvm.x86.avx2.pcmpeq.
pcmpeq
llvm.x86.sse2.pcmpgt.
llvm.x86.avx2.pcmpgt.
pcmpgt
llvm.x86.avx.movnt.dq.256
llvm.x86.avx.movnt.ps.256
llvm.x86.avx.movnt.pd.256
cast
llvm.x86.xop.vpcom
llvm.x86.sse42.crc32.64.8
llvm.x86.avx.vbroadcast
llvm.x86.avx.vpermil.pd.256
llvm.x86.avx.vpermil.pd
llvm.x86.avx.vpermil.ps.256
llvm.x86.avx.vpermil.ps
llvm.ctlz.
LLVM_DEBUG_METADATA_VERSION_OFFSET
Could not parse the environment variable LLVM_DEBUG_METADATA_VERSION_OFFSET="%s" as a 32-bit integer.
llvm.vectorizer.
llvm.vectorizer.unroll
llvm.loop.interleave.count
llvm.loop.vectorize.
arm.neon.vclz
arm.neon.vcnt
ctlz.
cttz.
objectsize.
x86.sse2.pcmpeq.
x86.sse2.pcmpgt.
x86.avx2.pcmpeq.
x86.avx2.pcmpgt.
x86.avx.vpermil.
x86.avx.movnt.dq.256
x86.avx.movnt.pd.256
x86.avx.movnt.ps.256
x86.sse42.crc32.64.8
x86.avx.vbroadcast.ss
x86.avx.vbroadcast.ss.256
x86.avx.vbroadcast.sd.256
x86.xop.vpcom
x86.sse41.ptest
x86.sse41.ptestc
x86.sse41.ptestz
x86.sse41.ptestnzc
x86.xop.vfrcz.ss
x86.xop.vfrcz.sd
x86.fma4.
llvm.x86.fma
full-set
empty-set
Printing <null> Value
decltype(nullptr)
-m:o
-m:w
-m:e
-m:m
Data Layout
not a number, or does not fit in an unsigned int
 [unbounded]
lang 0x
 :: 
 [line 
, size 
, offset 
, enc 
 [private]
 [protected]
 [public]
 [artificial]
 [decl]
 [def]
 [vector]
 [static]
 [reference]
 [rvalue reference]
 [from 
 elements]
 [local]
 [scope 
 [piece, size 
, properties 
llvm.dbg.value
llvm.dbg.
Debug Info Version
 @[ 
pass-remarks
pattern
Enable optimization remarks from passes whose name match the given regular expression
pass-remarks-missed
Enable missed optimization remarks from passes whose name match the given regular expression
pass-remarks-analysis
Enable optimization analysis remarks from passes whose name match the given regular expression
 at line 
stack size limit exceeded (
) in 
ignoring debug info with an invalid version (
loop not interleaved: 
Invalid regular expression '
' in -pass-remarks: 
verify-dom-info
Verify dominator info (time consuming)
DominatorTree is not up to date!
Computed:
Actual:
Dominator Tree Construction
MDGPU.trig.preop.
MDGPU.rsq.clamped.
MDGPU.rsq.
MDGPU.rcp.
MDGPU.ldexp.
MDGPU.div.scale.
MDGPU.div.fmas.
MDGPU.div.fixup.
rm.vcvtru.
rm.vcvtr.
rm.strex.
rm.stlex.
rm.neon.vst4lane.
rm.neon.vst4.
rm.neon.vst3lane.
rm.neon.vst3.
rm.neon.vst2lane.
rm.neon.vst2.
rm.neon.vst1.
rm.neon.vshiftu.
rm.neon.vshifts.
rm.neon.vshiftins.
rm.neon.vrsubhn.
rm.neon.vrsqrts.
rm.neon.vrsqrte.
rm.neon.vrshiftu.
rm.neon.vrshifts.
rm.neon.vrshiftn.
rm.neon.vrintz.
rm.neon.vrintx.
rm.neon.vrintp.
rm.neon.vrintn.
rm.neon.vrintm.
rm.neon.vrinta.
rm.neon.vrhaddu.
rm.neon.vrhadds.
rm.neon.vrecps.
rm.neon.vrecpe.
rm.neon.vraddhn.
rm.neon.vqsubu.
rm.neon.vqsubs.
rm.neon.vqshiftu.
rm.neon.vqshiftsu.
rm.neon.vqshifts.
rm.neon.vqshiftnu.
rm.neon.vqshiftnsu.
rm.neon.vqshiftns.
rm.neon.vqrshiftu.
rm.neon.vqrshifts.
rm.neon.vqrshiftnu.
rm.neon.vqrshiftnsu.
rm.neon.vqrshiftns.
rm.neon.vqrdmulh.
rm.neon.vqneg.
rm.neon.vqmovnu.
rm.neon.vqmovnsu.
rm.neon.vqmovns.
rm.neon.vqdmull.
rm.neon.vqdmulh.
rm.neon.vqaddu.
rm.neon.vqadds.
rm.neon.vqabs.
rm.neon.vpminu.
rm.neon.vpmins.
rm.neon.vpmaxu.
rm.neon.vpmaxs.
rm.neon.vpaddlu.
rm.neon.vpaddls.
rm.neon.vpadd.
rm.neon.vpadalu.
rm.neon.vpadals.
rm.neon.vmulp.
rm.neon.vmullu.
rm.neon.vmulls.
rm.neon.vmullp.
rm.neon.vminu.
rm.neon.vmins.
rm.neon.vminnm.
rm.neon.vmaxu.
rm.neon.vmaxs.
rm.neon.vmaxnm.
rm.neon.vld4lane.
rm.neon.vld4.
rm.neon.vld3lane.
rm.neon.vld3.
rm.neon.vld2lane.
rm.neon.vld2.
rm.neon.vld1.
rm.neon.vhsubu.
rm.neon.vhsubs.
rm.neon.vhaddu.
rm.neon.vhadds.
rm.neon.vcvtpu.
rm.neon.vcvtps.
rm.neon.vcvtnu.
rm.neon.vcvtns.
rm.neon.vcvtmu.
rm.neon.vcvtms.
rm.neon.vcvtfxu2fp.
rm.neon.vcvtfxs2fp.
rm.neon.vcvtfp2fxu.
rm.neon.vcvtfp2fxs.
rm.neon.vcvtau.
rm.neon.vcvtas.
rm.neon.vcnt.
rm.neon.vclz.
rm.neon.vcls.
rm.neon.vbsl.
rm.neon.vacgt.
rm.neon.vacge.
rm.neon.vabs.
rm.neon.vabdu.
rm.neon.vabds.
rm.ldrex.
rm.ldaex.
nnotation.
arch64.udiv.
arch64.stxr.
arch64.stlxr.
arch64.sisd.fabd.
arch64.sdiv.
arch64.rbit.
arch64.neon.vsri.
arch64.neon.vsli.
arch64.neon.vcvtfxu2fp.
arch64.neon.vcvtfxs2fp.
arch64.neon.vcvtfp2fxu.
arch64.neon.vcvtfp2fxs.
arch64.neon.vcopy.lane.
arch64.neon.usqadd.
arch64.neon.ushll.
arch64.neon.ushl.
arch64.neon.ursqrte.
arch64.neon.urshl.
arch64.neon.urhadd.
arch64.neon.urecpe.
arch64.neon.uqxtn.
arch64.neon.uqsub.
arch64.neon.uqshrn.
arch64.neon.uqshl.
arch64.neon.uqrshrn.
arch64.neon.uqrshl.
arch64.neon.uqadd.
arch64.neon.umull.
arch64.neon.uminv.
arch64.neon.uminp.
arch64.neon.umin.
arch64.neon.umaxv.
arch64.neon.umaxp.
arch64.neon.umax.
arch64.neon.uhsub.
arch64.neon.uhadd.
arch64.neon.uaddv.
arch64.neon.uaddlv.
arch64.neon.uaddlp.
arch64.neon.uabd.
arch64.neon.tbx4.
arch64.neon.tbx3.
arch64.neon.tbx2.
arch64.neon.tbx1.
arch64.neon.tbl4.
arch64.neon.tbl3.
arch64.neon.tbl2.
arch64.neon.tbl1.
arch64.neon.suqadd.
arch64.neon.subhn.
arch64.neon.st4lane.
arch64.neon.st4.
arch64.neon.st3lane.
arch64.neon.st3.
arch64.neon.st2lane.
arch64.neon.st2.
arch64.neon.st1x4.
arch64.neon.st1x3.
arch64.neon.st1x2.
arch64.neon.sshll.
arch64.neon.sshl.
arch64.neon.srshl.
arch64.neon.srhadd.
arch64.neon.sqxtun.
arch64.neon.sqxtn.
arch64.neon.sqsub.
arch64.neon.sqshrun.
arch64.neon.sqshrn.
arch64.neon.sqshlu.
arch64.neon.sqshl.
arch64.neon.sqrshrun.
arch64.neon.sqrshrn.
arch64.neon.sqrshl.
arch64.neon.sqrdmulh.
arch64.neon.sqneg.
arch64.neon.sqdmull.
arch64.neon.sqdmulh.
arch64.neon.sqadd.
arch64.neon.sqabs.
arch64.neon.smull.
arch64.neon.sminv.
arch64.neon.sminp.
arch64.neon.smin.
arch64.neon.smaxv.
arch64.neon.smaxp.
arch64.neon.smax.
arch64.neon.shsub.
arch64.neon.shll.
arch64.neon.shadd.
arch64.neon.scalar.uqxtn.
arch64.neon.scalar.sqxtun.
arch64.neon.scalar.sqxtn.
arch64.neon.saddv.
arch64.neon.saddlv.
arch64.neon.saddlp.
arch64.neon.sabd.
arch64.neon.rsubhn.
arch64.neon.rshrn.
arch64.neon.rbit.
arch64.neon.raddhn.
arch64.neon.pmull.
arch64.neon.pmul.
arch64.neon.ld4r.
arch64.neon.ld4lane.
arch64.neon.ld4.
arch64.neon.ld3r.
arch64.neon.ld3lane.
arch64.neon.ld3.
arch64.neon.ld2r.
arch64.neon.ld2lane.
arch64.neon.ld2.
arch64.neon.ld1x4.
arch64.neon.ld1x3.
arch64.neon.ld1x2.
arch64.neon.frsqrts.
arch64.neon.frsqrte.
arch64.neon.frintn.
arch64.neon.frecpx.
arch64.neon.frecps.
arch64.neon.frecpe.
arch64.neon.fmulx.
arch64.neon.fminv.
arch64.neon.fminp.
arch64.neon.fminnmv.
arch64.neon.fminnmp.
arch64.neon.fminnm.
arch64.neon.fmin.
arch64.neon.fmaxv.
arch64.neon.fmaxp.
arch64.neon.fmaxnmv.
arch64.neon.fmaxnmp.
arch64.neon.fmaxnm.
arch64.neon.fmax.
arch64.neon.fcvtzu.
arch64.neon.fcvtzs.
arch64.neon.fcvtxn.
arch64.neon.fcvtpu.
arch64.neon.fcvtps.
arch64.neon.fcvtnu.
arch64.neon.fcvtns.
arch64.neon.fcvtmu.
arch64.neon.fcvtms.
arch64.neon.fcvtau.
arch64.neon.fcvtas.
arch64.neon.faddv.
arch64.neon.facgt.
arch64.neon.facge.
arch64.neon.fabd.
arch64.neon.cls.
arch64.neon.addp.
arch64.neon.addhn.
arch64.neon.abs.
arch64.ldxr.
arch64.ldaxr.
ssume
lrex
crr2
pace
rc32
rch64.
m.crc32c
arch64.
daxp
tlxp
et.fpscr
eon.aes
ndefined
rch64.crc32
m.neon.
esmc
rch64.crc32c
m.neon.aesimc
rm.neon.sha
just.trampoline
m.neon.sha256h2
eon.
ha256su
p2hf
f2fp
hread.pointer
rypto.aes
isd.fcvtxn
rypto.
eon.pmull64
arch64.crypto.aesimc
rypto.sha
eon.vcvt
arch64.crypto.sha256h2
arch64.crypto.sha256su
arch64.neon.sqdmulls.scalar
swap.
ttz.
tpop.
tlz.
opysign.
onvertuu.
onvertus.
onvertuif.
onvertsu.
onvertss.
onvertsif.
onvertfui.
onvertfsi.
onvertff.
onvert.to.fp16.
onvert.from.fp16.
eil.
lear_cache
uda.syncthreads
g.value
bugtrap
nothing
bg.declare
xpect.
xp2.
warf.cfa
jlj.lsda
eturn.i
ypeid.for
jlj.setjmp
nwind.init
h.sjlj.longjmp
h.sjlj.callsite
xperimental.stackmap
h.sjlj.functioncontext
xperimental.patchpoint.i64
xperimental.patchpoint.void
muladd.
loor.
abs.
lt.rounds
rameaddress
cwrite
exagon.
2.or
.orn
.lsli
.andnp
.or.or
ccii
pyui
acci
mac2
r.or
mpyw
2.brevp
irc.ldd
ssat
dsat
egsat
bsat
cmpeq
nd.or
accii
ubacc
raddh
pmpyh
or.or
nsert
ackhl
negh
r.ori
arity
ddpsat
avgh
ubhs
ddub
adub
mpbgt
itpack
r.andn
pyu.up
ac2es
adduh
or.and
lbnorm
nsertp
arityp
sathb
cnegh
ddaddi
lbaddi
xtract
r.andi
ubaddi
ombinew
oundsat
dduhs
ubuhs
itsplit
gtui
odwrapu
mpneqi
und.r
lbmatch
.vaddhubs
.bitsclri
nd.andn
mplteui
bits
a.sc
acs.s
ysu.up
c.s0
y.s0
or.xacc
cbsu
ybsu
lrbit.
xtractu
.r.v
tbit.
sathub
stbit.
lign
rotate
platr
xtractp
r.andix
ombineii
ddb.map
ubb.map
itspliti
mbine
ound.r
.pxfer.map
.nbitsclri
onv.
.lib
csc.s
acsc.s
mmpy
p.s1
bsdiff
cs.s
ys.s
c2s.s
y2s.s
.whc
mpyw.acc
xtractup
nsert.rp
splice
tstbit.
crotate
ddsub
ubadd
.popcountp
2.combine.
2.conv.
mpyrsc.s
pmpy
s.s0
u.s0
.rs1
s.rs
mpyrs.s
.add
mpyh.acc
ertp.rp
erleave
rndpackwh
xtract.rp
sl.ri
sr.ri
ddsubhr
ubaddhr
.asrhub.sat
ddh.
ubh.
ddub.acc
adub.acc
oundscheck
cmpbeq.any
4.fastcorner9
yud.
.s0c
dasl.rrri
xtractu.rp
ogglebit.
rndpackwhs
xtractp.rp
ubi.
4.round.r
.sat
2.vrcmpys.s1rp
sl.i.
.xacc
einterleave
xtractup.rp
sr.i.
p.s1.sat
mpy2s.s
pack
c.up.s1.sat
yri.addr.u2
ac.up.s1.sat
.vsat
b.nopack
h.nopack
.vrcrotate.acc
.to.SXTHI.asrh
.chop
cc.s0
ac.s0
nd.s0
c.s0.sat.
.sat.
cmpys.acc.s1
.vrmpy
h.acc.s
.svw.trun
ub.nopack
uh.nopack
16.sat.
4.fastcorner9.not
2.mpyud.
exagon.M2.mpy.
cc.sat.
ac.sat.
at.rnd.
exagon.S5.vasrhrnd.goodsyntax
exagon.S2.tableidx
.goodsyntax
exagon.S2.asr.i.
.rnd.goodsyntax
exagon.S5.asrhub.rnd.sat.goodsyntax
nvariant.end
t.trampoline
ariant.start
nstrprof.increment
og2.
og10.
ongjmp
ifetime.end
ifetime.start
emset.
emmove.
emcpy.
ips.l
ips.
or.v
ri.b
ddsp
rdsp
di.b
pend
trev
cmsa
hlip
cnt.
shf.
ori.b
lri.
nzi.b
egi.
int.
sve.
ubv.
l.q.
epend
epl.
lat.
sq.s.w
h.qb
osge32
.w.ph
xtr.
lass.
x.a.
n.a.
sqrt.
nsert.
d.q.
ub.q.
s.ph
.s.w
l.s.w
a.r.w
lati.
sq.s.
.r.w
q.ph
xtr.rs.w
ddr.q.
ubr.q.
ackrl.ph
l.s.ph
a.r.
h.r.ph
h.r.qb
mpu.
q.qb
u.h.qb
trunc.
.rs.ph
a.w.ph
addu.w.qb
mpgu.
w.ph
.l.w
aq.s.w.ph
recr
qb.ph
.ph.w
mpgdu.
qx.s.w.ph
aq.sa.w.ph
q.w.ph
q.qb.ph
qx.sa.w.ph
q.s.w.ph
receu.ph.qb
uleu.s.ph.qb
u.ph.qb
.ph.qb
sra.ph.w
.rs.ph.w
ips.prec
qu.ph.qb
qu.s.qb.ph
ips.precr.sra.r.ph.w
vvm.texsurf.handle.internal.
vvm.texsurf.handle.
vvm.reflect.
vvm.ptr.shared.to.gen.
vvm.ptr.local.to.gen.
vvm.ptr.global.to.gen.
vvm.ptr.gen.to.shared.
vvm.ptr.gen.to.param.
vvm.ptr.gen.to.local.
vvm.ptr.gen.to.global.
vvm.ptr.gen.to.constant.
vvm.ptr.constant.to.gen.
vvm.move.ptr.
vvm.ldu.global.p.
vvm.ldu.global.i.
vvm.ldu.global.f.
vvm.ldg.global.p.
vvm.ldg.global.i.
vvm.ldg.global.f.
vvm.compiler.warn.
vvm.compiler.error.
vvm.atomic.load.inc.32.
vvm.atomic.load.dec.32.
vvm.atomic.load.add.f32.
earbyint.
vvm.h2f
vvm.prmt
vvm.
bs.i
lz.i
ad.i
bs.ll
z.ll
opc.i
d.ui
rt.f
oor.
x.ull
n.ull
opc.ll
ound.
runc.
dd.r
arrier0
ull.r
ohi.i2d
ve.i
4.ui
cp.r
mbar.gl
lhi.ull
rt.r
epth
idth
eil.ftz.f
2f.r
.ftz
.rn.ftz
bs.ftz.f
x.ftz.f
n.ftz.f
mbar.
ve.float
otate.b
turate.
q.height
xq.height
rrier0.or
tcast.
oor.ftz.f
ove.double
ound.ftz.f
runc.ftz.f
.ftz.f
rrier0.and
os.approx.f
pprox.f
x2.approx.
g2.approx.
ul.r
in.approx.f
arrier0.popc
qrt.
sspacep.
onst
ocal
sqrt.approx.
turate.ftz.f
q.array.size
ap.lo.hi.b64
xq.array.size
pacep.
lobal
hared
ypep.
mpler
rface
exture
uld.
d.i8.
xq.num.samples
os.approx.ftz.f
iv.approx.ftz.f
x2.approx.ftz.f
g2.approx.ftz.f
p.approx.ftz.d
tate.right.b64
n.approx.ftz.f
.clamp
d.v4
rt.approx.ftz.f
6.clamp
2.clamp
4.clamp
.channel.order
d.i8.trap
xq.channel.order
sqrt.approx.ftz.f
6.trap
2.trap
ex.cube.v4
32.f32
ead.ptx.sreg.tid.
i8.trap
ld4.
.2d.v4
ead.ptx.sreg.ntid.
ust.
ead.ptx.sreg.
taid.
nvreg
d.array.i8.
.channel.data.type
t.b.
d.grad.v4
hannel.data.type
um.mipmap.levels
ctaid.
arpsize
d.array.i
rray.v4
evel.v4
d.level.v4
vvm.su
d.array.
d.array.i8.trap
d.array.v
ube.
nified.
ex.unified.cube.v4
ust.b.
d.array.grad.v4
d4.unified.
vvm.tex.
d.array.level.v4
vvm.tex.unified.
ube.array.level.v4
vvm.tex.unified.cube.
vvm.tex.unified.cube.array.level.v4
bjectsize.
tr.annotation.
pc.mtctr.
owi.
marker
efetch
pc.dcb
pc.dcbtst
ar.sync
ead.pm
tx.read.smid
tx.read.
smid
c.altivec.
x.read.
ridid
aneid
tid.
arpid
ock64
aid.
warpid
stst
tvxl
x.read.nctaid.
pc.altivec.
vscr
pc.altivec.v
mpbfp
ogefp
ddfp
c.altivec.v
xptefp
msubfp
x.read.lanemask.
mpbfp.p
addshs
adduhm
sqrtefp
fp.p
hraddshs
pc.is.decremented.ctr.nonzero
ead_register.
eturnaddress
00.read.tgid.
adcyclecounter
600.read.tidig.
600.read.ngroups.
600.read.local.size.
600.read.global.size.
sub.with.overflow.
mul.with.overflow.
add.with.overflow.
etjmp
gsetjmp
acksave
iglongjmp
tackrestore
tackprotector
tackprotectorcheck
a_end
a_copy
a_start
ar.annotation
rite_register.
core.testwct.
core.testct.
core.syncr.
core.setv.
core.settw.
core.setrdy.
core.setpt.
core.setpsc.
core.setev.
core.setd.
core.setclk.
core.setc.
core.peek.
core.outt.
core.outshr.
core.outct.
core.out.
core.msync.
core.mjoin.
core.int.
core.inshr.
core.initsp.
core.initpc.
core.initlr.
core.initdp.
core.initcp.
core.inct.
core.in.
core.getts.
core.getst.
core.getr.
core.freer.
core.endin.
core.eeu.
core.edu.
core.clrpt.
core.chkct.
86.int
86.xend
test
dtscp
bort
egin
ore.
6.mmx.por
ha1msg
ore.bitrev
emms
andn
clmulqdq
and.
eed.
exte
nds4
vx2.permd
mx.p
a256msg
dd.ss
iv.ss
l.ss
ence
b.ss
.pause
.mwait
1.dpp
op.vp
dnow.p
vx2.p
rmps
zhi.
dds.
xtr.w
nsr.w
d.bw
sbase.
a256rnds2
dmxcsr
shuf.w
mxcsr
dd.sd
iv.sd
l.sd
ub.sd
.ldu.dq
a.extrq
ore.waitevent
dnow
pfsubr
sni.aes
vzeroall
psadbw
lendw
uf.b
12.kor.w
mi.bextr.
skmovq
vnt.dq
dus.
dd.wd
vmskb
ubus.
lflush
lh.w
uf.d
dd.p
ub.p
onitor
.extrqi
e3.pabs.
op.v
rcz.
ore.checkevent
vgusb
ulhrw
nacc
wapd
p.ps.256
ovntdqa
lendvb
dd.sw
ub.sw
12.k
nd.w
ot.w
or.w
ma.vfm
lignr.b
npck
q.ss
s2si
ovmsk.ps
toreu.ps
ddus.
bus.
lendp
blendw
.insertq
e3.p
cvtp
2ps.
2ph.
addu
cswd
qit1
.pfpnacc
mp.p
.256
du.dq.256
cp.ps.256
zeroupper
ndn.w
nor.w
l.dq
qrt.s
ma.vfnm
mineq.ss
642ss
2si64
comi
q.sd
d2si
ovmsk.pd
tore
.addsub.p
lendvp
nsertps
ckusdw
estnzc
nsertqi
ovnt.s
e3.ph
bm.bextri.u
mov.256
rmil2p
ssdq
csswd
askload.p
qrt.p
testnzc.p
ather.
askload.
ul.hr.sw
l.dq.bs
perm2i128
movzx
vttss2si64
comineq.ss
mineq.sd
642sd
1.extractps
eclast
nclast
lend.p
askstore.p
testnzc.256
und.p
qrt.ps.256
askstore.
lendd.
add.ub.sw
v.d.256
inserti128
2usi
si2s
unpck.bw
ddsub.p
ubadd.p
vttsd2si64
askmov.dqu
comineq.sd
.phminposuw
.crc32.32.8
.128
op.vfrcz.p
lendv.p
2dq.256
q2.p
ovmsk.p
toreu.
q.256
ermilvar.p
.vextracti128
vtts
ortest
w.128
b.128
swb.128
ovmskb.128
2.crc32.
4.64
uf.b.128
2.ps.256
2.pd.256
2usi64
si642s
ndscale.s
.512
42.pcmp
dd.sw.128
ub.sw.128
op.vpermil2p
broadcasti128
cp14.p
se42.pcmp
stri
maskstore.p
sse3.pmul.hr.sw.128
sni.aeskeygenassist
vperm
f128.
i.256
lvar.p
.vbroadcast.ss.ps
sqrt14.p
sse3.pmadd.ub.sw.128
vinsertf128.
ask.
catter.
ma.mask.vfm
vextractf128.
atherpf.
lend.
adu.
l.dq.512
ma.mask.vfnm
86.avx512.
q.512
s.512
2dq.512
oadu.p
mpeq.
ulu.dq.512
estm.
lign.
ermt.
catterpf.
broadcast.s
vbroadcastf128.p
.vbroadcast.s
.pd.256
.ps.256
12.mask.
2udq.512
dq2p
toreu.p
2ps.512
2ph.512
ermt.p
ask.c
nflict.
.i32.512
.i64.512
ask.rndscale.p
.pd.512
.ps.512
86.avx512.mask.pbroadcast.
.gpr.512
pr.512
em.512
not_intrinsic
llvm.AMDGPU.div.fixup
llvm.AMDGPU.div.fmas
llvm.AMDGPU.div.scale
llvm.AMDGPU.ldexp
llvm.AMDGPU.rcp
llvm.AMDGPU.rsq
llvm.AMDGPU.rsq.clamped
llvm.AMDGPU.trig.preop
llvm.aarch64.clrex
llvm.aarch64.crc32b
llvm.aarch64.crc32cb
llvm.aarch64.crc32ch
llvm.aarch64.crc32cw
llvm.aarch64.crc32cx
llvm.aarch64.crc32h
llvm.aarch64.crc32w
llvm.aarch64.crc32x
llvm.aarch64.crypto.aesd
llvm.aarch64.crypto.aese
llvm.aarch64.crypto.aesimc
llvm.aarch64.crypto.aesmc
llvm.aarch64.crypto.sha1c
llvm.aarch64.crypto.sha1h
llvm.aarch64.crypto.sha1m
llvm.aarch64.crypto.sha1p
llvm.aarch64.crypto.sha1su0
llvm.aarch64.crypto.sha1su1
llvm.aarch64.crypto.sha256h
llvm.aarch64.crypto.sha256h2
llvm.aarch64.crypto.sha256su0
llvm.aarch64.crypto.sha256su1
llvm.aarch64.dmb
llvm.aarch64.dsb
llvm.aarch64.hint
llvm.aarch64.isb
llvm.aarch64.ldaxp
llvm.aarch64.ldaxr
llvm.aarch64.ldxp
llvm.aarch64.ldxr
llvm.aarch64.neon.abs
llvm.aarch64.neon.addhn
llvm.aarch64.neon.addp
llvm.aarch64.neon.cls
llvm.aarch64.neon.fabd
llvm.aarch64.neon.facge
llvm.aarch64.neon.facgt
llvm.aarch64.neon.faddv
llvm.aarch64.neon.fcvtas
llvm.aarch64.neon.fcvtau
llvm.aarch64.neon.fcvtms
llvm.aarch64.neon.fcvtmu
llvm.aarch64.neon.fcvtns
llvm.aarch64.neon.fcvtnu
llvm.aarch64.neon.fcvtps
llvm.aarch64.neon.fcvtpu
llvm.aarch64.neon.fcvtxn
llvm.aarch64.neon.fcvtzs
llvm.aarch64.neon.fcvtzu
llvm.aarch64.neon.fmax
llvm.aarch64.neon.fmaxnm
llvm.aarch64.neon.fmaxnmp
llvm.aarch64.neon.fmaxnmv
llvm.aarch64.neon.fmaxp
llvm.aarch64.neon.fmaxv
llvm.aarch64.neon.fmin
llvm.aarch64.neon.fminnm
llvm.aarch64.neon.fminnmp
llvm.aarch64.neon.fminnmv
llvm.aarch64.neon.fminp
llvm.aarch64.neon.fminv
llvm.aarch64.neon.fmulx
llvm.aarch64.neon.frecpe
llvm.aarch64.neon.frecps
llvm.aarch64.neon.frecpx
llvm.aarch64.neon.frintn
llvm.aarch64.neon.frsqrte
llvm.aarch64.neon.frsqrts
llvm.aarch64.neon.ld1x2
llvm.aarch64.neon.ld1x3
llvm.aarch64.neon.ld1x4
llvm.aarch64.neon.ld2
llvm.aarch64.neon.ld2lane
llvm.aarch64.neon.ld2r
llvm.aarch64.neon.ld3
llvm.aarch64.neon.ld3lane
llvm.aarch64.neon.ld3r
llvm.aarch64.neon.ld4
llvm.aarch64.neon.ld4lane
llvm.aarch64.neon.ld4r
llvm.aarch64.neon.pmul
llvm.aarch64.neon.pmull
llvm.aarch64.neon.pmull64
llvm.aarch64.neon.raddhn
llvm.aarch64.neon.rbit
llvm.aarch64.neon.rshrn
llvm.aarch64.neon.rsubhn
llvm.aarch64.neon.sabd
llvm.aarch64.neon.saddlp
llvm.aarch64.neon.saddlv
llvm.aarch64.neon.saddv
llvm.aarch64.neon.scalar.sqxtn
llvm.aarch64.neon.scalar.sqxtun
llvm.aarch64.neon.scalar.uqxtn
llvm.aarch64.neon.shadd
llvm.aarch64.neon.shll
llvm.aarch64.neon.shsub
llvm.aarch64.neon.smax
llvm.aarch64.neon.smaxp
llvm.aarch64.neon.smaxv
llvm.aarch64.neon.smin
llvm.aarch64.neon.sminp
llvm.aarch64.neon.sminv
llvm.aarch64.neon.smull
llvm.aarch64.neon.sqabs
llvm.aarch64.neon.sqadd
llvm.aarch64.neon.sqdmulh
llvm.aarch64.neon.sqdmull
llvm.aarch64.neon.sqdmulls.scalar
llvm.aarch64.neon.sqneg
llvm.aarch64.neon.sqrdmulh
llvm.aarch64.neon.sqrshl
llvm.aarch64.neon.sqrshrn
llvm.aarch64.neon.sqrshrun
llvm.aarch64.neon.sqshl
llvm.aarch64.neon.sqshlu
llvm.aarch64.neon.sqshrn
llvm.aarch64.neon.sqshrun
llvm.aarch64.neon.sqsub
llvm.aarch64.neon.sqxtn
llvm.aarch64.neon.sqxtun
llvm.aarch64.neon.srhadd
llvm.aarch64.neon.srshl
llvm.aarch64.neon.sshl
llvm.aarch64.neon.sshll
llvm.aarch64.neon.st1x2
llvm.aarch64.neon.st1x3
llvm.aarch64.neon.st1x4
llvm.aarch64.neon.st2
llvm.aarch64.neon.st2lane
llvm.aarch64.neon.st3
llvm.aarch64.neon.st3lane
llvm.aarch64.neon.st4
llvm.aarch64.neon.st4lane
llvm.aarch64.neon.subhn
llvm.aarch64.neon.suqadd
llvm.aarch64.neon.tbl1
llvm.aarch64.neon.tbl2
llvm.aarch64.neon.tbl3
llvm.aarch64.neon.tbl4
llvm.aarch64.neon.tbx1
llvm.aarch64.neon.tbx2
llvm.aarch64.neon.tbx3
llvm.aarch64.neon.tbx4
llvm.aarch64.neon.uabd
llvm.aarch64.neon.uaddlp
llvm.aarch64.neon.uaddlv
llvm.aarch64.neon.uaddv
llvm.aarch64.neon.uhadd
llvm.aarch64.neon.uhsub
llvm.aarch64.neon.umax
llvm.aarch64.neon.umaxp
llvm.aarch64.neon.umaxv
llvm.aarch64.neon.umin
llvm.aarch64.neon.uminp
llvm.aarch64.neon.uminv
llvm.aarch64.neon.umull
llvm.aarch64.neon.uqadd
llvm.aarch64.neon.uqrshl
llvm.aarch64.neon.uqrshrn
llvm.aarch64.neon.uqshl
llvm.aarch64.neon.uqshrn
llvm.aarch64.neon.uqsub
llvm.aarch64.neon.uqxtn
llvm.aarch64.neon.urecpe
llvm.aarch64.neon.urhadd
llvm.aarch64.neon.urshl
llvm.aarch64.neon.ursqrte
llvm.aarch64.neon.ushl
llvm.aarch64.neon.ushll
llvm.aarch64.neon.usqadd
llvm.aarch64.neon.vcopy.lane
llvm.aarch64.neon.vcvtfp2fxs
llvm.aarch64.neon.vcvtfp2fxu
llvm.aarch64.neon.vcvtfp2hf
llvm.aarch64.neon.vcvtfxs2fp
llvm.aarch64.neon.vcvtfxu2fp
llvm.aarch64.neon.vcvthf2fp
llvm.aarch64.neon.vsli
llvm.aarch64.neon.vsri
llvm.aarch64.rbit
llvm.aarch64.sdiv
llvm.aarch64.sisd.fabd
llvm.aarch64.sisd.fcvtxn
llvm.aarch64.stlxp
llvm.aarch64.stlxr
llvm.aarch64.stxp
llvm.aarch64.stxr
llvm.aarch64.udiv
llvm.adjust.trampoline
llvm.annotation
llvm.arm.cdp
llvm.arm.cdp2
llvm.arm.clrex
llvm.arm.crc32b
llvm.arm.crc32cb
llvm.arm.crc32ch
llvm.arm.crc32cw
llvm.arm.crc32h
llvm.arm.crc32w
llvm.arm.dmb
llvm.arm.dsb
llvm.arm.get.fpscr
llvm.arm.hint
llvm.arm.isb
llvm.arm.ldaex
llvm.arm.ldaexd
llvm.arm.ldrex
llvm.arm.ldrexd
llvm.arm.mcr
llvm.arm.mcr2
llvm.arm.mcrr
llvm.arm.mcrr2
llvm.arm.mrc
llvm.arm.mrc2
llvm.arm.neon.aesd
llvm.arm.neon.aese
llvm.arm.neon.aesimc
llvm.arm.neon.aesmc
llvm.arm.neon.sha1c
llvm.arm.neon.sha1h
llvm.arm.neon.sha1m
llvm.arm.neon.sha1p
llvm.arm.neon.sha1su0
llvm.arm.neon.sha1su1
llvm.arm.neon.sha256h
llvm.arm.neon.sha256h2
llvm.arm.neon.sha256su0
llvm.arm.neon.sha256su1
llvm.arm.neon.vabds
llvm.arm.neon.vabdu
llvm.arm.neon.vabs
llvm.arm.neon.vacge
llvm.arm.neon.vacgt
llvm.arm.neon.vbsl
llvm.arm.neon.vcls
llvm.arm.neon.vclz
llvm.arm.neon.vcnt
llvm.arm.neon.vcvtas
llvm.arm.neon.vcvtau
llvm.arm.neon.vcvtfp2fxs
llvm.arm.neon.vcvtfp2fxu
llvm.arm.neon.vcvtfp2hf
llvm.arm.neon.vcvtfxs2fp
llvm.arm.neon.vcvtfxu2fp
llvm.arm.neon.vcvthf2fp
llvm.arm.neon.vcvtms
llvm.arm.neon.vcvtmu
llvm.arm.neon.vcvtns
llvm.arm.neon.vcvtnu
llvm.arm.neon.vcvtps
llvm.arm.neon.vcvtpu
llvm.arm.neon.vhadds
llvm.arm.neon.vhaddu
llvm.arm.neon.vhsubs
llvm.arm.neon.vhsubu
llvm.arm.neon.vld1
llvm.arm.neon.vld2
llvm.arm.neon.vld2lane
llvm.arm.neon.vld3
llvm.arm.neon.vld3lane
llvm.arm.neon.vld4
llvm.arm.neon.vld4lane
llvm.arm.neon.vmaxnm
llvm.arm.neon.vmaxs
llvm.arm.neon.vmaxu
llvm.arm.neon.vminnm
llvm.arm.neon.vmins
llvm.arm.neon.vminu
llvm.arm.neon.vmullp
llvm.arm.neon.vmulls
llvm.arm.neon.vmullu
llvm.arm.neon.vmulp
llvm.arm.neon.vpadals
llvm.arm.neon.vpadalu
llvm.arm.neon.vpadd
llvm.arm.neon.vpaddls
llvm.arm.neon.vpaddlu
llvm.arm.neon.vpmaxs
llvm.arm.neon.vpmaxu
llvm.arm.neon.vpmins
llvm.arm.neon.vpminu
llvm.arm.neon.vqabs
llvm.arm.neon.vqadds
llvm.arm.neon.vqaddu
llvm.arm.neon.vqdmulh
llvm.arm.neon.vqdmull
llvm.arm.neon.vqmovns
llvm.arm.neon.vqmovnsu
llvm.arm.neon.vqmovnu
llvm.arm.neon.vqneg
llvm.arm.neon.vqrdmulh
llvm.arm.neon.vqrshiftns
llvm.arm.neon.vqrshiftnsu
llvm.arm.neon.vqrshiftnu
llvm.arm.neon.vqrshifts
llvm.arm.neon.vqrshiftu
llvm.arm.neon.vqshiftns
llvm.arm.neon.vqshiftnsu
llvm.arm.neon.vqshiftnu
llvm.arm.neon.vqshifts
llvm.arm.neon.vqshiftsu
llvm.arm.neon.vqshiftu
llvm.arm.neon.vqsubs
llvm.arm.neon.vqsubu
llvm.arm.neon.vraddhn
llvm.arm.neon.vrecpe
llvm.arm.neon.vrecps
llvm.arm.neon.vrhadds
llvm.arm.neon.vrhaddu
llvm.arm.neon.vrinta
llvm.arm.neon.vrintm
llvm.arm.neon.vrintn
llvm.arm.neon.vrintp
llvm.arm.neon.vrintx
llvm.arm.neon.vrintz
llvm.arm.neon.vrshiftn
llvm.arm.neon.vrshifts
llvm.arm.neon.vrshiftu
llvm.arm.neon.vrsqrte
llvm.arm.neon.vrsqrts
llvm.arm.neon.vrsubhn
llvm.arm.neon.vshiftins
llvm.arm.neon.vshifts
llvm.arm.neon.vshiftu
llvm.arm.neon.vst1
llvm.arm.neon.vst2
llvm.arm.neon.vst2lane
llvm.arm.neon.vst3
llvm.arm.neon.vst3lane
llvm.arm.neon.vst4
llvm.arm.neon.vst4lane
llvm.arm.neon.vtbl1
llvm.arm.neon.vtbl2
llvm.arm.neon.vtbl3
llvm.arm.neon.vtbl4
llvm.arm.neon.vtbx1
llvm.arm.neon.vtbx2
llvm.arm.neon.vtbx3
llvm.arm.neon.vtbx4
llvm.arm.qadd
llvm.arm.qsub
llvm.arm.rbit
llvm.arm.set.fpscr
llvm.arm.space
llvm.arm.ssat
llvm.arm.stlex
llvm.arm.stlexd
llvm.arm.strex
llvm.arm.strexd
llvm.arm.thread.pointer
llvm.arm.undefined
llvm.arm.usat
llvm.arm.vcvtr
llvm.arm.vcvtru
llvm.assume
llvm.bswap
llvm.ceil
llvm.clear_cache
llvm.convert.from.fp16
llvm.convert.to.fp16
llvm.convertff
llvm.convertfsi
llvm.convertfui
llvm.convertsif
llvm.convertss
llvm.convertsu
llvm.convertuif
llvm.convertus
llvm.convertuu
llvm.copysign
llvm.cos
llvm.ctlz
llvm.ctpop
llvm.cttz
llvm.cuda.syncthreads
llvm.debugtrap
llvm.donothing
llvm.eh.dwarf.cfa
llvm.eh.return.i32
llvm.eh.return.i64
llvm.eh.sjlj.callsite
llvm.eh.sjlj.functioncontext
llvm.eh.sjlj.longjmp
llvm.eh.sjlj.lsda
llvm.eh.sjlj.setjmp
llvm.eh.typeid.for
llvm.eh.unwind.init
llvm.exp
llvm.exp2
llvm.expect
llvm.experimental.patchpoint.i64
llvm.experimental.patchpoint.void
llvm.experimental.stackmap
llvm.fabs
llvm.floor
llvm.flt.rounds
llvm.fma
llvm.fmuladd
llvm.frameaddress
llvm.gcread
llvm.gcroot
llvm.gcwrite
llvm.hexagon.A2.abs
llvm.hexagon.A2.absp
llvm.hexagon.A2.abssat
llvm.hexagon.A2.add
llvm.hexagon.A2.addh.h16.hh
llvm.hexagon.A2.addh.h16.hl
llvm.hexagon.A2.addh.h16.lh
llvm.hexagon.A2.addh.h16.ll
llvm.hexagon.A2.addh.h16.sat.hh
llvm.hexagon.A2.addh.h16.sat.hl
llvm.hexagon.A2.addh.h16.sat.lh
llvm.hexagon.A2.addh.h16.sat.ll
llvm.hexagon.A2.addh.l16.hl
llvm.hexagon.A2.addh.l16.ll
llvm.hexagon.A2.addh.l16.sat.hl
llvm.hexagon.A2.addh.l16.sat.ll
llvm.hexagon.A2.addi
llvm.hexagon.A2.addp
llvm.hexagon.A2.addpsat
llvm.hexagon.A2.addsat
llvm.hexagon.A2.addsp
llvm.hexagon.A2.and
llvm.hexagon.A2.andir
llvm.hexagon.A2.andp
llvm.hexagon.A2.aslh
llvm.hexagon.A2.asrh
llvm.hexagon.A2.combine.hh
llvm.hexagon.A2.combine.hl
llvm.hexagon.A2.combine.lh
llvm.hexagon.A2.combine.ll
llvm.hexagon.A2.combineii
llvm.hexagon.A2.combinew
llvm.hexagon.A2.max
llvm.hexagon.A2.maxp
llvm.hexagon.A2.maxu
llvm.hexagon.A2.maxup
llvm.hexagon.A2.min
llvm.hexagon.A2.minp
llvm.hexagon.A2.minu
llvm.hexagon.A2.minup
llvm.hexagon.A2.neg
llvm.hexagon.A2.negp
llvm.hexagon.A2.negsat
llvm.hexagon.A2.not
llvm.hexagon.A2.notp
llvm.hexagon.A2.or
llvm.hexagon.A2.orir
llvm.hexagon.A2.orp
llvm.hexagon.A2.roundsat
llvm.hexagon.A2.sat
llvm.hexagon.A2.satb
llvm.hexagon.A2.sath
llvm.hexagon.A2.satub
llvm.hexagon.A2.satuh
llvm.hexagon.A2.sub
llvm.hexagon.A2.subh.h16.hh
llvm.hexagon.A2.subh.h16.hl
llvm.hexagon.A2.subh.h16.lh
llvm.hexagon.A2.subh.h16.ll
llvm.hexagon.A2.subh.h16.sat.hh
llvm.hexagon.A2.subh.h16.sat.hl
llvm.hexagon.A2.subh.h16.sat.lh
llvm.hexagon.A2.subh.h16.sat.ll
llvm.hexagon.A2.subh.l16.hl
llvm.hexagon.A2.subh.l16.ll
llvm.hexagon.A2.subh.l16.sat.hl
llvm.hexagon.A2.subh.l16.sat.ll
llvm.hexagon.A2.subp
llvm.hexagon.A2.subri
llvm.hexagon.A2.subsat
llvm.hexagon.A2.svaddh
llvm.hexagon.A2.svaddhs
llvm.hexagon.A2.svadduhs
llvm.hexagon.A2.svavgh
llvm.hexagon.A2.svavghs
llvm.hexagon.A2.svnavgh
llvm.hexagon.A2.svsubh
llvm.hexagon.A2.svsubhs
llvm.hexagon.A2.svsubuhs
llvm.hexagon.A2.swiz
llvm.hexagon.A2.sxtb
llvm.hexagon.A2.sxth
llvm.hexagon.A2.sxtw
llvm.hexagon.A2.tfr
llvm.hexagon.A2.tfrih
llvm.hexagon.A2.tfril
llvm.hexagon.A2.tfrp
llvm.hexagon.A2.tfrpi
llvm.hexagon.A2.tfrsi
llvm.hexagon.A2.vabsh
llvm.hexagon.A2.vabshsat
llvm.hexagon.A2.vabsw
llvm.hexagon.A2.vabswsat
llvm.hexagon.A2.vaddb.map
llvm.hexagon.A2.vaddh
llvm.hexagon.A2.vaddhs
llvm.hexagon.A2.vaddub
llvm.hexagon.A2.vaddubs
llvm.hexagon.A2.vadduhs
llvm.hexagon.A2.vaddw
llvm.hexagon.A2.vaddws
llvm.hexagon.A2.vavgh
llvm.hexagon.A2.vavghcr
llvm.hexagon.A2.vavghr
llvm.hexagon.A2.vavgub
llvm.hexagon.A2.vavgubr
llvm.hexagon.A2.vavguh
llvm.hexagon.A2.vavguhr
llvm.hexagon.A2.vavguw
llvm.hexagon.A2.vavguwr
llvm.hexagon.A2.vavgw
llvm.hexagon.A2.vavgwcr
llvm.hexagon.A2.vavgwr
llvm.hexagon.A2.vcmpbeq
llvm.hexagon.A2.vcmpbgtu
llvm.hexagon.A2.vcmpheq
llvm.hexagon.A2.vcmphgt
llvm.hexagon.A2.vcmphgtu
llvm.hexagon.A2.vcmpweq
llvm.hexagon.A2.vcmpwgt
llvm.hexagon.A2.vcmpwgtu
llvm.hexagon.A2.vconj
llvm.hexagon.A2.vmaxb
llvm.hexagon.A2.vmaxh
llvm.hexagon.A2.vmaxub
llvm.hexagon.A2.vmaxuh
llvm.hexagon.A2.vmaxuw
llvm.hexagon.A2.vmaxw
llvm.hexagon.A2.vminb
llvm.hexagon.A2.vminh
llvm.hexagon.A2.vminub
llvm.hexagon.A2.vminuh
llvm.hexagon.A2.vminuw
llvm.hexagon.A2.vminw
llvm.hexagon.A2.vnavgh
llvm.hexagon.A2.vnavghcr
llvm.hexagon.A2.vnavghr
llvm.hexagon.A2.vnavgw
llvm.hexagon.A2.vnavgwcr
llvm.hexagon.A2.vnavgwr
llvm.hexagon.A2.vraddub
llvm.hexagon.A2.vraddub.acc
llvm.hexagon.A2.vrsadub
llvm.hexagon.A2.vrsadub.acc
llvm.hexagon.A2.vsubb.map
llvm.hexagon.A2.vsubh
llvm.hexagon.A2.vsubhs
llvm.hexagon.A2.vsubub
llvm.hexagon.A2.vsububs
llvm.hexagon.A2.vsubuhs
llvm.hexagon.A2.vsubw
llvm.hexagon.A2.vsubws
llvm.hexagon.A2.xor
llvm.hexagon.A2.xorp
llvm.hexagon.A2.zxtb
llvm.hexagon.A2.zxth
llvm.hexagon.A4.andn
llvm.hexagon.A4.andnp
llvm.hexagon.A4.bitsplit
llvm.hexagon.A4.bitspliti
llvm.hexagon.A4.boundscheck
llvm.hexagon.A4.cmpbeq
llvm.hexagon.A4.cmpbeqi
llvm.hexagon.A4.cmpbgt
llvm.hexagon.A4.cmpbgti
llvm.hexagon.A4.cmpbgtu
llvm.hexagon.A4.cmpbgtui
llvm.hexagon.A4.cmpheq
llvm.hexagon.A4.cmpheqi
llvm.hexagon.A4.cmphgt
llvm.hexagon.A4.cmphgti
llvm.hexagon.A4.cmphgtu
llvm.hexagon.A4.cmphgtui
llvm.hexagon.A4.combineir
llvm.hexagon.A4.combineri
llvm.hexagon.A4.cround.ri
llvm.hexagon.A4.cround.rr
llvm.hexagon.A4.modwrapu
llvm.hexagon.A4.orn
llvm.hexagon.A4.ornp
llvm.hexagon.A4.rcmpeq
llvm.hexagon.A4.rcmpeqi
llvm.hexagon.A4.rcmpneq
llvm.hexagon.A4.rcmpneqi
llvm.hexagon.A4.round.ri
llvm.hexagon.A4.round.ri.sat
llvm.hexagon.A4.round.rr
llvm.hexagon.A4.round.rr.sat
llvm.hexagon.A4.tlbmatch
llvm.hexagon.A4.vcmpbeq.any
llvm.hexagon.A4.vcmpbeqi
llvm.hexagon.A4.vcmpbgt
llvm.hexagon.A4.vcmpbgti
llvm.hexagon.A4.vcmpbgtui
llvm.hexagon.A4.vcmpheqi
llvm.hexagon.A4.vcmphgti
llvm.hexagon.A4.vcmphgtui
llvm.hexagon.A4.vcmpweqi
llvm.hexagon.A4.vcmpwgti
llvm.hexagon.A4.vcmpwgtui
llvm.hexagon.A4.vrmaxh
llvm.hexagon.A4.vrmaxuh
llvm.hexagon.A4.vrmaxuw
llvm.hexagon.A4.vrmaxw
llvm.hexagon.A4.vrminh
llvm.hexagon.A4.vrminuh
llvm.hexagon.A4.vrminuw
llvm.hexagon.A4.vrminw
llvm.hexagon.A5.vaddhubs
llvm.hexagon.C2.all8
llvm.hexagon.C2.and
llvm.hexagon.C2.andn
llvm.hexagon.C2.any8
llvm.hexagon.C2.bitsclr
llvm.hexagon.C2.bitsclri
llvm.hexagon.C2.bitsset
llvm.hexagon.C2.cmpeq
llvm.hexagon.C2.cmpeqi
llvm.hexagon.C2.cmpeqp
llvm.hexagon.C2.cmpgei
llvm.hexagon.C2.cmpgeui
llvm.hexagon.C2.cmpgt
llvm.hexagon.C2.cmpgti
llvm.hexagon.C2.cmpgtp
llvm.hexagon.C2.cmpgtu
llvm.hexagon.C2.cmpgtui
llvm.hexagon.C2.cmpgtup
llvm.hexagon.C2.cmplt
llvm.hexagon.C2.cmpltu
llvm.hexagon.C2.mask
llvm.hexagon.C2.mux
llvm.hexagon.C2.muxii
llvm.hexagon.C2.muxir
llvm.hexagon.C2.muxri
llvm.hexagon.C2.not
llvm.hexagon.C2.or
llvm.hexagon.C2.orn
llvm.hexagon.C2.pxfer.map
llvm.hexagon.C2.tfrpr
llvm.hexagon.C2.tfrrp
llvm.hexagon.C2.vitpack
llvm.hexagon.C2.vmux
llvm.hexagon.C2.xor
llvm.hexagon.C4.and.and
llvm.hexagon.C4.and.andn
llvm.hexagon.C4.and.or
llvm.hexagon.C4.and.orn
llvm.hexagon.C4.cmplte
llvm.hexagon.C4.cmpltei
llvm.hexagon.C4.cmplteu
llvm.hexagon.C4.cmplteui
llvm.hexagon.C4.cmpneq
llvm.hexagon.C4.cmpneqi
llvm.hexagon.C4.fastcorner9
llvm.hexagon.C4.fastcorner9.not
llvm.hexagon.C4.nbitsclr
llvm.hexagon.C4.nbitsclri
llvm.hexagon.C4.nbitsset
llvm.hexagon.C4.or.and
llvm.hexagon.C4.or.andn
llvm.hexagon.C4.or.or
llvm.hexagon.C4.or.orn
llvm.hexagon.F2.conv.d2df
llvm.hexagon.F2.conv.d2sf
llvm.hexagon.F2.conv.df2d
llvm.hexagon.F2.conv.df2d.chop
llvm.hexagon.F2.conv.df2sf
llvm.hexagon.F2.conv.df2ud
llvm.hexagon.F2.conv.df2ud.chop
llvm.hexagon.F2.conv.df2uw
llvm.hexagon.F2.conv.df2uw.chop
llvm.hexagon.F2.conv.df2w
llvm.hexagon.F2.conv.df2w.chop
llvm.hexagon.F2.conv.sf2d
llvm.hexagon.F2.conv.sf2d.chop
llvm.hexagon.F2.conv.sf2df
llvm.hexagon.F2.conv.sf2ud
llvm.hexagon.F2.conv.sf2ud.chop
llvm.hexagon.F2.conv.sf2uw
llvm.hexagon.F2.conv.sf2uw.chop
llvm.hexagon.F2.conv.sf2w
llvm.hexagon.F2.conv.sf2w.chop
llvm.hexagon.F2.conv.ud2df
llvm.hexagon.F2.conv.ud2sf
llvm.hexagon.F2.conv.uw2df
llvm.hexagon.F2.conv.uw2sf
llvm.hexagon.F2.conv.w2df
llvm.hexagon.F2.conv.w2sf
llvm.hexagon.F2.dfadd
llvm.hexagon.F2.dfclass
llvm.hexagon.F2.dfcmpeq
llvm.hexagon.F2.dfcmpge
llvm.hexagon.F2.dfcmpgt
llvm.hexagon.F2.dfcmpuo
llvm.hexagon.F2.dffixupd
llvm.hexagon.F2.dffixupn
llvm.hexagon.F2.dffixupr
llvm.hexagon.F2.dffma
llvm.hexagon.F2.dffma.lib
llvm.hexagon.F2.dffma.sc
llvm.hexagon.F2.dffms
llvm.hexagon.F2.dffms.lib
llvm.hexagon.F2.dfimm.n
llvm.hexagon.F2.dfimm.p
llvm.hexagon.F2.dfmax
llvm.hexagon.F2.dfmin
llvm.hexagon.F2.dfmpy
llvm.hexagon.F2.dfsub
llvm.hexagon.F2.sfadd
llvm.hexagon.F2.sfclass
llvm.hexagon.F2.sfcmpeq
llvm.hexagon.F2.sfcmpge
llvm.hexagon.F2.sfcmpgt
llvm.hexagon.F2.sfcmpuo
llvm.hexagon.F2.sffixupd
llvm.hexagon.F2.sffixupn
llvm.hexagon.F2.sffixupr
llvm.hexagon.F2.sffma
llvm.hexagon.F2.sffma.lib
llvm.hexagon.F2.sffma.sc
llvm.hexagon.F2.sffms
llvm.hexagon.F2.sffms.lib
llvm.hexagon.F2.sfimm.n
llvm.hexagon.F2.sfimm.p
llvm.hexagon.F2.sfmax
llvm.hexagon.F2.sfmin
llvm.hexagon.F2.sfmpy
llvm.hexagon.F2.sfsub
llvm.hexagon.M2.acci
llvm.hexagon.M2.accii
llvm.hexagon.M2.cmaci.s0
llvm.hexagon.M2.cmacr.s0
llvm.hexagon.M2.cmacs.s0
llvm.hexagon.M2.cmacs.s1
llvm.hexagon.M2.cmacsc.s0
llvm.hexagon.M2.cmacsc.s1
llvm.hexagon.M2.cmpyi.s0
llvm.hexagon.M2.cmpyr.s0
llvm.hexagon.M2.cmpyrs.s0
llvm.hexagon.M2.cmpyrs.s1
llvm.hexagon.M2.cmpyrsc.s0
llvm.hexagon.M2.cmpyrsc.s1
llvm.hexagon.M2.cmpys.s0
llvm.hexagon.M2.cmpys.s1
llvm.hexagon.M2.cmpysc.s0
llvm.hexagon.M2.cmpysc.s1
llvm.hexagon.M2.cnacs.s0
llvm.hexagon.M2.cnacs.s1
llvm.hexagon.M2.cnacsc.s0
llvm.hexagon.M2.cnacsc.s1
llvm.hexagon.M2.dpmpyss.acc.s0
llvm.hexagon.M2.dpmpyss.nac.s0
llvm.hexagon.M2.dpmpyss.rnd.s0
llvm.hexagon.M2.dpmpyss.s0
llvm.hexagon.M2.dpmpyuu.acc.s0
llvm.hexagon.M2.dpmpyuu.nac.s0
llvm.hexagon.M2.dpmpyuu.s0
llvm.hexagon.M2.hmmpyh.rs1
llvm.hexagon.M2.hmmpyh.s1
llvm.hexagon.M2.hmmpyl.rs1
llvm.hexagon.M2.hmmpyl.s1
llvm.hexagon.M2.maci
llvm.hexagon.M2.macsin
llvm.hexagon.M2.macsip
llvm.hexagon.M2.mmachs.rs0
llvm.hexagon.M2.mmachs.rs1
llvm.hexagon.M2.mmachs.s0
llvm.hexagon.M2.mmachs.s1
llvm.hexagon.M2.mmacls.rs0
llvm.hexagon.M2.mmacls.rs1
llvm.hexagon.M2.mmacls.s0
llvm.hexagon.M2.mmacls.s1
llvm.hexagon.M2.mmacuhs.rs0
llvm.hexagon.M2.mmacuhs.rs1
llvm.hexagon.M2.mmacuhs.s0
llvm.hexagon.M2.mmacuhs.s1
llvm.hexagon.M2.mmaculs.rs0
llvm.hexagon.M2.mmaculs.rs1
llvm.hexagon.M2.mmaculs.s0
llvm.hexagon.M2.mmaculs.s1
llvm.hexagon.M2.mmpyh.rs0
llvm.hexagon.M2.mmpyh.rs1
llvm.hexagon.M2.mmpyh.s0
llvm.hexagon.M2.mmpyh.s1
llvm.hexagon.M2.mmpyl.rs0
llvm.hexagon.M2.mmpyl.rs1
llvm.hexagon.M2.mmpyl.s0
llvm.hexagon.M2.mmpyl.s1
llvm.hexagon.M2.mmpyuh.rs0
llvm.hexagon.M2.mmpyuh.rs1
llvm.hexagon.M2.mmpyuh.s0
llvm.hexagon.M2.mmpyuh.s1
llvm.hexagon.M2.mmpyul.rs0
llvm.hexagon.M2.mmpyul.rs1
llvm.hexagon.M2.mmpyul.s0
llvm.hexagon.M2.mmpyul.s1
llvm.hexagon.M2.mpy.acc.hh.s0
llvm.hexagon.M2.mpy.acc.hh.s1
llvm.hexagon.M2.mpy.acc.hl.s0
llvm.hexagon.M2.mpy.acc.hl.s1
llvm.hexagon.M2.mpy.acc.lh.s0
llvm.hexagon.M2.mpy.acc.lh.s1
llvm.hexagon.M2.mpy.acc.ll.s0
llvm.hexagon.M2.mpy.acc.ll.s1
llvm.hexagon.M2.mpy.acc.sat.hh.s0
llvm.hexagon.M2.mpy.acc.sat.hh.s1
llvm.hexagon.M2.mpy.acc.sat.hl.s0
llvm.hexagon.M2.mpy.acc.sat.hl.s1
llvm.hexagon.M2.mpy.acc.sat.lh.s0
llvm.hexagon.M2.mpy.acc.sat.lh.s1
llvm.hexagon.M2.mpy.acc.sat.ll.s0
llvm.hexagon.M2.mpy.acc.sat.ll.s1
llvm.hexagon.M2.mpy.hh.s0
llvm.hexagon.M2.mpy.hh.s1
llvm.hexagon.M2.mpy.hl.s0
llvm.hexagon.M2.mpy.hl.s1
llvm.hexagon.M2.mpy.lh.s0
llvm.hexagon.M2.mpy.lh.s1
llvm.hexagon.M2.mpy.ll.s0
llvm.hexagon.M2.mpy.ll.s1
llvm.hexagon.M2.mpy.nac.hh.s0
llvm.hexagon.M2.mpy.nac.hh.s1
llvm.hexagon.M2.mpy.nac.hl.s0
llvm.hexagon.M2.mpy.nac.hl.s1
llvm.hexagon.M2.mpy.nac.lh.s0
llvm.hexagon.M2.mpy.nac.lh.s1
llvm.hexagon.M2.mpy.nac.ll.s0
llvm.hexagon.M2.mpy.nac.ll.s1
llvm.hexagon.M2.mpy.nac.sat.hh.s0
llvm.hexagon.M2.mpy.nac.sat.hh.s1
llvm.hexagon.M2.mpy.nac.sat.hl.s0
llvm.hexagon.M2.mpy.nac.sat.hl.s1
llvm.hexagon.M2.mpy.nac.sat.lh.s0
llvm.hexagon.M2.mpy.nac.sat.lh.s1
llvm.hexagon.M2.mpy.nac.sat.ll.s0
llvm.hexagon.M2.mpy.nac.sat.ll.s1
llvm.hexagon.M2.mpy.rnd.hh.s0
llvm.hexagon.M2.mpy.rnd.hh.s1
llvm.hexagon.M2.mpy.rnd.hl.s0
llvm.hexagon.M2.mpy.rnd.hl.s1
llvm.hexagon.M2.mpy.rnd.lh.s0
llvm.hexagon.M2.mpy.rnd.lh.s1
llvm.hexagon.M2.mpy.rnd.ll.s0
llvm.hexagon.M2.mpy.rnd.ll.s1
llvm.hexagon.M2.mpy.sat.hh.s0
llvm.hexagon.M2.mpy.sat.hh.s1
llvm.hexagon.M2.mpy.sat.hl.s0
llvm.hexagon.M2.mpy.sat.hl.s1
llvm.hexagon.M2.mpy.sat.lh.s0
llvm.hexagon.M2.mpy.sat.lh.s1
llvm.hexagon.M2.mpy.sat.ll.s0
llvm.hexagon.M2.mpy.sat.ll.s1
llvm.hexagon.M2.mpy.sat.rnd.hh.s0
llvm.hexagon.M2.mpy.sat.rnd.hh.s1
llvm.hexagon.M2.mpy.sat.rnd.hl.s0
llvm.hexagon.M2.mpy.sat.rnd.hl.s1
llvm.hexagon.M2.mpy.sat.rnd.lh.s0
llvm.hexagon.M2.mpy.sat.rnd.lh.s1
llvm.hexagon.M2.mpy.sat.rnd.ll.s0
llvm.hexagon.M2.mpy.sat.rnd.ll.s1
llvm.hexagon.M2.mpy.up
llvm.hexagon.M2.mpy.up.s1
llvm.hexagon.M2.mpy.up.s1.sat
llvm.hexagon.M2.mpyd.acc.hh.s0
llvm.hexagon.M2.mpyd.acc.hh.s1
llvm.hexagon.M2.mpyd.acc.hl.s0
llvm.hexagon.M2.mpyd.acc.hl.s1
llvm.hexagon.M2.mpyd.acc.lh.s0
llvm.hexagon.M2.mpyd.acc.lh.s1
llvm.hexagon.M2.mpyd.acc.ll.s0
llvm.hexagon.M2.mpyd.acc.ll.s1
llvm.hexagon.M2.mpyd.hh.s0
llvm.hexagon.M2.mpyd.hh.s1
llvm.hexagon.M2.mpyd.hl.s0
llvm.hexagon.M2.mpyd.hl.s1
llvm.hexagon.M2.mpyd.lh.s0
llvm.hexagon.M2.mpyd.lh.s1
llvm.hexagon.M2.mpyd.ll.s0
llvm.hexagon.M2.mpyd.ll.s1
llvm.hexagon.M2.mpyd.nac.hh.s0
llvm.hexagon.M2.mpyd.nac.hh.s1
llvm.hexagon.M2.mpyd.nac.hl.s0
llvm.hexagon.M2.mpyd.nac.hl.s1
llvm.hexagon.M2.mpyd.nac.lh.s0
llvm.hexagon.M2.mpyd.nac.lh.s1
llvm.hexagon.M2.mpyd.nac.ll.s0
llvm.hexagon.M2.mpyd.nac.ll.s1
llvm.hexagon.M2.mpyd.rnd.hh.s0
llvm.hexagon.M2.mpyd.rnd.hh.s1
llvm.hexagon.M2.mpyd.rnd.hl.s0
llvm.hexagon.M2.mpyd.rnd.hl.s1
llvm.hexagon.M2.mpyd.rnd.lh.s0
llvm.hexagon.M2.mpyd.rnd.lh.s1
llvm.hexagon.M2.mpyd.rnd.ll.s0
llvm.hexagon.M2.mpyd.rnd.ll.s1
llvm.hexagon.M2.mpyi
llvm.hexagon.M2.mpysmi
llvm.hexagon.M2.mpysu.up
llvm.hexagon.M2.mpyu.acc.hh.s0
llvm.hexagon.M2.mpyu.acc.hh.s1
llvm.hexagon.M2.mpyu.acc.hl.s0
llvm.hexagon.M2.mpyu.acc.hl.s1
llvm.hexagon.M2.mpyu.acc.lh.s0
llvm.hexagon.M2.mpyu.acc.lh.s1
llvm.hexagon.M2.mpyu.acc.ll.s0
llvm.hexagon.M2.mpyu.acc.ll.s1
llvm.hexagon.M2.mpyu.hh.s0
llvm.hexagon.M2.mpyu.hh.s1
llvm.hexagon.M2.mpyu.hl.s0
llvm.hexagon.M2.mpyu.hl.s1
llvm.hexagon.M2.mpyu.lh.s0
llvm.hexagon.M2.mpyu.lh.s1
llvm.hexagon.M2.mpyu.ll.s0
llvm.hexagon.M2.mpyu.ll.s1
llvm.hexagon.M2.mpyu.nac.hh.s0
llvm.hexagon.M2.mpyu.nac.hh.s1
llvm.hexagon.M2.mpyu.nac.hl.s0
llvm.hexagon.M2.mpyu.nac.hl.s1
llvm.hexagon.M2.mpyu.nac.lh.s0
llvm.hexagon.M2.mpyu.nac.lh.s1
llvm.hexagon.M2.mpyu.nac.ll.s0
llvm.hexagon.M2.mpyu.nac.ll.s1
llvm.hexagon.M2.mpyu.up
llvm.hexagon.M2.mpyud.acc.hh.s0
llvm.hexagon.M2.mpyud.acc.hh.s1
llvm.hexagon.M2.mpyud.acc.hl.s0
llvm.hexagon.M2.mpyud.acc.hl.s1
llvm.hexagon.M2.mpyud.acc.lh.s0
llvm.hexagon.M2.mpyud.acc.lh.s1
llvm.hexagon.M2.mpyud.acc.ll.s0
llvm.hexagon.M2.mpyud.acc.ll.s1
llvm.hexagon.M2.mpyud.hh.s0
llvm.hexagon.M2.mpyud.hh.s1
llvm.hexagon.M2.mpyud.hl.s0
llvm.hexagon.M2.mpyud.hl.s1
llvm.hexagon.M2.mpyud.lh.s0
llvm.hexagon.M2.mpyud.lh.s1
llvm.hexagon.M2.mpyud.ll.s0
llvm.hexagon.M2.mpyud.ll.s1
llvm.hexagon.M2.mpyud.nac.hh.s0
llvm.hexagon.M2.mpyud.nac.hh.s1
llvm.hexagon.M2.mpyud.nac.hl.s0
llvm.hexagon.M2.mpyud.nac.hl.s1
llvm.hexagon.M2.mpyud.nac.lh.s0
llvm.hexagon.M2.mpyud.nac.lh.s1
llvm.hexagon.M2.mpyud.nac.ll.s0
llvm.hexagon.M2.mpyud.nac.ll.s1
llvm.hexagon.M2.mpyui
llvm.hexagon.M2.nacci
llvm.hexagon.M2.naccii
llvm.hexagon.M2.subacc
llvm.hexagon.M2.vabsdiffh
llvm.hexagon.M2.vabsdiffw
llvm.hexagon.M2.vcmac.s0.sat.i
llvm.hexagon.M2.vcmac.s0.sat.r
llvm.hexagon.M2.vcmpy.s0.sat.i
llvm.hexagon.M2.vcmpy.s0.sat.r
llvm.hexagon.M2.vcmpy.s1.sat.i
llvm.hexagon.M2.vcmpy.s1.sat.r
llvm.hexagon.M2.vdmacs.s0
llvm.hexagon.M2.vdmacs.s1
llvm.hexagon.M2.vdmpyrs.s0
llvm.hexagon.M2.vdmpyrs.s1
llvm.hexagon.M2.vdmpys.s0
llvm.hexagon.M2.vdmpys.s1
llvm.hexagon.M2.vmac2
llvm.hexagon.M2.vmac2es
llvm.hexagon.M2.vmac2es.s0
llvm.hexagon.M2.vmac2es.s1
llvm.hexagon.M2.vmac2s.s0
llvm.hexagon.M2.vmac2s.s1
llvm.hexagon.M2.vmac2su.s0
llvm.hexagon.M2.vmac2su.s1
llvm.hexagon.M2.vmpy2es.s0
llvm.hexagon.M2.vmpy2es.s1
llvm.hexagon.M2.vmpy2s.s0
llvm.hexagon.M2.vmpy2s.s0pack
llvm.hexagon.M2.vmpy2s.s1
llvm.hexagon.M2.vmpy2s.s1pack
llvm.hexagon.M2.vmpy2su.s0
llvm.hexagon.M2.vmpy2su.s1
llvm.hexagon.M2.vraddh
llvm.hexagon.M2.vradduh
llvm.hexagon.M2.vrcmaci.s0
llvm.hexagon.M2.vrcmaci.s0c
llvm.hexagon.M2.vrcmacr.s0
llvm.hexagon.M2.vrcmacr.s0c
llvm.hexagon.M2.vrcmpyi.s0
llvm.hexagon.M2.vrcmpyi.s0c
llvm.hexagon.M2.vrcmpyr.s0
llvm.hexagon.M2.vrcmpyr.s0c
llvm.hexagon.M2.vrcmpys.acc.s1
llvm.hexagon.M2.vrcmpys.s1
llvm.hexagon.M2.vrcmpys.s1rp
llvm.hexagon.M2.vrmac.s0
llvm.hexagon.M2.vrmpy.s0
llvm.hexagon.M2.xor.xacc
llvm.hexagon.M4.and.and
llvm.hexagon.M4.and.andn
llvm.hexagon.M4.and.or
llvm.hexagon.M4.and.xor
llvm.hexagon.M4.cmpyi.wh
llvm.hexagon.M4.cmpyi.whc
llvm.hexagon.M4.cmpyr.wh
llvm.hexagon.M4.cmpyr.whc
llvm.hexagon.M4.mac.up.s1.sat
llvm.hexagon.M4.mpyri.addi
llvm.hexagon.M4.mpyri.addr
llvm.hexagon.M4.mpyri.addr.u2
llvm.hexagon.M4.mpyrr.addi
llvm.hexagon.M4.mpyrr.addr
llvm.hexagon.M4.nac.up.s1.sat
llvm.hexagon.M4.or.and
llvm.hexagon.M4.or.andn
llvm.hexagon.M4.or.or
llvm.hexagon.M4.or.xor
llvm.hexagon.M4.pmpyw
llvm.hexagon.M4.pmpyw.acc
llvm.hexagon.M4.vpmpyh
llvm.hexagon.M4.vpmpyh.acc
llvm.hexagon.M4.vrmpyeh.acc.s0
llvm.hexagon.M4.vrmpyeh.acc.s1
llvm.hexagon.M4.vrmpyeh.s0
llvm.hexagon.M4.vrmpyeh.s1
llvm.hexagon.M4.vrmpyoh.acc.s0
llvm.hexagon.M4.vrmpyoh.acc.s1
llvm.hexagon.M4.vrmpyoh.s0
llvm.hexagon.M4.vrmpyoh.s1
llvm.hexagon.M4.xor.and
llvm.hexagon.M4.xor.andn
llvm.hexagon.M4.xor.or
llvm.hexagon.M4.xor.xacc
llvm.hexagon.M5.vdmacbsu
llvm.hexagon.M5.vdmpybsu
llvm.hexagon.M5.vmacbsu
llvm.hexagon.M5.vmacbuu
llvm.hexagon.M5.vmpybsu
llvm.hexagon.M5.vmpybuu
llvm.hexagon.M5.vrmacbsu
llvm.hexagon.M5.vrmacbuu
llvm.hexagon.M5.vrmpybsu
llvm.hexagon.M5.vrmpybuu
llvm.hexagon.S2.addasl.rrri
llvm.hexagon.S2.asl.i.p
llvm.hexagon.S2.asl.i.p.acc
llvm.hexagon.S2.asl.i.p.and
llvm.hexagon.S2.asl.i.p.nac
llvm.hexagon.S2.asl.i.p.or
llvm.hexagon.S2.asl.i.p.xacc
llvm.hexagon.S2.asl.i.r
llvm.hexagon.S2.asl.i.r.acc
llvm.hexagon.S2.asl.i.r.and
llvm.hexagon.S2.asl.i.r.nac
llvm.hexagon.S2.asl.i.r.or
llvm.hexagon.S2.asl.i.r.sat
llvm.hexagon.S2.asl.i.r.xacc
llvm.hexagon.S2.asl.i.vh
llvm.hexagon.S2.asl.i.vw
llvm.hexagon.S2.asl.r.p
llvm.hexagon.S2.asl.r.p.acc
llvm.hexagon.S2.asl.r.p.and
llvm.hexagon.S2.asl.r.p.nac
llvm.hexagon.S2.asl.r.p.or
llvm.hexagon.S2.asl.r.p.xor
llvm.hexagon.S2.asl.r.r
llvm.hexagon.S2.asl.r.r.acc
llvm.hexagon.S2.asl.r.r.and
llvm.hexagon.S2.asl.r.r.nac
llvm.hexagon.S2.asl.r.r.or
llvm.hexagon.S2.asl.r.r.sat
llvm.hexagon.S2.asl.r.vh
llvm.hexagon.S2.asl.r.vw
llvm.hexagon.S2.asr.i.p
llvm.hexagon.S2.asr.i.p.acc
llvm.hexagon.S2.asr.i.p.and
llvm.hexagon.S2.asr.i.p.nac
llvm.hexagon.S2.asr.i.p.or
llvm.hexagon.S2.asr.i.p.rnd
llvm.hexagon.S2.asr.i.p.rnd.goodsyntax
llvm.hexagon.S2.asr.i.r
llvm.hexagon.S2.asr.i.r.acc
llvm.hexagon.S2.asr.i.r.and
llvm.hexagon.S2.asr.i.r.nac
llvm.hexagon.S2.asr.i.r.or
llvm.hexagon.S2.asr.i.r.rnd
llvm.hexagon.S2.asr.i.r.rnd.goodsyntax
llvm.hexagon.S2.asr.i.svw.trun
llvm.hexagon.S2.asr.i.vh
llvm.hexagon.S2.asr.i.vw
llvm.hexagon.S2.asr.r.p
llvm.hexagon.S2.asr.r.p.acc
llvm.hexagon.S2.asr.r.p.and
llvm.hexagon.S2.asr.r.p.nac
llvm.hexagon.S2.asr.r.p.or
llvm.hexagon.S2.asr.r.p.xor
llvm.hexagon.S2.asr.r.r
llvm.hexagon.S2.asr.r.r.acc
llvm.hexagon.S2.asr.r.r.and
llvm.hexagon.S2.asr.r.r.nac
llvm.hexagon.S2.asr.r.r.or
llvm.hexagon.S2.asr.r.r.sat
llvm.hexagon.S2.asr.r.svw.trun
llvm.hexagon.S2.asr.r.vh
llvm.hexagon.S2.asr.r.vw
llvm.hexagon.S2.brev
llvm.hexagon.S2.brevp
llvm.hexagon.S2.cl0
llvm.hexagon.S2.cl0p
llvm.hexagon.S2.cl1
llvm.hexagon.S2.cl1p
llvm.hexagon.S2.clb
llvm.hexagon.S2.clbnorm
llvm.hexagon.S2.clbp
llvm.hexagon.S2.clrbit.i
llvm.hexagon.S2.clrbit.r
llvm.hexagon.S2.ct0
llvm.hexagon.S2.ct0p
llvm.hexagon.S2.ct1
llvm.hexagon.S2.ct1p
llvm.hexagon.S2.deinterleave
llvm.hexagon.S2.extractu
llvm.hexagon.S2.extractu.rp
llvm.hexagon.S2.extractup
llvm.hexagon.S2.extractup.rp
llvm.hexagon.S2.insert
llvm.hexagon.S2.insert.rp
llvm.hexagon.S2.insertp
llvm.hexagon.S2.insertp.rp
llvm.hexagon.S2.interleave
llvm.hexagon.S2.lfsp
llvm.hexagon.S2.lsl.r.p
llvm.hexagon.S2.lsl.r.p.acc
llvm.hexagon.S2.lsl.r.p.and
llvm.hexagon.S2.lsl.r.p.nac
llvm.hexagon.S2.lsl.r.p.or
llvm.hexagon.S2.lsl.r.p.xor
llvm.hexagon.S2.lsl.r.r
llvm.hexagon.S2.lsl.r.r.acc
llvm.hexagon.S2.lsl.r.r.and
llvm.hexagon.S2.lsl.r.r.nac
llvm.hexagon.S2.lsl.r.r.or
llvm.hexagon.S2.lsl.r.vh
llvm.hexagon.S2.lsl.r.vw
llvm.hexagon.S2.lsr.i.p
llvm.hexagon.S2.lsr.i.p.acc
llvm.hexagon.S2.lsr.i.p.and
llvm.hexagon.S2.lsr.i.p.nac
llvm.hexagon.S2.lsr.i.p.or
llvm.hexagon.S2.lsr.i.p.xacc
llvm.hexagon.S2.lsr.i.r
llvm.hexagon.S2.lsr.i.r.acc
llvm.hexagon.S2.lsr.i.r.and
llvm.hexagon.S2.lsr.i.r.nac
llvm.hexagon.S2.lsr.i.r.or
llvm.hexagon.S2.lsr.i.r.xacc
llvm.hexagon.S2.lsr.i.vh
llvm.hexagon.S2.lsr.i.vw
llvm.hexagon.S2.lsr.r.p
llvm.hexagon.S2.lsr.r.p.acc
llvm.hexagon.S2.lsr.r.p.and
llvm.hexagon.S2.lsr.r.p.nac
llvm.hexagon.S2.lsr.r.p.or
llvm.hexagon.S2.lsr.r.p.xor
llvm.hexagon.S2.lsr.r.r
llvm.hexagon.S2.lsr.r.r.acc
llvm.hexagon.S2.lsr.r.r.and
llvm.hexagon.S2.lsr.r.r.nac
llvm.hexagon.S2.lsr.r.r.or
llvm.hexagon.S2.lsr.r.vh
llvm.hexagon.S2.lsr.r.vw
llvm.hexagon.S2.packhl
llvm.hexagon.S2.parityp
llvm.hexagon.S2.setbit.i
llvm.hexagon.S2.setbit.r
llvm.hexagon.S2.shuffeb
llvm.hexagon.S2.shuffeh
llvm.hexagon.S2.shuffob
llvm.hexagon.S2.shuffoh
llvm.hexagon.S2.svsathb
llvm.hexagon.S2.svsathub
llvm.hexagon.S2.tableidxb.goodsyntax
llvm.hexagon.S2.tableidxd.goodsyntax
llvm.hexagon.S2.tableidxh.goodsyntax
llvm.hexagon.S2.tableidxw.goodsyntax
llvm.hexagon.S2.togglebit.i
llvm.hexagon.S2.togglebit.r
llvm.hexagon.S2.tstbit.i
llvm.hexagon.S2.tstbit.r
llvm.hexagon.S2.valignib
llvm.hexagon.S2.valignrb
llvm.hexagon.S2.vcnegh
llvm.hexagon.S2.vcrotate
llvm.hexagon.S2.vrcnegh
llvm.hexagon.S2.vrndpackwh
llvm.hexagon.S2.vrndpackwhs
llvm.hexagon.S2.vsathb
llvm.hexagon.S2.vsathb.nopack
llvm.hexagon.S2.vsathub
llvm.hexagon.S2.vsathub.nopack
llvm.hexagon.S2.vsatwh
llvm.hexagon.S2.vsatwh.nopack
llvm.hexagon.S2.vsatwuh
llvm.hexagon.S2.vsatwuh.nopack
llvm.hexagon.S2.vsplatrb
llvm.hexagon.S2.vsplatrh
llvm.hexagon.S2.vspliceib
llvm.hexagon.S2.vsplicerb
llvm.hexagon.S2.vsxtbh
llvm.hexagon.S2.vsxthw
llvm.hexagon.S2.vtrunehb
llvm.hexagon.S2.vtrunewh
llvm.hexagon.S2.vtrunohb
llvm.hexagon.S2.vtrunowh
llvm.hexagon.S2.vzxtbh
llvm.hexagon.S2.vzxthw
llvm.hexagon.S4.addaddi
llvm.hexagon.S4.addi.asl.ri
llvm.hexagon.S4.addi.lsr.ri
llvm.hexagon.S4.andi.asl.ri
llvm.hexagon.S4.andi.lsr.ri
llvm.hexagon.S4.clbaddi
llvm.hexagon.S4.clbpaddi
llvm.hexagon.S4.clbpnorm
llvm.hexagon.S4.extract
llvm.hexagon.S4.extract.rp
llvm.hexagon.S4.extractp
llvm.hexagon.S4.extractp.rp
llvm.hexagon.S4.lsli
llvm.hexagon.S4.ntstbit.i
llvm.hexagon.S4.ntstbit.r
llvm.hexagon.S4.or.andi
llvm.hexagon.S4.or.andix
llvm.hexagon.S4.or.ori
llvm.hexagon.S4.ori.asl.ri
llvm.hexagon.S4.ori.lsr.ri
llvm.hexagon.S4.parity
llvm.hexagon.S4.subaddi
llvm.hexagon.S4.subi.asl.ri
llvm.hexagon.S4.subi.lsr.ri
llvm.hexagon.S4.vrcrotate
llvm.hexagon.S4.vrcrotate.acc
llvm.hexagon.S4.vxaddsubh
llvm.hexagon.S4.vxaddsubhr
llvm.hexagon.S4.vxaddsubw
llvm.hexagon.S4.vxsubaddh
llvm.hexagon.S4.vxsubaddhr
llvm.hexagon.S4.vxsubaddw
llvm.hexagon.S5.asrhub.rnd.sat.goodsyntax
llvm.hexagon.S5.asrhub.sat
llvm.hexagon.S5.popcountp
llvm.hexagon.S5.vasrhrnd.goodsyntax
llvm.hexagon.SI.to.SXTHI.asrh
llvm.hexagon.circ.ldd
llvm.instrprof.increment
llvm.invariant.end
llvm.invariant.start
llvm.lifetime.end
llvm.lifetime.start
llvm.log
llvm.log10
llvm.log2
llvm.longjmp
llvm.memcpy
llvm.memmove
llvm.memset
llvm.mips.absq.s.ph
llvm.mips.absq.s.qb
llvm.mips.absq.s.w
llvm.mips.add.a.b
llvm.mips.add.a.d
llvm.mips.add.a.h
llvm.mips.add.a.w
llvm.mips.addq.ph
llvm.mips.addq.s.ph
llvm.mips.addq.s.w
llvm.mips.addqh.ph
llvm.mips.addqh.r.ph
llvm.mips.addqh.r.w
llvm.mips.addqh.w
llvm.mips.adds.a.b
llvm.mips.adds.a.d
llvm.mips.adds.a.h
llvm.mips.adds.a.w
llvm.mips.adds.s.b
llvm.mips.adds.s.d
llvm.mips.adds.s.h
llvm.mips.adds.s.w
llvm.mips.adds.u.b
llvm.mips.adds.u.d
llvm.mips.adds.u.h
llvm.mips.adds.u.w
llvm.mips.addsc
llvm.mips.addu.ph
llvm.mips.addu.qb
llvm.mips.addu.s.ph
llvm.mips.addu.s.qb
llvm.mips.adduh.qb
llvm.mips.adduh.r.qb
llvm.mips.addv.b
llvm.mips.addv.d
llvm.mips.addv.h
llvm.mips.addv.w
llvm.mips.addvi.b
llvm.mips.addvi.d
llvm.mips.addvi.h
llvm.mips.addvi.w
llvm.mips.addwc
llvm.mips.and.v
llvm.mips.andi.b
llvm.mips.append
llvm.mips.asub.s.b
llvm.mips.asub.s.d
llvm.mips.asub.s.h
llvm.mips.asub.s.w
llvm.mips.asub.u.b
llvm.mips.asub.u.d
llvm.mips.asub.u.h
llvm.mips.asub.u.w
llvm.mips.ave.s.b
llvm.mips.ave.s.d
llvm.mips.ave.s.h
llvm.mips.ave.s.w
llvm.mips.ave.u.b
llvm.mips.ave.u.d
llvm.mips.ave.u.h
llvm.mips.ave.u.w
llvm.mips.aver.s.b
llvm.mips.aver.s.d
llvm.mips.aver.s.h
llvm.mips.aver.s.w
llvm.mips.aver.u.b
llvm.mips.aver.u.d
llvm.mips.aver.u.h
llvm.mips.aver.u.w
llvm.mips.balign
llvm.mips.bclr.b
llvm.mips.bclr.d
llvm.mips.bclr.h
llvm.mips.bclr.w
llvm.mips.bclri.b
llvm.mips.bclri.d
llvm.mips.bclri.h
llvm.mips.bclri.w
llvm.mips.binsl.b
llvm.mips.binsl.d
llvm.mips.binsl.h
llvm.mips.binsl.w
llvm.mips.binsli.b
llvm.mips.binsli.d
llvm.mips.binsli.h
llvm.mips.binsli.w
llvm.mips.binsr.b
llvm.mips.binsr.d
llvm.mips.binsr.h
llvm.mips.binsr.w
llvm.mips.binsri.b
llvm.mips.binsri.d
llvm.mips.binsri.h
llvm.mips.binsri.w
llvm.mips.bitrev
llvm.mips.bmnz.v
llvm.mips.bmnzi.b
llvm.mips.bmz.v
llvm.mips.bmzi.b
llvm.mips.bneg.b
llvm.mips.bneg.d
llvm.mips.bneg.h
llvm.mips.bneg.w
llvm.mips.bnegi.b
llvm.mips.bnegi.d
llvm.mips.bnegi.h
llvm.mips.bnegi.w
llvm.mips.bnz.b
llvm.mips.bnz.d
llvm.mips.bnz.h
llvm.mips.bnz.v
llvm.mips.bnz.w
llvm.mips.bposge32
llvm.mips.bsel.v
llvm.mips.bseli.b
llvm.mips.bset.b
llvm.mips.bset.d
llvm.mips.bset.h
llvm.mips.bset.w
llvm.mips.bseti.b
llvm.mips.bseti.d
llvm.mips.bseti.h
llvm.mips.bseti.w
llvm.mips.bz.b
llvm.mips.bz.d
llvm.mips.bz.h
llvm.mips.bz.v
llvm.mips.bz.w
llvm.mips.ceq.b
llvm.mips.ceq.d
llvm.mips.ceq.h
llvm.mips.ceq.w
llvm.mips.ceqi.b
llvm.mips.ceqi.d
llvm.mips.ceqi.h
llvm.mips.ceqi.w
llvm.mips.cfcmsa
llvm.mips.cle.s.b
llvm.mips.cle.s.d
llvm.mips.cle.s.h
llvm.mips.cle.s.w
llvm.mips.cle.u.b
llvm.mips.cle.u.d
llvm.mips.cle.u.h
llvm.mips.cle.u.w
llvm.mips.clei.s.b
llvm.mips.clei.s.d
llvm.mips.clei.s.h
llvm.mips.clei.s.w
llvm.mips.clei.u.b
llvm.mips.clei.u.d
llvm.mips.clei.u.h
llvm.mips.clei.u.w
llvm.mips.clt.s.b
llvm.mips.clt.s.d
llvm.mips.clt.s.h
llvm.mips.clt.s.w
llvm.mips.clt.u.b
llvm.mips.clt.u.d
llvm.mips.clt.u.h
llvm.mips.clt.u.w
llvm.mips.clti.s.b
llvm.mips.clti.s.d
llvm.mips.clti.s.h
llvm.mips.clti.s.w
llvm.mips.clti.u.b
llvm.mips.clti.u.d
llvm.mips.clti.u.h
llvm.mips.clti.u.w
llvm.mips.cmp.eq.ph
llvm.mips.cmp.le.ph
llvm.mips.cmp.lt.ph
llvm.mips.cmpgdu.eq.qb
llvm.mips.cmpgdu.le.qb
llvm.mips.cmpgdu.lt.qb
llvm.mips.cmpgu.eq.qb
llvm.mips.cmpgu.le.qb
llvm.mips.cmpgu.lt.qb
llvm.mips.cmpu.eq.qb
llvm.mips.cmpu.le.qb
llvm.mips.cmpu.lt.qb
llvm.mips.copy.s.b
llvm.mips.copy.s.d
llvm.mips.copy.s.h
llvm.mips.copy.s.w
llvm.mips.copy.u.b
llvm.mips.copy.u.d
llvm.mips.copy.u.h
llvm.mips.copy.u.w
llvm.mips.ctcmsa
llvm.mips.div.s.b
llvm.mips.div.s.d
llvm.mips.div.s.h
llvm.mips.div.s.w
llvm.mips.div.u.b
llvm.mips.div.u.d
llvm.mips.div.u.h
llvm.mips.div.u.w
llvm.mips.dlsa
llvm.mips.dotp.s.d
llvm.mips.dotp.s.h
llvm.mips.dotp.s.w
llvm.mips.dotp.u.d
llvm.mips.dotp.u.h
llvm.mips.dotp.u.w
llvm.mips.dpa.w.ph
llvm.mips.dpadd.s.d
llvm.mips.dpadd.s.h
llvm.mips.dpadd.s.w
llvm.mips.dpadd.u.d
llvm.mips.dpadd.u.h
llvm.mips.dpadd.u.w
llvm.mips.dpaq.s.w.ph
llvm.mips.dpaq.sa.l.w
llvm.mips.dpaqx.s.w.ph
llvm.mips.dpaqx.sa.w.ph
llvm.mips.dpau.h.qbl
llvm.mips.dpau.h.qbr
llvm.mips.dpax.w.ph
llvm.mips.dps.w.ph
llvm.mips.dpsq.s.w.ph
llvm.mips.dpsq.sa.l.w
llvm.mips.dpsqx.s.w.ph
llvm.mips.dpsqx.sa.w.ph
llvm.mips.dpsu.h.qbl
llvm.mips.dpsu.h.qbr
llvm.mips.dpsub.s.d
llvm.mips.dpsub.s.h
llvm.mips.dpsub.s.w
llvm.mips.dpsub.u.d
llvm.mips.dpsub.u.h
llvm.mips.dpsub.u.w
llvm.mips.dpsx.w.ph
llvm.mips.extp
llvm.mips.extpdp
llvm.mips.extr.r.w
llvm.mips.extr.rs.w
llvm.mips.extr.s.h
llvm.mips.extr.w
llvm.mips.fadd.d
llvm.mips.fadd.w
llvm.mips.fcaf.d
llvm.mips.fcaf.w
llvm.mips.fceq.d
llvm.mips.fceq.w
llvm.mips.fclass.d
llvm.mips.fclass.w
llvm.mips.fcle.d
llvm.mips.fcle.w
llvm.mips.fclt.d
llvm.mips.fclt.w
llvm.mips.fcne.d
llvm.mips.fcne.w
llvm.mips.fcor.d
llvm.mips.fcor.w
llvm.mips.fcueq.d
llvm.mips.fcueq.w
llvm.mips.fcule.d
llvm.mips.fcule.w
llvm.mips.fcult.d
llvm.mips.fcult.w
llvm.mips.fcun.d
llvm.mips.fcun.w
llvm.mips.fcune.d
llvm.mips.fcune.w
llvm.mips.fdiv.d
llvm.mips.fdiv.w
llvm.mips.fexdo.h
llvm.mips.fexdo.w
llvm.mips.fexp2.d
llvm.mips.fexp2.w
llvm.mips.fexupl.d
llvm.mips.fexupl.w
llvm.mips.fexupr.d
llvm.mips.fexupr.w
llvm.mips.ffint.s.d
llvm.mips.ffint.s.w
llvm.mips.ffint.u.d
llvm.mips.ffint.u.w
llvm.mips.ffql.d
llvm.mips.ffql.w
llvm.mips.ffqr.d
llvm.mips.ffqr.w
llvm.mips.fill.b
llvm.mips.fill.d
llvm.mips.fill.h
llvm.mips.fill.w
llvm.mips.flog2.d
llvm.mips.flog2.w
llvm.mips.fmadd.d
llvm.mips.fmadd.w
llvm.mips.fmax.a.d
llvm.mips.fmax.a.w
llvm.mips.fmax.d
llvm.mips.fmax.w
llvm.mips.fmin.a.d
llvm.mips.fmin.a.w
llvm.mips.fmin.d
llvm.mips.fmin.w
llvm.mips.fmsub.d
llvm.mips.fmsub.w
llvm.mips.fmul.d
llvm.mips.fmul.w
llvm.mips.frcp.d
llvm.mips.frcp.w
llvm.mips.frint.d
llvm.mips.frint.w
llvm.mips.frsqrt.d
llvm.mips.frsqrt.w
llvm.mips.fsaf.d
llvm.mips.fsaf.w
llvm.mips.fseq.d
llvm.mips.fseq.w
llvm.mips.fsle.d
llvm.mips.fsle.w
llvm.mips.fslt.d
llvm.mips.fslt.w
llvm.mips.fsne.d
llvm.mips.fsne.w
llvm.mips.fsor.d
llvm.mips.fsor.w
llvm.mips.fsqrt.d
llvm.mips.fsqrt.w
llvm.mips.fsub.d
llvm.mips.fsub.w
llvm.mips.fsueq.d
llvm.mips.fsueq.w
llvm.mips.fsule.d
llvm.mips.fsule.w
llvm.mips.fsult.d
llvm.mips.fsult.w
llvm.mips.fsun.d
llvm.mips.fsun.w
llvm.mips.fsune.d
llvm.mips.fsune.w
llvm.mips.ftint.s.d
llvm.mips.ftint.s.w
llvm.mips.ftint.u.d
llvm.mips.ftint.u.w
llvm.mips.ftq.h
llvm.mips.ftq.w
llvm.mips.ftrunc.s.d
llvm.mips.ftrunc.s.w
llvm.mips.ftrunc.u.d
llvm.mips.ftrunc.u.w
llvm.mips.hadd.s.d
llvm.mips.hadd.s.h
llvm.mips.hadd.s.w
llvm.mips.hadd.u.d
llvm.mips.hadd.u.h
llvm.mips.hadd.u.w
llvm.mips.hsub.s.d
llvm.mips.hsub.s.h
llvm.mips.hsub.s.w
llvm.mips.hsub.u.d
llvm.mips.hsub.u.h
llvm.mips.hsub.u.w
llvm.mips.ilvev.b
llvm.mips.ilvev.d
llvm.mips.ilvev.h
llvm.mips.ilvev.w
llvm.mips.ilvl.b
llvm.mips.ilvl.d
llvm.mips.ilvl.h
llvm.mips.ilvl.w
llvm.mips.ilvod.b
llvm.mips.ilvod.d
llvm.mips.ilvod.h
llvm.mips.ilvod.w
llvm.mips.ilvr.b
llvm.mips.ilvr.d
llvm.mips.ilvr.h
llvm.mips.ilvr.w
llvm.mips.insert.b
llvm.mips.insert.d
llvm.mips.insert.h
llvm.mips.insert.w
llvm.mips.insv
llvm.mips.insve.b
llvm.mips.insve.d
llvm.mips.insve.h
llvm.mips.insve.w
llvm.mips.lbux
llvm.mips.ld.b
llvm.mips.ld.d
llvm.mips.ld.h
llvm.mips.ld.w
llvm.mips.ldi.b
llvm.mips.ldi.d
llvm.mips.ldi.h
llvm.mips.ldi.w
llvm.mips.lhx
llvm.mips.lsa
llvm.mips.lwx
llvm.mips.madd
llvm.mips.madd.q.h
llvm.mips.madd.q.w
llvm.mips.maddr.q.h
llvm.mips.maddr.q.w
llvm.mips.maddu
llvm.mips.maddv.b
llvm.mips.maddv.d
llvm.mips.maddv.h
llvm.mips.maddv.w
llvm.mips.maq.s.w.phl
llvm.mips.maq.s.w.phr
llvm.mips.maq.sa.w.phl
llvm.mips.maq.sa.w.phr
llvm.mips.max.a.b
llvm.mips.max.a.d
llvm.mips.max.a.h
llvm.mips.max.a.w
llvm.mips.max.s.b
llvm.mips.max.s.d
llvm.mips.max.s.h
llvm.mips.max.s.w
llvm.mips.max.u.b
llvm.mips.max.u.d
llvm.mips.max.u.h
llvm.mips.max.u.w
llvm.mips.maxi.s.b
llvm.mips.maxi.s.d
llvm.mips.maxi.s.h
llvm.mips.maxi.s.w
llvm.mips.maxi.u.b
llvm.mips.maxi.u.d
llvm.mips.maxi.u.h
llvm.mips.maxi.u.w
llvm.mips.min.a.b
llvm.mips.min.a.d
llvm.mips.min.a.h
llvm.mips.min.a.w
llvm.mips.min.s.b
llvm.mips.min.s.d
llvm.mips.min.s.h
llvm.mips.min.s.w
llvm.mips.min.u.b
llvm.mips.min.u.d
llvm.mips.min.u.h
llvm.mips.min.u.w
llvm.mips.mini.s.b
llvm.mips.mini.s.d
llvm.mips.mini.s.h
llvm.mips.mini.s.w
llvm.mips.mini.u.b
llvm.mips.mini.u.d
llvm.mips.mini.u.h
llvm.mips.mini.u.w
llvm.mips.mod.s.b
llvm.mips.mod.s.d
llvm.mips.mod.s.h
llvm.mips.mod.s.w
llvm.mips.mod.u.b
llvm.mips.mod.u.d
llvm.mips.mod.u.h
llvm.mips.mod.u.w
llvm.mips.modsub
llvm.mips.move.v
llvm.mips.msub
llvm.mips.msub.q.h
llvm.mips.msub.q.w
llvm.mips.msubr.q.h
llvm.mips.msubr.q.w
llvm.mips.msubu
llvm.mips.msubv.b
llvm.mips.msubv.d
llvm.mips.msubv.h
llvm.mips.msubv.w
llvm.mips.mthlip
llvm.mips.mul.ph
llvm.mips.mul.q.h
llvm.mips.mul.q.w
llvm.mips.mul.s.ph
llvm.mips.muleq.s.w.phl
llvm.mips.muleq.s.w.phr
llvm.mips.muleu.s.ph.qbl
llvm.mips.muleu.s.ph.qbr
llvm.mips.mulq.rs.ph
llvm.mips.mulq.rs.w
llvm.mips.mulq.s.ph
llvm.mips.mulq.s.w
llvm.mips.mulr.q.h
llvm.mips.mulr.q.w
llvm.mips.mulsa.w.ph
llvm.mips.mulsaq.s.w.ph
llvm.mips.mult
llvm.mips.multu
llvm.mips.mulv.b
llvm.mips.mulv.d
llvm.mips.mulv.h
llvm.mips.mulv.w
llvm.mips.nloc.b
llvm.mips.nloc.d
llvm.mips.nloc.h
llvm.mips.nloc.w
llvm.mips.nlzc.b
llvm.mips.nlzc.d
llvm.mips.nlzc.h
llvm.mips.nlzc.w
llvm.mips.nor.v
llvm.mips.nori.b
llvm.mips.or.v
llvm.mips.ori.b
llvm.mips.packrl.ph
llvm.mips.pckev.b
llvm.mips.pckev.d
llvm.mips.pckev.h
llvm.mips.pckev.w
llvm.mips.pckod.b
llvm.mips.pckod.d
llvm.mips.pckod.h
llvm.mips.pckod.w
llvm.mips.pcnt.b
llvm.mips.pcnt.d
llvm.mips.pcnt.h
llvm.mips.pcnt.w
llvm.mips.pick.ph
llvm.mips.pick.qb
llvm.mips.preceq.w.phl
llvm.mips.preceq.w.phr
llvm.mips.precequ.ph.qbl
llvm.mips.precequ.ph.qbla
llvm.mips.precequ.ph.qbr
llvm.mips.precequ.ph.qbra
llvm.mips.preceu.ph.qbl
llvm.mips.preceu.ph.qbla
llvm.mips.preceu.ph.qbr
llvm.mips.preceu.ph.qbra
llvm.mips.precr.qb.ph
llvm.mips.precr.sra.ph.w
llvm.mips.precr.sra.r.ph.w
llvm.mips.precrq.ph.w
llvm.mips.precrq.qb.ph
llvm.mips.precrq.rs.ph.w
llvm.mips.precrqu.s.qb.ph
llvm.mips.prepend
llvm.mips.raddu.w.qb
llvm.mips.rddsp
llvm.mips.repl.ph
llvm.mips.repl.qb
llvm.mips.sat.s.b
llvm.mips.sat.s.d
llvm.mips.sat.s.h
llvm.mips.sat.s.w
llvm.mips.sat.u.b
llvm.mips.sat.u.d
llvm.mips.sat.u.h
llvm.mips.sat.u.w
llvm.mips.shf.b
llvm.mips.shf.h
llvm.mips.shf.w
llvm.mips.shilo
llvm.mips.shll.ph
llvm.mips.shll.qb
llvm.mips.shll.s.ph
llvm.mips.shll.s.w
llvm.mips.shra.ph
llvm.mips.shra.qb
llvm.mips.shra.r.ph
llvm.mips.shra.r.qb
llvm.mips.shra.r.w
llvm.mips.shrl.ph
llvm.mips.shrl.qb
llvm.mips.sld.b
llvm.mips.sld.d
llvm.mips.sld.h
llvm.mips.sld.w
llvm.mips.sldi.b
llvm.mips.sldi.d
llvm.mips.sldi.h
llvm.mips.sldi.w
llvm.mips.sll.b
llvm.mips.sll.d
llvm.mips.sll.h
llvm.mips.sll.w
llvm.mips.slli.b
llvm.mips.slli.d
llvm.mips.slli.h
llvm.mips.slli.w
llvm.mips.splat.b
llvm.mips.splat.d
llvm.mips.splat.h
llvm.mips.splat.w
llvm.mips.splati.b
llvm.mips.splati.d
llvm.mips.splati.h
llvm.mips.splati.w
llvm.mips.sra.b
llvm.mips.sra.d
llvm.mips.sra.h
llvm.mips.sra.w
llvm.mips.srai.b
llvm.mips.srai.d
llvm.mips.srai.h
llvm.mips.srai.w
llvm.mips.srar.b
llvm.mips.srar.d
llvm.mips.srar.h
llvm.mips.srar.w
llvm.mips.srari.b
llvm.mips.srari.d
llvm.mips.srari.h
llvm.mips.srari.w
llvm.mips.srl.b
llvm.mips.srl.d
llvm.mips.srl.h
llvm.mips.srl.w
llvm.mips.srli.b
llvm.mips.srli.d
llvm.mips.srli.h
llvm.mips.srli.w
llvm.mips.srlr.b
llvm.mips.srlr.d
llvm.mips.srlr.h
llvm.mips.srlr.w
llvm.mips.srlri.b
llvm.mips.srlri.d
llvm.mips.srlri.h
llvm.mips.srlri.w
llvm.mips.st.b
llvm.mips.st.d
llvm.mips.st.h
llvm.mips.st.w
llvm.mips.subq.ph
llvm.mips.subq.s.ph
llvm.mips.subq.s.w
llvm.mips.subqh.ph
llvm.mips.subqh.r.ph
llvm.mips.subqh.r.w
llvm.mips.subqh.w
llvm.mips.subs.s.b
llvm.mips.subs.s.d
llvm.mips.subs.s.h
llvm.mips.subs.s.w
llvm.mips.subs.u.b
llvm.mips.subs.u.d
llvm.mips.subs.u.h
llvm.mips.subs.u.w
llvm.mips.subsus.u.b
llvm.mips.subsus.u.d
llvm.mips.subsus.u.h
llvm.mips.subsus.u.w
llvm.mips.subsuu.s.b
llvm.mips.subsuu.s.d
llvm.mips.subsuu.s.h
llvm.mips.subsuu.s.w
llvm.mips.subu.ph
llvm.mips.subu.qb
llvm.mips.subu.s.ph
llvm.mips.subu.s.qb
llvm.mips.subuh.qb
llvm.mips.subuh.r.qb
llvm.mips.subv.b
llvm.mips.subv.d
llvm.mips.subv.h
llvm.mips.subv.w
llvm.mips.subvi.b
llvm.mips.subvi.d
llvm.mips.subvi.h
llvm.mips.subvi.w
llvm.mips.vshf.b
llvm.mips.vshf.d
llvm.mips.vshf.h
llvm.mips.vshf.w
llvm.mips.wrdsp
llvm.mips.xor.v
llvm.mips.xori.b
llvm.nearbyint
llvm.nvvm.abs.i
llvm.nvvm.abs.ll
llvm.nvvm.add.rm.d
llvm.nvvm.add.rm.f
llvm.nvvm.add.rm.ftz.f
llvm.nvvm.add.rn.d
llvm.nvvm.add.rn.f
llvm.nvvm.add.rn.ftz.f
llvm.nvvm.add.rp.d
llvm.nvvm.add.rp.f
llvm.nvvm.add.rp.ftz.f
llvm.nvvm.add.rz.d
llvm.nvvm.add.rz.f
llvm.nvvm.add.rz.ftz.f
llvm.nvvm.atomic.load.add.f32
llvm.nvvm.atomic.load.dec.32
llvm.nvvm.atomic.load.inc.32
llvm.nvvm.barrier0
llvm.nvvm.barrier0.and
llvm.nvvm.barrier0.or
llvm.nvvm.barrier0.popc
llvm.nvvm.bitcast.d2ll
llvm.nvvm.bitcast.f2i
llvm.nvvm.bitcast.i2f
llvm.nvvm.bitcast.ll2d
llvm.nvvm.brev32
llvm.nvvm.brev64
llvm.nvvm.ceil.d
llvm.nvvm.ceil.f
llvm.nvvm.ceil.ftz.f
llvm.nvvm.clz.i
llvm.nvvm.clz.ll
llvm.nvvm.compiler.error
llvm.nvvm.compiler.warn
llvm.nvvm.cos.approx.f
llvm.nvvm.cos.approx.ftz.f
llvm.nvvm.d2f.rm
llvm.nvvm.d2f.rm.ftz
llvm.nvvm.d2f.rn
llvm.nvvm.d2f.rn.ftz
llvm.nvvm.d2f.rp
llvm.nvvm.d2f.rp.ftz
llvm.nvvm.d2f.rz
llvm.nvvm.d2f.rz.ftz
llvm.nvvm.d2i.hi
llvm.nvvm.d2i.lo
llvm.nvvm.d2i.rm
llvm.nvvm.d2i.rn
llvm.nvvm.d2i.rp
llvm.nvvm.d2i.rz
llvm.nvvm.d2ll.rm
llvm.nvvm.d2ll.rn
llvm.nvvm.d2ll.rp
llvm.nvvm.d2ll.rz
llvm.nvvm.d2ui.rm
llvm.nvvm.d2ui.rn
llvm.nvvm.d2ui.rp
llvm.nvvm.d2ui.rz
llvm.nvvm.d2ull.rm
llvm.nvvm.d2ull.rn
llvm.nvvm.d2ull.rp
llvm.nvvm.d2ull.rz
llvm.nvvm.div.approx.f
llvm.nvvm.div.approx.ftz.f
llvm.nvvm.div.rm.d
llvm.nvvm.div.rm.f
llvm.nvvm.div.rm.ftz.f
llvm.nvvm.div.rn.d
llvm.nvvm.div.rn.f
llvm.nvvm.div.rn.ftz.f
llvm.nvvm.div.rp.d
llvm.nvvm.div.rp.f
llvm.nvvm.div.rp.ftz.f
llvm.nvvm.div.rz.d
llvm.nvvm.div.rz.f
llvm.nvvm.div.rz.ftz.f
llvm.nvvm.ex2.approx.d
llvm.nvvm.ex2.approx.f
llvm.nvvm.ex2.approx.ftz.f
llvm.nvvm.f2h.rn
llvm.nvvm.f2h.rn.ftz
llvm.nvvm.f2i.rm
llvm.nvvm.f2i.rm.ftz
llvm.nvvm.f2i.rn
llvm.nvvm.f2i.rn.ftz
llvm.nvvm.f2i.rp
llvm.nvvm.f2i.rp.ftz
llvm.nvvm.f2i.rz
llvm.nvvm.f2i.rz.ftz
llvm.nvvm.f2ll.rm
llvm.nvvm.f2ll.rm.ftz
llvm.nvvm.f2ll.rn
llvm.nvvm.f2ll.rn.ftz
llvm.nvvm.f2ll.rp
llvm.nvvm.f2ll.rp.ftz
llvm.nvvm.f2ll.rz
llvm.nvvm.f2ll.rz.ftz
llvm.nvvm.f2ui.rm
llvm.nvvm.f2ui.rm.ftz
llvm.nvvm.f2ui.rn
llvm.nvvm.f2ui.rn.ftz
llvm.nvvm.f2ui.rp
llvm.nvvm.f2ui.rp.ftz
llvm.nvvm.f2ui.rz
llvm.nvvm.f2ui.rz.ftz
llvm.nvvm.f2ull.rm
llvm.nvvm.f2ull.rm.ftz
llvm.nvvm.f2ull.rn
llvm.nvvm.f2ull.rn.ftz
llvm.nvvm.f2ull.rp
llvm.nvvm.f2ull.rp.ftz
llvm.nvvm.f2ull.rz
llvm.nvvm.f2ull.rz.ftz
llvm.nvvm.fabs.d
llvm.nvvm.fabs.f
llvm.nvvm.fabs.ftz.f
llvm.nvvm.floor.d
llvm.nvvm.floor.f
llvm.nvvm.floor.ftz.f
llvm.nvvm.fma.rm.d
llvm.nvvm.fma.rm.f
llvm.nvvm.fma.rm.ftz.f
llvm.nvvm.fma.rn.d
llvm.nvvm.fma.rn.f
llvm.nvvm.fma.rn.ftz.f
llvm.nvvm.fma.rp.d
llvm.nvvm.fma.rp.f
llvm.nvvm.fma.rp.ftz.f
llvm.nvvm.fma.rz.d
llvm.nvvm.fma.rz.f
llvm.nvvm.fma.rz.ftz.f
llvm.nvvm.fmax.d
llvm.nvvm.fmax.f
llvm.nvvm.fmax.ftz.f
llvm.nvvm.fmin.d
llvm.nvvm.fmin.f
llvm.nvvm.fmin.ftz.f
llvm.nvvm.h2f
llvm.nvvm.i2d.rm
llvm.nvvm.i2d.rn
llvm.nvvm.i2d.rp
llvm.nvvm.i2d.rz
llvm.nvvm.i2f.rm
llvm.nvvm.i2f.rn
llvm.nvvm.i2f.rp
llvm.nvvm.i2f.rz
llvm.nvvm.isspacep.const
llvm.nvvm.isspacep.global
llvm.nvvm.isspacep.local
llvm.nvvm.isspacep.shared
llvm.nvvm.istypep.sampler
llvm.nvvm.istypep.surface
llvm.nvvm.istypep.texture
llvm.nvvm.ldg.global.f
llvm.nvvm.ldg.global.i
llvm.nvvm.ldg.global.p
llvm.nvvm.ldu.global.f
llvm.nvvm.ldu.global.i
llvm.nvvm.ldu.global.p
llvm.nvvm.lg2.approx.d
llvm.nvvm.lg2.approx.f
llvm.nvvm.lg2.approx.ftz.f
llvm.nvvm.ll2d.rm
llvm.nvvm.ll2d.rn
llvm.nvvm.ll2d.rp
llvm.nvvm.ll2d.rz
llvm.nvvm.ll2f.rm
llvm.nvvm.ll2f.rn
llvm.nvvm.ll2f.rp
llvm.nvvm.ll2f.rz
llvm.nvvm.lohi.i2d
llvm.nvvm.max.i
llvm.nvvm.max.ll
llvm.nvvm.max.ui
llvm.nvvm.max.ull
llvm.nvvm.membar.cta
llvm.nvvm.membar.gl
llvm.nvvm.membar.sys
llvm.nvvm.min.i
llvm.nvvm.min.ll
llvm.nvvm.min.ui
llvm.nvvm.min.ull
llvm.nvvm.move.double
llvm.nvvm.move.float
llvm.nvvm.move.i16
llvm.nvvm.move.i32
llvm.nvvm.move.i64
llvm.nvvm.move.ptr
llvm.nvvm.mul24.i
llvm.nvvm.mul24.ui
llvm.nvvm.mul.rm.d
llvm.nvvm.mul.rm.f
llvm.nvvm.mul.rm.ftz.f
llvm.nvvm.mul.rn.d
llvm.nvvm.mul.rn.f
llvm.nvvm.mul.rn.ftz.f
llvm.nvvm.mul.rp.d
llvm.nvvm.mul.rp.f
llvm.nvvm.mul.rp.ftz.f
llvm.nvvm.mul.rz.d
llvm.nvvm.mul.rz.f
llvm.nvvm.mul.rz.ftz.f
llvm.nvvm.mulhi.i
llvm.nvvm.mulhi.ll
llvm.nvvm.mulhi.ui
llvm.nvvm.mulhi.ull
llvm.nvvm.popc.i
llvm.nvvm.popc.ll
llvm.nvvm.prmt
llvm.nvvm.ptr.constant.to.gen
llvm.nvvm.ptr.gen.to.constant
llvm.nvvm.ptr.gen.to.global
llvm.nvvm.ptr.gen.to.local
llvm.nvvm.ptr.gen.to.param
llvm.nvvm.ptr.gen.to.shared
llvm.nvvm.ptr.global.to.gen
llvm.nvvm.ptr.local.to.gen
llvm.nvvm.ptr.shared.to.gen
llvm.nvvm.rcp.approx.ftz.d
llvm.nvvm.rcp.rm.d
llvm.nvvm.rcp.rm.f
llvm.nvvm.rcp.rm.ftz.f
llvm.nvvm.rcp.rn.d
llvm.nvvm.rcp.rn.f
llvm.nvvm.rcp.rn.ftz.f
llvm.nvvm.rcp.rp.d
llvm.nvvm.rcp.rp.f
llvm.nvvm.rcp.rp.ftz.f
llvm.nvvm.rcp.rz.d
llvm.nvvm.rcp.rz.f
llvm.nvvm.rcp.rz.ftz.f
llvm.nvvm.read.ptx.sreg.ctaid.x
llvm.nvvm.read.ptx.sreg.ctaid.y
llvm.nvvm.read.ptx.sreg.ctaid.z
llvm.nvvm.read.ptx.sreg.envreg0
llvm.nvvm.read.ptx.sreg.envreg1
llvm.nvvm.read.ptx.sreg.envreg10
llvm.nvvm.read.ptx.sreg.envreg11
llvm.nvvm.read.ptx.sreg.envreg12
llvm.nvvm.read.ptx.sreg.envreg13
llvm.nvvm.read.ptx.sreg.envreg14
llvm.nvvm.read.ptx.sreg.envreg15
llvm.nvvm.read.ptx.sreg.envreg16
llvm.nvvm.read.ptx.sreg.envreg17
llvm.nvvm.read.ptx.sreg.envreg18
llvm.nvvm.read.ptx.sreg.envreg19
llvm.nvvm.read.ptx.sreg.envreg2
llvm.nvvm.read.ptx.sreg.envreg20
llvm.nvvm.read.ptx.sreg.envreg21
llvm.nvvm.read.ptx.sreg.envreg22
llvm.nvvm.read.ptx.sreg.envreg23
llvm.nvvm.read.ptx.sreg.envreg24
llvm.nvvm.read.ptx.sreg.envreg25
llvm.nvvm.read.ptx.sreg.envreg26
llvm.nvvm.read.ptx.sreg.envreg27
llvm.nvvm.read.ptx.sreg.envreg28
llvm.nvvm.read.ptx.sreg.envreg29
llvm.nvvm.read.ptx.sreg.envreg3
llvm.nvvm.read.ptx.sreg.envreg30
llvm.nvvm.read.ptx.sreg.envreg31
llvm.nvvm.read.ptx.sreg.envreg4
llvm.nvvm.read.ptx.sreg.envreg5
llvm.nvvm.read.ptx.sreg.envreg6
llvm.nvvm.read.ptx.sreg.envreg7
llvm.nvvm.read.ptx.sreg.envreg8
llvm.nvvm.read.ptx.sreg.envreg9
llvm.nvvm.read.ptx.sreg.nctaid.x
llvm.nvvm.read.ptx.sreg.nctaid.y
llvm.nvvm.read.ptx.sreg.nctaid.z
llvm.nvvm.read.ptx.sreg.ntid.x
llvm.nvvm.read.ptx.sreg.ntid.y
llvm.nvvm.read.ptx.sreg.ntid.z
llvm.nvvm.read.ptx.sreg.tid.x
llvm.nvvm.read.ptx.sreg.tid.y
llvm.nvvm.read.ptx.sreg.tid.z
llvm.nvvm.read.ptx.sreg.warpsize
llvm.nvvm.reflect
llvm.nvvm.rotate.b32
llvm.nvvm.rotate.b64
llvm.nvvm.rotate.right.b64
llvm.nvvm.round.d
llvm.nvvm.round.f
llvm.nvvm.round.ftz.f
llvm.nvvm.rsqrt.approx.d
llvm.nvvm.rsqrt.approx.f
llvm.nvvm.rsqrt.approx.ftz.f
llvm.nvvm.sad.i
llvm.nvvm.sad.ui
llvm.nvvm.saturate.d
llvm.nvvm.saturate.f
llvm.nvvm.saturate.ftz.f
llvm.nvvm.sin.approx.f
llvm.nvvm.sin.approx.ftz.f
llvm.nvvm.sqrt.approx.f
llvm.nvvm.sqrt.approx.ftz.f
llvm.nvvm.sqrt.f
llvm.nvvm.sqrt.rm.d
llvm.nvvm.sqrt.rm.f
llvm.nvvm.sqrt.rm.ftz.f
llvm.nvvm.sqrt.rn.d
llvm.nvvm.sqrt.rn.f
llvm.nvvm.sqrt.rn.ftz.f
llvm.nvvm.sqrt.rp.d
llvm.nvvm.sqrt.rp.f
llvm.nvvm.sqrt.rp.ftz.f
llvm.nvvm.sqrt.rz.d
llvm.nvvm.sqrt.rz.f
llvm.nvvm.sqrt.rz.ftz.f
llvm.nvvm.suld.1d.array.i16.clamp
llvm.nvvm.suld.1d.array.i16.trap
llvm.nvvm.suld.1d.array.i16.zero
llvm.nvvm.suld.1d.array.i32.clamp
llvm.nvvm.suld.1d.array.i32.trap
llvm.nvvm.suld.1d.array.i32.zero
llvm.nvvm.suld.1d.array.i64.clamp
llvm.nvvm.suld.1d.array.i64.trap
llvm.nvvm.suld.1d.array.i64.zero
llvm.nvvm.suld.1d.array.i8.clamp
llvm.nvvm.suld.1d.array.i8.trap
llvm.nvvm.suld.1d.array.i8.zero
llvm.nvvm.suld.1d.array.v2i16.clamp
llvm.nvvm.suld.1d.array.v2i16.trap
llvm.nvvm.suld.1d.array.v2i16.zero
llvm.nvvm.suld.1d.array.v2i32.clamp
llvm.nvvm.suld.1d.array.v2i32.trap
llvm.nvvm.suld.1d.array.v2i32.zero
llvm.nvvm.suld.1d.array.v2i64.clamp
llvm.nvvm.suld.1d.array.v2i64.trap
llvm.nvvm.suld.1d.array.v2i64.zero
llvm.nvvm.suld.1d.array.v2i8.clamp
llvm.nvvm.suld.1d.array.v2i8.trap
llvm.nvvm.suld.1d.array.v2i8.zero
llvm.nvvm.suld.1d.array.v4i16.clamp
llvm.nvvm.suld.1d.array.v4i16.trap
llvm.nvvm.suld.1d.array.v4i16.zero
llvm.nvvm.suld.1d.array.v4i32.clamp
llvm.nvvm.suld.1d.array.v4i32.trap
llvm.nvvm.suld.1d.array.v4i32.zero
llvm.nvvm.suld.1d.array.v4i8.clamp
llvm.nvvm.suld.1d.array.v4i8.trap
llvm.nvvm.suld.1d.array.v4i8.zero
llvm.nvvm.suld.1d.i16.clamp
llvm.nvvm.suld.1d.i16.trap
llvm.nvvm.suld.1d.i16.zero
llvm.nvvm.suld.1d.i32.clamp
llvm.nvvm.suld.1d.i32.trap
llvm.nvvm.suld.1d.i32.zero
llvm.nvvm.suld.1d.i64.clamp
llvm.nvvm.suld.1d.i64.trap
llvm.nvvm.suld.1d.i64.zero
llvm.nvvm.suld.1d.i8.clamp
llvm.nvvm.suld.1d.i8.trap
llvm.nvvm.suld.1d.i8.zero
llvm.nvvm.suld.1d.v2i16.clamp
llvm.nvvm.suld.1d.v2i16.trap
llvm.nvvm.suld.1d.v2i16.zero
llvm.nvvm.suld.1d.v2i32.clamp
llvm.nvvm.suld.1d.v2i32.trap
llvm.nvvm.suld.1d.v2i32.zero
llvm.nvvm.suld.1d.v2i64.clamp
llvm.nvvm.suld.1d.v2i64.trap
llvm.nvvm.suld.1d.v2i64.zero
llvm.nvvm.suld.1d.v2i8.clamp
llvm.nvvm.suld.1d.v2i8.trap
llvm.nvvm.suld.1d.v2i8.zero
llvm.nvvm.suld.1d.v4i16.clamp
llvm.nvvm.suld.1d.v4i16.trap
llvm.nvvm.suld.1d.v4i16.zero
llvm.nvvm.suld.1d.v4i32.clamp
llvm.nvvm.suld.1d.v4i32.trap
llvm.nvvm.suld.1d.v4i32.zero
llvm.nvvm.suld.1d.v4i8.clamp
llvm.nvvm.suld.1d.v4i8.trap
llvm.nvvm.suld.1d.v4i8.zero
llvm.nvvm.suld.2d.array.i16.clamp
llvm.nvvm.suld.2d.array.i16.trap
llvm.nvvm.suld.2d.array.i16.zero
llvm.nvvm.suld.2d.array.i32.clamp
llvm.nvvm.suld.2d.array.i32.trap
llvm.nvvm.suld.2d.array.i32.zero
llvm.nvvm.suld.2d.array.i64.clamp
llvm.nvvm.suld.2d.array.i64.trap
llvm.nvvm.suld.2d.array.i64.zero
llvm.nvvm.suld.2d.array.i8.clamp
llvm.nvvm.suld.2d.array.i8.trap
llvm.nvvm.suld.2d.array.i8.zero
llvm.nvvm.suld.2d.array.v2i16.clamp
llvm.nvvm.suld.2d.array.v2i16.trap
llvm.nvvm.suld.2d.array.v2i16.zero
llvm.nvvm.suld.2d.array.v2i32.clamp
llvm.nvvm.suld.2d.array.v2i32.trap
llvm.nvvm.suld.2d.array.v2i32.zero
llvm.nvvm.suld.2d.array.v2i64.clamp
llvm.nvvm.suld.2d.array.v2i64.trap
llvm.nvvm.suld.2d.array.v2i64.zero
llvm.nvvm.suld.2d.array.v2i8.clamp
llvm.nvvm.suld.2d.array.v2i8.trap
llvm.nvvm.suld.2d.array.v2i8.zero
llvm.nvvm.suld.2d.array.v4i16.clamp
llvm.nvvm.suld.2d.array.v4i16.trap
llvm.nvvm.suld.2d.array.v4i16.zero
llvm.nvvm.suld.2d.array.v4i32.clamp
llvm.nvvm.suld.2d.array.v4i32.trap
llvm.nvvm.suld.2d.array.v4i32.zero
llvm.nvvm.suld.2d.array.v4i8.clamp
llvm.nvvm.suld.2d.array.v4i8.trap
llvm.nvvm.suld.2d.array.v4i8.zero
llvm.nvvm.suld.2d.i16.clamp
llvm.nvvm.suld.2d.i16.trap
llvm.nvvm.suld.2d.i16.zero
llvm.nvvm.suld.2d.i32.clamp
llvm.nvvm.suld.2d.i32.trap
llvm.nvvm.suld.2d.i32.zero
llvm.nvvm.suld.2d.i64.clamp
llvm.nvvm.suld.2d.i64.trap
llvm.nvvm.suld.2d.i64.zero
llvm.nvvm.suld.2d.i8.clamp
llvm.nvvm.suld.2d.i8.trap
llvm.nvvm.suld.2d.i8.zero
llvm.nvvm.suld.2d.v2i16.clamp
llvm.nvvm.suld.2d.v2i16.trap
llvm.nvvm.suld.2d.v2i16.zero
llvm.nvvm.suld.2d.v2i32.clamp
llvm.nvvm.suld.2d.v2i32.trap
llvm.nvvm.suld.2d.v2i32.zero
llvm.nvvm.suld.2d.v2i64.clamp
llvm.nvvm.suld.2d.v2i64.trap
llvm.nvvm.suld.2d.v2i64.zero
llvm.nvvm.suld.2d.v2i8.clamp
llvm.nvvm.suld.2d.v2i8.trap
llvm.nvvm.suld.2d.v2i8.zero
llvm.nvvm.suld.2d.v4i16.clamp
llvm.nvvm.suld.2d.v4i16.trap
llvm.nvvm.suld.2d.v4i16.zero
llvm.nvvm.suld.2d.v4i32.clamp
llvm.nvvm.suld.2d.v4i32.trap
llvm.nvvm.suld.2d.v4i32.zero
llvm.nvvm.suld.2d.v4i8.clamp
llvm.nvvm.suld.2d.v4i8.trap
llvm.nvvm.suld.2d.v4i8.zero
llvm.nvvm.suld.3d.i16.clamp
llvm.nvvm.suld.3d.i16.trap
llvm.nvvm.suld.3d.i16.zero
llvm.nvvm.suld.3d.i32.clamp
llvm.nvvm.suld.3d.i32.trap
llvm.nvvm.suld.3d.i32.zero
llvm.nvvm.suld.3d.i64.clamp
llvm.nvvm.suld.3d.i64.trap
llvm.nvvm.suld.3d.i64.zero
llvm.nvvm.suld.3d.i8.clamp
llvm.nvvm.suld.3d.i8.trap
llvm.nvvm.suld.3d.i8.zero
llvm.nvvm.suld.3d.v2i16.clamp
llvm.nvvm.suld.3d.v2i16.trap
llvm.nvvm.suld.3d.v2i16.zero
llvm.nvvm.suld.3d.v2i32.clamp
llvm.nvvm.suld.3d.v2i32.trap
llvm.nvvm.suld.3d.v2i32.zero
llvm.nvvm.suld.3d.v2i64.clamp
llvm.nvvm.suld.3d.v2i64.trap
llvm.nvvm.suld.3d.v2i64.zero
llvm.nvvm.suld.3d.v2i8.clamp
llvm.nvvm.suld.3d.v2i8.trap
llvm.nvvm.suld.3d.v2i8.zero
llvm.nvvm.suld.3d.v4i16.clamp
llvm.nvvm.suld.3d.v4i16.trap
llvm.nvvm.suld.3d.v4i16.zero
llvm.nvvm.suld.3d.v4i32.clamp
llvm.nvvm.suld.3d.v4i32.trap
llvm.nvvm.suld.3d.v4i32.zero
llvm.nvvm.suld.3d.v4i8.clamp
llvm.nvvm.suld.3d.v4i8.trap
llvm.nvvm.suld.3d.v4i8.zero
llvm.nvvm.suq.array.size
llvm.nvvm.suq.channel.data.type
llvm.nvvm.suq.channel.order
llvm.nvvm.suq.depth
llvm.nvvm.suq.height
llvm.nvvm.suq.width
llvm.nvvm.sust.b.1d.array.i16.clamp
llvm.nvvm.sust.b.1d.array.i16.trap
llvm.nvvm.sust.b.1d.array.i16.zero
llvm.nvvm.sust.b.1d.array.i32.clamp
llvm.nvvm.sust.b.1d.array.i32.trap
llvm.nvvm.sust.b.1d.array.i32.zero
llvm.nvvm.sust.b.1d.array.i64.clamp
llvm.nvvm.sust.b.1d.array.i64.trap
llvm.nvvm.sust.b.1d.array.i64.zero
llvm.nvvm.sust.b.1d.array.i8.clamp
llvm.nvvm.sust.b.1d.array.i8.trap
llvm.nvvm.sust.b.1d.array.i8.zero
llvm.nvvm.sust.b.1d.array.v2i16.clamp
llvm.nvvm.sust.b.1d.array.v2i16.trap
llvm.nvvm.sust.b.1d.array.v2i16.zero
llvm.nvvm.sust.b.1d.array.v2i32.clamp
llvm.nvvm.sust.b.1d.array.v2i32.trap
llvm.nvvm.sust.b.1d.array.v2i32.zero
llvm.nvvm.sust.b.1d.array.v2i64.clamp
llvm.nvvm.sust.b.1d.array.v2i64.trap
llvm.nvvm.sust.b.1d.array.v2i64.zero
llvm.nvvm.sust.b.1d.array.v2i8.clamp
llvm.nvvm.sust.b.1d.array.v2i8.trap
llvm.nvvm.sust.b.1d.array.v2i8.zero
llvm.nvvm.sust.b.1d.array.v4i16.clamp
llvm.nvvm.sust.b.1d.array.v4i16.trap
llvm.nvvm.sust.b.1d.array.v4i16.zero
llvm.nvvm.sust.b.1d.array.v4i32.clamp
llvm.nvvm.sust.b.1d.array.v4i32.trap
llvm.nvvm.sust.b.1d.array.v4i32.zero
llvm.nvvm.sust.b.1d.array.v4i8.clamp
llvm.nvvm.sust.b.1d.array.v4i8.trap
llvm.nvvm.sust.b.1d.array.v4i8.zero
llvm.nvvm.sust.b.1d.i16.clamp
llvm.nvvm.sust.b.1d.i16.trap
llvm.nvvm.sust.b.1d.i16.zero
llvm.nvvm.sust.b.1d.i32.clamp
llvm.nvvm.sust.b.1d.i32.trap
llvm.nvvm.sust.b.1d.i32.zero
llvm.nvvm.sust.b.1d.i64.clamp
llvm.nvvm.sust.b.1d.i64.trap
llvm.nvvm.sust.b.1d.i64.zero
llvm.nvvm.sust.b.1d.i8.clamp
llvm.nvvm.sust.b.1d.i8.trap
llvm.nvvm.sust.b.1d.i8.zero
llvm.nvvm.sust.b.1d.v2i16.clamp
llvm.nvvm.sust.b.1d.v2i16.trap
llvm.nvvm.sust.b.1d.v2i16.zero
llvm.nvvm.sust.b.1d.v2i32.clamp
llvm.nvvm.sust.b.1d.v2i32.trap
llvm.nvvm.sust.b.1d.v2i32.zero
llvm.nvvm.sust.b.1d.v2i64.clamp
llvm.nvvm.sust.b.1d.v2i64.trap
llvm.nvvm.sust.b.1d.v2i64.zero
llvm.nvvm.sust.b.1d.v2i8.clamp
llvm.nvvm.sust.b.1d.v2i8.trap
llvm.nvvm.sust.b.1d.v2i8.zero
llvm.nvvm.sust.b.1d.v4i16.clamp
llvm.nvvm.sust.b.1d.v4i16.trap
llvm.nvvm.sust.b.1d.v4i16.zero
llvm.nvvm.sust.b.1d.v4i32.clamp
llvm.nvvm.sust.b.1d.v4i32.trap
llvm.nvvm.sust.b.1d.v4i32.zero
llvm.nvvm.sust.b.1d.v4i8.clamp
llvm.nvvm.sust.b.1d.v4i8.trap
llvm.nvvm.sust.b.1d.v4i8.zero
llvm.nvvm.sust.b.2d.array.i16.clamp
llvm.nvvm.sust.b.2d.array.i16.trap
llvm.nvvm.sust.b.2d.array.i16.zero
llvm.nvvm.sust.b.2d.array.i32.clamp
llvm.nvvm.sust.b.2d.array.i32.trap
llvm.nvvm.sust.b.2d.array.i32.zero
llvm.nvvm.sust.b.2d.array.i64.clamp
llvm.nvvm.sust.b.2d.array.i64.trap
llvm.nvvm.sust.b.2d.array.i64.zero
llvm.nvvm.sust.b.2d.array.i8.clamp
llvm.nvvm.sust.b.2d.array.i8.trap
llvm.nvvm.sust.b.2d.array.i8.zero
llvm.nvvm.sust.b.2d.array.v2i16.clamp
llvm.nvvm.sust.b.2d.array.v2i16.trap
llvm.nvvm.sust.b.2d.array.v2i16.zero
llvm.nvvm.sust.b.2d.array.v2i32.clamp
llvm.nvvm.sust.b.2d.array.v2i32.trap
llvm.nvvm.sust.b.2d.array.v2i32.zero
llvm.nvvm.sust.b.2d.array.v2i64.clamp
llvm.nvvm.sust.b.2d.array.v2i64.trap
llvm.nvvm.sust.b.2d.array.v2i64.zero
llvm.nvvm.sust.b.2d.array.v2i8.clamp
llvm.nvvm.sust.b.2d.array.v2i8.trap
llvm.nvvm.sust.b.2d.array.v2i8.zero
llvm.nvvm.sust.b.2d.array.v4i16.clamp
llvm.nvvm.sust.b.2d.array.v4i16.trap
llvm.nvvm.sust.b.2d.array.v4i16.zero
llvm.nvvm.sust.b.2d.array.v4i32.clamp
llvm.nvvm.sust.b.2d.array.v4i32.trap
llvm.nvvm.sust.b.2d.array.v4i32.zero
llvm.nvvm.sust.b.2d.array.v4i8.clamp
llvm.nvvm.sust.b.2d.array.v4i8.trap
llvm.nvvm.sust.b.2d.array.v4i8.zero
llvm.nvvm.sust.b.2d.i16.clamp
llvm.nvvm.sust.b.2d.i16.trap
llvm.nvvm.sust.b.2d.i16.zero
llvm.nvvm.sust.b.2d.i32.clamp
llvm.nvvm.sust.b.2d.i32.trap
llvm.nvvm.sust.b.2d.i32.zero
llvm.nvvm.sust.b.2d.i64.clamp
llvm.nvvm.sust.b.2d.i64.trap
llvm.nvvm.sust.b.2d.i64.zero
llvm.nvvm.sust.b.2d.i8.clamp
llvm.nvvm.sust.b.2d.i8.trap
llvm.nvvm.sust.b.2d.i8.zero
llvm.nvvm.sust.b.2d.v2i16.clamp
llvm.nvvm.sust.b.2d.v2i16.trap
llvm.nvvm.sust.b.2d.v2i16.zero
llvm.nvvm.sust.b.2d.v2i32.clamp
llvm.nvvm.sust.b.2d.v2i32.trap
llvm.nvvm.sust.b.2d.v2i32.zero
llvm.nvvm.sust.b.2d.v2i64.clamp
llvm.nvvm.sust.b.2d.v2i64.trap
llvm.nvvm.sust.b.2d.v2i64.zero
llvm.nvvm.sust.b.2d.v2i8.clamp
llvm.nvvm.sust.b.2d.v2i8.trap
llvm.nvvm.sust.b.2d.v2i8.zero
llvm.nvvm.sust.b.2d.v4i16.clamp
llvm.nvvm.sust.b.2d.v4i16.trap
llvm.nvvm.sust.b.2d.v4i16.zero
llvm.nvvm.sust.b.2d.v4i32.clamp
llvm.nvvm.sust.b.2d.v4i32.trap
llvm.nvvm.sust.b.2d.v4i32.zero
llvm.nvvm.sust.b.2d.v4i8.clamp
llvm.nvvm.sust.b.2d.v4i8.trap
llvm.nvvm.sust.b.2d.v4i8.zero
llvm.nvvm.sust.b.3d.i16.clamp
llvm.nvvm.sust.b.3d.i16.trap
llvm.nvvm.sust.b.3d.i16.zero
llvm.nvvm.sust.b.3d.i32.clamp
llvm.nvvm.sust.b.3d.i32.trap
llvm.nvvm.sust.b.3d.i32.zero
llvm.nvvm.sust.b.3d.i64.clamp
llvm.nvvm.sust.b.3d.i64.trap
llvm.nvvm.sust.b.3d.i64.zero
llvm.nvvm.sust.b.3d.i8.clamp
llvm.nvvm.sust.b.3d.i8.trap
llvm.nvvm.sust.b.3d.i8.zero
llvm.nvvm.sust.b.3d.v2i16.clamp
llvm.nvvm.sust.b.3d.v2i16.trap
llvm.nvvm.sust.b.3d.v2i16.zero
llvm.nvvm.sust.b.3d.v2i32.clamp
llvm.nvvm.sust.b.3d.v2i32.trap
llvm.nvvm.sust.b.3d.v2i32.zero
llvm.nvvm.sust.b.3d.v2i64.clamp
llvm.nvvm.sust.b.3d.v2i64.trap
llvm.nvvm.sust.b.3d.v2i64.zero
llvm.nvvm.sust.b.3d.v2i8.clamp
llvm.nvvm.sust.b.3d.v2i8.trap
llvm.nvvm.sust.b.3d.v2i8.zero
llvm.nvvm.sust.b.3d.v4i16.clamp
llvm.nvvm.sust.b.3d.v4i16.trap
llvm.nvvm.sust.b.3d.v4i16.zero
llvm.nvvm.sust.b.3d.v4i32.clamp
llvm.nvvm.sust.b.3d.v4i32.trap
llvm.nvvm.sust.b.3d.v4i32.zero
llvm.nvvm.sust.b.3d.v4i8.clamp
llvm.nvvm.sust.b.3d.v4i8.trap
llvm.nvvm.sust.b.3d.v4i8.zero
llvm.nvvm.sust.p.1d.array.i16.trap
llvm.nvvm.sust.p.1d.array.i32.trap
llvm.nvvm.sust.p.1d.array.i8.trap
llvm.nvvm.sust.p.1d.array.v2i16.trap
llvm.nvvm.sust.p.1d.array.v2i32.trap
llvm.nvvm.sust.p.1d.array.v2i8.trap
llvm.nvvm.sust.p.1d.array.v4i16.trap
llvm.nvvm.sust.p.1d.array.v4i32.trap
llvm.nvvm.sust.p.1d.array.v4i8.trap
llvm.nvvm.sust.p.1d.i16.trap
llvm.nvvm.sust.p.1d.i32.trap
llvm.nvvm.sust.p.1d.i8.trap
llvm.nvvm.sust.p.1d.v2i16.trap
llvm.nvvm.sust.p.1d.v2i32.trap
llvm.nvvm.sust.p.1d.v2i8.trap
llvm.nvvm.sust.p.1d.v4i16.trap
llvm.nvvm.sust.p.1d.v4i32.trap
llvm.nvvm.sust.p.1d.v4i8.trap
llvm.nvvm.sust.p.2d.array.i16.trap
llvm.nvvm.sust.p.2d.array.i32.trap
llvm.nvvm.sust.p.2d.array.i8.trap
llvm.nvvm.sust.p.2d.array.v2i16.trap
llvm.nvvm.sust.p.2d.array.v2i32.trap
llvm.nvvm.sust.p.2d.array.v2i8.trap
llvm.nvvm.sust.p.2d.array.v4i16.trap
llvm.nvvm.sust.p.2d.array.v4i32.trap
llvm.nvvm.sust.p.2d.array.v4i8.trap
llvm.nvvm.sust.p.2d.i16.trap
llvm.nvvm.sust.p.2d.i32.trap
llvm.nvvm.sust.p.2d.i8.trap
llvm.nvvm.sust.p.2d.v2i16.trap
llvm.nvvm.sust.p.2d.v2i32.trap
llvm.nvvm.sust.p.2d.v2i8.trap
llvm.nvvm.sust.p.2d.v4i16.trap
llvm.nvvm.sust.p.2d.v4i32.trap
llvm.nvvm.sust.p.2d.v4i8.trap
llvm.nvvm.sust.p.3d.i16.trap
llvm.nvvm.sust.p.3d.i32.trap
llvm.nvvm.sust.p.3d.i8.trap
llvm.nvvm.sust.p.3d.v2i16.trap
llvm.nvvm.sust.p.3d.v2i32.trap
llvm.nvvm.sust.p.3d.v2i8.trap
llvm.nvvm.sust.p.3d.v4i16.trap
llvm.nvvm.sust.p.3d.v4i32.trap
llvm.nvvm.sust.p.3d.v4i8.trap
llvm.nvvm.swap.lo.hi.b64
llvm.nvvm.tex.1d.array.grad.v4f32.f32
llvm.nvvm.tex.1d.array.grad.v4s32.f32
llvm.nvvm.tex.1d.array.grad.v4u32.f32
llvm.nvvm.tex.1d.array.level.v4f32.f32
llvm.nvvm.tex.1d.array.level.v4s32.f32
llvm.nvvm.tex.1d.array.level.v4u32.f32
llvm.nvvm.tex.1d.array.v4f32.f32
llvm.nvvm.tex.1d.array.v4f32.s32
llvm.nvvm.tex.1d.array.v4s32.f32
llvm.nvvm.tex.1d.array.v4s32.s32
llvm.nvvm.tex.1d.array.v4u32.f32
llvm.nvvm.tex.1d.array.v4u32.s32
llvm.nvvm.tex.1d.grad.v4f32.f32
llvm.nvvm.tex.1d.grad.v4s32.f32
llvm.nvvm.tex.1d.grad.v4u32.f32
llvm.nvvm.tex.1d.level.v4f32.f32
llvm.nvvm.tex.1d.level.v4s32.f32
llvm.nvvm.tex.1d.level.v4u32.f32
llvm.nvvm.tex.1d.v4f32.f32
llvm.nvvm.tex.1d.v4f32.s32
llvm.nvvm.tex.1d.v4s32.f32
llvm.nvvm.tex.1d.v4s32.s32
llvm.nvvm.tex.1d.v4u32.f32
llvm.nvvm.tex.1d.v4u32.s32
llvm.nvvm.tex.2d.array.grad.v4f32.f32
llvm.nvvm.tex.2d.array.grad.v4s32.f32
llvm.nvvm.tex.2d.array.grad.v4u32.f32
llvm.nvvm.tex.2d.array.level.v4f32.f32
llvm.nvvm.tex.2d.array.level.v4s32.f32
llvm.nvvm.tex.2d.array.level.v4u32.f32
llvm.nvvm.tex.2d.array.v4f32.f32
llvm.nvvm.tex.2d.array.v4f32.s32
llvm.nvvm.tex.2d.array.v4s32.f32
llvm.nvvm.tex.2d.array.v4s32.s32
llvm.nvvm.tex.2d.array.v4u32.f32
llvm.nvvm.tex.2d.array.v4u32.s32
llvm.nvvm.tex.2d.grad.v4f32.f32
llvm.nvvm.tex.2d.grad.v4s32.f32
llvm.nvvm.tex.2d.grad.v4u32.f32
llvm.nvvm.tex.2d.level.v4f32.f32
llvm.nvvm.tex.2d.level.v4s32.f32
llvm.nvvm.tex.2d.level.v4u32.f32
llvm.nvvm.tex.2d.v4f32.f32
llvm.nvvm.tex.2d.v4f32.s32
llvm.nvvm.tex.2d.v4s32.f32
llvm.nvvm.tex.2d.v4s32.s32
llvm.nvvm.tex.2d.v4u32.f32
llvm.nvvm.tex.2d.v4u32.s32
llvm.nvvm.tex.3d.grad.v4f32.f32
llvm.nvvm.tex.3d.grad.v4s32.f32
llvm.nvvm.tex.3d.grad.v4u32.f32
llvm.nvvm.tex.3d.level.v4f32.f32
llvm.nvvm.tex.3d.level.v4s32.f32
llvm.nvvm.tex.3d.level.v4u32.f32
llvm.nvvm.tex.3d.v4f32.f32
llvm.nvvm.tex.3d.v4f32.s32
llvm.nvvm.tex.3d.v4s32.f32
llvm.nvvm.tex.3d.v4s32.s32
llvm.nvvm.tex.3d.v4u32.f32
llvm.nvvm.tex.3d.v4u32.s32
llvm.nvvm.tex.cube.array.level.v4f32.f32
llvm.nvvm.tex.cube.array.level.v4s32.f32
llvm.nvvm.tex.cube.array.level.v4u32.f32
llvm.nvvm.tex.cube.array.v4f32.f32
llvm.nvvm.tex.cube.array.v4s32.f32
llvm.nvvm.tex.cube.array.v4u32.f32
llvm.nvvm.tex.cube.level.v4f32.f32
llvm.nvvm.tex.cube.level.v4s32.f32
llvm.nvvm.tex.cube.level.v4u32.f32
llvm.nvvm.tex.cube.v4f32.f32
llvm.nvvm.tex.cube.v4s32.f32
llvm.nvvm.tex.cube.v4u32.f32
llvm.nvvm.tex.unified.1d.array.grad.v4f32.f32
llvm.nvvm.tex.unified.1d.array.grad.v4s32.f32
llvm.nvvm.tex.unified.1d.array.grad.v4u32.f32
llvm.nvvm.tex.unified.1d.array.level.v4f32.f32
llvm.nvvm.tex.unified.1d.array.level.v4s32.f32
llvm.nvvm.tex.unified.1d.array.level.v4u32.f32
llvm.nvvm.tex.unified.1d.array.v4f32.f32
llvm.nvvm.tex.unified.1d.array.v4f32.s32
llvm.nvvm.tex.unified.1d.array.v4s32.f32
llvm.nvvm.tex.unified.1d.array.v4s32.s32
llvm.nvvm.tex.unified.1d.array.v4u32.f32
llvm.nvvm.tex.unified.1d.array.v4u32.s32
llvm.nvvm.tex.unified.1d.grad.v4f32.f32
llvm.nvvm.tex.unified.1d.grad.v4s32.f32
llvm.nvvm.tex.unified.1d.grad.v4u32.f32
llvm.nvvm.tex.unified.1d.level.v4f32.f32
llvm.nvvm.tex.unified.1d.level.v4s32.f32
llvm.nvvm.tex.unified.1d.level.v4u32.f32
llvm.nvvm.tex.unified.1d.v4f32.f32
llvm.nvvm.tex.unified.1d.v4f32.s32
llvm.nvvm.tex.unified.1d.v4s32.f32
llvm.nvvm.tex.unified.1d.v4s32.s32
llvm.nvvm.tex.unified.1d.v4u32.f32
llvm.nvvm.tex.unified.1d.v4u32.s32
llvm.nvvm.tex.unified.2d.array.grad.v4f32.f32
llvm.nvvm.tex.unified.2d.array.grad.v4s32.f32
llvm.nvvm.tex.unified.2d.array.grad.v4u32.f32
llvm.nvvm.tex.unified.2d.array.level.v4f32.f32
llvm.nvvm.tex.unified.2d.array.level.v4s32.f32
llvm.nvvm.tex.unified.2d.array.level.v4u32.f32
llvm.nvvm.tex.unified.2d.array.v4f32.f32
llvm.nvvm.tex.unified.2d.array.v4f32.s32
llvm.nvvm.tex.unified.2d.array.v4s32.f32
llvm.nvvm.tex.unified.2d.array.v4s32.s32
llvm.nvvm.tex.unified.2d.array.v4u32.f32
llvm.nvvm.tex.unified.2d.array.v4u32.s32
llvm.nvvm.tex.unified.2d.grad.v4f32.f32
llvm.nvvm.tex.unified.2d.grad.v4s32.f32
llvm.nvvm.tex.unified.2d.grad.v4u32.f32
llvm.nvvm.tex.unified.2d.level.v4f32.f32
llvm.nvvm.tex.unified.2d.level.v4s32.f32
llvm.nvvm.tex.unified.2d.level.v4u32.f32
llvm.nvvm.tex.unified.2d.v4f32.f32
llvm.nvvm.tex.unified.2d.v4f32.s32
llvm.nvvm.tex.unified.2d.v4s32.f32
llvm.nvvm.tex.unified.2d.v4s32.s32
llvm.nvvm.tex.unified.2d.v4u32.f32
llvm.nvvm.tex.unified.2d.v4u32.s32
llvm.nvvm.tex.unified.3d.grad.v4f32.f32
llvm.nvvm.tex.unified.3d.grad.v4s32.f32
llvm.nvvm.tex.unified.3d.grad.v4u32.f32
llvm.nvvm.tex.unified.3d.level.v4f32.f32
llvm.nvvm.tex.unified.3d.level.v4s32.f32
llvm.nvvm.tex.unified.3d.level.v4u32.f32
llvm.nvvm.tex.unified.3d.v4f32.f32
llvm.nvvm.tex.unified.3d.v4f32.s32
llvm.nvvm.tex.unified.3d.v4s32.f32
llvm.nvvm.tex.unified.3d.v4s32.s32
llvm.nvvm.tex.unified.3d.v4u32.f32
llvm.nvvm.tex.unified.3d.v4u32.s32
llvm.nvvm.tex.unified.cube.array.level.v4f32.f32
llvm.nvvm.tex.unified.cube.array.level.v4s32.f32
llvm.nvvm.tex.unified.cube.array.level.v4u32.f32
llvm.nvvm.tex.unified.cube.array.v4f32.f32
llvm.nvvm.tex.unified.cube.array.v4s32.f32
llvm.nvvm.tex.unified.cube.array.v4u32.f32
llvm.nvvm.tex.unified.cube.level.v4f32.f32
llvm.nvvm.tex.unified.cube.level.v4s32.f32
llvm.nvvm.tex.unified.cube.level.v4u32.f32
llvm.nvvm.tex.unified.cube.v4f32.f32
llvm.nvvm.tex.unified.cube.v4s32.f32
llvm.nvvm.tex.unified.cube.v4u32.f32
llvm.nvvm.texsurf.handle
llvm.nvvm.texsurf.handle.internal
llvm.nvvm.tld4.a.2d.v4f32.f32
llvm.nvvm.tld4.a.2d.v4s32.f32
llvm.nvvm.tld4.a.2d.v4u32.f32
llvm.nvvm.tld4.b.2d.v4f32.f32
llvm.nvvm.tld4.b.2d.v4s32.f32
llvm.nvvm.tld4.b.2d.v4u32.f32
llvm.nvvm.tld4.g.2d.v4f32.f32
llvm.nvvm.tld4.g.2d.v4s32.f32
llvm.nvvm.tld4.g.2d.v4u32.f32
llvm.nvvm.tld4.r.2d.v4f32.f32
llvm.nvvm.tld4.r.2d.v4s32.f32
llvm.nvvm.tld4.r.2d.v4u32.f32
llvm.nvvm.tld4.unified.a.2d.v4f32.f32
llvm.nvvm.tld4.unified.a.2d.v4s32.f32
llvm.nvvm.tld4.unified.a.2d.v4u32.f32
llvm.nvvm.tld4.unified.b.2d.v4f32.f32
llvm.nvvm.tld4.unified.b.2d.v4s32.f32
llvm.nvvm.tld4.unified.b.2d.v4u32.f32
llvm.nvvm.tld4.unified.g.2d.v4f32.f32
llvm.nvvm.tld4.unified.g.2d.v4s32.f32
llvm.nvvm.tld4.unified.g.2d.v4u32.f32
llvm.nvvm.tld4.unified.r.2d.v4f32.f32
llvm.nvvm.tld4.unified.r.2d.v4s32.f32
llvm.nvvm.tld4.unified.r.2d.v4u32.f32
llvm.nvvm.trunc.d
llvm.nvvm.trunc.f
llvm.nvvm.trunc.ftz.f
llvm.nvvm.txq.array.size
llvm.nvvm.txq.channel.data.type
llvm.nvvm.txq.channel.order
llvm.nvvm.txq.depth
llvm.nvvm.txq.height
llvm.nvvm.txq.num.mipmap.levels
llvm.nvvm.txq.num.samples
llvm.nvvm.txq.width
llvm.nvvm.ui2d.rm
llvm.nvvm.ui2d.rn
llvm.nvvm.ui2d.rp
llvm.nvvm.ui2d.rz
llvm.nvvm.ui2f.rm
llvm.nvvm.ui2f.rn
llvm.nvvm.ui2f.rp
llvm.nvvm.ui2f.rz
llvm.nvvm.ull2d.rm
llvm.nvvm.ull2d.rn
llvm.nvvm.ull2d.rp
llvm.nvvm.ull2d.rz
llvm.nvvm.ull2f.rm
llvm.nvvm.ull2f.rn
llvm.nvvm.ull2f.rp
llvm.nvvm.ull2f.rz
llvm.objectsize
llvm.pcmarker
llvm.pow
llvm.powi
llvm.ppc.altivec.dss
llvm.ppc.altivec.dssall
llvm.ppc.altivec.dst
llvm.ppc.altivec.dstst
llvm.ppc.altivec.dststt
llvm.ppc.altivec.dstt
llvm.ppc.altivec.lvebx
llvm.ppc.altivec.lvehx
llvm.ppc.altivec.lvewx
llvm.ppc.altivec.lvsl
llvm.ppc.altivec.lvsr
llvm.ppc.altivec.lvx
llvm.ppc.altivec.lvxl
llvm.ppc.altivec.mfvscr
llvm.ppc.altivec.mtvscr
llvm.ppc.altivec.stvebx
llvm.ppc.altivec.stvehx
llvm.ppc.altivec.stvewx
llvm.ppc.altivec.stvx
llvm.ppc.altivec.stvxl
llvm.ppc.altivec.vaddcuw
llvm.ppc.altivec.vaddsbs
llvm.ppc.altivec.vaddshs
llvm.ppc.altivec.vaddsws
llvm.ppc.altivec.vaddubs
llvm.ppc.altivec.vadduhs
llvm.ppc.altivec.vadduws
llvm.ppc.altivec.vavgsb
llvm.ppc.altivec.vavgsh
llvm.ppc.altivec.vavgsw
llvm.ppc.altivec.vavgub
llvm.ppc.altivec.vavguh
llvm.ppc.altivec.vavguw
llvm.ppc.altivec.vcfsx
llvm.ppc.altivec.vcfux
llvm.ppc.altivec.vcmpbfp
llvm.ppc.altivec.vcmpbfp.p
llvm.ppc.altivec.vcmpeqfp
llvm.ppc.altivec.vcmpeqfp.p
llvm.ppc.altivec.vcmpequb
llvm.ppc.altivec.vcmpequb.p
llvm.ppc.altivec.vcmpequh
llvm.ppc.altivec.vcmpequh.p
llvm.ppc.altivec.vcmpequw
llvm.ppc.altivec.vcmpequw.p
llvm.ppc.altivec.vcmpgefp
llvm.ppc.altivec.vcmpgefp.p
llvm.ppc.altivec.vcmpgtfp
llvm.ppc.altivec.vcmpgtfp.p
llvm.ppc.altivec.vcmpgtsb
llvm.ppc.altivec.vcmpgtsb.p
llvm.ppc.altivec.vcmpgtsh
llvm.ppc.altivec.vcmpgtsh.p
llvm.ppc.altivec.vcmpgtsw
llvm.ppc.altivec.vcmpgtsw.p
llvm.ppc.altivec.vcmpgtub
llvm.ppc.altivec.vcmpgtub.p
llvm.ppc.altivec.vcmpgtuh
llvm.ppc.altivec.vcmpgtuh.p
llvm.ppc.altivec.vcmpgtuw
llvm.ppc.altivec.vcmpgtuw.p
llvm.ppc.altivec.vctsxs
llvm.ppc.altivec.vctuxs
llvm.ppc.altivec.vexptefp
llvm.ppc.altivec.vlogefp
llvm.ppc.altivec.vmaddfp
llvm.ppc.altivec.vmaxfp
llvm.ppc.altivec.vmaxsb
llvm.ppc.altivec.vmaxsh
llvm.ppc.altivec.vmaxsw
llvm.ppc.altivec.vmaxub
llvm.ppc.altivec.vmaxuh
llvm.ppc.altivec.vmaxuw
llvm.ppc.altivec.vmhaddshs
llvm.ppc.altivec.vmhraddshs
llvm.ppc.altivec.vminfp
llvm.ppc.altivec.vminsb
llvm.ppc.altivec.vminsh
llvm.ppc.altivec.vminsw
llvm.ppc.altivec.vminub
llvm.ppc.altivec.vminuh
llvm.ppc.altivec.vminuw
llvm.ppc.altivec.vmladduhm
llvm.ppc.altivec.vmsummbm
llvm.ppc.altivec.vmsumshm
llvm.ppc.altivec.vmsumshs
llvm.ppc.altivec.vmsumubm
llvm.ppc.altivec.vmsumuhm
llvm.ppc.altivec.vmsumuhs
llvm.ppc.altivec.vmulesb
llvm.ppc.altivec.vmulesh
llvm.ppc.altivec.vmuleub
llvm.ppc.altivec.vmuleuh
llvm.ppc.altivec.vmulosb
llvm.ppc.altivec.vmulosh
llvm.ppc.altivec.vmuloub
llvm.ppc.altivec.vmulouh
llvm.ppc.altivec.vnmsubfp
llvm.ppc.altivec.vperm
llvm.ppc.altivec.vpkpx
llvm.ppc.altivec.vpkshss
llvm.ppc.altivec.vpkshus
llvm.ppc.altivec.vpkswss
llvm.ppc.altivec.vpkswus
llvm.ppc.altivec.vpkuhus
llvm.ppc.altivec.vpkuwus
llvm.ppc.altivec.vrefp
llvm.ppc.altivec.vrfim
llvm.ppc.altivec.vrfin
llvm.ppc.altivec.vrfip
llvm.ppc.altivec.vrfiz
llvm.ppc.altivec.vrlb
llvm.ppc.altivec.vrlh
llvm.ppc.altivec.vrlw
llvm.ppc.altivec.vrsqrtefp
llvm.ppc.altivec.vsel
llvm.ppc.altivec.vsl
llvm.ppc.altivec.vslb
llvm.ppc.altivec.vslh
llvm.ppc.altivec.vslo
llvm.ppc.altivec.vslw
llvm.ppc.altivec.vsr
llvm.ppc.altivec.vsrab
llvm.ppc.altivec.vsrah
llvm.ppc.altivec.vsraw
llvm.ppc.altivec.vsrb
llvm.ppc.altivec.vsrh
llvm.ppc.altivec.vsro
llvm.ppc.altivec.vsrw
llvm.ppc.altivec.vsubcuw
llvm.ppc.altivec.vsubsbs
llvm.ppc.altivec.vsubshs
llvm.ppc.altivec.vsubsws
llvm.ppc.altivec.vsububs
llvm.ppc.altivec.vsubuhs
llvm.ppc.altivec.vsubuws
llvm.ppc.altivec.vsum2sws
llvm.ppc.altivec.vsum4sbs
llvm.ppc.altivec.vsum4shs
llvm.ppc.altivec.vsum4ubs
llvm.ppc.altivec.vsumsws
llvm.ppc.altivec.vupkhpx
llvm.ppc.altivec.vupkhsb
llvm.ppc.altivec.vupkhsh
llvm.ppc.altivec.vupklpx
llvm.ppc.altivec.vupklsb
llvm.ppc.altivec.vupklsh
llvm.ppc.dcba
llvm.ppc.dcbf
llvm.ppc.dcbi
llvm.ppc.dcbst
llvm.ppc.dcbt
llvm.ppc.dcbtst
llvm.ppc.dcbz
llvm.ppc.dcbzl
llvm.ppc.is.decremented.ctr.nonzero
llvm.ppc.mtctr
llvm.ppc.sync
llvm.prefetch
llvm.ptr.annotation
llvm.ptx.bar.sync
llvm.ptx.read.clock
llvm.ptx.read.clock64
llvm.ptx.read.ctaid.w
llvm.ptx.read.ctaid.x
llvm.ptx.read.ctaid.y
llvm.ptx.read.ctaid.z
llvm.ptx.read.gridid
llvm.ptx.read.laneid
llvm.ptx.read.lanemask.eq
llvm.ptx.read.lanemask.ge
llvm.ptx.read.lanemask.gt
llvm.ptx.read.lanemask.le
llvm.ptx.read.lanemask.lt
llvm.ptx.read.nctaid.w
llvm.ptx.read.nctaid.x
llvm.ptx.read.nctaid.y
llvm.ptx.read.nctaid.z
llvm.ptx.read.nsmid
llvm.ptx.read.ntid.w
llvm.ptx.read.ntid.x
llvm.ptx.read.ntid.y
llvm.ptx.read.ntid.z
llvm.ptx.read.nwarpid
llvm.ptx.read.pm0
llvm.ptx.read.pm1
llvm.ptx.read.pm2
llvm.ptx.read.pm3
llvm.ptx.read.smid
llvm.ptx.read.tid.w
llvm.ptx.read.tid.x
llvm.ptx.read.tid.y
llvm.ptx.read.tid.z
llvm.ptx.read.warpid
llvm.r600.read.global.size.x
llvm.r600.read.global.size.y
llvm.r600.read.global.size.z
llvm.r600.read.local.size.x
llvm.r600.read.local.size.y
llvm.r600.read.local.size.z
llvm.r600.read.ngroups.x
llvm.r600.read.ngroups.y
llvm.r600.read.ngroups.z
llvm.r600.read.tgid.x
llvm.r600.read.tgid.y
llvm.r600.read.tgid.z
llvm.r600.read.tidig.x
llvm.r600.read.tidig.y
llvm.r600.read.tidig.z
llvm.read_register
llvm.readcyclecounter
llvm.returnaddress
llvm.rint
llvm.round
llvm.sadd.with.overflow
llvm.setjmp
llvm.siglongjmp
llvm.sigsetjmp
llvm.sin
llvm.smul.with.overflow
llvm.sqrt
llvm.ssub.with.overflow
llvm.stackprotector
llvm.stackprotectorcheck
llvm.stackrestore
llvm.stacksave
llvm.trap
llvm.trunc
llvm.uadd.with.overflow
llvm.umul.with.overflow
llvm.usub.with.overflow
llvm.va_copy
llvm.va_end
llvm.var.annotation
llvm.va_start
llvm.write_register
llvm.x86.3dnow.pavgusb
llvm.x86.3dnow.pf2id
llvm.x86.3dnow.pfacc
llvm.x86.3dnow.pfadd
llvm.x86.3dnow.pfcmpeq
llvm.x86.3dnow.pfcmpge
llvm.x86.3dnow.pfcmpgt
llvm.x86.3dnow.pfmax
llvm.x86.3dnow.pfmin
llvm.x86.3dnow.pfmul
llvm.x86.3dnow.pfrcp
llvm.x86.3dnow.pfrcpit1
llvm.x86.3dnow.pfrcpit2
llvm.x86.3dnow.pfrsqit1
llvm.x86.3dnow.pfrsqrt
llvm.x86.3dnow.pfsub
llvm.x86.3dnow.pfsubr
llvm.x86.3dnow.pi2fd
llvm.x86.3dnow.pmulhrw
llvm.x86.3dnowa.pf2iw
llvm.x86.3dnowa.pfnacc
llvm.x86.3dnowa.pfpnacc
llvm.x86.3dnowa.pi2fw
llvm.x86.3dnowa.pswapd
llvm.x86.aesni.aesdec
llvm.x86.aesni.aesdeclast
llvm.x86.aesni.aesenc
llvm.x86.aesni.aesenclast
llvm.x86.aesni.aesimc
llvm.x86.aesni.aeskeygenassist
llvm.x86.avx2.gather.d.d
llvm.x86.avx2.gather.d.d.256
llvm.x86.avx2.gather.d.pd
llvm.x86.avx2.gather.d.pd.256
llvm.x86.avx2.gather.d.ps
llvm.x86.avx2.gather.d.ps.256
llvm.x86.avx2.gather.d.q
llvm.x86.avx2.gather.d.q.256
llvm.x86.avx2.gather.q.d
llvm.x86.avx2.gather.q.d.256
llvm.x86.avx2.gather.q.pd
llvm.x86.avx2.gather.q.pd.256
llvm.x86.avx2.gather.q.ps
llvm.x86.avx2.gather.q.ps.256
llvm.x86.avx2.gather.q.q
llvm.x86.avx2.gather.q.q.256
llvm.x86.avx2.maskload.d
llvm.x86.avx2.maskload.d.256
llvm.x86.avx2.maskload.q
llvm.x86.avx2.maskload.q.256
llvm.x86.avx2.maskstore.d
llvm.x86.avx2.maskstore.d.256
llvm.x86.avx2.maskstore.q
llvm.x86.avx2.maskstore.q.256
llvm.x86.avx2.movntdqa
llvm.x86.avx2.mpsadbw
llvm.x86.avx2.pabs.b
llvm.x86.avx2.pabs.d
llvm.x86.avx2.pabs.w
llvm.x86.avx2.packssdw
llvm.x86.avx2.packsswb
llvm.x86.avx2.packusdw
llvm.x86.avx2.packuswb
llvm.x86.avx2.padds.b
llvm.x86.avx2.padds.w
llvm.x86.avx2.paddus.b
llvm.x86.avx2.paddus.w
llvm.x86.avx2.pavg.b
llvm.x86.avx2.pavg.w
llvm.x86.avx2.pblendd.128
llvm.x86.avx2.pblendd.256
llvm.x86.avx2.pblendvb
llvm.x86.avx2.pblendw
llvm.x86.avx2.pbroadcastb.128
llvm.x86.avx2.pbroadcastb.256
llvm.x86.avx2.pbroadcastd.128
llvm.x86.avx2.pbroadcastd.256
llvm.x86.avx2.pbroadcastq.128
llvm.x86.avx2.pbroadcastq.256
llvm.x86.avx2.pbroadcastw.128
llvm.x86.avx2.pbroadcastw.256
llvm.x86.avx2.permd
llvm.x86.avx2.permps
llvm.x86.avx2.phadd.d
llvm.x86.avx2.phadd.sw
llvm.x86.avx2.phadd.w
llvm.x86.avx2.phsub.d
llvm.x86.avx2.phsub.sw
llvm.x86.avx2.phsub.w
llvm.x86.avx2.pmadd.ub.sw
llvm.x86.avx2.pmadd.wd
llvm.x86.avx2.pmaxs.b
llvm.x86.avx2.pmaxs.d
llvm.x86.avx2.pmaxs.w
llvm.x86.avx2.pmaxu.b
llvm.x86.avx2.pmaxu.d
llvm.x86.avx2.pmaxu.w
llvm.x86.avx2.pmins.b
llvm.x86.avx2.pmins.d
llvm.x86.avx2.pmins.w
llvm.x86.avx2.pminu.b
llvm.x86.avx2.pminu.d
llvm.x86.avx2.pminu.w
llvm.x86.avx2.pmovmskb
llvm.x86.avx2.pmovsxbd
llvm.x86.avx2.pmovsxbq
llvm.x86.avx2.pmovsxbw
llvm.x86.avx2.pmovsxdq
llvm.x86.avx2.pmovsxwd
llvm.x86.avx2.pmovsxwq
llvm.x86.avx2.pmovzxbd
llvm.x86.avx2.pmovzxbq
llvm.x86.avx2.pmovzxbw
llvm.x86.avx2.pmovzxdq
llvm.x86.avx2.pmovzxwd
llvm.x86.avx2.pmovzxwq
llvm.x86.avx2.pmul.dq
llvm.x86.avx2.pmul.hr.sw
llvm.x86.avx2.pmulh.w
llvm.x86.avx2.pmulhu.w
llvm.x86.avx2.pmulu.dq
llvm.x86.avx2.psad.bw
llvm.x86.avx2.pshuf.b
llvm.x86.avx2.psign.b
llvm.x86.avx2.psign.d
llvm.x86.avx2.psign.w
llvm.x86.avx2.psll.d
llvm.x86.avx2.psll.dq
llvm.x86.avx2.psll.dq.bs
llvm.x86.avx2.psll.q
llvm.x86.avx2.psll.w
llvm.x86.avx2.pslli.d
llvm.x86.avx2.pslli.q
llvm.x86.avx2.pslli.w
llvm.x86.avx2.psllv.d
llvm.x86.avx2.psllv.d.256
llvm.x86.avx2.psllv.q
llvm.x86.avx2.psllv.q.256
llvm.x86.avx2.psra.d
llvm.x86.avx2.psra.w
llvm.x86.avx2.psrai.d
llvm.x86.avx2.psrai.w
llvm.x86.avx2.psrav.d
llvm.x86.avx2.psrav.d.256
llvm.x86.avx2.psrl.d
llvm.x86.avx2.psrl.dq
llvm.x86.avx2.psrl.dq.bs
llvm.x86.avx2.psrl.q
llvm.x86.avx2.psrl.w
llvm.x86.avx2.psrli.d
llvm.x86.avx2.psrli.q
llvm.x86.avx2.psrli.w
llvm.x86.avx2.psrlv.d
llvm.x86.avx2.psrlv.d.256
llvm.x86.avx2.psrlv.q
llvm.x86.avx2.psrlv.q.256
llvm.x86.avx2.psubs.b
llvm.x86.avx2.psubs.w
llvm.x86.avx2.psubus.b
llvm.x86.avx2.psubus.w
llvm.x86.avx2.vbroadcast.sd.pd.256
llvm.x86.avx2.vbroadcast.ss.ps
llvm.x86.avx2.vbroadcast.ss.ps.256
llvm.x86.avx2.vbroadcasti128
llvm.x86.avx2.vextracti128
llvm.x86.avx2.vinserti128
llvm.x86.avx2.vperm2i128
llvm.x86.avx512.cvtsd2usi
llvm.x86.avx512.cvtsd2usi64
llvm.x86.avx512.cvtss2usi
llvm.x86.avx512.cvtss2usi64
llvm.x86.avx512.cvttsd2usi
llvm.x86.avx512.cvttsd2usi64
llvm.x86.avx512.cvttss2usi
llvm.x86.avx512.cvttss2usi64
llvm.x86.avx512.cvtusi2sd
llvm.x86.avx512.cvtusi2ss
llvm.x86.avx512.cvtusi642sd
llvm.x86.avx512.cvtusi642ss
llvm.x86.avx512.gather.dpd.512
llvm.x86.avx512.gather.dpi.512
llvm.x86.avx512.gather.dpq.512
llvm.x86.avx512.gather.dps.512
llvm.x86.avx512.gather.qpd.512
llvm.x86.avx512.gather.qpi.512
llvm.x86.avx512.gather.qpq.512
llvm.x86.avx512.gather.qps.512
llvm.x86.avx512.gatherpf.dpd.512
llvm.x86.avx512.gatherpf.dps.512
llvm.x86.avx512.gatherpf.qpd.512
llvm.x86.avx512.gatherpf.qps.512
llvm.x86.avx512.kand.w
llvm.x86.avx512.kandn.w
llvm.x86.avx512.knot.w
llvm.x86.avx512.kor.w
llvm.x86.avx512.kortestc.w
llvm.x86.avx512.kortestz.w
llvm.x86.avx512.kunpck.bw
llvm.x86.avx512.kxnor.w
llvm.x86.avx512.kxor.w
llvm.x86.avx512.mask.blend.d.512
llvm.x86.avx512.mask.blend.pd.512
llvm.x86.avx512.mask.blend.ps.512
llvm.x86.avx512.mask.blend.q.512
llvm.x86.avx512.mask.cmp.pd.512
llvm.x86.avx512.mask.cmp.ps.512
llvm.x86.avx512.mask.conflict.d.512
llvm.x86.avx512.mask.conflict.q.512
llvm.x86.avx512.mask.cvtdq2pd.512
llvm.x86.avx512.mask.cvtdq2ps.512
llvm.x86.avx512.mask.cvtpd2dq.512
llvm.x86.avx512.mask.cvtpd2ps.512
llvm.x86.avx512.mask.cvtpd2udq.512
llvm.x86.avx512.mask.cvtps2dq.512
llvm.x86.avx512.mask.cvtps2udq.512
llvm.x86.avx512.mask.cvttpd2dq.512
llvm.x86.avx512.mask.cvttpd2udq.512
llvm.x86.avx512.mask.cvttps2dq.512
llvm.x86.avx512.mask.cvttps2udq.512
llvm.x86.avx512.mask.cvtudq2pd.512
llvm.x86.avx512.mask.cvtudq2ps.512
llvm.x86.avx512.mask.loadu.d.512
llvm.x86.avx512.mask.loadu.pd.512
llvm.x86.avx512.mask.loadu.ps.512
llvm.x86.avx512.mask.loadu.q.512
llvm.x86.avx512.mask.lzcnt.d.512
llvm.x86.avx512.mask.lzcnt.q.512
llvm.x86.avx512.mask.max.pd.512
llvm.x86.avx512.mask.max.ps.512
llvm.x86.avx512.mask.min.pd.512
llvm.x86.avx512.mask.min.ps.512
llvm.x86.avx512.mask.pabs.d.512
llvm.x86.avx512.mask.pabs.q.512
llvm.x86.avx512.mask.pand.d.512
llvm.x86.avx512.mask.pand.q.512
llvm.x86.avx512.mask.pbroadcast.d.gpr.512
llvm.x86.avx512.mask.pbroadcast.q.gpr.512
llvm.x86.avx512.mask.pbroadcast.q.mem.512
llvm.x86.avx512.mask.pcmpeq.d.512
llvm.x86.avx512.mask.pcmpeq.q.512
llvm.x86.avx512.mask.pmaxs.d.512
llvm.x86.avx512.mask.pmaxs.q.512
llvm.x86.avx512.mask.pmaxu.d.512
llvm.x86.avx512.mask.pmaxu.q.512
llvm.x86.avx512.mask.pmins.d.512
llvm.x86.avx512.mask.pmins.q.512
llvm.x86.avx512.mask.pminu.d.512
llvm.x86.avx512.mask.pminu.q.512
llvm.x86.avx512.mask.pmul.dq.512
llvm.x86.avx512.mask.pmulu.dq.512
llvm.x86.avx512.mask.ptestm.d.512
llvm.x86.avx512.mask.ptestm.q.512
llvm.x86.avx512.mask.rndscale.pd.512
llvm.x86.avx512.mask.rndscale.ps.512
llvm.x86.avx512.mask.storeu.d.512
llvm.x86.avx512.mask.storeu.pd.512
llvm.x86.avx512.mask.storeu.ps.512
llvm.x86.avx512.mask.storeu.q.512
llvm.x86.avx512.mask.valign.d.512
llvm.x86.avx512.mask.valign.q.512
llvm.x86.avx512.mask.vcvtph2ps.512
llvm.x86.avx512.mask.vcvtps2ph.512
llvm.x86.avx512.mask.vpermt.d.512
llvm.x86.avx512.mask.vpermt.pd.512
llvm.x86.avx512.mask.vpermt.ps.512
llvm.x86.avx512.mask.vpermt.q.512
llvm.x86.avx512.movntdqa
llvm.x86.avx512.pbroadcastd.512
llvm.x86.avx512.pbroadcastd.i32.512
llvm.x86.avx512.pbroadcastq.512
llvm.x86.avx512.pbroadcastq.i64.512
llvm.x86.avx512.pmovzxbd
llvm.x86.avx512.pmovzxbq
llvm.x86.avx512.pmovzxdq
llvm.x86.avx512.pmovzxwd
llvm.x86.avx512.pmovzxwq
llvm.x86.avx512.psll.dq
llvm.x86.avx512.psll.dq.bs
llvm.x86.avx512.psrl.dq
llvm.x86.avx512.psrl.dq.bs
llvm.x86.avx512.rcp14.pd.512
llvm.x86.avx512.rcp14.ps.512
llvm.x86.avx512.rcp14.sd
llvm.x86.avx512.rcp14.ss
llvm.x86.avx512.rcp28.pd
llvm.x86.avx512.rcp28.ps
llvm.x86.avx512.rcp28.sd
llvm.x86.avx512.rcp28.ss
llvm.x86.avx512.rndscale.sd
llvm.x86.avx512.rndscale.ss
llvm.x86.avx512.rsqrt14.pd.512
llvm.x86.avx512.rsqrt14.ps.512
llvm.x86.avx512.rsqrt14.sd
llvm.x86.avx512.rsqrt14.ss
llvm.x86.avx512.rsqrt28.pd
llvm.x86.avx512.rsqrt28.ps
llvm.x86.avx512.rsqrt28.sd
llvm.x86.avx512.rsqrt28.ss
llvm.x86.avx512.scatter.dpd.512
llvm.x86.avx512.scatter.dpi.512
llvm.x86.avx512.scatter.dpq.512
llvm.x86.avx512.scatter.dps.512
llvm.x86.avx512.scatter.qpd.512
llvm.x86.avx512.scatter.qpi.512
llvm.x86.avx512.scatter.qpq.512
llvm.x86.avx512.scatter.qps.512
llvm.x86.avx512.scatterpf.dpd.512
llvm.x86.avx512.scatterpf.dps.512
llvm.x86.avx512.scatterpf.qpd.512
llvm.x86.avx512.scatterpf.qps.512
llvm.x86.avx512.sqrt.pd.512
llvm.x86.avx512.sqrt.ps.512
llvm.x86.avx512.sqrt.sd
llvm.x86.avx512.sqrt.ss
llvm.x86.avx512.vbroadcast.sd.512
llvm.x86.avx512.vbroadcast.sd.pd.512
llvm.x86.avx512.vbroadcast.ss.512
llvm.x86.avx512.vbroadcast.ss.ps.512
llvm.x86.avx.addsub.pd.256
llvm.x86.avx.addsub.ps.256
llvm.x86.avx.blend.pd.256
llvm.x86.avx.blend.ps.256
llvm.x86.avx.blendv.pd.256
llvm.x86.avx.blendv.ps.256
llvm.x86.avx.cmp.pd.256
llvm.x86.avx.cmp.ps.256
llvm.x86.avx.cvt.pd2.ps.256
llvm.x86.avx.cvt.pd2dq.256
llvm.x86.avx.cvt.ps2.pd.256
llvm.x86.avx.cvt.ps2dq.256
llvm.x86.avx.cvtdq2.pd.256
llvm.x86.avx.cvtdq2.ps.256
llvm.x86.avx.cvtt.pd2dq.256
llvm.x86.avx.cvtt.ps2dq.256
llvm.x86.avx.dp.ps.256
llvm.x86.avx.hadd.pd.256
llvm.x86.avx.hadd.ps.256
llvm.x86.avx.hsub.pd.256
llvm.x86.avx.hsub.ps.256
llvm.x86.avx.ldu.dq.256
llvm.x86.avx.maskload.pd
llvm.x86.avx.maskload.pd.256
llvm.x86.avx.maskload.ps
llvm.x86.avx.maskload.ps.256
llvm.x86.avx.maskstore.pd
llvm.x86.avx.maskstore.pd.256
llvm.x86.avx.maskstore.ps
llvm.x86.avx.maskstore.ps.256
llvm.x86.avx.max.pd.256
llvm.x86.avx.max.ps.256
llvm.x86.avx.min.pd.256
llvm.x86.avx.min.ps.256
llvm.x86.avx.movmsk.pd.256
llvm.x86.avx.movmsk.ps.256
llvm.x86.avx.ptestc.256
llvm.x86.avx.ptestnzc.256
llvm.x86.avx.ptestz.256
llvm.x86.avx.rcp.ps.256
llvm.x86.avx.round.pd.256
llvm.x86.avx.round.ps.256
llvm.x86.avx.rsqrt.ps.256
llvm.x86.avx.sqrt.pd.256
llvm.x86.avx.sqrt.ps.256
llvm.x86.avx.storeu.dq.256
llvm.x86.avx.storeu.pd.256
llvm.x86.avx.storeu.ps.256
llvm.x86.avx.vbroadcastf128.pd.256
llvm.x86.avx.vbroadcastf128.ps.256
llvm.x86.avx.vextractf128.pd.256
llvm.x86.avx.vextractf128.ps.256
llvm.x86.avx.vextractf128.si.256
llvm.x86.avx.vinsertf128.pd.256
llvm.x86.avx.vinsertf128.ps.256
llvm.x86.avx.vinsertf128.si.256
llvm.x86.avx.vperm2f128.pd.256
llvm.x86.avx.vperm2f128.ps.256
llvm.x86.avx.vperm2f128.si.256
llvm.x86.avx.vpermilvar.pd
llvm.x86.avx.vpermilvar.pd.256
llvm.x86.avx.vpermilvar.ps
llvm.x86.avx.vpermilvar.ps.256
llvm.x86.avx.vtestc.pd
llvm.x86.avx.vtestc.pd.256
llvm.x86.avx.vtestc.ps
llvm.x86.avx.vtestc.ps.256
llvm.x86.avx.vtestnzc.pd
llvm.x86.avx.vtestnzc.pd.256
llvm.x86.avx.vtestnzc.ps
llvm.x86.avx.vtestnzc.ps.256
llvm.x86.avx.vtestz.pd
llvm.x86.avx.vtestz.pd.256
llvm.x86.avx.vtestz.ps
llvm.x86.avx.vtestz.ps.256
llvm.x86.avx.vzeroall
llvm.x86.avx.vzeroupper
llvm.x86.bmi.bextr.32
llvm.x86.bmi.bextr.64
llvm.x86.bmi.bzhi.32
llvm.x86.bmi.bzhi.64
llvm.x86.bmi.pdep.32
llvm.x86.bmi.pdep.64
llvm.x86.bmi.pext.32
llvm.x86.bmi.pext.64
llvm.x86.fma.mask.vfmadd.pd.512
llvm.x86.fma.mask.vfmadd.ps.512
llvm.x86.fma.mask.vfmaddsub.pd.512
llvm.x86.fma.mask.vfmaddsub.ps.512
llvm.x86.fma.mask.vfmsub.pd.512
llvm.x86.fma.mask.vfmsub.ps.512
llvm.x86.fma.mask.vfmsubadd.pd.512
llvm.x86.fma.mask.vfmsubadd.ps.512
llvm.x86.fma.mask.vfnmadd.pd.512
llvm.x86.fma.mask.vfnmadd.ps.512
llvm.x86.fma.mask.vfnmsub.pd.512
llvm.x86.fma.mask.vfnmsub.ps.512
llvm.x86.fma.vfmadd.pd
llvm.x86.fma.vfmadd.pd.256
llvm.x86.fma.vfmadd.ps
llvm.x86.fma.vfmadd.ps.256
llvm.x86.fma.vfmadd.sd
llvm.x86.fma.vfmadd.ss
llvm.x86.fma.vfmaddsub.pd
llvm.x86.fma.vfmaddsub.pd.256
llvm.x86.fma.vfmaddsub.ps
llvm.x86.fma.vfmaddsub.ps.256
llvm.x86.fma.vfmsub.pd
llvm.x86.fma.vfmsub.pd.256
llvm.x86.fma.vfmsub.ps
llvm.x86.fma.vfmsub.ps.256
llvm.x86.fma.vfmsub.sd
llvm.x86.fma.vfmsub.ss
llvm.x86.fma.vfmsubadd.pd
llvm.x86.fma.vfmsubadd.pd.256
llvm.x86.fma.vfmsubadd.ps
llvm.x86.fma.vfmsubadd.ps.256
llvm.x86.fma.vfnmadd.pd
llvm.x86.fma.vfnmadd.pd.256
llvm.x86.fma.vfnmadd.ps
llvm.x86.fma.vfnmadd.ps.256
llvm.x86.fma.vfnmadd.sd
llvm.x86.fma.vfnmadd.ss
llvm.x86.fma.vfnmsub.pd
llvm.x86.fma.vfnmsub.pd.256
llvm.x86.fma.vfnmsub.ps
llvm.x86.fma.vfnmsub.ps.256
llvm.x86.fma.vfnmsub.sd
llvm.x86.fma.vfnmsub.ss
llvm.x86.int
llvm.x86.mmx.emms
llvm.x86.mmx.femms
llvm.x86.mmx.maskmovq
llvm.x86.mmx.movnt.dq
llvm.x86.mmx.packssdw
llvm.x86.mmx.packsswb
llvm.x86.mmx.packuswb
llvm.x86.mmx.padd.b
llvm.x86.mmx.padd.d
llvm.x86.mmx.padd.q
llvm.x86.mmx.padd.w
llvm.x86.mmx.padds.b
llvm.x86.mmx.padds.w
llvm.x86.mmx.paddus.b
llvm.x86.mmx.paddus.w
llvm.x86.mmx.palignr.b
llvm.x86.mmx.pand
llvm.x86.mmx.pandn
llvm.x86.mmx.pavg.b
llvm.x86.mmx.pavg.w
llvm.x86.mmx.pcmpeq.b
llvm.x86.mmx.pcmpeq.d
llvm.x86.mmx.pcmpeq.w
llvm.x86.mmx.pcmpgt.b
llvm.x86.mmx.pcmpgt.d
llvm.x86.mmx.pcmpgt.w
llvm.x86.mmx.pextr.w
llvm.x86.mmx.pinsr.w
llvm.x86.mmx.pmadd.wd
llvm.x86.mmx.pmaxs.w
llvm.x86.mmx.pmaxu.b
llvm.x86.mmx.pmins.w
llvm.x86.mmx.pminu.b
llvm.x86.mmx.pmovmskb
llvm.x86.mmx.pmulh.w
llvm.x86.mmx.pmulhu.w
llvm.x86.mmx.pmull.w
llvm.x86.mmx.pmulu.dq
llvm.x86.mmx.por
llvm.x86.mmx.psad.bw
llvm.x86.mmx.psll.d
llvm.x86.mmx.psll.q
llvm.x86.mmx.psll.w
llvm.x86.mmx.pslli.d
llvm.x86.mmx.pslli.q
llvm.x86.mmx.pslli.w
llvm.x86.mmx.psra.d
llvm.x86.mmx.psra.w
llvm.x86.mmx.psrai.d
llvm.x86.mmx.psrai.w
llvm.x86.mmx.psrl.d
llvm.x86.mmx.psrl.q
llvm.x86.mmx.psrl.w
llvm.x86.mmx.psrli.d
llvm.x86.mmx.psrli.q
llvm.x86.mmx.psrli.w
llvm.x86.mmx.psub.b
llvm.x86.mmx.psub.d
llvm.x86.mmx.psub.q
llvm.x86.mmx.psub.w
llvm.x86.mmx.psubs.b
llvm.x86.mmx.psubs.w
llvm.x86.mmx.psubus.b
llvm.x86.mmx.psubus.w
llvm.x86.mmx.punpckhbw
llvm.x86.mmx.punpckhdq
llvm.x86.mmx.punpckhwd
llvm.x86.mmx.punpcklbw
llvm.x86.mmx.punpckldq
llvm.x86.mmx.punpcklwd
llvm.x86.mmx.pxor
llvm.x86.pclmulqdq
llvm.x86.rdfsbase.32
llvm.x86.rdfsbase.64
llvm.x86.rdgsbase.32
llvm.x86.rdgsbase.64
llvm.x86.rdpmc
llvm.x86.rdrand.16
llvm.x86.rdrand.32
llvm.x86.rdrand.64
llvm.x86.rdseed.16
llvm.x86.rdseed.32
llvm.x86.rdseed.64
llvm.x86.rdtsc
llvm.x86.rdtscp
llvm.x86.sha1msg1
llvm.x86.sha1msg2
llvm.x86.sha1nexte
llvm.x86.sha1rnds4
llvm.x86.sha256msg1
llvm.x86.sha256msg2
llvm.x86.sha256rnds2
llvm.x86.sse2.add.sd
llvm.x86.sse2.clflush
llvm.x86.sse2.cmp.pd
llvm.x86.sse2.cmp.sd
llvm.x86.sse2.comieq.sd
llvm.x86.sse2.comige.sd
llvm.x86.sse2.comigt.sd
llvm.x86.sse2.comile.sd
llvm.x86.sse2.comilt.sd
llvm.x86.sse2.comineq.sd
llvm.x86.sse2.cvtdq2pd
llvm.x86.sse2.cvtdq2ps
llvm.x86.sse2.cvtpd2dq
llvm.x86.sse2.cvtpd2ps
llvm.x86.sse2.cvtps2dq
llvm.x86.sse2.cvtps2pd
llvm.x86.sse2.cvtsd2si
llvm.x86.sse2.cvtsd2si64
llvm.x86.sse2.cvtsd2ss
llvm.x86.sse2.cvtsi2sd
llvm.x86.sse2.cvtsi642sd
llvm.x86.sse2.cvtss2sd
llvm.x86.sse2.cvttpd2dq
llvm.x86.sse2.cvttps2dq
llvm.x86.sse2.cvttsd2si
llvm.x86.sse2.cvttsd2si64
llvm.x86.sse2.div.sd
llvm.x86.sse2.lfence
llvm.x86.sse2.maskmov.dqu
llvm.x86.sse2.max.pd
llvm.x86.sse2.max.sd
llvm.x86.sse2.mfence
llvm.x86.sse2.min.pd
llvm.x86.sse2.min.sd
llvm.x86.sse2.movmsk.pd
llvm.x86.sse2.mul.sd
llvm.x86.sse2.packssdw.128
llvm.x86.sse2.packsswb.128
llvm.x86.sse2.packuswb.128
llvm.x86.sse2.padds.b
llvm.x86.sse2.padds.w
llvm.x86.sse2.paddus.b
llvm.x86.sse2.paddus.w
llvm.x86.sse2.pause
llvm.x86.sse2.pavg.b
llvm.x86.sse2.pavg.w
llvm.x86.sse2.pmadd.wd
llvm.x86.sse2.pmaxs.w
llvm.x86.sse2.pmaxu.b
llvm.x86.sse2.pmins.w
llvm.x86.sse2.pminu.b
llvm.x86.sse2.pmovmskb.128
llvm.x86.sse2.pmulh.w
llvm.x86.sse2.pmulhu.w
llvm.x86.sse2.pmulu.dq
llvm.x86.sse2.psad.bw
llvm.x86.sse2.pshuf.d
llvm.x86.sse2.pshufh.w
llvm.x86.sse2.pshufl.w
llvm.x86.sse2.psll.d
llvm.x86.sse2.psll.dq
llvm.x86.sse2.psll.dq.bs
llvm.x86.sse2.psll.q
llvm.x86.sse2.psll.w
llvm.x86.sse2.pslli.d
llvm.x86.sse2.pslli.q
llvm.x86.sse2.pslli.w
llvm.x86.sse2.psra.d
llvm.x86.sse2.psra.w
llvm.x86.sse2.psrai.d
llvm.x86.sse2.psrai.w
llvm.x86.sse2.psrl.d
llvm.x86.sse2.psrl.dq
llvm.x86.sse2.psrl.dq.bs
llvm.x86.sse2.psrl.q
llvm.x86.sse2.psrl.w
llvm.x86.sse2.psrli.d
llvm.x86.sse2.psrli.q
llvm.x86.sse2.psrli.w
llvm.x86.sse2.psubs.b
llvm.x86.sse2.psubs.w
llvm.x86.sse2.psubus.b
llvm.x86.sse2.psubus.w
llvm.x86.sse2.sqrt.pd
llvm.x86.sse2.sqrt.sd
llvm.x86.sse2.storel.dq
llvm.x86.sse2.storeu.dq
llvm.x86.sse2.storeu.pd
llvm.x86.sse2.sub.sd
llvm.x86.sse2.ucomieq.sd
llvm.x86.sse2.ucomige.sd
llvm.x86.sse2.ucomigt.sd
llvm.x86.sse2.ucomile.sd
llvm.x86.sse2.ucomilt.sd
llvm.x86.sse2.ucomineq.sd
llvm.x86.sse3.addsub.pd
llvm.x86.sse3.addsub.ps
llvm.x86.sse3.hadd.pd
llvm.x86.sse3.hadd.ps
llvm.x86.sse3.hsub.pd
llvm.x86.sse3.hsub.ps
llvm.x86.sse3.ldu.dq
llvm.x86.sse3.monitor
llvm.x86.sse3.mwait
llvm.x86.sse41.blendpd
llvm.x86.sse41.blendps
llvm.x86.sse41.blendvpd
llvm.x86.sse41.blendvps
llvm.x86.sse41.dppd
llvm.x86.sse41.dpps
llvm.x86.sse41.extractps
llvm.x86.sse41.insertps
llvm.x86.sse41.movntdqa
llvm.x86.sse41.mpsadbw
llvm.x86.sse41.packusdw
llvm.x86.sse41.pblendvb
llvm.x86.sse41.pblendw
llvm.x86.sse41.pextrb
llvm.x86.sse41.pextrd
llvm.x86.sse41.pextrq
llvm.x86.sse41.phminposuw
llvm.x86.sse41.pmaxsb
llvm.x86.sse41.pmaxsd
llvm.x86.sse41.pmaxud
llvm.x86.sse41.pmaxuw
llvm.x86.sse41.pminsb
llvm.x86.sse41.pminsd
llvm.x86.sse41.pminud
llvm.x86.sse41.pminuw
llvm.x86.sse41.pmovsxbd
llvm.x86.sse41.pmovsxbq
llvm.x86.sse41.pmovsxbw
llvm.x86.sse41.pmovsxdq
llvm.x86.sse41.pmovsxwd
llvm.x86.sse41.pmovsxwq
llvm.x86.sse41.pmovzxbd
llvm.x86.sse41.pmovzxbq
llvm.x86.sse41.pmovzxbw
llvm.x86.sse41.pmovzxdq
llvm.x86.sse41.pmovzxwd
llvm.x86.sse41.pmovzxwq
llvm.x86.sse41.pmuldq
llvm.x86.sse41.ptestc
llvm.x86.sse41.ptestnzc
llvm.x86.sse41.ptestz
llvm.x86.sse41.round.pd
llvm.x86.sse41.round.ps
llvm.x86.sse41.round.sd
llvm.x86.sse41.round.ss
llvm.x86.sse42.crc32.32.16
llvm.x86.sse42.crc32.32.32
llvm.x86.sse42.crc32.32.8
llvm.x86.sse42.crc32.64.64
llvm.x86.sse42.pcmpestri128
llvm.x86.sse42.pcmpestria128
llvm.x86.sse42.pcmpestric128
llvm.x86.sse42.pcmpestrio128
llvm.x86.sse42.pcmpestris128
llvm.x86.sse42.pcmpestriz128
llvm.x86.sse42.pcmpestrm128
llvm.x86.sse42.pcmpistri128
llvm.x86.sse42.pcmpistria128
llvm.x86.sse42.pcmpistric128
llvm.x86.sse42.pcmpistrio128
llvm.x86.sse42.pcmpistris128
llvm.x86.sse42.pcmpistriz128
llvm.x86.sse42.pcmpistrm128
llvm.x86.sse4a.extrq
llvm.x86.sse4a.extrqi
llvm.x86.sse4a.insertq
llvm.x86.sse4a.insertqi
llvm.x86.sse4a.movnt.sd
llvm.x86.sse4a.movnt.ss
llvm.x86.sse.add.ss
llvm.x86.sse.cmp.ps
llvm.x86.sse.cmp.ss
llvm.x86.sse.comieq.ss
llvm.x86.sse.comige.ss
llvm.x86.sse.comigt.ss
llvm.x86.sse.comile.ss
llvm.x86.sse.comilt.ss
llvm.x86.sse.comineq.ss
llvm.x86.sse.cvtpd2pi
llvm.x86.sse.cvtpi2pd
llvm.x86.sse.cvtpi2ps
llvm.x86.sse.cvtps2pi
llvm.x86.sse.cvtsi2ss
llvm.x86.sse.cvtsi642ss
llvm.x86.sse.cvtss2si
llvm.x86.sse.cvtss2si64
llvm.x86.sse.cvttpd2pi
llvm.x86.sse.cvttps2pi
llvm.x86.sse.cvttss2si
llvm.x86.sse.cvttss2si64
llvm.x86.sse.div.ss
llvm.x86.sse.ldmxcsr
llvm.x86.sse.max.ps
llvm.x86.sse.max.ss
llvm.x86.sse.min.ps
llvm.x86.sse.min.ss
llvm.x86.sse.movmsk.ps
llvm.x86.sse.mul.ss
llvm.x86.sse.pshuf.w
llvm.x86.sse.rcp.ps
llvm.x86.sse.rcp.ss
llvm.x86.sse.rsqrt.ps
llvm.x86.sse.rsqrt.ss
llvm.x86.sse.sfence
llvm.x86.sse.sqrt.ps
llvm.x86.sse.sqrt.ss
llvm.x86.sse.stmxcsr
llvm.x86.sse.storeu.ps
llvm.x86.sse.sub.ss
llvm.x86.sse.ucomieq.ss
llvm.x86.sse.ucomige.ss
llvm.x86.sse.ucomigt.ss
llvm.x86.sse.ucomile.ss
llvm.x86.sse.ucomilt.ss
llvm.x86.sse.ucomineq.ss
llvm.x86.ssse3.pabs.b
llvm.x86.ssse3.pabs.b.128
llvm.x86.ssse3.pabs.d
llvm.x86.ssse3.pabs.d.128
llvm.x86.ssse3.pabs.w
llvm.x86.ssse3.pabs.w.128
llvm.x86.ssse3.phadd.d
llvm.x86.ssse3.phadd.d.128
llvm.x86.ssse3.phadd.sw
llvm.x86.ssse3.phadd.sw.128
llvm.x86.ssse3.phadd.w
llvm.x86.ssse3.phadd.w.128
llvm.x86.ssse3.phsub.d
llvm.x86.ssse3.phsub.d.128
llvm.x86.ssse3.phsub.sw
llvm.x86.ssse3.phsub.sw.128
llvm.x86.ssse3.phsub.w
llvm.x86.ssse3.phsub.w.128
llvm.x86.ssse3.pmadd.ub.sw
llvm.x86.ssse3.pmadd.ub.sw.128
llvm.x86.ssse3.pmul.hr.sw
llvm.x86.ssse3.pmul.hr.sw.128
llvm.x86.ssse3.pshuf.b
llvm.x86.ssse3.pshuf.b.128
llvm.x86.ssse3.psign.b
llvm.x86.ssse3.psign.b.128
llvm.x86.ssse3.psign.d
llvm.x86.ssse3.psign.d.128
llvm.x86.ssse3.psign.w
llvm.x86.ssse3.psign.w.128
llvm.x86.tbm.bextri.u32
llvm.x86.tbm.bextri.u64
llvm.x86.vcvtph2ps.128
llvm.x86.vcvtph2ps.256
llvm.x86.vcvtps2ph.128
llvm.x86.vcvtps2ph.256
llvm.x86.wrfsbase.32
llvm.x86.wrfsbase.64
llvm.x86.wrgsbase.32
llvm.x86.wrgsbase.64
llvm.x86.xabort
llvm.x86.xbegin
llvm.x86.xend
llvm.x86.xop.vfrcz.pd
llvm.x86.xop.vfrcz.pd.256
llvm.x86.xop.vfrcz.ps
llvm.x86.xop.vfrcz.ps.256
llvm.x86.xop.vfrcz.sd
llvm.x86.xop.vfrcz.ss
llvm.x86.xop.vpcmov
llvm.x86.xop.vpcmov.256
llvm.x86.xop.vpcomb
llvm.x86.xop.vpcomd
llvm.x86.xop.vpcomq
llvm.x86.xop.vpcomub
llvm.x86.xop.vpcomud
llvm.x86.xop.vpcomuq
llvm.x86.xop.vpcomuw
llvm.x86.xop.vpcomw
llvm.x86.xop.vpermil2pd
llvm.x86.xop.vpermil2pd.256
llvm.x86.xop.vpermil2ps
llvm.x86.xop.vpermil2ps.256
llvm.x86.xop.vphaddbd
llvm.x86.xop.vphaddbq
llvm.x86.xop.vphaddbw
llvm.x86.xop.vphadddq
llvm.x86.xop.vphaddubd
llvm.x86.xop.vphaddubq
llvm.x86.xop.vphaddubw
llvm.x86.xop.vphaddudq
llvm.x86.xop.vphadduwd
llvm.x86.xop.vphadduwq
llvm.x86.xop.vphaddwd
llvm.x86.xop.vphaddwq
llvm.x86.xop.vphsubbw
llvm.x86.xop.vphsubdq
llvm.x86.xop.vphsubwd
llvm.x86.xop.vpmacsdd
llvm.x86.xop.vpmacsdqh
llvm.x86.xop.vpmacsdql
llvm.x86.xop.vpmacssdd
llvm.x86.xop.vpmacssdqh
llvm.x86.xop.vpmacssdql
llvm.x86.xop.vpmacsswd
llvm.x86.xop.vpmacssww
llvm.x86.xop.vpmacswd
llvm.x86.xop.vpmacsww
llvm.x86.xop.vpmadcsswd
llvm.x86.xop.vpmadcswd
llvm.x86.xop.vpperm
llvm.x86.xop.vprotb
llvm.x86.xop.vprotbi
llvm.x86.xop.vprotd
llvm.x86.xop.vprotdi
llvm.x86.xop.vprotq
llvm.x86.xop.vprotqi
llvm.x86.xop.vprotw
llvm.x86.xop.vprotwi
llvm.x86.xop.vpshab
llvm.x86.xop.vpshad
llvm.x86.xop.vpshaq
llvm.x86.xop.vpshaw
llvm.x86.xop.vpshlb
llvm.x86.xop.vpshld
llvm.x86.xop.vpshlq
llvm.x86.xop.vpshlw
llvm.x86.xtest
llvm.xcore.bitrev
llvm.xcore.checkevent
llvm.xcore.chkct
llvm.xcore.clre
llvm.xcore.clrpt
llvm.xcore.clrsr
llvm.xcore.crc32
llvm.xcore.crc8
llvm.xcore.edu
llvm.xcore.eeu
llvm.xcore.endin
llvm.xcore.freer
llvm.xcore.geted
llvm.xcore.getet
llvm.xcore.getid
llvm.xcore.getps
llvm.xcore.getr
llvm.xcore.getst
llvm.xcore.getts
llvm.xcore.in
llvm.xcore.inct
llvm.xcore.initcp
llvm.xcore.initdp
llvm.xcore.initlr
llvm.xcore.initpc
llvm.xcore.initsp
llvm.xcore.inshr
llvm.xcore.int
llvm.xcore.mjoin
llvm.xcore.msync
llvm.xcore.out
llvm.xcore.outct
llvm.xcore.outshr
llvm.xcore.outt
llvm.xcore.peek
llvm.xcore.setc
llvm.xcore.setclk
llvm.xcore.setd
llvm.xcore.setev
llvm.xcore.setps
llvm.xcore.setpsc
llvm.xcore.setpt
llvm.xcore.setrdy
llvm.xcore.setsr
llvm.xcore.settw
llvm.xcore.setv
llvm.xcore.sext
llvm.xcore.ssync
llvm.xcore.syncr
llvm.xcore.testct
llvm.xcore.testwct
llvm.xcore.waitevent
llvm.xcore.zext
__nvvm_h2f
__nvvm_
bs_i
lz_i
ad_i
vvm_
bs_ll
z_ll
opc_i
d_ui
rt_f
yncthreads
uiltin_trap
ar0_or
oor_
x_ull
n_ull
opc_ll
ound_
runc_
dd_r
ar0_and
ull_r
ohi_i2d
4_ui
cp_r
ar0_popc
mbar_gl
lhi_ull
rt_r
eil_ftz_f
2f_r
_ftz
_rn_ftz
bs_ftz_f
x_ftz_f
n_ftz_f
embar_
otate_b
turate_
q_height
xq_height
itcast_
oor_ftz_f
ound_ftz_f
runc_ftz_f
uiltin_debugtrap
_ftz_f
os_approx_f
pprox_f
x2_approx_
g2_approx_
ul_r
in_approx_f
uiltin_
lt_rounds
tack_save
vvm_sqrt_
a32_vp
bject_size
nwind_init
sspacep_
sqrt_approx_
turate_ftz_f
q_array_size
ap_lo_hi_b64
xq_array_size
a32_v
ar_sync
ead_pm
pacep_
ypep_
xq_num_samples
tx_read_smid
tack_restore
os_approx_ftz_f
iv_approx_ftz_f
x2_approx_ftz_f
g2_approx_ftz_f
p_approx_ftz_d
tate_right_b64
in_approx_ftz_f
tx_read_
rt_approx_ftz_f
_channel_order
d_i8_
d_i8_trap
xq_channel_order
32_v
rczp
mov_256
it_trampoline
tid_
sqrt_approx_ftz_f
ust_
_clamp
6_trap
2_trap
uiltin_ptx_read_
aid_
ead_ptx_sreg_tid_
6_clamp
2_clamp
4_clamp
i8_trap
djust_trampoline
tx_read_nctaid_
ead_ptx_sreg_ntid_
uiltin_ia32_vpermil2p
ead_ptx_sreg_
taid_
_channel_data_type
t_b_
hannel_data_type
um_mipmap_levels
__nvvm_read_ptx_sreg_
ctaid_
uiltin_ptx_read_lanemask_
vvm_sust_
d_array_i8_
d_array_i8_trap
__nvvm_sust_
d_array_i
d_array_
d_array_v
__nvvm_sust_b_
AMDGPU
__builtin_amdgpu_r
__builtin_amdgpu_ldexp
__builtin_amdgpu_div_fmas
__builtin_amdgpu_div_
ixup
cale
__builtin_amdgpu_trig_preop
__builtin_amdgpu_rsq_clamped
__builtin_arm_
__builtin_arm_mcrr2
et_fpscr
__builtin_thread_pointer
hexagon
__builtin_circ_ldd
__builtin_HEXAGON_
2_or
_orn
_lsli
__builtin_
EXAGON_
_andnp
_or_or
r_or
2_brevp
I_to_SXTHI_asrh
_cmp
nd_or
or_or
r_ori
r_andn
pyu_up
or_and
r_andi
und_r
_vaddhubs
_bitsclri
nd_andn
a_sc
acs_s
ysu_up
c_s0
y_s0
or_xacc
lrbit_
_r_v
tbit_
stbit_
r_andix
ddb_map
ubb_map
ound_r
_pxfer_map
_nbitsclri
onv_
_lib
csc_s
acsc_s
p_s1
cs_s
ys_s
c2s_s
y2s_s
_whc
mpyw_acc
nsert_rp
tstbit_
_popcountp
2_combine_
2_conv_
mpyrsc_s
s_s0
u_s0
_rs1
s_rs
mpyrs_s
_add
mpyh_acc
ertp_rp
xtract_rp
sl_ri
sr_ri
_asrhub_sat
ddh_
ubh_
ddub_acc
adub_acc
cmpbeq_any
4_fastcorner9
yud_
_s0c
dasl_rrri
xtractu_rp
ogglebit_
xtractp_rp
ubi_
4_round_r
_sat
2_vrcmpys_s1rp
sl_i_
_xacc
xtractup_rp
sr_i_
p_s1_sat
mpy2s_s
c_up_s1_sat
yri_addr_u2
ac_up_s1_sat
_vsat
b_nopack
h_nopack
_vrcrotate_acc
_chop
cc_s0
ac_s0
nd_s0
c_s0_sat_
_sat_
cmpys_acc_s1
_vrmpy
h_acc_s
_svw_trun
ub_nopack
uh_nopack
16_sat_
4_fastcorner9_not
2_mpyud_
__builtin_HEXAGON_M2_mpy_
cc_sat_
ac_sat_
at_rnd_
__builtin_HEXAGON_S5_vasrhrnd_goodsyntax
__builtin_HEXAGON_S2_tableidx
_goodsyntax
__builtin_HEXAGON_S2_asr_i_
_rnd_goodsyntax
__builtin_HEXAGON_S5_asrhub_rnd_sat_goodsyntax
mips
__builtin_m
ps_l
nd_v
or_v
ri_b
hilo
di_b
ve_v
cnt_
shf_
ori_b
ppend
l_ph
lri_
nzi_b
egi_
og2_
int_
sve_
ubv_
l_q_
lat_
bvi_
epl_
otp_
lass_
x_a_
n_a_
sqrt_
nsert_
d_q_
ub_q_
lr_q_
lati_
sq_s_w
h_qb
posge32
_w_ph
xtr_
s_ph
_s_w
l_s_w
a_r_w
ddr_q_
ubr_q_
sq_s_
_r_w
q_ph
x_w_ph
xtr_rs_w
ulq_
ackrl_ph
l_s_ph
a_r_
trunc_
ubsu
__builtin_mips_
h_r_ph
h_r_qb
mpu_
q_qb
u_h_qb
_rs_ph
a_w_ph
addu_w_qb
mpgu_
w_ph
_l_w
aq_s_w_ph
qb_ph
_ph_w
mpgdu_
qx_s_w_ph
aq_sa_w_ph
q_w_ph
q_qb_ph
qx_sa_w_ph
q_s_w_ph
receu_ph_qb
uleu_s_ph_qb
u_ph_qb
_ph_qb
sra_ph_w
_rs_ph_w
__builtin_mips_prec
qu_ph_qb
qu_s_qb_ph
__builtin_mips_precr_sra_r_ph_w
__builtin_altivec_
__builtin_altivec_v
l_4si
mpbfp_p
erm_4si
fp_p
r600
__builtin_r600_read_tgid_
__builtin_r600_read_tidig_
__builtin_r600_read_ngroups_
__builtin_r600_read_local_size_
__builtin_r600_read_global_size_
__builtin_ia32_por
__builtin_ia32_
xtrq
orhi
ddqu
xtrqi
ndhi
othi
vntq
endp
flush
mineq
pps256
nsertq
ndnhi
norhi
itor
ignr
gusb
ddsw
ubsw
ddwd
ddsubp
misd
unpckhi
ddqu256
kmovq
tdqa
lhrsw
cpps256
a1msg
comineq
eroall
ec128
nc128
mc128
extr_u
misdneq
ather
askload
rmti256
dubsw
comisd
xtri_u
642s
oadp
ovdqu
sadbw
ddus
lend
ldqi
estm
sbase
dscales
undp
qrtps256
orelv4si
comisdneq
estnzcp
eroupper
q256
s256
d256
atherpf
nsertps128
skstorep
qu256
2dq256
xtractps128
iv8d
mulqdq128
rmvars
addubsw
_mask
catterpf
2ps256
2ph256
xt_v4hi
et_v4hi
ermilvarp
eclast128
nclast128
512_mask
v16s
iv16s
nsert128i256
minposuw128
catter
testnzcp
xtract128i256
askstorep
roadcast
ldq512_mask
atter
ubaddp
oadup
mpeq
uludq512_mask
p14p
dscalep
roadcasts
lendm
_512_mask
q512_mask
s512_mask
2dq512_mask
toreup
erm2f128_
i256
lendmp
2udq512_mask
oaddqu
i512_mask
sqrt14p
2ps512_mask
2ph512_mask
nsertf128_
eskeygenassist128
vttp
toredqu
xtractf128_
__builtin_ia32_v
ermt2var
28_byteshift
56_byteshift
12_byteshift
roadcastf128_p
ermt2varp
__builtin_ia32_vpconflict
i_512_mask
__builtin_ia32_pbroadcast
512_gpr_mask
512_
pr_mask
em_mask
xcore
etps
__builtin_bitrev
_MoveToCoprocessor
_MoveToCoprocessor2
_MoveFromCoprocessor
_MoveFromCoprocessor2
GCOV versions do not match.
File checksums do not match: 
Unexpected number of functions.
 in (
Block tag not found.
Unexpected block number: 
 (in 
Multiple sources for a single basic block: 
Function identifiers do not match: 
Function checksums do not match: 
Function names do not match: 
Arc tag not found (in 
Unexpected number of edges (in 
===== 
) @ 
Block : 
 Counter : 
Source Edges : 
Destination Edges : 
Lines : 
.gcov
        -:    0:Source:
        -:    0:Graph:
        -:    0:Data:
        -:    0:Runs:
        -:    0:Programs:
        -:
    #####:
%9llu:
function 
 called 
 returned 
% blocks executed 
    $$$$$:
%5u-block %2u
branch %2u 
unconditional %2u 
Lines executed:%.2f%% of %u
Branches executed:%.2f%% of %u
Taken at least once:%.2f%% of %u
No branches
No calls
:creating '
Unexpected file type: 
*204
*404
Unexpected version: 
Unexpected end of memory buffer: 
adcg
/*EOF*/
%5u:
never executed
taken 
Print module to stderr
print-module
Print function to stderr
print-function
Print BB to stderr
print-bb
<Invalid operator> 
both values to select must have same type
vector select condition element type must be i1
selected values for vector select must be vectors
vector select requires selected vectors to have the same vector length as select condition
select condition must be i1 or <n x i1>
mallocsize
malloccall
prof
fpmath
range
tbaa.struct
alias.scope
error: 
warning: 
remark: 
note: 
GENERIC
LLVM
This is probably because you removed an object, but didn't 
delete it.  Please check your code for memory leaks.
Leaked 
 objects found: 
debug-pass
Print PassManager debugging information
disable debug output
Arguments
print pass arguments to pass to 'opt'
Structure
print pass structure before run()
Executions
print pass name before it is executed
Details
print pass details when it is executed
print-before
Print IR before specified passes
print-after
Print IR after specified passes
print-before-all
Print IR before each pass
print-after-all
Print IR after each pass
Releasing pass '
Running pass '
 on module '
 on 
basic block
value
Pass '
' is not initialized.
Verify if there is a pass dependency cycle.
Required Passes:
Error: Required pass not found! Possible causes:
- Pass misconfiguration (e.g.: missing macros)
- Corruption of the global PassRegistry
*** IR Dump Before 
 ***
*** IR Dump After 
Pass Arguments: 
 -- '
' is not preserving '
 -*- '
' is the last user of following pass instances.
 Free these instances
Executing Pass '
Made Modification '
 Freeing Pass '
' on BasicBlock '
'...
' on Function '
' on Module '
' on Region '
' on Loop '
' on Call Graph Nodes '
Required
Preserved
 Analyses:
 Uninitialized Pass
Error reading bitcode file: 
FunctionPass Manager
time-passes
Time each pass, printing elapsed time for each on exit
Module Pass Manager
ModulePass Manager
... Pass execution timing report ...
BasicBlock Pass Manager
BasicBlockPass Manager
Function Pass Manager
__unnamed_
llvm.module.flags
Dwarf Version
Unnamed pass: implement Pass::getPassName()
Pass::print not implemented for pass: '
Two passes with the same argument (-
) attempted to be registered!
debug-pass-manager
Print pass management debugging information
Starting module pass manager run.
Running module pass: 
Finished module pass manager run.
Starting function pass manager run.
Running function pass: 
Finished function pass manager run.
preserve-bc-use-list-order
Experimental support to preserve bitcode use-list order.
preserve-ll-use-list-order
Experimental support to preserve assembly use-list order.
ppcf128
isVoid
x86mmx
v16i1
v32i1
v64i1
v16i8
v32i8
v64i8
v1i16
v2i16
v4i16
v8i16
v16i16
v32i16
v1i32
v2i32
v4i32
v8i32
v16i32
v1i64
v2i64
v4i64
v8i64
v16i64
v1f32
v2f32
v2f16
v4f16
v8f16
v4f32
v8f32
v16f32
v1f64
v2f64
v4f64
v8f64
Untyped
verify-debug-info
' does not contain an entry block!
Basic Block in function '
' does not have terminator!
Function context does not match Module context!
Functions may not have common linkage
# formal arguments must match # of arguments for function type!
Functions cannot return aggregate values!
Invalid struct return type!
Attribute after last parameter!
Attribute 'builtin' can only be applied to a callsite.
Varargs functions must have C calling conventions!
Argument value does not match function argument type!
Function arguments must have first-class types!
Function takes metadata but isn't an intrinsic
invalid linkage type for function declaration
llvm intrinsics cannot be defined!
Entry block to function must not have predecessors!
blockaddress may not be used with the entry block!
Invalid user of intrinsic instruction!
Function is marked as dllimport, but not external.
More than one parameter has attribute nest!
More than one parameter has attribute returned!
Incompatible argument and return types for 'returned' attribute
Cannot have multiple 'sret' parameters!
Attribute 'sret' is not on first or second parameter!
inalloca isn't on the last parameter!
Attributes 'readnone and readonly' are incompatible!
Attributes 'noinline and alwaysinline' are incompatible!
Attribute 'optnone' requires 'noinline'!
Attributes 'optsize and optnone' are incompatible!
Attributes 'minsize and optnone' are incompatible!
Attribute 'jumptable' requires 'unnamed_addr'
Attributes 'byval', 'inalloca', 'nest', 'sret', 'nocapture', and 'returned' do not apply to return values!
Attributes 'byval', 'inalloca', 'inreg', 'nest', and 'sret' are incompatible!
Attributes 'inalloca and readonly' are incompatible!
Attributes 'sret and returned' are incompatible!
Attributes 'zeroext and signext' are incompatible!
Wrong types for attribute: 
Attributes 'byval' and 'inalloca' do not support unsized types!
Attribute 'byval' only applies to parameters with pointer type!
Attribute '
' only applies to functions!
' does not apply to function returns
' does not apply to functions!
Basic Block does not have terminator!
PHI nodes must have at least one entry.  If the block is dead, the PHI should be removed!
PHINode should have one entry for each predecessor of its parent basic block!
PHI node has multiple entries for the same basic block with different incoming values!
PHI node entries do not match predecessors!
Operand is null
Found return instr that returns non-void in Function of void return type!
Function return type does not match operand type of return inst!
Terminator found in the middle of a basic block!
Instruction not embedded in basic block!
Only PHI nodes may reference their own value!
Instruction has a name, but provides a void value!
Instruction returns a non-scalar type!
Invalid use of metadata!
Instruction referencing instruction not embedded in a basic block!
Use of instruction is not an instruction!
Instruction has null operand!
Instruction operands must be first-class values!
Cannot take the address of an intrinsic!
Cannot invoke an intrinsinc other than donothing
Referencing function in another module!
Referring to a basic block in another function!
Referring to an argument in another function!
Referencing global in another module!
Cannot take the address of an inline asm!
fpmath requires a floating point result!
fpmath takes one operand!
fpmath accuracy not a positive number!
invalid fpmath accuracy!
Ranges are only for loads, calls and invokes!
Instruction does not dominate all uses!
Bitcast requires both operands to be pointer or neither
Bitcast requires types of same width
Bitcast operand must not be aggregate
Bitcast type must not be aggregate
Bitcasts between pointers of different address spaces is not legal.Use AddrSpaceCast instead.
Branch condition is not 'i1' type!
Switch constants must all be same type as switch value!
Duplicate integer as switch case
Indirectbr operand must have pointer type!
Indirectbr destinations must all have pointer type!
The unwind destination does not have a landingpad instruction!
Called function must be a pointer!
Called function is not pointer to function type!
Called function requires more parameters than were provided!
Incorrect number of arguments passed to called function!
Call parameter type does not match function signature!
inalloca argument for call has mismatched alloca
Attribute 'sret' cannot be used for vararg call arguments!
inalloca isn't on the last argument!
Function has metadata parameter but isn't an intrinsic
Both operands to a binary operator are not of the same type!
Integer arithmetic operators only work with integral types!
Integer arithmetic operators must have same type for operands and result!
Floating-point arithmetic operators only work with floating-point types!
Floating-point arithmetic operators must have same type for operands and result!
Logical operators only work with integral types!
Logical operators must have same type for operands and result!
Shifts only work with integral types!
Shift return type must be same as operands!
Allocation instruction pointer not in the generic address space!
Cannot allocate unsized type
Alloca array size must have integer type
huge alignment values are unsupported
Load operand must be a pointer.
Load result type does not match pointer operand type!
Load cannot have Release ordering
Atomic load must specify explicit alignment
atomic load operand must have integer type!
atomic load operand must be power-of-two byte-sized integer
Non-atomic load cannot have SynchronizationScope specified
Unfinished range!
It should have at least one range!
The lower limit must be an integer!
The upper limit must be an integer!
Range types must match load type!
Range must not be empty!
Intervals are overlapping
Intervals are not in order
Intervals are contiguous
Store operand must be a pointer.
Stored value type does not match pointer operand type!
Store cannot have Acquire ordering
Atomic store must specify explicit alignment
atomic store operand must have integer type!
atomic store operand must be power-of-two byte-sized integer
Non-atomic store cannot have SynchronizationScope specified
GEP base pointer is not a vector or a vector of pointers
GEP into unsized type!
Vector GEP must return a vector value
Invalid indices for GEP pointer type!
GEP is not of right type for indices!
Vector GEP result width doesn't match operand's
Vector GEP must have vector indices!
Invalid GEP index vector width
fence instructions may only have acquire, release, acq_rel, or seq_cst ordering.
cmpxchg instructions must be atomic.
cmpxchg instructions cannot be unordered.
cmpxchg instructions be at least as constrained on success as fail
First cmpxchg operand must be a pointer.
cmpxchg operand must have integer type!
Expected value type does not match pointer operand type!
atomicrmw instructions must be atomic.
atomicrmw instructions cannot be unordered.
First atomicrmw operand must be a pointer.
atomicrmw operand must have integer type!
Argument value type does not match pointer operand type!
Invalid binary operation!
Trunc only operates on integer
Trunc only produces integer
trunc source and destination must both be a vector or neither
DestTy too big for Trunc
ZExt only operates on integer
ZExt only produces an integer
zext source and destination must both be a vector or neither
Type too small for ZExt
SExt only operates on integer
SExt only produces an integer
sext source and destination must both be a vector or neither
Type too small for SExt
FPToUI source and dest must both be vector or scalar
FPToUI source must be FP or FP vector
FPToUI result must be integer or integer vector
FPToUI source and dest vector length mismatch
FPToSI source and dest must both be vector or scalar
FPToSI source must be FP or FP vector
FPToSI result must be integer or integer vector
FPToSI source and dest vector length mismatch
UIToFP source and dest must both be vector or scalar
UIToFP source must be integer or integer vector
UIToFP result must be FP or FP vector
UIToFP source and dest vector length mismatch
SIToFP source and dest must both be vector or scalar
SIToFP source must be integer or integer vector
SIToFP result must be FP or FP vector
SIToFP source and dest vector length mismatch
FPTrunc only operates on FP
FPTrunc only produces an FP
fptrunc source and destination must both be a vector or neither
DestTy too big for FPTrunc
FPExt only operates on FP
FPExt only produces an FP
fpext source and destination must both be a vector or neither
DestTy too small for FPExt
PtrToInt source must be pointer
PtrToInt result must be integral
PtrToInt type mismatch
PtrToInt Vector width mismatch
IntToPtr source must be an integral
IntToPtr result must be a pointer
IntToPtr type mismatch
IntToPtr Vector width mismatch
AddrSpaceCast source must be a pointer
AddrSpaceCast result must be a pointer
AddrSpaceCast must be between different address spaces
AddrSpaceCast vector pointer number of elements mismatch
Both operands to ICmp instruction are not of the same type!
Invalid operand types for ICmp instruction
Invalid predicate in ICmp instruction!
Both operands to FCmp instruction are not of the same type!
Invalid operand types for FCmp instruction
Invalid predicate in FCmp instruction!
PHI nodes not grouped at top of basic block!
PHI node operands are not the same type as the result!
cannot use musttail call with inline asm
cannot guarantee tail call due to mismatched parameter counts
cannot guarantee tail call due to mismatched varargs
cannot guarantee tail call due to mismatched return types
cannot guarantee tail call due to mismatched parameter types
cannot guarantee tail call due to mismatched calling conv
cannot guarantee tail call due to mismatched ABI impacting function attributes
bitcast following musttail call must use the call
musttail call must be precede a ret with an optional bitcast
musttail call result must be returned
Intrinsic functions should never be defined!
Intrinsic has incorrect return type!
Intrinsic has incorrect argument type!
Intrinsic was not defined with variable arguments!
Callsite was not defined with variable arguments!
Intrinsic name not mangled correctly for type arguments! Should be: 
is_zero_undef argument of bit counting intrinsics must be a constant int
invalid llvm.dbg.declare intrinsic call 1
invalid llvm.dbg.declare intrinsic call 2
alignment argument of memory intrinsics must be a constant int
isvolatile argument of memory intrinsics must be a constant int
llvm.gcroot parameter #1 must be an alloca.
llvm.gcroot parameter #2 must be a constant.
llvm.gcroot parameter #1 must either be a pointer alloca, or argument #2 must be a non-null constant.
Enclosing function does not use GC.
llvm.init_trampoline parameter #2 must resolve to a function.
invalid arguments to llvm.prefetch
llvm.stackprotector parameter #2 must resolve to an alloca.
size argument of memory use markers must be a constant integer
llvm.invariant.end parameter #2 must be a constant integer
Global metadata operand cannot be function local!
Invalid operand for global metadata!
function-local metadata used in wrong function
Invalid operands for select instruction!
Select values must have same type as select instruction!
User-defined operators should not live outside of a pass!
Invalid extractelement operands!
Invalid insertelement operands!
Invalid shufflevector operands!
Invalid ExtractValueInst operands!
Invalid InsertValueInst operands!
LandingPadInst needs at least one clause or to be a cleanup.
Block containing LandingPadInst must be jumped to only by the unwind edge of an invoke.
LandingPadInst not the first non-PHI instruction in the block.
Personality function doesn't match others in function
Personality function is not constant!
Catch operand does not have pointer type!
Filter operand is not an array of constants!
Global is external, but doesn't have external or weak linkage!
Only global variables can have appending linkage!
Only global arrays can have appending linkage!
Global variable initializer type does not match global variable type!
'common' global must have a zero initializer!
'common' global may not be marked constant!
'common' global may not be in a Comdat!
invalid linkage type for global declaration
invalid linkage for intrinsic global variable
wrong type for intrinsic global variable
wrong initalizer for intrinsic global variable
invalid llvm.used member
members of llvm.used must be named
Global is marked as dllimport, but not external
Alias name cannot be empty!
Alias should have private, internal, linkonce, weak, linkonce_odr, weak_odr, or external linkage!
Aliasee cannot be NULL!
Alias and aliasee types should match!
Aliasee should be either GlobalValue or ConstantExpr
Alias must point to a definition
Aliases cannot form a cycle
Alias cannot point to a weak alias
Named metadata operand cannot be function local!
comdat selection kind requires a global value with the same name
comdat global value has private linkage
invalid requirement on flag, flag is not present in module
invalid requirement on flag, flag does not have the required value
incorrect number of operands in module flag
invalid behavior operand in module flag (expected constant integer)
invalid ID operand in module flag (expected metadata string)
invalid behavior operand in module flag (unexpected constant)
invalid value for 'require' module flag (expected metadata pair)
invalid value for 'require' module flag (first value operand should be a string)
invalid value for 'append'-type module flag (expected a metadata node)
module flag identifiers must be unique (or of 'require' type)
incorrect number of operands in llvm.ident metadata
invalid value for llvm.ident metadata entry operand(the operand should be a string)
DICompileUnit does not Verify!
DISubprogram does not Verify!
DIGlobalVariable does not Verify!
DIType does not Verify!
DIScope does not Verify!
Module Verifier
verify
Debug Info Verifier
verify-di
Broken debug info found, compilation aborted!
INFINITY
-inf
-INFINITY
-nan
-NaN
0123456789ABCDEF0
0123456789abcdef0
0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ
APInt(
Tag_
Tag_File
Tag_Section
Tag_Symbol
Tag_CPU_raw_name
Tag_CPU_name
Tag_CPU_arch
Tag_CPU_arch_profile
Tag_ARM_ISA_use
Tag_THUMB_ISA_use
Tag_FP_arch
Tag_WMMX_arch
Tag_Advanced_SIMD_arch
Tag_PCS_config
Tag_ABI_PCS_R9_use
Tag_ABI_PCS_RW_data
Tag_ABI_PCS_RO_data
Tag_ABI_PCS_GOT_use
Tag_ABI_PCS_wchar_t
Tag_ABI_FP_rounding
Tag_ABI_FP_denormal
Tag_ABI_FP_exceptions
Tag_ABI_FP_user_exceptions
Tag_ABI_FP_number_model
Tag_ABI_align_needed
Tag_ABI_align_preserved
Tag_ABI_enum_size
Tag_ABI_HardFP_use
Tag_ABI_VFP_args
Tag_ABI_WMMX_args
Tag_ABI_optimization_goals
Tag_ABI_FP_optimization_goals
Tag_compatibility
Tag_CPU_unaligned_access
Tag_FP_HP_extension
Tag_ABI_FP_16bit_format
Tag_MPextension_use
Tag_DIV_use
Tag_nodefaults
Tag_also_compatible_with
Tag_T2EE_use
Tag_conformance
Tag_Virtualization_use
Tag_VFP_arch
Tag_VFP_HP_extension
Tag_ABI_align8_needed
Tag_ABI_align8_preserved
Number of memory regions: 
Bytes used: 
Bytes allocated: 
Bytes wasted: 
 (includes alignment, etc)
Recycler element size: 
Recycler element alignment: 
Number of elements free for recycling: 
%g%%
General options
error - this positional option will never be matched, because it does not Require a value, and a cl::ConsumeAfter option is active!
error - option can never match, because another positional argument will match an unbounded number of values, and this option does not require a value!
: Unknown command line argument '
'.  Try: '
 -help'
: Did you mean '-
: Not enough positional command line arguments specified!
Must specify at least 
 positional arguments: See: 
 -help
: Too many positional arguments specified!
Can specify at most 
must be specified at least once!
: for the -
 option: 
may only occur zero or one times!
must occur exactly one time!
' is invalid value for boolean argument! Try 0 or 1
' value invalid for integer argument!
' value invalid for uint argument!
    =
 -   
    -
 (default: 
= *unknown option value*
*no default*
= *cannot print option value*
help-list
Display list of available options (-help-list-hidden for more)
help-list-hidden
Display list of all available options
Display available options (-help-hidden for more)
help-hidden
Display all available options
print-options
Print non-default options after command line parsing
print-all-options
Print all option values after command line parsing
version
Display the version of this program
\"' 
: CommandLine Error: Option '
' registered more than once!
Cannot specify more than one option with cl::ConsumeAfter!
inconsistency in registered CommandLine options
requires a value!
multi-valued option specified with ValueDisallowed modifier!
does not allow a value! '
' specified.
not enough values!
' value invalid for floating point argument!
  This option category has no options.
 [options]
OPTIONS:
LLVM (http://llvm.org/):
 version 
3.6.0svn
Optimized build
  Built 
Sep  3 2022
11:36:41
  Default target: 
  Host CPU: 
uint
number
string
Could not open 
DW_TAG_array_type
DW_TAG_class_type
DW_TAG_entry_point
DW_TAG_enumeration_type
DW_TAG_formal_parameter
DW_TAG_imported_declaration
DW_TAG_label
DW_TAG_lexical_block
DW_TAG_member
DW_TAG_pointer_type
DW_TAG_reference_type
DW_TAG_compile_unit
DW_TAG_string_type
DW_TAG_structure_type
DW_TAG_subroutine_type
DW_TAG_typedef
DW_TAG_union_type
DW_TAG_unspecified_parameters
DW_TAG_variant
DW_TAG_common_block
DW_TAG_common_inclusion
DW_TAG_inheritance
DW_TAG_inlined_subroutine
DW_TAG_module
DW_TAG_ptr_to_member_type
DW_TAG_set_type
DW_TAG_subrange_type
DW_TAG_with_stmt
DW_TAG_access_declaration
DW_TAG_base_type
DW_TAG_catch_block
DW_TAG_const_type
DW_TAG_constant
DW_TAG_enumerator
DW_TAG_file_type
DW_TAG_friend
DW_TAG_namelist
DW_TAG_namelist_item
DW_TAG_packed_type
DW_TAG_subprogram
DW_TAG_template_type_parameter
DW_TAG_template_value_parameter
DW_TAG_thrown_type
DW_TAG_try_block
DW_TAG_variant_part
DW_TAG_variable
DW_TAG_volatile_type
DW_TAG_dwarf_procedure
DW_TAG_restrict_type
DW_TAG_interface_type
DW_TAG_namespace
DW_TAG_imported_module
DW_TAG_unspecified_type
DW_TAG_partial_unit
DW_TAG_imported_unit
DW_TAG_condition
DW_TAG_shared_type
DW_TAG_lo_user
DW_TAG_hi_user
DW_TAG_auto_variable
DW_TAG_arg_variable
DW_TAG_rvalue_reference_type
DW_TAG_template_alias
DW_TAG_coarray_type
DW_TAG_generic_subrange
DW_TAG_dynamic_type
DW_TAG_MIPS_loop
DW_TAG_type_unit
DW_TAG_format_label
DW_TAG_function_template
DW_TAG_class_template
DW_TAG_GNU_template_template_param
DW_TAG_GNU_template_parameter_pack
DW_TAG_GNU_formal_parameter_pack
DW_TAG_APPLE_property
DW_CHILDREN_no
DW_CHILDREN_yes
DW_AT_sibling
DW_AT_location
DW_AT_name
DW_AT_ordering
DW_AT_byte_size
DW_AT_bit_offset
DW_AT_bit_size
DW_AT_stmt_list
DW_AT_low_pc
DW_AT_high_pc
DW_AT_language
DW_AT_discr
DW_AT_discr_value
DW_AT_visibility
DW_AT_import
DW_AT_string_length
DW_AT_common_reference
DW_AT_comp_dir
DW_AT_const_value
DW_AT_containing_type
DW_AT_default_value
DW_AT_inline
DW_AT_is_optional
DW_AT_lower_bound
DW_AT_producer
DW_AT_prototyped
DW_AT_return_addr
DW_AT_start_scope
DW_AT_bit_stride
DW_AT_upper_bound
DW_AT_abstract_origin
DW_AT_accessibility
DW_AT_address_class
DW_AT_artificial
DW_AT_base_types
DW_AT_calling_convention
DW_AT_count
DW_AT_data_member_location
DW_AT_decl_column
DW_AT_decl_file
DW_AT_decl_line
DW_AT_declaration
DW_AT_discr_list
DW_AT_encoding
DW_AT_external
DW_AT_frame_base
DW_AT_friend
DW_AT_identifier_case
DW_AT_macro_info
DW_AT_namelist_item
DW_AT_priority
DW_AT_segment
DW_AT_specification
DW_AT_static_link
DW_AT_type
DW_AT_use_location
DW_AT_variable_parameter
DW_AT_virtuality
DW_AT_vtable_elem_location
DW_AT_allocated
DW_AT_associated
DW_AT_data_location
DW_AT_byte_stride
DW_AT_entry_pc
DW_AT_use_UTF8
DW_AT_extension
DW_AT_ranges
DW_AT_trampoline
DW_AT_call_column
DW_AT_call_file
DW_AT_call_line
DW_AT_description
DW_AT_binary_scale
DW_AT_decimal_scale
DW_AT_small
DW_AT_decimal_sign
DW_AT_digit_count
DW_AT_picture_string
DW_AT_mutable
DW_AT_threads_scaled
DW_AT_explicit
DW_AT_object_pointer
DW_AT_endianity
DW_AT_elemental
DW_AT_pure
DW_AT_recursive
DW_AT_signature
DW_AT_main_subprogram
DW_AT_data_bit_offset
DW_AT_const_expr
DW_AT_enum_class
DW_AT_linkage_name
DW_AT_string_length_bit_size
DW_AT_string_length_byte_size
DW_AT_rank
DW_AT_str_offsets_base
DW_AT_addr_base
DW_AT_ranges_base
DW_AT_dwo_id
DW_AT_dwo_name
DW_AT_reference
DW_AT_rvalue_reference
DW_AT_MIPS_loop_begin
DW_AT_MIPS_tail_loop_begin
DW_AT_MIPS_epilog_begin
DW_AT_MIPS_loop_unroll_factor
DW_AT_MIPS_software_pipeline_depth
DW_AT_MIPS_linkage_name
DW_AT_MIPS_stride
DW_AT_MIPS_abstract_name
DW_AT_MIPS_clone_origin
DW_AT_MIPS_has_inlines
DW_AT_MIPS_stride_byte
DW_AT_MIPS_stride_elem
DW_AT_MIPS_ptr_dopetype
DW_AT_MIPS_allocatable_dopetype
DW_AT_MIPS_assumed_shape_dopetype
DW_AT_sf_names
DW_AT_src_info
DW_AT_mac_info
DW_AT_src_coords
DW_AT_body_begin
DW_AT_body_end
DW_AT_GNU_vector
DW_AT_GNU_template_name
DW_AT_GNU_odr_signature
DW_AT_MIPS_assumed_size
DW_AT_lo_user
DW_AT_hi_user
DW_AT_APPLE_optimized
DW_AT_APPLE_flags
DW_AT_APPLE_isa
DW_AT_APPLE_block
DW_AT_APPLE_major_runtime_vers
DW_AT_APPLE_runtime_class
DW_AT_APPLE_omit_frame_ptr
DW_AT_APPLE_property_name
DW_AT_APPLE_property_getter
DW_AT_APPLE_property_setter
DW_AT_APPLE_property_attribute
DW_AT_APPLE_property
DW_AT_APPLE_objc_complete_type
DW_AT_GNU_dwo_name
DW_AT_GNU_dwo_id
DW_AT_GNU_ranges_base
DW_AT_GNU_addr_base
DW_AT_GNU_pubnames
DW_AT_GNU_pubtypes
DW_FORM_addr
DW_FORM_block2
DW_FORM_block4
DW_FORM_data2
DW_FORM_data4
DW_FORM_data8
DW_FORM_string
DW_FORM_block
DW_FORM_block1
DW_FORM_data1
DW_FORM_flag
DW_FORM_sdata
DW_FORM_strp
DW_FORM_udata
DW_FORM_ref_addr
DW_FORM_ref1
DW_FORM_ref2
DW_FORM_ref4
DW_FORM_ref8
DW_FORM_ref_udata
DW_FORM_indirect
DW_FORM_sec_offset
DW_FORM_exprloc
DW_FORM_flag_present
DW_FORM_ref_sig8
DW_FORM_GNU_addr_index
DW_FORM_GNU_str_index
DW_OP_addr
DW_OP_const1u
DW_OP_const1s
DW_OP_const2u
DW_OP_const2s
DW_OP_const4u
DW_OP_const4s
DW_OP_const8u
DW_OP_const8s
DW_OP_dup
DW_OP_drop
DW_OP_over
DW_OP_pick
DW_OP_swap
DW_OP_rot
DW_OP_xderef
DW_OP_abs
DW_OP_and
DW_OP_div
DW_OP_minus
DW_OP_mod
DW_OP_mul
DW_OP_neg
DW_OP_not
DW_OP_or
DW_OP_plus
DW_OP_shl
DW_OP_shra
DW_OP_xor
DW_OP_skip
DW_OP_bra
DW_OP_eq
DW_OP_ge
DW_OP_gt
DW_OP_le
DW_OP_lt
DW_OP_ne
DW_OP_lit0
DW_OP_lit1
DW_OP_lit2
DW_OP_lit3
DW_OP_lit4
DW_OP_lit5
DW_OP_lit6
DW_OP_lit7
DW_OP_lit8
DW_OP_lit9
DW_OP_lit10
DW_OP_lit11
DW_OP_lit12
DW_OP_lit13
DW_OP_lit14
DW_OP_lit15
DW_OP_lit16
DW_OP_lit17
DW_OP_lit18
DW_OP_lit19
DW_OP_lit20
DW_OP_lit21
DW_OP_lit22
DW_OP_lit23
DW_OP_lit24
DW_OP_lit25
DW_OP_lit26
DW_OP_lit27
DW_OP_lit28
DW_OP_lit29
DW_OP_lit30
DW_OP_lit31
DW_OP_reg0
DW_OP_reg1
DW_OP_reg2
DW_OP_reg3
DW_OP_reg4
DW_OP_reg5
DW_OP_reg6
DW_OP_reg7
DW_OP_reg8
DW_OP_reg9
DW_OP_reg10
DW_OP_reg11
DW_OP_reg12
DW_OP_reg13
DW_OP_reg14
DW_OP_reg15
DW_OP_reg16
DW_OP_reg17
DW_OP_reg18
DW_OP_reg19
DW_OP_reg20
DW_OP_reg21
DW_OP_reg22
DW_OP_reg23
DW_OP_reg24
DW_OP_reg25
DW_OP_reg26
DW_OP_reg27
DW_OP_reg28
DW_OP_reg29
DW_OP_reg30
DW_OP_reg31
DW_OP_breg0
DW_OP_breg1
DW_OP_breg2
DW_OP_breg3
DW_OP_breg4
DW_OP_breg5
DW_OP_breg6
DW_OP_breg7
DW_OP_breg8
DW_OP_breg9
DW_OP_breg10
DW_OP_breg11
DW_OP_breg12
DW_OP_breg13
DW_OP_breg14
DW_OP_breg15
DW_OP_breg16
DW_OP_breg17
DW_OP_breg18
DW_OP_breg19
DW_OP_breg20
DW_OP_breg21
DW_OP_breg22
DW_OP_breg23
DW_OP_breg24
DW_OP_breg25
DW_OP_breg26
DW_OP_breg27
DW_OP_breg28
DW_OP_breg29
DW_OP_breg30
DW_OP_breg31
DW_OP_fbreg
DW_OP_deref_size
DW_OP_xderef_size
DW_OP_nop
DW_OP_push_object_address
DW_OP_call2
DW_OP_call4
DW_OP_call_ref
DW_OP_form_tls_address
DW_OP_call_frame_cfa
DW_OP_implicit_value
DW_OP_stack_value
DW_OP_GNU_push_tls_address
DW_OP_GNU_addr_index
DW_OP_GNU_const_index
DW_ATE_address
DW_ATE_boolean
DW_ATE_complex_float
DW_ATE_float
DW_ATE_signed
DW_ATE_signed_char
DW_ATE_unsigned
DW_ATE_unsigned_char
DW_ATE_imaginary_float
DW_ATE_UTF
DW_ATE_packed_decimal
DW_ATE_numeric_string
DW_ATE_edited
DW_ATE_signed_fixed
DW_ATE_unsigned_fixed
DW_ATE_decimal_float
DW_ATE_lo_user
DW_ATE_hi_user
DW_DS_unsigned
DW_DS_leading_overpunch
DW_DS_trailing_overpunch
DW_DS_leading_separate
DW_DS_trailing_separate
DW_END_default
DW_END_big
DW_END_little
DW_END_lo_user
DW_END_hi_user
DW_ACCESS_public
DW_ACCESS_protected
DW_ACCESS_private
DW_VIS_local
DW_VIS_exported
DW_VIS_qualified
DW_VIRTUALITY_none
DW_VIRTUALITY_virtual
DW_VIRTUALITY_pure_virtual
DW_LANG_C89
DW_LANG_C
DW_LANG_Ada83
DW_LANG_C_plus_plus
DW_LANG_Cobol74
DW_LANG_Cobol85
DW_LANG_Fortran77
DW_LANG_Fortran90
DW_LANG_Pascal83
DW_LANG_Modula2
DW_LANG_Java
DW_LANG_C99
DW_LANG_Ada95
DW_LANG_Fortran95
DW_LANG_PLI
DW_LANG_ObjC
DW_LANG_ObjC_plus_plus
DW_LANG_UPC
DW_LANG_D
DW_LANG_Python
DW_LANG_OpenCL
DW_LANG_Go
DW_LANG_Modula3
DW_LANG_Haskell
DW_LANG_C_plus_plus_03
DW_LANG_C_plus_plus_11
DW_LANG_OCaml
DW_LANG_lo_user
DW_LANG_Swift
DW_LANG_hi_user
DW_ID_case_sensitive
DW_ID_up_case
DW_ID_down_case
DW_ID_case_insensitive
DW_CC_normal
DW_CC_program
DW_CC_nocall
DW_CC_lo_user
DW_CC_hi_user
DW_INL_not_inlined
DW_INL_inlined
DW_INL_declared_not_inlined
DW_INL_declared_inlined
DW_ORD_row_major
DW_ORD_col_major
DW_DSC_label
DW_DSC_range
DW_LNS_copy
DW_LNS_advance_pc
DW_LNS_advance_line
DW_LNS_set_file
DW_LNS_set_column
DW_LNS_negate_stmt
DW_LNS_set_basic_block
DW_LNS_const_add_pc
DW_LNS_fixed_advance_pc
DW_LNS_set_prologue_end
DW_LNS_set_epilogue_begin
DW_LNS_set_isa
DW_LNE_define_file
DW_LNE_set_discriminator
DW_LNE_lo_user
DW_LNE_hi_user
DW_MACINFO_define
DW_MACINFO_undef
DW_MACINFO_start_file
DW_MACINFO_end_file
DW_MACINFO_vendor_ext
DW_CFA_nop
DW_CFA_advance_loc
DW_CFA_offset
DW_CFA_restore
DW_CFA_set_loc
DW_CFA_advance_loc1
DW_CFA_advance_loc2
DW_CFA_advance_loc4
DW_CFA_offset_extended
DW_CFA_restore_extended
DW_CFA_undefined
DW_CFA_same_value
DW_CFA_register
DW_CFA_remember_state
DW_CFA_restore_state
DW_CFA_def_cfa
DW_CFA_def_cfa_register
DW_CFA_def_cfa_offset
DW_CFA_def_cfa_expression
DW_CFA_expression
DW_CFA_offset_extended_sf
DW_CFA_def_cfa_sf
DW_CFA_def_cfa_offset_sf
DW_CFA_val_offset
DW_CFA_val_offset_sf
DW_CFA_val_expression
DW_CFA_MIPS_advance_loc8
DW_CFA_GNU_window_save
DW_CFA_GNU_args_size
DW_CFA_lo_user
DW_CFA_hi_user
DW_ATOM_null
DW_ATOM_die_offset
DW_ATOM_cu_offset
DW_ATOM_die_tag
DW_ATOM_type_flags
VARIABLE
FUNCTION
OTHER
UNUSED5
UNUSED6
UNUSED7
EXTERNAL
STATIC
LLVM ERROR: 
UNREACHABLE executed
 at 
Files differ without tolerance allowance
FP Comparison failed, not a numeric difference between '
' and '
Compared: 
abs. diff = 
 rel.diff = 
Out of tolerance: rel/abs: 
.tmp%%%%%%%
view-background
Execute graph viewer in the background. Creates tmp file litter.
aaaaaa
aa0000
00aa00
aa5500
0055ff
aa00aa
00aaaa
555555
ff5555
55ff55
ffff55
5555ff
ff55ff
55ffff
ffaaaa
aaffaa
ffffaa
aaaaff
ffaaff
aaffff
Error: 
'... 
Graphviz
Running 'Graphviz' program... 
xdot|xdot.py
Running 'xdot.py' program... 
xdg-open
dot|fdp|neato|twopi|circo
-Tps
-Nfontname=Courier
-Gsize=7.5,10
Running '
' program... 
--spartan
dotty
Running 'dotty' program... 
Error: Couldn't find a usable graph viewer program:
  Tried '
Remember to erase graph file: 
neato
twopi
circo
Unknown buffer
%.2x
  -load request ignored.
Program arguments: 
Stack dump:
rng-seed
seed
Seed for the random number generator
replacement string contained trailing backslash
invalid backreference string '
Included from 
Can't open file '
Malformed line 
global-init
init
global-init-type
global-init-src
Malformed regex in line 
stats
Enable statistics output from program (available with Asserts)
                          ... Statistics Collected ...
%*u %-*s - %s
Statistics are disabled.  
Build with asserts or with -DLLVM_ENABLE_STATS
WARNING: You're attempting to print out a bitcode file.
This is inadvisable as it may cause display problems. If
you REALLY want to taste LLVM bitcode first-hand, you
can force output with the `-f' option.
track-memory
Enable -time-passes memory tracking (this may be slow)
info-output-file
File to append -stats and -timer output to
Error opening info-output-file '
 for appending!
%9lld  
  Total Execution Time: %5.4f seconds (%5.4f wall clock)
   ---User Time---
   --System Time--
   --User+System--
   ---Wall Time---
  ---Mem---
  --- Name ---
Total
Miscellaneous Ungrouped Timers
        -----     
  %7.4f (%5.1f%%)
armeb
mipsel
mips64
mips64el
msp430
powerpc64
powerpc64le
powerpc
sparc
sparcv9
s390x
thumb
thumbeb
nvptx
nvptx64
igil32
igil64
air64
amdil64
gpu_32
gpu_64
le32
amdil
spir
spir64
kalimba
systemz
igil
scei
nvidia
darwin
dragonfly
freebsd
kfreebsd
linux
macosx
netbsd
openbsd
solaris
windows
haiku
minix
rtems
nacl
bitrig
cuda
nvcl
gnueabihf
gnueabi
gnux32
code16
eabi
eabihf
android
msvc
itanium
cygnus
ppc32
ppc64le
cygwin
mingw
arm1176jzf-s
cortex-a9
arm2
arm6
arm7m
strongarm
arm7tdmi
arm10tdmi
v5te
arm1022e
v5tej
arm926ej-s
arm1136jf-s
arm1136j-s
v6zk
v6t2
arm1156t2-s
v6-m
v7-a
v7-l
cortex-a8
v7-k
pj4b
v7-s
swift
v7-r
cortex-r4
v7-m
v7em
v7e-m
v8-a
ep9312
iwmmxt
xscale
i786
i886
i986
amd64
armv
armebv
thumbv
thumbebv
mipseb
mipsallegrex
mipsallegrexel
mips64eb
sparc64
win32
coff
macho
empty
rope:
cstring:"
std::string:"
stringref:"
char:"
decUI:"
decI:"
decUL:"
decL:"
decULL:"
decLL:"
uhex:"
(Twine 
Stream-Start: 
Stream-End: 
Version-Directive: 
Tag-Directive: 
Document-Start: 
Document-End: 
Block-Entry: 
Block-End: 
Block-Sequence-Start: 
Block-Mapping-Start: 
Flow-Entry: 
Flow-Sequence-Start: 
Flow-Sequence-End: 
Flow-Mapping-Start: 
Flow-Mapping-End: 
Key: 
Value: 
Scalar: 
Alias: 
Anchor: 
Tag: 
YAML
#;/?:@&=+$,_.!~*'()[]
Not dealing with this yet
Could not find expected : for simple key
Expected quote at end of scalar
Found unexpected ':' while scanning a plain scalar
,:?[]{}
Found invalid tab character in indentation
Got empty plain scalar
Got empty alias or anchor
Got empty block scalar
-?:,[]{}#&*!|>'"%@`
Unrecognized character while tokenizing.
Can only iterate over the stream once
Unknown tag handle 
tag:yaml.org,2002:null
tag:yaml.org,2002:str
tag:yaml.org,2002:map
tag:yaml.org,2002:seq
Unrecognized escape code!
Unexpected token in Key Value.
Unexpected token. Expected Key or Block End
Unexpected token. Expected Key, Flow Entry, or Flow Mapping End.
Unexpected token. Expected Block Entry or Block End.
Could not find closing ]!
Expected , between entries!
tag:yaml.org,2002:
Already encountered an anchor for this node!
Already encountered a tag for this node!
Unexpected token
not a mapping
missing required key '
unknown key '
unknown enumerated scalar
expected sequence of bit values
unexpected scalar in sequence of bit values
unknown bit value
unexpected scalar
Map key must be a scalar
unknown node kind
                
invalid boolean
invalid number
out of range number
invalid floating point number
0x%02X
invalid hex8 number
out of range hex8 number
0x%04X
invalid hex16 number
out of range hex16 number
0x%08X
invalid hex32 number
out of range hex32 number
0x%016llX
invalid hex64 number
Error opening output file '
IO failure on output stream.
[:<:]]
[:>:]]
alnum
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789
alpha
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz
blank
cntrl
digit
graph
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~
lower
abcdefghijklmnopqrstuvwxyz
print
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~ 
punct
!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~
space
upper
ABCDEFGHIJKLMNOPQRSTUVWXYZ
xdigit
0123456789ABCDEFabcdef
alert
backspace
newline
vertical-tab
form-feed
carriage-return
exclamation-mark
quotation-mark
number-sign
dollar-sign
percent-sign
ampersand
apostrophe
left-parenthesis
right-parenthesis
asterisk
plus-sign
comma
hyphen
hyphen-minus
period
full-stop
slash
solidus
three
four
five
seven
eight
nine
colon
semicolon
less-than-sign
equals-sign
greater-than-sign
question-mark
commercial-at
left-square-bracket
backslash
reverse-solidus
right-square-bracket
circumflex
circumflex-accent
underscore
low-line
grave-accent
left-brace
left-curly-bracket
vertical-line
right-brace
right-curly-bracket
tilde
REG_0x%x
REG_NOMATCH
llvm_regexec() failed to match
REG_BADPAT
invalid regular expression
REG_ECOLLATE
invalid collating element
REG_ECTYPE
invalid character class
REG_EESCAPE
trailing backslash (\)
REG_ESUBREG
invalid backreference number
REG_EBRACK
brackets ([ ]) not balanced
REG_EPAREN
parentheses not balanced
REG_EBRACE
braces not balanced
REG_BADBR
invalid repetition count(s)
REG_ERANGE
invalid character range
REG_ESPACE
out of memory
REG_BADRPT
repetition-operator operand invalid
REG_EMPTY
empty (sub)expression
REG_ASSERT
"can't happen" -- you found a bug
REG_INVARG
invalid argument to regex routine
*** unknown regexp error code ***
x86_64-apple-darwin20.1.0
-darwin
GenuineIntel
AuthenticAMD
Can't allocate RWX Memory
Can't release RWX Memory
TMPDIR
/tmp
/var/tmp
-%%%%%%
HOME
0123456789abcdef
TEMP
TEMPDIR
/var/tmp/
-%%%%%%.
COLUMNS
PATH
Child timed out but wouldn't die
Child timed out
Error waiting for child process
Program could not be executed
 (core dumped)
Executable "
" doesn't exist!
Can't redirect stderr to stdout
posix_spawn failed
Couldn't fork
/dev/null
Cannot dup2
Cannot open file '
' for 
%-2d
 %-*s
 %#0*lx
 + %u
error: invalid target '
: error: unable to get target for '
', see --version and --triple.
Unable to find target for this triple (no targets are registered)
Cannot choose between targets "
" and "
No available targets are compatible with this triple, see -version for the available targets.
  Registered Targets:
    (none)
%Y-%m-%d %H:%M:%S
%s.%.9u
Bitcode Writer
MetaData
Map Name: 
Size: 
Value: [null]
 Uses(
 [null]
N4llvm2cl11opt_storageIbLb1ELb0EEE
CTOR_REFERENCES_
L_OBJC_SELECTORLIST_REFERENCES_
L_OBJC_CLASSLISLIST_SUP_REFS_$_C_METH_VAR_NAME_
L_OBJC_METH_VARc_msgSend_fixup_
l_objc_msgSend_N12_GLOBAL__N_110ObjCARCOptE
N12_GLOBAL__N_113ObjCARCExpandE
N12_GLOBAL__N_113ObjCARCAPElimE
N4llvm7objcarc20ObjCARCAliasAnalysisE
objc_destroyWeakloadWeakRetainedobjc_loadWeakRetobjc_retainBlocktoreleasePoolPopobjc_autoreleaseleaseReturnValueunretainedObjectobjc_unretainedOc_retainedObjectobjc_retainedObjtain_autoreleaseobjc_retain_autonretainedPointerobjc_unretainedPetainAutoreleaseobjc_retainAutorobjc_storeStrongPoolPush
N12_GLOBAL__N_115ObjCARCContractE
N4llvm3opt7ArgListE
N4llvm3opt12InputArgListE
N4llvm3opt14DerivedArgListE
N4llvm16JITEventListenerE
N4llvm3JITE
ZN4llvm3JIT16runJITOnFunctionEPNS_8FunctionEPNS_15MachineCodeInfoEE11MCIListener
N4llvm18ValueMapCallbackVHIPKNS_10BasicBlockEPvNS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEEE
N12_GLOBAL__N_110JITEmitterE
N4llvm18ValueMapCallbackVHIPNS_8FunctionEPvN12_GLOBAL__N_120NoRAUWValueMapConfigIS2_EEEE
N4llvm18ValueMapCallbackVHIPNS_8FunctionENS_11SmallPtrSetIPvLj1EEEN12_GLOBAL__N_122CallSiteValueMapConfigEEE
N4llvm18ValueMapCallbackVHIPKNS_8FunctionEN12_GLOBAL__N_110JITEmitter11EmittedCodeENS5_21EmittedFunctionConfigEEE
N4llvm16JITMemoryManagerE
N12_GLOBAL__N_123DefaultJITMemoryManagerE
__DATA,__cfstring
asan.module_ctorN12_GLOBAL__N_116AddressSanitizerE
N4llvm18ValueMapCallbackVHIPKNS_5ValueENS_6WeakVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEEE
N12_GLOBAL__N_122AddressSanitizerModuleE
N4llvm2cl15OptionValueBaseIiLb0EEE
N12_GLOBAL__N_114BoundsCheckingE
N12_GLOBAL__N_117DataFlowSanitizerE
N4llvm13DominatorTreeE
N4llvm7DebugIRE
N12_GLOBAL__N_114ValueToLineMapE
N4llvm18ValueMapCallbackVHIPKNS_5ValueEjNS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEEE
N4llvm18ValueMapCallbackVHIPKNS_8FunctionEPNS_6MDNodeENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEEE
N12_GLOBAL__N_112GCOVProfilerE
N4llvm2cl15OptionValueCopyINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE
N12_GLOBAL__N_115MemorySanitizerE
N4llvm18ValueMapCallbackVHIPNS_5ValueES2_NS_14ValueMapConfigIS2_NS_3sys10SmartMutexILb0EEEEEEE
N12_GLOBAL__N_117VarArgAMD64HelperE
N12_GLOBAL__N_112VarArgHelperE
N12_GLOBAL__N_116VarArgNoOpHelperE
N4llvm2cl11OptionValueIiEE
N4llvm2cl15OptionValueCopyIiEE
N12_GLOBAL__N_114InstrProfilingE
N12_GLOBAL__N_115ThreadSanitizerE
ally
available_externally_initializedexternally_initisanitize_address
llvm.global_ctors
llvm.global_dtorN12_GLOBAL__N_19TypeMapTyE
N12_GLOBAL__N_119ValueMaterializerTyE
N12_GLOBAL__N_112ArgPromotionE
N12_GLOBAL__N_111BarrierNoopE
N12_GLOBAL__N_113ConstantMergeE
N12_GLOBAL__N_13DAEE
N12_GLOBAL__N_13DAHE
N12_GLOBAL__N_115GVExtractorPassE
N12_GLOBAL__N_113FunctionAttrsE
N12_GLOBAL__N_119ArgumentUsesTrackerE
N12_GLOBAL__N_19GlobalDCEE
N12_GLOBAL__N_19GlobalOptE
N12_GLOBAL__N_14IPCPE
N12_GLOBAL__N_113AlwaysInlinerE
N12_GLOBAL__N_113SimpleInlinerE
N4llvm7InlinerE
N4llvm2cl4listINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEbNS0_6parserIS8_EEEE
N4llvm2cl12list_storageINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEbEE
NSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEEE
NSt3__113__vector_baseINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEEE
NSt3__120__vector_base_commonILb1EEE
N12_GLOBAL__N_115InternalizePassE
N12_GLOBAL__N_113LoopExtractorE
N12_GLOBAL__N_119SingleLoopExtractorE
N12_GLOBAL__N_118BlockExtractorPassE
N12_GLOBAL__N_114MergeFunctionsE
N12_GLOBAL__N_114PartialInlinerE
N12_GLOBAL__N_17PruneEHE
N12_GLOBAL__N_123StripDeadPrototypesPassE
N12_GLOBAL__N_112StripSymbolsE
N12_GLOBAL__N_120StripNonDebugSymbolsE
N12_GLOBAL__N_117StripDebugDeclareE
N12_GLOBAL__N_118StripDeadDebugInfoE
Basic-Block Vectorization
N12_GLOBAL__N_111BBVectorizeE
N4llvm2cl15OptionValueBaseIjLb0EEE
vectorize.enableinterleave.count
Loop Vectorization
N12_GLOBAL__N_113LoopVectorizeE
N12_GLOBAL__N_117InnerLoopUnrollerE
N12_GLOBAL__N_119InnerLoopVectorizerE
SLP Vectorizer
N12_GLOBAL__N_113SLPVectorizerE
N4llvm20LinkingMemoryManagerE
N4llvm5MCJITE
N4llvm20SectionMemoryManagerE
N12_GLOBAL__N_115GDBJITRegistrarE
N4llvm12JITRegistrarE
N4llvm11ObjectImageE
N4llvm17ObjectImageCommonE
N4llvm15RuntimeDyldImplE
N4llvm14RuntimeDyldELFE
N12_GLOBAL__N_113DyldELFObjectIN4llvm6object7ELFTypeILNS1_7support10endiannessE1ELm2ELb0EEEEE
N12_GLOBAL__N_114ELFObjectImageIN4llvm6object7ELFTypeILNS1_7support10endiannessE1ELm2ELb0EEEEE
N12_GLOBAL__N_113DyldELFObjectIN4llvm6object7ELFTypeILNS1_7support10endiannessE0ELm2ELb0EEEEE
N4llvm6object13ELFObjectFileINS0_7ELFTypeILNS_7support10endiannessE0ELm2ELb0EEEEE
N12_GLOBAL__N_114ELFObjectImageIN4llvm6object7ELFTypeILNS1_7support10endiannessE0ELm2ELb0EEEEE
N12_GLOBAL__N_113DyldELFObjectIN4llvm6object7ELFTypeILNS1_7support10endiannessE0ELm2ELb1EEEEE
N12_GLOBAL__N_114ELFObjectImageIN4llvm6object7ELFTypeILNS1_7support10endiannessE0ELm2ELb1EEEEE
N12_GLOBAL__N_113DyldELFObjectIN4llvm6object7ELFTypeILNS1_7support10endiannessE1ELm2ELb1EEEEE
N12_GLOBAL__N_114ELFObjectImageIN4llvm6object7ELFTypeILNS1_7support10endiannessE1ELm2ELb1EEEEE
N12_GLOBAL__N_113DyldELFObjectIN4llvm6object7ELFTypeILNS1_7support10endiannessE1ELm4ELb0EEEEE
N4llvm6object13ELFObjectFileINS0_7ELFTypeILNS_7support10endiannessE1ELm4ELb0EEEEE
N12_GLOBAL__N_114ELFObjectImageIN4llvm6object7ELFTypeILNS1_7support10endiannessE1ELm4ELb0EEEEE
N12_GLOBAL__N_113DyldELFObjectIN4llvm6object7ELFTypeILNS1_7support10endiannessE0ELm4ELb0EEEEE
N4llvm6object13ELFObjectFileINS0_7ELFTypeILNS_7support10endiannessE0ELm4ELb0EEEEE
N12_GLOBAL__N_114ELFObjectImageIN4llvm6object7ELFTypeILNS1_7support10endiannessE0ELm4ELb0EEEEE
N12_GLOBAL__N_113DyldELFObjectIN4llvm6object7ELFTypeILNS1_7support10endiannessE0ELm8ELb1EEEEE
N4llvm6object13ELFObjectFileINS0_7ELFTypeILNS_7support10endiannessE0ELm8ELb1EEEEE
N12_GLOBAL__N_114ELFObjectImageIN4llvm6object7ELFTypeILNS1_7support10endiannessE0ELm8ELb1EEEEE
N12_GLOBAL__N_113DyldELFObjectIN4llvm6object7ELFTypeILNS1_7support10endiannessE1ELm8ELb1EEEEE
N4llvm6object13ELFObjectFileINS0_7ELFTypeILNS_7support10endiannessE1ELm8ELb1EEEEE
N12_GLOBAL__N_114ELFObjectImageIN4llvm6object7ELFTypeILNS1_7support10endiannessE1ELm8ELb1EEEEE
N4llvm16RuntimeDyldMachOE
N4llvm14format_object1IPhEE
N4llvm19RuntimeDyldMachOARME
N4llvm24RuntimeDyldMachOCRTPBaseINS_19RuntimeDyldMachOARMEEE
N4llvm23RuntimeDyldMachOAArch64E
N4llvm24RuntimeDyldMachOCRTPBaseINS_23RuntimeDyldMachOAArch64EEE
N4llvm20RuntimeDyldMachOI386E
N4llvm24RuntimeDyldMachOCRTPBaseINS_20RuntimeDyldMachOI386EEE
N4llvm22RuntimeDyldMachOX86_64E
N4llvm24RuntimeDyldMachOCRTPBaseINS_22RuntimeDyldMachOX86_64EEE
N4llvm12ObjectBufferE
N4llvm18ObjectBufferStreamE
N4llvm11ObjectCacheE
N4llvm15ExecutionEngineE
N4llvm18ValueMapCallbackVHIPKNS_11GlobalValueEPvNS_20ExecutionEngineState16AddressMapConfigEEE
N12_GLOBAL__N_113GVMemoryBlockE
N12_GLOBAL__N_126SimpleBindingMemoryManagerE
N4llvm19RTDyldMemoryManagerE
N4llvm19AArch64DisassemblerE
N4llvm25AArch64ExternalSymbolizerE
N12_GLOBAL__N_125AArch64A57FPLoadBalancingE
N12_GLOBAL__N_127AArch64AddressTypePromotionE
N12_GLOBAL__N_120AArch64AdvSIMDScalarE
N12_GLOBAL__N_117AArch64AsmPrinterE
N4llvm19AArch64FunctionInfoE
N12_GLOBAL__N_123AArch64BranchRelaxationE
N12_GLOBAL__N_112LDTLSCleanupE
N12_GLOBAL__N_117AArch64CollectLOHE
N12_GLOBAL__N_126AArch64ConditionalComparesE
N12_GLOBAL__N_130AArch64DeadRegisterDefinitionsE
N12_GLOBAL__N_119AArch64ExpandPseudoE
N12_GLOBAL__N_115AArch64FastISelE
N4llvm20AArch64FrameLoweringE
N12_GLOBAL__N_119AArch64DAGToDAGISelE
F27=
G27>
H27?
I27@
J27,
|"q
~"q
|"a
s"q
v"q
x277
y278
z279
{27:
"&# 
"&# 
).3-
\6M*
\.W*
l6M*
lf 
r`*@
f@rY
.WrYf
bPbkp
f sY.W
sY!1$
f@tY.W)
.WtY
lf`dX#cdX.
6mdX?x
t94
dQX
t^f 
6-eX
`f`e
f@R`
BR`k`
\f@R\
BR\f
6MR\6
)NR\o
iXf`
{\f`
6MR`6
HMR`f
a)NR`
;NR`
f@*\
RA*\
6M*\6
)N*\f
.W*\
sb.7
.WR`f`
*\\a
XR`6m
^4#o
3w
YR`)n
#cd`f
CsD6
sD6m
S\\a
S\f@sX
CsX<
6MsX6
`6Ms
`)Ns
f@?Z
6M?Z!/
.W?Z9
r@ZH
xX6m
^)Ns
`f@|
^\f@!
`LkZ
f@s\
\f #
b6Ms\
)Ns\f
X.Ws\
Xs\)
 b.7
\f@I
 7wZ`6
xZ`6M
S`f`
b7Y?
f@s`
mf@)
Bs`%
Cs`6M;
x`f@
f@*X
6M*X
.W*Xf`*
+X)'
m6Ms`\
HMs`f
m)Ns`_
ch]
Yf@@YP
J@Y6M@Y
.Ws`
dWs`f
f@*X.
6M*X
Xs`)N*
Xs`f@2X
CY6M2X
\eYs`
f@*`
RA*`\A*
RA*`
Kr]+d
]oD*
cha
XFK*
Xf 7
6M*`6M
HM*`f
f@@]
J@]JJ@
h]f`
6M@]}
)N@]f
.W@]h
.W*`
dW*`
@]h*
X*`6
\eY*`
A2`f
]JG@
J@at
haQr
bPFkp
]bPZ
BShZl
KsiZH
6M^tM
af@j
bP^
X^U
`6mZ
`6M[
f oZ.
q!^f@r
BSh^
cHM
rZ[w
af@sZ
Csh^
6mx\tm
wQ2J
`6-R
`f@RXf
hFR
`6MRX\CT
|^f 
yf SXf
s%
6-SX
\#cd\4
chE
q6-T
`6MT
S-[.WT
X<lZ
Sh!qZ
^a+lEf`
wZ\f
xZ\)
f`Y
chY
6mY6M
 f@VX
6MVX~MT
.WVXf
x\)n
RA*\kn
hYWP
A2\Kq)
s}Ff
]RKj
\6mj
VT`R!
.w
|Z[W
 f@ZX[y+Gf
6MZXh'
bZXe
q3[H
p.wZ
XT`6
 6MTh
y0G6
N4llvm21AArch64TargetLoweringE
N4llvm2cl3optIN12_GLOBAL__N_19AlignModeELb0ENS0_6parserIS3_EEEE
N4llvm2cl11opt_storageIN12_GLOBAL__N_19AlignModeELb0ELb0EEE
N4llvm2cl6parserIN12_GLOBAL__N_19AlignModeEEE
N4llvm2cl11OptionValueIN12_GLOBAL__N_19AlignModeEEE
N4llvm2cl15OptionValueBaseIN12_GLOBAL__N_19AlignModeELb0EEE
N4llvm2cl15OptionValueCopyIN12_GLOBAL__N_19AlignModeEEE
N4llvm2cl11OptionValueIbEE
N4llvm19AArch64GenInstrInfoE
N4llvm16AArch64InstrInfoE
N12_GLOBAL__N_119AArch64LoadStoreOptE
N12_GLOBAL__N_122AArch64PromoteConstantE
!"#$%
 !"#$
 !#$
*,234
    
    
!!!!!
!!!!!!!!!!!!
!!!!!!!!!!!""
"""""
""""""""""""
"""""""""""##
#####
############
###########$$
$$$$$
$$$$$$$$$$$$
$$$$$$$$$$$%%
%%%%%
%%%%%%%%%%%%
%%%%%%%%%%%&&
&&&&&
&&&&&&&&&&&&
&&&&&&&&&&&''
'''''
''''''''''''
'''''''''''((
(((((
((((((((((((
((((((((((())
)))))
))))))))))))
)))))))))))**
*****
************
***********++
+++++
++++++++++++
+++++++++++
N4llvm22AArch64GenRegisterInfoE
N4llvm19AArch64RegisterInfoE
N4llvm23AArch64SelectionDAGInfoE
N12_GLOBAL__N_124AArch64StorePairSuppressE
N4llvm23AArch64GenSubtargetInfoE
N4llvm16AArch64SubtargetE
N4llvm20AArch64TargetMachineE
N4llvm22AArch64leTargetMachineE
N4llvm22AArch64beTargetMachineE
N12_GLOBAL__N_117AArch64PassConfigE
N4llvm27AArch64_ELFTargetObjectFileE
N4llvm29AArch64_MachoTargetObjectFileE
N12_GLOBAL__N_110AArch64TTIE
N12_GLOBAL__N_116AArch64AsmParserE
N12_GLOBAL__N_114AArch64OperandE
000]
220e
666^
880c
886d
000]
020e
666^
680e
686d
000y
666z
000y
666z
00ll
66mm
000y
666z
000y
666z
00jb
0ljb
66jb
6ljb
00jb
0ljb
66jb
6ljb
000b
666b
000b
666b
000b
666b
000b
666b
000y
666z
000y
666z
000l
666m
==jb
>>jb
==jb
>>jb
===b
>>>b
====
>>>>
====
>>>>
====
>>>>
====
>>>>
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6u
-8.6u
-8.6u
-8.6y
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6~
-8.6~
-8.6~
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.
-8.6
-8.6
-8.6
-8.6
-8.
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.
-8.6
-8.6
-8.6
-8.
-8.6
-8.6
-8.6
-8.6
-8.6
-8.
-8.6
-8.6
-8.6
-8.
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
0-h.
6-h.
0-h.
0-h.
00-h.
66-h.
0-h.
6-h.
0-h.
0-h.
00-8.
66-8.
==-8.
>>-8.
@@-8.
00-8
66-8
==-8
>>-8
@@-8
00-8.
66-8.
==-8.
>>-8.
@@-8.
00-8.
00-8
66-8.
66-8
==-8.
==-8
>>-8.
>>-8
@@-8.
@@-8
00-8
66-8
==-8
>>-8
@@-8
66-8.
66-8.
66-8
66-8
0-8.
6-8.
;-8.
<-8.
=-8.
>-8.
@-8.
0-8.
0-86.
6-8.
6-86.
;-8.
;-86.
<-8.
<-86.
=-8.
=-86.
>-8.
>-86.
@-8.
@-86.
0-80
0-86
6-80
6-86
;-80
;-86
<-80
<-86
=-80
=-86
>-80
>-86
@-80
@-86
0-8.
0-8.
0-86.
0-80
0-86
0-8.
0-8.
0-86.
0-80
0-86
0-8.
6-8.
0-8.
0-86.
6-8.
6-86.
0-80
0-86
6-80
6-86
0-8.
6-8.
0-8.
0-86.
6-8.
6-86.
0-80
0-86
6-80
6-86
6-8.
6-8.
6-86.
6-80
6-86
0-8.
6-8.
0-8.
0-8.
0-8.
6-8.
0-8.
6-8.
6-8.
0-8.
6-8.
;-8.
<-8.
=-8.
>-8.
@-8.
0-8.
0-8.
0-8.
6-8.
0-8.
6-8.
6-8.
00-h.
66-h.
0-h.
6-h.
0-h.
0-h.
0000
6666
0000
6666
000y
666z
000y
666z
-86.
00ll
66mm
6006
6006
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.
-8.6
-8.6
-8.6
-8.6
-8.
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
0-h.
6-h.
0-h.
0-h.
000-h.
066-h.
00-h.
06-h.
00-h.
00-h.
00-8.
66-8.
==-8.
>>-8.
@@-8.
00-8
66-8
==-8
>>-8
@@-8
00-8.
66-8.
==-8.
>>-8.
@@-8.
00-8.
00-8
66-8.
66-8
==-8.
==-8
>>-8.
>>-8
@@-8.
@@-8
00-8
66-8
==-8
>>-8
@@-8
0-8.
6-8.
;-8.
<-8.
=-8.
>-8.
@-8.
0-8.
0-86.
6-8.
6-86.
;-8.
;-86.
<-8.
<-86.
=-8.
=-86.
>-8.
>-86.
@-8.
@-86.
0-80
0-86
6-80
6-86
;-80
;-86
<-80
<-86
=-80
=-86
>-80
>-86
@-80
@-86
0-8.
0-8.
0-86.
0-80
0-86
0-8.
0-8.
0-86.
0-80
0-86
0-8.
6-8.
0-8.
0-8.
0-8.
6-8.
;-8.
<-8.
=-8.
>-8.
@-8.
0-8.
0-8.
000-h.
066-h.
00-h.
06-h.
00-h.
00-h.
000]
220e
666^
880c
886d
000]
020e
666^
680e
686d
00ll
66mm
6006
6006
000]
220e
666^
880c
886d
000]
020e
666^
680e
686d
000y
666z
000y
666z
00ll
66mm
000y
666z
000y
666z
00jb
0ljb
66jb
6ljb
00jb
0ljb
66jb
6ljb
000b
666b
000b
666b
000b
666b
000b
666b
000y
666z
000y
666z
000l
666m
==jb
>>jb
==jb
>>jb
===b
>>>b
====
>>>>
====
>>>>
====
>>>>
====
>>>>
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6u
-8.6u
-8.6u
-8.6y
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6~
-8.6~
-8.6~
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.
-8.6
-8.6
-8.6
-8.6
-8.
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.
-8.6
-8.6
-8.6
-8.
-8.6
-8.6
-8.6
-8.6
-8.6
-8.
-8.6
-8.6
-8.6
-8.
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
0-h.
6-h.
0-h.
0-h.
00-h.
66-h.
0-h.
6-h.
0-h.
0-h.
00-8.
66-8.
==-8.
>>-8.
@@-8.
00-8
66-8
==-8
>>-8
@@-8
00-8.
66-8.
==-8.
>>-8.
@@-8.
00-8.
00-8
66-8.
66-8
==-8.
==-8
>>-8.
>>-8
@@-8.
@@-8
00-8
66-8
==-8
>>-8
@@-8
66-8.
66-8.
66-8
66-8
0-8.
6-8.
;-8.
<-8.
=-8.
>-8.
@-8.
0-8.
0-86.
6-8.
6-86.
;-8.
;-86.
<-8.
<-86.
=-8.
=-86.
>-8.
>-86.
@-8.
@-86.
0-80
0-86
6-80
6-86
;-80
;-86
<-80
<-86
=-80
=-86
>-80
>-86
@-80
@-86
0-8.
0-8.
0-86.
0-80
0-86
0-8.
0-8.
0-86.
0-80
0-86
0-8.
6-8.
0-8.
0-86.
6-8.
6-86.
0-80
0-86
6-80
6-86
0-8.
6-8.
0-8.
0-86.
6-8.
6-86.
0-80
0-86
6-80
6-86
6-8.
6-8.
6-86.
6-80
6-86
0-8.
6-8.
0-8.
0-8.
0-8.
6-8.
0-8.
6-8.
6-8.
0-8.
6-8.
;-8.
<-8.
=-8.
>-8.
@-8.
0-8.
0-8.
0-8.
6-8.
0-8.
6-8.
6-8.
00-h.
66-h.
0-h.
6-h.
0-h.
0-h.
0000
6666
0000
6666
000y
666z
000y
666z
-86.
00ll
66mm
6006
6006
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.
-8.6
-8.6
-8.6
-8.6
-8.
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
0-h.
6-h.
0-h.
0-h.
000-h.
066-h.
00-h.
06-h.
00-h.
00-h.
00-8.
66-8.
==-8.
>>-8.
@@-8.
00-8
66-8
==-8
>>-8
@@-8
00-8.
66-8.
==-8.
>>-8.
@@-8.
00-8.
00-8
66-8.
66-8
==-8.
==-8
>>-8.
>>-8
@@-8.
@@-8
00-8
66-8
==-8
>>-8
@@-8
0-8.
6-8.
;-8.
<-8.
=-8.
>-8.
@-8.
0-8.
0-86.
6-8.
6-86.
;-8.
;-86.
<-8.
<-86.
=-8.
=-86.
>-8.
>-86.
@-8.
@-86.
0-80
0-86
6-80
6-86
;-80
;-86
<-80
<-86
=-80
=-86
>-80
>-86
@-80
@-86
0-8.
0-8.
0-86.
0-80
0-86
0-8.
0-8.
0-86.
0-80
0-86
0-8.
6-8.
0-8.
0-8.
0-8.
6-8.
;-8.
<-8.
=-8.
>-8.
@-8.
0-8.
0-8.
000-h.
066-h.
00-h.
06-h.
00-h.
00-h.
000]
220e
666^
880c
886d
000]
020e
666^
680e
686d
00ll
66mm
6006
6006
__objc_classrefsp
N12_GLOBAL__N_123DarwinAArch64AsmBackendE
N12_GLOBAL__N_117AArch64AsmBackendE
N12_GLOBAL__N_120ELFAArch64AsmBackendE
N12_GLOBAL__N_122AArch64ELFObjectWriterE
N12_GLOBAL__N_118AArch64ELFStreamerE
N4llvm22AArch64MCAsmInfoDarwinE
N4llvm19AArch64MCAsmInfoELFE
N4llvm2cl3optI18AsmWriterVariantTyLb0ENS0_6parserIS2_EEEE
N4llvm2cl11opt_storageI18AsmWriterVariantTyLb0ELb0EEE
N4llvm2cl6parserI18AsmWriterVariantTyEE
N4llvm2cl11OptionValueI18AsmWriterVariantTyEE
N4llvm2cl15OptionValueBaseI18AsmWriterVariantTyLb0EEE
N4llvm2cl15OptionValueCopyI18AsmWriterVariantTyEE
N12_GLOBAL__N_120AArch64MCCodeEmitterE
N4llvm13AArch64MCExprE
DCPS1
FABD32
FACGE32
FCMGE32
FCMEQ32
FRECPS32
FRSQRTS32
FACGT32
FCMGT32
FMULX32
FMLAv2f32
FRINTAv2f32
FSUBv2f32
FABDv2f32
FADDv2f32
FACGEv2f32
FCMGEv2f32
FRECPEv2f32
FRSQRTEv2f32
SCVTFv2f32
UCVTFv2f32
FNEGv2f32
FRINTIv2f32
FMULv2f32
FMINNMv2f32
FMAXNMv2f32
FRINTMv2f32
FMINv2f32
FRINTNv2f32
FCVTXNv2f32
FADDPv2f32
FMINNMPv2f32
FMAXNMPv2f32
FMINPv2f32
FRINTPv2f32
FMAXPv2f32
FCMEQv2f32
FCVTASv2f32
FABSv2f32
FMLSv2f32
FCVTMSv2f32
FCVTNSv2f32
FRECPSv2f32
FCVTPSv2f32
FRSQRTSv2f32
FCVTZSv2f32
FACGTv2f32
FCMGTv2f32
FSQRTv2f32
FCVTAUv2f32
FCVTMUv2f32
FCVTNUv2f32
FCVTPUv2f32
FCVTZUv2f32
FDIVv2f32
FMAXv2f32
FMULXv2f32
FRINTXv2f32
FRINTZv2f32
FCVTZS_Intv2f32
FCVTZU_Intv2f32
FMLAv4f32
FRINTAv4f32
FSUBv4f32
FABDv4f32
FADDv4f32
FACGEv4f32
FCMGEv4f32
FRECPEv4f32
FRSQRTEv4f32
SCVTFv4f32
UCVTFv4f32
FNEGv4f32
FRINTIv4f32
FMULv4f32
FMINNMv4f32
FMAXNMv4f32
FRINTMv4f32
FMINv4f32
FRINTNv4f32
FCVTXNv4f32
FADDPv4f32
FMINNMPv4f32
FMAXNMPv4f32
FMINPv4f32
FRINTPv4f32
FMAXPv4f32
FCMEQv4f32
FCVTASv4f32
FABSv4f32
FMLSv4f32
FCVTMSv4f32
FCVTNSv4f32
FRECPSv4f32
FCVTPSv4f32
FRSQRTSv4f32
FCVTZSv4f32
FACGTv4f32
FCMGTv4f32
FSQRTv4f32
FCVTAUv4f32
FCVTMUv4f32
FCVTNUv4f32
FCVTPUv4f32
FCVTZUv4f32
FDIVv4f32
FMAXv4f32
FMULXv4f32
FRINTXv4f32
FRINTZv4f32
FCVTZS_Intv4f32
FCVTZU_Intv4f32
LD1i32
ST1i32
SQSUBv1i32
UQSUBv1i32
USQADDv1i32
SUQADDv1i32
FRECPEv1i32
FRSQRTEv1i32
SCVTFv1i32
UCVTFv1i32
SQNEGv1i32
SQDMULHv1i32
SQRDMULHv1i32
SQSHLv1i32
UQSHLv1i32
SQRSHLv1i32
UQRSHLv1i32
SQXTNv1i32
UQXTNv1i32
SQXTUNv1i32
FCVTASv1i32
SQABSv1i32
FCVTMSv1i32
FCVTNSv1i32
FCVTPSv1i32
FCVTZSv1i32
FCVTAUv1i32
FCVTMUv1i32
FCVTNUv1i32
FCVTPUv1i32
FCVTZUv1i32
FRECPXv1i32
LD2i32
ST2i32
TRN1v2i32
ZIP1v2i32
UZP1v2i32
TRN2v2i32
ZIP2v2i32
UZP2v2i32
REV64v2i32
SABAv2i32
UABAv2i32
MLAv2i32
SHSUBv2i32
UHSUBv2i32
SQSUBv2i32
UQSUBv2i32
BICv2i32
SABDv2i32
UABDv2i32
SRHADDv2i32
URHADDv2i32
SHADDv2i32
UHADDv2i32
USQADDv2i32
SUQADDv2i32
CMGEv2i32
URECPEv2i32
URSQRTEv2i32
SQNEGv2i32
SQDMULHv2i32
SQRDMULHv2i32
CMHIv2i32
MVNIv2i32
MOVIv2i32
SQSHLv2i32
UQSHLv2i32
SQRSHLv2i32
UQRSHLv2i32
SRSHLv2i32
URSHLv2i32
SSHLv2i32
USHLv2i32
SHLLv2i32
FCVTLv2i32
MULv2i32
SMINv2i32
UMINv2i32
FCVTNv2i32
SQXTNv2i32
UQXTNv2i32
SQXTUNv2i32
ADDPv2i32
SMINPv2i32
UMINPv2i32
SMAXPv2i32
UMAXPv2i32
CMEQv2i32
ORRv2i32
SQABSv2i32
CMHSv2i32
CLSv2i32
MLSv2i32
CMGTv2i32
CMTSTv2i32
SMAXv2i32
UMAXv2i32
CLZv2i32
RSUBHNv2i64_v2i32
RADDHNv2i64_v2i32
SADALPv4i16_v2i32
UADALPv4i16_v2i32
SADDLPv4i16_v2i32
UADDLPv4i16_v2i32
LD3i32
ST3i32
LD4i32
ST4i32
TRN1v4i32
ZIP1v4i32
UZP1v4i32
TRN2v4i32
ZIP2v4i32
UZP2v4i32
REV64v4i32
SABAv4i32
UABAv4i32
MLAv4i32
SHSUBv4i32
UHSUBv4i32
SQSUBv4i32
UQSUBv4i32
BICv4i32
SABDv4i32
UABDv4i32
SRHADDv4i32
URHADDv4i32
SHADDv4i32
UHADDv4i32
USQADDv4i32
SUQADDv4i32
CMGEv4i32
URECPEv4i32
URSQRTEv4i32
SQNEGv4i32
SQDMULHv4i32
SQRDMULHv4i32
CMHIv4i32
MVNIv4i32
MOVIv4i32
SQSHLv4i32
UQSHLv4i32
SQRSHLv4i32
UQRSHLv4i32
SRSHLv4i32
URSHLv4i32
SSHLv4i32
USHLv4i32
SHLLv4i32
FCVTLv4i32
MULv4i32
SMINv4i32
UMINv4i32
FCVTNv4i32
SQXTNv4i32
UQXTNv4i32
SQXTUNv4i32
ADDPv4i32
SMINPv4i32
UMINPv4i32
SMAXPv4i32
UMAXPv4i32
CMEQv4i32
ORRv4i32
SQABSv4i32
CMHSv4i32
CLSv4i32
MLSv4i32
CMGTv4i32
CMTSTv4i32
SMAXv4i32
UMAXv4i32
CLZv4i32
RSUBHNv2i64_v4i32
RADDHNv2i64_v4i32
SABALv4i16_v4i32
UABALv4i16_v4i32
SQDMLALv4i16_v4i32
SMLALv4i16_v4i32
UMLALv4i16_v4i32
SSUBLv4i16_v4i32
USUBLv4i16_v4i32
SABDLv4i16_v4i32
UABDLv4i16_v4i32
SADDLv4i16_v4i32
UADDLv4i16_v4i32
SQDMULLv4i16_v4i32
SMULLv4i16_v4i32
UMULLv4i16_v4i32
SQDMLSLv4i16_v4i32
SMLSLv4i16_v4i32
UMLSLv4i16_v4i32
SSUBWv4i16_v4i32
USUBWv4i16_v4i32
SADDWv4i16_v4i32
UADDWv4i16_v4i32
SABALv8i16_v4i32
UABALv8i16_v4i32
SQDMLALv8i16_v4i32
SMLALv8i16_v4i32
UMLALv8i16_v4i32
SSUBLv8i16_v4i32
USUBLv8i16_v4i32
SABDLv8i16_v4i32
UABDLv8i16_v4i32
SADDLv8i16_v4i32
UADDLv8i16_v4i32
SQDMULLv8i16_v4i32
SMULLv8i16_v4i32
UMULLv8i16_v4i32
SQDMLSLv8i16_v4i32
SMLSLv8i16_v4i32
UMLSLv8i16_v4i32
SADALPv8i16_v4i32
UADALPv8i16_v4i32
SADDLPv8i16_v4i32
UADDLPv8i16_v4i32
SSUBWv8i16_v4i32
USUBWv8i16_v4i32
SADDWv8i16_v4i32
UADDWv8i16_v4i32
SQDMLALi32
SQDMULLi32
SQDMLSLi32
CPYi32
UMOVvi32
SMOVvi16to32
SMOVvi8to32
DCPS2
DCPS3
FABD64
FACGE64
FCMGE64
FCMEQ64
FRECPS64
FRSQRTS64
FACGT64
FCMGT64
FMULX64
FMLAv2f64
FRINTAv2f64
FSUBv2f64
FABDv2f64
FADDv2f64
FACGEv2f64
FCMGEv2f64
FRECPEv2f64
FRSQRTEv2f64
SCVTFv2f64
UCVTFv2f64
FNEGv2f64
FRINTIv2f64
FMULv2f64
FMINNMv2f64
FMAXNMv2f64
FRINTMv2f64
FMINv2f64
FRINTNv2f64
FADDPv2f64
FMINNMPv2f64
FMAXNMPv2f64
FMINPv2f64
FRINTPv2f64
FMAXPv2f64
FCMEQv2f64
FCVTASv2f64
FABSv2f64
FMLSv2f64
FCVTMSv2f64
FCVTNSv2f64
FRECPSv2f64
FCVTPSv2f64
FRSQRTSv2f64
FCVTZSv2f64
FACGTv2f64
FCMGTv2f64
FSQRTv2f64
FCVTAUv2f64
FCVTMUv2f64
FCVTNUv2f64
FCVTPUv2f64
FCVTZUv2f64
FDIVv2f64
FMAXv2f64
FMULXv2f64
FRINTXv2f64
FRINTZv2f64
FCVTZS_Intv2f64
FCVTZU_Intv2f64
LD1i64
ST1i64
SQSUBv1i64
UQSUBv1i64
USQADDv1i64
SUQADDv1i64
CMGEv1i64
FRECPEv1i64
FRSQRTEv1i64
SCVTFv1i64
UCVTFv1i64
SQNEGv1i64
CMHIv1i64
SQSHLv1i64
UQSHLv1i64
SQRSHLv1i64
UQRSHLv1i64
SRSHLv1i64
URSHLv1i64
SSHLv1i64
USHLv1i64
PMULLv1i64
FCVTXNv1i64
CMEQv1i64
FCVTASv1i64
SQABSv1i64
CMHSv1i64
FCVTMSv1i64
FCVTNSv1i64
FCVTPSv1i64
FCVTZSv1i64
CMGTv1i64
CMTSTv1i64
FCVTAUv1i64
FCVTMUv1i64
FCVTNUv1i64
FCVTPUv1i64
FCVTZUv1i64
FRECPXv1i64
SADALPv2i32_v1i64
UADALPv2i32_v1i64
SADDLPv2i32_v1i64
UADDLPv2i32_v1i64
LD2i64
ST2i64
TRN1v2i64
ZIP1v2i64
UZP1v2i64
TRN2v2i64
ZIP2v2i64
UZP2v2i64
SQSUBv2i64
UQSUBv2i64
USQADDv2i64
SUQADDv2i64
CMGEv2i64
SQNEGv2i64
CMHIv2i64
SQSHLv2i64
UQSHLv2i64
SQRSHLv2i64
UQRSHLv2i64
SRSHLv2i64
URSHLv2i64
SSHLv2i64
USHLv2i64
PMULLv2i64
ADDPv2i64
CMEQv2i64
SQABSv2i64
CMHSv2i64
CMGTv2i64
CMTSTv2i64
SABALv2i32_v2i64
UABALv2i32_v2i64
SQDMLALv2i32_v2i64
SMLALv2i32_v2i64
UMLALv2i32_v2i64
SSUBLv2i32_v2i64
USUBLv2i32_v2i64
SABDLv2i32_v2i64
UABDLv2i32_v2i64
SADDLv2i32_v2i64
UADDLv2i32_v2i64
SQDMULLv2i32_v2i64
SMULLv2i32_v2i64
UMULLv2i32_v2i64
SQDMLSLv2i32_v2i64
SMLSLv2i32_v2i64
UMLSLv2i32_v2i64
SSUBWv2i32_v2i64
USUBWv2i32_v2i64
SADDWv2i32_v2i64
UADDWv2i32_v2i64
SABALv4i32_v2i64
UABALv4i32_v2i64
SQDMLALv4i32_v2i64
SMLALv4i32_v2i64
UMLALv4i32_v2i64
SSUBLv4i32_v2i64
USUBLv4i32_v2i64
SABDLv4i32_v2i64
UABDLv4i32_v2i64
SADDLv4i32_v2i64
UADDLv4i32_v2i64
SQDMULLv4i32_v2i64
SMULLv4i32_v2i64
UMULLv4i32_v2i64
SQDMLSLv4i32_v2i64
SMLSLv4i32_v2i64
UMLSLv4i32_v2i64
SADALPv4i32_v2i64
UADALPv4i32_v2i64
SADDLPv4i32_v2i64
UADDLPv4i32_v2i64
SSUBWv4i32_v2i64
USUBWv4i32_v2i64
SADDWv4i32_v2i64
UADDWv4i32_v2i64
LD3i64
ST3i64
LD4i64
ST4i64
CPYi64
UMOVvi64
SMOVvi32to64
SMOVvi16to64
SMOVvi8to64
SUBXrx64
ADDXrx64
SUBSXrx64
ADDSXrx64
LD1i16
ST1i16
SQSUBv1i16
UQSUBv1i16
USQADDv1i16
SUQADDv1i16
SQNEGv1i16
SQDMULHv1i16
SQRDMULHv1i16
SQSHLv1i16
UQSHLv1i16
SQRSHLv1i16
UQRSHLv1i16
SQXTNv1i16
UQXTNv1i16
SQXTUNv1i16
SQABSv1i16
LD2i16
ST2i16
LD3i16
ST3i16
LD4i16
ST4i16
TRN1v4i16
ZIP1v4i16
UZP1v4i16
REV32v4i16
TRN2v4i16
ZIP2v4i16
UZP2v4i16
REV64v4i16
SABAv4i16
UABAv4i16
MLAv4i16
SHSUBv4i16
UHSUBv4i16
SQSUBv4i16
UQSUBv4i16
BICv4i16
SABDv4i16
UABDv4i16
SRHADDv4i16
URHADDv4i16
SHADDv4i16
UHADDv4i16
USQADDv4i16
SUQADDv4i16
CMGEv4i16
SQNEGv4i16
SQDMULHv4i16
SQRDMULHv4i16
CMHIv4i16
MVNIv4i16
MOVIv4i16
SQSHLv4i16
UQSHLv4i16
SQRSHLv4i16
UQRSHLv4i16
SRSHLv4i16
URSHLv4i16
SSHLv4i16
USHLv4i16
SHLLv4i16
FCVTLv4i16
MULv4i16
SMINv4i16
UMINv4i16
FCVTNv4i16
SQXTNv4i16
UQXTNv4i16
SQXTUNv4i16
ADDPv4i16
SMINPv4i16
UMINPv4i16
SMAXPv4i16
UMAXPv4i16
CMEQv4i16
ORRv4i16
SQABSv4i16
CMHSv4i16
CLSv4i16
MLSv4i16
CMGTv4i16
CMTSTv4i16
SMAXv4i16
UMAXv4i16
CLZv4i16
RSUBHNv4i32_v4i16
RADDHNv4i32_v4i16
SADALPv8i8_v4i16
UADALPv8i8_v4i16
SADDLPv8i8_v4i16
UADDLPv8i8_v4i16
TRN1v8i16
ZIP1v8i16
UZP1v8i16
REV32v8i16
TRN2v8i16
ZIP2v8i16
UZP2v8i16
REV64v8i16
SABAv8i16
UABAv8i16
MLAv8i16
SHSUBv8i16
UHSUBv8i16
SQSUBv8i16
UQSUBv8i16
BICv8i16
SABDv8i16
UABDv8i16
SRHADDv8i16
URHADDv8i16
SHADDv8i16
UHADDv8i16
USQADDv8i16
SUQADDv8i16
CMGEv8i16
SQNEGv8i16
SQDMULHv8i16
SQRDMULHv8i16
CMHIv8i16
MVNIv8i16
MOVIv8i16
SQSHLv8i16
UQSHLv8i16
SQRSHLv8i16
UQRSHLv8i16
SRSHLv8i16
URSHLv8i16
SSHLv8i16
USHLv8i16
SHLLv8i16
FCVTLv8i16
MULv8i16
SMINv8i16
UMINv8i16
FCVTNv8i16
SQXTNv8i16
UQXTNv8i16
SQXTUNv8i16
ADDPv8i16
SMINPv8i16
UMINPv8i16
SMAXPv8i16
UMAXPv8i16
CMEQv8i16
ORRv8i16
SQABSv8i16
CMHSv8i16
CLSv8i16
MLSv8i16
CMGTv8i16
CMTSTv8i16
SMAXv8i16
UMAXv8i16
CLZv8i16
RSUBHNv4i32_v8i16
RADDHNv4i32_v8i16
SABALv16i8_v8i16
UABALv16i8_v8i16
SMLALv16i8_v8i16
UMLALv16i8_v8i16
SSUBLv16i8_v8i16
USUBLv16i8_v8i16
SABDLv16i8_v8i16
UABDLv16i8_v8i16
SADDLv16i8_v8i16
UADDLv16i8_v8i16
SMULLv16i8_v8i16
UMULLv16i8_v8i16
SMLSLv16i8_v8i16
UMLSLv16i8_v8i16
SADALPv16i8_v8i16
UADALPv16i8_v8i16
SADDLPv16i8_v8i16
UADDLPv16i8_v8i16
SSUBWv16i8_v8i16
USUBWv16i8_v8i16
SADDWv16i8_v8i16
UADDWv16i8_v8i16
SABALv8i8_v8i16
UABALv8i8_v8i16
SMLALv8i8_v8i16
UMLALv8i8_v8i16
SSUBLv8i8_v8i16
USUBLv8i8_v8i16
SABDLv8i8_v8i16
UABDLv8i8_v8i16
SADDLv8i8_v8i16
UADDLv8i8_v8i16
SMULLv8i8_v8i16
UMULLv8i8_v8i16
SMLSLv8i8_v8i16
UMLSLv8i8_v8i16
SSUBWv8i8_v8i16
USUBWv8i8_v8i16
SADDWv8i8_v8i16
UADDWv8i8_v8i16
SQDMLALi16
SQDMULLi16
SQDMLSLi16
CPYi16
UMOVvi16
LD1i8
ST1i8
SQSUBv1i8
UQSUBv1i8
USQADDv1i8
SUQADDv1i8
SQNEGv1i8
SQSHLv1i8
UQSHLv1i8
SQRSHLv1i8
UQRSHLv1i8
SQXTNv1i8
UQXTNv1i8
SQXTUNv1i8
SQABSv1i8
LD2i8
ST2i8
LD3i8
ST3i8
LD4i8
ST4i8
TRN1v16i8
ZIP1v16i8
UZP1v16i8
REV32v16i8
TRN2v16i8
ZIP2v16i8
UZP2v16i8
REV64v16i8
REV16v16i8
SABAv16i8
UABAv16i8
MLAv16i8
SHSUBv16i8
UHSUBv16i8
SQSUBv16i8
UQSUBv16i8
BICv16i8
SABDv16i8
UABDv16i8
SRHADDv16i8
URHADDv16i8
SHADDv16i8
UHADDv16i8
USQADDv16i8
SUQADDv16i8
ANDv16i8
CMGEv16i8
BIFv16i8
SQNEGv16i8
CMHIv16i8
SQSHLv16i8
UQSHLv16i8
SQRSHLv16i8
UQRSHLv16i8
SRSHLv16i8
URSHLv16i8
SSHLv16i8
USHLv16i8
SHLLv16i8
PMULLv16i8
BSLv16i8
PMULv16i8
SMINv16i8
UMINv16i8
ORNv16i8
SQXTNv16i8
UQXTNv16i8
SQXTUNv16i8
ADDPv16i8
SMINPv16i8
UMINPv16i8
SMAXPv16i8
UMAXPv16i8
CMEQv16i8
EORv16i8
ORRv16i8
SQABSv16i8
CMHSv16i8
CLSv16i8
MLSv16i8
CMGTv16i8
RBITv16i8
CNTv16i8
NOTv16i8
CMTSTv16i8
EXTv16i8
SMAXv16i8
UMAXv16i8
CLZv16i8
RSUBHNv8i16_v16i8
RADDHNv8i16_v16i8
TRN1v8i8
ZIP1v8i8
UZP1v8i8
REV32v8i8
TRN2v8i8
ZIP2v8i8
UZP2v8i8
REV64v8i8
REV16v8i8
SABAv8i8
UABAv8i8
MLAv8i8
SHSUBv8i8
UHSUBv8i8
SQSUBv8i8
UQSUBv8i8
BICv8i8
SABDv8i8
UABDv8i8
SRHADDv8i8
URHADDv8i8
SHADDv8i8
UHADDv8i8
USQADDv8i8
SUQADDv8i8
ANDv8i8
CMGEv8i8
BIFv8i8
SQNEGv8i8
CMHIv8i8
SQSHLv8i8
UQSHLv8i8
SQRSHLv8i8
UQRSHLv8i8
SRSHLv8i8
URSHLv8i8
SSHLv8i8
USHLv8i8
SHLLv8i8
PMULLv8i8
BSLv8i8
PMULv8i8
SMINv8i8
UMINv8i8
ORNv8i8
SQXTNv8i8
UQXTNv8i8
SQXTUNv8i8
ADDPv8i8
SMINPv8i8
UMINPv8i8
SMAXPv8i8
UMAXPv8i8
CMEQv8i8
EORv8i8
ORRv8i8
SQABSv8i8
CMHSv8i8
CLSv8i8
MLSv8i8
CMGTv8i8
RBITv8i8
CNTv8i8
NOTv8i8
CMTSTv8i8
EXTv8i8
SMAXv8i8
UMAXv8i8
CLZv8i8
RSUBHNv8i16_v8i8
RADDHNv8i16_v8i8
CPYi8
UMOVvi8
MOVaddrBA
LDARB
STLRB
LDAXRB
LDXRB
STLXRB
STXRB
MOVID
LIFETIME_END
LOAD_STACK_GUARD
REG_SEQUENCE
BUNDLE
DBG_VALUE
IMPLICIT_DEF
EXTRACT_SUBREG
INSERT_SUBREG
SUBREG_TO_REG
LDARH
STLRH
LDAXRH
LDXRH
STLXRH
STXRH
GC_LABEL
EH_LABEL
F128CSEL
TLSDESCCALL
KILL
INLINEASM
CFI_INSTRUCTION
ADJCALLSTACKDOWN
STACKMAP
MOVaddrCP
ADRP
ADJCALLSTACKUP
TLSDESC_BLR
RET_ReallyLR
MOVaddrTLS
DRPS
COPY_TO_REGCLASS
ERET
MOVaddrJT
HINT
PATCHPOINT
LIFETIME_START
LD1i32_POST
ST1i32_POST
LD2i32_POST
ST2i32_POST
LD3i32_POST
ST3i32_POST
LD4i32_POST
ST4i32_POST
LD1i64_POST
ST1i64_POST
LD2i64_POST
ST2i64_POST
LD3i64_POST
ST3i64_POST
LD4i64_POST
ST4i64_POST
LD1i16_POST
ST1i16_POST
LD2i16_POST
ST2i16_POST
LD3i16_POST
ST3i16_POST
LD4i16_POST
ST4i16_POST
LD1i8_POST
ST1i8_POST
LD2i8_POST
ST2i8_POST
LD3i8_POST
ST3i8_POST
LD4i8_POST
ST4i8_POST
LD1Rv16b_POST
LD2Rv16b_POST
LD3Rv16b_POST
LD4Rv16b_POST
LD1Threev16b_POST
ST1Threev16b_POST
LD3Threev16b_POST
ST3Threev16b_POST
LD1Onev16b_POST
ST1Onev16b_POST
LD1Twov16b_POST
ST1Twov16b_POST
LD2Twov16b_POST
ST2Twov16b_POST
LD1Fourv16b_POST
ST1Fourv16b_POST
LD4Fourv16b_POST
ST4Fourv16b_POST
LD1Rv8b_POST
LD2Rv8b_POST
LD3Rv8b_POST
LD4Rv8b_POST
LD1Threev8b_POST
ST1Threev8b_POST
LD3Threev8b_POST
ST3Threev8b_POST
LD1Onev8b_POST
ST1Onev8b_POST
LD1Twov8b_POST
ST1Twov8b_POST
LD2Twov8b_POST
ST2Twov8b_POST
LD1Fourv8b_POST
ST1Fourv8b_POST
LD4Fourv8b_POST
ST4Fourv8b_POST
LD1Rv1d_POST
LD2Rv1d_POST
LD3Rv1d_POST
LD4Rv1d_POST
LD1Threev1d_POST
ST1Threev1d_POST
LD1Onev1d_POST
ST1Onev1d_POST
LD1Twov1d_POST
ST1Twov1d_POST
LD1Fourv1d_POST
ST1Fourv1d_POST
LD1Rv2d_POST
LD2Rv2d_POST
LD3Rv2d_POST
LD4Rv2d_POST
LD1Threev2d_POST
ST1Threev2d_POST
LD3Threev2d_POST
ST3Threev2d_POST
LD1Onev2d_POST
ST1Onev2d_POST
LD1Twov2d_POST
ST1Twov2d_POST
LD2Twov2d_POST
ST2Twov2d_POST
LD1Fourv2d_POST
ST1Fourv2d_POST
LD4Fourv2d_POST
ST4Fourv2d_POST
LD1Rv4h_POST
LD2Rv4h_POST
LD3Rv4h_POST
LD4Rv4h_POST
LD1Threev4h_POST
ST1Threev4h_POST
LD3Threev4h_POST
ST3Threev4h_POST
LD1Onev4h_POST
ST1Onev4h_POST
LD1Twov4h_POST
ST1Twov4h_POST
LD2Twov4h_POST
ST2Twov4h_POST
LD1Fourv4h_POST
ST1Fourv4h_POST
LD4Fourv4h_POST
ST4Fourv4h_POST
LD1Rv8h_POST
LD2Rv8h_POST
LD3Rv8h_POST
LD4Rv8h_POST
LD1Threev8h_POST
ST1Threev8h_POST
LD3Threev8h_POST
ST3Threev8h_POST
LD1Onev8h_POST
ST1Onev8h_POST
LD1Twov8h_POST
ST1Twov8h_POST
LD2Twov8h_POST
ST2Twov8h_POST
LD1Fourv8h_POST
ST1Fourv8h_POST
LD4Fourv8h_POST
ST4Fourv8h_POST
LD1Rv2s_POST
LD2Rv2s_POST
LD3Rv2s_POST
LD4Rv2s_POST
LD1Threev2s_POST
ST1Threev2s_POST
LD3Threev2s_POST
ST3Threev2s_POST
LD1Onev2s_POST
ST1Onev2s_POST
LD1Twov2s_POST
ST1Twov2s_POST
LD2Twov2s_POST
ST2Twov2s_POST
LD1Fourv2s_POST
ST1Fourv2s_POST
LD4Fourv2s_POST
ST4Fourv2s_POST
LD1Rv4s_POST
LD2Rv4s_POST
LD3Rv4s_POST
LD4Rv4s_POST
LD1Threev4s_POST
ST1Threev4s_POST
LD3Threev4s_POST
ST3Threev4s_POST
LD1Onev4s_POST
ST1Onev4s_POST
LD1Twov4s_POST
ST1Twov4s_POST
LD2Twov4s_POST
ST2Twov4s_POST
LD1Fourv4s_POST
ST1Fourv4s_POST
LD4Fourv4s_POST
ST4Fourv4s_POST
MOVaddrEXT
LDAXPW
LDXPW
STLXPW
STXPW
LDARW
STLRW
LDAXRW
LDXRW
STLXRW
STXRW
CBZW
TBZW
CBNZW
TBNZW
LDRBBroW
STRBBroW
LDRBroW
STRBroW
LDRDroW
STRDroW
LDRHHroW
STRHHroW
LDRHroW
STRHroW
PRFMroW
LDRQroW
STRQroW
LDRSroW
STRSroW
LDRSBWroW
LDRSHWroW
LDRWroW
STRWroW
LDRSWroW
LDRSBXroW
LDRSHXroW
LDRXroW
STRXroW
CLREX
LDAXPX
LDXPX
STLXPX
STXPX
LDARX
STLRX
LDAXRX
LDXRX
STLXRX
STXRX
CBZX
TBZX
CBNZX
TBNZX
LDRBBroX
STRBBroX
LDRBroX
STRBroX
LDRDroX
STRDroX
LDRHHroX
STRHHroX
LDRHroX
STRHroX
PRFMroX
LDRQroX
STRQroX
LDRSroX
STRSroX
LDRSBWroX
LDRSHWroX
LDRWroX
STRWroX
LDRSWroX
LDRSBXroX
LDRSHXroX
LDRXroX
STRXroX
COPY
LD1Rv16b
LD2Rv16b
LD3Rv16b
LD4Rv16b
LD1Threev16b
ST1Threev16b
LD3Threev16b
ST3Threev16b
LD1Onev16b
ST1Onev16b
LD1Twov16b
ST1Twov16b
LD2Twov16b
ST2Twov16b
LD1Fourv16b
ST1Fourv16b
LD4Fourv16b
ST4Fourv16b
LD1Rv8b
LD2Rv8b
LD3Rv8b
LD4Rv8b
LD1Threev8b
ST1Threev8b
LD3Threev8b
ST3Threev8b
LD1Onev8b
ST1Onev8b
LD1Twov8b
ST1Twov8b
LD2Twov8b
ST2Twov8b
LD1Fourv8b
ST1Fourv8b
LD4Fourv8b
ST4Fourv8b
SQSHLb
UQSHLb
SQSHRNb
UQSHRNb
SQRSHRNb
UQRSHRNb
SQSHRUNb
SQRSHRUNb
SQSHLUb
LD1Rv1d
LD2Rv1d
LD3Rv1d
LD4Rv1d
LD1Threev1d
ST1Threev1d
LD1Onev1d
ST1Onev1d
LD1Twov1d
ST1Twov1d
LD1Fourv1d
ST1Fourv1d
LD1Rv2d
LD2Rv2d
LD3Rv2d
LD4Rv2d
LD1Threev2d
ST1Threev2d
LD3Threev2d
ST3Threev2d
LD1Onev2d
ST1Onev2d
LD1Twov2d
ST1Twov2d
LD2Twov2d
ST2Twov2d
LD1Fourv2d
ST1Fourv2d
LD4Fourv2d
ST4Fourv2d
SRSRAd
URSRAd
SSRAd
USRAd
SCVTFd
UCVTFd
SLId
SRId
SQSHLd
UQSHLd
SRSHRd
URSHRd
SSHRd
USHRd
FCVTZSd
SQSHLUd
FCVTZUd
FMLAv1i32_indexed
SQDMULHv1i32_indexed
SQRDMULHv1i32_indexed
SQDMLALv1i32_indexed
SQDMULLv1i32_indexed
SQDMLSLv1i32_indexed
FMULv1i32_indexed
FMLSv1i32_indexed
FMULXv1i32_indexed
FMLAv2i32_indexed
SQDMULHv2i32_indexed
SQRDMULHv2i32_indexed
SQDMLALv2i32_indexed
SMLALv2i32_indexed
UMLALv2i32_indexed
SQDMULLv2i32_indexed
SMULLv2i32_indexed
UMULLv2i32_indexed
SQDMLSLv2i32_indexed
SMLSLv2i32_indexed
UMLSLv2i32_indexed
FMULv2i32_indexed
FMLSv2i32_indexed
FMULXv2i32_indexed
FMLAv4i32_indexed
SQDMULHv4i32_indexed
SQRDMULHv4i32_indexed
SQDMLALv4i32_indexed
SMLALv4i32_indexed
UMLALv4i32_indexed
SQDMULLv4i32_indexed
SMULLv4i32_indexed
UMULLv4i32_indexed
SQDMLSLv4i32_indexed
SMLSLv4i32_indexed
UMLSLv4i32_indexed
FMULv4i32_indexed
FMLSv4i32_indexed
FMULXv4i32_indexed
FMLAv1i64_indexed
SQDMLALv1i64_indexed
SQDMULLv1i64_indexed
SQDMLSLv1i64_indexed
FMULv1i64_indexed
FMLSv1i64_indexed
FMULXv1i64_indexed
FMLAv2i64_indexed
FMULv2i64_indexed
FMLSv2i64_indexed
FMULXv2i64_indexed
SQDMULHv1i16_indexed
SQRDMULHv1i16_indexed
MLAv4i16_indexed
SQDMULHv4i16_indexed
SQRDMULHv4i16_indexed
SQDMLALv4i16_indexed
SMLALv4i16_indexed
UMLALv4i16_indexed
SQDMULLv4i16_indexed
SMULLv4i16_indexed
UMULLv4i16_indexed
SQDMLSLv4i16_indexed
SMLSLv4i16_indexed
UMLSLv4i16_indexed
MULv4i16_indexed
MLSv4i16_indexed
MLAv8i16_indexed
SQDMULHv8i16_indexed
SQRDMULHv8i16_indexed
SQDMLALv8i16_indexed
SMLALv8i16_indexed
UMLALv8i16_indexed
SQDMULLv8i16_indexed
SMULLv8i16_indexed
UMULLv8i16_indexed
SQDMLSLv8i16_indexed
SMLSLv8i16_indexed
UMLSLv8i16_indexed
MULv8i16_indexed
MLSv8i16_indexed
TBLv16i8Three
TBXv16i8Three
TBLv8i8Three
TBXv8i8Three
TBLv16i8One
TBXv16i8One
TBLv8i8One
TBXv8i8One
DUPv2i32lane
DUPv4i32lane
INSvi32lane
DUPv2i64lane
INSvi64lane
DUPv4i16lane
DUPv8i16lane
INSvi16lane
DUPv16i8lane
DUPv8i8lane
INSvi8lane
LDRBBpre
STRBBpre
LDRBpre
STRBpre
LDPDpre
STPDpre
LDRDpre
STRDpre
LDRHHpre
STRHHpre
LDRHpre
STRHpre
LDPQpre
STPQpre
LDRQpre
STRQpre
LDPSpre
STPSpre
LDRSpre
STRSpre
LDRSBWpre
LDRSHWpre
LDPWpre
STPWpre
LDRWpre
STRWpre
LDPSWpre
LDRSWpre
LDRSBXpre
LDRSHXpre
LDPXpre
STPXpre
LDRXpre
STRXpre
MSRpstate
LD1Rv4h
LD2Rv4h
LD3Rv4h
LD4Rv4h
LD1Threev4h
ST1Threev4h
LD3Threev4h
ST3Threev4h
LD1Onev4h
ST1Onev4h
LD1Twov4h
ST1Twov4h
LD2Twov4h
ST2Twov4h
LD1Fourv4h
ST1Fourv4h
LD4Fourv4h
ST4Fourv4h
LD1Rv8h
LD2Rv8h
LD3Rv8h
LD4Rv8h
LD1Threev8h
ST1Threev8h
LD3Threev8h
ST3Threev8h
LD1Onev8h
ST1Onev8h
LD1Twov8h
ST1Twov8h
LD2Twov8h
ST2Twov8h
LD1Fourv8h
ST1Fourv8h
LD4Fourv8h
ST4Fourv8h
SQSHLh
UQSHLh
SQSHRNh
UQSHRNh
SQRSHRNh
UQRSHRNh
SQSHRUNh
SQRSHRUNh
SQSHLUh
LDURBBi
STURBBi
LDTRBi
STTRBi
LDURBi
STURBi
LDPDi
LDNPDi
STNPDi
STPDi
LDURDi
STURDi
FMOVDi
LDURHHi
STURHHi
LDTRHi
STTRHi
LDURHi
STURHi
PRFUMi
LDPQi
LDNPQi
STNPQi
STPQi
LDURQi
STURQi
LDPSi
LDNPSi
STNPSi
STPSi
LDURSi
STURSi
FMOVSi
LDTRSBWi
LDURSBWi
LDTRSHWi
LDURSHWi
MOVKWi
CCMNWi
MOVNWi
LDPWi
CCMPWi
LDNPWi
STNPWi
STPWi
LDTRWi
STTRWi
LDURWi
STURWi
LDPSWi
LDTRSWi
LDURSWi
MOVZWi
LDTRSBXi
LDURSBXi
LDTRSHXi
LDURSHXi
MOVKXi
CCMNXi
MOVNXi
LDPXi
CCMPXi
LDNPXi
STNPXi
STPXi
LDTRXi
STTRXi
LDURXi
STURXi
MOVZXi
TCRETURNdi
FCMPEDri
FCMPDri
SCVTFSWDri
UCVTFSWDri
FCVTZSSWDri
FCVTZUSWDri
FCVTZS_IntSWDri
FCVTZU_IntSWDri
SCVTFUWDri
UCVTFUWDri
SCVTFSXDri
UCVTFSXDri
FCVTZSSXDri
FCVTZUSXDri
FCVTZS_IntSXDri
FCVTZU_IntSXDri
SCVTFUXDri
UCVTFUXDri
TCRETURNri
FCMPESri
FCMPSri
SCVTFSWSri
UCVTFSWSri
FCVTZSSWSri
FCVTZUSWSri
FCVTZS_IntSWSri
FCVTZU_IntSWSri
SCVTFUWSri
UCVTFUWSri
SCVTFSXSri
UCVTFSXSri
FCVTZSSXSri
FCVTZUSXSri
FCVTZS_IntSXSri
FCVTZU_IntSXSri
SCVTFUXSri
UCVTFUXSri
SUBWri
ADDWri
ANDWri
SBFMWri
UBFMWri
EORWri
ORRWri
SUBSWri
ADDSWri
ANDSWri
SUBXri
ADDXri
ANDXri
SBFMXri
UBFMXri
EORXri
ORRXri
SUBSXri
ADDSXri
ANDSXri
EXTRWrri
EXTRXrri
LDRBBui
STRBBui
LDRBui
STRBui
LDRDui
STRDui
LDRHHui
STRHHui
LDRHui
STRHui
PRFMui
LDRQui
STRQui
LDRSui
STRSui
LDRSBWui
LDRSHWui
LDRWui
STRWui
LDRSWui
LDRSBXui
LDRSHXui
LDRXui
STRXui
LDRDl
PRFMl
LDRQl
LDRSl
LDRWl
LDRSWl
LDRXl
MVNIv2s_msl
MOVIv2s_msl
MVNIv4s_msl
MOVIv4s_msl
MOVi32imm
MOVi64imm
TBLv16i8Two
TBXv16i8Two
TBLv8i8Two
TBXv8i8Two
FADDPv2i32p
FMINNMPv2i32p
FMAXNMPv2i32p
FMINPv2i32p
FMAXPv2i32p
FADDPv2i64p
FMINNMPv2i64p
FMAXNMPv2i64p
FMINPv2i64p
FMAXPv2i64p
FRINTADr
FNEGDr
FCVTHDr
FRINTIDr
FRINTMDr
FRINTNDr
FRINTPDr
FABSDr
FCVTSDr
FSQRTDr
FMOVDr
FCVTASUWDr
FCVTMSUWDr
FCVTNSUWDr
FCVTPSUWDr
FCVTZSUWDr
FCVTAUUWDr
FCVTMUUWDr
FCVTNUUWDr
FCVTPUUWDr
FCVTZUUWDr
FCVTZS_IntUWDr
FCVTZU_IntUWDr
FRINTXDr
FCVTASUXDr
FCVTMSUXDr
FCVTNSUXDr
FCVTPSUXDr
FCVTZSUXDr
FCVTAUUXDr
FCVTMUUXDr
FCVTNUUXDr
FCVTPUUXDr
FCVTZUUXDr
FCVTZS_IntUXDr
FCVTZU_IntUXDr
FMOVXDr
FRINTZDr
FCVTDHr
FCVTSHr
FRINTASr
FCVTDSr
FNEGSr
FCVTHSr
FRINTISr
FRINTMSr
FRINTNSr
FRINTPSr
FABSSr
FSQRTSr
FMOVSr
FCVTASUWSr
FCVTMSUWSr
FCVTNSUWSr
FCVTPSUWSr
FCVTZSUWSr
FCVTAUUWSr
FCVTMUUWSr
FCVTNUUWSr
FCVTPUUWSr
FCVTZUUWSr
FCVTZS_IntUWSr
FCVTZU_IntUWSr
FMOVWSr
FRINTXSr
FCVTASUXSr
FCVTMSUXSr
FCVTNSUXSr
FCVTPSUXSr
FCVTZSUXSr
FCVTAUUXSr
FCVTMUUXSr
FCVTNUUXSr
FCVTPUUXSr
FCVTZUUXSr
FCVTZS_IntUXSr
FCVTZU_IntUXSr
FRINTZSr
REV16Wr
SBCWr
ADCWr
CSINCWr
CSNEGWr
CSELWr
CCMNWr
CCMPWr
SBCSWr
ADCSWr
CLSWr
FMOVSWr
RBITWr
REVWr
SDIVWr
UDIVWr
LSLVWr
CSINVWr
RORVWr
ASRVWr
LSRVWr
CLZWr
SDIV_IntWr
UDIV_IntWr
REV32Xr
REV16Xr
SBCXr
ADCXr
CSINCXr
FMOVDXr
CSNEGXr
CSELXr
CCMNXr
CCMPXr
SBCSXr
ADCSXr
CLSXr
RBITXr
REVXr
SDIVXr
UDIVXr
LSLVXr
CSINVXr
RORVXr
ASRVXr
LSRVXr
CLZXr
SDIV_IntXr
UDIV_IntXr
MOVaddr
FMOVXDHighr
FMOVDXHighr
DUPv2i32gpr
DUPv4i32gpr
INSvi32gpr
DUPv2i64gpr
INSvi64gpr
DUPv4i16gpr
DUPv8i16gpr
INSvi16gpr
DUPv16i8gpr
DUPv8i8gpr
INSvi8gpr
SHA256SU0rr
SHA1SU1rr
CRC32Brr
CRC32CBrr
AESIMCrr
AESMCrr
FSUBDrr
FADDDrr
FCCMPEDrr
FCMPEDrr
FMULDrr
FNMULDrr
FMINNMDrr
FMAXNMDrr
FMINDrr
FCCMPDrr
FCMPDrr
AESDrr
FDIVDrr
FMAXDrr
AESErr
SHA1Hrr
CRC32Hrr
CRC32CHrr
SMULHrr
UMULHrr
FSUBSrr
FADDSrr
FCCMPESrr
FCMPESrr
FMULSrr
FNMULSrr
FMINNMSrr
FMAXNMSrr
FMINSrr
FCCMPSrr
FCMPSrr
FDIVSrr
FMAXSrr
CRC32Wrr
SUBWrr
CRC32CWrr
BICWrr
ADDWrr
ANDWrr
EONWrr
ORNWrr
EORWrr
ORRWrr
SUBSWrr
BICSWrr
ADDSWrr
ANDSWrr
CRC32Xrr
SUBXrr
CRC32CXrr
BICXrr
ADDXrr
ANDXrr
EONXrr
ORNXrr
EORXrr
ORRXrr
SUBSXrr
BICSXrr
ADDSXrr
ANDSXrr
SHA1SU0rrr
SHA256SU1rrr
SHA256H2rrr
SHA1Crrr
FMSUBDrrr
FNMSUBDrrr
FMADDDrrr
FNMADDDrrr
FCSELDrrr
SHA256Hrrr
SMSUBLrrr
UMSUBLrrr
SMADDLrrr
UMADDLrrr
SHA1Mrrr
SHA1Prrr
FMSUBSrrr
FNMSUBSrrr
FMADDSrrr
FNMADDSrrr
FCSELSrrr
MSUBWrrr
MADDWrrr
MSUBXrrr
MADDXrrr
TBLv16i8Four
TBXv16i8Four
TBLv8i8Four
TBXv8i8Four
LD1Rv2s
LD2Rv2s
LD3Rv2s
LD4Rv2s
LD1Threev2s
ST1Threev2s
LD3Threev2s
ST3Threev2s
LD1Onev2s
ST1Onev2s
LD1Twov2s
ST1Twov2s
LD2Twov2s
ST2Twov2s
LD1Fourv2s
ST1Fourv2s
LD4Fourv2s
ST4Fourv2s
LD1Rv4s
LD2Rv4s
LD3Rv4s
LD4Rv4s
LD1Threev4s
ST1Threev4s
LD3Threev4s
ST3Threev4s
LD1Onev4s
ST1Onev4s
LD1Twov4s
ST1Twov4s
LD2Twov4s
ST2Twov4s
LD1Fourv4s
ST1Fourv4s
LD4Fourv4s
ST4Fourv4s
SCVTFs
UCVTFs
SQSHLs
UQSHLs
SQSHRNs
UQSHRNs
SQRSHRNs
UQRSHRNs
SQSHRUNs
SQRSHRUNs
FCVTZSs
SQSHLUs
FCVTZUs
FMOVv2f32_ns
FMOVv4f32_ns
FMOVv2f64_ns
MOVIv16b_ns
MOVIv8b_ns
MOVIv2d_ns
SUBWrs
BICWrs
ADDWrs
ANDWrs
EONWrs
ORNWrs
EORWrs
ORRWrs
SUBSWrs
BICSWrs
ADDSWrs
ANDSWrs
SUBXrs
BICXrs
ADDXrs
ANDXrs
EONXrs
ORNXrs
EORXrs
ORRXrs
SUBSXrs
BICSXrs
ADDSXrs
ANDSXrs
SRSRAv2i32_shift
URSRAv2i32_shift
SSRAv2i32_shift
USRAv2i32_shift
SCVTFv2i32_shift
UCVTFv2i32_shift
SLIv2i32_shift
SRIv2i32_shift
SQSHLv2i32_shift
UQSHLv2i32_shift
SSHLLv2i32_shift
USHLLv2i32_shift
SQSHRNv2i32_shift
UQSHRNv2i32_shift
SQRSHRNv2i32_shift
UQRSHRNv2i32_shift
SQSHRUNv2i32_shift
SQRSHRUNv2i32_shift
SRSHRv2i32_shift
URSHRv2i32_shift
SSHRv2i32_shift
USHRv2i32_shift
FCVTZSv2i32_shift
SQSHLUv2i32_shift
FCVTZUv2i32_shift
SRSRAv4i32_shift
URSRAv4i32_shift
SSRAv4i32_shift
USRAv4i32_shift
SCVTFv4i32_shift
UCVTFv4i32_shift
SLIv4i32_shift
SRIv4i32_shift
SQSHLv4i32_shift
UQSHLv4i32_shift
SSHLLv4i32_shift
USHLLv4i32_shift
SQSHRNv4i32_shift
UQSHRNv4i32_shift
SQRSHRNv4i32_shift
UQRSHRNv4i32_shift
SQSHRUNv4i32_shift
SQRSHRUNv4i32_shift
SRSHRv4i32_shift
URSHRv4i32_shift
SSHRv4i32_shift
USHRv4i32_shift
FCVTZSv4i32_shift
SQSHLUv4i32_shift
FCVTZUv4i32_shift
SRSRAv2i64_shift
URSRAv2i64_shift
SSRAv2i64_shift
USRAv2i64_shift
SCVTFv2i64_shift
UCVTFv2i64_shift
SLIv2i64_shift
SRIv2i64_shift
SQSHLv2i64_shift
UQSHLv2i64_shift
SRSHRv2i64_shift
URSHRv2i64_shift
SSHRv2i64_shift
USHRv2i64_shift
FCVTZSv2i64_shift
SQSHLUv2i64_shift
FCVTZUv2i64_shift
SRSRAv4i16_shift
URSRAv4i16_shift
SSRAv4i16_shift
USRAv4i16_shift
SLIv4i16_shift
SRIv4i16_shift
SQSHLv4i16_shift
UQSHLv4i16_shift
SSHLLv4i16_shift
USHLLv4i16_shift
SQSHRNv4i16_shift
UQSHRNv4i16_shift
SQRSHRNv4i16_shift
UQRSHRNv4i16_shift
SQSHRUNv4i16_shift
SQRSHRUNv4i16_shift
SRSHRv4i16_shift
URSHRv4i16_shift
SSHRv4i16_shift
USHRv4i16_shift
SQSHLUv4i16_shift
SRSRAv8i16_shift
URSRAv8i16_shift
SSRAv8i16_shift
USRAv8i16_shift
SLIv8i16_shift
SRIv8i16_shift
SQSHLv8i16_shift
UQSHLv8i16_shift
SSHLLv8i16_shift
USHLLv8i16_shift
SQSHRNv8i16_shift
UQSHRNv8i16_shift
SQRSHRNv8i16_shift
UQRSHRNv8i16_shift
SQSHRUNv8i16_shift
SQRSHRUNv8i16_shift
SRSHRv8i16_shift
URSHRv8i16_shift
SSHRv8i16_shift
USHRv8i16_shift
SQSHLUv8i16_shift
SRSRAv16i8_shift
URSRAv16i8_shift
SSRAv16i8_shift
USRAv16i8_shift
SLIv16i8_shift
SRIv16i8_shift
SQSHLv16i8_shift
UQSHLv16i8_shift
SSHLLv16i8_shift
USHLLv16i8_shift
SQSHRNv16i8_shift
UQSHRNv16i8_shift
SQRSHRNv16i8_shift
UQRSHRNv16i8_shift
SQSHRUNv16i8_shift
SQRSHRUNv16i8_shift
SRSHRv16i8_shift
URSHRv16i8_shift
SSHRv16i8_shift
USHRv16i8_shift
SQSHLUv16i8_shift
SRSRAv8i8_shift
URSRAv8i8_shift
SSRAv8i8_shift
USRAv8i8_shift
SLIv8i8_shift
SRIv8i8_shift
SQSHLv8i8_shift
UQSHLv8i8_shift
SSHLLv8i8_shift
USHLLv8i8_shift
SQSHRNv8i8_shift
UQSHRNv8i8_shift
SQRSHRNv8i8_shift
UQRSHRNv8i8_shift
SQSHRUNv8i8_shift
SQRSHRUNv8i8_shift
SRSHRv8i8_shift
URSHRv8i8_shift
SSHRv8i8_shift
USHRv8i8_shift
SQSHLUv8i8_shift
LOADgot
LDRBBpost
STRBBpost
LDRBpost
STRBpost
LDPDpost
STPDpost
LDRDpost
STRDpost
LDRHHpost
STRHHpost
LDRHpost
STRHpost
LDPQpost
STPQpost
LDRQpost
STRQpost
LDPSpost
STPSpost
LDRSpost
STRSpost
LDRSBWpost
LDRSHWpost
LDPWpost
STPWpost
LDRWpost
STRWpost
LDPSWpost
LDRSWpost
LDRSBXpost
LDRSHXpost
LDPXpost
STPXpost
LDRXpost
STRXpost
SYSLxt
SYSxt
ADDVv4i32v
SADDLVv4i32v
UADDLVv4i32v
FMINNMVv4i32v
FMAXNMVv4i32v
FMINVv4i32v
SMINVv4i32v
UMINVv4i32v
FMAXVv4i32v
SMAXVv4i32v
UMAXVv4i32v
ADDVv4i16v
SADDLVv4i16v
UADDLVv4i16v
SMINVv4i16v
UMINVv4i16v
SMAXVv4i16v
UMAXVv4i16v
ADDVv8i16v
SADDLVv8i16v
UADDLVv8i16v
SMINVv8i16v
UMINVv8i16v
SMAXVv8i16v
UMAXVv8i16v
ADDVv16i8v
SADDLVv16i8v
UADDLVv16i8v
SMINVv16i8v
UMINVv16i8v
SMAXVv16i8v
UMAXVv16i8v
ADDVv8i8v
SADDLVv8i8v
UADDLVv8i8v
SMINVv8i8v
UMINVv8i8v
SMAXVv8i8v
UMAXVv8i8v
SUBWrx
ADDWrx
SUBSWrx
ADDSWrx
SUBXrx
ADDXrx
SUBSXrx
ADDSXrx
FCMGEv1i32rz
FCMLEv1i32rz
FCMEQv1i32rz
FCMGTv1i32rz
FCMLTv1i32rz
FCMGEv2i32rz
FCMLEv2i32rz
FCMEQv2i32rz
FCMGTv2i32rz
FCMLTv2i32rz
FCMGEv4i32rz
FCMLEv4i32rz
FCMEQv4i32rz
FCMGTv4i32rz
FCMLTv4i32rz
FCMGEv1i64rz
FCMLEv1i64rz
FCMEQv1i64rz
FCMGTv1i64rz
FCMLTv1i64rz
FCMGEv2i64rz
FCMLEv2i64rz
FCMEQv2i64rz
FCMGTv2i64rz
FCMLTv2i64rz
CMGEv4i16rz
CMLEv4i16rz
CMEQv4i16rz
CMGTv4i16rz
CMLTv4i16rz
CMGEv8i16rz
CMLEv8i16rz
CMEQv8i16rz
CMGTv8i16rz
CMLTv8i16rz
CMGEv16i8rz
CMLEv16i8rz
CMEQv16i8rz
CMGTv16i8rz
CMLTv16i8rz
CMGEv8i8rz
CMLEv8i8rz
CMEQv8i8rz
CMGTv8i8rz
CMLTv8i8rz
D7_D8_D9_D10
Q7_Q8_Q9_Q10
D17_D18_D19_D20
Q17_Q18_Q19_Q20
D27_D28_D29_D30
Q27_Q28_Q29_Q30
D29_D30_D31_D0
Q29_Q30_Q31_Q0
D8_D9_D10_D11
Q8_Q9_Q10_Q11
D18_D19_D20_D21
Q18_Q19_Q20_Q21
D28_D29_D30_D31
Q28_Q29_Q30_Q31
D30_D31_D0_D1
Q30_Q31_Q0_Q1
D9_D10_D11_D12
Q9_Q10_Q11_Q12
D19_D20_D21_D22
Q19_Q20_Q21_Q22
D31_D0_D1_D2
Q31_Q0_Q1_Q2
D10_D11_D12_D13
Q10_Q11_Q12_Q13
D20_D21_D22_D23
Q20_Q21_Q22_Q23
D0_D1_D2_D3
Q0_Q1_Q2_Q3
D11_D12_D13_D14
Q11_Q12_Q13_Q14
D21_D22_D23_D24
Q21_Q22_Q23_Q24
D1_D2_D3_D4
Q1_Q2_Q3_Q4
D12_D13_D14_D15
Q12_Q13_Q14_Q15
D22_D23_D24_D25
Q22_Q23_Q24_Q25
D2_D3_D4_D5
Q2_Q3_Q4_Q5
D13_D14_D15_D16
Q13_Q14_Q15_Q16
D23_D24_D25_D26
Q23_Q24_Q25_Q26
D3_D4_D5_D6
Q3_Q4_Q5_Q6
D14_D15_D16_D17
Q14_Q15_Q16_Q17
D24_D25_D26_D27
Q24_Q25_Q26_Q27
D4_D5_D6_D7
Q4_Q5_Q6_Q7
D15_D16_D17_D18
Q15_Q16_Q17_Q18
D25_D26_D27_D28
Q25_Q26_Q27_Q28
D5_D6_D7_D8
Q5_Q6_Q7_Q8
D16_D17_D18_D19
Q16_Q17_Q18_Q19
D26_D27_D28_D29
Q26_Q27_Q28_Q29
D6_D7_D8_D9
Q6_Q7_Q8_Q9
NZCV
N12_GLOBAL__N_123AArch64MachObjectWriterE
N4llvm21AArch64TargetStreamerE
 B'
a8"a8
a8"a8
(!z)
o80)o8(
o8(Io84
o84i
b0Bb0
|0B|0B|0
r0Br0Br0
Ba3ba3
j0Bj0
BY3bY3
sha1su0
sha256su0
trn1
zip1
uzp1
dcps1
sha1su1
sha256su1
rev32
sha256h2
sabal2
uabal2
sqdmlal2
smlal2
umlal2
ssubl2
usubl2
sabdl2
uabdl2
saddl2
uaddl2
sshll2
ushll2
sqdmull2
pmull2
smull2
umull2
sqdmlsl2
smlsl2
umlsl2
fcvtl2
rsubhn2
raddhn2
sqshrn2
uqshrn2
sqrshrn2
uqrshrn2
trn2
fcvtn2
sqxtn2
uqxtn2
sqshrun2
sqrshrun2
sqxtun2
fcvtxn2
zip2
uzp2
dcps2
ssubw2
usubw2
saddw2
uaddw2
dcps3
rev64
rev16
saba
uaba
fmla
srsra
ursra
ssra
usra
frinta
crc32b
crc32cb
ldarb
ldrb
stlrb
ldtrb
strb
sttrb
ldurb
sturb
ldaxrb
ldxrb
stlxrb
stxrb
ldrsb
ldtrsb
ldursb
fsub
shsub
uhsub
fmsub
fnmsub
sqsub
uqsub
sha1c
aesimc
aesmc
csinc
fabd
sabd
uabd
fadd
srhadd
urhadd
shadd
uhadd
fmadd
fnmadd
usqadd
suqadd
aesd
facge
fcmge
fcmle
frecpe
urecpe
fccmpe
fcmpe
aese
frsqrte
ursqrte
scvtf
ucvtf
fneg
sqneg
csneg
sha1h
crc32h
sha256h
crc32ch
sqdmulh
sqrdmulh
smulh
umulh
ldarh
ldrh
stlrh
ldtrh
strh
sttrh
ldurh
sturh
ldaxrh
ldxrh
stlxrh
stxrh
ldrsh
ldtrsh
ldursh
cmhi
mvni
frinti
movi
movk
sabal
uabal
sqdmlal
smlal
umlal
smsubl
umsubl
ssubl
usubl
sabdl
uabdl
smaddl
umaddl
saddl
uaddl
fcsel
sqshl
uqshl
sqrshl
uqrshl
srshl
urshl
sshl
ushl
sshll
ushll
sqdmull
pmull
smull
umull
sqdmlsl
smlsl
umlsl
sysl
fcvtl
fmul
fnmul
pmul
sha1m
sbfm
ubfm
prfm
fminnm
fmaxnm
frintm
prfum
rsubhn
raddhn
fmin
smin
umin
ccmn
sqshrn
uqshrn
sqrshrn
uqrshrn
frintn
fcvtn
sqxtn
uqxtn
sqshrun
sqrshrun
sqxtun
movn
fcvtxn
sha1p
faddp
sadalp
uadalp
saddlp
uaddlp
fccmp
fcmp
fminnmp
fmaxnmp
ldnp
fminp
sminp
uminp
stnp
adrp
frintp
ldaxp
fmaxp
smaxp
umaxp
ldxp
stlxp
stxp
fcmeq
ld1r
ld2r
ld3r
ld4r
ldar
srshr
urshr
sshr
ushr
stlr
ldtr
sttr
extr
ldur
stur
ldaxr
ldxr
stlxr
stxr
fcvtas
fabs
sqabs
subs
sbcs
adcs
bics
adds
ands
cmhs
fmls
fcvtms
fcvtns
frecps
fcvtps
frsqrts
fcvtzs
facgt
fcmgt
rbit
fcmlt
fsqrt
cmtst
fcvt
fcvtau
sqshlu
fcvtmu
fcvtnu
fcvtpu
fcvtzu
addv
fdiv
sdiv
udiv
saddlv
uaddlv
fminnmv
fmaxnmv
fminv
sminv
uminv
csinv
fmov
smov
umov
fmaxv
smaxv
umaxv
crc32w
ssubw
usubw
crc32cw
saddw
uaddw
ldpsw
ldrsw
ldtrsw
ldursw
crc32x
fmax
smax
umax
crc32cx
clrex
fmulx
frecpx
frintx
cbnz
tbnz
frintz
movz
.tlsdesccall 
hint 
LIFETIME_END
BUNDLE
DBG_VALUE
LIFETIME_START
drps
eret
D7_D8_D9_D10
Q7_Q8_Q9_Q10
D17_D18_D19_D20
Q17_Q18_Q19_Q20
D27_D28_D29_D30
Q27_Q28_Q29_Q30
D29_D30_D31_D0
Q29_Q30_Q31_Q0
D8_D9_D10_D11
Q8_Q9_Q10_Q11
D18_D19_D20_D21
Q18_Q19_Q20_Q21
D28_D29_D30_D31
Q28_Q29_Q30_Q31
D30_D31_D0_D1
Q30_Q31_Q0_Q1
D9_D10_D11_D12
Q9_Q10_Q11_Q12
D19_D20_D21_D22
Q19_Q20_Q21_Q22
D31_D0_D1_D2
Q31_Q0_Q1_Q2
D10_D11_D12_D13
Q10_Q11_Q12_Q13
D20_D21_D22_D23
Q20_Q21_Q22_Q23
D0_D1_D2_D3
Q0_Q1_Q2_Q3
D11_D12_D13_D14
Q11_Q12_Q13_Q14
D21_D22_D23_D24
Q21_Q22_Q23_Q24
D1_D2_D3_D4
Q1_Q2_Q3_Q4
D12_D13_D14_D15
Q12_Q13_Q14_Q15
D22_D23_D24_D25
Q22_Q23_Q24_Q25
D2_D3_D4_D5
Q2_Q3_Q4_Q5
D13_D14_D15_D16
Q13_Q14_Q15_Q16
D23_D24_D25_D26
Q23_Q24_Q25_Q26
D3_D4_D5_D6
Q3_Q4_Q5_Q6
D14_D15_D16_D17
Q14_Q15_Q16_Q17
D24_D25_D26_D27
Q24_Q25_Q26_Q27
D4_D5_D6_D7
Q4_Q5_Q6_Q7
D15_D16_D17_D18
Q15_Q16_Q17_Q18
D25_D26_D27_D28
Q25_Q26_Q27_Q28
D5_D6_D7_D8
Q5_Q6_Q7_Q8
D16_D17_D18_D19
Q16_Q17_Q18_Q19
D26_D27_D28_D29
Q26_Q27_Q28_Q29
D6_D7_D8_D9
Q6_Q7_Q8_Q9
nzcv
Y0j2
dcps1
rev32
fcvtl2
fcvtn2
fcvtxn2
dcps2
dcps3
rev16
srsra
ursra
ssra
usra
frinta
ins.b
smov.b
umov.b
crc32b
trn1.16b
zip1.16b
uzp1.16b
rev32.16b
rsubhn2.16b
raddhn2.16b
sqshrn2.16b
uqshrn2.16b
sqrshrn2.16b
uqrshrn2.16b
trn2.16b
sqxtn2.16b
uqxtn2.16b
sqshrun2.16b
sqrshrun2.16b
sqxtun2.16b
zip2.16b
uzp2.16b
rev64.16b
rev16.16b
saba.16b
uaba.16b
mla.16b
srsra.16b
ursra.16b
ssra.16b
usra.16b
shsub.16b
uhsub.16b
sqsub.16b
uqsub.16b
bic.16b
aesimc.16b
aesmc.16b
sabd.16b
uabd.16b
srhadd.16b
urhadd.16b
shadd.16b
uhadd.16b
usqadd.16b
suqadd.16b
and.16b
aesd.16b
cmge.16b
cmle.16b
aese.16b
bif.16b
sqneg.16b
cmhi.16b
sli.16b
sri.16b
movi.16b
sqshl.16b
uqshl.16b
sqrshl.16b
uqrshl.16b
srshl.16b
urshl.16b
sshl.16b
ushl.16b
bsl.16b
pmul.16b
smin.16b
umin.16b
orn.16b
addp.16b
sminp.16b
uminp.16b
dup.16b
smaxp.16b
umaxp.16b
cmeq.16b
srshr.16b
urshr.16b
sshr.16b
ushr.16b
eor.16b
orr.16b
sqabs.16b
cmhs.16b
cls.16b
mls.16b
cmgt.16b
rbit.16b
cmlt.16b
cnt.16b
not.16b
cmtst.16b
ext.16b
sqshlu.16b
addv.16b
saddlv.16b
uaddlv.16b
sminv.16b
uminv.16b
smaxv.16b
umaxv.16b
smax.16b
umax.16b
clz.16b
trn1.8b
zip1.8b
uzp1.8b
rev32.8b
trn2.8b
zip2.8b
uzp2.8b
rev64.8b
rev16.8b
saba.8b
uaba.8b
mla.8b
srsra.8b
ursra.8b
ssra.8b
usra.8b
shsub.8b
uhsub.8b
sqsub.8b
uqsub.8b
bic.8b
sabd.8b
uabd.8b
srhadd.8b
urhadd.8b
shadd.8b
uhadd.8b
usqadd.8b
suqadd.8b
and.8b
cmge.8b
cmle.8b
bif.8b
sqneg.8b
cmhi.8b
sli.8b
sri.8b
movi.8b
sqshl.8b
uqshl.8b
sqrshl.8b
uqrshl.8b
srshl.8b
urshl.8b
sshl.8b
ushl.8b
bsl.8b
pmul.8b
rsubhn.8b
raddhn.8b
smin.8b
umin.8b
sqshrn.8b
uqshrn.8b
sqrshrn.8b
uqrshrn.8b
orn.8b
sqxtn.8b
uqxtn.8b
sqshrun.8b
sqrshrun.8b
sqxtun.8b
addp.8b
sminp.8b
uminp.8b
dup.8b
smaxp.8b
umaxp.8b
cmeq.8b
srshr.8b
urshr.8b
sshr.8b
ushr.8b
eor.8b
orr.8b
sqabs.8b
cmhs.8b
cls.8b
mls.8b
cmgt.8b
rbit.8b
cmlt.8b
cnt.8b
not.8b
cmtst.8b
ext.8b
sqshlu.8b
addv.8b
saddlv.8b
uaddlv.8b
sminv.8b
uminv.8b
smaxv.8b
umaxv.8b
smax.8b
umax.8b
clz.8b
crc32cb
ldarb
ldrb
stlrb
ldtrb
strb
sttrb
ldurb
sturb
ldaxrb
ldxrb
stlxrb
stxrb
ldrsb
ldtrsb
ldursb
fsub
fmsub
fnmsub
sqsub
uqsub
csinc
fmla.d
fmul.d
fmls.d
ins.d
fmov.d
umov.d
fmulx.d
sadalp.1d
uadalp.1d
saddlp.1d
uaddlp.1d
trn1.2d
zip1.2d
uzp1.2d
sabal2.2d
uabal2.2d
sqdmlal2.2d
smlal2.2d
umlal2.2d
ssubl2.2d
usubl2.2d
sabdl2.2d
uabdl2.2d
saddl2.2d
uaddl2.2d
sshll2.2d
ushll2.2d
sqdmull2.2d
smull2.2d
umull2.2d
sqdmlsl2.2d
smlsl2.2d
umlsl2.2d
trn2.2d
zip2.2d
uzp2.2d
ssubw2.2d
usubw2.2d
saddw2.2d
uaddw2.2d
fmla.2d
srsra.2d
ursra.2d
ssra.2d
usra.2d
frinta.2d
fsub.2d
sqsub.2d
uqsub.2d
fabd.2d
fadd.2d
usqadd.2d
suqadd.2d
facge.2d
fcmge.2d
fcmle.2d
frecpe.2d
frsqrte.2d
scvtf.2d
ucvtf.2d
fneg.2d
sqneg.2d
cmhi.2d
sli.2d
sri.2d
frinti.2d
movi.2d
sabal.2d
uabal.2d
sqdmlal.2d
smlal.2d
umlal.2d
ssubl.2d
usubl.2d
sabdl.2d
uabdl.2d
saddl.2d
uaddl.2d
sqshl.2d
uqshl.2d
sqrshl.2d
uqrshl.2d
srshl.2d
urshl.2d
sshl.2d
ushl.2d
sshll.2d
ushll.2d
sqdmull.2d
smull.2d
umull.2d
sqdmlsl.2d
smlsl.2d
umlsl.2d
fmul.2d
fminnm.2d
fmaxnm.2d
frintm.2d
fmin.2d
frintn.2d
faddp.2d
sadalp.2d
uadalp.2d
saddlp.2d
uaddlp.2d
fminnmp.2d
fmaxnmp.2d
fminp.2d
frintp.2d
dup.2d
fmaxp.2d
fcmeq.2d
srshr.2d
urshr.2d
sshr.2d
ushr.2d
fcvtas.2d
fabs.2d
sqabs.2d
cmhs.2d
fmls.2d
fcvtms.2d
fcvtns.2d
frecps.2d
fcvtps.2d
frsqrts.2d
fcvtzs.2d
facgt.2d
fcmgt.2d
fcmlt.2d
fsqrt.2d
cmtst.2d
fcvtau.2d
sqshlu.2d
fcvtmu.2d
fcvtnu.2d
fcvtpu.2d
fcvtzu.2d
fdiv.2d
fmov.2d
ssubw.2d
usubw.2d
saddw.2d
uaddw.2d
fmax.2d
fmulx.2d
frintx.2d
frintz.2d
fabd
fadd
fmadd
fnmadd
usqadd
suqadd
facge
fcmge
fcmle
frecpe
fccmpe
fcmpe
frsqrte
scvtf
ucvtf
fneg
sqneg
csneg
sqdmulh.h
sqrdmulh.h
sqdmlal.h
sqdmull.h
sqdmlsl.h
ins.h
smov.h
umov.h
sha1h
crc32h
trn1.4h
zip1.4h
uzp1.4h
rev32.4h
trn2.4h
zip2.4h
uzp2.4h
rev64.4h
saba.4h
uaba.4h
mla.4h
srsra.4h
ursra.4h
ssra.4h
usra.4h
shsub.4h
uhsub.4h
sqsub.4h
uqsub.4h
bic.4h
sabd.4h
uabd.4h
srhadd.4h
urhadd.4h
shadd.4h
uhadd.4h
usqadd.4h
suqadd.4h
cmge.4h
cmle.4h
sqneg.4h
sqdmulh.4h
sqrdmulh.4h
cmhi.4h
sli.4h
mvni.4h
sri.4h
movi.4h
sqshl.4h
uqshl.4h
sqrshl.4h
uqrshl.4h
srshl.4h
urshl.4h
sshl.4h
ushl.4h
mul.4h
rsubhn.4h
raddhn.4h
smin.4h
umin.4h
sqshrn.4h
uqshrn.4h
sqrshrn.4h
uqrshrn.4h
sqxtn.4h
uqxtn.4h
sqshrun.4h
sqrshrun.4h
sqxtun.4h
addp.4h
sadalp.4h
uadalp.4h
saddlp.4h
uaddlp.4h
sminp.4h
uminp.4h
dup.4h
smaxp.4h
umaxp.4h
cmeq.4h
srshr.4h
urshr.4h
sshr.4h
ushr.4h
orr.4h
sqabs.4h
cmhs.4h
cls.4h
mls.4h
cmgt.4h
cmlt.4h
cmtst.4h
sqshlu.4h
addv.4h
saddlv.4h
uaddlv.4h
sminv.4h
uminv.4h
smaxv.4h
umaxv.4h
smax.4h
umax.4h
clz.4h
trn1.8h
zip1.8h
uzp1.8h
rev32.8h
sabal2.8h
uabal2.8h
smlal2.8h
umlal2.8h
ssubl2.8h
usubl2.8h
sabdl2.8h
uabdl2.8h
saddl2.8h
uaddl2.8h
sshll2.8h
ushll2.8h
pmull2.8h
smull2.8h
umull2.8h
smlsl2.8h
umlsl2.8h
rsubhn2.8h
raddhn2.8h
sqshrn2.8h
uqshrn2.8h
sqrshrn2.8h
uqrshrn2.8h
trn2.8h
sqxtn2.8h
uqxtn2.8h
sqshrun2.8h
sqrshrun2.8h
sqxtun2.8h
zip2.8h
uzp2.8h
ssubw2.8h
usubw2.8h
saddw2.8h
uaddw2.8h
rev64.8h
saba.8h
uaba.8h
mla.8h
srsra.8h
ursra.8h
ssra.8h
usra.8h
shsub.8h
uhsub.8h
sqsub.8h
uqsub.8h
bic.8h
sabd.8h
uabd.8h
srhadd.8h
urhadd.8h
shadd.8h
uhadd.8h
usqadd.8h
suqadd.8h
cmge.8h
cmle.8h
sqneg.8h
sqdmulh.8h
sqrdmulh.8h
cmhi.8h
sli.8h
mvni.8h
sri.8h
movi.8h
sabal.8h
uabal.8h
smlal.8h
umlal.8h
ssubl.8h
usubl.8h
sabdl.8h
uabdl.8h
saddl.8h
uaddl.8h
sqshl.8h
uqshl.8h
sqrshl.8h
uqrshl.8h
srshl.8h
urshl.8h
sshl.8h
ushl.8h
sshll.8h
ushll.8h
pmull.8h
smull.8h
umull.8h
smlsl.8h
umlsl.8h
mul.8h
smin.8h
umin.8h
addp.8h
sadalp.8h
uadalp.8h
saddlp.8h
uaddlp.8h
sminp.8h
uminp.8h
dup.8h
smaxp.8h
umaxp.8h
cmeq.8h
srshr.8h
urshr.8h
sshr.8h
ushr.8h
orr.8h
sqabs.8h
cmhs.8h
cls.8h
mls.8h
cmgt.8h
cmlt.8h
cmtst.8h
sqshlu.8h
addv.8h
saddlv.8h
uaddlv.8h
sminv.8h
uminv.8h
smaxv.8h
umaxv.8h
ssubw.8h
usubw.8h
saddw.8h
uaddw.8h
smax.8h
umax.8h
clz.8h
crc32ch
sqdmulh
sqrdmulh
smulh
umulh
ldarh
ldrh
stlrh
ldtrh
strh
sttrh
ldurh
sturh
ldaxrh
ldxrh
stlxrh
stxrh
ldrsh
ldtrsh
ldursh
cmhi
frinti
movi
movk
sqdmlal
smsubl
umsubl
smaddl
umaddl
fcsel
sqshl
uqshl
sqrshl
uqrshl
srshl
urshl
sshl
ushl
sqdmull
sqdmlsl
sysl
fcvtl
fmul
fnmul
sbfm
ubfm
prfm
fminnm
fmaxnm
frintm
prfum
fmin
ccmn
sqshrn
uqshrn
sqrshrn
uqrshrn
frintn
fcvtn
sqxtn
uqxtn
sqshrun
sqrshrun
sqxtun
movn
fcvtxn
fccmp
fcmp
ldnp
stnp
adrp
frintp
ldaxp
ldxp
stlxp
stxp
pmull2.1q
pmull.1q
fcmeq
ld1r
ld2r
ld3r
ld4r
ldar
srshr
urshr
sshr
ushr
stlr
ldtr
sttr
extr
ldur
stur
ldaxr
ldxr
stlxr
stxr
fmla.s
sqdmulh.s
sqrdmulh.s
sqdmlal.s
sqdmull.s
sqdmlsl.s
fmul.s
fmls.s
ins.s
smov.s
umov.s
fmulx.s
trn1.2s
zip1.2s
uzp1.2s
trn2.2s
zip2.2s
uzp2.2s
rev64.2s
saba.2s
uaba.2s
fmla.2s
srsra.2s
ursra.2s
ssra.2s
usra.2s
frinta.2s
fsub.2s
shsub.2s
uhsub.2s
sqsub.2s
uqsub.2s
bic.2s
fabd.2s
sabd.2s
uabd.2s
fadd.2s
srhadd.2s
urhadd.2s
shadd.2s
uhadd.2s
usqadd.2s
suqadd.2s
facge.2s
fcmge.2s
fcmle.2s
frecpe.2s
urecpe.2s
frsqrte.2s
ursqrte.2s
scvtf.2s
ucvtf.2s
fneg.2s
sqneg.2s
sqdmulh.2s
sqrdmulh.2s
cmhi.2s
sli.2s
mvni.2s
sri.2s
frinti.2s
movi.2s
sqshl.2s
uqshl.2s
sqrshl.2s
uqrshl.2s
srshl.2s
urshl.2s
sshl.2s
ushl.2s
fmul.2s
fminnm.2s
fmaxnm.2s
frintm.2s
rsubhn.2s
raddhn.2s
fmin.2s
smin.2s
umin.2s
sqshrn.2s
uqshrn.2s
sqrshrn.2s
uqrshrn.2s
frintn.2s
sqxtn.2s
uqxtn.2s
sqshrun.2s
sqrshrun.2s
sqxtun.2s
faddp.2s
sadalp.2s
uadalp.2s
saddlp.2s
uaddlp.2s
fminnmp.2s
fmaxnmp.2s
fminp.2s
sminp.2s
uminp.2s
frintp.2s
dup.2s
fmaxp.2s
smaxp.2s
umaxp.2s
fcmeq.2s
srshr.2s
urshr.2s
sshr.2s
ushr.2s
orr.2s
fcvtas.2s
fabs.2s
sqabs.2s
cmhs.2s
cls.2s
fmls.2s
fcvtms.2s
fcvtns.2s
frecps.2s
fcvtps.2s
frsqrts.2s
fcvtzs.2s
facgt.2s
fcmgt.2s
fcmlt.2s
fsqrt.2s
cmtst.2s
fcvtau.2s
sqshlu.2s
fcvtmu.2s
fcvtnu.2s
fcvtpu.2s
fcvtzu.2s
fdiv.2s
fmov.2s
fmax.2s
smax.2s
umax.2s
fmulx.2s
frintx.2s
clz.2s
frintz.2s
sha1su0.4s
sha256su0.4s
trn1.4s
zip1.4s
uzp1.4s
sha1su1.4s
sha256su1.4s
sha256h2.4s
sabal2.4s
uabal2.4s
sqdmlal2.4s
smlal2.4s
umlal2.4s
ssubl2.4s
usubl2.4s
sabdl2.4s
uabdl2.4s
saddl2.4s
uaddl2.4s
sshll2.4s
ushll2.4s
sqdmull2.4s
smull2.4s
umull2.4s
sqdmlsl2.4s
smlsl2.4s
umlsl2.4s
rsubhn2.4s
raddhn2.4s
sqshrn2.4s
uqshrn2.4s
sqrshrn2.4s
uqrshrn2.4s
trn2.4s
sqxtn2.4s
uqxtn2.4s
sqshrun2.4s
sqrshrun2.4s
sqxtun2.4s
zip2.4s
uzp2.4s
ssubw2.4s
usubw2.4s
saddw2.4s
uaddw2.4s
rev64.4s
saba.4s
uaba.4s
fmla.4s
srsra.4s
ursra.4s
ssra.4s
usra.4s
frinta.4s
fsub.4s
shsub.4s
uhsub.4s
sqsub.4s
uqsub.4s
sha1c.4s
bic.4s
fabd.4s
sabd.4s
uabd.4s
fadd.4s
srhadd.4s
urhadd.4s
shadd.4s
uhadd.4s
usqadd.4s
suqadd.4s
facge.4s
fcmge.4s
fcmle.4s
frecpe.4s
urecpe.4s
frsqrte.4s
ursqrte.4s
scvtf.4s
ucvtf.4s
fneg.4s
sqneg.4s
sha256h.4s
sqdmulh.4s
sqrdmulh.4s
cmhi.4s
sli.4s
mvni.4s
sri.4s
frinti.4s
movi.4s
sabal.4s
uabal.4s
sqdmlal.4s
smlal.4s
umlal.4s
ssubl.4s
usubl.4s
sabdl.4s
uabdl.4s
saddl.4s
uaddl.4s
sqshl.4s
uqshl.4s
sqrshl.4s
uqrshl.4s
srshl.4s
urshl.4s
sshl.4s
ushl.4s
sshll.4s
ushll.4s
sqdmull.4s
smull.4s
umull.4s
sqdmlsl.4s
smlsl.4s
umlsl.4s
fmul.4s
sha1m.4s
fminnm.4s
fmaxnm.4s
frintm.4s
fmin.4s
smin.4s
umin.4s
frintn.4s
sha1p.4s
faddp.4s
sadalp.4s
uadalp.4s
saddlp.4s
uaddlp.4s
fminnmp.4s
fmaxnmp.4s
fminp.4s
sminp.4s
uminp.4s
frintp.4s
dup.4s
fmaxp.4s
smaxp.4s
umaxp.4s
fcmeq.4s
srshr.4s
urshr.4s
sshr.4s
ushr.4s
orr.4s
fcvtas.4s
fabs.4s
sqabs.4s
cmhs.4s
cls.4s
fmls.4s
fcvtms.4s
fcvtns.4s
frecps.4s
fcvtps.4s
frsqrts.4s
fcvtzs.4s
facgt.4s
fcmgt.4s
fcmlt.4s
fsqrt.4s
cmtst.4s
fcvtau.4s
sqshlu.4s
fcvtmu.4s
fcvtnu.4s
fcvtpu.4s
fcvtzu.4s
addv.4s
fdiv.4s
saddlv.4s
uaddlv.4s
fminnmv.4s
fmaxnmv.4s
fminv.4s
sminv.4s
uminv.4s
fmov.4s
fmaxv.4s
smaxv.4s
umaxv.4s
ssubw.4s
usubw.4s
saddw.4s
uaddw.4s
fmax.4s
smax.4s
umax.4s
fmulx.4s
frintx.4s
clz.4s
frintz.4s
fcvtas
fabs
sqabs
subs
sbcs
adcs
bics
adds
ands
cmhs
fcvtms
fcvtns
frecps
fcvtps
frsqrts
fcvtzs
facgt
fcmgt
rbit
fcmlt
fsqrt
cmtst
fcvt
fcvtau
sqshlu
fcvtmu
fcvtnu
fcvtpu
fcvtzu
fdiv
sdiv
udiv
csinv
fmov
crc32w
crc32cw
ldpsw
ldrsw
ldtrsw
ldursw
crc32x
fmax
crc32cx
clrex
fmulx
frecpx
frintx
cbnz
tbnz
frintz
movz
.tlsdesccall 
hint 
LIFETIME_END
BUNDLE
DBG_VALUE
LIFETIME_START
drps
eret
D7_D8_D9_D10
Q7_Q8_Q9_Q10
D17_D18_D19_D20
Q17_Q18_Q19_Q20
D27_D28_D29_D30
Q27_Q28_Q29_Q30
D29_D30_D31_D0
Q29_Q30_Q31_Q0
D8_D9_D10_D11
Q8_Q9_Q10_Q11
D18_D19_D20_D21
Q18_Q19_Q20_Q21
D28_D29_D30_D31
Q28_Q29_Q30_Q31
D30_D31_D0_D1
Q30_Q31_Q0_Q1
D9_D10_D11_D12
Q9_Q10_Q11_Q12
D19_D20_D21_D22
Q19_Q20_Q21_Q22
D31_D0_D1_D2
Q31_Q0_Q1_Q2
D10_D11_D12_D13
Q10_Q11_Q12_Q13
D20_D21_D22_D23
Q20_Q21_Q22_Q23
D0_D1_D2_D3
Q0_Q1_Q2_Q3
D11_D12_D13_D14
Q11_Q12_Q13_Q14
D21_D22_D23_D24
Q21_Q22_Q23_Q24
D1_D2_D3_D4
Q1_Q2_Q3_Q4
D12_D13_D14_D15
Q12_Q13_Q14_Q15
D22_D23_D24_D25
Q22_Q23_Q24_Q25
D2_D3_D4_D5
Q2_Q3_Q4_Q5
D13_D14_D15_D16
Q13_Q14_Q15_Q16
D23_D24_D25_D26
Q23_Q24_Q25_Q26
D3_D4_D5_D6
Q3_Q4_Q5_Q6
D14_D15_D16_D17
Q14_Q15_Q16_Q17
D24_D25_D26_D27
Q24_Q25_Q26_Q27
D4_D5_D6_D7
Q4_Q5_Q6_Q7
D15_D16_D17_D18
Q15_Q16_Q17_Q18
D25_D26_D27_D28
Q25_Q26_Q27_Q28
D5_D6_D7_D8
Q5_Q6_Q7_Q8
D16_D17_D18_D19
Q16_Q17_Q18_Q19
D26_D27_D28_D29
Q26_Q27_Q28_Q29
D6_D7_D8_D9
Q6_Q7_Q8_Q9
nzcv
N4llvm18AArch64InstPrinterE
N4llvm23AArch64AppleInstPrinterE
N4llvm14format_object1IxEE
N4llvm14format_object1IfEE
N4llvm14format_object1IyEE
N4llvm15X86Disassembler22X86GenericDisassemblerE
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!""##$$$$&&''((((%%%%%%%%))))))))""##$$$$&&''((((%%%%%%%%))))))))""##$$$$&&''((((%%%%%%%%))))))))""##$$$$&&''((((%%%%%%%%))))))))""##$$$$&&''((((%%%%%%%%))))))))""##$$$$&&''((((%%%%%%%%))))))))""##$$$$&&''((((%%%%%%%%))))))))""##$$$$&&''((((%%%%%%%%))))))))
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!**++,,,,..//0000--------11111111**++,,,,..//0000--------11111111**++,,,,..//0000--------11111111**++,,,,..//0000--------11111111**++,,,,..//0000--------11111111**++,,,,..//0000--------11111111**++,,,,..//0000--------11111111**++,,,,..//0000--------11111111
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!2233444466778888555555559999999922334444667788885555555599999999223344446677888855555555999999992233444466778888555555559999999922334444667788885555555599999999223344446677888855555555999999992233444466778888555555559999999922334444667788885555555599999999
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!2233444466778888555555559999999922334444667788885555555599999999223344446677888855555555999999992233444466778888555555559999999922334444667788885555555599999999223344446677888855555555999999992233444466778888555555559999999922334444667788885555555599999999
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!::;;<<<<>>??@@@@========AAAAAAAA::;;<<<<>>??@@@@========AAAAAAAA::;;<<<<>>??@@@@========AAAAAAAA::;;<<<<>>??@@@@========AAAAAAAA::;;<<<<>>??@@@@========AAAAAAAA::;;<<<<>>??@@@@========AAAAAAAA::;;<<<<>>??@@@@========AAAAAAAA::;;<<<<>>??@@@@========AAAAAAAA
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!BBCCDDDDFFGGHHHHEEEEEEEEIIIIIIIIBBCCDDDDFFGGHHHHEEEEEEEEIIIIIIIIBBCCDDDDFFGGHHHHEEEEEEEEIIIIIIIIBBCCDDDDFFGGHHHHEEEEEEEEIIIIIIIIBBCCDDDDFFGGHHHHEEEEEEEEIIIIIIIIBBCCDDDDFFGGHHHHEEEEEEEEIIIIIIIIBBCCDDDDFFGGHHHHEEEEEEEEIIIIIIIIBBCCDDDDFFGGHHHHEEEEEEEEIIIIIIII
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!JJKKLLLLNNOOPPPPMMMMMMMMQQQQQQQQJJKKLLLLNNOOPPPPMMMMMMMMQQQQQQQQJJKKLLLLNNOOPPPPMMMMMMMMQQQQQQQQJJKKLLLLNNOOPPPPMMMMMMMMQQQQQQQQJJKKLLLLNNOOPPPPMMMMMMMMQQQQQQQQJJKKLLLLNNOOPPPPMMMMMMMMQQQQQQQQJJKKLLLLNNOOPPPPMMMMMMMMQQQQQQQQJJKKLLLLNNOOPPPPMMMMMMMMQQQQQQQQ
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!JJKKLLLLNNOOPPPPMMMMMMMMQQQQQQQQJJKKLLLLNNOOPPPPMMMMMMMMQQQQQQQQJJKKLLLLNNOOPPPPMMMMMMMMQQQQQQQQJJKKLLLLNNOOPPPPMMMMMMMMQQQQQQQQJJKKLLLLNNOOPPPPMMMMMMMMQQQQQQQQJJKKLLLLNNOOPPPPMMMMMMMMQQQQQQQQJJKKLLLLNNOOPPPPMMMMMMMMQQQQQQQQJJKKLLLLNNOOPPPPMMMMMMMMQQQQQQQQ
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!RRSSTTTTVVWWXXXXUUUUUUUUYYYYYYYYRRSSTTTTVVWWXXXXUUUUUUUUYYYYYYYYRRSSTTTTVVWWXXXXUUUUUUUUYYYYYYYYRRSSTTTTVVWWXXXXUUUUUUUUYYYYYYYYRRSSTTTTVVWWXXXXUUUUUUUUYYYYYYYYRRSSTTTTVVWWXXXXUUUUUUUUYYYYYYYYRRSSTTTTVVWWXXXXUUUUUUUUYYYYYYYYRRSSTTTTVVWWXXXXUUUUUUUUYYYYYYYY
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!ZZ[[\\\\^^__````]]]]]]]]aaaaaaaaZZ[[\\\\^^__````]]]]]]]]aaaaaaaaZZ[[\\\\^^__````]]]]]]]]aaaaaaaaZZ[[\\\\^^__````]]]]]]]]aaaaaaaaZZ[[\\\\^^__````]]]]]]]]aaaaaaaaZZ[[\\\\^^__````]]]]]]]]aaaaaaaaZZ[[\\\\^^__````]]]]]]]]aaaaaaaaZZ[[\\\\^^__````]]]]]]]]aaaaaaaa
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!bbccddddffgghhhheeeeeeeeiiiiiiiibbccddddffgghhhheeeeeeeeiiiiiiiibbccddddffgghhhheeeeeeeeiiiiiiiibbccddddffgghhhheeeeeeeeiiiiiiiibbccddddffgghhhheeeeeeeeiiiiiiiibbccddddffgghhhheeeeeeeeiiiiiiiibbccddddffgghhhheeeeeeeeiiiiiiiibbccddddffgghhhheeeeeeeeiiiiiiii
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!bbccddddffgghhhheeeeeeeeiiiiiiiibbccddddffgghhhheeeeeeeeiiiiiiiibbccddddffgghhhheeeeeeeeiiiiiiiibbccddddffgghhhheeeeeeeeiiiiiiiibbccddddffgghhhheeeeeeeeiiiiiiiibbccddddffgghhhheeeeeeeeiiiiiiiibbccddddffgghhhheeeeeeeeiiiiiiiibbccddddffgghhhheeeeeeeeiiiiiiii
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!jjkkllllnnooppppmmmmmmmmqqqqqqqqjjkkllllnnooppppmmmmmmmmqqqqqqqqjjkkllllnnooppppmmmmmmmmqqqqqqqqjjkkllllnnooppppmmmmmmmmqqqqqqqqjjkkllllnnooppppmmmmmmmmqqqqqqqqjjkkllllnnooppppmmmmmmmmqqqqqqqqjjkkllllnnooppppmmmmmmmmqqqqqqqqjjkkllllnnooppppmmmmmmmmqqqqqqqq
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!rrssttttvvwwxxxxuuuuuuuuyyyyyyyyrrssttttvvwwxxxxuuuuuuuuyyyyyyyyrrssttttvvwwxxxxuuuuuuuuyyyyyyyyrrssttttvvwwxxxxuuuuuuuuyyyyyyyyrrssttttvvwwxxxxuuuuuuuuyyyyyyyyrrssttttvvwwxxxxuuuuuuuuyyyyyyyyrrssttttvvwwxxxxuuuuuuuuyyyyyyyyrrssttttvvwwxxxxuuuuuuuuyyyyyyyy
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!zz{{||||~~
}}}}}}}}
zz{{||||~~
}}}}}}}}
zz{{||||~~
}}}}}}}}
zz{{||||~~
}}}}}}}}
zz{{||||~~
}}}}}}}}
zz{{||||~~
}}}}}}}}
zz{{||||~~
}}}}}}}}
zz{{||||~~
}}}}}}}}
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!zz{{||||~~
}}}}}}}}
zz{{||||~~
}}}}}}}}
zz{{||||~~
}}}}}}}}
zz{{||||~~
}}}}}}}}
zz{{||||~~
}}}}}}}}
zz{{||||~~
}}}}}}}}
zz{{||||~~
}}}}}}}}
zz{{||||~~
}}}}}}}}
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
>?vwNO
FG`a+
89jk*+
./%
TY
:;rsJK45fg&'
\]
UV
<=tuLM
DE)
z{RS
67hi()a
no23
BCpqHI@
xyPQ
@Ade$%
,-#
lm01
bc!"
^_5
|}3
Z[
WX 
 m
N4llvm21X86AsmInstrumentationE
N4llvm12_GLOBAL__N_121X86AddressSanitizer32E
N4llvm12_GLOBAL__N_119X86AddressSanitizerE
N4llvm10X86OperandE
N4llvm12_GLOBAL__N_121X86AddressSanitizer64E
N12_GLOBAL__N_112X86AsmParserE
bbHH
~MM
~MM
~MM
bMMM
bkMM
bMMM
bMMM
bMMM
bkMM
bMMM
bMMM
aHHH
aJJJ
aiHH
ajJJ
aHHH
aJJJ
aiHH
ajJJ
HHHH
HiHH
JJJJ
JjJJ
HHHH
HiHH
JJJJ
JjJJ
bHHH
bJJJ
bMMO
biHH
bjJJ
bkMO
bHHH
bJJJ
bMMO
biHH
bjJJ
bkMO
bHHH
bIIO
b~HH
b~IO
bHHH
bIIO
b|HH
b|IO
~MM
~MM
~MM
aHHH
aiHH
aHHH
aJJJ
aiHH
ajJJ
~MM
~MM
HHHH
HiHH
JJJJ
JjJJ
iHHH
jJJJ
HHHH
HiHH
JJJJ
JjJJ
iHHH
jJJJ
HHHH
H~HH
~HHH
HHHH
H|HH
|HHH
~MM
~MM
HHHH
HiHH
JJJJ
JjJJ
iHHH
jJJJ
HHHH
HiHH
JJJJ
JjJJ
iHHH
jJJJ
~MM
~MM
~MM
~MM
HHHH
HiHH
JJJJ
JjJJ
iHHH
jJJJ
HHHH
HiHH
JJJJ
JjJJ
iHHH
jJJJ
HHHH
HiHH
JJJJ
JjJJ
iHHH
jJJJ
HHHH
HiHH
JJJJ
JjJJ
iHHH
jJJJ
HHHH
H~HH
~HHH
HHHH
H|HH
|HHH
~MM
~MM
HHHH
HiHH
JJJJ
JjJJ
iHHH
jJJJ
HHHH
HiHH
JJJJ
JjJJ
iHHH
jJJJ
HHHH
H~HH
~HHH
HHHH
H|HH
|HHH
~MM
~MM
HHHH
HiHH
JJJJ
JjJJ
iHHH
jJJJ
HHHH
HiHH
JJJJ
JjJJ
iHHH
jJJJ
HHHH
H~HH
~HHH
HHHH
H|HH
|HHH
bHJJ
biJJ
bIMM
biMM
bKMM
bjMM
bHJJ
biJJ
bIMM
biMM
bKMM
bjMM
aHHH
aIII
a|HH
a|II
~MM
~MM
~MM
~MM
~MM
~MM
aHHH
aJJJ
aiHH
ajJJ
~MM
~MM
~MM
~MM
~MM
~MM
bHHH
bJJJ
biHH
bjJJ
~MM
~MM
~MM
~MM
~MM
~MM
aHHH
aJJJ
aiHH
ajJJ
HHHH
HiHH
JJJJ
JjJJ
aHHH
aJJJ
aiHH
ajJJ
bHHH
biHH
HHHH
HiHH
JJJJ
JjJJ
iHHH
jJJJ
bMMO
bkMO
bMMO
bkMO
bMMO
bkMO
bMMO
bkMO
bMMO
bkMO
bMMO
bkMO
bMMO
bkMO
bMMO
bkMO
bHHH
biHH
bHHH
biHH
bHHH
biHH
bHHH
biHH
bHHH
biHH
bHHH
biHH
bHHH
biHH
bHHH
biHH
bJJJ
bjJJ
bJJJ
bjJJ
bHHHH
bHiHH
bJJJJ
bJjJJ
biHHH
bjJJJ
bHHHH
bHiHH
bJJJJ
bJjJJ
biHHH
bjJJJ
_hHH
_mHH
_*HH
_|HH
_DHH
_~HH
_hHH
_zHH
HHHH
HiHH
HHHH
HiHH
HHHH
HiHH
HHHH
HiHH
HHHH
HiHH
HHHH
HiHH
HHHH
HiHH
HHHH
HiHH
HHHH
HiHH
HHHH
HiHH
HHHH
HiHH
HHHH
HiHH
~MM
~MM
~MM
~MM
~MM
~MM
~MM
~MM
~MM
~MM
~MM
~MM
~MM
~MM
~MM
~MM
~MM
~MM
~MM
~MM
~MM
HHHH
HiHH
iHHH
~MM
~MM
~MM
~MM
~MM
~MM
_HHH
_~HH
_HHH
_|HH
bHHH
bJJJ
bMMM
biHH
bjJJ
bkMM
bHHH
bJJJ
bMMM
biHH
bjJJ
bkMM
~MM
~MM
~MM
bVHH
bVH|
HHbb
MM~
MMMb
MMkb
MMMb
MMkb
HHHa
HHia
JJJa
JJja
HHHa
HHia
JJJa
JJja
HHHH
HHiH
JJJJ
JJjJ
HHHH
HHiH
JJJJ
JJjJ
bVHHH
bVHH|
bVOII
bVOI|
OMkb
OMkb
HHHb
HHib
JJJb
JJjb
OMMb
OMkb
HHHb
HHib
JJJb
JJjb
OMMb
OMkb
HHHb
HH~b
OIIb
OI~b
HHHb
HH|b
OIIb
OI|b
MM~
HHHa
HHia
HHHa
HHia
JJJa
JJja
MM~
MM~
HHHH
HHHi
HHiH
JJJJ
JJJj
JJjJ
HHHH
HHHi
HHiH
JJJJ
JJJj
JJjJ
HHHH
HHH~
HH~H
HHHH
HHH|
HH|H
MM~
MM~
HHHH
HHHi
HHiH
JJJJ
JJJj
JJjJ
HHHH
HHHi
HHiH
JJJJ
JJJj
JJjJ
MM~
MM~
MM~
MM~
HHHH
HHHi
HHiH
JJJJ
JJJj
JJjJ
HHHH
HHHi
HHiH
JJJJ
JJJj
JJjJ
HHHH
HHHi
HHiH
JJJJ
JJJj
JJjJ
HHHH
HHHi
HHiH
JJJJ
JJJj
JJjJ
HHHH
HHH~
HH~H
HHHH
HHH|
HH|H
MM~
MM~
HHHH
HHHi
HHiH
JJJJ
JJJj
JJjJ
HHHH
HHHi
HHiH
JJJJ
JJJj
JJjJ
HHHH
HHH~
HH~H
HHHH
HHH|
HH|H
MM~
MM~
HHHH
HHHi
HHiH
JJJJ
JJJj
JJjJ
HHHH
HHHi
HHiH
JJJJ
JJJj
JJjJ
HHHH
HHH~
HH~H
HHHH
HHH|
HH|H
JJHb
JJib
MMIb
MMib
MMKb
MMjb
JJHb
JJib
MMIb
MMib
MMKb
MMjb
HHHa
HH|a
IIIa
II|a
MM~
MM~
HHHa
HHia
JJJa
JJja
MM~
MM~
HHHb
HHib
JJJb
JJjb
MM~
MM~
HHHa
HHia
JJJa
JJja
HHHH
HHiH
JJJJ
JJjJ
HHHa
HHia
JJJa
JJja
HHHb
HHib
HHHH
HHHi
HHiH
JJJJ
JJJj
JJjJ
OMMb
OMkb
OMMb
OMkb
OMMb
OMkb
OMMb
OMkb
HHHb
HHib
HHHb
HHib
HHHb
HHib
HHHb
HHib
HHHb
HHib
HHHb
HHib
HHHb
HHib
HHHb
HHib
JJJb
JJjb
JJJb
JJjb
HHHHb
HHHib
HHiHb
JJJJb
JJJjb
JJjJb
HHHHb
HHHib
HHiHb
JJJJb
JJJjb
JJjJb
HHh_
HHm_
HH*_
HH|_
HHD_
HH~_
HHh_
HHz_
HHHH
HHiH
HHHH
HHiH
HHHH
HHiH
HHHH
HHiH
HHHH
HHiH
HHHH
HHiH
HHHH
HHiH
HHHH
HHiH
HHHH
HHiH
HHHH
HHiH
HHHH
HHiH
HHHH
HHiH
MM~
MM~
MM~
MM~
MM~
MM~
MM~
HHHH
HHHi
HHiH
MM~
MM~
HHH_
HH~_
HHH_
HH|_
HHHb
HHib
JJJb
JJjb
MMMb
MMkb
HHHb
HHib
JJJb
JJjb
MMMb
MMkb
MM~
N4llvm13X86AsmPrinterE
N12_GLOBAL__N_119X86AtomicExpandPassE
N12_GLOBAL__N_17EmitterIN4llvm14JITCodeEmitterEEE
N12_GLOBAL__N_111X86FastISelE
 !"#$%&'()*+,-./N12_GLOBAL__N_13FPSE
N4llvm16X86FrameLoweringE
N12_GLOBAL__N_115X86DAGToDAGISelE
I" 
I"@
I" 
I"@
"" 
""@
"" 
""@
27`
27\
27T
27U
27
27
827i
827j
827k
827l
27v
27t
27r
27p
27j
27h
27f
27d
27`
27\
27U
27^
27W
27z
27x
27n
27l
27b
27Z
827
127x
G27M
27|
27~
N4llvm17X86TargetLoweringE
gf
kj
sr
wv
'&
+*
KJ
ON
/.
54
98
;:
?>
GF
YT
a`
N4llvm15X86GenInstrInfoE
N4llvm12X86InstrInfoE
N12_GLOBAL__N_14CGBRE
N12_GLOBAL__N_112LDTLSCleanupE
N4llvm2cl15OptionValueBaseIbLb0EEE
N4llvm10X86JITInfoE
N4llvm22X86MachineFunctionInfoE
N12_GLOBAL__N_112PadShortFuncE
.A++
.A..
/A//
0C00
1C11
5A22
4D33
4D44
5A55
8A88
9F99
:C::
?D<<
=D==
>C>>
?D??
@F@@
AAAA
BFBB
CCCC
DDDD
EEEE
FFFF
GGGG
N4llvm18X86GenRegisterInfoE
N4llvm15X86RegisterInfoE
N4llvm19X86SelectionDAGInfoE
N4llvm19X86GenSubtargetInfoE
N4llvm12X86SubtargetE
N4llvm16X86TargetMachineE
N12_GLOBAL__N_113X86PassConfigE
N4llvm27X86_64MachoTargetObjectFileE
N4llvm24X86LinuxTargetObjectFileE
N4llvm26X86WindowsTargetObjectFileE
N12_GLOBAL__N_16X86TTIE
N12_GLOBAL__N_118VZeroUpperInserterE
N12_GLOBAL__N_112FixupLEAPassE
@N12_GLOBAL__N_115WorklistRemoverE
N4llvm8FastISelE
N12_GLOBAL__N_118NodeUpdateListenerE
N4llvm21ResourcePriorityQueueE
N12_GLOBAL__N_115ScheduleDAGFastE
N12_GLOBAL__N_120ScheduleDAGLinearizeE
N12_GLOBAL__N_117ScheduleDAGRRListE
N12_GLOBAL__N_125RegReductionPriorityQueueINS_13bu_ls_rr_sortEEE
N12_GLOBAL__N_118RegReductionPQBaseE
N12_GLOBAL__N_125RegReductionPriorityQueueINS_14src_ls_rr_sortEEE
N12_GLOBAL__N_125RegReductionPriorityQueueINS_17hybrid_ls_rr_sortEEE
N12_GLOBAL__N_125RegReductionPriorityQueueINS_14ilp_ls_rr_sortEEE
N4llvm18ScheduleDAGSDNodesE
N4llvm12SelectionDAG17DAGUpdateListenerE
N12_GLOBAL__N_118RAUWUpdateListenerE
N4llvm10FoldingSetINS_6SDNodeEEE
N4llvm10FoldingSetINS_12SDVTListNodeEEE
 AN4llvm2cl3optIjLb1ENS0_6parserIjEEEE
N4llvm2cl11opt_storageIjLb1ELb0EEE
N4llvm2cl11OptionValueIjEE
N4llvm16SelectionDAGISelE
N4llvm2cl3optIPFPNS_18ScheduleDAGSDNodesEPNS_16SelectionDAGISelENS_10CodeGenOpt5LevelEELb0ENS_18RegisterPassParserINS_17RegisterSchedulerEEEEE
N4llvm2cl11opt_storageIPFPNS_18ScheduleDAGSDNodesEPNS_16SelectionDAGISelENS_10CodeGenOpt5LevelEELb0ELb0EEE
N4llvm18RegisterPassParserINS_17RegisterSchedulerEEE
N4llvm2cl6parserIPFPNS_18ScheduleDAGSDNodesEPNS_16SelectionDAGISelENS_10CodeGenOpt5LevelEEEE
N4llvm2cl11OptionValueIPFPNS_18ScheduleDAGSDNodesEPNS_16SelectionDAGISelENS_10CodeGenOpt5LevelEEEE
N4llvm2cl15OptionValueBaseIPFPNS_18ScheduleDAGSDNodesEPNS_16SelectionDAGISelENS_10CodeGenOpt5LevelEELb0EEE
N4llvm2cl15OptionValueCopyIPFPNS_18ScheduleDAGSDNodesEPNS_16SelectionDAGISelENS_10CodeGenOpt5LevelEEEE
N12_GLOBAL__N_111ISelUpdaterE
N12_GLOBAL__N_117MatchStateUpdaterE
N12_GLOBAL__N_115ScheduleDAGVLIWE
N4llvm14TargetLoweringE
N4llvm22TargetSelectionDAGInfoE
N4llvm12ARMExceptionE
N4llvm10AsmPrinterE
N4llvm17AsmPrinterHandlerE
N4llvm8DIEValueE
N4llvm10DIEIntegerE
N4llvm7DIEExprE
N4llvm8DIELabelE
N4llvm8DIEDeltaE
N4llvm9DIEStringE
N4llvm8DIEEntryE
N4llvm16DIETypeSignatureE
N4llvm6DIELocE
N4llvm3DIEE
N4llvm8DIEBlockE
N4llvm10DIELocListE
N4llvm19HashingByteStreamerE
N4llvm17DwarfCFIExceptionE
N4llvm10DwarfDebugE
N4llvm2cl3optIN12_GLOBAL__N_112DefaultOnOffELb0ENS0_6parserIS3_EEEE
N4llvm2cl11opt_storageIN12_GLOBAL__N_112DefaultOnOffELb0ELb0EEE
N4llvm2cl6parserIN12_GLOBAL__N_112DefaultOnOffEEE
N4llvm2cl11OptionValueIN12_GLOBAL__N_112DefaultOnOffEEE
N4llvm2cl15OptionValueBaseIN12_GLOBAL__N_112DefaultOnOffELb0EEE
N4llvm2cl15OptionValueCopyIN12_GLOBAL__N_112DefaultOnOffEEE
N4llvm14APByteStreamerE
N4llvm12ByteStreamerE
N4llvm10FoldingSetINS_9DIEAbbrevEEE
N4llvm9DwarfUnitE
N4llvm16DwarfCompileUnitE
N4llvm13DwarfTypeUnitE
N4llvm10EHStreamerE
N12_GLOBAL__N_115ErlangGCPrinterE
N12_GLOBAL__N_122OcamlGCMetadataPrinterE
N4llvm14Win64ExceptionE
////////
////////////////N4llvm21WinCodeViewLineTablesE
N4llvm24AggressiveAntiDepBreakerE
.catch.all.valuellvm.eh.catch.al
N12_GLOBAL__N_122AtomicExpandLoadLinkedE
N12_GLOBAL__N_18BasicTTIE
N4llvm2cl15OptionValueCopyIjEE
N12_GLOBAL__N_116BranchFolderPassE
N4llvm2cl3optINS0_13boolOrDefaultELb0ENS0_6parserIS2_EEEE
N4llvm2cl11opt_storageINS0_13boolOrDefaultELb0ELb0EEE
?N12_GLOBAL__N_114CodeGenPrepareE
N12_GLOBAL__N_124TypePromotionTransaction13OperandSetterE
N12_GLOBAL__N_124TypePromotionTransaction19TypePromotionActionE
N12_GLOBAL__N_124TypePromotionTransaction18InstructionRemoverE
N12_GLOBAL__N_124TypePromotionTransaction13OperandsHiderE
N12_GLOBAL__N_124TypePromotionTransaction12UsesReplacerE
N12_GLOBAL__N_124TypePromotionTransaction12TruncBuilderE
N12_GLOBAL__N_124TypePromotionTransaction11TypeMutatorE
N12_GLOBAL__N_124TypePromotionTransaction11SExtBuilderE
N12_GLOBAL__N_124TypePromotionTransaction21InstructionMoveBeforeE
N12_GLOBAL__N_131CodeGenPrepareFortifiedLibCallsE
N4llvm22CriticalAntiDepBreakerE
N4llvm20DefaultVLIWSchedulerE
N4llvm18VLIWPacketizerListE
N12_GLOBAL__N_126DeadMachineInstructionElimE
N12_GLOBAL__N_114DwarfEHPrepareE
N12_GLOBAL__N_116EarlyIfConverterE
N4llvm11EdgeBundlesE
N12_GLOBAL__N_18ErlangGCE
N12_GLOBAL__N_110ExeDepsFixE
N12_GLOBAL__N_117ExpandISelPseudosE
N12_GLOBAL__N_112ExpandPostRAE
N4llvm12GCModuleInfoE
N12_GLOBAL__N_17PrinterE
N4llvm17GCMetadataPrinterE
N4llvm10GCStrategyE
N12_GLOBAL__N_115LowerIntrinsicsE
N12_GLOBAL__N_121GCMachineCodeAnalysisE
N12_GLOBAL__N_111GlobalMergeE
N12_GLOBAL__N_111IfConverterE
N12_GLOBAL__N_113InlineSpillerE
UUUUUUUU33333333
N4llvm14JITCodeEmitterE
.jump.instr.table.text.
N4llvm15JumpInstrTablesE
N4llvm17LLVMTargetMachineE
N4llvm20LatencyPriorityQueueE
N4llvm18LiveDebugVariablesE
Y@N4llvm13LiveIntervalsE
N4llvm13LiveRangeEdit8DelegateE
N4llvm13LiveRangeEditE
N4llvm13LiveRegMatrixE
N4llvm10LiveStacksE
N4llvm13LiveVariablesE
N12_GLOBAL__N_118LocalStackSlotPassE
N4llvm25MachineBlockFrequencyInfoE
N4llvm22BlockFrequencyInfoImplINS_17MachineBasicBlockEEE
N12_GLOBAL__N_121MachineBlockPlacementE
N12_GLOBAL__N_126MachineBlockPlacementStatsE
N4llvm28MachineBranchProbabilityInfoE
N12_GLOBAL__N_110MachineCSEE
N4llvm18MachineCodeEmitterE
N12_GLOBAL__N_115MachineCombinerE
N12_GLOBAL__N_122MachineCopyPropagationE
N4llvm17DominatorTreeBaseINS_17MachineBasicBlockEEE
N4llvm13DominatorBaseINS_17MachineBasicBlockEEE
N4llvm20MachineDominatorTreeE
N4llvm24MachineDominanceFrontierE
N4llvm24MachineConstantPoolValueE
N4llvm19MachineFunctionInfoE
N4llvm23MachineFunctionAnalysisE
N4llvm19MachineFunctionPassE
N12_GLOBAL__N_126MachineFunctionPrinterPassE
N12_GLOBAL__N_120UnpackMachineBundlesE
N12_GLOBAL__N_122FinalizeMachineBundlesE
N12_GLOBAL__N_111MachineLICME
N4llvm15MachineLoopInfoE
N4llvm21MachineModuleInfoImplE
N4llvm26MMIAddrLabelMapCallbackPtrE
N4llvm17MachineModuleInfoE
N4llvm22MachineModuleInfoMachOE
N4llvm20MachineModuleInfoELFE
N4llvm27MachinePassRegistryListenerE
N4llvm24MachinePostDominatorTreeE
N4llvm19MachineRegisterInfo8DelegateE
N4llvm14RegionInfoBaseINS_12RegionTraitsINS_15MachineFunctionEEEEE
N4llvm17MachineRegionInfoE
N4llvm21MachineRegionInfoPassE
N4llvm20MachineSchedStrategyE
N4llvm19ScheduleDAGMutationE
N4llvm13ScheduleDAGMIE
N4llvm17ScheduleDAGMILiveE
N4llvm16GenericSchedulerE
N4llvm20GenericSchedulerBaseE
N4llvm20PostGenericSchedulerE
N4llvm19MachineSchedContextE
N12_GLOBAL__N_116MachineSchedulerE
N12_GLOBAL__N_120MachineSchedulerBaseE
N12_GLOBAL__N_120PostMachineSchedulerE
N4llvm2cl3optIPFPNS_17ScheduleDAGInstrsEPNS_19MachineSchedContextEELb0ENS_18RegisterPassParserINS_20MachineSchedRegistryEEEEE
N4llvm2cl11opt_storageIPFPNS_17ScheduleDAGInstrsEPNS_19MachineSchedContextEELb0ELb0EEE
N4llvm18RegisterPassParserINS_20MachineSchedRegistryEEE
N4llvm2cl6parserIPFPNS_17ScheduleDAGInstrsEPNS_19MachineSchedContextEEEE
N4llvm2cl11OptionValueIPFPNS_17ScheduleDAGInstrsEPNS_19MachineSchedContextEEEE
N4llvm2cl15OptionValueBaseIPFPNS_17ScheduleDAGInstrsEPNS_19MachineSchedContextEELb0EEE
N4llvm2cl15OptionValueCopyIPFPNS_17ScheduleDAGInstrsEPNS_19MachineSchedContextEEEE
N12_GLOBAL__N_113CopyConstrainE
N12_GLOBAL__N_119LoadClusterMutationE
N12_GLOBAL__N_111MacroFusionE
N12_GLOBAL__N_112ILPSchedulerE
N12_GLOBAL__N_114MachineSinkingE
N4llvm19MachineTraceMetricsE
N4llvm19MachineTraceMetrics8EnsembleE
N12_GLOBAL__N_121MinInstrCountEnsembleE
N12_GLOBAL__N_119MachineVerifierPassE
N12_GLOBAL__N_17OcamlGCE
N12_GLOBAL__N_112OptimizePHIsE
N12_GLOBAL__N_114PHIEliminationE
option-unspecified
N4llvm16TargetPassConfigE
N4llvm2cl3optIPFPNS_12FunctionPassEvELb0ENS_18RegisterPassParserINS_16RegisterRegAllocEEEEE
N4llvm2cl11opt_storageIPFPNS_12FunctionPassEvELb0ELb0EEE
N4llvm18RegisterPassParserINS_16RegisterRegAllocEEE
N4llvm2cl6parserIPFPNS_12FunctionPassEvEEE
N4llvm2cl11OptionValueIPFPNS_12FunctionPassEvEEE
N4llvm2cl15OptionValueBaseIPFPNS_12FunctionPassEvELb0EEE
N4llvm2cl15OptionValueCopyIPFPNS_12FunctionPassEvEEE
N12_GLOBAL__N_117PeepholeOptimizerE
N12_GLOBAL__N_112CopyRewriterE
N12_GLOBAL__N_120InsertSubregRewriterE
N12_GLOBAL__N_121ExtractSubregRewriterE
N12_GLOBAL__N_119RegSequenceRewriterE
N4llvm14AntiDepBreakerE
N12_GLOBAL__N_115PostRASchedulerE
N12_GLOBAL__N_120SchedulePostRATDListE
N12_GLOBAL__N_119ProcessImplicitDefsE
N4llvm3PEIE
N4llvm27FixedStackPseudoSourceValueE
N4llvm17PseudoSourceValueE
Register Allocation
N4llvm12RegAllocBaseE
N4llvm2cl3optIbLb1ENS0_6parserIbEEEE
N4llvm2cl15OptionValueCopyIbEE
N12_GLOBAL__N_17RABasicE
N12_GLOBAL__N_16RAFastE
z?N4llvm2cl3optINS_11SplitEditor19ComplementSpillModeELb0ENS0_6parserIS3_EEEE
N4llvm2cl11opt_storageINS_11SplitEditor19ComplementSpillModeELb0ELb0EEE
N4llvm2cl6parserINS_11SplitEditor19ComplementSpillModeEEE
N4llvm2cl11OptionValueINS_11SplitEditor19ComplementSpillModeEEE
N4llvm2cl15OptionValueBaseINS_11SplitEditor19ComplementSpillModeELb0EEE
N4llvm2cl15OptionValueCopyINS_11SplitEditor19ComplementSpillModeEEE
N12_GLOBAL__N_18RAGreedyE
N4llvm11PBQPBuilderE
N4llvm25PBQPBuilderWithCoalescingE
N12_GLOBAL__N_112RegAllocPBQPE
N12_GLOBAL__N_117RegisterCoalescerE
N4llvm23SchedulingPriorityQueueE
N4llvm24ScheduleHazardRecognizerE
N4llvm11ScheduleDAGE
N4llvm17ScheduleDAGInstrsE
N4llvm14format_object1IdEE
N4llvm26ScoreboardHazardRecognizerE
N12_GLOBAL__N_113ShadowStackGCE
N12_GLOBAL__N_113SjLjEHPrepareE
N4llvm11SlotIndexesE
N4llvm14SpillPlacementE
N4llvm7SpillerE
N4llvm2cl3optIN12_GLOBAL__N_111SpillerNameELb0ENS0_6parserIS3_EEEE
N4llvm2cl11opt_storageIN12_GLOBAL__N_111SpillerNameELb0ELb0EEE
N4llvm2cl6parserIN12_GLOBAL__N_111SpillerNameEEE
N4llvm2cl11OptionValueIN12_GLOBAL__N_111SpillerNameEEE
N4llvm2cl15OptionValueBaseIN12_GLOBAL__N_111SpillerNameELb0EEE
N4llvm2cl15OptionValueCopyIN12_GLOBAL__N_111SpillerNameEEE
N12_GLOBAL__N_114TrivialSpillerE
N12_GLOBAL__N_111SpillerBaseE
N12_GLOBAL__N_113StackColoringE
N4llvm14StackProtectorE
N4llvm18ValueMapCallbackVHIPKNS_10AllocaInstENS_14StackProtector13SSPLayoutKindENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEEE
N12_GLOBAL__N_117StackSlotColoringE
N4llvm16StackMapLivenessE
N12_GLOBAL__N_117TailDuplicatePassE
N4llvm19TargetFrameLoweringE
N4llvm15TargetInstrInfoE
N4llvm11MCInstrInfoE
N4llvm18TargetLoweringBaseE
.gnu.linkonce.b..llvm.linkonce.b.
.gnu.linkonce.sb.llvm.linkonce.sb.
.gnu.linkonce.td.llvm.linkonce.td.
.gnu.linkonce.tbage Info VersionObjective-C Imagrbage CollectionObjective-C GarbN4llvm27TargetLoweringObjectFileELFE
N4llvm29TargetLoweringObjectFileMachOE
N4llvm28TargetLoweringObjectFileCOFFE
N4llvm18TargetRegisterInfoE
N4llvm14MCRegisterInfoE
N12_GLOBAL__N_125TwoAddressInstructionPassE
N12_GLOBAL__N_120UnreachableBlockElimE
N12_GLOBAL__N_127UnreachableMachineBlockElimE
N4llvm10VirtRegMapE
N12_GLOBAL__N_115VirtRegRewriterE
N12_GLOBAL__N_14ADCEE
N12_GLOBAL__N_116ConstantHoistingE
N12_GLOBAL__N_119ConstantPropagationE
N12_GLOBAL__N_126CorrelatedValuePropagationE
N12_GLOBAL__N_119DeadInstEliminationE
N12_GLOBAL__N_13DCEE
N12_GLOBAL__N_13DSEE
N12_GLOBAL__N_18EarlyCSEE
N12_GLOBAL__N_114FlattenCFGPassE
N12_GLOBAL__N_13GVNE
N12_GLOBAL__N_114IndVarSimplifyE
N12_GLOBAL__N_121IndVarSimplifyVisitorE
N12_GLOBAL__N_113JumpThreadingE
N12_GLOBAL__N_14LICME
N12_GLOBAL__N_112LoopPromoterE
N12_GLOBAL__N_111LoadCombineE
N12_GLOBAL__N_112LoopDeletionE
N12_GLOBAL__N_118LoopIdiomRecognizeE
N12_GLOBAL__N_116LoopInstSimplifyE
N12_GLOBAL__N_110LoopRerollE
N12_GLOBAL__N_110LoopRotateE
N12_GLOBAL__N_118LoopStrengthReduceE
llvm.loop.unrollN12_GLOBAL__N_110LoopUnrollE
N12_GLOBAL__N_112LoopUnswitchE
N12_GLOBAL__N_111LowerAtomicE
N12_GLOBAL__N_19MemCpyOptE
N12_GLOBAL__N_121MergedLoadStoreMotionE
N12_GLOBAL__N_123PartiallyInlineLibCallsE
N12_GLOBAL__N_111ReassociateE
N12_GLOBAL__N_18RegToMemE
N12_GLOBAL__N_14SCCPE
N12_GLOBAL__N_16IPSCCPE
N12_GLOBAL__N_14SROAE
N12_GLOBAL__N_114AllocaPromoterE
N12_GLOBAL__N_119SampleProfileLoaderE
N12_GLOBAL__N_17SROA_DTE
N12_GLOBAL__N_14SROAE
N12_GLOBAL__N_114AllocaPromoterE
N12_GLOBAL__N_110SROA_SSAUpE
N12_GLOBAL__N_110ScalarizerE
N4llvm11InstVisitorIN12_GLOBAL__N_110ScalarizerEbEE
N12_GLOBAL__N_126SeparateConstOffsetFromGEPE
N12_GLOBAL__N_115CFGSimplifyPassE
N12_GLOBAL__N_17SinkingE
N12_GLOBAL__N_114StructurizeCFGE
N12_GLOBAL__N_112TailCallElimE
y_v0
__gxx_personalitt_eh_personality__gnat_eh_personc_personality_v0__objc_personaliN4llvm12InstCombinerE
N4llvm11InstVisitorINS_12InstCombinerEPNS_11InstructionEEE
N12_GLOBAL__N_129InstCombinerLibCallSimplifierE
N12_GLOBAL__N_117AddDiscriminatorsE
N12_GLOBAL__N_118BreakCriticalEdgesE
N4llvm25SimplifyFortifiedLibCallsE
N12_GLOBAL__N_19InstNamerE
N12_GLOBAL__N_15LCSSAE
N12_GLOBAL__N_112LoopSimplifyE
N12_GLOBAL__N_120LowerExpectIntrinsicE
N12_GLOBAL__N_111LowerInvokeE
N12_GLOBAL__N_111LowerSwitchE
N12_GLOBAL__N_111PromotePassE
N12_GLOBAL__N_111MetaRenamerE
N4llvm20LoadAndStorePromoterE
N4llvm9IVVisitorE
N12_GLOBAL__N_114InstSimplifierE
?N4llvm17LibCallSimplifierE
N12_GLOBAL__N_112MemCpyChkOptE
N12_GLOBAL__N_132InstFortifiedLibCallOptimizationE
N12_GLOBAL__N_128FortifiedLibCallOptimizationE
N12_GLOBAL__N_119LibCallOptimizationE
N12_GLOBAL__N_113MemMoveChkOptE
N12_GLOBAL__N_112MemSetChkOptE
N12_GLOBAL__N_112StrCpyChkOptE
N12_GLOBAL__N_112StpCpyChkOptE
N12_GLOBAL__N_113StrNCpyChkOptE
N12_GLOBAL__N_19StrCatOptE
N12_GLOBAL__N_110StrNCatOptE
N12_GLOBAL__N_19StrChrOptE
N12_GLOBAL__N_110StrRChrOptE
N12_GLOBAL__N_19StrCmpOptE
N12_GLOBAL__N_110StrNCmpOptE
N12_GLOBAL__N_19StrCpyOptE
N12_GLOBAL__N_19StpCpyOptE
N12_GLOBAL__N_110StrNCpyOptE
N12_GLOBAL__N_19StrLenOptE
N12_GLOBAL__N_110StrPBrkOptE
N12_GLOBAL__N_18StrToOptE
N12_GLOBAL__N_19StrSpnOptE
N12_GLOBAL__N_110StrCSpnOptE
N12_GLOBAL__N_19StrStrOptE
N12_GLOBAL__N_19MemCmpOptE
N12_GLOBAL__N_19MemCpyOptE
N12_GLOBAL__N_110MemMoveOptE
N12_GLOBAL__N_19MemSetOptE
N12_GLOBAL__N_116UnaryDoubleFPOptE
N12_GLOBAL__N_117BinaryDoubleFPOptE
N12_GLOBAL__N_111SinCosPiOptE
N12_GLOBAL__N_16FFSOptE
N12_GLOBAL__N_16AbsOptE
N12_GLOBAL__N_110IsDigitOptE
N12_GLOBAL__N_110IsAsciiOptE
N12_GLOBAL__N_110ToAsciiOptE
N12_GLOBAL__N_117ErrorReportingOptE
N12_GLOBAL__N_19PrintFOptE
N12_GLOBAL__N_110SPrintFOptE
N12_GLOBAL__N_110FPrintFOptE
N12_GLOBAL__N_19FWriteOptE
N12_GLOBAL__N_18FPutsOptE
N12_GLOBAL__N_17PutsOptE
N12_GLOBAL__N_16CosOptE
N12_GLOBAL__N_127UnsafeFPLibCallOptimizationE
N12_GLOBAL__N_16PowOptE
N12_GLOBAL__N_17Exp2OptE
N4llvm22UnifyFunctionExitNodesE
N4llvm20ValueMapTypeRemapperE
N4llvm17ValueMaterializerE
N4llvm20CallGraphWrapperPassE
N4llvm16CallGraphSCCPassE
N12_GLOBAL__N_113CGPassManagerE
N12_GLOBAL__N_118PrintCallGraphPassE
N12_GLOBAL__N_115CallGraphViewerE
N4llvm26DOTGraphTraitsModuleViewerINS_20CallGraphWrapperPassELb1EPNS_9CallGraphENS_34AnalysisCallGraphWrapperPassTraitsEEE
N12_GLOBAL__N_116CallGraphPrinterE
N4llvm27DOTGraphTraitsModulePrinterINS_20CallGraphWrapperPassELb1EPNS_9CallGraphENS_34AnalysisCallGraphWrapperPassTraitsEEE
N4llvm13FindUsedTypesE
N12_GLOBAL__N_113GlobalsModRefE
N4llvm18InlineCostAnalysisE
N4llvm13AliasAnalysisE
N12_GLOBAL__N_120AliasAnalysisCounterE
N12_GLOBAL__N_16AAEvalE
N12_GLOBAL__N_113AliasDebuggerE
N4llvm15AliasSetTracker13ASTCallbackVHE
N12_GLOBAL__N_115AliasSetPrinterE
memset_pattern16N12_GLOBAL__N_118BasicAliasAnalysisE
N4llvm18BlockFrequencyInfoE
N4llvm22BlockFrequencyInfoImplINS_10BasicBlockEEE
N4llvm26BlockFrequencyInfoImplBaseE
N4llvm21BranchProbabilityInfoE
N12_GLOBAL__N_19CFGViewerE
N12_GLOBAL__N_113CFGOnlyViewerE
N12_GLOBAL__N_110CFGPrinterE
N12_GLOBAL__N_114CFGOnlyPrinterE
N4llvm14CaptureTrackerE
N12_GLOBAL__N_120SimpleCaptureTrackerE
N12_GLOBAL__N_114CapturesBeforeE
Cost Model Analysis
N12_GLOBAL__N_117CostModelAnalysisE
Delinearization
N12_GLOBAL__N_115DelinearizationE
N4llvm10DependenceE
N4llvm14FullDependenceE
N4llvm18DependenceAnalysisE
N12_GLOBAL__N_110DomPrinterE
N4llvm21DOTGraphTraitsPrinterINS_24DominatorTreeWrapperPassELb0EPNS_13DominatorTreeEN12_GLOBAL__N_143DominatorTreeWrapperPassAnalysisGraphTraitsEEE
N12_GLOBAL__N_114DomOnlyPrinterE
N4llvm21DOTGraphTraitsPrinterINS_24DominatorTreeWrapperPassELb1EPNS_13DominatorTreeEN12_GLOBAL__N_143DominatorTreeWrapperPassAnalysisGraphTraitsEEE
N12_GLOBAL__N_19DomViewerE
N4llvm20DOTGraphTraitsViewerINS_24DominatorTreeWrapperPassELb0EPNS_13DominatorTreeEN12_GLOBAL__N_143DominatorTreeWrapperPassAnalysisGraphTraitsEEE
N12_GLOBAL__N_113DomOnlyViewerE
N4llvm20DOTGraphTraitsViewerINS_24DominatorTreeWrapperPassELb1EPNS_13DominatorTreeEN12_GLOBAL__N_143DominatorTreeWrapperPassAnalysisGraphTraitsEEE
N12_GLOBAL__N_114PostDomPrinterE
N4llvm21DOTGraphTraitsPrinterINS_17PostDominatorTreeELb0EPS1_NS_26DefaultAnalysisGraphTraitsIS1_S2_EEEE
N12_GLOBAL__N_118PostDomOnlyPrinterE
N4llvm21DOTGraphTraitsPrinterINS_17PostDominatorTreeELb1EPS1_NS_26DefaultAnalysisGraphTraitsIS1_S2_EEEE
N12_GLOBAL__N_113PostDomViewerE
N4llvm20DOTGraphTraitsViewerINS_17PostDominatorTreeELb0EPS1_NS_26DefaultAnalysisGraphTraitsIS1_S2_EEEE
N12_GLOBAL__N_117PostDomOnlyViewerE
N4llvm20DOTGraphTraitsViewerINS_17PostDominatorTreeELb1EPS1_NS_26DefaultAnalysisGraphTraitsIS1_S2_EEEE
N4llvm17DominanceFrontierE
N4llvm11IVStrideUseE
N4llvm10ilist_nodeINS_11IVStrideUseEEE
N4llvm15ilist_half_nodeINS_11IVStrideUseEEE
N4llvm7IVUsersE
N12_GLOBAL__N_19InstCountE
N4llvm11InstVisitorIN12_GLOBAL__N_19InstCountEvEE
N4llvm17IntervalPartitionE
N4llvm18JumpInstrTableInfoE
N4llvm13LazyValueInfoE
N12_GLOBAL__N_114LVIValueHandleE
N4llvm20LibCallAliasAnalysisE
N4llvm11LibCallInfoE
N12_GLOBAL__N_14LintE
N4llvm11InstVisitorIN12_GLOBAL__N_14LintEvEE
N4llvm8LoopInfoE
N4llvm8LoopPassE
N4llvm13LPPassManagerE
N12_GLOBAL__N_113PrintLoopPassE
N12_GLOBAL__N_113MemDepPrinterE
N4llvm24MemoryDependenceAnalysisE
N12_GLOBAL__N_122ModuleDebugInfoPrinterE
N12_GLOBAL__N_14NoAAE
N4llvm17PostDominatorTreeE
N4llvm14RegionInfoBaseINS_12RegionTraitsINS_8FunctionEEEEE
N4llvm10RegionInfoE
N4llvm14RegionInfoPassE
N4llvm2cl3optINS_10RegionBaseINS_12RegionTraitsINS_8FunctionEEEE10PrintStyleELb1ENS0_6parserIS7_EEEE
N4llvm2cl11opt_storageINS_10RegionBaseINS_12RegionTraitsINS_8FunctionEEEE10PrintStyleELb1ELb0EEE
N4llvm2cl6parserINS_10RegionBaseINS_12RegionTraitsINS_8FunctionEEEE10PrintStyleEEE
N4llvm2cl11OptionValueINS_10RegionBaseINS_12RegionTraitsINS_8FunctionEEEE10PrintStyleEEE
N4llvm2cl15OptionValueBaseINS_10RegionBaseINS_12RegionTraitsINS_8FunctionEEEE10PrintStyleELb0EEE
N4llvm2cl15OptionValueCopyINS_10RegionBaseINS_12RegionTraitsINS_8FunctionEEEE10PrintStyleEEE
N4llvm10RegionPassE
N4llvm13RGPassManagerE
N12_GLOBAL__N_115PrintRegionPassE
N12_GLOBAL__N_112RegionViewerE
N4llvm20DOTGraphTraitsViewerINS_14RegionInfoPassELb0EPS1_NS_26DefaultAnalysisGraphTraitsIS1_S2_EEEE
N12_GLOBAL__N_116RegionOnlyViewerE
N4llvm20DOTGraphTraitsViewerINS_14RegionInfoPassELb1EPS1_NS_26DefaultAnalysisGraphTraitsIS1_S2_EEEE
N12_GLOBAL__N_113RegionPrinterE
N4llvm21DOTGraphTraitsPrinterINS_14RegionInfoPassELb0EPS1_NS_26DefaultAnalysisGraphTraitsIS1_S2_EEEE
N12_GLOBAL__N_117RegionOnlyPrinterE
N4llvm21DOTGraphTraitsPrinterINS_14RegionInfoPassELb1EPS1_NS_26DefaultAnalysisGraphTraitsIS1_S2_EEEE
N4llvm11SCEVUnknownE
N4llvm4SCEVE
N4llvm14FoldingSetImpl4NodeE
N4llvm15ScalarEvolution14SCEVCallbackVHE
N4llvm15ScalarEvolutionE
N4llvm10FoldingSetINS_4SCEVEEE
N12_GLOBAL__N_128ScalarEvolutionAliasAnalysisE
N4llvm23AbstractLatticeFunctionE
N4llvm19TargetTransformInfoE
N12_GLOBAL__N_15NoTTIE
N12_GLOBAL__N_122TypeBasedAliasAnalysisE
N12_GLOBAL__N_115ScopedNoAliasAAE
"#*****)*N4llvm19TargetIntrinsicInfoE
N4llvm13TargetJITInfoE
N4llvm17TargetLibraryInfoE
N4llvm24TargetLoweringObjectFileE
N4llvm16MCObjectFileInfoE
N4llvm13TargetMachineE
N4llvm19TargetSubtargetInfoE
N4llvm15MCSubtargetInfoE
N12_GLOBAL__N_122DarwinX86_32AsmBackendE
N12_GLOBAL__N_119DarwinX86AsmBackendE
N12_GLOBAL__N_113X86AsmBackendE
N12_GLOBAL__N_120WindowsX86AsmBackendE
N12_GLOBAL__N_119ELFX86_32AsmBackendE
N12_GLOBAL__N_116ELFX86AsmBackendE
N12_GLOBAL__N_122DarwinX86_64AsmBackendE
N12_GLOBAL__N_120ELFX86_X32AsmBackendE
N12_GLOBAL__N_119ELFX86_64AsmBackendE
XMM10
YMM10
ZMM10
CR10
XMM20
YMM20
ZMM20
XMM30
YMM30
ZMM30
XMM0
YMM0
ZMM0
XMM11
YMM11
ZMM11
CR11
XMM21
YMM21
ZMM21
XMM31
YMM31
ZMM31
XMM1
YMM1
ZMM1
XMM12
YMM12
ZMM12
CR12
XMM22
YMM22
ZMM22
XMM2
YMM2
ZMM2
XMM13
YMM13
ZMM13
CR13
XMM23
YMM23
ZMM23
XMM3
YMM3
ZMM3
XMM14
YMM14
ZMM14
CR14
XMM24
YMM24
ZMM24
XMM4
YMM4
ZMM4
XMM15
YMM15
ZMM15
CR15
XMM25
YMM25
ZMM25
XMM5
YMM5
ZMM5
XMM16
YMM16
ZMM16
XMM26
YMM26
ZMM26
XMM6
YMM6
ZMM6
XMM17
YMM17
ZMM17
XMM27
YMM27
ZMM27
XMM7
YMM7
ZMM7
XMM18
YMM18
ZMM18
XMM28
YMM28
ZMM28
XMM8
YMM8
ZMM8
XMM19
YMM19
ZMM19
XMM29
YMM29
ZMM29
XMM9
YMM9
ZMM9
R10B
R11B
R12B
R13B
R14B
R15B
R10D
R11D
R12D
R13D
R14D
R15D
EFLAGS
R10W
R11W
R12W
R13W
R14W
R15W
FPSW
MORESTACK_RET_RESTORE_R10
LD_Fp080
LD_Fp180
CMOV_RFP80
SUB_FpI32m80
ADD_FpI32m80
MUL_FpI32m80
SUBR_FpI32m80
DIVR_FpI32m80
DIV_FpI32m80
ILD_Fp32m80
IST_Fp32m80
ISTT_Fp32m80
ILD_Fp64m80
IST_Fp64m80
ISTT_Fp64m80
SUB_FpI16m80
ADD_FpI16m80
MUL_FpI16m80
SUBR_FpI16m80
DIVR_FpI16m80
DIV_FpI16m80
ILD_Fp16m80
IST_Fp16m80
ISTT_Fp16m80
CMOVNB_Fp80
SUB_Fp80
CMOVB_Fp80
ADD_Fp80
CMOVNBE_Fp80
CMOVBE_Fp80
CMOVNE_Fp80
CMOVE_Fp80
MUL_Fp80
SIN_Fp80
CMOVNP_Fp80
CMOVP_Fp80
ABS_Fp80
CHS_Fp80
COS_Fp80
SQRT_Fp80
TST_Fp80
DIV_Fp80
UCOM_FpIr80
UCOM_Fpr80
LD_F0
AVX512_512_SET0
V_SET0
AVX_SET0
PREFETCHT0
SUB_FrST0
ADD_FrST0
MUL_FrST0
SUBR_FrST0
DIVR_FrST0
DIV_FrST0
SUB_FPrST0
ADD_FPrST0
MUL_FPrST0
SUBR_FPrST0
DIVR_FPrST0
DIV_FPrST0
PBLENDVBrm0
BLENDVPDrm0
BLENDVPSrm0
MOV32r0
PBLENDVBrr0
BLENDVPDrr0
BLENDVPSrr0
XSHA1
LD_F1
FPREM1
F2XM1
FYL2XP1
PREFETCHT1
JA_1
JB_1
JAE_1
JBE_1
JGE_1
JE_1
JLE_1
JNE_1
JG_1
JL_1
JO_1
JNO_1
JP_1
JMP_1
JNP_1
JS_1
JNS_1
RCL32m1
SHL32m1
ROL32m1
SAR32m1
RCR32m1
SHR32m1
ROR32m1
RCL64m1
SHL64m1
ROL64m1
SAR64m1
RCR64m1
SHR64m1
ROR64m1
RCL16m1
SHL16m1
ROL16m1
SAR16m1
RCR16m1
SHR16m1
ROR16m1
RCL8m1
SHL8m1
ROL8m1
SAR8m1
RCR8m1
SHR8m1
ROR8m1
RCL32r1
SHL32r1
ROL32r1
SAR32r1
RCR32r1
SHR32r1
ROR32r1
RCL64r1
SHL64r1
ROL64r1
SAR64r1
RCR64r1
SHR64r1
ROR64r1
RCL16r1
SHL16r1
ROL16r1
SAR16r1
RCR16r1
SHR16r1
ROR16r1
RCL8r1
SHL8r1
ROL8r1
SAR8r1
RCR8r1
SHR8r1
ROR8r1
LD_Fp032
LD_Fp132
INVLPGA32
PUSHA32
POPA32
VMLOAD32
LXADD32
INVPCID32
INVVPID32
VMSAVE32
CMOV_V4F32
CMOV_V16F32
CMOV_V8F32
PUSHF32
POPF32
LCMPXCHG32
VMRUN32
ADJCALLSTACKDOWN32
CMOV_RFP32
ADJCALLSTACKUP32
CMOV_FR32
CMOV_GR32
PUSHCS32
PUSHDS32
POPDS32
PUSHES32
POPES32
PUSHFS32
POPFS32
PUSHGS32
POPGS32
PUSHSS32
POPSS32
IRET32
INVEPT32
SEG_ALLOCA_32
REP_STOSB_32
REP_MOVSB_32
REP_STOSD_32
REP_MOVSD_32
WIN_FTOL_32
REP_STOSW_32
REP_MOVSW_32
JECXZ_32
TLSCall_32
SBB32i32
SUB32i32
ADC32i32
ADD32i32
AND32i32
CMP32i32
XOR32i32
TEST32i32
SBB64i32
SUB64i32
ADC64i32
ADD64i32
AND64i32
PUSH64i32
CMP64i32
XOR64i32
TEST64i32
PUSHi32
SBB64mi32
LOCK_SUB64mi32
ADC64mi32
LOCK_ADD64mi32
LOCK_AND64mi32
CMP64mi32
LOCK_XOR64mi32
LOCK_OR64mi32
TEST64mi32
MOV64mi32
IMUL64rmi32
SBB64ri32
SUB64ri32
ADC64ri32
ADD64ri32
AND64ri32
CMP64ri32
XOR64ri32
TEST64ri32
MOV64ri32
IMUL64rri32
CALL64pcrel32
CALLpcrel32
ST_FpP80m32
SUB_Fp80m32
ADD_Fp80m32
MUL_Fp80m32
SUBR_Fp80m32
DIVR_Fp80m32
ST_Fp80m32
DIV_Fp80m32
SUB_FpI32m32
ADD_FpI32m32
MUL_FpI32m32
SUBR_FpI32m32
DIVR_FpI32m32
DIV_FpI32m32
ILD_Fp32m32
IST_Fp32m32
ISTT_Fp32m32
CRC32r32m32
ST_FpP64m32
SUB_Fp64m32
ADD_Fp64m32
ILD_Fp64m32
MUL_Fp64m32
SUBR_Fp64m32
DIVR_Fp64m32
IST_Fp64m32
ISTT_Fp64m32
DIV_Fp64m32
SUB_FpI16m32
ADD_FpI16m32
MUL_FpI16m32
SUBR_FpI16m32
DIVR_FpI16m32
DIV_FpI16m32
ILD_Fp16m32
IST_Fp16m32
ISTT_Fp16m32
MOVSX64rm32
MOV32ao32
MOV64ao32
CMOVNB_Fp32
SUB_Fp32
CMOVB_Fp32
ADD_Fp32
CMOVNBE_Fp32
CMOVBE_Fp32
CMOVNE_Fp32
CMOVE_Fp32
MUL_Fp32
SIN_Fp32
CMOVNP_Fp32
CMOVP_Fp32
ABS_Fp32
CHS_Fp32
COS_Fp32
SQRT_Fp32
TST_Fp32
DIV_Fp32
EH_SjLj_LongJmp32
EH_SjLj_SetJmp32
CRC32r32r32
UCOM_FpIr32
TLS_addr32
TLS_base_addr32
UCOM_Fpr32
MOVSX64rr32
FLDLG2
FLDLN2
PREFETCHT2
JA_2
JB_2
JAE_2
JBE_2
JGE_2
JE_2
JLE_2
JNE_2
JG_2
JL_2
JO_2
JNO_2
JP_2
JMP_2
JNP_2
JS_2
JNS_2
INT3
LD_Fp064
LD_Fp164
INVLPGA64
VMLOAD64
LXADD64
INVPCID64
INVVPID64
RDFSBASE64
WRFSBASE64
RDGSBASE64
WRGSBASE64
LEAVE64
VMSAVE64
FXSAVE64
CMOV_V2F64
CMOV_V4F64
CMOV_V8F64
PUSHF64
POPF64
LCMPXCHG64
CMOV_V2I64
CMOV_V4I64
CMOV_V8I64
FARCALL64
EH_RETURN64
VMRUN64
ADJCALLSTACKDOWN64
CMOV_RFP64
FARJMP64
ADJCALLSTACKUP64
MMX_MASKMOVQ64
CMOV_FR64
FXRSTOR64
PUSHFS64
POPFS64
PUSHGS64
POPGS64
IRET64
SYSRET64
SYSEXIT64
INVEPT64
XSAVEOPT64
VMASKMOVDQU64
SEG_ALLOCA_64
REP_STOSB_64
REP_MOVSB_64
REP_STOSD_64
REP_MOVSD_64
VAARG_64
WIN_FTOL_64
REP_STOSQ_64
REP_MOVSQ_64
REP_STOSW_64
REP_MOVSW_64
JECXZ_64
TLSCall_64
TAILJMPd64
TCRETURNdi64
TCRETURNmi64
MOV32ri64
TCRETURNri64
ST_FpP80m64
SUB_Fp80m64
ADD_Fp80m64
MUL_Fp80m64
SUBR_Fp80m64
DIVR_Fp80m64
ST_Fp80m64
DIV_Fp80m64
SUB_FpI32m64
ADD_FpI32m64
MUL_FpI32m64
SUBR_FpI32m64
DIVR_FpI32m64
DIV_FpI32m64
ILD_Fp32m64
IST_Fp32m64
ISTT_Fp32m64
ILD_Fp64m64
IST_Fp64m64
ISTT_Fp64m64
CRC32r64m64
SUB_FpI16m64
ADD_FpI16m64
MUL_FpI16m64
SUBR_FpI16m64
DIVR_FpI16m64
DIV_FpI16m64
ILD_Fp16m64
IST_Fp16m64
ISTT_Fp16m64
TAILJMPm64
MMX_PSHUFBrm64
MMX_PSIGNBrm64
MMX_PABSBrm64
MMX_PHSUBDrm64
MMX_PHADDrm64
MMX_PSIGNDrm64
MMX_PABSDrm64
MMX_PHSUBWrm64
MMX_PHADDWrm64
MMX_PSIGNWrm64
MMX_PABSWrm64
MMX_PMADDUBSWrm64
MMX_PHSUBSWrm64
MMX_PHADDSWrm64
MMX_PMULHRSWrm64
MOV64ao64
CMOVNB_Fp64
SUB_Fp64
CMOVB_Fp64
ADD_Fp64
CMOVNBE_Fp64
CMOVBE_Fp64
CMOVNE_Fp64
CMOVE_Fp64
MUL_Fp64
SIN_Fp64
CMOVNP_Fp64
CMOVP_Fp64
ABS_Fp64
CHS_Fp64
COS_Fp64
SQRT_Fp64
TST_Fp64
DIV_Fp64
EH_SjLj_LongJmp64
EH_SjLj_SetJmp64
CRC32r64r64
UCOM_FpIr64
TAILJMPr64
XCHG32ar64
TLS_addr64
TLS_base_addr64
UCOM_Fpr64
MMX_PSHUFBrr64
MMX_PSIGNBrr64
MMX_PABSBrr64
MMX_PHSUBDrr64
MMX_PHADDrr64
MMX_PSIGNDrr64
MMX_PABSDrr64
MMX_PHSUBWrr64
MMX_PHADDWrr64
MMX_PSIGNWrr64
MMX_PABSWrr64
MMX_PMADDUBSWrr64
MMX_PHSUBSWrr64
MMX_PHADDSWrr64
MMX_PMULHRSWrr64
JA_4
JB_4
JAE_4
JBE_4
JGE_4
JE_4
JLE_4
JNE_4
JG_4
JL_4
XBEGIN_4
JO_4
JNO_4
JP_4
JMP_4
JNP_4
JS_4
JNS_4
PUSHA16
POPA16
LXADD16
PUSHF16
POPF16
LCMPXCHG16
CMOV_GR16
PUSHCS16
PUSHDS16
POPDS16
PUSHES16
POPES16
PUSHFS16
POPFS16
PUSHGS16
POPGS16
PUSHSS16
POPSS16
IRET16
MOV32ao32_16
MOV16ao16_16
MOV8ao8_16
MOV32o32a_16
MOV16o16a_16
MOV8o8a_16
PUSH64i16
SBB16i16
SUB16i16
ADC16i16
ADD16i16
AND16i16
CMP16i16
XOR16i16
TEST16i16
PUSHi16
CALLpcrel16
CRC32r32m16
MOVSX32rm16
MOVZX32rm16
MOVSX64rm16
MOV64ao16
MOV16ao16
CRC32r32r16
MOVSX32rr16
MOVZX32rr16
MOVSX64rr16
XSHA256
VPABSBrm256
VPABSDrm256
VPABSWrm256
VPMADDUBSWrm256
VPHSUBSWrm256
VPHADDSWrm256
VPMULHRSWrm256
VPABSBrr256
VPABSDrr256
VPABSWrr256
VPMADDUBSWrr256
VPHSUBSWrr256
VPHADDSWrr256
VPMULHRSWrr256
VBROADCASTF128
VBROADCASTI128
VPABSBrm128
VPABSDrm128
VPABSWrm128
VPMADDUBSWrm128
VPHSUBSWrm128
VPHADDSWrm128
VPMULHRSWrm128
VPHMINPOSUWrm128
VPABSBrr128
VPABSDrr128
VPABSWrr128
VPMADDUBSWrr128
VPHSUBSWrr128
VPHADDSWrr128
VPMULHRSWrr128
VPHMINPOSUWrr128
LXADD8
LCMPXCHG8
CMOV_GR8
PUSH32i8
PUSH64i8
PUSH16i8
SBB8i8
SUB8i8
ADC8i8
AAD8i8
ADD8i8
AND8i8
AAM8i8
CMP8i8
XOR8i8
TEST8i8
SBB32mi8
LOCK_SUB32mi8
ADC32mi8
BTC32mi8
LOCK_ADD32mi8
LOCK_AND32mi8
CMP32mi8
LOCK_XOR32mi8
LOCK_OR32mi8
BTR32mi8
BTS32mi8
BT32mi8
SBB64mi8
LOCK_SUB64mi8
ADC64mi8
BTC64mi8
LOCK_ADD64mi8
LOCK_AND64mi8
CMP64mi8
LOCK_XOR64mi8
LOCK_OR64mi8
BTR64mi8
BTS64mi8
BT64mi8
SBB16mi8
LOCK_SUB16mi8
ADC16mi8
BTC16mi8
LOCK_ADD16mi8
LOCK_AND16mi8
CMP16mi8
LOCK_XOR16mi8
LOCK_OR16mi8
BTR16mi8
BTS16mi8
BT16mi8
IMUL32rmi8
IMUL64rmi8
IMUL16rmi8
SBB32ri8
SUB32ri8
ADC32ri8
BTC32ri8
ADD32ri8
AND32ri8
CMP32ri8
XOR32ri8
BTR32ri8
BTS32ri8
BT32ri8
SBB64ri8
SUB64ri8
ADC64ri8
BTC64ri8
ADD64ri8
AND64ri8
CMP64ri8
XOR64ri8
BTR64ri8
BTS64ri8
BT64ri8
SBB16ri8
SUB16ri8
ADC16ri8
BTC16ri8
ADD16ri8
AND16ri8
CMP16ri8
XOR16ri8
BTR16ri8
BTS16ri8
BT16ri8
SHLD32mri8
SHRD32mri8
SHLD64mri8
SHRD64mri8
SHLD16mri8
SHRD16mri8
SHLD32rri8
SHRD32rri8
IMUL32rri8
SHLD64rri8
SHRD64rri8
IMUL64rri8
SHLD16rri8
SHRD16rri8
IMUL16rri8
CRC32r32m8
CRC32r64m8
MOVSX32rm8
MOVZX32rm8
MOVSX64rm8
MOVSX16rm8
MOVZX16rm8
MOVZX32_NOREXrm8
MOV64ao8
MOV8ao8
CRC32r32r8
CRC32r64r8
MOVSX32rr8
MOVZX32rr8
MOVSX64rr8
MOVSX16rr8
MOVZX16rr8
MOVZX32_NOREXrr8
W64ALLOCA
WIN_ALLOCA
PREFETCHNTA
KSET0B
KSET1B
UD2B
LCMPXCHG16B
LCMPXCHG8B
XCRYPTECB
ADD64ri32_DB
ADD32ri8_DB
ADD64ri8_DB
ADD16ri8_DB
ADD32ri_DB
ADD16ri_DB
ADD32rr_DB
ADD64rr_DB
ADD16rr_DB
XCRYPTCFB
XCRYPTOFB
SCASB
LODSB
INSB
STOSB
CMPSB
OUTSB
MOVSB
CLAC
STAC
XCRYPTCBC
RDPMC
VMFUNC
RDTSC
CPUID
XEND
LIFETIME_END
LOAD_STACK_GUARD
FsFLD0SD
MOVNTSD
WBINVD
FLDL2E
LFENCE
MFENCE
SFENCE
REG_SEQUENCE
CWDE
FFREE
FSCALE
BUNDLE
VMRESUME
LOOPNE
LOOPE
CDQE
XSTORE
RDFSBASE
WRFSBASE
RDGSBASE
WRGSBASE
PAUSE
DBG_VALUE
LEAVE
FXSAVE
IMPLICIT_DEF
VMXOFF
LAHF
SAHF
CMOVNB_F
CMOVB_F
CMOVNBE_F
CMOVBE_F
CMOVNE_F
CMOVE_F
XCH_F
SIN_F
CMOVNP_F
CMOVP_F
ABS_F
CHS_F
COS_F
SQRT_F
TST_F
VPCMPESTRM128REG
VPCMPISTRM128REG
EXTRACT_SUBREG
INSERT_SUBREG
VPCMPESTRIREG
VPCMPISTRIREG
SUBREG_TO_REG
INVLPG
VMLAUNCH
PREFETCH
CLFLUSH
CLGI
STGI
FLDPI
EXTRQI
INSERTQI
RCL32mCL
SHL32mCL
ROL32mCL
SAR32mCL
RCR32mCL
SHR32mCL
ROR32mCL
RCL64mCL
SHL64mCL
ROL64mCL
SAR64mCL
RCR64mCL
SHR64mCL
ROR64mCL
RCL16mCL
SHL16mCL
ROL16mCL
SAR16mCL
RCR16mCL
SHR16mCL
ROR16mCL
RCL8mCL
SHL8mCL
ROL8mCL
SAR8mCL
RCR8mCL
SHR8mCL
ROR8mCL
RCL32rCL
SHL32rCL
ROL32rCL
SAR32rCL
RCR32rCL
SHR32rCL
ROR32rCL
RCL64rCL
SHL64rCL
ROL64rCL
SAR64rCL
RCR64rCL
SHR64rCL
ROR64rCL
RCL16rCL
SHL16rCL
ROL16rCL
SAR16rCL
RCR16rCL
SHR16rCL
ROR16rCL
RCL8rCL
SHL8rCL
ROL8rCL
SAR8rCL
RCR8rCL
SHR8rCL
ROR8rCL
SHLD32mrCL
SHRD32mrCL
SHLD64mrCL
SHRD64mrCL
SHLD16mrCL
SHRD16mrCL
SHLD32rrCL
SHRD32rrCL
SHLD64rrCL
SHRD64rrCL
SHLD16rrCL
SHRD16rrCL
GC_LABEL
EH_LABEL
LRETIL
VMMCALL
VMCALL
SYSCALL
VZEROALL
KILL
NOOPL
SCASL
LODSL
INSL
STOSL
CMPSL
OUTSL
MOVSL
LRETL
MONTMUL
FXAM
VPCMPESTRM128MEM
VPCMPISTRM128MEM
VPCMPESTRIMEM
VPCMPISTRIMEM
FP80_TO_INT32_IN_MEM
FP32_TO_INT32_IN_MEM
FP64_TO_INT32_IN_MEM
FP80_TO_INT64_IN_MEM
FP32_TO_INT64_IN_MEM
FP64_TO_INT64_IN_MEM
FP80_TO_INT16_IN_MEM
FP32_TO_INT16_IN_MEM
FP64_TO_INT16_IN_MEM
FPREM
SEH_SaveXMM
INLINEASM
FPATAN
FPTAN
XBEGIN
CFI_INSTRUCTION
VMXON
EH_RETURN
INTO
STACKMAP
TRAP
RDTSCP
FNOP
LOOP
NOOP
FCOMPP
FDECSTP
FINCSTP
LRETIQ
EXTRQ
SCASQ
LODSQ
STOSQ
CMPSQ
MOVSQ
LRETQ
INSERTQ
MMX_MASKMOVQ
MOVZX64rm16_Q
MOVZX64rr16_Q
MOVZX64rm8_Q
MOVZX64rr8_Q
VZEROUPPER
SYSENTER
MONITOR
FXRSTOR
VLDMXCSR
VSTMXCSR
RDMSR
WRMSR
XCRYPTCTR
AVX2_SETALLONES
V_SETALLONES
VASTART_SAVE_XMM_REGS
SWAPGS
ENCLS
FEMMS
MMX_EMMS
FSINCOS
FsFLD0SS
COPY_TO_REGCLASS
MOVNTSS
CLTS
FLDL2T
XLAT
FXTRACT
SYSRET
MORESTACK_RET
WAIT
SKINIT
FNINIT
SYSEXIT
FRNDINT
PATCHPOINT
XSAVEOPT
LIFETIME_START
XABORT
XTEST
ENCLU
VMASKMOVDQU
XGETBV
XSETBV
VFMADDSUBPD4rrY_REV
VFMSUBPD4rrY_REV
VFNMSUBPD4rrY_REV
VFMSUBADDPD4rrY_REV
VFMADDPD4rrY_REV
VFNMADDPD4rrY_REV
VFMADDSUBPS4rrY_REV
VFMSUBPS4rrY_REV
VFNMSUBPS4rrY_REV
VFMSUBADDPS4rrY_REV
VFMADDPS4rrY_REV
VFNMADDPS4rrY_REV
SBB32rr_REV
SUB32rr_REV
ADC32rr_REV
ADD32rr_REV
AND32rr_REV
CMP32rr_REV
XOR32rr_REV
MOV32rr_REV
SBB64rr_REV
SUB64rr_REV
ADC64rr_REV
ADD64rr_REV
AND64rr_REV
CMP64rr_REV
MMX_MOVQ64rr_REV
XOR64rr_REV
MOV64rr_REV
VFMADDSUBPD4rr_REV
VFMSUBPD4rr_REV
VFNMSUBPD4rr_REV
VFMSUBADDPD4rr_REV
VFMADDPD4rr_REV
VFNMADDPD4rr_REV
VFMSUBSD4rr_REV
VFNMSUBSD4rr_REV
VFMADDSD4rr_REV
VFNMADDSD4rr_REV
VFMADDSUBPS4rr_REV
VFMSUBPS4rr_REV
VFNMSUBPS4rr_REV
VFMSUBADDPS4rr_REV
VFMADDPS4rr_REV
VFNMADDPS4rr_REV
VFMSUBSS4rr_REV
VFNMSUBSS4rr_REV
VFMADDSS4rr_REV
VFNMADDSS4rr_REV
SBB16rr_REV
SUB16rr_REV
ADC16rr_REV
ADD16rr_REV
AND16rr_REV
CMP16rr_REV
XOR16rr_REV
MOV16rr_REV
SBB8rr_REV
SUB8rr_REV
ADC8rr_REV
ADD8rr_REV
AND8rr_REV
CMP8rr_REV
XOR8rr_REV
MOV8rr_REV
VMOVDQArr_REV
VMOVAPDrr_REV
VMOVUPDrr_REV
VMOVSDrr_REV
VMOVAPSrr_REV
VMOVUPSrr_REV
VMOVSSrr_REV
VMOVDQUrr_REV
VPEXTRWrr_REV
VMOVDQAYrr_REV
VMOVAPDYrr_REV
VMOVUPDYrr_REV
VMOVAPSYrr_REV
VMOVUPSYrr_REV
VMOVDQUYrr_REV
VMOVSDZrr_REV
VMOVSSZrr_REV
KSET0W
KSET1W
PREFETCHW
LRETIW
NOOPW
SCASW
LODSW
INSW
STOSW
CMPSW
OUTSW
MOVSW
LRETW
FYL2X
FNCLEX
TEST8ri_NOREX
MOV8rm_NOREX
MOV8mr_NOREX
MOV8rr_NOREX
REX64_PREFIX
DATA16_PREFIX
REPNE_PREFIX
XACQUIRE_PREFIX
XRELEASE_PREFIX
LOCK_PREFIX
REP_PREFIX
CS_PREFIX
DS_PREFIX
ES_PREFIX
FS_PREFIX
GS_PREFIX
SS_PREFIX
COPY
VFMADDSUBPDr231mY
VFMSUBPDr231mY
VFNMSUBPDr231mY
VFMSUBADDPDr231mY
VFMADDPDr231mY
VFNMADDPDr231mY
VFMADDSUBPSr231mY
VFMSUBPSr231mY
VFNMSUBPSr231mY
VFMSUBADDPSr231mY
VFMADDPSr231mY
VFNMADDPSr231mY
VFMADDSUBPDr132mY
VFMSUBPDr132mY
VFNMSUBPDr132mY
VFMSUBADDPDr132mY
VFMADDPDr132mY
VFNMADDPDr132mY
VFMADDSUBPSr132mY
VFMSUBPSr132mY
VFNMSUBPSr132mY
VFMSUBADDPSr132mY
VFMADDPSr132mY
VFNMADDPSr132mY
VFMADDSUBPDr213mY
VFMSUBPDr213mY
VFNMSUBPDr213mY
VFMSUBADDPDr213mY
VFMADDPDr213mY
VFNMADDPDr213mY
VFMADDSUBPSr213mY
VFMSUBPSr213mY
VFNMSUBPSr213mY
VFMSUBADDPSr213mY
VFMADDPSr213mY
VFNMADDPSr213mY
VFMADDSUBPD4rmY
VFMSUBPD4rmY
VFNMSUBPD4rmY
VFMSUBADDPD4rmY
VFMADDPD4rmY
VFNMADDPD4rmY
VFMADDSUBPS4rmY
VFMSUBPS4rmY
VFNMSUBPS4rmY
VFMSUBADDPS4rmY
VFMADDPS4rmY
VFNMADDPS4rmY
VPERMIL2PDrmY
VFRCZPDrmY
VPERMIL2PSrmY
VFRCZPSrmY
VPCMOVrmY
VFMADDSUBPDr231rY
VFMSUBPDr231rY
VFNMSUBPDr231rY
VFMSUBADDPDr231rY
VFMADDPDr231rY
VFNMADDPDr231rY
VFMADDSUBPSr231rY
VFMSUBPSr231rY
VFNMSUBPSr231rY
VFMSUBADDPSr231rY
VFMADDPSr231rY
VFNMADDPSr231rY
VFMADDSUBPDr132rY
VFMSUBPDr132rY
VFNMSUBPDr132rY
VFMSUBADDPDr132rY
VFMADDPDr132rY
VFNMADDPDr132rY
VFMADDSUBPSr132rY
VFMSUBPSr132rY
VFNMSUBPSr132rY
VFMSUBADDPSr132rY
VFMADDPSr132rY
VFNMADDPSr132rY
VFMADDSUBPDr213rY
VFMSUBPDr213rY
VFNMSUBPDr213rY
VFMSUBADDPDr213rY
VFMADDPDr213rY
VFNMADDPDr213rY
VFMADDSUBPSr213rY
VFMSUBPSr213rY
VFNMSUBPSr213rY
VFMSUBADDPSr213rY
VFMADDPSr213rY
VFNMADDPSr213rY
VFMADDSUBPD4mrY
VFMSUBPD4mrY
VFNMSUBPD4mrY
VFMSUBADDPD4mrY
VFMADDPD4mrY
VFNMADDPD4mrY
VFMADDSUBPS4mrY
VFMSUBPS4mrY
VFNMSUBPS4mrY
VFMSUBADDPS4mrY
VFMADDPS4mrY
VFNMADDPS4mrY
VPERMIL2PDmrY
VPERMIL2PSmrY
VPCMOVmrY
VFMADDSUBPD4rrY
VFMSUBPD4rrY
VFNMSUBPD4rrY
VFMSUBADDPD4rrY
VFMADDPD4rrY
VFNMADDPD4rrY
VFMADDSUBPS4rrY
VFMSUBPS4rrY
VFNMSUBPS4rrY
VFMSUBADDPS4rrY
VFMADDPS4rrY
VFNMADDPS4rrY
VPERMIL2PDrrY
VFRCZPDrrY
VPERMIL2PSrrY
VFRCZPSrrY
VPCMOVrrY
JCXZ
JRCXZ
MOV32o32a
MOV64o32a
MOV64o64a
MOV64o16a
MOV16o16a
MOV64o8a
MOV8o8a
VCMPPDZrrib
VCMPPSZrrib
VFMADDSUB132PDZmb
VFMSUB132PDZmb
VFNMSUB132PDZmb
VFMSUBADD132PDZmb
VFMADD132PDZmb
VFNMADD132PDZmb
VFMADDSUB213PDZmb
VFMSUB213PDZmb
VFNMSUB213PDZmb
VFMSUBADD213PDZmb
VFMADD213PDZmb
VFNMADD213PDZmb
VFMADDSUB132PSZmb
VFMSUB132PSZmb
VFNMSUB132PSZmb
VFMSUBADD132PSZmb
VFMADD132PSZmb
VFNMADD132PSZmb
VFMADDSUB213PSZmb
VFMSUB213PSZmb
VFNMSUB213PSZmb
VFMSUBADD213PSZmb
VFMADD213PSZmb
VFNMADD213PSZmb
VPCONFLICTDrmb
VPLZCNTDrmb
VPCONFLICTQrmb
VPLZCNTQrmb
VPSUBDZrmb
VPADDDZrmb
VPANDDZrmb
VPMULLDZrmb
VPANDNDZrmb
VSUBPDZrmb
VADDPDZrmb
VMULPDZrmb
VMINPDZrmb
VDIVPDZrmb
VMAXPDZrmb
VPORDZrmb
VPXORDZrmb
VPABSDZrmb
VPMINSDZrmb
VPMAXSDZrmb
VPMINUDZrmb
VPMAXUDZrmb
VPSUBQZrmb
VPADDQZrmb
VPMULDQZrmb
VPANDQZrmb
VPMULUDQZrmb
VPANDNQZrmb
VPORQZrmb
VPXORQZrmb
VPABSQZrmb
VPMINSQZrmb
VPMAXSQZrmb
VPMINUQZrmb
VPMAXUQZrmb
VSUBPSZrmb
VADDPSZrmb
VMULPSZrmb
VMINPSZrmb
VDIVPSZrmb
VMAXPSZrmb
VRCP28PDZrb
VRSQRT28PDZrb
VRCP28PSZrb
VRSQRT28PSZrb
VRCP28SDrrb
VRSQRT28SDrrb
VRCP28SSrrb
VRSQRT28SSrrb
VCVTPD2DQZrrb
VCVTPS2DQZrrb
VCVTPD2UDQZrrb
VCVTPS2UDQZrrb
VCVTPD2PSZrrb
VCVTDQ2PSZrrb
VCVTUDQ2PSZrrb
SEH_StackAlloc
MOV32rc
MOV64rc
TAILJMPd
OR32mrLocked
MOV32rd
MOV64rd
SEH_PushFrame
SEH_SetFrame
SEH_Epilogue
SEH_EndPrologue
SEH_SaveReg
SEH_PushReg
FARCALL32i
FARJMP32i
FARCALL16i
FARJMP16i
TCRETURNdi
SBB32mi
LOCK_SUB32mi
ADC32mi
LOCK_ADD32mi
LOCK_AND32mi
BEXTRI32mi
RCL32mi
SHL32mi
ROL32mi
CMP32mi
SAR32mi
RCR32mi
SHR32mi
ROR32mi
LOCK_XOR32mi
LOCK_OR32mi
TEST32mi
MOV32mi
RORX32mi
BEXTRI64mi
RCL64mi
SHL64mi
ROL64mi
SAR64mi
RCR64mi
SHR64mi
ROR64mi
RORX64mi
SBB16mi
LOCK_SUB16mi
ADC16mi
LOCK_ADD16mi
LOCK_AND16mi
RCL16mi
SHL16mi
ROL16mi
CMP16mi
SAR16mi
RCR16mi
SHR16mi
ROR16mi
LOCK_XOR16mi
LOCK_OR16mi
TEST16mi
MOV16mi
SBB8mi
LOCK_SUB8mi
ADC8mi
LOCK_ADD8mi
LOCK_AND8mi
RCL8mi
SHL8mi
ROL8mi
CMP8mi
SAR8mi
RCR8mi
SHR8mi
ROR8mi
LOCK_XOR8mi
LOCK_OR8mi
TEST8mi
MOV8mi
VPCOMBmi
VPROTBmi
VPCOMUBmi
VPSHUFDmi
VPCOMDmi
VPERMILPDmi
VPROTDmi
VPCOMUDmi
TCRETURNmi
VPCOMQmi
VPROTQmi
VPCOMUQmi
VPERMILPSmi
MMX_PSHUFWmi
VPSHUFHWmi
VPSHUFLWmi
VPCOMWmi
VPROTWmi
VPCOMUWmi
VPSHUFDYmi
VPERMILPDYmi
VPERMPDYmi
VPERMQYmi
VPERMILPSYmi
VPSHUFHWYmi
VPSHUFLWYmi
VPSRADZmi
VPSHUFDZmi
VPSLLDZmi
VPSRLDZmi
VPERMILPDZmi
VPERMPDZmi
VPSRAQZmi
VPSLLQZmi
VPSRLQZmi
VPERMQZmi
VPERMILPSZmi
IMUL32rmi
SHA1RNDS4rmi
IMUL16rmi
VPBLENDDrmi
VALIGNDrmi
VBLENDPDrmi
VSHUFPDrmi
VDPPDrmi
VCMPPDrmi
VALIGNQrmi
VBLENDPSrmi
VSHUFPSrmi
VDPPSrmi
VCMPPSrmi
VMPSADBWrmi
VPBLENDWrmi
VPINSRWrmi
VPBLENDDYrmi
VBLENDPDYrmi
VSHUFPDYrmi
VCMPPDYrmi
VBLENDPSYrmi
VSHUFPSYrmi
VDPPSYrmi
VCMPPSYrmi
VMPSADBWYrmi
VPBLENDWYrmi
VSHUFPDZrmi
VPCMPDZrmi
VCMPPDZrmi
VPCMPUDZrmi
VPCMPQZrmi
VPCMPUQZrmi
VSHUFPSZrmi
VCMPPSZrmi
MMX_PINSRWirmi
SBB32ri
SUB32ri
ADC32ri
ADD32ri
AND32ri
BEXTRI32ri
RCL32ri
SHL32ri
ROL32ri
IN32ri
CMP32ri
SAR32ri
RCR32ri
SHR32ri
ROR32ri
XOR32ri
TEST32ri
MOV32ri
RORX32ri
BEXTRI64ri
RCL64ri
SHL64ri
ROL64ri
SAR64ri
RCR64ri
SHR64ri
ROR64ri
MOV64ri
RORX64ri
SBB16ri
SUB16ri
ADC16ri
ADD16ri
AND16ri
RCL16ri
SHL16ri
ROL16ri
IN16ri
CMP16ri
SAR16ri
RCR16ri
SHR16ri
ROR16ri
XOR16ri
TEST16ri
MOV16ri
SBB8ri
SUB8ri
ADC8ri
ADD8ri
AND8ri
RCL8ri
SHL8ri
ROL8ri
IN8ri
CMP8ri
SAR8ri
RCR8ri
SHR8ri
ROR8ri
XOR8ri
TEST8ri
MOV8ri
VPCOMBri
VPROTBri
VPCOMUBri
VPSRADri
MMX_PSRADri
VPSHUFDri
VPSLLDri
MMX_PSLLDri
VPSRLDri
MMX_PSRLDri
VPCOMDri
VPERMILPDri
VPROTDri
VPCOMUDri
TCRETURNri
VPSLLDQri
VPSRLDQri
VPSLLQri
MMX_PSLLQri
VPSRLQri
MMX_PSRLQri
VPCOMQri
VPROTQri
VPCOMUQri
VPERMILPSri
VPSRAWri
MMX_PSRAWri
MMX_PSHUFWri
VPSHUFHWri
VPSHUFLWri
VPSLLWri
MMX_PSLLWri
VPSRLWri
MMX_PSRLWri
KSHIFTLWri
VPCOMWri
KSHIFTRWri
VPEXTRWri
VPROTWri
VPCOMUWri
VPSRADYri
VPSHUFDYri
VPSLLDYri
VPSRLDYri
VPERMILPDYri
VPERMPDYri
VPSLLDQYri
VPSRLDQYri
VPSLLQYri
VPSRLQYri
VPERMQYri
VPERMILPSYri
VPSRAWYri
VPSHUFHWYri
VPSHUFLWYri
VPSLLWYri
VPSRLWYri
VPSRADZri
VPSHUFDZri
VPSLLDZri
VPSRLDZri
VPERMILPDZri
VPERMPDZri
VPSRAQZri
VPSLLQZri
VPSRLQZri
VPERMQZri
VPERMILPSZri
IMUL32rri
SHA1RNDS4rri
IMUL16rri
VPBLENDDrri
VALIGNDrri
VBLENDPDrri
VSHUFPDrri
VDPPDrri
VCMPPDrri
VALIGNQrri
VBLENDPSrri
VSHUFPSrri
VDPPSrri
VCMPPSrri
VMPSADBWrri
VPBLENDWrri
VPINSRWrri
VPBLENDDYrri
VBLENDPDYrri
VSHUFPDYrri
VCMPPDYrri
VBLENDPSYrri
VSHUFPSYrri
VDPPSYrri
VCMPPSYrri
VMPSADBWYrri
VPBLENDWYrri
VSHUFPDZrri
VPCMPDZrri
VCMPPDZrri
VPCMPUDZrri
VPCMPQZrri
VPCMPUQZrri
VSHUFPSZrri
VCMPPSZrri
MMX_PINSRWirri
MMX_PEXTRWirri
VPCONFLICTDrmbk
VPLZCNTDrmbk
VPCONFLICTQrmbk
VPLZCNTQrmbk
VPSUBDZrmbk
VPADDDZrmbk
VPANDDZrmbk
VPMULLDZrmbk
VPANDNDZrmbk
VSUBPDZrmbk
VADDPDZrmbk
VMULPDZrmbk
VMINPDZrmbk
VDIVPDZrmbk
VMAXPDZrmbk
VPORDZrmbk
VPXORDZrmbk
VPABSDZrmbk
VPMINSDZrmbk
VPMAXSDZrmbk
VPMINUDZrmbk
VPMAXUDZrmbk
VPSUBQZrmbk
VPADDQZrmbk
VPMULDQZrmbk
VPANDQZrmbk
VPMULUDQZrmbk
VPANDNQZrmbk
VPORQZrmbk
VPXORQZrmbk
VPABSQZrmbk
VPMINSQZrmbk
VPMAXSQZrmbk
VPMINUQZrmbk
VPMAXUQZrmbk
VSUBPSZrmbk
VADDPSZrmbk
VMULPSZrmbk
VMINPSZrmbk
VDIVPSZrmbk
VMAXPSZrmbk
VPSRADZmik
VPSLLDZmik
VPSRLDZmik
VPSRAQZmik
VPSLLQZmik
VPSRLQZmik
VPSRADZrik
VPSLLDZrik
VPSRLDZrik
VPSRAQZrik
VPSLLQZrik
VPSRLQZrik
VALIGNDrrik
VALIGNQrrik
KMOVBkk
KMOVDkk
KMOVQkk
KMOVWkk
KMOVBmk
KMOVDmk
KMOVQmk
KMOVWmk
VMOVDQA32Z256rmk
VMOVDQU32Z256rmk
VMOVDQA64Z256rmk
VMOVDQU64Z256rmk
VMOVDQU16Z256rmk
VMOVDQU8Z256rmk
VMOVAPDZ256rmk
VMOVUPDZ256rmk
VMOVAPSZ256rmk
VMOVUPSZ256rmk
VMOVDQA32Z128rmk
VMOVDQU32Z128rmk
VMOVDQA64Z128rmk
VMOVDQU64Z128rmk
VMOVDQU16Z128rmk
VMOVDQU8Z128rmk
VMOVAPDZ128rmk
VMOVUPDZ128rmk
VMOVAPSZ128rmk
VMOVUPSZ128rmk
VPERMI2Drmk
VPERMT2Drmk
VPERMI2PDrmk
VPERMT2PDrmk
VPCONFLICTDrmk
VPLZCNTDrmk
VPERMI2Qrmk
VPERMT2Qrmk
VPCONFLICTQrmk
VPLZCNTQrmk
VPERMI2PSrmk
VPERMT2PSrmk
VMOVDQA32Zrmk
VMOVDQU32Zrmk
VMOVDQA64Zrmk
VMOVDQU64Zrmk
VMOVDQU16Zrmk
VMOVDQU8Zrmk
VPSRADZrmk
VPSUBDZrmk
VPMOVSXBDZrmk
VPMOVZXBDZrmk
VPADDDZrmk
VPANDDZrmk
VPSLLDZrmk
VPMULLDZrmk
VPSRLDZrmk
VPANDNDZrmk
VMOVAPDZrmk
VSUBPDZrmk
VADDPDZrmk
VMULPDZrmk
VMINPDZrmk
VMOVUPDZrmk
VDIVPDZrmk
VMAXPDZrmk
VPORDZrmk
VPXORDZrmk
VPABSDZrmk
VPMINSDZrmk
VPMAXSDZrmk
VPMINUDZrmk
VPMAXUDZrmk
VPMOVSXWDZrmk
VPMOVZXWDZrmk
VPSRAQZrmk
VPSUBQZrmk
VPMOVSXBQZrmk
VPMOVZXBQZrmk
VPADDQZrmk
VPMULDQZrmk
VPANDQZrmk
VPMULUDQZrmk
VPMOVSXDQZrmk
VPMOVZXDQZrmk
VPSLLQZrmk
VPSRLQZrmk
VPANDNQZrmk
VPORQZrmk
VPXORQZrmk
VPABSQZrmk
VPMINSQZrmk
VPMAXSQZrmk
VPMINUQZrmk
VPMAXUQZrmk
VPMOVSXWQZrmk
VPMOVZXWQZrmk
VMOVAPSZrmk
VSUBPSZrmk
VADDPSZrmk
VMULPSZrmk
VMINPSZrmk
VMOVUPSZrmk
VDIVPSZrmk
VMAXPSZrmk
KMOVBrk
KMOVDrk
KMOVQrk
KMOVWrk
VFMADDSUB213PDZrk
VFMSUB213PDZrk
VFNMSUB213PDZrk
VFMSUBADD213PDZrk
VFMADD213PDZrk
VFNMADD213PDZrk
VFMADDSUB213PSZrk
VFMSUB213PSZrk
VFNMSUB213PSZrk
VFMSUBADD213PSZrk
VFMADD213PSZrk
VFNMADD213PSZrk
VMOVDQA32Z256mrk
VMOVDQU32Z256mrk
VMOVDQA64Z256mrk
VMOVDQU64Z256mrk
VMOVDQU16Z256mrk
VMOVDQU8Z256mrk
VMOVAPDZ256mrk
VMOVUPDZ256mrk
VMOVAPSZ256mrk
VMOVUPSZ256mrk
VMOVDQA32Z128mrk
VMOVDQU32Z128mrk
VMOVDQA64Z128mrk
VMOVDQU64Z128mrk
VMOVDQU16Z128mrk
VMOVDQU8Z128mrk
VMOVAPDZ128mrk
VMOVUPDZ128mrk
VMOVAPSZ128mrk
VMOVUPSZ128mrk
VPMOVUSDBmrk
VPMOVSDBmrk
VPMOVDBmrk
VPMOVUSQBmrk
VPMOVSQBmrk
VPMOVQBmrk
VPMOVUSQDmrk
VPMOVSQDmrk
VPMOVQDmrk
VPMOVUSDWmrk
VPMOVSDWmrk
VPMOVDWmrk
VPMOVUSQWmrk
VPMOVSQWmrk
VPMOVQWmrk
VMOVDQA32Zmrk
VMOVDQU32Zmrk
VMOVDQA64Zmrk
VMOVDQU64Zmrk
VMOVDQU16Zmrk
VMOVDQU8Zmrk
VMOVAPDZmrk
VMOVUPDZmrk
VMOVAPSZmrk
VMOVUPSZmrk
VMOVDQA32Z256rrk
VMOVDQU32Z256rrk
VMOVDQA64Z256rrk
VMOVDQU64Z256rrk
VMOVDQU16Z256rrk
VMOVDQU8Z256rrk
VMOVAPDZ256rrk
VMOVUPDZ256rrk
VMOVAPSZ256rrk
VMOVUPSZ256rrk
VMOVDQA32Z128rrk
VMOVDQU32Z128rrk
VMOVDQA64Z128rrk
VMOVDQU64Z128rrk
VMOVDQU16Z128rrk
VMOVDQU8Z128rrk
VMOVAPDZ128rrk
VMOVUPDZ128rrk
VMOVAPSZ128rrk
VMOVUPSZ128rrk
VPMOVUSDBrrk
VPMOVSDBrrk
VPMOVDBrrk
VPMOVUSQBrrk
VPMOVSQBrrk
VPMOVQBrrk
VPERMI2Drrk
VPERMT2Drrk
VPERMI2PDrrk
VPERMT2PDrrk
VPMOVUSQDrrk
VPMOVSQDrrk
VPMOVQDrrk
VPCONFLICTDrrk
VPLZCNTDrrk
VPERMI2Qrrk
VPERMT2Qrrk
VPCONFLICTQrrk
VPLZCNTQrrk
VPERMI2PSrrk
VPERMT2PSrrk
VPMOVUSDWrrk
VPMOVSDWrrk
VPMOVDWrrk
VPMOVUSQWrrk
VPMOVSQWrrk
VPMOVQWrrk
VMOVDQA32Zrrk
VMOVDQU32Zrrk
VMOVDQA64Zrrk
VMOVDQU64Zrrk
VMOVDQU16Zrrk
VMOVDQU8Zrrk
VPSRADZrrk
VPSUBDZrrk
VPMOVSXBDZrrk
VPMOVZXBDZrrk
VPADDDZrrk
VPANDDZrrk
VPSLLDZrrk
VPMULLDZrrk
VPSRLDZrrk
VPANDNDZrrk
VMOVAPDZrrk
VSUBPDZrrk
VADDPDZrrk
VMULPDZrrk
VMINPDZrrk
VMOVUPDZrrk
VDIVPDZrrk
VMAXPDZrrk
VPORDZrrk
VPXORDZrrk
VPABSDZrrk
VPMINSDZrrk
VMOVSDZrrk
VPMAXSDZrrk
VPMINUDZrrk
VPMAXUDZrrk
VPMOVSXWDZrrk
VPMOVZXWDZrrk
VPSRAQZrrk
VPSUBQZrrk
VPMOVSXBQZrrk
VPMOVZXBQZrrk
VPADDQZrrk
VPMULDQZrrk
VPANDQZrrk
VPMULUDQZrrk
VPMOVSXDQZrrk
VPMOVZXDQZrrk
VPSLLQZrrk
VPSRLQZrrk
VPANDNQZrrk
VPORQZrrk
VPXORQZrrk
VPABSQZrrk
VPMINSQZrrk
VPMAXSQZrrk
VPMINUQZrrk
VPMAXUQZrrk
VPMOVSXWQZrrk
VPMOVZXWQZrrk
VMOVAPSZrrk
VSUBPSZrrk
VADDPSZrrk
VMULPSZrrk
VMINPSZrrk
VMOVUPSZrrk
VDIVPSZrrk
VMAXPSZrrk
VMOVSSZrrk
LD_F80m
ST_FP80m
ST_FpP80m
LD_Fp80m
VFMADDSUBPDr231m
VFMSUBPDr231m
VFNMSUBPDr231m
VFMSUBADDPDr231m
VFMADDPDr231m
VFNMADDPDr231m
VFMSUBSDr231m
VFNMSUBSDr231m
VFMADDSDr231m
VFNMADDSDr231m
VFMADDSUBPSr231m
VFMSUBPSr231m
VFNMSUBPSr231m
VFMSUBADDPSr231m
VFMADDPSr231m
VFNMADDPSr231m
VFMSUBSSr231m
VFNMSUBSSr231m
VFMADDSSr231m
VFNMADDSSr231m
VFMADDSUBPDr132m
VFMSUBPDr132m
VFNMSUBPDr132m
VFMSUBADDPDr132m
VFMADDPDr132m
VFNMADDPDr132m
VFMSUBSDr132m
VFNMSUBSDr132m
VFMADDSDr132m
VFNMADDSDr132m
VFMADDSUBPSr132m
VFMSUBPSr132m
VFNMSUBPSr132m
VFMSUBADDPSr132m
VFMADDPSr132m
VFNMADDPSr132m
VFMSUBSSr132m
VFNMSUBSSr132m
VFMADDSSr132m
VFNMADDSSr132m
LOCK_DEC32m
LOCK_INC32m
SUB_F32m
ADD_F32m
ILD_F32m
MUL_F32m
SUBR_F32m
DIVR_F32m
IST_F32m
DIV_F32m
NEG32m
SUB_FI32m
ADD_FI32m
MUL_FI32m
SUBR_FI32m
DIVR_FI32m
DIV_FI32m
FARCALL32m
IMUL32m
FCOM32m
FICOM32m
IST_FP32m
ISTT_FP32m
FARJMP32m
FCOMP32m
FICOMP32m
ST_FpP32m
LGDT32m
SGDT32m
LIDT32m
SIDT32m
NOT32m
IDIV32m
DEC64_32m
INC64_32m
SUB_Fp32m
ADD_Fp32m
LD_Fp32m
MUL_Fp32m
SUBR_Fp32m
DIVR_Fp32m
ST_Fp32m
DIV_Fp32m
VFMADDSUBPDr213m
VFMSUBPDr213m
VFNMSUBPDr213m
VFMSUBADDPDr213m
VFMADDPDr213m
VFNMADDPDr213m
VFMSUBSDr213m
VFNMSUBSDr213m
VFMADDSDr213m
VFNMADDSDr213m
VFMADDSUBPSr213m
VFMSUBPSr213m
VFNMSUBPSr213m
VFMSUBADDPSr213m
VFMADDPSr213m
VFNMADDPSr213m
VFMSUBSSr213m
VFNMSUBSSr213m
VFMADDSSr213m
VFNMADDSSr213m
LOCK_DEC64m
LOCK_INC64m
SUB_F64m
ADD_F64m
ILD_F64m
MUL_F64m
SUBR_F64m
DIVR_F64m
ST_F64m
DIV_F64m
NEG64m
CALL64m
IMUL64m
FCOM64m
IST_FP64m
ISTT_FP64m
JMP64m
FCOMP64m
ST_FpP64m
LGDT64m
SGDT64m
LIDT64m
SIDT64m
SLDT64m
NOT64m
IDIV64m
SUB_Fp64m
ADD_Fp64m
LD_Fp64m
MUL_Fp64m
SUBR_Fp64m
DIVR_Fp64m
ST_Fp64m
DIV_Fp64m
LOCK_DEC16m
LOCK_INC16m
ILD_F16m
IST_F16m
NEG16m
SUB_FI16m
ADD_FI16m
MUL_FI16m
SUBR_FI16m
DIVR_FI16m
DIV_FI16m
FARCALL16m
IMUL16m
FICOM16m
IST_FP16m
ISTT_FP16m
FARJMP16m
FICOMP16m
LGDT16m
SGDT16m
LIDT16m
SIDT16m
LLDT16m
SLDT16m
NOT16m
IDIV16m
FLDCW16m
FNSTCW16m
LMSW16m
SMSW16m
DEC64_16m
INC64_16m
LOCK_DEC8m
LOCK_INC8m
NEG8m
IMUL8m
NOT8m
IDIV8m
SETAm
SETBm
FBLDm
VMPTRLDm
VGATHERPF0DPDm
VSCATTERPF0DPDm
VGATHERPF1DPDm
VSCATTERPF1DPDm
VROUNDPDm
VGATHERPF0QPDm
VSCATTERPF0QPDm
VGATHERPF1QPDm
VSCATTERPF1QPDm
VSQRTPDm
VROUNDYPDm
VROUNDSDm
VRNDSCALESDm
VSQRTSDm
SETAEm
SETBEm
SETGEm
SETLEm
SETNEm
SETEm
FSAVEm
SETGm
SETLm
SETNOm
SETOm
TAILJMPm
SETNPm
SETPm
FBSTPm
VMCLEARm
FRSTORm
VERRm
LTRm
STRm
SETNSm
VGATHERPF0DPSm
VSCATTERPF0DPSm
VGATHERPF1DPSm
VSCATTERPF1DPSm
VROUNDPSm
VRCPPSm
VGATHERPF0QPSm
VSCATTERPF0QPSm
VGATHERPF1QPSm
VSCATTERPF1QPSm
VRSQRTPSm
VSQRTPSm
VROUNDYPSm
VROUNDSSm
VRNDSCALESSm
VRCPSSm
VRSQRTSSm
VSQRTSSm
SETSm
VMPTRSTm
FLDENVm
FSTENVm
VERWm
FNSTSWm
VSQRTPDYm
VRCPPSYm
VRSQRTPSYm
VSQRTPSYm
VFMADDSUB132PDZm
VFMSUB132PDZm
VFNMSUB132PDZm
VFMSUBADD132PDZm
VFMADD132PDZm
VFNMADD132PDZm
VFMADDSUB213PDZm
VFMSUB213PDZm
VFNMSUB213PDZm
VFMSUBADD213PDZm
VFMADD213PDZm
VFNMADD213PDZm
VRCP14PDZm
VRSQRT14PDZm
VRCP28PDZm
VRSQRT28PDZm
VRNDSCALEPDZm
VFMSUBSDZm
VFNMSUBSDZm
VFMADDSDZm
VFNMADDSDZm
VSQRTSDZm
VFMADDSUB132PSZm
VFMSUB132PSZm
VFNMSUB132PSZm
VFMSUBADD132PSZm
VFMADD132PSZm
VFNMADD132PSZm
VFMADDSUB213PSZm
VFMSUB213PSZm
VFNMSUB213PSZm
VFMSUBADD213PSZm
VFMADD213PSZm
VFNMADD213PSZm
VRCP14PSZm
VRSQRT14PSZm
VRCP28PSZm
VRSQRT28PSZm
VRNDSCALEPSZm
VFMSUBSSZm
VFNMSUBSSZm
VFMADDSSZm
VFNMADDSSZm
VSQRTSSZm
KMOVBkm
KMOVDkm
KMOVQkm
KMOVWkm
PUSH32rmm
POP32rmm
PUSH64rmm
POP64rmm
PUSH16rmm
POP16rmm
SHA1MSG1rm
SHA256MSG1rm
PFRCPIT1rm
PFRSQIT1rm
CMOVA32rm
SBB32rm
SUB32rm
CMOVB32rm
ADC32rm
BLCIC32rm
BLSIC32rm
T1MSKC32rm
VMREAD32rm
XADD32rm
AND32rm
CMOVAE32rm
CMOVBE32rm
CMOVGE32rm
CMOVLE32rm
CMOVNE32rm
VMWRITE32rm
CMOVE32rm
BSF32rm
CMPXCHG32rm
CMOVG32rm
BLCI32rm
BZHI32rm
BLSI32rm
BLCMSK32rm
BLSMSK32rm
TZMSK32rm
BLCFILL32rm
BLSFILL32rm
LSL32rm
IMUL32rm
CMOVL32rm
ANDN32rm
CMOVNO32rm
CMOVO32rm
PDEP32rm
CMP32rm
CMOVNP32rm
CMOVP32rm
LAR32rm
XOR32rm
BSR32rm
BLSR32rm
BEXTR32rm
BLCS32rm
LDS32rm
BOUNDS32rm
LES32rm
LFS32rm
LGS32rm
CMOVNS32rm
LSS32rm
CMOVS32rm
POPCNT32rm
LZCNT32rm
TZCNT32rm
TEST32rm
PEXT32rm
ACQUIRE_MOV32rm
ADCX32rm
SHLX32rm
MULX32rm
ADOX32rm
SARX32rm
SHRX32rm
SHA1MSG2rm
SHA256MSG2rm
SHA256RNDS2rm
PFRCPIT2rm
CMOVA64rm
SBB64rm
SUB64rm
CMOVB64rm
ADC64rm
BLCIC64rm
BLSIC64rm
T1MSKC64rm
VMREAD64rm
XADD64rm
AND64rm
Int_VCVTSI2SD64rm
Int_CVTSI2SD64rm
MMX_MOVD64rm
CMOVAE64rm
CMOVBE64rm
CMOVGE64rm
CMOVLE64rm
CMOVNE64rm
VMWRITE64rm
CMOVE64rm
BSF64rm
CMPXCHG64rm
CMOVG64rm
BLCI64rm
BZHI64rm
Int_VCVTTSD2SI64rm
Int_CVTTSD2SI64rm
VCVTSD2SI64rm
Int_VCVTTSS2SI64rm
Int_CVTTSS2SI64rm
VCVTSS2SI64rm
BLSI64rm
BLCMSK64rm
BLSMSK64rm
TZMSK64rm
BLCFILL64rm
BLSFILL64rm
LSL64rm
IMUL64rm
CMOVL64rm
ANDN64rm
CMOVNO64rm
CMOVO64rm
PDEP64rm
CMP64rm
CMOVNP64rm
CMOVP64rm
MMX_MOVQ64rm
LAR64rm
XOR64rm
BSR64rm
BLSR64rm
BEXTR64rm
BLCS64rm
LFS64rm
LGS64rm
CMOVNS64rm
Int_VCVTSI2SS64rm
Int_CVTSI2SS64rm
LSS64rm
CMOVS64rm
POPCNT64rm
LZCNT64rm
TZCNT64rm
TEST64rm
PEXT64rm
ACQUIRE_MOV64rm
ADCX64rm
SHLX64rm
MULX64rm
ADOX64rm
SARX64rm
SHRX64rm
VFMADDSUBPD4rm
VFMSUBPD4rm
VFNMSUBPD4rm
VFMSUBADDPD4rm
VFMADDPD4rm
VFNMADDPD4rm
VFMSUBSD4rm
VFNMSUBSD4rm
VFMADDSD4rm
VFNMADDSD4rm
VFMADDSUBPS4rm
VFMSUBPS4rm
VFNMSUBPS4rm
VFMSUBADDPS4rm
VFMADDPS4rm
VFNMADDPS4rm
VFMSUBSS4rm
VFNMSUBSS4rm
VFMADDSS4rm
VFNMADDSS4rm
VBROADCASTI32X4rm
VBROADCASTI64X4rm
VINSERTF32x4rm
VINSERTI32x4rm
VINSERTF64x4rm
VINSERTI64x4rm
CMOVA16rm
SBB16rm
SUB16rm
CMOVB16rm
ADC16rm
XADD16rm
AND16rm
CMOVAE16rm
CMOVBE16rm
CMOVGE16rm
CMOVLE16rm
CMOVNE16rm
CMOVE16rm
BSF16rm
CMPXCHG16rm
CMOVG16rm
LSL16rm
IMUL16rm
CMOVL16rm
CMOVNO16rm
CMOVO16rm
CMP16rm
CMOVNP16rm
CMOVP16rm
LAR16rm
XOR16rm
BSR16rm
LDS16rm
BOUNDS16rm
LES16rm
LFS16rm
LGS16rm
CMOVNS16rm
LSS16rm
CMOVS16rm
POPCNT16rm
LZCNT16rm
TZCNT16rm
TEST16rm
ACQUIRE_MOV16rm
VPALIGNR256rm
VMOVDQA32Z256rm
VMOVDQU32Z256rm
VMOVDQA64Z256rm
VMOVDQU64Z256rm
VMOVDQU16Z256rm
VMOVDQU8Z256rm
VMOVNTDQAZ256rm
VMOVAPDZ256rm
VMOVUPDZ256rm
VMOVAPSZ256rm
VMOVUPSZ256rm
VPERM2F128rm
VINSERTF128rm
VPERM2I128rm
VINSERTI128rm
VPCMPESTRM128rm
VPCMPISTRM128rm
VPALIGNR128rm
VAESKEYGENASSIST128rm
VMOVDQA32Z128rm
VMOVDQU32Z128rm
VMOVDQA64Z128rm
VMOVDQU64Z128rm
VMOVDQU16Z128rm
VMOVDQU8Z128rm
VMOVNTDQAZ128rm
VMOVAPDZ128rm
VMOVUPDZ128rm
VMOVAPSZ128rm
VMOVUPSZ128rm
SBB8rm
SUB8rm
ADC8rm
XADD8rm
AND8rm
CMPXCHG8rm
CMP8rm
XOR8rm
TEST8rm
ACQUIRE_MOV8rm
VMOVNTDQArm
VMOVDQArm
VPSHABrm
VPSUBBrm
VPADDBrm
VPSHUFBrm
VPAVGBrm
VPSHLBrm
VPSIGNBrm
VPCMPEQBrm
VPINSRBrm
VPSUBSBrm
VPADDSBrm
VPMINSBrm
VPSUBUSBrm
VPADDUSBrm
PAVGUSBrm
VPMAXSBrm
VPCMPGTBrm
VPROTBrm
VPBROADCASTBrm
VPMINUBrm
PFSUBrm
VPMAXUBrm
VPBLENDVBrm
VPACKSSWBrm
VPACKUSWBrm
PFACCrm
PFNACCrm
PFPNACCrm
VAESDECrm
VAESIMCrm
VAESENCrm
VPERMI2Drm
VPERMT2Drm
VPSHADrm
VPSRADrm
MMX_PSRADrm
VPHADDBDrm
VPHADDUBDrm
VPHSUBDrm
VPSUBDrm
VPMOVSXBDrm
VPMOVZXBDrm
PFADDrm
VPHADDDrm
VPADDDrm
VPGATHERDDrm
VPMACSDDrm
VPMACSSDDrm
PI2FDrm
PF2IDrm
VPSHLDrm
VPSLLDrm
MMX_PSLLDrm
VPMULLDrm
VPSRLDrm
MMX_PSRLDrm
VPANDrm
VPSIGNDrm
VPERMI2PDrm
VPERMIL2PDrm
VCVTDQ2PDrm
VCVTPS2PDrm
VPERMT2PDrm
FsVMOVAPDrm
FsMOVAPDrm
PSWAPDrm
VADDSUBPDrm
VHSUBPDrm
VSUBPDrm
VMINCPDrm
VMAXCPDrm
VHADDPDrm
VADDPDrm
VANDPDrm
VFsANDPDrm
VGATHERDPDrm
VUNPCKHPDrm
VMOVHPDrm
VPERMILPDrm
VUNPCKLPDrm
VMULPDrm
VMOVLPDrm
VANDNPDrm
VFsANDNPDrm
VMINPDrm
VGATHERQPDrm
VORPDrm
VXORPDrm
VFsXORPDrm
VFsORPDrm
VTESTPDrm
VMOVUPDrm
VBLENDVPDrm
VDIVPDrm
VMASKMOVPDrm
VMAXPDrm
VFRCZPDrm
VPCMPEQDrm
VPGATHERQDrm
VPINSRDrm
Int_VCVTSI2SDrm
Int_CVTSI2SDrm
Int_VCVTSS2SDrm
Int_CVTSS2SDrm
VRCP14SDrm
VRSQRT14SDrm
VRCP28SDrm
VRSQRT28SDrm
VSUBSDrm
VMINCSDrm
VMAXCSDrm
VADDSDrm
Int_VUCOMISDrm
Int_UCOMISDrm
Int_VCOMISDrm
Int_COMISDrm
VMULSDrm
VPMINSDrm
VMINSDrm
Int_VCMPSDrm
Int_CMPSDrm
VDIVSDrm
VMOVSDrm
VPMAXSDrm
VMAXSDrm
VFRCZSDrm
VMOV64toSDrm
VPCONFLICTDrm
VPCMPGTDrm
VPLZCNTDrm
VPROTDrm
VPBROADCASTDrm
VPMINUDrm
VPMAXUDrm
VPSRAVDrm
VPSLLVDrm
VPSRLVDrm
VPMASKMOVDrm
VPHSUBWDrm
VPHADDWDrm
VPMADDWDrm
VPUNPCKHWDrm
VPUNPCKLWDrm
VPMACSWDrm
VPMADCSWDrm
VPMACSSWDrm
VPMADCSSWDrm
VPHADDUWDrm
VPMOVSXWDrm
VPMOVZXWDrm
PFCMPGErm
SHA1NEXTErm
VPMACSDQHrm
VPMACSSDQHrm
VMOVDI2PDIrm
VMOVQI2PQIrm
VMOVZQI2PQIrm
VMOVZPQILo2PQIrm
VPCMPESTRIrm
VPCMPISTRIrm
Int_VCVTTSD2SIrm
Int_CVTTSD2SIrm
VCVTSD2SIrm
Int_VCVTTSS2SIrm
Int_CVTTSS2SIrm
VCVTSS2SIrm
VPMACSDQLrm
VPMACSSDQLrm
PFMULrm
VPPERMrm
VPANDNrm
PFMINrm
PFRCPrm
VMOVDDUPrm
VMOVSHDUPrm
VMOVSLDUPrm
VPERMI2Qrm
VPERMT2Qrm
VPSHAQrm
VPHADDBQrm
VPHADDUBQrm
VPSUBQrm
VPMOVSXBQrm
VPMOVZXBQrm
CVTTPD2DQrm
CVTPD2DQrm
VCVTTPS2DQrm
VCVTPS2DQrm
VPHSUBDQrm
VPADDQrm
VPHADDDQrm
VPUNPCKHDQrm
VPUNPCKLDQrm
VPMULDQrm
VPUNPCKHQDQrm
VPUNPCKLQDQrm
VPCLMULQDQrm
VPGATHERDQrm
VPHADDUDQrm
VPMULUDQrm
VPMOVSXDQrm
VPMOVZXDQrm
PFCMPEQrm
VPSHLQrm
VPSLLQrm
MMX_PSLLQrm
VPSRLQrm
MMX_PSRLQrm
VPCMPEQQrm
VPGATHERQQrm
VPINSRQrm
VPCONFLICTQrm
VPCMPGTQrm
VPLZCNTQrm
VPROTQrm
VPBROADCASTQrm
VPSLLVQrm
VPSRLVQrm
VPMASKMOVQrm
VPHADDWQrm
VPHADDUWQrm
VPMOVSXWQrm
VPMOVZXWQrm
PFSUBRrm
VPORrm
VPXORrm
CVTPD2PSrm
VCVTPH2PSrm
VPERMI2PSrm
VPERMIL2PSrm
VCVTDQ2PSrm
VPERMT2PSrm
FsVMOVAPSrm
FsMOVAPSrm
VADDSUBPSrm
VHSUBPSrm
VSUBPSrm
VMINCPSrm
VMAXCPSrm
VHADDPSrm
VADDPSrm
VANDPSrm
VFsANDPSrm
VGATHERDPSrm
VUNPCKHPSrm
VMOVHPSrm
VPERMILPSrm
VUNPCKLPSrm
VMULPSrm
VMOVLPSrm
VANDNPSrm
VFsANDNPSrm
VMINPSrm
VGATHERQPSrm
VORPSrm
VXORPSrm
VFsXORPSrm
VFsORPSrm
VINSERTPSrm
VTESTPSrm
VMOVUPSrm
VBLENDVPSrm
VDIVPSrm
VMASKMOVPSrm
VMAXPSrm
VFRCZPSrm
Int_VCVTSD2SSrm
Int_CVTSD2SSrm
VMOVDI2SSrm
Int_VCVTSI2SSrm
Int_CVTSI2SSrm
VRCP14SSrm
VRSQRT14SSrm
VRCP28SSrm
VRSQRT28SSrm
VSUBSSrm
VMINCSSrm
VMAXCSSrm
VADDSSrm
Int_VUCOMISSrm
Int_UCOMISSrm
Int_VCOMISSrm
Int_COMISSrm
VMULSSrm
VMINSSrm
Int_VCMPSSrm
Int_CMPSSrm
VBROADCASTSSrm
VDIVSSrm
VMOVSSrm
VMAXSSrm
VFRCZSSrm
PFCMPGTrm
PFRSQRTrm
VAESDECLASTrm
VAESENCLASTrm
VPTESTrm
VLDDQUrm
VMOVDQUrm
VPCMOVrm
VPSHAWrm
VPSRAWrm
MMX_PSRAWrm
VPHSUBBWrm
VPSADBWrm
VPHADDBWrm
VPUNPCKHBWrm
VPUNPCKLBWrm
VPHADDUBWrm
VPHSUBWrm
VPSUBWrm
VPMOVSXBWrm
VPMOVZXBWrm
VPHADDWrm
VPADDWrm
VPACKSSDWrm
VPACKUSDWrm
PI2FWrm
VPAVGWrm
VPMULHWrm
PF2IWrm
VPSHLWrm
VPSLLWrm
MMX_PSLLWrm
VPMULLWrm
VPSRLWrm
MMX_PSRLWrm
VPSIGNWrm
VPCMPEQWrm
PMULHRWrm
VPSUBSWrm
VPADDSWrm
VPMINSWrm
VPSUBUSWrm
VPADDUSWrm
VPMAXSWrm
VPCMPGTWrm
VPROTWrm
VPBROADCASTWrm
VPMULHUWrm
VPMINUWrm
VPMAXUWrm
VPMACSWWrm
VPMACSSWWrm
PFMAXrm
VCVTTPD2DQXrm
VCVTPD2DQXrm
VCVTPD2PSXrm
VMOVNTDQAYrm
VMOVDQAYrm
VPSUBBYrm
VPADDBYrm
VPSHUFBYrm
VPAVGBYrm
VPSIGNBYrm
VPCMPEQBYrm
VPSUBSBYrm
VPADDSBYrm
VPMINSBYrm
VPSUBUSBYrm
VPADDUSBYrm
VPMAXSBYrm
VPCMPGTBYrm
VPBROADCASTBYrm
VPMINUBYrm
VPMAXUBYrm
VPBLENDVBYrm
VPACKSSWBYrm
VPACKUSWBYrm
VPSRADYrm
VPHSUBDYrm
VPSUBDYrm
VPMOVSXBDYrm
VPMOVZXBDYrm
VPHADDDYrm
VPADDDYrm
VPGATHERDDYrm
VPSLLDYrm
VPMULLDYrm
VPSRLDYrm
VPERMDYrm
VPANDYrm
VPSIGNDYrm
VCVTDQ2PDYrm
VCVTPS2PDYrm
VMOVAPDYrm
VADDSUBPDYrm
VHSUBPDYrm
VSUBPDYrm
VMINCPDYrm
VMAXCPDYrm
VHADDPDYrm
VADDPDYrm
VANDPDYrm
VGATHERDPDYrm
VUNPCKHPDYrm
VPERMILPDYrm
VUNPCKLPDYrm
VMULPDYrm
VANDNPDYrm
VMINPDYrm
VGATHERQPDYrm
VORPDYrm
VXORPDYrm
VTESTPDYrm
VMOVUPDYrm
VBLENDVPDYrm
VDIVPDYrm
VMASKMOVPDYrm
VMAXPDYrm
VPCMPEQDYrm
VPGATHERQDYrm
VPMINSDYrm
VBROADCASTSDYrm
VPMAXSDYrm
VPCMPGTDYrm
VPBROADCASTDYrm
VPMINUDYrm
VPMAXUDYrm
VPSRAVDYrm
VPSLLVDYrm
VPSRLVDYrm
VPMASKMOVDYrm
VPMADDWDYrm
VPUNPCKHWDYrm
VPUNPCKLWDYrm
VPMOVSXWDYrm
VPMOVZXWDYrm
VPANDNYrm
VMOVDDUPYrm
VMOVSHDUPYrm
VMOVSLDUPYrm
VPSUBQYrm
VPMOVSXBQYrm
VPMOVZXBQYrm
VCVTTPD2DQYrm
VCVTPD2DQYrm
VCVTTPS2DQYrm
VCVTPS2DQYrm
VPADDQYrm
VPUNPCKHDQYrm
VPUNPCKLDQYrm
VPMULDQYrm
VPUNPCKHQDQYrm
VPUNPCKLQDQYrm
VPGATHERDQYrm
VPMULUDQYrm
VPMOVSXDQYrm
VPMOVZXDQYrm
VPSLLQYrm
VPSRLQYrm
VPCMPEQQYrm
VPGATHERQQYrm
VPCMPGTQYrm
VPBROADCASTQYrm
VPSLLVQYrm
VPSRLVQYrm
VPMASKMOVQYrm
VPMOVSXWQYrm
VPMOVZXWQYrm
VPORYrm
VPXORYrm
VCVTPD2PSYrm
VCVTPH2PSYrm
VCVTDQ2PSYrm
VMOVAPSYrm
VADDSUBPSYrm
VHSUBPSYrm
VSUBPSYrm
VMINCPSYrm
VMAXCPSYrm
VHADDPSYrm
VADDPSYrm
VANDPSYrm
VGATHERDPSYrm
VUNPCKHPSYrm
VPERMILPSYrm
VUNPCKLPSYrm
VMULPSYrm
VPERMPSYrm
VANDNPSYrm
VMINPSYrm
VGATHERQPSYrm
VORPSYrm
VXORPSYrm
VTESTPSYrm
VMOVUPSYrm
VBLENDVPSYrm
VDIVPSYrm
VMASKMOVPSYrm
VMAXPSYrm
VBROADCASTSSYrm
VPTESTYrm
VLDDQUYrm
VMOVDQUYrm
VPSRAWYrm
VPSADBWYrm
VPUNPCKHBWYrm
VPUNPCKLBWYrm
VPHSUBWYrm
VPSUBWYrm
VPMOVSXBWYrm
VPMOVZXBWYrm
VPHADDWYrm
VPADDWYrm
VPACKSSDWYrm
VPACKUSDWYrm
VPAVGWYrm
VPMULHWYrm
VPSLLWYrm
VPMULLWYrm
VPSRLWYrm
VPSIGNWYrm
VPCMPEQWYrm
VPSUBSWYrm
VPADDSWYrm
VPMINSWYrm
VPSUBUSWYrm
VPADDUSWYrm
VPMAXSWYrm
VPCMPGTWYrm
VPBROADCASTWYrm
VPMULHUWYrm
VPMINUWYrm
VPMAXUWYrm
VMOVDQA32Zrm
VMOVDQU32Zrm
VMOVDQA64Zrm
Int_VCVTSI2SD64Zrm
Int_VCVTUSI2SD64Zrm
Int_VCVTTSD2SI64Zrm
VCVTSD2SI64Zrm
Int_VCVTTSS2SI64Zrm
VCVTSS2SI64Zrm
Int_VCVTTSD2USI64Zrm
VCVTSD2USI64Zrm
Int_VCVTTSS2USI64Zrm
VCVTSS2USI64Zrm
Int_VCVTSI2SS64Zrm
Int_VCVTUSI2SS64Zrm
VMOVDQU64Zrm
VMOVDQU16Zrm
VMOVDQU8Zrm
VMOVNTDQAZrm
VPSRADZrm
VPSUBDZrm
VPMOVSXBDZrm
VPMOVZXBDZrm
VPADDDZrm
VPANDDZrm
VPGATHERDDZrm
VPSLLDZrm
VPMULLDZrm
VPSRLDZrm
VPBLENDMDZrm
VPTESTNMDZrm
VPERMDZrm
VPTESTMDZrm
VPANDNDZrm
VCVTDQ2PDZrm
VCVTUDQ2PDZrm
VCVTPS2PDZrm
VMOVAPDZrm
VSUBPDZrm
VADDPDZrm
VGATHERDPDZrm
VUNPCKHPDZrm
VUNPCKLPDZrm
VMULPDZrm
VBLENDMPDZrm
VPERMPDZrm
VMINPDZrm
VGATHERQPDZrm
VSQRTPDZrm
VMOVUPDZrm
VDIVPDZrm
VMAXPDZrm
VPCMPEQDZrm
VPGATHERQDZrm
VPORDZrm
VPXORDZrm
VCVTSI642SDZrm
VCVTUSI642SDZrm
Int_VCVTSI2SDZrm
Int_VCVTUSI2SDZrm
VCVTSS2SDZrm
VPABSDZrm
VSUBSDZrm
VADDSDZrm
Int_VUCOMISDZrm
Int_VCOMISDZrm
VMULSDZrm
VPMINSDZrm
VMINSDZrm
VCMPSDZrm
VBROADCASTSDZrm
VDIVSDZrm
VMOVSDZrm
VPMAXSDZrm
VMAXSDZrm
VPCMPGTDZrm
VPBROADCASTDZrm
VPMINUDZrm
VPMAXUDZrm
VPSRAVDZrm
VPSLLVDZrm
VPSRLVDZrm
VPMOVSXWDZrm
VPMOVZXWDZrm
VMOVDI2PDIZrm
VMOVQI2PQIZrm
VMOVZPQILo2PQIZrm
Int_VCVTTSD2SIZrm
VCVTSD2SIZrm
Int_VCVTTSS2SIZrm
VCVTSS2SIZrm
Int_VCVTTSD2USIZrm
VCVTSD2USIZrm
Int_VCVTTSS2USIZrm
VCVTSS2USIZrm
VMOVDDUPZrm
VMOVSHDUPZrm
VMOVSLDUPZrm
VPSRAQZrm
VPSUBQZrm
VPMOVSXBQZrm
VPMOVZXBQZrm
VCVTTPD2DQZrm
VCVTPD2DQZrm
VCVTTPS2DQZrm
VCVTPS2DQZrm
VPADDQZrm
VPUNPCKHDQZrm
VPUNPCKLDQZrm
VPMULDQZrm
VPANDQZrm
VPUNPCKHQDQZrm
VPUNPCKLQDQZrm
VPGATHERDQZrm
VCVTTPD2UDQZrm
VCVTPD2UDQZrm
VCVTTPS2UDQZrm
VCVTPS2UDQZrm
VPMULUDQZrm
VPMOVSXDQZrm
VPMOVZXDQZrm
VPSLLQZrm
VPSRLQZrm
VPBLENDMQZrm
VPTESTNMQZrm
VPERMQZrm
VPTESTMQZrm
VPANDNQZrm
VPCMPEQQZrm
VPGATHERQQZrm
VPORQZrm
VPXORQZrm
VPABSQZrm
VPMINSQZrm
VPMAXSQZrm
VPCMPGTQZrm
VPBROADCASTQZrm
VPMINUQZrm
VPMAXUQZrm
VPSRAVQZrm
VPSLLVQZrm
VPSRLVQZrm
VPMOVSXWQZrm
VPMOVZXWQZrm
VCVTPD2PSZrm
VCVTPH2PSZrm
VCVTDQ2PSZrm
VCVTUDQ2PSZrm
VMOVAPSZrm
VSUBPSZrm
VADDPSZrm
VGATHERDPSZrm
VUNPCKHPSZrm
VUNPCKLPSZrm
VMULPSZrm
VBLENDMPSZrm
VPERMPSZrm
VMINPSZrm
VGATHERQPSZrm
VSQRTPSZrm
VMOVUPSZrm
VDIVPSZrm
VMAXPSZrm
VCVTSI642SSZrm
VCVTUSI642SSZrm
VCVTSD2SSZrm
VMOVDI2SSZrm
Int_VCVTSI2SSZrm
Int_VCVTUSI2SSZrm
VSUBSSZrm
VADDSSZrm
Int_VUCOMISSZrm
Int_VCOMISSZrm
VMULSSZrm
VMINSSZrm
VCMPSSZrm
VBROADCASTSSZrm
VDIVSSZrm
VMOVSSZrm
VMAXSSZrm
MMX_PALIGNR64irm
MMX_PSUBBirm
MMX_PADDBirm
MMX_PAVGBirm
MMX_PCMPEQBirm
MMX_PSUBSBirm
MMX_PADDSBirm
MMX_PSUBUSBirm
MMX_PADDUSBirm
MMX_PCMPGTBirm
MMX_PMINUBirm
MMX_PMAXUBirm
MMX_PACKSSWBirm
MMX_PACKUSWBirm
MMX_PSUBDirm
MMX_PADDDirm
MMX_PANDirm
MMX_CVTPI2PDirm
MMX_PCMPEQDirm
MMX_PCMPGTDirm
MMX_PMADDWDirm
MMX_PUNPCKHWDirm
MMX_PUNPCKLWDirm
MMX_CVTTPD2PIirm
MMX_CVTPD2PIirm
MMX_CVTTPS2PIirm
MMX_CVTPS2PIirm
MMX_PANDNirm
MMX_PSUBQirm
MMX_PADDQirm
MMX_PUNPCKHDQirm
MMX_PUNPCKLDQirm
MMX_PMULUDQirm
MMX_PORirm
MMX_PXORirm
MMX_CVTPI2PSirm
MMX_PSADBWirm
MMX_PUNPCKHBWirm
MMX_PUNPCKLBWirm
MMX_PSUBWirm
MMX_PADDWirm
MMX_PACKSSDWirm
MMX_PAVGWirm
MMX_PMULHWirm
MMX_PMULLWirm
MMX_PCMPEQWirm
MMX_PSUBSWirm
MMX_PADDSWirm
MMX_PMINSWirm
MMX_PSUBUSWirm
MMX_PADDUSWirm
MMX_PMAXSWirm
MMX_PCMPGTWirm
MMX_PMULHUWirm
VBROADCASTI32X4krm
VBROADCASTI64X4krm
VPBROADCASTDZkrm
VPBROADCASTQZkrm
VINSERTPSzrm
MOV32sm
MOV64sm
MOV16sm
EH_SjLj_Setup
SUB_FST0r
ADD_FST0r
MUL_FST0r
COM_FST0r
COMP_FST0r
SUBR_FST0r
DIVR_FST0r
DIV_FST0r
VFMADDSUBPDr231r
VFMSUBPDr231r
VFNMSUBPDr231r
VFMSUBADDPDr231r
VFMADDPDr231r
VFNMADDPDr231r
VFMSUBSDr231r
VFNMSUBSDr231r
VFMADDSDr231r
VFNMADDSDr231r
VFMADDSUBPSr231r
VFMSUBPSr231r
VFNMSUBPSr231r
VFMSUBADDPSr231r
VFMADDPSr231r
VFNMADDPSr231r
VFMSUBSSr231r
VFNMSUBSSr231r
VFMADDSSr231r
VFNMADDSSr231r
VFMADDSUBPDr132r
VFMSUBPDr132r
VFNMSUBPDr132r
VFMSUBADDPDr132r
VFMADDPDr132r
VFNMADDPDr132r
VFMSUBSDr132r
VFNMSUBSDr132r
VFMADDSDr132r
VFNMADDSDr132r
VFMADDSUBPSr132r
VFMSUBPSr132r
VFNMSUBPSr132r
VFMSUBADDPSr132r
VFMADDPSr132r
VFNMADDPSr132r
VFMSUBSSr132r
VFNMSUBSSr132r
VFMADDSSr132r
VFNMADDSSr132r
LEA32r
DEC32r
INC32r
MOVPC32r
SETB_C32r
RDSEED32r
RDRAND32r
NEG32r
PUSH32r
CALL32r
IMUL32r
BSWAP32r
JMP32r
POP32r
STR32r
SLDT32r
NOT32r
IDIV32r
SMSW32r
DEC32_32r
INC32_32r
LEA64_32r
DEC64_32r
INC64_32r
VFMADDSUBPDr213r
VFMSUBPDr213r
VFNMSUBPDr213r
VFMSUBADDPDr213r
VFMADDPDr213r
VFNMADDPDr213r
VFMSUBSDr213r
VFNMSUBSDr213r
VFMADDSDr213r
VFNMADDSDr213r
VFMADDSUBPSr213r
VFMSUBPSr213r
VFNMSUBPSr213r
VFMSUBADDPSr213r
VFMADDPSr213r
VFNMADDPSr213r
VFMSUBSSr213r
VFNMSUBSSr213r
VFMADDSSr213r
VFNMADDSSr213r
LEA64r
DEC64r
INC64r
SETB_C64r
RDSEED64r
RDRAND64r
NEG64r
PUSH64r
CALL64r
IMUL64r
BSWAP64r
JMP64r
POP64r
STR64r
SLDT64r
NOT64r
IDIV64r
SMSW64r
LEA16r
DEC16r
INC16r
SETB_C16r
RDSEED16r
RDRAND16r
NEG16r
PUSH16r
CALL16r
IMUL16r
JMP16r
POP16r
STR16r
LLDT16r
SLDT16r
NOT16r
IDIV16r
LMSW16r
SMSW16r
FNSTSW16r
DEC32_16r
INC32_16r
DEC64_16r
INC64_16r
DEC8r
INC8r
SETB_C8r
NEG8r
IMUL8r
NOT8r
IDIV8r
SETAr
SETBr
VROUNDPDr
VSQRTPDr
VROUNDYPDr
VROUNDSDr
VRNDSCALESDr
VSQRTSDr
SETAEr
SETBEr
SETGEr
SETLEr
SETNEr
SETEr
UCOM_Fr
SETGr
UCOM_FIr
SETLr
SETNOr
SETOr
UCOM_FPr
UCOM_FIPr
TAILJMPr
SETNPr
UCOM_FPPr
SETPr
VERRr
LTRr
SETNSr
VROUNDPSr
VRCPPSr
VRSQRTPSr
VSQRTPSr
VROUNDYPSr
VROUNDSSr
VRNDSCALESSr
VRCPSSr
VRSQRTSSr
VSQRTSSr
SETSr
VERWr
VSQRTPDYr
VRCPPSYr
VRSQRTPSYr
VSQRTPSYr
VFMADDSUB213PDZr
VFMSUB213PDZr
VFNMSUB213PDZr
VFMSUBADD213PDZr
VFMADD213PDZr
VFNMADD213PDZr
VRCP14PDZr
VRSQRT14PDZr
VRCP28PDZr
VRSQRT28PDZr
VRNDSCALEPDZr
VFMSUBSDZr
VFNMSUBSDZr
VFMADDSDZr
VFNMADDSDZr
VSQRTSDZr
VFMADDSUB213PSZr
VFMSUB213PSZr
VFNMSUB213PSZr
VFMSUBADD213PSZr
VFMADD213PSZr
VFNMADD213PSZr
VRCP14PSZr
VRSQRT14PSZr
VRCP28PSZr
VRSQRT28PSZr
VRNDSCALEPSZr
VFMSUBSSZr
VFNMSUBSSZr
VFMADDSSZr
VFNMADDSSZr
VSQRTSSZr
XCHG32ar
XCHG64ar
XCHG16ar
MOV32cr
MOV64cr
MOV32dr
MOV64dr
Int_MemBarrier
OUT32ir
OUT16ir
OUT8ir
KMOVBkr
KMOVDkr
KMOVQkr
KMOVWkr
SBB32mr
LOCK_SUB32mr
ADC32mr
BTC32mr
LOCK_ADD32mr
LOCK_AND32mr
MOVBE32mr
CMP32mr
LOCK_XOR32mr
LOCK_OR32mr
BTR32mr
BTS32mr
BT32mr
RELEASE_MOV32mr
SBB64mr
LOCK_SUB64mr
ADC64mr
BTC64mr
LOCK_ADD64mr
LOCK_AND64mr
MMX_MOVD64mr
MOVBE64mr
CMP64mr
MMX_MOVQ64mr
LOCK_XOR64mr
LOCK_OR64mr
BTR64mr
BTS64mr
BT64mr
RELEASE_MOV64mr
MOVNTI_64mr
VMOVSDto64mr
VFMADDSUBPD4mr
VFMSUBPD4mr
VFNMSUBPD4mr
VFMSUBADDPD4mr
VFMADDPD4mr
VFNMADDPD4mr
VFMSUBSD4mr
VFNMSUBSD4mr
VFMADDSD4mr
VFNMADDSD4mr
VFMADDSUBPS4mr
VFMSUBPS4mr
VFNMSUBPS4mr
VFMSUBADDPS4mr
VFMADDPS4mr
VFNMADDPS4mr
VFMSUBSS4mr
VFNMSUBSS4mr
VFMADDSS4mr
VFNMADDSS4mr
VEXTRACTF32x4mr
VEXTRACTI32x4mr
VEXTRACTF64x4mr
VEXTRACTI64x4mr
SBB16mr
LOCK_SUB16mr
ADC16mr
BTC16mr
LOCK_ADD16mr
LOCK_AND16mr
MOVBE16mr
ARPL16mr
CMP16mr
LOCK_XOR16mr
LOCK_OR16mr
BTR16mr
BTS16mr
BT16mr
RELEASE_MOV16mr
VMOVDQA32Z256mr
VMOVDQU32Z256mr
VMOVDQA64Z256mr
VMOVDQU64Z256mr
VMOVDQU16Z256mr
VMOVDQU8Z256mr
VMOVAPDZ256mr
VMOVNTPDZ256mr
VMOVUPDZ256mr
VMOVNTDQZ256mr
VMOVAPSZ256mr
VMOVNTPSZ256mr
VMOVUPSZ256mr
VEXTRACTF128mr
VEXTRACTI128mr
VMOVDQA32Z128mr
VMOVDQU32Z128mr
VMOVDQA64Z128mr
VMOVDQU64Z128mr
VMOVDQU16Z128mr
VMOVDQU8Z128mr
VMOVAPDZ128mr
VMOVNTPDZ128mr
VMOVUPDZ128mr
VMOVNTDQZ128mr
VMOVAPSZ128mr
VMOVNTPSZ128mr
VMOVUPSZ128mr
SBB8mr
LOCK_SUB8mr
ADC8mr
LOCK_ADD8mr
LOCK_AND8mr
CMP8mr
LOCK_XOR8mr
LOCK_OR8mr
RELEASE_MOV8mr
VMOVDQAmr
VPSHABmr
VPMOVUSDBmr
VPMOVSDBmr
VPMOVDBmr
VPSHLBmr
VPMOVUSQBmr
VPMOVSQBmr
VPMOVQBmr
VPEXTRBmr
VPROTBmr
VPSHADmr
VPSHLDmr
VPERMIL2PDmr
VMOVAPDmr
VMOVHPDmr
VMOVLPDmr
VMOVNTPDmr
VMOVUPDmr
VMASKMOVPDmr
VPMOVUSQDmr
VPMOVSQDmr
VPMOVQDmr
VPEXTRDmr
VMOVSDmr
VPROTDmr
VPMASKMOVDmr
VCVTPS2PHmr
VMOVPDI2DImr
VMOVSS2DImr
VMOVPQI2QImr
MOVNTImr
VPPERMmr
VPSHAQmr
VMOVNTDQmr
VPSHLQmr
VPEXTRQmr
MMX_MOVNTQmr
VPROTQmr
VPMASKMOVQmr
VPERMIL2PSmr
VMOVAPSmr
VMOVHPSmr
VMOVLPSmr
VEXTRACTPSmr
VMOVNTPSmr
VMOVUPSmr
VMASKMOVPSmr
VMOVSSmr
VMOVDQUmr
VPCMOVmr
VPSHAWmr
VPMOVUSDWmr
VPMOVSDWmr
VPMOVDWmr
VPSHLWmr
VPMOVUSQWmr
VPMOVSQWmr
VPMOVQWmr
VPEXTRWmr
VPROTWmr
VMOVDQAYmr
VMOVAPDYmr
VMOVNTPDYmr
VMOVUPDYmr
VMASKMOVPDYmr
VPMASKMOVDYmr
VCVTPS2PHYmr
VMOVNTDQYmr
VPMASKMOVQYmr
VMOVAPSYmr
VMOVNTPSYmr
VMOVUPSYmr
VMASKMOVPSYmr
VMOVDQUYmr
VMOVDQA32Zmr
VMOVDQU32Zmr
VMOVDQA64Zmr
VMOVDQU64Zmr
VMOVSDto64Zmr
VMOVPQIto64Zmr
VMOVDQU16Zmr
VMOVDQU8Zmr
VPSCATTERDDZmr
VMOVAPDZmr
VSCATTERDPDZmr
VSCATTERQPDZmr
VMOVNTPDZmr
VMOVUPDZmr
VPSCATTERQDZmr
VMOVSDZmr
VCVTPS2PHZmr
VMOVPDI2DIZmr
VMOVSS2DIZmr
VPSCATTERDQZmr
VMOVNTDQZmr
VPSCATTERQQZmr
VMOVAPSZmr
VSCATTERDPSZmr
VSCATTERQPSZmr
VMOVNTPSZmr
VMOVUPSZmr
VMOVSSZmr
PUSH32rmr
POP32rmr
PUSH64rmr
POP64rmr
PUSH16rmr
POP16rmr
VEXTRACTPSzmr
SHA1MSG1rr
SHA256MSG1rr
PFRCPIT1rr
PFRSQIT1rr
CMOVA32rr
SBB32rr
SUB32rr
CMOVB32rr
ADC32rr
BLCIC32rr
BLSIC32rr
T1MSKC32rr
BTC32rr
VMREAD32rr
XADD32rr
AND32rr
CMOVAE32rr
CMOVBE32rr
CMOVGE32rr
CMOVLE32rr
CMOVNE32rr
VMWRITE32rr
CMOVE32rr
BSF32rr
CMPXCHG32rr
CMOVG32rr
BLCI32rr
BZHI32rr
BLSI32rr
BLCMSK32rr
BLSMSK32rr
TZMSK32rr
BLCFILL32rr
BLSFILL32rr
LSL32rr
IMUL32rr
CMOVL32rr
ANDN32rr
IN32rr
CMOVNO32rr
CMOVO32rr
PDEP32rr
CMP32rr
CMOVNP32rr
CMOVP32rr
LAR32rr
XOR32rr
BSR32rr
BLSR32rr
BTR32rr
BEXTR32rr
BLCS32rr
CMOVNS32rr
BTS32rr
CMOVS32rr
BT32rr
POPCNT32rr
LZCNT32rr
TZCNT32rr
TEST32rr
OUT32rr
PEXT32rr
MOV32rr
ADCX32rr
SHLX32rr
MULX32rr
ADOX32rr
SARX32rr
SHRX32rr
SHA1MSG2rr
SHA256MSG2rr
SHA256RNDS2rr
PFRCPIT2rr
CMOVA64rr
SBB64rr
SUB64rr
CMOVB64rr
ADC64rr
BLCIC64rr
BLSIC64rr
T1MSKC64rr
BTC64rr
VMREAD64rr
XADD64rr
AND64rr
Int_VCVTSI2SD64rr
Int_CVTSI2SD64rr
MMX_MOVD64rr
CMOVAE64rr
CMOVBE64rr
CMOVGE64rr
CMOVLE64rr
CMOVNE64rr
VMWRITE64rr
CMOVE64rr
BSF64rr
CMPXCHG64rr
CMOVG64rr
BLCI64rr
BZHI64rr
Int_VCVTTSD2SI64rr
Int_CVTTSD2SI64rr
VCVTSD2SI64rr
Int_VCVTTSS2SI64rr
Int_CVTTSS2SI64rr
VCVTSS2SI64rr
BLSI64rr
BLCMSK64rr
BLSMSK64rr
TZMSK64rr
BLCFILL64rr
BLSFILL64rr
LSL64rr
IMUL64rr
CMOVL64rr
ANDN64rr
CMOVNO64rr
CMOVO64rr
PDEP64rr
CMP64rr
CMOVNP64rr
CMOVP64rr
MMX_MOVQ64rr
LAR64rr
MMX_MOVQ2FR64rr
XOR64rr
BSR64rr
BLSR64rr
BTR64rr
BEXTR64rr
BLCS64rr
CMOVNS64rr
Int_VCVTSI2SS64rr
Int_CVTSI2SS64rr
BTS64rr
CMOVS64rr
BT64rr
POPCNT64rr
LZCNT64rr
TZCNT64rr
TEST64rr
PEXT64rr
MOV64rr
ADCX64rr
SHLX64rr
MULX64rr
ADOX64rr
SARX64rr
SHRX64rr
MMX_MOVD64from64rr
MMX_MOVD64to64rr
VMOVSDto64rr
VMOVPQIto64rr
VFMADDSUBPD4rr
VFMSUBPD4rr
VFNMSUBPD4rr
VFMSUBADDPD4rr
VFMADDPD4rr
VFNMADDPD4rr
VFMSUBSD4rr
VFNMSUBSD4rr
VFMADDSD4rr
VFNMADDSD4rr
VFMADDSUBPS4rr
VFMSUBPS4rr
VFNMSUBPS4rr
VFMSUBADDPS4rr
VFMADDPS4rr
VFNMADDPS4rr
VFMSUBSS4rr
VFNMSUBSS4rr
VFMADDSS4rr
VFNMADDSS4rr
VEXTRACTF32x4rr
VINSERTF32x4rr
VEXTRACTI32x4rr
VINSERTI32x4rr
VEXTRACTF64x4rr
VINSERTF64x4rr
VEXTRACTI64x4rr
VINSERTI64x4rr
CMOVA16rr
SBB16rr
SUB16rr
CMOVB16rr
ADC16rr
BTC16rr
XADD16rr
AND16rr
CMOVAE16rr
CMOVBE16rr
CMOVGE16rr
CMOVLE16rr
CMOVNE16rr
CMOVE16rr
BSF16rr
CMPXCHG16rr
CMOVG16rr
ARPL16rr
LSL16rr
IMUL16rr
CMOVL16rr
IN16rr
CMOVNO16rr
CMOVO16rr
CMP16rr
CMOVNP16rr
CMOVP16rr
LAR16rr
XOR16rr
BSR16rr
BTR16rr
CMOVNS16rr
BTS16rr
CMOVS16rr
BT16rr
POPCNT16rr
LZCNT16rr
TZCNT16rr
TEST16rr
OUT16rr
MOV16rr
VPALIGNR256rr
VMOVDQA32Z256rr
VMOVDQU32Z256rr
VMOVDQA64Z256rr
VMOVDQU64Z256rr
VMOVDQU16Z256rr
VMOVDQU8Z256rr
VMOVAPDZ256rr
VMOVUPDZ256rr
VMOVAPSZ256rr
VMOVUPSZ256rr
VPERM2F128rr
VEXTRACTF128rr
VINSERTF128rr
VPERM2I128rr
VEXTRACTI128rr
VINSERTI128rr
VPCMPESTRM128rr
VPCMPISTRM128rr
VPALIGNR128rr
VAESKEYGENASSIST128rr
VMOVDQA32Z128rr
VMOVDQU32Z128rr
VMOVDQA64Z128rr
VMOVDQU64Z128rr
VMOVDQU16Z128rr
VMOVDQU8Z128rr
VMOVAPDZ128rr
VMOVUPDZ128rr
VMOVAPSZ128rr
VMOVUPSZ128rr
SBB8rr
SUB8rr
ADC8rr
XADD8rr
AND8rr
CMPXCHG8rr
IN8rr
CMP8rr
XOR8rr
TEST8rr
OUT8rr
MOV8rr
VMOVDQArr
VPSHABrr
VPSUBBrr
VPADDBrr
KANDBrr
VPMOVUSDBrr
VPMOVSDBrr
VPMOVDBrr
VPSHUFBrr
VPAVGBrr
VPMOVMSKBrr
MMX_PMOVMSKBrr
VPSHLBrr
KANDNBrr
VPSIGNBrr
VPCMPEQBrr
VPMOVUSQBrr
VPMOVSQBrr
VPMOVQBrr
KORBrr
KXNORBrr
KXORBrr
VPINSRBrr
VPEXTRBrr
VPSUBSBrr
VPADDSBrr
VPMINSBrr
VPSUBUSBrr
VPADDUSBrr
PAVGUSBrr
VPMAXSBrr
VPCMPGTBrr
KNOTBrr
VPROTBrr
VPBROADCASTBrr
VPMINUBrr
PFSUBrr
VPMAXUBrr
VPBLENDVBrr
VPACKSSWBrr
VPACKUSWBrr
PFACCrr
PFNACCrr
PFPNACCrr
VAESDECrr
VAESIMCrr
VAESENCrr
VPERMI2Drr
VPERMT2Drr
VPBROADCASTMW2Drr
VPSHADrr
VPSRADrr
MMX_PSRADrr
VPHADDBDrr
VPHADDUBDrr
VPHSUBDrr
VPSUBDrr
VPMOVSXBDrr
VPMOVZXBDrr
PFADDrr
VPHADDDrr
VPADDDrr
KANDDrr
VPMACSDDrr
VPMACSSDDrr
PI2FDrr
PF2IDrr
VPSHLDrr
VPSLLDrr
MMX_PSLLDrr
VPMULLDrr
VPSRLDrr
MMX_PSRLDrr
VPANDrr
KANDNDrr
VPSIGNDrr
VPERMI2PDrr
VPERMIL2PDrr
VCVTDQ2PDrr
VCVTPS2PDrr
VPERMT2PDrr
VMOVAPDrr
PSWAPDrr
VADDSUBPDrr
VHSUBPDrr
VSUBPDrr
VMINCPDrr
VMAXCPDrr
VHADDPDrr
VADDPDrr
VANDPDrr
VFsANDPDrr
VUNPCKHPDrr
VMOVMSKPDrr
VPERMILPDrr
VUNPCKLPDrr
VMULPDrr
VANDNPDrr
VFsANDNPDrr
VMINPDrr
VORPDrr
VXORPDrr
VFsXORPDrr
VFsORPDrr
VTESTPDrr
VMOVUPDrr
VBLENDVPDrr
VDIVPDrr
VMAXPDrr
VFRCZPDrr
VPCMPEQDrr
VPMOVUSQDrr
VPMOVSQDrr
VPMOVQDrr
KORDrr
KXNORDrr
KXORDrr
VPINSRDrr
VPEXTRDrr
Int_VCVTSI2SDrr
Int_CVTSI2SDrr
Int_VCVTSS2SDrr
Int_CVTSS2SDrr
VRCP14SDrr
VRSQRT14SDrr
VRCP28SDrr
VRSQRT28SDrr
VSUBSDrr
VMINCSDrr
VMAXCSDrr
VADDSDrr
Int_VUCOMISDrr
Int_UCOMISDrr
Int_VCOMISDrr
Int_COMISDrr
VMULSDrr
VPMINSDrr
VMINSDrr
Int_VCMPSDrr
Int_CMPSDrr
VDIVSDrr
VMOVSDrr
VPMAXSDrr
VMAXSDrr
VFRCZSDrr
VMOV64toSDrr
VPCONFLICTDrr
VPCMPGTDrr
VPLZCNTDrr
KNOTDrr
VPROTDrr
VPBROADCASTDrr
VPMINUDrr
VPMAXUDrr
VPSRAVDrr
VPSLLVDrr
VPSRLVDrr
VPHSUBWDrr
VPHADDWDrr
VPMADDWDrr
VPUNPCKHWDrr
VPUNPCKLWDrr
VPMACSWDrr
VPMADCSWDrr
VPMACSSWDrr
VPMADCSSWDrr
VPHADDUWDrr
VPMOVSXWDrr
VPMOVZXWDrr
PFCMPGErr
SHA1NEXTErr
LD_Frr
ST_Frr
VCVTPS2PHrr
VPMACSDQHrr
VPMACSSDQHrr
VMOVPDI2DIrr
VMOVSS2DIrr
VMOVDI2PDIrr
VMOVPQI2QIrr
VMOVZQI2PQIrr
VMOVZPQILo2PQIrr
VMOV64toPQIrr
VPCMPESTRIrr
VPCMPISTRIrr
Int_VCVTTSD2SIrr
Int_CVTTSD2SIrr
VCVTSD2SIrr
Int_VCVTTSS2SIrr
Int_CVTTSS2SIrr
VCVTSS2SIrr
VPMACSDQLrr
VPMACSSDQLrr
PFMULrr
VPPERMrr
VPANDNrr
PFMINrr
PFRCPrr
ST_FPrr
VMOVDDUPrr
VMOVSHDUPrr
VMOVSLDUPrr
MMX_MOVFR642Qrr
VPBROADCASTMB2Qrr
VPERMI2Qrr
MMX_MOVDQ2Qrr
VPERMT2Qrr
VPSHAQrr
VPHADDBQrr
VPHADDUBQrr
VPSUBQrr
VPMOVSXBQrr
VPMOVZXBQrr
VCVTTPD2DQrr
VCVTPD2DQrr
MMX_MOVQ2DQrr
VCVTTPS2DQrr
VCVTPS2DQrr
VPHSUBDQrr
VPADDQrr
VPHADDDQrr
VPUNPCKHDQrr
VPUNPCKLDQrr
VPMULDQrr
KANDQrr
VPUNPCKHQDQrr
VPUNPCKLQDQrr
VPCLMULQDQrr
VPHADDUDQrr
VPMULUDQrr
VPMOVSXDQrr
VPMOVZXDQrr
PFCMPEQrr
VPSHLQrr
VPSLLQrr
MMX_PSLLQrr
VPSRLQrr
MMX_PSRLQrr
KANDNQrr
VPCMPEQQrr
KORQrr
KXNORQrr
KXORQrr
VPINSRQrr
VPEXTRQrr
VPCONFLICTQrr
VPCMPGTQrr
VPLZCNTQrr
KNOTQrr
VPROTQrr
VPBROADCASTQrr
VPSLLVQrr
VPSRLVQrr
VPHADDWQrr
VPHADDUWQrr
VPMOVSXWQrr
VPMOVZXWQrr
PFSUBRrr
VPORrr
VPXORrr
VCVTPD2PSrr
VCVTPH2PSrr
VPERMI2PSrr
VPERMIL2PSrr
VCVTDQ2PSrr
VPERMT2PSrr
VMOVAPSrr
VADDSUBPSrr
VHSUBPSrr
VSUBPSrr
VMINCPSrr
VMAXCPSrr
VHADDPSrr
VADDPSrr
VANDPSrr
VFsANDPSrr
VUNPCKHPSrr
VMOVLHPSrr
VMOVMSKPSrr
VMOVHLPSrr
VPERMILPSrr
VUNPCKLPSrr
VMULPSrr
VANDNPSrr
VFsANDNPSrr
VMINPSrr
VORPSrr
VXORPSrr
VFsXORPSrr
VFsORPSrr
VEXTRACTPSrr
VINSERTPSrr
VTESTPSrr
VMOVUPSrr
VBLENDVPSrr
VDIVPSrr
VMAXPSrr
VFRCZPSrr
Int_VCVTSD2SSrr
Int_CVTSD2SSrr
VMOVDI2SSrr
Int_VCVTSI2SSrr
Int_CVTSI2SSrr
VRCP14SSrr
VRSQRT14SSrr
VRCP28SSrr
VRSQRT28SSrr
VSUBSSrr
VMINCSSrr
VMAXCSSrr
VADDSSrr
Int_VUCOMISSrr
Int_UCOMISSrr
Int_VCOMISSrr
Int_COMISSrr
VMULSSrr
VMINSSrr
Int_VCMPSSrr
Int_CMPSSrr
VBROADCASTSSrr
VDIVSSrr
VMOVSSrr
VMAXSSrr
VFRCZSSrr
PFCMPGTrr
MWAITrr
PFRSQRTrr
VAESDECLASTrr
VAESENCLASTrr
VPTESTrr
VMOVDQUrr
VPCMOVrr
VPSHAWrr
VPSRAWrr
MMX_PSRAWrr
VPHSUBBWrr
VPSADBWrr
VPHADDBWrr
VPUNPCKHBWrr
KUNPCKBWrr
VPUNPCKLBWrr
VPHADDUBWrr
VPHSUBWrr
VPSUBWrr
VPMOVSXBWrr
VPMOVZXBWrr
VPHADDWrr
VPADDWrr
KANDWrr
VPACKSSDWrr
VPACKUSDWrr
VPMOVUSDWrr
VPMOVSDWrr
VPMOVDWrr
PI2FWrr
VPAVGWrr
VPMULHWrr
PF2IWrr
VPSHLWrr
VPSLLWrr
MMX_PSLLWrr
VPMULLWrr
VPSRLWrr
MMX_PSRLWrr
KANDNWrr
VPSIGNWrr
VPCMPEQWrr
VPMOVUSQWrr
VPMOVSQWrr
VPMOVQWrr
PMULHRWrr
KORWrr
KXNORWrr
KXORWrr
VPSUBSWrr
VPADDSWrr
VPMINSWrr
VPSUBUSWrr
VPADDUSWrr
VPMAXSWrr
VPCMPGTWrr
KNOTWrr
VPROTWrr
VPBROADCASTWrr
KORTESTWrr
VPMULHUWrr
VPMINUWrr
VPMAXUWrr
VPMACSWWrr
VPMACSSWWrr
PFMAXrr
VMOVDQAYrr
VPSUBBYrr
VPADDBYrr
VPSHUFBYrr
VPAVGBYrr
VPMOVMSKBYrr
VPSIGNBYrr
VPCMPEQBYrr
VPSUBSBYrr
VPADDSBYrr
VPMINSBYrr
VPSUBUSBYrr
VPADDUSBYrr
VPMAXSBYrr
VPCMPGTBYrr
VPBROADCASTBYrr
VPMINUBYrr
VPMAXUBYrr
VPBLENDVBYrr
VPACKSSWBYrr
VPACKUSWBYrr
VPSRADYrr
VPHSUBDYrr
VPSUBDYrr
VPMOVSXBDYrr
VPMOVZXBDYrr
VPHADDDYrr
VPADDDYrr
VPSLLDYrr
VPMULLDYrr
VPSRLDYrr
VPERMDYrr
VPANDYrr
VPSIGNDYrr
VCVTDQ2PDYrr
VCVTPS2PDYrr
VMOVAPDYrr
VADDSUBPDYrr
VHSUBPDYrr
VSUBPDYrr
VMINCPDYrr
VMAXCPDYrr
VHADDPDYrr
VADDPDYrr
VANDPDYrr
VUNPCKHPDYrr
VMOVMSKPDYrr
VPERMILPDYrr
VUNPCKLPDYrr
VMULPDYrr
VANDNPDYrr
VMINPDYrr
VORPDYrr
VXORPDYrr
VTESTPDYrr
VMOVUPDYrr
VBLENDVPDYrr
VDIVPDYrr
VMAXPDYrr
VPCMPEQDYrr
VPMINSDYrr
VBROADCASTSDYrr
VPMAXSDYrr
VPCMPGTDYrr
VPBROADCASTDYrr
VPMINUDYrr
VPMAXUDYrr
VPSRAVDYrr
VPSLLVDYrr
VPSRLVDYrr
VPMADDWDYrr
VPUNPCKHWDYrr
VPUNPCKLWDYrr
VPMOVSXWDYrr
VPMOVZXWDYrr
VCVTPS2PHYrr
VPANDNYrr
VMOVDDUPYrr
VMOVSHDUPYrr
VMOVSLDUPYrr
VPSUBQYrr
VPMOVSXBQYrr
VPMOVZXBQYrr
VCVTTPD2DQYrr
VCVTPD2DQYrr
VCVTTPS2DQYrr
VCVTPS2DQYrr
VPADDQYrr
VPUNPCKHDQYrr
VPUNPCKLDQYrr
VPMULDQYrr
VPUNPCKHQDQYrr
VPUNPCKLQDQYrr
VPMULUDQYrr
VPMOVSXDQYrr
VPMOVZXDQYrr
VPSLLQYrr
VPSRLQYrr
VPCMPEQQYrr
VPCMPGTQYrr
VPBROADCASTQYrr
VPSLLVQYrr
VPSRLVQYrr
VPMOVSXWQYrr
VPMOVZXWQYrr
VPORYrr
VPXORYrr
VCVTPD2PSYrr
VCVTPH2PSYrr
VCVTDQ2PSYrr
VMOVAPSYrr
VADDSUBPSYrr
VHSUBPSYrr
VSUBPSYrr
VMINCPSYrr
VMAXCPSYrr
VHADDPSYrr
VADDPSYrr
VANDPSYrr
VUNPCKHPSYrr
VMOVMSKPSYrr
VPERMILPSYrr
VUNPCKLPSYrr
VMULPSYrr
VPERMPSYrr
VANDNPSYrr
VMINPSYrr
VORPSYrr
VXORPSYrr
VTESTPSYrr
VMOVUPSYrr
VBLENDVPSYrr
VDIVPSYrr
VMAXPSYrr
VBROADCASTSSYrr
VPTESTYrr
VMOVDQUYrr
VPSRAWYrr
VPSADBWYrr
VPUNPCKHBWYrr
VPUNPCKLBWYrr
VPHSUBWYrr
VPSUBWYrr
VPMOVSXBWYrr
VPMOVZXBWYrr
VPHADDWYrr
VPADDWYrr
VPACKSSDWYrr
VPACKUSDWYrr
VPAVGWYrr
VPMULHWYrr
VPSLLWYrr
VPMULLWYrr
VPSRLWYrr
VPSIGNWYrr
VPCMPEQWYrr
VPSUBSWYrr
VPADDSWYrr
VPMINSWYrr
VPSUBUSWYrr
VPADDUSWYrr
VPMAXSWYrr
VPCMPGTWYrr
VPBROADCASTWYrr
VPMULHUWYrr
VPMINUWYrr
VPMAXUWYrr
VMOVDQA32Zrr
VMOVDQU32Zrr
VMOVDQA64Zrr
Int_VCVTSI2SD64Zrr
Int_VCVTUSI2SD64Zrr
Int_VCVTTSD2SI64Zrr
VCVTSD2SI64Zrr
Int_VCVTTSS2SI64Zrr
VCVTSS2SI64Zrr
Int_VCVTTSD2USI64Zrr
VCVTSD2USI64Zrr
Int_VCVTTSS2USI64Zrr
VCVTSS2USI64Zrr
Int_VCVTSI2SS64Zrr
Int_VCVTUSI2SS64Zrr
VMOVDQU64Zrr
VMOVSDto64Zrr
VMOVPQIto64Zrr
VMOVDQU16Zrr
VMOVDQU8Zrr
VPSRADZrr
VPSUBDZrr
VPMOVSXBDZrr
VPMOVZXBDZrr
VPADDDZrr
VPANDDZrr
VPSLLDZrr
VPMULLDZrr
VPSRLDZrr
VPBLENDMDZrr
VPTESTNMDZrr
VPERMDZrr
VPTESTMDZrr
VPANDNDZrr
VCVTDQ2PDZrr
VCVTUDQ2PDZrr
VCVTPS2PDZrr
VMOVAPDZrr
VSUBPDZrr
VADDPDZrr
VUNPCKHPDZrr
VUNPCKLPDZrr
VMULPDZrr
VBLENDMPDZrr
VPERMPDZrr
VMINPDZrr
VSQRTPDZrr
VMOVUPDZrr
VDIVPDZrr
VMAXPDZrr
VPCMPEQDZrr
VPORDZrr
VPXORDZrr
VCVTSI642SDZrr
VCVTUSI642SDZrr
Int_VCVTSI2SDZrr
Int_VCVTUSI2SDZrr
VCVTSS2SDZrr
VPABSDZrr
VSUBSDZrr
VADDSDZrr
Int_VUCOMISDZrr
Int_VCOMISDZrr
VMULSDZrr
VPMINSDZrr
VMINSDZrr
VCMPSDZrr
VBROADCASTSDZrr
VDIVSDZrr
VMOVSDZrr
VPMAXSDZrr
VMAXSDZrr
VMOV64toSDZrr
VPCMPGTDZrr
VPBROADCASTDZrr
VPMINUDZrr
VPMAXUDZrr
VPSRAVDZrr
VPSLLVDZrr
VPSRLVDZrr
VPMOVSXWDZrr
VPMOVZXWDZrr
VCVTPS2PHZrr
VMOVPDI2DIZrr
VMOVSS2DIZrr
VMOVDI2PDIZrr
VMOVZPQILo2PQIZrr
VMOV64toPQIZrr
Int_VCVTTSD2SIZrr
VCVTSD2SIZrr
Int_VCVTTSS2SIZrr
VCVTSS2SIZrr
Int_VCVTTSD2USIZrr
VCVTSD2USIZrr
Int_VCVTTSS2USIZrr
VCVTSS2USIZrr
VMOVDDUPZrr
VMOVSHDUPZrr
VMOVSLDUPZrr
VPSRAQZrr
VPSUBQZrr
VPMOVSXBQZrr
VPMOVZXBQZrr
VCVTTPD2DQZrr
VCVTPD2DQZrr
VCVTTPS2DQZrr
VCVTPS2DQZrr
VPADDQZrr
VPUNPCKHDQZrr
VPUNPCKLDQZrr
VPMULDQZrr
VPANDQZrr
VPUNPCKHQDQZrr
VPUNPCKLQDQZrr
VCVTTPD2UDQZrr
VCVTPD2UDQZrr
VCVTTPS2UDQZrr
VCVTPS2UDQZrr
VPMULUDQZrr
VPMOVSXDQZrr
VPMOVZXDQZrr
VPSLLQZrr
VPSRLQZrr
VPBLENDMQZrr
VPTESTNMQZrr
VPERMQZrr
VPTESTMQZrr
VPANDNQZrr
VPCMPEQQZrr
VPORQZrr
VPXORQZrr
VPABSQZrr
VPMINSQZrr
VPMAXSQZrr
VPCMPGTQZrr
VPBROADCASTQZrr
VPMINUQZrr
VPMAXUQZrr
VPSRAVQZrr
VPSLLVQZrr
VPSRLVQZrr
VPMOVSXWQZrr
VPMOVZXWQZrr
VCVTPD2PSZrr
VCVTPH2PSZrr
VCVTDQ2PSZrr
VCVTUDQ2PSZrr
VMOVAPSZrr
VSUBPSZrr
VADDPSZrr
VUNPCKHPSZrr
VMOVLHPSZrr
VMOVHLPSZrr
VUNPCKLPSZrr
VMULPSZrr
VBLENDMPSZrr
VPERMPSZrr
VMINPSZrr
VSQRTPSZrr
VMOVUPSZrr
VDIVPSZrr
VMAXPSZrr
VCVTSI642SSZrr
VCVTUSI642SSZrr
VCVTSD2SSZrr
VMOVDI2SSZrr
Int_VCVTSI2SSZrr
Int_VCVTUSI2SSZrr
VSUBSSZrr
VADDSSZrr
Int_VUCOMISSZrr
Int_VCOMISSZrr
VMULSSZrr
VMINSSZrr
VCMPSSZrr
VBROADCASTSSZrr
VDIVSSZrr
VMOVSSZrr
VMAXSSZrr
VPBROADCASTDrZrr
VPBROADCASTQrZrr
MMX_MOVD64grr
MMX_PALIGNR64irr
MMX_PSUBBirr
MMX_PADDBirr
MMX_PAVGBirr
MMX_PCMPEQBirr
MMX_PSUBSBirr
MMX_PADDSBirr
MMX_PSUBUSBirr
MMX_PADDUSBirr
MMX_PCMPGTBirr
MMX_PMINUBirr
MMX_PMAXUBirr
MMX_PACKSSWBirr
MMX_PACKUSWBirr
MMX_PSUBDirr
MMX_PADDDirr
MMX_PANDirr
MMX_CVTPI2PDirr
MMX_PCMPEQDirr
MMX_PCMPGTDirr
MMX_PMADDWDirr
MMX_PUNPCKHWDirr
MMX_PUNPCKLWDirr
MMX_CVTTPD2PIirr
MMX_CVTPD2PIirr
MMX_CVTTPS2PIirr
MMX_CVTPS2PIirr
MMX_PANDNirr
MMX_PSUBQirr
MMX_PADDQirr
MMX_PUNPCKHDQirr
MMX_PUNPCKLDQirr
MMX_PMULUDQirr
MMX_PORirr
MMX_PXORirr
MMX_CVTPI2PSirr
MMX_PSADBWirr
MMX_PUNPCKHBWirr
MMX_PUNPCKLBWirr
MMX_PSUBWirr
MMX_PADDWirr
MMX_PACKSSDWirr
MMX_PAVGWirr
MMX_PMULHWirr
MMX_PMULLWirr
MMX_PCMPEQWirr
MMX_PSUBSWirr
MMX_PADDSWirr
MMX_PMINSWirr
MMX_PSUBUSWirr
MMX_PADDUSWirr
MMX_PMAXSWirr
MMX_PCMPGTWirr
MMX_PMULHUWirr
VPBROADCASTDZkrr
VPBROADCASTQZkrr
VPBROADCASTDrZkrr
VPBROADCASTQrZkrr
MONITORrrr
VEXTRACTPSzrr
VINSERTPSzrr
MOV32sr
MOV64sr
MOV16sr
MOV32ms
MOV64ms
MOV16ms
MOV32rs
MOV64rs
MOV16rs
VCMPPDrmi_alt
VCMPPSrmi_alt
VCMPPDYrmi_alt
VCMPPSYrmi_alt
VPCMPDZrmi_alt
VCMPPDZrmi_alt
VCMPSDZrmi_alt
VPCMPUDZrmi_alt
VPCMPQZrmi_alt
VPCMPUQZrmi_alt
VCMPPSZrmi_alt
VCMPSSZrmi_alt
MOV32ri_alt
MOV16ri_alt
MOV8ri_alt
VCMPPDrri_alt
VCMPPSrri_alt
VCMPPDYrri_alt
VCMPPSYrri_alt
VPCMPDZrri_alt
VCMPPDZrri_alt
VCMPSDZrri_alt
VPCMPUDZrri_alt
VPCMPQZrri_alt
VPCMPUQZrri_alt
VCMPPSZrri_alt
VCMPSSZrri_alt
VPCMPDZrmik_alt
VPCMPUDZrmik_alt
VPCMPQZrmik_alt
VPCMPUQZrmik_alt
VPCMPDZrrik_alt
VPCMPUDZrrik_alt
VPCMPQZrrik_alt
VPCMPUQZrrik_alt
VMOVDQA32Z256rrk_alt
VMOVDQU32Z256rrk_alt
VMOVDQA64Z256rrk_alt
VMOVDQU64Z256rrk_alt
VMOVDQU16Z256rrk_alt
VMOVDQU8Z256rrk_alt
VMOVAPDZ256rrk_alt
VMOVUPDZ256rrk_alt
VMOVAPSZ256rrk_alt
VMOVUPSZ256rrk_alt
VMOVDQA32Z128rrk_alt
VMOVDQU32Z128rrk_alt
VMOVDQA64Z128rrk_alt
VMOVDQU64Z128rrk_alt
VMOVDQU16Z128rrk_alt
VMOVDQU8Z128rrk_alt
VMOVAPDZ128rrk_alt
VMOVUPDZ128rrk_alt
VMOVAPSZ128rrk_alt
VMOVUPSZ128rrk_alt
VMOVDQA32Zrrk_alt
VMOVDQU32Zrrk_alt
VMOVDQA64Zrrk_alt
VMOVDQU64Zrrk_alt
VMOVDQU16Zrrk_alt
VMOVDQU8Zrrk_alt
VMOVAPDZrrk_alt
VMOVUPDZrrk_alt
VMOVAPSZrrk_alt
VMOVUPSZrrk_alt
VCMPSDrm_alt
VCMPSSrm_alt
VMOVDQA32Z256rr_alt
VMOVDQU32Z256rr_alt
VMOVDQA64Z256rr_alt
VMOVDQU64Z256rr_alt
VMOVDQU16Z256rr_alt
VMOVDQU8Z256rr_alt
VMOVAPDZ256rr_alt
VMOVUPDZ256rr_alt
VMOVAPSZ256rr_alt
VMOVUPSZ256rr_alt
VMOVDQA32Z128rr_alt
VMOVDQU32Z128rr_alt
VMOVDQA64Z128rr_alt
VMOVDQU64Z128rr_alt
VMOVDQU16Z128rr_alt
VMOVDQU8Z128rr_alt
VMOVAPDZ128rr_alt
VMOVUPDZ128rr_alt
VMOVAPSZ128rr_alt
VMOVUPSZ128rr_alt
VCMPSDrr_alt
VCMPSSrr_alt
VMOVDQA32Zrr_alt
VMOVDQU32Zrr_alt
VMOVDQA64Zrr_alt
VMOVDQU64Zrr_alt
VMOVDQU16Zrr_alt
VMOVDQU8Zrr_alt
VMOVAPDZrr_alt
VMOVUPDZrr_alt
VMOVAPSZrr_alt
VMOVUPSZrr_alt
VMOVDQA32Z256rrkz_alt
VMOVDQU32Z256rrkz_alt
VMOVDQA64Z256rrkz_alt
VMOVDQU64Z256rrkz_alt
VMOVDQU16Z256rrkz_alt
VMOVDQU8Z256rrkz_alt
VMOVAPDZ256rrkz_alt
VMOVUPDZ256rrkz_alt
VMOVAPSZ256rrkz_alt
VMOVUPSZ256rrkz_alt
VMOVDQA32Z128rrkz_alt
VMOVDQU32Z128rrkz_alt
VMOVDQA64Z128rrkz_alt
VMOVDQU64Z128rrkz_alt
VMOVDQU16Z128rrkz_alt
VMOVDQU8Z128rrkz_alt
VMOVAPDZ128rrkz_alt
VMOVUPDZ128rrkz_alt
VMOVAPSZ128rrkz_alt
VMOVUPSZ128rrkz_alt
VMOVDQA32Zrrkz_alt
VMOVDQU32Zrrkz_alt
VMOVDQA64Zrrkz_alt
VMOVDQU64Zrrkz_alt
VMOVDQU16Zrrkz_alt
VMOVDQU8Zrrkz_alt
VMOVAPDZrrkz_alt
VMOVUPDZrrkz_alt
VMOVAPSZrrkz_alt
VMOVUPSZrrkz_alt
VSQRTSDm_Int
VRCPPSm_Int
VRSQRTPSm_Int
VRCPSSm_Int
VRSQRTSSm_Int
VSQRTSSm_Int
VRCPPSYm_Int
VRSQRTPSYm_Int
VSQRTSDZm_Int
VSQRTSSZm_Int
VFMSUBSD4rm_Int
VFNMSUBSD4rm_Int
VFMADDSD4rm_Int
VFNMADDSD4rm_Int
VFMSUBSS4rm_Int
VFNMSUBSS4rm_Int
VFMADDSS4rm_Int
VFNMADDSS4rm_Int
VSUBSDrm_Int
VADDSDrm_Int
VMULSDrm_Int
VMINSDrm_Int
VDIVSDrm_Int
VMAXSDrm_Int
VSUBSSrm_Int
VADDSSrm_Int
VMULSSrm_Int
VMINSSrm_Int
VDIVSSrm_Int
VMAXSSrm_Int
VROUNDSDr_Int
SQRTSDr_Int
VRCPPSr_Int
VRSQRTPSr_Int
VROUNDSSr_Int
RCPSSr_Int
RSQRTSSr_Int
VRCPPSYr_Int
VRSQRTPSYr_Int
VSQRTSDZr_Int
VSQRTSSZr_Int
VFMSUBSD4mr_Int
VFNMSUBSD4mr_Int
VFMADDSD4mr_Int
VFNMADDSD4mr_Int
VFMSUBSS4mr_Int
VFNMSUBSS4mr_Int
VFMADDSS4mr_Int
VFNMADDSS4mr_Int
VFMSUBSD4rr_Int
VFNMSUBSD4rr_Int
VFMADDSD4rr_Int
VFNMADDSD4rr_Int
VFMSUBSS4rr_Int
VFNMSUBSS4rr_Int
VFMADDSS4rr_Int
VFNMADDSS4rr_Int
VSUBSDrr_Int
VADDSDrr_Int
VMULSDrr_Int
VMINSDrr_Int
VDIVSDrr_Int
VMAXSDrr_Int
VSUBSSrr_Int
VADDSSrr_Int
VMULSSrr_Int
VMINSSrr_Int
VDIVSSrr_Int
VMAXSSrr_Int
VPCONFLICTDrmbkz
VPLZCNTDrmbkz
VPCONFLICTQrmbkz
VPLZCNTQrmbkz
VPSUBDZrmbkz
VPADDDZrmbkz
VPANDDZrmbkz
VPMULLDZrmbkz
VPANDNDZrmbkz
VSUBPDZrmbkz
VADDPDZrmbkz
VMULPDZrmbkz
VMINPDZrmbkz
VDIVPDZrmbkz
VMAXPDZrmbkz
VPORDZrmbkz
VPXORDZrmbkz
VPABSDZrmbkz
VPMINSDZrmbkz
VPMAXSDZrmbkz
VPMINUDZrmbkz
VPMAXUDZrmbkz
VPSUBQZrmbkz
VPADDQZrmbkz
VPMULDQZrmbkz
VPANDQZrmbkz
VPMULUDQZrmbkz
VPANDNQZrmbkz
VPORQZrmbkz
VPXORQZrmbkz
VPABSQZrmbkz
VPMINSQZrmbkz
VPMAXSQZrmbkz
VPMINUQZrmbkz
VPMAXUQZrmbkz
VSUBPSZrmbkz
VADDPSZrmbkz
VMULPSZrmbkz
VMINPSZrmbkz
VDIVPSZrmbkz
VMAXPSZrmbkz
VALIGNDrrikz
VALIGNQrrikz
VMOVDQA32Z256rmkz
VMOVDQU32Z256rmkz
VMOVDQA64Z256rmkz
VMOVDQU64Z256rmkz
VMOVDQU16Z256rmkz
VMOVDQU8Z256rmkz
VMOVAPDZ256rmkz
VMOVUPDZ256rmkz
VMOVAPSZ256rmkz
VMOVUPSZ256rmkz
VMOVDQA32Z128rmkz
VMOVDQU32Z128rmkz
VMOVDQA64Z128rmkz
VMOVDQU64Z128rmkz
VMOVDQU16Z128rmkz
VMOVDQU8Z128rmkz
VMOVAPDZ128rmkz
VMOVUPDZ128rmkz
VMOVAPSZ128rmkz
VMOVUPSZ128rmkz
VPERMI2Drmkz
VPERMT2Drmkz
VPERMI2PDrmkz
VPERMT2PDrmkz
VPCONFLICTDrmkz
VPLZCNTDrmkz
VPERMI2Qrmkz
VPERMT2Qrmkz
VPCONFLICTQrmkz
VPLZCNTQrmkz
VPERMI2PSrmkz
VPERMT2PSrmkz
VMOVDQA32Zrmkz
VMOVDQU32Zrmkz
VMOVDQA64Zrmkz
VMOVDQU64Zrmkz
VMOVDQU16Zrmkz
VMOVDQU8Zrmkz
VPSUBDZrmkz
VPMOVSXBDZrmkz
VPMOVZXBDZrmkz
VPADDDZrmkz
VPANDDZrmkz
VPMULLDZrmkz
VPANDNDZrmkz
VMOVAPDZrmkz
VSUBPDZrmkz
VADDPDZrmkz
VMULPDZrmkz
VMINPDZrmkz
VMOVUPDZrmkz
VDIVPDZrmkz
VMAXPDZrmkz
VPORDZrmkz
VPXORDZrmkz
VPABSDZrmkz
VPMINSDZrmkz
VPMAXSDZrmkz
VPMINUDZrmkz
VPMAXUDZrmkz
VPMOVSXWDZrmkz
VPMOVZXWDZrmkz
VPSUBQZrmkz
VPMOVSXBQZrmkz
VPMOVZXBQZrmkz
VPADDQZrmkz
VPMULDQZrmkz
VPANDQZrmkz
VPMULUDQZrmkz
VPMOVSXDQZrmkz
VPMOVZXDQZrmkz
VPANDNQZrmkz
VPORQZrmkz
VPXORQZrmkz
VPABSQZrmkz
VPMINSQZrmkz
VPMAXSQZrmkz
VPMINUQZrmkz
VPMAXUQZrmkz
VPMOVSXWQZrmkz
VPMOVZXWQZrmkz
VMOVAPSZrmkz
VSUBPSZrmkz
VADDPSZrmkz
VMULPSZrmkz
VMINPSZrmkz
VMOVUPSZrmkz
VDIVPSZrmkz
VMAXPSZrmkz
VFMADDSUB213PDZrkz
VFMSUB213PDZrkz
VFNMSUB213PDZrkz
VFMSUBADD213PDZrkz
VFMADD213PDZrkz
VFNMADD213PDZrkz
VFMADDSUB213PSZrkz
VFMSUB213PSZrkz
VFNMSUB213PSZrkz
VFMSUBADD213PSZrkz
VFMADD213PSZrkz
VFNMADD213PSZrkz
VMOVDQA32Z256rrkz
VMOVDQU32Z256rrkz
VMOVDQA64Z256rrkz
VMOVDQU64Z256rrkz
VMOVDQU16Z256rrkz
VMOVDQU8Z256rrkz
VMOVAPDZ256rrkz
VMOVUPDZ256rrkz
VMOVAPSZ256rrkz
VMOVUPSZ256rrkz
VMOVDQA32Z128rrkz
VMOVDQU32Z128rrkz
VMOVDQA64Z128rrkz
VMOVDQU64Z128rrkz
VMOVDQU16Z128rrkz
VMOVDQU8Z128rrkz
VMOVAPDZ128rrkz
VMOVUPDZ128rrkz
VMOVAPSZ128rrkz
VMOVUPSZ128rrkz
VPMOVUSDBrrkz
VPMOVSDBrrkz
VPMOVDBrrkz
VPMOVUSQBrrkz
VPMOVSQBrrkz
VPMOVQBrrkz
VPERMI2Drrkz
VPERMT2Drrkz
VPERMI2PDrrkz
VPERMT2PDrrkz
VPMOVUSQDrrkz
VPMOVSQDrrkz
VPMOVQDrrkz
VPCONFLICTDrrkz
VPLZCNTDrrkz
VPERMI2Qrrkz
VPERMT2Qrrkz
VPCONFLICTQrrkz
VPLZCNTQrrkz
VPERMI2PSrrkz
VPERMT2PSrrkz
VPMOVUSDWrrkz
VPMOVSDWrrkz
VPMOVDWrrkz
VPMOVUSQWrrkz
VPMOVSQWrrkz
VPMOVQWrrkz
VMOVDQA32Zrrkz
VMOVDQU32Zrrkz
VMOVDQA64Zrrkz
VMOVDQU64Zrrkz
VMOVDQU16Zrrkz
VMOVDQU8Zrrkz
VPSUBDZrrkz
VPMOVSXBDZrrkz
VPMOVZXBDZrrkz
VPADDDZrrkz
VPANDDZrrkz
VPMULLDZrrkz
VPANDNDZrrkz
VMOVAPDZrrkz
VSUBPDZrrkz
VADDPDZrrkz
VMULPDZrrkz
VMINPDZrrkz
VMOVUPDZrrkz
VDIVPDZrrkz
VMAXPDZrrkz
VPORDZrrkz
VPXORDZrrkz
VPABSDZrrkz
VPMINSDZrrkz
VPMAXSDZrrkz
VPMINUDZrrkz
VPMAXUDZrrkz
VPMOVSXWDZrrkz
VPMOVZXWDZrrkz
VPSUBQZrrkz
VPMOVSXBQZrrkz
VPMOVZXBQZrrkz
VPADDQZrrkz
VPMULDQZrrkz
VPANDQZrrkz
VPMULUDQZrrkz
VPMOVSXDQZrrkz
VPMOVZXDQZrrkz
VPANDNQZrrkz
VPORQZrrkz
VPXORQZrrkz
VPABSQZrrkz
VPMINSQZrrkz
VPMAXSQZrrkz
VPMINUQZrrkz
VPMAXUQZrrkz
VPMOVSXWQZrrkz
VPMOVZXWQZrrkz
VMOVAPSZrrkz
VSUBPSZrrkz
VADDPSZrrkz
VMULPSZrrkz
VMINPSZrrkz
VMOVUPSZrrkz
VDIVPSZrrkz
VMAXPSZrrkz
N4llvm18X86MCAsmInfoDarwinE
N4llvm21X86_64MCAsmInfoDarwinE
N4llvm15X86ELFMCAsmInfoE
N4llvm21X86MCAsmInfoMicrosoftE
N4llvm19X86MCAsmInfoGNUCOFFE
N4llvm2cl3optI17AsmWriterFlavorTyLb0ENS0_6parserIS2_EEEE
N4llvm2cl11opt_storageI17AsmWriterFlavorTyLb0ELb0EEE
N4llvm2cl6parserI17AsmWriterFlavorTyEE
N4llvm2cl11OptionValueI17AsmWriterFlavorTyEE
N4llvm2cl15OptionValueBaseI17AsmWriterFlavorTyLb0EEE
N4llvm2cl15OptionValueCopyI17AsmWriterFlavorTyEE
AL_OFFSET_TABLE__GLOBAL_OFFSET_TN12_GLOBAL__N_116X86MCCodeEmitterE
N12_GLOBAL__N_119X86MachObjectWriterE
N12_GLOBAL__N_118X86ELFObjectWriterE
N12_GLOBAL__N_118X86WinCOFFStreamerE
N12_GLOBAL__N_122X86WinCOFFObjectWriterE
N12_GLOBAL__N_125X86_64MachORelocationInfoE
N12_GLOBAL__N_123X86_64ELFRelocationInfoE
__.SYMDEF SORTED
N4llvm6object7ArchiveE
N4llvm6object6BinaryE
N4llvm6object14COFFObjectFileE
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_-/^., 
01234567
0123456789abcdefABCDEF
0123456789
N4llvm6object17ELFObjectFileBaseE
N4llvm6object13ELFObjectFileINS0_7ELFTypeILNS_7support10endiannessE1ELm2ELb0EEEEE
N4llvm6object13ELFObjectFileINS0_7ELFTypeILNS_7support10endiannessE0ELm2ELb1EEEEE
N4llvm6object13ELFObjectFileINS0_7ELFTypeILNS_7support10endiannessE1ELm2ELb1EEEEE
N4llvm7ELFYAML7SectionE
N4llvm7ELFYAML17RelocationSectionE
N4llvm7ELFYAML17RawContentSectionE
N12_GLOBAL__N_122_object_error_categoryE
N4llvm6object12IRObjectFileE
N4llvm6object15MachOObjectFileE
N4llvm14format_object1IjEE
N4llvm6object20MachOUniversalBinaryE
N4llvm6object10ObjectFileE
N4llvm14RecordStreamerE
N4llvm6object12SymbolicFileE
N4llvm8AsmLexerE
N4llvm23MCAsmParserSemaCallbackE
N12_GLOBAL__N_19AsmParserE
N12_GLOBAL__N_113COFFAsmParserE
N12_GLOBAL__N_115DarwinAsmParserE
ndirect_functiongnu_indirect_fungnu_unique_object
N12_GLOBAL__N_112ELFAsmParserE
N4llvm10MCAsmLexerE
N4llvm18MCParsedAsmOperandE
N4llvm11MCAsmParserE
N4llvm20MCAsmParserExtensionE
N4llvm17MCTargetAsmParserE
N4llvm13BitcodeReaderE
N12_GLOBAL__N_124BitcodeErrorCategoryTypeE
N4llvm12_GLOBAL__N_119ConstantPlaceHolderE
N12_GLOBAL__N_118DisasmMemoryObjectE
N4llvm16MCRelocationInfoE
N4llvm20MCExternalSymbolizerE
N4llvm14MCDisassemblerE
`084
7GBWT
wGRW
`0!\
`0!\
`0bU
`0-\
`0m#
`0_#
wMe$w
`0J#
`0f#
`0eh
`0eh
2#H%
`06r
24ge
7JBVTe
wJRV
7JBVT
wJRV
`0F
`0'F
`0!\
`0bU
`0bU
`04F
`0?'n0?
`0OT
 ^TQ
2RNe
b0G'
sG'n0G'
`0S'n0S
`0S'n0S
`0!7
`0mCn0m
`0NCn0N
`0h&n0h
`0NQo0N
`0mmo0m
2Z]o0Z
`0sko0s
`0VQ%
2VQe
2tP%
2tPe
wJW-
2pOo0p
`0Tao0T
`0Tlo0T
`0%Po0%
`0mVo0m
`0Zbo0Z
2KOe
2RPe
28Ne
2wF3
`0R&e
`0Rfo0R
`0R&
`0cCn0c
2#B3
`0`Qq
 `Qq
 ^aQ
EQo0E
cjo0c
0lQe
23Xe
2d[e
2vQe
2>Xe
2o[e
2*We
2[ne
2Cne
25We
`0SVo0S
`0kPo0k
r0PE
2PE3
2-no0-
2$mo0$
`0[Po0[
r0FE
2FE3
[_o0[
d0=mo0=
r0:A
2:A3
r0ED
2ED3
2cH3
`0:]e
`0%jo0%
`0SOo0S
1A%%1
DA%%D
`0 Qo0 
`0x^o0x
`0cmo0c
`0ljo0l
`0nAn0n
`0YAn0Y
8jo08
`0*_o0*
`0m_o0m
`0Djo0D
`0=_o0=
`0z_o0z
r0UD
2UD3
2sH3
`0fJn0fJ
`0Hh
`0Hh
`0]&n0]
`0]fn0]
`007
vbroadcasti32x4 
vbroadcasti64x4 
kandb 
vpmovusdb 
vpmovsdb 
vpmovdb 
kandnb 
vpmovusqb 
vpmovsqb 
vpmovqb 
korb 
kxnorb 
kxorb 
knotb 
kmovb 
vpermi2d 
vpermt2d 
vpbroadcastmw2d 
vpsrad 
vpsubd 
vpmovsxbd 
vpmovzxbd 
vpaddd 
kandd 
vpandd 
vpgatherdd 
vpscatterdd 
vpshufd 
vpslld 
vpmulld 
vpsrld 
vpblendmd 
vptestnmd 
vpermd 
vptestmd 
kandnd 
vpandnd 
valignd 
vfmaddsub132pd 
vfmsub132pd 
vfnmsub132pd 
vfmsubadd132pd 
vfmadd132pd 
vfnmadd132pd 
vpermi2pd 
vcvtdq2pd 
vcvtudq2pd 
vcvtps2pd 
vpermt2pd 
vfmaddsub213pd 
vfmsub213pd 
vfnmsub213pd 
vfmsubadd213pd 
vfmadd213pd 
vfnmadd213pd 
vrcp14pd 
vrsqrt14pd 
vrcp28pd 
vrsqrt28pd 
vsubpd 
vgatherpf0dpd 
vscatterpf0dpd 
vgatherpf1dpd 
vscatterpf1dpd 
vaddpd 
vgatherdpd 
vscatterdpd 
vrndscalepd 
vshufpd 
vpermilpd 
vmulpd 
vblendmpd 
vpermpd 
vminpd 
vcmppd 
vgatherpf0qpd 
vscatterpf0qpd 
vgatherpf1qpd 
vscatterpf1qpd 
vgatherqpd 
vscatterqpd 
vdivpd 
vmaxpd 
vpcmpeqd 
vpgatherqd 
vpscatterqd 
vpmovusqd 
vpmovsqd 
vpmovqd 
kord 
kxnord 
vpord 
kxord 
vpxord 
vfmsub213sd 
vfnmsub213sd 
vfmadd213sd 
vfnmadd213sd 
vrcp14sd 
vrsqrt14sd 
vrcp28sd 
vrsqrt28sd 
vpabsd 
vrndscalesd 
vpminsd 
vbroadcastsd 
vmovsd 
vpmaxsd 
vpconflictd 
vpcmpgtd 
vplzcntd 
knotd 
vpbroadcastd 
vpminud 
vpmaxud 
vpsravd 
vpsllvd 
vpsrlvd 
kmovd 
vpmovsxwd 
vpmovzxwd 
vcvtps2ph 
vcvttsd2si 
vcvtsd2si 
vcvttss2si 
vcvtss2si 
vcvttsd2usi 
vcvtsd2usi 
vcvttss2usi 
vcvtss2usi 
vcvtsi2sdl 
vcvtusi2sdl 
vcvtsi2ssl 
vcvtusi2ssl 
vmovddup 
vmovshdup 
vmovsldup 
vpbroadcastmb2q 
vpermi2q 
vpermt2q 
vpsraq 
vpsubq 
vpmovsxbq 
vpmovzxbq 
vcvttpd2dq 
vcvtpd2dq 
vcvttps2dq 
vcvtps2dq 
vpaddq 
vpunpckhdq 
vpunpckldq 
vpmuldq 
kandq 
vpandq 
vpunpckhqdq 
vpunpcklqdq 
vpgatherdq 
vpscatterdq 
vcvtsi2sdq 
vcvtusi2sdq 
vcvttpd2udq 
vcvtpd2udq 
vcvttps2udq 
vcvtps2udq 
vpmuludq 
vpmovsxdq 
vpmovzxdq 
vpsllq 
vpsrlq 
vpblendmq 
vptestnmq 
vpermq 
vptestmq 
kandnq 
vpandnq 
valignq 
vpcmpeqq 
vpgatherqq 
vpscatterqq 
korq 
kxnorq 
vporq 
kxorq 
vpxorq 
vpabsq 
vpminsq 
vcvtsi2ssq 
vcvtusi2ssq 
vpmaxsq 
vpconflictq 
vpcmpgtq 
vplzcntq 
knotq 
vpbroadcastq 
vpminuq 
vpmaxuq 
vpsravq 
vpsllvq 
vpsrlvq 
kmovq 
vpmovsxwq 
vpmovzxwq 
vfmaddsub132ps 
vfmsub132ps 
vfnmsub132ps 
vfmsubadd132ps 
vfmadd132ps 
vfnmadd132ps 
vcvtpd2ps 
vpermi2ps 
vcvtdq2ps 
vcvtudq2ps 
vpermt2ps 
vfmaddsub213ps 
vfmsub213ps 
vfnmsub213ps 
vfmsubadd213ps 
vfmadd213ps 
vfnmadd213ps 
vrcp14ps 
vrsqrt14ps 
vrcp28ps 
vrsqrt28ps 
vsubps 
vgatherpf0dps 
vscatterpf0dps 
vgatherpf1dps 
vscatterpf1dps 
vaddps 
vgatherdps 
vscatterdps 
vrndscaleps 
vshufps 
vpermilps 
vmulps 
vblendmps 
vpermps 
vminps 
vcmpps 
vgatherpf0qps 
vscatterpf0qps 
vgatherpf1qps 
vscatterpf1qps 
vgatherqps 
vscatterqps 
vdivps 
vmaxps 
vfmsub213ss 
vfnmsub213ss 
vfmadd213ss 
vfnmadd213ss 
vrcp14ss 
vrsqrt14ss 
vrcp28ss 
vrsqrt28ss 
vrndscaless 
vbroadcastss 
vmovss 
kunpckbw 
kandw 
vpmovusdw 
vpmovsdw 
vpmovdw 
kshiftlw 
kandnw 
vpmovusqw 
vpmovsqw 
vpmovqw 
korw 
kxnorw 
kxorw 
kshiftrw 
knotw 
kortestw 
kmovw 
prefetcht0
sha1msg1
sha256msg1
prefetcht1
pfrcpit1
pfrsqit1
vmovdqa32
vmovdqu32
sha1msg2
sha256msg2
sha256rnds2
prefetcht2
pfrcpit2
vmovdqa64
vmovdqu64
sha1rnds4
vextractf32x4
vinsertf32x4
vextracti32x4
vinserti32x4
vextractf64x4
vinsertf64x4
vextracti64x4
vinserti64x4
vmovdqu16
vperm2f128
vextractf128
vinsertf128
vbroadcastf128
vperm2i128
vextracti128
vinserti128
vbroadcasti128
vmovdqu8
vmovntdqa
vmovdqa
seta
prefetchnta
crc32b
cmpxchg16b
cmpxchg8b
vpshab
sbbb
vpsubb
adcb
decb
incb
vpaddb
xaddb
andb
vpshufb
negb
cmpxchgb
vpavgb
vpmovmskb
rclb
vpshlb
rolb
imulb
vpcomb
vpsignb
fcmovnb
cmpb
vpcmpeqb
sarb
rcrb
shrb
rorb
xorb
vpinsrb
vpextrb
scasb
vpabsb
movabsb
vpsubsb
vpaddsb
lodsb
vpminsb
cmpsb
outsb
vpsubusb
vpaddusb
pavgusb
movsb
vpmaxsb
setb
vpcmpgtb
notb
vprotb
vpbroadcastb
testb
vpcomub
vpminub
pfsub
vpmaxub
vpblendvb
idivb
fcmovb
vpacksswb
vpackuswb
pfacc
pfnacc
pfpnacc
vaesdec
blcic
blsic
t1mskc
vaesimc
vaesenc
vpshad
vpsrad
vphaddbd
vphaddubd
vphsubd
vpsubd
vpmovsxbd
vpmovzxbd
pfadd
vphaddd
vpaddd
vpblendd
vpgatherdd
vpmacsdd
vpmacssdd
pi2fd
vpshufd
pf2id
invpcid
invvpid
fbld
vpshld
vpslld
vpmulld
vpsrld
vmptrld
vpcomd
vpermd
vpand
vpsignd
bound
vfmaddsub231pd
vfmsub231pd
vfnmsub231pd
vfmsubadd231pd
vfmadd231pd
vfnmadd231pd
vfmaddsub132pd
vfmsub132pd
vfnmsub132pd
vfmsubadd132pd
vfmadd132pd
vfnmadd132pd
cvtpi2pd
vpermil2pd
vcvtdq2pd
vcvtps2pd
vfmaddsub213pd
vfmsub213pd
vfnmsub213pd
vfmsubadd213pd
vfmadd213pd
vfnmadd213pd
vmovapd
pswapd
vfmaddsubpd
vaddsubpd
vhsubpd
vfmsubpd
vfnmsubpd
vsubpd
vfmsubaddpd
vhaddpd
vfmaddpd
vfnmaddpd
vaddpd
vandpd
vblendpd
vroundpd
vgatherdpd
vshufpd
vunpckhpd
vmovhpd
vmovmskpd
vpermilpd
vunpcklpd
vmulpd
vmovlpd
vpcmpd
vpermpd
vandnpd
vminpd
vdppd
vcmppd
vgatherqpd
vorpd
vxorpd
vmovntpd
vsqrtpd
vtestpd
vmovupd
vblendvpd
vdivpd
vmaskmovpd
vmaxpd
vfrczpd
vpcmpeqd
vpgatherqd
vpinsrd
vpextrd
vfmsub231sd
vfnmsub231sd
vfmadd231sd
vfnmadd231sd
vfmsub132sd
vfnmsub132sd
vfmadd132sd
vfnmadd132sd
vcvtss2sd
vfmsub213sd
vfnmsub213sd
vfmadd213sd
vfnmadd213sd
vpabsd
vfmsubsd
vfnmsubsd
vsubsd
vfmaddsd
vfnmaddsd
vaddsd
vroundsd
vucomisd
vcomisd
vmulsd
vpminsd
vminsd
vcmpsd
movntsd
vsqrtsd
vbroadcastsd
vdivsd
vmovsd
vpmaxsd
vmaxsd
vfrczsd
vpcmpgtd
vprotd
vpbroadcastd
vpcomud
vpminud
vpcmpud
vpmaxud
vpsravd
vpsllvd
vpsrlvd
vpmaskmovd
vmovd
vphsubwd
vphaddwd
vpmaddwd
vpunpckhwd
vpunpcklwd
vpmacswd
vpmadcswd
vpmacsswd
vpmadcsswd
vphadduwd
vpmovsxwd
vpmovzxwd
setae
fcmovnbe
setbe
fcmovbe
ffree
pfcmpge
setge
setle
loopne
setne
fcmovne
loope
sete
sha1nexte
fnsave
fxsave
fcmove
invlpg
setg
prefetch
fxch
vcvtps2ph
vpmacsdqh
vpmacssdqh
clflush
blci
fcomi
fucomi
cvttpd2pi
cvtpd2pi
cvttps2pi
cvtps2pi
fcompi
fucompi
vpcmpestri
vpcmpistri
vcvttsd2si
vcvtsd2si
vcvttss2si
vcvtss2si
blcmsk
tzmsk
crc32l
leal
cmoval
sbbl
movsbl
fsubl
fisubl
cmovbl
movzbl
adcl
decl
incl
btcl
vmreadl
faddl
fiaddl
xaddl
rdseedl
fldl
shldl
fildl
rdrandl
shrdl
vcvtsi2sdl
vcvtusi2sdl
cmovael
cmovbel
cmovgel
cmovlel
cmovnel
rdfsbasel
wrfsbasel
rdgsbasel
wrgsbasel
vmwritel
cmovel
bsfl
negl
cmpxchgl
cmovgl
pushl
bzhil
blsil
movntil
blsmskl
rcll
fildll
shll
blcfill
blsfill
lcalll
roll
fistpll
fisttpll
lsll
fmull
fimull
cmovll
fcoml
ficoml
andnl
cmovnol
cmovol
bswapl
pdepl
cmpl
ljmpl
fcompl
ficompl
cmovnpl
nopl
popl
arpl
fstpl
fistpl
fisttpl
cmovpl
vpmacsdql
vpmacssdql
larl
sarl
fsubrl
fisubrl
rcrl
shrl
rorl
xorl
bsrl
blsrl
btrl
strl
bextrl
fdivrl
fidivrl
scasl
movabsl
ldsl
lodsl
lesl
lfsl
lgsl
cmovnsl
cmpsl
vcvtsi2ssl
vcvtusi2ssl
lssl
btsl
outsl
cmovsl
lgdtl
sgdtl
lidtl
sidtl
sldtl
lretl
setl
popcntl
lzcntl
tzcntl
notl
testl
fstl
fistl
pextl
pfmul
fdivl
fidivl
movl
smswl
movswl
movzwl
adcxl
shlxl
mulxl
adoxl
sarxl
shrxl
rorxl
fcom
fucom
vpperm
vpcmpestrm
vpcmpistrm
vpandn
xbegin
pfmin
vmxon
setno
seto
fsubp
pfrcp
faddp
fmulp
fcomp
fucomp
setnp
loop
fsubrp
fdivrp
setp
fbstp
fstp
vmovddup
vmovshdup
vmovsldup
#EH_SjLj_Setup
fdivp
crc32q
movdq2q
leaq
vpshaq
cmovaq
sbbq
vphaddbq
movsbq
vphaddubq
vpsubq
cmovbq
vpmovsxbq
vpmovzxbq
movzbq
adcq
decq
incq
btcq
vcvttpd2dq
vcvtpd2dq
movq2dq
vcvttps2dq
vcvtps2dq
vmreadq
vphsubdq
vpaddq
xaddq
vphadddq
rdseedq
vpunpckhdq
shldq
vpunpckldq
vpslldq
vpsrldq
vpmuldq
rdrandq
vpunpckhqdq
vpunpcklqdq
vpclmulqdq
vpgatherdq
shrdq
vcvtsi2sdq
vcvtusi2sdq
vmovntdq
vphaddudq
vpmuludq
vpmovsxdq
vpmovzxdq
cmovaeq
cmovbeq
cmovgeq
cmovleq
cmovneq
pfcmpeq
rdfsbaseq
wrfsbaseq
rdgsbaseq
wrgsbaseq
vmwriteq
fxsaveq
cmoveq
bsfq
negq
cmpxchgq
cmovgq
pushq
bzhiq
blsiq
movntiq
blsmskq
rclq
vpshlq
callq
vpsllq
rolq
vpsrlq
lslq
movslq
imulq
cmovlq
vpcomq
vpermq
andnq
cmovnoq
cmovoq
bswapq
pdepq
vpcmpq
cmovnpq
popq
cmovpq
vpcmpeqq
vpgatherqq
larq
sarq
rcrq
shrq
rorq
fxrstorq
xorq
bsrq
blsrq
vpinsrq
btrq
strq
bextrq
vpextrq
scasq
movabsq
lodsq
lfsq
lgsq
cmovnsq
cmpsq
vcvtsi2ssq
vcvtusi2ssq
lssq
btsq
cmovsq
lgdtq
sgdtq
lidtq
sidtq
sldtq
lretq
vpcmpgtq
popcntq
lzcntq
tzcntq
movntq
notq
vprotq
xsaveoptq
insertq
vpbroadcastq
testq
pextq
vpcomuq
vpcmpuq
idivq
vpsllvq
vpsrlvq
vpmaskmovq
vmovq
vphaddwq
smswq
movswq
vphadduwq
vpmovsxwq
vpmovzxwq
movzwq
adcxq
shlxq
mulxq
adoxq
sarxq
shrxq
rorxq
vmclear
pfsubr
enter
vpalignr
vpor
frstor
fxrstor
vpxor
verr
vldmxcsr
vstmxcsr
bextr
fdivr
fsubs
fisubs
blcs
fadds
fiadds
flds
filds
fmuls
fimuls
fcoms
ficoms
setns
vfmaddsub231ps
vfmsub231ps
vfnmsub231ps
vfmsubadd231ps
vfmadd231ps
vfnmadd231ps
vfmaddsub132ps
vfmsub132ps
vfnmsub132ps
vfmsubadd132ps
vfmadd132ps
vfnmadd132ps
vcvtpd2ps
vcvtph2ps
cvtpi2ps
vpermil2ps
vcvtdq2ps
vfmaddsub213ps
vfmsub213ps
vfnmsub213ps
vfmsubadd213ps
vfmadd213ps
vfnmadd213ps
vmovaps
vfmaddsubps
vaddsubps
vhsubps
vfmsubps
vfnmsubps
vsubps
vfmsubaddps
vhaddps
vfmaddps
vfnmaddps
vaddps
vandps
vblendps
vroundps
vgatherdps
vshufps
vunpckhps
vmovlhps
vmovhps
vmovmskps
vmovhlps
vpermilps
vunpcklps
vmulps
vmovlps
fcomps
ficomps
vpermps
vandnps
vminps
vrcpps
vdpps
vcmpps
vgatherqps
vorps
vxorps
vextractps
vmovntps
vinsertps
vrsqrtps
vsqrtps
vtestps
fstps
fistps
fisttps
vmovups
vblendvps
vdivps
vmaskmovps
vmaxps
vfrczps
fsubrs
fisubrs
fdivrs
fidivrs
vfmsub231ss
vfnmsub231ss
vfmadd231ss
vfnmadd231ss
vfmsub132ss
vfnmsub132ss
vfmadd132ss
vfnmadd132ss
vcvtsd2ss
vfmsub213ss
vfnmsub213ss
vfmadd213ss
vfnmadd213ss
vfmsubss
vfnmsubss
vsubss
vfmaddss
vfnmaddss
vaddss
vroundss
vucomiss
vcomiss
vmulss
vminss
vrcpss
vcmpss
movntss
vrsqrtss
vsqrtss
vbroadcastss
vdivss
vmovss
vmaxss
vfrczss
sets
fsts
fists
fdivs
fidivs
fldt
pfcmpgt
invept
xsaveopt
fstpt
xabort
pfrsqrt
vaesdeclast
vaesenclast
vptest
vaeskeygenassist
vmptrst
fcmovnu
vlddqu
vmaskmovdqu
vmovdqu
fcmovu
fdiv
fldenv
fnstenv
vpcmov
crc32w
leaw
vpshaw
vpsraw
cmovaw
sbbw
vphsubbw
vmpsadbw
vpsadbw
vphaddbw
vpunpckhbw
vpunpcklbw
movsbw
vphaddubw
vphsubw
vpsubw
cmovbw
vpmovsxbw
vpmovzxbw
movzbw
adcw
fldcw
decw
incw
btcw
fnstcw
vphaddw
vpaddw
xaddw
rdseedw
shldw
rdrandw
vpblendw
shrdw
vpackssdw
vpackusdw
cmovaew
cmovbew
cmovgew
cmovlew
cmovnew
cmovew
pi2fw
bsfw
pshufw
negw
cmpxchgw
vpavgw
cmovgw
prefetchw
vpshufhw
vpmulhw
pushw
pf2iw
rclw
vpshuflw
vpshlw
lcallw
vpsllw
vpmullw
rolw
vpsrlw
lslw
imulw
cmovlw
vpcomw
vpsignw
cmovnow
cmovow
cmpw
ljmpw
cmovnpw
nopw
popw
cmovpw
vpcmpeqw
larw
sarw
rcrw
verw
pmulhrw
shrw
rorw
xorw
bsrw
vpinsrw
btrw
ltrw
strw
vpextrw
scasw
vpabsw
movabsw
vpmaddubsw
vphsubsw
vpsubsw
vphaddsw
vpaddsw
ldsw
lodsw
lesw
lfsw
lgsw
vpminsw
cmovnsw
cmpsw
vpmulhrsw
lssw
btsw
fnstsw
outsw
vpsubusw
vpaddusw
cmovsw
vpmaxsw
lgdtw
sgdtw
lidtw
sidtw
lldtw
sldtw
lretw
vpcmpgtw
popcntw
lzcntw
tzcntw
notw
vprotw
vpbroadcastw
testw
vpmulhuw
vpcomuw
vpminuw
vphminposuw
vpmaxuw
idivw
movw
vpmacsww
lmsww
smsww
vpmacssww
pfmax
vcvttpd2dqx
vcvtpd2dqx
vcvtpd2psx
vcvttpd2dqy
vcvtpd2dqy
vcvtpd2psy
jecxz
jcxz
jrcxz
fsub
%st(0), 
fadd
%st(0), 
fmul
%st(0), 
fsubr
%st(0), 
fdivr
%st(0), 
fdiv
%st(0), 
movabsb
%al, 
stosb
%al, 
outb
%al, 
movb
%al, 
rclb
%cl, 
shlb
%cl, 
rolb
%cl, 
sarb
%cl, 
rcrb
%cl, 
shrb
%cl, 
rorb
%cl, 
shldl
%cl, 
shrdl
%cl, 
rcll
%cl, 
shll
%cl, 
roll
%cl, 
sarl
%cl, 
rcrl
%cl, 
shrl
%cl, 
rorl
%cl, 
shldq
%cl, 
shrdq
%cl, 
rclq
%cl, 
shlq
%cl, 
rolq
%cl, 
sarq
%cl, 
rcrq
%cl, 
shrq
%cl, 
rorq
%cl, 
shldw
%cl, 
shrdw
%cl, 
rclw
%cl, 
shlw
%cl, 
rolw
%cl, 
sarw
%cl, 
rcrw
%cl, 
shrw
%cl, 
rorw
%cl, 
movabsw
%ax, 
stosw
%ax, 
outw
%ax, 
movw
%ax, 
movabsl
%eax, 
stosl
%eax, 
outl
%eax, 
movl
%eax, 
movabsq
%rax, 
stosq
%rax, 
insb
%dx, 
insl
%dx, 
insw
%dx, 
vrcp28pd 
{sae}, 
vrsqrt28pd 
{sae}, 
vrcp28sd 
{sae}, 
vrsqrt28sd 
{sae}, 
vrcp28ps 
{sae}, 
vrsqrt28ps 
{sae}, 
vrcp28ss 
{sae}, 
vrsqrt28ss 
{sae}, 
#VAARG_64 
#eh_return, addr: 
#SEH_SaveXMM 
#VASTART_SAVE_XMM_REGS 
#SEH_StackAlloc 
#SEH_PushFrame 
#SEH_SetFrame 
#SEH_SaveReg 
#SEH_PushReg 
#CMOV_GR32* PSEUDO!
#CMOV_GR16* PSEUDO!
#CMOV_RFP80 PSEUDO!
#CMOV_V4F32 PSEUDO!
#CMOV_V16F32 PSEUDO!
#CMOV_V8F32 PSEUDO!
#CMOV_RFP32 PSEUDO!
#CMOV_FR32 PSEUDO!
#CMOV_V2F64 PSEUDO!
#CMOV_V4F64 PSEUDO!
#CMOV_V8F64 PSEUDO!
#CMOV_V2I64 PSEUDO!
#CMOV_V4I64 PSEUDO!
#CMOV_V8I64 PSEUDO!
#CMOV_RFP64 PSEUDO!
#CMOV_FR64 PSEUDO!
#CMOV_GR8 PSEUDO!
#ACQUIRE_MOV PSEUDO!
#RELEASE_MOV PSEUDO!
lcalll
ljmpl
lcallq
ljmpq
lcallw
ljmpw
xsha1
fld1
fprem1
f2xm1
fyl2xp1
#EH_SJLJ_LONGJMP32
#EH_SJLJ_SETJMP32
# TLSCall_32
# TLS_addr32
# TLS_base_addr32
fldlg2
fldln2
int3
#EH_SJLJ_LONGJMP64
#EH_SJLJ_SETJMP64
# TLSCall_64
# TLS_addr64
# TLS_base_addr64
rex64
data16
xsha256
LIFETIME_END
BUNDLE
DBG_VALUE
# XBEGIN
#ADJCALLSTACKDOWN
#ADJCALLSTACKUP
#MEMBARRIER
LIFETIME_START
ud2b
xcryptecb
xcryptcfb
xcryptofb
rep;stosb
rep;movsb
xlatb
clac
stac
xcryptcbc
rdpmc
vmfunc
rdtsc
cpuid
xend
cltd
cwtd
wbinvd
fldl2e
lfence
mfence
sfence
fscale
vmresume
repne
xacquire
xstore
xrelease
pause
#SEH_Epilogue
#SEH_EndPrologue
leave
vmxoff
lahf
sahf
vmlaunch
clgi
stgi
fldpi
# win32 fptoui
lock
%dx, %al
pushal
popal
pushfl
popfl
vmmcall
vmcall
syscall
vzeroall
rep;stosl
rep;movsl
iretl
lretl
sysretl
sysexitl
cwtl
montmul
fxam
fprem
fpatan
fptan
fsin
# dynamic stack allocation
into
cqto
rdtscp
vpcmp
vcmp
fnop
fcompp
fucompp
fdecstp
fincstp
pushfq
popfq
rep;stosq
rep;movsq
iretq
lretq
sysretq
sysexitq
cltq
vzeroupper
sysenter
monitor
rdmsr
wrmsr
xcryptctr
fabs
pushl
pushw
pushl
popl
pushw
popw
pushl
popl
pushw
popw
pushl
popl
pushq
popq
pushw
popw
pushl
popl
pushq
popq
pushw
popw
swapgs
fchs
# variable sized alloca for segmented stacks
encls
femms
fcos
fsincos
pushl
popl
pushw
popw
clts
fldl2t
fxtract
mwait
fninit
frndint
fsqrt
xtest
ftst
enclu
xgetbv
xsetbv
pushaw
popaw
pushfw
popfw
rep;stosw
rep;movsw
cbtw
iretw
lretw
fyl2x
fnstsw
%dx, %ax
vmload
%eax
vmsave
%eax
vmrun
%eax
skinit
%eax
invlpga
%ecx, %eax
%dx, %eax
vmload
%rax
vmsave
%rax
vmrun
%rax
invlpga
%ecx, %rax
outb
%al, %dx
outw
%ax, %dx
outl
%eax, %dx
fnclex
fldz
st(0)
st(1)
st(2)
st(3)
st(4)
st(5)
st(6)
st(7)
xmm10
ymm10
zmm10
cr10
xmm20
ymm20
zmm20
xmm30
ymm30
zmm30
xmm0
ymm0
zmm0
xmm11
ymm11
zmm11
cr11
xmm21
ymm21
zmm21
xmm31
ymm31
zmm31
xmm1
ymm1
zmm1
xmm12
ymm12
zmm12
cr12
xmm22
ymm22
zmm22
xmm2
ymm2
zmm2
xmm13
ymm13
zmm13
cr13
xmm23
ymm23
zmm23
xmm3
ymm3
zmm3
xmm14
ymm14
zmm14
cr14
xmm24
ymm24
zmm24
xmm4
ymm4
zmm4
xmm15
ymm15
zmm15
cr15
xmm25
ymm25
zmm25
xmm5
ymm5
zmm5
xmm16
ymm16
zmm16
xmm26
ymm26
zmm26
xmm6
ymm6
zmm6
xmm17
ymm17
zmm17
xmm27
ymm27
zmm27
xmm7
ymm7
zmm7
xmm18
ymm18
zmm18
xmm28
ymm28
zmm28
xmm8
ymm8
zmm8
xmm19
ymm19
zmm19
xmm29
ymm29
zmm29
xmm9
ymm9
zmm9
r10b
r11b
r12b
r13b
r14b
r15b
r10d
r11d
r12d
r13d
r14d
r15d
flags
r10w
r11w
r12w
r13w
r14w
r15w
fpsw
N4llvm17X86ATTInstPrinterE
 &p*
mE74C
Bap`
>=C0
 S^0
:S^0
<S^0
4&L0
8&L0
4RL0
8RL0
4UM0
8UM0
BA0A
BuC0
>|G0
4!E0
vbroadcasti32x4 
vbroadcasti64x4 
kandb 
vpmovusdb 
vpmovsdb 
vpmovdb 
kandnb 
vpmovusqb 
vpmovsqb 
vpmovqb 
korb 
kxnorb 
kxorb 
knotb 
kmovb 
vpermi2d 
vpermt2d 
vpbroadcastmw2d 
vpsrad 
vpsubd 
vpmovsxbd 
vpmovzxbd 
vpaddd 
kandd 
vpandd 
vpgatherdd 
vpscatterdd 
vpshufd 
vpslld 
vpmulld 
vpsrld 
vpblendmd 
vptestnmd 
vpermd 
vptestmd 
kandnd 
vpandnd 
valignd 
vfmaddsub132pd 
vfmsub132pd 
vfnmsub132pd 
vfmsubadd132pd 
vfmadd132pd 
vfnmadd132pd 
vpermi2pd 
vcvtdq2pd 
vcvtudq2pd 
vcvtps2pd 
vpermt2pd 
vfmaddsub213pd 
vfmsub213pd 
vfnmsub213pd 
vfmsubadd213pd 
vfmadd213pd 
vfnmadd213pd 
vrcp14pd 
vrsqrt14pd 
vrcp28pd 
vrsqrt28pd 
vsubpd 
vaddpd 
vgatherdpd 
vscatterdpd 
vrndscalepd 
vshufpd 
vpermilpd 
vmulpd 
vblendmpd 
vpermpd 
vminpd 
vcmppd 
vgatherqpd 
vscatterqpd 
vdivpd 
vmaxpd 
vpcmpeqd 
vpgatherqd 
vpscatterqd 
vpmovusqd 
vpmovsqd 
vpmovqd 
kord 
kxnord 
vpord 
kxord 
vpxord 
vcvtsi2sd 
vcvtusi2sd 
vfmsub213sd 
vfnmsub213sd 
vfmadd213sd 
vfnmadd213sd 
vrcp14sd 
vrsqrt14sd 
vrcp28sd 
vrsqrt28sd 
vpabsd 
vrndscalesd 
vpminsd 
vbroadcastsd 
vmovsd 
vpmaxsd 
vpconflictd 
vpcmpgtd 
vplzcntd 
knotd 
vpbroadcastd 
vpminud 
vpmaxud 
vpsravd 
vpsllvd 
vpsrlvd 
kmovd 
vpmovsxwd 
vpmovzxwd 
vcvtps2ph 
vcvttsd2si 
vcvtsd2si 
vcvttss2si 
vcvtss2si 
vcvttsd2usi 
vcvtsd2usi 
vcvttss2usi 
vcvtss2usi 
vmovddup 
vmovshdup 
vmovsldup 
vpbroadcastmb2q 
vpermi2q 
vpermt2q 
vpsraq 
vpsubq 
vpmovsxbq 
vpmovzxbq 
vcvttpd2dq 
vcvtpd2dq 
vcvttps2dq 
vcvtps2dq 
vpaddq 
vpunpckhdq 
vpunpckldq 
vpmuldq 
kandq 
vpandq 
vpunpckhqdq 
vpunpcklqdq 
vpgatherdq 
vpscatterdq 
vcvttpd2udq 
vcvtpd2udq 
vcvttps2udq 
vcvtps2udq 
vpmuludq 
vpmovsxdq 
vpmovzxdq 
vpsllq 
vpsrlq 
vpblendmq 
vptestnmq 
vpermq 
vptestmq 
kandnq 
vpandnq 
valignq 
vpcmpeqq 
vpgatherqq 
vpscatterqq 
korq 
kxnorq 
vporq 
kxorq 
vpxorq 
vpabsq 
vpminsq 
vpmaxsq 
vpconflictq 
vpcmpgtq 
vplzcntq 
knotq 
vpbroadcastq 
vpminuq 
vpmaxuq 
vpsravq 
vpsllvq 
vpsrlvq 
kmovq 
vpmovsxwq 
vpmovzxwq 
vfmaddsub132ps 
vfmsub132ps 
vfnmsub132ps 
vfmsubadd132ps 
vfmadd132ps 
vfnmadd132ps 
vcvtpd2ps 
vpermi2ps 
vcvtdq2ps 
vcvtudq2ps 
vpermt2ps 
vfmaddsub213ps 
vfmsub213ps 
vfnmsub213ps 
vfmsubadd213ps 
vfmadd213ps 
vfnmadd213ps 
vrcp14ps 
vrsqrt14ps 
vrcp28ps 
vrsqrt28ps 
vsubps 
vaddps 
vgatherdps 
vscatterdps 
vrndscaleps 
vshufps 
vpermilps 
vmulps 
vblendmps 
vpermps 
vminps 
vcmpps 
vgatherqps 
vscatterqps 
vdivps 
vmaxps 
vcvtsi2ss 
vcvtusi2ss 
vfmsub213ss 
vfnmsub213ss 
vfmadd213ss 
vfnmadd213ss 
vrcp14ss 
vrsqrt14ss 
vrcp28ss 
vrsqrt28ss 
vrndscaless 
vbroadcastss 
vmovss 
kunpckbw 
kandw 
vpmovusdw 
vpmovsdw 
vpmovdw 
kshiftlw 
kandnw 
vpmovusqw 
vpmovsqw 
vpmovqw 
korw 
kxnorw 
kxorw 
kshiftrw 
knotw 
kortestw 
kmovw 
prefetcht0
sha1msg1
sha256msg1
prefetcht1
pfrcpit1
pfrsqit1
vmovdqa32
crc32
vmovdqu32
sha1msg2
sha256msg2
sha256rnds2
prefetcht2
pfrcpit2
vmovdqa64
fxsave64
fxrstor64
xsaveopt64
vmovdqu64
sha1rnds4
vextractf32x4
vinsertf32x4
vextracti32x4
vinserti32x4
vextractf64x4
vinsertf64x4
vextracti64x4
vinserti64x4
vmovdqu16
vperm2f128
vextractf128
vinsertf128
vbroadcastf128
vperm2i128
vextracti128
vinserti128
vbroadcasti128
vmovdqu8
vmovntdqa
vmovdqa
seta
prefetchnta
cmova
cmpxchg16b
cmpxchg8b
vpshab
vpsubb
vpaddb
vpshufb
vpavgb
vpmovmskb
vpshlb
vpcomb
vpsignb
vpcmpeqb
vpinsrb
vpextrb
vpabsb
vpsubsb
vpaddsb
vpminsb
stosb
cmpsb
vpsubusb
vpaddusb
pavgusb
movsb
vpmaxsb
setb
vpcmpgtb
vprotb
vpbroadcastb
vpcomub
vpminub
pfsub
fisub
vpmaxub
vpblendvb
cmovb
vpacksswb
vpackuswb
pfacc
pfnacc
pfpnacc
vaesdec
blcic
blsic
t1mskc
vaesimc
vaesenc
vmread
vpshad
vpsrad
vphaddbd
vphaddubd
vphsubd
vpsubd
vpmovsxbd
vpmovzxbd
pfadd
fiadd
xadd
vphaddd
vpaddd
vpblendd
vpgatherdd
vpmacsdd
vpmacssdd
rdseed
pi2fd
vpshufd
pf2id
invpcid
invvpid
fbld
vpshld
fild
vpslld
vpmulld
vpsrld
vmptrld
vpcomd
vpermd
vpand
rdrand
vpsignd
bound
vfmaddsub231pd
vfmsub231pd
vfnmsub231pd
vfmsubadd231pd
vfmadd231pd
vfnmadd231pd
vfmaddsub132pd
vfmsub132pd
vfnmsub132pd
vfmsubadd132pd
vfmadd132pd
vfnmadd132pd
cvtpi2pd
vpermil2pd
vcvtdq2pd
vcvtps2pd
vfmaddsub213pd
vfmsub213pd
vfnmsub213pd
vfmsubadd213pd
vfmadd213pd
vfnmadd213pd
vmovapd
pswapd
vfmaddsubpd
vaddsubpd
vhsubpd
vfmsubpd
vfnmsubpd
vsubpd
vfmsubaddpd
vhaddpd
vfmaddpd
vfnmaddpd
vaddpd
vandpd
vblendpd
vroundpd
vgatherdpd
vshufpd
vunpckhpd
vmovhpd
vmovmskpd
vpermilpd
vunpcklpd
vmulpd
vmovlpd
vpcmpd
vpermpd
vandnpd
vminpd
vdppd
vcmppd
vgatherqpd
vorpd
vxorpd
vmovntpd
vsqrtpd
vtestpd
vmovupd
vblendvpd
vdivpd
vmaskmovpd
vmaxpd
vfrczpd
vpcmpeqd
vpgatherqd
shrd
vpinsrd
vpextrd
vfmsub231sd
vfnmsub231sd
vfmadd231sd
vfnmadd231sd
vfmsub132sd
vfnmsub132sd
vfmadd132sd
vfnmadd132sd
vcvtsi2sd
vcvtusi2sd
vcvtss2sd
vfmsub213sd
vfnmsub213sd
vfmadd213sd
vfnmadd213sd
vpabsd
vfmsubsd
vfnmsubsd
vsubsd
vfmaddsd
vfnmaddsd
vaddsd
vroundsd
vucomisd
vcomisd
vmulsd
vpminsd
vminsd
stosd
vcmpsd
movntsd
vsqrtsd
vbroadcastsd
vdivsd
vmovsd
vpmaxsd
vmaxsd
vfrczsd
vpcmpgtd
vprotd
vpbroadcastd
vpcomud
vpminud
vpcmpud
vpmaxud
vpsravd
vpsllvd
vpsrlvd
vpmaskmovd
vmovd
vphsubwd
vphaddwd
vpmaddwd
vpunpckhwd
vpunpcklwd
vpmacswd
vpmadcswd
vpmacsswd
vpmadcsswd
vphadduwd
vpmovsxwd
vpmovzxwd
movsxd
setae
cmovae
setbe
cmovbe
ffree
pfcmpge
setge
cmovge
setle
cmovle
loopne
setne
cmovne
loope
rdfsbase
wrfsbase
rdgsbase
wrgsbase
sete
vmwrite
sha1nexte
fnsave
fxsave
cmove
retf
cmpxchg
invlpg
setg
cmovg
prefetch
fxch
vcvtps2ph
vpmacsdqh
vpmacssdqh
clflush
push
blci
bzhi
fcomi
fucomi
cvttpd2pi
cvtpd2pi
cvttps2pi
cvtps2pi
fcompi
fucompi
vpcmpestri
vpcmpistri
vcvttsd2si
vcvtsd2si
vcvttss2si
vcvtss2si
blsi
movnti
blcmsk
blsmsk
tzmsk
lcall
blcfill
blsfill
arpl
vpmacsdql
vpmacssdql
setl
pfmul
fimul
cmovl
fcom
ficom
fucom
vpperm
vpcmpestrm
vpcmpistrm
vpandn
xbegin
pfmin
vmxon
setno
cmovno
seto
cmovo
bswap
fsubp
pfrcp
faddp
pdep
fmulp
ljmp
fcomp
ficomp
fucomp
setnp
cmovnp
loop
fsubrp
fdivrp
setp
fbstp
fstp
fistp
fisttp
vmovddup
vmovshdup
vmovsldup
#EH_SjLj_Setup
fdivp
cmovp
movdq2q
vpshaq
vphaddbq
vphaddubq
vpsubq
vpmovsxbq
vpmovzxbq
vcvttpd2dq
vcvtpd2dq
movq2dq
vcvttps2dq
vcvtps2dq
vphsubdq
vpaddq
vphadddq
vpunpckhdq
vpunpckldq
vpslldq
vpsrldq
vpmuldq
vpunpckhqdq
vpunpcklqdq
vpclmulqdq
vpgatherdq
vmovntdq
vphaddudq
vpmuludq
vpmovsxdq
vpmovzxdq
pfcmpeq
retfq
vpshlq
vpsllq
vpsrlq
vpcomq
vpermq
vpcmpq
vpcmpeqq
vpgatherqq
vpinsrq
vpextrq
stosq
cmpsq
movsq
vpcmpgtq
movntq
vprotq
insertq
vpbroadcastq
vpcomuq
vpcmpuq
vpsllvq
vpsrlvq
vpmaskmovq
vmovq
vphaddwq
vphadduwq
vpmovsxwq
vpmovzxwq
vmclear
pfsubr
fisubr
enter
vpalignr
vpor
frstor
fxrstor
vpxor
verr
vldmxcsr
vstmxcsr
blsr
bextr
fdivr
fidivr
movabs
blcs
setns
cmovns
vfmaddsub231ps
vfmsub231ps
vfnmsub231ps
vfmsubadd231ps
vfmadd231ps
vfnmadd231ps
vfmaddsub132ps
vfmsub132ps
vfnmsub132ps
vfmsubadd132ps
vfmadd132ps
vfnmadd132ps
vcvtpd2ps
vcvtph2ps
cvtpi2ps
vpermil2ps
vcvtdq2ps
vfmaddsub213ps
vfmsub213ps
vfnmsub213ps
vfmsubadd213ps
vfmadd213ps
vfnmadd213ps
vmovaps
vfmaddsubps
vaddsubps
vhsubps
vfmsubps
vfnmsubps
vsubps
vfmsubaddps
vhaddps
vfmaddps
vfnmaddps
vaddps
vandps
vblendps
vroundps
vgatherdps
vshufps
vunpckhps
vmovlhps
vmovhps
vmovmskps
vmovhlps
vpermilps
vunpcklps
vmulps
vmovlps
vpermps
vandnps
vminps
vrcpps
vdpps
vcmpps
vgatherqps
vorps
vxorps
vextractps
vmovntps
vinsertps
vrsqrtps
vsqrtps
vtestps
vmovups
vblendvps
vdivps
vmaskmovps
vmaxps
vfrczps
vfmsub231ss
vfnmsub231ss
vfmadd231ss
vfnmadd231ss
vfmsub132ss
vfnmsub132ss
vfmadd132ss
vfnmadd132ss
vcvtsd2ss
vcvtsi2ss
vcvtusi2ss
vfmsub213ss
vfnmsub213ss
vfmadd213ss
vfnmadd213ss
vfmsubss
vfnmsubss
vsubss
vfmaddss
vfnmaddss
vaddss
vroundss
vucomiss
vcomiss
vmulss
vminss
vrcpss
vcmpss
movntss
vrsqrtss
vsqrtss
vbroadcastss
vdivss
vmovss
vmaxss
vfrczss
sets
cmovs
lgdt
sgdt
lidt
sidt
lldt
sldt
pfcmpgt
popcnt
lzcnt
tzcnt
invept
xsaveopt
xabort
pfrsqrt
vaesdeclast
vaesenclast
vptest
fist
vaeskeygenassist
vmptrst
pext
vlddqu
vmaskmovdqu
vmovdqu
fdiv
fidiv
fldenv
fnstenv
vpcmov
vpshaw
vpsraw
vphsubbw
vmpsadbw
vpsadbw
vphaddbw
vpunpckhbw
vpunpcklbw
vphaddubw
vphsubw
vpsubw
vpmovsxbw
vpmovzxbw
fldcw
fnstcw
vphaddw
vpaddw
vpblendw
vpackssdw
vpackusdw
pi2fw
pshufw
vpavgw
prefetchw
vpshufhw
vpmulhw
pf2iw
vpshuflw
vpshlw
vpsllw
vpmullw
vpsrlw
vpcomw
vpsignw
vpcmpeqw
verw
pmulhrw
vpinsrw
vpextrw
vpabsw
vpmaddubsw
vphsubsw
vpsubsw
vphaddsw
vpaddsw
lmsw
smsw
vpminsw
stosw
cmpsw
vpmulhrsw
fnstsw
vpsubusw
vpaddusw
movsw
vpmaxsw
vpcmpgtw
vprotw
vpbroadcastw
vpmulhuw
vpcomuw
vpminuw
vphminposuw
vpmaxuw
vpmacsww
vpmacssww
pfmax
adcx
shlx
mulx
adox
vcvttpd2dqx
vcvtpd2dqx
sarx
shrx
rorx
vcvtpd2psx
movsx
movzx
jecxz
jcxz
jrcxz
fcmovnb
st(0), 
fcmovb
st(0), 
fcmovnbe
st(0), 
fcmovbe
st(0), 
fcmovne
st(0), 
fcmove
st(0), 
fcmovnu
st(0), 
fcmovu
st(0), 
al, 
scasb
al, 
lodsb
al, 
al, 
al, 
al, 
al, 
al, 
al, 
al, 
movabs
al, 
test
al, 
al, 
ax, 
ax, 
ax, 
ax, 
ax, 
xchg
ax, 
ax, 
ax, 
ax, 
movabs
ax, 
test
ax, 
ax, 
scasw
ax, 
lodsw
ax, 
eax, 
eax, 
eax, 
eax, 
eax, 
scasd
eax, 
lodsd
eax, 
xchg
eax, 
eax, 
eax, 
eax, 
movabs
eax, 
test
eax, 
eax, 
rax, 
rax, 
rax, 
rax, 
rax, 
xchg
rax, 
rax, 
scasq
rax, 
lodsq
rax, 
rax, 
movabs
rax, 
test
rax, 
outsb
dx, 
outsd
dx, 
outsw
dx, 
#VAARG_64 
#eh_return, addr: 
#SEH_SaveXMM 
#VASTART_SAVE_XMM_REGS 
#SEH_StackAlloc 
#SEH_PushFrame 
#SEH_SetFrame 
#SEH_SaveReg 
#SEH_PushReg 
#CMOV_GR32* PSEUDO!
#CMOV_GR16* PSEUDO!
#CMOV_RFP80 PSEUDO!
#CMOV_V4F32 PSEUDO!
#CMOV_V16F32 PSEUDO!
#CMOV_V8F32 PSEUDO!
#CMOV_RFP32 PSEUDO!
#CMOV_FR32 PSEUDO!
#CMOV_V2F64 PSEUDO!
#CMOV_V4F64 PSEUDO!
#CMOV_V8F64 PSEUDO!
#CMOV_V2I64 PSEUDO!
#CMOV_V4I64 PSEUDO!
#CMOV_V8I64 PSEUDO!
#CMOV_RFP64 PSEUDO!
#CMOV_FR64 PSEUDO!
#CMOV_GR8 PSEUDO!
#ACQUIRE_MOV PSEUDO!
#RELEASE_MOV PSEUDO!
xsha1
fld1
fprem1
f2xm1
fyl2xp1
#EH_SJLJ_LONGJMP32
#EH_SJLJ_SETJMP32
# TLSCall_32
# TLS_addr32
# TLS_base_addr32
fldlg2
fldln2
int3
#EH_SJLJ_LONGJMP64
#EH_SJLJ_SETJMP64
# TLSCall_64
# TLS_addr64
# TLS_base_addr64
rex64
data16
xsha256
LIFETIME_END
BUNDLE
DBG_VALUE
# XBEGIN
#ADJCALLSTACKDOWN
#ADJCALLSTACKUP
#MEMBARRIER
LIFETIME_START
ud2b
xcryptecb
xcryptcfb
xcryptofb
rep stosb
rep movsb
xlatb
clac
stac
xcryptcbc
rdpmc
vmfunc
rdtsc
pushfd
popfd
cpuid
xend
rep stosd
rep movsd
iretd
wbinvd
fldl2e
lfence
mfence
sfence
cwde
fscale
vmresume
repne
cdqe
xacquire
xstore
xrelease
pause
#SEH_Epilogue
#SEH_EndPrologue
leave
vmxoff
lahf
sahf
pushf
popf
retf
vmlaunch
clgi
stgi
fldpi
# win32 fptoui
lock
dx, al
pushal
popal
vmmcall
vmcall
syscall
vzeroall
montmul
fxam
fprem
fpatan
fptan
fsin
# dynamic stack allocation
into
rdtscp
vpcmp
vcmp
fnop
fcompp
fucompp
fdecstp
fincstp
pushfq
popfq
retfq
rep stosq
rep movsq
iretq
vzeroupper
sysenter
monitor
rdmsr
wrmsr
xcryptctr
fabs
push
push
push
push
push
swapgs
fchs
# variable sized alloca for segmented stacks
encls
femms
fcos
fsincos
push
clts
fldl2t
fxtract
iret
sysret
mwait
fninit
sysexit
frndint
fsqrt
xtest
ftst
enclu
xgetbv
xsetbv
pushaw
popaw
rep stosw
rep movsw
fyl2x
fnstsw
dx, ax
vmload
vmsave
vmrun
skinit
dx, eax
vmload
vmsave
vmrun
invlpga
eax, ecx
invlpga
rax, ecx
al, dx
ax, dx
eax, dx
fnclex
fldz
vgatherpf0dpd 
vscatterpf0dpd 
vgatherpf1dpd 
vscatterpf1dpd 
vgatherpf0qpd 
vscatterpf0qpd 
vgatherpf1qpd 
vscatterpf1qpd 
vgatherpf0dps 
vscatterpf0dps 
vgatherpf1dps 
vscatterpf1dps 
vgatherpf0qps 
vscatterpf0qps 
vgatherpf1qps 
vscatterpf1qps 
st(0)
st(1)
st(2)
st(3)
st(4)
st(5)
st(6)
st(7)
xmm10
ymm10
zmm10
cr10
xmm20
ymm20
zmm20
xmm30
ymm30
zmm30
xmm0
ymm0
zmm0
xmm11
ymm11
zmm11
cr11
xmm21
ymm21
zmm21
xmm31
ymm31
zmm31
xmm1
ymm1
zmm1
xmm12
ymm12
zmm12
cr12
xmm22
ymm22
zmm22
xmm2
ymm2
zmm2
xmm13
ymm13
zmm13
cr13
xmm23
ymm23
zmm23
xmm3
ymm3
zmm3
xmm14
ymm14
zmm14
cr14
xmm24
ymm24
zmm24
xmm4
ymm4
zmm4
xmm15
ymm15
zmm15
cr15
xmm25
ymm25
zmm25
xmm5
ymm5
zmm5
xmm16
ymm16
zmm16
xmm26
ymm26
zmm26
xmm6
ymm6
zmm6
xmm17
ymm17
zmm17
xmm27
ymm27
zmm27
xmm7
ymm7
zmm7
xmm18
ymm18
zmm18
xmm28
ymm28
zmm28
xmm8
ymm8
zmm8
xmm19
ymm19
zmm19
xmm29
ymm29
zmm29
xmm9
ymm9
zmm9
r10b
r11b
r12b
r13b
r14b
r15b
r10d
r11d
r12d
r13d
r14d
r15d
flags
r10w
r11w
r12w
r13w
r14w
r15w
fpsw
N4llvm19X86IntelInstPrinterE
N12_GLOBAL__N_115ELFObjectWriterE
N4llvm12MCAsmBackendE
N4llvm9MCAsmInfoE
N4llvm13MCAsmInfoCOFFE
N4llvm18MCAsmInfoMicrosoftE
N4llvm16MCAsmInfoGNUCOFFE
N4llvm15MCAsmInfoDarwinE
N4llvm12MCAsmInfoELFE
N12_GLOBAL__N_113MCAsmStreamerE
N4llvm14format_object1IhEE
N4llvm17MCEncodedFragmentE
N4llvm10MCFragmentE
N4llvm10ilist_nodeINS_10MCFragmentEEE
N4llvm15ilist_half_nodeINS_10MCFragmentEEE
N4llvm27MCEncodedFragmentWithFixupsE
N4llvm14MCDataFragmentE
N4llvm28MCCompactEncodedInstFragmentE
N4llvm19MCRelaxableFragmentE
N4llvm15MCAlignFragmentE
N4llvm14MCFillFragmentE
N4llvm13MCOrgFragmentE
N4llvm13MCLEBFragmentE
N4llvm23MCDwarfLineAddrFragmentE
N4llvm24MCDwarfCallFrameFragmentE
N4llvm13MCCodeEmitterE
N4llvm23MCELFObjectTargetWriterE
N4llvm13MCELFStreamerE
N4llvm12MCTargetExprE
N4llvm6MCExprE
N4llvm13MCInstPrinterE
N4llvm15MCInstrAnalysisE
N12_GLOBAL__N_115MCMachOStreamerE
N4llvm24MCMachObjectTargetWriterE
N12_GLOBAL__N_114MCNullStreamerE
N4llvm16MCObjectStreamerE
N4llvm14MCObjectWriterE
N4llvm9MCSectionE
N4llvm13MCSectionCOFFE
N4llvm12MCSectionELFE
N4llvm14MCSectionMachOE
N4llvm16MCTargetStreamerE
N4llvm10MCStreamerE
N4llvm12MCSymbolizerE
N4llvm7Win64EH13UnwindEmitterE
N4llvm5WinEH13UnwindEmitterE
N4llvm16MachObjectWriterE
ZNK4llvm14MCLOHDirective11getEmitSizeERKNS_16MachObjectWriterERKNS_11MCAsmLayoutEE20raw_counting_ostream
N4llvm14format_object3IjPKcS2_EE
N4llvm27MCWinCOFFObjectTargetWriterE
N12_GLOBAL__N_119WinCOFFObjectWriterE
N4llvm17MCWinCOFFStreamerE
N4llvm24AssemblyAnnotationWriterE
N4llvm14AssemblyWriterE
N4llvm13AttributeImplE
N4llvm17EnumAttributeImplE
N4llvm16IntAttributeImplE
N4llvm19StringAttributeImplE
x86.sse2.pcmpeq.x86.sse2.pcmpgt.x86.avx2.pcmpeq.x86.avx2.pcmpgt.x86.avx.vpermil.broadcast.sd.256x86.avx.vbroadcax86.sse41.ptestcx86.sse41.ptestzx86.xop.vfrcz.ssx86.xop.vfrcz.sdllvm.x86.sse2.pcllvm.x86.avx2.pcavx.movnt.dq.256llvm.x86.avx.movavx.movnt.ps.256avx.movnt.pd.256llvm.x86.xop.vpcom
sse42.crc32.64.8llvm.x86.sse42.c6.avx.vbroadcastllvm.x86.avx.vbrx.vpermil.pd.256llvm.x86.avx.vpeN4llvm10BasicBlockE
N4llvm10ilist_nodeINS_10BasicBlockEEE
N4llvm15ilist_half_nodeINS_10BasicBlockEEE
N4llvm8ConstantE
N4llvm21ConstantAggregateZeroE
N4llvm19ConstantPointerNullE
N4llvm22ConstantDataSequentialE
N4llvm17ConstantDataArrayE
N4llvm18ConstantDataVectorE
N4llvm12ConstantExprE
N4llvm10UndefValueE
N4llvm11ConstantIntE
N4llvm10ConstantFPE
N4llvm13ConstantArrayE
N4llvm14ConstantStructE
N4llvm14ConstantVectorE
N4llvm12BlockAddressE
N4llvm14DataLayoutPassE
N4llvm10DebugRecVHE
N4llvm23DiagnosticInfoInlineAsmE
N4llvm14DiagnosticInfoE
N4llvm23DiagnosticInfoStackSizeE
N4llvm34DiagnosticInfoDebugMetadataVersionE
N4llvm27DiagnosticInfoSampleProfileE
N4llvm30DiagnosticInfoOptimizationBaseE
N4llvm32DiagnosticInfoOptimizationRemarkE
N4llvm38DiagnosticInfoOptimizationRemarkMissedE
N4llvm40DiagnosticInfoOptimizationRemarkAnalysisE
N4llvm33DiagnosticInfoOptimizationFailureE
N4llvm2cl3optIN12_GLOBAL__N_114PassRemarksOptELb1ENS0_6parserINSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEEEEE
N4llvm2cl11opt_storageIN12_GLOBAL__N_114PassRemarksOptELb1ELb1EEE
N4llvm2cl11OptionValueIN12_GLOBAL__N_114PassRemarksOptEEE
N4llvm2cl15OptionValueBaseIN12_GLOBAL__N_114PassRemarksOptELb1EEE
NSt3__120__shared_ptr_emplaceIN4llvm5RegexENS_9allocatorIS2_EEEE
N4llvm27DiagnosticPrinterRawOStreamE
N4llvm17DiagnosticPrinterE
N4llvm24DominatorTreeWrapperPassE
N4llvm17DominatorTreeBaseINS_10BasicBlockEEE
N4llvm13DominatorBaseINS_10BasicBlockEEE
mask.pbroadcast.86.avx512.mask.pvbroadcastf128.p.128
sse3.pmadd.ub.sw.vbroadcast.ss.p.aeskeygenassistsni.aeskeygenass3.pmul.hr.sw.128sse3.pmul.hr.sw.sub.with.overflow.
mul.with.overfloadd.with.overflotackprotectorcheck
ead.global.size.600.read.global.ize.
600.read.local.s600.read.ngroupsnted.ctr.nonzeropc.is.decrementex.read.lanemask.handle.internal..texsurf.handle.r.shared.to.gen.vvm.ptr.shared.ttr.local.to.gen.vvm.ptr.local.tor.global.to.gen.vvm.ptr.global.tr.gen.to.shared.vvm.ptr.gen.to.str.gen.to.param.vvm.ptr.gen.to.ptr.gen.to.local.vvm.ptr.gen.to.lr.gen.to.global.vvm.ptr.gen.to.gonstant.
vvm.ptr.gen.to.c.to.gen.
vvm.ptr.constantvvm.ldu.global.pvvm.ldu.global.ivvm.ldu.global.fvvm.ldg.global.pvvm.ldg.global.ivvm.ldg.global.fvvm.compiler.warn.
.compiler.error.vvm.compiler.errmic.load.inc.32.vvm.atomic.load.mic.load.dec.32.add.f32.
vvm.tex.unified.d.array.level.v4ex.unified.cube.ube.array.level.v4
um.mipmap.levelshannel.data.type.channel.data.type
ead.ptx.sreg.ntiead.ptx.sreg.tidsqrt.approx.ftz.f
xq.channel.orderph.w
ips.precr.sra.r.nstrprof.increment
exagon.S2.asr.i.exagon.S2.tableidx
rhrnd.goodsyntaxexagon.S5.vasrhr4.fastcorner9.no.patchpoint.voidxperimental.patcl.patchpoint.i64.functioncontexth.sjlj.functionckmap
xperimental.staconvert.from.fp16rm.neon.vst4lanerm.neon.vst3lanerm.neon.vst2lanerm.neon.vshiftu.rm.neon.vshifts.rm.neon.vshiftins.
rm.neon.vrsubhn.rm.neon.vrsqrts.rm.neon.vrsqrte.rm.neon.vrshifturm.neon.vrshiftsrm.neon.vrshiftnrm.neon.vrhaddu.rm.neon.vrhadds.rm.neon.vraddhn.rm.neon.vqshifturm.neon.vqshiftsu.
neon.vqshiftnsu.rm.neon.vqrshiftneon.vqrshiftnu.nsu.
neon.vqrshiftns.rm.neon.vqrdmulhrm.neon.vqmovnu.rm.neon.vqmovnsurm.neon.vqmovns.rm.neon.vqdmull.rm.neon.vqdmulh.rm.neon.vpaddlu.rm.neon.vpaddls.rm.neon.vpadalu.rm.neon.vpadals.rm.neon.vld4lanerm.neon.vld3lanerm.neon.vld2laneneon.vcvtfxu2fp.rm.neon.vcvtfxu2neon.vcvtfxs2fp.rm.neon.vcvtfxs2neon.vcvtfp2fxu.rm.neon.vcvtfp2fneon.vcvtfp2fxs.arch64.sisd.fabdarch64.neon.vsriarch64.neon.vsliarch64.neon.vcvtneon.vcopy.lane.arch64.neon.vcoph64.neon.usqadd.arch64.neon.usqaarch64.neon.ushll.
rte.
arch64.neon.ursqarch64.neon.urshh64.neon.urhadd.arch64.neon.urhah64.neon.urecpe.arch64.neon.urecarch64.neon.uqxtarch64.neon.uqsuh64.neon.uqshrn.arch64.neon.uqshhrn.
arch64.neon.uqrsh64.neon.uqrshl.arch64.neon.uqadarch64.neon.umularch64.neon.uminv.
arch64.neon.umaxarch64.neon.uhsuarch64.neon.uhadarch64.neon.uaddh64.neon.uaddlv.h64.neon.uaddlp.arch64.neon.uabdarch64.neon.tbx4arch64.neon.tbx3arch64.neon.tbx2arch64.neon.tbx1arch64.neon.tbl4arch64.neon.tbl3arch64.neon.tbl2arch64.neon.tbl1h64.neon.suqadd.arch64.neon.suqaarch64.neon.subhane.
arch64.neon.st4larch64.neon.st4.arch64.neon.st3larch64.neon.st3.arch64.neon.st2larch64.neon.st2.arch64.neon.st1x4.
arch64.neon.sshlarch64.neon.srshh64.neon.srhadd.arch64.neon.srhah64.neon.sqxtun.arch64.neon.sqxtarch64.neon.sqsurun.
h64.neon.sqshrn.h64.neon.sqshlu.4.neon.sqrshrun.h64.neon.sqrshl.4.neon.sqrdmulh.arch64.neon.sqrdarch64.neon.sqneg.
ull.
arch64.neon.sqdmulh.
arch64.neon.sqadarch64.neon.sqabarch64.neon.smularch64.neon.sminarch64.neon.smaxarch64.neon.shsuarch64.neon.shllarch64.neon.shadon.scalar.uqxtn.arch64.neon.scaln.scalar.sqxtun.on.scalar.sqxtn.arch64.neon.saddh64.neon.saddlv.h64.neon.saddlp.arch64.neon.sabdh64.neon.rsubhn.arch64.neon.rsubarch64.neon.rshrarch64.neon.rbith64.neon.raddhn.arch64.neon.raddarch64.neon.pmularch64.neon.ld4rarch64.neon.ld4larch64.neon.ld4.arch64.neon.ld3rarch64.neon.ld3larch64.neon.ld3.arch64.neon.ld2rarch64.neon.ld2larch64.neon.ld2.arch64.neon.ld1xrts.
arch64.neon.frsqh64.neon.frintn.arch64.neon.frinh64.neon.frecpx.arch64.neon.frech64.neon.frecps.h64.neon.frecpe.arch64.neon.fmulx.
arch64.neon.fminnmv.
nmp.
h64.neon.fminnm.h64.neon.fmaxnm.h64.neon.fcvtzu.arch64.neon.fcvth64.neon.fcvtzs.h64.neon.fcvtxn.h64.neon.fcvtpu.h64.neon.fcvtps.h64.neon.fcvtnu.h64.neon.fcvtns.h64.neon.fcvtmu.h64.neon.fcvtms.h64.neon.fcvtau.h64.neon.fcvtas.arch64.neon.faddarch64.neon.facgt.
arch64.neon.fabdarch64.neon.cls.arch64.neon.addparch64.neon.addharch64.neon.abs..sqdmulls.scalar.crypto.sha256suarch64.crypto.sh.crypto.sha256h2simc
arch64.crypto.aeMDGPU.trig.preopMDGPU.rsq.clampeMDGPU.div.scale.MDGPU.div.fixup.x_read_lanemask_uiltin_ptx_read_m_read_ptx_sreg___nvvm_read_ptx_um_mipmap_levelshannel_data_type_channel_data_tyn_ia32_vpermil2puiltin_ia32_vperead_ptx_sreg_ntid_
djust_trampolineead_ptx_sreg_tid_
sqrt_approx_ftz_xq_channel_orderuiltin_debugtrapEXAGON_S2_asr_i___builtin_HEXAGOAGON_S2_tableidx_HEXAGON_M2_mpy_N_
4_fastcorner9_no__builtin_circ_ldd
dgpu_rsq_clamped__builtin_amdgpumdgpu_trig_preopltin_amdgpu_div__amdgpu_div_fmastin_amdgpu_ldexp_r
precr_sra_r_ph_w__builtin_mips_puiltin_mips_precead_global_size___builtin_r600_rread_local_size_00_read_ngroups_r600_read_tidig__r600_read_tgid___builtin_bitrev_pointer
__builtin_threaduiltin_arm_mcrr2__builtin_arm_mcuiltin_altivec_v__builtin_altivec_
_ia32_pbroadcast__builtin_ia32_p_ia32_vpconflict__builtin_ia32_veskeygenassist128
FromCoprocessor2_MoveFromCoprocessor
veToCoprocessor2_MoveToCoprocess
JJJJJJJ
JJJJJJJJJJJ
JJJJ@
/,,/{
//,/
JJJJJJJ
JJJJJJJJJJJ
JJJJ///
//////
///////
++++F
++++F
...D
,,,,YYYY;;;;JJJJ,,,
,,,,YYYY;;;;JJJJ,,,
,,,,,,,
,,,,,,,
,,,,,,,
YYJJ;;,,JJ;;YYJJ;;,,JJ;;U99
YYJJ;;,,JJ;;YYJJ;;,,JJ;;U99
zzzz
zzzz
;;;;JJJJ;;;;JJJJUD
,,,,YYYY;;;;JJJJU99
;;;;JJJJ;;;;JJJJUD
,,,,YYYY;;;;JJJJU
,,,,YYYY;;;;JJJJ@
PD33PD33PD33PDDDPDDDPDDDPD33PD33PD33P4
PD33PD33PD33PDDDPDDDPDDDPD33PD33PD33PD4
PD33PDDDPD33P4
PD33PDDDPD33PD4
zzzzzzz
;;;;;;;;zzz
;;;;J,,JJ;;JJ;;JJ,,JJ;;JJ;;J;,,
zzzzJJJ,;JJ
JJJJJJJ
----<<<
 K.D0L.D [.D [.D3
GCLLL
|L|CK
KBL|LCL|LCK
KBL|LCL|LC
|L|CL.L
|<|C<|
B|||C/
B|||C/
 K.D0L.D [.D [.D
B|||C
{{{{
zzzz{{{{
zzzz
zzzz{{{{
zzzz{{{{
zzzz
zzzz{{{{
zzzz{{{{
zzzz
zzzz{{{{
zzzz 
JJJJ
zzzz
,,,,;;;
B,$'
YYY"
YYYYZZZZ,,,
JJJJYJJYYJJYJJJJYJJYYJJYJ;;J;;;;J;;J;;;;J;;JJ;;J,,,,,,,


N4llvm8ArgumentE
N4llvm10ilist_nodeINS_8ArgumentEEE
N4llvm15ilist_half_nodeINS_8ArgumentEEE
N4llvm8FunctionE
N4llvm10ilist_nodeINS_8FunctionEEE
N4llvm15ilist_half_nodeINS_8FunctionEEE
N4llvm14format_object2IjjEE
N4llvm14format_object2IdjEE
N4llvm14GVMaterializerE
N4llvm11GlobalValueE
N4llvm12GlobalObjectE
N4llvm14GlobalVariableE
N4llvm10ilist_nodeINS_14GlobalVariableEEE
N4llvm15ilist_half_nodeINS_14GlobalVariableEEE
N4llvm11GlobalAliasE
N4llvm10ilist_nodeINS_11GlobalAliasEEE
N4llvm15ilist_half_nodeINS_11GlobalAliasEEE
N12_GLOBAL__N_122PrintModulePassWrapperE
N12_GLOBAL__N_124PrintFunctionPassWrapperE
N12_GLOBAL__N_119PrintBasicBlockPassE
N4llvm9InlineAsmE
N4llvm11InstructionE
N4llvm10ilist_nodeINS_11InstructionEEE
N4llvm15ilist_half_nodeINS_11InstructionEEE
ccccccccc
N4llvm14TerminatorInstE
N4llvm16UnaryInstructionE
N4llvm8CastInstE
N4llvm17GetElementPtrInstE
N4llvm7CmpInstE
N4llvm8ICmpInstE
N4llvm8FCmpInstE
N4llvm8CallInstE
N4llvm10SelectInstE
N4llvm9VAArgInstE
N4llvm16ExtractValueInstE
N4llvm15InsertValueInstE
N4llvm7PHINodeE
N4llvm10InvokeInstE
N4llvm14LandingPadInstE
N4llvm10ReturnInstE
N4llvm10ResumeInstE
N4llvm15UnreachableInstE
N4llvm10BranchInstE
N4llvm10AllocaInstE
N4llvm8LoadInstE
N4llvm9StoreInstE
N4llvm17AtomicCmpXchgInstE
N4llvm13AtomicRMWInstE
N4llvm9FenceInstE
N4llvm18ExtractElementInstE
N4llvm17InsertElementInstE
N4llvm17ShuffleVectorInstE
N4llvm14BinaryOperatorE
N4llvm9TruncInstE
N4llvm8ZExtInstE
N4llvm8SExtInstE
N4llvm11FPTruncInstE
N4llvm9FPExtInstE
N4llvm10UIToFPInstE
N4llvm10SIToFPInstE
N4llvm10FPToUIInstE
N4llvm10FPToSIInstE
N4llvm12PtrToIntInstE
N4llvm12IntToPtrInstE
N4llvm11BitCastInstE
N4llvm17AddrSpaceCastInstE
N4llvm10SwitchInstE
N4llvm14IndirectBrInstE
N4llvm17UnaryConstantExprE
N4llvm18BinaryConstantExprE
N4llvm18SelectConstantExprE
N4llvm26ExtractElementConstantExprE
N4llvm25InsertElementConstantExprE
N4llvm25ShuffleVectorConstantExprE
N4llvm24ExtractValueConstantExprE
N4llvm23InsertValueConstantExprE
N4llvm19CompareConstantExprE
N4llvm25GetElementPtrConstantExprE
N4llvm10FoldingSetINS_13AttributeImplEEE
N4llvm10FoldingSetINS_16AttributeSetImplEEE
N4llvm10FoldingSetINS_16AttributeSetNodeEEE
N4llvm10FoldingSetINS_6MDNodeEEE
N4llvm27PassManagerPrettyStackEntryE
N4llvm13PMDataManagerE
N4llvm13FPPassManagerE
N4llvm6legacy23FunctionPassManagerImplE
N4llvm17PMTopLevelManagerE
N4llvm6legacy15PassManagerImplE
N4llvm6legacy15PassManagerBaseE
N4llvm6legacy19FunctionPassManagerE
N4llvm6legacy11PassManagerE
N4llvm2cl3optIN12_GLOBAL__N_114PassDebugLevelELb0ENS0_6parserIS3_EEEE
N4llvm2cl11opt_storageIN12_GLOBAL__N_114PassDebugLevelELb0ELb0EEE
N4llvm2cl6parserIN12_GLOBAL__N_114PassDebugLevelEEE
N4llvm2cl11OptionValueIN12_GLOBAL__N_114PassDebugLevelEEE
N4llvm2cl15OptionValueBaseIN12_GLOBAL__N_114PassDebugLevelELb0EEE
N4llvm2cl15OptionValueCopyIN12_GLOBAL__N_114PassDebugLevelEEE
N4llvm2cl4listIPKNS_8PassInfoEbNS_14PassNameParserEEE
N4llvm2cl12list_storageIPKNS_8PassInfoEbEE
NSt3__16vectorIPKN4llvm8PassInfoENS_9allocatorIS4_EEEE
NSt3__113__vector_baseIPKN4llvm8PassInfoENS_9allocatorIS4_EEEE
N12_GLOBAL__N_113MPPassManagerE
N12_GLOBAL__N_113BBPassManagerE
N4llvm8MDStringE
N4llvm13MDNodeOperandE
N4llvm6MDNodeE
N4llvm4PassE
N4llvm10ModulePassE
N4llvm13ImmutablePassE
N4llvm12FunctionPassE
N4llvm14BasicBlockPassE
N4llvm14PassNameParserE
N4llvm24PassRegistrationListenerE
N4llvm2cl6parserIPKNS_8PassInfoEEE
N12_GLOBAL__N_116GetCFGOnlyPassesE
N4llvm2cl11OptionValueIPKNS_8PassInfoEEE
N4llvm2cl15OptionValueBaseIPKNS_8PassInfoELb0EEE
N4llvm2cl15OptionValueCopyIPKNS_8PassInfoEEE
N4llvm4UserE
N4llvm8OperatorE
N4llvm10CallbackVHE
N4llvm15ValueHandleBaseE
N4llvm5ValueE
llvm.compiler.usN12_GLOBAL__N_118VerifierLegacyPassE
N12_GLOBAL__N_127DebugInfoVerifierLegacyPassE
N4llvm20circular_raw_ostreamE
N4llvm2cl6OptionE
N4llvm2cl18GenericOptionValueE
N4llvm2cl11OptionValueINS0_13boolOrDefaultEEE
N4llvm2cl15OptionValueCopyINS0_13boolOrDefaultEEE
N4llvm2cl11OptionValueINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE
N4llvm2cl19generic_parser_baseE
N4llvm2cl17basic_parser_implE
N4llvm2cl11StringSaverE
N4llvm2cl12basic_parserIbEE
N4llvm2cl12basic_parserINS0_13boolOrDefaultEEE
N4llvm2cl12basic_parserIiEE
N4llvm2cl12basic_parserIjEE
N4llvm2cl12basic_parserIyEE
N4llvm2cl12basic_parserIdEE
N4llvm2cl12basic_parserIfEE
N4llvm2cl12basic_parserINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE
N4llvm2cl12basic_parserIcEE
N4llvm2cl3optIjLb0ENS0_6parserIjEEEE
N4llvm2cl11opt_storageIjLb0ELb0EEE
N4llvm2cl3optIiLb0ENS0_6parserIiEEEE
N4llvm2cl11opt_storageIiLb0ELb0EEE
N4llvm2cl3optINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb0ENS0_6parserIS8_EEEE
N4llvm2cl11opt_storageINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb0ELb1EEE
NSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__121__basic_string_commonILb1EEE
N4llvm2cl3optIcLb0ENS0_6parserIcEEEE
N4llvm2cl11opt_storageIcLb0ELb0EEE
N4llvm2cl3optIbLb0ENS0_6parserIbEEEE
N4llvm2cl11opt_storageIbLb0ELb0EEE
N4llvm2cl6parserIbEE
N4llvm2cl6parserINS0_13boolOrDefaultEEE
N4llvm2cl6parserIiEE
N4llvm2cl6parserIjEE
N4llvm2cl6parserIyEE
N4llvm2cl6parserIdEE
N4llvm2cl6parserIfEE
N4llvm2cl6parserINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE
N4llvm2cl6parserIcEE
N4llvm2cl5aliasE
N12_GLOBAL__N_111StrDupSaverE
N12_GLOBAL__N_111HelpPrinterE
N12_GLOBAL__N_122CategorizedHelpPrinterE
N4llvm2cl11OptionValueIcEE
N4llvm2cl15OptionValueBaseIcLb0EEE
N4llvm2cl15OptionValueCopyIcEE
N4llvm2cl3optIN12_GLOBAL__N_111HelpPrinterELb1ENS0_6parserIbEEEE
N4llvm2cl11opt_storageIN12_GLOBAL__N_111HelpPrinterELb1ELb1EEE
N4llvm2cl11OptionValueIN12_GLOBAL__N_111HelpPrinterEEE
N4llvm2cl15OptionValueBaseIN12_GLOBAL__N_111HelpPrinterELb1EEE
N4llvm2cl3optIN12_GLOBAL__N_118HelpPrinterWrapperELb1ENS0_6parserIbEEEE
N4llvm2cl11opt_storageIN12_GLOBAL__N_118HelpPrinterWrapperELb1ELb1EEE
N4llvm2cl11OptionValueIN12_GLOBAL__N_118HelpPrinterWrapperEEE
N4llvm2cl15OptionValueBaseIN12_GLOBAL__N_118HelpPrinterWrapperELb1EEE
N4llvm2cl3optIN12_GLOBAL__N_114VersionPrinterELb1ENS0_6parserIbEEEE
N4llvm2cl11opt_storageIN12_GLOBAL__N_114VersionPrinterELb1ELb1EEE
N4llvm2cl11OptionValueIN12_GLOBAL__N_114VersionPrinterEEE
N4llvm2cl15OptionValueBaseIN12_GLOBAL__N_114VersionPrinterELb1EEE
N4llvm27CrashRecoveryContextCleanupE
N4llvm3sys11ThreadLocalIKN12_GLOBAL__N_124CrashRecoveryContextImplEEE
N4llvm3sys11ThreadLocalIKNS_27CrashRecoveryContextCleanupEEE
N4llvm12DataStreamerE
N12_GLOBAL__N_116DataFileStreamerE
N4llvm14DeltaAlgorithmE
N4llvm17DAGDeltaAlgorithmE
N12_GLOBAL__N_120DeltaActiveSetHelperE
N4llvm14FoldingSetImplE
N4llvm21formatted_raw_ostreamE
N4llvm18RefCountedBaseVPTRE
N4llvm12MemoryBufferE
N12_GLOBAL__N_115MemoryBufferMemE
N12_GLOBAL__N_120MemoryBufferMMapFileE
N4llvm12MemoryObjectE
N4llvm22PrettyStackTraceStringE
N4llvm21PrettyStackTraceEntryE
N4llvm23PrettyStackTraceProgramE
N4llvm3sys11ThreadLocalIKNS_21PrettyStackTraceEntryEEE
N4llvm2cl3optIyLb0ENS0_6parserIyEEEE
N4llvm2cl11opt_storageIyLb0ELb0EEE
N4llvm2cl11OptionValueIyEE
N4llvm2cl15OptionValueBaseIyLb0EEE
N4llvm2cl15OptionValueCopyIyEE
()^$|*+?.[]\{}
----------------N4llvm14format_object5IjjjPKcS2_EE
N4llvm22StreamableMemoryObjectE
N4llvm21StreamingMemoryObjectE
N12_GLOBAL__N_115RawMemoryObjectE
N4llvm21StringRefMemoryObjectE
z>N4llvm2cl3optINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb1ENS0_6parserIS8_EEEE
N4llvm2cl11opt_storageINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb1ELb1EEE
N4llvm14format_object2IddEE
N4llvm4yaml4NodeE
N4llvm4yaml8NullNodeE
N4llvm4yaml10ScalarNodeE
N4llvm4yaml12KeyValueNodeE
N4llvm4yaml11MappingNodeE
N4llvm4yaml12SequenceNodeE
N4llvm4yaml9AliasNodeE
N4llvm4yaml5Input5HNodeE
N4llvm4yaml5Input10EmptyHNodeE
N4llvm4yaml5Input11ScalarHNodeE
N4llvm4yaml5Input8MapHNodeE
N4llvm4yaml5Input13SequenceHNodeE
N4llvm4yaml2IOE
N4llvm4yaml5InputE
N4llvm4yaml6OutputE
N4llvm14format_object1ItEE
N4llvm14raw_os_ostreamE
                                                                                
N4llvm11raw_ostreamE
N4llvm18raw_string_ostreamE
N4llvm16raw_null_ostreamE
N4llvm18format_object_baseE
N4llvm14raw_fd_ostreamE
N4llvm19raw_svector_ostreamE
[0;30m
[0;31m
[0;32m
[0;33m
[0;34m
[0;35m
[0;36m
[0;37m
[0;1;30m
[0;1;31m
[0;1;32m
[0;1;33m
[0;1;34m
[0;1;35m
[0;1;36m
[0;1;37m
[0;40m
[0;41m
[0;42m
[0;43m
[0;44m
[0;45m
[0;46m
[0;47m
[0;1;40m
[0;1;41m
[0;1;42m
[0;1;43m
[0;1;44m
[0;1;45m
[0;1;46m
[0;1;47m
N4llvm3sys7processE
N4llvm3sys12self_processE
N4llvm3sys15ThreadLocalImplE
N12_GLOBAL__N_116WriteBitcodePassE
!@#
!@!
!@ 
!@"
x^@@
x^@@
8^@@
8^@@
8J4 
8J4 
xJ4 
xJ@@
xJP@
8J@@
8JP@
8Jp@
8J@@
xJ@@
8JP@
xJP@
8Jp@
xJp@
8D4 
8D4 
xD4 
xD@@
xDP@
8D@@
8DP@
8Dp@
8D@@
xD@@
8DP@
xDP@
8Dp@
xDp@
<_p@
<_@@
<1@@
<1P@
<1p@
<1@@
<1P@
<1p@
<q@@
<qP@
<qp@
<q@@
<qP@
<qp@
xA@@
xA@@
x@@@
x@@@
<@@@
<@@@
<Q@@
<QP@
<Qp@
<Q@@
<QP@
<Qp@
<S@@
<S@@
xB@@
xB@@
<s@@
<s@@
<3@@
<3@@
0 2P
P#vY
0  P
<premain>
enable-objc-arc-opts
enable/disable all ARC Optimizations
ObjC ARC optimization
objc-arc
clang.imprecise_release
clang.arc.copy_on_escape
clang.arc.no_objc_arc_exceptions
objc_retain
objc_release
objc_autorelease
objc_retainAutoreleasedReturnValue
objc_retainBlock
objc_autoreleaseReturnValue
objc_autoreleasePoolPush
objc_loadWeakRetained
objc_loadWeak
objc_destroyWeak
objc_storeWeak
objc_initWeak
objc_moveWeak
objc_copyWeak
objc_retainedObject
objc_unretainedObject
objc_unretainedPointer
clang.arc.use
L_OBJC_SELECTOR_REFERENCES_
L_OBJC_CLASSLIST_REFERENCES_
L_OBJC_CLASSLIST_SUP_REFS_$_
L_OBJC_METH_VAR_NAME_
l_objc_msgSend_fixup_
ObjC ARC expansion
objc-arc-expand
ObjC ARC autorelease pool elimination
objc-arc-apelim
llvm.global_ctors
ObjC-ARC-Based Alias Analysis
objc-arc-aa
IC_Retain
IC_RetainRV
IC_RetainBlock
IC_Release
IC_Autorelease
IC_AutoreleaseRV
IC_AutoreleasepoolPush
IC_AutoreleasepoolPop
IC_NoopCast
IC_FusedRetainAutorelease
IC_FusedRetainAutoreleaseRV
IC_LoadWeakRetained
IC_StoreWeak
IC_InitWeak
IC_LoadWeak
IC_MoveWeak
IC_CopyWeak
IC_DestroyWeak
IC_StoreStrong
IC_CallOrUser
IC_Call
IC_User
IC_IntrinsicUser
IC_None
objc_autoreleasePoolPop
objc_retain_autorelease
objc_retainAutorelease
objc_retainAutoreleaseReturnValue
objc_sync_enter
objc_sync_exit
objc_storeStrong
llvm.arc.annotation.topdown.bbstart
llvm.arc.annotation.topdown.bbend
llvm.arc.annotation.bottomup.bbstart
llvm.arc.annotation.bottomup.bbend
ObjC ARC contraction
objc-arc-contract
clang.arc.retainAutoreleasedReturnValueMarker
 Opt:
 Index:
 Values: [
GroupClass
InputClass
UnknownClass
FlagClass
JoinedClass
SeparateClass
CommaJoinedClass
MultiArgClass
JoinedOrSeparateClass
JoinedAndSeparateClass
RemainingArgsClass
 Prefixes:[
 Name:"
 Group:
 Alias:
 NumArgs:
OVERVIEW: 
USAGE: 
 [options] <inputs>
OPTIONS
 <value>
<value>
Could not open input file: 
Parse IR
LLVM IR Parsing
target does not support JIT code generation
Target does not support machine code emission!
Error reading function '
' from bitcode file: 
Program used external function '
' which could not be resolved!
__dso_handle
Could not resolve external global address: 
Compilation of non-internal GlobalValue is disabled!
LLVM JIT requested to do lazy compilation of function '
' when lazy compiles are disabled!
Initialize memory with machine specific constant poolentry has not been implemented!
Allocation failed when allocating new memory in the JIT
exit
atexit
__main
Corrupt free list; points to 
Next and Prev pointers do not match.
Found free header at 
 that is not in free list.
Block size in header points out of current MemoryBlock.
End of block size marker (
and BlockSize (
) don't match.
Hdr->PrevAllocated (
) != 
LastHdr->ThisAllocated (
The first header should have PrevAllocated true.
asan-instrument-reads
instrument read instructions
asan-instrument-writes
instrument write instructions
asan-instrument-atomics
instrument atomic instructions (rmw, cmpxchg)
asan-always-slow-path
use instrumentation with slow path for all accesses
asan-max-ins-per-bb
maximal number of instructions to instrument in any given BB
asan-stack
Handle stack memory
asan-use-after-return
Check return-after-free
asan-globals
Handle global objects
asan-coverage
ASan coverage. 0: none, 1: entry block, 2: all blocks
asan-coverage-block-threshold
Add coverage instrumentation only to the entry block if there are more than this number of blocks.
asan-initialization-order
Handle C++ initializer order
asan-detect-invalid-pointer-pair
Instrument <, <=, >, >=, - with pointer operands
asan-realign-stack
Realign stack to the value of this flag (power of two)
asan-instrumentation-with-call-threshold
If the function being instrumented contains more than this number of memory accesses, use callbacks instead of inline checks (-1 means never use callbacks).
asan-memory-access-callback-prefix
Prefix for memory access callbacks
__asan_
asan-keep-uninstrumented-functions
Keep uninstrumented copies of functions
asan-mapping-scale
scale of asan shadow mapping
asan-opt
Optimize instrumentation
asan-opt-same-temp
Instrument the same temp just once
asan-opt-globals
Don't instrument scalar globals
asan-check-lifetime
Use llvm.lifetime intrinsics to insert extra checks
asan-stack-dynamic-alloca
Use dynamic alloca to represent stack variables
asan-debug
debug
asan-debug-stack
debug stack
asan-debug-func
Debug func
asan-debug-min
Debug min inst
asan-debug-max
Debug man inst
AddressSanitizer: detects use-after-free and out-of-bounds bugs.
asan
AddressSanitizerFunctionPass
data layout missing
asan.module_ctor
__asan_init_v5
llvm.asan.globals
trying to redefine an AddressSanitizer interface function
NOASAN_
NOASAN
ASAN
store
load
__asan_report_
__asan_report_load_n
__asan_report_store_n
loadN
storeN
memmove
memcpy
memset
__asan_handle_no_return
__sanitizer_cov
__sanitizer_ptr_cmp
__sanitizer_ptr_sub
 load]
nosanitize
llvm.
__asan_stack_malloc_
__asan_stack_free_
__asan_poison_stack_memory
__asan_unpoison_stack_memory
__asan_option_detect_stack_use_after_return
MyAlloca
__asan_gen_
__asan_gen_cov_
AddressSanitizer: detects use-after-free and out-of-bounds bugs.ModulePass
asan-module
AddressSanitizerModule
__asan_before_dynamic_init
__asan_after_dynamic_init
__asan_register_globals
__asan_unregister_globals
__sanitizer_cov_module_init
asan.module_dtor
L_OBJC_
l_OBJC_
__OBJC,
__DATA, __objc_
__DATA,__cfstring
__TEXT,__cstring,cstring_literals
.CRT
llvm.metadata
bounds-checking-single-trap
Use one trap block per function
Run-time bounds checking
bounds-checking
trap
dfsan-preserve-alignment
respect alignment requirements provided by input IR
dfsan-abilist
File listing native ABI functions and how the pass treats them
dfsan-args-abi
Use the argument ABI rather than the TLS ABI
dfsan-combine-pointer-labels-on-load
Combine the label of the pointer with the label of the data when loading from memory.
dfsan-combine-pointer-labels-on-store
Combine the label of the pointer with the label of the data when storing in memory.
dfsan-debug-nonzero-labels
Insert calls to __dfsan_nonzero_label on observing a parameter, load or return with a nonzero label
DataFlowSanitizer: dynamic data flow analysis.
dfsan
skip
__dfsan_arg_tls
__dfsan_retval_tls
__dfsan_union
dfsan_union
__dfsan_union_load
__dfsan_unimplemented
__dfsan_set_label
__dfsan_nonzero_label
dfsw$
uninstrumented
global
type
<unknown type>
.symver 
entry
functional
discard
custom
__dfsw_
labelreturn
debug-ir
DebugIR unable to determine file name in input. Ensure Module contains an identifier, a valid DICompileUnit, or construct DebugIR with non-empty Filename/Directory parameters.
.debug-ll
llvm.dbg.cu
<stdin>
DebugIR pass supports only a signle compile unit per Module.
LLVM Version 3.6
Printing <null> Type
Enable debugging IR
DebugIR
default-gcov-version
402*
Invalid -default-gcov-version: 
Insert instrumentation for GCOV profiling
insert-gcov-profiling
GCOV Profiler
gcno
oncg
llvm.gcov
__llvm_gcov_ctr
__llvm_gcov_init
llvm_gcov_init
__llvm_gcda_edge_table
__llvm_gcov_global_state_pred
__llvm_gcov_indirect_counter_increment
__llvm_gcov_writeout
gcda
llvm_gcda_start_file
llvm_gcda_emit_function
llvm_gcda_emit_arcs
llvm_gcda_summary_info
llvm_gcda_end_file
__llvm_gcov_flush
invalid return type for __llvm_gcov_flush
predecessor
pred
counters
counter
msan-track-origins
Track origins (allocation sites) of poisoned memory
msan-keep-going
keep going after reporting a UMR
msan-poison-stack
poison uninitialized stack variables
msan-poison-stack-with-call
poison uninitialized stack variables with a call
msan-poison-stack-pattern
poison uninitialized stack variables with the given patter
msan-poison-undef
poison undef temps
msan-handle-icmp
propagate shadow through ICmpEQ and ICmpNE
msan-handle-icmp-exact
exact handling of relational integer ICmp
msan-check-access-address
report accesses through a pointer which has poisoned shadow
msan-dump-strict-instructions
print out instructions with default strict semantics
msan-instrumentation-with-call-threshold
If the function being instrumented requires more than this number of checks and origin stores, use callbacks instead of inline checks (-1 means never use callbacks).
msan-wrap-indirect-calls
Wrap indirect calls with a given function
msan-wrap-indirect-calls-fast
Do not wrap indirect calls with target in the same module
MemorySanitizer: detects uninitialized reads.
msan
MemorySanitizer
unsupported pointer size
__msan_init
__msan_track_origins
__msan_keep_going
main
_msarg
_msarg_o
__msan_warning
__msan_warning_noreturn
__msan_maybe_warning_
__msan_maybe_store_origin_
__msan_set_alloca_origin4
__msan_poison_stack
__msan_chain_origin
__msan_memmove
__msan_memcpy
__msan_memset
__msan_retval_tls
__msan_retval_origin_tls
__msan_param_tls
__msan_param_origin_tls
__msan_va_arg_tls
__msan_va_arg_overflow_size_tls
__msan_origin_tls
__executable_start
_end
_msret
ZZZ call 
ZZZ 
QQQ 
_msprop
msprop_mul_cst
----
_msld
_msprop_ptrtoint
_msprop_inttoptr
_msprop_icmp
_msprop_icmpslt
_msphi_s
_msphi_o
_msprop_vector_pack
_msprop_select
_mscmp
msandr.indirect_target
Frontend instrumentation-based coverage lowering.
instrprof
Frontend instrumentation-based coverage lowering
__llvm_coverage_mapping
pgocount
data
__DATA,__llvm_prf_names
__llvm_prf_names
__llvm_profile_
__DATA,__llvm_prf_cnts
__llvm_prf_cnts
__DATA,__llvm_prf_data
__llvm_prf_data
__DATA,__llvm_covmap
__llvm_covmap
__llvm_profile_register_functions
__llvm_profile_register_function
__llvm_profile_runtime
__llvm_profile_runtime_user
llvm.used
__llvm_profile_init
tsan-instrument-memory-accesses
Instrument memory accesses
tsan-instrument-func-entry-exit
Instrument function entry and exit
tsan-instrument-atomics
Instrument atomics
tsan-instrument-memintrinsics
Instrument memintrinsics (memset/memcpy/memmove)
ThreadSanitizer: detects data races.
tsan
ThreadSanitizer
__tsan_init
__tsan_func_entry
__tsan_func_exit
__tsan_read
__tsan_write
__tsan_atomic
_load
_store
_exchange
_fetch_add
_fetch_sub
_fetch_and
_fetch_or
_fetch_xor
_fetch_nand
_compare_exchange_val
__tsan_vptr_update
__tsan_vptr_read
__tsan_atomic_thread_fence
__tsan_atomic_signal_fence
ThreadSanitizer interface function redefined
constant bigger than 64 bits detected!
constant bigger than 128 bits detected!
end of file in global variable name
Null bytes are not allowed in names
invalid value number (too large)!
end of file in COMDAT variable name
end of file in string constant
bitwidth for integer type out of range!
true
false
declare
define
constant
private
internal
available_externally
linkonce
linkonce_odr
weak
weak_odr
appending
dllimport
dllexport
common
default
hidden
protected
unnamed_addr
externally_initialized
extern_weak
external
thread_local
localdynamic
initialexec
localexec
zeroinitializer
undef
null
tail
musttail
target
triple
unwind
deplibs
datalayout
volatile
atomic
unordered
monotonic
acquire
release
acq_rel
seq_cst
singlethread
nnan
ninf
arcp
fast
exact
inbounds
align
addrspace
section
alias
module
sideeffect
alignstack
inteldialect
prefix
fastcc
coldcc
x86_stdcallcc
x86_fastcallcc
x86_thiscallcc
arm_apcscc
arm_aapcscc
arm_aapcs_vfpcc
msp430_intrcc
ptx_kernel
ptx_device
spir_kernel
spir_func
intel_ocl_bicc
x86_64_sysvcc
x86_64_win64cc
webkit_jscc
anyregcc
preserve_mostcc
preserve_allcc
attributes
alwaysinline
builtin
byval
inalloca
cold
dereferenceable
inlinehint
inreg
jumptable
minsize
naked
nest
noalias
nobuiltin
nocapture
noduplicate
noimplicitfloat
noinline
nonlazybind
nonnull
noredzone
noreturn
nounwind
optnone
optsize
readnone
readonly
returned
returns_twice
signext
sret
sspreq
sspstrong
sanitize_address
sanitize_thread
sanitize_memory
uwtable
zeroext
opaque
comdat
exactmatch
largest
noduplicates
samesize
xchg
nand
umax
umin
blockaddress
uselistorder
uselistorder_bb
personality
cleanup
catch
filter
void
half
float
double
x86_fp80
fp128
ppc_fp128
label
metadata
x86_mmx
fadd
fsub
fmul
udiv
sdiv
fdiv
urem
srem
frem
lshr
ashr
icmp
fcmp
call
trunc
zext
sext
fptrunc
fpext
uitofp
sitofp
fptoui
fptosi
inttoptr
ptrtoint
bitcast
addrspacecast
select
va_arg
switch
indirectbr
invoke
resume
unreachable
alloca
cmpxchg
atomicrmw
fence
getelementptr
extractelement
insertelement
shufflevector
extractvalue
insertvalue
landingpad
use of undefined metadata '!
expected function name in blockaddress
use of undefined type '%
use of undefined type named '
use of undefined comdat '$
use of undefined value '@
expected top-level entity
expected 'module asm'
unknown target property
expected '=' after target triple
expected '=' after target datalayout
expected '=' after deplibs
expected ']' at end of list
expected '=' after name
expected 'type' after '='
non-struct types may not be recursive
expected 'type' after name
expected 'global' or 'constant'
variable expected to be numbered '%
expected '=' in global variable
expected '=' here
expected comdat keyword
expected comdat type
unknown selection kind
redefinition of comdat '$
Expected '!' here
Expected '{' here
expected end of metadata node
Metadata id is already used
invalid linkage type for alias
symbol with local linkage must have default visibility
invalid aliasee
An alias must have pointer type
redefinition of global named '@
forward reference and definition of alias have different types
invalid type for global variable
redefinition of global '@
forward reference and definition of global have different types
expected global section string
unknown global variable property!
expected '{' here
expected end of attribute group
attribute group has no attributes
unterminated attribute group
cannot have an attribute group reference in an attribute group
invalid use of attribute on a function
invalid use of parameter-only attribute on a function
global variable reference must have pointer type
' defined with type '
expected string constant
expected integer
expected 32-bit integer (too large)
expected localdynamic, initialexec or localexec
expected ')' after thread local model
expected '(' in address space
expected ')' in address space
invalid use of function-only attribute
invalid use of parameter-only attribute
invalid use of attribute on return type
expected metadata after comma
expected '!' here
alignment is not a power of two
huge alignments are not supported yet
expected '('
expected ')'
dereferenceable bytes must be non-zero
expected metadata or 'align'
Expected ordering on atomic instruction
stack alignment is not a power of two
expected ',' as start of index list
expected type
expected '>' at end of packed struct
void type only allowed for function results
basic block pointers are invalid
pointers to void are invalid - use i8* instead
pointer to this type is invalid
pointers to void are invalid; use i8* instead
expected '*' in address space
expected '(' in call
expected ',' in argument list
argument can not have void type
invalid type for function argument
expected ')' at end of argument list
invalid function return type
argument name invalid in function type
argument attributes invalid in function type
redefinition of type
forward references to non-struct type
expected '>' in packed struct
invalid element type for struct
expected '}' at end of struct
expected number in address space
expected 'x' after element count
expected end of sequential type
zero element vector is illegal
size too large for vector
invalid vector element type
invalid array element type
use of undefined value '%
' is not a basic block
invalid use of a non-first-class type
instructions returning void cannot have a name
instruction expected to be numbered '%
instruction forward referenced with type '
multiple definition of local value named '
expected value token
expected end of struct constant
expected end of packed struct
expected end of constant
constant vector must not be empty
vector elements must have integer, pointer or floating point type
vector element #
 is not of type '
expected end of array constant
invalid array element type: 
array element #
expected string
expected comma in inline asm expression
expected constraint string
expected '(' in block address expression
expected comma in block address expression
expected ')' in block address expression
expected basic block name in blockaddress
cannot take blockaddress inside a declaration
referenced value is not a basic block
cannot take address of numeric label after the function is defined
expected '(' after constantexpr cast
expected 'to' in constantexpr cast
expected ')' at end of constantexpr cast
invalid cast opcode for cast from '
' to '
expected '(' in extractvalue constantexpr
expected ')' in extractvalue constantexpr
extractvalue operand must be aggregate type
invalid indices for extractvalue
expected '(' in insertvalue constantexpr
expected comma in insertvalue constantexpr
expected ')' in insertvalue constantexpr
insertvalue operand must be aggregate type
invalid indices for insertvalue
expected '(' in compare constantexpr
expected comma in compare constantexpr
expected ')' in compare constantexpr
compare operands must have the same type
fcmp requires floating point operands
icmp requires pointer or integer operands
expected '(' in binary constantexpr
expected comma in binary constantexpr
expected ')' in binary constantexpr
operands of constexpr must have same type
nuw only applies to integer operations
nsw only applies to integer operations
constexpr requires integer operands
constexpr requires fp operands
expected '(' in logical constantexpr
expected comma in logical constantexpr
expected ')' in logical constantexpr
constexpr requires integer or integer vector operands
expected '(' in constantexpr
expected ')' in constantexpr
getelementptr requires pointer operand
invalid indices for getelementptr
expected three operands to select
expected three operands to shufflevector
invalid operands to shufflevector
expected two operands to extractelement
invalid extractelement operands
expected three operands to insertelement
invalid insertelement operands
global values must be constants
expected comdat variable
functions are not values, refer to them as pointers
invalid use of function-local name
invalid type for inline asm constraint string
metadata value must have metadata type
integer constant must have integer type
floating point constant invalid for type
floating point constant does not have type '
null must be a pointer type
invalid type for undef constant
invalid empty array initializer
invalid type for null constant
constant expression type mismatch
initializer with struct type has wrong # elements
packed'ness of initializer and type don't match
element 
 of struct initializer doesn't match struct element type
expected a basic block
invalid linkage for function definition
invalid linkage for function declaration
invalid function linkage type
function expected to be numbered '%
expected function name
expected '(' in function argument list
'builtin' attribute not valid on function
functions with 'sret' argument must return void
invalid forward reference to function as global value!
invalid forward reference to function '
' with wrong type!
invalid redefinition of function '
redefinition of function '@
type of definition and forward reference of '@
' disagree
redefinition of argument '%
expected '{' in function body
function body requires at least one basic block
expected '=' after instruction id
expected '=' after instruction name
found end of file when expecting more instructions
expected instruction opcode
expected fcmp predicate (e.g. 'oeq')
expected icmp predicate (e.g. 'eq')
value doesn't match function result type '
branch condition must have 'i1' type
expected ',' after branch condition
expected ',' after true destination
expected ',' after switch condition
expected '[' with switch table
switch condition must have integer type
expected ',' after case value
duplicate case value in switch
case value is not a constant integer
expected ',' after indirectbr address
expected '[' with indirectbr
indirectbr address must have pointer type
expected ']' at end of block list
expected 'to' in invoke
expected 'unwind' in invoke
Invalid result type for LLVM function
too many arguments specified
argument is not of expected type '
not enough parameters specified for call
expected ',' in arithmetic operation
invalid operand type for instruction
expected ',' in logical operation
instruction requires integer or integer vector operands
expected ',' after compare value
icmp requires integer operands
expected 'to' after cast value
expected ',' after select condition
expected ',' after select value
expected ',' after vaarg operand
va_arg requires operand with first class type
expected ',' after extract value
expected ',' after insertelement value
expected ',' after shuffle mask
expected ',' after shuffle value
invalid shufflevector operands
expected '[' in phi value list
expected ']' in phi value list
phi node must have first class type
expected 'personality'
'catch' clause has an invalid type
'filter' clause has an invalid type
expected 'tail call'
element count must have integer type
load operand must be a pointer to a first class type
atomic load must have explicit non-zero alignment
atomic load cannot use Release ordering
expected ',' after store operand
store operand must be a pointer
store operand must be a first class value
stored value and pointer type do not match
atomic store must have explicit non-zero alignment
atomic store cannot use Acquire ordering
expected ',' after cmpxchg address
expected ',' after cmpxchg cmp operand
cmpxchg cannot be unordered
cmpxchg must be at least as ordered on success as failure
cmpxchg failure ordering cannot include release semantics
cmpxchg operand must be a pointer
compare value and pointer type do not match
new value and pointer type do not match
cmpxchg operand must be an integer
cmpxchg operand must be power-of-two byte-sized integer
expected binary operation in atomicrmw
expected ',' after atomicrmw address
atomicrmw cannot be unordered
atomicrmw operand must be a pointer
atomicrmw value and pointer type do not match
atomicrmw operand must be an integer
atomicrmw operand must be power-of-two byte-sized integer
fence cannot be unordered
fence cannot be monotonic
base of getelementptr must be a pointer
getelementptr index must be an integer
getelementptr index type missmatch
getelementptr vector index has a wrong number of elements
base element of getelementptr must be sized
invalid getelementptr indices
expected comma after insertvalue operand
value has no uses
value only has one use
wrong number of indexes, expected 
expected non-empty list of uselistorder indexes
expected '}' here
expected >= 2 uselistorder indexes
expected distinct uselistorder indexes in range [0, size)
expected uselistorder indexes to change the order
expected uselistorder directive
expected comma in uselistorder directive
expected comma in uselistorder_bb directive
expected function name in uselistorder_bb
invalid function forward reference in uselistorder_bb
invalid declaration in uselistorder_bb
invalid numeric label in uselistorder_bb
expected basic block name in uselistorder_bb
invalid basic block in uselistorder_bb
expected basic block in uselistorder_bb
expected index
<string>
WARNING: Linking two modules of different data layouts: '
' is '
' whereas '
WARNING: Linking two modules of different target triples: 
Linking COMDATs named '
': invalid selection kinds!
': noduplicates has been violated!
': can't do size dependent selection without DataLayout!
': ExactMatch violated!
': SameSize violated!
': COMDAT key involves incomputable alias size.
': GlobalVariable required for data dependent selection!
llvm.global_dtors
Linking globals named '
': can only link appending global with another appending global!
Appending variables with different element types!
Appending variables linked with different const'ness!
Appending variables with different alignment need to be linked!
Appending variables with different visibility need to be linked!
Appending variables with different unnamed_addr need to be linked!
Appending variables with different section name need to be linked!
': symbol multiply defined!
linking module flags '
': IDs have conflicting override values
': IDs have conflicting behaviors
': IDs have conflicting values
WARNING: linking module flags '
': does not have the required value
Promote 'by reference' arguments to scalars
argpromotion
.val
.idx
A No-Op Barrier Pass
barrier
Merge Duplicate Global Constants
constmerge
llvm.compiler.used
Dead Argument Elimination
deadargelim
Dead Argument Hacking (BUGPOINT USE ONLY; DO NOT USE)
deadarghaX0r
newret
oldret
Deduce function attributes
functionattrs
Dead Global Elimination
globaldce
Global Variable Optimizer
globalopt
.body
newgv
.init
notinit
isneg
isnull
malloc_cont
malloc_ret_null
free_it
next
Interprocedural constant propagation
ipconstprop
Inliner for always_inline functions
always-inline
Function Integration/Inlining
inline
inline-threshold
Control the amount of inlining to perform (default = 225)
inlinehint-threshold
Threshold for inlining functions with inline hint
inlinecold-threshold
Threshold for inlining functions with cold attribute
 should always be inlined (cost=always)
 should never be inlined (cost=never)
 too costly to inline (cost=
, threshold=
Not inlining. Cost of inlining 
 increases the cost of inlining 
 in other contexts
 can be inlined into 
 with cost=
 (threshold=
 will not be inlined into 
 inlined into 
internalize-public-api-file
filename
A file containing list of symbol names to preserve
internalize-public-api-list
list
A list of symbol names to preserve
Internalize Global Symbols
internalize
WARNING: Internalize couldn't load file '
'! Continuing as if it's empty.
llvm.global.annotations
__stack_chk_fail
__stack_chk_guard
extract-blocks-file
A file containing list of basic blocks to not extract
Extract loops into new functions
loop-extract
Extract at most one loop into a new function
loop-extract-single
Extract Basic Blocks From Module (for bugpoint use)
extract-blocks
WARNING: BlockExtractor couldn't load file '
mergefunc-sanity
How many functions in module could be used for MergeFunctions pass sanity check. '0' disables this check. Works only with '-debug' key.
Merge Functions
mergefunc
Partial Inliner
partial-inliner
vectorize-loops
Run the Loop vectorization passes
vectorize-slp
Run the SLP vectorization passes
vectorize-slp-aggressive
Run the BB vectorization passes
use-gvn-after-vectorization
Run GVN instead of Early CSE after vectorization passes
use-new-sroa
Enable the new, experimental SROA pass
reroll-loops
Run the loop rerolling pass
combine-loads
Run the load combining pass
run-slp-after-loop-vectorization
Run the SLP vectorizer (and BB vectorizer) after the Loop vectorizer instead of before
Remove unused exception handling info
prune-eh
Strip Unused Function Prototypes
strip-dead-prototypes
Strip all symbols from a module
strip
llvm.dbg
Strip all symbols, except dbg symbols, from a module
strip-nondebug
Strip all llvm.dbg.declare intrinsics
strip-debug-declare
llvm.dbg.declare
Strip debug info for unused symbols
strip-dead-debug-info
bb-vectorize-ignore-target-info
Ignore target information
bb-vectorize-req-chain-depth
The required chain depth for vectorization
bb-vectorize-use-chain-depth
Use the chain depth requirement with target information
bb-vectorize-search-limit
The maximum search distance for instruction pairs
bb-vectorize-splat-breaks-chain
Replicating one element to a pair breaks the chain
bb-vectorize-vector-bits
The size of the native vector registers
bb-vectorize-max-iter
The maximum number of pairing iterations
bb-vectorize-pow2-len-only
Don't try to form non-2^n-length vectors
bb-vectorize-max-instr-per-group
The maximum number of pairable instructions per group
bb-vectorize-max-pairs-per-group
The maximum number of candidate instruction pairs per group
bb-vectorize-max-cycle-check-pairs
The maximum number of candidate pairs with which to use a full cycle check
bb-vectorize-no-bools
Don't try to vectorize boolean (i1) values
bb-vectorize-no-ints
Don't try to vectorize integer values
bb-vectorize-no-floats
Don't try to vectorize floating-point values
bb-vectorize-no-pointers
Don't try to vectorize pointer values
bb-vectorize-no-casts
Don't try to vectorize casting (conversion) operations
bb-vectorize-no-math
Don't try to vectorize floating-point math intrinsics
bb-vectorize-no-bitmanip
Don't try to vectorize BitManipulation intrinsics
bb-vectorize-no-fma
Don't try to vectorize the fused-multiply-add intrinsic
bb-vectorize-no-select
Don't try to vectorize select instructions
bb-vectorize-no-cmp
Don't try to vectorize comparison instructions
bb-vectorize-no-gep
Don't try to vectorize getelementptr instructions
bb-vectorize-no-mem-ops
Don't try to vectorize loads and stores
bb-vectorize-aligned-only
Only generate aligned loads and stores
bb-vectorize-no-mem-op-boost
Don't boost the chain-depth contribution of loads and stores
bb-vectorize-fast-dep
Use a fast instruction dependency analysis
bb-vectorize
.v.i
.v.r
force-vector-width
Sets the SIMD width. Zero is autoselect.
force-vector-unroll
Sets the vectorization unroll count. Zero is autoselect.
enable-if-conversion
Enable if-conversion during vectorization.
vectorizer-min-trip-count
Don't vectorize loops with a constant trip count that is smaller than this value.
enable-mem-access-versioning
Enable symblic stride memory access versioning
force-target-num-scalar-regs
A flag that overrides the target's number of scalar registers.
force-target-num-vector-regs
A flag that overrides the target's number of vector registers.
force-target-max-scalar-unroll
A flag that overrides the target's max unroll factor for scalar loops.
force-target-max-vector-unroll
A flag that overrides the target's max unroll factor for vectorized loops.
force-target-instruction-cost
A flag that overrides the target's expected cost for an instruction to a single constant value. Mostly useful for getting consistent testing.
small-loop-cost
The cost of a loop that is considered 'small' by the unroller.
loop-vectorize-with-block-frequency
Enable the use of the block frequency analysis to access PGO heuristics minimizing code growth in cold regions and being more aggressive in hot regions.
enable-loadstore-runtime-unroll
Enable runtime unrolling until load/store ports are saturated
vectorize-num-stores-pred
Max number of stores to be predicated behind an if.
enable-ind-var-reg-heur
Count the induction variable only once when unrolling
enable-cond-stores-vec
Enable if predication of stores during vectorization.
loop-vectorize
loop not vectorized: vector width and interleave count are explicitly set to 1
vectorization is not beneficial and is not explicitly forced
loop not vectorized due to NoImplicitFloat attribute
not beneficial to vectorize and user disabled interleaving
unrolled with interleaving factor 
 (vectorization not beneficial)
vectorized loop (vectorization factor: 
, unrolling interleave factor: 
llvm.loop.
vectorize.width
vectorize.enable
interleave.count
vectorization is explicitly disabled
use -Rpass-analysis=loop-vectorize for more info
 (Force=true
, Vector Width=
, Interleave Count=
loop not vectorized: 
loop control flow is not understood by vectorizer
loop is not the innermost loop
could not determine number of loop iterations
if-conversion is disabled
loop contains a switch statement
control flow cannot be substituted for a select
no-nans-fp-math
value could not be identified as an induction or reduction variable
control flow not understood by vectorizer
use of induction value outside of the loop is not handled by vectorizer
value that could not be identified as reduction is used outside the loop
call instruction cannot be vectorized
intrinsic instruction cannot be vectorized
instruction return type cannot be vectorized
store instruction cannot be vectorized
value cannot be used outside the loop
loop induction variable could not be identified
read with atomic ordering or volatile read
instruction cannot be vectorized
write with atomic ordering or volatile write
write to a loop invariant address could not be vectorized
cannot identify array bounds
cannot check memory dependencies at runtime
 exceeds limit of 
 dependent memory operations checked at runtime
unsafe dependent memory operations in loop
failed explicitly specified loop vectorization
failed explicitly specified loop interleaving
runtime pointer checks needed. Enable vectorization of this loop with '#pragma clang loop vectorize(enable)' when compiling with -Os
store that is conditionally executed prevents vectorization
unable to calculate the loop count due to complex control flow
cannot optimize for size and vectorize at the same time. Enable vectorization of this loop with '#pragma clang loop vectorize(enable)' when compiling with -Os
cond.store
.cloned
else
gep.indvar.base
gep.indvar.idx
wide.load
broadcast
.splatinsert
.splat
induction
reverse
minmax.ident
rdx.vec.exit.phi
bin.rdx
rdx.shuf
bc.merge.rdx
vec.phi
predphi
normalized.idx
offset.idx
resize.norm.idx
reverse.idx
gep.ridx
gep.idx
next.gep
insert.gep
rdx.minmax.cmp
rdx.minmax.select
backedge.ptrcnt.to.int
backedge.overflow
overflow.check.anchor
vector.ph
vector.body
middle.block
scalar.ph
index
ptrcnt.to.int
cnt.cast
end.idx
n.mod.vf
n.vec
end.idx.rnd.down
cmp.zero
overflow.checked
vector.stridecheck
vector.memcheck
resume.val
trunc.resume.val
bc.resume.val
bc.trunc.resume.val
cast.crd
ind.end
rev.ind.end
ptr.ind.end
rev.ptr.ind.end
new.indc.resume.val
cmp.n
index.next
stride.chk
stride.not.one
bound0
bound1
found.conflict
conflict.rdx
memcheck.conflict
slp-threshold
Only vectorize if you gain more than this number 
slp-vectorize-hor
Attempt to vectorize horizontal reductions
slp-vectorize-hor-store
Attempt to vectorize horizontal reductions feeding into a store
slp-vectorizer
rdx.shuf.l
rdx.shuf.r
Target does not support MC emission!
not yet implemented
.eh_frame
Unable to allocate memory for common symbols!
<common symbols>
Unable to allocate section memory!
Incompatible object format!
File '
' not found. 
No stubs registered.
Available files are:
Section '
' not found in file '
Symbol '
' not found.
Expression '
' is false: 
0x%llx
 != 
Unexpected end of expression
expected '(', '*', identifier, or number
Expected '{' following '*'.
Invalid size for dereference.
Missing '}' for dereference.
decode_operand
next_pc
stub_addr
section_addr
No known address for symbol '
 (this appears to be an assembler local label -  perhaps drop the 'L'?)
0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ:_.$
Cannot decode unknown symbol '
expected ','
Couldn't decode instruction at '
Invalid operand index '
' for instruction '
'. Instruction has only 
 operands.
Instruction is:
Operand '
' of instruction '
' is not an immediate.
Instruction is:
expected number
0123456789abcdefABCDEF
0123456789
expected ':'
expected ']'
Error evaluating expression '
Encountered unexpected token '
' while parsing subexpression '
.got
.toc
.tocbss
.plt
.opd
.TOC.
Unable to allocate memory for GOT!
File too short!
Section header table goes past end of file!
Section table goes past end of file!
More than one .symtab_shndx!
More than one .symtab!
More than one .dynsym!
More than one .dynamic!
More than one .gnu.version section!
More than one .gnu.version_d section!
More than one .gnu.version_r section!
Invalid section index!
String table must end with a null terminator!
Invalid section type in Rel!
Invalid symbol table section type!
Unknown
ELF32-i386
ELF32-x86-64
ELF32-arm
ELF32-hexagon
ELF32-mips
ELF32-ppc
ELF32-sparc
ELF32-unknown
ELF64-i386
ELF64-x86-64
ELF64-aarch64
ELF64-ppc64
ELF64-s390
ELF64-sparc
ELF64-mips
ELF64-unknown
Invalid ELFCLASS!
Section ended unexpectedly while scanning version definitions.
Unexpected verdef version
Section ended unexpectedly while scanning version needed records.
Unexpected verneed version
Section ended unexpected while scanning auxiliary version needed records.
resolveRelocation Section: 
 LocalAddress: 
 FinalAddress: 
0x%016llx
 Value: 
 Addend: 
 isPCRel: 
 MachoType: 
 Size: 
Relocation type not implemented yet!
__eh_frame
__text
__gcc_except_tab
__nl_symbol_ptr
Unexpected SECTDIFF relocation addend.
__jump_table
__pointers
Invalid number of arguments of main() supplied
Invalid type for third argument of main() supplied
Invalid type for second argument of main() supplied
Invalid type for first argument of main() supplied
Invalid return type of main() supplied
Cannot create an interpreter with a memory manager.
Cannot create a legacy JIT with a runtime dyld memory manager.
WARNING: This target JIT is not designed for the host
 you are running.  If bad things happen, please choose
 a different -march switch.
Interpreter has not been linked in.
JIT has not been linked in.
ConstantExpr not handled: 
ERROR: Constant unimplemented for type: 
Cannot store value of type 
Cannot load value of type 
Refusing to use options struct that is larger than my own; assuming LLVM library mismatch.
No available targets are compatible with this -march, see -version for the available targets.
: Unexpected decode table opcode!
symbol stub for: 
Objc message: 
literal pool symbol address: 
literal pool for: "
Objc cfstring ref: @"
Objc message ref: 
Objc selector ref: 
Objc class ref: 
aarch64-a57-fp-load-balancing-force-all
Always modify dest registers regardless of color
aarch64-a57-fp-load-balancing-override
Ignore balance information, always return (1: Even, 2: Odd).
A57 FP Anti-dependency breaker
aarch64-type-promotion
Enable the type promotion pass
aarch64-type-promotion-merge
Enable merging of redundant sexts when one is dominating the other.
AArch64 Type Promotion Pass
AArch64 Address Type Promotion
aarch64-simd-scalar-force-all
Force use of AdvSIMD scalar instructions everywhere
AdvSIMD Scalar Operation Optimization
AArch64 Assembly Printer
DEBUG_VALUE: 
 <- 
aarch64-branch-relax
Relax out of range conditional branches
aarch64-tbz-offset-bits
Restrict range of TB[N]Z instructions (DEBUG)
aarch64-cbz-offset-bits
Restrict range of CB[N]Z instructions (DEBUG)
aarch64-bcc-offset-bits
Restrict range of Bcc instructions (DEBUG)
AArch64 branch relaxation pass
Local Dynamic TLS Access Clean-up
_TLS_MODULE_BASE_
aarch64-collect-loh-pre-collect-register
Restrict analysis to registers invovled in LOHs
aarch64-collect-loh-bb-only
Restrict analysis at basic block scope
AArch64 Collect Linker Optimization Hint (LOH)
aarch64-collect-loh
aarch64-ccmp-limit
Maximum number of instructions per speculated block.
aarch64-stress-ccmp
Turn all knobs to 11
AArch64 CCMP Pass
aarch64-ccmp
AArch64 Conditional Compares
Dead register definitions
AArch64 pseudo instruction expansion pass
aarch64-redzone
enable use of redzone on AArch64
AArch64 Instruction Selection
cyclone
Load/store alignment support
aarch64-strict-align
Disallow all unaligned memory accesses
aarch64-no-strict-align
Allow unaligned memory accesses
aarch64-extr-generation
Allow AArch64 (or (shift)(shift))->extract
aarch64-shift-insert-generation
Allow AArch64 SLI/SRI formation
AArch64ISD::CALL
AArch64ISD::ADRP
AArch64ISD::ADDlow
AArch64ISD::LOADgot
AArch64ISD::RET_FLAG
AArch64ISD::BRCOND
AArch64ISD::CSEL
AArch64ISD::FCSEL
AArch64ISD::CSINV
AArch64ISD::CSNEG
AArch64ISD::CSINC
AArch64ISD::THREAD_POINTER
AArch64ISD::TLSDESC_CALL
AArch64ISD::ADC
AArch64ISD::SBC
AArch64ISD::ADDS
AArch64ISD::SUBS
AArch64ISD::ADCS
AArch64ISD::SBCS
AArch64ISD::ANDS
AArch64ISD::FCMP
AArch64ISD::FMIN
AArch64ISD::FMAX
AArch64ISD::DUP
AArch64ISD::DUPLANE8
AArch64ISD::DUPLANE16
AArch64ISD::DUPLANE32
AArch64ISD::DUPLANE64
AArch64ISD::MOVI
AArch64ISD::MOVIshift
AArch64ISD::MOVIedit
AArch64ISD::MOVImsl
AArch64ISD::FMOV
AArch64ISD::MVNIshift
AArch64ISD::MVNImsl
AArch64ISD::BICi
AArch64ISD::ORRi
AArch64ISD::BSL
AArch64ISD::NEG
AArch64ISD::EXTR
AArch64ISD::ZIP1
AArch64ISD::ZIP2
AArch64ISD::UZP1
AArch64ISD::UZP2
AArch64ISD::TRN1
AArch64ISD::TRN2
AArch64ISD::REV16
AArch64ISD::REV32
AArch64ISD::REV64
AArch64ISD::EXT
AArch64ISD::VSHL
AArch64ISD::VLSHR
AArch64ISD::VASHR
AArch64ISD::CMEQ
AArch64ISD::CMGE
AArch64ISD::CMGT
AArch64ISD::CMHI
AArch64ISD::CMHS
AArch64ISD::FCMEQ
AArch64ISD::FCMGE
AArch64ISD::FCMGT
AArch64ISD::CMEQz
AArch64ISD::CMGEz
AArch64ISD::CMGTz
AArch64ISD::CMLEz
AArch64ISD::CMLTz
AArch64ISD::FCMEQz
AArch64ISD::FCMGEz
AArch64ISD::FCMGTz
AArch64ISD::FCMLEz
AArch64ISD::FCMLTz
AArch64ISD::NOT
AArch64ISD::BIT
AArch64ISD::CBZ
AArch64ISD::CBNZ
AArch64ISD::TBZ
AArch64ISD::TBNZ
AArch64ISD::TC_RETURN
AArch64ISD::SITOF
AArch64ISD::UITOF
AArch64ISD::SQSHL_I
AArch64ISD::UQSHL_I
AArch64ISD::SRSHR_I
AArch64ISD::URSHR_I
AArch64ISD::SQSHLU_I
AArch64ISD::WrapperLarge
AArch64ISD::LD2post
AArch64ISD::LD3post
AArch64ISD::LD4post
AArch64ISD::ST2post
AArch64ISD::ST3post
AArch64ISD::ST4post
AArch64ISD::LD1x2post
AArch64ISD::LD1x3post
AArch64ISD::LD1x4post
AArch64ISD::ST1x2post
AArch64ISD::ST1x3post
AArch64ISD::ST1x4post
AArch64ISD::LD1DUPpost
AArch64ISD::LD2DUPpost
AArch64ISD::LD3DUPpost
AArch64ISD::LD4DUPpost
AArch64ISD::LD1LANEpost
AArch64ISD::LD2LANEpost
AArch64ISD::LD3LANEpost
AArch64ISD::LD4LANEpost
AArch64ISD::ST2LANEpost
AArch64ISD::ST3LANEpost
AArch64ISD::ST4LANEpost
__sincos_stret
__sincosf_stret
failed to perform tail call elimination on a call site marked musttail
Invalid register name global variable
{cc}
lohi
lo64
hi64
val64
Cannot find option named '
cortex-a57
__clear_cache
cortex-a53
aarch64-load-store-scan-limit
aarch64-unscaled-mem-op
Allow AArch64 unscaled load/store combining
AArch64 load / store optimization pass
aarch64-stress-promote-const
Promote all vector constants
AArch64 Promote Constant Pass
aarch64-promote-const
AArch64 Promote Constant
_PromotedConst
GPR32sponly
tcGPR64
QQQQ_with_qsub0_in_FPR128_lo+QQQQ_with_qsub3_in_FPR128_lo
FPR8
GPR32all
bsub
dsub
dsub0
dsub1
dsub2
dsub3
hsub
qhisub
qsub
qsub0
qsub1
qsub2
qsub3
ssub
sub_32
dsub1_then_bsub
dsub1_then_hsub
dsub1_then_ssub
dsub3_then_bsub
dsub3_then_hsub
dsub3_then_ssub
dsub2_then_bsub
dsub2_then_hsub
dsub2_then_ssub
qsub1_then_bsub
qsub1_then_dsub
qsub1_then_hsub
qsub1_then_ssub
qsub3_then_bsub
qsub3_then_dsub
qsub3_then_hsub
qsub3_then_ssub
qsub2_then_bsub
qsub2_then_dsub
qsub2_then_hsub
qsub2_then_ssub
dsub0_dsub1
dsub0_dsub1_dsub2
dsub1_dsub2
dsub1_dsub2_dsub3
dsub2_dsub3
dsub_qsub1_then_dsub
dsub_qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
dsub_qsub1_then_dsub_qsub2_then_dsub
qsub0_qsub1
qsub0_qsub1_qsub2
qsub1_qsub2
qsub1_qsub2_qsub3
qsub2_qsub3
qsub1_then_dsub_qsub2_then_dsub
qsub1_then_dsub_qsub2_then_dsub_qsub3_then_dsub
qsub2_then_dsub_qsub3_then_dsub
AArch64 Store Pair Suppression
Expected a variant SchedClass
aarch64-early-ifcvt
Enable the early if converter pass
aarch64-use-tbi
Assume that top byte of an address is ignored
generic
e-m:o-i64:64-i128:128-n32:64-S128
e-m:e-i64:64-i128:128-n32:64-S128
E-m:e-i64:64-i128:128-n32:64-S128
bzero
Enable the CCMP formation pass
aarch64-mcr
Enable the machine combiner pass
aarch64-stp-suppress
Suppress STP for AArch64
aarch64-simd-scalar
Enable use of AdvSIMD scalar integer instructions
Enable the promote constant pass
Enable the pass that emits the linker optimization hints (LOH)
aarch64-dead-def-elimination
Enable the pass that removes dead definitons and replaces stores to them with stores to the zero register
aarch64-load-store-opt
Enable the load/store pair optimization pass
aarch64-atomic-cfg-tidy
Run SimplifyCFG after expanding atomic operations to make use of cmpxchg flow-based information
aarch64-enable-early-ifcvt
Run early if-conversion
AArch64 Target Transform Info
aarch64tti
nzcv
b.eq
b.ne
b.hs
b.cs
b.lo
b.cc
b.mi
b.pl
b.vs
b.vc
b.hi
b.ls
b.ge
b.lt
b.gt
b.le
b.al
b.nv
.req
tlbi
invalid condition code
ccmp
ccmn
fccmp
fccmpe
fcsel
csel
csinc
csinv
csneg
cset
csetm
cinc
cinv
cneg
unexpected token in argument list
vector register without type specifier expected
register name or alias expected
unexpected input in .req directive
ignoring redefinition of register alias '
vector register expected
invalid vector kind qualifier
.16b
invalid operand
ialluis
iallu
ivau
invalid operand for IC instruction
ivac
cvac
cvau
civac
cisw
invalid operand for DC instruction
s1e1r
s1e2r
s1e3r
s1e1w
s1e2w
s1e3w
s1e0r
s1e0w
s12e1r
s12e1w
s12e0r
s12e0w
invalid operand for AT instruction
vmalle1is
alle2is
alle3is
vae1is
vae2is
vae3is
aside1is
vaae1is
alle1is
vale1is
vaale1is
vmalle1
alle2
vale2is
vale3is
alle3
vae1
vae2
vae3
aside1
vaae1
alle1
vale1
vale2
vale3
vaale1
ipas2e1
ipas2le1
ipas2e1is
ipas2le1is
vmalls12e1
vmalls12e1is
invalid operand for TLBI instruction
expected register operand
specified 
 op requires a register
 op does not use a register
<fpimm 
<barrier 
<barrier invalid #
<shiftedimm 
, lsl #
<condcode 
<register 
<vectorlist 
<vectorindex 
<sysreg: 
<prfop 
<prfop invalid #
<imp>
uxtb
uxth
uxtw
uxtx
sxtb
sxth
sxtw
sxtx
immediate value expected for vector index
']' expected
fcmpe
fcmeq
fcmge
fcmgt
fcmle
fcmlt
unexpected floating point literal
expected floating-point constant #0.0
unexpected token in operand
movz
Immediate too large for register
adcs
addhn
addhn2
addp
adds
addv
adrp
aesd
aese
aesimc
aesmc
ands
asrv
bics
cbnz
ccmn
ccmp
cinc
cinv
clrex
cmeq
cmge
cmgt
cmhi
cmhs
cmle
cmlo
cmls
cmlt
cmtst
cneg
crc32b
crc32cb
crc32ch
crc32cw
crc32cx
crc32h
crc32w
crc32x
csel
cset
csetm
csinc
csinv
csneg
dcps1
dcps2
dcps3
drps
eret
extr
fabd
fabs
facge
facgt
facle
faclt
fadd
faddp
fccmp
fccmpe
fcmeq
fcmge
fcmgt
fcmle
fcmlt
fcmp
fcmpe
fcsel
fcvt
fcvtas
fcvtau
fcvtl
fcvtl2
fcvtms
fcvtmu
fcvtn
fcvtn2
fcvtns
fcvtnu
fcvtps
fcvtpu
fcvtxn
fcvtxn2
fcvtzs
fcvtzu
fdiv
fmadd
fmax
fmaxnm
fmaxnmp
fmaxnmv
fmaxp
fmaxv
fmin
fminnm
fminnmp
fminnmv
fminp
fminv
fmla
fmls
fmov
fmsub
fmul
fmulx
fneg
fnmadd
fnmsub
fnmul
frecpe
frecps
frecpx
frinta
frinti
frintm
frintn
frintp
frintx
frintz
frsqrte
frsqrts
fsqrt
fsub
hint
ld1r
ld2r
ld3r
ld4r
ldar
ldarb
ldarh
ldaxp
ldaxr
ldaxrb
ldaxrh
ldnp
ldpsw
ldrb
ldrh
ldrsb
ldrsh
ldrsw
ldtr
ldtrb
ldtrh
ldtrsb
ldtrsh
ldtrsw
ldur
ldurb
ldurh
ldursb
ldursh
ldursw
ldxp
ldxr
ldxrb
ldxrh
lslv
lsrv
madd
mneg
movi
movk
movn
movz
msub
mvni
negs
ngcs
pmul
pmull
pmull2
prfm
prfum
raddhn
raddhn2
rbit
rev16
rev32
rev64
rorv
rshrn
rshrn2
rsubhn
rsubhn2
saba
sabal
sabal2
sabd
sabdl
sabdl2
sadalp
saddl
saddl2
saddlp
saddlv
saddw
saddw2
sbcs
sbfm
scvtf
sdiv
sevl
sha1c
sha1h
sha1m
sha1p
sha1su0
sha1su1
sha256h
sha256h2
sha256su0
sha256su1
shadd
shll
shll2
shrn
shrn2
shsub
smaddl
smax
smaxp
smaxv
smin
sminp
sminv
smlal
smlal2
smlsl
smlsl2
smnegl
smov
smsubl
smulh
smull
smull2
sqabs
sqadd
sqdmlal
sqdmlal2
sqdmlsl
sqdmlsl2
sqdmulh
sqdmull
sqdmull2
sqneg
sqrdmulh
sqrshl
sqrshrn
sqrshrn2
sqrshrun
sqrshrun2
sqshl
sqshlu
sqshrn
sqshrn2
sqshrun
sqshrun2
sqsub
sqxtn
sqxtn2
sqxtun
sqxtun2
srhadd
srshl
srshr
srsra
sshl
sshll
sshll2
sshr
ssra
ssubl
ssubl2
ssubw
ssubw2
stlr
stlrb
stlrh
stlxp
stlxr
stlxrb
stlxrh
stnp
strb
strh
sttr
sttrb
sttrh
stur
sturb
sturh
stxp
stxr
stxrb
stxrh
subhn
subhn2
subs
suqadd
sxtb
sxth
sxtl
sxtl2
sxtw
sysl
tbnz
trn1
trn2
uaba
uabal
uabal2
uabd
uabdl
uabdl2
uadalp
uaddl
uaddl2
uaddlp
uaddlv
uaddw
uaddw2
ubfm
ucvtf
udiv
uhadd
uhsub
umaddl
umax
umaxp
umaxv
umin
uminp
uminv
umlal
umlal2
umlsl
umlsl2
umnegl
umov
umsubl
umulh
umull
umull2
uqadd
uqrshl
uqrshrn
uqrshrn2
uqshl
uqshrn
uqshrn2
uqsub
uqxtn
uqxtn2
urecpe
urhadd
urshl
urshr
ursqrte
ursra
ushl
ushll
ushll2
ushr
usqadd
usra
usubl
usubl2
usubw
usubw2
uxtb
uxth
uxtl
uxtl2
uxtw
uzp1
uzp2
xtn2
yield
zip1
zip2
only 'lsl #+N' valid after immediate
positive shift amount required
gotpage label reference not allowed an addend
page or gotpage label reference expected
immediate value expected for barrier operand
barrier operand out of range
invalid operand for instruction
invalid barrier option name
'sy' or #imm operand expected
expected compatible register or floating-point constant
encoded floating point value out of range
invalid floating point immediate
index must be absent or #0
immediate value expected for prefetch operand
prefetch operand out of range, [0,31] expected
pre-fetch hint expected
Expected cN operand where 0 <= N <= 15
expect relocation specifier in operand after ':'
lo12
abs_g3
abs_g2
abs_g2_s
abs_g2_nc
abs_g1
abs_g1_s
abs_g1_nc
abs_g0
abs_g0_s
abs_g0_nc
dtprel_g2
dtprel_g1
dtprel_g1_nc
dtprel_g0
dtprel_g0_nc
dtprel_hi12
dtprel_lo12
dtprel_lo12_nc
tprel_g2
tprel_g1
tprel_g1_nc
tprel_g0
tprel_g0_nc
tprel_hi12
tprel_lo12
tprel_lo12_nc
tlsdesc_lo12
got_lo12
gottprel
gottprel_lo12
gottprel_g1
gottprel_g0_nc
tlsdesc
expect ':' after relocation specifier
mismatched register size suffix
invalid number of vectors
registers must be sequential
'}' expected
condition codes AL and NV are invalid for this instruction
expected #imm after shift specifier
expected integer shift amount
expected constant '#imm' after shift specifier
.hword
.word
.xword
.tlsdesccall
.ltorg
.pool
.unreq
unexpected token in directive
expected symbol after directive
unexpected input in .unreq directive.
expected an identifier or a number in directive
invalid numeric identifier in directive
invalid identifier in directive
expected identifier in directive
unexpected token in '
' directive
.loh
AdrpAdrp
AdrpLdr
AdrpAddLdr
AdrpLdrGotLdr
AdrpAddStr
AdrpLdrGotStr
AdrpAdd
AdrpLdrGot
ubfm
sbfiz
ubfiz
expected integer in range [0, 31]
expected integer in range [1, 32]
requested insert overflows register
sbfm
bfxil
sbfx
ubfx
requested extract overflows register
movi
fmov
instruction requires:
too few operands for instruction
unpredictable LDP instruction, writeback base is also a destination
unpredictable LDP instruction, Rt2==Rt
unpredictable STP instruction, writeback base is also a source
unpredictable LDR instruction, writeback base is also a source
unpredictable STR instruction, writeback base is also a source
invalid immediate expression
fp-armv8
neon
crypto
(unknown)
instruction requires a CPU feature not currently enabled
invalid type suffix for instruction
expected AArch64 condition code
expected '[su]xt[bhw]' or 'lsl' with optional integer in range [0, 4]
expected 'sxtx' 'uxtx' or 'lsl' with optional integer in range [0, 4]
expected compatible register, symbol or integer in range [0, 4095]
expected compatible register or logical immediate
expected 'lsl' with optional integer 0 or 16
expected 'lsl' with optional integer 0, 16, 32 or 48
expected 'lsl', 'lsr' or 'asr' with optional integer in range [0, 31]
expected 'lsl', 'lsr' or 'asr' with optional integer in range [0, 63]
index must be an integer in range [-256, 255].
index must be a multiple of 4 in range [-256, 252].
index must be a multiple of 8 in range [-512, 504].
index must be a multiple of 16 in range [-1024, 1008].
expected 'uxtw' or 'sxtw' with optional shift of #0
expected 'uxtw' or 'sxtw' with optional shift of #0 or #1
expected 'uxtw' or 'sxtw' with optional shift of #0 or #2
expected 'uxtw' or 'sxtw' with optional shift of #0 or #3
expected 'uxtw' or 'sxtw' with optional shift of #0 or #4
expected 'lsl' or 'sxtx' with optional shift of #0
expected 'lsl' or 'sxtx' with optional shift of #0 or #1
expected 'lsl' or 'sxtx' with optional shift of #0 or #2
expected 'lsl' or 'sxtx' with optional shift of #0 or #3
expected 'lsl' or 'sxtx' with optional shift of #0 or #4
index must be an integer in range [0, 4095].
index must be a multiple of 2 in range [0, 8190].
index must be a multiple of 4 in range [0, 16380].
index must be a multiple of 8 in range [0, 32760].
index must be a multiple of 16 in range [0, 65520].
immediate must be an integer in range [0, 7].
immediate must be an integer in range [0, 15].
immediate must be an integer in range [0, 31].
immediate must be an integer in range [0, 63].
immediate must be an integer in range [0, 127].
immediate must be an integer in range [0, 65535].
immediate must be an integer in range [1, 8].
immediate must be an integer in range [1, 16].
immediate must be an integer in range [1, 32].
immediate must be an integer in range [1, 64].
expected lane specifier '[1]'
vector lane must be an integer in range [0, 15].
vector lane must be an integer in range [0, 7].
vector lane must be an integer in range [0, 3].
vector lane must be an integer in range [0, 1].
expected label or encodable integer pc offset
expected readable system register
expected writable system register or pstate
unrecognized instruction mnemonic
__TEXT
__ustring
__DATA
__cfstring
__objc_classrefs
__objc_catlist
fixup_aarch64_pcrel_adr_imm21
fixup_aarch64_pcrel_adrp_imm21
fixup_aarch64_add_imm12
fixup_aarch64_ldst_imm12_scale1
fixup_aarch64_ldst_imm12_scale2
fixup_aarch64_ldst_imm12_scale4
fixup_aarch64_ldst_imm12_scale8
fixup_aarch64_ldst_imm12_scale16
fixup_aarch64_ldr_pcrel_imm19
fixup_aarch64_movw
fixup_aarch64_pcrel_branch14
fixup_aarch64_pcrel_branch19
fixup_aarch64_pcrel_branch26
fixup_aarch64_pcrel_call26
fixup_aarch64_tlsdesc_call
fixup value out of range
invalid imm12 fixup value
no resolvable MOVZ/MOVK fixups supported yet
fixup not sufficiently aligned
invalid fixup for add (uimm12) instruction
invalid fixup for 8-bit load/store instruction
invalid fixup for 16-bit load/store instruction
invalid fixup for 32-bit load/store instruction
invalid fixup for 64-bit load/store instruction
invalid fixup for 128-bit load/store instruction
invalid fixup for movz/movk instruction
aarch64-neon-syntax
Choose style of NEON code to emit from AArch64 backend:
Emit generic NEON assembly
apple
Emit Apple-style NEON assembly
.code
.hword
.word
.xword
.weak
Not supported instr: 
:lo12:
:abs_g3:
:abs_g2:
:abs_g2_s:
:abs_g2_nc:
:abs_g1:
:abs_g1_s:
:abs_g1_nc:
:abs_g0:
:abs_g0_s:
:abs_g0_nc:
:dtprel_g2:
:dtprel_g1:
:dtprel_g1_nc:
:dtprel_g0:
:dtprel_g0_nc:
:dtprel_hi12:
:dtprel_lo12:
:dtprel_lo12_nc:
:tprel_g2:
:tprel_g1:
:tprel_g1_nc:
:tprel_g0:
:tprel_g0_nc:
:tprel_hi12:
:tprel_lo12:
:tprel_lo12_nc:
:tlsdesc_lo12:
:got:
:got_lo12:
:gottprel:
:gottprel_lo12:
:gottprel_g1:
:gottprel_g0_nc:
:tlsdesc:
Cortex-A53 ARM processors
Cortex-A57 ARM processors
Enable ARMv8 CRC-32 checksum instructions
Enable cryptographic instructions
Cyclone
fix-16473581
Fix for radar://16473581.
Enable ARMv8 FP
Enable Advanced SIMD instructions
Has TBI (address top-byte ignored) option
Has zero-cycle register moves
Has zero-cycle zeroing instructions
Select the cortex-a53 processor
Select the cortex-a57 processor
Select the cyclone processor
Select the generic processor
FPR16
FPR32
GPR32
GPR32sp
GPR32common
GPR64all
FPR64
GPR64
GPR64sp
GPR64common
GPR64sponly
FPR128
FPR128_lo
DDDD
QQ_with_qsub0_in_FPR128_lo
QQ_with_qsub1_in_FPR128_lo
QQ_with_qsub0_in_FPR128_lo_and_QQ_with_qsub1_in_FPR128_lo
QQQ_with_qsub0_in_FPR128_lo
QQQ_with_qsub1_in_FPR128_lo
QQQ_with_qsub2_in_FPR128_lo
QQQ_with_qsub0_in_FPR128_lo_and_QQQ_with_qsub1_in_FPR128_lo
QQQ_with_qsub1_in_FPR128_lo_and_QQQ_with_qsub2_in_FPR128_lo
QQQ_with_qsub0_in_FPR128_lo_and_QQQ_with_qsub2_in_FPR128_lo
QQQQ
QQQQ_with_qsub0_in_FPR128_lo
QQQQ_with_qsub1_in_FPR128_lo
QQQQ_with_qsub2_in_FPR128_lo
QQQQ_with_qsub3_in_FPR128_lo
QQQQ_with_qsub0_in_FPR128_lo_and_QQQQ_with_qsub1_in_FPR128_lo
QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_lo
QQQQ_with_qsub2_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
QQQQ_with_qsub0_in_FPR128_lo_and_QQQQ_with_qsub2_in_FPR128_lo
QQQQ_with_qsub1_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
QQQQ_with_qsub0_in_FPR128_lo_and_QQQQ_with_qsub3_in_FPR128_lo
Only small and large code models are allowed on AArch64
conditional branch requires assembler-local label. '
' is external.
Invalid relocation on conditional branch!
unknown AArch64 fixup kind!
PC relative absolute relocation!
unsupported relocation of modified symbol
unsupported pc-relative relocation of difference
unsupported relocation of local symbol '
'. Must have non-local symbol earlier in section.
unsupported relocation with identical base
unable to resolve variable '
unsupported relocation of variable '
ADR/ADRP relocations must be GOT relative
arm64
ARM64 (little endian)
aarch64
AArch64 (little endian)
aarch64_be
AArch64 (big endian)
.16b, 
.2s, 
.2d, 
.4h, 
.4s, 
.8h, 
.8b, 
, #0.0
.1q, 
.1d, 
.16b, #0
, #0
.2s, #0
.2d, #0
.4h, #0
.4s, #0
.8h, #0
.8b, #0
.2s, #0.0
.2d, #0.0
.4s, #0.0
.16b, #8
.2s, #32
.4h, #16
.4s, #32
.8h, #16
.8b, #8
cmn $
cmn $
cmn $
adds $
cmn $
mov $
add $
tst $
tst $
tst $
ands $
tst $
and $
bics $
bic $
bic $
.2s, $
bic $
.4h, $
bic $
.4s, $
bic $
.8h, $
clrex
cset $
cinc $
csetm $
cinv $
cneg $
dcps1
dcps2
dcps3
eon $
eor $
ror $
yield
sevl
, [$
], #64
, [$
], #32
, [$
], #64
, [$
], #32
, [$
], #32
, [$
], #64
, [$
], #32
, [$
], #64
, [$
], #16
, [$
], #8
, [$
], #16
, [$
], #8
, [$
], #8
, [$
], #16
, [$
], #8
, [$
], #16
ld1r
, [$
], #1
ld1r
, [$
], #8
ld1r
, [$
], #8
ld1r
, [$
], #4
ld1r
, [$
], #2
ld1r
, [$
], #4
ld1r
, [$
], #1
ld1r
, [$
], #2
, [$
], #48
, [$
], #24
, [$
], #48
, [$
], #24
, [$
], #24
, [$
], #48
, [$
], #24
, [$
], #48
, [$
], #32
, [$
], #16
, [$
], #32
, [$
], #16
, [$
], #16
, [$
], #32
, [$
], #16
, [$
], #32
, [$
], #2
, [$
], #4
, [$
], #8
, [$
], #1
ld2r
, [$
], #2
ld2r
, [$
], #16
ld2r
, [$
], #16
ld2r
, [$
], #8
ld2r
, [$
], #4
ld2r
, [$
], #8
ld2r
, [$
], #2
ld2r
, [$
], #4
, [$
], #32
, [$
], #32
, [$
], #16
, [$
], #16
, [$
], #32
, [$
], #16
, [$
], #32
, [$
], #4
, [$
], #8
, [$
], #16
, [$
], #2
ld3r
, [$
], #3
ld3r
, [$
], #24
ld3r
, [$
], #24
ld3r
, [$
], #12
ld3r
, [$
], #6
ld3r
, [$
], #12
ld3r
, [$
], #3
ld3r
, [$
], #6
, [$
], #48
, [$
], #48
, [$
], #24
, [$
], #24
, [$
], #48
, [$
], #24
, [$
], #48
, [$
], #6
, [$
], #12
, [$
], #24
, [$
], #3
, [$
], #64
, [$
], #64
, [$
], #32
, [$
], #32
, [$
], #64
, [$
], #32
, [$
], #64
ld4r
, [$
], #4
ld4r
, [$
], #32
ld4r
, [$
], #32
ld4r
, [$
], #16
ld4r
, [$
], #8
ld4r
, [$
], #16
ld4r
, [$
], #4
ld4r
, [$
], #8
, [$
], #8
, [$
], #16
, [$
], #32
, [$
], #4
ldnp
, [$
ldp $
, [$
ldpsw $
, [$
ldrb $
, [$
ldrb $
, [$
ldr $
, [$
ldr $
, [$
ldrh $
, [$
ldrh $
, [$
ldrsb $
, [$
ldrsb $
, [$
ldrsh $
, [$
ldrsh $
, [$
ldrsw $
, [$
ldrsw $
, [$
ldtrb $
, [$
ldtrh $
, [$
ldtrsb $
, [$
ldtrsh $
, [$
ldtrsw $
, [$
ldtr $
, [$
ldurb $
, [$
ldur $
, [$
ldurh $
, [$
ldursb $
, [$
ldursh $
, [$
ldursw $
, [$
mul $
movk $
mneg $
mvn $
.16b, $
.16b
mvn $
.8b, $
mvn $
mvn $
orn $
mov $
orr $
.16b, $
.16b
orr $
.2s, $
orr $
.4h, $
orr $
.4s, $
orr $
.8h, $
.8b, $
prfm $
, [$
prfm $
, [$
prfum $
, [$
ngcs $
ngc $
asr $
sxtb $
sxth $
sxtw $
smull $
smnegl $
, [$
], #64
, [$
], #32
, [$
], #64
, [$
], #32
, [$
], #32
, [$
], #64
, [$
], #32
, [$
], #64
, [$
], #16
, [$
], #8
, [$
], #16
, [$
], #8
, [$
], #8
, [$
], #16
, [$
], #8
, [$
], #16
, [$
], #48
, [$
], #24
, [$
], #48
, [$
], #24
, [$
], #24
, [$
], #48
, [$
], #24
, [$
], #48
, [$
], #32
, [$
], #16
, [$
], #32
, [$
], #16
, [$
], #16
, [$
], #32
, [$
], #16
, [$
], #32
, [$
], #2
, [$
], #4
, [$
], #8
, [$
], #1
, [$
], #32
, [$
], #32
, [$
], #16
, [$
], #16
, [$
], #32
, [$
], #16
, [$
], #32
, [$
], #4
, [$
], #8
, [$
], #16
, [$
], #2
, [$
], #48
, [$
], #48
, [$
], #24
, [$
], #24
, [$
], #48
, [$
], #24
, [$
], #48
, [$
], #6
, [$
], #12
, [$
], #24
, [$
], #3
, [$
], #64
, [$
], #64
, [$
], #32
, [$
], #32
, [$
], #64
, [$
], #32
, [$
], #64
, [$
], #8
, [$
], #16
, [$
], #32
, [$
], #4
stnp
, [$
stp $
, [$
strb $
, [$
strb $
, [$
str $
, [$
str $
, [$
strh $
, [$
strh $
, [$
sttrb $
, [$
sttrh $
, [$
sttr $
, [$
sturb $
, [$
stur $
, [$
sturh $
, [$
cmp $
cmp $
cmp $
negs $
negs $
subs $
cmp $
neg $
neg $
sub $
sys $
lsr $
uxtb $
uxth $
uxtw $
umull $
umnegl $
, #8
, #32
, #16
mov.h
mov.h $
mov.s
mov.s $
mov.d
mov.d $
mov.b
mov.b $
mvn.16b $
mvn.8b $
mov.16b
mov.8b
mov.s
mov.d
bfxil
movz
movn
movk
ialluis
iallu
ivau
ivac
cvac
cvau
civac
cisw
s1e1r
s1e1w
s1e0r
s1e0w
s1e2r
s1e2w
s12e1r
s12e1w
s12e0r
s12e0w
s1e3r
s1e3w
tlbi
vmalle1is
tlbi
vae1is
tlbi
aside1is
tlbi
vaae1is
tlbi
vale1is
tlbi
vaale1is
tlbi
alle2is
tlbi
vae2is
tlbi
alle1is
tlbi
vale2is
tlbi
vmalls12e1is
tlbi
alle3is
tlbi
vae3is
tlbi
vale3is
tlbi
ipas2e1is
tlbi
ipas2le1is
tlbi
ipas2e1
tlbi
ipas2le1
tlbi
vmalle1
tlbi
vae1
tlbi
aside1
tlbi
vaae1
tlbi
vale1
tlbi
vaale1
tlbi
alle2
tlbi
vae2
tlbi
alle1
tlbi
vale2
tlbi
vmalls12e1
tlbi
alle3
tlbi
vae3
tlbi
vale3
#%#llx
#%.8f
#%#016llx
ld1r
ld2r
ld3r
ld4r
oshld
oshst
nshld
nshst
ishld
ishst
pldl1keep
pldl1strm
pldl2keep
pldl2strm
pldl3keep
pldl3strm
plil1keep
plil1strm
plil2keep
plil2strm
plil3keep
plil3strm
pstl1keep
pstl1strm
pstl2keep
pstl2strm
pstl3keep
pstl3strm
spsel
daifset
daifclr
mdccsr_el0
dbgdtrrx_el0
mdrar_el1
oslsr_el1
dbgauthstatus_el1
pmceid0_el0
pmceid1_el0
midr_el1
ccsidr_el1
clidr_el1
ctr_el0
mpidr_el1
revidr_el1
aidr_el1
dczid_el0
id_pfr0_el1
id_pfr1_el1
id_dfr0_el1
id_afr0_el1
id_mmfr0_el1
id_mmfr1_el1
id_mmfr2_el1
id_mmfr3_el1
id_isar0_el1
id_isar1_el1
id_isar2_el1
id_isar3_el1
id_isar4_el1
id_isar5_el1
id_aa64pfr0_el1
id_aa64pfr1_el1
id_aa64dfr0_el1
id_aa64dfr1_el1
id_aa64afr0_el1
id_aa64afr1_el1
id_aa64isar0_el1
id_aa64isar1_el1
id_aa64mmfr0_el1
id_aa64mmfr1_el1
mvfr0_el1
mvfr1_el1
mvfr2_el1
rvbar_el1
rvbar_el2
rvbar_el3
isr_el1
cntpct_el0
cntvct_el0
trcstatr
trcidr8
trcidr9
trcidr10
trcidr11
trcidr12
trcidr13
trcidr0
trcidr1
trcidr2
trcidr3
trcidr4
trcidr5
trcidr6
trcidr7
trcoslsr
trcpdsr
trcdevaff0
trcdevaff1
trclsr
trcauthstatus
trcdevarch
trcdevid
trcdevtype
trcpidr4
trcpidr5
trcpidr6
trcpidr7
trcpidr0
trcpidr1
trcpidr2
trcpidr3
trccidr0
trccidr1
trccidr2
trccidr3
icc_iar1_el1
icc_iar0_el1
icc_hppir1_el1
icc_hppir0_el1
icc_rpr_el1
ich_vtr_el2
ich_eisr_el2
ich_elsr_el2
dbgdtrtx_el0
oslar_el1
pmswinc_el0
trcoslar
trclar
icc_eoir1_el1
icc_eoir0_el1
icc_dir_el1
icc_sgi1r_el1
icc_asgi1r_el1
icc_sgi0r_el1
osdtrrx_el1
osdtrtx_el1
teecr32_el1
mdccint_el1
mdscr_el1
dbgdtr_el0
oseccr_el1
dbgvcr32_el2
dbgbvr0_el1
dbgbvr1_el1
dbgbvr2_el1
dbgbvr3_el1
dbgbvr4_el1
dbgbvr5_el1
dbgbvr6_el1
dbgbvr7_el1
dbgbvr8_el1
dbgbvr9_el1
dbgbvr10_el1
dbgbvr11_el1
dbgbvr12_el1
dbgbvr13_el1
dbgbvr14_el1
dbgbvr15_el1
dbgbcr0_el1
dbgbcr1_el1
dbgbcr2_el1
dbgbcr3_el1
dbgbcr4_el1
dbgbcr5_el1
dbgbcr6_el1
dbgbcr7_el1
dbgbcr8_el1
dbgbcr9_el1
dbgbcr10_el1
dbgbcr11_el1
dbgbcr12_el1
dbgbcr13_el1
dbgbcr14_el1
dbgbcr15_el1
dbgwvr0_el1
dbgwvr1_el1
dbgwvr2_el1
dbgwvr3_el1
dbgwvr4_el1
dbgwvr5_el1
dbgwvr6_el1
dbgwvr7_el1
dbgwvr8_el1
dbgwvr9_el1
dbgwvr10_el1
dbgwvr11_el1
dbgwvr12_el1
dbgwvr13_el1
dbgwvr14_el1
dbgwvr15_el1
dbgwcr0_el1
dbgwcr1_el1
dbgwcr2_el1
dbgwcr3_el1
dbgwcr4_el1
dbgwcr5_el1
dbgwcr6_el1
dbgwcr7_el1
dbgwcr8_el1
dbgwcr9_el1
dbgwcr10_el1
dbgwcr11_el1
dbgwcr12_el1
dbgwcr13_el1
dbgwcr14_el1
dbgwcr15_el1
teehbr32_el1
osdlr_el1
dbgprcr_el1
dbgclaimset_el1
dbgclaimclr_el1
csselr_el1
vpidr_el2
vmpidr_el2
sctlr_el1
sctlr_el2
sctlr_el3
actlr_el1
actlr_el2
actlr_el3
cpacr_el1
hcr_el2
scr_el3
mdcr_el2
sder32_el3
cptr_el2
cptr_el3
hstr_el2
hacr_el2
mdcr_el3
ttbr0_el1
ttbr0_el2
ttbr0_el3
ttbr1_el1
tcr_el1
tcr_el2
tcr_el3
vttbr_el2
vtcr_el2
dacr32_el2
spsr_el1
spsr_el2
spsr_el3
elr_el1
elr_el2
elr_el3
sp_el0
sp_el1
sp_el2
daif
currentel
spsr_irq
spsr_abt
spsr_und
spsr_fiq
fpcr
fpsr
dspsr_el0
dlr_el0
ifsr32_el2
afsr0_el1
afsr0_el2
afsr0_el3
afsr1_el1
afsr1_el2
afsr1_el3
esr_el1
esr_el2
esr_el3
fpexc32_el2
far_el1
far_el2
far_el3
hpfar_el2
par_el1
pmcr_el0
pmcntenset_el0
pmcntenclr_el0
pmovsclr_el0
pmselr_el0
pmccntr_el0
pmxevtyper_el0
pmxevcntr_el0
pmuserenr_el0
pmintenset_el1
pmintenclr_el1
pmovsset_el0
mair_el1
mair_el2
mair_el3
amair_el1
amair_el2
amair_el3
vbar_el1
vbar_el2
vbar_el3
rmr_el1
rmr_el2
rmr_el3
contextidr_el1
tpidr_el0
tpidr_el2
tpidr_el3
tpidrro_el0
tpidr_el1
cntfrq_el0
cntvoff_el2
cntkctl_el1
cnthctl_el2
cntp_tval_el0
cnthp_tval_el2
cntps_tval_el1
cntp_ctl_el0
cnthp_ctl_el2
cntps_ctl_el1
cntp_cval_el0
cnthp_cval_el2
cntps_cval_el1
cntv_tval_el0
cntv_ctl_el0
cntv_cval_el0
pmevcntr0_el0
pmevcntr1_el0
pmevcntr2_el0
pmevcntr3_el0
pmevcntr4_el0
pmevcntr5_el0
pmevcntr6_el0
pmevcntr7_el0
pmevcntr8_el0
pmevcntr9_el0
pmevcntr10_el0
pmevcntr11_el0
pmevcntr12_el0
pmevcntr13_el0
pmevcntr14_el0
pmevcntr15_el0
pmevcntr16_el0
pmevcntr17_el0
pmevcntr18_el0
pmevcntr19_el0
pmevcntr20_el0
pmevcntr21_el0
pmevcntr22_el0
pmevcntr23_el0
pmevcntr24_el0
pmevcntr25_el0
pmevcntr26_el0
pmevcntr27_el0
pmevcntr28_el0
pmevcntr29_el0
pmevcntr30_el0
pmccfiltr_el0
pmevtyper0_el0
pmevtyper1_el0
pmevtyper2_el0
pmevtyper3_el0
pmevtyper4_el0
pmevtyper5_el0
pmevtyper6_el0
pmevtyper7_el0
pmevtyper8_el0
pmevtyper9_el0
pmevtyper10_el0
pmevtyper11_el0
pmevtyper12_el0
pmevtyper13_el0
pmevtyper14_el0
pmevtyper15_el0
pmevtyper16_el0
pmevtyper17_el0
pmevtyper18_el0
pmevtyper19_el0
pmevtyper20_el0
pmevtyper21_el0
pmevtyper22_el0
pmevtyper23_el0
pmevtyper24_el0
pmevtyper25_el0
pmevtyper26_el0
pmevtyper27_el0
pmevtyper28_el0
pmevtyper29_el0
pmevtyper30_el0
trcprgctlr
trcprocselr
trcconfigr
trcauxctlr
trceventctl0r
trceventctl1r
trcstallctlr
trctsctlr
trcsyncpr
trcccctlr
trcbbctlr
trctraceidr
trcqctlr
trcvictlr
trcviiectlr
trcvissctlr
trcvipcssctlr
trcvdctlr
trcvdsacctlr
trcvdarcctlr
trcseqevr0
trcseqevr1
trcseqevr2
trcseqrstevr
trcseqstr
trcextinselr
trccntrldvr0
trccntrldvr1
trccntrldvr2
trccntrldvr3
trccntctlr0
trccntctlr1
trccntctlr2
trccntctlr3
trccntvr0
trccntvr1
trccntvr2
trccntvr3
trcimspec0
trcimspec1
trcimspec2
trcimspec3
trcimspec4
trcimspec5
trcimspec6
trcimspec7
trcrsctlr2
trcrsctlr3
trcrsctlr4
trcrsctlr5
trcrsctlr6
trcrsctlr7
trcrsctlr8
trcrsctlr9
trcrsctlr10
trcrsctlr11
trcrsctlr12
trcrsctlr13
trcrsctlr14
trcrsctlr15
trcrsctlr16
trcrsctlr17
trcrsctlr18
trcrsctlr19
trcrsctlr20
trcrsctlr21
trcrsctlr22
trcrsctlr23
trcrsctlr24
trcrsctlr25
trcrsctlr26
trcrsctlr27
trcrsctlr28
trcrsctlr29
trcrsctlr30
trcrsctlr31
trcssccr0
trcssccr1
trcssccr2
trcssccr3
trcssccr4
trcssccr5
trcssccr6
trcssccr7
trcsscsr0
trcsscsr1
trcsscsr2
trcsscsr3
trcsscsr4
trcsscsr5
trcsscsr6
trcsscsr7
trcsspcicr0
trcsspcicr1
trcsspcicr2
trcsspcicr3
trcsspcicr4
trcsspcicr5
trcsspcicr6
trcsspcicr7
trcpdcr
trcacvr0
trcacvr1
trcacvr2
trcacvr3
trcacvr4
trcacvr5
trcacvr6
trcacvr7
trcacvr8
trcacvr9
trcacvr10
trcacvr11
trcacvr12
trcacvr13
trcacvr14
trcacvr15
trcacatr0
trcacatr1
trcacatr2
trcacatr3
trcacatr4
trcacatr5
trcacatr6
trcacatr7
trcacatr8
trcacatr9
trcacatr10
trcacatr11
trcacatr12
trcacatr13
trcacatr14
trcacatr15
trcdvcvr0
trcdvcvr1
trcdvcvr2
trcdvcvr3
trcdvcvr4
trcdvcvr5
trcdvcvr6
trcdvcvr7
trcdvcmr0
trcdvcmr1
trcdvcmr2
trcdvcmr3
trcdvcmr4
trcdvcmr5
trcdvcmr6
trcdvcmr7
trccidcvr0
trccidcvr1
trccidcvr2
trccidcvr3
trccidcvr4
trccidcvr5
trccidcvr6
trccidcvr7
trcvmidcvr0
trcvmidcvr1
trcvmidcvr2
trcvmidcvr3
trcvmidcvr4
trcvmidcvr5
trcvmidcvr6
trcvmidcvr7
trccidcctlr0
trccidcctlr1
trcvmidcctlr0
trcvmidcctlr1
trcitctrl
trcclaimset
trcclaimclr
icc_bpr1_el1
icc_bpr0_el1
icc_pmr_el1
icc_ctlr_el1
icc_ctlr_el3
icc_sre_el1
icc_sre_el2
icc_sre_el3
icc_igrpen0_el1
icc_igrpen1_el1
icc_igrpen1_el3
icc_seien_el1
icc_ap0r0_el1
icc_ap0r1_el1
icc_ap0r2_el1
icc_ap0r3_el1
icc_ap1r0_el1
icc_ap1r1_el1
icc_ap1r2_el1
icc_ap1r3_el1
ich_ap0r0_el2
ich_ap0r1_el2
ich_ap0r2_el2
ich_ap0r3_el2
ich_ap1r0_el2
ich_ap1r1_el2
ich_ap1r2_el2
ich_ap1r3_el2
ich_hcr_el2
ich_misr_el2
ich_vmcr_el2
ich_vseir_el2
ich_lr0_el2
ich_lr1_el2
ich_lr2_el2
ich_lr3_el2
ich_lr4_el2
ich_lr5_el2
ich_lr6_el2
ich_lr7_el2
ich_lr8_el2
ich_lr9_el2
ich_lr10_el2
ich_lr11_el2
ich_lr12_el2
ich_lr13_el2
ich_lr14_el2
ich_lr15_el2
cpm_ioacc_ctl_el3
^s([0-3])_([0-7])_c([0-9]|1[0-5])_c([0-9]|1[0-5])_([0-7])$
#&(%,$+'bcdefghiZ[\]^_`arstuvwxyz{|}~
RSTUVWXY
 !BCDEFGHI23456789:)
Read from 0x%llx to 0x%llx: length %zu
Instruction exceeds 15-byte limit
readPrefixes()
Redundant Group 1 prefix
Redundant Group 2 prefix
Redundant Group 3 prefix
Redundant Group 4 prefix
Found prefix 0x%hhx
Couldn't read second byte of EVEX prefix
Couldn't read third byte of EVEX prefix
Couldn't read fourth byte of EVEX prefix
Found EVEX prefix 0x%hhx 0x%hhx 0x%hhx 0x%hhx
Couldn't read second byte of VEX
Found VEX prefix 0x%hhx 0x%hhx 0x%hhx
Found VEX prefix 0x%hhx 0x%hhx
Couldn't read second byte of XOP
Found XOP prefix 0x%hhx 0x%hhx 0x%hhx
Redundant REX prefix
Found REX prefix 0x%hhx
readOpcode()
Unhandled mm field for instruction (0x%hhx)
Unhandled m-mmmm field for instruction (0x%hhx)
Found a two-byte escape prefix (0x%hhx)
Found a three-byte escape prefix (0x%hhx)
Didn't find a three-byte escape prefix
getID()
readModRM()
readDisplacement()
readSIB()
SIB-based addressing doesn't work in 16-bit mode
readOperands()
We currently don't hande code-offset encodings
Encountered an operand with an unknown encoding.
readVVVV()
fixupReg()
readImmediate()
readOpcodeRegister()
readMaskRegister()
asan-instrument-assembly
instrument assembly with AddressSanitizer checks
invalid register name
register %
 is only available in 64-bit mode
expected stack index
invalid stack index
lags
setb
setnb
vcmp
unord
eq_uq
neq_oq
eq_os
lt_oq
le_oq
unord_s
neq_us
nlt_uq
nle_uq
ord_s
eq_us
nge_uq
ngt_uq
false_os
neq_os
ge_oq
gt_oq
true_us
vcmpss
cmpss
vcmpsd
cmpsd
vcmpps
cmpps
vcmppd
cmppd
lock
repe
repz
repne
repnz
rex64
data16
outb
outw
outl
insb
insw
insl
insd
outs
outsb
outsw
outsl
outsd
lods
lodsb
lodsw
lodsl
lodsd
lodsq
stos
stosb
stosw
stosl
stosd
stosq
scas
scasb
scasw
scasl
scasd
scasq
cmps
cmpsb
cmpsw
cmpsl
cmpsq
mismatching source and destination index registers
movs
movsb
movsw
movsl
movsd
movsq
smov
smovb
smovw
smovl
smovd
smovq
int3
offset
OFFSET
length
LENGTH
size
SIZE
TYPE
Expected 'PTR' or 'ptr' token!
expected a positive immediate displacement before bracketed expr.
unable to lookup expression
BYTE
byte
WORD
word
DWORD
dword
QWORD
qword
XWORD
xword
XMMWORD
xmmword
YMMWORD
ymmword
ZMMWORD
zmmword
OPAQUE
unknown token in expression
Unexpected identifier!
invalid reference to undefined symbol
scale factor in address must be 1, 2, 4 or 8
Unexpected operator!
cannot use more than one symbol in memory operand
cannot use base register with variable reference
cannot use index register with variable reference
Expected '[' token!
Non-constant offsets are not supported!
Unable to lookup field reference!
Unexpected token type!
base register is 64-bit, but index register is not
base register is 32-bit, but index register is not
base register is 16-bit, but index register is not
invalid 16-bit base/index register combination
Expected ':' token!
%eiz and %riz can only be used as index registers
invalid segment register
eiz and riz can only be used as index registers
expected comma in scale expression
expected scale expression
scale factor in 16-bit address must be 1
scale factor without index register is ignored
unexpected token in memory operand
invalid 16-bit base register
16-bit memory operand may not include only index register
Expected 1to<NUM> at this point
{1to2}
{1to4}
{1to8}
to16
{1to16}
Invalid memory broadcast primitive.
Expected } at this point
Expected z at this point
.code
.att_syntax
noprefix
'.att_syntax noprefix' is not supported: registers must have a '%' prefix in .att_syntax
.intel_syntax
'.intel_syntax prefix' is not supported: registers must not have a '%' prefix in .intel_syntax
.code16
.code32
.code64
unknown directive 
adcb
adcl
adcq
adcw
adcx
adcxl
adcxq
addb
addl
addpd
addps
addq
addsd
addss
addsubpd
addsubps
addw
adox
adoxl
adoxq
aesdec
aesdeclast
aesenc
aesenclast
aesimc
aeskeygenassist
andb
andl
andn
andnl
andnpd
andnps
andnq
andpd
andps
andq
andw
arpl
bextr
bextrl
bextrq
blcfill
blci
blcic
blcmsk
blcs
blendpd
blendps
blendvpd
blendvps
blsfill
blsi
blsic
blsil
blsiq
blsmsk
blsmskl
blsmskq
blsr
blsrl
blsrq
bound
bsfl
bsfq
bsfw
bsrl
bsrq
bsrw
bswap
bswapl
bswapq
btcl
btcq
btcw
btrl
btrq
btrw
btsl
btsq
btsw
bzhi
bzhil
bzhiq
call
calll
callq
callw
cbtw
cdqe
clac
clflush
clgi
clrb
clrl
clrq
clrw
cltd
cltq
clts
cmova
cmovae
cmovael
cmovaeq
cmovaew
cmoval
cmovaq
cmovaw
cmovb
cmovbe
cmovbel
cmovbeq
cmovbew
cmovbl
cmovbq
cmovbw
cmove
cmovel
cmoveq
cmovew
cmovg
cmovge
cmovgel
cmovgeq
cmovgew
cmovgl
cmovgq
cmovgw
cmovl
cmovle
cmovlel
cmovleq
cmovlew
cmovll
cmovlq
cmovlw
cmovne
cmovnel
cmovneq
cmovnew
cmovno
cmovnol
cmovnoq
cmovnow
cmovnp
cmovnpl
cmovnpq
cmovnpw
cmovns
cmovnsl
cmovnsq
cmovnsw
cmovo
cmovol
cmovoq
cmovow
cmovp
cmovpl
cmovpq
cmovpw
cmovs
cmovsl
cmovsq
cmovsw
cmpb
cmpl
cmppd
cmpps
cmpq
cmpsb
cmpsd
cmpsl
cmpsq
cmpss
cmpsw
cmpw
cmpxchg
cmpxchg16b
cmpxchg8b
cmpxchgb
cmpxchgl
cmpxchgq
cmpxchgw
comisd
comiss
cpuid
cqto
crc32
crc32b
crc32l
crc32q
crc32w
cvtdq2pd
cvtdq2ps
cvtpd2dq
cvtpd2pi
cvtpd2ps
cvtpi2pd
cvtpi2ps
cvtps2dq
cvtps2pd
cvtps2pi
cvtsd2si
cvtsd2sil
cvtsd2siq
cvtsd2ss
cvtsi2sd
cvtsi2sdl
cvtsi2sdq
cvtsi2ss
cvtsi2ssl
cvtsi2ssq
cvtss2sd
cvtss2si
cvtss2sil
cvtss2siq
cvttpd2dq
cvttpd2pi
cvttps2dq
cvttps2pi
cvttsd2si
cvttsd2sil
cvttsd2siq
cvttss2si
cvttss2sil
cvttss2siq
cwde
cwtd
cwtl
data16
decb
decl
decq
decw
divb
divl
divpd
divps
divq
divsd
divss
divw
dppd
dpps
emms
encls
enclu
enter
extractps
extrq
f2xm1
fabs
fadd
faddl
faddp
fadds
fbld
fbstp
fchs
fcmovb
fcmovbe
fcmove
fcmovnb
fcmovnbe
fcmovne
fcmovnu
fcmovu
fcom
fcomi
fcoml
fcomp
fcompi
fcompl
fcompp
fcomps
fcoms
fcos
fdecstp
fdiv
fdivl
fdivp
fdivr
fdivrl
fdivrp
fdivrs
fdivs
femms
ffree
fiadd
fiaddl
fiadds
ficom
ficoml
ficomp
ficompl
ficomps
ficoms
fidiv
fidivl
fidivr
fidivrl
fidivrs
fidivs
fild
fildl
fildll
filds
fimul
fimull
fimuls
fincstp
fist
fistl
fistp
fistpl
fistpll
fistps
fists
fisttp
fisttpl
fisttpll
fisttps
fisub
fisubl
fisubr
fisubrl
fisubrs
fisubs
fld1
fldcw
fldenv
fldl
fldl2e
fldl2t
fldlg2
fldln2
fldpi
flds
fldt
fldz
fmul
fmull
fmulp
fmuls
fnclex
fninit
fnop
fnsave
fnstcw
fnstenv
fnstsw
fpatan
fprem
fprem1
fptan
frndint
frstor
fscale
fsin
fsincos
fsqrt
fstl
fstp
fstpl
fstps
fstpt
fsts
fsub
fsubl
fsubp
fsubr
fsubrl
fsubrp
fsubrs
fsubs
ftst
fucom
fucomi
fucomp
fucompi
fucompp
fxam
fxch
fxrstor
fxrstor64
fxrstorq
fxsave
fxsave64
fxsaveq
fxtract
fyl2x
fyl2xp1
haddpd
haddps
hsubpd
hsubps
idiv
idivb
idivl
idivq
idivw
imul
imulb
imull
imulq
imulw
incb
incl
incq
incw
insb
insd
insertps
insertq
insl
insw
int3
into
invd
invept
invlpg
invlpga
invpcid
invvpid
iret
iretd
iretl
iretq
iretw
jcxz
jecxz
jmpl
jmpq
jmpw
jrcxz
kandb
kandd
kandnb
kandnd
kandnq
kandnw
kandq
kandw
kmovb
kmovd
kmovq
kmovw
knotb
knotd
knotq
knotw
korb
kord
korq
kortestw
korw
kshiftlw
kshiftrw
kunpckbw
kxnorb
kxnord
kxnorq
kxnorw
kxorb
kxord
kxorq
kxorw
lahf
larl
larq
larw
lcall
lcalll
lcallq
lcallw
lddqu
ldmxcsr
ldsl
ldsw
leal
leaq
leave
leaw
lesl
lesw
lfence
lfsl
lfsq
lfsw
lgdt
lgdtl
lgdtq
lgdtw
lgsl
lgsq
lgsw
lidt
lidtl
lidtq
lidtw
ljmp
ljmpl
ljmpq
ljmpw
lldt
lldtw
lmsw
lmsww
lock
lods
lodsb
lodsd
lodsl
lodsq
lodsw
loop
loope
loopne
lretl
lretq
lretw
lsll
lslq
lslw
lssl
lssq
lssw
ltrw
lzcnt
lzcntl
lzcntq
lzcntw
maskmovdqu
maskmovq
maxpd
maxps
maxsd
maxss
mfence
minpd
minps
minsd
minss
monitor
montmul
movabs
movabsb
movabsl
movabsq
movabsw
movapd
movaps
movb
movbe
movbel
movbeq
movbew
movd
movddup
movdq2q
movdqa
movdqu
movhlps
movhpd
movhps
movl
movlhps
movlpd
movlps
movmskpd
movmskps
movntdq
movntdqa
movnti
movntil
movntiq
movntpd
movntps
movntq
movntsd
movntss
movq
movq2dq
movsb
movsbl
movsbq
movsbw
movsd
movshdup
movsl
movsldup
movslq
movsq
movss
movsw
movswl
movswq
movsx
movsxd
movupd
movups
movw
movzbl
movzbq
movzbw
movzwl
movzwq
movzx
mpsadbw
mulb
mull
mulpd
mulps
mulq
mulsd
mulss
mulw
mulx
mulxl
mulxq
mwait
negb
negl
negq
negw
nopl
nopw
notb
notl
notq
notw
orpd
orps
outb
outl
outsb
outsd
outsl
outsw
outw
pabsb
pabsd
pabsw
packssdw
packsswb
packusdw
packuswb
paddb
paddd
paddq
paddsb
paddsw
paddusb
paddusw
paddw
palignr
pand
pandn
pause
pavgb
pavgusb
pavgw
pblendvb
pblendwpclmulhqhqdqpclmulhqlqdqpclmullqhqdqpclmullqlqdq
pclmulqdq
pcmpeqb
pcmpeqd
pcmpeqq
pcmpeqw
pcmpestri
pcmpestrm
pcmpgtb
pcmpgtd
pcmpgtq
pcmpgtw
pcmpistri
pcmpistrm
pdep
pdepl
pdepq
pext
pextl
pextq
pextrb
pextrd
pextrq
pextrw
pf2id
pf2iw
pfacc
pfadd
pfcmpeq
pfcmpge
pfcmpgt
pfmax
pfmin
pfmul
pfnacc
pfpnacc
pfrcp
pfrcpit1
pfrcpit2
pfrsqit1
pfrsqrt
pfsub
pfsubr
phaddd
phaddsw
phaddw
phminposuw
phsubd
phsubsw
phsubw
pi2fd
pi2fw
pinsrb
pinsrd
pinsrq
pinsrw
pmaddubsw
pmaddwd
pmaxsb
pmaxsd
pmaxsw
pmaxub
pmaxud
pmaxuw
pminsb
pminsd
pminsw
pminub
pminud
pminuw
pmovmskb
pmovsxbd
pmovsxbq
pmovsxbw
pmovsxdq
pmovsxwd
pmovsxwq
pmovzxbd
pmovzxbq
pmovzxbw
pmovzxdq
pmovzxwd
pmovzxwq
pmuldq
pmulhrsw
pmulhrw
pmulhuw
pmulhw
pmulld
pmullw
pmuludq
popal
popaw
popcnt
popcntl
popcntq
popcntw
popf
popfd
popfl
popfq
popfw
popl
popq
popw
prefetch
prefetchnta
prefetcht0
prefetcht1
prefetcht2
prefetchw
psadbw
pshufb
pshufd
pshufhw
pshuflw
pshufw
psignb
psignd
psignw
pslld
pslldq
psllq
psllw
psrad
psraw
psrld
psrldq
psrlq
psrlw
psubb
psubd
psubq
psubsb
psubsw
psubusb
psubusw
psubw
pswapd
ptest
punpckhbw
punpckhdq
punpckhqdq
punpckhwd
punpcklbw
punpckldq
punpcklqdq
punpcklwd
push
pushal
pushaw
pushf
pushfd
pushfl
pushfq
pushfw
pushl
pushq
pushw
pxor
rclb
rcll
rclq
rclw
rcpps
rcpss
rcrb
rcrl
rcrq
rcrw
rdfsbase
rdfsbasel
rdfsbaseq
rdgsbase
rdgsbasel
rdgsbaseq
rdmsr
rdpmc
rdrand
rdrandl
rdrandq
rdrandw
rdseed
rdseedl
rdseedq
rdseedw
rdtsc
rdtscp
repne
retf
retfq
retl
retq
retw
rex64
rolb
roll
rolq
rolw
rorb
rorl
rorq
rorw
rorx
rorxl
rorxq
roundpd
roundps
roundsd
roundss
rsqrtps
rsqrtss
sahf
sarb
sarl
sarq
sarw
sarx
sarxl
sarxq
sbbb
sbbl
sbbq
sbbw
scas
scasb
scasd
scasl
scasq
scasw
seta
setae
setb
setbe
sete
setg
setge
setl
setle
setne
setno
setnp
setns
seto
setp
sets
sfence
sgdt
sgdtl
sgdtq
sgdtw
sha1msg1
sha1msg2
sha1nexte
sha1rnds4
sha256msg1
sha256msg2
sha256rnds2
shlb
shld
shldl
shldq
shldw
shll
shlq
shlw
shlx
shlxl
shlxq
shrb
shrd
shrdl
shrdq
shrdw
shrl
shrq
shrw
shrx
shrxl
shrxq
shufpd
shufps
sidt
sidtl
sidtq
sidtw
skinit
sldt
sldtl
sldtq
sldtw
smsw
smswl
smswq
smsww
sqrtpd
sqrtps
sqrtsd
sqrtss
stac
stgi
stmxcsr
stos
stosb
stosd
stosl
stosq
stosw
strl
strq
strw
subb
subl
subpd
subps
subq
subsd
subss
subw
swapgs
syscall
sysenter
sysexit
sysexitl
sysexitq
sysret
sysretl
sysretq
t1mskc
test
testb
testl
testq
testw
tzcnt
tzcntl
tzcntq
tzcntw
tzmsk
ucomisd
ucomiss
ud2b
unpckhpd
unpckhps
unpcklpd
unpcklps
vaddpd
vaddps
vaddsd
vaddss
vaddsubpd
vaddsubps
vaesdec
vaesdeclast
vaesenc
vaesenclast
vaesimc
vaeskeygenassist
valignd
valignq
vandnpd
vandnps
vandpd
vandps
vblendmpd
vblendmps
vblendpd
vblendps
vblendvpd
vblendvps
vbroadcastf128
vbroadcasti128
vbroadcasti32x4
vbroadcasti64x4vbroadcastsdvbroadcastss
vcmp
vcmppd
vcmpps
vcmpsd
vcmpss
vcomisd
vcomiss
vcvtdq2pd
vcvtdq2ps
vcvtpd2dq
vcvtpd2dqx
vcvtpd2dqy
vcvtpd2ps
vcvtpd2psx
vcvtpd2psy
vcvtpd2udq
vcvtph2ps
vcvtps2dq
vcvtps2pd
vcvtps2ph
vcvtps2udq
vcvtsd2si
vcvtsd2sil
vcvtsd2siq
vcvtsd2ss
vcvtsd2usi
vcvtsi2sd
vcvtsi2sdl
vcvtsi2sdq
vcvtsi2ss
vcvtsi2ssl
vcvtsi2ssq
vcvtss2sd
vcvtss2si
vcvtss2sil
vcvtss2siq
vcvtss2usi
vcvttpd2dq
vcvttpd2dqx
vcvttpd2dqy
vcvttpd2udq
vcvttps2dq
vcvttps2udq
vcvttsd2si
vcvttsd2sil
vcvttsd2siq
vcvttsd2usi
vcvttss2si
vcvttss2sil
vcvttss2siq
vcvttss2usi
vcvtudq2pd
vcvtudq2ps
vcvtusi2sd
vcvtusi2sdl
vcvtusi2sdq
vcvtusi2ss
vcvtusi2ssl
vcvtusi2ssq
vdivpd
vdivps
vdivsd
vdivss
vdppd
vdpps
verr
verwvextractf128
vextractf32x4
vextractf64x4vextracti128
vextracti32x4
vextracti64x4
vextractps
vfmadd132pd
vfmadd132ps
vfmadd132sd
vfmadd132ss
vfmadd213pd
vfmadd213ps
vfmadd213sd
vfmadd213ss
vfmadd231pd
vfmadd231ps
vfmadd231sd
vfmadd231ss
vfmaddpd
vfmaddps
vfmaddsd
vfmaddss
vfmaddsub132pd
vfmaddsub132ps
vfmaddsub213pd
vfmaddsub213ps
vfmaddsub231pd
vfmaddsub231ps
vfmaddsubpd
vfmaddsubps
vfmsub132pd
vfmsub132ps
vfmsub132sd
vfmsub132ss
vfmsub213pd
vfmsub213ps
vfmsub213sd
vfmsub213ss
vfmsub231pd
vfmsub231ps
vfmsub231sd
vfmsub231ss
vfmsubadd132pd
vfmsubadd132ps
vfmsubadd213pd
vfmsubadd213ps
vfmsubadd231pd
vfmsubadd231ps
vfmsubaddpd
vfmsubaddps
vfmsubpd
vfmsubps
vfmsubsd
vfmsubssvfnmadd132pdvfnmadd132psvfnmadd132sdvfnmadd132ssvfnmadd213pdvfnmadd213psvfnmadd213sdvfnmadd213ssvfnmadd231pdvfnmadd231psvfnmadd231sdvfnmadd231ss
vfnmaddpd
vfnmaddps
vfnmaddsd
vfnmaddssvfnmsub132pdvfnmsub132psvfnmsub132sdvfnmsub132ssvfnmsub213pdvfnmsub213psvfnmsub213sdvfnmsub213ssvfnmsub231pdvfnmsub231psvfnmsub231sdvfnmsub231ss
vfnmsubpd
vfnmsubps
vfnmsubsd
vfnmsubss
vfrczpd
vfrczps
vfrczsd
vfrczss
vgatherdpd
vgatherdps
vgatherpf0dpd
vgatherpf0dps
vgatherpf0qpd
vgatherpf0qps
vgatherpf1dpd
vgatherpf1dps
vgatherpf1qpd
vgatherpf1qps
vgatherqpd
vgatherqps
vhaddpd
vhaddps
vhsubpd
vhsubps
vinsertf128vinsertf32x4vinsertf64x4
vinserti128vinserti32x4vinserti64x4
vinsertps
vlddqu
vldmxcsr
vmaskmovdqu
vmaskmovpd
vmaskmovps
vmaxpd
vmaxps
vmaxsd
vmaxss
vmcall
vmclear
vmfunc
vminpd
vminps
vminsd
vminss
vmlaunch
vmload
vmmcall
vmovapd
vmovaps
vmovd
vmovddup
vmovdqa
vmovdqa32
vmovdqa64
vmovdqu
vmovdqu16
vmovdqu32
vmovdqu64
vmovdqu8
vmovhlps
vmovhpd
vmovhps
vmovlhps
vmovlpd
vmovlps
vmovmskpd
vmovmskps
vmovntdq
vmovntdqa
vmovntpd
vmovntps
vmovq
vmovsd
vmovshdup
vmovsldup
vmovss
vmovupd
vmovups
vmpsadbw
vmptrld
vmptrst
vmread
vmreadl
vmreadq
vmresume
vmrun
vmsave
vmulpd
vmulps
vmulsd
vmulss
vmwrite
vmwritel
vmwriteq
vmxoff
vmxon
vorpd
vorps
vpabsb
vpabsd
vpabsq
vpabsw
vpackssdw
vpacksswb
vpackusdw
vpackuswb
vpaddb
vpaddd
vpaddq
vpaddsb
vpaddsw
vpaddusb
vpaddusw
vpaddw
vpalignr
vpand
vpandd
vpandn
vpandnd
vpandnq
vpandq
vpavgb
vpavgw
vpblendd
vpblendmd
vpblendmq
vpblendvb
vpblendwvpbroadcastbvpbroadcastd
vpbroadcastmb2q
vpbroadcastmw2dvpbroadcastqvpbroadcastw
vpclmulhqhqdq
vpclmulhqlqdq
vpclmullqhqdq
vpclmullqlqdq
vpclmulqdq
vpcmov
vpcmp
vpcmpd
vpcmpeqb
vpcmpeqd
vpcmpeqq
vpcmpeqw
vpcmpestri
vpcmpestrm
vpcmpgtb
vpcmpgtd
vpcmpgtq
vpcmpgtw
vpcmpistri
vpcmpistrm
vpcmpq
vpcmpud
vpcmpuq
vpcomb
vpcomd
vpcomq
vpcomub
vpcomud
vpcomuq
vpcomuw
vpcomw
vpconflictd
vpconflictq
vperm2f128
vperm2i128
vpermd
vpermi2d
vpermi2pd
vpermi2ps
vpermi2q
vpermil2pd
vpermil2ps
vpermilpd
vpermilps
vpermpd
vpermps
vpermq
vpermt2d
vpermt2pd
vpermt2ps
vpermt2q
vpextrb
vpextrd
vpextrq
vpextrw
vpgatherdd
vpgatherdq
vpgatherqd
vpgatherqq
vphaddbd
vphaddbq
vphaddbw
vphaddd
vphadddq
vphaddsw
vphaddubd
vphaddubq
vphaddubw
vphaddudq
vphadduwd
vphadduwq
vphaddw
vphaddwd
vphaddwq
vphminposuw
vphsubbw
vphsubd
vphsubdq
vphsubsw
vphsubw
vphsubwd
vpinsrb
vpinsrd
vpinsrq
vpinsrw
vplzcntd
vplzcntq
vpmacsdd
vpmacsdqh
vpmacsdql
vpmacssdd
vpmacssdqh
vpmacssdql
vpmacsswd
vpmacssww
vpmacswd
vpmacsww
vpmadcsswd
vpmadcswd
vpmaddubsw
vpmaddwd
vpmaskmovd
vpmaskmovq
vpmaxsb
vpmaxsd
vpmaxsq
vpmaxsw
vpmaxub
vpmaxud
vpmaxuq
vpmaxuw
vpminsb
vpminsd
vpminsq
vpminsw
vpminub
vpminud
vpminuq
vpminuw
vpmovdb
vpmovdw
vpmovmskb
vpmovqb
vpmovqd
vpmovqw
vpmovsdb
vpmovsdw
vpmovsqb
vpmovsqd
vpmovsqw
vpmovsxbd
vpmovsxbq
vpmovsxbw
vpmovsxdq
vpmovsxwd
vpmovsxwq
vpmovusdb
vpmovusdw
vpmovusqb
vpmovusqd
vpmovusqw
vpmovzxbd
vpmovzxbq
vpmovzxbw
vpmovzxdq
vpmovzxwd
vpmovzxwq
vpmuldq
vpmulhrsw
vpmulhuw
vpmulhw
vpmulld
vpmullw
vpmuludq
vpor
vpord
vporq
vpperm
vprotb
vprotd
vprotq
vprotw
vpsadbw
vpscatterdd
vpscatterdq
vpscatterqd
vpscatterqq
vpshab
vpshad
vpshaq
vpshaw
vpshlb
vpshld
vpshlq
vpshlw
vpshufb
vpshufd
vpshufhw
vpshuflw
vpsignb
vpsignd
vpsignw
vpslld
vpslldq
vpsllq
vpsllvd
vpsllvq
vpsllw
vpsrad
vpsraq
vpsravd
vpsravq
vpsraw
vpsrld
vpsrldq
vpsrlq
vpsrlvd
vpsrlvq
vpsrlw
vpsubb
vpsubd
vpsubq
vpsubsb
vpsubsw
vpsubusb
vpsubusw
vpsubw
vptest
vptestmd
vptestmq
vptestnmd
vptestnmq
vpunpckhbw
vpunpckhdq
vpunpckhqdq
vpunpckhwd
vpunpcklbw
vpunpckldq
vpunpcklqdq
vpunpcklwd
vpxor
vpxord
vpxorq
vrcp14pd
vrcp14ps
vrcp14sd
vrcp14ss
vrcp28pd
vrcp28ps
vrcp28sd
vrcp28ss
vrcpps
vrcpss
vrndscalepd
vrndscaleps
vrndscalesd
vrndscaless
vroundpd
vroundps
vroundsd
vroundss
vrsqrt14pd
vrsqrt14ps
vrsqrt14sd
vrsqrt14ss
vrsqrt28pd
vrsqrt28ps
vrsqrt28sd
vrsqrt28ss
vrsqrtps
vrsqrtss
vscatterdpd
vscatterdps
vscatterpf0dpd
vscatterpf0dps
vscatterpf0qpd
vscatterpf0qps
vscatterpf1dpd
vscatterpf1dps
vscatterpf1qpd
vscatterpf1qps
vscatterqpd
vscatterqps
vshufpd
vshufps
vsqrtpd
vsqrtps
vsqrtsd
vsqrtss
vstmxcsr
vsubpd
vsubps
vsubsd
vsubss
vtestpd
vtestps
vucomisd
vucomiss
vunpckhpd
vunpckhps
vunpcklpd
vunpcklps
vxorpd
vxorps
vzeroall
vzeroupper
wait
wbinvd
wrfsbase
wrfsbasel
wrfsbaseq
wrgsbase
wrgsbasel
wrgsbaseq
wrmsr
xabort
xacquire
xadd
xaddb
xaddl
xaddq
xaddw
xbegin
xchg
xchgb
xchgl
xchgq
xchgw
xcryptcbc
xcryptcfb
xcryptctr
xcryptecb
xcryptofb
xend
xgetbv
xlatb
xorb
xorl
xorpd
xorps
xorq
xorw
xrelease
xrstor
xrstor64
xrstorq
xsave
xsave64
xsaveopt
xsaveopt64
xsaveoptq
xsaveq
xsetbv
xsha1
xsha256
xstore
xstorerng
xtest
finit
fninit
fsave
fnsave
fstcw
fnstcw
fstcww
fstenv
fnstenv
fstsw
fnstsw
fstsww
fclex
fnclex
ambiguous instructions require an explicit suffix (could be 
invalid instruction mnemonic '
unknown use of instruction mnemonic without a size suffix
cbtw
cltd
cqto
cwtd
popw
popl
popq
retw
retl
retq
callw
calll
callq
cltq
cwtl
iretw
iretl
lgdtw
lgdtl
lgdtq
lidtw
lidtl
lidtq
lretw
lretl
popaw
popal
popfw
popfl
popfq
pushw
pushl
pushq
shlb
shll
shlq
shlw
sgdtw
sgdtl
sgdtq
sidtw
sidtl
sidtq
fildll
wait
oopz
loope
pushaw
pushal
pushfw
pushfl
pushfq
epnz
errw
verr
cmovbl
cmovbq
cmovbw
cmovel
cmoveq
cmovew
fcmovnbe
fcmove
fcompi
stpq
fistpll
dcww
fldcw
leave
opnz
loopne
ushfd
ysret
sysretl
cmovbel
cmovbeq
cmovbew
cmovael
cmovaeq
cmovaew
cmovlel
cmovleq
cmovlew
cmovgel
cmovgeq
cmovgew
cmovnel
cmovneq
cmovnew
cmovpl
cmovpq
cmovpw
cmovnpl
cmovnpq
cmovnpw
fcmovnb
fcmovbe
sttpq
fisttpll
comip
fucompi
ysexit
sysexitl
movn
cmoval
cmovaq
cmovaw
cmovll
cmovlq
cmovlw
cmovgl
cmovgq
cmovgw
cmovnae
fcmovb
popa
cmovb
cmove
cmovbe
cmovae
cmovle
cmovge
cmovne
cmovp
cmovnp
ushad
cmovn
cmova
cmovl
cmovg
sete
setbe
setae
setle
setge
setne
setp
setnp
setn
seta
setl
setg
{sae}
AVX-512 ISA
AVX-512 VLX ISA
Not 64-bit mode
64-bit mode
16-bit mode
Not 16-bit mode
32-bit mode
(%rip)
no-rip
@feat.00
 /EXPORT:
 -export:
,DATA
,data
__IMPORT
_fltused
__fltused
$stub
$non_lazy_ptr
__imp_
 + [.-
@TLSGD
@TLSLD
@TLSLDM
@GOTTPOFF
@INDNTPOFF
@TPOFF
@DTPOFF
@NTPOFF
@GOTNTPOFF
@GOTPCREL
@GOT
@GOTOFF
@PLT
@TLVP
@SECREL32
subreg
X86 Assembly / Object Emitter
atomicrmw.end
atomicrmw.start
loaded
newloaded
success
X86 Machine Code Emitter
JIT does not support inline asm!
SSE register return with SSE disabled
X86 FP Stackifier
Stack overflow!
Access past stack top!
Cannot pop empty stack!
Stack empty??
Stack cannot be empty!
fixed input regs must be last on the x87 stack
output regs must be last on the x87 stack
clobbers must be last on the x87 stack
implicitly popped regs must be last on the x87 stack
_ftol2
___chkstk_ms
__chkstk
_alloca
_chkstk
Segmented stacks do not support vararg functions.
Segmented stacks not supported on this platform.
Segmented stacks not supported on FreeBSD i386.
__morestack
erlang.
bif_
inc_stack_0
Segmented stacks does not support fastcall with nested function.
X86 DAG->DAG Instruction Selection
x86-experimental-vector-widening-legalization
Enable an experimental vector type legalization through widening rather than promotion.
x86-experimental-vector-shuffle-lowering
Enable an experimental vector shuffle lowering code path.
_alldiv
_aulldiv
_allrem
_aullrem
_allmul
sincosf
sincos
SSE2 register return with SSE2 disabled
cannot use inalloca attribute on a register parameter
any parameter with the inalloca attribute must be the only memory argument
_tls_array
_tls_index
Cannot use segmented stacks with functions that have nested arguments.
Nest register in use - reduce number of inreg parameters!
X86ISD::BSF
X86ISD::BSR
X86ISD::SHLD
X86ISD::SHRD
X86ISD::FAND
X86ISD::FANDN
X86ISD::FOR
X86ISD::FXOR
X86ISD::FSRL
X86ISD::FILD
X86ISD::FILD_FLAG
X86ISD::FP_TO_INT16_IN_MEM
X86ISD::FP_TO_INT32_IN_MEM
X86ISD::FP_TO_INT64_IN_MEM
X86ISD::FLD
X86ISD::FST
X86ISD::CALL
X86ISD::RDTSC_DAG
X86ISD::RDTSCP_DAG
X86ISD::RDPMC_DAG
X86ISD::BT
X86ISD::CMP
X86ISD::COMI
X86ISD::UCOMI
X86ISD::CMPM
X86ISD::CMPMU
X86ISD::SETCC
X86ISD::SETCC_CARRY
X86ISD::FSETCC
X86ISD::CMOV
X86ISD::BRCOND
X86ISD::RET_FLAG
X86ISD::REP_STOS
X86ISD::REP_MOVS
X86ISD::GlobalBaseReg
X86ISD::Wrapper
X86ISD::WrapperRIP
X86ISD::PEXTRB
X86ISD::PEXTRW
X86ISD::INSERTPS
X86ISD::PINSRB
X86ISD::PINSRW
X86ISD::PSHUFB
X86ISD::ANDNP
X86ISD::PSIGN
X86ISD::BLENDV
X86ISD::BLENDI
X86ISD::SUBUS
X86ISD::HADD
X86ISD::HSUB
X86ISD::FHADD
X86ISD::FHSUB
X86ISD::UMAX
X86ISD::UMIN
X86ISD::SMAX
X86ISD::SMIN
X86ISD::FMAX
X86ISD::FMIN
X86ISD::FMAXC
X86ISD::FMINC
X86ISD::FRSQRT
X86ISD::FRCP
X86ISD::TLSADDR
X86ISD::TLSBASEADDR
X86ISD::TLSCALL
X86ISD::EH_SJLJ_SETJMP
X86ISD::EH_SJLJ_LONGJMP
X86ISD::EH_RETURN
X86ISD::TC_RETURN
X86ISD::FNSTCW16m
X86ISD::FNSTSW16r
X86ISD::LCMPXCHG_DAG
X86ISD::LCMPXCHG8_DAG
X86ISD::LCMPXCHG16_DAG
X86ISD::VZEXT_MOVL
X86ISD::VZEXT_LOAD
X86ISD::VZEXT
X86ISD::VSEXT
X86ISD::VTRUNC
X86ISD::VTRUNCM
X86ISD::VINSERT
X86ISD::VFPEXT
X86ISD::VFPROUND
X86ISD::VSHLDQ
X86ISD::VSRLDQ
X86ISD::VSHL
X86ISD::VSRL
X86ISD::VSRA
X86ISD::VSHLI
X86ISD::VSRLI
X86ISD::VSRAI
X86ISD::CMPP
X86ISD::PCMPEQ
X86ISD::PCMPGT
X86ISD::PCMPEQM
X86ISD::PCMPGTM
X86ISD::ADD
X86ISD::SUB
X86ISD::ADC
X86ISD::SBB
X86ISD::SMUL
X86ISD::UMUL
X86ISD::INC
X86ISD::DEC
X86ISD::OR
X86ISD::XOR
X86ISD::AND
X86ISD::BEXTR
X86ISD::MUL_IMM
X86ISD::PTEST
X86ISD::TESTP
X86ISD::TESTM
X86ISD::TESTNM
X86ISD::KORTEST
X86ISD::PACKSS
X86ISD::PACKUS
X86ISD::PALIGNR
X86ISD::VALIGN
X86ISD::PSHUFD
X86ISD::PSHUFHW
X86ISD::PSHUFLW
X86ISD::SHUFP
X86ISD::MOVLHPS
X86ISD::MOVLHPD
X86ISD::MOVHLPS
X86ISD::MOVLPS
X86ISD::MOVLPD
X86ISD::MOVDDUP
X86ISD::MOVSHDUP
X86ISD::MOVSLDUP
X86ISD::MOVSD
X86ISD::MOVSS
X86ISD::UNPCKL
X86ISD::UNPCKH
X86ISD::VBROADCAST
X86ISD::VBROADCASTM
X86ISD::VEXTRACT
X86ISD::VPERMILP
X86ISD::VPERM2X128
X86ISD::VPERMV
X86ISD::VPERMV3
X86ISD::VPERMIV3
X86ISD::VPERMI
X86ISD::PMULUDQ
X86ISD::PMULDQ
X86ISD::VASTART_SAVE_XMM_REGS
X86ISD::VAARG_64
X86ISD::WIN_ALLOCA
X86ISD::MEMBARRIER
X86ISD::SEG_ALLOCA
X86ISD::WIN_FTOL
X86ISD::SAHF
X86ISD::RDRAND
X86ISD::RDSEED
X86ISD::FMADD
X86ISD::FMSUB
X86ISD::FNMADD
X86ISD::FNMSUB
X86ISD::FMADDSUB
X86ISD::FMSUBADD
X86ISD::PCMPESTRI
X86ISD::PCMPISTRI
X86ISD::XTEST
__morestack_allocate_stack_space
___chkstk
bswap
bswapl
bswapq
${0:q}
=r,0,
rorw
$$8,
${0:w}
rolw
rorl
$$16,
%eax
%edx
xchgl
%eax,
{st}
{flags}
~{cc}
~{flags}
~{fpsr}
~{dirflag}
disable-spill-fusing
Disable fusing of spill code into instructions
print-failed-fuse-candidates
Print instructions that the allocator wants to fuse, but the X86 backend currently can't
remat-pic-stub-load
Re-materialize load from stub in PIC mode
We failed to fuse operand 
 in 
X86 PIC Global Base Reg Initialization
_GLOBAL_OFFSET_TABLE_
MEMBARRIER
eh_return, addr: %
TAILCALL
zero
__tls_get_addr
___tls_get_addr
X86 Atom pad short functions
GR8_ABCD_H
GR8_ABCD_L
SEGMENT_REG
RFP32
GR8_NOREX
DEBUG_REG
VR64
GR8_NOREX+GR64_NOREX_and_GR64_TC
GR8_NOREX+GR64_TCW64
FR32
CONTROL_REG
GR64_NOREX
GR8_NOREX+GR64_TC
GR8+GR64_TCW64
GR64_NOREX+GR64_TC
GR8+GR64_NOREX
GR8+GR64_TC
FR32X
GR64
force-align-stack
Force align the stack to the minimum alignment needed for the function.
x86-use-base-pointer
Enable use of a base pointer for complex stack frames
Stack realignment in presence of dynamic allocas is not supported withthis calling convention.
no-realign-stack
sub_8bit
sub_8bit_hi
sub_16bit
sub_32bit
sub_xmm
sub_ymm
x86-early-ifcvt
Enable early if-conversion on X86
__bzero
target-cpu
target-features
+64bit,+sse2,
+64bit,+sse2
-p:32:32
-i64:64
-f64:32:64
-f80:128
-f80:32
-n8:16:32:64
-n8:16:32
-S32
-S128
x86-use-vzeroupper
Minimize AVX to SSE transition penalty
__ImageBase
__xmm@
__ymm@
.rdata
X86 Target Transform Info
x86tti
X86 vzeroupper inserter
X86 LEA Fixup
combiner-alias-analysis
Enable DAG combiner alias-analysis heuristics
combiner-global-alias-analysis
Enable DAG combiner's use of IR alias analysis
combiner-use-tbaa
Enable DAG combiner's use of TBAA
combiner-stress-load-slicing
Bypass the profitability model of load slicing
combiner-split-load-index
DAG combiner may split indexing from loads
nontemporal
invariant.load
__sync_synchronize
abort
enable-legalize-types-checking
Unprocessed value in a map!
Value with legal type was transformed!
Processed value not in any map!
Value in multiple maps!
 ReplacedValues
 PromotedIntegers
 SoftenedFloats
 ScalarizedVectors
 ExpandedIntegers
 ExpandedFloats
 SplitVectors
 WidenedVectors
Do not know how to scalarize the result of this operator!
Do not know how to split the result of this operator!
Do not know how to split this operator's operand!
disable-dfa-sched
Disable use of DFA during scheduling
dfa-sched-reg-pressure-threshold
Track reg pressure and switch priority to in-depth
Fast suboptimal list scheduling
linearize
Linearize DAG, no scheduling
Can't handle live physical register dependency!
list-burr
Bottom-up register reduction list scheduling
source
Similar to list-burr but schedules in source order when possible
list-hybrid
Bottom-up register pressure aware list scheduling which tries to balance latency and register pressure
list-ilp
Bottom-up register pressure aware list scheduling which tries to balance ILP and register pressure
disable-sched-cycles
Disable cycle-level precision during preRA scheduling
disable-sched-reg-pressure
Disable regpressure priority in sched=list-ilp
disable-sched-live-uses
Disable live use priority in sched=list-ilp
disable-sched-vrcycle
Disable virtual register cycle interference checks
disable-sched-physreg-join
Disable physreg def-use affinity
disable-sched-stalls
Disable no-stall priority in sched=list-ilp
disable-sched-critical-path
Disable critical path priority in sched=list-ilp
disable-sched-height
Disable scheduled-height priority in sched=list-ilp
disable-2addr-hack
Disable scheduler's two-address hack
max-sched-reorder
Number of instructions to allow ahead of the critical path in sched=list-ilp
sched-avg-ipc
Average inst/cycle whan no target itinerary exists.
sched-high-latency-cycles
Roughly estimate the number of cycles that 'long latency'instructions take for targets with no itinerary
sunit-dag.
limit-float-precision
Generate low-precision inline sequences for some float libcalls
Cannot generate unaligned atomic load
Cannot generate unaligned atomic store
_setjmp
_longjmp
Unsupported asm: input constraint with a matching output constraint of incompatible type!
srcloc
couldn't allocate output register for constraint '
inline asm not supported yet: don't know how to handle tied indirect register inputs
inline asm error: This value type register class is not natively supported!
invalid operand for inline asm constraint '
Don't know how to handle indirect register inputs yet for constraint '
couldn't allocate input reg for constraint '
scalar-to-vector conversion failed
, possible invalid constraint for vector type
Indirect operand for inline asm not a pointer!
non-trivial scalar-to-vector conversion
<<Unknown DAG Node>>
<<Unknown Machine Node #
<<Unknown Target Node #
<<Unknown Node #
AtomicFence
AtomicCmpSwap
AtomicCmpSwapWithSuccess
AtomicSwap
AtomicLoadAdd
AtomicLoadSub
AtomicLoadAnd
AtomicLoadOr
AtomicLoadXor
AtomicLoadNand
AtomicLoadMin
AtomicLoadMax
AtomicLoadUMin
AtomicLoadUMax
AtomicLoad
AtomicStore
ReadCycleCounter
MDNode
EntryToken
TokenFactor
AssertSext
AssertZext
BasicBlock
ValueType
RegisterMask
OpaqueConstant
ConstantFP
GlobalAddress
GlobalTLSAddress
FrameIndex
JumpTable
GLOBAL_OFFSET_TABLE
RETURNADDR
FRAMEADDR
READ_REGISTER
WRITE_REGISTER
FRAME_TO_ARGS_OFFSET
EH_RETURN
EH_SJLJ_SETJMP
EH_SJLJ_LONGJMP
ConstantPool
TargetIndex
ExternalSymbol
BlockAddress
BUILD_VECTOR
OpaqueTargetConstant
TargetConstant
TargetConstantFP
TargetGlobalAddress
TargetGlobalTLSAddress
TargetFrameIndex
TargetJumpTable
TargetConstantPool
TargetExternalSymbol
TargetBlockAddress
CopyToReg
CopyFromReg
merge_values
inlineasm
handlenode
fsqrt
fsincos
ftrunc
ffloor
fceil
frint
fnearbyint
fround
fexp2
flog2
flog10
mulhu
mulhs
smul_lohi
umul_lohi
sdivrem
udivrem
fcopysign
fpowi
setcc
vselect
select_cc
insert_vector_elt
extract_vector_elt
concat_vectors
insert_subvector
extract_subvector
scalar_to_vector
vector_shuffle
carry_false
saddo
uaddo
ssubo
usubo
smulo
umulo
shl_parts
sra_parts
srl_parts
sign_extend
zero_extend
any_extend
sign_extend_inreg
any_extend_vector_inreg
sign_extend_vector_inreg
zero_extend_vector_inreg
flt_rounds
fp_round_inreg
fp_extend
sint_to_fp
uint_to_fp
fp_to_sint
fp_to_uint
fp16_to_fp
fp_to_fp16
cvt_ff
cvt_fs
cvt_fu
cvt_sf
cvt_uf
cvt_ss
cvt_su
cvt_us
cvt_uu
brind
br_jt
brcond
br_cc
callseq_start
callseq_end
vaarg
vacopy
vaend
vastart
dynamic_stackalloc
extract_element
build_pair
stacksave
stackrestore
debugtrap
lifetime.start
lifetime.end
ctpop
cttz_zero_undef
ctlz_zero_undef
init_trampoline
adjust_trampoline
setoeq
setogt
setoge
setolt
setole
setone
setuo
setue
setugt
setuge
setult
setule
setune
seteq
setgt
setlt
settrue
setfalse2
<pre-inc>
<pre-dec>
<post-inc>
<post-dec>
Mem:
<APFloat(
 [TF=
<null>
, anyext
, sext
, zext
 from 
, trunc to 
 -> 
 [ORD=
 [ID=
 dbg:
<unknown>
SelectionDAG has 
 nodes:
: <multiple use>
fast-isel-verbose
Enable verbose messages in the "fast" instruction selector
fast-isel-abort
Enable abort calls when "fast" instruction selection fails to lower an instruction
fast-isel-abort-args
Enable abort calls when "fast" instruction selection fails to lower a formal argument
use-mbpi
use Machine Branch Probability Info
pre-RA-sched
Instruction schedulers available (before register allocation):
Best scheduler for the target
Instruction Selection and Scheduling
DAG Combining 1
Type Legalization
DAG Combining after legalize types
Vector Legalization
Type Legalization 2
DAG Combining after legalize vectors
DAG Legalization
DAG Combining 2
Instruction Selection
Instruction Scheduling
Instruction Creation
Instruction Scheduling Cleanup
FastISel missed call: 
FastISel missed terminator: 
FastISel miss: 
Could not match memory address.  Inline asm failure!
Cannot select: 
In function: 
intrinsic %
target intrinsic %
unknown intrinsic #
SelectionDAG::viewGraph is only available in debug builds on 
systems with Graphviz or gv!
SelectionDAG::clearGraphAttrs is only available in debug builds
 on systems with Graphviz or gv!
SelectionDAG::setGraphAttrs is only available in debug builds
SelectionDAG::getGraphAttrs is only available in debug builds
SelectionDAG::setGraphColor is only available in debug builds
SelectionDAG::setSubgraphColor is only available in debug builds
    
CROSS RC COPY
plaintext=circle
GraphRoot
color=blue,style=dashed
Node
 label ="
 -> Node
vliw-td
VLIW scheduler
memory
argument to '__builtin_return_address' must be a constant integer
Named registers not implemented for this target
eh_func_begin
eh_func_end
>> Catch TypeInfos <<
TypeInfo 
>> Filter TypeInfos <<
FilterInfo 
Start of file scope inline assembly
End of file scope inline assembly
Debug Info Emission
CodeView Line Tables
DWARF Emission
DWARF Exception Writer
$tlv$init
_tlv_bootstrap
Address taken block that was later removed
' label emitted multiple times to assembly file
implicit-def: 
avoids zero-length function
Address of block that was removed by CodeGen
llvm.init.trampoline
.constructors_used
.destructors_used
llvm.ident
_set_
Block address taken
 BB#
no GCMetadataPrinter registered for GC: 
-byte Reload
-byte Folded Reload
-byte Spill
-byte Folded Spill
 Reload Reuse
 [piece offset=
 size=
(long double) 
kill:
<def>
<kill>
Unsupported expression in static initializer: 
0x%llx
float 
double 
  in Loop: Header=BB
 Depth=
This 
Inner 
Loop Header: Depth=
Parent Loop BB
Child Loop BB
 Depth 
DW_CFA_offset + Reg (
 Encoding = 
Encoding = 
DW_OP_bit_piece
DW_OP_piece
super-register
sub-register
nop (could not find a dwarf register number)
nop (invalid dwarf register number for indirect loc)
absptr
omit
pcrel
udata4
udata8
sdata4
sdata8
pcrel udata4
pcrel sdata4
pcrel udata8
pcrel sdata8
indirect pcrel udata4
indirect pcrel sdata4
indirect pcrel udata8
indirect pcrel sdata8
<unknown encoding>
DW_OP_regx
DW_OP_constu
DW_OP_shr
DW_OP_bregx
DW_OP_deref
<inline asm>
Inline asm not supported by this streamer because we don't have an asm parser for this target
Error parsing inline asm
comment
Unknown special formatter '
' for machine instr: 
Nested variants found in inline asm string: '
Unterminated ${:foo} operand in inline asm string: '
Bad $ operand number in inline asm string: '
Bad ${:} expression in inline asm string: '
Bad ${} expression in inline asm string: '
Invalid $ operand number in inline asm string: '
invalid operand in inline asm: '
.intel_syntax
.att_syntax
EOM(1)
EOM(2)
Header Magic
Header Version
Header Hash Function
Header Bucket Count
Header Hash Count
Header Data Length
HeaderData Die Offset Base
HeaderData Atom Count
Bucket 
Hash in Bucket 
Offset in Bucket 
Num DIEs
exception
disable-debug-info-print
Disable debug info printing
use-unknown-locations
Make an absence of debug location information explicit.
generate-gnu-dwarf-pub-sections
Generate GNU-style pubnames and pubtypes
generate-arange-section
Generate dwarf aranges
dwarf-accel-tables
Output prototype dwarf accelerator tables.
Default
Default for platform
Enable
Enabled
Disable
Disabled
split-dwarf
Output DWARF5 split debug info.
generate-dwarf-pub-sections
Generate DWARF pubnames and pubtypes sections
info_string
skel_string
DWARF Debug Writer
debug_ranges
cu_ranges
debug_end
debug_loc
func_begin
func_end
section_info
section_info_dwo
section_types_dwo
section_abbrev
section_abbrev_dwo
section_line
addr_sec
skel_loc
section_debug_loc
debug_range
Abbrev [
] 0x
End Of Children Mark
Extended Op
Op size
DW_LNE_set_address
Section end label
section_end
DW_LNE_end_sequence
Names
names_begin
ObjC
objc_begin
namespac
namespac_begin
types
types_begin
Length of Public 
 Info
_begin
DWARF Version
Offset of Compilation Unit Info
Compilation Unit Length
DIE offset
Kind: 
External Name
End Mark
Types
DW_OP_consts
DW_OP_plus_uconst
Loc expr size
Length of ARange Set
DWARF Arange version number
Offset Into Debug Info Section
Address Size (in bytes)
Segment Size (in bytes)
ARange terminator
Length of Unit
Abbreviation Code
EOM(3)
generate-type-units
Generate DWARF4 type units.
__forwarding
(anonymous namespace)
sizetype
DWARF version number
Offset Into Abbrev. Section
Type Signature
Type DIE Offset
GCC_except_table
_LSDA_
@LPStart
@TType
@TType base offset
Call site
Call site table length
>> Call Site 
  On exception at call site 
  Action: cleanup
  Action: 
  Call between 
 and 
    has no landing pad
    jumps to 
  On action: cleanup
  On action: 
>> Action Record 
  Catch TypeInfo 
  Filter TypeInfo 
  Cleanup
  No further actions
  Continue to action 
erlang
erlang-compatible garbage collector
.note.gc
safe point count
safe point address
stack frame size (in words)
stack arity
live root count
stack index (offset / wordsize)
ocaml
ocaml 3.10-compatible collector
code_begin
data_begin
caml
code_end
data_end
frametable
 Too much descriptor for ocaml GC
Function '
' is too large for the ocaml GC! Frame size 
>= 65536.
live roots for 
' is too large for the ocaml GC! Live root count 
 >= 65536.
GC root stack offset is outside of fixed stack frame and out of range for ocaml GC!
\..\
Linetable subsection for 
Segment for file '
' begins
File index to string table offset subsection
String table
agg-antidep-debugdiv
Debug control for aggressive anti-dep breaker
agg-antidep-debugmod
llvm.eh.catch.all.value
Expand Atomic calls in terms of load-linked & store-conditional
atomic-ll-sc
tryagain
cmpxchg.end
cmpxchg.failure
cmpxchg.success
cmpxchg.trystore
cmpxchg.start
should_store
partial-unrolling-threshold
Threshold for partial unrolling
Target independent code generator's TTI
basictti
enable-tail-merge
tail-merge-threshold
Max number of predecessors to consider tail merging
tail-merge-size
Min number of instructions to consider tail merging
Control Flow Optimizer
branch-folder
calc-spill-weights-uses-loop-depth
The calculation of spill weights uses loop depth heuristic
disable-cgp-branch-opts
Disable branch optimizations in CodeGenPrepare
disable-cgp-select2branch
Disable select to branch conversion.
addr-sink-using-gep
Address sinking in CGP using GEPs.
enable-andcmp-sinking
Enable sinkinig and/cmp into branches.
disable-cgp-store-extract
Disable store(extract) optimizations in CodeGenPrepare
stress-cgp-store-extract
Stress test store(extract) optimizations in CodeGenPrepare
Optimize for code generation
codegenprepare
CodeGen Prepare
.cond.split
sunkaddr
promoted
select.end
select.mid
Remove dead machine instructions
dead-mi-elimination
Exception handling preparation
unwind_resume
exn.obj
early-ifcvt-limit
stress-early-ifcvt
Early If Converter
early-ifcvt
Early If-Conversion
view-edge-bundles
Pop up a window to show edge bundle graphs
digraph {
"BB#
" [ shape=box ]
 -> "BB#
" -> 
" -> "BB#
" [ color=lightgray ]
EdgeBundles
Bundle Machine CFG Edges
edge-bundles
error opening file '
' for writing!
 done. 
Execution dependency fix
Expand ISel Pseudo-instructions
expand-isel-pseudos
Post-RA pseudo instruction expansion pass
postrapseudos
unsupported GC: 
Create Garbage Collector Module Metadata
collector-metadata
Print Garbage Collector Information
GC roots for 
[sp]
GC safe points for 
, live = {
loop
return
pre-call
post-call
 must override performCustomLowering.
 must override findCustomSafePoints.
GC Lowering
gc-lowering
Lower Garbage Collection Instructions
Analyze Machine Code For Garbage Collection
gc-analysis
enable-global-merge
Enable global merge pass
global-merge-on-const
Enable global merge pass on constants
global-merge-on-external
Enable global merge pass on external linkage
Merge global variables
global-merge
Merge internal globals
.llvm.
_MergedGlobals_
_MergedGlobals
ifcvt-fn-start
ifcvt-fn-stop
ifcvt-limit
disable-ifcvt-simple
disable-ifcvt-simple-false
disable-ifcvt-triangle
disable-ifcvt-triangle-rev
disable-ifcvt-triangle-false
disable-ifcvt-triangle-false-rev
disable-ifcvt-diamond
ifcvt-branch-fold
If Converter
if-converter
ifcvt
Number of simple if-conversions performed
Number of simple (F) if-conversions performed
Number of triangle if-conversions performed
Number of triangle (R) if-conversions performed
Number of triangle (F) if-conversions performed
Number of triangle (F/R) if-conversions performed
Number of diamond if-conversions performed
disable-spill-hoist
Disable inline spill hoisting
setjmp
longjmp
sqrtf
sqrt
sqrtl
sinf
sinl
cosf
cosl
powf
powl
logf
logl
log2f
log2
log2l
log10f
log10
log10l
expf
expl
exp2f
exp2
exp2l
Cannot lower a call to a non-intrinsic function '
Code generator does not support intrinsic function '
.not
WARNING: this target does not support the llvm.stack
save
restore
 intrinsic.
WARNING: this target does not support the llvm.
frame
address intrinsic.
WARNING: this target does not support the llvm.readcyclecoun
ter intrinsic.  It is being lowered to a constant 0
ceilf
ceil
ceill
cppop.and1
ctpop.sh
cppop.and2
ctpop.step
ctpop.part
ctpop.part.sh
bswap.2
bswap.1
bswap.i16
bswap.4
bswap.3
bswap.and3
bswap.and2
bswap.or1
bswap.or2
bswap.i32
bswap.8
bswap.7
bswap.6
bswap.5
bswap.and7
bswap.and6
bswap.and5
bswap.and4
bswap.or3
bswap.or4
bswap.or5
bswap.or6
bswap.i64
ctlz.sh
ctlz.step
__llvm_jump_instr_table_
Jump-Instruction Tables
jump-instr-tables
fast-isel
Enable the "fast" instruction selector
live-debug-variables
Enable the live debug variables pass
Debug Variable Analysis
livedebugvars
EMPTY
-phi
Clean updater: 
Null updater.
 updater with gap = 
, last start = 
  Area 1:
  Spills:
  Area 2:
********** INTERVALS **********
RegMasks:
********** MACHINEINSTRS **********
Live Interval Analysis
liveintervals
 empty
Live Register Matrix
liveregmatrix
Live Registers:
 (uninitialized)
 (empty)
 [Unknown]
Live Stack Slot Analysis
livestacks
regalloc=... not currently supported with -O0
Live Variable Analysis
livevars
Local Stack Slot Allocation
localstackalloc
(null)
Can't print out MachineBasicBlock because parent MachineFunction
 is null
derived from LLVM BB 
EH LANDING PAD
ADDRESS TAKEN
Align 
 bytes)
    Live Ins:
    Predecessors according to CFG:
  * 
    Successors according to CFG:
MachineBlockFrequencyInfo::view is only available in debug builds on systems with Graphviz or gv!
Machine Block Frequency Analysis
machine-block-freq
block-frequency-info: 
: float = 
, int = 
align-all-blocks
Force the alignment of all blocks in the function.
block-placement-exit-block-bias
Block frequency percentage a loop exit block needs over the original exit to be considered the new exit.
Branch Probability Basic Block Placement
block-placement2
Basic Block Placement Stats
block-placement-stats
edge MBB#
 -> MBB#
 probability is 
 [HOT edge]
Machine Branch Probability Analysis
machine-branch-prob
Machine Common Subexpression Elimination
machine-cse
Machine InstCombiner
machine-combiner
Machine Copy Propagation Pass
machine-cp
MachineCopyPropagation should be run after register allocation!
=============================--------------------------------
Inorder PostDominator Tree: 
Inorder Dominator Tree: 
DFSNumbers invalid: 
 slow queries.
MachineDominator Tree Construction
machinedomtree
 <<exit node>>
  DomFrontier for BB 
 is:
<<exit node>>
Machine Dominance Frontier Construction
machine-domfrontier
split-stack
# Machine code for function 
Post SSA
, not tracking liveness
Function Live Ins: 
# End machine code for function 
MachineFunction::viewCFG is only available in debug builds on 
MachineFunction::viewCFGOnly is only available in debug builds on 
Frame Objects:
  fi#
dead
variable sized
size=
, align=
, fixed
, at location [SP
Jump Tables:
  jt#
Constant Pool:
  cp#
Machine Function Analysis
scalar-evolution
iv-users
memdep
live-values
domtree
domfrontier
loops
stack-protector
Machine Function Printer
print-machineinstrs
MachineFunction Printer
earlyclobber,
imp-
,read-undef
imp-use
kill
dead
tied
<BB#
<fi#
<cp#
<ti#
<jt#
<ga:
<es:
<regmask>
<regliveout>
<MCSym=
<call frame instruction>
[TF=
Volatile 
(addrspace=
(align=
(tbaa=
(alias.scope=
(noalias=
(nontemporal)
UNKNOWN
 [sideeffect]
 [mayload]
 [maystore]
 [alignstack]
 [attdialect]
 [inteldialect]
pred:
opt:
:[reguse
:[regdef
:[regdef-ec
:[clobber
:[imm
:[mem
:[??
 tiedto:$
 ...
 flags: 
FrameSetup
 mem:
 line no:
 inlined @[ 
Unpack machine instruction bundles
unpack-mi-bundles
Finalize machine instruction bundles
finalize-mi-bundles
avoid-speculation
MachineLICM should avoid speculation
Machine Loop Invariant Code Motion
machinelicm
Loop at depth 
 containing: 
<header>
<latch>
<exiting>
Machine Natural Loop Construction
machine-loops
Machine Module Information
machinemoduleinfo
MachinePostDominator Tree Construction
machinepostdomtree
<Function Return>
 => 
Region tree:
End region tree
Detect single entry single exit regions
regions
misched-topdown
Force top-down list scheduling
misched-bottomup
Force bottom-up list scheduling
misched-dcpl
Print critical path length to stdout
misched-regpressure
Enable register pressure scheduling.
misched-cyclicpath
Enable cyclic critical path analysis.
misched-cluster
Enable load clustering.
misched-fusion
Enable scheduling for macro fusion.
verify-misched
Verify machine instrs before and after machine scheduling
misched
Machine instruction scheduler to use
Use the target's default scheduler choice.
Critical Path(GS-RR ): 
converge
Standard converging scheduler.
Critical Path(PGS-RR ): 
ilpmax
Schedule bottom-up for max ILP
ilpmin
Schedule bottom-up for min ILP
ScheduleDAGMI::viewGraph is only available in debug builds on 
Scheduling-Units Graph for 
Machine Instruction Scheduler
Before machine scheduling.
After machine scheduling.
:BB# 
PostRA Machine Instruction Scheduler
postmisched
Before post machine scheduling.
After post machine scheduling.
TopQ
BotQ
machine-sink-split
Split critical edges during machine sinking
machine-sink-bfi
Use block frequency info to find successors to sink
Machine code sinking
machine-sink
 ensemble:
  BB#
depth=
 pred=BB#
 pred=null
 head=BB#
 +instrs
depth invalid
height=
 succ=BB#
 succ=null
 tail=BB#
height invalid
, crit=
 trace BB#
 --> BB#
 instrs.
 cycles.
 <- BB#
 -> BB#
Machine Trace Metrics
machine-trace-metrics
MinInstr
Verify generated machine code
machineverifier
LLVM_VERIFY_MACHINEINSTRS
Error opening '
Bad instruction parent pointer
Instruction: 
Missing BundledPred flag, BundledSucc was set on predecessor
BundledPred flag is set, but BundledSucc not set on predecessor
No bundle header
BundledSucc flag set on last instruction in block
Found 
 machine code errors.
MBB has duplicate entries in its predecessor list.
MBB has duplicate entries in its successor list.
FrameSetup is after another FrameSetup
FrameDestroy is not after a FrameSetup
FrameDestroy <n> is after FrameSetup <m>
FrameDestroy <
> is after FrameSetup <
The exit stack state of a predecessor is inconsistent.
Predecessor BB#
 has exit state (
), while BB#
 has entry state (
The entry stack state of a successor is inconsistent.
Successor BB#
A return block ends with a FrameSetup.
A return block ends with a nonzero stack adjustment.
MBB has allocable live-in, but isn't entry or landing-pad.
MBB has successor that isn't part of the function.
Inconsistent CFG
MBB is not in the predecessor list of the successor BB#
MBB has predecessor that isn't part of the function.
MBB is not in the successor list of the predecessor BB#
MBB has more than one landing pad successor
MBB exits via unconditional fall-through but doesn't have exactly one CFG successor!
MBB exits via unconditional fall-through but its successor differs from its CFG successor!
MBB exits via unconditional fall-through but ends with a barrier instruction!
MBB exits via unconditional fall-through but has a condition!
MBB exits via unconditional branch but doesn't have exactly one CFG successor!
MBB exits via unconditional branch but the CFG successor doesn't match the actual successor!
MBB exits via unconditional branch but doesn't contain any instructions!
MBB exits via unconditional branch but doesn't end with a barrier instruction!
MBB exits via unconditional branch but the branch isn't a terminator instruction!
MBB conditionally falls through out of function!
MBB exits via conditional branch/fall-through but only has one CFG successor!
MBB exits via conditional branch/fall-through but the CFG successor don't match the actual successor!
MBB exits via conditional branch/fall-through but doesn't have exactly two CFG successors!
MBB exits via conditional branch/fall-through but the CFG successors don't match the actual successors!
MBB exits via conditional branch/fall-through but doesn't contain any instructions!
MBB exits via conditional branch/fall-through but ends with a barrier instruction!
MBB exits via conditional branch/fall-through but the branch isn't a terminator instruction!
MBB exits via conditional branch/branch through but only has one CFG successor!
MBB exits via conditional branch/branch through but the CFG successor don't match the actual successor!
MBB exits via conditional branch/branch but doesn't have exactly two CFG successors!
MBB exits via conditional branch/branch but the CFG successors don't match the actual successors!
MBB exits via conditional branch/branch but doesn't contain any instructions!
MBB exits via conditional branch/branch but doesn't end with a barrier instruction!
MBB exits via conditional branch/branch but the branch isn't a terminator instruction!
MBB exits via conditinal branch/branch but there's no condition!
AnalyzeBranch returned invalid data!
MBB live-in list contains non-physical register
- basic block: BB#
*** Bad machine code: 
 ***
- function:    
- instruction: 
Instruction index out of order
Last instruction was at 
Non-terminator instruction after the first terminator
First terminator was:
Too few operands
 operands expected, but 
 given.
Missing mayLoad flag
Missing mayStore flag
Debug instruction has a slot index
Instruction inside bundle has a slot index
Missing slot index
Too few operands on inline asm
Asm string must be an external symbol
Asm flags must be an immediate
Unknown asm flags
Missing operands in last group
Expected implicit register after groups
- operand 
:   
Explicit definition must be a register
Explicit definition marked as use
Explicit definition marked as implicit
Explicit operand marked as def
Explicit operand marked as implicit
Tied use must be a register
Operand should be tied
Tied def doesn't match MCInstrDesc
Explicit operand should not be tied
Extra explicit operand on non-variadic instruction
Must be tied to a register
Missing tie flags on tied operand
Inconsistent tie links
Explicit def tied to explicit use without tie constraint
Explicit def should be tied to implicit use
Two-address instruction operands must be identical
Illegal subregister index for physical register
Illegal physical register for instruction
 is not a 
 register.
Invalid subregister index for virtual register
Register class 
 does not support subreg index 
Invalid register class for subregister index
 does not fully support subreg index 
No largest legal super class exists.
No matching super-reg register class.
Illegal virtual register for instruction
Expected a 
 register, but got a 
 register
PHI operand is not in the CFG
Instruction loads from dead spill slot
Live stack: 
Instruction stores to dead spill slot
Kill missing from LiveVariables
No live segment at use
 is not live in 
Live range continues after kill flag
Live range: 
Virtual register has no live interval
Using an undefined physical register
Reading virtual register without a def
Using a killed virtual register
Multiple virtual register defs in SSA form
Inconsistent valno->def
Valno 
 is not defined at 
No live segment at def
Live range continues after dead def flag
Virtual register has no Live interval
Block ends before last instruction index
Block ends at 
 last instruction was at 
Virtual register killed in block, but needed live out.
Virtual register 
 is used after the block.
Virtual register def doesn't dominate all uses.
PHI operand is not live-out from predecessor
Missing PHI operand
 is a predecessor according to the CFG.
LiveVariables: Block missing from AliveBlocks
 must be live through the block.
LiveVariables: Block should not be in AliveBlocks
 is not needed live through the block.
Missing live interval for virtual register
 still has defs or uses
Multiple connected components in live interval
: valnos
- interval:    
Valno not live at def and not marked unused
Valno #
Live segment at def has different valno
 is defined at 
 where valno #
 is live
Invalid definition index
PHIDef value is not defined at MBB start
, not at the beginning of BB#
No instruction at def index
Defining instruction does not modify register
Early clobber def must be at an early-clobber slot
Non-PHI, non-early clobber def must be at a register slot
- liverange:    
Foreign valno in live segment
 has a bad valno
Live segment valno is marked unused
Bad start of live segment, no basic block
Live segment must begin at MBB entry or valno def
Bad end of live segment, no basic block
Live segment doesn't end at a valid instruction
Live segment ends at B slot of an instruction
Live segment ending at dead slot spans instructions
Live segment ending at early clobber slot must be redefined by an EC def in the same instruction
Instruction ending live segment doesn't read the register
Register not marked live out of predecessor
 live into BB#
, not live before 
Different value live out of predecessor
 live out of BB#
Valno #
ocaml 3.10-compatible GC
Optimize machine instruction PHIs
opt-phis
disable-phi-elim-edge-splitting
Disable critical edge splitting during PHI elimination
phi-elim-split-all-critical-edges
Split all critical edges during PHI elimination
Eliminate PHI nodes for register allocation
phi-node-elimination
disable-post-ra
Disable Post Regalloc
disable-branch-fold
Disable branch folding
disable-tail-duplicate
Disable tail duplication
disable-early-taildup
Disable pre-register allocation tail duplication
disable-block-placement
Disable probability-driven block placement
enable-block-placement-stats
Collect probability-driven block placement stats
disable-ssc
Disable Stack Slot Coloring
disable-machine-dce
Disable Machine Dead Code Elimination
disable-early-ifcvt
Disable Early If-conversion
disable-machine-licm
Disable Machine LICM
disable-machine-cse
Disable Machine Common Subexpression Elimination
optimize-regalloc
Enable optimized register allocation compilation path.
enable-misched
Enable the machine instruction scheduling pass.
disable-postra-machine-licm
disable-machine-sink
Disable Machine Sinking
disable-lsr
Disable Loop Strength Reduction Pass
disable-constant-hoisting
Disable ConstantHoisting
disable-cgp
Disable Codegen Prepare
disable-copyprop
Disable Copy Propagation pass
disable-partial-libcall-inlining
Disable Partial Libcall Inlining
print-lsr-output
Print LLVM IR produced by the loop-reduce pass
print-isel-input
Print LLVM IR input to isel pass
print-gc
Dump garbage collector data
verify-machineinstrs
Print machine instrs
pass-name
option-unspecified
misched-postra
Run MachineScheduler post regalloc (independent of preRA sched)
early-live-intervals
Run live interval analysis earlier in the pipeline
Cannot stop compilation after pass that is not run
*** Code after LSR ***
*** Final LLVM Code input to ISel ***
After Instruction Selection
After ExpandISelPseudos
After PreRegAlloc passes
After PostRegAlloc passes
After PrologEpilogCodeInserter
After ExpandPostRAPseudos
After PreSched2 passes
After PostRAScheduler
After PreEmit passes
After Pre-RegAlloc TailDuplicate
After codegen DCE pass
After ILP optimizations
After Machine LICM, CSE and Sinking passes
After codegen peephole optimization pass
pick register allocator based on -O option
regalloc
Register allocator to use
After Register Allocation
After Machine Scheduling
After Register Allocation, before rewriter
After pre-rewrite passes
After Virtual Register Rewriter
After StackSlotColoring and postra Machine LICM
After BranchFolding
After TailDuplicate
After copy propagation pass
After machine block placement.
Target Pass Configuration
targetpassconfig
Target cannot enable pass
aggressive-ext-opt
Aggressive extension optimization
disable-peephole
Disable the peephole optimizer
disable-adv-copy-opt
Disable advanced copy optimization
Peephole Optimizations
peephole-opts
post-RA-scheduler
Enable scheduling after register allocation
break-anti-dependencies
Break post-RA scheduling anti-dependencies: "critical", "all", or "none"
none
postra-sched-debugdiv
Debug control MBBs that are scheduled
postra-sched-debugmod
Post RA top-down list latency scheduler
post-RA-sched
critical
Process Implicit Definitions
processimpdefs
warn-stack-size
Warn for stack size bigger than the given number
Prologue/Epilogue Insertion & Frame Finalization
prologepilog
FixedStack
Stack
verify-regalloc
Verify during register allocation
Seed Live Regs
inline assembly requires more registers than available
ran out of registers during register allocation
basic
basic register allocator
Basic Register Allocator
fast register allocator
Fast Register Allocator
split-spill-mode
Spill mode for splitting live ranges
Optimize for size
speed
Optimize for speed
lcr-max-depth
Last chance recoloring max depth
lcr-max-interf
Last chance recoloring maximum number of considered interference at a time
exhaustive-register-search
Exhaustive Search for registers bypassing the depth and interference cutoffs of last chance recoloring
enable-local-reassign
Local reassignment can yield better allocation decisions, but may be compile time intensive
regalloc-csr-first-time-cost
Cost for first time use of callee-saved register.
greedy
greedy register allocator
Greedy Register Allocator
Before greedy register allocator
register allocation failed: maximum depth for recoloring reached. Use -fexhaustive-register-search to skip cutoffs
register allocation failed: maximum interference for recoloring reached. Use -fexhaustive-register-search to skip cutoffs
register allocation failed: maximum interference and depth for recoloring reached. Use -fexhaustive-register-search to skip cutoffs
Spiller
After spilling
After splitting live range around region
Evict
Local Splitting
Global Splitting
After splitting live range around basic blocks
pbqp
PBQP register allocator
pbqp-coalescing
Attempt coalescing during PBQP register allocation.
PBQP Register Allocator
stress-regalloc
Limit all regclasses to N registers
join-liveintervals
Coalesce copies (default=true)
join-splitedges
Coalesce copies on split edges (default=subtarget)
join-globalcopies
Coalesce copies that span blocks (default=subtarget)
verify-coalescing
Verify machine instrs before and after register coalescing
Simple Register Coalescing
simple-register-coalescing
Before register coalescing
After register coalescing
Max Pressure: 
Live In: 
Live Out: 
Curr Pressure: 
enable-aa-sched-mi
Enable use of AA during MI GAD construction
use-tbaa-in-sched-mi
Enable use of TBAA during MI GAD construction
<entry>
<exit>
dag.
BADILP
ScheduleDAG::viewGraph is only available in debug builds on 
shadow-stack
Very portable GC for uncooperative code generators
gc_map
gc_stackentry
llvm_gc_root_chain
gc_frame
gc_currhead
gc_frame.map
gc_root
gc_frame.next
gc_newhead
gc_cleanup
gc_savedhead
gc_map.
__gc_
gc_stackentry.
__gcc_personality_v0
cleanup.lpad
.cont
SJLJ Exception Handling preparation
_Unwind_SjLj_Register
_Unwind_SjLj_Unregister
jbuf_gep
jbuf_fp_gep
jbuf_sp_gep
.tmp
fn_context
__data
exception_gep
exn_val
exn_selector_gep
exn_selector_val
pers_fn_gep
lsda_addr
lsda_gep
lpad.val
call_site
Berd
invalid
Slot index numbering
slotindexes
spill-uses-loop-depth
Spill uses loop depth heuristic
Spill Code Placement Analysis
spill-code-placement
spiller
Spiller to use: (default: standard)
trivial
trivial spiller
inline spiller
no-stack-coloring
Disable stack coloring
protect-from-escaped-allocas
Do not optimize lifetime zones that are broken
Merge disjoint stack slots
stack-coloring
enable-selectiondag-sp
stack-protector-buffer-size
SP_return
CallStackCheckFailBlk
__stack_smash_handler
Insert stack protectors
__guard_local
StackGuardSlot
StackGuard
no-stack-slot-sharing
Suppress slot sharing during stack coloring
ssc-dce-limit
Stack Slot Coloring
stack-slot-coloring
stackslotcoloring
Number of trivially dead stack accesses eliminated
enable-patchpoint-liveness
Enable PatchPoint Liveness Analysis Pass
StackMap Liveness Analysis
stackmap-liveness
stackmap-version
Specify the stackmap encoding version (default = 1)
Stack Maps: 
__LLVM_StackMaps
tail-dup-size
Maximum instructions to consider tail duplicating
tail-dup-verify
Verify sanity of PHI instructions during taildup
tail-dup-limit
Tail Duplication
tailduplication
Malformed PHI in BB#
  missing input from predecessor BB#
Warning: malformed PHI in BB#
  extra input from predecessor BB#
  non-existing BB#
Number of tails duplicated
disable-sched-hazard
Disable hazard detection during preRA scheduling
cannot spill patchpoint subregister operand
__ashlhi3
__ashlsi3
__ashldi3
__ashlti3
__lshrhi3
__lshrsi3
__lshrdi3
__lshrti3
__ashrhi3
__ashrsi3
__ashrdi3
__ashrti3
__mulqi3
__mulhi3
__mulsi3
__muldi3
__multi3
__mulosi4
__mulodi4
__muloti4
__divqi3
__divhi3
__divsi3
__divdi3
__divti3
__udivqi3
__udivhi3
__udivsi3
__udivdi3
__udivti3
__modqi3
__modhi3
__modsi3
__moddi3
__modti3
__umodqi3
__umodhi3
__umodsi3
__umoddi3
__umodti3
__negsi2
__negdi2
__addsf3
__adddf3
__addxf3
__addtf3
__gcc_qadd
__subsf3
__subdf3
__subxf3
__subtf3
__gcc_qsub
__mulsf3
__muldf3
__mulxf3
__multf3
__gcc_qmul
__divsf3
__divdf3
__divxf3
__divtf3
__gcc_qdiv
fmodf
fmod
fmodl
fmaf
fmal
__powisf2
__powidf2
__powixf2
__powitf2
truncf
truncl
rintf
rint
rintl
nearbyintf
nearbyint
nearbyintl
roundf
round
roundl
floorf
floor
floorl
copysignf
copysign
copysignl
__extenddftf2
__extendsftf2
__extendsfdf2
__gnu_h2f_ieee
__gnu_f2h_ieee
__truncdfhf2
__truncxfhf2
__trunctfhf2
__truncdfsf2
__truncxfsf2
__trunctfsf2
__truncxfdf2
__trunctfdf2
__fixsfqi
__fixsfhi
__fixsfsi
__fixsfdi
__fixsfti
__fixdfqi
__fixdfhi
__fixdfsi
__fixdfdi
__fixdfti
__fixxfsi
__fixxfdi
__fixxfti
__fixtfsi
__fixtfdi
__fixtfti
__fixunssfqi
__fixunssfhi
__fixunssfsi
__fixunssfdi
__fixunssfti
__fixunsdfqi
__fixunsdfhi
__fixunsdfsi
__fixunsdfdi
__fixunsdfti
__fixunsxfsi
__fixunsxfdi
__fixunsxfti
__fixunstfsi
__fixunstfdi
__fixunstfti
__floatsisf
__floatsidf
__floatsixf
__floatsitf
__floatdisf
__floatdidf
__floatdixf
__floatditf
__floattisf
__floattidf
__floattixf
__floattitf
__floatunsisf
__floatunsidf
__floatunsixf
__floatunsitf
__floatundisf
__floatundidf
__floatundixf
__floatunditf
__floatuntisf
__floatuntidf
__floatuntixf
__floatuntitf
__eqsf2
__eqdf2
__eqtf2
__nesf2
__nedf2
__netf2
__gesf2
__gedf2
__getf2
__ltsf2
__ltdf2
__lttf2
__lesf2
__ledf2
__letf2
__gtsf2
__gtdf2
__gttf2
__unordsf2
__unorddf2
__unordtf2
_Unwind_Resume
__sync_val_compare_and_swap_1
__sync_val_compare_and_swap_2
__sync_val_compare_and_swap_4
__sync_val_compare_and_swap_8
__sync_val_compare_and_swap_16
__sync_lock_test_and_set_1
__sync_lock_test_and_set_2
__sync_lock_test_and_set_4
__sync_lock_test_and_set_8
__sync_lock_test_and_set_16
__sync_fetch_and_add_1
__sync_fetch_and_add_2
__sync_fetch_and_add_4
__sync_fetch_and_add_8
__sync_fetch_and_add_16
__sync_fetch_and_sub_1
__sync_fetch_and_sub_2
__sync_fetch_and_sub_4
__sync_fetch_and_sub_8
__sync_fetch_and_sub_16
__sync_fetch_and_and_1
__sync_fetch_and_and_2
__sync_fetch_and_and_4
__sync_fetch_and_and_8
__sync_fetch_and_and_16
__sync_fetch_and_or_1
__sync_fetch_and_or_2
__sync_fetch_and_or_4
__sync_fetch_and_or_8
__sync_fetch_and_or_16
__sync_fetch_and_xor_1
__sync_fetch_and_xor_2
__sync_fetch_and_xor_4
__sync_fetch_and_xor_8
__sync_fetch_and_xor_16
__sync_fetch_and_nand_1
__sync_fetch_and_nand_2
__sync_fetch_and_nand_4
__sync_fetch_and_nand_8
__sync_fetch_and_nand_16
__sync_fetch_and_max_1
__sync_fetch_and_max_2
__sync_fetch_and_max_4
__sync_fetch_and_max_8
__sync_fetch_and_max_16
__sync_fetch_and_umax_1
__sync_fetch_and_umax_2
__sync_fetch_and_umax_4
__sync_fetch_and_umax_8
__sync_fetch_and_umax_16
__sync_fetch_and_min_1
__sync_fetch_and_min_2
__sync_fetch_and_min_4
__sync_fetch_and_min_8
__sync_fetch_and_min_16
__sync_fetch_and_umin_1
__sync_fetch_and_umin_2
__sync_fetch_and_umin_4
__sync_fetch_and_umin_8
__sync_fetch_and_umin_16
sincosl
DW.ref.
We do not support this DWARF encoding yet!
.data.
.DW.stub
.rodata.str1.
.rodata.str2.
.rodata.str4.
.init_array.
.ctors.
.fini_array.
.dtors.
.init_array
.fini_array
Objective-C Image Info Version
Objective-C Garbage Collection
Objective-C GC Only
Objective-C Is Simulated
Objective-C Image Swift Version
Objective-C Image Info Section
Linker Options
Invalid section specifier '
L_OBJC_IMAGE_INFO
Global variable '
' has an invalid section specifier '
' section type or attributes does not match previous section specifier
/DEFAULTLIB:
.bss
.bss.
.gnu.linkonce.b.
.llvm.linkonce.b.
.sbss
.sbss.
.gnu.linkonce.sb.
.llvm.linkonce.sb.
.tdata
.tdata.
.gnu.linkonce.td.
.llvm.linkonce.td.
.tbss
.tbss.
.gnu.linkonce.tb.
.llvm.linkonce.tb.
ELF COMDATs only support SelectionKind::Any, '
' cannot be lowered.
.preinit_array
.text.
.rodata.
.data.rel.local.
.data.rel.
.data.rel.ro.local.
.data.rel.ro.
MachO doesn't support COMDATs, '
Associative COMDAT symbol '
' does not exist.
' is not a key for it's COMDAT.
.text
.tls$
.data
no-frame-pointer-elim-non-leaf
%noreg
%vreg
%physreg
:sub(
Unit~
BadUnit~
schedmodel
Use TargetSchedModel for latency lookup
scheditins
Use InstrItineraryData for latency lookup
twoaddr-reschedule
Coalesce copies by rescheduling (default=true)
Two-Address instruction pass
twoaddressinstruction
After two-address instruction pass
Remove unreachable blocks from the CFG
unreachableblockelim
Remove unreachable machine basic blocks
unreachable-mbb-elimination
********** REGISTER MAP **********
 -> fi#
Virtual Register Map
virtregmap
Virtual Register Rewriter
virtregrewriter
Aggressive Dead Code Elimination
adce
Constant Hoisting
consthoist
const
const_mat
Simple constant propagation
constprop
Value Propagation
correlated-propagation
Dead Instruction Elimination
Dead Code Elimination
Dead Store Elimination
early-cse
Early CSE
Flatten the CFG
flattencfg
enable-pre
enable-load-pre
max-recurse-depth
Max recurse depth (default = 1000)
.pre
.pre-phi
Global Value Numbering
verify-indvars
Verify the ScalarEvolution result after running indvars
liv-reduce
Reduce live induction variables.
Induction Variable Simplification
indvars
.int
indvar.conv
.wide
lftr.wideiv
exitcond
lftr.limit
jump-threading-threshold
Max block size to duplicate for jump threading
Jump Threading
jump-threading
.thr_comm
.thread
select.unfold
thread-pre-split
disable-licm-promotion
Disable memory promotion in LICM pass
Loop Invariant Code Motion
licm
.lcssa
.promoted
LoadCombine
.combined
combine.extract
.shift
.trunc
load-combine
Number of loads combined
Combine Adjacent Loads
Delete dead loops
loop-deletion
Recognize loop idioms
loop-idiom
memset_pattern16
.memset_pattern
tcphi
tcdec
Simplify instructions in loops
loop-instsimplify
max-reroll-increment
The maximum increment for loop rerolling
Reroll loops
loop-reroll
reroll
rotation-max-header-size
The default maximum header size for automatic loop rotation
Rotate Loops
loop-rotate
.lr.ph
enable-lsr-phielim
Enable LSR phi elimination
Loop Strength Reduction
loop-reduce
IV.S.
IV.S.next.
.termcond
scmp
lsr.chain
unroll-threshold
The cut-off point for automatic loop unrolling
unroll-count
Use this unroll count for all loops including those with unroll_count pragma values, for testing purposes
unroll-allow-partial
Allows loops to be partially unrolled until -unroll-threshold loop size is reached.
unroll-runtime
Unroll loops with run-time trip counts
pragma-unroll-threshold
Unrolled size limit for loops with an unroll(full) or unroll_count pragma.
Unroll loops
loop-unroll
Unable to fully unroll loop as directed by unroll(full) pragma because unrolled size is too large.
Unable to fully unroll loop as directed by unroll(full) pragma because loop has a runtime trip count.
Unable to unroll loop the number of times directed by unroll_count pragma because unrolled size is too large.
llvm.loop.unroll.disable
llvm.loop.unroll.full
llvm.loop.unroll.count
llvm.loop.unroll.
loop-unswitch-threshold
Max loop size to unswitch
Unswitch loops
loop-unswitch
us-unreachable
.us-lcssa
Lower atomic intrinsics to non-atomic form
loweratomic
memcpyopt
tmpcast
MemCpy Optimization
mlsm
Enable motion of merged load and store
.sink
MergedLoadStoreMotion
mldst-motion
Partially inline calls to library functions
partially-inline-libcalls
call.sqrt
Reassociate expressions
reassociate
.neg
and.ra
factor
Demote all values to stack slots
reg2mem
reg2mem alloca point
Sparse Conditional Constant Propagation
sccp
SCCP: Don't know how to handle: 
Interprocedural Sparse Conditional Constant Propagation
ipsccp
force-ssa-updater
sroa-random-shuffle-slices
sroa-strict-inbounds
SROA
sroa
.fca
.sroa.
insert
extract
Maximum number of uses of a partition
Maximum number of partitions per alloca
Scalar Replacement Of Aggregates
sample-profile-file
Profile file loaded by -sample-profile
sample-profile-max-propagate-iterations
Maximum number of iterations to go through when propagating sample block/edge weights through the CFG.
Sample Profile loader
sample-profile
Sample profile pass
^([^0-9].*):([0-9]+):([0-9]+)$
^([0-9]+)\.?([0-9]+)?: ([0-9]+)(.*)$
Expected 'mangled_name:NUM:NUM', found 
Expected 'NUM[.NUM]: NUM[ mangled_name:NUM]*', found 
No debug information found in function 
Scalar Replacement of Aggregates (DT)
scalarrepl
Scalar Replacement of Aggregates (SSAUp)
scalarrepl-ssa
sroa.load.elt
sroa.store.elt
srcval
dyn.offset
mask
scalarize-load-store
Allow the scalarizer pass to scalarize loads and store
Scalarize vector operations
scalarizer
llvm.mem.parallel_loop_access
.cast
.upto
disable-separate-const-offset-from-gep
Do not separate the constant offset from a GEP instruction
Split GEPs to a variadic base and a constant offset for better CSE
separate-const-offset-from-gep
uglygep
idxprom
Simplify the CFG
simplifycfg
merge
Code sinking
sink
Structurize the CFG
structurizecfg
Structurize control flow
.inv
entry.orig
Flow
Tail Call Elimination
tailcallelim
marked this readnone call a tail call candidate
marked this call a tail call candidate
transforming tail recursion to loop
tailrecurse
accumulator.tr
enable-double-float-shrink
Enable unsafe double to float shrinking for math lib calls
phitmp
.sum
Combine redundant instructions
instcombine
.cmp
__gnat_eh_personality
__gxx_personality_v0
__objc_personality_v0
.offs
addconv
diff.neg
.off
fold
.masked
and.shrunk
.demorgan
bitfield
notlhs
notrhs
umul_with_overflow
blendv
.lobit
.mask
sqrtfcall
.unshifted
sadd
sadd.result
sadd.overflow
uadd
uadd.overflow
umul
umul.value
.sub
storemerge
suba
subc
extract.t
not.
.Elt
.lhs
.rhs
.elt
no-discriminators
Disable generation of discriminator information.
Add DWARF path discriminators
add-discriminators
.split
lpad
lpad.phi
_crit_edge
split
Break critical edges in CFG
break-crit-edges
cstr
strlen
strnlen
strchr
strncmp
strncpy
__memcpy_chk
memchr
memcmp
putchar
chari
puts
fputc
fputs
__mempcpy_chk
__memmove_chk
__memset_chk
__strcpy_chk
__stpcpy_chk
__strncpy_chk
__stpncpy_chk
aggregate-extracted-args
Aggregate arguments to code-extracted functions
.ret
gep_
loadgep_
.out
.loc
structArg
targetBlock
gep_reload_
.reload
.exitStub
codeRepl
newFuncRoot
.reg2mem
enable-noalias-to-md-conversion
Convert noalias attributes to metadata during inlining.
savedstack
.exit
: argument 
.noexc
.lpad-body
eh.lpad-body
Assign names to anonymous instructions
instnamer
_udiv-special-cases
udiv-end
udiv-loop-exit
udiv-do-while
udiv-preheader
udiv-bb1
lcssa
Loop-Closed SSA Form Pass
cond
.preheader
.split-lp
loop-simplify
.loopexit
.nonloopexit
.outer
.backedge
Canonicalize natural loops
completely unrolled loop with 
 iterations
 with a breakout at trip 
 with 
 trips per branch
 with run-time trip count
unrolled loop by a factor of 
xtraiter
lcmp.mod
lcmp.overflow
lcmp.or
unr.cmp
un.tmp
.unr
.unr-lcssa
.unr1-lcssa
.unr2-lcssa
likely-branch-weight
Weight of the branch likely to be taken (default = 64)
unlikely-branch-weight
Weight of the branch unlikely to be taken (default = 4)
Lower 'expect' Intrinsics
lower-expect
Lower invoke and unwind, for unwindless code generators
lowerinvoke
Lower SwitchInst's to branches
lowerswitch
mem2reg
NewDefault
NodeBlock
Pivot
LeafBlock
SwitchLeaf
Promote Memory to Register
Assign new names to everything
metarenamer
quux
barney
snork
blam
hoge
wibble
wobble
widget
wombat
eggs
pluto
spam
struct.
phi-node-folding-threshold
Control the amount of phi node folding to perform (default = 1)
simplifycfg-dup-ret
Duplicate return instructions into unconditional branches
simplifycfg-sink-common
Sink common instructions down to the end block
simplifycfg-hoist-cond-stores
Hoist conditional stores if an unconditional store precedes
.old
or.cond
not.cond
and.cond
switch.edge
branch_weights
magicptr
infloop
switch.early.test
.critedge
brmerge
.mux
retval
switch.lookup
switch.tableidx
switch.hole_check
switch.maskindex
switch.shifted
switch.lobit
switch.table
switch.cast
switch.shiftamt
switch.downshift
switch.masked
switch.tableidx.zext
switch.gep
switch.load
Remove redundant instructions
instsimplify
error-reporting-is-cold
Treat error-reporting calls as cold
endptr
strrchr
strcmpload
simplify-libcalls
folded strlen(select) to select of constants
strlenfirst
strpbrk
strstr
lhsc
lhsv
rhsc
rhsv
chardiff
__sincospif_stret
__sincospi_stret
sincospi
sinpi
cospi
cttz
ispos
isdigittmp
isdigit
isascii
stderr
iprintf
siprintf
char
leninc
fiprintf
_chk
fabs
pow2
powrecip
UnifiedUnreachableBlock
UnifiedReturnBlock
UnifiedRetVal
Unify function exit nodes
mergereturn
CallGraph Root is: 
<<null function: 0x
Call graph node for function: '
Call graph node <<null function>>
>>  #uses=
  CS<
> calls 
function '
external node
No call graph has been built!
CallGraph Construction
basiccg
max-cg-scc-iterations
CallGraph Pass Manager
Call Graph SCC Pass Manager
cgscc-passmgr
Maximum CGSCCPassMgr iterations on one SCC
Printing <null> Function
View call graph
view-callgraph
Print call graph to 'dot' file
dot-callgraph
callgraph
Call graph
digraph "
label="
 [shape=record,
label="{
}"];
external node
.dot
Writing '
'...
  error opening file for writing!
Types in use by this module:
Find Used Types
print-used-types
Simple mod/ref analysis for globals
globalsmodref-aa
Inline Cost Analysis
inline-cost
Alias Analysis
count-aa-print-all-queries
count-aa-print-all-failed-queries
Count Alias Analysis Query Responses
count-aa
===== Alias Analysis Counter Report =====
  Analysis counted:
 Total Alias Queries Performed
no alias
may alias
partial alias
must alias
  Alias Analysis Counter Summary: 
 Total Mod/Ref Queries Performed
no mod/ref
mod/ref
  Mod/Ref Analysis Counter Summary: 
 responses (
No alias
May alias
Partial alias
Must alias
NoModRef
JustRef
JustMod
ModRef
:  Ptr: 
print-all-alias-modref-info
print-no-aliases
print-may-aliases
print-partial-aliases
print-must-aliases
print-no-modref
print-mod
print-ref
print-modref
evaluate-aa-metadata
Exhaustive Alias Analysis Precision Evaluator
aa-eval
===== Alias Analysis Evaluator Report =====
  Alias Analysis Evaluator Summary: No pointers!
 no alias responses 
 may alias responses 
 partial alias responses 
 must alias responses 
  Alias Analysis Evaluator Pointer Alias Summary: 
  Alias Analysis Mod/Ref Evaluator Summary: no mod/ref!
 Total ModRef Queries Performed
 no mod/ref responses 
 mod responses 
 ref responses 
 mod & ref responses 
  Alias Analysis Evaluator Mod/Ref Summary: 
Function: 
 pointers, 
 call sites
NoAlias
MayAlias
PartialAlias
MustAlias
Just Mod
Just Ref
Both ModRef
 <-> 
AA use debugger
debug-aa
  AliasSet[
must
 alias, 
No access 
Ref       
Mod       
Mod/Ref   
[volatile] 
 forwarding to 
Pointers: 
 Unknown instructions: 
Alias Set Tracker: 
 alias sets for 
 pointer values.
Alias Set Printer
print-alias-sets
Broken module found, compilation aborted!
Broken function found, compilation aborted!
Basic Alias Analysis (stateless AA impl)
basicaa
BlockFrequencyInfo::view is only available in debug builds on systems with Graphviz or gv!
Block Frequency Analysis
block-freq
---- Branch Probabilities ----
edge 
Branch Probability Analysis
branch-prob
View CFG of function
view-cfg
View CFG of function (with no function bodies)
view-cfg-only
Print CFG of function to 'dot' file
dot-cfg
Print CFG of function to 'dot' file (with no function bodies)
dot-cfg-only
cfg.
digraph unnamed {
CFG for '
' function
\l...
|<s64>truncated...
debug-cgscc-pass-manager
Print CGSCC pass management debugging information
Starting CGSCC pass manager run.
Running CGSCC pass: 
Finished CGSCC pass manager run.
costmodel-reduxcost
Recognize reduction patterns.
cost-model
Cost Model: Found an estimated cost of 
Cost Model: Unknown cost
 for instruction: 
acos
asin
atan
atan2
cosh
sinh
tanh
delinearize
Delinearization on function 
Inst:
In Loop with Header: 
AddRec: 
failed to delinearize
Base offset: 
ArrayDecl[UnknownSize]
 with elements of 
 bytes.
ArrayRef
da-delinearize
Try to delinearize array references.
 Empty
 Any
 Point is <
 Distance is 
*X + 
*Y = 
 Line is 
confused
consistent 
flow
output
anti
input
 splitable
Dependence Analysis
da analyze - 
da analyze - split level = 
, iteration = 
none!
View dominance tree of function
view-dom
View dominance tree of function (with no function bodies)
view-dom-only
View postdominance tree of function
view-postdom
View postdominance tree of function (with no function bodies)
view-postdom-only
Print dominance tree of function to 'dot' file
dot-dom
Print dominance tree of function to 'dot' file (with no function bodies)
dot-dom-only
Print postdominance tree of function to 'dot' file
dot-postdom
Print postdominance tree of function to 'dot' file (with no function bodies)
dot-postdom-only
 for '
Dominator tree
Post dominance root node
domonly
postdom
Post dominator tree
postdomonly
Dominance Frontier Construction
IV Users for loop 
 with backedge-taken count 
 (post-inc with loop 
 in  
Printing <null> User
Induction Variable Users
Counts the various types of Instructions
instcount
Number of GetElementPtr insts
Number of Load insts
Number of Store insts
Number of Call insts
Number of Invoke insts
Number of Alloca insts
-------------------------------------------------------------
Interval Contents:
Interval Predecessors:
Interval Successors:
Interval Partition Construction
intervals
Jump-Instruction Table Info
jump-instr-table-info
Printing the call graph for module: 
  Call edges in function: 
    -> 
  SCC with 
 functions:
    
undefined
overdefined
notconstant<
constantrange<
constant<
Lazy Value Information Analysis
lazy-value-info
LibCall Alias Analysis
libcall-aa
Statically lint-checks LLVM IR
lint
Unusual: Unnamed function with non-local linkage
Unusual: Return statement in function with noreturn attribute
Unusual: Returning alloca value
Undefined behavior: indirectbr with no destinations
Undefined behavior: Null pointer dereference
Undefined behavior: Undef pointer dereference
Unusual: All-ones pointer dereference
Unusual: Address one pointer dereference
Undefined behavior: Write to read-only memory
Undefined behavior: Write to text section
Unusual: Load from function body
Undefined behavior: Load from block address
Undefined behavior: Call to block address
Undefined behavior: Branch to non-blockaddress
Undefined behavior: Buffer overflow
Undefined behavior: Memory reference address is misaligned
Undefined behavior: Caller and callee calling convention differ
Undefined behavior: Call argument count mismatches callee argument count
Undefined behavior: Call return type mismatches callee return type
Undefined behavior: Call argument type mismatches callee parameter type
Unusual: noalias argument aliases another argument
Undefined behavior: Call with "tail" keyword references alloca
Undefined behavior: memcpy source and destination overlap
Undefined behavior: va_start called in a non-varargs function
Unusual: unreachable immediately preceded by instruction without side effects
Undefined result: sub(undef, undef)
Undefined behavior: Division by zero
Undefined result: Shift count out of range
Undefined result: xor(undef, undef)
Pessimization: Static alloca outside of entry block
Undefined result: extractelement index out of range
Undefined result: insertelement index out of range
verify-loop-info
Verify loop info (time consuming)
llvm.loop
Natural Loop Information
<deleted>
Loop Pass Manager
Printing <null> block
Loop Pass Manager
Print MemDeps of function
print-memdeps
 in block 
 from: 
Clobber
NonFuncLocal
Memory Dependence Analysis
Decodes module-level debug info
module-debuginfo
Compile Unit: 
Subprogram: 
GlobalVariable: 
Type: 
No Alias Analysis (always returns 'may' alias)
no-aa
PHITransAddr contains extra instructions:
  InstInput #
 is 
.phi.trans.insert
Instruction in PHITransAddr is not phi-translatable:
Post-Dominator Tree Construction
postdomtree
verify-region-info
Verify region info (time consuming)
print-region-style
style of printing regions
print no details
print regions in detail with block_iterator
print regions in detail with element_iterator
Region Pass Manager
Printing <null> Block
Region Pass Manager
only-simple-regions
Show only simple regions in the graphviz viewer
Print regions of function to 'dot' file
dot-regions
View regions of function
view-regions
View regions of function (with no function bodies)
view-regions-only
Print regions of function to 'dot' file (with no function bodies)
dot-regions-only
Region Graph
Not implemented
constraint=false
colorscheme = "paired12"
subgraph cluster_
label = "";
style = filled;
color = 
style = solid;
Node
regonly
scalar-evolution-max-iterations
Maximum number of iterations SCEV will symbolically execute a constant derived loop
verify-scev
Verify ScalarEvolution's backedge taken counts (slow)
(trunc 
 to 
(zext 
(sext 
nuw><
nsw><
nw><
 umax 
 smax 
<nuw>
<nsw>
 /u 
sizeof(
alignof(
offsetof(
***COULDNOTCOMPUTE***
Classifying expressions for: 
  -->  
Exits: 
<<Unknown>>
Determining loop execution counts for: 
SCEVValidator: SCEV for loop '
' changed from '
Scalar Evolution Analysis
Loop 
<multiple exits> 
backedge-taken count is 
Unpredictable backedge-taken count. 
Loop 
max backedge-taken count is 
Unpredictable max backedge-taken count. 
<nw>
ScalarEvolution-based Alias Analysis
scev-aa
scevgep
.iv.next
indvar
indvar.next
smax
untracked
unknown lattice value
FUNCTION: 
INFEASIBLE: 
; anon bb
Target Information
No target information
notti
fabsf
fabsl
ffsl
labs
llabs
; Trace from function 
, blocks:
; Trace parent function: 
enable-tbaa
vtable pointer
Type-Based Alias Analysis
tbaa
enable-scoped-noalias
Scoped NoAlias Alias Analysis
scoped-noalias
_IO_getc
_IO_putc
_ZdaPv
_ZdaPvRKSt9nothrow_t
_ZdlPv
_ZdlPvRKSt9nothrow_t
_Znaj
_ZnajRKSt9nothrow_t
_Znam
_ZnamRKSt9nothrow_t
_Znwj
_ZnwjRKSt9nothrow_t
_Znwm
_ZnwmRKSt9nothrow_t
__cospi
__cospif
__cxa_atexit
__cxa_guard_abort
__cxa_guard_acquire
__cxa_guard_release
__isoc99_scanf
__isoc99_sscanf
__sinpi
__sinpif
__sqrt_finite
__sqrtf_finite
__sqrtl_finite
__strdup
__strndup
__strtok_r
access
acosf
acosh
acoshf
acoshl
acosl
asinf
asinh
asinhf
asinhl
asinl
atan2f
atan2l
atanf
atanh
atanhf
atanhl
atanl
atof
atoi
atol
atoll
bcmp
bcopy
calloc
cbrt
cbrtf
cbrtl
chmod
chown
clearerr
closedir
coshf
coshl
ctermid
exp10
exp10f
exp10l
expm1
expm1f
expm1l
fclose
fdopen
feof
ferror
fflush
ffsll
fgetc
fgetpos
fgets
fileno
flockfile
fmax
fmaxf
fmaxl
fmin
fminf
fminl
fopen
fopen64
fprintf
fread
free
frexp
frexpf
frexpl
fscanf
fseek
fseeko
fseeko64
fsetpos
fstat
fstat64
fstatvfs
fstatvfs64
ftell
ftello
ftello64
ftrylockfile
funlockfile
fwrite
getc
getc_unlocked
getchar
getenv
getitimer
getlogin_r
getpwnam
gets
gettimeofday
htonl
htons
lchown
ldexp
ldexpf
ldexpl
log1p
log1pf
log1pl
logb
logbf
logbl
lstat
lstat64
malloc
memalign
memccpy
memrchr
mkdir
mktime
modf
modff
modfl
ntohl
ntohs
open
open64
opendir
pclose
perror
popen
posix_memalign
pread
printf
putc
pwrite
qsort
read
readlink
realloc
reallocf
realpath
remove
rename
rewind
rmdir
scanf
setbuf
setitimer
setvbuf
sinhf
sinhl
snprintf
sprintf
sscanf
stat
stat64
statvfs
statvfs64
stpcpy
stpncpy
strcasecmp
strcat
strcmp
strcoll
strcpy
strcspn
strdup
strncasecmp
strncat
strndup
strspn
strtod
strtof
strtok
strtok_r
strtol
strtold
strtoll
strtoul
strtoull
strxfrm
system
tanf
tanhf
tanhl
tanl
times
tmpfile
tmpfile64
toascii
uname
ungetc
unlink
unsetenv
utime
utimes
valloc
vfprintf
vfscanf
vprintf
vscanf
vsnprintf
vsprintf
vsscanf
write
Target Library Information
targetlibinfo
fwrite$UNIX2003
fputs$UNIX2003
_copysign
__exp10
__exp10f
no-frame-pointer-elim
less-precise-fpmad
unsafe-fp-math
no-infs-fp-math
use-soft-float
disable-tail-calls
No DataLayout in TargetMachine
TargetMachine can't emit a file of this type
misched-bench
Migrate from the target's default SD scheduler to MI scheduler
mc-x86-disable-arith-relaxation
Disable relaxation of arithmetic instruction for X86
x86_64h
i386
i486
i586
pentium
pentium-mmx
i686
k6-2
k6-3
geode
winchip-c6
winchip2
c3-2
reloc_riprel_4byte
reloc_riprel_4byte_movq_load
reloc_signed_4byte
reloc_global_offset_table
unexpected instruction to relax: 
GR16
GR16_NOREX
VK16
VK16WM
VK1WM
VK2WM
VK4WM
VK8WM
GR16_ABCD
FPCCR
GR32
GR32_NOAX
GR32_NOSP
GR32_NOAX_and_GR32_NOSP
GR32_NOREX
VK32
GR32_NOAX_and_GR32_NOREX
GR32_NOREX_NOSP
VK32WM
GR32_NOAX_and_GR32_NOREX_NOSP
GR32_ABCD
GR32_ABCD_and_GR32_NOAX
GR32_TC
GR32_AD
GR32_NOAX_and_GR32_TC
GR32_AD_and_GR32_NOAX
RFP64
FR64X
FR64
GR64_with_sub_8bit
GR64_NOSP
GR64_with_sub_32bit_in_GR32_NOAX
GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOSP
GR64_TC
GR64_NOSP_and_GR64_TC
GR64_with_sub_16bit_in_GR16_NOREX
VK64
GR64_NOREX_NOSP
GR64_TC_and_GR64_with_sub_32bit_in_GR32_NOAX
GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOREX
VK64WM
GR64_NOREX_and_GR64_TC
GR64_TCW64
GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOREX_NOSP
GR64_NOREX_NOSP_and_GR64_TC
GR64_TCW64_and_GR64_with_sub_32bit_in_GR32_NOAX
GR64_ABCD
GR64_TC_and_GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_NOREX
GR64_with_sub_32bit_in_GR32_ABCD_and_GR32_NOAX
GR64_with_sub_32bit_in_GR32_TC
GR64_with_sub_32bit_in_GR32_AD
GR64_with_sub_32bit_in_GR32_NOAX_and_GR32_TC
GR64_with_sub_32bit_in_GR32_AD_and_GR32_NOAX
RFP80
VR128X
VR128
VR256X
VR256
VR512
VR512_with_sub_xmm_in_FR32
16bit-mode
16-bit mode (i8086)
32bit-mode
32-bit mode (80386)
3dnow
Enable 3DNow! instructions
3dnowa
Enable 3DNow! Athlon instructions
64bit
Support 64-bit instructions
64bit-mode
64-bit mode (x86_64)
Support ADX instructions
Enable AES instructions
atom
Intel Atom processors
Enable AVX instructions
avx2
Enable AVX2 instructions
avx512bw
Enable AVX-512 Byte and Word Instructions
avx512cd
Enable AVX-512 Conflict Detection Instructions
avx512dq
Enable AVX-512 Doubleword and Quadword Instructions
avx512er
Enable AVX-512 Exponential and Reciprocal Instructions
avx512f
Enable AVX-512 instructions
avx512pf
Enable AVX-512 PreFetch Instructions
avx512vl
Enable AVX-512 Vector Length eXtensions
Support BMI instructions
bmi2
Support BMI2 instructions
call-reg-indirect
Call register indirect
cmov
Enable conditional move instructions
cx16
64-bit with cmpxchg16b
f16c
Support 16-bit floating point conversion instructions
fast-unaligned-mem
Fast unaligned memory access
Enable three-operand fused multiple-add
fma4
Enable four-operand fused multiple-add
fsgsbase
Support FS/GS Base instructions
Support HLE
idiv-to-divb
Use small divide for positive values less than 256
lea-sp
Use LEA for adjusting the stack pointer
lea-uses-ag
LEA instruction needs inputs at AG stage
lzcnt
Support LZCNT instruction
Enable MMX instructions
movbe
Support MOVBE instruction
pad-short-functions
Pad short functions
pclmul
Enable packed carry-less multiplication instructions
popcnt
Support POPCNT instruction
prfchw
Support PRFCHW instructions
rdrnd
Support RDRAND instruction
rdseed
Support RDSEED instruction
Support RTM instructions
Support SGX instructions
Enable SHA instructions
Intel Silvermont processors
slow-bt-mem
Bit testing of memory is slow
slow-incdec
INC and DEC instructions are slower than ADD and SUB
slow-lea
LEA instruction with certain arguments is slow
slow-shld
SHLD instruction is slow
Enable SSE instructions
sse2
Enable SSE2 instructions
sse3
Enable SSE3 instructions
sse4.1
Enable SSE 4.1 instructions
sse4.2
Enable SSE 4.2 instructions
sse4a
Support SSE 4a instructions
ssse3
Enable SSSE3 instructions
Enable TBM instructions
vector-unaligned-mem
Allow unaligned memory operands on vector/SIMD instructions
Enable XOP instructions
amdfam10
Select the amdfam10 processor
athlon
Select the athlon processor
athlon-4
Select the athlon-4 processor
athlon-fx
Select the athlon-fx processor
athlon-mp
Select the athlon-mp processor
athlon-tbird
Select the athlon-tbird processor
athlon-xp
Select the athlon-xp processor
athlon64
Select the athlon64 processor
athlon64-sse3
Select the athlon64-sse3 processor
Select the atom processor
bdver1
Select the bdver1 processor
bdver2
Select the bdver2 processor
bdver3
Select the bdver3 processor
bdver4
Select the bdver4 processor
btver1
Select the btver1 processor
btver2
Select the btver2 processor
Select the c3 processor
Select the c3-2 processor
core-avx-i
Select the core-avx-i processor
core-avx2
Select the core-avx2 processor
core2
Select the core2 processor
corei7
Select the corei7 processor
corei7-avx
Select the corei7-avx processor
Select the geode processor
Select the i386 processor
Select the i486 processor
Select the i586 processor
Select the i686 processor
Select the k6 processor
Select the k6-2 processor
Select the k6-3 processor
Select the k8 processor
k8-sse3
Select the k8-sse3 processor
Select the knl processor
nehalem
Select the nehalem processor
nocona
Select the nocona processor
opteron
Select the opteron processor
opteron-sse3
Select the opteron-sse3 processor
penryn
Select the penryn processor
Select the pentium processor
pentium-m
Select the pentium-m processor
Select the pentium-mmx processor
pentium2
Select the pentium2 processor
pentium3
Select the pentium3 processor
pentium3m
Select the pentium3m processor
pentium4
Select the pentium4 processor
pentium4m
Select the pentium4m processor
pentiumpro
Select the pentiumpro processor
prescott
Select the prescott processor
Select the skx processor
Select the slm processor
westmere
Select the westmere processor
Select the winchip-c6 processor
Select the winchip2 processor
x86-64
Select the x86-64 processor
yonah
Select the yonah processor
+64bit-mode,-32bit-mode,-16bit-mode
-64bit-mode,+32bit-mode,-16bit-mode
-64bit-mode,-32bit-mode,+16bit-mode
x86-asm-syntax
Choose style of code to emit from X86 backend:
Emit AT&T-style assembly
intel
Emit Intel-style assembly
mark-data-regions
Mark code section jump table data regions.
.note.GNU-stack
FORM: 
unsupported relocation with subtraction expression
unsupported relocation of undefined symbol '
unsupported symbol modifier in relocation
unsupported symbol modifier in branch relocation
TLVP symbol modifier should have been rip-rel
32-bit absolute addressing is not supported in 64-bit mode
symbol '
' can not be undefined in a subtraction expression
0x%x
Section too large, can't encode r_address (
) into 24 bits of scattered relocation entry.
Expected X86_64_RELOC_UNSIGNED after X86_64_RELOC_SUBTRACTOR.
!<arch>
__.SYMDEF
__.SYMDEF SORTED
COFF-i386
COFF-x86-64
COFF-ARM
COFF-<unknown arch>
getRelocationAddress not implemented in COFFObjectFile
IMAGE_REL_AMD64_ABSOLUTE
IMAGE_REL_AMD64_ADDR64
IMAGE_REL_AMD64_ADDR32
IMAGE_REL_AMD64_ADDR32NB
IMAGE_REL_AMD64_REL32
IMAGE_REL_AMD64_REL32_1
IMAGE_REL_AMD64_REL32_2
IMAGE_REL_AMD64_REL32_3
IMAGE_REL_AMD64_REL32_4
IMAGE_REL_AMD64_REL32_5
IMAGE_REL_AMD64_SECTION
IMAGE_REL_AMD64_SECREL
IMAGE_REL_AMD64_SECREL7
IMAGE_REL_AMD64_TOKEN
IMAGE_REL_AMD64_SREL32
IMAGE_REL_AMD64_PAIR
IMAGE_REL_AMD64_SSPAN32
IMAGE_REL_ARM_ABSOLUTE
IMAGE_REL_ARM_ADDR32
IMAGE_REL_ARM_ADDR32NB
IMAGE_REL_ARM_BRANCH24
IMAGE_REL_ARM_BRANCH11
IMAGE_REL_ARM_TOKEN
IMAGE_REL_ARM_BLX24
IMAGE_REL_ARM_BLX11
IMAGE_REL_ARM_SECTION
IMAGE_REL_ARM_SECREL
IMAGE_REL_ARM_MOV32A
IMAGE_REL_ARM_MOV32T
IMAGE_REL_ARM_BRANCH20T
IMAGE_REL_ARM_BRANCH24T
IMAGE_REL_ARM_BLX23T
IMAGE_REL_I386_ABSOLUTE
IMAGE_REL_I386_DIR16
IMAGE_REL_I386_REL16
IMAGE_REL_I386_DIR32
IMAGE_REL_I386_DIR32NB
IMAGE_REL_I386_SEG12
IMAGE_REL_I386_SECTION
IMAGE_REL_I386_SECREL
IMAGE_REL_I386_TOKEN
IMAGE_REL_I386_SECREL7
IMAGE_REL_I386_REL32
IMAGE_COMDAT_SELECT_NODUPLICATES
IMAGE_COMDAT_SELECT_ANY
IMAGE_COMDAT_SELECT_SAME_SIZE
IMAGE_COMDAT_SELECT_EXACT_MATCH
IMAGE_COMDAT_SELECT_ASSOCIATIVE
IMAGE_COMDAT_SELECT_LARGEST
IMAGE_COMDAT_SELECT_NEWEST
IMAGE_WEAK_EXTERN_SEARCH_NOLIBRARY
IMAGE_WEAK_EXTERN_SEARCH_LIBRARY
IMAGE_WEAK_EXTERN_SEARCH_ALIAS
IMAGE_AUX_SYMBOL_TYPE_TOKEN_DEF
IMAGE_FILE_MACHINE_UNKNOWN
IMAGE_FILE_MACHINE_AM33
IMAGE_FILE_MACHINE_AMD64
IMAGE_FILE_MACHINE_ARM
IMAGE_FILE_MACHINE_ARMNT
IMAGE_FILE_MACHINE_EBC
IMAGE_FILE_MACHINE_I386
IMAGE_FILE_MACHINE_IA64
IMAGE_FILE_MACHINE_M32R
IMAGE_FILE_MACHINE_MIPS16
IMAGE_FILE_MACHINE_MIPSFPU
IMAGE_FILE_MACHINE_MIPSFPU16
IMAGE_FILE_MACHINE_POWERPC
IMAGE_FILE_MACHINE_POWERPCFP
IMAGE_FILE_MACHINE_R4000
IMAGE_FILE_MACHINE_SH3
IMAGE_FILE_MACHINE_SH3DSP
IMAGE_FILE_MACHINE_SH4
IMAGE_FILE_MACHINE_SH5
IMAGE_FILE_MACHINE_THUMB
IMAGE_FILE_MACHINE_WCEMIPSV2
IMAGE_SYM_TYPE_NULL
IMAGE_SYM_TYPE_VOID
IMAGE_SYM_TYPE_CHAR
IMAGE_SYM_TYPE_SHORT
IMAGE_SYM_TYPE_INT
IMAGE_SYM_TYPE_LONG
IMAGE_SYM_TYPE_FLOAT
IMAGE_SYM_TYPE_DOUBLE
IMAGE_SYM_TYPE_STRUCT
IMAGE_SYM_TYPE_UNION
IMAGE_SYM_TYPE_ENUM
IMAGE_SYM_TYPE_MOE
IMAGE_SYM_TYPE_BYTE
IMAGE_SYM_TYPE_WORD
IMAGE_SYM_TYPE_UINT
IMAGE_SYM_TYPE_DWORD
IMAGE_SYM_CLASS_END_OF_FUNCTION
IMAGE_SYM_CLASS_NULL
IMAGE_SYM_CLASS_AUTOMATIC
IMAGE_SYM_CLASS_EXTERNAL
IMAGE_SYM_CLASS_STATIC
IMAGE_SYM_CLASS_REGISTER
IMAGE_SYM_CLASS_EXTERNAL_DEF
IMAGE_SYM_CLASS_LABEL
IMAGE_SYM_CLASS_UNDEFINED_LABEL
IMAGE_SYM_CLASS_MEMBER_OF_STRUCT
IMAGE_SYM_CLASS_ARGUMENT
IMAGE_SYM_CLASS_STRUCT_TAG
IMAGE_SYM_CLASS_MEMBER_OF_UNION
IMAGE_SYM_CLASS_UNION_TAG
IMAGE_SYM_CLASS_TYPE_DEFINITION
IMAGE_SYM_CLASS_UNDEFINED_STATIC
IMAGE_SYM_CLASS_ENUM_TAG
IMAGE_SYM_CLASS_MEMBER_OF_ENUM
IMAGE_SYM_CLASS_REGISTER_PARAM
IMAGE_SYM_CLASS_BIT_FIELD
IMAGE_SYM_CLASS_BLOCK
IMAGE_SYM_CLASS_FUNCTION
IMAGE_SYM_CLASS_END_OF_STRUCT
IMAGE_SYM_CLASS_FILE
IMAGE_SYM_CLASS_SECTION
IMAGE_SYM_CLASS_WEAK_EXTERNAL
IMAGE_SYM_CLASS_CLR_TOKEN
IMAGE_SYM_DTYPE_NULL
IMAGE_SYM_DTYPE_POINTER
IMAGE_SYM_DTYPE_FUNCTION
IMAGE_SYM_DTYPE_ARRAY
IMAGE_FILE_RELOCS_STRIPPED
IMAGE_FILE_EXECUTABLE_IMAGE
IMAGE_FILE_LINE_NUMS_STRIPPED
IMAGE_FILE_LOCAL_SYMS_STRIPPED
IMAGE_FILE_AGGRESSIVE_WS_TRIM
IMAGE_FILE_LARGE_ADDRESS_AWARE
IMAGE_FILE_BYTES_REVERSED_LO
IMAGE_FILE_32BIT_MACHINE
IMAGE_FILE_DEBUG_STRIPPED
IMAGE_FILE_REMOVABLE_RUN_FROM_SWAP
IMAGE_FILE_NET_RUN_FROM_SWAP
IMAGE_FILE_SYSTEM
IMAGE_FILE_DLL
IMAGE_FILE_UP_SYSTEM_ONLY
IMAGE_FILE_BYTES_REVERSED_HI
IMAGE_SCN_TYPE_NO_PAD
IMAGE_SCN_CNT_CODE
IMAGE_SCN_CNT_INITIALIZED_DATA
IMAGE_SCN_CNT_UNINITIALIZED_DATA
IMAGE_SCN_LNK_OTHER
IMAGE_SCN_LNK_INFO
IMAGE_SCN_LNK_REMOVE
IMAGE_SCN_LNK_COMDAT
IMAGE_SCN_GPREL
IMAGE_SCN_MEM_PURGEABLE
IMAGE_SCN_MEM_16BIT
IMAGE_SCN_MEM_LOCKED
IMAGE_SCN_MEM_PRELOAD
IMAGE_SCN_LNK_NRELOC_OVFL
IMAGE_SCN_MEM_DISCARDABLE
IMAGE_SCN_MEM_NOT_CACHED
IMAGE_SCN_MEM_NOT_PAGED
IMAGE_SCN_MEM_SHARED
IMAGE_SCN_MEM_EXECUTE
IMAGE_SCN_MEM_READ
IMAGE_SCN_MEM_WRITE
VirtualAddress
SymbolName
Type
Machine
Characteristics
TagIndex
TotalSize
PointerToLinenumber
PointerToNextFunction
Linenumber
Length
NumberOfRelocations
NumberOfLinenumbers
CheckSum
Number
Selection
AuxType
SymbolTableIndex
Name
Value
SectionNumber
SimpleType
ComplexType
StorageClass
FunctionDefinition
bfAndefSymbol
WeakExternal
File
SectionDefinition
CLRToken
Alignment
SectionData
Relocations
header
sections
symbols
Null
NULL
True
TRUE
False
FALSE
.nan
.NaN
.NAN
.inf
.Inf
.INF
^(\.[0-9]+|[0-9]+(\.[0-9]*)?)([eE][-+]?[0-9]+)?$
R_X86_64_NONE
R_X86_64_64
R_X86_64_PC32
R_X86_64_GOT32
R_X86_64_PLT32
R_X86_64_COPY
R_X86_64_GLOB_DAT
R_X86_64_JUMP_SLOT
R_X86_64_RELATIVE
R_X86_64_GOTPCREL
R_X86_64_32
R_X86_64_32S
R_X86_64_16
R_X86_64_PC16
R_X86_64_8
R_X86_64_PC8
R_X86_64_DTPMOD64
R_X86_64_DTPOFF64
R_X86_64_TPOFF64
R_X86_64_TLSGD
R_X86_64_TLSLD
R_X86_64_DTPOFF32
R_X86_64_GOTTPOFF
R_X86_64_TPOFF32
R_X86_64_PC64
R_X86_64_GOTOFF64
R_X86_64_GOTPC32
R_X86_64_GOT64
R_X86_64_GOTPCREL64
R_X86_64_GOTPC64
R_X86_64_GOTPLT64
R_X86_64_PLTOFF64
R_X86_64_SIZE32
R_X86_64_SIZE64
R_X86_64_GOTPC32_TLSDESC
R_X86_64_TLSDESC_CALL
R_X86_64_TLSDESC
R_X86_64_IRELATIVE
R_386_NONE
R_386_32
R_386_PC32
R_386_GOT32
R_386_PLT32
R_386_COPY
R_386_GLOB_DAT
R_386_JUMP_SLOT
R_386_RELATIVE
R_386_GOTOFF
R_386_GOTPC
R_386_32PLT
R_386_TLS_TPOFF
R_386_TLS_IE
R_386_TLS_GOTIE
R_386_TLS_LE
R_386_TLS_GD
R_386_TLS_LDM
R_386_16
R_386_PC16
R_386_8
R_386_PC8
R_386_TLS_GD_32
R_386_TLS_GD_PUSH
R_386_TLS_GD_CALL
R_386_TLS_GD_POP
R_386_TLS_LDM_32
R_386_TLS_LDM_PUSH
R_386_TLS_LDM_CALL
R_386_TLS_LDM_POP
R_386_TLS_LDO_32
R_386_TLS_IE_32
R_386_TLS_LE_32
R_386_TLS_DTPMOD32
R_386_TLS_DTPOFF32
R_386_TLS_TPOFF32
R_386_TLS_GOTDESC
R_386_TLS_DESC_CALL
R_386_TLS_DESC
R_386_IRELATIVE
R_MIPS_NONE
R_MIPS_16
R_MIPS_32
R_MIPS_REL32
R_MIPS_26
R_MIPS_HI16
R_MIPS_LO16
R_MIPS_GPREL16
R_MIPS_LITERAL
R_MIPS_GOT16
R_MIPS_PC16
R_MIPS_CALL16
R_MIPS_GPREL32
R_MIPS_SHIFT5
R_MIPS_SHIFT6
R_MIPS_64
R_MIPS_GOT_DISP
R_MIPS_GOT_PAGE
R_MIPS_GOT_OFST
R_MIPS_GOT_HI16
R_MIPS_GOT_LO16
R_MIPS_SUB
R_MIPS_INSERT_A
R_MIPS_INSERT_B
R_MIPS_DELETE
R_MIPS_HIGHER
R_MIPS_HIGHEST
R_MIPS_CALL_HI16
R_MIPS_CALL_LO16
R_MIPS_SCN_DISP
R_MIPS_REL16
R_MIPS_ADD_IMMEDIATE
R_MIPS_PJUMP
R_MIPS_RELGOT
R_MIPS_JALR
R_MIPS_TLS_DTPMOD32
R_MIPS_TLS_DTPREL32
R_MIPS_TLS_DTPMOD64
R_MIPS_TLS_DTPREL64
R_MIPS_TLS_GD
R_MIPS_TLS_LDM
R_MIPS_TLS_DTPREL_HI16
R_MIPS_TLS_DTPREL_LO16
R_MIPS_TLS_GOTTPREL
R_MIPS_TLS_TPREL32
R_MIPS_TLS_TPREL64
R_MIPS_TLS_TPREL_HI16
R_MIPS_TLS_TPREL_LO16
R_MIPS_GLOB_DAT
R_MIPS_PC21_S2
R_MIPS_PC26_S2
R_MIPS_PC18_S3
R_MIPS_PC19_S2
R_MIPS_PCHI16
R_MIPS_PCLO16
R_MIPS16_GOT16
R_MIPS16_HI16
R_MIPS16_LO16
R_MIPS_COPY
R_MIPS_JUMP_SLOT
R_MICROMIPS_26_S1
R_MICROMIPS_HI16
R_MICROMIPS_LO16
R_MICROMIPS_GOT16
R_MICROMIPS_PC16_S1
R_MICROMIPS_CALL16
R_MICROMIPS_GOT_DISP
R_MICROMIPS_GOT_PAGE
R_MICROMIPS_GOT_OFST
R_MICROMIPS_TLS_GD
R_MICROMIPS_TLS_LDM
R_MICROMIPS_TLS_DTPREL_HI16
R_MICROMIPS_TLS_DTPREL_LO16
R_MICROMIPS_TLS_TPREL_HI16
R_MICROMIPS_TLS_TPREL_LO16
R_MIPS_NUM
R_MIPS_PC32
R_AARCH64_NONE
R_AARCH64_ABS64
R_AARCH64_ABS32
R_AARCH64_ABS16
R_AARCH64_PREL64
R_AARCH64_PREL32
R_AARCH64_PREL16
R_AARCH64_MOVW_UABS_G0
R_AARCH64_MOVW_UABS_G0_NC
R_AARCH64_MOVW_UABS_G1
R_AARCH64_MOVW_UABS_G1_NC
R_AARCH64_MOVW_UABS_G2
R_AARCH64_MOVW_UABS_G2_NC
R_AARCH64_MOVW_UABS_G3
R_AARCH64_MOVW_SABS_G0
R_AARCH64_MOVW_SABS_G1
R_AARCH64_MOVW_SABS_G2
R_AARCH64_LD_PREL_LO19
R_AARCH64_ADR_PREL_LO21
R_AARCH64_ADR_PREL_PG_HI21
R_AARCH64_ADD_ABS_LO12_NC
R_AARCH64_LDST8_ABS_LO12_NC
R_AARCH64_TSTBR14
R_AARCH64_CONDBR19
R_AARCH64_JUMP26
R_AARCH64_CALL26
R_AARCH64_LDST16_ABS_LO12_NC
R_AARCH64_LDST32_ABS_LO12_NC
R_AARCH64_LDST64_ABS_LO12_NC
R_AARCH64_LDST128_ABS_LO12_NC
R_AARCH64_GOTREL64
R_AARCH64_GOTREL32
R_AARCH64_ADR_GOT_PAGE
R_AARCH64_LD64_GOT_LO12_NC
R_AARCH64_TLSLD_MOVW_DTPREL_G2
R_AARCH64_TLSLD_MOVW_DTPREL_G1
R_AARCH64_TLSLD_MOVW_DTPREL_G1_NC
R_AARCH64_TLSLD_MOVW_DTPREL_G0
R_AARCH64_TLSLD_MOVW_DTPREL_G0_NC
R_AARCH64_TLSLD_ADD_DTPREL_HI12
R_AARCH64_TLSLD_ADD_DTPREL_LO12
R_AARCH64_TLSLD_ADD_DTPREL_LO12_NC
R_AARCH64_TLSLD_LDST8_DTPREL_LO12
R_AARCH64_TLSLD_LDST8_DTPREL_LO12_NC
R_AARCH64_TLSLD_LDST16_DTPREL_LO12
R_AARCH64_TLSLD_LDST16_DTPREL_LO12_NC
R_AARCH64_TLSLD_LDST32_DTPREL_LO12
R_AARCH64_TLSLD_LDST32_DTPREL_LO12_NC
R_AARCH64_TLSLD_LDST64_DTPREL_LO12
R_AARCH64_TLSLD_LDST64_DTPREL_LO12_NC
R_AARCH64_TLSIE_MOVW_GOTTPREL_G1
R_AARCH64_TLSIE_MOVW_GOTTPREL_G0_NC
R_AARCH64_TLSIE_ADR_GOTTPREL_PAGE21
R_AARCH64_TLSIE_LD64_GOTTPREL_LO12_NC
R_AARCH64_TLSIE_LD_GOTTPREL_PREL19
R_AARCH64_TLSLE_MOVW_TPREL_G2
R_AARCH64_TLSLE_MOVW_TPREL_G1
R_AARCH64_TLSLE_MOVW_TPREL_G1_NC
R_AARCH64_TLSLE_MOVW_TPREL_G0
R_AARCH64_TLSLE_MOVW_TPREL_G0_NC
R_AARCH64_TLSLE_ADD_TPREL_HI12
R_AARCH64_TLSLE_ADD_TPREL_LO12
R_AARCH64_TLSLE_ADD_TPREL_LO12_NC
R_AARCH64_TLSLE_LDST8_TPREL_LO12
R_AARCH64_TLSLE_LDST8_TPREL_LO12_NC
R_AARCH64_TLSLE_LDST16_TPREL_LO12
R_AARCH64_TLSLE_LDST16_TPREL_LO12_NC
R_AARCH64_TLSLE_LDST32_TPREL_LO12
R_AARCH64_TLSLE_LDST32_TPREL_LO12_NC
R_AARCH64_TLSLE_LDST64_TPREL_LO12
R_AARCH64_TLSLE_LDST64_TPREL_LO12_NC
R_AARCH64_TLSDESC_ADR_PAGE
R_AARCH64_TLSDESC_LD64_LO12_NC
R_AARCH64_TLSDESC_ADD_LO12_NC
R_AARCH64_TLSDESC_CALL
R_AARCH64_COPY
R_AARCH64_GLOB_DAT
R_AARCH64_JUMP_SLOT
R_AARCH64_RELATIVE
R_AARCH64_TLS_DTPREL64
R_AARCH64_TLS_DTPMOD64
R_AARCH64_TLS_TPREL64
R_AARCH64_TLSDESC
R_AARCH64_IRELATIVE
R_ARM_NONE
R_ARM_PC24
R_ARM_ABS32
R_ARM_REL32
R_ARM_LDR_PC_G0
R_ARM_ABS16
R_ARM_ABS12
R_ARM_THM_ABS5
R_ARM_ABS8
R_ARM_SBREL32
R_ARM_THM_CALL
R_ARM_THM_PC8
R_ARM_BREL_ADJ
R_ARM_TLS_DESC
R_ARM_THM_SWI8
R_ARM_XPC25
R_ARM_THM_XPC22
R_ARM_TLS_DTPMOD32
R_ARM_TLS_DTPOFF32
R_ARM_TLS_TPOFF32
R_ARM_COPY
R_ARM_GLOB_DAT
R_ARM_JUMP_SLOT
R_ARM_RELATIVE
R_ARM_GOTOFF32
R_ARM_BASE_PREL
R_ARM_GOT_BREL
R_ARM_PLT32
R_ARM_CALL
R_ARM_JUMP24
R_ARM_THM_JUMP24
R_ARM_BASE_ABS
R_ARM_ALU_PCREL_7_0
R_ARM_ALU_PCREL_15_8
R_ARM_ALU_PCREL_23_15
R_ARM_LDR_SBREL_11_0_NC
R_ARM_ALU_SBREL_19_12_NC
R_ARM_ALU_SBREL_27_20_CK
R_ARM_TARGET1
R_ARM_SBREL31
R_ARM_V4BX
R_ARM_TARGET2
R_ARM_PREL31
R_ARM_MOVW_ABS_NC
R_ARM_MOVT_ABS
R_ARM_MOVW_PREL_NC
R_ARM_MOVT_PREL
R_ARM_THM_MOVW_ABS_NC
R_ARM_THM_MOVT_ABS
R_ARM_THM_MOVW_PREL_NC
R_ARM_THM_MOVT_PREL
R_ARM_THM_JUMP19
R_ARM_THM_JUMP6
R_ARM_THM_ALU_PREL_11_0
R_ARM_THM_PC12
R_ARM_ABS32_NOI
R_ARM_REL32_NOI
R_ARM_ALU_PC_G0_NC
R_ARM_ALU_PC_G0
R_ARM_ALU_PC_G1_NC
R_ARM_ALU_PC_G1
R_ARM_ALU_PC_G2
R_ARM_LDR_PC_G1
R_ARM_LDR_PC_G2
R_ARM_LDRS_PC_G0
R_ARM_LDRS_PC_G1
R_ARM_LDRS_PC_G2
R_ARM_LDC_PC_G0
R_ARM_LDC_PC_G1
R_ARM_LDC_PC_G2
R_ARM_ALU_SB_G0_NC
R_ARM_ALU_SB_G0
R_ARM_ALU_SB_G1_NC
R_ARM_ALU_SB_G1
R_ARM_ALU_SB_G2
R_ARM_LDR_SB_G0
R_ARM_LDR_SB_G1
R_ARM_LDR_SB_G2
R_ARM_LDRS_SB_G0
R_ARM_LDRS_SB_G1
R_ARM_LDRS_SB_G2
R_ARM_LDC_SB_G0
R_ARM_LDC_SB_G1
R_ARM_LDC_SB_G2
R_ARM_MOVW_BREL_NC
R_ARM_MOVT_BREL
R_ARM_MOVW_BREL
R_ARM_THM_MOVW_BREL_NC
R_ARM_THM_MOVT_BREL
R_ARM_THM_MOVW_BREL
R_ARM_TLS_GOTDESC
R_ARM_TLS_CALL
R_ARM_TLS_DESCSEQ
R_ARM_THM_TLS_CALL
R_ARM_PLT32_ABS
R_ARM_GOT_ABS
R_ARM_GOT_PREL
R_ARM_GOT_BREL12
R_ARM_GOTOFF12
R_ARM_GOTRELAX
R_ARM_GNU_VTENTRY
R_ARM_GNU_VTINHERIT
R_ARM_THM_JUMP11
R_ARM_THM_JUMP8
R_ARM_TLS_GD32
R_ARM_TLS_LDM32
R_ARM_TLS_LDO32
R_ARM_TLS_IE32
R_ARM_TLS_LE32
R_ARM_TLS_LDO12
R_ARM_TLS_LE12
R_ARM_TLS_IE12GP
R_ARM_PRIVATE_0
R_ARM_PRIVATE_1
R_ARM_PRIVATE_2
R_ARM_PRIVATE_3
R_ARM_PRIVATE_4
R_ARM_PRIVATE_5
R_ARM_PRIVATE_6
R_ARM_PRIVATE_7
R_ARM_PRIVATE_8
R_ARM_PRIVATE_9
R_ARM_PRIVATE_10
R_ARM_PRIVATE_11
R_ARM_PRIVATE_12
R_ARM_PRIVATE_13
R_ARM_PRIVATE_14
R_ARM_PRIVATE_15
R_ARM_ME_TOO
R_ARM_THM_TLS_DESCSEQ16
R_ARM_THM_TLS_DESCSEQ32
R_HEX_NONE
R_HEX_B22_PCREL
R_HEX_B15_PCREL
R_HEX_B7_PCREL
R_HEX_LO16
R_HEX_HI16
R_HEX_32
R_HEX_16
R_HEX_8
R_HEX_GPREL16_0
R_HEX_GPREL16_1
R_HEX_GPREL16_2
R_HEX_GPREL16_3
R_HEX_HL16
R_HEX_B13_PCREL
R_HEX_B9_PCREL
R_HEX_B32_PCREL_X
R_HEX_32_6_X
R_HEX_B22_PCREL_X
R_HEX_B15_PCREL_X
R_HEX_B13_PCREL_X
R_HEX_B9_PCREL_X
R_HEX_B7_PCREL_X
R_HEX_16_X
R_HEX_12_X
R_HEX_11_X
R_HEX_10_X
R_HEX_9_X
R_HEX_8_X
R_HEX_7_X
R_HEX_6_X
R_HEX_32_PCREL
R_HEX_COPY
R_HEX_GLOB_DAT
R_HEX_JMP_SLOT
R_HEX_RELATIVE
R_HEX_PLT_B22_PCREL
R_HEX_GOTREL_LO16
R_HEX_GOTREL_HI16
R_HEX_GOTREL_32
R_HEX_GOT_LO16
R_HEX_GOT_HI16
R_HEX_GOT_32
R_HEX_GOT_16
R_HEX_DTPMOD_32
R_HEX_DTPREL_LO16
R_HEX_DTPREL_HI16
R_HEX_DTPREL_32
R_HEX_DTPREL_16
R_HEX_GD_PLT_B22_PCREL
R_HEX_GD_GOT_LO16
R_HEX_GD_GOT_HI16
R_HEX_GD_GOT_32
R_HEX_GD_GOT_16
R_HEX_IE_LO16
R_HEX_IE_HI16
R_HEX_IE_32
R_HEX_IE_GOT_LO16
R_HEX_IE_GOT_HI16
R_HEX_IE_GOT_32
R_HEX_IE_GOT_16
R_HEX_TPREL_LO16
R_HEX_TPREL_HI16
R_HEX_TPREL_32
R_HEX_TPREL_16
R_HEX_6_PCREL_X
R_HEX_GOTREL_32_6_X
R_HEX_GOTREL_16_X
R_HEX_GOTREL_11_X
R_HEX_GOT_32_6_X
R_HEX_GOT_16_X
R_HEX_GOT_11_X
R_HEX_DTPREL_32_6_X
R_HEX_DTPREL_16_X
R_HEX_DTPREL_11_X
R_HEX_GD_GOT_32_6_X
R_HEX_GD_GOT_16_X
R_HEX_GD_GOT_11_X
R_HEX_IE_32_6_X
R_HEX_IE_16_X
R_HEX_IE_GOT_32_6_X
R_HEX_IE_GOT_16_X
R_HEX_IE_GOT_11_X
R_HEX_TPREL_32_6_X
R_HEX_TPREL_16_X
R_HEX_TPREL_11_X
R_PPC_NONE
R_PPC_ADDR32
R_PPC_ADDR24
R_PPC_ADDR16
R_PPC_ADDR16_LO
R_PPC_ADDR16_HI
R_PPC_ADDR16_HA
R_PPC_ADDR14
R_PPC_ADDR14_BRTAKEN
R_PPC_ADDR14_BRNTAKEN
R_PPC_REL24
R_PPC_REL14
R_PPC_REL14_BRTAKEN
R_PPC_REL14_BRNTAKEN
R_PPC_GOT16
R_PPC_GOT16_LO
R_PPC_GOT16_HI
R_PPC_GOT16_HA
R_PPC_PLTREL24
R_PPC_REL32
R_PPC_TLS
R_PPC_DTPMOD32
R_PPC_TPREL16
R_PPC_TPREL16_LO
R_PPC_TPREL16_HI
R_PPC_TPREL16_HA
R_PPC_TPREL32
R_PPC_DTPREL16
R_PPC_DTPREL16_LO
R_PPC_DTPREL16_HI
R_PPC_DTPREL16_HA
R_PPC_DTPREL32
R_PPC_GOT_TLSGD16
R_PPC_GOT_TLSGD16_LO
R_PPC_GOT_TLSGD16_HI
R_PPC_GOT_TLSGD16_HA
R_PPC_GOT_TLSLD16
R_PPC_GOT_TLSLD16_LO
R_PPC_GOT_TLSLD16_HI
R_PPC_GOT_TLSLD16_HA
R_PPC_GOT_TPREL16
R_PPC_GOT_TPREL16_LO
R_PPC_GOT_TPREL16_HI
R_PPC_GOT_TPREL16_HA
R_PPC_GOT_DTPREL16
R_PPC_GOT_DTPREL16_LO
R_PPC_GOT_DTPREL16_HI
R_PPC_GOT_DTPREL16_HA
R_PPC_TLSGD
R_PPC_TLSLD
R_PPC_REL16
R_PPC_REL16_LO
R_PPC_REL16_HI
R_PPC_REL16_HA
R_PPC64_NONE
R_PPC64_ADDR32
R_PPC64_ADDR24
R_PPC64_ADDR16
R_PPC64_ADDR16_LO
R_PPC64_ADDR16_HI
R_PPC64_ADDR16_HA
R_PPC64_ADDR14
R_PPC64_ADDR14_BRTAKEN
R_PPC64_ADDR14_BRNTAKEN
R_PPC64_REL24
R_PPC64_REL14
R_PPC64_REL14_BRTAKEN
R_PPC64_REL14_BRNTAKEN
R_PPC64_GOT16
R_PPC64_GOT16_LO
R_PPC64_GOT16_HI
R_PPC64_GOT16_HA
R_PPC64_REL32
R_PPC64_ADDR64
R_PPC64_ADDR16_HIGHER
R_PPC64_ADDR16_HIGHERA
R_PPC64_ADDR16_HIGHEST
R_PPC64_ADDR16_HIGHESTA
R_PPC64_REL64
R_PPC64_TOC16
R_PPC64_TOC16_LO
R_PPC64_TOC16_HI
R_PPC64_TOC16_HA
R_PPC64_TOC
R_PPC64_ADDR16_DS
R_PPC64_ADDR16_LO_DS
R_PPC64_GOT16_DS
R_PPC64_GOT16_LO_DS
R_PPC64_TOC16_DS
R_PPC64_TOC16_LO_DS
R_PPC64_TLS
R_PPC64_DTPMOD64
R_PPC64_TPREL16
R_PPC64_TPREL16_LO
R_PPC64_TPREL16_HI
R_PPC64_TPREL16_HA
R_PPC64_TPREL64
R_PPC64_DTPREL16
R_PPC64_DTPREL16_LO
R_PPC64_DTPREL16_HI
R_PPC64_DTPREL16_HA
R_PPC64_DTPREL64
R_PPC64_GOT_TLSGD16
R_PPC64_GOT_TLSGD16_LO
R_PPC64_GOT_TLSGD16_HI
R_PPC64_GOT_TLSGD16_HA
R_PPC64_GOT_TLSLD16
R_PPC64_GOT_TLSLD16_LO
R_PPC64_GOT_TLSLD16_HI
R_PPC64_GOT_TLSLD16_HA
R_PPC64_GOT_TPREL16_DS
R_PPC64_GOT_TPREL16_LO_DS
R_PPC64_GOT_TPREL16_HI
R_PPC64_GOT_TPREL16_HA
R_PPC64_GOT_DTPREL16_DS
R_PPC64_GOT_DTPREL16_LO_DS
R_PPC64_GOT_DTPREL16_HI
R_PPC64_GOT_DTPREL16_HA
R_PPC64_TPREL16_DS
R_PPC64_TPREL16_LO_DS
R_PPC64_TPREL16_HIGHER
R_PPC64_TPREL16_HIGHERA
R_PPC64_TPREL16_HIGHEST
R_PPC64_TPREL16_HIGHESTA
R_PPC64_DTPREL16_DS
R_PPC64_DTPREL16_LO_DS
R_PPC64_DTPREL16_HIGHER
R_PPC64_DTPREL16_HIGHERA
R_PPC64_DTPREL16_HIGHEST
R_PPC64_DTPREL16_HIGHESTA
R_PPC64_TLSGD
R_PPC64_TLSLD
R_PPC64_REL16
R_PPC64_REL16_LO
R_PPC64_REL16_HI
R_PPC64_REL16_HA
R_390_NONE
R_390_8
R_390_12
R_390_16
R_390_32
R_390_PC32
R_390_GOT12
R_390_GOT32
R_390_PLT32
R_390_COPY
R_390_GLOB_DAT
R_390_JMP_SLOT
R_390_RELATIVE
R_390_GOTOFF
R_390_GOTPC
R_390_GOT16
R_390_PC16
R_390_PC16DBL
R_390_PLT16DBL
R_390_PC32DBL
R_390_PLT32DBL
R_390_GOTPCDBL
R_390_64
R_390_PC64
R_390_GOT64
R_390_PLT64
R_390_GOTENT
R_390_GOTOFF16
R_390_GOTOFF64
R_390_GOTPLT12
R_390_GOTPLT16
R_390_GOTPLT32
R_390_GOTPLT64
R_390_GOTPLTENT
R_390_PLTOFF16
R_390_PLTOFF32
R_390_PLTOFF64
R_390_TLS_LOAD
R_390_TLS_GDCALL
R_390_TLS_LDCALL
R_390_TLS_GD32
R_390_TLS_GD64
R_390_TLS_GOTIE12
R_390_TLS_GOTIE32
R_390_TLS_GOTIE64
R_390_TLS_LDM32
R_390_TLS_LDM64
R_390_TLS_IE32
R_390_TLS_IE64
R_390_TLS_IEENT
R_390_TLS_LE32
R_390_TLS_LE64
R_390_TLS_LDO32
R_390_TLS_LDO64
R_390_TLS_DTPMOD
R_390_TLS_DTPOFF
R_390_TLS_TPOFF
R_390_20
R_390_GOT20
R_390_GOTPLT20
R_390_TLS_GOTIE20
R_390_IRELATIVE
R_SPARC_NONE
R_SPARC_8
R_SPARC_16
R_SPARC_32
R_SPARC_DISP8
R_SPARC_DISP16
R_SPARC_DISP32
R_SPARC_WDISP30
R_SPARC_WDISP22
R_SPARC_HI22
R_SPARC_22
R_SPARC_13
R_SPARC_LO10
R_SPARC_GOT10
R_SPARC_GOT13
R_SPARC_GOT22
R_SPARC_PC10
R_SPARC_PC22
R_SPARC_WPLT30
R_SPARC_COPY
R_SPARC_GLOB_DAT
R_SPARC_JMP_SLOT
R_SPARC_RELATIVE
R_SPARC_UA32
R_SPARC_PLT32
R_SPARC_HIPLT22
R_SPARC_LOPLT10
R_SPARC_PCPLT32
R_SPARC_PCPLT22
R_SPARC_PCPLT10
R_SPARC_10
R_SPARC_11
R_SPARC_64
R_SPARC_OLO10
R_SPARC_HH22
R_SPARC_HM10
R_SPARC_LM22
R_SPARC_PC_HH22
R_SPARC_PC_HM10
R_SPARC_PC_LM22
R_SPARC_WDISP16
R_SPARC_WDISP19
R_SPARC_7
R_SPARC_5
R_SPARC_6
R_SPARC_DISP64
R_SPARC_PLT64
R_SPARC_HIX22
R_SPARC_LOX10
R_SPARC_H44
R_SPARC_M44
R_SPARC_L44
R_SPARC_REGISTER
R_SPARC_UA64
R_SPARC_UA16
R_SPARC_TLS_GD_HI22
R_SPARC_TLS_GD_LO10
R_SPARC_TLS_GD_ADD
R_SPARC_TLS_GD_CALL
R_SPARC_TLS_LDM_HI22
R_SPARC_TLS_LDM_LO10
R_SPARC_TLS_LDM_ADD
R_SPARC_TLS_LDM_CALL
R_SPARC_TLS_LDO_HIX22
R_SPARC_TLS_LDO_LOX10
R_SPARC_TLS_LDO_ADD
R_SPARC_TLS_IE_HI22
R_SPARC_TLS_IE_LO10
R_SPARC_TLS_IE_LD
R_SPARC_TLS_IE_LDX
R_SPARC_TLS_IE_ADD
R_SPARC_TLS_LE_HIX22
R_SPARC_TLS_LE_LOX10
R_SPARC_TLS_DTPMOD32
R_SPARC_TLS_DTPMOD64
R_SPARC_TLS_DTPOFF32
R_SPARC_TLS_DTPOFF64
R_SPARC_TLS_TPOFF32
R_SPARC_TLS_TPOFF64
R_SPARC_GOTDATA_HIX22
R_SPARC_GOTDATA_LOX22
R_SPARC_GOTDATA_OP_HIX22
R_SPARC_GOTDATA_OP_LOX22
R_SPARC_GOTDATA_OP
ET_NONE
ET_REL
ET_EXEC
ET_DYN
ET_CORE
EM_NONE
EM_M32
EM_SPARC
EM_386
EM_68K
EM_88K
EM_486
EM_860
EM_MIPS
EM_S370
EM_MIPS_RS3_LE
EM_PARISC
EM_VPP500
EM_SPARC32PLUS
EM_960
EM_PPC
EM_PPC64
EM_S390
EM_SPU
EM_V800
EM_FR20
EM_RH32
EM_RCE
EM_ARM
EM_ALPHA
EM_SH
EM_SPARCV9
EM_TRICORE
EM_ARC
EM_H8_300
EM_H8_300H
EM_H8S
EM_H8_500
EM_IA_64
EM_MIPS_X
EM_COLDFIRE
EM_68HC12
EM_MMA
EM_PCP
EM_NCPU
EM_NDR1
EM_STARCORE
EM_ME16
EM_ST100
EM_TINYJ
EM_X86_64
EM_PDSP
EM_PDP10
EM_PDP11
EM_FX66
EM_ST9PLUS
EM_ST7
EM_68HC16
EM_68HC11
EM_68HC08
EM_68HC05
EM_SVX
EM_ST19
EM_VAX
EM_CRIS
EM_JAVELIN
EM_FIREPATH
EM_ZSP
EM_MMIX
EM_HUANY
EM_PRISM
EM_AVR
EM_FR30
EM_D10V
EM_D30V
EM_V850
EM_M32R
EM_MN10300
EM_MN10200
EM_PJ
EM_OPENRISC
EM_ARC_COMPACT
EM_XTENSA
EM_VIDEOCORE
EM_TMM_GPP
EM_NS32K
EM_TPC
EM_SNP1K
EM_ST200
EM_IP2K
EM_MAX
EM_CR
EM_F2MC16
EM_MSP430
EM_BLACKFIN
EM_SE_C33
EM_SEP
EM_ARCA
EM_UNICORE
EM_EXCESS
EM_DXP
EM_ALTERA_NIOS2
EM_CRX
EM_XGATE
EM_C166
EM_M16C
EM_DSPIC30F
EM_CE
EM_M32C
EM_TSK3000
EM_RS08
EM_SHARC
EM_ECOG2
EM_SCORE7
EM_DSP24
EM_VIDEOCORE3
EM_LATTICEMICO32
EM_SE_C17
EM_TI_C6000
EM_TI_C2000
EM_TI_C5500
EM_MMDSP_PLUS
EM_CYPRESS_M8C
EM_R32C
EM_TRIMEDIA
EM_HEXAGON
EM_8051
EM_STXP7X
EM_NDS32
EM_ECOG1
EM_ECOG1X
EM_MAXQ30
EM_XIMO16
EM_MANIK
EM_CRAYNV2
EM_RX
EM_METAG
EM_MCST_ELBRUS
EM_ECOG16
EM_CR16
EM_ETPU
EM_SLE9X
EM_L10M
EM_K10M
EM_AARCH64
EM_AVR32
EM_STM8
EM_TILE64
EM_TILEPRO
EM_CUDA
EM_TILEGX
EM_CLOUDSHIELD
EM_COREA_1ST
EM_COREA_2ND
EM_ARC_COMPACT2
EM_OPEN8
EM_RL78
EM_VIDEOCORE5
EM_78KOR
EM_56800EX
ELFCLASS32
ELFCLASS64
ELFDATA2LSB
ELFDATA2MSB
ELFOSABI_NONE
ELFOSABI_HPUX
ELFOSABI_NETBSD
ELFOSABI_GNU
ELFOSABI_HURD
ELFOSABI_SOLARIS
ELFOSABI_AIX
ELFOSABI_IRIX
ELFOSABI_FREEBSD
ELFOSABI_TRU64
ELFOSABI_MODESTO
ELFOSABI_OPENBSD
ELFOSABI_OPENVMS
ELFOSABI_NSK
ELFOSABI_AROS
ELFOSABI_FENIXOS
ELFOSABI_C6000_ELFABI
ELFOSABI_C6000_LINUX
ELFOSABI_ARM
ELFOSABI_STANDALONE
EF_ARM_SOFT_FLOAT
EF_ARM_VFP_FLOAT
EF_ARM_EABI_UNKNOWN
EF_ARM_EABI_VER1
EF_ARM_EABI_VER2
EF_ARM_EABI_VER3
EF_ARM_EABI_VER4
EF_ARM_EABI_VER5
EF_MIPS_NOREORDER
EF_MIPS_PIC
EF_MIPS_CPIC
EF_MIPS_ABI2
EF_MIPS_32BITMODE
EF_MIPS_ABI_O32
EF_MIPS_MICROMIPS
EF_MIPS_ARCH_ASE_M16
EF_MIPS_ARCH_1
EF_MIPS_ARCH_2
EF_MIPS_ARCH_3
EF_MIPS_ARCH_4
EF_MIPS_ARCH_5
EF_MIPS_ARCH_32
EF_MIPS_ARCH_64
EF_MIPS_ARCH_32R2
EF_MIPS_ARCH_64R2
EF_MIPS_ARCH_32R6
EF_MIPS_ARCH_64R6
EF_HEXAGON_MACH_V2
EF_HEXAGON_MACH_V3
EF_HEXAGON_MACH_V4
EF_HEXAGON_MACH_V5
EF_HEXAGON_ISA_V2
EF_HEXAGON_ISA_V3
EF_HEXAGON_ISA_V4
EF_HEXAGON_ISA_V5
SHT_NULL
SHT_PROGBITS
SHT_STRTAB
SHT_RELA
SHT_HASH
SHT_DYNAMIC
SHT_NOTE
SHT_NOBITS
SHT_REL
SHT_SHLIB
SHT_DYNSYM
SHT_INIT_ARRAY
SHT_FINI_ARRAY
SHT_PREINIT_ARRAY
SHT_GROUP
SHT_SYMTAB_SHNDX
SHT_LOOS
SHT_GNU_ATTRIBUTES
SHT_GNU_HASH
SHT_GNU_verdef
SHT_GNU_verneed
SHT_GNU_versym
SHT_HIOS
SHT_LOPROC
SHT_ARM_EXIDX
SHT_ARM_PREEMPTMAP
SHT_ARM_ATTRIBUTES
SHT_ARM_DEBUGOVERLAY
SHT_ARM_OVERLAYSECTION
SHT_HEX_ORDERED
SHT_X86_64_UNWIND
SHT_MIPS_REGINFO
SHT_MIPS_OPTIONS
SHT_MIPS_ABIFLAGS
SHF_WRITE
SHF_ALLOC
SHF_EXCLUDE
SHF_EXECINSTR
SHF_MERGE
SHF_STRINGS
SHF_INFO_LINK
SHF_LINK_ORDER
SHF_OS_NONCONFORMING
SHF_GROUP
SHF_TLS
STT_NOTYPE
STT_OBJECT
STT_FUNC
STT_SECTION
STT_FILE
STT_COMMON
STT_TLS
STT_GNU_IFUNC
STV_DEFAULT
STV_INTERNAL
STV_HIDDEN
STV_PROTECTED
R_MIPS_UNUSED1
R_MIPS_UNUSED2
R_386_NUM
Class
Data
OSABI
Flags
Entry
Section
Size
Visibility
Local
Global
Weak
Section size must be greater or equal to the content size
Offset
Symbol
Addend
FileHeader
Sections
Symbols
Info
Address
Link
AddressAlign
Content
llvm.object
Success
No object file for requested architecture
The file was not recognized as a valid object file
Invalid data was encountered while parsing the file
The end of the file was unexpectedly encountered
GENERIC_RELOC_VANILLA
GENERIC_RELOC_PAIR
GENERIC_RELOC_SECTDIFF
GENERIC_RELOC_PB_LA_PTR
GENERIC_RELOC_LOCAL_SECTDIFF
GENERIC_RELOC_TLV
X86_64_RELOC_UNSIGNED
X86_64_RELOC_SIGNED
X86_64_RELOC_BRANCH
X86_64_RELOC_GOT_LOAD
X86_64_RELOC_GOT
X86_64_RELOC_SUBTRACTOR
X86_64_RELOC_SIGNED_1
X86_64_RELOC_SIGNED_2
X86_64_RELOC_SIGNED_4
X86_64_RELOC_TLV
ARM_RELOC_VANILLA
ARM_RELOC_PAIR
ARM_RELOC_SECTDIFF
ARM_RELOC_LOCAL_SECTDIFF
ARM_RELOC_PB_LA_PTR
ARM_RELOC_BR24
ARM_THUMB_RELOC_BR22
ARM_THUMB_32BIT_BRANCH
ARM_RELOC_HALF
ARM_RELOC_HALF_SECTDIFF
ARM64_RELOC_UNSIGNED
ARM64_RELOC_SUBTRACTOR
ARM64_RELOC_BRANCH26
ARM64_RELOC_PAGE21
ARM64_RELOC_PAGEOFF12
ARM64_RELOC_GOT_LOAD_PAGE21
ARM64_RELOC_GOT_LOAD_PAGEOFF12
ARM64_RELOC_POINTER_TO_GOT
ARM64_RELOC_TLVP_LOAD_PAGE21
ARM64_RELOC_TLVP_LOAD_PAGEOFF12
ARM64_RELOC_ADDEND
PPC_RELOC_VANILLA
PPC_RELOC_PAIR
PPC_RELOC_BR14
PPC_RELOC_BR24
PPC_RELOC_HI16
PPC_RELOC_LO16
PPC_RELOC_HA16
PPC_RELOC_LO14
PPC_RELOC_SECTDIFF
PPC_RELOC_PB_LA_PTR
PPC_RELOC_HI16_SECTDIFF
PPC_RELOC_LO16_SECTDIFF
PPC_RELOC_HA16_SECTDIFF
PPC_RELOC_JBSR
PPC_RELOC_LO14_SECTDIFF
PPC_RELOC_LOCAL_SECTDIFF
PCREL
@TLV
Expected GENERIC_RELOC_PAIR after GENERIC_RELOC_SECTDIFF.
Expected GENERIC_RELOC_PAIR after GENERIC_RELOC_LOCAL_SECTDIFF.
:upper16:(
:lower16:(
Expected ARM_RELOC_PAIR after ARM_RELOC_HALF
.framework/
Versions/
.dylib
.qtx
Mach-O 32-bit i386
Mach-O arm
Mach-O 32-bit ppc
Mach-O 32-bit unknown
Mach-O 64-bit x86-64
Mach-O arm64
Mach-O 64-bit ppc64
Mach-O 64-bit unknown
i386-apple-darwin
x86_64-apple-darwin
x86_64h-apple-darwin
armv4t-apple-darwin
armv5e-apple-darwin
xscale-apple-darwin
armv6-apple-darwin
cortex-m0
armv6m-apple-darwin
armv7-apple-darwin
cortex-m4
armv7em-apple-darwin
armv7k-apple-darwin
cortex-m3
armv7m-apple-darwin
armv7s-apple-darwin
arm64-apple-darwin
ppc-apple-darwin
ppc64-apple-darwin
thumbv4t-apple-darwin
thumbv5e-apple-darwin
thumbv6-apple-darwin
thumbv6m-apple-darwin
thumbv7-apple-darwin
thumbv7em-apple-darwin
thumbv7k-apple-darwin
thumbv7m-apple-darwin
thumbv7s-apple-darwin
x86_64
armv4t
armv5e
armv6
armv6m
armv7em
armv7k
armv7m
armv7s
ppc64
invalid hexadecimal floating-point constant: expected at least one significand digit
invalid hexadecimal floating-point constant: expected exponent part 'p'
invalid hexadecimal floating-point constant: expected at least one exponent digit
unterminated comment
invalid decimal number
invalid hexdecimal number
invalid binary number
invalid hexadecimal number
invalid octal number
unterminated single quote
single quote way too long
unterminated string constant
invalid character in input
fatal-assembler-warnings
Consider warnings as error
.set
.equ
.equiv
.ascii
.asciz
.string
.byte
.short
.value
.2byte
.long
.4byte
.quad
.8byte
.octa
.single
.float
.double
.align
.align32
.balign
.balignw
.balignl
.p2align
.p2alignw
.p2alignl
.org
.fill
.zero
.extern
.globl
.global
.lazy_reference
.no_dead_strip
.symbol_resolver
.alt_entry
.private_extern
.reference
.weak_definition
.weak_reference
.weak_def_can_be_hidden
.comm
.common
.lcomm
.abort
.include
.incbin
.code16gcc
.rept
.rep
.irp
.irpc
.endr
.bundle_align_mode
.bundle_lock
.bundle_unlock
.ifeq
.ifge
.ifgt
.ifle
.iflt
.ifne
.ifb
.ifnb
.ifc
.ifeqs
.ifnc
.ifdef
.ifndef
.ifnotdef
.elseif
.else
.end
.endif
.skip
.space
.file
.line
.stabs
.sleb128
.uleb128
.cfi_sections
.cfi_startproc
.cfi_endproc
.cfi_def_cfa
.cfi_def_cfa_offset
.cfi_adjust_cfa_offset
.cfi_def_cfa_register
.cfi_offset
.cfi_rel_offset
.cfi_personality
.cfi_lsda
.cfi_remember_state
.cfi_restore_state
.cfi_same_value
.cfi_restore
.cfi_escape
.cfi_signal_frame
.cfi_undefined
.cfi_register
.cfi_window_save
.macros_on
.macros_off
.macro
.exitm
.endm
.endmacro
.purgem
.err
.error
.warning
unmatched .ifs or .elses
unassigned file number: 
 for .file directives
assembler local symbol '
' not defined
unexpected token at start of statement
invalid use of pseudo-symbol '.' as a label
invalid symbol redefinition
 not supported yet
unknown directive
_emit
__emit
_EMIT
__EMIT
ALIGN
parsed instruction: [
unexpected token in '.if' directive
unexpected token in '.ifb' directive
unexpected token in '.ifc' directive
expected string parameter for '.ifeqs' directive
expected comma after first string for '.ifeqs' directive
expected identifier after '.ifdef'
Encountered a .elseif that doesn't follow a .if or  an .elseif
unexpected token in '.elseif' directive
unexpected token in '.else' directive
Encountered a .else that doesn't follow a .if or an .elseif
unexpected token in '.endif' directive
Encountered a .endif that doesn't follow a .if or .else
unexpected token in assignment
Recursive use of '
redefinition of '
invalid assignment to '
invalid reassignment of non-absolute variable '
expected absolute expression
macros cannot be nested more than 20 levels deep
.endmacro
<instantiation>
invalid argument identifier for formal argument
expected '=' after formal parameter identifier
cannot mix positional and keyword arguments
parameter named '
' does not exist for macro '
missing value for required parameter '
' in macro '
too many positional arguments
unexpected token in macro instantiation
unbalanced parentheses in macro argument
Wrong number of arguments
expected identifier after '
expected string in '
literal value out of range for directive
infinity
invalid floating point literal
invalid alignment value
alignment must be a power of 2
alignment directive can never be satisfied in this many bytes, ignoring maximum bytes expression
maximum bytes expression exceeds alignment and has no effect
unexpected token in '.org' directive
expected assembly-time absolute expression
'.fill' directive with negative repeat count has no effect
unexpected token in '.fill' directive
'.fill' directive with negative size has no effect
'.fill' directive with size greater than 8 has been truncated to 8
'.fill' directive pattern has been truncated to 32-bits
unexpected token in '.zero' directive
non-local symbol required in directive
unable to emit symbol attribute
alignment not supported on this target
unexpected token in '.comm' or '.lcomm' directive
invalid '.comm' or '.lcomm' directive size, can't be less than zero
invalid '.comm' or '.lcomm' directive alignment, can't be less than zero
unexpected token in '.abort' directive
.abort detected. Assembly stopping.
.abort '
' detected. Assembly stopping.
expected string in '.include' directive
unexpected token in '.include' directive
Could not find include file '
expected string in '.incbin' directive
unexpected token in '.incbin' directive
Could not find incbin file '
Count is negative
no matching '.endr' in definition
unexpected token in '.endr' directive
.endr
expected identifier in '.irp' directive
expected comma in '.irp' directive
expected identifier in '.irpc' directive
expected comma in '.irpc' directive
unexpected token in '.irpc' directive
unmatched '.endr' directive
unexpected token after expression in '.bundle_align_mode' directive
invalid bundle alignment size (expected between 0 and 30)
invalid option for '.bundle_lock' directive
align_to_end
unexpected token after '.bundle_lock' directive option
unexpected token in '.bundle_unlock' directive
invalid number of bytes in '
file number less than one
unexpected token in '.file' directive
explicit path specified, but no file number
input can't have .file dwarf directives when -g is used to generate dwarf debug info for assembly code
file number already allocated
unexpected token in '.line' directive
unexpected token in '.loc' directive
file number less than one in '.loc' directive
unassigned file number in '.loc' directive
line number less than zero in '.loc' directive
column position less than zero in '.loc' directive
basic_block
prologue_end
epilogue_begin
is_stmt
is_stmt value not 0 or 1
is_stmt value not the constant value of 0 or 1
isa number less than zero
isa number not a constant value
discriminator
unknown sub-directive in '.loc' directive
unsupported directive '.stabs'
Expected an identifier
.debug_frame
simple
unexpected token in .cfi_startproc directive
unsupported encoding.
unexpected token in '.cfi_signal_frame'
expected identifier in '.macro' directive
Vararg parameter '
' should be last one in the list of parameters.
missing parameter qualifier for '
vararg
 is not a valid parameter qualifier for '
pointless default value for required parameter '
no matching '.endmacro' in definition
macro '
' is already defined
macro defined with named parameters which are not used in macro body, possible positional parameter found in body which will have no effect
unexpected '
' in file, no current macro definition
expected identifier in '.purgem' directive
unexpected token in '.purgem' directive
' is not defined
unexpected token in '.end' directive
.err encountered
.error directive invoked in source file
.error argument must be a string
.warning directive invoked in source file
.warning argument must be a string
unexpected expression in _emit
unexpected expression in align
literal value not a power of two greater then zero
byte ptr 
word ptr 
dword ptr 
qword ptr 
xword ptr 
xmmword ptr 
ymmword ptr 
.align 
while in macro instantiation
unexpected backslash at end of string
invalid octal escape sequence (out of range)
invalid escape sequence (unrecognized character)
unexpected symbol modifier following '@'
invalid variant '
invalid modifier '
' (no symbols present)
invalid variant on expression '
' (already modified)
invalid token in expression
expected symbol variant after '@'
unexpected token in variant, expected ')'
unexpected modifier on variable reference
brackets expression not supported on this target
expected ')' in parentheses expression
expected ']' in brackets expression
expected section directive before assembly directive
.section
.def
.scl
.type
.endef
.secrel32
.secidx
.linkonce
.seh_proc
.seh_endproc
.seh_startchained
.seh_endchained
.seh_handler
.seh_handlerdata
.seh_pushreg
.seh_setframe
.seh_stackalloc
.seh_savereg
.seh_savexmm
.seh_pushframe
.seh_endprologue
.weak
unexpected token in section switching directive
expected string in directive
expected comdat type such as 'discard' or 'largest' after protection bits
expected comma in directive
conflicting section flags 'b' and 'd'.
unknown flag
one_only
same_size
same_contents
associative
newest
unrecognized COMDAT type '
cannot make section associative with .linkonce
section '
' is already linkonce
you must specify one or both of @unwind or @except
a handler attribute must begin with '@'
expected @unwind or @except
except
register can't be represented in SEH unwind info
register number is too high
you must specify a stack pointer offset
offset is not a multiple of 16
size is not a multiple of 8
you must specify an offset on the stack
code
expected @code
.desc
.indirect_symbol
.lsym
.subsections_via_symbols
.dump
.load
.pushsection
.popsection
.previous
.secure_log_unique
.secure_log_reset
.zerofill
.data_region
.end_data_region
.const
.const_data
.constructor
.cstring
.destructor
.dyld
.fvmlib_init0
.fvmlib_init1
.lazy_symbol_pointer
.linker_option
.literal16
.literal4
.literal8
.mod_init_func
.mod_term_func
.non_lazy_symbol_pointer
.objc_cat_cls_meth
.objc_cat_inst_meth
.objc_category
.objc_class
.objc_class_names
.objc_class_vars
.objc_cls_meth
.objc_cls_refs
.objc_inst_meth
.objc_instance_vars
.objc_message_refs
.objc_meta_class
.objc_meth_var_names
.objc_meth_var_types
.objc_module_info
.objc_protocol
.objc_selector_strs
.objc_string_object
.objc_symbols
.picsymbol_stub
.static_const
.static_data
.symbol_stub
.thread_init_func
.tlv
.ident
.ios_version_min
.macosx_version_min
unexpected token in '.desc' directive
indirect symbol not in a symbol pointer or stub section
expected identifier in .indirect_symbol directive
unable to emit indirect symbol attribute for: 
unexpected token in '.indirect_symbol' directive
unexpected token in '.lsym' directive
directive '.lsym' is unsupported
unexpected token in '.subsections_via_symbols' directive
expected string in '.dump' or '.load' directive
unexpected token in '.dump' or '.load' directive
ignoring directive .dump for now
ignoring directive .load for now
expected identifier after '.section' directive
unexpected token in '.section' directive
.popsection without corresponding .pushsection
.previous without corresponding .section
unexpected token in '.secure_log_unique' directive
.secure_log_unique specified multiple times
.secure_log_unique used but AS_SECURE_LOG_FILE environment variable unset.
can't open secure log file: 
unexpected token in '.secure_log_reset' directive
unexpected token in '.tbss' directive
invalid '.tbss' directive size, can't be less thanzero
invalid '.tbss' alignment, can't be lessthan zero
__thread_bss
expected segment name after '.zerofill' directive
expected section name after comma in '.zerofill' directive
unexpected token in '.zerofill' directive
invalid '.zerofill' directive size, can't be less than zero
invalid '.zerofill' directive alignment, can't be less than zero
expected region type after '.data_region' directive
jt16
jt32
unknown region type in '.data_region' directive
unexpected token in '.end_data_region' directive
__bss
__const
__constructor
__cstring
__destructor
__dyld
__fvmlib_init0
__fvmlib_init1
__la_symbol_ptr
__literal16
__literal4
__literal8
__mod_init_func
__mod_term_func
__OBJC
__cat_cls_meth
__cat_inst_meth
__category
__class
__class_vars
__cls_meth
__cls_refs
__inst_meth
__instance_vars
__message_refs
__meta_class
__module_info
__protocol
__selector_strs
__string_object
__symbols
__picsymbol_stub
__static_const
__static_data
__symbol_stub
__thread_data
__thread_init
__thread_vars
invalid OS major version number
minor OS version number required, comma expected
invalid OS minor version number
invalid update specifier, comma expected
invalid OS update number
.rodata
.data.rel
.data.rel.ro
.data.rel.ro.local
.size
.symver
.version
.weakref
.local
.protected
.internal
.hidden
.subsection
.fini
Section cannot specifiy a group name while also acting as a member of the last group
Mergeable section must specify the type
Group section must specify the type
expected '@<type>', '%<type>' or "<type>"
expected the entry size
entry size must be positive
expected group name
Linkage must be 'comdat'
.note
init_array
fini_array
preinit_array
nobits
progbits
note
unknown section type
DWARF2 only supports one section per compilation unit
alloc
execinstr
expected STT_<TYPE_IN_UPPER_CASE>, '#<type>', '@<type>', '%<type>' or "<type>"
expected symbol type in directive
unsupported attribute in '.type' directive
unexpected token in '.type' directive
function
object
tls_object
notype
gnu_indirect_function
gnu_unique_object
unexpected token in '.ident' directive
expected a comma
expected a '@' in the name
unexpected token in '.version' directive
llvm.bitcode
Conflicting METADATA_KIND records
Could not find function in stream
Expected a constant
Insufficient function protos
Invalid bitcode signature
Invalid bitcode wrapper header
Invalid ronstant reference
Invalid ID
Invalid instruction with no BB
Invalid record
Invalid type for value
Invalid TYPE table
Invalid type
Malformed block
Malformed global initializer set
Invalid multiple blocks
Never resolved value found in function
Never resolved function from blockaddress
Invalid value
Latency: 
32-bit X86: Pentium-Pro and above
64-bit X86: EM64T and AMD64
, %rax
{1to16}, 
{1to8}, 
, %ax
, %eax
, %al
, %st(0)
  # NOREX
, %dx
  # TAILCALL
{sae}, 
{sae}, 
} {z}
} {z} 
cvtsd2siq
imulw $
imull $
imulq $
xstorerng
<reg:
lock
{rn-sae}
{rd-sae}
{ru-sae}
{rz-sae}
<imm:
imm = 0x%llX
<mem:
%es:(
, st(0)
, dx
, ax
, eax
, rax
, al
, cl
} {z}, 
, {sae}
es:[
opaque ptr 
zmmword ptr 
A @@ version cannot be undefined
No relocation available to represent this relative expression
Cannot represent a difference across sections
.debug_
ZLIB
.rela
.rel
.shstrtab
.symtab
.strtab
.symtab_shndxr
Size expression must be absolute.
.ARM.exidx
FK_Data_1
FK_Data_2
FK_Data_4
FK_Data_8
FK_PCRel_1
FK_PCRel_2
FK_PCRel_4
FK_PCRel_8
FK_GPRel_1
FK_GPRel_2
FK_GPRel_4
FK_GPRel_8
FK_SecRel_1
FK_SecRel_2
FK_SecRel_4
FK_SecRel_8
NO_APP
.zero
.ascii
.asciz
.byte
.short
.long
.quad
.globl
 InlineAsm Start
 InlineAsm End
.weak_reference 
.space
.cfi_startproc
 simple
.cfi_endproc
.syntax unified
.linker_option "
.data_region
.data_region jt8
.data_region jt16
.data_region jt32
.end_data_region
.ios_version_min
.macosx_version_min
.thumb_func
.weakref 
.type
no_type
.hidden
.indirect_symbol
.internal
.lazy_reference
.local
.no_dead_strip
.symbol_resolver
.alt_entry
.private_extern
.protected
.reference
.weak_definition
.weak_def_can_be_hidden
.def
.scl
.endef
.secidx
.secrel32
.size
.comm
.lcomm
.zerofill 
.tbss 
Don't know how to emit this value.
.uleb128 
.sleb128 
.align
.p2alignw 
.p2alignl 
, 0x
.org 
.file
.ident
.loc
 basic_block
 prologue_end
 epilogue_begin
 is_stmt 
 isa 
 discriminator 
.cfi_sections 
, .debug_frame
.cfi_def_cfa 
.cfi_def_cfa_offset 
.cfi_def_cfa_register 
.cfi_offset 
.cfi_personality 
.cfi_lsda 
.cfi_remember_state
.cfi_restore_state
.cfi_same_value 
.cfi_rel_offset 
.cfi_adjust_cfa_offset 
.cfi_signal_frame
.cfi_undefined 
.cfi_register 
.cfi_window_save
.seh_proc 
.seh_endproc
.seh_startchained
.seh_endchained
.seh_pushreg 
.seh_setframe 
.seh_stackalloc 
.seh_savereg 
.seh_savexmm 
.seh_pushframe
 @code
.seh_endprologue
.seh_handler 
, @unwind
, @except
.seh_handlerdata
encoding: [
0x%02x
  fixup 
offset: 
, value: 
, kind: 
.bundle_align_mode 
.bundle_lock
 align_to_end
.bundle_unlock
' could not be evaluated in a subtraction expression
expected relocatable expression
invalid .org offset '
' (at offset '
Fragment can't be larger than a bundle size
Padding cannot exceed 255 bytes
non-zero initializer found in section '
non-zero initializer found in virtual section
<MCFixup
 Offset:
 Value:
 Kind:
unable to evaluate offset for variable '
unable to evaluate offset to undefined symbol '
unable to write NOP sequence of 
 bytes
undefined .align directive, value size '
' is not a divisor of padding size '
unable to write nop sequence of 
AS_SECURE_LOG_FILE
.group
llvm-mc (based on LLVM 3.6.0svn)
Unterminated .bundle_lock when changing a section
Emitting values inside a locked bundle is forbidden
.comment
.bundle_align_mode should be only set once per file
.bundle_lock forbidden when bundling is disabled
Nesting of .bundle_lock is forbidden
.bundle_unlock forbidden when bundling is disabled
.bundle_unlock without matching lock
Empty bundle-locked group is forbidden
<<invalid>>
<<none>>
GOTOFF
GOTPCREL
GOTTPOFF
INDNTPOFF
NTPOFF
GOTNTPOFF
TLSGD
TLSLD
TLSLDM
TPOFF
DTPOFF
TLVP
TLVPPAGE
TLVPPAGEOFF
PAGE
PAGEOFF
GOTPAGE
GOTPAGEOFF
SECREL32
WEAKREF
target1
target2
prel31
tlsldo
tlscall
tlsdescseq
higher
highera
highest
highesta
got@l
got@h
got@ha
tocbase
toc@l
toc@h
toc@ha
dtpmod
tprel
tprel@l
tprel@h
tprel@ha
tprel@higher
tprel@highera
tprel@highest
tprel@highesta
dtprel
dtprel@l
dtprel@h
dtprel@ha
dtprel@higher
dtprel@highera
dtprel@highest
dtprel@highesta
got@tprel
got@tprel@l
got@tprel@h
got@tprel@ha
got@dtprel
got@dtprel@l
got@dtprel@h
got@dtprel@ha
got@tlsgd
got@tlsgd@l
got@tlsgd@h
got@tlsgd@ha
tlsgd
got@tlsld
got@tlsld@l
got@tlsld@h
got@tlsld@ha
tlsld
GPREL
GOT_CALL
GOT16
ABS_HI
ABS_LO
DTPREL_HI
DTPREL_LO
GOTTPREL
TPREL_HI
TPREL_LO
GPOFF_HI
GPOFF_LO
GOT_DISP
GOT_PAGE
GOT_OFST
HIGHER
HIGHEST
GOT_HI16
GOT_LO16
CALL_HI16
CALL_LO16
PCREL_HI16
PCREL_LO16
IMGREL32
gotoff
gotpcrel
GOT_PREL
got_prel
gottpoff
indntpoff
ntpoff
gotntpoff
tlsldm
tpoff
dtpoff
tlvp
tlvppage
tlvppageoff
page
pageoff
gotpage
gotpageoff
IMGREL
imgrel
secrel32
HIGHERA
HIGHESTA
GOT@L
GOT@H
GOT@HA
TOCBASE
TOC@L
TOC@H
TOC@HA
DTPMOD
TPREL
TPREL@L
TPREL@H
TPREL@HA
TPREL@HIGHER
TPREL@HIGHERA
TPREL@HIGHEST
TPREL@HIGHESTA
DTPREL
DTPREL@L
DTPREL@H
DTPREL@HA
DTPREL@HIGHER
DTPREL@HIGHERA
DTPREL@HIGHEST
DTPREL@HIGHESTA
GOT@TPREL
GOT@TPREL@L
GOT@TPREL@H
GOT@TPREL@HA
GOT@DTPREL
GOT@DTPREL@L
GOT@DTPREL@H
GOT@DTPREL@HA
GOT@TLSGD
GOT@TLSGD@L
GOT@TLSGD@H
GOT@TLSGD@HA
GOT@TLSLD
GOT@TLSLD@L
GOT@TLSLD@H
GOT@TLSLD@HA
NONE
TARGET1
TARGET2
PREL31
TLSLDO
TLSCALL
TLSDESC
<MCOperand 
INVALID
Reg:
Imm:
Expr:(
Inst:(
UNDEFINED
<MCInst 
<MCInst #
%lld
-0x%llx
-0%llxh
-%llxh
0%llxh
%llxh
__textcoal_nt
__const_coal
__datacoal_nt
__common
__LD
__compact_unwind
__DWARF
__apple_names
__apple_objc
__apple_namespac
__apple_types
__debug_abbrev
__debug_info
__debug_line
__debug_frame
__debug_pubnames
__debug_pubtypes
__debug_gnu_pubn
__debug_gnu_pubt
__debug_str
__debug_loc
__debug_aranges
__debug_ranges
__debug_macinfo
__debug_inlined
__LLVM_STACKMAPS
__llvm_stackmaps
.data.rel.local
.rodata.cst4
.rodata.cst8
.rodata.cst16
.ctors
.dtors
.gcc_except_table
.debug_abbrev
.debug_info
.debug_line
.debug_pubnames
.debug_pubtypes
.debug_gnu_pubnames
.debug_gnu_pubtypes
.debug_str
.debug_loc
.debug_aranges
.debug_ranges
.debug_macinfo
.apple_names
.apple_objc
.apple_namespaces
.apple_types
.debug_info.dwo
.debug_types.dwo
.debug_abbrev.dwo
.debug_str.dwo
.debug_line.dwo
.debug_loc.dwo
.debug_str_offsets.dwo
.debug_addr
.llvm_stackmaps
.CRT$XCU
.CRT$XTX
.debug$S
.drectve
.pdata
.xdata
.debug_types
This file format doesn't support weak aliases.
Cannot evaluate subsection number
Subsection number out of range
.section
one_only,
discard,
same_size,
same_contents,
associative,
largest,
newest,
,#alloc
,#execinstr
,#write
,#exclude
,#tls
,comdat
.subsection
0123456789_.abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
,none,
mach-o section specifier requires a segment whose length is between 1 and 16 characters
mach-o section specifier requires a segment and section separated by a comma
mach-o section specifier requires a section whose length is between 1 and 16 characters
mach-o section specifier uses an unknown section type
mach-o section specifier of type 'symbol_stubs' requires a size specifier
mach-o section specifier has invalid attribute
mach-o section specifier cannot have a stub size specified because it does not have type 'symbol_stubs'
mach-o section specifier has a malformed stub size
regular
S_REGULAR
S_ZEROFILL
cstring_literals
S_CSTRING_LITERALS
4byte_literals
S_4BYTE_LITERALS
8byte_literals
S_8BYTE_LITERALS
literal_pointers
S_LITERAL_POINTERS
non_lazy_symbol_pointers
S_NON_LAZY_SYMBOL_POINTERS
lazy_symbol_pointers
S_LAZY_SYMBOL_POINTERS
symbol_stubs
S_SYMBOL_STUBS
mod_init_funcs
S_MOD_INIT_FUNC_POINTERS
mod_term_funcs
S_MOD_TERM_FUNC_POINTERS
coalesced
S_COALESCED
S_GB_ZEROFILL
interposing
S_INTERPOSING
16byte_literals
S_16BYTE_LITERALS
S_DTRACE_DOF
S_LAZY_DYLIB_SYMBOL_POINTERS
thread_local_regular
S_THREAD_LOCAL_REGULAR
thread_local_zerofill
S_THREAD_LOCAL_ZEROFILL
thread_local_variables
S_THREAD_LOCAL_VARIABLES
thread_local_variable_pointers
S_THREAD_LOCAL_VARIABLE_POINTERS
thread_local_init_function_pointers
S_THREAD_LOCAL_INIT_FUNCTION_POINTERS
pure_instructions
S_ATTR_PURE_INSTRUCTIONS
no_toc
S_ATTR_NO_TOC
strip_static_syms
S_ATTR_STRIP_STATIC_SYMS
no_dead_strip
S_ATTR_NO_DEAD_STRIP
live_support
S_ATTR_LIVE_SUPPORT
self_modifying_code
S_ATTR_SELF_MODIFYING_CODE
S_ATTR_DEBUG
S_ATTR_SOME_INSTRUCTIONS
S_ATTR_EXT_RELOC
S_ATTR_LOC_RELOC
unsupported directive in streamer
line_table_start
No open frame
Starting a frame before finishing the previous one!
No open Win64 EH frame function!
Starting a function before ending the previous one!
Not all chained regions terminated!
End of a chained region outside a chained region!
Chained unwind areas can't have handlers!
Don't know what kind of handler this is!
Frame register and offset already specified!
Misaligned frame pointer offset!
Frame offset must be less than or equal to 240!
Allocation size must be non-zero!
Misaligned stack allocation!
Misaligned saved register offset!
Misaligned saved vector register offset!
If present, PushMachFrame must be the first UOP
EmitRawText called on an MCStreamer that doesn't support it,  something must not be fully mc'ized
Unfinished frame!
' is not a recognized processor for this target
 (ignoring processor)
invalid 'common' alignment '
' for '
indirect symbol '
' not in a symbol pointer or stub section
' is not a recognized feature for this target
 (ignoring feature)
help
+help
altivec
Available CPUs for this target:
  %-*s - %s.
Available features for this target:
Use +feature to enable a feature, or -feature to disable it.
For example, llc -mcpu=mycpu -mattr=+feature1,-feature2
two sections have the same comdat
Weak externals may only alias symbols
.weak.
.default
conflicting sections for symbol
' can not be undefined
Missing associated COMDAT section for section 
COFF string table is greater than 64 GB.
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/
starting a new symbol definition without completing the previous one
storage class specified outside of symbol definition
storage class value '
' out of range
symbol type specified outside of a symbol definition
type value '
ending symbol definition without starting one
alignment is limited to 32-bytes
BinaryRef hex string must contain an even number of nybbles.
BinaryRef hex string must contain only hex digits.
%"type 
 addrspace(
<null operand!>
 singlethread
 <bad ordering 
 unordered
 monotonic
 acquire
 release
 acq_rel
 seq_cst
; ModuleID = '
target datalayout = "
target triple = "
module asm "
<empty name> 
 = !{
<badref>
; Materializable
external 
unnamed_addr 
addrspace(
externally_initialized 
constant 
global 
, section "
, comdat 
, align 
<<nameless>> = 
alias 
 <<NULL ALIASEE>>
 = type 
; Function Attrs: 
declare 
define 
 unnamed_addr
 section "
 comdat 
 align 
 gc "
 prefix 
; <label>:
; Error: Block without parent!
 No predecessors!
 preds = 
<badref> = 
musttail 
tail 
 atomic
 weak
 volatile
 personality 
          cleanup
          catch 
          filter 
 void
          to 
 unwind 
inalloca 
, !<unknown kind #
 = metadata 
attributes #
 = { 
_bb 
, { 
; uselistorder directives
 = comdat 
asm 
sideeffect 
alignstack 
inteldialect 
", "
private 
internal 
linkonce 
linkonce_odr 
weak 
weak_odr 
common 
appending 
extern_weak 
available_externally 
hidden 
protected 
dllimport 
dllexport 
thread_local 
thread_local(localdynamic) 
thread_local(initialexec) 
thread_local(localexec) 
 fast
 nnan
 ninf
 nsz
 arcp
 nuw
 nsw
 exact
 inbounds
unknown
 <unknown operation 
 xchg
 add
 sub
 and
 nand
 xor
 max
 min
 umax
 umin
; [ DW_TAG_user_base ]
blockaddress(
<placeholder or erroneous Constant>
PAL[
  { 
llvm.x86.sse2.pcmpeq.
llvm.x86.avx2.pcmpeq.
pcmpeq
llvm.x86.sse2.pcmpgt.
llvm.x86.avx2.pcmpgt.
pcmpgt
llvm.x86.avx.movnt.dq.256
llvm.x86.avx.movnt.ps.256
llvm.x86.avx.movnt.pd.256
cast
llvm.x86.xop.vpcom
llvm.x86.sse42.crc32.64.8
llvm.x86.avx.vbroadcast
llvm.x86.avx.vpermil.pd.256
llvm.x86.avx.vpermil.pd
llvm.x86.avx.vpermil.ps.256
llvm.x86.avx.vpermil.ps
llvm.ctlz.
LLVM_DEBUG_METADATA_VERSION_OFFSET
Could not parse the environment variable LLVM_DEBUG_METADATA_VERSION_OFFSET="%s" as a 32-bit integer.
llvm.vectorizer.
llvm.vectorizer.unroll
llvm.loop.interleave.count
llvm.loop.vectorize.
arm.neon.vclz
arm.neon.vcnt
ctlz.
cttz.
objectsize.
x86.sse2.pcmpeq.
x86.sse2.pcmpgt.
x86.avx2.pcmpeq.
x86.avx2.pcmpgt.
x86.avx.vpermil.
x86.avx.movnt.dq.256
x86.avx.movnt.pd.256
x86.avx.movnt.ps.256
x86.sse42.crc32.64.8
x86.avx.vbroadcast.ss
x86.avx.vbroadcast.ss.256
x86.avx.vbroadcast.sd.256
x86.xop.vpcom
x86.sse41.ptest
x86.sse41.ptestc
x86.sse41.ptestz
x86.sse41.ptestnzc
x86.xop.vfrcz.ss
x86.xop.vfrcz.sd
x86.fma4.
llvm.x86.fma
full-set
empty-set
Printing <null> Value
decltype(nullptr)
-m:o
-m:w
-m:e
-m:m
Data Layout
not a number, or does not fit in an unsigned int
 [unbounded]
lang 0x
 :: 
 [line 
, size 
, offset 
, enc 
 [private]
 [protected]
 [public]
 [artificial]
 [decl]
 [def]
 [vector]
 [static]
 [reference]
 [rvalue reference]
 [from 
 elements]
 [local]
 [scope 
 [piece, size 
, properties 
llvm.dbg.value
llvm.dbg.
Debug Info Version
 @[ 
pass-remarks
pattern
Enable optimization remarks from passes whose name match the given regular expression
pass-remarks-missed
Enable missed optimization remarks from passes whose name match the given regular expression
pass-remarks-analysis
Enable optimization analysis remarks from passes whose name match the given regular expression
 at line 
stack size limit exceeded (
) in 
ignoring debug info with an invalid version (
loop not interleaved: 
Invalid regular expression '
' in -pass-remarks: 
verify-dom-info
Verify dominator info (time consuming)
DominatorTree is not up to date!
Computed:
Actual:
Dominator Tree Construction
MDGPU.trig.preop.
MDGPU.rsq.clamped.
MDGPU.rsq.
MDGPU.rcp.
MDGPU.ldexp.
MDGPU.div.scale.
MDGPU.div.fmas.
MDGPU.div.fixup.
rm.vcvtru.
rm.vcvtr.
rm.strex.
rm.stlex.
rm.neon.vst4lane.
rm.neon.vst4.
rm.neon.vst3lane.
rm.neon.vst3.
rm.neon.vst2lane.
rm.neon.vst2.
rm.neon.vst1.
rm.neon.vshiftu.
rm.neon.vshifts.
rm.neon.vshiftins.
rm.neon.vrsubhn.
rm.neon.vrsqrts.
rm.neon.vrsqrte.
rm.neon.vrshiftu.
rm.neon.vrshifts.
rm.neon.vrshiftn.
rm.neon.vrintz.
rm.neon.vrintx.
rm.neon.vrintp.
rm.neon.vrintn.
rm.neon.vrintm.
rm.neon.vrinta.
rm.neon.vrhaddu.
rm.neon.vrhadds.
rm.neon.vrecps.
rm.neon.vrecpe.
rm.neon.vraddhn.
rm.neon.vqsubu.
rm.neon.vqsubs.
rm.neon.vqshiftu.
rm.neon.vqshiftsu.
rm.neon.vqshifts.
rm.neon.vqshiftnu.
rm.neon.vqshiftnsu.
rm.neon.vqshiftns.
rm.neon.vqrshiftu.
rm.neon.vqrshifts.
rm.neon.vqrshiftnu.
rm.neon.vqrshiftnsu.
rm.neon.vqrshiftns.
rm.neon.vqrdmulh.
rm.neon.vqneg.
rm.neon.vqmovnu.
rm.neon.vqmovnsu.
rm.neon.vqmovns.
rm.neon.vqdmull.
rm.neon.vqdmulh.
rm.neon.vqaddu.
rm.neon.vqadds.
rm.neon.vqabs.
rm.neon.vpminu.
rm.neon.vpmins.
rm.neon.vpmaxu.
rm.neon.vpmaxs.
rm.neon.vpaddlu.
rm.neon.vpaddls.
rm.neon.vpadd.
rm.neon.vpadalu.
rm.neon.vpadals.
rm.neon.vmulp.
rm.neon.vmullu.
rm.neon.vmulls.
rm.neon.vmullp.
rm.neon.vminu.
rm.neon.vmins.
rm.neon.vminnm.
rm.neon.vmaxu.
rm.neon.vmaxs.
rm.neon.vmaxnm.
rm.neon.vld4lane.
rm.neon.vld4.
rm.neon.vld3lane.
rm.neon.vld3.
rm.neon.vld2lane.
rm.neon.vld2.
rm.neon.vld1.
rm.neon.vhsubu.
rm.neon.vhsubs.
rm.neon.vhaddu.
rm.neon.vhadds.
rm.neon.vcvtpu.
rm.neon.vcvtps.
rm.neon.vcvtnu.
rm.neon.vcvtns.
rm.neon.vcvtmu.
rm.neon.vcvtms.
rm.neon.vcvtfxu2fp.
rm.neon.vcvtfxs2fp.
rm.neon.vcvtfp2fxu.
rm.neon.vcvtfp2fxs.
rm.neon.vcvtau.
rm.neon.vcvtas.
rm.neon.vcnt.
rm.neon.vclz.
rm.neon.vcls.
rm.neon.vbsl.
rm.neon.vacgt.
rm.neon.vacge.
rm.neon.vabs.
rm.neon.vabdu.
rm.neon.vabds.
rm.ldrex.
rm.ldaex.
nnotation.
arch64.udiv.
arch64.stxr.
arch64.stlxr.
arch64.sisd.fabd.
arch64.sdiv.
arch64.rbit.
arch64.neon.vsri.
arch64.neon.vsli.
arch64.neon.vcvtfxu2fp.
arch64.neon.vcvtfxs2fp.
arch64.neon.vcvtfp2fxu.
arch64.neon.vcvtfp2fxs.
arch64.neon.vcopy.lane.
arch64.neon.usqadd.
arch64.neon.ushll.
arch64.neon.ushl.
arch64.neon.ursqrte.
arch64.neon.urshl.
arch64.neon.urhadd.
arch64.neon.urecpe.
arch64.neon.uqxtn.
arch64.neon.uqsub.
arch64.neon.uqshrn.
arch64.neon.uqshl.
arch64.neon.uqrshrn.
arch64.neon.uqrshl.
arch64.neon.uqadd.
arch64.neon.umull.
arch64.neon.uminv.
arch64.neon.uminp.
arch64.neon.umin.
arch64.neon.umaxv.
arch64.neon.umaxp.
arch64.neon.umax.
arch64.neon.uhsub.
arch64.neon.uhadd.
arch64.neon.uaddv.
arch64.neon.uaddlv.
arch64.neon.uaddlp.
arch64.neon.uabd.
arch64.neon.tbx4.
arch64.neon.tbx3.
arch64.neon.tbx2.
arch64.neon.tbx1.
arch64.neon.tbl4.
arch64.neon.tbl3.
arch64.neon.tbl2.
arch64.neon.tbl1.
arch64.neon.suqadd.
arch64.neon.subhn.
arch64.neon.st4lane.
arch64.neon.st4.
arch64.neon.st3lane.
arch64.neon.st3.
arch64.neon.st2lane.
arch64.neon.st2.
arch64.neon.st1x4.
arch64.neon.st1x3.
arch64.neon.st1x2.
arch64.neon.sshll.
arch64.neon.sshl.
arch64.neon.srshl.
arch64.neon.srhadd.
arch64.neon.sqxtun.
arch64.neon.sqxtn.
arch64.neon.sqsub.
arch64.neon.sqshrun.
arch64.neon.sqshrn.
arch64.neon.sqshlu.
arch64.neon.sqshl.
arch64.neon.sqrshrun.
arch64.neon.sqrshrn.
arch64.neon.sqrshl.
arch64.neon.sqrdmulh.
arch64.neon.sqneg.
arch64.neon.sqdmull.
arch64.neon.sqdmulh.
arch64.neon.sqadd.
arch64.neon.sqabs.
arch64.neon.smull.
arch64.neon.sminv.
arch64.neon.sminp.
arch64.neon.smin.
arch64.neon.smaxv.
arch64.neon.smaxp.
arch64.neon.smax.
arch64.neon.shsub.
arch64.neon.shll.
arch64.neon.shadd.
arch64.neon.scalar.uqxtn.
arch64.neon.scalar.sqxtun.
arch64.neon.scalar.sqxtn.
arch64.neon.saddv.
arch64.neon.saddlv.
arch64.neon.saddlp.
arch64.neon.sabd.
arch64.neon.rsubhn.
arch64.neon.rshrn.
arch64.neon.rbit.
arch64.neon.raddhn.
arch64.neon.pmull.
arch64.neon.pmul.
arch64.neon.ld4r.
arch64.neon.ld4lane.
arch64.neon.ld4.
arch64.neon.ld3r.
arch64.neon.ld3lane.
arch64.neon.ld3.
arch64.neon.ld2r.
arch64.neon.ld2lane.
arch64.neon.ld2.
arch64.neon.ld1x4.
arch64.neon.ld1x3.
arch64.neon.ld1x2.
arch64.neon.frsqrts.
arch64.neon.frsqrte.
arch64.neon.frintn.
arch64.neon.frecpx.
arch64.neon.frecps.
arch64.neon.frecpe.
arch64.neon.fmulx.
arch64.neon.fminv.
arch64.neon.fminp.
arch64.neon.fminnmv.
arch64.neon.fminnmp.
arch64.neon.fminnm.
arch64.neon.fmin.
arch64.neon.fmaxv.
arch64.neon.fmaxp.
arch64.neon.fmaxnmv.
arch64.neon.fmaxnmp.
arch64.neon.fmaxnm.
arch64.neon.fmax.
arch64.neon.fcvtzu.
arch64.neon.fcvtzs.
arch64.neon.fcvtxn.
arch64.neon.fcvtpu.
arch64.neon.fcvtps.
arch64.neon.fcvtnu.
arch64.neon.fcvtns.
arch64.neon.fcvtmu.
arch64.neon.fcvtms.
arch64.neon.fcvtau.
arch64.neon.fcvtas.
arch64.neon.faddv.
arch64.neon.facgt.
arch64.neon.facge.
arch64.neon.fabd.
arch64.neon.cls.
arch64.neon.addp.
arch64.neon.addhn.
arch64.neon.abs.
arch64.ldxr.
arch64.ldaxr.
ssume
lrex
crr2
pace
rc32
rch64.
m.crc32c
arch64.
daxp
tlxp
et.fpscr
eon.aes
ndefined
rch64.crc32
m.neon.
esmc
rch64.crc32c
m.neon.aesimc
rm.neon.sha
just.trampoline
m.neon.sha256h2
eon.
ha256su
p2hf
f2fp
hread.pointer
rypto.aes
isd.fcvtxn
rypto.
eon.pmull64
arch64.crypto.aesimc
rypto.sha
eon.vcvt
arch64.crypto.sha256h2
arch64.crypto.sha256su
arch64.neon.sqdmulls.scalar
swap.
ttz.
tpop.
tlz.
opysign.
onvertuu.
onvertus.
onvertuif.
onvertsu.
onvertss.
onvertsif.
onvertfui.
onvertfsi.
onvertff.
onvert.to.fp16.
onvert.from.fp16.
eil.
lear_cache
uda.syncthreads
g.value
bugtrap
nothing
bg.declare
xpect.
xp2.
warf.cfa
jlj.lsda
eturn.i
ypeid.for
jlj.setjmp
nwind.init
h.sjlj.longjmp
h.sjlj.callsite
xperimental.stackmap
h.sjlj.functioncontext
xperimental.patchpoint.i64
xperimental.patchpoint.void
muladd.
loor.
abs.
lt.rounds
rameaddress
cwrite
exagon.
2.or
.orn
.lsli
.andnp
.or.or
ccii
pyui
acci
mac2
r.or
mpyw
2.brevp
irc.ldd
ssat
dsat
egsat
bsat
cmpeq
nd.or
accii
ubacc
raddh
pmpyh
or.or
nsert
ackhl
negh
r.ori
arity
ddpsat
avgh
ubhs
ddub
adub
mpbgt
itpack
r.andn
pyu.up
ac2es
adduh
or.and
lbnorm
nsertp
arityp
sathb
cnegh
ddaddi
lbaddi
xtract
r.andi
ubaddi
ombinew
oundsat
dduhs
ubuhs
itsplit
gtui
odwrapu
mpneqi
und.r
lbmatch
.vaddhubs
.bitsclri
nd.andn
mplteui
bits
a.sc
acs.s
ysu.up
c.s0
y.s0
or.xacc
cbsu
ybsu
lrbit.
xtractu
.r.v
tbit.
sathub
stbit.
lign
rotate
platr
xtractp
r.andix
ombineii
ddb.map
ubb.map
itspliti
mbine
ound.r
.pxfer.map
.nbitsclri
onv.
.lib
csc.s
acsc.s
mmpy
p.s1
bsdiff
cs.s
ys.s
c2s.s
y2s.s
.whc
mpyw.acc
xtractup
nsert.rp
splice
tstbit.
crotate
ddsub
ubadd
.popcountp
2.combine.
2.conv.
mpyrsc.s
pmpy
s.s0
u.s0
.rs1
s.rs
mpyrs.s
.add
mpyh.acc
ertp.rp
erleave
rndpackwh
xtract.rp
sl.ri
sr.ri
ddsubhr
ubaddhr
.asrhub.sat
ddh.
ubh.
ddub.acc
adub.acc
oundscheck
cmpbeq.any
4.fastcorner9
yud.
.s0c
dasl.rrri
xtractu.rp
ogglebit.
rndpackwhs
xtractp.rp
ubi.
4.round.r
.sat
2.vrcmpys.s1rp
sl.i.
.xacc
einterleave
xtractup.rp
sr.i.
p.s1.sat
mpy2s.s
pack
c.up.s1.sat
yri.addr.u2
ac.up.s1.sat
.vsat
b.nopack
h.nopack
.vrcrotate.acc
.to.SXTHI.asrh
.chop
cc.s0
ac.s0
nd.s0
c.s0.sat.
.sat.
cmpys.acc.s1
.vrmpy
h.acc.s
.svw.trun
ub.nopack
uh.nopack
16.sat.
4.fastcorner9.not
2.mpyud.
exagon.M2.mpy.
cc.sat.
ac.sat.
at.rnd.
exagon.S5.vasrhrnd.goodsyntax
exagon.S2.tableidx
.goodsyntax
exagon.S2.asr.i.
.rnd.goodsyntax
exagon.S5.asrhub.rnd.sat.goodsyntax
nvariant.end
t.trampoline
ariant.start
nstrprof.increment
og2.
og10.
ongjmp
ifetime.end
ifetime.start
emset.
emmove.
emcpy.
ips.l
ips.
or.v
ri.b
ddsp
rdsp
di.b
pend
trev
cmsa
hlip
cnt.
shf.
ori.b
lri.
nzi.b
egi.
int.
sve.
ubv.
l.q.
epend
epl.
lat.
sq.s.w
h.qb
osge32
.w.ph
xtr.
lass.
x.a.
n.a.
sqrt.
nsert.
d.q.
ub.q.
s.ph
.s.w
l.s.w
a.r.w
lati.
sq.s.
.r.w
q.ph
xtr.rs.w
ddr.q.
ubr.q.
ackrl.ph
l.s.ph
a.r.
h.r.ph
h.r.qb
mpu.
q.qb
u.h.qb
trunc.
.rs.ph
a.w.ph
addu.w.qb
mpgu.
w.ph
.l.w
aq.s.w.ph
recr
qb.ph
.ph.w
mpgdu.
qx.s.w.ph
aq.sa.w.ph
q.w.ph
q.qb.ph
qx.sa.w.ph
q.s.w.ph
receu.ph.qb
uleu.s.ph.qb
u.ph.qb
.ph.qb
sra.ph.w
.rs.ph.w
ips.prec
qu.ph.qb
qu.s.qb.ph
ips.precr.sra.r.ph.w
vvm.texsurf.handle.internal.
vvm.texsurf.handle.
vvm.reflect.
vvm.ptr.shared.to.gen.
vvm.ptr.local.to.gen.
vvm.ptr.global.to.gen.
vvm.ptr.gen.to.shared.
vvm.ptr.gen.to.param.
vvm.ptr.gen.to.local.
vvm.ptr.gen.to.global.
vvm.ptr.gen.to.constant.
vvm.ptr.constant.to.gen.
vvm.move.ptr.
vvm.ldu.global.p.
vvm.ldu.global.i.
vvm.ldu.global.f.
vvm.ldg.global.p.
vvm.ldg.global.i.
vvm.ldg.global.f.
vvm.compiler.warn.
vvm.compiler.error.
vvm.atomic.load.inc.32.
vvm.atomic.load.dec.32.
vvm.atomic.load.add.f32.
earbyint.
vvm.h2f
vvm.prmt
vvm.
bs.i
lz.i
ad.i
bs.ll
z.ll
opc.i
d.ui
rt.f
oor.
x.ull
n.ull
opc.ll
ound.
runc.
dd.r
arrier0
ull.r
ohi.i2d
ve.i
4.ui
cp.r
mbar.gl
lhi.ull
rt.r
epth
idth
eil.ftz.f
2f.r
.ftz
.rn.ftz
bs.ftz.f
x.ftz.f
n.ftz.f
mbar.
ve.float
otate.b
turate.
q.height
xq.height
rrier0.or
tcast.
oor.ftz.f
ove.double
ound.ftz.f
runc.ftz.f
.ftz.f
rrier0.and
os.approx.f
pprox.f
x2.approx.
g2.approx.
ul.r
in.approx.f
arrier0.popc
qrt.
sspacep.
onst
ocal
sqrt.approx.
turate.ftz.f
q.array.size
ap.lo.hi.b64
xq.array.size
pacep.
lobal
hared
ypep.
mpler
rface
exture
uld.
d.i8.
xq.num.samples
os.approx.ftz.f
iv.approx.ftz.f
x2.approx.ftz.f
g2.approx.ftz.f
p.approx.ftz.d
tate.right.b64
n.approx.ftz.f
.clamp
d.v4
rt.approx.ftz.f
6.clamp
2.clamp
4.clamp
.channel.order
d.i8.trap
xq.channel.order
sqrt.approx.ftz.f
6.trap
2.trap
ex.cube.v4
32.f32
ead.ptx.sreg.tid.
i8.trap
ld4.
.2d.v4
ead.ptx.sreg.ntid.
ust.
ead.ptx.sreg.
taid.
nvreg
d.array.i8.
.channel.data.type
t.b.
d.grad.v4
hannel.data.type
um.mipmap.levels
ctaid.
arpsize
d.array.i
rray.v4
evel.v4
d.level.v4
vvm.su
d.array.
d.array.i8.trap
d.array.v
ube.
nified.
ex.unified.cube.v4
ust.b.
d.array.grad.v4
d4.unified.
vvm.tex.
d.array.level.v4
vvm.tex.unified.
ube.array.level.v4
vvm.tex.unified.cube.
vvm.tex.unified.cube.array.level.v4
bjectsize.
tr.annotation.
pc.mtctr.
owi.
marker
efetch
pc.dcb
pc.dcbtst
ar.sync
ead.pm
tx.read.smid
tx.read.
smid
c.altivec.
x.read.
ridid
aneid
tid.
arpid
ock64
aid.
warpid
stst
tvxl
x.read.nctaid.
pc.altivec.
vscr
pc.altivec.v
mpbfp
ogefp
ddfp
c.altivec.v
xptefp
msubfp
x.read.lanemask.
mpbfp.p
addshs
adduhm
sqrtefp
fp.p
hraddshs
pc.is.decremented.ctr.nonzero
ead_register.
eturnaddress
00.read.tgid.
adcyclecounter
600.read.tidig.
600.read.ngroups.
600.read.local.size.
600.read.global.size.
sub.with.overflow.
mul.with.overflow.
add.with.overflow.
etjmp
gsetjmp
acksave
iglongjmp
tackrestore
tackprotector
tackprotectorcheck
a_end
a_copy
a_start
ar.annotation
rite_register.
core.testwct.
core.testct.
core.syncr.
core.setv.
core.settw.
core.setrdy.
core.setpt.
core.setpsc.
core.setev.
core.setd.
core.setclk.
core.setc.
core.peek.
core.outt.
core.outshr.
core.outct.
core.out.
core.msync.
core.mjoin.
core.int.
core.inshr.
core.initsp.
core.initpc.
core.initlr.
core.initdp.
core.initcp.
core.inct.
core.in.
core.getts.
core.getst.
core.getr.
core.freer.
core.endin.
core.eeu.
core.edu.
core.clrpt.
core.chkct.
86.int
86.xend
test
dtscp
bort
egin
ore.
6.mmx.por
ha1msg
ore.bitrev
emms
andn
clmulqdq
and.
eed.
exte
nds4
vx2.permd
mx.p
a256msg
dd.ss
iv.ss
l.ss
ence
b.ss
.pause
.mwait
1.dpp
op.vp
dnow.p
vx2.p
rmps
zhi.
dds.
xtr.w
nsr.w
d.bw
sbase.
a256rnds2
dmxcsr
shuf.w
mxcsr
dd.sd
iv.sd
l.sd
ub.sd
.ldu.dq
a.extrq
ore.waitevent
dnow
pfsubr
sni.aes
vzeroall
psadbw
lendw
uf.b
12.kor.w
mi.bextr.
skmovq
vnt.dq
dus.
dd.wd
vmskb
ubus.
lflush
lh.w
uf.d
dd.p
ub.p
onitor
.extrqi
e3.pabs.
op.v
rcz.
ore.checkevent
vgusb
ulhrw
nacc
wapd
p.ps.256
ovntdqa
lendvb
dd.sw
ub.sw
12.k
nd.w
ot.w
or.w
ma.vfm
lignr.b
npck
q.ss
s2si
ovmsk.ps
toreu.ps
ddus.
bus.
lendp
blendw
.insertq
e3.p
cvtp
2ps.
2ph.
addu
cswd
qit1
.pfpnacc
mp.p
.256
du.dq.256
cp.ps.256
zeroupper
ndn.w
nor.w
l.dq
qrt.s
ma.vfnm
mineq.ss
642ss
2si64
comi
q.sd
d2si
ovmsk.pd
tore
.addsub.p
lendvp
nsertps
ckusdw
estnzc
nsertqi
ovnt.s
e3.ph
bm.bextri.u
mov.256
rmil2p
ssdq
csswd
askload.p
qrt.p
testnzc.p
ather.
askload.
ul.hr.sw
l.dq.bs
perm2i128
movzx
vttss2si64
comineq.ss
mineq.sd
642sd
1.extractps
eclast
nclast
lend.p
askstore.p
testnzc.256
und.p
qrt.ps.256
askstore.
lendd.
add.ub.sw
v.d.256
inserti128
2usi
si2s
unpck.bw
ddsub.p
ubadd.p
vttsd2si64
askmov.dqu
comineq.sd
.phminposuw
.crc32.32.8
.128
op.vfrcz.p
lendv.p
2dq.256
q2.p
ovmsk.p
toreu.
q.256
ermilvar.p
.vextracti128
vtts
ortest
w.128
b.128
swb.128
ovmskb.128
2.crc32.
4.64
uf.b.128
2.ps.256
2.pd.256
2usi64
si642s
ndscale.s
.512
42.pcmp
dd.sw.128
ub.sw.128
op.vpermil2p
broadcasti128
cp14.p
se42.pcmp
stri
maskstore.p
sse3.pmul.hr.sw.128
sni.aeskeygenassist
vperm
f128.
i.256
lvar.p
.vbroadcast.ss.ps
sqrt14.p
sse3.pmadd.ub.sw.128
vinsertf128.
ask.
catter.
ma.mask.vfm
vextractf128.
atherpf.
lend.
adu.
l.dq.512
ma.mask.vfnm
86.avx512.
q.512
s.512
2dq.512
oadu.p
mpeq.
ulu.dq.512
estm.
lign.
ermt.
catterpf.
broadcast.s
vbroadcastf128.p
.vbroadcast.s
.pd.256
.ps.256
12.mask.
2udq.512
dq2p
toreu.p
2ps.512
2ph.512
ermt.p
ask.c
nflict.
.i32.512
.i64.512
ask.rndscale.p
.pd.512
.ps.512
86.avx512.mask.pbroadcast.
.gpr.512
pr.512
em.512
not_intrinsic
llvm.AMDGPU.div.fixup
llvm.AMDGPU.div.fmas
llvm.AMDGPU.div.scale
llvm.AMDGPU.ldexp
llvm.AMDGPU.rcp
llvm.AMDGPU.rsq
llvm.AMDGPU.rsq.clamped
llvm.AMDGPU.trig.preop
llvm.aarch64.clrex
llvm.aarch64.crc32b
llvm.aarch64.crc32cb
llvm.aarch64.crc32ch
llvm.aarch64.crc32cw
llvm.aarch64.crc32cx
llvm.aarch64.crc32h
llvm.aarch64.crc32w
llvm.aarch64.crc32x
llvm.aarch64.crypto.aesd
llvm.aarch64.crypto.aese
llvm.aarch64.crypto.aesimc
llvm.aarch64.crypto.aesmc
llvm.aarch64.crypto.sha1c
llvm.aarch64.crypto.sha1h
llvm.aarch64.crypto.sha1m
llvm.aarch64.crypto.sha1p
llvm.aarch64.crypto.sha1su0
llvm.aarch64.crypto.sha1su1
llvm.aarch64.crypto.sha256h
llvm.aarch64.crypto.sha256h2
llvm.aarch64.crypto.sha256su0
llvm.aarch64.crypto.sha256su1
llvm.aarch64.dmb
llvm.aarch64.dsb
llvm.aarch64.hint
llvm.aarch64.isb
llvm.aarch64.ldaxp
llvm.aarch64.ldaxr
llvm.aarch64.ldxp
llvm.aarch64.ldxr
llvm.aarch64.neon.abs
llvm.aarch64.neon.addhn
llvm.aarch64.neon.addp
llvm.aarch64.neon.cls
llvm.aarch64.neon.fabd
llvm.aarch64.neon.facge
llvm.aarch64.neon.facgt
llvm.aarch64.neon.faddv
llvm.aarch64.neon.fcvtas
llvm.aarch64.neon.fcvtau
llvm.aarch64.neon.fcvtms
llvm.aarch64.neon.fcvtmu
llvm.aarch64.neon.fcvtns
llvm.aarch64.neon.fcvtnu
llvm.aarch64.neon.fcvtps
llvm.aarch64.neon.fcvtpu
llvm.aarch64.neon.fcvtxn
llvm.aarch64.neon.fcvtzs
llvm.aarch64.neon.fcvtzu
llvm.aarch64.neon.fmax
llvm.aarch64.neon.fmaxnm
llvm.aarch64.neon.fmaxnmp
llvm.aarch64.neon.fmaxnmv
llvm.aarch64.neon.fmaxp
llvm.aarch64.neon.fmaxv
llvm.aarch64.neon.fmin
llvm.aarch64.neon.fminnm
llvm.aarch64.neon.fminnmp
llvm.aarch64.neon.fminnmv
llvm.aarch64.neon.fminp
llvm.aarch64.neon.fminv
llvm.aarch64.neon.fmulx
llvm.aarch64.neon.frecpe
llvm.aarch64.neon.frecps
llvm.aarch64.neon.frecpx
llvm.aarch64.neon.frintn
llvm.aarch64.neon.frsqrte
llvm.aarch64.neon.frsqrts
llvm.aarch64.neon.ld1x2
llvm.aarch64.neon.ld1x3
llvm.aarch64.neon.ld1x4
llvm.aarch64.neon.ld2
llvm.aarch64.neon.ld2lane
llvm.aarch64.neon.ld2r
llvm.aarch64.neon.ld3
llvm.aarch64.neon.ld3lane
llvm.aarch64.neon.ld3r
llvm.aarch64.neon.ld4
llvm.aarch64.neon.ld4lane
llvm.aarch64.neon.ld4r
llvm.aarch64.neon.pmul
llvm.aarch64.neon.pmull
llvm.aarch64.neon.pmull64
llvm.aarch64.neon.raddhn
llvm.aarch64.neon.rbit
llvm.aarch64.neon.rshrn
llvm.aarch64.neon.rsubhn
llvm.aarch64.neon.sabd
llvm.aarch64.neon.saddlp
llvm.aarch64.neon.saddlv
llvm.aarch64.neon.saddv
llvm.aarch64.neon.scalar.sqxtn
llvm.aarch64.neon.scalar.sqxtun
llvm.aarch64.neon.scalar.uqxtn
llvm.aarch64.neon.shadd
llvm.aarch64.neon.shll
llvm.aarch64.neon.shsub
llvm.aarch64.neon.smax
llvm.aarch64.neon.smaxp
llvm.aarch64.neon.smaxv
llvm.aarch64.neon.smin
llvm.aarch64.neon.sminp
llvm.aarch64.neon.sminv
llvm.aarch64.neon.smull
llvm.aarch64.neon.sqabs
llvm.aarch64.neon.sqadd
llvm.aarch64.neon.sqdmulh
llvm.aarch64.neon.sqdmull
llvm.aarch64.neon.sqdmulls.scalar
llvm.aarch64.neon.sqneg
llvm.aarch64.neon.sqrdmulh
llvm.aarch64.neon.sqrshl
llvm.aarch64.neon.sqrshrn
llvm.aarch64.neon.sqrshrun
llvm.aarch64.neon.sqshl
llvm.aarch64.neon.sqshlu
llvm.aarch64.neon.sqshrn
llvm.aarch64.neon.sqshrun
llvm.aarch64.neon.sqsub
llvm.aarch64.neon.sqxtn
llvm.aarch64.neon.sqxtun
llvm.aarch64.neon.srhadd
llvm.aarch64.neon.srshl
llvm.aarch64.neon.sshl
llvm.aarch64.neon.sshll
llvm.aarch64.neon.st1x2
llvm.aarch64.neon.st1x3
llvm.aarch64.neon.st1x4
llvm.aarch64.neon.st2
llvm.aarch64.neon.st2lane
llvm.aarch64.neon.st3
llvm.aarch64.neon.st3lane
llvm.aarch64.neon.st4
llvm.aarch64.neon.st4lane
llvm.aarch64.neon.subhn
llvm.aarch64.neon.suqadd
llvm.aarch64.neon.tbl1
llvm.aarch64.neon.tbl2
llvm.aarch64.neon.tbl3
llvm.aarch64.neon.tbl4
llvm.aarch64.neon.tbx1
llvm.aarch64.neon.tbx2
llvm.aarch64.neon.tbx3
llvm.aarch64.neon.tbx4
llvm.aarch64.neon.uabd
llvm.aarch64.neon.uaddlp
llvm.aarch64.neon.uaddlv
llvm.aarch64.neon.uaddv
llvm.aarch64.neon.uhadd
llvm.aarch64.neon.uhsub
llvm.aarch64.neon.umax
llvm.aarch64.neon.umaxp
llvm.aarch64.neon.umaxv
llvm.aarch64.neon.umin
llvm.aarch64.neon.uminp
llvm.aarch64.neon.uminv
llvm.aarch64.neon.umull
llvm.aarch64.neon.uqadd
llvm.aarch64.neon.uqrshl
llvm.aarch64.neon.uqrshrn
llvm.aarch64.neon.uqshl
llvm.aarch64.neon.uqshrn
llvm.aarch64.neon.uqsub
llvm.aarch64.neon.uqxtn
llvm.aarch64.neon.urecpe
llvm.aarch64.neon.urhadd
llvm.aarch64.neon.urshl
llvm.aarch64.neon.ursqrte
llvm.aarch64.neon.ushl
llvm.aarch64.neon.ushll
llvm.aarch64.neon.usqadd
llvm.aarch64.neon.vcopy.lane
llvm.aarch64.neon.vcvtfp2fxs
llvm.aarch64.neon.vcvtfp2fxu
llvm.aarch64.neon.vcvtfp2hf
llvm.aarch64.neon.vcvtfxs2fp
llvm.aarch64.neon.vcvtfxu2fp
llvm.aarch64.neon.vcvthf2fp
llvm.aarch64.neon.vsli
llvm.aarch64.neon.vsri
llvm.aarch64.rbit
llvm.aarch64.sdiv
llvm.aarch64.sisd.fabd
llvm.aarch64.sisd.fcvtxn
llvm.aarch64.stlxp
llvm.aarch64.stlxr
llvm.aarch64.stxp
llvm.aarch64.stxr
llvm.aarch64.udiv
llvm.adjust.trampoline
llvm.annotation
llvm.arm.cdp
llvm.arm.cdp2
llvm.arm.clrex
llvm.arm.crc32b
llvm.arm.crc32cb
llvm.arm.crc32ch
llvm.arm.crc32cw
llvm.arm.crc32h
llvm.arm.crc32w
llvm.arm.dmb
llvm.arm.dsb
llvm.arm.get.fpscr
llvm.arm.hint
llvm.arm.isb
llvm.arm.ldaex
llvm.arm.ldaexd
llvm.arm.ldrex
llvm.arm.ldrexd
llvm.arm.mcr
llvm.arm.mcr2
llvm.arm.mcrr
llvm.arm.mcrr2
llvm.arm.mrc
llvm.arm.mrc2
llvm.arm.neon.aesd
llvm.arm.neon.aese
llvm.arm.neon.aesimc
llvm.arm.neon.aesmc
llvm.arm.neon.sha1c
llvm.arm.neon.sha1h
llvm.arm.neon.sha1m
llvm.arm.neon.sha1p
llvm.arm.neon.sha1su0
llvm.arm.neon.sha1su1
llvm.arm.neon.sha256h
llvm.arm.neon.sha256h2
llvm.arm.neon.sha256su0
llvm.arm.neon.sha256su1
llvm.arm.neon.vabds
llvm.arm.neon.vabdu
llvm.arm.neon.vabs
llvm.arm.neon.vacge
llvm.arm.neon.vacgt
llvm.arm.neon.vbsl
llvm.arm.neon.vcls
llvm.arm.neon.vclz
llvm.arm.neon.vcnt
llvm.arm.neon.vcvtas
llvm.arm.neon.vcvtau
llvm.arm.neon.vcvtfp2fxs
llvm.arm.neon.vcvtfp2fxu
llvm.arm.neon.vcvtfp2hf
llvm.arm.neon.vcvtfxs2fp
llvm.arm.neon.vcvtfxu2fp
llvm.arm.neon.vcvthf2fp
llvm.arm.neon.vcvtms
llvm.arm.neon.vcvtmu
llvm.arm.neon.vcvtns
llvm.arm.neon.vcvtnu
llvm.arm.neon.vcvtps
llvm.arm.neon.vcvtpu
llvm.arm.neon.vhadds
llvm.arm.neon.vhaddu
llvm.arm.neon.vhsubs
llvm.arm.neon.vhsubu
llvm.arm.neon.vld1
llvm.arm.neon.vld2
llvm.arm.neon.vld2lane
llvm.arm.neon.vld3
llvm.arm.neon.vld3lane
llvm.arm.neon.vld4
llvm.arm.neon.vld4lane
llvm.arm.neon.vmaxnm
llvm.arm.neon.vmaxs
llvm.arm.neon.vmaxu
llvm.arm.neon.vminnm
llvm.arm.neon.vmins
llvm.arm.neon.vminu
llvm.arm.neon.vmullp
llvm.arm.neon.vmulls
llvm.arm.neon.vmullu
llvm.arm.neon.vmulp
llvm.arm.neon.vpadals
llvm.arm.neon.vpadalu
llvm.arm.neon.vpadd
llvm.arm.neon.vpaddls
llvm.arm.neon.vpaddlu
llvm.arm.neon.vpmaxs
llvm.arm.neon.vpmaxu
llvm.arm.neon.vpmins
llvm.arm.neon.vpminu
llvm.arm.neon.vqabs
llvm.arm.neon.vqadds
llvm.arm.neon.vqaddu
llvm.arm.neon.vqdmulh
llvm.arm.neon.vqdmull
llvm.arm.neon.vqmovns
llvm.arm.neon.vqmovnsu
llvm.arm.neon.vqmovnu
llvm.arm.neon.vqneg
llvm.arm.neon.vqrdmulh
llvm.arm.neon.vqrshiftns
llvm.arm.neon.vqrshiftnsu
llvm.arm.neon.vqrshiftnu
llvm.arm.neon.vqrshifts
llvm.arm.neon.vqrshiftu
llvm.arm.neon.vqshiftns
llvm.arm.neon.vqshiftnsu
llvm.arm.neon.vqshiftnu
llvm.arm.neon.vqshifts
llvm.arm.neon.vqshiftsu
llvm.arm.neon.vqshiftu
llvm.arm.neon.vqsubs
llvm.arm.neon.vqsubu
llvm.arm.neon.vraddhn
llvm.arm.neon.vrecpe
llvm.arm.neon.vrecps
llvm.arm.neon.vrhadds
llvm.arm.neon.vrhaddu
llvm.arm.neon.vrinta
llvm.arm.neon.vrintm
llvm.arm.neon.vrintn
llvm.arm.neon.vrintp
llvm.arm.neon.vrintx
llvm.arm.neon.vrintz
llvm.arm.neon.vrshiftn
llvm.arm.neon.vrshifts
llvm.arm.neon.vrshiftu
llvm.arm.neon.vrsqrte
llvm.arm.neon.vrsqrts
llvm.arm.neon.vrsubhn
llvm.arm.neon.vshiftins
llvm.arm.neon.vshifts
llvm.arm.neon.vshiftu
llvm.arm.neon.vst1
llvm.arm.neon.vst2
llvm.arm.neon.vst2lane
llvm.arm.neon.vst3
llvm.arm.neon.vst3lane
llvm.arm.neon.vst4
llvm.arm.neon.vst4lane
llvm.arm.neon.vtbl1
llvm.arm.neon.vtbl2
llvm.arm.neon.vtbl3
llvm.arm.neon.vtbl4
llvm.arm.neon.vtbx1
llvm.arm.neon.vtbx2
llvm.arm.neon.vtbx3
llvm.arm.neon.vtbx4
llvm.arm.qadd
llvm.arm.qsub
llvm.arm.rbit
llvm.arm.set.fpscr
llvm.arm.space
llvm.arm.ssat
llvm.arm.stlex
llvm.arm.stlexd
llvm.arm.strex
llvm.arm.strexd
llvm.arm.thread.pointer
llvm.arm.undefined
llvm.arm.usat
llvm.arm.vcvtr
llvm.arm.vcvtru
llvm.assume
llvm.bswap
llvm.ceil
llvm.clear_cache
llvm.convert.from.fp16
llvm.convert.to.fp16
llvm.convertff
llvm.convertfsi
llvm.convertfui
llvm.convertsif
llvm.convertss
llvm.convertsu
llvm.convertuif
llvm.convertus
llvm.convertuu
llvm.copysign
llvm.cos
llvm.ctlz
llvm.ctpop
llvm.cttz
llvm.cuda.syncthreads
llvm.debugtrap
llvm.donothing
llvm.eh.dwarf.cfa
llvm.eh.return.i32
llvm.eh.return.i64
llvm.eh.sjlj.callsite
llvm.eh.sjlj.functioncontext
llvm.eh.sjlj.longjmp
llvm.eh.sjlj.lsda
llvm.eh.sjlj.setjmp
llvm.eh.typeid.for
llvm.eh.unwind.init
llvm.exp
llvm.exp2
llvm.expect
llvm.experimental.patchpoint.i64
llvm.experimental.patchpoint.void
llvm.experimental.stackmap
llvm.fabs
llvm.floor
llvm.flt.rounds
llvm.fma
llvm.fmuladd
llvm.frameaddress
llvm.gcread
llvm.gcroot
llvm.gcwrite
llvm.hexagon.A2.abs
llvm.hexagon.A2.absp
llvm.hexagon.A2.abssat
llvm.hexagon.A2.add
llvm.hexagon.A2.addh.h16.hh
llvm.hexagon.A2.addh.h16.hl
llvm.hexagon.A2.addh.h16.lh
llvm.hexagon.A2.addh.h16.ll
llvm.hexagon.A2.addh.h16.sat.hh
llvm.hexagon.A2.addh.h16.sat.hl
llvm.hexagon.A2.addh.h16.sat.lh
llvm.hexagon.A2.addh.h16.sat.ll
llvm.hexagon.A2.addh.l16.hl
llvm.hexagon.A2.addh.l16.ll
llvm.hexagon.A2.addh.l16.sat.hl
llvm.hexagon.A2.addh.l16.sat.ll
llvm.hexagon.A2.addi
llvm.hexagon.A2.addp
llvm.hexagon.A2.addpsat
llvm.hexagon.A2.addsat
llvm.hexagon.A2.addsp
llvm.hexagon.A2.and
llvm.hexagon.A2.andir
llvm.hexagon.A2.andp
llvm.hexagon.A2.aslh
llvm.hexagon.A2.asrh
llvm.hexagon.A2.combine.hh
llvm.hexagon.A2.combine.hl
llvm.hexagon.A2.combine.lh
llvm.hexagon.A2.combine.ll
llvm.hexagon.A2.combineii
llvm.hexagon.A2.combinew
llvm.hexagon.A2.max
llvm.hexagon.A2.maxp
llvm.hexagon.A2.maxu
llvm.hexagon.A2.maxup
llvm.hexagon.A2.min
llvm.hexagon.A2.minp
llvm.hexagon.A2.minu
llvm.hexagon.A2.minup
llvm.hexagon.A2.neg
llvm.hexagon.A2.negp
llvm.hexagon.A2.negsat
llvm.hexagon.A2.not
llvm.hexagon.A2.notp
llvm.hexagon.A2.or
llvm.hexagon.A2.orir
llvm.hexagon.A2.orp
llvm.hexagon.A2.roundsat
llvm.hexagon.A2.sat
llvm.hexagon.A2.satb
llvm.hexagon.A2.sath
llvm.hexagon.A2.satub
llvm.hexagon.A2.satuh
llvm.hexagon.A2.sub
llvm.hexagon.A2.subh.h16.hh
llvm.hexagon.A2.subh.h16.hl
llvm.hexagon.A2.subh.h16.lh
llvm.hexagon.A2.subh.h16.ll
llvm.hexagon.A2.subh.h16.sat.hh
llvm.hexagon.A2.subh.h16.sat.hl
llvm.hexagon.A2.subh.h16.sat.lh
llvm.hexagon.A2.subh.h16.sat.ll
llvm.hexagon.A2.subh.l16.hl
llvm.hexagon.A2.subh.l16.ll
llvm.hexagon.A2.subh.l16.sat.hl
llvm.hexagon.A2.subh.l16.sat.ll
llvm.hexagon.A2.subp
llvm.hexagon.A2.subri
llvm.hexagon.A2.subsat
llvm.hexagon.A2.svaddh
llvm.hexagon.A2.svaddhs
llvm.hexagon.A2.svadduhs
llvm.hexagon.A2.svavgh
llvm.hexagon.A2.svavghs
llvm.hexagon.A2.svnavgh
llvm.hexagon.A2.svsubh
llvm.hexagon.A2.svsubhs
llvm.hexagon.A2.svsubuhs
llvm.hexagon.A2.swiz
llvm.hexagon.A2.sxtb
llvm.hexagon.A2.sxth
llvm.hexagon.A2.sxtw
llvm.hexagon.A2.tfr
llvm.hexagon.A2.tfrih
llvm.hexagon.A2.tfril
llvm.hexagon.A2.tfrp
llvm.hexagon.A2.tfrpi
llvm.hexagon.A2.tfrsi
llvm.hexagon.A2.vabsh
llvm.hexagon.A2.vabshsat
llvm.hexagon.A2.vabsw
llvm.hexagon.A2.vabswsat
llvm.hexagon.A2.vaddb.map
llvm.hexagon.A2.vaddh
llvm.hexagon.A2.vaddhs
llvm.hexagon.A2.vaddub
llvm.hexagon.A2.vaddubs
llvm.hexagon.A2.vadduhs
llvm.hexagon.A2.vaddw
llvm.hexagon.A2.vaddws
llvm.hexagon.A2.vavgh
llvm.hexagon.A2.vavghcr
llvm.hexagon.A2.vavghr
llvm.hexagon.A2.vavgub
llvm.hexagon.A2.vavgubr
llvm.hexagon.A2.vavguh
llvm.hexagon.A2.vavguhr
llvm.hexagon.A2.vavguw
llvm.hexagon.A2.vavguwr
llvm.hexagon.A2.vavgw
llvm.hexagon.A2.vavgwcr
llvm.hexagon.A2.vavgwr
llvm.hexagon.A2.vcmpbeq
llvm.hexagon.A2.vcmpbgtu
llvm.hexagon.A2.vcmpheq
llvm.hexagon.A2.vcmphgt
llvm.hexagon.A2.vcmphgtu
llvm.hexagon.A2.vcmpweq
llvm.hexagon.A2.vcmpwgt
llvm.hexagon.A2.vcmpwgtu
llvm.hexagon.A2.vconj
llvm.hexagon.A2.vmaxb
llvm.hexagon.A2.vmaxh
llvm.hexagon.A2.vmaxub
llvm.hexagon.A2.vmaxuh
llvm.hexagon.A2.vmaxuw
llvm.hexagon.A2.vmaxw
llvm.hexagon.A2.vminb
llvm.hexagon.A2.vminh
llvm.hexagon.A2.vminub
llvm.hexagon.A2.vminuh
llvm.hexagon.A2.vminuw
llvm.hexagon.A2.vminw
llvm.hexagon.A2.vnavgh
llvm.hexagon.A2.vnavghcr
llvm.hexagon.A2.vnavghr
llvm.hexagon.A2.vnavgw
llvm.hexagon.A2.vnavgwcr
llvm.hexagon.A2.vnavgwr
llvm.hexagon.A2.vraddub
llvm.hexagon.A2.vraddub.acc
llvm.hexagon.A2.vrsadub
llvm.hexagon.A2.vrsadub.acc
llvm.hexagon.A2.vsubb.map
llvm.hexagon.A2.vsubh
llvm.hexagon.A2.vsubhs
llvm.hexagon.A2.vsubub
llvm.hexagon.A2.vsububs
llvm.hexagon.A2.vsubuhs
llvm.hexagon.A2.vsubw
llvm.hexagon.A2.vsubws
llvm.hexagon.A2.xor
llvm.hexagon.A2.xorp
llvm.hexagon.A2.zxtb
llvm.hexagon.A2.zxth
llvm.hexagon.A4.andn
llvm.hexagon.A4.andnp
llvm.hexagon.A4.bitsplit
llvm.hexagon.A4.bitspliti
llvm.hexagon.A4.boundscheck
llvm.hexagon.A4.cmpbeq
llvm.hexagon.A4.cmpbeqi
llvm.hexagon.A4.cmpbgt
llvm.hexagon.A4.cmpbgti
llvm.hexagon.A4.cmpbgtu
llvm.hexagon.A4.cmpbgtui
llvm.hexagon.A4.cmpheq
llvm.hexagon.A4.cmpheqi
llvm.hexagon.A4.cmphgt
llvm.hexagon.A4.cmphgti
llvm.hexagon.A4.cmphgtu
llvm.hexagon.A4.cmphgtui
llvm.hexagon.A4.combineir
llvm.hexagon.A4.combineri
llvm.hexagon.A4.cround.ri
llvm.hexagon.A4.cround.rr
llvm.hexagon.A4.modwrapu
llvm.hexagon.A4.orn
llvm.hexagon.A4.ornp
llvm.hexagon.A4.rcmpeq
llvm.hexagon.A4.rcmpeqi
llvm.hexagon.A4.rcmpneq
llvm.hexagon.A4.rcmpneqi
llvm.hexagon.A4.round.ri
llvm.hexagon.A4.round.ri.sat
llvm.hexagon.A4.round.rr
llvm.hexagon.A4.round.rr.sat
llvm.hexagon.A4.tlbmatch
llvm.hexagon.A4.vcmpbeq.any
llvm.hexagon.A4.vcmpbeqi
llvm.hexagon.A4.vcmpbgt
llvm.hexagon.A4.vcmpbgti
llvm.hexagon.A4.vcmpbgtui
llvm.hexagon.A4.vcmpheqi
llvm.hexagon.A4.vcmphgti
llvm.hexagon.A4.vcmphgtui
llvm.hexagon.A4.vcmpweqi
llvm.hexagon.A4.vcmpwgti
llvm.hexagon.A4.vcmpwgtui
llvm.hexagon.A4.vrmaxh
llvm.hexagon.A4.vrmaxuh
llvm.hexagon.A4.vrmaxuw
llvm.hexagon.A4.vrmaxw
llvm.hexagon.A4.vrminh
llvm.hexagon.A4.vrminuh
llvm.hexagon.A4.vrminuw
llvm.hexagon.A4.vrminw
llvm.hexagon.A5.vaddhubs
llvm.hexagon.C2.all8
llvm.hexagon.C2.and
llvm.hexagon.C2.andn
llvm.hexagon.C2.any8
llvm.hexagon.C2.bitsclr
llvm.hexagon.C2.bitsclri
llvm.hexagon.C2.bitsset
llvm.hexagon.C2.cmpeq
llvm.hexagon.C2.cmpeqi
llvm.hexagon.C2.cmpeqp
llvm.hexagon.C2.cmpgei
llvm.hexagon.C2.cmpgeui
llvm.hexagon.C2.cmpgt
llvm.hexagon.C2.cmpgti
llvm.hexagon.C2.cmpgtp
llvm.hexagon.C2.cmpgtu
llvm.hexagon.C2.cmpgtui
llvm.hexagon.C2.cmpgtup
llvm.hexagon.C2.cmplt
llvm.hexagon.C2.cmpltu
llvm.hexagon.C2.mask
llvm.hexagon.C2.mux
llvm.hexagon.C2.muxii
llvm.hexagon.C2.muxir
llvm.hexagon.C2.muxri
llvm.hexagon.C2.not
llvm.hexagon.C2.or
llvm.hexagon.C2.orn
llvm.hexagon.C2.pxfer.map
llvm.hexagon.C2.tfrpr
llvm.hexagon.C2.tfrrp
llvm.hexagon.C2.vitpack
llvm.hexagon.C2.vmux
llvm.hexagon.C2.xor
llvm.hexagon.C4.and.and
llvm.hexagon.C4.and.andn
llvm.hexagon.C4.and.or
llvm.hexagon.C4.and.orn
llvm.hexagon.C4.cmplte
llvm.hexagon.C4.cmpltei
llvm.hexagon.C4.cmplteu
llvm.hexagon.C4.cmplteui
llvm.hexagon.C4.cmpneq
llvm.hexagon.C4.cmpneqi
llvm.hexagon.C4.fastcorner9
llvm.hexagon.C4.fastcorner9.not
llvm.hexagon.C4.nbitsclr
llvm.hexagon.C4.nbitsclri
llvm.hexagon.C4.nbitsset
llvm.hexagon.C4.or.and
llvm.hexagon.C4.or.andn
llvm.hexagon.C4.or.or
llvm.hexagon.C4.or.orn
llvm.hexagon.F2.conv.d2df
llvm.hexagon.F2.conv.d2sf
llvm.hexagon.F2.conv.df2d
llvm.hexagon.F2.conv.df2d.chop
llvm.hexagon.F2.conv.df2sf
llvm.hexagon.F2.conv.df2ud
llvm.hexagon.F2.conv.df2ud.chop
llvm.hexagon.F2.conv.df2uw
llvm.hexagon.F2.conv.df2uw.chop
llvm.hexagon.F2.conv.df2w
llvm.hexagon.F2.conv.df2w.chop
llvm.hexagon.F2.conv.sf2d
llvm.hexagon.F2.conv.sf2d.chop
llvm.hexagon.F2.conv.sf2df
llvm.hexagon.F2.conv.sf2ud
llvm.hexagon.F2.conv.sf2ud.chop
llvm.hexagon.F2.conv.sf2uw
llvm.hexagon.F2.conv.sf2uw.chop
llvm.hexagon.F2.conv.sf2w
llvm.hexagon.F2.conv.sf2w.chop
llvm.hexagon.F2.conv.ud2df
llvm.hexagon.F2.conv.ud2sf
llvm.hexagon.F2.conv.uw2df
llvm.hexagon.F2.conv.uw2sf
llvm.hexagon.F2.conv.w2df
llvm.hexagon.F2.conv.w2sf
llvm.hexagon.F2.dfadd
llvm.hexagon.F2.dfclass
llvm.hexagon.F2.dfcmpeq
llvm.hexagon.F2.dfcmpge
llvm.hexagon.F2.dfcmpgt
llvm.hexagon.F2.dfcmpuo
llvm.hexagon.F2.dffixupd
llvm.hexagon.F2.dffixupn
llvm.hexagon.F2.dffixupr
llvm.hexagon.F2.dffma
llvm.hexagon.F2.dffma.lib
llvm.hexagon.F2.dffma.sc
llvm.hexagon.F2.dffms
llvm.hexagon.F2.dffms.lib
llvm.hexagon.F2.dfimm.n
llvm.hexagon.F2.dfimm.p
llvm.hexagon.F2.dfmax
llvm.hexagon.F2.dfmin
llvm.hexagon.F2.dfmpy
llvm.hexagon.F2.dfsub
llvm.hexagon.F2.sfadd
llvm.hexagon.F2.sfclass
llvm.hexagon.F2.sfcmpeq
llvm.hexagon.F2.sfcmpge
llvm.hexagon.F2.sfcmpgt
llvm.hexagon.F2.sfcmpuo
llvm.hexagon.F2.sffixupd
llvm.hexagon.F2.sffixupn
llvm.hexagon.F2.sffixupr
llvm.hexagon.F2.sffma
llvm.hexagon.F2.sffma.lib
llvm.hexagon.F2.sffma.sc
llvm.hexagon.F2.sffms
llvm.hexagon.F2.sffms.lib
llvm.hexagon.F2.sfimm.n
llvm.hexagon.F2.sfimm.p
llvm.hexagon.F2.sfmax
llvm.hexagon.F2.sfmin
llvm.hexagon.F2.sfmpy
llvm.hexagon.F2.sfsub
llvm.hexagon.M2.acci
llvm.hexagon.M2.accii
llvm.hexagon.M2.cmaci.s0
llvm.hexagon.M2.cmacr.s0
llvm.hexagon.M2.cmacs.s0
llvm.hexagon.M2.cmacs.s1
llvm.hexagon.M2.cmacsc.s0
llvm.hexagon.M2.cmacsc.s1
llvm.hexagon.M2.cmpyi.s0
llvm.hexagon.M2.cmpyr.s0
llvm.hexagon.M2.cmpyrs.s0
llvm.hexagon.M2.cmpyrs.s1
llvm.hexagon.M2.cmpyrsc.s0
llvm.hexagon.M2.cmpyrsc.s1
llvm.hexagon.M2.cmpys.s0
llvm.hexagon.M2.cmpys.s1
llvm.hexagon.M2.cmpysc.s0
llvm.hexagon.M2.cmpysc.s1
llvm.hexagon.M2.cnacs.s0
llvm.hexagon.M2.cnacs.s1
llvm.hexagon.M2.cnacsc.s0
llvm.hexagon.M2.cnacsc.s1
llvm.hexagon.M2.dpmpyss.acc.s0
llvm.hexagon.M2.dpmpyss.nac.s0
llvm.hexagon.M2.dpmpyss.rnd.s0
llvm.hexagon.M2.dpmpyss.s0
llvm.hexagon.M2.dpmpyuu.acc.s0
llvm.hexagon.M2.dpmpyuu.nac.s0
llvm.hexagon.M2.dpmpyuu.s0
llvm.hexagon.M2.hmmpyh.rs1
llvm.hexagon.M2.hmmpyh.s1
llvm.hexagon.M2.hmmpyl.rs1
llvm.hexagon.M2.hmmpyl.s1
llvm.hexagon.M2.maci
llvm.hexagon.M2.macsin
llvm.hexagon.M2.macsip
llvm.hexagon.M2.mmachs.rs0
llvm.hexagon.M2.mmachs.rs1
llvm.hexagon.M2.mmachs.s0
llvm.hexagon.M2.mmachs.s1
llvm.hexagon.M2.mmacls.rs0
llvm.hexagon.M2.mmacls.rs1
llvm.hexagon.M2.mmacls.s0
llvm.hexagon.M2.mmacls.s1
llvm.hexagon.M2.mmacuhs.rs0
llvm.hexagon.M2.mmacuhs.rs1
llvm.hexagon.M2.mmacuhs.s0
llvm.hexagon.M2.mmacuhs.s1
llvm.hexagon.M2.mmaculs.rs0
llvm.hexagon.M2.mmaculs.rs1
llvm.hexagon.M2.mmaculs.s0
llvm.hexagon.M2.mmaculs.s1
llvm.hexagon.M2.mmpyh.rs0
llvm.hexagon.M2.mmpyh.rs1
llvm.hexagon.M2.mmpyh.s0
llvm.hexagon.M2.mmpyh.s1
llvm.hexagon.M2.mmpyl.rs0
llvm.hexagon.M2.mmpyl.rs1
llvm.hexagon.M2.mmpyl.s0
llvm.hexagon.M2.mmpyl.s1
llvm.hexagon.M2.mmpyuh.rs0
llvm.hexagon.M2.mmpyuh.rs1
llvm.hexagon.M2.mmpyuh.s0
llvm.hexagon.M2.mmpyuh.s1
llvm.hexagon.M2.mmpyul.rs0
llvm.hexagon.M2.mmpyul.rs1
llvm.hexagon.M2.mmpyul.s0
llvm.hexagon.M2.mmpyul.s1
llvm.hexagon.M2.mpy.acc.hh.s0
llvm.hexagon.M2.mpy.acc.hh.s1
llvm.hexagon.M2.mpy.acc.hl.s0
llvm.hexagon.M2.mpy.acc.hl.s1
llvm.hexagon.M2.mpy.acc.lh.s0
llvm.hexagon.M2.mpy.acc.lh.s1
llvm.hexagon.M2.mpy.acc.ll.s0
llvm.hexagon.M2.mpy.acc.ll.s1
llvm.hexagon.M2.mpy.acc.sat.hh.s0
llvm.hexagon.M2.mpy.acc.sat.hh.s1
llvm.hexagon.M2.mpy.acc.sat.hl.s0
llvm.hexagon.M2.mpy.acc.sat.hl.s1
llvm.hexagon.M2.mpy.acc.sat.lh.s0
llvm.hexagon.M2.mpy.acc.sat.lh.s1
llvm.hexagon.M2.mpy.acc.sat.ll.s0
llvm.hexagon.M2.mpy.acc.sat.ll.s1
llvm.hexagon.M2.mpy.hh.s0
llvm.hexagon.M2.mpy.hh.s1
llvm.hexagon.M2.mpy.hl.s0
llvm.hexagon.M2.mpy.hl.s1
llvm.hexagon.M2.mpy.lh.s0
llvm.hexagon.M2.mpy.lh.s1
llvm.hexagon.M2.mpy.ll.s0
llvm.hexagon.M2.mpy.ll.s1
llvm.hexagon.M2.mpy.nac.hh.s0
llvm.hexagon.M2.mpy.nac.hh.s1
llvm.hexagon.M2.mpy.nac.hl.s0
llvm.hexagon.M2.mpy.nac.hl.s1
llvm.hexagon.M2.mpy.nac.lh.s0
llvm.hexagon.M2.mpy.nac.lh.s1
llvm.hexagon.M2.mpy.nac.ll.s0
llvm.hexagon.M2.mpy.nac.ll.s1
llvm.hexagon.M2.mpy.nac.sat.hh.s0
llvm.hexagon.M2.mpy.nac.sat.hh.s1
llvm.hexagon.M2.mpy.nac.sat.hl.s0
llvm.hexagon.M2.mpy.nac.sat.hl.s1
llvm.hexagon.M2.mpy.nac.sat.lh.s0
llvm.hexagon.M2.mpy.nac.sat.lh.s1
llvm.hexagon.M2.mpy.nac.sat.ll.s0
llvm.hexagon.M2.mpy.nac.sat.ll.s1
llvm.hexagon.M2.mpy.rnd.hh.s0
llvm.hexagon.M2.mpy.rnd.hh.s1
llvm.hexagon.M2.mpy.rnd.hl.s0
llvm.hexagon.M2.mpy.rnd.hl.s1
llvm.hexagon.M2.mpy.rnd.lh.s0
llvm.hexagon.M2.mpy.rnd.lh.s1
llvm.hexagon.M2.mpy.rnd.ll.s0
llvm.hexagon.M2.mpy.rnd.ll.s1
llvm.hexagon.M2.mpy.sat.hh.s0
llvm.hexagon.M2.mpy.sat.hh.s1
llvm.hexagon.M2.mpy.sat.hl.s0
llvm.hexagon.M2.mpy.sat.hl.s1
llvm.hexagon.M2.mpy.sat.lh.s0
llvm.hexagon.M2.mpy.sat.lh.s1
llvm.hexagon.M2.mpy.sat.ll.s0
llvm.hexagon.M2.mpy.sat.ll.s1
llvm.hexagon.M2.mpy.sat.rnd.hh.s0
llvm.hexagon.M2.mpy.sat.rnd.hh.s1
llvm.hexagon.M2.mpy.sat.rnd.hl.s0
llvm.hexagon.M2.mpy.sat.rnd.hl.s1
llvm.hexagon.M2.mpy.sat.rnd.lh.s0
llvm.hexagon.M2.mpy.sat.rnd.lh.s1
llvm.hexagon.M2.mpy.sat.rnd.ll.s0
llvm.hexagon.M2.mpy.sat.rnd.ll.s1
llvm.hexagon.M2.mpy.up
llvm.hexagon.M2.mpy.up.s1
llvm.hexagon.M2.mpy.up.s1.sat
llvm.hexagon.M2.mpyd.acc.hh.s0
llvm.hexagon.M2.mpyd.acc.hh.s1
llvm.hexagon.M2.mpyd.acc.hl.s0
llvm.hexagon.M2.mpyd.acc.hl.s1
llvm.hexagon.M2.mpyd.acc.lh.s0
llvm.hexagon.M2.mpyd.acc.lh.s1
llvm.hexagon.M2.mpyd.acc.ll.s0
llvm.hexagon.M2.mpyd.acc.ll.s1
llvm.hexagon.M2.mpyd.hh.s0
llvm.hexagon.M2.mpyd.hh.s1
llvm.hexagon.M2.mpyd.hl.s0
llvm.hexagon.M2.mpyd.hl.s1
llvm.hexagon.M2.mpyd.lh.s0
llvm.hexagon.M2.mpyd.lh.s1
llvm.hexagon.M2.mpyd.ll.s0
llvm.hexagon.M2.mpyd.ll.s1
llvm.hexagon.M2.mpyd.nac.hh.s0
llvm.hexagon.M2.mpyd.nac.hh.s1
llvm.hexagon.M2.mpyd.nac.hl.s0
llvm.hexagon.M2.mpyd.nac.hl.s1
llvm.hexagon.M2.mpyd.nac.lh.s0
llvm.hexagon.M2.mpyd.nac.lh.s1
llvm.hexagon.M2.mpyd.nac.ll.s0
llvm.hexagon.M2.mpyd.nac.ll.s1
llvm.hexagon.M2.mpyd.rnd.hh.s0
llvm.hexagon.M2.mpyd.rnd.hh.s1
llvm.hexagon.M2.mpyd.rnd.hl.s0
llvm.hexagon.M2.mpyd.rnd.hl.s1
llvm.hexagon.M2.mpyd.rnd.lh.s0
llvm.hexagon.M2.mpyd.rnd.lh.s1
llvm.hexagon.M2.mpyd.rnd.ll.s0
llvm.hexagon.M2.mpyd.rnd.ll.s1
llvm.hexagon.M2.mpyi
llvm.hexagon.M2.mpysmi
llvm.hexagon.M2.mpysu.up
llvm.hexagon.M2.mpyu.acc.hh.s0
llvm.hexagon.M2.mpyu.acc.hh.s1
llvm.hexagon.M2.mpyu.acc.hl.s0
llvm.hexagon.M2.mpyu.acc.hl.s1
llvm.hexagon.M2.mpyu.acc.lh.s0
llvm.hexagon.M2.mpyu.acc.lh.s1
llvm.hexagon.M2.mpyu.acc.ll.s0
llvm.hexagon.M2.mpyu.acc.ll.s1
llvm.hexagon.M2.mpyu.hh.s0
llvm.hexagon.M2.mpyu.hh.s1
llvm.hexagon.M2.mpyu.hl.s0
llvm.hexagon.M2.mpyu.hl.s1
llvm.hexagon.M2.mpyu.lh.s0
llvm.hexagon.M2.mpyu.lh.s1
llvm.hexagon.M2.mpyu.ll.s0
llvm.hexagon.M2.mpyu.ll.s1
llvm.hexagon.M2.mpyu.nac.hh.s0
llvm.hexagon.M2.mpyu.nac.hh.s1
llvm.hexagon.M2.mpyu.nac.hl.s0
llvm.hexagon.M2.mpyu.nac.hl.s1
llvm.hexagon.M2.mpyu.nac.lh.s0
llvm.hexagon.M2.mpyu.nac.lh.s1
llvm.hexagon.M2.mpyu.nac.ll.s0
llvm.hexagon.M2.mpyu.nac.ll.s1
llvm.hexagon.M2.mpyu.up
llvm.hexagon.M2.mpyud.acc.hh.s0
llvm.hexagon.M2.mpyud.acc.hh.s1
llvm.hexagon.M2.mpyud.acc.hl.s0
llvm.hexagon.M2.mpyud.acc.hl.s1
llvm.hexagon.M2.mpyud.acc.lh.s0
llvm.hexagon.M2.mpyud.acc.lh.s1
llvm.hexagon.M2.mpyud.acc.ll.s0
llvm.hexagon.M2.mpyud.acc.ll.s1
llvm.hexagon.M2.mpyud.hh.s0
llvm.hexagon.M2.mpyud.hh.s1
llvm.hexagon.M2.mpyud.hl.s0
llvm.hexagon.M2.mpyud.hl.s1
llvm.hexagon.M2.mpyud.lh.s0
llvm.hexagon.M2.mpyud.lh.s1
llvm.hexagon.M2.mpyud.ll.s0
llvm.hexagon.M2.mpyud.ll.s1
llvm.hexagon.M2.mpyud.nac.hh.s0
llvm.hexagon.M2.mpyud.nac.hh.s1
llvm.hexagon.M2.mpyud.nac.hl.s0
llvm.hexagon.M2.mpyud.nac.hl.s1
llvm.hexagon.M2.mpyud.nac.lh.s0
llvm.hexagon.M2.mpyud.nac.lh.s1
llvm.hexagon.M2.mpyud.nac.ll.s0
llvm.hexagon.M2.mpyud.nac.ll.s1
llvm.hexagon.M2.mpyui
llvm.hexagon.M2.nacci
llvm.hexagon.M2.naccii
llvm.hexagon.M2.subacc
llvm.hexagon.M2.vabsdiffh
llvm.hexagon.M2.vabsdiffw
llvm.hexagon.M2.vcmac.s0.sat.i
llvm.hexagon.M2.vcmac.s0.sat.r
llvm.hexagon.M2.vcmpy.s0.sat.i
llvm.hexagon.M2.vcmpy.s0.sat.r
llvm.hexagon.M2.vcmpy.s1.sat.i
llvm.hexagon.M2.vcmpy.s1.sat.r
llvm.hexagon.M2.vdmacs.s0
llvm.hexagon.M2.vdmacs.s1
llvm.hexagon.M2.vdmpyrs.s0
llvm.hexagon.M2.vdmpyrs.s1
llvm.hexagon.M2.vdmpys.s0
llvm.hexagon.M2.vdmpys.s1
llvm.hexagon.M2.vmac2
llvm.hexagon.M2.vmac2es
llvm.hexagon.M2.vmac2es.s0
llvm.hexagon.M2.vmac2es.s1
llvm.hexagon.M2.vmac2s.s0
llvm.hexagon.M2.vmac2s.s1
llvm.hexagon.M2.vmac2su.s0
llvm.hexagon.M2.vmac2su.s1
llvm.hexagon.M2.vmpy2es.s0
llvm.hexagon.M2.vmpy2es.s1
llvm.hexagon.M2.vmpy2s.s0
llvm.hexagon.M2.vmpy2s.s0pack
llvm.hexagon.M2.vmpy2s.s1
llvm.hexagon.M2.vmpy2s.s1pack
llvm.hexagon.M2.vmpy2su.s0
llvm.hexagon.M2.vmpy2su.s1
llvm.hexagon.M2.vraddh
llvm.hexagon.M2.vradduh
llvm.hexagon.M2.vrcmaci.s0
llvm.hexagon.M2.vrcmaci.s0c
llvm.hexagon.M2.vrcmacr.s0
llvm.hexagon.M2.vrcmacr.s0c
llvm.hexagon.M2.vrcmpyi.s0
llvm.hexagon.M2.vrcmpyi.s0c
llvm.hexagon.M2.vrcmpyr.s0
llvm.hexagon.M2.vrcmpyr.s0c
llvm.hexagon.M2.vrcmpys.acc.s1
llvm.hexagon.M2.vrcmpys.s1
llvm.hexagon.M2.vrcmpys.s1rp
llvm.hexagon.M2.vrmac.s0
llvm.hexagon.M2.vrmpy.s0
llvm.hexagon.M2.xor.xacc
llvm.hexagon.M4.and.and
llvm.hexagon.M4.and.andn
llvm.hexagon.M4.and.or
llvm.hexagon.M4.and.xor
llvm.hexagon.M4.cmpyi.wh
llvm.hexagon.M4.cmpyi.whc
llvm.hexagon.M4.cmpyr.wh
llvm.hexagon.M4.cmpyr.whc
llvm.hexagon.M4.mac.up.s1.sat
llvm.hexagon.M4.mpyri.addi
llvm.hexagon.M4.mpyri.addr
llvm.hexagon.M4.mpyri.addr.u2
llvm.hexagon.M4.mpyrr.addi
llvm.hexagon.M4.mpyrr.addr
llvm.hexagon.M4.nac.up.s1.sat
llvm.hexagon.M4.or.and
llvm.hexagon.M4.or.andn
llvm.hexagon.M4.or.or
llvm.hexagon.M4.or.xor
llvm.hexagon.M4.pmpyw
llvm.hexagon.M4.pmpyw.acc
llvm.hexagon.M4.vpmpyh
llvm.hexagon.M4.vpmpyh.acc
llvm.hexagon.M4.vrmpyeh.acc.s0
llvm.hexagon.M4.vrmpyeh.acc.s1
llvm.hexagon.M4.vrmpyeh.s0
llvm.hexagon.M4.vrmpyeh.s1
llvm.hexagon.M4.vrmpyoh.acc.s0
llvm.hexagon.M4.vrmpyoh.acc.s1
llvm.hexagon.M4.vrmpyoh.s0
llvm.hexagon.M4.vrmpyoh.s1
llvm.hexagon.M4.xor.and
llvm.hexagon.M4.xor.andn
llvm.hexagon.M4.xor.or
llvm.hexagon.M4.xor.xacc
llvm.hexagon.M5.vdmacbsu
llvm.hexagon.M5.vdmpybsu
llvm.hexagon.M5.vmacbsu
llvm.hexagon.M5.vmacbuu
llvm.hexagon.M5.vmpybsu
llvm.hexagon.M5.vmpybuu
llvm.hexagon.M5.vrmacbsu
llvm.hexagon.M5.vrmacbuu
llvm.hexagon.M5.vrmpybsu
llvm.hexagon.M5.vrmpybuu
llvm.hexagon.S2.addasl.rrri
llvm.hexagon.S2.asl.i.p
llvm.hexagon.S2.asl.i.p.acc
llvm.hexagon.S2.asl.i.p.and
llvm.hexagon.S2.asl.i.p.nac
llvm.hexagon.S2.asl.i.p.or
llvm.hexagon.S2.asl.i.p.xacc
llvm.hexagon.S2.asl.i.r
llvm.hexagon.S2.asl.i.r.acc
llvm.hexagon.S2.asl.i.r.and
llvm.hexagon.S2.asl.i.r.nac
llvm.hexagon.S2.asl.i.r.or
llvm.hexagon.S2.asl.i.r.sat
llvm.hexagon.S2.asl.i.r.xacc
llvm.hexagon.S2.asl.i.vh
llvm.hexagon.S2.asl.i.vw
llvm.hexagon.S2.asl.r.p
llvm.hexagon.S2.asl.r.p.acc
llvm.hexagon.S2.asl.r.p.and
llvm.hexagon.S2.asl.r.p.nac
llvm.hexagon.S2.asl.r.p.or
llvm.hexagon.S2.asl.r.p.xor
llvm.hexagon.S2.asl.r.r
llvm.hexagon.S2.asl.r.r.acc
llvm.hexagon.S2.asl.r.r.and
llvm.hexagon.S2.asl.r.r.nac
llvm.hexagon.S2.asl.r.r.or
llvm.hexagon.S2.asl.r.r.sat
llvm.hexagon.S2.asl.r.vh
llvm.hexagon.S2.asl.r.vw
llvm.hexagon.S2.asr.i.p
llvm.hexagon.S2.asr.i.p.acc
llvm.hexagon.S2.asr.i.p.and
llvm.hexagon.S2.asr.i.p.nac
llvm.hexagon.S2.asr.i.p.or
llvm.hexagon.S2.asr.i.p.rnd
llvm.hexagon.S2.asr.i.p.rnd.goodsyntax
llvm.hexagon.S2.asr.i.r
llvm.hexagon.S2.asr.i.r.acc
llvm.hexagon.S2.asr.i.r.and
llvm.hexagon.S2.asr.i.r.nac
llvm.hexagon.S2.asr.i.r.or
llvm.hexagon.S2.asr.i.r.rnd
llvm.hexagon.S2.asr.i.r.rnd.goodsyntax
llvm.hexagon.S2.asr.i.svw.trun
llvm.hexagon.S2.asr.i.vh
llvm.hexagon.S2.asr.i.vw
llvm.hexagon.S2.asr.r.p
llvm.hexagon.S2.asr.r.p.acc
llvm.hexagon.S2.asr.r.p.and
llvm.hexagon.S2.asr.r.p.nac
llvm.hexagon.S2.asr.r.p.or
llvm.hexagon.S2.asr.r.p.xor
llvm.hexagon.S2.asr.r.r
llvm.hexagon.S2.asr.r.r.acc
llvm.hexagon.S2.asr.r.r.and
llvm.hexagon.S2.asr.r.r.nac
llvm.hexagon.S2.asr.r.r.or
llvm.hexagon.S2.asr.r.r.sat
llvm.hexagon.S2.asr.r.svw.trun
llvm.hexagon.S2.asr.r.vh
llvm.hexagon.S2.asr.r.vw
llvm.hexagon.S2.brev
llvm.hexagon.S2.brevp
llvm.hexagon.S2.cl0
llvm.hexagon.S2.cl0p
llvm.hexagon.S2.cl1
llvm.hexagon.S2.cl1p
llvm.hexagon.S2.clb
llvm.hexagon.S2.clbnorm
llvm.hexagon.S2.clbp
llvm.hexagon.S2.clrbit.i
llvm.hexagon.S2.clrbit.r
llvm.hexagon.S2.ct0
llvm.hexagon.S2.ct0p
llvm.hexagon.S2.ct1
llvm.hexagon.S2.ct1p
llvm.hexagon.S2.deinterleave
llvm.hexagon.S2.extractu
llvm.hexagon.S2.extractu.rp
llvm.hexagon.S2.extractup
llvm.hexagon.S2.extractup.rp
llvm.hexagon.S2.insert
llvm.hexagon.S2.insert.rp
llvm.hexagon.S2.insertp
llvm.hexagon.S2.insertp.rp
llvm.hexagon.S2.interleave
llvm.hexagon.S2.lfsp
llvm.hexagon.S2.lsl.r.p
llvm.hexagon.S2.lsl.r.p.acc
llvm.hexagon.S2.lsl.r.p.and
llvm.hexagon.S2.lsl.r.p.nac
llvm.hexagon.S2.lsl.r.p.or
llvm.hexagon.S2.lsl.r.p.xor
llvm.hexagon.S2.lsl.r.r
llvm.hexagon.S2.lsl.r.r.acc
llvm.hexagon.S2.lsl.r.r.and
llvm.hexagon.S2.lsl.r.r.nac
llvm.hexagon.S2.lsl.r.r.or
llvm.hexagon.S2.lsl.r.vh
llvm.hexagon.S2.lsl.r.vw
llvm.hexagon.S2.lsr.i.p
llvm.hexagon.S2.lsr.i.p.acc
llvm.hexagon.S2.lsr.i.p.and
llvm.hexagon.S2.lsr.i.p.nac
llvm.hexagon.S2.lsr.i.p.or
llvm.hexagon.S2.lsr.i.p.xacc
llvm.hexagon.S2.lsr.i.r
llvm.hexagon.S2.lsr.i.r.acc
llvm.hexagon.S2.lsr.i.r.and
llvm.hexagon.S2.lsr.i.r.nac
llvm.hexagon.S2.lsr.i.r.or
llvm.hexagon.S2.lsr.i.r.xacc
llvm.hexagon.S2.lsr.i.vh
llvm.hexagon.S2.lsr.i.vw
llvm.hexagon.S2.lsr.r.p
llvm.hexagon.S2.lsr.r.p.acc
llvm.hexagon.S2.lsr.r.p.and
llvm.hexagon.S2.lsr.r.p.nac
llvm.hexagon.S2.lsr.r.p.or
llvm.hexagon.S2.lsr.r.p.xor
llvm.hexagon.S2.lsr.r.r
llvm.hexagon.S2.lsr.r.r.acc
llvm.hexagon.S2.lsr.r.r.and
llvm.hexagon.S2.lsr.r.r.nac
llvm.hexagon.S2.lsr.r.r.or
llvm.hexagon.S2.lsr.r.vh
llvm.hexagon.S2.lsr.r.vw
llvm.hexagon.S2.packhl
llvm.hexagon.S2.parityp
llvm.hexagon.S2.setbit.i
llvm.hexagon.S2.setbit.r
llvm.hexagon.S2.shuffeb
llvm.hexagon.S2.shuffeh
llvm.hexagon.S2.shuffob
llvm.hexagon.S2.shuffoh
llvm.hexagon.S2.svsathb
llvm.hexagon.S2.svsathub
llvm.hexagon.S2.tableidxb.goodsyntax
llvm.hexagon.S2.tableidxd.goodsyntax
llvm.hexagon.S2.tableidxh.goodsyntax
llvm.hexagon.S2.tableidxw.goodsyntax
llvm.hexagon.S2.togglebit.i
llvm.hexagon.S2.togglebit.r
llvm.hexagon.S2.tstbit.i
llvm.hexagon.S2.tstbit.r
llvm.hexagon.S2.valignib
llvm.hexagon.S2.valignrb
llvm.hexagon.S2.vcnegh
llvm.hexagon.S2.vcrotate
llvm.hexagon.S2.vrcnegh
llvm.hexagon.S2.vrndpackwh
llvm.hexagon.S2.vrndpackwhs
llvm.hexagon.S2.vsathb
llvm.hexagon.S2.vsathb.nopack
llvm.hexagon.S2.vsathub
llvm.hexagon.S2.vsathub.nopack
llvm.hexagon.S2.vsatwh
llvm.hexagon.S2.vsatwh.nopack
llvm.hexagon.S2.vsatwuh
llvm.hexagon.S2.vsatwuh.nopack
llvm.hexagon.S2.vsplatrb
llvm.hexagon.S2.vsplatrh
llvm.hexagon.S2.vspliceib
llvm.hexagon.S2.vsplicerb
llvm.hexagon.S2.vsxtbh
llvm.hexagon.S2.vsxthw
llvm.hexagon.S2.vtrunehb
llvm.hexagon.S2.vtrunewh
llvm.hexagon.S2.vtrunohb
llvm.hexagon.S2.vtrunowh
llvm.hexagon.S2.vzxtbh
llvm.hexagon.S2.vzxthw
llvm.hexagon.S4.addaddi
llvm.hexagon.S4.addi.asl.ri
llvm.hexagon.S4.addi.lsr.ri
llvm.hexagon.S4.andi.asl.ri
llvm.hexagon.S4.andi.lsr.ri
llvm.hexagon.S4.clbaddi
llvm.hexagon.S4.clbpaddi
llvm.hexagon.S4.clbpnorm
llvm.hexagon.S4.extract
llvm.hexagon.S4.extract.rp
llvm.hexagon.S4.extractp
llvm.hexagon.S4.extractp.rp
llvm.hexagon.S4.lsli
llvm.hexagon.S4.ntstbit.i
llvm.hexagon.S4.ntstbit.r
llvm.hexagon.S4.or.andi
llvm.hexagon.S4.or.andix
llvm.hexagon.S4.or.ori
llvm.hexagon.S4.ori.asl.ri
llvm.hexagon.S4.ori.lsr.ri
llvm.hexagon.S4.parity
llvm.hexagon.S4.subaddi
llvm.hexagon.S4.subi.asl.ri
llvm.hexagon.S4.subi.lsr.ri
llvm.hexagon.S4.vrcrotate
llvm.hexagon.S4.vrcrotate.acc
llvm.hexagon.S4.vxaddsubh
llvm.hexagon.S4.vxaddsubhr
llvm.hexagon.S4.vxaddsubw
llvm.hexagon.S4.vxsubaddh
llvm.hexagon.S4.vxsubaddhr
llvm.hexagon.S4.vxsubaddw
llvm.hexagon.S5.asrhub.rnd.sat.goodsyntax
llvm.hexagon.S5.asrhub.sat
llvm.hexagon.S5.popcountp
llvm.hexagon.S5.vasrhrnd.goodsyntax
llvm.hexagon.SI.to.SXTHI.asrh
llvm.hexagon.circ.ldd
llvm.instrprof.increment
llvm.invariant.end
llvm.invariant.start
llvm.lifetime.end
llvm.lifetime.start
llvm.log
llvm.log10
llvm.log2
llvm.longjmp
llvm.memcpy
llvm.memmove
llvm.memset
llvm.mips.absq.s.ph
llvm.mips.absq.s.qb
llvm.mips.absq.s.w
llvm.mips.add.a.b
llvm.mips.add.a.d
llvm.mips.add.a.h
llvm.mips.add.a.w
llvm.mips.addq.ph
llvm.mips.addq.s.ph
llvm.mips.addq.s.w
llvm.mips.addqh.ph
llvm.mips.addqh.r.ph
llvm.mips.addqh.r.w
llvm.mips.addqh.w
llvm.mips.adds.a.b
llvm.mips.adds.a.d
llvm.mips.adds.a.h
llvm.mips.adds.a.w
llvm.mips.adds.s.b
llvm.mips.adds.s.d
llvm.mips.adds.s.h
llvm.mips.adds.s.w
llvm.mips.adds.u.b
llvm.mips.adds.u.d
llvm.mips.adds.u.h
llvm.mips.adds.u.w
llvm.mips.addsc
llvm.mips.addu.ph
llvm.mips.addu.qb
llvm.mips.addu.s.ph
llvm.mips.addu.s.qb
llvm.mips.adduh.qb
llvm.mips.adduh.r.qb
llvm.mips.addv.b
llvm.mips.addv.d
llvm.mips.addv.h
llvm.mips.addv.w
llvm.mips.addvi.b
llvm.mips.addvi.d
llvm.mips.addvi.h
llvm.mips.addvi.w
llvm.mips.addwc
llvm.mips.and.v
llvm.mips.andi.b
llvm.mips.append
llvm.mips.asub.s.b
llvm.mips.asub.s.d
llvm.mips.asub.s.h
llvm.mips.asub.s.w
llvm.mips.asub.u.b
llvm.mips.asub.u.d
llvm.mips.asub.u.h
llvm.mips.asub.u.w
llvm.mips.ave.s.b
llvm.mips.ave.s.d
llvm.mips.ave.s.h
llvm.mips.ave.s.w
llvm.mips.ave.u.b
llvm.mips.ave.u.d
llvm.mips.ave.u.h
llvm.mips.ave.u.w
llvm.mips.aver.s.b
llvm.mips.aver.s.d
llvm.mips.aver.s.h
llvm.mips.aver.s.w
llvm.mips.aver.u.b
llvm.mips.aver.u.d
llvm.mips.aver.u.h
llvm.mips.aver.u.w
llvm.mips.balign
llvm.mips.bclr.b
llvm.mips.bclr.d
llvm.mips.bclr.h
llvm.mips.bclr.w
llvm.mips.bclri.b
llvm.mips.bclri.d
llvm.mips.bclri.h
llvm.mips.bclri.w
llvm.mips.binsl.b
llvm.mips.binsl.d
llvm.mips.binsl.h
llvm.mips.binsl.w
llvm.mips.binsli.b
llvm.mips.binsli.d
llvm.mips.binsli.h
llvm.mips.binsli.w
llvm.mips.binsr.b
llvm.mips.binsr.d
llvm.mips.binsr.h
llvm.mips.binsr.w
llvm.mips.binsri.b
llvm.mips.binsri.d
llvm.mips.binsri.h
llvm.mips.binsri.w
llvm.mips.bitrev
llvm.mips.bmnz.v
llvm.mips.bmnzi.b
llvm.mips.bmz.v
llvm.mips.bmzi.b
llvm.mips.bneg.b
llvm.mips.bneg.d
llvm.mips.bneg.h
llvm.mips.bneg.w
llvm.mips.bnegi.b
llvm.mips.bnegi.d
llvm.mips.bnegi.h
llvm.mips.bnegi.w
llvm.mips.bnz.b
llvm.mips.bnz.d
llvm.mips.bnz.h
llvm.mips.bnz.v
llvm.mips.bnz.w
llvm.mips.bposge32
llvm.mips.bsel.v
llvm.mips.bseli.b
llvm.mips.bset.b
llvm.mips.bset.d
llvm.mips.bset.h
llvm.mips.bset.w
llvm.mips.bseti.b
llvm.mips.bseti.d
llvm.mips.bseti.h
llvm.mips.bseti.w
llvm.mips.bz.b
llvm.mips.bz.d
llvm.mips.bz.h
llvm.mips.bz.v
llvm.mips.bz.w
llvm.mips.ceq.b
llvm.mips.ceq.d
llvm.mips.ceq.h
llvm.mips.ceq.w
llvm.mips.ceqi.b
llvm.mips.ceqi.d
llvm.mips.ceqi.h
llvm.mips.ceqi.w
llvm.mips.cfcmsa
llvm.mips.cle.s.b
llvm.mips.cle.s.d
llvm.mips.cle.s.h
llvm.mips.cle.s.w
llvm.mips.cle.u.b
llvm.mips.cle.u.d
llvm.mips.cle.u.h
llvm.mips.cle.u.w
llvm.mips.clei.s.b
llvm.mips.clei.s.d
llvm.mips.clei.s.h
llvm.mips.clei.s.w
llvm.mips.clei.u.b
llvm.mips.clei.u.d
llvm.mips.clei.u.h
llvm.mips.clei.u.w
llvm.mips.clt.s.b
llvm.mips.clt.s.d
llvm.mips.clt.s.h
llvm.mips.clt.s.w
llvm.mips.clt.u.b
llvm.mips.clt.u.d
llvm.mips.clt.u.h
llvm.mips.clt.u.w
llvm.mips.clti.s.b
llvm.mips.clti.s.d
llvm.mips.clti.s.h
llvm.mips.clti.s.w
llvm.mips.clti.u.b
llvm.mips.clti.u.d
llvm.mips.clti.u.h
llvm.mips.clti.u.w
llvm.mips.cmp.eq.ph
llvm.mips.cmp.le.ph
llvm.mips.cmp.lt.ph
llvm.mips.cmpgdu.eq.qb
llvm.mips.cmpgdu.le.qb
llvm.mips.cmpgdu.lt.qb
llvm.mips.cmpgu.eq.qb
llvm.mips.cmpgu.le.qb
llvm.mips.cmpgu.lt.qb
llvm.mips.cmpu.eq.qb
llvm.mips.cmpu.le.qb
llvm.mips.cmpu.lt.qb
llvm.mips.copy.s.b
llvm.mips.copy.s.d
llvm.mips.copy.s.h
llvm.mips.copy.s.w
llvm.mips.copy.u.b
llvm.mips.copy.u.d
llvm.mips.copy.u.h
llvm.mips.copy.u.w
llvm.mips.ctcmsa
llvm.mips.div.s.b
llvm.mips.div.s.d
llvm.mips.div.s.h
llvm.mips.div.s.w
llvm.mips.div.u.b
llvm.mips.div.u.d
llvm.mips.div.u.h
llvm.mips.div.u.w
llvm.mips.dlsa
llvm.mips.dotp.s.d
llvm.mips.dotp.s.h
llvm.mips.dotp.s.w
llvm.mips.dotp.u.d
llvm.mips.dotp.u.h
llvm.mips.dotp.u.w
llvm.mips.dpa.w.ph
llvm.mips.dpadd.s.d
llvm.mips.dpadd.s.h
llvm.mips.dpadd.s.w
llvm.mips.dpadd.u.d
llvm.mips.dpadd.u.h
llvm.mips.dpadd.u.w
llvm.mips.dpaq.s.w.ph
llvm.mips.dpaq.sa.l.w
llvm.mips.dpaqx.s.w.ph
llvm.mips.dpaqx.sa.w.ph
llvm.mips.dpau.h.qbl
llvm.mips.dpau.h.qbr
llvm.mips.dpax.w.ph
llvm.mips.dps.w.ph
llvm.mips.dpsq.s.w.ph
llvm.mips.dpsq.sa.l.w
llvm.mips.dpsqx.s.w.ph
llvm.mips.dpsqx.sa.w.ph
llvm.mips.dpsu.h.qbl
llvm.mips.dpsu.h.qbr
llvm.mips.dpsub.s.d
llvm.mips.dpsub.s.h
llvm.mips.dpsub.s.w
llvm.mips.dpsub.u.d
llvm.mips.dpsub.u.h
llvm.mips.dpsub.u.w
llvm.mips.dpsx.w.ph
llvm.mips.extp
llvm.mips.extpdp
llvm.mips.extr.r.w
llvm.mips.extr.rs.w
llvm.mips.extr.s.h
llvm.mips.extr.w
llvm.mips.fadd.d
llvm.mips.fadd.w
llvm.mips.fcaf.d
llvm.mips.fcaf.w
llvm.mips.fceq.d
llvm.mips.fceq.w
llvm.mips.fclass.d
llvm.mips.fclass.w
llvm.mips.fcle.d
llvm.mips.fcle.w
llvm.mips.fclt.d
llvm.mips.fclt.w
llvm.mips.fcne.d
llvm.mips.fcne.w
llvm.mips.fcor.d
llvm.mips.fcor.w
llvm.mips.fcueq.d
llvm.mips.fcueq.w
llvm.mips.fcule.d
llvm.mips.fcule.w
llvm.mips.fcult.d
llvm.mips.fcult.w
llvm.mips.fcun.d
llvm.mips.fcun.w
llvm.mips.fcune.d
llvm.mips.fcune.w
llvm.mips.fdiv.d
llvm.mips.fdiv.w
llvm.mips.fexdo.h
llvm.mips.fexdo.w
llvm.mips.fexp2.d
llvm.mips.fexp2.w
llvm.mips.fexupl.d
llvm.mips.fexupl.w
llvm.mips.fexupr.d
llvm.mips.fexupr.w
llvm.mips.ffint.s.d
llvm.mips.ffint.s.w
llvm.mips.ffint.u.d
llvm.mips.ffint.u.w
llvm.mips.ffql.d
llvm.mips.ffql.w
llvm.mips.ffqr.d
llvm.mips.ffqr.w
llvm.mips.fill.b
llvm.mips.fill.d
llvm.mips.fill.h
llvm.mips.fill.w
llvm.mips.flog2.d
llvm.mips.flog2.w
llvm.mips.fmadd.d
llvm.mips.fmadd.w
llvm.mips.fmax.a.d
llvm.mips.fmax.a.w
llvm.mips.fmax.d
llvm.mips.fmax.w
llvm.mips.fmin.a.d
llvm.mips.fmin.a.w
llvm.mips.fmin.d
llvm.mips.fmin.w
llvm.mips.fmsub.d
llvm.mips.fmsub.w
llvm.mips.fmul.d
llvm.mips.fmul.w
llvm.mips.frcp.d
llvm.mips.frcp.w
llvm.mips.frint.d
llvm.mips.frint.w
llvm.mips.frsqrt.d
llvm.mips.frsqrt.w
llvm.mips.fsaf.d
llvm.mips.fsaf.w
llvm.mips.fseq.d
llvm.mips.fseq.w
llvm.mips.fsle.d
llvm.mips.fsle.w
llvm.mips.fslt.d
llvm.mips.fslt.w
llvm.mips.fsne.d
llvm.mips.fsne.w
llvm.mips.fsor.d
llvm.mips.fsor.w
llvm.mips.fsqrt.d
llvm.mips.fsqrt.w
llvm.mips.fsub.d
llvm.mips.fsub.w
llvm.mips.fsueq.d
llvm.mips.fsueq.w
llvm.mips.fsule.d
llvm.mips.fsule.w
llvm.mips.fsult.d
llvm.mips.fsult.w
llvm.mips.fsun.d
llvm.mips.fsun.w
llvm.mips.fsune.d
llvm.mips.fsune.w
llvm.mips.ftint.s.d
llvm.mips.ftint.s.w
llvm.mips.ftint.u.d
llvm.mips.ftint.u.w
llvm.mips.ftq.h
llvm.mips.ftq.w
llvm.mips.ftrunc.s.d
llvm.mips.ftrunc.s.w
llvm.mips.ftrunc.u.d
llvm.mips.ftrunc.u.w
llvm.mips.hadd.s.d
llvm.mips.hadd.s.h
llvm.mips.hadd.s.w
llvm.mips.hadd.u.d
llvm.mips.hadd.u.h
llvm.mips.hadd.u.w
llvm.mips.hsub.s.d
llvm.mips.hsub.s.h
llvm.mips.hsub.s.w
llvm.mips.hsub.u.d
llvm.mips.hsub.u.h
llvm.mips.hsub.u.w
llvm.mips.ilvev.b
llvm.mips.ilvev.d
llvm.mips.ilvev.h
llvm.mips.ilvev.w
llvm.mips.ilvl.b
llvm.mips.ilvl.d
llvm.mips.ilvl.h
llvm.mips.ilvl.w
llvm.mips.ilvod.b
llvm.mips.ilvod.d
llvm.mips.ilvod.h
llvm.mips.ilvod.w
llvm.mips.ilvr.b
llvm.mips.ilvr.d
llvm.mips.ilvr.h
llvm.mips.ilvr.w
llvm.mips.insert.b
llvm.mips.insert.d
llvm.mips.insert.h
llvm.mips.insert.w
llvm.mips.insv
llvm.mips.insve.b
llvm.mips.insve.d
llvm.mips.insve.h
llvm.mips.insve.w
llvm.mips.lbux
llvm.mips.ld.b
llvm.mips.ld.d
llvm.mips.ld.h
llvm.mips.ld.w
llvm.mips.ldi.b
llvm.mips.ldi.d
llvm.mips.ldi.h
llvm.mips.ldi.w
llvm.mips.lhx
llvm.mips.lsa
llvm.mips.lwx
llvm.mips.madd
llvm.mips.madd.q.h
llvm.mips.madd.q.w
llvm.mips.maddr.q.h
llvm.mips.maddr.q.w
llvm.mips.maddu
llvm.mips.maddv.b
llvm.mips.maddv.d
llvm.mips.maddv.h
llvm.mips.maddv.w
llvm.mips.maq.s.w.phl
llvm.mips.maq.s.w.phr
llvm.mips.maq.sa.w.phl
llvm.mips.maq.sa.w.phr
llvm.mips.max.a.b
llvm.mips.max.a.d
llvm.mips.max.a.h
llvm.mips.max.a.w
llvm.mips.max.s.b
llvm.mips.max.s.d
llvm.mips.max.s.h
llvm.mips.max.s.w
llvm.mips.max.u.b
llvm.mips.max.u.d
llvm.mips.max.u.h
llvm.mips.max.u.w
llvm.mips.maxi.s.b
llvm.mips.maxi.s.d
llvm.mips.maxi.s.h
llvm.mips.maxi.s.w
llvm.mips.maxi.u.b
llvm.mips.maxi.u.d
llvm.mips.maxi.u.h
llvm.mips.maxi.u.w
llvm.mips.min.a.b
llvm.mips.min.a.d
llvm.mips.min.a.h
llvm.mips.min.a.w
llvm.mips.min.s.b
llvm.mips.min.s.d
llvm.mips.min.s.h
llvm.mips.min.s.w
llvm.mips.min.u.b
llvm.mips.min.u.d
llvm.mips.min.u.h
llvm.mips.min.u.w
llvm.mips.mini.s.b
llvm.mips.mini.s.d
llvm.mips.mini.s.h
llvm.mips.mini.s.w
llvm.mips.mini.u.b
llvm.mips.mini.u.d
llvm.mips.mini.u.h
llvm.mips.mini.u.w
llvm.mips.mod.s.b
llvm.mips.mod.s.d
llvm.mips.mod.s.h
llvm.mips.mod.s.w
llvm.mips.mod.u.b
llvm.mips.mod.u.d
llvm.mips.mod.u.h
llvm.mips.mod.u.w
llvm.mips.modsub
llvm.mips.move.v
llvm.mips.msub
llvm.mips.msub.q.h
llvm.mips.msub.q.w
llvm.mips.msubr.q.h
llvm.mips.msubr.q.w
llvm.mips.msubu
llvm.mips.msubv.b
llvm.mips.msubv.d
llvm.mips.msubv.h
llvm.mips.msubv.w
llvm.mips.mthlip
llvm.mips.mul.ph
llvm.mips.mul.q.h
llvm.mips.mul.q.w
llvm.mips.mul.s.ph
llvm.mips.muleq.s.w.phl
llvm.mips.muleq.s.w.phr
llvm.mips.muleu.s.ph.qbl
llvm.mips.muleu.s.ph.qbr
llvm.mips.mulq.rs.ph
llvm.mips.mulq.rs.w
llvm.mips.mulq.s.ph
llvm.mips.mulq.s.w
llvm.mips.mulr.q.h
llvm.mips.mulr.q.w
llvm.mips.mulsa.w.ph
llvm.mips.mulsaq.s.w.ph
llvm.mips.mult
llvm.mips.multu
llvm.mips.mulv.b
llvm.mips.mulv.d
llvm.mips.mulv.h
llvm.mips.mulv.w
llvm.mips.nloc.b
llvm.mips.nloc.d
llvm.mips.nloc.h
llvm.mips.nloc.w
llvm.mips.nlzc.b
llvm.mips.nlzc.d
llvm.mips.nlzc.h
llvm.mips.nlzc.w
llvm.mips.nor.v
llvm.mips.nori.b
llvm.mips.or.v
llvm.mips.ori.b
llvm.mips.packrl.ph
llvm.mips.pckev.b
llvm.mips.pckev.d
llvm.mips.pckev.h
llvm.mips.pckev.w
llvm.mips.pckod.b
llvm.mips.pckod.d
llvm.mips.pckod.h
llvm.mips.pckod.w
llvm.mips.pcnt.b
llvm.mips.pcnt.d
llvm.mips.pcnt.h
llvm.mips.pcnt.w
llvm.mips.pick.ph
llvm.mips.pick.qb
llvm.mips.preceq.w.phl
llvm.mips.preceq.w.phr
llvm.mips.precequ.ph.qbl
llvm.mips.precequ.ph.qbla
llvm.mips.precequ.ph.qbr
llvm.mips.precequ.ph.qbra
llvm.mips.preceu.ph.qbl
llvm.mips.preceu.ph.qbla
llvm.mips.preceu.ph.qbr
llvm.mips.preceu.ph.qbra
llvm.mips.precr.qb.ph
llvm.mips.precr.sra.ph.w
llvm.mips.precr.sra.r.ph.w
llvm.mips.precrq.ph.w
llvm.mips.precrq.qb.ph
llvm.mips.precrq.rs.ph.w
llvm.mips.precrqu.s.qb.ph
llvm.mips.prepend
llvm.mips.raddu.w.qb
llvm.mips.rddsp
llvm.mips.repl.ph
llvm.mips.repl.qb
llvm.mips.sat.s.b
llvm.mips.sat.s.d
llvm.mips.sat.s.h
llvm.mips.sat.s.w
llvm.mips.sat.u.b
llvm.mips.sat.u.d
llvm.mips.sat.u.h
llvm.mips.sat.u.w
llvm.mips.shf.b
llvm.mips.shf.h
llvm.mips.shf.w
llvm.mips.shilo
llvm.mips.shll.ph
llvm.mips.shll.qb
llvm.mips.shll.s.ph
llvm.mips.shll.s.w
llvm.mips.shra.ph
llvm.mips.shra.qb
llvm.mips.shra.r.ph
llvm.mips.shra.r.qb
llvm.mips.shra.r.w
llvm.mips.shrl.ph
llvm.mips.shrl.qb
llvm.mips.sld.b
llvm.mips.sld.d
llvm.mips.sld.h
llvm.mips.sld.w
llvm.mips.sldi.b
llvm.mips.sldi.d
llvm.mips.sldi.h
llvm.mips.sldi.w
llvm.mips.sll.b
llvm.mips.sll.d
llvm.mips.sll.h
llvm.mips.sll.w
llvm.mips.slli.b
llvm.mips.slli.d
llvm.mips.slli.h
llvm.mips.slli.w
llvm.mips.splat.b
llvm.mips.splat.d
llvm.mips.splat.h
llvm.mips.splat.w
llvm.mips.splati.b
llvm.mips.splati.d
llvm.mips.splati.h
llvm.mips.splati.w
llvm.mips.sra.b
llvm.mips.sra.d
llvm.mips.sra.h
llvm.mips.sra.w
llvm.mips.srai.b
llvm.mips.srai.d
llvm.mips.srai.h
llvm.mips.srai.w
llvm.mips.srar.b
llvm.mips.srar.d
llvm.mips.srar.h
llvm.mips.srar.w
llvm.mips.srari.b
llvm.mips.srari.d
llvm.mips.srari.h
llvm.mips.srari.w
llvm.mips.srl.b
llvm.mips.srl.d
llvm.mips.srl.h
llvm.mips.srl.w
llvm.mips.srli.b
llvm.mips.srli.d
llvm.mips.srli.h
llvm.mips.srli.w
llvm.mips.srlr.b
llvm.mips.srlr.d
llvm.mips.srlr.h
llvm.mips.srlr.w
llvm.mips.srlri.b
llvm.mips.srlri.d
llvm.mips.srlri.h
llvm.mips.srlri.w
llvm.mips.st.b
llvm.mips.st.d
llvm.mips.st.h
llvm.mips.st.w
llvm.mips.subq.ph
llvm.mips.subq.s.ph
llvm.mips.subq.s.w
llvm.mips.subqh.ph
llvm.mips.subqh.r.ph
llvm.mips.subqh.r.w
llvm.mips.subqh.w
llvm.mips.subs.s.b
llvm.mips.subs.s.d
llvm.mips.subs.s.h
llvm.mips.subs.s.w
llvm.mips.subs.u.b
llvm.mips.subs.u.d
llvm.mips.subs.u.h
llvm.mips.subs.u.w
llvm.mips.subsus.u.b
llvm.mips.subsus.u.d
llvm.mips.subsus.u.h
llvm.mips.subsus.u.w
llvm.mips.subsuu.s.b
llvm.mips.subsuu.s.d
llvm.mips.subsuu.s.h
llvm.mips.subsuu.s.w
llvm.mips.subu.ph
llvm.mips.subu.qb
llvm.mips.subu.s.ph
llvm.mips.subu.s.qb
llvm.mips.subuh.qb
llvm.mips.subuh.r.qb
llvm.mips.subv.b
llvm.mips.subv.d
llvm.mips.subv.h
llvm.mips.subv.w
llvm.mips.subvi.b
llvm.mips.subvi.d
llvm.mips.subvi.h
llvm.mips.subvi.w
llvm.mips.vshf.b
llvm.mips.vshf.d
llvm.mips.vshf.h
llvm.mips.vshf.w
llvm.mips.wrdsp
llvm.mips.xor.v
llvm.mips.xori.b
llvm.nearbyint
llvm.nvvm.abs.i
llvm.nvvm.abs.ll
llvm.nvvm.add.rm.d
llvm.nvvm.add.rm.f
llvm.nvvm.add.rm.ftz.f
llvm.nvvm.add.rn.d
llvm.nvvm.add.rn.f
llvm.nvvm.add.rn.ftz.f
llvm.nvvm.add.rp.d
llvm.nvvm.add.rp.f
llvm.nvvm.add.rp.ftz.f
llvm.nvvm.add.rz.d
llvm.nvvm.add.rz.f
llvm.nvvm.add.rz.ftz.f
llvm.nvvm.atomic.load.add.f32
llvm.nvvm.atomic.load.dec.32
llvm.nvvm.atomic.load.inc.32
llvm.nvvm.barrier0
llvm.nvvm.barrier0.and
llvm.nvvm.barrier0.or
llvm.nvvm.barrier0.popc
llvm.nvvm.bitcast.d2ll
llvm.nvvm.bitcast.f2i
llvm.nvvm.bitcast.i2f
llvm.nvvm.bitcast.ll2d
llvm.nvvm.brev32
llvm.nvvm.brev64
llvm.nvvm.ceil.d
llvm.nvvm.ceil.f
llvm.nvvm.ceil.ftz.f
llvm.nvvm.clz.i
llvm.nvvm.clz.ll
llvm.nvvm.compiler.error
llvm.nvvm.compiler.warn
llvm.nvvm.cos.approx.f
llvm.nvvm.cos.approx.ftz.f
llvm.nvvm.d2f.rm
llvm.nvvm.d2f.rm.ftz
llvm.nvvm.d2f.rn
llvm.nvvm.d2f.rn.ftz
llvm.nvvm.d2f.rp
llvm.nvvm.d2f.rp.ftz
llvm.nvvm.d2f.rz
llvm.nvvm.d2f.rz.ftz
llvm.nvvm.d2i.hi
llvm.nvvm.d2i.lo
llvm.nvvm.d2i.rm
llvm.nvvm.d2i.rn
llvm.nvvm.d2i.rp
llvm.nvvm.d2i.rz
llvm.nvvm.d2ll.rm
llvm.nvvm.d2ll.rn
llvm.nvvm.d2ll.rp
llvm.nvvm.d2ll.rz
llvm.nvvm.d2ui.rm
llvm.nvvm.d2ui.rn
llvm.nvvm.d2ui.rp
llvm.nvvm.d2ui.rz
llvm.nvvm.d2ull.rm
llvm.nvvm.d2ull.rn
llvm.nvvm.d2ull.rp
llvm.nvvm.d2ull.rz
llvm.nvvm.div.approx.f
llvm.nvvm.div.approx.ftz.f
llvm.nvvm.div.rm.d
llvm.nvvm.div.rm.f
llvm.nvvm.div.rm.ftz.f
llvm.nvvm.div.rn.d
llvm.nvvm.div.rn.f
llvm.nvvm.div.rn.ftz.f
llvm.nvvm.div.rp.d
llvm.nvvm.div.rp.f
llvm.nvvm.div.rp.ftz.f
llvm.nvvm.div.rz.d
llvm.nvvm.div.rz.f
llvm.nvvm.div.rz.ftz.f
llvm.nvvm.ex2.approx.d
llvm.nvvm.ex2.approx.f
llvm.nvvm.ex2.approx.ftz.f
llvm.nvvm.f2h.rn
llvm.nvvm.f2h.rn.ftz
llvm.nvvm.f2i.rm
llvm.nvvm.f2i.rm.ftz
llvm.nvvm.f2i.rn
llvm.nvvm.f2i.rn.ftz
llvm.nvvm.f2i.rp
llvm.nvvm.f2i.rp.ftz
llvm.nvvm.f2i.rz
llvm.nvvm.f2i.rz.ftz
llvm.nvvm.f2ll.rm
llvm.nvvm.f2ll.rm.ftz
llvm.nvvm.f2ll.rn
llvm.nvvm.f2ll.rn.ftz
llvm.nvvm.f2ll.rp
llvm.nvvm.f2ll.rp.ftz
llvm.nvvm.f2ll.rz
llvm.nvvm.f2ll.rz.ftz
llvm.nvvm.f2ui.rm
llvm.nvvm.f2ui.rm.ftz
llvm.nvvm.f2ui.rn
llvm.nvvm.f2ui.rn.ftz
llvm.nvvm.f2ui.rp
llvm.nvvm.f2ui.rp.ftz
llvm.nvvm.f2ui.rz
llvm.nvvm.f2ui.rz.ftz
llvm.nvvm.f2ull.rm
llvm.nvvm.f2ull.rm.ftz
llvm.nvvm.f2ull.rn
llvm.nvvm.f2ull.rn.ftz
llvm.nvvm.f2ull.rp
llvm.nvvm.f2ull.rp.ftz
llvm.nvvm.f2ull.rz
llvm.nvvm.f2ull.rz.ftz
llvm.nvvm.fabs.d
llvm.nvvm.fabs.f
llvm.nvvm.fabs.ftz.f
llvm.nvvm.floor.d
llvm.nvvm.floor.f
llvm.nvvm.floor.ftz.f
llvm.nvvm.fma.rm.d
llvm.nvvm.fma.rm.f
llvm.nvvm.fma.rm.ftz.f
llvm.nvvm.fma.rn.d
llvm.nvvm.fma.rn.f
llvm.nvvm.fma.rn.ftz.f
llvm.nvvm.fma.rp.d
llvm.nvvm.fma.rp.f
llvm.nvvm.fma.rp.ftz.f
llvm.nvvm.fma.rz.d
llvm.nvvm.fma.rz.f
llvm.nvvm.fma.rz.ftz.f
llvm.nvvm.fmax.d
llvm.nvvm.fmax.f
llvm.nvvm.fmax.ftz.f
llvm.nvvm.fmin.d
llvm.nvvm.fmin.f
llvm.nvvm.fmin.ftz.f
llvm.nvvm.h2f
llvm.nvvm.i2d.rm
llvm.nvvm.i2d.rn
llvm.nvvm.i2d.rp
llvm.nvvm.i2d.rz
llvm.nvvm.i2f.rm
llvm.nvvm.i2f.rn
llvm.nvvm.i2f.rp
llvm.nvvm.i2f.rz
llvm.nvvm.isspacep.const
llvm.nvvm.isspacep.global
llvm.nvvm.isspacep.local
llvm.nvvm.isspacep.shared
llvm.nvvm.istypep.sampler
llvm.nvvm.istypep.surface
llvm.nvvm.istypep.texture
llvm.nvvm.ldg.global.f
llvm.nvvm.ldg.global.i
llvm.nvvm.ldg.global.p
llvm.nvvm.ldu.global.f
llvm.nvvm.ldu.global.i
llvm.nvvm.ldu.global.p
llvm.nvvm.lg2.approx.d
llvm.nvvm.lg2.approx.f
llvm.nvvm.lg2.approx.ftz.f
llvm.nvvm.ll2d.rm
llvm.nvvm.ll2d.rn
llvm.nvvm.ll2d.rp
llvm.nvvm.ll2d.rz
llvm.nvvm.ll2f.rm
llvm.nvvm.ll2f.rn
llvm.nvvm.ll2f.rp
llvm.nvvm.ll2f.rz
llvm.nvvm.lohi.i2d
llvm.nvvm.max.i
llvm.nvvm.max.ll
llvm.nvvm.max.ui
llvm.nvvm.max.ull
llvm.nvvm.membar.cta
llvm.nvvm.membar.gl
llvm.nvvm.membar.sys
llvm.nvvm.min.i
llvm.nvvm.min.ll
llvm.nvvm.min.ui
llvm.nvvm.min.ull
llvm.nvvm.move.double
llvm.nvvm.move.float
llvm.nvvm.move.i16
llvm.nvvm.move.i32
llvm.nvvm.move.i64
llvm.nvvm.move.ptr
llvm.nvvm.mul24.i
llvm.nvvm.mul24.ui
llvm.nvvm.mul.rm.d
llvm.nvvm.mul.rm.f
llvm.nvvm.mul.rm.ftz.f
llvm.nvvm.mul.rn.d
llvm.nvvm.mul.rn.f
llvm.nvvm.mul.rn.ftz.f
llvm.nvvm.mul.rp.d
llvm.nvvm.mul.rp.f
llvm.nvvm.mul.rp.ftz.f
llvm.nvvm.mul.rz.d
llvm.nvvm.mul.rz.f
llvm.nvvm.mul.rz.ftz.f
llvm.nvvm.mulhi.i
llvm.nvvm.mulhi.ll
llvm.nvvm.mulhi.ui
llvm.nvvm.mulhi.ull
llvm.nvvm.popc.i
llvm.nvvm.popc.ll
llvm.nvvm.prmt
llvm.nvvm.ptr.constant.to.gen
llvm.nvvm.ptr.gen.to.constant
llvm.nvvm.ptr.gen.to.global
llvm.nvvm.ptr.gen.to.local
llvm.nvvm.ptr.gen.to.param
llvm.nvvm.ptr.gen.to.shared
llvm.nvvm.ptr.global.to.gen
llvm.nvvm.ptr.local.to.gen
llvm.nvvm.ptr.shared.to.gen
llvm.nvvm.rcp.approx.ftz.d
llvm.nvvm.rcp.rm.d
llvm.nvvm.rcp.rm.f
llvm.nvvm.rcp.rm.ftz.f
llvm.nvvm.rcp.rn.d
llvm.nvvm.rcp.rn.f
llvm.nvvm.rcp.rn.ftz.f
llvm.nvvm.rcp.rp.d
llvm.nvvm.rcp.rp.f
llvm.nvvm.rcp.rp.ftz.f
llvm.nvvm.rcp.rz.d
llvm.nvvm.rcp.rz.f
llvm.nvvm.rcp.rz.ftz.f
llvm.nvvm.read.ptx.sreg.ctaid.x
llvm.nvvm.read.ptx.sreg.ctaid.y
llvm.nvvm.read.ptx.sreg.ctaid.z
llvm.nvvm.read.ptx.sreg.envreg0
llvm.nvvm.read.ptx.sreg.envreg1
llvm.nvvm.read.ptx.sreg.envreg10
llvm.nvvm.read.ptx.sreg.envreg11
llvm.nvvm.read.ptx.sreg.envreg12
llvm.nvvm.read.ptx.sreg.envreg13
llvm.nvvm.read.ptx.sreg.envreg14
llvm.nvvm.read.ptx.sreg.envreg15
llvm.nvvm.read.ptx.sreg.envreg16
llvm.nvvm.read.ptx.sreg.envreg17
llvm.nvvm.read.ptx.sreg.envreg18
llvm.nvvm.read.ptx.sreg.envreg19
llvm.nvvm.read.ptx.sreg.envreg2
llvm.nvvm.read.ptx.sreg.envreg20
llvm.nvvm.read.ptx.sreg.envreg21
llvm.nvvm.read.ptx.sreg.envreg22
llvm.nvvm.read.ptx.sreg.envreg23
llvm.nvvm.read.ptx.sreg.envreg24
llvm.nvvm.read.ptx.sreg.envreg25
llvm.nvvm.read.ptx.sreg.envreg26
llvm.nvvm.read.ptx.sreg.envreg27
llvm.nvvm.read.ptx.sreg.envreg28
llvm.nvvm.read.ptx.sreg.envreg29
llvm.nvvm.read.ptx.sreg.envreg3
llvm.nvvm.read.ptx.sreg.envreg30
llvm.nvvm.read.ptx.sreg.envreg31
llvm.nvvm.read.ptx.sreg.envreg4
llvm.nvvm.read.ptx.sreg.envreg5
llvm.nvvm.read.ptx.sreg.envreg6
llvm.nvvm.read.ptx.sreg.envreg7
llvm.nvvm.read.ptx.sreg.envreg8
llvm.nvvm.read.ptx.sreg.envreg9
llvm.nvvm.read.ptx.sreg.nctaid.x
llvm.nvvm.read.ptx.sreg.nctaid.y
llvm.nvvm.read.ptx.sreg.nctaid.z
llvm.nvvm.read.ptx.sreg.ntid.x
llvm.nvvm.read.ptx.sreg.ntid.y
llvm.nvvm.read.ptx.sreg.ntid.z
llvm.nvvm.read.ptx.sreg.tid.x
llvm.nvvm.read.ptx.sreg.tid.y
llvm.nvvm.read.ptx.sreg.tid.z
llvm.nvvm.read.ptx.sreg.warpsize
llvm.nvvm.reflect
llvm.nvvm.rotate.b32
llvm.nvvm.rotate.b64
llvm.nvvm.rotate.right.b64
llvm.nvvm.round.d
llvm.nvvm.round.f
llvm.nvvm.round.ftz.f
llvm.nvvm.rsqrt.approx.d
llvm.nvvm.rsqrt.approx.f
llvm.nvvm.rsqrt.approx.ftz.f
llvm.nvvm.sad.i
llvm.nvvm.sad.ui
llvm.nvvm.saturate.d
llvm.nvvm.saturate.f
llvm.nvvm.saturate.ftz.f
llvm.nvvm.sin.approx.f
llvm.nvvm.sin.approx.ftz.f
llvm.nvvm.sqrt.approx.f
llvm.nvvm.sqrt.approx.ftz.f
llvm.nvvm.sqrt.f
llvm.nvvm.sqrt.rm.d
llvm.nvvm.sqrt.rm.f
llvm.nvvm.sqrt.rm.ftz.f
llvm.nvvm.sqrt.rn.d
llvm.nvvm.sqrt.rn.f
llvm.nvvm.sqrt.rn.ftz.f
llvm.nvvm.sqrt.rp.d
llvm.nvvm.sqrt.rp.f
llvm.nvvm.sqrt.rp.ftz.f
llvm.nvvm.sqrt.rz.d
llvm.nvvm.sqrt.rz.f
llvm.nvvm.sqrt.rz.ftz.f
llvm.nvvm.suld.1d.array.i16.clamp
llvm.nvvm.suld.1d.array.i16.trap
llvm.nvvm.suld.1d.array.i16.zero
llvm.nvvm.suld.1d.array.i32.clamp
llvm.nvvm.suld.1d.array.i32.trap
llvm.nvvm.suld.1d.array.i32.zero
llvm.nvvm.suld.1d.array.i64.clamp
llvm.nvvm.suld.1d.array.i64.trap
llvm.nvvm.suld.1d.array.i64.zero
llvm.nvvm.suld.1d.array.i8.clamp
llvm.nvvm.suld.1d.array.i8.trap
llvm.nvvm.suld.1d.array.i8.zero
llvm.nvvm.suld.1d.array.v2i16.clamp
llvm.nvvm.suld.1d.array.v2i16.trap
llvm.nvvm.suld.1d.array.v2i16.zero
llvm.nvvm.suld.1d.array.v2i32.clamp
llvm.nvvm.suld.1d.array.v2i32.trap
llvm.nvvm.suld.1d.array.v2i32.zero
llvm.nvvm.suld.1d.array.v2i64.clamp
llvm.nvvm.suld.1d.array.v2i64.trap
llvm.nvvm.suld.1d.array.v2i64.zero
llvm.nvvm.suld.1d.array.v2i8.clamp
llvm.nvvm.suld.1d.array.v2i8.trap
llvm.nvvm.suld.1d.array.v2i8.zero
llvm.nvvm.suld.1d.array.v4i16.clamp
llvm.nvvm.suld.1d.array.v4i16.trap
llvm.nvvm.suld.1d.array.v4i16.zero
llvm.nvvm.suld.1d.array.v4i32.clamp
llvm.nvvm.suld.1d.array.v4i32.trap
llvm.nvvm.suld.1d.array.v4i32.zero
llvm.nvvm.suld.1d.array.v4i8.clamp
llvm.nvvm.suld.1d.array.v4i8.trap
llvm.nvvm.suld.1d.array.v4i8.zero
llvm.nvvm.suld.1d.i16.clamp
llvm.nvvm.suld.1d.i16.trap
llvm.nvvm.suld.1d.i16.zero
llvm.nvvm.suld.1d.i32.clamp
llvm.nvvm.suld.1d.i32.trap
llvm.nvvm.suld.1d.i32.zero
llvm.nvvm.suld.1d.i64.clamp
llvm.nvvm.suld.1d.i64.trap
llvm.nvvm.suld.1d.i64.zero
llvm.nvvm.suld.1d.i8.clamp
llvm.nvvm.suld.1d.i8.trap
llvm.nvvm.suld.1d.i8.zero
llvm.nvvm.suld.1d.v2i16.clamp
llvm.nvvm.suld.1d.v2i16.trap
llvm.nvvm.suld.1d.v2i16.zero
llvm.nvvm.suld.1d.v2i32.clamp
llvm.nvvm.suld.1d.v2i32.trap
llvm.nvvm.suld.1d.v2i32.zero
llvm.nvvm.suld.1d.v2i64.clamp
llvm.nvvm.suld.1d.v2i64.trap
llvm.nvvm.suld.1d.v2i64.zero
llvm.nvvm.suld.1d.v2i8.clamp
llvm.nvvm.suld.1d.v2i8.trap
llvm.nvvm.suld.1d.v2i8.zero
llvm.nvvm.suld.1d.v4i16.clamp
llvm.nvvm.suld.1d.v4i16.trap
llvm.nvvm.suld.1d.v4i16.zero
llvm.nvvm.suld.1d.v4i32.clamp
llvm.nvvm.suld.1d.v4i32.trap
llvm.nvvm.suld.1d.v4i32.zero
llvm.nvvm.suld.1d.v4i8.clamp
llvm.nvvm.suld.1d.v4i8.trap
llvm.nvvm.suld.1d.v4i8.zero
llvm.nvvm.suld.2d.array.i16.clamp
llvm.nvvm.suld.2d.array.i16.trap
llvm.nvvm.suld.2d.array.i16.zero
llvm.nvvm.suld.2d.array.i32.clamp
llvm.nvvm.suld.2d.array.i32.trap
llvm.nvvm.suld.2d.array.i32.zero
llvm.nvvm.suld.2d.array.i64.clamp
llvm.nvvm.suld.2d.array.i64.trap
llvm.nvvm.suld.2d.array.i64.zero
llvm.nvvm.suld.2d.array.i8.clamp
llvm.nvvm.suld.2d.array.i8.trap
llvm.nvvm.suld.2d.array.i8.zero
llvm.nvvm.suld.2d.array.v2i16.clamp
llvm.nvvm.suld.2d.array.v2i16.trap
llvm.nvvm.suld.2d.array.v2i16.zero
llvm.nvvm.suld.2d.array.v2i32.clamp
llvm.nvvm.suld.2d.array.v2i32.trap
llvm.nvvm.suld.2d.array.v2i32.zero
llvm.nvvm.suld.2d.array.v2i64.clamp
llvm.nvvm.suld.2d.array.v2i64.trap
llvm.nvvm.suld.2d.array.v2i64.zero
llvm.nvvm.suld.2d.array.v2i8.clamp
llvm.nvvm.suld.2d.array.v2i8.trap
llvm.nvvm.suld.2d.array.v2i8.zero
llvm.nvvm.suld.2d.array.v4i16.clamp
llvm.nvvm.suld.2d.array.v4i16.trap
llvm.nvvm.suld.2d.array.v4i16.zero
llvm.nvvm.suld.2d.array.v4i32.clamp
llvm.nvvm.suld.2d.array.v4i32.trap
llvm.nvvm.suld.2d.array.v4i32.zero
llvm.nvvm.suld.2d.array.v4i8.clamp
llvm.nvvm.suld.2d.array.v4i8.trap
llvm.nvvm.suld.2d.array.v4i8.zero
llvm.nvvm.suld.2d.i16.clamp
llvm.nvvm.suld.2d.i16.trap
llvm.nvvm.suld.2d.i16.zero
llvm.nvvm.suld.2d.i32.clamp
llvm.nvvm.suld.2d.i32.trap
llvm.nvvm.suld.2d.i32.zero
llvm.nvvm.suld.2d.i64.clamp
llvm.nvvm.suld.2d.i64.trap
llvm.nvvm.suld.2d.i64.zero
llvm.nvvm.suld.2d.i8.clamp
llvm.nvvm.suld.2d.i8.trap
llvm.nvvm.suld.2d.i8.zero
llvm.nvvm.suld.2d.v2i16.clamp
llvm.nvvm.suld.2d.v2i16.trap
llvm.nvvm.suld.2d.v2i16.zero
llvm.nvvm.suld.2d.v2i32.clamp
llvm.nvvm.suld.2d.v2i32.trap
llvm.nvvm.suld.2d.v2i32.zero
llvm.nvvm.suld.2d.v2i64.clamp
llvm.nvvm.suld.2d.v2i64.trap
llvm.nvvm.suld.2d.v2i64.zero
llvm.nvvm.suld.2d.v2i8.clamp
llvm.nvvm.suld.2d.v2i8.trap
llvm.nvvm.suld.2d.v2i8.zero
llvm.nvvm.suld.2d.v4i16.clamp
llvm.nvvm.suld.2d.v4i16.trap
llvm.nvvm.suld.2d.v4i16.zero
llvm.nvvm.suld.2d.v4i32.clamp
llvm.nvvm.suld.2d.v4i32.trap
llvm.nvvm.suld.2d.v4i32.zero
llvm.nvvm.suld.2d.v4i8.clamp
llvm.nvvm.suld.2d.v4i8.trap
llvm.nvvm.suld.2d.v4i8.zero
llvm.nvvm.suld.3d.i16.clamp
llvm.nvvm.suld.3d.i16.trap
llvm.nvvm.suld.3d.i16.zero
llvm.nvvm.suld.3d.i32.clamp
llvm.nvvm.suld.3d.i32.trap
llvm.nvvm.suld.3d.i32.zero
llvm.nvvm.suld.3d.i64.clamp
llvm.nvvm.suld.3d.i64.trap
llvm.nvvm.suld.3d.i64.zero
llvm.nvvm.suld.3d.i8.clamp
llvm.nvvm.suld.3d.i8.trap
llvm.nvvm.suld.3d.i8.zero
llvm.nvvm.suld.3d.v2i16.clamp
llvm.nvvm.suld.3d.v2i16.trap
llvm.nvvm.suld.3d.v2i16.zero
llvm.nvvm.suld.3d.v2i32.clamp
llvm.nvvm.suld.3d.v2i32.trap
llvm.nvvm.suld.3d.v2i32.zero
llvm.nvvm.suld.3d.v2i64.clamp
llvm.nvvm.suld.3d.v2i64.trap
llvm.nvvm.suld.3d.v2i64.zero
llvm.nvvm.suld.3d.v2i8.clamp
llvm.nvvm.suld.3d.v2i8.trap
llvm.nvvm.suld.3d.v2i8.zero
llvm.nvvm.suld.3d.v4i16.clamp
llvm.nvvm.suld.3d.v4i16.trap
llvm.nvvm.suld.3d.v4i16.zero
llvm.nvvm.suld.3d.v4i32.clamp
llvm.nvvm.suld.3d.v4i32.trap
llvm.nvvm.suld.3d.v4i32.zero
llvm.nvvm.suld.3d.v4i8.clamp
llvm.nvvm.suld.3d.v4i8.trap
llvm.nvvm.suld.3d.v4i8.zero
llvm.nvvm.suq.array.size
llvm.nvvm.suq.channel.data.type
llvm.nvvm.suq.channel.order
llvm.nvvm.suq.depth
llvm.nvvm.suq.height
llvm.nvvm.suq.width
llvm.nvvm.sust.b.1d.array.i16.clamp
llvm.nvvm.sust.b.1d.array.i16.trap
llvm.nvvm.sust.b.1d.array.i16.zero
llvm.nvvm.sust.b.1d.array.i32.clamp
llvm.nvvm.sust.b.1d.array.i32.trap
llvm.nvvm.sust.b.1d.array.i32.zero
llvm.nvvm.sust.b.1d.array.i64.clamp
llvm.nvvm.sust.b.1d.array.i64.trap
llvm.nvvm.sust.b.1d.array.i64.zero
llvm.nvvm.sust.b.1d.array.i8.clamp
llvm.nvvm.sust.b.1d.array.i8.trap
llvm.nvvm.sust.b.1d.array.i8.zero
llvm.nvvm.sust.b.1d.array.v2i16.clamp
llvm.nvvm.sust.b.1d.array.v2i16.trap
llvm.nvvm.sust.b.1d.array.v2i16.zero
llvm.nvvm.sust.b.1d.array.v2i32.clamp
llvm.nvvm.sust.b.1d.array.v2i32.trap
llvm.nvvm.sust.b.1d.array.v2i32.zero
llvm.nvvm.sust.b.1d.array.v2i64.clamp
llvm.nvvm.sust.b.1d.array.v2i64.trap
llvm.nvvm.sust.b.1d.array.v2i64.zero
llvm.nvvm.sust.b.1d.array.v2i8.clamp
llvm.nvvm.sust.b.1d.array.v2i8.trap
llvm.nvvm.sust.b.1d.array.v2i8.zero
llvm.nvvm.sust.b.1d.array.v4i16.clamp
llvm.nvvm.sust.b.1d.array.v4i16.trap
llvm.nvvm.sust.b.1d.array.v4i16.zero
llvm.nvvm.sust.b.1d.array.v4i32.clamp
llvm.nvvm.sust.b.1d.array.v4i32.trap
llvm.nvvm.sust.b.1d.array.v4i32.zero
llvm.nvvm.sust.b.1d.array.v4i8.clamp
llvm.nvvm.sust.b.1d.array.v4i8.trap
llvm.nvvm.sust.b.1d.array.v4i8.zero
llvm.nvvm.sust.b.1d.i16.clamp
llvm.nvvm.sust.b.1d.i16.trap
llvm.nvvm.sust.b.1d.i16.zero
llvm.nvvm.sust.b.1d.i32.clamp
llvm.nvvm.sust.b.1d.i32.trap
llvm.nvvm.sust.b.1d.i32.zero
llvm.nvvm.sust.b.1d.i64.clamp
llvm.nvvm.sust.b.1d.i64.trap
llvm.nvvm.sust.b.1d.i64.zero
llvm.nvvm.sust.b.1d.i8.clamp
llvm.nvvm.sust.b.1d.i8.trap
llvm.nvvm.sust.b.1d.i8.zero
llvm.nvvm.sust.b.1d.v2i16.clamp
llvm.nvvm.sust.b.1d.v2i16.trap
llvm.nvvm.sust.b.1d.v2i16.zero
llvm.nvvm.sust.b.1d.v2i32.clamp
llvm.nvvm.sust.b.1d.v2i32.trap
llvm.nvvm.sust.b.1d.v2i32.zero
llvm.nvvm.sust.b.1d.v2i64.clamp
llvm.nvvm.sust.b.1d.v2i64.trap
llvm.nvvm.sust.b.1d.v2i64.zero
llvm.nvvm.sust.b.1d.v2i8.clamp
llvm.nvvm.sust.b.1d.v2i8.trap
llvm.nvvm.sust.b.1d.v2i8.zero
llvm.nvvm.sust.b.1d.v4i16.clamp
llvm.nvvm.sust.b.1d.v4i16.trap
llvm.nvvm.sust.b.1d.v4i16.zero
llvm.nvvm.sust.b.1d.v4i32.clamp
llvm.nvvm.sust.b.1d.v4i32.trap
llvm.nvvm.sust.b.1d.v4i32.zero
llvm.nvvm.sust.b.1d.v4i8.clamp
llvm.nvvm.sust.b.1d.v4i8.trap
llvm.nvvm.sust.b.1d.v4i8.zero
llvm.nvvm.sust.b.2d.array.i16.clamp
llvm.nvvm.sust.b.2d.array.i16.trap
llvm.nvvm.sust.b.2d.array.i16.zero
llvm.nvvm.sust.b.2d.array.i32.clamp
llvm.nvvm.sust.b.2d.array.i32.trap
llvm.nvvm.sust.b.2d.array.i32.zero
llvm.nvvm.sust.b.2d.array.i64.clamp
llvm.nvvm.sust.b.2d.array.i64.trap
llvm.nvvm.sust.b.2d.array.i64.zero
llvm.nvvm.sust.b.2d.array.i8.clamp
llvm.nvvm.sust.b.2d.array.i8.trap
llvm.nvvm.sust.b.2d.array.i8.zero
llvm.nvvm.sust.b.2d.array.v2i16.clamp
llvm.nvvm.sust.b.2d.array.v2i16.trap
llvm.nvvm.sust.b.2d.array.v2i16.zero
llvm.nvvm.sust.b.2d.array.v2i32.clamp
llvm.nvvm.sust.b.2d.array.v2i32.trap
llvm.nvvm.sust.b.2d.array.v2i32.zero
llvm.nvvm.sust.b.2d.array.v2i64.clamp
llvm.nvvm.sust.b.2d.array.v2i64.trap
llvm.nvvm.sust.b.2d.array.v2i64.zero
llvm.nvvm.sust.b.2d.array.v2i8.clamp
llvm.nvvm.sust.b.2d.array.v2i8.trap
llvm.nvvm.sust.b.2d.array.v2i8.zero
llvm.nvvm.sust.b.2d.array.v4i16.clamp
llvm.nvvm.sust.b.2d.array.v4i16.trap
llvm.nvvm.sust.b.2d.array.v4i16.zero
llvm.nvvm.sust.b.2d.array.v4i32.clamp
llvm.nvvm.sust.b.2d.array.v4i32.trap
llvm.nvvm.sust.b.2d.array.v4i32.zero
llvm.nvvm.sust.b.2d.array.v4i8.clamp
llvm.nvvm.sust.b.2d.array.v4i8.trap
llvm.nvvm.sust.b.2d.array.v4i8.zero
llvm.nvvm.sust.b.2d.i16.clamp
llvm.nvvm.sust.b.2d.i16.trap
llvm.nvvm.sust.b.2d.i16.zero
llvm.nvvm.sust.b.2d.i32.clamp
llvm.nvvm.sust.b.2d.i32.trap
llvm.nvvm.sust.b.2d.i32.zero
llvm.nvvm.sust.b.2d.i64.clamp
llvm.nvvm.sust.b.2d.i64.trap
llvm.nvvm.sust.b.2d.i64.zero
llvm.nvvm.sust.b.2d.i8.clamp
llvm.nvvm.sust.b.2d.i8.trap
llvm.nvvm.sust.b.2d.i8.zero
llvm.nvvm.sust.b.2d.v2i16.clamp
llvm.nvvm.sust.b.2d.v2i16.trap
llvm.nvvm.sust.b.2d.v2i16.zero
llvm.nvvm.sust.b.2d.v2i32.clamp
llvm.nvvm.sust.b.2d.v2i32.trap
llvm.nvvm.sust.b.2d.v2i32.zero
llvm.nvvm.sust.b.2d.v2i64.clamp
llvm.nvvm.sust.b.2d.v2i64.trap
llvm.nvvm.sust.b.2d.v2i64.zero
llvm.nvvm.sust.b.2d.v2i8.clamp
llvm.nvvm.sust.b.2d.v2i8.trap
llvm.nvvm.sust.b.2d.v2i8.zero
llvm.nvvm.sust.b.2d.v4i16.clamp
llvm.nvvm.sust.b.2d.v4i16.trap
llvm.nvvm.sust.b.2d.v4i16.zero
llvm.nvvm.sust.b.2d.v4i32.clamp
llvm.nvvm.sust.b.2d.v4i32.trap
llvm.nvvm.sust.b.2d.v4i32.zero
llvm.nvvm.sust.b.2d.v4i8.clamp
llvm.nvvm.sust.b.2d.v4i8.trap
llvm.nvvm.sust.b.2d.v4i8.zero
llvm.nvvm.sust.b.3d.i16.clamp
llvm.nvvm.sust.b.3d.i16.trap
llvm.nvvm.sust.b.3d.i16.zero
llvm.nvvm.sust.b.3d.i32.clamp
llvm.nvvm.sust.b.3d.i32.trap
llvm.nvvm.sust.b.3d.i32.zero
llvm.nvvm.sust.b.3d.i64.clamp
llvm.nvvm.sust.b.3d.i64.trap
llvm.nvvm.sust.b.3d.i64.zero
llvm.nvvm.sust.b.3d.i8.clamp
llvm.nvvm.sust.b.3d.i8.trap
llvm.nvvm.sust.b.3d.i8.zero
llvm.nvvm.sust.b.3d.v2i16.clamp
llvm.nvvm.sust.b.3d.v2i16.trap
llvm.nvvm.sust.b.3d.v2i16.zero
llvm.nvvm.sust.b.3d.v2i32.clamp
llvm.nvvm.sust.b.3d.v2i32.trap
llvm.nvvm.sust.b.3d.v2i32.zero
llvm.nvvm.sust.b.3d.v2i64.clamp
llvm.nvvm.sust.b.3d.v2i64.trap
llvm.nvvm.sust.b.3d.v2i64.zero
llvm.nvvm.sust.b.3d.v2i8.clamp
llvm.nvvm.sust.b.3d.v2i8.trap
llvm.nvvm.sust.b.3d.v2i8.zero
llvm.nvvm.sust.b.3d.v4i16.clamp
llvm.nvvm.sust.b.3d.v4i16.trap
llvm.nvvm.sust.b.3d.v4i16.zero
llvm.nvvm.sust.b.3d.v4i32.clamp
llvm.nvvm.sust.b.3d.v4i32.trap
llvm.nvvm.sust.b.3d.v4i32.zero
llvm.nvvm.sust.b.3d.v4i8.clamp
llvm.nvvm.sust.b.3d.v4i8.trap
llvm.nvvm.sust.b.3d.v4i8.zero
llvm.nvvm.sust.p.1d.array.i16.trap
llvm.nvvm.sust.p.1d.array.i32.trap
llvm.nvvm.sust.p.1d.array.i8.trap
llvm.nvvm.sust.p.1d.array.v2i16.trap
llvm.nvvm.sust.p.1d.array.v2i32.trap
llvm.nvvm.sust.p.1d.array.v2i8.trap
llvm.nvvm.sust.p.1d.array.v4i16.trap
llvm.nvvm.sust.p.1d.array.v4i32.trap
llvm.nvvm.sust.p.1d.array.v4i8.trap
llvm.nvvm.sust.p.1d.i16.trap
llvm.nvvm.sust.p.1d.i32.trap
llvm.nvvm.sust.p.1d.i8.trap
llvm.nvvm.sust.p.1d.v2i16.trap
llvm.nvvm.sust.p.1d.v2i32.trap
llvm.nvvm.sust.p.1d.v2i8.trap
llvm.nvvm.sust.p.1d.v4i16.trap
llvm.nvvm.sust.p.1d.v4i32.trap
llvm.nvvm.sust.p.1d.v4i8.trap
llvm.nvvm.sust.p.2d.array.i16.trap
llvm.nvvm.sust.p.2d.array.i32.trap
llvm.nvvm.sust.p.2d.array.i8.trap
llvm.nvvm.sust.p.2d.array.v2i16.trap
llvm.nvvm.sust.p.2d.array.v2i32.trap
llvm.nvvm.sust.p.2d.array.v2i8.trap
llvm.nvvm.sust.p.2d.array.v4i16.trap
llvm.nvvm.sust.p.2d.array.v4i32.trap
llvm.nvvm.sust.p.2d.array.v4i8.trap
llvm.nvvm.sust.p.2d.i16.trap
llvm.nvvm.sust.p.2d.i32.trap
llvm.nvvm.sust.p.2d.i8.trap
llvm.nvvm.sust.p.2d.v2i16.trap
llvm.nvvm.sust.p.2d.v2i32.trap
llvm.nvvm.sust.p.2d.v2i8.trap
llvm.nvvm.sust.p.2d.v4i16.trap
llvm.nvvm.sust.p.2d.v4i32.trap
llvm.nvvm.sust.p.2d.v4i8.trap
llvm.nvvm.sust.p.3d.i16.trap
llvm.nvvm.sust.p.3d.i32.trap
llvm.nvvm.sust.p.3d.i8.trap
llvm.nvvm.sust.p.3d.v2i16.trap
llvm.nvvm.sust.p.3d.v2i32.trap
llvm.nvvm.sust.p.3d.v2i8.trap
llvm.nvvm.sust.p.3d.v4i16.trap
llvm.nvvm.sust.p.3d.v4i32.trap
llvm.nvvm.sust.p.3d.v4i8.trap
llvm.nvvm.swap.lo.hi.b64
llvm.nvvm.tex.1d.array.grad.v4f32.f32
llvm.nvvm.tex.1d.array.grad.v4s32.f32
llvm.nvvm.tex.1d.array.grad.v4u32.f32
llvm.nvvm.tex.1d.array.level.v4f32.f32
llvm.nvvm.tex.1d.array.level.v4s32.f32
llvm.nvvm.tex.1d.array.level.v4u32.f32
llvm.nvvm.tex.1d.array.v4f32.f32
llvm.nvvm.tex.1d.array.v4f32.s32
llvm.nvvm.tex.1d.array.v4s32.f32
llvm.nvvm.tex.1d.array.v4s32.s32
llvm.nvvm.tex.1d.array.v4u32.f32
llvm.nvvm.tex.1d.array.v4u32.s32
llvm.nvvm.tex.1d.grad.v4f32.f32
llvm.nvvm.tex.1d.grad.v4s32.f32
llvm.nvvm.tex.1d.grad.v4u32.f32
llvm.nvvm.tex.1d.level.v4f32.f32
llvm.nvvm.tex.1d.level.v4s32.f32
llvm.nvvm.tex.1d.level.v4u32.f32
llvm.nvvm.tex.1d.v4f32.f32
llvm.nvvm.tex.1d.v4f32.s32
llvm.nvvm.tex.1d.v4s32.f32
llvm.nvvm.tex.1d.v4s32.s32
llvm.nvvm.tex.1d.v4u32.f32
llvm.nvvm.tex.1d.v4u32.s32
llvm.nvvm.tex.2d.array.grad.v4f32.f32
llvm.nvvm.tex.2d.array.grad.v4s32.f32
llvm.nvvm.tex.2d.array.grad.v4u32.f32
llvm.nvvm.tex.2d.array.level.v4f32.f32
llvm.nvvm.tex.2d.array.level.v4s32.f32
llvm.nvvm.tex.2d.array.level.v4u32.f32
llvm.nvvm.tex.2d.array.v4f32.f32
llvm.nvvm.tex.2d.array.v4f32.s32
llvm.nvvm.tex.2d.array.v4s32.f32
llvm.nvvm.tex.2d.array.v4s32.s32
llvm.nvvm.tex.2d.array.v4u32.f32
llvm.nvvm.tex.2d.array.v4u32.s32
llvm.nvvm.tex.2d.grad.v4f32.f32
llvm.nvvm.tex.2d.grad.v4s32.f32
llvm.nvvm.tex.2d.grad.v4u32.f32
llvm.nvvm.tex.2d.level.v4f32.f32
llvm.nvvm.tex.2d.level.v4s32.f32
llvm.nvvm.tex.2d.level.v4u32.f32
llvm.nvvm.tex.2d.v4f32.f32
llvm.nvvm.tex.2d.v4f32.s32
llvm.nvvm.tex.2d.v4s32.f32
llvm.nvvm.tex.2d.v4s32.s32
llvm.nvvm.tex.2d.v4u32.f32
llvm.nvvm.tex.2d.v4u32.s32
llvm.nvvm.tex.3d.grad.v4f32.f32
llvm.nvvm.tex.3d.grad.v4s32.f32
llvm.nvvm.tex.3d.grad.v4u32.f32
llvm.nvvm.tex.3d.level.v4f32.f32
llvm.nvvm.tex.3d.level.v4s32.f32
llvm.nvvm.tex.3d.level.v4u32.f32
llvm.nvvm.tex.3d.v4f32.f32
llvm.nvvm.tex.3d.v4f32.s32
llvm.nvvm.tex.3d.v4s32.f32
llvm.nvvm.tex.3d.v4s32.s32
llvm.nvvm.tex.3d.v4u32.f32
llvm.nvvm.tex.3d.v4u32.s32
llvm.nvvm.tex.cube.array.level.v4f32.f32
llvm.nvvm.tex.cube.array.level.v4s32.f32
llvm.nvvm.tex.cube.array.level.v4u32.f32
llvm.nvvm.tex.cube.array.v4f32.f32
llvm.nvvm.tex.cube.array.v4s32.f32
llvm.nvvm.tex.cube.array.v4u32.f32
llvm.nvvm.tex.cube.level.v4f32.f32
llvm.nvvm.tex.cube.level.v4s32.f32
llvm.nvvm.tex.cube.level.v4u32.f32
llvm.nvvm.tex.cube.v4f32.f32
llvm.nvvm.tex.cube.v4s32.f32
llvm.nvvm.tex.cube.v4u32.f32
llvm.nvvm.tex.unified.1d.array.grad.v4f32.f32
llvm.nvvm.tex.unified.1d.array.grad.v4s32.f32
llvm.nvvm.tex.unified.1d.array.grad.v4u32.f32
llvm.nvvm.tex.unified.1d.array.level.v4f32.f32
llvm.nvvm.tex.unified.1d.array.level.v4s32.f32
llvm.nvvm.tex.unified.1d.array.level.v4u32.f32
llvm.nvvm.tex.unified.1d.array.v4f32.f32
llvm.nvvm.tex.unified.1d.array.v4f32.s32
llvm.nvvm.tex.unified.1d.array.v4s32.f32
llvm.nvvm.tex.unified.1d.array.v4s32.s32
llvm.nvvm.tex.unified.1d.array.v4u32.f32
llvm.nvvm.tex.unified.1d.array.v4u32.s32
llvm.nvvm.tex.unified.1d.grad.v4f32.f32
llvm.nvvm.tex.unified.1d.grad.v4s32.f32
llvm.nvvm.tex.unified.1d.grad.v4u32.f32
llvm.nvvm.tex.unified.1d.level.v4f32.f32
llvm.nvvm.tex.unified.1d.level.v4s32.f32
llvm.nvvm.tex.unified.1d.level.v4u32.f32
llvm.nvvm.tex.unified.1d.v4f32.f32
llvm.nvvm.tex.unified.1d.v4f32.s32
llvm.nvvm.tex.unified.1d.v4s32.f32
llvm.nvvm.tex.unified.1d.v4s32.s32
llvm.nvvm.tex.unified.1d.v4u32.f32
llvm.nvvm.tex.unified.1d.v4u32.s32
llvm.nvvm.tex.unified.2d.array.grad.v4f32.f32
llvm.nvvm.tex.unified.2d.array.grad.v4s32.f32
llvm.nvvm.tex.unified.2d.array.grad.v4u32.f32
llvm.nvvm.tex.unified.2d.array.level.v4f32.f32
llvm.nvvm.tex.unified.2d.array.level.v4s32.f32
llvm.nvvm.tex.unified.2d.array.level.v4u32.f32
llvm.nvvm.tex.unified.2d.array.v4f32.f32
llvm.nvvm.tex.unified.2d.array.v4f32.s32
llvm.nvvm.tex.unified.2d.array.v4s32.f32
llvm.nvvm.tex.unified.2d.array.v4s32.s32
llvm.nvvm.tex.unified.2d.array.v4u32.f32
llvm.nvvm.tex.unified.2d.array.v4u32.s32
llvm.nvvm.tex.unified.2d.grad.v4f32.f32
llvm.nvvm.tex.unified.2d.grad.v4s32.f32
llvm.nvvm.tex.unified.2d.grad.v4u32.f32
llvm.nvvm.tex.unified.2d.level.v4f32.f32
llvm.nvvm.tex.unified.2d.level.v4s32.f32
llvm.nvvm.tex.unified.2d.level.v4u32.f32
llvm.nvvm.tex.unified.2d.v4f32.f32
llvm.nvvm.tex.unified.2d.v4f32.s32
llvm.nvvm.tex.unified.2d.v4s32.f32
llvm.nvvm.tex.unified.2d.v4s32.s32
llvm.nvvm.tex.unified.2d.v4u32.f32
llvm.nvvm.tex.unified.2d.v4u32.s32
llvm.nvvm.tex.unified.3d.grad.v4f32.f32
llvm.nvvm.tex.unified.3d.grad.v4s32.f32
llvm.nvvm.tex.unified.3d.grad.v4u32.f32
llvm.nvvm.tex.unified.3d.level.v4f32.f32
llvm.nvvm.tex.unified.3d.level.v4s32.f32
llvm.nvvm.tex.unified.3d.level.v4u32.f32
llvm.nvvm.tex.unified.3d.v4f32.f32
llvm.nvvm.tex.unified.3d.v4f32.s32
llvm.nvvm.tex.unified.3d.v4s32.f32
llvm.nvvm.tex.unified.3d.v4s32.s32
llvm.nvvm.tex.unified.3d.v4u32.f32
llvm.nvvm.tex.unified.3d.v4u32.s32
llvm.nvvm.tex.unified.cube.array.level.v4f32.f32
llvm.nvvm.tex.unified.cube.array.level.v4s32.f32
llvm.nvvm.tex.unified.cube.array.level.v4u32.f32
llvm.nvvm.tex.unified.cube.array.v4f32.f32
llvm.nvvm.tex.unified.cube.array.v4s32.f32
llvm.nvvm.tex.unified.cube.array.v4u32.f32
llvm.nvvm.tex.unified.cube.level.v4f32.f32
llvm.nvvm.tex.unified.cube.level.v4s32.f32
llvm.nvvm.tex.unified.cube.level.v4u32.f32
llvm.nvvm.tex.unified.cube.v4f32.f32
llvm.nvvm.tex.unified.cube.v4s32.f32
llvm.nvvm.tex.unified.cube.v4u32.f32
llvm.nvvm.texsurf.handle
llvm.nvvm.texsurf.handle.internal
llvm.nvvm.tld4.a.2d.v4f32.f32
llvm.nvvm.tld4.a.2d.v4s32.f32
llvm.nvvm.tld4.a.2d.v4u32.f32
llvm.nvvm.tld4.b.2d.v4f32.f32
llvm.nvvm.tld4.b.2d.v4s32.f32
llvm.nvvm.tld4.b.2d.v4u32.f32
llvm.nvvm.tld4.g.2d.v4f32.f32
llvm.nvvm.tld4.g.2d.v4s32.f32
llvm.nvvm.tld4.g.2d.v4u32.f32
llvm.nvvm.tld4.r.2d.v4f32.f32
llvm.nvvm.tld4.r.2d.v4s32.f32
llvm.nvvm.tld4.r.2d.v4u32.f32
llvm.nvvm.tld4.unified.a.2d.v4f32.f32
llvm.nvvm.tld4.unified.a.2d.v4s32.f32
llvm.nvvm.tld4.unified.a.2d.v4u32.f32
llvm.nvvm.tld4.unified.b.2d.v4f32.f32
llvm.nvvm.tld4.unified.b.2d.v4s32.f32
llvm.nvvm.tld4.unified.b.2d.v4u32.f32
llvm.nvvm.tld4.unified.g.2d.v4f32.f32
llvm.nvvm.tld4.unified.g.2d.v4s32.f32
llvm.nvvm.tld4.unified.g.2d.v4u32.f32
llvm.nvvm.tld4.unified.r.2d.v4f32.f32
llvm.nvvm.tld4.unified.r.2d.v4s32.f32
llvm.nvvm.tld4.unified.r.2d.v4u32.f32
llvm.nvvm.trunc.d
llvm.nvvm.trunc.f
llvm.nvvm.trunc.ftz.f
llvm.nvvm.txq.array.size
llvm.nvvm.txq.channel.data.type
llvm.nvvm.txq.channel.order
llvm.nvvm.txq.depth
llvm.nvvm.txq.height
llvm.nvvm.txq.num.mipmap.levels
llvm.nvvm.txq.num.samples
llvm.nvvm.txq.width
llvm.nvvm.ui2d.rm
llvm.nvvm.ui2d.rn
llvm.nvvm.ui2d.rp
llvm.nvvm.ui2d.rz
llvm.nvvm.ui2f.rm
llvm.nvvm.ui2f.rn
llvm.nvvm.ui2f.rp
llvm.nvvm.ui2f.rz
llvm.nvvm.ull2d.rm
llvm.nvvm.ull2d.rn
llvm.nvvm.ull2d.rp
llvm.nvvm.ull2d.rz
llvm.nvvm.ull2f.rm
llvm.nvvm.ull2f.rn
llvm.nvvm.ull2f.rp
llvm.nvvm.ull2f.rz
llvm.objectsize
llvm.pcmarker
llvm.pow
llvm.powi
llvm.ppc.altivec.dss
llvm.ppc.altivec.dssall
llvm.ppc.altivec.dst
llvm.ppc.altivec.dstst
llvm.ppc.altivec.dststt
llvm.ppc.altivec.dstt
llvm.ppc.altivec.lvebx
llvm.ppc.altivec.lvehx
llvm.ppc.altivec.lvewx
llvm.ppc.altivec.lvsl
llvm.ppc.altivec.lvsr
llvm.ppc.altivec.lvx
llvm.ppc.altivec.lvxl
llvm.ppc.altivec.mfvscr
llvm.ppc.altivec.mtvscr
llvm.ppc.altivec.stvebx
llvm.ppc.altivec.stvehx
llvm.ppc.altivec.stvewx
llvm.ppc.altivec.stvx
llvm.ppc.altivec.stvxl
llvm.ppc.altivec.vaddcuw
llvm.ppc.altivec.vaddsbs
llvm.ppc.altivec.vaddshs
llvm.ppc.altivec.vaddsws
llvm.ppc.altivec.vaddubs
llvm.ppc.altivec.vadduhs
llvm.ppc.altivec.vadduws
llvm.ppc.altivec.vavgsb
llvm.ppc.altivec.vavgsh
llvm.ppc.altivec.vavgsw
llvm.ppc.altivec.vavgub
llvm.ppc.altivec.vavguh
llvm.ppc.altivec.vavguw
llvm.ppc.altivec.vcfsx
llvm.ppc.altivec.vcfux
llvm.ppc.altivec.vcmpbfp
llvm.ppc.altivec.vcmpbfp.p
llvm.ppc.altivec.vcmpeqfp
llvm.ppc.altivec.vcmpeqfp.p
llvm.ppc.altivec.vcmpequb
llvm.ppc.altivec.vcmpequb.p
llvm.ppc.altivec.vcmpequh
llvm.ppc.altivec.vcmpequh.p
llvm.ppc.altivec.vcmpequw
llvm.ppc.altivec.vcmpequw.p
llvm.ppc.altivec.vcmpgefp
llvm.ppc.altivec.vcmpgefp.p
llvm.ppc.altivec.vcmpgtfp
llvm.ppc.altivec.vcmpgtfp.p
llvm.ppc.altivec.vcmpgtsb
llvm.ppc.altivec.vcmpgtsb.p
llvm.ppc.altivec.vcmpgtsh
llvm.ppc.altivec.vcmpgtsh.p
llvm.ppc.altivec.vcmpgtsw
llvm.ppc.altivec.vcmpgtsw.p
llvm.ppc.altivec.vcmpgtub
llvm.ppc.altivec.vcmpgtub.p
llvm.ppc.altivec.vcmpgtuh
llvm.ppc.altivec.vcmpgtuh.p
llvm.ppc.altivec.vcmpgtuw
llvm.ppc.altivec.vcmpgtuw.p
llvm.ppc.altivec.vctsxs
llvm.ppc.altivec.vctuxs
llvm.ppc.altivec.vexptefp
llvm.ppc.altivec.vlogefp
llvm.ppc.altivec.vmaddfp
llvm.ppc.altivec.vmaxfp
llvm.ppc.altivec.vmaxsb
llvm.ppc.altivec.vmaxsh
llvm.ppc.altivec.vmaxsw
llvm.ppc.altivec.vmaxub
llvm.ppc.altivec.vmaxuh
llvm.ppc.altivec.vmaxuw
llvm.ppc.altivec.vmhaddshs
llvm.ppc.altivec.vmhraddshs
llvm.ppc.altivec.vminfp
llvm.ppc.altivec.vminsb
llvm.ppc.altivec.vminsh
llvm.ppc.altivec.vminsw
llvm.ppc.altivec.vminub
llvm.ppc.altivec.vminuh
llvm.ppc.altivec.vminuw
llvm.ppc.altivec.vmladduhm
llvm.ppc.altivec.vmsummbm
llvm.ppc.altivec.vmsumshm
llvm.ppc.altivec.vmsumshs
llvm.ppc.altivec.vmsumubm
llvm.ppc.altivec.vmsumuhm
llvm.ppc.altivec.vmsumuhs
llvm.ppc.altivec.vmulesb
llvm.ppc.altivec.vmulesh
llvm.ppc.altivec.vmuleub
llvm.ppc.altivec.vmuleuh
llvm.ppc.altivec.vmulosb
llvm.ppc.altivec.vmulosh
llvm.ppc.altivec.vmuloub
llvm.ppc.altivec.vmulouh
llvm.ppc.altivec.vnmsubfp
llvm.ppc.altivec.vperm
llvm.ppc.altivec.vpkpx
llvm.ppc.altivec.vpkshss
llvm.ppc.altivec.vpkshus
llvm.ppc.altivec.vpkswss
llvm.ppc.altivec.vpkswus
llvm.ppc.altivec.vpkuhus
llvm.ppc.altivec.vpkuwus
llvm.ppc.altivec.vrefp
llvm.ppc.altivec.vrfim
llvm.ppc.altivec.vrfin
llvm.ppc.altivec.vrfip
llvm.ppc.altivec.vrfiz
llvm.ppc.altivec.vrlb
llvm.ppc.altivec.vrlh
llvm.ppc.altivec.vrlw
llvm.ppc.altivec.vrsqrtefp
llvm.ppc.altivec.vsel
llvm.ppc.altivec.vsl
llvm.ppc.altivec.vslb
llvm.ppc.altivec.vslh
llvm.ppc.altivec.vslo
llvm.ppc.altivec.vslw
llvm.ppc.altivec.vsr
llvm.ppc.altivec.vsrab
llvm.ppc.altivec.vsrah
llvm.ppc.altivec.vsraw
llvm.ppc.altivec.vsrb
llvm.ppc.altivec.vsrh
llvm.ppc.altivec.vsro
llvm.ppc.altivec.vsrw
llvm.ppc.altivec.vsubcuw
llvm.ppc.altivec.vsubsbs
llvm.ppc.altivec.vsubshs
llvm.ppc.altivec.vsubsws
llvm.ppc.altivec.vsububs
llvm.ppc.altivec.vsubuhs
llvm.ppc.altivec.vsubuws
llvm.ppc.altivec.vsum2sws
llvm.ppc.altivec.vsum4sbs
llvm.ppc.altivec.vsum4shs
llvm.ppc.altivec.vsum4ubs
llvm.ppc.altivec.vsumsws
llvm.ppc.altivec.vupkhpx
llvm.ppc.altivec.vupkhsb
llvm.ppc.altivec.vupkhsh
llvm.ppc.altivec.vupklpx
llvm.ppc.altivec.vupklsb
llvm.ppc.altivec.vupklsh
llvm.ppc.dcba
llvm.ppc.dcbf
llvm.ppc.dcbi
llvm.ppc.dcbst
llvm.ppc.dcbt
llvm.ppc.dcbtst
llvm.ppc.dcbz
llvm.ppc.dcbzl
llvm.ppc.is.decremented.ctr.nonzero
llvm.ppc.mtctr
llvm.ppc.sync
llvm.prefetch
llvm.ptr.annotation
llvm.ptx.bar.sync
llvm.ptx.read.clock
llvm.ptx.read.clock64
llvm.ptx.read.ctaid.w
llvm.ptx.read.ctaid.x
llvm.ptx.read.ctaid.y
llvm.ptx.read.ctaid.z
llvm.ptx.read.gridid
llvm.ptx.read.laneid
llvm.ptx.read.lanemask.eq
llvm.ptx.read.lanemask.ge
llvm.ptx.read.lanemask.gt
llvm.ptx.read.lanemask.le
llvm.ptx.read.lanemask.lt
llvm.ptx.read.nctaid.w
llvm.ptx.read.nctaid.x
llvm.ptx.read.nctaid.y
llvm.ptx.read.nctaid.z
llvm.ptx.read.nsmid
llvm.ptx.read.ntid.w
llvm.ptx.read.ntid.x
llvm.ptx.read.ntid.y
llvm.ptx.read.ntid.z
llvm.ptx.read.nwarpid
llvm.ptx.read.pm0
llvm.ptx.read.pm1
llvm.ptx.read.pm2
llvm.ptx.read.pm3
llvm.ptx.read.smid
llvm.ptx.read.tid.w
llvm.ptx.read.tid.x
llvm.ptx.read.tid.y
llvm.ptx.read.tid.z
llvm.ptx.read.warpid
llvm.r600.read.global.size.x
llvm.r600.read.global.size.y
llvm.r600.read.global.size.z
llvm.r600.read.local.size.x
llvm.r600.read.local.size.y
llvm.r600.read.local.size.z
llvm.r600.read.ngroups.x
llvm.r600.read.ngroups.y
llvm.r600.read.ngroups.z
llvm.r600.read.tgid.x
llvm.r600.read.tgid.y
llvm.r600.read.tgid.z
llvm.r600.read.tidig.x
llvm.r600.read.tidig.y
llvm.r600.read.tidig.z
llvm.read_register
llvm.readcyclecounter
llvm.returnaddress
llvm.rint
llvm.round
llvm.sadd.with.overflow
llvm.setjmp
llvm.siglongjmp
llvm.sigsetjmp
llvm.sin
llvm.smul.with.overflow
llvm.sqrt
llvm.ssub.with.overflow
llvm.stackprotector
llvm.stackprotectorcheck
llvm.stackrestore
llvm.stacksave
llvm.trap
llvm.trunc
llvm.uadd.with.overflow
llvm.umul.with.overflow
llvm.usub.with.overflow
llvm.va_copy
llvm.va_end
llvm.var.annotation
llvm.va_start
llvm.write_register
llvm.x86.3dnow.pavgusb
llvm.x86.3dnow.pf2id
llvm.x86.3dnow.pfacc
llvm.x86.3dnow.pfadd
llvm.x86.3dnow.pfcmpeq
llvm.x86.3dnow.pfcmpge
llvm.x86.3dnow.pfcmpgt
llvm.x86.3dnow.pfmax
llvm.x86.3dnow.pfmin
llvm.x86.3dnow.pfmul
llvm.x86.3dnow.pfrcp
llvm.x86.3dnow.pfrcpit1
llvm.x86.3dnow.pfrcpit2
llvm.x86.3dnow.pfrsqit1
llvm.x86.3dnow.pfrsqrt
llvm.x86.3dnow.pfsub
llvm.x86.3dnow.pfsubr
llvm.x86.3dnow.pi2fd
llvm.x86.3dnow.pmulhrw
llvm.x86.3dnowa.pf2iw
llvm.x86.3dnowa.pfnacc
llvm.x86.3dnowa.pfpnacc
llvm.x86.3dnowa.pi2fw
llvm.x86.3dnowa.pswapd
llvm.x86.aesni.aesdec
llvm.x86.aesni.aesdeclast
llvm.x86.aesni.aesenc
llvm.x86.aesni.aesenclast
llvm.x86.aesni.aesimc
llvm.x86.aesni.aeskeygenassist
llvm.x86.avx2.gather.d.d
llvm.x86.avx2.gather.d.d.256
llvm.x86.avx2.gather.d.pd
llvm.x86.avx2.gather.d.pd.256
llvm.x86.avx2.gather.d.ps
llvm.x86.avx2.gather.d.ps.256
llvm.x86.avx2.gather.d.q
llvm.x86.avx2.gather.d.q.256
llvm.x86.avx2.gather.q.d
llvm.x86.avx2.gather.q.d.256
llvm.x86.avx2.gather.q.pd
llvm.x86.avx2.gather.q.pd.256
llvm.x86.avx2.gather.q.ps
llvm.x86.avx2.gather.q.ps.256
llvm.x86.avx2.gather.q.q
llvm.x86.avx2.gather.q.q.256
llvm.x86.avx2.maskload.d
llvm.x86.avx2.maskload.d.256
llvm.x86.avx2.maskload.q
llvm.x86.avx2.maskload.q.256
llvm.x86.avx2.maskstore.d
llvm.x86.avx2.maskstore.d.256
llvm.x86.avx2.maskstore.q
llvm.x86.avx2.maskstore.q.256
llvm.x86.avx2.movntdqa
llvm.x86.avx2.mpsadbw
llvm.x86.avx2.pabs.b
llvm.x86.avx2.pabs.d
llvm.x86.avx2.pabs.w
llvm.x86.avx2.packssdw
llvm.x86.avx2.packsswb
llvm.x86.avx2.packusdw
llvm.x86.avx2.packuswb
llvm.x86.avx2.padds.b
llvm.x86.avx2.padds.w
llvm.x86.avx2.paddus.b
llvm.x86.avx2.paddus.w
llvm.x86.avx2.pavg.b
llvm.x86.avx2.pavg.w
llvm.x86.avx2.pblendd.128
llvm.x86.avx2.pblendd.256
llvm.x86.avx2.pblendvb
llvm.x86.avx2.pblendw
llvm.x86.avx2.pbroadcastb.128
llvm.x86.avx2.pbroadcastb.256
llvm.x86.avx2.pbroadcastd.128
llvm.x86.avx2.pbroadcastd.256
llvm.x86.avx2.pbroadcastq.128
llvm.x86.avx2.pbroadcastq.256
llvm.x86.avx2.pbroadcastw.128
llvm.x86.avx2.pbroadcastw.256
llvm.x86.avx2.permd
llvm.x86.avx2.permps
llvm.x86.avx2.phadd.d
llvm.x86.avx2.phadd.sw
llvm.x86.avx2.phadd.w
llvm.x86.avx2.phsub.d
llvm.x86.avx2.phsub.sw
llvm.x86.avx2.phsub.w
llvm.x86.avx2.pmadd.ub.sw
llvm.x86.avx2.pmadd.wd
llvm.x86.avx2.pmaxs.b
llvm.x86.avx2.pmaxs.d
llvm.x86.avx2.pmaxs.w
llvm.x86.avx2.pmaxu.b
llvm.x86.avx2.pmaxu.d
llvm.x86.avx2.pmaxu.w
llvm.x86.avx2.pmins.b
llvm.x86.avx2.pmins.d
llvm.x86.avx2.pmins.w
llvm.x86.avx2.pminu.b
llvm.x86.avx2.pminu.d
llvm.x86.avx2.pminu.w
llvm.x86.avx2.pmovmskb
llvm.x86.avx2.pmovsxbd
llvm.x86.avx2.pmovsxbq
llvm.x86.avx2.pmovsxbw
llvm.x86.avx2.pmovsxdq
llvm.x86.avx2.pmovsxwd
llvm.x86.avx2.pmovsxwq
llvm.x86.avx2.pmovzxbd
llvm.x86.avx2.pmovzxbq
llvm.x86.avx2.pmovzxbw
llvm.x86.avx2.pmovzxdq
llvm.x86.avx2.pmovzxwd
llvm.x86.avx2.pmovzxwq
llvm.x86.avx2.pmul.dq
llvm.x86.avx2.pmul.hr.sw
llvm.x86.avx2.pmulh.w
llvm.x86.avx2.pmulhu.w
llvm.x86.avx2.pmulu.dq
llvm.x86.avx2.psad.bw
llvm.x86.avx2.pshuf.b
llvm.x86.avx2.psign.b
llvm.x86.avx2.psign.d
llvm.x86.avx2.psign.w
llvm.x86.avx2.psll.d
llvm.x86.avx2.psll.dq
llvm.x86.avx2.psll.dq.bs
llvm.x86.avx2.psll.q
llvm.x86.avx2.psll.w
llvm.x86.avx2.pslli.d
llvm.x86.avx2.pslli.q
llvm.x86.avx2.pslli.w
llvm.x86.avx2.psllv.d
llvm.x86.avx2.psllv.d.256
llvm.x86.avx2.psllv.q
llvm.x86.avx2.psllv.q.256
llvm.x86.avx2.psra.d
llvm.x86.avx2.psra.w
llvm.x86.avx2.psrai.d
llvm.x86.avx2.psrai.w
llvm.x86.avx2.psrav.d
llvm.x86.avx2.psrav.d.256
llvm.x86.avx2.psrl.d
llvm.x86.avx2.psrl.dq
llvm.x86.avx2.psrl.dq.bs
llvm.x86.avx2.psrl.q
llvm.x86.avx2.psrl.w
llvm.x86.avx2.psrli.d
llvm.x86.avx2.psrli.q
llvm.x86.avx2.psrli.w
llvm.x86.avx2.psrlv.d
llvm.x86.avx2.psrlv.d.256
llvm.x86.avx2.psrlv.q
llvm.x86.avx2.psrlv.q.256
llvm.x86.avx2.psubs.b
llvm.x86.avx2.psubs.w
llvm.x86.avx2.psubus.b
llvm.x86.avx2.psubus.w
llvm.x86.avx2.vbroadcast.sd.pd.256
llvm.x86.avx2.vbroadcast.ss.ps
llvm.x86.avx2.vbroadcast.ss.ps.256
llvm.x86.avx2.vbroadcasti128
llvm.x86.avx2.vextracti128
llvm.x86.avx2.vinserti128
llvm.x86.avx2.vperm2i128
llvm.x86.avx512.cvtsd2usi
llvm.x86.avx512.cvtsd2usi64
llvm.x86.avx512.cvtss2usi
llvm.x86.avx512.cvtss2usi64
llvm.x86.avx512.cvttsd2usi
llvm.x86.avx512.cvttsd2usi64
llvm.x86.avx512.cvttss2usi
llvm.x86.avx512.cvttss2usi64
llvm.x86.avx512.cvtusi2sd
llvm.x86.avx512.cvtusi2ss
llvm.x86.avx512.cvtusi642sd
llvm.x86.avx512.cvtusi642ss
llvm.x86.avx512.gather.dpd.512
llvm.x86.avx512.gather.dpi.512
llvm.x86.avx512.gather.dpq.512
llvm.x86.avx512.gather.dps.512
llvm.x86.avx512.gather.qpd.512
llvm.x86.avx512.gather.qpi.512
llvm.x86.avx512.gather.qpq.512
llvm.x86.avx512.gather.qps.512
llvm.x86.avx512.gatherpf.dpd.512
llvm.x86.avx512.gatherpf.dps.512
llvm.x86.avx512.gatherpf.qpd.512
llvm.x86.avx512.gatherpf.qps.512
llvm.x86.avx512.kand.w
llvm.x86.avx512.kandn.w
llvm.x86.avx512.knot.w
llvm.x86.avx512.kor.w
llvm.x86.avx512.kortestc.w
llvm.x86.avx512.kortestz.w
llvm.x86.avx512.kunpck.bw
llvm.x86.avx512.kxnor.w
llvm.x86.avx512.kxor.w
llvm.x86.avx512.mask.blend.d.512
llvm.x86.avx512.mask.blend.pd.512
llvm.x86.avx512.mask.blend.ps.512
llvm.x86.avx512.mask.blend.q.512
llvm.x86.avx512.mask.cmp.pd.512
llvm.x86.avx512.mask.cmp.ps.512
llvm.x86.avx512.mask.conflict.d.512
llvm.x86.avx512.mask.conflict.q.512
llvm.x86.avx512.mask.cvtdq2pd.512
llvm.x86.avx512.mask.cvtdq2ps.512
llvm.x86.avx512.mask.cvtpd2dq.512
llvm.x86.avx512.mask.cvtpd2ps.512
llvm.x86.avx512.mask.cvtpd2udq.512
llvm.x86.avx512.mask.cvtps2dq.512
llvm.x86.avx512.mask.cvtps2udq.512
llvm.x86.avx512.mask.cvttpd2dq.512
llvm.x86.avx512.mask.cvttpd2udq.512
llvm.x86.avx512.mask.cvttps2dq.512
llvm.x86.avx512.mask.cvttps2udq.512
llvm.x86.avx512.mask.cvtudq2pd.512
llvm.x86.avx512.mask.cvtudq2ps.512
llvm.x86.avx512.mask.loadu.d.512
llvm.x86.avx512.mask.loadu.pd.512
llvm.x86.avx512.mask.loadu.ps.512
llvm.x86.avx512.mask.loadu.q.512
llvm.x86.avx512.mask.lzcnt.d.512
llvm.x86.avx512.mask.lzcnt.q.512
llvm.x86.avx512.mask.max.pd.512
llvm.x86.avx512.mask.max.ps.512
llvm.x86.avx512.mask.min.pd.512
llvm.x86.avx512.mask.min.ps.512
llvm.x86.avx512.mask.pabs.d.512
llvm.x86.avx512.mask.pabs.q.512
llvm.x86.avx512.mask.pand.d.512
llvm.x86.avx512.mask.pand.q.512
llvm.x86.avx512.mask.pbroadcast.d.gpr.512
llvm.x86.avx512.mask.pbroadcast.q.gpr.512
llvm.x86.avx512.mask.pbroadcast.q.mem.512
llvm.x86.avx512.mask.pcmpeq.d.512
llvm.x86.avx512.mask.pcmpeq.q.512
llvm.x86.avx512.mask.pmaxs.d.512
llvm.x86.avx512.mask.pmaxs.q.512
llvm.x86.avx512.mask.pmaxu.d.512
llvm.x86.avx512.mask.pmaxu.q.512
llvm.x86.avx512.mask.pmins.d.512
llvm.x86.avx512.mask.pmins.q.512
llvm.x86.avx512.mask.pminu.d.512
llvm.x86.avx512.mask.pminu.q.512
llvm.x86.avx512.mask.pmul.dq.512
llvm.x86.avx512.mask.pmulu.dq.512
llvm.x86.avx512.mask.ptestm.d.512
llvm.x86.avx512.mask.ptestm.q.512
llvm.x86.avx512.mask.rndscale.pd.512
llvm.x86.avx512.mask.rndscale.ps.512
llvm.x86.avx512.mask.storeu.d.512
llvm.x86.avx512.mask.storeu.pd.512
llvm.x86.avx512.mask.storeu.ps.512
llvm.x86.avx512.mask.storeu.q.512
llvm.x86.avx512.mask.valign.d.512
llvm.x86.avx512.mask.valign.q.512
llvm.x86.avx512.mask.vcvtph2ps.512
llvm.x86.avx512.mask.vcvtps2ph.512
llvm.x86.avx512.mask.vpermt.d.512
llvm.x86.avx512.mask.vpermt.pd.512
llvm.x86.avx512.mask.vpermt.ps.512
llvm.x86.avx512.mask.vpermt.q.512
llvm.x86.avx512.movntdqa
llvm.x86.avx512.pbroadcastd.512
llvm.x86.avx512.pbroadcastd.i32.512
llvm.x86.avx512.pbroadcastq.512
llvm.x86.avx512.pbroadcastq.i64.512
llvm.x86.avx512.pmovzxbd
llvm.x86.avx512.pmovzxbq
llvm.x86.avx512.pmovzxdq
llvm.x86.avx512.pmovzxwd
llvm.x86.avx512.pmovzxwq
llvm.x86.avx512.psll.dq
llvm.x86.avx512.psll.dq.bs
llvm.x86.avx512.psrl.dq
llvm.x86.avx512.psrl.dq.bs
llvm.x86.avx512.rcp14.pd.512
llvm.x86.avx512.rcp14.ps.512
llvm.x86.avx512.rcp14.sd
llvm.x86.avx512.rcp14.ss
llvm.x86.avx512.rcp28.pd
llvm.x86.avx512.rcp28.ps
llvm.x86.avx512.rcp28.sd
llvm.x86.avx512.rcp28.ss
llvm.x86.avx512.rndscale.sd
llvm.x86.avx512.rndscale.ss
llvm.x86.avx512.rsqrt14.pd.512
llvm.x86.avx512.rsqrt14.ps.512
llvm.x86.avx512.rsqrt14.sd
llvm.x86.avx512.rsqrt14.ss
llvm.x86.avx512.rsqrt28.pd
llvm.x86.avx512.rsqrt28.ps
llvm.x86.avx512.rsqrt28.sd
llvm.x86.avx512.rsqrt28.ss
llvm.x86.avx512.scatter.dpd.512
llvm.x86.avx512.scatter.dpi.512
llvm.x86.avx512.scatter.dpq.512
llvm.x86.avx512.scatter.dps.512
llvm.x86.avx512.scatter.qpd.512
llvm.x86.avx512.scatter.qpi.512
llvm.x86.avx512.scatter.qpq.512
llvm.x86.avx512.scatter.qps.512
llvm.x86.avx512.scatterpf.dpd.512
llvm.x86.avx512.scatterpf.dps.512
llvm.x86.avx512.scatterpf.qpd.512
llvm.x86.avx512.scatterpf.qps.512
llvm.x86.avx512.sqrt.pd.512
llvm.x86.avx512.sqrt.ps.512
llvm.x86.avx512.sqrt.sd
llvm.x86.avx512.sqrt.ss
llvm.x86.avx512.vbroadcast.sd.512
llvm.x86.avx512.vbroadcast.sd.pd.512
llvm.x86.avx512.vbroadcast.ss.512
llvm.x86.avx512.vbroadcast.ss.ps.512
llvm.x86.avx.addsub.pd.256
llvm.x86.avx.addsub.ps.256
llvm.x86.avx.blend.pd.256
llvm.x86.avx.blend.ps.256
llvm.x86.avx.blendv.pd.256
llvm.x86.avx.blendv.ps.256
llvm.x86.avx.cmp.pd.256
llvm.x86.avx.cmp.ps.256
llvm.x86.avx.cvt.pd2.ps.256
llvm.x86.avx.cvt.pd2dq.256
llvm.x86.avx.cvt.ps2.pd.256
llvm.x86.avx.cvt.ps2dq.256
llvm.x86.avx.cvtdq2.pd.256
llvm.x86.avx.cvtdq2.ps.256
llvm.x86.avx.cvtt.pd2dq.256
llvm.x86.avx.cvtt.ps2dq.256
llvm.x86.avx.dp.ps.256
llvm.x86.avx.hadd.pd.256
llvm.x86.avx.hadd.ps.256
llvm.x86.avx.hsub.pd.256
llvm.x86.avx.hsub.ps.256
llvm.x86.avx.ldu.dq.256
llvm.x86.avx.maskload.pd
llvm.x86.avx.maskload.pd.256
llvm.x86.avx.maskload.ps
llvm.x86.avx.maskload.ps.256
llvm.x86.avx.maskstore.pd
llvm.x86.avx.maskstore.pd.256
llvm.x86.avx.maskstore.ps
llvm.x86.avx.maskstore.ps.256
llvm.x86.avx.max.pd.256
llvm.x86.avx.max.ps.256
llvm.x86.avx.min.pd.256
llvm.x86.avx.min.ps.256
llvm.x86.avx.movmsk.pd.256
llvm.x86.avx.movmsk.ps.256
llvm.x86.avx.ptestc.256
llvm.x86.avx.ptestnzc.256
llvm.x86.avx.ptestz.256
llvm.x86.avx.rcp.ps.256
llvm.x86.avx.round.pd.256
llvm.x86.avx.round.ps.256
llvm.x86.avx.rsqrt.ps.256
llvm.x86.avx.sqrt.pd.256
llvm.x86.avx.sqrt.ps.256
llvm.x86.avx.storeu.dq.256
llvm.x86.avx.storeu.pd.256
llvm.x86.avx.storeu.ps.256
llvm.x86.avx.vbroadcastf128.pd.256
llvm.x86.avx.vbroadcastf128.ps.256
llvm.x86.avx.vextractf128.pd.256
llvm.x86.avx.vextractf128.ps.256
llvm.x86.avx.vextractf128.si.256
llvm.x86.avx.vinsertf128.pd.256
llvm.x86.avx.vinsertf128.ps.256
llvm.x86.avx.vinsertf128.si.256
llvm.x86.avx.vperm2f128.pd.256
llvm.x86.avx.vperm2f128.ps.256
llvm.x86.avx.vperm2f128.si.256
llvm.x86.avx.vpermilvar.pd
llvm.x86.avx.vpermilvar.pd.256
llvm.x86.avx.vpermilvar.ps
llvm.x86.avx.vpermilvar.ps.256
llvm.x86.avx.vtestc.pd
llvm.x86.avx.vtestc.pd.256
llvm.x86.avx.vtestc.ps
llvm.x86.avx.vtestc.ps.256
llvm.x86.avx.vtestnzc.pd
llvm.x86.avx.vtestnzc.pd.256
llvm.x86.avx.vtestnzc.ps
llvm.x86.avx.vtestnzc.ps.256
llvm.x86.avx.vtestz.pd
llvm.x86.avx.vtestz.pd.256
llvm.x86.avx.vtestz.ps
llvm.x86.avx.vtestz.ps.256
llvm.x86.avx.vzeroall
llvm.x86.avx.vzeroupper
llvm.x86.bmi.bextr.32
llvm.x86.bmi.bextr.64
llvm.x86.bmi.bzhi.32
llvm.x86.bmi.bzhi.64
llvm.x86.bmi.pdep.32
llvm.x86.bmi.pdep.64
llvm.x86.bmi.pext.32
llvm.x86.bmi.pext.64
llvm.x86.fma.mask.vfmadd.pd.512
llvm.x86.fma.mask.vfmadd.ps.512
llvm.x86.fma.mask.vfmaddsub.pd.512
llvm.x86.fma.mask.vfmaddsub.ps.512
llvm.x86.fma.mask.vfmsub.pd.512
llvm.x86.fma.mask.vfmsub.ps.512
llvm.x86.fma.mask.vfmsubadd.pd.512
llvm.x86.fma.mask.vfmsubadd.ps.512
llvm.x86.fma.mask.vfnmadd.pd.512
llvm.x86.fma.mask.vfnmadd.ps.512
llvm.x86.fma.mask.vfnmsub.pd.512
llvm.x86.fma.mask.vfnmsub.ps.512
llvm.x86.fma.vfmadd.pd
llvm.x86.fma.vfmadd.pd.256
llvm.x86.fma.vfmadd.ps
llvm.x86.fma.vfmadd.ps.256
llvm.x86.fma.vfmadd.sd
llvm.x86.fma.vfmadd.ss
llvm.x86.fma.vfmaddsub.pd
llvm.x86.fma.vfmaddsub.pd.256
llvm.x86.fma.vfmaddsub.ps
llvm.x86.fma.vfmaddsub.ps.256
llvm.x86.fma.vfmsub.pd
llvm.x86.fma.vfmsub.pd.256
llvm.x86.fma.vfmsub.ps
llvm.x86.fma.vfmsub.ps.256
llvm.x86.fma.vfmsub.sd
llvm.x86.fma.vfmsub.ss
llvm.x86.fma.vfmsubadd.pd
llvm.x86.fma.vfmsubadd.pd.256
llvm.x86.fma.vfmsubadd.ps
llvm.x86.fma.vfmsubadd.ps.256
llvm.x86.fma.vfnmadd.pd
llvm.x86.fma.vfnmadd.pd.256
llvm.x86.fma.vfnmadd.ps
llvm.x86.fma.vfnmadd.ps.256
llvm.x86.fma.vfnmadd.sd
llvm.x86.fma.vfnmadd.ss
llvm.x86.fma.vfnmsub.pd
llvm.x86.fma.vfnmsub.pd.256
llvm.x86.fma.vfnmsub.ps
llvm.x86.fma.vfnmsub.ps.256
llvm.x86.fma.vfnmsub.sd
llvm.x86.fma.vfnmsub.ss
llvm.x86.int
llvm.x86.mmx.emms
llvm.x86.mmx.femms
llvm.x86.mmx.maskmovq
llvm.x86.mmx.movnt.dq
llvm.x86.mmx.packssdw
llvm.x86.mmx.packsswb
llvm.x86.mmx.packuswb
llvm.x86.mmx.padd.b
llvm.x86.mmx.padd.d
llvm.x86.mmx.padd.q
llvm.x86.mmx.padd.w
llvm.x86.mmx.padds.b
llvm.x86.mmx.padds.w
llvm.x86.mmx.paddus.b
llvm.x86.mmx.paddus.w
llvm.x86.mmx.palignr.b
llvm.x86.mmx.pand
llvm.x86.mmx.pandn
llvm.x86.mmx.pavg.b
llvm.x86.mmx.pavg.w
llvm.x86.mmx.pcmpeq.b
llvm.x86.mmx.pcmpeq.d
llvm.x86.mmx.pcmpeq.w
llvm.x86.mmx.pcmpgt.b
llvm.x86.mmx.pcmpgt.d
llvm.x86.mmx.pcmpgt.w
llvm.x86.mmx.pextr.w
llvm.x86.mmx.pinsr.w
llvm.x86.mmx.pmadd.wd
llvm.x86.mmx.pmaxs.w
llvm.x86.mmx.pmaxu.b
llvm.x86.mmx.pmins.w
llvm.x86.mmx.pminu.b
llvm.x86.mmx.pmovmskb
llvm.x86.mmx.pmulh.w
llvm.x86.mmx.pmulhu.w
llvm.x86.mmx.pmull.w
llvm.x86.mmx.pmulu.dq
llvm.x86.mmx.por
llvm.x86.mmx.psad.bw
llvm.x86.mmx.psll.d
llvm.x86.mmx.psll.q
llvm.x86.mmx.psll.w
llvm.x86.mmx.pslli.d
llvm.x86.mmx.pslli.q
llvm.x86.mmx.pslli.w
llvm.x86.mmx.psra.d
llvm.x86.mmx.psra.w
llvm.x86.mmx.psrai.d
llvm.x86.mmx.psrai.w
llvm.x86.mmx.psrl.d
llvm.x86.mmx.psrl.q
llvm.x86.mmx.psrl.w
llvm.x86.mmx.psrli.d
llvm.x86.mmx.psrli.q
llvm.x86.mmx.psrli.w
llvm.x86.mmx.psub.b
llvm.x86.mmx.psub.d
llvm.x86.mmx.psub.q
llvm.x86.mmx.psub.w
llvm.x86.mmx.psubs.b
llvm.x86.mmx.psubs.w
llvm.x86.mmx.psubus.b
llvm.x86.mmx.psubus.w
llvm.x86.mmx.punpckhbw
llvm.x86.mmx.punpckhdq
llvm.x86.mmx.punpckhwd
llvm.x86.mmx.punpcklbw
llvm.x86.mmx.punpckldq
llvm.x86.mmx.punpcklwd
llvm.x86.mmx.pxor
llvm.x86.pclmulqdq
llvm.x86.rdfsbase.32
llvm.x86.rdfsbase.64
llvm.x86.rdgsbase.32
llvm.x86.rdgsbase.64
llvm.x86.rdpmc
llvm.x86.rdrand.16
llvm.x86.rdrand.32
llvm.x86.rdrand.64
llvm.x86.rdseed.16
llvm.x86.rdseed.32
llvm.x86.rdseed.64
llvm.x86.rdtsc
llvm.x86.rdtscp
llvm.x86.sha1msg1
llvm.x86.sha1msg2
llvm.x86.sha1nexte
llvm.x86.sha1rnds4
llvm.x86.sha256msg1
llvm.x86.sha256msg2
llvm.x86.sha256rnds2
llvm.x86.sse2.add.sd
llvm.x86.sse2.clflush
llvm.x86.sse2.cmp.pd
llvm.x86.sse2.cmp.sd
llvm.x86.sse2.comieq.sd
llvm.x86.sse2.comige.sd
llvm.x86.sse2.comigt.sd
llvm.x86.sse2.comile.sd
llvm.x86.sse2.comilt.sd
llvm.x86.sse2.comineq.sd
llvm.x86.sse2.cvtdq2pd
llvm.x86.sse2.cvtdq2ps
llvm.x86.sse2.cvtpd2dq
llvm.x86.sse2.cvtpd2ps
llvm.x86.sse2.cvtps2dq
llvm.x86.sse2.cvtps2pd
llvm.x86.sse2.cvtsd2si
llvm.x86.sse2.cvtsd2si64
llvm.x86.sse2.cvtsd2ss
llvm.x86.sse2.cvtsi2sd
llvm.x86.sse2.cvtsi642sd
llvm.x86.sse2.cvtss2sd
llvm.x86.sse2.cvttpd2dq
llvm.x86.sse2.cvttps2dq
llvm.x86.sse2.cvttsd2si
llvm.x86.sse2.cvttsd2si64
llvm.x86.sse2.div.sd
llvm.x86.sse2.lfence
llvm.x86.sse2.maskmov.dqu
llvm.x86.sse2.max.pd
llvm.x86.sse2.max.sd
llvm.x86.sse2.mfence
llvm.x86.sse2.min.pd
llvm.x86.sse2.min.sd
llvm.x86.sse2.movmsk.pd
llvm.x86.sse2.mul.sd
llvm.x86.sse2.packssdw.128
llvm.x86.sse2.packsswb.128
llvm.x86.sse2.packuswb.128
llvm.x86.sse2.padds.b
llvm.x86.sse2.padds.w
llvm.x86.sse2.paddus.b
llvm.x86.sse2.paddus.w
llvm.x86.sse2.pause
llvm.x86.sse2.pavg.b
llvm.x86.sse2.pavg.w
llvm.x86.sse2.pmadd.wd
llvm.x86.sse2.pmaxs.w
llvm.x86.sse2.pmaxu.b
llvm.x86.sse2.pmins.w
llvm.x86.sse2.pminu.b
llvm.x86.sse2.pmovmskb.128
llvm.x86.sse2.pmulh.w
llvm.x86.sse2.pmulhu.w
llvm.x86.sse2.pmulu.dq
llvm.x86.sse2.psad.bw
llvm.x86.sse2.pshuf.d
llvm.x86.sse2.pshufh.w
llvm.x86.sse2.pshufl.w
llvm.x86.sse2.psll.d
llvm.x86.sse2.psll.dq
llvm.x86.sse2.psll.dq.bs
llvm.x86.sse2.psll.q
llvm.x86.sse2.psll.w
llvm.x86.sse2.pslli.d
llvm.x86.sse2.pslli.q
llvm.x86.sse2.pslli.w
llvm.x86.sse2.psra.d
llvm.x86.sse2.psra.w
llvm.x86.sse2.psrai.d
llvm.x86.sse2.psrai.w
llvm.x86.sse2.psrl.d
llvm.x86.sse2.psrl.dq
llvm.x86.sse2.psrl.dq.bs
llvm.x86.sse2.psrl.q
llvm.x86.sse2.psrl.w
llvm.x86.sse2.psrli.d
llvm.x86.sse2.psrli.q
llvm.x86.sse2.psrli.w
llvm.x86.sse2.psubs.b
llvm.x86.sse2.psubs.w
llvm.x86.sse2.psubus.b
llvm.x86.sse2.psubus.w
llvm.x86.sse2.sqrt.pd
llvm.x86.sse2.sqrt.sd
llvm.x86.sse2.storel.dq
llvm.x86.sse2.storeu.dq
llvm.x86.sse2.storeu.pd
llvm.x86.sse2.sub.sd
llvm.x86.sse2.ucomieq.sd
llvm.x86.sse2.ucomige.sd
llvm.x86.sse2.ucomigt.sd
llvm.x86.sse2.ucomile.sd
llvm.x86.sse2.ucomilt.sd
llvm.x86.sse2.ucomineq.sd
llvm.x86.sse3.addsub.pd
llvm.x86.sse3.addsub.ps
llvm.x86.sse3.hadd.pd
llvm.x86.sse3.hadd.ps
llvm.x86.sse3.hsub.pd
llvm.x86.sse3.hsub.ps
llvm.x86.sse3.ldu.dq
llvm.x86.sse3.monitor
llvm.x86.sse3.mwait
llvm.x86.sse41.blendpd
llvm.x86.sse41.blendps
llvm.x86.sse41.blendvpd
llvm.x86.sse41.blendvps
llvm.x86.sse41.dppd
llvm.x86.sse41.dpps
llvm.x86.sse41.extractps
llvm.x86.sse41.insertps
llvm.x86.sse41.movntdqa
llvm.x86.sse41.mpsadbw
llvm.x86.sse41.packusdw
llvm.x86.sse41.pblendvb
llvm.x86.sse41.pblendw
llvm.x86.sse41.pextrb
llvm.x86.sse41.pextrd
llvm.x86.sse41.pextrq
llvm.x86.sse41.phminposuw
llvm.x86.sse41.pmaxsb
llvm.x86.sse41.pmaxsd
llvm.x86.sse41.pmaxud
llvm.x86.sse41.pmaxuw
llvm.x86.sse41.pminsb
llvm.x86.sse41.pminsd
llvm.x86.sse41.pminud
llvm.x86.sse41.pminuw
llvm.x86.sse41.pmovsxbd
llvm.x86.sse41.pmovsxbq
llvm.x86.sse41.pmovsxbw
llvm.x86.sse41.pmovsxdq
llvm.x86.sse41.pmovsxwd
llvm.x86.sse41.pmovsxwq
llvm.x86.sse41.pmovzxbd
llvm.x86.sse41.pmovzxbq
llvm.x86.sse41.pmovzxbw
llvm.x86.sse41.pmovzxdq
llvm.x86.sse41.pmovzxwd
llvm.x86.sse41.pmovzxwq
llvm.x86.sse41.pmuldq
llvm.x86.sse41.ptestc
llvm.x86.sse41.ptestnzc
llvm.x86.sse41.ptestz
llvm.x86.sse41.round.pd
llvm.x86.sse41.round.ps
llvm.x86.sse41.round.sd
llvm.x86.sse41.round.ss
llvm.x86.sse42.crc32.32.16
llvm.x86.sse42.crc32.32.32
llvm.x86.sse42.crc32.32.8
llvm.x86.sse42.crc32.64.64
llvm.x86.sse42.pcmpestri128
llvm.x86.sse42.pcmpestria128
llvm.x86.sse42.pcmpestric128
llvm.x86.sse42.pcmpestrio128
llvm.x86.sse42.pcmpestris128
llvm.x86.sse42.pcmpestriz128
llvm.x86.sse42.pcmpestrm128
llvm.x86.sse42.pcmpistri128
llvm.x86.sse42.pcmpistria128
llvm.x86.sse42.pcmpistric128
llvm.x86.sse42.pcmpistrio128
llvm.x86.sse42.pcmpistris128
llvm.x86.sse42.pcmpistriz128
llvm.x86.sse42.pcmpistrm128
llvm.x86.sse4a.extrq
llvm.x86.sse4a.extrqi
llvm.x86.sse4a.insertq
llvm.x86.sse4a.insertqi
llvm.x86.sse4a.movnt.sd
llvm.x86.sse4a.movnt.ss
llvm.x86.sse.add.ss
llvm.x86.sse.cmp.ps
llvm.x86.sse.cmp.ss
llvm.x86.sse.comieq.ss
llvm.x86.sse.comige.ss
llvm.x86.sse.comigt.ss
llvm.x86.sse.comile.ss
llvm.x86.sse.comilt.ss
llvm.x86.sse.comineq.ss
llvm.x86.sse.cvtpd2pi
llvm.x86.sse.cvtpi2pd
llvm.x86.sse.cvtpi2ps
llvm.x86.sse.cvtps2pi
llvm.x86.sse.cvtsi2ss
llvm.x86.sse.cvtsi642ss
llvm.x86.sse.cvtss2si
llvm.x86.sse.cvtss2si64
llvm.x86.sse.cvttpd2pi
llvm.x86.sse.cvttps2pi
llvm.x86.sse.cvttss2si
llvm.x86.sse.cvttss2si64
llvm.x86.sse.div.ss
llvm.x86.sse.ldmxcsr
llvm.x86.sse.max.ps
llvm.x86.sse.max.ss
llvm.x86.sse.min.ps
llvm.x86.sse.min.ss
llvm.x86.sse.movmsk.ps
llvm.x86.sse.mul.ss
llvm.x86.sse.pshuf.w
llvm.x86.sse.rcp.ps
llvm.x86.sse.rcp.ss
llvm.x86.sse.rsqrt.ps
llvm.x86.sse.rsqrt.ss
llvm.x86.sse.sfence
llvm.x86.sse.sqrt.ps
llvm.x86.sse.sqrt.ss
llvm.x86.sse.stmxcsr
llvm.x86.sse.storeu.ps
llvm.x86.sse.sub.ss
llvm.x86.sse.ucomieq.ss
llvm.x86.sse.ucomige.ss
llvm.x86.sse.ucomigt.ss
llvm.x86.sse.ucomile.ss
llvm.x86.sse.ucomilt.ss
llvm.x86.sse.ucomineq.ss
llvm.x86.ssse3.pabs.b
llvm.x86.ssse3.pabs.b.128
llvm.x86.ssse3.pabs.d
llvm.x86.ssse3.pabs.d.128
llvm.x86.ssse3.pabs.w
llvm.x86.ssse3.pabs.w.128
llvm.x86.ssse3.phadd.d
llvm.x86.ssse3.phadd.d.128
llvm.x86.ssse3.phadd.sw
llvm.x86.ssse3.phadd.sw.128
llvm.x86.ssse3.phadd.w
llvm.x86.ssse3.phadd.w.128
llvm.x86.ssse3.phsub.d
llvm.x86.ssse3.phsub.d.128
llvm.x86.ssse3.phsub.sw
llvm.x86.ssse3.phsub.sw.128
llvm.x86.ssse3.phsub.w
llvm.x86.ssse3.phsub.w.128
llvm.x86.ssse3.pmadd.ub.sw
llvm.x86.ssse3.pmadd.ub.sw.128
llvm.x86.ssse3.pmul.hr.sw
llvm.x86.ssse3.pmul.hr.sw.128
llvm.x86.ssse3.pshuf.b
llvm.x86.ssse3.pshuf.b.128
llvm.x86.ssse3.psign.b
llvm.x86.ssse3.psign.b.128
llvm.x86.ssse3.psign.d
llvm.x86.ssse3.psign.d.128
llvm.x86.ssse3.psign.w
llvm.x86.ssse3.psign.w.128
llvm.x86.tbm.bextri.u32
llvm.x86.tbm.bextri.u64
llvm.x86.vcvtph2ps.128
llvm.x86.vcvtph2ps.256
llvm.x86.vcvtps2ph.128
llvm.x86.vcvtps2ph.256
llvm.x86.wrfsbase.32
llvm.x86.wrfsbase.64
llvm.x86.wrgsbase.32
llvm.x86.wrgsbase.64
llvm.x86.xabort
llvm.x86.xbegin
llvm.x86.xend
llvm.x86.xop.vfrcz.pd
llvm.x86.xop.vfrcz.pd.256
llvm.x86.xop.vfrcz.ps
llvm.x86.xop.vfrcz.ps.256
llvm.x86.xop.vfrcz.sd
llvm.x86.xop.vfrcz.ss
llvm.x86.xop.vpcmov
llvm.x86.xop.vpcmov.256
llvm.x86.xop.vpcomb
llvm.x86.xop.vpcomd
llvm.x86.xop.vpcomq
llvm.x86.xop.vpcomub
llvm.x86.xop.vpcomud
llvm.x86.xop.vpcomuq
llvm.x86.xop.vpcomuw
llvm.x86.xop.vpcomw
llvm.x86.xop.vpermil2pd
llvm.x86.xop.vpermil2pd.256
llvm.x86.xop.vpermil2ps
llvm.x86.xop.vpermil2ps.256
llvm.x86.xop.vphaddbd
llvm.x86.xop.vphaddbq
llvm.x86.xop.vphaddbw
llvm.x86.xop.vphadddq
llvm.x86.xop.vphaddubd
llvm.x86.xop.vphaddubq
llvm.x86.xop.vphaddubw
llvm.x86.xop.vphaddudq
llvm.x86.xop.vphadduwd
llvm.x86.xop.vphadduwq
llvm.x86.xop.vphaddwd
llvm.x86.xop.vphaddwq
llvm.x86.xop.vphsubbw
llvm.x86.xop.vphsubdq
llvm.x86.xop.vphsubwd
llvm.x86.xop.vpmacsdd
llvm.x86.xop.vpmacsdqh
llvm.x86.xop.vpmacsdql
llvm.x86.xop.vpmacssdd
llvm.x86.xop.vpmacssdqh
llvm.x86.xop.vpmacssdql
llvm.x86.xop.vpmacsswd
llvm.x86.xop.vpmacssww
llvm.x86.xop.vpmacswd
llvm.x86.xop.vpmacsww
llvm.x86.xop.vpmadcsswd
llvm.x86.xop.vpmadcswd
llvm.x86.xop.vpperm
llvm.x86.xop.vprotb
llvm.x86.xop.vprotbi
llvm.x86.xop.vprotd
llvm.x86.xop.vprotdi
llvm.x86.xop.vprotq
llvm.x86.xop.vprotqi
llvm.x86.xop.vprotw
llvm.x86.xop.vprotwi
llvm.x86.xop.vpshab
llvm.x86.xop.vpshad
llvm.x86.xop.vpshaq
llvm.x86.xop.vpshaw
llvm.x86.xop.vpshlb
llvm.x86.xop.vpshld
llvm.x86.xop.vpshlq
llvm.x86.xop.vpshlw
llvm.x86.xtest
llvm.xcore.bitrev
llvm.xcore.checkevent
llvm.xcore.chkct
llvm.xcore.clre
llvm.xcore.clrpt
llvm.xcore.clrsr
llvm.xcore.crc32
llvm.xcore.crc8
llvm.xcore.edu
llvm.xcore.eeu
llvm.xcore.endin
llvm.xcore.freer
llvm.xcore.geted
llvm.xcore.getet
llvm.xcore.getid
llvm.xcore.getps
llvm.xcore.getr
llvm.xcore.getst
llvm.xcore.getts
llvm.xcore.in
llvm.xcore.inct
llvm.xcore.initcp
llvm.xcore.initdp
llvm.xcore.initlr
llvm.xcore.initpc
llvm.xcore.initsp
llvm.xcore.inshr
llvm.xcore.int
llvm.xcore.mjoin
llvm.xcore.msync
llvm.xcore.out
llvm.xcore.outct
llvm.xcore.outshr
llvm.xcore.outt
llvm.xcore.peek
llvm.xcore.setc
llvm.xcore.setclk
llvm.xcore.setd
llvm.xcore.setev
llvm.xcore.setps
llvm.xcore.setpsc
llvm.xcore.setpt
llvm.xcore.setrdy
llvm.xcore.setsr
llvm.xcore.settw
llvm.xcore.setv
llvm.xcore.sext
llvm.xcore.ssync
llvm.xcore.syncr
llvm.xcore.testct
llvm.xcore.testwct
llvm.xcore.waitevent
llvm.xcore.zext
__nvvm_h2f
__nvvm_
bs_i
lz_i
ad_i
vvm_
bs_ll
z_ll
opc_i
d_ui
rt_f
yncthreads
uiltin_trap
ar0_or
oor_
x_ull
n_ull
opc_ll
ound_
runc_
dd_r
ar0_and
ull_r
ohi_i2d
4_ui
cp_r
ar0_popc
mbar_gl
lhi_ull
rt_r
eil_ftz_f
2f_r
_ftz
_rn_ftz
bs_ftz_f
x_ftz_f
n_ftz_f
embar_
otate_b
turate_
q_height
xq_height
itcast_
oor_ftz_f
ound_ftz_f
runc_ftz_f
uiltin_debugtrap
_ftz_f
os_approx_f
pprox_f
x2_approx_
g2_approx_
ul_r
in_approx_f
uiltin_
lt_rounds
tack_save
vvm_sqrt_
a32_vp
bject_size
nwind_init
sspacep_
sqrt_approx_
turate_ftz_f
q_array_size
ap_lo_hi_b64
xq_array_size
a32_v
ar_sync
ead_pm
pacep_
ypep_
xq_num_samples
tx_read_smid
tack_restore
os_approx_ftz_f
iv_approx_ftz_f
x2_approx_ftz_f
g2_approx_ftz_f
p_approx_ftz_d
tate_right_b64
in_approx_ftz_f
tx_read_
rt_approx_ftz_f
_channel_order
d_i8_
d_i8_trap
xq_channel_order
32_v
rczp
mov_256
it_trampoline
tid_
sqrt_approx_ftz_f
ust_
_clamp
6_trap
2_trap
uiltin_ptx_read_
aid_
ead_ptx_sreg_tid_
6_clamp
2_clamp
4_clamp
i8_trap
djust_trampoline
tx_read_nctaid_
ead_ptx_sreg_ntid_
uiltin_ia32_vpermil2p
ead_ptx_sreg_
taid_
_channel_data_type
t_b_
hannel_data_type
um_mipmap_levels
__nvvm_read_ptx_sreg_
ctaid_
uiltin_ptx_read_lanemask_
vvm_sust_
d_array_i8_
d_array_i8_trap
__nvvm_sust_
d_array_i
d_array_
d_array_v
__nvvm_sust_b_
AMDGPU
__builtin_amdgpu_r
__builtin_amdgpu_ldexp
__builtin_amdgpu_div_fmas
__builtin_amdgpu_div_
ixup
cale
__builtin_amdgpu_trig_preop
__builtin_amdgpu_rsq_clamped
__builtin_arm_
__builtin_arm_mcrr2
et_fpscr
__builtin_thread_pointer
hexagon
__builtin_circ_ldd
__builtin_HEXAGON_
2_or
_orn
_lsli
__builtin_
EXAGON_
_andnp
_or_or
r_or
2_brevp
I_to_SXTHI_asrh
_cmp
nd_or
or_or
r_ori
r_andn
pyu_up
or_and
r_andi
und_r
_vaddhubs
_bitsclri
nd_andn
a_sc
acs_s
ysu_up
c_s0
y_s0
or_xacc
lrbit_
_r_v
tbit_
stbit_
r_andix
ddb_map
ubb_map
ound_r
_pxfer_map
_nbitsclri
onv_
_lib
csc_s
acsc_s
p_s1
cs_s
ys_s
c2s_s
y2s_s
_whc
mpyw_acc
nsert_rp
tstbit_
_popcountp
2_combine_
2_conv_
mpyrsc_s
s_s0
u_s0
_rs1
s_rs
mpyrs_s
_add
mpyh_acc
ertp_rp
xtract_rp
sl_ri
sr_ri
_asrhub_sat
ddh_
ubh_
ddub_acc
adub_acc
cmpbeq_any
4_fastcorner9
yud_
_s0c
dasl_rrri
xtractu_rp
ogglebit_
xtractp_rp
ubi_
4_round_r
_sat
2_vrcmpys_s1rp
sl_i_
_xacc
xtractup_rp
sr_i_
p_s1_sat
mpy2s_s
c_up_s1_sat
yri_addr_u2
ac_up_s1_sat
_vsat
b_nopack
h_nopack
_vrcrotate_acc
_chop
cc_s0
ac_s0
nd_s0
c_s0_sat_
_sat_
cmpys_acc_s1
_vrmpy
h_acc_s
_svw_trun
ub_nopack
uh_nopack
16_sat_
4_fastcorner9_not
2_mpyud_
__builtin_HEXAGON_M2_mpy_
cc_sat_
ac_sat_
at_rnd_
__builtin_HEXAGON_S5_vasrhrnd_goodsyntax
__builtin_HEXAGON_S2_tableidx
_goodsyntax
__builtin_HEXAGON_S2_asr_i_
_rnd_goodsyntax
__builtin_HEXAGON_S5_asrhub_rnd_sat_goodsyntax
mips
__builtin_m
ps_l
nd_v
or_v
ri_b
hilo
di_b
ve_v
cnt_
shf_
ori_b
ppend
l_ph
lri_
nzi_b
egi_
og2_
int_
sve_
ubv_
l_q_
lat_
bvi_
epl_
otp_
lass_
x_a_
n_a_
sqrt_
nsert_
d_q_
ub_q_
lr_q_
lati_
sq_s_w
h_qb
posge32
_w_ph
xtr_
s_ph
_s_w
l_s_w
a_r_w
ddr_q_
ubr_q_
sq_s_
_r_w
q_ph
x_w_ph
xtr_rs_w
ulq_
ackrl_ph
l_s_ph
a_r_
trunc_
ubsu
__builtin_mips_
h_r_ph
h_r_qb
mpu_
q_qb
u_h_qb
_rs_ph
a_w_ph
addu_w_qb
mpgu_
w_ph
_l_w
aq_s_w_ph
qb_ph
_ph_w
mpgdu_
qx_s_w_ph
aq_sa_w_ph
q_w_ph
q_qb_ph
qx_sa_w_ph
q_s_w_ph
receu_ph_qb
uleu_s_ph_qb
u_ph_qb
_ph_qb
sra_ph_w
_rs_ph_w
__builtin_mips_prec
qu_ph_qb
qu_s_qb_ph
__builtin_mips_precr_sra_r_ph_w
__builtin_altivec_
__builtin_altivec_v
l_4si
mpbfp_p
erm_4si
fp_p
r600
__builtin_r600_read_tgid_
__builtin_r600_read_tidig_
__builtin_r600_read_ngroups_
__builtin_r600_read_local_size_
__builtin_r600_read_global_size_
__builtin_ia32_por
__builtin_ia32_
xtrq
orhi
ddqu
xtrqi
ndhi
othi
vntq
endp
flush
mineq
pps256
nsertq
ndnhi
norhi
itor
ignr
gusb
ddsw
ubsw
ddwd
ddsubp
misd
unpckhi
ddqu256
kmovq
tdqa
lhrsw
cpps256
a1msg
comineq
eroall
ec128
nc128
mc128
extr_u
misdneq
ather
askload
rmti256
dubsw
comisd
xtri_u
642s
oadp
ovdqu
sadbw
ddus
lend
ldqi
estm
sbase
dscales
undp
qrtps256
orelv4si
comisdneq
estnzcp
eroupper
q256
s256
d256
atherpf
nsertps128
skstorep
qu256
2dq256
xtractps128
iv8d
mulqdq128
rmvars
addubsw
_mask
catterpf
2ps256
2ph256
xt_v4hi
et_v4hi
ermilvarp
eclast128
nclast128
512_mask
v16s
iv16s
nsert128i256
minposuw128
catter
testnzcp
xtract128i256
askstorep
roadcast
ldq512_mask
atter
ubaddp
oadup
mpeq
uludq512_mask
p14p
dscalep
roadcasts
lendm
_512_mask
q512_mask
s512_mask
2dq512_mask
toreup
erm2f128_
i256
lendmp
2udq512_mask
oaddqu
i512_mask
sqrt14p
2ps512_mask
2ph512_mask
nsertf128_
eskeygenassist128
vttp
toredqu
xtractf128_
__builtin_ia32_v
ermt2var
28_byteshift
56_byteshift
12_byteshift
roadcastf128_p
ermt2varp
__builtin_ia32_vpconflict
i_512_mask
__builtin_ia32_pbroadcast
512_gpr_mask
512_
pr_mask
em_mask
xcore
etps
__builtin_bitrev
_MoveToCoprocessor
_MoveToCoprocessor2
_MoveFromCoprocessor
_MoveFromCoprocessor2
GCOV versions do not match.
File checksums do not match: 
Unexpected number of functions.
 in (
Block tag not found.
Unexpected block number: 
 (in 
Multiple sources for a single basic block: 
Function identifiers do not match: 
Function checksums do not match: 
Function names do not match: 
Arc tag not found (in 
Unexpected number of edges (in 
===== 
) @ 
Block : 
 Counter : 
Source Edges : 
Destination Edges : 
Lines : 
.gcov
        -:    0:Source:
        -:    0:Graph:
        -:    0:Data:
        -:    0:Runs:
        -:    0:Programs:
        -:
    #####:
%9llu:
function 
 called 
 returned 
% blocks executed 
    $$$$$:
%5u-block %2u
branch %2u 
unconditional %2u 
Lines executed:%.2f%% of %u
Branches executed:%.2f%% of %u
Taken at least once:%.2f%% of %u
No branches
No calls
:creating '
Unexpected file type: 
*204
*404
Unexpected version: 
Unexpected end of memory buffer: 
adcg
/*EOF*/
%5u:
never executed
taken 
Print module to stderr
print-module
Print function to stderr
print-function
Print BB to stderr
print-bb
<Invalid operator> 
both values to select must have same type
vector select condition element type must be i1
selected values for vector select must be vectors
vector select requires selected vectors to have the same vector length as select condition
select condition must be i1 or <n x i1>
mallocsize
malloccall
prof
fpmath
range
tbaa.struct
alias.scope
error: 
warning: 
remark: 
note: 
GENERIC
LLVM
This is probably because you removed an object, but didn't 
delete it.  Please check your code for memory leaks.
Leaked 
 objects found: 
debug-pass
Print PassManager debugging information
disable debug output
Arguments
print pass arguments to pass to 'opt'
Structure
print pass structure before run()
Executions
print pass name before it is executed
Details
print pass details when it is executed
print-before
Print IR before specified passes
print-after
Print IR after specified passes
print-before-all
Print IR before each pass
print-after-all
Print IR after each pass
Releasing pass '
Running pass '
 on module '
 on 
basic block
value
Pass '
' is not initialized.
Verify if there is a pass dependency cycle.
Required Passes:
Error: Required pass not found! Possible causes:
- Pass misconfiguration (e.g.: missing macros)
- Corruption of the global PassRegistry
*** IR Dump Before 
 ***
*** IR Dump After 
Pass Arguments: 
 -- '
' is not preserving '
 -*- '
' is the last user of following pass instances.
 Free these instances
Executing Pass '
Made Modification '
 Freeing Pass '
' on BasicBlock '
'...
' on Function '
' on Module '
' on Region '
' on Loop '
' on Call Graph Nodes '
Required
Preserved
 Analyses:
 Uninitialized Pass
Error reading bitcode file: 
FunctionPass Manager
time-passes
Time each pass, printing elapsed time for each on exit
Module Pass Manager
ModulePass Manager
... Pass execution timing report ...
BasicBlock Pass Manager
BasicBlockPass Manager
Function Pass Manager
__unnamed_
llvm.module.flags
Dwarf Version
Unnamed pass: implement Pass::getPassName()
Pass::print not implemented for pass: '
Two passes with the same argument (-
) attempted to be registered!
debug-pass-manager
Print pass management debugging information
Starting module pass manager run.
Running module pass: 
Finished module pass manager run.
Starting function pass manager run.
Running function pass: 
Finished function pass manager run.
preserve-bc-use-list-order
Experimental support to preserve bitcode use-list order.
preserve-ll-use-list-order
Experimental support to preserve assembly use-list order.
ppcf128
isVoid
x86mmx
v16i1
v32i1
v64i1
v16i8
v32i8
v64i8
v1i16
v2i16
v4i16
v8i16
v16i16
v32i16
v1i32
v2i32
v4i32
v8i32
v16i32
v1i64
v2i64
v4i64
v8i64
v16i64
v1f32
v2f32
v2f16
v4f16
v8f16
v4f32
v8f32
v16f32
v1f64
v2f64
v4f64
v8f64
Untyped
verify-debug-info
' does not contain an entry block!
Basic Block in function '
' does not have terminator!
Function context does not match Module context!
Functions may not have common linkage
# formal arguments must match # of arguments for function type!
Functions cannot return aggregate values!
Invalid struct return type!
Attribute after last parameter!
Attribute 'builtin' can only be applied to a callsite.
Varargs functions must have C calling conventions!
Argument value does not match function argument type!
Function arguments must have first-class types!
Function takes metadata but isn't an intrinsic
invalid linkage type for function declaration
llvm intrinsics cannot be defined!
Entry block to function must not have predecessors!
blockaddress may not be used with the entry block!
Invalid user of intrinsic instruction!
Function is marked as dllimport, but not external.
More than one parameter has attribute nest!
More than one parameter has attribute returned!
Incompatible argument and return types for 'returned' attribute
Cannot have multiple 'sret' parameters!
Attribute 'sret' is not on first or second parameter!
inalloca isn't on the last parameter!
Attributes 'readnone and readonly' are incompatible!
Attributes 'noinline and alwaysinline' are incompatible!
Attribute 'optnone' requires 'noinline'!
Attributes 'optsize and optnone' are incompatible!
Attributes 'minsize and optnone' are incompatible!
Attribute 'jumptable' requires 'unnamed_addr'
Attributes 'byval', 'inalloca', 'nest', 'sret', 'nocapture', and 'returned' do not apply to return values!
Attributes 'byval', 'inalloca', 'inreg', 'nest', and 'sret' are incompatible!
Attributes 'inalloca and readonly' are incompatible!
Attributes 'sret and returned' are incompatible!
Attributes 'zeroext and signext' are incompatible!
Wrong types for attribute: 
Attributes 'byval' and 'inalloca' do not support unsized types!
Attribute 'byval' only applies to parameters with pointer type!
Attribute '
' only applies to functions!
' does not apply to function returns
' does not apply to functions!
Basic Block does not have terminator!
PHI nodes must have at least one entry.  If the block is dead, the PHI should be removed!
PHINode should have one entry for each predecessor of its parent basic block!
PHI node has multiple entries for the same basic block with different incoming values!
PHI node entries do not match predecessors!
Operand is null
Found return instr that returns non-void in Function of void return type!
Function return type does not match operand type of return inst!
Terminator found in the middle of a basic block!
Instruction not embedded in basic block!
Only PHI nodes may reference their own value!
Instruction has a name, but provides a void value!
Instruction returns a non-scalar type!
Invalid use of metadata!
Instruction referencing instruction not embedded in a basic block!
Use of instruction is not an instruction!
Instruction has null operand!
Instruction operands must be first-class values!
Cannot take the address of an intrinsic!
Cannot invoke an intrinsinc other than donothing
Referencing function in another module!
Referring to a basic block in another function!
Referring to an argument in another function!
Referencing global in another module!
Cannot take the address of an inline asm!
fpmath requires a floating point result!
fpmath takes one operand!
fpmath accuracy not a positive number!
invalid fpmath accuracy!
Ranges are only for loads, calls and invokes!
Instruction does not dominate all uses!
Bitcast requires both operands to be pointer or neither
Bitcast requires types of same width
Bitcast operand must not be aggregate
Bitcast type must not be aggregate
Bitcasts between pointers of different address spaces is not legal.Use AddrSpaceCast instead.
Branch condition is not 'i1' type!
Switch constants must all be same type as switch value!
Duplicate integer as switch case
Indirectbr operand must have pointer type!
Indirectbr destinations must all have pointer type!
The unwind destination does not have a landingpad instruction!
Called function must be a pointer!
Called function is not pointer to function type!
Called function requires more parameters than were provided!
Incorrect number of arguments passed to called function!
Call parameter type does not match function signature!
inalloca argument for call has mismatched alloca
Attribute 'sret' cannot be used for vararg call arguments!
inalloca isn't on the last argument!
Function has metadata parameter but isn't an intrinsic
Both operands to a binary operator are not of the same type!
Integer arithmetic operators only work with integral types!
Integer arithmetic operators must have same type for operands and result!
Floating-point arithmetic operators only work with floating-point types!
Floating-point arithmetic operators must have same type for operands and result!
Logical operators only work with integral types!
Logical operators must have same type for operands and result!
Shifts only work with integral types!
Shift return type must be same as operands!
Allocation instruction pointer not in the generic address space!
Cannot allocate unsized type
Alloca array size must have integer type
huge alignment values are unsupported
Load operand must be a pointer.
Load result type does not match pointer operand type!
Load cannot have Release ordering
Atomic load must specify explicit alignment
atomic load operand must have integer type!
atomic load operand must be power-of-two byte-sized integer
Non-atomic load cannot have SynchronizationScope specified
Unfinished range!
It should have at least one range!
The lower limit must be an integer!
The upper limit must be an integer!
Range types must match load type!
Range must not be empty!
Intervals are overlapping
Intervals are not in order
Intervals are contiguous
Store operand must be a pointer.
Stored value type does not match pointer operand type!
Store cannot have Acquire ordering
Atomic store must specify explicit alignment
atomic store operand must have integer type!
atomic store operand must be power-of-two byte-sized integer
Non-atomic store cannot have SynchronizationScope specified
GEP base pointer is not a vector or a vector of pointers
GEP into unsized type!
Vector GEP must return a vector value
Invalid indices for GEP pointer type!
GEP is not of right type for indices!
Vector GEP result width doesn't match operand's
Vector GEP must have vector indices!
Invalid GEP index vector width
fence instructions may only have acquire, release, acq_rel, or seq_cst ordering.
cmpxchg instructions must be atomic.
cmpxchg instructions cannot be unordered.
cmpxchg instructions be at least as constrained on success as fail
First cmpxchg operand must be a pointer.
cmpxchg operand must have integer type!
Expected value type does not match pointer operand type!
atomicrmw instructions must be atomic.
atomicrmw instructions cannot be unordered.
First atomicrmw operand must be a pointer.
atomicrmw operand must have integer type!
Argument value type does not match pointer operand type!
Invalid binary operation!
Trunc only operates on integer
Trunc only produces integer
trunc source and destination must both be a vector or neither
DestTy too big for Trunc
ZExt only operates on integer
ZExt only produces an integer
zext source and destination must both be a vector or neither
Type too small for ZExt
SExt only operates on integer
SExt only produces an integer
sext source and destination must both be a vector or neither
Type too small for SExt
FPToUI source and dest must both be vector or scalar
FPToUI source must be FP or FP vector
FPToUI result must be integer or integer vector
FPToUI source and dest vector length mismatch
FPToSI source and dest must both be vector or scalar
FPToSI source must be FP or FP vector
FPToSI result must be integer or integer vector
FPToSI source and dest vector length mismatch
UIToFP source and dest must both be vector or scalar
UIToFP source must be integer or integer vector
UIToFP result must be FP or FP vector
UIToFP source and dest vector length mismatch
SIToFP source and dest must both be vector or scalar
SIToFP source must be integer or integer vector
SIToFP result must be FP or FP vector
SIToFP source and dest vector length mismatch
FPTrunc only operates on FP
FPTrunc only produces an FP
fptrunc source and destination must both be a vector or neither
DestTy too big for FPTrunc
FPExt only operates on FP
FPExt only produces an FP
fpext source and destination must both be a vector or neither
DestTy too small for FPExt
PtrToInt source must be pointer
PtrToInt result must be integral
PtrToInt type mismatch
PtrToInt Vector width mismatch
IntToPtr source must be an integral
IntToPtr result must be a pointer
IntToPtr type mismatch
IntToPtr Vector width mismatch
AddrSpaceCast source must be a pointer
AddrSpaceCast result must be a pointer
AddrSpaceCast must be between different address spaces
AddrSpaceCast vector pointer number of elements mismatch
Both operands to ICmp instruction are not of the same type!
Invalid operand types for ICmp instruction
Invalid predicate in ICmp instruction!
Both operands to FCmp instruction are not of the same type!
Invalid operand types for FCmp instruction
Invalid predicate in FCmp instruction!
PHI nodes not grouped at top of basic block!
PHI node operands are not the same type as the result!
cannot use musttail call with inline asm
cannot guarantee tail call due to mismatched parameter counts
cannot guarantee tail call due to mismatched varargs
cannot guarantee tail call due to mismatched return types
cannot guarantee tail call due to mismatched parameter types
cannot guarantee tail call due to mismatched calling conv
cannot guarantee tail call due to mismatched ABI impacting function attributes
bitcast following musttail call must use the call
musttail call must be precede a ret with an optional bitcast
musttail call result must be returned
Intrinsic functions should never be defined!
Intrinsic has incorrect return type!
Intrinsic has incorrect argument type!
Intrinsic was not defined with variable arguments!
Callsite was not defined with variable arguments!
Intrinsic name not mangled correctly for type arguments! Should be: 
is_zero_undef argument of bit counting intrinsics must be a constant int
invalid llvm.dbg.declare intrinsic call 1
invalid llvm.dbg.declare intrinsic call 2
alignment argument of memory intrinsics must be a constant int
isvolatile argument of memory intrinsics must be a constant int
llvm.gcroot parameter #1 must be an alloca.
llvm.gcroot parameter #2 must be a constant.
llvm.gcroot parameter #1 must either be a pointer alloca, or argument #2 must be a non-null constant.
Enclosing function does not use GC.
llvm.init_trampoline parameter #2 must resolve to a function.
invalid arguments to llvm.prefetch
llvm.stackprotector parameter #2 must resolve to an alloca.
size argument of memory use markers must be a constant integer
llvm.invariant.end parameter #2 must be a constant integer
Global metadata operand cannot be function local!
Invalid operand for global metadata!
function-local metadata used in wrong function
Invalid operands for select instruction!
Select values must have same type as select instruction!
User-defined operators should not live outside of a pass!
Invalid extractelement operands!
Invalid insertelement operands!
Invalid shufflevector operands!
Invalid ExtractValueInst operands!
Invalid InsertValueInst operands!
LandingPadInst needs at least one clause or to be a cleanup.
Block containing LandingPadInst must be jumped to only by the unwind edge of an invoke.
LandingPadInst not the first non-PHI instruction in the block.
Personality function doesn't match others in function
Personality function is not constant!
Catch operand does not have pointer type!
Filter operand is not an array of constants!
Global is external, but doesn't have external or weak linkage!
Only global variables can have appending linkage!
Only global arrays can have appending linkage!
Global variable initializer type does not match global variable type!
'common' global must have a zero initializer!
'common' global may not be marked constant!
'common' global may not be in a Comdat!
invalid linkage type for global declaration
invalid linkage for intrinsic global variable
wrong type for intrinsic global variable
wrong initalizer for intrinsic global variable
invalid llvm.used member
members of llvm.used must be named
Global is marked as dllimport, but not external
Alias name cannot be empty!
Alias should have private, internal, linkonce, weak, linkonce_odr, weak_odr, or external linkage!
Aliasee cannot be NULL!
Alias and aliasee types should match!
Aliasee should be either GlobalValue or ConstantExpr
Alias must point to a definition
Aliases cannot form a cycle
Alias cannot point to a weak alias
Named metadata operand cannot be function local!
comdat selection kind requires a global value with the same name
comdat global value has private linkage
invalid requirement on flag, flag is not present in module
invalid requirement on flag, flag does not have the required value
incorrect number of operands in module flag
invalid behavior operand in module flag (expected constant integer)
invalid ID operand in module flag (expected metadata string)
invalid behavior operand in module flag (unexpected constant)
invalid value for 'require' module flag (expected metadata pair)
invalid value for 'require' module flag (first value operand should be a string)
invalid value for 'append'-type module flag (expected a metadata node)
module flag identifiers must be unique (or of 'require' type)
incorrect number of operands in llvm.ident metadata
invalid value for llvm.ident metadata entry operand(the operand should be a string)
DICompileUnit does not Verify!
DISubprogram does not Verify!
DIGlobalVariable does not Verify!
DIType does not Verify!
DIScope does not Verify!
Module Verifier
verify
Debug Info Verifier
verify-di
Broken debug info found, compilation aborted!
INFINITY
-inf
-INFINITY
-nan
-NaN
0123456789ABCDEF0
0123456789abcdef0
0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ
APInt(
Tag_
Tag_File
Tag_Section
Tag_Symbol
Tag_CPU_raw_name
Tag_CPU_name
Tag_CPU_arch
Tag_CPU_arch_profile
Tag_ARM_ISA_use
Tag_THUMB_ISA_use
Tag_FP_arch
Tag_WMMX_arch
Tag_Advanced_SIMD_arch
Tag_PCS_config
Tag_ABI_PCS_R9_use
Tag_ABI_PCS_RW_data
Tag_ABI_PCS_RO_data
Tag_ABI_PCS_GOT_use
Tag_ABI_PCS_wchar_t
Tag_ABI_FP_rounding
Tag_ABI_FP_denormal
Tag_ABI_FP_exceptions
Tag_ABI_FP_user_exceptions
Tag_ABI_FP_number_model
Tag_ABI_align_needed
Tag_ABI_align_preserved
Tag_ABI_enum_size
Tag_ABI_HardFP_use
Tag_ABI_VFP_args
Tag_ABI_WMMX_args
Tag_ABI_optimization_goals
Tag_ABI_FP_optimization_goals
Tag_compatibility
Tag_CPU_unaligned_access
Tag_FP_HP_extension
Tag_ABI_FP_16bit_format
Tag_MPextension_use
Tag_DIV_use
Tag_nodefaults
Tag_also_compatible_with
Tag_T2EE_use
Tag_conformance
Tag_Virtualization_use
Tag_VFP_arch
Tag_VFP_HP_extension
Tag_ABI_align8_needed
Tag_ABI_align8_preserved
Number of memory regions: 
Bytes used: 
Bytes allocated: 
Bytes wasted: 
 (includes alignment, etc)
Recycler element size: 
Recycler element alignment: 
Number of elements free for recycling: 
%g%%
General options
error - this positional option will never be matched, because it does not Require a value, and a cl::ConsumeAfter option is active!
error - option can never match, because another positional argument will match an unbounded number of values, and this option does not require a value!
: Unknown command line argument '
'.  Try: '
 -help'
: Did you mean '-
: Not enough positional command line arguments specified!
Must specify at least 
 positional arguments: See: 
 -help
: Too many positional arguments specified!
Can specify at most 
must be specified at least once!
: for the -
 option: 
may only occur zero or one times!
must occur exactly one time!
' is invalid value for boolean argument! Try 0 or 1
' value invalid for integer argument!
' value invalid for uint argument!
    =
 -   
    -
 (default: 
= *unknown option value*
*no default*
= *cannot print option value*
help-list
Display list of available options (-help-list-hidden for more)
help-list-hidden
Display list of all available options
Display available options (-help-hidden for more)
help-hidden
Display all available options
print-options
Print non-default options after command line parsing
print-all-options
Print all option values after command line parsing
version
Display the version of this program
\"' 
: CommandLine Error: Option '
' registered more than once!
Cannot specify more than one option with cl::ConsumeAfter!
inconsistency in registered CommandLine options
requires a value!
multi-valued option specified with ValueDisallowed modifier!
does not allow a value! '
' specified.
not enough values!
' value invalid for floating point argument!
  This option category has no options.
 [options]
OPTIONS:
LLVM (http://llvm.org/):
 version 
3.6.0svn
Optimized build
  Built 
Sep  3 2022
11:36:37
  Default target: 
  Host CPU: 
uint
number
string
Could not open 
DW_TAG_array_type
DW_TAG_class_type
DW_TAG_entry_point
DW_TAG_enumeration_type
DW_TAG_formal_parameter
DW_TAG_imported_declaration
DW_TAG_label
DW_TAG_lexical_block
DW_TAG_member
DW_TAG_pointer_type
DW_TAG_reference_type
DW_TAG_compile_unit
DW_TAG_string_type
DW_TAG_structure_type
DW_TAG_subroutine_type
DW_TAG_typedef
DW_TAG_union_type
DW_TAG_unspecified_parameters
DW_TAG_variant
DW_TAG_common_block
DW_TAG_common_inclusion
DW_TAG_inheritance
DW_TAG_inlined_subroutine
DW_TAG_module
DW_TAG_ptr_to_member_type
DW_TAG_set_type
DW_TAG_subrange_type
DW_TAG_with_stmt
DW_TAG_access_declaration
DW_TAG_base_type
DW_TAG_catch_block
DW_TAG_const_type
DW_TAG_constant
DW_TAG_enumerator
DW_TAG_file_type
DW_TAG_friend
DW_TAG_namelist
DW_TAG_namelist_item
DW_TAG_packed_type
DW_TAG_subprogram
DW_TAG_template_type_parameter
DW_TAG_template_value_parameter
DW_TAG_thrown_type
DW_TAG_try_block
DW_TAG_variant_part
DW_TAG_variable
DW_TAG_volatile_type
DW_TAG_dwarf_procedure
DW_TAG_restrict_type
DW_TAG_interface_type
DW_TAG_namespace
DW_TAG_imported_module
DW_TAG_unspecified_type
DW_TAG_partial_unit
DW_TAG_imported_unit
DW_TAG_condition
DW_TAG_shared_type
DW_TAG_lo_user
DW_TAG_hi_user
DW_TAG_auto_variable
DW_TAG_arg_variable
DW_TAG_rvalue_reference_type
DW_TAG_template_alias
DW_TAG_coarray_type
DW_TAG_generic_subrange
DW_TAG_dynamic_type
DW_TAG_MIPS_loop
DW_TAG_type_unit
DW_TAG_format_label
DW_TAG_function_template
DW_TAG_class_template
DW_TAG_GNU_template_template_param
DW_TAG_GNU_template_parameter_pack
DW_TAG_GNU_formal_parameter_pack
DW_TAG_APPLE_property
DW_CHILDREN_no
DW_CHILDREN_yes
DW_AT_sibling
DW_AT_location
DW_AT_name
DW_AT_ordering
DW_AT_byte_size
DW_AT_bit_offset
DW_AT_bit_size
DW_AT_stmt_list
DW_AT_low_pc
DW_AT_high_pc
DW_AT_language
DW_AT_discr
DW_AT_discr_value
DW_AT_visibility
DW_AT_import
DW_AT_string_length
DW_AT_common_reference
DW_AT_comp_dir
DW_AT_const_value
DW_AT_containing_type
DW_AT_default_value
DW_AT_inline
DW_AT_is_optional
DW_AT_lower_bound
DW_AT_producer
DW_AT_prototyped
DW_AT_return_addr
DW_AT_start_scope
DW_AT_bit_stride
DW_AT_upper_bound
DW_AT_abstract_origin
DW_AT_accessibility
DW_AT_address_class
DW_AT_artificial
DW_AT_base_types
DW_AT_calling_convention
DW_AT_count
DW_AT_data_member_location
DW_AT_decl_column
DW_AT_decl_file
DW_AT_decl_line
DW_AT_declaration
DW_AT_discr_list
DW_AT_encoding
DW_AT_external
DW_AT_frame_base
DW_AT_friend
DW_AT_identifier_case
DW_AT_macro_info
DW_AT_namelist_item
DW_AT_priority
DW_AT_segment
DW_AT_specification
DW_AT_static_link
DW_AT_type
DW_AT_use_location
DW_AT_variable_parameter
DW_AT_virtuality
DW_AT_vtable_elem_location
DW_AT_allocated
DW_AT_associated
DW_AT_data_location
DW_AT_byte_stride
DW_AT_entry_pc
DW_AT_use_UTF8
DW_AT_extension
DW_AT_ranges
DW_AT_trampoline
DW_AT_call_column
DW_AT_call_file
DW_AT_call_line
DW_AT_description
DW_AT_binary_scale
DW_AT_decimal_scale
DW_AT_small
DW_AT_decimal_sign
DW_AT_digit_count
DW_AT_picture_string
DW_AT_mutable
DW_AT_threads_scaled
DW_AT_explicit
DW_AT_object_pointer
DW_AT_endianity
DW_AT_elemental
DW_AT_pure
DW_AT_recursive
DW_AT_signature
DW_AT_main_subprogram
DW_AT_data_bit_offset
DW_AT_const_expr
DW_AT_enum_class
DW_AT_linkage_name
DW_AT_string_length_bit_size
DW_AT_string_length_byte_size
DW_AT_rank
DW_AT_str_offsets_base
DW_AT_addr_base
DW_AT_ranges_base
DW_AT_dwo_id
DW_AT_dwo_name
DW_AT_reference
DW_AT_rvalue_reference
DW_AT_MIPS_loop_begin
DW_AT_MIPS_tail_loop_begin
DW_AT_MIPS_epilog_begin
DW_AT_MIPS_loop_unroll_factor
DW_AT_MIPS_software_pipeline_depth
DW_AT_MIPS_linkage_name
DW_AT_MIPS_stride
DW_AT_MIPS_abstract_name
DW_AT_MIPS_clone_origin
DW_AT_MIPS_has_inlines
DW_AT_MIPS_stride_byte
DW_AT_MIPS_stride_elem
DW_AT_MIPS_ptr_dopetype
DW_AT_MIPS_allocatable_dopetype
DW_AT_MIPS_assumed_shape_dopetype
DW_AT_sf_names
DW_AT_src_info
DW_AT_mac_info
DW_AT_src_coords
DW_AT_body_begin
DW_AT_body_end
DW_AT_GNU_vector
DW_AT_GNU_template_name
DW_AT_GNU_odr_signature
DW_AT_MIPS_assumed_size
DW_AT_lo_user
DW_AT_hi_user
DW_AT_APPLE_optimized
DW_AT_APPLE_flags
DW_AT_APPLE_isa
DW_AT_APPLE_block
DW_AT_APPLE_major_runtime_vers
DW_AT_APPLE_runtime_class
DW_AT_APPLE_omit_frame_ptr
DW_AT_APPLE_property_name
DW_AT_APPLE_property_getter
DW_AT_APPLE_property_setter
DW_AT_APPLE_property_attribute
DW_AT_APPLE_property
DW_AT_APPLE_objc_complete_type
DW_AT_GNU_dwo_name
DW_AT_GNU_dwo_id
DW_AT_GNU_ranges_base
DW_AT_GNU_addr_base
DW_AT_GNU_pubnames
DW_AT_GNU_pubtypes
DW_FORM_addr
DW_FORM_block2
DW_FORM_block4
DW_FORM_data2
DW_FORM_data4
DW_FORM_data8
DW_FORM_string
DW_FORM_block
DW_FORM_block1
DW_FORM_data1
DW_FORM_flag
DW_FORM_sdata
DW_FORM_strp
DW_FORM_udata
DW_FORM_ref_addr
DW_FORM_ref1
DW_FORM_ref2
DW_FORM_ref4
DW_FORM_ref8
DW_FORM_ref_udata
DW_FORM_indirect
DW_FORM_sec_offset
DW_FORM_exprloc
DW_FORM_flag_present
DW_FORM_ref_sig8
DW_FORM_GNU_addr_index
DW_FORM_GNU_str_index
DW_OP_addr
DW_OP_const1u
DW_OP_const1s
DW_OP_const2u
DW_OP_const2s
DW_OP_const4u
DW_OP_const4s
DW_OP_const8u
DW_OP_const8s
DW_OP_dup
DW_OP_drop
DW_OP_over
DW_OP_pick
DW_OP_swap
DW_OP_rot
DW_OP_xderef
DW_OP_abs
DW_OP_and
DW_OP_div
DW_OP_minus
DW_OP_mod
DW_OP_mul
DW_OP_neg
DW_OP_not
DW_OP_or
DW_OP_plus
DW_OP_shl
DW_OP_shra
DW_OP_xor
DW_OP_skip
DW_OP_bra
DW_OP_eq
DW_OP_ge
DW_OP_gt
DW_OP_le
DW_OP_lt
DW_OP_ne
DW_OP_lit0
DW_OP_lit1
DW_OP_lit2
DW_OP_lit3
DW_OP_lit4
DW_OP_lit5
DW_OP_lit6
DW_OP_lit7
DW_OP_lit8
DW_OP_lit9
DW_OP_lit10
DW_OP_lit11
DW_OP_lit12
DW_OP_lit13
DW_OP_lit14
DW_OP_lit15
DW_OP_lit16
DW_OP_lit17
DW_OP_lit18
DW_OP_lit19
DW_OP_lit20
DW_OP_lit21
DW_OP_lit22
DW_OP_lit23
DW_OP_lit24
DW_OP_lit25
DW_OP_lit26
DW_OP_lit27
DW_OP_lit28
DW_OP_lit29
DW_OP_lit30
DW_OP_lit31
DW_OP_reg0
DW_OP_reg1
DW_OP_reg2
DW_OP_reg3
DW_OP_reg4
DW_OP_reg5
DW_OP_reg6
DW_OP_reg7
DW_OP_reg8
DW_OP_reg9
DW_OP_reg10
DW_OP_reg11
DW_OP_reg12
DW_OP_reg13
DW_OP_reg14
DW_OP_reg15
DW_OP_reg16
DW_OP_reg17
DW_OP_reg18
DW_OP_reg19
DW_OP_reg20
DW_OP_reg21
DW_OP_reg22
DW_OP_reg23
DW_OP_reg24
DW_OP_reg25
DW_OP_reg26
DW_OP_reg27
DW_OP_reg28
DW_OP_reg29
DW_OP_reg30
DW_OP_reg31
DW_OP_breg0
DW_OP_breg1
DW_OP_breg2
DW_OP_breg3
DW_OP_breg4
DW_OP_breg5
DW_OP_breg6
DW_OP_breg7
DW_OP_breg8
DW_OP_breg9
DW_OP_breg10
DW_OP_breg11
DW_OP_breg12
DW_OP_breg13
DW_OP_breg14
DW_OP_breg15
DW_OP_breg16
DW_OP_breg17
DW_OP_breg18
DW_OP_breg19
DW_OP_breg20
DW_OP_breg21
DW_OP_breg22
DW_OP_breg23
DW_OP_breg24
DW_OP_breg25
DW_OP_breg26
DW_OP_breg27
DW_OP_breg28
DW_OP_breg29
DW_OP_breg30
DW_OP_breg31
DW_OP_fbreg
DW_OP_deref_size
DW_OP_xderef_size
DW_OP_nop
DW_OP_push_object_address
DW_OP_call2
DW_OP_call4
DW_OP_call_ref
DW_OP_form_tls_address
DW_OP_call_frame_cfa
DW_OP_implicit_value
DW_OP_stack_value
DW_OP_GNU_push_tls_address
DW_OP_GNU_addr_index
DW_OP_GNU_const_index
DW_ATE_address
DW_ATE_boolean
DW_ATE_complex_float
DW_ATE_float
DW_ATE_signed
DW_ATE_signed_char
DW_ATE_unsigned
DW_ATE_unsigned_char
DW_ATE_imaginary_float
DW_ATE_UTF
DW_ATE_packed_decimal
DW_ATE_numeric_string
DW_ATE_edited
DW_ATE_signed_fixed
DW_ATE_unsigned_fixed
DW_ATE_decimal_float
DW_ATE_lo_user
DW_ATE_hi_user
DW_DS_unsigned
DW_DS_leading_overpunch
DW_DS_trailing_overpunch
DW_DS_leading_separate
DW_DS_trailing_separate
DW_END_default
DW_END_big
DW_END_little
DW_END_lo_user
DW_END_hi_user
DW_ACCESS_public
DW_ACCESS_protected
DW_ACCESS_private
DW_VIS_local
DW_VIS_exported
DW_VIS_qualified
DW_VIRTUALITY_none
DW_VIRTUALITY_virtual
DW_VIRTUALITY_pure_virtual
DW_LANG_C89
DW_LANG_C
DW_LANG_Ada83
DW_LANG_C_plus_plus
DW_LANG_Cobol74
DW_LANG_Cobol85
DW_LANG_Fortran77
DW_LANG_Fortran90
DW_LANG_Pascal83
DW_LANG_Modula2
DW_LANG_Java
DW_LANG_C99
DW_LANG_Ada95
DW_LANG_Fortran95
DW_LANG_PLI
DW_LANG_ObjC
DW_LANG_ObjC_plus_plus
DW_LANG_UPC
DW_LANG_D
DW_LANG_Python
DW_LANG_OpenCL
DW_LANG_Go
DW_LANG_Modula3
DW_LANG_Haskell
DW_LANG_C_plus_plus_03
DW_LANG_C_plus_plus_11
DW_LANG_OCaml
DW_LANG_lo_user
DW_LANG_Swift
DW_LANG_hi_user
DW_ID_case_sensitive
DW_ID_up_case
DW_ID_down_case
DW_ID_case_insensitive
DW_CC_normal
DW_CC_program
DW_CC_nocall
DW_CC_lo_user
DW_CC_hi_user
DW_INL_not_inlined
DW_INL_inlined
DW_INL_declared_not_inlined
DW_INL_declared_inlined
DW_ORD_row_major
DW_ORD_col_major
DW_DSC_label
DW_DSC_range
DW_LNS_copy
DW_LNS_advance_pc
DW_LNS_advance_line
DW_LNS_set_file
DW_LNS_set_column
DW_LNS_negate_stmt
DW_LNS_set_basic_block
DW_LNS_const_add_pc
DW_LNS_fixed_advance_pc
DW_LNS_set_prologue_end
DW_LNS_set_epilogue_begin
DW_LNS_set_isa
DW_LNE_define_file
DW_LNE_set_discriminator
DW_LNE_lo_user
DW_LNE_hi_user
DW_MACINFO_define
DW_MACINFO_undef
DW_MACINFO_start_file
DW_MACINFO_end_file
DW_MACINFO_vendor_ext
DW_CFA_nop
DW_CFA_advance_loc
DW_CFA_offset
DW_CFA_restore
DW_CFA_set_loc
DW_CFA_advance_loc1
DW_CFA_advance_loc2
DW_CFA_advance_loc4
DW_CFA_offset_extended
DW_CFA_restore_extended
DW_CFA_undefined
DW_CFA_same_value
DW_CFA_register
DW_CFA_remember_state
DW_CFA_restore_state
DW_CFA_def_cfa
DW_CFA_def_cfa_register
DW_CFA_def_cfa_offset
DW_CFA_def_cfa_expression
DW_CFA_expression
DW_CFA_offset_extended_sf
DW_CFA_def_cfa_sf
DW_CFA_def_cfa_offset_sf
DW_CFA_val_offset
DW_CFA_val_offset_sf
DW_CFA_val_expression
DW_CFA_MIPS_advance_loc8
DW_CFA_GNU_window_save
DW_CFA_GNU_args_size
DW_CFA_lo_user
DW_CFA_hi_user
DW_ATOM_null
DW_ATOM_die_offset
DW_ATOM_cu_offset
DW_ATOM_die_tag
DW_ATOM_type_flags
VARIABLE
FUNCTION
OTHER
UNUSED5
UNUSED6
UNUSED7
EXTERNAL
STATIC
LLVM ERROR: 
UNREACHABLE executed
 at 
Files differ without tolerance allowance
FP Comparison failed, not a numeric difference between '
' and '
Compared: 
abs. diff = 
 rel.diff = 
Out of tolerance: rel/abs: 
.tmp%%%%%%%
view-background
Execute graph viewer in the background. Creates tmp file litter.
aaaaaa
aa0000
00aa00
aa5500
0055ff
aa00aa
00aaaa
555555
ff5555
55ff55
ffff55
5555ff
ff55ff
55ffff
ffaaaa
aaffaa
ffffaa
aaaaff
ffaaff
aaffff
Error: 
'... 
Graphviz
Running 'Graphviz' program... 
xdot|xdot.py
Running 'xdot.py' program... 
xdg-open
dot|fdp|neato|twopi|circo
-Tps
-Nfontname=Courier
-Gsize=7.5,10
Running '
' program... 
--spartan
dotty
Running 'dotty' program... 
Error: Couldn't find a usable graph viewer program:
  Tried '
Remember to erase graph file: 
neato
twopi
circo
Unknown buffer
%.2x
  -load request ignored.
Program arguments: 
Stack dump:
rng-seed
seed
Seed for the random number generator
replacement string contained trailing backslash
invalid backreference string '
Included from 
Can't open file '
Malformed line 
global-init
init
global-init-type
global-init-src
Malformed regex in line 
stats
Enable statistics output from program (available with Asserts)
                          ... Statistics Collected ...
%*u %-*s - %s
Statistics are disabled.  
Build with asserts or with -DLLVM_ENABLE_STATS
WARNING: You're attempting to print out a bitcode file.
This is inadvisable as it may cause display problems. If
you REALLY want to taste LLVM bitcode first-hand, you
can force output with the `-f' option.
track-memory
Enable -time-passes memory tracking (this may be slow)
info-output-file
File to append -stats and -timer output to
Error opening info-output-file '
 for appending!
%9lld  
  Total Execution Time: %5.4f seconds (%5.4f wall clock)
   ---User Time---
   --System Time--
   --User+System--
   ---Wall Time---
  ---Mem---
  --- Name ---
Total
Miscellaneous Ungrouped Timers
        -----     
  %7.4f (%5.1f%%)
armeb
mipsel
mips64
mips64el
msp430
powerpc64
powerpc64le
powerpc
sparc
sparcv9
s390x
thumb
thumbeb
nvptx
nvptx64
igil32
igil64
air64
amdil64
gpu_32
gpu_64
le32
amdil
spir
spir64
kalimba
systemz
igil
scei
nvidia
darwin
dragonfly
freebsd
kfreebsd
linux
macosx
netbsd
openbsd
solaris
windows
haiku
minix
rtems
nacl
bitrig
cuda
nvcl
gnueabihf
gnueabi
gnux32
code16
eabi
eabihf
android
msvc
itanium
cygnus
ppc32
ppc64le
cygwin
mingw
arm1176jzf-s
cortex-a9
arm2
arm6
arm7m
strongarm
arm7tdmi
arm10tdmi
v5te
arm1022e
v5tej
arm926ej-s
arm1136jf-s
arm1136j-s
v6zk
v6t2
arm1156t2-s
v6-m
v7-a
v7-l
cortex-a8
v7-k
pj4b
v7-s
swift
v7-r
cortex-r4
v7-m
v7em
v7e-m
v8-a
ep9312
iwmmxt
xscale
i786
i886
i986
amd64
armv
armebv
thumbv
thumbebv
mipseb
mipsallegrex
mipsallegrexel
mips64eb
sparc64
win32
coff
macho
empty
rope:
cstring:"
std::string:"
stringref:"
char:"
decUI:"
decI:"
decUL:"
decL:"
decULL:"
decLL:"
uhex:"
(Twine 
Stream-Start: 
Stream-End: 
Version-Directive: 
Tag-Directive: 
Document-Start: 
Document-End: 
Block-Entry: 
Block-End: 
Block-Sequence-Start: 
Block-Mapping-Start: 
Flow-Entry: 
Flow-Sequence-Start: 
Flow-Sequence-End: 
Flow-Mapping-Start: 
Flow-Mapping-End: 
Key: 
Value: 
Scalar: 
Alias: 
Anchor: 
Tag: 
YAML
#;/?:@&=+$,_.!~*'()[]
Not dealing with this yet
Could not find expected : for simple key
Expected quote at end of scalar
Found unexpected ':' while scanning a plain scalar
,:?[]{}
Found invalid tab character in indentation
Got empty plain scalar
Got empty alias or anchor
Got empty block scalar
-?:,[]{}#&*!|>'"%@`
Unrecognized character while tokenizing.
Can only iterate over the stream once
Unknown tag handle 
tag:yaml.org,2002:null
tag:yaml.org,2002:str
tag:yaml.org,2002:map
tag:yaml.org,2002:seq
Unrecognized escape code!
Unexpected token in Key Value.
Unexpected token. Expected Key or Block End
Unexpected token. Expected Key, Flow Entry, or Flow Mapping End.
Unexpected token. Expected Block Entry or Block End.
Could not find closing ]!
Expected , between entries!
tag:yaml.org,2002:
Already encountered an anchor for this node!
Already encountered a tag for this node!
Unexpected token
not a mapping
missing required key '
unknown key '
unknown enumerated scalar
expected sequence of bit values
unexpected scalar in sequence of bit values
unknown bit value
unexpected scalar
Map key must be a scalar
unknown node kind
                
invalid boolean
invalid number
out of range number
invalid floating point number
0x%02X
invalid hex8 number
out of range hex8 number
0x%04X
invalid hex16 number
out of range hex16 number
0x%08X
invalid hex32 number
out of range hex32 number
0x%016llX
invalid hex64 number
Error opening output file '
IO failure on output stream.
[:<:]]
[:>:]]
alnum
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789
alpha
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz
blank
cntrl
digit
graph
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~
lower
abcdefghijklmnopqrstuvwxyz
print
ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~ 
punct
!"#$%&'()*+,-./:;<=>?@[\]^_`{|}~
space
upper
ABCDEFGHIJKLMNOPQRSTUVWXYZ
xdigit
0123456789ABCDEFabcdef
alert
backspace
newline
vertical-tab
form-feed
carriage-return
exclamation-mark
quotation-mark
number-sign
dollar-sign
percent-sign
ampersand
apostrophe
left-parenthesis
right-parenthesis
asterisk
plus-sign
comma
hyphen
hyphen-minus
period
full-stop
slash
solidus
three
four
five
seven
eight
nine
colon
semicolon
less-than-sign
equals-sign
greater-than-sign
question-mark
commercial-at
left-square-bracket
backslash
reverse-solidus
right-square-bracket
circumflex
circumflex-accent
underscore
low-line
grave-accent
left-brace
left-curly-bracket
vertical-line
right-brace
right-curly-bracket
tilde
REG_0x%x
REG_NOMATCH
llvm_regexec() failed to match
REG_BADPAT
invalid regular expression
REG_ECOLLATE
invalid collating element
REG_ECTYPE
invalid character class
REG_EESCAPE
trailing backslash (\)
REG_ESUBREG
invalid backreference number
REG_EBRACK
brackets ([ ]) not balanced
REG_EPAREN
parentheses not balanced
REG_EBRACE
braces not balanced
REG_BADBR
invalid repetition count(s)
REG_ERANGE
invalid character range
REG_ESPACE
out of memory
REG_BADRPT
repetition-operator operand invalid
REG_EMPTY
empty (sub)expression
REG_ASSERT
"can't happen" -- you found a bug
REG_INVARG
invalid argument to regex routine
*** unknown regexp error code ***
x86_64-apple-darwin20.1.0
-darwin
Can't allocate RWX Memory
vm_protect max RX failed
vm_protect RW failed
Can't release RWX Memory
TMPDIR
/tmp
/var/tmp
-%%%%%%
HOME
0123456789abcdef
TEMP
TEMPDIR
/var/tmp/
-%%%%%%.
COLUMNS
PATH
Child timed out but wouldn't die
Child timed out
Error waiting for child process
Program could not be executed
 (core dumped)
Executable "
" doesn't exist!
Can't redirect stderr to stdout
posix_spawn failed
Couldn't fork
/dev/null
Cannot dup2
Cannot open file '
' for 
%-2d
 %-*s
 %#0*lx
 + %u
error: invalid target '
: error: unable to get target for '
', see --version and --triple.
Unable to find target for this triple (no targets are registered)
Cannot choose between targets "
" and "
No available targets are compatible with this triple, see -version for the available targets.
  Registered Targets:
    (none)
%Y-%m-%d %H:%M:%S
%s.%.9u
Bitcode Writer
MetaData
Map Name: 
Size: 
Value: [null]
 Uses(
 [null]
N4llvm2cl3optIbLb1ENS0_6parserIbEEEE
N4llvm2cl11opt_storageIbLb1ELb0EEE
N12_GLOBAL__N_110ObjCARCOptE
N12_GLOBAL__N_113ObjCARCExpandE
N12_GLOBAL__N_113ObjCARCAPElimE
N4llvm7objcarc20ObjCARCAliasAnalysisE
!$'*-0369<?BE
>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
>>>>>>>>>>
>>>>>
,JYgv
N12_GLOBAL__N_115ObjCARCContractE
3N4llvm3opt7ArgListE
N4llvm3opt12InputArgListE
N4llvm3opt14DerivedArgListE
&08BLV`
<Z(E
N4llvm16JITEventListenerE
N4llvm3JITE
ZN4llvm3JIT16runJITOnFunctionEPNS_8FunctionEPNS_15MachineCodeInfoEE11MCIListener
N4llvm18ValueMapCallbackVHIPKNS_10BasicBlockEPvNS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEEE
<Z(E
N12_GLOBAL__N_110JITEmitterE
N4llvm18ValueMapCallbackVHIPNS_8FunctionEPvN12_GLOBAL__N_120NoRAUWValueMapConfigIS2_EEEE
N4llvm18ValueMapCallbackVHIPNS_8FunctionENS_11SmallPtrSetIPvLj1EEEN12_GLOBAL__N_122CallSiteValueMapConfigEEE
N4llvm18ValueMapCallbackVHIPKNS_8FunctionEN12_GLOBAL__N_110JITEmitter11EmittedCodeENS5_21EmittedFunctionConfigEEE
N4llvm16JITMemoryManagerE
N12_GLOBAL__N_123DefaultJITMemoryManagerE
<Z(E
N12_GLOBAL__N_116AddressSanitizerE
N12_GLOBAL__N_122AddressSanitizerModuleE
<Z(E
N12_GLOBAL__N_114BoundsCheckingE
<Z(E
N4llvm2cl15OptionValueCopyINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE
N12_GLOBAL__N_117DataFlowSanitizerE
N4llvm13DominatorTreeE
<Z(E
N4llvm7DebugIRE
N12_GLOBAL__N_114ValueToLineMapE
N4llvm18ValueMapCallbackVHIPKNS_5ValueEjNS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEEE
N4llvm18ValueMapCallbackVHIPKNS_8FunctionEPNS_6MDNodeENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEEE
X]cN12_GLOBAL__N_112GCOVProfilerE
<Z(E
N12_GLOBAL__N_115MemorySanitizerE
N4llvm18ValueMapCallbackVHIPNS_5ValueES2_NS_14ValueMapConfigIS2_NS_3sys10SmartMutexILb0EEEEEEE
N12_GLOBAL__N_117VarArgAMD64HelperE
N12_GLOBAL__N_112VarArgHelperE
N12_GLOBAL__N_116VarArgNoOpHelperE
N4llvm2cl15OptionValueBaseIiLb0EEE
N12_GLOBAL__N_114InstrProfilingE
CCC?CCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCCCCCC"
<Z(E
N12_GLOBAL__N_115ThreadSanitizerE
((((((((
((((((((((((((((((
/7Ry
(          (
((((((((((((((((((((((((((
(((((((((((((((((((((((((((((
fkos
\5E7GIKM9O;=Q?ACSUWY[
||||||*|||||||||||||||||||||||||||***GK|
*O***SW*[****_*****cgk*o***s***w
::::::
:::::::::::::::::::::::::::
13579
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!%')+
-/13579;=
#)09
 "$&(*,.024
 "$&(*,.024
3.02
ELTY]
<Z(E
N12_GLOBAL__N_19TypeMapTyE
N12_GLOBAL__N_119ValueMaterializerTyE
N4llvm18ValueMapCallbackVHIPKNS_5ValueENS_6WeakVHENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEEE
<Z(E
N12_GLOBAL__N_112ArgPromotionE
N12_GLOBAL__N_111BarrierNoopE
N12_GLOBAL__N_113ConstantMergeE
N12_GLOBAL__N_13DAEE
N12_GLOBAL__N_13DAHE
N12_GLOBAL__N_115GVExtractorPassE
N12_GLOBAL__N_113FunctionAttrsE
N12_GLOBAL__N_119ArgumentUsesTrackerE
N12_GLOBAL__N_19GlobalDCEE
<Z(E
 44444444444444
444$
)))))))))))))))))))))
))))))))))))))
) %N12_GLOBAL__N_19GlobalOptE
N12_GLOBAL__N_14IPCPE
N12_GLOBAL__N_113AlwaysInlinerE
N12_GLOBAL__N_113SimpleInlinerE
N4llvm7InlinerE
N4llvm2cl4listINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEbNS0_6parserIS8_EEEE
N4llvm2cl12list_storageINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEbEE
NSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEEE
NSt3__113__vector_baseINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEEE
NSt3__120__vector_base_commonILb1EEE
N12_GLOBAL__N_115InternalizePassE
N12_GLOBAL__N_113LoopExtractorE
N12_GLOBAL__N_119SingleLoopExtractorE
N12_GLOBAL__N_118BlockExtractorPassE
777CMj
<Z(E
N12_GLOBAL__N_114MergeFunctionsE
N4llvm2cl15OptionValueCopyIjEE
N12_GLOBAL__N_114PartialInlinerE
N12_GLOBAL__N_17PruneEHE
N12_GLOBAL__N_123StripDeadPrototypesPassE
N12_GLOBAL__N_112StripSymbolsE
N12_GLOBAL__N_120StripNonDebugSymbolsE
N12_GLOBAL__N_117StripDebugDeclareE
N12_GLOBAL__N_118StripDeadDebugInfoE
<Z(E
Basic-Block Vectorization
N12_GLOBAL__N_111BBVectorizeE
":::::::::'*-::::::::::::::::::::
<Z(E
#)/>DJP
Loop Vectorization
N12_GLOBAL__N_113LoopVectorizeE
N12_GLOBAL__N_117InnerLoopUnrollerE
N12_GLOBAL__N_119InnerLoopVectorizerE
<Z(E
QQQ6kSLP Vectorizer
N12_GLOBAL__N_113SLPVectorizerE
yyyyyy
N4llvm20LinkingMemoryManagerE
N4llvm5MCJITE
N4llvm20SectionMemoryManagerE
N12_GLOBAL__N_115GDBJITRegistrarE
rrrr
rrrVrrrptN4llvm12JITRegistrarE
N4llvm11ObjectImageE
N4llvm17ObjectImageCommonE
N4llvm15RuntimeDyldImplE
GG&G9
jjjjjj
jjjjjjjjjjjjH
D 'DDDDD.DDDDDD
!#%tt0ttttttttttttttt
ttttttttttt9
tGttttttttttt
3DDDDDDDDDDD
^^^^
^^^/^
<#'-<<<<<<62Q
RRRRRRRRRRRRRRRRRRRRRRRRR
RRRRRRRR
S****A*********
*F*******************K*********************P
U,,,,C,,,,,,,,,
,H,,,,,,,,,,,,,,,,,,,M,,,,,,,,,,,,,,,,,,,,,R
U,,,,C,,,,,,,,,
,H,,,,,,,,,,,,,,,,,,,M,,,,,,,,,,,,,,,,,,,,,R
S****A*********
*F*******************K*********************P
S****A*********
*F*******************K*********************P
U,,,,C,,,,,,,,,
,H,,,,,,,,,,,,,,,,,,,M,,,,,,,,,,,,,,,,,,,,,R
U,,,,C,,,,,,,,,
,H,,,,,,,,,,,,,,,,,,,M,,,,,,,,,,,,,,,,,,,,,R
S****A*********
*F*******************K*********************P
N4llvm14RuntimeDyldELFE
N12_GLOBAL__N_113DyldELFObjectIN4llvm6object7ELFTypeILNS1_7support10endiannessE1ELm2ELb0EEEEE
N12_GLOBAL__N_114ELFObjectImageIN4llvm6object7ELFTypeILNS1_7support10endiannessE1ELm2ELb0EEEEE
N12_GLOBAL__N_113DyldELFObjectIN4llvm6object7ELFTypeILNS1_7support10endiannessE0ELm2ELb0EEEEE
N12_GLOBAL__N_114ELFObjectImageIN4llvm6object7ELFTypeILNS1_7support10endiannessE0ELm2ELb0EEEEE
N12_GLOBAL__N_113DyldELFObjectIN4llvm6object7ELFTypeILNS1_7support10endiannessE0ELm2ELb1EEEEE
N12_GLOBAL__N_114ELFObjectImageIN4llvm6object7ELFTypeILNS1_7support10endiannessE0ELm2ELb1EEEEE
N12_GLOBAL__N_113DyldELFObjectIN4llvm6object7ELFTypeILNS1_7support10endiannessE1ELm2ELb1EEEEE
N4llvm6object13ELFObjectFileINS0_7ELFTypeILNS_7support10endiannessE1ELm2ELb1EEEEE
N12_GLOBAL__N_114ELFObjectImageIN4llvm6object7ELFTypeILNS1_7support10endiannessE1ELm2ELb1EEEEE
N12_GLOBAL__N_113DyldELFObjectIN4llvm6object7ELFTypeILNS1_7support10endiannessE1ELm4ELb0EEEEE
N12_GLOBAL__N_114ELFObjectImageIN4llvm6object7ELFTypeILNS1_7support10endiannessE1ELm4ELb0EEEEE
N12_GLOBAL__N_113DyldELFObjectIN4llvm6object7ELFTypeILNS1_7support10endiannessE0ELm4ELb0EEEEE
N4llvm6object13ELFObjectFileINS0_7ELFTypeILNS_7support10endiannessE0ELm4ELb0EEEEE
N12_GLOBAL__N_114ELFObjectImageIN4llvm6object7ELFTypeILNS1_7support10endiannessE0ELm4ELb0EEEEE
N12_GLOBAL__N_113DyldELFObjectIN4llvm6object7ELFTypeILNS1_7support10endiannessE0ELm8ELb1EEEEE
N12_GLOBAL__N_114ELFObjectImageIN4llvm6object7ELFTypeILNS1_7support10endiannessE0ELm8ELb1EEEEE
N12_GLOBAL__N_113DyldELFObjectIN4llvm6object7ELFTypeILNS1_7support10endiannessE1ELm8ELb1EEEEE
N4llvm6object13ELFObjectFileINS0_7ELFTypeILNS_7support10endiannessE1ELm8ELb1EEEEE
N12_GLOBAL__N_114ELFObjectImageIN4llvm6object7ELFTypeILNS1_7support10endiannessE1ELm8ELb1EEEEE
,MT$
N4llvm16RuntimeDyldMachOE
N4llvm14format_object1IPhEE
N4llvm19RuntimeDyldMachOARME
N4llvm24RuntimeDyldMachOCRTPBaseINS_19RuntimeDyldMachOARMEEE
N4llvm23RuntimeDyldMachOAArch64E
N4llvm24RuntimeDyldMachOCRTPBaseINS_23RuntimeDyldMachOAArch64EEE
N4llvm20RuntimeDyldMachOI386E
N4llvm24RuntimeDyldMachOCRTPBaseINS_20RuntimeDyldMachOI386EEE
N4llvm22RuntimeDyldMachOX86_64E
N4llvm24RuntimeDyldMachOCRTPBaseINS_22RuntimeDyldMachOX86_64EEE
<Z(E
)RpN4llvm12ObjectBufferE
N4llvm18ObjectBufferStreamE
N4llvm11ObjectCacheE
N4llvm15ExecutionEngineE
N4llvm18ValueMapCallbackVHIPKNS_11GlobalValueEPvNS_20ExecutionEngineState16AddressMapConfigEEE
N12_GLOBAL__N_113GVMemoryBlockE
N12_GLOBAL__N_126SimpleBindingMemoryManagerE
N4llvm19RTDyldMemoryManagerE
#&369<Kehu
N4llvm19AArch64DisassemblerE
N4llvm25AArch64ExternalSymbolizerE
$/bb
Ukt~N12_GLOBAL__N_125AArch64A57FPLoadBalancingE
N12_GLOBAL__N_127AArch64AddressTypePromotionE
N12_GLOBAL__N_120AArch64AdvSIMDScalarE
IKMOQSUWY[]_acegikmoqsuwy{}
!#%')+-/13579;=?ACEGIKMOQN12_GLOBAL__N_117AArch64AsmPrinterE
N4llvm19AArch64FunctionInfoE
ffffffff4
N12_GLOBAL__N_123AArch64BranchRelaxationE
N12_GLOBAL__N_112LDTLSCleanupE
N12_GLOBAL__N_117AArch64CollectLOHE
/X/X
N12_GLOBAL__N_126AArch64ConditionalComparesE
N4llvm2cl11OptionValueIbEE
N12_GLOBAL__N_130AArch64DeadRegisterDefinitionsE
N12_GLOBAL__N_119AArch64ExpandPseudoE
1111
1111111
%111/
$0Y<BN
+-+++/+++++++12
7Q777S7777777U777777777777777W>
CeCCCgCCCCCCCiCCCCCCCCCCCCCCCkCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCmJO
OOOcOOOOOOOeOOOOOOOOOOOOOOOg
<Z(E
$?-3N12_GLOBAL__N_115AArch64FastISelE
!!!!!!!!!!!!!
N4llvm20AArch64FrameLoweringE
$)>D
~erR
$0Y<BN
+-+++/+++++++12
7Q777S7777777U777777777777777W>
CeCCCgCCCCCCCiCCCCCCCCCCCCCCCkCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCmJO
OOOcOOOOOOOeOOOOOOOOOOOOOOOg
N12_GLOBAL__N_119AArch64DAGToDAGISelE
F27=
G27>
H27?
I27@
J27,
|"q
~"q
|"a
s"q
v"q
x277
y278
z279
{27:
"&# 
"&# 
).3-
wy{}
wy{}
2%222
$?-3
;;;;;;;;;;
;;;;
;;;;;;;#
vvvv 22 *-1
X`gl|q
fvfv
<Z(E
//88
AAIIRR
$0Y<BN
+-+++/+++++++12
7Q777S7777777U777777777777777W>
CeCCCgCCCCCCCiCCCCCCCCCCCCCCCkCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCmJO
OOOcOOOOOOOeOOOOOOOOOOOOOOOg
00000
00000000000000000
8
35
&&&&&&
&&&&&&&0&&&&&&&&&&&&&&&7
\6M*
\.W*
l6M*
lf 
r`*@
f@rY
.WrYf
bPbkp
f sY.W
sY!1$
f@tY.W)
.WtY
lf`dX#cdX.
6mdX?x
t94
dQX
t^f 
6-eX
`f`e
f@R`
BR`k`
\f@R\
BR\f
6MR\6
)NR\o
iXf`
{\f`
6MR`6
HMR`f
a)NR`
;NR`
f@*\
RA*\
6M*\6
)N*\f
.W*\
sb.7
.WR`f`
*\\a
XR`6m
^4#o
3w
YR`)n
#cd`f
CsD6
sD6m
S\\a
S\f@sX
CsX<
6MsX6
`6Ms
`)Ns
f@?Z
6M?Z!/
.W?Z9
r@ZH
xX6m
^)Ns
`f@|
^\f@!
`LkZ
f@s\
\f #
b6Ms\
)Ns\f
X.Ws\
Xs\)
 b.7
\f@I
 7wZ`6
xZ`6M
S`f`
b7Y?
f@s`
mf@)
Bs`%
Cs`6M;
x`f@
f@*X
6M*X
.W*Xf`*
+X)'
m6Ms`\
HMs`f
m)Ns`_
ch]
Yf@@YP
J@Y6M@Y
.Ws`
dWs`f
f@*X.
6M*X
Xs`)N*
Xs`f@2X
CY6M2X
\eYs`
f@*`
RA*`\A*
RA*`
Kr]+d
]oD*
cha
XFK*
Xf 7
6M*`6M
HM*`f
f@@]
J@]JJ@
h]f`
6M@]}
)N@]f
.W@]h
.W*`
dW*`
@]h*
X*`6
\eY*`
A2`f
]JG@
J@at
haQr
bPFkp
]bPZ
BShZl
KsiZH
6M^tM
af@j
bP^
X^U
`6mZ
`6M[
f oZ.
q!^f@r
BSh^
cHM
rZ[w
af@sZ
Csh^
6mx\tm
wQ2J
`6-R
`f@RXf
hFR
`6MRX\CT
|^f 
yf SXf
s%
6-SX
\#cd\4
chE
q6-T
`6MT
S-[.WT
X<lZ
Sh!qZ
^a+lEf`
wZ\f
xZ\)
f`Y
chY
6mY6M
 f@VX
6MVX~MT
.WVXf
x\)n
RA*\kn
hYWP
A2\Kq)
s}Ff
]RKj
\6mj
VT`R!
.w
|Z[W
 f@ZX[y+Gf
6MZXh'
bZXe
q3[H
p.wZ
XT`6
 6MTh
y0G6
N4llvm21AArch64TargetLoweringE
N4llvm2cl3optIN12_GLOBAL__N_19AlignModeELb0ENS0_6parserIS3_EEEE
N4llvm2cl11opt_storageIN12_GLOBAL__N_19AlignModeELb0ELb0EEE
N4llvm2cl6parserIN12_GLOBAL__N_19AlignModeEEE
N4llvm2cl11OptionValueIN12_GLOBAL__N_19AlignModeEEE
N4llvm2cl15OptionValueBaseIN12_GLOBAL__N_19AlignModeELb0EEE
N4llvm2cl15OptionValueCopyIN12_GLOBAL__N_19AlignModeEEE
&&&&&&&&"
,37>BI
&*15<
N4llvm19AArch64GenInstrInfoE
N4llvm16AArch64InstrInfoE
333333333333333
3333333333333333333333333333333
33333
33333
33333333333
33333
tttttttttttttt
tttttttt
tttt
HHHHHHHHHHHHHH
HHHHHHHH
HHHH
N12_GLOBAL__N_119AArch64LoadStoreOptE
HH4H
N12_GLOBAL__N_122AArch64PromoteConstantE
""""""""""""""""""""""""""""
!"#$%
 !"#$
 !#$
*,234
    
    
!!!!!
!!!!!!!!!!!!
!!!!!!!!!!!""
"""""
""""""""""""
"""""""""""##
#####
############
###########$$
$$$$$
$$$$$$$$$$$$
$$$$$$$$$$$%%
%%%%%
%%%%%%%%%%%%
%%%%%%%%%%%&&
&&&&&
&&&&&&&&&&&&
&&&&&&&&&&&''
'''''
''''''''''''
'''''''''''((
(((((
((((((((((((
((((((((((())
)))))
))))))))))))
)))))))))))**
*****
************
***********++
+++++
++++++++++++
+++++++++++
N4llvm22AArch64GenRegisterInfoE
N4llvm19AArch64RegisterInfoE
N4llvm23AArch64SelectionDAGInfoE
N12_GLOBAL__N_124AArch64StorePairSuppressE
zzzzzzzzzzzzzzzzzzzzAzzzzzzzzzzzzOz]
ccTN4llvm23AArch64GenSubtargetInfoE
N4llvm16AArch64SubtargetE
N4llvm20AArch64TargetMachineE
N4llvm22AArch64leTargetMachineE
N4llvm22AArch64beTargetMachineE
N12_GLOBAL__N_117AArch64PassConfigE
N4llvm27AArch64_ELFTargetObjectFileE
N4llvm29AArch64_MachoTargetObjectFileE
$0Y<BN
+-+++/+++++++12
7Q777S7777777U777777777777777W>
CeCCCgCCCCCCCiCCCCCCCCCCCCCCCkCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCmJO
OOOcOOOOOOOeOOOOOOOOOOOOOOOgN12_GLOBAL__N_110AArch64TTIE
tttttttttt
ttttt
ttttttttt
$/9E]v
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@A
 "$&(*,.02468:<>
<?BEH
Qo!rTWuZ]x{$'
`cf*
CC "$&(CCCCCCC*
CCCCCCACCCCD
CFJQ
CCCC
CCCCCCCCCCCCCCCCCCCCCCCC
CCCCCCCCCCCC
CCCCCCCC
N12_GLOBAL__N_116AArch64AsmParserE
N12_GLOBAL__N_114AArch64OperandE
000]
220e
666^
880c
886d
000]
020e
666^
680e
686d
000y
666z
000y
666z
00ll
66mm
000y
666z
000y
666z
00jb
0ljb
66jb
6ljb
00jb
0ljb
66jb
6ljb
000b
666b
000b
666b
000b
666b
000b
666b
000y
666z
000y
666z
000l
666m
==jb
>>jb
==jb
>>jb
===b
>>>b
====
>>>>
====
>>>>
====
>>>>
====
>>>>
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6u
-8.6u
-8.6u
-8.6y
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6~
-8.6~
-8.6~
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.
-8.6
-8.6
-8.6
-8.6
-8.
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.
-8.6
-8.6
-8.6
-8.
-8.6
-8.6
-8.6
-8.6
-8.6
-8.
-8.6
-8.6
-8.6
-8.
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
0-h.
6-h.
0-h.
0-h.
00-h.
66-h.
0-h.
6-h.
0-h.
0-h.
00-8.
66-8.
==-8.
>>-8.
@@-8.
00-8
66-8
==-8
>>-8
@@-8
00-8.
66-8.
==-8.
>>-8.
@@-8.
00-8.
00-8
66-8.
66-8
==-8.
==-8
>>-8.
>>-8
@@-8.
@@-8
00-8
66-8
==-8
>>-8
@@-8
66-8.
66-8.
66-8
66-8
0-8.
6-8.
;-8.
<-8.
=-8.
>-8.
@-8.
0-8.
0-86.
6-8.
6-86.
;-8.
;-86.
<-8.
<-86.
=-8.
=-86.
>-8.
>-86.
@-8.
@-86.
0-80
0-86
6-80
6-86
;-80
;-86
<-80
<-86
=-80
=-86
>-80
>-86
@-80
@-86
0-8.
0-8.
0-86.
0-80
0-86
0-8.
0-8.
0-86.
0-80
0-86
0-8.
6-8.
0-8.
0-86.
6-8.
6-86.
0-80
0-86
6-80
6-86
0-8.
6-8.
0-8.
0-86.
6-8.
6-86.
0-80
0-86
6-80
6-86
6-8.
6-8.
6-86.
6-80
6-86
0-8.
6-8.
0-8.
0-8.
0-8.
6-8.
0-8.
6-8.
6-8.
0-8.
6-8.
;-8.
<-8.
=-8.
>-8.
@-8.
0-8.
0-8.
0-8.
6-8.
0-8.
6-8.
6-8.
00-h.
66-h.
0-h.
6-h.
0-h.
0-h.
0000
6666
0000
6666
000y
666z
000y
666z
-86.
00ll
66mm
6006
6006
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.
-8.6
-8.6
-8.6
-8.6
-8.
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
0-h.
6-h.
0-h.
0-h.
000-h.
066-h.
00-h.
06-h.
00-h.
00-h.
00-8.
66-8.
==-8.
>>-8.
@@-8.
00-8
66-8
==-8
>>-8
@@-8
00-8.
66-8.
==-8.
>>-8.
@@-8.
00-8.
00-8
66-8.
66-8
==-8.
==-8
>>-8.
>>-8
@@-8.
@@-8
00-8
66-8
==-8
>>-8
@@-8
0-8.
6-8.
;-8.
<-8.
=-8.
>-8.
@-8.
0-8.
0-86.
6-8.
6-86.
;-8.
;-86.
<-8.
<-86.
=-8.
=-86.
>-8.
>-86.
@-8.
@-86.
0-80
0-86
6-80
6-86
;-80
;-86
<-80
<-86
=-80
=-86
>-80
>-86
@-80
@-86
0-8.
0-8.
0-86.
0-80
0-86
0-8.
0-8.
0-86.
0-80
0-86
0-8.
6-8.
0-8.
0-8.
0-8.
6-8.
;-8.
<-8.
=-8.
>-8.
@-8.
0-8.
0-8.
000-h.
066-h.
00-h.
06-h.
00-h.
00-h.
000]
220e
666^
880c
886d
000]
020e
666^
680e
686d
00ll
66mm
6006
6006
000]
220e
666^
880c
886d
000]
020e
666^
680e
686d
000y
666z
000y
666z
00ll
66mm
000y
666z
000y
666z
00jb
0ljb
66jb
6ljb
00jb
0ljb
66jb
6ljb
000b
666b
000b
666b
000b
666b
000b
666b
000y
666z
000y
666z
000l
666m
==jb
>>jb
==jb
>>jb
===b
>>>b
====
>>>>
====
>>>>
====
>>>>
====
>>>>
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6u
-8.6u
-8.6u
-8.6y
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6~
-8.6~
-8.6~
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.
-8.6
-8.6
-8.6
-8.6
-8.
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.
-8.6
-8.6
-8.6
-8.
-8.6
-8.6
-8.6
-8.6
-8.6
-8.
-8.6
-8.6
-8.6
-8.
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
0-h.
6-h.
0-h.
0-h.
00-h.
66-h.
0-h.
6-h.
0-h.
0-h.
00-8.
66-8.
==-8.
>>-8.
@@-8.
00-8
66-8
==-8
>>-8
@@-8
00-8.
66-8.
==-8.
>>-8.
@@-8.
00-8.
00-8
66-8.
66-8
==-8.
==-8
>>-8.
>>-8
@@-8.
@@-8
00-8
66-8
==-8
>>-8
@@-8
66-8.
66-8.
66-8
66-8
0-8.
6-8.
;-8.
<-8.
=-8.
>-8.
@-8.
0-8.
0-86.
6-8.
6-86.
;-8.
;-86.
<-8.
<-86.
=-8.
=-86.
>-8.
>-86.
@-8.
@-86.
0-80
0-86
6-80
6-86
;-80
;-86
<-80
<-86
=-80
=-86
>-80
>-86
@-80
@-86
0-8.
0-8.
0-86.
0-80
0-86
0-8.
0-8.
0-86.
0-80
0-86
0-8.
6-8.
0-8.
0-86.
6-8.
6-86.
0-80
0-86
6-80
6-86
0-8.
6-8.
0-8.
0-86.
6-8.
6-86.
0-80
0-86
6-80
6-86
6-8.
6-8.
6-86.
6-80
6-86
0-8.
6-8.
0-8.
0-8.
0-8.
6-8.
0-8.
6-8.
6-8.
0-8.
6-8.
;-8.
<-8.
=-8.
>-8.
@-8.
0-8.
0-8.
0-8.
6-8.
0-8.
6-8.
6-8.
00-h.
66-h.
0-h.
6-h.
0-h.
0-h.
0000
6666
0000
6666
000y
666z
000y
666z
-86.
00ll
66mm
6006
6006
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.
-8.6
-8.6
-8.6
-8.6
-8.
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
-8.6
0-h.
6-h.
0-h.
0-h.
000-h.
066-h.
00-h.
06-h.
00-h.
00-h.
00-8.
66-8.
==-8.
>>-8.
@@-8.
00-8
66-8
==-8
>>-8
@@-8
00-8.
66-8.
==-8.
>>-8.
@@-8.
00-8.
00-8
66-8.
66-8
==-8.
==-8
>>-8.
>>-8
@@-8.
@@-8
00-8
66-8
==-8
>>-8
@@-8
0-8.
6-8.
;-8.
<-8.
=-8.
>-8.
@-8.
0-8.
0-86.
6-8.
6-86.
;-8.
;-86.
<-8.
<-86.
=-8.
=-86.
>-8.
>-86.
@-8.
@-86.
0-80
0-86
6-80
6-86
;-80
;-86
<-80
<-86
=-80
=-86
>-80
>-86
@-80
@-86
0-8.
0-8.
0-86.
0-80
0-86
0-8.
0-8.
0-86.
0-80
0-86
0-8.
6-8.
0-8.
0-8.
0-8.
6-8.
;-8.
<-8.
=-8.
>-8.
@-8.
0-8.
0-8.
000-h.
066-h.
00-h.
06-h.
00-h.
00-h.
000]
220e
666^
880c
886d
000]
020e
666^
680e
686d
00ll
66mm
6006
6006
6666
!)3%
.........
................
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@A
 "$&(*,.02468:<>N12_GLOBAL__N_123DarwinAArch64AsmBackendE
N12_GLOBAL__N_117AArch64AsmBackendE
N12_GLOBAL__N_120ELFAArch64AsmBackendE
orux
N12_GLOBAL__N_122AArch64ELFObjectWriterE
N12_GLOBAL__N_118AArch64ELFStreamerE
N4llvm22AArch64MCAsmInfoDarwinE
N4llvm19AArch64MCAsmInfoELFE
N4llvm2cl3optI18AsmWriterVariantTyLb0ENS0_6parserIS2_EEEE
N4llvm2cl11opt_storageI18AsmWriterVariantTyLb0ELb0EEE
N4llvm2cl6parserI18AsmWriterVariantTyEE
N4llvm2cl11OptionValueI18AsmWriterVariantTyEE
N4llvm2cl15OptionValueBaseI18AsmWriterVariantTyLb0EEE
N4llvm2cl15OptionValueCopyI18AsmWriterVariantTyEE
rr[
N12_GLOBAL__N_120AArch64MCCodeEmitterE
N4llvm13AArch64MCExprE
DCPS1
FABD32
FACGE32
FCMGE32
FCMEQ32
FRECPS32
FRSQRTS32
FACGT32
FCMGT32
FMULX32
FMLAv2f32
FRINTAv2f32
FSUBv2f32
FABDv2f32
FADDv2f32
FACGEv2f32
FCMGEv2f32
FRECPEv2f32
FRSQRTEv2f32
SCVTFv2f32
UCVTFv2f32
FNEGv2f32
FRINTIv2f32
FMULv2f32
FMINNMv2f32
FMAXNMv2f32
FRINTMv2f32
FMINv2f32
FRINTNv2f32
FCVTXNv2f32
FADDPv2f32
FMINNMPv2f32
FMAXNMPv2f32
FMINPv2f32
FRINTPv2f32
FMAXPv2f32
FCMEQv2f32
FCVTASv2f32
FABSv2f32
FMLSv2f32
FCVTMSv2f32
FCVTNSv2f32
FRECPSv2f32
FCVTPSv2f32
FRSQRTSv2f32
FCVTZSv2f32
FACGTv2f32
FCMGTv2f32
FSQRTv2f32
FCVTAUv2f32
FCVTMUv2f32
FCVTNUv2f32
FCVTPUv2f32
FCVTZUv2f32
FDIVv2f32
FMAXv2f32
FMULXv2f32
FRINTXv2f32
FRINTZv2f32
FCVTZS_Intv2f32
FCVTZU_Intv2f32
FMLAv4f32
FRINTAv4f32
FSUBv4f32
FABDv4f32
FADDv4f32
FACGEv4f32
FCMGEv4f32
FRECPEv4f32
FRSQRTEv4f32
SCVTFv4f32
UCVTFv4f32
FNEGv4f32
FRINTIv4f32
FMULv4f32
FMINNMv4f32
FMAXNMv4f32
FRINTMv4f32
FMINv4f32
FRINTNv4f32
FCVTXNv4f32
FADDPv4f32
FMINNMPv4f32
FMAXNMPv4f32
FMINPv4f32
FRINTPv4f32
FMAXPv4f32
FCMEQv4f32
FCVTASv4f32
FABSv4f32
FMLSv4f32
FCVTMSv4f32
FCVTNSv4f32
FRECPSv4f32
FCVTPSv4f32
FRSQRTSv4f32
FCVTZSv4f32
FACGTv4f32
FCMGTv4f32
FSQRTv4f32
FCVTAUv4f32
FCVTMUv4f32
FCVTNUv4f32
FCVTPUv4f32
FCVTZUv4f32
FDIVv4f32
FMAXv4f32
FMULXv4f32
FRINTXv4f32
FRINTZv4f32
FCVTZS_Intv4f32
FCVTZU_Intv4f32
LD1i32
ST1i32
SQSUBv1i32
UQSUBv1i32
USQADDv1i32
SUQADDv1i32
FRECPEv1i32
FRSQRTEv1i32
SCVTFv1i32
UCVTFv1i32
SQNEGv1i32
SQDMULHv1i32
SQRDMULHv1i32
SQSHLv1i32
UQSHLv1i32
SQRSHLv1i32
UQRSHLv1i32
SQXTNv1i32
UQXTNv1i32
SQXTUNv1i32
FCVTASv1i32
SQABSv1i32
FCVTMSv1i32
FCVTNSv1i32
FCVTPSv1i32
FCVTZSv1i32
FCVTAUv1i32
FCVTMUv1i32
FCVTNUv1i32
FCVTPUv1i32
FCVTZUv1i32
FRECPXv1i32
LD2i32
ST2i32
TRN1v2i32
ZIP1v2i32
UZP1v2i32
TRN2v2i32
ZIP2v2i32
UZP2v2i32
REV64v2i32
SABAv2i32
UABAv2i32
MLAv2i32
SHSUBv2i32
UHSUBv2i32
SQSUBv2i32
UQSUBv2i32
BICv2i32
SABDv2i32
UABDv2i32
SRHADDv2i32
URHADDv2i32
SHADDv2i32
UHADDv2i32
USQADDv2i32
SUQADDv2i32
CMGEv2i32
URECPEv2i32
URSQRTEv2i32
SQNEGv2i32
SQDMULHv2i32
SQRDMULHv2i32
CMHIv2i32
MVNIv2i32
MOVIv2i32
SQSHLv2i32
UQSHLv2i32
SQRSHLv2i32
UQRSHLv2i32
SRSHLv2i32
URSHLv2i32
SSHLv2i32
USHLv2i32
SHLLv2i32
FCVTLv2i32
MULv2i32
SMINv2i32
UMINv2i32
FCVTNv2i32
SQXTNv2i32
UQXTNv2i32
SQXTUNv2i32
ADDPv2i32
SMINPv2i32
UMINPv2i32
SMAXPv2i32
UMAXPv2i32
CMEQv2i32
ORRv2i32
SQABSv2i32
CMHSv2i32
CLSv2i32
MLSv2i32
CMGTv2i32
CMTSTv2i32
SMAXv2i32
UMAXv2i32
CLZv2i32
RSUBHNv2i64_v2i32
RADDHNv2i64_v2i32
SADALPv4i16_v2i32
UADALPv4i16_v2i32
SADDLPv4i16_v2i32
UADDLPv4i16_v2i32
LD3i32
ST3i32
LD4i32
ST4i32
TRN1v4i32
ZIP1v4i32
UZP1v4i32
TRN2v4i32
ZIP2v4i32
UZP2v4i32
REV64v4i32
SABAv4i32
UABAv4i32
MLAv4i32
SHSUBv4i32
UHSUBv4i32
SQSUBv4i32
UQSUBv4i32
BICv4i32
SABDv4i32
UABDv4i32
SRHADDv4i32
URHADDv4i32
SHADDv4i32
UHADDv4i32
USQADDv4i32
SUQADDv4i32
CMGEv4i32
URECPEv4i32
URSQRTEv4i32
SQNEGv4i32
SQDMULHv4i32
SQRDMULHv4i32
CMHIv4i32
MVNIv4i32
MOVIv4i32
SQSHLv4i32
UQSHLv4i32
SQRSHLv4i32
UQRSHLv4i32
SRSHLv4i32
URSHLv4i32
SSHLv4i32
USHLv4i32
SHLLv4i32
FCVTLv4i32
MULv4i32
SMINv4i32
UMINv4i32
FCVTNv4i32
SQXTNv4i32
UQXTNv4i32
SQXTUNv4i32
ADDPv4i32
SMINPv4i32
UMINPv4i32
SMAXPv4i32
UMAXPv4i32
CMEQv4i32
ORRv4i32
SQABSv4i32
CMHSv4i32
CLSv4i32
MLSv4i32
CMGTv4i32
CMTSTv4i32
SMAXv4i32
UMAXv4i32
CLZv4i32
RSUBHNv2i64_v4i32
RADDHNv2i64_v4i32
SABALv4i16_v4i32
UABALv4i16_v4i32
SQDMLALv4i16_v4i32
SMLALv4i16_v4i32
UMLALv4i16_v4i32
SSUBLv4i16_v4i32
USUBLv4i16_v4i32
SABDLv4i16_v4i32
UABDLv4i16_v4i32
SADDLv4i16_v4i32
UADDLv4i16_v4i32
SQDMULLv4i16_v4i32
SMULLv4i16_v4i32
UMULLv4i16_v4i32
SQDMLSLv4i16_v4i32
SMLSLv4i16_v4i32
UMLSLv4i16_v4i32
SSUBWv4i16_v4i32
USUBWv4i16_v4i32
SADDWv4i16_v4i32
UADDWv4i16_v4i32
SABALv8i16_v4i32
UABALv8i16_v4i32
SQDMLALv8i16_v4i32
SMLALv8i16_v4i32
UMLALv8i16_v4i32
SSUBLv8i16_v4i32
USUBLv8i16_v4i32
SABDLv8i16_v4i32
UABDLv8i16_v4i32
SADDLv8i16_v4i32
UADDLv8i16_v4i32
SQDMULLv8i16_v4i32
SMULLv8i16_v4i32
UMULLv8i16_v4i32
SQDMLSLv8i16_v4i32
SMLSLv8i16_v4i32
UMLSLv8i16_v4i32
SADALPv8i16_v4i32
UADALPv8i16_v4i32
SADDLPv8i16_v4i32
UADDLPv8i16_v4i32
SSUBWv8i16_v4i32
USUBWv8i16_v4i32
SADDWv8i16_v4i32
UADDWv8i16_v4i32
SQDMLALi32
SQDMULLi32
SQDMLSLi32
CPYi32
UMOVvi32
SMOVvi16to32
SMOVvi8to32
DCPS2
DCPS3
FABD64
FACGE64
FCMGE64
FCMEQ64
FRECPS64
FRSQRTS64
FACGT64
FCMGT64
FMULX64
FMLAv2f64
FRINTAv2f64
FSUBv2f64
FABDv2f64
FADDv2f64
FACGEv2f64
FCMGEv2f64
FRECPEv2f64
FRSQRTEv2f64
SCVTFv2f64
UCVTFv2f64
FNEGv2f64
FRINTIv2f64
FMULv2f64
FMINNMv2f64
FMAXNMv2f64
FRINTMv2f64
FMINv2f64
FRINTNv2f64
FADDPv2f64
FMINNMPv2f64
FMAXNMPv2f64
FMINPv2f64
FRINTPv2f64
FMAXPv2f64
FCMEQv2f64
FCVTASv2f64
FABSv2f64
FMLSv2f64
FCVTMSv2f64
FCVTNSv2f64
FRECPSv2f64
FCVTPSv2f64
FRSQRTSv2f64
FCVTZSv2f64
FACGTv2f64
FCMGTv2f64
FSQRTv2f64
FCVTAUv2f64
FCVTMUv2f64
FCVTNUv2f64
FCVTPUv2f64
FCVTZUv2f64
FDIVv2f64
FMAXv2f64
FMULXv2f64
FRINTXv2f64
FRINTZv2f64
FCVTZS_Intv2f64
FCVTZU_Intv2f64
LD1i64
ST1i64
SQSUBv1i64
UQSUBv1i64
USQADDv1i64
SUQADDv1i64
CMGEv1i64
FRECPEv1i64
FRSQRTEv1i64
SCVTFv1i64
UCVTFv1i64
SQNEGv1i64
CMHIv1i64
SQSHLv1i64
UQSHLv1i64
SQRSHLv1i64
UQRSHLv1i64
SRSHLv1i64
URSHLv1i64
SSHLv1i64
USHLv1i64
PMULLv1i64
FCVTXNv1i64
CMEQv1i64
FCVTASv1i64
SQABSv1i64
CMHSv1i64
FCVTMSv1i64
FCVTNSv1i64
FCVTPSv1i64
FCVTZSv1i64
CMGTv1i64
CMTSTv1i64
FCVTAUv1i64
FCVTMUv1i64
FCVTNUv1i64
FCVTPUv1i64
FCVTZUv1i64
FRECPXv1i64
SADALPv2i32_v1i64
UADALPv2i32_v1i64
SADDLPv2i32_v1i64
UADDLPv2i32_v1i64
LD2i64
ST2i64
TRN1v2i64
ZIP1v2i64
UZP1v2i64
TRN2v2i64
ZIP2v2i64
UZP2v2i64
SQSUBv2i64
UQSUBv2i64
USQADDv2i64
SUQADDv2i64
CMGEv2i64
SQNEGv2i64
CMHIv2i64
SQSHLv2i64
UQSHLv2i64
SQRSHLv2i64
UQRSHLv2i64
SRSHLv2i64
URSHLv2i64
SSHLv2i64
USHLv2i64
PMULLv2i64
ADDPv2i64
CMEQv2i64
SQABSv2i64
CMHSv2i64
CMGTv2i64
CMTSTv2i64
SABALv2i32_v2i64
UABALv2i32_v2i64
SQDMLALv2i32_v2i64
SMLALv2i32_v2i64
UMLALv2i32_v2i64
SSUBLv2i32_v2i64
USUBLv2i32_v2i64
SABDLv2i32_v2i64
UABDLv2i32_v2i64
SADDLv2i32_v2i64
UADDLv2i32_v2i64
SQDMULLv2i32_v2i64
SMULLv2i32_v2i64
UMULLv2i32_v2i64
SQDMLSLv2i32_v2i64
SMLSLv2i32_v2i64
UMLSLv2i32_v2i64
SSUBWv2i32_v2i64
USUBWv2i32_v2i64
SADDWv2i32_v2i64
UADDWv2i32_v2i64
SABALv4i32_v2i64
UABALv4i32_v2i64
SQDMLALv4i32_v2i64
SMLALv4i32_v2i64
UMLALv4i32_v2i64
SSUBLv4i32_v2i64
USUBLv4i32_v2i64
SABDLv4i32_v2i64
UABDLv4i32_v2i64
SADDLv4i32_v2i64
UADDLv4i32_v2i64
SQDMULLv4i32_v2i64
SMULLv4i32_v2i64
UMULLv4i32_v2i64
SQDMLSLv4i32_v2i64
SMLSLv4i32_v2i64
UMLSLv4i32_v2i64
SADALPv4i32_v2i64
UADALPv4i32_v2i64
SADDLPv4i32_v2i64
UADDLPv4i32_v2i64
SSUBWv4i32_v2i64
USUBWv4i32_v2i64
SADDWv4i32_v2i64
UADDWv4i32_v2i64
LD3i64
ST3i64
LD4i64
ST4i64
CPYi64
UMOVvi64
SMOVvi32to64
SMOVvi16to64
SMOVvi8to64
SUBXrx64
ADDXrx64
SUBSXrx64
ADDSXrx64
LD1i16
ST1i16
SQSUBv1i16
UQSUBv1i16
USQADDv1i16
SUQADDv1i16
SQNEGv1i16
SQDMULHv1i16
SQRDMULHv1i16
SQSHLv1i16
UQSHLv1i16
SQRSHLv1i16
UQRSHLv1i16
SQXTNv1i16
UQXTNv1i16
SQXTUNv1i16
SQABSv1i16
LD2i16
ST2i16
LD3i16
ST3i16
LD4i16
ST4i16
TRN1v4i16
ZIP1v4i16
UZP1v4i16
REV32v4i16
TRN2v4i16
ZIP2v4i16
UZP2v4i16
REV64v4i16
SABAv4i16
UABAv4i16
MLAv4i16
SHSUBv4i16
UHSUBv4i16
SQSUBv4i16
UQSUBv4i16
BICv4i16
SABDv4i16
UABDv4i16
SRHADDv4i16
URHADDv4i16
SHADDv4i16
UHADDv4i16
USQADDv4i16
SUQADDv4i16
CMGEv4i16
SQNEGv4i16
SQDMULHv4i16
SQRDMULHv4i16
CMHIv4i16
MVNIv4i16
MOVIv4i16
SQSHLv4i16
UQSHLv4i16
SQRSHLv4i16
UQRSHLv4i16
SRSHLv4i16
URSHLv4i16
SSHLv4i16
USHLv4i16
SHLLv4i16
FCVTLv4i16
MULv4i16
SMINv4i16
UMINv4i16
FCVTNv4i16
SQXTNv4i16
UQXTNv4i16
SQXTUNv4i16
ADDPv4i16
SMINPv4i16
UMINPv4i16
SMAXPv4i16
UMAXPv4i16
CMEQv4i16
ORRv4i16
SQABSv4i16
CMHSv4i16
CLSv4i16
MLSv4i16
CMGTv4i16
CMTSTv4i16
SMAXv4i16
UMAXv4i16
CLZv4i16
RSUBHNv4i32_v4i16
RADDHNv4i32_v4i16
SADALPv8i8_v4i16
UADALPv8i8_v4i16
SADDLPv8i8_v4i16
UADDLPv8i8_v4i16
TRN1v8i16
ZIP1v8i16
UZP1v8i16
REV32v8i16
TRN2v8i16
ZIP2v8i16
UZP2v8i16
REV64v8i16
SABAv8i16
UABAv8i16
MLAv8i16
SHSUBv8i16
UHSUBv8i16
SQSUBv8i16
UQSUBv8i16
BICv8i16
SABDv8i16
UABDv8i16
SRHADDv8i16
URHADDv8i16
SHADDv8i16
UHADDv8i16
USQADDv8i16
SUQADDv8i16
CMGEv8i16
SQNEGv8i16
SQDMULHv8i16
SQRDMULHv8i16
CMHIv8i16
MVNIv8i16
MOVIv8i16
SQSHLv8i16
UQSHLv8i16
SQRSHLv8i16
UQRSHLv8i16
SRSHLv8i16
URSHLv8i16
SSHLv8i16
USHLv8i16
SHLLv8i16
FCVTLv8i16
MULv8i16
SMINv8i16
UMINv8i16
FCVTNv8i16
SQXTNv8i16
UQXTNv8i16
SQXTUNv8i16
ADDPv8i16
SMINPv8i16
UMINPv8i16
SMAXPv8i16
UMAXPv8i16
CMEQv8i16
ORRv8i16
SQABSv8i16
CMHSv8i16
CLSv8i16
MLSv8i16
CMGTv8i16
CMTSTv8i16
SMAXv8i16
UMAXv8i16
CLZv8i16
RSUBHNv4i32_v8i16
RADDHNv4i32_v8i16
SABALv16i8_v8i16
UABALv16i8_v8i16
SMLALv16i8_v8i16
UMLALv16i8_v8i16
SSUBLv16i8_v8i16
USUBLv16i8_v8i16
SABDLv16i8_v8i16
UABDLv16i8_v8i16
SADDLv16i8_v8i16
UADDLv16i8_v8i16
SMULLv16i8_v8i16
UMULLv16i8_v8i16
SMLSLv16i8_v8i16
UMLSLv16i8_v8i16
SADALPv16i8_v8i16
UADALPv16i8_v8i16
SADDLPv16i8_v8i16
UADDLPv16i8_v8i16
SSUBWv16i8_v8i16
USUBWv16i8_v8i16
SADDWv16i8_v8i16
UADDWv16i8_v8i16
SABALv8i8_v8i16
UABALv8i8_v8i16
SMLALv8i8_v8i16
UMLALv8i8_v8i16
SSUBLv8i8_v8i16
USUBLv8i8_v8i16
SABDLv8i8_v8i16
UABDLv8i8_v8i16
SADDLv8i8_v8i16
UADDLv8i8_v8i16
SMULLv8i8_v8i16
UMULLv8i8_v8i16
SMLSLv8i8_v8i16
UMLSLv8i8_v8i16
SSUBWv8i8_v8i16
USUBWv8i8_v8i16
SADDWv8i8_v8i16
UADDWv8i8_v8i16
SQDMLALi16
SQDMULLi16
SQDMLSLi16
CPYi16
UMOVvi16
LD1i8
ST1i8
SQSUBv1i8
UQSUBv1i8
USQADDv1i8
SUQADDv1i8
SQNEGv1i8
SQSHLv1i8
UQSHLv1i8
SQRSHLv1i8
UQRSHLv1i8
SQXTNv1i8
UQXTNv1i8
SQXTUNv1i8
SQABSv1i8
LD2i8
ST2i8
LD3i8
ST3i8
LD4i8
ST4i8
TRN1v16i8
ZIP1v16i8
UZP1v16i8
REV32v16i8
TRN2v16i8
ZIP2v16i8
UZP2v16i8
REV64v16i8
REV16v16i8
SABAv16i8
UABAv16i8
MLAv16i8
SHSUBv16i8
UHSUBv16i8
SQSUBv16i8
UQSUBv16i8
BICv16i8
SABDv16i8
UABDv16i8
SRHADDv16i8
URHADDv16i8
SHADDv16i8
UHADDv16i8
USQADDv16i8
SUQADDv16i8
ANDv16i8
CMGEv16i8
BIFv16i8
SQNEGv16i8
CMHIv16i8
SQSHLv16i8
UQSHLv16i8
SQRSHLv16i8
UQRSHLv16i8
SRSHLv16i8
URSHLv16i8
SSHLv16i8
USHLv16i8
SHLLv16i8
PMULLv16i8
BSLv16i8
PMULv16i8
SMINv16i8
UMINv16i8
ORNv16i8
SQXTNv16i8
UQXTNv16i8
SQXTUNv16i8
ADDPv16i8
SMINPv16i8
UMINPv16i8
SMAXPv16i8
UMAXPv16i8
CMEQv16i8
EORv16i8
ORRv16i8
SQABSv16i8
CMHSv16i8
CLSv16i8
MLSv16i8
CMGTv16i8
RBITv16i8
CNTv16i8
NOTv16i8
CMTSTv16i8
EXTv16i8
SMAXv16i8
UMAXv16i8
CLZv16i8
RSUBHNv8i16_v16i8
RADDHNv8i16_v16i8
TRN1v8i8
ZIP1v8i8
UZP1v8i8
REV32v8i8
TRN2v8i8
ZIP2v8i8
UZP2v8i8
REV64v8i8
REV16v8i8
SABAv8i8
UABAv8i8
MLAv8i8
SHSUBv8i8
UHSUBv8i8
SQSUBv8i8
UQSUBv8i8
BICv8i8
SABDv8i8
UABDv8i8
SRHADDv8i8
URHADDv8i8
SHADDv8i8
UHADDv8i8
USQADDv8i8
SUQADDv8i8
ANDv8i8
CMGEv8i8
BIFv8i8
SQNEGv8i8
CMHIv8i8
SQSHLv8i8
UQSHLv8i8
SQRSHLv8i8
UQRSHLv8i8
SRSHLv8i8
URSHLv8i8
SSHLv8i8
USHLv8i8
SHLLv8i8
PMULLv8i8
BSLv8i8
PMULv8i8
SMINv8i8
UMINv8i8
ORNv8i8
SQXTNv8i8
UQXTNv8i8
SQXTUNv8i8
ADDPv8i8
SMINPv8i8
UMINPv8i8
SMAXPv8i8
UMAXPv8i8
CMEQv8i8
EORv8i8
ORRv8i8
SQABSv8i8
CMHSv8i8
CLSv8i8
MLSv8i8
CMGTv8i8
RBITv8i8
CNTv8i8
NOTv8i8
CMTSTv8i8
EXTv8i8
SMAXv8i8
UMAXv8i8
CLZv8i8
RSUBHNv8i16_v8i8
RADDHNv8i16_v8i8
CPYi8
UMOVvi8
MOVaddrBA
LDARB
STLRB
LDAXRB
LDXRB
STLXRB
STXRB
MOVID
LIFETIME_END
LOAD_STACK_GUARD
REG_SEQUENCE
BUNDLE
DBG_VALUE
IMPLICIT_DEF
EXTRACT_SUBREG
INSERT_SUBREG
SUBREG_TO_REG
LDARH
STLRH
LDAXRH
LDXRH
STLXRH
STXRH
GC_LABEL
EH_LABEL
F128CSEL
TLSDESCCALL
KILL
INLINEASM
CFI_INSTRUCTION
ADJCALLSTACKDOWN
STACKMAP
MOVaddrCP
ADRP
ADJCALLSTACKUP
TLSDESC_BLR
RET_ReallyLR
MOVaddrTLS
DRPS
COPY_TO_REGCLASS
ERET
MOVaddrJT
HINT
PATCHPOINT
LIFETIME_START
LD1i32_POST
ST1i32_POST
LD2i32_POST
ST2i32_POST
LD3i32_POST
ST3i32_POST
LD4i32_POST
ST4i32_POST
LD1i64_POST
ST1i64_POST
LD2i64_POST
ST2i64_POST
LD3i64_POST
ST3i64_POST
LD4i64_POST
ST4i64_POST
LD1i16_POST
ST1i16_POST
LD2i16_POST
ST2i16_POST
LD3i16_POST
ST3i16_POST
LD4i16_POST
ST4i16_POST
LD1i8_POST
ST1i8_POST
LD2i8_POST
ST2i8_POST
LD3i8_POST
ST3i8_POST
LD4i8_POST
ST4i8_POST
LD1Rv16b_POST
LD2Rv16b_POST
LD3Rv16b_POST
LD4Rv16b_POST
LD1Threev16b_POST
ST1Threev16b_POST
LD3Threev16b_POST
ST3Threev16b_POST
LD1Onev16b_POST
ST1Onev16b_POST
LD1Twov16b_POST
ST1Twov16b_POST
LD2Twov16b_POST
ST2Twov16b_POST
LD1Fourv16b_POST
ST1Fourv16b_POST
LD4Fourv16b_POST
ST4Fourv16b_POST
LD1Rv8b_POST
LD2Rv8b_POST
LD3Rv8b_POST
LD4Rv8b_POST
LD1Threev8b_POST
ST1Threev8b_POST
LD3Threev8b_POST
ST3Threev8b_POST
LD1Onev8b_POST
ST1Onev8b_POST
LD1Twov8b_POST
ST1Twov8b_POST
LD2Twov8b_POST
ST2Twov8b_POST
LD1Fourv8b_POST
ST1Fourv8b_POST
LD4Fourv8b_POST
ST4Fourv8b_POST
LD1Rv1d_POST
LD2Rv1d_POST
LD3Rv1d_POST
LD4Rv1d_POST
LD1Threev1d_POST
ST1Threev1d_POST
LD1Onev1d_POST
ST1Onev1d_POST
LD1Twov1d_POST
ST1Twov1d_POST
LD1Fourv1d_POST
ST1Fourv1d_POST
LD1Rv2d_POST
LD2Rv2d_POST
LD3Rv2d_POST
LD4Rv2d_POST
LD1Threev2d_POST
ST1Threev2d_POST
LD3Threev2d_POST
ST3Threev2d_POST
LD1Onev2d_POST
ST1Onev2d_POST
LD1Twov2d_POST
ST1Twov2d_POST
LD2Twov2d_POST
ST2Twov2d_POST
LD1Fourv2d_POST
ST1Fourv2d_POST
LD4Fourv2d_POST
ST4Fourv2d_POST
LD1Rv4h_POST
LD2Rv4h_POST
LD3Rv4h_POST
LD4Rv4h_POST
LD1Threev4h_POST
ST1Threev4h_POST
LD3Threev4h_POST
ST3Threev4h_POST
LD1Onev4h_POST
ST1Onev4h_POST
LD1Twov4h_POST
ST1Twov4h_POST
LD2Twov4h_POST
ST2Twov4h_POST
LD1Fourv4h_POST
ST1Fourv4h_POST
LD4Fourv4h_POST
ST4Fourv4h_POST
LD1Rv8h_POST
LD2Rv8h_POST
LD3Rv8h_POST
LD4Rv8h_POST
LD1Threev8h_POST
ST1Threev8h_POST
LD3Threev8h_POST
ST3Threev8h_POST
LD1Onev8h_POST
ST1Onev8h_POST
LD1Twov8h_POST
ST1Twov8h_POST
LD2Twov8h_POST
ST2Twov8h_POST
LD1Fourv8h_POST
ST1Fourv8h_POST
LD4Fourv8h_POST
ST4Fourv8h_POST
LD1Rv2s_POST
LD2Rv2s_POST
LD3Rv2s_POST
LD4Rv2s_POST
LD1Threev2s_POST
ST1Threev2s_POST
LD3Threev2s_POST
ST3Threev2s_POST
LD1Onev2s_POST
ST1Onev2s_POST
LD1Twov2s_POST
ST1Twov2s_POST
LD2Twov2s_POST
ST2Twov2s_POST
LD1Fourv2s_POST
ST1Fourv2s_POST
LD4Fourv2s_POST
ST4Fourv2s_POST
LD1Rv4s_POST
LD2Rv4s_POST
LD3Rv4s_POST
LD4Rv4s_POST
LD1Threev4s_POST
ST1Threev4s_POST
LD3Threev4s_POST
ST3Threev4s_POST
LD1Onev4s_POST
ST1Onev4s_POST
LD1Twov4s_POST
ST1Twov4s_POST
LD2Twov4s_POST
ST2Twov4s_POST
LD1Fourv4s_POST
ST1Fourv4s_POST
LD4Fourv4s_POST
ST4Fourv4s_POST
MOVaddrEXT
LDAXPW
LDXPW
STLXPW
STXPW
LDARW
STLRW
LDAXRW
LDXRW
STLXRW
STXRW
CBZW
TBZW
CBNZW
TBNZW
LDRBBroW
STRBBroW
LDRBroW
STRBroW
LDRDroW
STRDroW
LDRHHroW
STRHHroW
LDRHroW
STRHroW
PRFMroW
LDRQroW
STRQroW
LDRSroW
STRSroW
LDRSBWroW
LDRSHWroW
LDRWroW
STRWroW
LDRSWroW
LDRSBXroW
LDRSHXroW
LDRXroW
STRXroW
CLREX
LDAXPX
LDXPX
STLXPX
STXPX
LDARX
STLRX
LDAXRX
LDXRX
STLXRX
STXRX
CBZX
TBZX
CBNZX
TBNZX
LDRBBroX
STRBBroX
LDRBroX
STRBroX
LDRDroX
STRDroX
LDRHHroX
STRHHroX
LDRHroX
STRHroX
PRFMroX
LDRQroX
STRQroX
LDRSroX
STRSroX
LDRSBWroX
LDRSHWroX
LDRWroX
STRWroX
LDRSWroX
LDRSBXroX
LDRSHXroX
LDRXroX
STRXroX
COPY
LD1Rv16b
LD2Rv16b
LD3Rv16b
LD4Rv16b
LD1Threev16b
ST1Threev16b
LD3Threev16b
ST3Threev16b
LD1Onev16b
ST1Onev16b
LD1Twov16b
ST1Twov16b
LD2Twov16b
ST2Twov16b
LD1Fourv16b
ST1Fourv16b
LD4Fourv16b
ST4Fourv16b
LD1Rv8b
LD2Rv8b
LD3Rv8b
LD4Rv8b
LD1Threev8b
ST1Threev8b
LD3Threev8b
ST3Threev8b
LD1Onev8b
ST1Onev8b
LD1Twov8b
ST1Twov8b
LD2Twov8b
ST2Twov8b
LD1Fourv8b
ST1Fourv8b
LD4Fourv8b
ST4Fourv8b
SQSHLb
UQSHLb
SQSHRNb
UQSHRNb
SQRSHRNb
UQRSHRNb
SQSHRUNb
SQRSHRUNb
SQSHLUb
LD1Rv1d
LD2Rv1d
LD3Rv1d
LD4Rv1d
LD1Threev1d
ST1Threev1d
LD1Onev1d
ST1Onev1d
LD1Twov1d
ST1Twov1d
LD1Fourv1d
ST1Fourv1d
LD1Rv2d
LD2Rv2d
LD3Rv2d
LD4Rv2d
LD1Threev2d
ST1Threev2d
LD3Threev2d
ST3Threev2d
LD1Onev2d
ST1Onev2d
LD1Twov2d
ST1Twov2d
LD2Twov2d
ST2Twov2d
LD1Fourv2d
ST1Fourv2d
LD4Fourv2d
ST4Fourv2d
SRSRAd
URSRAd
SSRAd
USRAd
SCVTFd
UCVTFd
SLId
SRId
SQSHLd
UQSHLd
SRSHRd
URSHRd
SSHRd
USHRd
FCVTZSd
SQSHLUd
FCVTZUd
FMLAv1i32_indexed
SQDMULHv1i32_indexed
SQRDMULHv1i32_indexed
SQDMLALv1i32_indexed
SQDMULLv1i32_indexed
SQDMLSLv1i32_indexed
FMULv1i32_indexed
FMLSv1i32_indexed
FMULXv1i32_indexed
FMLAv2i32_indexed
SQDMULHv2i32_indexed
SQRDMULHv2i32_indexed
SQDMLALv2i32_indexed
SMLALv2i32_indexed
UMLALv2i32_indexed
SQDMULLv2i32_indexed
SMULLv2i32_indexed
UMULLv2i32_indexed
SQDMLSLv2i32_indexed
SMLSLv2i32_indexed
UMLSLv2i32_indexed
FMULv2i32_indexed
FMLSv2i32_indexed
FMULXv2i32_indexed
FMLAv4i32_indexed
SQDMULHv4i32_indexed
SQRDMULHv4i32_indexed
SQDMLALv4i32_indexed
SMLALv4i32_indexed
UMLALv4i32_indexed
SQDMULLv4i32_indexed
SMULLv4i32_indexed
UMULLv4i32_indexed
SQDMLSLv4i32_indexed
SMLSLv4i32_indexed
UMLSLv4i32_indexed
FMULv4i32_indexed
FMLSv4i32_indexed
FMULXv4i32_indexed
FMLAv1i64_indexed
SQDMLALv1i64_indexed
SQDMULLv1i64_indexed
SQDMLSLv1i64_indexed
FMULv1i64_indexed
FMLSv1i64_indexed
FMULXv1i64_indexed
FMLAv2i64_indexed
FMULv2i64_indexed
FMLSv2i64_indexed
FMULXv2i64_indexed
SQDMULHv1i16_indexed
SQRDMULHv1i16_indexed
MLAv4i16_indexed
SQDMULHv4i16_indexed
SQRDMULHv4i16_indexed
SQDMLALv4i16_indexed
SMLALv4i16_indexed
UMLALv4i16_indexed
SQDMULLv4i16_indexed
SMULLv4i16_indexed
UMULLv4i16_indexed
SQDMLSLv4i16_indexed
SMLSLv4i16_indexed
UMLSLv4i16_indexed
MULv4i16_indexed
MLSv4i16_indexed
MLAv8i16_indexed
SQDMULHv8i16_indexed
SQRDMULHv8i16_indexed
SQDMLALv8i16_indexed
SMLALv8i16_indexed
UMLALv8i16_indexed
SQDMULLv8i16_indexed
SMULLv8i16_indexed
UMULLv8i16_indexed
SQDMLSLv8i16_indexed
SMLSLv8i16_indexed
UMLSLv8i16_indexed
MULv8i16_indexed
MLSv8i16_indexed
TBLv16i8Three
TBXv16i8Three
TBLv8i8Three
TBXv8i8Three
TBLv16i8One
TBXv16i8One
TBLv8i8One
TBXv8i8One
DUPv2i32lane
DUPv4i32lane
INSvi32lane
DUPv2i64lane
INSvi64lane
DUPv4i16lane
DUPv8i16lane
INSvi16lane
DUPv16i8lane
DUPv8i8lane
INSvi8lane
LDRBBpre
STRBBpre
LDRBpre
STRBpre
LDPDpre
STPDpre
LDRDpre
STRDpre
LDRHHpre
STRHHpre
LDRHpre
STRHpre
LDPQpre
STPQpre
LDRQpre
STRQpre
LDPSpre
STPSpre
LDRSpre
STRSpre
LDRSBWpre
LDRSHWpre
LDPWpre
STPWpre
LDRWpre
STRWpre
LDPSWpre
LDRSWpre
LDRSBXpre
LDRSHXpre
LDPXpre
STPXpre
LDRXpre
STRXpre
MSRpstate
LD1Rv4h
LD2Rv4h
LD3Rv4h
LD4Rv4h
LD1Threev4h
ST1Threev4h
LD3Threev4h
ST3Threev4h
LD1Onev4h
ST1Onev4h
LD1Twov4h
ST1Twov4h
LD2Twov4h
ST2Twov4h
LD1Fourv4h
ST1Fourv4h
LD4Fourv4h
ST4Fourv4h
LD1Rv8h
LD2Rv8h
LD3Rv8h
LD4Rv8h
LD1Threev8h
ST1Threev8h
LD3Threev8h
ST3Threev8h
LD1Onev8h
ST1Onev8h
LD1Twov8h
ST1Twov8h
LD2Twov8h
ST2Twov8h
LD1Fourv8h
ST1Fourv8h
LD4Fourv8h
ST4Fourv8h
SQSHLh
UQSHLh
SQSHRNh
UQSHRNh
SQRSHRNh
UQRSHRNh
SQSHRUNh
SQRSHRUNh
SQSHLUh
LDURBBi
STURBBi
LDTRBi
STTRBi
LDURBi
STURBi
LDPDi
LDNPDi
STNPDi
STPDi
LDURDi
STURDi
FMOVDi
LDURHHi
STURHHi
LDTRHi
STTRHi
LDURHi
STURHi
PRFUMi
LDPQi
LDNPQi
STNPQi
STPQi
LDURQi
STURQi
LDPSi
LDNPSi
STNPSi
STPSi
LDURSi
STURSi
FMOVSi
LDTRSBWi
LDURSBWi
LDTRSHWi
LDURSHWi
MOVKWi
CCMNWi
MOVNWi
LDPWi
CCMPWi
LDNPWi
STNPWi
STPWi
LDTRWi
STTRWi
LDURWi
STURWi
LDPSWi
LDTRSWi
LDURSWi
MOVZWi
LDTRSBXi
LDURSBXi
LDTRSHXi
LDURSHXi
MOVKXi
CCMNXi
MOVNXi
LDPXi
CCMPXi
LDNPXi
STNPXi
STPXi
LDTRXi
STTRXi
LDURXi
STURXi
MOVZXi
TCRETURNdi
FCMPEDri
FCMPDri
SCVTFSWDri
UCVTFSWDri
FCVTZSSWDri
FCVTZUSWDri
FCVTZS_IntSWDri
FCVTZU_IntSWDri
SCVTFUWDri
UCVTFUWDri
SCVTFSXDri
UCVTFSXDri
FCVTZSSXDri
FCVTZUSXDri
FCVTZS_IntSXDri
FCVTZU_IntSXDri
SCVTFUXDri
UCVTFUXDri
TCRETURNri
FCMPESri
FCMPSri
SCVTFSWSri
UCVTFSWSri
FCVTZSSWSri
FCVTZUSWSri
FCVTZS_IntSWSri
FCVTZU_IntSWSri
SCVTFUWSri
UCVTFUWSri
SCVTFSXSri
UCVTFSXSri
FCVTZSSXSri
FCVTZUSXSri
FCVTZS_IntSXSri
FCVTZU_IntSXSri
SCVTFUXSri
UCVTFUXSri
SUBWri
ADDWri
ANDWri
SBFMWri
UBFMWri
EORWri
ORRWri
SUBSWri
ADDSWri
ANDSWri
SUBXri
ADDXri
ANDXri
SBFMXri
UBFMXri
EORXri
ORRXri
SUBSXri
ADDSXri
ANDSXri
EXTRWrri
EXTRXrri
LDRBBui
STRBBui
LDRBui
STRBui
LDRDui
STRDui
LDRHHui
STRHHui
LDRHui
STRHui
PRFMui
LDRQui
STRQui
LDRSui
STRSui
LDRSBWui
LDRSHWui
LDRWui
STRWui
LDRSWui
LDRSBXui
LDRSHXui
LDRXui
STRXui
LDRDl
PRFMl
LDRQl
LDRSl
LDRWl
LDRSWl
LDRXl
MVNIv2s_msl
MOVIv2s_msl
MVNIv4s_msl
MOVIv4s_msl
MOVi32imm
MOVi64imm
TBLv16i8Two
TBXv16i8Two
TBLv8i8Two
TBXv8i8Two
FADDPv2i32p
FMINNMPv2i32p
FMAXNMPv2i32p
FMINPv2i32p
FMAXPv2i32p
FADDPv2i64p
FMINNMPv2i64p
FMAXNMPv2i64p
FMINPv2i64p
FMAXPv2i64p
FRINTADr
FNEGDr
FCVTHDr
FRINTIDr
FRINTMDr
FRINTNDr
FRINTPDr
FABSDr
FCVTSDr
FSQRTDr
FMOVDr
FCVTASUWDr
FCVTMSUWDr
FCVTNSUWDr
FCVTPSUWDr
FCVTZSUWDr
FCVTAUUWDr
FCVTMUUWDr
FCVTNUUWDr
FCVTPUUWDr
FCVTZUUWDr
FCVTZS_IntUWDr
FCVTZU_IntUWDr
FRINTXDr
FCVTASUXDr
FCVTMSUXDr
FCVTNSUXDr
FCVTPSUXDr
FCVTZSUXDr
FCVTAUUXDr
FCVTMUUXDr
FCVTNUUXDr
FCVTPUUXDr
FCVTZUUXDr
FCVTZS_IntUXDr
FCVTZU_IntUXDr
FMOVXDr
FRINTZDr
FCVTDHr
FCVTSHr
FRINTASr
FCVTDSr
FNEGSr
FCVTHSr
FRINTISr
FRINTMSr
FRINTNSr
FRINTPSr
FABSSr
FSQRTSr
FMOVSr
FCVTASUWSr
FCVTMSUWSr
FCVTNSUWSr
FCVTPSUWSr
FCVTZSUWSr
FCVTAUUWSr
FCVTMUUWSr
FCVTNUUWSr
FCVTPUUWSr
FCVTZUUWSr
FCVTZS_IntUWSr
FCVTZU_IntUWSr
FMOVWSr
FRINTXSr
FCVTASUXSr
FCVTMSUXSr
FCVTNSUXSr
FCVTPSUXSr
FCVTZSUXSr
FCVTAUUXSr
FCVTMUUXSr
FCVTNUUXSr
FCVTPUUXSr
FCVTZUUXSr
FCVTZS_IntUXSr
FCVTZU_IntUXSr
FRINTZSr
REV16Wr
SBCWr
ADCWr
CSINCWr
CSNEGWr
CSELWr
CCMNWr
CCMPWr
SBCSWr
ADCSWr
CLSWr
FMOVSWr
RBITWr
REVWr
SDIVWr
UDIVWr
LSLVWr
CSINVWr
RORVWr
ASRVWr
LSRVWr
CLZWr
SDIV_IntWr
UDIV_IntWr
REV32Xr
REV16Xr
SBCXr
ADCXr
CSINCXr
FMOVDXr
CSNEGXr
CSELXr
CCMNXr
CCMPXr
SBCSXr
ADCSXr
CLSXr
RBITXr
REVXr
SDIVXr
UDIVXr
LSLVXr
CSINVXr
RORVXr
ASRVXr
LSRVXr
CLZXr
SDIV_IntXr
UDIV_IntXr
MOVaddr
FMOVXDHighr
FMOVDXHighr
DUPv2i32gpr
DUPv4i32gpr
INSvi32gpr
DUPv2i64gpr
INSvi64gpr
DUPv4i16gpr
DUPv8i16gpr
INSvi16gpr
DUPv16i8gpr
DUPv8i8gpr
INSvi8gpr
SHA256SU0rr
SHA1SU1rr
CRC32Brr
CRC32CBrr
AESIMCrr
AESMCrr
FSUBDrr
FADDDrr
FCCMPEDrr
FCMPEDrr
FMULDrr
FNMULDrr
FMINNMDrr
FMAXNMDrr
FMINDrr
FCCMPDrr
FCMPDrr
AESDrr
FDIVDrr
FMAXDrr
AESErr
SHA1Hrr
CRC32Hrr
CRC32CHrr
SMULHrr
UMULHrr
FSUBSrr
FADDSrr
FCCMPESrr
FCMPESrr
FMULSrr
FNMULSrr
FMINNMSrr
FMAXNMSrr
FMINSrr
FCCMPSrr
FCMPSrr
FDIVSrr
FMAXSrr
CRC32Wrr
SUBWrr
CRC32CWrr
BICWrr
ADDWrr
ANDWrr
EONWrr
ORNWrr
EORWrr
ORRWrr
SUBSWrr
BICSWrr
ADDSWrr
ANDSWrr
CRC32Xrr
SUBXrr
CRC32CXrr
BICXrr
ADDXrr
ANDXrr
EONXrr
ORNXrr
EORXrr
ORRXrr
SUBSXrr
BICSXrr
ADDSXrr
ANDSXrr
SHA1SU0rrr
SHA256SU1rrr
SHA256H2rrr
SHA1Crrr
FMSUBDrrr
FNMSUBDrrr
FMADDDrrr
FNMADDDrrr
FCSELDrrr
SHA256Hrrr
SMSUBLrrr
UMSUBLrrr
SMADDLrrr
UMADDLrrr
SHA1Mrrr
SHA1Prrr
FMSUBSrrr
FNMSUBSrrr
FMADDSrrr
FNMADDSrrr
FCSELSrrr
MSUBWrrr
MADDWrrr
MSUBXrrr
MADDXrrr
TBLv16i8Four
TBXv16i8Four
TBLv8i8Four
TBXv8i8Four
LD1Rv2s
LD2Rv2s
LD3Rv2s
LD4Rv2s
LD1Threev2s
ST1Threev2s
LD3Threev2s
ST3Threev2s
LD1Onev2s
ST1Onev2s
LD1Twov2s
ST1Twov2s
LD2Twov2s
ST2Twov2s
LD1Fourv2s
ST1Fourv2s
LD4Fourv2s
ST4Fourv2s
LD1Rv4s
LD2Rv4s
LD3Rv4s
LD4Rv4s
LD1Threev4s
ST1Threev4s
LD3Threev4s
ST3Threev4s
LD1Onev4s
ST1Onev4s
LD1Twov4s
ST1Twov4s
LD2Twov4s
ST2Twov4s
LD1Fourv4s
ST1Fourv4s
LD4Fourv4s
ST4Fourv4s
SCVTFs
UCVTFs
SQSHLs
UQSHLs
SQSHRNs
UQSHRNs
SQRSHRNs
UQRSHRNs
SQSHRUNs
SQRSHRUNs
FCVTZSs
SQSHLUs
FCVTZUs
FMOVv2f32_ns
FMOVv4f32_ns
FMOVv2f64_ns
MOVIv16b_ns
MOVIv8b_ns
MOVIv2d_ns
SUBWrs
BICWrs
ADDWrs
ANDWrs
EONWrs
ORNWrs
EORWrs
ORRWrs
SUBSWrs
BICSWrs
ADDSWrs
ANDSWrs
SUBXrs
BICXrs
ADDXrs
ANDXrs
EONXrs
ORNXrs
EORXrs
ORRXrs
SUBSXrs
BICSXrs
ADDSXrs
ANDSXrs
SRSRAv2i32_shift
URSRAv2i32_shift
SSRAv2i32_shift
USRAv2i32_shift
SCVTFv2i32_shift
UCVTFv2i32_shift
SLIv2i32_shift
SRIv2i32_shift
SQSHLv2i32_shift
UQSHLv2i32_shift
SSHLLv2i32_shift
USHLLv2i32_shift
SQSHRNv2i32_shift
UQSHRNv2i32_shift
SQRSHRNv2i32_shift
UQRSHRNv2i32_shift
SQSHRUNv2i32_shift
SQRSHRUNv2i32_shift
SRSHRv2i32_shift
URSHRv2i32_shift
SSHRv2i32_shift
USHRv2i32_shift
FCVTZSv2i32_shift
SQSHLUv2i32_shift
FCVTZUv2i32_shift
SRSRAv4i32_shift
URSRAv4i32_shift
SSRAv4i32_shift
USRAv4i32_shift
SCVTFv4i32_shift
UCVTFv4i32_shift
SLIv4i32_shift
SRIv4i32_shift
SQSHLv4i32_shift
UQSHLv4i32_shift
SSHLLv4i32_shift
USHLLv4i32_shift
SQSHRNv4i32_shift
UQSHRNv4i32_shift
SQRSHRNv4i32_shift
UQRSHRNv4i32_shift
SQSHRUNv4i32_shift
SQRSHRUNv4i32_shift
SRSHRv4i32_shift
URSHRv4i32_shift
SSHRv4i32_shift
USHRv4i32_shift
FCVTZSv4i32_shift
SQSHLUv4i32_shift
FCVTZUv4i32_shift
SRSRAv2i64_shift
URSRAv2i64_shift
SSRAv2i64_shift
USRAv2i64_shift
SCVTFv2i64_shift
UCVTFv2i64_shift
SLIv2i64_shift
SRIv2i64_shift
SQSHLv2i64_shift
UQSHLv2i64_shift
SRSHRv2i64_shift
URSHRv2i64_shift
SSHRv2i64_shift
USHRv2i64_shift
FCVTZSv2i64_shift
SQSHLUv2i64_shift
FCVTZUv2i64_shift
SRSRAv4i16_shift
URSRAv4i16_shift
SSRAv4i16_shift
USRAv4i16_shift
SLIv4i16_shift
SRIv4i16_shift
SQSHLv4i16_shift
UQSHLv4i16_shift
SSHLLv4i16_shift
USHLLv4i16_shift
SQSHRNv4i16_shift
UQSHRNv4i16_shift
SQRSHRNv4i16_shift
UQRSHRNv4i16_shift
SQSHRUNv4i16_shift
SQRSHRUNv4i16_shift
SRSHRv4i16_shift
URSHRv4i16_shift
SSHRv4i16_shift
USHRv4i16_shift
SQSHLUv4i16_shift
SRSRAv8i16_shift
URSRAv8i16_shift
SSRAv8i16_shift
USRAv8i16_shift
SLIv8i16_shift
SRIv8i16_shift
SQSHLv8i16_shift
UQSHLv8i16_shift
SSHLLv8i16_shift
USHLLv8i16_shift
SQSHRNv8i16_shift
UQSHRNv8i16_shift
SQRSHRNv8i16_shift
UQRSHRNv8i16_shift
SQSHRUNv8i16_shift
SQRSHRUNv8i16_shift
SRSHRv8i16_shift
URSHRv8i16_shift
SSHRv8i16_shift
USHRv8i16_shift
SQSHLUv8i16_shift
SRSRAv16i8_shift
URSRAv16i8_shift
SSRAv16i8_shift
USRAv16i8_shift
SLIv16i8_shift
SRIv16i8_shift
SQSHLv16i8_shift
UQSHLv16i8_shift
SSHLLv16i8_shift
USHLLv16i8_shift
SQSHRNv16i8_shift
UQSHRNv16i8_shift
SQRSHRNv16i8_shift
UQRSHRNv16i8_shift
SQSHRUNv16i8_shift
SQRSHRUNv16i8_shift
SRSHRv16i8_shift
URSHRv16i8_shift
SSHRv16i8_shift
USHRv16i8_shift
SQSHLUv16i8_shift
SRSRAv8i8_shift
URSRAv8i8_shift
SSRAv8i8_shift
USRAv8i8_shift
SLIv8i8_shift
SRIv8i8_shift
SQSHLv8i8_shift
UQSHLv8i8_shift
SSHLLv8i8_shift
USHLLv8i8_shift
SQSHRNv8i8_shift
UQSHRNv8i8_shift
SQRSHRNv8i8_shift
UQRSHRNv8i8_shift
SQSHRUNv8i8_shift
SQRSHRUNv8i8_shift
SRSHRv8i8_shift
URSHRv8i8_shift
SSHRv8i8_shift
USHRv8i8_shift
SQSHLUv8i8_shift
LOADgot
LDRBBpost
STRBBpost
LDRBpost
STRBpost
LDPDpost
STPDpost
LDRDpost
STRDpost
LDRHHpost
STRHHpost
LDRHpost
STRHpost
LDPQpost
STPQpost
LDRQpost
STRQpost
LDPSpost
STPSpost
LDRSpost
STRSpost
LDRSBWpost
LDRSHWpost
LDPWpost
STPWpost
LDRWpost
STRWpost
LDPSWpost
LDRSWpost
LDRSBXpost
LDRSHXpost
LDPXpost
STPXpost
LDRXpost
STRXpost
SYSLxt
SYSxt
ADDVv4i32v
SADDLVv4i32v
UADDLVv4i32v
FMINNMVv4i32v
FMAXNMVv4i32v
FMINVv4i32v
SMINVv4i32v
UMINVv4i32v
FMAXVv4i32v
SMAXVv4i32v
UMAXVv4i32v
ADDVv4i16v
SADDLVv4i16v
UADDLVv4i16v
SMINVv4i16v
UMINVv4i16v
SMAXVv4i16v
UMAXVv4i16v
ADDVv8i16v
SADDLVv8i16v
UADDLVv8i16v
SMINVv8i16v
UMINVv8i16v
SMAXVv8i16v
UMAXVv8i16v
ADDVv16i8v
SADDLVv16i8v
UADDLVv16i8v
SMINVv16i8v
UMINVv16i8v
SMAXVv16i8v
UMAXVv16i8v
ADDVv8i8v
SADDLVv8i8v
UADDLVv8i8v
SMINVv8i8v
UMINVv8i8v
SMAXVv8i8v
UMAXVv8i8v
SUBWrx
ADDWrx
SUBSWrx
ADDSWrx
SUBXrx
ADDXrx
SUBSXrx
ADDSXrx
FCMGEv1i32rz
FCMLEv1i32rz
FCMEQv1i32rz
FCMGTv1i32rz
FCMLTv1i32rz
FCMGEv2i32rz
FCMLEv2i32rz
FCMEQv2i32rz
FCMGTv2i32rz
FCMLTv2i32rz
FCMGEv4i32rz
FCMLEv4i32rz
FCMEQv4i32rz
FCMGTv4i32rz
FCMLTv4i32rz
FCMGEv1i64rz
FCMLEv1i64rz
FCMEQv1i64rz
FCMGTv1i64rz
FCMLTv1i64rz
FCMGEv2i64rz
FCMLEv2i64rz
FCMEQv2i64rz
FCMGTv2i64rz
FCMLTv2i64rz
CMGEv4i16rz
CMLEv4i16rz
CMEQv4i16rz
CMGTv4i16rz
CMLTv4i16rz
CMGEv8i16rz
CMLEv8i16rz
CMEQv8i16rz
CMGTv8i16rz
CMLTv8i16rz
CMGEv16i8rz
CMLEv16i8rz
CMEQv16i8rz
CMGTv16i8rz
CMLTv16i8rz
CMGEv8i8rz
CMLEv8i8rz
CMEQv8i8rz
CMGTv8i8rz
CMLTv8i8rz
D7_D8_D9_D10
Q7_Q8_Q9_Q10
D17_D18_D19_D20
Q17_Q18_Q19_Q20
D27_D28_D29_D30
Q27_Q28_Q29_Q30
D29_D30_D31_D0
Q29_Q30_Q31_Q0
D8_D9_D10_D11
Q8_Q9_Q10_Q11
D18_D19_D20_D21
Q18_Q19_Q20_Q21
D28_D29_D30_D31
Q28_Q29_Q30_Q31
D30_D31_D0_D1
Q30_Q31_Q0_Q1
D9_D10_D11_D12
Q9_Q10_Q11_Q12
D19_D20_D21_D22
Q19_Q20_Q21_Q22
D31_D0_D1_D2
Q31_Q0_Q1_Q2
D10_D11_D12_D13
Q10_Q11_Q12_Q13
D20_D21_D22_D23
Q20_Q21_Q22_Q23
D0_D1_D2_D3
Q0_Q1_Q2_Q3
D11_D12_D13_D14
Q11_Q12_Q13_Q14
D21_D22_D23_D24
Q21_Q22_Q23_Q24
D1_D2_D3_D4
Q1_Q2_Q3_Q4
D12_D13_D14_D15
Q12_Q13_Q14_Q15
D22_D23_D24_D25
Q22_Q23_Q24_Q25
D2_D3_D4_D5
Q2_Q3_Q4_Q5
D13_D14_D15_D16
Q13_Q14_Q15_Q16
D23_D24_D25_D26
Q23_Q24_Q25_Q26
D3_D4_D5_D6
Q3_Q4_Q5_Q6
D14_D15_D16_D17
Q14_Q15_Q16_Q17
D24_D25_D26_D27
Q24_Q25_Q26_Q27
D4_D5_D6_D7
Q4_Q5_Q6_Q7
D15_D16_D17_D18
Q15_Q16_Q17_Q18
D25_D26_D27_D28
Q25_Q26_Q27_Q28
D5_D6_D7_D8
Q5_Q6_Q7_Q8
D16_D17_D18_D19
Q16_Q17_Q18_Q19
D26_D27_D28_D29
Q26_Q27_Q28_Q29
D6_D7_D8_D9
Q6_Q7_Q8_Q9
NZCV
N12_GLOBAL__N_123AArch64MachObjectWriterE
N4llvm21AArch64TargetStreamerE
!#%'
 (!Q!z!
"C"j"
#3#Z#
#!$J$q$
D 'q'
D1(_({(
5H5z5
D28k8
9":K:t:
;B;k;
DO@s@
 (!Q!z!
"C"j"
#3#Z#
#!$J$q$
D 'q'
D1(_({(
5H5z5
D28k8
9":K:t:
;B;k;
DO@s@
bdfddhddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddddd
jlnprtvxz|~
 B'
a8"a8
a8"a8
(!z)
o80)o8(
o8(Io84
o84i
b0Bb0
|0B|0B|0
r0Br0Br0
Ba3ba3
j0Bj0
BY3bY3
sha1su0
sha256su0
trn1
zip1
uzp1
dcps1
sha1su1
sha256su1
rev32
sha256h2
sabal2
uabal2
sqdmlal2
smlal2
umlal2
ssubl2
usubl2
sabdl2
uabdl2
saddl2
uaddl2
sshll2
ushll2
sqdmull2
pmull2
smull2
umull2
sqdmlsl2
smlsl2
umlsl2
fcvtl2
rsubhn2
raddhn2
sqshrn2
uqshrn2
sqrshrn2
uqrshrn2
trn2
fcvtn2
sqxtn2
uqxtn2
sqshrun2
sqrshrun2
sqxtun2
fcvtxn2
zip2
uzp2
dcps2
ssubw2
usubw2
saddw2
uaddw2
dcps3
rev64
rev16
saba
uaba
fmla
srsra
ursra
ssra
usra
frinta
crc32b
crc32cb
ldarb
ldrb
stlrb
ldtrb
strb
sttrb
ldurb
sturb
ldaxrb
ldxrb
stlxrb
stxrb
ldrsb
ldtrsb
ldursb
fsub
shsub
uhsub
fmsub
fnmsub
sqsub
uqsub
sha1c
aesimc
aesmc
csinc
fabd
sabd
uabd
fadd
srhadd
urhadd
shadd
uhadd
fmadd
fnmadd
usqadd
suqadd
aesd
facge
fcmge
fcmle
frecpe
urecpe
fccmpe
fcmpe
aese
frsqrte
ursqrte
scvtf
ucvtf
fneg
sqneg
csneg
sha1h
crc32h
sha256h
crc32ch
sqdmulh
sqrdmulh
smulh
umulh
ldarh
ldrh
stlrh
ldtrh
strh
sttrh
ldurh
sturh
ldaxrh
ldxrh
stlxrh
stxrh
ldrsh
ldtrsh
ldursh
cmhi
mvni
frinti
movi
movk
sabal
uabal
sqdmlal
smlal
umlal
smsubl
umsubl
ssubl
usubl
sabdl
uabdl
smaddl
umaddl
saddl
uaddl
fcsel
sqshl
uqshl
sqrshl
uqrshl
srshl
urshl
sshl
ushl
sshll
ushll
sqdmull
pmull
smull
umull
sqdmlsl
smlsl
umlsl
sysl
fcvtl
fmul
fnmul
pmul
sha1m
sbfm
ubfm
prfm
fminnm
fmaxnm
frintm
prfum
rsubhn
raddhn
fmin
smin
umin
ccmn
sqshrn
uqshrn
sqrshrn
uqrshrn
frintn
fcvtn
sqxtn
uqxtn
sqshrun
sqrshrun
sqxtun
movn
fcvtxn
sha1p
faddp
sadalp
uadalp
saddlp
uaddlp
fccmp
fcmp
fminnmp
fmaxnmp
ldnp
fminp
sminp
uminp
stnp
adrp
frintp
ldaxp
fmaxp
smaxp
umaxp
ldxp
stlxp
stxp
fcmeq
ld1r
ld2r
ld3r
ld4r
ldar
srshr
urshr
sshr
ushr
stlr
ldtr
sttr
extr
ldur
stur
ldaxr
ldxr
stlxr
stxr
fcvtas
fabs
sqabs
subs
sbcs
adcs
bics
adds
ands
cmhs
fmls
fcvtms
fcvtns
frecps
fcvtps
frsqrts
fcvtzs
facgt
fcmgt
rbit
fcmlt
fsqrt
cmtst
fcvt
fcvtau
sqshlu
fcvtmu
fcvtnu
fcvtpu
fcvtzu
addv
fdiv
sdiv
udiv
saddlv
uaddlv
fminnmv
fmaxnmv
fminv
sminv
uminv
csinv
fmov
smov
umov
fmaxv
smaxv
umaxv
crc32w
ssubw
usubw
crc32cw
saddw
uaddw
ldpsw
ldrsw
ldtrsw
ldursw
crc32x
fmax
smax
umax
crc32cx
clrex
fmulx
frecpx
frintx
cbnz
tbnz
frintz
movz
.tlsdesccall 
hint 
LIFETIME_END
BUNDLE
DBG_VALUE
LIFETIME_START
drps
eret
D7_D8_D9_D10
Q7_Q8_Q9_Q10
D17_D18_D19_D20
Q17_Q18_Q19_Q20
D27_D28_D29_D30
Q27_Q28_Q29_Q30
D29_D30_D31_D0
Q29_Q30_Q31_Q0
D8_D9_D10_D11
Q8_Q9_Q10_Q11
D18_D19_D20_D21
Q18_Q19_Q20_Q21
D28_D29_D30_D31
Q28_Q29_Q30_Q31
D30_D31_D0_D1
Q30_Q31_Q0_Q1
D9_D10_D11_D12
Q9_Q10_Q11_Q12
D19_D20_D21_D22
Q19_Q20_Q21_Q22
D31_D0_D1_D2
Q31_Q0_Q1_Q2
D10_D11_D12_D13
Q10_Q11_Q12_Q13
D20_D21_D22_D23
Q20_Q21_Q22_Q23
D0_D1_D2_D3
Q0_Q1_Q2_Q3
D11_D12_D13_D14
Q11_Q12_Q13_Q14
D21_D22_D23_D24
Q21_Q22_Q23_Q24
D1_D2_D3_D4
Q1_Q2_Q3_Q4
D12_D13_D14_D15
Q12_Q13_Q14_Q15
D22_D23_D24_D25
Q22_Q23_Q24_Q25
D2_D3_D4_D5
Q2_Q3_Q4_Q5
D13_D14_D15_D16
Q13_Q14_Q15_Q16
D23_D24_D25_D26
Q23_Q24_Q25_Q26
D3_D4_D5_D6
Q3_Q4_Q5_Q6
D14_D15_D16_D17
Q14_Q15_Q16_Q17
D24_D25_D26_D27
Q24_Q25_Q26_Q27
D4_D5_D6_D7
Q4_Q5_Q6_Q7
D15_D16_D17_D18
Q15_Q16_Q17_Q18
D25_D26_D27_D28
Q25_Q26_Q27_Q28
D5_D6_D7_D8
Q5_Q6_Q7_Q8
D16_D17_D18_D19
Q16_Q17_Q18_Q19
D26_D27_D28_D29
Q26_Q27_Q28_Q29
D6_D7_D8_D9
Q6_Q7_Q8_Q9
nzcv
Y0j2
dcps1
rev32
fcvtl2
fcvtn2
fcvtxn2
dcps2
dcps3
rev16
srsra
ursra
ssra
usra
frinta
ins.b
smov.b
umov.b
crc32b
trn1.16b
zip1.16b
uzp1.16b
rev32.16b
rsubhn2.16b
raddhn2.16b
sqshrn2.16b
uqshrn2.16b
sqrshrn2.16b
uqrshrn2.16b
trn2.16b
sqxtn2.16b
uqxtn2.16b
sqshrun2.16b
sqrshrun2.16b
sqxtun2.16b
zip2.16b
uzp2.16b
rev64.16b
rev16.16b
saba.16b
uaba.16b
mla.16b
srsra.16b
ursra.16b
ssra.16b
usra.16b
shsub.16b
uhsub.16b
sqsub.16b
uqsub.16b
bic.16b
aesimc.16b
aesmc.16b
sabd.16b
uabd.16b
srhadd.16b
urhadd.16b
shadd.16b
uhadd.16b
usqadd.16b
suqadd.16b
and.16b
aesd.16b
cmge.16b
cmle.16b
aese.16b
bif.16b
sqneg.16b
cmhi.16b
sli.16b
sri.16b
movi.16b
sqshl.16b
uqshl.16b
sqrshl.16b
uqrshl.16b
srshl.16b
urshl.16b
sshl.16b
ushl.16b
bsl.16b
pmul.16b
smin.16b
umin.16b
orn.16b
addp.16b
sminp.16b
uminp.16b
dup.16b
smaxp.16b
umaxp.16b
cmeq.16b
srshr.16b
urshr.16b
sshr.16b
ushr.16b
eor.16b
orr.16b
sqabs.16b
cmhs.16b
cls.16b
mls.16b
cmgt.16b
rbit.16b
cmlt.16b
cnt.16b
not.16b
cmtst.16b
ext.16b
sqshlu.16b
addv.16b
saddlv.16b
uaddlv.16b
sminv.16b
uminv.16b
smaxv.16b
umaxv.16b
smax.16b
umax.16b
clz.16b
trn1.8b
zip1.8b
uzp1.8b
rev32.8b
trn2.8b
zip2.8b
uzp2.8b
rev64.8b
rev16.8b
saba.8b
uaba.8b
mla.8b
srsra.8b
ursra.8b
ssra.8b
usra.8b
shsub.8b
uhsub.8b
sqsub.8b
uqsub.8b
bic.8b
sabd.8b
uabd.8b
srhadd.8b
urhadd.8b
shadd.8b
uhadd.8b
usqadd.8b
suqadd.8b
and.8b
cmge.8b
cmle.8b
bif.8b
sqneg.8b
cmhi.8b
sli.8b
sri.8b
movi.8b
sqshl.8b
uqshl.8b
sqrshl.8b
uqrshl.8b
srshl.8b
urshl.8b
sshl.8b
ushl.8b
bsl.8b
pmul.8b
rsubhn.8b
raddhn.8b
smin.8b
umin.8b
sqshrn.8b
uqshrn.8b
sqrshrn.8b
uqrshrn.8b
orn.8b
sqxtn.8b
uqxtn.8b
sqshrun.8b
sqrshrun.8b
sqxtun.8b
addp.8b
sminp.8b
uminp.8b
dup.8b
smaxp.8b
umaxp.8b
cmeq.8b
srshr.8b
urshr.8b
sshr.8b
ushr.8b
eor.8b
orr.8b
sqabs.8b
cmhs.8b
cls.8b
mls.8b
cmgt.8b
rbit.8b
cmlt.8b
cnt.8b
not.8b
cmtst.8b
ext.8b
sqshlu.8b
addv.8b
saddlv.8b
uaddlv.8b
sminv.8b
uminv.8b
smaxv.8b
umaxv.8b
smax.8b
umax.8b
clz.8b
crc32cb
ldarb
ldrb
stlrb
ldtrb
strb
sttrb
ldurb
sturb
ldaxrb
ldxrb
stlxrb
stxrb
ldrsb
ldtrsb
ldursb
fsub
fmsub
fnmsub
sqsub
uqsub
csinc
fmla.d
fmul.d
fmls.d
ins.d
fmov.d
umov.d
fmulx.d
sadalp.1d
uadalp.1d
saddlp.1d
uaddlp.1d
trn1.2d
zip1.2d
uzp1.2d
sabal2.2d
uabal2.2d
sqdmlal2.2d
smlal2.2d
umlal2.2d
ssubl2.2d
usubl2.2d
sabdl2.2d
uabdl2.2d
saddl2.2d
uaddl2.2d
sshll2.2d
ushll2.2d
sqdmull2.2d
smull2.2d
umull2.2d
sqdmlsl2.2d
smlsl2.2d
umlsl2.2d
trn2.2d
zip2.2d
uzp2.2d
ssubw2.2d
usubw2.2d
saddw2.2d
uaddw2.2d
fmla.2d
srsra.2d
ursra.2d
ssra.2d
usra.2d
frinta.2d
fsub.2d
sqsub.2d
uqsub.2d
fabd.2d
fadd.2d
usqadd.2d
suqadd.2d
facge.2d
fcmge.2d
fcmle.2d
frecpe.2d
frsqrte.2d
scvtf.2d
ucvtf.2d
fneg.2d
sqneg.2d
cmhi.2d
sli.2d
sri.2d
frinti.2d
movi.2d
sabal.2d
uabal.2d
sqdmlal.2d
smlal.2d
umlal.2d
ssubl.2d
usubl.2d
sabdl.2d
uabdl.2d
saddl.2d
uaddl.2d
sqshl.2d
uqshl.2d
sqrshl.2d
uqrshl.2d
srshl.2d
urshl.2d
sshl.2d
ushl.2d
sshll.2d
ushll.2d
sqdmull.2d
smull.2d
umull.2d
sqdmlsl.2d
smlsl.2d
umlsl.2d
fmul.2d
fminnm.2d
fmaxnm.2d
frintm.2d
fmin.2d
frintn.2d
faddp.2d
sadalp.2d
uadalp.2d
saddlp.2d
uaddlp.2d
fminnmp.2d
fmaxnmp.2d
fminp.2d
frintp.2d
dup.2d
fmaxp.2d
fcmeq.2d
srshr.2d
urshr.2d
sshr.2d
ushr.2d
fcvtas.2d
fabs.2d
sqabs.2d
cmhs.2d
fmls.2d
fcvtms.2d
fcvtns.2d
frecps.2d
fcvtps.2d
frsqrts.2d
fcvtzs.2d
facgt.2d
fcmgt.2d
fcmlt.2d
fsqrt.2d
cmtst.2d
fcvtau.2d
sqshlu.2d
fcvtmu.2d
fcvtnu.2d
fcvtpu.2d
fcvtzu.2d
fdiv.2d
fmov.2d
ssubw.2d
usubw.2d
saddw.2d
uaddw.2d
fmax.2d
fmulx.2d
frintx.2d
frintz.2d
fabd
fadd
fmadd
fnmadd
usqadd
suqadd
facge
fcmge
fcmle
frecpe
fccmpe
fcmpe
frsqrte
scvtf
ucvtf
fneg
sqneg
csneg
sqdmulh.h
sqrdmulh.h
sqdmlal.h
sqdmull.h
sqdmlsl.h
ins.h
smov.h
umov.h
sha1h
crc32h
trn1.4h
zip1.4h
uzp1.4h
rev32.4h
trn2.4h
zip2.4h
uzp2.4h
rev64.4h
saba.4h
uaba.4h
mla.4h
srsra.4h
ursra.4h
ssra.4h
usra.4h
shsub.4h
uhsub.4h
sqsub.4h
uqsub.4h
bic.4h
sabd.4h
uabd.4h
srhadd.4h
urhadd.4h
shadd.4h
uhadd.4h
usqadd.4h
suqadd.4h
cmge.4h
cmle.4h
sqneg.4h
sqdmulh.4h
sqrdmulh.4h
cmhi.4h
sli.4h
mvni.4h
sri.4h
movi.4h
sqshl.4h
uqshl.4h
sqrshl.4h
uqrshl.4h
srshl.4h
urshl.4h
sshl.4h
ushl.4h
mul.4h
rsubhn.4h
raddhn.4h
smin.4h
umin.4h
sqshrn.4h
uqshrn.4h
sqrshrn.4h
uqrshrn.4h
sqxtn.4h
uqxtn.4h
sqshrun.4h
sqrshrun.4h
sqxtun.4h
addp.4h
sadalp.4h
uadalp.4h
saddlp.4h
uaddlp.4h
sminp.4h
uminp.4h
dup.4h
smaxp.4h
umaxp.4h
cmeq.4h
srshr.4h
urshr.4h
sshr.4h
ushr.4h
orr.4h
sqabs.4h
cmhs.4h
cls.4h
mls.4h
cmgt.4h
cmlt.4h
cmtst.4h
sqshlu.4h
addv.4h
saddlv.4h
uaddlv.4h
sminv.4h
uminv.4h
smaxv.4h
umaxv.4h
smax.4h
umax.4h
clz.4h
trn1.8h
zip1.8h
uzp1.8h
rev32.8h
sabal2.8h
uabal2.8h
smlal2.8h
umlal2.8h
ssubl2.8h
usubl2.8h
sabdl2.8h
uabdl2.8h
saddl2.8h
uaddl2.8h
sshll2.8h
ushll2.8h
pmull2.8h
smull2.8h
umull2.8h
smlsl2.8h
umlsl2.8h
rsubhn2.8h
raddhn2.8h
sqshrn2.8h
uqshrn2.8h
sqrshrn2.8h
uqrshrn2.8h
trn2.8h
sqxtn2.8h
uqxtn2.8h
sqshrun2.8h
sqrshrun2.8h
sqxtun2.8h
zip2.8h
uzp2.8h
ssubw2.8h
usubw2.8h
saddw2.8h
uaddw2.8h
rev64.8h
saba.8h
uaba.8h
mla.8h
srsra.8h
ursra.8h
ssra.8h
usra.8h
shsub.8h
uhsub.8h
sqsub.8h
uqsub.8h
bic.8h
sabd.8h
uabd.8h
srhadd.8h
urhadd.8h
shadd.8h
uhadd.8h
usqadd.8h
suqadd.8h
cmge.8h
cmle.8h
sqneg.8h
sqdmulh.8h
sqrdmulh.8h
cmhi.8h
sli.8h
mvni.8h
sri.8h
movi.8h
sabal.8h
uabal.8h
smlal.8h
umlal.8h
ssubl.8h
usubl.8h
sabdl.8h
uabdl.8h
saddl.8h
uaddl.8h
sqshl.8h
uqshl.8h
sqrshl.8h
uqrshl.8h
srshl.8h
urshl.8h
sshl.8h
ushl.8h
sshll.8h
ushll.8h
pmull.8h
smull.8h
umull.8h
smlsl.8h
umlsl.8h
mul.8h
smin.8h
umin.8h
addp.8h
sadalp.8h
uadalp.8h
saddlp.8h
uaddlp.8h
sminp.8h
uminp.8h
dup.8h
smaxp.8h
umaxp.8h
cmeq.8h
srshr.8h
urshr.8h
sshr.8h
ushr.8h
orr.8h
sqabs.8h
cmhs.8h
cls.8h
mls.8h
cmgt.8h
cmlt.8h
cmtst.8h
sqshlu.8h
addv.8h
saddlv.8h
uaddlv.8h
sminv.8h
uminv.8h
smaxv.8h
umaxv.8h
ssubw.8h
usubw.8h
saddw.8h
uaddw.8h
smax.8h
umax.8h
clz.8h
crc32ch
sqdmulh
sqrdmulh
smulh
umulh
ldarh
ldrh
stlrh
ldtrh
strh
sttrh
ldurh
sturh
ldaxrh
ldxrh
stlxrh
stxrh
ldrsh
ldtrsh
ldursh
cmhi
frinti
movi
movk
sqdmlal
smsubl
umsubl
smaddl
umaddl
fcsel
sqshl
uqshl
sqrshl
uqrshl
srshl
urshl
sshl
ushl
sqdmull
sqdmlsl
sysl
fcvtl
fmul
fnmul
sbfm
ubfm
prfm
fminnm
fmaxnm
frintm
prfum
fmin
ccmn
sqshrn
uqshrn
sqrshrn
uqrshrn
frintn
fcvtn
sqxtn
uqxtn
sqshrun
sqrshrun
sqxtun
movn
fcvtxn
fccmp
fcmp
ldnp
stnp
adrp
frintp
ldaxp
ldxp
stlxp
stxp
pmull2.1q
pmull.1q
fcmeq
ld1r
ld2r
ld3r
ld4r
ldar
srshr
urshr
sshr
ushr
stlr
ldtr
sttr
extr
ldur
stur
ldaxr
ldxr
stlxr
stxr
fmla.s
sqdmulh.s
sqrdmulh.s
sqdmlal.s
sqdmull.s
sqdmlsl.s
fmul.s
fmls.s
ins.s
smov.s
umov.s
fmulx.s
trn1.2s
zip1.2s
uzp1.2s
trn2.2s
zip2.2s
uzp2.2s
rev64.2s
saba.2s
uaba.2s
fmla.2s
srsra.2s
ursra.2s
ssra.2s
usra.2s
frinta.2s
fsub.2s
shsub.2s
uhsub.2s
sqsub.2s
uqsub.2s
bic.2s
fabd.2s
sabd.2s
uabd.2s
fadd.2s
srhadd.2s
urhadd.2s
shadd.2s
uhadd.2s
usqadd.2s
suqadd.2s
facge.2s
fcmge.2s
fcmle.2s
frecpe.2s
urecpe.2s
frsqrte.2s
ursqrte.2s
scvtf.2s
ucvtf.2s
fneg.2s
sqneg.2s
sqdmulh.2s
sqrdmulh.2s
cmhi.2s
sli.2s
mvni.2s
sri.2s
frinti.2s
movi.2s
sqshl.2s
uqshl.2s
sqrshl.2s
uqrshl.2s
srshl.2s
urshl.2s
sshl.2s
ushl.2s
fmul.2s
fminnm.2s
fmaxnm.2s
frintm.2s
rsubhn.2s
raddhn.2s
fmin.2s
smin.2s
umin.2s
sqshrn.2s
uqshrn.2s
sqrshrn.2s
uqrshrn.2s
frintn.2s
sqxtn.2s
uqxtn.2s
sqshrun.2s
sqrshrun.2s
sqxtun.2s
faddp.2s
sadalp.2s
uadalp.2s
saddlp.2s
uaddlp.2s
fminnmp.2s
fmaxnmp.2s
fminp.2s
sminp.2s
uminp.2s
frintp.2s
dup.2s
fmaxp.2s
smaxp.2s
umaxp.2s
fcmeq.2s
srshr.2s
urshr.2s
sshr.2s
ushr.2s
orr.2s
fcvtas.2s
fabs.2s
sqabs.2s
cmhs.2s
cls.2s
fmls.2s
fcvtms.2s
fcvtns.2s
frecps.2s
fcvtps.2s
frsqrts.2s
fcvtzs.2s
facgt.2s
fcmgt.2s
fcmlt.2s
fsqrt.2s
cmtst.2s
fcvtau.2s
sqshlu.2s
fcvtmu.2s
fcvtnu.2s
fcvtpu.2s
fcvtzu.2s
fdiv.2s
fmov.2s
fmax.2s
smax.2s
umax.2s
fmulx.2s
frintx.2s
clz.2s
frintz.2s
sha1su0.4s
sha256su0.4s
trn1.4s
zip1.4s
uzp1.4s
sha1su1.4s
sha256su1.4s
sha256h2.4s
sabal2.4s
uabal2.4s
sqdmlal2.4s
smlal2.4s
umlal2.4s
ssubl2.4s
usubl2.4s
sabdl2.4s
uabdl2.4s
saddl2.4s
uaddl2.4s
sshll2.4s
ushll2.4s
sqdmull2.4s
smull2.4s
umull2.4s
sqdmlsl2.4s
smlsl2.4s
umlsl2.4s
rsubhn2.4s
raddhn2.4s
sqshrn2.4s
uqshrn2.4s
sqrshrn2.4s
uqrshrn2.4s
trn2.4s
sqxtn2.4s
uqxtn2.4s
sqshrun2.4s
sqrshrun2.4s
sqxtun2.4s
zip2.4s
uzp2.4s
ssubw2.4s
usubw2.4s
saddw2.4s
uaddw2.4s
rev64.4s
saba.4s
uaba.4s
fmla.4s
srsra.4s
ursra.4s
ssra.4s
usra.4s
frinta.4s
fsub.4s
shsub.4s
uhsub.4s
sqsub.4s
uqsub.4s
sha1c.4s
bic.4s
fabd.4s
sabd.4s
uabd.4s
fadd.4s
srhadd.4s
urhadd.4s
shadd.4s
uhadd.4s
usqadd.4s
suqadd.4s
facge.4s
fcmge.4s
fcmle.4s
frecpe.4s
urecpe.4s
frsqrte.4s
ursqrte.4s
scvtf.4s
ucvtf.4s
fneg.4s
sqneg.4s
sha256h.4s
sqdmulh.4s
sqrdmulh.4s
cmhi.4s
sli.4s
mvni.4s
sri.4s
frinti.4s
movi.4s
sabal.4s
uabal.4s
sqdmlal.4s
smlal.4s
umlal.4s
ssubl.4s
usubl.4s
sabdl.4s
uabdl.4s
saddl.4s
uaddl.4s
sqshl.4s
uqshl.4s
sqrshl.4s
uqrshl.4s
srshl.4s
urshl.4s
sshl.4s
ushl.4s
sshll.4s
ushll.4s
sqdmull.4s
smull.4s
umull.4s
sqdmlsl.4s
smlsl.4s
umlsl.4s
fmul.4s
sha1m.4s
fminnm.4s
fmaxnm.4s
frintm.4s
fmin.4s
smin.4s
umin.4s
frintn.4s
sha1p.4s
faddp.4s
sadalp.4s
uadalp.4s
saddlp.4s
uaddlp.4s
fminnmp.4s
fmaxnmp.4s
fminp.4s
sminp.4s
uminp.4s
frintp.4s
dup.4s
fmaxp.4s
smaxp.4s
umaxp.4s
fcmeq.4s
srshr.4s
urshr.4s
sshr.4s
ushr.4s
orr.4s
fcvtas.4s
fabs.4s
sqabs.4s
cmhs.4s
cls.4s
fmls.4s
fcvtms.4s
fcvtns.4s
frecps.4s
fcvtps.4s
frsqrts.4s
fcvtzs.4s
facgt.4s
fcmgt.4s
fcmlt.4s
fsqrt.4s
cmtst.4s
fcvtau.4s
sqshlu.4s
fcvtmu.4s
fcvtnu.4s
fcvtpu.4s
fcvtzu.4s
addv.4s
fdiv.4s
saddlv.4s
uaddlv.4s
fminnmv.4s
fmaxnmv.4s
fminv.4s
sminv.4s
uminv.4s
fmov.4s
fmaxv.4s
smaxv.4s
umaxv.4s
ssubw.4s
usubw.4s
saddw.4s
uaddw.4s
fmax.4s
smax.4s
umax.4s
fmulx.4s
frintx.4s
clz.4s
frintz.4s
fcvtas
fabs
sqabs
subs
sbcs
adcs
bics
adds
ands
cmhs
fcvtms
fcvtns
frecps
fcvtps
frsqrts
fcvtzs
facgt
fcmgt
rbit
fcmlt
fsqrt
cmtst
fcvt
fcvtau
sqshlu
fcvtmu
fcvtnu
fcvtpu
fcvtzu
fdiv
sdiv
udiv
csinv
fmov
crc32w
crc32cw
ldpsw
ldrsw
ldtrsw
ldursw
crc32x
fmax
crc32cx
clrex
fmulx
frecpx
frintx
cbnz
tbnz
frintz
movz
.tlsdesccall 
hint 
LIFETIME_END
BUNDLE
DBG_VALUE
LIFETIME_START
drps
eret
D7_D8_D9_D10
Q7_Q8_Q9_Q10
D17_D18_D19_D20
Q17_Q18_Q19_Q20
D27_D28_D29_D30
Q27_Q28_Q29_Q30
D29_D30_D31_D0
Q29_Q30_Q31_Q0
D8_D9_D10_D11
Q8_Q9_Q10_Q11
D18_D19_D20_D21
Q18_Q19_Q20_Q21
D28_D29_D30_D31
Q28_Q29_Q30_Q31
D30_D31_D0_D1
Q30_Q31_Q0_Q1
D9_D10_D11_D12
Q9_Q10_Q11_Q12
D19_D20_D21_D22
Q19_Q20_Q21_Q22
D31_D0_D1_D2
Q31_Q0_Q1_Q2
D10_D11_D12_D13
Q10_Q11_Q12_Q13
D20_D21_D22_D23
Q20_Q21_Q22_Q23
D0_D1_D2_D3
Q0_Q1_Q2_Q3
D11_D12_D13_D14
Q11_Q12_Q13_Q14
D21_D22_D23_D24
Q21_Q22_Q23_Q24
D1_D2_D3_D4
Q1_Q2_Q3_Q4
D12_D13_D14_D15
Q12_Q13_Q14_Q15
D22_D23_D24_D25
Q22_Q23_Q24_Q25
D2_D3_D4_D5
Q2_Q3_Q4_Q5
D13_D14_D15_D16
Q13_Q14_Q15_Q16
D23_D24_D25_D26
Q23_Q24_Q25_Q26
D3_D4_D5_D6
Q3_Q4_Q5_Q6
D14_D15_D16_D17
Q14_Q15_Q16_Q17
D24_D25_D26_D27
Q24_Q25_Q26_Q27
D4_D5_D6_D7
Q4_Q5_Q6_Q7
D15_D16_D17_D18
Q15_Q16_Q17_Q18
D25_D26_D27_D28
Q25_Q26_Q27_Q28
D5_D6_D7_D8
Q5_Q6_Q7_Q8
D16_D17_D18_D19
Q16_Q17_Q18_Q19
D26_D27_D28_D29
Q26_Q27_Q28_Q29
D6_D7_D8_D9
Q6_Q7_Q8_Q9
nzcv
N4llvm18AArch64InstPrinterE
N4llvm23AArch64AppleInstPrinterE
N4llvm14format_object1IxEE
N4llvm14format_object1IfEE
N4llvm14format_object1IyEE
GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGG
N4llvm15X86Disassembler22X86GenericDisassemblerE
hknqtw
>ADGJM
_behkn
(+.147
j%%%%%%
%%%%%%%
S_jIlo
*,.000000000000000000000000000000000000000000000BBB""""68
000:=@0#
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!""##$$$$&&''((((%%%%%%%%))))))))""##$$$$&&''((((%%%%%%%%))))))))""##$$$$&&''((((%%%%%%%%))))))))""##$$$$&&''((((%%%%%%%%))))))))""##$$$$&&''((((%%%%%%%%))))))))""##$$$$&&''((((%%%%%%%%))))))))""##$$$$&&''((((%%%%%%%%))))))))""##$$$$&&''((((%%%%%%%%))))))))
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!**++,,,,..//0000--------11111111**++,,,,..//0000--------11111111**++,,,,..//0000--------11111111**++,,,,..//0000--------11111111**++,,,,..//0000--------11111111**++,,,,..//0000--------11111111**++,,,,..//0000--------11111111**++,,,,..//0000--------11111111
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!2233444466778888555555559999999922334444667788885555555599999999223344446677888855555555999999992233444466778888555555559999999922334444667788885555555599999999223344446677888855555555999999992233444466778888555555559999999922334444667788885555555599999999
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!2233444466778888555555559999999922334444667788885555555599999999223344446677888855555555999999992233444466778888555555559999999922334444667788885555555599999999223344446677888855555555999999992233444466778888555555559999999922334444667788885555555599999999
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!::;;<<<<>>??@@@@========AAAAAAAA::;;<<<<>>??@@@@========AAAAAAAA::;;<<<<>>??@@@@========AAAAAAAA::;;<<<<>>??@@@@========AAAAAAAA::;;<<<<>>??@@@@========AAAAAAAA::;;<<<<>>??@@@@========AAAAAAAA::;;<<<<>>??@@@@========AAAAAAAA::;;<<<<>>??@@@@========AAAAAAAA
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!BBCCDDDDFFGGHHHHEEEEEEEEIIIIIIIIBBCCDDDDFFGGHHHHEEEEEEEEIIIIIIIIBBCCDDDDFFGGHHHHEEEEEEEEIIIIIIIIBBCCDDDDFFGGHHHHEEEEEEEEIIIIIIIIBBCCDDDDFFGGHHHHEEEEEEEEIIIIIIIIBBCCDDDDFFGGHHHHEEEEEEEEIIIIIIIIBBCCDDDDFFGGHHHHEEEEEEEEIIIIIIIIBBCCDDDDFFGGHHHHEEEEEEEEIIIIIIII
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!JJKKLLLLNNOOPPPPMMMMMMMMQQQQQQQQJJKKLLLLNNOOPPPPMMMMMMMMQQQQQQQQJJKKLLLLNNOOPPPPMMMMMMMMQQQQQQQQJJKKLLLLNNOOPPPPMMMMMMMMQQQQQQQQJJKKLLLLNNOOPPPPMMMMMMMMQQQQQQQQJJKKLLLLNNOOPPPPMMMMMMMMQQQQQQQQJJKKLLLLNNOOPPPPMMMMMMMMQQQQQQQQJJKKLLLLNNOOPPPPMMMMMMMMQQQQQQQQ
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!JJKKLLLLNNOOPPPPMMMMMMMMQQQQQQQQJJKKLLLLNNOOPPPPMMMMMMMMQQQQQQQQJJKKLLLLNNOOPPPPMMMMMMMMQQQQQQQQJJKKLLLLNNOOPPPPMMMMMMMMQQQQQQQQJJKKLLLLNNOOPPPPMMMMMMMMQQQQQQQQJJKKLLLLNNOOPPPPMMMMMMMMQQQQQQQQJJKKLLLLNNOOPPPPMMMMMMMMQQQQQQQQJJKKLLLLNNOOPPPPMMMMMMMMQQQQQQQQ
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!RRSSTTTTVVWWXXXXUUUUUUUUYYYYYYYYRRSSTTTTVVWWXXXXUUUUUUUUYYYYYYYYRRSSTTTTVVWWXXXXUUUUUUUUYYYYYYYYRRSSTTTTVVWWXXXXUUUUUUUUYYYYYYYYRRSSTTTTVVWWXXXXUUUUUUUUYYYYYYYYRRSSTTTTVVWWXXXXUUUUUUUUYYYYYYYYRRSSTTTTVVWWXXXXUUUUUUUUYYYYYYYYRRSSTTTTVVWWXXXXUUUUUUUUYYYYYYYY
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!ZZ[[\\\\^^__````]]]]]]]]aaaaaaaaZZ[[\\\\^^__````]]]]]]]]aaaaaaaaZZ[[\\\\^^__````]]]]]]]]aaaaaaaaZZ[[\\\\^^__````]]]]]]]]aaaaaaaaZZ[[\\\\^^__````]]]]]]]]aaaaaaaaZZ[[\\\\^^__````]]]]]]]]aaaaaaaaZZ[[\\\\^^__````]]]]]]]]aaaaaaaaZZ[[\\\\^^__````]]]]]]]]aaaaaaaa
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!bbccddddffgghhhheeeeeeeeiiiiiiiibbccddddffgghhhheeeeeeeeiiiiiiiibbccddddffgghhhheeeeeeeeiiiiiiiibbccddddffgghhhheeeeeeeeiiiiiiiibbccddddffgghhhheeeeeeeeiiiiiiiibbccddddffgghhhheeeeeeeeiiiiiiiibbccddddffgghhhheeeeeeeeiiiiiiiibbccddddffgghhhheeeeeeeeiiiiiiii
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!bbccddddffgghhhheeeeeeeeiiiiiiiibbccddddffgghhhheeeeeeeeiiiiiiiibbccddddffgghhhheeeeeeeeiiiiiiiibbccddddffgghhhheeeeeeeeiiiiiiiibbccddddffgghhhheeeeeeeeiiiiiiiibbccddddffgghhhheeeeeeeeiiiiiiiibbccddddffgghhhheeeeeeeeiiiiiiiibbccddddffgghhhheeeeeeeeiiiiiiii
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!jjkkllllnnooppppmmmmmmmmqqqqqqqqjjkkllllnnooppppmmmmmmmmqqqqqqqqjjkkllllnnooppppmmmmmmmmqqqqqqqqjjkkllllnnooppppmmmmmmmmqqqqqqqqjjkkllllnnooppppmmmmmmmmqqqqqqqqjjkkllllnnooppppmmmmmmmmqqqqqqqqjjkkllllnnooppppmmmmmmmmqqqqqqqqjjkkllllnnooppppmmmmmmmmqqqqqqqq
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!rrssttttvvwwxxxxuuuuuuuuyyyyyyyyrrssttttvvwwxxxxuuuuuuuuyyyyyyyyrrssttttvvwwxxxxuuuuuuuuyyyyyyyyrrssttttvvwwxxxxuuuuuuuuyyyyyyyyrrssttttvvwwxxxxuuuuuuuuyyyyyyyyrrssttttvvwwxxxxuuuuuuuuyyyyyyyyrrssttttvvwwxxxxuuuuuuuuyyyyyyyyrrssttttvvwwxxxxuuuuuuuuyyyyyyyy
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!zz{{||||~~
}}}}}}}}
zz{{||||~~
}}}}}}}}
zz{{||||~~
}}}}}}}}
zz{{||||~~
}}}}}}}}
zz{{||||~~
}}}}}}}}
zz{{||||~~
}}}}}}}}
zz{{||||~~
}}}}}}}}
zz{{||||~~
}}}}}}}}
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!zz{{||||~~
}}}}}}}}
zz{{||||~~
}}}}}}}}
zz{{||||~~
}}}}}}}}
zz{{||||~~
}}}}}}}}
zz{{||||~~
}}}}}}}}
zz{{||||~~
}}}}}}}}
zz{{||||~~
}}}}}}}}
zz{{||||~~
}}}}}}}}
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
    
!!!!!!!!
>?vwNO
FG`a+
89jk*+
./%
TY
:;rsJK45fg&'
\]
UV
<=tuLM
DE)
z{RS
67hi()a
no23
BCpqHI@
xyPQ
@Ade$%
,-#
lm01
bc!"
^_5
|}3
Z[
WX 
 m
;;;;;
;;;;;;;;;
;;;;;;;;;
;;;;;;;;;;;@@;;;;;;;;;@;;;;;;;;;;
;;;;;
;;;;
N4llvm21X86AsmInstrumentationE
N4llvm12_GLOBAL__N_121X86AddressSanitizer32E
N4llvm12_GLOBAL__N_119X86AddressSanitizerE
N4llvm12_GLOBAL__N_121X86AddressSanitizer64E
4;JWg{
                                                     
N12_GLOBAL__N_112X86AsmParserE
N4llvm10X86OperandE
bbHH
~MM
~MM
~MM
bMMM
bkMM
bMMM
bMMM
bMMM
bkMM
bMMM
bMMM
aHHH
aJJJ
aiHH
ajJJ
aHHH
aJJJ
aiHH
ajJJ
HHHH
HiHH
JJJJ
JjJJ
HHHH
HiHH
JJJJ
JjJJ
bHHH
bJJJ
bMMO
biHH
bjJJ
bkMO
bHHH
bJJJ
bMMO
biHH
bjJJ
bkMO
bHHH
bIIO
b~HH
b~IO
bHHH
bIIO
b|HH
b|IO
~MM
~MM
~MM
aHHH
aiHH
aHHH
aJJJ
aiHH
ajJJ
~MM
~MM
HHHH
HiHH
JJJJ
JjJJ
iHHH
jJJJ
HHHH
HiHH
JJJJ
JjJJ
iHHH
jJJJ
HHHH
H~HH
~HHH
HHHH
H|HH
|HHH
~MM
~MM
HHHH
HiHH
JJJJ
JjJJ
iHHH
jJJJ
HHHH
HiHH
JJJJ
JjJJ
iHHH
jJJJ
~MM
~MM
~MM
~MM
HHHH
HiHH
JJJJ
JjJJ
iHHH
jJJJ
HHHH
HiHH
JJJJ
JjJJ
iHHH
jJJJ
HHHH
HiHH
JJJJ
JjJJ
iHHH
jJJJ
HHHH
HiHH
JJJJ
JjJJ
iHHH
jJJJ
HHHH
H~HH
~HHH
HHHH
H|HH
|HHH
~MM
~MM
HHHH
HiHH
JJJJ
JjJJ
iHHH
jJJJ
HHHH
HiHH
JJJJ
JjJJ
iHHH
jJJJ
HHHH
H~HH
~HHH
HHHH
H|HH
|HHH
~MM
~MM
HHHH
HiHH
JJJJ
JjJJ
iHHH
jJJJ
HHHH
HiHH
JJJJ
JjJJ
iHHH
jJJJ
HHHH
H~HH
~HHH
HHHH
H|HH
|HHH
bHJJ
biJJ
bIMM
biMM
bKMM
bjMM
bHJJ
biJJ
bIMM
biMM
bKMM
bjMM
aHHH
aIII
a|HH
a|II
~MM
~MM
~MM
~MM
~MM
~MM
aHHH
aJJJ
aiHH
ajJJ
~MM
~MM
~MM
~MM
~MM
~MM
bHHH
bJJJ
biHH
bjJJ
~MM
~MM
~MM
~MM
~MM
~MM
aHHH
aJJJ
aiHH
ajJJ
HHHH
HiHH
JJJJ
JjJJ
aHHH
aJJJ
aiHH
ajJJ
bHHH
biHH
HHHH
HiHH
JJJJ
JjJJ
iHHH
jJJJ
bMMO
bkMO
bMMO
bkMO
bMMO
bkMO
bMMO
bkMO
bMMO
bkMO
bMMO
bkMO
bMMO
bkMO
bMMO
bkMO
bHHH
biHH
bHHH
biHH
bHHH
biHH
bHHH
biHH
bHHH
biHH
bHHH
biHH
bHHH
biHH
bHHH
biHH
bJJJ
bjJJ
bJJJ
bjJJ
bHHHH
bHiHH
bJJJJ
bJjJJ
biHHH
bjJJJ
bHHHH
bHiHH
bJJJJ
bJjJJ
biHHH
bjJJJ
_hHH
_mHH
_*HH
_|HH
_DHH
_~HH
_hHH
_zHH
HHHH
HiHH
HHHH
HiHH
HHHH
HiHH
HHHH
HiHH
HHHH
HiHH
HHHH
HiHH
HHHH
HiHH
HHHH
HiHH
HHHH
HiHH
HHHH
HiHH
HHHH
HiHH
HHHH
HiHH
~MM
~MM
~MM
~MM
~MM
~MM
~MM
~MM
~MM
~MM
~MM
~MM
~MM
~MM
~MM
~MM
~MM
~MM
~MM
~MM
~MM
HHHH
HiHH
iHHH
~MM
~MM
~MM
~MM
~MM
~MM
_HHH
_~HH
_HHH
_|HH
bHHH
bJJJ
bMMM
biHH
bjJJ
bkMM
bHHH
bJJJ
bMMM
biHH
bjJJ
bkMM
~MM
~MM
~MM
bVHH
bVH|
HHbb
MM~
MMMb
MMkb
MMMb
MMkb
HHHa
HHia
JJJa
JJja
HHHa
HHia
JJJa
JJja
HHHH
HHiH
JJJJ
JJjJ
HHHH
HHiH
JJJJ
JJjJ
bVHHH
bVHH|
bVOII
bVOI|
OMkb
OMkb
HHHb
HHib
JJJb
JJjb
OMMb
OMkb
HHHb
HHib
JJJb
JJjb
OMMb
OMkb
HHHb
HH~b
OIIb
OI~b
HHHb
HH|b
OIIb
OI|b
MM~
HHHa
HHia
HHHa
HHia
JJJa
JJja
MM~
MM~
HHHH
HHHi
HHiH
JJJJ
JJJj
JJjJ
HHHH
HHHi
HHiH
JJJJ
JJJj
JJjJ
HHHH
HHH~
HH~H
HHHH
HHH|
HH|H
MM~
MM~
HHHH
HHHi
HHiH
JJJJ
JJJj
JJjJ
HHHH
HHHi
HHiH
JJJJ
JJJj
JJjJ
MM~
MM~
MM~
MM~
HHHH
HHHi
HHiH
JJJJ
JJJj
JJjJ
HHHH
HHHi
HHiH
JJJJ
JJJj
JJjJ
HHHH
HHHi
HHiH
JJJJ
JJJj
JJjJ
HHHH
HHHi
HHiH
JJJJ
JJJj
JJjJ
HHHH
HHH~
HH~H
HHHH
HHH|
HH|H
MM~
MM~
HHHH
HHHi
HHiH
JJJJ
JJJj
JJjJ
HHHH
HHHi
HHiH
JJJJ
JJJj
JJjJ
HHHH
HHH~
HH~H
HHHH
HHH|
HH|H
MM~
MM~
HHHH
HHHi
HHiH
JJJJ
JJJj
JJjJ
HHHH
HHHi
HHiH
JJJJ
JJJj
JJjJ
HHHH
HHH~
HH~H
HHHH
HHH|
HH|H
JJHb
JJib
MMIb
MMib
MMKb
MMjb
JJHb
JJib
MMIb
MMib
MMKb
MMjb
HHHa
HH|a
IIIa
II|a
MM~
MM~
HHHa
HHia
JJJa
JJja
MM~
MM~
HHHb
HHib
JJJb
JJjb
MM~
MM~
HHHa
HHia
JJJa
JJja
HHHH
HHiH
JJJJ
JJjJ
HHHa
HHia
JJJa
JJja
HHHb
HHib
HHHH
HHHi
HHiH
JJJJ
JJJj
JJjJ
OMMb
OMkb
OMMb
OMkb
OMMb
OMkb
OMMb
OMkb
HHHb
HHib
HHHb
HHib
HHHb
HHib
HHHb
HHib
HHHb
HHib
HHHb
HHib
HHHb
HHib
HHHb
HHib
JJJb
JJjb
JJJb
JJjb
HHHHb
HHHib
HHiHb
JJJJb
JJJjb
JJjJb
HHHHb
HHHib
HHiHb
JJJJb
JJJjb
JJjJb
HHh_
HHm_
HH*_
HH|_
HHD_
HH~_
HHh_
HHz_
HHHH
HHiH
HHHH
HHiH
HHHH
HHiH
HHHH
HHiH
HHHH
HHiH
HHHH
HHiH
HHHH
HHiH
HHHH
HHiH
HHHH
HHiH
HHHH
HHiH
HHHH
HHiH
HHHH
HHiH
MM~
MM~
MM~
MM~
MM~
MM~
MM~
HHHH
HHHi
HHiH
MM~
MM~
HHH_
HH~_
HHH_
HH|_
HHHb
HHib
JJJb
JJjb
MMMb
MMkb
HHHb
HHib
JJJb
JJjb
MMMb
MMkb
MM~
N4llvm13X86AsmPrinterE
(3R]FhLnN12_GLOBAL__N_119X86AtomicExpandPassE
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,(,,,,,,,
,,,,,,
,!,,
01111111111
11111
1111111111
111(
111111111111111 
N12_GLOBAL__N_17EmitterIN4llvm14JITCodeEmitterEEE
hhhhhhhhhhh
hhhh
hhhh
hhhhh
hhB
hhW
Wdq~
mmmmmmmmmmmmmmmmm
mmmmmmmmmmmmmmm+.?
$0Y<BN
+-+++/+++++++12
7Q777S7777777U777777777777777W>
CeCCCgCCCCCCCiCCCCCCCCCCCCCCCkCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCmJO
OOOcOOOOOOOeOOOOOOOOOOOOOOOg
<Z(E
;;;;;;;;;;;;;
;;;;;
;;;;
;;;;;;;;
Ha$f
XXXXXXXXXXXXXXXXXXXXXXXX
GXXXXXX
_____________
_____
____
________
${{{{{{{{{{{{
{{{{
{{{{{{
PN12_GLOBAL__N_111X86FastISelE
 !"#$%&'()*+,-./
N12_GLOBAL__N_13FPSE
N4llvm16X86FrameLoweringE
&,KQW]|
N12_GLOBAL__N_115X86DAGToDAGISelE
I" 
I"@
I" 
I"@
"" 
""@
"" 
""@
27`
27\
27T
27U
27
27
827i
827j
827k
827l
27v
27t
27r
27p
27j
27h
27f
27d
27`
27\
27U
27^
27W
27z
27x
27n
27l
27b
27Z
827
127x
G27M
27|
27~
XXXXXXXXXXXXXXXXXXXXXXXX
GXXXXXX
(*,98.
(*,98.
(*,9.
(*,.
(*,.
#*OQ
#*OQ
#*OQH
#*OH
#*OH
>>>>>>>>>>>
>>>
TTTTTTTT
$0Y<BN
+-+++/+++++++12
7Q777S7777777U777777777777777W>
CeCCCgCCCCCCCiCCCCCCCCCCCCCCCkCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCmJO
OOOcOOOOOOOeOOOOOOOOOOOOOOOg

uuuuuupuuuuuuuruuuuuuuuuuuuuuut
::::
66666666666666666666666666666666666666
VVVJ
&HJg
*(,ssg
$*(&
@;>9i
Q'58:
<Z(E
^^^;
.<<<<<<<<<<<<<<<<<<02m
EEEEEEEEEEEEEEEEEE1
EEEEEEEEEEEEEEEE3EEEEEEEEEEEEEE5
UUUUUUUUUUUUUUUUUU1
UUUUUUUUUUUUUUUU3UUUUUUUUUUUUUU5
HGS
HGS
[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[
'['[[[[[[[[[[[[[[[ZZZ[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[W
["+4enw[[
[[[[[
[[[[[[
[[[[[[[[[[
8
35
&&&&&&
&&&&&&&0&&&&&&&&&&&&&&&7
_____________
_____
____
________
${{{{{{{{{{{{
{{{{
{{{{{{
9>;HG=
9>;HG=
9>;H=
9>;=
9>;=
N4llvm17X86TargetLoweringE
"$&=(*,.02468:<
3$<<<<<
3$<<<<<
3$<<<<
3$<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<+<<<<+<<<<+<<<<<+
=====
=====
 =$====3=
U[aL
gf
kj
sr
wv
'&
+*
KJ
ON
/.
54
98
;:
?>
GF
YT
a`
N4llvm15X86GenInstrInfoE
N4llvm12X86InstrInfoE
N12_GLOBAL__N_14CGBRE
N12_GLOBAL__N_112LDTLSCleanupE
N4llvm10X86JITInfoE
S"(05,;
b\^l`n'd%f)+hAAA
-/jN4llvm22X86MachineFunctionInfoE
N12_GLOBAL__N_112PadShortFuncE
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
1YYY
 v YN
 vvvv
PvvvvYN
PvvPPvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvRTZDF\VXvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvRTZDF\VXRTZDF\VXRTZDF\VXooo
DFH8:^JL
DFH8:^JLDFH8:^JLDFH8:^JL
NNfNP
PfPIR
Pffff
TffffIR
TffTTfffffffffffffffffffffffffffffffffffffffffffffffffZ\^VX`bdffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffZ\^VX`bdZ\^VX`bdZ\^VX`bd
.A++
.A..
/A//
0C00
1C11
5A22
4D33
4D44
5A55
8A88
9F99
:C::
?D<<
=D==
>C>>
?D??
@F@@
AAAA
BFBB
CCCC
DDDD
EEEE
FFFF
GGGG
N4llvm18X86GenRegisterInfoE
N4llvm15X86RegisterInfoE
N4llvm2cl15OptionValueCopyIbEE
N4llvm19X86SelectionDAGInfoE
!1N4llvm19X86GenSubtargetInfoE
N4llvm12X86SubtargetE
N4llvm16X86TargetMachineE
N12_GLOBAL__N_113X86PassConfigE
N4llvm27X86_64MachoTargetObjectFileE
N4llvm24X86LinuxTargetObjectFileE
N4llvm26X86WindowsTargetObjectFileE
(((((
((((
((((((((
6666
?666 966%@6666666";66$=<.ddddL
dddNgddSndddddddPiddRk
$0Y<BN
+-+++/+++++++12
7Q777S7777777U777777777777777W>
CeCCCgCCCCCCCiCCCCCCCCCCCCCCCkCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCmJO
OOOcOOOOOOOeOOOOOOOOOOOOOOOgN12_GLOBAL__N_16X86TTIE
N12_GLOBAL__N_118VZeroUpperInserterE
N12_GLOBAL__N_112FixupLEAPassE
1      
       &               *



4B3A
3A!


$0Y<BN
+-+++/+++++++12
7Q777S7777777U777777777777777W>
CeCCCgCCCCCCCiCCCCCCCCCCCCCCCkCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCmJO
OOOcOOOOOOOeOOOOOOOOOOOOOOOg:))))))
)))))))/)))))))))))))))3
<Z(E
8
35
&&&&&&
&&&&&&&0&&&&&&&&&&&&&&&7
N12_GLOBAL__N_115WorklistRemoverE
<Z(E
$0Y<BN
+-+++/+++++++12
7Q777S7777777U777777777777777W>
CeCCCgCCCCCCCiCCCCCCCCCCCCCCCkCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCmJO
OOOcOOOOOOOeOOOOOOOOOOOOOOOg
8
35
&&&&&&
&&&&&&&0&&&&&&&&&&&&&&&7N4llvm8FastISelE
<Z(E
8
35
&&&&&&
&&&&&&&0&&&&&&&&&&&&&&&7
$0Y<BN
+-+++/+++++++12
7Q777S7777777U777777777777777W>
CeCCCgCCCCCCCiCCCCCCCCCCCCCCCkCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCmJO
OOOcOOOOOOOeOOOOOOOOOOOOOOOg
++++++++++++++++
<Er~
<Er~
<Z(E
"


 


5m
::::::::::::::::
8888888888888888
<Z(E
8
35
&&&&&&
&&&&&&&0&&&&&&&&&&&&&&&7
$0Y<BN
+-+++/+++++++12
7Q777S7777777U777777777777777W>
CeCCCgCCCCCCCiCCCCCCCCCCCCCCCkCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCmJO
OOOcOOOOOOOeOOOOOOOOOOOOOOOg
J888888
8888888B888888888888888I<&&&&&&
&&&&&&&1&&&&&&&&&&&&&&&9"
8
35
&&&&&&
&&&&&&&0&&&&&&&&&&&&&&&7
$0Y<BN
+-+++/+++++++12
7Q777S7777777U777777777777777W>
CeCCCgCCCCCCCiCCCCCCCCCCCCCCCkCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCmJO
OOOcOOOOOOOeOOOOOOOOOOOOOOOg
WFFFFFF
FFFFFFFLFFFFFFFFFFFFFFFPA000000
00000006000000000000000:









8
35
&&&&&&
&&&&&&&0&&&&&&&&&&&&&&&7
$0Y<BN
+-+++/+++++++12
7Q777S7777777U777777777777777W>
CeCCCgCCCCCCCiCCCCCCCCCCCCCCCkCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCmJO
OOOcOOOOOOOeOOOOOOOOOOOOOOOg
=BGLQV
!'-#
8
35
&&&&&&
&&&&&&&0&&&&&&&&&&&&&&&7
$0Y<BN
+-+++/+++++++12
7Q777S7777777U777777777777777W>
CeCCCgCCCCCCCiCCCCCCCCCCCCCCCkCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCmJO
OOOcOOOOOOOeOOOOOOOOOOOOOOOgN12_GLOBAL__N_118NodeUpdateListenerE
8
35
&&&&&&
&&&&&&&0&&&&&&&&&&&&&&&7
$0Y<BN
+-+++/+++++++12
7Q777S7777777U777777777777777W>
CeCCCgCCCCCCCiCCCCCCCCCCCCCCCkCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCmJO
OOOcOOOOOOOeOOOOOOOOOOOOOOOg
$0Y<BN
+-+++/+++++++12
7Q777S7777777U777777777777777W>
CeCCCgCCCCCCCiCCCCCCCCCCCCCCCkCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCmJO
OOOcOOOOOOOeOOOOOOOOOOOOOOOg
(}}}}}}}}}}}}}}}}}}}}}0}}}}}
}}}}
B}}}
}}}}}}}}}}}}}}}}}}}}}}}},+
JPV\b
D//////
///////9///////////////A+""""""
"""""""
"""""""""""""""
8888888888888
888 8$888
8888
088888888888888888
88888844""""""
""""""")"""""""""""""""-Q
OQTdcS
OQTdcS
OQTdS
OQTS
OQTS
,\2\\\\\\\\\\\\\\\\\\\\\F\\\
\\\\
\\\\\\\\\\\\\\\\\\\\\\\\
8
35
&&&&&&
&&&&&&&0&&&&&&&&&&&&&&&7
$0Y<BN
+-+++/+++++++12
7Q777S7777777U777777777777777W>
CeCCCgCCCCCCCiCCCCCCCCCCCCCCCkCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCmJO
OOOcOOOOOOOeOOOOOOOOOOOOOOOg
N4llvm21ResourcePriorityQueueE
N12_GLOBAL__N_115ScheduleDAGFastE
N12_GLOBAL__N_120ScheduleDAGLinearizeE
N12_GLOBAL__N_117ScheduleDAGRRListE
N12_GLOBAL__N_125RegReductionPriorityQueueINS_13bu_ls_rr_sortEEE
N12_GLOBAL__N_118RegReductionPQBaseE
N12_GLOBAL__N_125RegReductionPriorityQueueINS_14src_ls_rr_sortEEE
N12_GLOBAL__N_125RegReductionPriorityQueueINS_17hybrid_ls_rr_sortEEE
N12_GLOBAL__N_125RegReductionPriorityQueueINS_14ilp_ls_rr_sortEEE
-6N4llvm18ScheduleDAGSDNodesE
##79>qKqqqqqqqqq1
##79>qKVqqqqqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq^qqqqqq
qqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqqq
qqqqqqqqqqqqqqqq
qqqqqqqq
bbbb03bbbbbbbbbb6<bbbB
???????E???????????
???????
8
35
&&&&&&
&&&&&&&0&&&&&&&&&&&&&&&7
$0Y<BN
+-+++/+++++++12
7Q777S7777777U777777777777777W>
CeCCCgCCCCCCCiCCCCCCCCCCCCCCCkCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCmJO
OOOcOOOOOOOeOOOOOOOOOOOOOOOg
.4N4llvm12SelectionDAG17DAGUpdateListenerE
N12_GLOBAL__N_118RAUWUpdateListenerE
N4llvm10FoldingSetINS_6SDNodeEEE
N4llvm10FoldingSetINS_12SDVTListNodeEEE
######
#######
###############



CEGI
CEGI
,y
3333333333333



$0Y<BN
+-+++/+++++++12
7Q777S7777777U777777777777777W>
CeCCCgCCCCCCCiCCCCCCCCCCCCCCCkCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCmJO
OOOcOOOOOOOeOOOOOOOOOOOOOOOg
8
35
&&&&&&
&&&&&&&0&&&&&&&&&&&&&&&7
<Z(E
N4llvm2cl3optIjLb1ENS0_6parserIjEEEE
N4llvm2cl11opt_storageIjLb1ELb0EEE
N4llvm2cl11OptionValueIjEE
N4llvm16SelectionDAGISelE
N4llvm2cl3optIPFPNS_18ScheduleDAGSDNodesEPNS_16SelectionDAGISelENS_10CodeGenOpt5LevelEELb0ENS_18RegisterPassParserINS_17RegisterSchedulerEEEEE
N4llvm2cl11opt_storageIPFPNS_18ScheduleDAGSDNodesEPNS_16SelectionDAGISelENS_10CodeGenOpt5LevelEELb0ELb0EEE
N4llvm18RegisterPassParserINS_17RegisterSchedulerEEE
N4llvm2cl6parserIPFPNS_18ScheduleDAGSDNodesEPNS_16SelectionDAGISelENS_10CodeGenOpt5LevelEEEE
N4llvm2cl11OptionValueIPFPNS_18ScheduleDAGSDNodesEPNS_16SelectionDAGISelENS_10CodeGenOpt5LevelEEEE
N4llvm2cl15OptionValueBaseIPFPNS_18ScheduleDAGSDNodesEPNS_16SelectionDAGISelENS_10CodeGenOpt5LevelEELb0EEE
N4llvm2cl15OptionValueCopyIPFPNS_18ScheduleDAGSDNodesEPNS_16SelectionDAGISelENS_10CodeGenOpt5LevelEEEE
N12_GLOBAL__N_111ISelUpdaterE
N12_GLOBAL__N_117MatchStateUpdaterE
N12_GLOBAL__N_115ScheduleDAGVLIWE



<Z(E



$0Y<BN
+-+++/+++++++12
7Q777S7777777U777777777777777W>
CeCCCgCCCCCCCiCCCCCCCCCCCCCCCkCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCmJO
OOOcOOOOOOOeOOOOOOOOOOOOOOOg
8
35
&&&&&&
&&&&&&&0&&&&&&&&&&&&&&&7N4llvm14TargetLoweringE
N4llvm22TargetSelectionDAGInfoE
N4llvm12ARMExceptionE
+/5h<h<h<<h<<h<h<<hhh<<<
<<<<<<<<
<Z(E
N4llvm10AsmPrinterE
N4llvm17AsmPrinterHandlerE
<999999?B999E99HK999999NQ
roooooouxooo{oo~
oooooo
lQQQQQQor
=;"5
'''''
'!''''''
>>>>
>>>>>>>>>>>>>
>>>>
N4llvm8DIEValueE
N4llvm10DIEIntegerE
N4llvm7DIEExprE
N4llvm8DIELabelE
N4llvm8DIEDeltaE
N4llvm9DIEStringE
N4llvm8DIEEntryE
N4llvm16DIETypeSignatureE
N4llvm6DIELocE
N4llvm3DIEE
N4llvm8DIEBlockE
N4llvm10DIELocListE
pttttt
ttttttt
tttt
tttttt!$tt'*-tt02tttt46ttttttt8tt:=@CFILOQtStttttttVY[]_acegtitttttkmo
999>9
N4llvm19HashingByteStreamerE
N4llvm17DwarfCFIExceptionE
Ojpw
'0hh
N4llvm10DwarfDebugE
N4llvm2cl3optIN12_GLOBAL__N_112DefaultOnOffELb0ENS0_6parserIS3_EEEE
N4llvm2cl11opt_storageIN12_GLOBAL__N_112DefaultOnOffELb0ELb0EEE
N4llvm2cl6parserIN12_GLOBAL__N_112DefaultOnOffEEE
N4llvm2cl11OptionValueIN12_GLOBAL__N_112DefaultOnOffEEE
N4llvm2cl15OptionValueBaseIN12_GLOBAL__N_112DefaultOnOffELb0EEE
N4llvm2cl15OptionValueCopyIN12_GLOBAL__N_112DefaultOnOffEEE
N4llvm14APByteStreamerE
N4llvm12ByteStreamerE
N4llvm10FoldingSetINS_9DIEAbbrevEEE
%8JN4llvm9DwarfUnitE
N4llvm16DwarfCompileUnitE
N4llvm13DwarfTypeUnitE
N4llvm2cl15OptionValueBaseIbLb0EEE
IbkuN4llvm10EHStreamerE
N12_GLOBAL__N_115ErlangGCPrinterE
N12_GLOBAL__N_122OcamlGCMetadataPrinterE
N4llvm14Win64ExceptionE
N4llvm21WinCodeViewLineTablesE
N4llvm24AggressiveAntiDepBreakerE
<Z(E
$0Y<BN
+-+++/+++++++12
7Q777S7777777U777777777777777W>
CeCCCgCCCCCCCiCCCCCCCCCCCCCCCkCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCmJO
OOOcOOOOOOOeOOOOOOOOOOOOOOOg
bbbbbbbb%6G
.9mx_
N12_GLOBAL__N_122AtomicExpandLoadLinkedE
zzzzzzzzzzzz
zzzzzzzzzzzzzzzzzz
zzzz "z
nnnn
n!nnnnnn
$0Y<BN
+-+++/+++++++12
7Q777S7777777U777777777777777W>
CeCCCgCCCCCCCiCCCCCCCCCCCCCCCkCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCmJO
OOOcOOOOOOOeOOOOOOOOOOOOOOOgN12_GLOBAL__N_18BasicTTIE
N12_GLOBAL__N_116BranchFolderPassE
N4llvm2cl3optINS0_13boolOrDefaultELb0ENS0_6parserIS2_EEEE
N4llvm2cl11opt_storageINS0_13boolOrDefaultELb0ELb0EEE
8
35
&&&&&&
&&&&&&&0&&&&&&&&&&&&&&&7
$0Y<BN
+-+++/+++++++12
7Q777S7777777U777777777777777W>
CeCCCgCCCCCCCiCCCCCCCCCCCCCCCkCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCmJO
OOOcOOOOOOOeOOOOOOOOOOOOOOOg2
xc''
<Z(E
N12_GLOBAL__N_114CodeGenPrepareE
N12_GLOBAL__N_124TypePromotionTransaction13OperandSetterE
N12_GLOBAL__N_124TypePromotionTransaction19TypePromotionActionE
N12_GLOBAL__N_124TypePromotionTransaction18InstructionRemoverE
N12_GLOBAL__N_124TypePromotionTransaction13OperandsHiderE
N12_GLOBAL__N_124TypePromotionTransaction12UsesReplacerE
N12_GLOBAL__N_124TypePromotionTransaction12TruncBuilderE
N12_GLOBAL__N_124TypePromotionTransaction11TypeMutatorE
N12_GLOBAL__N_124TypePromotionTransaction11SExtBuilderE
N12_GLOBAL__N_124TypePromotionTransaction21InstructionMoveBeforeE
N12_GLOBAL__N_131CodeGenPrepareFortifiedLibCallsE
N4llvm22CriticalAntiDepBreakerE
N4llvm20DefaultVLIWSchedulerE
N4llvm18VLIWPacketizerListE
N12_GLOBAL__N_126DeadMachineInstructionElimE
N12_GLOBAL__N_114DwarfEHPrepareE
N12_GLOBAL__N_116EarlyIfConverterE
N4llvm11EdgeBundlesE
N12_GLOBAL__N_18ErlangGCE
N12_GLOBAL__N_110ExeDepsFixE
N12_GLOBAL__N_117ExpandISelPseudosE
N12_GLOBAL__N_112ExpandPostRAE
N4llvm12GCModuleInfoE
N12_GLOBAL__N_17PrinterE
N4llvm17GCMetadataPrinterE
N4llvm10GCStrategyE
N12_GLOBAL__N_115LowerIntrinsicsE
N12_GLOBAL__N_121GCMachineCodeAnalysisE
<Z(E
N12_GLOBAL__N_111GlobalMergeE
\N12_GLOBAL__N_111IfConverterE
N12_GLOBAL__N_113InlineSpillerE
l=uFy
UUUUUUUU33333333
N4llvm14JITCodeEmitterE
I.jump.instr.table.text.
N4llvm15JumpInstrTablesE
N4llvm17LLVMTargetMachineE
N4llvm20LatencyPriorityQueueE
N4llvm18LiveDebugVariablesE
N4llvm13LiveIntervalsE
N4llvm13LiveRangeEdit8DelegateE
N4llvm13LiveRangeEditE
N4llvm13LiveRegMatrixE
N4llvm10LiveStacksE
N4llvm13LiveVariablesE
N12_GLOBAL__N_118LocalStackSlotPassE
AVk`N4llvm25MachineBlockFrequencyInfoE
N4llvm22BlockFrequencyInfoImplINS_17MachineBasicBlockEEE
N12_GLOBAL__N_121MachineBlockPlacementE
N12_GLOBAL__N_126MachineBlockPlacementStatsE
N4llvm28MachineBranchProbabilityInfoE
N12_GLOBAL__N_110MachineCSEE
N4llvm18MachineCodeEmitterE
N12_GLOBAL__N_115MachineCombinerE
N12_GLOBAL__N_122MachineCopyPropagationE
N4llvm17DominatorTreeBaseINS_17MachineBasicBlockEEE
N4llvm13DominatorBaseINS_17MachineBasicBlockEEE
N4llvm20MachineDominatorTreeE
N4llvm24MachineDominanceFrontierE
<Z(E
N4llvm24MachineConstantPoolValueE
N4llvm19MachineFunctionInfoE
N4llvm23MachineFunctionAnalysisE
N4llvm19MachineFunctionPassE
N12_GLOBAL__N_126MachineFunctionPrinterPassE
"+@GNXgs}
KWco{N12_GLOBAL__N_120UnpackMachineBundlesE
N12_GLOBAL__N_122FinalizeMachineBundlesE
N12_GLOBAL__N_111MachineLICME
N4llvm15MachineLoopInfoE
N4llvm21MachineModuleInfoImplE
N4llvm26MMIAddrLabelMapCallbackPtrE
N4llvm17MachineModuleInfoE
N4llvm22MachineModuleInfoMachOE
N4llvm20MachineModuleInfoELFE
N4llvm27MachinePassRegistryListenerE
N4llvm24MachinePostDominatorTreeE
N4llvm19MachineRegisterInfo8DelegateE
N4llvm14RegionInfoBaseINS_12RegionTraitsINS_15MachineFunctionEEEEE
N4llvm17MachineRegionInfoE
N4llvm21MachineRegionInfoPassE
N4llvm20MachineSchedStrategyE
N4llvm19ScheduleDAGMutationE
N4llvm13ScheduleDAGMIE
N4llvm17ScheduleDAGMILiveE
N4llvm16GenericSchedulerE
N4llvm20GenericSchedulerBaseE
N4llvm20PostGenericSchedulerE
N4llvm19MachineSchedContextE
N12_GLOBAL__N_116MachineSchedulerE
N12_GLOBAL__N_120MachineSchedulerBaseE
N12_GLOBAL__N_120PostMachineSchedulerE
N4llvm2cl3optIPFPNS_17ScheduleDAGInstrsEPNS_19MachineSchedContextEELb0ENS_18RegisterPassParserINS_20MachineSchedRegistryEEEEE
N4llvm2cl11opt_storageIPFPNS_17ScheduleDAGInstrsEPNS_19MachineSchedContextEELb0ELb0EEE
N4llvm18RegisterPassParserINS_20MachineSchedRegistryEEE
N4llvm2cl6parserIPFPNS_17ScheduleDAGInstrsEPNS_19MachineSchedContextEEEE
N4llvm2cl11OptionValueIPFPNS_17ScheduleDAGInstrsEPNS_19MachineSchedContextEEEE
N4llvm2cl15OptionValueBaseIPFPNS_17ScheduleDAGInstrsEPNS_19MachineSchedContextEELb0EEE
N4llvm2cl15OptionValueCopyIPFPNS_17ScheduleDAGInstrsEPNS_19MachineSchedContextEEEE
N12_GLOBAL__N_113CopyConstrainE
N12_GLOBAL__N_119LoadClusterMutationE
N12_GLOBAL__N_111MacroFusionE
N12_GLOBAL__N_112ILPSchedulerE
N12_GLOBAL__N_114MachineSinkingE
N4llvm19MachineTraceMetricsE
N4llvm19MachineTraceMetrics8EnsembleE
N12_GLOBAL__N_121MinInstrCountEnsembleE
N12_GLOBAL__N_119MachineVerifierPassE
N12_GLOBAL__N_17OcamlGCE
N12_GLOBAL__N_112OptimizePHIsE
N12_GLOBAL__N_114PHIEliminationE
N4llvm16TargetPassConfigE
N4llvm2cl3optIPFPNS_12FunctionPassEvELb0ENS_18RegisterPassParserINS_16RegisterRegAllocEEEEE
N4llvm2cl11opt_storageIPFPNS_12FunctionPassEvELb0ELb0EEE
N4llvm18RegisterPassParserINS_16RegisterRegAllocEEE
N4llvm2cl6parserIPFPNS_12FunctionPassEvEEE
N4llvm2cl11OptionValueIPFPNS_12FunctionPassEvEEE
N4llvm2cl15OptionValueBaseIPFPNS_12FunctionPassEvELb0EEE
N4llvm2cl15OptionValueCopyIPFPNS_12FunctionPassEvEEE
N12_GLOBAL__N_117PeepholeOptimizerE
N12_GLOBAL__N_112CopyRewriterE
N12_GLOBAL__N_120InsertSubregRewriterE
N12_GLOBAL__N_121ExtractSubregRewriterE
N12_GLOBAL__N_119RegSequenceRewriterE
N4llvm14AntiDepBreakerE
N12_GLOBAL__N_115PostRASchedulerE
N12_GLOBAL__N_120SchedulePostRATDListE
N12_GLOBAL__N_119ProcessImplicitDefsE
N4llvm3PEIE
N4llvm27FixedStackPseudoSourceValueE
N4llvm17PseudoSourceValueE
Register Allocation
N4llvm12RegAllocBaseE
N12_GLOBAL__N_17RABasicE
N12_GLOBAL__N_16RAFastE
N4llvm2cl3optINS_11SplitEditor19ComplementSpillModeELb0ENS0_6parserIS3_EEEE
N4llvm2cl11opt_storageINS_11SplitEditor19ComplementSpillModeELb0ELb0EEE
N4llvm2cl6parserINS_11SplitEditor19ComplementSpillModeEEE
N4llvm2cl11OptionValueINS_11SplitEditor19ComplementSpillModeEEE
N4llvm2cl15OptionValueBaseINS_11SplitEditor19ComplementSpillModeELb0EEE
N4llvm2cl15OptionValueCopyINS_11SplitEditor19ComplementSpillModeEEE
N12_GLOBAL__N_18RAGreedyE
N4llvm11PBQPBuilderE
N4llvm25PBQPBuilderWithCoalescingE
N12_GLOBAL__N_112RegAllocPBQPE
N12_GLOBAL__N_117RegisterCoalescerE
N4llvm23SchedulingPriorityQueueE
N4llvm24ScheduleHazardRecognizerE
N4llvm11ScheduleDAGE
N4llvm17ScheduleDAGInstrsE
N4llvm14format_object1IdEE
N4llvm26ScoreboardHazardRecognizerE
N12_GLOBAL__N_113ShadowStackGCE
N12_GLOBAL__N_113SjLjEHPrepareE
AVk`N4llvm11SlotIndexesE
N4llvm14SpillPlacementE
N4llvm7SpillerE
N4llvm2cl3optIN12_GLOBAL__N_111SpillerNameELb0ENS0_6parserIS3_EEEE
N4llvm2cl11opt_storageIN12_GLOBAL__N_111SpillerNameELb0ELb0EEE
N4llvm2cl6parserIN12_GLOBAL__N_111SpillerNameEEE
N4llvm2cl11OptionValueIN12_GLOBAL__N_111SpillerNameEEE
N4llvm2cl15OptionValueBaseIN12_GLOBAL__N_111SpillerNameELb0EEE
N4llvm2cl15OptionValueCopyIN12_GLOBAL__N_111SpillerNameEEE
N12_GLOBAL__N_114TrivialSpillerE
N12_GLOBAL__N_111SpillerBaseE
N12_GLOBAL__N_113StackColoringE
<Z(E
N4llvm14StackProtectorE
N4llvm18ValueMapCallbackVHIPKNS_10AllocaInstENS_14StackProtector13SSPLayoutKindENS_14ValueMapConfigIS3_NS_3sys10SmartMutexILb0EEEEEEE
N12_GLOBAL__N_117StackSlotColoringE
N4llvm16StackMapLivenessE
7=N4llvm2cl11OptionValueIiEE
N4llvm2cl15OptionValueCopyIiEE
N12_GLOBAL__N_117TailDuplicatePassE
N4llvm19TargetFrameLoweringE
N4llvm15TargetInstrInfoE
N4llvm11MCInstrInfoE
8
35
&&&&&&
&&&&&&&0&&&&&&&&&&&&&&&7
$0Y<BN
+-+++/+++++++12
7Q777S7777777U777777777777777W>
CeCCCgCCCCCCCiCCCCCCCCCCCCCCCkCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCmJO
OOOcOOOOOOOeOOOOOOOOOOOOOOOgN4llvm18TargetLoweringBaseE
"TN4llvm27TargetLoweringObjectFileELFE
N4llvm29TargetLoweringObjectFileMachOE
N4llvm28TargetLoweringObjectFileCOFFE
N4llvm18TargetRegisterInfoE
N4llvm14MCRegisterInfoE
N12_GLOBAL__N_125TwoAddressInstructionPassE
N12_GLOBAL__N_120UnreachableBlockElimE
N12_GLOBAL__N_127UnreachableMachineBlockElimE
N4llvm10VirtRegMapE
N12_GLOBAL__N_115VirtRegRewriterE
N12_GLOBAL__N_14ADCEE
N12_GLOBAL__N_116ConstantHoistingE
N12_GLOBAL__N_119ConstantPropagationE
N12_GLOBAL__N_126CorrelatedValuePropagationE
N12_GLOBAL__N_119DeadInstEliminationE
N12_GLOBAL__N_13DCEE
N12_GLOBAL__N_13DSEE
N12_GLOBAL__N_18EarlyCSEE
N12_GLOBAL__N_114FlattenCFGPassE
<Z(E
N12_GLOBAL__N_13GVNE
N4llvm2cl15OptionValueBaseIjLb0EEE
N12_GLOBAL__N_114IndVarSimplifyE
N12_GLOBAL__N_121IndVarSimplifyVisitorE
N12_GLOBAL__N_113JumpThreadingE
N12_GLOBAL__N_14LICME
N12_GLOBAL__N_112LoopPromoterE
<Z(E
N12_GLOBAL__N_111LoadCombineE
N12_GLOBAL__N_112LoopDeletionE
<Z(E
N12_GLOBAL__N_118LoopIdiomRecognizeE
N12_GLOBAL__N_116LoopInstSimplifyE
N12_GLOBAL__N_110LoopRerollE
N12_GLOBAL__N_110LoopRotateE
9N12_GLOBAL__N_118LoopStrengthReduceE
N12_GLOBAL__N_110LoopUnrollE
N12_GLOBAL__N_112LoopUnswitchE
")ahNoStN12_GLOBAL__N_111LowerAtomicE
<Z(E
N12_GLOBAL__N_19MemCpyOptE
N12_GLOBAL__N_121MergedLoadStoreMotionE
N12_GLOBAL__N_123PartiallyInlineLibCallsE
MMMMMMMMMHHiN12_GLOBAL__N_111ReassociateE
N12_GLOBAL__N_18RegToMemE
N12_GLOBAL__N_14SCCPE
N12_GLOBAL__N_16IPSCCPE
<Z(E
N12_GLOBAL__N_14SROAE
N12_GLOBAL__N_114AllocaPromoterE
N12_GLOBAL__N_119SampleProfileLoaderE
<Z(E
N12_GLOBAL__N_17SROA_DTE
N12_GLOBAL__N_14SROAE
N12_GLOBAL__N_114AllocaPromoterE
N12_GLOBAL__N_110SROA_SSAUpE
<Z(E
N12_GLOBAL__N_110ScalarizerE
N4llvm11InstVisitorIN12_GLOBAL__N_110ScalarizerEbEE
<Z(E
N12_GLOBAL__N_126SeparateConstOffsetFromGEPE
N12_GLOBAL__N_115CFGSimplifyPassE
N12_GLOBAL__N_17SinkingE
N12_GLOBAL__N_114StructurizeCFGE
O#ON12_GLOBAL__N_112TailCallElimE
<Z(E
 !"#$%&'()*+,
-./012N4llvm12InstCombinerE
N4llvm11InstVisitorINS_12InstCombinerEPNS_11InstructionEEE
N12_GLOBAL__N_129InstCombinerLibCallSimplifierE
 $(,
"%(q
)-1H58<?BE
<Z(E
5555555555
5555555
555555555555;5)
<Z(E
@hhh
hhhhhhhhh5hhhhhhhhh
<Z(E
CQkC
<Z(E
GGGGGGGGG
N12_GLOBAL__N_117AddDiscriminatorsE
N12_GLOBAL__N_118BreakCriticalEdgesE
N4llvm25SimplifyFortifiedLibCallsE
RRRRRRRRRRRRRR
RRRWR
<Z(E
N12_GLOBAL__N_19InstNamerE
N12_GLOBAL__N_15LCSSAE
N12_GLOBAL__N_112LoopSimplifyE
N12_GLOBAL__N_120LowerExpectIntrinsicE
N12_GLOBAL__N_111LowerInvokeE
IUNN12_GLOBAL__N_111LowerSwitchE
N12_GLOBAL__N_111PromotePassE
N12_GLOBAL__N_111MetaRenamerE
-6tt
_jN4llvm20LoadAndStorePromoterE
N4llvm9IVVisitorE
N12_GLOBAL__N_114InstSimplifierE
N4llvm17LibCallSimplifierE
N12_GLOBAL__N_112MemCpyChkOptE
N12_GLOBAL__N_132InstFortifiedLibCallOptimizationE
N12_GLOBAL__N_128FortifiedLibCallOptimizationE
N12_GLOBAL__N_119LibCallOptimizationE
N12_GLOBAL__N_113MemMoveChkOptE
N12_GLOBAL__N_112MemSetChkOptE
N12_GLOBAL__N_112StrCpyChkOptE
N12_GLOBAL__N_112StpCpyChkOptE
N12_GLOBAL__N_113StrNCpyChkOptE
N12_GLOBAL__N_19StrCatOptE
N12_GLOBAL__N_110StrNCatOptE
N12_GLOBAL__N_19StrChrOptE
N12_GLOBAL__N_110StrRChrOptE
N12_GLOBAL__N_19StrCmpOptE
N12_GLOBAL__N_110StrNCmpOptE
N12_GLOBAL__N_19StrCpyOptE
N12_GLOBAL__N_19StpCpyOptE
N12_GLOBAL__N_110StrNCpyOptE
N12_GLOBAL__N_19StrLenOptE
N12_GLOBAL__N_110StrPBrkOptE
N12_GLOBAL__N_18StrToOptE
N12_GLOBAL__N_19StrSpnOptE
N12_GLOBAL__N_110StrCSpnOptE
N12_GLOBAL__N_19StrStrOptE
N12_GLOBAL__N_19MemCmpOptE
N12_GLOBAL__N_19MemCpyOptE
N12_GLOBAL__N_110MemMoveOptE
N12_GLOBAL__N_19MemSetOptE
N12_GLOBAL__N_116UnaryDoubleFPOptE
N12_GLOBAL__N_117BinaryDoubleFPOptE
N12_GLOBAL__N_111SinCosPiOptE
N12_GLOBAL__N_16FFSOptE
N12_GLOBAL__N_16AbsOptE
N12_GLOBAL__N_110IsDigitOptE
N12_GLOBAL__N_110IsAsciiOptE
N12_GLOBAL__N_110ToAsciiOptE
N12_GLOBAL__N_117ErrorReportingOptE
N12_GLOBAL__N_19PrintFOptE
N12_GLOBAL__N_110SPrintFOptE
N12_GLOBAL__N_110FPrintFOptE
N12_GLOBAL__N_19FWriteOptE
N12_GLOBAL__N_18FPutsOptE
N12_GLOBAL__N_17PutsOptE
N12_GLOBAL__N_16CosOptE
N12_GLOBAL__N_127UnsafeFPLibCallOptimizationE
N12_GLOBAL__N_16PowOptE
N12_GLOBAL__N_17Exp2OptE
N4llvm22UnifyFunctionExitNodesE
?EKN4llvm20ValueMapTypeRemapperE
N4llvm17ValueMaterializerE
N4llvm20CallGraphWrapperPassE
N4llvm16CallGraphSCCPassE
N12_GLOBAL__N_113CGPassManagerE
N12_GLOBAL__N_118PrintCallGraphPassE
N12_GLOBAL__N_115CallGraphViewerE
N4llvm26DOTGraphTraitsModuleViewerINS_20CallGraphWrapperPassELb1EPNS_9CallGraphENS_34AnalysisCallGraphWrapperPassTraitsEEE
N12_GLOBAL__N_116CallGraphPrinterE
N4llvm27DOTGraphTraitsModulePrinterINS_20CallGraphWrapperPassELb1EPNS_9CallGraphENS_34AnalysisCallGraphWrapperPassTraitsEEE
N4llvm13FindUsedTypesE
N12_GLOBAL__N_113GlobalsModRefE
<Z(E
N4llvm18InlineCostAnalysisE
CCCCCCCCCCCCCCCCCCCCC
CB/>CCCCCCCCCCCCCCCCHCCCR
<Z(E
N4llvm13AliasAnalysisE
 N12_GLOBAL__N_120AliasAnalysisCounterE
y(Q<_
R.C9
N12_GLOBAL__N_16AAEvalE
N12_GLOBAL__N_113AliasDebuggerE
N4llvm15AliasSetTracker13ASTCallbackVHE
N12_GLOBAL__N_115AliasSetPrinterE
<Z(E
N12_GLOBAL__N_118BasicAliasAnalysisE
N4llvm18BlockFrequencyInfoE
N4llvm22BlockFrequencyInfoImplINS_10BasicBlockEEE
1&N4llvm26BlockFrequencyInfoImplBaseE
N4llvm21BranchProbabilityInfoE
N12_GLOBAL__N_19CFGViewerE
N12_GLOBAL__N_113CFGOnlyViewerE
N12_GLOBAL__N_110CFGPrinterE
N12_GLOBAL__N_114CFGOnlyPrinterE
N4llvm14CaptureTrackerE
N12_GLOBAL__N_120SimpleCaptureTrackerE
N12_GLOBAL__N_114CapturesBeforeE
Cost Model Analysis
N12_GLOBAL__N_117CostModelAnalysisE
9<9FP99999a999k99s|
<Z(E
5s5Delinearization
N12_GLOBAL__N_115DelinearizationE
....
&N4llvm10DependenceE
N4llvm14FullDependenceE
N4llvm18DependenceAnalysisE
N12_GLOBAL__N_110DomPrinterE
N4llvm21DOTGraphTraitsPrinterINS_24DominatorTreeWrapperPassELb0EPNS_13DominatorTreeEN12_GLOBAL__N_143DominatorTreeWrapperPassAnalysisGraphTraitsEEE
N12_GLOBAL__N_114DomOnlyPrinterE
N4llvm21DOTGraphTraitsPrinterINS_24DominatorTreeWrapperPassELb1EPNS_13DominatorTreeEN12_GLOBAL__N_143DominatorTreeWrapperPassAnalysisGraphTraitsEEE
N12_GLOBAL__N_19DomViewerE
N4llvm20DOTGraphTraitsViewerINS_24DominatorTreeWrapperPassELb0EPNS_13DominatorTreeEN12_GLOBAL__N_143DominatorTreeWrapperPassAnalysisGraphTraitsEEE
N12_GLOBAL__N_113DomOnlyViewerE
N4llvm20DOTGraphTraitsViewerINS_24DominatorTreeWrapperPassELb1EPNS_13DominatorTreeEN12_GLOBAL__N_143DominatorTreeWrapperPassAnalysisGraphTraitsEEE
N12_GLOBAL__N_114PostDomPrinterE
N4llvm21DOTGraphTraitsPrinterINS_17PostDominatorTreeELb0EPS1_NS_26DefaultAnalysisGraphTraitsIS1_S2_EEEE
N12_GLOBAL__N_118PostDomOnlyPrinterE
N4llvm21DOTGraphTraitsPrinterINS_17PostDominatorTreeELb1EPS1_NS_26DefaultAnalysisGraphTraitsIS1_S2_EEEE
N12_GLOBAL__N_113PostDomViewerE
N4llvm20DOTGraphTraitsViewerINS_17PostDominatorTreeELb0EPS1_NS_26DefaultAnalysisGraphTraitsIS1_S2_EEEE
N12_GLOBAL__N_117PostDomOnlyViewerE
N4llvm20DOTGraphTraitsViewerINS_17PostDominatorTreeELb1EPS1_NS_26DefaultAnalysisGraphTraitsIS1_S2_EEEE
N4llvm17DominanceFrontierE
N4llvm11IVStrideUseE
N4llvm10ilist_nodeINS_11IVStrideUseEEE
N4llvm15ilist_half_nodeINS_11IVStrideUseEEE
N4llvm7IVUsersE
N12_GLOBAL__N_19InstCountE
N4llvm11InstVisitorIN12_GLOBAL__N_19InstCountEvEE
<Z(E
N4llvm17IntervalPartitionE
N4llvm18JumpInstrTableInfoE
N4llvm13LazyValueInfoE
N12_GLOBAL__N_114LVIValueHandleE
N4llvm20LibCallAliasAnalysisE
N4llvm11LibCallInfoE
<Z(E
??????
N12_GLOBAL__N_14LintE
N4llvm11InstVisitorIN12_GLOBAL__N_14LintEvEE
<Z(E
N4llvm8LoopInfoE
N4llvm8LoopPassE
N4llvm13LPPassManagerE
N12_GLOBAL__N_113PrintLoopPassE
N12_GLOBAL__N_113MemDepPrinterE
"&*.2~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~6
<Z(E
%+N4llvm24MemoryDependenceAnalysisE
N12_GLOBAL__N_122ModuleDebugInfoPrinterE
N12_GLOBAL__N_14NoAAE
N4llvm17PostDominatorTreeE
N4llvm14RegionInfoBaseINS_12RegionTraitsINS_8FunctionEEEEE
N4llvm10RegionInfoE
N4llvm14RegionInfoPassE
N4llvm2cl3optINS_10RegionBaseINS_12RegionTraitsINS_8FunctionEEEE10PrintStyleELb1ENS0_6parserIS7_EEEE
N4llvm2cl11opt_storageINS_10RegionBaseINS_12RegionTraitsINS_8FunctionEEEE10PrintStyleELb1ELb0EEE
N4llvm2cl6parserINS_10RegionBaseINS_12RegionTraitsINS_8FunctionEEEE10PrintStyleEEE
N4llvm2cl11OptionValueINS_10RegionBaseINS_12RegionTraitsINS_8FunctionEEEE10PrintStyleEEE
N4llvm2cl15OptionValueBaseINS_10RegionBaseINS_12RegionTraitsINS_8FunctionEEEE10PrintStyleELb0EEE
N4llvm2cl15OptionValueCopyINS_10RegionBaseINS_12RegionTraitsINS_8FunctionEEEE10PrintStyleEEE
N4llvm10RegionPassE
N4llvm13RGPassManagerE
N12_GLOBAL__N_115PrintRegionPassE
N12_GLOBAL__N_112RegionViewerE
N4llvm20DOTGraphTraitsViewerINS_14RegionInfoPassELb0EPS1_NS_26DefaultAnalysisGraphTraitsIS1_S2_EEEE
N12_GLOBAL__N_116RegionOnlyViewerE
N4llvm20DOTGraphTraitsViewerINS_14RegionInfoPassELb1EPS1_NS_26DefaultAnalysisGraphTraitsIS1_S2_EEEE
N12_GLOBAL__N_113RegionPrinterE
N4llvm21DOTGraphTraitsPrinterINS_14RegionInfoPassELb0EPS1_NS_26DefaultAnalysisGraphTraitsIS1_S2_EEEE
N12_GLOBAL__N_117RegionOnlyPrinterE
N4llvm21DOTGraphTraitsPrinterINS_14RegionInfoPassELb1EPS1_NS_26DefaultAnalysisGraphTraitsIS1_S2_EEEE
#W/<E
A,,,
8]HHH
><<<
<Z(E
&&&5&&&k&&&&t
!.6BJP
A444
==IIUUaa
PLLL
#)/>DJP
zN4llvm11SCEVUnknownE
N4llvm4SCEVE
N4llvm15ScalarEvolution14SCEVCallbackVHE
N4llvm15ScalarEvolutionE
N4llvm10FoldingSetINS_4SCEVEEE
N12_GLOBAL__N_128ScalarEvolutionAliasAnalysisE
#?fmt{
 ,yy
N4llvm23AbstractLatticeFunctionE
<Z(E
N4llvm19TargetTransformInfoE
N12_GLOBAL__N_15NoTTIE
N12_GLOBAL__N_122TypeBasedAliasAnalysisE
N12_GLOBAL__N_115ScopedNoAliasAAE
<Z(E
"#*****)*
<Z(E
N4llvm19TargetIntrinsicInfoE
N4llvm13TargetJITInfoE
N4llvm17TargetLibraryInfoE
<Z(E
N4llvm24TargetLoweringObjectFileE
N4llvm16MCObjectFileInfoE
N4llvm13TargetMachineE
N4llvm19TargetSubtargetInfoE
N4llvm15MCSubtargetInfoE
!!!!!
!!!!
!!!!!!!!
!!! 
NNONNNNN
NNQNNNNNSNNU
EGIKM
//B////x//D////F//H
$$?$$$$$A$$$C$$$$$E$$GD
==F=====H==J=====L==N
$N12_GLOBAL__N_122DarwinX86_32AsmBackendE
N12_GLOBAL__N_119DarwinX86AsmBackendE
N12_GLOBAL__N_113X86AsmBackendE
N12_GLOBAL__N_120WindowsX86AsmBackendE
N12_GLOBAL__N_119ELFX86_32AsmBackendE
N12_GLOBAL__N_116ELFX86AsmBackendE
N12_GLOBAL__N_122DarwinX86_64AsmBackendE
N12_GLOBAL__N_120ELFX86_X32AsmBackendE
N12_GLOBAL__N_119ELFX86_64AsmBackendE
XMM10
YMM10
ZMM10
CR10
XMM20
YMM20
ZMM20
XMM30
YMM30
ZMM30
XMM0
YMM0
ZMM0
XMM11
YMM11
ZMM11
CR11
XMM21
YMM21
ZMM21
XMM31
YMM31
ZMM31
XMM1
YMM1
ZMM1
XMM12
YMM12
ZMM12
CR12
XMM22
YMM22
ZMM22
XMM2
YMM2
ZMM2
XMM13
YMM13
ZMM13
CR13
XMM23
YMM23
ZMM23
XMM3
YMM3
ZMM3
XMM14
YMM14
ZMM14
CR14
XMM24
YMM24
ZMM24
XMM4
YMM4
ZMM4
XMM15
YMM15
ZMM15
CR15
XMM25
YMM25
ZMM25
XMM5
YMM5
ZMM5
XMM16
YMM16
ZMM16
XMM26
YMM26
ZMM26
XMM6
YMM6
ZMM6
XMM17
YMM17
ZMM17
XMM27
YMM27
ZMM27
XMM7
YMM7
ZMM7
XMM18
YMM18
ZMM18
XMM28
YMM28
ZMM28
XMM8
YMM8
ZMM8
XMM19
YMM19
ZMM19
XMM29
YMM29
ZMM29
XMM9
YMM9
ZMM9
R10B
R11B
R12B
R13B
R14B
R15B
R10D
R11D
R12D
R13D
R14D
R15D
EFLAGS
R10W
R11W
R12W
R13W
R14W
R15W
FPSW
MORESTACK_RET_RESTORE_R10
LD_Fp080
LD_Fp180
CMOV_RFP80
SUB_FpI32m80
ADD_FpI32m80
MUL_FpI32m80
SUBR_FpI32m80
DIVR_FpI32m80
DIV_FpI32m80
ILD_Fp32m80
IST_Fp32m80
ISTT_Fp32m80
ILD_Fp64m80
IST_Fp64m80
ISTT_Fp64m80
SUB_FpI16m80
ADD_FpI16m80
MUL_FpI16m80
SUBR_FpI16m80
DIVR_FpI16m80
DIV_FpI16m80
ILD_Fp16m80
IST_Fp16m80
ISTT_Fp16m80
CMOVNB_Fp80
SUB_Fp80
CMOVB_Fp80
ADD_Fp80
CMOVNBE_Fp80
CMOVBE_Fp80
CMOVNE_Fp80
CMOVE_Fp80
MUL_Fp80
SIN_Fp80
CMOVNP_Fp80
CMOVP_Fp80
ABS_Fp80
CHS_Fp80
COS_Fp80
SQRT_Fp80
TST_Fp80
DIV_Fp80
UCOM_FpIr80
UCOM_Fpr80
LD_F0
AVX512_512_SET0
V_SET0
AVX_SET0
PREFETCHT0
SUB_FrST0
ADD_FrST0
MUL_FrST0
SUBR_FrST0
DIVR_FrST0
DIV_FrST0
SUB_FPrST0
ADD_FPrST0
MUL_FPrST0
SUBR_FPrST0
DIVR_FPrST0
DIV_FPrST0
PBLENDVBrm0
BLENDVPDrm0
BLENDVPSrm0
MOV32r0
PBLENDVBrr0
BLENDVPDrr0
BLENDVPSrr0
XSHA1
LD_F1
FPREM1
F2XM1
FYL2XP1
PREFETCHT1
JA_1
JB_1
JAE_1
JBE_1
JGE_1
JE_1
JLE_1
JNE_1
JG_1
JL_1
JO_1
JNO_1
JP_1
JMP_1
JNP_1
JS_1
JNS_1
RCL32m1
SHL32m1
ROL32m1
SAR32m1
RCR32m1
SHR32m1
ROR32m1
RCL64m1
SHL64m1
ROL64m1
SAR64m1
RCR64m1
SHR64m1
ROR64m1
RCL16m1
SHL16m1
ROL16m1
SAR16m1
RCR16m1
SHR16m1
ROR16m1
RCL8m1
SHL8m1
ROL8m1
SAR8m1
RCR8m1
SHR8m1
ROR8m1
RCL32r1
SHL32r1
ROL32r1
SAR32r1
RCR32r1
SHR32r1
ROR32r1
RCL64r1
SHL64r1
ROL64r1
SAR64r1
RCR64r1
SHR64r1
ROR64r1
RCL16r1
SHL16r1
ROL16r1
SAR16r1
RCR16r1
SHR16r1
ROR16r1
RCL8r1
SHL8r1
ROL8r1
SAR8r1
RCR8r1
SHR8r1
ROR8r1
LD_Fp032
LD_Fp132
INVLPGA32
PUSHA32
POPA32
VMLOAD32
LXADD32
INVPCID32
INVVPID32
VMSAVE32
CMOV_V4F32
CMOV_V16F32
CMOV_V8F32
PUSHF32
POPF32
LCMPXCHG32
VMRUN32
ADJCALLSTACKDOWN32
CMOV_RFP32
ADJCALLSTACKUP32
CMOV_FR32
CMOV_GR32
PUSHCS32
PUSHDS32
POPDS32
PUSHES32
POPES32
PUSHFS32
POPFS32
PUSHGS32
POPGS32
PUSHSS32
POPSS32
IRET32
INVEPT32
SEG_ALLOCA_32
REP_STOSB_32
REP_MOVSB_32
REP_STOSD_32
REP_MOVSD_32
WIN_FTOL_32
REP_STOSW_32
REP_MOVSW_32
JECXZ_32
TLSCall_32
SBB32i32
SUB32i32
ADC32i32
ADD32i32
AND32i32
CMP32i32
XOR32i32
TEST32i32
SBB64i32
SUB64i32
ADC64i32
ADD64i32
AND64i32
PUSH64i32
CMP64i32
XOR64i32
TEST64i32
PUSHi32
SBB64mi32
LOCK_SUB64mi32
ADC64mi32
LOCK_ADD64mi32
LOCK_AND64mi32
CMP64mi32
LOCK_XOR64mi32
LOCK_OR64mi32
TEST64mi32
MOV64mi32
IMUL64rmi32
SBB64ri32
SUB64ri32
ADC64ri32
ADD64ri32
AND64ri32
CMP64ri32
XOR64ri32
TEST64ri32
MOV64ri32
IMUL64rri32
CALL64pcrel32
CALLpcrel32
ST_FpP80m32
SUB_Fp80m32
ADD_Fp80m32
MUL_Fp80m32
SUBR_Fp80m32
DIVR_Fp80m32
ST_Fp80m32
DIV_Fp80m32
SUB_FpI32m32
ADD_FpI32m32
MUL_FpI32m32
SUBR_FpI32m32
DIVR_FpI32m32
DIV_FpI32m32
ILD_Fp32m32
IST_Fp32m32
ISTT_Fp32m32
CRC32r32m32
ST_FpP64m32
SUB_Fp64m32
ADD_Fp64m32
ILD_Fp64m32
MUL_Fp64m32
SUBR_Fp64m32
DIVR_Fp64m32
IST_Fp64m32
ISTT_Fp64m32
DIV_Fp64m32
SUB_FpI16m32
ADD_FpI16m32
MUL_FpI16m32
SUBR_FpI16m32
DIVR_FpI16m32
DIV_FpI16m32
ILD_Fp16m32
IST_Fp16m32
ISTT_Fp16m32
MOVSX64rm32
MOV32ao32
MOV64ao32
CMOVNB_Fp32
SUB_Fp32
CMOVB_Fp32
ADD_Fp32
CMOVNBE_Fp32
CMOVBE_Fp32
CMOVNE_Fp32
CMOVE_Fp32
MUL_Fp32
SIN_Fp32
CMOVNP_Fp32
CMOVP_Fp32
ABS_Fp32
CHS_Fp32
COS_Fp32
SQRT_Fp32
TST_Fp32
DIV_Fp32
EH_SjLj_LongJmp32
EH_SjLj_SetJmp32
CRC32r32r32
UCOM_FpIr32
TLS_addr32
TLS_base_addr32
UCOM_Fpr32
MOVSX64rr32
FLDLG2
FLDLN2
PREFETCHT2
JA_2
JB_2
JAE_2
JBE_2
JGE_2
JE_2
JLE_2
JNE_2
JG_2
JL_2
JO_2
JNO_2
JP_2
JMP_2
JNP_2
JS_2
JNS_2
INT3
LD_Fp064
LD_Fp164
INVLPGA64
VMLOAD64
LXADD64
INVPCID64
INVVPID64
RDFSBASE64
WRFSBASE64
RDGSBASE64
WRGSBASE64
LEAVE64
VMSAVE64
FXSAVE64
CMOV_V2F64
CMOV_V4F64
CMOV_V8F64
PUSHF64
POPF64
LCMPXCHG64
CMOV_V2I64
CMOV_V4I64
CMOV_V8I64
FARCALL64
EH_RETURN64
VMRUN64
ADJCALLSTACKDOWN64
CMOV_RFP64
FARJMP64
ADJCALLSTACKUP64
MMX_MASKMOVQ64
CMOV_FR64
FXRSTOR64
PUSHFS64
POPFS64
PUSHGS64
POPGS64
IRET64
SYSRET64
SYSEXIT64
INVEPT64
XSAVEOPT64
VMASKMOVDQU64
SEG_ALLOCA_64
REP_STOSB_64
REP_MOVSB_64
REP_STOSD_64
REP_MOVSD_64
VAARG_64
WIN_FTOL_64
REP_STOSQ_64
REP_MOVSQ_64
REP_STOSW_64
REP_MOVSW_64
JECXZ_64
TLSCall_64
TAILJMPd64
TCRETURNdi64
TCRETURNmi64
MOV32ri64
TCRETURNri64
ST_FpP80m64
SUB_Fp80m64
ADD_Fp80m64
MUL_Fp80m64
SUBR_Fp80m64
DIVR_Fp80m64
ST_Fp80m64
DIV_Fp80m64
SUB_FpI32m64
ADD_FpI32m64
MUL_FpI32m64
SUBR_FpI32m64
DIVR_FpI32m64
DIV_FpI32m64
ILD_Fp32m64
IST_Fp32m64
ISTT_Fp32m64
ILD_Fp64m64
IST_Fp64m64
ISTT_Fp64m64
CRC32r64m64
SUB_FpI16m64
ADD_FpI16m64
MUL_FpI16m64
SUBR_FpI16m64
DIVR_FpI16m64
DIV_FpI16m64
ILD_Fp16m64
IST_Fp16m64
ISTT_Fp16m64
TAILJMPm64
MMX_PSHUFBrm64
MMX_PSIGNBrm64
MMX_PABSBrm64
MMX_PHSUBDrm64
MMX_PHADDrm64
MMX_PSIGNDrm64
MMX_PABSDrm64
MMX_PHSUBWrm64
MMX_PHADDWrm64
MMX_PSIGNWrm64
MMX_PABSWrm64
MMX_PMADDUBSWrm64
MMX_PHSUBSWrm64
MMX_PHADDSWrm64
MMX_PMULHRSWrm64
MOV64ao64
CMOVNB_Fp64
SUB_Fp64
CMOVB_Fp64
ADD_Fp64
CMOVNBE_Fp64
CMOVBE_Fp64
CMOVNE_Fp64
CMOVE_Fp64
MUL_Fp64
SIN_Fp64
CMOVNP_Fp64
CMOVP_Fp64
ABS_Fp64
CHS_Fp64
COS_Fp64
SQRT_Fp64
TST_Fp64
DIV_Fp64
EH_SjLj_LongJmp64
EH_SjLj_SetJmp64
CRC32r64r64
UCOM_FpIr64
TAILJMPr64
XCHG32ar64
TLS_addr64
TLS_base_addr64
UCOM_Fpr64
MMX_PSHUFBrr64
MMX_PSIGNBrr64
MMX_PABSBrr64
MMX_PHSUBDrr64
MMX_PHADDrr64
MMX_PSIGNDrr64
MMX_PABSDrr64
MMX_PHSUBWrr64
MMX_PHADDWrr64
MMX_PSIGNWrr64
MMX_PABSWrr64
MMX_PMADDUBSWrr64
MMX_PHSUBSWrr64
MMX_PHADDSWrr64
MMX_PMULHRSWrr64
JA_4
JB_4
JAE_4
JBE_4
JGE_4
JE_4
JLE_4
JNE_4
JG_4
JL_4
XBEGIN_4
JO_4
JNO_4
JP_4
JMP_4
JNP_4
JS_4
JNS_4
PUSHA16
POPA16
LXADD16
PUSHF16
POPF16
LCMPXCHG16
CMOV_GR16
PUSHCS16
PUSHDS16
POPDS16
PUSHES16
POPES16
PUSHFS16
POPFS16
PUSHGS16
POPGS16
PUSHSS16
POPSS16
IRET16
MOV32ao32_16
MOV16ao16_16
MOV8ao8_16
MOV32o32a_16
MOV16o16a_16
MOV8o8a_16
PUSH64i16
SBB16i16
SUB16i16
ADC16i16
ADD16i16
AND16i16
CMP16i16
XOR16i16
TEST16i16
PUSHi16
CALLpcrel16
CRC32r32m16
MOVSX32rm16
MOVZX32rm16
MOVSX64rm16
MOV64ao16
MOV16ao16
CRC32r32r16
MOVSX32rr16
MOVZX32rr16
MOVSX64rr16
XSHA256
VPABSBrm256
VPABSDrm256
VPABSWrm256
VPMADDUBSWrm256
VPHSUBSWrm256
VPHADDSWrm256
VPMULHRSWrm256
VPABSBrr256
VPABSDrr256
VPABSWrr256
VPMADDUBSWrr256
VPHSUBSWrr256
VPHADDSWrr256
VPMULHRSWrr256
VBROADCASTF128
VBROADCASTI128
VPABSBrm128
VPABSDrm128
VPABSWrm128
VPMADDUBSWrm128
VPHSUBSWrm128
VPHADDSWrm128
VPMULHRSWrm128
VPHMINPOSUWrm128
VPABSBrr128
VPABSDrr128
VPABSWrr128
VPMADDUBSWrr128
VPHSUBSWrr128
VPHADDSWrr128
VPMULHRSWrr128
VPHMINPOSUWrr128
LXADD8
LCMPXCHG8
CMOV_GR8
PUSH32i8
PUSH64i8
PUSH16i8
SBB8i8
SUB8i8
ADC8i8
AAD8i8
ADD8i8
AND8i8
AAM8i8
CMP8i8
XOR8i8
TEST8i8
SBB32mi8
LOCK_SUB32mi8
ADC32mi8
BTC32mi8
LOCK_ADD32mi8
LOCK_AND32mi8
CMP32mi8
LOCK_XOR32mi8
LOCK_OR32mi8
BTR32mi8
BTS32mi8
BT32mi8
SBB64mi8
LOCK_SUB64mi8
ADC64mi8
BTC64mi8
LOCK_ADD64mi8
LOCK_AND64mi8
CMP64mi8
LOCK_XOR64mi8
LOCK_OR64mi8
BTR64mi8
BTS64mi8
BT64mi8
SBB16mi8
LOCK_SUB16mi8
ADC16mi8
BTC16mi8
LOCK_ADD16mi8
LOCK_AND16mi8
CMP16mi8
LOCK_XOR16mi8
LOCK_OR16mi8
BTR16mi8
BTS16mi8
BT16mi8
IMUL32rmi8
IMUL64rmi8
IMUL16rmi8
SBB32ri8
SUB32ri8
ADC32ri8
BTC32ri8
ADD32ri8
AND32ri8
CMP32ri8
XOR32ri8
BTR32ri8
BTS32ri8
BT32ri8
SBB64ri8
SUB64ri8
ADC64ri8
BTC64ri8
ADD64ri8
AND64ri8
CMP64ri8
XOR64ri8
BTR64ri8
BTS64ri8
BT64ri8
SBB16ri8
SUB16ri8
ADC16ri8
BTC16ri8
ADD16ri8
AND16ri8
CMP16ri8
XOR16ri8
BTR16ri8
BTS16ri8
BT16ri8
SHLD32mri8
SHRD32mri8
SHLD64mri8
SHRD64mri8
SHLD16mri8
SHRD16mri8
SHLD32rri8
SHRD32rri8
IMUL32rri8
SHLD64rri8
SHRD64rri8
IMUL64rri8
SHLD16rri8
SHRD16rri8
IMUL16rri8
CRC32r32m8
CRC32r64m8
MOVSX32rm8
MOVZX32rm8
MOVSX64rm8
MOVSX16rm8
MOVZX16rm8
MOVZX32_NOREXrm8
MOV64ao8
MOV8ao8
CRC32r32r8
CRC32r64r8
MOVSX32rr8
MOVZX32rr8
MOVSX64rr8
MOVSX16rr8
MOVZX16rr8
MOVZX32_NOREXrr8
W64ALLOCA
WIN_ALLOCA
PREFETCHNTA
KSET0B
KSET1B
UD2B
LCMPXCHG16B
LCMPXCHG8B
XCRYPTECB
ADD64ri32_DB
ADD32ri8_DB
ADD64ri8_DB
ADD16ri8_DB
ADD32ri_DB
ADD16ri_DB
ADD32rr_DB
ADD64rr_DB
ADD16rr_DB
XCRYPTCFB
XCRYPTOFB
SCASB
LODSB
INSB
STOSB
CMPSB
OUTSB
MOVSB
CLAC
STAC
XCRYPTCBC
RDPMC
VMFUNC
RDTSC
CPUID
XEND
LIFETIME_END
LOAD_STACK_GUARD
FsFLD0SD
MOVNTSD
WBINVD
FLDL2E
LFENCE
MFENCE
SFENCE
REG_SEQUENCE
CWDE
FFREE
FSCALE
BUNDLE
VMRESUME
LOOPNE
LOOPE
CDQE
XSTORE
RDFSBASE
WRFSBASE
RDGSBASE
WRGSBASE
PAUSE
DBG_VALUE
LEAVE
FXSAVE
IMPLICIT_DEF
VMXOFF
LAHF
SAHF
CMOVNB_F
CMOVB_F
CMOVNBE_F
CMOVBE_F
CMOVNE_F
CMOVE_F
XCH_F
SIN_F
CMOVNP_F
CMOVP_F
ABS_F
CHS_F
COS_F
SQRT_F
TST_F
VPCMPESTRM128REG
VPCMPISTRM128REG
EXTRACT_SUBREG
INSERT_SUBREG
VPCMPESTRIREG
VPCMPISTRIREG
SUBREG_TO_REG
INVLPG
VMLAUNCH
PREFETCH
CLFLUSH
CLGI
STGI
FLDPI
EXTRQI
INSERTQI
RCL32mCL
SHL32mCL
ROL32mCL
SAR32mCL
RCR32mCL
SHR32mCL
ROR32mCL
RCL64mCL
SHL64mCL
ROL64mCL
SAR64mCL
RCR64mCL
SHR64mCL
ROR64mCL
RCL16mCL
SHL16mCL
ROL16mCL
SAR16mCL
RCR16mCL
SHR16mCL
ROR16mCL
RCL8mCL
SHL8mCL
ROL8mCL
SAR8mCL
RCR8mCL
SHR8mCL
ROR8mCL
RCL32rCL
SHL32rCL
ROL32rCL
SAR32rCL
RCR32rCL
SHR32rCL
ROR32rCL
RCL64rCL
SHL64rCL
ROL64rCL
SAR64rCL
RCR64rCL
SHR64rCL
ROR64rCL
RCL16rCL
SHL16rCL
ROL16rCL
SAR16rCL
RCR16rCL
SHR16rCL
ROR16rCL
RCL8rCL
SHL8rCL
ROL8rCL
SAR8rCL
RCR8rCL
SHR8rCL
ROR8rCL
SHLD32mrCL
SHRD32mrCL
SHLD64mrCL
SHRD64mrCL
SHLD16mrCL
SHRD16mrCL
SHLD32rrCL
SHRD32rrCL
SHLD64rrCL
SHRD64rrCL
SHLD16rrCL
SHRD16rrCL
GC_LABEL
EH_LABEL
LRETIL
VMMCALL
VMCALL
SYSCALL
VZEROALL
KILL
NOOPL
SCASL
LODSL
INSL
STOSL
CMPSL
OUTSL
MOVSL
LRETL
MONTMUL
FXAM
VPCMPESTRM128MEM
VPCMPISTRM128MEM
VPCMPESTRIMEM
VPCMPISTRIMEM
FP80_TO_INT32_IN_MEM
FP32_TO_INT32_IN_MEM
FP64_TO_INT32_IN_MEM
FP80_TO_INT64_IN_MEM
FP32_TO_INT64_IN_MEM
FP64_TO_INT64_IN_MEM
FP80_TO_INT16_IN_MEM
FP32_TO_INT16_IN_MEM
FP64_TO_INT16_IN_MEM
FPREM
SEH_SaveXMM
INLINEASM
FPATAN
FPTAN
XBEGIN
CFI_INSTRUCTION
VMXON
EH_RETURN
INTO
STACKMAP
TRAP
RDTSCP
FNOP
LOOP
NOOP
FCOMPP
FDECSTP
FINCSTP
LRETIQ
EXTRQ
SCASQ
LODSQ
STOSQ
CMPSQ
MOVSQ
LRETQ
INSERTQ
MMX_MASKMOVQ
MOVZX64rm16_Q
MOVZX64rr16_Q
MOVZX64rm8_Q
MOVZX64rr8_Q
VZEROUPPER
SYSENTER
MONITOR
FXRSTOR
VLDMXCSR
VSTMXCSR
RDMSR
WRMSR
XCRYPTCTR
AVX2_SETALLONES
V_SETALLONES
VASTART_SAVE_XMM_REGS
SWAPGS
ENCLS
FEMMS
MMX_EMMS
FSINCOS
FsFLD0SS
COPY_TO_REGCLASS
MOVNTSS
CLTS
FLDL2T
XLAT
FXTRACT
SYSRET
MORESTACK_RET
WAIT
SKINIT
FNINIT
SYSEXIT
FRNDINT
PATCHPOINT
XSAVEOPT
LIFETIME_START
XABORT
XTEST
ENCLU
VMASKMOVDQU
XGETBV
XSETBV
VFMADDSUBPD4rrY_REV
VFMSUBPD4rrY_REV
VFNMSUBPD4rrY_REV
VFMSUBADDPD4rrY_REV
VFMADDPD4rrY_REV
VFNMADDPD4rrY_REV
VFMADDSUBPS4rrY_REV
VFMSUBPS4rrY_REV
VFNMSUBPS4rrY_REV
VFMSUBADDPS4rrY_REV
VFMADDPS4rrY_REV
VFNMADDPS4rrY_REV
SBB32rr_REV
SUB32rr_REV
ADC32rr_REV
ADD32rr_REV
AND32rr_REV
CMP32rr_REV
XOR32rr_REV
MOV32rr_REV
SBB64rr_REV
SUB64rr_REV
ADC64rr_REV
ADD64rr_REV
AND64rr_REV
CMP64rr_REV
MMX_MOVQ64rr_REV
XOR64rr_REV
MOV64rr_REV
VFMADDSUBPD4rr_REV
VFMSUBPD4rr_REV
VFNMSUBPD4rr_REV
VFMSUBADDPD4rr_REV
VFMADDPD4rr_REV
VFNMADDPD4rr_REV
VFMSUBSD4rr_REV
VFNMSUBSD4rr_REV
VFMADDSD4rr_REV
VFNMADDSD4rr_REV
VFMADDSUBPS4rr_REV
VFMSUBPS4rr_REV
VFNMSUBPS4rr_REV
VFMSUBADDPS4rr_REV
VFMADDPS4rr_REV
VFNMADDPS4rr_REV
VFMSUBSS4rr_REV
VFNMSUBSS4rr_REV
VFMADDSS4rr_REV
VFNMADDSS4rr_REV
SBB16rr_REV
SUB16rr_REV
ADC16rr_REV
ADD16rr_REV
AND16rr_REV
CMP16rr_REV
XOR16rr_REV
MOV16rr_REV
SBB8rr_REV
SUB8rr_REV
ADC8rr_REV
ADD8rr_REV
AND8rr_REV
CMP8rr_REV
XOR8rr_REV
MOV8rr_REV
VMOVDQArr_REV
VMOVAPDrr_REV
VMOVUPDrr_REV
VMOVSDrr_REV
VMOVAPSrr_REV
VMOVUPSrr_REV
VMOVSSrr_REV
VMOVDQUrr_REV
VPEXTRWrr_REV
VMOVDQAYrr_REV
VMOVAPDYrr_REV
VMOVUPDYrr_REV
VMOVAPSYrr_REV
VMOVUPSYrr_REV
VMOVDQUYrr_REV
VMOVSDZrr_REV
VMOVSSZrr_REV
KSET0W
KSET1W
PREFETCHW
LRETIW
NOOPW
SCASW
LODSW
INSW
STOSW
CMPSW
OUTSW
MOVSW
LRETW
FYL2X
FNCLEX
TEST8ri_NOREX
MOV8rm_NOREX
MOV8mr_NOREX
MOV8rr_NOREX
REX64_PREFIX
DATA16_PREFIX
REPNE_PREFIX
XACQUIRE_PREFIX
XRELEASE_PREFIX
LOCK_PREFIX
REP_PREFIX
CS_PREFIX
DS_PREFIX
ES_PREFIX
FS_PREFIX
GS_PREFIX
SS_PREFIX
COPY
VFMADDSUBPDr231mY
VFMSUBPDr231mY
VFNMSUBPDr231mY
VFMSUBADDPDr231mY
VFMADDPDr231mY
VFNMADDPDr231mY
VFMADDSUBPSr231mY
VFMSUBPSr231mY
VFNMSUBPSr231mY
VFMSUBADDPSr231mY
VFMADDPSr231mY
VFNMADDPSr231mY
VFMADDSUBPDr132mY
VFMSUBPDr132mY
VFNMSUBPDr132mY
VFMSUBADDPDr132mY
VFMADDPDr132mY
VFNMADDPDr132mY
VFMADDSUBPSr132mY
VFMSUBPSr132mY
VFNMSUBPSr132mY
VFMSUBADDPSr132mY
VFMADDPSr132mY
VFNMADDPSr132mY
VFMADDSUBPDr213mY
VFMSUBPDr213mY
VFNMSUBPDr213mY
VFMSUBADDPDr213mY
VFMADDPDr213mY
VFNMADDPDr213mY
VFMADDSUBPSr213mY
VFMSUBPSr213mY
VFNMSUBPSr213mY
VFMSUBADDPSr213mY
VFMADDPSr213mY
VFNMADDPSr213mY
VFMADDSUBPD4rmY
VFMSUBPD4rmY
VFNMSUBPD4rmY
VFMSUBADDPD4rmY
VFMADDPD4rmY
VFNMADDPD4rmY
VFMADDSUBPS4rmY
VFMSUBPS4rmY
VFNMSUBPS4rmY
VFMSUBADDPS4rmY
VFMADDPS4rmY
VFNMADDPS4rmY
VPERMIL2PDrmY
VFRCZPDrmY
VPERMIL2PSrmY
VFRCZPSrmY
VPCMOVrmY
VFMADDSUBPDr231rY
VFMSUBPDr231rY
VFNMSUBPDr231rY
VFMSUBADDPDr231rY
VFMADDPDr231rY
VFNMADDPDr231rY
VFMADDSUBPSr231rY
VFMSUBPSr231rY
VFNMSUBPSr231rY
VFMSUBADDPSr231rY
VFMADDPSr231rY
VFNMADDPSr231rY
VFMADDSUBPDr132rY
VFMSUBPDr132rY
VFNMSUBPDr132rY
VFMSUBADDPDr132rY
VFMADDPDr132rY
VFNMADDPDr132rY
VFMADDSUBPSr132rY
VFMSUBPSr132rY
VFNMSUBPSr132rY
VFMSUBADDPSr132rY
VFMADDPSr132rY
VFNMADDPSr132rY
VFMADDSUBPDr213rY
VFMSUBPDr213rY
VFNMSUBPDr213rY
VFMSUBADDPDr213rY
VFMADDPDr213rY
VFNMADDPDr213rY
VFMADDSUBPSr213rY
VFMSUBPSr213rY
VFNMSUBPSr213rY
VFMSUBADDPSr213rY
VFMADDPSr213rY
VFNMADDPSr213rY
VFMADDSUBPD4mrY
VFMSUBPD4mrY
VFNMSUBPD4mrY
VFMSUBADDPD4mrY
VFMADDPD4mrY
VFNMADDPD4mrY
VFMADDSUBPS4mrY
VFMSUBPS4mrY
VFNMSUBPS4mrY
VFMSUBADDPS4mrY
VFMADDPS4mrY
VFNMADDPS4mrY
VPERMIL2PDmrY
VPERMIL2PSmrY
VPCMOVmrY
VFMADDSUBPD4rrY
VFMSUBPD4rrY
VFNMSUBPD4rrY
VFMSUBADDPD4rrY
VFMADDPD4rrY
VFNMADDPD4rrY
VFMADDSUBPS4rrY
VFMSUBPS4rrY
VFNMSUBPS4rrY
VFMSUBADDPS4rrY
VFMADDPS4rrY
VFNMADDPS4rrY
VPERMIL2PDrrY
VFRCZPDrrY
VPERMIL2PSrrY
VFRCZPSrrY
VPCMOVrrY
JCXZ
JRCXZ
MOV32o32a
MOV64o32a
MOV64o64a
MOV64o16a
MOV16o16a
MOV64o8a
MOV8o8a
VCMPPDZrrib
VCMPPSZrrib
VFMADDSUB132PDZmb
VFMSUB132PDZmb
VFNMSUB132PDZmb
VFMSUBADD132PDZmb
VFMADD132PDZmb
VFNMADD132PDZmb
VFMADDSUB213PDZmb
VFMSUB213PDZmb
VFNMSUB213PDZmb
VFMSUBADD213PDZmb
VFMADD213PDZmb
VFNMADD213PDZmb
VFMADDSUB132PSZmb
VFMSUB132PSZmb
VFNMSUB132PSZmb
VFMSUBADD132PSZmb
VFMADD132PSZmb
VFNMADD132PSZmb
VFMADDSUB213PSZmb
VFMSUB213PSZmb
VFNMSUB213PSZmb
VFMSUBADD213PSZmb
VFMADD213PSZmb
VFNMADD213PSZmb
VPCONFLICTDrmb
VPLZCNTDrmb
VPCONFLICTQrmb
VPLZCNTQrmb
VPSUBDZrmb
VPADDDZrmb
VPANDDZrmb
VPMULLDZrmb
VPANDNDZrmb
VSUBPDZrmb
VADDPDZrmb
VMULPDZrmb
VMINPDZrmb
VDIVPDZrmb
VMAXPDZrmb
VPORDZrmb
VPXORDZrmb
VPABSDZrmb
VPMINSDZrmb
VPMAXSDZrmb
VPMINUDZrmb
VPMAXUDZrmb
VPSUBQZrmb
VPADDQZrmb
VPMULDQZrmb
VPANDQZrmb
VPMULUDQZrmb
VPANDNQZrmb
VPORQZrmb
VPXORQZrmb
VPABSQZrmb
VPMINSQZrmb
VPMAXSQZrmb
VPMINUQZrmb
VPMAXUQZrmb
VSUBPSZrmb
VADDPSZrmb
VMULPSZrmb
VMINPSZrmb
VDIVPSZrmb
VMAXPSZrmb
VRCP28PDZrb
VRSQRT28PDZrb
VRCP28PSZrb
VRSQRT28PSZrb
VRCP28SDrrb
VRSQRT28SDrrb
VRCP28SSrrb
VRSQRT28SSrrb
VCVTPD2DQZrrb
VCVTPS2DQZrrb
VCVTPD2UDQZrrb
VCVTPS2UDQZrrb
VCVTPD2PSZrrb
VCVTDQ2PSZrrb
VCVTUDQ2PSZrrb
SEH_StackAlloc
MOV32rc
MOV64rc
TAILJMPd
OR32mrLocked
MOV32rd
MOV64rd
SEH_PushFrame
SEH_SetFrame
SEH_Epilogue
SEH_EndPrologue
SEH_SaveReg
SEH_PushReg
FARCALL32i
FARJMP32i
FARCALL16i
FARJMP16i
TCRETURNdi
SBB32mi
LOCK_SUB32mi
ADC32mi
LOCK_ADD32mi
LOCK_AND32mi
BEXTRI32mi
RCL32mi
SHL32mi
ROL32mi
CMP32mi
SAR32mi
RCR32mi
SHR32mi
ROR32mi
LOCK_XOR32mi
LOCK_OR32mi
TEST32mi
MOV32mi
RORX32mi
BEXTRI64mi
RCL64mi
SHL64mi
ROL64mi
SAR64mi
RCR64mi
SHR64mi
ROR64mi
RORX64mi
SBB16mi
LOCK_SUB16mi
ADC16mi
LOCK_ADD16mi
LOCK_AND16mi
RCL16mi
SHL16mi
ROL16mi
CMP16mi
SAR16mi
RCR16mi
SHR16mi
ROR16mi
LOCK_XOR16mi
LOCK_OR16mi
TEST16mi
MOV16mi
SBB8mi
LOCK_SUB8mi
ADC8mi
LOCK_ADD8mi
LOCK_AND8mi
RCL8mi
SHL8mi
ROL8mi
CMP8mi
SAR8mi
RCR8mi
SHR8mi
ROR8mi
LOCK_XOR8mi
LOCK_OR8mi
TEST8mi
MOV8mi
VPCOMBmi
VPROTBmi
VPCOMUBmi
VPSHUFDmi
VPCOMDmi
VPERMILPDmi
VPROTDmi
VPCOMUDmi
TCRETURNmi
VPCOMQmi
VPROTQmi
VPCOMUQmi
VPERMILPSmi
MMX_PSHUFWmi
VPSHUFHWmi
VPSHUFLWmi
VPCOMWmi
VPROTWmi
VPCOMUWmi
VPSHUFDYmi
VPERMILPDYmi
VPERMPDYmi
VPERMQYmi
VPERMILPSYmi
VPSHUFHWYmi
VPSHUFLWYmi
VPSRADZmi
VPSHUFDZmi
VPSLLDZmi
VPSRLDZmi
VPERMILPDZmi
VPERMPDZmi
VPSRAQZmi
VPSLLQZmi
VPSRLQZmi
VPERMQZmi
VPERMILPSZmi
IMUL32rmi
SHA1RNDS4rmi
IMUL16rmi
VPBLENDDrmi
VALIGNDrmi
VBLENDPDrmi
VSHUFPDrmi
VDPPDrmi
VCMPPDrmi
VALIGNQrmi
VBLENDPSrmi
VSHUFPSrmi
VDPPSrmi
VCMPPSrmi
VMPSADBWrmi
VPBLENDWrmi
VPINSRWrmi
VPBLENDDYrmi
VBLENDPDYrmi
VSHUFPDYrmi
VCMPPDYrmi
VBLENDPSYrmi
VSHUFPSYrmi
VDPPSYrmi
VCMPPSYrmi
VMPSADBWYrmi
VPBLENDWYrmi
VSHUFPDZrmi
VPCMPDZrmi
VCMPPDZrmi
VPCMPUDZrmi
VPCMPQZrmi
VPCMPUQZrmi
VSHUFPSZrmi
VCMPPSZrmi
MMX_PINSRWirmi
SBB32ri
SUB32ri
ADC32ri
ADD32ri
AND32ri
BEXTRI32ri
RCL32ri
SHL32ri
ROL32ri
IN32ri
CMP32ri
SAR32ri
RCR32ri
SHR32ri
ROR32ri
XOR32ri
TEST32ri
MOV32ri
RORX32ri
BEXTRI64ri
RCL64ri
SHL64ri
ROL64ri
SAR64ri
RCR64ri
SHR64ri
ROR64ri
MOV64ri
RORX64ri
SBB16ri
SUB16ri
ADC16ri
ADD16ri
AND16ri
RCL16ri
SHL16ri
ROL16ri
IN16ri
CMP16ri
SAR16ri
RCR16ri
SHR16ri
ROR16ri
XOR16ri
TEST16ri
MOV16ri
SBB8ri
SUB8ri
ADC8ri
ADD8ri
AND8ri
RCL8ri
SHL8ri
ROL8ri
IN8ri
CMP8ri
SAR8ri
RCR8ri
SHR8ri
ROR8ri
XOR8ri
TEST8ri
MOV8ri
VPCOMBri
VPROTBri
VPCOMUBri
VPSRADri
MMX_PSRADri
VPSHUFDri
VPSLLDri
MMX_PSLLDri
VPSRLDri
MMX_PSRLDri
VPCOMDri
VPERMILPDri
VPROTDri
VPCOMUDri
TCRETURNri
VPSLLDQri
VPSRLDQri
VPSLLQri
MMX_PSLLQri
VPSRLQri
MMX_PSRLQri
VPCOMQri
VPROTQri
VPCOMUQri
VPERMILPSri
VPSRAWri
MMX_PSRAWri
MMX_PSHUFWri
VPSHUFHWri
VPSHUFLWri
VPSLLWri
MMX_PSLLWri
VPSRLWri
MMX_PSRLWri
KSHIFTLWri
VPCOMWri
KSHIFTRWri
VPEXTRWri
VPROTWri
VPCOMUWri
VPSRADYri
VPSHUFDYri
VPSLLDYri
VPSRLDYri
VPERMILPDYri
VPERMPDYri
VPSLLDQYri
VPSRLDQYri
VPSLLQYri
VPSRLQYri
VPERMQYri
VPERMILPSYri
VPSRAWYri
VPSHUFHWYri
VPSHUFLWYri
VPSLLWYri
VPSRLWYri
VPSRADZri
VPSHUFDZri
VPSLLDZri
VPSRLDZri
VPERMILPDZri
VPERMPDZri
VPSRAQZri
VPSLLQZri
VPSRLQZri
VPERMQZri
VPERMILPSZri
IMUL32rri
SHA1RNDS4rri
IMUL16rri
VPBLENDDrri
VALIGNDrri
VBLENDPDrri
VSHUFPDrri
VDPPDrri
VCMPPDrri
VALIGNQrri
VBLENDPSrri
VSHUFPSrri
VDPPSrri
VCMPPSrri
VMPSADBWrri
VPBLENDWrri
VPINSRWrri
VPBLENDDYrri
VBLENDPDYrri
VSHUFPDYrri
VCMPPDYrri
VBLENDPSYrri
VSHUFPSYrri
VDPPSYrri
VCMPPSYrri
VMPSADBWYrri
VPBLENDWYrri
VSHUFPDZrri
VPCMPDZrri
VCMPPDZrri
VPCMPUDZrri
VPCMPQZrri
VPCMPUQZrri
VSHUFPSZrri
VCMPPSZrri
MMX_PINSRWirri
MMX_PEXTRWirri
VPCONFLICTDrmbk
VPLZCNTDrmbk
VPCONFLICTQrmbk
VPLZCNTQrmbk
VPSUBDZrmbk
VPADDDZrmbk
VPANDDZrmbk
VPMULLDZrmbk
VPANDNDZrmbk
VSUBPDZrmbk
VADDPDZrmbk
VMULPDZrmbk
VMINPDZrmbk
VDIVPDZrmbk
VMAXPDZrmbk
VPORDZrmbk
VPXORDZrmbk
VPABSDZrmbk
VPMINSDZrmbk
VPMAXSDZrmbk
VPMINUDZrmbk
VPMAXUDZrmbk
VPSUBQZrmbk
VPADDQZrmbk
VPMULDQZrmbk
VPANDQZrmbk
VPMULUDQZrmbk
VPANDNQZrmbk
VPORQZrmbk
VPXORQZrmbk
VPABSQZrmbk
VPMINSQZrmbk
VPMAXSQZrmbk
VPMINUQZrmbk
VPMAXUQZrmbk
VSUBPSZrmbk
VADDPSZrmbk
VMULPSZrmbk
VMINPSZrmbk
VDIVPSZrmbk
VMAXPSZrmbk
VPSRADZmik
VPSLLDZmik
VPSRLDZmik
VPSRAQZmik
VPSLLQZmik
VPSRLQZmik
VPSRADZrik
VPSLLDZrik
VPSRLDZrik
VPSRAQZrik
VPSLLQZrik
VPSRLQZrik
VALIGNDrrik
VALIGNQrrik
KMOVBkk
KMOVDkk
KMOVQkk
KMOVWkk
KMOVBmk
KMOVDmk
KMOVQmk
KMOVWmk
VMOVDQA32Z256rmk
VMOVDQU32Z256rmk
VMOVDQA64Z256rmk
VMOVDQU64Z256rmk
VMOVDQU16Z256rmk
VMOVDQU8Z256rmk
VMOVAPDZ256rmk
VMOVUPDZ256rmk
VMOVAPSZ256rmk
VMOVUPSZ256rmk
VMOVDQA32Z128rmk
VMOVDQU32Z128rmk
VMOVDQA64Z128rmk
VMOVDQU64Z128rmk
VMOVDQU16Z128rmk
VMOVDQU8Z128rmk
VMOVAPDZ128rmk
VMOVUPDZ128rmk
VMOVAPSZ128rmk
VMOVUPSZ128rmk
VPERMI2Drmk
VPERMT2Drmk
VPERMI2PDrmk
VPERMT2PDrmk
VPCONFLICTDrmk
VPLZCNTDrmk
VPERMI2Qrmk
VPERMT2Qrmk
VPCONFLICTQrmk
VPLZCNTQrmk
VPERMI2PSrmk
VPERMT2PSrmk
VMOVDQA32Zrmk
VMOVDQU32Zrmk
VMOVDQA64Zrmk
VMOVDQU64Zrmk
VMOVDQU16Zrmk
VMOVDQU8Zrmk
VPSRADZrmk
VPSUBDZrmk
VPMOVSXBDZrmk
VPMOVZXBDZrmk
VPADDDZrmk
VPANDDZrmk
VPSLLDZrmk
VPMULLDZrmk
VPSRLDZrmk
VPANDNDZrmk
VMOVAPDZrmk
VSUBPDZrmk
VADDPDZrmk
VMULPDZrmk
VMINPDZrmk
VMOVUPDZrmk
VDIVPDZrmk
VMAXPDZrmk
VPORDZrmk
VPXORDZrmk
VPABSDZrmk
VPMINSDZrmk
VPMAXSDZrmk
VPMINUDZrmk
VPMAXUDZrmk
VPMOVSXWDZrmk
VPMOVZXWDZrmk
VPSRAQZrmk
VPSUBQZrmk
VPMOVSXBQZrmk
VPMOVZXBQZrmk
VPADDQZrmk
VPMULDQZrmk
VPANDQZrmk
VPMULUDQZrmk
VPMOVSXDQZrmk
VPMOVZXDQZrmk
VPSLLQZrmk
VPSRLQZrmk
VPANDNQZrmk
VPORQZrmk
VPXORQZrmk
VPABSQZrmk
VPMINSQZrmk
VPMAXSQZrmk
VPMINUQZrmk
VPMAXUQZrmk
VPMOVSXWQZrmk
VPMOVZXWQZrmk
VMOVAPSZrmk
VSUBPSZrmk
VADDPSZrmk
VMULPSZrmk
VMINPSZrmk
VMOVUPSZrmk
VDIVPSZrmk
VMAXPSZrmk
KMOVBrk
KMOVDrk
KMOVQrk
KMOVWrk
VFMADDSUB213PDZrk
VFMSUB213PDZrk
VFNMSUB213PDZrk
VFMSUBADD213PDZrk
VFMADD213PDZrk
VFNMADD213PDZrk
VFMADDSUB213PSZrk
VFMSUB213PSZrk
VFNMSUB213PSZrk
VFMSUBADD213PSZrk
VFMADD213PSZrk
VFNMADD213PSZrk
VMOVDQA32Z256mrk
VMOVDQU32Z256mrk
VMOVDQA64Z256mrk
VMOVDQU64Z256mrk
VMOVDQU16Z256mrk
VMOVDQU8Z256mrk
VMOVAPDZ256mrk
VMOVUPDZ256mrk
VMOVAPSZ256mrk
VMOVUPSZ256mrk
VMOVDQA32Z128mrk
VMOVDQU32Z128mrk
VMOVDQA64Z128mrk
VMOVDQU64Z128mrk
VMOVDQU16Z128mrk
VMOVDQU8Z128mrk
VMOVAPDZ128mrk
VMOVUPDZ128mrk
VMOVAPSZ128mrk
VMOVUPSZ128mrk
VPMOVUSDBmrk
VPMOVSDBmrk
VPMOVDBmrk
VPMOVUSQBmrk
VPMOVSQBmrk
VPMOVQBmrk
VPMOVUSQDmrk
VPMOVSQDmrk
VPMOVQDmrk
VPMOVUSDWmrk
VPMOVSDWmrk
VPMOVDWmrk
VPMOVUSQWmrk
VPMOVSQWmrk
VPMOVQWmrk
VMOVDQA32Zmrk
VMOVDQU32Zmrk
VMOVDQA64Zmrk
VMOVDQU64Zmrk
VMOVDQU16Zmrk
VMOVDQU8Zmrk
VMOVAPDZmrk
VMOVUPDZmrk
VMOVAPSZmrk
VMOVUPSZmrk
VMOVDQA32Z256rrk
VMOVDQU32Z256rrk
VMOVDQA64Z256rrk
VMOVDQU64Z256rrk
VMOVDQU16Z256rrk
VMOVDQU8Z256rrk
VMOVAPDZ256rrk
VMOVUPDZ256rrk
VMOVAPSZ256rrk
VMOVUPSZ256rrk
VMOVDQA32Z128rrk
VMOVDQU32Z128rrk
VMOVDQA64Z128rrk
VMOVDQU64Z128rrk
VMOVDQU16Z128rrk
VMOVDQU8Z128rrk
VMOVAPDZ128rrk
VMOVUPDZ128rrk
VMOVAPSZ128rrk
VMOVUPSZ128rrk
VPMOVUSDBrrk
VPMOVSDBrrk
VPMOVDBrrk
VPMOVUSQBrrk
VPMOVSQBrrk
VPMOVQBrrk
VPERMI2Drrk
VPERMT2Drrk
VPERMI2PDrrk
VPERMT2PDrrk
VPMOVUSQDrrk
VPMOVSQDrrk
VPMOVQDrrk
VPCONFLICTDrrk
VPLZCNTDrrk
VPERMI2Qrrk
VPERMT2Qrrk
VPCONFLICTQrrk
VPLZCNTQrrk
VPERMI2PSrrk
VPERMT2PSrrk
VPMOVUSDWrrk
VPMOVSDWrrk
VPMOVDWrrk
VPMOVUSQWrrk
VPMOVSQWrrk
VPMOVQWrrk
VMOVDQA32Zrrk
VMOVDQU32Zrrk
VMOVDQA64Zrrk
VMOVDQU64Zrrk
VMOVDQU16Zrrk
VMOVDQU8Zrrk
VPSRADZrrk
VPSUBDZrrk
VPMOVSXBDZrrk
VPMOVZXBDZrrk
VPADDDZrrk
VPANDDZrrk
VPSLLDZrrk
VPMULLDZrrk
VPSRLDZrrk
VPANDNDZrrk
VMOVAPDZrrk
VSUBPDZrrk
VADDPDZrrk
VMULPDZrrk
VMINPDZrrk
VMOVUPDZrrk
VDIVPDZrrk
VMAXPDZrrk
VPORDZrrk
VPXORDZrrk
VPABSDZrrk
VPMINSDZrrk
VMOVSDZrrk
VPMAXSDZrrk
VPMINUDZrrk
VPMAXUDZrrk
VPMOVSXWDZrrk
VPMOVZXWDZrrk
VPSRAQZrrk
VPSUBQZrrk
VPMOVSXBQZrrk
VPMOVZXBQZrrk
VPADDQZrrk
VPMULDQZrrk
VPANDQZrrk
VPMULUDQZrrk
VPMOVSXDQZrrk
VPMOVZXDQZrrk
VPSLLQZrrk
VPSRLQZrrk
VPANDNQZrrk
VPORQZrrk
VPXORQZrrk
VPABSQZrrk
VPMINSQZrrk
VPMAXSQZrrk
VPMINUQZrrk
VPMAXUQZrrk
VPMOVSXWQZrrk
VPMOVZXWQZrrk
VMOVAPSZrrk
VSUBPSZrrk
VADDPSZrrk
VMULPSZrrk
VMINPSZrrk
VMOVUPSZrrk
VDIVPSZrrk
VMAXPSZrrk
VMOVSSZrrk
LD_F80m
ST_FP80m
ST_FpP80m
LD_Fp80m
VFMADDSUBPDr231m
VFMSUBPDr231m
VFNMSUBPDr231m
VFMSUBADDPDr231m
VFMADDPDr231m
VFNMADDPDr231m
VFMSUBSDr231m
VFNMSUBSDr231m
VFMADDSDr231m
VFNMADDSDr231m
VFMADDSUBPSr231m
VFMSUBPSr231m
VFNMSUBPSr231m
VFMSUBADDPSr231m
VFMADDPSr231m
VFNMADDPSr231m
VFMSUBSSr231m
VFNMSUBSSr231m
VFMADDSSr231m
VFNMADDSSr231m
VFMADDSUBPDr132m
VFMSUBPDr132m
VFNMSUBPDr132m
VFMSUBADDPDr132m
VFMADDPDr132m
VFNMADDPDr132m
VFMSUBSDr132m
VFNMSUBSDr132m
VFMADDSDr132m
VFNMADDSDr132m
VFMADDSUBPSr132m
VFMSUBPSr132m
VFNMSUBPSr132m
VFMSUBADDPSr132m
VFMADDPSr132m
VFNMADDPSr132m
VFMSUBSSr132m
VFNMSUBSSr132m
VFMADDSSr132m
VFNMADDSSr132m
LOCK_DEC32m
LOCK_INC32m
SUB_F32m
ADD_F32m
ILD_F32m
MUL_F32m
SUBR_F32m
DIVR_F32m
IST_F32m
DIV_F32m
NEG32m
SUB_FI32m
ADD_FI32m
MUL_FI32m
SUBR_FI32m
DIVR_FI32m
DIV_FI32m
FARCALL32m
IMUL32m
FCOM32m
FICOM32m
IST_FP32m
ISTT_FP32m
FARJMP32m
FCOMP32m
FICOMP32m
ST_FpP32m
LGDT32m
SGDT32m
LIDT32m
SIDT32m
NOT32m
IDIV32m
DEC64_32m
INC64_32m
SUB_Fp32m
ADD_Fp32m
LD_Fp32m
MUL_Fp32m
SUBR_Fp32m
DIVR_Fp32m
ST_Fp32m
DIV_Fp32m
VFMADDSUBPDr213m
VFMSUBPDr213m
VFNMSUBPDr213m
VFMSUBADDPDr213m
VFMADDPDr213m
VFNMADDPDr213m
VFMSUBSDr213m
VFNMSUBSDr213m
VFMADDSDr213m
VFNMADDSDr213m
VFMADDSUBPSr213m
VFMSUBPSr213m
VFNMSUBPSr213m
VFMSUBADDPSr213m
VFMADDPSr213m
VFNMADDPSr213m
VFMSUBSSr213m
VFNMSUBSSr213m
VFMADDSSr213m
VFNMADDSSr213m
LOCK_DEC64m
LOCK_INC64m
SUB_F64m
ADD_F64m
ILD_F64m
MUL_F64m
SUBR_F64m
DIVR_F64m
ST_F64m
DIV_F64m
NEG64m
CALL64m
IMUL64m
FCOM64m
IST_FP64m
ISTT_FP64m
JMP64m
FCOMP64m
ST_FpP64m
LGDT64m
SGDT64m
LIDT64m
SIDT64m
SLDT64m
NOT64m
IDIV64m
SUB_Fp64m
ADD_Fp64m
LD_Fp64m
MUL_Fp64m
SUBR_Fp64m
DIVR_Fp64m
ST_Fp64m
DIV_Fp64m
LOCK_DEC16m
LOCK_INC16m
ILD_F16m
IST_F16m
NEG16m
SUB_FI16m
ADD_FI16m
MUL_FI16m
SUBR_FI16m
DIVR_FI16m
DIV_FI16m
FARCALL16m
IMUL16m
FICOM16m
IST_FP16m
ISTT_FP16m
FARJMP16m
FICOMP16m
LGDT16m
SGDT16m
LIDT16m
SIDT16m
LLDT16m
SLDT16m
NOT16m
IDIV16m
FLDCW16m
FNSTCW16m
LMSW16m
SMSW16m
DEC64_16m
INC64_16m
LOCK_DEC8m
LOCK_INC8m
NEG8m
IMUL8m
NOT8m
IDIV8m
SETAm
SETBm
FBLDm
VMPTRLDm
VGATHERPF0DPDm
VSCATTERPF0DPDm
VGATHERPF1DPDm
VSCATTERPF1DPDm
VROUNDPDm
VGATHERPF0QPDm
VSCATTERPF0QPDm
VGATHERPF1QPDm
VSCATTERPF1QPDm
VSQRTPDm
VROUNDYPDm
VROUNDSDm
VRNDSCALESDm
VSQRTSDm
SETAEm
SETBEm
SETGEm
SETLEm
SETNEm
SETEm
FSAVEm
SETGm
SETLm
SETNOm
SETOm
TAILJMPm
SETNPm
SETPm
FBSTPm
VMCLEARm
FRSTORm
VERRm
LTRm
STRm
SETNSm
VGATHERPF0DPSm
VSCATTERPF0DPSm
VGATHERPF1DPSm
VSCATTERPF1DPSm
VROUNDPSm
VRCPPSm
VGATHERPF0QPSm
VSCATTERPF0QPSm
VGATHERPF1QPSm
VSCATTERPF1QPSm
VRSQRTPSm
VSQRTPSm
VROUNDYPSm
VROUNDSSm
VRNDSCALESSm
VRCPSSm
VRSQRTSSm
VSQRTSSm
SETSm
VMPTRSTm
FLDENVm
FSTENVm
VERWm
FNSTSWm
VSQRTPDYm
VRCPPSYm
VRSQRTPSYm
VSQRTPSYm
VFMADDSUB132PDZm
VFMSUB132PDZm
VFNMSUB132PDZm
VFMSUBADD132PDZm
VFMADD132PDZm
VFNMADD132PDZm
VFMADDSUB213PDZm
VFMSUB213PDZm
VFNMSUB213PDZm
VFMSUBADD213PDZm
VFMADD213PDZm
VFNMADD213PDZm
VRCP14PDZm
VRSQRT14PDZm
VRCP28PDZm
VRSQRT28PDZm
VRNDSCALEPDZm
VFMSUBSDZm
VFNMSUBSDZm
VFMADDSDZm
VFNMADDSDZm
VSQRTSDZm
VFMADDSUB132PSZm
VFMSUB132PSZm
VFNMSUB132PSZm
VFMSUBADD132PSZm
VFMADD132PSZm
VFNMADD132PSZm
VFMADDSUB213PSZm
VFMSUB213PSZm
VFNMSUB213PSZm
VFMSUBADD213PSZm
VFMADD213PSZm
VFNMADD213PSZm
VRCP14PSZm
VRSQRT14PSZm
VRCP28PSZm
VRSQRT28PSZm
VRNDSCALEPSZm
VFMSUBSSZm
VFNMSUBSSZm
VFMADDSSZm
VFNMADDSSZm
VSQRTSSZm
KMOVBkm
KMOVDkm
KMOVQkm
KMOVWkm
PUSH32rmm
POP32rmm
PUSH64rmm
POP64rmm
PUSH16rmm
POP16rmm
SHA1MSG1rm
SHA256MSG1rm
PFRCPIT1rm
PFRSQIT1rm
CMOVA32rm
SBB32rm
SUB32rm
CMOVB32rm
ADC32rm
BLCIC32rm
BLSIC32rm
T1MSKC32rm
VMREAD32rm
XADD32rm
AND32rm
CMOVAE32rm
CMOVBE32rm
CMOVGE32rm
CMOVLE32rm
CMOVNE32rm
VMWRITE32rm
CMOVE32rm
BSF32rm
CMPXCHG32rm
CMOVG32rm
BLCI32rm
BZHI32rm
BLSI32rm
BLCMSK32rm
BLSMSK32rm
TZMSK32rm
BLCFILL32rm
BLSFILL32rm
LSL32rm
IMUL32rm
CMOVL32rm
ANDN32rm
CMOVNO32rm
CMOVO32rm
PDEP32rm
CMP32rm
CMOVNP32rm
CMOVP32rm
LAR32rm
XOR32rm
BSR32rm
BLSR32rm
BEXTR32rm
BLCS32rm
LDS32rm
BOUNDS32rm
LES32rm
LFS32rm
LGS32rm
CMOVNS32rm
LSS32rm
CMOVS32rm
POPCNT32rm
LZCNT32rm
TZCNT32rm
TEST32rm
PEXT32rm
ACQUIRE_MOV32rm
ADCX32rm
SHLX32rm
MULX32rm
ADOX32rm
SARX32rm
SHRX32rm
SHA1MSG2rm
SHA256MSG2rm
SHA256RNDS2rm
PFRCPIT2rm
CMOVA64rm
SBB64rm
SUB64rm
CMOVB64rm
ADC64rm
BLCIC64rm
BLSIC64rm
T1MSKC64rm
VMREAD64rm
XADD64rm
AND64rm
Int_VCVTSI2SD64rm
Int_CVTSI2SD64rm
MMX_MOVD64rm
CMOVAE64rm
CMOVBE64rm
CMOVGE64rm
CMOVLE64rm
CMOVNE64rm
VMWRITE64rm
CMOVE64rm
BSF64rm
CMPXCHG64rm
CMOVG64rm
BLCI64rm
BZHI64rm
Int_VCVTTSD2SI64rm
Int_CVTTSD2SI64rm
VCVTSD2SI64rm
Int_VCVTTSS2SI64rm
Int_CVTTSS2SI64rm
VCVTSS2SI64rm
BLSI64rm
BLCMSK64rm
BLSMSK64rm
TZMSK64rm
BLCFILL64rm
BLSFILL64rm
LSL64rm
IMUL64rm
CMOVL64rm
ANDN64rm
CMOVNO64rm
CMOVO64rm
PDEP64rm
CMP64rm
CMOVNP64rm
CMOVP64rm
MMX_MOVQ64rm
LAR64rm
XOR64rm
BSR64rm
BLSR64rm
BEXTR64rm
BLCS64rm
LFS64rm
LGS64rm
CMOVNS64rm
Int_VCVTSI2SS64rm
Int_CVTSI2SS64rm
LSS64rm
CMOVS64rm
POPCNT64rm
LZCNT64rm
TZCNT64rm
TEST64rm
PEXT64rm
ACQUIRE_MOV64rm
ADCX64rm
SHLX64rm
MULX64rm
ADOX64rm
SARX64rm
SHRX64rm
VFMADDSUBPD4rm
VFMSUBPD4rm
VFNMSUBPD4rm
VFMSUBADDPD4rm
VFMADDPD4rm
VFNMADDPD4rm
VFMSUBSD4rm
VFNMSUBSD4rm
VFMADDSD4rm
VFNMADDSD4rm
VFMADDSUBPS4rm
VFMSUBPS4rm
VFNMSUBPS4rm
VFMSUBADDPS4rm
VFMADDPS4rm
VFNMADDPS4rm
VFMSUBSS4rm
VFNMSUBSS4rm
VFMADDSS4rm
VFNMADDSS4rm
VBROADCASTI32X4rm
VBROADCASTI64X4rm
VINSERTF32x4rm
VINSERTI32x4rm
VINSERTF64x4rm
VINSERTI64x4rm
CMOVA16rm
SBB16rm
SUB16rm
CMOVB16rm
ADC16rm
XADD16rm
AND16rm
CMOVAE16rm
CMOVBE16rm
CMOVGE16rm
CMOVLE16rm
CMOVNE16rm
CMOVE16rm
BSF16rm
CMPXCHG16rm
CMOVG16rm
LSL16rm
IMUL16rm
CMOVL16rm
CMOVNO16rm
CMOVO16rm
CMP16rm
CMOVNP16rm
CMOVP16rm
LAR16rm
XOR16rm
BSR16rm
LDS16rm
BOUNDS16rm
LES16rm
LFS16rm
LGS16rm
CMOVNS16rm
LSS16rm
CMOVS16rm
POPCNT16rm
LZCNT16rm
TZCNT16rm
TEST16rm
ACQUIRE_MOV16rm
VPALIGNR256rm
VMOVDQA32Z256rm
VMOVDQU32Z256rm
VMOVDQA64Z256rm
VMOVDQU64Z256rm
VMOVDQU16Z256rm
VMOVDQU8Z256rm
VMOVNTDQAZ256rm
VMOVAPDZ256rm
VMOVUPDZ256rm
VMOVAPSZ256rm
VMOVUPSZ256rm
VPERM2F128rm
VINSERTF128rm
VPERM2I128rm
VINSERTI128rm
VPCMPESTRM128rm
VPCMPISTRM128rm
VPALIGNR128rm
VAESKEYGENASSIST128rm
VMOVDQA32Z128rm
VMOVDQU32Z128rm
VMOVDQA64Z128rm
VMOVDQU64Z128rm
VMOVDQU16Z128rm
VMOVDQU8Z128rm
VMOVNTDQAZ128rm
VMOVAPDZ128rm
VMOVUPDZ128rm
VMOVAPSZ128rm
VMOVUPSZ128rm
SBB8rm
SUB8rm
ADC8rm
XADD8rm
AND8rm
CMPXCHG8rm
CMP8rm
XOR8rm
TEST8rm
ACQUIRE_MOV8rm
VMOVNTDQArm
VMOVDQArm
VPSHABrm
VPSUBBrm
VPADDBrm
VPSHUFBrm
VPAVGBrm
VPSHLBrm
VPSIGNBrm
VPCMPEQBrm
VPINSRBrm
VPSUBSBrm
VPADDSBrm
VPMINSBrm
VPSUBUSBrm
VPADDUSBrm
PAVGUSBrm
VPMAXSBrm
VPCMPGTBrm
VPROTBrm
VPBROADCASTBrm
VPMINUBrm
PFSUBrm
VPMAXUBrm
VPBLENDVBrm
VPACKSSWBrm
VPACKUSWBrm
PFACCrm
PFNACCrm
PFPNACCrm
VAESDECrm
VAESIMCrm
VAESENCrm
VPERMI2Drm
VPERMT2Drm
VPSHADrm
VPSRADrm
MMX_PSRADrm
VPHADDBDrm
VPHADDUBDrm
VPHSUBDrm
VPSUBDrm
VPMOVSXBDrm
VPMOVZXBDrm
PFADDrm
VPHADDDrm
VPADDDrm
VPGATHERDDrm
VPMACSDDrm
VPMACSSDDrm
PI2FDrm
PF2IDrm
VPSHLDrm
VPSLLDrm
MMX_PSLLDrm
VPMULLDrm
VPSRLDrm
MMX_PSRLDrm
VPANDrm
VPSIGNDrm
VPERMI2PDrm
VPERMIL2PDrm
VCVTDQ2PDrm
VCVTPS2PDrm
VPERMT2PDrm
FsVMOVAPDrm
FsMOVAPDrm
PSWAPDrm
VADDSUBPDrm
VHSUBPDrm
VSUBPDrm
VMINCPDrm
VMAXCPDrm
VHADDPDrm
VADDPDrm
VANDPDrm
VFsANDPDrm
VGATHERDPDrm
VUNPCKHPDrm
VMOVHPDrm
VPERMILPDrm
VUNPCKLPDrm
VMULPDrm
VMOVLPDrm
VANDNPDrm
VFsANDNPDrm
VMINPDrm
VGATHERQPDrm
VORPDrm
VXORPDrm
VFsXORPDrm
VFsORPDrm
VTESTPDrm
VMOVUPDrm
VBLENDVPDrm
VDIVPDrm
VMASKMOVPDrm
VMAXPDrm
VFRCZPDrm
VPCMPEQDrm
VPGATHERQDrm
VPINSRDrm
Int_VCVTSI2SDrm
Int_CVTSI2SDrm
Int_VCVTSS2SDrm
Int_CVTSS2SDrm
VRCP14SDrm
VRSQRT14SDrm
VRCP28SDrm
VRSQRT28SDrm
VSUBSDrm
VMINCSDrm
VMAXCSDrm
VADDSDrm
Int_VUCOMISDrm
Int_UCOMISDrm
Int_VCOMISDrm
Int_COMISDrm
VMULSDrm
VPMINSDrm
VMINSDrm
Int_VCMPSDrm
Int_CMPSDrm
VDIVSDrm
VMOVSDrm
VPMAXSDrm
VMAXSDrm
VFRCZSDrm
VMOV64toSDrm
VPCONFLICTDrm
VPCMPGTDrm
VPLZCNTDrm
VPROTDrm
VPBROADCASTDrm
VPMINUDrm
VPMAXUDrm
VPSRAVDrm
VPSLLVDrm
VPSRLVDrm
VPMASKMOVDrm
VPHSUBWDrm
VPHADDWDrm
VPMADDWDrm
VPUNPCKHWDrm
VPUNPCKLWDrm
VPMACSWDrm
VPMADCSWDrm
VPMACSSWDrm
VPMADCSSWDrm
VPHADDUWDrm
VPMOVSXWDrm
VPMOVZXWDrm
PFCMPGErm
SHA1NEXTErm
VPMACSDQHrm
VPMACSSDQHrm
VMOVDI2PDIrm
VMOVQI2PQIrm
VMOVZQI2PQIrm
VMOVZPQILo2PQIrm
VPCMPESTRIrm
VPCMPISTRIrm
Int_VCVTTSD2SIrm
Int_CVTTSD2SIrm
VCVTSD2SIrm
Int_VCVTTSS2SIrm
Int_CVTTSS2SIrm
VCVTSS2SIrm
VPMACSDQLrm
VPMACSSDQLrm
PFMULrm
VPPERMrm
VPANDNrm
PFMINrm
PFRCPrm
VMOVDDUPrm
VMOVSHDUPrm
VMOVSLDUPrm
VPERMI2Qrm
VPERMT2Qrm
VPSHAQrm
VPHADDBQrm
VPHADDUBQrm
VPSUBQrm
VPMOVSXBQrm
VPMOVZXBQrm
CVTTPD2DQrm
CVTPD2DQrm
VCVTTPS2DQrm
VCVTPS2DQrm
VPHSUBDQrm
VPADDQrm
VPHADDDQrm
VPUNPCKHDQrm
VPUNPCKLDQrm
VPMULDQrm
VPUNPCKHQDQrm
VPUNPCKLQDQrm
VPCLMULQDQrm
VPGATHERDQrm
VPHADDUDQrm
VPMULUDQrm
VPMOVSXDQrm
VPMOVZXDQrm
PFCMPEQrm
VPSHLQrm
VPSLLQrm
MMX_PSLLQrm
VPSRLQrm
MMX_PSRLQrm
VPCMPEQQrm
VPGATHERQQrm
VPINSRQrm
VPCONFLICTQrm
VPCMPGTQrm
VPLZCNTQrm
VPROTQrm
VPBROADCASTQrm
VPSLLVQrm
VPSRLVQrm
VPMASKMOVQrm
VPHADDWQrm
VPHADDUWQrm
VPMOVSXWQrm
VPMOVZXWQrm
PFSUBRrm
VPORrm
VPXORrm
CVTPD2PSrm
VCVTPH2PSrm
VPERMI2PSrm
VPERMIL2PSrm
VCVTDQ2PSrm
VPERMT2PSrm
FsVMOVAPSrm
FsMOVAPSrm
VADDSUBPSrm
VHSUBPSrm
VSUBPSrm
VMINCPSrm
VMAXCPSrm
VHADDPSrm
VADDPSrm
VANDPSrm
VFsANDPSrm
VGATHERDPSrm
VUNPCKHPSrm
VMOVHPSrm
VPERMILPSrm
VUNPCKLPSrm
VMULPSrm
VMOVLPSrm
VANDNPSrm
VFsANDNPSrm
VMINPSrm
VGATHERQPSrm
VORPSrm
VXORPSrm
VFsXORPSrm
VFsORPSrm
VINSERTPSrm
VTESTPSrm
VMOVUPSrm
VBLENDVPSrm
VDIVPSrm
VMASKMOVPSrm
VMAXPSrm
VFRCZPSrm
Int_VCVTSD2SSrm
Int_CVTSD2SSrm
VMOVDI2SSrm
Int_VCVTSI2SSrm
Int_CVTSI2SSrm
VRCP14SSrm
VRSQRT14SSrm
VRCP28SSrm
VRSQRT28SSrm
VSUBSSrm
VMINCSSrm
VMAXCSSrm
VADDSSrm
Int_VUCOMISSrm
Int_UCOMISSrm
Int_VCOMISSrm
Int_COMISSrm
VMULSSrm
VMINSSrm
Int_VCMPSSrm
Int_CMPSSrm
VBROADCASTSSrm
VDIVSSrm
VMOVSSrm
VMAXSSrm
VFRCZSSrm
PFCMPGTrm
PFRSQRTrm
VAESDECLASTrm
VAESENCLASTrm
VPTESTrm
VLDDQUrm
VMOVDQUrm
VPCMOVrm
VPSHAWrm
VPSRAWrm
MMX_PSRAWrm
VPHSUBBWrm
VPSADBWrm
VPHADDBWrm
VPUNPCKHBWrm
VPUNPCKLBWrm
VPHADDUBWrm
VPHSUBWrm
VPSUBWrm
VPMOVSXBWrm
VPMOVZXBWrm
VPHADDWrm
VPADDWrm
VPACKSSDWrm
VPACKUSDWrm
PI2FWrm
VPAVGWrm
VPMULHWrm
PF2IWrm
VPSHLWrm
VPSLLWrm
MMX_PSLLWrm
VPMULLWrm
VPSRLWrm
MMX_PSRLWrm
VPSIGNWrm
VPCMPEQWrm
PMULHRWrm
VPSUBSWrm
VPADDSWrm
VPMINSWrm
VPSUBUSWrm
VPADDUSWrm
VPMAXSWrm
VPCMPGTWrm
VPROTWrm
VPBROADCASTWrm
VPMULHUWrm
VPMINUWrm
VPMAXUWrm
VPMACSWWrm
VPMACSSWWrm
PFMAXrm
VCVTTPD2DQXrm
VCVTPD2DQXrm
VCVTPD2PSXrm
VMOVNTDQAYrm
VMOVDQAYrm
VPSUBBYrm
VPADDBYrm
VPSHUFBYrm
VPAVGBYrm
VPSIGNBYrm
VPCMPEQBYrm
VPSUBSBYrm
VPADDSBYrm
VPMINSBYrm
VPSUBUSBYrm
VPADDUSBYrm
VPMAXSBYrm
VPCMPGTBYrm
VPBROADCASTBYrm
VPMINUBYrm
VPMAXUBYrm
VPBLENDVBYrm
VPACKSSWBYrm
VPACKUSWBYrm
VPSRADYrm
VPHSUBDYrm
VPSUBDYrm
VPMOVSXBDYrm
VPMOVZXBDYrm
VPHADDDYrm
VPADDDYrm
VPGATHERDDYrm
VPSLLDYrm
VPMULLDYrm
VPSRLDYrm
VPERMDYrm
VPANDYrm
VPSIGNDYrm
VCVTDQ2PDYrm
VCVTPS2PDYrm
VMOVAPDYrm
VADDSUBPDYrm
VHSUBPDYrm
VSUBPDYrm
VMINCPDYrm
VMAXCPDYrm
VHADDPDYrm
VADDPDYrm
VANDPDYrm
VGATHERDPDYrm
VUNPCKHPDYrm
VPERMILPDYrm
VUNPCKLPDYrm
VMULPDYrm
VANDNPDYrm
VMINPDYrm
VGATHERQPDYrm
VORPDYrm
VXORPDYrm
VTESTPDYrm
VMOVUPDYrm
VBLENDVPDYrm
VDIVPDYrm
VMASKMOVPDYrm
VMAXPDYrm
VPCMPEQDYrm
VPGATHERQDYrm
VPMINSDYrm
VBROADCASTSDYrm
VPMAXSDYrm
VPCMPGTDYrm
VPBROADCASTDYrm
VPMINUDYrm
VPMAXUDYrm
VPSRAVDYrm
VPSLLVDYrm
VPSRLVDYrm
VPMASKMOVDYrm
VPMADDWDYrm
VPUNPCKHWDYrm
VPUNPCKLWDYrm
VPMOVSXWDYrm
VPMOVZXWDYrm
VPANDNYrm
VMOVDDUPYrm
VMOVSHDUPYrm
VMOVSLDUPYrm
VPSUBQYrm
VPMOVSXBQYrm
VPMOVZXBQYrm
VCVTTPD2DQYrm
VCVTPD2DQYrm
VCVTTPS2DQYrm
VCVTPS2DQYrm
VPADDQYrm
VPUNPCKHDQYrm
VPUNPCKLDQYrm
VPMULDQYrm
VPUNPCKHQDQYrm
VPUNPCKLQDQYrm
VPGATHERDQYrm
VPMULUDQYrm
VPMOVSXDQYrm
VPMOVZXDQYrm
VPSLLQYrm
VPSRLQYrm
VPCMPEQQYrm
VPGATHERQQYrm
VPCMPGTQYrm
VPBROADCASTQYrm
VPSLLVQYrm
VPSRLVQYrm
VPMASKMOVQYrm
VPMOVSXWQYrm
VPMOVZXWQYrm
VPORYrm
VPXORYrm
VCVTPD2PSYrm
VCVTPH2PSYrm
VCVTDQ2PSYrm
VMOVAPSYrm
VADDSUBPSYrm
VHSUBPSYrm
VSUBPSYrm
VMINCPSYrm
VMAXCPSYrm
VHADDPSYrm
VADDPSYrm
VANDPSYrm
VGATHERDPSYrm
VUNPCKHPSYrm
VPERMILPSYrm
VUNPCKLPSYrm
VMULPSYrm
VPERMPSYrm
VANDNPSYrm
VMINPSYrm
VGATHERQPSYrm
VORPSYrm
VXORPSYrm
VTESTPSYrm
VMOVUPSYrm
VBLENDVPSYrm
VDIVPSYrm
VMASKMOVPSYrm
VMAXPSYrm
VBROADCASTSSYrm
VPTESTYrm
VLDDQUYrm
VMOVDQUYrm
VPSRAWYrm
VPSADBWYrm
VPUNPCKHBWYrm
VPUNPCKLBWYrm
VPHSUBWYrm
VPSUBWYrm
VPMOVSXBWYrm
VPMOVZXBWYrm
VPHADDWYrm
VPADDWYrm
VPACKSSDWYrm
VPACKUSDWYrm
VPAVGWYrm
VPMULHWYrm
VPSLLWYrm
VPMULLWYrm
VPSRLWYrm
VPSIGNWYrm
VPCMPEQWYrm
VPSUBSWYrm
VPADDSWYrm
VPMINSWYrm
VPSUBUSWYrm
VPADDUSWYrm
VPMAXSWYrm
VPCMPGTWYrm
VPBROADCASTWYrm
VPMULHUWYrm
VPMINUWYrm
VPMAXUWYrm
VMOVDQA32Zrm
VMOVDQU32Zrm
VMOVDQA64Zrm
Int_VCVTSI2SD64Zrm
Int_VCVTUSI2SD64Zrm
Int_VCVTTSD2SI64Zrm
VCVTSD2SI64Zrm
Int_VCVTTSS2SI64Zrm
VCVTSS2SI64Zrm
Int_VCVTTSD2USI64Zrm
VCVTSD2USI64Zrm
Int_VCVTTSS2USI64Zrm
VCVTSS2USI64Zrm
Int_VCVTSI2SS64Zrm
Int_VCVTUSI2SS64Zrm
VMOVDQU64Zrm
VMOVDQU16Zrm
VMOVDQU8Zrm
VMOVNTDQAZrm
VPSRADZrm
VPSUBDZrm
VPMOVSXBDZrm
VPMOVZXBDZrm
VPADDDZrm
VPANDDZrm
VPGATHERDDZrm
VPSLLDZrm
VPMULLDZrm
VPSRLDZrm
VPBLENDMDZrm
VPTESTNMDZrm
VPERMDZrm
VPTESTMDZrm
VPANDNDZrm
VCVTDQ2PDZrm
VCVTUDQ2PDZrm
VCVTPS2PDZrm
VMOVAPDZrm
VSUBPDZrm
VADDPDZrm
VGATHERDPDZrm
VUNPCKHPDZrm
VUNPCKLPDZrm
VMULPDZrm
VBLENDMPDZrm
VPERMPDZrm
VMINPDZrm
VGATHERQPDZrm
VSQRTPDZrm
VMOVUPDZrm
VDIVPDZrm
VMAXPDZrm
VPCMPEQDZrm
VPGATHERQDZrm
VPORDZrm
VPXORDZrm
VCVTSI642SDZrm
VCVTUSI642SDZrm
Int_VCVTSI2SDZrm
Int_VCVTUSI2SDZrm
VCVTSS2SDZrm
VPABSDZrm
VSUBSDZrm
VADDSDZrm
Int_VUCOMISDZrm
Int_VCOMISDZrm
VMULSDZrm
VPMINSDZrm
VMINSDZrm
VCMPSDZrm
VBROADCASTSDZrm
VDIVSDZrm
VMOVSDZrm
VPMAXSDZrm
VMAXSDZrm
VPCMPGTDZrm
VPBROADCASTDZrm
VPMINUDZrm
VPMAXUDZrm
VPSRAVDZrm
VPSLLVDZrm
VPSRLVDZrm
VPMOVSXWDZrm
VPMOVZXWDZrm
VMOVDI2PDIZrm
VMOVQI2PQIZrm
VMOVZPQILo2PQIZrm
Int_VCVTTSD2SIZrm
VCVTSD2SIZrm
Int_VCVTTSS2SIZrm
VCVTSS2SIZrm
Int_VCVTTSD2USIZrm
VCVTSD2USIZrm
Int_VCVTTSS2USIZrm
VCVTSS2USIZrm
VMOVDDUPZrm
VMOVSHDUPZrm
VMOVSLDUPZrm
VPSRAQZrm
VPSUBQZrm
VPMOVSXBQZrm
VPMOVZXBQZrm
VCVTTPD2DQZrm
VCVTPD2DQZrm
VCVTTPS2DQZrm
VCVTPS2DQZrm
VPADDQZrm
VPUNPCKHDQZrm
VPUNPCKLDQZrm
VPMULDQZrm
VPANDQZrm
VPUNPCKHQDQZrm
VPUNPCKLQDQZrm
VPGATHERDQZrm
VCVTTPD2UDQZrm
VCVTPD2UDQZrm
VCVTTPS2UDQZrm
VCVTPS2UDQZrm
VPMULUDQZrm
VPMOVSXDQZrm
VPMOVZXDQZrm
VPSLLQZrm
VPSRLQZrm
VPBLENDMQZrm
VPTESTNMQZrm
VPERMQZrm
VPTESTMQZrm
VPANDNQZrm
VPCMPEQQZrm
VPGATHERQQZrm
VPORQZrm
VPXORQZrm
VPABSQZrm
VPMINSQZrm
VPMAXSQZrm
VPCMPGTQZrm
VPBROADCASTQZrm
VPMINUQZrm
VPMAXUQZrm
VPSRAVQZrm
VPSLLVQZrm
VPSRLVQZrm
VPMOVSXWQZrm
VPMOVZXWQZrm
VCVTPD2PSZrm
VCVTPH2PSZrm
VCVTDQ2PSZrm
VCVTUDQ2PSZrm
VMOVAPSZrm
VSUBPSZrm
VADDPSZrm
VGATHERDPSZrm
VUNPCKHPSZrm
VUNPCKLPSZrm
VMULPSZrm
VBLENDMPSZrm
VPERMPSZrm
VMINPSZrm
VGATHERQPSZrm
VSQRTPSZrm
VMOVUPSZrm
VDIVPSZrm
VMAXPSZrm
VCVTSI642SSZrm
VCVTUSI642SSZrm
VCVTSD2SSZrm
VMOVDI2SSZrm
Int_VCVTSI2SSZrm
Int_VCVTUSI2SSZrm
VSUBSSZrm
VADDSSZrm
Int_VUCOMISSZrm
Int_VCOMISSZrm
VMULSSZrm
VMINSSZrm
VCMPSSZrm
VBROADCASTSSZrm
VDIVSSZrm
VMOVSSZrm
VMAXSSZrm
MMX_PALIGNR64irm
MMX_PSUBBirm
MMX_PADDBirm
MMX_PAVGBirm
MMX_PCMPEQBirm
MMX_PSUBSBirm
MMX_PADDSBirm
MMX_PSUBUSBirm
MMX_PADDUSBirm
MMX_PCMPGTBirm
MMX_PMINUBirm
MMX_PMAXUBirm
MMX_PACKSSWBirm
MMX_PACKUSWBirm
MMX_PSUBDirm
MMX_PADDDirm
MMX_PANDirm
MMX_CVTPI2PDirm
MMX_PCMPEQDirm
MMX_PCMPGTDirm
MMX_PMADDWDirm
MMX_PUNPCKHWDirm
MMX_PUNPCKLWDirm
MMX_CVTTPD2PIirm
MMX_CVTPD2PIirm
MMX_CVTTPS2PIirm
MMX_CVTPS2PIirm
MMX_PANDNirm
MMX_PSUBQirm
MMX_PADDQirm
MMX_PUNPCKHDQirm
MMX_PUNPCKLDQirm
MMX_PMULUDQirm
MMX_PORirm
MMX_PXORirm
MMX_CVTPI2PSirm
MMX_PSADBWirm
MMX_PUNPCKHBWirm
MMX_PUNPCKLBWirm
MMX_PSUBWirm
MMX_PADDWirm
MMX_PACKSSDWirm
MMX_PAVGWirm
MMX_PMULHWirm
MMX_PMULLWirm
MMX_PCMPEQWirm
MMX_PSUBSWirm
MMX_PADDSWirm
MMX_PMINSWirm
MMX_PSUBUSWirm
MMX_PADDUSWirm
MMX_PMAXSWirm
MMX_PCMPGTWirm
MMX_PMULHUWirm
VBROADCASTI32X4krm
VBROADCASTI64X4krm
VPBROADCASTDZkrm
VPBROADCASTQZkrm
VINSERTPSzrm
MOV32sm
MOV64sm
MOV16sm
EH_SjLj_Setup
SUB_FST0r
ADD_FST0r
MUL_FST0r
COM_FST0r
COMP_FST0r
SUBR_FST0r
DIVR_FST0r
DIV_FST0r
VFMADDSUBPDr231r
VFMSUBPDr231r
VFNMSUBPDr231r
VFMSUBADDPDr231r
VFMADDPDr231r
VFNMADDPDr231r
VFMSUBSDr231r
VFNMSUBSDr231r
VFMADDSDr231r
VFNMADDSDr231r
VFMADDSUBPSr231r
VFMSUBPSr231r
VFNMSUBPSr231r
VFMSUBADDPSr231r
VFMADDPSr231r
VFNMADDPSr231r
VFMSUBSSr231r
VFNMSUBSSr231r
VFMADDSSr231r
VFNMADDSSr231r
VFMADDSUBPDr132r
VFMSUBPDr132r
VFNMSUBPDr132r
VFMSUBADDPDr132r
VFMADDPDr132r
VFNMADDPDr132r
VFMSUBSDr132r
VFNMSUBSDr132r
VFMADDSDr132r
VFNMADDSDr132r
VFMADDSUBPSr132r
VFMSUBPSr132r
VFNMSUBPSr132r
VFMSUBADDPSr132r
VFMADDPSr132r
VFNMADDPSr132r
VFMSUBSSr132r
VFNMSUBSSr132r
VFMADDSSr132r
VFNMADDSSr132r
LEA32r
DEC32r
INC32r
MOVPC32r
SETB_C32r
RDSEED32r
RDRAND32r
NEG32r
PUSH32r
CALL32r
IMUL32r
BSWAP32r
JMP32r
POP32r
STR32r
SLDT32r
NOT32r
IDIV32r
SMSW32r
DEC32_32r
INC32_32r
LEA64_32r
DEC64_32r
INC64_32r
VFMADDSUBPDr213r
VFMSUBPDr213r
VFNMSUBPDr213r
VFMSUBADDPDr213r
VFMADDPDr213r
VFNMADDPDr213r
VFMSUBSDr213r
VFNMSUBSDr213r
VFMADDSDr213r
VFNMADDSDr213r
VFMADDSUBPSr213r
VFMSUBPSr213r
VFNMSUBPSr213r
VFMSUBADDPSr213r
VFMADDPSr213r
VFNMADDPSr213r
VFMSUBSSr213r
VFNMSUBSSr213r
VFMADDSSr213r
VFNMADDSSr213r
LEA64r
DEC64r
INC64r
SETB_C64r
RDSEED64r
RDRAND64r
NEG64r
PUSH64r
CALL64r
IMUL64r
BSWAP64r
JMP64r
POP64r
STR64r
SLDT64r
NOT64r
IDIV64r
SMSW64r
LEA16r
DEC16r
INC16r
SETB_C16r
RDSEED16r
RDRAND16r
NEG16r
PUSH16r
CALL16r
IMUL16r
JMP16r
POP16r
STR16r
LLDT16r
SLDT16r
NOT16r
IDIV16r
LMSW16r
SMSW16r
FNSTSW16r
DEC32_16r
INC32_16r
DEC64_16r
INC64_16r
DEC8r
INC8r
SETB_C8r
NEG8r
IMUL8r
NOT8r
IDIV8r
SETAr
SETBr
VROUNDPDr
VSQRTPDr
VROUNDYPDr
VROUNDSDr
VRNDSCALESDr
VSQRTSDr
SETAEr
SETBEr
SETGEr
SETLEr
SETNEr
SETEr
UCOM_Fr
SETGr
UCOM_FIr
SETLr
SETNOr
SETOr
UCOM_FPr
UCOM_FIPr
TAILJMPr
SETNPr
UCOM_FPPr
SETPr
VERRr
LTRr
SETNSr
VROUNDPSr
VRCPPSr
VRSQRTPSr
VSQRTPSr
VROUNDYPSr
VROUNDSSr
VRNDSCALESSr
VRCPSSr
VRSQRTSSr
VSQRTSSr
SETSr
VERWr
VSQRTPDYr
VRCPPSYr
VRSQRTPSYr
VSQRTPSYr
VFMADDSUB213PDZr
VFMSUB213PDZr
VFNMSUB213PDZr
VFMSUBADD213PDZr
VFMADD213PDZr
VFNMADD213PDZr
VRCP14PDZr
VRSQRT14PDZr
VRCP28PDZr
VRSQRT28PDZr
VRNDSCALEPDZr
VFMSUBSDZr
VFNMSUBSDZr
VFMADDSDZr
VFNMADDSDZr
VSQRTSDZr
VFMADDSUB213PSZr
VFMSUB213PSZr
VFNMSUB213PSZr
VFMSUBADD213PSZr
VFMADD213PSZr
VFNMADD213PSZr
VRCP14PSZr
VRSQRT14PSZr
VRCP28PSZr
VRSQRT28PSZr
VRNDSCALEPSZr
VFMSUBSSZr
VFNMSUBSSZr
VFMADDSSZr
VFNMADDSSZr
VSQRTSSZr
XCHG32ar
XCHG64ar
XCHG16ar
MOV32cr
MOV64cr
MOV32dr
MOV64dr
Int_MemBarrier
OUT32ir
OUT16ir
OUT8ir
KMOVBkr
KMOVDkr
KMOVQkr
KMOVWkr
SBB32mr
LOCK_SUB32mr
ADC32mr
BTC32mr
LOCK_ADD32mr
LOCK_AND32mr
MOVBE32mr
CMP32mr
LOCK_XOR32mr
LOCK_OR32mr
BTR32mr
BTS32mr
BT32mr
RELEASE_MOV32mr
SBB64mr
LOCK_SUB64mr
ADC64mr
BTC64mr
LOCK_ADD64mr
LOCK_AND64mr
MMX_MOVD64mr
MOVBE64mr
CMP64mr
MMX_MOVQ64mr
LOCK_XOR64mr
LOCK_OR64mr
BTR64mr
BTS64mr
BT64mr
RELEASE_MOV64mr
MOVNTI_64mr
VMOVSDto64mr
VFMADDSUBPD4mr
VFMSUBPD4mr
VFNMSUBPD4mr
VFMSUBADDPD4mr
VFMADDPD4mr
VFNMADDPD4mr
VFMSUBSD4mr
VFNMSUBSD4mr
VFMADDSD4mr
VFNMADDSD4mr
VFMADDSUBPS4mr
VFMSUBPS4mr
VFNMSUBPS4mr
VFMSUBADDPS4mr
VFMADDPS4mr
VFNMADDPS4mr
VFMSUBSS4mr
VFNMSUBSS4mr
VFMADDSS4mr
VFNMADDSS4mr
VEXTRACTF32x4mr
VEXTRACTI32x4mr
VEXTRACTF64x4mr
VEXTRACTI64x4mr
SBB16mr
LOCK_SUB16mr
ADC16mr
BTC16mr
LOCK_ADD16mr
LOCK_AND16mr
MOVBE16mr
ARPL16mr
CMP16mr
LOCK_XOR16mr
LOCK_OR16mr
BTR16mr
BTS16mr
BT16mr
RELEASE_MOV16mr
VMOVDQA32Z256mr
VMOVDQU32Z256mr
VMOVDQA64Z256mr
VMOVDQU64Z256mr
VMOVDQU16Z256mr
VMOVDQU8Z256mr
VMOVAPDZ256mr
VMOVNTPDZ256mr
VMOVUPDZ256mr
VMOVNTDQZ256mr
VMOVAPSZ256mr
VMOVNTPSZ256mr
VMOVUPSZ256mr
VEXTRACTF128mr
VEXTRACTI128mr
VMOVDQA32Z128mr
VMOVDQU32Z128mr
VMOVDQA64Z128mr
VMOVDQU64Z128mr
VMOVDQU16Z128mr
VMOVDQU8Z128mr
VMOVAPDZ128mr
VMOVNTPDZ128mr
VMOVUPDZ128mr
VMOVNTDQZ128mr
VMOVAPSZ128mr
VMOVNTPSZ128mr
VMOVUPSZ128mr
SBB8mr
LOCK_SUB8mr
ADC8mr
LOCK_ADD8mr
LOCK_AND8mr
CMP8mr
LOCK_XOR8mr
LOCK_OR8mr
RELEASE_MOV8mr
VMOVDQAmr
VPSHABmr
VPMOVUSDBmr
VPMOVSDBmr
VPMOVDBmr
VPSHLBmr
VPMOVUSQBmr
VPMOVSQBmr
VPMOVQBmr
VPEXTRBmr
VPROTBmr
VPSHADmr
VPSHLDmr
VPERMIL2PDmr
VMOVAPDmr
VMOVHPDmr
VMOVLPDmr
VMOVNTPDmr
VMOVUPDmr
VMASKMOVPDmr
VPMOVUSQDmr
VPMOVSQDmr
VPMOVQDmr
VPEXTRDmr
VMOVSDmr
VPROTDmr
VPMASKMOVDmr
VCVTPS2PHmr
VMOVPDI2DImr
VMOVSS2DImr
VMOVPQI2QImr
MOVNTImr
VPPERMmr
VPSHAQmr
VMOVNTDQmr
VPSHLQmr
VPEXTRQmr
MMX_MOVNTQmr
VPROTQmr
VPMASKMOVQmr
VPERMIL2PSmr
VMOVAPSmr
VMOVHPSmr
VMOVLPSmr
VEXTRACTPSmr
VMOVNTPSmr
VMOVUPSmr
VMASKMOVPSmr
VMOVSSmr
VMOVDQUmr
VPCMOVmr
VPSHAWmr
VPMOVUSDWmr
VPMOVSDWmr
VPMOVDWmr
VPSHLWmr
VPMOVUSQWmr
VPMOVSQWmr
VPMOVQWmr
VPEXTRWmr
VPROTWmr
VMOVDQAYmr
VMOVAPDYmr
VMOVNTPDYmr
VMOVUPDYmr
VMASKMOVPDYmr
VPMASKMOVDYmr
VCVTPS2PHYmr
VMOVNTDQYmr
VPMASKMOVQYmr
VMOVAPSYmr
VMOVNTPSYmr
VMOVUPSYmr
VMASKMOVPSYmr
VMOVDQUYmr
VMOVDQA32Zmr
VMOVDQU32Zmr
VMOVDQA64Zmr
VMOVDQU64Zmr
VMOVSDto64Zmr
VMOVPQIto64Zmr
VMOVDQU16Zmr
VMOVDQU8Zmr
VPSCATTERDDZmr
VMOVAPDZmr
VSCATTERDPDZmr
VSCATTERQPDZmr
VMOVNTPDZmr
VMOVUPDZmr
VPSCATTERQDZmr
VMOVSDZmr
VCVTPS2PHZmr
VMOVPDI2DIZmr
VMOVSS2DIZmr
VPSCATTERDQZmr
VMOVNTDQZmr
VPSCATTERQQZmr
VMOVAPSZmr
VSCATTERDPSZmr
VSCATTERQPSZmr
VMOVNTPSZmr
VMOVUPSZmr
VMOVSSZmr
PUSH32rmr
POP32rmr
PUSH64rmr
POP64rmr
PUSH16rmr
POP16rmr
VEXTRACTPSzmr
SHA1MSG1rr
SHA256MSG1rr
PFRCPIT1rr
PFRSQIT1rr
CMOVA32rr
SBB32rr
SUB32rr
CMOVB32rr
ADC32rr
BLCIC32rr
BLSIC32rr
T1MSKC32rr
BTC32rr
VMREAD32rr
XADD32rr
AND32rr
CMOVAE32rr
CMOVBE32rr
CMOVGE32rr
CMOVLE32rr
CMOVNE32rr
VMWRITE32rr
CMOVE32rr
BSF32rr
CMPXCHG32rr
CMOVG32rr
BLCI32rr
BZHI32rr
BLSI32rr
BLCMSK32rr
BLSMSK32rr
TZMSK32rr
BLCFILL32rr
BLSFILL32rr
LSL32rr
IMUL32rr
CMOVL32rr
ANDN32rr
IN32rr
CMOVNO32rr
CMOVO32rr
PDEP32rr
CMP32rr
CMOVNP32rr
CMOVP32rr
LAR32rr
XOR32rr
BSR32rr
BLSR32rr
BTR32rr
BEXTR32rr
BLCS32rr
CMOVNS32rr
BTS32rr
CMOVS32rr
BT32rr
POPCNT32rr
LZCNT32rr
TZCNT32rr
TEST32rr
OUT32rr
PEXT32rr
MOV32rr
ADCX32rr
SHLX32rr
MULX32rr
ADOX32rr
SARX32rr
SHRX32rr
SHA1MSG2rr
SHA256MSG2rr
SHA256RNDS2rr
PFRCPIT2rr
CMOVA64rr
SBB64rr
SUB64rr
CMOVB64rr
ADC64rr
BLCIC64rr
BLSIC64rr
T1MSKC64rr
BTC64rr
VMREAD64rr
XADD64rr
AND64rr
Int_VCVTSI2SD64rr
Int_CVTSI2SD64rr
MMX_MOVD64rr
CMOVAE64rr
CMOVBE64rr
CMOVGE64rr
CMOVLE64rr
CMOVNE64rr
VMWRITE64rr
CMOVE64rr
BSF64rr
CMPXCHG64rr
CMOVG64rr
BLCI64rr
BZHI64rr
Int_VCVTTSD2SI64rr
Int_CVTTSD2SI64rr
VCVTSD2SI64rr
Int_VCVTTSS2SI64rr
Int_CVTTSS2SI64rr
VCVTSS2SI64rr
BLSI64rr
BLCMSK64rr
BLSMSK64rr
TZMSK64rr
BLCFILL64rr
BLSFILL64rr
LSL64rr
IMUL64rr
CMOVL64rr
ANDN64rr
CMOVNO64rr
CMOVO64rr
PDEP64rr
CMP64rr
CMOVNP64rr
CMOVP64rr
MMX_MOVQ64rr
LAR64rr
MMX_MOVQ2FR64rr
XOR64rr
BSR64rr
BLSR64rr
BTR64rr
BEXTR64rr
BLCS64rr
CMOVNS64rr
Int_VCVTSI2SS64rr
Int_CVTSI2SS64rr
BTS64rr
CMOVS64rr
BT64rr
POPCNT64rr
LZCNT64rr
TZCNT64rr
TEST64rr
PEXT64rr
MOV64rr
ADCX64rr
SHLX64rr
MULX64rr
ADOX64rr
SARX64rr
SHRX64rr
MMX_MOVD64from64rr
MMX_MOVD64to64rr
VMOVSDto64rr
VMOVPQIto64rr
VFMADDSUBPD4rr
VFMSUBPD4rr
VFNMSUBPD4rr
VFMSUBADDPD4rr
VFMADDPD4rr
VFNMADDPD4rr
VFMSUBSD4rr
VFNMSUBSD4rr
VFMADDSD4rr
VFNMADDSD4rr
VFMADDSUBPS4rr
VFMSUBPS4rr
VFNMSUBPS4rr
VFMSUBADDPS4rr
VFMADDPS4rr
VFNMADDPS4rr
VFMSUBSS4rr
VFNMSUBSS4rr
VFMADDSS4rr
VFNMADDSS4rr
VEXTRACTF32x4rr
VINSERTF32x4rr
VEXTRACTI32x4rr
VINSERTI32x4rr
VEXTRACTF64x4rr
VINSERTF64x4rr
VEXTRACTI64x4rr
VINSERTI64x4rr
CMOVA16rr
SBB16rr
SUB16rr
CMOVB16rr
ADC16rr
BTC16rr
XADD16rr
AND16rr
CMOVAE16rr
CMOVBE16rr
CMOVGE16rr
CMOVLE16rr
CMOVNE16rr
CMOVE16rr
BSF16rr
CMPXCHG16rr
CMOVG16rr
ARPL16rr
LSL16rr
IMUL16rr
CMOVL16rr
IN16rr
CMOVNO16rr
CMOVO16rr
CMP16rr
CMOVNP16rr
CMOVP16rr
LAR16rr
XOR16rr
BSR16rr
BTR16rr
CMOVNS16rr
BTS16rr
CMOVS16rr
BT16rr
POPCNT16rr
LZCNT16rr
TZCNT16rr
TEST16rr
OUT16rr
MOV16rr
VPALIGNR256rr
VMOVDQA32Z256rr
VMOVDQU32Z256rr
VMOVDQA64Z256rr
VMOVDQU64Z256rr
VMOVDQU16Z256rr
VMOVDQU8Z256rr
VMOVAPDZ256rr
VMOVUPDZ256rr
VMOVAPSZ256rr
VMOVUPSZ256rr
VPERM2F128rr
VEXTRACTF128rr
VINSERTF128rr
VPERM2I128rr
VEXTRACTI128rr
VINSERTI128rr
VPCMPESTRM128rr
VPCMPISTRM128rr
VPALIGNR128rr
VAESKEYGENASSIST128rr
VMOVDQA32Z128rr
VMOVDQU32Z128rr
VMOVDQA64Z128rr
VMOVDQU64Z128rr
VMOVDQU16Z128rr
VMOVDQU8Z128rr
VMOVAPDZ128rr
VMOVUPDZ128rr
VMOVAPSZ128rr
VMOVUPSZ128rr
SBB8rr
SUB8rr
ADC8rr
XADD8rr
AND8rr
CMPXCHG8rr
IN8rr
CMP8rr
XOR8rr
TEST8rr
OUT8rr
MOV8rr
VMOVDQArr
VPSHABrr
VPSUBBrr
VPADDBrr
KANDBrr
VPMOVUSDBrr
VPMOVSDBrr
VPMOVDBrr
VPSHUFBrr
VPAVGBrr
VPMOVMSKBrr
MMX_PMOVMSKBrr
VPSHLBrr
KANDNBrr
VPSIGNBrr
VPCMPEQBrr
VPMOVUSQBrr
VPMOVSQBrr
VPMOVQBrr
KORBrr
KXNORBrr
KXORBrr
VPINSRBrr
VPEXTRBrr
VPSUBSBrr
VPADDSBrr
VPMINSBrr
VPSUBUSBrr
VPADDUSBrr
PAVGUSBrr
VPMAXSBrr
VPCMPGTBrr
KNOTBrr
VPROTBrr
VPBROADCASTBrr
VPMINUBrr
PFSUBrr
VPMAXUBrr
VPBLENDVBrr
VPACKSSWBrr
VPACKUSWBrr
PFACCrr
PFNACCrr
PFPNACCrr
VAESDECrr
VAESIMCrr
VAESENCrr
VPERMI2Drr
VPERMT2Drr
VPBROADCASTMW2Drr
VPSHADrr
VPSRADrr
MMX_PSRADrr
VPHADDBDrr
VPHADDUBDrr
VPHSUBDrr
VPSUBDrr
VPMOVSXBDrr
VPMOVZXBDrr
PFADDrr
VPHADDDrr
VPADDDrr
KANDDrr
VPMACSDDrr
VPMACSSDDrr
PI2FDrr
PF2IDrr
VPSHLDrr
VPSLLDrr
MMX_PSLLDrr
VPMULLDrr
VPSRLDrr
MMX_PSRLDrr
VPANDrr
KANDNDrr
VPSIGNDrr
VPERMI2PDrr
VPERMIL2PDrr
VCVTDQ2PDrr
VCVTPS2PDrr
VPERMT2PDrr
VMOVAPDrr
PSWAPDrr
VADDSUBPDrr
VHSUBPDrr
VSUBPDrr
VMINCPDrr
VMAXCPDrr
VHADDPDrr
VADDPDrr
VANDPDrr
VFsANDPDrr
VUNPCKHPDrr
VMOVMSKPDrr
VPERMILPDrr
VUNPCKLPDrr
VMULPDrr
VANDNPDrr
VFsANDNPDrr
VMINPDrr
VORPDrr
VXORPDrr
VFsXORPDrr
VFsORPDrr
VTESTPDrr
VMOVUPDrr
VBLENDVPDrr
VDIVPDrr
VMAXPDrr
VFRCZPDrr
VPCMPEQDrr
VPMOVUSQDrr
VPMOVSQDrr
VPMOVQDrr
KORDrr
KXNORDrr
KXORDrr
VPINSRDrr
VPEXTRDrr
Int_VCVTSI2SDrr
Int_CVTSI2SDrr
Int_VCVTSS2SDrr
Int_CVTSS2SDrr
VRCP14SDrr
VRSQRT14SDrr
VRCP28SDrr
VRSQRT28SDrr
VSUBSDrr
VMINCSDrr
VMAXCSDrr
VADDSDrr
Int_VUCOMISDrr
Int_UCOMISDrr
Int_VCOMISDrr
Int_COMISDrr
VMULSDrr
VPMINSDrr
VMINSDrr
Int_VCMPSDrr
Int_CMPSDrr
VDIVSDrr
VMOVSDrr
VPMAXSDrr
VMAXSDrr
VFRCZSDrr
VMOV64toSDrr
VPCONFLICTDrr
VPCMPGTDrr
VPLZCNTDrr
KNOTDrr
VPROTDrr
VPBROADCASTDrr
VPMINUDrr
VPMAXUDrr
VPSRAVDrr
VPSLLVDrr
VPSRLVDrr
VPHSUBWDrr
VPHADDWDrr
VPMADDWDrr
VPUNPCKHWDrr
VPUNPCKLWDrr
VPMACSWDrr
VPMADCSWDrr
VPMACSSWDrr
VPMADCSSWDrr
VPHADDUWDrr
VPMOVSXWDrr
VPMOVZXWDrr
PFCMPGErr
SHA1NEXTErr
LD_Frr
ST_Frr
VCVTPS2PHrr
VPMACSDQHrr
VPMACSSDQHrr
VMOVPDI2DIrr
VMOVSS2DIrr
VMOVDI2PDIrr
VMOVPQI2QIrr
VMOVZQI2PQIrr
VMOVZPQILo2PQIrr
VMOV64toPQIrr
VPCMPESTRIrr
VPCMPISTRIrr
Int_VCVTTSD2SIrr
Int_CVTTSD2SIrr
VCVTSD2SIrr
Int_VCVTTSS2SIrr
Int_CVTTSS2SIrr
VCVTSS2SIrr
VPMACSDQLrr
VPMACSSDQLrr
PFMULrr
VPPERMrr
VPANDNrr
PFMINrr
PFRCPrr
ST_FPrr
VMOVDDUPrr
VMOVSHDUPrr
VMOVSLDUPrr
MMX_MOVFR642Qrr
VPBROADCASTMB2Qrr
VPERMI2Qrr
MMX_MOVDQ2Qrr
VPERMT2Qrr
VPSHAQrr
VPHADDBQrr
VPHADDUBQrr
VPSUBQrr
VPMOVSXBQrr
VPMOVZXBQrr
VCVTTPD2DQrr
VCVTPD2DQrr
MMX_MOVQ2DQrr
VCVTTPS2DQrr
VCVTPS2DQrr
VPHSUBDQrr
VPADDQrr
VPHADDDQrr
VPUNPCKHDQrr
VPUNPCKLDQrr
VPMULDQrr
KANDQrr
VPUNPCKHQDQrr
VPUNPCKLQDQrr
VPCLMULQDQrr
VPHADDUDQrr
VPMULUDQrr
VPMOVSXDQrr
VPMOVZXDQrr
PFCMPEQrr
VPSHLQrr
VPSLLQrr
MMX_PSLLQrr
VPSRLQrr
MMX_PSRLQrr
KANDNQrr
VPCMPEQQrr
KORQrr
KXNORQrr
KXORQrr
VPINSRQrr
VPEXTRQrr
VPCONFLICTQrr
VPCMPGTQrr
VPLZCNTQrr
KNOTQrr
VPROTQrr
VPBROADCASTQrr
VPSLLVQrr
VPSRLVQrr
VPHADDWQrr
VPHADDUWQrr
VPMOVSXWQrr
VPMOVZXWQrr
PFSUBRrr
VPORrr
VPXORrr
VCVTPD2PSrr
VCVTPH2PSrr
VPERMI2PSrr
VPERMIL2PSrr
VCVTDQ2PSrr
VPERMT2PSrr
VMOVAPSrr
VADDSUBPSrr
VHSUBPSrr
VSUBPSrr
VMINCPSrr
VMAXCPSrr
VHADDPSrr
VADDPSrr
VANDPSrr
VFsANDPSrr
VUNPCKHPSrr
VMOVLHPSrr
VMOVMSKPSrr
VMOVHLPSrr
VPERMILPSrr
VUNPCKLPSrr
VMULPSrr
VANDNPSrr
VFsANDNPSrr
VMINPSrr
VORPSrr
VXORPSrr
VFsXORPSrr
VFsORPSrr
VEXTRACTPSrr
VINSERTPSrr
VTESTPSrr
VMOVUPSrr
VBLENDVPSrr
VDIVPSrr
VMAXPSrr
VFRCZPSrr
Int_VCVTSD2SSrr
Int_CVTSD2SSrr
VMOVDI2SSrr
Int_VCVTSI2SSrr
Int_CVTSI2SSrr
VRCP14SSrr
VRSQRT14SSrr
VRCP28SSrr
VRSQRT28SSrr
VSUBSSrr
VMINCSSrr
VMAXCSSrr
VADDSSrr
Int_VUCOMISSrr
Int_UCOMISSrr
Int_VCOMISSrr
Int_COMISSrr
VMULSSrr
VMINSSrr
Int_VCMPSSrr
Int_CMPSSrr
VBROADCASTSSrr
VDIVSSrr
VMOVSSrr
VMAXSSrr
VFRCZSSrr
PFCMPGTrr
MWAITrr
PFRSQRTrr
VAESDECLASTrr
VAESENCLASTrr
VPTESTrr
VMOVDQUrr
VPCMOVrr
VPSHAWrr
VPSRAWrr
MMX_PSRAWrr
VPHSUBBWrr
VPSADBWrr
VPHADDBWrr
VPUNPCKHBWrr
KUNPCKBWrr
VPUNPCKLBWrr
VPHADDUBWrr
VPHSUBWrr
VPSUBWrr
VPMOVSXBWrr
VPMOVZXBWrr
VPHADDWrr
VPADDWrr
KANDWrr
VPACKSSDWrr
VPACKUSDWrr
VPMOVUSDWrr
VPMOVSDWrr
VPMOVDWrr
PI2FWrr
VPAVGWrr
VPMULHWrr
PF2IWrr
VPSHLWrr
VPSLLWrr
MMX_PSLLWrr
VPMULLWrr
VPSRLWrr
MMX_PSRLWrr
KANDNWrr
VPSIGNWrr
VPCMPEQWrr
VPMOVUSQWrr
VPMOVSQWrr
VPMOVQWrr
PMULHRWrr
KORWrr
KXNORWrr
KXORWrr
VPSUBSWrr
VPADDSWrr
VPMINSWrr
VPSUBUSWrr
VPADDUSWrr
VPMAXSWrr
VPCMPGTWrr
KNOTWrr
VPROTWrr
VPBROADCASTWrr
KORTESTWrr
VPMULHUWrr
VPMINUWrr
VPMAXUWrr
VPMACSWWrr
VPMACSSWWrr
PFMAXrr
VMOVDQAYrr
VPSUBBYrr
VPADDBYrr
VPSHUFBYrr
VPAVGBYrr
VPMOVMSKBYrr
VPSIGNBYrr
VPCMPEQBYrr
VPSUBSBYrr
VPADDSBYrr
VPMINSBYrr
VPSUBUSBYrr
VPADDUSBYrr
VPMAXSBYrr
VPCMPGTBYrr
VPBROADCASTBYrr
VPMINUBYrr
VPMAXUBYrr
VPBLENDVBYrr
VPACKSSWBYrr
VPACKUSWBYrr
VPSRADYrr
VPHSUBDYrr
VPSUBDYrr
VPMOVSXBDYrr
VPMOVZXBDYrr
VPHADDDYrr
VPADDDYrr
VPSLLDYrr
VPMULLDYrr
VPSRLDYrr
VPERMDYrr
VPANDYrr
VPSIGNDYrr
VCVTDQ2PDYrr
VCVTPS2PDYrr
VMOVAPDYrr
VADDSUBPDYrr
VHSUBPDYrr
VSUBPDYrr
VMINCPDYrr
VMAXCPDYrr
VHADDPDYrr
VADDPDYrr
VANDPDYrr
VUNPCKHPDYrr
VMOVMSKPDYrr
VPERMILPDYrr
VUNPCKLPDYrr
VMULPDYrr
VANDNPDYrr
VMINPDYrr
VORPDYrr
VXORPDYrr
VTESTPDYrr
VMOVUPDYrr
VBLENDVPDYrr
VDIVPDYrr
VMAXPDYrr
VPCMPEQDYrr
VPMINSDYrr
VBROADCASTSDYrr
VPMAXSDYrr
VPCMPGTDYrr
VPBROADCASTDYrr
VPMINUDYrr
VPMAXUDYrr
VPSRAVDYrr
VPSLLVDYrr
VPSRLVDYrr
VPMADDWDYrr
VPUNPCKHWDYrr
VPUNPCKLWDYrr
VPMOVSXWDYrr
VPMOVZXWDYrr
VCVTPS2PHYrr
VPANDNYrr
VMOVDDUPYrr
VMOVSHDUPYrr
VMOVSLDUPYrr
VPSUBQYrr
VPMOVSXBQYrr
VPMOVZXBQYrr
VCVTTPD2DQYrr
VCVTPD2DQYrr
VCVTTPS2DQYrr
VCVTPS2DQYrr
VPADDQYrr
VPUNPCKHDQYrr
VPUNPCKLDQYrr
VPMULDQYrr
VPUNPCKHQDQYrr
VPUNPCKLQDQYrr
VPMULUDQYrr
VPMOVSXDQYrr
VPMOVZXDQYrr
VPSLLQYrr
VPSRLQYrr
VPCMPEQQYrr
VPCMPGTQYrr
VPBROADCASTQYrr
VPSLLVQYrr
VPSRLVQYrr
VPMOVSXWQYrr
VPMOVZXWQYrr
VPORYrr
VPXORYrr
VCVTPD2PSYrr
VCVTPH2PSYrr
VCVTDQ2PSYrr
VMOVAPSYrr
VADDSUBPSYrr
VHSUBPSYrr
VSUBPSYrr
VMINCPSYrr
VMAXCPSYrr
VHADDPSYrr
VADDPSYrr
VANDPSYrr
VUNPCKHPSYrr
VMOVMSKPSYrr
VPERMILPSYrr
VUNPCKLPSYrr
VMULPSYrr
VPERMPSYrr
VANDNPSYrr
VMINPSYrr
VORPSYrr
VXORPSYrr
VTESTPSYrr
VMOVUPSYrr
VBLENDVPSYrr
VDIVPSYrr
VMAXPSYrr
VBROADCASTSSYrr
VPTESTYrr
VMOVDQUYrr
VPSRAWYrr
VPSADBWYrr
VPUNPCKHBWYrr
VPUNPCKLBWYrr
VPHSUBWYrr
VPSUBWYrr
VPMOVSXBWYrr
VPMOVZXBWYrr
VPHADDWYrr
VPADDWYrr
VPACKSSDWYrr
VPACKUSDWYrr
VPAVGWYrr
VPMULHWYrr
VPSLLWYrr
VPMULLWYrr
VPSRLWYrr
VPSIGNWYrr
VPCMPEQWYrr
VPSUBSWYrr
VPADDSWYrr
VPMINSWYrr
VPSUBUSWYrr
VPADDUSWYrr
VPMAXSWYrr
VPCMPGTWYrr
VPBROADCASTWYrr
VPMULHUWYrr
VPMINUWYrr
VPMAXUWYrr
VMOVDQA32Zrr
VMOVDQU32Zrr
VMOVDQA64Zrr
Int_VCVTSI2SD64Zrr
Int_VCVTUSI2SD64Zrr
Int_VCVTTSD2SI64Zrr
VCVTSD2SI64Zrr
Int_VCVTTSS2SI64Zrr
VCVTSS2SI64Zrr
Int_VCVTTSD2USI64Zrr
VCVTSD2USI64Zrr
Int_VCVTTSS2USI64Zrr
VCVTSS2USI64Zrr
Int_VCVTSI2SS64Zrr
Int_VCVTUSI2SS64Zrr
VMOVDQU64Zrr
VMOVSDto64Zrr
VMOVPQIto64Zrr
VMOVDQU16Zrr
VMOVDQU8Zrr
VPSRADZrr
VPSUBDZrr
VPMOVSXBDZrr
VPMOVZXBDZrr
VPADDDZrr
VPANDDZrr
VPSLLDZrr
VPMULLDZrr
VPSRLDZrr
VPBLENDMDZrr
VPTESTNMDZrr
VPERMDZrr
VPTESTMDZrr
VPANDNDZrr
VCVTDQ2PDZrr
VCVTUDQ2PDZrr
VCVTPS2PDZrr
VMOVAPDZrr
VSUBPDZrr
VADDPDZrr
VUNPCKHPDZrr
VUNPCKLPDZrr
VMULPDZrr
VBLENDMPDZrr
VPERMPDZrr
VMINPDZrr
VSQRTPDZrr
VMOVUPDZrr
VDIVPDZrr
VMAXPDZrr
VPCMPEQDZrr
VPORDZrr
VPXORDZrr
VCVTSI642SDZrr
VCVTUSI642SDZrr
Int_VCVTSI2SDZrr
Int_VCVTUSI2SDZrr
VCVTSS2SDZrr
VPABSDZrr
VSUBSDZrr
VADDSDZrr
Int_VUCOMISDZrr
Int_VCOMISDZrr
VMULSDZrr
VPMINSDZrr
VMINSDZrr
VCMPSDZrr
VBROADCASTSDZrr
VDIVSDZrr
VMOVSDZrr
VPMAXSDZrr
VMAXSDZrr
VMOV64toSDZrr
VPCMPGTDZrr
VPBROADCASTDZrr
VPMINUDZrr
VPMAXUDZrr
VPSRAVDZrr
VPSLLVDZrr
VPSRLVDZrr
VPMOVSXWDZrr
VPMOVZXWDZrr
VCVTPS2PHZrr
VMOVPDI2DIZrr
VMOVSS2DIZrr
VMOVDI2PDIZrr
VMOVZPQILo2PQIZrr
VMOV64toPQIZrr
Int_VCVTTSD2SIZrr
VCVTSD2SIZrr
Int_VCVTTSS2SIZrr
VCVTSS2SIZrr
Int_VCVTTSD2USIZrr
VCVTSD2USIZrr
Int_VCVTTSS2USIZrr
VCVTSS2USIZrr
VMOVDDUPZrr
VMOVSHDUPZrr
VMOVSLDUPZrr
VPSRAQZrr
VPSUBQZrr
VPMOVSXBQZrr
VPMOVZXBQZrr
VCVTTPD2DQZrr
VCVTPD2DQZrr
VCVTTPS2DQZrr
VCVTPS2DQZrr
VPADDQZrr
VPUNPCKHDQZrr
VPUNPCKLDQZrr
VPMULDQZrr
VPANDQZrr
VPUNPCKHQDQZrr
VPUNPCKLQDQZrr
VCVTTPD2UDQZrr
VCVTPD2UDQZrr
VCVTTPS2UDQZrr
VCVTPS2UDQZrr
VPMULUDQZrr
VPMOVSXDQZrr
VPMOVZXDQZrr
VPSLLQZrr
VPSRLQZrr
VPBLENDMQZrr
VPTESTNMQZrr
VPERMQZrr
VPTESTMQZrr
VPANDNQZrr
VPCMPEQQZrr
VPORQZrr
VPXORQZrr
VPABSQZrr
VPMINSQZrr
VPMAXSQZrr
VPCMPGTQZrr
VPBROADCASTQZrr
VPMINUQZrr
VPMAXUQZrr
VPSRAVQZrr
VPSLLVQZrr
VPSRLVQZrr
VPMOVSXWQZrr
VPMOVZXWQZrr
VCVTPD2PSZrr
VCVTPH2PSZrr
VCVTDQ2PSZrr
VCVTUDQ2PSZrr
VMOVAPSZrr
VSUBPSZrr
VADDPSZrr
VUNPCKHPSZrr
VMOVLHPSZrr
VMOVHLPSZrr
VUNPCKLPSZrr
VMULPSZrr
VBLENDMPSZrr
VPERMPSZrr
VMINPSZrr
VSQRTPSZrr
VMOVUPSZrr
VDIVPSZrr
VMAXPSZrr
VCVTSI642SSZrr
VCVTUSI642SSZrr
VCVTSD2SSZrr
VMOVDI2SSZrr
Int_VCVTSI2SSZrr
Int_VCVTUSI2SSZrr
VSUBSSZrr
VADDSSZrr
Int_VUCOMISSZrr
Int_VCOMISSZrr
VMULSSZrr
VMINSSZrr
VCMPSSZrr
VBROADCASTSSZrr
VDIVSSZrr
VMOVSSZrr
VMAXSSZrr
VPBROADCASTDrZrr
VPBROADCASTQrZrr
MMX_MOVD64grr
MMX_PALIGNR64irr
MMX_PSUBBirr
MMX_PADDBirr
MMX_PAVGBirr
MMX_PCMPEQBirr
MMX_PSUBSBirr
MMX_PADDSBirr
MMX_PSUBUSBirr
MMX_PADDUSBirr
MMX_PCMPGTBirr
MMX_PMINUBirr
MMX_PMAXUBirr
MMX_PACKSSWBirr
MMX_PACKUSWBirr
MMX_PSUBDirr
MMX_PADDDirr
MMX_PANDirr
MMX_CVTPI2PDirr
MMX_PCMPEQDirr
MMX_PCMPGTDirr
MMX_PMADDWDirr
MMX_PUNPCKHWDirr
MMX_PUNPCKLWDirr
MMX_CVTTPD2PIirr
MMX_CVTPD2PIirr
MMX_CVTTPS2PIirr
MMX_CVTPS2PIirr
MMX_PANDNirr
MMX_PSUBQirr
MMX_PADDQirr
MMX_PUNPCKHDQirr
MMX_PUNPCKLDQirr
MMX_PMULUDQirr
MMX_PORirr
MMX_PXORirr
MMX_CVTPI2PSirr
MMX_PSADBWirr
MMX_PUNPCKHBWirr
MMX_PUNPCKLBWirr
MMX_PSUBWirr
MMX_PADDWirr
MMX_PACKSSDWirr
MMX_PAVGWirr
MMX_PMULHWirr
MMX_PMULLWirr
MMX_PCMPEQWirr
MMX_PSUBSWirr
MMX_PADDSWirr
MMX_PMINSWirr
MMX_PSUBUSWirr
MMX_PADDUSWirr
MMX_PMAXSWirr
MMX_PCMPGTWirr
MMX_PMULHUWirr
VPBROADCASTDZkrr
VPBROADCASTQZkrr
VPBROADCASTDrZkrr
VPBROADCASTQrZkrr
MONITORrrr
VEXTRACTPSzrr
VINSERTPSzrr
MOV32sr
MOV64sr
MOV16sr
MOV32ms
MOV64ms
MOV16ms
MOV32rs
MOV64rs
MOV16rs
VCMPPDrmi_alt
VCMPPSrmi_alt
VCMPPDYrmi_alt
VCMPPSYrmi_alt
VPCMPDZrmi_alt
VCMPPDZrmi_alt
VCMPSDZrmi_alt
VPCMPUDZrmi_alt
VPCMPQZrmi_alt
VPCMPUQZrmi_alt
VCMPPSZrmi_alt
VCMPSSZrmi_alt
MOV32ri_alt
MOV16ri_alt
MOV8ri_alt
VCMPPDrri_alt
VCMPPSrri_alt
VCMPPDYrri_alt
VCMPPSYrri_alt
VPCMPDZrri_alt
VCMPPDZrri_alt
VCMPSDZrri_alt
VPCMPUDZrri_alt
VPCMPQZrri_alt
VPCMPUQZrri_alt
VCMPPSZrri_alt
VCMPSSZrri_alt
VPCMPDZrmik_alt
VPCMPUDZrmik_alt
VPCMPQZrmik_alt
VPCMPUQZrmik_alt
VPCMPDZrrik_alt
VPCMPUDZrrik_alt
VPCMPQZrrik_alt
VPCMPUQZrrik_alt
VMOVDQA32Z256rrk_alt
VMOVDQU32Z256rrk_alt
VMOVDQA64Z256rrk_alt
VMOVDQU64Z256rrk_alt
VMOVDQU16Z256rrk_alt
VMOVDQU8Z256rrk_alt
VMOVAPDZ256rrk_alt
VMOVUPDZ256rrk_alt
VMOVAPSZ256rrk_alt
VMOVUPSZ256rrk_alt
VMOVDQA32Z128rrk_alt
VMOVDQU32Z128rrk_alt
VMOVDQA64Z128rrk_alt
VMOVDQU64Z128rrk_alt
VMOVDQU16Z128rrk_alt
VMOVDQU8Z128rrk_alt
VMOVAPDZ128rrk_alt
VMOVUPDZ128rrk_alt
VMOVAPSZ128rrk_alt
VMOVUPSZ128rrk_alt
VMOVDQA32Zrrk_alt
VMOVDQU32Zrrk_alt
VMOVDQA64Zrrk_alt
VMOVDQU64Zrrk_alt
VMOVDQU16Zrrk_alt
VMOVDQU8Zrrk_alt
VMOVAPDZrrk_alt
VMOVUPDZrrk_alt
VMOVAPSZrrk_alt
VMOVUPSZrrk_alt
VCMPSDrm_alt
VCMPSSrm_alt
VMOVDQA32Z256rr_alt
VMOVDQU32Z256rr_alt
VMOVDQA64Z256rr_alt
VMOVDQU64Z256rr_alt
VMOVDQU16Z256rr_alt
VMOVDQU8Z256rr_alt
VMOVAPDZ256rr_alt
VMOVUPDZ256rr_alt
VMOVAPSZ256rr_alt
VMOVUPSZ256rr_alt
VMOVDQA32Z128rr_alt
VMOVDQU32Z128rr_alt
VMOVDQA64Z128rr_alt
VMOVDQU64Z128rr_alt
VMOVDQU16Z128rr_alt
VMOVDQU8Z128rr_alt
VMOVAPDZ128rr_alt
VMOVUPDZ128rr_alt
VMOVAPSZ128rr_alt
VMOVUPSZ128rr_alt
VCMPSDrr_alt
VCMPSSrr_alt
VMOVDQA32Zrr_alt
VMOVDQU32Zrr_alt
VMOVDQA64Zrr_alt
VMOVDQU64Zrr_alt
VMOVDQU16Zrr_alt
VMOVDQU8Zrr_alt
VMOVAPDZrr_alt
VMOVUPDZrr_alt
VMOVAPSZrr_alt
VMOVUPSZrr_alt
VMOVDQA32Z256rrkz_alt
VMOVDQU32Z256rrkz_alt
VMOVDQA64Z256rrkz_alt
VMOVDQU64Z256rrkz_alt
VMOVDQU16Z256rrkz_alt
VMOVDQU8Z256rrkz_alt
VMOVAPDZ256rrkz_alt
VMOVUPDZ256rrkz_alt
VMOVAPSZ256rrkz_alt
VMOVUPSZ256rrkz_alt
VMOVDQA32Z128rrkz_alt
VMOVDQU32Z128rrkz_alt
VMOVDQA64Z128rrkz_alt
VMOVDQU64Z128rrkz_alt
VMOVDQU16Z128rrkz_alt
VMOVDQU8Z128rrkz_alt
VMOVAPDZ128rrkz_alt
VMOVUPDZ128rrkz_alt
VMOVAPSZ128rrkz_alt
VMOVUPSZ128rrkz_alt
VMOVDQA32Zrrkz_alt
VMOVDQU32Zrrkz_alt
VMOVDQA64Zrrkz_alt
VMOVDQU64Zrrkz_alt
VMOVDQU16Zrrkz_alt
VMOVDQU8Zrrkz_alt
VMOVAPDZrrkz_alt
VMOVUPDZrrkz_alt
VMOVAPSZrrkz_alt
VMOVUPSZrrkz_alt
VSQRTSDm_Int
VRCPPSm_Int
VRSQRTPSm_Int
VRCPSSm_Int
VRSQRTSSm_Int
VSQRTSSm_Int
VRCPPSYm_Int
VRSQRTPSYm_Int
VSQRTSDZm_Int
VSQRTSSZm_Int
VFMSUBSD4rm_Int
VFNMSUBSD4rm_Int
VFMADDSD4rm_Int
VFNMADDSD4rm_Int
VFMSUBSS4rm_Int
VFNMSUBSS4rm_Int
VFMADDSS4rm_Int
VFNMADDSS4rm_Int
VSUBSDrm_Int
VADDSDrm_Int
VMULSDrm_Int
VMINSDrm_Int
VDIVSDrm_Int
VMAXSDrm_Int
VSUBSSrm_Int
VADDSSrm_Int
VMULSSrm_Int
VMINSSrm_Int
VDIVSSrm_Int
VMAXSSrm_Int
VROUNDSDr_Int
SQRTSDr_Int
VRCPPSr_Int
VRSQRTPSr_Int
VROUNDSSr_Int
RCPSSr_Int
RSQRTSSr_Int
VRCPPSYr_Int
VRSQRTPSYr_Int
VSQRTSDZr_Int
VSQRTSSZr_Int
VFMSUBSD4mr_Int
VFNMSUBSD4mr_Int
VFMADDSD4mr_Int
VFNMADDSD4mr_Int
VFMSUBSS4mr_Int
VFNMSUBSS4mr_Int
VFMADDSS4mr_Int
VFNMADDSS4mr_Int
VFMSUBSD4rr_Int
VFNMSUBSD4rr_Int
VFMADDSD4rr_Int
VFNMADDSD4rr_Int
VFMSUBSS4rr_Int
VFNMSUBSS4rr_Int
VFMADDSS4rr_Int
VFNMADDSS4rr_Int
VSUBSDrr_Int
VADDSDrr_Int
VMULSDrr_Int
VMINSDrr_Int
VDIVSDrr_Int
VMAXSDrr_Int
VSUBSSrr_Int
VADDSSrr_Int
VMULSSrr_Int
VMINSSrr_Int
VDIVSSrr_Int
VMAXSSrr_Int
VPCONFLICTDrmbkz
VPLZCNTDrmbkz
VPCONFLICTQrmbkz
VPLZCNTQrmbkz
VPSUBDZrmbkz
VPADDDZrmbkz
VPANDDZrmbkz
VPMULLDZrmbkz
VPANDNDZrmbkz
VSUBPDZrmbkz
VADDPDZrmbkz
VMULPDZrmbkz
VMINPDZrmbkz
VDIVPDZrmbkz
VMAXPDZrmbkz
VPORDZrmbkz
VPXORDZrmbkz
VPABSDZrmbkz
VPMINSDZrmbkz
VPMAXSDZrmbkz
VPMINUDZrmbkz
VPMAXUDZrmbkz
VPSUBQZrmbkz
VPADDQZrmbkz
VPMULDQZrmbkz
VPANDQZrmbkz
VPMULUDQZrmbkz
VPANDNQZrmbkz
VPORQZrmbkz
VPXORQZrmbkz
VPABSQZrmbkz
VPMINSQZrmbkz
VPMAXSQZrmbkz
VPMINUQZrmbkz
VPMAXUQZrmbkz
VSUBPSZrmbkz
VADDPSZrmbkz
VMULPSZrmbkz
VMINPSZrmbkz
VDIVPSZrmbkz
VMAXPSZrmbkz
VALIGNDrrikz
VALIGNQrrikz
VMOVDQA32Z256rmkz
VMOVDQU32Z256rmkz
VMOVDQA64Z256rmkz
VMOVDQU64Z256rmkz
VMOVDQU16Z256rmkz
VMOVDQU8Z256rmkz
VMOVAPDZ256rmkz
VMOVUPDZ256rmkz
VMOVAPSZ256rmkz
VMOVUPSZ256rmkz
VMOVDQA32Z128rmkz
VMOVDQU32Z128rmkz
VMOVDQA64Z128rmkz
VMOVDQU64Z128rmkz
VMOVDQU16Z128rmkz
VMOVDQU8Z128rmkz
VMOVAPDZ128rmkz
VMOVUPDZ128rmkz
VMOVAPSZ128rmkz
VMOVUPSZ128rmkz
VPERMI2Drmkz
VPERMT2Drmkz
VPERMI2PDrmkz
VPERMT2PDrmkz
VPCONFLICTDrmkz
VPLZCNTDrmkz
VPERMI2Qrmkz
VPERMT2Qrmkz
VPCONFLICTQrmkz
VPLZCNTQrmkz
VPERMI2PSrmkz
VPERMT2PSrmkz
VMOVDQA32Zrmkz
VMOVDQU32Zrmkz
VMOVDQA64Zrmkz
VMOVDQU64Zrmkz
VMOVDQU16Zrmkz
VMOVDQU8Zrmkz
VPSUBDZrmkz
VPMOVSXBDZrmkz
VPMOVZXBDZrmkz
VPADDDZrmkz
VPANDDZrmkz
VPMULLDZrmkz
VPANDNDZrmkz
VMOVAPDZrmkz
VSUBPDZrmkz
VADDPDZrmkz
VMULPDZrmkz
VMINPDZrmkz
VMOVUPDZrmkz
VDIVPDZrmkz
VMAXPDZrmkz
VPORDZrmkz
VPXORDZrmkz
VPABSDZrmkz
VPMINSDZrmkz
VPMAXSDZrmkz
VPMINUDZrmkz
VPMAXUDZrmkz
VPMOVSXWDZrmkz
VPMOVZXWDZrmkz
VPSUBQZrmkz
VPMOVSXBQZrmkz
VPMOVZXBQZrmkz
VPADDQZrmkz
VPMULDQZrmkz
VPANDQZrmkz
VPMULUDQZrmkz
VPMOVSXDQZrmkz
VPMOVZXDQZrmkz
VPANDNQZrmkz
VPORQZrmkz
VPXORQZrmkz
VPABSQZrmkz
VPMINSQZrmkz
VPMAXSQZrmkz
VPMINUQZrmkz
VPMAXUQZrmkz
VPMOVSXWQZrmkz
VPMOVZXWQZrmkz
VMOVAPSZrmkz
VSUBPSZrmkz
VADDPSZrmkz
VMULPSZrmkz
VMINPSZrmkz
VMOVUPSZrmkz
VDIVPSZrmkz
VMAXPSZrmkz
VFMADDSUB213PDZrkz
VFMSUB213PDZrkz
VFNMSUB213PDZrkz
VFMSUBADD213PDZrkz
VFMADD213PDZrkz
VFNMADD213PDZrkz
VFMADDSUB213PSZrkz
VFMSUB213PSZrkz
VFNMSUB213PSZrkz
VFMSUBADD213PSZrkz
VFMADD213PSZrkz
VFNMADD213PSZrkz
VMOVDQA32Z256rrkz
VMOVDQU32Z256rrkz
VMOVDQA64Z256rrkz
VMOVDQU64Z256rrkz
VMOVDQU16Z256rrkz
VMOVDQU8Z256rrkz
VMOVAPDZ256rrkz
VMOVUPDZ256rrkz
VMOVAPSZ256rrkz
VMOVUPSZ256rrkz
VMOVDQA32Z128rrkz
VMOVDQU32Z128rrkz
VMOVDQA64Z128rrkz
VMOVDQU64Z128rrkz
VMOVDQU16Z128rrkz
VMOVDQU8Z128rrkz
VMOVAPDZ128rrkz
VMOVUPDZ128rrkz
VMOVAPSZ128rrkz
VMOVUPSZ128rrkz
VPMOVUSDBrrkz
VPMOVSDBrrkz
VPMOVDBrrkz
VPMOVUSQBrrkz
VPMOVSQBrrkz
VPMOVQBrrkz
VPERMI2Drrkz
VPERMT2Drrkz
VPERMI2PDrrkz
VPERMT2PDrrkz
VPMOVUSQDrrkz
VPMOVSQDrrkz
VPMOVQDrrkz
VPCONFLICTDrrkz
VPLZCNTDrrkz
VPERMI2Qrrkz
VPERMT2Qrrkz
VPCONFLICTQrrkz
VPLZCNTQrrkz
VPERMI2PSrrkz
VPERMT2PSrrkz
VPMOVUSDWrrkz
VPMOVSDWrrkz
VPMOVDWrrkz
VPMOVUSQWrrkz
VPMOVSQWrrkz
VPMOVQWrrkz
VMOVDQA32Zrrkz
VMOVDQU32Zrrkz
VMOVDQA64Zrrkz
VMOVDQU64Zrrkz
VMOVDQU16Zrrkz
VMOVDQU8Zrrkz
VPSUBDZrrkz
VPMOVSXBDZrrkz
VPMOVZXBDZrrkz
VPADDDZrrkz
VPANDDZrrkz
VPMULLDZrrkz
VPANDNDZrrkz
VMOVAPDZrrkz
VSUBPDZrrkz
VADDPDZrrkz
VMULPDZrrkz
VMINPDZrrkz
VMOVUPDZrrkz
VDIVPDZrrkz
VMAXPDZrrkz
VPORDZrrkz
VPXORDZrrkz
VPABSDZrrkz
VPMINSDZrrkz
VPMAXSDZrrkz
VPMINUDZrrkz
VPMAXUDZrrkz
VPMOVSXWDZrrkz
VPMOVZXWDZrrkz
VPSUBQZrrkz
VPMOVSXBQZrrkz
VPMOVZXBQZrrkz
VPADDQZrrkz
VPMULDQZrrkz
VPANDQZrrkz
VPMULUDQZrrkz
VPMOVSXDQZrrkz
VPMOVZXDQZrrkz
VPANDNQZrrkz
VPORQZrrkz
VPXORQZrrkz
VPABSQZrrkz
VPMINSQZrrkz
VPMAXSQZrrkz
VPMINUQZrrkz
VPMAXUQZrrkz
VPMOVSXWQZrrkz
VPMOVZXWQZrrkz
VMOVAPSZrrkz
VSUBPSZrrkz
VADDPSZrrkz
VMULPSZrrkz
VMINPSZrrkz
VMOVUPSZrrkz
VDIVPSZrrkz
VMAXPSZrrkz
N4llvm18X86MCAsmInfoDarwinE
N4llvm21X86_64MCAsmInfoDarwinE
N4llvm15X86ELFMCAsmInfoE
N4llvm21X86MCAsmInfoMicrosoftE
N4llvm19X86MCAsmInfoGNUCOFFE
N4llvm2cl3optI17AsmWriterFlavorTyLb0ENS0_6parserIS2_EEEE
N4llvm2cl11opt_storageI17AsmWriterFlavorTyLb0ELb0EEE
N4llvm2cl6parserI17AsmWriterFlavorTyEE
N4llvm2cl11OptionValueI17AsmWriterFlavorTyEE
N4llvm2cl15OptionValueBaseI17AsmWriterFlavorTyLb0EEE
N4llvm2cl15OptionValueCopyI17AsmWriterFlavorTyEE
ppoo
Tkkjj
:ffee
-HHHHHHHHHH
HHHHH
HHHHHHHHHH
HHHHHHHHHHHHHHH#
N12_GLOBAL__N_116X86MCCodeEmitterE
N12_GLOBAL__N_119X86MachObjectWriterE
 999999999%*
N12_GLOBAL__N_118X86ELFObjectWriterE
N12_GLOBAL__N_118X86WinCOFFStreamerE
$$$$$$ "
$$$$$$ "N12_GLOBAL__N_122X86WinCOFFObjectWriterE
YlN12_GLOBAL__N_125X86_64MachORelocationInfoE
N12_GLOBAL__N_123X86_64ELFRelocationInfoE
N4llvm6object7ArchiveE
#N4llvm6object6BinaryE
kpuz
N4llvm6object14COFFObjectFileE
abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789_-/^., 
01234567
0123456789abcdefABCDEF
0123456789
}}}}'}}}}}}}}}
}7GW}}}}}}}}}}}}}}}}}`}}
}}}}}}}}}}}}}}}}}}i
S****A*********
*F*******************K*********************P
S****A*********
*F*******************K*********************P
U,,,,C,,,,,,,,,
,H,,,,,,,,,,,,,,,,,,,M,,,,,,,,,,,,,,,,,,,,,R
U,,,,C,,,,,,,,,
,H,,,,,,,,,,,,,,,,,,,M,,,,,,,,,,,,,,,,,,,,,R
U,,,,C,,,,,,,,,
,H,,,,,,,,,,,,,,,,,,,M,,,,,,,,,,,,,,,,,,,,,R
U,,,,C,,,,,,,,,
,H,,,,,,,,,,,,,,,,,,,M,,,,,,,,,,,,,,,,,,,,,R
S****A*********
*F*******************K*********************P
S****A*********
*F*******************K*********************P
ON4llvm6object17ELFObjectFileBaseE
N4llvm6object13ELFObjectFileINS0_7ELFTypeILNS_7support10endiannessE1ELm4ELb0EEEEE
N4llvm6object13ELFObjectFileINS0_7ELFTypeILNS_7support10endiannessE1ELm2ELb0EEEEE
N4llvm6object13ELFObjectFileINS0_7ELFTypeILNS_7support10endiannessE0ELm2ELb0EEEEE
N4llvm6object13ELFObjectFileINS0_7ELFTypeILNS_7support10endiannessE0ELm8ELb1EEEEE
N4llvm6object13ELFObjectFileINS0_7ELFTypeILNS_7support10endiannessE0ELm2ELb1EEEEE
N4llvm7ELFYAML7SectionE
N4llvm7ELFYAML17RelocationSectionE
N4llvm7ELFYAML17RawContentSectionE
1EN12_GLOBAL__N_122_object_error_categoryE
N4llvm6object12IRObjectFileE
#*N4llvm6object15MachOObjectFileE
N4llvm14format_object1IjEE
TTTTTTT
TTTTT
N4llvm6object20MachOUniversalBinaryE
N4llvm6object10ObjectFileE
N4llvm14RecordStreamerE
N4llvm6object12SymbolicFileE
CCCCCCCCC
CCCCCCCCCCCCCCCC
N4llvm8AsmLexerE
#-7@IRf(XXXXX
XXX-XXXXXXX/XXX1X3V
N4llvm23MCAsmParserSemaCallbackE
N12_GLOBAL__N_19AsmParserE
N12_GLOBAL__N_113COFFAsmParserE
N12_GLOBAL__N_115DarwinAsmParserE
N12_GLOBAL__N_112ELFAsmParserE
N4llvm10MCAsmLexerE
N4llvm18MCParsedAsmOperandE
N4llvm11MCAsmParserE
N4llvm20MCAsmParserExtensionE
N4llvm17MCTargetAsmParserE
!*-69<?BE
mmmmmmmm
7Bm
[kko
vky(
+;KSco
_jN4llvm13BitcodeReaderE
N12_GLOBAL__N_124BitcodeErrorCategoryTypeE
N4llvm12_GLOBAL__N_119ConstantPlaceHolderE
N12_GLOBAL__N_118DisasmMemoryObjectE
N4llvm16MCRelocationInfoE
(1:N4llvm20MCExternalSymbolizerE
N4llvm14MCDisassemblerE
RV\3_(3((3(
$-6?HQZclu~
#*18?FOV]dmv}
______
______::
`084
7GBWT
wGRW
`0!\
`0!\
`0bU
`0-\
`0m#
`0_#
wMe$w
`0J#
`0f#
`0eh
`0eh
2#H%
`06r
24ge
7JBVTe
wJRV
7JBVT
wJRV
`0F
`0'F
`0!\
`0bU
`0bU
`04F
`0?'n0?
`0OT
 ^TQ
2RNe
b0G'
sG'n0G'
`0S'n0S
`0S'n0S
`0!7
`0mCn0m
`0NCn0N
`0h&n0h
`0NQo0N
`0mmo0m
2Z]o0Z
`0sko0s
`0VQ%
2VQe
2tP%
2tPe
wJW-
2pOo0p
`0Tao0T
`0Tlo0T
`0%Po0%
`0mVo0m
`0Zbo0Z
2KOe
2RPe
28Ne
2wF3
`0R&e
`0Rfo0R
`0R&
`0cCn0c
2#B3
`0`Qq
 `Qq
 ^aQ
EQo0E
cjo0c
0lQe
23Xe
2d[e
2vQe
2>Xe
2o[e
2*We
2[ne
2Cne
25We
`0SVo0S
`0kPo0k
r0PE
2PE3
2-no0-
2$mo0$
`0[Po0[
r0FE
2FE3
[_o0[
d0=mo0=
r0:A
2:A3
r0ED
2ED3
2cH3
`0:]e
`0%jo0%
`0SOo0S
1A%%1
DA%%D
`0 Qo0 
`0x^o0x
`0cmo0c
`0ljo0l
`0nAn0n
`0YAn0Y
8jo08
`0*_o0*
`0m_o0m
`0Djo0D
`0=_o0=
`0z_o0z
r0UD
2UD3
2sH3
`0fJn0fJ
`0Hh
`0Hh
`0]&n0]
`0]fn0]
`007
vbroadcasti32x4 
vbroadcasti64x4 
kandb 
vpmovusdb 
vpmovsdb 
vpmovdb 
kandnb 
vpmovusqb 
vpmovsqb 
vpmovqb 
korb 
kxnorb 
kxorb 
knotb 
kmovb 
vpermi2d 
vpermt2d 
vpbroadcastmw2d 
vpsrad 
vpsubd 
vpmovsxbd 
vpmovzxbd 
vpaddd 
kandd 
vpandd 
vpgatherdd 
vpscatterdd 
vpshufd 
vpslld 
vpmulld 
vpsrld 
vpblendmd 
vptestnmd 
vpermd 
vptestmd 
kandnd 
vpandnd 
valignd 
vfmaddsub132pd 
vfmsub132pd 
vfnmsub132pd 
vfmsubadd132pd 
vfmadd132pd 
vfnmadd132pd 
vpermi2pd 
vcvtdq2pd 
vcvtudq2pd 
vcvtps2pd 
vpermt2pd 
vfmaddsub213pd 
vfmsub213pd 
vfnmsub213pd 
vfmsubadd213pd 
vfmadd213pd 
vfnmadd213pd 
vrcp14pd 
vrsqrt14pd 
vrcp28pd 
vrsqrt28pd 
vsubpd 
vgatherpf0dpd 
vscatterpf0dpd 
vgatherpf1dpd 
vscatterpf1dpd 
vaddpd 
vgatherdpd 
vscatterdpd 
vrndscalepd 
vshufpd 
vpermilpd 
vmulpd 
vblendmpd 
vpermpd 
vminpd 
vcmppd 
vgatherpf0qpd 
vscatterpf0qpd 
vgatherpf1qpd 
vscatterpf1qpd 
vgatherqpd 
vscatterqpd 
vdivpd 
vmaxpd 
vpcmpeqd 
vpgatherqd 
vpscatterqd 
vpmovusqd 
vpmovsqd 
vpmovqd 
kord 
kxnord 
vpord 
kxord 
vpxord 
vfmsub213sd 
vfnmsub213sd 
vfmadd213sd 
vfnmadd213sd 
vrcp14sd 
vrsqrt14sd 
vrcp28sd 
vrsqrt28sd 
vpabsd 
vrndscalesd 
vpminsd 
vbroadcastsd 
vmovsd 
vpmaxsd 
vpconflictd 
vpcmpgtd 
vplzcntd 
knotd 
vpbroadcastd 
vpminud 
vpmaxud 
vpsravd 
vpsllvd 
vpsrlvd 
kmovd 
vpmovsxwd 
vpmovzxwd 
vcvtps2ph 
vcvttsd2si 
vcvtsd2si 
vcvttss2si 
vcvtss2si 
vcvttsd2usi 
vcvtsd2usi 
vcvttss2usi 
vcvtss2usi 
vcvtsi2sdl 
vcvtusi2sdl 
vcvtsi2ssl 
vcvtusi2ssl 
vmovddup 
vmovshdup 
vmovsldup 
vpbroadcastmb2q 
vpermi2q 
vpermt2q 
vpsraq 
vpsubq 
vpmovsxbq 
vpmovzxbq 
vcvttpd2dq 
vcvtpd2dq 
vcvttps2dq 
vcvtps2dq 
vpaddq 
vpunpckhdq 
vpunpckldq 
vpmuldq 
kandq 
vpandq 
vpunpckhqdq 
vpunpcklqdq 
vpgatherdq 
vpscatterdq 
vcvtsi2sdq 
vcvtusi2sdq 
vcvttpd2udq 
vcvtpd2udq 
vcvttps2udq 
vcvtps2udq 
vpmuludq 
vpmovsxdq 
vpmovzxdq 
vpsllq 
vpsrlq 
vpblendmq 
vptestnmq 
vpermq 
vptestmq 
kandnq 
vpandnq 
valignq 
vpcmpeqq 
vpgatherqq 
vpscatterqq 
korq 
kxnorq 
vporq 
kxorq 
vpxorq 
vpabsq 
vpminsq 
vcvtsi2ssq 
vcvtusi2ssq 
vpmaxsq 
vpconflictq 
vpcmpgtq 
vplzcntq 
knotq 
vpbroadcastq 
vpminuq 
vpmaxuq 
vpsravq 
vpsllvq 
vpsrlvq 
kmovq 
vpmovsxwq 
vpmovzxwq 
vfmaddsub132ps 
vfmsub132ps 
vfnmsub132ps 
vfmsubadd132ps 
vfmadd132ps 
vfnmadd132ps 
vcvtpd2ps 
vpermi2ps 
vcvtdq2ps 
vcvtudq2ps 
vpermt2ps 
vfmaddsub213ps 
vfmsub213ps 
vfnmsub213ps 
vfmsubadd213ps 
vfmadd213ps 
vfnmadd213ps 
vrcp14ps 
vrsqrt14ps 
vrcp28ps 
vrsqrt28ps 
vsubps 
vgatherpf0dps 
vscatterpf0dps 
vgatherpf1dps 
vscatterpf1dps 
vaddps 
vgatherdps 
vscatterdps 
vrndscaleps 
vshufps 
vpermilps 
vmulps 
vblendmps 
vpermps 
vminps 
vcmpps 
vgatherpf0qps 
vscatterpf0qps 
vgatherpf1qps 
vscatterpf1qps 
vgatherqps 
vscatterqps 
vdivps 
vmaxps 
vfmsub213ss 
vfnmsub213ss 
vfmadd213ss 
vfnmadd213ss 
vrcp14ss 
vrsqrt14ss 
vrcp28ss 
vrsqrt28ss 
vrndscaless 
vbroadcastss 
vmovss 
kunpckbw 
kandw 
vpmovusdw 
vpmovsdw 
vpmovdw 
kshiftlw 
kandnw 
vpmovusqw 
vpmovsqw 
vpmovqw 
korw 
kxnorw 
kxorw 
kshiftrw 
knotw 
kortestw 
kmovw 
prefetcht0
sha1msg1
sha256msg1
prefetcht1
pfrcpit1
pfrsqit1
vmovdqa32
vmovdqu32
sha1msg2
sha256msg2
sha256rnds2
prefetcht2
pfrcpit2
vmovdqa64
vmovdqu64
sha1rnds4
vextractf32x4
vinsertf32x4
vextracti32x4
vinserti32x4
vextractf64x4
vinsertf64x4
vextracti64x4
vinserti64x4
vmovdqu16
vperm2f128
vextractf128
vinsertf128
vbroadcastf128
vperm2i128
vextracti128
vinserti128
vbroadcasti128
vmovdqu8
vmovntdqa
vmovdqa
seta
prefetchnta
crc32b
cmpxchg16b
cmpxchg8b
vpshab
sbbb
vpsubb
adcb
decb
incb
vpaddb
xaddb
andb
vpshufb
negb
cmpxchgb
vpavgb
vpmovmskb
rclb
vpshlb
rolb
imulb
vpcomb
vpsignb
fcmovnb
cmpb
vpcmpeqb
sarb
rcrb
shrb
rorb
xorb
vpinsrb
vpextrb
scasb
vpabsb
movabsb
vpsubsb
vpaddsb
lodsb
vpminsb
cmpsb
outsb
vpsubusb
vpaddusb
pavgusb
movsb
vpmaxsb
setb
vpcmpgtb
notb
vprotb
vpbroadcastb
testb
vpcomub
vpminub
pfsub
vpmaxub
vpblendvb
idivb
fcmovb
vpacksswb
vpackuswb
pfacc
pfnacc
pfpnacc
vaesdec
blcic
blsic
t1mskc
vaesimc
vaesenc
vpshad
vpsrad
vphaddbd
vphaddubd
vphsubd
vpsubd
vpmovsxbd
vpmovzxbd
pfadd
vphaddd
vpaddd
vpblendd
vpgatherdd
vpmacsdd
vpmacssdd
pi2fd
vpshufd
pf2id
invpcid
invvpid
fbld
vpshld
vpslld
vpmulld
vpsrld
vmptrld
vpcomd
vpermd
vpand
vpsignd
bound
vfmaddsub231pd
vfmsub231pd
vfnmsub231pd
vfmsubadd231pd
vfmadd231pd
vfnmadd231pd
vfmaddsub132pd
vfmsub132pd
vfnmsub132pd
vfmsubadd132pd
vfmadd132pd
vfnmadd132pd
cvtpi2pd
vpermil2pd
vcvtdq2pd
vcvtps2pd
vfmaddsub213pd
vfmsub213pd
vfnmsub213pd
vfmsubadd213pd
vfmadd213pd
vfnmadd213pd
vmovapd
pswapd
vfmaddsubpd
vaddsubpd
vhsubpd
vfmsubpd
vfnmsubpd
vsubpd
vfmsubaddpd
vhaddpd
vfmaddpd
vfnmaddpd
vaddpd
vandpd
vblendpd
vroundpd
vgatherdpd
vshufpd
vunpckhpd
vmovhpd
vmovmskpd
vpermilpd
vunpcklpd
vmulpd
vmovlpd
vpcmpd
vpermpd
vandnpd
vminpd
vdppd
vcmppd
vgatherqpd
vorpd
vxorpd
vmovntpd
vsqrtpd
vtestpd
vmovupd
vblendvpd
vdivpd
vmaskmovpd
vmaxpd
vfrczpd
vpcmpeqd
vpgatherqd
vpinsrd
vpextrd
vfmsub231sd
vfnmsub231sd
vfmadd231sd
vfnmadd231sd
vfmsub132sd
vfnmsub132sd
vfmadd132sd
vfnmadd132sd
vcvtss2sd
vfmsub213sd
vfnmsub213sd
vfmadd213sd
vfnmadd213sd
vpabsd
vfmsubsd
vfnmsubsd
vsubsd
vfmaddsd
vfnmaddsd
vaddsd
vroundsd
vucomisd
vcomisd
vmulsd
vpminsd
vminsd
vcmpsd
movntsd
vsqrtsd
vbroadcastsd
vdivsd
vmovsd
vpmaxsd
vmaxsd
vfrczsd
vpcmpgtd
vprotd
vpbroadcastd
vpcomud
vpminud
vpcmpud
vpmaxud
vpsravd
vpsllvd
vpsrlvd
vpmaskmovd
vmovd
vphsubwd
vphaddwd
vpmaddwd
vpunpckhwd
vpunpcklwd
vpmacswd
vpmadcswd
vpmacsswd
vpmadcsswd
vphadduwd
vpmovsxwd
vpmovzxwd
setae
fcmovnbe
setbe
fcmovbe
ffree
pfcmpge
setge
setle
loopne
setne
fcmovne
loope
sete
sha1nexte
fnsave
fxsave
fcmove
invlpg
setg
prefetch
fxch
vcvtps2ph
vpmacsdqh
vpmacssdqh
clflush
blci
fcomi
fucomi
cvttpd2pi
cvtpd2pi
cvttps2pi
cvtps2pi
fcompi
fucompi
vpcmpestri
vpcmpistri
vcvttsd2si
vcvtsd2si
vcvttss2si
vcvtss2si
blcmsk
tzmsk
crc32l
leal
cmoval
sbbl
movsbl
fsubl
fisubl
cmovbl
movzbl
adcl
decl
incl
btcl
vmreadl
faddl
fiaddl
xaddl
rdseedl
fldl
shldl
fildl
rdrandl
shrdl
vcvtsi2sdl
vcvtusi2sdl
cmovael
cmovbel
cmovgel
cmovlel
cmovnel
rdfsbasel
wrfsbasel
rdgsbasel
wrgsbasel
vmwritel
cmovel
bsfl
negl
cmpxchgl
cmovgl
pushl
bzhil
blsil
movntil
blsmskl
rcll
fildll
shll
blcfill
blsfill
lcalll
roll
fistpll
fisttpll
lsll
fmull
fimull
cmovll
fcoml
ficoml
andnl
cmovnol
cmovol
bswapl
pdepl
cmpl
ljmpl
fcompl
ficompl
cmovnpl
nopl
popl
arpl
fstpl
fistpl
fisttpl
cmovpl
vpmacsdql
vpmacssdql
larl
sarl
fsubrl
fisubrl
rcrl
shrl
rorl
xorl
bsrl
blsrl
btrl
strl
bextrl
fdivrl
fidivrl
scasl
movabsl
ldsl
lodsl
lesl
lfsl
lgsl
cmovnsl
cmpsl
vcvtsi2ssl
vcvtusi2ssl
lssl
btsl
outsl
cmovsl
lgdtl
sgdtl
lidtl
sidtl
sldtl
lretl
setl
popcntl
lzcntl
tzcntl
notl
testl
fstl
fistl
pextl
pfmul
fdivl
fidivl
movl
smswl
movswl
movzwl
adcxl
shlxl
mulxl
adoxl
sarxl
shrxl
rorxl
fcom
fucom
vpperm
vpcmpestrm
vpcmpistrm
vpandn
xbegin
pfmin
vmxon
setno
seto
fsubp
pfrcp
faddp
fmulp
fcomp
fucomp
setnp
loop
fsubrp
fdivrp
setp
fbstp
fstp
vmovddup
vmovshdup
vmovsldup
#EH_SjLj_Setup
fdivp
crc32q
movdq2q
leaq
vpshaq
cmovaq
sbbq
vphaddbq
movsbq
vphaddubq
vpsubq
cmovbq
vpmovsxbq
vpmovzxbq
movzbq
adcq
decq
incq
btcq
vcvttpd2dq
vcvtpd2dq
movq2dq
vcvttps2dq
vcvtps2dq
vmreadq
vphsubdq
vpaddq
xaddq
vphadddq
rdseedq
vpunpckhdq
shldq
vpunpckldq
vpslldq
vpsrldq
vpmuldq
rdrandq
vpunpckhqdq
vpunpcklqdq
vpclmulqdq
vpgatherdq
shrdq
vcvtsi2sdq
vcvtusi2sdq
vmovntdq
vphaddudq
vpmuludq
vpmovsxdq
vpmovzxdq
cmovaeq
cmovbeq
cmovgeq
cmovleq
cmovneq
pfcmpeq
rdfsbaseq
wrfsbaseq
rdgsbaseq
wrgsbaseq
vmwriteq
fxsaveq
cmoveq
bsfq
negq
cmpxchgq
cmovgq
pushq
bzhiq
blsiq
movntiq
blsmskq
rclq
vpshlq
callq
vpsllq
rolq
vpsrlq
lslq
movslq
imulq
cmovlq
vpcomq
vpermq
andnq
cmovnoq
cmovoq
bswapq
pdepq
vpcmpq
cmovnpq
popq
cmovpq
vpcmpeqq
vpgatherqq
larq
sarq
rcrq
shrq
rorq
fxrstorq
xorq
bsrq
blsrq
vpinsrq
btrq
strq
bextrq
vpextrq
scasq
movabsq
lodsq
lfsq
lgsq
cmovnsq
cmpsq
vcvtsi2ssq
vcvtusi2ssq
lssq
btsq
cmovsq
lgdtq
sgdtq
lidtq
sidtq
sldtq
lretq
vpcmpgtq
popcntq
lzcntq
tzcntq
movntq
notq
vprotq
xsaveoptq
insertq
vpbroadcastq
testq
pextq
vpcomuq
vpcmpuq
idivq
vpsllvq
vpsrlvq
vpmaskmovq
vmovq
vphaddwq
smswq
movswq
vphadduwq
vpmovsxwq
vpmovzxwq
movzwq
adcxq
shlxq
mulxq
adoxq
sarxq
shrxq
rorxq
vmclear
pfsubr
enter
vpalignr
vpor
frstor
fxrstor
vpxor
verr
vldmxcsr
vstmxcsr
bextr
fdivr
fsubs
fisubs
blcs
fadds
fiadds
flds
filds
fmuls
fimuls
fcoms
ficoms
setns
vfmaddsub231ps
vfmsub231ps
vfnmsub231ps
vfmsubadd231ps
vfmadd231ps
vfnmadd231ps
vfmaddsub132ps
vfmsub132ps
vfnmsub132ps
vfmsubadd132ps
vfmadd132ps
vfnmadd132ps
vcvtpd2ps
vcvtph2ps
cvtpi2ps
vpermil2ps
vcvtdq2ps
vfmaddsub213ps
vfmsub213ps
vfnmsub213ps
vfmsubadd213ps
vfmadd213ps
vfnmadd213ps
vmovaps
vfmaddsubps
vaddsubps
vhsubps
vfmsubps
vfnmsubps
vsubps
vfmsubaddps
vhaddps
vfmaddps
vfnmaddps
vaddps
vandps
vblendps
vroundps
vgatherdps
vshufps
vunpckhps
vmovlhps
vmovhps
vmovmskps
vmovhlps
vpermilps
vunpcklps
vmulps
vmovlps
fcomps
ficomps
vpermps
vandnps
vminps
vrcpps
vdpps
vcmpps
vgatherqps
vorps
vxorps
vextractps
vmovntps
vinsertps
vrsqrtps
vsqrtps
vtestps
fstps
fistps
fisttps
vmovups
vblendvps
vdivps
vmaskmovps
vmaxps
vfrczps
fsubrs
fisubrs
fdivrs
fidivrs
vfmsub231ss
vfnmsub231ss
vfmadd231ss
vfnmadd231ss
vfmsub132ss
vfnmsub132ss
vfmadd132ss
vfnmadd132ss
vcvtsd2ss
vfmsub213ss
vfnmsub213ss
vfmadd213ss
vfnmadd213ss
vfmsubss
vfnmsubss
vsubss
vfmaddss
vfnmaddss
vaddss
vroundss
vucomiss
vcomiss
vmulss
vminss
vrcpss
vcmpss
movntss
vrsqrtss
vsqrtss
vbroadcastss
vdivss
vmovss
vmaxss
vfrczss
sets
fsts
fists
fdivs
fidivs
fldt
pfcmpgt
invept
xsaveopt
fstpt
xabort
pfrsqrt
vaesdeclast
vaesenclast
vptest
vaeskeygenassist
vmptrst
fcmovnu
vlddqu
vmaskmovdqu
vmovdqu
fcmovu
fdiv
fldenv
fnstenv
vpcmov
crc32w
leaw
vpshaw
vpsraw
cmovaw
sbbw
vphsubbw
vmpsadbw
vpsadbw
vphaddbw
vpunpckhbw
vpunpcklbw
movsbw
vphaddubw
vphsubw
vpsubw
cmovbw
vpmovsxbw
vpmovzxbw
movzbw
adcw
fldcw
decw
incw
btcw
fnstcw
vphaddw
vpaddw
xaddw
rdseedw
shldw
rdrandw
vpblendw
shrdw
vpackssdw
vpackusdw
cmovaew
cmovbew
cmovgew
cmovlew
cmovnew
cmovew
pi2fw
bsfw
pshufw
negw
cmpxchgw
vpavgw
cmovgw
prefetchw
vpshufhw
vpmulhw
pushw
pf2iw
rclw
vpshuflw
vpshlw
lcallw
vpsllw
vpmullw
rolw
vpsrlw
lslw
imulw
cmovlw
vpcomw
vpsignw
cmovnow
cmovow
cmpw
ljmpw
cmovnpw
nopw
popw
cmovpw
vpcmpeqw
larw
sarw
rcrw
verw
pmulhrw
shrw
rorw
xorw
bsrw
vpinsrw
btrw
ltrw
strw
vpextrw
scasw
vpabsw
movabsw
vpmaddubsw
vphsubsw
vpsubsw
vphaddsw
vpaddsw
ldsw
lodsw
lesw
lfsw
lgsw
vpminsw
cmovnsw
cmpsw
vpmulhrsw
lssw
btsw
fnstsw
outsw
vpsubusw
vpaddusw
cmovsw
vpmaxsw
lgdtw
sgdtw
lidtw
sidtw
lldtw
sldtw
lretw
vpcmpgtw
popcntw
lzcntw
tzcntw
notw
vprotw
vpbroadcastw
testw
vpmulhuw
vpcomuw
vpminuw
vphminposuw
vpmaxuw
idivw
movw
vpmacsww
lmsww
smsww
vpmacssww
pfmax
vcvttpd2dqx
vcvtpd2dqx
vcvtpd2psx
vcvttpd2dqy
vcvtpd2dqy
vcvtpd2psy
jecxz
jcxz
jrcxz
fsub
%st(0), 
fadd
%st(0), 
fmul
%st(0), 
fsubr
%st(0), 
fdivr
%st(0), 
fdiv
%st(0), 
movabsb
%al, 
stosb
%al, 
outb
%al, 
movb
%al, 
rclb
%cl, 
shlb
%cl, 
rolb
%cl, 
sarb
%cl, 
rcrb
%cl, 
shrb
%cl, 
rorb
%cl, 
shldl
%cl, 
shrdl
%cl, 
rcll
%cl, 
shll
%cl, 
roll
%cl, 
sarl
%cl, 
rcrl
%cl, 
shrl
%cl, 
rorl
%cl, 
shldq
%cl, 
shrdq
%cl, 
rclq
%cl, 
shlq
%cl, 
rolq
%cl, 
sarq
%cl, 
rcrq
%cl, 
shrq
%cl, 
rorq
%cl, 
shldw
%cl, 
shrdw
%cl, 
rclw
%cl, 
shlw
%cl, 
rolw
%cl, 
sarw
%cl, 
rcrw
%cl, 
shrw
%cl, 
rorw
%cl, 
movabsw
%ax, 
stosw
%ax, 
outw
%ax, 
movw
%ax, 
movabsl
%eax, 
stosl
%eax, 
outl
%eax, 
movl
%eax, 
movabsq
%rax, 
stosq
%rax, 
insb
%dx, 
insl
%dx, 
insw
%dx, 
vrcp28pd 
{sae}, 
vrsqrt28pd 
{sae}, 
vrcp28sd 
{sae}, 
vrsqrt28sd 
{sae}, 
vrcp28ps 
{sae}, 
vrsqrt28ps 
{sae}, 
vrcp28ss 
{sae}, 
vrsqrt28ss 
{sae}, 
#VAARG_64 
#eh_return, addr: 
#SEH_SaveXMM 
#VASTART_SAVE_XMM_REGS 
#SEH_StackAlloc 
#SEH_PushFrame 
#SEH_SetFrame 
#SEH_SaveReg 
#SEH_PushReg 
#CMOV_GR32* PSEUDO!
#CMOV_GR16* PSEUDO!
#CMOV_RFP80 PSEUDO!
#CMOV_V4F32 PSEUDO!
#CMOV_V16F32 PSEUDO!
#CMOV_V8F32 PSEUDO!
#CMOV_RFP32 PSEUDO!
#CMOV_FR32 PSEUDO!
#CMOV_V2F64 PSEUDO!
#CMOV_V4F64 PSEUDO!
#CMOV_V8F64 PSEUDO!
#CMOV_V2I64 PSEUDO!
#CMOV_V4I64 PSEUDO!
#CMOV_V8I64 PSEUDO!
#CMOV_RFP64 PSEUDO!
#CMOV_FR64 PSEUDO!
#CMOV_GR8 PSEUDO!
#ACQUIRE_MOV PSEUDO!
#RELEASE_MOV PSEUDO!
lcalll
ljmpl
lcallq
ljmpq
lcallw
ljmpw
xsha1
fld1
fprem1
f2xm1
fyl2xp1
#EH_SJLJ_LONGJMP32
#EH_SJLJ_SETJMP32
# TLSCall_32
# TLS_addr32
# TLS_base_addr32
fldlg2
fldln2
int3
#EH_SJLJ_LONGJMP64
#EH_SJLJ_SETJMP64
# TLSCall_64
# TLS_addr64
# TLS_base_addr64
rex64
data16
xsha256
LIFETIME_END
BUNDLE
DBG_VALUE
# XBEGIN
#ADJCALLSTACKDOWN
#ADJCALLSTACKUP
#MEMBARRIER
LIFETIME_START
ud2b
xcryptecb
xcryptcfb
xcryptofb
rep;stosb
rep;movsb
xlatb
clac
stac
xcryptcbc
rdpmc
vmfunc
rdtsc
cpuid
xend
cltd
cwtd
wbinvd
fldl2e
lfence
mfence
sfence
fscale
vmresume
repne
xacquire
xstore
xrelease
pause
#SEH_Epilogue
#SEH_EndPrologue
leave
vmxoff
lahf
sahf
vmlaunch
clgi
stgi
fldpi
# win32 fptoui
lock
%dx, %al
pushal
popal
pushfl
popfl
vmmcall
vmcall
syscall
vzeroall
rep;stosl
rep;movsl
iretl
lretl
sysretl
sysexitl
cwtl
montmul
fxam
fprem
fpatan
fptan
fsin
# dynamic stack allocation
into
cqto
rdtscp
vpcmp
vcmp
fnop
fcompp
fucompp
fdecstp
fincstp
pushfq
popfq
rep;stosq
rep;movsq
iretq
lretq
sysretq
sysexitq
cltq
vzeroupper
sysenter
monitor
rdmsr
wrmsr
xcryptctr
fabs
pushl
pushw
pushl
popl
pushw
popw
pushl
popl
pushw
popw
pushl
popl
pushq
popq
pushw
popw
pushl
popl
pushq
popq
pushw
popw
swapgs
fchs
# variable sized alloca for segmented stacks
encls
femms
fcos
fsincos
pushl
popl
pushw
popw
clts
fldl2t
fxtract
mwait
fninit
frndint
fsqrt
xtest
ftst
enclu
xgetbv
xsetbv
pushaw
popaw
pushfw
popfw
rep;stosw
rep;movsw
cbtw
iretw
lretw
fyl2x
fnstsw
%dx, %ax
vmload
%eax
vmsave
%eax
vmrun
%eax
skinit
%eax
invlpga
%ecx, %eax
%dx, %eax
vmload
%rax
vmsave
%rax
vmrun
%rax
invlpga
%ecx, %rax
outb
%al, %dx
outw
%ax, %dx
outl
%eax, %dx
fnclex
fldz
st(0)
st(1)
st(2)
st(3)
st(4)
st(5)
st(6)
st(7)
xmm10
ymm10
zmm10
cr10
xmm20
ymm20
zmm20
xmm30
ymm30
zmm30
xmm0
ymm0
zmm0
xmm11
ymm11
zmm11
cr11
xmm21
ymm21
zmm21
xmm31
ymm31
zmm31
xmm1
ymm1
zmm1
xmm12
ymm12
zmm12
cr12
xmm22
ymm22
zmm22
xmm2
ymm2
zmm2
xmm13
ymm13
zmm13
cr13
xmm23
ymm23
zmm23
xmm3
ymm3
zmm3
xmm14
ymm14
zmm14
cr14
xmm24
ymm24
zmm24
xmm4
ymm4
zmm4
xmm15
ymm15
zmm15
cr15
xmm25
ymm25
zmm25
xmm5
ymm5
zmm5
xmm16
ymm16
zmm16
xmm26
ymm26
zmm26
xmm6
ymm6
zmm6
xmm17
ymm17
zmm17
xmm27
ymm27
zmm27
xmm7
ymm7
zmm7
xmm18
ymm18
zmm18
xmm28
ymm28
zmm28
xmm8
ymm8
zmm8
xmm19
ymm19
zmm19
xmm29
ymm29
zmm29
xmm9
ymm9
zmm9
r10b
r11b
r12b
r13b
r14b
r15b
r10d
r11d
r12d
r13d
r14d
r15d
flags
r10w
r11w
r12w
r13w
r14w
r15w
fpsw
N4llvm17X86ATTInstPrinterE
$-6?HQZclu~
#*18?FOV]dmv}
 &p*
mE74C
Bap`
>=C0
 S^0
:S^0
<S^0
4&L0
8&L0
4RL0
8RL0
4UM0
8UM0
BA0A
BuC0
>|G0
4!E0
vbroadcasti32x4 
vbroadcasti64x4 
kandb 
vpmovusdb 
vpmovsdb 
vpmovdb 
kandnb 
vpmovusqb 
vpmovsqb 
vpmovqb 
korb 
kxnorb 
kxorb 
knotb 
kmovb 
vpermi2d 
vpermt2d 
vpbroadcastmw2d 
vpsrad 
vpsubd 
vpmovsxbd 
vpmovzxbd 
vpaddd 
kandd 
vpandd 
vpgatherdd 
vpscatterdd 
vpshufd 
vpslld 
vpmulld 
vpsrld 
vpblendmd 
vptestnmd 
vpermd 
vptestmd 
kandnd 
vpandnd 
valignd 
vfmaddsub132pd 
vfmsub132pd 
vfnmsub132pd 
vfmsubadd132pd 
vfmadd132pd 
vfnmadd132pd 
vpermi2pd 
vcvtdq2pd 
vcvtudq2pd 
vcvtps2pd 
vpermt2pd 
vfmaddsub213pd 
vfmsub213pd 
vfnmsub213pd 
vfmsubadd213pd 
vfmadd213pd 
vfnmadd213pd 
vrcp14pd 
vrsqrt14pd 
vrcp28pd 
vrsqrt28pd 
vsubpd 
vaddpd 
vgatherdpd 
vscatterdpd 
vrndscalepd 
vshufpd 
vpermilpd 
vmulpd 
vblendmpd 
vpermpd 
vminpd 
vcmppd 
vgatherqpd 
vscatterqpd 
vdivpd 
vmaxpd 
vpcmpeqd 
vpgatherqd 
vpscatterqd 
vpmovusqd 
vpmovsqd 
vpmovqd 
kord 
kxnord 
vpord 
kxord 
vpxord 
vcvtsi2sd 
vcvtusi2sd 
vfmsub213sd 
vfnmsub213sd 
vfmadd213sd 
vfnmadd213sd 
vrcp14sd 
vrsqrt14sd 
vrcp28sd 
vrsqrt28sd 
vpabsd 
vrndscalesd 
vpminsd 
vbroadcastsd 
vmovsd 
vpmaxsd 
vpconflictd 
vpcmpgtd 
vplzcntd 
knotd 
vpbroadcastd 
vpminud 
vpmaxud 
vpsravd 
vpsllvd 
vpsrlvd 
kmovd 
vpmovsxwd 
vpmovzxwd 
vcvtps2ph 
vcvttsd2si 
vcvtsd2si 
vcvttss2si 
vcvtss2si 
vcvttsd2usi 
vcvtsd2usi 
vcvttss2usi 
vcvtss2usi 
vmovddup 
vmovshdup 
vmovsldup 
vpbroadcastmb2q 
vpermi2q 
vpermt2q 
vpsraq 
vpsubq 
vpmovsxbq 
vpmovzxbq 
vcvttpd2dq 
vcvtpd2dq 
vcvttps2dq 
vcvtps2dq 
vpaddq 
vpunpckhdq 
vpunpckldq 
vpmuldq 
kandq 
vpandq 
vpunpckhqdq 
vpunpcklqdq 
vpgatherdq 
vpscatterdq 
vcvttpd2udq 
vcvtpd2udq 
vcvttps2udq 
vcvtps2udq 
vpmuludq 
vpmovsxdq 
vpmovzxdq 
vpsllq 
vpsrlq 
vpblendmq 
vptestnmq 
vpermq 
vptestmq 
kandnq 
vpandnq 
valignq 
vpcmpeqq 
vpgatherqq 
vpscatterqq 
korq 
kxnorq 
vporq 
kxorq 
vpxorq 
vpabsq 
vpminsq 
vpmaxsq 
vpconflictq 
vpcmpgtq 
vplzcntq 
knotq 
vpbroadcastq 
vpminuq 
vpmaxuq 
vpsravq 
vpsllvq 
vpsrlvq 
kmovq 
vpmovsxwq 
vpmovzxwq 
vfmaddsub132ps 
vfmsub132ps 
vfnmsub132ps 
vfmsubadd132ps 
vfmadd132ps 
vfnmadd132ps 
vcvtpd2ps 
vpermi2ps 
vcvtdq2ps 
vcvtudq2ps 
vpermt2ps 
vfmaddsub213ps 
vfmsub213ps 
vfnmsub213ps 
vfmsubadd213ps 
vfmadd213ps 
vfnmadd213ps 
vrcp14ps 
vrsqrt14ps 
vrcp28ps 
vrsqrt28ps 
vsubps 
vaddps 
vgatherdps 
vscatterdps 
vrndscaleps 
vshufps 
vpermilps 
vmulps 
vblendmps 
vpermps 
vminps 
vcmpps 
vgatherqps 
vscatterqps 
vdivps 
vmaxps 
vcvtsi2ss 
vcvtusi2ss 
vfmsub213ss 
vfnmsub213ss 
vfmadd213ss 
vfnmadd213ss 
vrcp14ss 
vrsqrt14ss 
vrcp28ss 
vrsqrt28ss 
vrndscaless 
vbroadcastss 
vmovss 
kunpckbw 
kandw 
vpmovusdw 
vpmovsdw 
vpmovdw 
kshiftlw 
kandnw 
vpmovusqw 
vpmovsqw 
vpmovqw 
korw 
kxnorw 
kxorw 
kshiftrw 
knotw 
kortestw 
kmovw 
prefetcht0
sha1msg1
sha256msg1
prefetcht1
pfrcpit1
pfrsqit1
vmovdqa32
crc32
vmovdqu32
sha1msg2
sha256msg2
sha256rnds2
prefetcht2
pfrcpit2
vmovdqa64
fxsave64
fxrstor64
xsaveopt64
vmovdqu64
sha1rnds4
vextractf32x4
vinsertf32x4
vextracti32x4
vinserti32x4
vextractf64x4
vinsertf64x4
vextracti64x4
vinserti64x4
vmovdqu16
vperm2f128
vextractf128
vinsertf128
vbroadcastf128
vperm2i128
vextracti128
vinserti128
vbroadcasti128
vmovdqu8
vmovntdqa
vmovdqa
seta
prefetchnta
cmova
cmpxchg16b
cmpxchg8b
vpshab
vpsubb
vpaddb
vpshufb
vpavgb
vpmovmskb
vpshlb
vpcomb
vpsignb
vpcmpeqb
vpinsrb
vpextrb
vpabsb
vpsubsb
vpaddsb
vpminsb
stosb
cmpsb
vpsubusb
vpaddusb
pavgusb
movsb
vpmaxsb
setb
vpcmpgtb
vprotb
vpbroadcastb
vpcomub
vpminub
pfsub
fisub
vpmaxub
vpblendvb
cmovb
vpacksswb
vpackuswb
pfacc
pfnacc
pfpnacc
vaesdec
blcic
blsic
t1mskc
vaesimc
vaesenc
vmread
vpshad
vpsrad
vphaddbd
vphaddubd
vphsubd
vpsubd
vpmovsxbd
vpmovzxbd
pfadd
fiadd
xadd
vphaddd
vpaddd
vpblendd
vpgatherdd
vpmacsdd
vpmacssdd
rdseed
pi2fd
vpshufd
pf2id
invpcid
invvpid
fbld
vpshld
fild
vpslld
vpmulld
vpsrld
vmptrld
vpcomd
vpermd
vpand
rdrand
vpsignd
bound
vfmaddsub231pd
vfmsub231pd
vfnmsub231pd
vfmsubadd231pd
vfmadd231pd
vfnmadd231pd
vfmaddsub132pd
vfmsub132pd
vfnmsub132pd
vfmsubadd132pd
vfmadd132pd
vfnmadd132pd
cvtpi2pd
vpermil2pd
vcvtdq2pd
vcvtps2pd
vfmaddsub213pd
vfmsub213pd
vfnmsub213pd
vfmsubadd213pd
vfmadd213pd
vfnmadd213pd
vmovapd
pswapd
vfmaddsubpd
vaddsubpd
vhsubpd
vfmsubpd
vfnmsubpd
vsubpd
vfmsubaddpd
vhaddpd
vfmaddpd
vfnmaddpd
vaddpd
vandpd
vblendpd
vroundpd
vgatherdpd
vshufpd
vunpckhpd
vmovhpd
vmovmskpd
vpermilpd
vunpcklpd
vmulpd
vmovlpd
vpcmpd
vpermpd
vandnpd
vminpd
vdppd
vcmppd
vgatherqpd
vorpd
vxorpd
vmovntpd
vsqrtpd
vtestpd
vmovupd
vblendvpd
vdivpd
vmaskmovpd
vmaxpd
vfrczpd
vpcmpeqd
vpgatherqd
shrd
vpinsrd
vpextrd
vfmsub231sd
vfnmsub231sd
vfmadd231sd
vfnmadd231sd
vfmsub132sd
vfnmsub132sd
vfmadd132sd
vfnmadd132sd
vcvtsi2sd
vcvtusi2sd
vcvtss2sd
vfmsub213sd
vfnmsub213sd
vfmadd213sd
vfnmadd213sd
vpabsd
vfmsubsd
vfnmsubsd
vsubsd
vfmaddsd
vfnmaddsd
vaddsd
vroundsd
vucomisd
vcomisd
vmulsd
vpminsd
vminsd
stosd
vcmpsd
movntsd
vsqrtsd
vbroadcastsd
vdivsd
vmovsd
vpmaxsd
vmaxsd
vfrczsd
vpcmpgtd
vprotd
vpbroadcastd
vpcomud
vpminud
vpcmpud
vpmaxud
vpsravd
vpsllvd
vpsrlvd
vpmaskmovd
vmovd
vphsubwd
vphaddwd
vpmaddwd
vpunpckhwd
vpunpcklwd
vpmacswd
vpmadcswd
vpmacsswd
vpmadcsswd
vphadduwd
vpmovsxwd
vpmovzxwd
movsxd
setae
cmovae
setbe
cmovbe
ffree
pfcmpge
setge
cmovge
setle
cmovle
loopne
setne
cmovne
loope
rdfsbase
wrfsbase
rdgsbase
wrgsbase
sete
vmwrite
sha1nexte
fnsave
fxsave
cmove
retf
cmpxchg
invlpg
setg
cmovg
prefetch
fxch
vcvtps2ph
vpmacsdqh
vpmacssdqh
clflush
push
blci
bzhi
fcomi
fucomi
cvttpd2pi
cvtpd2pi
cvttps2pi
cvtps2pi
fcompi
fucompi
vpcmpestri
vpcmpistri
vcvttsd2si
vcvtsd2si
vcvttss2si
vcvtss2si
blsi
movnti
blcmsk
blsmsk
tzmsk
lcall
blcfill
blsfill
arpl
vpmacsdql
vpmacssdql
setl
pfmul
fimul
cmovl
fcom
ficom
fucom
vpperm
vpcmpestrm
vpcmpistrm
vpandn
xbegin
pfmin
vmxon
setno
cmovno
seto
cmovo
bswap
fsubp
pfrcp
faddp
pdep
fmulp
ljmp
fcomp
ficomp
fucomp
setnp
cmovnp
loop
fsubrp
fdivrp
setp
fbstp
fstp
fistp
fisttp
vmovddup
vmovshdup
vmovsldup
#EH_SjLj_Setup
fdivp
cmovp
movdq2q
vpshaq
vphaddbq
vphaddubq
vpsubq
vpmovsxbq
vpmovzxbq
vcvttpd2dq
vcvtpd2dq
movq2dq
vcvttps2dq
vcvtps2dq
vphsubdq
vpaddq
vphadddq
vpunpckhdq
vpunpckldq
vpslldq
vpsrldq
vpmuldq
vpunpckhqdq
vpunpcklqdq
vpclmulqdq
vpgatherdq
vmovntdq
vphaddudq
vpmuludq
vpmovsxdq
vpmovzxdq
pfcmpeq
retfq
vpshlq
vpsllq
vpsrlq
vpcomq
vpermq
vpcmpq
vpcmpeqq
vpgatherqq
vpinsrq
vpextrq
stosq
cmpsq
movsq
vpcmpgtq
movntq
vprotq
insertq
vpbroadcastq
vpcomuq
vpcmpuq
vpsllvq
vpsrlvq
vpmaskmovq
vmovq
vphaddwq
vphadduwq
vpmovsxwq
vpmovzxwq
vmclear
pfsubr
fisubr
enter
vpalignr
vpor
frstor
fxrstor
vpxor
verr
vldmxcsr
vstmxcsr
blsr
bextr
fdivr
fidivr
movabs
blcs
setns
cmovns
vfmaddsub231ps
vfmsub231ps
vfnmsub231ps
vfmsubadd231ps
vfmadd231ps
vfnmadd231ps
vfmaddsub132ps
vfmsub132ps
vfnmsub132ps
vfmsubadd132ps
vfmadd132ps
vfnmadd132ps
vcvtpd2ps
vcvtph2ps
cvtpi2ps
vpermil2ps
vcvtdq2ps
vfmaddsub213ps
vfmsub213ps
vfnmsub213ps
vfmsubadd213ps
vfmadd213ps
vfnmadd213ps
vmovaps
vfmaddsubps
vaddsubps
vhsubps
vfmsubps
vfnmsubps
vsubps
vfmsubaddps
vhaddps
vfmaddps
vfnmaddps
vaddps
vandps
vblendps
vroundps
vgatherdps
vshufps
vunpckhps
vmovlhps
vmovhps
vmovmskps
vmovhlps
vpermilps
vunpcklps
vmulps
vmovlps
vpermps
vandnps
vminps
vrcpps
vdpps
vcmpps
vgatherqps
vorps
vxorps
vextractps
vmovntps
vinsertps
vrsqrtps
vsqrtps
vtestps
vmovups
vblendvps
vdivps
vmaskmovps
vmaxps
vfrczps
vfmsub231ss
vfnmsub231ss
vfmadd231ss
vfnmadd231ss
vfmsub132ss
vfnmsub132ss
vfmadd132ss
vfnmadd132ss
vcvtsd2ss
vcvtsi2ss
vcvtusi2ss
vfmsub213ss
vfnmsub213ss
vfmadd213ss
vfnmadd213ss
vfmsubss
vfnmsubss
vsubss
vfmaddss
vfnmaddss
vaddss
vroundss
vucomiss
vcomiss
vmulss
vminss
vrcpss
vcmpss
movntss
vrsqrtss
vsqrtss
vbroadcastss
vdivss
vmovss
vmaxss
vfrczss
sets
cmovs
lgdt
sgdt
lidt
sidt
lldt
sldt
pfcmpgt
popcnt
lzcnt
tzcnt
invept
xsaveopt
xabort
pfrsqrt
vaesdeclast
vaesenclast
vptest
fist
vaeskeygenassist
vmptrst
pext
vlddqu
vmaskmovdqu
vmovdqu
fdiv
fidiv
fldenv
fnstenv
vpcmov
vpshaw
vpsraw
vphsubbw
vmpsadbw
vpsadbw
vphaddbw
vpunpckhbw
vpunpcklbw
vphaddubw
vphsubw
vpsubw
vpmovsxbw
vpmovzxbw
fldcw
fnstcw
vphaddw
vpaddw
vpblendw
vpackssdw
vpackusdw
pi2fw
pshufw
vpavgw
prefetchw
vpshufhw
vpmulhw
pf2iw
vpshuflw
vpshlw
vpsllw
vpmullw
vpsrlw
vpcomw
vpsignw
vpcmpeqw
verw
pmulhrw
vpinsrw
vpextrw
vpabsw
vpmaddubsw
vphsubsw
vpsubsw
vphaddsw
vpaddsw
lmsw
smsw
vpminsw
stosw
cmpsw
vpmulhrsw
fnstsw
vpsubusw
vpaddusw
movsw
vpmaxsw
vpcmpgtw
vprotw
vpbroadcastw
vpmulhuw
vpcomuw
vpminuw
vphminposuw
vpmaxuw
vpmacsww
vpmacssww
pfmax
adcx
shlx
mulx
adox
vcvttpd2dqx
vcvtpd2dqx
sarx
shrx
rorx
vcvtpd2psx
movsx
movzx
jecxz
jcxz
jrcxz
fcmovnb
st(0), 
fcmovb
st(0), 
fcmovnbe
st(0), 
fcmovbe
st(0), 
fcmovne
st(0), 
fcmove
st(0), 
fcmovnu
st(0), 
fcmovu
st(0), 
al, 
scasb
al, 
lodsb
al, 
al, 
al, 
al, 
al, 
al, 
al, 
al, 
movabs
al, 
test
al, 
al, 
ax, 
ax, 
ax, 
ax, 
ax, 
xchg
ax, 
ax, 
ax, 
ax, 
movabs
ax, 
test
ax, 
ax, 
scasw
ax, 
lodsw
ax, 
eax, 
eax, 
eax, 
eax, 
eax, 
scasd
eax, 
lodsd
eax, 
xchg
eax, 
eax, 
eax, 
eax, 
movabs
eax, 
test
eax, 
eax, 
rax, 
rax, 
rax, 
rax, 
rax, 
xchg
rax, 
rax, 
scasq
rax, 
lodsq
rax, 
rax, 
movabs
rax, 
test
rax, 
outsb
dx, 
outsd
dx, 
outsw
dx, 
#VAARG_64 
#eh_return, addr: 
#SEH_SaveXMM 
#VASTART_SAVE_XMM_REGS 
#SEH_StackAlloc 
#SEH_PushFrame 
#SEH_SetFrame 
#SEH_SaveReg 
#SEH_PushReg 
#CMOV_GR32* PSEUDO!
#CMOV_GR16* PSEUDO!
#CMOV_RFP80 PSEUDO!
#CMOV_V4F32 PSEUDO!
#CMOV_V16F32 PSEUDO!
#CMOV_V8F32 PSEUDO!
#CMOV_RFP32 PSEUDO!
#CMOV_FR32 PSEUDO!
#CMOV_V2F64 PSEUDO!
#CMOV_V4F64 PSEUDO!
#CMOV_V8F64 PSEUDO!
#CMOV_V2I64 PSEUDO!
#CMOV_V4I64 PSEUDO!
#CMOV_V8I64 PSEUDO!
#CMOV_RFP64 PSEUDO!
#CMOV_FR64 PSEUDO!
#CMOV_GR8 PSEUDO!
#ACQUIRE_MOV PSEUDO!
#RELEASE_MOV PSEUDO!
xsha1
fld1
fprem1
f2xm1
fyl2xp1
#EH_SJLJ_LONGJMP32
#EH_SJLJ_SETJMP32
# TLSCall_32
# TLS_addr32
# TLS_base_addr32
fldlg2
fldln2
int3
#EH_SJLJ_LONGJMP64
#EH_SJLJ_SETJMP64
# TLSCall_64
# TLS_addr64
# TLS_base_addr64
rex64
data16
xsha256
LIFETIME_END
BUNDLE
DBG_VALUE
# XBEGIN
#ADJCALLSTACKDOWN
#ADJCALLSTACKUP
#MEMBARRIER
LIFETIME_START
ud2b
xcryptecb
xcryptcfb
xcryptofb
rep stosb
rep movsb
xlatb
clac
stac
xcryptcbc
rdpmc
vmfunc
rdtsc
pushfd
popfd
cpuid
xend
rep stosd
rep movsd
iretd
wbinvd
fldl2e
lfence
mfence
sfence
cwde
fscale
vmresume
repne
cdqe
xacquire
xstore
xrelease
pause
#SEH_Epilogue
#SEH_EndPrologue
leave
vmxoff
lahf
sahf
pushf
popf
retf
vmlaunch
clgi
stgi
fldpi
# win32 fptoui
lock
dx, al
pushal
popal
vmmcall
vmcall
syscall
vzeroall
montmul
fxam
fprem
fpatan
fptan
fsin
# dynamic stack allocation
into
rdtscp
vpcmp
vcmp
fnop
fcompp
fucompp
fdecstp
fincstp
pushfq
popfq
retfq
rep stosq
rep movsq
iretq
vzeroupper
sysenter
monitor
rdmsr
wrmsr
xcryptctr
fabs
push
push
push
push
push
swapgs
fchs
# variable sized alloca for segmented stacks
encls
femms
fcos
fsincos
push
clts
fldl2t
fxtract
iret
sysret
mwait
fninit
sysexit
frndint
fsqrt
xtest
ftst
enclu
xgetbv
xsetbv
pushaw
popaw
rep stosw
rep movsw
fyl2x
fnstsw
dx, ax
vmload
vmsave
vmrun
skinit
dx, eax
vmload
vmsave
vmrun
invlpga
eax, ecx
invlpga
rax, ecx
al, dx
ax, dx
eax, dx
fnclex
fldz
vgatherpf0dpd 
vscatterpf0dpd 
vgatherpf1dpd 
vscatterpf1dpd 
vgatherpf0qpd 
vscatterpf0qpd 
vgatherpf1qpd 
vscatterpf1qpd 
vgatherpf0dps 
vscatterpf0dps 
vgatherpf1dps 
vscatterpf1dps 
vgatherpf0qps 
vscatterpf0qps 
vgatherpf1qps 
vscatterpf1qps 
st(0)
st(1)
st(2)
st(3)
st(4)
st(5)
st(6)
st(7)
xmm10
ymm10
zmm10
cr10
xmm20
ymm20
zmm20
xmm30
ymm30
zmm30
xmm0
ymm0
zmm0
xmm11
ymm11
zmm11
cr11
xmm21
ymm21
zmm21
xmm31
ymm31
zmm31
xmm1
ymm1
zmm1
xmm12
ymm12
zmm12
cr12
xmm22
ymm22
zmm22
xmm2
ymm2
zmm2
xmm13
ymm13
zmm13
cr13
xmm23
ymm23
zmm23
xmm3
ymm3
zmm3
xmm14
ymm14
zmm14
cr14
xmm24
ymm24
zmm24
xmm4
ymm4
zmm4
xmm15
ymm15
zmm15
cr15
xmm25
ymm25
zmm25
xmm5
ymm5
zmm5
xmm16
ymm16
zmm16
xmm26
ymm26
zmm26
xmm6
ymm6
zmm6
xmm17
ymm17
zmm17
xmm27
ymm27
zmm27
xmm7
ymm7
zmm7
xmm18
ymm18
zmm18
xmm28
ymm28
zmm28
xmm8
ymm8
zmm8
xmm19
ymm19
zmm19
xmm29
ymm29
zmm29
xmm9
ymm9
zmm9
r10b
r11b
r12b
r13b
r14b
r15b
r10d
r11d
r12d
r13d
r14d
r15d
flags
r10w
r11w
r12w
r13w
r14w
r15w
fpsw
N4llvm19X86IntelInstPrinterE
N12_GLOBAL__N_115ELFObjectWriterE
N4llvm12MCAsmBackendE
N4llvm9MCAsmInfoE
N4llvm13MCAsmInfoCOFFE
N4llvm18MCAsmInfoMicrosoftE
N4llvm16MCAsmInfoGNUCOFFE
N4llvm15MCAsmInfoDarwinE
N4llvm12MCAsmInfoELFE
UXbjt|
---*
6=N12_GLOBAL__N_113MCAsmStreamerE
N4llvm14format_object1IhEE
N4llvm17MCEncodedFragmentE
N4llvm10MCFragmentE
N4llvm10ilist_nodeINS_10MCFragmentEEE
N4llvm15ilist_half_nodeINS_10MCFragmentEEE
N4llvm27MCEncodedFragmentWithFixupsE
N4llvm14MCDataFragmentE
N4llvm28MCCompactEncodedInstFragmentE
N4llvm19MCRelaxableFragmentE
N4llvm15MCAlignFragmentE
N4llvm14MCFillFragmentE
N4llvm13MCOrgFragmentE
N4llvm13MCLEBFragmentE
N4llvm23MCDwarfLineAddrFragmentE
N4llvm24MCDwarfCallFrameFragmentE
N4llvm13MCCodeEmitterE
/uuu
$LLL
-b4>h
N4llvm23MCELFObjectTargetWriterE
17)B)LkRXk[
N4llvm13MCELFStreamerE
=EMV^gpy
'-F`
N4llvm12MCTargetExprE
N4llvm6MCExprE
!.9N4llvm13MCInstPrinterE
N4llvm15MCInstrAnalysisE
JJJJJJJJ&JIJ;J
C,/J
JF38N12_GLOBAL__N_115MCMachOStreamerE
N4llvm24MCMachObjectTargetWriterE
N12_GLOBAL__N_114MCNullStreamerE
N4llvm16MCObjectStreamerE
N4llvm14MCObjectWriterE
N4llvm9MCSectionE
%/9CMN4llvm13MCSectionCOFFE
!)4N4llvm12MCSectionELFE
N4llvm14MCSectionMachOE
N4llvm16MCTargetStreamerE
N4llvm10MCStreamerE
N4llvm12MCSymbolizerE
N4llvm7Win64EH13UnwindEmitterE
N4llvm5WinEH13UnwindEmitterE
djqN4llvm16MachObjectWriterE
ZNK4llvm14MCLOHDirective11getEmitSizeERKNS_16MachObjectWriterERKNS_11MCAsmLayoutEE20raw_counting_ostream
 -UU
>NEN4llvm14format_object3IjPKcS2_EE
N4llvm27MCWinCOFFObjectTargetWriterE
N12_GLOBAL__N_119WinCOFFObjectWriterE
N4llvm17MCWinCOFFStreamerE
*18FTbpx
)4?J
19AI
/;GS
(2<FZP
 ,\\
EULN4llvm24AssemblyAnnotationWriterE
N4llvm14AssemblyWriterE
#'+/37;?CGKOS
W[_cgkosw{
N4llvm13AttributeImplE
N4llvm14FoldingSetImpl4NodeE
N4llvm17EnumAttributeImplE
N4llvm16IntAttributeImplE
N4llvm19StringAttributeImplE
N4llvm10BasicBlockE
N4llvm10ilist_nodeINS_10BasicBlockEEE
N4llvm15ilist_half_nodeINS_10BasicBlockEEE
YQWk
w^wcwwhwwm
 &*.
)?S^z
2ddd,d
#555
55L555_u
$0<HT`lx
"///
//V///q~
N4llvm8ConstantE
N4llvm21ConstantAggregateZeroE
N4llvm19ConstantPointerNullE
N4llvm22ConstantDataSequentialE
N4llvm17ConstantDataArrayE
N4llvm18ConstantDataVectorE
N4llvm12ConstantExprE
N4llvm10UndefValueE
N4llvm11ConstantIntE
N4llvm10ConstantFPE
N4llvm13ConstantArrayE
N4llvm14ConstantStructE
N4llvm14ConstantVectorE
N4llvm12BlockAddressE
On<X
'i4i
N4llvm14DataLayoutPassE
jjjjjjjjjj
jjjj
jjjjjj
jjjjjj
jjjjjjjjjj
jjjjjjjjjj
llvm.dbgN4llvm10DebugRecVHE
N4llvm23DiagnosticInfoInlineAsmE
N4llvm14DiagnosticInfoE
N4llvm23DiagnosticInfoStackSizeE
N4llvm34DiagnosticInfoDebugMetadataVersionE
N4llvm27DiagnosticInfoSampleProfileE
N4llvm30DiagnosticInfoOptimizationBaseE
N4llvm32DiagnosticInfoOptimizationRemarkE
N4llvm38DiagnosticInfoOptimizationRemarkMissedE
N4llvm40DiagnosticInfoOptimizationRemarkAnalysisE
N4llvm33DiagnosticInfoOptimizationFailureE
N4llvm2cl3optIN12_GLOBAL__N_114PassRemarksOptELb1ENS0_6parserINSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEEEEEE
N4llvm2cl11opt_storageIN12_GLOBAL__N_114PassRemarksOptELb1ELb1EEE
N4llvm2cl11OptionValueIN12_GLOBAL__N_114PassRemarksOptEEE
N4llvm2cl15OptionValueBaseIN12_GLOBAL__N_114PassRemarksOptELb1EEE
NSt3__120__shared_ptr_emplaceIN4llvm5RegexENS_9allocatorIS2_EEEE
N4llvm27DiagnosticPrinterRawOStreamE
N4llvm17DiagnosticPrinterE
N4llvm24DominatorTreeWrapperPassE
N4llvm17DominatorTreeBaseINS_10BasicBlockEEE
N4llvm13DominatorBaseINS_10BasicBlockEEE
8Qcs
-I.p.5/
bHbHbHbHbHbHbH
 bHbHbHbH
+Z+Z+Z+Z+Z+Z+Z+Z+Z+Z
3+Z+Z
sMsMsMsMsMA
sMsM,
sMsMsMsMsM]
m\mg
>9>9>9>9
>9>9
9HUH
e5e5e5e5e5e5e5e5e5e5e5e5t
e5e5e5e5e5z
q"q"q"q"q"q"q"
q"q"5
q"q"K
KKKKe
KKn
KKKKKKKKKKK}
[O`$[OS$[Ol$[O[O
)x0x
$(,<k
<k<k<k<k<k<k<k<k<k<k<k<koL<k<k<k<k<krL
k!v!:
"xaxaxaxaxaxaxaxaxa
N+N'bfbfbfbfbf
bfbfbfbfbfbf
bfbfbfbfbfbfbf!
\'pfpfpfpfpf
pfpfpfpfpfpf&
pfpfpfpfpfpfpf,
"Q;6"Q"QN6"Qa6
wQ^6wQwQq6wQ
3#K#K
yo9Jyoyo
JyokJ
b&D&|&
1~1S
,'}'}'}'}'}'}'}'}'}
&7g7g7g7g7g7g7g7g7g
"#[#[#[#[#[#[#[#[#[
(YlYlYlYlYlYlYlYlYl
(tltltltltltltltltl")
#IZIZIZIZIZIZIZIZIZ
#n_n_n_n_n_n_n_n_n_
e/8/
#C^C^C^C^C^C^C^C^C^
3n
%WGk
?+Sj
SjSjSj
<SjSjSjSjSjSjSjSjSjSjSjSjSjSj
<LQ`
"8LL
zVzVzVG
zVzVzVzVzVzVzVzVzVzVzVzVzVzVM
B+c?
/2Cq
CqCqCq
'CqCqCqCqCqCqCqCqCqCqCqCqCqCq
'VVj
1q1q1qs+1q1q1q1q1q1q1q1q1q1q1q1q1q1q
+acu
"VLj
NH7'Kf
KfKfKf
#KfKfKfKfKfKfKfKfKfKfKfKfKfKf##
'f'f'f >'f'f'f'f'f'f'f'f'f'f'f'f'f'f&>
_ ; 
L#`b
`b`b`b9%`b`b`b`b`b`b`b`b`b`b`b`b`b`bB%
-b@2Tq
TqTqTq
+TqTqTqTqTqTqTqTqTqTqTqTqTqTq
+/dC
p^p^p^@!p^p^p^p^p^p^p^p^p^p^p^p^p^p^L!m
^W!QJe
x[DPdd
+x+x+x
.+x+x+x+x+x+x+x+x+x+x+x+x+x+x
AHJ(^g
^g^g^gT"^g^g^g^g^g^g^g^g^g^g^g^g^g^g`"
D[(og
ogogogb"ogogogogogogogogogogogogogogn"
8(Lg
LgLgLg
&LgLgLgLgLgLgLgLgLgLgLgLgLgLg
&=JQ
y.}#
HR2fq
fqfqfq
'fqfqfqfqfqfqfqfqfqfqfqfqfqfq
:!-5l
5l5l5l
(5l5l5l5l5l5l5l5l5l5l5l5l5l5l
!~!r
h"x"r
!"r
'e'e'e
"'e'e'e'e'e'e'e'e'e'e'e'e'e'e
"'M;
-9aM
i$s$
(BMV
E9= |
 | | |
( | | | | | | | | | | | | | |)XMl
'HR\
kEnE
gug1
8C8(
NOlO
auauauau
auau
w,p,
O.B{V
)/Y/
.!{5
k%w%9%r
*8FT]j}
2$P$B$
 M$$
@V/
}'vQ
(\4G
7jLj
GxRx
\x1b
"=+=4=
;OHOUO
^OkO
#W
2(F(
/MGM]M
FJ\J
3VTV
,z<z7
ov~v
1XSX
$w6w
0F:F
pTzT
[%h%
E-S-b
$*@*
L4g4
_Qu4
CWXW
R`n`
E7]7
a>aYa(a
[;k;{;
6'656
a6n6
}6N6
Z:n:
$:Sj
JJJJJJJ
JJJJJJJJJJJ
JJJJ@
/,,/{
//,/
JJJJJJJ
JJJJJJJJJJJ
JJJJ///
//////
///////
++++F
++++F
...D
,,,,YYYY;;;;JJJJ,,,
,,,,YYYY;;;;JJJJ,,,
,,,,,,,
,,,,,,,
,,,,,,,
YYJJ;;,,JJ;;YYJJ;;,,JJ;;U99
YYJJ;;,,JJ;;YYJJ;;,,JJ;;U99
zzzz
zzzz
;;;;JJJJ;;;;JJJJUD
,,,,YYYY;;;;JJJJU99
;;;;JJJJ;;;;JJJJUD
,,,,YYYY;;;;JJJJU
,,,,YYYY;;;;JJJJ@
PD33PD33PD33PDDDPDDDPDDDPD33PD33PD33P4
PD33PD33PD33PDDDPDDDPDDDPD33PD33PD33PD4
PD33PDDDPD33P4
PD33PDDDPD33PD4
zzzzzzz
;;;;;;;;zzz
;;;;J,,JJ;;JJ;;JJ,,JJ;;JJ;;J;,,
zzzzJJJ,;JJ
JJJJJJJ
----<<<
 K.D0L.D [.D [.D3
GCLLL
|L|CK
KBL|LCL|LCK
KBL|LCL|LC
|L|CL.L
|<|C<|
B|||C/
B|||C/
 K.D0L.D [.D [.D
B|||C
{{{{
zzzz{{{{
zzzz
zzzz{{{{
zzzz{{{{
zzzz
zzzz{{{{
zzzz{{{{
zzzz
zzzz{{{{
zzzz 
JJJJ
zzzz
,,,,;;;
B,$'
YYY"
YYYYZZZZ,,,
JJJJYJJYYJJYJJJJYJJYYJJYJ;;J;;;;J;;J;;;;J;;JJ;;J,,,,,,,


N4llvm8ArgumentE
N4llvm10ilist_nodeINS_8ArgumentEEE
N4llvm15ilist_half_nodeINS_8ArgumentEEE
N4llvm8FunctionE
N4llvm10ilist_nodeINS_8FunctionEEE
N4llvm15ilist_half_nodeINS_8FunctionEEE
N4llvm14format_object2IjjEE
N4llvm14format_object2IdjEE
N4llvm14GVMaterializerE
N4llvm11GlobalValueE
N4llvm12GlobalObjectE
N4llvm14GlobalVariableE
N4llvm10ilist_nodeINS_14GlobalVariableEEE
N4llvm15ilist_half_nodeINS_14GlobalVariableEEE
N4llvm11GlobalAliasE
N4llvm10ilist_nodeINS_11GlobalAliasEEE
N4llvm15ilist_half_nodeINS_11GlobalAliasEEE
N12_GLOBAL__N_122PrintModulePassWrapperE
N12_GLOBAL__N_124PrintFunctionPassWrapperE
N12_GLOBAL__N_119PrintBasicBlockPassE
EEE=N4llvm9InlineAsmE
N4llvm11InstructionE
N4llvm10ilist_nodeINS_11InstructionEEE
N4llvm15ilist_half_nodeINS_11InstructionEEE
 )3Tcjm
''''''''''''''''
''''''''''''''''
/DYp
<Z(E
ccccccccc
N4llvm14TerminatorInstE
N4llvm16UnaryInstructionE
N4llvm8CastInstE
N4llvm17GetElementPtrInstE
N4llvm7CmpInstE
N4llvm8ICmpInstE
N4llvm8FCmpInstE
N4llvm8CallInstE
N4llvm10SelectInstE
N4llvm9VAArgInstE
N4llvm16ExtractValueInstE
N4llvm15InsertValueInstE
N4llvm7PHINodeE
N4llvm10InvokeInstE
N4llvm14LandingPadInstE
N4llvm10ReturnInstE
N4llvm10ResumeInstE
N4llvm15UnreachableInstE
N4llvm10BranchInstE
N4llvm10AllocaInstE
N4llvm8LoadInstE
N4llvm9StoreInstE
N4llvm17AtomicCmpXchgInstE
N4llvm13AtomicRMWInstE
N4llvm9FenceInstE
N4llvm18ExtractElementInstE
N4llvm17InsertElementInstE
N4llvm17ShuffleVectorInstE
N4llvm14BinaryOperatorE
N4llvm9TruncInstE
N4llvm8ZExtInstE
N4llvm8SExtInstE
N4llvm11FPTruncInstE
N4llvm9FPExtInstE
N4llvm10UIToFPInstE
N4llvm10SIToFPInstE
N4llvm10FPToUIInstE
N4llvm10FPToSIInstE
N4llvm12PtrToIntInstE
N4llvm12IntToPtrInstE
N4llvm11BitCastInstE
N4llvm17AddrSpaceCastInstE
N4llvm10SwitchInstE
N4llvm14IndirectBrInstE
N4llvm17UnaryConstantExprE
N4llvm18BinaryConstantExprE
N4llvm18SelectConstantExprE
N4llvm26ExtractElementConstantExprE
N4llvm25InsertElementConstantExprE
N4llvm25ShuffleVectorConstantExprE
N4llvm24ExtractValueConstantExprE
N4llvm23InsertValueConstantExprE
N4llvm19CompareConstantExprE
N4llvm25GetElementPtrConstantExprE
N4llvm10FoldingSetINS_13AttributeImplEEE
N4llvm10FoldingSetINS_16AttributeSetImplEEE
N4llvm10FoldingSetINS_16AttributeSetNodeEEE
N4llvm10FoldingSetINS_6MDNodeEEE
*5N4llvm27PassManagerPrettyStackEntryE
N4llvm13PMDataManagerE
N4llvm13FPPassManagerE
N4llvm6legacy23FunctionPassManagerImplE
N4llvm17PMTopLevelManagerE
N4llvm6legacy15PassManagerImplE
N4llvm6legacy15PassManagerBaseE
N4llvm6legacy19FunctionPassManagerE
N4llvm6legacy11PassManagerE
N4llvm2cl3optIN12_GLOBAL__N_114PassDebugLevelELb0ENS0_6parserIS3_EEEE
N4llvm2cl11opt_storageIN12_GLOBAL__N_114PassDebugLevelELb0ELb0EEE
N4llvm2cl6parserIN12_GLOBAL__N_114PassDebugLevelEEE
N4llvm2cl11OptionValueIN12_GLOBAL__N_114PassDebugLevelEEE
N4llvm2cl15OptionValueBaseIN12_GLOBAL__N_114PassDebugLevelELb0EEE
N4llvm2cl15OptionValueCopyIN12_GLOBAL__N_114PassDebugLevelEEE
N4llvm2cl4listIPKNS_8PassInfoEbNS_14PassNameParserEEE
N4llvm2cl12list_storageIPKNS_8PassInfoEbEE
NSt3__16vectorIPKN4llvm8PassInfoENS_9allocatorIS4_EEEE
NSt3__113__vector_baseIPKN4llvm8PassInfoENS_9allocatorIS4_EEEE
N12_GLOBAL__N_113MPPassManagerE
N12_GLOBAL__N_113BBPassManagerE
<Z(E
N4llvm8MDStringE
N4llvm13MDNodeOperandE
N4llvm6MDNodeE
N4llvm4PassE
N4llvm10ModulePassE
N4llvm13ImmutablePassE
N4llvm12FunctionPassE
N4llvm14BasicBlockPassE
N4llvm14PassNameParserE
N4llvm24PassRegistrationListenerE
N4llvm2cl6parserIPKNS_8PassInfoEEE
N12_GLOBAL__N_116GetCFGOnlyPassesE
N4llvm2cl11OptionValueIPKNS_8PassInfoEEE
N4llvm2cl15OptionValueBaseIPKNS_8PassInfoELb0EEE
N4llvm2cl15OptionValueCopyIPKNS_8PassInfoEEE


N4llvm4UserE
N4llvm8OperatorE
<Z(E
N4llvm10CallbackVHE
N4llvm15ValueHandleBaseE
N4llvm5ValueE
"%(+.147:=@CFINQTWZ]behknqtwz}
$0Y<BN
+-+++/+++++++12
7Q777S7777777U777777777777777W>
CeCCCgCCCCCCCiCCCCCCCCCCCCCCCkCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCmJO
OOOcOOOOOOOeOOOOOOOOOOOOOOOg
%%%"
*2:BJR
N12_GLOBAL__N_118VerifierLegacyPassE
N12_GLOBAL__N_127DebugInfoVerifierLegacyPassE
"""")
&6GJ
 "$&(*,.02468:<\>\@\B\\\D\F\\\\\\\\\\\\\\\\\\\HJLNPN4llvm20circular_raw_ostreamE
.5N4llvm2cl6OptionE
N4llvm2cl18GenericOptionValueE
N4llvm2cl11OptionValueINS0_13boolOrDefaultEEE
N4llvm2cl15OptionValueCopyINS0_13boolOrDefaultEEE
N4llvm2cl11OptionValueINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE
N4llvm2cl19generic_parser_baseE
N4llvm2cl17basic_parser_implE
N4llvm2cl11StringSaverE
N4llvm2cl12basic_parserIbEE
N4llvm2cl12basic_parserINS0_13boolOrDefaultEEE
N4llvm2cl12basic_parserIiEE
N4llvm2cl12basic_parserIjEE
N4llvm2cl12basic_parserIyEE
N4llvm2cl12basic_parserIdEE
N4llvm2cl12basic_parserIfEE
N4llvm2cl12basic_parserINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE
N4llvm2cl12basic_parserIcEE
N4llvm2cl3optIjLb0ENS0_6parserIjEEEE
N4llvm2cl11opt_storageIjLb0ELb0EEE
N4llvm2cl3optIiLb0ENS0_6parserIiEEEE
N4llvm2cl11opt_storageIiLb0ELb0EEE
N4llvm2cl3optINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb0ENS0_6parserIS8_EEEE
N4llvm2cl11opt_storageINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb0ELb1EEE
NSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__121__basic_string_commonILb1EEE
N4llvm2cl3optIcLb0ENS0_6parserIcEEEE
N4llvm2cl11opt_storageIcLb0ELb0EEE
N4llvm2cl3optIbLb0ENS0_6parserIbEEEE
N4llvm2cl11opt_storageIbLb0ELb0EEE
N4llvm2cl6parserIbEE
N4llvm2cl6parserINS0_13boolOrDefaultEEE
N4llvm2cl6parserIiEE
N4llvm2cl6parserIjEE
N4llvm2cl6parserIyEE
N4llvm2cl6parserIdEE
N4llvm2cl6parserIfEE
N4llvm2cl6parserINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE
N4llvm2cl6parserIcEE
N4llvm2cl5aliasE
N12_GLOBAL__N_111StrDupSaverE
N12_GLOBAL__N_111HelpPrinterE
N12_GLOBAL__N_122CategorizedHelpPrinterE
N4llvm2cl11OptionValueIcEE
N4llvm2cl15OptionValueBaseIcLb0EEE
N4llvm2cl15OptionValueCopyIcEE
N4llvm2cl3optIN12_GLOBAL__N_111HelpPrinterELb1ENS0_6parserIbEEEE
N4llvm2cl11opt_storageIN12_GLOBAL__N_111HelpPrinterELb1ELb1EEE
N4llvm2cl11OptionValueIN12_GLOBAL__N_111HelpPrinterEEE
N4llvm2cl15OptionValueBaseIN12_GLOBAL__N_111HelpPrinterELb1EEE
N4llvm2cl3optIN12_GLOBAL__N_118HelpPrinterWrapperELb1ENS0_6parserIbEEEE
N4llvm2cl11opt_storageIN12_GLOBAL__N_118HelpPrinterWrapperELb1ELb1EEE
N4llvm2cl11OptionValueIN12_GLOBAL__N_118HelpPrinterWrapperEEE
N4llvm2cl15OptionValueBaseIN12_GLOBAL__N_118HelpPrinterWrapperELb1EEE
N4llvm2cl3optIN12_GLOBAL__N_114VersionPrinterELb1ENS0_6parserIbEEEE
N4llvm2cl11opt_storageIN12_GLOBAL__N_114VersionPrinterELb1ELb1EEE
N4llvm2cl11OptionValueIN12_GLOBAL__N_114VersionPrinterEEE
N4llvm2cl15OptionValueBaseIN12_GLOBAL__N_114VersionPrinterELb1EEE
N4llvm27CrashRecoveryContextCleanupE
N4llvm3sys11ThreadLocalIKN12_GLOBAL__N_124CrashRecoveryContextImplEEE
N4llvm3sys11ThreadLocalIKNS_27CrashRecoveryContextCleanupEEE
>,>>>
?,???
N4llvm12DataStreamerE
N12_GLOBAL__N_116DataFileStreamerE
N4llvm14DeltaAlgorithmE
N4llvm17DAGDeltaAlgorithmE
N12_GLOBAL__N_120DeltaActiveSetHelperE
<?B((E(HK(N(QTWZ](`cfilorux{~
(((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((((
 #&),/258;>ADGJMP
"%(+.1
"%(+.147:=@CFILORU
!$'*-0369<?BBBBBDGBBBBBBBBBBBBBBBJMBBBBBBBBBBBBBBBBPSBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBVBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBYN4llvm14FoldingSetImplE
N4llvm21formatted_raw_ostreamE
N4llvm18RefCountedBaseVPTRE
N4llvm12MemoryBufferE
N12_GLOBAL__N_115MemoryBufferMemE
N12_GLOBAL__N_120MemoryBufferMMapFileE
N4llvm12MemoryObjectE
N4llvm22PrettyStackTraceStringE
N4llvm21PrettyStackTraceEntryE
N4llvm23PrettyStackTraceProgramE
N4llvm3sys11ThreadLocalIKNS_21PrettyStackTraceEntryEEE
N4llvm2cl3optIyLb0ENS0_6parserIyEEEE
N4llvm2cl11opt_storageIyLb0ELb0EEE
N4llvm2cl11OptionValueIyEE
N4llvm2cl15OptionValueBaseIyLb0EEE
N4llvm2cl15OptionValueCopyIyEE
()^$|*+?.[]\{}
N4llvm14format_object5IjjjPKcS2_EE
N4llvm22StreamableMemoryObjectE
N4llvm21StreamingMemoryObjectE
N12_GLOBAL__N_115RawMemoryObjectE
N4llvm21StringRefMemoryObjectE
N4llvm2cl3optINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb1ENS0_6parserIS8_EEEE
N4llvm2cl11opt_storageINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEELb1ELb1EEE
N4llvm14format_object2IddEE
#@F)L/R
'3<Ebmx
_ir{
 #'+/
!!!!!!!!!!!!!!!!!!
uQuuQQuuuu
unN4llvm4yaml4NodeE
N4llvm4yaml8NullNodeE
N4llvm4yaml10ScalarNodeE
N4llvm4yaml12KeyValueNodeE
N4llvm4yaml11MappingNodeE
N4llvm4yaml12SequenceNodeE
N4llvm4yaml9AliasNodeE
N4llvm4yaml5Input5HNodeE
N4llvm4yaml5Input10EmptyHNodeE
N4llvm4yaml5Input11ScalarHNodeE
N4llvm4yaml5Input8MapHNodeE
N4llvm4yaml5Input13SequenceHNodeE
N4llvm4yaml2IOE
N4llvm4yaml5InputE
N4llvm4yaml6OutputE
N4llvm14format_object1ItEE
N4llvm14raw_os_ostreamE
\YVS
                                                                                
N4llvm11raw_ostreamE
N4llvm18raw_string_ostreamE
N4llvm16raw_null_ostreamE
N4llvm18format_object_baseE
N4llvm14raw_fd_ostreamE
N4llvm19raw_svector_ostreamE
BHTae
BHTae
[0;30m
[0;31m
[0;32m
[0;33m
[0;34m
[0;35m
[0;36m
[0;37m
[0;1;30m
[0;1;31m
[0;1;32m
[0;1;33m
[0;1;34m
[0;1;35m
[0;1;36m
[0;1;37m
[0;40m
[0;41m
[0;42m
[0;43m
[0;44m
[0;45m
[0;46m
[0;47m
[0;1;40m
[0;1;41m
[0;1;42m
[0;1;43m
[0;1;44m
[0;1;45m
[0;1;46m
[0;1;47m
N4llvm3sys7processE
N4llvm3sys12self_processE
N4llvm3sys15ThreadLocalImplE
N12_GLOBAL__N_116WriteBitcodePassE
 ,\\
!@#
!@!
!@ 
!@"
x^@@
x^@@
8^@@
8^@@
8J4 
8J4 
xJ4 
xJ@@
xJP@
8J@@
8JP@
8Jp@
8J@@
xJ@@
8JP@
xJP@
8Jp@
xJp@
8D4 
8D4 
xD4 
xD@@
xDP@
8D@@
8DP@
8Dp@
8D@@
xD@@
8DP@
xDP@
8Dp@
xDp@
<_p@
<_@@
<1@@
<1P@
<1p@
<1@@
<1P@
<1p@
<q@@
<qP@
<qp@
<q@@
<qP@
<qp@
xA@@
xA@@
x@@@
x@@@
<@@@
<@@@
<Q@@
<QP@
<Qp@
<Q@@
<QP@
<Qp@
<S@@
<S@@
xB@@
xB@@
<s@@
<s@@
<3@@
<3@@
0 2P
P#vY
0  P
<premain>
