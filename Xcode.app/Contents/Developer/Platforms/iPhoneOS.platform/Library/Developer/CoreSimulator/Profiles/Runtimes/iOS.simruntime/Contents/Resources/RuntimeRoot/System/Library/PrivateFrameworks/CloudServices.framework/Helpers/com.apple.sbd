@(#)PROGRAM:com.apple.sbd  PROJECT:CloudServices-384.100.12
x@333333
com.apple.sbd.passcode_request
superclass
description
T@"NSString",R,C
dsid
T@"NSString",R,C,N
recordLabel
recoveryPassphrase
escrowRecord
T@"NSDictionary",R,&,N
T@"NSString",C,N,V_recordLabel
T@"NSDictionary",&,N,V_escrowRecord
T@"SecureBackup",R,&,N,V_sb
activityLabel
activityUUID
%@: %@
unknown activity
v16@?0@"NSError"8
no error
v24@?0@"NSDictionary"8@"NSError"16
v8@?0
-[SecureBackup getAccountInfoWithError:]
-[SecureBackup updateMetadataWithError:]
-[SecureBackup enableWithError:]
-[SecureBackup recoverWithError:]
-[SecureBackup disableWithError:]
-[SecureBackup startSMSChallengeWithError:]
-[SecureBackup changeSMSTargetWithError:]
-[SecureBackup backupWithInfo:]
-[SecureBackup prepareHSA2EscrowRecordContents:reply:]
+[SecureBackup daemonPasscodeRequestOpinion:]
v20@?0I8@"NSError"12
-[SecureBackup beginHSA2PasscodeRequest:uuid:error:]
v24@?0@"SecureBackupBeginPasscodeRequestResults"8@"NSError"16
v40@?0@"NSDictionary"8@"NSData"16@"NSData"24@"NSError"32
supportsSecureCoding
TB,R
T@"SESWrapper",&,N,V_ses
appleID
T@"NSString",C,N,V_appleID
authToken
T@"NSString",C,N,V_authToken
backOffDate
T@"NSDate",&,N,V_backOffDate
certData
T@"NSData",&,N,V_certData
countryDialCode
T@"NSString",C,N,V_countryDialCode
countryCode
T@"NSString",C,N,V_countryCode
deleteAll
TB,N,V_deleteAll
T@"NSString",C,N,V_dsid
emcsCred
T@"NSString",C,N,V_emcsCred
emcsDict
T@"NSDictionary",&,N,V_emcsDict
emcsMode
TB,N,V_emcsMode
encodedMetadata
T@"NSString",C,N,V_encodedMetadata
escrowProxyURL
T@"NSString",C,N,V_escrowProxyURL
fmipRecovery
TB,N,V_fmipRecovery
fmipUUID
T@"NSString",C,N,V_fmipUUID
icdp
TB,N,V_icdp
iCloudEnv
T@"NSString",C,N,V_iCloudEnv
iCloudIdentityData
T@"NSData",&,N,V_iCloudIdentityData
iCloudPassword
T@"NSString",C,N,V_iCloudPassword
idmsData
T@"NSData",&,N,V_idmsData
idmsRecovery
TB,N,V_idmsRecovery
metadata
T@"NSDictionary",&,N,V_metadata
metadataHash
T@"NSDictionary",&,N,V_metadataHash
oldEMCSCred
T@"NSString",C,N,V_oldEMCSCred
passphrase
T@"NSString",C,N,V_passphrase
recoveryKey
T@"NSString",C,N,V_recoveryKey
smsTarget
T@"NSString",C,N,V_smsTarget
silent
TB,N,V_silent
stingray
TB,N,V_stingray
synchronize
TB,N,V_synchronize
useCachedPassphrase
TB,N,V_useCachedPassphrase
useRecoveryPET
TB,N,V_useRecoveryPET
usesMultipleiCSC
TB,N,V_usesMultipleiCSC
usesRandomPassphrase
TB,N,V_usesRandomPassphrase
usesRecoveryKey
TB,N,V_usesRecoveryKey
verificationToken
T@"NSString",C,N,V_verificationToken
queue
T@"NSObject<OS_dispatch_queue>",&,N,V_queue
error
T@"NSError",&,N,V_error
T@"NSString",C,N,V_activityLabel
T@"NSString",C,N,V_activityUUID
suppressServerFiltering
TB,N,V_suppressServerFiltering
hsa2CachedPrerecordUUID
T@"NSString",C,N,V_hsa2CachedPrerecordUUID
prerecord
T@"EscrowPrerecord",&,N,V_prerecord
<SBBPRR: %@ %@ %@ %@ %@>
iCloudEnvironment
escrowFederation
cert
T@"NSString",R,V_iCloudEnvironment
T@"NSString",R,V_escrowFederation
T@"NSData",R,V_cert
T@"NSString",R,V_dsid
uuid
T@"NSString",R,V_uuid
X-Apple-Request-UUID
version
status
message
errorMessage
errorCode
Tq,R,N
T@"NSString",R,N
clubCert
<%@: %p>{serial = %@, digest = %@, dsid = %@}
clubID
Tq,R,N,V_clubID
T@"NSData",R,N
phoneNumberToken
bypassToken
respBlob
srpData
fmipRecoveryData
recoveryData
T@"NSDictionary",R,N
smsChallengeLength
smsVerificationCodeLength
T@"NSNumber",R,N
metadataList
label
recordStatus
silentAttemptAllowed
remainingAttempts
SecureBackupRemainingAttempts
coolOffEnd
SecureBackupCoolOffEnd
recoveryStatus
SecureBackupRecoveryStatus
triggerUpdate
SecureBackupTriggerUpdate
accountInfo
T@"NSArray",R,N
smsTargetsInfo
countrySMSCodes
com.apple.SecureBackupDaemon
com.apple.SecureBackupDaemon.concurrent
0123456789ABCDEF
v40@?0r^v8{_NSRange=QQ}16^B32
%@ (%@)
v16@?0^{__OpaqueSOSPeerInfo=}8
recovery key (%@)
backup
sqlite3
INSERT OR IGNORE INTO items (hash, class, data) VALUES (?, ?, ?);
DELETE FROM items where hash = ?;
SELECT hash from items ORDER BY hash;
SELECT digest from keybag;
SELECT data from keybag;
SELECT hash, class, data from items;
-[SecureBackupSQLite sqliteExec:]
DROP TABLE items; DROP TABLE keybag;
INSERT INTO keybag (digest, recordID, data) VALUES (?, ?, ?);
pragma page_count
pragma freelist_count
pragma incremental_vacuum(%d)
TQ,R
T#,R
debugDescription
T@"NSData",R
keybagDigest
manifestHash
T^{sqlite3=},V_db
T@"NSURL",R,V_url
recordID
T@"NSString",C,V_recordID
com.apple.sbd
Unexpected item type for kSecBackupEventAdd
data
hash
class
Unexpected item type for kSecBackupEventRemove
v32@?0@"NSData"8@"NSString"16@"NSData"24
Unexpected item type for resetWithKeybag
com.apple.securebackup.record
com.apple.securebackup.keychain
BEGIN TRANSACTION;
keybag.plist
keybag
SAVEPOINT migrate_start;
manifest
KeychainV0-tomb
ROLLBACK TO migrate_start;
COMMIT TRANSACTION;
viewName
T@"NSString",R,C,V_viewName
T@"NSURL",R,C,V_url
T@"<SecureBackupDB>",R,V_db
T@"NSString",C,N,V_recordID
backupData
backupDict
pragma journal_mode = WAL;pragma auto_vacuum = incremental;CREATE TABLE IF NOT EXISTS items(hash BLOB PRIMARY KEY NOT NULL,class TEXT NOT NULL, data BLOB NOT NULL );CREATE TABLE IF NOT EXISTS keybag(digest BLOB PRIMARY KEY NOT NULL,recordID TEXT NOT NULL,data BLOB NOT NULL,timestamp DATETIME DEFAULT CURRENT_TIMESTAMP);
EscrowProxyErrorDomain
Escrow response not a dictionary
Retry-After
en_US_POSIX
EEE, dd MMM yyyy HH:mm:ss Z
retryAfterDate
responseDictionary
T@"NSDictionary",R,N,V_responseDictionary
httpResponse
T@"NSHTTPURLResponse",R,N,V_httpResponse
%@ %@
escrowBaseURL
escrowCertificate
duplicateEscrowCertificate
hasICloudEnvironment
TB,R,N
T@"NSString",&,N,V_iCloudEnvironment
hasEscrowBaseURL
T@"NSString",&,N,V_escrowBaseURL
hasDsid
T@"NSString",&,N,V_dsid
hasEscrowCertificate
T@"NSData",&,N,V_escrowCertificate
hasDuplicateEscrowCertificate
T@"NSData",&,N,V_duplicateEscrowCertificate
No valid user found
Missing base URL
%@.%@
transactionUUID
userActionLabel
%@:%@
Basic
X-MobileMe-Recovery-PET
X-MobileMe-AuthToken
POST
/escrowproxy/api/%@
T@"NSDictionary",R,N,V_escrowRecord
T@"NSString",C,N,V_metadataHash
protocol
T@"NSNumber",R,N,V_protocol
command
T@"NSString",R,C,N,V_command
T@"NSString",R,C,N,V_countryDialCode
T@"NSString",R,C,N,V_countryCode
phoneNumber
T@"NSString",R,C,N,V_phoneNumber
challengeCode
T@"NSString",R,C,N,V_challengeCode
T@"NSString",R,C,N,V_appleID
T@"NSString",R,C,N,V_iCloudPassword
T@"NSString",R,C,N,V_dsid
T@"NSString",R,C,N,V_authToken
T@"NSString",R,C,N,V_recordID
baseURL
T@"NSString",R,C,N,V_baseURL
T@"NSString",R,C,N,V_iCloudEnv
T@"NSString",R,C,N,V_recoveryPassphrase
TB,R,N,V_stingray
iCDP
TB,R,N,V_iCDP
silentAttempt
TB,R,N,V_silentAttempt
TB,R,N,V_useRecoveryPET
TB,R,N,V_fmipRecovery
blob
T@"NSData",&,N,V_blob
baseRootCertVersions
T@"NSArray",&,N,V_baseRootCertVersions
trustedRootCertVersions
T@"NSArray",&,N,V_trustedRootCertVersions
T@"NSString",C,N,V_bypassToken
Missing required parameters
/escrowproxy/api/get_club_cert
GETCLUB
requestDictionary
T@"NSDictionary",R,C,N
duplicate
TB,N,V_duplicate
ENROLL
countryISOCode
blobDigest
Missing DSID
SRP_INIT
smsChallengeCode
RECOVER
DELETE
UPDATE_RECORD
oldMetadata
newMetadata
/escrowproxy/api/update_blob
GENERATE_SMS_CHALLENGE
/escrowproxy/api/get_records
GETRECORDS
ALTER_SMS_TARGET
Missing parameters
GET_SMS_TARGETS
GET_COUNTRY_SMS_CODES
escrowProxyUrl
com.apple.security.keychainchanged
com.apple.securebackupd.access
com.apple.security.itembackup
com.apple.sbd.kvstorechange
com.apple.securebackup.enabled
com.apple.icdpbackup.enabled
com.apple.icdp.backup
DERBackup
com.apple.securebackup.timestamp
SecureBackupService
SecureBackupPublicKeybag
SecureBackupEscrowCert
BackupKeybag
BackupKeybagDigest
BackupBagPassword
BottledPeerEntropy
BackupVersion
EMCSBackup
EMCSBackupDict
com.apple.sbd.emcs
BackupUsesEscrow
SecureBackupMetadataTimestamp
-tomb
v32@?0@"NSString"8@"NSDictionary"16^B24
unknown
 not
v16@?0@"NSString"8
%@.%@-tomb
timestamp
%@-%@
Attempt to back up when backup not enabled
Escrow cert no longer trusted
com.apple.EscrowSecurityAlert.server
backupKeychainFully
v28@?0i8@"NSData"12@"NSDictionary"20
true
false
view
Notification
com.apple.notifyd.matching
attempt to enable backup with non-decimal digits in SMS target: %@
com.apple.sbd.connectionQueue
com.apple.sbd.backupQueue
com.apple.sbd.kvsQueue
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@?0^{os_state_hints_s=I*II}8
v16@?0@"NSObject<OS_xpc_object>"8
backup enabled
iCDP backup enabled
uses escrow
backup timestamp
keybag digest
creator
peerIDs
%@ (direct keybag)
backups
sbd KVS data
plist
application-identifier
CloudServices.handleNotification
iCloudIdentity
no keybag found in iCloudIdentity backup
iCloudIdentity not found in backup
no keybag found in for recovery key
-[SecureBackupDaemon getStingrayMetadataWithRequest:reply:]
Could not find stingray metadata
-[SecureBackupDaemon _getAccountInfoWithRequest:reply:]
kPCSMetadataiCDP
UNKNOWN
(no bottle ID)
KVS not available
KVS synchronizeWithCompletionHandler failed
731C3DF1-AB61-409D-9B4E-72CC478601CD
getAccountInfoWithRequest
error decoding request properties
-[SecureBackupDaemon _stashRecoveryDataWithRequest:reply:]
stashRecoveryDataWithRequest called without EMCS mode set?
stashRecoveryDataWithRequest
-[SecureBackupDaemon enableWithRequest:reply:]
v24@?0@"SecRecoveryKey"8@"NSError"16
setNewRecoveryKeyWithData() timed out
non-
attempted to store stingray identities, with invalid parameters: %@, %@nil iCloud password, %@nil iCloud identity data
Missing cached passphrase
attempted to enable backup, with invalid parameters: %@nil recovery password, %@, %@, %@nil iCloud password
could not create backup bag password
could not create backup keybag
SOSCCRegisterSingleRecoverySecret() failed
-[SecureBackupDaemon backupWithInfo:garbageCollect:reply:]
could not create plist from DER backup
v32@?0@8@16^B24
AccessoryPairing
AppleTV
BackupBagV0
ContinuityUnlock
CreditCards
HomeKit
NanoRegistry
OtherSyncable
Passwords
PCS-Backup
PCS-CloudKit
PCS-Escrow
PCS-FDE
PCS-Feldspar
PCS-iCloudDrive
PCS-iMessage
PCS-Maildrop
PCS-MasterKey
PCS-Notes
PCS-Photos
PCS-Sharing
WiFi
KeychainV0
%@-tomb
views
Can't find protected keychain; nothing to restore
could not create DER data from dict
Can't restore legacy backup with no keybag
_SecKeychainRestoreBackup() failed
before we saved timestamps
attempted restore with backup = %@nil, keybag = %@nil
backup data version does not match version in escrow
backup keybag digest does not match version in escrow
-[SecureBackupDaemon _recoverWithRequest:reply:]
silent attempt with missing cached recovery key
invalid/malformed recovery key
attempted to recover with empty passphrase
Recovery
silent attempt failed: no valid record found
v32@?0@"NSString"8@"NSDictionary"16Q24
recoverWithRequest
recoverRecordContentsWithRequest
-[SecureBackupDaemon recoverRecordContentsWithRequest:reply:]
-[SecureBackupDaemon deleteAlliCDPRecordsWithRequest:reply:]
-[SecureBackupDaemon backOffDateWithRequest:reply:]
-[SecureBackupDaemon setBackOffDateWithRequest:reply:]
have
missing
missing parameter: %@ metadataHash, %@ backOffDate, %@ encodedMetadata
encodedMetadata not base64
metadata could not be decoded
missing kSecureBackupClientMetadataKey
-[SecureBackupDaemon disableWithRequest:reply:]
disableWithRequest
com.apple.EscrowSecurityAlert.reset
-[SecureBackupDaemon updateMetadataWithRequest:reply:]
 metadata only supported for stingray records
attempted to update stingray metadata, with incomplete metadata hash
-[SecureBackupDaemon cachePassphraseWithRequest:reply:]
sbdCachedPassword
-[SecureBackupDaemon uncachePassphraseWithRequest:reply:]
-[SecureBackupDaemon cacheRecoveryKeyWithRequest:reply:]
sbdCachedRecoveryKey
-[SecureBackupDaemon uncacheRecoveryKeyWithRequest:reply:]
-[SecureBackupDaemon startSMSChallengeWithRequest:reply:]
-[SecureBackupDaemon getCountrySMSCodesWithRequest:reply:]
-[SecureBackupDaemon changeSMSTargetWithRequest:reply:]
attempted to change SMS target, but backup is not enabled
attempted to change SMS target, but not using escrow
attempted to change SMS target with invalid parameters
handled_notifications
ignored_notifications
events
beginHSA2PasscodeRequest:desirePasscodeImmediately:uuid
unable to set state for token
v24@?0@"StoredCertificate"8@"NSError"16
unable to set state (to 0) for token
Cannot prepare HSA2 Escrow record for a stingray request
Cannot prepare HSA2 Escrow record for a usesRandomPassphrase request
No outstanding escrow request
-[SecureBackupDaemon getCertificatesWithRequest:reply:]
cacheDirURL
T@"NSURL",&,N,V_cacheDirURL
cachedKeychainURL
T@"NSURL",R,&,N
cachedManifestURL
iCDPKeybag
T@"NSData",R,N,V_iCDPKeybag
connectionQueue
T@"NSObject<OS_dispatch_queue>",R,&,N,V_connectionQueue
backupQueue
T@"NSObject<OS_dispatch_queue>",R,&,N,V_backupQueue
kvsQueue
T@"NSObject<OS_dispatch_queue>",R,&,N,V_kvsQueue
needInitialBackup
TB,V_needInitialBackup
cachedRecordIDPassphrase
T@"NSString",C,N
cachedRecordID
T@"NSString",C,N,V_cachedRecordID
cachedPassphraseFD
Ti,V_cachedPassphraseFD
cachedRecordIDPassphraseFD
Ti,V_cachedRecordIDPassphraseFD
cachedRecoveryKeyFD
Ti,V_cachedRecoveryKeyFD
backupAllowed
TB,N
T@"NSString",C,N,V_iCloudEnvironment
pendingNotification
TB,V_pendingNotification
ignoredNotifications
T@"NSMutableDictionary",&,N,V_ignoredNotifications
handledNotifications
T@"NSMutableDictionary",&,N,V_handledNotifications
forceICDP
cachedPassphrase
EMCSBackupUUID
ForceICDP
com.apple.sbd.backupAllowed
retry-after date has not passed, throttling calls to escrow proxy until %@
application/x-apple-plist
Content-Type
Authorization
Certificate pinning error, please see rdar://problem/15631298
Certificate pinning error
-[LakituRequest performRequestWithHandler:]_block_invoke
v32@?0@"NSData"8@"NSURLResponse"16@"NSError"24
pinningFailure
TB,V_pinningFailure
urlRequest
T@"NSMutableURLRequest",R,N
responseClass
T#,R,N,V_responseClass
protocolVersion
urlString
T@"NSString",C,N,V_urlString
activity
T@"NSObject<OS_os_activity>",&,N,V_activity
escrowBlob
sosPeerID
sosBackupKeybagPassword
sosBackupKeybagDigest
bottleID
escrowedSPKI
passphraseType
hasEscrowBlob
T@"NSData",&,N,V_escrowBlob
hasSosPeerID
T@"NSString",&,N,V_sosPeerID
hasSosBackupKeybagPassword
T@"NSData",&,N,V_sosBackupKeybagPassword
hasSosBackupKeybagDigest
T@"NSData",&,N,V_sosBackupKeybagDigest
hasTimestamp
T@"NSString",&,N,V_timestamp
hasBottleID
T@"NSString",&,N,V_bottleID
hasEscrowedSPKI
T@"NSData",&,N,V_escrowedSPKI
hasPassphraseType
Ti,N,V_passphraseType
Unknown
FourDigitNumeric
SixDigitNumeric
Complex
(unknown: %i)
EscrowService
EscrowServiceBypassToken
Issuer Name
value
2.5.4.5
com.apple.sbd.recoverQueue
Error getting account info
v24@?0@"LakituResponse"8@"NSError"16
Can't get iCloud environment
Can't get base cert versions for root type %u in %@ environment
Can't get cert versions for root type %u in %@ environment
Unable to find certificate in keychain
Unable to deserialize certificate from keychain
Cached certificate for wrong DSID
Cached certificate for wrong iCloud Environment
Cached certificate for wrong escrow URL
Unauthorized
Unexpected error getting club cert
Unexpected error with encoded certificate
Mismatched user credential
Unexpected error with missing certificate
DSID missing or mismatched
Prerecord for wrong iCloud Environment
Prerecord for wrong escrow URL
Prerecord has no escrow blob
Unexpected error with certificate
Unknown error encoding record
no error pointer
Error authenticating
Error deserializing data
Error deleting record
Error updating metadata
SMS challenge error
Unable to change SMS Target
Unable to get target list
Unable to get country SMS code list
Missing certificate data
Cert is newer than trust policy
Cert does not match our trust policy
group
T@"NSObject<OS_dispatch_group>",&,N,V_group
recoverQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_recoverQueue
PROD
/AppleInternal/Library/CloudServices/iCloudDevCert.der
Error creating SecCertificateRef
Error copying escrow trust policy
Error copying root cert array
Invalid trust result
SecTrustEvaluate failed: %u
Unable to extract public key
errorDomain
CloudServicesSetConfirmedManifest
CloudServicesBackupWithChangesFull
CloudServicesBackupWithChangesIncremental
CloudServicesRestoreBackupName
CloudServicesRecoverRecordWithInfo
CloudServicesLakituResponse
CloudServicesAnalyticsiCDPKeybag
CloudServicesAnalyticsiCDPKeybagRecoveryKey
CloudServicesiCloudIdentity
CloudServicesAnalyticsRestoreKeychainWithBackupBag
CloudServicesAnalyticsRecoverRequest
CloudServicesRecoverEscrowWithRequest
CloudServicesSOSRestoreMetrics
CloudServicesAnalyticsGestalt
CloudServicesAnalytics
sbd_start
daemon
v16@?0^{__CFError=}8
v16@?0^{__CFString=}8
v28@?0i8^v12^v20
SecPasswordGenerate() failed
OSVersion
T@"NSString",&
T@"NSData",&
recordContents
T@"NSDictionary",&,V_recordContents
T@"NSString",&,V_sosPeerID
T@"NSData",&,V_sosBackupKeybagPassword
T@"NSData",&,V_sosBackupKeybagDigest
T@"NSString",&,V_timestamp
T@"NSString",&,V_bottleID
T@"NSData",&,V_escrowedSPKI
unable to fetch a prerecord
could not create escrow record contents
SerialNumber
BuildVersion
SOSCCCopyMyPeerWithNewDeviceRecoverySecret() failed
not possible
SOS peer ID mismatch
SOSPeerInfoGetPeerID() failed
SOS backup keybag digest mismatch
SOSPeerInfoCopyBackupKey() returned no backup public key for peer
OTClique initWithContextData returned w/o clique
OTClique no cliqueMemberIdentifier
SOSCopyPeerID() failed
copyBackupKeyForNewDeviceRecoverySecret() failed
v40@?0@"NSData"8@"NSString"16@"NSData"24@"NSError"32
SecureBackupPassphrase
SecureBackupSMSTarget
SecureBackupSynchronize
SecureBackupCountrySMSCodes
SecureBackupVerifcationToken
SecureBackupUseCachedPassphrase
SecureBackupHSA2CachedPrerecordUUID
SecureBackupMetadata
ClientMetadata
SecureBackupStingrayMetadataHash
SecureBackupStingrayMetadata
SecureBackupEscrowTimestamp
SecureBackupEscrowDate
SecureBackupEscrowDigest
SecureBackupAuthenticationAppleID
SecureBackupAuthenticationPassword
SecureBackupAuthenticationAuthToken
SecureBackupAuthenticationEscrowProxyURL
SecureBackupAuthenticationDSID
SecureBackupAuthenticationiCloudEnvironment
SecureBackupRecoveryKey
SecureBackupUsesRandomPassphrase
SecureBackupUsesComplexPassphrase
SecureBackupUsesNumericPassphrase
SecureBackupNumericPassphraseLength
SecureBackupEnabled
SecureBackupAccountIsHighSecurity
SecureBackupRecoveryRequiresVerificationToken
SecureBackupRecoveryVerificationTokenLength
SecureBackupLastBackupTimestamp
SecureBackupLastBackupDate
SecureBackupEscrowTrustStatus
peerInfo
peerInfoSerialNumber
osVersion
SecureBackupiCDPRecords
SecureBackupAlliCDPRecords
bottleValid
serial
build
valid
invalid
SecureBackupErrorDomain
EscrowServiceErrorDomain
SecureBackupiCloudIdentityData
SecureBackupIDMSData
SecureBackupIDMSRecovery
SecureBackupFMiPDataKey
SecureBackupFMiPUUIDKey
SecureBackupFMiPRecoveryKey
SecureBackupEMCSIDMSDict
SecureBackupEMCSManagedCredential
SecureBackupEMCSOldManagedCredential
SecureBackupContainsiCloudIdentity
SecureBackupUsesMultipleiCSCs
SecureBackupUsesRecoveryKey
SecureBackupSilentRecoveryAttempt
SecureBackupContainsiCDPData
SecureBackupContainsEMCSData
SecureBackupiCloudDataProtectionEnabled
SecureBackupiCloudDataProtectionDeleteAllRecords
SecureBackupBackOffDate
CloudServicesErrorDomain
SecureBackupSuppressServerFiltering
clubh_key_escrow_data_t pkt too small: len=%u
clubh_key_escrow_data_check_hdr failed=%d
clubh_key_escrow_data_t sect %d is malformed
B32@?0@"NSString"8@"NSSet"16^B24
device_platform
better
first
not 
pki_size %zd < B_len %zd
pki_size %zd > B_len %zd
ccses_unpack_srp_init_resp_rec failed
ccses->salt_len %zd != salt_len %zd
ccsrp_client_process_challenge failed: %d
ccses_pack_srp_recovery_rec failed
BackupUUID
EscrowServiceEscrowData
date
com.apple.protectedcloudstorage.record
com.apple.icdp.record
EscrowServiceCertificate
EscrowServiceAccountInfo
EscrowServiceSMSTargetInfo
EscrowServiceCountrySMSCodes
isHSAEnabled
recoveryRequiresChallengeCode
recoveryChallengeCodeLength
challengeDevices
EscrowOperationStatus
EscrowOperationSucceeded
EscrowServiceFMiPData
EscrowServiceCertificateStore
B24@?0@"NSString"8^B16
dd-MM-yyyy HH:mm:ss
yyyy-MM-dd HH:mm:ss
yyyy-MM-dd HH:mm:ssZZZZZ
CloudServices
UseCKVR
can't process recovery blob with no username
username could not be converted to cstring
v16@?0r*8
Username missing
label missing
Escrow data too long
Fail to parse certificate
Escrow error encrypting data
Could not generate key
failed to extra bytes of priv key
failed to create data buffer
cannot create key
Escrow error encrypting data (spare)
Could not create keys
SecKeyCopyPublicKey() failed
Local SRP verify failed
could not create local SRP recovery blob
ccses
T^{ccses_crypto_t=^{ccdigest_info}^{ccdh_gp}^{ccmode_ecb}^{ccmode_ecb}^{ccmode_cbc}^{ccmode_cbc}^{ccrng_state}QQQQ},R,N,V_ccses
T^{ccsrp_ctx=^{ccdigest_info}^{ccdh_gp}^{ccrng_state}{?=b1b1b1b16}[7C][1Q]},R,N,V_srp
useCKVR
TB,R,N,V_useCKVR
ckvr
T^{ckvr_srp_context=^{ccrng_state}^{ccdigest_info}^{ccmode_cbc}^{ccmode_cbc}^{ccsrp_ctx}},R,N,V_ckvr
T@"NSString",C,N,V_recoveryPassphrase
recoveryPassphraseMutable
TB,N,V_recoveryPassphraseMutable
T@"NSString",R,C,N,V_label
T@"NSDictionary",R,C,N,V_escrowRecord
decodedLabel
T@"NSString",C,N,V_decodedLabel
escrowDate
T@"NSDate",C,N,V_escrowDate
recoveryBlob
T@"NSData",&,V_recoveryBlob
unpack_srp_init_resp_rec failed
ccses->salt_len %d != salt_len %zd
pack_srp_recovery_rec failed
init
dsid
passphrase
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
validateInput
recordLabel
recoveryPassphrase
escrowRecord
recordID
initWithSecureBackup:
setRecordLabel:
setEscrowRecord:
setRecordID:
.cxx_destruct
_recordLabel
_escrowRecord
_recordID
getAccountInfoWithRequest:reply:
enableWithRequest:reply:
recoverWithRequest:reply:
stashRecoveryDataWithRequest:reply:
disableWithRequest:reply:
updateMetadataWithRequest:reply:
cachePassphraseWithRequest:reply:
uncachePassphraseWithRequest:reply:
cacheRecoveryKeyWithRequest:reply:
uncacheRecoveryKeyWithRequest:reply:
changeSMSTargetWithRequest:reply:
startSMSChallengeWithRequest:reply:
getCountrySMSCodesWithRequest:reply:
backOffDateWithRequest:reply:
setBackOffDateWithRequest:reply:
cachePassphraseWithRequestAsync:
uncachePassphraseWithRequestAsync:
notificationInfoWithReply:
backupWithInfo:reply:
stateCaptureWithReply:
prepareHSA2EscrowRecordContents:usesComplexPassphrase:reply:
beginHSA2PasscodeRequest:desirePasscodeImmediately:uuid:reply:
recoverRecordContentsWithRequest:reply:
getCertificatesWithRequest:reply:
interfaceWithProtocol:
initWithMachServiceName:options:
setRemoteObjectInterface:
resume
daemonPasscodeRequestOpinion:
_CreateSecureBackupConnection
_ClassCreateSecureBackupConcurrentConnection
initWithFormat:
UUID
UUIDString
initWithUserActivityLabel:
appleID
encodeObject:forKey:
authToken
backOffDate
countryDialCode
countryCode
deleteAll
encodeBool:forKey:
emcsCred
emcsDict
emcsMode
escrowProxyURL
fmipRecovery
fmipUUID
icdp
iCloudEnv
iCloudIdentityData
iCloudPassword
idmsData
idmsRecovery
metadata
metadataHash
oldEMCSCred
recoveryKey
smsTarget
silent
stingray
synchronize
useCachedPassphrase
hsa2CachedPrerecordUUID
useRecoveryPET
usesMultipleiCSC
usesRandomPassphrase
usesRecoveryKey
verificationToken
activityLabel
activityUUID
suppressServerFiltering
decodeObjectOfClass:forKey:
decodeBoolForKey:
decodePropertyListForKey:
reason
setObject:forKeyedSubscript:
errorWithDomain:code:userInfo:
objectForKeyedSubscript:
setAppleID:
setAuthToken:
setBackOffDate:
setCountryDialCode:
setCountryCode:
numberWithBool:
isEqualToNumber:
setDeleteAll:
setDsid:
setEmcsCred:
setEmcsDict:
setEmcsMode:
setEscrowProxyURL:
setFmipRecovery:
setFmipUUID:
setIcdp:
setICloudEnv:
setICloudIdentityData:
setICloudPassword:
setIdmsData:
setIdmsRecovery:
setMetadata:
setMetadataHash:
setOldEMCSCred:
setPassphrase:
setRecoveryKey:
setSmsTarget:
setSilent:
setStingray:
setSynchronize:
setUseCachedPassphrase:
setHsa2CachedPrerecordUUID:
setUseRecoveryPET:
setUsesMultipleiCSC:
setUsesRandomPassphrase:
setUsesRecoveryKey:
setVerificationToken:
setSuppressServerFiltering:
code
remoteObjectProxyWithErrorHandler:
invalidate
remoteObjectProxy
addBarrierBlock:
synchronousRemoteObjectProxyWithErrorHandler:
populateWithInfo:
getAccountInfoWithError:
getAccountInfoWithResults:
getAccountInfoWithInfo:completionBlockWithResults:
updateMetadataWithError:
updateMetadataWithCompletionBlock:
enableWithError:
enableWithCompletionBlock:
recoverWithError:
recoverWithResults:
recoverWithInfo:completionBlockWithResults:
disableWithError:
disableWithCompletionBlock:
stashRecoveryDataWithCompletionBlock:
cachePassphrase
cachePassphraseWithCompletionBlock:
uncachePassphrase
uncachePassphraseWithCompletionBlock:
startSMSChallengeWithError:
startSMSChallengeWithResults:
startSMSChallengeWithInfo:completionBlockWithResults:
getCountrySMSCodesWithResults:
changeSMSTargetWithError:
changeSMSTargetWithCompletionBlock:
backOffDateWithCompletionBlock:
setBackOffDateWithCompletionBlock:
initWithRequest:
setSes:
srpInitBlob
srpRecoveryUpdateDSID:recoveryPassphrase:
srpRecoveryBlobFromData:error:
UTF8String
asyncRequestEscrowRecordUpdate
domain
isEqualToString:
beginHSA2PasscodeRequest:uuid:error:
supportsSecureCoding
needPasscodeForHSA2EscrowRecordUpdate:
encodeWithCoder:
initWithCoder:
recoverRecordContents:
cacheRecoveryKeyWithCompletionBlock:
uncacheRecoveryKeyWithCompletionBlock:
backupWithInfo:completionBlock:
notificationInfo:
stateCaptureWithCompletionBlock:
getAccountInfoWithInfo:results:
getAccountInfoWithInfo:completionBlock:
updateMetadataWithInfo:
updateMetadataWithInfo:completionBlock:
enableWithInfo:
enableWithInfo:completionBlock:
recoverWithInfo:results:
recoverWithInfo:completionBlock:
disableWithInfo:
disableWithInfo:completionBlock:
stashRecoveryDataWithInfo:completionBlock:
cachePassphraseWithInfo:
cachePassphraseWithInfo:completionBlock:
uncachePassphraseWithInfo:
uncachePassphraseWithInfo:completionBlock:
startSMSChallengeWithInfo:results:
startSMSChallengeWithInfo:completionBlock:
getCountrySMSCodesWithInfo:completionBlockWithResults:
changeSMSTargetWithInfo:
changeSMSTargetWithInfo:completionBlock:
backupWithInfo:
backOffDateWithInfo:completionBlock:
setBackOffDateWithInfo:completionBlock:
srpInitNonce
srpRecoveryBlobFromSRPInitResponse:
prepareHSA2EscrowRecordContents:reply:
beginHSA2PasscodeRequest:error:
getCertificates:
certData
setCertData:
encodedMetadata
setEncodedMetadata:
queue
setQueue:
error
setError:
setActivityLabel:
setActivityUUID:
prerecord
setPrerecord:
_deleteAll
_emcsMode
_fmipRecovery
_icdp
_idmsRecovery
_silent
_stingray
_synchronize
_useCachedPassphrase
_useRecoveryPET
_usesMultipleiCSC
_usesRandomPassphrase
_usesRecoveryKey
_suppressServerFiltering
_appleID
_authToken
_backOffDate
_certData
_countryDialCode
_countryCode
_dsid
_emcsCred
_emcsDict
_encodedMetadata
_escrowProxyURL
_fmipUUID
_iCloudEnv
_iCloudIdentityData
_iCloudPassword
_idmsData
_metadata
_metadataHash
_oldEMCSCred
_passphrase
_recoveryKey
_smsTarget
_verificationToken
_queue
_error
_activityLabel
_activityUUID
_hsa2CachedPrerecordUUID
_prerecord
_ses
iCloudEnvironment
escrowBaseURL
escrowCertificate
uuid
escrowFederation
cert
base64EncodedStringWithOptions:
stringWithFormat:
initWithStoredCertificate:uuid:
_iCloudEnvironment
_escrowFederation
_cert
_uuid
processInfo
processName
initWithURLResponse:data:
httpResponse
allHeaderFields
host
path
status
errorCode
responseDictionary
localizedDescription
message
errorMessage
userInfo
mutableCopy
integerValue
version
initWithBase64EncodedString:options:
clubID
_clubID
bypassToken
srpData
propertyListWithData:options:format:error:
recoveryData
fmipRecoveryData
smsVerificationCodeLength
countByEnumeratingWithState:objects:count:
numberWithInteger:
addObject:
accountInfo
smsTargetsInfo
countrySMSCodes
bskb
length
enumerateByteRangesUsingBlock:
initWithBytesNoCopy:length:encoding:freeWhenDone:
initWithBytesNoCopy:length:freeWhenDone:
sha1Digest
hexString
enumeratePeersWithBlock:
peerIDs
peersAndBackupKeyDigests
backupKeyDigests
peerIDForKeybagDigest:
fileSystemRepresentation
URLByAppendingPathComponent:
URLByAppendingPathExtension:
openDBWithURL:truncate:
stringWithUTF8String:
dictionaryWithObjects:forKeys:count:
sqliteErrorForDB:
bytes
appendBytes:length:
initWithBytes:length:
initWithUTF8String:
sqliteExecInteger:
sqliteExec:
dbManagementTasks
setDb:
initWithURL:recordID:
addItem:withKey:forClass:error:
removeItemWithKey:error:
enumerateKeysAndItemsUsingBlock:
resetDBWithKeybag:
closeDB
keybag
keybagDigest
manifestHash
_url
defaultManager
URLForDirectory:inDomain:appropriateForURL:create:error:
URLByAppendingPathComponent:isDirectory:
createDirectoryAtURL:withIntermediateDirectories:attributes:error:
URLForViewName:
migrateView:
count
viewName
defaultStore
dictionaryForKey:
addItem:error:
lastPathComponent
initWithContentsOfURL:
resetWithKeybag:error:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
pathExtension
stringByDeletingPathExtension
migrateBTree:keyClass:
migrateFromKVS
initWithViewName:recordID:
backupDict
backupData
closeStore
_viewName
statusCode
localizedStringForStatusCode:
dictionary
initWithLocaleIdentifier:
setLocale:
setDateFormat:
dateFromString:
longLongValue
dateWithTimeIntervalSinceNow:
localString
_parsePlistFromData:error:
initWithData:encoding:
logger
logUnrecoverableError:forEvent:withAttributes:
logSuccessForEvent:
_responseDictionary
_httpResponse
dictionaryRepresentation
setObject:forKey:
setICloudEnvironment:
setEscrowBaseURL:
setEscrowCertificate:
setDuplicateEscrowCertificate:
allocWithZone:
copyWithZone:
hasICloudEnvironment
hasEscrowBaseURL
hasDsid
hasEscrowCertificate
hasDuplicateEscrowCertificate
readFrom:
writeTo:
copyTo:
mergeFrom:
duplicateEscrowCertificate
_duplicateEscrowCertificate
_escrowBaseURL
_escrowCertificate
dataWithPropertyList:format:options:error:
base64EncodedStringFromDict
iCDP
errorWithCode:error:format:
baseURL
protocolVersion
command
dataUsingEncoding:
authorizationHeaderWithUser:password:authType:
urlRequest
bodyDictionary
setHTTPBody:
setHTTPMethod:
lowercaseString
stringByAppendingFormat:
authorizationHeader
urlString
protocol
phoneNumber
challengeCode
silentAttempt
blob
setBlob:
baseRootCertVersions
setBaseRootCertVersions:
trustedRootCertVersions
setTrustedRootCertVersions:
setBypassToken:
_iCDP
_silentAttempt
_recoveryPassphrase
_baseURL
_protocol
_command
_phoneNumber
_challengeCode
_blob
_baseRootCertVersions
_trustedRootCertVersions
_bypassToken
stringByAppendingString:
requestDictionary
addEntriesFromDictionary:
duplicate
initWithCapacity:
responseClass
setDuplicate:
_duplicate
aa_primaryAppleAccount
aa_isPrimaryEmailVerified
aa_personID
aa_altDSID
credentialForAccount:error:
token
propertiesForDataclass:
objectForKey:
dataclassProperties
posixDateFormatter
date
stringFromDate:
setDictionary:forKey:
rangeOfString:
substringToIndex:
cachedKeychainURL
removeItemAtURL:error:
enumerateKeysAndObjectsUsingBlock:
createDERDataFromPlist:
copyMyPeerInfo:
copyPeerID:
copyBackupKey:
kvsQueue
_getProtectedKeychainAndKeybagDigestFromKVS:
_storeProtectedKeychainInKVS:keybagDigest:
_storeVeeTwoBackupInKVS:forViewName:withKeyStore:manifestDigest:keybagDigest:
backupWithRegisteredBackupsWithError:handler:
removeObjectForKey:
_removeCachedKeychain
boolForKey:
setBool:forKey:
setString:forKey:
dataForKey:
setData:forKey:
additionalStoreWithIdentifier:
compare:
hasPrefix:
hasSuffix:
_getKeychainItemForKey:status:
connectionQueue
verifyCertificateWithRequest:completionBlock:
_backupFullKeychainWithReply:
circleChangedNotification
unregisterForNotifyEvent:
setNeedInitialBackup:
_setAutobackupEnabledWithReply:
_backupKeychainFully:reply:
_backupEnabled
_usesEscrow
_checkEscrowTrust
backupQueue
_consumeFullBackup
_pushCachedKeychainToKVS
_consumeBackupJournal
copyMyPeerID
backupWithChanges:error:handler:
backupSetConfirmedManifest:digest:manifest:error:
_removeKeychainItemForKey:
_removeKVSKeybag
_removeMetadata
_removeProtectedKeychain
_setBackupEnabled:iCDP:
_removeVeeTwoBackup
_createBackupKeybagWithPassword:
_saveKeychainItem:forKey:
derDataFromDict:
storeDERBackupInKVS:
_getICDPBackupFromKVSForView:
_getDERBackupFromKVS
_getLastBackupTimestamp
_iCDPBackupEnabled
_setUsesEscrow:
_removeUsesEscrow
_setMetadata:
_setKVSKeybag:
_KVSKeybag
_setEMCSBackup:keybag:
_EMCSBackup
_EMCSBackupDictForKeybagDigest:
garbageCollectEMCSBackupsExcluding:
_setAutobackupEnabled
_backupFullKeychain
_backupKeychain
_disableBackup
disableiCDPBackup
registerForNotifyEvent:
decimalDigitCharacterSet
invertedSet
rangeOfCharacterFromSet:options:
characterAtIndex:
stringWithCharacters:length:
setCacheDirURL:
_stateCapture
setupNotifyEvents
setHandledNotifications:
setIgnoredNotifications:
handleNotification:
allViews
copyKVSState
cacheDirURL
valueForEntitlement:
processIdentifier
serviceName
setExportedInterface:
setExportedObject:
_setQueue:
handledNotifications
ignoredNotifications
numberWithLong:
pendingNotification
setPendingNotification:
notificationOccurred:
recordNotification:handled:
needInitialBackup
numberWithInt:
boolValue
intValue
containsObject:
allObjects
backupSliceKeybagHasRecoveryKey:
getAccountInfoWithRequest:completionBlock:
secureBackupDate
massageIncomingMetadataFromInfo:
substringFromIndex:
createPeerInfoFromData:error:
copySerialNumber:
copyOSVersion:
sortRecordsByBottleID:
filteriCDPRecords:
hasRecoveryKey
objectAtIndexedSubscript:
forceICDP
listSMSTargetsWithRequest:completionBlock:
arrayWithArray:
dictionaryWithDictionary:
preferredBottleIDs
partialRecoveryBottleIDs
setAltDSID:
setContext:
findOptimalBottleIDsWithContextData:error:
tagStaleBottleRecords:suggestedBottles:
array
setObject:atIndexedSubscript:
indexOfObject:
addObjectsFromArray:
removeObject:
synchronizeWithCompletionHandler:
_getAccountInfoWithRequest:reply:
synchronizeKVSWithHandler:
_stashRecoveryDataWithRequest:reply:
setNewRecoveryKeyWithData:recoveryKey:reply:
doEnableEscrowMultiICSCWithRequest:reply:
massageOutgoingMetadataFromRequest:
cachedPassphrase
createiCloudRecoveryPasswordWithError:
normalizeSMSTarget:error:
registerSingleRecoverySecret:iCDP:error:
handleEscrowStoreResults:escrowError:request:sosPeerID:newRecordMetadata:backupKeybag:reply:
storeRecordWithRequest:completionBlock:
callStackSymbols
name
backupWithInfo:garbageCollect:reply:
createPlistFromDERData:
createEncodedDirectBackupSliceKeybagFromData:error:
logResultForEvent:hardFailure:result:withAttributes:
restoreBackupName:peerID:keybag:password:backup:reply:
allKeys
caseInsensitiveCompare:
sortedArrayUsingSelector:
appendString:
currentViews
restoreBackup:withName:keybagDigest:keybag:password:
encodedStatsForViews:
logSoftFailureForEventNamed:withAttributes:
cachedRecordID
backups
recordIDAndClientMetadataForSilentAttemptFromRecords:passphraseLength:platform:reply:
restoreEMCSBackup:keybag:password:
recoverRecordWithRequest:completionBlock:
logResultForEvent:hardFailure:result:
uncacheRecordIDPassphrase
_restoreKeychainWithBackupBag:password:keybagDigest:haveBottledPeer:
initWithDomain:code:userInfo:
setCachedRecordIDPassphrase:
setCachedRecordID:
cachedRecoveryKey
recoverOctagonUsingData:recoveryKey:reply:
cachedRecordIDPassphrase
recoverEscrowWithRequest:reply:
recordIDAndMetadataForSilentAttempt:passphraseLength:platform:reply:
_recoverWithRequest:reply:
deleteRecordWithRequest:completionBlock:
registerRecoveryPublicKey:error:
deleteAlliCDPRecordsWithRequest:reply:
timeIntervalSinceReferenceDate
updateRecordMetadataWithRequest:completionBlock:
stringByAppendingPathComponent:
storeCachedPassphrase:
setCachedPassphraseFD:
setCachedRecordIDPassphraseFD:
setCachedRecoveryKeyFD:
initWithLength:
mutableBytes
cachedPassphraseFD
cachedPassphraseForFD:
cachedRecordIDPassphraseFD
cachedRecoveryKeyFD
setCachedPassphrase:
setCachedRecoveryKey:
startSMSChallengeWithRequest:completionBlock:
getCountrySMSCodesWithRequest:completionBlock:
changeSMSTargetWithRequest:completionBlock:
request:
fetchRequestWaitingOnPasscode:
setPasscodeRequestFlag:
cacheStoredCertificate:error:
fetchCertificatesWithRequest:completionBlock:
notifyToken
clearNotifyToken
fetchPRK:
makeRecordCandidate:error:
fetchCachedCertificateWithRequest:error:
createPrerecordFromCandidate:storedCertificate:request:error:
data
cachePrerecord:serializedPrerecord:error:
archivedDataWithRootObject:requiringSecureCoding:error:
getPasscodeRequestFlag:
listener:shouldAcceptNewConnection:
cachedManifestURL
getStingrayMetadataWithRequest:reply:
backupAllowed
setBackupAllowed:
restoreEMCSBackup:withPassword:
recoverStingrayWithRequest:reply:
getPendingEscrowRequest:
iCDPKeybag
_needInitialBackup
_pendingNotification
_cachedPassphraseFD
_cachedRecordIDPassphraseFD
_cachedRecoveryKeyFD
_cacheDirURL
_iCDPKeybag
_connectionQueue
_backupQueue
_kvsQueue
_cachedRecordID
_ignoredNotifications
_handledNotifications
setWithArray:
isEqualToSet:
timeIntervalSinceNow
errorWithCode:format:
initWithString:
initWithURL:
ak_addDeviceUDIDHeader
ak_addClientInfoHeader
activity
currentRequest
originalRequest
setURL:
ephemeralSessionConfiguration
set_appleIDContext:
set_tlsTrustPinningPolicyName:
setHTTPAdditionalHeaders:
sessionConfig
sessionWithConfiguration:delegate:delegateQueue:
setActivity:
alloc
pinningFailure
dataTaskWithRequest:completionHandler:
finishTasksAndInvalidate
URLSession:didBecomeInvalidWithError:
URLSession:didReceiveChallenge:completionHandler:
URLSessionDidFinishEventsForBackgroundURLSession:
credential
protectionSpace
URLSession:task:willPerformHTTPRedirection:newRequest:completionHandler:
performRequestWithHandler:
setUrlString:
setPinningFailure:
_pinningFailure
_responseClass
_urlString
_activity
setEscrowBlob:
setSosPeerID:
setSosBackupKeybagPassword:
setSosBackupKeybagDigest:
setTimestamp:
setBottleID:
setEscrowedSPKI:
hasEscrowBlob
hasSosPeerID
hasSosBackupKeybagPassword
hasSosBackupKeybagDigest
hasTimestamp
hasBottleID
hasEscrowedSPKI
passphraseType
setPassphraseType:
setHasPassphraseType:
hasPassphraseType
passphraseTypeAsString:
StringAsPassphraseType:
escrowBlob
sosPeerID
sosBackupKeybagPassword
sosBackupKeybagDigest
timestamp
bottleID
escrowedSPKI
_bottleID
_escrowBlob
_escrowedSPKI
_passphraseType
_sosBackupKeybagDigest
_sosBackupKeybagPassword
_sosPeerID
_timestamp
_has
scanUnsignedLongLong:
numberWithUnsignedLongLong:
_certVersion:
numberWithUnsignedLong:
_rootTrustedVersionsForRootType:inEnvironment:
unsignedLongLongValue
_saveBypassToken:
_removeBypassToken
_getBypassToken
_rootBaseVersionsForRootType:inEnvironment:
_rootCurrentVersionForRootType:inEnvironment:
errorWithDomain:code:format:
certificateRequest:duplicate:error:
_fetchCertificatesWithRequest:duplicate:completionBlock:
keychainBaseQueryWithEnvironment:andBaseURL:
initWithData:
storeRecordWithCertDataRequest:completionBlock:
processPrerecord:outerRequest:escrowRequest:error:
createEscrowBlobWithCertificate:escrowRequest:error:
initWithDSID:escrowRecordContents:recoveryPassphrase:recordID:recordLabel:
encodedEscrowRecordWithPublicKey:error:
sleepUntilDate:
decodedEscrowRecordFromData:
decodedLabel
escrowDate
recoverQueue
group
_recoverRecordWithRequest:completionBlock:
updateRecordWithRequest:completionBlock:
setGroup:
setRecoverQueue:
_group
_recoverQueue
initFileURLWithPath:isDirectory:
arrayWithObjects:count:
defaultAnalyticsDatabasePath:
logSuccessForEventNamed:
setValuesForKeysWithDictionary:
logHardFailureForEventNamed:withAttributes:
databasePath
recordContents
unsignedIntegerValue
initWithCandidate:certificate:escrowBlob:passphraseType:
accountTypeWithAccountTypeIdentifier:
accountsWithAccountType:
isPrimaryiCloudAccount:
altDSIDForAccount:
authKitAccountWithAltDSID:
passwordResetTokenBackupForAccount:
enableTransactions
initWithMachServiceName:
setDelegate:
currentRunLoop
copyMyPeerIDWithError:
copyBackupKeyForNewDeviceRecoverySecret:error:
copyMyPeerWithNewDeviceRecoverySecret:error:
copyEncodedData:error:
setRecordContents:
_recordContents
fetchPrerecord:error:
setPasscodeMetadata:passphraseType:
_gestaltValueForKey:
initWithContextData:error:
cliqueMemberIdentifier
fetchEscrowContents:
keysOfEntriesPassingTest:
keysOfEntriesContainingObject:
compareMembershipOfObject:withSet:
countOfObjectsWithPrefix:
compare:with:
codeForNSError:
codeForErrno:
initWithFormat:arguments:
dictionaryWithObjectsAndKeys:
sanitizedError:
errorWithCode:URL:format:
errorWithCode:error:URL:format:
errorForNSError:path:format:
stringForKey:
objectsPassingTest:
timeZoneForSecondsFromGMT:
setTimeZone:
legacyDateFormatter
localTimeZone
initWithRequest:ckvrFlag:
initWithDSID:escrowRecordContents:recoveryPassphrase:recordID:recordLabel:ckvrFlag:
useCKVR
ckvr
dataWithBytes:length:
ccses
dataWithLength:
label
cStringUsingEncoding:
setRecoveryBlob:
srpResponseForEscrowBlob:withKey:withFullCCKey:
recoveryResponseForBlob:
initWithBytes:length:encoding:
setEscrowDate:
setDecodedLabel:
recoveryBlob
srpPublicKeySize
srpKeySize
dealloc
setRecoveryPassphrase:
recoveryPassphraseMutable
setRecoveryPassphraseMutable:
_useCKVR
_recoveryPassphraseMutable
_decodedLabel
_escrowDate
_recoveryBlob
_ccses
_srp
_ckvr
_label
SRPInit
SRPClientRequest
NSObject
SecureBackupProtocol
SecureBackupConcurrentProtocol
Internal
SecureBackup
NSSecureCoding
NSCoding
SecureBackupBeginPasscodeRequestResults
EscrowGenericResponse
EscrowCertificateResponse
EscrowEnrollmentResponse
EscrowSRPResponse
EscrowRecoveryResponse
EscrowDeleteResponse
EscrowUpdateMetadataResponse
EscrowUpdateBlobResponse
EscrowSMSChallengeResponse
EscrowAccountInfoResponse
EscrowChangeSMSTargetResponse
EscrowListSMSTargetsResponse
EscrowGetCountrySMSCodesResponse
SecureBackupSQLite
SecureBackupDB
SecureBackupViewStore
LakituResponse
StoredCertificate
NSCopying
EscrowRequest
EscrowGenericRequest
EscrowPasswordAuthenticatedRequest
EscrowCertificateRequest
EscrowEnrollmentRequest
EscrowSRPRequest
EscrowRecoveryRequest
EscrowDeleteRequest
EscrowUpdateMetadataRequest
EscrowUpdateBlobRequest
EscrowSMSChallengeRequest
EscrowAccountInfoRequest
EscrowChangeSMSTargetRequest
EscrowListSMSTargetsRequest
EscrowGetCountrySMSCodesRequest
SecureBackupDaemon
NSXPCListenerDelegate
LakituRequest
NSURLSessionDelegate
EscrowPrerecord
EscrowService
CloudServicesAnalytics
Helpers
SecureBackupTestWrapper
SecureBackupEscrowRecordCandidate
SecureBackupEscrowRecordMetadataHolder
EnableHelpers
CloudServicesError
POSIXDate
SBDate
SESWrapper
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"NSError"16@0:8
@"NSDictionary"16@0:8
@24@0:8@16
v24@0:8@16
v16@0:8
@"NSString"
@"NSDictionary"
@"SecureBackup"
v32@0:8@16@?24
v24@0:8@?16
v36@0:8@16B24@?28
v44@0:8@16B24@28@?36
v32@0:8@"SecureBackup"16@?<v@?@"NSDictionary"@"NSError">24
v32@0:8@"SecureBackup"16@?<v@?@"NSError">24
v24@0:8@"SecureBackup"16
v24@0:8@?<v@?@"NSDictionary"@"NSError">16
v32@0:8@"NSDictionary"16@?<v@?@"NSError">24
v36@0:8@"SecureBackup"16B24@?<v@?@"NSError">28
v44@0:8@"SecureBackup"16B24@"NSString"28@?<v@?@"SecureBackupBeginPasscodeRequestResults"@"NSError">36
v32@0:8@"SecureBackup"16@?<v@?@"NSDictionary"@"NSData"@"NSData"@"NSError">24
v24@0:8@?<v@?I@"NSError">16
I24@0:8^@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@24@0:8^@16
@32@0:8@16^@24
B24@0:8^@16
v32@0:8@16@24
v28@0:8B16@?20
@28@0:8B16^@20
@36@0:8B16@20^@28
v20@0:8B16
@"NSDate"
@"NSData"
@"NSObject<OS_dispatch_queue>"
@"NSError"
@"EscrowPrerecord"
@"SESWrapper"
@32@0:8@16@24
q16@0:8
^{sqlite3=}28@0:8@16B24
B48@0:8@16@24@32^@40
B32@0:8@16^@24
@32@0:8@"NSURL"16@"NSString"24
B48@0:8@"NSData"16@"NSData"24@"NSString"32^@40
B32@0:8@"NSData"16^@24
v24@0:8@?<v@?@"NSData"@"NSString"@"NSData">16
v24@0:8@"NSData"16
B24@0:8@"NSString"16
@"NSData"16@0:8
@24@0:8^{sqlite3=}16
q24@0:8@16
^{sqlite3=}16@0:8
v24@0:8^{sqlite3=}16
^{sqlite3=}
@"NSURL"
B32@0:8@16@24
@"<SecureBackupDB>"
@"NSHTTPURLResponse"
@24@0:8^{_NSZone=}16
@40@0:8@16@24@32
@"NSNumber"
@"NSArray"
@32@0:8@16^i24
v56@0:8@16@24@32@40@48
v24@0:8B16B20
i16@0:8
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
^{os_state_data_s=I(?=b32I){os_state_data_decoder_s=[64c][64c]}[64c][0C]}16@0:8
v28@0:8@16B24
v72@0:8@16@24@32@40@48@56@?64
@56@0:8@16@24@32@40@48
@44@0:8@16@24@32B40
v44@0:8@16Q24i32@?36
i24@0:8@16
@20@0:8i16
i24@0:8Q16
i24@0:8^Q16
v20@0:8i16
@"NSMutableDictionary"
v40@0:8@16@24@?32
v32@0:8@"NSURLSession"16@"NSError"24
v40@0:8@"NSURLSession"16@"NSURLAuthenticationChallenge"24@?<v@?q@"NSURLCredential">32
v24@0:8@"NSURLSession"16
v56@0:8@16@24@32@40@?48
@"NSObject<OS_os_activity>"
{?="passphraseType"b1}
@24@0:8^{__SecCertificate=}16
@28@0:8I16@20
@36@0:8@16B24^@28
@40@0:8@16@24^@32
@"NSObject<OS_dispatch_group>"
v40@0:8@16@24@32
@44@0:8@16@24@32i40
@48@0:8@16@24@32^@40
v64@0:8@16@24@32@40@48@?56
B32@0:8^@16@?24
B40@0:8@16^@24@?32
B36@0:8@16B24^@28
v24@0:8@"NSString"16
v28@0:8@16i24
@24@0:8^{__CFString=}16
q32@0:8@16@24
q24@0:8q16
@32@0:8q16@24
@40@0:8q16@24@32
@48@0:8q16@24@32@40
@40@0:8@16q24@32
Q24@0:8@16
@28@0:8@16B24
@60@0:8@16@24@32@40@48B56
@32@0:8^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}16^@24
@40@0:8@16^{__SecKey={__CFRuntimeBase=QAQ}^{__SecKeyDescriptor}^v}24^{ccrsa_full_ctx=QQ^{cczp_funcs}[0Q]}32
^{ccses_crypto_t=^{ccdigest_info}^{ccdh_gp}^{ccmode_ecb}^{ccmode_ecb}^{ccmode_cbc}^{ccmode_cbc}^{ccrng_state}QQQQ}16@0:8
^{ccsrp_ctx=^{ccdigest_info}^{ccdh_gp}^{ccrng_state}{?=b1b1b1b16}[7C][1Q]}16@0:8
^{ckvr_srp_context=^{ccrng_state}^{ccdigest_info}^{ccmode_cbc}^{ccmode_cbc}^{ccsrp_ctx}}16@0:8
^{ccses_crypto_t=^{ccdigest_info}^{ccdh_gp}^{ccmode_ecb}^{ccmode_ecb}^{ccmode_cbc}^{ccmode_cbc}^{ccrng_state}QQQQ}
^{ccsrp_ctx=^{ccdigest_info}^{ccdh_gp}^{ccrng_state}{?=b1b1b1b16}[7C][1Q]}
^{ckvr_srp_context=^{ccrng_state}^{ccdigest_info}^{ccmode_cbc}^{ccmode_cbc}^{ccsrp_ctx}}
creating connection to sbd: uid %d, progname %s
sbd connection created
new SecureBackup object: %@ %@
remote proxy error: %ld
calling getAccountInfoWithRequest in daemon
getAccountInfoWithRequest in daemon came back with %@
calling enableWithRequest in daemon
enableWithRequest in daemon came back with %@
calling recoverWithRequest in daemon
recoverWithRequest came back with %@
calling recoverRecordContents in daemon
recoverRecordContents came back with %@
calling disableWithRequest in daemon
disableWithRequest came back with %@
calling stashRecoveryDataWithRequest in daemon
stashRecoveryDataWithRequest came back with %@
updateMetadata remote proxy error: %ld
calling updateMetadata in daemon
updateMetadata came back with %@
invalidating connection
calling cachePassphraseWithRequestAsync in daemon
calling cachePassphraseWithRequest in daemon
calling uncachePassphraseWithRequest in daemon
calling cacheRecoveryKeyWithRequest in daemon
calling uncachePassphraseWithRequestAsync in daemon
calling startSMSChallengeWithRequest in daemon
startSMSChallengeWithRequest came back with %@
calling getCountrySMSCodesWithRequest in daemon
getCountrySMSCodesWithRequest came back with %@
calling changeSMSTargetWithRequest in daemon
changeSMSTargetWithRequest came back with %@
calling backupWithInfo in daemon
backupWithInfo came back with %@
calling backOffDateWithRequest in daemon
backOffDateWithRequest came back with %@
calling setBackOffDateWithRequest in daemon
setBackOffDateWithRequest came back with %@
calling notificationInfo in daemon
notificationInfo came back with %@
calling stateCapture in daemon
stateCapture came back with %@
calling %s from the main thread
getAccountInfoWithRequest came back with %@
calling updateMetadataWithRequest in daemon
updateMetadataWithRequest came back with %@
enableWithRequest came back with %@
calling prepareHSA2EscrowRecordContents in daemon
prepareHSA2EscrowRecordContents came back with %@
initial state fetch completed with: %d %@
unable to fetch passcode_request token
unable to fetch state of passcode_request token (%d)
do initial state fetch in the background
No need for passcode
daemon unable to determine passcode status due to keybag lock; relying on dispatch state
unable to ask daemon for confirmation of passcode request: %@
daemon believes there's no need for a passcode
Need password on next unlock
Desire password when available
Dispatch doesn't have a state for us yet, opportunistically asking for the password
unknown passcode request state: %llu
calling daemonPasscodeRequestOpinion in daemon
daemonPasscodeRequestOpinion came back with %@
calling beginHSA2PasscodeRequest in daemon
beginHSA2PasscodeRequest came back with %@
calling getCertificatesWithRequest in daemon
got response from host %@ path %@ uuid %@
Error returned from iCloud: %@
HTTP Error: %@
got bad dict from iCloud: %@
iCloud gave us junk for metadata: %@
SOSBackupSliceKeyBagCreateFromData() failed: %@
found peer %@
could not find peer id for peer %@
No peer for digest %@ found
opening %@ failed: %s
table create for %@ failed: %s
sqlite3_prepare(insert) for %@ failed: %s
sqlite3_bind_text for %@ failed: %s
sqlite3_bind_blob64 for %@ failed: %s
sqlite3_step for %@ failed: %s
sqlite3_finalize for %@ failed: %s
sqlite3_prepare(delete) for %@ failed: %s
sqlite3_changes for remove %@ in %@ != 1
sqlite3_prepare_v2(%s) for %@ failed: %s
%s: %@
%@ on %@ failed: %s
table drop for %@ failed: %s
create table for %@ failed: %s
sqlite3_close for %@ failed: %d
could not create %@: %@
no keybag digest found, migrating view %@
unexpected item type for kSecBackupEventAdd: %@
unexpected item type for kSecBackupEventRemove: %@
CFPropertyListCreateDERData failed: %@
unexpected item type for resetWithKeybag: %@
keybag hasn't changed, skipping DB reset
reset manifest for view %@
backup keybag peers: %@
failed to add item %@
migrating %@
migrating %@ failed, resetting local backup db to empty
could not reset store with keybag: %@
unexpected key size: %zd, corrupt btree at %@
duplicate key, corrupt btree at %@
failed to add item: %@
seq failed: %s
migrated %lu item%s in class %@
not a btree file 
could not open %@: %s 
Escrow response not a dictionary: %@
Error processing plist: %@
Error from escrow proxy: %ld, %@
Got retry-after header: %@
will be available for retry after %@
unexpected response from escrow proxy: URL: %@, headers: %@, data: %@
No user signed in: %@ %@
Missing base URL
auth type %@, sha1 %@
Failed to encode body: %@
Missing required parameters AppleID: %@
%@iCloud password:
Missing required parameters passphrase: %@
data: %@
sms target: %@
Missing DSID
EscrowUpdateBlobRequest: bodyDictionary: %@
Missing parameters
getting dsid
got dsid: %@
account email not verified
getting auth token
Error accessing auth token: %@
got auth token
getting escrowURL
got escrowURL
getting iCloud env
got iCloud env
SecItemAdd() returned %ld
SecItemDelete() returned %ld
SecItemCopyMatching() returned %ld
Storing keychain in KVS @%@
NSUbiquitousKeyValueStore synchronize failed
skipping identical backup for %@
backing up manifest digest %@, keybag digest %@, view %@
error removing keychain: %@
no data value in dict
Storing DER keychain in KVS @%@
backing up peer ID %@
using backup key: %@
SOSCCCopyMyPeerInfo() failed: %@
Couldn't back up view %@: backup is%s nil, keybag is%s nil
skipping empty backup for view %@
getting registered backup names failed: %@
Removing backup record from @%@
Retrieving keychain from @%@
Removing view-based backup from @%@
Changing backup status %u->%u
Changing escrow usage %u->%u
Changing metadata old: %@
new: %@
Removing metadata: %@
Overwriting keybag in KVS! Old digest: %@
Saving keybag in KVS digest: %@
Saving EMCS backup
looking for non-tagged EMCS backup
looking for old-style EMCS backup
Found non-tagged EMCS backup with more recent timestamp
garbage collecting backup %@
Removing keybag from KVS digest: %@
Can't get escrow cert from keychain
Attempt to back up when backup not enabled
Escrow cert is newer than trust policy; ignoring for now.
Escrow no longer trusted
calling %ssynchronous backup
backup complete
consuming full backup
consuming backup for view %@
calling SecItemBackupWithChanges()
SecKeychainBackupWithChanges: unexpected event: %d
SecItemBackupWithChanges() returned %s (%d reset, %d add, %d remove)
SecKeychainBackupWithChanges: no journal file, skipping %@
SecKeychainBackupWithChanges for view %@ failed: %@
Handling events for view %@ failed: %@
SecItemBackupSetConfirmedManifest for view %@ failed: %@
SecItemBackupWithRegisteredBackups() returned %s
SecItemBackupWithRegisteredBackups failed: %@
forcing KVS push
attempt to enable backup with non-decimal digits in SMS target: %@
capturing KVS state
Error serializing dictionary for State Capture: %@
captured %zd bytes of KVS data
calloc() failed?
could not get KVS dictionary representation
no uuid, could not create cache file URL
no uuid, could not create manifest file URL
sbd listener begin from pid %d (%@) [%@]
connection attempt from pid %d missing entitlement: %@
connection attempt from pid %d to unknown service name %@
calling dispatch_after() to enqueue notification
in dispatch_after()
notification already pending
ignoring circle changed notification
got notification: %@
Backing up EMCS in response to keychain changed
Backup returned %@
Performing initial backup
handling notification %@
NSUbiquitousKeyValueStore failed
no keybag found in iCloudIdentity backup: %@
record id %@ cannot recover iCloudIdentity backup!
iCloudIdentity backup keybag peers: %@
could not get iCloudIdentity backup!
calling getAccountInfoWithInfo: in daemon
getAccountInfoWithInfo: in daemon came back
getAccountInfoWithInfo failed: %@
got %ld records
found a kEscrowServiceStingrayLabel
Could not find stingray metadata!
calling getAccountInfoWithRequest: in daemon
getAccountInfoWithRequest: in daemon came back
escrowService getAccountInfoWithRequest: returned %@
getAccountInfoWithRequest: error: %ld
got %lu records
could not create peer info from data: %@
unexpected label: %@
%@ %@ %@ %@ %@ %@
%@ %@ %@ %@ %@
backup enabled
account uses escrow
calling listSMSTargets: in daemon
listSMSTargets: came back
escrowService listSMSTargetsWithRequest: returned %@
account does not use escrow
account useEscrow: %d
account SecureBackup status: %@
account iCDP records: %d
account does not use escrow, says backup is enabled, but has no backup timestamp
backup not enabled
Sorting %d records
Unable to fetch bottled peer sorting suggestions: %@
No preferred or partial bottleIDs bottle IDs, returning whole list
Returned %d preferred bottles, %d partial recovery bottles
Record %@ in preferred bottle list, adding
Record %@ in partially preferred bottle list, adding
Record %@ does not have a bottle, ignoring it
After filtering, no records are viable for Octagon. Returning all %d records
Returning %d sorted records
waiting for sync group
calling synchronizeWithCompletionHandler
got error back from synchronizeWithCompletionHandler: %@
calling handler on connection queue
Unknown passphrase type: %d
stashRecoveryDataWithRequest called without EMCS mode set?
enableWithRequest request.recoveryKey: %@
setNewRecoveryKeyWithData() succeeded!
setNewRecoveryKeyWithData() failed: %@
setNewRecoveryKeyWithData() timed out
Backup already enabled
Heading down multi-icsc path
Heading down spaghetti path: s: %d, uRP: %d, uMiCSC:%d
attempted to store stingray identities, with invalid parameters: %@, %@nil iCloud password, %@nil iCloud identity data
FORCING ICDP + MULTIPLE ICSC
attempted to enable backup, with invalid parameters: %@nil recovery password, %@, %@, %@nil iCloud password
could not create backup bag password
could not create backup keybag
enableWithInfo() reached unreachable path: escrow+!stingray+usesMultipleICSC: %@
SOSCCRegisterSingleRecoverySecret() failed: %@
enableWithInfo(): beginning an update request
%s caught exception: %@: %@
escrowService storeRecordWithRequest: returned: %@
escrowService storeRecordWithRequest: succeeded
failed creating backup semaphore: %s
%@: %ld item%s
obj for key %@ does not respond to count!
backup is not a dictionary!
using peerID %@ from backup keybag peers: %@
SecItemBackupRestore for view %@ failed: %@
SecItemBackupRestore for view %@ succeeded
restoring view-based backup for keybag digest %@
skipping KeychainV0-tomb in view-based backups
Retrieving backup for view %@ from %@
restoring backup view %@
Can't find protected keychain; nothing to restore
restoring legacy backup
Having a bottled peer, so skipping SOS restore on this device
Can't restore legacy backup with no keybag
looking for record for silent attempt of passphrase length %lu
found preferred record: %@ from %@
no iCDP backups found!
no iCDP records found!
got error back from getAccountInfo: %@
_SecKeychainRestoreBackup() returned %ld
found backup from %@, keybag digest %@, metadataDigest %@, uuid %@
Found matching backup from this device, skipping keychain restore
Backup does not match this device's last backup uuid (%@)
attempted restore with backup = %@nil, keybag = %@nil
escrowService stingray recoverRecordWithInfo: returned: %@
=== Escrow record ===
Time of escrow: %@
Escrow version: %@
Keybag digest: %@
backup data version does not match version in escrow
Attempting recovery of record %@ with metadata: %@
escrowService recoverRecordWithRequest: returned: %@
silent attempt succeeded for record ID %@
recovery attempt succeeded for record ID %@
=== Escrow record ===
Time of escrow: %@
Escrow version: %@
Keybag digest: %@
Metadata: %@
backup keybag digest does not match version in escrow: %@
adding bottleID:%@ and validity:%@ to results; entropy present: %d (%llu bytes)
skipping setting bottle; bottleID:%@ validity:%@ entropy present: %d (%llu bytes)
Performing IDMS Recovery
escrowService iDMS recoverRecordWithRequest: returned: %@
=== Escrow record ===
Time of escrow: %@
Escrow version: %@
caching recordID %@
Performing FMIP recovery
FMiP recovery attempt successful
Performing Stingray recovery
escrowService stingray recoverRecordWithRequest: returned: %@
Using cached recovery key
silent attempt with missing cached recovery key
Performing recovery key recovery
invalid/malformed recovery key
_restoreKeychainWithBackupBag returned error: %@
platform does not support SOS
recoverOctagonUsingData() failed: %@
recoverOctagonUsingData() succeeded!
Missing cached passphrase
attempted to recover with empty passphrase
Performing silent ICDP recovery
silent attempt failed: no valid record found
Performing ICDP recovery
Performing backup keybag recovery?
Escrow recovery completed with possible error: %@
escrowService deleteRecordWithRequest: returned: %@
missing parameter: %s metadataHash, %s backOffDate, %s encodedMetadata
encodedMetadata not base64
metadata could not be decoded: %@
missing kSecureBackupClientMetadataKey
SOSCCRegisterRecoveryPublicKey(NULL) failed: %@
update metadata only supported for stingray records
attempted to update stingray metadata, with invalid parameters: %@, %@ metadata hash
Attempting to update record metadata
updateRecordMetadataWithRequest: returned: %@
attempt to set empty passphrase
error opening temp file: %s
error unlinking temp file: %s
error serializing data: %@
error truncating temp file: %s
error writing temp file: %s
writing temp file count = %ld, expected = %lu
saving uuid %@
error closing temp file: %s
fstat(%d) failed: %s
error reading temp file: %s
reading temp file count = %zd, expected = %zu
error deserializing temp file: %@
fetched uuid %@
uncaching recordID %@
escrowService startSMSChallengeWithRequest: returned: %@
escrowService getCountrySMSCodesWithRequest: returned: %@
attempted to change SMS target, but backup is not enabled
attempted to change SMS target, but not using escrow
attempted to change SMS target, with invalid parameters: %@, %@, %@nil iCloud password
escrowService changeSMSTargetWithRequest: returned: %@
beginning an HSA2 passcode request
unable to set state for token: %d
successfully set notify state for request to %d (desire immediately: %d)
Unable to cache certificate for later use: %@
unable to fetch notify token: %d
beginning an prepare HSA2 contents request: usesComplexPassphrase: %d
unable to set passcode request status back to 'not needed'
passcode request status set back to 'not needed'
record preparation requires a multiple iCSC world, so do that
record preparation requires an ICDP world, so do that
setting record DSID
prepareHSA2: Unable to make a SecEscrowRequest: %@
prepareHSA2: Unable to find a pending request: %@
prepareHSA2: Could not fetch PRK: %@
prepareHSA2: found IDMS data
prepareHSA2: found no IDMS data
prepareHSA2: Could not generate escrow record contents: %@
prepareHSA2: No cached certificate: %@
prepareHSA2: Unable to create prerecord: %@
Successfully made an escrow prerecord
prepareHSA2: Could not successfully cache escrow blob: %@
Failed to escrow account recovery data
daemonPasscodeRequestOpinion: Unable to make a SecEscrowRequest: %@
daemonPasscodeRequestOpinion: errored finding a potential request: %@
daemonPasscodeRequestOpinion: no outstanding request
daemonPasscodeRequestOpinion: found outstanding request %@
daemonPasscodeRequestOpinion: notify unable to fetch the state: %d
daemonPasscodeRequestOpinion: notify lost our state. Setting back on...
In %s
retry-after date has not passed, throttling calls to escrow proxy until %@
clearing retry-after date
redirect: current URL = %@, original URL = %@, new URL = %@, response headers = %@
start data task
%@: escrow proxy request returned
response retry after date = %@
Certificate pinning error
%s: returned error: %@
%@: starting escrow proxy request (%@)
SecItemAdd() for bypass token returned %ld
SecItemDelete() for bypass token returned %ld
SecItemCopyMatching() for bypass token returned %ld
in getAccountInfoWithRequest:
calling iCloud accountInfoRequest
Can't get iCloud environment
empty base version array for root type %u in %@ environment
empty cert version array for root type %u in %@ environment
Requesting cert for label: %@
Platform trust versions: %@
Requesting cert for versions: %@
Bailing on fetch certificates due to no cert request: %@
Fetched certificates with result: %@ %@)
unable to fetch certificate: %@
unable to fetch certificate (lakitu error): %@
fetchCertificates
fetchCertificates (duplicate)
Unable to delete previously existing certificate (this is probably okay): %d
Unable to store new escrow certificate: %d
Bailing on fetch certificates from keychain due to no cert request: %@
Unable to fetch escrow certificate: %d
Unable to deserialize escrow certificate
Cached certificate is for a different DSID than the request
Cached certificate is for a different iCloud Environment than the request
Cached certificate is for a different escrow URL than the request
Found a valid stored certificate in the keychain
Bailing record store due to no cert request: %@
Error getting cert: %@
Certificate encoding error: %@
enrollRequest dsid != %@, certResponse.dsid = %@
Creating an escrow enrollment operation
Creating an escrow update operation with 'metadata hash' %@
Error creating or validating escrow request: %@
EscrowService: Using provided prerecord
error in escrow prerecord: %@
EscrowService: Using provided escrow record contents
Failed to create escrow blob: %@
Missing bypass token (might not be hooked up in iCloud yet)
Prerecord is for a different DSID than the request
prerecord is for a different iCloud Environment than the request
Prerecord is for a different escrow URL than the request
Prerecord has no escrow blob
Error extracting public key from cert: %@
srpError: %@
dispatching to recover queue
waiting for recover group
Missing certificate data
Current Trust Version: %@; Current Cert Version: %@
Cert is newer than trust policy
Cert does not match our trust policy: %@
cert URL = %@
Unable to create SecCertificateRef from response data: %@
Error copying escrow trust policy
SecTrustCreateWithCertificates failed: %ld
Error copying root cert array
SecTrustEvaluate() trust result = %u
SecTrustEvaluate failed: %ld
Invalid trust result
SecTrustCopyProperties() = %@
SecTrustEvaluate result: %lu
Error extracting public key from certificate
createPrerecordFromCandidate: no password
createPrerecordFromCandidate: Could not generate escrow record blob: %@
Unknown numeric length of passcode?
createPrerecordFromCandidate: Successfully made an escrow blob: type: %d metadata: %@
Exception caught fetching iCloud Accounts: %@
No primary iCloud account means no PRK
Attempting to fetch the PRK from %@
Escrowing an existing PRK
No PRK found
running as uid %d, gid %d
No iCloud account yet
setting manifest hash: %@, digest: %@
SOSBSKBCopyEncoded() failed: %@
SOSBackupSliceKeyBagCreateDirect() failed: %@
CFPropertyListCreateWithDERData failed: %@
SecPasswordGenerate() failed: %@
enableWithRequest to escrow a prerecord: %@
prepareHSA2: Unable to fetch a prerecord: %@
prepareHSA2: can't deserialize prerecord
prepareHSA2: acquired prerecord
enableWithRequest to escrow a password
couldn't make record candidate: %@
SOSCCCopyMyPeerWithNewDeviceRecoverySecret() failed: %@
New self peer ID does not match escrow contents, abort
Escrow record peer ID matches peer ID at backup time
SOSPeerInfoGetPeerID() failed
New backup key digest does not match escrow contents, abort and retry
SOSCCCopyMyPeerWithNewDeviceRecoverySecret() called got peer ID: %@, backup key: %@, digest: %@
SOSPeerInfoCopyBackupKey() returned no backup public key for peer: %@
SOSPeerInfoCopyEncodedData failed: %@
OTClique initWithContextData returned w/o clique: %@
OTClique no cliqueMemberIdentifier
could not create backup bag password: %@
SOSCopyPeerID() failed: %@
Failed to get bottled peer, continuing without it: %@
Received bottle entropy for id=%@, including in escrow record
Timed out getting bottled peer, continuing without it
Including contents for bottle ID %@ (%llu bytes)
MGCopyAnswer(%@): %d
candidate can recover same views but is newer
candidate can recover same views but is not newer
candidate can recover %@
candidate cannot recover %@
candidate can recover fewer PCS views
candidate can recover more PCS views
candidate can recover fewer total views
candidate can recover more total views
candidate can recover same number of views but is newer
candidate can recover same number of views but is not newer
checking escrow record: %@ from %@
metadata containing bottle: %@
found clean record with passlen: %lu
found %@ candidate
keeping current candidate
escrow passphrase length (%lu) longer than silent attempt passphrase (%lu), skipping
escrow record not same platform, skipping
candidate not eligible: remaining attempts = %d, silent attempt %@allowed
found silent attempt record with id %@ (metadata present %@)
Our idea of the best silent metadata is: %@
No code for POSIX error: %s (%d)
invalid request: %@
srp recovery blob too large: %lu bytes
can't process recovery blob with no username
username could not be converted to cstring
srp_challenge_process failed: %d, %@
SecKeyCopyPublicBytes failed
error serializing escrow data: %@
username missing for %@ (dsid %@)
label missing for %@ (dsid %@)
Escrow data too long: %lu
Fail to parse certificate
Could not generate key: %d
could not create priv key: %@
Escrow error encrypting data (spare)
Could not create keys: %@
SecKeyCopyPublicKey() failed
Escrow error encrypting data
could not create local SRP recovery blob
Local SRP verify failed
Error decoding secret
Error deserializing data: %@
ckvr_cylon_process_blob failed
SecKey_cylon_process_blob failed
Server Start Fails (ckvr_srp_server_start_authentication)
Server Start Fails (ccsrp_server_start_authentication)
ckvr_pack_srp_init_resp failed
ckvr_unpack_clubh_recover_req_pkt failed
ckvr_srp_server_verify_session failed
ccses_unpack_clubh_recover_req_pkt failed
ccsrp_server_verify_session failed
clubh_srp_init_resp_t pkt too small: len=%lu
clubh_srp_init_resp_check_hdr failed=%d
clubh_srp_init_resp_t sect %d is malformed
clubh_recover_resp_t pkt too small: len=%lu
clubh_recover_resp_check_hdr failed=%d
clubh_recover_resp_t sect %d is malformed
clubh_recovery_rec_t pkt too small: len=%lu
clubh_recovery_rec_check_hdr failed=%d
clubh_recovery_rec_t sect %d is malformed
clubh_key_escrow_data_t pkt too small: len=%u
clubh_key_escrow_data_check_hdr failed=%d
clubh_key_escrow_data_t sect %d is malformed
clubh_recover_req_pkt_t too small: %lu
clubh_recover_req_pkt_check_hdr failed=%d
clubh_recover_req_pkt_t sect %d is malformed
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>BuildMachineOSBuild</key>
<string>18A391011</string>
<key>CFBundleDevelopmentRegion</key>
<string>en</string>
<key>CFBundleDisplayName</key>
<string>sbd</string>
<key>CFBundleExecutable</key>
<string>com.apple.sbd</string>
<key>CFBundleIdentifier</key>
<string>com.apple.sbd</string>
<key>CFBundleInfoDictionaryVersion</key>
<string>6.0</string>
<key>CFBundleName</key>
<string>com.apple.sbd</string>
<key>CFBundlePackageType</key>
<string>XPC!</string>
<key>CFBundleShortVersionString</key>
<string>1.0</string>
<key>CFBundleSignature</key>
<string>????</string>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
<key>CFBundleVersion</key>
<string>384.100.12</string>
<key>DTCompiler</key>
<string>com.apple.compilers.llvm.clang.1_0</string>
<key>DTPlatformBuild</key>
<string>11O62d</string>
<key>DTPlatformName</key>
<string>iphonesimulator</string>
<key>DTPlatformVersion</key>
<string>13.4</string>
<key>DTSDKBuild</key>
<string>17E222x</string>
<key>DTSDKName</key>
<string>iphonesimulator13.4.internal</string>
<key>DTXcode</key>
<string>1140</string>
<key>DTXcodeBuild</key>
<string>11O62d</string>
<key>MinimumOSVersion</key>
<string>13.4</string>
<key>NSHumanReadableCopyright</key>
<string>Copyright 
 2015 Apple, Inc. All rights reserved.</string>
<key>UIDeviceFamily</key>
<array>
<integer>1</integer>
</array>
</dict>
</plist>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>application-identifier</key>
<string>com.apple.sbd</string>
<key>com.apple.accounts.appleaccount.fullaccess</key>
<true/>
<key>com.apple.accounts.idms.fullaccess</key>
<true/>
<key>com.apple.authkit.client.internal</key>
<true/>
<key>com.apple.developer.ubiquity-kvstore-identifier</key>
<string>com.apple.sbd3</string>
<key>com.apple.escrowservice.access</key>
<true/>
<key>com.apple.keystore.access-keychain-keys</key>
<true/>
<key>com.apple.managedconfiguration.profiled-access</key>
<true/>
<key>com.apple.mkb.usersession.info</key>
<true/>
<key>com.apple.mkb.usersession.securebackup</key>
<true/>
<key>com.apple.private.MobileGestalt.AllowedProtectedKeys</key>
<array>
<string>UniqueDeviceID</string>
</array>
<key>com.apple.private.escrow-update</key>
<true/>
<key>com.apple.private.iaaccounts</key>
<true/>
<key>com.apple.private.keychain-backup-client</key>
<true/>
<key>com.apple.private.octagon</key>
<true/>
<key>com.apple.private.octagon.escrow-content</key>
<true/>
<key>com.apple.private.ubiquity-additional-kvstore-identifiers</key>
<array>
<string>com.apple.sbd.emcs</string>
</array>
<key>keychain-access-groups</key>
<array>
<string>com.apple.sbd</string>
<string>com.apple.lakitu</string>
</array>
<key>keychain-cloud-circle</key>
<true/>
<key>platform-application</key>
<true/>
<key>restore-keychain</key>
<true/>
</dict>
</plist>
