HMBPBO.dmc
HMBPBO.rmc
HMBPBO.dca
HMBPBO.r
HMBPBO.qos
HMBPBO.enqueue
HMBPBO.mn
HMBPBO.mi
HMBPBO.m
HMBPBO.label
HMBPBO.mp
Disallow Model Creation
Require Model Creation
Disallow Cellular
Roll Back
Enqueue Mirror Output
Label
Message Identifier
Message Name
Detail
Parent
<NO LOCK>
@"HMBSQLStatementQueryPlanTuple"16@?0@"NSArray"8
EXPLAIN QUERY PLAN 
lock
rebuilderStatus
subscriptionsData
needsZoneDeletion
needsZoneCreation
zoneID
share
_sequence_offset
You must override %@ in a subclass
HMBUI.dc
HMBUI.czi
HMBUI.c
HMBUI.t
HMBUI.u
Date Created
Cloud Zone ID
Context
Token
Share URL
HMBShareInvitation
v24@?0@"CKAccountInfo"8@"NSError"16
Check manatee availability
@"HMFTimer"24@?0d8Q16
CloudCredentialsAvailabilityListener
Options Data
<not nil>
<nil>
Type
zoneRowBindOffset != ((void *)0)
<RowItem: %lu  eid: %@  ed: %@  encoding: %lu data: %@>
model
__processRecords
v24@?0@"HMBMirrorOutputResult"8@"NSError"16
update/insert
delete
%lu/%lu
Zone Row
Block Row
HMBLocalSQLContextInputBlock.%@
HMBLocalSQLContextInputBlock
Zone ID
HMBCloudZoneRebuilderModel
HMBCloudZoneShareParticipantModel
HMBCloudZoneShareModel
modelContainer
v24@?0@8@"NSError"16
HMBCloudZone Startup Fetch
HMBCloudZone First Fetch
parent_record
ebl01
ebl00
sa01
sa00
_database
state
cloudDatabase
CloudZone
v32@?0@"CKRecordID"8@"NSError"16^B24
success
failed with error: %@
deferred
v16@?0@"NSArray"8
v24@?0@"CKRecord"8@"NSError"16
about to remove: %@
about to update: %@
single-part push: %@
com.apple.willowd
Default Operation Configuration
Manatee Container
Bundle ID
Container ID
containerID
Mirror Output
Options
Model
options
Cannot create a direct instance of %@. Use a subclass instead
v32@?0@"HMBSQLQueryStatement"8Q16^B24
self.finalized == __objc_no
self.finalized != __objc_no
v32@?0@8Q16^B24
v32@?0@"NSString"8Q16^B24
v32@?0@"HMBModelQuery"8Q16^B24
SELECT _record_id, %@ FROM %@ WHERE _store_id = :_store_id AND _record_id > :_sequence_offset ORDER BY _record_id LIMIT (%lu)
INSERT OR REPLACE INTO %@ (_store_id, _record_id, %@) values(?1, ?2, %@)
DELETE FROM %@ where _record_id=?1
DELETE FROM %@ WHERE _store_id=?1
?%lu
CREATE INDEX IF NOT EXISTS %@ ON %@ (%@)
CREATE INDEX IF NOT EXISTS %@ ON %@ (_store_id, _record_id)
DROP INDEX %@
@16@?0@"HMBModelQuery"8
CREATE UNIQUE INDEX IF NOT EXISTS %@ ON %@ (_store_id, _record_id);
qu_%@
CREATE TABLE %@ (%@, CONSTRAINT fk_%@ FOREIGN KEY (_record_id) REFERENCES record_v2 (id) ON DELETE CASCADE);
DELETE FROM index_sentinel WHERE type = '%@';
DROP TABLE IF EXISTS %@;
%@ BLOB
_record_id INTEGER NOT NULL
_store_id  INTEGER NOT NULL REFERENCES store_v2 (id) ON DELETE RESTRICT
queryable_%@
modelField
<HMBLocalZone: %@/%@>
@16@?0#8
Cannot update a model with a nil hmbModelID or hmbParentModelID
info
LocalZone
Message
Rebuild State
Key Status
ZCRS.se
ZCRS.m
Invalid
In Progress
<UNKNOWN %lu>
Startup
Lost Key
Beginning Zone Recreate Delay
Wating Before Zone Recreate
Zone Recreate
Monitor Upload
State Upload
Complete
modelTypeBindOffset != ((void *)0)
v24@?0@"HMBLocalSQLContextRowRecord"8^B16
<HMBLocalZoneIDUnshared: %@>
HMBLocalZoneIDUnshared
v@:@
Property for parameter %@ was supplied as %@, but was expected to be <UNKNOWN>.
Property for parameter %@ was supplied as %@, but was expected to be %@.
%@.%@/%@
@"NSString"16@?0@"NSString"8
B16@?0@"NSString"8
 (override)
  %@%@%@: %@
 (read-only)
 (default)
  version: %@%s
<UNSET>
  parent: %@
  uuid: %@
%@:%@
 (inferred)
%@/%@
<%@ uuid:%@ version:%@>
v32@?0@"NSString"8@16^B24
  %@ (read-only) (unsupported): %@
  version: %@
values: (%@%@)
@"NSData"24@?0@"NSString"8@"HMFVersion"16
/%@ (property could not be validated): %@
message
Cannot encode value of type %@ for property '%@' requring NSObject type
hmbDataVersion must be set prior to encoding
hmbModelID and hmbParentModelID must be set prior to encoding
errorText
pathStack
(key must be of string type (is %@))
[%lu]
(%@ not a valid type within an aggregate type)
container
expecting internal storage to be a NSData, but it's a %@
@"HMFVersion"24@?0@"NSString"8@"NSData"16
decoded
<NULL>
<NSData: %@>
<NSDictionary: %lu items>
<NSArray: %lu items>
Record
551E3F88-0C11-4402-A486-6D1EB759AADD
shouldLogPrivateInformation
HMBShareUserID.CodingKey.UserRecordID
userRecordID
HMBShareUserID
encodingContext
HMB.d
HMB.u
Download Streaming Asset
Upload Streaming Asset
<%lu.%@>
<%lu: %@>
-[HMBCloudDatabase(CKCode) peformCodeOperationWithServiceName:functionName:request:responseClass:]
v24@?0@"PBCodable<CKCodeOperationMessageMutation>"8@"NSError"16
v16@?0@"CKRequestInfo"8
Rebuild Complete Fetch.
Waiting for a rebuild.
Going to try to rebuild again.
Failed recovery push with error (entering back into Holdoff): %@
Failed recovery push due to conflicts.
Failed recovery push with error: %@
Successfully completed recovery.
v24@?0@"CKRecord"8^B16
Iteration of rows failed: %@
<NON-NULL>
operationQueue
localZone
cloudZone
Failed to fetch rebuild model with non-zone related failure: %@
Zone appears removed by the user.
Unable to fetch rebuild model: %@
Failed to acquire lock due to sentinel model push failure: %@
Acquired zone lock for rebuild.
localCloudZone
Lost pointer to cloudDatabase
Lost pointer to cloudZone
self
v16@?0@"HMBCloudZoneRebuilderModel"8
Continue monitoring of upload (token change %@ -> %@)
Rebuild found complete at start of check lock acquire.
Preparing to begin lock acquisition.
Delaying rebuild for %lu usec
Watchdog fired while monitoring the upload.
Change observed in sentinel %@ -> %@
No change observed in sentinel.
Sentinel has been marked as complete.
Failed to monitor sentinel due to error: %@
Failed to find sentinel model.
Attempting to acquire lock on zone.
Received notification that zone has lost keys.
Unable to push sentinel model due to some other issue. Letting startup continue normally.
Don't have keys, waiting for someone else to rebuild the zone.
Came up in Manatee Key Loss. Going to try to blow things away and fix them.
Startup with completed sentinel model.
Startup with missing manatee key.
Not starting up as a mirror. Ignoring rebuild steps.
Rebuilder has not been started up yet.
ZoneRebuilder
should conform to HMBModelObjectCoder (but storage class for property %@ does not)
underlyingError
Failed to encode value %@ for property '%@': %@
Cannot encode value of type %@ for property '%@' because it does not conform to HMBModelObjectCoder
remapped (or explicit map) is not a subclass of HMBModel (%@ is not a sub-class of HMBModel)
inMirror
inLocalZone
expecting a versioning key named %@ but one does not exist
0.0.0
[modelClass isSubclassOfClass:[HMBModel class]]
1.0.0
4.0.0
ModelContainer
4C636B6B-9784-4D02-9E47-5A5259B3BAF2
hasCompleted
uniqueToken
Lost key on shared zone.
Zone believed to be functional.
HMBCID.s
HMBCID.c
HMBCID.n
HMBCID.m
759390E3-198F-48EB-AD00-31296DACBBA6
Model ID
Name
%@.%@.%@
participant
Conflicted record resolution
v32@?0@"HMBCloudZoneConflict"8Q16^B24
Ancestor Record: %@
Server Record: %@
Client Record: %@
@"NAFuture"16@?0@"CKShareMetadata"8
@"HMBLocalZone"48@?0@"HMBLocalDatabase"8@"<HMBLocalZoneID>"16Q24@"HMBLocalZoneConfiguration"32@"<HMBMirrorProtocol>"40
com.apple.homed.hmbmanager.%@
HMBLocalDatabase
@"NAFuture"16@?0@"HMBProcessingResult"8
@"NAFuture"16@?0@"HMBCloudZonePullResult"8
failed (commit).
v44@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24B32@"NSError"36
v24@?0@"CKRecordID"8@"NSString"16
v16@?0@"CKRecord"8
failed mirror input creation
%s (%@)
Container
updating zone: %@
Record Zone APS Notification
Database APS Notification
v24@?0@"NSNumber"8^B16
Fetch due to Subscription Push
v24@?0@"NSNull"8@"NSError"16
__administrativeFetch_block_invoke
v32@?0@"HMBCloudZoneID"8@"HMBCloudZoneStateModel"16^B24
v16@?0@"NSSet"8
v24@?0@"HMBCloudZoneID"8^B16
starting process of results.
v24@?0@"NSArray"8@"NSError"16
DBChangeSubscription
v24@?0@"NSString"8@"NSError"16
A089A5B9-6D32-4A0E-B611-0492B7D9F3D5
configuration
localDatabase
@"HMBCloudZone"32@?0@"HMBCloudDatabase"8@"HMBCloudZoneConfiguration"16@"HMBCloudZoneStateModel"24
_sharedDatabaseState
_privateDatabaseState
_publicDatabaseState
zoneStateModels
databaseStateModelsByScope
stateZone
CloudDatabase
__modifyRecordZoneOperation
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
v32@?0@"CKRecordZoneID"8@"NSError"16^B24
__fetchAllCloudZones
@"HMBCloudZoneID"16@?0@"CKRecordZoneID"8
_store_id
_model_type
<HMBQueryEncoder: %@ / %lu %@>
modelClassNameOffset != ((void *)0)
parentModelIDOffset != ((void *)0)
_parent_uuid
modelClassNameOffset
_type
parentModelIDOffset
v32@?0@"HMBLocalZoneQueryResultColumnTuple"8Q16^B24
v16@?0@8
operation.future
Share Operation Retry
HMBShareOperation
HMBShareOperationErrorDomain
HMBSQLStatement.explainStatements
<HMBModelUnindexedQuery class: %@ query: '%@'>
Unknown
v32@?0@"NSString"8@"HMBModelQueryArgument"16^B24
The query's argument dictionary contains an argument named '%@' which does not exist as an argument in the query statement's SQL: %@
v32@?0@"NSString"8@"NSNumber"16^B24
The query statement's SQL contains an argument for a property named '%@' which does not exist as a property on %@: %@
The query statement's SQL contains an argument named '%@' which does not exist as an argument in the query's argument dictionary: %@
Failed to prepare statement: %@
SELECT %@ FROM queryable_%@ %@
self.modelClass == modelClass
encodedArgumentValueOrNull
argumentField
statement
_record_id
WHERE %@ AND _store_id = :_store_id %@ LIMIT (%lu)
AND _record_id < :_sequence_offset ORDER BY _record_id DESC
AND _record_id > :_sequence_offset ORDER BY _record_id ASC
hasAnyStatements
v32@?0@"HMBSQLStatementQueryPlanTuple"8Q16^B24
B16@?0@"HMBSQLStatementQueryPlanTuple"8
INDEX %@
qi_%@_%@
indexedColumns
sequenceArgument
qf_%@_%@
maximumRowsReturned
WHERE _store_id = :_store_id AND %@ LIMIT (%lu)
[sequenceArgument.propertyName isEqualToString:indexedProperties.lastObject]
WHERE _store_id = :_store_id AND %@
count('X')
WHERE _store_id = :_store_id AND %@ LIMIT (1)
External Data
External ID
Query Table
Record Row
Output Block Row
<HMBLocalZoneOutputRecords: %lu options: %@>
v32@?0@"HMBLocalSQLContextRowRecord"8Q16^B24
HMB.m
<MALFORMED UUID: %@>
cloudZoneEncodingContext
Action
none
validate
<unknown %lu>
Reference
HMB.r
HMB.a
HMBUIC.li
HMBUIC.sgwa
HMBUIC.pci
Lookup Info
Should Grant Write Access
User Client Identifier
Previous Model
previousModel
@"NAFuture"16@?0@"NSSet"8
recordIDs
recordID
models
modelIDs
modelID
v32@?0@"NSNumber"8@16^B24
@"NAFuture"16@?0@"NSDictionary"8
@"CKRecord"16@?0@"CKRecordID"8
@"NSSet"16@?0@"HMBCloudZoneFetchRecordsContext"8
__fetchRecordsWithRecordIDs
succeeded
Push Block Row
Push Data
Push Encoding
Model Type
Model Schema
Model Data
Model Encoding
Updating rebuild state for zone %@: %@
HMBCZID.z
C8AE15D1-FA59-4811-8437-6F8BE2815E1E
FDB10518-1C8B-440B-837E-489902B4E477
E0AF74A3-368B-4E7B-B4B8-131073EAA5A9
%@.%@.%@/%@
[zoneID.ownerName isEqualToString:CKCurrentUserDefaultName] == __objc_no
modelID != ((void *)0)
name != ((void *)0)
scope != 0
zoneID != ((void *)0)
containerID != ((void *)0)
ZoneSubscription_%@.%@.%@%@
DBSubscription_%@.%@%@
__fetchSubscriptions
__performCloudPush
v24@?0@"HMBCloudZonePushResult"8@"NSError"16
v16@?0@"HMBCloudZoneRecordPushResult"8
v16@?0@"HMBProcessingResult"8
Post-process: %@
push mark as completed failed: %@
updating record %@
v32@?0@"NSString"8@"HMBModelField"16^B24
cloud push chunk failed: %@
__pushWithRecovery_block_invoke
v32@?0@"CKRecordID"8@"HMBCloudZoneConflict"16^B24
v24@?0@"HMBModel"8^B16
tableContext == self.sql
table
Q16@?0@"NSDictionary"8
com.apple.homed.aps
v16@?0@"<HMBCloudPushObserver>"8
com.apple.icloud-container.
CloudPushHandler
committing block.
HMBLocalSQLContextOutputBlock.%@
HMBLocalSQLContextOutputBlock
Rebuild
@"NAFuture"16@?0@"HMBCloudZoneRecordPushResult"8
B16@?0@"CKRecord"8
@"NAFuture"16@?0@"NSNull"8
Full re-fetch for missing share model
Leave Cloud Share
@"NAFuture"8@?0
Create Share Model
@"NAFuture"16@?0@"CKShare"8
@"NSString"16@?0@"CKShareParticipant"8
Delete extraneous participant models
@"HMBShareParticipant"16@?0@"HMBCloudZoneShareParticipantModel"8
v24@?0@"HMBCloudZoneShareParticipantModel"8^B16
@"NSUUID"16@?0@"HMBCloudZoneShareModel"8
Revoke Share
B16@?0@"CKShareParticipant"8
Set Write Access Enabled
@"NAFuture"16@?0@"CKShareParticipant"8
Fetch Invitation
Fetch Cloud Share ID For Client Identifier
Fetch Current Participant Cloud Share ID
Fetch Owner Participant Cloud Share ID
serverChangeToken
[%@]
<%@, %@>
v24@?0#8^B16
v24@?0@"NSString"8^B16
v32@?0@"NSString"8@"HMBLocalSQLContextQueryTable"16^B24
v32@?0@"NSString"8@"HMBLocalSQLContextQueryIndex"16^B24
SELECT master.tbl_name, master.name, index_info.seqno, index_info.name FROM sqlite_master AS master, PRAGMA_INDEX_INFO(master.name) AS index_info WHERE master.type = 'index' AND master.tbl_name like 'queryable_%' ORDER BY master.tbl_name, master.name, index_info.seqno
SELECT master.name, table_info.name, table_info.type, master.sql FROM sqlite_master AS master, PRAGMA_TABLE_XINFO(master.name) AS table_info WHERE master.name LIKE 'queryable%' ORDER BY master.name, table_info.name
v32@?0@"NSString"8@"NSMutableDictionary"16^B24
v32@?0@"NSString"8@"NSArray"16^B24
v32@?0@"NSArray"8Q16^B24
columnName != ((void *)0)
columnSequence != ((void *)0)
thisIndex
thisTable
@24@?0@"NSString"8@"NSSet"16
FOREIGN KEY (_record_id) REFERENCES record_v2 (id) ON DELETE CASCADE
CONSTRAINT fk_queryable_
BLOB
thisType
thisColumn
__fetchUserRecord
v24@?0@"NSDictionary"8@"NSError"16
v32@?0@"CKRecord"8@"CKRecordID"16@"NSError"24
finished
__acceptInvitation
v16@?0@"NSError"8
v32@?0@"CKShareMetadata"8@"CKShare"16@"NSError"24
__fetchShareMetadata
v32@?0@"NSURL"8@"CKShareMetadata"16@"NSError"24
__fetchParticipant
v16@?0@"CKShareParticipant"8
Zone Name
%@/%lu
inputBlock
HMBLocalZoneInput
@"NSUUID"16@?0@"HMBLocalSQLContextRowRecord"8
B16@?0@"NSError"8
@"NSString"24@?0@"<NSCopying>"8@16
%@ : %@
<%lu bytes>
1.2.11
encodedOPACK
%@.%@
Validate
None
<UNKNOWN: %lu>
DeleteSelf
%@/%@/%@/%@/%@
data
<NULL STRING>
<MALFORMED NUMBER: %@>
<MALFORMED INTERVAL: %@>
decodedOPACK
__performCloudPull
v28@?0@"CKServerChangeToken"8B16@"NSError"20
v16@?0@"CKRecordZoneID"8
HM.encoding
HM.device
HM.type
HM.modelID
HM.parentModelID
k%02lu
ReadOnly
BEGIN;
COMMIT;
ROLLBACK;
column %ld is of SQLite3 type %ld (not recognized)
bind parameter %s is not of a recognized type %@ is not a (NSNull, NSData, NSString, or NSNumber)
statement cannot contain nameless parameters (%ld is nameless)
text
extcode
PRAGMA user_version = %ld;
_finalized == __objc_no
PRAGMA foreign_keys = ON;
PRAGMA user_version;
PRAGMA journal_mode=WAL;
memory
-wal
-shm
:memory:
_finalized
NULL SQLite3 error for status
NULL SQLite3 error for statement
NULL SQLite3 statement
NULL SQLite3 error for context
NULL statement
v32@?0@"NSArray"8@"<HMBSearchableEntry>"16^B24
@"NSError"16@?0@"HMBLocalSQLContext"8
DELETE FROM transaction_v2
DELETE FROM record_v2
DELETE FROM block_v2
DELETE FROM index_sentinel
DELETE FROM store_v2
SELECT name FROM sqlite_master WHERE type = 'table'
record_v2
transaction_v2
block_v2
store_v2
v32@?0@"NSString"8@"HMBLocalSQLQueryTable"16^B24
SELECT name FROM sqlite_master WHERE type = 'table' and name in ('zone_v2', 'zone_subscription_v2', 'db_subscription_v2', 'fetch_v2', 'queue_v2', 'scoreboard_v2', 'xact_v2', 'xact_block_v2')
CREATE INDEX IF NOT EXISTS record_v2_store_external ON record_v2 (store_v2_id, external_id);
CREATE INDEX IF NOT EXISTS record_v2_store_type_parent_uuid ON record_v2 (store_v2_id, parent_uuid, type);
CREATE INDEX IF NOT EXISTS record_v2_store_parent_uuid ON record_v2 (store_v2_id, parent_uuid);
CREATE INDEX IF NOT EXISTS record_v2_store_uuid ON record_v2 (store_v2_id, uuid);
CREATE INDEX IF NOT EXISTS record_v2_store ON record_v2 (store_v2_id);
CREATE INDEX IF NOT EXISTS record_v2_push_id ON record_v2 (push_block_id, id);
CREATE INDEX IF NOT EXISTS transaction_v2_block_id ON transaction_v2 (block_id, id);
CREATE INDEX IF NOT EXISTS block_v2_store_type ON block_v2 (store_v2_id, type, id);
CREATE UNIQUE INDEX IF NOT EXISTS record_v2_uuid_store_v2_id_ukey ON record_v2 (store_v2_id, uuid);
CREATE UNIQUE INDEX IF NOT EXISTS record_v2_external_store_v2_id_ukey ON record_v2 (store_v2_id, external_id);
CREATE UNIQUE INDEX IF NOT EXISTS transaction_v2_ukey ON transaction_v2 (store_v2_id, type, external_id);
CREATE TABLE IF NOT EXISTS record_v2 (                              id                  INTEGER PRIMARY KEY AUTOINCREMENT,                store_v2_id         INTEGER NOT NULL CONSTRAINT record_v2_group_id_fkey REFERENCES store_v2 (id) ON DELETE RESTRICT,             uuid                BLOB    NOT NULL,                                 parent_uuid         BLOB    NOT NULL,                                 type                TEXT,                                             model_schema        BLOB,                                             external_id         BLOB,                                             external_data       BLOB,                                             model_encoding      INTEGER NOT NULL,                                 model_data          BLOB,                                             push_encoding       INTEGER NOT NULL,                                 push_data           BLOB,                                             push_block_id       INTEGER CONSTRAINT record_v2_block_v2_fkey REFERENCES block_v2 (id) ON DELETE RESTRICT             );
CREATE TABLE IF NOT EXISTS transaction_v2 (                         id                  INTEGER PRIMARY KEY AUTOINCREMENT,                store_v2_id         INTEGER NOT NULL CONSTRAINT fetch_store_v2_id_fkey REFERENCES store_v2 (id) ON DELETE RESTRICT,             block_id            INTEGER NOT NULL CONSTRAINT transaction_v2_block_v2_id_fkey REFERENCES block_v2 (id) ON DELETE RESTRICT,             type                INTEGER NOT NULL,                                 external_id         BLOB    NOT NULL,                                 external_data       BLOB,                                             model_encoding      INTEGER NOT NULL,                                 model_data          BLOB                                              );
CREATE TABLE IF NOT EXISTS block_v2 (                               id                  INTEGER PRIMARY KEY AUTOINCREMENT,                store_v2_id         INTEGER NOT NULL CONSTRAINT fetch_store_v2_id_fkey REFERENCES store_v2 (id) ON DELETE RESTRICT,             type                INTEGER NOT NULL,                                 options_data        BLOB                                              );
CREATE TABLE IF NOT EXISTS store_v2 (                               id                  INTEGER PRIMARY KEY AUTOINCREMENT,                label               STRING  NOT NULL,                                 identifier_data     BLOB UNIQUE NOT NULL,                             replication_data    BLOB                                              );
xact_block_v2
xact_v2
scoreboard_v2
queue_v2
fetch_v2
db_subscription_v2
zone_subscription_v2
zone_v2
INSERT INTO store_v2 (label, identifier_data, replication_data) VALUES (?1, ?2, ?3)
DELETE FROM store_v2 WHERE id=?1;
SELECT id, label, identifier_data, replication_data FROM store_v2 WHERE id=?1;
SELECT id, label, identifier_data, replication_data FROM store_v2;
UPDATE store_v2 SET replication_data=?2 WHERE id=?1;
INSERT INTO block_v2 (store_v2_id, type) VALUES (?1, ?2);
SELECT id, type, options_data FROM block_v2 WHERE id=?1;
DELETE FROM block_v2 WHERE id=?1;
DELETE FROM block_v2 WHERE store_v2_id=?1;
UPDATE block_v2 SET options_data=?2 WHERE id=?1;
SELECT id, options_data FROM block_v2 WHERE store_v2_id=?1 AND type=?2 AND options_data IS NOT NULL ORDER BY id;
DELETE FROM block_v2 WHERE store_v2_id=?1 AND options_data IS NULL;
INSERT INTO transaction_v2 (store_v2_id, block_id, type, external_id, external_data, model_encoding, model_data) VALUES (?1, ?2, ?3, ?4, ?5, ?6, ?7);
INSERT INTO transaction_v2 (store_v2_id, block_id, type, external_id, model_encoding, model_data) SELECT ?1, ?2, ?3, COALESCE(external_id, randomblob(16)), 0, uuid FROM record_v2 WHERE store_v2_id = ?1 AND type = ?4 AND model_data IS NOT NULL;
INSERT INTO transaction_v2 (store_v2_id, block_id, type, external_id, model_encoding, model_data) SELECT ?1, ?2, ?3, COALESCE(external_id, randomblob(16)), 0, uuid FROM record_v2 WHERE store_v2_id = ?1 AND uuid = ?4 AND model_data IS NOT NULL;
INSERT INTO transaction_v2 (store_v2_id, block_id, type, external_id, model_encoding, model_data) SELECT ?1, ?2, ?3, COALESCE(external_id, randomblob(16)), 0, uuid FROM record_v2 WHERE store_v2_id = ?1 AND parent_uuid = ?4 AND model_data IS NOT NULL;
INSERT OR REPLACE INTO transaction_v2 (store_v2_id, block_id, type, external_id, external_data, model_encoding, model_data) VALUES (?1, ?2, ?3, ?4, ?5, ?6, ?7);
DELETE FROM transaction_v2 WHERE id=?1;
DELETE FROM transaction_v2 where block_id=?1;
DELETE FROM transaction_v2 WHERE store_v2_id=?1;
DELETE FROM transaction_v2 WHERE store_v2_id=?1 AND type=?2 AND external_id=?3;
SELECT id, external_id, external_data, model_encoding, model_data FROM transaction_v2 WHERE  block_id=?1 AND id>?2 ORDER BY id LIMIT ?3;
SELECT id, external_id, external_data, model_encoding, model_data FROM transaction_v2 WHERE  block_id=?1;
DELETE FROM transaction_v2 WHERE block_id IN (SELECT id FROM block_v2 WHERE store_v2_id=?1 AND options_data IS NULL)
DELETE FROM transaction_v2 WHERE block_id IN (SELECT id FROM block_v2 WHERE store_v2_id=?1 AND type=?2 AND options_data IS NULL)
INSERT INTO record_v2                                         (store_v2_id, external_id, external_data, uuid, parent_uuid, type, model_encoding, model_data, model_schema, push_encoding, push_data, push_block_id)                                         VALUES (?1, ?2, ?3, ?4, ?5, ?6, ?7, ?8, ?9, ?10, ?11, ?12);
UPDATE record_v2 SET model_encoding=?2, model_data=?3, model_schema=?4 WHERE id=?1
UPDATE record_v2 SET external_id=?2, external_data=?3 WHERE id=?1
UPDATE record_v2 SET external_data=?3 WHERE store_v2_id=?1 AND external_id=?2
UPDATE record_v2 SET external_data=?3 WHERE store_v2_id=?1 AND uuid=?2
UPDATE record_v2 SET push_encoding = ?2, push_data = ?3, push_block_id = ?4 WHERE id = ?1;
UPDATE record_v2 SET push_encoding = ?3, push_data = ?4, push_block_id = ?5 WHERE store_v2_id = ?1 AND uuid=?2;
UPDATE record_v2 SET push_encoding = 0, push_data = NULL, push_block_id = NULL WHERE id=?1 AND push_block_id=?2;
UPDATE record_v2 SET push_encoding = 0, push_data = NULL, push_block_id = NULL WHERE push_block_id=?1
UPDATE record_v2 SET type = ?2, model_schema = ?3 WHERE id = ?1
DELETE FROM record_v2 WHERE id=?1;
DELETE FROM record_v2 WHERE id=?1 and push_block_id=?2;
DELETE FROM record_v2 WHERE store_v2_id=?1 AND uuid=?2;
DELETE FROM record_v2 WHERE store_v2_id=?1 AND external_id=?2;
DELETE FROM record_v2 WHERE store_v2_id=?1;
DELETE FROM record_v2 WHERE store_v2_id = ?1 AND (model_encoding = 0 OR model_data IS NULL) AND (push_block_id IS NULL OR push_block_id NOT IN (SELECT id FROM block_v2))
SELECT uuid FROM record_v2 WHERE store_v2_id=?1 AND external_id=?2
SELECT record_v2.id, record_v2.external_id, record_v2.external_data, record_v2.model_encoding, record_v2.model_data, record_v2.model_schema, record_v2.type, record_v2.push_encoding, record_v2.push_data, record_v2.push_block_id, record_v2.uuid FROM record_v2 WHERE push_block_id=?1
SELECT record_v2.id, record_v2.external_id, record_v2.external_data, record_v2.model_encoding, record_v2.model_data, record_v2.model_schema, record_v2.type, record_v2.push_encoding, record_v2.push_data, record_v2.push_block_id, record_v2.uuid FROM record_v2 WHERE store_v2_id=?1 and uuid=?2
SELECT record_v2.id, record_v2.external_id, record_v2.external_data, record_v2.model_encoding, record_v2.model_data, record_v2.model_schema, record_v2.type, record_v2.push_encoding, record_v2.push_data, record_v2.push_block_id, record_v2.uuid FROM record_v2 WHERE store_v2_id=?1 and external_id=?2
SELECT record_v2.id, record_v2.external_id, record_v2.external_data, record_v2.model_encoding, record_v2.model_data, record_v2.model_schema, record_v2.type, record_v2.push_encoding, record_v2.push_data, record_v2.push_block_id, record_v2.uuid FROM record_v2 WHERE store_v2_id=?1 and parent_uuid=?2
SELECT record_v2.id, record_v2.external_id, record_v2.external_data, record_v2.model_encoding, record_v2.model_data, record_v2.model_schema, record_v2.type, record_v2.push_encoding, record_v2.push_data, record_v2.push_block_id, record_v2.uuid FROM record_v2 WHERE store_v2_id=?1 and type=?2
SELECT record_v2.id, record_v2.external_id, record_v2.external_data, record_v2.model_encoding, record_v2.model_data, record_v2.model_schema, record_v2.type, record_v2.push_encoding, record_v2.push_data, record_v2.push_block_id, record_v2.uuid FROM record_v2 WHERE store_v2_id=?1 AND parent_uuid=?3 AND type=?2
SELECT record_v2.id, record_v2.external_id, record_v2.external_data, record_v2.model_encoding, record_v2.model_data, record_v2.model_schema, record_v2.type, record_v2.push_encoding, record_v2.push_data, record_v2.push_block_id, record_v2.uuid FROM record_v2 WHERE store_v2_id=?1
SELECT record_v2.id, record_v2.external_id, record_v2.external_data, record_v2.model_encoding, record_v2.model_data, record_v2.model_schema, record_v2.type, record_v2.push_encoding, record_v2.push_data, record_v2.push_block_id, record_v2.uuid FROM record_v2 WHERE id=?1
INSERT INTO index_sentinel (store_id, type) VALUES(?1, ?2);
DELETE FROM index_sentinel WHERE type = ?1;
DELETE FROM index_sentinel WHERE store_id = ?1;
SELECT COUNT('X') FROM index_sentinel WHERE store_id = ?1 and type = ?2;
SELECT record_v2.id, record_v2.external_id, record_v2.external_data, record_v2.model_encoding, record_v2.model_data, record_v2.model_schema, record_v2.type, record_v2.push_encoding, record_v2.push_data, record_v2.push_block_id, record_v2.uuid FROM record_v2 WHERE store_v2_id=:_store_id AND parent_uuid=:_parent_uuid AND type == :_type AND id>:_sequence_offset ORDER BY id LIMIT (%lu)
SELECT record_v2.id, record_v2.external_id, record_v2.external_data, record_v2.model_encoding, record_v2.model_data, record_v2.model_schema, record_v2.type, record_v2.push_encoding, record_v2.push_data, record_v2.push_block_id, record_v2.uuid FROM record_v2 WHERE store_v2_id=:_store_id AND parent_uuid=:_parent_uuid AND id>:_sequence_offset ORDER BY id LIMIT (%lu)
SELECT record_v2.id, record_v2.external_id, record_v2.external_data, record_v2.model_encoding, record_v2.model_data, record_v2.model_schema, record_v2.type, record_v2.push_encoding, record_v2.push_data, record_v2.push_block_id, record_v2.uuid FROM record_v2 WHERE store_v2_id=:_store_id AND type=:_model_type AND id>:_sequence_offset ORDER BY id LIMIT (%lu)
SELECT record_v2.id, record_v2.external_id, record_v2.external_data, record_v2.model_encoding, record_v2.model_data, record_v2.model_schema, record_v2.type, record_v2.push_encoding, record_v2.push_data, record_v2.push_block_id, record_v2.uuid FROM record_v2 WHERE store_v2_id=:_store_id AND id>:_sequence_offset ORDER BY id LIMIT (%lu)
SELECT id, type, options_data FROM block_v2 WHERE store_v2_id=:_store_id AND id<=:_sequence_offset AND type=3 ORDER BY id DESC LIMIT (%lu)
SELECT id, type, options_data FROM block_v2 WHERE store_v2_id=:_store_id AND id>:_sequence_offset AND (type=1 OR type=2) AND options_data IS NOT NULL ORDER BY id LIMIT (%ld)
@"NSError"16@?0@"HMBSQLContext"8
HMBLocalSQLContext
^%@(?:|-shm|-wal)(\..*)?$
HMBLZR.token
HMBLZR.name
HMBLocalZoneIDRow
@"NSError"24@?0^{sqlite3_stmt=}8^B16
@"NSError"16@?0^{sqlite3_stmt=}8
lastAdministrativeFetch
cloudID
HMBUI.pi
HMBUI.ci
HMBUI.cksp
Pending Invitation
Client Identifier
CK Share Participant
self.descriptionBlock
self.decodeBlock
self.encodeBlock
[value isKindOfClass:self.classObj]
 unavailableVersion: %@
 readonlyVersion: %@
 defaultValue: %@
 loggingVisibility: %ld
 recordField: %@
 optional: YES
<HMBModelField class: %@
[classObj conformsToProtocol:@protocol(CKRecordValue)]
(self.externalRecordField != ((void *)0))
@"NSString"16@?0@"NSData"8
@16@?0@"NSData"8
@"NSData"16@?0@8
default
redacted
debug
internallyRedacted
v16@?0@"NSNull"8
v8@?0
B16@?0@"CKDatabaseSubscription"8
self.initialCloudSyncFuture.isFinished
zoneState
B16@?0@"CKRecordZoneSubscription"8
Not unregistering zone subscription %@ because it is not in our list of existing subscriptions: %@
@"NSString"16@?0@"CKRecordZoneSubscription"8
v16@?0@"NAPromise"8
__modifySubscriptions
CREATE TABLE IF NOT EXISTS index_sentinel (                  store_id            INTEGER NOT NULL, type                TEXT NOT NULL, CONSTRAINT fk_index_sentinel FOREIGN KEY (store_id) REFERENCES store_v2 (id) ON DELETE CASCADE);
CREATE UNIQUE INDEX IF NOT EXISTS index_sentinel_unique ON index_sentinel (store_id, type);
%{public}@Deallocation called on %s without finalize.
%{public}@Unable to explain statement '%@': %@
%{public}@Unable to prepare SQL statement '%@': %@
%{public}@Prepared SQL statement: %s
%{public}@Failed to decode record from external data %@: %@
%{public}@Received -[rebuild] on a HMBCloudZone without a rebuilder
%{public}@Saving updated rebuilder model: %@
%{public}@Failed to update rebuilder model: %@
%{public}@Received -[handleZoneChangedNotification] on a HMBCloudZone without a rebuilder
%{public}@Destroyed rebuilder for zone.
%{public}@Rebuilder not allowed on zone.
%{public}@Re-Created rebuilder for zone (existed but had completed).
%{public}@Re-using rebuilder for zone.
%{public}@Created rebuilder for zone.
%{public}@Failed to encode subscriptions %@: %@
%{public}@Failed to decode subscriptions data %@: %@
%{public}@Failed to fetch additional items into query enumeration %@: %@
%{public}@Could not initialize from decoded shareURL: %@ token: %@ context: %@ cloudZoneID: %@ dateCreated: %@
%{public}@Handling keychain availability timer
%{public}@Handling CKIdentityUpdateNotification
%{public}@Handling CKAccountChangedNotification
%{public}@%{public}@Fetching account info
%{public}@%{public}@Failed to fetch account info: %@
%{public}@%{public}@Fetched account info: %@
%{public}@%{public}@CloudKit account is not currently available; waiting for CKAccountChangedNotification to check again
%{public}@%{public}@Manatee is not currently available; waiting for CKAccountChangedNotification to check again
%{public}@%{public}@Manatee is available
%{public}@Will wait for keychain availability
%{public}@Will wait for Manatee availability
%{public}@Will reset and re-check Manatee availability
%{public}@Skipping re-check with should check: %@ manatee available future: %@
%{public}@lost self for processing block!
%{public}@%{public}@Beginning processing of block %lu
%{public}@%{public}@Failed to fetch block row %lu from %@: %@
%{public}@%{public}@Could not find block with row %lu
%{public}@%{public}@Block %lu has not been committed. Ignoring process request.
%{public}@%{public}@Failed to unarchive processing options from options data: %@
%{public}@%{public}@unable to cleanup corrupt block: %@
%{public}@%{public}@Failed to insert output block for zone row %lu: %@
%{public}@%{public}@Failed to clean up corrupt block: %@
%{public}@%{public}@Fetching objects for blockRow: %lu options: %@ lastItemRowID: %lu
%{public}@%{public}@Failed to fetch transaction entries for %lu / %@: %@
%{public}@%{public}@No more rows to process
%{public}@%{public}@Fetched %lu object(s) to process for blockRow: %lu options: %@
%{public}@%{public}@unable to determine modelID for %lu / %@: %@
%{public}@%{public}@unable to flush bogus row for %lu / %@: %@
%{public}@%{public}@unable to unarchive object for %lu / %@: %@
%{public}@%{public}@Found modelID %@ to %@ for row: %@
%{public}@%{public}@unable to find existing model with modelID %@ for %lu / %@: %@
%{public}@%{public}@Did not find existing record for modelID %@
%{public}@%{public}@Found existing record for modelID %@: %@
%{public}@%{public}@Unable to unarchive record row %lu: %@
%{public}@%{public}@Unable to remove corrupt record row %lu: %@
%{public}@%{public}@Not updating model because model creation is required: %@
%{public}@%{public}@Updating model %lu / %@ / %@
%{public}@%{public}@Unable to merge old record with new values %@ / %@: %@
%{public}@%{public}@Deleting model %lu / %@ / %@
%{public}@%{public}@Not creating model because model creation is disallowed: %@
%{public}@%{public}@Inserting model %@
%{public}@%{public}@No previous or updated value found for model with ID %@
%{public}@%{public}@Unable to encode object %@ (not attempting to push): %@
%{public}@%{public}@Unable to encode model %@: %@
%{public}@%{public}@unable to update / insert row for %lu / %@: %@
%{public}@%{public}@Sending deletion delegate callback for model: %@
%{public}@%{public}@Sending creation delegate callback for model: %@
%{public}@%{public}@Sending update delegate callback for model: %@
%{public}@%{public}@Unable to write rollback entries: %@
%{public}@%{public}@Unable to encode options for output: %@
%{public}@%{public}@Unable to update block to enqueue output: %@
%{public}@%{public}@Unable to trigger output because self.mirror is nil
%{public}@%{public}@Triggering output for output block row %@ on %@
%{public}@%{public}@Failed to clean up processed block: %@
%{public}@%{public}@Sending processing complete callback with result: %@
%{public}@%{public}@Finished processing %lu row(s) for blockRow: %lu
%{public}@[LocalZone] unable to cleanup rollback block: (lost self)
%{public}@%{public}@Rolling back block %@ due to push failure: %@
%{public}@%{public}@No block fetched! (no block found)
%{public}@%{public}@Rollback completed successfully for block %@.
%{public}@%{public}@Failed to get block for rollback: %@
%{public}@%{public}@Removing unused rollback block %@
%{public}@%{public}@Unable to cleanup rollback block: %@
%{public}@Unable to determine options for rollback block (%@)
%{public}@rollback options: %@
%{public}@Failed to rollback block: %@
%{public}@Failed to remove rollback block: %@
%{public}@invalidating push for block %lu
%{public}@Rollback is having issues. Expected to find a record row %lu / %@, but we didn't
%{public}@reverting record row %lu / %@ to %lu / %@
%{public}@%{public}@Updating record row: %lu %@ %lu %@ %@ %@ %@ %@
%{public}@Received change from mirror while existing record row %lu has pending output push
%{public}@%{public}@Reseting pending output push data due to change from mirror
%{public}@%{public}@Inserting record row: %lu %@ %lu %@ %@ %@ %@ %@ %@
%{public}@%{public}@No record row to update or updated model to insert
%{public}@Failed to delete null items/blocks: %@
%{public}@Rolling back block: %@
%{public}@Processing input block: %@
%{public}@Failed to delete zombie records: %@
%{public}@Notifying observers for model ID %@: %@
%{public}@Mirror input external data was nil when comparing against existing external data
%{public}@Existing external data was nil when comparing against mirror input external data
%{public}@Failed to decode record from mirror input external data: %@
%{public}@Failed to decode record from existing external data: %@
%{public}@Comparing mirror input modification date %@ with existing record modification date %@
%{public}@%{public}@Skipping mirror output push for model ID %@ and row %ld since the model is set to exclude cloud storage
%{public}@%{public}@Skipping mirror output push for updated model ID %@ and row %ld since the only set properties are excluded from cloud storage
%{public}@%{public}@Asked to abort invalid input block
%{public}@%{public}@Aborting input block
%{public}@%{public}@Failed to abort input block: %@
%{public}@%{public}@Successfully aborted input block
%{public}@%{public}@Asked to commit invalid input block
%{public}@%{public}@Committing input block.
%{public}@%{public}@Failed to commit input block: %@
%{public}@%{public}@Successfully committed input block
%{public}@%{public}@Asked to update additional entries on invalid input block
%{public}@%{public}@Failed to update additional entries on input block: %@
%{public}@%{public}@Asked to add additional entries on invalid input block
%{public}@%{public}@Failed to add additional entries on input block: %@
%{public}@%{public}@Creating Input Block for %@
%{public}@Asked to handle unexpected updated model: %@
%{public}@Starting up with model container: %@
%{public}@Successfully started up with model container
%{public}@Failed to start up with model container: %@
%{public}@Zone needs creation
%{public}@Starting up with local zone: %@ configuration: %@
%{public}@Zone startup steps will begin after initial cloud sync future: %@
%{public}@Successfully started up with local zone
%{public}@Failed to start up with local zone: %@
%{public}@Startup steps - enqueue pending pushes
%{public}@Enqueueing pending push for output blockRow: %lu
%{public}@Notifying delegate %@ for error on operation %@: %@
%{public}@Delegate does not respond to selector.
%{public}@Received missing Manatee identity error on zone specific operation: %@
%{public}@Destroying cloud zone: %@
%{public}@Deallocating
%{public}@Pushing with updates: %@ removes: %@
%{public}@%{public}@Pushing update for record: %@
%{public}@%{public}@Pushing removal for record: %@
%{public}@%{public}@Starting CKModifyRecordsOperation with operationID: %@
%{public}@%{public}@CKModifyRecordsOperation failed: %@
%{public}@Cannot bifurcate, not enough items: (updates: %@, removes: %@)
%{public}@Record limit exceeded (updates: %lu, removes: %lu), bifurcating operation
%{public}@%{public}@CKModifyRecordsOperation will be retried
%{public}@%{public}@CKModifyRecordsOperation failed and cannot be retried: %@
%{public}@%{public}@CKModifyRecordsOperation succeeded
%{public}@Both bifurcated pushes failed: %@, %@
%{public}@Bifurcated push succeeded, merging results
%{public}@%{public}@Received conflict pushing record: %@
%{public}@%{public}@Record does not exist on server: %@
%{public}@%{public}@Failed to push record %@: %@
%{public}@%{public}@Successfully pushed record: %@
%{public}@Finalized called on table %@ twice.
%{public}@finalizing table for: %@
%{public}@Deallocation called on table for %@ without finalize.
%{public}@Creating index table for %@ model (fields: %@)
%{public}@Cleaning up sentinel table result (not fatal): %@
%{public}@Creating generic index: %@
%{public}@Unable to create generic index %@: %@
%{public}@Failed to remove sentinel table (not fatal): %@
%{public}@Column list for query %@ has duplicate values: %@
%{public}@Creating index: %@
%{public}@Unable to create index %@: %@
%{public}@Removing unused index: %@
%{public}@Unable to drop index: %@
%{public}@Removing all models of types %@ and options %@
%{public}@Failed to stage removal for all models of types %@: %@
%{public}@Removing models and descendant models with IDs: %@ depth: %lu options: %@
%{public}@Failed to stage removal for models and descendant models with IDs %@: %@
%{public}@Removing models with parent model ID %@ and options %@
%{public}@Failed to encode processing options %@: %@
%{public}@Failed to stage removal for models with parent model ID %@: %@
%{public}@Submitting models to add: %@ model IDs to remove: %@ options: %@
%{public}@Failed to archive options %@: %@
%{public}@Cannot update a model with a nil hmbModelID or hmbParentModelID: %@
%{public}@Failed to encode model %@: %@
%{public}@Submitted models with block row: %lu
%{public}@Not starting up local zone that has already started up
%{public}@Starting up local zone
%{public}@deallocating: %@
%{public}@Unable to iterate through unknown models in zone: %@
%{public}@Unable to decode model at row %lu %@: %@
%{public}@Not migrating unsupported model that has a generic representation: %@
%{public}@Updating model type to %@ and schema to %@ for previously-unsupported model: %@
%{public}@Unable to find version metadata field on record %@
%{public}@Unable to decode version metadata for record %@: %d
%{public}@Unable to determine encoding from version metadata: %@. Defaulting to %lu encoding
%{public}@Could not find data for encoding %lu in CKRecord %@
%{public}@CKRecord HMB metadata: %@
%{public}@Unable to uncompress data for %@
%{public}@Unable to decode data for %@
%{public}@Model of type %@ expected external record type %@ but cloud record has type %@
%{public}@Creating new cloud record %@ to store model %@.%@
%{public}@Updating existing cloud record %@ to store model %@.%@
%{public}@Dropping change for %@/%@ because property type %@ doesn't respond to nativeCKValueWithEncodingContext:error: but we think it conforms to HMBModelNativeCKWrapper
%{public}@Unable to encode wrapped and externally stored property %@/%@: %@
%{public}@Attempting to write property %@ on %@, unwritable in homed data version %@.
%{public}@%@%@
%{public}@Unable to determine externality of property %@ from type %@ (no such property exists)
%{public}@Unable to get default value of property %@ from type %@ (no such property exists)
%{public}@Unable to get value of property %@ from type %@ (no such property exists)
%{public}@Unable to set property %@ of %@ from type %@ (no such property exists)
%{public}@Unable to set property %@ of %@ from type %@ (property is unavailable)
%{public}@Unable to set property %@ of %@ from type %@ (property is read-only)
%{public}@Unable to set property %@ of %@ from type %@ (does not match the expected type %@)
%{public}@[HMBModel hmbType] called without having an associated id<HMBModelContainer>.
%{public}@[HMBModel hmbMerge:from:] called with nil container on target (worrysome in production code).
%{public}@[HMBModel hmbMerge:from:] called with nil container on source (worrysome in production code).
%{public}@Cannot merge. This object %@ is not a sub-class of %@
%{public}@Merging two unknown model objects object using the default rules (%@ and %@)
%{public}@Merging two unknown model objects object using the default rules %@.
%{public}@Going to merge unknown (probably from future) model type %@ with %@.
%{public}@Going to merge, but things won't be better until our type flips. (%@ / %@)
%{public}@Model %@ from cloud contained local only property %@, dropping
%{public}@Unable to merge %@ property of model class %@ (marked readonly for %@).
%{public}@Model %@.%@.%@ suppressing validity check due to HMDBackingStoreModelObject backport.
%{public}@Model %@.%@.%@ is not valid for storage (modelID is not set).
%{public}@Model %@.%@.%@ is not valid for storage (parentModelID is not set).
%{public}@Model %@.%@.%@ is not valid for storage (field %@ is not set).
%{public}@Cannot prepare model for container because modelID or parentModelID are missing: %@
%{public}@Cannot prepare model for container because hmbDataVersion is missing: %@
%{public}@Cannot prepare model %@ for container: %@
%{public}@Cannot prepare model for container: %@
%{public}@Unable to associate model (%@) with a nil container.
%{public}@Associating with a container with a different data version (%@ != %@).
%{public}@Failed to decode value for %@ property: %@
%{public}@Attempting to read property %@ on %@, unavailable in homed data version %@ (returning nil).
%{public}@Attempting to read property %@ from %@, does not appear defined.
%{public}@Asked to merge from unexpected object of class %@: %@
%{public}@Unexpectedly found %@ in CKRecord field for wrapped model value %@/%@ which we expected to be a CKStreamingAsset (ignoring).
%{public}@%{public}@Starting %@ CKCodeOperation for service: %@ operationID: %@
%{public}@%{public}@CKCodeOperation failed: %@
%{public}@%{public}@CKCodeOperation will be retried
%{public}@%{public}@CKCodeOperation succeeded
%{public}@%{public}@CKCodeOperation finished with request UUID: %@
%{public}@Unexpectedly got a watchdog fire event in state %@
%{public}@Unexpectedly got a watchdog fire event from an unexpected timer.
%{public}@Unable to get operation queue to change state transition
%{public}@Lost self for cloud zone rebuild
%{public}@Requested state transition from %@ to %@ (finished: %@).
%{public}@Initial state transition to complete finishes waitForRebuildCompletion early.
%{public}@Attempting to transition into invalid state %@ (treating as Complete)
%{public}@Expected future to be in-progress but it's NOT!
%{public}@Notifying delegate %@ of updated rebuild status: %@
%{public}@Waiting %.2f seconds for an expected cloud push.
%{public}@Lost %@ for cloud zone rebuild
%{public}@Lost %@ while completing rebuild.
%{public}@Removing all records and resetting serverChangeToken.
%{public}@Unable to remove all records from local zone: %@
%{public}@unable to decode model from row %lu: %@
%{public}@unable to re-encode model %@ for cloud: %@
%{public}@unable to remove corrupt record: %@
%{public}@Unable to generate updated sentinel model: %@
%{public}@Unable to generate externalID from %@: %@
%{public}@Unable to generate externalData from %@: %@
%{public}@Unable to reset externalID and externalData for %lu: %@
%{public}@Failed to encode sentinel model: %@
%{public}@Lost cloudDatabase for cloud zone rebuild
%{public}@Attempting to acquire lock.
%{public}@[HMBCloudZoneRebuildPrivate] lost self
%{public}@Lost %@
%{public}@Unable to create sentinel model for %@: %@
%{public}@Pushing sentinel record: %@
%{public}@Sentinel model push failed with fatal error: %@
%{public}@Sentinel record already exists on the server. Returning server version.
%{public}@Unable to find appropriate error for sentinel record push: %@
%{public}@Unable to decode model from CK Record: %@
%{public}@Record was not expected type (got %@)
%{public}@Sentinel record has not mutated.
%{public}@Lost cloudZone for cloud zone rebuild
%{public}@Unexpectedly got a CKNotification when in state %@ (ignoring)
%{public}@Successfully fetched: %@
%{public}@Sentinel record indicates that zone is completely rebuilt.
%{public}@Sentinel record unique token did not change from %@
%{public}@Sentinel record unique token changed %@ -> %@
%{public}@Fetch succeeded, but no record returned.
%{public}@Insufficient to transition out of Lost Key state.
%{public}@received notification, but failed to fetch model: %@
%{public}@Will not transition out of Lost Key state.
%{public}@Received a request to begin rebuild but we are already in: %@.
%{public}@Not transitioning to Lost Key state, already in an active rebuild state (%@).
%{public}@Lost self while starting up rebuild machine.
%{public}@Starting up zone rebuilder
%{public}@Found existing sentinel model: %@
%{public}@Unable to fetch rebuild sentinel model: %@
%{public}@Sentinel model fetch failed: %@.
%{public}@Successfully fetched sentinel model: %@.
%{public}@Using HMBModelUnsupported because model's minimum version %@ is higher than current version: %@
%{public}@Cannot find type information in model dictionary: %@
%{public}@Unable to find model class named %@
%{public}@Unable to resolve type name to class: %@
%{public}@Cannot deserialize from unknown encoding: %lu
%{public}@Failed to populate model with dictionary %@: %@
%{public}@Failed to prepare model %@: %@
%{public}@Cannot encode data from model %@ with unknown encoding: %lu
%{public}@Failed to OPACK decode data: %@
%{public}@Result was not of class %@: %@
%{public}@Failed to OPACK encode dictionary %@: %@
%{public}@Informing delegate we have lost our identity.
%{public}@Unable to remove self from the share: %@
%{public}@Successfully removed ourself from share.
%{public}@Unable to rebuild a shared zone.
%{public}@Failed to create input context for conflict records: %@
%{public}@Failed to commit conflicted record resolution: %@
%{public}@Unable to generate externalID for cloudRecord: %@
%{public}@Staging removal for client record without a server version: %@
%{public}@Failed to stage removal for client record %@: %@
%{public}@Unable to generate model for cloudRecord: %@
%{public}@Unable to generate externalData for cloudRecord: %@
%{public}@Staging server version of conflicted record %@ / %@ due to conflict
%{public}@Failed to stage addition for model %@: %@
%{public}@%{public}@
%{public}@Accepting invitation: %@
%{public}@Accepted invitation with share: %@
%{public}@Adding zone state model: %@
%{public}@Unable to add zone state model: %@
%{public}@Not adding zone state model because one already exists: %@
%{public}@Fetched share metadata: %@
%{public}@Queueing up accept for invitation %@
%{public}@Removing local data for zone: %@
%{public}@Failed to remove local data for zone %@: %@
%{public}@Successfully removed local data for zone: %@
%{public}@Removing local zone: %@
%{public}@Removing local zone mirror: %@
%{public}@Cannot set a new delegate on local zone with identifier %@ because that local zone has already been opened with a different delegate
%{public}@Returning existing zone: %@
%{public}@Unable to open zone %@ (does not exist)
%{public}@Unable to create our local storage: %@.
%{public}@Performing cloud pull with token: %@ options: %@
%{public}@Lost localZone in __performCloudPull.
%{public}@%{public}@Failed to create a new mirror input: %@
%{public}@%{public}@Starting CKFetchRecordZoneChangesOperation with token: %@ options: %@ operationID: %@
%{public}@%{public}@CKFetchRecordZoneChangesOperation failed: %@
%{public}@%{public}@Performing cloud pull again with nil change token due to expired change token error: %@
%{public}@%{public}@CKFetchRecordZoneChangesOperation will be retried
%{public}@%{public}@Received cloud zone deletion error: %@
%{public}@%{public}@Failed to fetch record zone changes: %@
%{public}@%{public}@Committing mirror input block
%{public}@%{public}@Failed to commit block: %@
%{public}@%{public}@Successfully committed block. Handling %lu internal model updates.
%{public}@%{public}@CKFetchRecordZoneChangesOperation succeeded
%{public}@%{public}@Failed to fetch newest records: %@
%{public}@%{public}@Successfully fetched newest records with moreComing: %@ and serverChangeToken: %@
%{public}@%{public}@Received record deletion for %@/%@
%{public}@%{public}@Failed to encode externalID from recordID %@: %@
%{public}@%{public}@Failed to add model to remove to block: %@
%{public}@%{public}@Received record %@, but failed to decode: %@
%{public}@%{public}@Received record %@ with decoded model %@.%@
%{public}@%{public}@Failed to encode externalID from record %@: %@
%{public}@%{public}@Failed to encode externalData from record %@: %@
%{public}@%{public}@Failed to add model to update to block: %@
%{public}@Coalescing cloud pull with options: %@
%{public}@Queueing up cloud pull with options: %@
%{public}@Received message that did not translate to a CKNotification; deferring to delegate: %@
%{public}@%{public}@Handling CKDatabaseNotification: %@
%{public}@%{public}@Handling CKRecordZoneNotification: %@
%{public}@%{public}@Starting update for zone: %@
%{public}@Received unexpected query notification: %@
%{public}@Received unknown CKNotification: %@
%{public}@Removing state for zone ID %@
%{public}@Asked to remove state for zoneID %@ that has already been removed
%{public}@Unable to determine children of zone state model %@ with ID %@: %@
%{public}@Unable to remove cloud zone state models for zone ID %@: %@
%{public}@Received missing Manatee identity error on database specific query (this is not expected): %@
%{public}@Manatee is unavailable. Waiting for Manatee to become available before retrying
%{public}@CloudKit account status is no longer authenticated. Waiting for Manatee to become available before retrying
%{public}@Keychain is unsynced. Waiting for keychain to become available before retrying
%{public}@Not retrying failed CloudKit operation
%{public}@Will retry cloud operation after %.2f seconds
%{public}@Retrying operation that received keychain unsynced error
%{public}@Retrying operation that received account not authenticated error
%{public}@Retrying operation that received Manatee unavailable error
%{public}@Unable to remove zone with public zoneID: %@
%{public}@Failed to open existing shared zone for removal: %@
%{public}@Failed to open shared local zone for removal: %@
%{public}@Asked to open existing shared zone with ID: %@
%{public}@No cloud zone found with ID %@
%{public}@Creating state for cloud zone with ID %@
%{public}@Unable to save new zone to database: %@
%{public}@Cannot set a delegate on cloud zone with identifier %@ because that cloud zone has already been opened with a different delegate
%{public}@Returning existing cloud zone: %@
%{public}@Creating cloud zone with ID %@
%{public}@Asked to open existing private zone with ID: %@
%{public}@Asked to open or create private zone with ID: %@
%{public}@Normal remove behavior for zone %@ suppressed due to rebuild.
%{public}@Failed to open local zone with ID %@ for removal: %@
%{public}@No open HMBCloudZone exists for zoneID %@
%{public}@Have an open HMBCloudZone for zoneID %@
%{public}@Normal update behavior for zone suppressed due to rebuild.
%{public}@Unable to trigger cloudZone fetch on %@ due to failed startup: %@
%{public}@Lost cloudZone reference for %@ prior to subscription initiated fetch.
%{public}@Got update for a zone ID %@ we don't have state for. All zone states: %@
%{public}@Normal create behavior for zone %@ suppressed due to rebuild.
%{public}@Asked to perform administrative fetch for unsupported database scope: %@
%{public}@%{public}@Starting administrative fetch for %@ with force=%@
%{public}@%{public}@Skipping administrative fetch for %@ because force=%@ and last administrative fetch was %@
%{public}@%{public}@Created pre-fetch mapping of zone state by zone ID: %@
%{public}@%{public}@Processing administrative fetch
%{public}@%{public}@Unable to update database state for administrative fetch: %@
%{public}@%{public}@Unable to update zone models in local DB %@: %@
%{public}@%{public}@Updating subscriptions for zone ID %@ from %@ to %@
%{public}@%{public}@Zone with ID %@ was created
%{public}@%{public}@Zone with ID %@ was deleted
%{public}@Ignoring unexpected subscription on shared zone: %@
%{public}@Got unexpected subscription %@
%{public}@Returning existing initial cloud sync future: %@
%{public}@Performing initial cloud sync
%{public}@Successfully performed initial cloud sync
%{public}@Failed to perform initial cloud sync: %@
%{public}@Found zone ID that needs deletion: %@
%{public}@[HMBCloudDatabase] Failed to resolve preferred CloudKit environment with error: %@
%{public}@[HMBCloudDatabase] Lost self.
%{public}@Did not receive a preferred push environment, defaulting to %@
%{public}@Registering APS Connection for environment: %@
%{public}@Creating cloud database with localDatabase: %@ configuration: %@
%{public}@Failed to create state zone for database: %@
%{public}@Unable to load cloud database states: %@
%{public}@Created public database state model with cloudID %@: %@
%{public}@Created private database state model with cloudID %@: %@
%{public}@Created shared database state model with cloudID %@: %@
%{public}@Unable to update cloud database models: %@
%{public}@Unable to load zone model state: %@
%{public}@Unable to remove zone with ID %@ on a non-private database
%{public}@Removing private cloud zone with ID %@
%{public}@%{public}@Starting CKModifyRecordZonesOperation with zoneToSave: %@ zoneIDToRemove: %@ operationID: %@
%{public}@%{public}@CKModifyRecordZonesOperation failed: %@
%{public}@%{public}@CKModifyRecordZonesOperation will be retried
%{public}@%{public}@CKModifyRecordZonesOperation failed and cannot be retried: %@
%{public}@%{public}@CKModifyRecordZonesOperation succeeded
%{public}@%{public}@Ignoring partial error for zoneID %@: %@
%{public}@Unable to create zone with ID %@ on a non-private database.
%{public}@Creating private cloud zone with ID %@
%{public}@Zone modification finished, but had to create zone model for %@ (someone created a zone outside of HMBCloudZone startup).
%{public}@%{public}@Starting CKFetchRecordZonesOperation for database: %@ operationID: %@
%{public}@%{public}@CKFetchRecordZonesOperation failed: %@
%{public}@%{public}@CKFetchRecordZonesOperation will be retried
%{public}@%{public}@CKFetchRecordZonesOperation failed and cannot be retried: %@
%{public}@%{public}@CKFetchRecordZonesOperation succeeded with zones: %@
%{public}@Unknown filter result received: %lu
%{public}@Unregistering subscription for external record type %@
%{public}@Registering subscription for external record type %@
%{public}@Handling retry share operation error: %@
%{public}@Share operation failed: %@
%{public}@Canceling share operation due to failed cloud pull: %@
%{public}@Not retying share operation because no new CKShare changes were found after performing cloud pull (initialShare: %@, currentShare: %@)
%{public}@Retrying share operation after finishing cloud pull
%{public}@Failed to prepare statement: %@
%{public}@The query's argument dictionary contains an argument named '%@' which does not exist as an argument in the query statement's SQL: %@
%{public}@The query statement's SQL contains an argument named '%@' which does not exist as an argument in the query's argument dictionary: %@
%{public}@The query statement's SQL contains an argument for a property named '%@' which does not exist as a property on %@: %@
%{public}@Didn't find reference to %@ in query plan for %s:
%{public}@    %lu.%lu %@
%{public}@Failed to reset output for records with output block row %lu: %@
%{public}@Failed to delete block with output block row %lu: %@
%{public}@Unable to delete pushed record %lu: %@
%{public}@Not removing record %lu because it appears to have changed.
%{public}@Unable to clear output columns for pushed record %lu: %@
%{public}@Not clearing output columns for record %lu because it appears to have changed.
%{public}@Deleting block with output block row %lu because it has no corresponding records
%{public}@Unable to fetch options for block at row %lu.%@: %@
%{public}@Failed to unarchive transaction options from options data: %lu.%@: %@
%{public}@Cannot validate reference %@ because the referenced model can't be found: %@
%{public}@Local zone for associated container is nil: %@
%{public}@Unable to determine CKRecordID for model ID %@: %@
%{public}@Unable to decode CKRecordID from external ID %@: %@
%{public}@Looking for referenced model %@ in localZone %@
%{public}@Error fetching model %@
%{public}@No local model for %@, fetching via CKReference %@
%{public}@Unable to find referenced model %@, no local model and no CKReference to fetch
%{public}@Received CKRecord with a HMBModelCloudReference field (%@/%@) where the corresponding CKRecord field is not set or not of the expected type (got %@)
%{public}@Received CKRecord with a HMBModelCloudReference field (%@/%@) where zone name for reference stored in the CKRecord field does not match the zone name in the HMBModel field (%@!=%@)
%{public}@Unexpectedly found %@ in CKRecord field for wrapped model value %@/%@ which we expected to be a CKReference (ignoring).
%{public}@Asked to fetch an empty set of record IDs
%{public}@Failed to decode complete model for record %@: %@
%{public}@Unable to encode externalID from recordID %@: %@
%{public}@Unable to fetch modelID for externalID %@: %@
%{public}@Successfully fetched complete models for record ID but no models were returned
%{public}@Failed to fetch record rows for model IDs %@: %@
%{public}@Fetched %lu record rows %@ but requested %lu model IDs %@
%{public}@Trying to perform a cloud fetch for a record (%@/%@) that has not been pushed.
%{public}@Failed to decode encoded record ID %@: %@
%{public}@Fetching complete models with force=%@: %@
%{public}@Successfully fetched complete models ID but no models were returned
%{public}@Queueing fetch for records with record IDs: %@
%{public}@Performing fetch for records with record IDs: %@
%{public}@%{public}@Starting CKFetchRecordsOperation with record IDs: %@ operationID: %@
%{public}@%{public}@CKFetchRecordsOperation failed: %@
%{public}@%{public}@CKFetchRecordsOperation will be retried
%{public}@%{public}@CKFetchRecordsOperation partially failed, but returning those records that were successfully fetched
%{public}@%{public}@CKFetchRecordsOperation failed and cannot be retried: %@
%{public}@%{public}@CKFetchRecordsOperation succeeded
%{public}@%{public}@Failed to fetch record with ID %@: %@
%{public}@%{public}@Successfully fetched record with ID %@: %@
%{public}@Clearing cloudZone on state for zone with ID: %@
%{public}@Unable to find state model to clear cloudZone for with zone ID %@
%{public}@Updating needs deletion to %@ for zone with ID: %@
%{public}@Unable to find state model to update needs zone deletion for with zone ID %@
%{public}@Unable to update needs zone deletion on state model for zone: %@
%{public}@Unable to find state model for zone.
%{public}@Unable to update state model for zone: %@
%{public}@Cannot find zone model to fetch server change for with zone ID %@
%{public}@Cannot find zone model to update server change for with zone ID %@
%{public}@Updating server change token of %@ to %@
%{public}@Unable to update server change token for zone %@: %@
%{public}@Unable to update server change token for scope %ld: %@
%{public}@%{public}@Starting CKFetchSubscriptionsOperation for database: %@ operationID: %@
%{public}@%{public}@CKFetchSubscriptionsOperation failed: %@
%{public}@%{public}@CKFetchSubscriptionsOperation will be retried
%{public}@%{public}@CKFetchSubscriptionsOperation failed and cannot be retried: %@
%{public}@%{public}@CKFetchSubscriptionsOperation succeeded with subscription IDs: %@
%{public}@Ignoring push request for block row %lu. Appears to be in-progress.
%{public}@%{public}@No local zone available to perform cloud push
%{public}@%{public}@Unable to fetch options for output block row %lu: %@
%{public}@%{public}@Unable to fetch tuples for output block row %lu: %@
%{public}@%{public}@Skipping cloud push for output block row %lu because no tuples were found
%{public}@%{public}@Starting cloud push for output block row: %lu options: %@ tuples count: %lu
%{public}@%{public}@Failed to decode encoded record ID %@: %@
%{public}@%{public}@Unable to encode record for update: %@
%{public}@%{public}@Unable to encode recordID for update: %@
%{public}@%{public}@Preparing to update: %@ / %@
%{public}@%{public}@Aborting block %lu due to encoding error: %@.
%{public}@%{public}@No valid records to push; aborting
%{public}@%{public}@Abort update for block %lu failed with error: %@
%{public}@%{public}@Cloud push chunk failed: %@
%{public}@%{public}@Failed to encode externalID for %@: %@
%{public}@%{public}@Failed to encode externalData for %@: %@
%{public}@%{public}@Received unexpected updated record: %@
%{public}@%{public}@Queueing record for post-processing: %@
%{public}@%{public}@Unable to decode internal record %@: %@
%{public}@%{public}@Queueing internal model: %@ %@
%{public}@%{public}@Queueing model for post-processing: %@ %@
%{public}@%{public}@Internal models processed.
%{public}@%{public}@Failed to mark records as pushed: %@
%{public}@%{public}@Post-processing %lu models
%{public}@%{public}@Nothing to post-process
%{public}@%{public}@Post-processing succeeded
%{public}@%{public}@Post-processing failed: %@
%{public}@%{public}@Unable to complete push for row %lu: %@
%{public}@[%s.%lu] Lost self reference.
%{public}@Drop all cloud records requested by conflict resolution delegate callback.
%{public}@Dropping cloud push record %@ / %@ due to conflict.
%{public}@Dropping cloud push record %@ due to conflict.
%{public}@Records push failed immediately: %@
%{public}@Unable to determine index state of %@: %@
%{public}@Preparing to reindex table for %@
%{public}@Total of %lu rows re-indexed for %@.
%{public}@Unable to rebuild index of %@: %@
%{public}@Have re-indexed %lu records of %@ type.
%{public}@Staging removal for model with external ID: %@
%{public}@Staging addition for model: %@ externalID: %@ externalData: %@
%{public}@connection: %@ didReceiveIncomingMessage: %@
%{public}@Handling incoming APS message with topic: %@ userInfo: %@
%{public}@connection: %@ didReceivePublicToken: %@
%{public}@connection: %@ didReceiveToken: %@ forTopic: %@ identifier: %@
%{public}@Adding enabled topic to APS connection: %@
%{public}@Creating APSConnection with environment: %@ namedDelegatePort: %@
%{public}@%{public}@Asked to abort invalid output block
%{public}@%{public}@Aborting output block
%{public}@%{public}@Successfully aborted output block
%{public}@%{public}@Asked to commit invalid output block
%{public}@%{public}@Committing output block.
%{public}@%{public}@Failed to commit output block: %@
%{public}@%{public}@Asked to add additional entries on invalid output block
%{public}@%{public}@Failed to add additional entries on output block: %@
%{public}@%{public}@Creating Output Block for %@
%{public}@HMBManager detected local corruption: %@
%{public}@No delegate supplied for '- (BOOL)shouldLogPrivateInformation' returning NO.
%{public}@Treating Unknown Item error as success when deleting share participant record ID: %@
%{public}@Failed to delete share participant records: %@
%{public}@Hit conflict when pushing share and share participant record; retrying operation
%{public}@Failed to push share and share participant record: %@
%{public}@Hit conflict when pushing share; retrying operation
%{public}@Failed to push share: %@
%{public}@Adding %@ share operation: %@
%{public}@Received cloud zone record push result partial error due to zone already deleted
%{public}@Failed to push changes for leaving cloud share: %@
%{public}@Leaving cloud share
%{public}@Cannot leave cloud share because no share model was found
%{public}@Could not find a share model. Will attempt to find one by re-fetching all records
%{public}@Handling error result after attempting to remove the share record: %@
%{public}@Successfully pushed changes for leaving cloud share with result: %@
%{public}@Creating share model
%{public}@Handling updated share participant: %@
%{public}@Removing existing share participant model with client identifier %@ because it has a different model ID: %@
%{public}@Failed to remove existing share participant model: %@
%{public}@Failed to update share participant models: %@
%{public}@Handling updated share: %@
%{public}@Removing participant that is no longer on share: %@
%{public}@Updating CKShareParticipant on participant %@ to %@
%{public}@Failed to update/remove share models: %@
%{public}@Unable to decode model from share participant record %@: %@
%{public}@Decoded model was not a HMBCloudZoneShareParticipantModel: %@
%{public}@Unable to decode share model from share %@
%{public}@Cannot fetch share model because local zone is nil
%{public}@Unable to fetch share models: %@
%{public}@Unexpectedly found more than one share model: %@
%{public}@Failed to remove existing share modelIDs: %@
%{public}@Fetched existing share model: %@
%{public}@Did not find existing share model
%{public}@Cannot initialize share participant models because local zone is nil
%{public}@Initializing with fetched participants: %@
%{public}@Revoking share for participant: %@
%{public}@Could not find participant model for participant %@
%{public}@Successfully pushed share participant deletion for share revocation
%{public}@Successfully pushed share changes for share revocation
%{public}@Removing participant %@ from share %@
%{public}@Not removing participant %@ from share because it doesn't exist on share: %@
%{public}@Setting write access enabled to %@ for participant: %@
%{public}@Could not find CKShareParticipant for participant %@. All CKShareParticipants: %@
%{public}@Not setting write access enabled because participant's permission is already %@
%{public}@Successfully pushed changes for participant write access update
%{public}@Fetching invitation with context: %@
%{public}@Unable to fetch an invitation on non-private zone
%{public}@Configuring existing participant %@ for the requested invitation context: %@
%{public}@Asked to fetch an invitation for client identifier corresponding to participant that has already accepted: %@
%{public}@Returning existing pending invitation: %@
%{public}@Participant already exists that has not accepted but has no pending invitation: %@
%{public}@Unable to find updated share participant on share %@
%{public}@Unable to find invitation token on share participant %@
%{public}@Created invitation: %@
%{public}@Unable to encode participant model %@: %@
%{public}@Adding participant %@ to share %@
%{public}@Removing participant %@ because it already exists on share %@
%{public}@Fetching invitation again after configuring participant
%{public}@No participant was found with client identifier: %@
%{public}@No cloud share ID was found for participant: %@
%{public}@No current participant record ID found on cloud zone share: %@
%{public}@No owner record ID found on cloud zone share: %@
%{public}@Unable to prepare Query context for class: %@
%{public}@Prepared query context for %@
%{public}@Preparing query contexts...
%{public}@Failed to clean up queryable table (non-fatal): %@
%{public}@Adding sentinal table failed: %@
%{public}@Query Table: %@ <%@>
%{public}@    %@ <%@>
%{public}@Significant failure during preparation of queries: %@
%{public}@discarding existing index table %@ (%@ / %@ / %@)
%{public}@%{public}@Starting CKFetchRecordsOperation for current user record with operationID: %@
%{public}@%{public}@CKFetchRecordsOperation did not retrieve user record, but no error was returned
%{public}@%{public}@CKFetchRecordsOperation succeeded with record: %@
%{public}@%{public}@Fetched user record: %@
%{public}@%{public}@Failed to fetch user record: %@
%{public}@%{public}@Starting CKAcceptSharesOperation with share metadata: %@ operationID: %@
%{public}@%{public}@CKAcceptSharesOperation failed: %@
%{public}@%{public}@CKAcceptSharesOperation will be retried
%{public}@%{public}@CKAcceptSharesOperation failed and cannot be retried: %@
%{public}@%{public}@CKAcceptSharesOperation succeeded with share: %@
%{public}@%{public}@Failed to accept share metadata %@: %@
%{public}@%{public}@Successfully accepted share for share metadata %@: %@
%{public}@%{public}@Starting CKFetchShareMetadataOperation for invitation: %@ operationID: %@
%{public}@%{public}@CKFetchShareMetadataOperation failed: %@
%{public}@%{public}@CKFetchShareMetadataOperation will be retried
%{public}@%{public}@CKFetchShareMetadataOperation failed and cannot be retried: %@
%{public}@%{public}@CKFetchShareMetadataOperation succeeded with share metadata: %@
%{public}@%{public}@Failed to fetch share metadata for url %@: %@
%{public}@%{public}@Fetched share metadata for url %@: %@
%{public}@%{public}@Starting CKFetchShareParticipantsOperation for lookup info: %@ operationID: %@
%{public}@%{public}@CKFetchShareParticipantsOperation failed: %@
%{public}@%{public}@CKFetchShareParticipantsOperation will be retried
%{public}@%{public}@CKFetchShareParticipantsOperation failed and cannot be retried: %@
%{public}@%{public}@CKFetchShareParticipantsOperation succeeded with participants: %@
%{public}@%{public}@Fetched share participant: %@
%{public}@Aborting local zone input
%{public}@Committing local zone input with options: %@
%{public}@Failed to commit local zone input: %@
%{public}@Staging removal for model with ID: %@
%{public}@Aborting input block left uncommitted
%{public}@Removing block with row %lu
%{public}@Failed to insert deletion item with blockRow: %lu type: %lu modelID: %@: %@
%{public}@Failed to select records with parentModelID: %@: %@
%{public}@Could not initialize zlib for uncompression, error %ld
%{public}@Could not initialize zlib for compression, error %ld
%{public}@Failed to compress, error %ld
%{public}@Cannot fetch updated zones for unsupported database scope: %@
%{public}@Coalescing cloud pull for scope: %@
%{public}@Queueing up cloud pull for scope: %@
%{public}@%{public}@Starting CKFetchDatabaseChangesOperation with database: %@ token: %@ operationID: %@
%{public}@%{public}@Fetch database changes operation completed with token: %@ moreComing: %@ error: %@
%{public}@%{public}@CKFetchDatabaseChangesOperation failed: %@
%{public}@%{public}@Retrying CKFetchDatabaseChangesOperation with nil change token due to expired change token error
%{public}@%{public}@CKFetchDatabaseChangesOperation will be retried
%{public}@%{public}@CKFetchDatabaseChangesOperation failed and cannot be retried: %@
%{public}@%{public}@CKFetchDatabaseChangesOperation succeeded
%{public}@%{public}@Failed to remove zone model IDs from local DB %@: %@
%{public}@%{public}@Failed to add created zone models to local DB %@: %@
%{public}@%{public}@Zone with ID was deleted: %@
%{public}@%{public}@Got a zone deletion for a non-existent zone ID: %@
%{public}@%{public}@Zone with ID changed: %@
%{public}@Asked to update models: %@ remove model IDs: %@
%{public}@Setting requiresModelCreation to YES because addition constraint is %ld
%{public}@Setting disallowsModelCreation to YES because addition constraint is %ld
%{public}@Staging addition for model: %@
%{public}@Asked to fetch zones with force: %@
%{public}@Unable to encode model (%@.%@): %@
%{public}@Ignoring fetch due to previous error: %@
%{public}@Failed to run SQL statement %s: %@
%{public}@Closing database context: %@
%{public}@Deferring close of database context: %@
%{public}@Actually closing database context: %@
%{public}@Failed to close database, status: %d
%{public}@Found context still using database: %@
%{public}@Opening database context: %@
%{public}@[HMBSQLManager] Expecting parameter to open be a sub-class of HMBSQLContext
%{public}@Failed to open context %@: %@
%{public}@[HMBSQLFile: %@] Unable to turn on foreign key enforcement: %@
%{public}@Failed to prepare context %@: %@
%{public}@Current schema version: %@
%{public}@Migration failed for context %@: %@
%{public}@Migration needs re-init for context %@
%{public}@Migration needs reopen for context %@
%{public}@unhandled migration result: %ld
%{public}@Failed to turn on WAL for context %@: %@
%{public}@Successfully turned on WAL for context %@
%{public}@Failed re-open of WAL-enabled context %@: %@
%{public}@unable to get files in %@ (%@)
%{public}@unable to remove %@: %@
%{public}@Unable to open memory database with create == NO
%{public}@Successfully opened context: %@
%{public}@Failed to open context %p at %@: %@
%{public}@removing all records and transactions from local
%{public}@ignoring exec due to previous error %s: %@
%{public}@Error executing statement: %@
%{public}@Running on a later DB schema than our version (%ld > %ld).
%{public}@Failing DB open during migration becaues we might corrupt things (open in read-only)
%{public}@Unable to query all required tables: %@
%{public}@Found tables: %@ is not a superset of expected tables: %@
%{public}@Have opened a DB in read-only mode with a different schema version than our version (%ld != %ld). This may end badly.
%{public}@Unable to determine if old tables are in the database: %@
%{public}@Unable to remove old table %@: %@
%{public}@unable to initialize SQL table: %@ with error: %@
%{public}@unable to initialize SQL index: %@ with error: %@
%{public}@Failed to updated schema version to current version %lu: %@
%{public}@unable to instantiate SQLite datastore %@: %@
%{public}@unable to prepare SQL statements: %@
%{public}@Ignoring SQL block request due to previous error: %@
%{public}@unable to compile expression: %@
%{public}@Unable to set a default value %@ of type %@ when the stored type is %@
%{public}@Asked to register subscription for Private DB: %@
%{public}@Asked to register subscription on PrivateDB, but no subscriptions!.
%{public}@Not registering DB subscription %@ because it appears to already exist in our list of subscriptions: %@
%{public}@Failed to update zone state: %@
%{public}@Asked to unregister shared subscription for subscription ID %@
%{public}@Not unregistering database subscription ID %@ because it is not in our list of existing database subscription: %@
%{public}@Failed to update database state: %@
%{public}@Asked to unregister private subscription for subscription ID %@
%{public}@Asked to unregister subscription for zone ID %@: %@
%{public}@Asked to unregister subscription %@ on unknown zoneID %@. All zone ID state: %@
%{public}@Could not find zone state for zone ID %@ after updating subscriptions. All zone ID state: %@
%{public}@Asked to register subscription for zone ID %@: %@
%{public}@Asked to register subscription %@ on unknown zoneID %@. All zone ID state: %@
%{public}@Not registering zone subscription %@ because it is already in our list of subscriptions: %@
%{public}@Skipping subscription modify for empty save and remove lists
%{public}@%{public}@Starting CKModifySubscriptionsOperation with subscriptionsToSave: %@ subscriptionIDsToRemove: %@ operationID: %@
%{public}@%{public}@CKModifySubscriptionsOperation failed: %@
%{public}@%{public}@CKModifySubscriptionsOperation will be retried
%{public}@%{public}@CKModifySubscriptionsOperation failed and cannot be retried: %@
%{public}@%{public}@CKModifySubscriptionsOperation succeeded
%{public}@Asked to unregister shared subscription for external record type %@
%{public}@Asked to unregister private subscription for external record type %@
%{public}@Asked to register shared subscription for external record type %@
%{public}@Asked to register private subscription for external record type %@
%{public}@Not pushing database subscription ID %@ because it is already in our list of registered database subscriptions: %@
HMBMirrorOutputResult
HMBProcessingOptions
NSSecureCoding
NSCoding
HMBProcessingResult
HMBSQLStatementQueryPlanTuple
HMBSQLStatement
Record
Rebuild
Rebuild_Internal
HMBCloudZoneStateModel
HMBCloudZoneShareModel
HMBSQLQueryIterator
HMBShareInvitation
NSCopying
HMBCloudCredentialsAvailabilityListener
HMFTimerDelegate
NSObject
HMFLogging
HMBLocalSQLContextRowBlock
HMBLocalSQLIteratorRowBlock
HMBLocalSQLIteratorRowInputBlock
HMBLocalSQLIteratorRowRollbackBlock
HMBSQLQueryStatement
HMBLocalSQLContextRowItem
HMBLocalZoneProcessModelContext
HMBLocalZoneProcessTuple
Process
ShareModel
HMBLocalSQLContextInputBlock
HMBCloudZoneEncodingContext
HMBCloudZone
HMBMirrorProtocol
HMBCloudZoneConflict
HMBCloudZoneRecordPushResult
CloudRecord_Internal
CloudRecord
HMBCloudDatabaseConfiguration
NSMutableCopying
HMBMutableCloudDatabaseConfiguration
HMBProcessingModelResult
HMBLocalSQLQueryTable
HMBLocalZone
HMBCloudZoneRebuilderStatus
HMBModelObjectCoder
HMBLocalZoneQueryResultAllOfTypeRaw
MigrateUnsupported
Manatee
HMBLocalZoneIDUnshared
HMBLocalZoneID
HMBSearchableEntry
HMBModel
HMBModelProperties
HMBModelUnsupported
HMBModelTranslation
HMBShareUserID
HMBProcessingModelDeletion
HMBLocalZoneConfiguration
HMBMutableLocalZoneConfiguration
HMBStreamingAsset
HMBModelObjectMerging
HMBModelNativeCKWrapper
HMBCloudZonePushResult
HMBCloudZonePullResult
HMBLocalSQLContextRowZone
CKCode
HMBPrivateCloudZoneRebuilder
HMBCloudZoneRebuilder
HMBModelContainer
HMBMutableModelContainer
HMBModelContainerEncodingContext
MirrorInput
HMBCloudZoneRebuilderModel
HMBSharedCloudZoneRebuilder
HMBCloudID
HMBMutableAction
HMBAction
HMBCloudZoneShareParticipantModel
Conflicts
HMBProcessingModelCreation
User
HMBLocalDatabase
Pull_Internal
Pull
HMBCloudDatabase
HMBCloudPushObserver
CloudZone
HMBLocalZoneQueryResultColumnTuple
HMBLocalZoneQueryResult
HMBLocalZoneQueryResultRecordID
HMBLocalZoneQueryResultRecordColumns
HMBLocalZoneQueryResultAllOfType
HMBLocalZoneQueryResultParentModelID
HMBLocalZoneQueryResultParentModelIDOfType
HMBLocalZoneQueryResultRecursiveModelID
HMBLocalZoneQueryResultFilter
Subscription
HMBFutureOperation
HMBLocalDatabaseConfiguration
HMBMutableLocalDatabaseConfiguration
HMBShareOperation
HMBModelQueryArgument
HMBModelQuery
HMBModelUnindexedQuery
HMBModelIndexedQuery
HMBModelInfiniteQuery
HMBModelFiniteQuery
HMBModelCountMatchesQuery
HMBMirrorOutputTuple
HMBMirrorOutputGroup
MirrorOutput
HMBModelReference
HMBQueryableModelFieldCoder
HMBModelCloudReference
HMBShareInvitationContext
HMBProcessingModelUpdate
Fetch
Fetch_Internal
HMBLocalZoneQueryResultRecordIDSequence
HMBCloudZoneFetchRecordsContext
Query
HMBLocalSQLContextRowRecord
HMBLocalSQLIteratorRowRecord
ZoneState
HMBCloudZoneID
CloudSubscription
Push
HMBLocalZoneDelegate
HMBLocalZoneTestingProtocol
Queryable
HMBLocalZoneMirrorInput
HMBAPSConnection
HMBCloudPushHandler
HMBAPSConnectionDelegate
HMBLocalSQLContextOutputBlock
HMBCloudZoneConfiguration
HMBMutableCloudZoneConfiguration
Delegate
Share_Internal
Share
HMBCloudStateModel
HMBLocalSQLContextQueryIndex
HMBLocalSQLContextQueryTable
HMBLocalSQLContextRowQueryTuple
HMBLocalSQLContextRowQuery
CloudUser
HMBLocalZoneInput
HMBLocalSQLContextRecord
Block
ZoneFetch
HMBLocalZoneRawUpdateEntry
Model
HMBLocalZoneLocalInput
Zone
V4Cloud
HMBSQLContext
HMBSQLContextConcrete
HMBSQLFile
sqlite3
Record_Internal
HMBEntrySearch
HMBLocalSQLContext
HMBLocalZoneIDRow
HMBCloudDatabaseStateModel
HMBModelObjectStorage
HMBCloudExtensions
HMBShareParticipant
HMBModelField
HMBMutableModelField
CKRecordValue
HMBModelFieldDeprecatedField
HMBModelFieldOptionExternalRecordField
HMBModelFieldOption
HMBModelFieldOptionQueryable
HMBModelFieldOptionExcludeFromCloudStorage
Subscription_Internal
MigrateToSchema01
TB,V_requiresModelCreation
TB,V_disallowsModelCreation
T@"NSString",R,C,N,V_label
T@"NSDictionary",&,N,V_messagePayload
T@"NSString",&,N,V_messageName
T@?,C,N,V_messageResponseHandler
T@"NSUUID",&,N,V_messageTransactionIdentifier
TB,N,V_shouldEnqueueMirrorOutput
TB,N,V_shouldRollBackIfMirrorOutputFails
TB,N,V_disallowsCellularAccessForMirrorOutput
Tq,N,V_qualityOfService
T@"HMFActivity",&,N,V_activity
TQ,N,V_transactionItemsBatchLimit
_shouldEnqueueMirrorOutput
_shouldRollBackIfMirrorOutputFails
_disallowsCellularAccessForMirrorOutput
_requiresModelCreation
_disallowsModelCreation
_label
_messagePayload
_messageName
_messageResponseHandler
_messageTransactionIdentifier
_qualityOfService
_activity
_transactionItemsBatchLimit
TB,R
supportsSecureCoding
encodeWithCoder:
initWithCoder:
initWithLabel:
attributeDescriptions
isEqual:
hash
label
messagePayload
setMessagePayload:
messageName
setMessageName:
messageResponseHandler
setMessageResponseHandler:
messageTransactionIdentifier
setMessageTransactionIdentifier:
shouldEnqueueMirrorOutput
setShouldEnqueueMirrorOutput:
shouldRollBackIfMirrorOutputFails
setShouldRollBackIfMirrorOutputFails:
disallowsCellularAccessForMirrorOutput
setDisallowsCellularAccessForMirrorOutput:
qualityOfService
setQualityOfService:
activity
setActivity:
transactionItemsBatchLimit
setTransactionItemsBatchLimit:
requiresModelCreation
setRequiresModelCreation:
disallowsModelCreation
setDisallowsModelCreation:
.cxx_destruct
encodeInteger:forKey:
encodeBool:forKey:
enumerateKeysAndObjectsUsingBlock:
setObject:forKey:
countByEnumeratingWithState:objects:count:
dictionaryWithCapacity:
count
encodeObject:forKey:
decodeIntegerForKey:
decodeBoolForKey:
decodeObjectOfClasses:forKey:
decodeObjectOfClass:forKey:
isEqualToString:
copy
addObject:
initWithName:value:
array
optionsWithLabel:
optionsWithMessage:
responseHandler
transactionIdentifier
T@"HMBProcessingOptions",R,N,V_options
T@"NSArray",R,N,V_actions
T@"NAFuture",R,N,V_mirrorOutputResult
_options
_actions
_mirrorOutputResult
initWithOptions:actions:mirrorOutputResult:
options
actions
mirrorOutputResult
Ti,R,N,V_row
Ti,R,N,V_parent
T@"NSString",R,N,V_detail
_row
_parent
_detail
initWithRow:
parent
detail
arrayWithObjects:count:
numberWithInt:
intValue
objectAtIndex:
T^{sqlite3_stmt=},N,V_statement
T@"HMBSQLContext",R,W,N,V_context
T@"NSArray",R,N,V_queryPlans
_context
_statement
_queryPlans
initWithContext:statement:queryPlans:
initWithContext:statement:
dealloc
finalize
context
statement
setStatement:
queryPlans
assertOwner
performBlock:
queryPlansForContext:statement:
sqlStatementForContext:statement:
TB,N
explainStatements
setExplainStatements:
na_map:
UTF8String
stringByAppendingString:
decodeModelFromRecord:externalRecordFields:source:error:
encodeRecordFromModel:externalData:encodingContext:error:
encodeRecordFromModel:existingRecord:encodingContext:error:
keyStatus
addSuccessBlock:
isZoneRebuildInProgress
rebuild
futureWithNoResult
startUpRebuilderIfNeeded
handleLostKeys
handleZoneChangedNotification
handleUpdatedRebuilderModel:
isFinished
waitForPendingRebuild
T@"NAFuture",R,N
zoneRebuildInProgress
TB,R,N,GisZoneRebuildInProgress
Tq,R,N
hmbProperties
addEntriesFromDictionary:
dictionaryWithObjects:forKeys:count:
mutableCopy
subscriptionsData
T@"NSData",&,D,N
T@"HMBCloudZone",W,V_cloudZone
zoneID
T@"HMBCloudZoneID",&,D,N
needsZoneCreation
T@"NSNumber",&,D,N
needsZoneDeletion
T@"NSSet",&,N
T@"HMBCloudZoneRebuilderStatus",&,N,V_rebuilderStatus
_cloudZone
_rebuilderStatus
initWithModelID:parentModelID:
subscriptions
setSubscriptions:
cloudZone
setCloudZone:
rebuilderStatus
setRebuilderStatus:
setSubscriptionsData:
archivedDataWithRootObject:requiringSecureCoding:error:
unarchivedObjectOfClasses:fromData:error:
setWithArray:
setNeedsZoneDeletion:
setNeedsZoneCreation:
hmbExternalRecordType
share
T@"CKShare",&,D,N
T@"HMBSQLQueryStatement",R,N,V_statement
TQ,R,N,V_maximumRowsPerQuery
T@"NSMutableArray",&,N,V_cachedResults
T@"NSNumber",&,N,V_currentSequence
T@"NSError",&,N,V_error
Ti,N,V_sequenceBindOffset
_sequenceBindOffset
_error
_maximumRowsPerQuery
_cachedResults
_currentSequence
initWithStatement:initialSequence:maximumRowsPerSelect:
initWithStatement:initialSequence:maximumRowsPerSelect:error:
fetchRowFromStatement:skip:updatedSequence:error:
fetchRow:error:
nextObject
enumerateObjectsUsingBlock:
bindPropertiesToStatement:error:
error
setError:
maximumRowsPerQuery
cachedResults
setCachedResults:
currentSequence
setCurrentSequence:
sequenceBindOffset
setSequenceBindOffset:
longLongValue
addObjectsFromArray:
numberWithUnsignedInteger:
arrayWithCapacity:
hmf_dequeue
exceptionWithName:reason:userInfo:
stringWithFormat:
hmf_numberForKey:
TQ,N
maximumRowsPerSelect
setMaximumRowsPerSelect:
T@"NSURL",R,N,V_shareURL
T@"CKDeviceToDeviceShareInvitationToken",R,N,V_token
T@"HMBShareInvitationContext",R,N,V_context
T@"HMBCloudZoneID",R,N,V_cloudZoneID
T@"NSDate",R,N,V_dateCreated
_cloudZoneID
_dateCreated
_shareURL
_token
copyWithZone:
initWithURL:token:context:cloudZoneID:
initWithURL:token:context:cloudZoneID:dateCreated:
cloudZoneID
dateCreated
shareURL
token
isEqualToDate:
date
shortDescription
T@?,C,V_keychainAvailabilityTimerFactory
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
_lock
_container
_notificationCenter
_manateeAvailabilityFuture
_keychainAvailabilityFuture
_keychainAvailabilityTimer
_keychainAvailabilityTimerFactory
timerDidFire:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
logIdentifier
logCategory
initWithContainer:
initWithContainer:notificationCenter:
waitForManateeAvailability
waitForManateeAvailabilityAndRecheckIfAlreadyAvailable
waitForKeychainAvailability
handleAccountChangedNotification:
handleIdentityUpdateNotification:
keychainAvailabilityTimerFactory
setKeychainAvailabilityTimerFactory:
finishWithNoResult
removeObserver:name:object:
containerIdentifier
accountInfoWithCompletionHandler:
supportsDeviceToDeviceEncryption
accountStatus
resume
addObserver:selector:name:object:
initWithTimeInterval:options:
defaultCenter
unlock
TQ,R,N,V_blockRow
TQ,R,N,V_type
T@"NSData",R,N,V_optionsData
_blockRow
_type
_optionsData
initWithBlockRow:type:options:
blockRow
type
optionsData
Ti,R,N,V_zoneRowBindOffset
ascending
TB,R,N,GisAscending,V_ascending
TQ,R,N,V_zoneRow
_ascending
_zoneRowBindOffset
_zoneRow
initWithSQLContext:zoneRow:statement:isAscending:
zoneRow
zoneRowBindOffset
isAscending
initWithSQLContext:zoneRow:
T@"NSDictionary",R,N,V_arguments
_arguments
initWithContext:statement:queryPlans:arguments:
arguments
stringWithUTF8String:
dictionary
TQ,R,N,V_itemRow
T@"NSData",R,N,V_externalID
T@"NSData",R,N,V_externalData
T@"NSData",R,N,V_modelData
TQ,R,N,V_modelEncoding
_itemRow
_modelData
_modelEncoding
_externalID
_externalData
initWithItemRow:externalID:externalData:modelEncoding:modelData:
initWithStatement:returning:
itemRow
modelData
modelEncoding
externalID
externalData
T@"HMBModel",R,N,V_model
T@"NSNumber",R,C,N,V_outputBlockRow
_model
_outputBlockRow
initWithModel:outputBlockRow:externalData:
model
outputBlockRow
T@"HMBLocalZoneProcessModelContext",R,N,V_previousContext
T@"HMBLocalZoneProcessModelContext",R,N,V_mergedContext
T@"HMBModel",R,C,N,V_updateModel
T@"HMBModel",R,C,N,V_outputModel
TQ,R,N,V_recordRow
T@"NSUUID",R,N,V_modelSchema
T@"NSString",R,N,V_modelType
T@"HMBLocalSQLQueryTable",R,N,V_queryTable
T@"NSArray",R,N,V_encodedQueryableColumns
_previousContext
_mergedContext
_updateModel
_outputModel
_recordRow
_modelSchema
_modelType
_queryTable
_encodedQueryableColumns
initWithPreviousContext:mergedContext:updateModel:outputModel:outputBlockRow:recordRow:itemRow:modelSchema:modelType:externalID:queryTable:
previousContext
mergedContext
updateModel
outputModel
recordRow
modelSchema
modelType
queryTable
encodedQueryableColumns
na_all:
modificationDate
compare:
containsObject:
hmfErrorWithCode:
finishWithError:
blockOperationWithBlock:
addOperation:
observersForModelWithID:
queueIncompleteProcesses
triggerProcessForBlockRow:
outputBlockRowForTuple:activity:
shouldMirrorInputExternalData:overwriteExistingExternalData:
outputModelFromUpdateModel:mergedModel:
unarchivedObjectOfClass:fromData:error:
bytes
initWithUUIDBytes:
objectForKey:
UUID
length
UUIDString
localZone:didProcessModelDeletion:
localZone:didProcessModelCreation:
localZone:didProcessModelUpdate:
completionHandlerAdapter
addCompletionBlock:
finishWithResult:
futureWithError:
unsignedIntegerValue
objectForKeyedSubscript:
allObjects
initWithUUIDString:
setShare:
encodeShareModel:
decodeShareModelFromShare:
recordID
recordName
T@"HMBLocalSQLContext",W,N,V_owner
TQ,N,V_blockRow
T@"NSString",R,N,V_identifier
T@"HMFActivity",R,N,V_activity
_identifier
_owner
initWithOwner:identifier:zoneRow:blockRow:type:
insertExternalID:externalData:modelEncoding:modelData:
updateExternalID:externalData:modelEncoding:modelData:
commit:
abort
identifier
setBlockRow:
owner
setOwner:
invalidate
T@"NSMutableDictionary",R,N,V_createdRecords
_createdRecords
init
createdRecords
T@"CKDatabase",R,N,V_database
T@"HMBCloudDatabase",W,N,V_cloudDatabase
T@"HMBLocalZone",W,N,V_stateZone
T@"NSUUID",R,N,V_stateModelID
TB,R,N,V_needsZoneCreation
TB,R,N,V_needsZoneDeletion
T@"HMBCloudZoneID",&,N,V_zoneID
T@"NSMapTable",R,N,V_modelClassToRequiresPostProcessingMap
T@"NSMutableDictionary",R,N,V_inProgressPushFuturesByOutputBlockRow
T@"HMFUnfairLock",R,N,V_propertyLock
T@"NSString",R,N,V_deviceIdentifier
T@"NAFuture",&,N,V_shutdownFuture
T@"NAFuture",&,N,V_destroyFuture
T@"<HMBCloudZoneRebuilder>",&,N,V_rebuilder
T@"NSOperationQueue",R,N,V_recordOperationQueue
T@"NSOperationQueue",R,N,V_shareOperationQueue
T@"NAFuture",&,V_queuedCloudPullFuture
T@"NSMutableSet",&,V_queuedFetchRecordsContexts
T@"HMBCloudZoneShareModel",&,V_shareModel
T@"NSMutableDictionary",R,N,V_shareParticipantModelsByClientIdentifier
T@"HMBModelContainer",&,N,V_modelContainer
T@"NSArray",&,N,V_defaultDesiredKeys
T@"<HMBCloudZoneDelegate>",W,N,V_delegate
T@"HMBCloudZoneConfiguration",R,C,N,V_configuration
T@"HMBLocalZone",W,N,V_localZone
T@"NAFuture",R,N,V_startUp
_needsZoneCreation
_needsZoneDeletion
_startUp
_cloudDatabase
_delegate
_configuration
_localZone
_database
_stateZone
_stateModelID
_zoneID
_modelClassToRequiresPostProcessingMap
_inProgressPushFuturesByOutputBlockRow
_propertyLock
_deviceIdentifier
_shutdownFuture
_destroyFuture
_rebuilder
_recordOperationQueue
_shareOperationQueue
_queuedCloudPullFuture
_queuedFetchRecordsContexts
_shareModel
_shareParticipantModelsByClientIdentifier
_modelContainer
_defaultDesiredKeys
T@"<HMBLocalZoneID>",R,N
startUpWithLocalZone:
destroy
triggerOutputForOutputRow:options:
flush
shutdown
startUp
initWithCloudDatabase:configuration:state:
retryCloudKitOperation:afterError:retryBlock:
notifyDelegateOfError:forOperation:
startupWithModelContainer:error:
setModelContainer:
isInternalModel:
handleUpdatedInternalModels:
handleDeletion
cloudDatabase
setCloudDatabase:
delegate
setDelegate:
configuration
localZone
setLocalZone:
database
stateZone
setStateZone:
stateModelID
setZoneID:
modelClassToRequiresPostProcessingMap
inProgressPushFuturesByOutputBlockRow
propertyLock
deviceIdentifier
shutdownFuture
setShutdownFuture:
destroyFuture
setDestroyFuture:
rebuilder
setRebuilder:
recordOperationQueue
shareOperationQueue
queuedCloudPullFuture
setQueuedCloudPullFuture:
queuedFetchRecordsContexts
setQueuedFetchRecordsContexts:
shareModel
setShareModel:
shareParticipantModelsByClientIdentifier
modelContainer
defaultDesiredKeys
setDefaultDesiredKeys:
futureWithBlock:scheduler:
globalAsyncScheduler
waitUntilAllOperationsAreFinished
operationQueue
finishWithResult:error:
chainFutures:
lazyFutureWithBlock:scheduler:
cloudDatabase:encounteredError:withOperation:onZone:
flatMap:
recoverIgnoringError
setMaxConcurrentOperationCount:
strongToStrongObjectsMapTable
boolValue
T@"CKRecord",R,N,V_client
T@"CKRecord",R,N,V_server
T@"CKRecord",R,N,V_ancestor
_client
_server
_ancestor
initWithError:
initWithClientRecord:serverRecord:ancestorRecord:
client
server
ancestor
userInfo
T@"NSSet",R,N,V_updated
T@"NSSet",R,N,V_deleted
T@"NSDictionary",R,N,V_partialErrors
T@"NSDictionary",R,N,V_conflicts
T@"NSError",R,N,V_error
TB,R,N,V_fatalError
_fatalError
_updated
_deleted
_partialErrors
_conflicts
initWithUpdated:deleted:conflicts:partialErrors:fatalError:error:
initWithUpdated:deleted:conflicts:error:
updated
deleted
partialErrors
conflicts
fatalError
code
pushResultByMergingPushResult:withPushResult:
setByAddingObjectsFromSet:
futureWithResult:
markWithFormat:
initWithRecordsToSave:recordIDsToDelete:
setConfiguration:
setSavePolicy:
setMarkAsParticipantNeedsNewInvitationToken:
domain
setPerRecordCompletionBlock:
markWithReason:
setModifyRecordsCompletionBlock:
operationID
subarrayWithRange:
combineAllFutures:ignoringErrors:scheduler:
firstObject
lastObject
errorOnlyCompletionHandlerAdapter
addFailureBlock:
pushRecordsToUpdate:recordIDsToRemove:configuration:rollbackEnabled:needsNewInvitationToken:
pushRecordsToUpdate:recordIDsToRemove:configuration:rollbackEnabled:
manateeContainer
TB,GisManateeContainer,V_manateeContainer
T@"CKOperationConfiguration",C,V_defaultOperationConfiguration
T@"NSString",C,V_sourceApplicationBundleIdentifier
T@"HMFScheduler",&,N,V_apsRegistrationScheduler
TB,N,V_registerForDBNotifications
T@"CKContainerID",R,C,V_containerID
_manateeContainer
_registerForDBNotifications
_containerID
_sourceApplicationBundleIdentifier
_defaultOperationConfiguration
_apsRegistrationScheduler
mutableCopyWithZone:
initWithContainerID:
apsRegistrationScheduler
containerID
sourceApplicationBundleIdentifier
setSourceApplicationBundleIdentifier:
isManateeContainer
setManateeContainer:
defaultOperationConfiguration
setDefaultOperationConfiguration:
registerForDBNotifications
setRegisterForDBNotifications:
setApsRegistrationScheduler:
mainScheduler
T@"NSString",C,D
TB,D,GisManateeContainer
T@"CKOperationConfiguration",C,D
T@"HMFScheduler",&,D,N
TB,D,N
setAutomaticallyRetryNetworkFailures:
setDiscretionaryNetworkBehavior:
T@"HMBModel",R,V_model
T@"HMBProcessingOptions",R,V_options
T@"NAFuture",R,V_mirrorOutputFuture
_mirrorOutputFuture
initWithModel:options:mirrorOutputFuture:
mirrorOutputFuture
alloc
T@"HMBSQLStatement",R,N,V_deleteAll
T@"HMBSQLStatement",R,N,V_updateRecord
T@"HMBSQLStatement",R,N,V_deleteRecord
T@"NSHashTable",R,N,V_userQueries
TB,N,V_finalized
T@"HMBLocalSQLContext",R,W,N,V_context
T#,R,N,V_modelClass
T@"NSArray",R,N,V_columnFields
T@"NSArray",R,N,V_columnNames
T@"HMBSQLQueryStatement",R,N,V_selectAll
T@"NSString",R,N,V_dropTableSQL
_finalized
_modelClass
_columnFields
_columnNames
_selectAll
_dropTableSQL
_deleteAll
_updateRecord
_deleteRecord
_userQueries
initWithContext:queryModel:prepareOnly:
performQueryOn:properties:filter:
_deleteQueryForRecordRow:error:
_deleteAllQueriesForZoneRow:error:
buildQueriableFieldsForModel:
_updateQueryForZoneRow:recordRow:encodedColumns:error:
modelClass
columnFields
columnNames
selectAll
dropTableSQL
deleteAll
updateRecord
deleteRecord
userQueries
finalized
setFinalized:
removeAllObjects
null
removeObjectForKey:
hasPrefix:
na_setByRemovingObjectsFromSet:
allKeys
componentsJoinedByString:
arrayWithArray:
minusSet:
hashTableWithOptions:
T@"NSHashTable",R,N,V_observersForAllModels
T@"NSMutableDictionary",R,N,V_modelObserversByModelID
T@"NSHashTable",R,N,V_mirrorOutputObservers
T@"HMBLocalSQLContext",R,N,V_sql
TB,N,V_hasStartedUp
T@"HMBLocalDatabase",W,N,V_localDatabase
T@"HMBModelContainer",R,N,V_modelContainer
T@"HMBLocalZoneConfiguration",R,N,V_configuration
T@"<HMBLocalZoneID>",R,N,V_zoneID
T@"<HMBMirrorProtocol>",R,N,V_mirror
T@"<HMBLocalZoneDelegate>",W,N,V_delegate
_hasStartedUp
_localDatabase
_mirror
_observersForAllModels
_modelObserversByModelID
_mirrorOutputObservers
_sql
initWithLocalDatabase:zoneID:zoneRow:configuration:mirror:
addObserverForAllModels:
addObserver:forModelWithID:
removeObserverForAllModels:
removeObserver:forModelWithID:
externalDataForModelID:error:
externalDataForExternalID:error:
externalIDForModelID:error:
modelIDForExternalID:error:
setExternalData:forModelID:
setExternalData:forExternalID:
destroyWithError:
addModels:andRemoveModelIDs:options:
updateModels:andRemoveModelIDs:options:
createModels:options:
addModels:options:
updateModels:options:
removeModelIDs:options:
removeModelsWithParentModelID:options:
removeModelsAndDescendantModelsWithIDs:depth:options:
removeAllModelsOfTypes:options:
createLocalInputWithError:
shouldLogPrivateInformation
localDatabase
setLocalDatabase:
mirror
observersForAllModels
modelObserversByModelID
mirrorOutputObservers
hasStartedUp
setHasStartedUp:
lazyFutureWithBlock:
errorWithDomain:code:userInfo:
addOperationWithBlock:
setObject:forKeyedSubscript:
removeObject:
weakObjectsHashTable
T@"NSString",R,N,V_message
TQ,R,N,V_rebuildState
Tq,R,N,V_keyStatus
_keyStatus
_message
_rebuildState
hmbDecodeData:fromStorageLocation:error:
hmbEncodeForStorageLocation:error:
initWithState:message:
message
rebuildState
keyStatusString:
rebuilderStateString:
hmf_stringForKey:
TQ,R,N,V_returning
Ti,R,N,V_modelTypeBindOffset
_modelTypeBindOffset
_returning
initWithLocalZone:zoneRow:modelType:returning:
returning
modelTypeBindOffset
migrateUnsupportedModels
initWithRecordName:zoneID:
recordIDForModel:
initWithRecordType:recordID:
populateManateeCloudRecord:withModel:encodingContext:error:
recordType
encodeManateeCloudModel:existingRecord:encodingContext:error:
decodeManateeCloudFromRecord:externalRecordFields:source:error:
T@"NSData",R,N
T@"NSString",R,N,V_name
T@"NSArray",R,N
_name
T@"NSString",R,N
name
labels
initWithName:
dataUsingEncoding:
base64EncodedStringWithOptions:
TB,R,N
T@"NSSet",R,N
T@"NSUUID",R,N
T@"NSDictionary",R,N
T@"NSSet",R,C,N
T@"HMFVersion",R,N
T#,R,N
hmbSetProperty:named:
hmbUnsetPropertyNamed:
hmbDefaultValueForPropertyNamed:
hmbPropertyNamed:isSet:
hmbPropertyNamed:
hmbPropertyIsAvailable:
hmbPropertyWasSet:
hmbPropertyIsReadOnly:
hmbShouldLogPrivateInformation
hmbPropertyNames
hmbQueries
hmbMutableModelClassesWithQueries
hmbModelClassesWithQueries
hmbResetModelsWithQueries
hmbPrepareQueries
hmbSchemaHashRoot
hmbExcludeFromCloudStorage
hmbReadOnlyBefore
hmbGenericRepresentation
propertyDiffersFrom:to:
formattedStringForValue:
hmbExternalProperties
hmbExternalRecordFields
resolveInstanceMethod:
setValue:forKey:
setHmbReserved:
hmbReserved
hmbContainerDataVersion
T@"HMBModelContainer",W,N,V_hmbModelContainer
T@"HMFVersion",&,N,V_hmbDataVersion
T@"NSUUID",&,N,V_hmbModelID
T@"NSUUID",&,N,V_hmbParentModelID
T@"NSString",&,N,V_hmbType
T@"NSSet",&,N,V_hmbUnavailableProperties
T@"NSSet",&,N,V_hmbReadOnlyProperties
TQ,N,V_hmbRecordRow
T@"NSMutableDictionary",&,N,V_hmbReserved
T@"HMFVersion",&,N
TB,R,N,V_hmbIgnoreModel
_hmbIgnoreModel
_hmbReserved
_hmbModelID
_hmbParentModelID
_hmbType
_hmbDataVersion
_hmbRecordRow
_hmbUnavailableProperties
_hmbReadOnlyProperties
_hmbModelContainer
populateModelWithDictionary:fromStorageLocation:using:
hmbDataVersion
hmbAssociateWithContainer:
_validateType:error:
validateType:path:
hmbPrepareForStorageLocation:
prepareForStorageLocation:using:updatedModelIDs:error:
hmbSetProperties
hmbIsModelReadOnly
hmbIsModelGenericRepresentation
hmbValidForStorage:
hmbModelByMergingFromModel:isFromCloud:error:
hmbMergeSetPropertiesFromModel:
hmbIsDifferentFromModel:differingFields:
hmbType
setHmbMinimumSupportedVersion:
hmbMinimumSupportedVersion
hmbCanonicalType
hmbCanonicalTypeInferred
hmbSetExternalProperties
hmbSetExternalRecordFields
hmbExternallyFetched
setHmbExternallyFetched:
hmbPropertyIsExternal:
dumpDebug:
dumpDebug
hmbDescription
hmbModelID
setHmbModelID:
hmbParentModelID
setHmbParentModelID:
setHmbType:
setHmbDataVersion:
hmbRecordRow
setHmbRecordRow:
hmbUnavailableProperties
setHmbUnavailableProperties:
hmbReadOnlyProperties
setHmbReadOnlyProperties:
hmbIgnoreModel
hmbModelContainer
setHmbModelContainer:
componentsSeparatedByString:
numberWithBool:
hmf_boolForKey:
isSubclassOfClass:
na_filter:
allocWithZone:
valueForKey:
appendFormat:
string
initWithVersionString:
versionString
isLessThanOrEqualTo:
setWithCapacity:
isGreaterThan:
hmf_dictionaryForKey:
isGreaterThanOrEqualTo:
characterAtIndex:
properties
debugString:
na_dictionaryByMappingValues:
setString:
reverseObjectEnumerator
arrayWithObject:
removeObjectsForKeys:
lowercaseString
substringWithRange:
preferenceForKey:
sharedPreferences
isLessThan:
T@"CKRecordID",R,V_userRecordID
_userRecordID
initWithUserRecordID:
userRecordID
TB,N,V_readOnly
TB,N,V_createIfNeeded
_readOnly
_createIfNeeded
readOnly
setReadOnly:
createIfNeeded
setCreateIfNeeded:
T@"HMBModelContainer",&,D,N
T@"<HMBLocalZoneDelegate>",W,D,N
T@"CKStreamingAsset",&,N,V_uploadStreamingAsset
T@"CKStreamingAsset",&,N,V_downloadStreamingAsset
_uploadStreamingAsset
_downloadStreamingAsset
hmbObjectByMergingFromObject:
includeInModelEncoding
applyNativeCKValue:fromSource:associatingWith:toModel:propertyNamed:
nativeCKValueWithEncodingContext:error:
initWithUploadStreamingAsset:
initWithUploadStreamingAsset:downloadStreamingAsset:
uploadStreamingAsset
setUploadStreamingAsset:
downloadStreamingAsset
setDownloadStreamingAsset:
initWithExpectedSizeBytes:
T@"NAFuture",R,V_processingFuture
_processingFuture
initWithProcessingFuture:
processingFuture
TQ,N,V_zoneRow
T@"<HMBLocalZoneID>",&,N,V_identifier
T@"NSUUID",&,N,V_replication
_replication
initWithZoneRow:
initWithZoneRow:name:token:
setIdentifier:
setZoneRow:
replication
setReplication:
requestUUID
setRequestCompletedBlock:
peformCodeOperationWithServiceName:functionName:request:responseClass:
setCodeOperationCompletionBlock:
initWithServiceName:functionName:responseClass:
setRequest:
T@"CKRecord",&,N,V_previousSentinelRebuildRecord
T@"NSUUID",&,N,V_lastRebuildUUID
T@"HMFTimer",&,N,V_uploadMonitorWatchdogTimer
T@"HMBCloudZone",W,N,V_cloudZone
T@"NAFuture",&,N,V_rebuildCompleteFuture
T@"HMBCloudZoneRebuilderStatus",C,V_rebuilderStatus
_rebuildCompleteFuture
_previousSentinelRebuildRecord
_lastRebuildUUID
_uploadMonitorWatchdogTimer
T@"HMBCloudZoneRebuilderStatus",R,C
zoneStartUp
handleIdentityLost
handleZoneChanged
rebuildCompleteFuture
initWithCloudZone:
setRebuildCompleteFuture:
previousSentinelRebuildRecord
setPreviousSentinelRebuildRecord:
lastRebuildUUID
setLastRebuildUUID:
uploadMonitorWatchdogTimer
setUploadMonitorWatchdogTimer:
cloudDatabase:didChangeManateeKeysForZoneWithID:
setUniqueToken:
setHasCompleted:
size
hmf_errorForKey:
anyObject
isHMFError
cloudZone:didChangeRebuildStatus:
initWithFormat:arguments:
T@"NSMapTable",R,N,V_queryFieldsCache
T@"HMBLocalZone",R,W,N,V_localZone
T@"<HMBMirrorProtocol>",R,W,N,V_mirror
T@"NSMapTable",C,N,V_classToNameTransform
T@"NSMapTable",C,N,V_nameToClassTransform
T@"NSMapTable",&,N,V_objectPropertyHashLookup
T@"NSMapTable",&,N,V_classReadOnlyVersionCache
T@"NSMapTable",&,N,V_classUnavailableVersionCache
T@"HMFVersion",R,C,N,V_legacyDataVersion
T@"HMFVersion",R,C,N,V_dataVersion
_legacyDataVersion
_dataVersion
_queryFieldsCache
_classToNameTransform
_nameToClassTransform
_objectPropertyHashLookup
_classReadOnlyVersionCache
_classUnavailableVersionCache
initWithDataVersion:legacyDataVersion:
readOnlyVersionsForModelClass:
unavailableVersionsForModelClass:
bestModelEncodingForStorageLocation:
typeNameForModelClass:
modelClassForTypeName:
dataFromModel:encoding:storageLocation:updatedModelIDs:error:
modelFromDictionary:storageLocation:typeName:error:
modelFromData:encoding:storageLocation:type:error:
modelFromData:encoding:storageLocation:error:
schemaHashForModel:
updateLocalZone:
updateMirror:
_modelClassFromDictionary:typeName:error:
encodePropertyValue:forProperty:field:storageLocation:error:
decodePropertyValueFromData:forProperty:field:storageLocation:error:
legacyDataVersion
dataVersion
queryFieldsCache
classToNameTransform
setClassToNameTransform:
nameToClassTransform
setNameToClassTransform:
objectPropertyHashLookup
setObjectPropertyHashLookup:
classReadOnlyVersionCache
setClassReadOnlyVersionCache:
classUnavailableVersionCache
setClassUnavailableVersionCache:
isAtLeastVersion:
hmf_UUIDWithNamespace:data:
appendData:
sortedArrayUsingSelector:
setTypeName:forModelClass:
decodeAsNSDictionary:error:
decodeAsOPACK:error:
encodeAsNSDictionary:error:
encodeAsOPACK:error:
allowedTypes
internalAllowedTypes
initWithDomain:code:userInfo:
setByAddingObject:
setWithSet:
createMirrorInputWithError:
uniqueToken
T@"NSUUID",&,D,N
hasCompleted
sentinelUUID
T@"CKContainerID",R,N,V_containerID
Tq,R,N,V_scope
T@"NSUUID",R,N,V_modelID
_scope
_modelID
initWithContainerID:scope:
initWithContainerID:scope:name:modelID:
scope
modelID
environment
shouldUpdateClients
setShouldUpdateClients:
TB,N,V_shouldUpdateClients
_shouldUpdateClients
shouldUpdateClientsAction
participant
T@"HMBShareParticipant",&,D,N
enumerateLinesUsingBlock:
resolveConflicts:options:
_acceptInvitation:
acceptInvitation:
T@"NSOperationQueue",&,N,V_queue
T@"HMBLocalSQLContext",&,N,V_local
T@"NSMapTable",R,N,V_openZonesByZoneID
T@?,C,N,V_localZoneFactory
T@"<HMBLocalDatabaseDelegate>",W,N,V_delegate
_queue
_local
_openZonesByZoneID
_localZoneFactory
initWithDatastorePath:configuration:
initWithLocalSQLContext:configuration:
fetchZonesWithError:
openZoneWithZoneID:configuration:error:
openedZoneWithZoneID:
openZoneWithMirror:configuration:error:
openedZoneWithMirror:
removeZone:
removeLocalDataForZone:error:
handleLocalZoneShutdown:
queue
setQueue:
local
setLocal:
openZonesByZoneID
localZoneFactory
setLocalZoneFactory:
localDatabase:willRemoveZoneWithID:
strongToWeakObjectsMapTable
setName:
path
desiredKeys
setRecordChangedBlock:
setRecordWithIDWasDeletedBlock:
setRecordZoneFetchCompletionBlock:
performCloudPullWithFetchToken:options:
setFetchRecordZoneChangesCompletionBlock:
hasPerformedInitialFetch
performCloudPullWithOptions:
setDesiredKeys:
setPreviousServerChangeToken:
initWithRecordZoneIDs:configurationsByRecordZoneID:
T@"HMBLocalDatabase",R,N,V_localDatabase
T@"HMBLocalZone",R,N,V_stateZone
T@"HMBCloudDatabaseStateModel",&,N,V_privateDatabaseState
T@"HMBCloudDatabaseStateModel",&,N,V_sharedDatabaseState
T@"HMBCloudDatabaseStateModel",&,N,V_publicDatabaseState
T@"NSMutableDictionary",R,N,V_zoneStateByZoneID
T@"CKContainer",R,N,V_container
T@"HMBCloudCredentialsAvailabilityListener",R,N,V_credentialsAvailabilityListener
T@"CKDatabase",R,N,V_sharedDatabase
T@"CKDatabase",R,N,V_privateDatabase
T@"CKDatabase",R,N,V_publicDatabase
T@?,C,N,V_cloudZoneFactory
T@"NSOperationQueue",R,N,V_invitationOperationQueue
T@"NSOperationQueue",R,N,V_databaseFetchOperationQueue
T@"NAFuture",&,N,V_initialCloudSyncFuture
T@"<HMBCloudDatabaseDelegate>",W,N,V_delegate
T@"CKContainerID",R,N
T@"HMBCloudDatabaseConfiguration",R,C,N,V_configuration
_privateDatabaseState
_sharedDatabaseState
_publicDatabaseState
_zoneStateByZoneID
_credentialsAvailabilityListener
_sharedDatabase
_privateDatabase
_publicDatabase
_cloudZoneFactory
_invitationOperationQueue
_databaseFetchOperationQueue
_initialCloudSyncFuture
handler:didReceivePushForTopic:
handler:didReceiveCKNotification:
handler:didReceiveMessageWithUserInfo:
initWithLocalDatabase:stateZone:container:configuration:databaseStateModelsByScope:zoneStateModels:
initWithLocalDatabase:configuration:
performInitialCloudSync
addContainerOperation:
addDatabaseOperation:forScope:
performAdministrativeFetchForAllDatabases:
performAdministrativeFetchForDatabaseScope:withForce:
handleCreatedZoneIDs:
handleUpdatedZonesIDs:
handleRemovedZoneIDs:userInitiated:
openOrCreatePrivateZoneWithID:configuration:delegate:error:
openExistingPrivateZoneWithID:configuration:delegate:error:
openExistingSharedZoneWithID:configuration:delegate:error:
removeZoneWithID:
_retryCloudKitOperationAfterError:retryBlock:
removeStateForZoneID:
operationConfigurationWithProcessingOptions:
privateDatabaseState
setPrivateDatabaseState:
sharedDatabaseState
setSharedDatabaseState:
publicDatabaseState
setPublicDatabaseState:
zoneStateByZoneID
container
credentialsAvailabilityListener
sharedDatabase
privateDatabase
publicDatabase
cloudZoneFactory
setCloudZoneFactory:
invitationOperationQueue
databaseFetchOperationQueue
initialCloudSyncFuture
setInitialCloudSyncFuture:
cloudDatabase:didReceiveMessageWithUserInfo:
recordZoneID
databaseScope
setAllowsCellularAccess:
cloudDatabase:encounteredError:withOperation:onContainer:
immediateScheduler
cloudDatabase:willRemoveZoneWithID:
cloudDatabase:didRemoveZoneWithID:
integerValue
numberWithInteger:
cloudDatabase:didCreateZoneWithID:
setLastAdministrativeFetch:
ownerName
timeIntervalSinceNow
combineAllFutures:scheduler:
initWithSubscriptionID:
serverPreferredPushEnvironmentWithCompletionHandler:
setCloudID:
initWithContainerID:options:
setUseZoneWidePCS:
sharedCloudDatabase
privateCloudDatabase
publicCloudDatabase
extantDatabases
extantDatabasesLock
initWithOptions:capacity:
setFetchRecordZonesCompletionBlock:
setRecordZonesToSave:
setRecordZoneIDsToDelete:
setModifyRecordZonesCompletionBlock:
initWithZoneID:
fetchZonesOn:
createPrivateZoneWithID:
removePrivateZoneWithID:
fetchAllRecordZonesOperation
Ti,R,N,V_offset
T@"HMBModelField",R,N,V_modelField
_offset
_modelField
initWithName:offset:modelField:
offset
modelField
initWithLocalZone:statement:initialSequence:arguments:maximumRowsPerSelect:
bindPropertiesToStatement:arguments:zoneBindRowOffset:zoneRow:error:
Ti,R,N,V_modelClassNameOffset
T@"NSString",R,N,V_modelClassName
_modelClassNameOffset
_modelClassName
initWithLocalZone:modelClassName:
modelClassNameOffset
modelClassName
Ti,R,N,V_parentModelIDOffset
T@"NSUUID",R,N,V_parentModelID
_parentModelIDOffset
_parentModelID
initWithLocalZone:parentModelID:
parentModelIDOffset
parentModelID
initWithLocalZone:parentModelID:modelClassName:
T@"NSUUID",&,N,V_parentModelID
T@"NSMutableOrderedSet",R,N,V_modelStack
T@"NSMutableSet",R,N,V_returnedModels
_modelStack
_returnedModels
initWithLocalZone:modelID:
setParentModelID:
modelStack
returnedModels
removeObjectAtIndex:
orderedSet
T@"HMBLocalSQLQueryTableQueryAll",R,N,V_query
T@"NSArray",R,N,V_columns
T@?,R,N,V_filter
_query
_columns
_filter
initWithLocalZone:statement:columns:filter:
query
columns
filter
setRecordType:
registerSubscriptionForExternalRecordType:
unregisterSubscriptionForExternalRecordType:
initWithZoneID:subscriptionID:
T@"NSSet",R,C
T@?,R,C,V_block
T@"NAFuture",R,V_future
_block
_future
initWithBlock:
cancelWithError:
main
block
future
finish
initWithTimeout:
T@"HMBCloudZone",R,V_cloudZone
initWithCloudZone:block:
recordChangeTag
hmbIsRetryShareOperationError
hmbRetryShareOperationError
TB,R,GhmbIsRetryShareOperationError
T@"NSString",R,N,V_propertyName
T@"<HMBQueryableModelFieldCoder>",R,N,V_defaultValue
_propertyName
_defaultValue
initWithPropertyName:defaultValue:
propertyName
defaultValue
argumentWithPropertyName:
argumentWithPropertyName:defaultValue:
T@"NSString",R,N,V_sqlPredicate
T@"NSArray",R,N,V_sqlColumns
TQ,R,N,V_maximumRowsPerSelect
T@"NSNumber",R,N,V_initialSequence
T@"NSMapTable",R,N,V_preparedQueries
T#,&,N,V_modelClass
T@"NSString",R,N,V_sqlSelect
T@"NSDictionary",R,N,V_argumentFields
T@"NSDictionary",R,N,V_encodedDefaultValuesByArgumentName
_sqlPredicate
_sqlColumns
_maximumRowsPerSelect
_initialSequence
_preparedQueries
_sqlSelect
_argumentFields
_encodedDefaultValuesByArgumentName
initWithSQLPredicate:sqlColumns:initialSequence:maximumRowsPerSelect:arguments:
setModelClass:
prepareOnTable:
performQueryOn:arguments:
hasExpectedIndexes
sqlPredicate
sqlColumns
initialSequence
preparedQueries
sqlSelect
argumentFields
encodedDefaultValuesByArgumentName
weakToWeakObjectsMapTable
queryWithSQLPredicate:ascending:arguments:
T@"NSString",R,N,V_indexNameSuffix
T@"NSArray",R,N,V_indexedColumns
_indexNameSuffix
_indexedColumns
initWithSQLPredicate:sqlColumns:initialSequence:maximumRowsPerSelect:indexNameSuffix:indexedColumns:arguments:
indexName
indexNameSuffix
indexedColumns
na_allObjectsPassTest:
containsString:
na_any:
objectEnumerator
queryWithSQLPredicate:ascending:indexedProperties:arguments:
T@"NSString",R,C,V_sequenceArgumentName
_sequenceArgumentName
initWithSQLPredicate:sqlColumns:sequenceArgumentName:maximumRowsPerSelect:indexNameSuffix:indexedColumns:arguments:
sequenceArgumentName
queryWithSQLPredicate:maximumRowsReturned:indexedProperties:arguments:
queryWithSQLPredicate:sequenceArgumentName:indexedProperties:arguments:
countMatchesOn:arguments:error:
queryWithSQLPredicate:indexedProperties:arguments:
TQ,R,V_recordRow
TQ,R,V_outputBlockRow
T@"NSData",C,N,V_externalID
T@"NSData",C,N,V_externalData
initWithOutputBlockRow:recordRow:model:queryTable:externalID:externalData:
setExternalID:
setExternalData:
initWithBlockRow:options:
allMirrorOutputObservers
localZone:willPerformMirrorOutputForModel:
addMirrorOutputObserver:
removeMirrorOutputObserver:
fetchOptionsForOutputBlock:error:
fetchRecordsForOutputBlock:error:
markGroupAsSentWithOutputBlock:tuples:
removeOutputBlockWithRow:error:
T@"NSUUID",R,N,V_hmbModelID
hmbDescriptionForEncodedQueryableVariable:
hmbEncodeQueryableParameter:
hmbDecodeQueryableParameter:
initWithModelID:
associateWithContainer:
isValidForContainer:updatedModelIDs:
referencedModelFromLocalZone:error:
TQ,N,V_action
T@"CKReference",&,N,V_reference
_reference
_action
initWithModelID:action:
action
referencedModelFromCloudZone:allowExternalFetch:
reference
setReference:
setAction:
initWithRecordID:action:
referenceAction
zoneName
T@"CKUserIdentityLookupInfo",R,V_lookupInfo
T@"NSUUID",R,C,V_participantClientIdentifier
TB,V_shouldGrantWriteAccess
_shouldGrantWriteAccess
_participantClientIdentifier
_lookupInfo
initWithParticipantClientIdentifier:emailAddress:
initWithParticipantClientIdentifier:phoneNumber:
initWithParticipantClientIdentifier:cloudShareID:
initWithParticipantClientIdentifier:lookupInfo:
participantClientIdentifier
shouldGrantWriteAccess
setShouldGrantWriteAccess:
lookupInfo
initWithPhoneNumber:
initWithEmailAddress:
T@"HMBModel",R,V_previousModel
_previousModel
initWithModel:previousModel:options:mirrorOutputFuture:
previousModel
arrayByAddingObjectsFromArray:
setWithObject:
_fetchCompleteModelsWithIDs:force:
fetchCompleteModels:force:
unionSet:
fetchCompleteModelsForRecordIDs:
fetchCompleteModelWithID:
fetchCompleteModelsWithIDs:
fetchCompleteModel:force:
fetchCompleteModelForRecordID:
T@"NSData",&,N,V_currentSequenceAsData
T@"NSData",&,N,V_lastReturnedSequence
T@"NSMutableSet",&,N,V_returnedIDs
_currentSequenceAsData
_lastReturnedSequence
_returnedIDs
fetchRowFromStatement:skip:updatedSequenceColumn:error:
bindPropertiesToStatement:currentSequence:error:
initWithLocalZone:statement:initialSequence:sequenceBindOffset:arguments:maximumRowsPerSelect:
currentSequenceAsData
setCurrentSequenceAsData:
lastReturnedSequence
setLastReturnedSequence:
returnedIDs
setReturnedIDs:
T@"NSSet",R,C,V_recordIDs
_recordIDs
initWithRecordIDs:future:
recordIDs
_fetchRecordsWithRecordIDs:
setFetchRecordsCompletionBlock:
_fetchRecordsForContexts:
allValues
fetchRecordsWithRecordIDs:
na_flatMap:
fetchRecordWithRecordID:canRetry:
initWithRecordIDs:
TQ,R,N,V_pushEncoding
T@"NSData",R,N,V_pushData
T@"NSNumber",R,N,V_pushBlockRow
_pushEncoding
_pushData
_pushBlockRow
initWithRecordRow:externalID:externalData:modelID:modelEncoding:modelData:modelSchema:modelType:pushEncoding:pushData:pushBlockRow:
pushEncoding
pushData
pushBlockRow
initWithSQLContext:zoneRow:returning:
updateServerChangeToken:forDatabaseWithScope:
updateServerChangeToken:forZoneWithID:
serverChangeTokenForZoneWithID:
updateRebuildStatus:forZoneWithID:
updateNeedsZoneDeletion:forZoneWithID:
deallocForZoneWithID:
setServerChangeToken:
T@"CKRecordZoneID",R,C,V_zoneID
T@"NSData",R,N,V_token
initWithContainerID:scope:zoneID:name:modelID:
initWithContainerID:scope:zoneID:
initWithZoneName:ownerName:
fetchSubscriptionsOn:
subscriptionIDForCloudID:recordType:
subscriptionIDForZoneID:recordType:
fetchAllSubscriptionsOperation
setFetchSubscriptionCompletionBlock:
pushGroupWithBlockRow:tuples:options:activity:completionPromise:
_triggerOutputForOutputRow:options:
cloudZone:didEncounterConflicts:options:
localZone:didCompleteProcessingWithResult:
localZone:willReindexTableForModel:
localZoneWillReindex:
evaluateWithObject:
queryModelsOfType:filter:
queryModelsOfType:predicate:
queryModelsOfType:properties:filter:
fetchModels
queryModelsOfType:
queryModelsWithParentModelID:
queryModelsWithParentModelID:ofType:
queryModelsRecursivelyStartingWithModelID:
queryModelsUsingQuery:
countModelsUsingQuery:arguments:error:
rebuildIndexesIfNeeded
queryModelsUsingQuery:arguments:
stageAdditionForModel:externalID:externalData:error:
stageRemovalForModelWithExternalID:error:
commitWithOptions:error:
T@"<HMBAPSConnectionDelegate>",W
T@"NSArray",C
requestTokenForTopic:identifier:
enabledTopics
setEnabledTopics:
_apsLock
_apsConnection
_observers
connection:didReceiveToken:forTopic:identifier:
connection:didReceivePublicToken:
connection:didReceiveIncomingMessage:
initWithAPSConnection:
addObserver:forBundleIdentifier:
notificationFromRemoteNotificationDictionary:
topic
sharedHandlerForEnvironment:
initWithEnvironmentName:namedDelegatePort:queue:
initWithOwner:identifier:zoneRow:blockRow:
updateModelID:modelEncoding:modelData:
TB,V_shouldRebuildOnManateeKeyLoss
_shouldRebuildOnManateeKeyLoss
shouldRebuildOnManateeKeyLoss
setShouldRebuildOnManateeKeyLoss:
TB,D
localDatabaseShouldLogPrivateInformation:
localDatabase:detectedLocalCorruptionWithInfo:
detectedLocalCorruptionWithInfo:
handleUpdatedShareModel:
_addShareOperationAfterStartupWithName:block:
handleUpdatedShareParticipantModels:
initWithRecordZoneID:
setParticipantVisibility:
_pushUpdatedShare:
_leaveCloudShareRequestingNewInvitationToken:allowCloudPull:
_handleLeaveCloudShareErrorUsingCloudZoneRecordPushResult:
_addShareOperationWithName:block:
handleUpdatedShare:error:
na_firstObjectPassingTest:
handleUpdatedShareParticipantRecord:error:
initializeShareModels
createShareModel
leaveCloudShareRequestingNewInvitationToken:
_pushUpdatedShare:participantRecord:
_pushDeletedParticipantRecordIDs:
userIdentity
currentUserParticipant
participantWithClientIdentifier:
_fetchInvitationWithContext:usingShare:
participants
setPermission:
invitationToken
participantID
_setWriteAccessEnabled:forParticipant:usingShare:
permission
_revokeShareForParticipant:usingShare:
na_dictionaryWithKeyGenerator:
fetchOwnerParticipantCloudShareID
fetchCurrentParticipantCloudShareID
fetchCloudShareIDForShareParticipantClientIdentifier:
fetchInvitationWithContext:
setWriteAccessEnabled:forParticipant:
revokeShareForParticipant:
addParticipant:
removeParticipant:
setParticipant:
cloudZone:didRemoveParticipantWithClientIdentifier:
_createShareModel
serverChangeToken
T@"CKServerChangeToken",&,D,N
initWithColumns:
T@"NSMutableDictionary",R,N,V_mutableIndexes
T@"NSSet",R,N,V_columnNames
_mutableIndexes
initWithColumnNames:
indexes
mutableIndexes
reloadSQLQueryMetadata
verifyTables
prepareTables
TQ,R,N,V_queryRow
T@"NSData",R,N,V_queryData
_queryRow
_queryData
initWithQueryRow:data:
queryRow
queryData
T@"NSDictionary",R,N,V_tuples
_tuples
initWithRecordRow:tuples:
tuples
setUserIdentityLookupInfos:
setShareParticipantFetchedBlock:
fetchParticipantWithLookupInfo:
setFetchShareParticipantsCompletionBlock:
fetchShareMetadataForInvitation:
setShareURLs:
acceptInvitationWithShareMetadata:
setShareInvitationTokensByShareURL:
setPerShareMetadataBlock:
fetchCurrentUserRecordForDatabase:
setFetchShareMetadataCompletionBlock:
setShareMetadatas:
setPerShareCompletionBlock:
setAcceptSharesCompletionBlock:
fetchCurrentUserRecordOperation
T@"HMBLocalZone",R,V_localZone
T@"HMBLocalSQLContextInputBlock",R,V_inputBlock
_inputBlock
initWithLocalZone:inputBlock:
stageRemovalForModelWithID:error:
inputBlock
initWithModel:externalID:
_insertDeletionItemsForModelsAndDescendantModelsWithBlockRow:context:type:modelIDs:currentDepth:maximumDepth:options:error:
createOutputBlockWithError:
createInputBlockWithType:error:
insertBlockWithType:options:items:error:
insertBlockToRemoveAllModelsWithType:modelTypes:options:error:
insertBlockToRemoveChildModelsWithType:parentModelID:options:error:
insertBlockToRemoveModelsAndDescendantModelsWithType:modelIDs:depth:options:error:
fetchReadyBlocksWithType:error:
fetchItemsInBlock:error:
removeBlockWithRow:error:
externalData:
hmbSetObject:forKey:encrypted:
hmbObjectForKey:encrypted:
recordFromExternalData:error:
acceptanceStatus
hmbIsEqualToParticipant:
appendString:
initWithCapacity:
appendBytes:length:
hmbCompress
hmbUncompress
hmbIsCloudKitInternalError
hmbIsCloudKitError
doubleValue
hmbIsCKPartialFailureError
hmbCloudKitRetryDelay
hmbCKInternalError
hmbIsUnretriableCKInternalErrorCode:
_hmbIsCKErrorWithCode:
_hmbIsCKErrorOrHasPartialFailureWithCode:
hmbIsSQLiteConstraintError
hmbIsCKZoneDeletedError
hmbIsCKChangeTokenExpiredError
hmbIsCKMissingManateeIdentityError
hmbIsCKLimitExceededError
hmbIsCKManateeUnavailableError
hmbIsCKUnsyncedKeychainError
hmbIsCKNotAuthenticatedError
majorVersion
minorVersion
updateVersion
initWithMajorVersion:minorVersion:updateVersion:
hmbData
hmbVersionFromData:
initWithData:encoding:
stringWithCString:encoding:
hmbUUIDFromData:
getUUIDBytes:
dataWithBytes:length:
timeIntervalSinceReferenceDate
numberWithDouble:
dateWithTimeIntervalSinceReferenceDate:
hmbOPACKDataFromDictionaryWithError:
hmbDictionaryFromOPACKData:error:
externalID:
recordIDFromExternalID:error:
data
modifiedByDevice
initRequiringSecureCoding:
encodeSystemFieldsWithCoder:
finishEncoding
encodedData
initForReadingFromData:error:
finishDecoding
encryptedValuesByKey
Td,R
setFetchDatabaseChangesCompletionBlock:
performCloudPullForScope:
databaseStateForDatabaseScope:
initWithPreviousServerChangeToken:
setFetchAllChanges:
setRecordZoneWithIDChangedBlock:
setRecordZoneWithIDWasDeletedBlock:
T@"NSData",&,N,V_encoded
T@"HMBModel",&,N,V_model
_encoded
initWithModel:encoded:
encoded
setEncoded:
setModel:
update:remove:
objectFromData:encoding:storageLocation:recordRowID:error:
update:
remove:
Tq,V_additionConstraint
_additionConstraint
stageAdditionForModel:error:
additionConstraint
setAdditionConstraint:
_zonesWithScope:
privateZoneIDs
sharedZoneIDs
publicZoneIDs
fetchZones:
populateV4CloudRecord:withModel:metadataFieldData:startEncoding:endEncoding:error:
cloudMetadataForModel:usingEncoding:
cloudFieldForEncoding:
T^{sqlite3=},N,V_context
T@"HMFUnfairLock",&,N,V_lock
T@"NSString",&,N,V_logIdentifier
TQ,N,V_mutation
T@"NSURL",R,N,V_url
TB,R,N,V_readOnly
T@"NSOperationQueue",R,N,V_queue
_begin
_commit
_rollback
_logIdentifier
_url
_mutation
initWithURL:readOnly:
close
_finalize
initialize
prepare
migrateFromSchemaVersion:error:
updateSchemaVersionTo:error:
_prepareFrom:
sqlBlock:
sqlBlockWithActivity:block:
sqlTransaction:
sqlTransactionWithActivity:block:
begin
commit
rollback
runSQLite3:
execSQLite3:
execSQLite3:error:
runSQLite3:error:
insertSQLite3:error:
fetchSQLite3:error:block:
fetchSQLite3:limit:error:block:
fetchSQLite3One:error:block:
setLogIdentifier:
setContext:
lock
setLock:
mutation
setMutation:
valueWithPointer:
hmbErrorWithSQLite3Statement:
hmbErrorWithSQLite3Context:statement:
stringWithCapacity:
hmbDataWithSQLite3Column:column:
hmbStringWithSQLite3Column:column:
numberWithLongLong:
close:
T@"NSHashTable",R,N
T@"HMFUnfairLock",R,N
contexts
contextLock
removeDatastoreAtURL:
open:
open:readOnly:error:initializer:
open:readOnly:using:error:
absoluteURL
setInitBlock:
T@?,C,N,V_initBlock
_initBlock
initBlock
scheme
removeItemAtURL:error:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
URLByDeletingLastPathComponent
lastPathComponent
defaultManager
hmbErrorWithSQLite3Status:
fileSystemRepresentation
hmfErrorWithCode:userInfo:
dataWithBytesNoCopy:length:freeWhenDone:
hmbDataWithSQLite3ColumnNoCopy:column:
hmbUUIDWithSQLite3Column:column:
hmbNumberWithSQLite3Column:column:
hmbErrorWithSQLite3Context:
hmbErrorWithSQLContext:
hmbErrorWithSQLContext:statement:
fetchModelWithRecordRow:error:
fetchModelWithModelID:recordRow:error:
fetchRecordRowWithModelID:returning:error:
fetchRecordRowWithExternalID:returning:error:
fetchRecordRowsWithModelIDs:error:
queryAllRowRecordsReturning:
setExternalID:externalData:forRecordRow:
removeAllRecordsWithError:
fetchModelWithModelID:error:
fetchModelWithModelID:ofType:error:
fetchModelsWithParentModelID:ofType:error:
fetchModelsWithParentModelID:error:
fetchAllModelsWithError:
fetchModelsOfType:error:
searchEntries:for:options:
searchEntries:for:
compare:options:range:
T@"NSDictionary",&,V_queryTables
T@"NSMapTable",&,V_queryContextsByClass
T@"NSMutableDictionary",&,V_queryContextsByModelType
T@"HMBSQLQueryStatement",&,N,V_selectReadyInputBlocks
T@"HMBSQLQueryStatement",&,N,V_selectReadyRollbackBlocks
T@"HMBSQLQueryStatement",&,N,V_selectAllRecordRows
T@"HMBSQLQueryStatement",&,N,V_selectAllRecordTypeRows
T@"HMBSQLQueryStatement",&,N,V_selectAllRecordParentModelIDRows
T@"HMBSQLQueryStatement",&,N,V_selectAllRecordParentModelIDTypeRows
insertStore
deleteStore
selectStore
selectStores
updateStoreReplicationData
insertBlock
selectBlock
deleteBlock
deleteBlocksStore
updateBlock
selectReadyBlocks
deleteNullBlocks
insertItem
insertDeletionItemsForRecordsOfType
insertDeletionItemsForRecordWithUUID
insertDeletionItemsForRecordsWithParentUUID
updateItem
deleteItem
deleteItemsBlock
deleteItemsStore
deleteItemStoreExternal
selectItemsBlock
selectItemsBlockLimit
deleteNullItems
deleteNullItemsType
insertRecord
updateRecordExternal
updateRecordExternalExternal
updateRecordExternalUUID
updateRecordPush
updateRecordPushUUID
updateRecordClearPushExpected
updateRecordsClearPush
updateRecordType
deleteRecordBlock
deleteRecordUUID
deleteRecordExternal
deleteRecordsStore
deleteZombieRecords
selectRecord
selectRecordUUIDExternal
selectRecordUUID
selectRecordExternal
selectRecordsPushBlock
selectRecordsParentUUID
selectRecordsParentUUIDType
selectRecordsOfType
selectRecords
insertIndexSentinel
deleteIndexSentinels
deleteIndexSentinelsStore
selectIndexSentinel
_queryTables
_queryContextsByClass
_queryContextsByModelType
_selectReadyInputBlocks
_selectReadyRollbackBlocks
_selectAllRecordRows
_selectAllRecordTypeRows
_selectAllRecordParentModelIDRows
_selectAllRecordParentModelIDTypeRows
sqlBlockWithActivity:error:block:
sqlTransactionWithActivity:error:block:
_insertZoneWithIdentification:name:error:
_deleteZoneWithRow:error:
_fetchAllZones:
_selectZoneWithRow:error:
_updateZoneWithRow:replication:error:
_insertBlockWithZoneRow:type:error:
_deleteBlockWithRow:error:
_deleteBlocksWithZoneRow:error:
_updateBlockWithRow:options:error:
_selectReadyBlocksWithZoneRow:type:error:
_selectBlockWithRow:error:
_deleteNullBlocksWithZoneRow:error:
_insertBlockWithZoneRow:type:options:items:error:
_insertItemWithZoneRow:blockRow:type:externalID:externalData:modelEncoding:modelData:error:
_insertDeletionItemsWithZoneRow:blockRow:type:modelType:error:
_insertDeletionItemWithZoneRow:blockRow:type:modelID:error:
_insertDeletionItemsWithZoneRow:blockRow:type:parentModelID:error:
_insertItemWithZoneRow:blockRow:type:modelType:error:
_updateItemWithZoneRow:blockRow:type:externalID:externalData:modelEncoding:modelData:error:
_deleteItemWithRow:error:
_deleteItemsWithBlockRow:error:
_deleteItemWithZoneRow:error:
_deleteItemWithZoneRow:type:externalID:error:
_selectItemsWithBlockRow:rowGreaterThan:limit:returning:error:
_selectItemsWithBlockRow:returning:error:
_deleteNullItemsWithZoneRow:type:error:
_deleteNullItemsWithZoneRow:error:
_insertIndexSentinelWithZoneRow:modelType:error:
_selectIndexSentinelForZoneRow:modelType:error:
_deleteIndexSentinelsWithModelType:error:
_deleteIndexSentinelsWithZoneRow:error:
flush:
queryTables
setQueryTables:
queryContextsByClass
setQueryContextsByClass:
queryContextsByModelType
setQueryContextsByModelType:
selectReadyInputBlocks
setSelectReadyInputBlocks:
selectReadyRollbackBlocks
setSelectReadyRollbackBlocks:
selectAllRecordRows
setSelectAllRecordRows:
selectAllRecordTypeRows
setSelectAllRecordTypeRows:
selectAllRecordParentModelIDRows
setSelectAllRecordParentModelIDRows:
selectAllRecordParentModelIDTypeRows
setSelectAllRecordParentModelIDTypeRows:
keyEnumerator
isSubsetOfSet:
na_arrayByFlattening
absoluteString
cStringUsingEncoding:
arrayWithObjects:
unlinkDatastoreAt:everything:
openWithURL:readOnly:error:
removeItemAtPath:error:
stringByAppendingPathComponent:
rangeAtIndex:
firstMatchInString:options:range:
contentsOfDirectoryAtPath:error:
stringByDeletingLastPathComponent
regularExpressionWithPattern:options:error:
initWithName:token:
_insertRecordWithZoneRow:externalID:externalData:modelID:parentModelID:modelType:modelEncoding:modelData:modelSchema:pushEncoding:pushData:pushBlockRow:error:
_updateRecordWithRow:externalID:externalData:error:
_updateRecordWithZoneRow:externalID:externalData:error:
_updateRecordWithZoneRow:modelID:externalData:error:
_updateRecordWithZoneRow:modelID:pushEncoding:pushData:pushBlockRow:error:
_updateRecordsClearPushWithPushBlockRow:error:
_updateRecordWithRow:modelEncoding:modelData:modelSchema:error:
_updateRecordWithRow:pushBlockRow:pushData:pushEncoding:error:
_updateRecordWithRow:modelType:modelSchema:error:
_deleteRecordWithZoneRow:modelID:error:
_deleteRecordWithZoneRow:externalID:error:
_deleteRecordWithRow:error:
_deleteRecordWithRow:expectedOutputBlockRow:error:
_clearPushForRecordRow:expectedOutputBlockRow:error:
_deleteRecordsWithZoneRow:error:
_deleteZombieRecordsWithZoneRow:error:
_selectRecordModelIDWithZoneRow:externalID:error:
_selectRecordWithZoneRow:modelID:returning:error:
_selectRecordWithRow:returning:error:
_selectRecordWithZoneRow:externalID:returning:error:
_selectRecordsWithZoneRow:parentModelID:returning:error:
_selectRecordWithZoneRow:parentModelID:modelType:returning:error:
_selectRecordsWithZoneRow:modelType:returning:error:
_selectRecordsWithZoneRow:modelType:returning:error:handler:
_selectRecordsWithZoneRow:returning:error:
_selectRecordsWithBlockRow:returning:error:
selectAllRecordsWithZoneRow:returning:
_resetOutputForRecordsWithBlockRow:error:
cloudID
T@"HMBCloudID",&,D,N
lastAdministrativeFetch
T@"NSDate",&,D,N
T@"NSSet",C,N
T@"CKDatabase",W,N,V_database
setDatabase:
distantPast
isBackingStorageEqual:
_strictlyUnarchivedObjectOfClasses:fromData:error:
T@"CKShareParticipant",R,C,V_ckShareParticipant
T@"HMBShareInvitation",C,V_pendingInvitation
T@"NSUUID",R,C,V_clientIdentifier
T@"HMBShareUserID",R,C
_clientIdentifier
_ckShareParticipant
_pendingInvitation
initWithCKShareParticipant:clientIdentifier:
cloudShareID
hasWriteAccess
hasAccepted
clientIdentifier
ckShareParticipant
pendingInvitation
setPendingInvitation:
optional
TB,N,GisOptional,V_optional
TQ,N,V_loggingVisibility
T@,&,N,V_defaultValue
T@"HMFVersion",C,N,V_readonlyVersion
T@"HMFVersion",C,N,V_unavailableVersion
T@"NSString",&,N,V_externalRecordField
TB,N,V_encrypted
TB,N,V_excludeFromCloudStorage
TB,N,V_conformsToHMBModelNativeCKWrapper
T@?,C,N,V_encodeBlock
T@?,C,N,V_decodeBlock
T@?,C,N,V_descriptionBlock
T#,R,N,V_classObj
_encrypted
_excludeFromCloudStorage
_optional
_conformsToHMBModelNativeCKWrapper
_classObj
_externalRecordField
_loggingVisibility
_readonlyVersion
_unavailableVersion
_encodeBlock
_decodeBlock
_descriptionBlock
initWithClass:
initWithClass:options:
setDefaultValue:
encodeQueryableValue:
decodeQueryableValue:
descriptionForEncodedQueryableValue:
classObj
encrypted
setEncrypted:
externalRecordField
setExternalRecordField:
excludeFromCloudStorage
setExcludeFromCloudStorage:
isOptional
setOptional:
loggingVisibility
setLoggingVisibility:
readonlyVersion
setReadonlyVersion:
unavailableVersion
setUnavailableVersion:
conformsToHMBModelNativeCKWrapper
setConformsToHMBModelNativeCKWrapper:
encodeBlock
setEncodeBlock:
decodeBlock
setDecodeBlock:
descriptionBlock
setDescriptionBlock:
TB,D,N,GisOptional
TQ,D,N
T@,&,D,N
T@"HMFVersion",C,D,N
applyTo:
fieldWithClass:
optionalFieldWithClass:
fieldWithClass:options:
optionalFieldWithClass:options:
deprecatedField
T@"NSString",R,N,V_fieldName
TB,R,N,V_encrypted
_fieldName
initWithExternalRecordField:encrypted:
fieldName
externalRecordField:
encryptedExternalRecordField:
queryableField
queryableFieldWithEncodeBlock:decodeBlock:
queryableFieldWithEncodeBlock:decodeBlock:descriptionBlock:
initWithEncodingBlock:decodingBlock:descriptionBlock:
T@?,C,N,V_encodingBlock
T@?,C,N,V_decodingBlock
_encodingBlock
_decodingBlock
encodingBlock
setEncodingBlock:
decodingBlock
setDecodingBlock:
registerSubscriptionForExternalRecordType:databaseState:
registerPrivateSubscriptionForExternalRecordType:
registerSharedSubscriptionForExternalRecordType:
unregisterPrivateSubscriptionForExternalRecordType:
unregisterSharedSubscriptionForExternalRecordType:
setSubscriptionsToSave:
setSubscriptionIDsToDelete:
setModifySubscriptionsCompletionBlock:
subscriptionID
pushSubscriptionsForDatabase:subscriptionsToSave:subscriptionIDsToRemove:
registerSubscription:forZoneWithID:
unregisterSubscription:forZoneWithID:
subscriptionsForZoneWithID:
unregisterPrivateSubscriptionForSubscriptionID:
unregisterSharedSubscriptionForSubscriptionID:
registerPrivateSubscription:
migrateToSchema01WithError:
@"NSString"
@"NSDictionary"
@"NSUUID"
@"HMFActivity"
B16@0:8
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v24@0:8@16
@24@0:8@16
@16@0:8
B24@0:8@16
Q16@0:8
@?16@0:8
v24@0:8@?16
v20@0:8B16
q16@0:8
v24@0:8q16
v24@0:8Q16
v16@0:8
@"HMBProcessingOptions"
@"NSArray"
@"NAFuture"
@40@0:8@16@24@32
i16@0:8
@"HMBSQLContext"
^{sqlite3_stmt=}
@40@0:8@16^{sqlite3_stmt=}24@32
@32@0:8@16@24
^{sqlite3_stmt=}16@0:8
v24@0:8^{sqlite3_stmt=}16
^{sqlite3_stmt=}32@0:8@16@24
@48@0:8@16@24Q32^@40
@48@0:8@16@24@32^@40
@"HMBCloudZone"
@"HMBCloudZoneRebuilderStatus"
@"NSError"
@"HMBSQLQueryStatement"
@"NSMutableArray"
@"NSNumber"
@40@0:8@16@24Q32
@48@0:8@16@24Q32@40
@48@0:8^{sqlite3_stmt=}16^B24^Q32^@40
@32@0:8@16^@24
B32@0:8^{sqlite3_stmt=}16^@24
v20@0:8i16
@"HMBShareInvitationContext"
@"HMBCloudZoneID"
@"NSDate"
@"NSURL"
@"CKDeviceToDeviceShareInvitationToken"
@24@0:8^{_NSZone=}16
@48@0:8@16@24@32@40
@56@0:8@16@24@32@40@48
{hmf_unfair_data_lock_s="lock"{os_unfair_lock_s="_os_unfair_lock_opaque"I}}
@"CKContainer"
@"NSNotificationCenter"
@"HMFTimer"
v24@0:8@"HMFTimer"16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
@"NSObject"16@0:8
@"NSData"
@40@0:8Q16Q24@32
@44@0:8@16Q24@32B40
@32@0:8@16Q24
@48@0:8@16^{sqlite3_stmt=}24@32@40
@56@0:8Q16@24@32Q40@48
@32@0:8^{sqlite3_stmt=}16Q24
@"HMBModel"
@"HMBLocalZoneProcessModelContext"
@"HMBLocalSQLQueryTable"
@104@0:8@16@24@32@40@48Q56Q64@72@80@88@96
@24@0:8Q16
B32@0:8@16@24
@"HMBLocalSQLContext"
@56@0:8@16@24Q32Q40Q48
@"NSMutableDictionary"
@"HMBCloudDatabase"
@"<HMBCloudZoneDelegate>"
@"HMBCloudZoneConfiguration"
@"HMBLocalZone"
@"CKDatabase"
@"NSMapTable"
@"HMFUnfairLock"
@"<HMBCloudZoneRebuilder>"
@"NSOperationQueue"
@"NSMutableSet"
@"HMBCloudZoneShareModel"
@"HMBModelContainer"
v24@0:8@"HMBLocalZone"16
@"NAFuture"16@0:8
@"NAFuture"32@0:8Q16@"HMBProcessingOptions"24
@"<HMBLocalZoneID>"16@0:8
@32@0:8Q16@24
B40@0:8@16@24@?32
v32@0:8@16@24
B32@0:8@16^@24
@"CKRecord"
@"NSSet"
@60@0:8@16@24@32@40B48@52
@48@0:8@16@24@32B40B44
@44@0:8@16@24@32B40
@"CKContainerID"
@"CKOperationConfiguration"
@"HMFScheduler"
@"HMBSQLStatement"
@"NSHashTable"
@36@0:8@16#24B32
@40@0:8@16@24@?32
Q32@0:8Q16^@24
Q48@0:8Q16Q24@32^@40
@"HMBLocalDatabase"
@"HMBLocalZoneConfiguration"
@"<HMBLocalZoneID>"
@"<HMBMirrorProtocol>"
@"<HMBLocalZoneDelegate>"
@56@0:8@16@24Q32@40@48
B24@0:8^@16
@40@0:8@16Q24@32
@24@0:8^@16
@"NSData"32@0:8Q16^@24
@40@0:8@"NSData"16Q24^@32
@40@0:8@16Q24^@32
@32@0:8Q16^@24
@24@0:8q16
@48@0:8@16Q24@32Q40
B48@0:8@16@24@32^@40
@"NSData"16@0:8
@"NSArray"16@0:8
v32@0:8@16@"NSString"24
v24@0:8@"NSString"16
@24@0:8@"NSString"16
@32@0:8@"NSString"16^B24
B24@0:8@"NSString"16
@32@0:8@16^B24
@"HMFVersion"
@48@0:8Q16@24@32^@40
@36@0:8@16B24^@28
@20@0:8B16
@"CKRecordID"
@"CKStreamingAsset"
@"<CKRecordValue>"32@0:8@"HMBModelContainerEncodingContext"16^@24
v56@0:8@"<CKRecordValue>"16Q24@"HMBModelContainer"32@"HMBModel"40@"NSString"48
v56@0:8@16Q24@32@40@48
@40@0:8Q16@24@32
@48@0:8@16@24@32#40
@"HMBCloudZoneRebuilderStatus"16@0:8
@24@0:8#16
Q24@0:8Q16
#24@0:8@16
@56@0:8@16Q24Q32@40^@48
@48@0:8@16Q24@32^@40
@48@0:8@16Q24Q32^@40
#40@0:8@16@24^@32
@56@0:8@16@24@32Q40^@48
v32@0:8@16#24
@32@0:8@16q24
@48@0:8@16q24@32@40
@"<HMBLocalDatabaseDelegate>"
@40@0:8@16@24^@32
@"<HMBCloudDatabaseDelegate>"
@"HMBCloudDatabaseConfiguration"
@"HMBCloudDatabaseStateModel"
@"HMBCloudCredentialsAvailabilityListener"
v32@0:8@"HMBCloudPushHandler"16@"NSString"24
v32@0:8@"HMBCloudPushHandler"16@"CKNotification"24
v32@0:8@"HMBCloudPushHandler"16@"NSDictionary"24
@64@0:8@16@24@32@40@48@56
v32@0:8@16q24
@28@0:8q16B24
v28@0:8@16B24
B32@0:8@16@?24
@"HMBModelField"
@36@0:8@16i24@28
@56@0:8@16@24@32@40Q48
B52@0:8^{sqlite3_stmt=}16@24i32Q36^@44
@"NSMutableOrderedSet"
@"HMBLocalSQLQueryTableQueryAll"
@48@0:8@16@24@32@?40
@24@0:8@?16
@32@0:8@16@?24
@"<HMBQueryableModelFieldCoder>"
@56@0:8@16@24@32Q40@48
v24@0:8#16
@36@0:8@16B24@28
@72@0:8@16@24@32Q40@48@56@64
@44@0:8@16B24@28@36
@48@0:8@16Q24@32@40
@64@0:8Q16Q24@32@40@48@56
B32@0:8Q16^@24
@"NSData"24@0:8@"<HMBQueryableModelFieldCoder>"16
@"<HMBQueryableModelFieldCoder>"24@0:8@"NSData"16
@"NSString"24@0:8@"NSData"16
@"CKReference"
@28@0:8@16B24
@"CKUserIdentityLookupInfo"
@48@0:8^{sqlite3_stmt=}16^B24^@32^@40
B40@0:8^{sqlite3_stmt=}16@24^@32
@64@0:8@16@24@32Q40@48Q56
@104@0:8Q16@24@32@40Q48@56@64@72Q80@88@96
@40@0:8@16Q24Q32
v28@0:8B16@20
@"CKRecordZoneID"
@56@0:8@16q24@32@40@48
@40@0:8@16q24@32
v56@0:8Q16@24@32@40@48
v32@0:8@"HMBLocalZone"16@"HMBProcessingResult"24
v32@0:8@"HMBLocalZone"16@"NSString"24
@32@0:8#16@24
@32@0:8#16@?24
@40@0:8#16@24@?32
@32@0:8@16#24
v32@0:8@"NSString"16@"NSString"24
@"<HMBAPSConnectionDelegate>"16@0:8
v24@0:8@"<HMBAPSConnectionDelegate>"16
v24@0:8@"NSArray"16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"<HMBAPSConnection>"
v48@0:8@"<HMBAPSConnection>"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"<HMBAPSConnection>"16@"NSData"24
v32@0:8@"<HMBAPSConnection>"16@"APSIncomingMessage"24
v48@0:8@16@24@32@40
@48@0:8@16@24Q32Q40
@24@0:8B16B20
@28@0:8B16@20
@36@0:8B16@20@28
@"HMBLocalSQLContextInputBlock"
Q48@0:8Q16@24@32^@40
Q56@0:8Q16@24Q32@40^@48
B80@0:8Q16@24Q32@40Q48Q56@64^@72
v36@0:8@16@24B32
d16@0:8
B24@0:8q16
@56@0:8@16Q24Q32Q40^@48
B64@0:8@16@24@32Q40Q48^@56
^{sqlite3=}
q32@0:8q16^@24
B32@0:8q16^@24
@24@0:8r*16
@24@0:8^{sqlite3_stmt=}16
Q32@0:8^{sqlite3_stmt=}16^@24
B32@0:8r*16^@24
B40@0:8^{sqlite3_stmt=}16^@24@?32
B48@0:8^{sqlite3_stmt=}16Q24^@32@?40
^{sqlite3=}16@0:8
v24@0:8^{sqlite3=}16
@44@0:8@16B24^@28@?36
@44@0:8@16B24#28^@36
@28@0:8^{sqlite3_stmt=}16i24
@32@0:8@16r*24
@24@0:8^{sqlite3=}16
@32@0:8^{sqlite3=}16r*24
@20@0:8i16
@40@0:8@16^Q24^@32
@40@0:8@16#24^@32
@32@0:8#16^@24
B40@0:8@16^@24@?32
Q40@0:8@16@24^@32
B40@0:8Q16@24^@32
Q40@0:8Q16Q24^@32
@40@0:8Q16Q24^@32
Q56@0:8Q16Q24@32@40^@48
Q80@0:8Q16Q24Q32@40@48Q56@64^@72
Q56@0:8Q16Q24Q32@40^@48
B80@0:8Q16Q24Q32@40@48Q56@64^@72
B48@0:8Q16Q24@32^@40
@56@0:8Q16Q24Q32Q40^@48
B40@0:8Q16Q24^@32
@40@0:8Q16@24^@32
Q120@0:8Q16@24@32@40@48@56Q64@72@80Q88@96@104^@112
B48@0:8Q16@24@32^@40
B64@0:8Q16@24Q32@40@48^@56
B56@0:8Q16Q24@32@40^@48
B56@0:8Q16@24@32Q40^@48
@48@0:8Q16@24Q32^@40
@56@0:8Q16@24@32Q40^@48
B56@0:8Q16@24Q32^@40@?48
@32@0:8Q16Q24
@"CKShareParticipant"
@"HMBShareInvitation"
@32@0:8@?16@?24
@40@0:8@?16@?24@?32
q24@0:8^@16
HMBPBO.dmc
HMBPBO.rmc
HMBPBO.dca
HMBPBO.r
HMBPBO.qos
HMBPBO.enqueue
HMBPBO.mn
HMBPBO.mi
HMBPBO.m
HMBPBO.label
HMBPBO.mp
Disallow Model Creation
Require Model Creation
Disallow Cellular
Roll Back
Enqueue Mirror Output
Label
Message Identifier
Message Name
Detail
Parent
<NO LOCK>
@"HMBSQLStatementQueryPlanTuple"16@?0@"NSArray"8
EXPLAIN QUERY PLAN 
lock
rebuilderStatus
subscriptionsData
needsZoneDeletion
needsZoneCreation
zoneID
share
_sequence_offset
You must override %@ in a subclass
HMBUI.dc
HMBUI.czi
HMBUI.c
HMBUI.t
HMBUI.u
Date Created
Cloud Zone ID
Context
Token
Share URL
HMBShareInvitation
v24@?0@"CKAccountInfo"8@"NSError"16
Check manatee availability
@"HMFTimer"24@?0d8Q16
CloudCredentialsAvailabilityListener
Options Data
<not nil>
<nil>
Type
zoneRowBindOffset != ((void *)0)
<RowItem: %lu  eid: %@  ed: %@  encoding: %lu data: %@>
model
__processRecords
v24@?0@"HMBMirrorOutputResult"8@"NSError"16
update/insert
delete
%lu/%lu
Zone Row
Block Row
HMBLocalSQLContextInputBlock.%@
HMBLocalSQLContextInputBlock
Zone ID
HMBCloudZoneRebuilderModel
HMBCloudZoneShareParticipantModel
HMBCloudZoneShareModel
modelContainer
v24@?0@8@"NSError"16
HMBCloudZone Startup Fetch
HMBCloudZone First Fetch
parent_record
ebl01
ebl00
sa01
sa00
_database
state
cloudDatabase
CloudZone
v32@?0@"CKRecordID"8@"NSError"16^B24
success
failed with error: %@
deferred
v16@?0@"NSArray"8
v24@?0@"CKRecord"8@"NSError"16
about to remove: %@
about to update: %@
single-part push: %@
com.apple.willowd
Default Operation Configuration
Manatee Container
Bundle ID
Container ID
containerID
Mirror Output
Options
Model
options
Cannot create a direct instance of %@. Use a subclass instead
v32@?0@"HMBSQLQueryStatement"8Q16^B24
self.finalized == __objc_no
self.finalized != __objc_no
v32@?0@8Q16^B24
v32@?0@"NSString"8Q16^B24
v32@?0@"HMBModelQuery"8Q16^B24
SELECT _record_id, %@ FROM %@ WHERE _store_id = :_store_id AND _record_id > :_sequence_offset ORDER BY _record_id LIMIT (%lu)
INSERT OR REPLACE INTO %@ (_store_id, _record_id, %@) values(?1, ?2, %@)
DELETE FROM %@ where _record_id=?1
DELETE FROM %@ WHERE _store_id=?1
?%lu
CREATE INDEX IF NOT EXISTS %@ ON %@ (%@)
CREATE INDEX IF NOT EXISTS %@ ON %@ (_store_id, _record_id)
DROP INDEX %@
@16@?0@"HMBModelQuery"8
CREATE UNIQUE INDEX IF NOT EXISTS %@ ON %@ (_store_id, _record_id);
qu_%@
CREATE TABLE %@ (%@, CONSTRAINT fk_%@ FOREIGN KEY (_record_id) REFERENCES record_v2 (id) ON DELETE CASCADE);
DELETE FROM index_sentinel WHERE type = '%@';
DROP TABLE IF EXISTS %@;
%@ BLOB
_record_id INTEGER NOT NULL
_store_id  INTEGER NOT NULL REFERENCES store_v2 (id) ON DELETE RESTRICT
queryable_%@
modelField
<HMBLocalZone: %@/%@>
@16@?0#8
Cannot update a model with a nil hmbModelID or hmbParentModelID
info
LocalZone
Message
Rebuild State
Key Status
ZCRS.se
ZCRS.m
Invalid
In Progress
<UNKNOWN %lu>
Startup
Lost Key
Beginning Zone Recreate Delay
Wating Before Zone Recreate
Zone Recreate
Monitor Upload
State Upload
Complete
modelTypeBindOffset != ((void *)0)
v24@?0@"HMBLocalSQLContextRowRecord"8^B16
<HMBLocalZoneIDUnshared: %@>
HMBLocalZoneIDUnshared
v@:@
Property for parameter %@ was supplied as %@, but was expected to be <UNKNOWN>.
Property for parameter %@ was supplied as %@, but was expected to be %@.
%@.%@/%@
@"NSString"16@?0@"NSString"8
B16@?0@"NSString"8
 (override)
  %@%@%@: %@
 (read-only)
 (default)
  version: %@%s
<UNSET>
  parent: %@
  uuid: %@
%@:%@
 (inferred)
%@/%@
<%@ uuid:%@ version:%@>
v32@?0@"NSString"8@16^B24
  %@ (read-only) (unsupported): %@
  version: %@
values: (%@%@)
@"NSData"24@?0@"NSString"8@"HMFVersion"16
/%@ (property could not be validated): %@
message
Cannot encode value of type %@ for property '%@' requring NSObject type
hmbDataVersion must be set prior to encoding
hmbModelID and hmbParentModelID must be set prior to encoding
errorText
pathStack
(key must be of string type (is %@))
[%lu]
(%@ not a valid type within an aggregate type)
container
expecting internal storage to be a NSData, but it's a %@
@"HMFVersion"24@?0@"NSString"8@"NSData"16
decoded
<NULL>
<NSData: %@>
<NSDictionary: %lu items>
<NSArray: %lu items>
Record
551E3F88-0C11-4402-A486-6D1EB759AADD
shouldLogPrivateInformation
HMBShareUserID.CodingKey.UserRecordID
userRecordID
HMBShareUserID
encodingContext
HMB.d
HMB.u
Download Streaming Asset
Upload Streaming Asset
<%lu.%@>
<%lu: %@>
-[HMBCloudDatabase(CKCode) peformCodeOperationWithServiceName:functionName:request:responseClass:]
v24@?0@"PBCodable<CKCodeOperationMessageMutation>"8@"NSError"16
v16@?0@"CKRequestInfo"8
Rebuild Complete Fetch.
Waiting for a rebuild.
Going to try to rebuild again.
Failed recovery push with error (entering back into Holdoff): %@
Failed recovery push due to conflicts.
Failed recovery push with error: %@
Successfully completed recovery.
v24@?0@"CKRecord"8^B16
Iteration of rows failed: %@
<NON-NULL>
operationQueue
localZone
cloudZone
Failed to fetch rebuild model with non-zone related failure: %@
Zone appears removed by the user.
Unable to fetch rebuild model: %@
Failed to acquire lock due to sentinel model push failure: %@
Acquired zone lock for rebuild.
localCloudZone
Lost pointer to cloudDatabase
Lost pointer to cloudZone
self
v16@?0@"HMBCloudZoneRebuilderModel"8
Continue monitoring of upload (token change %@ -> %@)
Rebuild found complete at start of check lock acquire.
Preparing to begin lock acquisition.
Delaying rebuild for %lu usec
Watchdog fired while monitoring the upload.
Change observed in sentinel %@ -> %@
No change observed in sentinel.
Sentinel has been marked as complete.
Failed to monitor sentinel due to error: %@
Failed to find sentinel model.
Attempting to acquire lock on zone.
Received notification that zone has lost keys.
Unable to push sentinel model due to some other issue. Letting startup continue normally.
Don't have keys, waiting for someone else to rebuild the zone.
Came up in Manatee Key Loss. Going to try to blow things away and fix them.
Startup with completed sentinel model.
Startup with missing manatee key.
Not starting up as a mirror. Ignoring rebuild steps.
Rebuilder has not been started up yet.
ZoneRebuilder
should conform to HMBModelObjectCoder (but storage class for property %@ does not)
underlyingError
Failed to encode value %@ for property '%@': %@
Cannot encode value of type %@ for property '%@' because it does not conform to HMBModelObjectCoder
remapped (or explicit map) is not a subclass of HMBModel (%@ is not a sub-class of HMBModel)
inMirror
inLocalZone
expecting a versioning key named %@ but one does not exist
0.0.0
[modelClass isSubclassOfClass:[HMBModel class]]
1.0.0
4.0.0
ModelContainer
4C636B6B-9784-4D02-9E47-5A5259B3BAF2
hasCompleted
uniqueToken
Lost key on shared zone.
Zone believed to be functional.
HMBCID.s
HMBCID.c
HMBCID.n
HMBCID.m
759390E3-198F-48EB-AD00-31296DACBBA6
Model ID
Name
%@.%@.%@
participant
Conflicted record resolution
v32@?0@"HMBCloudZoneConflict"8Q16^B24
Ancestor Record: %@
Server Record: %@
Client Record: %@
@"NAFuture"16@?0@"CKShareMetadata"8
@"HMBLocalZone"48@?0@"HMBLocalDatabase"8@"<HMBLocalZoneID>"16Q24@"HMBLocalZoneConfiguration"32@"<HMBMirrorProtocol>"40
com.apple.homed.hmbmanager.%@
HMBLocalDatabase
@"NAFuture"16@?0@"HMBProcessingResult"8
@"NAFuture"16@?0@"HMBCloudZonePullResult"8
failed (commit).
v44@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24B32@"NSError"36
v24@?0@"CKRecordID"8@"NSString"16
v16@?0@"CKRecord"8
failed mirror input creation
%s (%@)
Container
updating zone: %@
Record Zone APS Notification
Database APS Notification
v24@?0@"NSNumber"8^B16
Fetch due to Subscription Push
v24@?0@"NSNull"8@"NSError"16
__administrativeFetch_block_invoke
v32@?0@"HMBCloudZoneID"8@"HMBCloudZoneStateModel"16^B24
v16@?0@"NSSet"8
v24@?0@"HMBCloudZoneID"8^B16
starting process of results.
v24@?0@"NSArray"8@"NSError"16
DBChangeSubscription
v24@?0@"NSString"8@"NSError"16
A089A5B9-6D32-4A0E-B611-0492B7D9F3D5
configuration
localDatabase
@"HMBCloudZone"32@?0@"HMBCloudDatabase"8@"HMBCloudZoneConfiguration"16@"HMBCloudZoneStateModel"24
_sharedDatabaseState
_privateDatabaseState
_publicDatabaseState
zoneStateModels
databaseStateModelsByScope
stateZone
CloudDatabase
__modifyRecordZoneOperation
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
v32@?0@"CKRecordZoneID"8@"NSError"16^B24
__fetchAllCloudZones
@"HMBCloudZoneID"16@?0@"CKRecordZoneID"8
_store_id
_model_type
<HMBQueryEncoder: %@ / %lu %@>
modelClassNameOffset != ((void *)0)
parentModelIDOffset != ((void *)0)
_parent_uuid
modelClassNameOffset
_type
parentModelIDOffset
v32@?0@"HMBLocalZoneQueryResultColumnTuple"8Q16^B24
v16@?0@8
operation.future
Share Operation Retry
HMBShareOperation
HMBShareOperationErrorDomain
HMBSQLStatement.explainStatements
<HMBModelUnindexedQuery class: %@ query: '%@'>
Unknown
v32@?0@"NSString"8@"HMBModelQueryArgument"16^B24
The query's argument dictionary contains an argument named '%@' which does not exist as an argument in the query statement's SQL: %@
v32@?0@"NSString"8@"NSNumber"16^B24
The query statement's SQL contains an argument for a property named '%@' which does not exist as a property on %@: %@
The query statement's SQL contains an argument named '%@' which does not exist as an argument in the query's argument dictionary: %@
Failed to prepare statement: %@
SELECT %@ FROM queryable_%@ %@
self.modelClass == modelClass
encodedArgumentValueOrNull
argumentField
statement
_record_id
WHERE %@ AND _store_id = :_store_id %@ LIMIT (%lu)
AND _record_id < :_sequence_offset ORDER BY _record_id DESC
AND _record_id > :_sequence_offset ORDER BY _record_id ASC
hasAnyStatements
v32@?0@"HMBSQLStatementQueryPlanTuple"8Q16^B24
B16@?0@"HMBSQLStatementQueryPlanTuple"8
INDEX %@
qi_%@_%@
indexedColumns
sequenceArgument
qf_%@_%@
maximumRowsReturned
WHERE _store_id = :_store_id AND %@ LIMIT (%lu)
[sequenceArgument.propertyName isEqualToString:indexedProperties.lastObject]
WHERE _store_id = :_store_id AND %@
count('X')
WHERE _store_id = :_store_id AND %@ LIMIT (1)
External Data
External ID
Query Table
Record Row
Output Block Row
<HMBLocalZoneOutputRecords: %lu options: %@>
v32@?0@"HMBLocalSQLContextRowRecord"8Q16^B24
HMB.m
<MALFORMED UUID: %@>
cloudZoneEncodingContext
Action
none
validate
<unknown %lu>
Reference
HMB.r
HMB.a
HMBUIC.li
HMBUIC.sgwa
HMBUIC.pci
Lookup Info
Should Grant Write Access
User Client Identifier
Previous Model
previousModel
@"NAFuture"16@?0@"NSSet"8
recordIDs
recordID
models
modelIDs
modelID
v32@?0@"NSNumber"8@16^B24
@"NAFuture"16@?0@"NSDictionary"8
@"CKRecord"16@?0@"CKRecordID"8
@"NSSet"16@?0@"HMBCloudZoneFetchRecordsContext"8
__fetchRecordsWithRecordIDs
succeeded
Push Block Row
Push Data
Push Encoding
Model Type
Model Schema
Model Data
Model Encoding
Updating rebuild state for zone %@: %@
HMBCZID.z
C8AE15D1-FA59-4811-8437-6F8BE2815E1E
FDB10518-1C8B-440B-837E-489902B4E477
E0AF74A3-368B-4E7B-B4B8-131073EAA5A9
%@.%@.%@/%@
[zoneID.ownerName isEqualToString:CKCurrentUserDefaultName] == __objc_no
modelID != ((void *)0)
name != ((void *)0)
scope != 0
zoneID != ((void *)0)
containerID != ((void *)0)
ZoneSubscription_%@.%@.%@%@
DBSubscription_%@.%@%@
__fetchSubscriptions
__performCloudPush
v24@?0@"HMBCloudZonePushResult"8@"NSError"16
v16@?0@"HMBCloudZoneRecordPushResult"8
v16@?0@"HMBProcessingResult"8
Post-process: %@
push mark as completed failed: %@
updating record %@
v32@?0@"NSString"8@"HMBModelField"16^B24
cloud push chunk failed: %@
__pushWithRecovery_block_invoke
v32@?0@"CKRecordID"8@"HMBCloudZoneConflict"16^B24
v24@?0@"HMBModel"8^B16
tableContext == self.sql
table
Q16@?0@"NSDictionary"8
com.apple.homed.aps
v16@?0@"<HMBCloudPushObserver>"8
com.apple.icloud-container.
CloudPushHandler
committing block.
HMBLocalSQLContextOutputBlock.%@
HMBLocalSQLContextOutputBlock
Rebuild
@"NAFuture"16@?0@"HMBCloudZoneRecordPushResult"8
B16@?0@"CKRecord"8
@"NAFuture"16@?0@"NSNull"8
Full re-fetch for missing share model
Leave Cloud Share
@"NAFuture"8@?0
Create Share Model
@"NAFuture"16@?0@"CKShare"8
@"NSString"16@?0@"CKShareParticipant"8
Delete extraneous participant models
@"HMBShareParticipant"16@?0@"HMBCloudZoneShareParticipantModel"8
v24@?0@"HMBCloudZoneShareParticipantModel"8^B16
@"NSUUID"16@?0@"HMBCloudZoneShareModel"8
Revoke Share
B16@?0@"CKShareParticipant"8
Set Write Access Enabled
@"NAFuture"16@?0@"CKShareParticipant"8
Fetch Invitation
Fetch Cloud Share ID For Client Identifier
Fetch Current Participant Cloud Share ID
Fetch Owner Participant Cloud Share ID
serverChangeToken
[%@]
<%@, %@>
v24@?0#8^B16
v24@?0@"NSString"8^B16
v32@?0@"NSString"8@"HMBLocalSQLContextQueryTable"16^B24
v32@?0@"NSString"8@"HMBLocalSQLContextQueryIndex"16^B24
SELECT master.tbl_name, master.name, index_info.seqno, index_info.name FROM sqlite_master AS master, PRAGMA_INDEX_INFO(master.name) AS index_info WHERE master.type = 'index' AND master.tbl_name like 'queryable_%' ORDER BY master.tbl_name, master.name, index_info.seqno
SELECT master.name, table_info.name, table_info.type, master.sql FROM sqlite_master AS master, PRAGMA_TABLE_XINFO(master.name) AS table_info WHERE master.name LIKE 'queryable%' ORDER BY master.name, table_info.name
v32@?0@"NSString"8@"NSMutableDictionary"16^B24
v32@?0@"NSString"8@"NSArray"16^B24
v32@?0@"NSArray"8Q16^B24
columnName != ((void *)0)
columnSequence != ((void *)0)
thisIndex
thisTable
@24@?0@"NSString"8@"NSSet"16
FOREIGN KEY (_record_id) REFERENCES record_v2 (id) ON DELETE CASCADE
CONSTRAINT fk_queryable_
BLOB
thisType
thisColumn
__fetchUserRecord
v24@?0@"NSDictionary"8@"NSError"16
v32@?0@"CKRecord"8@"CKRecordID"16@"NSError"24
finished
__acceptInvitation
v16@?0@"NSError"8
v32@?0@"CKShareMetadata"8@"CKShare"16@"NSError"24
__fetchShareMetadata
v32@?0@"NSURL"8@"CKShareMetadata"16@"NSError"24
__fetchParticipant
v16@?0@"CKShareParticipant"8
Zone Name
%@/%lu
inputBlock
HMBLocalZoneInput
@"NSUUID"16@?0@"HMBLocalSQLContextRowRecord"8
B16@?0@"NSError"8
@"NSString"24@?0@"<NSCopying>"8@16
%@ : %@
<%lu bytes>
1.2.11
encodedOPACK
%@.%@
Validate
None
<UNKNOWN: %lu>
DeleteSelf
%@/%@/%@/%@/%@
data
<NULL STRING>
<MALFORMED NUMBER: %@>
<MALFORMED INTERVAL: %@>
decodedOPACK
__performCloudPull
v28@?0@"CKServerChangeToken"8B16@"NSError"20
v16@?0@"CKRecordZoneID"8
HM.encoding
HM.device
HM.type
HM.modelID
HM.parentModelID
k%02lu
ReadOnly
BEGIN;
COMMIT;
ROLLBACK;
column %ld is of SQLite3 type %ld (not recognized)
bind parameter %s is not of a recognized type %@ is not a (NSNull, NSData, NSString, or NSNumber)
statement cannot contain nameless parameters (%ld is nameless)
text
extcode
PRAGMA user_version = %ld;
_finalized == __objc_no
PRAGMA foreign_keys = ON;
PRAGMA user_version;
PRAGMA journal_mode=WAL;
memory
-wal
-shm
:memory:
_finalized
NULL SQLite3 error for status
NULL SQLite3 error for statement
NULL SQLite3 statement
NULL SQLite3 error for context
NULL statement
v32@?0@"NSArray"8@"<HMBSearchableEntry>"16^B24
@"NSError"16@?0@"HMBLocalSQLContext"8
DELETE FROM transaction_v2
DELETE FROM record_v2
DELETE FROM block_v2
DELETE FROM index_sentinel
DELETE FROM store_v2
SELECT name FROM sqlite_master WHERE type = 'table'
record_v2
transaction_v2
block_v2
store_v2
v32@?0@"NSString"8@"HMBLocalSQLQueryTable"16^B24
SELECT name FROM sqlite_master WHERE type = 'table' and name in ('zone_v2', 'zone_subscription_v2', 'db_subscription_v2', 'fetch_v2', 'queue_v2', 'scoreboard_v2', 'xact_v2', 'xact_block_v2')
CREATE INDEX IF NOT EXISTS record_v2_store_external ON record_v2 (store_v2_id, external_id);
CREATE INDEX IF NOT EXISTS record_v2_store_type_parent_uuid ON record_v2 (store_v2_id, parent_uuid, type);
CREATE INDEX IF NOT EXISTS record_v2_store_parent_uuid ON record_v2 (store_v2_id, parent_uuid);
CREATE INDEX IF NOT EXISTS record_v2_store_uuid ON record_v2 (store_v2_id, uuid);
CREATE INDEX IF NOT EXISTS record_v2_store ON record_v2 (store_v2_id);
CREATE INDEX IF NOT EXISTS record_v2_push_id ON record_v2 (push_block_id, id);
CREATE INDEX IF NOT EXISTS transaction_v2_block_id ON transaction_v2 (block_id, id);
CREATE INDEX IF NOT EXISTS block_v2_store_type ON block_v2 (store_v2_id, type, id);
CREATE UNIQUE INDEX IF NOT EXISTS record_v2_uuid_store_v2_id_ukey ON record_v2 (store_v2_id, uuid);
CREATE UNIQUE INDEX IF NOT EXISTS record_v2_external_store_v2_id_ukey ON record_v2 (store_v2_id, external_id);
CREATE UNIQUE INDEX IF NOT EXISTS transaction_v2_ukey ON transaction_v2 (store_v2_id, type, external_id);
CREATE TABLE IF NOT EXISTS record_v2 (                              id                  INTEGER PRIMARY KEY AUTOINCREMENT,                store_v2_id         INTEGER NOT NULL CONSTRAINT record_v2_group_id_fkey REFERENCES store_v2 (id) ON DELETE RESTRICT,             uuid                BLOB    NOT NULL,                                 parent_uuid         BLOB    NOT NULL,                                 type                TEXT,                                             model_schema        BLOB,                                             external_id         BLOB,                                             external_data       BLOB,                                             model_encoding      INTEGER NOT NULL,                                 model_data          BLOB,                                             push_encoding       INTEGER NOT NULL,                                 push_data           BLOB,                                             push_block_id       INTEGER CONSTRAINT record_v2_block_v2_fkey REFERENCES block_v2 (id) ON DELETE RESTRICT             );
CREATE TABLE IF NOT EXISTS transaction_v2 (                         id                  INTEGER PRIMARY KEY AUTOINCREMENT,                store_v2_id         INTEGER NOT NULL CONSTRAINT fetch_store_v2_id_fkey REFERENCES store_v2 (id) ON DELETE RESTRICT,             block_id            INTEGER NOT NULL CONSTRAINT transaction_v2_block_v2_id_fkey REFERENCES block_v2 (id) ON DELETE RESTRICT,             type                INTEGER NOT NULL,                                 external_id         BLOB    NOT NULL,                                 external_data       BLOB,                                             model_encoding      INTEGER NOT NULL,                                 model_data          BLOB                                              );
CREATE TABLE IF NOT EXISTS block_v2 (                               id                  INTEGER PRIMARY KEY AUTOINCREMENT,                store_v2_id         INTEGER NOT NULL CONSTRAINT fetch_store_v2_id_fkey REFERENCES store_v2 (id) ON DELETE RESTRICT,             type                INTEGER NOT NULL,                                 options_data        BLOB                                              );
CREATE TABLE IF NOT EXISTS store_v2 (                               id                  INTEGER PRIMARY KEY AUTOINCREMENT,                label               STRING  NOT NULL,                                 identifier_data     BLOB UNIQUE NOT NULL,                             replication_data    BLOB                                              );
xact_block_v2
xact_v2
scoreboard_v2
queue_v2
fetch_v2
db_subscription_v2
zone_subscription_v2
zone_v2
INSERT INTO store_v2 (label, identifier_data, replication_data) VALUES (?1, ?2, ?3)
DELETE FROM store_v2 WHERE id=?1;
SELECT id, label, identifier_data, replication_data FROM store_v2 WHERE id=?1;
SELECT id, label, identifier_data, replication_data FROM store_v2;
UPDATE store_v2 SET replication_data=?2 WHERE id=?1;
INSERT INTO block_v2 (store_v2_id, type) VALUES (?1, ?2);
SELECT id, type, options_data FROM block_v2 WHERE id=?1;
DELETE FROM block_v2 WHERE id=?1;
DELETE FROM block_v2 WHERE store_v2_id=?1;
UPDATE block_v2 SET options_data=?2 WHERE id=?1;
SELECT id, options_data FROM block_v2 WHERE store_v2_id=?1 AND type=?2 AND options_data IS NOT NULL ORDER BY id;
DELETE FROM block_v2 WHERE store_v2_id=?1 AND options_data IS NULL;
INSERT INTO transaction_v2 (store_v2_id, block_id, type, external_id, external_data, model_encoding, model_data) VALUES (?1, ?2, ?3, ?4, ?5, ?6, ?7);
INSERT INTO transaction_v2 (store_v2_id, block_id, type, external_id, model_encoding, model_data) SELECT ?1, ?2, ?3, COALESCE(external_id, randomblob(16)), 0, uuid FROM record_v2 WHERE store_v2_id = ?1 AND type = ?4 AND model_data IS NOT NULL;
INSERT INTO transaction_v2 (store_v2_id, block_id, type, external_id, model_encoding, model_data) SELECT ?1, ?2, ?3, COALESCE(external_id, randomblob(16)), 0, uuid FROM record_v2 WHERE store_v2_id = ?1 AND uuid = ?4 AND model_data IS NOT NULL;
INSERT INTO transaction_v2 (store_v2_id, block_id, type, external_id, model_encoding, model_data) SELECT ?1, ?2, ?3, COALESCE(external_id, randomblob(16)), 0, uuid FROM record_v2 WHERE store_v2_id = ?1 AND parent_uuid = ?4 AND model_data IS NOT NULL;
INSERT OR REPLACE INTO transaction_v2 (store_v2_id, block_id, type, external_id, external_data, model_encoding, model_data) VALUES (?1, ?2, ?3, ?4, ?5, ?6, ?7);
DELETE FROM transaction_v2 WHERE id=?1;
DELETE FROM transaction_v2 where block_id=?1;
DELETE FROM transaction_v2 WHERE store_v2_id=?1;
DELETE FROM transaction_v2 WHERE store_v2_id=?1 AND type=?2 AND external_id=?3;
SELECT id, external_id, external_data, model_encoding, model_data FROM transaction_v2 WHERE  block_id=?1 AND id>?2 ORDER BY id LIMIT ?3;
SELECT id, external_id, external_data, model_encoding, model_data FROM transaction_v2 WHERE  block_id=?1;
DELETE FROM transaction_v2 WHERE block_id IN (SELECT id FROM block_v2 WHERE store_v2_id=?1 AND options_data IS NULL)
DELETE FROM transaction_v2 WHERE block_id IN (SELECT id FROM block_v2 WHERE store_v2_id=?1 AND type=?2 AND options_data IS NULL)
INSERT INTO record_v2                                         (store_v2_id, external_id, external_data, uuid, parent_uuid, type, model_encoding, model_data, model_schema, push_encoding, push_data, push_block_id)                                         VALUES (?1, ?2, ?3, ?4, ?5, ?6, ?7, ?8, ?9, ?10, ?11, ?12);
UPDATE record_v2 SET model_encoding=?2, model_data=?3, model_schema=?4 WHERE id=?1
UPDATE record_v2 SET external_id=?2, external_data=?3 WHERE id=?1
UPDATE record_v2 SET external_data=?3 WHERE store_v2_id=?1 AND external_id=?2
UPDATE record_v2 SET external_data=?3 WHERE store_v2_id=?1 AND uuid=?2
UPDATE record_v2 SET push_encoding = ?2, push_data = ?3, push_block_id = ?4 WHERE id = ?1;
UPDATE record_v2 SET push_encoding = ?3, push_data = ?4, push_block_id = ?5 WHERE store_v2_id = ?1 AND uuid=?2;
UPDATE record_v2 SET push_encoding = 0, push_data = NULL, push_block_id = NULL WHERE id=?1 AND push_block_id=?2;
UPDATE record_v2 SET push_encoding = 0, push_data = NULL, push_block_id = NULL WHERE push_block_id=?1
UPDATE record_v2 SET type = ?2, model_schema = ?3 WHERE id = ?1
DELETE FROM record_v2 WHERE id=?1;
DELETE FROM record_v2 WHERE id=?1 and push_block_id=?2;
DELETE FROM record_v2 WHERE store_v2_id=?1 AND uuid=?2;
DELETE FROM record_v2 WHERE store_v2_id=?1 AND external_id=?2;
DELETE FROM record_v2 WHERE store_v2_id=?1;
DELETE FROM record_v2 WHERE store_v2_id = ?1 AND (model_encoding = 0 OR model_data IS NULL) AND (push_block_id IS NULL OR push_block_id NOT IN (SELECT id FROM block_v2))
SELECT uuid FROM record_v2 WHERE store_v2_id=?1 AND external_id=?2
SELECT record_v2.id, record_v2.external_id, record_v2.external_data, record_v2.model_encoding, record_v2.model_data, record_v2.model_schema, record_v2.type, record_v2.push_encoding, record_v2.push_data, record_v2.push_block_id, record_v2.uuid FROM record_v2 WHERE push_block_id=?1
SELECT record_v2.id, record_v2.external_id, record_v2.external_data, record_v2.model_encoding, record_v2.model_data, record_v2.model_schema, record_v2.type, record_v2.push_encoding, record_v2.push_data, record_v2.push_block_id, record_v2.uuid FROM record_v2 WHERE store_v2_id=?1 and uuid=?2
SELECT record_v2.id, record_v2.external_id, record_v2.external_data, record_v2.model_encoding, record_v2.model_data, record_v2.model_schema, record_v2.type, record_v2.push_encoding, record_v2.push_data, record_v2.push_block_id, record_v2.uuid FROM record_v2 WHERE store_v2_id=?1 and external_id=?2
SELECT record_v2.id, record_v2.external_id, record_v2.external_data, record_v2.model_encoding, record_v2.model_data, record_v2.model_schema, record_v2.type, record_v2.push_encoding, record_v2.push_data, record_v2.push_block_id, record_v2.uuid FROM record_v2 WHERE store_v2_id=?1 and parent_uuid=?2
SELECT record_v2.id, record_v2.external_id, record_v2.external_data, record_v2.model_encoding, record_v2.model_data, record_v2.model_schema, record_v2.type, record_v2.push_encoding, record_v2.push_data, record_v2.push_block_id, record_v2.uuid FROM record_v2 WHERE store_v2_id=?1 and type=?2
SELECT record_v2.id, record_v2.external_id, record_v2.external_data, record_v2.model_encoding, record_v2.model_data, record_v2.model_schema, record_v2.type, record_v2.push_encoding, record_v2.push_data, record_v2.push_block_id, record_v2.uuid FROM record_v2 WHERE store_v2_id=?1 AND parent_uuid=?3 AND type=?2
SELECT record_v2.id, record_v2.external_id, record_v2.external_data, record_v2.model_encoding, record_v2.model_data, record_v2.model_schema, record_v2.type, record_v2.push_encoding, record_v2.push_data, record_v2.push_block_id, record_v2.uuid FROM record_v2 WHERE store_v2_id=?1
SELECT record_v2.id, record_v2.external_id, record_v2.external_data, record_v2.model_encoding, record_v2.model_data, record_v2.model_schema, record_v2.type, record_v2.push_encoding, record_v2.push_data, record_v2.push_block_id, record_v2.uuid FROM record_v2 WHERE id=?1
INSERT INTO index_sentinel (store_id, type) VALUES(?1, ?2);
DELETE FROM index_sentinel WHERE type = ?1;
DELETE FROM index_sentinel WHERE store_id = ?1;
SELECT COUNT('X') FROM index_sentinel WHERE store_id = ?1 and type = ?2;
SELECT record_v2.id, record_v2.external_id, record_v2.external_data, record_v2.model_encoding, record_v2.model_data, record_v2.model_schema, record_v2.type, record_v2.push_encoding, record_v2.push_data, record_v2.push_block_id, record_v2.uuid FROM record_v2 WHERE store_v2_id=:_store_id AND parent_uuid=:_parent_uuid AND type == :_type AND id>:_sequence_offset ORDER BY id LIMIT (%lu)
SELECT record_v2.id, record_v2.external_id, record_v2.external_data, record_v2.model_encoding, record_v2.model_data, record_v2.model_schema, record_v2.type, record_v2.push_encoding, record_v2.push_data, record_v2.push_block_id, record_v2.uuid FROM record_v2 WHERE store_v2_id=:_store_id AND parent_uuid=:_parent_uuid AND id>:_sequence_offset ORDER BY id LIMIT (%lu)
SELECT record_v2.id, record_v2.external_id, record_v2.external_data, record_v2.model_encoding, record_v2.model_data, record_v2.model_schema, record_v2.type, record_v2.push_encoding, record_v2.push_data, record_v2.push_block_id, record_v2.uuid FROM record_v2 WHERE store_v2_id=:_store_id AND type=:_model_type AND id>:_sequence_offset ORDER BY id LIMIT (%lu)
SELECT record_v2.id, record_v2.external_id, record_v2.external_data, record_v2.model_encoding, record_v2.model_data, record_v2.model_schema, record_v2.type, record_v2.push_encoding, record_v2.push_data, record_v2.push_block_id, record_v2.uuid FROM record_v2 WHERE store_v2_id=:_store_id AND id>:_sequence_offset ORDER BY id LIMIT (%lu)
SELECT id, type, options_data FROM block_v2 WHERE store_v2_id=:_store_id AND id<=:_sequence_offset AND type=3 ORDER BY id DESC LIMIT (%lu)
SELECT id, type, options_data FROM block_v2 WHERE store_v2_id=:_store_id AND id>:_sequence_offset AND (type=1 OR type=2) AND options_data IS NOT NULL ORDER BY id LIMIT (%ld)
@"NSError"16@?0@"HMBSQLContext"8
HMBLocalSQLContext
^%@(?:|-shm|-wal)(\..*)?$
HMBLZR.token
HMBLZR.name
HMBLocalZoneIDRow
@"NSError"24@?0^{sqlite3_stmt=}8^B16
@"NSError"16@?0^{sqlite3_stmt=}8
lastAdministrativeFetch
cloudID
HMBUI.pi
HMBUI.ci
HMBUI.cksp
Pending Invitation
Client Identifier
CK Share Participant
self.descriptionBlock
self.decodeBlock
self.encodeBlock
[value isKindOfClass:self.classObj]
 unavailableVersion: %@
 readonlyVersion: %@
 defaultValue: %@
 loggingVisibility: %ld
 recordField: %@
 optional: YES
<HMBModelField class: %@
[classObj conformsToProtocol:@protocol(CKRecordValue)]
(self.externalRecordField != ((void *)0))
@"NSString"16@?0@"NSData"8
@16@?0@"NSData"8
@"NSData"16@?0@8
default
redacted
debug
internallyRedacted
v16@?0@"NSNull"8
v8@?0
B16@?0@"CKDatabaseSubscription"8
self.initialCloudSyncFuture.isFinished
zoneState
B16@?0@"CKRecordZoneSubscription"8
Not unregistering zone subscription %@ because it is not in our list of existing subscriptions: %@
@"NSString"16@?0@"CKRecordZoneSubscription"8
v16@?0@"NAPromise"8
__modifySubscriptions
CREATE TABLE IF NOT EXISTS index_sentinel (                  store_id            INTEGER NOT NULL, type                TEXT NOT NULL, CONSTRAINT fk_index_sentinel FOREIGN KEY (store_id) REFERENCES store_v2 (id) ON DELETE CASCADE);
CREATE UNIQUE INDEX IF NOT EXISTS index_sentinel_unique ON index_sentinel (store_id, type);
%{public}@Deallocation called on %s without finalize.
%{public}@Unable to explain statement '%@': %@
%{public}@Unable to prepare SQL statement '%@': %@
%{public}@Prepared SQL statement: %s
%{public}@Failed to decode record from external data %@: %@
%{public}@Received -[rebuild] on a HMBCloudZone without a rebuilder
%{public}@Saving updated rebuilder model: %@
%{public}@Failed to update rebuilder model: %@
%{public}@Received -[handleZoneChangedNotification] on a HMBCloudZone without a rebuilder
%{public}@Destroyed rebuilder for zone.
%{public}@Rebuilder not allowed on zone.
%{public}@Re-Created rebuilder for zone (existed but had completed).
%{public}@Re-using rebuilder for zone.
%{public}@Created rebuilder for zone.
%{public}@Failed to encode subscriptions %@: %@
%{public}@Failed to decode subscriptions data %@: %@
%{public}@Failed to fetch additional items into query enumeration %@: %@
%{public}@Could not initialize from decoded shareURL: %@ token: %@ context: %@ cloudZoneID: %@ dateCreated: %@
%{public}@Handling keychain availability timer
%{public}@Handling CKIdentityUpdateNotification
%{public}@Handling CKAccountChangedNotification
%{public}@%{public}@Fetching account info
%{public}@%{public}@Failed to fetch account info: %@
%{public}@%{public}@Fetched account info: %@
%{public}@%{public}@CloudKit account is not currently available; waiting for CKAccountChangedNotification to check again
%{public}@%{public}@Manatee is not currently available; waiting for CKAccountChangedNotification to check again
%{public}@%{public}@Manatee is available
%{public}@Will wait for keychain availability
%{public}@Will wait for Manatee availability
%{public}@Will reset and re-check Manatee availability
%{public}@Skipping re-check with should check: %@ manatee available future: %@
%{public}@lost self for processing block!
%{public}@%{public}@Beginning processing of block %lu
%{public}@%{public}@Failed to fetch block row %lu from %@: %@
%{public}@%{public}@Could not find block with row %lu
%{public}@%{public}@Block %lu has not been committed. Ignoring process request.
%{public}@%{public}@Failed to unarchive processing options from options data: %@
%{public}@%{public}@unable to cleanup corrupt block: %@
%{public}@%{public}@Failed to insert output block for zone row %lu: %@
%{public}@%{public}@Failed to clean up corrupt block: %@
%{public}@%{public}@Fetching objects for blockRow: %lu options: %@ lastItemRowID: %lu
%{public}@%{public}@Failed to fetch transaction entries for %lu / %@: %@
%{public}@%{public}@No more rows to process
%{public}@%{public}@Fetched %lu object(s) to process for blockRow: %lu options: %@
%{public}@%{public}@unable to determine modelID for %lu / %@: %@
%{public}@%{public}@unable to flush bogus row for %lu / %@: %@
%{public}@%{public}@unable to unarchive object for %lu / %@: %@
%{public}@%{public}@Found modelID %@ to %@ for row: %@
%{public}@%{public}@unable to find existing model with modelID %@ for %lu / %@: %@
%{public}@%{public}@Did not find existing record for modelID %@
%{public}@%{public}@Found existing record for modelID %@: %@
%{public}@%{public}@Unable to unarchive record row %lu: %@
%{public}@%{public}@Unable to remove corrupt record row %lu: %@
%{public}@%{public}@Not updating model because model creation is required: %@
%{public}@%{public}@Updating model %lu / %@ / %@
%{public}@%{public}@Unable to merge old record with new values %@ / %@: %@
%{public}@%{public}@Deleting model %lu / %@ / %@
%{public}@%{public}@Not creating model because model creation is disallowed: %@
%{public}@%{public}@Inserting model %@
%{public}@%{public}@No previous or updated value found for model with ID %@
%{public}@%{public}@Unable to encode object %@ (not attempting to push): %@
%{public}@%{public}@Unable to encode model %@: %@
%{public}@%{public}@unable to update / insert row for %lu / %@: %@
%{public}@%{public}@Sending deletion delegate callback for model: %@
%{public}@%{public}@Sending creation delegate callback for model: %@
%{public}@%{public}@Sending update delegate callback for model: %@
%{public}@%{public}@Unable to write rollback entries: %@
%{public}@%{public}@Unable to encode options for output: %@
%{public}@%{public}@Unable to update block to enqueue output: %@
%{public}@%{public}@Unable to trigger output because self.mirror is nil
%{public}@%{public}@Triggering output for output block row %@ on %@
%{public}@%{public}@Failed to clean up processed block: %@
%{public}@%{public}@Sending processing complete callback with result: %@
%{public}@%{public}@Finished processing %lu row(s) for blockRow: %lu
%{public}@[LocalZone] unable to cleanup rollback block: (lost self)
%{public}@%{public}@Rolling back block %@ due to push failure: %@
%{public}@%{public}@No block fetched! (no block found)
%{public}@%{public}@Rollback completed successfully for block %@.
%{public}@%{public}@Failed to get block for rollback: %@
%{public}@%{public}@Removing unused rollback block %@
%{public}@%{public}@Unable to cleanup rollback block: %@
%{public}@Unable to determine options for rollback block (%@)
%{public}@rollback options: %@
%{public}@Failed to rollback block: %@
%{public}@Failed to remove rollback block: %@
%{public}@invalidating push for block %lu
%{public}@Rollback is having issues. Expected to find a record row %lu / %@, but we didn't
%{public}@reverting record row %lu / %@ to %lu / %@
%{public}@%{public}@Updating record row: %lu %@ %lu %@ %@ %@ %@ %@
%{public}@Received change from mirror while existing record row %lu has pending output push
%{public}@%{public}@Reseting pending output push data due to change from mirror
%{public}@%{public}@Inserting record row: %lu %@ %lu %@ %@ %@ %@ %@ %@
%{public}@%{public}@No record row to update or updated model to insert
%{public}@Failed to delete null items/blocks: %@
%{public}@Rolling back block: %@
%{public}@Processing input block: %@
%{public}@Failed to delete zombie records: %@
%{public}@Notifying observers for model ID %@: %@
%{public}@Mirror input external data was nil when comparing against existing external data
%{public}@Existing external data was nil when comparing against mirror input external data
%{public}@Failed to decode record from mirror input external data: %@
%{public}@Failed to decode record from existing external data: %@
%{public}@Comparing mirror input modification date %@ with existing record modification date %@
%{public}@%{public}@Skipping mirror output push for model ID %@ and row %ld since the model is set to exclude cloud storage
%{public}@%{public}@Skipping mirror output push for updated model ID %@ and row %ld since the only set properties are excluded from cloud storage
%{public}@%{public}@Asked to abort invalid input block
%{public}@%{public}@Aborting input block
%{public}@%{public}@Failed to abort input block: %@
%{public}@%{public}@Successfully aborted input block
%{public}@%{public}@Asked to commit invalid input block
%{public}@%{public}@Committing input block.
%{public}@%{public}@Failed to commit input block: %@
%{public}@%{public}@Successfully committed input block
%{public}@%{public}@Asked to update additional entries on invalid input block
%{public}@%{public}@Failed to update additional entries on input block: %@
%{public}@%{public}@Asked to add additional entries on invalid input block
%{public}@%{public}@Failed to add additional entries on input block: %@
%{public}@%{public}@Creating Input Block for %@
%{public}@Asked to handle unexpected updated model: %@
%{public}@Starting up with model container: %@
%{public}@Successfully started up with model container
%{public}@Failed to start up with model container: %@
%{public}@Zone needs creation
%{public}@Starting up with local zone: %@ configuration: %@
%{public}@Zone startup steps will begin after initial cloud sync future: %@
%{public}@Successfully started up with local zone
%{public}@Failed to start up with local zone: %@
%{public}@Startup steps - enqueue pending pushes
%{public}@Enqueueing pending push for output blockRow: %lu
%{public}@Notifying delegate %@ for error on operation %@: %@
%{public}@Delegate does not respond to selector.
%{public}@Received missing Manatee identity error on zone specific operation: %@
%{public}@Destroying cloud zone: %@
%{public}@Deallocating
%{public}@Pushing with updates: %@ removes: %@
%{public}@%{public}@Pushing update for record: %@
%{public}@%{public}@Pushing removal for record: %@
%{public}@%{public}@Starting CKModifyRecordsOperation with operationID: %@
%{public}@%{public}@CKModifyRecordsOperation failed: %@
%{public}@Cannot bifurcate, not enough items: (updates: %@, removes: %@)
%{public}@Record limit exceeded (updates: %lu, removes: %lu), bifurcating operation
%{public}@%{public}@CKModifyRecordsOperation will be retried
%{public}@%{public}@CKModifyRecordsOperation failed and cannot be retried: %@
%{public}@%{public}@CKModifyRecordsOperation succeeded
%{public}@Both bifurcated pushes failed: %@, %@
%{public}@Bifurcated push succeeded, merging results
%{public}@%{public}@Received conflict pushing record: %@
%{public}@%{public}@Record does not exist on server: %@
%{public}@%{public}@Failed to push record %@: %@
%{public}@%{public}@Successfully pushed record: %@
%{public}@Finalized called on table %@ twice.
%{public}@finalizing table for: %@
%{public}@Deallocation called on table for %@ without finalize.
%{public}@Creating index table for %@ model (fields: %@)
%{public}@Cleaning up sentinel table result (not fatal): %@
%{public}@Creating generic index: %@
%{public}@Unable to create generic index %@: %@
%{public}@Failed to remove sentinel table (not fatal): %@
%{public}@Column list for query %@ has duplicate values: %@
%{public}@Creating index: %@
%{public}@Unable to create index %@: %@
%{public}@Removing unused index: %@
%{public}@Unable to drop index: %@
%{public}@Removing all models of types %@ and options %@
%{public}@Failed to stage removal for all models of types %@: %@
%{public}@Removing models and descendant models with IDs: %@ depth: %lu options: %@
%{public}@Failed to stage removal for models and descendant models with IDs %@: %@
%{public}@Removing models with parent model ID %@ and options %@
%{public}@Failed to encode processing options %@: %@
%{public}@Failed to stage removal for models with parent model ID %@: %@
%{public}@Submitting models to add: %@ model IDs to remove: %@ options: %@
%{public}@Failed to archive options %@: %@
%{public}@Cannot update a model with a nil hmbModelID or hmbParentModelID: %@
%{public}@Failed to encode model %@: %@
%{public}@Submitted models with block row: %lu
%{public}@Not starting up local zone that has already started up
%{public}@Starting up local zone
%{public}@deallocating: %@
%{public}@Unable to iterate through unknown models in zone: %@
%{public}@Unable to decode model at row %lu %@: %@
%{public}@Not migrating unsupported model that has a generic representation: %@
%{public}@Updating model type to %@ and schema to %@ for previously-unsupported model: %@
%{public}@Unable to find version metadata field on record %@
%{public}@Unable to decode version metadata for record %@: %d
%{public}@Unable to determine encoding from version metadata: %@. Defaulting to %lu encoding
%{public}@Could not find data for encoding %lu in CKRecord %@
%{public}@CKRecord HMB metadata: %@
%{public}@Unable to uncompress data for %@
%{public}@Unable to decode data for %@
%{public}@Model of type %@ expected external record type %@ but cloud record has type %@
%{public}@Creating new cloud record %@ to store model %@.%@
%{public}@Updating existing cloud record %@ to store model %@.%@
%{public}@Dropping change for %@/%@ because property type %@ doesn't respond to nativeCKValueWithEncodingContext:error: but we think it conforms to HMBModelNativeCKWrapper
%{public}@Unable to encode wrapped and externally stored property %@/%@: %@
%{public}@Attempting to write property %@ on %@, unwritable in homed data version %@.
%{public}@%@%@
%{public}@Unable to determine externality of property %@ from type %@ (no such property exists)
%{public}@Unable to get default value of property %@ from type %@ (no such property exists)
%{public}@Unable to get value of property %@ from type %@ (no such property exists)
%{public}@Unable to set property %@ of %@ from type %@ (no such property exists)
%{public}@Unable to set property %@ of %@ from type %@ (property is unavailable)
%{public}@Unable to set property %@ of %@ from type %@ (property is read-only)
%{public}@Unable to set property %@ of %@ from type %@ (does not match the expected type %@)
%{public}@[HMBModel hmbType] called without having an associated id<HMBModelContainer>.
%{public}@[HMBModel hmbMerge:from:] called with nil container on target (worrysome in production code).
%{public}@[HMBModel hmbMerge:from:] called with nil container on source (worrysome in production code).
%{public}@Cannot merge. This object %@ is not a sub-class of %@
%{public}@Merging two unknown model objects object using the default rules (%@ and %@)
%{public}@Merging two unknown model objects object using the default rules %@.
%{public}@Going to merge unknown (probably from future) model type %@ with %@.
%{public}@Going to merge, but things won't be better until our type flips. (%@ / %@)
%{public}@Model %@ from cloud contained local only property %@, dropping
%{public}@Unable to merge %@ property of model class %@ (marked readonly for %@).
%{public}@Model %@.%@.%@ suppressing validity check due to HMDBackingStoreModelObject backport.
%{public}@Model %@.%@.%@ is not valid for storage (modelID is not set).
%{public}@Model %@.%@.%@ is not valid for storage (parentModelID is not set).
%{public}@Model %@.%@.%@ is not valid for storage (field %@ is not set).
%{public}@Cannot prepare model for container because modelID or parentModelID are missing: %@
%{public}@Cannot prepare model for container because hmbDataVersion is missing: %@
%{public}@Cannot prepare model %@ for container: %@
%{public}@Cannot prepare model for container: %@
%{public}@Unable to associate model (%@) with a nil container.
%{public}@Associating with a container with a different data version (%@ != %@).
%{public}@Failed to decode value for %@ property: %@
%{public}@Attempting to read property %@ on %@, unavailable in homed data version %@ (returning nil).
%{public}@Attempting to read property %@ from %@, does not appear defined.
%{public}@Asked to merge from unexpected object of class %@: %@
%{public}@Unexpectedly found %@ in CKRecord field for wrapped model value %@/%@ which we expected to be a CKStreamingAsset (ignoring).
%{public}@%{public}@Starting %@ CKCodeOperation for service: %@ operationID: %@
%{public}@%{public}@CKCodeOperation failed: %@
%{public}@%{public}@CKCodeOperation will be retried
%{public}@%{public}@CKCodeOperation succeeded
%{public}@%{public}@CKCodeOperation finished with request UUID: %@
%{public}@Unexpectedly got a watchdog fire event in state %@
%{public}@Unexpectedly got a watchdog fire event from an unexpected timer.
%{public}@Unable to get operation queue to change state transition
%{public}@Lost self for cloud zone rebuild
%{public}@Requested state transition from %@ to %@ (finished: %@).
%{public}@Initial state transition to complete finishes waitForRebuildCompletion early.
%{public}@Attempting to transition into invalid state %@ (treating as Complete)
%{public}@Expected future to be in-progress but it's NOT!
%{public}@Notifying delegate %@ of updated rebuild status: %@
%{public}@Waiting %.2f seconds for an expected cloud push.
%{public}@Lost %@ for cloud zone rebuild
%{public}@Lost %@ while completing rebuild.
%{public}@Removing all records and resetting serverChangeToken.
%{public}@Unable to remove all records from local zone: %@
%{public}@unable to decode model from row %lu: %@
%{public}@unable to re-encode model %@ for cloud: %@
%{public}@unable to remove corrupt record: %@
%{public}@Unable to generate updated sentinel model: %@
%{public}@Unable to generate externalID from %@: %@
%{public}@Unable to generate externalData from %@: %@
%{public}@Unable to reset externalID and externalData for %lu: %@
%{public}@Failed to encode sentinel model: %@
%{public}@Lost cloudDatabase for cloud zone rebuild
%{public}@Attempting to acquire lock.
%{public}@[HMBCloudZoneRebuildPrivate] lost self
%{public}@Lost %@
%{public}@Unable to create sentinel model for %@: %@
%{public}@Pushing sentinel record: %@
%{public}@Sentinel model push failed with fatal error: %@
%{public}@Sentinel record already exists on the server. Returning server version.
%{public}@Unable to find appropriate error for sentinel record push: %@
%{public}@Unable to decode model from CK Record: %@
%{public}@Record was not expected type (got %@)
%{public}@Sentinel record has not mutated.
%{public}@Lost cloudZone for cloud zone rebuild
%{public}@Unexpectedly got a CKNotification when in state %@ (ignoring)
%{public}@Successfully fetched: %@
%{public}@Sentinel record indicates that zone is completely rebuilt.
%{public}@Sentinel record unique token did not change from %@
%{public}@Sentinel record unique token changed %@ -> %@
%{public}@Fetch succeeded, but no record returned.
%{public}@Insufficient to transition out of Lost Key state.
%{public}@received notification, but failed to fetch model: %@
%{public}@Will not transition out of Lost Key state.
%{public}@Received a request to begin rebuild but we are already in: %@.
%{public}@Not transitioning to Lost Key state, already in an active rebuild state (%@).
%{public}@Lost self while starting up rebuild machine.
%{public}@Starting up zone rebuilder
%{public}@Found existing sentinel model: %@
%{public}@Unable to fetch rebuild sentinel model: %@
%{public}@Sentinel model fetch failed: %@.
%{public}@Successfully fetched sentinel model: %@.
%{public}@Using HMBModelUnsupported because model's minimum version %@ is higher than current version: %@
%{public}@Cannot find type information in model dictionary: %@
%{public}@Unable to find model class named %@
%{public}@Unable to resolve type name to class: %@
%{public}@Cannot deserialize from unknown encoding: %lu
%{public}@Failed to populate model with dictionary %@: %@
%{public}@Failed to prepare model %@: %@
%{public}@Cannot encode data from model %@ with unknown encoding: %lu
%{public}@Failed to OPACK decode data: %@
%{public}@Result was not of class %@: %@
%{public}@Failed to OPACK encode dictionary %@: %@
%{public}@Informing delegate we have lost our identity.
%{public}@Unable to remove self from the share: %@
%{public}@Successfully removed ourself from share.
%{public}@Unable to rebuild a shared zone.
%{public}@Failed to create input context for conflict records: %@
%{public}@Failed to commit conflicted record resolution: %@
%{public}@Unable to generate externalID for cloudRecord: %@
%{public}@Staging removal for client record without a server version: %@
%{public}@Failed to stage removal for client record %@: %@
%{public}@Unable to generate model for cloudRecord: %@
%{public}@Unable to generate externalData for cloudRecord: %@
%{public}@Staging server version of conflicted record %@ / %@ due to conflict
%{public}@Failed to stage addition for model %@: %@
%{public}@%{public}@
%{public}@Accepting invitation: %@
%{public}@Accepted invitation with share: %@
%{public}@Adding zone state model: %@
%{public}@Unable to add zone state model: %@
%{public}@Not adding zone state model because one already exists: %@
%{public}@Fetched share metadata: %@
%{public}@Queueing up accept for invitation %@
%{public}@Removing local data for zone: %@
%{public}@Failed to remove local data for zone %@: %@
%{public}@Successfully removed local data for zone: %@
%{public}@Removing local zone: %@
%{public}@Removing local zone mirror: %@
%{public}@Cannot set a new delegate on local zone with identifier %@ because that local zone has already been opened with a different delegate
%{public}@Returning existing zone: %@
%{public}@Unable to open zone %@ (does not exist)
%{public}@Unable to create our local storage: %@.
%{public}@Performing cloud pull with token: %@ options: %@
%{public}@Lost localZone in __performCloudPull.
%{public}@%{public}@Failed to create a new mirror input: %@
%{public}@%{public}@Starting CKFetchRecordZoneChangesOperation with token: %@ options: %@ operationID: %@
%{public}@%{public}@CKFetchRecordZoneChangesOperation failed: %@
%{public}@%{public}@Performing cloud pull again with nil change token due to expired change token error: %@
%{public}@%{public}@CKFetchRecordZoneChangesOperation will be retried
%{public}@%{public}@Received cloud zone deletion error: %@
%{public}@%{public}@Failed to fetch record zone changes: %@
%{public}@%{public}@Committing mirror input block
%{public}@%{public}@Failed to commit block: %@
%{public}@%{public}@Successfully committed block. Handling %lu internal model updates.
%{public}@%{public}@CKFetchRecordZoneChangesOperation succeeded
%{public}@%{public}@Failed to fetch newest records: %@
%{public}@%{public}@Successfully fetched newest records with moreComing: %@ and serverChangeToken: %@
%{public}@%{public}@Received record deletion for %@/%@
%{public}@%{public}@Failed to encode externalID from recordID %@: %@
%{public}@%{public}@Failed to add model to remove to block: %@
%{public}@%{public}@Received record %@, but failed to decode: %@
%{public}@%{public}@Received record %@ with decoded model %@.%@
%{public}@%{public}@Failed to encode externalID from record %@: %@
%{public}@%{public}@Failed to encode externalData from record %@: %@
%{public}@%{public}@Failed to add model to update to block: %@
%{public}@Coalescing cloud pull with options: %@
%{public}@Queueing up cloud pull with options: %@
%{public}@Received message that did not translate to a CKNotification; deferring to delegate: %@
%{public}@%{public}@Handling CKDatabaseNotification: %@
%{public}@%{public}@Handling CKRecordZoneNotification: %@
%{public}@%{public}@Starting update for zone: %@
%{public}@Received unexpected query notification: %@
%{public}@Received unknown CKNotification: %@
%{public}@Removing state for zone ID %@
%{public}@Asked to remove state for zoneID %@ that has already been removed
%{public}@Unable to determine children of zone state model %@ with ID %@: %@
%{public}@Unable to remove cloud zone state models for zone ID %@: %@
%{public}@Received missing Manatee identity error on database specific query (this is not expected): %@
%{public}@Manatee is unavailable. Waiting for Manatee to become available before retrying
%{public}@CloudKit account status is no longer authenticated. Waiting for Manatee to become available before retrying
%{public}@Keychain is unsynced. Waiting for keychain to become available before retrying
%{public}@Not retrying failed CloudKit operation
%{public}@Will retry cloud operation after %.2f seconds
%{public}@Retrying operation that received keychain unsynced error
%{public}@Retrying operation that received account not authenticated error
%{public}@Retrying operation that received Manatee unavailable error
%{public}@Unable to remove zone with public zoneID: %@
%{public}@Failed to open existing shared zone for removal: %@
%{public}@Failed to open shared local zone for removal: %@
%{public}@Asked to open existing shared zone with ID: %@
%{public}@No cloud zone found with ID %@
%{public}@Creating state for cloud zone with ID %@
%{public}@Unable to save new zone to database: %@
%{public}@Cannot set a delegate on cloud zone with identifier %@ because that cloud zone has already been opened with a different delegate
%{public}@Returning existing cloud zone: %@
%{public}@Creating cloud zone with ID %@
%{public}@Asked to open existing private zone with ID: %@
%{public}@Asked to open or create private zone with ID: %@
%{public}@Normal remove behavior for zone %@ suppressed due to rebuild.
%{public}@Failed to open local zone with ID %@ for removal: %@
%{public}@No open HMBCloudZone exists for zoneID %@
%{public}@Have an open HMBCloudZone for zoneID %@
%{public}@Normal update behavior for zone suppressed due to rebuild.
%{public}@Unable to trigger cloudZone fetch on %@ due to failed startup: %@
%{public}@Lost cloudZone reference for %@ prior to subscription initiated fetch.
%{public}@Got update for a zone ID %@ we don't have state for. All zone states: %@
%{public}@Normal create behavior for zone %@ suppressed due to rebuild.
%{public}@Asked to perform administrative fetch for unsupported database scope: %@
%{public}@%{public}@Starting administrative fetch for %@ with force=%@
%{public}@%{public}@Skipping administrative fetch for %@ because force=%@ and last administrative fetch was %@
%{public}@%{public}@Created pre-fetch mapping of zone state by zone ID: %@
%{public}@%{public}@Processing administrative fetch
%{public}@%{public}@Unable to update database state for administrative fetch: %@
%{public}@%{public}@Unable to update zone models in local DB %@: %@
%{public}@%{public}@Updating subscriptions for zone ID %@ from %@ to %@
%{public}@%{public}@Zone with ID %@ was created
%{public}@%{public}@Zone with ID %@ was deleted
%{public}@Ignoring unexpected subscription on shared zone: %@
%{public}@Got unexpected subscription %@
%{public}@Returning existing initial cloud sync future: %@
%{public}@Performing initial cloud sync
%{public}@Successfully performed initial cloud sync
%{public}@Failed to perform initial cloud sync: %@
%{public}@Found zone ID that needs deletion: %@
%{public}@[HMBCloudDatabase] Failed to resolve preferred CloudKit environment with error: %@
%{public}@[HMBCloudDatabase] Lost self.
%{public}@Did not receive a preferred push environment, defaulting to %@
%{public}@Registering APS Connection for environment: %@
%{public}@Creating cloud database with localDatabase: %@ configuration: %@
%{public}@Failed to create state zone for database: %@
%{public}@Unable to load cloud database states: %@
%{public}@Created public database state model with cloudID %@: %@
%{public}@Created private database state model with cloudID %@: %@
%{public}@Created shared database state model with cloudID %@: %@
%{public}@Unable to update cloud database models: %@
%{public}@Unable to load zone model state: %@
%{public}@Unable to remove zone with ID %@ on a non-private database
%{public}@Removing private cloud zone with ID %@
%{public}@%{public}@Starting CKModifyRecordZonesOperation with zoneToSave: %@ zoneIDToRemove: %@ operationID: %@
%{public}@%{public}@CKModifyRecordZonesOperation failed: %@
%{public}@%{public}@CKModifyRecordZonesOperation will be retried
%{public}@%{public}@CKModifyRecordZonesOperation failed and cannot be retried: %@
%{public}@%{public}@CKModifyRecordZonesOperation succeeded
%{public}@%{public}@Ignoring partial error for zoneID %@: %@
%{public}@Unable to create zone with ID %@ on a non-private database.
%{public}@Creating private cloud zone with ID %@
%{public}@Zone modification finished, but had to create zone model for %@ (someone created a zone outside of HMBCloudZone startup).
%{public}@%{public}@Starting CKFetchRecordZonesOperation for database: %@ operationID: %@
%{public}@%{public}@CKFetchRecordZonesOperation failed: %@
%{public}@%{public}@CKFetchRecordZonesOperation will be retried
%{public}@%{public}@CKFetchRecordZonesOperation failed and cannot be retried: %@
%{public}@%{public}@CKFetchRecordZonesOperation succeeded with zones: %@
%{public}@Unknown filter result received: %lu
%{public}@Unregistering subscription for external record type %@
%{public}@Registering subscription for external record type %@
%{public}@Handling retry share operation error: %@
%{public}@Share operation failed: %@
%{public}@Canceling share operation due to failed cloud pull: %@
%{public}@Not retying share operation because no new CKShare changes were found after performing cloud pull (initialShare: %@, currentShare: %@)
%{public}@Retrying share operation after finishing cloud pull
%{public}@Failed to prepare statement: %@
%{public}@The query's argument dictionary contains an argument named '%@' which does not exist as an argument in the query statement's SQL: %@
%{public}@The query statement's SQL contains an argument named '%@' which does not exist as an argument in the query's argument dictionary: %@
%{public}@The query statement's SQL contains an argument for a property named '%@' which does not exist as a property on %@: %@
%{public}@Didn't find reference to %@ in query plan for %s:
%{public}@    %lu.%lu %@
%{public}@Failed to reset output for records with output block row %lu: %@
%{public}@Failed to delete block with output block row %lu: %@
%{public}@Unable to delete pushed record %lu: %@
%{public}@Not removing record %lu because it appears to have changed.
%{public}@Unable to clear output columns for pushed record %lu: %@
%{public}@Not clearing output columns for record %lu because it appears to have changed.
%{public}@Deleting block with output block row %lu because it has no corresponding records
%{public}@Unable to fetch options for block at row %lu.%@: %@
%{public}@Failed to unarchive transaction options from options data: %lu.%@: %@
%{public}@Cannot validate reference %@ because the referenced model can't be found: %@
%{public}@Local zone for associated container is nil: %@
%{public}@Unable to determine CKRecordID for model ID %@: %@
%{public}@Unable to decode CKRecordID from external ID %@: %@
%{public}@Looking for referenced model %@ in localZone %@
%{public}@Error fetching model %@
%{public}@No local model for %@, fetching via CKReference %@
%{public}@Unable to find referenced model %@, no local model and no CKReference to fetch
%{public}@Received CKRecord with a HMBModelCloudReference field (%@/%@) where the corresponding CKRecord field is not set or not of the expected type (got %@)
%{public}@Received CKRecord with a HMBModelCloudReference field (%@/%@) where zone name for reference stored in the CKRecord field does not match the zone name in the HMBModel field (%@!=%@)
%{public}@Unexpectedly found %@ in CKRecord field for wrapped model value %@/%@ which we expected to be a CKReference (ignoring).
%{public}@Asked to fetch an empty set of record IDs
%{public}@Failed to decode complete model for record %@: %@
%{public}@Unable to encode externalID from recordID %@: %@
%{public}@Unable to fetch modelID for externalID %@: %@
%{public}@Successfully fetched complete models for record ID but no models were returned
%{public}@Failed to fetch record rows for model IDs %@: %@
%{public}@Fetched %lu record rows %@ but requested %lu model IDs %@
%{public}@Trying to perform a cloud fetch for a record (%@/%@) that has not been pushed.
%{public}@Failed to decode encoded record ID %@: %@
%{public}@Fetching complete models with force=%@: %@
%{public}@Successfully fetched complete models ID but no models were returned
%{public}@Queueing fetch for records with record IDs: %@
%{public}@Performing fetch for records with record IDs: %@
%{public}@%{public}@Starting CKFetchRecordsOperation with record IDs: %@ operationID: %@
%{public}@%{public}@CKFetchRecordsOperation failed: %@
%{public}@%{public}@CKFetchRecordsOperation will be retried
%{public}@%{public}@CKFetchRecordsOperation partially failed, but returning those records that were successfully fetched
%{public}@%{public}@CKFetchRecordsOperation failed and cannot be retried: %@
%{public}@%{public}@CKFetchRecordsOperation succeeded
%{public}@%{public}@Failed to fetch record with ID %@: %@
%{public}@%{public}@Successfully fetched record with ID %@: %@
%{public}@Clearing cloudZone on state for zone with ID: %@
%{public}@Unable to find state model to clear cloudZone for with zone ID %@
%{public}@Updating needs deletion to %@ for zone with ID: %@
%{public}@Unable to find state model to update needs zone deletion for with zone ID %@
%{public}@Unable to update needs zone deletion on state model for zone: %@
%{public}@Unable to find state model for zone.
%{public}@Unable to update state model for zone: %@
%{public}@Cannot find zone model to fetch server change for with zone ID %@
%{public}@Cannot find zone model to update server change for with zone ID %@
%{public}@Updating server change token of %@ to %@
%{public}@Unable to update server change token for zone %@: %@
%{public}@Unable to update server change token for scope %ld: %@
%{public}@%{public}@Starting CKFetchSubscriptionsOperation for database: %@ operationID: %@
%{public}@%{public}@CKFetchSubscriptionsOperation failed: %@
%{public}@%{public}@CKFetchSubscriptionsOperation will be retried
%{public}@%{public}@CKFetchSubscriptionsOperation failed and cannot be retried: %@
%{public}@%{public}@CKFetchSubscriptionsOperation succeeded with subscription IDs: %@
%{public}@Ignoring push request for block row %lu. Appears to be in-progress.
%{public}@%{public}@No local zone available to perform cloud push
%{public}@%{public}@Unable to fetch options for output block row %lu: %@
%{public}@%{public}@Unable to fetch tuples for output block row %lu: %@
%{public}@%{public}@Skipping cloud push for output block row %lu because no tuples were found
%{public}@%{public}@Starting cloud push for output block row: %lu options: %@ tuples count: %lu
%{public}@%{public}@Failed to decode encoded record ID %@: %@
%{public}@%{public}@Unable to encode record for update: %@
%{public}@%{public}@Unable to encode recordID for update: %@
%{public}@%{public}@Preparing to update: %@ / %@
%{public}@%{public}@Aborting block %lu due to encoding error: %@.
%{public}@%{public}@No valid records to push; aborting
%{public}@%{public}@Abort update for block %lu failed with error: %@
%{public}@%{public}@Cloud push chunk failed: %@
%{public}@%{public}@Failed to encode externalID for %@: %@
%{public}@%{public}@Failed to encode externalData for %@: %@
%{public}@%{public}@Received unexpected updated record: %@
%{public}@%{public}@Queueing record for post-processing: %@
%{public}@%{public}@Unable to decode internal record %@: %@
%{public}@%{public}@Queueing internal model: %@ %@
%{public}@%{public}@Queueing model for post-processing: %@ %@
%{public}@%{public}@Internal models processed.
%{public}@%{public}@Failed to mark records as pushed: %@
%{public}@%{public}@Post-processing %lu models
%{public}@%{public}@Nothing to post-process
%{public}@%{public}@Post-processing succeeded
%{public}@%{public}@Post-processing failed: %@
%{public}@%{public}@Unable to complete push for row %lu: %@
%{public}@[%s.%lu] Lost self reference.
%{public}@Drop all cloud records requested by conflict resolution delegate callback.
%{public}@Dropping cloud push record %@ / %@ due to conflict.
%{public}@Dropping cloud push record %@ due to conflict.
%{public}@Records push failed immediately: %@
%{public}@Unable to determine index state of %@: %@
%{public}@Preparing to reindex table for %@
%{public}@Total of %lu rows re-indexed for %@.
%{public}@Unable to rebuild index of %@: %@
%{public}@Have re-indexed %lu records of %@ type.
%{public}@Staging removal for model with external ID: %@
%{public}@Staging addition for model: %@ externalID: %@ externalData: %@
%{public}@connection: %@ didReceiveIncomingMessage: %@
%{public}@Handling incoming APS message with topic: %@ userInfo: %@
%{public}@connection: %@ didReceivePublicToken: %@
%{public}@connection: %@ didReceiveToken: %@ forTopic: %@ identifier: %@
%{public}@Adding enabled topic to APS connection: %@
%{public}@Creating APSConnection with environment: %@ namedDelegatePort: %@
%{public}@%{public}@Asked to abort invalid output block
%{public}@%{public}@Aborting output block
%{public}@%{public}@Successfully aborted output block
%{public}@%{public}@Asked to commit invalid output block
%{public}@%{public}@Committing output block.
%{public}@%{public}@Failed to commit output block: %@
%{public}@%{public}@Asked to add additional entries on invalid output block
%{public}@%{public}@Failed to add additional entries on output block: %@
%{public}@%{public}@Creating Output Block for %@
%{public}@HMBManager detected local corruption: %@
%{public}@No delegate supplied for '- (BOOL)shouldLogPrivateInformation' returning NO.
%{public}@Treating Unknown Item error as success when deleting share participant record ID: %@
%{public}@Failed to delete share participant records: %@
%{public}@Hit conflict when pushing share and share participant record; retrying operation
%{public}@Failed to push share and share participant record: %@
%{public}@Hit conflict when pushing share; retrying operation
%{public}@Failed to push share: %@
%{public}@Adding %@ share operation: %@
%{public}@Received cloud zone record push result partial error due to zone already deleted
%{public}@Failed to push changes for leaving cloud share: %@
%{public}@Leaving cloud share
%{public}@Cannot leave cloud share because no share model was found
%{public}@Could not find a share model. Will attempt to find one by re-fetching all records
%{public}@Handling error result after attempting to remove the share record: %@
%{public}@Successfully pushed changes for leaving cloud share with result: %@
%{public}@Creating share model
%{public}@Handling updated share participant: %@
%{public}@Removing existing share participant model with client identifier %@ because it has a different model ID: %@
%{public}@Failed to remove existing share participant model: %@
%{public}@Failed to update share participant models: %@
%{public}@Handling updated share: %@
%{public}@Removing participant that is no longer on share: %@
%{public}@Updating CKShareParticipant on participant %@ to %@
%{public}@Failed to update/remove share models: %@
%{public}@Unable to decode model from share participant record %@: %@
%{public}@Decoded model was not a HMBCloudZoneShareParticipantModel: %@
%{public}@Unable to decode share model from share %@
%{public}@Cannot fetch share model because local zone is nil
%{public}@Unable to fetch share models: %@
%{public}@Unexpectedly found more than one share model: %@
%{public}@Failed to remove existing share modelIDs: %@
%{public}@Fetched existing share model: %@
%{public}@Did not find existing share model
%{public}@Cannot initialize share participant models because local zone is nil
%{public}@Initializing with fetched participants: %@
%{public}@Revoking share for participant: %@
%{public}@Could not find participant model for participant %@
%{public}@Successfully pushed share participant deletion for share revocation
%{public}@Successfully pushed share changes for share revocation
%{public}@Removing participant %@ from share %@
%{public}@Not removing participant %@ from share because it doesn't exist on share: %@
%{public}@Setting write access enabled to %@ for participant: %@
%{public}@Could not find CKShareParticipant for participant %@. All CKShareParticipants: %@
%{public}@Not setting write access enabled because participant's permission is already %@
%{public}@Successfully pushed changes for participant write access update
%{public}@Fetching invitation with context: %@
%{public}@Unable to fetch an invitation on non-private zone
%{public}@Configuring existing participant %@ for the requested invitation context: %@
%{public}@Asked to fetch an invitation for client identifier corresponding to participant that has already accepted: %@
%{public}@Returning existing pending invitation: %@
%{public}@Participant already exists that has not accepted but has no pending invitation: %@
%{public}@Unable to find updated share participant on share %@
%{public}@Unable to find invitation token on share participant %@
%{public}@Created invitation: %@
%{public}@Unable to encode participant model %@: %@
%{public}@Adding participant %@ to share %@
%{public}@Removing participant %@ because it already exists on share %@
%{public}@Fetching invitation again after configuring participant
%{public}@No participant was found with client identifier: %@
%{public}@No cloud share ID was found for participant: %@
%{public}@No current participant record ID found on cloud zone share: %@
%{public}@No owner record ID found on cloud zone share: %@
%{public}@Unable to prepare Query context for class: %@
%{public}@Prepared query context for %@
%{public}@Preparing query contexts...
%{public}@Failed to clean up queryable table (non-fatal): %@
%{public}@Adding sentinal table failed: %@
%{public}@Query Table: %@ <%@>
%{public}@    %@ <%@>
%{public}@Significant failure during preparation of queries: %@
%{public}@discarding existing index table %@ (%@ / %@ / %@)
%{public}@%{public}@Starting CKFetchRecordsOperation for current user record with operationID: %@
%{public}@%{public}@CKFetchRecordsOperation did not retrieve user record, but no error was returned
%{public}@%{public}@CKFetchRecordsOperation succeeded with record: %@
%{public}@%{public}@Fetched user record: %@
%{public}@%{public}@Failed to fetch user record: %@
%{public}@%{public}@Starting CKAcceptSharesOperation with share metadata: %@ operationID: %@
%{public}@%{public}@CKAcceptSharesOperation failed: %@
%{public}@%{public}@CKAcceptSharesOperation will be retried
%{public}@%{public}@CKAcceptSharesOperation failed and cannot be retried: %@
%{public}@%{public}@CKAcceptSharesOperation succeeded with share: %@
%{public}@%{public}@Failed to accept share metadata %@: %@
%{public}@%{public}@Successfully accepted share for share metadata %@: %@
%{public}@%{public}@Starting CKFetchShareMetadataOperation for invitation: %@ operationID: %@
%{public}@%{public}@CKFetchShareMetadataOperation failed: %@
%{public}@%{public}@CKFetchShareMetadataOperation will be retried
%{public}@%{public}@CKFetchShareMetadataOperation failed and cannot be retried: %@
%{public}@%{public}@CKFetchShareMetadataOperation succeeded with share metadata: %@
%{public}@%{public}@Failed to fetch share metadata for url %@: %@
%{public}@%{public}@Fetched share metadata for url %@: %@
%{public}@%{public}@Starting CKFetchShareParticipantsOperation for lookup info: %@ operationID: %@
%{public}@%{public}@CKFetchShareParticipantsOperation failed: %@
%{public}@%{public}@CKFetchShareParticipantsOperation will be retried
%{public}@%{public}@CKFetchShareParticipantsOperation failed and cannot be retried: %@
%{public}@%{public}@CKFetchShareParticipantsOperation succeeded with participants: %@
%{public}@%{public}@Fetched share participant: %@
%{public}@Aborting local zone input
%{public}@Committing local zone input with options: %@
%{public}@Failed to commit local zone input: %@
%{public}@Staging removal for model with ID: %@
%{public}@Aborting input block left uncommitted
%{public}@Removing block with row %lu
%{public}@Failed to insert deletion item with blockRow: %lu type: %lu modelID: %@: %@
%{public}@Failed to select records with parentModelID: %@: %@
%{public}@Could not initialize zlib for uncompression, error %ld
%{public}@Could not initialize zlib for compression, error %ld
%{public}@Failed to compress, error %ld
%{public}@Cannot fetch updated zones for unsupported database scope: %@
%{public}@Coalescing cloud pull for scope: %@
%{public}@Queueing up cloud pull for scope: %@
%{public}@%{public}@Starting CKFetchDatabaseChangesOperation with database: %@ token: %@ operationID: %@
%{public}@%{public}@Fetch database changes operation completed with token: %@ moreComing: %@ error: %@
%{public}@%{public}@CKFetchDatabaseChangesOperation failed: %@
%{public}@%{public}@Retrying CKFetchDatabaseChangesOperation with nil change token due to expired change token error
%{public}@%{public}@CKFetchDatabaseChangesOperation will be retried
%{public}@%{public}@CKFetchDatabaseChangesOperation failed and cannot be retried: %@
%{public}@%{public}@CKFetchDatabaseChangesOperation succeeded
%{public}@%{public}@Failed to remove zone model IDs from local DB %@: %@
%{public}@%{public}@Failed to add created zone models to local DB %@: %@
%{public}@%{public}@Zone with ID was deleted: %@
%{public}@%{public}@Got a zone deletion for a non-existent zone ID: %@
%{public}@%{public}@Zone with ID changed: %@
%{public}@Asked to update models: %@ remove model IDs: %@
%{public}@Setting requiresModelCreation to YES because addition constraint is %ld
%{public}@Setting disallowsModelCreation to YES because addition constraint is %ld
%{public}@Staging addition for model: %@
%{public}@Asked to fetch zones with force: %@
%{public}@Unable to encode model (%@.%@): %@
%{public}@Ignoring fetch due to previous error: %@
%{public}@Failed to run SQL statement %s: %@
%{public}@Closing database context: %@
%{public}@Deferring close of database context: %@
%{public}@Actually closing database context: %@
%{public}@Failed to close database, status: %d
%{public}@Found context still using database: %@
%{public}@Opening database context: %@
%{public}@[HMBSQLManager] Expecting parameter to open be a sub-class of HMBSQLContext
%{public}@Failed to open context %@: %@
%{public}@[HMBSQLFile: %@] Unable to turn on foreign key enforcement: %@
%{public}@Failed to prepare context %@: %@
%{public}@Current schema version: %@
%{public}@Migration failed for context %@: %@
%{public}@Migration needs re-init for context %@
%{public}@Migration needs reopen for context %@
%{public}@unhandled migration result: %ld
%{public}@Failed to turn on WAL for context %@: %@
%{public}@Successfully turned on WAL for context %@
%{public}@Failed re-open of WAL-enabled context %@: %@
%{public}@unable to get files in %@ (%@)
%{public}@unable to remove %@: %@
%{public}@Unable to open memory database with create == NO
%{public}@Successfully opened context: %@
%{public}@Failed to open context %p at %@: %@
%{public}@removing all records and transactions from local
%{public}@ignoring exec due to previous error %s: %@
%{public}@Error executing statement: %@
%{public}@Running on a later DB schema than our version (%ld > %ld).
%{public}@Failing DB open during migration becaues we might corrupt things (open in read-only)
%{public}@Unable to query all required tables: %@
%{public}@Found tables: %@ is not a superset of expected tables: %@
%{public}@Have opened a DB in read-only mode with a different schema version than our version (%ld != %ld). This may end badly.
%{public}@Unable to determine if old tables are in the database: %@
%{public}@Unable to remove old table %@: %@
%{public}@unable to initialize SQL table: %@ with error: %@
%{public}@unable to initialize SQL index: %@ with error: %@
%{public}@Failed to updated schema version to current version %lu: %@
%{public}@unable to instantiate SQLite datastore %@: %@
%{public}@unable to prepare SQL statements: %@
%{public}@Ignoring SQL block request due to previous error: %@
%{public}@unable to compile expression: %@
%{public}@Unable to set a default value %@ of type %@ when the stored type is %@
%{public}@Asked to register subscription for Private DB: %@
%{public}@Asked to register subscription on PrivateDB, but no subscriptions!.
%{public}@Not registering DB subscription %@ because it appears to already exist in our list of subscriptions: %@
%{public}@Failed to update zone state: %@
%{public}@Asked to unregister shared subscription for subscription ID %@
%{public}@Not unregistering database subscription ID %@ because it is not in our list of existing database subscription: %@
%{public}@Failed to update database state: %@
%{public}@Asked to unregister private subscription for subscription ID %@
%{public}@Asked to unregister subscription for zone ID %@: %@
%{public}@Asked to unregister subscription %@ on unknown zoneID %@. All zone ID state: %@
%{public}@Could not find zone state for zone ID %@ after updating subscriptions. All zone ID state: %@
%{public}@Asked to register subscription for zone ID %@: %@
%{public}@Asked to register subscription %@ on unknown zoneID %@. All zone ID state: %@
%{public}@Not registering zone subscription %@ because it is already in our list of subscriptions: %@
%{public}@Skipping subscription modify for empty save and remove lists
%{public}@%{public}@Starting CKModifySubscriptionsOperation with subscriptionsToSave: %@ subscriptionIDsToRemove: %@ operationID: %@
%{public}@%{public}@CKModifySubscriptionsOperation failed: %@
%{public}@%{public}@CKModifySubscriptionsOperation will be retried
%{public}@%{public}@CKModifySubscriptionsOperation failed and cannot be retried: %@
%{public}@%{public}@CKModifySubscriptionsOperation succeeded
%{public}@Asked to unregister shared subscription for external record type %@
%{public}@Asked to unregister private subscription for external record type %@
%{public}@Asked to register shared subscription for external record type %@
%{public}@Asked to register private subscription for external record type %@
%{public}@Not pushing database subscription ID %@ because it is already in our list of registered database subscriptions: %@
HMBMirrorOutputResult
HMBProcessingOptions
NSSecureCoding
NSCoding
HMBProcessingResult
HMBSQLStatementQueryPlanTuple
HMBSQLStatement
Record
Rebuild
Rebuild_Internal
HMBCloudZoneStateModel
HMBCloudZoneShareModel
HMBSQLQueryIterator
HMBShareInvitation
NSCopying
HMBCloudCredentialsAvailabilityListener
HMFTimerDelegate
NSObject
HMFLogging
HMBLocalSQLContextRowBlock
HMBLocalSQLIteratorRowBlock
HMBLocalSQLIteratorRowInputBlock
HMBLocalSQLIteratorRowRollbackBlock
HMBSQLQueryStatement
HMBLocalSQLContextRowItem
HMBLocalZoneProcessModelContext
HMBLocalZoneProcessTuple
Process
ShareModel
HMBLocalSQLContextInputBlock
HMBCloudZoneEncodingContext
HMBCloudZone
HMBMirrorProtocol
HMBCloudZoneConflict
HMBCloudZoneRecordPushResult
CloudRecord_Internal
CloudRecord
HMBCloudDatabaseConfiguration
NSMutableCopying
HMBMutableCloudDatabaseConfiguration
HMBProcessingModelResult
HMBLocalSQLQueryTable
HMBLocalZone
HMBCloudZoneRebuilderStatus
HMBModelObjectCoder
HMBLocalZoneQueryResultAllOfTypeRaw
MigrateUnsupported
Manatee
HMBLocalZoneIDUnshared
HMBLocalZoneID
HMBSearchableEntry
HMBModel
HMBModelProperties
HMBModelUnsupported
HMBModelTranslation
HMBShareUserID
HMBProcessingModelDeletion
HMBLocalZoneConfiguration
HMBMutableLocalZoneConfiguration
HMBStreamingAsset
HMBModelObjectMerging
HMBModelNativeCKWrapper
HMBCloudZonePushResult
HMBCloudZonePullResult
HMBLocalSQLContextRowZone
CKCode
HMBPrivateCloudZoneRebuilder
HMBCloudZoneRebuilder
HMBModelContainer
HMBMutableModelContainer
HMBModelContainerEncodingContext
MirrorInput
HMBCloudZoneRebuilderModel
HMBSharedCloudZoneRebuilder
HMBCloudID
HMBMutableAction
HMBAction
HMBCloudZoneShareParticipantModel
Conflicts
HMBProcessingModelCreation
User
HMBLocalDatabase
Pull_Internal
Pull
HMBCloudDatabase
HMBCloudPushObserver
CloudZone
HMBLocalZoneQueryResultColumnTuple
HMBLocalZoneQueryResult
HMBLocalZoneQueryResultRecordID
HMBLocalZoneQueryResultRecordColumns
HMBLocalZoneQueryResultAllOfType
HMBLocalZoneQueryResultParentModelID
HMBLocalZoneQueryResultParentModelIDOfType
HMBLocalZoneQueryResultRecursiveModelID
HMBLocalZoneQueryResultFilter
Subscription
HMBFutureOperation
HMBLocalDatabaseConfiguration
HMBMutableLocalDatabaseConfiguration
HMBShareOperation
HMBModelQueryArgument
HMBModelQuery
HMBModelUnindexedQuery
HMBModelIndexedQuery
HMBModelInfiniteQuery
HMBModelFiniteQuery
HMBModelCountMatchesQuery
HMBMirrorOutputTuple
HMBMirrorOutputGroup
MirrorOutput
HMBModelReference
HMBQueryableModelFieldCoder
HMBModelCloudReference
HMBShareInvitationContext
HMBProcessingModelUpdate
Fetch
Fetch_Internal
HMBLocalZoneQueryResultRecordIDSequence
HMBCloudZoneFetchRecordsContext
Query
HMBLocalSQLContextRowRecord
HMBLocalSQLIteratorRowRecord
ZoneState
HMBCloudZoneID
CloudSubscription
Push
HMBLocalZoneDelegate
HMBLocalZoneTestingProtocol
Queryable
HMBLocalZoneMirrorInput
HMBAPSConnection
HMBCloudPushHandler
HMBAPSConnectionDelegate
HMBLocalSQLContextOutputBlock
HMBCloudZoneConfiguration
HMBMutableCloudZoneConfiguration
Delegate
Share_Internal
Share
HMBCloudStateModel
HMBLocalSQLContextQueryIndex
HMBLocalSQLContextQueryTable
HMBLocalSQLContextRowQueryTuple
HMBLocalSQLContextRowQuery
CloudUser
HMBLocalZoneInput
HMBLocalSQLContextRecord
Block
ZoneFetch
HMBLocalZoneRawUpdateEntry
Model
HMBLocalZoneLocalInput
Zone
V4Cloud
HMBSQLContext
HMBSQLContextConcrete
HMBSQLFile
sqlite3
Record_Internal
HMBEntrySearch
HMBLocalSQLContext
HMBLocalZoneIDRow
HMBCloudDatabaseStateModel
HMBModelObjectStorage
HMBCloudExtensions
HMBShareParticipant
HMBModelField
HMBMutableModelField
CKRecordValue
HMBModelFieldDeprecatedField
HMBModelFieldOptionExternalRecordField
HMBModelFieldOption
HMBModelFieldOptionQueryable
HMBModelFieldOptionExcludeFromCloudStorage
Subscription_Internal
MigrateToSchema01
TB,V_requiresModelCreation
TB,V_disallowsModelCreation
T@"NSString",R,C,N,V_label
T@"NSDictionary",&,N,V_messagePayload
T@"NSString",&,N,V_messageName
T@?,C,N,V_messageResponseHandler
T@"NSUUID",&,N,V_messageTransactionIdentifier
TB,N,V_shouldEnqueueMirrorOutput
TB,N,V_shouldRollBackIfMirrorOutputFails
TB,N,V_disallowsCellularAccessForMirrorOutput
Tq,N,V_qualityOfService
T@"HMFActivity",&,N,V_activity
TQ,N,V_transactionItemsBatchLimit
_shouldEnqueueMirrorOutput
_shouldRollBackIfMirrorOutputFails
_disallowsCellularAccessForMirrorOutput
_requiresModelCreation
_disallowsModelCreation
_label
_messagePayload
_messageName
_messageResponseHandler
_messageTransactionIdentifier
_qualityOfService
_activity
_transactionItemsBatchLimit
TB,R
supportsSecureCoding
encodeWithCoder:
initWithCoder:
initWithLabel:
attributeDescriptions
isEqual:
hash
label
messagePayload
setMessagePayload:
messageName
setMessageName:
messageResponseHandler
setMessageResponseHandler:
messageTransactionIdentifier
setMessageTransactionIdentifier:
shouldEnqueueMirrorOutput
setShouldEnqueueMirrorOutput:
shouldRollBackIfMirrorOutputFails
setShouldRollBackIfMirrorOutputFails:
disallowsCellularAccessForMirrorOutput
setDisallowsCellularAccessForMirrorOutput:
qualityOfService
setQualityOfService:
activity
setActivity:
transactionItemsBatchLimit
setTransactionItemsBatchLimit:
requiresModelCreation
setRequiresModelCreation:
disallowsModelCreation
setDisallowsModelCreation:
.cxx_destruct
encodeInteger:forKey:
encodeBool:forKey:
enumerateKeysAndObjectsUsingBlock:
setObject:forKey:
countByEnumeratingWithState:objects:count:
dictionaryWithCapacity:
count
encodeObject:forKey:
decodeIntegerForKey:
decodeBoolForKey:
decodeObjectOfClasses:forKey:
decodeObjectOfClass:forKey:
isEqualToString:
copy
addObject:
initWithName:value:
array
optionsWithLabel:
optionsWithMessage:
responseHandler
transactionIdentifier
T@"HMBProcessingOptions",R,N,V_options
T@"NSArray",R,N,V_actions
T@"NAFuture",R,N,V_mirrorOutputResult
_options
_actions
_mirrorOutputResult
initWithOptions:actions:mirrorOutputResult:
options
actions
mirrorOutputResult
Ti,R,N,V_row
Ti,R,N,V_parent
T@"NSString",R,N,V_detail
_row
_parent
_detail
initWithRow:
parent
detail
arrayWithObjects:count:
numberWithInt:
intValue
objectAtIndex:
T^{sqlite3_stmt=},N,V_statement
T@"HMBSQLContext",R,W,N,V_context
T@"NSArray",R,N,V_queryPlans
_context
_statement
_queryPlans
initWithContext:statement:queryPlans:
initWithContext:statement:
dealloc
finalize
context
statement
setStatement:
queryPlans
assertOwner
performBlock:
queryPlansForContext:statement:
sqlStatementForContext:statement:
TB,N
explainStatements
setExplainStatements:
na_map:
UTF8String
stringByAppendingString:
decodeModelFromRecord:externalRecordFields:source:error:
encodeRecordFromModel:externalData:encodingContext:error:
encodeRecordFromModel:existingRecord:encodingContext:error:
keyStatus
addSuccessBlock:
isZoneRebuildInProgress
rebuild
futureWithNoResult
startUpRebuilderIfNeeded
handleLostKeys
handleZoneChangedNotification
handleUpdatedRebuilderModel:
isFinished
waitForPendingRebuild
T@"NAFuture",R,N
zoneRebuildInProgress
TB,R,N,GisZoneRebuildInProgress
Tq,R,N
hmbProperties
addEntriesFromDictionary:
dictionaryWithObjects:forKeys:count:
mutableCopy
subscriptionsData
T@"NSData",&,D,N
T@"HMBCloudZone",W,V_cloudZone
zoneID
T@"HMBCloudZoneID",&,D,N
needsZoneCreation
T@"NSNumber",&,D,N
needsZoneDeletion
T@"NSSet",&,N
T@"HMBCloudZoneRebuilderStatus",&,N,V_rebuilderStatus
_cloudZone
_rebuilderStatus
initWithModelID:parentModelID:
subscriptions
setSubscriptions:
cloudZone
setCloudZone:
rebuilderStatus
setRebuilderStatus:
setSubscriptionsData:
archivedDataWithRootObject:requiringSecureCoding:error:
unarchivedObjectOfClasses:fromData:error:
setWithArray:
setNeedsZoneDeletion:
setNeedsZoneCreation:
hmbExternalRecordType
share
T@"CKShare",&,D,N
T@"HMBSQLQueryStatement",R,N,V_statement
TQ,R,N,V_maximumRowsPerQuery
T@"NSMutableArray",&,N,V_cachedResults
T@"NSNumber",&,N,V_currentSequence
T@"NSError",&,N,V_error
Ti,N,V_sequenceBindOffset
_sequenceBindOffset
_error
_maximumRowsPerQuery
_cachedResults
_currentSequence
initWithStatement:initialSequence:maximumRowsPerSelect:
initWithStatement:initialSequence:maximumRowsPerSelect:error:
fetchRowFromStatement:skip:updatedSequence:error:
fetchRow:error:
nextObject
enumerateObjectsUsingBlock:
bindPropertiesToStatement:error:
error
setError:
maximumRowsPerQuery
cachedResults
setCachedResults:
currentSequence
setCurrentSequence:
sequenceBindOffset
setSequenceBindOffset:
longLongValue
addObjectsFromArray:
numberWithUnsignedInteger:
arrayWithCapacity:
hmf_dequeue
exceptionWithName:reason:userInfo:
stringWithFormat:
hmf_numberForKey:
TQ,N
maximumRowsPerSelect
setMaximumRowsPerSelect:
T@"NSURL",R,N,V_shareURL
T@"CKDeviceToDeviceShareInvitationToken",R,N,V_token
T@"HMBShareInvitationContext",R,N,V_context
T@"HMBCloudZoneID",R,N,V_cloudZoneID
T@"NSDate",R,N,V_dateCreated
_cloudZoneID
_dateCreated
_shareURL
_token
copyWithZone:
initWithURL:token:context:cloudZoneID:
initWithURL:token:context:cloudZoneID:dateCreated:
cloudZoneID
dateCreated
shareURL
token
isEqualToDate:
date
shortDescription
T@?,C,V_keychainAvailabilityTimerFactory
TQ,R
superclass
T#,R
description
T@"NSString",R,C
debugDescription
_lock
_container
_notificationCenter
_manateeAvailabilityFuture
_keychainAvailabilityFuture
_keychainAvailabilityTimer
_keychainAvailabilityTimerFactory
timerDidFire:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
logIdentifier
logCategory
initWithContainer:
initWithContainer:notificationCenter:
waitForManateeAvailability
waitForManateeAvailabilityAndRecheckIfAlreadyAvailable
waitForKeychainAvailability
handleAccountChangedNotification:
handleIdentityUpdateNotification:
keychainAvailabilityTimerFactory
setKeychainAvailabilityTimerFactory:
finishWithNoResult
removeObserver:name:object:
containerIdentifier
accountInfoWithCompletionHandler:
supportsDeviceToDeviceEncryption
accountStatus
resume
addObserver:selector:name:object:
initWithTimeInterval:options:
defaultCenter
unlock
TQ,R,N,V_blockRow
TQ,R,N,V_type
T@"NSData",R,N,V_optionsData
_blockRow
_type
_optionsData
initWithBlockRow:type:options:
blockRow
type
optionsData
Ti,R,N,V_zoneRowBindOffset
ascending
TB,R,N,GisAscending,V_ascending
TQ,R,N,V_zoneRow
_ascending
_zoneRowBindOffset
_zoneRow
initWithSQLContext:zoneRow:statement:isAscending:
zoneRow
zoneRowBindOffset
isAscending
initWithSQLContext:zoneRow:
T@"NSDictionary",R,N,V_arguments
_arguments
initWithContext:statement:queryPlans:arguments:
arguments
stringWithUTF8String:
dictionary
TQ,R,N,V_itemRow
T@"NSData",R,N,V_externalID
T@"NSData",R,N,V_externalData
T@"NSData",R,N,V_modelData
TQ,R,N,V_modelEncoding
_itemRow
_modelData
_modelEncoding
_externalID
_externalData
initWithItemRow:externalID:externalData:modelEncoding:modelData:
initWithStatement:returning:
itemRow
modelData
modelEncoding
externalID
externalData
T@"HMBModel",R,N,V_model
T@"NSNumber",R,C,N,V_outputBlockRow
_model
_outputBlockRow
initWithModel:outputBlockRow:externalData:
model
outputBlockRow
T@"HMBLocalZoneProcessModelContext",R,N,V_previousContext
T@"HMBLocalZoneProcessModelContext",R,N,V_mergedContext
T@"HMBModel",R,C,N,V_updateModel
T@"HMBModel",R,C,N,V_outputModel
TQ,R,N,V_recordRow
T@"NSUUID",R,N,V_modelSchema
T@"NSString",R,N,V_modelType
T@"HMBLocalSQLQueryTable",R,N,V_queryTable
T@"NSArray",R,N,V_encodedQueryableColumns
_previousContext
_mergedContext
_updateModel
_outputModel
_recordRow
_modelSchema
_modelType
_queryTable
_encodedQueryableColumns
initWithPreviousContext:mergedContext:updateModel:outputModel:outputBlockRow:recordRow:itemRow:modelSchema:modelType:externalID:queryTable:
previousContext
mergedContext
updateModel
outputModel
recordRow
modelSchema
modelType
queryTable
encodedQueryableColumns
na_all:
modificationDate
compare:
containsObject:
hmfErrorWithCode:
finishWithError:
blockOperationWithBlock:
addOperation:
observersForModelWithID:
queueIncompleteProcesses
triggerProcessForBlockRow:
outputBlockRowForTuple:activity:
shouldMirrorInputExternalData:overwriteExistingExternalData:
outputModelFromUpdateModel:mergedModel:
unarchivedObjectOfClass:fromData:error:
bytes
initWithUUIDBytes:
objectForKey:
UUID
length
UUIDString
localZone:didProcessModelDeletion:
localZone:didProcessModelCreation:
localZone:didProcessModelUpdate:
completionHandlerAdapter
addCompletionBlock:
finishWithResult:
futureWithError:
unsignedIntegerValue
objectForKeyedSubscript:
allObjects
initWithUUIDString:
setShare:
encodeShareModel:
decodeShareModelFromShare:
recordID
recordName
T@"HMBLocalSQLContext",W,N,V_owner
TQ,N,V_blockRow
T@"NSString",R,N,V_identifier
T@"HMFActivity",R,N,V_activity
_identifier
_owner
initWithOwner:identifier:zoneRow:blockRow:type:
insertExternalID:externalData:modelEncoding:modelData:
updateExternalID:externalData:modelEncoding:modelData:
commit:
abort
identifier
setBlockRow:
owner
setOwner:
invalidate
T@"NSMutableDictionary",R,N,V_createdRecords
_createdRecords
init
createdRecords
T@"CKDatabase",R,N,V_database
T@"HMBCloudDatabase",W,N,V_cloudDatabase
T@"HMBLocalZone",W,N,V_stateZone
T@"NSUUID",R,N,V_stateModelID
TB,R,N,V_needsZoneCreation
TB,R,N,V_needsZoneDeletion
T@"HMBCloudZoneID",&,N,V_zoneID
T@"NSMapTable",R,N,V_modelClassToRequiresPostProcessingMap
T@"NSMutableDictionary",R,N,V_inProgressPushFuturesByOutputBlockRow
T@"HMFUnfairLock",R,N,V_propertyLock
T@"NSString",R,N,V_deviceIdentifier
T@"NAFuture",&,N,V_shutdownFuture
T@"NAFuture",&,N,V_destroyFuture
T@"<HMBCloudZoneRebuilder>",&,N,V_rebuilder
T@"NSOperationQueue",R,N,V_recordOperationQueue
T@"NSOperationQueue",R,N,V_shareOperationQueue
T@"NAFuture",&,V_queuedCloudPullFuture
T@"NSMutableSet",&,V_queuedFetchRecordsContexts
T@"HMBCloudZoneShareModel",&,V_shareModel
T@"NSMutableDictionary",R,N,V_shareParticipantModelsByClientIdentifier
T@"HMBModelContainer",&,N,V_modelContainer
T@"NSArray",&,N,V_defaultDesiredKeys
T@"<HMBCloudZoneDelegate>",W,N,V_delegate
T@"HMBCloudZoneConfiguration",R,C,N,V_configuration
T@"HMBLocalZone",W,N,V_localZone
T@"NAFuture",R,N,V_startUp
_needsZoneCreation
_needsZoneDeletion
_startUp
_cloudDatabase
_delegate
_configuration
_localZone
_database
_stateZone
_stateModelID
_zoneID
_modelClassToRequiresPostProcessingMap
_inProgressPushFuturesByOutputBlockRow
_propertyLock
_deviceIdentifier
_shutdownFuture
_destroyFuture
_rebuilder
_recordOperationQueue
_shareOperationQueue
_queuedCloudPullFuture
_queuedFetchRecordsContexts
_shareModel
_shareParticipantModelsByClientIdentifier
_modelContainer
_defaultDesiredKeys
T@"<HMBLocalZoneID>",R,N
startUpWithLocalZone:
destroy
triggerOutputForOutputRow:options:
flush
shutdown
startUp
initWithCloudDatabase:configuration:state:
retryCloudKitOperation:afterError:retryBlock:
notifyDelegateOfError:forOperation:
startupWithModelContainer:error:
setModelContainer:
isInternalModel:
handleUpdatedInternalModels:
handleDeletion
cloudDatabase
setCloudDatabase:
delegate
setDelegate:
configuration
localZone
setLocalZone:
database
stateZone
setStateZone:
stateModelID
setZoneID:
modelClassToRequiresPostProcessingMap
inProgressPushFuturesByOutputBlockRow
propertyLock
deviceIdentifier
shutdownFuture
setShutdownFuture:
destroyFuture
setDestroyFuture:
rebuilder
setRebuilder:
recordOperationQueue
shareOperationQueue
queuedCloudPullFuture
setQueuedCloudPullFuture:
queuedFetchRecordsContexts
setQueuedFetchRecordsContexts:
shareModel
setShareModel:
shareParticipantModelsByClientIdentifier
modelContainer
defaultDesiredKeys
setDefaultDesiredKeys:
futureWithBlock:scheduler:
globalAsyncScheduler
waitUntilAllOperationsAreFinished
operationQueue
finishWithResult:error:
chainFutures:
lazyFutureWithBlock:scheduler:
cloudDatabase:encounteredError:withOperation:onZone:
flatMap:
recoverIgnoringError
setMaxConcurrentOperationCount:
strongToStrongObjectsMapTable
boolValue
T@"CKRecord",R,N,V_client
T@"CKRecord",R,N,V_server
T@"CKRecord",R,N,V_ancestor
_client
_server
_ancestor
initWithError:
initWithClientRecord:serverRecord:ancestorRecord:
client
server
ancestor
userInfo
T@"NSSet",R,N,V_updated
T@"NSSet",R,N,V_deleted
T@"NSDictionary",R,N,V_partialErrors
T@"NSDictionary",R,N,V_conflicts
T@"NSError",R,N,V_error
TB,R,N,V_fatalError
_fatalError
_updated
_deleted
_partialErrors
_conflicts
initWithUpdated:deleted:conflicts:partialErrors:fatalError:error:
initWithUpdated:deleted:conflicts:error:
updated
deleted
partialErrors
conflicts
fatalError
code
pushResultByMergingPushResult:withPushResult:
setByAddingObjectsFromSet:
futureWithResult:
markWithFormat:
initWithRecordsToSave:recordIDsToDelete:
setConfiguration:
setSavePolicy:
setMarkAsParticipantNeedsNewInvitationToken:
domain
setPerRecordCompletionBlock:
markWithReason:
setModifyRecordsCompletionBlock:
operationID
subarrayWithRange:
combineAllFutures:ignoringErrors:scheduler:
firstObject
lastObject
errorOnlyCompletionHandlerAdapter
addFailureBlock:
pushRecordsToUpdate:recordIDsToRemove:configuration:rollbackEnabled:needsNewInvitationToken:
pushRecordsToUpdate:recordIDsToRemove:configuration:rollbackEnabled:
manateeContainer
TB,GisManateeContainer,V_manateeContainer
T@"CKOperationConfiguration",C,V_defaultOperationConfiguration
T@"NSString",C,V_sourceApplicationBundleIdentifier
T@"HMFScheduler",&,N,V_apsRegistrationScheduler
TB,N,V_registerForDBNotifications
T@"CKContainerID",R,C,V_containerID
_manateeContainer
_registerForDBNotifications
_containerID
_sourceApplicationBundleIdentifier
_defaultOperationConfiguration
_apsRegistrationScheduler
mutableCopyWithZone:
initWithContainerID:
apsRegistrationScheduler
containerID
sourceApplicationBundleIdentifier
setSourceApplicationBundleIdentifier:
isManateeContainer
setManateeContainer:
defaultOperationConfiguration
setDefaultOperationConfiguration:
registerForDBNotifications
setRegisterForDBNotifications:
setApsRegistrationScheduler:
mainScheduler
T@"NSString",C,D
TB,D,GisManateeContainer
T@"CKOperationConfiguration",C,D
T@"HMFScheduler",&,D,N
TB,D,N
setAutomaticallyRetryNetworkFailures:
setDiscretionaryNetworkBehavior:
T@"HMBModel",R,V_model
T@"HMBProcessingOptions",R,V_options
T@"NAFuture",R,V_mirrorOutputFuture
_mirrorOutputFuture
initWithModel:options:mirrorOutputFuture:
mirrorOutputFuture
alloc
T@"HMBSQLStatement",R,N,V_deleteAll
T@"HMBSQLStatement",R,N,V_updateRecord
T@"HMBSQLStatement",R,N,V_deleteRecord
T@"NSHashTable",R,N,V_userQueries
TB,N,V_finalized
T@"HMBLocalSQLContext",R,W,N,V_context
T#,R,N,V_modelClass
T@"NSArray",R,N,V_columnFields
T@"NSArray",R,N,V_columnNames
T@"HMBSQLQueryStatement",R,N,V_selectAll
T@"NSString",R,N,V_dropTableSQL
_finalized
_modelClass
_columnFields
_columnNames
_selectAll
_dropTableSQL
_deleteAll
_updateRecord
_deleteRecord
_userQueries
initWithContext:queryModel:prepareOnly:
performQueryOn:properties:filter:
_deleteQueryForRecordRow:error:
_deleteAllQueriesForZoneRow:error:
buildQueriableFieldsForModel:
_updateQueryForZoneRow:recordRow:encodedColumns:error:
modelClass
columnFields
columnNames
selectAll
dropTableSQL
deleteAll
updateRecord
deleteRecord
userQueries
finalized
setFinalized:
removeAllObjects
null
removeObjectForKey:
hasPrefix:
na_setByRemovingObjectsFromSet:
allKeys
componentsJoinedByString:
arrayWithArray:
minusSet:
hashTableWithOptions:
T@"NSHashTable",R,N,V_observersForAllModels
T@"NSMutableDictionary",R,N,V_modelObserversByModelID
T@"NSHashTable",R,N,V_mirrorOutputObservers
T@"HMBLocalSQLContext",R,N,V_sql
TB,N,V_hasStartedUp
T@"HMBLocalDatabase",W,N,V_localDatabase
T@"HMBModelContainer",R,N,V_modelContainer
T@"HMBLocalZoneConfiguration",R,N,V_configuration
T@"<HMBLocalZoneID>",R,N,V_zoneID
T@"<HMBMirrorProtocol>",R,N,V_mirror
T@"<HMBLocalZoneDelegate>",W,N,V_delegate
_hasStartedUp
_localDatabase
_mirror
_observersForAllModels
_modelObserversByModelID
_mirrorOutputObservers
_sql
initWithLocalDatabase:zoneID:zoneRow:configuration:mirror:
addObserverForAllModels:
addObserver:forModelWithID:
removeObserverForAllModels:
removeObserver:forModelWithID:
externalDataForModelID:error:
externalDataForExternalID:error:
externalIDForModelID:error:
modelIDForExternalID:error:
setExternalData:forModelID:
setExternalData:forExternalID:
destroyWithError:
addModels:andRemoveModelIDs:options:
updateModels:andRemoveModelIDs:options:
createModels:options:
addModels:options:
updateModels:options:
removeModelIDs:options:
removeModelsWithParentModelID:options:
removeModelsAndDescendantModelsWithIDs:depth:options:
removeAllModelsOfTypes:options:
createLocalInputWithError:
shouldLogPrivateInformation
localDatabase
setLocalDatabase:
mirror
observersForAllModels
modelObserversByModelID
mirrorOutputObservers
hasStartedUp
setHasStartedUp:
lazyFutureWithBlock:
errorWithDomain:code:userInfo:
addOperationWithBlock:
setObject:forKeyedSubscript:
removeObject:
weakObjectsHashTable
T@"NSString",R,N,V_message
TQ,R,N,V_rebuildState
Tq,R,N,V_keyStatus
_keyStatus
_message
_rebuildState
hmbDecodeData:fromStorageLocation:error:
hmbEncodeForStorageLocation:error:
initWithState:message:
message
rebuildState
keyStatusString:
rebuilderStateString:
hmf_stringForKey:
TQ,R,N,V_returning
Ti,R,N,V_modelTypeBindOffset
_modelTypeBindOffset
_returning
initWithLocalZone:zoneRow:modelType:returning:
returning
modelTypeBindOffset
migrateUnsupportedModels
initWithRecordName:zoneID:
recordIDForModel:
initWithRecordType:recordID:
populateManateeCloudRecord:withModel:encodingContext:error:
recordType
encodeManateeCloudModel:existingRecord:encodingContext:error:
decodeManateeCloudFromRecord:externalRecordFields:source:error:
T@"NSData",R,N
T@"NSString",R,N,V_name
T@"NSArray",R,N
_name
T@"NSString",R,N
name
labels
initWithName:
dataUsingEncoding:
base64EncodedStringWithOptions:
TB,R,N
T@"NSSet",R,N
T@"NSUUID",R,N
T@"NSDictionary",R,N
T@"NSSet",R,C,N
T@"HMFVersion",R,N
T#,R,N
hmbSetProperty:named:
hmbUnsetPropertyNamed:
hmbDefaultValueForPropertyNamed:
hmbPropertyNamed:isSet:
hmbPropertyNamed:
hmbPropertyIsAvailable:
hmbPropertyWasSet:
hmbPropertyIsReadOnly:
hmbShouldLogPrivateInformation
hmbPropertyNames
hmbQueries
hmbMutableModelClassesWithQueries
hmbModelClassesWithQueries
hmbResetModelsWithQueries
hmbPrepareQueries
hmbSchemaHashRoot
hmbExcludeFromCloudStorage
hmbReadOnlyBefore
hmbGenericRepresentation
propertyDiffersFrom:to:
formattedStringForValue:
hmbExternalProperties
hmbExternalRecordFields
resolveInstanceMethod:
setValue:forKey:
setHmbReserved:
hmbReserved
hmbContainerDataVersion
T@"HMBModelContainer",W,N,V_hmbModelContainer
T@"HMFVersion",&,N,V_hmbDataVersion
T@"NSUUID",&,N,V_hmbModelID
T@"NSUUID",&,N,V_hmbParentModelID
T@"NSString",&,N,V_hmbType
T@"NSSet",&,N,V_hmbUnavailableProperties
T@"NSSet",&,N,V_hmbReadOnlyProperties
TQ,N,V_hmbRecordRow
T@"NSMutableDictionary",&,N,V_hmbReserved
T@"HMFVersion",&,N
TB,R,N,V_hmbIgnoreModel
_hmbIgnoreModel
_hmbReserved
_hmbModelID
_hmbParentModelID
_hmbType
_hmbDataVersion
_hmbRecordRow
_hmbUnavailableProperties
_hmbReadOnlyProperties
_hmbModelContainer
populateModelWithDictionary:fromStorageLocation:using:
hmbDataVersion
hmbAssociateWithContainer:
_validateType:error:
validateType:path:
hmbPrepareForStorageLocation:
prepareForStorageLocation:using:updatedModelIDs:error:
hmbSetProperties
hmbIsModelReadOnly
hmbIsModelGenericRepresentation
hmbValidForStorage:
hmbModelByMergingFromModel:isFromCloud:error:
hmbMergeSetPropertiesFromModel:
hmbIsDifferentFromModel:differingFields:
hmbType
setHmbMinimumSupportedVersion:
hmbMinimumSupportedVersion
hmbCanonicalType
hmbCanonicalTypeInferred
hmbSetExternalProperties
hmbSetExternalRecordFields
hmbExternallyFetched
setHmbExternallyFetched:
hmbPropertyIsExternal:
dumpDebug:
dumpDebug
hmbDescription
hmbModelID
setHmbModelID:
hmbParentModelID
setHmbParentModelID:
setHmbType:
setHmbDataVersion:
hmbRecordRow
setHmbRecordRow:
hmbUnavailableProperties
setHmbUnavailableProperties:
hmbReadOnlyProperties
setHmbReadOnlyProperties:
hmbIgnoreModel
hmbModelContainer
setHmbModelContainer:
componentsSeparatedByString:
numberWithBool:
hmf_boolForKey:
isSubclassOfClass:
na_filter:
allocWithZone:
valueForKey:
appendFormat:
string
initWithVersionString:
versionString
isLessThanOrEqualTo:
setWithCapacity:
isGreaterThan:
hmf_dictionaryForKey:
isGreaterThanOrEqualTo:
characterAtIndex:
properties
debugString:
na_dictionaryByMappingValues:
setString:
reverseObjectEnumerator
arrayWithObject:
removeObjectsForKeys:
lowercaseString
substringWithRange:
preferenceForKey:
sharedPreferences
isLessThan:
T@"CKRecordID",R,V_userRecordID
_userRecordID
initWithUserRecordID:
userRecordID
TB,N,V_readOnly
TB,N,V_createIfNeeded
_readOnly
_createIfNeeded
readOnly
setReadOnly:
createIfNeeded
setCreateIfNeeded:
T@"HMBModelContainer",&,D,N
T@"<HMBLocalZoneDelegate>",W,D,N
T@"CKStreamingAsset",&,N,V_uploadStreamingAsset
T@"CKStreamingAsset",&,N,V_downloadStreamingAsset
_uploadStreamingAsset
_downloadStreamingAsset
hmbObjectByMergingFromObject:
includeInModelEncoding
applyNativeCKValue:fromSource:associatingWith:toModel:propertyNamed:
nativeCKValueWithEncodingContext:error:
initWithUploadStreamingAsset:
initWithUploadStreamingAsset:downloadStreamingAsset:
uploadStreamingAsset
setUploadStreamingAsset:
downloadStreamingAsset
setDownloadStreamingAsset:
initWithExpectedSizeBytes:
T@"NAFuture",R,V_processingFuture
_processingFuture
initWithProcessingFuture:
processingFuture
TQ,N,V_zoneRow
T@"<HMBLocalZoneID>",&,N,V_identifier
T@"NSUUID",&,N,V_replication
_replication
initWithZoneRow:
initWithZoneRow:name:token:
setIdentifier:
setZoneRow:
replication
setReplication:
requestUUID
setRequestCompletedBlock:
peformCodeOperationWithServiceName:functionName:request:responseClass:
setCodeOperationCompletionBlock:
initWithServiceName:functionName:responseClass:
setRequest:
T@"CKRecord",&,N,V_previousSentinelRebuildRecord
T@"NSUUID",&,N,V_lastRebuildUUID
T@"HMFTimer",&,N,V_uploadMonitorWatchdogTimer
T@"HMBCloudZone",W,N,V_cloudZone
T@"NAFuture",&,N,V_rebuildCompleteFuture
T@"HMBCloudZoneRebuilderStatus",C,V_rebuilderStatus
_rebuildCompleteFuture
_previousSentinelRebuildRecord
_lastRebuildUUID
_uploadMonitorWatchdogTimer
T@"HMBCloudZoneRebuilderStatus",R,C
zoneStartUp
handleIdentityLost
handleZoneChanged
rebuildCompleteFuture
initWithCloudZone:
setRebuildCompleteFuture:
previousSentinelRebuildRecord
setPreviousSentinelRebuildRecord:
lastRebuildUUID
setLastRebuildUUID:
uploadMonitorWatchdogTimer
setUploadMonitorWatchdogTimer:
cloudDatabase:didChangeManateeKeysForZoneWithID:
setUniqueToken:
setHasCompleted:
size
hmf_errorForKey:
anyObject
isHMFError
cloudZone:didChangeRebuildStatus:
initWithFormat:arguments:
T@"NSMapTable",R,N,V_queryFieldsCache
T@"HMBLocalZone",R,W,N,V_localZone
T@"<HMBMirrorProtocol>",R,W,N,V_mirror
T@"NSMapTable",C,N,V_classToNameTransform
T@"NSMapTable",C,N,V_nameToClassTransform
T@"NSMapTable",&,N,V_objectPropertyHashLookup
T@"NSMapTable",&,N,V_classReadOnlyVersionCache
T@"NSMapTable",&,N,V_classUnavailableVersionCache
T@"HMFVersion",R,C,N,V_legacyDataVersion
T@"HMFVersion",R,C,N,V_dataVersion
_legacyDataVersion
_dataVersion
_queryFieldsCache
_classToNameTransform
_nameToClassTransform
_objectPropertyHashLookup
_classReadOnlyVersionCache
_classUnavailableVersionCache
initWithDataVersion:legacyDataVersion:
readOnlyVersionsForModelClass:
unavailableVersionsForModelClass:
bestModelEncodingForStorageLocation:
typeNameForModelClass:
modelClassForTypeName:
dataFromModel:encoding:storageLocation:updatedModelIDs:error:
modelFromDictionary:storageLocation:typeName:error:
modelFromData:encoding:storageLocation:type:error:
modelFromData:encoding:storageLocation:error:
schemaHashForModel:
updateLocalZone:
updateMirror:
_modelClassFromDictionary:typeName:error:
encodePropertyValue:forProperty:field:storageLocation:error:
decodePropertyValueFromData:forProperty:field:storageLocation:error:
legacyDataVersion
dataVersion
queryFieldsCache
classToNameTransform
setClassToNameTransform:
nameToClassTransform
setNameToClassTransform:
objectPropertyHashLookup
setObjectPropertyHashLookup:
classReadOnlyVersionCache
setClassReadOnlyVersionCache:
classUnavailableVersionCache
setClassUnavailableVersionCache:
isAtLeastVersion:
hmf_UUIDWithNamespace:data:
appendData:
sortedArrayUsingSelector:
setTypeName:forModelClass:
decodeAsNSDictionary:error:
decodeAsOPACK:error:
encodeAsNSDictionary:error:
encodeAsOPACK:error:
allowedTypes
internalAllowedTypes
initWithDomain:code:userInfo:
setByAddingObject:
setWithSet:
createMirrorInputWithError:
uniqueToken
T@"NSUUID",&,D,N
hasCompleted
sentinelUUID
T@"CKContainerID",R,N,V_containerID
Tq,R,N,V_scope
T@"NSUUID",R,N,V_modelID
_scope
_modelID
initWithContainerID:scope:
initWithContainerID:scope:name:modelID:
scope
modelID
environment
shouldUpdateClients
setShouldUpdateClients:
TB,N,V_shouldUpdateClients
_shouldUpdateClients
shouldUpdateClientsAction
participant
T@"HMBShareParticipant",&,D,N
enumerateLinesUsingBlock:
resolveConflicts:options:
_acceptInvitation:
acceptInvitation:
T@"NSOperationQueue",&,N,V_queue
T@"HMBLocalSQLContext",&,N,V_local
T@"NSMapTable",R,N,V_openZonesByZoneID
T@?,C,N,V_localZoneFactory
T@"<HMBLocalDatabaseDelegate>",W,N,V_delegate
_queue
_local
_openZonesByZoneID
_localZoneFactory
initWithDatastorePath:configuration:
initWithLocalSQLContext:configuration:
fetchZonesWithError:
openZoneWithZoneID:configuration:error:
openedZoneWithZoneID:
openZoneWithMirror:configuration:error:
openedZoneWithMirror:
removeZone:
removeLocalDataForZone:error:
handleLocalZoneShutdown:
queue
setQueue:
local
setLocal:
openZonesByZoneID
localZoneFactory
setLocalZoneFactory:
localDatabase:willRemoveZoneWithID:
strongToWeakObjectsMapTable
setName:
path
desiredKeys
setRecordChangedBlock:
setRecordWithIDWasDeletedBlock:
setRecordZoneFetchCompletionBlock:
performCloudPullWithFetchToken:options:
setFetchRecordZoneChangesCompletionBlock:
hasPerformedInitialFetch
performCloudPullWithOptions:
setDesiredKeys:
setPreviousServerChangeToken:
initWithRecordZoneIDs:configurationsByRecordZoneID:
T@"HMBLocalDatabase",R,N,V_localDatabase
T@"HMBLocalZone",R,N,V_stateZone
T@"HMBCloudDatabaseStateModel",&,N,V_privateDatabaseState
T@"HMBCloudDatabaseStateModel",&,N,V_sharedDatabaseState
T@"HMBCloudDatabaseStateModel",&,N,V_publicDatabaseState
T@"NSMutableDictionary",R,N,V_zoneStateByZoneID
T@"CKContainer",R,N,V_container
T@"HMBCloudCredentialsAvailabilityListener",R,N,V_credentialsAvailabilityListener
T@"CKDatabase",R,N,V_sharedDatabase
T@"CKDatabase",R,N,V_privateDatabase
T@"CKDatabase",R,N,V_publicDatabase
T@?,C,N,V_cloudZoneFactory
T@"NSOperationQueue",R,N,V_invitationOperationQueue
T@"NSOperationQueue",R,N,V_databaseFetchOperationQueue
T@"NAFuture",&,N,V_initialCloudSyncFuture
T@"<HMBCloudDatabaseDelegate>",W,N,V_delegate
T@"CKContainerID",R,N
T@"HMBCloudDatabaseConfiguration",R,C,N,V_configuration
_privateDatabaseState
_sharedDatabaseState
_publicDatabaseState
_zoneStateByZoneID
_credentialsAvailabilityListener
_sharedDatabase
_privateDatabase
_publicDatabase
_cloudZoneFactory
_invitationOperationQueue
_databaseFetchOperationQueue
_initialCloudSyncFuture
handler:didReceivePushForTopic:
handler:didReceiveCKNotification:
handler:didReceiveMessageWithUserInfo:
initWithLocalDatabase:stateZone:container:configuration:databaseStateModelsByScope:zoneStateModels:
initWithLocalDatabase:configuration:
performInitialCloudSync
addContainerOperation:
addDatabaseOperation:forScope:
performAdministrativeFetchForAllDatabases:
performAdministrativeFetchForDatabaseScope:withForce:
handleCreatedZoneIDs:
handleUpdatedZonesIDs:
handleRemovedZoneIDs:userInitiated:
openOrCreatePrivateZoneWithID:configuration:delegate:error:
openExistingPrivateZoneWithID:configuration:delegate:error:
openExistingSharedZoneWithID:configuration:delegate:error:
removeZoneWithID:
_retryCloudKitOperationAfterError:retryBlock:
removeStateForZoneID:
operationConfigurationWithProcessingOptions:
privateDatabaseState
setPrivateDatabaseState:
sharedDatabaseState
setSharedDatabaseState:
publicDatabaseState
setPublicDatabaseState:
zoneStateByZoneID
container
credentialsAvailabilityListener
sharedDatabase
privateDatabase
publicDatabase
cloudZoneFactory
setCloudZoneFactory:
invitationOperationQueue
databaseFetchOperationQueue
initialCloudSyncFuture
setInitialCloudSyncFuture:
cloudDatabase:didReceiveMessageWithUserInfo:
recordZoneID
databaseScope
setAllowsCellularAccess:
cloudDatabase:encounteredError:withOperation:onContainer:
immediateScheduler
cloudDatabase:willRemoveZoneWithID:
cloudDatabase:didRemoveZoneWithID:
integerValue
numberWithInteger:
cloudDatabase:didCreateZoneWithID:
setLastAdministrativeFetch:
ownerName
timeIntervalSinceNow
combineAllFutures:scheduler:
initWithSubscriptionID:
serverPreferredPushEnvironmentWithCompletionHandler:
setCloudID:
initWithContainerID:options:
setUseZoneWidePCS:
sharedCloudDatabase
privateCloudDatabase
publicCloudDatabase
extantDatabases
extantDatabasesLock
initWithOptions:capacity:
setFetchRecordZonesCompletionBlock:
setRecordZonesToSave:
setRecordZoneIDsToDelete:
setModifyRecordZonesCompletionBlock:
initWithZoneID:
fetchZonesOn:
createPrivateZoneWithID:
removePrivateZoneWithID:
fetchAllRecordZonesOperation
Ti,R,N,V_offset
T@"HMBModelField",R,N,V_modelField
_offset
_modelField
initWithName:offset:modelField:
offset
modelField
initWithLocalZone:statement:initialSequence:arguments:maximumRowsPerSelect:
bindPropertiesToStatement:arguments:zoneBindRowOffset:zoneRow:error:
Ti,R,N,V_modelClassNameOffset
T@"NSString",R,N,V_modelClassName
_modelClassNameOffset
_modelClassName
initWithLocalZone:modelClassName:
modelClassNameOffset
modelClassName
Ti,R,N,V_parentModelIDOffset
T@"NSUUID",R,N,V_parentModelID
_parentModelIDOffset
_parentModelID
initWithLocalZone:parentModelID:
parentModelIDOffset
parentModelID
initWithLocalZone:parentModelID:modelClassName:
T@"NSUUID",&,N,V_parentModelID
T@"NSMutableOrderedSet",R,N,V_modelStack
T@"NSMutableSet",R,N,V_returnedModels
_modelStack
_returnedModels
initWithLocalZone:modelID:
setParentModelID:
modelStack
returnedModels
removeObjectAtIndex:
orderedSet
T@"HMBLocalSQLQueryTableQueryAll",R,N,V_query
T@"NSArray",R,N,V_columns
T@?,R,N,V_filter
_query
_columns
_filter
initWithLocalZone:statement:columns:filter:
query
columns
filter
setRecordType:
registerSubscriptionForExternalRecordType:
unregisterSubscriptionForExternalRecordType:
initWithZoneID:subscriptionID:
T@"NSSet",R,C
T@?,R,C,V_block
T@"NAFuture",R,V_future
_block
_future
initWithBlock:
cancelWithError:
main
block
future
finish
initWithTimeout:
T@"HMBCloudZone",R,V_cloudZone
initWithCloudZone:block:
recordChangeTag
hmbIsRetryShareOperationError
hmbRetryShareOperationError
TB,R,GhmbIsRetryShareOperationError
T@"NSString",R,N,V_propertyName
T@"<HMBQueryableModelFieldCoder>",R,N,V_defaultValue
_propertyName
_defaultValue
initWithPropertyName:defaultValue:
propertyName
defaultValue
argumentWithPropertyName:
argumentWithPropertyName:defaultValue:
T@"NSString",R,N,V_sqlPredicate
T@"NSArray",R,N,V_sqlColumns
TQ,R,N,V_maximumRowsPerSelect
T@"NSNumber",R,N,V_initialSequence
T@"NSMapTable",R,N,V_preparedQueries
T#,&,N,V_modelClass
T@"NSString",R,N,V_sqlSelect
T@"NSDictionary",R,N,V_argumentFields
T@"NSDictionary",R,N,V_encodedDefaultValuesByArgumentName
_sqlPredicate
_sqlColumns
_maximumRowsPerSelect
_initialSequence
_preparedQueries
_sqlSelect
_argumentFields
_encodedDefaultValuesByArgumentName
initWithSQLPredicate:sqlColumns:initialSequence:maximumRowsPerSelect:arguments:
setModelClass:
prepareOnTable:
performQueryOn:arguments:
hasExpectedIndexes
sqlPredicate
sqlColumns
initialSequence
preparedQueries
sqlSelect
argumentFields
encodedDefaultValuesByArgumentName
weakToWeakObjectsMapTable
queryWithSQLPredicate:ascending:arguments:
T@"NSString",R,N,V_indexNameSuffix
T@"NSArray",R,N,V_indexedColumns
_indexNameSuffix
_indexedColumns
initWithSQLPredicate:sqlColumns:initialSequence:maximumRowsPerSelect:indexNameSuffix:indexedColumns:arguments:
indexName
indexNameSuffix
indexedColumns
na_allObjectsPassTest:
containsString:
na_any:
objectEnumerator
queryWithSQLPredicate:ascending:indexedProperties:arguments:
T@"NSString",R,C,V_sequenceArgumentName
_sequenceArgumentName
initWithSQLPredicate:sqlColumns:sequenceArgumentName:maximumRowsPerSelect:indexNameSuffix:indexedColumns:arguments:
sequenceArgumentName
queryWithSQLPredicate:maximumRowsReturned:indexedProperties:arguments:
queryWithSQLPredicate:sequenceArgumentName:indexedProperties:arguments:
countMatchesOn:arguments:error:
queryWithSQLPredicate:indexedProperties:arguments:
TQ,R,V_recordRow
TQ,R,V_outputBlockRow
T@"NSData",C,N,V_externalID
T@"NSData",C,N,V_externalData
initWithOutputBlockRow:recordRow:model:queryTable:externalID:externalData:
setExternalID:
setExternalData:
initWithBlockRow:options:
allMirrorOutputObservers
localZone:willPerformMirrorOutputForModel:
addMirrorOutputObserver:
removeMirrorOutputObserver:
fetchOptionsForOutputBlock:error:
fetchRecordsForOutputBlock:error:
markGroupAsSentWithOutputBlock:tuples:
removeOutputBlockWithRow:error:
T@"NSUUID",R,N,V_hmbModelID
hmbDescriptionForEncodedQueryableVariable:
hmbEncodeQueryableParameter:
hmbDecodeQueryableParameter:
initWithModelID:
associateWithContainer:
isValidForContainer:updatedModelIDs:
referencedModelFromLocalZone:error:
TQ,N,V_action
T@"CKReference",&,N,V_reference
_reference
_action
initWithModelID:action:
action
referencedModelFromCloudZone:allowExternalFetch:
reference
setReference:
setAction:
initWithRecordID:action:
referenceAction
zoneName
T@"CKUserIdentityLookupInfo",R,V_lookupInfo
T@"NSUUID",R,C,V_participantClientIdentifier
TB,V_shouldGrantWriteAccess
_shouldGrantWriteAccess
_participantClientIdentifier
_lookupInfo
initWithParticipantClientIdentifier:emailAddress:
initWithParticipantClientIdentifier:phoneNumber:
initWithParticipantClientIdentifier:cloudShareID:
initWithParticipantClientIdentifier:lookupInfo:
participantClientIdentifier
shouldGrantWriteAccess
setShouldGrantWriteAccess:
lookupInfo
initWithPhoneNumber:
initWithEmailAddress:
T@"HMBModel",R,V_previousModel
_previousModel
initWithModel:previousModel:options:mirrorOutputFuture:
previousModel
arrayByAddingObjectsFromArray:
setWithObject:
_fetchCompleteModelsWithIDs:force:
fetchCompleteModels:force:
unionSet:
fetchCompleteModelsForRecordIDs:
fetchCompleteModelWithID:
fetchCompleteModelsWithIDs:
fetchCompleteModel:force:
fetchCompleteModelForRecordID:
T@"NSData",&,N,V_currentSequenceAsData
T@"NSData",&,N,V_lastReturnedSequence
T@"NSMutableSet",&,N,V_returnedIDs
_currentSequenceAsData
_lastReturnedSequence
_returnedIDs
fetchRowFromStatement:skip:updatedSequenceColumn:error:
bindPropertiesToStatement:currentSequence:error:
initWithLocalZone:statement:initialSequence:sequenceBindOffset:arguments:maximumRowsPerSelect:
currentSequenceAsData
setCurrentSequenceAsData:
lastReturnedSequence
setLastReturnedSequence:
returnedIDs
setReturnedIDs:
T@"NSSet",R,C,V_recordIDs
_recordIDs
initWithRecordIDs:future:
recordIDs
_fetchRecordsWithRecordIDs:
setFetchRecordsCompletionBlock:
_fetchRecordsForContexts:
allValues
fetchRecordsWithRecordIDs:
na_flatMap:
fetchRecordWithRecordID:canRetry:
initWithRecordIDs:
TQ,R,N,V_pushEncoding
T@"NSData",R,N,V_pushData
T@"NSNumber",R,N,V_pushBlockRow
_pushEncoding
_pushData
_pushBlockRow
initWithRecordRow:externalID:externalData:modelID:modelEncoding:modelData:modelSchema:modelType:pushEncoding:pushData:pushBlockRow:
pushEncoding
pushData
pushBlockRow
initWithSQLContext:zoneRow:returning:
updateServerChangeToken:forDatabaseWithScope:
updateServerChangeToken:forZoneWithID:
serverChangeTokenForZoneWithID:
updateRebuildStatus:forZoneWithID:
updateNeedsZoneDeletion:forZoneWithID:
deallocForZoneWithID:
setServerChangeToken:
T@"CKRecordZoneID",R,C,V_zoneID
T@"NSData",R,N,V_token
initWithContainerID:scope:zoneID:name:modelID:
initWithContainerID:scope:zoneID:
initWithZoneName:ownerName:
fetchSubscriptionsOn:
subscriptionIDForCloudID:recordType:
subscriptionIDForZoneID:recordType:
fetchAllSubscriptionsOperation
setFetchSubscriptionCompletionBlock:
pushGroupWithBlockRow:tuples:options:activity:completionPromise:
_triggerOutputForOutputRow:options:
cloudZone:didEncounterConflicts:options:
localZone:didCompleteProcessingWithResult:
localZone:willReindexTableForModel:
localZoneWillReindex:
evaluateWithObject:
queryModelsOfType:filter:
queryModelsOfType:predicate:
queryModelsOfType:properties:filter:
fetchModels
queryModelsOfType:
queryModelsWithParentModelID:
queryModelsWithParentModelID:ofType:
queryModelsRecursivelyStartingWithModelID:
queryModelsUsingQuery:
countModelsUsingQuery:arguments:error:
rebuildIndexesIfNeeded
queryModelsUsingQuery:arguments:
stageAdditionForModel:externalID:externalData:error:
stageRemovalForModelWithExternalID:error:
commitWithOptions:error:
T@"<HMBAPSConnectionDelegate>",W
T@"NSArray",C
requestTokenForTopic:identifier:
enabledTopics
setEnabledTopics:
_apsLock
_apsConnection
_observers
connection:didReceiveToken:forTopic:identifier:
connection:didReceivePublicToken:
connection:didReceiveIncomingMessage:
initWithAPSConnection:
addObserver:forBundleIdentifier:
notificationFromRemoteNotificationDictionary:
topic
sharedHandlerForEnvironment:
initWithEnvironmentName:namedDelegatePort:queue:
initWithOwner:identifier:zoneRow:blockRow:
updateModelID:modelEncoding:modelData:
TB,V_shouldRebuildOnManateeKeyLoss
_shouldRebuildOnManateeKeyLoss
shouldRebuildOnManateeKeyLoss
setShouldRebuildOnManateeKeyLoss:
TB,D
localDatabaseShouldLogPrivateInformation:
localDatabase:detectedLocalCorruptionWithInfo:
detectedLocalCorruptionWithInfo:
handleUpdatedShareModel:
_addShareOperationAfterStartupWithName:block:
handleUpdatedShareParticipantModels:
initWithRecordZoneID:
setParticipantVisibility:
_pushUpdatedShare:
_leaveCloudShareRequestingNewInvitationToken:allowCloudPull:
_handleLeaveCloudShareErrorUsingCloudZoneRecordPushResult:
_addShareOperationWithName:block:
handleUpdatedShare:error:
na_firstObjectPassingTest:
handleUpdatedShareParticipantRecord:error:
initializeShareModels
createShareModel
leaveCloudShareRequestingNewInvitationToken:
_pushUpdatedShare:participantRecord:
_pushDeletedParticipantRecordIDs:
userIdentity
currentUserParticipant
participantWithClientIdentifier:
_fetchInvitationWithContext:usingShare:
participants
setPermission:
invitationToken
participantID
_setWriteAccessEnabled:forParticipant:usingShare:
permission
_revokeShareForParticipant:usingShare:
na_dictionaryWithKeyGenerator:
fetchOwnerParticipantCloudShareID
fetchCurrentParticipantCloudShareID
fetchCloudShareIDForShareParticipantClientIdentifier:
fetchInvitationWithContext:
setWriteAccessEnabled:forParticipant:
revokeShareForParticipant:
addParticipant:
removeParticipant:
setParticipant:
cloudZone:didRemoveParticipantWithClientIdentifier:
_createShareModel
serverChangeToken
T@"CKServerChangeToken",&,D,N
initWithColumns:
T@"NSMutableDictionary",R,N,V_mutableIndexes
T@"NSSet",R,N,V_columnNames
_mutableIndexes
initWithColumnNames:
indexes
mutableIndexes
reloadSQLQueryMetadata
verifyTables
prepareTables
TQ,R,N,V_queryRow
T@"NSData",R,N,V_queryData
_queryRow
_queryData
initWithQueryRow:data:
queryRow
queryData
T@"NSDictionary",R,N,V_tuples
_tuples
initWithRecordRow:tuples:
tuples
setUserIdentityLookupInfos:
setShareParticipantFetchedBlock:
fetchParticipantWithLookupInfo:
setFetchShareParticipantsCompletionBlock:
fetchShareMetadataForInvitation:
setShareURLs:
acceptInvitationWithShareMetadata:
setShareInvitationTokensByShareURL:
setPerShareMetadataBlock:
fetchCurrentUserRecordForDatabase:
setFetchShareMetadataCompletionBlock:
setShareMetadatas:
setPerShareCompletionBlock:
setAcceptSharesCompletionBlock:
fetchCurrentUserRecordOperation
T@"HMBLocalZone",R,V_localZone
T@"HMBLocalSQLContextInputBlock",R,V_inputBlock
_inputBlock
initWithLocalZone:inputBlock:
stageRemovalForModelWithID:error:
inputBlock
initWithModel:externalID:
_insertDeletionItemsForModelsAndDescendantModelsWithBlockRow:context:type:modelIDs:currentDepth:maximumDepth:options:error:
createOutputBlockWithError:
createInputBlockWithType:error:
insertBlockWithType:options:items:error:
insertBlockToRemoveAllModelsWithType:modelTypes:options:error:
insertBlockToRemoveChildModelsWithType:parentModelID:options:error:
insertBlockToRemoveModelsAndDescendantModelsWithType:modelIDs:depth:options:error:
fetchReadyBlocksWithType:error:
fetchItemsInBlock:error:
removeBlockWithRow:error:
externalData:
hmbSetObject:forKey:encrypted:
hmbObjectForKey:encrypted:
recordFromExternalData:error:
acceptanceStatus
hmbIsEqualToParticipant:
appendString:
initWithCapacity:
appendBytes:length:
hmbCompress
hmbUncompress
hmbIsCloudKitInternalError
hmbIsCloudKitError
doubleValue
hmbIsCKPartialFailureError
hmbCloudKitRetryDelay
hmbCKInternalError
hmbIsUnretriableCKInternalErrorCode:
_hmbIsCKErrorWithCode:
_hmbIsCKErrorOrHasPartialFailureWithCode:
hmbIsSQLiteConstraintError
hmbIsCKZoneDeletedError
hmbIsCKChangeTokenExpiredError
hmbIsCKMissingManateeIdentityError
hmbIsCKLimitExceededError
hmbIsCKManateeUnavailableError
hmbIsCKUnsyncedKeychainError
hmbIsCKNotAuthenticatedError
majorVersion
minorVersion
updateVersion
initWithMajorVersion:minorVersion:updateVersion:
hmbData
hmbVersionFromData:
initWithData:encoding:
stringWithCString:encoding:
hmbUUIDFromData:
getUUIDBytes:
dataWithBytes:length:
timeIntervalSinceReferenceDate
numberWithDouble:
dateWithTimeIntervalSinceReferenceDate:
hmbOPACKDataFromDictionaryWithError:
hmbDictionaryFromOPACKData:error:
externalID:
recordIDFromExternalID:error:
data
modifiedByDevice
initRequiringSecureCoding:
encodeSystemFieldsWithCoder:
finishEncoding
encodedData
initForReadingFromData:error:
finishDecoding
encryptedValuesByKey
Td,R
setFetchDatabaseChangesCompletionBlock:
performCloudPullForScope:
databaseStateForDatabaseScope:
initWithPreviousServerChangeToken:
setFetchAllChanges:
setRecordZoneWithIDChangedBlock:
setRecordZoneWithIDWasDeletedBlock:
T@"NSData",&,N,V_encoded
T@"HMBModel",&,N,V_model
_encoded
initWithModel:encoded:
encoded
setEncoded:
setModel:
update:remove:
objectFromData:encoding:storageLocation:recordRowID:error:
update:
remove:
Tq,V_additionConstraint
_additionConstraint
stageAdditionForModel:error:
additionConstraint
setAdditionConstraint:
_zonesWithScope:
privateZoneIDs
sharedZoneIDs
publicZoneIDs
fetchZones:
populateV4CloudRecord:withModel:metadataFieldData:startEncoding:endEncoding:error:
cloudMetadataForModel:usingEncoding:
cloudFieldForEncoding:
T^{sqlite3=},N,V_context
T@"HMFUnfairLock",&,N,V_lock
T@"NSString",&,N,V_logIdentifier
TQ,N,V_mutation
T@"NSURL",R,N,V_url
TB,R,N,V_readOnly
T@"NSOperationQueue",R,N,V_queue
_begin
_commit
_rollback
_logIdentifier
_url
_mutation
initWithURL:readOnly:
close
_finalize
initialize
prepare
migrateFromSchemaVersion:error:
updateSchemaVersionTo:error:
_prepareFrom:
sqlBlock:
sqlBlockWithActivity:block:
sqlTransaction:
sqlTransactionWithActivity:block:
begin
commit
rollback
runSQLite3:
execSQLite3:
execSQLite3:error:
runSQLite3:error:
insertSQLite3:error:
fetchSQLite3:error:block:
fetchSQLite3:limit:error:block:
fetchSQLite3One:error:block:
setLogIdentifier:
setContext:
lock
setLock:
mutation
setMutation:
valueWithPointer:
hmbErrorWithSQLite3Statement:
hmbErrorWithSQLite3Context:statement:
stringWithCapacity:
hmbDataWithSQLite3Column:column:
hmbStringWithSQLite3Column:column:
numberWithLongLong:
close:
T@"NSHashTable",R,N
T@"HMFUnfairLock",R,N
contexts
contextLock
removeDatastoreAtURL:
open:
open:readOnly:error:initializer:
open:readOnly:using:error:
absoluteURL
setInitBlock:
T@?,C,N,V_initBlock
_initBlock
initBlock
scheme
removeItemAtURL:error:
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
URLByDeletingLastPathComponent
lastPathComponent
defaultManager
hmbErrorWithSQLite3Status:
fileSystemRepresentation
hmfErrorWithCode:userInfo:
dataWithBytesNoCopy:length:freeWhenDone:
hmbDataWithSQLite3ColumnNoCopy:column:
hmbUUIDWithSQLite3Column:column:
hmbNumberWithSQLite3Column:column:
hmbErrorWithSQLite3Context:
hmbErrorWithSQLContext:
hmbErrorWithSQLContext:statement:
fetchModelWithRecordRow:error:
fetchModelWithModelID:recordRow:error:
fetchRecordRowWithModelID:returning:error:
fetchRecordRowWithExternalID:returning:error:
fetchRecordRowsWithModelIDs:error:
queryAllRowRecordsReturning:
setExternalID:externalData:forRecordRow:
removeAllRecordsWithError:
fetchModelWithModelID:error:
fetchModelWithModelID:ofType:error:
fetchModelsWithParentModelID:ofType:error:
fetchModelsWithParentModelID:error:
fetchAllModelsWithError:
fetchModelsOfType:error:
searchEntries:for:options:
searchEntries:for:
compare:options:range:
T@"NSDictionary",&,V_queryTables
T@"NSMapTable",&,V_queryContextsByClass
T@"NSMutableDictionary",&,V_queryContextsByModelType
T@"HMBSQLQueryStatement",&,N,V_selectReadyInputBlocks
T@"HMBSQLQueryStatement",&,N,V_selectReadyRollbackBlocks
T@"HMBSQLQueryStatement",&,N,V_selectAllRecordRows
T@"HMBSQLQueryStatement",&,N,V_selectAllRecordTypeRows
T@"HMBSQLQueryStatement",&,N,V_selectAllRecordParentModelIDRows
T@"HMBSQLQueryStatement",&,N,V_selectAllRecordParentModelIDTypeRows
insertStore
deleteStore
selectStore
selectStores
updateStoreReplicationData
insertBlock
selectBlock
deleteBlock
deleteBlocksStore
updateBlock
selectReadyBlocks
deleteNullBlocks
insertItem
insertDeletionItemsForRecordsOfType
insertDeletionItemsForRecordWithUUID
insertDeletionItemsForRecordsWithParentUUID
updateItem
deleteItem
deleteItemsBlock
deleteItemsStore
deleteItemStoreExternal
selectItemsBlock
selectItemsBlockLimit
deleteNullItems
deleteNullItemsType
insertRecord
updateRecordExternal
updateRecordExternalExternal
updateRecordExternalUUID
updateRecordPush
updateRecordPushUUID
updateRecordClearPushExpected
updateRecordsClearPush
updateRecordType
deleteRecordBlock
deleteRecordUUID
deleteRecordExternal
deleteRecordsStore
deleteZombieRecords
selectRecord
selectRecordUUIDExternal
selectRecordUUID
selectRecordExternal
selectRecordsPushBlock
selectRecordsParentUUID
selectRecordsParentUUIDType
selectRecordsOfType
selectRecords
insertIndexSentinel
deleteIndexSentinels
deleteIndexSentinelsStore
selectIndexSentinel
_queryTables
_queryContextsByClass
_queryContextsByModelType
_selectReadyInputBlocks
_selectReadyRollbackBlocks
_selectAllRecordRows
_selectAllRecordTypeRows
_selectAllRecordParentModelIDRows
_selectAllRecordParentModelIDTypeRows
sqlBlockWithActivity:error:block:
sqlTransactionWithActivity:error:block:
_insertZoneWithIdentification:name:error:
_deleteZoneWithRow:error:
_fetchAllZones:
_selectZoneWithRow:error:
_updateZoneWithRow:replication:error:
_insertBlockWithZoneRow:type:error:
_deleteBlockWithRow:error:
_deleteBlocksWithZoneRow:error:
_updateBlockWithRow:options:error:
_selectReadyBlocksWithZoneRow:type:error:
_selectBlockWithRow:error:
_deleteNullBlocksWithZoneRow:error:
_insertBlockWithZoneRow:type:options:items:error:
_insertItemWithZoneRow:blockRow:type:externalID:externalData:modelEncoding:modelData:error:
_insertDeletionItemsWithZoneRow:blockRow:type:modelType:error:
_insertDeletionItemWithZoneRow:blockRow:type:modelID:error:
_insertDeletionItemsWithZoneRow:blockRow:type:parentModelID:error:
_insertItemWithZoneRow:blockRow:type:modelType:error:
_updateItemWithZoneRow:blockRow:type:externalID:externalData:modelEncoding:modelData:error:
_deleteItemWithRow:error:
_deleteItemsWithBlockRow:error:
_deleteItemWithZoneRow:error:
_deleteItemWithZoneRow:type:externalID:error:
_selectItemsWithBlockRow:rowGreaterThan:limit:returning:error:
_selectItemsWithBlockRow:returning:error:
_deleteNullItemsWithZoneRow:type:error:
_deleteNullItemsWithZoneRow:error:
_insertIndexSentinelWithZoneRow:modelType:error:
_selectIndexSentinelForZoneRow:modelType:error:
_deleteIndexSentinelsWithModelType:error:
_deleteIndexSentinelsWithZoneRow:error:
flush:
queryTables
setQueryTables:
queryContextsByClass
setQueryContextsByClass:
queryContextsByModelType
setQueryContextsByModelType:
selectReadyInputBlocks
setSelectReadyInputBlocks:
selectReadyRollbackBlocks
setSelectReadyRollbackBlocks:
selectAllRecordRows
setSelectAllRecordRows:
selectAllRecordTypeRows
setSelectAllRecordTypeRows:
selectAllRecordParentModelIDRows
setSelectAllRecordParentModelIDRows:
selectAllRecordParentModelIDTypeRows
setSelectAllRecordParentModelIDTypeRows:
keyEnumerator
isSubsetOfSet:
na_arrayByFlattening
absoluteString
cStringUsingEncoding:
arrayWithObjects:
unlinkDatastoreAt:everything:
openWithURL:readOnly:error:
removeItemAtPath:error:
stringByAppendingPathComponent:
rangeAtIndex:
firstMatchInString:options:range:
contentsOfDirectoryAtPath:error:
stringByDeletingLastPathComponent
regularExpressionWithPattern:options:error:
initWithName:token:
_insertRecordWithZoneRow:externalID:externalData:modelID:parentModelID:modelType:modelEncoding:modelData:modelSchema:pushEncoding:pushData:pushBlockRow:error:
_updateRecordWithRow:externalID:externalData:error:
_updateRecordWithZoneRow:externalID:externalData:error:
_updateRecordWithZoneRow:modelID:externalData:error:
_updateRecordWithZoneRow:modelID:pushEncoding:pushData:pushBlockRow:error:
_updateRecordsClearPushWithPushBlockRow:error:
_updateRecordWithRow:modelEncoding:modelData:modelSchema:error:
_updateRecordWithRow:pushBlockRow:pushData:pushEncoding:error:
_updateRecordWithRow:modelType:modelSchema:error:
_deleteRecordWithZoneRow:modelID:error:
_deleteRecordWithZoneRow:externalID:error:
_deleteRecordWithRow:error:
_deleteRecordWithRow:expectedOutputBlockRow:error:
_clearPushForRecordRow:expectedOutputBlockRow:error:
_deleteRecordsWithZoneRow:error:
_deleteZombieRecordsWithZoneRow:error:
_selectRecordModelIDWithZoneRow:externalID:error:
_selectRecordWithZoneRow:modelID:returning:error:
_selectRecordWithRow:returning:error:
_selectRecordWithZoneRow:externalID:returning:error:
_selectRecordsWithZoneRow:parentModelID:returning:error:
_selectRecordWithZoneRow:parentModelID:modelType:returning:error:
_selectRecordsWithZoneRow:modelType:returning:error:
_selectRecordsWithZoneRow:modelType:returning:error:handler:
_selectRecordsWithZoneRow:returning:error:
_selectRecordsWithBlockRow:returning:error:
selectAllRecordsWithZoneRow:returning:
_resetOutputForRecordsWithBlockRow:error:
cloudID
T@"HMBCloudID",&,D,N
lastAdministrativeFetch
T@"NSDate",&,D,N
T@"NSSet",C,N
T@"CKDatabase",W,N,V_database
setDatabase:
distantPast
isBackingStorageEqual:
_strictlyUnarchivedObjectOfClasses:fromData:error:
T@"CKShareParticipant",R,C,V_ckShareParticipant
T@"HMBShareInvitation",C,V_pendingInvitation
T@"NSUUID",R,C,V_clientIdentifier
T@"HMBShareUserID",R,C
_clientIdentifier
_ckShareParticipant
_pendingInvitation
initWithCKShareParticipant:clientIdentifier:
cloudShareID
hasWriteAccess
hasAccepted
clientIdentifier
ckShareParticipant
pendingInvitation
setPendingInvitation:
optional
TB,N,GisOptional,V_optional
TQ,N,V_loggingVisibility
T@,&,N,V_defaultValue
T@"HMFVersion",C,N,V_readonlyVersion
T@"HMFVersion",C,N,V_unavailableVersion
T@"NSString",&,N,V_externalRecordField
TB,N,V_encrypted
TB,N,V_excludeFromCloudStorage
TB,N,V_conformsToHMBModelNativeCKWrapper
T@?,C,N,V_encodeBlock
T@?,C,N,V_decodeBlock
T@?,C,N,V_descriptionBlock
T#,R,N,V_classObj
_encrypted
_excludeFromCloudStorage
_optional
_conformsToHMBModelNativeCKWrapper
_classObj
_externalRecordField
_loggingVisibility
_readonlyVersion
_unavailableVersion
_encodeBlock
_decodeBlock
_descriptionBlock
initWithClass:
initWithClass:options:
setDefaultValue:
encodeQueryableValue:
decodeQueryableValue:
descriptionForEncodedQueryableValue:
classObj
encrypted
setEncrypted:
externalRecordField
setExternalRecordField:
excludeFromCloudStorage
setExcludeFromCloudStorage:
isOptional
setOptional:
loggingVisibility
setLoggingVisibility:
readonlyVersion
setReadonlyVersion:
unavailableVersion
setUnavailableVersion:
conformsToHMBModelNativeCKWrapper
setConformsToHMBModelNativeCKWrapper:
encodeBlock
setEncodeBlock:
decodeBlock
setDecodeBlock:
descriptionBlock
setDescriptionBlock:
TB,D,N,GisOptional
TQ,D,N
T@,&,D,N
T@"HMFVersion",C,D,N
applyTo:
fieldWithClass:
optionalFieldWithClass:
fieldWithClass:options:
optionalFieldWithClass:options:
deprecatedField
T@"NSString",R,N,V_fieldName
TB,R,N,V_encrypted
_fieldName
initWithExternalRecordField:encrypted:
fieldName
externalRecordField:
encryptedExternalRecordField:
queryableField
queryableFieldWithEncodeBlock:decodeBlock:
queryableFieldWithEncodeBlock:decodeBlock:descriptionBlock:
initWithEncodingBlock:decodingBlock:descriptionBlock:
T@?,C,N,V_encodingBlock
T@?,C,N,V_decodingBlock
_encodingBlock
_decodingBlock
encodingBlock
setEncodingBlock:
decodingBlock
setDecodingBlock:
registerSubscriptionForExternalRecordType:databaseState:
registerPrivateSubscriptionForExternalRecordType:
registerSharedSubscriptionForExternalRecordType:
unregisterPrivateSubscriptionForExternalRecordType:
unregisterSharedSubscriptionForExternalRecordType:
setSubscriptionsToSave:
setSubscriptionIDsToDelete:
setModifySubscriptionsCompletionBlock:
subscriptionID
pushSubscriptionsForDatabase:subscriptionsToSave:subscriptionIDsToRemove:
registerSubscription:forZoneWithID:
unregisterSubscription:forZoneWithID:
subscriptionsForZoneWithID:
unregisterPrivateSubscriptionForSubscriptionID:
unregisterSharedSubscriptionForSubscriptionID:
registerPrivateSubscription:
migrateToSchema01WithError:
@"NSString"
@"NSDictionary"
@"NSUUID"
@"HMFActivity"
B16@0:8
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
v24@0:8@16
@24@0:8@16
@16@0:8
B24@0:8@16
Q16@0:8
@?16@0:8
v24@0:8@?16
v20@0:8B16
q16@0:8
v24@0:8q16
v24@0:8Q16
v16@0:8
@"HMBProcessingOptions"
@"NSArray"
@"NAFuture"
@40@0:8@16@24@32
i16@0:8
@"HMBSQLContext"
^{sqlite3_stmt=}
@40@0:8@16^{sqlite3_stmt=}24@32
@32@0:8@16@24
^{sqlite3_stmt=}16@0:8
v24@0:8^{sqlite3_stmt=}16
^{sqlite3_stmt=}32@0:8@16@24
@48@0:8@16@24Q32^@40
@48@0:8@16@24@32^@40
@"HMBCloudZone"
@"HMBCloudZoneRebuilderStatus"
@"NSError"
@"HMBSQLQueryStatement"
@"NSMutableArray"
@"NSNumber"
@40@0:8@16@24Q32
@48@0:8@16@24Q32@40
@48@0:8^{sqlite3_stmt=}16^B24^Q32^@40
@32@0:8@16^@24
B32@0:8^{sqlite3_stmt=}16^@24
v20@0:8i16
@"HMBShareInvitationContext"
@"HMBCloudZoneID"
@"NSDate"
@"NSURL"
@"CKDeviceToDeviceShareInvitationToken"
@24@0:8^{_NSZone=}16
@48@0:8@16@24@32@40
@56@0:8@16@24@32@40@48
{hmf_unfair_data_lock_s="lock"{os_unfair_lock_s="_os_unfair_lock_opaque"I}}
@"CKContainer"
@"NSNotificationCenter"
@"HMFTimer"
v24@0:8@"HMFTimer"16
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8@"Protocol"16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
@"NSString"16@0:8
@"NSObject"16@0:8
@"NSData"
@40@0:8Q16Q24@32
@44@0:8@16Q24@32B40
@32@0:8@16Q24
@48@0:8@16^{sqlite3_stmt=}24@32@40
@56@0:8Q16@24@32Q40@48
@32@0:8^{sqlite3_stmt=}16Q24
@"HMBModel"
@"HMBLocalZoneProcessModelContext"
@"HMBLocalSQLQueryTable"
@104@0:8@16@24@32@40@48Q56Q64@72@80@88@96
@24@0:8Q16
B32@0:8@16@24
@"HMBLocalSQLContext"
@56@0:8@16@24Q32Q40Q48
@"NSMutableDictionary"
@"HMBCloudDatabase"
@"<HMBCloudZoneDelegate>"
@"HMBCloudZoneConfiguration"
@"HMBLocalZone"
@"CKDatabase"
@"NSMapTable"
@"HMFUnfairLock"
@"<HMBCloudZoneRebuilder>"
@"NSOperationQueue"
@"NSMutableSet"
@"HMBCloudZoneShareModel"
@"HMBModelContainer"
v24@0:8@"HMBLocalZone"16
@"NAFuture"16@0:8
@"NAFuture"32@0:8Q16@"HMBProcessingOptions"24
@"<HMBLocalZoneID>"16@0:8
@32@0:8Q16@24
B40@0:8@16@24@?32
v32@0:8@16@24
B32@0:8@16^@24
@"CKRecord"
@"NSSet"
@60@0:8@16@24@32@40B48@52
@48@0:8@16@24@32B40B44
@44@0:8@16@24@32B40
@"CKContainerID"
@"CKOperationConfiguration"
@"HMFScheduler"
@"HMBSQLStatement"
@"NSHashTable"
@36@0:8@16#24B32
@40@0:8@16@24@?32
Q32@0:8Q16^@24
Q48@0:8Q16Q24@32^@40
@"HMBLocalDatabase"
@"HMBLocalZoneConfiguration"
@"<HMBLocalZoneID>"
@"<HMBMirrorProtocol>"
@"<HMBLocalZoneDelegate>"
@56@0:8@16@24Q32@40@48
B24@0:8^@16
@40@0:8@16Q24@32
@24@0:8^@16
@"NSData"32@0:8Q16^@24
@40@0:8@"NSData"16Q24^@32
@40@0:8@16Q24^@32
@32@0:8Q16^@24
@24@0:8q16
@48@0:8@16Q24@32Q40
B48@0:8@16@24@32^@40
@"NSData"16@0:8
@"NSArray"16@0:8
v32@0:8@16@"NSString"24
v24@0:8@"NSString"16
@24@0:8@"NSString"16
@32@0:8@"NSString"16^B24
B24@0:8@"NSString"16
@32@0:8@16^B24
@"HMFVersion"
@48@0:8Q16@24@32^@40
@36@0:8@16B24^@28
@20@0:8B16
@"CKRecordID"
@"CKStreamingAsset"
@"<CKRecordValue>"32@0:8@"HMBModelContainerEncodingContext"16^@24
v56@0:8@"<CKRecordValue>"16Q24@"HMBModelContainer"32@"HMBModel"40@"NSString"48
v56@0:8@16Q24@32@40@48
@40@0:8Q16@24@32
@48@0:8@16@24@32#40
@"HMBCloudZoneRebuilderStatus"16@0:8
@24@0:8#16
Q24@0:8Q16
#24@0:8@16
@56@0:8@16Q24Q32@40^@48
@48@0:8@16Q24@32^@40
@48@0:8@16Q24Q32^@40
#40@0:8@16@24^@32
@56@0:8@16@24@32Q40^@48
v32@0:8@16#24
@32@0:8@16q24
@48@0:8@16q24@32@40
@"<HMBLocalDatabaseDelegate>"
@40@0:8@16@24^@32
@"<HMBCloudDatabaseDelegate>"
@"HMBCloudDatabaseConfiguration"
@"HMBCloudDatabaseStateModel"
@"HMBCloudCredentialsAvailabilityListener"
v32@0:8@"HMBCloudPushHandler"16@"NSString"24
v32@0:8@"HMBCloudPushHandler"16@"CKNotification"24
v32@0:8@"HMBCloudPushHandler"16@"NSDictionary"24
@64@0:8@16@24@32@40@48@56
v32@0:8@16q24
@28@0:8q16B24
v28@0:8@16B24
B32@0:8@16@?24
@"HMBModelField"
@36@0:8@16i24@28
@56@0:8@16@24@32@40Q48
B52@0:8^{sqlite3_stmt=}16@24i32Q36^@44
@"NSMutableOrderedSet"
@"HMBLocalSQLQueryTableQueryAll"
@48@0:8@16@24@32@?40
@24@0:8@?16
@32@0:8@16@?24
@"<HMBQueryableModelFieldCoder>"
@56@0:8@16@24@32Q40@48
v24@0:8#16
@36@0:8@16B24@28
@72@0:8@16@24@32Q40@48@56@64
@44@0:8@16B24@28@36
@48@0:8@16Q24@32@40
@64@0:8Q16Q24@32@40@48@56
B32@0:8Q16^@24
@"NSData"24@0:8@"<HMBQueryableModelFieldCoder>"16
@"<HMBQueryableModelFieldCoder>"24@0:8@"NSData"16
@"NSString"24@0:8@"NSData"16
@"CKReference"
@28@0:8@16B24
@"CKUserIdentityLookupInfo"
@48@0:8^{sqlite3_stmt=}16^B24^@32^@40
B40@0:8^{sqlite3_stmt=}16@24^@32
@64@0:8@16@24@32Q40@48Q56
@104@0:8Q16@24@32@40Q48@56@64@72Q80@88@96
@40@0:8@16Q24Q32
v28@0:8B16@20
@"CKRecordZoneID"
@56@0:8@16q24@32@40@48
@40@0:8@16q24@32
v56@0:8Q16@24@32@40@48
v32@0:8@"HMBLocalZone"16@"HMBProcessingResult"24
v32@0:8@"HMBLocalZone"16@"NSString"24
@32@0:8#16@24
@32@0:8#16@?24
@40@0:8#16@24@?32
@32@0:8@16#24
v32@0:8@"NSString"16@"NSString"24
@"<HMBAPSConnectionDelegate>"16@0:8
v24@0:8@"<HMBAPSConnectionDelegate>"16
v24@0:8@"NSArray"16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"<HMBAPSConnection>"
v48@0:8@"<HMBAPSConnection>"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"<HMBAPSConnection>"16@"NSData"24
v32@0:8@"<HMBAPSConnection>"16@"APSIncomingMessage"24
v48@0:8@16@24@32@40
@48@0:8@16@24Q32Q40
@24@0:8B16B20
@28@0:8B16@20
@36@0:8B16@20@28
@"HMBLocalSQLContextInputBlock"
Q48@0:8Q16@24@32^@40
Q56@0:8Q16@24Q32@40^@48
B80@0:8Q16@24Q32@40Q48Q56@64^@72
v36@0:8@16@24B32
d16@0:8
B24@0:8q16
@56@0:8@16Q24Q32Q40^@48
B64@0:8@16@24@32Q40Q48^@56
^{sqlite3=}
q32@0:8q16^@24
B32@0:8q16^@24
@24@0:8r*16
@24@0:8^{sqlite3_stmt=}16
Q32@0:8^{sqlite3_stmt=}16^@24
B32@0:8r*16^@24
B40@0:8^{sqlite3_stmt=}16^@24@?32
B48@0:8^{sqlite3_stmt=}16Q24^@32@?40
^{sqlite3=}16@0:8
v24@0:8^{sqlite3=}16
@44@0:8@16B24^@28@?36
@44@0:8@16B24#28^@36
@28@0:8^{sqlite3_stmt=}16i24
@32@0:8@16r*24
@24@0:8^{sqlite3=}16
@32@0:8^{sqlite3=}16r*24
@20@0:8i16
@40@0:8@16^Q24^@32
@40@0:8@16#24^@32
@32@0:8#16^@24
B40@0:8@16^@24@?32
Q40@0:8@16@24^@32
B40@0:8Q16@24^@32
Q40@0:8Q16Q24^@32
@40@0:8Q16Q24^@32
Q56@0:8Q16Q24@32@40^@48
Q80@0:8Q16Q24Q32@40@48Q56@64^@72
Q56@0:8Q16Q24Q32@40^@48
B80@0:8Q16Q24Q32@40@48Q56@64^@72
B48@0:8Q16Q24@32^@40
@56@0:8Q16Q24Q32Q40^@48
B40@0:8Q16Q24^@32
@40@0:8Q16@24^@32
Q120@0:8Q16@24@32@40@48@56Q64@72@80Q88@96@104^@112
B48@0:8Q16@24@32^@40
B64@0:8Q16@24Q32@40@48^@56
B56@0:8Q16Q24@32@40^@48
B56@0:8Q16@24@32Q40^@48
@48@0:8Q16@24Q32^@40
@56@0:8Q16@24@32Q40^@48
B56@0:8Q16@24Q32^@40@?48
@32@0:8Q16Q24
@"CKShareParticipant"
@"HMBShareInvitation"
@32@0:8@?16@?24
@40@0:8@?16@?24@?32
q24@0:8^@16
