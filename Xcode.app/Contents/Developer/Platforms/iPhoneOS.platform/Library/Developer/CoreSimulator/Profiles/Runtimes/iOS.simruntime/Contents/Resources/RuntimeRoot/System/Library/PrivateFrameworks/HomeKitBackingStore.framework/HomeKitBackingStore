HMBPBO.m
HMBPBO.label
HMBPBO.enqueue
HMBPBO.mn
HMBPBO.mp
HMBPBO.qos
HMBPBO.mi
HMBPBO.r
HMBPBO.dca
HMBPBO.rmc
HMBPBO.dmc
Message Name
Message Identifier
Label
Enqueue Mirror Output
Roll Back
Disallow Cellular
Require Model Creation
Disallow Model Creation
Parent
Detail
<NO LOCK>
EXPLAIN QUERY PLAN 
@"HMBSQLStatementQueryPlanTuple"16@?0@"NSArray"8
zoneID
needsZoneCreation
needsZoneDeletion
subscriptionsData
rebuilderStatus
share
_sequence_offset
You must override %@ in a subclass
HMBUI.u
HMBUI.t
HMBUI.c
HMBUI.czi
HMBUI.dc
HMBShareInvitation
Share URL
Token
Context
Cloud Zone ID
Date Created
@"HMFTimer"24@?0d8Q16
Check manatee availability
v24@?0@"CKAccountInfo"8@"NSError"16
CloudCredentialsAvailabilityListener
Type
Options Data
<not nil>
<nil>
zoneRowBindOffset != nil
<RowItem: %lu  eid: %@  ed: %@  encoding: %lu data: %@>
model
__processRecords
delete
update/insert
v24@?0@"HMBMirrorOutputResult"8@"NSError"16
HMBLocalSQLContextInputBlock.%@
Block Row
Zone Row
%lu/%lu
HMBLocalSQLContextInputBlock
cloudDatabase
state
_database
sa00
sa01
ebl00
ebl01
parent_record
HMBCloudZone Startup Fetch
HMBCloudZone First Fetch
v24@?0@8@"NSError"16
modelContainer
HMBCloudZoneShareModel
HMBCloudZoneShareParticipantModel
HMBCloudZoneRebuilderModel
CloudZone
Zone ID
single-part push: %@
about to update: %@
about to remove: %@
v24@?0@"CKRecordID"8@"NSError"16
deferred
failed with error: %@
success
v16@?0@"NSArray"8
com.apple.willowd
containerID
Container ID
Bundle ID
Manatee Container
Default Operation Configuration
Cannot create a direct instance of %@. Use a subclass instead
options
Model
Options
Mirror Output
v32@?0@"HMBModelQuery"8Q16^B24
modelField
v32@?0@"NSString"8Q16^B24
v32@?0@8Q16^B24
self.finalized != NO
self.finalized == NO
v32@?0@"HMBSQLQueryStatement"8Q16^B24
queryable_%@
_store_id  INTEGER NOT NULL REFERENCES store_v2 (id) ON DELETE RESTRICT
_record_id INTEGER NOT NULL
%@ BLOB
DROP TABLE IF EXISTS %@;
DELETE FROM index_sentinel WHERE type = '%@';
CREATE TABLE %@ (%@, CONSTRAINT fk_%@ FOREIGN KEY (_record_id) REFERENCES record_v2 (id) ON DELETE CASCADE);
CREATE UNIQUE INDEX IF NOT EXISTS %@ ON %@ (_store_id, _record_id);
qu_%@
@16@?0@"HMBModelQuery"8
DROP INDEX %@
CREATE INDEX IF NOT EXISTS %@ ON %@ (_store_id, _record_id)
CREATE INDEX IF NOT EXISTS %@ ON %@ (%@)
?%lu
DELETE FROM %@ WHERE _store_id=?1
DELETE FROM %@ where _record_id=?1
INSERT OR REPLACE INTO %@ (_store_id, _record_id, %@) values(?1, ?2, %@)
SELECT _record_id, %@ FROM %@ WHERE _store_id = :_store_id AND _record_id > :_sequence_offset ORDER BY _record_id LIMIT (%lu)
info
Cannot update a model with a nil hmbModelID or hmbParentModelID
@16@?0#8
LocalZone
<HMBLocalZone: %@/%@>
ZCRS.m
ZCRS.se
Startup
Lost Key
Beginning Zone Recreate Delay
Wating Before Zone Recreate
Zone Recreate
Monitor Upload
State Upload
Complete
<UNKNOWN %lu>
Invalid
In Progress
Key Status
Rebuild State
Message
modelTypeBindOffset != nil
v24@?0@"HMBLocalSQLContextRowRecord"8^B16
<HMBLocalZoneIDUnshared: %@>
HMBLocalZoneIDUnshared
Record
551E3F88-0C11-4402-A486-6D1EB759AADD
shouldLogPrivateInformation
decoded
message
expecting internal storage to be a NSData, but it's a %@
container
pathStack
errorText
(%@ not a valid type within an aggregate type)
[%lu]
(key must be of string type (is %@))
hmbModelID and hmbParentModelID must be set prior to encoding
hmbDataVersion must be set prior to encoding
Cannot encode value of type %@ for property '%@' requring NSObject type
/%@ (property could not be validated): %@
v32@?0@"NSString"8@16^B24
<%@ uuid:%@ version:%@>
<UNSET>
%@/%@
<NULL>
<NSArray: %lu items>
<NSDictionary: %lu items>
<NSData: %@>
%@:%@
 (inferred)
  uuid: %@
  parent: %@
  version: %@%s
 (override)
 (default)
 (read-only)
  %@%@%@: %@
B16@?0@"NSString"8
@"NSString"16@?0@"NSString"8
%@.%@/%@
v@:@
values: (%@%@)
  version: %@
  %@ (read-only) (unsupported): %@
@"HMFVersion"24@?0@"NSString"8@"NSData"16
@"NSData"24@?0@"NSString"8@"HMFVersion"16
Property for parameter %@ was supplied as %@, but was expected to be %@.
Property for parameter %@ was supplied as %@, but was expected to be <UNKNOWN>.
HMBShareUserID.CodingKey.UserRecordID
userRecordID
HMBShareUserID
HMB.u
HMB.d
Upload Streaming Asset
Download Streaming Asset
encodingContext
<%lu: %@>
<%lu.%@>
-[HMBCloudDatabase(CKCode) peformCodeOperationWithServiceName:functionName:request:responseClass:]
v16@?0@"CKRequestInfo"8
v24@?0@"PBCodable<CKCodeOperationMessageMutation>"8@"NSError"16
Rebuilder has not been started up yet.
Not starting up as a mirror. Ignoring rebuild steps.
Received notification that zone has lost keys.
Attempting to acquire lock on zone.
Failed to find sentinel model.
Failed to monitor sentinel due to error: %@
Sentinel has been marked as complete.
No change observed in sentinel.
Change observed in sentinel %@ -> %@
v16@?0@"HMBCloudZoneRebuilderModel"8
Watchdog fired while monitoring the upload.
ZoneRebuilder
<NON-NULL>
localZone
cloudZone
Rebuild Complete Fetch.
Delaying rebuild for %lu usec
Preparing to begin lock acquisition.
Rebuild found complete at start of check lock acquire.
Continue monitoring of upload (token change %@ -> %@)
self
Unable to fetch rebuild model: %@
Zone appears removed by the user.
Failed to fetch rebuild model with non-zone related failure: %@
Lost pointer to cloudZone
Lost pointer to cloudDatabase
Acquired zone lock for rebuild.
Failed to acquire lock due to sentinel model push failure: %@
localCloudZone
operationQueue
Iteration of rows failed: %@
Failed recovery push with error: %@
Failed recovery push due to conflicts.
v24@?0@"CKRecord"8^B16
Successfully completed recovery.
Failed recovery push with error (entering back into Holdoff): %@
Going to try to rebuild again.
Waiting for a rebuild.
Came up in Manatee Key Loss. Going to try to blow things away and fix them.
Don't have keys, waiting for someone else to rebuild the zone.
Unable to push sentinel model due to some other issue. Letting startup continue normally.
Startup with missing manatee key.
Startup with completed sentinel model.
v16@?0@"CKRecord"8
4.0.0
1.0.0
[modelClass isSubclassOfClass:[HMBModel class]]
0.0.0
expecting a versioning key named %@ but one does not exist
inLocalZone
inMirror
remapped (or explicit map) is not a subclass of HMBModel (%@ is not a sub-class of HMBModel)
Cannot encode value of type %@ for property '%@' because it does not conform to HMBModelObjectCoder
Failed to encode value %@ for property '%@': %@
underlyingError
should conform to HMBModelObjectCoder (but storage class for property %@ does not)
ModelContainer
4C636B6B-9784-4D02-9E47-5A5259B3BAF2
uniqueToken
hasCompleted
Zone believed to be functional.
Lost key on shared zone.
HMBCID.s
HMBCID.c
HMBCID.n
HMBCID.m
759390E3-198F-48EB-AD00-31296DACBBA6
%@.%@.%@
Name
Model ID
participant
Conflicted record resolution
@"NAFuture"16@?0@"CKShareMetadata"8
com.apple.HomeKitBackingStore.LocalDatabase
@"HMBLocalZone"48@?0@"HMBLocalDatabase"8@"<HMBLocalZoneID>"16Q24@"HMBLocalZoneConfiguration"32@"<HMBMirrorProtocol>"40
HMBLocalDatabase
@"NAFuture"16@?0@"HMBCloudZonePullResult"8
@"NAFuture"16@?0@"HMBProcessingResult"8
%s (%@)
failed mirror input creation
v32@?0@"CKRecordID"8@"CKRecord"16@"NSError"24
v24@?0@"CKRecordID"8@"NSString"16
v44@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24B32@"NSError"36
failed (commit).
A089A5B9-6D32-4A0E-B611-0492B7D9F3D5
localDatabase
stateZone
databaseStateModelsByScope
zoneStateModels
credentialsAvailabilityListener
dataSource
_publicDatabaseState
_privateDatabaseState
_sharedDatabaseState
@"HMBCloudZone"32@?0@"HMBCloudDatabase"8@"HMBCloudZoneConfiguration"16@"HMBCloudZoneStateModel"24
configuration
v24@?0@"NSNull"8@"NSError"16
Fetch due to Subscription Push
v24@?0@"NSNumber"8^B16
Database APS Notification
Record Zone APS Notification
updating zone: %@
CloudDatabase
Container
v24@?0@"NSString"8@"NSError"16
DBChangeSubscription
v24@?0@"NSArray"8@"NSError"16
v32@?0@"HMBCloudZoneID"8@"HMBCloudZoneStateModel"16^B24
v24@?0@"HMBCloudZoneID"8^B16
__administrativeFetch_block_invoke
starting process of results.
v16@?0@"NSSet"8
__fetchAllCloudZones
v32@?0@"CKRecordZoneID"8@"NSError"16^B24
@"HMBCloudZoneID"16@?0@"CKRecordZoneID"8
__modifyRecordZoneOperation
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
_store_id
_model_type
<HMBQueryEncoder: %@ / %lu %@>
modelClassNameOffset != nil
_parent_uuid
parentModelIDOffset != nil
parentModelIDOffset
_type
modelClassNameOffset
v32@?0@"HMBLocalZoneQueryResultColumnTuple"8Q16^B24
v16@?0@8
operation.future
HMBShareOperationErrorDomain
Share Operation Retry
HMBShareOperation
self.modelClass == modelClass
SELECT %@ FROM queryable_%@ %@
Failed to prepare statement: %@
The query statement's SQL contains an argument named '%@' which does not exist as an argument in the query's argument dictionary: %@
The query statement's SQL contains an argument for a property named '%@' which does not exist as a property on %@: %@
v32@?0@"NSString"8@"NSNumber"16^B24
The query's argument dictionary contains an argument named '%@' which does not exist as an argument in the query statement's SQL: %@
v32@?0@"NSString"8@"HMBModelQueryArgument"16^B24
<HMBModelUnindexedQuery class: %@ query: '%@'>
Unknown
HMBSQLStatement.explainStatements
AND _record_id > :_sequence_offset ORDER BY _record_id ASC
AND _record_id < :_sequence_offset ORDER BY _record_id DESC
WHERE %@ AND _store_id = :_store_id %@ LIMIT (%lu)
_record_id
statement
indexedColumns
qi_%@_%@
INDEX %@
B16@?0@"HMBSQLStatementQueryPlanTuple"8
v32@?0@"HMBSQLStatementQueryPlanTuple"8Q16^B24
hasAnyStatements
WHERE _store_id = :_store_id AND %@
sequenceArgument
[sequenceArgument.propertyName isEqualToString:indexedProperties.lastObject]
WHERE _store_id = :_store_id AND %@ LIMIT (%lu)
maximumRowsReturned
qf_%@_%@
WHERE _store_id = :_store_id AND %@ LIMIT (1)
count('X')
encodedArgumentValueOrNull
argumentField
Output Block Row
Record Row
Query Table
External ID
External Data
<HMBLocalZoneOutputRecords: %lu options: %@>
v32@?0@"HMBLocalSQLContextRowRecord"8Q16^B24
HMB.m
<MALFORMED UUID: %@>
HMB.a
HMB.r
Reference
Action
cloudZoneEncodingContext
validate
none
<unknown %lu>
recordID
Record ID
Client Record
Server Record
Ancestor Record
HMBUIC.pci
HMBUIC.sgwa
HMBUIC.li
User Client Identifier
Should Grant Write Access
Lookup Info
previousModel
Previous Model
modelID
@"NAFuture"16@?0@"NSSet"8
modelIDs
models
recordIDs
v32@?0@"NSNumber"8@16^B24
@"NSSet"16@?0@"HMBCloudZoneFetchRecordsContext"8
@"CKRecord"16@?0@"CKRecordID"8
@"NAFuture"16@?0@"NSDictionary"8
__fetchRecordsWithRecordIDs
succeeded
Model Encoding
Model Data
Model Schema
Model Type
Push Encoding
Push Data
Push Block Row
Updating rebuild state for zone %@: %@
C8AE15D1-FA59-4811-8437-6F8BE2815E1E
FDB10518-1C8B-440B-837E-489902B4E477
E0AF74A3-368B-4E7B-B4B8-131073EAA5A9
HMBCZID.z
containerID != nil
zoneID != nil
scope != 0
name != nil
modelID != nil
[zoneID.ownerName isEqualToString:CKCurrentUserDefaultName] == NO
%@.%@.%@/%@
DBSubscription_%@.%@%@
ZoneSubscription_%@.%@.%@%@
__fetchSubscriptions
cloud push chunk failed: %@
updating record %@
push mark as completed failed: %@
Post-process: %@
v16@?0@"HMBProcessingResult"8
v16@?0@"HMBCloudZoneRecordPushResult"8
v32@?0@"NSString"8@"HMBModelField"16^B24
v24@?0@"HMBCloudZonePushResult"8@"NSError"16
__performCloudPush
Q16@?0@"NSDictionary"8
table
tableContext == self.sql
v24@?0@"HMBModel"8^B16
com.apple.homed.aps
com.apple.icloud-container.
v16@?0@"<HMBCloudPushObserver>"8
CloudPushHandler
HMBLocalSQLContextOutputBlock.%@
committing block.
HMBLocalSQLContextOutputBlock
Rebuild
updatedRecords
deletedRecordIDs
conflicts
@"NSString"16@?0@"CKShareParticipant"8
Create Share Model
@"NAFuture"16@?0@"CKShare"8
@"NAFuture"8@?0
Leave Cloud Share
Full re-fetch for missing share model
@"NAFuture"16@?0@"NSNull"8
@"NAFuture"16@?0@"HMBCloudZoneRecordPushResult"8
B16@?0@"CKRecord"8
Fetch Owner Participant Cloud Share ID
Fetch Current Participant Cloud Share ID
Fetch Cloud Share ID For Client Identifier
Fetch Invitation
@"NAFuture"16@?0@"CKShareParticipant"8
B16@?0@"CKShareParticipant"8
Set Write Access Enabled
Revoke Share
@"NSUUID"16@?0@"HMBCloudZoneShareModel"8
v24@?0@"HMBCloudZoneShareParticipantModel"8^B16
@"HMBShareParticipant"16@?0@"HMBCloudZoneShareParticipantModel"8
Delete extraneous participant models
serverChangeToken
CONSTRAINT fk_queryable_
FOREIGN KEY (_record_id) REFERENCES record_v2 (id) ON DELETE CASCADE
[%@]
<%@, %@>
v32@?0@"NSString"8@"HMBLocalSQLContextQueryIndex"16^B24
v32@?0@"NSString"8@"HMBLocalSQLContextQueryTable"16^B24
v24@?0#8^B16
v24@?0@"NSString"8^B16
SELECT master.tbl_name, master.name, index_info.seqno, index_info.name FROM sqlite_master AS master, PRAGMA_INDEX_INFO(master.name) AS index_info WHERE master.type = 'index' AND master.tbl_name like 'queryable_%' ORDER BY master.tbl_name, master.name, index_info.seqno
SELECT master.name, table_info.name, table_info.type, master.sql FROM sqlite_master AS master, PRAGMA_TABLE_XINFO(master.name) AS table_info WHERE master.name LIKE 'queryable%' ORDER BY master.name, table_info.name
thisTable
thisColumn
thisType
BLOB
v32@?0@"NSArray"8Q16^B24
@24@?0@"NSString"8@"NSSet"16
thisIndex
columnSequence != nil
columnName != nil
v32@?0@"NSString"8@"NSArray"16^B24
v32@?0@"NSString"8@"NSMutableDictionary"16^B24
__fetchParticipant
v16@?0@"CKShareParticipant"8
finished
v16@?0@"NSError"8
__fetchShareMetadata
v32@?0@"NSURL"8@"CKShareMetadata"16@"NSError"24
__acceptInvitation
v32@?0@"CKShareMetadata"8@"CKShare"16@"NSError"24
__fetchUserRecord
v32@?0@"CKRecord"8@"CKRecordID"16@"NSError"24
v24@?0@"NSDictionary"8@"NSError"16
inputBlock
HMBLocalZoneInput
%@/%lu
Zone Name
@"NSUUID"16@?0@"HMBLocalSQLContextRowRecord"8
%@.%@
%@/%@/%@/%@/%@
None
DeleteSelf
Validate
<UNKNOWN: %lu>
1.2.11
<%lu bytes>
B16@?0@"NSError"8
encodedOPACK
decodedOPACK
<NULL STRING>
data
<MALFORMED NUMBER: %@>
<MALFORMED INTERVAL: %@>
@"NSString"24@?0@"<NSCopying>"8@16
%@ : %@
__performCloudPull
v16@?0@"CKRecordZoneID"8
v28@?0@"CKServerChangeToken"8B16@"NSError"20
HM.encoding
HM.device
HM.type
HM.modelID
HM.parentModelID
k%02lu
-shm
-wal
memory
_finalized
!_finalized
PRAGMA user_version = %ld;
BEGIN;
COMMIT;
ROLLBACK;
v8@?0
ReadOnly
extcode
text
statement cannot contain nameless parameters (%ld is nameless)
bind parameter %s is not of a recognized type %@ is not a (NSNull, NSData, NSString, or NSNumber)
column %ld is of SQLite3 type %ld (not recognized)
NULL SQLite3 error for context
NULL statement
NULL SQLite3 error for statement
NULL SQLite3 statement
NULL SQLite3 error for status
PRAGMA user_version;
PRAGMA journal_mode=WAL;
:memory:
PRAGMA foreign_keys = ON;
v32@?0@"NSArray"8@"<HMBSearchableEntry>"16^B24
@"NSError"16@?0@"HMBSQLContext"8
INSERT INTO store_v2 (label, identifier_data, replication_data) VALUES (?1, ?2, ?3)
DELETE FROM store_v2 WHERE id=?1;
SELECT id, label, identifier_data, replication_data FROM store_v2 WHERE id=?1;
SELECT id, label, identifier_data, replication_data FROM store_v2;
UPDATE store_v2 SET replication_data=?2 WHERE id=?1;
INSERT INTO block_v2 (store_v2_id, type) VALUES (?1, ?2);
SELECT id, type, options_data FROM block_v2 WHERE id=?1;
DELETE FROM block_v2 WHERE id=?1;
DELETE FROM block_v2 WHERE store_v2_id=?1;
UPDATE block_v2 SET options_data=?2 WHERE id=?1;
SELECT id, options_data FROM block_v2 WHERE store_v2_id=?1 AND type=?2 AND options_data IS NOT NULL ORDER BY id;
SELECT id, type, options_data FROM block_v2 WHERE store_v2_id=:_store_id AND id>:_sequence_offset AND (type=1 OR type=2) AND options_data IS NOT NULL ORDER BY id LIMIT (%ld)
SELECT id, type, options_data FROM block_v2 WHERE store_v2_id=:_store_id AND id<=:_sequence_offset AND type=3 ORDER BY id DESC LIMIT (%lu)
DELETE FROM block_v2 WHERE store_v2_id=?1 AND options_data IS NULL;
INSERT INTO transaction_v2 (store_v2_id, block_id, type, external_id, external_data, model_encoding, model_data) VALUES (?1, ?2, ?3, ?4, ?5, ?6, ?7);
INSERT INTO transaction_v2 (store_v2_id, block_id, type, external_id, model_encoding, model_data) SELECT ?1, ?2, ?3, COALESCE(external_id, randomblob(16)), 0, uuid FROM record_v2 WHERE store_v2_id = ?1 AND type = ?4 AND model_data IS NOT NULL;
INSERT INTO transaction_v2 (store_v2_id, block_id, type, external_id, model_encoding, model_data) SELECT ?1, ?2, ?3, COALESCE(external_id, randomblob(16)), 0, uuid FROM record_v2 WHERE store_v2_id = ?1 AND uuid = ?4 AND model_data IS NOT NULL;
INSERT INTO transaction_v2 (store_v2_id, block_id, type, external_id, model_encoding, model_data) SELECT ?1, ?2, ?3, COALESCE(external_id, randomblob(16)), 0, uuid FROM record_v2 WHERE store_v2_id = ?1 AND parent_uuid = ?4 AND model_data IS NOT NULL;
INSERT OR REPLACE INTO transaction_v2 (store_v2_id, block_id, type, external_id, external_data, model_encoding, model_data) VALUES (?1, ?2, ?3, ?4, ?5, ?6, ?7);
DELETE FROM transaction_v2 WHERE id=?1;
DELETE FROM transaction_v2 where block_id=?1;
DELETE FROM transaction_v2 WHERE store_v2_id=?1;
DELETE FROM transaction_v2 WHERE store_v2_id=?1 AND type=?2 AND external_id=?3;
SELECT id, external_id, external_data, model_encoding, model_data FROM transaction_v2 WHERE  block_id=?1 AND id>?2 ORDER BY id LIMIT ?3;
SELECT id, external_id, external_data, model_encoding, model_data FROM transaction_v2 WHERE  block_id=?1;
DELETE FROM transaction_v2 WHERE block_id IN (SELECT id FROM block_v2 WHERE store_v2_id=?1 AND options_data IS NULL)
DELETE FROM transaction_v2 WHERE block_id IN (SELECT id FROM block_v2 WHERE store_v2_id=?1 AND type=?2 AND options_data IS NULL)
INSERT INTO record_v2                                         (store_v2_id, external_id, external_data, uuid, parent_uuid, type, model_encoding, model_data, model_schema, push_encoding, push_data, push_block_id)                                         VALUES (?1, ?2, ?3, ?4, ?5, ?6, ?7, ?8, ?9, ?10, ?11, ?12);
UPDATE record_v2 SET model_encoding=?2, model_data=?3, model_schema=?4 WHERE id=?1
UPDATE record_v2 SET external_id=?2, external_data=?3 WHERE id=?1
UPDATE record_v2 SET external_data=?3 WHERE store_v2_id=?1 AND external_id=?2
UPDATE record_v2 SET external_data=?3 WHERE store_v2_id=?1 AND uuid=?2
UPDATE record_v2 SET push_encoding = ?2, push_data = ?3, push_block_id = ?4 WHERE id = ?1;
UPDATE record_v2 SET push_encoding = ?3, push_data = ?4, push_block_id = ?5 WHERE store_v2_id = ?1 AND uuid=?2;
UPDATE record_v2 SET push_encoding = 0, push_data = NULL, push_block_id = NULL WHERE id=?1 AND push_block_id=?2;
UPDATE record_v2 SET push_encoding = 0, push_data = NULL, push_block_id = NULL WHERE push_block_id=?1
UPDATE record_v2 SET type = ?2, model_schema = ?3 WHERE id = ?1
DELETE FROM record_v2 WHERE id=?1;
DELETE FROM record_v2 WHERE id=?1 and push_block_id=?2;
DELETE FROM record_v2 WHERE store_v2_id=?1 AND uuid=?2;
DELETE FROM record_v2 WHERE store_v2_id=?1 AND external_id=?2;
DELETE FROM record_v2 WHERE store_v2_id=?1;
DELETE FROM record_v2 WHERE store_v2_id = ?1 AND (model_encoding = 0 OR model_data IS NULL) AND (push_block_id IS NULL OR push_block_id NOT IN (SELECT id FROM block_v2))
SELECT uuid FROM record_v2 WHERE store_v2_id=?1 AND external_id=?2
SELECT record_v2.id, record_v2.external_id, record_v2.external_data, record_v2.model_encoding, record_v2.model_data, record_v2.model_schema, record_v2.type, record_v2.push_encoding, record_v2.push_data, record_v2.push_block_id, record_v2.uuid FROM record_v2 WHERE push_block_id=?1
SELECT record_v2.id, record_v2.external_id, record_v2.external_data, record_v2.model_encoding, record_v2.model_data, record_v2.model_schema, record_v2.type, record_v2.push_encoding, record_v2.push_data, record_v2.push_block_id, record_v2.uuid FROM record_v2 WHERE store_v2_id=?1 and uuid=?2
SELECT record_v2.id, record_v2.external_id, record_v2.external_data, record_v2.model_encoding, record_v2.model_data, record_v2.model_schema, record_v2.type, record_v2.push_encoding, record_v2.push_data, record_v2.push_block_id, record_v2.uuid FROM record_v2 WHERE store_v2_id=?1 and external_id=?2
SELECT record_v2.id, record_v2.external_id, record_v2.external_data, record_v2.model_encoding, record_v2.model_data, record_v2.model_schema, record_v2.type, record_v2.push_encoding, record_v2.push_data, record_v2.push_block_id, record_v2.uuid FROM record_v2 WHERE store_v2_id=?1 and parent_uuid=?2
SELECT record_v2.id, record_v2.external_id, record_v2.external_data, record_v2.model_encoding, record_v2.model_data, record_v2.model_schema, record_v2.type, record_v2.push_encoding, record_v2.push_data, record_v2.push_block_id, record_v2.uuid FROM record_v2 WHERE store_v2_id=?1 and type=?2
SELECT record_v2.id, record_v2.external_id, record_v2.external_data, record_v2.model_encoding, record_v2.model_data, record_v2.model_schema, record_v2.type, record_v2.push_encoding, record_v2.push_data, record_v2.push_block_id, record_v2.uuid FROM record_v2 WHERE store_v2_id=?1 AND parent_uuid=?3 AND type=?2
SELECT record_v2.id, record_v2.external_id, record_v2.external_data, record_v2.model_encoding, record_v2.model_data, record_v2.model_schema, record_v2.type, record_v2.push_encoding, record_v2.push_data, record_v2.push_block_id, record_v2.uuid FROM record_v2 WHERE store_v2_id=?1
SELECT record_v2.id, record_v2.external_id, record_v2.external_data, record_v2.model_encoding, record_v2.model_data, record_v2.model_schema, record_v2.type, record_v2.push_encoding, record_v2.push_data, record_v2.push_block_id, record_v2.uuid FROM record_v2 WHERE id=?1
SELECT record_v2.id, record_v2.external_id, record_v2.external_data, record_v2.model_encoding, record_v2.model_data, record_v2.model_schema, record_v2.type, record_v2.push_encoding, record_v2.push_data, record_v2.push_block_id, record_v2.uuid FROM record_v2 WHERE store_v2_id=:_store_id AND id>:_sequence_offset ORDER BY id LIMIT (%lu)
SELECT record_v2.id, record_v2.external_id, record_v2.external_data, record_v2.model_encoding, record_v2.model_data, record_v2.model_schema, record_v2.type, record_v2.push_encoding, record_v2.push_data, record_v2.push_block_id, record_v2.uuid FROM record_v2 WHERE store_v2_id=:_store_id AND type=:_model_type AND id>:_sequence_offset ORDER BY id LIMIT (%lu)
SELECT record_v2.id, record_v2.external_id, record_v2.external_data, record_v2.model_encoding, record_v2.model_data, record_v2.model_schema, record_v2.type, record_v2.push_encoding, record_v2.push_data, record_v2.push_block_id, record_v2.uuid FROM record_v2 WHERE store_v2_id=:_store_id AND parent_uuid=:_parent_uuid AND id>:_sequence_offset ORDER BY id LIMIT (%lu)
SELECT record_v2.id, record_v2.external_id, record_v2.external_data, record_v2.model_encoding, record_v2.model_data, record_v2.model_schema, record_v2.type, record_v2.push_encoding, record_v2.push_data, record_v2.push_block_id, record_v2.uuid FROM record_v2 WHERE store_v2_id=:_store_id AND parent_uuid=:_parent_uuid AND type == :_type AND id>:_sequence_offset ORDER BY id LIMIT (%lu)
INSERT INTO index_sentinel (store_id, type) VALUES(?1, ?2);
DELETE FROM index_sentinel WHERE type = ?1;
DELETE FROM index_sentinel WHERE store_id = ?1;
SELECT COUNT('X') FROM index_sentinel WHERE store_id = ?1 and type = ?2;
^%@(?:|-shm|-wal)(\..*)?$
v32@?0@"NSString"8@"HMBLocalSQLQueryTable"16^B24
DELETE FROM transaction_v2
DELETE FROM record_v2
DELETE FROM block_v2
DELETE FROM index_sentinel
DELETE FROM store_v2
@"NSError"16@?0@"HMBLocalSQLContext"8
HMBLocalSQLContext
SELECT name FROM sqlite_master WHERE type = 'table' and name in ('zone_v2', 'zone_subscription_v2', 'db_subscription_v2', 'fetch_v2', 'queue_v2', 'scoreboard_v2', 'xact_v2', 'xact_block_v2')
zone_v2
zone_subscription_v2
db_subscription_v2
fetch_v2
queue_v2
scoreboard_v2
xact_v2
store_v2
block_v2
transaction_v2
record_v2
xact_block_v2
CREATE TABLE IF NOT EXISTS store_v2 (                               id                  INTEGER PRIMARY KEY AUTOINCREMENT,                label               STRING  NOT NULL,                                 identifier_data     BLOB UNIQUE NOT NULL,                             replication_data    BLOB                                              );
CREATE TABLE IF NOT EXISTS block_v2 (                               id                  INTEGER PRIMARY KEY AUTOINCREMENT,                store_v2_id         INTEGER NOT NULL CONSTRAINT fetch_store_v2_id_fkey REFERENCES store_v2 (id) ON DELETE RESTRICT,             type                INTEGER NOT NULL,                                 options_data        BLOB                                              );
CREATE TABLE IF NOT EXISTS transaction_v2 (                         id                  INTEGER PRIMARY KEY AUTOINCREMENT,                store_v2_id         INTEGER NOT NULL CONSTRAINT fetch_store_v2_id_fkey REFERENCES store_v2 (id) ON DELETE RESTRICT,             block_id            INTEGER NOT NULL CONSTRAINT transaction_v2_block_v2_id_fkey REFERENCES block_v2 (id) ON DELETE RESTRICT,             type                INTEGER NOT NULL,                                 external_id         BLOB    NOT NULL,                                 external_data       BLOB,                                             model_encoding      INTEGER NOT NULL,                                 model_data          BLOB                                              );
CREATE TABLE IF NOT EXISTS record_v2 (                              id                  INTEGER PRIMARY KEY AUTOINCREMENT,                store_v2_id         INTEGER NOT NULL CONSTRAINT record_v2_group_id_fkey REFERENCES store_v2 (id) ON DELETE RESTRICT,             uuid                BLOB    NOT NULL,                                 parent_uuid         BLOB    NOT NULL,                                 type                TEXT,                                             model_schema        BLOB,                                             external_id         BLOB,                                             external_data       BLOB,                                             model_encoding      INTEGER NOT NULL,                                 model_data          BLOB,                                             push_encoding       INTEGER NOT NULL,                                 push_data           BLOB,                                             push_block_id       INTEGER CONSTRAINT record_v2_block_v2_fkey REFERENCES block_v2 (id) ON DELETE RESTRICT             );
CREATE UNIQUE INDEX IF NOT EXISTS transaction_v2_ukey ON transaction_v2 (store_v2_id, type, external_id);
CREATE UNIQUE INDEX IF NOT EXISTS record_v2_external_store_v2_id_ukey ON record_v2 (store_v2_id, external_id);
CREATE UNIQUE INDEX IF NOT EXISTS record_v2_uuid_store_v2_id_ukey ON record_v2 (store_v2_id, uuid);
CREATE INDEX IF NOT EXISTS block_v2_store_type ON block_v2 (store_v2_id, type, id);
CREATE INDEX IF NOT EXISTS transaction_v2_block_id ON transaction_v2 (block_id, id);
CREATE INDEX IF NOT EXISTS record_v2_push_id ON record_v2 (push_block_id, id);
CREATE INDEX IF NOT EXISTS record_v2_store ON record_v2 (store_v2_id);
CREATE INDEX IF NOT EXISTS record_v2_store_uuid ON record_v2 (store_v2_id, uuid);
CREATE INDEX IF NOT EXISTS record_v2_store_parent_uuid ON record_v2 (store_v2_id, parent_uuid);
CREATE INDEX IF NOT EXISTS record_v2_store_type_parent_uuid ON record_v2 (store_v2_id, parent_uuid, type);
CREATE INDEX IF NOT EXISTS record_v2_store_external ON record_v2 (store_v2_id, external_id);
SELECT name FROM sqlite_master WHERE type = 'table'
HMBLZR.name
HMBLZR.token
HMBLocalZoneIDRow
@"NSError"16@?0^{sqlite3_stmt=}8
@"NSError"24@?0^{sqlite3_stmt=}8^B16
cloudID
lastAdministrativeFetch
HMBUI.cksp
HMBUI.ci
HMBUI.pi
CK Share Participant
Client Identifier
Pending Invitation
(self.externalRecordField != nil)
[classObj conformsToProtocol:@protocol(CKRecordValue)]
<HMBModelField class: %@
 optional: YES
 recordField: %@
 loggingVisibility: %ld
 defaultValue: %@
 readonlyVersion: %@
 unavailableVersion: %@
[value isKindOfClass:self.classObj]
self.encodeBlock
self.decodeBlock
self.descriptionBlock
@"NSData"16@?0@8
@16@?0@"NSData"8
@"NSString"16@?0@"NSData"8
default
redacted
debug
internallyRedacted
v16@?0@"NAPromise"8
@"NSString"16@?0@"CKRecordZoneSubscription"8
v16@?0@"NSNull"8
Not unregistering zone subscription %@ because it is not in our list of existing subscriptions: %@
B16@?0@"CKRecordZoneSubscription"8
zoneState
self.initialCloudSyncFuture.isFinished
B16@?0@"CKDatabaseSubscription"8
__modifySubscriptions
CREATE TABLE IF NOT EXISTS index_sentinel (                  store_id            INTEGER NOT NULL, type                TEXT NOT NULL, CONSTRAINT fk_index_sentinel FOREIGN KEY (store_id) REFERENCES store_v2 (id) ON DELETE CASCADE);
CREATE UNIQUE INDEX IF NOT EXISTS index_sentinel_unique ON index_sentinel (store_id, type);
%{public}@Deallocation called on %s without finalize.
%{public}@Unable to prepare SQL statement '%@': %@
%{public}@Prepared SQL statement: %s
%{public}@Unable to explain statement '%@': %@
%{public}@Failed to decode record from external data %@: %@
%{public}@Received -[handleZoneChangedNotification] on a HMBCloudZone without a rebuilder
%{public}@Saving updated rebuilder model: %@
%{public}@Failed to update rebuilder model: %@
%{public}@Received -[rebuild] on a HMBCloudZone without a rebuilder
%{public}@Rebuilder not allowed on zone.
%{public}@Re-Created rebuilder for zone (existed but had completed).
%{public}@Re-using rebuilder for zone.
%{public}@Created rebuilder for zone.
%{public}@Destroyed rebuilder for zone.
%{public}@Failed to decode subscriptions data %@: %@
%{public}@Failed to encode subscriptions %@: %@
%{public}@Failed to fetch additional items into query enumeration %@: %@
%{public}@Could not initialize from decoded shareURL: %@ token: %@ context: %@ cloudZoneID: %@ dateCreated: %@
%{public}@Will wait for keychain availability
%{public}@Will wait for Manatee availability
%{public}@Will reset and re-check Manatee availability
%{public}@Skipping re-check with should check: %@ manatee available future: %@
%{public}@%{public}@Fetching account info
%{public}@%{public}@Failed to fetch account info: %@
%{public}@%{public}@Fetched account info: %@
%{public}@%{public}@CloudKit account is not currently available; waiting for CKAccountChangedNotification to check again
%{public}@%{public}@Manatee is not currently available; waiting for CKAccountChangedNotification to check again
%{public}@%{public}@Account does not have valid credentials; waiting for CKAccountChangedNotification to check again
%{public}@%{public}@Manatee is available
%{public}@Handling CKAccountChangedNotification
%{public}@Handling CKIdentityUpdateNotification
%{public}@Handling keychain availability timer
%{public}@Notifying observers for model ID %@: %@
%{public}@Failed to delete null items/blocks: %@
%{public}@Rolling back block: %@
%{public}@Processing input block: %@
%{public}@Failed to delete zombie records: %@
%{public}@%{public}@Skipping mirror output push for model ID %@ and row %ld since the model is set to exclude cloud storage
%{public}@%{public}@Skipping mirror output push for updated model ID %@ and row %ld since the only set properties are excluded from cloud storage
%{public}@Mirror input external data was nil when comparing against existing external data
%{public}@Existing external data was nil when comparing against mirror input external data
%{public}@Failed to decode record from mirror input external data: %@
%{public}@Failed to decode record from existing external data: %@
%{public}@Comparing mirror input modification date %@ with existing record modification date %@
%{public}@lost self for processing block!
%{public}@%{public}@Beginning processing of block %lu
%{public}@%{public}@Failed to fetch block row %lu from %@: %@
%{public}@%{public}@Could not find block with row %lu
%{public}@%{public}@Block %lu has not been committed. Ignoring process request.
%{public}@%{public}@Failed to unarchive processing options from options data: %@
%{public}@%{public}@unable to cleanup corrupt block: %@
%{public}@%{public}@Failed to insert output block for zone row %lu: %@
%{public}@%{public}@Failed to clean up corrupt block: %@
%{public}@%{public}@Fetching objects for blockRow: %lu options: %@ lastItemRowID: %lu
%{public}@%{public}@Failed to fetch transaction entries for %lu / %@: %@
%{public}@%{public}@No more rows to process
%{public}@%{public}@Fetched %lu object(s) to process for blockRow: %lu options: %@
%{public}@%{public}@unable to determine modelID for %lu / %@: %@
%{public}@%{public}@unable to flush bogus row for %lu / %@: %@
%{public}@%{public}@unable to unarchive object for %lu / %@: %@
%{public}@%{public}@Found modelID %@ to %@ for row: %@
%{public}@%{public}@unable to find existing model with modelID %@ for %lu / %@: %@
%{public}@%{public}@Did not find existing record for modelID %@
%{public}@%{public}@Found existing record for modelID %@: %@
%{public}@%{public}@Unable to unarchive record row %lu: %@
%{public}@%{public}@Unable to remove corrupt record row %lu: %@
%{public}@%{public}@Not updating model because model creation is required: %@
%{public}@%{public}@Updating model %lu / %@ / %@
%{public}@%{public}@Unable to merge old record with new values %@ / %@: %@
%{public}@%{public}@Deleting model %lu / %@ / %@
%{public}@%{public}@Not creating model because model creation is disallowed: %@
%{public}@%{public}@Inserting model %@
%{public}@%{public}@No previous or updated value found for model with ID %@
%{public}@%{public}@Unable to encode object %@ (not attempting to push): %@
%{public}@%{public}@Unable to encode model %@: %@
%{public}@%{public}@Deleting record row: %lu %@ %@
%{public}@%{public}@Updating record row: %lu %@ %lu %@ %@ %@ %@ %@
%{public}@Received change from mirror while existing record row %lu has pending output push
%{public}@%{public}@Reseting pending output push data due to change from mirror
%{public}@%{public}@Inserting record row: %lu %@ %lu %@ %@ %@ %@ %@ %@
%{public}@%{public}@No record row to update or updated model to insert
%{public}@%{public}@unable to update / insert row for %lu / %@: %@
%{public}@%{public}@Sending deletion delegate callback for model: %@
%{public}@%{public}@Sending creation delegate callback for model: %@
%{public}@%{public}@Sending update delegate callback for model: %@
%{public}@%{public}@Unable to write rollback entries: %@
%{public}@%{public}@Failed to clean up processed block: %@
%{public}@%{public}@Sending processing complete callback with result: %@
%{public}@%{public}@Finished processing %lu row(s) for blockRow: %lu
%{public}@%{public}@Unable to encode options for output: %@
%{public}@%{public}@Unable to update block to enqueue output: %@
%{public}@%{public}@Unable to trigger output because self.mirror is nil
%{public}@%{public}@Triggering output for output block row %@ on %@
%{public}@[LocalZone] unable to cleanup rollback block: (lost self)
%{public}@%{public}@Rolling back block %@ due to push failure: %@
%{public}@%{public}@No block fetched! (no block found)
%{public}@%{public}@Rollback completed successfully for block %@.
%{public}@%{public}@Failed to get block for rollback: %@
%{public}@%{public}@Removing unused rollback block %@
%{public}@%{public}@Unable to cleanup rollback block: %@
%{public}@Unable to determine options for rollback block (%@)
%{public}@rollback options: %@
%{public}@invalidating push for block %lu
%{public}@Rollback is having issues. Expected to find a record row %lu / %@, but we didn't
%{public}@reverting record row %lu / %@ to %lu / %@
%{public}@Failed to rollback block: %@
%{public}@Failed to remove rollback block: %@
%{public}@%{public}@Creating Input Block for %@
%{public}@%{public}@Asked to add additional entries on invalid input block
%{public}@%{public}@Failed to add additional entries on input block: %@
%{public}@%{public}@Asked to update additional entries on invalid input block
%{public}@%{public}@Failed to update additional entries on input block: %@
%{public}@%{public}@Asked to commit invalid input block
%{public}@%{public}@Committing input block.
%{public}@%{public}@Failed to commit input block: %@
%{public}@%{public}@Successfully committed input block
%{public}@%{public}@Asked to abort invalid input block
%{public}@%{public}@Aborting input block
%{public}@%{public}@Failed to abort input block: %@
%{public}@%{public}@Successfully aborted input block
%{public}@Deallocating
%{public}@Received missing Manatee identity error on zone specific operation: %@
%{public}@Notifying delegate %@ for error on operation %@: %@
%{public}@Starting up with local zone: %@ configuration: %@
%{public}@Failed to start up with local zone because cloud database reference is nil
%{public}@Zone startup steps will begin after initial cloud sync future: %@
%{public}@Startup steps - enqueue pending pushes
%{public}@Successfully started up with private local zone
%{public}@Failed to start up with private local zone (will retry after delay): %@
%{public}@Retrying private cloud zone startup
%{public}@Successfully started up with public local zone
%{public}@Failed to start up with public local zone (will retry after delay): %@
%{public}@Retrying public cloud zone startup
%{public}@Starting up with model container: %@
%{public}@Successfully started up with model container
%{public}@Failed to start up with model container: %@
%{public}@Asked to handle unexpected updated model: %@
%{public}@Zone needs creation
%{public}@Destroying cloud zone: %@
%{public}@Enqueueing pending push for output blockRow: %lu
%{public}@Pushing with updates: %@ removes: %@
%{public}@%{public}@Pushing update for record: %@
%{public}@%{public}@Pushing removal for record: %@
%{public}@%{public}@Successfully saved record: %@
%{public}@%{public}@Failed to save record %@: %@
%{public}@%{public}@Successfully deleted record with ID: %@
%{public}@%{public}@Failed to delete record with ID %@: %@
%{public}@%{public}@CKModifyRecordsOperation failed: %@
%{public}@%{public}@CKModifyRecordsOperation will be retried
%{public}@%{public}@CKModifyRecordsOperation failed and cannot be retried: %@
%{public}@%{public}@CKModifyRecordsOperation succeeded
%{public}@%{public}@Starting CKModifyRecordsOperation with operationID: %@
%{public}@Cannot bifurcate, not enough items: (updates: %@, removes: %@)
%{public}@Record limit exceeded (updates: %lu, removes: %lu), bifurcating operation
%{public}@Both bifurcated pushes failed: %@, %@
%{public}@Bifurcated push succeeded, merging results
%{public}@Deallocation called on table for %@ without finalize.
%{public}@Finalized called on table %@ twice.
%{public}@finalizing table for: %@
%{public}@Creating index table for %@ model (fields: %@)
%{public}@Cleaning up sentinel table result (not fatal): %@
%{public}@Removing unused index: %@
%{public}@Unable to drop index: %@
%{public}@Creating generic index: %@
%{public}@Unable to create generic index %@: %@
%{public}@Column list for query %@ has duplicate values: %@
%{public}@Creating index: %@
%{public}@Unable to create index %@: %@
%{public}@Failed to remove sentinel table (not fatal): %@
%{public}@deallocating: %@
%{public}@Not starting up local zone that has already started up
%{public}@Starting up local zone
%{public}@Submitting models to add: %@ model IDs to remove: %@ options: %@
%{public}@Failed to archive options %@: %@
%{public}@Cannot update a model with a nil hmbModelID or hmbParentModelID: %@
%{public}@Failed to encode model %@: %@
%{public}@Submitted models with block row: %lu
%{public}@Removing models with parent model ID %@ and options %@
%{public}@Failed to encode processing options %@: %@
%{public}@Failed to stage removal for models with parent model ID %@: %@
%{public}@Removing models and descendant models with IDs: %@ depth: %lu options: %@
%{public}@Failed to stage removal for models and descendant models with IDs %@: %@
%{public}@Removing all models of types %@ and options %@
%{public}@Failed to stage removal for all models of types %@: %@
%{public}@Unable to decode model at row %lu %@: %@
%{public}@Not migrating unsupported model that has a generic representation: %@
%{public}@Updating model type to %@ and schema to %@ for previously-unsupported model: %@
%{public}@Unable to iterate through unknown models in zone: %@
%{public}@Dropping change for %@/%@ because property type %@ doesn't respond to nativeCKValueWithEncodingContext:error: but we think it conforms to HMBModelNativeCKWrapper
%{public}@Unable to encode wrapped and externally stored property %@/%@: %@
%{public}@Creating new cloud record %@ to store model %@.%@
%{public}@Updating existing cloud record %@ to store model %@.%@
%{public}@Unable to find version metadata field on record %@
%{public}@Unable to decode version metadata for record %@: %d
%{public}@Unable to determine encoding from version metadata: %@. Defaulting to %lu encoding
%{public}@Could not find data for encoding %lu in CKRecord %@
%{public}@CKRecord HMB metadata: %@
%{public}@Unable to uncompress data for %@
%{public}@Unable to decode data for %@
%{public}@Model of type %@ expected external record type %@ but cloud record has type %@
%{public}@Failed to decode value for %@ property: %@
%{public}@Unable to associate model (%@) with a nil container.
%{public}@Associating with a container with a different data version (%@ != %@).
%{public}@Cannot prepare model for container because modelID or parentModelID are missing: %@
%{public}@Cannot prepare model for container because hmbDataVersion is missing: %@
%{public}@Cannot prepare model %@ for container: %@
%{public}@Cannot prepare model for container: %@
%{public}@Model %@.%@.%@ suppressing validity check due to HMDBackingStoreModelObject backport.
%{public}@Model %@.%@.%@ is not valid for storage (modelID is not set).
%{public}@Model %@.%@.%@ is not valid for storage (parentModelID is not set).
%{public}@Model %@.%@.%@ is not valid for storage (field %@ is not set).
%{public}@Model %@ from cloud contained local only property %@, dropping
%{public}@Unable to merge %@ property of model class %@ (marked readonly for %@).
%{public}@[HMBModel hmbType] called without having an associated id<HMBModelContainer>.
%{public}@Unable to get value of property %@ from type %@ (no such property exists)
%{public}@Unable to get default value of property %@ from type %@ (no such property exists)
%{public}@Unable to determine externality of property %@ from type %@ (no such property exists)
%{public}@%@%@
%{public}@[HMBModel hmbMerge:from:] called with nil container on target (worrysome in production code).
%{public}@[HMBModel hmbMerge:from:] called with nil container on source (worrysome in production code).
%{public}@Cannot merge. This object %@ is not a sub-class of %@
%{public}@Merging two unknown model objects object using the default rules (%@ and %@)
%{public}@Merging two unknown model objects object using the default rules %@.
%{public}@Going to merge unknown (probably from future) model type %@ with %@.
%{public}@Going to merge, but things won't be better until our type flips. (%@ / %@)
%{public}@Unable to set property %@ of %@ from type %@ (no such property exists)
%{public}@Unable to set property %@ of %@ from type %@ (property is unavailable)
%{public}@Unable to set property %@ of %@ from type %@ (property is read-only)
%{public}@Unable to set property %@ of %@ from type %@ (does not match the expected type %@)
%{public}@Attempting to read property %@ on %@, unavailable in homed data version %@ (returning nil).
%{public}@Attempting to read property %@ from %@, does not appear defined.
%{public}@Attempting to write property %@ on %@, unwritable in homed data version %@.
%{public}@Asked to merge from unexpected object of class %@: %@
%{public}@Unexpectedly found %@ in CKRecord field for wrapped model value %@/%@ which we expected to be a CKStreamingAsset (ignoring).
%{public}@%{public}@CKCodeOperation finished with request UUID: %@
%{public}@%{public}@CKCodeOperation failed: %@
%{public}@%{public}@CKCodeOperation will be retried
%{public}@%{public}@CKCodeOperation succeeded
%{public}@%{public}@Starting %@ CKCodeOperation for service: %@ operationID: %@
%{public}@Lost self while starting up rebuild machine.
%{public}@Not transitioning to Lost Key state, already in an active rebuild state (%@).
%{public}@Received a request to begin rebuild but we are already in: %@.
%{public}@Fetch succeeded, but no record returned.
%{public}@Insufficient to transition out of Lost Key state.
%{public}@received notification, but failed to fetch model: %@
%{public}@Will not transition out of Lost Key state.
%{public}@Successfully fetched: %@
%{public}@Sentinel record indicates that zone is completely rebuilt.
%{public}@Sentinel record unique token did not change from %@
%{public}@Sentinel record unique token changed %@ -> %@
%{public}@Unexpectedly got a CKNotification when in state %@ (ignoring)
%{public}@Unexpectedly got a watchdog fire event in state %@
%{public}@Unexpectedly got a watchdog fire event from an unexpected timer.
%{public}@Unable to get operation queue to change state transition
%{public}@Lost self for cloud zone rebuild
%{public}@Requested state transition from %@ to %@ (finished: %@).
%{public}@Initial state transition to complete finishes waitForRebuildCompletion early.
%{public}@Attempting to transition into invalid state %@ (treating as Complete)
%{public}@Expected future to be in-progress but it's NOT!
%{public}@Notifying delegate %@ of updated rebuild status: %@
%{public}@Delegate does not respond to selector.
%{public}@Lost %@ while completing rebuild.
%{public}@Removing all records and resetting serverChangeToken.
%{public}@Unable to remove all records from local zone: %@
%{public}@Sentinel record has not mutated.
%{public}@Lost cloudDatabase for cloud zone rebuild
%{public}@Attempting to acquire lock.
%{public}@[HMBCloudZoneRebuildPrivate] lost self
%{public}@Lost %@
%{public}@Unable to create sentinel model for %@: %@
%{public}@Pushing sentinel record: %@
%{public}@Sentinel model push failed with fatal error: %@
%{public}@Sentinel record already exists on the server. Returning server version.
%{public}@Unable to find appropriate error for sentinel record push result: %@
%{public}@Unable to decode model from CK Record: %@
%{public}@Record was not expected type (got %@)
%{public}@Failed to encode sentinel model: %@
%{public}@Waiting %.2f seconds for an expected cloud push.
%{public}@Lost %@ for cloud zone rebuild
%{public}@unable to decode model from row %lu: %@
%{public}@unable to re-encode model %@ for cloud: %@
%{public}@unable to remove corrupt record: %@
%{public}@Unable to generate updated sentinel model: %@
%{public}@Unable to generate externalID from %@: %@
%{public}@Unable to generate externalData from %@: %@
%{public}@Unable to reset externalID and externalData for %lu: %@
%{public}@Starting up zone rebuilder
%{public}@Found existing sentinel model: %@
%{public}@Unable to fetch rebuild sentinel model: %@
%{public}@Successfully fetched sentinel model: %@.
%{public}@Sentinel model fetch failed: %@.
%{public}@Lost cloudZone for cloud zone rebuild
%{public}@Failed to prepare model %@: %@
%{public}@Cannot encode data from model %@ with unknown encoding: %lu
%{public}@Failed to populate model with dictionary %@: %@
%{public}@Cannot deserialize from unknown encoding: %lu
%{public}@Failed to OPACK encode dictionary %@: %@
%{public}@Failed to OPACK decode data: %@
%{public}@Result was not of class %@: %@
%{public}@Using HMBModelUnsupported because model's minimum version %@ is higher than current version: %@
%{public}@Cannot find type information in model dictionary: %@
%{public}@Unable to find model class named %@
%{public}@Unable to resolve type name to class: %@
%{public}@Unable to rebuild a shared zone.
%{public}@Informing delegate we have lost our identity.
%{public}@Successfully removed ourself from share.
%{public}@Unable to remove self from the share: %@
%{public}@Failed to create input context for conflict records: %@
%{public}@Unable to generate client externalID for conflict %@: %@
%{public}@Staging removal for record ID without a server version: %@
%{public}@Failed to stage removal for record ID %@: %@
%{public}@Unable to generate server model for conflict %@: %@
%{public}@Unable to generate server externalID for conflict %@: %@
%{public}@Unable to generate server externalData for conflict %@: %@
%{public}@Staging server version of conflicted record %@ / %@ due to conflict
%{public}@Failed to stage addition for model %@: %@
%{public}@Failed to commit conflicted record resolution: %@
%{public}@Queueing up accept for invitation %@
%{public}@Accepting invitation: %@
%{public}@Fetched share metadata: %@
%{public}@Accepted invitation with share: %@
%{public}@Adding zone state model: %@
%{public}@Unable to add zone state model: %@
%{public}@Not adding zone state model because one already exists: %@
%{public}@Unable to create our local storage: %@.
%{public}@Returning existing zone: %@
%{public}@Unable to open zone %@ (does not exist)
%{public}@Removing local zone: %@
%{public}@Removing local zone mirror: %@
%{public}@Removing local data for zone: %@
%{public}@Failed to remove local data for zone %@: %@
%{public}@Successfully removed local data for zone: %@
%{public}@Cannot set a new delegate on local zone with identifier %@ because that local zone has already been opened with a different delegate
%{public}@Performing cloud pull with token: %@ options: %@
%{public}@Coalescing cloud pull with options: %@
%{public}@Queueing up cloud pull with options: %@
%{public}@Lost localZone in __performCloudPull.
%{public}@%{public}@Failed to create a new mirror input: %@
%{public}@%{public}@Received record %@, but failed to decode: %@
%{public}@%{public}@Received record %@ with decoded model %@.%@
%{public}@%{public}@Failed to encode externalID from record %@: %@
%{public}@%{public}@Failed to encode externalData from record %@: %@
%{public}@%{public}@Failed to add model to update to block: %@
%{public}@%{public}@Received record deletion for %@/%@
%{public}@%{public}@Failed to encode externalID from recordID %@: %@
%{public}@%{public}@Failed to add model to remove to block: %@
%{public}@%{public}@Failed to fetch newest records: %@
%{public}@%{public}@Successfully fetched newest records with moreComing: %@ and serverChangeToken: %@
%{public}@%{public}@CKFetchRecordZoneChangesOperation failed: %@
%{public}@%{public}@Performing cloud pull again with nil change token due to expired change token error: %@
%{public}@%{public}@CKFetchRecordZoneChangesOperation will be retried
%{public}@%{public}@Received cloud zone deletion error: %@
%{public}@%{public}@Failed to fetch record zone changes: %@
%{public}@%{public}@Committing mirror input block
%{public}@%{public}@Failed to commit block: %@
%{public}@%{public}@Successfully committed block. Handling %lu internal model updates.
%{public}@%{public}@CKFetchRecordZoneChangesOperation succeeded
%{public}@%{public}@Starting CKFetchRecordZoneChangesOperation with token: %@ options: %@ operationID: %@
%{public}@Creating cloud database with localDatabase: %@ configuration: %@
%{public}@Failed to create state zone for database: %@
%{public}@Returning existing initial cloud sync future: %@
%{public}@Performing initial cloud sync
%{public}@Successfully performed initial cloud sync
%{public}@Failed to perform initial cloud sync (will retry after delay): %@
%{public}@Retrying initial cloud sync
%{public}@Asked to perform administrative fetch for unsupported database scope: %@
%{public}@Handling created zone ID: %@
%{public}@Normal create behavior for zone %@ suppressed due to rebuild.
%{public}@Handling updated zone ID: %@
%{public}@Got update for a zone ID %@ we don't have state for. All zone states: %@
%{public}@No open HMBCloudZone exists for zoneID %@
%{public}@Have an open HMBCloudZone for zoneID %@
%{public}@Normal update behavior for zone suppressed due to rebuild.
%{public}@Lost cloudZone reference for %@ prior to subscription initiated fetch.
%{public}@Unable to trigger cloudZone fetch on %@ due to failed startup: %@
%{public}@Handling removed zone ID: %@
%{public}@Normal remove behavior for zone %@ suppressed due to rebuild.
%{public}@Asked to open or create private zone with ID: %@
%{public}@Asked to open existing private zone with ID: %@
%{public}@Asked to open existing shared zone with ID: %@
%{public}@Failed to open existing shared zone for removal: %@
%{public}@Failed to open shared local zone for removal: %@
%{public}@Unable to remove zone with public zoneID: %@
%{public}@Received missing Manatee identity error on database specific query (this is not expected): %@
%{public}@Manatee is unavailable. Waiting for Manatee to become available before retrying
%{public}@Retrying operation that received Manatee unavailable error
%{public}@CloudKit account status is no longer authenticated. Waiting for Manatee to become available before retrying
%{public}@Retrying operation that received account not authenticated error
%{public}@Keychain is unsynced. Waiting for keychain to become available before retrying
%{public}@Retrying operation that received keychain unsynced error
%{public}@Not retrying failed CloudKit operation
%{public}@Will retry cloud operation after %.2f seconds
%{public}@Removing state for zone ID %@
%{public}@Asked to remove state for zoneID %@ that has already been removed
%{public}@Unable to determine children of zone state model %@ with ID %@: %@
%{public}@Unable to remove cloud zone state models for zone ID %@: %@
%{public}@Ignoring CKNotification for irrelevant container identifier: %@
%{public}@%{public}@Handling CKDatabaseNotification: %@
%{public}@%{public}@Handling CKRecordZoneNotification: %@
%{public}@%{public}@Starting update for zone: %@
%{public}@Received unexpected query notification: %@
%{public}@Received unknown CKNotification: %@
%{public}@Received message that did not translate to a CKNotification; deferring to delegate: %@
%{public}@Unable to load cloud database states: %@
%{public}@Created public database state model with cloudID %@: %@
%{public}@Created private database state model with cloudID %@: %@
%{public}@Created shared database state model with cloudID %@: %@
%{public}@Unable to update cloud database models: %@
%{public}@Unable to load zone model state: %@
%{public}@[HMBCloudDatabase] Failed to resolve preferred CloudKit environment with error: %@
%{public}@[HMBCloudDatabase] Lost self.
%{public}@Did not receive a preferred push environment, defaulting to %@
%{public}@Registering APS Connection for environment: %@
%{public}@Found zone ID that needs deletion: %@
%{public}@HMBCloudDatabase died before administrative fetch for %@ started
%{public}@%{public}@Starting administrative fetch for %@ with force=%@
%{public}@%{public}@Skipping administrative fetch for %@ because force=%@ and last administrative fetch was %@
%{public}@%{public}@Created pre-fetch mapping of zone state by zone ID: %@
%{public}@%{public}@HMBCloudDatabase died before administrative fetch completed
%{public}@%{public}@Processing administrative fetch
%{public}@%{public}@Zone with ID %@ was deleted
%{public}@%{public}@Updating subscriptions for zone ID %@ from %@ to %@
%{public}@%{public}@Zone with ID %@ was created
%{public}@%{public}@Unable to update zone models in local DB %@: %@
%{public}@%{public}@Unable to update database state for administrative fetch: %@
%{public}@Ignoring unexpected subscription on shared zone: %@
%{public}@Got unexpected subscription %@
%{public}@No cloud zone found with ID %@
%{public}@Creating state for cloud zone with ID %@
%{public}@Unable to save new zone to database: %@
%{public}@Cannot set a delegate on cloud zone with identifier %@ because that cloud zone has already been opened with a different delegate
%{public}@Returning existing cloud zone: %@
%{public}@Creating cloud zone with ID %@
%{public}@Failed to open local zone with ID %@ for removal: %@
%{public}@Unable to create zone with ID %@ on a non-private database.
%{public}@Creating private cloud zone with ID %@
%{public}@Zone modification finished, but had to create zone model for %@ (someone created a zone outside of HMBCloudZone startup).
%{public}@Unable to remove zone with ID %@ on a non-private database
%{public}@Removing private cloud zone with ID %@
%{public}@%{public}@CKFetchRecordZonesOperation failed: %@
%{public}@%{public}@CKFetchRecordZonesOperation will be retried
%{public}@%{public}@CKFetchRecordZonesOperation failed and cannot be retried: %@
%{public}@%{public}@CKFetchRecordZonesOperation succeeded with zones: %@
%{public}@%{public}@Starting CKFetchRecordZonesOperation for database: %@ operationID: %@
%{public}@%{public}@CKModifyRecordZonesOperation failed: %@
%{public}@%{public}@Ignoring partial error for zoneID %@: %@
%{public}@%{public}@CKModifyRecordZonesOperation will be retried
%{public}@%{public}@CKModifyRecordZonesOperation failed and cannot be retried: %@
%{public}@%{public}@CKModifyRecordZonesOperation succeeded
%{public}@%{public}@Starting CKModifyRecordZonesOperation with zoneToSave: %@ zoneIDToRemove: %@ operationID: %@
%{public}@Unknown filter result received: %lu
%{public}@Registering subscription for external record type %@
%{public}@Unregistering subscription for external record type %@
%{public}@Handling retry share operation error: %@
%{public}@Not retying share operation because no new CKShare changes were found after performing cloud pull (initialShare: %@, currentShare: %@)
%{public}@Retrying share operation after finishing cloud pull
%{public}@Canceling share operation due to failed cloud pull: %@
%{public}@Share operation failed: %{public}@
%{public}@Failed to prepare statement: %@
%{public}@The query statement's SQL contains an argument named '%@' which does not exist as an argument in the query's argument dictionary: %@
%{public}@The query statement's SQL contains an argument for a property named '%@' which does not exist as a property on %@: %@
%{public}@The query's argument dictionary contains an argument named '%@' which does not exist as an argument in the query statement's SQL: %@
%{public}@Didn't find reference to %@ in query plan for %s:
%{public}@    %lu.%lu %@
%{public}@Unable to fetch options for block at row %lu.%@: %@
%{public}@Failed to unarchive transaction options from options data: %lu.%@: %@
%{public}@Deleting block with output block row %lu because it has no corresponding records
%{public}@Failed to reset output for records with output block row %lu: %@
%{public}@Failed to delete block with output block row %lu: %@
%{public}@Unable to delete pushed record %lu: %@
%{public}@Not removing record %lu because it appears to have changed.
%{public}@Unable to clear output columns for pushed record %lu: %@
%{public}@Not clearing output columns for record %lu because it appears to have changed.
%{public}@Local zone for associated container is nil: %@
%{public}@Cannot validate reference %@ because the referenced model can't be found: %@
%{public}@Looking for referenced model %@ in localZone %@
%{public}@Error fetching model %@
%{public}@No local model for %@, fetching via CKReference %@
%{public}@Unable to find referenced model %@, no local model and no CKReference to fetch
%{public}@Unable to determine CKRecordID for model ID %@: %@
%{public}@Unable to decode CKRecordID from external ID %@: %@
%{public}@Received CKRecord with a HMBModelCloudReference field (%@/%@) where the corresponding CKRecord field is not set or not of the expected type (got %@)
%{public}@Received CKRecord with a HMBModelCloudReference field (%@/%@) where zone name for reference stored in the CKRecord field does not match the zone name in the HMBModel field (%@!=%@)
%{public}@Unexpectedly found %@ in CKRecord field for wrapped model value %@/%@ which we expected to be a CKReference (ignoring).
%{public}@Record ID does not exist on server: %@
%{public}@Server record changed error user info does not have client record: %@
%{public}@Server record changed error user info does not have server record: %@
%{public}@Server record changed error user info does not have ancestor record: %@
%{public}@Record does not exist on server: %@
%{public}@Successfully fetched complete models ID but no models were returned
%{public}@Fetching complete models with force=%@: %@
%{public}@Failed to fetch record rows for model IDs %@: %@
%{public}@Fetched %lu record rows %@ but requested %lu model IDs %@
%{public}@Trying to perform a cloud fetch for a record (%@/%@) that has not been pushed.
%{public}@Failed to decode encoded record ID %@: %@
%{public}@Successfully fetched complete models for record ID but no models were returned
%{public}@Asked to fetch an empty set of record IDs
%{public}@Failed to decode complete model for record %@: %@
%{public}@Unable to encode externalID from recordID %@: %@
%{public}@Unable to fetch modelID for externalID %@: %@
%{public}@Performing fetch for records with record IDs: %@
%{public}@Queueing fetch for records with record IDs: %@
%{public}@%{public}@Successfully fetched record with ID %@: %@
%{public}@%{public}@Failed to fetch record with ID %@: %@
%{public}@%{public}@CKFetchRecordsOperation failed: %@
%{public}@%{public}@CKFetchRecordsOperation will be retried
%{public}@%{public}@CKFetchRecordsOperation partially failed, but returning those records that were successfully fetched
%{public}@%{public}@CKFetchRecordsOperation failed and cannot be retried: %@
%{public}@%{public}@CKFetchRecordsOperation succeeded
%{public}@%{public}@Starting CKFetchRecordsOperation with record IDs: %@ operationID: %@
%{public}@Unable to update server change token for scope %ld: %@
%{public}@Cannot find zone model to update server change for with zone ID %@
%{public}@Updating server change token of %@ to %@
%{public}@Unable to update server change token for zone %@: %@
%{public}@Cannot find zone model to fetch server change for with zone ID %@
%{public}@%{public}@
%{public}@Unable to find state model for zone.
%{public}@Unable to update state model for zone: %@
%{public}@Updating needs deletion to %@ for zone with ID: %@
%{public}@Unable to find state model to update needs zone deletion for with zone ID %@
%{public}@Unable to update needs zone deletion on state model for zone: %@
%{public}@Clearing cloudZone on state for zone with ID: %@
%{public}@Unable to find state model to clear cloudZone for with zone ID %@
%{public}@%{public}@CKFetchSubscriptionsOperation failed: %@
%{public}@%{public}@CKFetchSubscriptionsOperation will be retried
%{public}@%{public}@CKFetchSubscriptionsOperation failed and cannot be retried: %@
%{public}@%{public}@CKFetchSubscriptionsOperation succeeded with subscription IDs: %@
%{public}@%{public}@Starting CKFetchSubscriptionsOperation for database: %@ operationID: %@
%{public}@%{public}@Failed to decode encoded record ID %@: %@
%{public}@%{public}@Unable to encode record for update: %@
%{public}@%{public}@Unable to encode recordID for update: %@
%{public}@%{public}@Preparing to update: %@ / %@
%{public}@%{public}@Aborting block %lu due to encoding error: %@.
%{public}@%{public}@No valid records to push; aborting
%{public}@%{public}@Abort update for block %lu failed with error: %@
%{public}@%{public}@Unable to complete push for row %lu: %@
%{public}@%{public}@Cloud push chunk failed: %@
%{public}@%{public}@Failed to encode externalID for %@: %@
%{public}@%{public}@Failed to encode externalData for %@: %@
%{public}@%{public}@Received unexpected updated record: %@
%{public}@%{public}@Queueing record for post-processing: %@
%{public}@%{public}@Unable to decode internal record %@: %@
%{public}@%{public}@Queueing internal model: %@ %@
%{public}@%{public}@Queueing model for post-processing: %@ %@
%{public}@%{public}@Internal models processed.
%{public}@%{public}@Failed to mark records as pushed: %@
%{public}@%{public}@Post-processing %lu models
%{public}@%{public}@Post-processing failed: %@
%{public}@%{public}@Post-processing succeeded
%{public}@%{public}@Nothing to post-process
%{public}@Ignoring push request for block row %lu. Appears to be in-progress.
%{public}@Records push failed immediately: %@
%{public}@Drop all cloud records requested by conflict resolution delegate callback.
%{public}@Dropping cloud push record %@ / %@ due to conflict.
%{public}@Dropping cloud push record %@ due to conflict.
%{public}@%{public}@No local zone available to perform cloud push
%{public}@%{public}@Unable to fetch options for output block row %lu: %@
%{public}@%{public}@Unable to fetch tuples for output block row %lu: %@
%{public}@%{public}@Skipping cloud push for output block row %lu because no tuples were found
%{public}@%{public}@Starting cloud push for output block row: %lu options: %@ tuples count: %lu
%{public}@Unable to determine index state of %@: %@
%{public}@Preparing to reindex table for %@
%{public}@Unable to rebuild index of %@: %@
%{public}@Have re-indexed %lu records of %@ type.
%{public}@Total of %lu rows re-indexed for %@.
%{public}@Staging addition for model: %@ externalID: %@ externalData: %@
%{public}@Staging removal for model with external ID: %@
%{public}@Creating APSConnection with environment: %@ namedDelegatePort: %@
%{public}@Adding enabled topic to APS connection: %@
%{public}@connection: %@ didReceiveToken: %@ forTopic: %@ identifier: %@
%{public}@connection: %@ didReceivePublicToken: %@
%{public}@connection: %@ didReceiveIncomingMessage: %@
%{public}@Handling incoming APS message with topic: %@ userInfo: %@
%{public}@%{public}@Creating Output Block for %@
%{public}@%{public}@Asked to add additional entries on invalid output block
%{public}@%{public}@Failed to add additional entries on output block: %@
%{public}@%{public}@Asked to commit invalid output block
%{public}@%{public}@Committing output block.
%{public}@%{public}@Failed to commit output block: %@
%{public}@%{public}@Asked to abort invalid output block
%{public}@%{public}@Aborting output block
%{public}@%{public}@Successfully aborted output block
%{public}@No delegate supplied for '- (BOOL)shouldLogPrivateInformation' returning NO.
%{public}@HMBManager detected local corruption: %@
%{public}@Found fatal partial error for recordID %@: %@
%{public}@Unable to decode share model from share %@
%{public}@Unable to decode model from share participant record %@: %@
%{public}@Decoded model was not a HMBCloudZoneShareParticipantModel: %@
%{public}@Handling updated share: %@
%{public}@Removing participant that is no longer on share: %@
%{public}@Updating CKShareParticipant on participant %@ to %@
%{public}@Failed to update/remove share models: %@
%{public}@Handling updated share participant: %@
%{public}@Removing existing share participant model with client identifier %@ because it has a different model ID: %@
%{public}@Failed to remove existing share participant model: %@
%{public}@Failed to update share participant models: %@
%{public}@Creating share model
%{public}@Leaving cloud share
%{public}@Cannot leave cloud share because no share model was found
%{public}@Could not find a share model. Will attempt to find one by re-fetching all records
%{public}@Received zone deleted error when leaving cloud share
%{public}@Failed to push changes for leaving cloud share: %@
%{public}@Successfully pushed changes for leaving cloud share with result: %@
%{public}@Adding %@ share operation: %@
%{public}@Hit conflict when pushing share; retrying operation
%{public}@Failed to push share: %@
%{public}@Hit conflict when pushing share and share participant record; retrying operation
%{public}@Failed to push share and share participant record: %@
%{public}@Failed to delete share participant records: %@
%{public}@No owner record ID found on cloud zone share: %@
%{public}@No current participant record ID found on cloud zone share: %@
%{public}@No participant was found with client identifier: %@
%{public}@No cloud share ID was found for participant: %@
%{public}@Fetching invitation with context: %@
%{public}@Unable to fetch an invitation on non-private zone
%{public}@Configuring existing participant %@ for the requested invitation context: %@
%{public}@Fetching invitation again after configuring participant
%{public}@Asked to fetch an invitation for client identifier corresponding to participant that has already accepted: %@
%{public}@Returning existing pending invitation: %@
%{public}@Participant already exists that has not accepted but has no pending invitation: %@
%{public}@Unable to find updated share participant on share %@
%{public}@Unable to find invitation token on share participant %@
%{public}@Created invitation: %@
%{public}@Unable to encode participant model %@: %@
%{public}@Setting write access enabled to %@ for participant: %@
%{public}@Could not find CKShareParticipant for participant %@. All CKShareParticipants: %@
%{public}@Not setting write access enabled because participant's permission is already %@
%{public}@Successfully pushed changes for participant write access update
%{public}@Revoking share for participant: %@
%{public}@Could not find participant model for participant %@
%{public}@Successfully pushed share changes for share revocation
%{public}@Successfully pushed share participant deletion for share revocation
%{public}@Cannot fetch share model because local zone is nil
%{public}@Unable to fetch share models: %@
%{public}@Unexpectedly found more than one share model: %@
%{public}@Failed to remove existing share modelIDs: %@
%{public}@Fetched existing share model: %@
%{public}@Did not find existing share model
%{public}@Cannot initialize share participant models because local zone is nil
%{public}@Initializing with fetched participants: %@
%{public}@Adding participant %@ to share %@
%{public}@Removing participant %@ because it already exists on share %@
%{public}@Removing participant %@ from share %@
%{public}@Not removing participant %@ from share because it doesn't exist on share: %@
%{public}@Query Table: %@ <%@>
%{public}@    %@ <%@>
%{public}@Adding sentinal table failed: %@
%{public}@Failed to clean up queryable table (non-fatal): %@
%{public}@Preparing query contexts...
%{public}@Unable to prepare Query context for class: %@
%{public}@Prepared query context for %@
%{public}@Significant failure during preparation of queries: %@
%{public}@discarding existing index table %@ (%@ / %@ / %@)
%{public}@%{public}@Fetched share participant: %@
%{public}@%{public}@CKFetchShareParticipantsOperation failed: %@
%{public}@%{public}@CKFetchShareParticipantsOperation will be retried
%{public}@%{public}@CKFetchShareParticipantsOperation failed and cannot be retried: %@
%{public}@%{public}@CKFetchShareParticipantsOperation succeeded with participants: %@
%{public}@%{public}@Starting CKFetchShareParticipantsOperation for lookup info: %@ operationID: %@
%{public}@%{public}@Failed to fetch share metadata for url %@: %@
%{public}@%{public}@Fetched share metadata for url %@: %@
%{public}@%{public}@CKFetchShareMetadataOperation failed: %@
%{public}@%{public}@CKFetchShareMetadataOperation will be retried
%{public}@%{public}@CKFetchShareMetadataOperation failed and cannot be retried: %@
%{public}@%{public}@CKFetchShareMetadataOperation succeeded with share metadata: %@
%{public}@%{public}@Starting CKFetchShareMetadataOperation for invitation: %@ operationID: %@
%{public}@%{public}@Failed to accept share metadata %@: %@
%{public}@%{public}@Successfully accepted share for share metadata %@: %@
%{public}@%{public}@CKAcceptSharesOperation failed: %@
%{public}@%{public}@CKAcceptSharesOperation will be retried
%{public}@%{public}@CKAcceptSharesOperation failed and cannot be retried: %@
%{public}@%{public}@CKAcceptSharesOperation succeeded with share: %@
%{public}@%{public}@Starting CKAcceptSharesOperation with share metadata: %@ operationID: %@
%{public}@%{public}@Fetched user record: %@
%{public}@%{public}@Failed to fetch user record: %@
%{public}@%{public}@CKFetchRecordsOperation did not retrieve user record, but no error was returned
%{public}@%{public}@CKFetchRecordsOperation succeeded with record: %@
%{public}@%{public}@Starting CKFetchRecordsOperation for current user record with operationID: %@
%{public}@Aborting input block left uncommitted
%{public}@Staging removal for model with ID: %@
%{public}@Skipping local zone input commit with no staged changes
%{public}@Committing local zone input containing %lu staged changes with options: %@
%{public}@Failed to commit local zone input: %@
%{public}@Aborting local zone input
%{public}@Failed to insert deletion item with blockRow: %lu type: %lu modelID: %@: %@
%{public}@Failed to select records with parentModelID: %@: %@
%{public}@Removing block with row %lu
%{public}@Could not initialize zlib for compression, error %ld
%{public}@Failed to compress, error %ld
%{public}@Could not initialize zlib for uncompression, error %ld
%{public}@Perform cloud pull for scope : %@
%{public}@Cannot fetch updated zones for unsupported database scope: %@
%{public}@Coalescing cloud pull for scope: %@
%{public}@Queueing up cloud pull for scope: %@
%{public}@Performing cloud pull for database [%@] for scope [%@] with token: %@
%{public}@%{public}@Zone with ID changed: %@
%{public}@%{public}@Zone with ID was deleted: %@
%{public}@%{public}@Got a zone deletion for a non-existent zone ID: %@
%{public}@%{public}@Fetch database changes operation completed with token: %@ moreComing: %@ error: %@
%{public}@%{public}@CKFetchDatabaseChangesOperation failed: %@
%{public}@%{public}@Retrying CKFetchDatabaseChangesOperation with nil change token due to expired change token error
%{public}@%{public}@CKFetchDatabaseChangesOperation will be retried
%{public}@%{public}@CKFetchDatabaseChangesOperation failed and cannot be retried: %@
%{public}@%{public}@Failed to add created zone models to local DB %@: %@
%{public}@%{public}@Failed to remove zone model IDs from local DB %@: %@
%{public}@%{public}@CKFetchDatabaseChangesOperation succeeded
%{public}@%{public}@Starting CKFetchDatabaseChangesOperation with database: %@ token: %@ operationID: %@
%{public}@Asked to update models: %@ remove model IDs: %@
%{public}@Staging addition for model: %@
%{public}@Setting requiresModelCreation to YES because addition constraint is %ld
%{public}@Setting disallowsModelCreation to YES because addition constraint is %ld
%{public}@Asked to fetch zones with force: %@
%{public}@Unable to encode model (%@.%@): %@
%{public}@Finalizing %@
%{public}@Failed to run SQL statement %s: %@
%{public}@Ignoring fetch due to previous error: %@
%{public}@Opening database context: %@
%{public}@Reusing existing open database context: %@
%{public}@Failed to open context %@: %@
%{public}@Failed to prepare context %@: %@
%{public}@Closing database context: %@
%{public}@Found context still using database: %@
%{public}@Closing sqlite database for context: %@
%{public}@Failed to close database, status: %d
%{public}@unable to get files in %@ (%@)
%{public}@unable to remove %@: %@
%{public}@Current schema version: %@
%{public}@Migration failed for context %@: %@
%{public}@Migration needs re-init for context %@
%{public}@Migration needs reopen for context %@
%{public}@unhandled migration result: %ld
%{public}@Failed to turn on WAL for context %@: %@
%{public}@Successfully turned on WAL for context %@
%{public}@Failed re-open of WAL-enabled context %@: %@
%{public}@Unable to open memory database with create == NO
%{public}@Successfully opened context: %@
%{public}@Failed to open context %p at %@: %@
%{public}@[HMBSQLFile: %@] Unable to turn on foreign key enforcement: %@
%{public}@Ignoring SQL block request due to previous error: %@
%{public}@ignoring exec due to previous error %s: %@
%{public}@Error executing statement: %@
%{public}@unable to prepare SQL statements: %@
%{public}@unable to compile expression: %@
%{public}@unable to instantiate SQLite datastore %@: %@
%{public}@Running on a later DB schema than our version (%ld > %ld).
%{public}@Failing DB open during migration becaues we might corrupt things (open in read-only)
%{public}@Have opened a DB in read-only mode with a different schema version than our version (%ld != %ld). This may end badly.
%{public}@removing all records and transactions from local
%{public}@Unable to determine if old tables are in the database: %@
%{public}@Unable to remove old table %@: %@
%{public}@unable to initialize SQL table: %@ with error: %@
%{public}@unable to initialize SQL index: %@ with error: %@
%{public}@Failed to updated schema version to current version %lu: %@
%{public}@Unable to query all required tables: %@
%{public}@Found tables: %@ is not a superset of expected tables: %@
%{public}@Unable to set a default value %@ of type %@ when the stored type is %@
%{public}@Asked to register subscription for zone ID %@: %@
%{public}@Asked to register subscription %@ on unknown zoneID %@. All zone ID state: %@
%{public}@Not registering zone subscription %@ because it is already in our list of subscriptions: %@
%{public}@Asked to unregister subscription for zone ID %@: %@
%{public}@Asked to unregister subscription %@ on unknown zoneID %@. All zone ID state: %@
%{public}@Could not find zone state for zone ID %@ after updating subscriptions. All zone ID state: %@
%{public}@Asked to unregister private subscription for subscription ID %@
%{public}@Asked to unregister shared subscription for subscription ID %@
%{public}@Asked to register subscription for Private DB: %@
%{public}@Asked to register subscription on PrivateDB, but no subscriptions!.
%{public}@Not registering DB subscription %@ because it appears to already exist in our list of subscriptions: %@
%{public}@Failed to update zone state: %@
%{public}@Not pushing database subscription ID %@ because it is already in our list of registered database subscriptions: %@
%{public}@Asked to register private subscription for external record type %@
%{public}@Asked to register shared subscription for external record type %@
%{public}@Asked to unregister private subscription for external record type %@
%{public}@Asked to unregister shared subscription for external record type %@
%{public}@Skipping subscription modify for empty save and remove lists
%{public}@%{public}@CKModifySubscriptionsOperation failed: %@
%{public}@%{public}@CKModifySubscriptionsOperation will be retried
%{public}@%{public}@CKModifySubscriptionsOperation failed and cannot be retried: %@
%{public}@%{public}@CKModifySubscriptionsOperation succeeded
%{public}@%{public}@Starting CKModifySubscriptionsOperation with subscriptionsToSave: %@ subscriptionIDsToRemove: %@ operationID: %@
%{public}@Not unregistering database subscription ID %@ because it is not in our list of existing database subscription: %@
%{public}@Failed to update database state: %@
HMBMirrorOutputResult
HMBProcessingOptions
NSSecureCoding
NSCoding
HMBProcessingResult
HMBSQLStatementQueryPlanTuple
HMBSQLStatement
Record
Rebuild
Rebuild_Internal
HMBCloudZoneStateModel
HMBCloudZoneShareModel
HMBSQLQueryIterator
HMBShareInvitation
NSCopying
HMBCloudCredentialsAvailabilityListener
HMFLogging
NSObject
HMFTimerDelegate
HMBLocalSQLContextRowBlock
HMBLocalSQLIteratorRowBlock
HMBLocalSQLIteratorRowInputBlock
HMBLocalSQLIteratorRowRollbackBlock
HMBSQLQueryStatement
HMBLocalSQLContextRowItem
HMBLocalZoneProcessModelContext
HMBLocalZoneProcessTuple
Process
ShareModel
HMBLocalSQLContextInputBlock
HMBCloudZoneEncodingContext
HMBCloudZone
HMBMirrorProtocol
CloudRecord
CloudRecord_Internal
HMBCloudDatabaseConfiguration
NSMutableCopying
HMBMutableCloudDatabaseConfiguration
HMBProcessingModelResult
HMBLocalSQLQueryTable
HMBLocalZone
HMBCloudZoneRebuilderStatus
HMBModelObjectCoder
HMBLocalZoneQueryResultAllOfTypeRaw
MigrateUnsupported
Manatee
HMBLocalZoneID
HMBSearchableEntry
HMBLocalZoneIDUnshared
HMBModel
HMBModelTranslation
HMBModelProperties
HMBModelUnsupported
HMBShareUserID
HMBProcessingModelDeletion
HMBLocalZoneConfiguration
HMBMutableLocalZoneConfiguration
HMBStreamingAsset
HMBModelNativeCKWrapper
HMBModelObjectMerging
HMBCloudZonePushResult
HMBCloudZonePullResult
HMBLocalSQLContextRowZone
CKCode
HMBPrivateCloudZoneRebuilder
HMBCloudZoneRebuilder
HMBModelContainer
HMBMutableModelContainer
HMBModelContainerEncodingContext
MirrorInput
HMBCloudZoneRebuilderModel
HMBSharedCloudZoneRebuilder
HMBCloudID
HMBAction
HMBMutableAction
HMBCloudZoneShareParticipantModel
Conflicts
HMBProcessingModelCreation
User
HMBLocalDatabase
Pull_Internal
Pull
HMBCloudDatabase
HMBCloudPushObserver
CloudZone
HMBLocalZoneQueryResultColumnTuple
HMBLocalZoneQueryResult
HMBLocalZoneQueryResultRecordID
HMBLocalZoneQueryResultRecordColumns
HMBLocalZoneQueryResultAllOfType
HMBLocalZoneQueryResultParentModelID
HMBLocalZoneQueryResultParentModelIDOfType
HMBLocalZoneQueryResultRecursiveModelID
HMBLocalZoneQueryResultFilter
Subscription
HMBFutureOperation
HMBLocalDatabaseConfiguration
HMBMutableLocalDatabaseConfiguration
HMBShareOperation
HMBModelQueryArgument
HMBModelQuery
HMBModelUnindexedQuery
HMBModelIndexedQuery
HMBModelInfiniteQuery
HMBModelFiniteQuery
HMBModelCountMatchesQuery
HMBMirrorOutputTuple
HMBMirrorOutputGroup
MirrorOutput
HMBModelReference
HMBQueryableModelFieldCoder
HMBModelCloudReference
HMBCloudZoneRecordPushConflict
HMBShareInvitationContext
HMBProcessingModelUpdate
Fetch
Fetch_Internal
HMBLocalZoneQueryResultRecordIDSequence
Query
HMBCloudZoneFetchRecordsContext
HMBLocalSQLContextRowRecord
HMBLocalSQLIteratorRowRecord
ZoneState
HMBCloudZoneID
CloudSubscription
Push
HMBLocalZoneTestingProtocol
HMBLocalZoneDelegate
Queryable
HMBLocalZoneMirrorInput
HMBCloudPushHandler
HMBAPSConnection
HMBAPSConnectionDelegate
HMBLocalSQLContextOutputBlock
HMBCloudZoneConfiguration
HMBMutableCloudZoneConfiguration
Delegate
HMBCloudZoneRecordPushResult
Share_Internal
Share
HMBCloudStateModel
HMBLocalSQLContextQueryIndex
HMBLocalSQLContextQueryTable
HMBLocalSQLContextRowQueryTuple
HMBLocalSQLContextRowQuery
CloudUser
HMBLocalZoneInput
HMBLocalSQLContextRecord
Block
HMBCloudDatabaseDataSource
ZoneFetch
HMBLocalZoneRawUpdateEntry
Model
HMBLocalZoneLocalInput
Zone
V4Cloud
HMBSQLContextConcrete
HMBSQLContext
HMBSQLFile
sqlite3
Record_Internal
HMBEntrySearch
HMBLocalSQLContext
HMBLocalZoneIDRow
HMBCloudDatabaseStateModel
HMBCloudExtensions
HMBModelObjectStorage
HMBShareParticipant
CKRecordValue
HMBModelField
HMBMutableModelField
HMBModelFieldDeprecatedField
HMBModelFieldOptionExternalRecordField
HMBModelFieldOptionExcludeFromCloudStorage
HMBModelFieldOptionQueryable
HMBModelFieldOption
Subscription_Internal
MigrateToSchema01
copy
initWithLabel:
optionsWithLabel:
messagePayload
setMessagePayload:
setMessageName:
transactionIdentifier
setMessageTransactionIdentifier:
responseHandler
setMessageResponseHandler:
array
messageName
messageTransactionIdentifier
initWithName:value:
addObject:
label
shouldEnqueueMirrorOutput
shouldRollBackIfMirrorOutputFails
disallowsCellularAccessForMirrorOutput
requiresModelCreation
disallowsModelCreation
isEqualToString:
qualityOfService
hash
decodeObjectOfClass:forKey:
decodeObjectOfClasses:forKey:
decodeBoolForKey:
setShouldEnqueueMirrorOutput:
decodeIntegerForKey:
setQualityOfService:
setShouldRollBackIfMirrorOutputFails:
setDisallowsCellularAccessForMirrorOutput:
setRequiresModelCreation:
setDisallowsModelCreation:
encodeObject:forKey:
encodeBool:forKey:
encodeInteger:forKey:
optionsWithMessage:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
attributeDescriptions
isEqual:
messageResponseHandler
activity
setActivity:
transactionItemsBatchLimit
setTransactionItemsBatchLimit:
.cxx_destruct
_shouldEnqueueMirrorOutput
_shouldRollBackIfMirrorOutputFails
_disallowsCellularAccessForMirrorOutput
_requiresModelCreation
_disallowsModelCreation
_label
_messagePayload
_messageName
_messageResponseHandler
_messageTransactionIdentifier
_qualityOfService
_activity
_transactionItemsBatchLimit
TB,V_requiresModelCreation
TB,V_disallowsModelCreation
T@"NSString",R,C,N,V_label
T@"NSDictionary",&,N,V_messagePayload
T@"NSString",&,N,V_messageName
T@?,C,N,V_messageResponseHandler
T@"NSUUID",&,N,V_messageTransactionIdentifier
TB,N,V_shouldEnqueueMirrorOutput
TB,N,V_shouldRollBackIfMirrorOutputFails
TB,N,V_disallowsCellularAccessForMirrorOutput
Tq,N,V_qualityOfService
T@"HMFActivity",&,N,V_activity
TQ,N,V_transactionItemsBatchLimit
count
dictionaryWithCapacity:
countByEnumeratingWithState:objects:count:
setObject:forKey:
enumerateKeysAndObjectsUsingBlock:
initWithOptions:actions:mirrorOutputResult:
options
actions
mirrorOutputResult
_options
_actions
_mirrorOutputResult
T@"HMBProcessingOptions",R,N,V_options
T@"NSArray",R,N,V_actions
T@"NAFuture",R,N,V_mirrorOutputResult
objectAtIndex:
intValue
numberWithInt:
parent
detail
arrayWithObjects:count:
initWithRow:
_row
_parent
_detail
Ti,R,N,V_row
Ti,R,N,V_parent
T@"NSString",R,N,V_detail
sqlStatementForContext:statement:
queryPlansForContext:statement:
initWithContext:statement:queryPlans:
context
finalize
performBlock:
dealloc
assertOwner
UTF8String
explainStatements
stringByAppendingString:
na_map:
setExplainStatements:
TB,N
initWithContext:statement:
statement
setStatement:
queryPlans
_context
_statement
_queryPlans
T^{sqlite3_stmt=},N,V_statement
T@"HMBSQLContext",R,W,N,V_context
T@"NSArray",R,N,V_queryPlans
encodeRecordFromModel:existingRecord:encodingContext:error:
decodeModelFromRecord:externalRecordFields:source:error:
encodeRecordFromModel:externalData:encodingContext:error:
keyStatus
futureWithNoResult
waitForPendingRebuild
Tq,R,N
T@"NAFuture",R,N
addSuccessBlock:
isZoneRebuildInProgress
rebuild
startUpRebuilderIfNeeded
handleLostKeys
handleZoneChangedNotification
handleUpdatedRebuilderModel:
zoneRebuildInProgress
TB,R,N,GisZoneRebuildInProgress
unlock
isFinished
hmbProperties
mutableCopy
dictionaryWithObjects:forKeys:count:
addEntriesFromDictionary:
initWithModelID:parentModelID:
setNeedsZoneCreation:
setNeedsZoneDeletion:
setSubscriptions:
setWithArray:
unarchivedObjectOfClasses:fromData:error:
archivedDataWithRootObject:requiringSecureCoding:error:
setSubscriptionsData:
subscriptions
cloudZone
setCloudZone:
rebuilderStatus
setRebuilderStatus:
_cloudZone
_rebuilderStatus
subscriptionsData
T@"NSData",&,D,N
T@"HMBCloudZone",W,V_cloudZone
zoneID
T@"HMBCloudZoneID",&,D,N
needsZoneCreation
T@"NSNumber",&,D,N
needsZoneDeletion
T@"NSSet",&,N
T@"HMBCloudZoneRebuilderStatus",&,N,V_rebuilderStatus
hmbExternalRecordType
share
T@"CKShare",&,D,N
initWithStatement:initialSequence:maximumRowsPerSelect:error:
hmf_numberForKey:
stringWithFormat:
exceptionWithName:reason:userInfo:
error
cachedResults
currentSequence
setCurrentSequence:
hmf_dequeue
fetchRow:error:
setError:
nextObject
maximumRowsPerSelect
setMaximumRowsPerSelect:
TQ,N
initWithStatement:initialSequence:maximumRowsPerSelect:
fetchRowFromStatement:skip:updatedSequence:error:
enumerateObjectsUsingBlock:
bindPropertiesToStatement:error:
maximumRowsPerQuery
setCachedResults:
sequenceBindOffset
setSequenceBindOffset:
_sequenceBindOffset
_error
_maximumRowsPerQuery
_cachedResults
_currentSequence
T@"HMBSQLQueryStatement",R,N,V_statement
TQ,R,N,V_maximumRowsPerQuery
T@"NSMutableArray",&,N,V_cachedResults
T@"NSNumber",&,N,V_currentSequence
T@"NSError",&,N,V_error
Ti,N,V_sequenceBindOffset
arrayWithCapacity:
longLongValue
numberWithUnsignedInteger:
addObjectsFromArray:
date
initWithURL:token:context:cloudZoneID:dateCreated:
shareURL
token
cloudZoneID
dateCreated
isEqualToDate:
shortDescription
copyWithZone:
initWithURL:token:context:cloudZoneID:
_cloudZoneID
_dateCreated
_shareURL
_token
T@"NSURL",R,N,V_shareURL
T@"CKDeviceToDeviceShareInvitationToken",R,N,V_token
T@"HMBShareInvitationContext",R,N,V_context
T@"HMBCloudZoneID",R,N,V_cloudZoneID
T@"NSDate",R,N,V_dateCreated
defaultCenter
initWithContainer:notificationCenter:
initWithTimeInterval:options:
keychainAvailabilityTimerFactory
handleIdentityUpdateNotification:
addObserver:selector:name:object:
resume
handleAccountChangedNotification:
accountStatus
supportsDeviceToDeviceEncryption
hasValidCredentials
removeObserver:name:object:
finishWithNoResult
accountInfoWithCompletionHandler:
containerIdentifier
logCategory
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
logIdentifier
timerDidFire:
initWithContainer:
waitForManateeAvailability
waitForManateeAvailabilityAndRecheckIfAlreadyAvailable
waitForKeychainAvailability
setKeychainAvailabilityTimerFactory:
_lock
_container
_notificationCenter
_manateeAvailabilityFuture
_keychainAvailabilityFuture
_keychainAvailabilityTimer
_keychainAvailabilityTimerFactory
T@?,C,V_keychainAvailabilityTimerFactory
blockRow
type
optionsData
initWithBlockRow:type:options:
_blockRow
_type
_optionsData
TQ,R,N,V_blockRow
TQ,R,N,V_type
T@"NSData",R,N,V_optionsData
zoneRowBindOffset
zoneRow
isAscending
initWithSQLContext:zoneRow:statement:isAscending:
_ascending
_zoneRowBindOffset
_zoneRow
Ti,R,N,V_zoneRowBindOffset
ascending
TB,R,N,GisAscending,V_ascending
TQ,R,N,V_zoneRow
initWithSQLContext:zoneRow:
dictionary
stringWithUTF8String:
initWithContext:statement:queryPlans:arguments:
arguments
_arguments
T@"NSDictionary",R,N,V_arguments
initWithItemRow:externalID:externalData:modelEncoding:modelData:
itemRow
externalID
externalData
modelEncoding
modelData
initWithStatement:returning:
_itemRow
_modelData
_modelEncoding
_externalID
_externalData
TQ,R,N,V_itemRow
T@"NSData",R,N,V_externalID
T@"NSData",R,N,V_externalData
T@"NSData",R,N,V_modelData
TQ,R,N,V_modelEncoding
initWithModel:outputBlockRow:externalData:
model
outputBlockRow
_model
_outputBlockRow
T@"HMBModel",R,N,V_model
T@"NSNumber",R,C,N,V_outputBlockRow
initWithPreviousContext:mergedContext:updateModel:outputModel:outputBlockRow:recordRow:itemRow:modelSchema:modelType:externalID:queryTable:
previousContext
mergedContext
updateModel
outputModel
recordRow
modelSchema
modelType
queryTable
encodedQueryableColumns
_previousContext
_mergedContext
_updateModel
_outputModel
_recordRow
_modelSchema
_modelType
_queryTable
_encodedQueryableColumns
T@"HMBLocalZoneProcessModelContext",R,N,V_previousContext
T@"HMBLocalZoneProcessModelContext",R,N,V_mergedContext
T@"HMBModel",R,C,N,V_updateModel
T@"HMBModel",R,C,N,V_outputModel
TQ,R,N,V_recordRow
T@"NSUUID",R,N,V_modelSchema
T@"NSString",R,N,V_modelType
T@"HMBLocalSQLQueryTable",R,N,V_queryTable
T@"NSArray",R,N,V_encodedQueryableColumns
objectForKeyedSubscript:
allObjects
na_all:
modificationDate
compare:
containsObject:
hmfErrorWithCode:
finishWithError:
blockOperationWithBlock:
addOperation:
observersForModelWithID:
queueIncompleteProcesses
triggerProcessForBlockRow:
outputBlockRowForTuple:activity:
shouldMirrorInputExternalData:overwriteExistingExternalData:
outputModelFromUpdateModel:mergedModel:
unarchivedObjectOfClass:fromData:error:
bytes
initWithUUIDBytes:
objectForKey:
UUID
length
UUIDString
localZone:didProcessModelDeletion:
localZone:didProcessModelCreation:
localZone:didProcessModelUpdate:
completionHandlerAdapter
addCompletionBlock:
finishWithResult:
futureWithError:
unsignedIntegerValue
recordName
initWithUUIDString:
setShare:
encodeShareModel:
decodeShareModelFromShare:
identifier
owner
abort
setBlockRow:
invalidate
initWithOwner:identifier:zoneRow:blockRow:type:
insertExternalID:externalData:modelEncoding:modelData:
updateExternalID:externalData:modelEncoding:modelData:
commit:
setOwner:
_identifier
_owner
T@"HMBLocalSQLContext",W,N,V_owner
TQ,N,V_blockRow
T@"NSString",R,N,V_identifier
T@"HMFActivity",R,N,V_activity
init
createdRecords
_createdRecords
T@"NSMutableDictionary",R,N,V_createdRecords
stateZone
boolValue
strongToStrongObjectsMapTable
setMaxConcurrentOperationCount:
cloudDatabase
startUp
recoverIgnoringError
shutdownFuture
flatMap:
destroyFuture
notifyDelegateOfError:forOperation:
configuration
delegate
cloudDatabase:encounteredError:withOperation:onZone:
setLocalZone:
modelContainer
setModelContainer:
_startUpWithPublicLocalZone:
_startUpWithPrivateLocalZone:
globalAsyncScheduler
lazyFutureWithBlock:scheduler:
chainFutures:
addFailureBlock:
finishWithResult:error:
database
operationQueue
waitUntilAllOperationsAreFinished
futureWithBlock:scheduler:
startUpWithLocalZone:
destroy
triggerOutputForOutputRow:options:
flush
shutdown
T@"<HMBLocalZoneID>",R,N
initWithCloudDatabase:configuration:state:
retryCloudKitOperation:afterError:retryBlock:
startupWithModelContainer:error:
isInternalModel:
handleUpdatedInternalModels:
handleDeletion
setCloudDatabase:
setDelegate:
localZone
setStateZone:
stateModelID
setZoneID:
modelClassToRequiresPostProcessingMap
inProgressPushFuturesByOutputBlockRow
deviceIdentifier
setShutdownFuture:
setDestroyFuture:
rebuilder
setRebuilder:
recordOperationQueue
shareOperationQueue
queuedCloudPullFuture
setQueuedCloudPullFuture:
queuedFetchRecordsContexts
setQueuedFetchRecordsContexts:
shareModel
setShareModel:
shareParticipantModelsByClientIdentifier
defaultDesiredKeys
setDefaultDesiredKeys:
_propertyLock
_needsZoneCreation
_needsZoneDeletion
_startUp
_cloudDatabase
_delegate
_configuration
_localZone
_database
_stateZone
_stateModelID
_zoneID
_modelClassToRequiresPostProcessingMap
_inProgressPushFuturesByOutputBlockRow
_deviceIdentifier
_shutdownFuture
_destroyFuture
_rebuilder
_recordOperationQueue
_shareOperationQueue
_queuedCloudPullFuture
_queuedFetchRecordsContexts
_shareModel
_shareParticipantModelsByClientIdentifier
_modelContainer
_defaultDesiredKeys
T@"CKDatabase",R,N,V_database
T@"HMBCloudDatabase",W,N,V_cloudDatabase
T@"HMBLocalZone",W,N,V_stateZone
T@"NSUUID",R,N,V_stateModelID
TB,R,N,V_needsZoneCreation
TB,R,N,V_needsZoneDeletion
T@"HMBCloudZoneID",&,N,V_zoneID
T@"NSMapTable",R,N,V_modelClassToRequiresPostProcessingMap
T@"NSMutableDictionary",R,N,V_inProgressPushFuturesByOutputBlockRow
T@"NSString",R,N,V_deviceIdentifier
T@"NAFuture",&,N,V_shutdownFuture
T@"NAFuture",&,N,V_destroyFuture
T@"<HMBCloudZoneRebuilder>",&,N,V_rebuilder
T@"NSOperationQueue",R,N,V_recordOperationQueue
T@"NSOperationQueue",R,N,V_shareOperationQueue
T@"NAFuture",&,V_queuedCloudPullFuture
T@"NSMutableSet",&,V_queuedFetchRecordsContexts
T@"HMBCloudZoneShareModel",&,V_shareModel
T@"NSMutableDictionary",R,N,V_shareParticipantModelsByClientIdentifier
T@"HMBModelContainer",&,N,V_modelContainer
T@"NSArray",&,N,V_defaultDesiredKeys
T@"<HMBCloudZoneDelegate>",W,N,V_delegate
T@"HMBCloudZoneConfiguration",R,C,N,V_configuration
T@"HMBLocalZone",W,N,V_localZone
T@"NAFuture",R,N,V_startUp
pushRecordsToUpdate:recordIDsToRemove:configuration:rollbackEnabled:needsNewInvitationToken:
pushRecordsToUpdate:recordIDsToRemove:configuration:rollbackEnabled:
futureWithResult:
markWithFormat:
initWithRecordsToSave:recordIDsToDelete:
setConfiguration:
setSavePolicy:
setMarkAsParticipantNeedsNewInvitationToken:
setPerRecordSaveBlock:
setPerRecordDeleteBlock:
markWithReason:
setModifyRecordsCompletionBlock:
operationID
subarrayWithRange:
combineAllFutures:ignoringErrors:scheduler:
firstObject
lastObject
errorOnlyCompletionHandlerAdapter
setDiscretionaryNetworkBehavior:
setAutomaticallyRetryNetworkFailures:
containerID
sourceApplicationBundleIdentifier
isManateeContainer
defaultOperationConfiguration
initWithContainerID:
setSourceApplicationBundleIdentifier:
setManateeContainer:
setDefaultOperationConfiguration:
apsRegistrationScheduler
setApsRegistrationScheduler:
registerForDBNotifications
setRegisterForDBNotifications:
mainScheduler
mutableCopyWithZone:
_manateeContainer
_registerForDBNotifications
_containerID
_sourceApplicationBundleIdentifier
_defaultOperationConfiguration
_apsRegistrationScheduler
manateeContainer
TB,GisManateeContainer,V_manateeContainer
T@"CKOperationConfiguration",C,V_defaultOperationConfiguration
T@"NSString",C,V_sourceApplicationBundleIdentifier
T@"HMFScheduler",&,N,V_apsRegistrationScheduler
TB,N,V_registerForDBNotifications
T@"CKContainerID",R,C,V_containerID
T@"NSString",C,D
TB,D,GisManateeContainer
T@"CKOperationConfiguration",C,D
T@"HMFScheduler",&,D,N
TB,D,N
alloc
mirrorOutputFuture
initWithModel:options:mirrorOutputFuture:
_mirrorOutputFuture
T@"HMBModel",R,V_model
T@"HMBProcessingOptions",R,V_options
T@"NAFuture",R,V_mirrorOutputFuture
hashTableWithOptions:
columnNames
minusSet:
columnFields
selectAll
deleteRecord
deleteAll
null
updateRecord
finalized
userQueries
removeAllObjects
setFinalized:
initWithContext:queryModel:prepareOnly:
performQueryOn:properties:filter:
_deleteQueryForRecordRow:error:
_deleteAllQueriesForZoneRow:error:
buildQueriableFieldsForModel:
_updateQueryForZoneRow:recordRow:encodedColumns:error:
modelClass
dropTableSQL
_finalized
_modelClass
_columnFields
_columnNames
_selectAll
_dropTableSQL
_deleteAll
_updateRecord
_deleteRecord
_userQueries
T@"HMBSQLStatement",R,N,V_deleteAll
T@"HMBSQLStatement",R,N,V_updateRecord
T@"HMBSQLStatement",R,N,V_deleteRecord
T@"NSHashTable",R,N,V_userQueries
TB,N,V_finalized
T@"HMBLocalSQLContext",R,W,N,V_context
T#,R,N,V_modelClass
T@"NSArray",R,N,V_columnFields
T@"NSArray",R,N,V_columnNames
T@"HMBSQLQueryStatement",R,N,V_selectAll
T@"NSString",R,N,V_dropTableSQL
arrayWithArray:
componentsJoinedByString:
allKeys
na_setByRemovingObjectsFromSet:
hasPrefix:
removeObjectForKey:
weakObjectsHashTable
observersForAllModels
modelObserversByModelID
setObject:forKeyedSubscript:
removeObject:
hasStartedUp
setHasStartedUp:
localDatabase
mirror
addOperationWithBlock:
errorWithDomain:code:userInfo:
addModels:andRemoveModelIDs:options:
addModels:options:
lazyFutureWithBlock:
shouldLogPrivateInformation
initWithLocalDatabase:zoneID:zoneRow:configuration:mirror:
addObserverForAllModels:
addObserver:forModelWithID:
removeObserverForAllModels:
removeObserver:forModelWithID:
externalDataForModelID:error:
externalDataForExternalID:error:
externalIDForModelID:error:
modelIDForExternalID:error:
setExternalData:forModelID:
setExternalData:forExternalID:
destroyWithError:
updateModels:andRemoveModelIDs:options:
createModels:options:
updateModels:options:
removeModelIDs:options:
removeModelsWithParentModelID:options:
removeModelsAndDescendantModelsWithIDs:depth:options:
removeAllModelsOfTypes:options:
createLocalInputWithError:
setLocalDatabase:
mirrorOutputObservers
_hasStartedUp
_localDatabase
_mirror
_observersForAllModels
_modelObserversByModelID
_mirrorOutputObservers
_sql
T@"NSHashTable",R,N,V_observersForAllModels
T@"NSMutableDictionary",R,N,V_modelObserversByModelID
T@"NSHashTable",R,N,V_mirrorOutputObservers
T@"HMBLocalSQLContext",R,N,V_sql
TB,N,V_hasStartedUp
T@"HMBLocalDatabase",W,N,V_localDatabase
T@"HMBModelContainer",R,N,V_modelContainer
T@"HMBLocalZoneConfiguration",R,N,V_configuration
T@"<HMBLocalZoneID>",R,N,V_zoneID
T@"<HMBMirrorProtocol>",R,N,V_mirror
T@"<HMBLocalZoneDelegate>",W,N,V_delegate
hmf_stringForKey:
initWithState:message:
message
rebuildState
rebuilderStateString:
keyStatusString:
hmbDecodeData:fromStorageLocation:error:
hmbEncodeForStorageLocation:error:
_keyStatus
_message
_rebuildState
T@"NSString",R,N,V_message
TQ,R,N,V_rebuildState
Tq,R,N,V_keyStatus
modelTypeBindOffset
returning
initWithLocalZone:zoneRow:modelType:returning:
_modelTypeBindOffset
_returning
TQ,R,N,V_returning
Ti,R,N,V_modelTypeBindOffset
migrateUnsupportedModels
initWithRecordName:zoneID:
recordIDForModel:
initWithRecordType:recordID:
populateManateeCloudRecord:withModel:encodingContext:error:
recordType
encodeManateeCloudModel:existingRecord:encodingContext:error:
decodeManateeCloudFromRecord:externalRecordFields:source:error:
name
base64EncodedStringWithOptions:
dataUsingEncoding:
initWithName:
labels
T@"NSArray",R,N
T@"NSData",R,N
T@"NSString",R,N
_name
T@"NSString",R,N,V_name
isLessThan:
isGreaterThan:
isGreaterThanOrEqualTo:
isLessThanOrEqualTo:
properties
sharedPreferences
preferenceForKey:
hmbMutableModelClassesWithQueries
hmbQueries
setHmbReserved:
valueForKey:
setHmbModelID:
setHmbParentModelID:
setHmbType:
initWithVersionString:
setHmbDataVersion:
hmbReserved
removeObjectsForKeys:
hmf_dictionaryForKey:
setValue:forKey:
hmbModelContainer
hmbContainerDataVersion
setHmbModelContainer:
hmbPropertyNamed:
string
_validateType:error:
userInfo
arrayWithObject:
reverseObjectEnumerator
appendFormat:
setString:
domain
code
hmbModelID
hmbParentModelID
hmbPrepareForStorageLocation:
hmbDataVersion
versionString
hmbType
hmbMinimumSupportedVersion
validateType:path:
hmbGenericRepresentation
setWithCapacity:
hmbUnavailableProperties
characterAtIndex:
hmbIsModelGenericRepresentation
hmbReadOnlyBefore
hmbReadOnlyProperties
hmbAssociateWithContainer:
hmbCanonicalType
hmbPropertyWasSet:
hmbPropertyNames
hmbPropertyIsReadOnly:
hmbSetProperties
hmbPropertyNamed:isSet:
hmbSetProperty:named:
hmbMergeSetPropertiesFromModel:
hmbDescription
hmbShouldLogPrivateInformation
formattedStringForValue:
allocWithZone:
hmbExternalProperties
na_filter:
hmbSetExternalProperties
hmf_boolForKey:
numberWithBool:
componentsSeparatedByString:
dumpDebug:
resolveInstanceMethod:
hmbModelClassesWithQueries
hmbResetModelsWithQueries
hmbPrepareQueries
hmbSchemaHashRoot
hmbExcludeFromCloudStorage
propertyDiffersFrom:to:
hmbExternalRecordFields
hmbUnsetPropertyNamed:
hmbDefaultValueForPropertyNamed:
hmbPropertyIsAvailable:
TB,R,N
T@"NSSet",R,N
T@"NSUUID",R,N
T@"NSDictionary",R,N
T@"NSSet",R,C,N
T@"HMFVersion",R,N
T#,R,N
populateModelWithDictionary:fromStorageLocation:using:
prepareForStorageLocation:using:updatedModelIDs:error:
hmbIsModelReadOnly
hmbValidForStorage:
hmbModelByMergingFromModel:isFromCloud:error:
hmbModelByMergingSetPropertiesFromModel:
hmbIsDifferentFromModel:differingFields:
setHmbMinimumSupportedVersion:
hmbCanonicalTypeInferred
hmbSetExternalRecordFields
hmbExternallyFetched
setHmbExternallyFetched:
hmbPropertyIsExternal:
dumpDebug
hmbRecordRow
setHmbRecordRow:
setHmbUnavailableProperties:
setHmbReadOnlyProperties:
hmbIgnoreModel
_hmbIgnoreModel
_hmbReserved
_hmbModelID
_hmbParentModelID
_hmbType
_hmbDataVersion
_hmbRecordRow
_hmbUnavailableProperties
_hmbReadOnlyProperties
_hmbModelContainer
T@"HMBModelContainer",W,N,V_hmbModelContainer
T@"HMFVersion",&,N,V_hmbDataVersion
T@"NSUUID",&,N,V_hmbModelID
T@"NSUUID",&,N,V_hmbParentModelID
T@"NSString",&,N,V_hmbType
T@"NSSet",&,N,V_hmbUnavailableProperties
T@"NSSet",&,N,V_hmbReadOnlyProperties
TQ,N,V_hmbRecordRow
T@"NSMutableDictionary",&,N,V_hmbReserved
T@"HMFVersion",&,N
TB,R,N,V_hmbIgnoreModel
debugString:
isSubclassOfClass:
na_dictionaryByMappingValues:
substringWithRange:
lowercaseString
userRecordID
initWithUserRecordID:
_userRecordID
T@"CKRecordID",R,V_userRecordID
readOnly
setReadOnly:
createIfNeeded
setCreateIfNeeded:
_readOnly
_createIfNeeded
TB,N,V_readOnly
TB,N,V_createIfNeeded
T@"HMBModelContainer",&,D,N
T@"<HMBLocalZoneDelegate>",W,D,N
initWithUploadStreamingAsset:downloadStreamingAsset:
uploadStreamingAsset
downloadStreamingAsset
initWithExpectedSizeBytes:
setUploadStreamingAsset:
setDownloadStreamingAsset:
applyNativeCKValue:fromSource:associatingWith:toModel:propertyNamed:
nativeCKValueWithEncodingContext:error:
includeInModelEncoding
hmbObjectByMergingFromObject:
initWithUploadStreamingAsset:
_uploadStreamingAsset
_downloadStreamingAsset
T@"CKStreamingAsset",&,N,V_uploadStreamingAsset
T@"CKStreamingAsset",&,N,V_downloadStreamingAsset
initWithProcessingFuture:
processingFuture
_processingFuture
T@"NAFuture",R,V_processingFuture
initWithZoneRow:
initWithZoneRow:name:token:
setIdentifier:
setZoneRow:
replication
setReplication:
_replication
TQ,N,V_zoneRow
T@"<HMBLocalZoneID>",&,N,V_identifier
T@"NSUUID",&,N,V_replication
initWithServiceName:functionName:responseClass:
setRequest:
requestUUID
setRequestCompletedBlock:
peformCodeOperationWithServiceName:functionName:request:responseClass:
setCodeOperationCompletionBlock:
rebuildCompleteFuture
uploadMonitorWatchdogTimer
setUploadMonitorWatchdogTimer:
isHMFError
setLastRebuildUUID:
lastRebuildUUID
zoneStartUp
handleIdentityLost
handleZoneChanged
T@"HMBCloudZoneRebuilderStatus",R,C
initWithCloudZone:
setRebuildCompleteFuture:
previousSentinelRebuildRecord
setPreviousSentinelRebuildRecord:
_rebuildCompleteFuture
_previousSentinelRebuildRecord
_lastRebuildUUID
_uploadMonitorWatchdogTimer
T@"CKRecord",&,N,V_previousSentinelRebuildRecord
T@"NSUUID",&,N,V_lastRebuildUUID
T@"HMFTimer",&,N,V_uploadMonitorWatchdogTimer
T@"HMBCloudZone",W,N,V_cloudZone
T@"NAFuture",&,N,V_rebuildCompleteFuture
T@"HMBCloudZoneRebuilderStatus",C,V_rebuilderStatus
initWithFormat:arguments:
cloudZone:didChangeRebuildStatus:
cloudDatabase:didChangeManateeKeysForZoneWithID:
anyObject
setHasCompleted:
setUniqueToken:
size
allowedTypes
setWithSet:
setByAddingObject:
initWithDataVersion:legacyDataVersion:
classReadOnlyVersionCache
classUnavailableVersionCache
classToNameTransform
nameToClassTransform
encodeAsNSDictionary:error:
encodeAsOPACK:error:
_modelClassFromDictionary:typeName:error:
legacyDataVersion
decodeAsNSDictionary:error:
decodeAsOPACK:error:
modelFromDictionary:storageLocation:typeName:error:
modelFromData:encoding:storageLocation:type:error:
dataVersion
setClassToNameTransform:
setNameToClassTransform:
sortedArrayUsingSelector:
appendData:
hmf_UUIDWithNamespace:data:
initWithDomain:code:userInfo:
internalAllowedTypes
isAtLeastVersion:
modelClassForTypeName:
readOnlyVersionsForModelClass:
unavailableVersionsForModelClass:
bestModelEncodingForStorageLocation:
typeNameForModelClass:
dataFromModel:encoding:storageLocation:updatedModelIDs:error:
modelFromData:encoding:storageLocation:error:
schemaHashForModel:
updateLocalZone:
updateMirror:
encodePropertyValue:forProperty:field:storageLocation:error:
decodePropertyValueFromData:forProperty:field:storageLocation:error:
queryFieldsCache
objectPropertyHashLookup
setObjectPropertyHashLookup:
setClassReadOnlyVersionCache:
setClassUnavailableVersionCache:
_legacyDataVersion
_dataVersion
_queryFieldsCache
_classToNameTransform
_nameToClassTransform
_objectPropertyHashLookup
_classReadOnlyVersionCache
_classUnavailableVersionCache
T@"NSMapTable",R,N,V_queryFieldsCache
T@"HMBLocalZone",R,W,N,V_localZone
T@"<HMBMirrorProtocol>",R,W,N,V_mirror
T@"NSMapTable",C,N,V_classToNameTransform
T@"NSMapTable",C,N,V_nameToClassTransform
T@"NSMapTable",&,N,V_objectPropertyHashLookup
T@"NSMapTable",&,N,V_classReadOnlyVersionCache
T@"NSMapTable",&,N,V_classUnavailableVersionCache
T@"HMFVersion",R,C,N,V_legacyDataVersion
T@"HMFVersion",R,C,N,V_dataVersion
setTypeName:forModelClass:
createMirrorInputWithError:
sentinelUUID
uniqueToken
T@"NSUUID",&,D,N
hasCompleted
environment
initWithContainerID:scope:name:modelID:
modelID
scope
initWithContainerID:scope:
_scope
_modelID
T@"CKContainerID",R,N,V_containerID
Tq,R,N,V_scope
T@"NSUUID",R,N,V_modelID
setShouldUpdateClients:
shouldUpdateClients
shouldUpdateClientsAction
_shouldUpdateClients
TB,N,V_shouldUpdateClients
participant
T@"HMBShareParticipant",&,D,N
resolveConflicts:options:
_acceptInvitation:
acceptInvitation:
initWithLocalSQLContext:configuration:
setName:
strongToWeakObjectsMapTable
local
removeLocalDataForZone:error:
localDatabase:willRemoveZoneWithID:
openZonesByZoneID
initWithDatastorePath:configuration:
fetchZonesWithError:
openZoneWithZoneID:configuration:error:
openedZoneWithZoneID:
openZoneWithMirror:configuration:error:
openedZoneWithMirror:
removeZone:
handleLocalZoneShutdown:
queue
setQueue:
setLocal:
localZoneFactory
setLocalZoneFactory:
_queue
_local
_openZonesByZoneID
_localZoneFactory
T@"NSOperationQueue",&,N,V_queue
T@"HMBLocalSQLContext",&,N,V_local
T@"NSMapTable",R,N,V_openZonesByZoneID
T@?,C,N,V_localZoneFactory
T@"<HMBLocalDatabaseDelegate>",W,N,V_delegate
performCloudPullWithFetchToken:options:
hasPerformedInitialFetch
performCloudPullWithOptions:
setDesiredKeys:
setPreviousServerChangeToken:
initWithRecordZoneIDs:configurationsByRecordZoneID:
desiredKeys
setRecordWasChangedBlock:
setRecordWithIDWasDeletedBlock:
setRecordZoneFetchCompletionBlock:
setFetchRecordZoneChangesCompletionBlock:
publicCloudDatabase
privateCloudDatabase
sharedCloudDatabase
setUseZoneWidePCS:
initWithContainerID:options:
initWithLocalDatabase:stateZone:container:configuration:databaseStateModelsByScope:zoneStateModels:credentialsAvailabilityListener:dataSource:
container
_performInitialCloudSync
initialCloudSyncFuture
retryStartupBlock:
credentialsAvailabilityListener
publicDatabase
privateDatabase
sharedDatabase
privateDatabaseState
sharedDatabaseState
cloudDatabase:didCreateZoneWithID:
zoneStateByZoneID
numberWithInteger:
integerValue
performAdministrativeFetchForDatabaseScope:withForce:
removeStateForZoneID:
cloudDatabase:didRemoveZoneWithID:
cloudDatabase:willRemoveZoneWithID:
openExistingSharedZoneWithID:configuration:delegate:error:
immediateScheduler
handleRemovedZoneIDs:userInitiated:
_retryCloudKitOperationAfterError:retryBlock:
cloudDatabase:encounteredError:withOperation:onContainer:
dataSource
setAllowsCellularAccess:
databaseScope
recordZoneID
handleUpdatedZonesIDs:
cloudDatabase:didReceiveMessageWithUserInfo:
handler:didReceivePushForTopic:
handler:didReceiveCKNotification:
handler:didReceiveMessageWithUserInfo:
initWithLocalDatabase:configuration:
performInitialCloudSync
addContainerOperation:
addDatabaseOperation:forScope:
performAdministrativeFetchForAllDatabases:
handleCreatedZoneIDs:
openOrCreatePrivateZoneWithID:configuration:delegate:error:
openExistingPrivateZoneWithID:configuration:delegate:error:
removeZoneWithID:
operationConfigurationWithProcessingOptions:
setPrivateDatabaseState:
setSharedDatabaseState:
publicDatabaseState
setPublicDatabaseState:
cloudZoneFactory
setCloudZoneFactory:
invitationOperationQueue
databaseFetchOperationQueue
setInitialCloudSyncFuture:
_dataSource
_privateDatabaseState
_sharedDatabaseState
_publicDatabaseState
_zoneStateByZoneID
_credentialsAvailabilityListener
_sharedDatabase
_privateDatabase
_publicDatabase
_cloudZoneFactory
_invitationOperationQueue
_databaseFetchOperationQueue
_initialCloudSyncFuture
T@"<HMBCloudDatabaseDataSource>",R,N,V_dataSource
T@"HMBLocalDatabase",R,N,V_localDatabase
T@"HMBLocalZone",R,N,V_stateZone
T@"HMBCloudDatabaseStateModel",&,N,V_privateDatabaseState
T@"HMBCloudDatabaseStateModel",&,N,V_sharedDatabaseState
T@"HMBCloudDatabaseStateModel",&,N,V_publicDatabaseState
T@"NSMutableDictionary",R,N,V_zoneStateByZoneID
T@"CKContainer",R,N,V_container
T@"HMBCloudCredentialsAvailabilityListener",R,N,V_credentialsAvailabilityListener
T@"CKDatabase",R,N,V_sharedDatabase
T@"CKDatabase",R,N,V_privateDatabase
T@"CKDatabase",R,N,V_publicDatabase
T@?,C,N,V_cloudZoneFactory
T@"NSOperationQueue",R,N,V_invitationOperationQueue
T@"NSOperationQueue",R,N,V_databaseFetchOperationQueue
T@"NAFuture",&,N,V_initialCloudSyncFuture
T@"<HMBCloudDatabaseDelegate>",W,N,V_delegate
T@"CKContainerID",R,N
T@"HMBCloudDatabaseConfiguration",R,C,N,V_configuration
setCloudID:
serverPreferredPushEnvironmentWithCompletionHandler:
initWithSubscriptionID:
combineAllFutures:scheduler:
timeIntervalSinceNow
setLastAdministrativeFetch:
ownerName
initWithZoneID:
fetchZonesOn:
createPrivateZoneWithID:
removePrivateZoneWithID:
fetchAllRecordZonesOperation
setFetchRecordZonesCompletionBlock:
setRecordZonesToSave:
setRecordZoneIDsToDelete:
setModifyRecordZonesCompletionBlock:
offset
modelField
initWithName:offset:modelField:
_offset
_modelField
Ti,R,N,V_offset
T@"HMBModelField",R,N,V_modelField
bindPropertiesToStatement:arguments:zoneBindRowOffset:zoneRow:error:
initWithLocalZone:statement:initialSequence:arguments:maximumRowsPerSelect:
modelClassNameOffset
modelClassName
initWithLocalZone:modelClassName:
_modelClassNameOffset
_modelClassName
Ti,R,N,V_modelClassNameOffset
T@"NSString",R,N,V_modelClassName
parentModelIDOffset
parentModelID
initWithLocalZone:parentModelID:
_parentModelIDOffset
_parentModelID
Ti,R,N,V_parentModelIDOffset
T@"NSUUID",R,N,V_parentModelID
initWithLocalZone:parentModelID:modelClassName:
orderedSet
modelStack
removeObjectAtIndex:
setParentModelID:
returnedModels
initWithLocalZone:modelID:
_modelStack
_returnedModels
T@"NSUUID",&,N,V_parentModelID
T@"NSMutableOrderedSet",R,N,V_modelStack
T@"NSMutableSet",R,N,V_returnedModels
columns
filter
initWithLocalZone:statement:columns:filter:
query
_query
_columns
_filter
T@"HMBLocalSQLQueryTableQueryAll",R,N,V_query
T@"NSArray",R,N,V_columns
T@?,R,N,V_filter
initWithZoneID:subscriptionID:
setRecordType:
registerSubscriptionForExternalRecordType:
unregisterSubscriptionForExternalRecordType:
T@"NSSet",R,C
initWithTimeout:
cancelWithError:
future
block
finish
initWithBlock:
main
_block
_future
T@?,R,C,V_block
T@"NAFuture",R,V_future
hmbIsRetryShareOperationError
recordChangeTag
initWithCloudZone:block:
T@"HMBCloudZone",R,V_cloudZone
hmbRetryShareOperationError
TB,R,GhmbIsRetryShareOperationError
initWithPropertyName:defaultValue:
argumentWithPropertyName:
argumentWithPropertyName:defaultValue:
propertyName
defaultValue
_propertyName
_defaultValue
T@"NSString",R,N,V_propertyName
T@"<HMBQueryableModelFieldCoder>",R,N,V_defaultValue
weakToWeakObjectsMapTable
preparedQueries
sqlColumns
sqlPredicate
initWithSQLPredicate:sqlColumns:initialSequence:maximumRowsPerSelect:arguments:
setModelClass:
prepareOnTable:
performQueryOn:arguments:
hasExpectedIndexes
initialSequence
sqlSelect
argumentFields
encodedDefaultValuesByArgumentName
_sqlPredicate
_sqlColumns
_maximumRowsPerSelect
_initialSequence
_preparedQueries
_sqlSelect
_argumentFields
_encodedDefaultValuesByArgumentName
T@"NSString",R,N,V_sqlPredicate
T@"NSArray",R,N,V_sqlColumns
TQ,R,N,V_maximumRowsPerSelect
T@"NSNumber",R,N,V_initialSequence
T@"NSMapTable",R,N,V_preparedQueries
T#,&,N,V_modelClass
T@"NSString",R,N,V_sqlSelect
T@"NSDictionary",R,N,V_argumentFields
T@"NSDictionary",R,N,V_encodedDefaultValuesByArgumentName
queryWithSQLPredicate:ascending:arguments:
initWithSQLPredicate:sqlColumns:initialSequence:maximumRowsPerSelect:indexNameSuffix:indexedColumns:arguments:
indexNameSuffix
indexName
objectEnumerator
containsString:
indexedColumns
na_allObjectsPassTest:
na_any:
queryWithSQLPredicate:ascending:indexedProperties:arguments:
_indexNameSuffix
_indexedColumns
T@"NSString",R,N,V_indexNameSuffix
T@"NSArray",R,N,V_indexedColumns
initWithSQLPredicate:sqlColumns:sequenceArgumentName:maximumRowsPerSelect:indexNameSuffix:indexedColumns:arguments:
sequenceArgumentName
queryWithSQLPredicate:sequenceArgumentName:indexedProperties:arguments:
_sequenceArgumentName
T@"NSString",R,C,V_sequenceArgumentName
queryWithSQLPredicate:maximumRowsReturned:indexedProperties:arguments:
queryWithSQLPredicate:indexedProperties:arguments:
countMatchesOn:arguments:error:
initWithOutputBlockRow:recordRow:model:queryTable:externalID:externalData:
setExternalID:
setExternalData:
TQ,R,V_recordRow
TQ,R,V_outputBlockRow
T@"NSData",C,N,V_externalID
T@"NSData",C,N,V_externalData
initWithBlockRow:options:
allMirrorOutputObservers
localZone:willPerformMirrorOutputForModel:
addMirrorOutputObserver:
removeMirrorOutputObserver:
fetchOptionsForOutputBlock:error:
fetchRecordsForOutputBlock:error:
markGroupAsSentWithOutputBlock:tuples:
removeOutputBlockWithRow:error:
initWithModelID:
hmbEncodeQueryableParameter:
hmbDecodeQueryableParameter:
hmbDescriptionForEncodedQueryableVariable:
associateWithContainer:
isValidForContainer:updatedModelIDs:
referencedModelFromLocalZone:error:
T@"NSUUID",R,N,V_hmbModelID
reference
referenceAction
action
setAction:
initWithRecordID:action:
setReference:
zoneName
initWithModelID:action:
referencedModelFromCloudZone:allowExternalFetch:
_reference
_action
TQ,N,V_action
T@"CKReference",&,N,V_reference
initWithRecordID:clientRecord:serverRecord:ancestorRecord:
recordID
clientRecord
serverRecord
ancestorRecord
initWithRecordID:error:
_recordID
_clientRecord
_serverRecord
_ancestorRecord
T@"CKRecordID",R,V_recordID
T@"CKRecord",R,V_clientRecord
T@"CKRecord",R,V_serverRecord
T@"CKRecord",R,V_ancestorRecord
initWithEmailAddress:
initWithParticipantClientIdentifier:lookupInfo:
initWithPhoneNumber:
participantClientIdentifier
shouldGrantWriteAccess
lookupInfo
setShouldGrantWriteAccess:
initWithParticipantClientIdentifier:emailAddress:
initWithParticipantClientIdentifier:phoneNumber:
initWithParticipantClientIdentifier:cloudShareID:
_shouldGrantWriteAccess
_participantClientIdentifier
_lookupInfo
T@"CKUserIdentityLookupInfo",R,V_lookupInfo
T@"NSUUID",R,C,V_participantClientIdentifier
TB,V_shouldGrantWriteAccess
previousModel
arrayByAddingObjectsFromArray:
initWithModel:previousModel:options:mirrorOutputFuture:
_previousModel
T@"HMBModel",R,V_previousModel
setWithObject:
_fetchCompleteModelsWithIDs:force:
fetchCompleteModels:force:
unionSet:
fetchCompleteModelsForRecordIDs:
fetchCompleteModelWithID:
fetchCompleteModelsWithIDs:
fetchCompleteModel:force:
fetchCompleteModelForRecordID:
currentSequenceAsData
setCurrentSequenceAsData:
lastReturnedSequence
setLastReturnedSequence:
setReturnedIDs:
returnedIDs
fetchRowFromStatement:skip:updatedSequenceColumn:error:
bindPropertiesToStatement:currentSequence:error:
initWithLocalZone:statement:initialSequence:sequenceBindOffset:arguments:maximumRowsPerSelect:
_currentSequenceAsData
_lastReturnedSequence
_returnedIDs
T@"NSData",&,N,V_currentSequenceAsData
T@"NSData",&,N,V_lastReturnedSequence
T@"NSMutableSet",&,N,V_returnedIDs
recordIDs
na_flatMap:
_fetchRecordsWithRecordIDs:
_fetchRecordsForContexts:
initWithRecordIDs:future:
allValues
fetchRecordsWithRecordIDs:
fetchRecordWithRecordID:canRetry:
_recordIDs
T@"NSSet",R,C,V_recordIDs
initWithRecordIDs:
setPerRecordCompletionBlock:
setFetchRecordsCompletionBlock:
initWithRecordRow:externalID:externalData:modelID:modelEncoding:modelData:modelSchema:modelType:pushEncoding:pushData:pushBlockRow:
pushEncoding
pushData
pushBlockRow
_pushEncoding
_pushData
_pushBlockRow
TQ,R,N,V_pushEncoding
T@"NSData",R,N,V_pushData
T@"NSNumber",R,N,V_pushBlockRow
initWithSQLContext:zoneRow:returning:
setServerChangeToken:
enumerateLinesUsingBlock:
updateServerChangeToken:forDatabaseWithScope:
updateServerChangeToken:forZoneWithID:
serverChangeTokenForZoneWithID:
updateRebuildStatus:forZoneWithID:
updateNeedsZoneDeletion:forZoneWithID:
deallocForZoneWithID:
initWithZoneName:ownerName:
initWithContainerID:scope:zoneID:name:modelID:
initWithContainerID:scope:zoneID:
T@"CKRecordZoneID",R,C,V_zoneID
T@"NSData",R,N,V_token
fetchSubscriptionsOn:
subscriptionIDForCloudID:recordType:
subscriptionIDForZoneID:recordType:
fetchAllSubscriptionsOperation
setFetchSubscriptionCompletionBlock:
pushGroupWithBlockRow:tuples:options:activity:completionPromise:
_triggerOutputForOutputRow:options:
cloudZone:didEncounterConflicts:options:
evaluateWithObject:
queryModelsOfType:filter:
queryModelsUsingQuery:arguments:
localZone:didCompleteProcessingWithResult:
localZone:willReindexTableForModel:
localZoneWillReindex:
queryModelsOfType:predicate:
queryModelsOfType:properties:filter:
fetchModels
queryModelsOfType:
queryModelsWithParentModelID:
queryModelsWithParentModelID:ofType:
queryModelsRecursivelyStartingWithModelID:
queryModelsUsingQuery:
countModelsUsingQuery:arguments:error:
rebuildIndexesIfNeeded
commitWithOptions:error:
stageAdditionForModel:externalID:externalData:error:
stageRemovalForModelWithExternalID:error:
requestTokenForTopic:identifier:
enabledTopics
setEnabledTopics:
T@"<HMBAPSConnectionDelegate>",W
T@"NSArray",C
initWithEnvironmentName:namedDelegatePort:queue:
initWithAPSConnection:
topic
notificationFromRemoteNotificationDictionary:
sharedHandlerForEnvironment:
connection:didReceiveToken:forTopic:identifier:
connection:didReceivePublicToken:
connection:didReceiveIncomingMessage:
addObserver:forBundleIdentifier:
_apsLock
_apsConnection
_observers
initWithOwner:identifier:zoneRow:blockRow:
updateModelID:modelEncoding:modelData:
shouldRebuildOnManateeKeyLoss
setShouldRebuildOnManateeKeyLoss:
_shouldRebuildOnManateeKeyLoss
TB,V_shouldRebuildOnManateeKeyLoss
TB,D
localDatabaseShouldLogPrivateInformation:
localDatabase:detectedLocalCorruptionWithInfo:
detectedLocalCorruptionWithInfo:
initWithUpdatedRecords:deletedRecordIDs:conflicts:fatalError:
updatedRecords
setByAddingObjectsFromSet:
deletedRecordIDs
conflicts
fatalError
initWithUpdatedRecords:deletedRecordIDs:error:
pushResultByMergingWithPushResult:
_updatedRecords
_deletedRecordIDs
_conflicts
_fatalError
T@"NSSet",R,C,V_updatedRecords
T@"NSSet",R,C,V_deletedRecordIDs
T@"NSSet",R,C,V_conflicts
T@"NSError",R,C,V_fatalError
handleUpdatedShareModel:
handleUpdatedShareParticipantModels:
participants
participantID
na_dictionaryWithKeyGenerator:
setParticipant:
cloudZone:didRemoveParticipantWithClientIdentifier:
_createShareModel
_addShareOperationAfterStartupWithName:block:
initWithRecordZoneID:
setParticipantVisibility:
_pushUpdatedShare:
_leaveCloudShareRequestingNewInvitationToken:allowCloudPull:
_addShareOperationWithName:block:
handleUpdatedShare:error:
na_firstObjectPassingTest:
handleUpdatedShareParticipantRecord:error:
initializeShareModels
createShareModel
leaveCloudShareRequestingNewInvitationToken:
_pushUpdatedShare:participantRecord:
_pushDeletedParticipantRecordIDs:
userIdentity
currentUserParticipant
participantWithClientIdentifier:
_fetchInvitationWithContext:usingShare:
setPermission:
invitationToken
_setWriteAccessEnabled:forParticipant:usingShare:
permission
_revokeShareForParticipant:usingShare:
fetchOwnerParticipantCloudShareID
fetchCurrentParticipantCloudShareID
fetchCloudShareIDForShareParticipantClientIdentifier:
fetchInvitationWithContext:
setWriteAccessEnabled:forParticipant:
revokeShareForParticipant:
addParticipant:
removeParticipant:
serverChangeToken
T@"CKServerChangeToken",&,D,N
initWithColumns:
mutableIndexes
initWithColumnNames:
indexes
_mutableIndexes
T@"NSMutableDictionary",R,N,V_mutableIndexes
T@"NSSet",R,N,V_columnNames
reloadSQLQueryMetadata
verifyTables
prepareTables
initWithQueryRow:data:
queryRow
queryData
_queryRow
_queryData
TQ,R,N,V_queryRow
T@"NSData",R,N,V_queryData
initWithRecordRow:tuples:
tuples
_tuples
T@"NSDictionary",R,N,V_tuples
fetchParticipantWithLookupInfo:
fetchShareMetadataForInvitation:
acceptInvitationWithShareMetadata:
fetchCurrentUserRecordForDatabase:
setUserIdentityLookupInfos:
setShareParticipantFetchedBlock:
setFetchShareParticipantsCompletionBlock:
setShareURLs:
setShareInvitationTokensByShareURL:
setPerShareMetadataBlock:
setFetchShareMetadataCompletionBlock:
setShareMetadatas:
setPerShareCompletionBlock:
setAcceptSharesCompletionBlock:
fetchCurrentUserRecordOperation
inputBlock
stagedChangesCount
setStagedChangesCount:
initWithLocalZone:inputBlock:
stageRemovalForModelWithID:error:
_inputBlock
_stagedChangesCount
T@"HMBLocalZone",R,V_localZone
T@"HMBLocalSQLContextInputBlock",R,V_inputBlock
TQ,V_stagedChangesCount
initWithModel:externalID:
_insertDeletionItemsForModelsAndDescendantModelsWithBlockRow:context:type:modelIDs:currentDepth:maximumDepth:options:error:
createOutputBlockWithError:
createInputBlockWithType:error:
insertBlockWithType:options:items:error:
insertBlockToRemoveAllModelsWithType:modelTypes:options:error:
insertBlockToRemoveChildModelsWithType:parentModelID:options:error:
insertBlockToRemoveModelsAndDescendantModelsWithType:modelIDs:depth:options:error:
fetchReadyBlocksWithType:error:
fetchItemsInBlock:error:
removeBlockWithRow:error:
performAfterDelay:block:
hmbOPACKDataFromDictionaryWithError:
hmbDictionaryFromOPACKData:error:
externalID:
recordIDFromExternalID:error:
data
modifiedByDevice
initRequiringSecureCoding:
encodeSystemFieldsWithCoder:
finishEncoding
encodedData
initForReadingFromData:error:
finishDecoding
encryptedValuesByKey
externalData:
hmbSetObject:forKey:encrypted:
hmbObjectForKey:encrypted:
recordFromExternalData:error:
acceptanceStatus
hmbIsEqualToParticipant:
appendString:
initWithCapacity:
appendBytes:length:
hmbCompress
hmbUncompress
hmbIsCloudKitInternalError
hmbIsCloudKitError
hmbDefaultCloudKitRetryDelay
doubleValue
hmbIsCKPartialFailureError
hmbCloudKitRetryDelay
hmbCKInternalError
hmbIsUnretriableCKInternalErrorCode:
processInfo
isLowPowerModeEnabled
_hmbIsCKErrorOrHasPartialFailureWithCode:
_hmbIsCKErrorWithCode:
hmbIsSQLiteConstraintError
hmbIsCKZoneDeletedError
hmbIsCKChangeTokenExpiredError
hmbIsCKMissingManateeIdentityError
hmbIsCKLimitExceededError
hmbIsCKManateeUnavailableError
hmbIsCKUnsyncedKeychainError
hmbIsCKNotAuthenticatedError
Td,R
majorVersion
minorVersion
updateVersion
initWithMajorVersion:minorVersion:updateVersion:
hmbData
hmbVersionFromData:
initWithData:encoding:
stringWithCString:encoding:
hmbUUIDFromData:
getUUIDBytes:
dataWithBytes:length:
timeIntervalSinceReferenceDate
numberWithDouble:
dateWithTimeIntervalSinceReferenceDate:
databaseStateForDatabaseScope:
performCloudPullForScope:
initWithPreviousServerChangeToken:
setFetchAllChanges:
setRecordZoneWithIDChangedBlock:
setRecordZoneWithIDWasDeletedBlock:
setFetchDatabaseChangesCompletionBlock:
initWithModel:encoded:
encoded
setEncoded:
setModel:
_encoded
T@"NSData",&,N,V_encoded
T@"HMBModel",&,N,V_model
update:remove:
objectFromData:encoding:storageLocation:recordRowID:error:
update:
remove:
additionConstraint
stageAdditionForModel:error:
setAdditionConstraint:
_additionConstraint
Tq,V_additionConstraint
_zonesWithScope:
privateZoneIDs
sharedZoneIDs
publicZoneIDs
fetchZones:
populateV4CloudRecord:withModel:metadataFieldData:startEncoding:endEncoding:error:
cloudMetadataForModel:usingEncoding:
cloudFieldForEncoding:
initBlock
initialize
setInitBlock:
_initBlock
T@?,C,N,V_initBlock
scheme
lastPathComponent
close:
prepare
sqlBlockWithActivity:block:
lock
sqlTransactionWithActivity:block:
begin
commit
rollback
hmbErrorWithSQLite3Statement:
hmbErrorWithSQLite3Context:statement:
mutation
setMutation:
fetchSQLite3:limit:error:block:
valueWithPointer:
initWithURL:readOnly:
close
_finalize
migrateFromSchemaVersion:error:
updateSchemaVersionTo:error:
_prepareFrom:
sqlBlock:
sqlTransaction:
runSQLite3:
execSQLite3:
execSQLite3:error:
runSQLite3:error:
insertSQLite3:error:
fetchSQLite3:error:block:
fetchSQLite3One:error:block:
setLogIdentifier:
setContext:
setLock:
_begin
_commit
_rollback
_logIdentifier
_url
_mutation
T@"HMFUnfairLock",&,N,V_lock
T^{sqlite3=},N,V_context
T@"NSString",&,N,V_logIdentifier
TQ,N,V_mutation
T@"NSURL",R,N,V_url
TB,R,N,V_readOnly
T@"NSOperationQueue",R,N,V_queue
initWithOptions:capacity:
contexts
absoluteURL
open:
removeDatastoreAtURL:
open:readOnly:error:initializer:
open:readOnly:using:error:
T@"NSHashTable",R,N
hmbDataWithSQLite3Column:column:
hmbStringWithSQLite3Column:column:
numberWithLongLong:
dataWithBytesNoCopy:length:freeWhenDone:
hmbDataWithSQLite3ColumnNoCopy:column:
hmbUUIDWithSQLite3Column:column:
hmbNumberWithSQLite3Column:column:
hmbErrorWithSQLite3Context:
hmbErrorWithSQLContext:
hmbErrorWithSQLContext:statement:
hmbErrorWithSQLite3Status:
stringWithCapacity:
defaultManager
URLByDeletingLastPathComponent
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
removeItemAtURL:error:
hmfErrorWithCode:userInfo:
fileSystemRepresentation
fetchModelWithRecordRow:error:
fetchModelWithModelID:recordRow:error:
fetchRecordRowWithModelID:returning:error:
fetchRecordRowWithExternalID:returning:error:
fetchRecordRowsWithModelIDs:error:
queryAllRowRecordsReturning:
setExternalID:externalData:forRecordRow:
removeAllRecordsWithError:
fetchModelWithModelID:error:
fetchModelWithModelID:ofType:error:
fetchModelsWithParentModelID:ofType:error:
fetchModelsWithParentModelID:error:
fetchAllModelsWithError:
fetchModelsOfType:error:
compare:options:range:
searchEntries:for:options:
searchEntries:for:
absoluteString
regularExpressionWithPattern:options:error:
stringByDeletingLastPathComponent
contentsOfDirectoryAtPath:error:
firstMatchInString:options:range:
rangeAtIndex:
stringByAppendingPathComponent:
removeItemAtPath:error:
selectReadyInputBlocks
selectReadyRollbackBlocks
selectAllRecordRows
selectAllRecordTypeRows
selectAllRecordParentModelIDRows
selectAllRecordParentModelIDTypeRows
queryContextsByModelType
queryContextsByClass
_insertBlockWithZoneRow:type:error:
_insertItemWithZoneRow:blockRow:type:externalID:externalData:modelEncoding:modelData:error:
_updateBlockWithRow:options:error:
keyEnumerator
unlinkDatastoreAt:everything:
openWithURL:readOnly:error:
sqlBlockWithActivity:error:block:
sqlTransactionWithActivity:error:block:
_insertZoneWithIdentification:name:error:
_deleteZoneWithRow:error:
_fetchAllZones:
_selectZoneWithRow:error:
_updateZoneWithRow:replication:error:
_deleteBlockWithRow:error:
_deleteBlocksWithZoneRow:error:
_selectReadyBlocksWithZoneRow:type:error:
_selectBlockWithRow:error:
_deleteNullBlocksWithZoneRow:error:
_insertBlockWithZoneRow:type:options:items:error:
_insertDeletionItemsWithZoneRow:blockRow:type:modelType:error:
_insertDeletionItemWithZoneRow:blockRow:type:modelID:error:
_insertDeletionItemsWithZoneRow:blockRow:type:parentModelID:error:
_insertItemWithZoneRow:blockRow:type:modelType:error:
_updateItemWithZoneRow:blockRow:type:externalID:externalData:modelEncoding:modelData:error:
_deleteItemWithRow:error:
_deleteItemsWithBlockRow:error:
_deleteItemWithZoneRow:error:
_deleteItemWithZoneRow:type:externalID:error:
_selectItemsWithBlockRow:rowGreaterThan:limit:returning:error:
_selectItemsWithBlockRow:returning:error:
_deleteNullItemsWithZoneRow:type:error:
_deleteNullItemsWithZoneRow:error:
_insertIndexSentinelWithZoneRow:modelType:error:
_selectIndexSentinelForZoneRow:modelType:error:
_deleteIndexSentinelsWithModelType:error:
_deleteIndexSentinelsWithZoneRow:error:
flush:
queryTables
setQueryTables:
setQueryContextsByClass:
setQueryContextsByModelType:
setSelectReadyInputBlocks:
setSelectReadyRollbackBlocks:
setSelectAllRecordRows:
setSelectAllRecordTypeRows:
setSelectAllRecordParentModelIDRows:
setSelectAllRecordParentModelIDTypeRows:
insertStore
deleteStore
selectStore
selectStores
updateStoreReplicationData
insertBlock
selectBlock
deleteBlock
deleteBlocksStore
updateBlock
selectReadyBlocks
deleteNullBlocks
insertItem
insertDeletionItemsForRecordsOfType
insertDeletionItemsForRecordWithUUID
insertDeletionItemsForRecordsWithParentUUID
updateItem
deleteItem
deleteItemsBlock
deleteItemsStore
deleteItemStoreExternal
selectItemsBlock
selectItemsBlockLimit
deleteNullItems
deleteNullItemsType
insertRecord
updateRecordExternal
updateRecordExternalExternal
updateRecordExternalUUID
updateRecordPush
updateRecordPushUUID
updateRecordClearPushExpected
updateRecordsClearPush
updateRecordType
deleteRecordBlock
deleteRecordUUID
deleteRecordExternal
deleteRecordsStore
deleteZombieRecords
selectRecord
selectRecordUUIDExternal
selectRecordUUID
selectRecordExternal
selectRecordsPushBlock
selectRecordsParentUUID
selectRecordsParentUUIDType
selectRecordsOfType
selectRecords
insertIndexSentinel
deleteIndexSentinels
deleteIndexSentinelsStore
selectIndexSentinel
_queryTables
_queryContextsByClass
_queryContextsByModelType
_selectReadyInputBlocks
_selectReadyRollbackBlocks
_selectAllRecordRows
_selectAllRecordTypeRows
_selectAllRecordParentModelIDRows
_selectAllRecordParentModelIDTypeRows
T@"NSDictionary",&,V_queryTables
T@"NSMapTable",&,V_queryContextsByClass
T@"NSMutableDictionary",&,V_queryContextsByModelType
T@"HMBSQLQueryStatement",&,N,V_selectReadyInputBlocks
T@"HMBSQLQueryStatement",&,N,V_selectReadyRollbackBlocks
T@"HMBSQLQueryStatement",&,N,V_selectAllRecordRows
T@"HMBSQLQueryStatement",&,N,V_selectAllRecordTypeRows
T@"HMBSQLQueryStatement",&,N,V_selectAllRecordParentModelIDRows
T@"HMBSQLQueryStatement",&,N,V_selectAllRecordParentModelIDTypeRows
cStringUsingEncoding:
arrayWithObjects:
na_arrayByFlattening
isSubsetOfSet:
initWithName:token:
_insertRecordWithZoneRow:externalID:externalData:modelID:parentModelID:modelType:modelEncoding:modelData:modelSchema:pushEncoding:pushData:pushBlockRow:error:
_updateRecordWithRow:externalID:externalData:error:
_updateRecordWithZoneRow:externalID:externalData:error:
_updateRecordWithZoneRow:modelID:externalData:error:
_updateRecordWithZoneRow:modelID:pushEncoding:pushData:pushBlockRow:error:
_updateRecordsClearPushWithPushBlockRow:error:
_updateRecordWithRow:modelEncoding:modelData:modelSchema:error:
_updateRecordWithRow:pushBlockRow:pushData:pushEncoding:error:
_updateRecordWithRow:modelType:modelSchema:error:
_deleteRecordWithZoneRow:modelID:error:
_deleteRecordWithZoneRow:externalID:error:
_deleteRecordWithRow:error:
_deleteRecordWithRow:expectedOutputBlockRow:error:
_clearPushForRecordRow:expectedOutputBlockRow:error:
_deleteRecordsWithZoneRow:error:
_deleteZombieRecordsWithZoneRow:error:
_selectRecordModelIDWithZoneRow:externalID:error:
_selectRecordWithZoneRow:modelID:returning:error:
_selectRecordWithRow:returning:error:
_selectRecordWithZoneRow:externalID:returning:error:
_selectRecordsWithZoneRow:parentModelID:returning:error:
_selectRecordWithZoneRow:parentModelID:modelType:returning:error:
_selectRecordsWithZoneRow:modelType:returning:error:
_selectRecordsWithZoneRow:modelType:returning:error:handler:
_selectRecordsWithZoneRow:returning:error:
_selectRecordsWithBlockRow:returning:error:
selectAllRecordsWithZoneRow:returning:
_resetOutputForRecordsWithBlockRow:error:
distantPast
setDatabase:
cloudID
T@"HMBCloudID",&,D,N
lastAdministrativeFetch
T@"NSDate",&,D,N
T@"NSSet",C,N
T@"CKDatabase",W,N,V_database
isBackingStorageEqual:
_strictlyUnarchivedObjectOfClasses:fromData:error:
ckShareParticipant
clientIdentifier
pendingInvitation
initWithCKShareParticipant:clientIdentifier:
setPendingInvitation:
cloudShareID
hasWriteAccess
hasAccepted
_clientIdentifier
_ckShareParticipant
_pendingInvitation
T@"CKShareParticipant",R,C,V_ckShareParticipant
T@"HMBShareInvitation",C,V_pendingInvitation
T@"NSUUID",R,C,V_clientIdentifier
T@"HMBShareUserID",R,C
applyTo:
externalRecordField
initWithClass:options:
setOptional:
setLoggingVisibility:
classObj
isOptional
loggingVisibility
readonlyVersion
unavailableVersion
encodeBlock
decodeBlock
descriptionBlock
initWithClass:
setDefaultValue:
setReadonlyVersion:
setUnavailableVersion:
setExternalRecordField:
conformsToHMBModelNativeCKWrapper
setConformsToHMBModelNativeCKWrapper:
excludeFromCloudStorage
setExcludeFromCloudStorage:
setEncodeBlock:
setDecodeBlock:
setDescriptionBlock:
fieldWithClass:
optionalFieldWithClass:
fieldWithClass:options:
optionalFieldWithClass:options:
deprecatedField
encodeQueryableValue:
decodeQueryableValue:
descriptionForEncodedQueryableValue:
encrypted
setEncrypted:
_encrypted
_excludeFromCloudStorage
_optional
_conformsToHMBModelNativeCKWrapper
_classObj
_externalRecordField
_loggingVisibility
_readonlyVersion
_unavailableVersion
_encodeBlock
_decodeBlock
_descriptionBlock
optional
TB,N,GisOptional,V_optional
TQ,N,V_loggingVisibility
T@,&,N,V_defaultValue
T@"HMFVersion",C,N,V_readonlyVersion
T@"HMFVersion",C,N,V_unavailableVersion
T@"NSString",&,N,V_externalRecordField
TB,N,V_encrypted
TB,N,V_excludeFromCloudStorage
TB,N,V_conformsToHMBModelNativeCKWrapper
T@?,C,N,V_encodeBlock
T@?,C,N,V_decodeBlock
T@?,C,N,V_descriptionBlock
T#,R,N,V_classObj
TB,D,N,GisOptional
TQ,D,N
T@,&,D,N
T@"HMFVersion",C,D,N
fieldName
initWithExternalRecordField:encrypted:
_fieldName
T@"NSString",R,N,V_fieldName
TB,R,N,V_encrypted
encodingBlock
decodingBlock
initWithEncodingBlock:decodingBlock:descriptionBlock:
setEncodingBlock:
setDecodingBlock:
_encodingBlock
_decodingBlock
T@?,C,N,V_encodingBlock
T@?,C,N,V_decodingBlock
externalRecordField:
encryptedExternalRecordField:
queryableField
queryableFieldWithEncodeBlock:decodeBlock:
queryableFieldWithEncodeBlock:decodeBlock:descriptionBlock:
subscriptionID
pushSubscriptionsForDatabase:subscriptionsToSave:subscriptionIDsToRemove:
registerSubscription:forZoneWithID:
unregisterSubscription:forZoneWithID:
subscriptionsForZoneWithID:
unregisterPrivateSubscriptionForSubscriptionID:
unregisterSharedSubscriptionForSubscriptionID:
registerPrivateSubscription:
registerSubscriptionForExternalRecordType:databaseState:
registerPrivateSubscriptionForExternalRecordType:
registerSharedSubscriptionForExternalRecordType:
unregisterPrivateSubscriptionForExternalRecordType:
unregisterSharedSubscriptionForExternalRecordType:
setSubscriptionsToSave:
setSubscriptionIDsToDelete:
setModifySubscriptionsCompletionBlock:
migrateToSchema01WithError:
@24@0:8@16
B16@0:8
v24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@16@0:8
B24@0:8@16
Q16@0:8
@?16@0:8
v24@0:8@?16
v20@0:8B16
q16@0:8
v24@0:8q16
v24@0:8Q16
v16@0:8
@"NSString"
@"NSDictionary"
@"NSUUID"
@"HMFActivity"
@40@0:8@16@24@32
@"HMBProcessingOptions"
@"NSArray"
@"NAFuture"
i16@0:8
^{sqlite3_stmt=}32@0:8@16@24
@32@0:8@16@24
@40@0:8@16^{sqlite3_stmt=}24@32
^{sqlite3_stmt=}16@0:8
v24@0:8^{sqlite3_stmt=}16
@"HMBSQLContext"
^{sqlite3_stmt=}
@48@0:8@16@24Q32^@40
@48@0:8@16@24@32^@40
@"HMBCloudZone"
@"HMBCloudZoneRebuilderStatus"
@40@0:8@16@24Q32
@48@0:8@16@24Q32@40
@48@0:8^{sqlite3_stmt=}16^B24^Q32^@40
@32@0:8@16^@24
B32@0:8^{sqlite3_stmt=}16^@24
v20@0:8i16
@"NSError"
@"HMBSQLQueryStatement"
@"NSMutableArray"
@"NSNumber"
@24@0:8^{_NSZone=}16
@48@0:8@16@24@32@40
@56@0:8@16@24@32@40@48
@"HMBShareInvitationContext"
@"HMBCloudZoneID"
@"NSDate"
@"NSURL"
@"CKDeviceToDeviceShareInvitationToken"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"NSObject"16@0:8
v24@0:8@"HMFTimer"16
{hmf_unfair_data_lock_s="lock"{os_unfair_lock_s="_os_unfair_lock_opaque"I}}
@"CKContainer"
@"NSNotificationCenter"
@"HMFTimer"
@40@0:8Q16Q24@32
@"NSData"
@44@0:8@16Q24@32B40
@32@0:8@16Q24
@48@0:8@16^{sqlite3_stmt=}24@32@40
@56@0:8Q16@24@32Q40@48
@32@0:8^{sqlite3_stmt=}16Q24
@"HMBModel"
@104@0:8@16@24@32@40@48Q56Q64@72@80@88@96
@"HMBLocalZoneProcessModelContext"
@"HMBLocalSQLQueryTable"
@24@0:8Q16
B32@0:8@16@24
@56@0:8@16@24Q32Q40Q48
@"HMBLocalSQLContext"
@"NSMutableDictionary"
@32@0:8Q16@24
v24@0:8@"HMBLocalZone"16
@"NAFuture"16@0:8
@"NAFuture"32@0:8Q16@"HMBProcessingOptions"24
@"<HMBLocalZoneID>"16@0:8
B40@0:8@16@24@?32
v32@0:8@16@24
B32@0:8@16^@24
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"HMBCloudDatabase"
@"<HMBCloudZoneDelegate>"
@"HMBCloudZoneConfiguration"
@"HMBLocalZone"
@"CKDatabase"
@"NSMapTable"
@"<HMBCloudZoneRebuilder>"
@"NSOperationQueue"
@"NSMutableSet"
@"HMBCloudZoneShareModel"
@"HMBModelContainer"
@44@0:8@16@24@32B40
@48@0:8@16@24@32B40B44
@"CKContainerID"
@"CKOperationConfiguration"
@"HMFScheduler"
@36@0:8@16#24B32
@40@0:8@16@24@?32
Q32@0:8Q16^@24
Q48@0:8Q16Q24@32^@40
@"HMBSQLStatement"
@"NSHashTable"
@56@0:8@16@24Q32@40@48
B24@0:8^@16
@40@0:8@16Q24@32
@24@0:8^@16
@"HMBLocalDatabase"
@"HMBLocalZoneConfiguration"
@"<HMBLocalZoneID>"
@"<HMBMirrorProtocol>"
@"<HMBLocalZoneDelegate>"
@24@0:8q16
@40@0:8@16Q24^@32
@32@0:8Q16^@24
@"NSData"32@0:8Q16^@24
@40@0:8@"NSData"16Q24^@32
@48@0:8@16Q24@32Q40
B48@0:8@16@24@32^@40
@"NSArray"16@0:8
@"NSData"16@0:8
@32@0:8@16^B24
v32@0:8@16@"NSString"24
v24@0:8@"NSString"16
@24@0:8@"NSString"16
@32@0:8@"NSString"16^B24
B24@0:8@"NSString"16
@48@0:8Q16@24@32^@40
@36@0:8@16B24^@28
@"HMFVersion"
@"NSSet"
@20@0:8B16
@"CKRecordID"
v56@0:8@16Q24@32@40@48
@"<CKRecordValue>"32@0:8@"HMBModelContainerEncodingContext"16^@24
v56@0:8@"<CKRecordValue>"16Q24@"HMBModelContainer"32@"HMBModel"40@"NSString"48
@"CKStreamingAsset"
@40@0:8Q16@24@32
@48@0:8@16@24@32#40
@"HMBCloudZoneRebuilderStatus"16@0:8
@"CKRecord"
@24@0:8#16
Q24@0:8Q16
#24@0:8@16
@56@0:8@16Q24Q32@40^@48
@48@0:8@16Q24@32^@40
@48@0:8@16Q24Q32^@40
#40@0:8@16@24^@32
@56@0:8@16@24@32Q40^@48
v32@0:8@16#24
@32@0:8@16q24
@48@0:8@16q24@32@40
@40@0:8@16@24^@32
@"<HMBLocalDatabaseDelegate>"
v32@0:8@"HMBCloudPushHandler"16@"NSString"24
v32@0:8@"HMBCloudPushHandler"16@"CKNotification"24
v32@0:8@"HMBCloudPushHandler"16@"NSDictionary"24
@80@0:8@16@24@32@40@48@56@64@72
v32@0:8@16q24
@28@0:8q16B24
v28@0:8@16B24
B32@0:8@16@?24
@"<HMBCloudDatabaseDelegate>"
@"HMBCloudDatabaseConfiguration"
@"<HMBCloudDatabaseDataSource>"
@"HMBCloudDatabaseStateModel"
@"HMBCloudCredentialsAvailabilityListener"
@36@0:8@16i24@28
@"HMBModelField"
B52@0:8^{sqlite3_stmt=}16@24i32Q36^@44
@56@0:8@16@24@32@40Q48
@"NSMutableOrderedSet"
@48@0:8@16@24@32@?40
@"HMBLocalSQLQueryTableQueryAll"
@24@0:8@?16
@32@0:8@16@?24
@"<HMBQueryableModelFieldCoder>"
@56@0:8@16@24@32Q40@48
v24@0:8#16
@36@0:8@16B24@28
@44@0:8@16B24@28@36
@72@0:8@16@24@32Q40@48@56@64
@48@0:8@16Q24@32@40
@64@0:8Q16Q24@32@40@48@56
B32@0:8Q16^@24
@"NSData"24@0:8@"<HMBQueryableModelFieldCoder>"16
@"<HMBQueryableModelFieldCoder>"24@0:8@"NSData"16
@"NSString"24@0:8@"NSData"16
@28@0:8@16B24
@"CKReference"
@"CKUserIdentityLookupInfo"
@48@0:8^{sqlite3_stmt=}16^B24^@32^@40
B40@0:8^{sqlite3_stmt=}16@24^@32
@64@0:8@16@24@32Q40@48Q56
@104@0:8Q16@24@32@40Q48@56@64@72Q80@88@96
@40@0:8@16Q24Q32
v28@0:8B16@20
@56@0:8@16q24@32@40@48
@40@0:8@16q24@32
@"CKRecordZoneID"
v56@0:8Q16@24@32@40@48
v32@0:8@"HMBLocalZone"16@"HMBProcessingResult"24
v32@0:8@"HMBLocalZone"16@"NSString"24
@32@0:8#16@24
@32@0:8#16@?24
@40@0:8#16@24@?32
@32@0:8@16#24
v32@0:8@"NSString"16@"NSString"24
@"<HMBAPSConnectionDelegate>"16@0:8
v24@0:8@"<HMBAPSConnectionDelegate>"16
v24@0:8@"NSArray"16
v48@0:8@16@24@32@40
v48@0:8@"<HMBAPSConnection>"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"<HMBAPSConnection>"16@"NSData"24
v32@0:8@"<HMBAPSConnection>"16@"APSIncomingMessage"24
@"<HMBAPSConnection>"
@48@0:8@16@24Q32Q40
@24@0:8B16B20
@28@0:8B16@20
@36@0:8B16@20@28
@"HMBLocalSQLContextInputBlock"
Q48@0:8Q16@24@32^@40
Q56@0:8Q16@24Q32@40^@48
B80@0:8Q16@24Q32@40Q48Q56@64^@72
v32@0:8d16@?24
v32@0:8d16@?<v@?>24
v36@0:8@16@24B32
d16@0:8
B24@0:8q16
@56@0:8@16Q24Q32Q40^@48
B64@0:8@16@24@32Q40Q48^@56
q32@0:8q16^@24
B32@0:8q16^@24
@24@0:8r*16
@24@0:8^{sqlite3_stmt=}16
Q32@0:8^{sqlite3_stmt=}16^@24
B32@0:8r*16^@24
B40@0:8^{sqlite3_stmt=}16^@24@?32
B48@0:8^{sqlite3_stmt=}16Q24^@32@?40
^{sqlite3=}16@0:8
v24@0:8^{sqlite3=}16
^{sqlite3=}
@"HMFUnfairLock"
@44@0:8@16B24^@28@?36
@44@0:8@16B24#28^@36
@28@0:8^{sqlite3_stmt=}16i24
@32@0:8@16r*24
@24@0:8^{sqlite3=}16
@32@0:8^{sqlite3=}16r*24
@20@0:8i16
@40@0:8@16^Q24^@32
@40@0:8@16#24^@32
@32@0:8#16^@24
B40@0:8@16^@24@?32
Q40@0:8@16@24^@32
B40@0:8Q16@24^@32
Q40@0:8Q16Q24^@32
@40@0:8Q16Q24^@32
Q56@0:8Q16Q24@32@40^@48
Q80@0:8Q16Q24Q32@40@48Q56@64^@72
Q56@0:8Q16Q24Q32@40^@48
B80@0:8Q16Q24Q32@40@48Q56@64^@72
B48@0:8Q16Q24@32^@40
@56@0:8Q16Q24Q32Q40^@48
B40@0:8Q16Q24^@32
@40@0:8Q16@24^@32
Q120@0:8Q16@24@32@40@48@56Q64@72@80Q88@96@104^@112
B48@0:8Q16@24@32^@40
B64@0:8Q16@24Q32@40@48^@56
B56@0:8Q16Q24@32@40^@48
B56@0:8Q16@24@32Q40^@48
@48@0:8Q16@24Q32^@40
@56@0:8Q16@24@32Q40^@48
B56@0:8Q16@24Q32^@40@?48
@32@0:8Q16Q24
@"CKShareParticipant"
@"HMBShareInvitation"
@40@0:8@?16@?24@?32
@32@0:8@?16@?24
q24@0:8^@16
HMBPBO.m
HMBPBO.label
HMBPBO.enqueue
HMBPBO.mn
HMBPBO.mp
HMBPBO.qos
HMBPBO.mi
HMBPBO.r
HMBPBO.dca
HMBPBO.rmc
HMBPBO.dmc
Message Name
Message Identifier
Label
Enqueue Mirror Output
Roll Back
Disallow Cellular
Require Model Creation
Disallow Model Creation
Parent
Detail
<NO LOCK>
EXPLAIN QUERY PLAN 
@"HMBSQLStatementQueryPlanTuple"16@?0@"NSArray"8
zoneID
needsZoneCreation
needsZoneDeletion
subscriptionsData
rebuilderStatus
share
_sequence_offset
You must override %@ in a subclass
HMBUI.u
HMBUI.t
HMBUI.c
HMBUI.czi
HMBUI.dc
HMBShareInvitation
Share URL
Token
Context
Cloud Zone ID
Date Created
@"HMFTimer"24@?0d8Q16
Check manatee availability
v24@?0@"CKAccountInfo"8@"NSError"16
CloudCredentialsAvailabilityListener
Type
Options Data
<not nil>
<nil>
zoneRowBindOffset != nil
<RowItem: %lu  eid: %@  ed: %@  encoding: %lu data: %@>
model
__processRecords
delete
update/insert
v24@?0@"HMBMirrorOutputResult"8@"NSError"16
HMBLocalSQLContextInputBlock.%@
Block Row
Zone Row
%lu/%lu
HMBLocalSQLContextInputBlock
cloudDatabase
state
_database
sa00
sa01
ebl00
ebl01
parent_record
HMBCloudZone Startup Fetch
HMBCloudZone First Fetch
v24@?0@8@"NSError"16
modelContainer
HMBCloudZoneShareModel
HMBCloudZoneShareParticipantModel
HMBCloudZoneRebuilderModel
CloudZone
Zone ID
single-part push: %@
about to update: %@
about to remove: %@
v24@?0@"CKRecordID"8@"NSError"16
deferred
failed with error: %@
success
v16@?0@"NSArray"8
com.apple.willowd
containerID
Container ID
Bundle ID
Manatee Container
Default Operation Configuration
Cannot create a direct instance of %@. Use a subclass instead
options
Model
Options
Mirror Output
v32@?0@"HMBModelQuery"8Q16^B24
modelField
v32@?0@"NSString"8Q16^B24
v32@?0@8Q16^B24
self.finalized != NO
self.finalized == NO
v32@?0@"HMBSQLQueryStatement"8Q16^B24
queryable_%@
_store_id  INTEGER NOT NULL REFERENCES store_v2 (id) ON DELETE RESTRICT
_record_id INTEGER NOT NULL
%@ BLOB
DROP TABLE IF EXISTS %@;
DELETE FROM index_sentinel WHERE type = '%@';
CREATE TABLE %@ (%@, CONSTRAINT fk_%@ FOREIGN KEY (_record_id) REFERENCES record_v2 (id) ON DELETE CASCADE);
CREATE UNIQUE INDEX IF NOT EXISTS %@ ON %@ (_store_id, _record_id);
qu_%@
@16@?0@"HMBModelQuery"8
DROP INDEX %@
CREATE INDEX IF NOT EXISTS %@ ON %@ (_store_id, _record_id)
CREATE INDEX IF NOT EXISTS %@ ON %@ (%@)
?%lu
DELETE FROM %@ WHERE _store_id=?1
DELETE FROM %@ where _record_id=?1
INSERT OR REPLACE INTO %@ (_store_id, _record_id, %@) values(?1, ?2, %@)
SELECT _record_id, %@ FROM %@ WHERE _store_id = :_store_id AND _record_id > :_sequence_offset ORDER BY _record_id LIMIT (%lu)
info
Cannot update a model with a nil hmbModelID or hmbParentModelID
@16@?0#8
LocalZone
<HMBLocalZone: %@/%@>
ZCRS.m
ZCRS.se
Startup
Lost Key
Beginning Zone Recreate Delay
Wating Before Zone Recreate
Zone Recreate
Monitor Upload
State Upload
Complete
<UNKNOWN %lu>
Invalid
In Progress
Key Status
Rebuild State
Message
modelTypeBindOffset != nil
v24@?0@"HMBLocalSQLContextRowRecord"8^B16
<HMBLocalZoneIDUnshared: %@>
HMBLocalZoneIDUnshared
Record
551E3F88-0C11-4402-A486-6D1EB759AADD
shouldLogPrivateInformation
decoded
message
expecting internal storage to be a NSData, but it's a %@
container
pathStack
errorText
(%@ not a valid type within an aggregate type)
[%lu]
(key must be of string type (is %@))
hmbModelID and hmbParentModelID must be set prior to encoding
hmbDataVersion must be set prior to encoding
Cannot encode value of type %@ for property '%@' requring NSObject type
/%@ (property could not be validated): %@
v32@?0@"NSString"8@16^B24
<%@ uuid:%@ version:%@>
<UNSET>
%@/%@
<NULL>
<NSArray: %lu items>
<NSDictionary: %lu items>
<NSData: %@>
%@:%@
 (inferred)
  uuid: %@
  parent: %@
  version: %@%s
 (override)
 (default)
 (read-only)
  %@%@%@: %@
B16@?0@"NSString"8
@"NSString"16@?0@"NSString"8
%@.%@/%@
v@:@
values: (%@%@)
  version: %@
  %@ (read-only) (unsupported): %@
@"HMFVersion"24@?0@"NSString"8@"NSData"16
@"NSData"24@?0@"NSString"8@"HMFVersion"16
Property for parameter %@ was supplied as %@, but was expected to be %@.
Property for parameter %@ was supplied as %@, but was expected to be <UNKNOWN>.
HMBShareUserID.CodingKey.UserRecordID
userRecordID
HMBShareUserID
HMB.u
HMB.d
Upload Streaming Asset
Download Streaming Asset
encodingContext
<%lu: %@>
<%lu.%@>
-[HMBCloudDatabase(CKCode) peformCodeOperationWithServiceName:functionName:request:responseClass:]
v16@?0@"CKRequestInfo"8
v24@?0@"PBCodable<CKCodeOperationMessageMutation>"8@"NSError"16
Rebuilder has not been started up yet.
Not starting up as a mirror. Ignoring rebuild steps.
Received notification that zone has lost keys.
Attempting to acquire lock on zone.
Failed to find sentinel model.
Failed to monitor sentinel due to error: %@
Sentinel has been marked as complete.
No change observed in sentinel.
Change observed in sentinel %@ -> %@
v16@?0@"HMBCloudZoneRebuilderModel"8
Watchdog fired while monitoring the upload.
ZoneRebuilder
<NON-NULL>
localZone
cloudZone
Rebuild Complete Fetch.
Delaying rebuild for %lu usec
Preparing to begin lock acquisition.
Rebuild found complete at start of check lock acquire.
Continue monitoring of upload (token change %@ -> %@)
self
Unable to fetch rebuild model: %@
Zone appears removed by the user.
Failed to fetch rebuild model with non-zone related failure: %@
Lost pointer to cloudZone
Lost pointer to cloudDatabase
Acquired zone lock for rebuild.
Failed to acquire lock due to sentinel model push failure: %@
localCloudZone
operationQueue
Iteration of rows failed: %@
Failed recovery push with error: %@
Failed recovery push due to conflicts.
v24@?0@"CKRecord"8^B16
Successfully completed recovery.
Failed recovery push with error (entering back into Holdoff): %@
Going to try to rebuild again.
Waiting for a rebuild.
Came up in Manatee Key Loss. Going to try to blow things away and fix them.
Don't have keys, waiting for someone else to rebuild the zone.
Unable to push sentinel model due to some other issue. Letting startup continue normally.
Startup with missing manatee key.
Startup with completed sentinel model.
v16@?0@"CKRecord"8
4.0.0
1.0.0
[modelClass isSubclassOfClass:[HMBModel class]]
0.0.0
expecting a versioning key named %@ but one does not exist
inLocalZone
inMirror
remapped (or explicit map) is not a subclass of HMBModel (%@ is not a sub-class of HMBModel)
Cannot encode value of type %@ for property '%@' because it does not conform to HMBModelObjectCoder
Failed to encode value %@ for property '%@': %@
underlyingError
should conform to HMBModelObjectCoder (but storage class for property %@ does not)
ModelContainer
4C636B6B-9784-4D02-9E47-5A5259B3BAF2
uniqueToken
hasCompleted
Zone believed to be functional.
Lost key on shared zone.
HMBCID.s
HMBCID.c
HMBCID.n
HMBCID.m
759390E3-198F-48EB-AD00-31296DACBBA6
%@.%@.%@
Name
Model ID
participant
Conflicted record resolution
@"NAFuture"16@?0@"CKShareMetadata"8
com.apple.HomeKitBackingStore.LocalDatabase
@"HMBLocalZone"48@?0@"HMBLocalDatabase"8@"<HMBLocalZoneID>"16Q24@"HMBLocalZoneConfiguration"32@"<HMBMirrorProtocol>"40
HMBLocalDatabase
@"NAFuture"16@?0@"HMBCloudZonePullResult"8
@"NAFuture"16@?0@"HMBProcessingResult"8
%s (%@)
failed mirror input creation
v32@?0@"CKRecordID"8@"CKRecord"16@"NSError"24
v24@?0@"CKRecordID"8@"NSString"16
v44@?0@"CKRecordZoneID"8@"CKServerChangeToken"16@"NSData"24B32@"NSError"36
failed (commit).
A089A5B9-6D32-4A0E-B611-0492B7D9F3D5
localDatabase
stateZone
databaseStateModelsByScope
zoneStateModels
credentialsAvailabilityListener
dataSource
_publicDatabaseState
_privateDatabaseState
_sharedDatabaseState
@"HMBCloudZone"32@?0@"HMBCloudDatabase"8@"HMBCloudZoneConfiguration"16@"HMBCloudZoneStateModel"24
configuration
v24@?0@"NSNull"8@"NSError"16
Fetch due to Subscription Push
v24@?0@"NSNumber"8^B16
Database APS Notification
Record Zone APS Notification
updating zone: %@
CloudDatabase
Container
v24@?0@"NSString"8@"NSError"16
DBChangeSubscription
v24@?0@"NSArray"8@"NSError"16
v32@?0@"HMBCloudZoneID"8@"HMBCloudZoneStateModel"16^B24
v24@?0@"HMBCloudZoneID"8^B16
__administrativeFetch_block_invoke
starting process of results.
v16@?0@"NSSet"8
__fetchAllCloudZones
v32@?0@"CKRecordZoneID"8@"NSError"16^B24
@"HMBCloudZoneID"16@?0@"CKRecordZoneID"8
__modifyRecordZoneOperation
v32@?0@"NSArray"8@"NSArray"16@"NSError"24
_store_id
_model_type
<HMBQueryEncoder: %@ / %lu %@>
modelClassNameOffset != nil
_parent_uuid
parentModelIDOffset != nil
parentModelIDOffset
_type
modelClassNameOffset
v32@?0@"HMBLocalZoneQueryResultColumnTuple"8Q16^B24
v16@?0@8
operation.future
HMBShareOperationErrorDomain
Share Operation Retry
HMBShareOperation
self.modelClass == modelClass
SELECT %@ FROM queryable_%@ %@
Failed to prepare statement: %@
The query statement's SQL contains an argument named '%@' which does not exist as an argument in the query's argument dictionary: %@
The query statement's SQL contains an argument for a property named '%@' which does not exist as a property on %@: %@
v32@?0@"NSString"8@"NSNumber"16^B24
The query's argument dictionary contains an argument named '%@' which does not exist as an argument in the query statement's SQL: %@
v32@?0@"NSString"8@"HMBModelQueryArgument"16^B24
<HMBModelUnindexedQuery class: %@ query: '%@'>
Unknown
HMBSQLStatement.explainStatements
AND _record_id > :_sequence_offset ORDER BY _record_id ASC
AND _record_id < :_sequence_offset ORDER BY _record_id DESC
WHERE %@ AND _store_id = :_store_id %@ LIMIT (%lu)
_record_id
statement
indexedColumns
qi_%@_%@
INDEX %@
B16@?0@"HMBSQLStatementQueryPlanTuple"8
v32@?0@"HMBSQLStatementQueryPlanTuple"8Q16^B24
hasAnyStatements
WHERE _store_id = :_store_id AND %@
sequenceArgument
[sequenceArgument.propertyName isEqualToString:indexedProperties.lastObject]
WHERE _store_id = :_store_id AND %@ LIMIT (%lu)
maximumRowsReturned
qf_%@_%@
WHERE _store_id = :_store_id AND %@ LIMIT (1)
count('X')
encodedArgumentValueOrNull
argumentField
Output Block Row
Record Row
Query Table
External ID
External Data
<HMBLocalZoneOutputRecords: %lu options: %@>
v32@?0@"HMBLocalSQLContextRowRecord"8Q16^B24
HMB.m
<MALFORMED UUID: %@>
HMB.a
HMB.r
Reference
Action
cloudZoneEncodingContext
validate
none
<unknown %lu>
recordID
Record ID
Client Record
Server Record
Ancestor Record
HMBUIC.pci
HMBUIC.sgwa
HMBUIC.li
User Client Identifier
Should Grant Write Access
Lookup Info
previousModel
Previous Model
modelID
@"NAFuture"16@?0@"NSSet"8
modelIDs
models
recordIDs
v32@?0@"NSNumber"8@16^B24
@"NSSet"16@?0@"HMBCloudZoneFetchRecordsContext"8
@"CKRecord"16@?0@"CKRecordID"8
@"NAFuture"16@?0@"NSDictionary"8
__fetchRecordsWithRecordIDs
succeeded
Model Encoding
Model Data
Model Schema
Model Type
Push Encoding
Push Data
Push Block Row
Updating rebuild state for zone %@: %@
C8AE15D1-FA59-4811-8437-6F8BE2815E1E
FDB10518-1C8B-440B-837E-489902B4E477
E0AF74A3-368B-4E7B-B4B8-131073EAA5A9
HMBCZID.z
containerID != nil
zoneID != nil
scope != 0
name != nil
modelID != nil
[zoneID.ownerName isEqualToString:CKCurrentUserDefaultName] == NO
%@.%@.%@/%@
DBSubscription_%@.%@%@
ZoneSubscription_%@.%@.%@%@
__fetchSubscriptions
cloud push chunk failed: %@
updating record %@
push mark as completed failed: %@
Post-process: %@
v16@?0@"HMBProcessingResult"8
v16@?0@"HMBCloudZoneRecordPushResult"8
v32@?0@"NSString"8@"HMBModelField"16^B24
v24@?0@"HMBCloudZonePushResult"8@"NSError"16
__performCloudPush
Q16@?0@"NSDictionary"8
table
tableContext == self.sql
v24@?0@"HMBModel"8^B16
com.apple.homed.aps
com.apple.icloud-container.
v16@?0@"<HMBCloudPushObserver>"8
CloudPushHandler
HMBLocalSQLContextOutputBlock.%@
committing block.
HMBLocalSQLContextOutputBlock
Rebuild
updatedRecords
deletedRecordIDs
conflicts
@"NSString"16@?0@"CKShareParticipant"8
Create Share Model
@"NAFuture"16@?0@"CKShare"8
@"NAFuture"8@?0
Leave Cloud Share
Full re-fetch for missing share model
@"NAFuture"16@?0@"NSNull"8
@"NAFuture"16@?0@"HMBCloudZoneRecordPushResult"8
B16@?0@"CKRecord"8
Fetch Owner Participant Cloud Share ID
Fetch Current Participant Cloud Share ID
Fetch Cloud Share ID For Client Identifier
Fetch Invitation
@"NAFuture"16@?0@"CKShareParticipant"8
B16@?0@"CKShareParticipant"8
Set Write Access Enabled
Revoke Share
@"NSUUID"16@?0@"HMBCloudZoneShareModel"8
v24@?0@"HMBCloudZoneShareParticipantModel"8^B16
@"HMBShareParticipant"16@?0@"HMBCloudZoneShareParticipantModel"8
Delete extraneous participant models
serverChangeToken
CONSTRAINT fk_queryable_
FOREIGN KEY (_record_id) REFERENCES record_v2 (id) ON DELETE CASCADE
[%@]
<%@, %@>
v32@?0@"NSString"8@"HMBLocalSQLContextQueryIndex"16^B24
v32@?0@"NSString"8@"HMBLocalSQLContextQueryTable"16^B24
v24@?0#8^B16
v24@?0@"NSString"8^B16
SELECT master.tbl_name, master.name, index_info.seqno, index_info.name FROM sqlite_master AS master, PRAGMA_INDEX_INFO(master.name) AS index_info WHERE master.type = 'index' AND master.tbl_name like 'queryable_%' ORDER BY master.tbl_name, master.name, index_info.seqno
SELECT master.name, table_info.name, table_info.type, master.sql FROM sqlite_master AS master, PRAGMA_TABLE_XINFO(master.name) AS table_info WHERE master.name LIKE 'queryable%' ORDER BY master.name, table_info.name
thisTable
thisColumn
thisType
BLOB
v32@?0@"NSArray"8Q16^B24
@24@?0@"NSString"8@"NSSet"16
thisIndex
columnSequence != nil
columnName != nil
v32@?0@"NSString"8@"NSArray"16^B24
v32@?0@"NSString"8@"NSMutableDictionary"16^B24
__fetchParticipant
v16@?0@"CKShareParticipant"8
finished
v16@?0@"NSError"8
__fetchShareMetadata
v32@?0@"NSURL"8@"CKShareMetadata"16@"NSError"24
__acceptInvitation
v32@?0@"CKShareMetadata"8@"CKShare"16@"NSError"24
__fetchUserRecord
v32@?0@"CKRecord"8@"CKRecordID"16@"NSError"24
v24@?0@"NSDictionary"8@"NSError"16
inputBlock
HMBLocalZoneInput
%@/%lu
Zone Name
@"NSUUID"16@?0@"HMBLocalSQLContextRowRecord"8
%@.%@
%@/%@/%@/%@/%@
None
DeleteSelf
Validate
<UNKNOWN: %lu>
1.2.11
<%lu bytes>
B16@?0@"NSError"8
encodedOPACK
decodedOPACK
<NULL STRING>
data
<MALFORMED NUMBER: %@>
<MALFORMED INTERVAL: %@>
@"NSString"24@?0@"<NSCopying>"8@16
%@ : %@
__performCloudPull
v16@?0@"CKRecordZoneID"8
v28@?0@"CKServerChangeToken"8B16@"NSError"20
HM.encoding
HM.device
HM.type
HM.modelID
HM.parentModelID
k%02lu
-shm
-wal
memory
_finalized
!_finalized
PRAGMA user_version = %ld;
BEGIN;
COMMIT;
ROLLBACK;
v8@?0
ReadOnly
extcode
text
statement cannot contain nameless parameters (%ld is nameless)
bind parameter %s is not of a recognized type %@ is not a (NSNull, NSData, NSString, or NSNumber)
column %ld is of SQLite3 type %ld (not recognized)
NULL SQLite3 error for context
NULL statement
NULL SQLite3 error for statement
NULL SQLite3 statement
NULL SQLite3 error for status
PRAGMA user_version;
PRAGMA journal_mode=WAL;
:memory:
PRAGMA foreign_keys = ON;
v32@?0@"NSArray"8@"<HMBSearchableEntry>"16^B24
@"NSError"16@?0@"HMBSQLContext"8
INSERT INTO store_v2 (label, identifier_data, replication_data) VALUES (?1, ?2, ?3)
DELETE FROM store_v2 WHERE id=?1;
SELECT id, label, identifier_data, replication_data FROM store_v2 WHERE id=?1;
SELECT id, label, identifier_data, replication_data FROM store_v2;
UPDATE store_v2 SET replication_data=?2 WHERE id=?1;
INSERT INTO block_v2 (store_v2_id, type) VALUES (?1, ?2);
SELECT id, type, options_data FROM block_v2 WHERE id=?1;
DELETE FROM block_v2 WHERE id=?1;
DELETE FROM block_v2 WHERE store_v2_id=?1;
UPDATE block_v2 SET options_data=?2 WHERE id=?1;
SELECT id, options_data FROM block_v2 WHERE store_v2_id=?1 AND type=?2 AND options_data IS NOT NULL ORDER BY id;
SELECT id, type, options_data FROM block_v2 WHERE store_v2_id=:_store_id AND id>:_sequence_offset AND (type=1 OR type=2) AND options_data IS NOT NULL ORDER BY id LIMIT (%ld)
SELECT id, type, options_data FROM block_v2 WHERE store_v2_id=:_store_id AND id<=:_sequence_offset AND type=3 ORDER BY id DESC LIMIT (%lu)
DELETE FROM block_v2 WHERE store_v2_id=?1 AND options_data IS NULL;
INSERT INTO transaction_v2 (store_v2_id, block_id, type, external_id, external_data, model_encoding, model_data) VALUES (?1, ?2, ?3, ?4, ?5, ?6, ?7);
INSERT INTO transaction_v2 (store_v2_id, block_id, type, external_id, model_encoding, model_data) SELECT ?1, ?2, ?3, COALESCE(external_id, randomblob(16)), 0, uuid FROM record_v2 WHERE store_v2_id = ?1 AND type = ?4 AND model_data IS NOT NULL;
INSERT INTO transaction_v2 (store_v2_id, block_id, type, external_id, model_encoding, model_data) SELECT ?1, ?2, ?3, COALESCE(external_id, randomblob(16)), 0, uuid FROM record_v2 WHERE store_v2_id = ?1 AND uuid = ?4 AND model_data IS NOT NULL;
INSERT INTO transaction_v2 (store_v2_id, block_id, type, external_id, model_encoding, model_data) SELECT ?1, ?2, ?3, COALESCE(external_id, randomblob(16)), 0, uuid FROM record_v2 WHERE store_v2_id = ?1 AND parent_uuid = ?4 AND model_data IS NOT NULL;
INSERT OR REPLACE INTO transaction_v2 (store_v2_id, block_id, type, external_id, external_data, model_encoding, model_data) VALUES (?1, ?2, ?3, ?4, ?5, ?6, ?7);
DELETE FROM transaction_v2 WHERE id=?1;
DELETE FROM transaction_v2 where block_id=?1;
DELETE FROM transaction_v2 WHERE store_v2_id=?1;
DELETE FROM transaction_v2 WHERE store_v2_id=?1 AND type=?2 AND external_id=?3;
SELECT id, external_id, external_data, model_encoding, model_data FROM transaction_v2 WHERE  block_id=?1 AND id>?2 ORDER BY id LIMIT ?3;
SELECT id, external_id, external_data, model_encoding, model_data FROM transaction_v2 WHERE  block_id=?1;
DELETE FROM transaction_v2 WHERE block_id IN (SELECT id FROM block_v2 WHERE store_v2_id=?1 AND options_data IS NULL)
DELETE FROM transaction_v2 WHERE block_id IN (SELECT id FROM block_v2 WHERE store_v2_id=?1 AND type=?2 AND options_data IS NULL)
INSERT INTO record_v2                                         (store_v2_id, external_id, external_data, uuid, parent_uuid, type, model_encoding, model_data, model_schema, push_encoding, push_data, push_block_id)                                         VALUES (?1, ?2, ?3, ?4, ?5, ?6, ?7, ?8, ?9, ?10, ?11, ?12);
UPDATE record_v2 SET model_encoding=?2, model_data=?3, model_schema=?4 WHERE id=?1
UPDATE record_v2 SET external_id=?2, external_data=?3 WHERE id=?1
UPDATE record_v2 SET external_data=?3 WHERE store_v2_id=?1 AND external_id=?2
UPDATE record_v2 SET external_data=?3 WHERE store_v2_id=?1 AND uuid=?2
UPDATE record_v2 SET push_encoding = ?2, push_data = ?3, push_block_id = ?4 WHERE id = ?1;
UPDATE record_v2 SET push_encoding = ?3, push_data = ?4, push_block_id = ?5 WHERE store_v2_id = ?1 AND uuid=?2;
UPDATE record_v2 SET push_encoding = 0, push_data = NULL, push_block_id = NULL WHERE id=?1 AND push_block_id=?2;
UPDATE record_v2 SET push_encoding = 0, push_data = NULL, push_block_id = NULL WHERE push_block_id=?1
UPDATE record_v2 SET type = ?2, model_schema = ?3 WHERE id = ?1
DELETE FROM record_v2 WHERE id=?1;
DELETE FROM record_v2 WHERE id=?1 and push_block_id=?2;
DELETE FROM record_v2 WHERE store_v2_id=?1 AND uuid=?2;
DELETE FROM record_v2 WHERE store_v2_id=?1 AND external_id=?2;
DELETE FROM record_v2 WHERE store_v2_id=?1;
DELETE FROM record_v2 WHERE store_v2_id = ?1 AND (model_encoding = 0 OR model_data IS NULL) AND (push_block_id IS NULL OR push_block_id NOT IN (SELECT id FROM block_v2))
SELECT uuid FROM record_v2 WHERE store_v2_id=?1 AND external_id=?2
SELECT record_v2.id, record_v2.external_id, record_v2.external_data, record_v2.model_encoding, record_v2.model_data, record_v2.model_schema, record_v2.type, record_v2.push_encoding, record_v2.push_data, record_v2.push_block_id, record_v2.uuid FROM record_v2 WHERE push_block_id=?1
SELECT record_v2.id, record_v2.external_id, record_v2.external_data, record_v2.model_encoding, record_v2.model_data, record_v2.model_schema, record_v2.type, record_v2.push_encoding, record_v2.push_data, record_v2.push_block_id, record_v2.uuid FROM record_v2 WHERE store_v2_id=?1 and uuid=?2
SELECT record_v2.id, record_v2.external_id, record_v2.external_data, record_v2.model_encoding, record_v2.model_data, record_v2.model_schema, record_v2.type, record_v2.push_encoding, record_v2.push_data, record_v2.push_block_id, record_v2.uuid FROM record_v2 WHERE store_v2_id=?1 and external_id=?2
SELECT record_v2.id, record_v2.external_id, record_v2.external_data, record_v2.model_encoding, record_v2.model_data, record_v2.model_schema, record_v2.type, record_v2.push_encoding, record_v2.push_data, record_v2.push_block_id, record_v2.uuid FROM record_v2 WHERE store_v2_id=?1 and parent_uuid=?2
SELECT record_v2.id, record_v2.external_id, record_v2.external_data, record_v2.model_encoding, record_v2.model_data, record_v2.model_schema, record_v2.type, record_v2.push_encoding, record_v2.push_data, record_v2.push_block_id, record_v2.uuid FROM record_v2 WHERE store_v2_id=?1 and type=?2
SELECT record_v2.id, record_v2.external_id, record_v2.external_data, record_v2.model_encoding, record_v2.model_data, record_v2.model_schema, record_v2.type, record_v2.push_encoding, record_v2.push_data, record_v2.push_block_id, record_v2.uuid FROM record_v2 WHERE store_v2_id=?1 AND parent_uuid=?3 AND type=?2
SELECT record_v2.id, record_v2.external_id, record_v2.external_data, record_v2.model_encoding, record_v2.model_data, record_v2.model_schema, record_v2.type, record_v2.push_encoding, record_v2.push_data, record_v2.push_block_id, record_v2.uuid FROM record_v2 WHERE store_v2_id=?1
SELECT record_v2.id, record_v2.external_id, record_v2.external_data, record_v2.model_encoding, record_v2.model_data, record_v2.model_schema, record_v2.type, record_v2.push_encoding, record_v2.push_data, record_v2.push_block_id, record_v2.uuid FROM record_v2 WHERE id=?1
SELECT record_v2.id, record_v2.external_id, record_v2.external_data, record_v2.model_encoding, record_v2.model_data, record_v2.model_schema, record_v2.type, record_v2.push_encoding, record_v2.push_data, record_v2.push_block_id, record_v2.uuid FROM record_v2 WHERE store_v2_id=:_store_id AND id>:_sequence_offset ORDER BY id LIMIT (%lu)
SELECT record_v2.id, record_v2.external_id, record_v2.external_data, record_v2.model_encoding, record_v2.model_data, record_v2.model_schema, record_v2.type, record_v2.push_encoding, record_v2.push_data, record_v2.push_block_id, record_v2.uuid FROM record_v2 WHERE store_v2_id=:_store_id AND type=:_model_type AND id>:_sequence_offset ORDER BY id LIMIT (%lu)
SELECT record_v2.id, record_v2.external_id, record_v2.external_data, record_v2.model_encoding, record_v2.model_data, record_v2.model_schema, record_v2.type, record_v2.push_encoding, record_v2.push_data, record_v2.push_block_id, record_v2.uuid FROM record_v2 WHERE store_v2_id=:_store_id AND parent_uuid=:_parent_uuid AND id>:_sequence_offset ORDER BY id LIMIT (%lu)
SELECT record_v2.id, record_v2.external_id, record_v2.external_data, record_v2.model_encoding, record_v2.model_data, record_v2.model_schema, record_v2.type, record_v2.push_encoding, record_v2.push_data, record_v2.push_block_id, record_v2.uuid FROM record_v2 WHERE store_v2_id=:_store_id AND parent_uuid=:_parent_uuid AND type == :_type AND id>:_sequence_offset ORDER BY id LIMIT (%lu)
INSERT INTO index_sentinel (store_id, type) VALUES(?1, ?2);
DELETE FROM index_sentinel WHERE type = ?1;
DELETE FROM index_sentinel WHERE store_id = ?1;
SELECT COUNT('X') FROM index_sentinel WHERE store_id = ?1 and type = ?2;
^%@(?:|-shm|-wal)(\..*)?$
v32@?0@"NSString"8@"HMBLocalSQLQueryTable"16^B24
DELETE FROM transaction_v2
DELETE FROM record_v2
DELETE FROM block_v2
DELETE FROM index_sentinel
DELETE FROM store_v2
@"NSError"16@?0@"HMBLocalSQLContext"8
HMBLocalSQLContext
SELECT name FROM sqlite_master WHERE type = 'table' and name in ('zone_v2', 'zone_subscription_v2', 'db_subscription_v2', 'fetch_v2', 'queue_v2', 'scoreboard_v2', 'xact_v2', 'xact_block_v2')
zone_v2
zone_subscription_v2
db_subscription_v2
fetch_v2
queue_v2
scoreboard_v2
xact_v2
store_v2
block_v2
transaction_v2
record_v2
xact_block_v2
CREATE TABLE IF NOT EXISTS store_v2 (                               id                  INTEGER PRIMARY KEY AUTOINCREMENT,                label               STRING  NOT NULL,                                 identifier_data     BLOB UNIQUE NOT NULL,                             replication_data    BLOB                                              );
CREATE TABLE IF NOT EXISTS block_v2 (                               id                  INTEGER PRIMARY KEY AUTOINCREMENT,                store_v2_id         INTEGER NOT NULL CONSTRAINT fetch_store_v2_id_fkey REFERENCES store_v2 (id) ON DELETE RESTRICT,             type                INTEGER NOT NULL,                                 options_data        BLOB                                              );
CREATE TABLE IF NOT EXISTS transaction_v2 (                         id                  INTEGER PRIMARY KEY AUTOINCREMENT,                store_v2_id         INTEGER NOT NULL CONSTRAINT fetch_store_v2_id_fkey REFERENCES store_v2 (id) ON DELETE RESTRICT,             block_id            INTEGER NOT NULL CONSTRAINT transaction_v2_block_v2_id_fkey REFERENCES block_v2 (id) ON DELETE RESTRICT,             type                INTEGER NOT NULL,                                 external_id         BLOB    NOT NULL,                                 external_data       BLOB,                                             model_encoding      INTEGER NOT NULL,                                 model_data          BLOB                                              );
CREATE TABLE IF NOT EXISTS record_v2 (                              id                  INTEGER PRIMARY KEY AUTOINCREMENT,                store_v2_id         INTEGER NOT NULL CONSTRAINT record_v2_group_id_fkey REFERENCES store_v2 (id) ON DELETE RESTRICT,             uuid                BLOB    NOT NULL,                                 parent_uuid         BLOB    NOT NULL,                                 type                TEXT,                                             model_schema        BLOB,                                             external_id         BLOB,                                             external_data       BLOB,                                             model_encoding      INTEGER NOT NULL,                                 model_data          BLOB,                                             push_encoding       INTEGER NOT NULL,                                 push_data           BLOB,                                             push_block_id       INTEGER CONSTRAINT record_v2_block_v2_fkey REFERENCES block_v2 (id) ON DELETE RESTRICT             );
CREATE UNIQUE INDEX IF NOT EXISTS transaction_v2_ukey ON transaction_v2 (store_v2_id, type, external_id);
CREATE UNIQUE INDEX IF NOT EXISTS record_v2_external_store_v2_id_ukey ON record_v2 (store_v2_id, external_id);
CREATE UNIQUE INDEX IF NOT EXISTS record_v2_uuid_store_v2_id_ukey ON record_v2 (store_v2_id, uuid);
CREATE INDEX IF NOT EXISTS block_v2_store_type ON block_v2 (store_v2_id, type, id);
CREATE INDEX IF NOT EXISTS transaction_v2_block_id ON transaction_v2 (block_id, id);
CREATE INDEX IF NOT EXISTS record_v2_push_id ON record_v2 (push_block_id, id);
CREATE INDEX IF NOT EXISTS record_v2_store ON record_v2 (store_v2_id);
CREATE INDEX IF NOT EXISTS record_v2_store_uuid ON record_v2 (store_v2_id, uuid);
CREATE INDEX IF NOT EXISTS record_v2_store_parent_uuid ON record_v2 (store_v2_id, parent_uuid);
CREATE INDEX IF NOT EXISTS record_v2_store_type_parent_uuid ON record_v2 (store_v2_id, parent_uuid, type);
CREATE INDEX IF NOT EXISTS record_v2_store_external ON record_v2 (store_v2_id, external_id);
SELECT name FROM sqlite_master WHERE type = 'table'
HMBLZR.name
HMBLZR.token
HMBLocalZoneIDRow
@"NSError"16@?0^{sqlite3_stmt=}8
@"NSError"24@?0^{sqlite3_stmt=}8^B16
cloudID
lastAdministrativeFetch
HMBUI.cksp
HMBUI.ci
HMBUI.pi
CK Share Participant
Client Identifier
Pending Invitation
(self.externalRecordField != nil)
[classObj conformsToProtocol:@protocol(CKRecordValue)]
<HMBModelField class: %@
 optional: YES
 recordField: %@
 loggingVisibility: %ld
 defaultValue: %@
 readonlyVersion: %@
 unavailableVersion: %@
[value isKindOfClass:self.classObj]
self.encodeBlock
self.decodeBlock
self.descriptionBlock
@"NSData"16@?0@8
@16@?0@"NSData"8
@"NSString"16@?0@"NSData"8
default
redacted
debug
internallyRedacted
v16@?0@"NAPromise"8
@"NSString"16@?0@"CKRecordZoneSubscription"8
v16@?0@"NSNull"8
Not unregistering zone subscription %@ because it is not in our list of existing subscriptions: %@
B16@?0@"CKRecordZoneSubscription"8
zoneState
self.initialCloudSyncFuture.isFinished
B16@?0@"CKDatabaseSubscription"8
__modifySubscriptions
CREATE TABLE IF NOT EXISTS index_sentinel (                  store_id            INTEGER NOT NULL, type                TEXT NOT NULL, CONSTRAINT fk_index_sentinel FOREIGN KEY (store_id) REFERENCES store_v2 (id) ON DELETE CASCADE);
CREATE UNIQUE INDEX IF NOT EXISTS index_sentinel_unique ON index_sentinel (store_id, type);
%{public}@Deallocation called on %s without finalize.
%{public}@Unable to prepare SQL statement '%@': %@
%{public}@Prepared SQL statement: %s
%{public}@Unable to explain statement '%@': %@
%{public}@Failed to decode record from external data %@: %@
%{public}@Received -[handleZoneChangedNotification] on a HMBCloudZone without a rebuilder
%{public}@Saving updated rebuilder model: %@
%{public}@Failed to update rebuilder model: %@
%{public}@Received -[rebuild] on a HMBCloudZone without a rebuilder
%{public}@Rebuilder not allowed on zone.
%{public}@Re-Created rebuilder for zone (existed but had completed).
%{public}@Re-using rebuilder for zone.
%{public}@Created rebuilder for zone.
%{public}@Destroyed rebuilder for zone.
%{public}@Failed to decode subscriptions data %@: %@
%{public}@Failed to encode subscriptions %@: %@
%{public}@Failed to fetch additional items into query enumeration %@: %@
%{public}@Could not initialize from decoded shareURL: %@ token: %@ context: %@ cloudZoneID: %@ dateCreated: %@
%{public}@Will wait for keychain availability
%{public}@Will wait for Manatee availability
%{public}@Will reset and re-check Manatee availability
%{public}@Skipping re-check with should check: %@ manatee available future: %@
%{public}@%{public}@Fetching account info
%{public}@%{public}@Failed to fetch account info: %@
%{public}@%{public}@Fetched account info: %@
%{public}@%{public}@CloudKit account is not currently available; waiting for CKAccountChangedNotification to check again
%{public}@%{public}@Manatee is not currently available; waiting for CKAccountChangedNotification to check again
%{public}@%{public}@Account does not have valid credentials; waiting for CKAccountChangedNotification to check again
%{public}@%{public}@Manatee is available
%{public}@Handling CKAccountChangedNotification
%{public}@Handling CKIdentityUpdateNotification
%{public}@Handling keychain availability timer
%{public}@Notifying observers for model ID %@: %@
%{public}@Failed to delete null items/blocks: %@
%{public}@Rolling back block: %@
%{public}@Processing input block: %@
%{public}@Failed to delete zombie records: %@
%{public}@%{public}@Skipping mirror output push for model ID %@ and row %ld since the model is set to exclude cloud storage
%{public}@%{public}@Skipping mirror output push for updated model ID %@ and row %ld since the only set properties are excluded from cloud storage
%{public}@Mirror input external data was nil when comparing against existing external data
%{public}@Existing external data was nil when comparing against mirror input external data
%{public}@Failed to decode record from mirror input external data: %@
%{public}@Failed to decode record from existing external data: %@
%{public}@Comparing mirror input modification date %@ with existing record modification date %@
%{public}@lost self for processing block!
%{public}@%{public}@Beginning processing of block %lu
%{public}@%{public}@Failed to fetch block row %lu from %@: %@
%{public}@%{public}@Could not find block with row %lu
%{public}@%{public}@Block %lu has not been committed. Ignoring process request.
%{public}@%{public}@Failed to unarchive processing options from options data: %@
%{public}@%{public}@unable to cleanup corrupt block: %@
%{public}@%{public}@Failed to insert output block for zone row %lu: %@
%{public}@%{public}@Failed to clean up corrupt block: %@
%{public}@%{public}@Fetching objects for blockRow: %lu options: %@ lastItemRowID: %lu
%{public}@%{public}@Failed to fetch transaction entries for %lu / %@: %@
%{public}@%{public}@No more rows to process
%{public}@%{public}@Fetched %lu object(s) to process for blockRow: %lu options: %@
%{public}@%{public}@unable to determine modelID for %lu / %@: %@
%{public}@%{public}@unable to flush bogus row for %lu / %@: %@
%{public}@%{public}@unable to unarchive object for %lu / %@: %@
%{public}@%{public}@Found modelID %@ to %@ for row: %@
%{public}@%{public}@unable to find existing model with modelID %@ for %lu / %@: %@
%{public}@%{public}@Did not find existing record for modelID %@
%{public}@%{public}@Found existing record for modelID %@: %@
%{public}@%{public}@Unable to unarchive record row %lu: %@
%{public}@%{public}@Unable to remove corrupt record row %lu: %@
%{public}@%{public}@Not updating model because model creation is required: %@
%{public}@%{public}@Updating model %lu / %@ / %@
%{public}@%{public}@Unable to merge old record with new values %@ / %@: %@
%{public}@%{public}@Deleting model %lu / %@ / %@
%{public}@%{public}@Not creating model because model creation is disallowed: %@
%{public}@%{public}@Inserting model %@
%{public}@%{public}@No previous or updated value found for model with ID %@
%{public}@%{public}@Unable to encode object %@ (not attempting to push): %@
%{public}@%{public}@Unable to encode model %@: %@
%{public}@%{public}@Deleting record row: %lu %@ %@
%{public}@%{public}@Updating record row: %lu %@ %lu %@ %@ %@ %@ %@
%{public}@Received change from mirror while existing record row %lu has pending output push
%{public}@%{public}@Reseting pending output push data due to change from mirror
%{public}@%{public}@Inserting record row: %lu %@ %lu %@ %@ %@ %@ %@ %@
%{public}@%{public}@No record row to update or updated model to insert
%{public}@%{public}@unable to update / insert row for %lu / %@: %@
%{public}@%{public}@Sending deletion delegate callback for model: %@
%{public}@%{public}@Sending creation delegate callback for model: %@
%{public}@%{public}@Sending update delegate callback for model: %@
%{public}@%{public}@Unable to write rollback entries: %@
%{public}@%{public}@Failed to clean up processed block: %@
%{public}@%{public}@Sending processing complete callback with result: %@
%{public}@%{public}@Finished processing %lu row(s) for blockRow: %lu
%{public}@%{public}@Unable to encode options for output: %@
%{public}@%{public}@Unable to update block to enqueue output: %@
%{public}@%{public}@Unable to trigger output because self.mirror is nil
%{public}@%{public}@Triggering output for output block row %@ on %@
%{public}@[LocalZone] unable to cleanup rollback block: (lost self)
%{public}@%{public}@Rolling back block %@ due to push failure: %@
%{public}@%{public}@No block fetched! (no block found)
%{public}@%{public}@Rollback completed successfully for block %@.
%{public}@%{public}@Failed to get block for rollback: %@
%{public}@%{public}@Removing unused rollback block %@
%{public}@%{public}@Unable to cleanup rollback block: %@
%{public}@Unable to determine options for rollback block (%@)
%{public}@rollback options: %@
%{public}@invalidating push for block %lu
%{public}@Rollback is having issues. Expected to find a record row %lu / %@, but we didn't
%{public}@reverting record row %lu / %@ to %lu / %@
%{public}@Failed to rollback block: %@
%{public}@Failed to remove rollback block: %@
%{public}@%{public}@Creating Input Block for %@
%{public}@%{public}@Asked to add additional entries on invalid input block
%{public}@%{public}@Failed to add additional entries on input block: %@
%{public}@%{public}@Asked to update additional entries on invalid input block
%{public}@%{public}@Failed to update additional entries on input block: %@
%{public}@%{public}@Asked to commit invalid input block
%{public}@%{public}@Committing input block.
%{public}@%{public}@Failed to commit input block: %@
%{public}@%{public}@Successfully committed input block
%{public}@%{public}@Asked to abort invalid input block
%{public}@%{public}@Aborting input block
%{public}@%{public}@Failed to abort input block: %@
%{public}@%{public}@Successfully aborted input block
%{public}@Deallocating
%{public}@Received missing Manatee identity error on zone specific operation: %@
%{public}@Notifying delegate %@ for error on operation %@: %@
%{public}@Starting up with local zone: %@ configuration: %@
%{public}@Failed to start up with local zone because cloud database reference is nil
%{public}@Zone startup steps will begin after initial cloud sync future: %@
%{public}@Startup steps - enqueue pending pushes
%{public}@Successfully started up with private local zone
%{public}@Failed to start up with private local zone (will retry after delay): %@
%{public}@Retrying private cloud zone startup
%{public}@Successfully started up with public local zone
%{public}@Failed to start up with public local zone (will retry after delay): %@
%{public}@Retrying public cloud zone startup
%{public}@Starting up with model container: %@
%{public}@Successfully started up with model container
%{public}@Failed to start up with model container: %@
%{public}@Asked to handle unexpected updated model: %@
%{public}@Zone needs creation
%{public}@Destroying cloud zone: %@
%{public}@Enqueueing pending push for output blockRow: %lu
%{public}@Pushing with updates: %@ removes: %@
%{public}@%{public}@Pushing update for record: %@
%{public}@%{public}@Pushing removal for record: %@
%{public}@%{public}@Successfully saved record: %@
%{public}@%{public}@Failed to save record %@: %@
%{public}@%{public}@Successfully deleted record with ID: %@
%{public}@%{public}@Failed to delete record with ID %@: %@
%{public}@%{public}@CKModifyRecordsOperation failed: %@
%{public}@%{public}@CKModifyRecordsOperation will be retried
%{public}@%{public}@CKModifyRecordsOperation failed and cannot be retried: %@
%{public}@%{public}@CKModifyRecordsOperation succeeded
%{public}@%{public}@Starting CKModifyRecordsOperation with operationID: %@
%{public}@Cannot bifurcate, not enough items: (updates: %@, removes: %@)
%{public}@Record limit exceeded (updates: %lu, removes: %lu), bifurcating operation
%{public}@Both bifurcated pushes failed: %@, %@
%{public}@Bifurcated push succeeded, merging results
%{public}@Deallocation called on table for %@ without finalize.
%{public}@Finalized called on table %@ twice.
%{public}@finalizing table for: %@
%{public}@Creating index table for %@ model (fields: %@)
%{public}@Cleaning up sentinel table result (not fatal): %@
%{public}@Removing unused index: %@
%{public}@Unable to drop index: %@
%{public}@Creating generic index: %@
%{public}@Unable to create generic index %@: %@
%{public}@Column list for query %@ has duplicate values: %@
%{public}@Creating index: %@
%{public}@Unable to create index %@: %@
%{public}@Failed to remove sentinel table (not fatal): %@
%{public}@deallocating: %@
%{public}@Not starting up local zone that has already started up
%{public}@Starting up local zone
%{public}@Submitting models to add: %@ model IDs to remove: %@ options: %@
%{public}@Failed to archive options %@: %@
%{public}@Cannot update a model with a nil hmbModelID or hmbParentModelID: %@
%{public}@Failed to encode model %@: %@
%{public}@Submitted models with block row: %lu
%{public}@Removing models with parent model ID %@ and options %@
%{public}@Failed to encode processing options %@: %@
%{public}@Failed to stage removal for models with parent model ID %@: %@
%{public}@Removing models and descendant models with IDs: %@ depth: %lu options: %@
%{public}@Failed to stage removal for models and descendant models with IDs %@: %@
%{public}@Removing all models of types %@ and options %@
%{public}@Failed to stage removal for all models of types %@: %@
%{public}@Unable to decode model at row %lu %@: %@
%{public}@Not migrating unsupported model that has a generic representation: %@
%{public}@Updating model type to %@ and schema to %@ for previously-unsupported model: %@
%{public}@Unable to iterate through unknown models in zone: %@
%{public}@Dropping change for %@/%@ because property type %@ doesn't respond to nativeCKValueWithEncodingContext:error: but we think it conforms to HMBModelNativeCKWrapper
%{public}@Unable to encode wrapped and externally stored property %@/%@: %@
%{public}@Creating new cloud record %@ to store model %@.%@
%{public}@Updating existing cloud record %@ to store model %@.%@
%{public}@Unable to find version metadata field on record %@
%{public}@Unable to decode version metadata for record %@: %d
%{public}@Unable to determine encoding from version metadata: %@. Defaulting to %lu encoding
%{public}@Could not find data for encoding %lu in CKRecord %@
%{public}@CKRecord HMB metadata: %@
%{public}@Unable to uncompress data for %@
%{public}@Unable to decode data for %@
%{public}@Model of type %@ expected external record type %@ but cloud record has type %@
%{public}@Failed to decode value for %@ property: %@
%{public}@Unable to associate model (%@) with a nil container.
%{public}@Associating with a container with a different data version (%@ != %@).
%{public}@Cannot prepare model for container because modelID or parentModelID are missing: %@
%{public}@Cannot prepare model for container because hmbDataVersion is missing: %@
%{public}@Cannot prepare model %@ for container: %@
%{public}@Cannot prepare model for container: %@
%{public}@Model %@.%@.%@ suppressing validity check due to HMDBackingStoreModelObject backport.
%{public}@Model %@.%@.%@ is not valid for storage (modelID is not set).
%{public}@Model %@.%@.%@ is not valid for storage (parentModelID is not set).
%{public}@Model %@.%@.%@ is not valid for storage (field %@ is not set).
%{public}@Model %@ from cloud contained local only property %@, dropping
%{public}@Unable to merge %@ property of model class %@ (marked readonly for %@).
%{public}@[HMBModel hmbType] called without having an associated id<HMBModelContainer>.
%{public}@Unable to get value of property %@ from type %@ (no such property exists)
%{public}@Unable to get default value of property %@ from type %@ (no such property exists)
%{public}@Unable to determine externality of property %@ from type %@ (no such property exists)
%{public}@%@%@
%{public}@[HMBModel hmbMerge:from:] called with nil container on target (worrysome in production code).
%{public}@[HMBModel hmbMerge:from:] called with nil container on source (worrysome in production code).
%{public}@Cannot merge. This object %@ is not a sub-class of %@
%{public}@Merging two unknown model objects object using the default rules (%@ and %@)
%{public}@Merging two unknown model objects object using the default rules %@.
%{public}@Going to merge unknown (probably from future) model type %@ with %@.
%{public}@Going to merge, but things won't be better until our type flips. (%@ / %@)
%{public}@Unable to set property %@ of %@ from type %@ (no such property exists)
%{public}@Unable to set property %@ of %@ from type %@ (property is unavailable)
%{public}@Unable to set property %@ of %@ from type %@ (property is read-only)
%{public}@Unable to set property %@ of %@ from type %@ (does not match the expected type %@)
%{public}@Attempting to read property %@ on %@, unavailable in homed data version %@ (returning nil).
%{public}@Attempting to read property %@ from %@, does not appear defined.
%{public}@Attempting to write property %@ on %@, unwritable in homed data version %@.
%{public}@Asked to merge from unexpected object of class %@: %@
%{public}@Unexpectedly found %@ in CKRecord field for wrapped model value %@/%@ which we expected to be a CKStreamingAsset (ignoring).
%{public}@%{public}@CKCodeOperation finished with request UUID: %@
%{public}@%{public}@CKCodeOperation failed: %@
%{public}@%{public}@CKCodeOperation will be retried
%{public}@%{public}@CKCodeOperation succeeded
%{public}@%{public}@Starting %@ CKCodeOperation for service: %@ operationID: %@
%{public}@Lost self while starting up rebuild machine.
%{public}@Not transitioning to Lost Key state, already in an active rebuild state (%@).
%{public}@Received a request to begin rebuild but we are already in: %@.
%{public}@Fetch succeeded, but no record returned.
%{public}@Insufficient to transition out of Lost Key state.
%{public}@received notification, but failed to fetch model: %@
%{public}@Will not transition out of Lost Key state.
%{public}@Successfully fetched: %@
%{public}@Sentinel record indicates that zone is completely rebuilt.
%{public}@Sentinel record unique token did not change from %@
%{public}@Sentinel record unique token changed %@ -> %@
%{public}@Unexpectedly got a CKNotification when in state %@ (ignoring)
%{public}@Unexpectedly got a watchdog fire event in state %@
%{public}@Unexpectedly got a watchdog fire event from an unexpected timer.
%{public}@Unable to get operation queue to change state transition
%{public}@Lost self for cloud zone rebuild
%{public}@Requested state transition from %@ to %@ (finished: %@).
%{public}@Initial state transition to complete finishes waitForRebuildCompletion early.
%{public}@Attempting to transition into invalid state %@ (treating as Complete)
%{public}@Expected future to be in-progress but it's NOT!
%{public}@Notifying delegate %@ of updated rebuild status: %@
%{public}@Delegate does not respond to selector.
%{public}@Lost %@ while completing rebuild.
%{public}@Removing all records and resetting serverChangeToken.
%{public}@Unable to remove all records from local zone: %@
%{public}@Sentinel record has not mutated.
%{public}@Lost cloudDatabase for cloud zone rebuild
%{public}@Attempting to acquire lock.
%{public}@[HMBCloudZoneRebuildPrivate] lost self
%{public}@Lost %@
%{public}@Unable to create sentinel model for %@: %@
%{public}@Pushing sentinel record: %@
%{public}@Sentinel model push failed with fatal error: %@
%{public}@Sentinel record already exists on the server. Returning server version.
%{public}@Unable to find appropriate error for sentinel record push result: %@
%{public}@Unable to decode model from CK Record: %@
%{public}@Record was not expected type (got %@)
%{public}@Failed to encode sentinel model: %@
%{public}@Waiting %.2f seconds for an expected cloud push.
%{public}@Lost %@ for cloud zone rebuild
%{public}@unable to decode model from row %lu: %@
%{public}@unable to re-encode model %@ for cloud: %@
%{public}@unable to remove corrupt record: %@
%{public}@Unable to generate updated sentinel model: %@
%{public}@Unable to generate externalID from %@: %@
%{public}@Unable to generate externalData from %@: %@
%{public}@Unable to reset externalID and externalData for %lu: %@
%{public}@Starting up zone rebuilder
%{public}@Found existing sentinel model: %@
%{public}@Unable to fetch rebuild sentinel model: %@
%{public}@Successfully fetched sentinel model: %@.
%{public}@Sentinel model fetch failed: %@.
%{public}@Lost cloudZone for cloud zone rebuild
%{public}@Failed to prepare model %@: %@
%{public}@Cannot encode data from model %@ with unknown encoding: %lu
%{public}@Failed to populate model with dictionary %@: %@
%{public}@Cannot deserialize from unknown encoding: %lu
%{public}@Failed to OPACK encode dictionary %@: %@
%{public}@Failed to OPACK decode data: %@
%{public}@Result was not of class %@: %@
%{public}@Using HMBModelUnsupported because model's minimum version %@ is higher than current version: %@
%{public}@Cannot find type information in model dictionary: %@
%{public}@Unable to find model class named %@
%{public}@Unable to resolve type name to class: %@
%{public}@Unable to rebuild a shared zone.
%{public}@Informing delegate we have lost our identity.
%{public}@Successfully removed ourself from share.
%{public}@Unable to remove self from the share: %@
%{public}@Failed to create input context for conflict records: %@
%{public}@Unable to generate client externalID for conflict %@: %@
%{public}@Staging removal for record ID without a server version: %@
%{public}@Failed to stage removal for record ID %@: %@
%{public}@Unable to generate server model for conflict %@: %@
%{public}@Unable to generate server externalID for conflict %@: %@
%{public}@Unable to generate server externalData for conflict %@: %@
%{public}@Staging server version of conflicted record %@ / %@ due to conflict
%{public}@Failed to stage addition for model %@: %@
%{public}@Failed to commit conflicted record resolution: %@
%{public}@Queueing up accept for invitation %@
%{public}@Accepting invitation: %@
%{public}@Fetched share metadata: %@
%{public}@Accepted invitation with share: %@
%{public}@Adding zone state model: %@
%{public}@Unable to add zone state model: %@
%{public}@Not adding zone state model because one already exists: %@
%{public}@Unable to create our local storage: %@.
%{public}@Returning existing zone: %@
%{public}@Unable to open zone %@ (does not exist)
%{public}@Removing local zone: %@
%{public}@Removing local zone mirror: %@
%{public}@Removing local data for zone: %@
%{public}@Failed to remove local data for zone %@: %@
%{public}@Successfully removed local data for zone: %@
%{public}@Cannot set a new delegate on local zone with identifier %@ because that local zone has already been opened with a different delegate
%{public}@Performing cloud pull with token: %@ options: %@
%{public}@Coalescing cloud pull with options: %@
%{public}@Queueing up cloud pull with options: %@
%{public}@Lost localZone in __performCloudPull.
%{public}@%{public}@Failed to create a new mirror input: %@
%{public}@%{public}@Received record %@, but failed to decode: %@
%{public}@%{public}@Received record %@ with decoded model %@.%@
%{public}@%{public}@Failed to encode externalID from record %@: %@
%{public}@%{public}@Failed to encode externalData from record %@: %@
%{public}@%{public}@Failed to add model to update to block: %@
%{public}@%{public}@Received record deletion for %@/%@
%{public}@%{public}@Failed to encode externalID from recordID %@: %@
%{public}@%{public}@Failed to add model to remove to block: %@
%{public}@%{public}@Failed to fetch newest records: %@
%{public}@%{public}@Successfully fetched newest records with moreComing: %@ and serverChangeToken: %@
%{public}@%{public}@CKFetchRecordZoneChangesOperation failed: %@
%{public}@%{public}@Performing cloud pull again with nil change token due to expired change token error: %@
%{public}@%{public}@CKFetchRecordZoneChangesOperation will be retried
%{public}@%{public}@Received cloud zone deletion error: %@
%{public}@%{public}@Failed to fetch record zone changes: %@
%{public}@%{public}@Committing mirror input block
%{public}@%{public}@Failed to commit block: %@
%{public}@%{public}@Successfully committed block. Handling %lu internal model updates.
%{public}@%{public}@CKFetchRecordZoneChangesOperation succeeded
%{public}@%{public}@Starting CKFetchRecordZoneChangesOperation with token: %@ options: %@ operationID: %@
%{public}@Creating cloud database with localDatabase: %@ configuration: %@
%{public}@Failed to create state zone for database: %@
%{public}@Returning existing initial cloud sync future: %@
%{public}@Performing initial cloud sync
%{public}@Successfully performed initial cloud sync
%{public}@Failed to perform initial cloud sync (will retry after delay): %@
%{public}@Retrying initial cloud sync
%{public}@Asked to perform administrative fetch for unsupported database scope: %@
%{public}@Handling created zone ID: %@
%{public}@Normal create behavior for zone %@ suppressed due to rebuild.
%{public}@Handling updated zone ID: %@
%{public}@Got update for a zone ID %@ we don't have state for. All zone states: %@
%{public}@No open HMBCloudZone exists for zoneID %@
%{public}@Have an open HMBCloudZone for zoneID %@
%{public}@Normal update behavior for zone suppressed due to rebuild.
%{public}@Lost cloudZone reference for %@ prior to subscription initiated fetch.
%{public}@Unable to trigger cloudZone fetch on %@ due to failed startup: %@
%{public}@Handling removed zone ID: %@
%{public}@Normal remove behavior for zone %@ suppressed due to rebuild.
%{public}@Asked to open or create private zone with ID: %@
%{public}@Asked to open existing private zone with ID: %@
%{public}@Asked to open existing shared zone with ID: %@
%{public}@Failed to open existing shared zone for removal: %@
%{public}@Failed to open shared local zone for removal: %@
%{public}@Unable to remove zone with public zoneID: %@
%{public}@Received missing Manatee identity error on database specific query (this is not expected): %@
%{public}@Manatee is unavailable. Waiting for Manatee to become available before retrying
%{public}@Retrying operation that received Manatee unavailable error
%{public}@CloudKit account status is no longer authenticated. Waiting for Manatee to become available before retrying
%{public}@Retrying operation that received account not authenticated error
%{public}@Keychain is unsynced. Waiting for keychain to become available before retrying
%{public}@Retrying operation that received keychain unsynced error
%{public}@Not retrying failed CloudKit operation
%{public}@Will retry cloud operation after %.2f seconds
%{public}@Removing state for zone ID %@
%{public}@Asked to remove state for zoneID %@ that has already been removed
%{public}@Unable to determine children of zone state model %@ with ID %@: %@
%{public}@Unable to remove cloud zone state models for zone ID %@: %@
%{public}@Ignoring CKNotification for irrelevant container identifier: %@
%{public}@%{public}@Handling CKDatabaseNotification: %@
%{public}@%{public}@Handling CKRecordZoneNotification: %@
%{public}@%{public}@Starting update for zone: %@
%{public}@Received unexpected query notification: %@
%{public}@Received unknown CKNotification: %@
%{public}@Received message that did not translate to a CKNotification; deferring to delegate: %@
%{public}@Unable to load cloud database states: %@
%{public}@Created public database state model with cloudID %@: %@
%{public}@Created private database state model with cloudID %@: %@
%{public}@Created shared database state model with cloudID %@: %@
%{public}@Unable to update cloud database models: %@
%{public}@Unable to load zone model state: %@
%{public}@[HMBCloudDatabase] Failed to resolve preferred CloudKit environment with error: %@
%{public}@[HMBCloudDatabase] Lost self.
%{public}@Did not receive a preferred push environment, defaulting to %@
%{public}@Registering APS Connection for environment: %@
%{public}@Found zone ID that needs deletion: %@
%{public}@HMBCloudDatabase died before administrative fetch for %@ started
%{public}@%{public}@Starting administrative fetch for %@ with force=%@
%{public}@%{public}@Skipping administrative fetch for %@ because force=%@ and last administrative fetch was %@
%{public}@%{public}@Created pre-fetch mapping of zone state by zone ID: %@
%{public}@%{public}@HMBCloudDatabase died before administrative fetch completed
%{public}@%{public}@Processing administrative fetch
%{public}@%{public}@Zone with ID %@ was deleted
%{public}@%{public}@Updating subscriptions for zone ID %@ from %@ to %@
%{public}@%{public}@Zone with ID %@ was created
%{public}@%{public}@Unable to update zone models in local DB %@: %@
%{public}@%{public}@Unable to update database state for administrative fetch: %@
%{public}@Ignoring unexpected subscription on shared zone: %@
%{public}@Got unexpected subscription %@
%{public}@No cloud zone found with ID %@
%{public}@Creating state for cloud zone with ID %@
%{public}@Unable to save new zone to database: %@
%{public}@Cannot set a delegate on cloud zone with identifier %@ because that cloud zone has already been opened with a different delegate
%{public}@Returning existing cloud zone: %@
%{public}@Creating cloud zone with ID %@
%{public}@Failed to open local zone with ID %@ for removal: %@
%{public}@Unable to create zone with ID %@ on a non-private database.
%{public}@Creating private cloud zone with ID %@
%{public}@Zone modification finished, but had to create zone model for %@ (someone created a zone outside of HMBCloudZone startup).
%{public}@Unable to remove zone with ID %@ on a non-private database
%{public}@Removing private cloud zone with ID %@
%{public}@%{public}@CKFetchRecordZonesOperation failed: %@
%{public}@%{public}@CKFetchRecordZonesOperation will be retried
%{public}@%{public}@CKFetchRecordZonesOperation failed and cannot be retried: %@
%{public}@%{public}@CKFetchRecordZonesOperation succeeded with zones: %@
%{public}@%{public}@Starting CKFetchRecordZonesOperation for database: %@ operationID: %@
%{public}@%{public}@CKModifyRecordZonesOperation failed: %@
%{public}@%{public}@Ignoring partial error for zoneID %@: %@
%{public}@%{public}@CKModifyRecordZonesOperation will be retried
%{public}@%{public}@CKModifyRecordZonesOperation failed and cannot be retried: %@
%{public}@%{public}@CKModifyRecordZonesOperation succeeded
%{public}@%{public}@Starting CKModifyRecordZonesOperation with zoneToSave: %@ zoneIDToRemove: %@ operationID: %@
%{public}@Unknown filter result received: %lu
%{public}@Registering subscription for external record type %@
%{public}@Unregistering subscription for external record type %@
%{public}@Handling retry share operation error: %@
%{public}@Not retying share operation because no new CKShare changes were found after performing cloud pull (initialShare: %@, currentShare: %@)
%{public}@Retrying share operation after finishing cloud pull
%{public}@Canceling share operation due to failed cloud pull: %@
%{public}@Share operation failed: %{public}@
%{public}@Failed to prepare statement: %@
%{public}@The query statement's SQL contains an argument named '%@' which does not exist as an argument in the query's argument dictionary: %@
%{public}@The query statement's SQL contains an argument for a property named '%@' which does not exist as a property on %@: %@
%{public}@The query's argument dictionary contains an argument named '%@' which does not exist as an argument in the query statement's SQL: %@
%{public}@Didn't find reference to %@ in query plan for %s:
%{public}@    %lu.%lu %@
%{public}@Unable to fetch options for block at row %lu.%@: %@
%{public}@Failed to unarchive transaction options from options data: %lu.%@: %@
%{public}@Deleting block with output block row %lu because it has no corresponding records
%{public}@Failed to reset output for records with output block row %lu: %@
%{public}@Failed to delete block with output block row %lu: %@
%{public}@Unable to delete pushed record %lu: %@
%{public}@Not removing record %lu because it appears to have changed.
%{public}@Unable to clear output columns for pushed record %lu: %@
%{public}@Not clearing output columns for record %lu because it appears to have changed.
%{public}@Local zone for associated container is nil: %@
%{public}@Cannot validate reference %@ because the referenced model can't be found: %@
%{public}@Looking for referenced model %@ in localZone %@
%{public}@Error fetching model %@
%{public}@No local model for %@, fetching via CKReference %@
%{public}@Unable to find referenced model %@, no local model and no CKReference to fetch
%{public}@Unable to determine CKRecordID for model ID %@: %@
%{public}@Unable to decode CKRecordID from external ID %@: %@
%{public}@Received CKRecord with a HMBModelCloudReference field (%@/%@) where the corresponding CKRecord field is not set or not of the expected type (got %@)
%{public}@Received CKRecord with a HMBModelCloudReference field (%@/%@) where zone name for reference stored in the CKRecord field does not match the zone name in the HMBModel field (%@!=%@)
%{public}@Unexpectedly found %@ in CKRecord field for wrapped model value %@/%@ which we expected to be a CKReference (ignoring).
%{public}@Record ID does not exist on server: %@
%{public}@Server record changed error user info does not have client record: %@
%{public}@Server record changed error user info does not have server record: %@
%{public}@Server record changed error user info does not have ancestor record: %@
%{public}@Record does not exist on server: %@
%{public}@Successfully fetched complete models ID but no models were returned
%{public}@Fetching complete models with force=%@: %@
%{public}@Failed to fetch record rows for model IDs %@: %@
%{public}@Fetched %lu record rows %@ but requested %lu model IDs %@
%{public}@Trying to perform a cloud fetch for a record (%@/%@) that has not been pushed.
%{public}@Failed to decode encoded record ID %@: %@
%{public}@Successfully fetched complete models for record ID but no models were returned
%{public}@Asked to fetch an empty set of record IDs
%{public}@Failed to decode complete model for record %@: %@
%{public}@Unable to encode externalID from recordID %@: %@
%{public}@Unable to fetch modelID for externalID %@: %@
%{public}@Performing fetch for records with record IDs: %@
%{public}@Queueing fetch for records with record IDs: %@
%{public}@%{public}@Successfully fetched record with ID %@: %@
%{public}@%{public}@Failed to fetch record with ID %@: %@
%{public}@%{public}@CKFetchRecordsOperation failed: %@
%{public}@%{public}@CKFetchRecordsOperation will be retried
%{public}@%{public}@CKFetchRecordsOperation partially failed, but returning those records that were successfully fetched
%{public}@%{public}@CKFetchRecordsOperation failed and cannot be retried: %@
%{public}@%{public}@CKFetchRecordsOperation succeeded
%{public}@%{public}@Starting CKFetchRecordsOperation with record IDs: %@ operationID: %@
%{public}@Unable to update server change token for scope %ld: %@
%{public}@Cannot find zone model to update server change for with zone ID %@
%{public}@Updating server change token of %@ to %@
%{public}@Unable to update server change token for zone %@: %@
%{public}@Cannot find zone model to fetch server change for with zone ID %@
%{public}@%{public}@
%{public}@Unable to find state model for zone.
%{public}@Unable to update state model for zone: %@
%{public}@Updating needs deletion to %@ for zone with ID: %@
%{public}@Unable to find state model to update needs zone deletion for with zone ID %@
%{public}@Unable to update needs zone deletion on state model for zone: %@
%{public}@Clearing cloudZone on state for zone with ID: %@
%{public}@Unable to find state model to clear cloudZone for with zone ID %@
%{public}@%{public}@CKFetchSubscriptionsOperation failed: %@
%{public}@%{public}@CKFetchSubscriptionsOperation will be retried
%{public}@%{public}@CKFetchSubscriptionsOperation failed and cannot be retried: %@
%{public}@%{public}@CKFetchSubscriptionsOperation succeeded with subscription IDs: %@
%{public}@%{public}@Starting CKFetchSubscriptionsOperation for database: %@ operationID: %@
%{public}@%{public}@Failed to decode encoded record ID %@: %@
%{public}@%{public}@Unable to encode record for update: %@
%{public}@%{public}@Unable to encode recordID for update: %@
%{public}@%{public}@Preparing to update: %@ / %@
%{public}@%{public}@Aborting block %lu due to encoding error: %@.
%{public}@%{public}@No valid records to push; aborting
%{public}@%{public}@Abort update for block %lu failed with error: %@
%{public}@%{public}@Unable to complete push for row %lu: %@
%{public}@%{public}@Cloud push chunk failed: %@
%{public}@%{public}@Failed to encode externalID for %@: %@
%{public}@%{public}@Failed to encode externalData for %@: %@
%{public}@%{public}@Received unexpected updated record: %@
%{public}@%{public}@Queueing record for post-processing: %@
%{public}@%{public}@Unable to decode internal record %@: %@
%{public}@%{public}@Queueing internal model: %@ %@
%{public}@%{public}@Queueing model for post-processing: %@ %@
%{public}@%{public}@Internal models processed.
%{public}@%{public}@Failed to mark records as pushed: %@
%{public}@%{public}@Post-processing %lu models
%{public}@%{public}@Post-processing failed: %@
%{public}@%{public}@Post-processing succeeded
%{public}@%{public}@Nothing to post-process
%{public}@Ignoring push request for block row %lu. Appears to be in-progress.
%{public}@Records push failed immediately: %@
%{public}@Drop all cloud records requested by conflict resolution delegate callback.
%{public}@Dropping cloud push record %@ / %@ due to conflict.
%{public}@Dropping cloud push record %@ due to conflict.
%{public}@%{public}@No local zone available to perform cloud push
%{public}@%{public}@Unable to fetch options for output block row %lu: %@
%{public}@%{public}@Unable to fetch tuples for output block row %lu: %@
%{public}@%{public}@Skipping cloud push for output block row %lu because no tuples were found
%{public}@%{public}@Starting cloud push for output block row: %lu options: %@ tuples count: %lu
%{public}@Unable to determine index state of %@: %@
%{public}@Preparing to reindex table for %@
%{public}@Unable to rebuild index of %@: %@
%{public}@Have re-indexed %lu records of %@ type.
%{public}@Total of %lu rows re-indexed for %@.
%{public}@Staging addition for model: %@ externalID: %@ externalData: %@
%{public}@Staging removal for model with external ID: %@
%{public}@Creating APSConnection with environment: %@ namedDelegatePort: %@
%{public}@Adding enabled topic to APS connection: %@
%{public}@connection: %@ didReceiveToken: %@ forTopic: %@ identifier: %@
%{public}@connection: %@ didReceivePublicToken: %@
%{public}@connection: %@ didReceiveIncomingMessage: %@
%{public}@Handling incoming APS message with topic: %@ userInfo: %@
%{public}@%{public}@Creating Output Block for %@
%{public}@%{public}@Asked to add additional entries on invalid output block
%{public}@%{public}@Failed to add additional entries on output block: %@
%{public}@%{public}@Asked to commit invalid output block
%{public}@%{public}@Committing output block.
%{public}@%{public}@Failed to commit output block: %@
%{public}@%{public}@Asked to abort invalid output block
%{public}@%{public}@Aborting output block
%{public}@%{public}@Successfully aborted output block
%{public}@No delegate supplied for '- (BOOL)shouldLogPrivateInformation' returning NO.
%{public}@HMBManager detected local corruption: %@
%{public}@Found fatal partial error for recordID %@: %@
%{public}@Unable to decode share model from share %@
%{public}@Unable to decode model from share participant record %@: %@
%{public}@Decoded model was not a HMBCloudZoneShareParticipantModel: %@
%{public}@Handling updated share: %@
%{public}@Removing participant that is no longer on share: %@
%{public}@Updating CKShareParticipant on participant %@ to %@
%{public}@Failed to update/remove share models: %@
%{public}@Handling updated share participant: %@
%{public}@Removing existing share participant model with client identifier %@ because it has a different model ID: %@
%{public}@Failed to remove existing share participant model: %@
%{public}@Failed to update share participant models: %@
%{public}@Creating share model
%{public}@Leaving cloud share
%{public}@Cannot leave cloud share because no share model was found
%{public}@Could not find a share model. Will attempt to find one by re-fetching all records
%{public}@Received zone deleted error when leaving cloud share
%{public}@Failed to push changes for leaving cloud share: %@
%{public}@Successfully pushed changes for leaving cloud share with result: %@
%{public}@Adding %@ share operation: %@
%{public}@Hit conflict when pushing share; retrying operation
%{public}@Failed to push share: %@
%{public}@Hit conflict when pushing share and share participant record; retrying operation
%{public}@Failed to push share and share participant record: %@
%{public}@Failed to delete share participant records: %@
%{public}@No owner record ID found on cloud zone share: %@
%{public}@No current participant record ID found on cloud zone share: %@
%{public}@No participant was found with client identifier: %@
%{public}@No cloud share ID was found for participant: %@
%{public}@Fetching invitation with context: %@
%{public}@Unable to fetch an invitation on non-private zone
%{public}@Configuring existing participant %@ for the requested invitation context: %@
%{public}@Fetching invitation again after configuring participant
%{public}@Asked to fetch an invitation for client identifier corresponding to participant that has already accepted: %@
%{public}@Returning existing pending invitation: %@
%{public}@Participant already exists that has not accepted but has no pending invitation: %@
%{public}@Unable to find updated share participant on share %@
%{public}@Unable to find invitation token on share participant %@
%{public}@Created invitation: %@
%{public}@Unable to encode participant model %@: %@
%{public}@Setting write access enabled to %@ for participant: %@
%{public}@Could not find CKShareParticipant for participant %@. All CKShareParticipants: %@
%{public}@Not setting write access enabled because participant's permission is already %@
%{public}@Successfully pushed changes for participant write access update
%{public}@Revoking share for participant: %@
%{public}@Could not find participant model for participant %@
%{public}@Successfully pushed share changes for share revocation
%{public}@Successfully pushed share participant deletion for share revocation
%{public}@Cannot fetch share model because local zone is nil
%{public}@Unable to fetch share models: %@
%{public}@Unexpectedly found more than one share model: %@
%{public}@Failed to remove existing share modelIDs: %@
%{public}@Fetched existing share model: %@
%{public}@Did not find existing share model
%{public}@Cannot initialize share participant models because local zone is nil
%{public}@Initializing with fetched participants: %@
%{public}@Adding participant %@ to share %@
%{public}@Removing participant %@ because it already exists on share %@
%{public}@Removing participant %@ from share %@
%{public}@Not removing participant %@ from share because it doesn't exist on share: %@
%{public}@Query Table: %@ <%@>
%{public}@    %@ <%@>
%{public}@Adding sentinal table failed: %@
%{public}@Failed to clean up queryable table (non-fatal): %@
%{public}@Preparing query contexts...
%{public}@Unable to prepare Query context for class: %@
%{public}@Prepared query context for %@
%{public}@Significant failure during preparation of queries: %@
%{public}@discarding existing index table %@ (%@ / %@ / %@)
%{public}@%{public}@Fetched share participant: %@
%{public}@%{public}@CKFetchShareParticipantsOperation failed: %@
%{public}@%{public}@CKFetchShareParticipantsOperation will be retried
%{public}@%{public}@CKFetchShareParticipantsOperation failed and cannot be retried: %@
%{public}@%{public}@CKFetchShareParticipantsOperation succeeded with participants: %@
%{public}@%{public}@Starting CKFetchShareParticipantsOperation for lookup info: %@ operationID: %@
%{public}@%{public}@Failed to fetch share metadata for url %@: %@
%{public}@%{public}@Fetched share metadata for url %@: %@
%{public}@%{public}@CKFetchShareMetadataOperation failed: %@
%{public}@%{public}@CKFetchShareMetadataOperation will be retried
%{public}@%{public}@CKFetchShareMetadataOperation failed and cannot be retried: %@
%{public}@%{public}@CKFetchShareMetadataOperation succeeded with share metadata: %@
%{public}@%{public}@Starting CKFetchShareMetadataOperation for invitation: %@ operationID: %@
%{public}@%{public}@Failed to accept share metadata %@: %@
%{public}@%{public}@Successfully accepted share for share metadata %@: %@
%{public}@%{public}@CKAcceptSharesOperation failed: %@
%{public}@%{public}@CKAcceptSharesOperation will be retried
%{public}@%{public}@CKAcceptSharesOperation failed and cannot be retried: %@
%{public}@%{public}@CKAcceptSharesOperation succeeded with share: %@
%{public}@%{public}@Starting CKAcceptSharesOperation with share metadata: %@ operationID: %@
%{public}@%{public}@Fetched user record: %@
%{public}@%{public}@Failed to fetch user record: %@
%{public}@%{public}@CKFetchRecordsOperation did not retrieve user record, but no error was returned
%{public}@%{public}@CKFetchRecordsOperation succeeded with record: %@
%{public}@%{public}@Starting CKFetchRecordsOperation for current user record with operationID: %@
%{public}@Aborting input block left uncommitted
%{public}@Staging removal for model with ID: %@
%{public}@Skipping local zone input commit with no staged changes
%{public}@Committing local zone input containing %lu staged changes with options: %@
%{public}@Failed to commit local zone input: %@
%{public}@Aborting local zone input
%{public}@Failed to insert deletion item with blockRow: %lu type: %lu modelID: %@: %@
%{public}@Failed to select records with parentModelID: %@: %@
%{public}@Removing block with row %lu
%{public}@Could not initialize zlib for compression, error %ld
%{public}@Failed to compress, error %ld
%{public}@Could not initialize zlib for uncompression, error %ld
%{public}@Perform cloud pull for scope : %@
%{public}@Cannot fetch updated zones for unsupported database scope: %@
%{public}@Coalescing cloud pull for scope: %@
%{public}@Queueing up cloud pull for scope: %@
%{public}@Performing cloud pull for database [%@] for scope [%@] with token: %@
%{public}@%{public}@Zone with ID changed: %@
%{public}@%{public}@Zone with ID was deleted: %@
%{public}@%{public}@Got a zone deletion for a non-existent zone ID: %@
%{public}@%{public}@Fetch database changes operation completed with token: %@ moreComing: %@ error: %@
%{public}@%{public}@CKFetchDatabaseChangesOperation failed: %@
%{public}@%{public}@Retrying CKFetchDatabaseChangesOperation with nil change token due to expired change token error
%{public}@%{public}@CKFetchDatabaseChangesOperation will be retried
%{public}@%{public}@CKFetchDatabaseChangesOperation failed and cannot be retried: %@
%{public}@%{public}@Failed to add created zone models to local DB %@: %@
%{public}@%{public}@Failed to remove zone model IDs from local DB %@: %@
%{public}@%{public}@CKFetchDatabaseChangesOperation succeeded
%{public}@%{public}@Starting CKFetchDatabaseChangesOperation with database: %@ token: %@ operationID: %@
%{public}@Asked to update models: %@ remove model IDs: %@
%{public}@Staging addition for model: %@
%{public}@Setting requiresModelCreation to YES because addition constraint is %ld
%{public}@Setting disallowsModelCreation to YES because addition constraint is %ld
%{public}@Asked to fetch zones with force: %@
%{public}@Unable to encode model (%@.%@): %@
%{public}@Finalizing %@
%{public}@Failed to run SQL statement %s: %@
%{public}@Ignoring fetch due to previous error: %@
%{public}@Opening database context: %@
%{public}@Reusing existing open database context: %@
%{public}@Failed to open context %@: %@
%{public}@Failed to prepare context %@: %@
%{public}@Closing database context: %@
%{public}@Found context still using database: %@
%{public}@Closing sqlite database for context: %@
%{public}@Failed to close database, status: %d
%{public}@unable to get files in %@ (%@)
%{public}@unable to remove %@: %@
%{public}@Current schema version: %@
%{public}@Migration failed for context %@: %@
%{public}@Migration needs re-init for context %@
%{public}@Migration needs reopen for context %@
%{public}@unhandled migration result: %ld
%{public}@Failed to turn on WAL for context %@: %@
%{public}@Successfully turned on WAL for context %@
%{public}@Failed re-open of WAL-enabled context %@: %@
%{public}@Unable to open memory database with create == NO
%{public}@Successfully opened context: %@
%{public}@Failed to open context %p at %@: %@
%{public}@[HMBSQLFile: %@] Unable to turn on foreign key enforcement: %@
%{public}@Ignoring SQL block request due to previous error: %@
%{public}@ignoring exec due to previous error %s: %@
%{public}@Error executing statement: %@
%{public}@unable to prepare SQL statements: %@
%{public}@unable to compile expression: %@
%{public}@unable to instantiate SQLite datastore %@: %@
%{public}@Running on a later DB schema than our version (%ld > %ld).
%{public}@Failing DB open during migration becaues we might corrupt things (open in read-only)
%{public}@Have opened a DB in read-only mode with a different schema version than our version (%ld != %ld). This may end badly.
%{public}@removing all records and transactions from local
%{public}@Unable to determine if old tables are in the database: %@
%{public}@Unable to remove old table %@: %@
%{public}@unable to initialize SQL table: %@ with error: %@
%{public}@unable to initialize SQL index: %@ with error: %@
%{public}@Failed to updated schema version to current version %lu: %@
%{public}@Unable to query all required tables: %@
%{public}@Found tables: %@ is not a superset of expected tables: %@
%{public}@Unable to set a default value %@ of type %@ when the stored type is %@
%{public}@Asked to register subscription for zone ID %@: %@
%{public}@Asked to register subscription %@ on unknown zoneID %@. All zone ID state: %@
%{public}@Not registering zone subscription %@ because it is already in our list of subscriptions: %@
%{public}@Asked to unregister subscription for zone ID %@: %@
%{public}@Asked to unregister subscription %@ on unknown zoneID %@. All zone ID state: %@
%{public}@Could not find zone state for zone ID %@ after updating subscriptions. All zone ID state: %@
%{public}@Asked to unregister private subscription for subscription ID %@
%{public}@Asked to unregister shared subscription for subscription ID %@
%{public}@Asked to register subscription for Private DB: %@
%{public}@Asked to register subscription on PrivateDB, but no subscriptions!.
%{public}@Not registering DB subscription %@ because it appears to already exist in our list of subscriptions: %@
%{public}@Failed to update zone state: %@
%{public}@Not pushing database subscription ID %@ because it is already in our list of registered database subscriptions: %@
%{public}@Asked to register private subscription for external record type %@
%{public}@Asked to register shared subscription for external record type %@
%{public}@Asked to unregister private subscription for external record type %@
%{public}@Asked to unregister shared subscription for external record type %@
%{public}@Skipping subscription modify for empty save and remove lists
%{public}@%{public}@CKModifySubscriptionsOperation failed: %@
%{public}@%{public}@CKModifySubscriptionsOperation will be retried
%{public}@%{public}@CKModifySubscriptionsOperation failed and cannot be retried: %@
%{public}@%{public}@CKModifySubscriptionsOperation succeeded
%{public}@%{public}@Starting CKModifySubscriptionsOperation with subscriptionsToSave: %@ subscriptionIDsToRemove: %@ operationID: %@
%{public}@Not unregistering database subscription ID %@ because it is not in our list of existing database subscription: %@
%{public}@Failed to update database state: %@
HMBMirrorOutputResult
HMBProcessingOptions
NSSecureCoding
NSCoding
HMBProcessingResult
HMBSQLStatementQueryPlanTuple
HMBSQLStatement
Record
Rebuild
Rebuild_Internal
HMBCloudZoneStateModel
HMBCloudZoneShareModel
HMBSQLQueryIterator
HMBShareInvitation
NSCopying
HMBCloudCredentialsAvailabilityListener
HMFLogging
NSObject
HMFTimerDelegate
HMBLocalSQLContextRowBlock
HMBLocalSQLIteratorRowBlock
HMBLocalSQLIteratorRowInputBlock
HMBLocalSQLIteratorRowRollbackBlock
HMBSQLQueryStatement
HMBLocalSQLContextRowItem
HMBLocalZoneProcessModelContext
HMBLocalZoneProcessTuple
Process
ShareModel
HMBLocalSQLContextInputBlock
HMBCloudZoneEncodingContext
HMBCloudZone
HMBMirrorProtocol
CloudRecord
CloudRecord_Internal
HMBCloudDatabaseConfiguration
NSMutableCopying
HMBMutableCloudDatabaseConfiguration
HMBProcessingModelResult
HMBLocalSQLQueryTable
HMBLocalZone
HMBCloudZoneRebuilderStatus
HMBModelObjectCoder
HMBLocalZoneQueryResultAllOfTypeRaw
MigrateUnsupported
Manatee
HMBLocalZoneID
HMBSearchableEntry
HMBLocalZoneIDUnshared
HMBModel
HMBModelTranslation
HMBModelProperties
HMBModelUnsupported
HMBShareUserID
HMBProcessingModelDeletion
HMBLocalZoneConfiguration
HMBMutableLocalZoneConfiguration
HMBStreamingAsset
HMBModelNativeCKWrapper
HMBModelObjectMerging
HMBCloudZonePushResult
HMBCloudZonePullResult
HMBLocalSQLContextRowZone
CKCode
HMBPrivateCloudZoneRebuilder
HMBCloudZoneRebuilder
HMBModelContainer
HMBMutableModelContainer
HMBModelContainerEncodingContext
MirrorInput
HMBCloudZoneRebuilderModel
HMBSharedCloudZoneRebuilder
HMBCloudID
HMBAction
HMBMutableAction
HMBCloudZoneShareParticipantModel
Conflicts
HMBProcessingModelCreation
User
HMBLocalDatabase
Pull_Internal
Pull
HMBCloudDatabase
HMBCloudPushObserver
CloudZone
HMBLocalZoneQueryResultColumnTuple
HMBLocalZoneQueryResult
HMBLocalZoneQueryResultRecordID
HMBLocalZoneQueryResultRecordColumns
HMBLocalZoneQueryResultAllOfType
HMBLocalZoneQueryResultParentModelID
HMBLocalZoneQueryResultParentModelIDOfType
HMBLocalZoneQueryResultRecursiveModelID
HMBLocalZoneQueryResultFilter
Subscription
HMBFutureOperation
HMBLocalDatabaseConfiguration
HMBMutableLocalDatabaseConfiguration
HMBShareOperation
HMBModelQueryArgument
HMBModelQuery
HMBModelUnindexedQuery
HMBModelIndexedQuery
HMBModelInfiniteQuery
HMBModelFiniteQuery
HMBModelCountMatchesQuery
HMBMirrorOutputTuple
HMBMirrorOutputGroup
MirrorOutput
HMBModelReference
HMBQueryableModelFieldCoder
HMBModelCloudReference
HMBCloudZoneRecordPushConflict
HMBShareInvitationContext
HMBProcessingModelUpdate
Fetch
Fetch_Internal
HMBLocalZoneQueryResultRecordIDSequence
Query
HMBCloudZoneFetchRecordsContext
HMBLocalSQLContextRowRecord
HMBLocalSQLIteratorRowRecord
ZoneState
HMBCloudZoneID
CloudSubscription
Push
HMBLocalZoneTestingProtocol
HMBLocalZoneDelegate
Queryable
HMBLocalZoneMirrorInput
HMBCloudPushHandler
HMBAPSConnection
HMBAPSConnectionDelegate
HMBLocalSQLContextOutputBlock
HMBCloudZoneConfiguration
HMBMutableCloudZoneConfiguration
Delegate
HMBCloudZoneRecordPushResult
Share_Internal
Share
HMBCloudStateModel
HMBLocalSQLContextQueryIndex
HMBLocalSQLContextQueryTable
HMBLocalSQLContextRowQueryTuple
HMBLocalSQLContextRowQuery
CloudUser
HMBLocalZoneInput
HMBLocalSQLContextRecord
Block
HMBCloudDatabaseDataSource
ZoneFetch
HMBLocalZoneRawUpdateEntry
Model
HMBLocalZoneLocalInput
Zone
V4Cloud
HMBSQLContextConcrete
HMBSQLContext
HMBSQLFile
sqlite3
Record_Internal
HMBEntrySearch
HMBLocalSQLContext
HMBLocalZoneIDRow
HMBCloudDatabaseStateModel
HMBCloudExtensions
HMBModelObjectStorage
HMBShareParticipant
CKRecordValue
HMBModelField
HMBMutableModelField
HMBModelFieldDeprecatedField
HMBModelFieldOptionExternalRecordField
HMBModelFieldOptionExcludeFromCloudStorage
HMBModelFieldOptionQueryable
HMBModelFieldOption
Subscription_Internal
MigrateToSchema01
isEqualToDate:
count
isEqualToString:
encodedData
subarrayWithRange:
removeItemAtURL:error:
countByEnumeratingWithState:objects:count:
setModifySubscriptionsCompletionBlock:
isFinished
archivedDataWithRootObject:requiringSecureCoding:error:
setSavePolicy:
defaultManager
initWithServiceName:functionName:responseClass:
subscriptionID
userIdentity
removeObject:
setName:
userInfo
serverPreferredPushEnvironmentWithCompletionHandler:
sharedPreferences
permission
setFetchAllChanges:
removeObjectAtIndex:
initWithCapacity:
array
setNeedsZoneCreation:
removeObjectForKey:
isHMFError
setServerChangeToken:
setFetchDatabaseChangesCompletionBlock:
setShare:
setFetchRecordZoneChangesCompletionBlock:
setNeedsZoneDeletion:
encryptedValuesByKey
removeObjectsForKeys:
initWithMajorVersion:minorVersion:updateVersion:
enumerateKeysAndObjectsUsingBlock:
arrayByAddingObjectsFromArray:
setAcceptSharesCompletionBlock:
initWithSubscriptionID:
setObject:forKey:
removeObserver:name:object:
arrayWithArray:
setShareInvitationTokensByShareURL:
setFetchRecordZonesCompletionBlock:
longLongValue
preferenceForKey:
valueForKey:
initWithTimeInterval:options:
enumerateLinesUsingBlock:
arrayWithCapacity:
UTF8String
setShareMetadatas:
setFetchRecordsCompletionBlock:
setObject:forKeyedSubscript:
absoluteString
substringWithRange:
rangeAtIndex:
setAllowsCellularAccess:
modificationDate
supportsDeviceToDeviceEncryption
UUID
setFetchShareMetadataCompletionBlock:
arrayWithObject:
valueWithPointer:
lowercaseString
absoluteURL
removeParticipant:
environment
isLowPowerModeEnabled
UUIDString
setShareParticipantFetchedBlock:
timeIntervalSinceNow
setFetchShareParticipantsCompletionBlock:
setAutomaticallyRetryNetworkFailures:
modifiedByDevice
versionString
mutableCopy
arrayWithObjects:
arrayWithObjects:count:
setShareURLs:
desiredKeys
setFetchSubscriptionCompletionBlock:
errorOnlyCompletionHandlerAdapter
acceptanceStatus
mainScheduler
setParticipant:
accountInfoWithCompletionHandler:
initWithUUIDBytes:
timeIntervalSinceReferenceDate
assertOwner
currentUserParticipant
errorWithDomain:code:userInfo:
isSubclassOfClass:
setByAddingObject:
accountStatus
initWithUUIDString:
setParticipantVisibility:
operationID
setHasCompleted:
majorVersion
topic
na_all:
evaluateWithObject:
isSubsetOfSet:
size
operationQueue
setByAddingObjectsFromSet:
base64EncodedStringWithOptions:
requestUUID
exceptionWithName:reason:userInfo:
markWithFormat:
setPerRecordCompletionBlock:
sortedArrayUsingSelector:
setPerRecordDeleteBlock:
waitUntilAllOperationsAreFinished
na_allObjectsPassTest:
markWithReason:
code
addCompletionBlock:
dataUsingEncoding:
setPerRecordSaveBlock:
na_any:
initWithContainerID:options:
initWithName:value:
weakObjectsHashTable
addEntriesFromDictionary:
privateCloudDatabase
responseHandler
setCloudID:
dictionary
na_arrayByFlattening
setPerShareCompletionBlock:
addFailureBlock:
na_dictionaryByMappingValues:
keyEnumerator
initWithVersionString:
dictionaryWithCapacity:
resume
weakToWeakObjectsMapTable
dataWithBytes:length:
orderedSet
setCodeOperationCompletionBlock:
setPerShareMetadataBlock:
initWithZoneID:
recordChangeTag
dictionaryWithObjects:forKeys:count:
unarchivedObjectOfClass:fromData:error:
na_dictionaryWithKeyGenerator:
fileSystemRepresentation
initWithOptions:capacity:
hasPrefix:
setConfiguration:
combineAllFutures:ignoringErrors:scheduler:
dataWithBytesNoCopy:length:freeWhenDone:
setString:
setPermission:
zoneName
na_filter:
unarchivedObjectOfClasses:fromData:error:
initWithZoneID:subscriptionID:
processInfo
addObject:
combineAllFutures:scheduler:
initWithZoneName:ownerName:
setPreviousServerChangeToken:
na_firstObjectPassingTest:
hasValidCredentials
setSubscriptionIDsToDelete:
blockOperationWithBlock:
addObjectsFromArray:
databaseScope
na_flatMap:
setSubscriptionsData:
hmfErrorWithCode:
na_map:
distantPast
finish
boolValue
hashTableWithOptions:
domain
publicCloudDatabase
initWithPhoneNumber:
date
addObserver:selector:name:object:
unionSet:
na_setByRemovingObjectsFromSet:
lastObject
finishDecoding
setSubscriptionsToSave:
reverseObjectEnumerator
hmfErrorWithCode:userInfo:
addOperation:
ownerName
recordName
hmf_UUIDWithNamespace:data:
doubleValue
bytes
finishEncoding
initWithData:encoding:
setUniqueToken:
lastPathComponent
finishWithError:
addOperationWithBlock:
hmf_boolForKey:
initWithPreviousServerChangeToken:
unlock
compare:options:range:
dateWithTimeIntervalSinceReferenceDate:
completionHandlerAdapter
cStringUsingEncoding:
fetchAllRecordZonesOperation
hmf_dequeue
finishWithNoResult
minorVersion
setLastAdministrativeFetch:
unsignedIntegerValue
componentsJoinedByString:
minusSet:
addParticipant:
initWithDomain:code:userInfo:
addSuccessBlock:
finishWithResult:
fetchAllSubscriptionsOperation
recordType
hmf_dictionaryForKey:
lazyFutureWithBlock:
componentsSeparatedByString:
initWithEmailAddress:
setUseZoneWidePCS:
hmf_numberForKey:
finishWithResult:error:
initWithRecordID:action:
recordZoneID
chainFutures:
lazyFutureWithBlock:scheduler:
recoverIgnoringError
allKeys
setUserIdentityLookupInfos:
characterAtIndex:
hmf_stringForKey:
setRecordType:
setValue:forKey:
URLByDeletingLastPathComponent
initWithEnvironmentName:namedDelegatePort:queue:
firstMatchInString:options:range:
firstObject
participantID
scheme
notificationFromRemoteNotificationDictionary:
initWithExpectedSizeBytes:
setWithArray:
setDesiredKeys:
setRecordWasChangedBlock:
initWithRecordIDs:
flatMap:
allObjects
immediateScheduler
length
encodeBool:forKey:
fetchCurrentUserRecordOperation
referenceAction
setRecordWithIDWasDeletedBlock:
null
decodeBoolForKey:
intValue
setWithCapacity:
encodeInteger:forKey:
allValues
initWithRecordName:zoneID:
initWithFormat:arguments:
decodeIntegerForKey:
setMarkAsParticipantNeedsNewInvitationToken:
setRecordZoneFetchCompletionBlock:
string
setWithObject:
allocWithZone:
numberWithBool:
setRecordZoneIDsToDelete:
integerValue
setWithSet:
numberWithDouble:
setMaxConcurrentOperationCount:
encodeObject:forKey:
_strictlyUnarchivedObjectOfClasses:fromData:error:
containerIdentifier
stringByAppendingPathComponent:
setDiscretionaryNetworkBehavior:
initWithRecordType:recordID:
numberWithInt:
stringByAppendingString:
setRecordZoneWithIDChangedBlock:
invalidate
futureWithBlock:scheduler:
containsObject:
decodeObjectOfClass:forKey:
futureWithError:
anyObject
setRecordZoneWithIDWasDeletedBlock:
initWithRecordZoneID:
numberWithInteger:
setRecordZonesToSave:
stringByDeletingLastPathComponent
initWithRecordZoneIDs:configurationsByRecordZoneID:
numberWithLongLong:
decodeObjectOfClasses:forKey:
containsString:
futureWithNoResult
invitationToken
performBlock:
appendBytes:length:
stringWithCString:encoding:
regularExpressionWithPattern:options:error:
initWithRecordsToSave:recordIDsToDelete:
numberWithUnsignedInteger:
futureWithResult:
contentsOfDirectoryAtPath:error:
appendData:
stringWithCapacity:
objectAtIndex:
stringWithFormat:
getUUIDBytes:
removeAllObjects
contentsOfDirectoryAtURL:includingPropertiesForKeys:options:error:
appendFormat:
isAtLeastVersion:
localZone:didProcessModelCreation:
stringWithUTF8String:
updateVersion
globalAsyncScheduler
localZone:didProcessModelDeletion:
setRequest:
objectEnumerator
appendString:
initForReadingFromData:error:
objectForKey:
strongToStrongObjectsMapTable
encodeSystemFieldsWithCoder:
localZone:didProcessModelUpdate:
setRequestCompletedBlock:
setModifyRecordZonesCompletionBlock:
initRequiringSecureCoding:
sharedCloudDatabase
copy
defaultCenter
strongToWeakObjectsMapTable
objectForKeyedSubscript:
setModifyRecordsCompletionBlock:
removeItemAtPath:error:
transactionIdentifier
optionsWithLabel:
optionsWithMessage:
supportsSecureCoding
encodeWithCoder:
initWithCoder:
TB,R
initWithLabel:
attributeDescriptions
isEqual:
hash
label
messagePayload
setMessagePayload:
messageName
setMessageName:
messageResponseHandler
setMessageResponseHandler:
messageTransactionIdentifier
setMessageTransactionIdentifier:
shouldEnqueueMirrorOutput
setShouldEnqueueMirrorOutput:
shouldRollBackIfMirrorOutputFails
setShouldRollBackIfMirrorOutputFails:
disallowsCellularAccessForMirrorOutput
setDisallowsCellularAccessForMirrorOutput:
qualityOfService
setQualityOfService:
activity
setActivity:
transactionItemsBatchLimit
setTransactionItemsBatchLimit:
requiresModelCreation
setRequiresModelCreation:
disallowsModelCreation
setDisallowsModelCreation:
.cxx_destruct
_shouldEnqueueMirrorOutput
_shouldRollBackIfMirrorOutputFails
_disallowsCellularAccessForMirrorOutput
_requiresModelCreation
_disallowsModelCreation
_label
_messagePayload
_messageName
_messageResponseHandler
_messageTransactionIdentifier
_qualityOfService
_activity
_transactionItemsBatchLimit
TB,V_requiresModelCreation
TB,V_disallowsModelCreation
T@"NSString",R,C,N,V_label
T@"NSDictionary",&,N,V_messagePayload
T@"NSString",&,N,V_messageName
T@?,C,N,V_messageResponseHandler
T@"NSUUID",&,N,V_messageTransactionIdentifier
TB,N,V_shouldEnqueueMirrorOutput
TB,N,V_shouldRollBackIfMirrorOutputFails
TB,N,V_disallowsCellularAccessForMirrorOutput
Tq,N,V_qualityOfService
T@"HMFActivity",&,N,V_activity
TQ,N,V_transactionItemsBatchLimit
initWithOptions:actions:mirrorOutputResult:
options
actions
mirrorOutputResult
_options
_actions
_mirrorOutputResult
T@"HMBProcessingOptions",R,N,V_options
T@"NSArray",R,N,V_actions
T@"NAFuture",R,N,V_mirrorOutputResult
initWithRow:
parent
detail
_row
_parent
_detail
Ti,R,N,V_row
Ti,R,N,V_parent
T@"NSString",R,N,V_detail
dealloc
explainStatements
setExplainStatements:
sqlStatementForContext:statement:
queryPlansForContext:statement:
TB,N
initWithContext:statement:queryPlans:
initWithContext:statement:
finalize
context
statement
setStatement:
queryPlans
_context
_statement
_queryPlans
T^{sqlite3_stmt=},N,V_statement
T@"HMBSQLContext",R,W,N,V_context
T@"NSArray",R,N,V_queryPlans
decodeModelFromRecord:externalRecordFields:source:error:
encodeRecordFromModel:externalData:encodingContext:error:
encodeRecordFromModel:existingRecord:encodingContext:error:
keyStatus
waitForPendingRebuild
Tq,R,N
T@"NAFuture",R,N
startUpRebuilderIfNeeded
handleLostKeys
isZoneRebuildInProgress
handleZoneChangedNotification
handleUpdatedRebuilderModel:
rebuild
zoneRebuildInProgress
TB,R,N,GisZoneRebuildInProgress
hmbProperties
initWithModelID:parentModelID:
subscriptions
setSubscriptions:
cloudZone
setCloudZone:
rebuilderStatus
setRebuilderStatus:
_cloudZone
_rebuilderStatus
subscriptionsData
T@"NSData",&,D,N
T@"HMBCloudZone",W,V_cloudZone
zoneID
T@"HMBCloudZoneID",&,D,N
needsZoneCreation
T@"NSNumber",&,D,N
needsZoneDeletion
T@"NSSet",&,N
T@"HMBCloudZoneRebuilderStatus",&,N,V_rebuilderStatus
hmbExternalRecordType
share
T@"CKShare",&,D,N
maximumRowsPerSelect
setMaximumRowsPerSelect:
TQ,N
initWithStatement:initialSequence:maximumRowsPerSelect:
initWithStatement:initialSequence:maximumRowsPerSelect:error:
fetchRowFromStatement:skip:updatedSequence:error:
fetchRow:error:
nextObject
enumerateObjectsUsingBlock:
bindPropertiesToStatement:error:
error
setError:
maximumRowsPerQuery
cachedResults
setCachedResults:
currentSequence
setCurrentSequence:
sequenceBindOffset
setSequenceBindOffset:
_sequenceBindOffset
_error
_maximumRowsPerQuery
_cachedResults
_currentSequence
T@"HMBSQLQueryStatement",R,N,V_statement
TQ,R,N,V_maximumRowsPerQuery
T@"NSMutableArray",&,N,V_cachedResults
T@"NSNumber",&,N,V_currentSequence
T@"NSError",&,N,V_error
Ti,N,V_sequenceBindOffset
shortDescription
copyWithZone:
initWithURL:token:context:cloudZoneID:
initWithURL:token:context:cloudZoneID:dateCreated:
cloudZoneID
dateCreated
shareURL
token
_cloudZoneID
_dateCreated
_shareURL
_token
T@"NSURL",R,N,V_shareURL
T@"CKDeviceToDeviceShareInvitationToken",R,N,V_token
T@"HMBShareInvitationContext",R,N,V_context
T@"HMBCloudZoneID",R,N,V_cloudZoneID
T@"NSDate",R,N,V_dateCreated
handleIdentityUpdateNotification:
handleAccountChangedNotification:
logCategory
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
logIdentifier
timerDidFire:
initWithContainer:
initWithContainer:notificationCenter:
waitForManateeAvailability
waitForManateeAvailabilityAndRecheckIfAlreadyAvailable
waitForKeychainAvailability
keychainAvailabilityTimerFactory
setKeychainAvailabilityTimerFactory:
_lock
_container
_notificationCenter
_manateeAvailabilityFuture
_keychainAvailabilityFuture
_keychainAvailabilityTimer
_keychainAvailabilityTimerFactory
T@?,C,V_keychainAvailabilityTimerFactory
initWithBlockRow:type:options:
blockRow
type
optionsData
_blockRow
_type
_optionsData
TQ,R,N,V_blockRow
TQ,R,N,V_type
T@"NSData",R,N,V_optionsData
initWithSQLContext:zoneRow:statement:isAscending:
zoneRow
zoneRowBindOffset
isAscending
_ascending
_zoneRowBindOffset
_zoneRow
Ti,R,N,V_zoneRowBindOffset
ascending
TB,R,N,GisAscending,V_ascending
TQ,R,N,V_zoneRow
initWithSQLContext:zoneRow:
initWithContext:statement:queryPlans:arguments:
arguments
_arguments
T@"NSDictionary",R,N,V_arguments
initWithItemRow:externalID:externalData:modelEncoding:modelData:
initWithStatement:returning:
itemRow
modelData
modelEncoding
externalID
externalData
_itemRow
_modelData
_modelEncoding
_externalID
_externalData
TQ,R,N,V_itemRow
T@"NSData",R,N,V_externalID
T@"NSData",R,N,V_externalData
T@"NSData",R,N,V_modelData
TQ,R,N,V_modelEncoding
initWithModel:outputBlockRow:externalData:
model
outputBlockRow
_model
_outputBlockRow
T@"HMBModel",R,N,V_model
T@"NSNumber",R,C,N,V_outputBlockRow
initWithPreviousContext:mergedContext:updateModel:outputModel:outputBlockRow:recordRow:itemRow:modelSchema:modelType:externalID:queryTable:
previousContext
mergedContext
updateModel
outputModel
recordRow
modelSchema
modelType
queryTable
encodedQueryableColumns
_previousContext
_mergedContext
_updateModel
_outputModel
_recordRow
_modelSchema
_modelType
_queryTable
_encodedQueryableColumns
T@"HMBLocalZoneProcessModelContext",R,N,V_previousContext
T@"HMBLocalZoneProcessModelContext",R,N,V_mergedContext
T@"HMBModel",R,C,N,V_updateModel
T@"HMBModel",R,C,N,V_outputModel
TQ,R,N,V_recordRow
T@"NSUUID",R,N,V_modelSchema
T@"NSString",R,N,V_modelType
T@"HMBLocalSQLQueryTable",R,N,V_queryTable
T@"NSArray",R,N,V_encodedQueryableColumns
observersForModelWithID:
queueIncompleteProcesses
triggerProcessForBlockRow:
outputBlockRowForTuple:activity:
shouldMirrorInputExternalData:overwriteExistingExternalData:
outputModelFromUpdateModel:mergedModel:
encodeShareModel:
decodeShareModelFromShare:
initWithOwner:identifier:zoneRow:blockRow:type:
insertExternalID:externalData:modelEncoding:modelData:
updateExternalID:externalData:modelEncoding:modelData:
commit:
abort
identifier
setBlockRow:
owner
setOwner:
_identifier
_owner
T@"HMBLocalSQLContext",W,N,V_owner
TQ,N,V_blockRow
T@"NSString",R,N,V_identifier
T@"HMFActivity",R,N,V_activity
init
createdRecords
_createdRecords
T@"NSMutableDictionary",R,N,V_createdRecords
cloudDatabase:encounteredError:withOperation:onZone:
startUpWithLocalZone:
destroy
triggerOutputForOutputRow:options:
flush
shutdown
startUp
T@"<HMBLocalZoneID>",R,N
initWithCloudDatabase:configuration:state:
retryCloudKitOperation:afterError:retryBlock:
notifyDelegateOfError:forOperation:
_startUpWithPrivateLocalZone:
_startUpWithPublicLocalZone:
startupWithModelContainer:error:
setModelContainer:
isInternalModel:
handleUpdatedInternalModels:
handleDeletion
cloudDatabase
setCloudDatabase:
delegate
setDelegate:
configuration
localZone
setLocalZone:
database
stateZone
setStateZone:
stateModelID
setZoneID:
modelClassToRequiresPostProcessingMap
inProgressPushFuturesByOutputBlockRow
deviceIdentifier
shutdownFuture
setShutdownFuture:
destroyFuture
setDestroyFuture:
rebuilder
setRebuilder:
recordOperationQueue
shareOperationQueue
queuedCloudPullFuture
setQueuedCloudPullFuture:
queuedFetchRecordsContexts
setQueuedFetchRecordsContexts:
shareModel
setShareModel:
shareParticipantModelsByClientIdentifier
modelContainer
defaultDesiredKeys
setDefaultDesiredKeys:
_propertyLock
_needsZoneCreation
_needsZoneDeletion
_startUp
_cloudDatabase
_delegate
_configuration
_localZone
_database
_stateZone
_stateModelID
_zoneID
_modelClassToRequiresPostProcessingMap
_inProgressPushFuturesByOutputBlockRow
_deviceIdentifier
_shutdownFuture
_destroyFuture
_rebuilder
_recordOperationQueue
_shareOperationQueue
_queuedCloudPullFuture
_queuedFetchRecordsContexts
_shareModel
_shareParticipantModelsByClientIdentifier
_modelContainer
_defaultDesiredKeys
T@"CKDatabase",R,N,V_database
T@"HMBCloudDatabase",W,N,V_cloudDatabase
T@"HMBLocalZone",W,N,V_stateZone
T@"NSUUID",R,N,V_stateModelID
TB,R,N,V_needsZoneCreation
TB,R,N,V_needsZoneDeletion
T@"HMBCloudZoneID",&,N,V_zoneID
T@"NSMapTable",R,N,V_modelClassToRequiresPostProcessingMap
T@"NSMutableDictionary",R,N,V_inProgressPushFuturesByOutputBlockRow
T@"NSString",R,N,V_deviceIdentifier
T@"NAFuture",&,N,V_shutdownFuture
T@"NAFuture",&,N,V_destroyFuture
T@"<HMBCloudZoneRebuilder>",&,N,V_rebuilder
T@"NSOperationQueue",R,N,V_recordOperationQueue
T@"NSOperationQueue",R,N,V_shareOperationQueue
T@"NAFuture",&,V_queuedCloudPullFuture
T@"NSMutableSet",&,V_queuedFetchRecordsContexts
T@"HMBCloudZoneShareModel",&,V_shareModel
T@"NSMutableDictionary",R,N,V_shareParticipantModelsByClientIdentifier
T@"HMBModelContainer",&,N,V_modelContainer
T@"NSArray",&,N,V_defaultDesiredKeys
T@"<HMBCloudZoneDelegate>",W,N,V_delegate
T@"HMBCloudZoneConfiguration",R,C,N,V_configuration
T@"HMBLocalZone",W,N,V_localZone
T@"NAFuture",R,N,V_startUp
pushRecordsToUpdate:recordIDsToRemove:configuration:rollbackEnabled:
pushRecordsToUpdate:recordIDsToRemove:configuration:rollbackEnabled:needsNewInvitationToken:
mutableCopyWithZone:
initWithContainerID:
apsRegistrationScheduler
containerID
sourceApplicationBundleIdentifier
setSourceApplicationBundleIdentifier:
isManateeContainer
setManateeContainer:
defaultOperationConfiguration
setDefaultOperationConfiguration:
registerForDBNotifications
setRegisterForDBNotifications:
setApsRegistrationScheduler:
_manateeContainer
_registerForDBNotifications
_containerID
_sourceApplicationBundleIdentifier
_defaultOperationConfiguration
_apsRegistrationScheduler
manateeContainer
TB,GisManateeContainer,V_manateeContainer
T@"CKOperationConfiguration",C,V_defaultOperationConfiguration
T@"NSString",C,V_sourceApplicationBundleIdentifier
T@"HMFScheduler",&,N,V_apsRegistrationScheduler
TB,N,V_registerForDBNotifications
T@"CKContainerID",R,C,V_containerID
T@"NSString",C,D
TB,D,GisManateeContainer
T@"CKOperationConfiguration",C,D
T@"HMFScheduler",&,D,N
TB,D,N
alloc
initWithModel:options:mirrorOutputFuture:
mirrorOutputFuture
_mirrorOutputFuture
T@"HMBModel",R,V_model
T@"HMBProcessingOptions",R,V_options
T@"NAFuture",R,V_mirrorOutputFuture
initWithContext:queryModel:prepareOnly:
performQueryOn:properties:filter:
_deleteQueryForRecordRow:error:
_deleteAllQueriesForZoneRow:error:
buildQueriableFieldsForModel:
_updateQueryForZoneRow:recordRow:encodedColumns:error:
modelClass
columnFields
columnNames
selectAll
dropTableSQL
deleteAll
updateRecord
deleteRecord
userQueries
finalized
setFinalized:
_finalized
_modelClass
_columnFields
_columnNames
_selectAll
_dropTableSQL
_deleteAll
_updateRecord
_deleteRecord
_userQueries
T@"HMBSQLStatement",R,N,V_deleteAll
T@"HMBSQLStatement",R,N,V_updateRecord
T@"HMBSQLStatement",R,N,V_deleteRecord
T@"NSHashTable",R,N,V_userQueries
TB,N,V_finalized
T@"HMBLocalSQLContext",R,W,N,V_context
T#,R,N,V_modelClass
T@"NSArray",R,N,V_columnFields
T@"NSArray",R,N,V_columnNames
T@"HMBSQLQueryStatement",R,N,V_selectAll
T@"NSString",R,N,V_dropTableSQL
initWithLocalDatabase:zoneID:zoneRow:configuration:mirror:
addObserverForAllModels:
addObserver:forModelWithID:
removeObserverForAllModels:
removeObserver:forModelWithID:
externalDataForModelID:error:
externalDataForExternalID:error:
externalIDForModelID:error:
modelIDForExternalID:error:
setExternalData:forModelID:
setExternalData:forExternalID:
destroyWithError:
addModels:andRemoveModelIDs:options:
updateModels:andRemoveModelIDs:options:
createModels:options:
addModels:options:
updateModels:options:
removeModelIDs:options:
removeModelsWithParentModelID:options:
removeModelsAndDescendantModelsWithIDs:depth:options:
removeAllModelsOfTypes:options:
createLocalInputWithError:
shouldLogPrivateInformation
localDatabase
setLocalDatabase:
mirror
observersForAllModels
modelObserversByModelID
mirrorOutputObservers
hasStartedUp
setHasStartedUp:
_hasStartedUp
_localDatabase
_mirror
_observersForAllModels
_modelObserversByModelID
_mirrorOutputObservers
_sql
T@"NSHashTable",R,N,V_observersForAllModels
T@"NSMutableDictionary",R,N,V_modelObserversByModelID
T@"NSHashTable",R,N,V_mirrorOutputObservers
T@"HMBLocalSQLContext",R,N,V_sql
TB,N,V_hasStartedUp
T@"HMBLocalDatabase",W,N,V_localDatabase
T@"HMBModelContainer",R,N,V_modelContainer
T@"HMBLocalZoneConfiguration",R,N,V_configuration
T@"<HMBLocalZoneID>",R,N,V_zoneID
T@"<HMBMirrorProtocol>",R,N,V_mirror
T@"<HMBLocalZoneDelegate>",W,N,V_delegate
rebuilderStateString:
keyStatusString:
hmbDecodeData:fromStorageLocation:error:
hmbEncodeForStorageLocation:error:
initWithState:message:
message
rebuildState
_keyStatus
_message
_rebuildState
T@"NSString",R,N,V_message
TQ,R,N,V_rebuildState
Tq,R,N,V_keyStatus
initWithLocalZone:zoneRow:modelType:returning:
returning
modelTypeBindOffset
_modelTypeBindOffset
_returning
TQ,R,N,V_returning
Ti,R,N,V_modelTypeBindOffset
migrateUnsupportedModels
recordIDForModel:
populateManateeCloudRecord:withModel:encodingContext:error:
encodeManateeCloudModel:existingRecord:encodingContext:error:
decodeManateeCloudFromRecord:externalRecordFields:source:error:
labels
T@"NSArray",R,N
name
T@"NSData",R,N
T@"NSString",R,N
initWithName:
_name
T@"NSString",R,N,V_name
isGreaterThan:
isLessThan:
isGreaterThanOrEqualTo:
isLessThanOrEqualTo:
properties
resolveInstanceMethod:
hmbShouldLogPrivateInformation
hmbPropertyNames
hmbQueries
hmbMutableModelClassesWithQueries
hmbModelClassesWithQueries
hmbResetModelsWithQueries
hmbPrepareQueries
hmbSchemaHashRoot
hmbExcludeFromCloudStorage
hmbReadOnlyBefore
hmbGenericRepresentation
propertyDiffersFrom:to:
formattedStringForValue:
hmbExternalProperties
hmbExternalRecordFields
hmbSetProperty:named:
hmbUnsetPropertyNamed:
hmbDefaultValueForPropertyNamed:
hmbPropertyNamed:isSet:
hmbPropertyNamed:
hmbPropertyIsAvailable:
hmbPropertyWasSet:
hmbPropertyIsReadOnly:
TB,R,N
T@"NSSet",R,N
T@"NSUUID",R,N
T@"NSDictionary",R,N
T@"NSSet",R,C,N
T@"HMFVersion",R,N
T#,R,N
populateModelWithDictionary:fromStorageLocation:using:
hmbDataVersion
hmbAssociateWithContainer:
hmbContainerDataVersion
_validateType:error:
validateType:path:
hmbPrepareForStorageLocation:
prepareForStorageLocation:using:updatedModelIDs:error:
hmbSetProperties
hmbIsModelReadOnly
hmbIsModelGenericRepresentation
hmbValidForStorage:
hmbModelByMergingFromModel:isFromCloud:error:
hmbMergeSetPropertiesFromModel:
hmbModelByMergingSetPropertiesFromModel:
hmbIsDifferentFromModel:differingFields:
hmbType
setHmbMinimumSupportedVersion:
hmbMinimumSupportedVersion
hmbCanonicalType
hmbCanonicalTypeInferred
hmbSetExternalProperties
hmbSetExternalRecordFields
hmbExternallyFetched
setHmbExternallyFetched:
hmbPropertyIsExternal:
dumpDebug:
dumpDebug
hmbDescription
hmbReserved
setHmbReserved:
hmbModelID
setHmbModelID:
hmbParentModelID
setHmbParentModelID:
setHmbType:
setHmbDataVersion:
hmbRecordRow
setHmbRecordRow:
hmbUnavailableProperties
setHmbUnavailableProperties:
hmbReadOnlyProperties
setHmbReadOnlyProperties:
hmbIgnoreModel
hmbModelContainer
setHmbModelContainer:
_hmbIgnoreModel
_hmbReserved
_hmbModelID
_hmbParentModelID
_hmbType
_hmbDataVersion
_hmbRecordRow
_hmbUnavailableProperties
_hmbReadOnlyProperties
_hmbModelContainer
T@"HMBModelContainer",W,N,V_hmbModelContainer
T@"HMFVersion",&,N,V_hmbDataVersion
T@"NSUUID",&,N,V_hmbModelID
T@"NSUUID",&,N,V_hmbParentModelID
T@"NSString",&,N,V_hmbType
T@"NSSet",&,N,V_hmbUnavailableProperties
T@"NSSet",&,N,V_hmbReadOnlyProperties
TQ,N,V_hmbRecordRow
T@"NSMutableDictionary",&,N,V_hmbReserved
T@"HMFVersion",&,N
TB,R,N,V_hmbIgnoreModel
debugString:
initWithUserRecordID:
userRecordID
_userRecordID
T@"CKRecordID",R,V_userRecordID
readOnly
setReadOnly:
createIfNeeded
setCreateIfNeeded:
_readOnly
_createIfNeeded
TB,N,V_readOnly
TB,N,V_createIfNeeded
T@"HMBModelContainer",&,D,N
T@"<HMBLocalZoneDelegate>",W,D,N
applyNativeCKValue:fromSource:associatingWith:toModel:propertyNamed:
nativeCKValueWithEncodingContext:error:
includeInModelEncoding
hmbObjectByMergingFromObject:
initWithUploadStreamingAsset:
initWithUploadStreamingAsset:downloadStreamingAsset:
uploadStreamingAsset
setUploadStreamingAsset:
downloadStreamingAsset
setDownloadStreamingAsset:
_uploadStreamingAsset
_downloadStreamingAsset
T@"CKStreamingAsset",&,N,V_uploadStreamingAsset
T@"CKStreamingAsset",&,N,V_downloadStreamingAsset
initWithProcessingFuture:
processingFuture
_processingFuture
T@"NAFuture",R,V_processingFuture
initWithZoneRow:
initWithZoneRow:name:token:
setIdentifier:
setZoneRow:
replication
setReplication:
_replication
TQ,N,V_zoneRow
T@"<HMBLocalZoneID>",&,N,V_identifier
T@"NSUUID",&,N,V_replication
peformCodeOperationWithServiceName:functionName:request:responseClass:
zoneStartUp
handleIdentityLost
handleZoneChanged
rebuildCompleteFuture
T@"HMBCloudZoneRebuilderStatus",R,C
initWithCloudZone:
setRebuildCompleteFuture:
previousSentinelRebuildRecord
setPreviousSentinelRebuildRecord:
lastRebuildUUID
setLastRebuildUUID:
uploadMonitorWatchdogTimer
setUploadMonitorWatchdogTimer:
_rebuildCompleteFuture
_previousSentinelRebuildRecord
_lastRebuildUUID
_uploadMonitorWatchdogTimer
T@"CKRecord",&,N,V_previousSentinelRebuildRecord
T@"NSUUID",&,N,V_lastRebuildUUID
T@"HMFTimer",&,N,V_uploadMonitorWatchdogTimer
T@"HMBCloudZone",W,N,V_cloudZone
T@"NAFuture",&,N,V_rebuildCompleteFuture
T@"HMBCloudZoneRebuilderStatus",C,V_rebuilderStatus
cloudZone:didChangeRebuildStatus:
cloudDatabase:didChangeManateeKeysForZoneWithID:
compare:
allowedTypes
internalAllowedTypes
encodeAsOPACK:error:
decodeAsOPACK:error:
encodeAsNSDictionary:error:
decodeAsNSDictionary:error:
initWithDataVersion:legacyDataVersion:
readOnlyVersionsForModelClass:
unavailableVersionsForModelClass:
bestModelEncodingForStorageLocation:
typeNameForModelClass:
modelClassForTypeName:
dataFromModel:encoding:storageLocation:updatedModelIDs:error:
modelFromDictionary:storageLocation:typeName:error:
modelFromData:encoding:storageLocation:type:error:
modelFromData:encoding:storageLocation:error:
schemaHashForModel:
updateLocalZone:
updateMirror:
_modelClassFromDictionary:typeName:error:
encodePropertyValue:forProperty:field:storageLocation:error:
decodePropertyValueFromData:forProperty:field:storageLocation:error:
legacyDataVersion
dataVersion
queryFieldsCache
classToNameTransform
setClassToNameTransform:
nameToClassTransform
setNameToClassTransform:
objectPropertyHashLookup
setObjectPropertyHashLookup:
classReadOnlyVersionCache
setClassReadOnlyVersionCache:
classUnavailableVersionCache
setClassUnavailableVersionCache:
_legacyDataVersion
_dataVersion
_queryFieldsCache
_classToNameTransform
_nameToClassTransform
_objectPropertyHashLookup
_classReadOnlyVersionCache
_classUnavailableVersionCache
T@"NSMapTable",R,N,V_queryFieldsCache
T@"HMBLocalZone",R,W,N,V_localZone
T@"<HMBMirrorProtocol>",R,W,N,V_mirror
T@"NSMapTable",C,N,V_classToNameTransform
T@"NSMapTable",C,N,V_nameToClassTransform
T@"NSMapTable",&,N,V_objectPropertyHashLookup
T@"NSMapTable",&,N,V_classReadOnlyVersionCache
T@"NSMapTable",&,N,V_classUnavailableVersionCache
T@"HMFVersion",R,C,N,V_legacyDataVersion
T@"HMFVersion",R,C,N,V_dataVersion
setTypeName:forModelClass:
createMirrorInputWithError:
sentinelUUID
uniqueToken
T@"NSUUID",&,D,N
hasCompleted
initWithContainerID:scope:
initWithContainerID:scope:name:modelID:
scope
modelID
_scope
_modelID
T@"CKContainerID",R,N,V_containerID
Tq,R,N,V_scope
T@"NSUUID",R,N,V_modelID
shouldUpdateClientsAction
shouldUpdateClients
setShouldUpdateClients:
_shouldUpdateClients
TB,N,V_shouldUpdateClients
participant
T@"HMBShareParticipant",&,D,N
resolveConflicts:options:
acceptInvitation:
_acceptInvitation:
localDatabase:willRemoveZoneWithID:
initWithDatastorePath:configuration:
initWithLocalSQLContext:configuration:
fetchZonesWithError:
openZoneWithZoneID:configuration:error:
openedZoneWithZoneID:
openZoneWithMirror:configuration:error:
openedZoneWithMirror:
removeZone:
removeLocalDataForZone:error:
handleLocalZoneShutdown:
queue
setQueue:
local
setLocal:
openZonesByZoneID
localZoneFactory
setLocalZoneFactory:
_queue
_local
_openZonesByZoneID
_localZoneFactory
T@"NSOperationQueue",&,N,V_queue
T@"HMBLocalSQLContext",&,N,V_local
T@"NSMapTable",R,N,V_openZonesByZoneID
T@?,C,N,V_localZoneFactory
T@"<HMBLocalDatabaseDelegate>",W,N,V_delegate
performCloudPullWithFetchToken:options:
hasPerformedInitialFetch
performCloudPullWithOptions:
cloudDatabase:didCreateZoneWithID:
cloudDatabase:didRemoveZoneWithID:
cloudDatabase:willRemoveZoneWithID:
cloudDatabase:encounteredError:withOperation:onContainer:
cloudDatabase:didReceiveMessageWithUserInfo:
handler:didReceivePushForTopic:
handler:didReceiveCKNotification:
handler:didReceiveMessageWithUserInfo:
initWithLocalDatabase:stateZone:container:configuration:databaseStateModelsByScope:zoneStateModels:credentialsAvailabilityListener:dataSource:
initWithLocalDatabase:configuration:
performInitialCloudSync
_performInitialCloudSync
addContainerOperation:
addDatabaseOperation:forScope:
performAdministrativeFetchForAllDatabases:
performAdministrativeFetchForDatabaseScope:withForce:
handleCreatedZoneIDs:
handleUpdatedZonesIDs:
handleRemovedZoneIDs:userInitiated:
openOrCreatePrivateZoneWithID:configuration:delegate:error:
openExistingPrivateZoneWithID:configuration:delegate:error:
openExistingSharedZoneWithID:configuration:delegate:error:
removeZoneWithID:
_retryCloudKitOperationAfterError:retryBlock:
removeStateForZoneID:
retryStartupBlock:
operationConfigurationWithProcessingOptions:
dataSource
privateDatabaseState
setPrivateDatabaseState:
sharedDatabaseState
setSharedDatabaseState:
publicDatabaseState
setPublicDatabaseState:
zoneStateByZoneID
container
credentialsAvailabilityListener
sharedDatabase
privateDatabase
publicDatabase
cloudZoneFactory
setCloudZoneFactory:
invitationOperationQueue
databaseFetchOperationQueue
initialCloudSyncFuture
setInitialCloudSyncFuture:
_dataSource
_privateDatabaseState
_sharedDatabaseState
_publicDatabaseState
_zoneStateByZoneID
_credentialsAvailabilityListener
_sharedDatabase
_privateDatabase
_publicDatabase
_cloudZoneFactory
_invitationOperationQueue
_databaseFetchOperationQueue
_initialCloudSyncFuture
T@"<HMBCloudDatabaseDataSource>",R,N,V_dataSource
T@"HMBLocalDatabase",R,N,V_localDatabase
T@"HMBLocalZone",R,N,V_stateZone
T@"HMBCloudDatabaseStateModel",&,N,V_privateDatabaseState
T@"HMBCloudDatabaseStateModel",&,N,V_sharedDatabaseState
T@"HMBCloudDatabaseStateModel",&,N,V_publicDatabaseState
T@"NSMutableDictionary",R,N,V_zoneStateByZoneID
T@"CKContainer",R,N,V_container
T@"HMBCloudCredentialsAvailabilityListener",R,N,V_credentialsAvailabilityListener
T@"CKDatabase",R,N,V_sharedDatabase
T@"CKDatabase",R,N,V_privateDatabase
T@"CKDatabase",R,N,V_publicDatabase
T@?,C,N,V_cloudZoneFactory
T@"NSOperationQueue",R,N,V_invitationOperationQueue
T@"NSOperationQueue",R,N,V_databaseFetchOperationQueue
T@"NAFuture",&,N,V_initialCloudSyncFuture
T@"<HMBCloudDatabaseDelegate>",W,N,V_delegate
T@"CKContainerID",R,N
T@"HMBCloudDatabaseConfiguration",R,C,N,V_configuration
fetchZonesOn:
createPrivateZoneWithID:
removePrivateZoneWithID:
initWithName:offset:modelField:
offset
modelField
_offset
_modelField
Ti,R,N,V_offset
T@"HMBModelField",R,N,V_modelField
bindPropertiesToStatement:arguments:zoneBindRowOffset:zoneRow:error:
initWithLocalZone:statement:initialSequence:arguments:maximumRowsPerSelect:
initWithLocalZone:modelClassName:
modelClassNameOffset
modelClassName
_modelClassNameOffset
_modelClassName
Ti,R,N,V_modelClassNameOffset
T@"NSString",R,N,V_modelClassName
initWithLocalZone:parentModelID:
parentModelIDOffset
parentModelID
_parentModelIDOffset
_parentModelID
Ti,R,N,V_parentModelIDOffset
T@"NSUUID",R,N,V_parentModelID
initWithLocalZone:parentModelID:modelClassName:
initWithLocalZone:modelID:
setParentModelID:
modelStack
returnedModels
_modelStack
_returnedModels
T@"NSUUID",&,N,V_parentModelID
T@"NSMutableOrderedSet",R,N,V_modelStack
T@"NSMutableSet",R,N,V_returnedModels
initWithLocalZone:statement:columns:filter:
query
columns
filter
_query
_columns
_filter
T@"HMBLocalSQLQueryTableQueryAll",R,N,V_query
T@"NSArray",R,N,V_columns
T@?,R,N,V_filter
registerSubscriptionForExternalRecordType:
unregisterSubscriptionForExternalRecordType:
T@"NSSet",R,C
initWithTimeout:
cancelWithError:
initWithBlock:
main
block
future
_block
_future
T@?,R,C,V_block
T@"NAFuture",R,V_future
initWithCloudZone:block:
T@"HMBCloudZone",R,V_cloudZone
hmbIsRetryShareOperationError
hmbRetryShareOperationError
TB,R,GhmbIsRetryShareOperationError
argumentWithPropertyName:
argumentWithPropertyName:defaultValue:
initWithPropertyName:defaultValue:
propertyName
defaultValue
_propertyName
_defaultValue
T@"NSString",R,N,V_propertyName
T@"<HMBQueryableModelFieldCoder>",R,N,V_defaultValue
initWithSQLPredicate:sqlColumns:initialSequence:maximumRowsPerSelect:arguments:
setModelClass:
prepareOnTable:
performQueryOn:arguments:
hasExpectedIndexes
sqlPredicate
sqlColumns
initialSequence
preparedQueries
sqlSelect
argumentFields
encodedDefaultValuesByArgumentName
_sqlPredicate
_sqlColumns
_maximumRowsPerSelect
_initialSequence
_preparedQueries
_sqlSelect
_argumentFields
_encodedDefaultValuesByArgumentName
T@"NSString",R,N,V_sqlPredicate
T@"NSArray",R,N,V_sqlColumns
TQ,R,N,V_maximumRowsPerSelect
T@"NSNumber",R,N,V_initialSequence
T@"NSMapTable",R,N,V_preparedQueries
T#,&,N,V_modelClass
T@"NSString",R,N,V_sqlSelect
T@"NSDictionary",R,N,V_argumentFields
T@"NSDictionary",R,N,V_encodedDefaultValuesByArgumentName
queryWithSQLPredicate:ascending:arguments:
queryWithSQLPredicate:ascending:indexedProperties:arguments:
initWithSQLPredicate:sqlColumns:initialSequence:maximumRowsPerSelect:indexNameSuffix:indexedColumns:arguments:
indexName
indexNameSuffix
indexedColumns
_indexNameSuffix
_indexedColumns
T@"NSString",R,N,V_indexNameSuffix
T@"NSArray",R,N,V_indexedColumns
queryWithSQLPredicate:sequenceArgumentName:indexedProperties:arguments:
initWithSQLPredicate:sqlColumns:sequenceArgumentName:maximumRowsPerSelect:indexNameSuffix:indexedColumns:arguments:
sequenceArgumentName
_sequenceArgumentName
T@"NSString",R,C,V_sequenceArgumentName
queryWithSQLPredicate:maximumRowsReturned:indexedProperties:arguments:
queryWithSQLPredicate:indexedProperties:arguments:
countMatchesOn:arguments:error:
initWithOutputBlockRow:recordRow:model:queryTable:externalID:externalData:
setExternalID:
setExternalData:
TQ,R,V_recordRow
TQ,R,V_outputBlockRow
T@"NSData",C,N,V_externalID
T@"NSData",C,N,V_externalData
initWithBlockRow:options:
localZone:willPerformMirrorOutputForModel:
addMirrorOutputObserver:
removeMirrorOutputObserver:
allMirrorOutputObservers
fetchOptionsForOutputBlock:error:
fetchRecordsForOutputBlock:error:
markGroupAsSentWithOutputBlock:tuples:
removeOutputBlockWithRow:error:
hmbEncodeQueryableParameter:
hmbDecodeQueryableParameter:
hmbDescriptionForEncodedQueryableVariable:
initWithModelID:
associateWithContainer:
isValidForContainer:updatedModelIDs:
referencedModelFromLocalZone:error:
T@"NSUUID",R,N,V_hmbModelID
initWithModelID:action:
action
referencedModelFromCloudZone:allowExternalFetch:
reference
setReference:
setAction:
_reference
_action
TQ,N,V_action
T@"CKReference",&,N,V_reference
initWithRecordID:error:
initWithRecordID:clientRecord:serverRecord:ancestorRecord:
recordID
clientRecord
serverRecord
ancestorRecord
_recordID
_clientRecord
_serverRecord
_ancestorRecord
T@"CKRecordID",R,V_recordID
T@"CKRecord",R,V_clientRecord
T@"CKRecord",R,V_serverRecord
T@"CKRecord",R,V_ancestorRecord
initWithParticipantClientIdentifier:emailAddress:
initWithParticipantClientIdentifier:phoneNumber:
initWithParticipantClientIdentifier:cloudShareID:
initWithParticipantClientIdentifier:lookupInfo:
participantClientIdentifier
shouldGrantWriteAccess
setShouldGrantWriteAccess:
lookupInfo
_shouldGrantWriteAccess
_participantClientIdentifier
_lookupInfo
T@"CKUserIdentityLookupInfo",R,V_lookupInfo
T@"NSUUID",R,C,V_participantClientIdentifier
TB,V_shouldGrantWriteAccess
initWithModel:previousModel:options:mirrorOutputFuture:
previousModel
_previousModel
T@"HMBModel",R,V_previousModel
fetchCompleteModelWithID:
fetchCompleteModelsWithIDs:
fetchCompleteModel:force:
fetchCompleteModels:force:
_fetchCompleteModelsWithIDs:force:
fetchCompleteModelForRecordID:
fetchCompleteModelsForRecordIDs:
fetchRowFromStatement:skip:updatedSequenceColumn:error:
bindPropertiesToStatement:currentSequence:error:
initWithLocalZone:statement:initialSequence:sequenceBindOffset:arguments:maximumRowsPerSelect:
currentSequenceAsData
setCurrentSequenceAsData:
lastReturnedSequence
setLastReturnedSequence:
returnedIDs
setReturnedIDs:
_currentSequenceAsData
_lastReturnedSequence
_returnedIDs
T@"NSData",&,N,V_currentSequenceAsData
T@"NSData",&,N,V_lastReturnedSequence
T@"NSMutableSet",&,N,V_returnedIDs
_fetchRecordsWithRecordIDs:
_fetchRecordsForContexts:
fetchRecordsWithRecordIDs:
fetchRecordWithRecordID:canRetry:
initWithRecordIDs:future:
recordIDs
_recordIDs
T@"NSSet",R,C,V_recordIDs
initWithRecordRow:externalID:externalData:modelID:modelEncoding:modelData:modelSchema:modelType:pushEncoding:pushData:pushBlockRow:
pushEncoding
pushData
pushBlockRow
_pushEncoding
_pushData
_pushBlockRow
TQ,R,N,V_pushEncoding
T@"NSData",R,N,V_pushData
T@"NSNumber",R,N,V_pushBlockRow
initWithSQLContext:zoneRow:returning:
updateServerChangeToken:forDatabaseWithScope:
updateServerChangeToken:forZoneWithID:
serverChangeTokenForZoneWithID:
updateRebuildStatus:forZoneWithID:
updateNeedsZoneDeletion:forZoneWithID:
deallocForZoneWithID:
initWithContainerID:scope:zoneID:name:modelID:
initWithContainerID:scope:zoneID:
T@"CKRecordZoneID",R,C,V_zoneID
T@"NSData",R,N,V_token
fetchSubscriptionsOn:
subscriptionIDForCloudID:recordType:
subscriptionIDForZoneID:recordType:
pushGroupWithBlockRow:tuples:options:activity:completionPromise:
_triggerOutputForOutputRow:options:
cloudZone:didEncounterConflicts:options:
localZone:didCompleteProcessingWithResult:
localZone:willReindexTableForModel:
localZoneWillReindex:
queryModelsOfType:predicate:
queryModelsOfType:filter:
queryModelsOfType:properties:filter:
fetchModels
queryModelsOfType:
queryModelsWithParentModelID:
queryModelsWithParentModelID:ofType:
queryModelsRecursivelyStartingWithModelID:
queryModelsUsingQuery:
queryModelsUsingQuery:arguments:
countModelsUsingQuery:arguments:error:
rebuildIndexesIfNeeded
commitWithOptions:error:
stageAdditionForModel:externalID:externalData:error:
stageRemovalForModelWithExternalID:error:
requestTokenForTopic:identifier:
enabledTopics
setEnabledTopics:
T@"<HMBAPSConnectionDelegate>",W
T@"NSArray",C
sharedHandlerForEnvironment:
connection:didReceiveToken:forTopic:identifier:
connection:didReceivePublicToken:
connection:didReceiveIncomingMessage:
initWithAPSConnection:
addObserver:forBundleIdentifier:
_apsLock
_apsConnection
_observers
initWithOwner:identifier:zoneRow:blockRow:
updateModelID:modelEncoding:modelData:
shouldRebuildOnManateeKeyLoss
setShouldRebuildOnManateeKeyLoss:
_shouldRebuildOnManateeKeyLoss
TB,V_shouldRebuildOnManateeKeyLoss
TB,D
localDatabaseShouldLogPrivateInformation:
localDatabase:detectedLocalCorruptionWithInfo:
detectedLocalCorruptionWithInfo:
initWithUpdatedRecords:deletedRecordIDs:error:
initWithUpdatedRecords:deletedRecordIDs:conflicts:fatalError:
pushResultByMergingWithPushResult:
updatedRecords
deletedRecordIDs
conflicts
fatalError
_updatedRecords
_deletedRecordIDs
_conflicts
_fatalError
T@"NSSet",R,C,V_updatedRecords
T@"NSSet",R,C,V_deletedRecordIDs
T@"NSSet",R,C,V_conflicts
T@"NSError",R,C,V_fatalError
cloudZone:didRemoveParticipantWithClientIdentifier:
initializeShareModels
handleUpdatedShare:error:
handleUpdatedShareParticipantRecord:error:
handleUpdatedShareModel:
handleUpdatedShareParticipantModels:
createShareModel
_createShareModel
leaveCloudShareRequestingNewInvitationToken:
_leaveCloudShareRequestingNewInvitationToken:allowCloudPull:
_addShareOperationWithName:block:
_addShareOperationAfterStartupWithName:block:
_pushUpdatedShare:
_pushUpdatedShare:participantRecord:
_pushDeletedParticipantRecordIDs:
fetchOwnerParticipantCloudShareID
fetchCurrentParticipantCloudShareID
fetchCloudShareIDForShareParticipantClientIdentifier:
fetchInvitationWithContext:
_fetchInvitationWithContext:usingShare:
setWriteAccessEnabled:forParticipant:
_setWriteAccessEnabled:forParticipant:usingShare:
revokeShareForParticipant:
_revokeShareForParticipant:usingShare:
participants
participantWithClientIdentifier:
serverChangeToken
T@"CKServerChangeToken",&,D,N
initWithColumns:
initWithColumnNames:
indexes
mutableIndexes
_mutableIndexes
T@"NSMutableDictionary",R,N,V_mutableIndexes
T@"NSSet",R,N,V_columnNames
reloadSQLQueryMetadata
verifyTables
prepareTables
initWithQueryRow:data:
queryRow
queryData
_queryRow
_queryData
TQ,R,N,V_queryRow
T@"NSData",R,N,V_queryData
initWithRecordRow:tuples:
tuples
_tuples
T@"NSDictionary",R,N,V_tuples
fetchParticipantWithLookupInfo:
fetchShareMetadataForInvitation:
acceptInvitationWithShareMetadata:
fetchCurrentUserRecordForDatabase:
initWithLocalZone:inputBlock:
stageRemovalForModelWithID:error:
inputBlock
stagedChangesCount
setStagedChangesCount:
_inputBlock
_stagedChangesCount
T@"HMBLocalZone",R,V_localZone
T@"HMBLocalSQLContextInputBlock",R,V_inputBlock
TQ,V_stagedChangesCount
initWithModel:externalID:
createOutputBlockWithError:
createInputBlockWithType:error:
insertBlockWithType:options:items:error:
insertBlockToRemoveAllModelsWithType:modelTypes:options:error:
insertBlockToRemoveChildModelsWithType:parentModelID:options:error:
insertBlockToRemoveModelsAndDescendantModelsWithType:modelIDs:depth:options:error:
_insertDeletionItemsForModelsAndDescendantModelsWithBlockRow:context:type:modelIDs:currentDepth:maximumDepth:options:error:
fetchReadyBlocksWithType:error:
fetchItemsInBlock:error:
removeBlockWithRow:error:
performAfterDelay:block:
externalID:
recordIDFromExternalID:error:
externalData:
hmbSetObject:forKey:encrypted:
hmbObjectForKey:encrypted:
recordFromExternalData:error:
hmbIsEqualToParticipant:
hmbCompress
hmbUncompress
hmbIsSQLiteConstraintError
hmbIsCloudKitError
hmbIsCloudKitInternalError
hmbCKInternalError
hmbCloudKitRetryDelay
hmbDefaultCloudKitRetryDelay
hmbIsCKZoneDeletedError
hmbIsCKChangeTokenExpiredError
hmbIsCKPartialFailureError
hmbIsCKMissingManateeIdentityError
hmbIsCKLimitExceededError
hmbIsCKManateeUnavailableError
hmbIsCKUnsyncedKeychainError
hmbIsCKNotAuthenticatedError
_hmbIsCKErrorWithCode:
_hmbIsCKErrorOrHasPartialFailureWithCode:
hmbIsUnretriableCKInternalErrorCode:
Td,R
hmbData
hmbVersionFromData:
data
hmbUUIDFromData:
hmbOPACKDataFromDictionaryWithError:
hmbDictionaryFromOPACKData:error:
databaseStateForDatabaseScope:
performCloudPullForScope:
initWithModel:encoded:
encoded
setEncoded:
setModel:
_encoded
T@"NSData",&,N,V_encoded
T@"HMBModel",&,N,V_model
objectFromData:encoding:storageLocation:recordRowID:error:
update:remove:
update:
remove:
stageAdditionForModel:error:
additionConstraint
setAdditionConstraint:
_additionConstraint
Tq,V_additionConstraint
_zonesWithScope:
privateZoneIDs
sharedZoneIDs
publicZoneIDs
fetchZones:
populateV4CloudRecord:withModel:metadataFieldData:startEncoding:endEncoding:error:
cloudMetadataForModel:usingEncoding:
cloudFieldForEncoding:
initialize
initBlock
setInitBlock:
_initBlock
T@?,C,N,V_initBlock
initWithURL:readOnly:
close
_finalize
prepare
migrateFromSchemaVersion:error:
updateSchemaVersionTo:error:
_prepareFrom:
sqlBlock:
sqlBlockWithActivity:block:
sqlTransaction:
sqlTransactionWithActivity:block:
begin
commit
rollback
runSQLite3:
execSQLite3:
execSQLite3:error:
runSQLite3:error:
insertSQLite3:error:
fetchSQLite3:error:block:
fetchSQLite3:limit:error:block:
fetchSQLite3One:error:block:
setLogIdentifier:
setContext:
lock
setLock:
mutation
setMutation:
_begin
_commit
_rollback
_logIdentifier
_url
_mutation
T@"HMFUnfairLock",&,N,V_lock
T^{sqlite3=},N,V_context
T@"NSString",&,N,V_logIdentifier
TQ,N,V_mutation
T@"NSURL",R,N,V_url
TB,R,N,V_readOnly
T@"NSOperationQueue",R,N,V_queue
contexts
removeDatastoreAtURL:
open:
open:readOnly:error:initializer:
open:readOnly:using:error:
close:
T@"NSHashTable",R,N
hmbDataWithSQLite3ColumnNoCopy:column:
hmbDataWithSQLite3Column:column:
hmbUUIDWithSQLite3Column:column:
hmbStringWithSQLite3Column:column:
hmbNumberWithSQLite3Column:column:
hmbErrorWithSQLContext:
hmbErrorWithSQLContext:statement:
hmbErrorWithSQLite3Context:
hmbErrorWithSQLite3Context:statement:
hmbErrorWithSQLite3Statement:
hmbErrorWithSQLite3Status:
fetchModelWithRecordRow:error:
fetchModelWithModelID:recordRow:error:
fetchRecordRowWithModelID:returning:error:
fetchRecordRowWithExternalID:returning:error:
fetchRecordRowsWithModelIDs:error:
queryAllRowRecordsReturning:
setExternalID:externalData:forRecordRow:
removeAllRecordsWithError:
fetchModelWithModelID:error:
fetchModelWithModelID:ofType:error:
fetchModelsWithParentModelID:ofType:error:
fetchModelsWithParentModelID:error:
fetchAllModelsWithError:
fetchModelsOfType:error:
searchEntries:for:options:
searchEntries:for:
unlinkDatastoreAt:everything:
openWithURL:readOnly:error:
sqlBlockWithActivity:error:block:
sqlTransactionWithActivity:error:block:
_insertZoneWithIdentification:name:error:
_deleteZoneWithRow:error:
_fetchAllZones:
_selectZoneWithRow:error:
_updateZoneWithRow:replication:error:
_insertBlockWithZoneRow:type:error:
_deleteBlockWithRow:error:
_deleteBlocksWithZoneRow:error:
_updateBlockWithRow:options:error:
_selectReadyBlocksWithZoneRow:type:error:
_selectBlockWithRow:error:
_deleteNullBlocksWithZoneRow:error:
_insertBlockWithZoneRow:type:options:items:error:
_insertItemWithZoneRow:blockRow:type:externalID:externalData:modelEncoding:modelData:error:
_insertDeletionItemsWithZoneRow:blockRow:type:modelType:error:
_insertDeletionItemWithZoneRow:blockRow:type:modelID:error:
_insertDeletionItemsWithZoneRow:blockRow:type:parentModelID:error:
_insertItemWithZoneRow:blockRow:type:modelType:error:
_updateItemWithZoneRow:blockRow:type:externalID:externalData:modelEncoding:modelData:error:
_deleteItemWithRow:error:
_deleteItemsWithBlockRow:error:
_deleteItemWithZoneRow:error:
_deleteItemWithZoneRow:type:externalID:error:
_selectItemsWithBlockRow:rowGreaterThan:limit:returning:error:
_selectItemsWithBlockRow:returning:error:
_deleteNullItemsWithZoneRow:type:error:
_deleteNullItemsWithZoneRow:error:
_insertIndexSentinelWithZoneRow:modelType:error:
_selectIndexSentinelForZoneRow:modelType:error:
_deleteIndexSentinelsWithModelType:error:
_deleteIndexSentinelsWithZoneRow:error:
flush:
queryTables
setQueryTables:
queryContextsByClass
setQueryContextsByClass:
queryContextsByModelType
setQueryContextsByModelType:
selectReadyInputBlocks
setSelectReadyInputBlocks:
selectReadyRollbackBlocks
setSelectReadyRollbackBlocks:
selectAllRecordRows
setSelectAllRecordRows:
selectAllRecordTypeRows
setSelectAllRecordTypeRows:
selectAllRecordParentModelIDRows
setSelectAllRecordParentModelIDRows:
selectAllRecordParentModelIDTypeRows
setSelectAllRecordParentModelIDTypeRows:
insertStore
deleteStore
selectStore
selectStores
updateStoreReplicationData
insertBlock
selectBlock
deleteBlock
deleteBlocksStore
updateBlock
selectReadyBlocks
deleteNullBlocks
insertItem
insertDeletionItemsForRecordsOfType
insertDeletionItemsForRecordWithUUID
insertDeletionItemsForRecordsWithParentUUID
updateItem
deleteItem
deleteItemsBlock
deleteItemsStore
deleteItemStoreExternal
selectItemsBlock
selectItemsBlockLimit
deleteNullItems
deleteNullItemsType
insertRecord
updateRecordExternal
updateRecordExternalExternal
updateRecordExternalUUID
updateRecordPush
updateRecordPushUUID
updateRecordClearPushExpected
updateRecordsClearPush
updateRecordType
deleteRecordBlock
deleteRecordUUID
deleteRecordExternal
deleteRecordsStore
deleteZombieRecords
selectRecord
selectRecordUUIDExternal
selectRecordUUID
selectRecordExternal
selectRecordsPushBlock
selectRecordsParentUUID
selectRecordsParentUUIDType
selectRecordsOfType
selectRecords
insertIndexSentinel
deleteIndexSentinels
deleteIndexSentinelsStore
selectIndexSentinel
_queryTables
_queryContextsByClass
_queryContextsByModelType
_selectReadyInputBlocks
_selectReadyRollbackBlocks
_selectAllRecordRows
_selectAllRecordTypeRows
_selectAllRecordParentModelIDRows
_selectAllRecordParentModelIDTypeRows
T@"NSDictionary",&,V_queryTables
T@"NSMapTable",&,V_queryContextsByClass
T@"NSMutableDictionary",&,V_queryContextsByModelType
T@"HMBSQLQueryStatement",&,N,V_selectReadyInputBlocks
T@"HMBSQLQueryStatement",&,N,V_selectReadyRollbackBlocks
T@"HMBSQLQueryStatement",&,N,V_selectAllRecordRows
T@"HMBSQLQueryStatement",&,N,V_selectAllRecordTypeRows
T@"HMBSQLQueryStatement",&,N,V_selectAllRecordParentModelIDRows
T@"HMBSQLQueryStatement",&,N,V_selectAllRecordParentModelIDTypeRows
initWithName:token:
_insertRecordWithZoneRow:externalID:externalData:modelID:parentModelID:modelType:modelEncoding:modelData:modelSchema:pushEncoding:pushData:pushBlockRow:error:
_updateRecordWithRow:externalID:externalData:error:
_updateRecordWithZoneRow:externalID:externalData:error:
_updateRecordWithZoneRow:modelID:externalData:error:
_updateRecordWithZoneRow:modelID:pushEncoding:pushData:pushBlockRow:error:
_updateRecordsClearPushWithPushBlockRow:error:
_updateRecordWithRow:modelEncoding:modelData:modelSchema:error:
_updateRecordWithRow:pushBlockRow:pushData:pushEncoding:error:
_updateRecordWithRow:modelType:modelSchema:error:
_deleteRecordWithZoneRow:modelID:error:
_deleteRecordWithZoneRow:externalID:error:
_deleteRecordWithRow:error:
_deleteRecordWithRow:expectedOutputBlockRow:error:
_clearPushForRecordRow:expectedOutputBlockRow:error:
_deleteRecordsWithZoneRow:error:
_deleteZombieRecordsWithZoneRow:error:
_selectRecordModelIDWithZoneRow:externalID:error:
_selectRecordWithZoneRow:modelID:returning:error:
_selectRecordWithRow:returning:error:
_selectRecordWithZoneRow:externalID:returning:error:
_selectRecordsWithZoneRow:parentModelID:returning:error:
_selectRecordWithZoneRow:parentModelID:modelType:returning:error:
_selectRecordsWithZoneRow:modelType:returning:error:
_selectRecordsWithZoneRow:modelType:returning:error:handler:
_selectRecordsWithZoneRow:returning:error:
_selectRecordsWithBlockRow:returning:error:
selectAllRecordsWithZoneRow:returning:
_resetOutputForRecordsWithBlockRow:error:
setDatabase:
cloudID
T@"HMBCloudID",&,D,N
lastAdministrativeFetch
T@"NSDate",&,D,N
T@"NSSet",C,N
T@"CKDatabase",W,N,V_database
isBackingStorageEqual:
initWithCKShareParticipant:clientIdentifier:
cloudShareID
hasWriteAccess
hasAccepted
clientIdentifier
ckShareParticipant
pendingInvitation
setPendingInvitation:
_clientIdentifier
_ckShareParticipant
_pendingInvitation
T@"CKShareParticipant",R,C,V_ckShareParticipant
T@"HMBShareInvitation",C,V_pendingInvitation
T@"NSUUID",R,C,V_clientIdentifier
T@"HMBShareUserID",R,C
fieldWithClass:
optionalFieldWithClass:
fieldWithClass:options:
optionalFieldWithClass:options:
deprecatedField
initWithClass:
initWithClass:options:
setDefaultValue:
encodeQueryableValue:
decodeQueryableValue:
descriptionForEncodedQueryableValue:
classObj
encrypted
setEncrypted:
externalRecordField
setExternalRecordField:
excludeFromCloudStorage
setExcludeFromCloudStorage:
isOptional
setOptional:
loggingVisibility
setLoggingVisibility:
readonlyVersion
setReadonlyVersion:
unavailableVersion
setUnavailableVersion:
conformsToHMBModelNativeCKWrapper
setConformsToHMBModelNativeCKWrapper:
encodeBlock
setEncodeBlock:
decodeBlock
setDecodeBlock:
descriptionBlock
setDescriptionBlock:
_encrypted
_excludeFromCloudStorage
_optional
_conformsToHMBModelNativeCKWrapper
_classObj
_externalRecordField
_loggingVisibility
_readonlyVersion
_unavailableVersion
_encodeBlock
_decodeBlock
_descriptionBlock
optional
TB,N,GisOptional,V_optional
TQ,N,V_loggingVisibility
T@,&,N,V_defaultValue
T@"HMFVersion",C,N,V_readonlyVersion
T@"HMFVersion",C,N,V_unavailableVersion
T@"NSString",&,N,V_externalRecordField
TB,N,V_encrypted
TB,N,V_excludeFromCloudStorage
TB,N,V_conformsToHMBModelNativeCKWrapper
T@?,C,N,V_encodeBlock
T@?,C,N,V_decodeBlock
T@?,C,N,V_descriptionBlock
T#,R,N,V_classObj
TB,D,N,GisOptional
TQ,D,N
T@,&,D,N
T@"HMFVersion",C,D,N
initWithExternalRecordField:encrypted:
applyTo:
fieldName
_fieldName
T@"NSString",R,N,V_fieldName
TB,R,N,V_encrypted
initWithEncodingBlock:decodingBlock:descriptionBlock:
encodingBlock
setEncodingBlock:
decodingBlock
setDecodingBlock:
_encodingBlock
_decodingBlock
T@?,C,N,V_encodingBlock
T@?,C,N,V_decodingBlock
externalRecordField:
encryptedExternalRecordField:
queryableField
queryableFieldWithEncodeBlock:decodeBlock:
queryableFieldWithEncodeBlock:decodeBlock:descriptionBlock:
pushSubscriptionsForDatabase:subscriptionsToSave:subscriptionIDsToRemove:
registerSubscription:forZoneWithID:
unregisterSubscription:forZoneWithID:
subscriptionsForZoneWithID:
unregisterPrivateSubscriptionForSubscriptionID:
unregisterSharedSubscriptionForSubscriptionID:
registerPrivateSubscription:
registerSubscriptionForExternalRecordType:databaseState:
registerPrivateSubscriptionForExternalRecordType:
registerSharedSubscriptionForExternalRecordType:
unregisterPrivateSubscriptionForExternalRecordType:
unregisterSharedSubscriptionForExternalRecordType:
migrateToSchema01WithError:
@24@0:8@16
B16@0:8
v24@0:8@16
v24@0:8@"NSCoder"16
@24@0:8@"NSCoder"16
@16@0:8
B24@0:8@16
Q16@0:8
@?16@0:8
v24@0:8@?16
v20@0:8B16
q16@0:8
v24@0:8q16
v24@0:8Q16
v16@0:8
@"NSString"
@"NSDictionary"
@"NSUUID"
@"HMFActivity"
@40@0:8@16@24@32
@"HMBProcessingOptions"
@"NSArray"
@"NAFuture"
i16@0:8
^{sqlite3_stmt=}32@0:8@16@24
@32@0:8@16@24
@40@0:8@16^{sqlite3_stmt=}24@32
^{sqlite3_stmt=}16@0:8
v24@0:8^{sqlite3_stmt=}16
@"HMBSQLContext"
^{sqlite3_stmt=}
@48@0:8@16@24Q32^@40
@48@0:8@16@24@32^@40
@"HMBCloudZone"
@"HMBCloudZoneRebuilderStatus"
@40@0:8@16@24Q32
@48@0:8@16@24Q32@40
@48@0:8^{sqlite3_stmt=}16^B24^Q32^@40
@32@0:8@16^@24
B32@0:8^{sqlite3_stmt=}16^@24
v20@0:8i16
@"NSError"
@"HMBSQLQueryStatement"
@"NSMutableArray"
@"NSNumber"
@24@0:8^{_NSZone=}16
@48@0:8@16@24@32@40
@56@0:8@16@24@32@40@48
@"HMBShareInvitationContext"
@"HMBCloudZoneID"
@"NSDate"
@"NSURL"
@"CKDeviceToDeviceShareInvitationToken"
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
@"NSObject"16@0:8
v24@0:8@"HMFTimer"16
{hmf_unfair_data_lock_s="lock"{os_unfair_lock_s="_os_unfair_lock_opaque"I}}
@"CKContainer"
@"NSNotificationCenter"
@"HMFTimer"
@40@0:8Q16Q24@32
@"NSData"
@44@0:8@16Q24@32B40
@32@0:8@16Q24
@48@0:8@16^{sqlite3_stmt=}24@32@40
@56@0:8Q16@24@32Q40@48
@32@0:8^{sqlite3_stmt=}16Q24
@"HMBModel"
@104@0:8@16@24@32@40@48Q56Q64@72@80@88@96
@"HMBLocalZoneProcessModelContext"
@"HMBLocalSQLQueryTable"
@24@0:8Q16
B32@0:8@16@24
@56@0:8@16@24Q32Q40Q48
@"HMBLocalSQLContext"
@"NSMutableDictionary"
@32@0:8Q16@24
v24@0:8@"HMBLocalZone"16
@"NAFuture"16@0:8
@"NAFuture"32@0:8Q16@"HMBProcessingOptions"24
@"<HMBLocalZoneID>"16@0:8
B40@0:8@16@24@?32
v32@0:8@16@24
B32@0:8@16^@24
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"HMBCloudDatabase"
@"<HMBCloudZoneDelegate>"
@"HMBCloudZoneConfiguration"
@"HMBLocalZone"
@"CKDatabase"
@"NSMapTable"
@"<HMBCloudZoneRebuilder>"
@"NSOperationQueue"
@"NSMutableSet"
@"HMBCloudZoneShareModel"
@"HMBModelContainer"
@44@0:8@16@24@32B40
@48@0:8@16@24@32B40B44
@"CKContainerID"
@"CKOperationConfiguration"
@"HMFScheduler"
@36@0:8@16#24B32
@40@0:8@16@24@?32
Q32@0:8Q16^@24
Q48@0:8Q16Q24@32^@40
@"HMBSQLStatement"
@"NSHashTable"
@56@0:8@16@24Q32@40@48
B24@0:8^@16
@40@0:8@16Q24@32
@24@0:8^@16
@"HMBLocalDatabase"
@"HMBLocalZoneConfiguration"
@"<HMBLocalZoneID>"
@"<HMBMirrorProtocol>"
@"<HMBLocalZoneDelegate>"
@24@0:8q16
@40@0:8@16Q24^@32
@32@0:8Q16^@24
@"NSData"32@0:8Q16^@24
@40@0:8@"NSData"16Q24^@32
@48@0:8@16Q24@32Q40
B48@0:8@16@24@32^@40
@"NSArray"16@0:8
@"NSData"16@0:8
@32@0:8@16^B24
v32@0:8@16@"NSString"24
v24@0:8@"NSString"16
@24@0:8@"NSString"16
@32@0:8@"NSString"16^B24
B24@0:8@"NSString"16
@48@0:8Q16@24@32^@40
@36@0:8@16B24^@28
@"HMFVersion"
@"NSSet"
@20@0:8B16
@"CKRecordID"
v56@0:8@16Q24@32@40@48
@"<CKRecordValue>"32@0:8@"HMBModelContainerEncodingContext"16^@24
v56@0:8@"<CKRecordValue>"16Q24@"HMBModelContainer"32@"HMBModel"40@"NSString"48
@"CKStreamingAsset"
@40@0:8Q16@24@32
@48@0:8@16@24@32#40
@"HMBCloudZoneRebuilderStatus"16@0:8
@"CKRecord"
@24@0:8#16
Q24@0:8Q16
#24@0:8@16
@56@0:8@16Q24Q32@40^@48
@48@0:8@16Q24@32^@40
@48@0:8@16Q24Q32^@40
#40@0:8@16@24^@32
@56@0:8@16@24@32Q40^@48
v32@0:8@16#24
@32@0:8@16q24
@48@0:8@16q24@32@40
@40@0:8@16@24^@32
@"<HMBLocalDatabaseDelegate>"
v32@0:8@"HMBCloudPushHandler"16@"NSString"24
v32@0:8@"HMBCloudPushHandler"16@"CKNotification"24
v32@0:8@"HMBCloudPushHandler"16@"NSDictionary"24
@80@0:8@16@24@32@40@48@56@64@72
v32@0:8@16q24
@28@0:8q16B24
v28@0:8@16B24
B32@0:8@16@?24
@"<HMBCloudDatabaseDelegate>"
@"HMBCloudDatabaseConfiguration"
@"<HMBCloudDatabaseDataSource>"
@"HMBCloudDatabaseStateModel"
@"HMBCloudCredentialsAvailabilityListener"
@36@0:8@16i24@28
@"HMBModelField"
B52@0:8^{sqlite3_stmt=}16@24i32Q36^@44
@56@0:8@16@24@32@40Q48
@"NSMutableOrderedSet"
@48@0:8@16@24@32@?40
@"HMBLocalSQLQueryTableQueryAll"
@24@0:8@?16
@32@0:8@16@?24
@"<HMBQueryableModelFieldCoder>"
@56@0:8@16@24@32Q40@48
v24@0:8#16
@36@0:8@16B24@28
@44@0:8@16B24@28@36
@72@0:8@16@24@32Q40@48@56@64
@48@0:8@16Q24@32@40
@64@0:8Q16Q24@32@40@48@56
B32@0:8Q16^@24
@"NSData"24@0:8@"<HMBQueryableModelFieldCoder>"16
@"<HMBQueryableModelFieldCoder>"24@0:8@"NSData"16
@"NSString"24@0:8@"NSData"16
@28@0:8@16B24
@"CKReference"
@"CKUserIdentityLookupInfo"
@48@0:8^{sqlite3_stmt=}16^B24^@32^@40
B40@0:8^{sqlite3_stmt=}16@24^@32
@64@0:8@16@24@32Q40@48Q56
@104@0:8Q16@24@32@40Q48@56@64@72Q80@88@96
@40@0:8@16Q24Q32
v28@0:8B16@20
@56@0:8@16q24@32@40@48
@40@0:8@16q24@32
@"CKRecordZoneID"
v56@0:8Q16@24@32@40@48
v32@0:8@"HMBLocalZone"16@"HMBProcessingResult"24
v32@0:8@"HMBLocalZone"16@"NSString"24
@32@0:8#16@24
@32@0:8#16@?24
@40@0:8#16@24@?32
@32@0:8@16#24
v32@0:8@"NSString"16@"NSString"24
@"<HMBAPSConnectionDelegate>"16@0:8
v24@0:8@"<HMBAPSConnectionDelegate>"16
v24@0:8@"NSArray"16
v48@0:8@16@24@32@40
v48@0:8@"<HMBAPSConnection>"16@"NSData"24@"NSString"32@"NSString"40
v32@0:8@"<HMBAPSConnection>"16@"NSData"24
v32@0:8@"<HMBAPSConnection>"16@"APSIncomingMessage"24
@"<HMBAPSConnection>"
@48@0:8@16@24Q32Q40
@24@0:8B16B20
@28@0:8B16@20
@36@0:8B16@20@28
@"HMBLocalSQLContextInputBlock"
Q48@0:8Q16@24@32^@40
Q56@0:8Q16@24Q32@40^@48
B80@0:8Q16@24Q32@40Q48Q56@64^@72
v32@0:8d16@?24
v32@0:8d16@?<v@?>24
v36@0:8@16@24B32
d16@0:8
B24@0:8q16
@56@0:8@16Q24Q32Q40^@48
B64@0:8@16@24@32Q40Q48^@56
q32@0:8q16^@24
B32@0:8q16^@24
@24@0:8r*16
@24@0:8^{sqlite3_stmt=}16
Q32@0:8^{sqlite3_stmt=}16^@24
B32@0:8r*16^@24
B40@0:8^{sqlite3_stmt=}16^@24@?32
B48@0:8^{sqlite3_stmt=}16Q24^@32@?40
^{sqlite3=}16@0:8
v24@0:8^{sqlite3=}16
^{sqlite3=}
@"HMFUnfairLock"
@44@0:8@16B24^@28@?36
@44@0:8@16B24#28^@36
@28@0:8^{sqlite3_stmt=}16i24
@32@0:8@16r*24
@24@0:8^{sqlite3=}16
@32@0:8^{sqlite3=}16r*24
@20@0:8i16
@40@0:8@16^Q24^@32
@40@0:8@16#24^@32
@32@0:8#16^@24
B40@0:8@16^@24@?32
Q40@0:8@16@24^@32
B40@0:8Q16@24^@32
Q40@0:8Q16Q24^@32
@40@0:8Q16Q24^@32
Q56@0:8Q16Q24@32@40^@48
Q80@0:8Q16Q24Q32@40@48Q56@64^@72
Q56@0:8Q16Q24Q32@40^@48
B80@0:8Q16Q24Q32@40@48Q56@64^@72
B48@0:8Q16Q24@32^@40
@56@0:8Q16Q24Q32Q40^@48
B40@0:8Q16Q24^@32
@40@0:8Q16@24^@32
Q120@0:8Q16@24@32@40@48@56Q64@72@80Q88@96@104^@112
B48@0:8Q16@24@32^@40
B64@0:8Q16@24Q32@40@48^@56
B56@0:8Q16Q24@32@40^@48
B56@0:8Q16@24@32Q40^@48
@48@0:8Q16@24Q32^@40
@56@0:8Q16@24@32Q40^@48
B56@0:8Q16@24Q32^@40@?48
@32@0:8Q16Q24
@"CKShareParticipant"
@"HMBShareInvitation"
@40@0:8@?16@?24@?32
@32@0:8@?16@?24
q24@0:8^@16
