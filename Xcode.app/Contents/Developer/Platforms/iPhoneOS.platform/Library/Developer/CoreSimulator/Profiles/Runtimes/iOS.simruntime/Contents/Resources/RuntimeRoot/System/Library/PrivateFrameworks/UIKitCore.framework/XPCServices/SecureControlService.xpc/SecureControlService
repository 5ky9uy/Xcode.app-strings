@(#)PROGRAM:SecureControlService  PROJECT:UIKit-6109.1.108
ffffff
@gfffff
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.backboardd.setAuthenticatedTouches</key>
<true/>
<key>com.apple.private.sandbox.profile:embedded</key>
<string>temporary-sandbox</string>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.fontservicesd</string>
<string>com.apple.CARenderServer</string>
<string>com.apple.backboard.hid.services</string>
</array>
<key>platform-application</key>
<true/>
</dict>
</plist>
init
contentSizeCategory
displayScale
initWithRoundedRectSize:cornerRadii:fillColor:
dealloc
drawInContext:atPoint:
alignmentSize
glyphDrawingInColor:
textDrawingInColor:
alignmentRect
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
drawingSize
T{CGSize=dd},R,N
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
initWithDrawingPlan:cornerStyle:cornerRadius:foregroundColor:backgroundColor:leftToRight:size:
.cxx_destruct
_drawingPlan
_foregroundColor
_backgroundDrawing
_leftToRight
_size
newFontForTextStyle:attributes:
fontContentSizeCategory
localization
length
assetGlyphWithName:glyphSize:textStyle:
preferredContentSizeCategory
currentHandler
handleFailureInMethod:object:file:lineNumber:description:
dictionaryWithObjects:forKeys:count:
initWithString:attributes:lineBreakMode:textAlignment:width:scale:
initWithVectorGlyph:tintColor:
initWithSlotStyle:secureName:iconGlyph:
intrinsicContentSize
minimumContentSize
_localizedText
_font
_assetGlyph
_contentSizeCategory
_displayScale
_alignmentSize
_intrinsicContentSize
_minimumContentSize
T{CGSize=dd},R,N,V_alignmentSize
Tr^{__CFString=},R,N,V_contentSizeCategory
Td,R,N,V_displayScale
T{CGSize=dd},R,N,V_intrinsicContentSize
T{CGSize=dd},R,N,V_minimumContentSize
serviceListener
setDelegate:
resume
initWithSlotDrawer:options:
setExportedInterface:
setExportedObject:
listener:shouldAcceptNewConnection:
getSizeToolWithReply:
getSlotMachineWithReply:
_sizeTool
_slotMachine
initWithLimit:
objectForKeyedSubscript:
category
style
secureNameForDrawing
iconGlyph
setObject:forKeyedSubscript:
evictedObjectForUsedObject:
removeObjectForKey:
specWithStyle:tag:
_drawingPlanForSizeSpec:
size
baseForegroundColor
baseBackgroundColor
tintColor
cornerStyle
cornerRadius
layoutDirection
isValid
getIntrinsicContentSizeForSpec:reply:
imageWithStyle:tag:forRemote:
drawingWithStyle:tag:forRemote:
_sizeSpecDrawingPlansLock
_sizeSpecDrawingPlans
_sizeSpecLRUCache
_UISecureControlDrawing
UISDrawing
NSObject
_UISecureControlDrawingPlan
_UISecureControlService
NSXPCListenerDelegate
UISSecureControlServiceProtocol
_UISecureControlSizeTool
_UISSecureControlSizeToolProtocol
UISSlotDrawer
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8^{CGContext=}16{CGPoint=dd}24
{CGSize=dd}16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
@76@0:8@16q24d32^{CGColor=}40^{CGColor=}48B56{CGSize=dd}60
v16@0:8
@"_UISecureControlDrawingPlan"
^{CGColor=}
@"UISPathDrawing"
{CGSize="width"d"height"d}
@36@0:8@16I24@28
@24@0:8^{CGColor=}16
r^{__CFString=}16@0:8
d16@0:8
@"NSString"
^{__CTFont=}
@"CUINamedVectorGlyph"
r^{__CFString=}
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v24@0:8@?16
v24@0:8@?<v@?@"<_UISSecureControlSizeToolProtocol>">16
v24@0:8@?<v@?@"<UISSlotMachineProtocol>">16
@"_UISecureControlSizeTool"
@"UISSlotMachine"
v32@0:8@16@?24
v32@0:8@"_UISSecureControlSizeSpec"16@?<v@?{CGSize=dd}>24
^{CGImage=}36@0:8@16@24B32
@36@0:8@16@24B32
^{CGImage=}36@0:8@"UISSlotStyle"16@"UISSlotTag"24B32
@"<UISDrawing>"36@0:8@"UISSlotStyle"16@24B32
@24@0:8@16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSMutableDictionary"
@"UISLRUCache"
UISecureControlDrawingPlan.m
Invalid parameter not satisfying: %@
color
@(#)PROGRAM:SecureControlService  PROJECT:UIKit-6109.1.108
@ffffff
?gfffff
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.backboardd.setAuthenticatedTouches</key>
<true/>
<key>com.apple.private.sandbox.profile:embedded</key>
<string>temporary-sandbox</string>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.fontservicesd</string>
<string>com.apple.CARenderServer</string>
<string>com.apple.backboard.hid.services</string>
</array>
<key>platform-application</key>
<true/>
</dict>
</plist>
evictedObjectForUsedObject:
setExportedObject:
initWithSlotDrawer:options:
localization
baseForegroundColor
objectForKeyedSubscript:
isValid
serviceListener
removeObjectForKey:
size
initWithString:attributes:lineBreakMode:textAlignment:width:scale:
newFontForTextStyle:attributes:
cornerStyle
baseBackgroundColor
setExportedInterface:
initWithRoundedRectSize:cornerRadii:fillColor:
length
dictionaryWithObjects:forKeys:count:
style
secureNameForDrawing
iconGlyph
category
setObject:forKeyedSubscript:
preferredContentSizeCategory
fontContentSizeCategory
layoutDirection
initWithLimit:
assetGlyphWithName:glyphSize:textStyle:
cornerRadius
tintColor
setDelegate:
handleFailureInMethod:object:file:lineNumber:description:
initWithVectorGlyph:tintColor:
specWithStyle:tag:
currentHandler
resume
init
dealloc
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
isMemberOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
description
debugDescription
TQ,R
T#,R
T@"NSString",R,C
drawInContext:atPoint:
drawingSize
alignmentRect
T{CGSize=dd},R,N
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
initWithDrawingPlan:cornerStyle:cornerRadius:foregroundColor:backgroundColor:leftToRight:size:
.cxx_destruct
_drawingPlan
_foregroundColor
_backgroundDrawing
_leftToRight
_size
initWithSlotStyle:secureName:iconGlyph:
textDrawingInColor:
glyphDrawingInColor:
alignmentSize
contentSizeCategory
displayScale
intrinsicContentSize
minimumContentSize
_localizedText
_font
_assetGlyph
_contentSizeCategory
_displayScale
_alignmentSize
_intrinsicContentSize
_minimumContentSize
T{CGSize=dd},R,N,V_alignmentSize
Tr^{__CFString=},R,N,V_contentSizeCategory
Td,R,N,V_displayScale
T{CGSize=dd},R,N,V_intrinsicContentSize
T{CGSize=dd},R,N,V_minimumContentSize
listener:shouldAcceptNewConnection:
getSizeToolWithReply:
getSlotMachineWithReply:
_sizeTool
_slotMachine
getIntrinsicContentSizeForSpec:reply:
imageWithStyle:tag:forRemote:
drawingWithStyle:tag:forRemote:
_drawingPlanForSizeSpec:
_sizeSpecDrawingPlansLock
_sizeSpecDrawingPlans
_sizeSpecLRUCache
_UISecureControlDrawing
UISDrawing
NSObject
_UISecureControlDrawingPlan
_UISecureControlService
NSXPCListenerDelegate
UISSecureControlServiceProtocol
_UISecureControlSizeTool
_UISSecureControlSizeToolProtocol
UISSlotDrawer
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8^{CGContext=}16{CGPoint=dd}24
{CGSize=dd}16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
@76@0:8@16q24d32^{CGColor=}40^{CGColor=}48B56{CGSize=dd}60
v16@0:8
@"_UISecureControlDrawingPlan"
^{CGColor=}
@"UISPathDrawing"
{CGSize="width"d"height"d}
@36@0:8@16I24@28
@24@0:8^{CGColor=}16
r^{__CFString=}16@0:8
d16@0:8
@"NSString"
^{__CTFont=}
@"CUINamedVectorGlyph"
r^{__CFString=}
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v24@0:8@?16
v24@0:8@?<v@?@"<_UISSecureControlSizeToolProtocol>">16
v24@0:8@?<v@?@"<UISSlotMachineProtocol>">16
@"_UISecureControlSizeTool"
@"UISSlotMachine"
v32@0:8@16@?24
v32@0:8@"_UISSecureControlSizeSpec"16@?<v@?{CGSize=dd}>24
^{CGImage=}36@0:8@16@24B32
@36@0:8@16@24B32
^{CGImage=}36@0:8@"UISSlotStyle"16@"UISSlotTag"24B32
@"<UISDrawing>"36@0:8@"UISSlotStyle"16@24B32
@24@0:8@16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSMutableDictionary"
@"UISLRUCache"
UISecureControlDrawingPlan.m
Invalid parameter not satisfying: %@
color
