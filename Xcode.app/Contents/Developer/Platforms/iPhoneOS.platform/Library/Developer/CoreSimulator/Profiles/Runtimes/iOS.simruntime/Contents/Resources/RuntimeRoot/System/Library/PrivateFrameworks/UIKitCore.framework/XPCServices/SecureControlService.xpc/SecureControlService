@(#)PROGRAM:SecureControlService  PROJECT:UIKit-6441.1.101
ffffff
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.backboardd.setAuthenticatedTouches</key>
<true/>
<key>com.apple.private.sandbox.profile:embedded</key>
<string>temporary-sandbox</string>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.fontservicesd</string>
<string>com.apple.CARenderServer</string>
<string>com.apple.backboard.hid.services</string>
</array>
<key>platform-application</key>
<true/>
</dict>
</plist>
01,com.apple.backboardd.setAuthenticatedTouches
0?*com.apple.private.sandbox.profile:embedded
temporary-sandbox0
4com.apple.security.exception.mach-lookup.global-name0U
com.apple.fontservicesd
com.apple.CARenderServer com.apple.backboard.hid.services0
platform-application
_imagePlacement
T#,R
drawingWithStyle:tag:forRemote:
TQ,R
isValid
Tr^{__CFString=},R,N,V_contentSizeCategory
newFontForTextStyle:attributes:
T{CGSize=dd},R,N
serviceListener
.cxx_destruct
dealloc
T@"NSString",R,C
isProxy
Td,R,N,V_displayScale
layoutDirection
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
release
T{CGSize=dd},R,N,V_alignmentSize
T{CGSize=dd},R,N,V_intrinsicContentSize
T{CGSize=dd},R,N,V_minimumContentSize
_alignmentSize
_assetGlyph
_backgroundDrawing
_contentSizeCategory
_displayScale
_drawingPlan
_drawingPlanForSizeSpec:
_font
_foregroundColor
_intrinsicContentSize
_leftToRight
_localizedText
_minimumContentSize
_size
_sizeSpecDrawingPlans
_sizeSpecDrawingPlansLock
_sizeSpecLRUCache
_sizeTool
_slotMachine
alignmentRect
alignmentSize
arrangeVertically
assetGlyphWithName:glyphSize:textStyle:
autorelease
baseBackgroundColor
baseForegroundColor
category
class
conformsToProtocol:
contentSizeCategory
cornerRadius
cornerStyle
currentHandler
debugDescription
description
dictionaryWithObjects:forKeys:count:
displayScale
drawInContext:atPoint:
drawingSize
evictedObjectForUsedObject:
fontContentSizeCategory
getIntrinsicContentSizeForSpec:reply:
getSizeToolWithReply:
getSlotMachineWithReply:
glyphDrawingInColor:
handleFailureInMethod:object:file:lineNumber:description:
hash
iconGlyph
imagePlacement
imageWithStyle:tag:forRemote:
init
initWithDrawingPlan:cornerStyle:cornerRadius:foregroundColor:backgroundColor:imagePlacement:leftToRight:size:
initWithLimit:
initWithRoundedRectSize:cornerRadii:fillColor:
initWithSlotDrawer:options:
initWithSlotStyle:arrangeVertically:secureName:iconGlyph:
initWithString:attributes:lineBreakMode:textAlignment:width:scale:
initWithVectorGlyph:tintColor:
intrinsicContentSize
isEqual:
isKindOfClass:
isMemberOfClass:
length
listener:shouldAcceptNewConnection:
localization
minimumContentSize
objectForKeyedSubscript:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
preferredContentSizeCategory
removeObjectForKey:
respondsToSelector:
resume
retain
retainCount
secureNameForDrawing
self
setDelegate:
setExportedInterface:
setExportedObject:
setObject:forKeyedSubscript:
size
specWithStyle:tag:
style
superclass
textDrawingInColor:
tintColor
zone
_UISecureControlDrawing
UISDrawing
NSObject
_UISecureControlDrawingPlan
_UISecureControlService
NSXPCListenerDelegate
UISSecureControlServiceProtocol
_UISecureControlSizeTool
_UISSecureControlSizeToolProtocol
UISSlotDrawer
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8^{CGContext=}16{CGPoint=dd}24
{CGSize=dd}16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
@84@0:8@16q24d32^{CGColor=}40^{CGColor=}48Q56B64{CGSize=dd}68
v16@0:8
@"_UISecureControlDrawingPlan"
^{CGColor=}
@"UISPathDrawing"
{CGSize="width"d"height"d}
@40@0:8@16B24I28@32
@24@0:8^{CGColor=}16
r^{__CFString=}16@0:8
d16@0:8
@"NSString"
^{__CTFont=}
@"CUINamedVectorGlyph"
r^{__CFString=}
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v24@0:8@?16
v24@0:8@?<v@?@"<_UISSecureControlSizeToolProtocol>">16
v24@0:8@?<v@?@"<UISSlotMachineProtocol>">16
@"_UISecureControlSizeTool"
@"UISSlotMachine"
v32@0:8@16@?24
v32@0:8@"_UISSecureControlSizeSpec"16@?<v@?{CGSize=dd}>24
^{CGImage=}36@0:8@16@24B32
@36@0:8@16@24B32
^{CGImage=}36@0:8@"UISSlotStyle"16@"UISSlotTag"24B32
@"<UISDrawing>"36@0:8@"UISSlotStyle"16@24B32
@24@0:8@16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSMutableDictionary"
@"UISLRUCache"
{CGSize=dd}40@?0{CGSize=dd}8{CGSize=dd}24
UISecureControlDrawingPlan.m
Invalid parameter not satisfying: %@
color
@(#)PROGRAM:SecureControlService  PROJECT:UIKit-6441.1.101
@ffffff
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
<key>com.apple.backboardd.setAuthenticatedTouches</key>
<true/>
<key>com.apple.private.sandbox.profile:embedded</key>
<string>temporary-sandbox</string>
<key>com.apple.security.exception.mach-lookup.global-name</key>
<array>
<string>com.apple.fontservicesd</string>
<string>com.apple.CARenderServer</string>
<string>com.apple.backboard.hid.services</string>
</array>
<key>platform-application</key>
<true/>
</dict>
</plist>
01,com.apple.backboardd.setAuthenticatedTouches
0?*com.apple.private.sandbox.profile:embedded
temporary-sandbox0
4com.apple.security.exception.mach-lookup.global-name0U
com.apple.fontservicesd
com.apple.CARenderServer com.apple.backboard.hid.services0
platform-application
_imagePlacement
T#,R
drawingWithStyle:tag:forRemote:
TQ,R
isValid
Tr^{__CFString=},R,N,V_contentSizeCategory
newFontForTextStyle:attributes:
T{CGSize=dd},R,N
serviceListener
.cxx_destruct
dealloc
T@"NSString",R,C
isProxy
Td,R,N,V_displayScale
layoutDirection
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
release
T{CGSize=dd},R,N,V_alignmentSize
T{CGSize=dd},R,N,V_intrinsicContentSize
T{CGSize=dd},R,N,V_minimumContentSize
_alignmentSize
_assetGlyph
_backgroundDrawing
_contentSizeCategory
_displayScale
_drawingPlan
_drawingPlanForSizeSpec:
_font
_foregroundColor
_intrinsicContentSize
_leftToRight
_localizedText
_minimumContentSize
_size
_sizeSpecDrawingPlans
_sizeSpecDrawingPlansLock
_sizeSpecLRUCache
_sizeTool
_slotMachine
alignmentRect
alignmentSize
arrangeVertically
assetGlyphWithName:glyphSize:textStyle:
autorelease
baseBackgroundColor
baseForegroundColor
category
class
conformsToProtocol:
contentSizeCategory
cornerRadius
cornerStyle
currentHandler
debugDescription
description
dictionaryWithObjects:forKeys:count:
displayScale
drawInContext:atPoint:
drawingSize
evictedObjectForUsedObject:
fontContentSizeCategory
getIntrinsicContentSizeForSpec:reply:
getSizeToolWithReply:
getSlotMachineWithReply:
glyphDrawingInColor:
handleFailureInMethod:object:file:lineNumber:description:
hash
iconGlyph
imagePlacement
imageWithStyle:tag:forRemote:
init
initWithDrawingPlan:cornerStyle:cornerRadius:foregroundColor:backgroundColor:imagePlacement:leftToRight:size:
initWithLimit:
initWithRoundedRectSize:cornerRadii:fillColor:
initWithSlotDrawer:options:
initWithSlotStyle:arrangeVertically:secureName:iconGlyph:
initWithString:attributes:lineBreakMode:textAlignment:width:scale:
initWithVectorGlyph:tintColor:
intrinsicContentSize
isEqual:
isKindOfClass:
isMemberOfClass:
length
listener:shouldAcceptNewConnection:
localization
minimumContentSize
objectForKeyedSubscript:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
preferredContentSizeCategory
removeObjectForKey:
respondsToSelector:
resume
retain
retainCount
secureNameForDrawing
self
setDelegate:
setExportedInterface:
setExportedObject:
setObject:forKeyedSubscript:
size
specWithStyle:tag:
style
superclass
textDrawingInColor:
tintColor
zone
_UISecureControlDrawing
UISDrawing
NSObject
_UISecureControlDrawingPlan
_UISecureControlService
NSXPCListenerDelegate
UISSecureControlServiceProtocol
_UISecureControlSizeTool
_UISSecureControlSizeToolProtocol
UISSlotDrawer
B24@0:8@16
#16@0:8
@16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B16@0:8
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8^{CGContext=}16{CGPoint=dd}24
{CGSize=dd}16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
@84@0:8@16q24d32^{CGColor=}40^{CGColor=}48Q56B64{CGSize=dd}68
v16@0:8
@"_UISecureControlDrawingPlan"
^{CGColor=}
@"UISPathDrawing"
{CGSize="width"d"height"d}
@40@0:8@16B24I28@32
@24@0:8^{CGColor=}16
r^{__CFString=}16@0:8
d16@0:8
@"NSString"
^{__CTFont=}
@"CUINamedVectorGlyph"
r^{__CFString=}
B32@0:8@16@24
B32@0:8@"NSXPCListener"16@"NSXPCConnection"24
v24@0:8@?16
v24@0:8@?<v@?@"<_UISSecureControlSizeToolProtocol>">16
v24@0:8@?<v@?@"<UISSlotMachineProtocol>">16
@"_UISecureControlSizeTool"
@"UISSlotMachine"
v32@0:8@16@?24
v32@0:8@"_UISSecureControlSizeSpec"16@?<v@?{CGSize=dd}>24
^{CGImage=}36@0:8@16@24B32
@36@0:8@16@24B32
^{CGImage=}36@0:8@"UISSlotStyle"16@"UISSlotTag"24B32
@"<UISDrawing>"36@0:8@"UISSlotStyle"16@24B32
@24@0:8@16
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
@"NSMutableDictionary"
@"UISLRUCache"
{CGSize=dd}40@?0{CGSize=dd}8{CGSize=dd}24
UISecureControlDrawingPlan.m
Invalid parameter not satisfying: %@
color
