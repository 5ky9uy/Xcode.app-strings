com.apple.exchangesyncd
com.apple.exchangesyncd.ping
ESExchangeAccountWipeOnly
ESExchangeDeviceID
ESExchangeUserEnrollmentMode
com.apple.exchangesyncd.shutdown
Users
Groups
Resources
Locations
DataAccessMonitoredFolderUpdated
DataAccessMonitoringConnectionFailed
<%@: %p> Account ID: %@, data class: %ld
-[ESDownloadContext initWithAttachmentUUID:accountID:queue:downloadProgressBlock:completionBlock:]
ESDConnection.m
attachmentUUID
accountID
v8@?0
-[ESSharedCalendarContext initWithCalendarID:accountID:queue:completionBlock:]
calendarID
v16@?0@"NSObject<OS_xpc_object>"8
B24@?0r*8@"NSObject<OS_xpc_object>"16
root
-[ESDConnection watchFoldersWithKeys:forAccountID:persistent:]
-[ESDConnection resumeWatchingFoldersWithKeys:forAccountID:]
-[ESDConnection suspendWatchingFoldersWithKeys:forAccountID:]
-[ESDConnection stopWatchingFoldersWithKeys:forAccountID:]
-[ESDConnection currentPolicyKeyForAccountID:]_block_invoke
start
stop
-[ESDConnection _requestDaemonChangeAgentMonitoringStatus:withToken:waitForReply:]
-[ESDConnection processMeetingRequests:deliveryIdsToClear:deliveryIdsToSoftClear:inFolderWithId:forAccountWithId:]
-[ESDConnection setFolderIdsThatExternalClientsCareAboutAdded:deleted:foldersTag:forAccountID:]
v16@?0@"NSDictionary"8
-[ESDConnection processFolderChange:forAccountWithID:]
-[ESDConnection statusReports]_block_invoke
update
retrieve
v32@?0@"NSString"8@"NSArray"16^B24
Should never call -init on DADConnection.  Use +sharedConnection... instead.
com.apple.dataaccess.muckingWithConn
com.apple.dataaccess.muckingWithInFlightCollections
UIApplicationWillEnterForegroundNotification
Download of attachment UUID %@ for accountID %@ progress: %lld bytes of %lld
Download of attachment UUID %@ for account %@ completed.
Share of calendar ID %@ for account %@ completed.
Removing ALL search queries
Failing all folder changes
Removing all attachment downloads
Removing all calendar availability lookups
Removing all calendar search requests
Removing all share requests
Removing all settings requests
Daemon died, cleaning up.
LOOK AT ME!!!! dataaccessd couldn't be started.  We won't try again.  If you're seeing this, get ready for some pain
Exchange daemon died, cleaning up.
LOOK AT ME!!!! exchangesyncd couldn't be started.  We won't try again.  If you're seeing this, get ready for some pain
Couldn't create a connection to [%@]
Couldn't create a connection to endpoint: [%@]
Unable to read data to decode error: %@
Swallowing decoder exception of %@, treating as null data
Malformed callback message from dataaccess daemon: bad account id (%@)
Malformed callback message from dataaccess daemon: no folders (%@)
doServerContactsSearchQueryFinishedWithStatus called back with status %@
Removing query %@ for key %@
Unable to read data to decode search results: %@
Could not deserialize search results from the xpc message
Search results: %@
received results for an unknown search query
folderChange finished with status %@, error %@
Removing folder change %@ for key %@
received results for an unknown folderChange
_oofSettingsRequestsFinished called back with status %@
Removing from inflight dictionary: oof settings request %@ for key %@
Oof settings request results: %@
Status missing from the xpc message
received results for an unknown oof settings request
XPC call performed in: %s
[DADConnection resumeWatchingFoldersWithKeys:forAccountID] called without a connection. Will not resume.
Unsupported XPC reply type. Reply Type: %@
XPC Reply Failure. Status Code: %@
Server error in %s communicating with daemon: %@
Requesting that DataAccess %@ monitoring agents.
updateFolderListForAccountID %@, dataclasses %lx, requireChangedFolders %d, isUserRequested %d
updateContentsOfFoldersWithKeys %@ for account id %@, dataclasses 0x%lx isUserRequested %d
updateContentsOfAllFoldersForAccountID %@, dataclasses 0x%lxx isUserRequested %d
nil accountID passed to performServerContactsSearch. Refusing to attempt search
nil search string passed to performServerContactsSearch. Refusing to attempt search
Setting search query %@ for key %@
Cancelling search task %p
Removing search query for key %@
Requesting download of attachment UUID %@ for accountID %@
Download context %@ set up for downloading attachment UUID %@ on accountID %@
Cancelling Download of attachment with downloadID %@
Requesting share response %ld for calendar %@ for accountID %@
Share request %@ set up for sharing calendar id %@ on accountID %@
Reporting calendar %@ for accountID %@ as junk
Setting folder change %@ for key %lu
Sending message: kDAERegisterForInterrogation
Error getting activesync device identifier, will try again
nil accountID passed to performASSettingsRequest. Cannot continue.
Adding to inflight dictionary: oof %@ request %@ for key %@
nil accountID passed to isOofSettingsSupportedForAccountWithID. Cannot continue.
Error getting activesync device identifier
Invalid 'accountID' provided: [%@].
Invalid 'startDate' [%@] and/or 'endDate' [%@] provided.
No 'addresses' provided.
Will not issue calendar availability request.
Preparing calendar availability request.  accountID: [%@] startDate: [%@] endDate: [%@] ignoredEventID: [%@] addresses: [%@]
Received request ID [%@] for request with attributes: [%@].  Associated context: [%@]
nil 'requestID' provided.  Will not cancel any calendar availability requests.
Unable to decode results: %@
No 'terms' provided.
No 'recordTypes' provided.
Will not issue calendar directory search.
Preparing calendar directory search.  accountID: [%@] recordTypes:[%@] resultLimit: [%lu] terms: [%@]
Received search ID [%@] for search with attributes: [%@].  Associated context: [%@]
nil 'searchID' provided.  Will not cancel any calendar directory searches.
Cancelled calendar directory search with ID: [%@].
No results block provided.
No accountID provided.
in _resetCertWarningsForAccount, _accountIdsWithAlreadyResetCerts is %@
in %s, _accountIdsWithAlreadyResetThrottleTimers is %@
Resetting shouldResetCertWarnings and throttle timers
unknown request sent to connection.
request: %@
ESECalendarAvailabilityContext
ESECalendarDirectorySearchContext
ESDAMContainerIDCacheKey
NSCopying
ESDownloadContext
ESSharedCalendarContext
ESDConnection
_attachmentUUID
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
completionBlock
T@"NSString",R,N,V_attachmentUUID
dealloc
T@?,R,C,N,V_completionBlock
numberWithBool:
TB,N,V_registered
removeObserver:
Tq,R,N,V_dataclass
setWithObjects:
.cxx_destruct
_muckingWithInFlightCollections
T@"NSString",R,N,V_accountID
containsObject:
T@"NSString",R,N,V_calendarID
initWithAccountID:andDataclass:
T@?,R,C,N,V_progressBlock
numberWithLong:
TB,N,V_shouldSyncCalendar
setDisplayName:
UTF8String
_accountID
_accountIdsWithAlreadyResetCerts
_accountIdsWithAlreadyResetThrottleTimers
_calendarAvailabilityRequestFinished:
_calendarAvailabilityRequestReturnedResults:
_calendarDirectorySearchFinished:
_calendarDirectorySearchReturnedResults:
_calendarID
_cancelDownloadsWithIDs:error:
_completionBlock
_connExchange
_connectionForExchange
_createReplyToRequest:withProperties:
_dataclass
_dispatchMessage:
_downloadFinished:
_downloadProgress:
_exchangeServerDiedWithReason:
_folderChangeFinished:
_foldersUpdated:
_getStatusReportsFromClient:
_inFlightAttachmentDownloads
_inFlightCalendarAvailabilityRequests
_inFlightCalendarDirectorySearches
_inFlightFolderChanges
_inFlightOofSettingsRequests
_inFlightSearchQueries
_inFlightShareRequests
_init
_initializeConnectionWithXPCEndpoint:
_initializeExchangeConnection
_initializeXPCConnection:
_initializeXPCConnectionForExchange:
_logDataAccessStatus:
_muckingWithConn
_nextStopMonitoringStatusToken
_oofSettingsRequestsFinished:
_performOofSettingsRequest:forAccountWithID:forUpdate:
_policyKeyChanged:
_progressBlock
_queue
_registerForAppResumedNotification
_registered
_requestDaemonChangeAgentMonitoringStatus:withToken:waitForReply:
_resetCertWarningsForAccountId:andDataclasses:isUserRequested:
_resetThrottleTimersForAccountId:
_resultsBlock
_sendSynchronousXPCMessageWithParameters:handlerBlock:
_serverContactsSearchQueryFinished:
_serverDiedWithReason:
_shareResponseFinished:
_shouldSyncCalendar
_statusReportBlock
_tearDownInFlightObjects
_validateXPCReply:
absoluteString
accountID
activeSyncDeviceIdentifier
addObject:
addObserver:selector:name:object:
allObjects
allValues
allocWithZone:
archivedDataWithRootObject:
arrayWithObjects:count:
asyncProcessMeetingRequests:deliveryIdsToClear:deliveryIdsToSoftClear:inFolderWithId:forAccountWithId:
attachmentUUID
beginDownloadingAttachmentWithUUID:accountID:queue:progressBlock:completionBlock:
boolValue
calendarID
cancelCalendarAvailabilityRequestWithID:
cancelCalendarDirectorySearchWithID:
cancelDownloadingAttachmentWithDownloadID:error:
cancelServerContactsSearch:
compare:
consumer
copy
copyWithZone:
count
countByEnumeratingWithState:objects:count:
currentPolicyKeyForAccountID:
dataclass
decodeObjectOfClasses:forKey:
decodedErrorFromData:
defaultCenter
description
dictionaryRepresentation
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:count:
dictionaryWithObjectsAndKeys:
enumerateKeysAndObjectsUsingBlock:
errorWithDomain:code:userInfo:
exceptionWithName:reason:userInfo:
externalIdentificationForAccountID:resultsBlock:
fillOutCurrentEASTimeZoneInfo
finishedWithError:
finishedWithError:exceededResultLimit:
folderChange:finishedWithStatus:error:
handleURL:
hash
init
initForReadingFromData:error:
initWithArray:
initWithAttachmentUUID:accountID:queue:downloadProgressBlock:completionBlock:
initWithCalendarID:accountID:queue:completionBlock:
initWithCapacity:
initWithDictionary:
initWithObjectsAndKeys:
initWithResultsBlock:completionBlock:
intValue
integerValue
isEqual:
isEqualToString:
isOofSettingsSupportedForAccountWithID:completionBlock:
length
longLongValue
makeObjectsPerformSelector:withObject:
numberWithInteger:
numberWithUnsignedInteger:
objectForKeyedSubscript:
oofRequestInfo:finishedWithResult:error:
performCalendarDirectorySearchWithAccountID:terms:recordTypes:resultLimit:resultsBlock:completionBlock:
performServerContactsSearch:forAccountWithID:
postNotificationName:object:
postNotificationName:object:userInfo:
processFolderChange:forAccountWithID:
processMeetingRequests:deliveryIdsToClear:deliveryIdsToSoftClear:inFolderWithId:forAccountWithId:
progressBlock
queue
raise
reallyRegisterForInterrogation
registerForInterrogationWithBlock:
registered
removeAllObjects
removeObjectForKey:
reportFolderItemsSyncSuccess:forFolderWithID:withItemsCount:andAccountWithID:
reportSharedCalendarInviteAsJunkForCalendarWithID:accountID:queue:completionBlock:
requestCalendarAvailabilityWithAccountID:startDate:endDate:ignoredEventID:addresses:resultsBlock:completionBlock:
requestDaemonShutdown
requestDaemonStartMonitoringAgentsSyncWithToken:
requestDaemonStartMonitoringAgentsWithToken:
requestDaemonStopMonitoringAgents
requestDaemonStopMonitoringAgentsSync
requestPolicyUpdateForAccountID:
resetTimersAndWarnings
respondToSharedCalendarInvite:forCalendarWithID:accountID:queue:completionBlock:
resultsReturned:
resumeWatchingFoldersWithKeys:forAccountID:
retrieveOofSettingsRequest:forAccountWithID:
searchID
searchString
sendFinishedToConsumerWithError:
sendResultsToConsumer:
setConsumer:
setFolderId:
setFolderIdsThatExternalClientsCareAboutAdded:deleted:foldersTag:forAccountID:
setObject:forKey:
setObject:forKeyedSubscript:
setRegistered:
setRequestID:
setSearchID:
setShouldSyncCalendar:
setState:
sharedConnection
shouldSyncCalendar
statusReports
stopWatchingFoldersWithKeys:forAccountID:
stringWithFormat:
suspendWatchingFoldersWithKeys:forAccountID:
unarchivedObjectOfClasses:fromData:error:
unsignedIntegerValue
updateContentsOfAllFoldersForAccountID:andDataclass:
updateContentsOfAllFoldersForAccountID:andDataclass:isUserRequested:
updateContentsOfAllFoldersForAccountID:andDataclasses:isUserRequested:
updateContentsOfFoldersWithKeys:forAccountID:andDataclass:
updateContentsOfFoldersWithKeys:forAccountID:andDataclass:isUserRequested:
updateContentsOfFoldersWithKeys:forAccountID:andDataclasses:isUserRequested:
updateFolderListForAccountID:andDataclasses:
updateFolderListForAccountID:andDataclasses:isUserRequested:
updateFolderListForAccountID:andDataclasses:requireChangedFolders:isUserRequested:
updateOofSettingsRequest:forAccountWithID:
updateProgressDownloadedByteCount:totalByteCount:
watchFoldersWithKeys:forAccountID:
watchFoldersWithKeys:forAccountID:persistent:
@32@0:8@?16@?24
v24@0:8@16
v16@0:8
v28@0:8@16B24
@24@0:8^{_NSZone=}16
@32@0:8@16q24
B24@0:8@16
Q16@0:8
@16@0:8
q16@0:8
@"NSString"
@56@0:8@16@24@32@?40@?48
v32@0:8q16q24
@?16@0:8
@"NSObject<OS_dispatch_queue>"
@48@0:8@16@24@32@?40
B16@0:8
v20@0:8B16
@32@0:8@16@24
@24@0:8@16
B32@0:8@16@24
B36@0:8@16@24B32
v32@0:8B16Q20B28
v24@0:8Q16
B40@0:8@16q24B32B36
B36@0:8@16q24B32
B44@0:8@16@24q32B40
B32@0:8@16q24
B40@0:8@16@24q32
B56@0:8@16@24@32@40@48
v56@0:8@16@24@32@40@48
B48@0:8@16@24@32@40
v44@0:8B16@20Q28@36
v32@0:8@16@?24
v32@0:8@16@24
v56@0:8q16@24@32@40@?48
v48@0:8@16@24@32@?40
B24@0:8@?16
@72@0:8@16@24@32@40@48@?56@?64
@64@0:8@16@24@32Q40@?48@?56
v36@0:8@16q24B32
@"NSObject<OS_xpc_object>"
@"NSMutableSet"
@"NSMutableDictionary"
com.apple.exchangesyncd
com.apple.exchangesyncd.ping
ESExchangeAccountWipeOnly
ESExchangeDeviceID
ESExchangeUserEnrollmentMode
com.apple.exchangesyncd.shutdown
Users
Groups
Resources
Locations
DataAccessMonitoredFolderUpdated
DataAccessMonitoringConnectionFailed
<%@: %p> Account ID: %@, data class: %ld
-[ESDownloadContext initWithAttachmentUUID:accountID:queue:downloadProgressBlock:completionBlock:]
ESDConnection.m
attachmentUUID
accountID
v8@?0
-[ESSharedCalendarContext initWithCalendarID:accountID:queue:completionBlock:]
calendarID
v16@?0@"NSObject<OS_xpc_object>"8
B24@?0r*8@"NSObject<OS_xpc_object>"16
root
-[ESDConnection watchFoldersWithKeys:forAccountID:persistent:]
-[ESDConnection resumeWatchingFoldersWithKeys:forAccountID:]
-[ESDConnection suspendWatchingFoldersWithKeys:forAccountID:]
-[ESDConnection stopWatchingFoldersWithKeys:forAccountID:]
-[ESDConnection currentPolicyKeyForAccountID:]_block_invoke
start
stop
-[ESDConnection _requestDaemonChangeAgentMonitoringStatus:withToken:waitForReply:]
-[ESDConnection processMeetingRequests:deliveryIdsToClear:deliveryIdsToSoftClear:inFolderWithId:forAccountWithId:]
-[ESDConnection setFolderIdsThatExternalClientsCareAboutAdded:deleted:foldersTag:forAccountID:]
v16@?0@"NSDictionary"8
-[ESDConnection processFolderChange:forAccountWithID:]
-[ESDConnection statusReports]_block_invoke
update
retrieve
v32@?0@"NSString"8@"NSArray"16^B24
Should never call -init on DADConnection.  Use +sharedConnection... instead.
com.apple.dataaccess.muckingWithConn
com.apple.dataaccess.muckingWithInFlightCollections
UIApplicationWillEnterForegroundNotification
Download of attachment UUID %@ for accountID %@ progress: %lld bytes of %lld
Download of attachment UUID %@ for account %@ completed.
Share of calendar ID %@ for account %@ completed.
Removing ALL search queries
Failing all folder changes
Removing all attachment downloads
Removing all calendar availability lookups
Removing all calendar search requests
Removing all share requests
Removing all settings requests
Daemon died, cleaning up.
LOOK AT ME!!!! dataaccessd couldn't be started.  We won't try again.  If you're seeing this, get ready for some pain
Exchange daemon died, cleaning up.
LOOK AT ME!!!! exchangesyncd couldn't be started.  We won't try again.  If you're seeing this, get ready for some pain
Couldn't create a connection to [%@]
Couldn't create a connection to endpoint: [%@]
Unable to read data to decode error: %@
Swallowing decoder exception of %@, treating as null data
Malformed callback message from dataaccess daemon: bad account id (%@)
Malformed callback message from dataaccess daemon: no folders (%@)
doServerContactsSearchQueryFinishedWithStatus called back with status %@
Removing query %@ for key %@
Unable to read data to decode search results: %@
Could not deserialize search results from the xpc message
Search results: %@
received results for an unknown search query
folderChange finished with status %@, error %@
Removing folder change %@ for key %@
received results for an unknown folderChange
_oofSettingsRequestsFinished called back with status %@
Removing from inflight dictionary: oof settings request %@ for key %@
Oof settings request results: %@
Status missing from the xpc message
received results for an unknown oof settings request
XPC call performed in: %s
[DADConnection resumeWatchingFoldersWithKeys:forAccountID] called without a connection. Will not resume.
Unsupported XPC reply type. Reply Type: %@
XPC Reply Failure. Status Code: %@
Server error in %s communicating with daemon: %@
Requesting that DataAccess %@ monitoring agents.
updateFolderListForAccountID %@, dataclasses %lx, requireChangedFolders %d, isUserRequested %d
updateContentsOfFoldersWithKeys %@ for account id %@, dataclasses 0x%lx isUserRequested %d
updateContentsOfAllFoldersForAccountID %@, dataclasses 0x%lxx isUserRequested %d
nil accountID passed to performServerContactsSearch. Refusing to attempt search
nil search string passed to performServerContactsSearch. Refusing to attempt search
Setting search query %@ for key %@
Cancelling search task %p
Removing search query for key %@
Requesting download of attachment UUID %@ for accountID %@
Download context %@ set up for downloading attachment UUID %@ on accountID %@
Cancelling Download of attachment with downloadID %@
Requesting share response %ld for calendar %@ for accountID %@
Share request %@ set up for sharing calendar id %@ on accountID %@
Reporting calendar %@ for accountID %@ as junk
Setting folder change %@ for key %lu
Sending message: kDAERegisterForInterrogation
Error getting activesync device identifier, will try again
nil accountID passed to performASSettingsRequest. Cannot continue.
Adding to inflight dictionary: oof %@ request %@ for key %@
nil accountID passed to isOofSettingsSupportedForAccountWithID. Cannot continue.
Error getting activesync device identifier
Invalid 'accountID' provided: [%@].
Invalid 'startDate' [%@] and/or 'endDate' [%@] provided.
No 'addresses' provided.
Will not issue calendar availability request.
Preparing calendar availability request.  accountID: [%@] startDate: [%@] endDate: [%@] ignoredEventID: [%@] addresses: [%@]
Received request ID [%@] for request with attributes: [%@].  Associated context: [%@]
nil 'requestID' provided.  Will not cancel any calendar availability requests.
Unable to decode results: %@
No 'terms' provided.
No 'recordTypes' provided.
Will not issue calendar directory search.
Preparing calendar directory search.  accountID: [%@] recordTypes:[%@] resultLimit: [%lu] terms: [%@]
Received search ID [%@] for search with attributes: [%@].  Associated context: [%@]
nil 'searchID' provided.  Will not cancel any calendar directory searches.
Cancelled calendar directory search with ID: [%@].
No results block provided.
No accountID provided.
in _resetCertWarningsForAccount, _accountIdsWithAlreadyResetCerts is %@
in %s, _accountIdsWithAlreadyResetThrottleTimers is %@
Resetting shouldResetCertWarnings and throttle timers
unknown request sent to connection.
request: %@
ESECalendarAvailabilityContext
ESECalendarDirectorySearchContext
ESDAMContainerIDCacheKey
NSCopying
ESDownloadContext
ESSharedCalendarContext
ESDConnection
_attachmentUUID
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
completionBlock
T@"NSString",R,N,V_attachmentUUID
dealloc
T@?,R,C,N,V_completionBlock
numberWithBool:
TB,N,V_registered
removeObserver:
Tq,R,N,V_dataclass
setWithObjects:
.cxx_destruct
_muckingWithInFlightCollections
T@"NSString",R,N,V_accountID
containsObject:
T@"NSString",R,N,V_calendarID
initWithAccountID:andDataclass:
T@?,R,C,N,V_progressBlock
numberWithLong:
TB,N,V_shouldSyncCalendar
setDisplayName:
UTF8String
_accountID
_accountIdsWithAlreadyResetCerts
_accountIdsWithAlreadyResetThrottleTimers
_calendarAvailabilityRequestFinished:
_calendarAvailabilityRequestReturnedResults:
_calendarDirectorySearchFinished:
_calendarDirectorySearchReturnedResults:
_calendarID
_cancelDownloadsWithIDs:error:
_completionBlock
_connExchange
_connectionForExchange
_createReplyToRequest:withProperties:
_dataclass
_dispatchMessage:
_downloadFinished:
_downloadProgress:
_exchangeServerDiedWithReason:
_folderChangeFinished:
_foldersUpdated:
_getStatusReportsFromClient:
_inFlightAttachmentDownloads
_inFlightCalendarAvailabilityRequests
_inFlightCalendarDirectorySearches
_inFlightFolderChanges
_inFlightOofSettingsRequests
_inFlightSearchQueries
_inFlightShareRequests
_init
_initializeConnectionWithXPCEndpoint:
_initializeExchangeConnection
_initializeXPCConnection:
_initializeXPCConnectionForExchange:
_logDataAccessStatus:
_muckingWithConn
_nextStopMonitoringStatusToken
_oofSettingsRequestsFinished:
_performOofSettingsRequest:forAccountWithID:forUpdate:
_policyKeyChanged:
_progressBlock
_queue
_registerForAppResumedNotification
_registered
_requestDaemonChangeAgentMonitoringStatus:withToken:waitForReply:
_resetCertWarningsForAccountId:andDataclasses:isUserRequested:
_resetThrottleTimersForAccountId:
_resultsBlock
_sendSynchronousXPCMessageWithParameters:handlerBlock:
_serverContactsSearchQueryFinished:
_serverDiedWithReason:
_shareResponseFinished:
_shouldSyncCalendar
_statusReportBlock
_tearDownInFlightObjects
_validateXPCReply:
absoluteString
accountID
activeSyncDeviceIdentifier
addObject:
addObserver:selector:name:object:
allObjects
allValues
allocWithZone:
archivedDataWithRootObject:
arrayWithObjects:count:
asyncProcessMeetingRequests:deliveryIdsToClear:deliveryIdsToSoftClear:inFolderWithId:forAccountWithId:
attachmentUUID
beginDownloadingAttachmentWithUUID:accountID:queue:progressBlock:completionBlock:
boolValue
calendarID
cancelCalendarAvailabilityRequestWithID:
cancelCalendarDirectorySearchWithID:
cancelDownloadingAttachmentWithDownloadID:error:
cancelServerContactsSearch:
compare:
consumer
copy
copyWithZone:
count
countByEnumeratingWithState:objects:count:
currentPolicyKeyForAccountID:
dataclass
decodeObjectOfClasses:forKey:
decodedErrorFromData:
defaultCenter
description
dictionaryRepresentation
dictionaryWithObject:forKey:
dictionaryWithObjects:forKeys:count:
dictionaryWithObjectsAndKeys:
enumerateKeysAndObjectsUsingBlock:
errorWithDomain:code:userInfo:
exceptionWithName:reason:userInfo:
externalIdentificationForAccountID:resultsBlock:
fillOutCurrentEASTimeZoneInfo
finishedWithError:
finishedWithError:exceededResultLimit:
folderChange:finishedWithStatus:error:
handleURL:
hash
init
initForReadingFromData:error:
initWithArray:
initWithAttachmentUUID:accountID:queue:downloadProgressBlock:completionBlock:
initWithCalendarID:accountID:queue:completionBlock:
initWithCapacity:
initWithDictionary:
initWithObjectsAndKeys:
initWithResultsBlock:completionBlock:
intValue
integerValue
isEqual:
isEqualToString:
isOofSettingsSupportedForAccountWithID:completionBlock:
length
longLongValue
makeObjectsPerformSelector:withObject:
numberWithInteger:
numberWithUnsignedInteger:
objectForKeyedSubscript:
oofRequestInfo:finishedWithResult:error:
performCalendarDirectorySearchWithAccountID:terms:recordTypes:resultLimit:resultsBlock:completionBlock:
performServerContactsSearch:forAccountWithID:
postNotificationName:object:
postNotificationName:object:userInfo:
processFolderChange:forAccountWithID:
processMeetingRequests:deliveryIdsToClear:deliveryIdsToSoftClear:inFolderWithId:forAccountWithId:
progressBlock
queue
raise
reallyRegisterForInterrogation
registerForInterrogationWithBlock:
registered
removeAllObjects
removeObjectForKey:
reportFolderItemsSyncSuccess:forFolderWithID:withItemsCount:andAccountWithID:
reportSharedCalendarInviteAsJunkForCalendarWithID:accountID:queue:completionBlock:
requestCalendarAvailabilityWithAccountID:startDate:endDate:ignoredEventID:addresses:resultsBlock:completionBlock:
requestDaemonShutdown
requestDaemonStartMonitoringAgentsSyncWithToken:
requestDaemonStartMonitoringAgentsWithToken:
requestDaemonStopMonitoringAgents
requestDaemonStopMonitoringAgentsSync
requestPolicyUpdateForAccountID:
resetTimersAndWarnings
respondToSharedCalendarInvite:forCalendarWithID:accountID:queue:completionBlock:
resultsReturned:
resumeWatchingFoldersWithKeys:forAccountID:
retrieveOofSettingsRequest:forAccountWithID:
searchID
searchString
sendFinishedToConsumerWithError:
sendResultsToConsumer:
setConsumer:
setFolderId:
setFolderIdsThatExternalClientsCareAboutAdded:deleted:foldersTag:forAccountID:
setObject:forKey:
setObject:forKeyedSubscript:
setRegistered:
setRequestID:
setSearchID:
setShouldSyncCalendar:
setState:
sharedConnection
shouldSyncCalendar
statusReports
stopWatchingFoldersWithKeys:forAccountID:
stringWithFormat:
suspendWatchingFoldersWithKeys:forAccountID:
unarchivedObjectOfClasses:fromData:error:
unsignedIntegerValue
updateContentsOfAllFoldersForAccountID:andDataclass:
updateContentsOfAllFoldersForAccountID:andDataclass:isUserRequested:
updateContentsOfAllFoldersForAccountID:andDataclasses:isUserRequested:
updateContentsOfFoldersWithKeys:forAccountID:andDataclass:
updateContentsOfFoldersWithKeys:forAccountID:andDataclass:isUserRequested:
updateContentsOfFoldersWithKeys:forAccountID:andDataclasses:isUserRequested:
updateFolderListForAccountID:andDataclasses:
updateFolderListForAccountID:andDataclasses:isUserRequested:
updateFolderListForAccountID:andDataclasses:requireChangedFolders:isUserRequested:
updateOofSettingsRequest:forAccountWithID:
updateProgressDownloadedByteCount:totalByteCount:
watchFoldersWithKeys:forAccountID:
watchFoldersWithKeys:forAccountID:persistent:
@32@0:8@?16@?24
v24@0:8@16
v16@0:8
v28@0:8@16B24
@24@0:8^{_NSZone=}16
@32@0:8@16q24
B24@0:8@16
Q16@0:8
@16@0:8
q16@0:8
@"NSString"
@56@0:8@16@24@32@?40@?48
v32@0:8q16q24
@?16@0:8
@"NSObject<OS_dispatch_queue>"
@48@0:8@16@24@32@?40
B16@0:8
v20@0:8B16
@32@0:8@16@24
@24@0:8@16
B32@0:8@16@24
B36@0:8@16@24B32
v32@0:8B16Q20B28
v24@0:8Q16
B40@0:8@16q24B32B36
B36@0:8@16q24B32
B44@0:8@16@24q32B40
B32@0:8@16q24
B40@0:8@16@24q32
B56@0:8@16@24@32@40@48
v56@0:8@16@24@32@40@48
B48@0:8@16@24@32@40
v44@0:8B16@20Q28@36
v32@0:8@16@?24
v32@0:8@16@24
v56@0:8q16@24@32@40@?48
v48@0:8@16@24@32@?40
B24@0:8@?16
@72@0:8@16@24@32@40@48@?56@?64
@64@0:8@16@24@32Q40@?48@?56
v36@0:8@16q24B32
@"NSObject<OS_xpc_object>"
@"NSMutableSet"
@"NSMutableDictionary"
