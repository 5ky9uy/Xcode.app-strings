IW
=K
M[
=K
ES
ES
=K
ES
ES
=K
=K
ES
=K
ES
FT
FT
FT
FT
=K
M[
IW
FT
FT
JX
ES
=K
=K
=K
FT
=K
FT
M[
ES
-[TSWPStorage(TSTFormulaAdditions) i_copyIntoContext:stylesheet:paragraphStyle:listStyle:bakeModes:resettingHostTableToMatch:referenceColorHelper:disableMenus:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSWPStorage_FormulaAdditions.mm
Creating a copy of the storage resulted in a smaller storage.
-[TSWPStorage(TSTFormulaAdditions) i_copyIntoContext:stylesheet:paragraphStyle:listStyle:bakeModes:resettingHostTableToMatch:referenceColorHelper:disableMenus:]_block_invoke
Found an attachment that wasn't a TSTWPTokenAttachment
attachment character index out of bounds. Bailing.
Expected destination storage to have an attachment character at this index.
v8@?0
TSUDefaultCat
v40@?0@"TSTWPTokenAttachment"8Q16Q24^B32
-[TSWPStorage(TSTFormulaAdditions) p_rangeOfString:orNodeClass:range:]
Do not call method
%s: %s
-[TSWPStorage(TSTFormulaAdditions) p_stringWithFormulaAsTextFromRange:returningTokenValues:]
Attachment index mismatch
-[TSWPStorage(TSTFormulaAdditions) p_detokenizeTokenAtCharIndex:]
expected only token attachments within the detokenization range
-[TSWPStorage(TSTFormulaAdditions) p_replaceTokenAtCharIndex:withText:]
invalid nil value for '%{public}s'
token
text
-[TSTGroupNode computedGroupValueTuple]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTGroupNode.mm
Only the root groupNode should have no parentNode pointer
-[TSTGroupNode initWithGroupCellValue:groupBy:atLevel:groupUid:children:]
Root node shouldn't have a cellValue
v24@?0q8^B16
v32@?0{TSKUIDStruct=QQ}8^B24
-[TSTGroupNode encodeToArchive:backwardCompat:]
Only the root node has a nil groupCellValue?!
-[TSTGroupNode updateWithDocumentRoot:]
documentRoot
-[TSTGroupNode findGroupNodeForDisplayValuesFromSplitter:atLevel:startAtComponent:startAtWord:preserveFlags:]
Not supported for disconnected GroupNodes
boo_TRUE
boo_FALSE
str_%@
-[TSTGroupNode p_refreshGroupValue]
Unexpected new key:%{public}@, expected:%{public}@
-[TSTGroupNode updateGroupCellValueIfKeyMatches:]
canonicalKeyString shouldn't change here
-[TSTGroupNode insertRowUid:atRowIndex:forGroupValueTuple:atLevel:withLocale:createdGroupNodeCount:]
Pivot table groupBy's EXPECT to be provided with valid rowIndexes
Invalid rowUids should only be coming in for disconnected GroupNodes - normally, we should only add valid rows
-[TSTGroupNode removeRowUid:forGroupValueTuple:atLevel:withLocale:]
Pivot groupBys shouldn't need removeRowUid - we'll need to fix _pivotOnlyRowIndexes if they do
-[TSTGroupNode removeRowUids:]
Pivot groupBys shouldn't need removeRowUids - we'll need to fix _pivotOnlyRowIndexes if they do
+[TSTGroupNode needFormulasForAggregateType:]
Shouldn't be asking if TSCEAggType_Indirect needs formulas
Shouldn't be asking if TSCEAggType_INVALID needs formulas
-[TSTGroupNode rebuildFormulasForAggNode:]
v24@?0@"TSTGroupNode"8^B16
v24@?0r^{TSUIndexRange=qq}8^B16
-[TSTGroupNode containsAnyRowUidInRowUidSet:]
-[TSTGroupNode clearAllGroupNodes]
-[TSTGroupNode clearEmptyNodes]
+[TSTGroupNode localizedStringForCellValue:categoryLevel:groupBy:]
result
-[TSTGroupNode groupValueCellValue]
-[TSTGroupNode groupValueCellValueForGroupBySet:aggIndex:appendAggregateName:]
Grand Total
TSTables
%@ %@
-[TSTGroupNode groupValueHierarchyForChart:]
-[TSTGroupNode groupValueHierarchyForChart:groupBySet:aggIndex:appendAggregateName:]
-[TSTGroupNode groupValueHierarchyStringWithDelimiterString:namingContext:]
-[TSTGroupNode firstVisibleNodeUsingColumnRowUIDMap:forDimension:leafLevel:pivotTableHiddenExtent:]
columnRowUIDMap
-[TSTGroupNode addAggNode:]
Aggregator needs to be setup already
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
void TSTArgumentAtIndexLocator::setArgumentAt(NSInteger, TSTFormulaPredArg *__strong)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTArgumentAtIndexLocator.mm
Position %d not supported
virtual TSCEASTElement *TSTArgumentAtIndexLocator::linkedRefNode(TSCEASTLinkedRefElement *)
Never used - now deprecated TSCEASTLinkedRowRefNode
-[TSTCellSelection initWithTableInfo:selectionType:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCellSelection.mm
expected inequality between %{public}s and %{public}s
selectionType
kNoSelection
-[TSTCellSelection initWithTableInfo:rowOrColumn:index:count:]
Invalid selection type used with rowOrColumn initializer.
-[TSTCellSelection logicalCellIDInTable:]
Cannot provide a logical cell ID for a selection that is not rectangular or does not represent a single cell or merge
v16@?0@"TSTTableInfo"8
v32@?0{TSUCellRect={TSUCellCoord=ISBB}{?=II}}8^B24
-[TSTCellSelection selectionByExtendingWithCellRange:inTable:selectionType:cursorCell:]
Can't extend a selection with an invalid cell range
-[TSTCellSelection selectionByAddingCellRange:inTable:withAnchor:cursor:selectionType:]
-[TSTCellSelection selectionByRemovingCellRange:inTable:withAnchor:cursor:selectionType:]
Can't remove an invalid cell range
<%@: %p type: %@ region: %@ base region: %@ anchor: %@ cursor: %@>
<%@: %p type: %@ anchor: %@ cursor: %@>
TSTSelectionType TSTArchivedToNativeSelectionType(const TST::SelectionTypeArchive)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTArchiveUtilities.h
shouldn't be converting from deprecated archived selection type %d
region
column
noSelection
<unknown>
-[TSTRefParser p_parseStringAsGeometricReferenceComponent:inResolver:outPreserveFlags:gettingReferencesMatchingInputAsPrefix:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTRefParser.mm
can't look for geometric references in no particular table
v24@?0r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}8^B16
%@%@ %@%@
%@%@
-[TSTRefParser parseAsTractRefWithParsingContext:]
We should only have a nil preferred geometric resolver if a non-unique table name on another sheet is given without sheet name
-[TSTRefParser parseAsChromeRefWithParsingContext:]
%@:%@
bug in reference parser - only ranges expected here
If there is only one range reference, it should match resultRangeRef.
-[TSTTableModel setStylesheetForUpgradeToSingleStylesheet:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTableModel.mm
presets
v32@?0@8Q16^B24
-[TSTTableModel initWithContext:tableUID:columnRowUIDMap:styles:stylePreset:tableInfo:]_block_invoke
Caller must provide preset or styles or both.
v12@?0{TSUModelRowIndex=I}8
v10@?0{TSUModelColumnIndex=S}8
TSTPencilCat
v40@?0@"TSTPencilAnnotation"8@"TSCEFormulaObject"16Q24^B32
@"TSCEFormulaObject"24@?0@"TSCEFormulaObject"8^{TSCEFormulaRewriteContext=@@{TSCEFormulaRewriteContextRecord={TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}{TSKUIDStruct=QQ}{TSUColumnRowOffset=ii}BBBBBBB}}16
v24@?0@"<TSTCellIteratorData>"8^B16
v48@?0I8@"TSDStroke"12{TSTSimpleRange=qQ}20i36^B40
v48@?0S8@"TSDStroke"12{TSTSimpleRange=qQ}20i36^B40
-[TSTTableModel initAsPivotDataWithContext:tableInfo:sourceModel:sourceBody:sourceHeader:]
calcEngine
 as Pivot Source Table
@"TSSStyle"16@?0@"TSSStyle"8
v24@?0Q8^B16
@"TSTConcurrentCellIteratorFourArgRock"24@?0{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}8
v24@?0@"<TSTCellIteratorData>"8@"TSTConcurrentCellIteratorFourArgRock"16
v32@?0@"TSUMutablePair"8Q16^B24
v16@?0@"NSArray"8
-[TSTTableModel p_updateMergesAndCellsAsPivotDataWithSourceModel:sourceRegion:sourceBodyRegion:]
We should really have rows in a pivot source.
v40@?0{TSUCellCoord=ISBB}8@"TSTCell"16Q24^B32
@"TSTCellMap"24@?0{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}8
v24@?0@"<TSTCellIteratorData>"8@"TSTCellMap"16
v32@?0^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}8{TSUCellCoord=ISBB}16^B24
-[TSTTableModel upgradeDuringDocumentUpgradeIfNeeded:tableInfo:]
Invalid parameter not satisfying: %{public}s
tableInfo != nil
hiddenStates
v24@?0@"TSKCustomFormatWrapper"8^B16
v24@?0@"<TSTCellIteratorData>"8@"TSTConcurrentCellList"16
@"TSTConcurrentSparseCellList"24@?0{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}8
v16@?0@"TSTTableStyle"8
v16@?0@"TSTCellStyle"8
v16@?0@"TSWPParagraphStyle"8
v16@?0@"TSWPShapeStyle"8
v16@?0@"TSTTableStylePreset"8
v16@?0@"TSTHiddenStateFormulaOwner"8
v16@?0@"TSTTableFilterSet"8
v16@?0@"TSTCategoryOwner"8
v16@?0@"TSTPivotOwner"8
v16@?0@"TSWPStorage"8
v16@?0@"TSTColumnRowUIDMap"8
v16@?0@"TSTStrokeSidecar"8
-[TSTTableModel loadFromUnarchiver:]
Unequal date grouping columns and values. We can't make a map.
-[TSTTableModel saveToArchiver:]
Expected all tables to be using subOwner formulaOwnerUIDs now.
TSTPivotTables
Fatal Assertion failure: %{public}s %{public}s:%d Bad table model feature version!
Bad table model feature version!
Unexpected categories feature version in TSTTableModel.
Fatal Assertion failure: %{public}s %{public}s:%d Trying to set a non-nil tableInfo on tableModel of type %d, not allowed.
-[TSTTableModel setTableInfo:]
Trying to set a non-nil tableInfo on tableModel of type %d, not allowed.
-[TSTTableModel setTextImportRecord:]
Bad import record type!
-[TSTTableModel verifySubOwnerUIDsUsed]
Conditional styles ownerUid isn't subOwner uid for table:%@
Sort Rule ownerUid isn't subOwner uid table:%@
Merge ownerUid isn't subOwner uid table:%@
Pencil Annotation ownerUid isn't subOwner uid table:%@
Pivot ownerUid isn't subOwner uid table:%@
TSTHiddenStateFORMULAOwner ownerUid isn't subOwner uid table:%@
<%@> %@ (%@%@)
 From: %@
-[TSTTableModel unnamedTableString]
locale
Table %@
untitledTableNameFormat
-[TSTTableModel setCellsWithBaseCellMap:ignoreFormulas:skipDirtyingNonFormulaCells:]
using a uid based cellmap where a coord based one is expected
-[TSTTableModel clearCommentHostingMapForCommentStorage:]
Tables Comment Storage should not be empty
-[TSTTableModel commentHostingAtBaseCellCoord:forCommentStorage:]
Comment storages should be equal
-[TSTTableModel heightOfRowAtIndex:isDefault:]
Bad row index!
-[TSTTableModel widthOfColumnAtIndex:isDefault:]
Bad column index!
-[TSTTableModel setHeight:ofRowAtIndex:]
-[TSTTableModel setWidth:ofColumnAtIndex:]
v32@?0@"NSNumber"8Q16^B24
-[TSTTableModel insertColumnsAtIndex:uids:metadatas:tableArea:]
invalid table area for column insert
not enough room in the header
-[TSTTableModel insertRowsAtIndex:uids:metadatas:tableArea:unsetFilterHidingAction:]
invalid table area for row insert
not enough room in the header for insert
not enough room in the footer for insert
v32@?0{_NSRange=QQ}8^B24
-[TSTTableModel setHidingState:atRowIndex:]
-[TSTTableModel setHidingState:atColumnIndex:]
-[TSTTableModel columnNameForCellID:restrictToBodyRange:]
refNamer
Column %@
-[TSTTableModel setFormulaOwnerUIDsWithMap:shouldStealReferences:]
Really needed an ownerUIDMapper here - tableModel is %@ (%@)
@"TSCEFormulaObject"28@?0@"TSCEFormulaObject"8I16^B20
@"TSTConditionalStyleSet"28@?0@"TSTConditionalStyleSet"8I16^B20
-[TSTTableModel registerAllFormulasWithCalculationEngine:wasCrossDocumentPaste:infoIsCategorized:wasUndo:]
expect the locally set calc engine to be the same as the one passed in
v24@?0Q8@"TSCEFormulaObject"16
@"TSSStyle"32@?0@"TSSStyle"8@"NSString"16Q24
-[TSTTableModel adoptStylesheet:withMapper:]
we expect the table to not be registered yet
 Document or Theme
-[TSTTableModel validateTableStylesInSameStylesheetExpectingDocSS:]
Expected non-nil document stylesheet for validation.
-[TSTTableModel validateTableStylesInSameStylesheetExpectingDocSS:]_block_invoke
styleStylesheet
Expected%{public}@ stylesheet %p on table network style %lu, got %p
v40@?0@"TSSStyle"8@"NSString"16Q24^B32
v40@?0@"TSWPParagraphStyle"8{_NSRange=QQ}16^B32
-[TSTTableModel baseCellCoordForCellContainingRichTextStorage:]
storage
@"TSTCell"16@?0^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}8
{vector<TSTCell *, std::allocator<TSTCell *>>=^@^@{__compressed_pair<TSTCell *__strong *, std::allocator<TSTCell *>>=^@}}36@?0{TSUModelRowIndex=I}8@"TSTTableTile"12@"TSTTableTileRowInfo"20^v28
v40@?0{TSUModelCellCoord={TSUCellCoord=ISBB}}8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16@"TSTCell"24@"TSTCell"32
-[TSTTableModel setCellsConcurrently:ignoreFormula:clearImportWarnings:formulaReplacer:]_block_invoke
baseCoord should be valid
-[TSTTableModel setCellsConcurrently:ignoreFormula:clearImportWarnings:formulaReplacer:]_block_invoke_2
cells called should have rich text
TSTCategorizedTables
TSTExpandedTables
TSTFutureProofCell
NSString *TSTFeatureIdentifierForCompatibilityVersion(TSPVersion)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCompatibility.h
Unimplemented version for TSTCompatibility: %@
double TSTCellStorageDurationValue(TSTCellStorage *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCellStorage.h
Asked for duration value from non-duration cell.
TSUCellRect TSUCellRangeFromRowRange(NSRange, TSUColumnRowSize)
/Library/Caches/com.apple.xbs/Binaries/iWorkImport_Sim/install/Symbols/BuiltProducts/TSUtility.framework/Headers/TSUColumnRowRect.h
out of bounds
TSUCellRect TSUCellRangeFromColumnRange(NSRange, TSUColumnRowSize)
-[TSTMutableCellIteratorData cellID]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTMutableCellIteratorData.m
cellID read before it was set
-[TSTMutableCellIteratorData cell]
cell read before it was set
-[TSTMutableCellIteratorData mergeRange]
mergeRange read before it was set
-[TSTMutableCellIteratorData formulaSpec]
formulaSpec read before it was set
v24@?0@"TSTTableTileRowInfo"8^B16
v28@?0@"TSTTableTileRowInfo"8I16^B20
Tables/Tile
-[TSTTableTile _setRowInfo:atTileRowIndex:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTableTile.mm
Duplicate row indexes!
Fatal Assertion failure: %{public}s %{public}s:%d Table embiggening is a one-way process
-[TSTTableTile setShouldUseWideRows:]
Table embiggening is a one-way process
-[TSTTableTile populatedRows]_block_invoke
rowInfo
<%@:%p %lu cells/ rows %@ >
Couldn't find row info for row index %lu
-[TSTTableTile setCell:atColumnIndex:tileRowIndex:formatKeys:]
Fatal Assertion failure: %{public}s %{public}s:%d Missing formatKeys when we need them!.
Missing formatKeys when we need them!.
v32@?0@"NSObject"8Q16^B24
-[TSTTableTile assertListRows]_block_invoke
In assertListRows, saw a row info that has no cells
void _assertTileIndexMatch(TSURowIndex, TSURowIndex)
TableTile row index %u should match array index %u.
-[TSTCellRangeControlSpec initWithInteractionType:minimum:maximum:increment:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCellRangeControlSpec.mm
Illegal interaction type:%@
Illegal parameters: %f, %f, %f
+[TSTCellRangeControlSpec cellSpecFromTSKFormat:]
TSTCellRangeControlSpec can only be created from TSKFormats for Stepper, Slider, and Rating.
tstHasFormulas
tstHasPastableFormulas
tstContainsCategoryColumn
tstNumRows
tstNumColumns
tstHasMergeRanges
tstFullyFiltered
tstCopiedRegion
tstSourceTableID
tstSourceOrigin
tstSourceNumHeaderColumns
tstSourceNumHeaderRows
tstSourceNumFooterRows
tstSourceNumRows
tstSourceNumColumns
tstSourceSelectionType
%@ Pivot
-[TSTTableInfo initWithContext:geometry:rows:columns:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTableInfo.mm
stylePreset
-[TSTTableInfo initWithContext:geometry:]
call - (instancetype) initWithContext: (TSPObjectContext *) context geometry: (TSDInfoGeometry *) geometry styles:(TSTTableStyleNetwork *)styles please
-[TSTTableInfo initAsDetailTableWithContext:sourcePivotTableInfo:pivotSourceCell:]
Expect only pivotTable to be passed in.
-[TSTTableInfo initWithContext:fromSourceInfo:cellRegion:waitForCalcEngine:flattenCategories:isSnapshot:]
Copying a categorized table without flattening. If you know how you got here, please write a bug.
v20@?0I8^B12
v20@?0S8^B12
-[TSTTableInfo _initWithContext:flatteningFromComplexInfo:cellRegion:waitForCalcEngine:flatteningOptions:isSnapshot:]
not expecting categorized or pivot table
-[TSTTableInfo _initWithContext:fromSourceInfo:cellRegion:tableModel:waitForCalcEngine:formulaCoordSpace:]
not expecting a categorized table
%@ %p: %@ (tableUID: %@ tableName: %@)
Headers table
Basic table
Checklist table
Stocks table
Plain table
Headers and footers table
+[TSTTableInfo localizedDescriptionForProtoIndex:]
No description for table proto index: %lu
Field 1
Field 2
Field 3
remotedata_positive_fill@2x.png
remotedata_negative_fill@2x.png
-[TSTTableInfo componentRootObject]
Component root object is nil!
-[TSTTableInfo performReadForOneOffFormulaEvaluation:forCellCoord:]
_translator
-[TSTTableInfo notifyTableOfNewResults]
There are no callers of this, but its needed to conform to TSCECalculationEngineRegistration protocol
-[TSTTableInfo filteringColumnNameForColumnIndex:]
-[TSTTableInfo p_setFilterSet:]
Must convert filters to geometric before setting
+[TSTTableInfo bootstrapPresetsOfKind:inTheme:alternate:reservedCount:]
expected equality between %{public}s and %{public}s
p.context
context
-[TSTTableInfo replaceReferencedStylesUsingBlock:]
failed cell map application
Table
+[TSTTableInfo validateNewName:forTable:]
Unable to get sheetNameProvider
B24@?0@"NSArray"8@"NSArray"16
TableInfo %p with tableName: '%@' and tableUID %@ is not registered with the calc-engine properly.
Repaired by renaming table to '%@' with tableUID: %@
-[TSTTableInfo allAnnotations]_block_invoke
iterator shoul only return cells with comments
^%@\s\d+(-\d+)?$
%@-%@
-[TSTTableInfo chooseUniqueNameInContainer:forPaste:needsNewName:avoidNames:]
Fresh table name is the same as the old one - aborting infinite loop.
-[TSTTableInfo getDefaultCell:forCellID:]
trying to get a default cell for an invalid cell ID
-[TSTTableInfo getCell:atCellID:suppressCellBorder:]
-[TSTTableInfo getCell:atCellID:]
-[TSTTableInfo hasFormulaAtCellUID:]
-[TSTTableInfo formulaAtCellID:]
-[TSTTableInfo setCell:atCellUID:ignoreFormula:clearImportWarnings:formulaReplacer:]
-[TSTTableInfo setCell:atCellUID:ignoreFormula:clearImportWarnings:]
-[TSTTableInfo setCellsWithCellMap:ignoreFormulas:skipDirtyingNonFormulaCells:]
coord based cellmaps no longer ok
v32@?0r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}8Q16^B24
@"TSTCellMap"24@?0{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}8
@"TSTConcurrentCellList"24@?0{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}8
-[TSTTableInfo cellValueTypeAtCellID:]
-[TSTTableInfo cellValueTypeAtCellUID:]
-[TSTTableInfo setCellStyle:ofRowAtUID:]
-[TSTTableInfo setTextStyle:ofRowAtUID:]
-[TSTTableInfo cellStyleOfRowAtIndex:isDefault:]
-[TSTTableInfo textStyleOfRowAtIndex:isDefault:]
-[TSTTableInfo setCellStyle:ofColumnAtUID:]
-[TSTTableInfo setTextStyle:ofColumnAtUID:]
-[TSTTableInfo cellStyleOfColumnAtIndex:isDefault:]
-[TSTTableInfo textStyleOfColumnAtIndex:isDefault:]
-[TSTTableInfo defaultCellStyleForCellID:useSoftDefault:outSource:]
-[TSTTableInfo defaultCellStyleForTableStyleArea:]
-[TSTTableInfo defaultTextStyleForCellID:useSoftDefault:outSource:]
-[TSTTableInfo defaultTextStyleForTableStyleArea:]
-[TSTTableInfo cellStyleAtCellID:isDefault:]
-[TSTTableInfo textStyleAtCellID:isDefault:]
-[TSTTableInfo cellStyleAtCellUID:isDefault:]
-[TSTTableInfo textStyleAtCellUID:isDefault:]
-[TSTTableInfo conditionalStyleSetAtCellID:]
-[TSTTableInfo columnNameForCellID:restrictToBodyRange:]
-[TSTTableInfo rowNameForCellID:restrictToBodyRange:]
-[TSTTableInfo columnNameForColumnIndex:withFallbackFormat:]
-[TSTTableInfo stringAtCellID:optionalCell:]
-[TSTTableInfo characterFillAtCellID:optionalCell:]
%@: %@
 (%@)
Value Field
Field
Total
Row Group
Column Group
Summary
v40@?0Q8{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16^B32
v16@?0Q8
-[TSTTableInfo getValue:atCellID:fetchRichTextAttributesIfPlainText:]
-[TSTTableInfo cellValueFromCell:atCellID:]
v24@?0{TSUCellCoord=ISBB}8^B16
v40@?0C8{TSKUIDStruct=QQ}12C28^B32
-[TSTTableInfo _correctAndCheckStateSuppressingAssertions:]
TableChecker: correcting nil categoryOrder in normal/disabled state
TableChecker: correcting missing backpointer in normal/disabled state
TableChecker: correcting uid map in normal/disabled state
TableChecker: correcting strokeSidecar
TableChecker: correcting summaryModel
TableChecker: correcting maps
-[TSTTableInfo setGroupByUid:]
Hey, don't set an invalid groupByUid on TSTTableInfo - ignoring your silly request.
Not expecting our pointer to change during subOwnerUIDUpgrade, if so, categoryOwner will need to update its structures
_groupBy.groupByUid and _groupByUid should match
-[TSTTableInfo setIsCategoryEnabled:]
Cannot enable/disable categories without a groupBy
-[TSTTableInfo isEmptyPivot]
self.pivotOwner
-[TSTTableInfo applyPivotWithColumns:rows:aggregates:flatteningDimension:optionsMap:pivotRowColumnRuleChangeUid:pivotAggregateRuleChangeUid:]
Cannot apply pivot rules to a non-pivot table
v24@?0@"TSTGroupingColumn"8^B16
-[TSTTableInfo verifySubOwnerUIDsUsed]
Row hidden state ownerUid isn't subOwner uid: %@
Column hidden state ownerUid isn't subOwner uid
Category Aggregate ownerUid isn't subOwner uid
GroupBy uid isn't subOwner uid
PivotDataModel uid isn't subOwner uid
v16@?0@"TSTTableModel"8
v16@?0@"TSTSummaryModel"8
v16@?0@"TSTCategoryOrder"8
v16@?0@"TSTPivotRowColumnOrder"8
-[TSTTableInfo saveToArchive:archiver:]
Out-of-bounds type assignment was clamped to max
Out-of-bounds type assignment was clamped to min
_pivotDataModel
_pivotOrder
v16@?0@"TSDLayout"8
-[TSTTableInfo(CellMap) applyCellDiff:atCellUID:migrationMap:inverseCellDiff:defaultCellStyle:defaultTextStyle:]_block_invoke
customFormat
-[TSTTableInfo(CellMap) applyCellDiff:atCellUID:migrationMap:inverseCellDiff:defaultCellStyle:defaultTextStyle:]
TSU_SUCCESS
v16@?0@"TSDCommentStorage"8
v16@?0@"TSTRichTextReferenceWrapper"8
v16@?0@"TSTConditionalStyleSet"8
void TSTEncodeCellToArchive(TSTCell *__strong, TST::Cell *, TSPArchiver *__strong)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTArchiveUtilities.mm
stringValue in string cell is nil
TSDThreadedComments
-[TSTUIDRectRef convertUIDRefToViewTractRef]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTUIDRectRef.mm
If we're already uid-form, why do we have a mapper?
-[TSTUIDRectRef baseRangeRef]
This API can't support multiple base ranges, had %lu
-[TSTUIDRectRef viewRangeRef]
This API can't support multiple view ranges, had %lu
%@<%p> base:
-[TSTCellIterator initWithTableInfo:tableModel:region:flags:searchFlags:clampingRange:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCellIterator.mm
caller should pass in region pointer
Tried to create iterator with range larger than is possible.
cannot use iterator flags to return all empty cells and also use flags to only search for specific kinds of cells
unsupported options, searching for borders but not fetching them
flags remain 0x%lx, flags should all be consumed by this point 
searchFlags remain 0x%lx, searchFlags should all be consumed by this point 
-[TSTCellIterator p_updateDataForMergeAtCellID:]
found this column in the cached merge ranges, so expected a merge range
-[TSTCellIterator p_updateDataForCellID:]
cell iterator was asked for cellID %@ that is outside the table bounds
tableCell
tableCellText
+[TSTCellStyle properties]_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCellStyle.mm
sProperties
+[TSTCellStyle propertiesAllowingNSNull]_block_invoke
s_nullProperties
+[TSTCellStyle nonEmphasisCellProperties]_block_invoke
s_nonEmphasisProperties
+[TSTCellStyle categoriesCellProperties]_block_invoke
bodyStyle
headerRowStyle
headerColumnStyle
footerRowStyle
categoryLevel1Row
categoryLevel2Row
categoryLevel3Row
categoryLevel4Row
categoryLevel5Row
labelLevel1Row
labelLevel2Row
labelLevel3Row
labelLevel4Row
labelLevel5Row
pivotBodySummaryRow
pivotBodySummaryColumn
pivotHeaderColumnSummary
+[TSTCellStyle p_regionStringForTableStyleArea:]
Unexpected value for region.
+[TSTCellStyle initDefaultPropertyMap:forTableStyleArea:presetID:colors:alternate:]
-[TSTCellStyle validate]
orphaned cell style %@
Cell style not in its stylesheet
-[TSTCellStyle targetSizeForImageData:associatedHint:]_block_invoke
preset
-[TSTCellStyle targetSizeForImageData:associatedHint:]
Expected that the imageData would be from the style's fill
v20@?0i8^B12
Copy
Copy Snapshot
Paste
Paste and Match Style
Clear All
Wrap Text
Fit to Content
Collapse
TSTablesUndo
Collapse Group
Collapse Groups
Collapse Selected Group
Collapse Selected Groups
All Column Groups
Selected Column Groups
All Row Groups
Selected Row Groups
Expand
Expand Group
Expand Groups
Expand Selected Group
Expand Selected Groups
Sort Ascending
Sort Descending
Sort Groups
Sort Summaries
Sort Values
All Ascending
All Descending
Sort Groups Ascending
Sort Groups Descending
Sort Grand Totals
Add Field Before
Add Field After
Show Field Options
Promote
Demote
Remove
Quick Filter
Create Table for Source Data
Select Similar Cells
Update Pivot Table
%1$@: %2$@%3$@
%1$@: %2$@: %3$@: %4$@: %5$@
%1$@: %2$@: %3$@: %4$@
%1$@: %2$@: %3$@
%1$@: %2$@
%1$@
 (%1$@)
Can't Add Field
Can't Move Field
Can't Refresh Pivot Table
Swapping the row and column fields would cause the pivot table to exceed the maximum of 1 million rows.
Swapping the row and column fields would cause the pivot table to exceed the maximum of 1,000 columns.
%@ -> %@
-[TSTPivotTranslator resetViewMap]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTPivotTranslator.mm
view and base cannot be the same for a pivot table
-[TSTPivotTranslator tableStyleAreaForRow:]
Unimplemented for pivot tables, because it doesn't make sense.
i32@?0r^{TSUModelCellCoord={TSUCellCoord=ISBB}}8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16C24C28
i24@?0r^{TSUModelCellCoord={TSUCellCoord=ISBB}}8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
v12@?0C8
v24@?0r^{TSUModelRowIndex=I}8r^{TSKUIDStruct=QQ}16
v24@?0r^{TSUModelColumnIndex=S}8r^{TSKUIDStruct=QQ}16
-[TSTPivotTranslator p_applyViewCellCoord:toSummaryUsingBlock:toBaseUsingBlock:]
cell in summary row is in viewMap, but not in summaryMap
-[TSTPivotTranslator indexesForRowsContainedByGroupUIDs:]_block_invoke
do not call with root group
-[TSTPivotTranslator indexesForColumnsContainedByGroupUIDs:]_block_invoke
TSTColumnRowTypeWithIndex TSTMakeColumnRowTypeWithIndex(TSTColumnRowType, NSUInteger)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTableConstants.h
Type:%ldl or index:%lul is too large for TSTIndexedColumnRowType.
-[TSTTableTileRowInfo initFromArchive:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTableTileRowInfo.mm
Can't find the last valid column during unarchive!
lastPreBNCCellRef
Mismatches between buffers.
-[TSTTableTileRowInfo encodeToArchive:archiver:]
should not be archiving an empty row info
Expected current storage version.
-[TSTTableTileRowInfo _insertCell:atIndex:formatKeys:]
Can't insert over an existing cell!
Fatal Assertion failure: %{public}s %{public}s:%d Attempting to write cells to a preBNC row.
-[TSTTableTileRowInfo setCell:atIndex:formatKeys:]
Attempting to write cells to a preBNC row.
Fatal Assertion failure: %{public}s %{public}s:%d Attempting to insert columns in a preBNC row.
-[TSTTableTileRowInfo insertColumnsAtIndex:count:]
Attempting to insert columns in a preBNC row.
Fatal Assertion failure: %{public}s %{public}s:%d Attempting to remove columns in a preBNC row.
-[TSTTableTileRowInfo removeColumnsAtIndex:count:]
Attempting to remove columns in a preBNC row.
-[TSTTableTileRowInfo moveColumnsFromIndex:toIndex:count:]
Move column ranges cannot overlap!
cellsMoved
cellsMovedPreBNC
Incorrect maximum column!
-[TSTTableTileRowInfo validateWithResult:]
%{public}@
 Misaligned cell storage offsets!
 Cell storage overflow!
 Found an extra cell in this row!
 Bad cell version!
 Mismatched presence of cells.
 Misaligned cell storage offsets in PreBNC!
 Cell storage overflow in PreBNC!
 Found an extra preBNC cell in this row!
 Cell storage overflow in Pre BNC!
 Incorrect cell count! Expected:%tu Found:%tu.
 Incorrect PreBNC cell count! Expected:%tu Found:%tu.
<%@:%p tileRowIndex %lu cellCount %lu>
Fatal Assertion failure: %{public}s %{public}s:%d Never call me without a row
TSUColumnIndex _maxColumnIndex(TSTTableTileRowInfo *__unsafe_unretained)
Never call me without a row
void _invalidateMaxColumnIndex(TSTTableTileRowInfo *__unsafe_unretained)
void _updateCellBufferSize(TSTTableTileRowBuffer *, NSUInteger)
Row data buffer is too small!
Fatal Assertion failure: %{public}s %{public}s:%d Can't grow to wide columns in a row buffer not converted for wide offsets
void _extendOffsetArrayForMaxIndex(TSTTableTileRowBuffer *, TSUColumnIndex)
Can't grow to wide columns in a row buffer not converted for wide offsets
Fatal Assertion failure: %{public}s %{public}s:%d Too many columns for our row storage!
Too many columns for our row storage!
Fatal Assertion failure: %{public}s %{public}s:%d Encountered a bad offset while widening!
void _convertBufferToWideIndexes(TSTTableTileRowBuffer *)
Encountered a bad offset while widening!
void _shiftCellStorageInBuffer(TSTTableTileRowBuffer *, NSUInteger, NSInteger)
Row storage buffer overflow!
Fatal Assertion failure: %{public}s %{public}s:%d Corrupt cellStorage shift. Crashing!
Corrupt cellStorage shift. Crashing!
Fatal Assertion failure: %{public}s %{public}s:%d Computed impossible insertion point.
NSUInteger _offsetForInsertInBuffer(TSTTableTileRowBuffer *, TSUColumnIndex, TSUColumnIndex, NSInteger)
Computed impossible insertion point.
void _invalidateMaxColumnIndexForColumnIndex(TSTTableTileRowInfo *__unsafe_unretained, TSUColumnIndex)
NSUInteger _applyMovingCellBuffer(TSTTableTileRowBuffer *, TSTTableTileRowBuffer *, TSUColumnIndex, TSUColumnRowCount)
Overwriting a column in move!
NSUInteger _storageSizeInBuffer(TSTTableTileRowBuffer *, TSUColumnIndex, TSUColumnIndex)
Couldn't find next storage offset for non-last cell!
virtual TSCEASTElement *TSTCellSpecFormulaExtractor::functionNode(TSCEASTFunctionElement *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCellFormulaSpec.mm
Need a locale to parse stock formulas.
-[TSTCellFormulaSpec initWithFormulaObject:locale:]
TSTCellFormulaSpec requires a formula.
<%@: %p>: %@
null formula
UInt16 TSTCellStorageSizeForHeaderFlags(TSTCellStorageFieldFlags)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCellStorage.mm
Storage size should be four-byte-aligned!
BOOL TSTCellStorageVersionCheck(TSTCellStorage *)
Can't parse cell storage header version %d!
void TSTCellToCellStorage(TSTCell *__strong, TSTCellStorage *)
Cell claims to have a string, but has no key for it!
Cell claims to have rich text, but has no key for it!
Cell claims to have a cell style, but has no key for it!
Cell claims to have a text style, but has no key for it!
Cell claims to have conditional style, but has no key for it!
Cell claims to have a formula, but has no key for it!
Cell claims to have a control, but has no key for it!
Cell claims to have a formula syntax error, but has no key for it!
Can't archive a bad format kind!
Cell claims to have a number format, but has no key for it!
Cell claims to have a currency format, but has no key for it!
Cell claims to have a date format, but has no key for it!
Cell claims to have a duration format, but has no key for it!
Cell claims to have a text format, but has no key for it!
Cell claims to have a boolean format, but has no key for it!
Cell claims to have a comment storage, but has no key for it!
Cell claims to have an import warning set, but has no key for it!
Could not archive all computed storage elements!
Failed to process all storage elements in TSTCellToCellStorage! Starting flags:%u Final flags:%u
Size miscalculation!
void TSTCellStorageToCell(TSTCellStorage *, TSTCell *__strong)
Fatal Assertion failure: %{public}s %{public}s:%d Can't get offset for unknown element 0x%02x, offset:%hu!
UInt16 p_OffsetForElementInStorage(TSTCellStorage *, TSTCellStorageFieldFlags)
Can't get offset for unknown element 0x%02x, offset:%hu!
void p_SetKeyAtOffset(TSTCellStorage *, TSTTableDataListKey, UInt16)
Can't set an invalid datalist key!
-[TSTGroupingColumnList addRule:atGroupLevel:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTGroupingColumnList.mm
Can't call this on root level
-[TSTGroupingColumnList removeRuleAtGroupLevel:]
-[TSTGroupingColumnList moveRuleFromGroupLevel:toLevel:]
-[TSTGroupingColumnList changeGroupingTypeForGroupLevel:toType:]
-[TSTGroupingColumnList replaceRuleAtGroupLevel:withRule:]
v32@?0@"TSTGroupingColumn"8Q16^B24
TSTGroupBySet<%p> for pivot: %@
  GroupBy %d: %@
-[TSTGroupBySet restoreFromPivotDataTable:columnGroupings:rowGroupings:aggregates:flatteningDimension:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTGroupBySet.mm
Pivot data model missing when restoring rules for a pivot table
-[TSTGroupBySet setPivotRulesWithPivotDataTable:columnGroupings:rowGroupings:aggregates:flatteningDimension:]
Pivot data model missing when setting rules for a pivot table
-[TSTGroupBySet groupByForColumnLevel:rowLevel:]
columnLevel exceeds columnGroupings.count
rowLevel exceeds rowGroupings.count
No groupBy set for columnLevel: %d
-[TSTGroupBySet groupColumnIndexesForOwnerIndex:]
Excceded our set of practical groupBys
-[TSTGroupBySet groupingColumnsForOwnerIndex:]
Expected to get a grouping column for index: %d
-[TSTGroupBySet groupByForOwnerIndex:createIfMissing:]
ownerIndex out of range: %d
Fatal Assertion failure: %{public}s %{public}s:%d Asking for flattened column aggregate uids while not flattening on columns
-[TSTGroupBySet columnUidsForColumnGroupUid:]
Asking for flattened column aggregate uids while not flattening on columns
Fatal Assertion failure: %{public}s %{public}s:%d Asking for flattened row aggregate uids while not flattening on rows
-[TSTGroupBySet rowUidsForRowGroupUid:]
Asking for flattened row aggregate uids while not flattening on rows
-[TSTGroupBySet columnNameForAggregateIndex:allowDuplicateNames:]
Re-constructing a non-empty pivot table without the calc engine
-[TSTGroupBySet qualifiedColumnNameForAggregateIndex:useShortLabel:allowDuplicateNames:locale:]
Requires a locale here
%@ of %@
<Invalid AggType>: %@
Expecting to have localized label for all correct aggregate types
-[TSTGroupBySet compactQualifiedColumnNameForAggregateIndex:useShortLabel:allowDuplicateNames:locale:]
%@ (%@)
-[TSTGroupBySet percentParentDenominatorCategoryRefFor:inGroupBy:forAggregate:forShowAsType:]
Only expecting these two showAsTypes, got: %d
-[TSTGroupBySet restrictColumnIndexes:toColumnGroupLevel:forPivotTable:]
Only expected this call with pivotTableInfo
-[TSTGroupBySet groupValueTupleForUuidCoord:createIfMissing:]
Couldn't locate rowGroupNode or columnGroupNode
Need a groupBy for this coordinate - why didn't you help?
TSTTableInfo
TSTTableModel
TSTTableStyle
TSTCellStyle
TSTConditionalStyleSet
TSTTableTile
TSTTableDataList
TSTTableDataListSegment
TSTTableHeaderStorageBucket
TSTWPTableInfo
TSTTableStrokePreset
TSTTableStylePreset
TSTArchivedCellSelection
TSTArchivedRdar39989167CellSelection
TSTArchivedStrokeSelection
TSTArchivedAutofillSelection
TSTCellMap
TSTConcurrentCellMap
TSTConcurrentCellList
TSTFormulaEqualsTokenAttachment
TSTWPTokenAttachment
TSTExpressionNode
TSTBooleanNode
TSTNumberNode
TSTStringNode
TSTArrayNode
TSTListNode
TSTLetNode
TSTVariableNode
TSTInNode
TSTOperatorNode
TSTPostfixOperatorNode
TSTPrefixOperatorNode
TSTFunctionNode
TSTFunctionEndNode
TSTDateNode
TSTReferenceNode
TSTDurationNode
TSTArgumentPlaceholderNode
TSTIdentifierNode
TSTMergeRegionMap
TSTEmptyExpressionNode
TSTArchivedLayoutHint
TSTCompletionToken
TSTHiddenStateFormulaOwner
TSTPopUpMenuModel
TSTRichTextPayload
TSTTableFilterSet
TSTTableStyleNetwork
TSTColumnRowUIDMap
TSTSummaryModel
TSTSummaryCellVendor
TSTCategoryOrder
TSTStrokeSidecar
TSTStrokeLayer
TSTPencilAnnotation
TSTHeaderNameMgrTile
TSTHeaderNameMgr
TSTPivotOwner
TSTPivotGroupingColumnOptionsMap
TSTPivotRowColumnOrder
TSTCategoryOwner
TSTGroupBy
TSTCellDiffArray
TSTCellDiffArraySegment
-[TSTConcurrentCellMap viewCellRects]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTConcurrentCellMap.mm
can't use cellid interface with celluid map
-[TSTConcurrentCellMap cellUIDRanges]
can't use celluid interface with cellid map
-[TSTConcurrentCellMap p_cacheRowColumnUIDs]
-[TSTConcurrentCellMap appendCellList:]
cell list uid state doesn't match cell map
-[TSTConcurrentCellMap appendCellLists:]
v40@?0r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}8{TSUViewCellCoord={TSUCellCoord=ISBB}}16{TSUModelCellCoord={TSUCellCoord=ISBB}}24@"TSTCell"32
-[TSTConcurrentCellMap enumerateSeriallyUsingBlock:]
need a celluid based map
check that willApplyToTable was called already
-[TSTConcurrentCellMap p_enumerateNewAndOldCellsSeriallyUsingBlock:]
-[TSTConcurrentCellMap p_enumerateNewAndOldCellsSeriallyUsingPreBNCBlock:]
-[TSTConcurrentCellMap enumerateRowsOfCellsConcurrentlyUsingBlock:]
willApplyToTable should be called first
-[TSTConcurrentCellMap updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:preBNCBlock:]
-[TSTConcurrentCellMap updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:preBNCBlock:]_block_invoke_2
should only be enumerating the cells of interest (stringValue)
-[TSTConcurrentCellMap updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:preBNCBlock:]_block_invoke
should only be enumerating the cells of interest (hasFormula)
-[TSTConcurrentCellMap updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:preBNCBlock:]_block_invoke_3
should only be enumerating the cells of interest (hasFormulaAnyError)
-[TSTConcurrentCellMap updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:preBNCBlock:]_block_invoke_4
should only be enumerating the cells of interest (hasRichText)
-[TSTConcurrentCellMap updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:preBNCBlock:]_block_invoke_5
should only be enumerating the cells of interest (hasConditionalStyle)
-[TSTConcurrentCellMap updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:preBNCBlock:]_block_invoke_6
should only be enumerating the cells of interest (hasCommentStorage)
-[TSTConcurrentCellMap updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:preBNCBlock:]_block_invoke_7
should only be enumerating the cells of interest (hasImportWarningSet)
-[TSTConcurrentCellMap updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:preBNCBlock:]_block_invoke_8
should only be enumerating the cells of interest (hasControl)
{?=IIIIIIIIIS}34@?0@"TSTCell"8@"TSTCell"16@"TSTTableTileRowInfo"24{TSUModelColumnIndex=S}32
-[TSTConcurrentCellMap willApplyToTable:]
applyingToTable already called
need a uidBased cell map
-[TSTConcurrentCellMap convertToInverseCellMap]
willApplyToTable was not called or didApplyToTable called twice
-[TSTConcurrentCellMap pushInverseMergeAction:]
willApplyToTable should have been called
v16@?0@"NSMutableArray"8
-[TSTConcurrentCellList addCell:atViewCellCoord:]
index should be somewhere in the in the cell list's area
-[TSTConcurrentCellList p_setObjectLocale:]
-[TSTConcurrentCellList p_setupInterestingCells:interestingCellIndexes:forAdding:]
cell lists size mismatch
-[TSTConcurrentCellList p_invokeBlock:]
base rows needs to match uids
base cols needs to match uids
cells size needs to match area range
only valid viewRowIndexes should remain
only valid baseRowIndexes should remain
-[TSTConcurrentCellList p_convertToInverseCellMap]
oldCells size mismatch in cellList
-[TSTConcurrentCellList p_gatherRowState:]
-[TSTConcurrentCellList p_accumulateCurrentCellsConcurrentlyUsingBlock:]
_tilesPerRow
_rowInfosPerRow
_tilesPerRow size mismatch in cellList
_rowInfosPerRow size mismatch in cellList
-[TSTConcurrentCellList p_enumerateRowsOfCellsConcurrentlyUsingBlock:]
_oldCells size mismatch in cellList
-[TSTConcurrentCellList p_enumerateNewAndOldCellsSeriallyUsingBlock:]
-[TSTConcurrentCellList p_enumerateNewAndOldCellsSeriallyUsingPreBNCBlock:]
-[TSTConcurrentCellList p_enumerateCellsAddedAndRemovedOfType:usingBlock:]
v32@?0@"TSKFormat"8@"NSMutableIndexSet"16^B24
v32@?0@"NSNumber"8@"NSMutableIndexSet"16^B24
-[TSTConcurrentCellList p_enumerateColumnCellCountDiffUsingBlock:]
_baseColumns and _cellCountDiffsPerColumn sizes should match
-[TSTConcurrentCellList p_enumerateRowCellCountDiffUsingBlock:]
_baseRows and _cellCountDiffsPerRow sizes should match
_baseRows and _tilesPerRow sizes should match
_baseRows and _rowInfosPerRow sizes should match
-[TSTConcurrentCellList p_enumerateCustomFormatsBeingAddedUsingReplacementBlock:]_block_invoke
Expected the custom format replacement to be of the same type as the original.
-[TSTConcurrentCellList p_enumerateCustomFormatsBeingAddedUsingReplacementBlock:]
customFormatToRemove can not be nil.
replacementCustomFormat can not be nil.
-[TSTConcurrentCellList saveToArchiver:]
Archiving is not correctly implemented for subclasses.
-[TSTConcurrentSparseCellList addCell:atViewCellCoord:]
-[TSTConcurrentSparseCellList p_invokeBlock:]
-[TSTConcurrentSparseCellList p_accumulateCurrentCellsConcurrentlyUsingBlock:]
-[TSTConcurrentSparseCellList p_enumerateRowsOfCellsConcurrentlyUsingBlock:]
v12@?0B8
-[TSTTableDataList setRichTextParentInfo:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTableDataList.mm
The richTextParentInfo only applied to the Rich Text Payload datalist.
Tables/DataList
v24@?0@"TSTTableDataObject"8^B16
-[TSTTableDataList p_nextAvailableKey]
-[TSTTableDataList wrappedObjectForPayload:]
Custom Format datalists are obsolete and should never be added to!
-[TSTTableDataList p_setPayload:atSuggestedKey:callWillModify:]
No object with key %u in %{public}@ datalist!
-[TSTTableDataList enumerateFormatsUsingBlock:]
Can't enumerate formats on a non-format list!
-[TSTTableDataList enumerateCustomFormatsUsingBlock:]
Can't enumerate custom formats on a non-custom format list!
-[TSTTableDataList repairStyleDatalistStylesheetIfNecessary]_block_invoke
Expected new style to be in the document stylesheet
-[TSTTableDataList takeReferences:forKey:callWillModify:]
Cannot add reference for custom format
-[TSTTableDataList dropReferences:forKey:callWillModify:]
custom format should not have more than one reference
Comment
Conditional Style
Custom Format
Format
Formula
ControlCellSpec
Formula Error
Import Warning
Multiple Choice List
Rich Text
String
Style
-[TSTTableDataList(Type_Specific_API) allRichTextStorages]
API is intended for kTSTTableDataListTypeRichText lists
-[TSTTableDataList(Type_Specific_API) allRichTextStorages]_block_invoke
richTextObject
richTextObject.richTextStorage
-[TSTTableDataList(Type_Specific_API) containsControlCellSpecs]
API is intended for kTSTTableDataListTypeFormat lists
-[TSTTableDataList(Type_Specific_API) containsFormulas]
API is intended for kTSTTableDataListTypeCellSpec lists
-[TSTTableDataList(Type_Specific_API) cellFormatForKey:]
Can only store formats in this list!
-[TSTTableDataList(Type_Specific_API) commentStorageForKey:]
Can only store cell comment storage objects in this list!
-[TSTTableDataList(Type_Specific_API) conditionalStyleSetForKey:]
Can only store conditional styles in this list!
-[TSTTableDataList(Type_Specific_API) formulaForKey:]
Can only store formulas in this list!
-[TSTTableDataList(Type_Specific_API) controlCellSpecForKey:]
Can only store controls in this list!
-[TSTTableDataList(Type_Specific_API) formulaErrorForKey:]
Can only store formulaErrors in this list!
-[TSTTableDataList(Type_Specific_API) importWarningSetForKey:]
Can only store import warning set objects in this list!
-[TSTTableDataList(Type_Specific_API) multipleChoiceListFormatForKey:]
Can only store pop up menu model in this list!
-[TSTTableDataList(Type_Specific_API) richTextForKey:]
Can only store text storages in this list!
-[TSTTableDataList(Type_Specific_API) stringForKey:]
Can only store strings in this list!
-[TSTTableDataList(Type_Specific_API) stringForKey:shouldWrap:]
-[TSTTableDataList(Type_Specific_API) styleForKey:]
Can only store styles in this list!
-[TSTTableDataList(Upgrade) upgradeCellFormatsU2_0]
This upgrade code is only for the Format list.
-[TSTTableDataList(Upgrade) upgradeCellFormatsU2_0]_block_invoke
customFormatList
-[TSTTableDataList(Upgrade) upgradeConditionalStylesToLinkedRefWithTableUID:]
This upgrade is for conditional style only.
-[TSTTableDataList(Upgrade) reassignCustomFormatUIDForPaste:]
This reassign code is for the Format list only.
v24@?0I8I12^B16
table
tableStyle
+[TSTTableStyle propertiesAllowingNSNull]_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTableStyle.mm
+[TSTTableStyle nonEmphasisTableProperties]_block_invoke
-[TSTTableStyle validate]
orphaned table style %@
Table style not in its stylesheet
-[TSTArchivedCellSelection selection]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTArchivedCellSelection.mm
Call selectionWithParent:
-[TSTArchivedCellSelection selectionWithParent:]
tableInfo
-[TSTArchivedCellSelection setSelection:]
Wrong type of class %@ (expected TSTCellSelection)
<%@: %p> %@
%@ for column %@ at level %lu with show as type %lu %@
(running total on: %@)
v16@?0@"TSPLazyReference"8
B24@?0r^v8r^v16
-[TSTTableTileStorage _upgradeFromTileIDMap:referenceMap:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTableTileStorage.mm
Tile upgrade can't find tile for ID %tu!
error
Fatal Assertion failure: %{public}s %{public}s:%d Failed to load a table tile during upgrade: errorClass=%{public}@, domain=%{public}@, code=%zd, %{public}@hints=%{public}@ (%@) 
recoverable=YES, 
Failed to load a table tile during upgrade: errorClass=%{public}@, domain=%{public}@, code=%zd, %{public}@hints=%{public}@ (%@) 
v32@?0@"TSPLazyReference"8Q16^B24
-[TSTTableTileStorage saveToStorageArchive:treeArchive:archiver:]
Unexpected categories feature version in TSTTableTileStorage.
v28@?0@"TSTTableTile"8I16^B20
-[TSTTableTileStorage setShouldUseWideRows:]
v20@?0@"TSTTableTile"8I16
Fatal Assertion failure: %{public}s %{public}s:%d Bad tile group index!
-[TSTTableTileStorage _groupForTileID:]
Bad tile group index!
-[TSTTableTileStorage _tileForID:createIfMissing:]
tile
v32@?0@"TSTTableTile"8Q16^B24
v24@?0@"TSTTableTileGroup"8^B16
-[TSTTableTileStorage _clearContentAtIndex:count:]
Corrupt tile map during clear!
-[TSTTableTileStorage _shiftRowsDownAtIndex:count:]
Tile insertion got confused!
-[TSTTableTileStorage _insertRowsAtIndex:count:]
Should only have whole-tile moves left in insert!
Corrupt tile map during insert!
Fatal Assertion failure: %{public}s %{public}s:%d Lost track of deletion start point!
-[TSTTableTileStorage _removeRowsAtIndex:count:]
Lost track of deletion start point!
Fatal Assertion failure: %{public}s %{public}s:%d Lost track of tiles during delete!
Lost track of tiles during delete!
Corrupt tile map during delete!
Fatal Assertion failure: %{public}s %{public}s:%d Tile should be empty during delete!
Tile should be empty during delete!
Fatal Assertion failure: %{public}s %{public}s:%d Shifting tiles too far during delete!
Shifting tiles too far during delete!
Fatal Assertion failure: %{public}s %{public}s:%d We removed too many rows during delete!
We removed too many rows during delete!
Shift too big during delete!
v32@?0^v8Q16^B24
TSTTilesCat
-[TSTTableTileStorage moveRowIndexRange:toIndex:]
Move row ranges cannot overlap!
v32@?0q8q16^B24
-[TSTTableTileStorage populatedRows]_block_invoke
Fatal Assertion failure: %{public}s %{public}s:%d Corrupt tile ID set!
-[TSTTableTileStorage lastPopulatedRowIndex]_block_invoke
Corrupt tile ID set!
RowInfo Cell Count Audit
Tile ID %lu, firstRow:%d
Tile Overlap Audit
-[TSTTableTileStorage auditTilesForRowOverlapAndExtensionPastTableBounds:withDataStore:result:]_block_invoke
Expected non-empty tile.
Tile with rows %d-%d overlaps with previous tiles in the table.
TileLastRow:%d tileMaxColumn:%d extends beyond tableModelLastRow:%d lastColumn:%d
v28@?0^{TSTCellStorage=}8S16^B20
-[TSTTableTileStorage prepareToApplyConcurrentCellMap:]_block_invoke
@"TSUPair"12@?0I8
TSKUIDStruct TSTUidApplyingAggregateIndex(const TSKUIDStruct &, NSUInteger)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTUIDTypes.mm
aggregateIndex * 2 had better fit in a UInt8
TSKUIDStruct TSTUidReversingAggregateIndex(const TSKUIDStruct &, NSUInteger)
-[TSTTableHeaderStorage initFromArchive:unarchiver:owner:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTableHeaderStorage.mm
Don't know how to handle this bucket hash function!
-[TSTTableHeaderStorage initFromArchive:unarchiver:owner:]_block_invoke
Bad header bucket count!
Fatal Assertion failure: %{public}s %{public}s:%d Bad bucket count during archiving!
-[TSTTableHeaderStorage encodeToArchive:archiver:]
Bad bucket count during archiving!
Fatal Assertion failure: %{public}s %{public}s:%d Asked to create buckets when we've already done so!
-[TSTTableHeaderStorage p_allocateBuckets]
Asked to create buckets when we've already done so!
-[TSTTableHeaderStorage _headerAtIndex:]
Caller asked for a header for an invalid row/column index!
-[TSTTableHeaderStorage shiftIndexesForwardAtIndex:count:]
Headers spilled out of our last bucket during shift!
-[TSTTableHeaderStorage shiftIndexesBackAtIndex:count:]
Headers spilled below zero!
Fatal Assertion failure: %{public}s %{public}s:%d Move ranges cannot overlap!
-[TSTTableHeaderStorage moveIndexRange:toIndex:]
Move ranges cannot overlap!
v28@?0@"TSTTableHeaderInfo"8I16^B20
TSTTableHeaderStorageBucket *p_mapAtIndex(TSTTableHeaderStorage *__strong, TSUColumnOrRowIndex, BOOL)
Unexpected header bucket index: %u!
Fatal Assertion failure: %{public}s %{public}s:%d Bad header bucket index for creation: %u
Bad header bucket index for creation: %u
Fatal Assertion failure: %{public}s %{public}s:%d Can't be missing the first bucket!
Can't be missing the first bucket!
<%@:%p index %lu baseCol %u rules %@
-[TSTTableHeaderStorageBucket initWithContext:bounds:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTableHeaderStorageBucket.mm
Can't initialize a bucket with a bad range!
Fatal Assertion failure: %{public}s %{public}s:%d Index out of range for bucket!
-[TSTTableHeaderStorageBucket headerAtIndex:]
Index out of range for bucket!
-[TSTTableHeaderStorageBucket mutableHeaderAtIndex:allowCreation:]
-[TSTTableHeaderStorageBucket setHeader:atIndex:]
v32@?0@"TSTTableHeaderInfo"8Q16^B24
-[TSTTableHeaderStorageBucket shiftIndexesBackAtIndex:count:]
Can't shift indexes below zero!
Tables/HeaderStorageBucket
-[TSTTableHeaderStorageBucket loadFromUnarchiver:]
<%@: %p>
[%lu]: %@
table.audited
tileOverlapPreupgrade
tileOverlapPostupgrade
v24@?0@"TSTLayoutSpace"8^B16
TSURowIndex TSTLayoutGetPartitionTopRow(TSTLayout *__strong)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTLayout.mm
row should be less than kTSURowIndexMax
TSUColumnIndex TSTLayoutGetPartitionLowestColumnIndex(TSTLayout *__strong)
column should be less than kTSUColumnIndexMax
CGRect TSTLayoutGetCanvasFrame(TSTLayout *__strong)
Passing in a nil layout to TSTLayoutGetCanvasFrame.
{CGRect={CGPoint=dd}{CGSize=dd}}32@?0@"TSTLayoutSpace"8{?={?=II}{?=II}}16
v24@?0{?={?=II}{?=II}}8
@"TSUBezierPath"16@?0@"NSArray"8
v40@?0Q8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16^B32
-[TSTLayout p_spillRangeForMaskingRichTextLayout:]
alignment should have already been resolved
-[TSTLayout p_prepareAttachmentCellsIfNeeded]_block_invoke_2
cell
iterator should return a valid cellID
storage should be nil since iterator is searching with TSTCellIteratorSearchForRichText
v24@?0@"TSWPStorage"8^B16
v32@?0@"TSTWPLayout"8Q16^B24
-[TSTLayout positionForColumnIndex:bodyWidth:target:outWidth:outGap:]
created an undersized column
-[TSTLayout naturalAlignmentForCellID:]
Contained text editing layout but invalid editing cell ID?
-[TSTLayout p_cellIDForWPLayout:]
TSTLayout should only parent layouts for editing text or cells with inline attachments!
-[TSTLayout maxAutoGrowLineWidthForTextLayout:]
should only be asking max width for unwrapped rich layouts
-[TSTLayout p_computeSpillingTextFrameForEditingLayout:textSize:editingSpillRange:]
B24@?0@"TSTLayout"8^B16
-[TSTAccumulator valueForType:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTAccumulator.mm
%@ does not handle TSCEAggType_StDev/_VAR/_CountDistinct request - a higher level should have handled that
%@ does not handle TSCEAggType_GroupValue/_BodyRows/_Indirect request - a higher level should have handled that
v32@?0@"TSTColumnAggregate"8Q16^B24
-[TSTRefNamer nameForBaseTractRef:namingContext:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTRefNamer.mm
baseString
 | %@
v24@?0r^{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}8^B16
-[TSTRefNamer nameForViewTractRef:namingContext:coordMapper:]_block_invoke
viewString
%@::
Categories
Body
CellDiffArray
-[TSTStrokeSidecar initForUpgradeWithTableModel:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTStrokeSidecar.mm
No usable root style in the document stylesheet or the deprecated theme stylesheet. Dropping the cell style on the floor.
v16@?0{TSUModelCellCoord={TSUCellCoord=ISBB}}8
v56@?0{TSTSimpleRange=qQ}8@"TSDStroke"24i32@"TSDStroke"36i44^B48
-[TSTStrokeSidecar flattenStrokeOrder]
left and right column stroke count should be identical
top and bottom row stroke count should be identical
v44@?0@"TSDStroke"8{TSTSimpleRange=qQ}16i32^B36
v24@?0@"NSArray"8@"NSPointerArray"16
-[TSTStrokeSidecar saveToArchiver:]
top and bottom stroke run arrays have different counts
left and right stroke run arrays have different counts
-[TSCellRangeCache clear]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCellRangeCache.mm
Clear with a BitGridTransaction open
v32@?0r^{TSUCellRect={TSUCellCoord=ISBB}{?=II}}8r^{TSCEInternalCellReference={TSUCellCoord=ISBB}SS}16^B24
v32@?0{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}8^B24
v40@?0Q8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16^B32
-[TSCellRangeCache mergedGridIndicesForDimension:]
Invalid table dimension
-[TSTLayoutSpace invalidateCoordinatesForEditingCellID:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTLayoutSpace.mm
Invalidating for an editing cell range that is not a single logical cell.
-[TSTLayoutSpace nearestRangeForLayoutRect:]
Failed to get nearest cell range from space %@ for layout rect %{public}@
-[TSTLayoutSpace frameForTableNameBorder]
this API is intended to run on the main space
-[TSTLayoutSpace strokeFrameForTableNameBorder]
-[TSTLayoutSpace alignedStrokeFrameForTableNameBorder]
WARNING: vertical stroke ( %f %@ => %@ ) length <= 0.0
WARNING: horizontal stroke ( %f %@ => %@ ) length <= 0.0
v48@?0@"TSDStroke"8{TSTSimpleRange=qQ}16i32i36^B40
-[TSTLayoutSpace validateCoordinateCache:]
There are no column coordinates
-[TSTCoordinateArray setTableWidthForRightToLeft:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCoordinateArray.mm
Setting a table width on a LTR coordinate array has no effect.
CGFloat TSTCoordinateArrayGetCoordinate(TSTCoordinateArray *__strong, TSTGridIndex)
coordinateArray
CGFloat TSTCoordinateArrayGetRawCoordinate(TSTCoordinateArray *__strong, TSTGridIndex)
<%@ %p offset=%u average=%f
 coordinates={empty}>
 coordinates={
  { offset=%u -> coordinate=%f }
v16@?0@8
<%@ %p>: expressionNode:%@, parenNestingLevel:%lu argumentIndex:%lu
invalid symbol
-[TSTVariableNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTVariableNode.mm
Unexpected object in initAsCopyOf:... expected TSTVariableNode, got %@
invalid symbol in copy
invalid symbol in setter
-[TSTVariableNode insertFormulaText:includeWhitespace:]
NumberNode shouldn't have any children
-[TSTVariableNode buildASTNodeArray:hostCell:symbolTable:]
VariableNode shouldn't have any children
void TSTCellRegionGathererMap::joinAndAddRange(TSTCellRange, NSUInteger)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCellRegionGatherer.mm
_cellRanges does not match encodedCoordToCandidateIndexMap
v24@?0{TSTCellRegionGathererKey=QI}8
TSUCellRect TSUMakeCellRectFromNSRanges(NSRange, NSRange)
Invalid column range
Invalid row range
%@ group-by: %@ for column: %@
-[TSTTableStylePreset setStyleNetwork:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTableStylePreset.mm
styleNetwork
-[TSTTableStylePreset presetID]
No valid preset ID
-[TSTTableStylePreset initWithStyleNetwork:]
-[TSTTableStylePreset initWithContext:]
Should always be intialized with a network and an ID
-[TSTTableStylePreset drawSwatchInRect:inContext:]
_styleNetwork
-[TSTTableStylePreset loadFromUnarchiver:]_block_invoke
_tempUpgradePresetID
_styleNetwork.presetID
v16@?0@"TSTTableStyleNetwork"8
-[TSTTableStylePreset saveToArchive:archiver:]
TSTCellFormatKindNumber
TSTCellFormatKindCurrency
TSTCellFormatKindDateTime
TSTCellFormatKindDuration
TSTCellFormatKindText
TSTCellFormatKindBoolean
TSTCellFormatKindNotSet
tableName
textStyle
shapeStyle
@"TSSStyle"40@?0@"TSSStyle"8@"NSString"16Q24Q32
+[TSTTableStyleNetwork createStylesInStylesheet:presetID:colors:alternate:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTableStyleNetwork.mm
Style network is missing styles. %{public}@
+[TSTTableStyleNetwork networkFromStylesheet:presetID:]
no default table style in stylesheet %p
nameStyle
tableNameShapeStyle
+[TSTTableStyleNetwork networkFromTheme:presetID:]
theme
+[TSTTableStyleNetwork networkFromTheme:presetIndex:]
v24@?0Q8Q16
+[TSTTableStyleNetwork networkWithContext:presetID:styleProvider:tableStyleMorphingBlock:nameStyleMorphingBlock:nameShapeStyleMorphingBlock:cellStyleMorphingBlockByStyleArea:textStyleMorphingBlockByStyleArea:]
All styles are not present and accounted for.
-[TSTTableStyleNetwork initWithContext:styleProvider:presetID:]
Cannot set styles from a different context
-[TSTTableStyleNetwork isEqual:]
Cell style array length mismatch
Cell style array element nillity mismatch at position %zu
Text style array length mismatch
Text style array element nillity mismatch at position %zu
-[TSTTableStyleNetwork setTextStyle:forTableStyleArea:]
Pivot areas use the equivalent default area textStyle. Don't try to set it.
-[TSTTableStyleNetwork loadFromArchive:unarchiver:]_block_invoke
_tableStyle must be nil when loading from an archive
-[TSTTableStyleNetwork loadFromArchive:unarchiver:]_block_invoke_14
_tableNameStyle must be nil when loading from an archive
-[TSTTableStyleNetwork loadFromArchive:unarchiver:]_block_invoke_15
_tableNameShapeStyle must be nil when loading from an archive
sheet-0-sheetStyle
%@, %@
cellID:%u, %u, count:%lu
-[TSTTableArchivedControlCellSelection setSelection:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTableArchivedControlCellSelection.mm
Wrong type of class %@ (expected TSTTableControlCellSelection)
-[TSTTableStrokePresetList setStrokePreset:atIndex:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTableStrokePresetList.mm
preset index higher than count
-[TSTTableStrokePresetList initWithArchive:unarchiver:]
invalid preset count
-[TSTTableStrokePresetList horizontalStrokeForStrokePreset:]
illegal preset index
-[TSTTableStrokePresetList verticalStrokeForStrokePreset:]
-[TSTTableStrokePresetList exteriorStrokeForStrokePreset:]
-[TSTTableStrokePresetList maskForStrokePreset:]
v16@?0@"TSSStylesheet"8
-[TSSTheme(TSTArchiving) tstLoadFromArchive:unarchiver:]_block_invoke_2
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSSTheme_TSTArchiving.mm
Preset style network is missing styles when unarchiving. %{public}@
-[TSTExpressionNode exportString]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTExpressionNode.mm
Children of TSTExpressionNode that is tokenized should implement exportString().
v32@?0@"TSTExpressionNode"8Q16^B24
-[TSTExpressionNode recordHashesForSubexpressions:]
subclasses must override recordHashesForSubexpressions so CSE works properly
<%@ %p>: '%@'
-[TSTFormula reparseWithStorage:adjustExpressionTree:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTFormula.mm
Formula storage exceeds maximum length.
'%C%C
'%C%C%C%C
%C%C%C%C%C%C%C%C%C%C%C
+[TSTFormula formulaQuoteContextAtCharIndex:inStorage:]
charIndex %lu not within storage range %@
+-*/^&=><:
%C%C%C%C%C%C%C%C
%C%C%C%C%C%C%C%C%C%C
%C%C%C%C%C
-[TSTFormula p_fixFormula:]
expected a function node with a function start token
unexpected quote context value %ld
expected non-empty storage
expected a function node on the stack
v24@?0@"TSTExpressionNode"8^B16
+[TSTCellChooserControlSpec cellSpecFromTSKFormat:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCellChooserControlSpec.mm
mcFormat
-[TSTCellChooserControlSpec initWithArchive:unarchiver:]
Wrong interaction type for a popup.
v16@?0@"TSTPopUpMenuModel"8
-[TSTOperatorNode initWithContext:operatorChar:children:firstIndex:lastIndex:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTOperatorNode.mm
Operators should only have 2 children.  There are %lu arguments to operator '%hu'
-[TSTOperatorNode initAsCopyOf:intoContext:children:]
Unexpected object in initAsCopyOf:... expected TSTOperatorNode, got %@
-[TSTOperatorNode insertFormulaText:includeWhitespace:]
OperatorNode doesn't have two arguments
-[TSTOperatorNode buildASTNodeArray:hostCell:symbolTable:]
Operator node doesn't have two arguments
Undefined operator node
v28@?0I8@"TSUCustomFormat"12^B20
-[TSTNumberNode initWithContext:string:locale:firstIndex:lastIndex:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTNumberNode.mm
numberString
-[TSTNumberNode initAsCopyOf:intoContext:children:]
Unexpected object in initAsCopyOf:... expected TSTNumberNode, got %@
-[TSTNumberNode insertFormulaText:includeWhitespace:]
-[TSTNumberNode buildASTNodeArray:hostCell:symbolTable:]
NSString *TSTStringForDouble(double, TSULocale *__strong)
A locale is required here
Warning: Creating brave new cell with value type %@ but mismatched format type %@, repairing
-[TSTCell_PreBNC upgradedBraveNewCell]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCell_PreBNC.mm
-[TSTCell_PreBNC initWithLocale:]
The formula should not begin with an equals sign.
The formula contains a syntax error.
-[TSTCell_PreBNC stringForEditing]
durationFormat
-[TSTCell_PreBNC setCellStyle:clearingID:]
expected cell style got %{public}@
-[TSTCell_PreBNC setTextStyle:clearingID:]
-[TSTCell_PreBNC setConditionalStyle:clearingID:]
expected conditional style got %{public}@
B20@?0@"TSKFormat"8S16
-[TSTCell_PreBNC copyAllFormatsToCell:]
dest
<%@:%p: value type %@ value %@>
No content
Number
Currency
DEPRECATED
Date
Bool
Duration
FormulaError
RichText
Cell Spec: 
Value: 
<empty>
<number: %f>
<rich text: '%@'>
<string: '%@'>
<date: '%@'>
<bool: '%@'>
FALSE
TRUE
<duration: %f>
<error>
<unknown cell type>
-[TSTCellMap loadFromUnarchiver:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCellMap.mm
serious error: flag out of sync with content.
-[TSTCellMap loadFromUnarchiver:]_block_invoke
creating a one-to-many cell map but starting with more than one cell
-[TSTCellMap saveToArchiver:]
We should never archive shallow copies. That's not what they are for
v32@?0@"TSTCellList"8Q16^B24
-[TSTCellMap cellIDAtIndex:]
cannot examine cellIDs in UID mode
-[TSTCellMap enumerateCellsWithIDsUsingBlock:]
can't enumerate IDs since have UIDs
-[TSTCellMap enumerateCellsWithUIDsUsingBlock:]
can't enumerate by UIDs since have IDs
-[TSTCellMap findCellForCellID:]
cannot use find with a UID based cell map
v40@?0r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}8@"TSTCell"16Q24^B32
-[TSTCellMap addCell:andCellUID:]
cannot add UIDs in ID mode
cannot add cells in one-to-many mode
-[TSTCellMap addPrecopiedCells:andCellUIDs:]
Cell and CellUID sizes don't match up
-[TSTCellMap addCell:andCellID:]
Cannot add cellIDs while in UID mode.
-[TSTCellMap replaceCellAtIndex0:]
-[TSTCellMap appendCellMap:precopied:]
Trying to append a cellID cellMap to a uidBased map. Aborting.
Trying to append a uidBased cellMap to a cellID map. Aborting.
-[TSTCellMap p_addPrecopiedCells:]
Shallow copy not supported in this path
-[TSTCellMap p_copyCellsAndUUIDsFromCellMap:convertingToCellIDsWithTableInfo:]
This should only be called with a UID based cell map.
-[TSTCellList cellAtIndex:]
Out of range in  %@
-[TSTCellList replaceCell:atIndex:]
Asking to replace where we currently have no cell at all - invalid replaceCell: call
Should now fit in real range
-[TSTCellList loadFromUnarchiver:]_block_invoke
virtual TSCEASTElement *TSTTSCEASTNodeExpressionNodeFunction::functionNode(TSCEASTFunctionElement *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTSCEASTNodeExpressionNodeFunction.mm
improper number of arguments for function node.
virtual TSCEASTElement *TSTTSCEASTNodeExpressionNodeFunction::unknownFunctionNode(TSCEASTUnknownFunctionElement *)
virtual TSCEASTElement *TSTTSCEASTNodeExpressionNodeFunction::colonNode(TSCEASTColonElement *)
improper number of arguments for colon node.
virtual TSCEASTElement *TSTTSCEASTNodeExpressionNodeFunction::arrayNode(TSCEASTArrayElement *)
improper number of arguments for array.
virtual TSCEASTElement *TSTTSCEASTNodeExpressionNodeFunction::listNode(TSCEASTListElement *)
improper number of arguments for list node.
virtual TSCEASTElement *TSTTSCEASTNodeExpressionNodeFunction::viewTractRefNode(TSCEASTViewTractRefElement *)
viewTractRef is expected to have an active tract
TSTExpressionNode *TSTTSCEASTNodeExpressionNodeFunction::expressionNode()
Unable to properly create a TSTExpressionNode. Possibly a bad ASTNodeArray?
void TSTTSCEASTNodeExpressionNodeFunction::processOperatorNode(unichar)
improper number of arguments for operator node.
void TSTTSCEASTNodeExpressionNodeFunction::processPostfixOperatorNode(unichar)
improper number of arguments for postfix operator node.
void TSTTSCEASTNodeExpressionNodeFunction::processPrefixOperatorNode(unichar)
improper number of arguments for prefix operator node.
unichar operatorCharForTag(TSCEASTNodeTag)
Unknown operator tag: %d
static void TSCERelativeCellCoordinate::assertColumnInMaxRange(TSURelativeColumnIndex)
/Library/Caches/com.apple.xbs/Binaries/iWorkImport_Sim/install/Symbols/BuiltProducts/TSCalculationEngine.framework/Headers/TSCETypes.h
TSCERelativeCellCoordinate: column outside valid range: %d
static void TSCERelativeCellCoordinate::assertRowInMaxRange(TSURelativeRowIndex)
TSCERelativeCellCoordinate row outside valid range: %d
TSUColumnIndex TSCEMakeAbsoluteColumnFromRelativeColumn(TSUCellCoord, TSURelativeColumnIndex, BOOL)
overflow in column
TSURowIndex TSCEMakeAbsoluteRowFromRelativeRow(TSUCellCoord, TSURelativeRowIndex, BOOL)
overflow in row, input row: %d with host row: %lu
Calling TSCEMakeAbsoluteRowFromRelativeRow with an invalid hostCell row: %@
-[TSTColumnRowUIDMap initWithContext:tableUUID:numberOfRows:numberOfColumns:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTColumnRowUIDMap.mm
tableUUID
-[TSTColumnRowUIDMap insertColumnsWithUIDs:atIndex:]
cannot insert columns at invalid columnIndex
-[TSTColumnRowUIDMap insertRowsWithUIDs:atIndex:]
cannot insert rows at invalid rowIndex
v28@?0I8r^{TSKUIDStruct=QQ}12^B20
v32@?0r^{TSTLookupKeyCoord=I}8Q16^B24
v28@?0S8r^{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}12^B20
-[TSTImmutableColumnRowUIDMap initWithColumnRowUIDMap:]
@e need to ensure versionCounter was preserved
-[TSTCategoryOwner setTableModel:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCategoryOwner.mm
tableModel
%@<%p> (on table %@)
-[TSTCategoryOwner registerWithCalcEngine:baseOwnerUID:]
Already registered with calcEngine
GroupBy shouldn't be registered yet.
-[TSTCategoryOwner registerGroupByForColumns:ownerIndex:hiddenStates:groupBySet:]
Bad ownerIndex (%d) for groupBy
If ownerIndex matches up, then so should groupByUid
-[TSTCategoryOwner updateWithDocumentRoot:]
%@ @ %@
-[TSTAggNode encodeToArchive:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTAggNode.mm
Not expecting an invalid coord here
-[TSTFunctionNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTFunctionNode.mm
Unexpected object in initAsCopyOf:... expected TSTFunctionNode, got %@
-[TSTFunctionNode buildASTNodeArray:hostCell:symbolTable:]
-[TSTLetNode initWithContext:children:firstIndex:lastIndex:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTLetNode.mm
Let nodes should have exactly 0 or 3 children.  There are %lu arguments to let
A let node's first child must be an identifier.
-[TSTLetNode initAsCopyOf:intoContext:children:]
variable %u
-[TSTLetNode setChildren:]
let nodes must have zero or three children
-[TSTLetNode boundSymbol]
identifier is not of proper type: %@
-[TSTLetNode copyByResolvingIdentifiers:hostTable:baseHostCell:forceReferenceInterpretation:symbolTable:oldToNewNodeMap:]
Let nodes must have exactly zero or three children
-[TSTLetNode addAllIdentifiersToSymbolTable:]
Let nodes must have exactly three children
-[TSTLetNode insertFormulaText:includeWhitespace:]
Let node doesn't have three arguments
-[TSTLetNode buildASTNodeArray:hostCell:symbolTable:]
-[TSTSummaryModel resetForPivotingWithRowUids:columnUids:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTSummaryModel.mm
Resetting a categories summary model for pivoting
-[TSTSummaryModel resetForCategoriesWithForce:]
Resetting a pivoting summary model for categories
-[TSTSummaryModel resetForCategoriesWithForce:]_block_invoke_2
we should have a valid coordinate
v24@?0r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}8@"TSTCell"16
v16@?0@"TSTSummaryCellVendor"8
-[TSTSummaryModel p_setPivotCell:atCellUID:formulaReplacer:]
Attempting to set cell at illegal summary model cell UID:%{public}@
-[TSTSummaryModel allRichTextStorages]
TODO
-[TSTSummaryModel heightOfRowAtIndex:isDefault:]
Individual row heights can only be used for pivot tables.
-[TSTSummaryModel widthOfColumnAtIndex:isDefault:]
Individual column widths can only be used for pivot tables.
-[TSTSummaryModel setHeight:ofRowAtIndex:]
-[TSTSummaryModel setWidth:ofColumnAtIndex:]
-[TSTSummaryModel setLabelRowVisibility:atCategoryLevel:]
-[TSTSummaryModel willRemoveGroup:]
GroupBy tried to remove a summaryRow that doesn't exist in the summaryModel.
+[TSTSummaryModel categoryLevelForTableStyleArea:]
Calling categoryLevelForTableStyleArea with an invalid style area
v16@?0@"TSTCellMap"8
+[TSTCellToggleControlSpec cellSpecFromTSKFormat:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCellToggleControlSpec.mm
Expected checkbox format.
-[TSTCellToggleControlSpec initWithArchive:unarchiver:]
Wrong interaction type for a checkbox.
-[TSTStrokeOrderedLayer initWithContext:majorStrokeLayer:minorStrokeLayer:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTStrokeOrderedLayer.m
majorStrokeLayer
minorStrokeLayer
-[TSTStrokeOrderedLayer appendStroke:inRange:order:]
-[TSTStrokeOrderedLayer insertStroke:inRange:order:]
-[TSTStrokeOrderedLayer invalidate]
-[TSTStrokeOrderedLayer invalidateRange:]
-[TSWPStorage(TSTAdditions) tst_selectionForImplicitlyEditingWithFormatType:percentSymbol:currencySymbol:adjustSelectionForCurrencyOrPercentSymbols:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSWPStorage+TSTAdditions.mm
currencySymbol
-[TSWPStorage(TSTAdditions) tst_tableInfo]
parentInfo of a kTable TSWPStorage must be a TSTTableInfo
-[TSWPStorage(TSTAdditions) rangeForCellID:includingBreak:]
cell attribute not found
TSTWPTokenAttachment *TSTLexer::nextTokenAttachment()
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTLexerAdditions.mm
No more tokenAttachments.
tokenAttachment
virtual TSCEASTElement *TSTTrackingRangeExtractor::anyReferenceNode(TSCEASTRelativeCoordRefElement *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTrackingRangeExtractor.mm
Too many coordinates in tracking range!
tracking region should not yet be initialized
v24@?0r^{TSUCellRect={TSUCellCoord=ISBB}{?=II}}8^B16
+[TSTFormulaPredArgData getPredArgDataFromCell:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTFormulaPredArg.mm
predArgData
-[TSTFormulaPredArgData string]
Wrong data type for call: %d
-[TSTFormulaPredArgData date]
-[TSTFormulaPredArgData number]
-[TSTFormulaPredArgData doubleValue]
-[TSTFormulaPredArgData boolValue]
-[TSTFormulaPredArgData durationValue]
-[TSTFormulaPredArgData durationUnits]
-[TSTFormulaPredArgData duration]
-[TSTFormulaPredArg boolValue]
Wrong type accessor called on %@
-[TSTFormulaPredArg setBoolValue:]
-[TSTFormulaPredArg number]
-[TSTFormulaPredArg setNumber:]
-[TSTFormulaPredArg preserveFlags]
-[TSTFormulaPredArg setPreserveFlags:]
Must set the entire relative reference, if you are relative
-[TSTFormulaPredArg date]
-[TSTFormulaPredArg setDate:]
-[TSTFormulaPredArg string]
-[TSTFormulaPredArg setString:]
-[TSTFormulaPredArg dataList]
-[TSTFormulaPredArg relativeCellRef]
Asking for a relative cell-ref, but we don't have one
-[TSTFormulaPredArg setRelativeCellRef:]
-[TSTFormulaPredArg crossTableRef]
Need a host-cell if we aren't storing a relativeRef
-[TSTFormulaPredArg categoryRef]
-[TSTFormulaPredArg viewTractRef]
-[TSTFormulaPredArg baseCellRef]
-[TSTFormulaPredArg cellRefForHostCoord:]
-[TSTFormulaPredArg setBaseCellRef:]
-[TSTFormulaPredArg durationValue]
-[TSTFormulaPredArg setDurationValue:]
-[TSTFormulaPredArg durationUnits]
-[TSTFormulaPredArg duration]
-[TSTFormulaPredArg setDurationUnits:]
-[TSTFormulaPredArg rewriteWithContext:forArgAt:usingLinkedRef:useColumnRef:hostCellRef:rewriteBlock:]
Not expecting no result
-[TSTFormulaPredArg formulaCreatorForPredArg]
Need a host-cell for this
-[TSTFormulaPredArg formulaCreatorForPredArg0UsingLinkedRef:useColumnRef:]
Only references types are supported for predArg0, saw %d
-[TSTHiddenStatesOwner hiddenStates]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTHiddenStatesOwner.mm
We should only have one hiddenStates per table, at the moment
%@<%p>(on table %@)
 Hidden States:
  - %@
-[TSTHiddenStatesOwner registerHiddenStates:baseOwnerUID:]
HiddenStates couldn't register with calc-engine
-[TSTBooleanNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTBooleanNode.mm
Unexpected object in initAsCopyOf:... expected TSTBooleanNode, got %@
true
false
-[TSTBooleanNode insertFormulaText:includeWhitespace:]
BooleanNode shouldn't have any children
-[TSTBooleanNode buildASTNodeArray:hostCell:symbolTable:]
-[TSTArrayNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTArrayNode.mm
Unexpected object in initAsCopyOf:... expected TSTArrayNode, got %@
-[TSTArrayNode string]
We shouldn't call the arrayNode's string method, because it won't actually return a proper tokenized string
-[TSTArrayNode insertFormulaText:includeWhitespace:]
invalid TSTArrayNode children
expected n-1 delimiter whitespace elements
-[TSTArrayNode buildASTNodeArray:hostCell:symbolTable:]
We don't support more than UINT16_MAX rows in an array
We don't support more than UIN8_MAX columns in an array
-[TSTListNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTListNode.mm
Unexpected object in initAsCopyOf:... expected TSTListNode, got %@
<%@ %p>
-[TSTListNode string]
We shouldn't call the listNode's string method, because it won't actually return a proper tokenized string
-[TSTListNode buildASTNodeArray:hostCell:symbolTable:]
-[TSTGroupNodeFormatManager reset]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTGroupNodeFormatManager.mm
_cellValue
-[TSTGroupNodeFormatManager p_recalculateMergedFormatWithGroupBy:]
Expected duration format.
-[TSTGroupNodeFormatManager mergedFormatChangedByAddingRowUID:andCellValue:groupBy:]
format
groupBy
-[TSTGroupNodeFormatManager mergedFormatChangedByRemovingRowUID:groupBy:]
CellValue:%@
Cache:%@
-[TSTGroupNodeFormatManager updateWithDocumentRoot:]
-[TSTGroupNodeFormatManager initWithArchive:forGroupBy:]
Expected equal size arrays for the format dictionary.
-[TSTGroupNodeFormatManager encodeToArchive:forGroupBy:backwardCompat:]_block_invoke
-[TSTStringNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTStringNode.mm
Unexpected object in initAsCopyOf:... expected TSTStringNode, got %@
\U201C\U2006\U201D
\U201C%@\U201D
-[TSTStringNode insertFormulaText:includeWhitespace:]
StringNode shouldn't have any children
"%@"
-[TSTStringNode buildASTNodeArray:hostCell:symbolTable:]
v24@?0r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}8^B16
-[TSTDateNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTDateNode.mm
Unexpected object in initAsCopyOf:... expected TSTDateNode, got %@
-[TSTDateNode insertFormulaText:includeWhitespace:]
DateNode shouldn't have any children
-[TSTDateNode buildASTNodeArray:hostCell:symbolTable:]
DATE(%ld%@%ld%@%ld)
(DATE(%ld%@%ld%@%ld)+TIMEVALUE(TIME(%ld%@%ld%@%ld)))
<%@ %p>: '%@'%@
 (BLANK)
-[TSTReferenceNode initWithContext:calculationEngine:uidRectRef:categoryRef:hostCellRef:referenceColorHelper:suppressAutomaticNamedReferenceInvalidation:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTReferenceNode.mm
Expected uidRectRef to have same calculation engine as the one that was passed in.
-[TSTReferenceNode initWithReferenceStart:referenceEnd:suppressAutomaticNamedReferenceInvalidation:]
Creating a range reference with two references with different ownerUIDs
Creating a range reference with two references with different calculationEngines
-[TSTReferenceNode initAsCopyOf:intoContext:children:]
Unexpected object in initAsCopyOf:... expected TSTReferenceNode, got %@
unable to resurrect calcEngine in document context.
+[TSTReferenceNode p_spanningCategoryRefForViewRangeRef:groupByUid:categoryLevel:calculationEngine:]
trying to create a spanning category summary ref to more than one column
-[TSTReferenceNode p_categoryRefViewTractRef]
invalidCellTractRef
expected to create an invalid cell tract ref
-[TSTReferenceNode categoryRefTableUID]
asking a non-category ref node for its category ref table UID
-[TSTReferenceNode setHostTableUID:]
invalid tableUID
-[TSTReferenceNode referenceAsStringWithContext:]
nil calculationEngine.  Can't generate string for categoryRefNode.
nil calculationEngine.  Can't generate string for referenceNode.
-[TSTReferenceNode referenceAsStringWithContext:]_block_invoke
#REF!
-[TSTReferenceNode insertFormulaText:includeWhitespace:]
ReferenceNode shouldn't have any children
-[TSTReferenceNode buildASTNodeArray:hostCell:symbolTable:]
-[TSTReferenceNode exportString]
%@ :: 
-[TSTReferenceNode loadFromArchive:unarchiver:]
Invalid TSTReferenceNode archive
-[TSTPencilAnnotation initWithContext:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTPencilAnnotation.mm
v16@?0@"TSDPencilAnnotationStorage"8
-[TSTPencilAnnotation loadFromArchive:unarchiver:]
A TSTPencilAnnotation must have a pencilAnnotationStorage
-[TSTDurationNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTDurationNode.mm
Unexpected object in initAsCopyOf:... expected TSTDurationNode, got %@
-[TSTDurationNode insertFormulaText:includeWhitespace:]
DurationNode shouldn't have any children
-[TSTDurationNode buildASTNodeArray:hostCell:symbolTable:]
DURATION(%g%@%g%@%g%@%g%@%g%@%g)
-[TSTDurationNode date]
We shouldn't ask a Duration for its date.
-[TSTDurationNode format]
We shouldn't ask a Duration for its format.
-[TSTArgumentPlaceholderNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTArgumentPlaceholderNode.mm
Unexpected object in initAsCopyOf:... expected TSTArgumentPlaceholderNode, got %@
-[TSTArgumentPlaceholderNode copyIntoContext:bakeModes:children:]
Unexpected mode value type
value
-[TSTArgumentPlaceholderNode detokenizedText]
expected set placeholder node to return a different node for bakedValue
-[TSTArgumentPlaceholderNode buildASTNodeArray:hostCell:symbolTable:]
ArgumentPlaceholderNode shouldn't have children
-[TSTPostfixOperatorNode insertFormulaText:includeWhitespace:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTPostfixOperatorNode.mm
PostfixOperatorNode doesn't have one argument
-[TSTPostfixOperatorNode buildASTNodeArray:hostCell:symbolTable:]
-[TSTStrokeDefaultVendor p_strokeTypeForColumn:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTStrokeDefaultVendor.mm
expected a pivot table for footer columns
-[TSTStrokeDefaultVendor p_updateStrokeLayer:forColumnStrokeType:]
unexpected column strokeType %zu
-[TSTStrokeDefaultVendor p_updateStrokeLayer:forRowStrokeType:]
unexpected row strokeType %zu
-[TSTUidCoordsPerRunningCellValue getUidCoordforRunningAggregate:tupleForCoord:newUidCoord:addNewUidCoordEvenIfNotFound:inContext:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTRunningTotalContext.mm
Got a too-large insertIndex: %lu
-[TSTRunningTotalContext getPreviousUidCoordForAggIndex:fromNewUidCoord:addNewUidCoordEvenIfNotFound:]
We need to locate (or create) a tuple
-[TSTPrefixOperatorNode insertFormulaText:includeWhitespace:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTPrefixOperatorNode.mm
PrefixOperatorNode doesn't have one argument
-[TSTPrefixOperatorNode buildASTNodeArray:hostCell:symbolTable:]
-[TSTFunctionEndNode insertFormulaText:includeWhitespace:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTFunctionEndNode.mm
We shouldn't ever buildFormulaText: with a functionEndNode
-[TSTFunctionEndNode buildASTNodeArray:hostCell:symbolTable:]
We shouldn't ever buildASTNodeArray: with a functionEndNode
-[TSTCellFormatAndValue stringValue]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCellFormatAndValue.mm
Getting a non-string value as string from a TSTCellFormatAndValue.
-[TSTCellFormatAndValue richTextOrErrorTextStorageValue]
Getting a non-rich-text/non-formula-error value as rich text from a TSTCellFormatAndValue.
+[TSTCellFormatAndValue formatAndValueFromRichTextCell:updatingStorageWithBlock:]
expected rich text cell when creating format and value
-[TSTCellFormatAndValue initFromCell:useAllSpareFormats:forceNoContent:suppressApplyValue:applySpareFormatOnly:]
useAllSpareFormats and spareFormatOnly are mutually exclusive!
deprecated cell value type found
-[TSTCellFormatAndValue copyWithZone:]
-[TSTCellFormatAndValue numberOrCurrencyDecimalValue]
Getting a non-double value as double from a TSTCellFormatAndValue.
-[TSTCellFormatAndValue hasStringContentMatchingCell:]
no string content comparison implemented for value type %d
-[TSTCellFormatAndValue applyToCell:]
-[TSTCellFormatAndValue objectByRemovingPropertiesInMap:addingPropertiesInMap:updateInverseResetPropertyMap:updateInverseSetPropertyMap:]
shouldn't remove the value and format from a cell
-[TSTCellFormatAndValue initFromPropertyCommandMessage:unarchiver:]
rich text cells should have a rich text payload
-[TSTCellFormatAndValue saveToPropertyCommandMessage:archiver:]
Non-nil string resulted in NULL protobufString: '%@'
-[TSTPivotOwner registerWithCalcEngine:forTableModel:baseOwnerUID:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTPivotOwner.mm
_tableModel
-[TSTPivotOwner linkToCalcEngine:forTableModel:]
-[TSTPivotOwner setPivotSourceHeaderTract:]
pivot source header range expected to span all columns
Columns
Rows
Values
v24@?0@"TSTCell"8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
(blank)
v24@?0@"TSTCell"8@"TSCECellValue"16
-[TSTPivotOwner p_setPivotHeaderCellsResettingPivotHidden:preservingStyles:]
Row group not found
Column group not found
v32@?0r^{TSKUIDStruct=QQ}8@"TSTPivotGroupingColumnOptions"16^B24
-[TSTPivotOwner p_formulaForCellCoord:runningTotalContext:]
Invalid ShowAs Type
-[TSTPivotOwner p_sortRowsInMode:sortDirection:columnIndex:level:aggregateIndex:resetLabels:]_block_invoke
Expected a valid category level for all body rows
-[TSTPivotOwner p_sortColumnsInMode:sortDirection:rowIndex:level:aggregateIndex:resetLabels:]_block_invoke
Expected a valid category level for all body columns
-[TSTPivotOwner p_sortFullTable:]
Full table sort is only appropriate for implicit sort modes.
v16@?0@"TSTPivotGroupingColumnOptionsMap"8
-[TSTPivotOwner evaluateFormulaAt:withCalcEngine:recalcOptions:]
Unexpected formulaCoord seen in TSTPivotOwner: %@
-[TSTHiddenStates copyFromHiddenStates:forRange:withContext:isWholeTableCopy:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTHiddenStates.mm
Failed to hide row during copy.
Failed to hide column during copy.
-[TSTStrokeSidecarIterator initWithStrokeSidecar:region:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTStrokeSidecarIterator.mm
-[TSTStrokeSidecarIterator updateCellData:]
invalid cellID in cellData
cellID %@ should be before cursor cellID %@
-[TSTGroupBy didCreateGroup:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTGroupBy.mm
_deferredGroupByChangeNotifications
-[TSTGroupBy willRemoveGroup:]
-[TSTGroupBy didRemoveGroup:]
-[TSTGroupBy didAddRowUID:toGroup:]
-[TSTGroupBy didRemoveRowUID:fromGroup:]
-[TSTGroupBy startOfGroupingChangesBatch]
-[TSTGroupBy endOfGroupingChangesBatch]
-[TSTGroupBy didChangeGroupByStructure]
-[TSTGroupBy encodeToArchive:archiver:backwardCompat:]
Wasn't expecting this not set
-[TSTGroupBy updateWithDocumentRoot:]
-[TSTGroupBy changeForSettingGroupingColumnList:]
New grouping column list is nil
-[TSTGroupBy mapGroupUidsForChange:]
wrong groupByUid
-[TSTGroupBy _addAggregates:atLevel:]
-[TSTGroupBy _removeAggregates:]
-[TSTGroupBy runChange:withAggregates:]
Uh, we were expecting this to be us
-[TSTGroupBy usesPrePivotAggregateTypesOnly]
Should never see TSCEAggType_Indirect on a columnAggregate
-[TSTGroupBy setAggregateType:forColumnUID:atGroupLevel:]
aggType of (%{public}d) is not a valid aggregate type for an entire column
-[TSTGroupBy findGroupNodeForValue:atLevel:createIfMissing:]
Was expecting to have created a groupNode for this groupValue: %@
-[TSTGroupBy beginDeferringRebuildFormulas]
overflow in beginDeferringRebuildFormulas
-[TSTGroupBy endDeferringRebuildFormulas]
endDeferringRebuildFormulas called without matching beginDeferringRebuildFormulas - avoided underflow
-[TSTGroupBy deferGroupByChangeNotifications]
overflow in deferGroupByChangeNotifications
-[TSTGroupBy resumeGroupByChangeNotifications]
resumeGroupByChangeNotifications called without matching deferGroupByChangeNotifications - avoided underflow
-[TSTGroupBy resetGroupings]
Can't resetGroupings with no calcEngine
-[TSTGroupBy createAggregatorsIfMissingAndAssert:]
No TSTAggregator found for column %@
Couldn't create an aggreator for column: %@
-[TSTGroupBy isValidCategoryRef:]
<Relative Ancestor>
-[TSTGroupBy captureCategoryRefsFromIterator:atLevel:asSpanning:]_block_invoke
formula
-[TSTGroupBy captureCategoryLabelRefsForViewRegion:atLevel:asSpanning:forRows:]_block_invoke
No level for agg function labels!
-[TSTGroupBy prettyStringForCategoryRef:forHostCellRef:namingContext:]
%@::%@
-[TSTGroupBy rowUIDForLookupKey:]
Warning, rowUidLookupList is empty, we're not going to find anything.
blank
(error)
TSTLookupKeyCoord::TSTLookupKeyCoord(TSCEUidLookupKey, TSCEUidLookupKey)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCellUIDLookupList.mm
Can't support a column key larger than %lu
Can't support a row key larger than %lu
TSTCellUIDLookupList::TSTCellUIDLookupList(const TSTCellUIDLookupList &, TSTTableInfo *__strong, TSTPruneBehavior, BOOL (^__strong)(const TSTCellUID &, NSUInteger))
Oh in what case do we need to prune away base cells?
Allowing both summary cells and wildcards makes little sense
Allowing both label cells and wildcards makes little sense
-[TSTCellBorder applyToCell:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCellBorder.mm
currentCellBorder
-[TSTCellBorder objectByRemovingPropertiesInMap:addingPropertiesInMap:updateInverseResetPropertyMap:updateInverseSetPropertyMap:]
shouldn't remove the cell border from a cell
-[TSTStrokeLayerAbstractStack p_strokeLayerEnumeration]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTStrokeLayerStack.m
-[TSTStrokeLayerAbstractStack count]
-[TSTStrokeLayerAbstractStack enumerateStrokesAndCapsInRange:usingBlock:]_block_invoke
should never see portal strokes here
-[TSTStrokeLayerAbstractStack enumerateStrokesAndCapsInRange:usingBlock:]
-[TSTStrokeLayerStack insertClearedStrokeAtRange:]
You can't add non-default strokes to a DefaultsOnly TSTStrokeLayerStack.
-[TSTStrokeLayerStack insertDynamicStroke:strokeOrder:atRange:]
-[TSTStrokeLayerStack insertSpillStroke:atRange:]
You can't add non-default strokes to a Defaults Only TSTStrokeLayerStack.
Fatal Assertion failure: %{public}s %{public}s:%d You can't add non-default strokes to a DefaultsOnly TSTStrokeLayerStack.
-[TSTStrokeLayerStack replaceCustomStrokeLayerWith:]
-[TSTStrokeLayerMergedStack lockForWrite]
-[TSTStrokeExporter p_strokeExportCacheForColumnBefore:columnAfter:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTStrokeExporter.mm
looking for two visible columns around the gridline
-[TSTStrokeExporter p_strokeExportCacheForRowAbove:rowBelow:]
looking for two visible rows around the gridline
-[TSTHiddenStateExtent setupAfterUnarchive]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTHiddenStateExtent.mm
-[TSTHiddenStateExtent addHiddenIndex:viewIndex:forAction:]
Not allowing user-hidden as view only
-[TSTHiddenStateExtent hideAtUid:forAction:]
Can't show/hide at a uuid without a TSTTableTranslator to translate to an index
-[TSTHiddenStateExtent showAtUid:forAction:]
-[TSTHiddenStateExtent loadIndexesFromTable:]
-[TSTHiddenStateExtent hideAtViewIndex:forAction:]
Can't show/hide at an index without a TSTTableTranslator to translate to uuid
-[TSTHiddenStateExtent showAtViewIndex:forAction:]
-[TSTHiddenStateExtent hideAtBaseIndex:forAction:]
-[TSTHiddenStateExtent showAtBaseIndex:forAction:]
-[TSTHiddenStateExtent clearAllFiltered]
Can't clearAllFiltered without a TSTTableTranslator to translate to an index
-[TSTHiddenStateExtent hidingActionForViewIndex:]
-[TSTHiddenStateExtent hidingActionForBaseIndex:]
-[TSTHiddenStateExtent indexOfVisibleAfterIndex:]
Can't use this method without a TSTTableTranslator to provide tableSize
-[TSTHiddenStateExtent indexOfVisibleAfterAndIncludingIndex:]
-[TSTHiddenStateExtent p_registerAllFormulasReturningCoords:]
Expecting at most one filter rule on a pivotTable
Only support PivotSourceFiltered filter for pivotTable
-[TSTHiddenStateExtent p_calculateTopOrBottomThresholdWithCalcEngine:formulaCoord:isTop:keyScale:]
Unexpected key scale found: %d
-[TSTHiddenStateExtent p_createThresholdCellValue:locale:]
Unexpected threshold value type found: %d
-[TSTHiddenStateExtent p_calculateUniqueDistinctIndexWithCalcEngine:formulaCoord:tableModel:rule:]
uniqueKeyToRowIndexes
-[TSTHiddenStateExtent evaluateFormulaAt:withCalcEngine:recalcOptions:]
should have nil _rewrittenFilterSet
Unexpected predicate type found when calculating threshold: %d
Only grandTotal predicates are supported for view indexes, not predType %d
Only expect this on pivot tables, atm.
-[TSTHiddenStateExtent setFilterSet:]
filterset should be in geometric form
@"TSCEFormulaObject"16@?0@"TSCEFormulaObject"8
v24@?0@"TSTEphemeralFilter"8^B16
Fatal Assertion failure: %{public}s %{public}s:%d Corrupt cell memory. Crashing!
UInt16 TSTCellStorageSizePreBNC(TSTCellStoragePreBNC *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCellStorage_Deprecated.mm
Corrupt cell memory. Crashing!
BOOL TSTCellStorageVersionCheckPreBNC(TSTCellStoragePreBNC *)
Can't parse cell storage header version %d as PreBNC!
void TSTV1CellStorageToCell(TSTV1CellStorage *, TSTCell_PreBNC *__strong)
wrong version of the storage used here
Failed to process all storage elements in TSTV1CellStorageToCell! Starting flags:%u Final flags:%u
void TSTV3CellStorageToCell(TSTV3CellStorage *, TSTCell_PreBNC *__strong)
Failed to process all storage elements in TSTV3CellStorageToCell! Starting flags:%u Final flags:%u Starting format flags:%u Final format flags:%u
void TSTCellStorageToCell_PreBNC(TSTCellStoragePreBNC *, TSTCell_PreBNC *__strong)
Failed to process all storage elements in TSTCellStorageToCell! Starting flags:%u Final flags:%u Starting format flags:%u Final format flags:%u
UInt16 p_OffsetForFormatInStoragePreBNC(TSTCellStoragePreBNC *, TSTCellStorageFormatFlagsPreBNC)
Can't get offset for unknown element 0x%02x!
Fatal Assertion failure: %{public}s %{public}s:%d Can't get offset for unknown element 0x%02x!
UInt16 p_OffsetForElementInStorage(TSTCellStoragePreBNC *, TSTCellStorageHeaderFlagsPreBNC)
void p_TSTCellToCellStoragePreBNC(TSTCell *__strong, TSTCellStoragePreBNC *, TSTNineKeyStructPreBNC *)
Failed to process all storage elements in TSTCellToCellStorage! Starting flags:%u Final flags:%u Starting format flags:%u Final format flags:%u
TSTMergeOwnerDetailedLogCat
-[TSTMergeOwner initWithTableModel:ownerUID:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTMergeOwner.mm
valid ownerUID is required
-[TSTMergeOwner mergeIndexesForRange:]
The tableModel must be set on the mergeOwner before this API can be used.
-[TSTMergeOwner isValidMergeRange:]
-[TSTMergeOwner insertBaseMergeRange:]
-[TSTMergeOwner removeBaseMergeRange:]
Unexpectedly not just removing one range
-[TSTMergeOwner performActionReturningInverse:]
Invalid merge action
-[TSTMergeOwner shrinkReturningInverseForBaseCellRegion:]
-[TSTMergeOwner p_growRangeFrom:toDesired:]
-[TSTMergeOwner p_growReturningInverseForAction:]
-[TSTMergeOwner rewriteMergesForRemovedRange:uids:isRows:]
-[TSTMergeOwner rewriteMergesForInsertedRange:uids:isRows:]
<%@: %p>
+[TSTCellSpec interactionTypeForShimControlFormatType:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCellSpec.mm
Unconvertible format type.
+[TSTCellSpec shimControlFormatTypeForInteractionType:]
Unconvertible interaction type.
Stepper
Slider
Star Rating
Pop-Up Menu
Checkbox
TSTCellInteractionTypeValueEditing
TSTCellInteractionTypeFormulaEditing
TSTCellInteractionTypeStock
TSTCellInteractionTypeStepper
TSTCellInteractionTypeRating
TSTCellInteractionTypePopup
TSTCellInteractionTypeToggle
TSTCellInteractionTypeCategorySummary
-[TSTSortRuleReferenceTracker p_columnForTrackedReference:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTSortRuleReferenceTracker.mm
Ranges should be one column!
v24@?0r^{TSCESpanningRangeRef={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}C}8^B16
-[TSTSortRuleReferenceTracker updateForSortRules:]
Couldn't track reference!
-[TSTSortRuleReferenceTracker setOwnerUID:]
You should have called setBaseTableUID: instead (it sets both base and subOwner UIDs
v16@?0@"TSCETrackedReferenceStore"8
TSTLayoutEngineDidChangeEmptyFilteredState
cell id to wp column $
dup $
temp wp column $
layout engine concurrent queue
table fonts and metric cache
<%@:%p "%@" range:%@ dynamic_mode:%@ >
TSTCellRange TSTLayoutEngineGetRangeForHint(TSTLayoutEngine *__strong, TSTLayoutHint *__strong)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTLayoutEngine.mm
layoutHint
-[TSTLayoutEngine numberOfRows]
Size invariants violated by dynamic add/remove
-[TSTLayoutEngine numberOfColumns]
B32@?0{TSUCellRect={TSUCellCoord=ISBB}{?=II}}8^B24
d8@?0
B24@?0@8^B16
void TSTLayoutEngineDynamicResizeSave(TSTLayoutEngine *__strong, BOOL *, TSTCellRange *, CGFloat *, BOOL *, TSTCellRange *, CGFloat *)
layoutEngine
resizingColumns
resizeColumnRange
resizeColumnAdjustment
resizingRows
resizeRowRange
resizeRowAdjustment
void TSTLayoutEngineDynamicResizeRestore(TSTLayoutEngine *__strong, BOOL, TSTCellRange, CGFloat, BOOL, TSTCellRange, CGFloat)
v32@?0@"TSTChangeDescriptor"8Q16^B24
v76@?0{TSUCellRect={TSUCellCoord=ISBB}{?=II}}8d24{UIEdgeInsets=dddd}32B64^B68
-[TSTLayoutEngine p_validateFittingInfoWithCellRangeWorker:widthHeightCollection:containsMerges:validationBundle:]_block_invoke
this layout pass should be only merge cells
v40@?0@"TSWPCharacterStyle"8{_NSRange=QQ}16^B32
-[TSTLayoutEngine p_containsGradientThatFillsContainerInStyle:]
style must be character or paragraph.
@"TSTWidthHeightCollection"24@?0{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}8
v24@?0@"<TSTCellIteratorData>"8@"TSTWidthHeightCollection"16
-[TSTLayoutEngine measureWithLayoutState:]
stringContents
v24@?0@"TSTCellStateForLayout"8^B16
-[TSTLayoutEngine formattedDataParagraphStylePropertyMapForCell:atCellID:]
Trying create a text engine for a merged cell other than origin.
#REF!:#REF!
-[TSTLayoutHint copyForArchiving]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTLayoutHint.mm
copy
-[TSTLayoutHint overlapsWithSelectionPath:]
selectionPath
B16@?0@"TSDDrawableSelection"8
-[TSTLayoutHint overlapsWithSelectionPath:]_block_invoke_2
Invalid cell selection index %lu for %@
B16@?0@"TSTCellSelection"8
ID: %@ 
Range: %@ 
-[TSWPParagraphStyle(CellDiffAdditions) objectByRemovingPropertiesInMap:addingPropertiesInMap:updateInverseResetPropertyMap:updateInverseSetPropertyMap:optionalConcurrentStylesheet:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSWPParagraphStyle+CellDiffAdditions.m
Can't specify both a text style and a text style change at the same time.
Stylesheet should not be nil. Attempting repair.
No usable style or stylesheet to vary against!
v32@?0i8C12@16^B24
-[TSTTablePartitioner initWithInfo:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTablePartitioner.m
Incorrect info class in the table partitioner!
-[TSTTablePartitioner measureCellRangeForNextPartitionOfSize:previousHint:horizontally:]
Partitioner can't continue from an invalid range.
-[TSTTablePartitioner calculateCellRangeForNextPartition:nextPartitionRange:additionalHeightForCaption:availableSizeRemaining:previousHint:]
Partitioner measured an invalid range.
-[TSTTablePartitioner nextHintForSize:parentLayout:previousHint:horizontally:outFinished:]
previousHint must be nil, or of type TSTLayoutHint.
Hint is for the wrong table info.
-[TSTTablePartitioner p_didFinishPartitioningHint:horizontally:]
Horizontal partitioning went beyond the table bounds!
Vertical partitioning went beyond the table bounds!
-[TSTTablePartitioner partitioningPassForFirstPartitionSize:]
partitioningPassForFirstPartitionSize: Invalid partition size
(%@,%@)
Fatal Assertion failure: %{public}s %{public}s:%d Datalist segment range start out of bounds on set
-[TSTTableDataListSegment setKeyRange:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTableDataListSegment.mm
Datalist segment range start out of bounds on set
Fatal Assertion failure: %{public}s %{public}s:%d Datalist segment range length out of bounds on set!
Datalist segment range length out of bounds on set!
Fatal Assertion failure: %{public}s %{public}s:%d New segment is empty during split!
-[TSTTableDataListSegment split]
New segment is empty during split!
Fatal Assertion failure: %{public}s %{public}s:%d Keys overlap during split!
Keys overlap during split!
Fatal Assertion failure: %{public}s %{public}s:%d Segment ranges are discontiguous!
Segment ranges are discontiguous!
Fatal Assertion failure: %{public}s %{public}s:%d Existing datalist segment range start out of bounds on split!
Existing datalist segment range start out of bounds on split!
Fatal Assertion failure: %{public}s %{public}s:%d Existing datalist segment range length out of bounds on split!
Existing datalist segment range length out of bounds on split!
Fatal Assertion failure: %{public}s %{public}s:%d New datalist segment range start out of bounds on split!
New datalist segment range start out of bounds on split!
Fatal Assertion failure: %{public}s %{public}s:%d New datalist segment range length out of bounds on split!
New datalist segment range length out of bounds on split!
Fatal Assertion failure: %{public}s %{public}s:%d Got an object with a bad key!
-[TSTTableDataListSegment objectAtIndexedSubscript:]
Got an object with a bad key!
Tables/DataList/Segment
v16@?0@"TSTTableDataObject"8
-[TSTTableDataListSegment saveToArchiver:]
Datalist segment range out of bounds on archive!
-[TSTTableDataListSegment loadObjectsFromDataListArchive:unarchiver:]
Need to set up a segment before doing an upgrade-type load of it!
-[TSTConcurrentCellIterator initWithTableInfo:tableModel:region:forcingRegion:clampingRect:flags:searchFlags:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTConcurrentCellIterator.mm
XOR expectation on getting a tableInfo or tableModel.
-[TSTConcurrentCellIterator enumerateModelConcurrentlyUsingChunkBeginBlock:concurrentBlock:finalBlock:]
You must initialize the iterator with a TSTTableModel to use this enumeration method.
@24@?0{TSUCellRect={TSUCellCoord=ISBB}{?=II}}8
-[TSTConcurrentCellIterator enumerateConcurrentlyUsingChunkBeginBlock:perDispatchThreadBlock:concurrentBlock:finalBlock:]
You may not initialize this iterator with a TSTTableModel to use this enumeration method.
v40@?0{TSUCellRect={TSUCellCoord=ISBB}{?=II}}8@24Q32
-[TSTMergeAction verify]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTMergeAction.mm
%@ has %lu covering ranges and %lu formulas with %lu indexes
Invalid action
Insert action
Remove action
Shrink action
Grow action
-[TSTCellUIDIterator p_nextCellRefIdWithUIDIndexList:UIDs:index:remainDup:lastDiffPos:recentResults:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCellUIDList.mm
Unexpected back reference value.
Unexpected ID reference value.
-[TSTTableTileGroup init]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTableTileGroup.mm
-[TSTTableTileGroup _tileForLazyReference:]
Fatal Assertion failure: %{public}s %{public}s:%d Failed to load a lazy table tile in TSTTableTileGroup: %@ with error: errorClass=%{public}@, domain=%{public}@, code=%zd, %{public}@hints=%{public}@ (%@) 
Failed to load a lazy table tile in TSTTableTileGroup: %@ with error: errorClass=%{public}@, domain=%{public}@, code=%zd, %{public}@hints=%{public}@ (%@) 
Fatal Assertion failure: %{public}s %{public}s:%d Tile ID too low for this group!
NSUInteger _indexForTileID(TSTTableTileID, TSTTableTileID)
Tile ID too low for this group!
Fatal Assertion failure: %{public}s %{public}s:%d Tile ID too high for this group!
Tile ID too high for this group!
-[TSTMergeRegionMap saveToArchiver:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTMergeRegionMap.mm
this should never be called!
%@, %p: for PivotTable: %@
-[TSTPencilAnnotationOwner addAnnotation:withFormula:atIndex:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTPencilAnnotationOwner.mm
Adding a formula at an index that already has an annotation
-[TSTPencilAnnotationOwner addAnnotation:withFormulaObject:atIndex:]
-[TSTPencilAnnotationOwner removeAnnotation:]
Annotations and formulas out of sync!
v32@?0@"TSTPencilAnnotation"8Q16^B24
Fatal Assertion failure: %{public}s %{public}s:%d Attempting to remove annotation at bad index %tu!
-[TSTPencilAnnotationOwner removeAnnotationAtIndex:]
Attempting to remove annotation at bad index %tu!
-[TSTPencilAnnotationOwner cellRangeForAnnotation:]
Unexpected merge range!
-[TSTPencilAnnotationOwner enumerateAnnotationsWithBlock:]
-[TSTPencilAnnotationOwner enumerateAnnotationsWithBlock:]_block_invoke
Unexpected table info on this annotation.
-[TSTPencilAnnotationOwner _enumerateAnnotationsAndFormulasWithIndexes:block:]_block_invoke
-[TSTPencilAnnotationOwner _annotationsForIndexes:]_block_invoke
annotation
-[TSTPencilAnnotationOwner _indexesForRange:startingOnly:]
self.tableModel
self.calculationEngine
-[TSTPencilAnnotationOwner _indexesForRows:]
-[TSTPencilAnnotationOwner _indexesForRows:]_block_invoke
How do we have a zero-row range here?
-[TSTPencilAnnotationOwner _enumerateIndexesIntersectingRegion:block:]
v48@?0@"TSTCellRegion"8r^{TSUCellCoord=ISBB}16Q24{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}32
-[TSTPencilAnnotationOwner initWithArchive:unarchiver:forTableModel:]
Mismatched number of annotations and formulas.
TSKCellPencilAnnotations
TSTPivotGroupingColumnOptionsMap %p
uid:%@, sortByGrTotal:%@, sortDesc:%@, repeatLbls:%@, hideTtls:%@, sortAggRuleUid:%@
v32@?0{TSUCellCoord=ISBB}8d16^B24
v28@?0S8d12^B20
-[TSTWidthHeightCache p_insertColumns:atColumn:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTWidthHeightCache.mm
attempt to insert column range beyond column width cache max columns; truncating
-[TSTWidthHeightCache p_insertRows:atRow:]
attempt to insert row range beyond row height cache max rows; truncating
-[TSTWidthHeightCache p_moveRowsFrom:toRow:]
destination cannot be within the source range.
src range for move exceeds max
dest range for move exceeds max
-[TSTWidthHeightCache p_moveColumnsFrom:toColumn:]
_columnModelWidths is not sized correctly before move
v16@?0I8I12
-[TSTWidthHeightCache resetFittingRowHeightsStartingWith:upToRow:]
startRow should be before endRow
-[TSTWidthHeightCache validateRowsNeedingFittingInfo:validationRegion:layoutEngine:]
rowsNeedingFittingInfo
-[TSTTableSortOrder initWithRules:type:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTableSortOrder.mm
sortRules
B24@?0@"TSTTableSortRule"8@"NSDictionary"16
-[TSTConcurrentMutableCellUIDSet reapAccumulatedCellRegionWithTable:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTConcurrentMutableCellUIDSet.mm
Search not found: %{public}@
-[TSTCellStateForLayout hasContent]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCellStateForLayout.m
expected nil value for '%{public}s'
TSUCastAsClass(TSWPColumn, [self cellContents])
v16@?0@"TSTExpressionNode"8
<%@ %p>: isActive:%@, expressionNode:%@
B16@?0r^{TSKUIDStruct=QQ}8
Fatal Assertion failure: %{public}s %{public}s:%d Not implemented.
-[TSTPivotRowColumnOrder targetGroupFromIndex:minSourceLevel:templateUID:forDimension:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTPivotRowColumnOrder.mm
Not implemented.
Fatal Assertion failure: %{public}s %{public}s:%d Not implemented for columns.
-[TSTPivotRowColumnOrder minimumCategoryLevelInRange:forDimension:]
Not implemented for columns.
<%@ %p>: completionText '%@', prefixRange %@
-[TSTStrokeLayer strokeLayerAtIndex:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTStrokeLayer.mm
should never call this with index > 0
-[TSTMutableStrokeLayer applyStroke:atIndexes:order:applyStroke:atIndexes:order:applyStroke:atIndexes:order:applyStroke:atIndexes:order:applyStroke:atIndexes:order:]
this interface can't be used on complex stroke layers
bodyIndexes
-[TSTConcurrentStylesheet variationOfStyle:propertyMap:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTConcurrentStylesheet.mm
stylesheet used should be same as the one owning the style
All at Once
By Row
By Column
By Cell
By Row Content
By Column Content
By Cell Content
By Row Reverse
By Row Content Reverse
By Column Reverse
By Column Content Reverse
By Cell Reverse
By Cell Content Reverse
+[TSTAnimation textureDeliveryStyleFromDeliveryString:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTAnimation.mm
bad delivery string to delivery style mapping
v32@?0r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}8r^{TSKUIDStruct=QQ}16^B24
void TSTHeaderPerTable::addHeaderUid(const TSKUIDStruct &, BOOL)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTHeaderNameMgr.mm
_headerRowUids
-[TSTHeaderNameMgrTile saveToArchiver:]
_headerNameMgr
-[TSTHeaderNameSubset headerCellsMatchingPrefix:]
Warning: asking for prefix matching, but this search result didn't specify prefixes when it was created
%@ for '%@'
com.apple.Numbers.TST.HeaderNameMgr
v24@?0r^{TSUCellCoord=ISBB}8^B16
-[TSTHeaderNameMgr findTileForString:findClosest:foundAtOffset:]
midTile
-[TSTHeaderNameMgr handleFullTile:]
Could NOT split tile of %lu size for some reason
-[TSTHeaderNameMgr spanningRangeForHeaderCell:]
tracked header reference is not in a header?  (%@ vs body %@)
@"TSTIndexingChunk"24@?0{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}8
v24@?0@"<TSTCellIteratorData>"8@"TSTIndexingChunk"16
v24@?0@"NSString"8^B16
-[TSTCellDiffMap initWithContext:cellDiffArray:cellUIDList:uidBased:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCellDiffMap.mm
Nil cellDiffArray
Nil cellUIDList
unexpected diff/uidlist ratio
-[TSTCellDiffMap addCellDiff:andCellUID:avoidCopy:]
cannot add cellUIDs in cellID mode
can't add cells to a one-to-many mapping
-[TSTCellDiffMap addCellDiff:andCellID:avoidCopy:]
cannot add cellIDs in UID mode
-[TSTCellDiffMap addCellDiffMap:]
both maps should match isUIDBased state
-[TSTCellDiffMap addCellDiffs:atCellUIDs:]
map should be UIDBased
cellDiffs and cellUIDList should match in length
-[TSTCellDiffMap appendCellDiffMap:]
Trying to append a cellID cellDiffMap to a uidBased diff map. Aborting.
v64@?0@"TSTCellDiff"8{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16Q48^B56
Trying to append a uidBased cellDiffMap to a cellID diff map. Aborting.
v40@?0@"TSTCellDiff"8{TSUCellCoord=ISBB}16Q24^B32
B24@?0r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}8Q16
B24@?0{TSKUIDStruct=QQ}8
-[TSTCellDiffMap enumerateElementsUsingBlock:]
cannot enumerate cellUIDs in cellID mode
-[TSTCellDiffMap enumerateCellIDElementsUsingBlock:]
cannot enumerate cellIDs in UID mode
v16@?0@"TSTCellDiffArray"8
-[TSTTableViewSortRule baseIndex]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTableSortRule.mm
Base index is not valid on TSTTableViewSortRule.
-[TSTTableViewSortRule encodeToArchive:]
TSTTableViewColumnSortRule should never be archived
-[TSTTableViewSortRule initFromArchive:]
TSTTableViewColumnSortRule should never be unarchived
-[TSTGroupValueTuple updateWithDocumentRoot:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTGroupValueTuple.mm
+[TSTGroupValueTuple groupValueUidForTuple:appendingTuple:]
upperTuple
lowerTuple
-[TSTGroupValueTuple groupValueTupleByReplacingValue:atLevel:]
Don't try to replace value for the root
%{public}@: level %d is beyond this tuple's size
-[TSTGroupValueTuple groupValueTupleByRemovingValueAtLevel:]
Removing from level %d of a %d-level tuple
%@ [
%@, 
TSTiOSCheckboxChecked6
TSTiOSCheckboxChecked12
TSTiOSCheckboxChecked18
TSTiOSCheckboxChecked24
TSTiOSCheckboxUnchecked6
TSTiOSCheckboxUnchecked12
TSTiOSCheckboxUnchecked18
TSTiOSCheckboxUnchecked24
+[TSTCheckboxRenderer frameWithViewScale:contentFrame:checked:outCheckboxImage:outCheckboxSize:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCheckboxRenderer.m
No checkbox image for rendering!
string
width
height
vertical
direction
wraps
paragraphStyle
v28@?0I8d12^B20
-[TSTColumnRowUIDMapper disconnect]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTColumnRowUIDMapper.mm
No longer have a mapper - disconnected multiple times?
Mappers version counter was already off %lu vs %lu
Should have preserved the versionCounter
-[TSTCategoryStoreIterator initWithInfo:region:flags:searchMask:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCategoryStoreIterator.mm
_info.baseTableModel.dataStore
_info.summaryModel.dataStore
searchMask remain 0x%x, should be consumed by this point
-[TSTCategoryStoreIterator dealloc]
iteration should be terminated
-[TSTCategoryStoreIterator updateCellData:]
_baseTile
_baseRow
incomplete map.
cellRef
this is odd case, iterator found cell at this cellID, but then no cellRef
-[TSTCategoryStoreIterator updateFormulaForCellData:]
this is an odd case, iterator found cell at this cellID, but then no cellRef
-[TSTCategoryStoreIterator getNext]
invalid columnUID
should now have a row that intersects the region
couldn't find offset, that's not good.
should now have a valid cellID at this point
-[TSWPStorage(TablesAdditions) hyperlinkCellID]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSWPStorage_TablesAdditions.mm
cell attribute array should not be empty
-[TSTCategoryAggregateFormulaOwner tableInfo]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCategoryAggregateFormulaOwner.mm
Someone is asking for a tableInfo, but we are not registered with the calcEngine yet
Table %@ is not registered with the calcEngine yet
-[TSTCategoryAggregateFormulaOwner setTableInfo:]
don't allow overwriting table info pointer, should go from nil -> info
Wrong class passed to setTableInfo: %@
-[TSTCategoryAggregateFormulaOwner evaluateFormulaAt:withCalcEngine:recalcOptions:]
Table has no calc engine. Aborting recalculation.
-[TSTRichTextPayload initWithContext:storage:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTRichTextPayload.mm
-[TSTSummaryCellVendor setAggregateType:forColumnUID:atGroupLevel:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTSummaryCellVendor.mm
Not implemented for pivot tables.
-[TSTSummaryCellVendor cellSpecForAggregateType:forColumnUID:atGroupLevel:]
-[TSTSummaryCellVendor setCell:atCellUID:]
Setting vendor cell for a pivot table
Setting vendor cell with an invalid cellUID
Invalid aggregate type in summary cell vendor - BodyRows
Invalid aggregate type in summary cell vendor - Indirect
Invalid aggregate type in summary cell vendor - Label
-[TSTSummaryCellVendor getCell:atCellUID:]
Getting vendor cell for a pivot table
cell should never be nil
Getting vendor cell with an invalid cellUID
-[TSTSummaryCellVendor removeCellsInColumnUid:]
-[TSTSummaryCellVendor cellMapForWildcardCells]
-[TSTSummaryCellVendor runChange:withSummaryCellMap:migrationHelper:]
+[TSTTableFilterRule getPredArgDataFromCell:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTableFilterRule.mm
Expected a cell without an error to make a quick filter rule.
TSTTableFilterRule %p: %@
-[TSTTableFilterRule matchesCell:]
Unexpected predicate argument type!
-[TSTTableFilterSet p_downgradedFilterRuleForListItem:fromPredicate:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTableFilterSet.mm
Don't have a TSTFormulaPredicateTypeDateIsNotTheDate predicate type, but need one.
Invalid Predicate Arg Data for list item
-[TSTTableFilterSet downgradeFilterSetForBackwardCompatWithLocale:]
newRule
Unexpected predicate type during downgrade!
-[TSTTableFilterSet p_thresholdComparisonMatchesFilter:withPredicateType:]
Unexpected predicate type found when calculating threshold
-[TSTTableFilterSet rowIsShown:withHiddenStateExtent:withCalcEngine:]
Unexpected threshold value type found
-[TSTTableFilterSet ruleInFilter:atIndex:]
filter index invalid
rule index invalid
-[TSTTableFilterSet filterAtIndex:inTable:]
-[TSTTableFilterSet removeRulesWithAbsoluteIndices:]
invalid rule index passed in
-[TSTTableFilterSet removeRulesWithIndices:inFilter:]
filter index is out of bounds
rule indices are out of bounds
-[TSTTableFilterSet p_addRules:atRuleIndices:inFilter:isNew:]
no rules given
-[TSTTableFilterSet addRules:inFilter:]
-[TSTTableFilterSet replaceRule:atRuleIndex:inFilter:]
-[TSTTableFilterSet enumerateRulesInFilterIndex:usingBlock:]
-[TSTTableFilterSet ruleIndexInFilter:matchingCell:]
-[TSTTableFilterSet numberOfRulesInFilter:]
Fatal Assertion failure: %{public}s %{public}s:%d Modern filter sets shouldn't have pre-pivot rules!
-[TSTTableFilterSet loadFromArchive:unarchiver:]
Modern filter sets shouldn't have pre-pivot rules!
-[TSTFormulaPredicate initWithPredicateType:arg1:arg2:qualifier1:qualifier2:argumentCellRef:hostCell:forConditionalStyle:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTFormulaPredicate.mm
Conditional styles are not allowed to use anything other than an arg0 of (+0,+0) relative coordinate
-[TSTFormulaPredicate p_creatorForPeriodBoundaryWithScale:direction:offset:argIndex:earlierBound:isCalPers:]
Not a valid date scale
This is expected to be unreachable.
-[TSTFormulaPredicate recreateFormula]
Should already have _predArg0 defined
-[TSTFormulaPredicate p_argTypeForPredArg:argNum:calculationEngine:hostCell:]
A categoryRef as arg 0, I don't think so
A viewTractRef as arg 0, I don't think so
-[TSTFormulaPredicate evaluateAtCellID:onOwnerUID:calcEngine:]
Need both of these set
-[TSTFormulaPredicate setArgumentAt:withPredArg:]
Only a limited set of types are allowed for predArg0, and not %d
%@: Not allowed for argument at position %d
-[TSTFormulaPredicate p_populateMembersFromFormula]
We don't have valid offsets at the moment
-[TSTFormulaPredicate copyByRewritingWithSpec:inOwner:inCellCoordinate:]
Not implemented yet for this type
-[TSTFormulaPredicate upgradeTopAndBottom]
_predArg0
-[TSTFormulaPredicate encodeToPrePivotArchive:archiver:encodingForSOS:]
We need to be backward compatible to use this archiving method
-[TSTFormulaPredicate initFromArchive:]
Have to have archived the _predArg0 argument for upgraded archive format
-[TSTArchivedStrokeSelection setSelection:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTArchivedStrokeSelection.mm
Wrong type of class %@ (expected TSTStrokeSelection)
TSTTableBadgeImageCache
TSUImage *TSTTableBadgeCachedImageForName(NSString *__strong)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTableBadge.m
TSTTableBadge failed to load image %@
void TSTTableBadgeContentsCenterInfoInit(TSTTableBadgeContentsCenterInfo *, CGFloat, CGFloat, CGFloat, CGFloat, CGFloat, CGFloat)
info
TSTErrorMessageIcon
-[TSTCellRegion regionByTrimmingAroundRowIndices:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCellRegion.mm
-[TSTCellRegion regionByTrimmingAroundColumnIndices:]_block_invoke
-[TSTCellRegion prunedCellRegionAgainstTable:behavior:usingBlock:]
-[TSTCellRegion containsCellRange:]_block_invoke
areaRemaining should be greater than the intersection area
-[TSTCellRegion p_copyFromRegion:]
-[TSTCellRegion p_insertRangeIntoRegion:]
Added range:%{public}@ should never overlap previous range:%{public}@ in region:%{public}@.
<%@ %p boundingbox={ %@ }
 cellRanges={empty}>
 cellRanges={
  { %@ }
-[TSTTableTranslator init]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTableTranslator.mm
-[TSTTableTranslator tableAreaForCellID:]
expecting this method to be overridden
-[TSTTableTranslator cellValueTypeAtCellID:]
-[TSTTableTranslator defaultCellStyleForCellID:useSoftDefault:outSource:]
-[TSTTableTranslator defaultTextStyleForCellID:useSoftDefault:outSource:]
-[TSTTableTranslator cellStyleAtCellID:isDefault:]
-[TSTTableTranslator textStyleAtCellID:isDefault:]
-[TSTTableTranslator conditionalStyleSetAtCellID:]
-[TSTTableTranslator stringAtCellID:optionalCell:]
-[TSTTableTranslator getCell:atCellID:suppressCellBorder:]
-[TSTTableTranslator hasFormulaAtCellID:]
-[TSTTableTranslator formulaAtCellID:]
-[TSTTableTranslator postCommentNotificationForStorage:atViewCellCoord:notificationKey:]
-[TSTTableTranslator commentHostingAtCellID:forCommentStorage:]
-[TSTTableTranslator commentHostingAtCellID:]
-[TSTTableTranslator mergeRangeAtCellID:]
-[TSTTableTranslator mergeOriginForCellID:]
{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}24@?0{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}8
-[TSTTableTranslator cellUIDForSummaryCellCoord:]
no summeries in normal table mode
-[TSTTableTranslator cellExistsAtCellID:]
-[TSTTableTranslator hasCommentAtCellID:]
requires identity mapping from view to model space
-[TSTTableTranslator resetViewMap]
view and base must be the same while uncategorized.
-[TSTIdentifierNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTIdentifierNode.mm
Unexpected object in initAsCopyOf:... expected TSTIdentifierNode, got %@
-[TSTIdentifierNode buildASTNodeArray:hostCell:symbolTable:]
IdentifierNode shouldn't have any children
<%@:%p size %f count %u hiding 0x%02hx cstyle %p tstyle %p
-[TSTConditionalStyleRule setCellStyle:textStyle:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTConditionalStyleRule.mm
Can't replace styles!
TSTConditionalStyleRule %p: %@ => %@, %@
CS Predicate: %@
-[TSTConditionalStyleSet copyToGeometricFormWithRewriteContext:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTConditionalStyleSet.mm
Trying to rewrite a conditional style with a non-conditionalStyleFormulaOwner containing ownerUID: %@
-[TSTConditionalStyleSet copyByRepairingBadReferences:]
<%@: %p>: Rules:
CS Rules: 
-[TSTConditionalStyleFormulaOwner initWithTableModel:ownerUID:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTConditionalStyleFormulaOwner.mm
TSTConditionalStyleFormulaOwner: requires a valid ownerUID, table is: %@ (%@)
Equals
Is not equal
Greater than
Greater than or equals
Less than
Less than or equals
Between
Starts with
Ends with
Does not start with
Does not end with
Contains
Does not contain
Text Is
Text Is Not
static TSCECellRef TSTConvertFormulasToBaseForCategoriesRewriter::convertedContainingCellRefForColonTractRewrites(TSCEFormulaRewriteContext &, TSTFormulaCoordinateSpace, TSTFormulaRewriteSpec *__strong)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTConvertFormulasFromBaseForCategoriesRewriter.mm
convertedContainingCellRefForColonTractRewrites: No coordMapper found for tableUID: %@
virtual TSCEASTElement *TSTConvertFormulasToBaseForCategoriesRewriter::colonTractNode(TSCEASTColonTractElement *)
How did this happen? refTableUID is invalid in TSTConvertFormulasFromChromeToBaseForCategoriesRewriter::colonTractNode
srcCoordMapper
Fatal Assertion failure: %{public}s %{public}s:%d at the moment we don't handle this well
-[TSTCategoryOrder targetGroupFromRowIndex:minSourceLevel:templateRowUID:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCategoryOrder.mm
at the moment we don't handle this well
 blank
 error
%@ %c %@
TSURowIndex TSTUidOrderNode::firstIndex()
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTUidOrderNode.mm
Sorting category/pivot order: Never should a group be empty
void TSTUidOrderNode::_orderUsingGroupByAndMaps(TSTGroupBy *__strong, BOOL, int, int, TSTColumnRowUIDMap *__strong, TSTColumnRowUIDMap *__strong, BOOL)
Too many number of levels for this order algorithm.
Level mismatch between the groupBy and the order node tree
+[TSTGroupBy(ChangeGroups) groupingComboForGroupingType:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTGroupBy_ChangeGroups.mm
This grouping type isn't supported in this release
+[TSTGroupBy(ChangeGroups) p_dateBySettingUnit:value:ofDate:inCalendar:]
Continued looping trying to set date %@ to week number %lu
v24@?0r^{TSTGroupingLevelAndType=SC}8^B16
-[TSTTableInfo(Reorganize) p_mappingForSortingRowsOrColumns:withRules:dimension:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTableInfo_Reorganize.mm
Can't sort by an empty rule list!
q24@?0@"TSTTableSortTag"8@"TSTTableSortTag"16
Index out of range!
-[TSTTableInfo(Reorganize) sortTagsForSortingColumns:byRows:]_block_invoke
reorganizeValue
v32@?0@"TSTTableSortTag"8Q16^B24
-[TSTTableInfo(Reorganize) sortTagsForSortingRows:byColumns:]_block_invoke
-[TSTTableInfo(Reorganize) mappingFromRowUids:toRowUids:]
From index out of range!
-[TSTCategoryTranslator maxVisibleRowLevel]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCategoryTranslator.mm
Unimplemented!
-[TSTCategoryTranslator startOfGroupingChangesBatch]
overflow in _groupingsChangingLevel
-[TSTCategoryTranslator endOfGroupingChangesBatch]
endOfGroupingChangesBatch called without matching startOfGroupingChangesBatch - avoided underflow
-[TSTCategoryTranslator resetViewMap]
view and base cannot be the same while categorized
-[TSTCategoryTranslator suspendChangeDescriptorNotificationsDuringBlock:]
not expecting multiple suspensions
+[TSTCategoryTranslator tableStyleAreaForCategoryLevel:isLabel:]
Calling tableStyleAreaForCategoryLevel with an invalid level
Category Column
i28@?0r^{TSUModelCellCoord={TSUCellCoord=ISBB}}8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16C24
i20@?0C8r^{TSKUIDStruct=QQ}12
i12@?0{TSUViewRowIndex=I}8
-[TSTCategoryTranslator setCellStyle:ofRowAtIndex:]
Categories: cannot set cell style for that row
-[TSTCategoryTranslator setTextStyle:ofRowAtIndex:]
Categories: cannot set text style for that row
-[TSTCategoryTranslator setCellStyle:ofColumnAtIndex:]
Categories: setting cell style on unknown column
-[TSTCategoryTranslator setTextStyle:ofColumnAtIndex:]
Categories: setting text style on unknown column
v18@?0{TSUModelColumnIndex=S}8r^{TSKUIDStruct=QQ}10
-[TSTCategoryTranslator conditionalStyleSetAtCellID:]
Categories: cannot get conditional style for that cell
-[TSTCategoryTranslator regionForValueOrCommentCellsInRange:]
Categories: cannot resolve region for cell rect
-[TSTCategoryTranslator p_applyViewCellCoord:toSummaryUsingBlock:toLabelUsingBlock:toCategoryColumnUsingBlock:toBaseUsingBlock:]
summary row does not have a valid summary row uid
-[TSTCategoryTranslator p_applyViewColumnIndex:toCategoryColumnUsingBlock:toBaseUsingBlock:toBeyondBoundsUsingBlock:]
Categories: this column is not is not in the base table
-[TSTCategoryTranslator heightOfRowAtIndex:isDefault:]
uid must be label or summary
-[TSTCategoryTranslator rowHeights]
Categories: cannot get row heights.
-[TSTCategoryTranslator columnWidths]
Categories: cannot get column widths.
-[TSTCategoryTranslator setHeight:ofRowAtIndex:]
Categories: cannot set height of this row
-[TSTCategoryTranslator setWidth:ofColumnAtIndex:]
Categories: cannot set width of this column
-[TSTCategoryTranslator removeRowsAtIndex:count:]
Categories: row removal method is not supported.
-[TSTCategoryTranslator removeColumnsAtIndex:count:]
Categories: column removal method is not supported.
-[TSTCategoryTranslator postCommentNotificationForStorage:atViewCellCoord:notificationKey:]
Categories: cannot post notification for comment/cell/key
-[TSTCategoryTranslator commentHostingAtCellID:forCommentStorage:]
Categories: cannot resolve comment for cell/storage
-[TSTCategoryTranslator commentHostingAtCellID:]
Categories: cannot resolve comment for cell
-[TSTCategoryTranslator moveColumnRange:toColumnIndex:]
Categories: could not move column
-[TSTCategoryTranslator cellIDForCellContainingRichTextStorage:]
Categories: cannot resolve cell for this rich text storage
-[TSTCategoryTranslator mergeCellRange:]
attempting to merge a disjoint cell region
-[TSTCategoryTranslator mergeRangeAtCellID:]
found a disjoint merge range
-[TSTCategoryTranslator mergedGridIndicesForDimension:]
should not be any merged row grid indexes in the body range
-[TSTCategoryTranslator enumerateMergesIntersectingCellRegion:usingBlock:]_block_invoke
Unexpected view source merge region for categorized table: %@
-[TSTCategoryTranslator mergeRangesIntersectingRange:]_block_invoke
-[TSTCategoryTranslator mergeRangesIntersectingCellRegion:]_block_invoke
-[TSTCategoryTranslator mergeRangesAndCrumbsIntersectingRange:]_block_invoke_2
-[TSTCategoryTranslator insertColumnsAtIndex:uids:metadatas:tableArea:]
Categories: destination column is not in the header
Categories: table area should be body
-[TSTCategoryTranslator insertRowsAtIndex:uids:metadatas:tableArea:unsetFilterHidingAction:]
Categories: destination row is not in the actual header
Categories: destination row is not in the footer
No rows match the filter conditions.
@8@?0
v32@?0{_NSRange=QQ}8@24
BOOL TSTCellCoerceCellToFormat(TSTCell *__strong, TSUFormatType)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCell_CoercionEngine.mm
Illegal format type for coercion: %{public}@
Attempting to coerce a cell with mismatched format and value types
BOOL TSTCellCoerceEmptyCellToFormat(TSTCell *__strong, TSUFormatType)
Cannot coerce to %@
BOOL TSTCellCoerceTextCellToNumberFormatWithSeparatorFixing(TSTCell *__strong, TSUFormatType)
Need to have a locale set here.
BOOL TSTCellcoerceTextCellToBestNumberFormatUsingLimitedParsing(TSTCell *__strong, BOOL, BOOL)
unexpected format type
-[TSTCell(Coercion) replaceContentWithParsableString:tableInfo:cellID:flags:outControlWasRemoved:]
Cell must have its locale set in replaceContentWithParsableString:
-[TSTCellStyle(CellDiffAdditions) objectByRemovingPropertiesInMap:addingPropertiesInMap:updateInverseResetPropertyMap:updateInverseSetPropertyMap:optionalConcurrentStylesheet:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCellStyle+CellDiffAdditions.m
Can't specify both a cell style and a cell style change at the same time.
-[TSTDataStoreIterator initWithModel:region:flags:searchMask:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTDataStoreIterator.mm
_dataStore
cannot specify both walk right to left and walk bottom to top
-[TSTDataStoreIterator updateCellData:]
_curTile
_curRow
-[TSTDataStoreIterator updateFormulaForCellData:]
-[TSTDataStoreIterator getNext]
-[TSTArchivedTableNameSelection setSelection:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTArchivedTableNameSelection.mm
Wrong type of class %@ (expected TSTTableNameSelection)
com.apple.iWork.TSTPerformance
General
-[TSTGroupingColumn setFunctorForType]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTGroupingColumn.mm
should not attempt to use an invalid grouping type
-[TSTGroupingColumn p_groupingFormatWithLocale:]
yyyy
LLLL yyyy
EEEE
M/d/yyyy
yyyy'-W'w
yyyy-QQQ
LLLL
Value
Year
Year-Month
Day of Week
Year-Month-Day
Year-Week
Year-Quarter
Month
Quarter
-[TSTConvertFormulasForCategoriesByRewritingWrapper initWithCalcEngine:rewriteSpec:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTConvertFormulasForCategoriesByRewritingWrapper.mm
Why are we even being created for a non-move rewriteSpec: %d
-[TSTConvertFormulasForCategoriesByRewritingWrapper convertFromBaseToChromeForCategorizedTableMove:containingCell:]
srcColumnUids
srcRowUids
dstColumnUids
dstRowUids
-[TSTConvertFormulasForCategoriesByRewritingWrapper convertFromChromeToBaseForCategorizedTableMove:containingCell:]
-[TSTPivotStoreIterator initWithInfo:region:flags:searchMask:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTPivotStoreIterator.mm
info.baseTableModel.dataStore
info.summaryModel.dataStore
-[TSTPivotStoreIterator updateCellData:]
_summaryRow
-[TSTPivotStoreIterator updateFormulaForCellData:]
-[TSTPivotStoreIterator getNext]
Unexpected cell coordinate while iterating.
-[TSTTableModel(FormulaOwner) registerWithCalcEngineForDocumentLoad:ownerKind:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTable_FormulaOwner.mm
-[TSTTableModel(FormulaOwner) registerWithCalcEngineForDocumentLoad:ownerKind:]_block_invoke
can't translate a non-formula cell
-[TSTTableModel(FormulaOwner) performReadForOneOffFormulaEvaluation:forCellCoord:]
Evaluating non-formula cell.
-[TSTTableModel(FormulaOwner) evaluateFormulaAt:withCalcEngine:recalcOptions:]
Table model has no calc engine. Aborting recalculation.
Inconsistent calcEngines
Cell %@::%@ said hasFormula=YES, but had no formula in it
TSTTable_FormulaOwner evaluateFormulaAt
 %C 
-[TSTTableModel(FormulaOwner) writeResultsForCalcEngine:]
expect calc engines to be the same
v24@?0r^{TSCEInternalCellReference={TSUCellCoord=ISBB}SS}8^B16
-[TSTTableModel(FormulaOwner) invalidateForCalcEngine:]
TSTStrokeAssociatedObject
virtual TSCEValue TSTTableResolver::valueForCellCoord(const TSUCellCoord &, BOOL) const
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTableResolver.mm
something went wrong fetching data from the table.
virtual TSCEValue TSTTableResolver::scalarValue(TSCEEvalRef *__strong _Nonnull, const TSCEOwnerUID &, const TSUCellCoord &, BOOL, BOOL) const
Invalid table pointer in a reference to be resolved. Returning a bogus value. Please file a bug.
virtual TSCEHidingAction TSTTableResolver::getHidingAction(TSCEEvalRef *__strong _Nonnull, BOOL) const
can't get hiding action of a range
virtual TSCEValueGrid *TSTTableResolver::valuesForViewTractRef(TSCEViewTractRef *__strong _Nonnull, TSCEHidingAction, TSCEError * _Nonnull __autoreleasing * _Nullable, TSCECellRefSet * _Nonnull) const
Need a tableUID set to use this interface
Need to implement group level restrictions for categorized tables
virtual TSCEValueGrid *TSTTableResolver::valuesForViewTractRef(TSCEViewTractRef *__strong _Nonnull, TSCEHidingAction, TSCEError * _Nonnull __autoreleasing * _Nullable, TSCECellRefSet * _Nonnull) const_block_invoke_2
%@: Should have had all precedents already, but missing: %@
v32@?0r^{TSCEGridCoord=II}8r^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16^B24
v40@?0Q8@"NSString"16r^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}24^B32
virtual TSCECellTractRef *TSTTableResolver::cellTractRefForViewTractRef(TSCEViewTractRef *__strong _Nonnull)
The error in the cell was removed.
The formula was updated because it refers to a table that was transposed.
The formula was updated because it refers to a table that was transposed. You may need to make additional changes.
The formula refers to a table that was transposed. You may want to review it.
The formula was replaced with its last calculated value.
The function %@ might have produced a different result than in Excel. The formula was replaced by a formula that will give the same result.
 Original formula: %@
The following conditional highlighting rules are not supported and were removed: Equal or Above Average, Equal or Below Average.
Conditional highlighting rules using standard deviation are not supported and were removed.
Conditional highlighting rules using formulas are not supported and were removed.
The following conditional highlighting rules are not supported and were removed: Contains Errors.
The following conditional highlighting rules are not supported and were removed: Contains No Errors.
Conditional highlighting rules containing unsupported operators were removed.
Conditional highlighting rules using unsupported style attributes were removed.
The conditional formatting containing an unsupported time period was removed.
Unsupported conditional highlighting rules were removed.
The cell was updated with a more accurate duration format. You may want to review formulas that refer to this cell.
-[TSTImportWarningSet TSTImportFormulaWarningTypeToArchive]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTImportWarningSet.mm
Unhandled FormulaWarningType encountered while saving to archive.
v32@?0@"NSString"8Q16^B24
-[TSTWrappedFormula nodesToCheckForBareArgumentPlaceholders]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTWrappedFormula.mm
Expected function node for %@ at the top of parse tree
-[TSTWrappedFormula insertFormulaText:includeWhitespace:]
-[TSTWrappedFormula reparseWithStorage:adjustExpressionTree:]_block_invoke
Unexpected attachment passed to block
-[TSTWrappedFormula reparseWithStorage:adjustExpressionTree:]
-[TSTWrappedFormula reparseWithStorage:adjustExpressionTree:]_block_invoke_2
Expected top function node to be at index 0
Expected top function node to end at index %lu
expected non-top node to be past index %lu
@"TSTExpressionNode"16@?0@"TSTExpressionNode"8
Fatal Assertion failure: %{public}s %{public}s:%d Unarchiving is incomplete. Equality comparison is bogus and can lead to document corruption. Crashing now.
-[TSTPopUpMenuModel isEqualToChoices:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTPopUpMenuModel.mm
Unarchiving is incomplete. Equality comparison is bogus and can lead to document corruption. Crashing now.
TSTPopUpMenuModel: (
-[TSTPopUpMenuModel p_mcListTypeForArgType:]
Unexpected TSCEArgumentType for popup list.
-[TSTPopUpMenuModel loadFromArchive:]
We are not handling this type of TSCECellValue
TSTPopUpMenuModel Archiving: Only one of item and tsce_item should exist
TSTPopUpMenuModel Archiving: No items to unarchive
Item 1
Item 2
Item 3
+[TSTPopUpMenuModel popupMenuModelReorderingModel:fromIndex:toIndex:]
Bad index
TSTArchives.sos.proto
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/messages/src/TSTArchives.sos.pb.cc
-[TSTTableDataObject loadFromArchive:unarchiver:completion:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTableDataObject.mm
Abstract method not overridden by %{public}@
Abstract method not overridden by %@: %s
-[TSTTableDataObject dropReferences:]
dropping data list ref count by more than the total count
-[TSTTableDataObject estimateByteSize]
refCount: %d   commentStorage: %@
refCount: %d   _conditionalStyleSet: %@
-[TSTTableDataCustomFormat encodeToArchive:archiver:]
Should never archive a new custom format datalist!
refCount: %d   _customFormat: %@
NULL
refCount: %d   format: %@
-[TSTTableDataCellSpec loadFromArchive:unarchiver:completion:]
Shouldn't find unsupported formulas in documents. This document is corrupted.
refCount: %d   _cellSpec: %@
refCount: %d   _formulaError: %@
refCount: %d   importWarningSet: %@
refCount: %d   popUpMenuModel: %@
v16@?0@"TSTRichTextPayload"8
refCount: %d   storage: %@
-[TSTTableDataString initObjectWithString:refCount:]
created a string table entry with a nil string
refCount: %d   string: %@
v16@?0@"TSSStyle"8
refCount: %d   _style: %@
-[TSTCellDictionary setCell:atCellID:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCellDictionary.mm
can't insert an invalid cell ID
-[TSTCellDictionary cellAtCellID:]
can't look up an invalid cell ID
-[TSTCellDictionary hasCellAtCellID:]
<%@ %p with %d key/value pairs 
  { key: string   : %@
         width    : %f
         height   : %f
         vertical : %@
         direction : %@
wpColumn:  object : %@
           string : %@
  },
v32@?0@"TSTLayoutContentCachedKey"8@"TSWPColumn"16^B24
TSTArchives.proto
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/messages/src/TSTArchives.pb.cc
v32@?0@"NSNumber"8@16^B24
v16@?0@"NSMutableDictionary"8
-[TSTCell initWithLocale:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCell.mm
-[TSTCell copyToCell:]
srcStorage
-[TSTCell copyValueAndFormatToCell:]
-[TSTCell cellByApplyingCellDiff:toTable:andUpdateInverse:optionalConcurrentStylesheet:]
cellStyle
-[TSTCell setProvidedValueTypeBeforeUpgrade]
Provided cells only allowed before Pre-UFF upgrade.
-[TSTCell formattedValue]
Cell number format failed to produce return string.
Cell currency format failed to produce return string.
Impossible cell value type reached.
%@ Total
-[TSTCell stringForEditing]
-[TSTCell bakeFormulaToValue]
can't bake non-formula cells
-[TSTCell setCellStyle:clearingID:]
-[TSTCell setTextStyle:clearingID:]
-[TSTCell setConditionalStyle:clearingID:]
v40@?0@"TSWPAttachment"8Q16Q24^B32
-[TSTCell interactionType]
Cell must be inflated to determine interaction type
-[TSTCell hasStockFormulaForStockUI]
Cell must be inflated to ask if it contains a stock formula
-[TSTCell popupChoiceIndex]
Not a popup cell.
-[TSTCell applyPopupChoiceIndex:]
Unexpected argument type for popup TSCECellValue.
Cannot apply popup choice
v40@?0@8{_NSRange=QQ}16^B32
unhandled formula result type found.
-[TSTCell copyAllFormatsToCell:]
-[TSTCell setFormatID:forStorageFlag:]
Inappropriate storage flag.
-[TSTCell formatForStorageFlag:]
-[TSTCell formatIDForStorageFlag:]
<cellSpec: %@>
<cellSpec not populated>
B24@?0@"TSKFormat"8@"TSKFormat"16
v32@?0@"TSTTableGroupSortRuleUID"8Q16^B24
-[TSTTableDataStore decrementColumnCellCount:byAmount:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTableDataStore.mm
Can't drive cell count below zero!
-[TSTTableDataStore getCell:atCellID:]
Retrieving corrupt cell storage data for cellID:%@
v28@?0^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}8S16^B20
void p_performRichTextStorageDOLC(TSTTableDataStore *__strong, TSTCell *__strong, TSTCellStorageRef)
newStorage.documentRoot
-[TSTTableDataStore p_updatePreBNCDataListsForCurrentFormat:numberFormat:currencyFormat:dateFormat:durationFormat:baseFormat:customFormat:stepperSliderFormat:mcListFormat:oldPreBNCStorageRef:callWillModify:]
newMCData
I20@?0@"TSKFormat"8i16
void p_UpdateDataListsForNewCell(TSTTableDataStore *__strong, TSTCell *__strong, TSTCellStorageRef, const TSCEOwnerUID &, __strong id<TSCEFormulaReplacing>, BOOL)
Cell of string value type has no value. Setting to NoContent.
Handed a bad string key! Setting to NoContent.
Expected a formula cell spec
Handed a bad formula key! Repairing.
Expected a control cell spec
Handed a bad formula error key! Repairing.
Handed a bad text storage key! Repairing.
Handed a cell comment key! Repairing.
Handed an import warning set key! Repairing.
Handed a bad cell style key! Repairing.
Handed a bad text style key! Repairing.
Handed a bad conditional style key! Repairing.
-[TSTTableDataStore _setCell:atCellID:tableUID:calculationEngine:conditionalStyleOwner:ignoreFormula:clearImportWarnings:richTextDOLCHint:]
Failed to get tile for cell!
-[TSTTableDataStore setCellMap:tableUID:calculationEngine:conditionalStyleOwner:ignoreFormulas:skipDirtyingNonFormulaCells:doRichTextDOLC:]_block_invoke
Failed to get a tile while setting a map!
-[TSTTableDataStore p_preBNCKeysForCell:oldPreBNCStorageRef:callWillModify:]
Illegal format type %@ for preBNC stepper/slider display format.
preBNCPopupTable
-[TSTTableDataStore resolveDataListKeysForPreBNCCell:suppressTransmutation:sourceStorageVersion:]
String cell has bad string!
StringTable
Formula cell has bad formula!
FormulaTable
NULL formula
FormulaErrorTable
RichTextTable
CommentTable
ImportWarningTable
StyleTable
ConditionalStyleTable
preBNCFormatTable
-[TSTTableDataStore resolveDataListKeysForCell:suppressTransmutation:sourceStorageVersion:]
This cell is corrupt. It has a key for both formula and control.
ControlCellSpecTable
FormatTable
Fatal Assertion failure: %{public}s %{public}s:%d Datalist reference is unexpectedly nil during load!
-[TSTTableDataStore p_loadDatalist:forLazyReference:completionBlock:]
Datalist reference is unexpectedly nil during load!
Fatal Assertion failure: %{public}s %{public}s:%d Failed to load a lazy datalist in TSTTableDataStore: %@ in table: %@ with error: errorClass=%{public}@, domain=%{public}@, code=%zd, %{public}@hints=%{public}@ (%@) 
Failed to load a lazy datalist in TSTTableDataStore: %@ in table: %@ with error: errorClass=%{public}@, domain=%{public}@, code=%zd, %{public}@hints=%{public}@ (%@) 
Fatal Assertion failure: %{public}s %{public}s:%d Conditional style datalist reference is unexpectedly nil!
-[TSTTableDataStore conditionalStyleSetDataList]
Conditional style datalist reference is unexpectedly nil!
Fatal Assertion failure: %{public}s %{public}s:%d String datalist reference is unexpectedly nil!
-[TSTTableDataStore stringDataList]
String datalist reference is unexpectedly nil!
Fatal Assertion failure: %{public}s %{public}s:%d Style datalist reference is unexpectedly nil!
-[TSTTableDataStore styleDataList]
Style datalist reference is unexpectedly nil!
Fatal Assertion failure: %{public}s %{public}s:%d Formula datalist reference is unexpectedly nil!
-[TSTTableDataStore formulaDataList]
Formula datalist reference is unexpectedly nil!
Fatal Assertion failure: %{public}s %{public}s:%d Control cellspec datalist reference is unexpectedly nil!
-[TSTTableDataStore controlCellSpecDataList]
Control cellspec datalist reference is unexpectedly nil!
v16@?0@"TSTTableDataList"8
Fatal Assertion failure: %{public}s %{public}s:%d Formula error datalist reference is unexpectedly nil!
-[TSTTableDataStore formulaErrorDataList]
Formula error datalist reference is unexpectedly nil!
Fatal Assertion failure: %{public}s %{public}s:%d Rich text datalist reference is unexpectedly nil!
-[TSTTableDataStore richTextDataList]
Rich text datalist reference is unexpectedly nil!
-[TSTTableDataStore richTextDataList]_block_invoke
Expected non-nil richTextParentInfo back pointer. Should have been set at initialization.
Fatal Assertion failure: %{public}s %{public}s:%d Format datalist reference is unexpectedly nil!
-[TSTTableDataStore formatDataList]
Format datalist reference is unexpectedly nil!
Fatal Assertion failure: %{public}s %{public}s:%d Comment storage datalist reference is unexpectedly nil!
-[TSTTableDataStore commentStorageDataList]
Comment storage datalist reference is unexpectedly nil!
Fatal Assertion failure: %{public}s %{public}s:%d Import warning datalist reference is unexpectedly nil!
-[TSTTableDataStore importWarningSetDataList]
Import warning datalist reference is unexpectedly nil!
Fatal Assertion failure: %{public}s %{public}s:%d Pre-BNC format datalist reference is unexpectedly nil!
-[TSTTableDataStore preBNCFormatDataList]
Pre-BNC format datalist reference is unexpectedly nil!
-[TSTTableDataStore addPasteboardCustomFormat:toDocument:updatingPasteboardFormat:]
The pasteboard should have had every custom format.
-[TSTTableDataStore copyPasteboardCustomFormatsFromDataStore:]
_pasteboardCustomFormatList
-[TSTTableDataStore makePasteboardCustomFormatList]
-[TSTTableDataStore setupEmptyPasteboardCustomFormatList]
v16@?0@"TSTTableHeaderStorageBucket"8
v16@?0@"TSTMergeRegionMap"8
v16@?0@"TSKCustomFormatList"8
v28@?0I8@"TSKFormat"12^B20
%@, key:%d, cellCount:%d, datalist count:%d
%@, key:%d, cellCount:%d, datalist count:0
v32@?0@"TSTTableDataList"8^v16@"NSString"24
condStyles
strings
styles
cellSpecs
f-errors
rich text
formats
comments
imp warns
DataList RefCount Audit good:%d bad:%d dead:%d
Datalist Duplication Audit
Conditional Styles list has dupes.
Strings List has dupes.
Styles List has dupes.
Formula List has dupes.
Control Cell Spec List has dupes.
Format List has dupes.
Import Warnings List has dupes.
ColumnRowCellCount Audit
Cell count mismatch at row %d: header has %td, row has %td
Cell count mismatch at column %d: header should have %td, has %td
-[TSTTableDataStore updateDataListsConcurrentlyWithConcurrentCellMap:clearImportWarnings:]_block_invoke
v24@?0@"TSTCell"8@"TSTCell"16
-[TSTTableDataStore updateDataListsConcurrentlyWithConcurrentCellMap:clearImportWarnings:]_block_invoke_2
-[TSTTableDataStore updateDataListsConcurrentlyWithConcurrentCellMap:clearImportWarnings:]_block_invoke_3
-[TSTTableDataStore updateDataListsConcurrentlyWithConcurrentCellMap:clearImportWarnings:]_block_invoke_4
-[TSTTableDataStore updateDataListsConcurrentlyWithConcurrentCellMap:clearImportWarnings:]_block_invoke_5
-[TSTTableDataStore updateDataListsConcurrentlyWithConcurrentCellMap:clearImportWarnings:]_block_invoke_6
cells[idx]
v40@?0B8@"TSKFormat"12I20@"NSIndexSet"24^v32
-[TSTTableDataStore setCellsConcurrently:tableUID:calculationEngine:conditionalStyleOwner:ignoreFormula:clearImportWarnings:]_block_invoke
the newCells array and the set of column indexes should be the same size
{vector<long, std::allocator<long>>=^q^q{__compressed_pair<long *, std::allocator<long>>=^q}}40@?0@"TSTTableTileRowInfo"8^v16^v24^v32
-[TSTTableDataStore setCellsConcurrently:tableUID:calculationEngine:conditionalStyleOwner:ignoreFormula:clearImportWarnings:]_block_invoke_2
newFormulaSpec
v18@?0{TSUModelColumnIndex=S}8q10
v36@?0{TSUModelRowIndex=I}8q12@"TSTTableTile"20@"TSTTableTileRowInfo"28
v32@?0@"TSTTableTile"8@"NSMutableIndexSet"16^B24
-[TSTTableDataStore accumulateCurrentCellsConcurrentlyInRow:rowInfo:atColumns:usingCellCreationBlock:]
-[TSTTableDataStore tsceValueFromCell:atCellID:tableUID:]
unhandled table cell type found
-[TSTTableDataStore tsceValueForCellStorageRef:cellCoord:hostTableUID:outValue:]
Can't get a value from a null cell reference!
TSUDecimal TSTCellStorageDecimalValue(TSTCellStorage *)
Asked for TSUDecimal value from an inappropriate cell.
BOOL TSTCellStorageBoolValue(TSTCellStorage *)
Asked for bool value from non-bool cell.
double TSTCellStorageRawDateValue(TSTCellStorage *)
Asked for date value from non-date cell.
-[TSTCommentHosting initWithStorage:forTableInfo:cellUID:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCommentHosting.mm
Expecting valid cell UID!
-[TSTCommentHosting initWithStorage:forTableInfo:baseCellCoord:]
Expecting valid cell ID!
%@@(%@, %@)
TSTTextCellColumnAutocomplete
TSTLastKeyboardWasNumberUserDefault
-[TSTFormulaRewriteSpec initFromMessage:unarchiver:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTFormulaRewriteSpec.mm
Move rewriteSpec should have AUX rowColumnInfo in archive
Sort/Reorder rewriteSpec should have AUX rowColumnInfo in archive
TSTStylePropertyArchiving.proto
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/messages/src/TSTStylePropertyArchiving.pb.cc
-[TSTArchivedAutofillSelection setSelection:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTArchivedAutofillSelection.mm
Wrong type of class %@ (expected TSTAutofillSelection)
-[TSTTableRep hyperlinkRegions]_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTableRep.mm
Bounds of hyperlink {%@} are not finite
v16@?0^{CGContext=}8
v16@?0@"TSDTexturedRectangle"8
+[TSTTableRep p_countOfIdenticalCellsBetweenOutgoingTableInfo:incomingTableInfo:]
numberOfColumns not equal!
+[TSTTableRep magicMoveAttributeMatchPercentBetweenOutgoingObject:incomingObject:mixingTypeContext:]
equalCellCount(%d) > totalCellCount(%d)!
delegate
void TSTTableRepPrepareToDrawLayoutSpace(TSTTableRep *__strong _Nonnull, TSTLayoutSpace *__strong _Nullable, CGContextRef _Nullable)
space
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}
WARNING: invalid cell fill %@ %@
v32@?0@8@16^B24
-[TSTTableRep p_drawGroupingArrowInContext:contentFrame:cell:cellID:groupingArrowState:alignedClipFrame:verticalAlignment:wpColumn:]
should only be called on grouping cells
should only be called on tables that are grouped
{%@->%@}
{invalid, invalid}
{invalid, %u}
{%u, invalid}
{%u, %u}
TSTCellRange TSTTableRepDrawIndividualCellContent(TSTTableRep *__strong, TSTLayoutSpace *__strong, TSTGridRange, TSTCell *__strong, TSTCellID, __strong id, __strong id<TSTCellIteratorData>, TSTCellRange, BOOL, NSMutableArray<TSTTableBadge *> *__strong, BOOL, TSWPSelection * _Nullable __strong, CGContextRef)
No TSWPColumn layout rock found.
void TSTTableRepDrawGridRange(TSTTableRep *__strong, TSTLayoutSpace *__strong, TSTGridRange, TSTAnimation *__strong, CGContextRef)
background fill is not supported yet
yyFlexLexer::yylex invoked but %option yyclass used
virtual int TSTDefaultLexer::yylex()
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTDefaultLexer.lmm
Unable to lex tokenAttachment.
fatal flex scanner internal error--no action found
fatal flex scanner internal error--end of buffer missed
fatal error - scanner input buffer overflow
input in flex scanner failed
out of dynamic memory in yy_get_next_buffer()
flex scanner push-back overflow
out of dynamic memory in yy_create_buffer()
out of dynamic memory in yyensure_buffer_stack()
out of memory expanding start-condition stack
start-condition stack underflow
Starting parse
Stack size increased to %lu
Entering state %d
Reading a token: 
Now at end of input.
Next token is
Shifting
int TSTyyparse(TSTParser *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTGrammar.ymm
Parser: the quoted string length is less than 2.
-> $$ =
Error: popping
Cleanup: discarding lookahead
Cleanup: popping
token %s (
nterm %s (
%d.%d-%d.%d
$end
$undefined
TOK_LPAREN
TOK_RPAREN
TOK_LBRACK
TOK_RBRACK
TOK_ARG_SEPARATOR
TOK_DOUBLE_COLON
TOK_UNKNOWN
TOK_IN
TOK_LET
TOK_UNQUOTED_IDENTIFIER
TOK_QUOTED_IDENTIFIER
TOK_AGG_IDENTIFIER_WITH_PARENS
TOK_UNQUOTED_IDENTIFIER_WITH_PARENS
TOK_WS
TOK_QUOTEDSTRING
TOK_FUNCTION_TOKEN
TOK_FUNCTION_END_TOKEN
TOK_NUMBER
TOK_BOOLEAN_TOKEN
TOK_DATE_TOKEN
TOK_DURATION_TOKEN
TOK_VARIABLE_TOKEN
TOK_IDENTIFIER_TOKEN
TOK_ARRAY_LINE_DELIMITER
TOK_REFERENCE_TOKEN
TOK_STRING_TOKEN
TOK_ARGUMENT_PLACEHOLDER_TOKEN
TOK_EMPTY_TOKEN
TOK_COLON
TOK_LESS_OR_EQUAL
TOK_GREATER_OR_EQUAL
TOK_GREATER_THAN
TOK_LESS_THAN
TOK_NOT_EQUAL
TOK_EQUALS
TOK_AMPERSAND
TOK_MINUS
TOK_PLUS
TOK_DIV
TOK_TIMES
TOK_POWER
TOK_PIPE
TOK_PERCENT
UPLUS
UMINUS
$accept
root
expr
unquoted_identifier_component
quoted_identifier_component
identifier_component
identifier
reference
piped_reference_list
list
array
list_of_array_rows
list_head
expr_opt
function
Reducing stack by rule %d (line %lu):
   $%d = 
Stack now
Deleting
virtual int TSTCommaLexer::yylex()
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCommaLexer.lmm
_TtP8TSTables35TSTFixedColumnWidthGeometryProvider_
d24@0:8d16
25TSTArgumentAtIndexLocator
25TSTReparentGroupsRewriter
27TSTCellSpecFormulaExtractor
category column
aggre names col
aggre names row
KD#B
36TSTTSCEASTNodeExpressionNodeFunction
8TSTLexer
NSt3__119basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE
25TSTTrackingRangeExtractor
28TSTUIDTrackingRangeExtractor
?_Zu
?]Zu
<_Zu
23TSTBakeFormulasDetector
20TSTPivotUidOrderNode
15TSTUidOrderNode
?47TSTConvertFormulasFromBaseForCategoriesRewriter
45TSTConvertFormulasToBaseForCategoriesRewriter
23TSTCategoryUidOrderNode
333333
34TSTResolveRelativeAncestorRewriter
36TSTConvertToRelativeAncestorRewriter
16TSTTableResolver
17TSCETableResolver
TSTArchives.sos.proto
TSTSOS
TSDArchives.sos.proto
TSSArchives.sos.proto
TSTStylePropertyArchiving.proto
TSWPArchives.sos.proto"t
#SpecSetTableStrokePresetListArchive
table_stroke_preset_list
.TST.StrokePresetListArchive
unset
 SpecTableStrokePresetListArchive
!spec_set_table_stroke_preset_list
2+.TSTSOS.SpecSetTableStrokePresetListArchive"
&TableCellStylePropertyChangeSetArchive
text_wrap
.TSSSOS.SpecBoolArchive
text_wrap_undefined
type
.TSSSOS.SpecIntegerArchive
type_undefined
fill
.TSDSOS.SpecFillArchive
fill_undefined
vertical_alignment
.TSSSOS.SpecIntegerArchive
vertical_alignment_undefined
padding
.TSWPSOS.SpecPaddingArchive
padding_undefined
"TableStylePropertyChangeSetArchive
auto_resize
.TSSSOS.SpecBoolArchive
auto_resize_undefined
banded_rows
.TSSSOS.SpecBoolArchive
banded_rows_undefined
banded_cell_fill
.TSDSOS.SpecFillArchive
banded_cell_fill_undefined
behaves_like_spreadsheet
.TSSSOS.SpecBoolArchive
"behaves_like_spreadsheet_undefined
body_horizontal_border_stroke
.TSDSOS.SpecStrokeArchive
'body_horizontal_border_stroke_undefined
body_vertical_border_stroke
.TSDSOS.SpecStrokeArchive
%body_vertical_border_stroke_undefined
body_horizontal_stroke
.TSDSOS.SpecStrokeArchive
 body_horizontal_stroke_undefined
body_vertical_stroke
.TSDSOS.SpecStrokeArchive
body_vertical_stroke_undefined
header_column_border_stroke
.TSDSOS.SpecStrokeArchive
%header_column_border_stroke_undefined
header_column_vertical_stroke
.TSDSOS.SpecStrokeArchive
'header_column_vertical_stroke_undefined
header_column_horizontal_stroke
.TSDSOS.SpecStrokeArchive
)header_column_horizontal_stroke_undefined
header_column_separator_stroke
.TSDSOS.SpecStrokeArchive
(header_column_separator_stroke_undefined
header_row_border_stroke
.TSDSOS.SpecStrokeArchive
"header_row_border_stroke_undefined
header_row_horizontal_stroke
.TSDSOS.SpecStrokeArchive
&header_row_horizontal_stroke_undefined
header_row_vertical_stroke
.TSDSOS.SpecStrokeArchive
$header_row_vertical_stroke_undefined
header_row_separator_stroke
.TSDSOS.SpecStrokeArchive
%header_row_separator_stroke_undefined
footer_row_border_stroke
.TSDSOS.SpecStrokeArchive
"footer_row_border_stroke_undefined
footer_row_horizontal_stroke
.TSDSOS.SpecStrokeArchive
&footer_row_horizontal_stroke_undefined
footer_row_vertical_stroke
.TSDSOS.SpecStrokeArchive
$footer_row_vertical_stroke_undefined
footer_row_separator_stroke
.TSDSOS.SpecStrokeArchive
%footer_row_separator_stroke_undefined
stroke_preset_list_object
2(.TSTSOS.SpecTableStrokePresetListArchive
#stroke_preset_list_object_undefined
vertical_strokes_visible
.TSSSOS.SpecBoolArchive
"vertical_strokes_visible_undefined
horizontal_strokes_visible
.TSSSOS.SpecBoolArchive
$horizontal_strokes_visible_undefined
header_row_sep_visible
.TSSSOS.SpecBoolArchive
 header_row_sep_visible_undefined
header_row_verticals_visible
.TSSSOS.SpecBoolArchive
&header_row_verticals_visible_undefined
header_col_sep_visible
.TSSSOS.SpecBoolArchive
 header_col_sep_visible_undefined
header_col_horizontals_visible
.TSSSOS.SpecBoolArchive
(header_col_horizontals_visible_undefined
footer_sep_visible
.TSSSOS.SpecBoolArchive
footer_sep_visible_undefined
footer_verticals_visible
.TSSSOS.SpecBoolArchive
"footer_verticals_visible_undefined
border_strokes_visible
.TSSSOS.SpecBoolArchive
 border_strokes_visible_undefined
master_font_family
.TSSSOS.SpecStringArchive
master_font_family_undefined
writing_direction
.TSSSOS.SpecIntegerArchive
writing_direction_undefined
category_level1_top_stroke
.TSDSOS.SpecStrokeArchive
$category_level1_top_stroke_undefined
category_level2_top_stroke
.TSDSOS.SpecStrokeArchive
$category_level2_top_stroke_undefined
category_level3_top_stroke
.TSDSOS.SpecStrokeArchive
$category_level3_top_stroke_undefined
category_level4_top_stroke
.TSDSOS.SpecStrokeArchive
$category_level4_top_stroke_undefined
category_level5_top_stroke
.TSDSOS.SpecStrokeArchive
$category_level5_top_stroke_undefined
&category_level1_label_separator_stroke
.TSDSOS.SpecStrokeArchive
0category_level1_label_separator_stroke_undefined
&category_level2_label_separator_stroke
.TSDSOS.SpecStrokeArchive
0category_level2_label_separator_stroke_undefined
&category_level3_label_separator_stroke
.TSDSOS.SpecStrokeArchive
0category_level3_label_separator_stroke_undefined
&category_level4_label_separator_stroke
.TSDSOS.SpecStrokeArchive
0category_level4_label_separator_stroke_undefined
&category_level5_label_separator_stroke
.TSDSOS.SpecStrokeArchive
0category_level5_label_separator_stroke_undefined
category_level1_bottom_stroke
.TSDSOS.SpecStrokeArchive
'category_level1_bottom_stroke_undefined
category_level2_bottom_stroke
.TSDSOS.SpecStrokeArchive
'category_level2_bottom_stroke_undefined
category_level3_bottom_stroke
.TSDSOS.SpecStrokeArchive
'category_level3_bottom_stroke_undefined
category_level4_bottom_stroke
.TSDSOS.SpecStrokeArchive
'category_level4_bottom_stroke_undefined
category_level5_bottom_stroke
.TSDSOS.SpecStrokeArchive
'category_level5_bottom_stroke_undefined
category_level1_interior_stroke
.TSDSOS.SpecStrokeArchive
)category_level1_interior_stroke_undefined
category_level2_interior_stroke
.TSDSOS.SpecStrokeArchive
)category_level2_interior_stroke_undefined
category_level3_interior_stroke
.TSDSOS.SpecStrokeArchive
)category_level3_interior_stroke_undefined
category_level4_interior_stroke
.TSDSOS.SpecStrokeArchive
)category_level4_interior_stroke_undefined
category_level5_interior_stroke
.TSDSOS.SpecStrokeArchive
)category_level5_interior_stroke_undefined
"body_pivot_group_horizontal_stroke
.TSDSOS.SpecStrokeArchive
,body_pivot_group_horizontal_stroke_undefined
 body_pivot_group_vertical_stroke
.TSDSOS.SpecStrokeArchive
*body_pivot_group_vertical_stroke_undefined
(body_pivot_de_emphasis_horizontal_stroke
.TSDSOS.SpecStrokeArchive
2body_pivot_de_emphasis_horizontal_stroke_undefined
#body_pivot_emphasis_vertical_stroke
.TSDSOS.SpecStrokeArchive
-body_pivot_emphasis_vertical_stroke_undefined
+header_column_pivot_group_horizontal_stroke
.TSDSOS.SpecStrokeArchive
5header_column_pivot_group_horizontal_stroke_undefined
,header_column_pivot_group_de_emphasis_stroke
.TSDSOS.SpecStrokeArchive
6header_column_pivot_group_de_emphasis_stroke_undefined
$header_column_pivot_separator_stroke
.TSDSOS.SpecStrokeArchive
.header_column_pivot_separator_stroke_undefined
&header_row_pivot_group_vertical_stroke
.TSDSOS.SpecStrokeArchive
0header_row_pivot_group_vertical_stroke_undefined
)header_row_pivot_group_de_emphasis_stroke
.TSDSOS.SpecStrokeArchive
3header_row_pivot_group_de_emphasis_stroke_undefined
header_row_pivot_title_stroke
.TSDSOS.SpecStrokeArchive
'header_row_pivot_title_stroke_undefined
&footer_row_pivot_group_vertical_stroke
.TSDSOS.SpecStrokeArchive
0footer_row_pivot_group_vertical_stroke_undefined
N6TSTSOS35SpecSetTableStrokePresetListArchiveE
N6TSTSOS32SpecTableStrokePresetListArchiveE
N6TSTSOS38TableCellStylePropertyChangeSetArchiveE
N6TSTSOS34TableStylePropertyChangeSetArchiveE
TSTArchives.proto
TSPMessages.proto
TSDArchives.proto
TSKArchives.proto
TSSArchives.proto
TSCEArchives.proto
TSWPArchives.proto
TSTStylePropertyArchiving.proto"Q
CellID
packedData
expanded_coord
.TSCE.CellCoordinateArchive"
CellUIDLookupListArchive
column_uids
.TSCE.UidLookupListArchive
row_uids
.TSCE.UidLookupListArchive
column_indexes
row_indexes
CellUIDListArchive
row_uids
.TSP.UUID
column_uids
.TSP.UUID
compressed_row_indexes
compressed_column_indexes
uncompressed_lookup_list
.TST.CellUIDLookupListArchive"F
TableSize
packedData
num_columns
num_rows
ExpandedTableSize
num_columns
num_rows
CellRange
origin
.TST.CellID
size
.TST.TableSize"f
ExpandedCellRange
origin
.TSCE.CellCoordinateArchive
size
.TST.ExpandedTableSize"
TableSelection
cellRange
.TST.CellRange
extendedCellRange
.TST.CellRange
extendedCellRangeValid
selection_type
.TST.SelectionTypeArchive"
TileRowInfo
tile_row_index
cell_count
cell_storage_buffer_pre_bnc
cell_offsets_pre_bnc
storage_version
cell_storage_buffer
cell_offsets
has_wide_offsets
Tile
maxColumn
maxRow
numCells
numrows
rowInfos
.TST.TileRowInfo
storage_version
last_saved_in_BNC
should_use_wide_rows
TileStorage
tiles
.TST.TileStorage.Tile
tile_size
should_use_wide_rows
Tile
tileid
tile
.TSP.Reference"
PopUpMenuModel
item
.TST.PopUpMenuModel.CellValueB
tsce_item
.TSCE.CellValueArchive
CellValue
cell_value_type
2!.TST.PopUpMenuModel.CellValueType
boolean_value
.TSCE.BooleanCellValueArchive
date_value
.TSCE.DateCellValueArchive
number_value
.TSCE.NumberCellValueArchive
string_value
.TSCE.StringCellValueArchive"`
CellValueType
NIL_TYPE
BOOLEAN_TYPE
DATE_TYPE
NUMBER_TYPE
STRING_TYPE
ImportWarningSetArchive
formula_import_warning
21.TST.ImportWarningSetArchive.FormulaImportWarning
cond_format_above_avg_equal_avg
false
cond_format_above_avg_std_dev
false
cond_format_complex_formula
false
cond_format_contains_errors
false
cond_format_expr
false
cond_format_not_contains_errors
false
(cond_format_parameters_not_all_same_type
false
cond_format_stop_if_true
false
 cond_format_unsupported_operator
false
cond_format_unsupported_styling
false
#cond_format_unsupported_time_period
false
error_cell_with_no_formula
false
unsupported_cond_format
false
original_data_format
2formula_warning_filtered_column_formula_not_copied
false
duration_format_range_changed
false
FormulaImportWarning
formula_warning_type
2/.TST.ImportWarningSetArchive.FormulaWarningType
original_formula
supplementary_text
formula_warning_type_int
FormulaWarningType
THREE_D_REFERENCE
ARRAYED_FORMULA
DIFFERENT_BEHAVIOR_FOR_FUNCTION
ERROR_TOKEN
EXTERNAL_REFERENCE
NATURAL_LANGUAGE_FORMULA
REFERENCE_OUT_OF_BOUNDS
SHARED_FORMULA_BASE_NOT_FOUND
UNKNOWN_NAME
UNSUPPORTED_FORMULA
UNSUPPORTED_FUNCTION
UNSUPPORTED_NAME
TRANSPOSED_NO_ISSUES
TRANSPOSED_WITH_ISSUES
 TRANSPOSED_WITH_ISSUES_UNCHANGED
"CellRefImportWarningSetPairArchive
cell_ref
.TSCE.CellReferenceArchive
warning_set
.TST.ImportWarningSetArchive"m
 ImportWarningSetByCellRefArchive
cellref_warning_set_pair
2'.TST.CellRefImportWarningSetPairArchive"
TableDataList
listType
.TST.TableDataList.ListType
nextListID
entries
.TST.TableDataList.ListEntry
segments
.TSP.Reference
ListEntry
refcount
string
reference
.TSP.Reference
formula
.TSCE.FormulaArchive
format
.TSK.FormatStructArchive
custom_format
.TSK.CustomFormatArchive
rich_text_payload
.TSP.Reference
comment_storage
.TSP.Reference
import_warning_set
.TST.ImportWarningSetArchive
cell_spec
.TST.CellSpecArchive"
ListType
STRING
FORMAT
FORMULA
STYLE
FORMULA_ERROR
CUSTOM_FORMAT
MULTIPLE_CHOICE_LIST_FORMAT
RICH_TEXT_PAYLOAD
CONDITIONAL_STYLE
COMMENT_STORAGE
IMPORT_WARNING
CONTROL_CELL_SPEC
TableDataListSegment
list_type
.TST.TableDataList.ListType
key_range
.TSP.Range
entries
.TST.TableDataList.ListEntry"W
TableRBTree
nodes
.TST.TableRBTree.Node
Node
value
HeaderStorageBucket
bucketHashFunction
headers
.TST.HeaderStorageBucket.Header
Header
index
size
hidingState
numberOfCells
cell_style
.TSP.Reference
text_style
.TSP.Reference"L
HeaderStorage
bucketHashFunction
buckets
.TSP.Reference"
DataStore
rowHeaders
.TST.HeaderStorage
columnHeaders
.TSP.Reference
tiles
.TST.TileStorage
stringTable
.TSP.Reference
styleTable
.TSP.Reference
formula_table
.TSP.Reference
formulaErrorTable
.TSP.Reference
format_table_pre_bnc
.TSP.Reference
multipleChoiceListFormatTable
.TSP.Reference
merge_region_map
.TSP.Reference
customFormatTable
.TSP.Reference
nextRowStripID
nextColumnStripID
rowTileTree
.TST.TableRBTree
columnTileTree
.TST.TableRBTree
storage_version_pre_bnc
rich_text_table
.TSP.Reference
conditionalstyletable
.TSP.Reference
commentStorageTable
.TSP.Reference
importWarningSetTable
.TSP.Reference
control_cell_spec_table
.TSP.Reference
format_table
.TSP.Reference"
TableInfoArchive
super
.TSD.DrawableArchive
tableModel
.TSP.Reference
editing_state
.TSP.ReferenceB
summary_model
.TSP.Reference
category_order
.TSP.Reference
view_column_row_uids
.TSP.Reference
group_by_uuid
.TSP.UUID
hidden_states_uuid
.TSP.UUID
formula_coord_space_in_pre40
formula_coord_space
pasteboard_coord_mapper
.TSCE.CoordMapperArchive
layout_engine
.TST.LayoutEngineArchive
pivot_data_model
.TSP.Reference
is_a_pivot_table
pivot_order
.TSP.Reference"^
CategoryInfoArchive
super
.TSD.DrawableArchive
tableModel
.TSP.Reference"[
WPTableInfoArchive
super
.TST.TableInfoArchive
storage
.TSP.Reference"
TableStyleNetworkArchive
body_text_style
.TSP.Reference
header_row_text_style
.TSP.Reference
header_column_text_style
.TSP.Reference
footer_row_text_style
.TSP.Reference
body_cell_style
.TSP.Reference
header_row_style
.TSP.Reference
header_column_style
.TSP.Reference
footer_row_style
.TSP.Reference
table_style
.TSP.Reference
table_name_style
.TSP.Reference
table_name_shape_style
.TSP.Reference
preset_id
category_level_1_text_style
.TSP.Reference
category_level_2_text_style
.TSP.Reference
category_level_3_text_style
.TSP.Reference
category_level_4_text_style
.TSP.Reference
category_level_5_text_style
.TSP.Reference
category_level_1_style
.TSP.Reference
category_level_2_style
.TSP.Reference
category_level_3_style
.TSP.Reference
category_level_4_style
.TSP.Reference
category_level_5_style
.TSP.Reference
label_level_1_text_style
.TSP.Reference
label_level_2_text_style
.TSP.Reference
label_level_3_text_style
.TSP.Reference
label_level_4_text_style
.TSP.Reference
label_level_5_text_style
.TSP.Reference
label_level_1_style
.TSP.Reference
label_level_2_style
.TSP.Reference
label_level_3_style
.TSP.Reference
label_level_4_style
.TSP.Reference
label_level_5_style
.TSP.Reference
pivot_body_summary_row_style
.TSP.Reference
pivot_body_summary_column_style
.TSP.Reference
!pivot_header_column_summary_style
.TSP.Reference"
TableGroupSortOrderUIDArchive
group_sort_rules
2:.TST.TableGroupSortOrderUIDArchive.GroupSortRuleUIDArchive
GroupSortRuleUIDArchive
grouping_column_uid
.TSP.UUID
column_uid
.TSP.UUID
direction
2D.TST.TableGroupSortOrderUIDArchive.GroupSortRuleUIDArchive.Direction"*
Direction
ascending
descending
TableSortOrderArchive
type
2#.TST.TableSortOrderArchive.SortType
rules
2*.TST.TableSortOrderArchive.SortRuleArchive
SortRuleArchive
index
direction
24.TST.TableSortOrderArchive.SortRuleArchive.Direction"*
Direction
ascending
descending
SortType
entire_table
row_range
TableSortOrderUIDArchive
type
2&.TST.TableSortOrderUIDArchive.SortType
rules
2-.TST.TableSortOrderUIDArchive.SortRuleArchive
SortRuleArchive
column_uid
.TSP.UUID
direction
27.TST.TableSortOrderUIDArchive.SortRuleArchive.Direction"*
Direction
ascending
descending
SortType
entire_table
row_range
SortRuleReferenceTrackerArchive
reference_tracker
.TSP.Reference"1
CellRegion
cell_ranges
.TST.CellRange"E
CellUIDRegionArchive
cell_uid_ranges
.TSP.UUIDRectArchive"
StructuredTextImportRecord
import_settings
2!.TSK.StructuredTextImportSettings
import_source
import_date
source_data
source_encoding
confidence
imported_region
.TST.CellRegion
source_row_count
source_column_count
TableModelArchive
table_id
from_table_id
was_cut
table_style
.TSP.Reference
body_text_style
.TSP.Reference
header_row_text_style
.TSP.Reference
header_column_text_style
.TSP.Reference
footer_row_text_style
.TSP.Reference
body_cell_style
.TSP.Reference
header_row_style
.TSP.Reference
header_column_style
.TSP.Reference
footer_row_style
.TSP.Reference
table_name_style
.TSP.Reference
table_name_shape_style
.TSP.Reference
table_style_preset
.TSP.Reference
preset_index
base_data_store
.TST.DataStore
provider
.TSP.Reference
number_of_rows
number_of_columns
table_name
table_name_enabled
table_name_height
table_name_border_enabled
number_of_header_rows
number_of_header_columns
number_of_footer_rows
header_rows_frozen
header_columns_frozen
number_of_hidden_rows
number_of_hidden_columns
number_of_user_hidden_rows
number_of_user_hidden_columns
number_of_filtered_rows
default_row_height
default_column_width
origin_offset
.TST.CellIDB
repeating_header_rows_enabled
style_apply_clears_all
 repeating_header_columns_enabled
&hidden_state_formula_owner_for_columns
.TSP.Reference
#hidden_state_formula_owner_for_rows
.TSP.Reference
row_filter_set_pre_pivot
.TSP.Reference
"conditional_style_formula_owner_id
.TSP.CFUUIDArchive
sort_order
.TST.TableSortOrderArchive
sort_rule_reference_tracker
2$.TST.SortRuleReferenceTrackerArchive
base_column_row_uids
.TSP.Reference
merge_owner
.TST.MergeOwnerArchive
stroke_sidecar
.TSP.Reference
preset_needs_strong_ownership
text_import_record
.TST.StructuredTextImportRecord
category_level_1_style
.TSP.Reference
category_level_2_style
.TSP.Reference
category_level_3_style
.TSP.Reference
category_level_4_style
.TSP.Reference
category_level_5_style
.TSP.Reference
category_level_1_text_style
.TSP.Reference
category_level_2_text_style
.TSP.Reference
category_level_3_text_style
.TSP.Reference
category_level_4_text_style
.TSP.Reference
category_level_5_text_style
.TSP.Reference
hidden_states_owner
.TST.HiddenStatesOwnerArchive
label_level_1_style
.TSP.Reference
label_level_2_style
.TSP.Reference
label_level_3_style
.TSP.Reference
label_level_4_style
.TSP.Reference
label_level_5_style
.TSP.Reference
label_level_1_text_style
.TSP.Reference
label_level_2_text_style
.TSP.Reference
label_level_3_text_style
.TSP.Reference
label_level_4_text_style
.TSP.Reference
label_level_5_text_style
.TSP.Reference
category_owner_deprecated
.TST.CategoryOwnerArchive
pencil_annotation_owner
2!.TST.PencilAnnotationOwnerArchive
from_group_by_uid
haunted_owner
.TSCE.HauntedOwnerArchive
pivot_owner
.TSP.Reference
category_owner
.TSP.Reference
pivot_body_summary_row_style
.TSP.Reference
pivot_body_summary_column_style
.TSP.Reference
!pivot_header_column_summary_style
.TSP.Reference
pivot_value_types_by_col
pivot_date_grouping_columns
pivot_date_grouping_types
SummaryModelArchive
table_info
.TSP.Reference
data_store
.TST.DataStore
column_row_uids
.TSP.Reference
aggregate_formula_owner_uuid
.TSP.UUID
summary_cell_vendor
.TSP.Reference
category_column_width
summary_row_level_1_height
summary_row_level_2_height
summary_row_level_3_height
summary_row_level_4_height
summary_row_level_5_height
 summary_label_row_level_1_height
 summary_label_row_level_2_height
 summary_label_row_level_3_height
 summary_label_row_level_4_height
 summary_label_row_level_5_height
label_row_visibility_1
label_row_visibility_2
label_row_visibility_3
label_row_visibility_4
label_row_visibility_5
summary_row_height_list
label_row_height_list
label_row_visibility_list
group_sort_order
2".TST.TableGroupSortOrderUIDArchive"
%SummaryModelGroupByChangeStateArchive
cell_map
.TSP.Reference
summary_row_height_list
label_row_height_list
label_row_visibility_list
ColumnRowUIDMapArchive
sorted_column_uids
.TSP.UUID
column_index_for_uid
column_uid_for_index
sorted_row_uids
.TSP.UUID
row_index_for_uid
row_uid_for_index
StrokeLayerArchive
row_column_index
stroke_runs
2(.TST.StrokeLayerArchive.StrokeRunArchive
StrokeRunArchive
origin
length
stroke
.TSD.StrokeArchive
order
StrokeSidecarArchive
max_order
column_count
row_count
left_column_stroke_layers
.TSP.Reference
right_column_stroke_layers
.TSP.Reference
top_row_stroke_layers
.TSP.Reference
bottom_row_stroke_layers
.TSP.Reference"
DurationWrapperArchive"
Cell
valueType
.TST.CellValueType
cell_style
.TSP.Reference
text_style
.TSP.Reference
numberValue
stringValue
boolValue
current_format
.TSK.FormatStructArchive
formulaError
.TSP.Reference
number_format
.TSK.FormatStructArchive
currency_format
.TSK.FormatStructArchive
duration_format
.TSK.FormatStructArchive
date_format
.TSK.FormatStructArchive
custom_format
.TSK.FormatStructArchive
base_format
.TSK.FormatStructArchive
explicit_format_flags
richText
.TSP.Reference
conditional_style
.TSP.Reference
comment_storage
.TSP.Reference
conditional_style_applied_rule
import_warning_set
.TST.ImportWarningSetArchive
custom_format_object
.TSK.CustomFormatArchive
cell_border
.TST.CellBorderArchive
cell_spec
.TST.CellSpecArchive
cell_format_kind
text_format
.TSK.FormatStructArchive
boolean_format
.TSK.FormatStructArchive
decimal_value_low
decimal_value_high
MergeRegionMapArchive
cell_range
.TST.CellRange"
CellMapArchive
cell_tiles
.TSP.Reference
uid_based
expanded_cell_ids
.TSCE.CellCoordinateArchive
cell_uid_list
.TST.CellUIDListArchive
merge_uid_ranges
.TSP.UUIDRectArchive
unmerge_uid_ranges
.TSP.UUIDRectArchive
merge_actions
.TST.MergeOperationArchive
may_modify_formulas_in_cells
true
(may_modify_values_referenced_by_formulas
true"
CellListArchive
cells
2!.TST.CellListArchive.OptionalCell
trailing_empty_cell_count
OptionalCell
cell
.TST.Cell"
ConcurrentCellMapArchive
cell_lists
.TSP.Reference
uid_based
merge_actions
.TST.MergeOperationArchive
may_modify_formulas_in_cells
true
(may_modify_values_referenced_by_formulas
true"
ConcurrentCellListArchive
cells
2+.TST.ConcurrentCellListArchive.OptionalCell
cell_uid_range
.TSP.UUIDRectArchive
cell_range
.TST.CellRange
OptionalCell
cell
.TST.Cell"
CellFormatAndValueArchive
valueType
.TST.CellValueType
numberValue
stringValue
boolValue
richTextStorage
.TSP.Reference
use_all_spare_formats
explicit_flags
cell_format_kind
number_format
.TSK.FormatStructArchive
currency_format
.TSK.FormatStructArchive
date_format
.TSK.FormatStructArchive
duration_format
.TSK.FormatStructArchive
text_format
.TSK.FormatStructArchive
boolean_format
.TSK.FormatStructArchive
formatted_value
formatted_rich_text_value
.TSP.Reference
apply_spare_format_only
spare_format_type
decimal_low
decimal_high
suppress_apply_value
CellSpecArchive
interaction_type
formula
.TSCE.FormulaArchive
range_control_min
range_control_max
range_control_inc
chooser_control_popup_model
.TSP.Reference
chooser_control_start_w_first
%category_summary_should_display_label
CommentStorageWrapperArchive
comment_storage
.TSP.Reference"
CellDiffArchive
property_map_to_set
.TSS.CommandPropertyMapArchive
property_map_to_reset
.TSS.CommandPropertyMapArchive"5
CellDiffArray
large_array
.TSP.LargeArray"s
CellDiffArraySegment
large_array_segment
.TSP.LargeArraySegment
elements
.TST.CellDiffArchive"
CellDiffMapArchive
uid_based
expanded_cell_ids
.TSCE.CellCoordinateArchive
cell_uids
.TST.CellUIDListArchive
cell_diff_array
.TSP.Reference"
HierarchicalCellDiffMapArchive
num_row_rules
num_column_rules
row_header_uids
.TSP.UUID
column_header_uids
.TSP.UUID
aggregate_rule_uids
.TSP.UUID
active_flattening_dimension
.TST.TableDimensionArchive
row_value_uids
.TSP.UUID
row_level_preorder
column_value_uids
.TSP.UUID
column_level_preorder
cell_diff_storage
2,.TST.HierarchicalCellDiffMapArchive.BoxedRow
row_sizes
column_sizes
BoxedRow
column_index_set
.TSP.IndexSet
cell_diff_list
.TST.CellDiffArchive"
DoubleStyleMapArchive
capacity
count
cell_map_entry
25.TST.DoubleStyleMapArchive.DoubleStyleMapEntryArchive
DoubleStyleMapEntryArchive
cell_id
.TST.CellID
old_style
.TSP.Reference
new_style
.TSP.Reference"
StyleTableMapArchive
capacity
count
map_entry
23.TST.StyleTableMapArchive.StyleTableMapEntryArchive
StyleTableMapEntryArchive
old_style
.TSP.Reference
new_style
.TSP.Reference"
SelectionArchive
tableModel
.TSP.ReferenceB
selection_type
.TST.SelectionTypeArchive
anchor_cell
.TST.CellID
cell_ranges
.TST.CellRange
base_ranges
.TST.CellRange
cursor_cell
.TST.CellID
table_info
.TSP.Reference
cell_uid_region
.TST.CellUIDRegionArchive
base_uid_region
.TST.CellUIDRegionArchive
anchor_cell_uid
.TSP.UUIDCoordArchive
cursor_cell_uid
.TSP.UUIDCoordArchive"
)DeathhawkRdar39989167CellSelectionArchive
table_info
.TSP.Reference
selection_type
.TST.SelectionTypeArchive
cell_uid_region
.TST.CellUIDRegionArchive
base_uid_region
.TST.CellUIDRegionArchive
anchor_cell_uid
.TSP.UUIDCoordArchive
cursor_cell_uid
.TSP.UUIDCoordArchive"&
StrokeSelectionArchive
mask
ControlCellSelectionArchive"
StockCellSelectionArchive"
TableNameSelectionArchive"p
AutofillSelectionArchive
source_cell_range
.TST.CellRange
target_cell_range
.TST.CellRange"f
FilterRulePrePivotArchive
predicate
2$.TST.FormulaPredicatePrePivotArchive
disabled
FilterRuleArchive
predicate
.TST.FormulaPredicateArchive"
TableStyleArchive
super
.TSS.StyleArchive
override_count
table_properties
2 .TST.TableStylePropertiesArchive"
CellStyleArchive
super
.TSS.StyleArchive
override_count
cell_properties
.TST.CellStylePropertiesArchive"
FormulaPredArgDataArchive
double_value
decimal_low
decimal_high
string_value
date_value
duration_timeinterval
duration_units
boolean_value
FormulaPredArgArchive
arg_type
arg_value
.TST.FormulaPredArgDataArchive
base_cell_ref
.TSCE.CellReferenceArchive
relative_cell_ref
.TSCE.RelativeCellRefArchive
category_ref
.TSCE.CategoryReferenceArchive
uid_tract_list
2).TSCE.ASTNodeArrayArchive.ASTUidTractList
host_cell_coord
.TSCE.CellCoordinateArchive
preserve_row
preserve_column
list_entries
.TST.FormulaPredArgDataArchive
view_tract_ref
.TSCE.ViewTractRefArchive"
FormulaPredicatePrePivotArchive
formula
.TSCE.FormulaArchive
predicate_type
qualifier1
qualifier2
param_index1
param_index2
param_index0
FormulaPredicateArchive
predicate_type
qualifier1
qualifier2
param_value0
.TST.FormulaPredArgArchive
param_value1
.TST.FormulaPredArgArchive
param_value2
.TST.FormulaPredArgArchive
formula
.TSCE.FormulaArchive
for_conditional_style
host_table_uid
.TSP.UUID
host_column_uid
.TSP.UUID
host_row_uid
.TSP.UUID"
ConditionalStyleSetArchive
ruleCount
rules_prepivot
2<.TST.ConditionalStyleSetArchive.ConditionalStyleRulePrePivot
rules
25.TST.ConditionalStyleSetArchive.ConditionalStyleRules
ConditionalStyleRulePrePivot
predicate
2$.TST.FormulaPredicatePrePivotArchive
cell_style
.TSP.Reference
text_style
.TSP.Reference
ConditionalStyleRule
predicate
.TST.FormulaPredicateArchive
cell_style
.TSP.Reference
text_style
.TSP.Reference
ConditionalStyleRules
rule
24.TST.ConditionalStyleSetArchive.ConditionalStyleRule"
FilterSetArchive
type
2#.TST.FilterSetArchive.FilterSetType:
FilterSetArchiveTypeAll
is_enabled
true
filter_rules_prepivot
.TST.FilterRulePrePivotArchive
 needs_formula_rewrite_for_import
false
filter_offsets
filter_enabled
filter_rules
.TST.FilterRuleArchive"I
FilterSetType
FilterSetArchiveTypeAll
FilterSetArchiveTypeAny
UniqueIndexArchive
column_uid
.TSP.UUID
unique_entries
2/.TST.UniqueIndexArchive.UniqueIndexEntryArchive
UniqueIndexEntryArchive
string_value
row_uids
.TSP.UUID"
HiddenStateExtentArchive
hidden_state_extent_uid
.TSP.UUID
hidden_states
2..TST.HiddenStateExtentArchive.RowOrColumnState
row_or_column_direction
22.TST.HiddenStateExtentArchive.RowOrColumnDirection
threshold_value
.TSCE.CellValueArchive
%needs_to_update_filter_set_for_import
false
collapsed_group_uids
.TSP.UUID
filter_set
.TSP.Reference
view_pivot_hidden_indexes
.TSCE.IndexSetArchive
view_only_filtered_indexes
.TSCE.IndexSetArchive
unique_indexes
.TST.UniqueIndexArchive
RowOrColumnState
row_or_column_uid
.TSP.UUID
user_hidden
filtered
RowOrColumnDirection
ColumnDirection
RowDirection
HiddenStatesArchive
hidden_states_uid
.TSP.UUID
column_hidden_state_extent
.TST.HiddenStateExtentArchive
row_hidden_state_extent
.TST.HiddenStateExtentArchive"i
HiddenStatesOwnerArchive
owner_uid
.TSP.UUID
hidden_states
.TST.HiddenStatesArchive"
ExpandCollapseStateArchive
uids_collapsed
.TSP.UUID
uids_expanded
.TSP.UUID
dimension
.TST.TableDimensionArchive"l
TokenAttachmentArchive
super
.TSWP.UIGraphicalAttachment
expressionNode
.TSP.Reference"8
FormulaArchive
expressionTree
.TSP.Reference"h
ExpressionNodeArchive
children
.TSP.Reference
first_index
last_index
BooleanNodeArchive
super
.TST.ExpressionNodeArchive
value
NumberNodeArchive
super
.TST.ExpressionNodeArchive
number
decimal_low
decimal_high
StringNodeArchive
super
.TST.ExpressionNodeArchive
value
IdentifierNodeArchive
super
.TST.ExpressionNodeArchive
identifier
symbol
ArrayNodeArchive
super
.TST.ExpressionNodeArchive
columns
rows
ListNodeArchive
super
.TST.ExpressionNodeArchive"V
OperatorNodeArchive
super
.TST.ExpressionNodeArchive
operatorChar
PostfixOperatorNodeArchive
super
.TST.OperatorNodeArchive"D
PrefixOperatorNodeArchive
super
.TST.OperatorNodeArchive"t
FunctionNodeArchive
super
.TST.ExpressionNodeArchive
functionIndex
invalidFunctionName
FunctionEndNodeArchive
super
.TST.ExpressionNodeArchive"[
DateNodeArchive
super
.TST.ExpressionNodeArchive
value
format
ReferenceNodeArchive
super
.TST.ExpressionNodeArchive
rangeReference
.TSCE.RangeReferenceArchive
preserve_flags
hostTableID
host_cell_ref
.TSCE.CellReferenceArchive
table_uid
.TSP.UUID
range_top_left
.TSP.UUIDCoordArchive
range_bottom_right
.TSP.UUIDCoordArchive
category_ref
.TSCE.CategoryReferenceArchive
uid_range_rect
.TSP.UUIDRectArchive"
DurationNodeArchive
super
.TST.ExpressionNodeArchive
timeinterval
smallest
largest
style
ArgumentPlaceholderNodeArchive
super
.TST.ExpressionNodeArchive
functionIndex
argumentIndex
mode
EmptyExpressionNodeArchive
super
.TST.ExpressionNodeArchive"
LetNodeArchive
super
.TST.ExpressionNodeArchive
whitespace_after_let
whitespace_after_identifier
whitespace_after_equals
whitespace_after_delimiter
InNodeArchive
super
.TST.ExpressionNodeArchive"d
VariableNodeArchive
super
.TST.ExpressionNodeArchive
identifier
symbol
LayoutHintArchive
isValid
cellRange
.TST.CellRange
hintID
.TST.CellID
maximumSize
.TSP.Size
partitionPosition
horizontal
effectiveSize
.TSP.Size
partitioningPass
 CompletionTokenAttachmentArchive
super
.TST.TokenAttachmentArchive
completionText
caretPosition
prefixStart
HiddenStateFormulaOwnerArchive
owner_id
.TSP.CFUUIDArchive
threshold_value
.TSCE.CellValueArchive
%needs_to_update_filter_set_for_import
false"
FormulaStoreArchive
next_formula_index
formulas
2).TST.FormulaStoreArchive.FormulaStorePair
FormulaStorePair
formula_index
formula
.TSCE.FormulaArchive"
MergeOperationArchive
merge_type
.TST.MergeActionArchive
merge_ranges
.TSP.UUIDRectArchive
merge_formulas
.TSCE.FormulaArchive
merge_formula_indexes
MergeOwnerArchive
owner_id
.TSP.CFUUIDArchive
formula_store
.TST.FormulaStoreArchive"p
PencilAnnotationArchive
table_info
.TSP.Reference
pencil_annotation_storage
.TSP.Reference"
PencilAnnotationOwnerArchive
owner_id
.TSP.CFUUIDArchive
formula_store
.TST.FormulaStoreArchive
annotations
.TSP.Reference"
AccumulatorArchive
bool_count
number_count
date_count
duration_count
string_count
min_value
.TSCE.CellValueArchive
max_value
.TSCE.CellValueArchive
number_total_value
.TSCE.CellValueArchive
first_date_seen
.TSCE.CellValueArchive
total_secs_since_ref_date
secs_to_add
bool_true_count
error_count
is_circular_ref
product_value
.TSCE.CellValueArchive
no_content_count
GroupColumnArchive
column_uid
.TSP.UUID
grouping_type
grouping_functor
.TSCE.FunctorArchive
grouping_column_uid
.TSP.UUID"G
GroupColumnListArchive
group_column
.TST.GroupColumnArchive"
ColumnAggregateArchive
column_uid
.TSP.UUID
level
agg_type
show_as_type
column_aggregate_uid
.TSP.UUID
running_total_group_column_uid
.TSP.UUID"M
ColumnAggregateListArchive
aggregates
.TST.ColumnAggregateArchive"
GroupByArchive
group_by_uid
.TSP.UUID
group_column
.TST.GroupColumnArchive
group_node_root
2$.TST.GroupByArchive.GroupNodeArchive
aggregator
2%.TST.GroupByArchive.AggregatorArchive
column_agg_type
.TST.ColumnAggregateArchive
is_enabled
 indirect_agg_type_change_formula
.TSCE.CellCoordinateArchive
grouping_columns_formula
.TSCE.CellCoordinateArchive
aggs_in_group_root_formula
.TSCE.CellCoordinateArchive
grouping_column_headers_formula
.TSCE.CellCoordinateArchive
column_order_changed_formula
.TSCE.CellCoordinateArchive
row_order_changed_formula
.TSCE.CellCoordinateArchive
)row_order_changed_ignoring_recalc_formula
.TSCE.CellCoordinateArchive
owner_index
row_uid_lookup
.TSCE.UidLookupListArchive
hidden_states_changed_formula
.TSCE.CellCoordinateArchive
AggNodeArchive
formula_coord
.TSCE.CellCoordinateArchive
accum
.TST.AccumulatorArchive
child
2".TST.GroupByArchive.AggNodeArchive
GroupNodeArchive
group_uid
.TSP.UUID
child
2$.TST.GroupByArchive.GroupNodeArchive
row_uid
.TSP.UUID
agg_formula_coords
.TSCE.CellCoordinateArchive
format_manager
29.TST.GroupByArchive.GroupNodeArchive.FormatManagerArchive
group_cell_value
.TSCE.CellValueArchive
row_indexes
.TSCE.IndexSetArchive
row_lookup_uids
.TSCE.IndexSetArchive
FormatManagerArchive
cell_value
.TSCE.CellValueArchive
formats
.TSK.FormatStructArchive
row_sets
2G.TST.GroupByArchive.GroupNodeArchive.FormatManagerArchive.RowSetArchive
row_uid_lookup_sets
.TSCE.IndexSetArchive
RowSetArchive
row_uids
.TSP.UUID
AggregatorArchive
column_uid
.TSP.UUID
agg_node
2".TST.GroupByArchive.AggNodeArchive"[
CategoryOwnerArchive
owner_uid
.TSP.UUID
group_by
.TST.GroupByArchive";
CategoryOwnerRefArchive
group_by
.TSP.Reference"v
$PivotGroupingColumnOptionsMapArchive
uids
.TSP.UUID
flags
aggregate_rule_uids
.TSP.UUID"
PivotOwnerArchive
pivot_owner_uid
.TSP.UUID
grouping_columns_for_rows
.TST.GroupColumnListArchive
grouping_columns_for_columns
.TST.GroupColumnListArchive
aggregate_columns
.TST.ColumnAggregateListArchive
flattening_dimension
is_empty_pivot
source_table_uid
.TSP.UUID
refresh_timestamp
grpg_col_options_map
.TSP.Reference
hide_grand_total_rows
source_table_name
hide_grand_total_columns
formula_store
.TST.FormulaStoreArchive
refresh_uid
.TSP.UUID
row_column_rule_change_uid
.TSP.UUID
aggregate_rule_change_uid
.TSP.UUID"q
RichTextPayloadArchive
storage
.TSP.Reference
range
.TSP.Range
cellid
.TST.CellID"Q
#FormulaEqualsTokenAttachmentArchive
super
.TSWP.UIGraphicalAttachment"
CellFillStandIn
fill
.TSD.FillArchive
type_is_mixed
color_has_been_modified
color_is_mixed
first_color_has_been_modified
first_color_is_mixed
last_color_has_been_modified
last_color_is_mixed
gradient_type_has_been_modified
gradient_type_is_mixed
 gradient_angle_has_been_modified
gradient_angle_is_mixed
image_data_has_been_modified
image_data_is_mixed
tint_color_has_been_modified
tint_color_is_mixed
scale_has_been_modified
scale_is_mixed
technique_has_been_modified
technique_is_mixed
FormulaSelectionArchive
super
.TSWP.SelectionArchive
activeTokenCharIndex
CellBorderArchive
top_stroke
.TSD.StrokeArchive
top_stroke_order
right_stroke
.TSD.StrokeArchive
right_stroke_order
bottom_stroke
.TSD.StrokeArchive
bottom_stroke_order
left_stroke
.TSD.StrokeArchive
left_stroke_order
!DefaultCellStylesContainerArchive
table_style_network
.TSP.Reference
row_uids
.TSP.UUID
column_uids
.TSP.UUID
row_types
column_types
is_a_pivot_table
MultiTableRemapperArchive
mapping_purpose
2&.TST.MultiTableRemapperArchive.Purpose
should_steal_references
can_reuse_table_names
owner_uid_mapper
.TSCE.OwnerUIDMapperArchive
backing_tables_for_charts
.TSP.UUIDMapArchive
cross_document_paste
nested_inner_mapper
Purpose
DEFAULT
GROUPING
#PAGES_SECTION_DUPLICATION_NONCOLLAB
ChangePropagationMapWrapper
replacement_behavior
style_replace_prototypes
.TSP.Reference
style_replace_replacements
.TSP.Reference
style_modify_styles
.TSP.Reference
style_modify_old_prop_maps
.TSP.Reference
style_modify_new_prop_maps
.TSP.Reference
style_delete_prototypes
.TSP.Reference
style_delete_replacements
.TSP.Reference
table_preset_replace_prototype
.TSP.Reference
 table_preset_replace_replacement
.TSP.Reference
table_preset_delete_prototype
.TSP.Reference
table_preset_delete_replacement
.TSP.Reference"
SummaryCellVendorArchive
table_info
.TSP.Reference
entries
2..TST.SummaryCellVendorArchive.SummaryCellEntry
SummaryCellEntry
wildcardUID
.TSP.UUID
columnUID
.TSP.UUID
cell
.TST.Cell"[
CategoryOrderArchive
table_info
.TSP.Reference
uid_map
.TSP.Reference"4
PivotOrderArchive
uid_map
.TSP.Reference"
HeaderNameMgrTileArchive
first_fragment
last_fragment
name_frag_entries
21.TST.HeaderNameMgrTileArchive.NameFragmentArchive
NameFragmentArchive
name_fragment
name_precedent
.TSCE.CellCoordinateArchive
uses_of_name_fragment
.TSCE.UidCellRefSetArchive"
HeaderNameMgrArchive
owner_uid
.TSP.UUID
nrm_owner_uid
.TSP.UUID
per_tables
2).TST.HeaderNameMgrArchive.PerTableArchive
name_frag_tiles
.TSP.Reference
PerTableArchive
table_uid
.TSP.UUID
per_table_precedent
.TSCE.CellCoordinateArchive
is_deleted
header_row_uids
.TSP.UUID
header_column_uids
.TSP.UUID
update_header_row_uids
.TSP.UUID
update_header_column_uids
.TSP.UUID"K
WidthHeightCacheFittingEntry
fitting_index
fitting_size
WidthHeightCache
rows_fitting_entries
2!.TST.WidthHeightCacheFittingEntry
columns_count
LayoutEngineArchive
width_height_cache
.TST.WidthHeightCache*
CellType
genericCellType
spanCellType
numberCellType
textCellType
formulaCellType
dateCellType
boolCellType
durationCellType
formulaErrorCellType
automaticCellType
CellValueType
emptyCellValueType
numberCellValueType
stringCellValueType
providedCellValueType
dateCellValueType
boolCellValueType
durationCellValueType
errorCellValueType
richTextCellType
currencyCellValueType
TableDimensionArchive
dimensionNeither
dimensionRow
dimensionColumn
SelectionTypeArchive
deprecatedCellSelectionType
rowSelectionType
columnSelectionType
"deprecatedCellEditingSelectionType
 deprecatedTableNameSelectionType
deprecatedTableSelectionType
regionSelectionType
noSelectionType
FillDirectionArchive
kTSTFillDownArchive
kTSTFillUpArchive
kTSTFillRightArchive
kTSTFillLeftArchive
MergeActionArchive
mergeActionInsert
mergeActionRemove
mergeActionShrink
mergeActionGrow
HideShowActionArchive
hideShowActionHide
hideShowActionShow
import_warning_set
 .TSS.CommandPropertyEntryArchive
.TST.ImportWarningSetArchive:[
format_and_value
 .TSS.CommandPropertyEntryArchive
.TST.CellFormatAndValueArchive:N
cell_border
 .TSS.CommandPropertyEntryArchive
.TST.CellBorderArchive:]
comment_storage
 .TSS.CommandPropertyEntryArchive
2!.TST.CommentStorageWrapperArchive:J
cell_spec
 .TSS.CommandPropertyEntryArchive
.TST.CellSpecArchive
N3TST6CellIDE
N3TST24CellUIDLookupListArchiveE
N3TST18CellUIDListArchiveE
N3TST9TableSizeE
N3TST17ExpandedTableSizeE
N3TST9CellRangeE
N3TST17ExpandedCellRangeE
N3TST14TableSelectionE
N3TST11TileRowInfoE
N3TST4TileE
N3TST16TileStorage_TileE
N3TST11TileStorageE
N3TST24PopUpMenuModel_CellValueE
N3TST14PopUpMenuModelE
N3TST44ImportWarningSetArchive_FormulaImportWarningE
N3TST23ImportWarningSetArchiveE
N3TST34CellRefImportWarningSetPairArchiveE
N3TST32ImportWarningSetByCellRefArchiveE
N3TST23TableDataList_ListEntryE
N3TST13TableDataListE
N3TST20TableDataListSegmentE
N3TST16TableRBTree_NodeE
N3TST11TableRBTreeE
N3TST26HeaderStorageBucket_HeaderE
N3TST19HeaderStorageBucketE
N3TST13HeaderStorageE
N3TST9DataStoreE
N3TST16TableInfoArchiveE
N3TST19CategoryInfoArchiveE
N3TST18WPTableInfoArchiveE
N3TST24TableStyleNetworkArchiveE
N3TST53TableGroupSortOrderUIDArchive_GroupSortRuleUIDArchiveE
N3TST29TableGroupSortOrderUIDArchiveE
N3TST37TableSortOrderArchive_SortRuleArchiveE
N3TST21TableSortOrderArchiveE
N3TST40TableSortOrderUIDArchive_SortRuleArchiveE
N3TST24TableSortOrderUIDArchiveE
N3TST31SortRuleReferenceTrackerArchiveE
N3TST10CellRegionE
N3TST20CellUIDRegionArchiveE
N3TST26StructuredTextImportRecordE
N3TST17TableModelArchiveE
N3TST19SummaryModelArchiveE
N3TST37SummaryModelGroupByChangeStateArchiveE
N3TST22ColumnRowUIDMapArchiveE
N3TST35StrokeLayerArchive_StrokeRunArchiveE
N3TST18StrokeLayerArchiveE
N3TST20StrokeSidecarArchiveE
N3TST22DurationWrapperArchiveE
N3TST4CellE
N3TST21MergeRegionMapArchiveE
N3TST14CellMapArchiveE
N3TST28CellListArchive_OptionalCellE
N3TST15CellListArchiveE
N3TST24ConcurrentCellMapArchiveE
N3TST38ConcurrentCellListArchive_OptionalCellE
N3TST25ConcurrentCellListArchiveE
N3TST25CellFormatAndValueArchiveE
N3TST15CellSpecArchiveE
N3TST28CommentStorageWrapperArchiveE
N3TST15CellDiffArchiveE
N3TST13CellDiffArrayE
N3TST20CellDiffArraySegmentE
N3TST18CellDiffMapArchiveE
N3TST39HierarchicalCellDiffMapArchive_BoxedRowE
N3TST30HierarchicalCellDiffMapArchiveE
N3TST48DoubleStyleMapArchive_DoubleStyleMapEntryArchiveE
N3TST21DoubleStyleMapArchiveE
N3TST46StyleTableMapArchive_StyleTableMapEntryArchiveE
N3TST20StyleTableMapArchiveE
N3TST16SelectionArchiveE
N3TST41DeathhawkRdar39989167CellSelectionArchiveE
N3TST22StrokeSelectionArchiveE
N3TST27ControlCellSelectionArchiveE
N3TST25StockCellSelectionArchiveE
N3TST25TableNameSelectionArchiveE
N3TST24AutofillSelectionArchiveE
N3TST25FilterRulePrePivotArchiveE
N3TST17FilterRuleArchiveE
N3TST17TableStyleArchiveE
N3TST16CellStyleArchiveE
N3TST25FormulaPredArgDataArchiveE
N3TST21FormulaPredArgArchiveE
N3TST31FormulaPredicatePrePivotArchiveE
N3TST23FormulaPredicateArchiveE
N3TST55ConditionalStyleSetArchive_ConditionalStyleRulePrePivotE
N3TST47ConditionalStyleSetArchive_ConditionalStyleRuleE
N3TST48ConditionalStyleSetArchive_ConditionalStyleRulesE
N3TST26ConditionalStyleSetArchiveE
N3TST16FilterSetArchiveE
N3TST42UniqueIndexArchive_UniqueIndexEntryArchiveE
N3TST18UniqueIndexArchiveE
N3TST41HiddenStateExtentArchive_RowOrColumnStateE
N3TST24HiddenStateExtentArchiveE
N3TST19HiddenStatesArchiveE
N3TST24HiddenStatesOwnerArchiveE
N3TST26ExpandCollapseStateArchiveE
N3TST22TokenAttachmentArchiveE
N3TST14FormulaArchiveE
N3TST21ExpressionNodeArchiveE
N3TST18BooleanNodeArchiveE
N3TST17NumberNodeArchiveE
N3TST17StringNodeArchiveE
N3TST21IdentifierNodeArchiveE
N3TST16ArrayNodeArchiveE
N3TST15ListNodeArchiveE
N3TST19OperatorNodeArchiveE
N3TST26PostfixOperatorNodeArchiveE
N3TST25PrefixOperatorNodeArchiveE
N3TST19FunctionNodeArchiveE
N3TST22FunctionEndNodeArchiveE
N3TST15DateNodeArchiveE
N3TST20ReferenceNodeArchiveE
N3TST19DurationNodeArchiveE
N3TST30ArgumentPlaceholderNodeArchiveE
N3TST26EmptyExpressionNodeArchiveE
N3TST14LetNodeArchiveE
N3TST13InNodeArchiveE
N3TST19VariableNodeArchiveE
N3TST17LayoutHintArchiveE
N3TST32CompletionTokenAttachmentArchiveE
N3TST30HiddenStateFormulaOwnerArchiveE
N3TST36FormulaStoreArchive_FormulaStorePairE
N3TST19FormulaStoreArchiveE
N3TST21MergeOperationArchiveE
N3TST17MergeOwnerArchiveE
N3TST23PencilAnnotationArchiveE
N3TST28PencilAnnotationOwnerArchiveE
N3TST18AccumulatorArchiveE
N3TST18GroupColumnArchiveE
N3TST22GroupColumnListArchiveE
N3TST22ColumnAggregateArchiveE
N3TST26ColumnAggregateListArchiveE
N3TST29GroupByArchive_AggNodeArchiveE
N3TST66GroupByArchive_GroupNodeArchive_FormatManagerArchive_RowSetArchiveE
N3TST52GroupByArchive_GroupNodeArchive_FormatManagerArchiveE
N3TST31GroupByArchive_GroupNodeArchiveE
N3TST32GroupByArchive_AggregatorArchiveE
N3TST14GroupByArchiveE
N3TST20CategoryOwnerArchiveE
N3TST23CategoryOwnerRefArchiveE
N3TST36PivotGroupingColumnOptionsMapArchiveE
N3TST17PivotOwnerArchiveE
N3TST22RichTextPayloadArchiveE
N3TST35FormulaEqualsTokenAttachmentArchiveE
N3TST15CellFillStandInE
N3TST23FormulaSelectionArchiveE
N3TST17CellBorderArchiveE
N3TST33DefaultCellStylesContainerArchiveE
N3TST25MultiTableRemapperArchiveE
N3TST27ChangePropagationMapWrapperE
N3TST41SummaryCellVendorArchive_SummaryCellEntryE
N3TST24SummaryCellVendorArchiveE
N3TST20CategoryOrderArchiveE
N3TST17PivotOrderArchiveE
N3TST44HeaderNameMgrTileArchive_NameFragmentArchiveE
N3TST24HeaderNameMgrTileArchiveE
N3TST36HeaderNameMgrArchive_PerTableArchiveE
N3TST20HeaderNameMgrArchiveE
N3TST28WidthHeightCacheFittingEntryE
N3TST16WidthHeightCacheE
N3TST19LayoutEngineArchiveE
N6google8protobuf8internal16InternalMetadata9ContainerINS0_15UnknownFieldSetEEE
N6google8protobuf8internal16InternalMetadata13ContainerBaseE
TSTStylePropertyArchiving.proto
TSPMessages.proto
TSDArchives.proto
TSKArchives.proto
TSSArchives.proto
TSWPArchives.proto"
Deprecated_TableStrokeArchive
stroke
.TSD.StrokeArchive
background
opacity
empty
CellStylePropertiesArchive
cell_fill
.TSD.FillArchive
text_wrap
deprecated_top_stroke
2".TST.Deprecated_TableStrokeArchive
deprecated_right_stroke
2".TST.Deprecated_TableStrokeArchive
deprecated_bottom_stroke
2".TST.Deprecated_TableStrokeArchive
deprecated_left_stroke
2".TST.Deprecated_TableStrokeArchive
vertical_alignment
padding
.TSWP.PaddingArchive
top_stroke
.TSD.StrokeArchive
right_stroke
.TSD.StrokeArchive
bottom_stroke
.TSD.StrokeArchive
left_stroke
.TSD.StrokeArchive"
"Deprecated_StrokePresetDataArchive
deprecated_horizontal_stroke
2".TST.Deprecated_TableStrokeArchive
deprecated_vertical_stroke
2".TST.Deprecated_TableStrokeArchive
deprecated_exterior_stroke
2".TST.Deprecated_TableStrokeArchive
deprecated_visible_mask
StrokePresetDataArchive
horizontal_stroke
.TSD.StrokeArchive
vertical_stroke
.TSD.StrokeArchive
exterior_stroke
.TSD.StrokeArchive
visible_mask
StrokePresetListArchive
count
deprecated_preset
2'.TST.Deprecated_StrokePresetDataArchive
preset
.TST.StrokePresetDataArchive"
TableStylePropertiesArchive
banded_rows
banded_fill
.TSD.FillArchive
behaves_like_spreadsheet
auto_resize
&deprecated_header_row_separator_stroke
2".TST.Deprecated_TableStrokeArchive
#deprecated_header_row_border_stroke
2".TST.Deprecated_TableStrokeArchive
'deprecated_header_row_horizontal_stroke
2".TST.Deprecated_TableStrokeArchive
%deprecated_header_row_vertical_stroke
2".TST.Deprecated_TableStrokeArchive
&deprecated_header_column_border_stroke
2".TST.Deprecated_TableStrokeArchive
)deprecated_header_column_separator_stroke
2".TST.Deprecated_TableStrokeArchive
*deprecated_header_column_horizontal_stroke
2".TST.Deprecated_TableStrokeArchive
(deprecated_header_column_vertical_stroke
2".TST.Deprecated_TableStrokeArchive
&deprecated_footer_row_separator_stroke
2".TST.Deprecated_TableStrokeArchive
#deprecated_footer_row_border_stroke
2".TST.Deprecated_TableStrokeArchive
'deprecated_footer_row_horizontal_stroke
2".TST.Deprecated_TableStrokeArchive
%deprecated_footer_row_vertical_stroke
2".TST.Deprecated_TableStrokeArchive
.deprecated_table_body_horizontal_border_stroke
2".TST.Deprecated_TableStrokeArchive
,deprecated_table_body_vertical_border_stroke
2".TST.Deprecated_TableStrokeArchive
'deprecated_table_body_horizontal_stroke
2".TST.Deprecated_TableStrokeArchive
%deprecated_table_body_vertical_stroke
2".TST.Deprecated_TableStrokeArchive
stroke_preset_list
.TST.StrokePresetListArchive
v_strokes_visible
h_strokes_visible
hr_separator_visible
hc_separator_visible
footer_separator_visible
table_border_visible
table_header_border_visible
table_hc_divider_visible
table_hr_divider_visible
table_footer_divider_visible
OBSOLETE_master_font_size
master_font_family
writing_direction
.TSWP.WritingDirectionType
header_row_separator_stroke
.TSD.StrokeArchive
header_row_border_stroke
.TSD.StrokeArchive
header_row_horizontal_stroke
.TSD.StrokeArchive
header_row_vertical_stroke
.TSD.StrokeArchive
header_column_border_stroke
.TSD.StrokeArchive
header_column_separator_stroke
.TSD.StrokeArchive
header_column_horizontal_stroke
.TSD.StrokeArchive
header_column_vertical_stroke
.TSD.StrokeArchive
footer_row_separator_stroke
.TSD.StrokeArchive
footer_row_border_stroke
.TSD.StrokeArchive
footer_row_horizontal_stroke
.TSD.StrokeArchive
footer_row_vertical_stroke
.TSD.StrokeArchive
#table_body_horizontal_border_stroke
.TSD.StrokeArchive
!table_body_vertical_border_stroke
.TSD.StrokeArchive
table_body_horizontal_stroke
.TSD.StrokeArchive
table_body_vertical_stroke
.TSD.StrokeArchive
category_level1_top_stroke
.TSD.StrokeArchive
category_level2_top_stroke
.TSD.StrokeArchive
category_level3_top_stroke
.TSD.StrokeArchive
category_level4_top_stroke
.TSD.StrokeArchive
category_level5_top_stroke
.TSD.StrokeArchive
category_level1_bottom_stroke
.TSD.StrokeArchive
category_level2_bottom_stroke
.TSD.StrokeArchive
category_level3_bottom_stroke
.TSD.StrokeArchive
category_level4_bottom_stroke
.TSD.StrokeArchive
category_level5_bottom_stroke
.TSD.StrokeArchive
category_level1_interior_stroke
.TSD.StrokeArchive
category_level2_interior_stroke
.TSD.StrokeArchive
category_level3_interior_stroke
.TSD.StrokeArchive
category_level4_interior_stroke
.TSD.StrokeArchive
category_level5_interior_stroke
.TSD.StrokeArchive
&category_level1_label_separator_stroke
.TSD.StrokeArchive
&category_level2_label_separator_stroke
.TSD.StrokeArchive
&category_level3_label_separator_stroke
.TSD.StrokeArchive
&category_level4_label_separator_stroke
.TSD.StrokeArchive
&category_level5_label_separator_stroke
.TSD.StrokeArchive
(table_body_pivot_group_horizontal_stroke
.TSD.StrokeArchive
&table_body_pivot_group_vertical_stroke
.TSD.StrokeArchive
-table_body_pivot_deemphasis_horizontal_stroke
.TSD.StrokeArchive
)table_body_pivot_emphasis_vertical_stroke
.TSD.StrokeArchive
+header_column_pivot_group_horizontal_stroke
.TSD.StrokeArchive
+header_column_pivot_group_deemphasis_stroke
.TSD.StrokeArchive
$header_column_pivot_separator_stroke
.TSD.StrokeArchive
&header_row_pivot_group_vertical_stroke
.TSD.StrokeArchive
(header_row_pivot_group_deemphasis_stroke
.TSD.StrokeArchive
header_row_pivot_title_stroke
.TSD.StrokeArchive
&footer_row_pivot_group_vertical_stroke
.TSD.StrokeArchive"n
TableStylePresetArchive
index
image
.TSP.Reference
style_network
.TSP.Reference")
TableStrokePresetArchive
index
ThemePresetsArchive
table_style_presets
.TSP.Reference
table_cell_stroke_presets
.TSP.Reference2?
extension
.TSS.ThemeArchive
.TST.ThemePresetsArchive
N3TST29Deprecated_TableStrokeArchiveE
N3TST26CellStylePropertiesArchiveE
N3TST34Deprecated_StrokePresetDataArchiveE
N3TST23StrokePresetDataArchiveE
N3TST23StrokePresetListArchiveE
N3TST27TableStylePropertiesArchiveE
N3TST23TableStylePresetArchiveE
N3TST24TableStrokePresetArchiveE
N3TST19ThemePresetsArchiveE
!"#$%&'()*+,-./0123444456789:;<=>?@ABCDEFGHIJJJKLLLMNOOPQRSTUVWXYYZ[\\\\\\\\\\\\\\\\\\\]^_``````abcdefghijklmnopYYYYYYYYYYYYYYYY
-23
'67
?@
/ g 
"%"+"5"?"C"M"W"a"k"u"
#!#+#5#?#I#S#]#g#m#w#
$)$/$9$D$N$X$^$f$p$t$~$
%&%0%3%=%G%Q%Y%c%g%q%t%~%
&)&4&>&H&L&V&`&j&t&x&
'!'+'.'1';'E'O'Y'_'i's'{'
15TSTDefaultLexer
21TSTDefaultyyFlexLexer
9FlexLexer
 !"#$%&'()*+,-./
pSDA
xCuT
IAVW
?w@CR!"#$%&'()*+,-/0123
LH;<=>?I@
yz{|}~
UDJ@
XYZ[\]^_`abcdefg
hijk
456789:;<=>?
@456789:;<=>?
456789:;<=>?
AB:;<=>?C@
DDDDDDDDDDDDDDDDDD
()*46
DDDDDDDDDDDDDDDDBDDDD,DDD@
!&"%$'
DDDD
(+527
0318?:?D
012222222222222222222222222222333344444556667777777778899:;;<<==>>??
PNO 
'(23456789:>?????????????
????? !"#$%&'()*+-
2<=;<
3<?22???????????????????????
3>222222222222355>7>
6>????%??=<?22
??22
2%?2
2$?2
2#?2
2 ?2
2"?2
2!?2
2&?2
2(?2
2'?2
2*?2
2)?2
2+?2
?3%?2
?%?2
8,?7
!"#$%&'()*+,-./0123444456789:;<=>?@ABCDEFGHIJJJKLLLMNOOPQRSTUVWXYYZ[\\\\\\\\\\\\\\\\\\\]^_``````abcdefghijklmnopYYYYYYYYYYYYYYYY
r'r'o
r'r'r'
r'r'r'
r'r'r'r'`
r'r'r'r'
r'r'
r'r'
r'r'r'
" "*"."8"B"L"V"`"j"t"~"
# #*#4#>#H#R#X#b#l#p#z#
$$$/$9$C$I$Q$[$_$i$s$w$
%(%2%<%D%N%R%\%_%i%s%{%
&)&3&7&A&K&U&_&c&m&w&
'&'0':'D'J'T'^'f'
13TSTCommaLexer
18TSTignoreFlexLexer
$s8TSTables35TSTFixedColumnWidthGeometryProviderP
TSTFormulaAdditions
TSTGroupNode
TSTCellSelection
TSDTextSelection
NSObject
TSTRefParser
TSCERefParsingProtocol
TSTFormsSheetProvider
TSTTableModel
TSDMixing
TSTCompatibilityVersionProviding
TSTCustomStrokeProviding
TSTStyleProviding
TSTTableStrokeProviding
TSTTableTileCreating
TSTMutableCellIteratorData
TSTCellIteratorData
TSTTableTile
TSTWidthHeightCollection
TSTCellRangeControlSpec
TSTResolverContainerNameProvider
TSCECalculationEngineRegistration
TSKModel
TSTTableInfo
TSDContainerInfo
TSDInfo
TSPCopying
TSDInfoUsingObjectPlaceholderGeometry
TSKSearchable
TSSPresetSource
TSSStyleClient
TSCEColumnRowUIDMapping
TSTTableHiddenRowColumnProviding
TSTAdditionalHiddenRowColumnProviding
TSTTableInternalGeometryProviding
TSTTableMergeRangeProviding
TSWPStorageParent
TSWPTextStatisticsTrackerProvider
TSSPropertySource
CellMap
TSTRichTextReferenceWrapper
TSTCellIterating
TSTMergeListWrapper
TSTUIDRectRef
NSCopying
TSTCellIterator
TSTCellStyle
TSTInNode
TSTCSEData
TSTPivotTranslator
TSTStockDetails
TSTTableTileRowInfo
TSTExpandCollapseState
TSTCellFormulaSpec
TSCEFormulaReturning
TSTGroupingColumnList
TSTAdditions
TSTGroupBySet
TSTCellDiff
TSTConcurrentCellMap
TSTCellMapChangeDescriptorDelivering
TSTConcurrentCellList
TSTConcurrentSparseCellList
TSTCellDiffArraySegment
TSTStructuredTextImportRecord
TSTTableDataList
Type_Specific_API
Upgrade
TSTTableStyle
TSTArchivedCellSelection
TSKArchivedSelection
TSTArchivedRdar39989167CellSelection
TSTColumnAggregate
TSTTableTileStorage
TSTTableHeaderStorage
TSTEphemeralFilter
TSTTableHeaderStorageBucket
TSTFormulaStore
Analytics
TSTLayoutProcessChangesActions
TSWPStyleProviding
TSTLayout
TSWPColumnMetrics
TSWPLayoutParent
TSWPStorageObserver
TSTAccumulator
1qBA
TSTColumnAggregateList
Helper
TSTRangeRefPair
TSTRefNamer
TSCERefNamingProtocol
TSTCellDiffArray
TSTWPTableInfo
TSTStrokeSidecar
TSTStrokeSidecarLookupMap
TSCellRangeCache
TSTTableInfoHint
TSDDrawableContainerInfo
TSDReplaceableMediaContainer
TSDReducibleImageContainer
TSDCompatibilityAwareMediaContainer
TSDSelectableHintMediaContainer
TSTLayoutSpace
TSTCoordinateArray
TSTCellWillChangeProtocol
TSTCellWillChangeDistributor
TSTMergeChangeProtocol
TSTMergeChangeDistributor
TSTFormulaTokenContext
TSTVariableNode
TSTWPFormulaSelection
TSTWPFormulaArchivedSelection
TSTWPFormulaFieldSelection
TSTCellRegionGatherer
TSTAggregator
TSTTableStylePreset
TSSPreset
TSTHiddenStateIndexSet
TSTTableStrokePreset
TSTTableStyleNetwork
TSTLocalStylesKey
TSTLocalAccumulator
TSTTableArchivedControlCellSelection
TSTTableStrokePresetList
TSTTableStrokePresetData
TSTArchiving
TSTLayoutCellIterator
TSTExpressionNode
TSTFormulaToken
TSTFormula
TSTFormulaHelperMethods
ValidationSidecarAdditions
TSTCellChooserControlSpec
TSTHiddenStateFormulaOwner
TSTOperatorNode
TSTStrokeSelection
TSTCustomFormatListUpgradeHelper
TSTCustomFormatListReferenceWrapper
TSTTableControlCellSelection
TSTNumberNode
TSTCell_PreBNC
TSTCellMap
TSTCellMapIterator
TSTCellList
TSTStrokeWidthCache
TSTTableNameSelection
TSTColumnRowUIDMap
TSTImmutableColumnRowUIDMap
TSTCategoryOwner
TSTAggNode
TSTFunctionNode
TSTLetNode
TSTSummaryModel
TSTGroupByChangeProtocol
TSTSummaryModelGroupByChangeState
TSTRWRetainedPointerKeyDictionary
TSTCellToggleControlSpec
TSTStrokeOrderedLayerToken
TSTStrokeLayerStrokeAndRange
TSTStrokeOrderedLayer
TSTFormulaPredArgData
TSTFormulaPredArg
TSTHiddenStatesOwner
TSTBooleanNode
TSTArrayNode
TSTListNode
TSTGroupNodeFormatManager
TSTWPLayout
TSTStringNode
TSTCellUIDRegion
TSTDateNode
TSTReferenceNode
TSTStarRatingRenderer
TSTPencilAnnotation
TSKPencilAnnotation
TSTDurationNode
TSTArgumentPlaceholderNode
TSTPostfixOperatorNode
TSTStrokeDefaultVendor
TSTUidCoordsForLevelAndType
TSTUidCoordsPerGroupValueTuple
TSTUidCoordsPerRunningCellValue
TSTRunningTotalContext
TSTPrefixOperatorNode
TSTFunctionEndNode
TSTCellFormatAndValue
TSTCellDiffing
TSSPropertyCommandSerializing
TSTLayoutValidationBundle
TSTPivotOwner
TSCEFormulaOwning
TSCETableNameChangeProtocol
TSTWPRep
TSTHiddenStates
TSTStrokeSidecarIterator
TSTCellRegionIterating
TSTMutableCellIteratorDataUpdating
TSTGroupBy
TSTCellUIDLookupListWrapper
TSTTableGroupSortRuleUID
TSTEmptyExpressionNode
TSTCellBorder
TSTStrokeLayerEnumerating
TSTStrokeLayerAbstractStack
TSTStrokeLayerStack
TSTStrokeLayerMergedStack
TSTStrokeExporter
TSTUniqueValuesToRows
TSTHiddenStateExtent
TSTMergeOwner
TSTCellSpec
TSTSortRuleReferenceTracker
TSTAutofillSelection
TSTLayoutEngine
'2R2
TSTLayoutHint
TSDHint
TSTArchivedLayoutHint
TSDArchivedHint
CellDiffAdditions
TSTTablePartitionerParticipating
TSTTablePartitioner
TSDPartitioner
TSTLayoutSpaceBundle
TSTTableDataListSegment
TSTConcurrentCellIterator
TSTConcurrentCellIteratorFourArgRock
TSTMergeAction
TSTCellUIDList
TSTCellUIDIterator
TSTGroupByChangeDelayedNotification
TSTGroupByChangeDistributor
TSTTableTileGroup
TSTMergeRegionMap
TSTFormulaRewrite_PivotInfo
TSTPencilAnnotationOwner
TSTPivotGroupingColumnOptions
TSTPivotGroupingColumnOptionsMap
TSTWidthHeightCache
TSTChangeDescriptor
TSTCustomFormatList
TSTTextEngineDelegate
TSWPTextDelegate
TSTTableSortOrder
TSTLayoutTask
TSTConcurrentMutableCellUIDSet
TSTCellStateForLayout
TSTWPTokenAttachment
TSTPivotRowColumnOrder
TSTCompletionToken
TSTStrokeLayerToken
TSTStrokeLayer
NSMutableCopying
TSTMutableStrokeLayer
TSTConcurrentStylesheetKey
TSTConcurrentStylesheet
TSTAnimation
TSTFontInfoCacheEntry
TSTFontInfoCache
TSTIndexingChunk
TSTHeaderNameMgrTile
TSTHeaderNameSubset
TSTHeaderNameMgr
TSCEHeaderNameProtocol
TSTCellDiffMap
TSTTableSortRule
TSTTableViewSortRule
TSTGroupValueTuple
TSTCheckboxRenderer
TSTMergeRangeSortedSet
TSTLayoutContentCachedKey
TSTLayoutDynamicResizeInfo
TSTLayoutDynamicResizeInfoProtocol
TSTColumnRowUIDMapper
TSTCategoryStoreIterator
Q"!Q
ReferenceResolving
TSCEReferenceResolving
TablesAdditions
TSTCategoryAggregateFormulaOwner
TSTRichTextPayload
TSTSummaryCellVendor
TSTTableFilterRule
TSTTableFilterSet
TSTFormulaPredicate
TSTArchivedStrokeSelection
TSTTableBadge
BadgeRendering
TSTCellRegion
ModelCoordinateSupport
ViewCoordinateSupport
TSTMutableCellRegion
TSTCellRegionRowMajorIterator
TSTCellRegionColMajorIterator
TSTCellRegionRowMajorReverseIterator
TSTCellRegionColumnMajorReverseIterator
TSTTableTranslator
TSCETableTranslatorProtocol
TSTStrokeExportCache
TSTIdentifierNode
TSTTableHeaderInfo
TSTTemporaryCollectionNode
TSTConditionalStyleRule
TSTConditionalStyleSet
TSTConcurrentMutableIndexSet
TSTConditionalStyleFormulaOwner
TSTLayoutDynamicResizeInfoUnify
TSTLayoutDynamicResizeInfoAccordion
TSTCategoryOrder
TSTPasteMap
TSTTableSortTag
ChangeGroups
TSTColumnRowMetadata
TSTContentComposingIterator
Reorganize
TSTCategoryTranslator
TSTFilteredTableDynamicContentDelegate
TSTLayoutDynamicContentProtocol
TSTHiddenRowsColumnsCacheValidationCollection
TSTHiddenRowsColumnsCache
Coercion
TSTDataStoreIterator
TSTArchivedLayoutEngineBundle
TSTFormulaEqualsTokenAttachment
TSTFormulaEqualsTokenAttachmentRenderer
TSWPGraphicalAttachmentRenderer
FormulaAdditions
TSTArchivedTableNameSelection
TSTPerformanceLogging
TSTGroupingColumn
TSTConvertFormulasForCategoriesByRewritingWrapper
TSTPivotStoreIterator
FormulaOwner
TSTStrokeAssociatedObject
TSTTableResolverFactory
TSCETableResolverFactoryProtocol
TSCEResolverLocatingProtocol
TSTImportWarningSet
TSTImportWarningSetByCellRef
TSTWrappedFormula
TSTChartReferenceFormula
TSTPopUpMenuModel
TSUMultipleChoiceListChoiceProviding
TSTTableDataObject
TSTTableDataCommentStorage
TSTTableDataConditionalStyleSet
TSTTableDataCustomFormat
TSTTableDataFormat
TSTTableDataCellSpec
TSTTableDataFormulaError
TSTTableDataImportWarningSet
TSTTableDataMultipleChoiceList
TSTTableDataRichText
TSTTableDataString
TSTTableDataStyle
TSTTableDataPayload
TSTCellDictionary
TSTDupContentCache
TSTWPColumnCache
TSTCell
TSTTableGroupSortOrderUID
TSTTableDataStore
TSTCellReorganizeValue
TSTCommentStorageWrapper
TSTLayoutSpaceBezierPathCacheKey
TSTLayoutSpaceBezierPathCache
TSTCommentHosting
TSDComment
TSDAnnotation
TSKAnnotation
TSTConfiguration
TSTFormulaRewriteSpec
TSTArchivedAutofillSelection
TSTTableRepProcessChangesActions
TSTTableRep
TSWPRepParent
TSDContainerRep
TSTTableRepInternal
UITextFieldDelegate
CALayerDelegate
TSTPdfTagger
TSKPdfTagger
TSDMasterDrawableDelegate
context
firstIndex
lastIndex
initWithContext:functionNode:firstIndex:lastIndex:
functionNode
children
count
arrayWithCapacity:
countByEnumeratingWithState:objects:count:
tokenAttachment
objectForKey:
expressionNode
deepCopyIntoContext:bakeModes:withTokenDict:
addObject:
arrayWithArray:
setChildren:
documentRoot
stylesheet
i_copyIntoContext:stylesheet:paragraphStyle:listStyle:bakeModes:resettingHostTableToMatch:referenceColorHelper:disableMenus:
string
writingDirectionForParagraphAtParIndex:
initWithContext:string:kind:stylesheet:paragraphStyle:listStyle:section:columnStyle:paragraphDirection:
defaultParagraphStyle
defaultListStyle
length
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:isFatal:description:
logBacktraceThrottled
range
attachmentIndexRangeForTextRange:
initWithCapacity:
attachmentAtAttachmentIndex:outCharIndex:
tokenType
removeObject:
p_processEndNode:startNode:bakeModes:tokenDict:
initWithContext:expressionNode:
copyIntoContext:bakeModes:
isLocalReference
tableUID
setHostTableUID:
baseBoundingBox
basePreserveFlags
setBaseRangeRef:preserveFlags:
setReferenceColorHelper:
suppressReferenceOptionsMenu
setObject:forUncopiedKey:
functionEndNode
setNeverShowsMenu:
characterAtIndex:
deleteRange:undoTransaction:
replaceCharactersInRange:withString:undoTransaction:
insertAttachmentOrFootnote:range:
anyObject
attachmentAtCharIndex:
performBlockIgnoringModifications:
enumerateAttachmentsOfClass:inTextRange:usingBlock:
stringWithFormat:
exceptionWithName:reason:userInfo:
isEqualToString:
isEqualToExpressionNode:
letString
p_rangeOfString:orNodeClass:range:
inString
whitespaceAndNewlineCharacterSet
characterIsMember:
takeText:withLanguage:
replaceText:withLanguage:atRange:
setLanguage:forCharRange:undoTransaction:
insertUIGraphicalAttachment:withLanguage:
stringWithFormulaPlainTextFromRange:
p_stringWithFormulaAsTextFromRange:returningTokenValues:
stringWithFormulaDetokenizedTextFromRange:
detokenizedText
appendString:
formulaPlainText
appendFormat:
p_detokenizeEverythingInRange:
p_detokenizeTokenAtCharIndex:
p_replaceTokenAtCharIndex:withText:
componentsSeparatedByString:
firstObject
p_replaceUnknownDirectionText:atRange:
subarrayWithRange:
p_replaceMixedDirectionText:atRange:
mutableCopy
alphanumericCharacterSet
documentLocale
isLanguageFormulasDirectionRightToLeft
replaceText:atRange:
substringToIndex:
deleteCharactersInRange:
i_copyIntoContext:stylesheet:
hasDamagedTokenAttachments
isFormulaSyntaxErrorEqual:
rangeOfLetWithinRange:
rangeOfInWithinRange:
previousNonWhitespaceOrNewlineIndexStartingAtIndex:
nextNonWhitespaceOrNewlineIndexStartingAtIndex:
takeText:
insertUIGraphicalAttachment:
stringWithFormulaPlainText
stringWithFormulaDetokenizedText
detokenizeEntireStorage
canonicalKeyString
UTF8String
groupByRootUid
groupValueUid
groupUid
groupValueTuple
groupValueTupleByAppendingValue:
initWithValueArray:
computedGroupValueTuple
groupBy
isForPivotTable
hiddenStates
rowHiddenStateExtent
hasActiveFilters
mutableFilteredIndexes
containsIndexes:
rowCount
initWithGroupCellValue:groupBy:atLevel:groupUid:children:
init
setParentNode:
initWithCellValue:
cellValue
currentLocale
cellValueWithArchive:locale:
addRowUid:
initWithArchive:forGroupBy:atLevel:
groupNodesByGroupUid
groupCellValue
setObject:forKey:
enumerateRowUidsWithBlock:
aggNodeForAggFormulaCoord:
setGroupNode:
addAggNode:
initWithArchive:forGroupBy:
dealloc
removeObjectForKey:
copy
encodeCellValueToArchive:
safeChildren
encodeToArchive:backwardCompat:
aggNodes
formulaCoord
encodeToArchive:forGroupBy:backwardCompat:
valueType
lookupKeyForRowUID:
foreachUuid:
setGroupBy:
setLocale:
customFormatList
updateWithCustomFormatList:
updateWithDocumentRoot:
removeAllObjects
addChild:withKey:
hasUnfilteredRows
addUUID:
p_addChildGroupUidsIntoSet:recursively:skipFiltered:
groupByUid
initWithGroupByUID:absGroupUid:columnUid:aggType:groupLevel:
groupLevel
canonicalKeyStringAtLevel:
findGroupNodeForValue:atLevel:locale:
componentAtIndex:
wordAtIndex:
hasPreserveFlag
trimmedStringStartingAtWord:
localizedBlankGroupName
caseInsensitiveCompare:
localizedErrorGroupName
localizedTrueGroupName
localizedTrueGroupNameForColumn
localizedFalseGroupName
localizedFalseGroupNameForColumn
locale
lowercaseStringWithLocale:
normalizedStringForCompare:
localizedStringForCellValue:categoryLevel:groupBy:
findGroupNodeForDisplayValuesFromSplitter:atLevel:startAtComponent:startAtWord:preserveFlags:
groupValueTupleByReplacingValue:atLevel:
mapPreviousGroupNodeUid:toUpdatedGroupNodeUid:
addChangesTo:forReplacingValue:atLevel:
groupValueTupleByRemovingValueAtLevel:
numberOfLevels
addChangesTo:forRemovingValueAtLevel:
groupValueTupleByPromotingValueAtLevel:toLevel:
addChangesTo:forPromotingValueAtLevel:toLevel:
groupValueTupleByDemotingValueAtLevel:toLevel:
addChangesTo:forDemotingValueAtLevel:toLevel:
groupValueAtLevel:
mergedFormatChangedByAddingRowUID:andCellValue:groupBy:
p_refreshGroupValue
didAddRowUID:toGroup:
prefixTupleToLevel:
didAddGroupNode:
insertRowUid:atRowIndex:forGroupValueTuple:atLevel:withLocale:createdGroupNodeCount:
aggregators
aggNodeForGroupNode:
isRebuildFormulasDeferred
setNeedsRebuildOfAggFormulas:
rebuildFormulasForAggNode:
containsRowUid:
mergedFormatChangedByRemovingRowUID:groupBy:
didRemoveRowUID:fromGroup:
removeRowUid:forGroupValueTuple:atLevel:withLocale:
willRemoveGroupNode:
removeChildForKey:
clearAllGroupNodes
allKeys
findKeyForRowUid:
removeRowUids:
categoryOwner
aggregator
columnUid
aggNodeForColumnUid:
addChild:
enumerateDirectChildren:
tableModel
cellRefsForRowIndexes:tableUID:
referenceToHiddenStateFromRow:toRow:
columnRowUIDMap
rowUidsAsVector
rowIndexesForUIDs:
cellRefsForAggNodesAtGroup:
anyAggregateTypeForColumnUID:
calcEngine
minion
emptyReferenceSetWrapper
insertCellRef:
insertRangeRef:
hiddenStatesChangedPrecedent
replaceFormulaAt:inOwner:precedents:replaceOptions:
removeFormulaAt:inOwner:
markCellRefAsDirty:
markOnlyDependentsDirty:
rowUIDForLookupKey:
uuidsAsVector
containsUuid:
reset
removeAllRowUids
clearEmptyNodes
parentNode
stringByReplacingOccurrencesOfString:withString:
localizedNameForBlankGroupForDocumentLocale:
localizedNameForErrorGroupForDocumentLocale:
tsceValue
tableInfo
columnDisplayNameForCategoryLevel:
localizedTrueStringForBooleanGroupWithString:documentLocale:
localizedFalseStringForBooleanGroupWithString:documentLocale:
trueString
falseString
displayString
errorValue
isCircularReferenceError
initWithString:locale:
localizedStringForKey:value:table:
compactQualifiedColumnNameForAggregateIndex:locale:
groupValueHierarchyStringWithDelimiterString:
groupValueHierarchyStringWithDelimiterString:namingContext:
quoteComponents
forFormulaPlainText
tsce_internationalWhitespaceCharacterSet
rangeOfCharacterFromSet:
tsce_newStringByForcingSingleQuoteEscapes:
isLeaf
isGroupUIDCollapsed:
unfilteredDirectChildGroupUids
directChildGroupUids
firstUidFromUIDSet:isRows:
groupNodeForGroupUid:
firstVisibleNodeUsingColumnRowUIDMap:forDimension:leafLevel:pivotTableHiddenExtent:
enumerateAllGroupsWithStop:withBlock:
enumerateGroupsBetweenLevel:andLevel:withStop:withBlock:
enumerateGroupsBetweenLevel:andLevel:withBlock:
groupNodeForRowUid:atLevel:
needFormulasForAggregateType:
groupUuid
groupValueUuid
labelUid
initAsRootNodeForGroupBy:
isBlankNode
isErrorNode
uidReturn
childGroupUids
unfilteredChildGroupUids
aggregateRefForType:atLevel:forColumnUid:
groupValueRefAtLevel:
groupValueHierarchyRefAtLevel:
updateGroupCellValueIfKeyMatches:
markAsDirtyWithCalcEngine:
markDependentsAsDirtyWithCalcEngine:
pivotOnlyRowIndexes
containsAnyRowUidInRowUidSet:
groupValueCellValue
groupValueCellValueForGroupBySet:aggIndex:appendAggregateName:
groupValueHierarchyForChart:
groupValueHierarchyForChart:groupBySet:aggIndex:appendAggregateName:
groupHierarchyTreeAsFiltered:usingOrder:forDimension:
enumerateGroupsAtLevel:withStop:withBlock:
enumerateGroupsAtLevel:withBlock:
nodePath
.cxx_destruct
.cxx_construct
_groupUid
_groupCellValue
_cachedGroupValueTuple
_groupBy
_groupLevel
_aggNodes
_children
_childrenLock
_rowUidsIndexSet
_pivotOnlyRowIndexes
_parentNode
_formatManager
_childNodesByRowUid
_disconnectedRowUids
T@"TSTGroupBy",N,V_groupBy
T{TSKUIDStruct=QQ},R,V_groupUid
T{TSKUIDStruct=QQ},R
T@"NSUUID",R
T@"TSTGroupValueTuple",R,N
T@"TSCECellValue",R,&,N,V_groupCellValue
TC,R,N,V_groupLevel
TI,R,N
TB,R,N
T@"TSTGroupNode",N,V_parentNode
T@"TSCEUIDSet",R,N
T^v,R,N
initWithDouble:
initWithString:
initWithDate:
initWithDuration:units:
initWithCategoryRef:
initWithViewTractRef:
initWithCrossTableRef:
setUidTractList:
initAsBadRefWithTableUID:uidTractList:
initWithTableUID:uidTractList:
absoluteGroupUid
groupByForUID:withCalcEngine:
translator
rowUIDForBaseRowIndex:
setAbsoluteGroupUid:
astNodeArrayCopy
translationFlags
initWithNodeArray:translationFlags:
cellUIDRegionFromCellRegion:
cellUIDForCellID:
initWithTableInfo:cellUIDRegion:anchorCellUID:cursorCellUID:baseCellUIDRegion:selectionType:searchReferenceRange:beginImplicitEditing:
baseTableModel
cellUIDRegionFromRegion:inTableModel:
initWithTableInfo:cellRegion:anchorCellID:cursorCellID:baseRegion:selectionType:searchReferenceRange:beginImplicitEditing:
initWithTableInfo:cellRegion:anchorCellID:cursorCellID:baseRegion:selectionType:
regionFromRange:
initWithTableInfo:cellRegion:anchorCellID:cursorCellID:baseRegion:
expandCellRangeToCoverMergedCells:
initWithTableInfo:cellRegion:anchorCellID:cursorCellID:selectionType:
initWithTableInfo:cellRange:type:anchorCellID:cursorCellID:
numberOfColumns
numberOfRows
initWithTableInfo:startingRowIndex:numberOfRows:
initWithTableInfo:startingColumnIndex:numberOfColumns:
cellRegion
regionOffsetBy:
anchorCellID
cursorCellID
baseRegion
selectionType
suitableAnchor
suitableCursor
regionFromRowIndices:columnRange:
regionFromColumnIndices:rowRange:
initWithTableInfo:andCellID:
cellIDForCellUID:
selectionWithTableInfo:cellID:
initWithTableInfo:cellRegion:
initWithTableInfo:rowIndices:
initWithTableInfo:columnIndices:
firstCellID
versionCounter
cellRegionFromCellUIDRegion:
p_cacheCellRegion:
invalidRegion
p_cacheBaseRegion:
cellCount
isRectangle
containsSingleCellOrMergeInTable:
mergeOriginForCellID:
sizeClass
initFromMessage:
addFinalizeHandler:
saveToMessage:
setWeakReference:message:
setIgnoreAndPreserveUntilModifiedRuleForField:message:
enumerateCellRangesUsingBlock:
containsCellID:
regionByAddingRange:
regionBySubtractingRange:
selectionAdjustedForVisibilityInTableInfo:alwaysCheckColumns:
isValidForInteraction
intersectingColumnsIndexSet
selectionWithTableInfo:columnIndices:
p_selectionRemovingHiddenRowsInTableInfo:
isAPivotTable
intersectingRowsIndexSet
selectionWithTableInfo:rowIndices:
p_selectionRemovingHiddenColumnsInTableInfo:
indexesOfVisibleRowsInRowRange:
regionByTrimmingAroundRowIndices:
indexesForSummaryRows
indexOfVisibleRowAfterAndIncludingRowAtIndex:
indexOfVisibleRowBeforeAndIncludingRowAtIndex:
tsu_intersectsIndexesInIndexSet:
containsIndex:
indexSetWithIndex:
regionFromColumnIndexes:rowIndexes:
selectionWithTableInfo:cellRegion:
boundingCellRange
indexesOfVisibleColumnsInCellRange:
regionByTrimmingAroundColumnIndices:
indexesForSummaryColumns
indexOfVisibleColumnAfterAndIncludingColumnAtIndex:
indexOfVisibleColumnBeforeAndIncludingColumnAtIndex:
equalsCellRange:
isCategorized
isGroupingRowCollapsed:
rowRangeUnderSummaryOrLabelRow:
addIndexesInRange:
copyWithZone:
isMemberOfClass:
isEqualToSelection:
anchorCellUID
cursorCellUID
searchReferenceRange
beginImplicitEditing
equalsCellRegion:
tableAreaForCellID:
containsCellRegion:
isSingleCellOrMergeRange:
hasMergeFragmentAtCellID:
canEditWithControlCellSubselectionInTable:
cellAtCellID:
hasControl
interactionType
headerColumnRange
intersectsCellRange:
headerRowRange
bodyRowRange
bodyColumnRange
footerRowRange
indexesForCategoryColumnsInRegion:
indexesForSummaryRowsInRegion:
indexesForLabelRowsInRegion:
containsCellsInSummaryRow
containsCellsInLabelRow
containsCellsInCategoryColumn
containsCellsInSummaryOrLabelRows
indexesForGroupingColumnsInRegion:
intersectsCellRegion:
isEmpty
indexesForSummaryAndLabelRowsInRegion:
containsOnlySpecialCategoryCells
containsOnlySpecialPivotCells
numberOfIntersectingColumns
categoryColumnIndex
intersectsColumn:
regionBySubtractingColumnIndexes:
indexesForSummaryAndLabelRows
tsu_indexSetByIntersectingWithIndexes:
layoutEngine
visibleRowIndices
visibleColumnIndices
indexesForNonSummaryBodyRows
indexesForNonSummaryBodyColumns
containsOnlyCellsInSummaryRow
canEditWithCellSubselectionInTable:
boundingTopLeftCellID
mergeRangeAtCellID:
newCell
getCell:atCellID:
isCategoryColumn:
isSummaryRow:
description
mergeRangesIntersectingRange:
containsCellRange:
groupLevelForGroupUid:
aggregateTypeForColumnUID:atGroupLevel:
chromeRangeRefForViewRangeRef:
setSuppressIdenticalEndReference:
setUseSymbolicNames:
setAllowSpanningColumnReferenceBodyQualifier:
namer
nameForChromeRangeRef:namingContext:
selectionWithTableInfo:cellUID:
archivedSelectionClass
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
isAtEndOfLine
T{_NSRange=QQ},R,N
initForUpgradeWithTableInfo:cellRegion:anchorCellID:cursorCellID:baseRegion:selectionType:
initWithTableInfo:cellRegion:anchorCellID:cursorCellID:
initWithTableInfo:selectionType:
initWithTableInfo:andCellRange:
initWithTableInfo:cellID:selectionType:
initWithTableInfo:rowOrColumn:index:count:
initWithTableInfo:andPreviousSelection:offsetBy:
isValid
logicalCellIDInTable:
initWithArchive:unarchiver:
saveToArchive:archiver:
initWithRdar39989167Archive:unarchiver:
selectionByExtendingWithCellRange:inTable:selectionType:cursorCell:
selectionByAddingCellRange:inTable:withAnchor:cursor:selectionType:
selectionByRemovingCellRange:inTable:withAnchor:cursor:selectionType:
selectionAdjustedForVisibilityInTableInfo:
selectionAdjustedForGeometryInTableInfo:
setCellRange:
selectionToBeginImplicitEditingInTableInfo:
selectionExpandedToCoverCollapsedRows
insert:atIndex:count:
remove:atIndex:count:
areCellsInTheSameRegionInTable:
containsSelection:
containsCell:
selectsSingleControlCellWithInteractionUIInTable:
containsHeaderColumns
containsHeaderRows
containsBodyRows
containsBodyColumns
containsFooterRows
containsCellsInCategoryColumnsOrRows
containsCellsInCategoryGroupingColumn
containsGroupValueCells
containsOnlyCellsInCategoryColumn
containsOnlyCellsInSummaryAndLabelRows
containsOnlySpecialCategoryOrPivotCells
containsOnlyGroupValueCells
canEditWithStockCellSubselectionInTable:
briefDescription
intersectsPartialMergeRangeInTable:
getAggregateType:
cellSelectionNameForContextAndActionMenus
setSearchReferenceRange:
setTableInfo:
cellUIDRegion
setCellUIDRegion:
setAnchorCellUID:
setCursorCellUID:
baseCellUIDRegion
setBaseCellUIDRegion:
cachedCellRegion
setCachedCellRegion:
cachedCellRegionVersionCounter
setCachedCellRegionVersionCounter:
cachedBaseRegion
setCachedBaseRegion:
cachedBaseRegionVersionCounter
setCachedBaseRegionVersionCounter:
_beginImplicitEditing
_selectionType
_tableInfo
_cellUIDRegion
_baseCellUIDRegion
_cachedCellRegion
_cachedCellRegionVersionCounter
_cachedBaseRegion
_cachedBaseRegionVersionCounter
_searchReferenceRange
_anchorCellUID
_cursorCellUID
T@"TSTTableInfo",W,N,V_tableInfo
T@"TSTCellUIDRegion",&,N,V_cellUIDRegion
T{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}},N,V_anchorCellUID
T{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}},N,V_cursorCellUID
T@"TSTCellUIDRegion",&,N,V_baseCellUIDRegion
T@"TSTCellRegion",&,N,V_cachedCellRegion
TQ,N,V_cachedCellRegionVersionCounter
T@"TSTCellRegion",&,N,V_cachedBaseRegion
TQ,N,V_cachedBaseRegionVersionCounter
valid
TB,R,N,GisValid
T@"TSTCellRegion",R,N
Tq,R,N,V_selectionType
T{TSUCellCoord=ISBB},R,N
TQ,R,N
TB,R,N,V_beginImplicitEditing
T{_NSRange=QQ},N,V_searchReferenceRange
T@"NSString",R,N
readWeakReferenceMessage:class:protocol:completion:
whitespaceCharacterSet
initWithCellRef:
setWasConstructedViaNames:
uppercaseString
setOverrideText:
setPreserveFlags:
arrayWithObject:
contextTableResolver
hasPrefix:
substringFromIndex:
referenceIsComplete
tsce_stringByUnescapingSingleQuotes
tsce_stringByUnescapingPartialQuotedString
headerNameMgr
headerCellsMatching:limitToTable:includePrefixes:
tsce_stringByAddingSingleQuoteEscapesIfNecessary
setNamesUsed:
array
tableResolverForTableUID:
localizedCaseInsensitiveIsEqual:toString:
anyRefForRangeForHeaderCell:usePreserveFlags:
referenceTextWithCalculationEngine:hostTableUID:
filterColons
rangeOfString:
rangeReference
rangeRef
compare:options:range:locale:
tsce_stringByFoldingForNamedReferenceMatchingWithLocale:
referencesMatchingInputAsPrefix
tsce_referenceComponentsSeparatedBySpace
componentsJoinedByString:
abortObject
isAborted
spanningRangeForHeaderCell:
subsetForReferenceName:limitToTable:includePrefixes:
headerCellsExactlyMatching:
headerCellsMatchingPrefix:
allHeaderCellRefsLimitedToTable:
stringInHeaderCell:
initWithRangeRef:
tsce_stringByAddingSingleQuoteEscapes
tsce_needsReferenceSingleQuoteEscaping
setOverrideTextAsTyped:
p_parseStringAsGeometricReferenceComponent:inResolver:outPreserveFlags:gettingReferencesMatchingInputAsPrefix:
addObjectsFromArray:
objectAtIndex:
preserveFlags
p_chromeReferencesForMixedReferences:calcEngine:
wasConstructedViaNames
parseAsBaseTableReference
p_chromeRangeRefForBaseRangeRef:calcEngine:
sheetName
setSheetNameUnquoted:
tableName
setTableNameUnquoted:
sheetNameUnquoted
tableNameUnquoted
contextResolver
resolverContainerMatchingName:
resolverMatchingName:
resolverMatchingName:contextResolver:
contextSheetName
resolverMatchingNameWithContextContainer:contextContainerName:
rest
resolverUID
setTableUID:
parseAsChromeRefWithParsingContext:
tableResolverForRefResolver:
tsce_referenceComponentsSeparatedByColon
p_parseStringAsReferenceComponentIntersection:inResolver:inTableNamed:preferredGeometricResolver:withParsingContext:
setReferencesMatchingInputAsPrefix:
setReferenceIsComplete:
namesUsed
referenceTextForAutocompleteWithCalculationEngine:hostTableUID:preserveFlags:inputString:inputStringIsComplete:
referenceTextForAutocompleteWithCalculationEngine:contextSheetName:preserveFlags:inputString:inputStringIsComplete:
referenceTextWithCalculationEngine:contextSheetName:
stringByAppendingString:
initWithContextTableResolver:
setContextSheetName:
setFilterColons:
setAbortObject:
anyRef
tsce_referenceComponentsSeparatedByPathDelimiter
p_parseComponentsOfReference:gettingSheetName:gettingTableName:gettingRest:
trimNames
whitespaceCharSet
stringByTrimmingCharactersInSet:
setSheetName:
setTableName:
setRest:
parseStringAsChromeReference:withParsingContext:
p_baseReferencesForChromeReferences:calcEngine:
p_baseRangeRefForChromeRangeRef:calcEngine:
resolverForTableUID:
parseR1C1Coord:containingCell:preserveFlagsOut:
rangeOfString:options:
substringWithRange:
hasSuffix:
setCharactersToBeSkipped:
scanInt:
isAtEnd
trimmedString
tableInfoForTableUID:withCalcEngine:
columnUIDForBaseColumnIndex:
viewColumnIndexForChromeColumnIndex:
columnUIDForColumnIndex:
wasQuoted
refPathSplitter
numComponents
aggregateFunction
aggregateTypeForAggregateLabel:
numWords
rangeOfString:options:range:
setAggregateFunction:
removeRefPathWordAtIndex:
p_findFirstColumnNameInComponent:tableName:refResolver:calcEngine:outPreserveFlags:usedWordCount:
objectLocale
setLocalizedBlankGroupName:
setLocalizedErrorGroupName:
setLocalizedTrueGroupName:
setLocalizedFalseGroupName:
columnIndexForColumnUID:
chromeColumnIndexForViewColumnIndex:
nameForChromeColumnIndex:inTable:useSymbolicNames:
setLocalizedTrueGroupNameForColumn:
setLocalizedFalseGroupNameForColumn:
groupNodeForGroupValueHierarchyFromSplitter:startAtComponent:startAtWord:preserveFlags:
initWithReferenceString:
setRefPathSplitter:
parseAsCategoryRefWithParsingContext:
p_parseAsCategoryRefWithSheet:tableName:columnNameAndGroupValuesStartAt:withParsingContext:
p_baseReferenceForChromeReference:calcEngine:
overrideText
overrideTextAsTyped
p_chromeReferenceForBaseReference:calcEngine:
baseTractRefForChromeTractRef:
boundingRangeRef
chromeTractRefForBaseTractRef:
initWithCalcEngine:
parseStringAsBaseReference:withParsingContext:
parseR1C1Reference:containingCell:preserveFlagsOut:
parseStringAsCategoryRef:withParsingContext:
parseAsTractRefWithParsingContext:
setWhitespaceCharSet:
_calcEngine
_whitespaceCharSet
T@"NSCharacterSet",&,N,V_whitespaceCharSet
T@"TSCECalculationEngine",R,W,N,V_calcEngine
willModify
initWithBaseTableModel:
willModifyForUpgrade
tableStylePreset
theme
presetsOfKind:
presetID
setTableStylePreset:
enumerateObjectsUsingBlock:
makeStyleMapper
mapTableStylesToStylesheet:withMapper:
p_clearDefaultStyles
tableStyle
setTableStyle:
bodyCellStyle
setBodyCellStyle:
headerRowCellStyle
setHeaderRowCellStyle:
headerColumnCellStyle
setHeaderColumnCellStyle:
footerRowCellStyle
setFooterRowCellStyle:
categoryLevel1CellStyle
setCategoryLevel1CellStyle:
categoryLevel2CellStyle
setCategoryLevel2CellStyle:
categoryLevel3CellStyle
setCategoryLevel3CellStyle:
categoryLevel4CellStyle
setCategoryLevel4CellStyle:
categoryLevel5CellStyle
setCategoryLevel5CellStyle:
labelLevel1CellStyle
setLabelLevel1CellStyle:
labelLevel2CellStyle
setLabelLevel2CellStyle:
labelLevel3CellStyle
setLabelLevel3CellStyle:
labelLevel4CellStyle
setLabelLevel4CellStyle:
labelLevel5CellStyle
setLabelLevel5CellStyle:
bodyTextStyle
setBodyTextStyle:
headerRowTextStyle
setHeaderRowTextStyle:
headerColumnTextStyle
setHeaderColumnTextStyle:
footerRowTextStyle
setFooterRowTextStyle:
categoryLevel1TextStyle
setCategoryLevel1TextStyle:
categoryLevel2TextStyle
setCategoryLevel2TextStyle:
categoryLevel3TextStyle
setCategoryLevel3TextStyle:
categoryLevel4TextStyle
setCategoryLevel4TextStyle:
categoryLevel5TextStyle
setCategoryLevel5TextStyle:
labelLevel1TextStyle
setLabelLevel1TextStyle:
labelLevel2TextStyle
setLabelLevel2TextStyle:
labelLevel3TextStyle
setLabelLevel3TextStyle:
labelLevel4TextStyle
setLabelLevel4TextStyle:
labelLevel5TextStyle
setLabelLevel5TextStyle:
tableNameStyle
setTableNameStyle:
tableNameShapeStyle
setTableNameShapeStyle:
pivotBodySummaryRowCellStyle
setPivotBodySummaryRowCellStyle:
pivotBodySummaryColumnCellStyle
setPivotBodySummaryColumnCellStyle:
pivotHeaderColumnSummaryCellStyle
setPivotHeaderColumnSummaryCellStyle:
sharedPropertiesProvider
designModeEnabled
validateTableStylesInSameStylesheetExpectingDocSS:
initWithLocale:
initWithContext:
calculationEngine
sharedTableConfiguration
initWithOwner:
setStorageParentToInfo:
unnamedTableString
tableNameEnabledInNewTables
initWithTableModel:
initWithBaseTable:
initWithTableInfo:baseTableUID:context:
initWithBaseTableUID:
initWithContext:ownerUID:
initWithRules:type:
styleNetwork
rootAncestor
setStyleNetwork:
tableSizeClass
setShouldUseWideRows:
verifySubOwnerUIDsUsed
initWithContext:columnUIDs:rowUIDs:
initWithContext:tableUID:columnRowUIDMap:styles:stylePreset:tableInfo:
objectUUID
initWithContext:tableUUID:numberOfRows:numberOfColumns:
initWithContext:fromSourceModel:region:tableInfo:waitForCalcEngine:formulaCoordSpace:
regionByIntersectingRange:
networkFromStyleProvider:
blockUntilRecalcIsCompleteWithTimeout:
rowUIDsForRowRange:
columnUIDsForColumnRange:
initWithContext:rowUids:columnUids:styles:stylePreset:tableInfo:
fromTableUID
fromGroupByUID
repeatingHeaderRowsEnabled
repeatingHeaderColumnsEnabled
headerRowsFrozen
headerColumnsFrozen
tableNameEnabled
tableNameBorderEnabled
setTableNameBorderEnabled:
tableNameHeight
setTableNameHeight:
styleApplyClearsAll
setStyleApplyClearsAll:
defaultRowHeight
setDefaultRowHeight:
defaultColumnWidth
setDefaultColumnWidth:
heightOfRowAtIndex:isDefault:
setHeight:ofRowAtIndex:
widthOfColumnAtIndex:isDefault:
setWidth:ofColumnAtIndex:
sortOrder
mergeOwner
mergeRangesIntersectingBaseCellRegion:
tableAreaForBaseCellCoord:
insertBaseMergeRange:
pencilAnnotationOwner
formulaStore
rangeFromFormulaAtIndex:useBoundingRange:
pencilAnnotationStorage
copyWithContext:
initWithTableInfo:pencilAnnotationStorage:
addAnnotation:withAnchorRange:
enumerateAnnotationsAndFormulasContainedInRegion:withBlock:
dataStore
hasPasteboardCustomFormats
copyPasteboardCustomFormatsFromDataStore:
coordinateMapper
initForCategorizedTableBaseToChromeRewriterWithSrcTableUID:srcTract:dstTableUID:destTract:coordMapper:
cellID
cell
clearDataListIDs
hasFormulaSyntaxError
formulaSyntaxError
setFormulaSyntaxError:
hasRichText
richTextValue
setRichTextValue:
hasCommentStorage
commentStorage
setCommentStorage:
cellSpec
asChooserControlSpec
popupModel
startWithFirstItem
popupCellSpec:startWithFirstItem:
setCellSpec:
hasFormula
formulaObject
setFormulaObject:
hasConditionalStyle
conditionalStyle
conditionalStyleFormulaOwnerUID
copyByRewritingWithContext:rewriteBlock:
setConditionalStyle:
setCell:atCellID:tableUID:calculationEngine:conditionalStyleOwner:ignoreFormula:clearImportWarnings:doRichTextDOLC:
p_iterateDataStoreCellsInRegion:searchFlags:usingBlock:
strokeSidecar
setStroke:forTopOfRow:order:columnRange:
setStroke:forBottomOfRow:order:columnRange:
setStroke:forLeftOfColumn:order:rowRange:
setStroke:forRightOfColumn:order:rowRange:
enumerateStrokesInRegion:usingTopStrokeBlock:usingBottomStrokeBlock:usingLeftStrokeBlock:usingRightStrokeBlock:
flattenStrokeOrder
numberOfHeaderRows
rows
addRowRange:
removeRowRange:
isRecalculationStarted
recalculationIsPaused
columns
columnUIDsForColumnIndexes:
rowUIDsForRowIndexes:
initForUpgradeWithTableModel:
p_updateMergesAndCellsAsPivotDataWithSourceModel:sourceRegion:sourceBodyRegion:
setCalcEngine:
dropAllTargets
removeValueForProperty:
updateTableRowColumnStylesWithBlock:
replaceRowsWithUids:
replaceColumnsWithUids:
clearAllMergeRanges
updateCalcEngineForTableSize
removeAllFormulasFromOwner:
conditionalStyleFormulaOwner
ownerUID
resetAlmostEverything
resetAllColumnRowSizes
resetMergeCache
enumerateIndexesUsingBlock:
rowUIDForRowIndex:
rowIndexForRowUID:
distantFuture
distantPast
pairWithFirst:second:
indexSet
initWithTableModel:baseRegion:flags:searchFlags:
initWithContext:uidBased:
rockWithFirst:second:third:fourth:
first
currentFormat
currentFormatIsExplicit
setCurrentFormat:isExplicit:
boolValue
setBoolValue:
dateValue
setDateValue:
durationTimeIntervalValue
setDurationTimeIntervalValue:
numberDecimalValue
setNumberDecimalValue:
currencyDecimalValue
setCurrencyDecimalValue:
stringValue
setStringValue:
clear
addCell:andCellID:
second
objectAtIndexedSubscript:
earlierDate:
setFirst:
laterDate:
setSecond:
third
addIndex:
addIndexes:
enumerateModelConcurrentlyUsingChunkBeginBlock:concurrentBlock:finalBlock:
indexSetWithIndexesInRange:
removeIndexes:
removeRowsAtBaseIndexes:
enumerateCellsWithIDsUsingBlock:
markOwnerAsDirty:
dateGroupingTypeForMinMaxDatePair:
initWithTableModel:baseRegion:flags:searchFlags:baseClampingRange:
iterateCellsUsingBlock:
isIdentityMapping
mappedIndexForSourceIndex:
appendCellMap:precopied:
timeIntervalSinceDate:
currentCalendar
components:fromDate:
month
isReadCancelled
insertNewRowsInIndexRange:
insertNewColumnsInIndexRange:
initWithDelegate:
cellMapWithContext:
inflateFromStorageRef:dataStore:suppressingTransmutation:
enumerateCellStoragesRowByRowToMaxID:getPreBNC:withBlock:
setCellsWithBaseCellMap:ignoreFormulas:skipDirtyingNonFormulaCells:
auditTilesForRowOverlapAndExtensionPastTableBounds:result:
logTableTileAuditStatus:withVersion:
p_auditTilesForRowOverlapAndExtensionPastTableBoundsWithVersion:
auditDatalistDuplicationReturningResult:
auditColumnRowCellCountsReturningResult:hasUndercounts:
confirmRefCountsReturningResult:
setUpgrading:
upgradeDataStoreCellStorageIfNeededWithTableUID:conditionalStyleOwner:
repairStyleDatalistStylesheetIfNecessary
p_auditTableHealthUpgradingFromVersion:
p_rebuildTheTable:
shouldUseWideRows
p_upgradeDefaultCellStylesForStrokeSidecar
mergeRanges
indexesOfUserHiddenRowsInCellRange:
showRowAtIndex:forAction:
indexesOfUserHiddenColumnsInCellRange:
showColumnAtIndex:forAction:
upgradeConditionalStylesToLinkedRefWithTableUID:
archivingCompatibilityVersion
embiggenTableForUpgrade
viewCellRegionForBaseCellRect:
NRM_formulaOwnerUID
supportsControlCells
forceLoadHeaderStorages
baseCellCoordForViewCellCoord:
clearValue
willBeRemovedFromDocumentRoot:
wasRemovedFromDocumentRoot:
willBeAddedToDocumentRoot:dolcContext:
wasAddedToDocumentRoot:dolcContext:
hasMismatchedFormatAndValue
formatType
setNumberDoubleValue:
setDefaultFormatForValue
customFormat
clearFormatOfType:
processCustomFormatsWithBlock:
removeControlCellSpec
cellStyle
cellStyleForCellWithEmptyStyleAtBaseCellCoord:isDefault:
setCellStyle:
isVariation
parent
defaultCellStyleForBaseCellCoord:
propertyMap
variationOfStyle:propertyMap:
textStyle
textStyleForCellWithEmptyStyleAtBaseCellCoord:isDefault:
setTextStyle:
defaultTextStyleForBaseCellCoord:
addFunctionUsesInFormula:atCellRef:outContainsVolatileFunction:
copyByClearingUids:containingTableUID:
validateAndRepair
addCell:atViewCellCoord:
initWithTableInfo:region:flags:searchFlags:
initWithContext:viewCellRect:
appendCellLists:
enumerateConcurrentlyUsingChunkBeginBlock:concurrentBlock:finalBlock:
hasCells
convertToUuidBasedCellMapUsingTableInfo:pruneCategorizedCells:
willApplyToTable:
prepareToApplyConcurrentCellMap:
containsCellBorderChanges
accumulateCurrentCellsConcurrently:suppressCellBorder:
setCellsConcurrently:ignoreFormula:clearImportWarnings:formulaReplacer:
didApplyConcurrentCellMap:
validate
dirtyCellsUsingFunction:
generateCategoryStylesConnectedToStylesheet:
defaultCellStyleForTableStyleArea:
addStyle:withParent:identifier:shouldDoDOLC:
defaultTextStyleForTableStyleArea:
upgradeForNewAggregateTypes:
generatePivotStylesConnectedToStylesheet:
scheduleRepairingSpanningFormulasInOwner:
endTrackingNamesInTableForLegacyNRM:
fileFormatVersion
messageVersion
initWithArchive:unarchiver:owner:
tsp_stringWithProtobufString:
isFromCopy
isCrossAppPaste
initWithArchive:unarchiver:forBaseTable:
initWithTableModel:ownerUID:
initWithArchive:unarchiver:forTableModel:
initFromArchive:
initFromArchive:unarchiver:
initWithArchive:unarchiver:forBaseTableUID:
hasPreUFFVersion
nsTableUID
setTableModelDuringUnarchive:
unpackAfterUnarchive:
p_upgradeMerges
updateForTableSize:
tsp_isInDocument
saveToArchive:archiver:isInTheDocument:
setStrongReference:message:
presetNeedsStrongOwnership
tsp_protobufString
isForCopy
numberOfHiddenRows
numberOfUserHiddenRows
mutableFilteredRowIndexes
numberOfHiddenColumns
numberOfUserHiddenColumns
encodeToArchive:
encodeToArchive:archiver:
backwardCompatibleToPrePivot
requiresDocumentVersion:featureIdentifier:
hiddenStatesOwner
hauntedOwner
filterSet
ruleCount
setIgnoreAndPreserveUntilModifiedRuleForFieldPath:message:
setIgnoreAndPreserveRuleForField:message:
setMessageVersion:
requiresDocumentVersion:
bodyRange
setTableRange:bodyRange:forTableUID:
markIndirectCallsAsDirty
ownerKindForOwnerUID:
importSettings
type
summaryModel
aggregateFormulaOwnerUID
hiddenStateOwnerForRowsUID
hiddenStateOwnerForColumnsUID
initWithTableUID:pasteBoardTableUID:hiddenStateOwnerForRowsUID:hiddenStateOwnerForColumnsUID:conditionalStyleOwnerUID:sortRuleReferenceTrackerOwnerUID:mergeOwnerUID:pencilAnnotationOwnerUID:categoryAggregatesOwnerUID:groupByUID:
ownerUIDMapper
setToUpgradeMapping
needsSubOwnerIDUpgrade
verifySubOwnerUIDsUsed:
setToIdentityMapping
intValueForProperty:
valueForProperty:
metadataForRowIndex:hidingAction:uuid:
metadataForColumnIndex:hidingAction:uuid:defaultColumnWidth:
initWithKeyOptions:valueOptions:capacity:
sortOrderWithRules:type:
rules
updateForSortRules:
setBaseTableUID:
sortRuleReferenceTracker
aggregateFormulaOwner
stringFromNumber:
cellRangeForTableArea:givenTableSize:numberOfHeaderRows:numberOfFooterRows:numberOfHeaderColumns:
tableAreaForCellID:inTableWithHeaderColumns:headerRows:footerRows:totalRows:
numberOfHeaderColumns
actualHeaderColumnRange
topCornerRange
bottomCornerRange
tableStyleAreaForBaseCellCoord:
getDefaultCell:forTableStyleArea:
cellExistsAtCellID:
mightHaveCellBorderAtCellID:
cellBorderAtCellID:
setCellBorder:
hasContent
getCell:atBaseCellCoord:suppressCellBorder:
cellExistsAtBaseCellCoord:
getCell:atBaseCellCoord:
replaceFormula:atCellCoord:inOwner:replaceOptions:
hasFormulaAtCellID:
isEmptyForDataStore
maxNumberOfPopulatedCells
numberOfPopulatedCells
hasMaxNumFormulas
p_shouldAllowSetCell:atBaseCellCoord:
cellWillChangeDistributor
willApplyCell:baseCellCoord:tableUID:
setCell:atCellID:tableUID:calculationEngine:conditionalStyleOwner:ignoreFormula:clearImportWarnings:
cellBorder
setCellBorder:atCellID:
setCell:atBaseCellCoord:ignoreFormula:clearImportWarnings:calcEngine:
formulaSyntaxErrorAtCellID:
formulaAtCellID:
formulaSpecAtCellID:
isUIDBased
p_shouldAllowApplyBaseCellMap:
startOfGroupingChangesBatch
willApplyBaseCellMap:tableUID:
setBordersWithCellMap:
setCellMap:tableUID:calculationEngine:conditionalStyleOwner:ignoreFormulas:skipDirtyingNonFormulaCells:doRichTextDOLC:
endOfGroupingChangesBatch
cellWillBeModifiedInCurrentRecalcCycle:
currentFormatIsExplicitForCalcEngine
asDurationFormat
formatByFixingUnitsIfNecessaryForTimeInterval:
formatForCalcEngineAtCellID:formatIsExplicitOut:refIfAvailable:
useAutomaticUnits
cellStorageRefAtCellID:
valueTypeAtCellID:
textStyleAtModelCellCoord:isDefault:
numberOfComments
hasCommentAtBaseCellCoord:
commentHostingMap
initWithStorage:forTableInfo:baseCellCoord:
storage
commentStorageAtCellID:
commentHostingAtBaseCellCoord:forCommentStorage:
commentWillBeAddedToDocumentRoot
postCommentNotificationForStorage:baseCellCoord:notificationKey:
setCell:atBaseCellCoord:ignoreFormula:clearImportWarnings:
arrayWithObjects:count:
dictionaryWithObjects:forKeys:count:
defaultCenter
postNotificationName:object:userInfo:
clearCommentHostingMapForCommentStorage:
setCellStyle:ofRowAtIndex:
setTextStyle:ofRowAtIndex:
cellStyleOfRowAtIndex:
textStyleOfRowAtIndex:
setCellStyle:ofColumnAtIndex:
setTextStyle:ofColumnAtIndex:
cellStyleOfColumnAtIndex:
textStyleOfColumnAtIndex:
defaultCellStyleForBaseCellCoord:useSoftDefault:outSource:
defaultTextStyleForBaseCellCoord:useSoftDefault:outSource:
cellStyleAtCellID:
textStyleAtCellID:
conditionalStyleSetAtCellID:
heightOfRowAtIndex:
widthOfColumnAtIndex:
numberWithDouble:
CGFloatValue
computeDefaultFontHeightForTableStyleArea:
topInset
bottomInset
p_tableSize
mergedRangeForBaseCellCoord:
maxNumberOfRows
insertRows:
insertRowsWithUIDs:atIndex:
insertNewRowsInBaseRange:
updateRowHeaderAtIndex:fromMetadata:
hidingAction
showBaseRowAtIndex:forAction:
hideBaseRowAtIndex:forAction:
rewriteMergesForInsertedRange:uids:isRows:
dirtyCellsForInsertionOfRows:forTable:tableRange:headerRange:
maxNumberOfColumns
insertColumns:
insertColumnsWithUIDs:atIndex:
insertNewColumnsInBaseRange:
updateColumnHeaderAtIndex:fromMetadata:
hideBaseColumnAtIndex:forAction:
setNumberOfHeaderColumns:
dirtyCellsForInsertionOfColumns:forTable:tableRange:headerRange:
setNumberOfHeaderRows:
setNumberOfFooterRows:
didAddRows:
isRegisteredWithCalcEngine
dirtyCellsForRemovalOfRows:fromTable:tableRange:
removeFormulasFromRange:
removeFormulasInRange:
rewriteMergesForRemovedRange:uids:isRows:
deleteRowsFromBaseRange:rowUids:
removeRows:
removeRowsAtIndexes:
dirtyCellsForRemovalOfColumns:fromTable:tableRange:
deleteColumnsFromBaseRange:columnUids:
removeColumns:
removeColumnsAtIndexes:
removeRowsAtIndex:count:
enumerateRangesWithOptions:usingBlock:
removeColumnsAtIndex:count:
_removeAnnotationsFromDeleteRange:
enumerateRangesUsingBlock:
moveRowIndexRange:toIndex:
moveBaseRowRange:toRowIndex:
updateTrackedHeaders:
moveColumnIndexRange:toIndex:
moveBaseColumnRange:toColumnIndex:
swapRowAtIndex:withRowAtIndex:
swapBaseRowAtIndex:withRowAtIndex:
hidingStateOfRowAtIndex:
hidingStateOfColumnAtIndex:
lastArchivedAppVersion
headerInfo_hidingActionForRowAtIndex:
hideRowAtIndex:forAction:
headerInfo_hidingActionForColumnAtIndex:
hideColumnAtIndex:forAction:
needsToUpdateFilterSetForImport
setHidingState:ofRowAtIndex:
setHidingState:ofColumnAtIndex:
formattedValue
stringAtCellID:
hasMigratableStylesInCells
regionFromCellIDVector:
identityTranslator
columnNameForCellCoord:restrictToBodyRange:translator:cellRangeContainingName:
columnNameForCellID:restrictToBodyRange:
displayNameForColumnName:
displayNameForColumnAtIndex:derivation:
cellStyleOfRowAtIndex:isDefault:
maxOrder
strokeLayerForLeftSideOfColumn:
strokeLayerForRightSideOfColumn:
strokeLayerForTopOfRow:
strokeLayerForBottomOfRow:
tsceValueFromCell:atCellID:tableUID:
newCellValueFromTSCEValue:withLocale:
getValue:atBaseCellCoord:fetchRichTextAttributesIfPlainText:
getValue:atBaseCellCoord:fetchRichTextAttributesIfPlainText:skipPendingWrites:
tsceValueForCellStorageRef:cellCoord:hostTableUID:outValue:
initWithContext:string:kind:stylesheet:paragraphStyle:listStyle:section:columnStyle:
nextTableUID
updateTableUIDFrom:toTableUID:
nextConditionalStyleOwnerUID
setOwnerUID:
nextMergeOwnerUID
nextPencilAnnotationOwnerUID
pivotOwner
resetBaseOwnerUID
setFormulaOwnerUIDsWithMap:
ownerUIDMap
remapTableUIDsInFormulasWithMap:calcEngine:
nextCategoryAggregatesOwnerUID
setAggregateFormulaOwnerUID:
nextGroupByUID
setGroupByUid:
addReceiverToGroupBy:
containsForms
isTableLinkedToAForm:
tableUID:changedToTableUID:
platformSupportsForms
copyByRemappingHostCellAgnosticOwnerUIDs:calcEngine:containingCell:outError:
replaceFormulasUsingBlock:
copyByRemappingHostCellAgnosticOwnerUIDsWithMap:calcEngine:ownerUID:error:
replaceConditionalStyleSetsUsingBlock:
formulaID
copyByRemappingOwnerUIDs:calcEngine:containingCell:outBadRefFound:
bakeFormulaToValue
isEqualToFormula:
conditionalStyleID
copyByRemappingOwnerUIDsWithMap:calcEngine:error:
setConditionalStyleAppliedRule:
remapTableUIDsInFormulasWithMap:
customFormatKey
addPasteboardCustomFormat:toDocument:updatingPasteboardFormat:
customFormatForKey:
initWithFormatType:customFormatKey:customFormat:appliedConditionKey:
updateCustomFormatFromPaste:
clearPasteboardCustomFormatMap
mapReassigningPasteboardCustomFormatKeys:
makePasteboardCustomFormatList
beginBatchingGroupCellDirtying
currentTransaction
isSkippingRepairBadRefsForOwnerUID:
duringRollback
tableUIDHistory
hasBadRefWithUidInfo
supportsCategorization
copyByConvertingColonTractToColon:breakUpIntoRefs:
const_astNodeArray
hasFormulaEvaluationError
copyByRepairingBadReferences:
asFormulaSpec
updateCalculationEngineForFormula:inBaseCellCoord:usingCalcEngine:
copyByMakingAllCategoryRefsIndirect:containingCell:
replaceFormulaForConditionalStyle:atCellID:
coordFromIndex:
referenceSet
getPrecedents:calcEngine:hostCell:doImplicitIntersection:returnUidReferences:
enumerateMergeFormulasUsingBlock:
endBatchingGroupCellDirtying
containsFormulas
numberOfConditionalStyles
initForCategorizedTableChromeToBaseRewriterWithSrcTableUID:srcTract:dstTableUID:destTract:coordMapper:srcCoordMapper:fromTableUID:
setConditionalStyleOwnerUID:
cellHasFormula
formulaCoordSpace
cellHasConditionalStyle
setFormulaCoordSpace:
allCellCoords
clearErrorForCells:
mappedStyleForStyle:
supportsBidiTablesUI
setIntValue:forProperty:
networkWithContext:presetID:styleProvider:styleMorphingBlock:
updateHeaderStorageStylesWithBlock:
supportsInlineAttachments
adoptStylesheet:withMapper:supportsInlineAttachments:
assertListTilesAndRows
isAncestorOf:
enumerateAllStylesWithBlock:
annotationsContainedByRegion:
removeAnnotations:
upgradeCellFormatsU2_0
networkFromTheme:presetID:
textStyleForTableStyleArea:
setParagraphStyle:forCharRange:undoTransaction:
enumerateWithAttributeKind:inRange:usingBlock:
defaultFormatWithFormatType:locale:
copyToCell:
rangeForCellID:includingBreak:
newSubstorageWithRange:context:flags:kind:
canBeStoredInAStringValueCell
paragraphStyleAtCharIndex:effectiveRange:
mergedRects
insertBaseMergeRangeRemovingOverlaps:
containsImportWarnings
containsControlCellSpecs
allRichTextStorages
tableNameBorderStroke
initWithTableInfo:tableModel:region:flags:searchFlags:clampingRange:
getNextCellData:
hasEqualContentToCell:
terminate
hasAlternatingRows
initWithContext:fromSourceModel:region:tableInfo:waitForCalcEngine:
setTableNameEnabled:
initWithModel:region:flags:searchMask:
auditRowInfoCellCountsReturningResult:
accumulateCurrentCellsConcurrentlyInRow:rowInfo:atColumns:usingCellCreationBlock:
accumulateCellBordersConcurrently:inRow:atColumns:
accumulateCurrentCellsConcurrentlyUsingBlock:
containsUidReferences
copyToGeometricFormWithRewriteContext:
copyByConvertingToRelativeAncestorsWithRewriteContext:
enumerateCellsAddedAndRemovedOfType:withOptions:usingBlock:
copyByRewritingReferencesToGeometricForm:
updateDataListsConcurrentlyWithConcurrentCellMap:clearImportWarnings:
upgradingFormulasMinion
setCellsConcurrently:tableUID:calculationEngine:conditionalStyleOwner:ignoreFormula:clearImportWarnings:
needsObjectUUID
mixingTypeWithObject:context:
mixedObjectWithFraction:ofObject:
mixedBaseObjectWithObject:
canMixWithNilObjects
mixableObjectClasses
T@"TSTTableStyle",&,N
T@"TSTCellStyle",&,N
T@"TSWPParagraphStyle",&,N
T@"TSWPShapeStyle",&,N
defaultHorizontalBorderStroke
defaultHorizontalBorderStrokeEvenIfNotVisible
defaultVerticalBorderStroke
bodyColumnStroke
bodyRowStroke
bodyRowStrokeEvenIfNotVisible
headerColumnBorderStroke
headerColumnBodyColumnStroke
headerColumnBodyRowStroke
headerColumnSeparatorStroke
headerRowBorderStroke
headerRowBodyColumnStroke
headerRowBodyRowStroke
headerRowSeparatorStroke
footerRowBorderStroke
footerRowBodyColumnStroke
footerRowBodyRowStroke
footerRowSeparatorStroke
categoryLevel1TopStroke
categoryLevel2TopStroke
categoryLevel3TopStroke
categoryLevel4TopStroke
categoryLevel5TopStroke
categoryLevel1LabelSeparatorStroke
categoryLevel2LabelSeparatorStroke
categoryLevel3LabelSeparatorStroke
categoryLevel4LabelSeparatorStroke
categoryLevel5LabelSeparatorStroke
categoryLevel1BottomStroke
categoryLevel2BottomStroke
categoryLevel3BottomStroke
categoryLevel4BottomStroke
categoryLevel5BottomStroke
categoryLevel1InteriorStroke
categoryLevel2InteriorStroke
categoryLevel3InteriorStroke
categoryLevel4InteriorStroke
categoryLevel5InteriorStroke
bodyPivotGroupHorizontalStroke
bodyPivotGroupVerticalStroke
bodyPivotDeEmphasisHorizontalStroke
bodyPivotEmphasisVerticalStroke
headerColumnPivotGroupHorizontalStroke
headerColumnPivotGroupDeEmphasisStroke
headerColumnPivotSeparatorStroke
headerRowPivotGroupVerticalStroke
headerRowPivotGroupDeEmphasisStroke
headerRowPivotTitleStroke
footerRowPivotGroupVerticalStroke
T@"TSDStroke",R,N
enumerateCellsForSOSSerializationWithBlock:
T{TSUModelRowIndex=I},R,N
T{TSUModelColumnIndex=S},R,N
setStrokeSidecar:
willClose
documentLocaleDidChange
setStylesheetForUpgradeToSingleStylesheet:
initWithContext:rows:columns:styles:stylePreset:tableInfo:
initAsPivotDataWithContext:tableInfo:sourceModel:sourceBody:sourceHeader:
resetForPivotingWithRowUids:columnUids:numberOfHeaderRows:numberOfHeaderColumns:
updateMergesAndCellsAsPivotDataWithSourceModel:
hasUsefulPivotDataInSourceBodyTract:
copyPivotDetailDataFromSourceModel:inSourceRegion:columnMapping:rowMapping:
pivotDataCellValueTypeForColumn:
upgradeDuringDocumentUpgradeIfNeeded:tableInfo:
loadFromUnarchiver:
saveToArchiver:
setPresetNeedsStrongOwnership:
setRepeatingHeaderRowsEnabled:
setRepeatingHeaderColumnsEnabled:
setHeaderRowsFrozen:
setHeaderColumnsFrozen:
createPivotOwner
clearPivotOwner
numberOfFooterRows
setlabelLevel1CellStyle:
setlabelLevel2CellStyle:
setlabelLevel3CellStyle:
setlabelLevel4CellStyle:
setlabelLevel5CellStyle:
setlabelLevel1TextStyle:
setlabelLevel2TextStyle:
setlabelLevel3TextStyle:
setlabelLevel4TextStyle:
setlabelLevel5TextStyle:
setColumnRowUIDMap:
setTextImportRecord:
upgradeToSubOwnerUIDMapper
identityOwnerUIDMapper
hasTableBorder
tableWritingDirection
metadataForRowIndex:hidingAction:
metadataForColumnIndex:hidingAction:
setSortOrder:
resetSortRuleReferenceTrackerForInsert
setFromTableUID:
clearFromTableUID
setFromGroupByUID:
clearFromGroupByUID
wasCut
setWasCut:
setIsRegisteredWithCalcEngine:
cellRangeForTableArea:
tableAreaForRow:
tableAreaForColumn:
tableStyleAreaForRow:
tableAreasForBaseCellRect:
getDefaultCell:forBaseCellCoord:
cellAtBaseCellCoord:
hasFormulaAtBaseCellCoord:
formulaSyntaxErrorAtBaseCellCoord:
formulaAtBaseCellCoord:
formulaSpecAtBaseCellCoord:
formatForCalcEngineAtBaseCellCoord:formatIsExplicitOut:
cellValueTypeAtBaseCellCoord:
textStyleForCalcEngineAtBaseCellCoord:isDefault:
hasCommentStorageAtBaseCellCoord:
commentHostingAtBaseCellCoord:
setCommentStorage:atBaseCellCoord:
removeCommentStorageAtBaseCellCoord:
textStyleOfRowAtIndex:isDefault:
cellStyleOfColumnAtIndex:isDefault:
textStyleOfColumnAtIndex:isDefault:
cellStyleAtModelCellCoord:isDefault:
conditionalStyleSetAtBaseCellCoord:
setHeight:ofRow:
setWidth:ofColumn:
rowHeights
columnWidths
setColumnWidths:
setRowHeights:
computeDefaultRowHeight
hasNamesInHeaders
insertRowsInBaseRange:uids:metadata:unsetFilterHidingAction:
insertColumnsAtIndex:uids:metadatas:tableArea:
insertRowsAtIndex:uids:metadatas:tableArea:unsetFilterHidingAction:
removeColumnsAtBaseIndexes:
removeAnnotationsFromRowsAtBaseIndexes:
removeAnnotationsFromColumnsAtBaseIndexes:
upgradeHiddenStates
upgradeHiddenFormulaOwnerForColumnsUID
upgradeHiddenFormulaOwnerForRowsUID
upgradeNeedsToUpdateFilterSetForImport
hiddenStateFormulaOwnerForRows
hiddenStateFormulaOwnerForColumns
setHidingState:atRowIndex:
setHidingState:atColumnIndex:
stringAtBaseCellCoord:optionalCell:
regionForValueOrCommentCellsInBaseCellRect:
displayNameForColumnAtIndex:
fillForRow:
maxStrokeOrder
setStroke:forTopOfRow:order:
setStroke:forBottomOfRow:order:
setStroke:forLeftOfColumn:order:
setStroke:forRightOfColumn:order:
cellValueFromCell:atBaseCellCoord:
cellValueAtBaseCellCoord:
setFormulaOwnerUIDsWithMap:shouldStealReferences:
remapTableUIDsInFormulasWithMap:calcEngine:bakeForBadRefs:
addPasteboardCustomFormatsToDocumentAndUpdateCells
copyPasteboardCustomFormatsFromTableModel:
registerAllFormulasWithCalculationEngine:wasCrossDocumentPaste:infoIsCategorized:wasUndo:
prepareForPasteWithCalculationEngine:sourceOffset:bakeFormulas:
hasFormulas
cellsModifiedInCurrentRecalcCycle
addCellRefToClearError:
clearErrors
adoptStylesheet:withMapper:
allDataAsString
assertCollaborationConvergence
upgradeFormatsForCustomFormatListU2_0
upgradeFromPreUFF
hasImportWarnings
hasControls
baseCellCoordForCellContainingRichTextStorage:
shouldAllowApplyConcurrentCellMap:
setDataStore:
localOwnerID
setLocalOwnerID:
presetIDForUpgrade
setPresetIDForUpgrade:
cellsPendingWrite
cellsToInvalidateAfterRecalc
cellsToInvalidateNonoverflowingAfterRecalc
setConditionalStyleFormulaOwner:
deprecatedProvider
setDeprecatedProvider:
wasUnarchivedFromAProvidedTable
setWasUnarchivedFromAProvidedTable:
textImportRecord
prePivotRowFilterSet
setPrePivotRowFilterSet:
pivotValueTypesByColumn
pivotDateGroupingTypesByColumn
_hiddenStateFormulaOwnerForRows
_hiddenStateFormulaOwnerForColumns
_strokeSidecar
_clearErrorCells
_clearErrorLock
_pivotValueTypesByColumn
_pivotDateGroupingTypesByColumn
_isRegisteredWithCalcEngine
_wasCut
_headerRowsFrozen
_headerColumnsFrozen
_tableNameEnabled
_tableNameBorderEnabled
_repeatingHeaderRowsEnabled
_repeatingHeaderColumnsEnabled
_styleApplyClearsAll
_presetNeedsStrongOwnership
_wasUnarchivedFromAProvidedTable
_localOwnerID
_numberOfHeaderColumns
_numberOfHeaderRows
_numberOfFooterRows
_lastArchivedAppVersion
_archivingCompatibilityVersion
_dataStore
_defaultRowHeight
_defaultColumnWidth
_tableName
_tableNameHeight
_presetIDForUpgrade
_tableStylePreset
_tableStyle
_identityTranslator
_bodyCellStyle
_headerRowCellStyle
_headerColumnCellStyle
_footerRowCellStyle
_categoryLevel1CellStyle
_categoryLevel2CellStyle
_categoryLevel3CellStyle
_categoryLevel4CellStyle
_categoryLevel5CellStyle
_labelLevel1CellStyle
_labelLevel2CellStyle
_labelLevel3CellStyle
_labelLevel4CellStyle
_labelLevel5CellStyle
_bodyTextStyle
_headerRowTextStyle
_headerColumnTextStyle
_footerRowTextStyle
_categoryLevel1TextStyle
_categoryLevel2TextStyle
_categoryLevel3TextStyle
_categoryLevel4TextStyle
_categoryLevel5TextStyle
_labelLevel1TextStyle
_labelLevel2TextStyle
_labelLevel3TextStyle
_labelLevel4TextStyle
_labelLevel5TextStyle
_tableNameStyle
_tableNameShapeStyle
_pivotBodySummaryRowCellStyle
_pivotBodySummaryColumnCellStyle
_pivotHeaderColumnSummaryCellStyle
_cellsPendingWrite
_cellsToInvalidateAfterRecalc
_cellsToInvalidateNonoverflowingAfterRecalc
_conditionalStyleFormulaOwner
_mergeOwner
_categoryOwner
_pivotOwner
_hiddenStatesOwner
_hauntedOwner
_sortOrder
_sortRuleReferenceTracker
_columnRowUIDMap
_cellWillChangeDistributor
_deprecatedProvider
_commentHostingMap
_textImportRecord
_prePivotRowFilterSet
_pencilAnnotationOwner
_tableUID
_fromTableUID
_fromGroupByUID
T@"TSTColumnRowUIDMap",&,N,V_columnRowUIDMap
T@"TSTTableDataStore",&,N,V_dataStore
TQ,N,V_presetIDForUpgrade
T@"TSTConditionalStyleFormulaOwner",&,N,V_conditionalStyleFormulaOwner
T@"TSWPStorage",&,N,V_deprecatedProvider
T@"NSMapTable",R,N,V_commentHostingMap
TQ,R,N,V_lastArchivedAppVersion
T^v,R,N,V_pivotValueTypesByColumn
T^v,R,N,V_pivotDateGroupingTypesByColumn
T@"TSTTableInfo",N,V_tableInfo
T@"TSTTableTranslator",R,N,V_identityTranslator
T{TSKUIDStruct=QQ},R,N
T@"TSTTableFilterSet",&,N,V_prePivotRowFilterSet
T@"TSCECalculationEngine",N,V_calcEngine
TB,N,V_wasCut
T{TSKUIDStruct=QQ},N,V_tableUID
T{TSKUIDStruct=QQ},N,V_fromTableUID
T{TSKUIDStruct=QQ},N,V_fromGroupByUID
TS,N,V_localOwnerID
T@"TSCEOwnerUidMapper",R,N
T@"NSUUID",R,N
T@"NSString",&,N,V_tableName
TB,N,V_tableNameEnabled
Td,N,V_tableNameHeight
TB,N,V_tableNameBorderEnabled
TB,N,V_repeatingHeaderRowsEnabled
TB,N,V_repeatingHeaderColumnsEnabled
Ti,R,N
T{TSUModelRowIndex=I},N,V_numberOfHeaderRows
T{TSUModelRowIndex=I},N,V_numberOfFooterRows
T{TSUModelColumnIndex=S},N,V_numberOfHeaderColumns
TB,N,V_headerRowsFrozen
TB,N,V_headerColumnsFrozen
TB,N,V_styleApplyClearsAll
T@"TSTTableStylePreset",&,N,V_tableStylePreset
T@"TSTSortRuleReferenceTracker",R,N,V_sortRuleReferenceTracker
T@"TSTMergeOwner",R,N,V_mergeOwner
T@"TSTCategoryOwner",R,N,V_categoryOwner
T@"TSTHiddenStatesOwner",R,N,V_hiddenStatesOwner
T@"TSTPencilAnnotationOwner",R,N,V_pencilAnnotationOwner
T@"TSTPivotOwner",R,N,V_pivotOwner
T@"TSCEHauntedOwner",R,N,V_hauntedOwner
T@"TSTCellDictionary",R,N,V_cellsPendingWrite
T@"TSTConcurrentMutableCellUIDSet",R,N,V_cellsToInvalidateAfterRecalc
T@"TSTConcurrentMutableCellUIDSet",R,N,V_cellsToInvalidateNonoverflowingAfterRecalc
T@"TSTTableSortOrder",C,N,V_sortOrder
T@"TSTStrokeSidecar",&,N
T@"TSTCellWillChangeDistributor",R,N,V_cellWillChangeDistributor
TB,N,V_presetNeedsStrongOwnership
TB,N,V_wasUnarchivedFromAProvidedTable
T@"TSTStructuredTextImportRecord",&,N,V_textImportRecord
TB,N
Td,N,V_defaultRowHeight
Td,N,V_defaultColumnWidth
T@"NSArray",R,N
TQ,R,N,V_archivingCompatibilityVersion
T@"TSTTableStyle",&,N,V_tableStyle
T@"TSTCellStyle",&,N,V_bodyCellStyle
T@"TSTCellStyle",&,N,V_headerRowCellStyle
T@"TSTCellStyle",&,N,V_headerColumnCellStyle
T@"TSTCellStyle",&,N,V_footerRowCellStyle
T@"TSTCellStyle",&,N,V_categoryLevel1CellStyle
T@"TSTCellStyle",&,N,V_categoryLevel2CellStyle
T@"TSTCellStyle",&,N,V_categoryLevel3CellStyle
T@"TSTCellStyle",&,N,V_categoryLevel4CellStyle
T@"TSTCellStyle",&,N,V_categoryLevel5CellStyle
T@"TSTCellStyle",&,N,V_labelLevel1CellStyle
T@"TSTCellStyle",&,N,V_labelLevel2CellStyle
T@"TSTCellStyle",&,N,V_labelLevel3CellStyle
T@"TSTCellStyle",&,N,V_labelLevel4CellStyle
T@"TSTCellStyle",&,N,V_labelLevel5CellStyle
T@"TSWPParagraphStyle",&,N,V_bodyTextStyle
T@"TSWPParagraphStyle",&,N,V_headerRowTextStyle
T@"TSWPParagraphStyle",&,N,V_headerColumnTextStyle
T@"TSWPParagraphStyle",&,N,V_footerRowTextStyle
T@"TSWPParagraphStyle",&,N,V_categoryLevel1TextStyle
T@"TSWPParagraphStyle",&,N,V_categoryLevel2TextStyle
T@"TSWPParagraphStyle",&,N,V_categoryLevel3TextStyle
T@"TSWPParagraphStyle",&,N,V_categoryLevel4TextStyle
T@"TSWPParagraphStyle",&,N,V_categoryLevel5TextStyle
T@"TSWPParagraphStyle",&,N,V_labelLevel1TextStyle
T@"TSWPParagraphStyle",&,N,V_labelLevel2TextStyle
T@"TSWPParagraphStyle",&,N,V_labelLevel3TextStyle
T@"TSWPParagraphStyle",&,N,V_labelLevel4TextStyle
T@"TSWPParagraphStyle",&,N,V_labelLevel5TextStyle
T@"TSWPParagraphStyle",&,N,V_tableNameStyle
T@"TSWPShapeStyle",&,N,V_tableNameShapeStyle
T@"TSTCellStyle",&,N,V_pivotBodySummaryRowCellStyle
T@"TSTCellStyle",&,N,V_pivotBodySummaryColumnCellStyle
T@"TSTCellStyle",&,N,V_pivotHeaderColumnSummaryCellStyle
messageWithDescriptor:
readReferenceMessage:class:protocol:completion:
messageWithNewFunction:descriptor:
setCell:
setFormulaSpec:
setMergeRange:
setCellID:
hasAnyCustomFormat
formulaSpec
mergeRange
cellValueType
cellHasCustomFormat
cellHasCommentStorage
cellIsEmpty
T@"TSTCell",R,N
T@"TSTCellFormulaSpec",R,N
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},R,N
TC,R,N
cellIDIsValid
setCellIDIsValid:
cellIsValid
setCellIsValid:
formulaSpecIsValid
setFormulaSpecIsValid:
mergeRangeIsValid
setMergeRangeIsValid:
_cellIDIsValid
_cellIsValid
_formulaSpecIsValid
_mergeRangeIsValid
_cellID
_cell
_formulaSpec
_mergeRange
TB,N,V_cellIDIsValid
TB,N,V_cellIsValid
TB,N,V_formulaSpecIsValid
TB,N,V_mergeRangeIsValid
T{TSUCellCoord=ISBB},N,V_cellID
T@"TSTCell",&,N,V_cell
T@"TSTCellFormulaSpec",&,N,V_formulaSpec
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_mergeRange
pointerAtIndex:
enumerateRowsWithBlock:
maxColumnIndex
enumerateRowsAndIndexesWithBlock:
strongObjectsPointerArray
initWithRows:shouldUseWideRows:context:
bncStorageBufferExists
maxRow
setCount:
setTileRowIndex:
replacePointerAtIndex:withPointer:
p_pruneRowCount
rowInfoFromArchive:
tileRowIndex
rowInfoForTileRowIndex:
_setRowInfo:atTileRowIndex:
usesWideOffsets
convertToWideOffsets
numRows
populatedRows
rowInfoWithTileRowIndex:wideOffsets:
cellStorageRefAtIndex:
preBNCStorageRefAtIndex:
findOrAddRowInfoAtTileRowIndex:
setCell:atIndex:formatKeys:
_removeRowInfo:atTileRowIndex:
insertColumnsAtIndex:count:
setInt:forKey:
pruneEmptyRows
moveColumnsFromIndex:toIndex:count:
_removeRowsAtTileRowIndex:numberOfRows:shiftingContent:
yankRowsAtTileRowIndex:count:
shiftUpAtTileRowIndex:count:
tsu_enumerateNonNullObjectUsingBlock:
maxColumn
initWithRows:context:
packageLocator
lastSavedInBNC
rowInfoAtOrAfterTileRowIndex:outTileRowIndex:
cellStorageRefAtColumnIndex:tileRowIndex:
preBNCCellStorageRefAtColumnIndex:tileRowIndex:
setCell:atColumnIndex:tileRowIndex:formatKeys:
insertColumnsAtColumnIndex:numberOfColumns:
removeColumnsAtColumnIndex:numberOfColumns:
moveColumnsAtColumnIndex:numberOfColumns:toDestColumnIndex:
insertRowsAtTileRowIndex:numberOfRows:
clearRowsAtTileRowIndex:numberOfRows:
shiftUpAndYankBy:
yankRowInfoAtTileRowIndex:
yankRowsAtTileRowIndex:
spliceRowInfo:atTileRowIndex:overwrite:
spliceRows:atTileRowIndex:
swapRowAtTileRowIndex:withRowAtTileRowIndex:
widenAllRowsForUpgrade
assertListRows
setLastSavedInBNC:
rowInfos
setRowInfos:
_storageVersion
_lastSavedInBNC
_shouldUseWideRows
_pruningCount
_rowInfos
T@"NSPointerArray",&,N,V_rowInfos
TS,R,N
T@"NSIndexSet",R,N
TB,N,V_lastSavedInBNC
hasWorkItems
addFittingHeight:forCellID:
addFittingWidth:forCellID:
enumerateFittingHeightsUsingBlock:
enumerateFittingWidthsUsingBlock:
_fittingHeights
_columnToMaxFittingWidths
legalRangeControlMinimum:maximum:increment:
initWithInteractionType:minimum:maximum:increment:
minimum
maximum
increment
numberValueFromString:locale:outDoubleValue:
recomputedValueFromValue:changed:
getCurrentFormat
numberOrCurrencyDecimalValue
asStepperSliderFormat
displayFormatType
defaultRangeControlSpecOfType:
initWithFormatType:minimum:maximum:increment:displayFormatType:
defaultCellValueForInteractionType:
stepperSpecWithMinimum:maximum:increment:
sliderSpecWithMinimum:maximum:increment:
cellSpecFromTSKFormat:
instanceWithArchive:unarchiver:
asRangeControlSpec
valueFromString:locale:
validateFormatAndValue:
tskStepperSliderFormatWithDisplayFormatType:
legacyDisplayFormatType
_interactionType
_legacyDisplayFormatType
_minimum
_maximum
_increment
Td,R,N,V_minimum
Td,R,N,V_maximum
Td,R,N,V_increment
TI,R,N,V_legacyDisplayFormatType
initWithContext:geometry:
tableModelClass
initWithTableInfo:
groupByByUid:
initWithGroupings:categoryOwner:
linkGroupBy:
initWithHiddenStatesOwner:
p_updateStorageParentInfoForModels
setupReceiver
setTableModel:
initWithInfo:
size
p_initializeDefaultHeight:andWidth:
initWithContext:geometry:rows:columns:stylePreset:styles:
presetOfKind:index:
initWithPosition:size:
networkWithContext:presetID:colors:alternate:
setSize:
initWithContext:geometry:rows:columns:styles:
geometry
initPivotTableWithContext:sourceTableInfo:sourceBodyRange:sourceHeaderRowRange:optionalDataModel:
baseTractRefForViewTractRef:
initWithColumns:rows:tableUID:
networkForPivotTables
pivotTableNameForSourceTable:
exteriorTextWrap
setExteriorTextWrap:
setCategoryColumnWidth:
setPivotSourceTableUID:
setPivotSourceTableName:
setPivotDataRefreshUID:
timeIntervalSinceReferenceDate
setPivotDataRefreshTimestamp:
setPivotSourceBodyTract:
setPivotSourceHeaderTract:
initWithColumnAggregates:
applyPivotWithColumns:rows:aggregates:flatteningDimension:optionsMap:pivotRowColumnRuleChangeUid:pivotAggregateRuleChangeUid:
columnUIDs
setOrder:forDimension:
rowUIDs
resetCellsForNewPivotRules
commitPivotChanges
initPivotTableWithContext:sourceTableInfo:sourceBodyRange:sourceHeaderRowRange:
pivotDataModel
groupBySet
pivotDataModelRowIndexesNeededForCell:
contentWritingDirection
setContentWritingDirection:
initAsCompressionMapForIndexes:
pivotDetailTableNameFromSourcePivotTableInfo:pivotSourceCell:
_initWithContext:flatteningFromComplexInfo:cellRegion:waitForCalcEngine:flatteningOptions:isSnapshot:
logFullBacktrace
_initWithContext:fromSourceInfo:cellRegion:tableModel:waitForCalcEngine:formulaCoordSpace:
expandCellRegionToCoverMergedCells:
flatteningDimension
aggregates
baseCellRegionForViewCellRegion:
indexesForCategoryColumns
intersectsIndexesInRange:
enumerateRowRangesUsingBlock:
accessController
hasWrite
flattenGroupValuesIfNeededForCell:viewCellCoord:summaryAndLabelRows:categoryColumns:
hasCellStyle
defaultCellStyleForCellID:
hasTextStyle
defaultTextStyleForCellID:
getTextPropertiesWithCell:cellID:wraps:alignment:verticalAlignment:padding:
initWithPropertiesAndValues:
performWrite:
iterateCellsInRegion:flags:searchFlags:usingBlock:
position
setPrimitiveGeometry:
copyFromHiddenStates:forRange:withContext:isWholeTableCopy:
setParentInfo:
_correctAndCheckStateSuppressingAssertions:
_setCellBordersFlatteningFromComplexInfo:sourceRegion:
indexesOfHiddenRowsInCellRange:
indexesOfHiddenColumnsInCellRange:
setDocumentIsClosing:
clearPartitioner
releaseLayoutEngine
teardown
initWithContext:fromSourceInfo:cellRegion:waitForCalcEngine:flattenCategories:isSnapshot:
setParent:
p_setupTableModelforNewForm
headersFrozenByDefault
checkboxFormat
toggleControlSpec
setCell:atCellUID:ignoreFormula:clearImportWarnings:
p_setupTableModelforStockPrototype
p_setupTableModelforStockSwatch
createLargeDefaultTables
numberOfRowsForProtoIndex:
numberOfColumnsForProtoIndex:
tablePrototypeWithIndex:context:geometry:styles:forTableInsertOnly:
setupTableModelForPrototypeIndex:forTableInsertOnly:
tableModelForTableUID:withCalcEngine:
p_setFillOnCell:positive:
initWithNodeArray:
p_setFormula:atCellID:
initWithCreator:
p_positiveImageFill
p_negativeImageFill
setObject:forProperty:
initWithContext:name:overridePropertyMap:isVariation:
objectForKeyedSubscript:
resourceURL
URLByAppendingPathComponent:
dataFromURL:context:
initWithImageData:technique:tintColor:size:
setObject:forKeyedSubscript:
p_fillResourceWithFilename:
tableNameTextSize
effectiveTableNameHeightForTable:
isSafeToConvertToImage
p_layoutEngineCreateIfNeeded:
archivedLayoutEngineBundle
initWithInfo:layoutEngineBundle:
changeNotifier
setChangeNotifier:
isCategoryGroupValueCell:
isReimportable
isLocked
isInReadOnlyMode
importDate
timeIntervalSinceNow
filteringTableUID
pivotSourceTableUID
pivotSourceTableName
pivotSourceBodyTract
groupLevelAtSummaryRow:
numberOfRowLevels
enclosingGroupNameforRowIndex:level:
groupLevelAtSummaryColumn:
numberOfColumnLevels
enclosingGroupNameforColumnIndex:level:
columnAggregateGroupSize
qualifiedColumnNameForAggregateIndex:locale:
rowAggregateGroupSize
tableRangeCoordinate
numberOfGrandTotalColumns
numberOfFooterOrGrandTotalRows
minNumberOfHeaderColumns
maxNumberOfHeaderColumns
groupSortOrder
setGroupSortOrder:
isRegisteredWithCalcEngine:
registerWithCalcEngine:ownerKind:
registerWithCalcEngine:baseOwnerUID:
linkToCalcEngine:ownerKind:
filterSetUpdated
unregisterFromCalcEngine:
unregisterFromCalcEngine
performReadForOneOffFormulaEvaluation:forCellCoord:
registerLast
filteringTableTranslator
baseColumnRange
columnNameForColumnIndex:withFallbackFormat:translator:
columnNameForColumnIndex:
filteringColumnNameForColumnIndex:
viewColumnIndexForBaseColumnIndex:
filterSetForPivotDataTable:
filterSetForRows
containsFilterRulesInUIDForm
copyByRewritingFilterRulesToGeometricFormWithContext:withTableInfo:
p_setFilterSet:
setFilterSet:forPivotDataTable:
filterCount
isEnabled
initWithNotBlankRowGroupsWithContext:withPivotTable:
setFilterSetForRows:
initWithNotBlankColumnGroupsWithContext:withPivotTable:
setFilterSetForColumns:
enableFilterSet:
clearAllFiltered
stageCountForTextureDeliveryStyle:tableProvider:
textureDeliveryStylesLocalized:
textureDeliveryStyleFromDeliveryString:
cellIteratorWithFlags:searchFlags:
cellFlags
setCellFlags:
topStroke
topStrokeOrder
setTopStroke:order:
leftStroke
leftStrokeOrder
setLeftStroke:order:
bottomStroke
bottomStrokeOrder
setBottomStroke:order:
rightStroke
rightStrokeOrder
setRightStroke:order:
setCellsWithCellMap:ignoreFormulas:skipDirtyingNonFormulaCells:
p_bakeMixedCellStrokesIntoTable:outgoingTable:incomingTable:fraction:
angle
setAngle:
setGeometry:
partitioner
setScaleToFit:
widthValid
heightValid
horizontalFlip
verticalFlip
initWithPosition:size:widthValid:heightValid:horizontalFlip:verticalFlip:angle:
childEnumerator
objectEnumerator
aggregateEnumeratorWithObjects:
visitTSTTableInfo:
bootstrapPresetsOfKind:inTheme:alternate:reservedCount:
documentStylesheet
colors
createStylesInStylesheet:presetID:colors:alternate:
initWithStyleNetwork:
setPresets:ofKind:
setWithObject:
iterateCellsWithFlags:searchFlags:usingBlock:
initShallowMapWithContext:uidBased:
defaultCellStyleForCellID:useSoftDefault:outSource:
defaultTextStyleForCellID:useSoftDefault:outSource:
addCell:andCellUID:
mergedStorageRepresentation
setPosition:
removeAnnotationsFromRowsAtIndexes:
removeAnnotationsFromColumnsAtIndexes:
setDrawableIsBeingCopied:
supportsAutoResizedTables
dupContentCache
cellIDToWPColumnCache
resolverContainerNameForResolver:
nameForResolverContainer:
resolverContainerForName:caseSensitive:
resolverContainerNamesMatchingPrefix:
resolverMatchingName:contextContainerName:
resolversMatchingPrefix:
isPendingTableNameUniquification
compare:
resolverNameIsUsed:
floatValue
isEquivalentForCrossDocumentPasteMasterComparison:objectComparisonBlock:
hasEqualContentToCell:usingRichTextObjectComparisonBlock:
initWithOwnerInsertion:fromOwnerUID:
willModifyTable:uidResolver:calcEngine:
didModifyTable:calcEngine:
allOwnersRegistered
shouldForceRegisterAllTables
loadFromFileVersion
childEnumeratorForUserSearch
childEnumeratorForUserFlags:
modelPathComponentForChild:
acceptVisitor:
registerWithCalcEngineForDocumentLoad:ownerKind:
formulaOwnerUID
ownerKind
objectToArchiveInDependencyTracker
formulaOwner
modelEnumeratorForObjectsConformingToProtocol:
chooseUniqueNameInContainer:forPaste:
registerWithCalcEngine:
registerAllFormulasWithCalculationEngine:
beginTrackingNamesInTable:
beginTrackingNamesInTableForLegacyNRM:
ownerIsRegistered:
scheduleDetectAndRepairConsistencyViolations
upgradeSubOwnerUidForMapperOnCalcEngine:
setNeedsSubOwnerIDUpgrade:
hasCommentAtCellID:
setCommentStorage:atCellUID:
removeCommentStorageAtCellUID:
postCommentNotificationForStorage:atViewCellCoord:notificationKey:
commentHostingAtCellID:forCommentStorage:
commentHostingAtCellID:
beginUpgradingFormulasMode
modelEnumeratorForObjectsOfClass:
upgradeDuringDocumentUpgradeIfNeeded:
uuidBasedCellMapWithContext:
writingDirection
writingDirectionForCellwithTableDefault:
setParagraphWritingDirection:forCharRange:undoTransaction:
textStyleAtCellID:isDefault:
propertyMapWithPropertiesAndValues:
isCategoryGroupValueLabelCell:
isSummaryOrLabelRow:
groupLevelAtRow:
leftInset
rightInset
paddingWithTopInset:leftInset:bottomInset:rightInset:
hasGroupingArrowAtCellID:
pivotOptionsForRowGroupsAtLevel:
repeatLabels
isPivotTrailingAligned:
isPivotUnwrapped:
effectiveTextStyle
cellStyleAtCellID:isDefault:
currentFormatUsesAccountingStyle
modifiedTextPropertiesForCategoryOrPivotCellAtCellID:wraps:padding:alignment:
duplicateFilterSetInUidFormWithTable:
needsFormulaRewriteForImport
setNeedsFormulaRewriteForImport:
hiddenStatesForPivotDataTable:
setFilterSetType:
dirtyFilterState
hasFilterRulesWithTable:inBaseColumns:
numberOfVisibleBaseBodyRows
preventsRowInsertion
getPredArgDataFromCell:
containsObject:
hasCategoryRules
decimalDigitCharacterSet
rangeOfCharacterFromSet:options:
numberValueFromString:locale:outDoubleValue:outValueType:
regularExpressionWithPattern:options:error:
matchesInString:options:range:
chooseUniqueNameInContainer:forPaste:needsNewName:avoidNames:
remappedTableNames
parseNumberFromTableName:
checkoutNumberFormatter
initWithUnsignedInt:
createStringWithNumber:
returnNumberFormatter:
cellRegionForTableStyleArea:
tableAreaForDroppingRowAtIndex:
tableStyleAreaForCellUID:
tableStyleAreaForCellID:
initWithIndexSet:
getDefaultCell:forCellID:
getCell:atCellID:suppressCellBorder:
hasFormulaAtCellUID:
copyToUidFormForTableInfo:inCellCoordinate:preserveHostCell:
copyByRewritingReferencesToUidForm:
setCell:atCellUID:ignoreFormula:clearImportWarnings:formulaReplacer:
emptyFilteredTable
isEmptyPivot
textFormat
prunedCellRegionAgainstTable:behavior:
regionBySubtractingRegion:
cellUIDListFromCellRegion:useCategoriesWildcards:
getCell:atCellUID:
enumerateCellUIDsUsingBlock:
copyJustStrokesToCell:
convertFormulasToUidForm:atCellID:preserveHostCell:
mergeActionForRegion:
addMergeAction:
containsMergeChanges
performRead:
cellValueTypeAtCellID:
cellValueTypeAtCellUID:
setCellStyle:ofRowAtUID:
setTextStyle:ofRowAtUID:
setCellStyle:ofColumnAtUID:
setTextStyle:ofColumnAtUID:
cellStyleAtCellUID:isDefault:
textStyleAtCellUID:isDefault:
initWithContext:rules:
rowNameForCellCoord:restrictToBodyRange:translator:cellRangeContainingName:
columnNameForColumnIndex:withFallbackFormat:
newlineCharacterSet
componentsSeparatedByCharactersInSet:
baseColumnIndexForGroupingAtColumnIndex:
filteringDisplayColumnNameForBaseColumnIndex:
lowestCategoryLevelAsLeadingColumnGroupName:
baseColumnIndexForGroupingAtRowIndex:
lowestCategoryLevelAsLeadingRowGroupName:
cellRangeNameFromChromeRangeRef:namingContext:
usedSymbolicName
translatedCellRangeName:usedSymbolicName:
chromeRowIndexForViewRowIndex:
chromeLabelForColumn:
chromeLabelForRow:
indexOfVisibleColumnBeforeColumnAtIndex:
indexOfVisibleColumnAfterColumnAtIndex:
indexOfVisibleRowBeforeRowAtIndex:
indexOfVisibleRowAfterRowAtIndex:
bodyRangeForLowestLevelGroupEnclosingCellAtCellID:
categoryColumnRange
insertRowsAtIndex:uids:metadatas:tableArea:
addUuidsFromVector:
initWithUUIDVector:
hideAtViewIndex:forAction:
moveRowRange:toRowIndex:
moveColumnRange:toColumnIndex:
hasHiddenColumnsOrRows
numberOfHiddenRowsInCellRange:
numberOfUserHiddenRowsInCellRange:
numberOfHiddenColumnsInCellRange:
hasHiddenRowAtIndex:forAction:
hasHiddenColumnAtIndex:forAction:
indexesOfFilteredColumnsInCellRange:
indexesOfVisibleColumnsInCellRegion:
indexesOfVisibleColumnsInColumnRange:
indexesOfFilteredRowsInCellRange:
indexesOfVisibleRowsInCellRange:
indexesOfVisibleRowsInCellRegion:
indexesOfUserVisibleRowsInCellRange:
indexesOfCollapsedRowsInCellRange:
hidingActionForRowAtIndex:
hidingActionForColumnAtIndex:
anyHiddenRowsInCellRange:forAction:
numberOfBaseBodyRows
hasHiddenRowAtIndex:
hasHiddenColumnAtIndex:
anyHiddenRowsInCellRange:
anyHiddenColumnsInCellRange:
stringAtCellID:optionalCell:
characterFillAtCellID:optionalCell:
hasValueOrError
columnGroupLevelForHeaderRow:
getPivotDataBundleForUidCoord:upToLevel:
rowGroupLevelForHeaderColumn:
activeFlatteningDimension
aggregateIndex
combinedDataValuesWithLocale:
stringByAppendingFormat:
stringForUnderlyingValue
isSummaryColumn:
columnGroupLevelAtColumn:outAggregateIndex:
rowGroupLevelAtRow:outAggregateIndex:
mergeCellRange:
unmergeCellRange:
mergeRangesPartiallyIntersectCellRange:
mergeRangesPartiallyIntersectCellRegion:
hasMergeRangeSpanningRowsForCellRange:
hasMergeRangesIntersectingCellRegion:
mergedGridIndicesForDimension:
regionForValueOrCommentCellsInRange:
hasRangeSpanningRowsForCellRange:
hasMergeRanges
shrinkReturningInverseForRegion:
removeReturningInverseForRegion:
performActionReturningInverse:
mergeActionForRegion:nonOriginPartialsOnly:
enumerateMergesIntersectingCellRegion:usingBlock:
mergeRangesIntersectingCellRegion:
mergeRangesAndCrumbsIntersectingRange:
initWithMergeList:
isValidMergeRange:
initWithDefaultStrokeProvider:customStrokeProvider:tableInfo:
strokeExporterReturningDefaultStrokes:
initWithStrokeProvider:tableProvider:tableInfo:
changeDescriptorWithType:cellRange:
validateChangeDescriptors:
strokeLayerForRow:
mutableStrokeLayerWithContext:subtractingDefaultsFrom:forRange:
setStrokeLayer:forTopOfRow:
setStrokeLayer:forBottomOfRow:
strokeLayerForColumn:
setStrokeLayer:forLeftOfColumn:
setStrokeLayer:forRightOfColumn:
getValue:atCellID:fetchRichTextAttributesIfPlainText:
cellValueFromCell:atCellID:
enumerateCellIDsUsingBlock:
pivotDataTableMapper
registerAllFormulasWithCalculationEngine:wasCrossDocumentPaste:wasUndo:
registerAllFormulasWithCalculationEngine:wasCrossDocumentPaste:
referenceToHiddenStateFromColumn:toColumn:
applyCollapseExpandState:outUndoState:
collapseExpandChanged:forState:
numberDoubleValue
iterateCellsInRange:flags:searchFlags:usingBlock:
numberOfCategoryColumns
numberOfBaseHeaderColumns
isLabelRow:
valueIsText
cellIDForCellContainingRichTextStorage:
writeCellIDsInCellUIDList:toVector:prunedCellUIDs:
convertCellUIDLookupList:toCellRangeVector:prunedSummaryCellUIDs:
mutableRowIndexesForUIDs:
orderedRowUidsFromUids:
columnIndexesForUIDs:
mutableColumnIndexesForUIDs:
orderedColumnUidsFromUids:
getUUIDBytes:forRowIndex:
getUUIDBytes:forColumnIndex:
rowIndexForUUIDBytes:
columnIndexForUUIDBytes:
prunedColumnUIDsFromColumnUIDs:
prunedRowUIDsFromRowUIDs:
UIDSetForIndexes:isRows:
mutableIndexesForUIDSet:isRows:
mutableIndexesForUIDSet:isRows:notFoundUIDs:
rowUuids
columnUuids
rowRangeForUIDs:
columnRangeForUIDs:
uncompressedCellUIDs
indexesForLabelRows
regionBySubtractingRowIndexes:
UIDLookupList
regionByIntersectingRowIndices:
addCellUID:
groupLevelAtLabelRow:
compressedSize
cellRegionFromCellUIDLookupList:
cellRegionFromCellUIDList:includeLabelsWithSummaries:didAddLabels:
cellRegionFromCellUIDLookupList:includeLabelsWithSummaries:didAddLabels:
p_cellRegionFromWildcardCellUIDs:includeLabelsWithSummaries:didAddLabels:
regionByAddingRegion:
regionFromCellRangeVector:
indexesForSummaryRowsAtGroupLevel:
indexesForLabelRowsAtGroupLevel:
tsu_indexSetByAddingIndexes:
region:addingRegion:
cellUIDRegionFromRegion:inTable:
cellRegionFromTable:
cellRangeForUIDRange:
cellUIDRangeForCellRange:
cellRegionForUIDRange:
cellTractRefForUIDRectRef:
getDefaultCell:forCellUID:
getCell:atCellUID:suppressCellBorder:
isGroupedForRows
isGroupedForColumns
groupByForRows
groupByForColumns
maxRowLevel
maxColumnLevel
filteringTableModel
checkStateForArchiving:
categoryOrder
hasValidInfo
hasValidUidMap
checkMapsAndAssert:
groupByChangeDistributor
hasReceiver:
hasMergeRangeSpanningRowsForBaseCellRect:
enumerateAggregates:
setRowOrder:
setSummaryModel:
resetForCategories
resetViewMap
checkState
removeReceiver:
willChangeGroupByTo:
duringSubOwnerUIDUpgrade
unregisterGroupBy:
setGroupingColumnList:
resetGroupBy
setIsEnabled:
setTranslator:
groupingColumns
setPivotSourceBodyUidTract:
setOrderUsingViewOrderForDimension:
didChangeGroupByStructure
initAsDetailTableWithContext:sourcePivotTableInfo:pivotSourceCell:
numberOfCategoryLevels
populatedCategoryGroupLevelsInColumn:
isGroupingColumn:
requiresTrailingAlignment:
requiresUnwrapping:
indexesForGrandTotalRows
indexesForGrandTotalColumns
indexesForLeadingRows
indexesForLeadingColumns
hasHeaderColumnForAggregateNames
hasHeaderRowForAggregateNames
allRowGroupUIDs
allColumnGroupUIDs
indexesForRowsContainedByGroupUIDs:
indexesForColumnsContainedByGroupUIDs:
collapseSummaryRowGroupUIDs:
expandSummaryRowGroupUIDs:
isGroupOrParentsCollapsed:dimension:
isGroupCollapsedAndVisible:dimension:
indexesForSummaryColumnsAtGroupLevel:
indexesForLeadingRowsAtGroupLevel:
indexesForLeadingSummaryRowsAtGroupLevel:
indexesForLeadingColumnsAtGroupLevel:
indexesForLeadingSummaryColumnsAtGroupLevel:
indexesForGroupingColumns
groupingColumnAtCategoryLevel:
groupingColumnLevelsForColumn:
groupingType
enumerateGroupingColumnsForColumn:withBlock:
groupingArrowStateAtCellID:
isRowGroupUIDCollapsed:
isColumnGroupUIDCollapsed:
regionByIntersectingColumnIndices:
peerCellRegionForCellRegion:
setAggregateType:forColumnUID:atGroupLevel:
labelRowVisibilityAtCategoryLevel:
summaryRowHeightAtCategoryLevel:
setSummaryRowHeight:atCategoryLevel:
labelRowHeightAtCategoryLevel:
setLabelRowHeight:atCategoryLevel:
categoryColumnWidth
addUuidsFromSet:
didMakeGroupingChangesInRowUIDs:
regionFromRowIndices:
iteratorClass
loadFromArchive:unarchiver:
setCategoryOrder:
setLayoutEngine:
newObjectUUIDWithOffset:
initWithGroupings:categoryOwner:groupByUid:ownerIndex:
setupAfterUnarchiveForPivotTable:pivotDataTable:
setHiddenStates:
setHiddenStateOwnerForColumnsUID:
setHiddenStateOwnerForRowsUID:
setNeedsToUpdateFilterSetForImport:
initWithContext:tableInfo:rowUids:
setRowUIDsWithPendingGroupingChanges:
setPartitioner:
preUFFVersion
shiftGeometryToIncludeTableNameHeight
sourceType
reassignPasteboardCustomFormatKeys
isInlineWithText
pushScopeForField:message:usingBlock:
initWithLayoutEngine:
hiddenStateExtentUid
localizedDescriptionForProtoIndex:
geometryForPrototypeIndex:withCanvasPoint:
tablePrototypeWithIndex:context:geometry:styles:
canPartitionInline
canPartitionForPrinting
bootstrapPresetsOfKind:inTheme:alternate:
presetKinds
validateNewName:forTable:
performRewritesForInsertedTableInfos:
ensureAllTablesAreRegisteredInDocumentRoot:
upgradeTablesIfNeeded:forDocumentRoot:
tableStyleAreaForCellID:inTableWithHeaderColumns:headerRows:footerRows:totalRows:
matchesObjectPlaceholderGeometry
setMatchesObjectPlaceholderGeometry:
clearBackPointerToParentInfoIfNeeded:
isSelectable
layoutClass
repClass
isThemeContent
parentInfo
owningAttachment
setOwningAttachment:
owningAttachmentNoRecurse
isFloatingAboveText
isAnchoredToText
isInlineWithTextWithWrap
isAttachedToBodyText
isAllowedToAddCaptionToChildInfo:
uuidPathPrefixComponentsProvider
collaboratorCursorForSelectionPath:
T@"TSDInfoGeometry",C,N
T@"NSObject<TSDInfo>",N
T@"TSPObject<TSDOwningAttachment>",N
T@"TSPObject<TSDOwningAttachment>",R,N
floatingAboveText
TB,R,N,GisFloatingAboveText
anchoredToText
TB,R,N,GisAnchoredToText
inlineWithText
TB,R,N,GisInlineWithText
inlineWithTextWithWrap
TB,R,N,GisInlineWithTextWithWrap
attachedToBodyText
TB,R,N,GisAttachedToBodyText
childInfos
prohibitsModificationToChildren
isMaster
T@"NSArray",R,C,N
searchForAnnotationsWithHitBlock:
enumerateAllAnnotationsInModelWithHitBlock:
continueAnnotationSearch:
commandForReplaceAllWithProvider:
T@"NSSet",R,N
replaceReferencedStylesUsingBlock:
referencedStyles
afterReplacingReferencedStylesSetStylesheet:
mergesIntersectingRange:
mergesIntersectingCellRegion:
textIsVerticalAtCharIndex:
autoListRecognition
autoListTermination
textIsLinked
preventsComments
preventsChangeTracking
supportsMultipleColumns
storageChangesInvalidateWrap
supportsVerticalTextLayoutInChildStorages
supportsDropCapsInChildStorages
Tq,R,N
initWithContext:geometry:rows:columns:stylePreset:
initWithContext:geometry:rows:columns:
initForTestingWithContext:rows:columns:
initWithContext:geometry:styles:
initWithContext:otherTableInfo:
initPivotTableWithContext:sourceTableInfo:
hasUsefulPivotSourceCellsInBodyRange:
p_popupItemsForStrings:
p_setPopupMenuOnCell:withItems:andSelectedIndex:
p_setFormulaWithSymbolCellCoord:andAttributeCellCoord:atCellID:
p_setFormulaWithSymbolString:atCellID:
additionalObjectsToCopy
componentRootObject
layoutEngineEffectiveTableNameHeight
isSafeToConvertToImageForImagePaste
isSafeToConvertToAttributedString
isSafeToConvertToText
resolver
supportsHyperlinks
elementKind
supportsAttachedComments
supportsRichTextUndoAtCellID:
isNewlyImported
nsFilteringTableUID
pivotSourceNSTableUID
pivotSourceTableInfo
pivotSourceIsRangeBased
pivotSourceRangeName
notifyTableOfNewResults
filteringRange
filteringBodyRange
filteringBodyRowRange
filteringBaseColumnRange
filteringColumnNameForBaseColumnIndex:
setFilterSet:
chunkCountForTextureDeliveryStyle:animationFilter:
textureDeliveryStylesLocalized:animationFilter:
requiresStagesBuildingInReverse
suppliesFinalTextures
scaleInfoGeometry:
canAspectRatioLockBeChangedByUser
mergedContainedStorages
infoForSelectionPath:
presetKind
shouldCancelScrollingToSelectionPath:forChanges:
setInsertionCenterPosition:
geometryForRTLTableWithGeometry:
contentsAreRightToLeft
allowsCaption
canCommentInCaptionOrTitle
allowsTitle
typeName
setHasReference:
willCopyWithOtherDrawables:
didCopy
didReplaceTextsInStoragesWithPlaceHolderString
prepareForPasteWithSourceOffset:bakeFormulas:
postCommentNotificationForStorage:atCellID:notificationKey:
allAnnotations
bakeFormulas
applyWritingDirection:toCell:cellID:
notifyAboutStructuredTextImportState
duplicateFilterSet
duplicateFilterSetInUidForm
needsFilterFormulaRewriteForImport
setNeedsFilterFormulaRewriteForImport:
hasFilterRulesInBaseColumns:
hasFilterRulesAffectingInsertRows
allBodyValuesAsPregArgDataListForColumnIndex:
canTranspose
useBandedFill
bandedFillObject
hasUntitledTableNameFormat
chooseUniqueNameInContainer:forPaste:needsNewName:
cellIDIsLegal:
tableAreasForCellRange:
setCell:atCellCoord:
cellMapForRegion:uidBased:suppressMergeContent:useCategoriesWildcards:
concurrentCellMapForRegion:suppressMergeContent:
getCell:atCellID:holdingReadLockWithAccessController:
noRuleConditionalStyleSet
rowNameForCellID:restrictToBodyRange:
pivotHeaderColumnDisplayNameAtIndex:
pivotLeadingColumnDisplayNameAtIndex:
pivotHeaderRowDisplayNameAtIndex:
pivotLeadingRowDisplayNameAtIndex:
cellRangeName:usedSymbolicName:
chromeLabelForCellID:
numberOfCells
cellIDLeftOfCellID:
cellIDRightOfCellID:
cellIDAboveCellID:
cellIDBelowCellID:
insertRowsAtIndex:count:addBefore:
insertColumnsAtIndex:count:addBefore:
importDeferredRemoveGroupingRowsAtIndexes:
processDeferredImportActions
hasDeferredImportActions
isCellRangeHidden:
numberOfVisibleBodyRows
numberOfUserVisibleBodyRows
numberOfVisibleBodyColumns
cellValueViewStringAtCellID:optionalCell:
labelValueViewStringAtCellID:optionalCell:
backgroundFill
bodyFill
headerColumnsFill
headerRowsFill
footerRowsFill
fillForColumn:
valueToUseForSummaryCellFormulaError
hasCellID:
cellRegionWithConditionalStyleMatchingCell:
minPopulatedCellRange
findChartableRangesFromTableRange:getBodyRange:headerColumnRange:headerRowRange:
cellUIDListFromCellRegion:
cellRegionFromCellUIDList:
cellUIDForCellID:useCategoriesWildcards:
textStyleForCellWithEmptyStyleAtCellUID:isDefault:
fromTableCoordMapperForPasteboard
applyGroupingColumns:
setIsCategoryEnabled:
startPivotChanges
updatePivotDataModel:pivotDataRefreshUID:pivotDataRefreshTimestamp:uidBodyTract:
handlePivotSorting:
resetPivotOrder
createDetailTableForPivotTableCell:
numberOfBaseColumns
numberOfBaseRows
numberOfBaseHeaderRows
numberOfBaseFooterRows
numberOfChromeColumns
numberOfChromeRows
numberOfChromeHeaderColumns
numberOfChromeHeaderRows
numberOfChromeFooterRows
numberOfGroupLevelsShowingLabelsUnderGroupAtIndex:
isSummaryCell:
isCategoryLabelCell:
isCategoryColumnUneditableCell:
isCategoryGroupingColumn:
isCategoryAnyKindOfCell:
isPivotAnyKindOfCell:
isPivotGrandTotalRow:
isPivotGrandTotalColumn:
isPivotLeadingRow:
isPivotLeadingColumn:
columnIndexForGroupingColumn:
allRowUIDsAtGroupLevel:withFilter:
allColumnUIDsAtGroupLevel:withFilter:
collapseSummaryGroupUIDs:
expandSummaryGroupUIDs:
isGroupingRowCollapsedAndVisible:
isGroupingColumnCollapsed:
isGroupingColumnCollapsedAndVisible:
hasSummaryRowsInRegion:
indexesForSummaryRowsAtGroupLevel:inRegion:
indexesForSummaryRowsUpToGroupLevel:omitGroupsWithUids:
indexesForSummaryRowsFromGroupLevel:toGroupLevel:
indexesForSummaryColumnsFromGroupLevel:toGroupLevel:
indexesForSummaryColumnsInRegion:
indexesForLabelRowsAtGroupLevel:inRegion:
indexesForLabelRowsUpToGroupLevel:omitGroupsWithUids:
indexesForLeadingRowsInRegion:
indexesForLeadingColumnsInRegion:
indexesForBodyAndFooterRows
indexesForBodyRowsInGroupWithRowAtIndex:
regionSubtractingCategoryColumnsAndRows:
groupingColumnLevelCountForColumn:
groupingTypesAreUniqueForColumn:
hasGroupingArrowInCellRegion:
baseTableUID
categoryRefReferringToCellRef:
shouldDisplaySummaryLabelRowAtGroupLevel:
willMakeGroupingChangesInRowUIDs:
processRowsWithPendingGroupingChangesAndReturnAffectedCellRegion
commandForSettingTableDirection:icc:
verifyPivotTableConnections
editorClass
rowUIDsWithPendingGroupingChanges
dragAndDropDetails
setDragAndDropDetails:
isCopyContainingCategoryColumn
setIsCopyContainingCategoryColumn:
hasReference
overrideLayoutHint
setOverrideLayoutHint:
pivotOrder
hiddenStatesUid
setHiddenStatesUid:
setFromTableCoordMapperForPasteboard:
wasRemovedFromDocument
migratingStylesOnly
setMigratingStylesOnly:
rowUIDsForImportedGroupingRows
setRowUIDsForImportedGroupingRows:
documentIsClosing
tableTranslatorBaseMapForPasteboard
setTableTranslatorBaseMapForPasteboard:
tableTranslatorViewMapForPasteboard
setTableTranslatorViewMapForPasteboard:
setArchivedLayoutEngineBundle:
_tableModel
_noRuleConditionalStyleSet
_needsFilterSetUpdated
_isCopyContainingCategoryColumn
_hasReference
_isAPivotTable
_wasRemovedFromDocument
_migratingStylesOnly
_documentIsClosing
_partitioner
_layoutEngine
_summaryModel
_rowUIDsWithPendingGroupingChanges
_formulaCoordSpace
_dragAndDropDetails
_overrideLayoutHint
_categoryOrder
_pivotDataModel
_pivotOrder
_hiddenStates
_translator
_fromTableCoordMapperForPasteboard
_rowUIDsForImportedGroupingRows
_archivedLayoutEngineBundle
_groupByUid
_hiddenStatesUid
_tableTranslatorBaseMapForPasteboard
_tableTranslatorViewMapForPasteboard
T@"TSCEMutableUIDSet",&,N,V_rowUIDsWithPendingGroupingChanges
TB,N,V_migratingStylesOnly
T@"TSCEMutableUIDSet",&,N,V_rowUIDsForImportedGroupingRows
TB,N,V_documentIsClosing
T{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}},N,V_tableTranslatorBaseMapForPasteboard
T{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}},N,V_tableTranslatorViewMapForPasteboard
T@"TSTArchivedLayoutEngineBundle",&,N,V_archivedLayoutEngineBundle
Tq,N,V_formulaCoordSpace
T@"NSDictionary",&,N,V_dragAndDropDetails
TB,N,V_isCopyContainingCategoryColumn
TB,N,V_hasReference
T@"TSTTablePartitioner",&,N,V_partitioner
T@"TSTLayoutHint",&,N,V_overrideLayoutHint
T@"TSTLayoutEngine",&,N,V_layoutEngine
categorized
TB,R,N,GisCategorized
T@"TSCECalculationEngine",N
T@"TSTSummaryModel",R,N,V_summaryModel
T@"TSTColumnRowUIDMap",R,N,V_columnRowUIDMap
T@"TSTCategoryOrder",R,N,V_categoryOrder
TB,R,N,V_isAPivotTable
T@"TSTTableModel",R,&,N,V_pivotDataModel
T@"TSTTableModel",R,N
T@"TSTTableTranslator",R,N
T@"TSTPivotRowColumnOrder",R,N,V_pivotOrder
T@"TSTPivotOwner",R,N
T@"TSTGroupBy",R,N
T{TSKUIDStruct=QQ},N
TI,N
Td,N
T@"NSString",&,N
Tq,N
T@"TSTTableStylePreset",&,N
T@"TSDFill",R,N
T@"TSTConcurrentMutableCellUIDSet",R,N
T@"TSTConditionalStyleFormulaOwner",R,N
T@"TSTCategoryOwner",R,N
T@"TSTHiddenStatesOwner",R,N
T@"TSTHiddenStates",&,N,V_hiddenStates
T@"TSTTableInfo",R,N
T@"TSTPencilAnnotationOwner",R,N
T@"TSTTableFilterSet",C,N
T{TSKUIDStruct=QQ},N,V_hiddenStatesUid
T@"TSTTableGroupSortOrderUID",N
T@"TSTTableSortOrder",C,N
T@"TSTSortRuleReferenceTracker",R,N
T@"TSTStrokeSidecar",R,N
T@"TSTCellWillChangeDistributor",R,N
T@"TSTTableTranslator",&,N,V_translator
T@"TSCECoordMapper",&,N,V_fromTableCoordMapperForPasteboard
T@"TSTStructuredTextImportRecord",&,N
reimportable
TB,R,N,GisReimportable
newlyImported
TB,R,N,GisNewlyImported
T@"NSArray",R,&,N
TB,R,N,V_wasRemovedFromDocument
T@"TSTGroupBy",&,N,V_groupBy
T{TSUChromeColumnIndex=S},R,N
T{TSUChromeRowIndex=I},R,N
T{TSKUIDStruct=QQ},N,V_groupByUid
T@"TSDInfoGeometry",C,D,N
T@"NSObject<TSDInfo>",D,N
T@"TSPObject<TSDOwningAttachment>",D,N
T@"TSPObject<TSDOwningAttachment>",R,D,N
TB,R,D,N,GisFloatingAboveText
TB,R,D,N,GisAnchoredToText
TB,R,D,N,GisInlineWithText
containsProperty:
performBlockWithTemporaryLayout:
objectForProperty:
floatValueForProperty:
boxedObjectForProperty:
doubleValueForProperty:
CGFloatValueForProperty:
cellDiffMapWithContext:
cellDiff
cellAfterApplyDiff:toCell:atCellUID:migrationMap:inverseCellDiff:concurrentStylesheet:defaultCellStyle:defaultTextStyle:
p_performCommentStorageDOLC:
doesSetProperty:
boolValueForSetProperty:
addCustomFormat:oldKey:fuzzyNameMatching:
properties
containsAnyPropertiesInSet:
canBeVendorStorageUid:
setCell:atCellUID:
summaryCellVendor
copyToUidFormForTableInfo:inCellCoordinate:
cellByApplyingCellDiff:toTable:andUpdateInverse:optionalConcurrentStylesheet:
tableUIDMap
p_postCommentNotificationFromDiff:inverseDiff:cellID:
applyCellDiffMap:migrationHelper:updateProperties:
applyCellMap:outPrunedCellMap:outInverseCellMap:options:stylesContainer:
applyCellDiff:atCellUID:migrationMap:inverseCellDiff:defaultCellStyle:defaultTextStyle:
applyConcurrentCellMapToBaseTable:options:requestPruneMap:stylesContainer:migrationHelper:
allowUnarchivingObjectClass:
setCurrencyDoubleValue:
dateWithTimeIntervalSinceReferenceDate:
object
setRichTextValueWithoutPlaintextCollapse:
formatFromArchive:
setFormat:isExplicit:
suggestCellFormatKind:
initFromMessage:unarchiver:
currencyDoubleValue
replies
numberFormat
encodeToArchive:archivingCustomFormats:
currencyFormat
dateFormat
durationFormat
booleanFormat
cellFormatKind
explicitFormatFlags
conditionalStyleAppliedRule
saveToMessage:archiver:
initWithLayoutEngine:range:flags:searchFlags:
cellIteratorWithRange:flags:searchFlags:
iterateCellsAndTerminateWithIterator:usingBlock:
regionFromMergeList:
addRange:
mergeListWrapperWithRangesPassingTest:
regionForList
_mergeList
TB,R
grabViewUidMapper
setViewRangeRef:preserveFlags:
setChromeRangeRef:preserveFlags:
convertUIDRefToViewTractRef
convertViewTractRefToUID
copyOnWriteUIDMapper
viewTractRef
topLeft
bottomRight
initWithTopLeft:bottomRight:tableUID:
initWithCalcEngine:viewTractRef:
initWithCalcEngine:tableUID:uidRange:preserveFlags:
viewMap
spansAllColumns
spansAllRows
uidRange
numColumns
viewColumnIndexesForUIDs:
viewRowIndexesForUIDs:
viewRangeRefs
baseRangeRefs
tsu_indexSetByExcludingIndexes:
baseRowIndexForViewRowIndex:
baseToViewPreserveFlagsAreInverted
setViewPreserveFlags:
viewRowIndexesForChromeRowIndexes:
viewColumnIndexesForChromeColumnIndexes:
viewTractRefForChromeTractRef:
viewTractRefForBaseTractRef:
viewPreserveFlags
setSpansAllColumns:
setSpansAllRows:
chromeTractRefForViewTractRef:
viewCellRegionForBaseCellRegion:
referenceIsValid:
initWithColumnUids:rowUids:purpose:
appendUidTract:
uidTractListWithPurpose:
initWithCalcEngine:viewRangeRef:preserveFlags:
initWithCalcEngine:chromeRangeRef:preserveFlags:
initWithCalcEngine:baseRangeRef:preserveFlags:
isViewRectangle
isBaseRectangle
baseRangeRef
viewRangeRef
baseTractRef
chromeTractRef
viewTractRefIfFullyValid
viewTopLeftCoord
viewBottomRightCoord
baseTopLeftCoord
baseBottomRightCoord
viewCellRegionWithRangeContext:
isValidReference
includeUidTractList
area
singleReferencedColumnUid
setBasePreserveFlags:
needsUidRectUpgrade
setNeedsUidRectUpgrade:
chromeRangeRef
setChromeRangeRef:
_uidRange
_lastKnownViewTractRef
_viewMapVersionCounter
_needsUidRectUpgrade
_viewUidMapper
_basePreserveFlags
_chromeRangeRef
T@"TSCECalculationEngine",W,N,V_calcEngine
TC,N,V_basePreserveFlags
TC,N
T{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}},R,N
T{TSKUIDStruct=QQ},R,N,V_tableUID
T{TSUViewCellCoord={TSUCellCoord=ISBB}},R
T{TSUModelCellCoord={TSUCellCoord=ISBB}},R
TB,N,V_needsUidRectUpgrade
T{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}},N,V_chromeRangeRef
hiddenColumnIndexes
hiddenRowIndexes
indexesOfHiddenColumnsInBaseCellRange:
indexesOfHiddenRowsInBaseCellRange:
initWithInfo:region:flags:searchMask:
initWithStrokeSidecar:region:
addIterator:
newRightToLeftIterator
newIterator
getNext
p_getNextCellID
p_updateDataForCellID:
setRegionIterator:
advanceToCellID:
mergeRangesIntersectingBaseCellRect:
mergeListFromModelMergeList:
updateCellData:
updateFormulaForCellData:
p_updateDataForMergeAtCellID:
nextCellData
initWithTableInfo:region:flags:searchFlags:clampingRange:
initWithTableInfo:flags:searchFlags:
initWithTableInfo:range:flags:searchFlags:
returnCellContents
region
cellData
setCellData:
returnEmptyCells
setReturnEmptyCells:
returnOneEmptyCell
setReturnOneEmptyCell:
terminateRegionIterator
setTerminateRegionIterator:
returnOnlyFormulas
setReturnOnlyFormulas:
returnMergeRanges
setReturnMergeRanges:
contentIterator
setContentIterator:
strokeIterator
setStrokeIterator:
regionIterator
dataStoreIterator
setDataStoreIterator:
rowForColumnIndexesWithMerges
setRowForColumnIndexesWithMerges:
_columnIndexToMergeRangeMap
_returnCellContents
_returnEmptyCells
_returnOneEmptyCell
_terminateRegionIterator
_returnOnlyFormulas
_returnMergeRanges
_rowForColumnIndexesWithMerges
_region
_cellData
_contentIterator
_strokeIterator
_regionIterator
_dataStoreIterator
T@"TSTTableInfo",&,N,V_tableInfo
T@"TSTTableModel",&,N,V_tableModel
T@"TSTCellRegion",R,N,V_region
T@"TSTMutableCellIteratorData",&,N,V_cellData
TB,N,V_returnEmptyCells
TB,N,V_returnOneEmptyCell
TB,N,V_terminateRegionIterator
TB,N,V_returnOnlyFormulas
TB,N,V_returnMergeRanges
T@"<TSTCellRegionIterating><TSTMutableCellIteratorDataUpdating>",&,N,V_contentIterator
T@"<TSTCellRegionIterating><TSTMutableCellIteratorDataUpdating>",&,N,V_strokeIterator
T@"<TSTCellRegionIterating>",&,N,V_regionIterator
T@"<TSTCellRegionIterating><TSTMutableCellIteratorDataUpdating>",&,N,V_dataStoreIterator
TI,N,V_rowForColumnIndexesWithMerges
TB,R,N,V_returnCellContents
initWithProperties:
p_regionStringForTableStyleArea:
colorWithColor:
blackColor
whiteColor
colorWithRed:green:blue:alpha:
p_initBodyRegionPropertyMap:presetID:colors:alternate:
p_initHeaderRowRegionPropertyMap:presetID:colors:alternate:
p_initHeaderColumnRegionPropertyMap:presetID:colors:alternate:
p_initFooterRowRegionPropertyMap:presetID:colors:alternate:
validateIntValue:forProperty:
validateObjectValue:withClass:forProperty:
loadCellStylePropertiesIntoPropertyMap:fromArchive:unarchiver:
overrideCount
saveCellStylePropertiesToArchive:archiver:
loadCellStyleFromArchive:unarchiver:
saveCellStyleToArchive:archiver:
isIdentified
styleIdentifier
imageData
renderedImageSizeForObjectSize:
definesProperty:
null
setValue:forProperty:
propertySet
allProperties
addProperties:
boxedValueForProperty:
enumeratePropertiesUsingBlock:
setBoxedValue:forProperty:
propertiesAllowingNSNull
nonEmphasisCellProperties
categoriesCellProperties
styleIDForPreset:andTableStyleArea:
textStyleIDForPreset:andTableStyleArea:
initDefaultPropertyMap:forTableStyleArea:presetID:colors:alternate:
targetSizeForImageData:associatedHint:
upgradeIfNecessary
containsStyle:
argumentSpec
insertFormulaText:includeWhitespace:
numberWithUnsignedInteger:
setWithSet:
expressionsMatchingCSENodeData:forNode:
recordExpression:data:
expressionsIdenticalToExpression:
expressionSize:
_nodesToData
_hashesToNodeSets
strongToStrongObjectsMapTable
groupByForRowGroups
groupByForColumnGroups
rowGroupings
columnGroupings
baseMap
orderedUidsForDimension:
rowUidsForRowGroupUid:
columnUidsForColumnGroupUid:
flushCachedIndexSets
initWithTableUID:summaryColumns:summaryRows:labelRows:
setChromeCoordsAreViewCoords:
mapBaseRow:toViewRow:
mapBaseColumn:toViewColumn:
summaryMap
mapSummaryRow:toViewRow:
mapSummaryColumn:toViewColumn:
viewCellCoordForCellUID:
p_columnRowTypeForColumnIndex:
p_columnRowTypeForRowIndex:
styleAreaForColumnType:rowType:forAPivotTable:
cellValueTypeAtSummaryModelCoord:
p_applyViewCellCoord:toSummaryUsingBlock:toBaseUsingBlock:
p_applyViewRowIndex:toSummaryUsingBlock:toBaseUsingBlock:toBeyondBoundsUsingBlock:
p_applyViewColumnIndex:toSummaryUsingBlock:toBaseUsingBlock:toBeyondBoundsUsingBlock:
baseColumnIndexForViewColumnIndex:
summaryColumnIndexForViewColumnIndex:
summaryCellCoordForViewCellCoord:
getCell:atCellCoord:
baseCellCoordForCellUID:
summaryRowIndexForViewRowIndex:
cellExistsAtCellCoord:
regionFromCellCoordSet:
viewRowIndexForRowUID:
indexLessThanIndex:
viewColumnIndexForColumnUID:
rowGroupUidForRowUid:outAggregateIndex:
columnGroupUidForColumnUid:outAggregateIndex:
i_populatePivotCachedIndexSetsIfNeeded
numberWithUnsignedChar:
i_indexesForSummaryColumnsAtGroupLevel:
i_indexesForLeadingColumnsAtGroupLevel:
i_indexesForLeadingSummaryColumnsAtGroupLevel:
i_populateIndexesForSummaryColumns
i_populateIndexesForLeadingColumns
i_populateIndexesForLeadingSummaryColumns
minRowLevel
minColumnLevel
maxVisibleRowLevel
maxVisibleColumnLevel
metadataForColumnIndex:
aggregateIndexForColumnIndex:
aggregateIndexForRowIndex:
i_indexesForSummaryRowsAtGroupLevel:
cachedPivotIndexSetsAreValid
setCachedPivotIndexSetsAreValid:
pivotCachedIndexesUnfairLock
setPivotCachedIndexesUnfairLock:
cachedIndexesForSummaryColumns
setCachedIndexesForSummaryColumns:
cachedSummaryColumnIndexesAtLevels
setCachedSummaryColumnIndexesAtLevels:
cachedIndexesForLeadingColumns
setCachedIndexesForLeadingColumns:
cachedLeadingColumnIndexesAtLevels
setCachedLeadingColumnIndexesAtLevels:
cachedLeadingSummaryColumnIndexesAtLevels
setCachedLeadingSummaryColumnIndexesAtLevels:
_cachedPivotIndexSetsAreValid
_pivotCachedIndexesUnfairLock
_cachedIndexesForSummaryColumns
_cachedSummaryColumnIndexesAtLevels
_cachedIndexesForLeadingColumns
_cachedLeadingColumnIndexesAtLevels
_cachedLeadingSummaryColumnIndexesAtLevels
TB,N,V_cachedPivotIndexSetsAreValid
T{os_unfair_lock_s=I},N,V_pivotCachedIndexesUnfairLock
T@"NSIndexSet",&,N,V_cachedIndexesForSummaryColumns
T@"NSMapTable",&,N,V_cachedSummaryColumnIndexesAtLevels
T@"NSIndexSet",&,N,V_cachedIndexesForLeadingColumns
T@"NSMapTable",&,N,V_cachedLeadingColumnIndexesAtLevels
T@"NSMapTable",&,N,V_cachedLeadingSummaryColumnIndexesAtLevels
initWithSymbol:attribute:
symbol
attribute
detailsWithSymbol:attribute:
isEqualToStockDetails:
setSymbol:
setAttribute:
_symbol
_attribute
T@"NSString",&,N,V_symbol
Tq,N,V_attribute
initWithTileRowIndex:wideOffsets:
_archivedColumnCount
_replaceCellAtIndex:withCell:formatKeys:
_insertCell:atIndex:formatKeys:
_removeCellAtIndex:
enumerateStoragesInColumnRange:getPreBNC:withBlock:
validateWithResult:
stringWithString:
accumulateCurrentCellsConcurrentlyAtColumns:usingCellCreationBlock:
lockForConcurrentAccess
unlockForConcurrentAccess
cellIndexAtOrAfterIndex:
cellIndexAtOrBeforeIndex:
enumerateStoragesInColumnRange:withBlock:
searchCellStorageRefAtColumnIndex:searchMask:
_currentData
_preBNCData
_maxColumnIndexPrivate
_maxColumnIndexIsValidPrivate
_unfairLock
_tileRowIndex
_cellCount
TI,N,V_tileRowIndex
TQ,R,N,V_cellCount
uuidsAsTSUVector
uidsCollapsed
uidsExpanded
initWithCollapsed:expanded:dimension:
initWithTSUUUIDVector:
initWithArchive:
saveToArchive:
makeInverse
dimension
_collapsedGroupUIDs
_expandedGroupUIDs
_dimension
_uidsCollapsed
_uidsExpanded
T@"TSCEUIDSet",R,N,V_uidsCollapsed
T@"TSCEUIDSet",R,N,V_uidsExpanded
Tq,R,N,V_dimension
numberWithInteger:
integerValue
p_computeinteractionType:
initWithFormulaObject:locale:
p_mightBeEqual:
isEquivalentToFormula:
initWithArchive:isPreUFF:
T@"TSCEFormulaObject",R,N
initWithFormulaObject:fromTableInfo:fromCellID:
cellSpecReplacingFormulaObject:locale:
hasTSCEFormula
isEquivalent:
categoryAggregateType
stockDetails
_formulaObject
_locale
_categoryAggregateType
_stockDetails
T@"TSCEFormulaObject",R,N,V_formulaObject
TC,R,N,V_categoryAggregateType
T@"TSTStockDetails",R,N,V_stockDetails
hasNumberFormat
hasCurrencyFormat
hasDateFormat
hasDurationFormat
hasTextFormat
hasBooleanFormat
hasImportWarningSet
underlyingDoubleValue
stringID
richTextID
cellStyleID
textStyleID
controlCellSpecID
formulaSyntaxErrorID
numberFormatID
currencyFormatID
dateFormatID
durationFormatID
textFormatID
booleanFormatID
commentStorageID
importWarningSetID
setValueType:
setExplicitFormatFlags:
setCurrencyDecimalValue:roundToDoublePrecision:
setNumberDecimalValue:roundToDoublePrecision:
setStringID:
setRichTextID:
setCellStyleID:
setTextStyleID:
setConditionalStyleID:
setFormulaID:
setControlCellSpecID:
setFormulaSyntaxErrorID:
setNumberFormatID:
setCurrencyFormatID:
setDateFormatID:
setDurationFormatID:
setTextFormatID:
setBooleanFormatID:
setCommentStorageID:
setImportWarningSetID:
ruleAtGroupLevel:
p_isEqual:
groupingColumnUid
insertObject:atIndex:
removeObjectAtIndex:
ruleAtIndex:
initWithGroupingColumnUid:columnUid:groupingType:
replaceRuleAtIndex:withRule:
replaceObjectAtIndex:withObject:
addRule:atIndex:
removeRuleAtIndex:
moveRuleFromIndex:toIndex:
changeGroupingTypeForRuleIndex:toType:
initWithGroupingColumns:
groupingColumnForColumnUID:
isGroupingColumnUidsEqual:
appendRules:
addRule:atGroupLevel:
removeRuleAtGroupLevel:
moveRuleFromGroupLevel:toLevel:
changeGroupingTypeForGroupLevel:toType:
replaceRuleAtGroupLevel:withRule:
groupingColumnUidList
_groupingColumns
initWithFormatString:
formatString
datePortionOfDateTimeFormatString:
formatStringContainsOnlyDate
formatStringContainsAMPMSpecifier
todayFormatForLocale:
nowFormatForLocale:
resetGroupingList
resetGroupings
asArray
columnAggregateUid
pivotDataTableUID
setGroupBySet:
clearMissingCombinations
aggregateAtIndex:
setMinion:
numPracticalGroupBys
groupingColumnsForOwnerIndex:
registerGroupByForColumns:ownerIndex:hiddenStates:groupBySet:
setAggregates:
flushAllChanges
p_resetAllGroupUids:baseGroupUids:summaryGroupUids:forGroupBy:uptoLevel:isFlattening:
initialGroupOrderForGroupBy:baseLevel:outAllUids:outBaseUids:outSummaryUids:
groupColumnIndexesForOwnerIndex:
groupByForOwnerIndex:createIfMissing:
topLevelGroupNode
showAsType
aggregateIndexForUidCoord:
qualifiedColumnNameForAggregateIndex:useShortLabel:allowDuplicateNames:locale:
aggregateType
localizedShortLabelForAggType:
localizedLabelForAggType:
columnNameForAggregateIndex:allowDuplicateNames:
compactQualifiedColumnNameForAggregateIndex:useShortLabel:allowDuplicateNames:locale:
localizedCaseInsensitiveCompare:
groupByForColumnLevel:rowLevel:
groupValueUidForTuple:appendingTuple:
setAggregateIndex:
setAggregateType:
setShowAsType:
setAggregateFieldName:
columnNameForCategoryLevel:shortForm:
addDataField:withValue:
ownerIndex
findGroupNodeForValue:atLevel:createIfMissing:
topLevelGroupUid
categoryRefForUidCoord:outShowAsType:
setColumnUid:
setType:
firstAggregate
groupingColumnForIndex:
percentRunningDenominatorCategoryRefFor:inGroupBy:runningOnColumnUid:forAggregate:
groupingIndexForColumnUID:
ownerIndexForGroupingCombination:
findExistingGroupNodeInGroupBy:usingValues:upToLevel:
columnGroupLevelForColumnUID:
rowGroupLevelForRowUID:
anyAggregator
groupNodeForUuidCoord:
groupByForUuidCoord:
groupValueTupleByAppendingTuple:
initWithPivotTableUID:
linkToCalcEngine:
restoreFromPivotDataTable:columnGroupings:rowGroupings:aggregates:flatteningDimension:
setPivotRulesWithPivotDataTable:columnGroupings:rowGroupings:aggregates:flatteningDimension:
maxGroupByIndex
sawMissingCombination:
allGroupRoots
allColumnGroupUids
allRowGroupUids
baseColumnGroupUids
baseRowGroupUids
summaryColumnGroupUids
summaryRowGroupUids
allColumnUids
allRowUids
baseColumnUids
baseRowUids
hasRunningTotalAggregates
expandGroupUidsForFlattening:forDimension:
aggregateIndexForColumnUid:
aggregateIndexForRowUid:
aggregateForUidCoord:
aggregateIndexForAggName:locale:
columnUIDForGroupingColumnName:
getPivotDataBundleForUidCoord:
grandGrandTotalCategoryRefForAggregate:
grandTotalCategoryRefForColumn:forAggregate:
grandTotalCategoryRefForRow:forAggregate:
percentParentDenominatorCategoryRefFor:inGroupBy:forAggregate:forShowAsType:
restrictColumnIndexes:toColumnGroupLevel:forPivotTable:
restrictRowIndexes:toRowGroupLevel:forPivotTable:
restrictColumnIndexes:forAggrIndexLevel:forPivotTable:
restrictRowIndexes:forAggrIndexLevel:forPivotTable:
hasUnfilteredAt:forDimension:
filteringCategoryRefAt:forDimension:
getPivotHidingIndexesForGroupingColumn:columns:rows:forHiding:forPivotTable:
getHidingIndexesForGrandTotalsForPivotTable:columns:rows:
groupValueTupleForUuidCoord:createIfMissing:
verifyConnectionsWithPivotDataModel:pivotTableUID:
pivotTableUID
setPivotTableUID:
pivotDataTable
bodyGroupingList
setBodyGroupingList:
_inUseGroupBys
_aggregateUidList
_aggregateUidMap
_allColumnGroupUids
_baseColumnGroupUids
_summaryColumnGroupUids
_allRowGroupUids
_baseRowGroupUids
_summaryRowGroupUids
_allFlattenedUids
_baseFlattenedUids
_groupAggregateUidFlatteningMap
_groupAggregateUidUnflatteningMap
_assertedOnMissingCombinations
_filterSet
_pivotDataTable
_columnGroupings
_rowGroupings
_aggregates
_flatteningDimension
_activeFlatteningDimension
_bodyGroupingList
_pivotTableUID
T@"TSTGroupingColumnList",&,N,V_bodyGroupingList
TB,R,N,V_isRegisteredWithCalcEngine
T{TSKUIDStruct=QQ},N,V_pivotTableUID
T@"TSTTableModel",R,N,V_pivotDataTable
T@"TSCECalculationEngine",&,N,V_calcEngine
T@"TSTGroupingColumnList",R,N,V_columnGroupings
T@"TSTGroupingColumnList",R,N,V_rowGroupings
T@"TSTColumnAggregateList",R,N,V_aggregates
Tq,R,N,V_flatteningDimension
Tq,R,N,V_activeFlatteningDimension
T@"TSTTableFilterSet",C,N,V_filterSet
setMessageType:messagePrototype:descriptor:unarchiveClassname:
setDeprecatedMessageType:
setUpgradeMessageType:messagePrototype:unarchiveClassname:
mutableCopyWithZone:
intersectsProperties:
propertySetFromUnionOfPropertySets:
objectForSetProperty:
objectForResetProperty:
addProperty:
p_resetCachedFlags
setBoolValue:forProperty:
setFloatValue:forProperty:
addValuesFromPropertyMap:
filterWithProperties:
removeProperty:
removeAllPropertyValues
objectApplyingDiffToObject:andUpdateInverse:optionalConcurrentStylesheet:
cellDiffProperties
objectByRemovingPropertiesInMap:addingPropertiesInMap:updateInverseResetPropertyMap:updateInverseSetPropertyMap:
objectByRemovingPropertiesInMap:addingPropertiesInMap:updateInverseResetPropertyMap:updateInverseSetPropertyMap:optionalConcurrentStylesheet:
resetPropertiesFromMap:
setPropertiesFromMap:
initFromCommandPropertyMapMessage:unarchiver:
saveToCommandPropertyMapMessage:archiver:
containsStringProperties
doesSetAnyProperties:
doesResetProperty:
doesResetAnyProperties:
containsCellStyleProperties
containsTextStyleProperties
resetObject:forProperty:
resetIntValue:forProperty:
resetFloatValue:forProperty:
propertyMapToSetWithProperties:
removeObjectsToSetForProperty:
objectApplyingDiffToObject:andUpdateInverse:
estimatedByteSize
propertyMapToSet
setPropertyMapToSet:
propertySetToSet
setPropertySetToSet:
propertyMapToReset
setPropertyMapToReset:
propertySetToReset
setPropertySetToReset:
hasCachedContainsCellStyleProperties
setHasCachedContainsCellStyleProperties:
cachedContainsCellStyleProperties
setCachedContainsCellStyleProperties:
hasCachedContainsTextStyleProperties
setHasCachedContainsTextStyleProperties:
cachedContainsTextStyleProperties
setCachedContainsTextStyleProperties:
hasCachedContainsStringProperties
setHasCachedContainsStringProperties:
cachedContainsStringProperties
setCachedContainsStringProperties:
_hasCachedContainsCellStyleProperties
_cachedContainsCellStyleProperties
_hasCachedContainsTextStyleProperties
_cachedContainsTextStyleProperties
_hasCachedContainsStringProperties
_cachedContainsStringProperties
_propertyMapToSet
_propertySetToSet
_propertyMapToReset
_propertySetToReset
T@"TSSPropertyMap",&,N,V_propertyMapToSet
T@"TSSMutablePropertySet",&,N,V_propertySetToSet
T@"TSSPropertyMap",&,N,V_propertyMapToReset
T@"TSSMutablePropertySet",&,N,V_propertySetToReset
TB,N,V_hasCachedContainsCellStyleProperties
TB,N,V_cachedContainsCellStyleProperties
TB,N,V_hasCachedContainsTextStyleProperties
TB,N,V_cachedContainsTextStyleProperties
TB,N,V_hasCachedContainsStringProperties
TB,N,V_cachedContainsStringProperties
empty
TB,R,N,GisEmpty
p_convertToUuidBasedCellListUsingTableInfo:pruneCategorizedCells:
viewCellRect
cellUIDRange
p_cacheRowColumnUIDs
p_accumulateCurrentCellsConcurrentlyUsingBlock:
cellRegionWithTableInfo:
changeDescriptorWithType:cellRegion:
gatherer
cellRanges
gatheredCellRegion
changeDescriptorWithType:strokeRegion:
mergeActions
cellRegionForTable:
changeDescriptorWithType:cellRegion:strokeRegion:
p_clearDataListIDs
p_baseColumnIndexes
p_baseRowIndexes
cellUIDRanges
initWithCellUIDRangeVector:
viewCellRects
regionFromViewCellRectVector:
p_simpleInvokeBlock:
addRegion:
p_invokeBlock:
p_enumerateNewAndOldCellsSeriallyUsingBlock:
p_enumerateNewAndOldCellsSeriallyUsingPreBNCBlock:
p_enumerateCellsAddedAndRemovedOfType:usingBlock:
p_enumerateCellsAddedAndRemovedForFormatsUsingBlock:
p_gatherRowState:
p_enumerateRowsOfCellsConcurrentlyUsingBlock:
p_enumerateCellsAddedAndRemovedForFormatsWithOptions:usingBlock:
hasFormulaAnyError
hasAnyFormats
p_enumerateColumnCellCountDiffUsingBlock:
p_enumerateRowCellCountDiffUsingBlock:
p_enumerateCustomFormatsBeingAddedUsingReplacementBlock:
p_pruneToBaseWithTableInfo:
p_convertToInverseCellMap
verify
p_setObjectLocale:
cellLists
setStrongReferenceArray:message:
allocWithZone:
setCellLists:
setUidBased:
initWithArray:
setMergeActions:
changeDescriptorsForTable:
containsCellChanges
hasMultipleCells
appendCellList:
affectedBaseColumnAndRowIndexes
cellRegionWithTableInfo:passingTest:
enumerateSeriallyUsingBlock:
gatherRowState:
enumerateRowsOfCellsConcurrentlyUsingBlock:
updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:preBNCBlock:
enumerateColumnCellCountDiffUsingBlock:
enumerateRowCellCountDiffUsingBlock:
enumerateCustomFormatsBeingAddedUsingReplacementBlock:
convertToInverseCellMap
addMergeActions:
pushInverseMergeAction:
clearMerges
mayModifyFormulasInCells
setMayModifyFormulasInCells:
mayModifyValuesReferencedByFormulas
setMayModifyValuesReferencedByFormulas:
inverseMergeActions
setInverseMergeActions:
cachedRowUIDs
setCachedRowUIDs:
cachedColumnUIDs
setCachedColumnUIDs:
applyingToTable
setApplyingToTable:
_uidBased
_mayModifyFormulasInCells
_mayModifyValuesReferencedByFormulas
_applyingToTable
_mergeActions
_cellLists
_inverseMergeActions
_cachedRowUIDs
_cachedColumnUIDs
uidBased
TB,N,GisUIDBased,V_uidBased
T@"NSMutableArray",&,N,V_cellLists
T@"NSMutableArray",&,N,V_mergeActions
T@"NSMutableArray",&,N,V_inverseMergeActions
T{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}},N,V_cachedRowUIDs
T{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}},N,V_cachedColumnUIDs
TB,N,V_applyingToTable
TB,N,V_mayModifyFormulasInCells
TB,N,V_mayModifyValuesReferencedByFormulas
initWithContext:viewCellRect:cellUIDRange:
regionFromViewCellRect:
p_pruneCellsAtRow:rowsSize:columnsSize:
enumerateIndexesWithOptions:usingBlock:
p_pruneCellsAtColumn:rowsSize:columnsSize:
baseRowIndexForRowUID:
baseColumnIndexForColumnUID:
p_interestingCellIndexes
p_setupInterestingCells:interestingCellIndexes:forAdding:
dictionary
formatIDForStorageFlag:
numberWithUnsignedInt:
enumerateKeysAndObjectsUsingBlock:
unsignedIntegerValue
asCustomFormatWrapper
initWithContext:cellUIDRange:
setViewCellRect:
setCellUIDRange:
interestingCells
setInterestingCells:
formatsAdded
setFormatsAdded:
formatsRemoved
setFormatsRemoved:
tilesPerRow
setTilesPerRow:
rowInfosPerRow
setRowInfosPerRow:
_viewCellRect
_cellUIDRange
_tilesPerRow
_rowInfosPerRow
_cells
_baseRows
_baseColumns
_viewRows
_viewColumns
_cellCountDiffsPerRow
_cellCountDiffsPerColumn
_preBNCKeysList
_oldCells
_containsCellBorderChanges
_interestingCells
_formatsAdded
_formatsRemoved
TB,R,N,GisUIDBased,V_uidBased
T{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}},N,V_viewCellRect
T{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}},N,V_cellUIDRange
TB,R,N,V_containsCellBorderChanges
T@"NSArray",&,N,V_interestingCells
T@"NSMutableDictionary",&,N,V_formatsAdded
T@"NSMutableDictionary",&,N,V_formatsRemoved
T@"NSMutableArray",&,N,V_tilesPerRow
T@"NSMutableArray",&,N,V_rowInfosPerRow
enumerateIndexesInRange:options:usingBlock:
shiftIndexesStartingAtIndex:by:
validCells
setValidCells:
_validCells
T@"NSMutableIndexSet",&,N,V_validCells
readRepeatedReferenceMessage:class:protocol:completion:
setEstimatedByteSize:
addObject:willModify:
estimatedByteSizeOfElement:
componentReadVersion
setImportSettings:
setImportSource:
setImportDate:
setSourceData:
setConfidence:
setImportedRegion:
setSourceColumnCount:
setSourceRowCount:
isWholeTableImport
settingsFromArchive:
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
dataWithBytes:length:
dataWithContentsOfURL:
sourceEncoding
setSourceEncoding:
fileSystemRepresentation
bytes
record
recordFromArchive:
importSource
sourceData
confidence
importedRegion
sourceColumnCount
sourceRowCount
pasteInverseCommands
setPasteInverseCommands:
pasteType
setPasteType:
pasteWasUpdate
setPasteWasUpdate:
_pasteWasUpdate
_importSettings
_importSource
_importDate
_sourceData
_confidence
_importedRegion
_sourceColumnCount
_sourceRowCount
_pasteInverseCommands
_pasteType
T@"TSKStructuredTextImportSettings",&,N,V_importSettings
T@"NSURL",&,N,V_importSource
T@"NSDate",&,N,V_importDate
T@"NSData",C,N,V_sourceData
Td,N,V_confidence
T@"TSTCellRegion",&,N,V_importedRegion
TQ,N,V_sourceColumnCount
TQ,N,V_sourceRowCount
T@"NSArray",&,N,V_pasteInverseCommands
TQ,N,V_pasteType
TB,N,V_pasteWasUpdate
wholeTableImport
TB,R,N,GisWholeTableImport
listType
initWithType:keyRange:context:
p_shouldUseReverseMap
p_setupWithType:nextKeyID:
p_addInitialSegment
loadObjectsFromDataListArchive:unarchiver:
keys
format
asCurrencyFormat
currencyCode
stringFromDouble:locale:
setIsMarkedCorrupt:
payload
p_enumerateDataObjectsUsingBlock:
isNewForBraveNewCell
encodeObjectsToDataListArchive:archiver:
keyRange
p_segmentForKey:
setObject:atIndexedSubscript:
shouldSplit
split
indexOfObject:
removeIndex:
initObjectWithString:refCount:
initObjectWithFormat:refCount:
initObjectWithCellSpec:refCount:
initObjectWithStyle:refCount:
initObjectWithFormulaError:refCount:
initObjectWithPopUpMenuModel:refCount:
richTextParentInfo
payloadWithStorage:
initObjectWithRichTextPayload:refCount:
initObjectWithConditionalStyleSet:refCount:
initObjectWithCommentStorage:refCount:
initObjectWithImportWarningSet:refCount:
p_objectForPayload:
p_objectForKey:
tst_dataObjectIsEqual:
p_nextAvailableKey
wrappedObjectForPayload:
p_setObject:atKey:updateReverseMap:
listTypeString
takeReference
refCount
p_setPayload:atSuggestedKey:callWillModify:
takeReferences:
richTextStorage
p_clearReverseMapForObject:atKey:
enumerateObjectsWithBlock:
setPayload:
conditionalStyleSet
style
p_objectCount
takeReferences:forKey:callWillModify:
dropReferences:forKey:callWillModify:
dropReferences:
stringForListType:
classForUnarchiver:
setRichTextParentInfo:
initWithType:context:
p_replaceObjectAtKey:withObject:
enumerateFormatsUsingBlock:
enumerateCustomFormatsUsingBlock:
enumerateKeysAndCountsUsingBlock:
refCountForKey:
takeReferenceForKey:callWillModify:
dropReferenceForKey:callWillModify:
setListType:
setIsNewForBraveNewCell:
nextID
setNextID:
useReverseMap
cachedSegment
setCachedSegment:
_segments
_payloadToObjectMap
_unusedKeySet
_isNewForBraveNewCell
_useReverseMap
_listType
_nextID
_richTextParentInfo
_cachedSegment
Ti,N,V_listType
TI,N,V_nextID
TB,R,N,V_useReverseMap
T@"TSTTableDataListSegment",N,V_cachedSegment
TB,N,V_isNewForBraveNewCell
T@"NSObject<TSDContainerInfo><TSWPStorageParent>",N,V_richTextParentInfo
formulaError
importWarningSet
popUpMenuModel
shouldWrap
addCellFormat:atSuggestedKey:callWillModify:
addCommentStorage:atSuggestedKey:callWillModify:
addConditionalStyleSet:atSuggestedKey:callWillModify:
addFormula:atSuggestedKey:callWillModify:
addControlCellSpec:atSuggestedKey:callWillModify:
addFormulaError:atSuggestedKey:callWillModify:
addImportWarningSet:atSuggestedKey:callWillModify:
addMultipleChoiceListFormat:atSuggestedKey:callWillModify:
addRichText:atSuggestedKey:callWillModify:
addString:atSuggestedKey:callWillModify:
addStyle:atSuggestedKey:callWillModify:
cellFormatForKey:
commentStorageForKey:
conditionalStyleSetForKey:
formulaForKey:
controlCellSpecForKey:
formulaErrorForKey:
importWarningSetForKey:
multipleChoiceListFormatForKey:
richTextForKey:
stringForKey:
stringForKey:shouldWrap:
styleForKey:
documentObject
legacyID
upgradedCustomFormatKeyForLegacyID:
unpopulatedCustomFormatWrapperWithFormatType:customFormatKey:
setKey:
copyByUpgradingToLinkedRefAtHostCellRef:
UUID
foreach:
hasDuplicatedElements
reassignCustomFormatUIDForPaste:
getRefCountsFromDataList
tst_dataObjectHash
characterSetWithCharactersInString:
strokeWithColor:width:
strokePresetListForDefaultPropertyMapForTablePresetID:colors:
horizontalStrokeForStrokePreset:
verticalStrokeForStrokePreset:
exteriorStrokeForStrokePreset:
maskForStrokePreset:
maskForStrokePresets:
validateIntValueAsBool:forProperty:
willModifyForUpgradeWithOptions:
deriveCategoryTopStrokeFromFooterRowSeparatorStroke:
deriveCategoryBottomStrokeFromFooterRowSeparatorStroke:
deriveCategoryInteriorStrokeFromFooterRowVerticalStroke:
emptyStrokeWithWidth:
deriveBodyPivotGroupHorizontalStrokeFromTableStyle:propertyMap:
deriveBodyPivotGroupVerticalStrokeFromTableStyle:propertyMap:
deriveBodyPivotDeEmphasisHorizontalStrokeFromTableStyle:propertyMap:
deriveBodyPivotEmphasisVerticalStrokeFromTableStyle:propertyMap:
deriveHeaderColumnPivotGroupHorizontalStrokeFromTableStyle:propertyMap:
deriveHeaderColumnPivotGroupDeEmphasisStrokeFromTableStyle:propertyMap:
deriveHeaderColumnPivotSeparatorStrokeFromTableStyle:propertyMap:
deriveHeaderRowPivotGroupVerticalStrokeFromTableStyle:propertyMap:
deriveHeaderRowPivotGroupDeEmphasisStrokeFromTableStyle:propertyMap:
deriveHeaderRowPivotTitleStrokeFromTableStyle:propertyMap:
deriveFooterRowPivotGroupVerticalStrokeFromTableStyle:propertyMap:
tsp_initWithProtobufString:
tsp_saveToProtobufString:
loadTableStylePropertiesIntoPropertyMap:fromArchive:unarchiver:
saveTableStylePropertiesToArchive:archiver:
curatedTableStylePropertySetForCrossDocumentPasteMasterComparison
hasEqualValues:forProperties:
strokeByTransformingByTransform:
boxedValueForProperty:oldBoxedValue:transformedByTransform:
nonEmphasisTableProperties
presetIDForStyleID:
styleIDForPreset:
defaultIntValueForProperty:
initDefaultStrokePresetListInPropertyMap:presetID:colors:
initDefaultPropertyMap:presetID:colors:alternate:
strokeForStrokePreset:
validatedLoadFromUnarchiver:
isEquivalentForCrossDocumentPasteMasterComparison:
infos
setSelection:
lastCellID
selection
selectionWithParent:
T@"TSKSelection",&,N
_cellSelection
_isLegacyBasedIDSelection
_legacyAnchorCellID
_legacyCursorCellID
_legacyCellRegion
_legacyBaseCellRegion
initWithColumnAggregateUid:columnUid:aggregateType:level:showAsType:runningTotalGroupingColumnUid:
runningTotalGroupingColumnUid
level
initForCategoriesWithColumnUid:aggregateType:level:
initForPivotWithColumnUid:aggregateType:
initForPivotWithColumnUid:aggregateType:showAsType:runningTotalGroupingColumnUid:
initForPivotWithColumnAggregateUid:columnUid:aggregateType:showAsType:runningTotalGroupingColumnUid:
initAsEmptyAggregate
getUUIDBytesForColumnAggregate:
getUUIDBytesForColumn:
getUUIDBytesForRunningTotalGroupingColumn:
_columnUid
_aggregateType
_level
_showAsType
_columnAggregateUid
_runningTotalGroupingColumnUid
_definedColumnAggregateUid
_definedRunningTotalGroupingColumnUid
Ti,R,N,V_level
TC,N,V_aggregateType
TC,R,N,V_showAsType
_createTileWithID:
setKeepObjectInMemory:
_groupForTileID:
setReference:forTileID:
pruneTilesForRows:
_upgradeFromTileIDMap:referenceMap:
objectAndReturnError:
domain
code
tsp_isRecoverable
tsp_hintsDescription
_tileForID:createIfMissing:
setStrongLazyReference:message:
enumerateReferencesWithBlock:
indexGreaterThanOrEqualToIndex:
isEmbiggened
_enumerateLoadedTiles:
enumerateTilesConcurrentlyUsingBlock:
groupWithStartingTileID:
owner
_setTile:forID:
enumerateTilesWithBlock:
_enumerateGroups:
enumerateLoadedTilesWithBlock:
_removeTileForID:
indexGreaterThanIndex:
tileSize
lastPopulatedRowIndex
_shiftRowsDownAtIndex:count:
_yankRowRange:
_spliceRows:atIndex:
_clearContentAtIndex:count:
_shiftRowsUpAtIndex:count:
tsu_addPointersFromPointerArray:
tsu_enumerateNonNullPointersUsingBlock:
_sharedQueue
performAsync:
_enumerateTiles:
performSync:
indexLessThanOrEqualToIndex:
_insertRowsAtIndex:count:
_removeRowsAtIndex:count:
incrementValueForKey:
enumerateRowsInRange:withBlock:
enumerateKeysAndValuesUsingBlock:
removeAllIndexes
initWithStorageArchive:treeArchive:nextTileID:unarchiver:owner:
saveToStorageArchive:treeArchive:archiver:
nextTileID
enumerateRowByRowInRange:withBlock:
rowInfoAtIndex:
tileForWritingAtRowIndex:outTileRange:
tileStartingAtOrBeforeRowIndex:outTileRange:
tileStartingAtOrAfterRowIndex:outTileRange:
insertRowsAtIndex:count:
columnCellCountsOfRowsInRange:
populatedTiles
pruneTileForRowIndex:
needToUpgradeCellStorage
auditTilesForRowOverlapAndExtensionPastTableBounds:withDataStore:result:
widenTilesForUpgrade
makeStorageMap
upgradeRepairedTiles
_tileIDSet
_tileGroups
_upgradeRepairedTiles
TB,R,D,N
TB,R,N,V_upgradeRepairedTiles
TB,N,V_shouldUseWideRows
readLazyReferenceMessage:class:protocol:completion:
initWithContext:bounds:
setBounds:
_headerAtIndex:
initWithSize:hidingAction:cellStyle:textStyle:columnRowUID:
_mutableHeaderAtIndex:
updateFromMetadata:
_setHeader:atIndex:
mutableHeaderAtIndex:allowCreation:
headerAtIndex:
setHeader:atIndex:
shiftIndexesForwardAtIndex:count:
p_allocateBuckets
setHeaders:
shiftIndexesBackAtIndex:count:
hidingState
setHidingState:
enumerateHeadersWithBlock:
_mutableNoCreateHeaderAtIndex:
setNumberOfCells:
minIndex
maxIndex
populatedIndexes
initWithBucket:owner:
firstBucketForArchiving
initFromArchive:unarchiver:owner:
metadataAtIndex:hidingAction:defaultSize:uuid:
updateHeaderAtIndex:fromMetadata:
removeIndexesAtIndex:count:
swapIndex:withIndex:
moveIndexRange:toIndex:
sizeAtIndex:
setSize:atIndex:
hidingStateAtIndex:
setHidingState:atIndex:
cellStyleAtIndex:
setCellStyle:atIndex:
textStyleAtIndex:
setTextStyle:atIndex:
updateStylesWithBlock:
cellCountAtIndex:
decrementCellCountAtIndex:byAmount:
incrementCellCountAtIndex:byAmount:
resetAllCellCounts
totalCellCount
forceLoadHeaders
_buckets
_bucketCount
T@"TSPObject",R,N
initWithIndex:baseColumnIndex:rules:
initWithArray:copyItems:
filterWithIndex:baseColumnIndex:rules:
arrayByAddingObject:
filterWithRule:atIndex:
filterByAddingRule:
filterByRemovingRuleAtIndex:
filterByClearingRules
enumerateRulesUsingBlock:
filterIndex
baseColumnIndex
_filterIndex
_baseColumnIndex
_rules
TQ,R,N,V_filterIndex
T{TSUModelColumnIndex=S},R,N,V_baseColumnIndex
minKey
maxKey
initFromArchive:unarchiver:outIndex:
encodeToArchive:archiver:index:
bounds
data
setData:
_data
_bounds
T@"TSUSparseArray",&,N,V_data
T{_NSRange=QQ},N,V_bounds
reserveNextIndex
clearFormulaAtIndex:
setFormulaObject:atIndex:
replaceFormula:atCellCoord:inOwner:
initWithCreator:translationFlags:
formulaObjectAtIndex:
rangeFromFormulaObject:atCoord:useBoundingRange:
tableUIDFromFormula:atCoord:
copyByForceSettingOwnerUIDs:calcEngine:
initWithOwnerUID:
indexFromCoord:
createFormulaForUIDRange:tableUID:
rangeFromFormulaObject:atCoord:
setFormulaOwnerUID:
formulaCount
reserveNextCoordinate
markForRollback
rollbackToMark:
appendIndexedFormula:
registerAllFormulaToCalculationEngine
createFormulaObjectForRange:atIndex:tableUID:
tableUIDFromFormulaAtIndex:
remapRangeFormulasToOwnerUID:
initWithOwnerUID:archive:unarchiver:
usesOnlyFixedCoords
setUsesOnlyFixedCoords:
_formulaOwnerUID
_formulas
_nextIndex
_usesOnlyFixedCoords
TB,N,V_usesOnlyFixedCoords
T{TSKUIDStruct=QQ},N,V_formulaOwnerUID
strokeRegion
layoutSpacesInvalidateCoordinatesAfterRow:
layoutInvalidate
setLayoutInvalidate:
layoutInvalidateProvider
setLayoutInvalidateProvider:
layoutInvalidateSize
setLayoutInvalidateSize:
layoutInvalidateTableNameVisibility
setLayoutInvalidateTableNameVisibility:
layoutSpacesInvalidateCoordinates
setLayoutSpacesInvalidateCoordinates:
layoutSpacesInvalidateTableOffsets
setLayoutSpacesInvalidateTableOffsets:
layoutInvalidateChildren
setLayoutInvalidateChildren:
layoutUpdateChildren
setLayoutUpdateChildren:
layoutSpacesInvalidateCoordinatesAfterRow
setLayoutSpacesInvalidateCoordinatesAfterRow:
editingCellIDForInvalidation
setEditingCellIDForInvalidation:
mLayoutInvalidate
mLayoutInvalidateProvider
mLayoutInvalidateSize
mLayoutInvalidateTableNameVisibility
mLayoutSpacesInvalidateCoordinates
mLayoutSpacesInvalidateTableOffsets
mLayoutInvalidateChildren
mLayoutUpdateChildren
_layoutSpacesInvalidateCoordinatesAfterRow
_editingCellIDForInvalidation
TB,N,VmLayoutInvalidate
TB,N,VmLayoutInvalidateProvider
TB,N,VmLayoutInvalidateSize
TB,N,VmLayoutInvalidateTableNameVisibility
TB,N,VmLayoutSpacesInvalidateCoordinates
TI,N,V_layoutSpacesInvalidateCoordinatesAfterRow
TB,N,VmLayoutSpacesInvalidateTableOffsets
TB,N,VmLayoutInvalidateChildren
TB,N,VmLayoutUpdateChildren
T{TSUCellCoord=ISBB},N,V_editingCellIDForInvalidation
info
setLayout:
initWithLayout:
p_getLayoutDirectionLeftToRight
newLayoutHint
initWithInfo:layoutHint:
removeContainedTextEditingLayout
removeAttachmentCellLayouts
layoutState
offsetGeometryBy:
strokeFrame
isFrozen
layoutDirectionIsLeftToRight
frame
capturedInfoPositionForAttachment
spaceBundle
space
tableOffset
isDynamicallyChangingInfoGeometry
dynamicInfoGeometry
tableEnvironment
initWithFrame:
layoutGeometryFromInfo
maximumFrameSizeForChild:
alignmentFrame
invalidateLayoutSpaceTableOffsets
invalidateLayoutSpaceCoordinates
fullTransform
geometryFromFullTransform:
transform
isDynamicallyRowTabResizing
dynamicFooterHeight
styleProvidingSource
_visibleFrameForOverscrolledChildFrame:
layoutController
canvas
isAnchoredAtRight
geometryByTranslatingBy:
details
shouldShowCaption
layoutHint
validateLayoutHint:
updateChildrenFromInfo
validateTableNameVisibility
validateLayoutSpaces
setNeedsDisplay
validatePageNumberCount
setNeedsDisplayInRect:
layoutRectForCanvasRect:
invalidateLayoutSpaceCoordinatesAfterColumn:
invalidateLayoutSpaceCoordinatesAfterRow:
containedTextEditingLayout
invalidateSize
addChangeDescriptor:
invalidateChildren
invalidate
gridRangeOfLayoutSpace:
frameForGridRange:
invalidateTableOffsets
invalidateCoordinates
invalidateCoordinatesAfterColumn:
invalidateCoordinatesAfterRow:
setIsValid:
invalidateExteriorWrap
invalidatePosition
widthOfColumn:skipDynamicSwap:returnZeroIfHidden:outIsFitting:
maximumSize
heightOfRow:skipDynamicSwap:withStrokeHeights:returnZeroIfHidden:clampToPartitionSize:maximumPartitionSize:outIsFitting:
setGridRange:
entireFooterRowsCellRange
cacheHintID
headerRowsRepeat
headerColumnsRepeat
cellRange
enumerateLayoutSpacesUsingBlock:
partitionPosition
frozenHeaderColumnsSpace
frozenHeaderRowsSpace
frozenHeaderCornerSpace
repeatHeaderColumnsSpace
repeatHeaderRowsSpace
repeatHeaderCornerSpace
lockForRead
alignedStrokeFrame
canvasRectForLayoutRect:
alignedFrame
unlock
frameInRoot
setTransformToCanvas:
transformToCanvas
transformToDevice
setViewScale:
viewScale
layoutPointForCanvasPoint:
canvasPointForLayoutPoint:
canvasFrame
canvasStrokeFrame
isDynamicallyColumnTabResizing
dynamicColumnTabSize
dynamicRowTabSize
tabsRowWidthAndOptionalLeftGap:
supportsFrozenHeaders
inFindReplaceMode
suppressFrozenHeadersForEditing
isStrokeEditing
entireHeaderColumnsCellRange
isEntireCellRangeHidden:
entireHeaderRowsCellRange
setNewCanvasRevealedHorizontally:
setNewCanvasRevealedVertically:
invalidateFrame
frameHasWidthAndHeight
rangeIntersectingLayoutRect:
isDynamicallyRepressingFrozenHeaderRows
_floatingCellRangeAtRect:inLayoutSpace:withTransform:
isDynamicallyRepressingFrozenHeaderColumns
cellRangeVisibleRect
isRepeat
alignedStrokeFrameForGridRange:
region:addingRange:
layoutSpaceType
layout
gridPointHitByCanvasPoint:tabsViewable:
canvasFrameForGridRange:
intersectionCellRange:
intersectsGridRange:
intersectionGridRange:ofLayoutSpace:
canvasStrokeFrameForGridRange:
containsGridRange:
contentFrameForGridRange:
alignedOverrideFrameForGridRange:strokeWidthOverride:
intersectsRowGridRange:
intersectionRowGridRange:ofLayoutSpace:
alignedStrokeLineForRowGridRange:
intersectsColumnGridRange:
intersectionColumnGridRange:ofLayoutSpace:
alignedStrokeLineForColumnGridRange:
alignedStrokeFramePathForGridRange:frameType:viewScale:inset:reoriginToZero:clipToVisibleRect:cornerRadius:outMaskPath:
alignedStrokeLinePathForRowGridRange:transform:inset:reoriginToZero:cornerRadius:
alignedStrokeLinePathForColumnGridRange:transform:inset:reoriginToZero:cornerRadius:
alignedStrokeFramePathForGridRange:transform:inset:reoriginToZero:cornerRadius:
transformUsingAffineTransform:
bezierPathWithRect:
subtractBezierPath:
uniteWithPolygonalBezierPath:
uniteWithBezierPath:
alignedMaskStrokeFramePathForTransform:cornerRadius:
enumerateMissingRowsIntersectingCellRange:usingBlock:
enumerateRowsIntersectingCellRange:usingBlock:
appendBezierPath:
enumerateMissingColumnsIntersectingCellRange:usingBlock:
enumerateColumnsIntersectingCellRange:usingBlock:
alignedContentFrameForGridRange:
visiblePartOfRange:
alignedStrokeFramePathForRange:frameType:viewScale:inset:reoriginToZero:clipToVisibleRect:cornerRadius:outMaskPath:
setTableNameEditingStorage:
addObserver:
tableNameEditingStorage
removeObserver:
invalidateTableNameHeight
tableNameHeightForStorage:withMaxWidth:
width
alignedRectForLayoutRect:
frameForTableNameBorder
strokeFrameForTableNameBorder
alignedStrokeFrameForTableNameBorder
isBeingManipulated
isInDynamicLayoutMode
dynamicRepResize
isDynamicallyChangingContent
dynamicContentDelegate
cell:forCellID:
modelCellIDForLayoutCellID:
isDynamicallyChangingRowOrColumnCount
naturalAlignmentForCellID:
pageNumber
pageCount
validateCellForDrawing:cell:contents:wrap:verticalAlignment:padding:layoutCacheFlags:pageNumber:pageCount:
cachedCellID
cachedMergeRange
cachedCellWraps
cachedParagraphAlignment
extendedPartitionRangeSingleSpaceIntersectionWithCellRange:
p_maximumSpillRangeForCellID:
p_spillRangeToRightForCellID:
cachedAutosizedFrame
setWithArray:
reverseObjectEnumerator
richTextStorageForLayout
attachmentCount
isDynamicallyHidingContentOfCellID:
isDynamicallyHidingRowsColsCellID:
isDynamicallyHidingTextOfCellID:
cachedCellStyle
cachedTextStyle
initialTextSize
initWithStorage:cellID:frame:
removeFromParent
computedEditingCellContentFrame
cachedPadding
maxSize
p_layoutWhollyContainsGridRange:
contentSizeForCellRange:skipDynamicSwap:
captionEdgeInsets
p_prepareAttachmentCellsIfNeeded
childInfosForChildLayouts
arrayByAddingObjectsFromArray:
clearDynamicStrokesForCellRange:
layoutForInfo:
viewScaleForZoomingToSelectionPath:targetPointSize:
initWithLeftAnchor:rightAnchor:isVertical:
rectInRootForSelectionPath:
orderedSelections
lastObject
edgeInsets
paddingForCellID:
adjustedInsetsForTarget:
p_defaultAlignmentForTableWritingDirection
writingDirectionForParagraphAtCharIndex:
valueIsNumberOrTime
cachedAutoSizeFlags
cachedVerticalAlignment
p_nonAutosizedFrameForTextEditingLayout:
p_nonAutosizedFrameForRichTextLayout:
p_rangeUpAndLeftOfIntersectionRangeOfGridRange:
isCorner
isColumns
isRows
p_autosizedFrameForTextEditingLayout:textSize:
p_autosizedFrameForRichTextLayout:textSize:
setCachedAutosizedFrame:
dependentLayouts
allValues
p_maskRectForTextEditingLayout:
p_maskRectForRichTextLayout:
cachedMaskRect
p_spillRangeForMaskingRichTextLayout:
setCachedMaskRect:
setCachedMaskSpillRange:
styleProvider
styleProviderForTextLayout:
wantsToProvideStylesForTextLayout:
objectsPassingTest:
p_getStyleProvidingAncestorLayout
findLayoutIfAvailableInSet:intersectingRow:
widthForColumnIndex:bodyWidth:
gapForColumnIndex:bodyWidth:
positionForColumnIndex:bodyWidth:target:outWidth:outGap:
layoutMargins
columnCount
alwaysStartsNewTarget
shrinkTextToFit
columnsAreLeftToRight
layoutMarginsForTarget:
textScaleFactor
T@"TSWPPadding",R,N
Td,R,N
autosizeFlagsForTextLayout:
verticalAlignmentForTextLayout:
nonAutosizedFrameForTextLayout:
autosizedFrameForTextLayout:textSize:
dependentsOfTextLayout:
repClassForTextLayout:
descendersCannotClip
forceParentAutosizeFlagsForTextLayout:
invalidateForAutosizingTextLayout:
reliedOnLayoutsForTextLayout:
maxAutoGrowLineWidthForTextLayout:
maxAutoGrowBlockHeightForTextLayout:
initialCharIndex
textLayoutShouldWrapAroundExternalDrawables:
textLayoutShouldLayoutVertically:
maskRectForTextLayout:
naturalAlignmentForTextLayout:
pageCountForAttachment:
pageNumberForAttachment:
adjustRect:forScrollingToSelectionPath:forZoom:
storage:didChangeRange:delta:broadcastKind:attributeKindChanges:
tearDown
scaleToFit
setLayoutHint:
scaleToFitParent
supportsRotation
canRotateChildLayout:
resizeMayChangeAspectRatio
isDraggable
computeLayoutGeometry
computeInfoGeometryFromPureLayoutGeometry:
initialInfoGeometry
wrapFitType
selectionHighlightFrameFittingParentWidthForChildWithFrame:
frameForCaptionPositioning
inspectorGeometry
inspectorGeometryIsAffectedByChangeRecord:
inPrintPreviewMode
setCellRangeVisibleRect:
floatingHeaderRowRangeAtRect:
floatingHeaderColumnRangeAtRect:
alignedStrokeFrameForRange:
bezierPathsForCellRegion:selectionMask:transform:viewScale:inset:clipToVisibleRect:cornerRadius:block:
willBeginTableNameEditingWithStorage:
didEndTableNameEditing
invalidateTableNameVisibility
p_updateCachedStyleInformationFromCellID:
setupContainedTextEditingLayout:
attachmentCellLayoutForCellID:optionalCell:
calculatePointFromSearchReference:
calculatePointFromSearchReferenceWithoutValidation:
activityLineUnscaledEndPointForSearchReference:
unscaledCommentFlagAnchorInfoForSearchReference:
orderedBefore:
canvasShouldScrollForSelectionPath:
textIsVertical
p_textFrameForWrappingCell:defaultRowHeight:
p_cellIDForWPLayout:
p_computeSpillingTextFrameForEditingLayout:textSize:editingSpillRange:
reapCoordinatesChangedMaskForChrome
setContainedTextEditingLayout:
containedTextEditorSpills
containedTextEditorWraps
editingSpillingTextRange
newCanvasRevealedHorizontally
newCanvasRevealedVertically
paddingForEditingCell
prevEditingSpillingTextRange
setPrevEditingSpillingTextRange:
setSpaceBundle:
processChangesFiltering
setProcessChangesFiltering:
attachmentCellStorageToLayoutMap
mLayoutHint
mCanvasVisibleRect
mCanvasSafeRect
mPreviousVisibleStrokeFrame
mProcessChangesFiltering
mTabsVisible
mTableNameVisibilityIsValid
mTableNameVisible
mNewCanvasRevealedHorizontally
mNewCanvasRevealedVertically
mLayoutDirectionIsLeftToRight
mSpaceBundle
mCached
mRenderingFrameForLayoutGeometryFromInfo
mContainedTextEditingLayout
mCachedPaddingForEditingCell
mComputedEditingCellContentFrame
mCachedVerticalAlignmentForEditingCell
mAdjustableTableSize
mFixedTableSize
mCapturedStrokeFrameSizeForInline
mEditingSpillingTextRange
mPrevEditingSpillingTextRange
mContainedTextEditorParagraphAlignment
mContainedTextEditorTextWraps
mRemovingContainedTextEditorLayout
mContainedTextEditorSpills
mSpillingTextSize
mCoordinatesChangedMaskForChrome
mShouldUpdateAttachmentChildren
mPageCount
mPageNumber
_attachmentCellStorageToLayoutMap
_tableNameEditingStorage
_cellRangeVisibleRect
T@"TSUPointerKeyDictionary",R,V_attachmentCellStorageToLayoutMap
T@"TSWPStorage",W,N,V_tableNameEditingStorage
T@"TSTLayoutHint",&,N,VmLayoutHint
T@"TSTLayoutSpaceBundle",&,N,VmSpaceBundle
TB,N,VmProcessChangesFiltering
TB,N,VmNewCanvasRevealedHorizontally
TB,N,VmNewCanvasRevealedVertically
TB,R,N,VmLayoutDirectionIsLeftToRight
T{CGSize=dd},N
T@"TSWPLayout",&,N,VmContainedTextEditingLayout
T{UIEdgeInsets=dddd},R,N,VmCachedPaddingForEditingCell
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},R,N,VmEditingSpillingTextRange
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,VmPrevEditingSpillingTextRange
TB,R,N,VmContainedTextEditorSpills
TB,R,N,VmContainedTextEditorTextWraps
T{CGSize=dd},R,N
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_cellRangeVisibleRect
numberWithUnsignedLongLong:
headerColumnsWidth
headerRowsHeight
initWithLayoutSpaceBundle:type:
setFrozenHeaderColumnsSpace:
setFrozenHeaderRowsSpace:
setFrozenHeaderCornerSpace:
setUserSpaceToDeviceSpaceTransform:
enumerateFrozenLayoutSpacesUsingBlock:
setRepeatHeaderColumnsSpace:
setRepeatHeaderRowsSpace:
setRepeatHeaderCornerSpace:
setHeaderRowsRepeat:
setHeaderColumnsRepeat:
enumerateRepeatLayoutSpacesUsingBlock:
countA
boolCount
boolTrueCount
numberCount
dateCount
durationCount
stringCount
errorCount
noContentCount
minValue
maxValue
dateByAddingTimeInterval:
functionSpecForFunctionIndex:
functionName
sumMixedDurationsAndUnitlessWithoutADateErrorForFunctionName:
invalidDateManipulationError
countOfNumberDateDurationOrBool
countRows
initWithFormatType:decimalPlaces:negativeStyle:showSeparator:
p_averageValueWithA:
isCircularReference
circularReferenceError
countAValue
totalValue
avgAValue
productValue
countValue
countBlankValue
avgValue
countRowsValue
rangeValue
accumulateValue:
accumulate:
valueForType:
setIsCircularReference:
_boolCount
_boolTrueCount
_numberCount
_dateCount
_durationCount
_stringCount
_errorCount
_noContentCount
_minValue
_maxValue
_productValue
_numberTotalValue
_firstDateSeen
_totalSecsSinceReferenceDate
_secondsToAdd
_isCircularReference
TI,R,N,V_boolCount
TI,R,N,V_boolTrueCount
TI,R,N,V_numberCount
TI,R,N,V_dateCount
TI,R,N,V_durationCount
TI,R,N,V_stringCount
TI,R,N,V_errorCount
TI,R,N,V_noContentCount
T{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C},R,N
T@"TSULocale",&,N,V_locale
TB,N,V_isCircularReference
aggregatesOnLevel:
columnAggregateUidList
columnAggregateUuids
_columnAggregates
initWithContext:calculationEngine:viewHostCell:formula:ownerUID:
formulaForCell:atCellID:inTable:
initWithChromeTractRef:calcEngine:
initWithBaseTractRef:calcEngine:
setBaseTractRef:
setChromeTractRef:
_baseTractRef
_chromeTractRef
T@"TSCECellTractRef",&,N,V_baseTractRef
T@"TSCECellTractRef",&,N,V_chromeTractRef
T{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}},R,N
T{RefTypeHolder<TSCERangeRef, 0>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}},R,N
invertedSet
stringForRangeRefPair:namingContext:
chromeCellCoordForBaseCellCoord:
nameForBaseRangeRef:namingContext:
categoryRefForAggregateRangeRef:
hostTableUID
prettyStringForCategoryRef:forHostCellRef:namingContext:
useSymbolicNames
allowTableName
isRectangularRange
setAllowTableName:
foreachRangeRef:
rangeIsWithinTable:
forceEscaping
allowSpanningColumnReferenceBodyQualifier
setQuoteComponents:
setForceEscaping:
cellRangeName:namingContext:
referenceNameIsUnique:forReference:contextTable:
forceTableName
forceSheetName
tsce_stringByForcingSingleQuoteEscapes:
stringValueAtCellCoord:translator:
initWithFormat:
createNameComponentWithChromeRangeRef:rowOrColumnName:isSticky:namingContext:
disableImplicitNaming
p_symbolicColumnNameForRefPair:useTopLeft:isSticky:foundRange:inTableModel:namingContext:
p_symbolicRowNameForRefPair:useTopLeft:isSticky:foundRange:inTableModel:namingContext:
isSingleCellOrSpanningRange
showGeometricAsBase
suppressIdenticalEndReference
boundingRange
nameForBaseTractRef:namingContext:
setUsedSymbolicName:
chromeNameForBaseRangeRef:namingContext:
nameForViewTractRef:namingContext:coordMapper:
nameForWrappedRangeRef:namingContext:
whitespaceAndNewlineCharSet
setWhitespaceAndNewlineCharSet:
nonWhitespaceAndNewlineCharSet
setNonWhitespaceAndNewlineCharSet:
_whitespaceAndNewlineCharSet
_nonWhitespaceAndNewlineCharSet
T@"NSCharacterSet",&,N,V_whitespaceAndNewlineCharSet
T@"NSCharacterSet",&,N,V_nonWhitespaceAndNewlineCharSet
arraySegmentClass
packageLocatorForSegments
zeroWidthEmptyStroke
p_setLeftStroke:order:atCellID:
p_setRightStroke:order:atCellID:
p_setTopStroke:order:atCellID:
p_setBottomStroke:order:atCellID:
overridePropertyMap
baseStyleForVariation
cascadedStyleWithIdentifier:
initWithContext:columnOrRowIndex:
invalidateRange:
setMaxOrder:
setStroke:inRange:order:
leftColumnStrokes
p_setStroke:order:inStrokesArray:atIndex:atRange:
rightColumnStrokes
topRowStrokes
bottomRowStrokes
findStrokeAndRangeAtIndex:
stroke
order
columnOrRowIndex
initWithContext:majorStrokeLayer:minorStrokeLayer:
enumerateRawStrokesSegmentsUsingBlock:
p_flattenMajorStrokeLayer:minorStrokeLayer:
p_strokeRect
enumerateStrokesInRange:usingBlock:
tsu_insertRange:
insertSpaceAtRange:
tsu_removeRange:
removeRange:
moveRange:toIndex:
swapSegmentAtIndex:withSegmentAtIndex:
setColumnOrRowIndex:
setBordersWithConcurrentCellMap:forTableInfo:
_maxOrder
_leftColumnStrokes
_rightColumnStrokes
_topRowStrokes
_bottomRowStrokes
T@"NSPointerArray",R,N,V_leftColumnStrokes
T@"NSPointerArray",R,N,V_rightColumnStrokes
T@"NSPointerArray",R,N,V_topRowStrokes
T@"NSPointerArray",R,N,V_bottomRowStrokes
Ti,N,V_maxOrder
intersectingColumnsInRow:
removeIndexesInRange:
setColumnIndexesInRow:
columnIndexesInRow
setIteratorToRow:
anyCellBordersInThisRow
cellBorderAtColumn:
setRegion:
topStrokeLayer
setTopStrokeLayer:
bottomStrokeLayer
setBottomStrokeLayer:
_columnIndexesInRow
_topStrokeLayer
_bottomStrokeLayer
T@"TSTStrokeSidecar",&,N,V_strokeSidecar
T@"TSTCellRegion",&,N,V_region
T@"NSIndexSet",&,N,V_columnIndexesInRow
T@"TSTStrokeLayer",&,N,V_topStrokeLayer
T@"TSTStrokeLayer",&,N,V_bottomStrokeLayer
cellRangeAtIndex:
p_updateIndexesForReplacingRangeAtIndex:withRange:
indexesForRange:
enumerateModelCellRectsUsingBlock:
indexesForBaseCellRegion:
enumerateCacheItemsUsingBlock:
enumerateCacheItemsIntersectingBaseCellRect:usingBlock:
enumerateCacheItemsIntersectingBaseCellRegion:usingBlock:
partiallyIntersectsModelCellRect:
openRewritingTransaction
commitRewritingTransaction
setCellRange:atIndex:
removeCellRangeAtIndex:
partiallyIntersectsBaseCellRect:
partiallyIntersectsBaseCellRegion:
hasRangeSpanningRowsForCellRect:
expandBaseCellRectToCoverMergedCells:
expandBaseCellRegionToCoverMergedCells:
hasRangeSpanningRowsForCellRegion:
_mergeRanges
_mergeRangesRTree
_mergedAtCellIds
_transaction
addTableStyleIndex:
hasTableStyles
containsStyleNetworkIndex:
enumerateTableStylesUsingBlock:
addCellUID:flags:addingMaximumSize:
hasStylesInCells
cellUIDs
tableStyleIndexes
_cellUIDs
_tableStyleIndexes
_maximumSize
_cellFlags
T{CGSize=dd},R,N,V_maximumSize
T{vector<unsigned long, std::allocator<unsigned long>>=^Q^Q{__compressed_pair<unsigned long *, std::allocator<unsigned long>>=^Q}},R,N,V_cellFlags
T@"TSTCellUIDList",R,N,V_cellUIDs
T@"NSMutableIndexSet",R,N,V_tableStyleIndexes
highestScaleFactorForRenderingDrawableInfo:
isTopmostContainerInfo
initWithImageData:
p_fillPropertyForStyle:
compatibilityCheckerForData:associatedHint:
mediaCompatibilityTypeForData:associatedHint:
bundle
lockForWrite
validateCachedFrames
validateCoordinateCache:
validateTableOffset:
bezierPathCache
setTableWidthForRightToLeft:
gridRange
strokeHeightOfGridRow:inColumnRange:
strokeWidthOfGridColumn:inRowRange:
setTableOffset:
isMain
p_headerColumnsGridRange
p_headerRowsGridRange
p_footerRowsGridRange
p_tableRectForLayoutRect:
p_gridRangeForTableRect:
gridRangeForLayoutRect:
p_rangeForLayoutRect:
frameForRange:
p_tableCoordinateForGridColumn:
p_tableCoordinateForGridRow:
p_layoutPointForTablePoint:
p_tableRectForGridRange:
p_layoutRectForTableRect:
p_frameSpecForGridRange:frameType:strokeWidthOverride:
strokeFrameForGridRange:
p_rawTableCoordinateForGridColumn:
p_layoutCoordinateForGridColumn:
p_layoutCoordinateForGridRow:
p_alignedFrameSpecForGridRange:strokeWidthOverride:
gridPointHitByLayoutPoint:
p_tablePointForLayoutPoint:
p_gridPointForTablePoint:
visibleRange
drawPreventAntialias
p_alignStrokeWidth:deviceWidth:scaledWidth:
p_alignStrokeHeight:deviceWidth:scaledWidth:
p_alignedFrameSpecForRowGridRange:
p_alignedFrameSpecForColumnGridRange:
enumerateMergedStrokesForGridColumn:from:to:usingBlock:
enumerateMergedStrokesForGridRow:from:to:usingBlock:
bezierPathWithContinuousCornerRoundedRect:cornerRadius:
bezierPathForGridRange:transform:inset:reoriginToZero:
mergeRangeEmptyStroke
insertBezierPath:gridRange:transform:inset:reoriginToZero:
alignedFrameForGridRange:
setWidth:
solid
dontClearBackground
color
alphaComponent
newBlendedColorWithFraction:ofColor:
clearColor
setColor:
isRoundDash
paintPath:inContext:
drawBlackAndWhite
strokeHeightOfGridRow:beginColumn:endColumn:
alignStrokeCoordinatesOfBeginPoint:endPoint:width:
strokeWidthForDrawingWithAlignedWidth:originalWidth:
drawSingleStroke:context:beginPoint:endPoint:width:strokeWidthForDrawing:strokeFrame:
enumerateMergedStrokesAndCapsForGridColumn:from:to:usingBlock:
strokeWidthOfGridColumn:beginRow:endRow:
enumerateMergedStrokesAndCapsForGridRow:from:to:usingBlock:
numberOfNonHiddenFooterRows
p_drawStrokeForGridColumn:strokeRect:clearStroke:shadowType:context:
p_drawStrokeForGridRow:strokeRect:clearStroke:shadowType:context:
p_bodyGridRange
initWithCount:atOffset:layoutDirectionIsLeftToRight:
p_topLeftCornerGridRange
p_createRowCoordinatesForGridRange:invalidRowIndex:previousCoordinates:validateSingleRow:outCoordinatesChanged:
p_extendedBodyGridRange
p_createColumnCoordinatesForGridRange:invalidColumnIndex:previousCoordinates:outCoordinatesChanged:
p_gridColumnForTableCoordinate:
p_gridRowForTableCoordinate:
p_bodyTranslationX
p_bodyTranslationY
p_tableCoordinateForX:
p_tableCoordinateForY:
p_cellTypeForGridPoint:
p_layoutOffsetForGridPoint:
p_layoutOffsetForTablePoint:
strokeWidthOfGridColumn:atRowIndex:
strokeHeightOfGridRow:atColumnIndex:
p_alignFrameSpec:
invalidateTableOffset
invalidateCoordinatesForEditingCellID:
validate:
validateCoordinateDirection
nearestRangeForLayoutRect:
contentFrameForRange:
strokeFrameForRange:
canvasFrameForCellRange:
canvasPositionForGridColumn:
canvasPositionForGridRow:
alignedStrokeFrameForCellRange:
drawStrokesInGridRange:clearStrokes:context:
setLayoutDirectionIsLeftToRight:
transformFromCanvas
setTransformFromCanvas:
setTransformToDevice:
transformFromDevice
setTransformFromDevice:
setDrawBlackAndWhite:
setDrawPreventAntialias:
setBezierPathCache:
headerRowColumnCoordinates
setHeaderRowColumnCoordinates:
bodyColumnCoordinates
setBodyColumnCoordinates:
headerColumnRowCoordinates
setHeaderColumnRowCoordinates:
bodyRowCoordinates
setBodyRowCoordinates:
invalidatedForEditingCell
setInvalidatedForEditingCell:
invalidTableOffset
setInvalidTableOffset:
invalidColumnIndex
setInvalidColumnIndex:
invalidRowIndex
setInvalidRowIndex:
cachedFrame
setCachedFrame:
cachedAlignedFrame
setCachedAlignedFrame:
cachedStrokeFrame
setCachedStrokeFrame:
cachedAlignedStrokeFrame
setCachedAlignedStrokeFrame:
mLock
_layoutDirectionIsLeftToRight
_headerColumnsRepeat
_headerRowsRepeat
_drawBlackAndWhite
_drawPreventAntialias
_invalidatedForEditingCell
_invalidTableOffset
_invalidColumnIndex
_layoutSpaceType
_invalidRowIndex
_bundle
_viewScale
_bezierPathCache
_headerRowColumnCoordinates
_bodyColumnCoordinates
_headerColumnRowCoordinates
_bodyRowCoordinates
_tableOffset
_gridRange
_cachedFrame
_cachedAlignedFrame
_cachedStrokeFrame
_cachedAlignedStrokeFrame
_transformToCanvas
_transformFromCanvas
_transformToDevice
_transformFromDevice
T{?={?=II}{?=II}},N,V_gridRange
T@"TSTCoordinateArray",&,N,V_headerRowColumnCoordinates
T@"TSTCoordinateArray",&,N,V_bodyColumnCoordinates
T@"TSTCoordinateArray",&,N,V_headerColumnRowCoordinates
T@"TSTCoordinateArray",&,N,V_bodyRowCoordinates
T@"TSTLayoutSpaceBezierPathCache",&,N,V_bezierPathCache
TB,N,V_invalidatedForEditingCell
TB,N,V_invalidTableOffset
TS,N,V_invalidColumnIndex
TI,N,V_invalidRowIndex
TB,N,V_layoutDirectionIsLeftToRight
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_cachedFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_cachedAlignedFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_cachedStrokeFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_cachedAlignedStrokeFrame
T@"TSTLayoutSpaceBundle",R,W,N,V_bundle
Ti,R,N,V_layoutSpaceType
T@"TSTLayout",R,W,N
T@"TSTLayoutEngine",R,W,N
TB,N,V_headerColumnsRepeat
TB,N,V_headerRowsRepeat
Td,N,V_viewScale
T{CGAffineTransform=dddddd},N,V_transformToCanvas
T{CGAffineTransform=dddddd},N,V_transformFromCanvas
T{CGAffineTransform=dddddd},N,V_transformToDevice
T{CGAffineTransform=dddddd},N,V_transformFromDevice
TB,N,V_drawBlackAndWhite
TB,N,V_drawPreventAntialias
T{CGPoint=dd},N,V_tableOffset
initWithIndexesInRange:
_offset
_count
_coordinates
_average
_visibleIndices
_tableWidth
receivers
distributeBlock:
willApplyConcurrentCellMap:tableUID:
willRemoveRows:tableUID:
protocol
didMergeRange:
didUnmergeRange:
initWithExpressionNode:parenNestingLevel:argumentIndex:
initWithExpressionNode:parenNestingLevel:
tokenContextWithExpressionNode:parenNestingLevel:
tokenContextWithExpressionNode:parenNestingLevel:argumentIndex:
parenNestingLevel
argumentIndex
_expressionNode
_parenNestingLevel
_argumentIndex
T@"TSTExpressionNode",R,N,V_expressionNode
TQ,R,N,V_parenNestingLevel
TQ,R,N,V_argumentIndex
initWithContext:children:firstIndex:lastIndex:
initWithContext:identifier:symbol:firstIndex:lastIndex:
initAsCopyOf:intoContext:children:
whitespaceAfter
setWhitespaceAfter:
whitespaceBefore
setIdentifier:
recordHashesForSubexpressions:
copyByResolvingIdentifiers:hostTable:baseHostCell:forceReferenceInterpretation:symbolTable:oldToNewNodeMap:
buildASTNodeArray:hostCell:symbolTable:
exportString
identifier
_identifier
T@"NSString",&,N,V_identifier
TI,N,V_symbol
initWithType:range:styleInsertionBehavior:caretAffinity:smartFieldRange:leadingEdge:leadingCharIndex:activeTokenCharIndex:
initWithType:range:styleInsertionBehavior:caretAffinity:smartFieldRange:leadingEdge:leadingCharIndex:
allowsKeyCommandCaching
activeTokenCharIndex
setActiveTokenCharIndex:
mActiveTokenCharIndex
TQ,N,VmActiveTokenCharIndex
selectionFromWPSelection:
tst_isCompatibleWithCell:
tst_isCompatibleWithCellRegion:mergeRange:
addColumns:
addRows:
regionByMovingColumnsFromRange:toIndex:
regionByMovingRowsFromRange:toIndex:
p_gatherCellRegionViaCellRegionAddition
p_gatherCellRegionViaReducedOverlap
combineNonOverlappingCellRanges:addingOverlappingCellRanges:
moveColumnsFromRange:toIndex:
moveRowsFromRange:toIndex:
mightOverlap
setMightOverlap:
debugCellRangeMerges
setDebugCellRangeMerges:
_gathererMap
_originToRangeMap
_mightOverlap
_debugCellRangeMerges
TB,N,V_mightOverlap
TQ,N,V_debugCellRangeMerges
initWithColumn:forGroupBy:
initWithArchive:aggregator:
getNextAggFormulaCoord
initWithFormulaCoord:groupNode:aggregator:
allowRegistrationOfAggFormulas
enumerateAllGroupsWithBlock:
clearAggFormulas:inOwner:
upgradeForNewAggregateTypes:inOwner:
initWithArchive:groupBy:
rebuildAggFormulas
clearAggFormulas:
_aggRoot
T@"TSTGroupBy",R,W,N,V_groupBy
T{TSKUIDStruct=QQ},R,N,V_columnUid
drawSwatchInRect:inContext:
p_documentRoot
swatchImage
tableHasStrongOwnership
setTableHasStrongOwnership:
tempUpgradePresetID
setTempUpgradePresetID:
_styleNetwork
_tableHasStrongOwnership
_tempUpgradePresetID
TQ,N,V_tempUpgradePresetID
T@"TSTTableStyleNetwork",C,N
TB,N,V_tableHasStrongOwnership
visibleIndexSet
countOfIndexesInRange:
containsIndexesInRange:
enumerateRangesInRange:options:usingBlock:
tsu_moveIndexesInRange:toOffset:
isIndexHidden:
setHidden:atIndex:
setVisibleIndexSet:
setHidden:atIndexes:
setHidden:inRange:
visibleIndices
numberHiddenIndicesInRange:
numberVisibleIndicesInRange:
anyHiddenIndicesInRange:
visibleIndexAfterIndex:
visibleIndexAfterAndIncludingIndex:
visibleIndexBeforeIndex:
visibleIndexBeforeAndIncludingIndex:
findNthPreviousVisibleIndex:fromIndex:
findNthNextVisibleIndex:fromIndex:
moveRangeFrom:toIndex:
deleteRange:
insertRange:
_visibleIndexSet
T@"NSMutableIndexSet",&,N,V_visibleIndexSet
index
setIndex:
mIndex
initWithContext:styleProvider:
defaultStyleWithContext:
defaultValueForProperty:
setCGFloatValue:forProperty:
defaultTableNameShapeStyleWithContext:
networkWithContext:presetID:styleProvider:tableStyleMorphingBlock:nameStyleMorphingBlock:nameShapeStyleMorphingBlock:cellStyleMorphingBlockByStyleArea:textStyleMorphingBlockByStyleArea:
addStyle:withIdentifier:
defaultPropertyMap
tableNameStyleIDForPreset:
tableNameShapeStyleIDForPreset:
networkFromStylesheet:presetID:
setCellStyle:forTableStyleArea:
setTextStyle:forTableStyleArea:
setPresetID:
initWithContext:styleProvider:presetID:
cellStyleForTableStyleArea:
networkForPivotTables:
emptyStroke
padding
copyWithZone:context:
cellStyles
textStyles
propertySetWithProperties:
overridePropertyMapIsEqualTo:
removeProperties:
styleForStyleNetworkIndex:
p_saveToArchive:archiver:isPre30Alternate:
shouldSaveAlternates
alternateForVersion:
p_clearCategoryStyles
deriveCategoryCellStyleForTableStyleArea:connectedToStylesheet:
deriveCategoryTextStyleForTableStyleArea:connectedToStylesheet:
addStyle:
p_deriveCategoryCellStyleForTableStyleArea:fromCellStyle:connectedToStylesheet:
styleWithIdentifier:
sheetFill
referenceColor
hueComponent
saturationComponent
brightnessComponent
colorWithHue:saturation:brightness:alpha:
fullPropertyMap
p_deriveCategoryTextStyleForTableStyleArea:fromTextStyle:connectedToStylesheet:
p_clearPivotStyles
p_derivePivotCellStyleFromCellStyle:optionalSourceFill:brightnessShift:connectedToStylesheet:styleArea:
lightGrayColor
strokeApplyingEmphasis
strokeApplyingWidth:
p_deriveHeaderColumnPivotSeparatorAndHeaderRowPivotGroupVerticalStrokeFromTableStyle:propertyMap:returnHeaderRowPivotGroupVerticalStroke:
networkFromTheme:presetIndex:
identifiersForPresetID:
pivotTableStyleAreaForRowLevel:columnLevel:numberOfRowLevels:numberOfColumnLevels:columnIndex:
stylesInStylesheet:
dictionaryWithPreset:
initWithContext:fromDictionary:withPreset:
clearAndGenerateCategoryStylesConnectedToStylesheet:
generateCategoryStrokesInTableStyle:
generatePivotStrokesInTableStyle:
maintainPivotStrokesInTableStyle:fromTable:
clearAndGeneratePivotStylesConnectedToStylesheet:
_presetIndex
_cellStyles
_textStyles
TQ,N
_cellStyle
_textStyle
T@"TSTCellStyle",&,N,V_cellStyle
T@"TSWPParagraphStyle",&,N,V_textStyle
idOfFirstOccurence
setIdOfFirstOccurence:
_idOfFirstOccurence
T{TSUCellCoord=ISBB},N,V_idOfFirstOccurence
TQ,N,V_count
initWithKeyboardShown:
mControlCellSelection
T@"TSKSelection",&,N,VmControlCellSelection
presetAtIndex:
strokePresetListForDefaultPropertyMapWithHorizontalStroke:verticalStroke:exteriorStroke:
initWithMask:horizontalStroke:verticalStroke:exteriorStroke:
setStrokePreset:atIndex:
initWithDeprecatedArchive:unarchiver:
horizontalStroke
verticalStroke
exteriorStroke
mask
strokePresetListForDefaultPropertyMapWithFatStroke:andThinStroke:
setStroke:forPresetIndex:
presets
setPresets:
mCount
_presets
T@"NSPointerArray",&,N,V_presets
setHorizontalStroke:
setVerticalStroke:
setExteriorStroke:
setMask:
mHorizontalStroke
mVerticalStroke
mExteriorStroke
mVisibleMask
T@"TSDStroke",&,N,VmHorizontalStroke
T@"TSDStroke",&,N,VmVerticalStroke
T@"TSDStroke",&,N,VmExteriorStroke
TI,N,VmVisibleMask
upgradeStylesWithBlock:
tstLoadFromArchive:unarchiver:
tstSaveToArchive:archiver:
registerPresetSourceClass:
tstRegisterPresetSourceClasses
isDynamicallyHidingRowsCols
isDynamicallyHidingRowsCols:rowColIndex:
isDynamicallyRemovingTextOfCellID:
shallowCopyToCell:
initWithLayout:range:flags:searchFlags:
layoutRange
layoutCellID
layoutCell
modelIteratorData
setModelIteratorData:
queriedModel
setQueriedModel:
modelIteratorHasCell
setModelIteratorHasCell:
columnOrderReversed
setColumnOrderReversed:
numberOfLayoutColumns
setNumberOfLayoutColumns:
setNumberOfColumns:
setNumberOfRows:
layoutCellData
setLayoutCellData:
_queriedModel
_modelIteratorHasCell
_columnOrderReversed
_numberOfLayoutColumns
_numberOfColumns
_numberOfRows
_layoutCellID
_layoutCell
_modelIteratorData
_layoutCellData
_layoutRange
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},R,N,V_layoutRange
T{TSUCellCoord=ISBB},R,N,V_layoutCellID
T@"TSTCell",R,N,V_layoutCell
T@"<TSTCellIteratorData>",N,V_modelIteratorData
TB,N,V_queriedModel
TB,N,V_modelIteratorHasCell
TB,N,V_columnOrderReversed
TI,N,V_numberOfLayoutColumns
TI,N,V_numberOfColumns
TI,N,V_numberOfRows
T@"TSTMutableCellIteratorData",&,N,V_layoutCellData
T@"TSTLayoutEngine",R,&,N,V_layoutEngine
copyIntoContext:bakeModes:children:
forceReferenceInterpretationOfChildren
setFunctionEndNode:
fixStorageLanguage:
addTSTCanvasReferencesToSet:inRangeContext:withColorHelper:preferringNodesFromStorage:allVisitedNodes:
initWithObjects:
firstIndexOfSubtree
lastIndexOfSubtree
mostSpecificNodeContainingIndex:correspondingIndex:
subtreeContainsIndex:
addVariablesMatchingPrefix:forFormulaIndex:toDictionary:symbolTable:
largestCommonSubexpressionExcludingExisting:cseData:
unionSet:
addAllIdentifiersToSymbolTable:
replaceOccurrencesOfChildrenInSet:withIdentifier:symbol:
largestCommonSubexpression
eliminateLargestCommonSubexpression:withSymbolTable:newIdentifierOut:
lowestCommonAncestor:
defaultNameWithIndex:
initWithContext:identifier:firstIndex:lastIndex:
arrayWithObjects:
setWhitespaceAfterDelimiter:
p_eliminateLargestCommonSubexpressionWithLCA:expressions:withSymbolTable:newIdentifierOut:
initWithContext:firstIndex:lastIndex:
isOptional
setArgumentSpec:
buildASTNodeArray:hostCell:
popover
hasMenu
enumerateExpressionNodesUsingBlock:
compareFirstLastIndices:
rangeEncompassingExpressionNodesInRange:
isFunctionNode
canEliminateLargestCommonSubexpressionWithSymbolTable:
eliminateLargestCommonSubexpressionWithSymbolTable:newIdentifierOut:
setTokenAttachment:
setFirstIndex:
setLastIndex:
setWhitespaceBefore:
_argumentSpec
_tokenAttachment
_firstIndex
_lastIndex
_whitespaceBefore
_whitespaceAfter
T@"NSArray",&,N
T^v,N
T@"TSTWPTokenAttachment",N,V_tokenAttachment
TQ,N,V_firstIndex
TQ,N,V_lastIndex
T@"NSString",&,N,V_whitespaceBefore
T@"NSString",&,N,V_whitespaceAfter
T@"UIViewController",R,&,N
Ti,R,D,N
T@"NSString",R,D,N
initWithContext:calculationEngine:baseHostCell:formula:ownerUID:suppressAutomaticNamedReferenceInvalidation:
copyByConvertingColonToColonTract:
initWithCalculationEngine:expressionTree:baseHostCell:hostTable:
initWithContext:calculationEngine:viewHostCell:formula:ownerUID:suppressAutomaticNamedReferenceInvalidation:
initWithCalculationEngine:baseHostCell:hostTable:
setExpressionTree:
setInitialWhitespace:
setSyntaxError:
setEmpty:
geometricFormula
nodesToCheckForBareArgumentPlaceholders
isCategoryRef
categoryRef
relativeGroupUid
resolveCategoryRef:atRowUid:inHostTable:
setCategoryRef:
refersToPivotTable
setAsAbsoluteWithGroupUid:
reparseWithStorage:adjustExpressionTree:
storageExceedsMaxFormulaLength:
p_fixFormula:
fixPreserveFlagsForCategoryRefInNode:
singleQuoteCharacters
doubleQuoteCharacters
quoteContextAtCharIndex:previousContext:inStorage:
parenCountAtCharIndex:unmatchedParenCount:quoteContext:inStorage:
leftParenCharacters
rightParenCharacters
expressionTree
addCharactersInString:
tsu_push:
tsu_pop
tst_hasFormulaEqualsPrefix
p_charactersToTemporarilyChopOffEndToFixSyntaxError
stringByPaddingToLength:withString:startingAtIndex:
insertAttachmentOrFootnote:range:dolcContext:undoTransaction:changeSession:
p_formulaAsTextReturningTokenValues:
initWithContext:string:stylesheet:kind:
leadingSingleQuoteEscapeCharacters
isFormulaEqualsCharacter:
formulaQuoteContextAtCharIndex:inStorage:
parenCountAtCharIndex:inStorage:
initWithContext:calculationEngine:baseHostCell:formula:ownerUID:
initWithCalculationEngine:viewHostCell:hostTable:
formula
hasBareArgumentPlaceholders
reparseWithStorage:
formulaDetokenizedText
canSimplify
simplify
setCalculationEngine:
isSyntaxError
fixupFormulas
setFixupFormulas:
formulaWasFixable
formulaFixupsShouldStick
initialWhitespace
_expressionTree
_calculationEngine
_hostInfo
_initialWhitespace
_hostCell
_syntaxError
_fixupFormulas
_formulaWasFixable
_formulaFixupsShouldStick
_empty
T@"TSCECalculationEngine",W,N,V_calculationEngine
syntaxError
TB,N,GisSyntaxError,V_syntaxError
T@"NSString",C,N,V_initialWhitespace
TB,N,V_fixupFormulas
TB,R,N,V_formulaWasFixable
TB,R,N,V_formulaFixupsShouldStick
T@"TSTExpressionNode",&,N,V_expressionTree
TB,N,GisEmpty,V_empty
tst_hasLeadingCharacterInSet:
characterSetWithRange:
tsu_stringByRemovingCharactersInSet:
tst_isEqualToFormulaEqualsString
tst_hasLeadingSingleQuoteEscape
tst_isOneCharacterInSet:
tst_cleanForFormulaEditor
enumerateCellStringsForRows:rowCount:usingBlock:
enumerateCellStringsUsingBlock:
initWithPopupModel:startWithFirstItem:
choices
displayStringAtIndex:
cellValueWithLocale:
indexForValue:
asMultipleChoiceListFormat
initialValue
initWithInitialValue:multipleChoiceListFormatID:popupModel:
setPopupModel:
displayChoicesForInspector
valueForIndex:
tskMultipleChoiceListFormat
_displayChoices
_startWithFirstItem
_popupModel
T@"TSTPopUpMenuModel",&,N,V_popupModel
TB,R,N,V_startWithFirstItem
setThresholdCellValues:
thresholdCellValues
_ownerUID
_thresholdCellValues
_needsToUpdateFilterSetForImport
T{TSKUIDStruct=QQ},N,V_ownerUID
TB,N,V_needsToUpdateFilterSetForImport
T@"NSArray",&,N,V_thresholdCellValues
initWithContext:operatorChar:children:firstIndex:lastIndex:
operatorChar
initWithContext:children:
setOperatorChar:
_operatorChar
TS,N,V_operatorChar
initWithStrokeVisibilityMask:
strokeSelectionWithMask:
_mask
TI,R,N,V_mask
addCustomFormatForUpgrade:legacyKey:
upgradedCustomFormatList:
controlCellSelection
isKeyboardShown
_keyboardShown
keyboardShown
TB,R,N,GisKeyboardShown,V_keyboardShown
initWithContext:number:string:firstIndex:lastIndex:
initWithContext:number:locale:firstIndex:lastIndex:
initWithContext:string:locale:firstIndex:lastIndex:
setNumber:withLocale:
setString:
number
_string
_number
T{TSUDecimal={?=[2Q]}},R,V_number
checkoutScientificNumberFormatter
createStringWithValue:
returnScientificNumberFormatter:
hasExplicitFormatOfType:allowMismatchedSpare:
p_mostRecentlySetNumberFormatType
baseFormat
setProvidedValueTypeBeforeUpgrade
cellValueTypeDescription
setImportWarningSet:
inflateFromStorageRef:dataStore:
resolveDataListKeysForPreBNCCell:suppressTransmutation:sourceStorageVersion:
hasCellSpec
p_currentFormatIsEqualToOtherCellFormat:
doubleValue
isEqualToDate:
compareRange:otherStorage:otherRange:options:objectComparisonBlock:
setStringValue:clearingID:shouldWrap:
setStringValue:clearingID:
setFormulaSyntaxError:clearingID:
setRichTextValue:clearingID:convertToPlaintextIfPossible:
stringFromString:locale:
stringFromDate:locale:
stringFromBool:locale:
stringFromDurationTimeInterval:locale:
percentSymbol
asNumberFormat
showThousandsSeparator
initWithDecimalPlaces:negativeStyle:showSeparator:accountingStyle:currencyCode:
durationUnitSmallest
durationUnitLargest
durationStyle
initWithUseAutomaticUnits:durationUnitSmallest:durationUnitLargest:durationStyle:
stringFromDurationTimeInterval:locale:showPrecision:
stringForEditing
customFormatData
storageByApplyingCustomFormat:
copyPropertyMap
characterStyleAttributeCount
characterCount
characterStyleAtCharIndex:effectiveRange:
setCharacterStyle:range:undoTransaction:
setFormula:
setCellStyle:clearingID:
setTextStyle:clearingID:
setConditionalStyle:clearingID:
overridesProperty:
cellFill
p_setFormatFlags:explicit:
setCellSpec:clearingID:
spareFormatOfType:allowMismatchedSpare:
applyPopupChoiceIndex:
clearSpareFormatOfType:
setFormula:clearingID:
defaultCellSpec
setDoubleValue:
isControl
p_setFormatExplicit:fromFormatType:setMostRecentlySet:
setFormat:shouldSetExplFlags:isExplicit:makeCurrent:clearingID:
p_TSTCellFormatIsANumberFormatTypeForMostRecentlySet:
p_mostRecentlySetDateFormatType
p_mostRecentlySetTextFormatType
p_TSTCellSetMostRecentlySetNumberFormat:
p_TSTCellSetMostRecentlySetDateFormat:
p_TSTCellSetMostRecentlySetTextFormat:
p_spareFormatOfType:allowMismatchedSpare:explicitOnly:
accountingStyle
useAccountingStyle
negativeStyle
mismatchBetweenValueType:andFormatType:
setCommentStorage:clearingID:
setImportWarningSet:clearingID:
cellValueDescription
stringForCellValueType:
formatType:sharesASpareSlotWithFormatType:
hasASlotForFormatType:
upgradedBraveNewCell
initWithStorageRef:dataStore:
formulaSyntaxErrorString
valueIsStringOrNumber
dataIsReplaceable
hasEqualValueToCell:
copyJustStyleAndStrokesToCell:
clearStrokes
cellFillComparedToDefault:suppressCS:isDefault:
setCellSpecRepairingFormats:
cellSpecForDiff
setSpareFormat:isExplicit:
setCurrentFormat:flags:
p_setFormatForFormulaResult:propagation:
clearNoncurrentImplicitFormats
clearAllFormats
copyAllFormatsToCell:
hasCurrentFormat
hasFormatOfType:allowMismatchedSpare:
customFormatString
currentFormatNegativeStyle
isMostRecentlyExplicitPercent
currentFormatID
setCurrentFormatID:
customFormatID
setCustomFormatID:
baseFormatID
setBaseFormatID:
controlFormatID
setControlFormatID:
multipleChoiceListFormatID
setMultipleChoiceListFormatID:
controlFormat
multipleChoiceListFormat
_valueDouble
_valueID
_valueObject
_valueType
_conditionalStyleAppliedRule
_explicitFormatFlags
_cellStyleID
_textStyleID
_conditionalStyleID
_formulaID
_currentFormatID
_numberFormatID
_currencyFormatID
_dateFormatID
_durationFormatID
_customFormatID
_baseFormatID
_controlFormatID
_multipleChoiceListFormatID
_commentStorageID
_importWarningSetID
_conditionalStyle
_cellBorder
_currentFormat
_numberFormat
_currencyFormat
_dateFormat
_durationFormat
_customFormat
_baseFormat
_controlFormat
_multipleChoiceListFormat
_commentStorage
_importWarningSet
_cellSpec
TI,N,V_cellStyleID
TI,N,V_textStyleID
TI,N,V_conditionalStyleID
TI,N,V_formulaID
TI,N,V_currentFormatID
TI,N,V_numberFormatID
TI,N,V_currencyFormatID
TI,N,V_dateFormatID
TI,N,V_durationFormatID
TI,N,V_customFormatID
TI,N,V_baseFormatID
TI,N,V_commentStorageID
TI,N,V_importWarningSetID
TI,N,V_controlFormatID
TI,N,V_multipleChoiceListFormatID
T@"TSKFormat",R,N,V_controlFormat
T@"TSKFormat",R,N,V_multipleChoiceListFormat
TC,N,V_valueType
T@"NSDate",&,N
T@"TSWPStorage",&,N
T@"TSWPStorage",R,N
T@"TSTConditionalStyleSet",&,N,V_conditionalStyle
TC,N,V_conditionalStyleAppliedRule
T@"TSTCellBorder",&,N,V_cellBorder
T@"TSWPParagraphStyle",R,N
T@"TSTCellSpec",&,N,V_cellSpec
T@"TSCEFormulaObject",&,N
T@"TSTCellSpec",R,N
TS,N,V_explicitFormatFlags
T@"TSKFormat",R,N,V_currentFormat
T@"TSKFormat",R,N,V_numberFormat
T@"TSKFormat",R,N,V_currencyFormat
T@"TSKFormat",R,N,V_dateFormat
T@"TSKFormat",R,N,V_durationFormat
T@"TSKFormat",R,N,V_customFormat
T@"TSKFormat",R,N,V_baseFormat
TS,N,V_cellFlags
T@"TSULocale",R,N,V_locale
T@"TSDCommentStorage",&,N,V_commentStorage
T@"TSTImportWarningSet",&,N,V_importWarningSet
p_addCell:
initWithContext:cell:cellUIDList:skipCellUIDListCopy:
p_cellCount
copyWithZone:copyingCells:
setCellUIDs:
cellUIDList
isOneToMany
p_cellAtIndex:inCellListArray:
cellAtIndex:
initWithCellMap:
enumerateCellsWithUIDsUsingBlock:
reserve:
addCellUIDs:
p_addPrecopiedCells:
replaceCell:atIndex:
remapUIDsByColumnMap:rowMap:ownerMap:
p_copyCellsAndUUIDsFromCellMap:convertingToCellIDsWithTableInfo:
p_resolveCellIDsToUUIDsByTableInfo:
cellIDAtIndex:
p_shallowAddCell:atCellCoord:
shallowAddCell:
addCell:
addPrecopiedCell:
regionFromCellMap:withTableInfo:
initWithContext:cell:cellUIDList:
initWithContext:cell:cellIDList:
cellIDs
iterator
findCellForCellID:
findCellForCellUID:
addPrecopiedCells:andCellUIDs:
replaceCellAtIndex0:
addHeadMergeAction:
cellIDBasedCellMapByTableInfo:
uuidBasedCellMapByTableInfo:
coordinatesForTableInfo:passingTest:
shallowCopyToCoordFormUsingMap:
cellMapMaskedByUIDs:inRows:
shallowCopy
setShallowCopy:
_cellIDs
_searchableIDMap
_searchableUIDMap
_oneToMany
_shallowCopy
T@"TSTCellUIDList",&,N,V_cellUIDs
oneToMany
TB,R,N,GisOneToMany,V_oneToMany
TB,N,V_shallowCopy
nextCellUID
nextCellAndCellUID
currentCellUID
currentCell
_cellMap
_cellUIDIterator
_index
_currentCellUID
_currentCell
trailingEmptyCellCount
lastCell
_trailingEmptyCellCount
initWithContext:functionIndex:children:firstIndex:lastIndex:
setWhitespaceAfterFunctionName:
resurrectModeTokens
removeObjectsInRange:
setInvalidFunctionName:
initWithContext:calculationEngine:uidRectRef:hostCellRef:referenceColorHelper:suppressAutomaticNamedReferenceInvalidation:
initWithContext:calculationEngine:baseRangeRef:preserveFlags:hostCellRef:referenceColorHelper:suppressAutomaticNamedReferenceInvalidation:
initWithReferenceStart:referenceEnd:suppressAutomaticNamedReferenceInvalidation:
setRangeWithFunction:
absoluteCellTractRefForHostCell:offTable:
hasTableUID
initWithContext:boolValue:firstIndex:lastIndex:
initWithContext:stringValue:firstIndex:lastIndex:
initWithContext:dateValue:firstIndex:lastIndex:
setDateFormat:
initWithContext:durationInterval:durationFormat:firstIndex:lastIndex:
initWithContext:children:columns:rows:firstIndex:lastIndex:
includedUidsTract
columnUids
rowUids
setWhitespaceAfterLet:
setWhitespaceAfterIdentifier:
setWhitespaceAfterEquals:
removeLastObject
activeUidTract
isFixedAtZeroRef
initWithContext:calculationEngine:categoryRef:hostCellRef:referenceColorHelper:
strokeWidthForGridIndex:inRange:
strokeWidthForGridIndex:outWidth:outNextWidth:
updateCacheForGridIndex:withMergedStrokes:
lockForWriting
rwlock
setRwlock:
_indexToCacheEntriesMap
_rwlock
T{_opaque_pthread_rwlock_t=q[192c]},N,V_rwlock
tableNameSelection
_checkStructure
disconnect
initWithColumnRowUIDMap:
p_mutableRowIndexesForUIDSet:notFoundUIDs:
p_mutableColumnIndexesForUIDSet:notFoundUIDs:
incrementVersionCounter
nextCellUIDsBatch:batchSize:
uidRectRefForCellTractRef:
applyMap:toRows:
_columnUidForIndex
_rowUidForIndex
_columnIndexForUid
_rowIndexForUid
_versionCounter
_copyOnWriteUIDMapper
TQ,R,N,V_versionCounter
_originalMap
usesPrePivotAggregateTypesOnly
p_compareGroupByViaOwnerIndexes:otherGroupBy:
groupBys
addGroupByInSortedOrder:
addReceiverIfMissing:
mergeChangeDistributor
unregisterFromDistributors
registerOwnerWithOwnerUID:owner:referenceResolver:baseOwnerUID:ownerKind:
checkForFormulaCoordUpgrade
registerWithDistributors
unregisterOwner:
setCategoryOwner:
groupByForOwnerIndex:
resetWithGroupings:categoryOwner:hiddenStates:groupBySet:
initWithGroupings:isEnabled:categoryOwner:groupByUid:ownerIndex:
removeObjectIdenticalTo:
initWithArchive:forCategoryOwner:
encodeToArchive:archiver:backwardCompat:
groupValueTupleForRowUid:atLevel:
groupValueForValue:calcEngine:
removeRowUid:forGroupValue:
insertRowUid:atRowIndex:forGroupValue:
initWithUUID:
hasEnabledGroupBys
p_willApplyCell:baseCellCoord:refreshCategoryInfo:
insertRowUids:
sortGroupBys
resetAllGroupings
verifyConnectionsWithPivotDataModel:
_baseTableUID
_lock
_groupBys
_minion
T@"TSTTableModel",W,N,V_tableModel
T{TSKUIDStruct=QQ},N,V_baseTableUID
T@"<TSCEFormulaReplacing>",&,N,V_minion
setAggNode:forFormulaCoord:
precedentsOfCell:
markCellRefsAsDirty:
descriptionWithGroupBy:
accumulator
setAccumulator:
groupNode
_formulaCoord
_accumulator
_groupNode
_aggregator
T{TSUCellCoord=ISBB},R,N,V_formulaCoord
T@"TSTAccumulator",&,N,V_accumulator
T@"TSTGroupNode",W,N,V_groupNode
T@"TSTAggregator",R,W,N,V_aggregator
T@"NSMutableArray",&,N,V_children
numArguments
argumentSpecForIndex:
initWithContext:argumentSpec:firstIndex:lastIndex:
p_resetArgumentSpecForChildren
enumerateObjectsWithOptions:usingBlock:
p_functionSpec
minArguments
maxArguments
setFunctionNode:
functionIndex
value
setMode:
mode
isDescendantOfChild:
unsupportedFunctionNameForLocale:
localizedFunctionNameForLocale:
insertFormulaText:includeWhitespace:unwrapped:
listSeparator
newDefaultFunctionNodeWithContext:functionIndex:
newSumNodeWithContext:children:
isEmptyFunctionNode
isMissingRequiredArgument
isInvalidFunction
whitespaceAfterLeftParen
setWhitespaceAfterLeftParen:
whitespaceAfterDelimiters
setWhitespaceAfterDelimiters:
whitespaceAfterFunctionName
invalidFunctionName
_functionEndNode
_functionIndex
_whitespaceAfterLeftParen
_whitespaceAfterDelimiters
_whitespaceAfterFunctionName
_invalidFunctionName
TS,R,N,V_functionIndex
T@"TSTFunctionEndNode",&,N
Ts,R,N
T@"NSString",&,V_whitespaceAfterLeftParen
T@"NSArray",&,N,V_whitespaceAfterDelimiters
T@"NSString",&,N,V_whitespaceAfterFunctionName
T@"NSString",&,N,V_invalidFunctionName
invalidFunction
TB,R,N,GisInvalidFunction
tst_hasCaseInsensitivePrefix:withLocale:
p_fixupNodeIfFunctionNode:
whitespaceAfterLet
whitespaceAfterIdentifier
whitespaceAfterEquals
whitespaceAfterDelimiter
newBareLetNodeWithContext:
boundSymbol
_whitespaceAfterLet
_whitespaceAfterIdentifier
_whitespaceAfterEquals
_whitespaceAfterDelimiter
T@"NSString",&,N,V_whitespaceAfterLet
T@"NSString",&,N,V_whitespaceAfterIdentifier
T@"NSString",&,N,V_whitespaceAfterEquals
T@"NSString",&,N,V_whitespaceAfterDelimiter
initWithContext:tableInfo:
initWithTableUID:ownerUID:
initWithGroupRules:withTableInfo:
addReceiver:
resetForCategoriesWithForce:
removeColumnsAtSummaryIndexes:
removeUuidsFromVector:
removeUuidsFromSet:
needsFormulaReset
cellAtCellUID:
setNeedsFormulaReset:
enumerateCellsUsingBlock:
setUpgradingToSubOwnerUIDs:
cellSpecForAggregateType:forColumnUID:atGroupLevel:
copyJustValueToCell:
markAllDependentsAsDirty
setCell:atCellUID:formulaReplacer:
p_setPivotCell:atCellUID:formulaReplacer:
p_setCategoryCell:atCellUID:formulaReplacer:
columnRowUID
removeCellsInColumnUid:
formatOfCellFormatKind:isExplicit:
currencyIsMostRecentlySet
enumerateCellStoragesInRange:withBlock:
viewCellCoordForSummaryCellCoord:
p_tableStyleAreaForCellCoord:
defaultCellStyleForCellCoord:
defaultTextStyleForCellCoord:
summaryRowHeightList
labelRowHeightList
labelRowVisibilityList
cellMapForWildcardCells
setCellMap:
changeType
groupingColumnChanges
p_removeRows:
categoryLevelForTableStyleArea:
didCreateGroup:
willRemoveGroup:
didRemoveGroup:
formulaAtCellCoord:
hasFormulaAtCellCoord:
resetForPivotingWithRowUids:columnUids:
upgradeFormulasForGroupByUIDChange
setFormulaResultCellsWithCellMap:
insertColumnsAtIndex:metadatas:
removeCategoryColumnCellsForRows:
explicitFormatOfKind:atModelCellCoord:currencyIsMostRecentlySet:
p_RowCategoryLevelForCellCoord:isLabel:
p_ColumnCategoryLevelForCellCoord:
setLabelRowVisibility:atCategoryLevel:
currentState
runChange:withSummaryChangeState:migrationHelper:
_needsFormulaReset
_summaryCellVendor
_aggregateFormulaOwner
_groupSortOrder
_categoryColumnWidth
_aggregateFormulaOwnerUID
_summaryRowHeightList
_labelRowHeightList
_labelRowVisibilityList
T^v,R,N,V_summaryRowHeightList
T^v,R,N,V_labelRowHeightList
T^v,R,N,V_labelRowVisibilityList
TB,N,V_needsFormulaReset
T@"TSTTableDataStore",R,N,V_dataStore
T@"TSTSummaryCellVendor",R,N,V_summaryCellVendor
T@"TSTCategoryAggregateFormulaOwner",R,N,V_aggregateFormulaOwner
T@"TSTTableInfo",R,N,V_tableInfo
T@"TSTTableGroupSortOrderUID",&,N,V_groupSortOrder
T{TSKUIDStruct=QQ},N,V_aggregateFormulaOwnerUID
Td,N,V_categoryColumnWidth
initWithMessage:unarchiver:
cellMap
_definedCellMap
T@"TSTCellMap",&,N,V_cellMap
mRWLock
mRetainedPointerKeyDictionary
asToggleControlSpec
initWithStroke:range:order:majorStrokeLayerToken:minorStrokeLayerToken:
tokenWithStroke:range:order:majorStrokeLayerToken:minorStrokeLayerToken:
T{TSTSimpleRange=qQ},R,N
setStroke:
setRange:
setOrder:
majorStrokeLayerToken
setMajorStrokeLayerToken:
minorStrokeLayerToken
setMinorStrokeLayerToken:
_order
_stroke
_majorStrokeLayerToken
_minorStrokeLayerToken
_range
T@"TSDStroke",&,N,V_stroke
T{TSTSimpleRange=qQ},N,V_range
Ti,N,V_order
T@"<TSTStrokeLayerStrokeAndRange>",&,N,V_majorStrokeLayerToken
T@"<TSTStrokeLayerStrokeAndRange>",&,N,V_minorStrokeLayerToken
majorStrokeLayer
startingIndex
minorStrokeLayer
nextStrokeAndRange:
p_findStrokeAndRangeAtIndex:highOrderToken:updatingLowOrderToken:lowOrderLayer:
enumerateStrokesUsingBlock:
appendStroke:inRange:order:
insertStroke:inRange:order:
setMajorStrokeLayer:
setMinorStrokeLayer:
_majorStrokeLayer
_minorStrokeLayer
T@"TSTStrokeLayer",&,N,V_majorStrokeLayer
T@"TSTStrokeLayer",&,N,V_minorStrokeLayer
currencySymbolForCurrencyCode:
tst_selectionForImplicitlyEditingWithFormatType:percentSymbol:currencySymbol:adjustSelectionForCurrencyOrPercentSymbols:
selectionWithRange:
superRange
wpKind
attributeArrayForKind:
tst_selectionForImplicitlyEditingCellWithFormat:adjustSelectionForCurrencyOrPercentSymbols:
tst_tableInfo
initWithUTF8String:
aggregateTypeForAggregateLabel:locale:
absoluteCellTractRefForHostCell:
foreachCellRect:
tsu_isSingleContiguousRange
extractComponentsFromDate:year:month:day:
initWithBool:
dataType
date
durationValue
durationUnits
initWithNumber:
duration
year
_decimal
_dataType
_units
_year
_month
_day
TC,R,N,V_dataType
T@"NSString",R,N,V_string
T@"NSDate",R,N
Tq,R,N,V_year
Tq,R,N,V_month
Tq,R,N,V_day
T@"NSNumber",R,N
T{TSCENumberValue=^^?{TSUDecimal={?=[2Q]}}{TSCEFormat=@IC{TSCEDurationFormat=b1b5b5b2}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}SB},R
setNumber:
lowercaseString
isEqualViaFormattingAsDouble::
isStringValueInList:
underlyingDecimalValue
isNumberValueInList:locale:
isDateValueInListYear:month:day:
isBoolValueInList:
isDurationValueInList:
setRelativeCellRef:
initWithRelativeCellRef:
relativeCellRef
tract
hasCategoryRef
setViewTractRef:
hasViewTractRef
cellRefForHostCoord:
uidRectRef
baseCellRef
crossTableRef
setBaseCellRef:
initWithBaseCellRef:preserveFlags:
cellRef
setBaseCellRef:preserveFlags:
dataList
initWithDataList:
hasRelativeCellRef
uidTractList
preserveColumn
preserveRow
needsFormulaRewriting
formulaCreatorForPredArg0UsingLinkedRef:useColumnRef:
formulaCreatorForPredArg
copyBySettingHostTableUID:hostColumnUID:hostRowUID:
hasHostCell
hostColumnUID
hostRowUID
numberValue
defaultPredicateArg
setNumberValue:
setDate:
isCellValueInList:
convertToRelativeRefIfPossible
setBaseCellRef:preserveColumn:preserveRow:
initWithBaseCellReference:preserveColumn:preserveRow:
cellReference
setBaseCellReference:
setBaseCellReference:preserveColumn:preserveRow:
setDurationValue:
setDurationUnits:
isEqual:atHostCoord:
rewriteWithContext:forArgAt:usingLinkedRef:useColumnRef:hostCellRef:rewriteBlock:
hostCellCoord
setHostCellCoord:
_categoryRef
_viewTractRef
_hostCellCoord
_baseCellRef
_dataList
_uidTractList
_relativeCellRef
_hasRelativeCellRef
_type
_preserveFlags
_listItemsSet
TC,R,N,V_type
T@"TSTFormulaPredArgData",R,N,V_data
T@"NSNumber",&,N
T@"NSString",C,N
T{TSUPreserveFlags=C},N
TB,R,N,V_hasRelativeCellRef
T@"TSCECategoryRef",&,N
T@"TSCEViewTractRef",&,N
T@"TSCEUndoTractList",&,N,V_uidTractList
T@"TSTUIDRectRef",R,N
T{TSUModelCellCoord={TSUCellCoord=ISBB}},N,V_hostCellCoord
columnHiddenStateExtent
initWithArchive:unarchiver:forHiddenStatesOwner:
registerHiddenStates:baseOwnerUID:
hiddenStatesByExtentUid:
unregisterHiddenStates:
willChangeExtentUids:
didChangeExtentUids:
_hiddenStatesByRowExtentUuid
_hiddenStatesByColumnExtentUuid
localizedTrueString
localizedFalseString
setValue:
_value
TB,N,V_value
dimensions
whitespaceBeforeFirstChild
setWhitespaceBeforeFirstChild:
_dimensions
_whitespaceBeforeFirstChild
T{TSCEGridDimensions=II},R,V_dimensions
T@"NSString",&,V_whitespaceBeforeFirstChild
T@"NSArray",&,V_whitespaceAfterDelimiters
currencyCodeForValue:
unitForCurrencyCode:
p_recalculateMergedFormatWithGroupBy:
_rowLookupKeysForFormat
_noFormatMergingNeeded
_cellValue
T@"TSCECellValue",R,&,N,V_cellValue
initWithInfo:frame:
isLayingOutIntoTarget
setCacheIsValid:
cacheIsValid
setCachedCellWraps:
setCachedVerticalAlignment:
setCachedParagraphAlignment:
setCachedMergeRange:
setCachedAutoSizeFlags:
setCachedCellStyle:
setCachedTextStyle:
setCachedPadding:
invalidateForPageCountChange
isDynamicallyChangingAvailableSpaceForContainedChild
repClassOverride
setCachedCellID:
cachedMaskSpillRange
_cachedCellWraps
_cacheIsValid
_cachedVerticalAlignment
_cachedParagraphAlignment
_cachedCellID
_cachedCellStyle
_cachedTextStyle
_cachedAutoSizeFlags
_cachedPadding
_cachedMergeRange
_cachedMaskSpillRange
_cachedMaskRect
_cachedAutosizedFrame
T{TSUCellCoord=ISBB},N,V_cachedCellID
T@"TSTCellStyle",&,N,V_cachedCellStyle
T@"TSWPParagraphStyle",&,N,V_cachedTextStyle
TB,N,V_cachedCellWraps
Ti,N,V_cachedVerticalAlignment
Ti,N,V_cachedParagraphAlignment
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_cachedMergeRange
TQ,N,V_cachedAutoSizeFlags
T@"TSWPPadding",&,N,V_cachedPadding
TB,N,V_cacheIsValid
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_cachedMaskRect
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_cachedMaskSpillRange
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_cachedAutosizedFrame
tokenizeFormulaStringLiterals
tsce_newStringByAddingDoubleQuoteEscapesIfNecessary
T@"NSString",&,N,V_value
pruneAgainstTable:
enumerateCellUIDRangesUsingBlock:
enumerateCellUIDUsingBlock:
subRangesOfCellCount:
_cellUIDRangeList
defaultDateTimeFormatForLocale:
tsce_year
tsce_month
tsce_day
tsce_hour
tsce_minute
tsce_second
initWithContext:asBlank:firstIndex:lastIndex:
isBlank
setIsBlank:
_isBlank
T@"NSDate",&,N,V_value
TB,N,V_isBlank
T@"NSString",&,N,V_dateFormat
p_convertCategoryRefToRelativeForHostCell:
initWithContext:calculationEngine:uidRectRef:categoryRef:hostCellRef:referenceColorHelper:suppressAutomaticNamedReferenceInvalidation:
p_expandedViewRangeRefForViewRangeRef:forLabelRowsInTable:
p_singleCategoryRefForViewRangeRef:rangeContext:calculationEngine:hostCellRef:
isRangeExpression
hostCellRef
referenceColorHelper
p_resetMenu
p_boundingViewRangeRef
isSpanningCategorySummaryRef
p_spanningCategoryRefForViewRangeRef:groupByUid:categoryLevel:calculationEngine:
rangeContext
p_rangeRef:isContainedWithinSummaryAndLabelRowsInTable:
p_cellRangeForSingleCategoryRefInViewRangeRef:inTable:rangeContext:
p_categoryRefViewTractRef
isValidCategoryRef:
viewCellTractRefForCategoryRef:atRowUid:
isSingleColumnSpanningReference
isSingleRowSpanningReference
isCategorySummaryRef
isSpanningCategoryRef:
isRangeWithFunction
p_subregionForRange:rangeContext:
referenceAsStringWithContext:
setForFormulaPlainText:
convertCategoryRefToRelativeAncestorUid:atRowUid:inHostTable:
initWithTableUID:
p_buildASTNodeArray:forCoord:preserveFlags:hostCell:
initWithAbsoluteTractRef:hostCell:
preserveFlagsForReference:calcEngine:
initWithContext:calculationEngine:viewRangeRef:preserveFlags:hostCellRef:referenceColorHelper:suppressAutomaticNamedReferenceInvalidation:
initWithContext:calculationEngine:chromeRangeRef:preserveFlags:hostCellRef:referenceColorHelper:suppressAutomaticNamedReferenceInvalidation:
viewBoundingBox
viewRangeRefDeprecated
categoryRefTableUID
isNonSpanningRangeExpression
setIsBlankForKeyboardInsertion:
isResizable
subregionForReference:range:
subregionForRange:
processChanges:forChangeSource:
setHostCellRef:
setRangeContext:
isBlankForKeyboardInsertion
suppressAutomaticNamedReferenceInvalidation
hasCachedIsValidReference
setHasCachedIsValidReference:
cachedIsValidReference
setCachedIsValidReference:
_refString
_formulaPlainText
_rangeContext
_rangeWithFunction
_isBlankForKeyboardInsertion
_suppressAutomaticNamedReferenceInvalidation
_isCategoryRef
_hasCachedIsValidReference
_cachedIsValidReference
_uidRectRef
_referenceColorHelper
_hostCellRef
T@"TSKDocumentRoot",R,N
T@"TSKChangeNotifier",R,N
TB,N,V_hasCachedIsValidReference
TB,N,V_cachedIsValidReference
T@"TSTUIDRectRef",R,N,V_uidRectRef
T{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}},N,V_hostCellRef
T{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}},R
TC,N,V_rangeContext
rangeWithFunction
TB,N,GisRangeWithFunction,V_rangeWithFunction
TB,N,V_isBlankForKeyboardInsertion
TB,R,N,V_suppressAutomaticNamedReferenceInvalidation
TB,R,N,V_isCategoryRef
T@"TSCECategoryRef",&,N,V_categoryRef
T@"TSTReferenceColorHelper",&,N,V_referenceColorHelper
renderRating:intoContext:rect:showDots:color:useMinimalSpace:
p_newStarPath:
renderRating:intoContext:rect:showDots:color:
initWithContext:tableInfo:pencilAnnotationStorage:
UUIDString
table
cellRangeForAnnotation:
uuid
T@"<TSKPencilAnnotationStorage>",R,N
setTable:
_cellRange
_pencilAnnotationStorage
_table
T@"TSTTableInfo",W,N,V_table
T@"TSDPencilAnnotationStorage",R,N,V_pencilAnnotationStorage
durationInterval
setDurationInterval:
setDurationFormat:
setBlank:
_blank
_durationInterval
Td,N,V_durationInterval
T@"TSKDurationFormat",&,N,V_durationFormat
blank
TB,N,GisBlank,V_blank
p_invalidate
numberWithShort:
bakedValue
argumentSpecForFunctionIndex:argumentIndex:
modes
argumentName
_detokenizedText
_mode
Ts,N,V_mode
p_strokeTypeForColumn:
strokeLayerForStrokeType:
p_strokeTypeForRow:
strokeTypeToLayerMap
strokeLayerStackForStrokeType:
strokeTypeToLayerStackMap
defaultsOnlyStrokeLayerStack
replaceDefaultStrokeLayerWith:
validateGeometry
changeDescriptor
strokeLayer
p_updateStrokeLayer:forColumnStrokeType:
p_updateStrokeLayer:forRowStrokeType:
strokeProvider
applyStroke:atIndexes:order:applyStroke:atIndexes:order:applyStroke:atIndexes:order:applyStroke:atIndexes:order:applyStroke:atIndexes:order:
p_headerColumnSeparatorColumnRangeIsValid
p_headerRowSeparatorRowRangeIsValid
strokeLayerStackForColumn:
strokeLayerStackForRow:
setStrokeProvider:
tableProvider
setTableProvider:
setStrokeTypeToLayerMap:
setStrokeTypeToLayerStackMap:
headerSideBorderColumnRange
setHeaderSideBorderColumnRange:
headerColumnSeparatorColumnRange
setHeaderColumnSeparatorColumnRange:
footerColumnSeparatorColumnRange
setFooterColumnSeparatorColumnRange:
bodySideBorderColumnRange
setBodySideBorderColumnRange:
topBorderRowRange
setTopBorderRowRange:
headerRowSeparatorRowRange
setHeaderRowSeparatorRowRange:
footerRowSeparatorRowRange
setFooterRowSeparatorRowRange:
bottomBorderRowRange
setBottomBorderRowRange:
_isValid
_strokeProvider
_tableProvider
_strokeTypeToLayerMap
_strokeTypeToLayerStackMap
_headerSideBorderColumnRange
_headerColumnSeparatorColumnRange
_footerColumnSeparatorColumnRange
_bodySideBorderColumnRange
_topBorderRowRange
_headerRowSeparatorRowRange
_footerRowSeparatorRowRange
_bottomBorderRowRange
T@"<TSTTableHiddenRowColumnProviding><TSTTableInternalGeometryProviding>",W,N,V_tableProvider
TB,N,V_isValid
T@"NSPointerArray",&,N,V_strokeTypeToLayerMap
T@"NSPointerArray",&,N,V_strokeTypeToLayerStackMap
T{_NSRange=QQ},N,V_headerSideBorderColumnRange
T{_NSRange=QQ},N,V_headerColumnSeparatorColumnRange
T{_NSRange=QQ},N,V_footerColumnSeparatorColumnRange
T{_NSRange=QQ},N,V_bodySideBorderColumnRange
T{_NSRange=QQ},N,V_topBorderRowRange
T{_NSRange=QQ},N,V_headerRowSeparatorRowRange
T{_NSRange=QQ},N,V_footerRowSeparatorRowRange
T{_NSRange=QQ},N,V_bottomBorderRowRange
T@"<TSTTableStrokeProviding>",W,N,V_strokeProvider
addUidCoord:atRunningLevel:
uuidCoordAtRunningLevel:
_uidCoordsPerRunLevel
addUidCoord:tupleForCoord:atRunningLevel:
uuidCoordForGroupTuple:runningLevel:
_uidCoordsPerTuple
isEqualToCellValue:
uuidCoordAtIndex:templateTuple:runningLevel:
getUidCoordforRunningAggregate:tupleForCoord:newUidCoord:addNewUidCoordEvenIfNotFound:inContext:
_cellValues
_uidCoords
initWithGroupBySet:
isMissingRunningTotalFieldForAggIndex:
getPreviousUidCoordForAggIndex:fromNewUidCoord:addNewUidCoordEvenIfNotFound:
_groupBySet
_runAggrForAggIndex
_valuesForRunningAggregatePerRunDirectionUid
T@"TSTGroupBySet",R,N,V_groupBySet
_functionNode
T@"TSTFunctionNode",N,V_functionNode
initFromCell:useAllSpareFormats:
initFromCell:useAllSpareFormats:forceNoContent:suppressApplyValue:applySpareFormatOnly:
formatAndValueFromCell:useAllSpareFormats:
p_copyStorage:
richTextOrErrorTextStorageValue
copyForApplyingNoContentWithSuppressApplyValue:
p_formatForFormatType:
initWithNumberValue:locale:
initWithStringValue:locale:
initWithDateValue:locale:
initWithBoolean:locale:
durationUnitLargestWithTimeInterval:
formatType:isSameCellFormatKindAs:
formatAndValueFromCell:useAllSpareFormats:forceNoContent:
formatAndValueFromCell:useAllSpareFormats:suppressApplyingValue:
formatAndValueFromRichTextCell:updatingStorageWithBlock:
formatAndValueFromCell:applySpareFormatOnly:
initFromPropertyCommandMessage:unarchiver:
saveToPropertyCommandMessage:archiver:
copyForApplyingNoContent
copyForNotApplyingValue
isFormulaSyntaxError
isApplySpareFormatOnly
hasStringContentMatchingCell:
applyToCell:
_useAllSpareFormats
_suppressApplyValue
_applySpareFormatOnly
_spareFormatType
_boolValue
_decimalValue
_objValue
_formattedValue
_formattedRichTextStorage
_explicitFlags
_cellFormatKind
_booleanFormat
_textFormat
T@"NSDate",R,C,N
T{TSUDecimal={?=[2Q]}},R,N
T@"NSString",R,C,N
cacheWidth:ofColumn:
widthOfColumn:handleCacheMissUsingBlock:
generateWidthHeightCollection
widthHeightCollections
setWidthHeightCollections:
_columnToWidth
_widthHeightCollections
T@"NSMutableArray",&,N,V_widthHeightCollections
tableNameChangeDistributor
summaryModelIsCleanForSortPrecedentForTableUID:
uidTractWithCalcEngine:hostTableUID:
initWithUidTract:calcEngine:tableUID:
p_ensureHiddenStatesExistsWithPivotDataTable:
pivotOptionsForUID:
emptyOptions
p_resetHiddenGrandTotals
p_formulaForCellCoord:runningTotalContext:
p_setPivotHeaderCellsResettingPivotHidden:preservingStyles:
p_resetSummaryFormulasForRunningTotalsOnly:preservingStyles:
clearAllPivotHiddenAndInvalidate:
invalidateAllCollapsed
hideColumnsAtIndexes:forAction:invalidate:
showColumnsAtIndexes:forAction:invalidate:
hideRowsAtIndexes:forAction:invalidate:
showRowsAtIndexes:forAction:invalidate:
groupingTypeIsAnyDateType:
shortStringForGroupingType:locale:
applyFormulaResult:
decimalPlaces
p_clearAllPivotHiddenAndFiltered:
p_resetAllHiddenTotals
hideTotals
p_resetHiddenTotalsForGroupingColumnUid:hideTotals:
enumerateOptionsUsingBlock:
copyBySettingTranslationFlags:
p_resetSortingStructures
p_sortRowsInMode:sortDirection:columnIndex:level:aggregateIndex:resetLabels:
p_commitSort
p_sortColumnsInMode:sortDirection:rowIndex:level:aggregateIndex:resetLabels:
p_sortFullTable:
sortByGrandTotal
sortingAggregateRuleUid
sortDescending
initWithViewIndex:direction:
mappingForSortingRows:withRules:
reverseMapIndex:
mappingForSortingColumns:withRules:
setTemporaryOrder:forDimension:
hideAtUid:forAction:
invalidateForChangingIndexes:isRow:forTable:
threadCollector
registerChange:details:forChangeSource:
p_commitSortAsync
linkedResolver
evaluationMode
writeResultsForCalcEngine:
invalidateForCalcEngine:
evaluateFormulaAt:withCalcEngine:recalcOptions:
multiEvaluateFormulasAt:withCalcEngine:recalcOptions:
didAddTableName:forTableUID:
didRemoveTableName:forTableUID:
didChangeTableName:fromTableName:forTableUID:
registerWithCalcEngine:forTableModel:baseOwnerUID:
linkToCalcEngine:forTableModel:
pivotSourceBodyReferenceEmbeddedInFormula
pivotSourceHeaderTract
pivotSourceBodyUidTract
groupingColumnOptionsMapCopy
pivotOptionsForGroupingColumn:
pivotOptionsForGroupingColumnUid:
pivotOptionsForColumnGroupsAtLevel:
groupingColumnUidExists:
setPivotOptions:groupingColumnUid:forSortingOptions:redoSort:
isHidingGrandTotalColumns
setHidingGrandTotalColumns:
isHidingGrandTotalRows
setHidingGrandTotalRows:
resetCellsForNewPivotOrder
rewriteForPaste
sortRowsByColumnIndex:level:aggregateIndex:sortDirection:
sortColumnsByRowIndex:level:aggregateIndex:sortDirection:
filteringChanged:forDimension:
pivotRowUIDs
pivotColumnUIDs
pivotDataRefreshTimestamp
pivotDataRefreshUID
pivotRowColumnRuleChangeUID
setPivotRowColumnRuleChangeUID:
pivotAggregateRuleChangeUID
setPivotAggregateRuleChangeUID:
shouldSkipNextAsyncSort
setShouldSkipNextAsyncSort:
_groupingColumnOptionsMap
_sortedColumnUids
_sortedRowUids
_resetHeaderLabelsAfterSort
_invalidateAfterAsyncSort
_autoImplicitSort
_shouldSkipNextAsyncSort
_isHidingGrandTotalColumns
_isHidingGrandTotalRows
_isEmptyPivot
_formulaStore
_pivotSourceTableName
_pivotDataRefreshTimestamp
_pivotSourceTableUID
_pivotDataRefreshUID
_pivotRowColumnRuleChangeUID
_pivotAggregateRuleChangeUID
_pivotRowUIDs
_pivotColumnUIDs
TB,R,N,V_isEmptyPivot
T@"TSTTableModel",R,N,V_tableModel
T@"TSTPivotGroupingColumnOptionsMap",R,N
T@"TSTFormulaStore",R,N,V_formulaStore
T{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}},R,N,V_pivotRowUIDs
T{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}},R,N,V_pivotColumnUIDs
T{TSKUIDStruct=QQ},N,V_pivotSourceTableUID
T@"NSString",&,N,V_pivotSourceTableName
Td,N,V_pivotDataRefreshTimestamp
T@"TSCECellTractRef",&,N
T@"TSTFormula",R,N
T{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}},N
T{TSKUIDStruct=QQ},N,V_pivotDataRefreshUID
T{TSKUIDStruct=QQ},N,V_pivotRowColumnRuleChangeUID
T{TSKUIDStruct=QQ},N,V_pivotAggregateRuleChangeUID
TB,N,V_shouldSkipNextAsyncSort
tableLayout
maskRect
recursivelyDrawInContext:keepingChildrenPassingTest:
masksToBounds
filterFormulaCoordinateForType:columnOrRowIndex:
initWithHiddenStatesOwner:forRows:
initWithHiddenStatesOwner:shouldRegister:
loadIndexesFromTable:
showAtViewIndex:forAction:
hideAtViewIndexes:forAction:
showAtViewIndexes:forAction:
hideAtBaseIndex:forAction:
showAtBaseIndex:forAction:
mutablePivotHiddenIndexes
clearAllPivotHidden
hidingActionForViewIndex:
hidingActionForBaseIndex:
indexesOfHiddenInRange:
indexesOfUserHiddenInRange:
indexesOfFilteredInRange:
indexesOfVisibleInRange:
indexesOfUserVisibleInRange:
indexesOfVisibleIndexesInIndexes:
indexesOfCollapsedInRange:
numberOfHiddenInRange:
numberOfUserHiddenInRange:
anyHiddenInRange:
anyHiddenInRange:forAction:
enumerateColumnRangesUsingBlock:
hasHiddenAtIndex:
indexOfVisibleBeforeIndex:
indexOfVisibleBeforeAndIncludingIndex:
indexOfVisibleAfterIndex:
indexOfVisibleAfterAndIncludingIndex:
numberOfHiddenInBaseRange:
indexesOfHiddenInBaseRange:
numberOfUserHiddenInBaseRange:
syncUpHiddenStateFormulaOwnerUIDs
setupAfterUnarchive
nextHiddenStateForRowsOwnerUID
setHiddenStateExtentUid:
nextHiddenStateForColumnsOwnerUID
setGroupUID:asCollapsed:
collapsedGroupUids
copyCollapsedStateToUpdatedGroupUids:dimension:
pruneCollapsedGroupsInDimension:
mutateFormulaFiltersWithTable:usingBlock:
dirtyFilterStateForHeaders
dirtyFilterStateForFooters
anyCollapsed
anyHidden
numberOfHidden
numberOfUserHidden
insertBaseRange:
deleteBaseRange:withUids:
moveViewRangeOnlyFrom:toIndex:
moveBaseRangeFrom:toIndex:
swapBaseIndex:withIndex:
mutableUserHiddenIndexes
hiddenOrCollapsedIndexes
supportsPivotTables
initWithFilterRules:type:context:
filterCoordTypeForFilterCoordinate:
columnOrRowIndexForFilterCoordinate:
filterFormulaCoordinateForColumnOrRow:
filterFormulaContainingCell
filterFormulaCoordForViewColumnRow:
mutableIndexSetByIntersecting:withRange:
showBaseColumnAtIndex:forAction:
hidingActionForBaseRowAtIndex:
indexesOfCollapsedColumnsInCellRange:
hidingActionForBaseColumnAtIndex:
anyHiddenColumnsInCellRange:forAction:
numberOfHiddenColumnsInBaseCellRange:
numberOfHiddenRowsInBaseCellRange:
numberOfUserHiddenRowsInBaseCellRange:
setRowGroupUID:asCollapsed:
setColumnGroupUID:asCollapsed:
collapsedRowGroupUids
collapseSummaryColumnGroupUIDs:
expandSummaryColumnGroupUIDs:
collapsedColumnGroupUids
copyCollapsedStateToUpdatedRowGroupUids:
pruneCollapsedRowGroups
pruneCollapsedColumnGroups
filterSetForColumns
hasCollapsedRows
hasCollapsedColumns
moveViewColumnRange:toColumnIndex:
mutableUserHiddenRowIndexes
mutableUserHiddenColumnIndexes
mutablePivotHiddenRowIndexes
mutablePivotHiddenColumnIndexes
mutableFilteredColumnIndexes
verifyConnectionsWithTableModel:
setHiddenStatesOwner:
loadedIndexesAfterUnarchive
_rowHiddenStateExtent
_columnHiddenStateExtent
_loadedIndexesAfterUnarchive
T@"TSTHiddenStatesOwner",W,N,V_hiddenStatesOwner
T@"TSTHiddenStateExtent",R,&,N,V_rowHiddenStateExtent
T@"TSTHiddenStateExtent",R,&,N,V_columnHiddenStateExtent
T@"TSTTableTranslator",R,&,N,V_translator
TB,R,N,V_loadedIndexesAfterUnarchive
T@"TSTTableFilterSet",&,N
p_filterRegion:strokeSidecar:
enumerateColumnsUsingBlock:
enumerateRowsUsingBlock:
regionByIntersectingRegion:
curCellID
setCurCellID:
_curCellID
T@"TSTStrokeSidecar",R,N,V_strokeSidecar
T@"NSObject<TSTCellRegionIterating>",R,N,V_regionIterator
T{TSUCellCoord=ISBB},N,V_curCellID
ownerForOwnerUID:
pivotTableUid
refersToPivotTableRows
refersToPivotTableColumns
groupByForCategoryRef:withCalcEngine:
relativeAncestorGroupUid:
relativeLevelOfAncestorGroupUid:
isRelativeAncestorGroupUid:
isBadRef
resolveRelativeAncestorUid:atRowUid:
convertToRelativeAncestorUid:atRowUid:
setAsRelativeWithGroupUid:
setRelativeGroupUid:
rebuildAllAggFormulas
dropAllAggregators
insertSpanningRangeRef:
filteringChangedPrecedentForTableUID:
initWithNotifyType:group:
isDeferringGroupByChangeNotifications
initWithNotifyType:group:rowUid:
beginDeferringRebuildFormulas
deferGroupByChangeNotifications
endDeferringRebuildFormulas
resumeGroupByChangeNotifications
addAggregator:
usedAggFormulaCoord:
loadFromArchive:
p_setupCustomFormatsWithLocale:
cellHasPrecedents:
resetAllAggsFormula
resetGroupingColumnsFormula
initWithType:groupByUid:
setPreviousLevel:
groupValueTupleByMergingTuple:toLevel:
groupingColumnListCopy
initWithType:groupingColumnChanges:groupByUid:
setUpdatedLevel:
previousLevel
addRemoveOfGroupUid:
updatedLevel
columnAggregateListCopy
_removeAggregates:
_addAggregates:atLevel:
markAllExternalGroupByRefsDirty:
groupByChangedPrecedentForTableUID:
aggregatorForColumn:
dropAggregator:
createAggregatorOnColumn:
distinctValuesAtLevel:
allObjects
sortUsingSelector:
notifyType
sendToDistributor:
sendDeferredNotifictions:
mergeOriginForBaseCellCoord:
allGroupNodeUids
setValue:forFormulaCoord:
valueForFormulaCoord:
hidingActionForUid:viewRcIndex:
cellsInACycleInOwner:
hasFormulaAt:
p_columnNameForColumnUid:
shortStringForGroupingType:
stringForGroupingType:
aggregateTypeForCategoryRef:
aggregateLabelForCategoryRef:
columnNameForCategoryRef:
valuesForCategoryRef:atRowUid:
valueGridForCategoryRef:atRowUid:hidingActionMask:
valueGridForCategoryRef:atRowUid:
setEmptyValueAtCoord:
setValue:atCoord:
missingRunningTotalInFieldError
raiseErrorForError:
initWithValues:
aggrIndexLevel
showAggregateName
sortedArrayFromArray:forDimension:
sortedArrayFromArray:
valueGridForCategoryRef:
cellRefsForCategoryRef:atRowUid:ordered:
bodyRowUidsForCategoryRef:atRowUid:ordered:
setGroupLevel:
rowUIDForViewRowIndex:
getCategoryReferencesWithCalcEngine:
p_promoteSpanningReferences:withCaptured:atLevel:
cellIteratorWithRegion:flags:searchFlags:
captureCategoryRefsFromIterator:atLevel:asSpanning:
uidRectRefForCategoryRef:atRowUid:
tableOrLinkedResolverForTableUID:
groupValueHierarchyStringForCategoryRef:forHostCellRef:namingContext:
setFormatString:
initWithName:formatType:data:
localizedStringWithFormat:
tswp_stringWithUnambiguousNeutralEnding
validateNumberOfGroupsForGroupingColumnList:sourceTableModel:sourceBodyTract:limit:groupNodeCount:
initWithTopLeft:bottomRight:
tableUIDForCategoryRef:withCalcEngine:
validateNumberOfGroupsForGroupingColumnList:pivotDataModel:limit:groupNodeCount:
didInitFromSOS
columnOrderChangedPrecedent
rowOrderChangedPrecedent
rowOrderChangedPrecedentIgnoringRecalc
columnAggregatesOnColumnUids:
changeForUpdatingGroupValueOnNode:toValue:
changeForMovingBaseRows:toDestGroup:
changeForSettingGroupingColumnList:
mapGroupUidsForChange:
runChange:withAggregates:
numberOfGroupsAtLevel:
numberOfGroupsUptoLevel:
indexOfGroupingColumn:
markAllAggregatesAsDirty
enumerateAggregatesAtLevel:withBlock:
groupNodeForGroupUuid:
groupLevelForGroupUid:isBlank:isError:
groupLevelForGroupingColumnUid:
markAllGroupNodesDirty
groupsAtLevel:
rowsForGroupValue:atLevel:
rowUidsForGroupUids:
enumerateRowsUidsAtLevel:withBlock:
childGroupUidsForGroupUids:
labelRowUidsForGroupUids:
labelRowUIDSet
labelRowUIDSetForCategoryLevel:labelRowVisibility:
rowUIDSetForCategoryLevel:
indexesOfGroupUidsInUids:
removeRowUid:
sortedValuesAtLevel:
aggregateRefOnValue:forColumnUid:forType:atLevel:
groupValueRefOnValue:atLevel:
groupValueHierarchyRefOnValue:atLevel:
enterCalcEngineMode
exitCalcEngineMode
inCalcEngineMode
updateAggFormulaCoord:
clearValueForFormulaCoord:
clearAggNode:forFormulaCoord:
createAggregatorsIfMissingAndAssert:
labelForCategoryRef:
valuesForCategoryRef:
valuesForCategoryRef:atRowUid:hidingActionMask:
countOfValuesForCategoryRef:
unorderedCellRefsForCategoryRef:atRowUid:
cellRefsForCategoryRef:atRowUid:
categoryRefsForSpanningCategoryRef:
expandSpanningCategoryRef:
promoteSpanningReferences:
captureCategoryLabelRefsForViewRegion:atLevel:asSpanning:forRows:
captureAnyCategoryRefsForViewRegion:atLevel:asSpanning:
captureCategoryRefsForViewRegion:atLevel:asSpanning:
viewCellTractRefForCategoryRef:
stringForCategoryRef:hostTableUID:
analyze
isBlankGroupUid:
isErrorGroupUid:
aggregateRangeRefForCategoryRef:
columnAggregates
indirectAggTypeChangeFormulaCoord
groupingColumnsFormulaCoord
groupingColumnHeadersFormulaCoord
allAggsInGroupRootFormulaCoord
needsRebuildOfAggFormulas
customFormatForBlankGroup
customFormatForErrorGroup
_isEnabled
_groupRoot
_ownerIndex
_aggregators
_indirectAggTypeChangeFormulaCoord
_groupingColumnsFormulaCoord
_groupingColumnHeadersFormulaCoord
_allAggsInGroupRootFormulaCoord
_columnOrderChangedCoord
_rowOrderChangedCoord
_rowOrderChangedIgnoringRecalcCoord
_hiddenStatesChangedCoord
_groupByChangeDistributor
_nextAggFormulaCoord
_aggValuesLock
_aggNodesByFormulaCoord
_groupNodesByGroupUid
_rebuildFormulasDeferredLevel
_needsRebuildOfAggFormulas
_deferGroupByChangeNotificationsLevel
_deferredGroupByChangeNotifications
_calcEngineGroupByChangeNotifications
_inCalcEngineMode
_groupingColumnHeadersChanged
_rowUidLookupList
_customFormatForBlankGroup
_customFormatForErrorGroup
T@"TSTCategoryOwner",W,N,V_categoryOwner
T@"TSTGroupBySet",W,N,V_groupBySet
T@"TSCECalculationEngine",R,N
T@"NSArray",R,&,V_groupingColumns
TC,R
TB,N,V_isEnabled
T@"TSTGroupByChangeDistributor",R,&,N,V_groupByChangeDistributor
T@"NSMutableArray",R,&,N,V_aggregators
T@"NSArray",R,N,V_columnAggregates
T@"TSULocale",R,N
TS,R,N,V_ownerIndex
T@"<TSCEFormulaReplacing>",R,N
TB,N,V_isRegisteredWithCalcEngine
T@"TSTGroupNode",R,N
T{TSUCellCoord=ISBB},R,N,V_indirectAggTypeChangeFormulaCoord
T{TSUCellCoord=ISBB},R,N,V_groupingColumnsFormulaCoord
T{TSUCellCoord=ISBB},R,N,V_groupingColumnHeadersFormulaCoord
T{TSUCellCoord=ISBB},R,N,V_allAggsInGroupRootFormulaCoord
T{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}},R,N
TB,N,V_needsRebuildOfAggFormulas
T@"TSKCustomFormatWrapper",R,&,N,V_customFormatForBlankGroup
T@"TSKCustomFormatWrapper",R,&,N,V_customFormatForErrorGroup
copyByPruningAgainstTable:behavior:usingBlock:
initWithCellUIDList:
addCellRegion:withColumnUIDs:rowUIDs:
cellUIDAtIndex:
_UIDLookupList
initWithGroupingColumnUID:columnUID:direction:
groupingColumnUID
columnUID
ruleWithGroupingColumnUID:columnUID:direction:
direction
setColumnUID:
setGroupingColumnUID:
ruleByChangingDirectionTo:
ruleByChangingSummaryColumnTo:
groupLevelInTable:
setDirection:
_groupingColumnUID
_columnUID
_direction
_definedGroupingColumnUID
_definedColumnUID
_definedDirection
Ti,N,V_direction
_clearTopStroke
_clearLeftStroke
_clearBottomStroke
_clearRightStroke
definedTopStroke
definedLeftStroke
definedBottomStroke
definedRightStroke
cellBorderForResettingAllStrokes
_topStroke
_topStrokeOrder
_rightStroke
_rightStrokeOrder
_bottomStroke
_bottomStrokeOrder
_leftStroke
_leftStrokeOrder
_definedTopStroke
_definedTopStrokeOrder
_definedRightStroke
_definedRightStrokeOrder
_definedBottomStroke
_definedBottomStrokeOrder
_definedLeftStroke
_definedLeftStrokeOrder
TB,R,N,V_definedTopStroke
TB,R,N,V_definedLeftStroke
TB,R,N,V_definedBottomStroke
TB,R,N,V_definedRightStroke
T@"TSDStroke",R,N,V_topStroke
Ti,R,N,V_topStrokeOrder
T@"TSDStroke",R,N,V_leftStroke
Ti,R,N,V_leftStrokeOrder
T@"TSDStroke",R,N,V_bottomStroke
Ti,R,N,V_bottomStrokeOrder
T@"TSDStroke",R,N,V_rightStroke
Ti,R,N,V_rightStrokeOrder
strokeLayerCount
strokeLayerAtIndex:
replaceStrokeLayerAtIndex:withObject:
p_strokeLayerEnumeration
isPortalStroke
portalledStrokeLayer
enumerateStrokesAndCapsInRange:usingBlock:
isEqualToStroke:
lookupStrokeAtIndex:
enumerateStrokesFrom:to:usingBlock:
enumerateStrokesAndCapsFrom:to:usingBlock:
defaultStrokeLayer
clearedStrokeLayer
setClearedStrokeLayer:
dynamicStrokeLayer
setDynamicStrokeLayer:
spillStrokeLayer
setSpillStrokeLayer:
hasStrokeInRange:
setDefaultStrokeLayer:
customStrokeLayer
setCustomStrokeLayer:
strokeLayerStack
replacementWithDefaults
isEligibleForDefaultsOnlyReplacement
verifyWithExpectedDefaultStrokeLayer:
insertClearedStrokeAtRange:
insertDynamicStroke:strokeOrder:atRange:
insertSpillStroke:atRange:
hasSpillStrokeInRange:
replaceCustomStrokeLayerWith:
invalidateCustomStrokes
invalidateClearedStrokesInRange:
invalidateDynamicStrokes
invalidateDynamicStrokesInRange:
invalidateSpillStrokes
isDefaultsOnly
_isDefaultsOnly
_defaultStrokeLayer
_customStrokeLayer
_clearedStrokeLayer
_dynamicStrokeLayer
_spillStrokeLayer
T@"TSTStrokeLayer",&,N,V_defaultStrokeLayer
T@"TSTStrokeLayer",&,N,V_customStrokeLayer
T@"TSTMutableStrokeLayer",&,N,V_clearedStrokeLayer
T@"TSTMutableStrokeLayer",&,N,V_dynamicStrokeLayer
T@"TSTMutableStrokeLayer",&,N,V_spillStrokeLayer
TB,R,N,V_isDefaultsOnly
startingStrokeOrder
defaultMinorStrokeLayer
defaultMajorStrokeLayer
customUnorderedStrokeLayer
customOrderedStrokeLayer
clearedMinorStrokeLayer
clearedMajorStrokeLayer
dynamicUnorderedStrokeLayer
dynamicOrderedStrokeLayer
spillMinorStrokeLayer
spillMajorStrokeLayer
setSpillMinorStrokeLayer:
setSpillMajorStrokeLayer:
initWithCopyOfMajorStrokes:andMinorStrokes:
mergeTopStrokes:withBottomStrokes:
mergeLeftStrokes:withRightStrokes:
initWithReferenceOfMajorStrokes:andMinorStrokes:
maxWidthOfStrokesInRange:cachedMax:
p_widthOfStrokesAtIndex:
setDefaultMinorStrokeLayer:
setDefaultMajorStrokeLayer:
setCustomUnorderedStrokeLayer:
setCustomOrderedStrokeLayer:
setClearedMinorStrokeLayer:
setClearedMajorStrokeLayer:
setDynamicUnorderedStrokeLayer:
setDynamicOrderedStrokeLayer:
_defaultMinorStrokeLayer
_defaultMajorStrokeLayer
_customUnorderedStrokeLayer
_customOrderedStrokeLayer
_clearedMinorStrokeLayer
_clearedMajorStrokeLayer
_dynamicUnorderedStrokeLayer
_dynamicOrderedStrokeLayer
_spillMinorStrokeLayer
_spillMajorStrokeLayer
T@"TSTStrokeLayer",&,N,V_defaultMinorStrokeLayer
T@"TSTStrokeLayer",&,N,V_defaultMajorStrokeLayer
T@"TSTStrokeLayer",&,N,V_customUnorderedStrokeLayer
T@"TSTStrokeOrderedLayer",&,N,V_customOrderedStrokeLayer
T@"TSTMutableStrokeLayer",&,N,V_clearedMinorStrokeLayer
T@"TSTMutableStrokeLayer",&,N,V_clearedMajorStrokeLayer
T@"TSTMutableStrokeLayer",&,N,V_dynamicUnorderedStrokeLayer
T@"TSTStrokeOrderedLayer",&,N,V_dynamicOrderedStrokeLayer
T@"TSTMutableStrokeLayer",&,N,V_spillMinorStrokeLayer
T@"TSTMutableStrokeLayer",&,N,V_spillMajorStrokeLayer
p_resolveStrokes
customStrokeProvider
defaultStrokeProvider
p_strokeExportCacheForGridRow:
strokeAtIndex:
p_strokeExportCacheForGridColumn:
mergedStrokes
p_strokeExportCacheForColumnBefore:columnAfter:
p_strokeExportCacheForRowAbove:rowBelow:
initWithMergedStack:
strokesForCellID:top:left:bottom:right:
rowStrokeExportCache
setRowStrokeExportCache:
columnStrokeExportCache
setColumnStrokeExportCache:
_defaultStrokeProvider
_customStrokeProvider
_rowStrokeExportCache
_columnStrokeExportCache
T@"<TSTTableStrokeProviding>",R,N,V_defaultStrokeProvider
T@"<TSTCustomStrokeProviding>",R,N,V_customStrokeProvider
T@"TSUIntegerKeyDictionary",&,N,V_rowStrokeExportCache
T@"TSUIntegerKeyDictionary",&,N,V_columnStrokeExportCache
clearRowIndexesCache
uniqueValueToRowUids
setUniqueValueToRowUids:
uniqueValueToRowIndexes
setUniqueValueToRowIndexes:
_uniqueValueToRowUids
_uniqueValueToRowIndexes
T@"NSMutableDictionary",&,N,V_uniqueValueToRowUids
T@"NSMutableDictionary",&,N,V_uniqueValueToRowIndexes
firstIndexNotInIndexSet:beginRange:pastEndRange:
lastIndexNotInIndexSet:beginRange:pastEndRange:
forRows
p_registerAllFormulas
tableTranslator
areMapsStale
viewRowIndexForBaseRowIndex:
viewIndexForBaseIndex:
userHiddenChangedPrecedentForTableUID:
hideAtUid:forIndex:forViewIndex:forAction:
addHiddenIndex:viewIndex:forAction:
hiddenStateChangedForBaseIndex:viewIndex:forAction:
showAtUid:forIndex:forViewIndex:forAction:
removeHiddenIndex:viewIndex:forAction:
p_viewOnlyHiddenIndexes
collapsedIndexes
p_hiddenIndexes
p_baseHiddenIndexes
mutableBaseRowIndexesForUIDs:
mutableBaseColumnIndexesForUIDs:
verifyIndexesAreConsistent
clearInvalidIndexes
viewRowIndexesForBaseRowIndexes:
viewColumnIndexesForBaseColumnIndexes:
showAtUid:forAction:
userHiddenIndexes
filteredIndexes
firstIndexNotInIndexSet:orIndexSet:beginRange:pastEndRange:
lastIndexNotInIndexSet:orIndexSet:beginRange:pastEndRange:
findLastVisibleIndexInBegin:afterEnd:
findFirstVisibleIndexInBegin:afterEnd:
clearAllCachedRowIndexes
dirtyFilterStateForRowRange:
swapIndexesWithIndexSet:index:withIndex:
ruleAtAbsoluteIndex:
predicate
remapOwnerUIDsWithMap:calcEngine:error:
needsThreshold
predicateType
uniqueDistinctPrecedentForTableUID:
baseColumnIndexForFilterRuleInTableModel:
precedentsForFilterSet:calcEngine:hostOwnerUID:hostCellID:
p_registerAllFormulasReturningCoords:
removeUUID:
previousGroupNodeUids
intersectsSet:
updatedGroupNodeUids
previousGroupNodeUidForUpdatedGroupNodeUid:
removeUuidsFromSetReturningRemoved:
addUuidsFromSetReturningAdded:
numberParam1
initWithDate:locale:
p_calculateUniqueThresholdWithCalcEngine:formulaCoord:
shouldAbortRecalculation
rewriteNumberToDurationForSageImport:durationUnitLargest:
p_calculateAverageThresholdWithCalcEngine:formulaCoord:
qualifier1
p_calculateTopOrBottomThresholdWithCalcEngine:formulaCoord:isTop:keyScale:
p_calculateUniqueDistinctIndexWithCalcEngine:formulaCoord:tableModel:rule:
p_createThresholdCellValue:locale:
rowIsShown:withHiddenStateExtent:withCalcEngine:
downgradeFilterSetForBackwardCompatWithLocale:
copyByRewritingFilterRulesToUidFormWithContext:withTableInfo:
rewriteFormulaWithBlock:
p_removeAllFormulaFromCalculationEngine
allFormulaCoordsInOwner:
removeFormulasAt:
markRangeRefAsDirty:
enumerateFiltersInTable:usingBlock:
cellReferenceForIndex:
uniqueValuesForColumnUID:
baseIndexForViewIndex:
removeUid:
anyUserHidden
_hiddenStateExtentUid
_hiddenByUid
_forRows
_collapsedGroupUids
_baseUserHiddenIndexes
_baseFilteredIndexes
_viewOnlyFilteredIndexes
_pivotHiddenIndexes
_viewIndexesMutex
_userHiddenIndexes
_filteredIndexes
_combinedHiddenIndexes
_collapsedIndexes
_uniqueValuesByColumnUid
_columnUidsWithUniqueIndexes
_rewrittenFilterSet
_pendingComputedLock
_pendingColumnsOrRowsShown
_pendingColumnsOrRowsHidden
_pendingViewColumnsOrRowsShown
_pendingViewColumnsOrRowsHidden
_cellRangesToInvalidate
_invalidateViewGeometry
_invalidateCollapsed
T{TSKUIDStruct=QQ},N,V_hiddenStateExtentUid
TB,R,N,V_forRows
T@"TSCEUIDSet",R,N,V_collapsedGroupUids
T@"NSArray",R,N,V_thresholdCellValues
getUUIDBytes:
popupChoiceIndex
mergeRangeCache
loadMergeCache
mergeIndexesForRange:
p_updateOriginMapWithSourceCellCoord:destCellCoord:
initWithType:uidRanges:
addFormula:
addFormulaIndex:
modelCellRanges
p_moveCellFromCellCoord:toCellCoord:
hasMergeFormulas
mergeActionForBaseCellRegion:nonOriginPartialsOnly:
mergeIndexesForBaseCellRegion:
containsModelCellCoord:
mergeFormulas
dirtyCellsForMergingRange:forTable:headerRowRange:headerColumnRange:
reloadMergeCacheForIndexes:
p_dirtyCellsForMerge:
removeBaseMergeRange:
p_shrinkReturningInverseForAction:
p_growReturningInverseForAction:
formulaCoordsReferringToRange:fromOwner:skipSpanning:
p_shrinkMergesAtIndexes:intersectedByBaseRegion:
uidRanges
shrinkReturningInverseForBaseCellRegion:
regionByAddingModelCellRect:
regionBySubtractingModelCellRect:
mergeFormulaIndexes
boundingModelCellRect
regionFromModelCellRect:
regionBySubtractingModelCellRegion:
p_growRangeFrom:toDesired:
intersectsModelCellRect:
allValidMergesForMergeList:
enumerateMergesIntersectingBaseCellRegion:usingBlock:
beginSuppressingWillModifyCalls
initForRemoveRowsOrColumnsFromTable:rowColumnUuids:areRows:
setCanBeNested:
copyByRewritingWithSpec:calcEngine:containingCell:
endSuppressingWillModifyCalls
initForInsertingRowsOrColumnsIntoTable:rowColumnUuids:areRows:
didModifyTable:
allMergesAsString
resetMergeOriginMap
mergeActionForBaseCellRegion:
removeReturningInverseForBaseCellRegion:
find:
p_enumerateMergesUsingBlock:
mergeRangesAndCrumbsIntersectingBaseCellRect:
hasMergeRangesIntersectingBaseCellRect:
hasMergeRangesIntersectingBaseCellRegion:
mergeRangesPartiallyIntersectBaseCellRect:
mergeRangesPartiallyIntersectBaseCellRegion:
rewroteFormula:atCoordinate:withRewriteSpec:isUndo:
setFormulaStore:
mergeOriginsMap
reverseOriginsMap
mergeCacheLoaded
setMergeCacheLoaded:
setMergeRangeCache:
setMergeChangeDistributor:
_mergeOriginsMap
_reverseOriginsMap
_mergeCacheLoaded
_mergeRangeCache
_mergeChangeDistributor
T@"TSCellRangeCache",&,N,V_mergeRangeCache
TB,N,V_mergeCacheLoaded
T@"TSTTableModel",R,W,N,V_tableModel
T@"TSTFormulaStore",&,N,V_formulaStore
T@"TSTMergeChangeDistributor",&,N,V_mergeChangeDistributor
Tr^v,R,N,V_mergeOriginsMap
Tr^v,R,N,V_reverseOriginsMap
interactionTypeIsControl:
setInteractionTypeFromTheFuture:
interactionTypeFromTheFuture
isShimControlFormatType:
interactionTypeForShimControlFormatType:
shimControlFormatTypeForInteractionType:
displayNameForInteractionType:
propertiesMatchingThoseInMap:
_interactionTypeFromTheFuture
TI,N,V_interactionTypeFromTheFuture
registerWithCalcEngine:reregister:
referencesForCalcEngine:referenceTrackerUID:
foreachSpanningRangeRef:
allTrackedReferences
isEqualToTrackedReference:
beginTrackingReference:calcEngine:
endTrackingReference:calcEngine:
initWithSpanningRangeRef:
beginTrackingReference:
endTrackingReference:
baseIndex
p_referenceForColumnIndex:
beginTrackingReferenceWithSpanningRef:
p_columnForTrackedReference:
p_hasRuleReferenceForTrackedReference:
_trackedRefsStore
_isRegisteredWithCalculationEngine
initWithSourceCellRange:
initWithSourceCellRange:targetCellRange:
targetCellRange
sourceCellRange
autofillSelectionWithSourceCellRange:
autofillSelectionWithSourceCellRange:targetCellRange:
isValidForCellSelection:inTable:
isValidForRowVisibilityChangeInRegion:table:
setSourceCellRange:
setTargetCellRange:
_sourceCellRange
_targetCellRange
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_sourceCellRange
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_targetCellRange
addChangeDescriptorWithType:andCellRange:
fixedColumnWidthStack
styleProviderStack
setStyleProviderStack:
addPointer:
setStyleProvidingSource:
modifySafelyUsingBlock:
removePointerAtIndex:
setFixedColumnWidthStack:
initWithName:
widthHeightCacheFromBundle:withNumberOfRows:andNumberOfColumns:
initWithLimit:
tableRowsBehaviorForTable:andEnvironment:
updateCellRange
addChangeDescriptorWithType:andCellRange:andStrokeRange:
validateStrokesArrays:
p_validateStrokesForRegion:
verifyStrokes
hiddenRowsColumnsCache
p_validateStrokeWidthCachesForRegion:invalidateStrokeDefaults:
setMaximumSize:
setCacheHintID:
setPartitionPosition:
widthHeightCache
resetModelCache
resetModelCacheRange:
initWithStylesheet:paragraphStyle:listStyle:columnStyle:alignmentForNaturalAlignment:naturalDirection:
typesettingLocale
shouldHyphenate
initWithPadding:verticalAlignment:locale:shouldHyphenate:
setTableNameTextEngineDelegate:
tableNameTextEngineDelegate
setDelegate:
tableNameTextSizeForTableName:maxWidth:
tableNameTextEngine
measureText:withMaxWidth:
paragraphStyle
calculatedTableNameHeight
tableNameHeightCache
calculatedTableNameHeightIncludingDynamicResize:
isDynamicallyResizingTableName
dynamicTableNameResize
numberOfVisibleRowsInCellRange:
tableStyleAreaForCategoryLevel:isLabel:
fixedWidthProvider
fixedColumnWidth:
isDynamicallyResizingForColumnRowAdd:rowColIndex:
hasWidthForColumn:
getColumnWidth:
getModelWidthForColumn:
setModelWidth:forColumn:
scaleIsValid
tableRowsBehavior
hasHeightForRow:
getRowHeight:
getFitHeight:andModelHeight:forRow:
setModelHeight:forRow:
clampRowHeightAccountingForMaximumPartitionSize:rowIndex:rowHeight:
getModelHeightForRow:
defaultPaddingForCellID:
newTextEngineForCell:atCellID:textStyle:
layoutText:context:kind:minSize:maxSize:anchor:flags:
fontHeightOfParagraphStyle:
typographicBounds
frameBounds
getFitHeightForRow:
resetFittingRowHeightsStartingWith:upToRow:
invalidateBandedFill
p_strokesForGridColumn:isLeft:takeStrokeWriteLock:
p_strokesForGridRow:isTop:takeStrokeWriteLock:
adjustGridColumnForVisibility:isLeft:
adjustGridRowForVisibility:isTop:
p_setDynamicStroke:strokeOrder:forGridRow:isTop:beginColumn:endColumn:
p_setDynamicStroke:strokeOrder:forGridColumn:isLeft:beginRow:endRow:
mergedStrokesForGridRow:
mergedStrokesForGridColumn:
setClearedStrokeForGridColumn:beginRow:endRow:
setClearedStrokeForGridRow:beginColumn:endColumn:
contentWidthForCellRange:skipDynamicSwap:
contentHeightForCellRange:skipDynamicSwap:maximumPartitionSize:
p_contentWidthForCellRange:skipDynamicSwap:validationBundle:
regionByUnioningEveryRangeInRegionWithRange:
shuffleMapping
sourceIndexes
invalidateStrokeDefaults
invalidateStrokeSpills
isDynamicallyChangingRowCount
hiddenColumnIndices
hiddenRowIndices
p_invalidateClearedStrokesForCellRegion:
p_clearStrokesForMergesInCellRegion:
strokeLayerModifiedByInsertingSpaceAt:
strokeLayerModifiedByRemovingRangeAt:
strokesDefaultVendor
modelRowForLayoutRow:
isDynamicallySettingBandedFill
dynamicBandedFill
dynamicBandedFillSetting
numberOfVisibleRowsFromStartRowIndex:toEndRowIndex:
numberOfVisibleRowsFromHeader:
setModelCellID:
setCellPropsRowHeight:
setNeedWPColumn:
setCellWraps:
setPaddingInsets:
setMinSize:
setMaxSize:
setForDrawing:
setLayoutMergeRange:
setInDynamicLayout:
setCellContents:
setLayoutCacheFlags:
setPageNumber:
setPageCount:
measureWithLayoutState:
sizeOfText
p_setDefaultFontHeight:forTableStyleArea:
dynamicContentMustDrawOnMainThread
isMainThread
modelColumnForLayoutColumn:
layoutRowForModelRow:
layoutColumnForModelColumn:
mergeRange:forCellID:
isDynamicallyRevealingRowsCols:rowColIndex:
processHiddenRowsForExport
isRowUserHidden:
numberOfVisibleColumnsInCellRange:
anyRowsUserHiddenInCellRange:
nonUserHiddenRowAfterAndIncludingRow:
entireBodyRowsCellRange
dynamicLayoutParticipants
isDynamicallyChangingColumnCount
changeDescriptorWithType:cellRange:strokeRange:
processedByLayoutEngine
changeDescriptors
setProcessedByLayoutEngine:
validateBandedFill
validateDynamicResizeInfo
validateChangeDescriptorQueue
validateTableNameHeight
invalidateDefaultFontHeights
validateRowVisibility:
p_validateCellIDToWPColumnCacheForChangeDescriptors:
validateChangeDescriptors:tableInfo:numberOfRows:numberOfColumns:
validateLayoutEngineForChangeDescriptors:
validateDefaultFontHeights
validateStrokesForChangeDescriptors:
validateFittingRegionForChangeDescriptors:
validateRowsNeedingFittingInfo:validationRegion:layoutEngine:
validateFittingInfoForValidationRegion:rowsNeedingFittingInfo:
waitForLayoutToComplete:
finalizeLayoutPassWithRowsNeedingFittingInfo:
willModifyIfNeeded:
setFitHeight:forCellID:
enumerateMergeRangesUsingBlock:
regionFromColumnIndices:
postNotificationName:object:
overrideCGFloatValueForProperty:
overrideValueForProperty:
edgeInsetsFromPadding:
queueCellForValidation:cell:textStyle:modelMergeRange:wrap:verticalAlignment:padding:prop:layoutCacheFlags:validationBundle:layoutTask:
p_addFittingInfoForEmptyMergeRange:
p_validateFittingInfoForEmptyCellsBetween:andCellID:inRange:widthHeightCollection:
validateFittingInfoForCell:cellID:mergeRange:setFitting:layoutTask:widthHeightCollection:validationBundle:
processLayoutTask:validationBundle:
p_validateFittingInfoWithCellRangeWorker:widthHeightCollection:containsMerges:validationBundle:
p_validateFittingInfoForEmptyCellsOnSingleRowBetween:andEndCellID:widthHeightCollection:
addRange:height:paddingInsets:isCheckbox:
mergeRangesProppingRowHeightsInRegion:
regionFillingRowsFromRegion:
p_containsGradientThatFillsContainerInStyle:
fillType
p_validationFittingCellRegionForColumnsDeleted:cellRegionGatherer:
p_validationFittingCellRegionForColumnsInserted:cellRegionGatherer:
p_validationFittingCellRegionForColumnsVisibility:cellRegionGatherer:
p_validationFittingCellRegionForColumnsMovedFrom:toColumnIndex:cellRegionGatherer:
p_validationFittingCellRegionForRowsDeleted:cellRegionGatherer:
p_validationFittingCellRegionForRowsInserted:cellRegionGatherer:
p_validationFittingCellRegionForRowsMovedFrom:toRowIndex:cellRegionGatherer:
p_validationFittingCellRegionForRangeMergeUnmerge:cellRegionGatherer:
p_validationFittingCellRegionForStrokesChanged:cellRegionGatherer:
p_validationFittingForChangeDescriptorType:regionFromChangeDescriptor:cellRegionGatherer:
tsu_intersectionWithIndexSet:
p_validationBundleForRegionToValidate:
validateFittingInfoWithCellRange:validationBundle:
setShouldFastPathMeasureFitWidth:
setVerticalAlignment:
layoutCellIDForModelCellID:
hasAttachmentsThatChangeWithPageNumberOrPageCount
wpColumn
keyVal
columnToWidthMapFromCollectionArray:
unsignedIntValue
p_containsGradientFillThatFillsContainerInCell:cellContents:
layoutCacheFlags
cellContents
contentWidthForCellRange:validationBundle:
setMaxWidthForChildren:
addCellState:
numberOfCellStates
numCellsPerTask
modelCellID
minSize
cellWraps
needWPColumn
p_resolvedTextStyleForCell:atCellID:textStyle:outNaturalAlignment:outCellDirection:
fontInfoForTextStyle:withString:
newTextEngineForCell:atCellID:textStyle:naturalAlignment:cellDirection:
setTextColorOverride:
paddingInsets
verticalAlignment
naturalAlignment
initWithString:width:height:paragraphStyle:cellWraps:valueType:paddingInsets:verticalAlignment:writingDirection:naturalAlignment:styleProvidingSource:
setKeyVal:
maxWidthForChildren
layoutTextStorage:minSize:maxSize:anchor:pageNumber:pageCount:flags:
setWpColumn:
setSizeOfText:
columnLayoutWidthForBodyWidth:insets:
shouldFastPathMeasureFitWidth
heightForString:width:outFitWidth:
enumerateCellStatesUsingBlock:
writeToLayoutEngineCaches:
setFittingHeightsFromCollectionArray:
widthForString:
boundingBottomRightCellID
unwrappedFittingWidthsForColumnInCellRegionWorker:
redColor
resolvedTextStyleWithPropertyMap:
formattedDataParagraphStylePropertyMapForCell:atCellID:
defaultColumnStyle
isDynamicallyChangingFontColorOfCellID:
dynamicFontColor
setAlignment:
tabs
insertTab:
currentThread
setProcessHiddenRowsForExport:
pushToStyleProviderStack:
popFromStyleProviderStack
pushToFixedColumnWidthStack:
popFromFixedColumnWidthStack
tableStrokeProvider
hintIsValid:
resetModelHeightWidthCache
clearModelHeightWidthCacheForCellRange:
categoryColumnsCellRange
entireActualHeaderColumnsCellRange
entireBodyCellRange
heightOfRowIgnoringFitting:withStrokeHeights:
fittingHeightOfRow:
setStrokeSpillForRightGridColumn:leftGridColumn:inRow:
hasStrokeSpillForLeftGridColumn:inRow:
setDynamicCellBorder:forCellID:
shouldRowUseBandedFill:
beginDynamicMode:
endDynamicMode:
modelCellRegionForLayoutCellRegion:
layoutCellRegionForModelCellRegion:
isDynamicallyResizingForColumnRowAdd:
isDynamicallyResizingCellIDForColumnRowAdd:
expandCellRangeToVisibleNeighbors:
firstEmptyBodyRow
containsAnyContentInRange:
dynamicLayout
isDynamicallyRevealingRowsCols
updateDynamicTableNameSize:
isDynamicallyChangingSelection
updateDynamicFontColor:andRange:
dynamicCellFillDelegate
isDynamicallyChangingCellFill
captureDynamicResizeInfo
updateDynamicResizeInfo:
invalidateDynamicResizeInfo
isGrouped
fittingWidthsMapForColumns:includeStrokes:
setMaxConcurrentTasks:
unwrappedFittingWidthsForColumnsInCellRegion:
clearRenderingCaches
isCategoryLastSummaryRowCollapsed
isLastVisibleBodyRowCategorySummaryOrLabelRow
readSafelyUsingBlock:
setStrokesDefaultVendor:
setCellIDToWPColumnCache:
setDupContentCache:
tempWPColumnCache
setTempWPColumnCache:
setWidthHeightCache:
setHiddenRowsColumnsCache:
maxConcurrentTasks
setNumCellsPerTask:
setBandedFillObject:
setTableEnvironment:
setTableRowsBehavior:
setInDynamicLayoutMode:
dynamicAddOrRemoveColumnElementSize
setDynamicAddOrRemoveColumnElementSize:
dynamicAddOrRemoveRowElementSize
setDynamicAddOrRemoveRowElementSize:
setDynamicBandedFill:
setDynamicBandedFillSetting:
dynamicColumnAdjustment
setDynamicColumnAdjustment:
setDynamicColumnTabSize:
setDynamicFontColor:
dynamicFontColorCellRange
setDynamicFontColorCellRange:
setDynamicRepResize:
dynamicRepResizeSessionInProgress
setDynamicRepResizeSessionInProgress:
setDynamicInfoGeometry:
dynamicWidthResize
setDynamicWidthResize:
dynamicHeightResize
setDynamicHeightResize:
dynamicResizingColumns
setDynamicResizingColumns:
dynamicResizingColumnRange
setDynamicResizingColumnRange:
dynamicResizingColumnAdjustment
setDynamicResizingColumnAdjustment:
dynamicResizingRows
setDynamicResizingRows:
dynamicResizingRowRange
setDynamicResizingRowRange:
dynamicResizingRowAdjustment
setDynamicResizingRowAdjustment:
dynamicRowAdjustment
setDynamicRowAdjustment:
setDynamicRowTabSize:
dynamicSavedLayoutGeometry
setDynamicSavedLayoutGeometry:
dynamicSelection
setDynamicSelection:
setDynamicTableNameResize:
dynamicSuppressingConditionalStylesCellID
setDynamicSuppressingConditionalStylesCellID:
setChangeDescriptors:
mergeRangesForLayoutPass
setMergeRangesForLayoutPass:
fontInfoCache
setFontInfoCache:
layoutValidateQueue
setLayoutValidateQueue:
layoutMeasureQueue
setLayoutMeasureQueue:
layoutConcurrentQueue
setLayoutConcurrentQueue:
setTopRowStrokes:
setBottomRowStrokes:
setLeftColumnStrokes:
setRightColumnStrokes:
spillStrokeColumns
setSpillStrokeColumns:
cellRegionForClearedMergeStrokes
setCellRegionForClearedMergeStrokes:
columnToStrokeWidthCache
setColumnToStrokeWidthCache:
rowToStrokeHeightCache
setRowToStrokeHeightCache:
paraStyleToHeightCache
setParaStyleToHeightCache:
tableNameBounds
setTableNameBounds:
cachedTableNameHeight
setCachedTableNameHeight:
tableNameHeightValid
setTableNameHeightValid:
cachedNumberOfColumns
setCachedNumberOfColumns:
cachedNumberOfRows
setCachedNumberOfRows:
cachedNumberOfHeaderColumns
setCachedNumberOfHeaderColumns:
cachedNumberOfHeaderRows
setCachedNumberOfHeaderRows:
cachedNumberOfGrandTotalColumns
setCachedNumberOfGrandTotalColumns:
cachedNumberOfFooterRows
setCachedNumberOfFooterRows:
cachedNumberOfFooterOrGrandTotalRows
setCachedNumberOfFooterOrGrandTotalRows:
cachedMaxNumberOfColumns
setCachedMaxNumberOfColumns:
cachedMaxNumberOfRows
setCachedMaxNumberOfRows:
bandedFillIsValid
setBandedFillIsValid:
setUseBandedFill:
tableDefaultFontHeightsAreValid
setTableDefaultFontHeightsAreValid:
contentReadingThreads
setContentReadingThreads:
setEmptyFilteredTable:
setIsGrouped:
setDynamicLayoutParticipants:
setDynamicLayout:
setDynamicContentDelegate:
dynamicHidingContent
setDynamicHidingContent:
dynamicHidingRowsCols
setDynamicHidingRowsCols:
dynamicHidingRowsColsDirection
setDynamicHidingRowsColsDirection:
dynamicHidingText
setDynamicHidingText:
dynamicRemovingText
setDynamicRemovingText:
dynamicRepressFrozenHeaderRows
setDynamicRepressFrozenHeaderRows:
dynamicRepressFrozenHeaderColumns
setDynamicRepressFrozenHeaderColumns:
dynamicResizeInfo
setDynamicResizeInfo:
dynamicRevealingRowsCols
setDynamicRevealingRowsCols:
dynamicRevealingRowsColsDirection
setDynamicRevealingRowsColsDirection:
setDynamicCellFillDelegate:
_tableDefaultFontHeightForArea
_layoutInFlight
_strokesRWLock
_contentRWLock
_dynamicModeUnfairLock
_inDynamicLayoutMode
_dynamicBandedFill
_dynamicBandedFillSetting
_dynamicRepResize
_dynamicRepResizeSessionInProgress
_dynamicResizingColumns
_dynamicResizingRows
_processHiddenRowsForExport
_tableNameHeightValid
_bandedFillIsValid
_useBandedFill
_tableDefaultFontHeightsAreValid
_emptyFilteredTable
_isGrouped
_dynamicRepressFrozenHeaderRows
_dynamicRepressFrozenHeaderColumns
_maxConcurrentTasks
_numCellsPerTask
_tableEnvironment
_tableRowsBehavior
_dynamicColumnAdjustment
_dynamicRowAdjustment
_cachedNumberOfColumns
_cachedNumberOfRows
_cachedNumberOfHeaderColumns
_cachedNumberOfHeaderRows
_cachedNumberOfGrandTotalColumns
_cachedNumberOfFooterRows
_cachedNumberOfFooterOrGrandTotalRows
_changeNotifier
_strokesDefaultVendor
_cellIDToWPColumnCache
_dupContentCache
_tempWPColumnCache
_widthHeightCache
_hiddenRowsColumnsCache
_bandedFillObject
_dynamicAddOrRemoveColumnElementSize
_dynamicAddOrRemoveRowElementSize
_dynamicColumnTabSize
_dynamicFontColor
_dynamicInfoGeometry
_dynamicWidthResize
_dynamicHeightResize
_dynamicResizingColumnAdjustment
_dynamicResizingRowAdjustment
_dynamicRowTabSize
_dynamicSavedLayoutGeometry
_dynamicSelection
_dynamicTableNameResize
_dynamicSuppressingConditionalStylesCellID
_dynamicFooterHeight
_changeDescriptors
_mergeRangesForLayoutPass
_styleProvidingSource
_fontInfoCache
_layoutValidateQueue
_layoutMeasureQueue
_layoutConcurrentQueue
_spillStrokeColumns
_cellRegionForClearedMergeStrokes
_columnToStrokeWidthCache
_rowToStrokeHeightCache
_paraStyleToHeightCache
_cachedTableNameHeight
_tableNameHeightCache
_cachedMaxNumberOfColumns
_cachedMaxNumberOfRows
_contentReadingThreads
_dynamicLayoutParticipants
_dynamicLayout
_dynamicContentDelegate
_dynamicHidingRowsColsDirection
_dynamicResizeInfo
_dynamicRevealingRowsColsDirection
_dynamicCellFillDelegate
_defaultColumnStyle
_tableNameTextEngineDelegate
_styleProviderStack
_fixedColumnWidthStack
_dynamicFontColorCellRange
_dynamicResizingColumnRange
_dynamicResizingRowRange
_dynamicHidingContent
_dynamicHidingRowsCols
_dynamicHidingText
_dynamicRemovingText
_dynamicRevealingRowsCols
_tableNameBounds
T@"TSTWPColumnCache",&,N,V_cellIDToWPColumnCache
T@"TSTDupContentCache",&,N,V_dupContentCache
T@"TSTWPColumnCache",&,N,V_tempWPColumnCache
T@"TSTWidthHeightCache",&,N,V_widthHeightCache
T@"TSTHiddenRowsColumnsCache",&,N,V_hiddenRowsColumnsCache
T@"TSTFontInfoCache",&,N,V_fontInfoCache
T@"TSUWidthLimitedQueue",&,N,V_layoutValidateQueue
T@"TSUWidthLimitedQueue",&,N,V_layoutMeasureQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_layoutConcurrentQueue
T@"TSTStrokeDefaultVendor",&,N,V_strokesDefaultVendor
T@"NSPointerArray",&,N,V_topRowStrokes
T@"NSPointerArray",&,N,V_bottomRowStrokes
T@"NSPointerArray",&,N,V_leftColumnStrokes
T@"NSPointerArray",&,N,V_rightColumnStrokes
T@"TSTConcurrentMutableIndexSet",&,N,V_spillStrokeColumns
T@"TSTCellRegion",&,N,V_cellRegionForClearedMergeStrokes
T@"TSTStrokeWidthCache",&,N,V_columnToStrokeWidthCache
T@"TSTStrokeWidthCache",&,N,V_rowToStrokeHeightCache
T@"TSTRWRetainedPointerKeyDictionary",&,N,V_paraStyleToHeightCache
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_tableNameBounds
Td,N,V_cachedTableNameHeight
TB,N,V_tableNameHeightValid
T@"NSMutableDictionary",R,N,V_tableNameHeightCache
TI,N,V_cachedNumberOfColumns
TI,N,V_cachedNumberOfRows
TI,N,V_cachedNumberOfHeaderColumns
TI,N,V_cachedNumberOfHeaderRows
TI,N,V_cachedNumberOfGrandTotalColumns
TI,N,V_cachedNumberOfFooterRows
TI,N,V_cachedNumberOfFooterOrGrandTotalRows
TQ,N,V_cachedMaxNumberOfColumns
TQ,N,V_cachedMaxNumberOfRows
TB,N,V_bandedFillIsValid
TB,N,V_useBandedFill
T@"TSDFill",&,N,V_bandedFillObject
Ti,N,V_tableRowsBehavior
TB,N,V_tableDefaultFontHeightsAreValid
T@"NSMutableSet",&,N,V_contentReadingThreads
TB,N,V_emptyFilteredTable
T@"NSMutableArray",&,N,V_changeDescriptors
TB,N,V_isGrouped
inDynamicLayoutMode
TB,N,GisInDynamicLayoutMode,V_inDynamicLayoutMode
T@"NSCountedSet",&,N,V_dynamicLayoutParticipants
T@"TSTLayout",&,N,V_dynamicLayout
Td,N,V_dynamicAddOrRemoveColumnElementSize
Td,N,V_dynamicAddOrRemoveRowElementSize
TB,N,V_dynamicBandedFill
TB,N,V_dynamicBandedFillSetting
Ti,N,V_dynamicColumnAdjustment
Td,N,V_dynamicColumnTabSize
T@"<TSTLayoutDynamicContentProtocol>",&,N,V_dynamicContentDelegate
T@"TSUColor",&,N,V_dynamicFontColor
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_dynamicFontColorCellRange
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_dynamicHidingContent
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_dynamicHidingRowsCols
Tq,N,V_dynamicHidingRowsColsDirection
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_dynamicHidingText
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_dynamicRemovingText
T@"TSDInfoGeometry",&,N,V_dynamicInfoGeometry
TB,N,V_dynamicRepressFrozenHeaderRows
TB,N,V_dynamicRepressFrozenHeaderColumns
T@"TSTLayoutDynamicResizeInfo",&,N,V_dynamicResizeInfo
TB,N,V_dynamicResizingColumns
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_dynamicResizingColumnRange
Td,N,V_dynamicResizingColumnAdjustment
TB,N,V_dynamicResizingRows
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_dynamicResizingRowRange
Td,N,V_dynamicResizingRowAdjustment
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_dynamicRevealingRowsCols
Tq,N,V_dynamicRevealingRowsColsDirection
Ti,N,V_dynamicRowAdjustment
Td,N,V_dynamicRowTabSize
T@"TSTCellSelection",&,N,V_dynamicSelection
Td,N,V_dynamicTableNameResize
T{TSUCellCoord=ISBB},N,V_dynamicSuppressingConditionalStylesCellID
T@"<TSTLayoutDynamicCellFillProtocol>",&,N,V_dynamicCellFillDelegate
T@"TSWPColumnStyle",R,N,V_defaultColumnStyle
T@"TSTTextEngineDelegate",&,N,V_tableNameTextEngineDelegate
T@"NSPointerArray",&,N,V_styleProviderStack
T@"NSPointerArray",&,N,V_fixedColumnWidthStack
T@"TSKChangeNotifier",W,N,V_changeNotifier
TI,N,V_maxConcurrentTasks
TI,N,V_numCellsPerTask
Ti,N,V_tableEnvironment
TB,N,V_dynamicRepResize
TB,N,V_dynamicRepResizeSessionInProgress
Td,N,V_dynamicWidthResize
Td,N,V_dynamicHeightResize
T@"TSDLayoutGeometry",C,N,V_dynamicSavedLayoutGeometry
Td,R,N,V_dynamicFooterHeight
T@"TSTMergeRangeSortedSet",&,N,V_mergeRangesForLayoutPass
TB,N,V_processHiddenRowsForExport
T@"<TSWPStyleProviding>",R,N,V_styleProvidingSource
initWithRange:hintId:partitionPosition:maximumSize:effectiveSize:layout:validity:horizontal:
indexForSelection:
selectionAtIndex:
cellSelection
mostSpecificSelectionOfClass:
setPartitioningPass:
horizontal
archivedHintClass
overlapsWithSelectionPath:
copyForArchiving
firstChildHint
lastChildHint
isFirstHint
effectiveSize
T@"<TSDHint>",R,N
T#,R,N
partitioningPass
setEffectiveSize:
setHorizontal:
_horizontal
_partitionPosition
_cacheHintID
_partitioningPass
_layout
_effectiveSize
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_cellRange
T{TSUCellCoord=ISBB},N,V_cacheHintID
T@"NSNumber",&,N,V_partitioningPass
TI,N,V_partitionPosition
T{CGSize=dd},N,V_maximumSize
T{CGSize=dd},N,V_effectiveSize
T@"TSTLayout",W,N,V_layout
TB,N,V_horizontal
initWithContext:hint:
hint
setHint:
T@"<TSDHint>",&,N
mHint
T@"TSTLayoutHint",&,N,VmHint
propertySetByAddingProperties:
containsAnyPropertyInProperties:
repairOrReplaceErrantStyle:
propertyMapWithProperties:
setBoxedObject:forProperty:
enumeratePropertiesAndObjectsUsingBlock:
setInfoGeometry:
makeObjectsPerformSelector:
scaledLayout
validateScaledLayout
caption
calculateCellRangeForNextPartition:nextPartitionRange:additionalHeightForCaption:availableSizeRemaining:previousHint:
participatesInLastRowHeight
p_didFinishPartitioningHint:horizontally:
rootLayout
infoGeometry
measureCellRangeForNextPartitionOfSize:previousHint:horizontally:
partitioningPassForHint:withPreviousHint:
nextHintForSize:parentLayout:previousHint:horizontally:outFinished:
layoutForHint:parentLayout:
hintCacheKeyForHint:
shouldReuseLayout:forSize:parentLayout:hint:
invalidateTextLayout
p_flushCacheAfterPartitioningFinished:lastHint:horizontally:
partitioningPassForFirstPartitionSize:
hintCacheKeyForPartitioningPass:andHintID:
nextLayoutForSize:parentLayout:previousHint:horizontally:outFinished:
didHint:syncWithNextHint:horizontally:
hintForLayout:
setLayoutPartititionsRightToLeft:contentPartitionsRightToLeft:
totalPartitionFrame
inlineTableWidth
mTableInfo
mInfoGeometry
mTableIsLTR
mLayoutIsLTR
mFirstPartitionWidth
mScaleToFit
mScaledLayout
mHintMatricesByCanvas
mPartitioningPassCache
T@"TSTLayout",R,N
T@"TSTTableInfo",R,N,VmTableInfo
Td,R,N,VmFirstPartitionWidth
T{CGSize=dd},N,VmScaleToFit
T@"TSDInfoGeometry",C,N,VmInfoGeometry
getSpaceContainingCellID:
setSpace:
_space
_frozenHeaderColumnsSpace
_frozenHeaderRowsSpace
_frozenHeaderCornerSpace
_repeatHeaderColumnsSpace
_repeatHeaderRowsSpace
_repeatHeaderCornerSpace
T@"TSTLayoutSpace",&,N,V_space
T@"TSTLayoutSpace",&,N,V_frozenHeaderColumnsSpace
T@"TSTLayoutSpace",&,N,V_frozenHeaderRowsSpace
T@"TSTLayoutSpace",&,N,V_frozenHeaderCornerSpace
T@"TSTLayoutSpace",&,N,V_repeatHeaderColumnsSpace
T@"TSTLayoutSpace",&,N,V_repeatHeaderRowsSpace
T@"TSTLayoutSpace",&,N,V_repeatHeaderCornerSpace
byteSizeForArchiving
setKeyRange:
loadObjectFromArchive:listType:unarchiver:completion:
setKeys:
_estimatedByteSize
_keys
_keyRange
T@"NSMutableIndexSet",&,N,V_keys
Ti,R,N,V_listType
TQ,R,N,V_estimatedByteSize
T{_NSRange=QQ},N,V_keyRange
initWithTableInfo:tableModel:region:forcingRegion:clampingRect:flags:searchFlags:
enumerateConcurrentlyUsingChunkBeginBlock:perDispatchThreadBlock:concurrentBlock:finalBlock:
p_enumerateConcurrentlyUsingChunkBeginBlock:perDispatchThreadBlock:concurrentBlock:finalBlock:
flags
iterateCellsInRegion:flags:searchFlags:clampingRange:usingBlock:
initWithTableInfo:region:clampingViewRect:flags:searchFlags:
initWithTableInfo:region:forcingRegion:flags:searchFlags:
cellsPerSubRegion
setCellsPerSubRegion:
forcingRegion
setForcingRegion:
arrayOfChunkRocks
setArrayOfChunkRocks:
setFlags:
searchFlags
setSearchFlags:
clampingRect
setClampingRect:
_cellsPerSubRegion
_forcingRegion
_arrayOfChunkRocks
_flags
_searchFlags
_clampingRect
T@"TSTCellRegion",&,N,V_forcingRegion
T@"NSPointerArray",&,N,V_arrayOfChunkRocks
TQ,N,V_flags
TQ,N,V_searchFlags
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_clampingRect
TQ,N,V_cellsPerSubRegion
initWithFirst:second:third:fourth:
setThird:
fourth
setFourth:
_first
_second
_third
_fourth
T@,&,N,V_first
T@,&,N,V_second
T@,&,N,V_third
T@,&,N,V_fourth
stringForMergeType:
setUidRanges:
setMergeFormulas:
setMergeFormulaIndexes:
initWithType:uidRange:
mergeActionForGrowingRange:coveringRange:inTable:
copyByRemappingUids:rowMap:ownerMap:clearIfMissing:
cellUIDRangeFromMergeFormula:calcEngine:
mergeActionForRemovingRanges:inTable:
mergeActionForInsertingRange:inTable:
initWithType:
hasMultiRowMerge
shrinkAction
actionByExpandingWithAction:
_uidRanges
_mergeFormulas
_mergeFormulaIndexes
Ti,N,V_type
Tr^v,N,V_uidRanges
Tr^v,N,V_mergeFormulas
Tr^v,N,V_mergeFormulaIndexes
compress
p_compressUID:index:UIDtoIndexMap:UIDs:compressedIndexes:lastSameUIDIndex:
compressUIDIndexListFrom:withUIDCount:to:
pruneCellUIDListAgainstTable:behavior:usingBlock:
cellUIDListFromRange:
compressedRowUIDs
compressedColumnUIDs
compressedRowIndexes
compressedColumnIndexes
setCompressedColumnIndexes:
computeValidCount
addCellUIDRanges:
pruneCellUIDListAgainstTable:behavior:
queue
_rowIdList
_columnIdList
_rowUIDIndexList
_columnUIDIndexList
_uncompressedCellUIDs
_compressedSize
_queue
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
TQ,R,N,V_compressedSize
p_nextCellRefIdWithUIDIndexList:UIDs:index:remainDup:lastDiffPos:recentResults:
_nextCellUID_NoDispatch
setCellUIDList:
rowIndex
setRowIndex:
columnIndex
setColumnIndex:
rowRemainDup
setRowRemainDup:
columnRemainDup
setColumnRemainDup:
lastRowDiffPos
setLastRowDiffPos:
lastColumnDiffPos
setLastColumnDiffPos:
cellUID
setCellUID:
_recentRowResults
_recentColumnResults
_cellUIDList
_rowIndex
_columnIndex
_rowRemainDup
_columnRemainDup
_lastRowDiffPos
_lastColumnDiffPos
_cellUID
T@"TSTCellUIDList",&,N,V_cellUIDList
TQ,N,V_index
TQ,N,V_rowIndex
TQ,N,V_columnIndex
TQ,N,V_rowRemainDup
TQ,N,V_columnRemainDup
TQ,N,V_lastRowDiffPos
TQ,N,V_lastColumnDiffPos
T{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}},N,V_cellUID
setNotifyType:
rowUID
setRowUID:
_notifyType
_rowUID
Ti,N,V_notifyType
T@"TSTGroupNode",&,N,V_groupNode
T{TSKUIDStruct=QQ},N,V_rowUID
initWithStartingTileID:
_tileForLazyReference:
referenceForObject:
startingTileID
setStartingTileID:
_tiles
_references
_startingTileID
TQ,N,V_startingTileID
_mergedRects
Tr^v,R,N,V_mergedRects
initWithTableUID:beforeViewColumnRowUIDMap:beforeRewriteMap:
beforeRewriteMap
setBeforeRewriteMap:
beforeColumnRowUIDMap
setBeforeColumnRowUIDMap:
afterRewriteMap
setAfterRewriteMap:
_beforeRewriteMap
_beforeColumnRowUIDMap
_afterRewriteMap
T@"TSTHierarchicalCellDiffMap",&,N,V_beforeRewriteMap
T@"TSTColumnRowUIDMapper",&,N,V_beforeColumnRowUIDMap
T@"TSTHierarchicalCellDiffMap",&,N,V_afterRewriteMap
initWithTableModel:ownerUID:annotations:formulaStore:
addAnnotation:withFormulaObject:atIndex:
annotations
hasObjectForKey:
indexOfAnnotation:
removeAnnotation:
enumerateAnnotationsWithBlock:
_indexesForRange:startingOnly:
_enumerateAnnotationsAndFormulasWithIndexes:block:
_indexesContainedByRegion:
_annotationsForIndexes:
_indexesForRows:
_indexesIntersectingButNotContainingBaseCellRegion:
formulaCoordsReferringToRange:fromOwner:
containsModelCellRect:
_enumerateIndexesIntersectingRegion:block:
requiresDocumentReadVersion:writeVersion:featureIdentifier:
addAnnotation:withFormula:atIndex:
removeAllAnnotations
removeAnnotationAtIndex:
enumerateAnnotationsAndFormulasInRange:withBlock:
containsAnnotation:
annotationsStartingInRange:
_annotationsInRows:
_annotationsIntersectingButNotContainingBaseCellRegion:
setAnnotations:
_annotations
T@"TSCECalculationEngine",R,W,N,V_calculationEngine
T@"TSUSparseArray",&,N,V_annotations
initWithFlags:sortingAggregateRuleUid:
isNotEmpty
_sortingAggregateRuleUid
Tq,R,N,V_flags
T{TSKUIDStruct=QQ},R,N,V_sortingAggregateRuleUid
setPivotOptions:forUid:
prunedCopyWithUids:
_optionsForUidMap
p_resetToRows:andNumColumns:
p_setFittingHeightsFromCollectionWithLock:
numberWithUnsignedShort:
enumerateMappingFollowingSwapsUsingBlock:
willModifyIfPossible:
hasBeforeAfterCounts
p_deleteRowsStartingWith:upToRow:
enumerateRowRangesInReverseUsingBlock:
p_insertRows:atRow:
p_deleteColumnsStartingWith:upToColumn:
enumerateColumnRangesInReverseUsingBlock:
p_insertColumns:atColumn:
p_moveRowsUsingShuffleMapping:
applyMappingToIndexSet:
p_moveRowsFrom:toRow:
p_moveColumnsFrom:toColumn:
p_resetFittingHeightsForRange:
canModify
initWithNumRows:andNumColumns:
setFittingHeightsFromCollection:
needsToBeArchived
setNeedsToBeArchived:
_rowHeights
_columnModelWidths
_needsToBeArchived
TB,N,V_needsToBeArchived
initWithChangeDescriptorType:cellRegion:cellID:strokeRegion:referenceIdentifiers:shuffleMapping:annotations:
initWithChangeDescriptorType:cellRegion:cellID:strokeRegion:referenceIdentifiers:shuffleMapping:
setBeforeCountValue:
setAfterCountValue:
changeDescriptorWithType:cellID:cellRegion:strokeRegion:
changeDescriptorWithType:cellRegion:strokeRegion:beforeCount:afterCount:
changeDescriptorWithType:cellRegion:beforeCount:afterCount:
changeDescriptorWithType:
changeDescriptorWithType:cellID:cellRange:
changeDescriptorWithType:cellID:cellRange:strokeRange:
changeDescriptorWithType:cellID:strokeRange:
changeDescriptorWithType:strokeRange:
changeDescriptorWithType:referenceIdentifiers:
changeDescriptorWithType:shuffleMapping:
changeDescriptorWithAnnotationsRemovedForMerge:
enumerateChangeRecords:withType:block:
markAsProcessed
strokeRange
referenceIdentifiers
setReferenceIdentifiers:
setChangeDescriptor:
setCellRegion:
setStrokeRegion:
setShuffleMapping:
beforeCountValue
afterCountValue
_processedByLayoutEngine
_changeDescriptor
_referenceIdentifiers
_cellRegion
_strokeRegion
_shuffleMapping
_beforeCountValue
_afterCountValue
Ti,N,V_changeDescriptor
T@"TSTCellRegion",&,N,V_cellRegion
T@"TSTCellRegion",&,N,V_strokeRegion
T@"NSHashTable",&,N,V_referenceIdentifiers
T@"TSKShuffleMapping",&,N,V_shuffleMapping
T@"NSSet",&,N,V_annotations
TQ,N,V_beforeCountValue
TQ,N,V_afterCountValue
TB,N,V_processedByLayoutEngine
initWithTopInset:leftInset:bottomInset:rightInset:
forceWesternLineBreaking
T@"<TSWPStyleProviding>",R,W,N
mPadding
mVerticalAlignment
mMaxWidthForChildren
mLocale
mShouldHyphenate
mStyleProvidingSource
Td,N,VmMaxWidthForChildren
T@"<TSWPStyleProviding>",W,N,VmStyleProvidingSource
T@"TSULocale",R,N,VmLocale
TB,R,N,VmShouldHyphenate
ruleWithBaseIndex:direction:
isEqualToArray:
predicateWithBlock:
filteredArrayUsingPredicate:
sortOrderWithBaseColumn:direction:type:
baseColumnIndices
sortOrderByChangingTypeTo:
sortOrderByAddingRule:
sortOrderByRemovingRuleAtIndex:
sortOrderByReplacingRuleAtIndex:withRule:
sortOrderByReplacingRulesWithRules:
sortOrderByRemovingBaseColumnIndices:
containsAnyRulesInBaseColumns:
cachedIndexes
setCachedIndexes:
_cachedIndexes
T@"NSIndexSet",&,N,V_cachedIndexes
T@"NSArray",R,N,V_rules
Ti,R,N,V_type
cellStatesToLayout
layoutMergeRange
inDynamicLayout
cellPropsRowHeight
addEntriesFromDictionary:
initWithLayoutTask:
_cellStatesToLayout
T@"TSTLayoutEngine",R,W,N,V_layoutEngine
T@"NSMutableArray",R,N,V_cellStatesToLayout
reapAccumulatedCellRegionWithTable:
_rowUIDToColumnUIDSetMap
_sem
forDrawing
_cellPropsRowHeight
_cellWraps
_needWPColumn
_shouldFastPathMeasureFitWidth
_forDrawing
_inDynamicLayout
_verticalAlignment
_layoutCacheFlags
_modelCellID
_cellContents
_maxWidthForChildren
_keyVal
_wpColumn
_pageNumber
_pageCount
_layoutMergeRange
_minSize
_maxSize
_sizeOfText
_paddingInsets
T{TSUCellCoord=ISBB},N,V_modelCellID
T@"TSTCell",C,N,V_cell
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_layoutMergeRange
T@,&,N,V_cellContents
T{CGSize=dd},N,V_minSize
T{CGSize=dd},N,V_maxSize
Td,N,V_maxWidthForChildren
T{UIEdgeInsets=dddd},N,V_paddingInsets
Ti,N,V_verticalAlignment
TB,N,V_cellPropsRowHeight
TB,N,V_cellWraps
TB,N,V_needWPColumn
TB,N,V_shouldFastPathMeasureFitWidth
TB,N,V_forDrawing
TB,N,V_inDynamicLayout
Ti,N,V_layoutCacheFlags
T{CGSize=dd},N,V_sizeOfText
T@"TSTLayoutContentCachedKey",&,N,V_keyVal
T@"TSWPColumn",&,N,V_wpColumn
TQ,N,V_pageNumber
TQ,N,V_pageCount
setExpressionNode:
setCachedImage:
copyIntoContext:
requestRedraw
cachedImage
isActive
setActive:
isSelected
setSelected:
isHighlighted
setHighlighted:
neverShowsMenu
cachedImageScreenScale
setCachedImageScreenScale:
mExpressionNode
mActive
mSelected
mHighlighted
mNeverShowsMenu
mTextSize
mMenuRect
mCachedImage
mCachedImageScreenScale
mInInvalidate
T@"TSTExpressionNode",&,N,VmExpressionNode
active
TB,N,GisActive,VmActive
selected
TB,N,GisSelected,VmSelected
highlighted
TB,N,GisHighlighted,VmHighlighted
TB,N,GneverShowsMenu,VmNeverShowsMenu
T^{CGImage=},N
Td,N,VmCachedImageScreenScale
initWithContext:tableInfo:rowUids:columnUids:
_groupBy:
_numberOfLevels:
orderedUidsFromUids:forDimension:
orderForDimension:
_maxLevel:
initWithTableInfo:rowUids:columnUids:
copyWithContext:tableInfo:
targetGroupFromIndex:minSourceLevel:templateUID:forDimension:
minimumCategoryLevelInRange:forDimension:
insertUids:beforeUid:forDimension:
removeUids:forDimension:
groupUidsGivenUids:selectedLevels:forDimension:
uidMap
setUidMap:
isRowOrderTemporary
setIsRowOrderTemporary:
isColumnOrderTemporary
setIsColumnOrderTemporary:
_isRowOrderTemporary
_isColumnOrderTemporary
_uidMap
T@"TSTColumnRowUIDMap",&,V_uidMap
TB,V_isRowOrderTemporary
TB,V_isColumnOrderTemporary
T@"TSTGroupBy",R,&,V_groupBy
p_removeCanvasReference
p_createCanvasReference
initWithContext:completionText:
setCompletionText:
setPrefixRange:
setReferenceColor:
setEditingReferenceNode:
tokenText
makeTokenReflectChoice:
completionText
prefixRange
renderAsTokenType
editingReferenceNode
canvasReferenceProvider
setCanvasReferenceProvider:
_renderAsTokenType
_completionText
_editingReferenceNode
_referenceColor
_canvasReferenceProvider
_prefixRange
T@"NSString",&,N,V_completionText
T{_NSRange=QQ},N,V_prefixRange
Ti,R,N,V_renderAsTokenType
T@"TSTReferenceNode",&,N,V_editingReferenceNode
T@"TSUColor",&,N,V_referenceColor
T@"<TSTCanvasReferenceProvider>",W,N,V_canvasReferenceProvider
initWithStroke:range:order:andPosition:
tokenWithStroke:range:order:andPosition:
_position
TQ,N,V_position
contextForTransientObjects
p_mergeStrokeRunsAtPosition:
p_appendStroke:inRange:order:
p_setStroke:inRange:order:
p_invalidateRange:
p_insertSpaceAtRange:
p_removeRange:
p_flattenStrokeOrder
_strokeRuns
_columnOrRowIndex
TI,N,V_columnOrRowIndex
TI,D,N
isEqualToPropertyMap:
initWithStyle:andPropertyMap:
setStyle:
setPropertyMap:
_style
_propertyMap
T@"TSSStyle",&,N,V_style
T@"TSSPropertyMap",&,N,V_propertyMap
mapTableWithKeyOptions:valueOptions:
initWithStylesheet:
setStylesheet:
repairOrReplaceMap
setRepairOrReplaceMap:
variationMap
setVariationMap:
_repairOrReplaceLock
_variationLock
_stylesheet
_repairOrReplaceMap
_variationMap
T@"TSSStylesheet",&,N,V_stylesheet
T@"NSMapTable",&,N,V_repairOrReplaceMap
T@"NSMapTable",&,N,V_variationMap
addCellRange:
p_NumberOfColumnBuilds:
p_NumberOfRowBuilds:
p_NumberOfCellBuilds:
p_stageCountForProvider:withAnimationKind:
enabled
drawsBlackAndWhite
drawCellContent
newAnimationWithLayout:andDeliveryStyle:
newAnimationWithLayout:andCellRange:
deliveryStyleSupportedForExport:
setStage:andFinal:
cellRangeCount
clearCellRanges
drawTableName
drawTableBackground
drawCellBackground
clipStrokes
drawStrokes
isHidingContentOfCellID:
stageCount
stage
final
showsTableChrome
setShowsTableChrome:
showsOverlayLayers
setShowsOverlayLayers:
expandBackgroundFill
setExpandBackgroundFill:
setDrawsBlackAndWhite:
mKind
mCellRanges
mCellRangeCount
mStageCount
mStage
mFinal
mByColumn
mByRow
mByCell
mByContent
mByCellRange
mByMissingCellRange
mReverse
mShowsTableChrome
mShowsOverlayLayers
mExpandBackgroundFill
mDrawsBlackAndWhite
mLayout
T@"TSTLayout",W,N,VmLayout
TQ,R,VmStageCount
TQ,R,VmStage
TB,R,VmFinal
TB,VmShowsTableChrome
TB,VmShowsOverlayLayers
TB,VmExpandBackgroundFill
TB,VmDrawsBlackAndWhite
heightForString:textMeasurerBundle:width:outFitWidth:
widthForString:textMeasurerBundle:
initWithTextMeasurerBundle:
textMeasurerBundle
setTextMeasurerBundle:
_dupContentEntryToHeightCache
_dupContentEntryToWidthCache
_textMeasurerBundle
T@"TSWPTextMeasurerBundle",&,N,V_textMeasurerBundle
p_didReceiveMemoryWarning:
sharedApplication
addObserver:selector:name:object:
p_didEnterBackground:
canQuicklyMeasureParagraphStyle:
textMeasurerBundleForParagraphStyle:
fontInfoForTextStyle:
canQuicklyMeasureString:textMeasurerBundle:
cache
setCache:
propertyMapToTextStyleMap
setPropertyMapToTextStyleMap:
_resolvedTextStyleLock
_cache
_propertyMapToTextStyleMap
T@"NSMapTable",&,N,V_cache
T@"NSMapTable",&,N,V_propertyMapToTextStyleMap
wordFragmentsList
headerCoords
addHeaderWordFragments:atCoord:
_wordFragmentsList
_headerCoords
sortedArrayUsingSelector:
unpackEntryAfterUnarchive:
addChangedTile:
getNextPrecedentCoord:
setEntry:forPrecedentCoord:
initWithHeaderNameMgr:context:
lastFragment
setLastFragment:
firstFragment
setFirstFragment:
medianStringFromArray:
fragmentEntryForString:createIfMissing:
splitTile
_tileLock
_firstFragment
_lastFragment
_nameFragmentToEntry
_headerNameMgr
T@"NSString",&,N,V_firstFragment
T@"NSString",&,N,V_lastFragment
namePrefixIndex
foldName:
wordFragmentsFromString:savePreserveFlags:
includesPrefixes
initWithHeaderNameMgr:limitToTableUID:
loadSubsetWithExactMatches:prefixMatches:
limitedToTableUID
setIncludesPrefixes:
originalFullReferenceString
_hnm
_limitedToTableUID
_includesPrefixes
_stringsInHeaderCells
_prefixStringsInHeaderCells
_originalFullReferenceString
T{TSKUIDStruct=QQ},R,N,V_limitedToTableUID
TB,N,V_includesPrefixes
T@"NSString",R,N,V_originalFullReferenceString
setup
usedPrecedentCoord:
waitForQueueToDrain
isRecalculationRunning
willModifyWithOptions:
setForceSplitting:
splitRefPath:
trimmedStringWithPreserveFlag:
perTableEntryForTable:createIfMissing:
updateTrackedHeaders:checkForEmptyHeaders:
hasDisallowedHeaderIndexingForTableUID:
dirtySheetTableNameVolatileCells
fragmentEntryForNameFragmentPrecedent:
insertName:
findTileForString:findClosest:
findTileForString:findClosest:foundAtOffset:
handleFullTile:
p_updateWithWordFragments:atCellCoord:tableUID:
p_updateText:atCellCoord:tableUID:
anyHeaderNameChangedPrecedentForTableUID:
insertFoldedName:
removeName:
markCoordsDirty:inOwner:
updateText:atCellCoord:tableUID:
scalarValueFromCoord:permitAccessInsideMergeRegions:fetchRichTextAttributesIfPlainText:
compare:options:
refParser
p_willApplyCell:baseCellCoord:tableUID:
tileForEntry:
columnUIDForViewColumnIndex:
updateWithIndexingChunks:
sheetTableNamePrecedentForTableUID:
enumerateNamesMatchingPrefix:block:
isClosing
p_processWorkForTable:
initWithContext:calcEngine:
setNRM_formulaOwnerUID:
endTrackingNamesInTable:
updateTrackedHeadersForDocumentLocaleChange:
nameFragmentPrecedentsForReferenceString:
baseHeaderColumnsForCell:
baseHeaderRowsForCell:
numberOfTiles
headerNameMgrQueue
clearTextAtCellCoord:tableUID:
_weakCalcEngine
_headerNameMgrQueue
_nextPrecedentCoord
_allHeaderPerTablesPrecedent
_needsTileSplittingPrecedent
_nameFragmentTiles
_fragPrecedentToEntry
_fragPrecedentsUsedByCellRef
_perTableInfo
_headerPerTablePrecedentToTableUID
_namePrefixIndex
_tilesToConsiderSplitting
_isClosing
_nrm_ownerUID
_whitespaceToBreakAt
initWithContext:cellDiffArray:cellUIDList:uidBased:
initWithArray:context:
p_scanCellDiffArrayForCellBorderChanges:
p_scanCellDiffArrayForSuppressCustomFormatHandlingProperty:
addCellDiff:andCellUID:avoidCopy:
addCellDiff:andCellID:avoidCopy:
cellDiffArray
containsSuppressCustomFormatHandlingProperty
p_scanNSArrayOfDiffsForCellBorderChanges:
p_scanNSArrayOfDiffsForSuppressCustomFormatHandlingProperty:
addCellDiff:andCellUID:
enumerateElementsUsingBlock:
addCellDiff:andCellID:
enumerateCellIDElementsUsingBlock:
pruneCellDiffMapAgainstTable:behavior:usingBlock:
setCellDiffArray:
setContainsCellBorderChanges:
initWithContext:cellDiff:cellUIDList:
addCellDiffMap:
addCellDiffs:atCellUIDs:
appendCellDiffMap:
pruneCellDiffMapAgainstTable:behavior:
uuidBasedCellDiffMapByTableInfo:
cellDiffMapByIntersectingUIDs:inRows:
cellDiffMapByRemovingRows:
cellDiffMapByRemovingColumns:
setContainsSuppressCustomFormatHandlingProperty:
_containsSuppressCustomFormatHandlingProperty
_cellDiffArray
T@"TSTCellDiffArray",&,N,V_cellDiffArray
TB,N,V_containsCellBorderChanges
TB,N,V_containsSuppressCustomFormatHandlingProperty
initWithBaseIndex:direction:
ruleByChangingBaseIndexTo:
_baseIndex
T{TSUModelColumnOrRowIndex=I},R,N,V_baseIndex
Ti,R,N,V_direction
ruleWithViewIndex:direction:
viewIndex
_viewIndex
T{TSUViewColumnOrRowIndex=I},R,N,V_viewIndex
combinedCanonicalKeysString
initWithTSCEValues:locale:
_groupValues
_groupValueUid
_combinedCanonicalKeysString
p_iterateCellsAndTerminateWithIterator:usingBlock:
cellIteratorWithRegion:flags:searchFlags:clampingRange:
frameWithViewScale:contentFrame:checked:outCheckboxImage:outCheckboxSize:
imageForScale:checked:outDrawingScale:
CGImageForSize:inContext:orContentsScaleProvider:
frameWithViewScale:contentFrame:
renderCheckbox:viewScale:intoContext:rect:color:
_set
height
isEqualToLayoutContentCachedKey:
descriptionWithObject:class:
addField:value:
addField:format:
descriptionString
mString
mWidth
mHeight
mParagraphStyle
mCellWraps
mValueType
mPaddingInsets
mWritingDirection
mNaturalAlignment
T@"NSString",R,N,VmString
Td,R,N,VmWidth
Td,R,N,VmHeight
T@"TSWPParagraphStyle",R,N,VmParagraphStyle
TB,R,N,VmCellWraps
TC,R,N,VmValueType
T{UIEdgeInsets=dddd},R,N,VmPaddingInsets
Ti,R,N,VmVerticalAlignment
Ti,R,N,VmWritingDirection
Ti,R,N,VmNaturalAlignment
T@"<TSWPStyleProviding>",R,N,VmStyleProvidingSource
p_captureRowColumnInformation:columnRegion:rowRegion:
initWithLayoutEngine:columnRegion:rowRegion:
numberOfIntersectingRows
applyResizeHeightFactor:
applyResizeWidthFactor:
enumerateRowHeightsUsingBlock:
enumerateColumnWidthsUsingBlock:
getMinimumRowHeight:
getMinimumColumnWidth:
initWithLayoutEngine:columnRegion:
initWithLayoutEngine:rowRegion:
initWithDynamicResizeInfo:
getRowInitialHeight:
getColumnInitialWidth:
getRowHeightResize:
getColumnWidthResize:
captureNewMinimumRowHeights:
totalCapturedRowHeights
totalCapturedColumnWidths
totalCurrentRowHeights
totalCurrentColumnWidths
totalMinimumRowHeights
totalMinimumColumnWidths
applyRowTotalHeight:
applyColumnTotalWidth:
capturedTableSize
mValid
mTableRowsBehavior
mRowRegion
mStartRowIndex
mNumberOfRows
mNumberOfResizableRows
mCapturedRowHeights
mCurrentRowHeights
mMinimumRowHeights
mCapturedRowHeightTotal
mColumnRegion
mStartColumnIndex
mNumberOfColumns
mNumberOfResizableColumns
mCapturedColumnWidths
mCurrentColumnWidths
mMinimumColumnWidths
mCapturedColumnWidthTotal
isConnected
_originalUIDMap
_originalVersionCounter
_copiedUIDMap
formulaSpecForStorageRef:
setBaseRow:
setBaseTile:
tempSummaryCell
checkCell:searchFlags:
i_tileStartingAtOrBeforeRowIndex:outTileRange:
intersectsRow:
searchMask
setSearchMask:
baseDataStore
curRowIndex
setCurRowIndex:
isSummaryRow
setIsSummaryRow:
isLabelRow
setIsLabelRow:
setUuid:
baseRowIndex
setBaseRowIndex:
baseTile
baseTileRange
setBaseTileRange:
baseRow
terminated
setTerminated:
populatedColumnsForGroupLevel1
setPopulatedColumnsForGroupLevel1:
populatedColumnsForGroupLevel2
setPopulatedColumnsForGroupLevel2:
populatedColumnsForGroupLevel3
setPopulatedColumnsForGroupLevel3:
populatedColumnsForGroupLevel4
setPopulatedColumnsForGroupLevel4:
populatedColumnsForGroupLevel5
setPopulatedColumnsForGroupLevel5:
viewColumnIndexesInCurrentRow
setViewColumnIndexesInCurrentRow:
_mapFromViewToBaseColumnInCurrentRow
_tempSummaryCell
_isSummaryRow
_isLabelRow
_terminated
_categoryColumnIndex
_curRowIndex
_baseRowIndex
_info
_searchMask
_baseDataStore
_baseMap
_viewMap
_summaryMap
_baseTile
_baseRow
_populatedColumnsForGroupLevel1
_populatedColumnsForGroupLevel2
_populatedColumnsForGroupLevel3
_populatedColumnsForGroupLevel4
_populatedColumnsForGroupLevel5
_viewColumnIndexesInCurrentRow
_uuid
_baseTileRange
T@"TSTCategoryTranslator",R,N,V_translator
T@"TSTTableDataStore",R,W,N,V_baseDataStore
T@"TSTColumnRowUIDMap",R,W,N,V_baseMap
T@"TSTColumnRowUIDMap",R,W,N,V_viewMap
T@"TSTSummaryCellVendor",R,W,N,V_summaryCellVendor
T@"TSTColumnRowUIDMap",R,W,N,V_summaryMap
TQ,N,V_searchMask
TI,N,V_curRowIndex
TS,R,N,V_categoryColumnIndex
TB,N,V_isSummaryRow
TB,N,V_isLabelRow
TC,N,V_groupLevel
T{TSKUIDStruct=QQ},N,V_uuid
TI,N,V_baseRowIndex
T@"TSTTableTile",&,N,V_baseTile
T{_NSRange=QQ},N,V_baseTileRange
T@"TSTTableTileRowInfo",&,N,V_baseRow
T@"TSTCell",R,N,V_cell
TB,N,V_terminated
T@"NSIndexSet",&,N,V_populatedColumnsForGroupLevel1
T@"NSIndexSet",&,N,V_populatedColumnsForGroupLevel2
T@"NSIndexSet",&,N,V_populatedColumnsForGroupLevel3
T@"NSIndexSet",&,N,V_populatedColumnsForGroupLevel4
T@"NSIndexSet",&,N,V_populatedColumnsForGroupLevel5
T@"NSIndexSet",&,N,V_viewColumnIndexesInCurrentRow
T@"TSTTableInfo",R,N,V_info
drawableInfo
groupByUID
resetDependenciesForCell:
UIDForIndex:isRows:
UIDsForIndexes:isRows:
mutableIndexesForUIDs:isRows:
UIDsForRange:isRows:
UIDSetForRange:isRows:
changesWithPageNumber
hyperlinkCellID
attributeArrayForKind:withCreate:
insertStorage:atCharIndex:dolcContext:undoTransaction:
variationOfCharacterStyle:paragraphStyle:propertyMap:
changesWithPageCount
setHyperlinkCellID:
nonUndoableAppendStoragePreservingEmphasis:
T{TSUCellCoord=ISBB},D,N
allCells
removeAllCells
dirtyCellCountInOwner:
summaryModelIsCleanPrecedentForTableUID:
evaluateWithContext:isInACycle:outErrorIsDueToCycle:
updateCalculatedPrecedents:forFormula:atCellRef:withState:
isAbortedError
setError:forCell:
clearErrorForCell:
applyFormulaResult:context:hasWarnings:outWriteDidBeginOrEndWithTextCell:propagateCheckboxesAndRatings:
setCell:atCellID:
Tr^{TSKUIDStruct=QQ},N,V_tableUID
Tr^{TSKUIDStruct=QQ},N,V_ownerUID
T@"TSTTableInfo",W,N
initWithContext:storage:
initWithStorage:
setStorage:
_storage
T@"TSWPStorage",&,N,V_storage
upgradingToSubOwnerUIDs
p_resolveCellUIDToVendorCellUID:
copyByRewritingGroupUid:groupByUID:
setHasCustomFormatsToPaste:
hasCustomFormatsToPaste
setTableInfoForGSSP:
runChange:withSummaryCellMap:migrationHelper:
cellUIDMap
_upgradingToSubOwnerUIDs
_hasCustomFormatsToPaste
_cellUIDMap
T^v,R,N,V_cellUIDMap
TB,N,V_hasCustomFormatsToPaste
T@"TSTTableInfo",R,W,N,V_tableInfo
TB,N,V_upgradingToSubOwnerUIDs
initWithFormulaPredicate:
initWithPredicateType:arg1:arg2:qualifier1:qualifier2:argumentCellRef:hostCell:
initRuleWhereValuesInTable:andDataList:inBaseColumn:matchCell:
copyToUidFormForHiddenRowsWithTableInfo:
copyToGeometricFormForHiddenRowsWithTableInfo:containsBadRef:
evaluateAtCellID:onOwnerUID:calcEngine:
foreachCellRef:
predArg1Type
dataList1
encodeToPrePivotArchive:archiver:
initFromPrePivotArchive:
ruleWithFormulaPredicate:
ruleWhereValuesInTable:inBaseColumn:matchCell:
copyByRewritingToUidFormWithTableInfo:
copyByRewritingToGeometricFormWithTableInfo:containsBadRef:
isUniquesOrDuplicates
setDoesNotNeedFormulaRewriteForImport
matchesRow:withFormulaTableUID:withCalculationEngine:
matchesCell:
setPredicate:
doesNotNeedFormulaRewriteForImport
setDoesNotNeedFormulaRewriteForImport:
_doesNotNeedFormulaRewriteForImport
_predicate
T@"TSTFormulaPredicate",&,N,V_predicate
TB,N,V_doesNotNeedFormulaRewriteForImport
defaultPredicateForType:argumentCellRef:hostCell:
removeRulesWithAbsoluteIndices:
predArg0
forConditionalStyle
initWithPredicateType:arg0:arg1:arg2:qualifier1:qualifier2:forConditionalStyle:
filterSetType
backwardCompatiblePrePivot
canDowngradeForPrePivotFormat
p_downgradedFilterRuleForListItem:fromPredicate:
downgradeForPrePivotFormatForLocale:
setDowngradedForPrePivot:
p_thresholdComparisonMatchesFilter:withPredicateType:
numberOfRulesInFilter:
objectsAtIndexes:
removeObjectsAtIndexes:
insertObjects:atIndexes:
p_addRules:atRuleIndices:inFilter:isNew:
replaceRuleAtAbsoluteIndex:withRule:
filterAtIndex:inTable:
baseColumnIndicesForRulesInTable:
ruleInFilter:atIndex:
canAddRules
newFilterIndex
removeRulesWithIndices:inFilter:
removeRulesForBaseColumnIndices:withTableInfo:
addRules:inFilter:
replaceRule:atRuleIndex:inFilter:
enumerateFilterIndicesInTable:usingBlock:
enumerateFiltersForColumn:withTable:usingBlock:
enumerateRulesInFilterIndex:usingBlock:
filterIndicesForBaseColumn:inTable:
firstFilterIndexForBaseColumn:inTable:
ruleIndexInFilter:matchingCell:
absoluteRuleIndicesForColumn:inTable:
viewColumnIndicesForRulesInTable:
setRules:
downgradedForPrePivot
_needsFormulaRewriteForImport
_filterOffsets
_downgradedForPrePivot
T@"NSArray",&,N,V_rules
Ti,N
TB,N,V_needsFormulaRewriteForImport
TB,N,V_downgradedForPrePivot
p_isEqualForNonFormulaItems:
predicateArg1atBaseHostCoord:calcEngine:
predicateArg2atBaseHostCoord:calcEngine:
recreateFormula
useColumnRefForArg0
initWithPredicateType:arg1:arg2:qualifier1:qualifier2:argumentCellRef:hostCell:forConditionalStyle:
initWithLiteralDateType:date1:date2:number1:number2:qualifier1:qualifier2:argumentCellRef:hostCell:forConditionalStyle:
p_creatorForPeriodBoundaryWithScale:direction:offset:argIndex:earlierBound:isCalPers:
p_populateMembersFromFormula
p_smokeTestThePredicate
p_setPredicateType:
setPredArg0:
setPredArg1:
setPredArg2:
p_setQualifier1:
p_setQualifier2:
copyToUidFormWithRewriteContext:
crossTableRefParam1
crossTableRefParam2
firstValue
p_argTypeForPredArg:argNum:calculationEngine:hostCell:
predArg1
predArg2
p_testDataTypesForArg0:arg1:arg2:predShouldReturn:
evaluateWithContext:
setArgumentAt:withPredArg:
copyByRemappingOwnerUIDs:calcEngine:badRefFound:
copyByRewritingNumberToDurationForSageImport:durationUnitLargest:
rewriteType
isMoveRewriteType:
updatedCellRefForOriginalCellRef:
initWithCalcEngine:rewriteSpec:
convertFromBaseToChromeForCategorizedTableMove:containingCell:
convertFromChromeToBaseForCategorizedTableMove:containingCell:
copyByOffsettingRelativeReferences:
qualifier2
copyByUpdatingLinkedTable:outfoundLinkedRef:
copyByUpgradingToLinkedRefForTable:hostCell:
iterateWithBlock:stop:block:
encodeToPrePivotArchive:archiver:encodingForSOS:
upgradeTopAndBottom
defaultPredicateForType:argumentCellReference:hostCell:
isThresholdNeededForType:
isEqualForInspector:atHostCoordinate:
initWithPredicateType:arg1:arg2:qualifier1:qualifier2:argumentCellReference:hostCell:forConditionalStyle:
initWithLiteralDateType:date1:date2:number1:number2:qualifier1:qualifier2:argumentCellRef:hostCell:
initWithLiteralNumberType:number1:number2:qualifier:argumentCellRef:hostCell:
initWithLiteralDurationType:duration1:durationUnits1:duration2:durationUnits2:qualifier:argumentCellRef:hostCell:
initWithLiteralTextType:string:argumentCellRef:hostCell:
copyToUidFormForConditionalStylesWithTableInfo:containingCell:preserveHostCell:
setHostCell:hostColumnUID:hostRowUID:
getPrecedents:calcEngine:hostOwnerUID:hostCellID:
predArg0Type
predArg2Type
numberParam2
stringParam1
dateTimeParam1
dateTimeParam2
durationParam1
durationParam2
copyByConvertingBaseToChrome:inOwner:inCellCoordinate:
copyByConvertingChromeToBase:inOwner:inCellCoordinate:
copyByRewritingWithSpec:inOwner:inCellCoordinate:
copyByOffsettingRelativeReferencesWithOffset:
copyByUpdatingLinkedTable:hostCell:
iterateFormulasWithContext:shouldStop:block:
expectedArgTypeForPredicateType:firstArg:
setForConditionalStyle:
_formula
_predicateType
_qualifier1
_qualifier2
_argIndex0
_argIndex1
_argIndex2
_predArg0
_predArg1
_predArg2
_forConditionalStyle
T{TSCEUidCellRef={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}{TSKUIDStruct=QQ}},N,V_hostCellRef
TC,R,N,V_predicateType
TC,R,N,V_qualifier1
TC,R,N,V_qualifier2
TB,N,V_forConditionalStyle
T@"TSTFormulaPredArg",&,N,V_predArg0
T@"TSTFormulaPredArg",&,N,V_predArg1
T@"TSTFormulaPredArg",&,N,V_predArg2
mStrokeSelection
T@"TSKSelection",&,N,VmStrokeSelection
imageNamed:
CGColor
showsCellOverflowIndicator
bezierPathWithLegacyRoundedRect:cornerRadius:
CGPath
showsCellWarningIndicator
colorWithAlphaComponent:
setBadgeType:
setFrame:
badgeType
p_drawCellCommentBadgeInContext:
p_drawCellWarningBadgeInContext:
p_drawCellErrorIndicatorInContext:
badgeWithType:color:viewScale:frame:
drawInContext:
_badgeType
_color
_frame
Ti,N,V_badgeType
T@"TSUColor",&,N,V_color
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_frame
p_calculateAncillaryInformation
p_insertRangeIntoRegion:
regionFromCellMap:withTableInfo:passingTest:
p_copy
region:subtractingRange:
region:subtractingRowIndexes:
region:subtractingColumnIndexes:
region:intersectingRange:
unionEveryRangeInRegion:withRange:
region:subtractingRegion:
region:intersectingRegion:
regionByRemovingRows:
regionByRemovingColumns:
mapIndex:
regionByAddingRows:
regionByAddingColumns:
tsu_indexSetByIntersectingWithRange:
prunedCellRegionAgainstTable:behavior:usingBlock:
numberWithBool:
p_copyFromRegion:
initWithCellRegion:
regionFromCellDiffMap:withTableInfo:
regionFromCellUIDVector:withTableInfo:
regionFromOverlappingCellRangeVector:
regionFromModelMergeList:
regionFromMergeActionArray:withTableInfo:
regionFillingColumnsFromRegion:
regionFromPropertyListRepresentation:
regionByCollapsingRangesForRemovedRows:
regionByCollapsingRangesForRemovedColumns:
regionByApplyingRowMapping:
regionUpToColumnIndex:
regionUpToColumnIndexRtoL:maxColumnIndex:
regionAfterColumnIndex:
regionAfterColumnIndexRtoL:
regionUpToRowIndex:
regionAfterRowIndex:
propertyListRepresentation
asCellCoordSet
largestRangeContainingCellID:
partiallyIntersectsCellRange:
isSingleCellWideOrHigh:
newBottomToTopIterator
enumerateColumnsInReverseUsingBlock:
enumerateRowsInReverseUsingBlock:
enumerateInDirection:usingBlock:
enumerateGridColumnsUsingBlock:
enumerateGridRowsUsingBlock:
setBoundingCellRange:
setCellCount:
setFirstCellID:
setLastCellID:
setIntersectingColumnsIndexSet:
setIntersectingRowsIndexSet:
_cellRanges
_boundingCellRange
_intersectingColumnsIndexSet
_intersectingRowsIndexSet
_firstCellID
_lastCellID
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_boundingCellRange
TQ,N,V_cellCount
T@"NSIndexSet",&,N,V_intersectingColumnsIndexSet
T@"NSIndexSet",&,N,V_intersectingRowsIndexSet
T{TSUCellCoord=ISBB},N,V_firstCellID
T{TSUCellCoord=ISBB},N,V_lastCellID
Tr^v,R,N,V_cellRanges
regionByAddingModelCellRegion:
T{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}},R,N
boundingViewCellRect
regionByAddingViewCellRect:
regionBySubtractingViewCellRect:
regionByAddingViewCellRegion:
regionBySubtractingViewCellRegion:
enumerateViewCellRectsUsingBlock:
T{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}},R,N
p_addRange:calculateAncillaryInfo:
getBytes:length:
fillCellRangeRowMajorSet:leftToRight:
mCellRangeSet
mCellID
mBoundingCellRange
fillCellRangeColMajorSet:topToBottom:
viewRowIndexForChromeRowIndex:
viewCellCoordForChromeCellCoord:
viewCellCoordForBaseCellCoord:
chromeCellCoordForViewCellCoord:
viewCellRefForBaseCellRef:
chromeCellRefForViewCellRef:
viewRangeRefForChromeRangeRef:
chromeCellRefForBaseCellRef:
viewCellRefForChromeCellRef:
baseCellRefForViewCellRef:
columnUIDsForBaseColumnIndexes:
rowUIDsForBaseRowIndexes:
columnUIDsForViewColumnIndexes:
rowUIDsForViewRowIndexes:
baseColumnIndexesForUIDs:
baseRowIndexesForUIDs:
baseColumnIndexesForViewColumnIndexes:
baseRowIndexesForViewRowIndexes:
viewColumnGridIndexesForBaseColumnGridIndexes:
baseCellCoordForChromeCellCoord:
baseRowIndexForChromeRowIndex:
baseColumnIndexForChromeColumnIndex:
chromeRowIndexForBaseRowIndex:
chromeColumnIndexForBaseColumnIndex:
chromeRowIndexesForViewRowIndexes:
chromeColumnIndexesForViewColumnIndexes:
bodyBoundingRangeForBaseLevel
metadataForRowIndex:
cellUIDforBaseCellCoord:
cellUIDForSummaryCellCoord:
baseCellRegionForUIDRange:
baseCellRegionForViewCellRect:
baseShuffleMapForViewShuffleMap:
cellAtGroupLevel:columnUID:
forceGroupingChangeReset
resetViewMapAndNotify
_baseTableModel
_coordMapper
T{TSUViewRowIndex=I},R,N
T{TSUViewColumnIndex=S},R,N
T{TSUViewRowIndex=I},N
T{TSUViewColumnIndex=S},N
T@"TSTTableModel",R,N,V_baseTableModel
T@"TSTColumnRowUIDMap",R,N
setMergedStrokes:
_mergedStrokes
T@"TSTStrokeLayerMergedStack",&,N,V_mergedStrokes
lastIdentifierComponent
fullIdentifier
lastComponentWithWhitespaceAppended
componentCount
localizedStringIsTrue:
localizedStringIsFalse:
initWithContextResolver:
identifierComponents
initWithContextResolver:components:
initWithComponents:aggregateFunction:
trimmedStringStartingAtWord:withPreserveFlags:
addIdentifierComponent:
appendToLastComponent:
_components
_aggregateFunction
T@"NSString",&,N,V_aggregateFunction
_hidingState
_numberOfCells
_size
Td,N,V_size
TC,N,V_hidingState
TI,N,V_numberOfCells
setDimensions:
T{TSCEGridDimensions=II},N,V_dimensions
T@"NSString",&,N,V_whitespaceBeforeFirstChild
T@"NSMutableArray",&,N,V_whitespaceAfterDelimiters
initWithPredicate:cellStyle:textStyle:
isEqualToStyle:ignoreObjectUUID:
conditionalStyleRuleWithRule:
isEqualForInspector:
privateCellStyle
privateTextStyle
setCellStyle:textStyle:
evaluateFormulaAtCellID:withCalcEngine:onOwnerUID:
predicateDescription
copyByUpdatingHostCellRef:
mPredicateType
T@"TSTFormulaPredicate",R,C,N
TC,R,N,VmPredicateType
T@"TSTCellStyle",R,C,N
T@"TSWPParagraphStyle",R,C,N
setAllowsMissingPropertiesWithNoParentStyleForUpgrade:
initWithConditionalStyleSet:
iterateFormulasWithContext:block:
copyByReparenting:groupByUID:rewriteContext:
copyByResolvingRelativeAncestorsWithRewriteContext:
precedentsWithCalcEngine:hostOwnerUID:hostCellID:
rulesDescription
currentRules
_conditionalStyleSetRules
T@"NSArray",R,N,V_conditionalStyleSetRules
mMutableIndexSet
formulaCoordsInRange:inOwner:
removeFormulaAtCellID:
addFormulaForConditionalStyle:atCellID:
addCellCoordinate:
checkConditionForCellID:withConditionalStyle:withIndex:
removeAllCellCoordinates
allCondStyleFormulasForTable:
changedConditionForCellID:
_cellsToInvalidate
T@"TSTTableModel",N,V_tableModel
p_applyUnifyResizeFactor:region:direction:totalOfCaptured:count:capturedArray:currentArray:minimumArray:
p_applyUnifyFixedSize:region:direction:count:currentArray:minimumArray:
applyFixedHeight:
applyFixedWidth:
targetWidth
targetHeight
mTargetWidth
mTargetHeight
Td,R,N,VmTargetWidth
Td,R,N,VmTargetHeight
coordMapperForTableUID:calcEngine:
srcCoordMapper
fillInRowGapsUsingIndexes:
fillInColumnGapsUsingIndexes:
relativeBoundingRangeWithContainingCell:
relativeColumns
relativeRows
tableRangeForTable:calcEngine:
intersectWithCellRectIgnoringSpanning:
p_applyAccordionResizeFactor:region:direction:totalOfCaptured:count:capturedArray:currentArray:minimumArray:
heightFactor
widthFactor
_heightFactor
_widthFactor
Td,R,N,V_heightFactor
Td,R,N,V_widthFactor
orderedRowUidsWithLabels
rowOrder
categoryColumnUID
initWithTableInfo:rowUids:
targetGroupFromRowIndex:minSourceLevel:templateRowUID:
minimumCategoryLevelInRowRange:
setTemporaryRowOrder:
setRowOrderUsingViewOrder
insertRowUids:beforeUid:
groupUidsGivenRowUids:selectedLevels:
T@"TSTTableInfo",R,W,V_tableInfo
p_tgtRangeFromPbRange:andMap:
p_tgtRangeForPbRange:givenColumnMaps:rowMaps:
p_indexForTgtToPbMaps:andMap:
p_tgtCellIDForPbCellID:givenColumnMaps:rowMaps:
pbRangeForTgtRange:
pbCellIDForTgtCellID:
p_tgtRangesForPbRange:givenColumnMaps:rowMaps:
initWithPbRange:tgtRange:
initWithPbTable:pbRange:tgtTable:tgtRange:flag:
createTgtRegionFromPbRegion:
createTgtRegionByIntersectingPbRegion:andTgtRegion:
createTgtMergeMapFromPbMergeMap:andTgtRegion:andTgtBodyRange:
mRowTgtToPbMaps
mColumnTgtToPbMaps
initWithNumberOfSortRules:
setReorganizeValue:atIndex:
reorganizeValueAtIndex:
reorganizeValues
setReorganizeValues:
_reorganizeValues
T@"NSMutableArray",&,N,V_reorganizeValues
component:fromDate:
setValue:forComponent:
setDay:
rangeOfUnit:inUnit:forDate:
weekday
tsce_weekNumberForType:
setMonth:
dateFromComponents:
groupingComboForGroupingType:
changesPerColumnMapToBeInGroup:
p_setCell:groupingCellPlan:groupValue:toGroup:templateCell:
p_cellDiffForFinishedCell:
p_setCell:groupingTypeCombo:groupingCellValue:toBeInGroup:
p_setCell:forUniqueGroupingTypeWithGroupColumnValue:toBeInGroup:
p_setCell:forYearGroupingTypeWithGroupColumnValue:toBeInGroup:
p_setCell:forYearQuarterGroupingTypeWithGroupColumnValue:toBeInGroup:
p_setCell:forMonthGroupingTypeWithGroupColumnValue:toBeInGroup:
p_setCell:forYearWeekGroupingTypeWithGroupColumnValue:toBeInGroup:
p_setCell:forDayOfWeekGroupingTypeWithGroupColumnValue:toBeInGroup:
p_setCell:forDayGroupingTypeWithGroupColumnValue:toBeInGroup:
p_setCell:forMonthOfYearGroupingTypeWithGroupColumnValue:toBeInGroup:
p_setCell:forQuarterOfYearGroupingTypeWithGroupColumnValue:toBeInGroup:
copyValueAndFormatToCell:
setYear:
initWithCalendarIdentifier:
timeZoneWithName:
setTimeZone:
defaultDateForGrouping
p_dateBySettingUnit:value:ofDate:inCalendar:
ordinalityOfUnit:inUnit:forDate:
changeCell:atCellUID:toBeInGroup:
changeCellDiffMapToMoveRows:toGroup:templateRowUID:
cellDiffForCell:applyingGroupCellValue:groupingType:toBeInGroup:
tsu_resourcesBundle
metadata
migratedStyleForStyle:
metadataWithUid:
migrateStylesToDocument:
_columnRowUID
_hidingAction
_definedCellStyle
_definedTextStyle
T@"TSTCellStyle",R,N,V_cellStyle
T@"TSWPParagraphStyle",R,N,V_textStyle
Td,R,N,V_size
TC,R,N,V_hidingAction
minCursorCellID
setMinCursorCellID:
cursorCellIDs
setCursorCellIDs:
iterators
setIterators:
_minCursorCellID
_iterators
_cursorCellIDs
T{TSUCellCoord=ISBB},N,V_minCursorCellID
T{vector<TSUCellCoord, std::allocator<TSUCellCoord>>=^{TSUCellCoord}^{TSUCellCoord}{__compressed_pair<TSUCellCoord *, std::allocator<TSUCellCoord>>=^{TSUCellCoord}}},N,V_cursorCellIDs
T@"NSMutableArray",&,N,V_iterators
rank
localizedCaseInsensitiveCompare:toString:
sortTagsForSortingRows:byColumns:
sortTagsForSortingColumns:byRows:
sortedArrayUsingComparator:
initWithStartIndex:endIndex:
mapping
p_mappingForSortingRowsOrColumns:withRules:dimension:
reorganizeValueForSorting
mappingSize
startIndex
dirtyCellsForRowRange:fromTable:tableRange:
mappingFromRowUids:toRowUids:
rearrangeWithMapping:
changeDescriptorsForReorganizingFromRowUids:toRowUids:
withinGroupingChangesBatch
initWithTableUID:summaryRows:labelRows:
p_applyViewCellCoord:toSummaryUsingBlock:toLabelUsingBlock:toCategoryColumnUsingBlock:toBaseUsingBlock:
p_defaultCellStyleOfSummaryOrLabelRowAtLevel:isLabel:
p_applyViewRowIndex:toSummaryUsingBlock:toLabelUsingBlock:toBaseUsingBlock:toBeyondBoundsUsingBlock:
p_defaultTextStyleOfSummaryOrLabelRowAtLevel:isLabel:
p_applyViewColumnIndex:toCategoryColumnUsingBlock:toBaseUsingBlock:toBeyondBoundsUsingBlock:
nonCustomCurrencyFormatSansAccountingStyleForLocale:
initWithTrueString:falseString:
setByAddingObjectsFromSet:
i_populateCachedIndexSetsIfNeeded
i_indexesForLabelRowsAtGroupLevel:
i_indexesForLeadingRowsAtGroupLevel:
i_indexesForLeadingSummaryRowsAtGroupLevel:
i_populateIndexesForSummaryRows
i_populateIndexesForLabelRows
i_populateIndexesForSummaryAndLabelRows
i_populateIndexesForLeadingRows
i_populateIndexesForLeadingSummaryRows
setByUnionWithSet:
isSubsetOf:
suspendChangeDescriptorNotificationsDuringBlock:
summaryCellCoordForCellUID:
baseCoordFromViewCoord:
indexesForLeadingSummaryRows
suspendNotify
setSuspendNotify:
cachedIndexSetsAreValid
setCachedIndexSetsAreValid:
cachedIndexesUnfairLock
setCachedIndexesUnfairLock:
cachedIndexesForSummaryRows
setCachedIndexesForSummaryRows:
cachedSummaryRowIndexesAtLevels
setCachedSummaryRowIndexesAtLevels:
cachedIndexesForLabelRows
setCachedIndexesForLabelRows:
cachedLabelRowIndexesAtLevels
setCachedLabelRowIndexesAtLevels:
cachedIndexesForSummaryAndLabelRows
setCachedIndexesForSummaryAndLabelRows:
cachedIndexesForLeadingRows
setCachedIndexesForLeadingRows:
cachedLeadingRowIndexesAtLevels
setCachedLeadingRowIndexesAtLevels:
cachedIndexesForLeadingSummaryRows
setCachedIndexesForLeadingSummaryRows:
cachedLeadingSummaryRowIndexesAtLevels
setCachedLeadingSummaryRowIndexesAtLevels:
_groupingsChangingLevel
_sawGroupingChangeNeedingReset
_suspendNotify
_cachedIndexSetsAreValid
_cachedIndexesUnfairLock
_cachedIndexesForSummaryRows
_cachedSummaryRowIndexesAtLevels
_cachedIndexesForLabelRows
_cachedLabelRowIndexesAtLevels
_cachedIndexesForSummaryAndLabelRows
_cachedIndexesForLeadingRows
_cachedLeadingRowIndexesAtLevels
_cachedIndexesForLeadingSummaryRows
_cachedLeadingSummaryRowIndexesAtLevels
TB,N,V_suspendNotify
TB,N,V_cachedIndexSetsAreValid
T{os_unfair_lock_s=I},N,V_cachedIndexesUnfairLock
T@"NSIndexSet",&,N,V_cachedIndexesForSummaryRows
T@"NSMapTable",&,N,V_cachedSummaryRowIndexesAtLevels
T@"NSIndexSet",&,N,V_cachedIndexesForLabelRows
T@"NSMapTable",&,N,V_cachedLabelRowIndexesAtLevels
T@"NSIndexSet",&,N,V_cachedIndexesForSummaryAndLabelRows
T@"NSIndexSet",&,N,V_cachedIndexesForLeadingRows
T@"NSMapTable",&,N,V_cachedLeadingRowIndexesAtLevels
T@"NSIndexSet",&,N,V_cachedIndexesForLeadingSummaryRows
T@"NSMapTable",&,N,V_cachedLeadingSummaryRowIndexesAtLevels
visible
setVisible:
hidden
setHidden:
userVisible
setUserVisible:
userHidden
setUserHidden:
_visible
_hidden
_userVisible
_userHidden
T@"NSMutableIndexSet",&,N,V_visible
T@"NSMutableIndexSet",&,N,V_hidden
T@"NSMutableIndexSet",&,N,V_userVisible
T@"NSMutableIndexSet",&,N,V_userHidden
rowMarkIndex
setRowMarkIndex:
tsu_enumerateRangesConcurrentlyUsingBeginBlock:concurrentBlock:finalBlock:
previousNthVisibleRow:fromRowIndex:
previousNthVisibleColumn:fromColumnIndex:
visibleCellOffsetBy:fromCellID:
userVisibleRowIndices
rowsVisible
setRowsVisible:
rowsUserVisible
setRowsUserVisible:
rowsInvalid
setRowsInvalid:
columnsVisible
setColumnsVisible:
columnsInvalid
setColumnsInvalid:
_rowsVisible
_rowsUserVisible
_rowsInvalid
_rowMarkIndex
_columnsVisible
_columnsInvalid
T@"TSTHiddenStateIndexSet",&,N,V_rowsVisible
T@"TSTHiddenStateIndexSet",&,N,V_rowsUserVisible
T@"NSMutableIndexSet",&,N,V_rowsInvalid
TQ,N,V_rowMarkIndex
T@"TSTHiddenStateIndexSet",&,N,V_columnsVisible
T@"NSMutableIndexSet",&,N,V_columnsInvalid
tswp_spaceCharacterSet
removeCharactersInString:
tswp_smartSingleQuotesCharacterSet
stringByReplacingCharactersInRange:withString:
asDateTimeFormat
automaticMaxAndMinDurationUnitsForTimeInterval:
defaultDecimalPlacesForCurrencyCode:
appliedConditionKey
conditionalFormatDataForKey:
currencyCodeIndex
currencyCodeForCurrencySymbol:
asBaseFormat
base
baseUseMinusSign
formatOfType:allowMismatchedSpare:
groupingSeparator
defaultHexadecimalFormat
usesLimitedAutomaticFormatParsing
supportsFormulaEditing
decimalSeparator
setCurrencyOrNumberDoubleValue:
cellValueFromCell:locale:
coerceToFormatType:
coerceToBaseFormat:
coerceTextCellToBestNumberFormatUsingLimitedParsing:
coerceCellToFormatTypeUsingSpares:
replaceContentWithParsableString:tableInfo:cellID:flags:outControlWasRemoved:
propertySetByAddingProperty:
p_setupTileAndRowAtCellID:
setCurRow:
setCurTile:
i_tileStartingAtOrAfterRowIndex:outTileRange:
curTile
curTileRange
setCurTileRange:
curRow
_curTile
_curRow
_curTileRange
T@"TSTTableTile",&,N,V_curTile
T{_NSRange=QQ},N,V_curTileRange
T@"TSTTableTileRowInfo",&,N,V_curRow
tsk_phoneUI
wantsSelectionAtPoint:
rendererForAttachment
baselineOffset
drawAttachment:inContext:selection:
deprecatedProperties
propertySetByRemovingPropertiesFromSet:
boxedDefaultValueForProperty:
defaultStyleWithDefaultPropertiesInContext:
mTableNameSelection
T@"TSKSelection",&,N,VmTableNameSelection
logForCategory:
T@"NSObject<OS_os_log>",R,N
setFunctorForType
initWithColumnUid:groupingType:
p_groupingFormatWithLocale:
shortStringForYearType
shortStringForMonthType
shortStringForDayOfWeekType
shortStringForDayType
shortStringForYearWeekType
shortStringForYearQuarterType
shortStringForMonthOfYearType
shortStringForQuarterOfYearType
stringForUniqueType
stringForYearType
stringForMonthType
stringForDayOfWeekType
stringForDayType
stringForYearWeekType
stringForYearQuarterType
stringForMonthOfYearType
stringForQuarterOfYearType
stringForYearTypeForLocale:
stringForMonthTypeForLocale:
stringForDayOfWeekTypeForLocale:
stringForDayTypeForLocale:
stringForYearWeekTypeForLocale:
stringForYearQuarterTypeForLocale:
stringForMonthOfYearTypeForLocale:
stringForQuarterOfYearTypeForLocale:
stringForUniqueTypeForLocale:
shortStringForYearTypeForLocale:
shortStringForMonthTypeForLocale:
shortStringForDayOfWeekTypeForLocale:
shortStringForDayTypeForLocale:
shortStringForYearWeekTypeForLocale:
shortStringForYearQuarterTypeForLocale:
shortStringForMonthOfYearTypeForLocale:
shortStringForQuarterOfYearTypeForLocale:
coarserGroupingTypeFor:
finerGroupingTypeFor:
stringForGroupingType:locale:
coarserGroupingTypeFor:groupTypesToAvoid:
finerGroupingTypeFor:groupTypesToAvoid:
initWithColumnIndex:groupingType:inTableInfo:
getUUIDBytesForGroupingColumnUid:
getUUIDBytesForColumnUid:
groupingFunctor
uniqueObjectUID
_groupingColumnUid
_groupingType
_groupingFunctor
_groupingFormat
_groupingFormatComputed
_docLocale
_uniqueObjectUID
T{TSKUIDStruct=QQ},R,N,V_uniqueObjectUID
Tr^{TSCEFunctor=@C},R,N,V_groupingFunctor
Tq,R,N,V_groupingType
rewriteSpecBaseToChrome
coordMapper
regionMovedInfo
srcTableUID
srcColumnUids
srcRowUids
dstColumnUids
dstRowUids
uids
dstTableUID
setRewriteSpecBaseToChrome:
setCoordMapper:
rewriteSpecChromeToBase
setRewriteSpecChromeToBase:
finalDstTableUID
rewriteSpec
_rewriteSpecBaseToChrome
_rewriteSpecChromeToBase
_rewriteSpec
T@"TSCECalculationEngine",R,N,V_calcEngine
T@"TSTFormulaRewriteSpec",R,N,V_rewriteSpec
i_rowInfoAtIndex:
_currentViewCellID
_currentBaseCellID
_currentSummaryCellID
_currentCellIDIsBase
_currentRowIndex
_summaryDataStore
_summaryRow
internalFormulaOwnerIDForFormulaOwnerUID:
cellCoordinatesNeedingExcelImportForTable:
tablesByName
addTable:
registerWithCalcEngine:ownerKind:linkOnly:
defaultCharacterStyle
copyByRewritingForExcelImport:outFormulaResult:outDidModifyFormula:outFormulaReplacedForExcelCompatWarning:functionNameReplacedForExcelCompat:formulaFormatFromCell:
isNotReadyError
warningSetForFormulaReplacedForExcelCompat:originalFormula:
warningSetByAddingWarningsFromSet:
copyByRemovingNumberToDateCoercion:outFormulaResult:outDidModifyFormula:
assertAt:nonCalcEngineException:evaluatingFormula:
corruptCellRefs
tableResolverForTableID:
ownerKindForOwnerID:
formulaOwnerUIDForInternalFormulaOwnerID:
resetCorruptCellRefs:
hasRunRecalculationALongTime
requestAutosaveForExpensiveCalculation
clearRecalculationTimer
setDontClearBackground:
TB,N,VdontClearBackground
pattern
patternType
emptyPattern
initWithColor:width:cap:join:pattern:
portalStroke
TB,D,N
cppCalcEngine
insertString:atCharIndex:undoTransaction:
initWithTableResolver:topLeft:bottomRight:preserveFlags:
upgradeStyleForFormulatextForCellCoord:
rangeCoord
tableResolver
topLeftCoord
intersectionWithCellRect:
invalidReferenceError
raiseErrorForInvalidReference
raiseInvalidRangeUsageErrorForReference:
invalidMergeReference:contextEntityUID:
raiseException
isValidOrSpanning
columnGroupLevel
rowGroupLevel
aggregateIndexLevel
initWithColumnRange:rowRange:
enumerateValuesUsingBlock:
aggregateFieldName
invalidAggregateColumnErrorForFunctionName:argumentNumber:
setMissingDataFieldAtIndex:
enumerateDataKeyValuePairsUsingBlock:
keyValuePairCount
initWithColumnUid:rowUid:purpose:
initWithTract:tableUID:preserveFlags:
newTableResolverForResolver:
mapOwnerUID:
valuesForCategoryRef:atRowUid:hidingActionMask:error:
valueGridForCategoryRef:atRowUid:hidingActionMask:error:
resolverContainerMatchingName:inDocumentRoot:
resolverMatchingName:inDocumentRoot:contextResolver:
resolverMatchingNameWithContextContainer:inDocumentRoot:contextContainerName:
p_warningSetForFormulaWarningType:originalFormula:supplementaryText:
warningSetForCondFormatAboveAvgEqualAvg
warningSetForCondFormatAboveAvgStdDev
warningSetForCondFormatComplexFormula
warningSetForCondFormatContainsErrors
warningSetForCondFormatExpr
warningSetForCondFormatNotContainsErrors
warningSetForCondFormatParamatersNotAllTheSame
warningSetForCondFormatStopIfTrue
warningSetForCondFormatUnsupportedOperator
warningSetForCondFormatUnsupportedStyling
warningSetForCondFormatUnsupportedTimePeriod
warningSetForUnsupportedCondFormat
warningSetForDurationFormatRangeChanged
warningSetForUnsupportedDataFormat:
emptyWarningSet
TSTImportFormulaWarningTypeFromArchive:
p_isPersistedWithFormulaWarningTypeEnumeration
TSTImportFormulaWarningTypeToArchive
descriptionWithObject:
localizedWarningStrings
addFieldValue:
warningSetFor3DReferenceFormula:
warningSetForArrayedFormula:
warningSetForDifferentBehaviorForFunctionFormula:originalFormula:
warningSetForErrorTokenFormula:
warningSetForExternalReferenceFormula:
warningSetForNaturalLanguageFormula:
warningSetForReferenceOutOfBoundsFormula:
warningSetForSharedFormulaBaseNotFoundFormula:
warningSetForUnknownName:originalFormula:
warningSetForUnsupportedFormula:
warningSetForUnsupportedFunction:originalFormula:
warningSetForUnsupportedNameFormula:originalFormula:
warningSetForTransposedWithoutIssues:
warningSetForTransposedWithIssues:
warningSetForTransposeUnmodifiedWithIssues
warningSetForFilteredColumnFormulaNotCopied
cellDiffClearingAllWarningsWithContext:
areAnySet
individualWarnings
cellDiffClearingWarningsWithContext:
warningSetByRemovingWarningsFromSet:
_cellWarning
_originalDataFormat
_formulaWarning
addWarning:atCellRef:
cellRefForIndex:
warningSetAtCellRef:
_warningSetForCoordinate
setFunctionIndex:
englishFunctionNameFromFunctionIndex:
TS,N,V_functionIndex
isEqualToChoices:
p_mcListTypeForArgType:
p_mcListTypeOfListItem:
booleanValue
p_listItemAtIndex:
p_numberForListItem:
p_stringForListItem:
p_dateForListItem:
p_booleanForListItem:
initWithArchive:locale:
initWithItems:context:
tsu_stringWithoutAttachmentCharacters
p_appendChoices:uniquelyToChoices:
p_PopUpMenuModelDefaultWithContext:locale:
p_cellValueFromCellWithCustomFormat:locale:
popupMenuModelFromTable:region:initialValue:overflow:
popupMenuModelDeletingItemFromModel:index:
popupMenuModelEditingItemInModel:index:newContent:
popupMenuModelReorderingModel:fromIndex:toIndex:
valueTypeOfItemAtIndex:
numberAtIndex:
stringAtIndex:
dateAtIndex:
booleanAtIndex:
formatAtIndex:
popUpItemFromNumber:format:
popUpItemFromBoolean:
popUpItemFromString:
popUpItemFromDate:format:
_items
initWithRefCount:
loadFromArchive:unarchiver:completion:
p_sharedInitWithRefCount:key:
estimateByteSize
objectWithRefCount:
sharedLoadFromArchive:
dropReference
addReferencesFromObject:
_payload
_key
_refCount
_byteSizeForArchiving
TI,R,N,V_refCount
TQ,R,N,V_byteSizeForArchiving
TI,N,V_key
T@"NSObject<TSTTableDataPayloadHashing>",&,N,V_payload
T@"TSDCommentStorage",R,D,N
T@"TSTConditionalStyleSet",R,D,N
T@"TSUCustomFormat",R,D,N
T@"TSKFormat",R,D,N
T@"TSTCellSpec",R,D,N
T@"TSWPStorage",R,D,N
T@"TSTImportWarningSet",R,D,N
T@"TSTPopUpMenuModel",R,D,N
T@"TSSStyle",R,D,N
objectWithCommentStorage:refCount:
objectWithConditionalStyleSet:refCount:
initObjectWithCustomFormat:refCount:
formatName
objectWithCustomFormat:refCount:
p_setUpFormat:
asLegacyCustomFormat
objectWithFormat:refCount:
objectWithCellSpec:refCount:
objectWithFormulaError:refCount:
objectWithImportWarningSet:refCount:
objectWithPopUpMenuModel:refCount:
richTextPayload
objectWithRichTextPayload:refCount:
objectWithString:refCount:
_shouldWrap
TB,R,N,V_shouldWrap
objectWithStyle:refCount:
noLockShouldUpgradeStyleForFormulatextForCellCoord:
hasCellAtCellID:
applyBlockToAllCells:
shouldUpgradeStyleForFormulatextForCellCoord:
_cellsByCoord
_temporaryObjectContextDelegate
_temporaryContext
_cellCoordsToStyleUpgradeForFormulatext
unsignedLongLongValue
removeObjectsForKeys:
performSyncWriteWithUnderlyingDictionary:
invalidateObjectsWithKeysInCellRange:
cellValueTypeIsExpected:
cellFormatKindIsExpected:
resolveDataListKeysForCell:suppressTransmutation:sourceStorageVersion:
initWithCommentStorage:
conditionalFormatDataForValue:outKey:
valueRepresentsDateWithoutTime
gregorianCalendarLocale
startOfDayForDate:
isDrawable
enumerateAttachmentsInTextRange:usingBlock:
setFormulaObject:clearingID:
supportsStockUI
currencyCodeForUnit:
applyConditionalValue:
basePlaces
initWithBase:basePlaces:baseUseMinusSign:
copyPersistedWithContext:
hyperlinkStyle
smartFieldKind
enumerateSmartFieldsWithAttributeKind:inRange:usingBlock:
p_formatOfCellFormatKind:create:created:
p_setFormatExplicit:fromCellFormatKind:setMostRecentlySet:
_validateCustomFormatWrapper:
p_formatTypeIsANumberFormatTypeForMostRecentlySet:
p_clearFormatOfCellFormatKind:
p_cellFormatKindForValueType:
p_clearIfImplicitAndNotCurrentForKind:format:explicitFormatMask:
p_TSTCellSetMostRecentlySetNumberFormatWithCurrencyFlag:
p_hasExplicitFormatOfCellFormatKind:
formatType:isSameCellFormatKindAs:allowNumberCurrencyMismatch:
p_mismatchBetweenValueType:andCellFormatKind:
setRank:
formatTypeIsExpected:
setCurrencyOrNumberDecimalValue:
mightBeInterestedInMigration
stringForDisplayWithoutColor
hasContentBreakingMergeFragment
hasStockFormulaForStockUI
setCurrentFormat:isExplicit:forExcel:
candidateFormatForSliderStepperControlWithIsCurrent:
hasAnyExplicitFormats
setFormatID:forStorageFlag:
formatForStorageFlag:
hasAnyWarning
_valueBigNumber
_controlCellSpecID
_textFormatID
_booleanFormatID
TC,R,N,V_cellFormatKind
TI,N,V_controlCellSpecID
TI,N,V_textFormatID
TI,N,V_booleanFormatID
T{TSUDecimal={?=[2Q]}},N
T@"TSTStockDetails",R,N
T@"TSKFormat",R,N
T@"TSKFormat",R,N,V_textFormat
T@"TSKFormat",R,N,V_booleanFormat
sortRulesWithTableInfo:
groupSortRules
groupSortOrderWithRules:withTableInfo:
groupSortRulesForLevel:tableInfo:
groupSortOrderWithTableInfo:
groupSortOrderByRemovingColumnUIDs:tableInfo:
groupSortOrderByReplacingRuleAtIndex:withRule:withTableInfo:
containsAnyRulesInColumnUIDList:
_groupSortRules
T@"NSArray",R,N,V_groupSortRules
styleDataList
richTextDataList
formulaErrorDataList
decrementColumnCellCount:byAmount:
p_updateNumberOfPopulatedCells
conditionalStyleSetDataList
commentStorageDataList
stringDataList
formatDataList
populatedCustomFormat:value:
formulaDataList
importWarningSetDataList
controlCellSpecDataList
upgrading
multipleChoiceListFormatDataList
preBNCFormatDataList
_setCell:atCellID:tableUID:calculationEngine:conditionalStyleOwner:ignoreFormula:clearImportWarnings:richTextDOLCHint:
assertIsNotIterating
formulaDefinitionPrecedentForTableUID:
p_preBNCKeysForCell:atCellID:
incrementCellCountsAtCellID:
decrementCellCountsAtCellID:
p_preBNCKeysForCell:oldPreBNCStorageRef:callWillModify:
p_updatePreBNCDataListsForCurrentFormat:numberFormat:currencyFormat:dateFormat:durationFormat:baseFormat:customFormat:stepperSliderFormat:mcListFormat:oldPreBNCStorageRef:callWillModify:
populatedCustomFormatWrapperFromCFWrapper:customFormat:
isMarkedCorrupt
p_stashBadKey:forList:
p_preBNCpopulatedCustomFormat:value:
p_populatedMultipleChoiceListFormat:
p_clearDataListEntriesForStorageRef:cellID:
p_clearDataListEntriesInRange:
p_loadDatalist:forLazyReference:completionBlock:
p_loadDatalist:forLazyReference:
p_makeALazyDatalistOfType:isNewForBNC:
initWithObject:
p_makeALazyDatalistOfType:
removeCustomFormatForKey:
p_pasteboardCustomFormatList
p_pasteboardCustomFormatMap
remapCustomFormatKeysWithOldToNewKeyMap:
_needToUpgradeCellStorage
p_cellMapForUpgradingToBraveNewCell
tsu_enumerateKeysAndObjectsUsingBlock:
indirectErrorForRangeReference:hostTableUID:
errorForRichTextStorage:outValue:
stringForCalcEngineAtCellID:refIfAvailable:
richTextStorageForCalcEngineAtCellID:refIfAvailable:
cellCountOfRowAtIndex:
cellCountOfColumnAtIndex:
hasFormulaSyntaxErrorAtCellID:
addPasteboardCustomFormatFromCell:
setupEmptyPasteboardCustomFormatList
beginIteration
endIteration
copyWithOwner:
pasteboardCustomFormatList
setPasteboardCustomFormatList:
tileStorage
setTileStorage:
rowHeaderStorage
setRowHeaderStorage:
columnHeaderStorage
setColumnHeaderStorage:
styleTableReference
setStyleTableReference:
conditionalStyleSetTableReference
setConditionalStyleSetTableReference:
stringTableReference
setStringTableReference:
formulaTableReference
setFormulaTableReference:
controlCellSpecTableReference
setControlCellSpecTableReference:
formulaErrorTableReference
setFormulaErrorTableReference:
richTextTableReference
setRichTextTableReference:
formatTableReference
setFormatTableReference:
commentStorageTableReference
setCommentStorageTableReference:
importWarningSetTableReference
setImportWarningSetTableReference:
preBNCFormatTableReference
setPreBNCFormatTableReference:
pasteboardCustomFormatMap
setPasteboardCustomFormatMap:
mergedCellRanges
setMergedCellRanges:
cellCountValid
setCellCountValid:
storageVersionPreBNC
setStorageVersionPreBNC:
missingPostBNCDatalists
setMissingPostBNCDatalists:
_iteratorRunningCount
_styleDataList
_conditionalStyleSetDataList
_stringDataList
_formulaDataList
_controlCellSpecDataList
_formulaErrorDataList
_richTextDataList
_formatDataList
_commentStorageDataList
_importWarningSetDataList
_preBNCFormatDataList
_foundABadDatalistKey
_upgrading
_cellCountValid
_storageVersionPreBNC
_missingPostBNCDatalists
_pasteboardCustomFormatList
_tileStorage
_rowHeaderStorage
_columnHeaderStorage
_styleTableReference
_conditionalStyleSetTableReference
_stringTableReference
_formulaTableReference
_controlCellSpecTableReference
_formulaErrorTableReference
_richTextTableReference
_formatTableReference
_commentStorageTableReference
_importWarningSetTableReference
_preBNCFormatTableReference
_multipleChoiceListFormatDataList
_pasteboardCustomFormatMap
_mergedCellRanges
T@"TSTTableTileStorage",&,N,V_tileStorage
T@"TSTTableHeaderStorage",&,N,V_rowHeaderStorage
T@"TSTTableHeaderStorage",&,N,V_columnHeaderStorage
T@"TSPLazyReference",&,N,V_styleTableReference
T@"TSPLazyReference",&,N,V_conditionalStyleSetTableReference
T@"TSPLazyReference",&,N,V_stringTableReference
T@"TSPLazyReference",&,N,V_formulaTableReference
T@"TSPLazyReference",&,N,V_controlCellSpecTableReference
T@"TSPLazyReference",&,N,V_formulaErrorTableReference
T@"TSPLazyReference",&,N,V_richTextTableReference
T@"TSPLazyReference",&,N,V_formatTableReference
T@"TSPLazyReference",&,N,V_commentStorageTableReference
T@"TSPLazyReference",&,N,V_importWarningSetTableReference
T@"TSPLazyReference",&,N,V_preBNCFormatTableReference
T@"TSTTableDataList",R,N,V_multipleChoiceListFormatDataList
T@"NSObject<TSDContainerInfo><TSWPStorageParent>",W,N,V_richTextParentInfo
T@"TSKCustomFormatList",&,N,V_pasteboardCustomFormatList
T@"NSMutableDictionary",&,N,V_pasteboardCustomFormatMap
T@"TSTMergeRegionMap",&,N,V_mergedCellRanges
TI,N,V_cellCount
TB,N,V_cellCountValid
TC,N,V_storageVersionPreBNC
TB,N,V_missingPostBNCDatalists
TB,N,V_upgrading
_rank
_doubleValue
Ti,N,V_rank
Td,N,V_doubleValue
T@"NSString",&,N,V_string
T@"TSDCommentStorage",R,N,V_commentStorage
inset
reoriginToZero
setTransform:
setInset:
setReoriginToZero:
_reoriginToZero
_inset
_transform
T{CGAffineTransform=dddddd},N,V_transform
Td,N,V_inset
TB,N,V_reoriginToZero
p_updateAnnotationUUID
initWithStorage:forTableInfo:cellUID:
setAnnotationUUID:
author
copyWithAuthor:
creationDate
text
isInDocument
isFloatingComment
annotationUUID
annotationType
setAuthor:
annotationDisplayStringType
T@"TSKAnnotationAuthor",&,N
isHighlight
T@"TSDCommentStorage",C,N
viewCellCoord
baseCellCoord
mStorage
_annotationUUID
T@"NSString",&,N,V_annotationUUID
T{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}},R,N,V_cellUID
T{TSUViewCellCoord={TSUCellCoord=ISBB}},R,N
T{TSUModelCellCoord={TSUCellCoord=ISBB}},R,N
resetSharedTableConfiguration
T@"TSTConfiguration",R,N
supportsExpandedTables
setMaxNumberOfRows:
setMaxNumberOfColumns:
setMaxNumberOfPopulatedCells:
supportsContainedTextEditing
setSupportsContainedTextEditing:
showsCellEditingToolbar
setShowsCellEditingToolbar:
supportsAutomaticNumberKeyboard
setSupportsAutomaticNumberKeyboard:
supportsMergedCells
setSupportsMergedCells:
supportsHiddenCells
setSupportsHiddenCells:
returnWhileEditingNavigates
setReturnWhileEditingNavigates:
tabWhileEditingNavigates
setTabWhileEditingNavigates:
continuesEditingAfterNavigation
setContinuesEditingAfterNavigation:
arrowKeyAtEdgeWhileEditingNavigates
setArrowKeyAtEdgeWhileEditingNavigates:
arrowKeysWrap
setArrowKeysWrap:
arrowKeysNavigateWhenEditingBeganByTyping
setArrowKeysNavigateWhenEditingBeganByTyping:
backTabWraps
setBackTabWraps:
tabAtEdgeAddsRow
setTabAtEdgeAddsRow:
tabAtEdgeAddsColumn
setTabAtEdgeAddsColumn:
pastesTile
setPastesTile:
allowHorizontalAutoresize
setAllowHorizontalAutoresize:
selectsCellOnInitialTap
setSelectsCellOnInitialTap:
dragByHandleOnly
setDragByHandleOnly:
cornersCanDragResize
setCornersCanDragResize:
setSupportsControlCells:
controlCellUIAlwaysVisible
setControlCellUIAlwaysVisible:
supportsActionMenu
setSupportsActionMenu:
hasLargerFonts
setHasLargerFonts:
setSupportsFrozenHeaders:
setSupportsAutoResizedTables:
supportsCreateChartFromSelection
setSupportsCreateChartFromSelection:
selectionUsesBezierPath
setSelectionUsesBezierPath:
usesSelectionChromeResizer
setUsesSelectionChromeResizer:
showsChromeWhileEditingCell
setShowsChromeWhileEditingCell:
showsSelectionKnobsWhileEditingCell
setShowsSelectionKnobsWhileEditingCell:
setShowsCellWarningIndicator:
supportsCanvasReferenceEditing
setSupportsCanvasReferenceEditing:
setUsesLimitedAutomaticFormatParsing:
setSupportsFormulaEditing:
supportsImplicitEditing
setSupportsImplicitEditing:
allowFreeformFormulaText
setAllowFreeformFormulaText:
allowWhitespaceInFormulas
setAllowWhitespaceInFormulas:
showsHideUnhideUI
setShowsHideUnhideUI:
exportPermanentHidingState
setExportPermanentHidingState:
setShowsCellOverflowIndicator:
supportsAutofill
setSupportsAutofill:
usesLimitedNumberFormatInspector
setUsesLimitedNumberFormatInspector:
setHeadersFrozenByDefault:
setCreateLargeDefaultTables:
setTableNameEnabledInNewTables:
supportsRowColumnAdderKnob
setSupportsRowColumnAdderKnob:
supportsDragDropMoveMode
setSupportsDragDropMoveMode:
supportsDynamicallyHidingRowColumnForDragDrop
setSupportsDynamicallyHidingRowColumnForDragDrop:
formulaEditorEvaluatesFormulas
setFormulaEditorEvaluatesFormulas:
showReferenceHighlightsOnFormulaCellSelection
setShowReferenceHighlightsOnFormulaCellSelection:
setTokenizeFormulaStringLiterals:
exportsCellComments
setExportsCellComments:
exportsCellAnnotations
setExportsCellAnnotations:
supportsCellCommentsActivityLines
setSupportsCellCommentsActivityLines:
cellEditorsCanScrollToNonLocalTableSelection
setCellEditorsCanScrollToNonLocalTableSelection:
supportsRepeatHeaderRowsOnEachPage
setSupportsRepeatHeaderRowsOnEachPage:
supportsTableTranspose
setSupportsTableTranspose:
supportsRowMovesInPaginatedTables
setSupportsRowMovesInPaginatedTables:
setDisableImplicitNaming:
supportsComplexReorganizeUI
setSupportsComplexReorganizeUI:
supportsQuickFilterUI
setSupportsQuickFilterUI:
pasteFilterHidingAsUserHiding
setPasteFilterHidingAsUserHiding:
allowsFullyFilteredTables
setAllowsFullyFilteredTables:
supportsTableColumnAutocomplete
setSupportsTableColumnAutocomplete:
setSupportsInlineAttachments:
followsLinksOnFirstTap
setFollowsLinksOnFirstTap:
setSupportsBidiTablesUI:
supportsPlaceholderGeometry
setSupportsPlaceholderGeometry:
setSupportsStockUI:
shouldZoomOutOnEndEditing
setShouldZoomOutOnEndEditing:
forceZoomInOnBeginEditing
setForceZoomInOnBeginEditing:
setSupportsCategorization:
setSupportsPivotTables:
structuredTextImportConfidenceThreshold
setStructuredTextImportConfidenceThreshold:
structuredTextImportConfidenceThresholdForCanvas
setStructuredTextImportConfidenceThresholdForCanvas:
structuredTextImportSizeLimit
setStructuredTextImportSizeLimit:
allowsBlackDragDropBackground
setAllowsBlackDragDropBackground:
supportsAddBodyRowAtBottomSiriKitIntent
setSupportsAddBodyRowAtBottomSiriKitIntent:
_supportsContainedTextEditing
_showsCellEditingToolbar
_supportsAutomaticNumberKeyboard
_supportsMergedCells
_supportsHiddenCells
_returnWhileEditingNavigates
_tabWhileEditingNavigates
_continuesEditingAfterNavigation
_arrowKeyAtEdgeWhileEditingNavigates
_arrowKeysWrap
_arrowKeysNavigateWhenEditingBeganByTyping
_backTabWraps
_tabAtEdgeAddsRow
_tabAtEdgeAddsColumn
_pastesTile
_allowHorizontalAutoresize
_selectsCellOnInitialTap
_dragByHandleOnly
_cornersCanDragResize
_supportsControlCells
_controlCellUIAlwaysVisible
_supportsActionMenu
_hasLargerFonts
_supportsFrozenHeaders
_supportsAutoResizedTables
_supportsCreateChartFromSelection
_selectionUsesBezierPath
_usesSelectionChromeResizer
_showsChromeWhileEditingCell
_showsSelectionKnobsWhileEditingCell
_showsCellWarningIndicator
_supportsCanvasReferenceEditing
_usesLimitedAutomaticFormatParsing
_supportsFormulaEditing
_supportsImplicitEditing
_allowFreeformFormulaText
_allowWhitespaceInFormulas
_showsHideUnhideUI
_exportPermanentHidingState
_showsCellOverflowIndicator
_supportsAutofill
_usesLimitedNumberFormatInspector
_headersFrozenByDefault
_createLargeDefaultTables
_tableNameEnabledInNewTables
_supportsRowColumnAdderKnob
_supportsDragDropMoveMode
_supportsDynamicallyHidingRowColumnForDragDrop
_formulaEditorEvaluatesFormulas
_showReferenceHighlightsOnFormulaCellSelection
_tokenizeFormulaStringLiterals
_exportsCellComments
_exportsCellAnnotations
_supportsCellCommentsActivityLines
_cellEditorsCanScrollToNonLocalTableSelection
_supportsRepeatHeaderRowsOnEachPage
_supportsTableTranspose
_supportsRowMovesInPaginatedTables
_disableImplicitNaming
_supportsComplexReorganizeUI
_supportsQuickFilterUI
_pasteFilterHidingAsUserHiding
_allowsFullyFilteredTables
_supportsTableColumnAutocomplete
_supportsInlineAttachments
_followsLinksOnFirstTap
_supportsBidiTablesUI
_supportsPlaceholderGeometry
_supportsStockUI
_shouldZoomOutOnEndEditing
_forceZoomInOnBeginEditing
_supportsCategorization
_supportsPivotTables
_allowsBlackDragDropBackground
_supportsAddBodyRowAtBottomSiriKitIntent
_maxNumberOfRows
_maxNumberOfColumns
_maxNumberOfPopulatedCells
_structuredTextImportConfidenceThreshold
_structuredTextImportConfidenceThresholdForCanvas
_structuredTextImportSizeLimit
TI,N,V_maxNumberOfRows
TI,N,V_maxNumberOfColumns
TI,N,V_maxNumberOfPopulatedCells
TB,N,V_supportsContainedTextEditing
TB,N,V_showsCellEditingToolbar
TB,N,V_supportsAutomaticNumberKeyboard
TB,N,V_supportsMergedCells
TB,N,V_supportsHiddenCells
TB,N,V_returnWhileEditingNavigates
TB,N,V_tabWhileEditingNavigates
TB,N,V_continuesEditingAfterNavigation
TB,N,V_arrowKeyAtEdgeWhileEditingNavigates
TB,N,V_arrowKeysWrap
TB,N,V_arrowKeysNavigateWhenEditingBeganByTyping
TB,N,V_backTabWraps
TB,N,V_tabAtEdgeAddsRow
TB,N,V_tabAtEdgeAddsColumn
TB,N,V_pastesTile
TB,N,V_allowHorizontalAutoresize
TB,N,V_selectsCellOnInitialTap
TB,N,V_dragByHandleOnly
TB,N,V_cornersCanDragResize
TB,N,V_supportsControlCells
TB,N,V_controlCellUIAlwaysVisible
TB,N,V_supportsActionMenu
TB,N,V_hasLargerFonts
TB,N,V_supportsFrozenHeaders
TB,N,V_supportsAutoResizedTables
TB,N,V_supportsCreateChartFromSelection
TB,N,V_selectionUsesBezierPath
TB,N,V_usesSelectionChromeResizer
TB,N,V_showsChromeWhileEditingCell
TB,N,V_showsSelectionKnobsWhileEditingCell
TB,N,V_showsCellWarningIndicator
TB,N,V_supportsCanvasReferenceEditing
TB,N,V_usesLimitedAutomaticFormatParsing
TB,N,V_supportsFormulaEditing
TB,N,V_supportsImplicitEditing
TB,N,V_allowFreeformFormulaText
TB,N,V_allowWhitespaceInFormulas
TB,N,V_showsHideUnhideUI
TB,N,V_exportPermanentHidingState
TB,N,V_showsCellOverflowIndicator
TB,N,V_supportsAutofill
TB,N,V_usesLimitedNumberFormatInspector
TB,N,V_headersFrozenByDefault
TB,N,V_createLargeDefaultTables
TB,N,V_tableNameEnabledInNewTables
TB,N,V_supportsRowColumnAdderKnob
TB,N,V_supportsDragDropMoveMode
TB,N,V_supportsDynamicallyHidingRowColumnForDragDrop
TB,N,V_formulaEditorEvaluatesFormulas
TB,N,V_showReferenceHighlightsOnFormulaCellSelection
TB,N,V_tokenizeFormulaStringLiterals
TB,N,V_exportsCellComments
TB,N,V_exportsCellAnnotations
TB,N,V_supportsCellCommentsActivityLines
TB,N,V_cellEditorsCanScrollToNonLocalTableSelection
TB,N,V_supportsRepeatHeaderRowsOnEachPage
TB,N,V_supportsTableTranspose
TB,N,V_supportsRowMovesInPaginatedTables
TB,N,V_disableImplicitNaming
TB,N,V_supportsComplexReorganizeUI
TB,N,V_supportsQuickFilterUI
TB,N,V_pasteFilterHidingAsUserHiding
TB,N,V_allowsFullyFilteredTables
TB,N,V_supportsTableColumnAutocomplete
TB,N,V_supportsInlineAttachments
TB,N,V_followsLinksOnFirstTap
TB,N,V_supportsBidiTablesUI
TB,N,V_supportsPlaceholderGeometry
TB,N,V_supportsStockUI
TB,N,V_shouldZoomOutOnEndEditing
TB,N,V_forceZoomInOnBeginEditing
TB,N,V_supportsCategorization
TB,N,V_supportsPivotTables
Td,N,V_structuredTextImportConfidenceThreshold
Td,N,V_structuredTextImportConfidenceThresholdForCanvas
TQ,N,V_structuredTextImportSizeLimit
TB,N,V_allowsBlackDragDropBackground
TB,N,V_supportsAddBodyRowAtBottomSiriKitIntent
initWithRewriteType:
setTransposedBodyRange:
setTransposedInfo:
initWithFormulaOwnerUID:uuids:areRows:
setRowColumnInfo:
initWithSrcTableUID:srcTract:dstTableUID:destTract:
setRegionMovedInfo:
setShuffleMap:
addCoordMapper:
setSrcCoordMapper:
initWithTableUID:columnUids:rowUids:
initWithMergeRegion:mergeSource:
setMergeInfo:
initWithMergeOriginsMap:reverseMap:
setMergeOriginMovedInfo:
initWithTableUIDMap:
setTableUIDInfo:
setGroupByChange:
initWithGroupByUid:groupNodeUIDMap:
setGroupNodeUIDInfo:
setGroupByUID:
setIsInverse:
rowColumnInfo
setAuxRowColumnInfo:
conditionalStyleOwnerUID
isInverse
transposedInfo
transposedBodyRange
auxRowColumnInfo
mergeInfo
mergeRegion
mergeSource
mergeOriginMovedInfo
tableUIDInfo
groupNodeUIDInfo
groupByChange
initWithOwnerDeletion:
initWithTransposeTable:transposedBodyRange:numberOfFooterRows:
initForMovingRowsOrColumnsInTable:rowColumnUuids:shuffleMap:areRows:srcTract:destTract:
initForSortWithTableUID:rowUids:shuffleMap:
initForReorderRowsWithTableUID:rowUids:shuffleMap:
initForMovingRegionWithSrcTableUID:srcTract:dstTableUID:destTract:
initForMergeCellsWithTableUID:columnUids:rowUids:mergeSource:
initForUndoMergeCellsWithTableUID:columnUids:rowUids:mergeSource:
initForMergeOriginsMovedWithMap:reverseMap:inTableUID:
initForPastingCellsWithTableUID:columnUids:rowUids:
initForTableUIDReassignment:
initForGroupBy:withGroupByChange:
initForGroupBy:groupNodeUIDReassignment:
initWithPivotRuleChange:
pivotInfo
setPivotInfo:
_pivotInfo
T@"TSTFormulaRewrite_PivotInfo",&,N,V_pivotInfo
autofillSelection
setAutofillSelection:
_autofillSelection
T@"TSTAutofillSelection",&,N,V_autofillSelection
setDirtyCellRange:
dirtyCellRanges
setDirtyStrokeRange:
dirtyStrokeRange
invalidateAllChrome
setInvalidateAllChrome:
invalidateAllChromeCaches
setInvalidateAllChromeCaches:
invalidateColumnChrome
setInvalidateColumnChrome:
invalidateRowChrome
setInvalidateRowChrome:
hideChromeContextMenuButton
setHideChromeContextMenuButton:
invalidateKnobs
setInvalidateKnobs:
invalidateSelection
setInvalidateSelection:
invalidateTableName
setInvalidateTableName:
updateEditorRemainders
setUpdateEditorRemainders:
syncReferenceHighlightState
setSyncReferenceHighlightState:
setSetNeedsDisplay:
hideStepperHUD
setHideStepperHUD:
expandDirtyRegionForReferences
setExpandDirtyRegionForReferences:
repositionStockPopover
setRepositionStockPopover:
_dirtyCellRanges
_invalidateAllChrome
_invalidateAllChromeCaches
_invalidateColumnChrome
_invalidateRowChrome
_hideChromeContextMenuButton
_invalidateKnobs
_invalidateSelection
_invalidateTableName
_updateEditorRemainders
_syncReferenceHighlightState
_setNeedsDisplay
_hideStepperHUD
_expandDirtyRegionForReferences
_repositionStockPopover
_dirtyStrokeRange
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_dirtyStrokeRange
TB,N,V_invalidateAllChrome
TB,N,V_invalidateAllChromeCaches
TB,N,V_invalidateColumnChrome
TB,N,V_invalidateRowChrome
TB,N,V_hideChromeContextMenuButton
TB,N,V_invalidateKnobs
TB,N,V_invalidateSelection
TB,N,V_invalidateTableName
TB,N,V_updateEditorRemainders
TB,N,V_syncReferenceHighlightState
TB,N,V_setNeedsDisplay
TB,N,V_hideStepperHUD
TB,N,V_expandDirtyRegionForReferences
TB,N,V_repositionStockPopover
frameInUnscaledCanvas
visibleUnscaledRectForClippingReps
editorSelection
repForLayout:
transformInRoot
convertUnscaledToBoundsRect:
currentScreenScale
initWithLayout:canvas:
contentsScale
finishInit
setCurrentScreenScale:
layerFrameInScaledCanvas
willBeRemoved
updateChildrenFromLayout
deviceBoundsForCellRange:
removeObjectForKey:andWait:
parentStorage
p_cellIDForHyperlinkField:
p_columnForCellID:useCache:
p_contentFrameWithCellID:
p_horizontalAlignmentTransformForHyperlinkWithColumn:cell:cellID:
p_naturalBoundsRectForHyperlinkField:cellID:column:contentFrame:horizontalAlignmentTransform:
boundsRectForSelection:columnArray:includeRuby:includePaginatedAttachments:
p_horizontalAlignmentTransformForHyperlinkWithBounds:inCell:
hyperlinkRegions
smartFieldsWithAttributeKind:intersectingRange:
hyperlinkRegionWithURL:bezierPath:
validateVisibleRect
dirtyCellRegionGatherer
setDirtyCellRegionGatherer:
isTableNameValid
setTableNameValid:
updateFromLayout
canvasVisibleRect
animationStack
deliveryStyle
shouldSuppressBackgrounds
p_getImageFrameForAnimation:
isPrinting
isDrawingIntoPDF
p_drawAnimation:inContext:
initWithSize:offset:renderBlock:
setTextureType:
setTextureOpacity:
addRenderable:forStage:
enumerateChildTexturesForDescription:passingTest:withBlock:
addFinalTexture:forStage:
setRep:
isMagicMove
setIsMagicMove:
setObjectType:
p_addTexture:forAnimationStage:isFinal:description:
p_countOfIdenticalCellsBetweenOutgoingTableInfo:incomingTableInfo:
beginTableNameForChunk:
isRecursivelyDrawingInContext
p_isTableRenderingRotated
isDrawingInFlippedContext
drawText:inContext:minSize:maxSize:anchor:flags:isFlipped:viewScale:
endTableNameForChunk:
currentAnimation
isCanvasInteractive
isClear
paintRect:inContext:
getValue:
valueWithBytes:objCType:
changingCellFillAtCellID:
didDrawCellImageFill:inCellRange:
beginTableRow:
beginTableCell:withCellID:cellHasContents:cellIsPrimary:
endTableCell:withCellID:cellHasContents:cellIsPrimary:
endTableRow:
p_drawLayoutSpace:range:inContext:
p_drawLayoutSpace:dirtyRect:inContext:
mustDrawOnMainThreadForInteractiveCanvas
isInGroup
setRecursivelyDrawingInContext:
p_drawTableNameInContext:animation:
p_lockAndDrawLayoutSpace:checkFrameHasWidthAndHeight:dirtyRect:inContext:
p_fontColorAtCellID:cell:
beginCheckboxCell:
endCheckboxCell
beginRatingCell:
endRatingCell
boundsOfLineFragmentAtIndex:
pushAnimation:
childReps
popAnimation
imageWithCGImage:
p_cellAtUnscaledPoint:
tableRepDelegateClass
magicMoveAttributeMatchPercentBetweenOutgoingObject:incomingObject:mixingTypeContext:
containerInfo
T@"NSObject<TSDContainerInfo>",R,N
searchSelectionBounds
setSearchSelectionBounds:
ratingsDragCellID
setRatingsDragCellID:
references
aspectOperationIsInProgress
zoomOperationIsInProgress
cellDragController
setCellDragController:
selectionDragAbortedOnNewSelection
setSelectionDragAbortedOnNewSelection:
visibleFillKnobs
setVisibleFillKnobs:
T{CGRect={CGPoint=dd}{CGSize=dd}},N
T{TSUCellCoord=ISBB},N
T@"TSTTableReferences",R,N
T@"TSTSelectionDragController",W,N
T@"NSSet",C,N
textFieldShouldBeginEditing:
textFieldDidBeginEditing:
textFieldShouldEndEditing:
textFieldDidEndEditing:
textFieldDidEndEditing:reason:
textField:shouldChangeCharactersInRange:replacementString:
textFieldDidChangeSelection:
textFieldShouldClear:
textFieldShouldReturn:
displayLayer:
drawLayer:inContext:
layerWillDraw:
layoutSublayersOfLayer:
actionForLayer:forKey:
hitRep:withPrecision:
attachmentCellRepForCellID:optionalCell:
hasVisibleCellWarnings
p_removeObservers
p_addObservers
asyncPostTextChangedInRange:
invalidateEditingCell
canvasBoundsForCellRange:
boundsForCellSelection:
contentsRectForCellRangeAcrossSpaces:contentsCenterInfo:canvasFrame:contentsRect:
logicalCellIDForUnscaledCanvasPoint:
naturalBoundsRectForHyperlinkField:
hyperlinkContainerRep
validateStrokesInEditingSpillingTextRange
isFullyVisibleWithBorder:
p_updateDynamicModePropertiesForContainedTextEditing
p_updateDynamicModePropertiesForContainedTextEditingWithSpillingTextRange:
p_resetDynamicModePropertiesForContainedTextEditing
wantsActivityLine
setTableChrome:
textureForDescription:
p_alignedLayerFrameForLayoutSpace:transform:
validateFrozenHeaderCorner
validateFrozenHeaderRows
validateFrozenHeaderColumns
validateFrozenHeaderTableBodyMask
invalidateFrozenHeaders
p_drawBackgroundFillInLayoutSpace:gridRange:context:
p_drawFinalElements:inContext:
canDrawInBackgroundDuringScroll
canDrawInParallel
p_manageEmptyPivotMessage
p_scaledCanvasFrame
p_positionEmptyPivotMessage
p_deleteEmptyPivotMessage
p_drawingCheckboxOrRatingInCell:cellID:
p_drawCheckboxOrRatingInContext:viewScale:contentFrame:cell:cellID:
p_drawGroupingArrowInContext:contentFrame:cell:cellID:groupingArrowState:alignedClipFrame:verticalAlignment:wpColumn:
tappedControlCellAtUnscaledPoint:
tappedStockCellAtUnscaledPoint:
tableRepIsBeingRemovedFromBackgroundLayout
setTableRepIsBeingRemovedFromBackgroundLayout:
animationController
setAnimationController:
delegate
tableChrome
canvasReferenceController
isZoomToEditOperationInProgress
shouldRepositionStockPopover
setShouldRepositionStockPopover:
zoomToEditOperationIsInProgress
setZoomToEditOperationIsInProgress:
setAspectOperationIsInProgress:
setZoomOperationIsInProgress:
zoomToEditVisibleCellRange
setZoomToEditVisibleCellRange:
cellEditingMaskLayers
setCellEditingMaskLayers:
findSelectionHighlightLayer
setFindSelectionHighlightLayer:
_tableRepIsBeingRemovedFromBackgroundLayout
_selectionDragAbortedOnNewSelection
_isZoomToEditOperationInProgress
_tableNameValid
_shouldRepositionStockPopover
_zoomToEditOperationIsInProgress
_aspectOperationIsInProgress
_zoomOperationIsInProgress
_recursivelyDrawingInContext
_ratingsDragCellID
_cellDragController
_visibleFillKnobs
_animationController
_delegate
_tableChrome
_canvasReferenceController
_currentScreenScale
_dirtyCellRegionGatherer
_animationStack
_cellEditingMaskLayers
_findSelectionHighlightLayer
_zoomToEditVisibleCellRange
_searchSelectionBounds
tableNameValid
TB,N,GisTableNameValid,V_tableNameValid
TB,N,V_shouldRepositionStockPopover
TB,N,V_zoomToEditOperationIsInProgress
TB,N,V_aspectOperationIsInProgress
TB,N,V_zoomOperationIsInProgress
Td,N,V_currentScreenScale
T@"TSTCellRegionGatherer",&,N,V_dirtyCellRegionGatherer
recursivelyDrawingInContext
TB,N,GisRecursivelyDrawingInContext,V_recursivelyDrawingInContext
T@"NSMutableArray",R,N,V_animationStack
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_zoomToEditVisibleCellRange
TB,R,N,V_dragByHandleOnly
T@"NSMutableArray",&,N,V_cellEditingMaskLayers
T@"CAShapeLayer",&,N,V_findSelectionHighlightLayer
TB,V_tableRepIsBeingRemovedFromBackgroundLayout
T@"TSTLayoutEngine",R,N
T@"<TSTTableAnimationController>",W,N,V_animationController
T@"<TSTTableRepDelegate>",R,N,V_delegate
T{CGAffineTransform=dddddd},R,N
T@"<TSTTableChromeProvider>",R,N,V_tableChrome
T@"<TSTCanvasReferenceController>",R,W,N,V_canvasReferenceController
T@"TSTCellSelection",R,N
TB,R,N,V_isZoomToEditOperationInProgress
T@"TSTAnimation",R,N
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_searchSelectionBounds
T{TSUCellCoord=ISBB},N,V_ratingsDragCellID
T@"TSTTableReferences",R,N,V_references
T@"TSTSelectionDragController",W,N,V_cellDragController
TB,N,V_selectionDragAbortedOnNewSelection
TB,R,N,V_selectionUsesBezierPath
TB,R,N,V_selectsCellOnInitialTap
TB,R,N,V_usesSelectionChromeResizer
T@"NSSet",C,N,V_visibleFillKnobs
beginTableChunk:
endTableChunk:
beginTableLayoutSpace:
endTableLayoutSpace:
parentRep
childRepIsOnDocSetupCanvas:
childRepIsMasterDrawable:
listStartAtCharIndex:
transformInParent
drawColumn:selection:inContext:isFlipped:viewScale:renderMode:
replaceOccurrencesOfString:withString:options:range:
functionNameForLocalizedString:
functionSpecForFunctionName:
versionShippedIn
@44@0:8@16@24B32@36
@32@0:8@16@24
@72@0:8@16@24@32@40B48@52@60B68
B16@0:8
{_NSRange=QQ}48@0:8@16#24{_NSRange=QQ}32
B24@0:8@16
{_NSRange=QQ}32@0:8{_NSRange=QQ}16
Q24@0:8Q16
v24@0:8@16
v40@0:8@16{_NSRange=QQ}24
v32@0:8@16@24
v48@0:8@16@24{_NSRange=QQ}32
@16@0:8
@32@0:8{_NSRange=QQ}16
@36@0:8{_NSRange=QQ}16B32
v16@0:8
v32@0:8{_NSRange=QQ}16
v24@0:8Q16
v32@0:8Q16@24
B20@0:8C16
@24@0:8@16
@36@0:8@16C24@28
{TSKUIDStruct=QQ}16@0:8
I16@0:8
^v16@0:8
@60@0:8@16@24C32{TSKUIDStruct=QQ}36@52
@36@0:8r^v16@24C32
v28@0:8^v16B24
v32@0:8@16B24B28
@32@0:8C16C20r^{TSKUIDStruct=QQ}24
@20@0:8C16
@52@0:8@16C24Q28Q36^{TSUPreserveFlags=C}44
v36@0:8@16@24C32
v28@0:8@16C24
v32@0:8@16C24C28
@56@0:8r^{TSKUIDStruct=QQ}16I24@28C36@40^Q48
v44@0:8r^{TSKUIDStruct=QQ}16@24C32@36
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}16@0:8
{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}16@0:8
v24@0:8@?16
v24@0:8r^{TSKUIDStruct=QQ}16
B24@0:8r^{TSKUIDStruct=QQ}16
@32@0:8@16S24B28
@20@0:8B16
@36@0:8B16@20S28B32
{TSKUIDStruct=QQ}44@0:8@16q24C32@36
@36@0:8B16@20q28
v32@0:8^B16@?24
v36@0:8C16^B20@?28
v28@0:8C16@?20
v40@0:8C16C20^B24@?32
v32@0:8C16C20@?24
@24@0:8r^{TSKUIDStruct=QQ}16
@28@0:8r^{TSKUIDStruct=QQ}16C24
C16@0:8
{TSKUIDStruct="_lower"Q"_upper"Q}
@"TSCECellValue"
@"TSTGroupValueTuple"
@"TSTGroupBy"
{unordered_map<TSKUIDStruct, TSTAggNode *, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSTAggNode *>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
@"NSMutableDictionary"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
{TSUIndexSet="_isEmpty"b1"_hasSingleRange"b1"_singleRange"{TSUIndexRange="_begin"q"_end"q}"_multipleRanges"^{?}}
@"TSTGroupNode"
@"TSTGroupNodeFormatManager"
{unordered_map<TSKUIDStruct, TSTGroupNode *, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSTGroupNode *>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
@"TSCEMutableUIDSet"
@32@0:8@16{TSUCellCoord=ISBB}24
@32@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
{_NSRange=QQ}16@0:8
@84@0:8@16@24^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}32^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}40@48q56{_NSRange=QQ}64B80
@84@0:8@16@24{TSUCellCoord=ISBB}32{TSUCellCoord=ISBB}40@48q56{_NSRange=QQ}64B80
@64@0:8@16@24{TSUCellCoord=ISBB}32{TSUCellCoord=ISBB}40@48q56
@56@0:8@16@24{TSUCellCoord=ISBB}32{TSUCellCoord=ISBB}40@48
@56@0:8@16@24{TSUCellCoord=ISBB}32{TSUCellCoord=ISBB}40q48
@48@0:8@16@24{TSUCellCoord=ISBB}32{TSUCellCoord=ISBB}40
@64@0:8@16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24q40{TSUCellCoord=ISBB}48{TSUCellCoord=ISBB}56
@32@0:8@16q24
@40@0:8@16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24
@40@0:8@16{TSUCellCoord=ISBB}24q32
@32@0:8@16I24I28
@32@0:8@16S24I28
@40@0:8@16q24I32I36
@40@0:8@16@24{TSUColumnRowOffset=ii}32
{TSUCellCoord=ISBB}16@0:8
{TSUCellCoord=ISBB}24@0:8@16
@32@0:8r^v16@24
v32@0:8^v16@24
@56@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16@32q40{TSUCellCoord=ISBB}48
@64@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16@32{TSUCellCoord=ISBB}40{TSUCellCoord=ISBB}48q56
@28@0:8@16B24
v32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
v32@0:8q16I24I28
@24@0:8^{_NSZone=}16
B24@0:8{TSUCellCoord=ISBB}16
B24@0:8o^C16
q16@0:8
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16@0:8
v48@0:8{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
@"TSTTableInfo"
@"TSTCellUIDRegion"
@"TSTCellRegion"
{_NSRange="location"Q"length"Q}
{TSKUIDStructCoord="_column"{TSKUIDStruct="_lower"Q"_upper"Q}"_row"{TSKUIDStruct="_lower"Q"_upper"Q}}
{RefTypeHolder<TSCERangeRef, 0>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}56@0:8{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}16@48
{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}56@0:8{RefTypeHolder<TSCERangeRef, 0>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}16@48
{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}32@0:8@16@24
{RefTypeHolder<TSCERangeRef, 0>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}32@0:8@16@24
{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}40@0:8@16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24^{TSUPreserveFlags=C}32
{TSUCellCoord=ISBB}40@0:8@16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24^{TSUPreserveFlags=C}32
@24@0:8@"TSCECalculationEngine"16
{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}32@0:8@"NSString"16@"TSCEReferenceParsingContext"24
{RefTypeHolder<TSCERangeRef, 0>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}32@0:8@"NSString"16@"TSCEReferenceParsingContext"24
{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}40@0:8@"NSString"16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24^{TSUPreserveFlags=C}32
{TSUCellCoord=ISBB}40@0:8@"NSString"16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24^{TSUPreserveFlags=C}32
@"TSCECategoryRef"32@0:8@"NSString"16@"TSCEReferenceParsingContext"24
@"TSCECategoryRef"24@0:8@"TSCEReferenceParsingContext"16
@"TSCEWrappedRangeRef"24@0:8@"TSCEReferenceParsingContext"16
@"TSCECellTractRef"24@0:8@"TSCEReferenceParsingContext"16
{TSUChromeCellCoord={TSUCellCoord=ISBB}}48@0:8@16^{TSCETableResolver=^^?}24^{TSUPreserveFlags=C}32^@40
{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}56@0:8@16^{TSCETableResolver=^^?}24@32^{TSCETableResolver=^^?}40@48
B48@0:8@16^@24^@32^@40
{TSKUIDStruct=QQ}64@0:8@16@24@32@40^{TSUPreserveFlags=C}48^Q56
@48@0:8@16@24Q32@40
@"TSCECalculationEngine"
@"NSCharacterSet"
B32@0:8{TSKUIDStruct=QQ}16
v32@0:8r^{TSKUIDStruct=QQ}16r^{TSKUIDStruct=QQ}24
q24@0:8@16
q32@0:8@16@24
@32@0:8d16@24
q32@0:8@16@"<TSDMixingTypeContext>"24
@"NSArray"16@0:8
@20@0:8S16
@20@0:8I16
@"TSTStrokeLayer"20@0:8S16
@"TSTStrokeLayer"20@0:8I16
@"TSTTableStyle"16@0:8
v24@0:8@"TSTTableStyle"16
@"TSTCellStyle"16@0:8
v24@0:8@"TSTCellStyle"16
@"TSWPParagraphStyle"16@0:8
v24@0:8@"TSWPParagraphStyle"16
@"TSWPShapeStyle"16@0:8
v24@0:8@"TSWPShapeStyle"16
@"TSDStroke"16@0:8
{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16@0:8
@32@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16o^B24
{TSUModelRowIndex=I}16@0:8
{TSUModelColumnIndex=S}16@0:8
@"TSWPParagraphStyle"32@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16o^B24
v24@0:8@?<v@?@"TSTCell"{TSUCellCoord=ISBB}^B>16
@72@0:8@16{TSKUIDStruct=QQ}24@40@48@56@64
@64@0:8@16r^v24r^v32@40@48@56
@56@0:8@16I24I28@32@40@48
@52@0:8@16@24@32@40B48
@60@0:8@16@24@32@40B48q52
@56@0:8@16@24@32@40@48
v38@0:8r^v16r^v24{TSUModelRowIndex=I}32{TSUModelColumnIndex=S}36
v40@0:8@16@24@32
v48@0:8@16@24@32@40
C18@0:8{TSUModelColumnIndex=S}16
B24@0:8Q16
{?=II}16@0:8
v20@0:8B16
d16@0:8
v24@0:8d16
v20@0:8{TSUModelRowIndex=I}16
v18@0:8{TSUModelColumnIndex=S}16
i16@0:8
@24@0:8{TSUModelRowIndex=I}16C20
@22@0:8{TSUModelColumnIndex=S}16C18
v32@0:8{TSKUIDStruct=QQ}16
{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}24@0:8Q16
Q24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
Q20@0:8{TSUModelRowIndex=I}16
Q18@0:8{TSUModelColumnIndex=S}16
@32@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
i32@0:8o@16Q24
i32@0:8o@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24
B24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
i36@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24B32
i32@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24
@24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
v40@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24@32
i48@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24B32B36@40
i40@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24B32B36
i24@0:8@16
i32@0:8@16B24B28
@32@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16^B24
C24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
@32@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16@24
i24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
i28@0:8@16{TSUModelRowIndex=I}24
@28@0:8{TSUModelRowIndex=I}16o^B20
i26@0:8@16{TSUModelColumnIndex=S}24
@26@0:8{TSUModelColumnIndex=S}16o^B18
@36@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16B24o^Q28
@24@0:8Q16
d28@0:8{TSUModelRowIndex=I}16o^B20
d26@0:8{TSUModelColumnIndex=S}16o^B18
v28@0:8d16{TSUModelRowIndex=I}24
v26@0:8d16{TSUModelColumnIndex=S}24
d24@0:8Q16
{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
i52@0:8{_NSRange=QQ}16r^v32@40B48
i42@0:8{TSUModelColumnIndex=S}16r^v18@26Q34
i48@0:8{TSUModelRowIndex=I}16r^v20@28Q36B44
v24@0:8{TSUModelRowIndex=I}16{TSUModelRowIndex=I}20
v20@0:8{TSUModelColumnIndex=S}16{TSUModelColumnIndex=S}18
v36@0:8{_NSRange=QQ}16{TSUModelRowIndex=I}32
v34@0:8{_NSRange=QQ}16{TSUModelColumnIndex=S}32
C20@0:8{TSUModelRowIndex=I}16
v28@0:8C16r^{TSUModelRowIndex=I}20
v28@0:8C16r^{TSUModelColumnIndex=S}20
@28@0:8{TSUCellCoord=ISBB}16B24
@28@0:8S16o^q20
@20@0:8{TSUModelRowIndex=I}16
@24@0:8{TSUCellCoord=ISBB}16
v32@0:8@16I24i28
v32@0:8@16S24i28
v48@0:8@16I24i28{TSTSimpleRange=qQ}32
v48@0:8@16S24i28{TSTSimpleRange=qQ}32
@32@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24
i36@0:8o^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16{TSUModelCellCoord={TSUCellCoord=ISBB}}24B32
i40@0:8o^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16{TSUModelCellCoord={TSUCellCoord=ISBB}}24B32B36
v28@0:8@16B24
v36@0:8r^v16@24B32
v36@0:8@16B24B28B32
v36@0:8@16{TSUColumnRowOffset=ii}24B32
{TSCECellCoordSet={map<unsigned short, TSUIndexSet, std::less<unsigned short>, std::allocator<std::pair<const unsigned short, TSUIndexSet>>>={__tree<std::__value_type<unsigned short, TSUIndexSet>, std::__map_value_compare<unsigned short, std::__value_type<unsigned short, TSUIndexSet>, std::less<unsigned short>, true>, std::allocator<std::__value_type<unsigned short, TSUIndexSet>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned short, TSUIndexSet>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<unsigned short, std::__value_type<unsigned short, TSUIndexSet>, std::less<unsigned short>, true>>=Q}}}}16@0:8
v24@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16
v32@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{TSUModelCellCoord={TSUCellCoord=ISBB}}24@0:8@16
v40@0:8@16Q24@?32
B32@0:8{TSUCellCoord=ISBB}16^@24
B24@0:8^@16
B32@0:8^@16^B24
v40@0:8@16B24B28@32
S16@0:8
v20@0:8S16
@"TSTHiddenStateFormulaOwner"
@"TSTStrokeSidecar"
{TSCECellRefSet="_coordsForOwnerUid"{map<TSKUIDStruct, TSCECellCoordSet, std::less<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSCECellCoordSet>>>="__tree_"{__tree<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>, std::allocator<std::__value_type<TSKUIDStruct, TSCECellCoordSet>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>>="__value_"Q}}}}
{vector<TSTCellValueType, std::allocator<TSTCellValueType>>="__begin_"^C"__end_"^C"__end_cap_"{__compressed_pair<TSTCellValueType *, std::allocator<TSTCellValueType>>="__value_"^C}}
{map<unsigned long, TSTGroupingType, std::less<unsigned long>, std::allocator<std::pair<const unsigned long, TSTGroupingType>>>="__tree_"{__tree<std::__value_type<unsigned long, TSTGroupingType>, std::__map_value_compare<unsigned long, std::__value_type<unsigned long, TSTGroupingType>, std::less<unsigned long>, true>, std::allocator<std::__value_type<unsigned long, TSTGroupingType>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned long, TSTGroupingType>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<unsigned long, std::__value_type<unsigned long, TSTGroupingType>, std::less<unsigned long>, true>>="__value_"Q}}}
{TSUModelColumnIndex="_column"S}
{TSUModelRowIndex="_row"I}
@"TSTTableDataStore"
@"NSString"
@"TSTTableStylePreset"
@"TSTTableStyle"
@"TSTTableTranslator"
@"TSTCellStyle"
@"TSWPParagraphStyle"
@"TSWPShapeStyle"
@"TSTCellDictionary"
@"TSTConcurrentMutableCellUIDSet"
@"TSTConditionalStyleFormulaOwner"
@"TSTMergeOwner"
@"TSTCategoryOwner"
@"TSTPivotOwner"
@"TSTHiddenStatesOwner"
@"TSCEHauntedOwner"
@"TSTTableSortOrder"
@"TSTSortRuleReferenceTracker"
@"TSTColumnRowUIDMap"
@"TSTCellWillChangeDistributor"
@"TSWPStorage"
@"NSMapTable"
@"TSTStructuredTextImportRecord"
@"TSTTableFilterSet"
@"TSTPencilAnnotationOwner"
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16@0:8
@"TSTCell"16@0:8
@"TSTCellFormulaSpec"16@0:8
v24@0:8{TSUCellCoord=ISBB}16
{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}
@"TSTCell"
@"TSTCellFormulaSpec"
{TSUCellRect="origin"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}"size"{?="numberOfColumns"I"numberOfRows"I}}
@36@0:8@16B24@28
v28@0:8@16I24
@28@0:8I16o^I20
^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}24@0:8S16I20
q40@0:8@16S24I28^{?=IIIIIIIIIS}32
i24@0:8S16I20
@24@0:8S16I20
v28@0:8S16I20S24
v24@0:8I16I20
v28@0:8I16I20B24
@24@0:8I16I20
v32@0:8@16I24B28
@"NSPointerArray"
v32@0:8d16{TSUCellCoord=ISBB}24
{vector<std::pair<TSUCellCoord, double>, std::allocator<std::pair<TSUCellCoord, double>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::pair<TSUCellCoord, double> *, std::allocator<std::pair<TSUCellCoord, double>>>="__value_"^v}}
{unordered_map<unsigned short, double, std::hash<unsigned short>, std::equal_to<unsigned short>, std::allocator<std::pair<const unsigned short, double>>>="__table_"{__hash_table<std::__hash_value_type<unsigned short, double>, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, double>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, double>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>, std::allocator<std::__hash_value_type<unsigned short, double>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, double>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, double>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, double>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, double>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, double>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, double>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, double>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned short, double>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, double>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, double>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, double>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>>="__value_"f}}}
B40@0:8d16d24d32
d20@0:8I16
@40@0:8d16d24d32
@44@0:8I16d20d28d36
d32@0:8d16^B24
d32@0:8@16@24
@"NSString"24@0:8@"<TSCEReferenceResolving>"16
@"NSString"24@0:8@"<TSCEResolverContainer>"16
@"<TSCEResolverContainer>"28@0:8@"NSString"16B24
@"NSArray"24@0:8@"NSString"16
@"<TSCEReferenceResolving>"32@0:8@"NSString"16@"<TSCEReferenceResolving>"24
@"<TSCEReferenceResolving>"32@0:8@"NSString"16@"NSString"24
@"NSEnumerator"16@0:8
@"NSEnumerator"24@0:8Q16
@"NSString"24@0:8@"<TSKModel>"16
v24@0:8@"<TSKModelVisitor>"16
v28@0:8@16S24
v28@0:8@"TSCECalculationEngine"16S24
v24@0:8@"TSCECalculationEngine"16
@"TSPObject<TSCECalculationEngineRegistration>"16@0:8
@"<TSCEFormulaOwning>"16@0:8
I24@0:8Q16
@40@0:8q16{CGPoint=dd}24
@48@0:8q16@24@32@40
@52@0:8q16@24@32@40B48
@40@0:8{TSKUIDStruct=QQ}16@32
v40@0:8@16@24Q32
v48@0:8@16@24Q32Q40
B32@0:8@16@24
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}44@0:8Q16{?=II}24I32I36I40
Q40@0:8{TSUCellCoord=ISBB}16I24I28I32I36
@24@0:8@"TSPObjectContext"16
v24@0:8@"TSDInfoGeometry"16
v24@0:8@"NSObject<TSDInfo>"16
@"TSDInfoGeometry"16@0:8
@"NSObject<TSDInfo>"16@0:8
@"TSPObject<TSDOwningAttachment>"16@0:8
v24@0:8@"TSPObject<TSDOwningAttachment>"16
B24@0:8@"NSObject<TSDInfo>"16
@"<TSDInfoUUIDPathPrefixComponentsProvider>"16@0:8
@"TSKCollaboratorCursor"24@0:8@"TSKSelectionPath"16
@24@0:8@?16
@"TSKSearch"24@0:8@?<v@?@"<TSKSearchReference>">16
v24@0:8@?<v@?@"<TSKSearchReference>">16
v24@0:8@"TSKSearch"16
@"TSKCommand"24@0:8@"NSObject<TSKSearchReplaceProvider>"16
v40@0:8@"NSString"16@"TSSTheme"24Q32
@"NSSet"16@0:8
v24@0:8@?<@"TSSStyle"@?@"TSSStyle">16
v24@0:8@"TSSStylesheet"16
{TSKUIDStruct=QQ}20@0:8S16
{TSKUIDStruct=QQ}20@0:8I16
S32@0:8{TSKUIDStruct=QQ}16
I32@0:8{TSKUIDStruct=QQ}16
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}24@0:8@16
@24@0:8r^v16
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}32@0:8{_NSRange=QQ}16
{_NSRange=QQ}24@0:8r^v16
r^v16@0:8
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}24@0:8r^v16
v28@0:8[16C]16I24
v28@0:8[16C]16S24
I24@0:8[16C]16
S24@0:8[16C]16
{TSKUIDStruct=QQ}28@0:8@16B24
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24@0:8r^v16
{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}}32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}16@0:8
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}24@0:8@"NSIndexSet"16
@"NSMutableIndexSet"24@0:8r^v16
@"NSIndexSet"24@0:8r^v16
@"TSCEMutableUIDSet"28@0:8@"NSIndexSet"16B24
@"NSMutableIndexSet"28@0:8@"TSCEUIDSet"16B24
@"NSMutableIndexSet"36@0:8@"TSCEUIDSet"16B24@"TSCEMutableUIDSet"28
{TSKUIDStruct=QQ}28@0:8@"TSCEUIDSet"16B24
B20@0:8I16
B20@0:8S16
I20@0:8I16
S20@0:8S16
B32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
I32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
@32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
B36@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16C32
B24@0:8I16C20
B24@0:8S16C20
C20@0:8I16
C20@0:8S16
@"NSIndexSet"32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
@"NSMutableIndexSet"32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
@"NSIndexSet"24@0:8@"TSTCellRegion"16
@"NSIndexSet"24@0:8@"NSIndexSet"16
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
@"TSTMergeListWrapper"32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
@"TSTMergeListWrapper"24@0:8@"TSTCellRegion"16
@"TSTCellRegion"24@0:8@"TSTCellRegion"16
@56@0:8@16@24I32I36@40@48
@48@0:8@16@24I32I36@40
@40@0:8@16@24I32I36
@40@0:8@16@24@32
@64@0:8@16@24{TSUCellRect={TSUCellCoord=ISBB}{?=II}}32{_NSRange=QQ}48
@72@0:8@16@24{TSUCellRect={TSUCellCoord=ISBB}{?=II}}32{_NSRange=QQ}48@64
@40@0:8@16@24{TSUCellCoord=ISBB}32
@56@0:8@16@24@32B40q44B52
v28@0:8q16B24
v40@0:8@16@24d32
v40@0:8{TSUCellCoord=ISBB}16{TSUCellCoord=ISBB}24{TSUCellCoord=ISBB}32
v32@0:8@16{TSUCellCoord=ISBB}24
v20@0:8I16
@18@0:8{TSUModelColumnIndex=S}16
Q32@0:8Q16@24
@28@0:8B16@20
Q24@0:8@16
v48@0:8@16@24@32d40
v24@0:8q16
v32@0:8{CGSize=dd}16
v32@0:8{CGPoint=dd}16
v32@0:8d16d24
v28@0:8{TSUColumnRowOffset=ii}16B24
B32@0:8@16@?24
i32@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24
i24@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
v40@0:8@16{TSUCellCoord=ISBB}24@32
@32@0:8{TSUCellCoord=ISBB}16@24
v36@0:8i16@20{TSUCellCoord=ISBB}28
v48@0:8{TSUCellCoord=ISBB}16^B24^@32^i40
v64@0:8@16{TSUCellCoord=ISBB}24^B32^i40^i48^@56
v20@0:8i16
@18@0:8{TSUViewColumnIndex=S}16
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24@0:8Q16
Q24@0:8{TSUCellCoord=ISBB}16
Q20@0:8I16
Q20@0:8S16
Q48@0:8{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
i32@0:8@16Q24
i32@0:8o@16{TSUCellCoord=ISBB}24
i36@0:8@16{TSUCellCoord=ISBB}24B32
i32@0:8@16{TSUCellCoord=ISBB}24
B24@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
v36@0:8@16{TSUCellCoord=ISBB}24B32
i48@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24B32B36@40
i40@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24B32B36
v48@0:8@16{TSUViewCellCoord={TSUCellCoord=ISBB}}24@32@40
@36@0:8@16B24B28B32
i40@0:8@16{TSUCellCoord=ISBB}24@32
C24@0:8{TSUCellCoord=ISBB}16
C24@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
i32@0:8@16r^{TSKUIDStruct=QQ}24
@28@0:8I16o^B20
@28@0:8S16o^B20
@36@0:8{TSUCellCoord=ISBB}16B24o^Q28
@32@0:8{TSUCellCoord=ISBB}16o^B24
@32@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16o^B24
@28@0:8S16@20
@40@0:8{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}16o^B32
{TSUCellCoord=ISBB}24@0:8{TSUCellCoord=ISBB}16
d28@0:8I16o^B20
d28@0:8S16o^B20
v28@0:8d16S24
v28@0:8d16I24
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24@0:8{TSUCellCoord=ISBB}16
v28@0:8S16I20B24
i44@0:8S16r^v20@28Q36
i44@0:8I16r^v20@28Q36
i48@0:8I16r^v20@28Q36B44
v24@0:8S16I20
v36@0:8{_NSRange=QQ}16I32
v36@0:8{_NSRange=QQ}16S32
@24@0:8q16
v32@0:8@16@?24
{vector<TSUCellRect, std::allocator<TSUCellRect>>=^{TSUCellRect}^{TSUCellRect}{__compressed_pair<TSUCellRect *, std::allocator<TSUCellRect>>=^{TSUCellRect}}}32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
{vector<TSUCellRect, std::allocator<TSUCellRect>>=^{TSUCellRect}^{TSUCellRect}{__compressed_pair<TSUCellRect *, std::allocator<TSUCellRect>>=^{TSUCellRect}}}24@0:8@16
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16@0:8
i36@0:8o^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16{TSUCellCoord=ISBB}24B32
{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}24@0:8I16I20
{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}24@0:8S16S20
@32@0:8@16^@24
B56@0:8{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}16o^{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}32o^{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}40o^{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}48
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24@0:8{TSUCellCoord=ISBB}16
{TSUCellCoord=ISBB}48@0:8{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
B40@0:8@16^v24^v32
v40@0:8@16^v24^v32
@36@0:8@16B24^B28
@52@0:8{vector<TSKUIDStructCoord, std::allocator<TSKUIDStructCoord>>=^{TSKUIDStructCoord}^{TSKUIDStructCoord}{__compressed_pair<TSKUIDStructCoord *, std::allocator<TSKUIDStructCoord>>=^{TSKUIDStructCoord}}}16B40^B44
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}28@0:8{TSUCellCoord=ISBB}16B24
i32@0:8o@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24
i36@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24B32
@56@0:8{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16o^B48
B20@0:8B16
v96@0:8@16{TSKUIDStruct=QQ}24d40{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}}48
v88@0:8@16@24@32q40@48{TSKUIDStruct=QQ}56{TSKUIDStruct=QQ}72
{TSUChromeColumnIndex=S}16@0:8
{TSUChromeRowIndex=I}16@0:8
S24@0:8@16
@28@0:8C16@?20
@28@0:8C16@20
@28@0:8C16r^v20
@24@0:8C16C20
{_NSRange=QQ}20@0:8I16
q24@0:8{TSUCellCoord=ISBB}16
B40@0:8{TSKUIDStruct=QQ}16q32
C24@0:8r^{TSKUIDStruct=QQ}16
C36@0:8{TSKUIDStruct=QQ}16C32
v40@0:8C16{TSKUIDStruct=QQ}20C36
d20@0:8C16
v28@0:8d16C24
@28@0:8i16@20
v32@0:8r^v16@24
{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}}16@0:8
v64@0:8{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}}16
@"TSTTableModel"
@"TSTConditionalStyleSet"
@"TSTTablePartitioner"
@"TSTLayoutEngine"
@"TSTSummaryModel"
@"NSDictionary"
@"TSTLayoutHint"
@"TSTCategoryOrder"
@"TSTPivotRowColumnOrder"
@"TSTHiddenStates"
@"TSCECoordMapper"
@"TSTArchivedLayoutEngineBundle"
{TSKUIDStructTract="_colIdList"{TSKUIDStructVectorTemplate<TSKUIDStruct>="__begin_"^{TSKUIDStruct}"__end_"^{TSKUIDStruct}"__end_cap_"{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>="__value_"^{TSKUIDStruct}}}"_rowIdList"{TSKUIDStructVectorTemplate<TSKUIDStruct>="__begin_"^{TSKUIDStruct}"__end_"^{TSKUIDStruct}"__end_cap_"{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>="__value_"^{TSKUIDStruct}}}}
B20@0:8i16
@20@0:8i16
f20@0:8i16
i20@0:8i16
d20@0:8i16
v40@0:8@16@24{TSUCellCoord=ISBB}32
v56@0:8@16@24@32Q40@48
@64@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24@32@40@48@56
@80@0:8@16@24r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}32@40@48@56@64@72
@52@0:8@16Q24B32@36@44
@48@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16Q32Q40
v56@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16Q32Q40@?48
{vector<TSUCellRect, std::allocator<TSUCellRect>>="__begin_"^{TSUCellRect}"__end_"^{TSUCellRect}"__end_cap_"{__compressed_pair<TSUCellRect *, std::allocator<TSUCellRect>>="__value_"^{TSUCellRect}}}
@36@0:8@16r^v24C32
@44@0:8@16r^{TSKUIDStruct=QQ}24r^v32C40
v20@0:8C16
v28@0:8r^v16C24
{RefTypeHolder<TSCERangeRef, 0>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}16@0:8
{RefTypeHolder<TSCERangeRef, 1>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}16@0:8
{vector<RefTypeHolder<TSCERangeRef, 0>, std::allocator<RefTypeHolder<TSCERangeRef, 0>>>=^v^v{__compressed_pair<RefTypeHolder<TSCERangeRef, 0> *, std::allocator<RefTypeHolder<TSCERangeRef, 0>>>=^v}}16@0:8
{vector<RefTypeHolder<TSCERangeRef, 1>, std::allocator<RefTypeHolder<TSCERangeRef, 1>>>=^v^v{__compressed_pair<RefTypeHolder<TSCERangeRef, 1> *, std::allocator<RefTypeHolder<TSCERangeRef, 1>>>=^v}}16@0:8
{TSUViewCellCoord={TSUCellCoord=ISBB}}16@0:8
{TSUModelCellCoord={TSUCellCoord=ISBB}}16@0:8
{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}16@0:8
v48@0:8{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}16
@"TSCECellTractRef"
@"TSTColumnRowUIDMapper"
{RefTypeHolder<TSCERangeRef, 2>="_ref"{TSCERangeRef="range"{TSCERangeCoordinate="_topLeft"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}"_bottomRight"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}}"_tableUID"{TSKUIDStruct="_lower"Q"_upper"Q}}}
v24@0:8@?<v@?@"<TSTCellIteratorData>"^B>16
@"<TSTCellIteratorData>"16@0:8
@"TSTTableInfo"16@0:8
@72@0:8@16@24@32Q40Q48{TSUCellRect={TSUCellCoord=ISBB}{?=II}}56
@64@0:8@16@24Q32Q40{TSUCellRect={TSUCellCoord=ISBB}{?=II}}48
@40@0:8@16Q24Q32
@56@0:8@16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24Q40Q48
@48@0:8@16@24Q32Q40
{unordered_map<unsigned short, TSUCellRect, std::hash<unsigned short>, std::equal_to<unsigned short>, std::allocator<std::pair<const unsigned short, TSUCellRect>>>="__table_"{__hash_table<std::__hash_value_type<unsigned short, TSUCellRect>, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, TSUCellRect>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, TSUCellRect>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>, std::allocator<std::__hash_value_type<unsigned short, TSUCellRect>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSUCellRect>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSUCellRect>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSUCellRect>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSUCellRect>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSUCellRect>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSUCellRect>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSUCellRect>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned short, TSUCellRect>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSUCellRect>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, TSUCellRect>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, TSUCellRect>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>>="__value_"f}}}
@"TSTMutableCellIteratorData"
@"<TSTCellRegionIterating><TSTMutableCellIteratorDataUpdating>"
@"<TSTCellRegionIterating>"
@32@0:8Q16Q24
v48@0:8@16Q24@32Q40
v56@0:8@16Q24Q32@40Q48
v40@0:8@16r^v24@32
{CGSize=dd}32@0:8@16@24
^{TSCEFunctionArgSpec=}16@0:8
v40@0:8@16{TSTCSENodeData=QQ}24
@40@0:8{TSTCSENodeData=QQ}16@32
{unordered_map<TSTExpressionNode *, TSTCSENodeData, std::hash<TSTExpressionNode *>, std::equal_to<TSTExpressionNode *>, std::allocator<std::pair<TSTExpressionNode *const, TSTCSENodeData>>>="__table_"{__hash_table<std::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, std::__unordered_map_hasher<TSTExpressionNode *, std::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, std::hash<TSTExpressionNode *>, std::equal_to<TSTExpressionNode *>, true>, std::__unordered_map_equal<TSTExpressionNode *, std::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, std::equal_to<TSTExpressionNode *>, std::hash<TSTExpressionNode *>, true>, std::allocator<std::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSTExpressionNode *, std::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, std::hash<TSTExpressionNode *>, std::equal_to<TSTExpressionNode *>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSTExpressionNode *, std::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, std::equal_to<TSTExpressionNode *>, std::hash<TSTExpressionNode *>, true>>="__value_"f}}}
Q24@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16
C18@0:8{TSUViewColumnIndex=S}16
C20@0:8{TSUViewRowIndex=I}16
Q20@0:8{TSUViewRowIndex=I}16
{TSUViewColumnIndex=S}16@0:8
{TSUViewRowIndex=I}16@0:8
C24@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16
v44@0:8{TSUViewRowIndex=I}16@?20@?28@?36
@28@0:8{TSUViewRowIndex=I}16o^B20
v42@0:8{TSUViewColumnIndex=S}16@?18@?26@?34
@26@0:8{TSUViewColumnIndex=S}16o^B18
i40@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16@?24@?32
@36@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16B24o^Q28
@32@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16o^B24
i36@0:8@16{TSUViewCellCoord={TSUCellCoord=ISBB}}24B32
i36@0:8o^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16{TSUViewCellCoord={TSUCellCoord=ISBB}}24B32
d28@0:8{TSUViewRowIndex=I}16o^B20
d26@0:8{TSUViewColumnIndex=S}16o^B18
v28@0:8d16{TSUViewRowIndex=I}24
v26@0:8d16{TSUViewColumnIndex=S}24
B24@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16
C28@0:8{TSUViewRowIndex=I}16^Q20
C26@0:8{TSUViewColumnIndex=S}16^Q18
Q18@0:8{TSUViewColumnIndex=S}16
{os_unfair_lock_s=I}16@0:8
v20@0:8{os_unfair_lock_s=I}16
@"NSIndexSet"
@24@0:8I16B20
{vector<TSTCell *, std::allocator<TSTCell *>>=^@^@{__compressed_pair<TSTCell *__strong *, std::allocator<TSTCell *>>=^@}}32@0:8^v16@?24
^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}20@0:8S16
v36@0:8S16@20^{?=IIIIIIIIIS}28
v36@0:8@16S24^{?=IIIIIIIIIS}28
q36@0:8@16S24^{?=IIIIIIIIIS}28
Q24@0:8S16I20
v28@0:8S16S20I24
v40@0:8{_NSRange=QQ}16@?32
v44@0:8{_NSRange=QQ}16B32@?36
B28@0:8S16Q20
{TSTTableTileRowBuffer="_private"{?="cellData"*"cellBufferSize"Q"allocatedCellBufferSize"Q"offsets"^S"offsetBufferCount"S"wideOffsets"B}}
@40@0:8@16@24q32
v24@0:8^v16
{vector<TSU::UUIDData<TSP::UUIDData>, std::allocator<TSU::UUIDData<TSP::UUIDData>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<TSU::UUIDData<TSP::UUIDData> *, std::allocator<TSU::UUIDData<TSP::UUIDData>>>="__value_"^v}}
@"TSCEUIDSet"
@"TSCEFormulaObject"16@0:8
@"TSCEFormulaObject"
@"TSULocale"
@"TSTStockDetails"
@32@0:8{TSKUIDStruct=QQ}16
v32@0:8@16Q24
v32@0:8Q16Q24
v32@0:8Q16q24
v24@0:8C16C20
v28@0:8C16q20
v28@0:8C16@20
@"NSArray"
v56@0:8@16@24@32@40q48
v56@0:8^v16^v24^v32@40C48B52
{vector<unsigned long, std::allocator<unsigned long>>=^Q^Q{__compressed_pair<unsigned long *, std::allocator<unsigned long>>=^Q}}20@0:8S16
q24@0:8r^{TSKUIDStruct=QQ}16
S24@0:8r^{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}16
B24@0:8r^{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}16
@24@0:8S16B20
{vector<TSTGroupNode *, std::allocator<TSTGroupNode *>>=^@^@{__compressed_pair<TSTGroupNode *__strong *, std::allocator<TSTGroupNode *>>=^@}}16@0:8
r^v24@0:8r^{TSKUIDStruct=QQ}16
{TSKUIDStruct=QQ}32@0:8r^{TSKUIDStruct=QQ}16^Q24
Q24@0:8r^{TSKUIDStruct=QQ}16
S24@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
@24@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
@28@0:8Q16B24
@32@0:8Q16@24
@40@0:8Q16B24B28@32
S32@0:8@16@24
{TSKUIDStruct=QQ}24@0:8@16
@32@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16^C24
@28@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16C24
{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}24@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
@40@0:8@16r^v24Q32
@32@0:8r^{TSKUIDStruct=QQ}16@24
@44@0:8@16@24@32C40
@48@0:8@16@24r^{TSKUIDStruct=QQ}32@40
@36@0:8@16S24@28
B32@0:8r^{TSKUIDStruct=QQ}16q24
@32@0:8r^{TSKUIDStruct=QQ}16q24
v52@0:8r^{TSKUIDStruct=QQ}16@24@32B40@44
@28@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16B24
B40@0:8@16{TSKUIDStruct=QQ}24
{vector<TSTGroupBy *, std::allocator<TSTGroupBy *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<TSTGroupBy *__strong *, std::allocator<TSTGroupBy *>>="__value_"^@}}
{TSKUIDStructVectorTemplate<TSKUIDStruct>="__begin_"^{TSKUIDStruct}"__end_"^{TSKUIDStruct}"__end_cap_"{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>="__value_"^{TSKUIDStruct}}}
{unordered_map<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
{unordered_map<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
{unordered_map<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
{vector<TSUIndexSet, std::allocator<TSUIndexSet>>="__begin_"^{TSUIndexSet}"__end_"^{TSUIndexSet}"__end_cap_"{__compressed_pair<TSUIndexSet *, std::allocator<TSUIndexSet>>="__value_"^{TSUIndexSet}}}
@"TSTGroupingColumnList"
@"TSTColumnAggregateList"
v28@0:8@16i24
v24@0:8i16i20
v24@0:8B16i20
v24@0:8f16i20
@"TSSPropertyMap"
@"TSSMutablePropertySet"
@"TSUPair"24@0:8@"TSTTableInfo"16
{vector<TSUViewCellRect, std::allocator<TSUViewCellRect>>=^{TSUViewCellRect}^{TSUViewCellRect}{__compressed_pair<TSUViewCellRect *, std::allocator<TSUViewCellRect>>=^{TSUViewCellRect}}}16@0:8
{vector<TSKUIDStructTract, std::allocator<TSKUIDStructTract>>=^{TSKUIDStructTract}^{TSKUIDStructTract}{__compressed_pair<TSKUIDStructTract *, std::allocator<TSKUIDStructTract>>=^{TSKUIDStructTract}}}16@0:8
@32@0:8@16@?24
v40@0:8q16Q24@?32
v32@0:8Q16@?24
v112@0:8@?16@?24@?32@?40@?48@?56@?64@?72@?80@?88@?96@?104
v40@0:8{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}16
@"NSMutableArray"
@88@0:8@16{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}24{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}}40
@40@0:8@16{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}24
@72@0:8@16{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}}24
v32@0:8@16{TSUViewCellCoord={TSUCellCoord=ISBB}}24
v40@0:8Q16Q24Q32
v36@0:8^v16@24B32
v32@0:8q16@?24
{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16@0:8
v32@0:8{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{TSUViewCellRect="_rect"{TSUCellRect="origin"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}"size"{?="numberOfColumns"I"numberOfRows"I}}}
{vector<TSTCell *, std::allocator<TSTCell *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<TSTCell *__strong *, std::allocator<TSTCell *>>="__value_"^@}}
{vector<TSUModelRowIndex, std::allocator<TSUModelRowIndex>>="__begin_"^{TSUModelRowIndex}"__end_"^{TSUModelRowIndex}"__end_cap_"{__compressed_pair<TSUModelRowIndex *, std::allocator<TSUModelRowIndex>>="__value_"^{TSUModelRowIndex}}}
{vector<TSUModelColumnIndex, std::allocator<TSUModelColumnIndex>>="__begin_"^{TSUModelColumnIndex}"__end_"^{TSUModelColumnIndex}"__end_cap_"{__compressed_pair<TSUModelColumnIndex *, std::allocator<TSUModelColumnIndex>>="__value_"^{TSUModelColumnIndex}}}
{vector<TSUViewRowIndex, std::allocator<TSUViewRowIndex>>="__begin_"^{TSUViewRowIndex}"__end_"^{TSUViewRowIndex}"__end_cap_"{__compressed_pair<TSUViewRowIndex *, std::allocator<TSUViewRowIndex>>="__value_"^{TSUViewRowIndex}}}
{vector<TSUViewColumnIndex, std::allocator<TSUViewColumnIndex>>="__begin_"^{TSUViewColumnIndex}"__end_"^{TSUViewColumnIndex}"__end_cap_"{__compressed_pair<TSUViewColumnIndex *, std::allocator<TSUViewColumnIndex>>="__value_"^{TSUViewColumnIndex}}}
{vector<long, std::allocator<long>>="__begin_"^q"__end_"^q"__end_cap_"{__compressed_pair<long *, std::allocator<long>>="__value_"^q}}
{vector<TSTNineKeyStructPreBNC, std::allocator<TSTNineKeyStructPreBNC>>="__begin_"^{?}"__end_"^{?}"__end_cap_"{__compressed_pair<TSTNineKeyStructPreBNC *, std::allocator<TSTNineKeyStructPreBNC>>="__value_"^{?}}}
@"NSMutableIndexSet"
@"TSKStructuredTextImportSettings"
@"NSURL"
@"NSDate"
@"NSData"
#24@0:8@16
v24@0:8i16I20
@32@0:8@16I24B28
v28@0:8I16@20
v24@0:8I16B20
{unordered_map<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *, TSTTableDataPayloadHash, TSTTableDataPayloadEqual, std::allocator<std::pair<NSObject<TSTTableDataPayloadHashing> *const, TSTTableDataObject *>>>="__table_"{__hash_table<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, std::__unordered_map_hasher<NSObject<TSTTableDataPayloadHashing> *, std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, TSTTableDataPayloadHash, TSTTableDataPayloadEqual, true>, std::__unordered_map_equal<NSObject<TSTTableDataPayloadHashing> *, std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, TSTTableDataPayloadEqual, TSTTableDataPayloadHash, true>, std::allocator<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<NSObject<TSTTableDataPayloadHashing> *, std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, TSTTableDataPayloadHash, TSTTableDataPayloadEqual, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<NSObject<TSTTableDataPayloadHashing> *, std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, TSTTableDataPayloadEqual, TSTTableDataPayloadHash, true>>="__value_"f}}}
@"NSObject<TSDContainerInfo><TSWPStorageParent>"
@"TSTTableDataListSegment"
I32@0:8@16I24B28
@28@0:8I16^B20
v40@0:8@16Q24@32
@44@0:8@16@24@32B40
I24@0:8@16
@76@0:8i16@20{CGAffineTransform=dddddd}28
@"TSKSelection"16@0:8
v24@0:8@"TSKSelection"16
@"TSKSelection"24@0:8@"TSKSelection"16
@"TSTCellSelection"
@76@0:8{TSKUIDStruct=QQ}16{TSKUIDStruct=QQ}32C48i52C56{TSKUIDStruct=QQ}60
@40@0:8{TSKUIDStruct=QQ}16C32i36
@36@0:8{TSKUIDStruct=QQ}16C32
@56@0:8{TSKUIDStruct=QQ}16C32C36{TSKUIDStruct=QQ}40
@72@0:8{TSKUIDStruct=QQ}16{TSKUIDStruct=QQ}32C48C52{TSKUIDStruct=QQ}56
v24@0:8[16C]16
{UUIDData<TSP::UUIDData>=""(?="_uuid"[16C]"_cfuuid"{?="byte0"C"byte1"C"byte2"C"byte3"C"byte4"C"byte5"C"byte6"C"byte7"C"byte8"C"byte9"C"byte10"C"byte11"C"byte12"C"byte13"C"byte14"C"byte15"C}""{?="_lower"Q"_upper"Q})}
@56@0:8r^v16r^v24Q32@40@48
v32@0:8^v16^v24
v40@0:8^v16^v24@32
@28@0:8I16^{_NSRange=QQ}20
B40@0:8{TSUCellCoord=ISBB}16@24^@32
{multimap<TSUCellCoord, std::tuple<unsigned int, unsigned long, TSTCellStorage *>, std::less<TSUCellCoord>, std::allocator<std::pair<const TSUCellCoord, std::tuple<unsigned int, unsigned long, TSTCellStorage *>>>>={__tree<std::__value_type<TSUCellCoord, std::tuple<unsigned int, unsigned long, TSTCellStorage *>>, std::__map_value_compare<TSUCellCoord, std::__value_type<TSUCellCoord, std::tuple<unsigned int, unsigned long, TSTCellStorage *>>, std::less<TSUCellCoord>, true>, std::allocator<std::__value_type<TSUCellCoord, std::tuple<unsigned int, unsigned long, TSTCellStorage *>>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSUCellCoord, std::tuple<unsigned int, unsigned long, TSTCellStorage *>>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<TSUCellCoord, std::__value_type<TSUCellCoord, std::tuple<unsigned int, unsigned long, TSTCellStorage *>>, std::less<TSUCellCoord>, true>>=Q}}}16@0:8
[16@"TSTTableTileGroup"]
@40@0:8r^v16@24@32
@48@0:8I16C20d24{TSKUIDStruct=QQ}32
v24@0:8C16I20
v28@0:8I16Q20
[16@"TSTTableHeaderStorageBucket"]
@34@0:8Q16{TSUModelColumnIndex=S}24@26
@32@0:8@16Q24
@40@0:8@16{_NSRange=QQ}24
@"TSUSparseArray"
Q24@0:8r^{TSUCellCoord=ISBB}16
{TSUCellCoord=ISBB}24@0:8Q16
@32@0:8r^v16r^{TSKUIDStruct=QQ}24
{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}32@0:8@16r^{TSUModelCellCoord={TSUCellCoord=ISBB}}24
{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}36@0:8@16r^{TSUModelCellCoord={TSUCellCoord=ISBB}}24B32
{TSKUIDStruct=QQ}32@0:8@16r^{TSUModelCellCoord={TSUCellCoord=ISBB}}24
@48@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16Q32r^{TSKUIDStruct=QQ}40
{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}28@0:8Q16B24
{TSKUIDStruct=QQ}24@0:8Q16
@40@0:8r^{TSKUIDStruct=QQ}16r^v24@32
v28@0:8B16Q20
@"<TSWPStyleProvider>"16@0:8
@"<TSWPStyleProvider>"24@0:8@"TSWPLayout"16
B24@0:8@"TSWPLayout"16
@28@0:8@16I24
d32@0:8Q16d24
d56@0:8Q16d24@32^d40^d48
{UIEdgeInsets=dddd}24@0:8@16
d56@0:8Q16d24@"<TSWPLayoutTarget>"32^d40^d48
{UIEdgeInsets=dddd}24@0:8@"<TSWPLayoutTarget>"16
@"TSWPPadding"16@0:8
@"TSWPPadding"24@0:8@"<TSWPLayoutTarget>"16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16
{CGRect={CGPoint=dd}{CGSize=dd}}40@0:8@16{CGSize=dd}24
d24@0:8@16
{CGSize=dd}16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}60@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48B56
Q24@0:8@"TSWPLayout"16
i24@0:8@"TSWPLayout"16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@"TSWPLayout"16
{CGRect={CGPoint=dd}{CGSize=dd}}40@0:8@"TSWPLayout"16{CGSize=dd}24
@"<NSFastEnumeration>"24@0:8@"TSWPLayout"16
#24@0:8@"TSWPLayout"16
v24@0:8@"TSWPLayout"16
@"NSSet"24@0:8@"TSWPLayout"16
d24@0:8@"TSWPLayout"16
Q24@0:8@"TSWPAttachment"16
{CGRect={CGPoint=dd}{CGSize=dd}}60@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@"TSKSelectionPath"48B56
v64@0:8@16{_NSRange=QQ}24q40Q48@56
v64@0:8@"TSWPStorage"16{_NSRange=QQ}24q40Q48@"NSArray"56
{CGPoint=dd}16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
d24@0:8o^d16
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}104@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48{CGAffineTransform=dddddd}56
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8{?={?=II}{?=II}}16
@76@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16i32d36d44B52B56d60^@68
@76@0:8{?={?=II}{?=II}}16i32d36d44B52B56d60^@68
v112@0:8@16I24{CGAffineTransform=dddddd}28d76d84B92d96@?104
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24@0:8@16
{CGSize=dd}24@0:8@16
{UIEdgeInsets=dddd}16@0:8
d32@0:8@16d24
{CGPoint=dd}24@0:8@16
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8{TSUCellCoord=ISBB}16^B24
i24@0:8{TSUCellCoord=ISBB}16
{CGSize=dd}32@0:8{?={?=II}{?=II}}16
B32@0:8{?={?=II}{?=II}}16
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8@16{CGSize=dd}24^{TSUCellRect={TSUCellCoord=ISBB}{?=II}}40
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@"TSTLayoutSpaceBundle"
{?="tableNameHeight"d"scaleToFitParent"{CGSize="width"d"height"d}"scaleToFitEnclosingTextColumn"{CGSize="width"d"height"d}}
@"TSWPLayout"
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
{CGSize="width"d"height"d}
@"TSUPointerKeyDictionary"
v24@0:8r^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}20@0:8B16
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}20@0:8C16
{TSCEValue=""(?="DONT_USE_fakeTSCENumberValueStandIn"{?="_decimal"{?="w"[2Q]}"_formatFake"[24C]"_baseUnit"S"_isUnitlessZero"B}"_buff"[9Q])"_type"C}
{TSCENumberValue="_vptr$TSCEAbstractValue"^^?"_decimal"{TSUDecimal="_decimal"{?="w"[2Q]}}"_format"{TSCEFormat="_tskFormat"@"TSKFormat""_formatType"I"_formatState"C"_durationFormat"{TSCEDurationFormat="useAutomaticUnits"b1"durationUnitSmallest"b5"durationUnitLargest"b5"durationStyle"b2}"_baseFormat"{TSCEBaseFormat="base"C"basePlaces"C"baseUseMinusSign"B}"_fractionFormat"{TSCEFractionFormat="fractionAccuracy"c}"_numberFormat"{TSCENumberFormat="decimalPlaces"C"negativeStyle"b3"showThousandsSeparator"b1"useAccountingStyle"b1"currencyCodeIndex"S}}"_baseUnit"S"_isUnitlessZero"B}
{TSCEDateValue="_vptr$TSCEAbstractValue"^^?"mDate"@"NSDate""mFormat"{TSCEFormat="_tskFormat"@"TSKFormat""_formatType"I"_formatState"C"_durationFormat"{TSCEDurationFormat="useAutomaticUnits"b1"durationUnitSmallest"b5"durationUnitLargest"b5"durationStyle"b2}"_baseFormat"{TSCEBaseFormat="base"C"basePlaces"C"baseUseMinusSign"B}"_fractionFormat"{TSCEFractionFormat="fractionAccuracy"c}"_numberFormat"{TSCENumberFormat="decimalPlaces"C"negativeStyle"b3"showThousandsSeparator"b1"useAccountingStyle"b1"currencyCodeIndex"S}}}
@40@0:8@16{TSUViewCellCoord={TSUCellCoord=ISBB}}24@32
@36@0:8r^{TSUChromeColumnIndex=S}16r^{TSKUIDStruct=QQ}24B32
@"NSString"32@0:8r^v16@"TSCERefNamingContext"24
@"NSString"32@0:8@"TSCECellTractRef"16@"TSCERefNamingContext"24
@"NSString"40@0:8@"TSCECellTractRef"16@"TSCERefNamingContext"24@"TSCECoordMapper"32
@"NSString"36@0:8r^{TSUChromeColumnIndex=S}16r^{TSKUIDStruct=QQ}24B32
@"NSString"32@0:8@"TSCEWrappedRangeRef"16@"TSCERefNamingContext"24
@32@0:8r^{TSUCellCoord=ISBB}16@24
@44@0:8r^{TSUCellCoord=ISBB}16B24@28^{TSUCellRect={TSUCellCoord=ISBB}{?=II}}36
@36@0:8S16@20@28
@44@0:8r^v16@24B32@36
@56@0:8@16B24B28^{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}32@40@48
v56@0:8@16i24@28I36{TSTSimpleRange=qQ}40
v36@0:8@16i24{TSUCellCoord=ISBB}28
v24@0:8{?=II}16
v56@0:8@16@?24@?32@?40@?48
v52@0:8{vector<TSTCell *, std::allocator<TSTCell *>>=^@^@{__compressed_pair<TSTCell *__strong *, std::allocator<TSTCell *>>=^@}}16{TSUModelRowIndex=I}40^v44
@"TSTStrokeLayer"
v40@0:8Q16{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}24
v40@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16Q32
v40@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16@?32
{vector<TSUModelCellRect, std::allocator<TSUModelCellRect>>=^{TSUModelCellRect}^{TSUModelCellRect}{__compressed_pair<TSUModelCellRect *, std::allocator<TSUModelCellRect>>=^{TSUModelCellRect}}}16@0:8
{vector<TSUModelCellRect, std::allocator<TSUModelCellRect>>=^{TSUModelCellRect}^{TSUModelCellRect}{__compressed_pair<TSUModelCellRect *, std::allocator<TSUModelCellRect>>=^{TSUModelCellRect}}}32@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{vector<TSUModelCellRect, std::allocator<TSUModelCellRect>>=^{TSUModelCellRect}^{TSUModelCellRect}{__compressed_pair<TSUModelCellRect *, std::allocator<TSUModelCellRect>>=^{TSUModelCellRect}}}24@0:8@16
B32@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}32@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{unordered_map<unsigned long, TSUModelCellRect, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, TSUModelCellRect>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, TSUModelCellRect>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, TSUModelCellRect>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, TSUModelCellRect>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, TSUModelCellRect>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUModelCellRect>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUModelCellRect>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUModelCellRect>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUModelCellRect>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUModelCellRect>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUModelCellRect>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUModelCellRect>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, TSUModelCellRect>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUModelCellRect>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, TSUModelCellRect>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, TSUModelCellRect>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}
{TSCECellRangeRTree="_rTree"{TSCECellRangeRTree_Int="m_root"^{Node}}}
{TSCEBitGrid="_tiles"{vector<TSCEBitGridTile *, std::allocator<TSCEBitGridTile *>>="__begin_"^^{TSCEBitGridTile}"__end_"^^{TSCEBitGridTile}"__end_cap_"{__compressed_pair<TSCEBitGridTile **, std::allocator<TSCEBitGridTile *>>="__value_"^^{TSCEBitGridTile}}}"_count"Q"_lastTileFoundAtIndex"Q"_bitsInColumn"{unordered_map<unsigned int, TSUIndexSet *, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<const unsigned int, TSUIndexSet *>>>="__table_"{__hash_table<std::__hash_value_type<unsigned int, TSUIndexSet *>, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, TSUIndexSet *>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, TSUIndexSet *>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>, std::allocator<std::__hash_value_type<unsigned int, TSUIndexSet *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSUIndexSet *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSUIndexSet *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSUIndexSet *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSUIndexSet *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSUIndexSet *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSUIndexSet *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSUIndexSet *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned int, TSUIndexSet *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSUIndexSet *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, TSUIndexSet *>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, TSUIndexSet *>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>>="__value_"f}}}}
v48@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16Q24{CGSize=dd}32
{vector<unsigned long, std::allocator<unsigned long>>=^Q^Q{__compressed_pair<unsigned long *, std::allocator<unsigned long>>=^Q}}16@0:8
@"TSTCellUIDList"
{vector<unsigned long, std::allocator<unsigned long>>="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::allocator<unsigned long>>="__value_"^Q}}
d24@0:8@"TSDDrawableInfo"16
{CGSize=dd}32@0:8@"TSPData"16@"<NSObject>"24
{?={?=II}{?=II}}24@0:8@16
{?={?=II}{?=II}}40@0:8{?={?=II}{?=II}}16@32
@28@0:8@16i24
v32@0:8{?={?=II}{?=II}}16
{?={?=II}{?=II}}16@0:8
{?={?=II}{?=II}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v64@0:8{CGAffineTransform=dddddd}16
{CGPoint=dd}32@0:8{CGPoint=dd}16
{?=II}36@0:8{CGPoint=dd}16B32
{?=II}32@0:8{CGPoint=dd}16
v40@0:8d16^d24^d32
d32@0:8d16d24
v40@0:8^{CGPoint=dd}16^{CGPoint=dd}24^d32
@60@0:8{?={?=II}{?=II}}16^{CGAffineTransform=dddddd}32d40B48d52
@32@0:8^{CGAffineTransform=dddddd}16d24
{CGRect={CGPoint=dd}{CGSize=dd}}40@0:8{?={?=II}{?=II}}16d32
v112@0:8@16^{CGContext=}24{CGPoint=dd}32{CGPoint=dd}48d64d72{CGRect={CGPoint=dd}{CGSize=dd}}80
B52@0:8I16{?={?=II}{?=II}}20B36i40^{CGContext=}44
v44@0:8{?={?=II}{?=II}}16B32^{CGContext=}36
@52@0:8{?={?=II}{?=II}}16S32@36^B44
@56@0:8{?={?=II}{?=II}}16I32@36B44^B48
I24@0:8d16
d24@0:8d16
i24@0:8{?=II}16
{CGPoint=dd}24@0:8{?=II}16
{?={CGPoint=dd}{CGPoint=dd}{CGPoint=dd}{CGPoint=dd}dddd}44@0:8{?={?=II}{?=II}}16i32^d36
v24@0:8^{?={CGPoint=dd}{CGPoint=dd}{CGPoint=dd}{CGPoint=dd}dddd}16
{?={CGPoint=dd}{CGPoint=dd}{CGPoint=dd}{CGPoint=dd}dddd}40@0:8{?={?=II}{?=II}}16^d32
{?={CGPoint=dd}{CGPoint=dd}{CGPoint=dd}{CGPoint=dd}dddd}32@0:8{?={?=II}{?=II}}16
{CGAffineTransform=dddddd}16@0:8
{_opaque_pthread_rwlock_t="__sig"q"__opaque"[192c]}
@"TSTLayoutSpaceBezierPathCache"
@"TSTCoordinateArray"
{CGPoint="x"d"y"d}
{?="topLeft"{?="column"I"row"I}"bottomRight"{?="column"I"row"I}}
{CGAffineTransform="a"d"b"d"c"d"d"d"tx"d"ty"d}
@28@0:8I16I20B24
v40@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24r^{TSKUIDStruct=QQ}32
v32@0:8@16r^{TSKUIDStruct=QQ}24
v32@0:8r^v16r^{TSKUIDStruct=QQ}24
v40@0:8@"TSTCell"16{TSUModelCellCoord={TSUCellCoord=ISBB}}24r^{TSKUIDStruct=QQ}32
v32@0:8@"TSTCellMap"16r^{TSKUIDStruct=QQ}24
v32@0:8@"TSTConcurrentCellMap"16r^{TSKUIDStruct=QQ}24
@"TSTExpressionNode"
@52@0:8@16@24I32Q36Q44
{TSTCSENodeData=QQ}24@0:8@16
@60@0:8@16@24{TSUCellCoord=ISBB}32B40^v44@52
v40@0:8^{TSCEASTNodeArray=*QQB}16{TSUCellCoord=ISBB}24^v32
@72@0:8i16{_NSRange=QQ}20i36i40{_NSRange=QQ}44B60Q64
@80@0:8i16{_NSRange=QQ}20i36i40{_NSRange=QQ}44B60Q64Q72
B40@0:8@16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24
{TSTCellRegionGathererMap="_cellRangeIndex"Q"_rowRange"{_NSRange="location"Q"length"Q}"_cellRanges"{unordered_map<unsigned long, TSUCellRect, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, TSUCellRect>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, TSUCellRect>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, TSUCellRect>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, TSUCellRect>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, TSUCellRect>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUCellRect>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUCellRect>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUCellRect>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUCellRect>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUCellRect>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUCellRect>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUCellRect>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, TSUCellRect>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUCellRect>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, TSUCellRect>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, TSUCellRect>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}"_encodedJoinCoordToCandidateIndexMap"{unordered_map<TSTCellRegionGathererKey, unsigned long, std::hash<TSTCellRegionGathererKey>, std::equal_to<TSTCellRegionGathererKey>, std::allocator<std::pair<const TSTCellRegionGathererKey, unsigned long>>>="__table_"{__hash_table<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, std::__unordered_map_hasher<TSTCellRegionGathererKey, std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, std::hash<TSTCellRegionGathererKey>, std::equal_to<TSTCellRegionGathererKey>, true>, std::__unordered_map_equal<TSTCellRegionGathererKey, std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, std::equal_to<TSTCellRegionGathererKey>, std::hash<TSTCellRegionGathererKey>, true>, std::allocator<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSTCellRegionGathererKey, std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, std::hash<TSTCellRegionGathererKey>, std::equal_to<TSTCellRegionGathererKey>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSTCellRegionGathererKey, std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, std::equal_to<TSTCellRegionGathererKey>, std::hash<TSTCellRegionGathererKey>, true>>="__value_"f}}}}
{unordered_map<TSUCellCoord, TSUCellRect, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, std::allocator<std::pair<const TSUCellCoord, TSUCellRect>>>="__table_"{__hash_table<std::__hash_value_type<TSUCellCoord, TSUCellRect>, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSUCellRect>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSUCellRect>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>, std::allocator<std::__hash_value_type<TSUCellCoord, TSUCellRect>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellRect>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellRect>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellRect>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellRect>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellRect>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellRect>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellRect>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellRect>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellRect>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSUCellRect>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSUCellRect>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>>="__value_"f}}}
{vector<TSCECellRef, std::allocator<TSCECellRef>>=^{TSCECellRef}^{TSCECellRef}{__compressed_pair<TSCECellRef *, std::allocator<TSCECellRef>>=^{TSCECellRef}}}32@0:8r^{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}16r^{TSKUIDStruct=QQ}24
{vector<TSCECellRef, std::allocator<TSCECellRef>>=^{TSCECellRef}^{TSCECellRef}{__compressed_pair<TSCECellRef *, std::allocator<TSCECellRef>>=^{TSCECellRef}}}24@0:8@16
@"TSTAggNode"
v56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16^{CGContext=}48
@"TSTTableStyleNetwork"
v28@0:8B16@20
v36@0:8B16{_NSRange=QQ}20
Q32@0:8{_NSRange=QQ}16
B32@0:8{_NSRange=QQ}16
Q32@0:8Q16Q24
v40@0:8{_NSRange=QQ}16Q32
@48@0:8@16Q24@32Q40
@80@0:8@16Q24@32@?40@?48@?56@?64@?72
@48@0:8@16Q24@32@?40
Q42@0:8C16C20Q24Q32{TSUViewColumnIndex=S}40
Q28@0:8C16C20B24
@36@0:8@16@24B32
@40@0:8@16@24Q32
@32@0:8^{_NSZone=}16@24
@36@0:8Q16@24B32
@52@0:8@16@24d32B40Q44
{vector<TSTCellStyle *, std::allocator<TSTCellStyle *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<TSTCellStyle *__strong *, std::allocator<TSTCellStyle *>>="__value_"^@}}
{vector<TSWPParagraphStyle *, std::allocator<TSWPParagraphStyle *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<TSWPParagraphStyle *__strong *, std::allocator<TSWPParagraphStyle *>>="__value_"^@}}
@"TSTTableControlCellSelection"
@44@0:8I16@20@28@36
@"TSDStroke"
@"<TSTCellIteratorData>"
v32@0:8^{TSCEASTNodeArray=*QQB}16{TSUCellCoord=ISBB}24
v52@0:8@16C24@28@36@44
v48@0:8@16Q24@32^v40
v36@0:8@16@24I32
B24@0:8^v16
@32@0:8^v16^@24
@48@0:8@16@24^v32^@40
@40@0:8@16^v24^@32
@"TSTWPTokenAttachment"
i36@0:8Q16i24@28
i32@0:8Q16@24
Q44@0:8Q16Q24i32@36
@48@0:8@16@24{TSUModelCellCoord={TSUCellCoord=ISBB}}32@40
@60@0:8@16@24{TSUViewCellCoord={TSUCellCoord=ISBB}}32@40r^{TSKUIDStruct=QQ}48B56
@60@0:8@16@24{TSUModelCellCoord={TSUCellCoord=ISBB}}32@40r^{TSKUIDStruct=QQ}48B56
@56@0:8@16@24{TSUViewCellCoord={TSUCellCoord=ISBB}}32@40r^{TSKUIDStruct=QQ}48
@56@0:8@16@24{TSUModelCellCoord={TSUCellCoord=ISBB}}32@40r^{TSKUIDStruct=QQ}48
@40@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24@32
{TSUModelCellCoord="_coord"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}}
v32@0:8I16I20@?24
@"TSTPopUpMenuModel"
@32@0:8@16r^{TSKUIDStruct=QQ}24
@52@0:8@16S24@28Q36Q44
@56@0:8@16r^{TSUDecimal={?=[2Q]}}24@32Q40Q48
@56@0:8@16@24@32Q40Q48
v32@0:8r^{TSUDecimal={?=[2Q]}}16@24
{TSUDecimal={?=[2Q]}}16@0:8
{TSUDecimal="_decimal"{?="w"[2Q]}}
B24@0:8I16I20
B24@0:8C16I20
@32@0:8^{?={?=Cb8b16b16b16b16b16}[0C]}16@24
v32@0:8^{?={?=Cb8b16b16b16b16b16}[0C]}16@24
v36@0:8^{?={?=Cb8b16b16b16b16b16}[0C]}16@24B32
v40@0:8@16B24B28B32B36
v24@0:8S16B20
v28@0:8B16I20B24
@28@0:8I16B20B24
B24@0:8I16B20
@"NSObject"
@"TSTCellBorder"
@"TSKFormat"
@"TSDCommentStorage"
@"TSTImportWarningSet"
@"TSTCellSpec"
@40@0:8@16@24r^v32
@28@0:8^{_NSZone=}16B24
v32@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24
v40@0:8r^v16r^v24r^v32
{TSCECellCoordSet={map<unsigned short, TSUIndexSet, std::less<unsigned short>, std::allocator<std::pair<const unsigned short, TSUIndexSet>>>={__tree<std::__value_type<unsigned short, TSUIndexSet>, std::__map_value_compare<unsigned short, std::__value_type<unsigned short, TSUIndexSet>, std::less<unsigned short>, true>, std::allocator<std::__value_type<unsigned short, TSUIndexSet>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned short, TSUIndexSet>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<unsigned short, std::__value_type<unsigned short, TSUIndexSet>, std::less<unsigned short>, true>>=Q}}}}32@0:8@16@?24
@28@0:8r^v16B24
{vector<TSUCellCoord, std::allocator<TSUCellCoord>>="__begin_"^{TSUCellCoord}"__end_"^{TSUCellCoord}"__end_cap_"{__compressed_pair<TSUCellCoord *, std::allocator<TSUCellCoord>>="__value_"^{TSUCellCoord}}}
{unordered_map<TSUCellCoord, TSTCell *, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, std::allocator<std::pair<const TSUCellCoord, TSTCell *>>>="__table_"{__hash_table<std::__hash_value_type<TSUCellCoord, TSTCell *>, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTCell *>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTCell *>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>, std::allocator<std::__hash_value_type<TSUCellCoord, TSTCell *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTCell *>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTCell *>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>>="__value_"f}}}
{unordered_map<TSKUIDStructCoord, TSTCell *, std::hash<TSKUIDStructCoord>, std::equal_to<TSKUIDStructCoord>, std::allocator<std::pair<const TSKUIDStructCoord, TSTCell *>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, std::__unordered_map_hasher<TSKUIDStructCoord, std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, std::hash<TSKUIDStructCoord>, std::equal_to<TSKUIDStructCoord>, true>, std::__unordered_map_equal<TSKUIDStructCoord, std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, std::equal_to<TSKUIDStructCoord>, std::hash<TSKUIDStructCoord>, true>, std::allocator<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStructCoord, std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, std::hash<TSKUIDStructCoord>, std::equal_to<TSKUIDStructCoord>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStructCoord, std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, std::equal_to<TSKUIDStructCoord>, std::hash<TSKUIDStructCoord>, true>>="__value_"f}}}
{pair<TSTCell *, TSKUIDStructCoord>=@{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}}16@0:8
r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16@0:8
@"TSTCellMap"
@"TSTCellUIDIterator"
d36@0:8I16{TSTSimpleRange=qQ}20
v36@0:8I16^d20^d28
{_opaque_pthread_rwlock_t=q[192c]}16@0:8
v216@0:8{_opaque_pthread_rwlock_t=q[192c]}16
{vector<TSTStrokeWidthCacheEntry, std::allocator<TSTStrokeWidthCacheEntry>>="__begin_"^{TSTStrokeWidthCacheEntry}"__end_"^{TSTStrokeWidthCacheEntry}"__end_cap_"{__compressed_pair<TSTStrokeWidthCacheEntry *, std::allocator<TSTStrokeWidthCacheEntry>>="__value_"^{TSTStrokeWidthCacheEntry}}}
@40@0:8@16r^v24r^v32
v24@0:8r^v16
v28@0:8r^v16S24
v28@0:8r^v16I24
v28@0:8r^v16B24
{unordered_map<TSKUIDStruct, unsigned short, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, unsigned short>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, unsigned short>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned short>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned short>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, unsigned short>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned short>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned short>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned short>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned short>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned short>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned short>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned short>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned short>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned short>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned short>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned short>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
{unordered_map<TSKUIDStruct, unsigned int, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, unsigned int>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, unsigned int>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned int>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned int>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, unsigned int>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned int>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned int>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned int>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned int>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned int>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned int>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned int>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned int>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
@44@0:8@16S24@28@36
{TSKUIDStruct=QQ}36@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24B32
@"<TSCEFormulaReplacing>"
@40@0:8{TSUCellCoord=ISBB}16@24@32
@"TSTAccumulator"
@"TSTAggregator"
@28@0:8@16S24
s16@0:8
@"TSTFunctionEndNode"
C24@0:8Q16
v40@0:8{TSKUIDStruct=QQ}16@32
v24@0:8@"TSTGroupNode"16
v40@0:8{TSKUIDStruct=QQ}16@"TSTGroupNode"32
v32@0:8r^v16r^v24
i40@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24@32
i26@0:8{TSUModelColumnIndex=S}16@18
v32@0:8C16r^{TSKUIDStruct=QQ}20C28
@36@0:8C16{TSUModelCellCoord={TSUCellCoord=ISBB}}20^B28
C32@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16^B24
v28@0:8Q16C24
Q20@0:8C16
@"TSTSummaryCellVendor"
@"TSTCategoryAggregateFormulaOwner"
@"TSTTableGroupSortOrderUID"
{vector<double, std::allocator<double>>="__begin_"^d"__end_"^d"__end_cap_"{__compressed_pair<double *, std::allocator<double>>="__value_"^d}}
{vector<int, std::allocator<int>>="__begin_"^i"__end_"^i"__end_cap_"{__compressed_pair<int *, std::allocator<int>>="__value_"^i}}
@"TSURetainedPointerKeyDictionary"
@60@0:8@16{TSTSimpleRange=qQ}24i40@44@52
{TSTSimpleRange=qQ}16@0:8
v32@0:8{TSTSimpleRange=qQ}16
@"<TSTStrokeLayerStrokeAndRange>"
{TSTSimpleRange="origin"q"length"Q}
@48@0:8q16@24^@32@40
v44@0:8@16{TSTSimpleRange=qQ}24i40
@40@0:8I16@20@28B36
{_NSRange=QQ}28@0:8{TSUCellCoord=ISBB}16B24
@24@0:8d16
@28@0:8d16C24
{TSCENumberValue=^^?{TSUDecimal={?=[2Q]}}{TSCEFormat=@IC{TSCEDurationFormat=b1b5b5b2}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}SB}16@0:8
{TSUPreserveFlags=C}16@0:8
v17@0:8{TSUPreserveFlags=C}16
B40@0:8q16q24q32
B32@0:8r^{TSUDecimal={?=[2Q]}}16@24
B24@0:8d16
@24@0:8r^{TSCERelativeCellRef={TSCERelativeCellCoordinate=isBB}{TSKUIDStruct=QQ}b1b1b1b1}16
r^{TSCERelativeCellRef={TSCERelativeCellCoordinate=isBB}{TSKUIDStruct=QQ}b1b1b1b1}16@0:8
v24@0:8r^{TSCERelativeCellRef={TSCERelativeCellCoordinate=isBB}{TSKUIDStruct=QQ}b1b1b1b1}16
@24@0:8r^{TSCECrossTableReference={TSKUIDStruct=QQ}{TSCERelativeCellCoordinate=isBB}}16
{TSCECrossTableReference={TSKUIDStruct=QQ}{TSCERelativeCellCoordinate=isBB}}16@0:8
@32@0:8r^v16r^{TSUPreserveFlags=C}24
{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
v32@0:8r^v16r^{TSUPreserveFlags=C}24
v32@0:8r^v16B24B28
@32@0:8@16B24B28
B32@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24
@56@0:8^{TSCEFormulaRewriteContext=@@{TSCEFormulaRewriteContextRecord={TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}{TSKUIDStruct=QQ}{TSUColumnRowOffset=ii}BBBBBBB}}16q24B32B36^{TSCEUidCellRef={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}40@?48
{TSCEFormulaCreator=@?}16@0:8
{TSCEFormulaCreator=@?}24@0:8B16B20
v24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
@"TSCECategoryRef"
@"TSCEViewTractRef"
{RefTypeHolder<TSCECellRef, 0>="_ref"{TSCECellRef="coordinate"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}"_tableUID"{TSKUIDStruct="_lower"Q"_upper"Q}}}
@"TSTFormulaPredArgData"
@"TSCEUndoTractList"
{TSCERelativeCellRef="relativeCoord"{TSCERelativeCellCoordinate="row"i"column"s"_preserveRow"B"_preserveColumn"B}"tableUID"{TSKUIDStruct="_lower"Q"_upper"Q}"preserveColumn"b1"preserveRow"b1"isSpanningColumn"b1"isSpanningRow"b1}
{TSUPreserveFlags="_flags"C}
@"NSMutableSet"
@44@0:8@16B24Q28Q36
@56@0:8@16@24I32I36Q40Q48
{TSCEGridDimensions=II}16@0:8
{TSCEGridDimensions="width"I"height"I}
B40@0:8r^{TSKUIDStruct=QQ}16@24@32
B32@0:8r^{TSKUIDStruct=QQ}16@24
@64@0:8@16{TSUCellCoord=ISBB}24{CGRect={CGPoint=dd}{CGSize=dd}}32
@"TSWPPadding"
{vector<TSKUIDStructTract, std::allocator<TSKUIDStructTract>>=^{TSKUIDStructTract}^{TSKUIDStructTract}{__compressed_pair<TSKUIDStructTract *, std::allocator<TSKUIDStructTract>>=^{TSKUIDStructTract}}}24@0:8Q16
{vector<TSKUIDStructTract, std::allocator<TSKUIDStructTract>>="__begin_"^{TSKUIDStructTract}"__end_"^{TSKUIDStructTract}"__end_cap_"{__compressed_pair<TSKUIDStructTract *, std::allocator<TSKUIDStructTract>>="__value_"^{TSKUIDStructTract}}}
@44@0:8r^v16C24@28r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}36
@52@0:8r^v16{TSKUIDStruct=QQ}24C40@44
{RefTypeHolder<TSCERangeRef, 1>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}32@0:8r^v16@24
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}36@0:8r^v16@24C32
B32@0:8r^{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16@24
C32@0:8r^{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16@24
@68@0:8@16@24@32@40r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}48@56B64
@60@0:8@16@24@32r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}40@48B56
@64@0:8@16@24r^v32C40r^v44@52B60
@64@0:8@16@24r^v32C40r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}44@52B60
@56@0:8@16@24@32r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}40@48
@28@0:8@16C24
v44@0:8^{TSCEASTNodeArray=*QQB}16{TSUCellCoord=ISBB}24C32{TSUCellCoord=ISBB}36
{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16@0:8
v40@0:8{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16
@"TSTUIDRectRef"
@"TSTReferenceColorHelper"
{TSCECellRef="coordinate"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}"_tableUID"{TSKUIDStruct="_lower"Q"_upper"Q}}
^{CGPath=}24@0:8d16
v76@0:8d16^{CGContext=}24{CGRect={CGPoint=dd}{CGSize=dd}}32B64^{CGColor=}68
v80@0:8d16^{CGContext=}24{CGRect={CGPoint=dd}{CGSize=dd}}32B64^{CGColor=}68B76
@"<TSKPencilAnnotationStorage>"16@0:8
@"TSDPencilAnnotationStorage"
@56@0:8@16d24@32Q40Q48
@"TSKDurationFormat"
^v24@0:8S16i20
@48@0:8@16^v24Q32Q40
v20@0:8s16
@"<TSTTableStrokeProviding>"
@"<TSTTableHiddenRowColumnProviding><TSTTableInternalGeometryProviding>"
v28@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16C24
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}20@0:8C16
{unordered_map<TSCECategoryLevel, TSKUIDStructCoord, std::hash<TSCECategoryLevel>, std::equal_to<TSCECategoryLevel>, std::allocator<std::pair<const TSCECategoryLevel, TSKUIDStructCoord>>>="__table_"{__hash_table<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, std::__unordered_map_hasher<TSCECategoryLevel, std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, std::hash<TSCECategoryLevel>, std::equal_to<TSCECategoryLevel>, true>, std::__unordered_map_equal<TSCECategoryLevel, std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, std::equal_to<TSCECategoryLevel>, std::hash<TSCECategoryLevel>, true>, std::allocator<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSCECategoryLevel, std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, std::hash<TSCECategoryLevel>, std::equal_to<TSCECategoryLevel>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSCECategoryLevel, std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, std::equal_to<TSCECategoryLevel>, std::hash<TSCECategoryLevel>, true>>="__value_"f}}}
v36@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16@24C32
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}28@0:8@16C24
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}36@0:8Q16@24C32
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}52@0:8^{TSTRunningAggregate={TSKUIDStruct=QQ}BB}16@24r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}32B40@44
{vector<TSCECellValue *, std::allocator<TSCECellValue *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<TSCECellValue *__strong *, std::allocator<TSCECellValue *>>="__value_"^@}}
{vector<TSTUidCoordsPerGroupValueTuple *, std::allocator<TSTUidCoordsPerGroupValueTuple *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<TSTUidCoordsPerGroupValueTuple *__strong *, std::allocator<TSTUidCoordsPerGroupValueTuple *>>="__value_"^@}}
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}32@0:8S16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}20B28
@"TSTGroupBySet"
{unordered_map<unsigned short, TSTRunningAggregate, std::hash<unsigned short>, std::equal_to<unsigned short>, std::allocator<std::pair<const unsigned short, TSTRunningAggregate>>>="__table_"{__hash_table<std::__hash_value_type<unsigned short, TSTRunningAggregate>, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, TSTRunningAggregate>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, TSTRunningAggregate>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>, std::allocator<std::__hash_value_type<unsigned short, TSTRunningAggregate>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSTRunningAggregate>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSTRunningAggregate>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSTRunningAggregate>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSTRunningAggregate>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSTRunningAggregate>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSTRunningAggregate>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSTRunningAggregate>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned short, TSTRunningAggregate>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSTRunningAggregate>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, TSTRunningAggregate>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, TSTRunningAggregate>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>>="__value_"f}}}
{unordered_map<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>, std::hash<unsigned short>, std::equal_to<unsigned short>, std::allocator<std::pair<const unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>>>="__table_"{__hash_table<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>, std::allocator<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>>="__value_"f}}}
v40@0:8^{TSCEASTNodeArray=}16{TSUCellCoord=ISBB}24^v32
@"TSTFunctionNode"
@48@0:8@16@24@32@40
@48@0:8@"TSSPropertyMap"16@"TSSPropertyMap"24@"TSSPropertyMap"32@"TSSPropertyMap"40
@"TSSPropertySet"16@0:8
@56@0:8@"TSSPropertyMap"16@"TSSPropertyMap"24@"TSSPropertyMap"32@"TSSPropertyMap"40@"TSTConcurrentStylesheet"48
@32@0:8r^{Message=^^?{InternalMetadata=^v}}16@24
v32@0:8^{Message=^^?{InternalMetadata=^v}}16@24
@32@0:8r^{Message=^^?{InternalMetadata=^v}}16@"TSPUnarchiver"24
v32@0:8^{Message=^^?{InternalMetadata=^v}}16@"TSPArchiver"24
@40@0:8@16B24B28B32I36
d28@0:8S16@?20
{TSCERecalculationState=C}33@0:8{TSUCellCoord=ISBB}16@24{TSCERecalculationState=C}32
{TSCERecalculationState=C}33@0:8r^v16@24{TSCERecalculationState=C}32
@"<TSCEReferenceResolving>"16@0:8
{TSCERecalculationState=C}33@0:8{TSUCellCoord=ISBB}16@"TSCECalculationEngine"24{TSCERecalculationState=C}32
{TSCERecalculationState=C}33@0:8r^v16@"TSCECalculationEngine"24{TSCERecalculationState=C}32
v40@0:8@16{TSKUIDStruct=QQ}24
v48@0:8@16@24{TSKUIDStruct=QQ}32
v40@0:8@"NSString"16{TSKUIDStruct=QQ}24
v48@0:8@"NSString"16@"NSString"24{TSKUIDStruct=QQ}32
i40@0:8@16@24r^{TSKUIDStruct=QQ}32
i32@0:8@16@24
v48@0:8@16{TSKUIDStruct=QQ}24B40B44
v24@0:8B16B20
v28@0:8r^{TSKUIDStruct=QQ}16B24
@24@0:8S16C20
@24@0:8I16C20
{TSUModelColumnIndex=S}20@0:8S16
{TSUModelColumnIndex=S}20@0:8I16
@56@0:8{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16@48
v36@0:8I16C20Q24i32
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}52@0:8Q16i24I28C32Q36^B44
v32@0:8@16q24
v32@0:8r^{TSKUIDStruct=QQ}16@24
@"TSTPivotGroupingColumnOptionsMap"
@"TSTFormulaStore"
v32@0:8^{CGContext=}16@?24
{TSUCellCoord=ISBB}24@0:8S16I20
S24@0:8r^{TSUCellCoord=ISBB}16
I24@0:8r^{TSUCellCoord=ISBB}16
{TSUCellCoord=ISBB}20@0:8I16
v36@0:8@16B24@28
v32@0:8@16C24B28
B24@0:8{TSUModelRowIndex=I}16C20
B22@0:8{TSUModelColumnIndex=S}16C18
{TSUModelColumnIndex=S}32@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{TSUModelRowIndex=I}32@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
v40@0:8{_NSRange=QQ}16r^v32
v34@0:8{_NSRange=QQ}16{TSUViewColumnIndex=S}32
v52@0:8@16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24@40B48
@"TSTHiddenStateExtent"
v24@0:8@"TSTMutableCellIteratorData"16
@"NSObject<TSTCellRegionIterating>"
{TSKUIDStruct=QQ}32@0:8@16@24
{TSKUIDStruct=QQ}20@0:8i16
i24@0:8r^{TSKUIDStruct=QQ}16
C32@0:8@16@24
B48@0:8@16@24Q32^Q40
B56@0:8@16@24@32Q40^Q48
@44@0:8@16@24r^{TSKUIDStruct=QQ}32S40
@48@0:8@16B24@28r^{TSKUIDStruct=QQ}36S44
{TSKUIDStruct=QQ}32@0:8r^{TSKUIDStruct=QQ}16r^{TSKUIDStruct=QQ}24
@40@0:8@16r^{TSKUIDStruct=QQ}24r^{TSKUIDStruct=QQ}32
{vector<TSCECategoryLevel, std::allocator<TSCECategoryLevel>>=^C^C{__compressed_pair<TSCECategoryLevel *, std::allocator<TSCECategoryLevel>>=^C}}24@0:8r^{TSKUIDStruct=QQ}16
v40@0:8{TSKUIDStruct=QQ}16@?32
C32@0:8{TSKUIDStruct=QQ}16
C40@0:8r^{TSKUIDStruct=QQ}16^B24^B32
@28@0:8C16Q20
v36@0:8r^{TSKUIDStruct=QQ}16I24@28
@32@0:8@16C24B28
@40@0:8@16r^{TSKUIDStruct=QQ}24C32C36
v24@0:8r^{TSUCellCoord=ISBB}16
v32@0:8@16r^{TSUCellCoord=ISBB}24
@24@0:8r^{TSUCellCoord=ISBB}16
@24@0:8C16B20
C24@0:8@16
@40@0:8@16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24@32
@48@0:8@16Q24Q32^{TSUPreserveFlags=C}40
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}36@0:8@16r^{TSKUIDStruct=QQ}24B32
{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}24@0:8@16
{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}32@0:8@16r^{TSKUIDStruct=QQ}24
{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}36@0:8@16r^{TSKUIDStruct=QQ}24C32
@36@0:8@16r^{TSKUIDStruct=QQ}24C32
{vector<TSCECellRef, std::allocator<TSCECellRef>>=^{TSCECellRef}^{TSCECellRef}{__compressed_pair<TSCECellRef *, std::allocator<TSCECellRef>>=^{TSCECellRef}}}32@0:8@16r^{TSKUIDStruct=QQ}24
{vector<TSCECellRef, std::allocator<TSCECellRef>>=^{TSCECellRef}^{TSCECellRef}{__compressed_pair<TSCECellRef *, std::allocator<TSCECellRef>>=^{TSCECellRef}}}36@0:8@16r^{TSKUIDStruct=QQ}24B32
{vector<TSCECategoryRef *, std::allocator<TSCECategoryRef *>>=^@^@{__compressed_pair<TSCECategoryRef *__strong *, std::allocator<TSCECategoryRef *>>=^@}}24@0:8@16
{vector<TSCECategoryRef *, std::allocator<TSCECategoryRef *>>=^@^@{__compressed_pair<TSCECategoryRef *__strong *, std::allocator<TSCECategoryRef *>>=^@}}32@0:8@16C24B28
{vector<TSCECategoryRef *, std::allocator<TSCECategoryRef *>>=^@^@{__compressed_pair<TSCECategoryRef *__strong *, std::allocator<TSCECategoryRef *>>=^@}}40@0:8{vector<TSCECategoryRef *, std::allocator<TSCECategoryRef *>>=^@^@{__compressed_pair<TSCECategoryRef *__strong *, std::allocator<TSCECategoryRef *>>=^@}}16
{vector<TSCECategoryRef *, std::allocator<TSCECategoryRef *>>=^@^@{__compressed_pair<TSCECategoryRef *__strong *, std::allocator<TSCECategoryRef *>>=^@}}52@0:8{vector<TSCECategoryRef *, std::allocator<TSCECategoryRef *>>=^@^@{__compressed_pair<TSCECategoryRef *__strong *, std::allocator<TSCECategoryRef *>>=^@}}16@40C48
{vector<TSCECategoryRef *, std::allocator<TSCECategoryRef *>>=^@^@{__compressed_pair<TSCECategoryRef *__strong *, std::allocator<TSCECategoryRef *>>=^@}}36@0:8@16C24B28B32
I24@0:8r^{TSKUIDStruct=QQ}16
{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}24@0:8@16
@24@0:8r^{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16
@"TSTGroupByChangeDistributor"
{unordered_map<TSUCellCoord, TSTAggNode *, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, std::allocator<std::pair<const TSUCellCoord, TSTAggNode *>>>="__table_"{__hash_table<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTAggNode *>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTAggNode *>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>, std::allocator<std::__hash_value_type<TSUCellCoord, TSTAggNode *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTAggNode *>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTAggNode *>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>>="__value_"f}}}
{TSCEUidLookupList="_uids"{TSKUIDStructVectorTemplate<TSKUIDStruct>="__begin_"^{TSKUIDStruct}"__end_"^{TSKUIDStruct}"__end_cap_"{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>="__value_"^{TSKUIDStruct}}}"_uidHashToLookupKeyMap"{unordered_map<unsigned long, unsigned int, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, unsigned int>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, unsigned int>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, unsigned int>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}"_uidHashOverflowMap"{unordered_map<unsigned long, std::unordered_set<unsigned int>, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, std::unordered_set<unsigned int>>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}}
@"TSKCustomFormatWrapper"
@40@0:8@16Q24@?32
v24@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
v40@0:8@16r^v24r^v32
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24@0:8Q16
{TSTCellUIDLookupList="_columnUidLookupList"{TSCEUidLookupList="_uids"{TSKUIDStructVectorTemplate<TSKUIDStruct>="__begin_"^{TSKUIDStruct}"__end_"^{TSKUIDStruct}"__end_cap_"{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>="__value_"^{TSKUIDStruct}}}"_uidHashToLookupKeyMap"{unordered_map<unsigned long, unsigned int, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, unsigned int>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, unsigned int>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, unsigned int>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}"_uidHashOverflowMap"{unordered_map<unsigned long, std::unordered_set<unsigned int>, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, std::unordered_set<unsigned int>>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}}"_rowUidLookupList"{TSCEUidLookupList="_uids"{TSKUIDStructVectorTemplate<TSKUIDStruct>="__begin_"^{TSKUIDStruct}"__end_"^{TSKUIDStruct}"__end_cap_"{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>="__value_"^{TSKUIDStruct}}}"_uidHashToLookupKeyMap"{unordered_map<unsigned long, unsigned int, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, unsigned int>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, unsigned int>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, unsigned int>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}"_uidHashOverflowMap"{unordered_map<unsigned long, std::unordered_set<unsigned int>, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, std::unordered_set<unsigned int>>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}}"_cellLookupCoords"{vector<TSTLookupKeyCoord, std::allocator<TSTLookupKeyCoord>>="__begin_"^{TSTLookupKeyCoord}"__end_"^{TSTLookupKeyCoord}"__end_cap_"{__compressed_pair<TSTLookupKeyCoord *, std::allocator<TSTLookupKeyCoord>>="__value_"^{TSTLookupKeyCoord}}}}
@52@0:8{TSKUIDStruct=QQ}16{TSKUIDStruct=QQ}32i48
@"TSTStrokeLayer"24@0:8Q16
v40@0:8{TSTSimpleRange=qQ}16@?32
@48@0:8@16@24{TSTSimpleRange=qQ}32
v44@0:8@16i24{TSTSimpleRange=qQ}28
v40@0:8@16{TSTSimpleRange=qQ}24
B32@0:8{TSTSimpleRange=qQ}16
@"TSTMutableStrokeLayer"
d40@0:8{TSTSimpleRange=qQ}16d32
d24@0:8q16
@"TSTStrokeOrderedLayer"
v56@0:8{TSUCellCoord=ISBB}16^@24^@32^@40^@48
@24@0:8S16S20
@"<TSTCustomStrokeProviding>"
@"TSUIntegerKeyDictionary"
Q40@0:8@16Q24Q32
Q48@0:8@16@24Q32Q40
v40@0:8@16Q24Q32
{TSUModelColumnOrRowIndex=I}20@0:8{TSUViewColumnOrRowIndex=I}16
{TSUViewColumnOrRowIndex=I}20@0:8{TSUModelColumnOrRowIndex=I}16
v28@0:8{TSUModelColumnOrRowIndex=I}16{TSUViewColumnOrRowIndex=I}20C24
B28@0:8r^{TSKUIDStruct=QQ}16C24
B36@0:8r^{TSKUIDStruct=QQ}16{TSUModelColumnOrRowIndex=I}24{TSUViewColumnOrRowIndex=I}28C32
C28@0:8r^{TSKUIDStruct=QQ}16{TSUViewColumnOrRowIndex=I}24
B24@0:8{TSUViewColumnOrRowIndex=I}16C20
B24@0:8{TSUModelColumnOrRowIndex=I}16C20
C20@0:8{TSUViewColumnOrRowIndex=I}16
C20@0:8{TSUModelColumnOrRowIndex=I}16
I32@0:8{_NSRange=QQ}16
B36@0:8{_NSRange=QQ}16C32
I24@0:8I16I20
v36@0:8{_NSRange=QQ}16{TSUModelColumnOrRowIndex=I}32
v36@0:8{_NSRange=QQ}16{TSUViewColumnOrRowIndex=I}32
v24@0:8{TSUModelColumnOrRowIndex=I}16{TSUModelColumnOrRowIndex=I}20
@48@0:8@16@24r^{TSKUIDStruct=QQ}32r^{TSUCellCoord=ISBB}40
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}32@0:8@16r^{TSUCellCoord=ISBB}24
@32@0:8@16r^{TSUCellCoord=ISBB}24
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}40@0:8@16r^{TSUCellCoord=ISBB}24B32C36
@120@0:8{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16@112
v48@0:8@16r^{TSUCellCoord=ISBB}24@32@40
{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}20@0:8{TSUModelColumnOrRowIndex=I}16
{unordered_map<TSKUIDStruct, unsigned char, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, unsigned char>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, unsigned char>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned char>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned char>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, unsigned char>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned char>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned char>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned char>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned char>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned char>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned char>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned char>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned char>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned char>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned char>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned char>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}
{unordered_set<TSKUIDStruct, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<TSKUIDStruct>>="__table_"{__hash_table<TSKUIDStruct, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<TSKUIDStruct>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *>, std::allocator<std::__hash_node<TSKUIDStruct, void *>>>="__value_"{__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::hash<TSKUIDStruct>>="__value_"Q}"__p3_"{__compressed_pair<float, std::equal_to<TSKUIDStruct>>="__value_"f}}}
{vector<TSUCellRect, std::allocator<TSUCellRect>>=^{TSUCellRect}^{TSUCellRect}{__compressed_pair<TSUCellRect *, std::allocator<TSUCellRect>>=^{TSUCellRect}}}24@0:8r^v16
v32@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16{TSUModelCellCoord={TSUCellCoord=ISBB}}24
v24@0:8r^{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}48@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}32
{vector<TSUModelCellRect, std::allocator<TSUModelCellRect>>=^{TSUModelCellRect}^{TSUModelCellRect}{__compressed_pair<TSUModelCellRect *, std::allocator<TSUModelCellRect>>=^{TSUModelCellRect}}}24@0:8r^v16
B24@0:8r^{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{TSUModelCellCoord={TSUCellCoord=ISBB}}24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}44@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24@32B40
v44@0:8{_NSRange=QQ}16r^v32B40
{unordered_map<TSUModelCellCoord, TSUModelCellCoord, std::hash<TSUModelCellCoord>, std::equal_to<TSUModelCellCoord>, std::allocator<std::pair<const TSUModelCellCoord, TSUModelCellCoord>>>="__table_"{__hash_table<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, std::__unordered_map_hasher<TSUModelCellCoord, std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, std::hash<TSUModelCellCoord>, std::equal_to<TSUModelCellCoord>, true>, std::__unordered_map_equal<TSUModelCellCoord, std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, std::equal_to<TSUModelCellCoord>, std::hash<TSUModelCellCoord>, true>, std::allocator<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSUModelCellCoord, std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, std::hash<TSUModelCellCoord>, std::equal_to<TSUModelCellCoord>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSUModelCellCoord, std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, std::equal_to<TSUModelCellCoord>, std::hash<TSUModelCellCoord>, true>>="__value_"f}}}
@"TSCellRangeCache"
@"TSTMergeChangeDistributor"
@40@0:8@16r^{TSKUIDStruct=QQ}24@32
{TSCESpanningRangeRef={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}C}20@0:8S16
@24@0:8r^{TSCESpanningRangeRef={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}C}16
@"TSCETrackedReferenceStore"
@48@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}32
i28@0:8@16i24
{CGSize=dd}32@0:8@16d24
d20@0:8B16
d36@0:8S16B20B24^B28
d60@0:8I16B20B24B28B32{CGSize=dd}36^B52
d44@0:8{CGSize=dd}16I32d36
d24@0:8I16B20
v44@0:8@16i24I28B32I36I40
v28@0:8I16I20I24
B28@0:8^I16B24
d28@0:8I16I20I24
d24@0:8I16I20
v36@0:8I16I20I24@?28
{CGSize=dd}36@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16B32
d36@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16B32
d40@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16@32
d44@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16B32@36
d52@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16B32{CGSize=dd}36
v32@0:8d16Q24
B32@0:8^@16{TSUCellCoord=ISBB}24
B24@0:8q16
B28@0:8q16I24
v40@0:8@16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24
v36@0:8i16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}20
v52@0:8i16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}20{TSUCellRect={TSUCellCoord=ISBB}{?=II}}36
v76@0:8@16{TSUCellCoord=ISBB}24{TSUCellRect={TSUCellCoord=ISBB}{?=II}}32B48@52@60@68
v52@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16@32B40@44
v40@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16@32
v40@0:8{TSUCellCoord=ISBB}16{TSUCellCoord=ISBB}24@32
{TSUCellCoord=ISBB}56@0:8{TSUCellCoord=ISBB}16{TSUCellCoord=ISBB}24{TSUCellRect={TSUCellCoord=ISBB}{?=II}}32@48
v36@0:8@16S24@28
v36@0:8@16I24@28
v36@0:8i16@20@28
@76@0:8{TSUCellCoord=ISBB}16@24@32B40i44@48i56Q60Q68
v104@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16@32@40{TSUCellRect={TSUCellCoord=ISBB}{?=II}}48B64i68@72B80i84@88@96
@56@0:8@16{TSUCellCoord=ISBB}24@32^i40^i48
@48@0:8@16{TSUCellCoord=ISBB}24@32i40i44
@40@0:8@16{TSUCellCoord=ISBB}24@32
{UIEdgeInsets=dddd}24@0:8{TSUCellCoord=ISBB}16
[18d]
@"NSObject<OS_dispatch_group>"
@"TSKChangeNotifier"
@"TSTStrokeDefaultVendor"
@"TSTWPColumnCache"
@"TSTDupContentCache"
@"TSTWidthHeightCache"
@"TSTHiddenRowsColumnsCache"
@"TSDFill"
@"TSUColor"
@"TSDInfoGeometry"
@"TSDLayoutGeometry"
@"TSTMergeRangeSortedSet"
@"<TSWPStyleProviding>"
@"TSTFontInfoCache"
@"TSUWidthLimitedQueue"
@"NSObject<OS_dispatch_queue>"
@"TSTConcurrentMutableIndexSet"
@"TSTStrokeWidthCache"
@"TSTRWRetainedPointerKeyDictionary"
@"NSCountedSet"
@"TSTLayout"
@"<TSTLayoutDynamicContentProtocol>"
@"TSTLayoutDynamicResizeInfo"
@"<TSTLayoutDynamicCellFillProtocol>"
@"TSWPColumnStyle"
@"TSTTextEngineDelegate"
B24@0:8@"TSKSelectionPath"16
@"<TSDHint>"16@0:8
@92@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16{TSUCellCoord=ISBB}32I40{CGSize=dd}44{CGSize=dd}60@76B84B88
@"NSNumber"
@32@0:8@"TSPObjectContext"16@"<TSDHint>"24
v24@0:8@"<TSDHint>"16
@60@0:8{CGSize=dd}16@32@40B48o^B52
B36@0:8@16@24B32
@"TSDLayout"60@0:8{CGSize=dd}16@"TSDLayout"32@"<TSDHint>"40B48o^B52
@"<TSDHint>"60@0:8{CGSize=dd}16@"TSDLayout"32@"<TSDHint>"40B48o^B52
@"TSDLayout"32@0:8@"<TSDHint>"16@"TSDLayout"24
B36@0:8@"<TSDHint>"16@"<TSDHint>"24B32
@"<TSDHint>"24@0:8@"TSDLayout"16
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}44@0:8{CGSize=dd}16@32B40
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}68@0:8S16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}20d36{CGSize=dd}44@60
B28@0:8@16B24
B56@0:8@16{CGSize=dd}24@40@48
@32@0:8{CGSize=dd}16
v36@0:8@16@24B32
B24@0:8@?16
@"TSTLayoutSpace"
@44@0:8i16{_NSRange=QQ}20@36
{unordered_map<unsigned int, TSTTableDataObject *, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<const unsigned int, TSTTableDataObject *>>>="__table_"{__hash_table<std::__hash_value_type<unsigned int, TSTTableDataObject *>, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, TSTTableDataObject *>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, TSTTableDataObject *>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>, std::allocator<std::__hash_value_type<unsigned int, TSTTableDataObject *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned int, TSTTableDataObject *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, TSTTableDataObject *>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, TSTTableDataObject *>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>>="__value_"f}}}
@64@0:8@16@24{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}32Q48Q56
@80@0:8@16@24@32@40{TSUCellRect={TSUCellCoord=ISBB}{?=II}}48Q64Q72
v40@0:8@?16@?24@?32
v48@0:8@?16@?24@?32@?40
{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}}32@0:8@16@24
@40@0:8r^v16r^v24@32
@28@0:8i16r^v20
@40@0:8r^v16r^v24r^v32
{vector<TSCEFormulaObject *, std::allocator<TSCEFormulaObject *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<TSCEFormulaObject *__strong *, std::allocator<TSCEFormulaObject *>>="__value_"^@}}
v64@0:8r^{TSKUIDStruct=QQ}16Q24^v32^v40^v48^v56
v40@0:8r^v16Q24^v32
@"TSTCellUIDLookupListWrapper"
{TSKUIDStruct=QQ}64@0:8r^v16r^v24^Q32^Q40^Q48^v56
B32@0:8^v16Q24
{deque<TSKUIDStruct, std::allocator<TSKUIDStruct>>="__map_"{__split_buffer<TSKUIDStruct *, std::allocator<TSKUIDStruct *>>="__first_"^^{TSKUIDStruct}"__begin_"^^{TSKUIDStruct}"__end_"^^{TSKUIDStruct}"__end_cap_"{__compressed_pair<TSKUIDStruct **, std::allocator<TSKUIDStruct *>>="__value_"^^{TSKUIDStruct}}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::allocator<TSKUIDStruct>>="__value_"Q}}
@44@0:8i16@20{TSKUIDStruct=QQ}28
[256@"TSTTableTile"]
[256@"TSPLazyReference"]
@40@0:8r^{TSKUIDStruct=QQ}16@24@32
@"TSTHierarchicalCellDiffMap"
@56@0:8@16{TSKUIDStruct=QQ}24@40@48
Q40@0:8@16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24
@36@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16B32
@40@0:8q16{TSKUIDStruct=QQ}24
@24@0:8^v16
{map<TSKUIDStruct, TSTPivotGroupingColumnOptions *, std::less<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSTPivotGroupingColumnOptions *>>>="__tree_"{__tree<std::__value_type<TSKUIDStruct, TSTPivotGroupingColumnOptions *>, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSTPivotGroupingColumnOptions *>, std::less<TSKUIDStruct>, true>, std::allocator<std::__value_type<TSKUIDStruct, TSTPivotGroupingColumnOptions *>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSKUIDStruct, TSTPivotGroupingColumnOptions *>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSTPivotGroupingColumnOptions *>, std::less<TSKUIDStruct>, true>>="__value_"Q}}}
d20@0:8S16
v36@0:8^d16^d24I32
B24@0:8I16S20
v36@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16I32
v36@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16S32
@40@0:8@16@24I32S36
{vector<TSTWidthHeightCacheEntry<4>, std::allocator<TSTWidthHeightCacheEntry<4>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<TSTWidthHeightCacheEntry<4> *, std::allocator<TSTWidthHeightCacheEntry<4>>>="__value_"^v}}
@36@0:8i16@20@28
@44@0:8i16{TSUCellCoord=ISBB}20@28@36
@52@0:8i16@20@28Q36Q44
@44@0:8i16@20Q28Q36
@44@0:8i16{TSUCellCoord=ISBB}20{TSUCellRect={TSUCellCoord=ISBB}{?=II}}28
@60@0:8i16{TSUCellCoord=ISBB}20{TSUCellRect={TSUCellCoord=ISBB}{?=II}}28{TSUCellRect={TSUCellCoord=ISBB}{?=II}}44
@36@0:8i16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}20
@52@0:8i16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}20{TSUCellRect={TSUCellCoord=ISBB}{?=II}}36
v36@0:8@16i24@?28
@68@0:8i16@20{TSUCellCoord=ISBB}28@36@44@52@60
@60@0:8i16@20{TSUCellCoord=ISBB}28@36@44@52
@"NSHashTable"
@"TSKShuffleMapping"
@"NSSet"
@"TSULocale"16@0:8
@"<TSWPStyleProviding>"16@0:8
@64@0:8{UIEdgeInsets=dddd}16i48@52B60
@26@0:8{TSUModelColumnIndex=S}16i18i22
{unordered_map<TSKUIDStruct, TSCEMutableUIDSet *, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSCEMutableUIDSet *>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
@"NSObject<OS_dispatch_semaphore>"
v48@0:8{UIEdgeInsets=dddd}16
@"TSTLayoutContentCachedKey"
@"TSWPColumn"
^{CGImage=}16@0:8
v24@0:8^{CGImage=}16
^{CGImage=}
v52@0:8@16C24^v28^v36^v44
@48@0:8@16@24r^v32r^v40
Q20@0:8B16
C20@0:8B16
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}32@0:8r^v16q24
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}24@0:8q16
@40@0:8I16C20^{TSKUIDStruct=QQ}24q32
C40@0:8{_NSRange=QQ}16q32
r^v24@0:8q16
v32@0:8r^v16q24
v40@0:8r^v16r^{TSKUIDStruct=QQ}24q32
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}40@0:8r^v16r^v24q32
@"TSTReferenceNode"
@"<TSTCanvasReferenceProvider>"
@52@0:8@16{TSTSimpleRange=qQ}24i40Q44
@32@0:8{TSTSimpleRange=qQ}16
{vector<TSTStrokeLayerRun, std::allocator<TSTStrokeLayerRun>>="__begin_"^{TSTStrokeLayerRun}"__end_"^{TSTStrokeLayerRun}"__end_cap_"{__compressed_pair<TSTStrokeLayerRun *, std::allocator<TSTStrokeLayerRun>>="__value_"^{TSTStrokeLayerRun}}}
v32@0:8q16q24
v40@0:8{_NSRange=QQ}16q32
v116@0:8@16@24i32@36@44i52@56@64i72@76@84i92@96@104i112
@"TSSStyle"
@"TSSStylesheet"
Q28@0:8@16i24
v28@0:8Q16B24
^{TSUCellRect={TSUCellCoord=ISBB}{?=II}}
d40@0:8@16d24N^d32
[8{os_unfair_lock_s="_os_unfair_lock_opaque"I}]
[8{unordered_map<TSTFontInfoCacheDupContentEntry, double, std::hash<TSTFontInfoCacheDupContentEntry>, std::equal_to<TSTFontInfoCacheDupContentEntry>, std::allocator<std::pair<const TSTFontInfoCacheDupContentEntry, double>>>="__table_"{__hash_table<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, std::__unordered_map_hasher<TSTFontInfoCacheDupContentEntry, std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, std::hash<TSTFontInfoCacheDupContentEntry>, std::equal_to<TSTFontInfoCacheDupContentEntry>, true>, std::__unordered_map_equal<TSTFontInfoCacheDupContentEntry, std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, std::equal_to<TSTFontInfoCacheDupContentEntry>, std::hash<TSTFontInfoCacheDupContentEntry>, true>, std::allocator<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSTFontInfoCacheDupContentEntry, std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, std::hash<TSTFontInfoCacheDupContentEntry>, std::equal_to<TSTFontInfoCacheDupContentEntry>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSTFontInfoCacheDupContentEntry, std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, std::equal_to<TSTFontInfoCacheDupContentEntry>, std::hash<TSTFontInfoCacheDupContentEntry>, true>>="__value_"f}}}]
@"TSWPTextMeasurerBundle"
v32@0:8r^v16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24
{vector<std::vector<NSString *>, std::allocator<std::vector<NSString *>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::vector<NSString *> *, std::allocator<std::vector<NSString *>>>="__value_"^v}}
{vector<TSKUIDStructCoord, std::allocator<TSKUIDStructCoord>>="__begin_"^{TSKUIDStructCoord}"__end_"^{TSKUIDStructCoord}"__end_cap_"{__compressed_pair<TSKUIDStructCoord *, std::allocator<TSKUIDStructCoord>>="__value_"^{TSKUIDStructCoord}}}
^v28@0:8@16B24
{map<NSString *, TSTHeaderNameMgrEntry *, std::less<NSString *>, std::allocator<std::pair<NSString *const, TSTHeaderNameMgrEntry *>>>="__tree_"{__tree<std::__value_type<NSString *, TSTHeaderNameMgrEntry *>, std::__map_value_compare<NSString *, std::__value_type<NSString *, TSTHeaderNameMgrEntry *>, std::less<NSString *>, true>, std::allocator<std::__value_type<NSString *, TSTHeaderNameMgrEntry *>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<NSString *, TSTHeaderNameMgrEntry *>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<NSString *, std::__value_type<NSString *, TSTHeaderNameMgrEntry *>, std::less<NSString *>, true>>="__value_"Q}}}
@"TSTHeaderNameMgr"
{TSCECellRefSet={map<TSKUIDStruct, TSCECellCoordSet, std::less<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSCECellCoordSet>>>={__tree<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>, std::allocator<std::__value_type<TSKUIDStruct, TSCECellCoordSet>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>>=Q}}}}24@0:8@16
{unordered_map<NSString *, TSCECellRefSet, std::hash<NSString *>, std::equal_to<NSString *>, std::allocator<std::pair<NSString *const, TSCECellRefSet>>>="__table_"{__hash_table<std::__hash_value_type<NSString *, TSCECellRefSet>, std::__unordered_map_hasher<NSString *, std::__hash_value_type<NSString *, TSCECellRefSet>, std::hash<NSString *>, std::equal_to<NSString *>, true>, std::__unordered_map_equal<NSString *, std::__hash_value_type<NSString *, TSCECellRefSet>, std::equal_to<NSString *>, std::hash<NSString *>, true>, std::allocator<std::__hash_value_type<NSString *, TSCECellRefSet>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSCECellRefSet>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSCECellRefSet>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSCECellRefSet>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSCECellRefSet>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSCECellRefSet>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSCECellRefSet>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSCECellRefSet>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<NSString *, TSCECellRefSet>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSCECellRefSet>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<NSString *, std::__hash_value_type<NSString *, TSCECellRefSet>, std::hash<NSString *>, std::equal_to<NSString *>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<NSString *, std::__hash_value_type<NSString *, TSCECellRefSet>, std::equal_to<NSString *>, std::hash<NSString *>, true>>="__value_"f}}}
{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}24@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16
@32@0:8@"TSPObjectContext"16@"TSCECalculationEngine"24
{TSCECellRefSet={map<TSKUIDStruct, TSCECellCoordSet, std::less<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSCECellCoordSet>>>={__tree<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>, std::allocator<std::__value_type<TSKUIDStruct, TSCECellCoordSet>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>>=Q}}}}24@0:8@"NSString"16
v32@0:8^v16r^{TSUCellCoord=ISBB}24
{TSUCellCoord=ISBB}20@0:8B16
{vector<NSString *, std::allocator<NSString *>>=^@^@{__compressed_pair<NSString *__strong *, std::allocator<NSString *>>=^@}}28@0:8@16B24
^{TSTHeaderPerTable={TSKUIDStruct=QQ}{TSUCellCoord=ISBB}@@@@B}28@0:8r^{TSKUIDStruct=QQ}16B24
^v24@0:8r^{TSUCellCoord=ISBB}16
@36@0:8@16B24^Q28
v40@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24r^{TSKUIDStruct=QQ}32
v40@0:8r^v16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24r^{TSKUIDStruct=QQ}32
v32@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16r^{TSKUIDStruct=QQ}24
@24@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16
B40@0:8@16r^v24r^{TSKUIDStruct=QQ}32
@28@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16B24
@36@0:8@16r^{TSKUIDStruct=QQ}24B32
{TSCECellRefSet={map<TSKUIDStruct, TSCECellCoordSet, std::less<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSCECellCoordSet>>>={__tree<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>, std::allocator<std::__value_type<TSKUIDStruct, TSCECellCoordSet>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>>=Q}}}}36@0:8@16r^{TSKUIDStruct=QQ}24B32
{TSCECellRefSet={map<TSKUIDStruct, TSCECellCoordSet, std::less<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSCECellCoordSet>>>={__tree<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>, std::allocator<std::__value_type<TSKUIDStruct, TSCECellCoordSet>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>>=Q}}}}24@0:8r^{TSKUIDStruct=QQ}16
{vector<TSTHeaderNameMgrTile *, std::allocator<TSTHeaderNameMgrTile *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<TSTHeaderNameMgrTile *__strong *, std::allocator<TSTHeaderNameMgrTile *>>="__value_"^@}}
{unordered_map<TSUCellCoord, TSTHeaderNameMgrEntry *, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, std::allocator<std::pair<const TSUCellCoord, TSTHeaderNameMgrEntry *>>>="__table_"{__hash_table<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>, std::allocator<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>>="__value_"f}}}
{unordered_map<TSCEUidCellRef, TSCECellCoordSet, std::hash<TSCEUidCellRef>, std::equal_to<TSCEUidCellRef>, std::allocator<std::pair<const TSCEUidCellRef, TSCECellCoordSet>>>="__table_"{__hash_table<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, std::__unordered_map_hasher<TSCEUidCellRef, std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, std::hash<TSCEUidCellRef>, std::equal_to<TSCEUidCellRef>, true>, std::__unordered_map_equal<TSCEUidCellRef, std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, std::equal_to<TSCEUidCellRef>, std::hash<TSCEUidCellRef>, true>, std::allocator<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSCEUidCellRef, std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, std::hash<TSCEUidCellRef>, std::equal_to<TSCEUidCellRef>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSCEUidCellRef, std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, std::equal_to<TSCEUidCellRef>, std::hash<TSCEUidCellRef>, true>>="__value_"f}}}
{unordered_map<TSKUIDStruct, TSTHeaderPerTable *, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSTHeaderPerTable *>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
{unordered_map<TSUCellCoord, TSKUIDStruct, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, std::allocator<std::pair<const TSUCellCoord, TSKUIDStruct>>>="__table_"{__hash_table<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>, std::allocator<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>>="__value_"f}}}
@"TSCENameTrie"
v56@0:8@16{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24
@60@0:8@16{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24B56
@36@0:8@16{TSUCellCoord=ISBB}24B32
@"TSTCellDiffArray"
@24@0:8{TSUModelColumnOrRowIndex=I}16i20
@20@0:8{TSUModelColumnOrRowIndex=I}16
{TSUModelColumnOrRowIndex=I}16@0:8
{TSUModelColumnOrRowIndex="_index"I}
@24@0:8{TSUViewColumnOrRowIndex=I}16i20
{TSUViewColumnOrRowIndex=I}16@0:8
{TSUViewColumnOrRowIndex="_index"I}
@56@0:8@16Q24Q32{TSUCellRect={TSUCellCoord=ISBB}{?=II}}40
v40@0:8Q16Q24@?32
v48@0:8@16Q24Q32@?40
v64@0:8@16Q24Q32{TSUCellRect={TSUCellCoord=ISBB}{?=II}}40@?56
@36@0:8d16B24o^d28
{CGRect={CGPoint=dd}{CGSize=dd}}56@0:8d16{CGRect={CGPoint=dd}{CGSize=dd}}24
{CGRect={CGPoint=dd}{CGSize=dd}}76@0:8d16{CGRect={CGPoint=dd}{CGSize=dd}}24B56o^@60o^{CGSize=dd}68
v76@0:8B16d20^{CGContext=}28{CGRect={CGPoint=dd}{CGSize=dd}}36@68
v76@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16d32{UIEdgeInsets=dddd}40B72
{set<TSTMergeRangeElem, TSTMergeRangeElemCompare, std::allocator<TSTMergeRangeElem>>="__tree_"{__tree<TSTMergeRangeElem, TSTMergeRangeElemCompare, std::allocator<TSTMergeRangeElem>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<TSTMergeRangeElem, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, TSTMergeRangeElemCompare>="__value_"Q}}}
@108@0:8@16d24d32@40B48C52{UIEdgeInsets=dddd}56i88i92i96@100
@40@0:8@"TSTLayoutEngine"16@"TSTCellRegion"24@"TSTCellRegion"32
@24@0:8@"TSTLayoutEngine"16
@32@0:8@"TSTLayoutEngine"16@"TSTCellRegion"24
@24@0:8@"<TSTLayoutDynamicResizeInfoProtocol>"16
v24@0:8@"TSTLayoutEngine"16
@"TSTImmutableColumnRowUIDMap"
B32@0:8@16Q24
{unordered_map<TSUViewColumnIndex, TSUModelColumnIndex, std::hash<TSUViewColumnIndex>, std::equal_to<TSUViewColumnIndex>, std::allocator<std::pair<const TSUViewColumnIndex, TSUModelColumnIndex>>>="__table_"{__hash_table<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, std::__unordered_map_hasher<TSUViewColumnIndex, std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, std::hash<TSUViewColumnIndex>, std::equal_to<TSUViewColumnIndex>, true>, std::__unordered_map_equal<TSUViewColumnIndex, std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, std::equal_to<TSUViewColumnIndex>, std::hash<TSUViewColumnIndex>, true>, std::allocator<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSUViewColumnIndex, std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, std::hash<TSUViewColumnIndex>, std::equal_to<TSUViewColumnIndex>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSUViewColumnIndex, std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, std::equal_to<TSUViewColumnIndex>, std::hash<TSUViewColumnIndex>, true>>="__value_"f}}}
@"TSTCategoryTranslator"
@"TSTTableTile"
@"TSTTableTileRowInfo"
{TSKUIDStruct=QQ}24@0:8I16B20
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}28@0:8@16B24
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}36@0:8{_NSRange=QQ}16B32
@"TSCECalculationEngine"16@0:8
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}28@0:8@"NSIndexSet"16B24
@"NSMutableIndexSet"28@0:8r^v16B24
@32@0:8r^{TSKUIDStruct=QQ}16r^{TSKUIDStruct=QQ}24
r^{TSKUIDStruct=QQ}16@0:8
@40@0:8C16{TSKUIDStruct=QQ}20C36
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
v24@0:8^{TSKUIDStruct=QQ}16
{map<TSKUIDStructCoord, TSTCell *, std::less<TSKUIDStructCoord>, std::allocator<std::pair<const TSKUIDStructCoord, TSTCell *>>>="__tree_"{__tree<std::__value_type<TSKUIDStructCoord, TSTCell *>, std::__map_value_compare<TSKUIDStructCoord, std::__value_type<TSKUIDStructCoord, TSTCell *>, std::less<TSKUIDStructCoord>, true>, std::allocator<std::__value_type<TSKUIDStructCoord, TSTCell *>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSKUIDStructCoord, TSTCell *>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<TSKUIDStructCoord, std::__value_type<TSKUIDStructCoord, TSTCell *>, std::less<TSKUIDStructCoord>, true>>="__value_"Q}}}
@34@0:8@16{TSUModelColumnIndex=S}24@26
@42@0:8@16@24{TSUModelColumnIndex=S}32@34
@32@0:8@16^B24
B36@0:8I16r^{TSKUIDStruct=QQ}20@28
{TSUModelColumnIndex=S}24@0:8@16
@"TSTFormulaPredicate"
@36@0:8@16i24@28
B28@0:8q16C24
B36@0:8I16@20@28
v44@0:8@16@24Q32B40
v34@0:8{TSUModelColumnIndex=S}16@18@?26
@26@0:8{TSUModelColumnIndex=S}16@18
Q26@0:8{TSUModelColumnIndex=S}16@18
@52@0:8C16{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}20{TSUCellCoord=ISBB}44
@36@0:8C16@20{TSUCellCoord=ISBB}28
B32@0:8@16{TSUCellCoord=ISBB}24
@56@0:8C16@20@28@36C44C48B52
@80@0:8C16@20@28C36C40{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}44{TSUCellCoord=ISBB}68B76
@64@0:8C16@20@28C36C40@44{TSUCellCoord=ISBB}52B60
@76@0:8C16@20@28C36C40{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}44{TSUCellCoord=ISBB}68
{TSCEFormulaCreator=@?}44@0:8C16C20@24I32B36B40
@96@0:8C16@20@28d36d44C52C56{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}60{TSUCellCoord=ISBB}84B92
@92@0:8C16@20@28d36d44C52C56{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}60{TSUCellCoord=ISBB}84
@72@0:8C16d20d28C36{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}40{TSUCellCoord=ISBB}64
@80@0:8C16d20C28d32C40C44{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}48{TSUCellCoord=ISBB}72
@60@0:8C16@20{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}28{TSUCellCoord=ISBB}52
@24@0:8^{TSCEFormulaRewriteContext=@@{TSCEFormulaRewriteContextRecord={TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}{TSKUIDStruct=QQ}{TSUColumnRowOffset=ii}BBBBBBB}}16
v40@0:8r^{TSKUIDStruct=QQ}16r^{TSKUIDStruct=QQ}24r^{TSKUIDStruct=QQ}32
v48@0:8^v16@24r^{TSKUIDStruct=QQ}32r^{TSUCellCoord=ISBB}40
C48@0:8@16Q24@32{TSUCellCoord=ISBB}40
B36@0:8C16C20C24^B28
B40@0:8{TSUCellCoord=ISBB}16r^{TSKUIDStruct=QQ}24@32
v32@0:8q16@24
@40@0:8r^v16@24^B32
v40@0:8r^v16@24^B32
v28@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16C24
@48@0:8r^v16@24r^{TSKUIDStruct=QQ}32^B40
@24@0:8{TSUColumnRowOffset=ii}16
@32@0:8r^{TSKUIDStruct=QQ}16{TSUCellCoord=ISBB}24
@32@0:8^{TSCEFormulaRewriteContext=@@{TSCEFormulaRewriteContextRecord={TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}{TSKUIDStruct=QQ}{TSUColumnRowOffset=ii}BBBBBBB}}16@?24
v40@0:8^{TSCEFormulaRewriteContext=@@{TSCEFormulaRewriteContextRecord={TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}{TSKUIDStruct=QQ}{TSUColumnRowOffset=ii}BBBBBBB}}16^B24@?32
C24@0:8C16B20
{TSCEUidCellRef={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16@0:8
v64@0:8{TSCEUidCellRef={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
@"TSTFormulaPredArg"
{TSCEUidCellRef="_columnUid"{TSKUIDStruct="_lower"Q"_upper"Q}"_rowUid"{TSKUIDStruct="_lower"Q"_upper"Q}"_tableUid"{TSKUIDStruct="_lower"Q"_upper"Q}}
@"TSTStrokeSelection"
@68@0:8i16@20d28{CGRect={CGPoint=dd}{CGSize=dd}}36
v24@0:8^{CGContext=}16
@40@0:8@16@24@?32
{vector<TSUCellRect, std::allocator<TSUCellRect>>=^{TSUCellRect}^{TSUCellRect}{__compressed_pair<TSUCellRect *, std::allocator<TSUCellRect>>=^{TSUCellRect}}}32@0:8^v16^v24
@36@0:8{_NSRange=QQ}16I32
@36@0:8{_NSRange=QQ}16S32
v40@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16@?32
{vector<TSUCellRect, std::allocator<TSUCellRect>>=^{TSUCellRect}^{TSUCellRect}{__compressed_pair<TSUCellRect *, std::allocator<TSUCellRect>>=^{TSUCellRect}}}24@0:8Q16
@32@0:8{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
v36@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16B32
{set<TSUCellRect, TSTCellRangeRowMajorLess, std::allocator<TSUCellRect>>="__tree_"{__tree<TSUCellRect, TSTCellRangeRowMajorLess, std::allocator<TSUCellRect>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<TSUCellRect, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, TSTCellRangeRowMajorLess>="__value_"Q}}}
{set<TSUCellRect, TSTCellRangeColumnMajorLess, std::allocator<TSUCellRect>>="__tree_"{__tree<TSUCellRect, TSTCellRangeColumnMajorLess, std::allocator<TSUCellRect>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<TSUCellRect, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, TSTCellRangeColumnMajorLess>="__value_"Q}}}
{RefTypeHolder<TSCECellRef, 2>={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}}24@0:8r^v16
{RefTypeHolder<TSCECellRef, 1>={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}}24@0:8r^v16
{RefTypeHolder<TSCECellRef, 0>={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}}24@0:8r^v16
{TSUModelCellCoord={TSUCellCoord=ISBB}}24@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16
{TSUModelCellCoord={TSUCellCoord=ISBB}}24@0:8{TSUChromeCellCoord={TSUCellCoord=ISBB}}16
{TSUViewCellCoord={TSUCellCoord=ISBB}}24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
{TSUChromeCellCoord={TSUCellCoord=ISBB}}24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
{TSUChromeCellCoord={TSUCellCoord=ISBB}}24@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16
{TSUViewCellCoord={TSUCellCoord=ISBB}}24@0:8{TSUChromeCellCoord={TSUCellCoord=ISBB}}16
{TSUModelRowIndex=I}20@0:8{TSUViewRowIndex=I}16
{TSUModelRowIndex=I}20@0:8{TSUChromeRowIndex=I}16
{TSUModelColumnIndex=S}18@0:8{TSUViewColumnIndex=S}16
{TSUModelColumnIndex=S}18@0:8{TSUChromeColumnIndex=S}16
{TSUViewRowIndex=I}20@0:8{TSUModelRowIndex=I}16
{TSUViewColumnIndex=S}18@0:8{TSUModelColumnIndex=S}16
{TSUChromeRowIndex=I}20@0:8{TSUViewRowIndex=I}16
{TSUChromeColumnIndex=S}18@0:8{TSUViewColumnIndex=S}16
{TSUViewRowIndex=I}20@0:8{TSUChromeRowIndex=I}16
{TSUViewColumnIndex=S}18@0:8{TSUChromeColumnIndex=S}16
{TSUChromeRowIndex=I}20@0:8{TSUModelRowIndex=I}16
{TSUChromeColumnIndex=S}18@0:8{TSUModelColumnIndex=S}16
{TSKUIDStruct=QQ}18@0:8{TSUModelColumnIndex=S}16
{TSKUIDStruct=QQ}20@0:8{TSUModelRowIndex=I}16
{TSUModelColumnIndex=S}32@0:8{TSKUIDStruct=QQ}16
{TSUModelRowIndex=I}32@0:8{TSKUIDStruct=QQ}16
{TSUViewColumnIndex=S}32@0:8{TSKUIDStruct=QQ}16
{TSUViewRowIndex=I}32@0:8{TSKUIDStruct=QQ}16
{TSKUIDStruct=QQ}18@0:8{TSUViewColumnIndex=S}16
{TSKUIDStruct=QQ}20@0:8{TSUViewRowIndex=I}16
@"TSCECellTractRef"24@0:8@"TSCECellTractRef"16
@"NSMutableIndexSet"24@0:8@"NSMutableIndexSet"16
v20@0:8{TSUViewRowIndex=I}16
v18@0:8{TSUViewColumnIndex=S}16
{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}24@0:8{TSUCellCoord=ISBB}16
{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}24@0:8Q16
@32@0:8r^v16o^B24
i32@0:8o@16{TSUViewCellCoord={TSUCellCoord=ISBB}}24
@24@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16
@20@0:8{TSUViewRowIndex=I}16
@32@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16@24
i32@0:8@16{TSUViewCellCoord={TSUCellCoord=ISBB}}24
d20@0:8{TSUViewRowIndex=I}16
d18@0:8{TSUViewColumnIndex=S}16
i42@0:8{TSUViewColumnIndex=S}16r^v18@26Q34
i48@0:8{TSUViewRowIndex=I}16r^v20@28Q36B44
v24@0:8{TSUViewRowIndex=I}16{TSUViewRowIndex=I}20
v20@0:8{TSUViewColumnIndex=S}16{TSUViewColumnIndex=S}18
v36@0:8{_NSRange=QQ}16{TSUViewRowIndex=I}32
v40@0:8@16{TSUViewCellCoord={TSUCellCoord=ISBB}}24@32
@32@0:8@16{TSUViewCellCoord={TSUCellCoord=ISBB}}24
{TSUViewCellCoord={TSUCellCoord=ISBB}}24@0:8@16
B32@0:8{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}24@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16
{TSUViewCellCoord={TSUCellCoord=ISBB}}24@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16
{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}32@0:8{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{vector<TSUViewCellRect, std::allocator<TSUViewCellRect>>=^{TSUViewCellRect}^{TSUViewCellRect}{__compressed_pair<TSUViewCellRect *, std::allocator<TSUViewCellRect>>=^{TSUViewCellRect}}}32@0:8{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{vector<TSUViewCellRect, std::allocator<TSUViewCellRect>>=^{TSUViewCellRect}^{TSUViewCellRect}{__compressed_pair<TSUViewCellRect *, std::allocator<TSUViewCellRect>>=^{TSUViewCellRect}}}24@0:8@16
{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}24@0:8r^v16
{RefTypeHolder<TSCERangeRef, 1>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}24@0:8r^v16
{TSUModelCellCoord={TSUCellCoord=ISBB}}48@0:8{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
{TSUViewCellCoord={TSUCellCoord=ISBB}}48@0:8{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
@28@0:8C16r^{TSKUIDStruct=QQ}20
@"TSTStrokeLayerMergedStack"
@40@0:8r^v16@24^I32
v36@0:8^v16@24I32
v24@0:8{TSCEGridDimensions=II}16
B40@0:8{TSUCellCoord=ISBB}16@24r^{TSKUIDStruct=QQ}32
v32@0:8^{TSCEFormulaRewriteContext=@@{TSCEFormulaRewriteContextRecord={TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}{TSKUIDStruct=QQ}{TSUColumnRowOffset=ii}BBBBBBB}}16@?24
@40@0:8@16r^{TSKUIDStruct=QQ}24^{TSCEFormulaRewriteContext=@@{TSCEFormulaRewriteContextRecord={TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}{TSKUIDStruct=QQ}{TSUColumnRowOffset=ii}BBBBBBB}}32
@40@0:8@16r^{TSKUIDStruct=QQ}24r^{TSUCellCoord=ISBB}32
B40@0:8{TSUCellCoord=ISBB}16@24^Q32
@"TSCECellCoordinateVector"
d76@0:8d16@24q32d40I48^d52^d60^d68
B60@0:8d16@24q32I40^d44^d52
@32@0:8@16r^v24
@32@0:8I16C20^{TSKUIDStruct=QQ}24
C32@0:8{_NSRange=QQ}16
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}32@0:8r^v16r^v24
@68@0:8@16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24@40{TSUCellRect={TSUCellCoord=ISBB}{?=II}}48i64
I32@0:8^v16^{TSTColumnOrRowMap=IIIB}24
{_NSRange=QQ}32@0:8r^{TSTColumnOrRowMap=IIIB}16r^v24
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}48@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16r^v32r^v40
{TSUCellCoord=ISBB}40@0:8{TSUCellCoord=ISBB}16r^v24r^v32
^v48@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16r^v32r^v40
{vector<TSUCellRect, std::allocator<TSUCellRect>>=^{TSUCellRect}^{TSUCellRect}{__compressed_pair<TSUCellRect *, std::allocator<TSUCellRect>>=^{TSUCellRect}}}48@0:8r^v16^@24{TSUCellRect={TSUCellCoord=ISBB}{?=II}}32
{set<TSTColumnOrRowMap, TSTColumnOrRowMapTgtLess, std::allocator<TSTColumnOrRowMap>>="__tree_"{__tree<TSTColumnOrRowMap, TSTColumnOrRowMapTgtLess, std::allocator<TSTColumnOrRowMap>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<TSTColumnOrRowMap, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, TSTColumnOrRowMapTgtLess>="__value_"Q}}}
{unordered_map<TSKUIDStruct, TSTPlanForGroupingCell, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSTPlanForGroupingCell>>>={__hash_table<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>>>={unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, void *>>>={__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, void *> *>=^v}}{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>=Q}{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>=f}}}24@0:8@16
B40@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24@32
@40@0:8r^v16@24r^{TSKUIDStruct=QQ}32
@48@0:8@16@24q32@40
v44@0:8@16S24@28@36
B56@0:8@16r^v24@32@40@48
S24@0:8q16
@48@0:8Q16q24@32@40
@60@0:8d16C24@28@36{TSKUIDStruct=QQ}44
{vector<TSUCellCoord, std::allocator<TSUCellCoord>>=^{TSUCellCoord}^{TSUCellCoord}{__compressed_pair<TSUCellCoord *, std::allocator<TSUCellCoord>>=^{TSUCellCoord}}}16@0:8
v40@0:8{vector<TSUCellCoord, std::allocator<TSUCellCoord>>=^{TSUCellCoord}^{TSUCellCoord}{__compressed_pair<TSUCellCoord *, std::allocator<TSUCellCoord>>=^{TSUCellCoord}}}16
@32@0:8r^v16r^v24
Q24@0:8C16B20
i28@0:8@16{TSUViewRowIndex=I}24
i26@0:8@16{TSUViewColumnIndex=S}24
i56@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16@?24@?32@?40@?48
v52@0:8{TSUViewRowIndex=I}16@?20@?28@?36@?44
{TSUModelCellCoord={TSUCellCoord=ISBB}}24@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
B32@0:8^{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16{TSUCellCoord=ISBB}24
S24@0:8I16S20
{TSUCellCoord=ISBB}32@0:8{TSUColumnRowOffset=ii}16{TSUCellCoord=ISBB}24
I28@0:8Q16I24
@"TSTHiddenStateIndexSet"
v56@0:8@16@24{TSUCellCoord=ISBB}32Q40^B48
B32@0:8{CGPoint=dd}16
v40@0:8@16^{CGContext=}24@32
v40@0:8@"TSWPUIGraphicalAttachment"16^{CGContext=}24@"TSWPSelection"32
@"TSTTableNameSelection"
@24@0:8r*16
@32@0:8q16@24
q24@0:8q16
q32@0:8q16@24
@56@0:8{TSKUIDStruct=QQ}16{TSKUIDStruct=QQ}32q48
@40@0:8{TSKUIDStruct=QQ}16q32
@34@0:8{TSUModelColumnIndex=S}16q18@26
r^{TSCEFunctor=@C}16@0:8
{TSCEFunctor="_formula"@"TSCEFormulaObject""_numArgs"C}
@32@0:8@16r^{TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}24
@"TSTFormulaRewriteSpec"
{TSUViewCellCoord="_coord"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}}
@"TSTPivotTranslator"
i32@0:8@16S24B28
i28@0:8@16S24
^{TSCETableResolver=^^?}24@0:8@16
{TSKUIDStruct=QQ}24@0:8r^{TSKUIDStruct=QQ}16
{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}44@0:8@16r^{TSKUIDStruct=QQ}24C32^@36
@44@0:8@16r^{TSKUIDStruct=QQ}24C32^@36
^{TSCETableResolver=^^?}24@0:8@"<TSCEReferenceResolving>"16
C24@0:8@"TSCECategoryRef"16
{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}44@0:8@"TSCECategoryRef"16r^{TSKUIDStruct=QQ}24C32^@36
@"TSCEValueGrid"44@0:8@"TSCECategoryRef"16r^{TSKUIDStruct=QQ}24C32^@36
{vector<TSCECellRef, std::allocator<TSCECellRef>>=^{TSCECellRef}^{TSCECellRef}{__compressed_pair<TSCECellRef *, std::allocator<TSCECellRef>>=^{TSCECellRef}}}32@0:8@"TSCECategoryRef"16r^{TSKUIDStruct=QQ}24
{vector<TSCECategoryRef *, std::allocator<TSCECategoryRef *>>=^@^@{__compressed_pair<TSCECategoryRef *__strong *, std::allocator<TSCECategoryRef *>>=^@}}24@0:8@"TSCECategoryRef"16
{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}24@0:8@"TSCECategoryRef"16
@"<TSCEResolverContainer>"32@0:8@"NSString"16@"TSKDocumentRoot"24
@"<TSCEReferenceResolving>"40@0:8@"NSString"16@"TSKDocumentRoot"24@"<TSCEReferenceResolving>"32
@"<TSCEReferenceResolving>"40@0:8@"NSString"16@"TSKDocumentRoot"24@"NSString"32
@40@0:8q16@24@32
q20@0:8i16
{TSTImportWarningSetCellWarningFlags="mCondFormatAboveAvgEqualAverageImportWarning"b1"mCondFormatAboveAvgStdDevImportWarning"b1"mCondFormatComplexFormulaImportWarning"b1"mCondFormatContainsErrorsImportWarning"b1"mCondFormatExprImportWarning"b1"mCondFormatNotContainsErrorsImportWarning"b1"mCondFormatParametersNotAllTheSameTypeImportWarning"b1"mCondFormatStopIfTrueImportWarning"b1"mCondFormatUnsupportedOperatorImportWarning"b1"mCondFormatUnsupportedStylingImportWarning"b1"mCondFormatUnsupportedTimePeriodImportWarning"b1"mUnsupportedConditionalFormatImportWarning"b1"mUnsupportedDataFormatImportWarning"b1"mDurationFormatRangeChangedUpgradeWarning"b1}
{TSTImportFormulaWarning="mType"q"mOriginalFormula"@"NSString""mSupplementaryText"@"NSString"}
v32@0:8@16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24
{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24@0:8Q16
{unordered_map<TSCECellRef, TSTImportWarningSet *, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, std::allocator<std::pair<const TSCECellRef, TSTImportWarningSet *>>>="__table_"{__hash_table<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, std::__unordered_map_hasher<TSCECellRef, std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, true>, std::__unordered_map_equal<TSCECellRef, std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, std::equal_to<TSCECellRef>, std::hash<TSCECellRef>, true>, std::allocator<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSCECellRef, std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSCECellRef, std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, std::equal_to<TSCECellRef>, std::hash<TSCECellRef>, true>>="__value_"f}}}
{vector<TSCECellRef, std::allocator<TSCECellRef>>="__begin_"^{TSCECellRef}"__end_"^{TSCECellRef}"__end_cap_"{__compressed_pair<TSCECellRef *, std::allocator<TSCECellRef>>="__value_"^{TSCECellRef}}}
@48@0:8@16@24^B32^B40
@40@0:8@16Q24@32
i24@0:8Q16
B24@0:8@"<TSUMultipleChoiceListChoiceProviding>"16
@"NSString"24@0:8Q16
@"NSDate"24@0:8Q16
i20@0:8c16
v44@0:8r^v16i24@28@?36
v40@0:8r^v16@24@?32
@"NSObject<TSTTableDataPayloadHashing>"
B24@0:8r^{TSUCellCoord=ISBB}16
{map<TSUCellCoord, TSTCell *, std::less<TSUCellCoord>, std::allocator<std::pair<const TSUCellCoord, TSTCell *>>>="__tree_"{__tree<std::__value_type<TSUCellCoord, TSTCell *>, std::__map_value_compare<TSUCellCoord, std::__value_type<TSUCellCoord, TSTCell *>, std::less<TSUCellCoord>, true>, std::allocator<std::__value_type<TSUCellCoord, TSTCell *>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSUCellCoord, TSTCell *>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<TSUCellCoord, std::__value_type<TSUCellCoord, TSTCell *>, std::less<TSUCellCoord>, true>>="__value_"Q}}}
@"TSPTemporaryObjectContextDelegate"
@"TSPObjectContext"
{TSCECellCoordSet="_rowsPerColumn"{map<unsigned short, TSUIndexSet, std::less<unsigned short>, std::allocator<std::pair<const unsigned short, TSUIndexSet>>>="__tree_"{__tree<std::__value_type<unsigned short, TSUIndexSet>, std::__map_value_compare<unsigned short, std::__value_type<unsigned short, TSUIndexSet>, std::less<unsigned short>, true>, std::allocator<std::__value_type<unsigned short, TSUIndexSet>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned short, TSUIndexSet>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<unsigned short, std::__value_type<unsigned short, TSUIndexSet>, std::less<unsigned short>, true>>="__value_"Q}}}}
B28@0:8I16I20B24
C20@0:8C16
B24@0:8C16C20
@32@0:8^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}16@24
v32@0:8^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}16@24
v36@0:8^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}16@24B32
v36@0:8{TSUDecimal={?=[2Q]}}16B32
v32@0:8{TSUDecimal={?=[2Q]}}16
v24@0:8r^{TSUDecimal={?=[2Q]}}16
v48@0:8r^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16@24B32^B36B44
@32@0:8C16B20^B24
B32@0:8C16@20S28
v28@0:8B16C20B24
@28@0:8C16^B20
@24@0:8^B16
@40@0:8Q16@24@32
B24@0:8r^v16
@40@0:8I16C20{TSKUIDStruct=QQ}24
@48@0:8S16C20{TSKUIDStruct=QQ}24d40
v28@0:8S16@20
v24@0:8C16S20
v28@0:8S16Q20
^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}24@0:8{TSUCellCoord=ISBB}16
v36@0:8{TSUCellCoord=ISBB}16B24@?28
@40@0:8{TSUCellCoord=ISBB}16^B24^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}32
@32@0:8{TSUCellCoord=ISBB}16^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}24
{?=IIIIIIIIIS}100@0:8@16@24@32@40@48@56@64@72@80^{?={?=Cb8b16b16b16b16b16}[0C]}88B96
v68@0:8@16{TSUCellCoord=ISBB}24r^{TSKUIDStruct=QQ}32@40@48B56B60B64
v64@0:8@16{TSUCellCoord=ISBB}24r^{TSKUIDStruct=QQ}32@40@48B56B60
v72@0:8@16{TSUCellCoord=ISBB}24r^{TSKUIDStruct=QQ}32@40@48B56B60^B64
v60@0:8@16r^{TSKUIDStruct=QQ}24@32@40B48B52B56
{?=IIIIIIIIIS}32@0:8@16{TSUCellCoord=ISBB}24
{?=IIIIIIIIIS}36@0:8@16^{?={?=Cb8b16b16b16b16b16}[0C]}24B32
@32@0:8@16d24
v32@0:8@16B24C28
v32@0:8^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}16{TSUCellCoord=ISBB}24
@24@0:8^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}16
{vector<TSUCellRect, std::allocator<TSUCellRect>>=^{TSUCellRect}^{TSUCellRect}{__compressed_pair<TSUCellRect *, std::allocator<TSUCellRect>>=^{TSUCellRect}}}16@0:8
v32@0:8^@16@24
v40@0:8^@16@24@?32
@24@0:8i16B20
v56@0:8@16r^{TSKUIDStruct=QQ}24@32@40B48B52
{vector<TSTCell *, std::allocator<TSTCell *>>=^@^@{__compressed_pair<TSTCell *__strong *, std::allocator<TSTCell *>>=^@}}44@0:8{TSUModelRowIndex=I}16@20^v28@?36
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}40@0:8@16{TSUCellCoord=ISBB}24r^{TSKUIDStruct=QQ}32
v48@0:8^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}16r^{TSUCellCoord=ISBB}24r^{TSKUIDStruct=QQ}32^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}40
@"TSTTableDataList"
@"TSKCustomFormatList"
@"TSTTableTileStorage"
@"TSTTableHeaderStorage"
@"TSPLazyReference"
@"TSTMergeRegionMap"
@52@0:8{?={?=II}{?=II}}16^{CGAffineTransform=dddddd}32d40B48
v60@0:8@16{?={?=II}{?=II}}24^{CGAffineTransform=dddddd}40d48B56
@"TSKAnnotationAuthor"16@0:8
v24@0:8@"TSKAnnotationAuthor"16
@"NSDate"16@0:8
@"TSDCommentStorage"16@0:8
v24@0:8@"TSDCommentStorage"16
@64@0:8@16@24{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}32
@40@0:8@16@24{TSUModelCellCoord={TSUCellCoord=ISBB}}32
@44@0:8r^{TSKUIDStruct=QQ}16{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}24I40
@36@0:8r^{TSKUIDStruct=QQ}16r^v24B32
@60@0:8r^{TSKUIDStruct=QQ}16r^v24@32B40r^v44r^v52
@48@0:8r^{TSKUIDStruct=QQ}16r^v24r^{TSKUIDStruct=QQ}32r^v40
@56@0:8r^{TSKUIDStruct=QQ}16r^v24r^{TSKUIDStruct=QQ}32r^v40@48
@72@0:8r^{TSKUIDStruct=QQ}16r^v24r^{TSKUIDStruct=QQ}32r^v40@48@56r^{TSKUIDStruct=QQ}64
@48@0:8r^{TSKUIDStruct=QQ}16r^v24r^v32{TSUCellCoord=ISBB}40
@40@0:8r^v16r^v24r^{TSKUIDStruct=QQ}32
@40@0:8r^{TSKUIDStruct=QQ}16r^v24r^v32
@32@0:8r^{TSKUIDStruct=QQ}16r^v24
@"TSTFormulaRewrite_PivotInfo"
@"TSTAutofillSelection"
Q32@0:8@16@24
d40@0:8@16@24@32
@"NSObject<TSDContainerInfo>"16@0:8
@"TSTTableReferences"16@0:8
@"TSTSelectionDragController"16@0:8
v24@0:8@"TSTSelectionDragController"16
v24@0:8@"NSSet"16
B48@0:8@16{_NSRange=QQ}24@40
B24@0:8@"UITextField"16
v24@0:8@"UITextField"16
v32@0:8@"UITextField"16q24
B48@0:8@"UITextField"16{_NSRange=QQ}24@"NSString"40
v32@0:8@16^{CGContext=}24
v24@0:8@"CALayer"16
v32@0:8@"CALayer"16^{CGContext=}24
@"<CAAction>"32@0:8@"CALayer"16@"NSString"24
@36@0:8{CGPoint=dd}16B32
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8{TSUCellCoord=ISBB}16
v56@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16^{?=Bdddddd}32^{CGRect={CGPoint=dd}{CGSize=dd}}40^{CGRect={CGPoint=dd}{CGSize=dd}}48
{TSUCellCoord=ISBB}32@0:8{CGPoint=dd}16
{CGAffineTransform=dddddd}56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{TSUCellCoord=ISBB}48
{CGRect={CGPoint=dd}{CGSize=dd}}120@0:8@16{TSUCellCoord=ISBB}24@32{CGRect={CGPoint=dd}{CGSize=dd}}40{CGAffineTransform=dddddd}72
{CGAffineTransform=dddddd}40@0:8@16@24{TSUCellCoord=ISBB}32
v44@0:8@16Q24B32@36
v32@0:8^{CGContext=}16@24
{CGRect={CGPoint=dd}{CGSize=dd}}72@0:8@16{CGAffineTransform=dddddd}24
v48@0:8@16{?={?=II}{?=II}}24^{CGContext=}40
v48@0:8@16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24^{CGContext=}40
v64@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24^{CGContext=}56
v68@0:8@16B24{CGRect={CGPoint=dd}{CGSize=dd}}28^{CGContext=}60
v80@0:8^{CGContext=}16d24{CGRect={CGPoint=dd}{CGSize=dd}}32@64{TSUCellCoord=ISBB}72
v124@0:8^{CGContext=}16{CGRect={CGPoint=dd}{CGSize=dd}}24@56{TSUCellCoord=ISBB}64q72{CGRect={CGPoint=dd}{CGSize=dd}}80i112@116
@32@0:8{CGPoint=dd}16
@"TSTTableReferences"
@"TSTSelectionDragController"
@"<TSTTableAnimationController>"
@"<TSTTableRepDelegate>"
@"<TSTTableChromeProvider>"
@"<TSTCanvasReferenceController>"
@"TSTCellRegionGatherer"
@"CAShapeLayer"
v40@0:8@16{TSUCellCoord=ISBB}24B32B36
v24@0:8@"TSTTableRep"16
v24@0:8@"TSTLayoutSpace"16
v40@0:8@"TSTCell"16{TSUCellCoord=ISBB}24B32B36
B24@0:8@"TSDRep"16
(|
Td
Td
L\
Xh
L\
P`
P`
L\
P`
P`
L\
L\
P`
L\
P`
P`
P`
Td
P`
P`
P`
L\
Td
Xh
P`
P`
P`
Td
P`
P`
L\
L\
P`
L\
P`
L\
P`
P`
Xh
P`
25TSTArgumentAtIndexLocator
25TSTReparentGroupsRewriter
27TSTCellSpecFormulaExtractor
$>Xr
!-^^
category column
aggre names col
aggre names row
 #&),/49>CHMRW\afkpux|
KD#B
#o*1_?O
w=wCN
w?wEP
36TSTTSCEASTNodeExpressionNodeFunction
#0aa
I@8TSTLexer
NSt3__119basic_istringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE
NSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE
25TSTTrackingRangeExtractor
28TSTUIDTrackingRangeExtractor
?_Zu
?]Zu
<_Zu
23TSTBakeFormulasDetector
%%%%%%%
%%%%
AJJJ
cJAJJJU
20TSTPivotUidOrderNode
15TSTUidOrderNode
*<Ovv
,5
?47TSTConvertFormulasFromBaseForCategoriesRewriter
45TSTConvertFormulasToBaseForCategoriesRewriter
23TSTCategoryUidOrderNode
333333
,S4SSS<
:34TSTResolveRelativeAncestorRewriter
36TSTConvertToRelativeAncestorRewriter
16TSTTableResolver
17TSCETableResolver
%4BTbt
TSTArchives.sos.proto
TSTSOS
TSDArchives.sos.proto
TSSArchives.sos.proto
TSTStylePropertyArchiving.proto
TSWPArchives.sos.proto"t
#SpecSetTableStrokePresetListArchive
table_stroke_preset_list
.TST.StrokePresetListArchive
unset
 SpecTableStrokePresetListArchive
!spec_set_table_stroke_preset_list
2+.TSTSOS.SpecSetTableStrokePresetListArchive"
&TableCellStylePropertyChangeSetArchive
text_wrap
.TSSSOS.SpecBoolArchive
text_wrap_undefined
type
.TSSSOS.SpecIntegerArchive
type_undefined
fill
.TSDSOS.SpecFillArchive
fill_undefined
vertical_alignment
.TSSSOS.SpecIntegerArchive
vertical_alignment_undefined
padding
.TSWPSOS.SpecPaddingArchive
padding_undefined
"TableStylePropertyChangeSetArchive
auto_resize
.TSSSOS.SpecBoolArchive
auto_resize_undefined
banded_rows
.TSSSOS.SpecBoolArchive
banded_rows_undefined
banded_cell_fill
.TSDSOS.SpecFillArchive
banded_cell_fill_undefined
behaves_like_spreadsheet
.TSSSOS.SpecBoolArchive
"behaves_like_spreadsheet_undefined
body_horizontal_border_stroke
.TSDSOS.SpecStrokeArchive
'body_horizontal_border_stroke_undefined
body_vertical_border_stroke
.TSDSOS.SpecStrokeArchive
%body_vertical_border_stroke_undefined
body_horizontal_stroke
.TSDSOS.SpecStrokeArchive
 body_horizontal_stroke_undefined
body_vertical_stroke
.TSDSOS.SpecStrokeArchive
body_vertical_stroke_undefined
header_column_border_stroke
.TSDSOS.SpecStrokeArchive
%header_column_border_stroke_undefined
header_column_vertical_stroke
.TSDSOS.SpecStrokeArchive
'header_column_vertical_stroke_undefined
header_column_horizontal_stroke
.TSDSOS.SpecStrokeArchive
)header_column_horizontal_stroke_undefined
header_column_separator_stroke
.TSDSOS.SpecStrokeArchive
(header_column_separator_stroke_undefined
header_row_border_stroke
.TSDSOS.SpecStrokeArchive
"header_row_border_stroke_undefined
header_row_horizontal_stroke
.TSDSOS.SpecStrokeArchive
&header_row_horizontal_stroke_undefined
header_row_vertical_stroke
.TSDSOS.SpecStrokeArchive
$header_row_vertical_stroke_undefined
header_row_separator_stroke
.TSDSOS.SpecStrokeArchive
%header_row_separator_stroke_undefined
footer_row_border_stroke
.TSDSOS.SpecStrokeArchive
"footer_row_border_stroke_undefined
footer_row_horizontal_stroke
.TSDSOS.SpecStrokeArchive
&footer_row_horizontal_stroke_undefined
footer_row_vertical_stroke
.TSDSOS.SpecStrokeArchive
$footer_row_vertical_stroke_undefined
footer_row_separator_stroke
.TSDSOS.SpecStrokeArchive
%footer_row_separator_stroke_undefined
stroke_preset_list_object
2(.TSTSOS.SpecTableStrokePresetListArchive
#stroke_preset_list_object_undefined
vertical_strokes_visible
.TSSSOS.SpecBoolArchive
"vertical_strokes_visible_undefined
horizontal_strokes_visible
.TSSSOS.SpecBoolArchive
$horizontal_strokes_visible_undefined
header_row_sep_visible
.TSSSOS.SpecBoolArchive
 header_row_sep_visible_undefined
header_row_verticals_visible
.TSSSOS.SpecBoolArchive
&header_row_verticals_visible_undefined
header_col_sep_visible
.TSSSOS.SpecBoolArchive
 header_col_sep_visible_undefined
header_col_horizontals_visible
.TSSSOS.SpecBoolArchive
(header_col_horizontals_visible_undefined
footer_sep_visible
.TSSSOS.SpecBoolArchive
footer_sep_visible_undefined
footer_verticals_visible
.TSSSOS.SpecBoolArchive
"footer_verticals_visible_undefined
border_strokes_visible
.TSSSOS.SpecBoolArchive
 border_strokes_visible_undefined
master_font_family
.TSSSOS.SpecStringArchive
master_font_family_undefined
writing_direction
.TSSSOS.SpecIntegerArchive
writing_direction_undefined
category_level1_top_stroke
.TSDSOS.SpecStrokeArchive
$category_level1_top_stroke_undefined
category_level2_top_stroke
.TSDSOS.SpecStrokeArchive
$category_level2_top_stroke_undefined
category_level3_top_stroke
.TSDSOS.SpecStrokeArchive
$category_level3_top_stroke_undefined
category_level4_top_stroke
.TSDSOS.SpecStrokeArchive
$category_level4_top_stroke_undefined
category_level5_top_stroke
.TSDSOS.SpecStrokeArchive
$category_level5_top_stroke_undefined
&category_level1_label_separator_stroke
.TSDSOS.SpecStrokeArchive
0category_level1_label_separator_stroke_undefined
&category_level2_label_separator_stroke
.TSDSOS.SpecStrokeArchive
0category_level2_label_separator_stroke_undefined
&category_level3_label_separator_stroke
.TSDSOS.SpecStrokeArchive
0category_level3_label_separator_stroke_undefined
&category_level4_label_separator_stroke
.TSDSOS.SpecStrokeArchive
0category_level4_label_separator_stroke_undefined
&category_level5_label_separator_stroke
.TSDSOS.SpecStrokeArchive
0category_level5_label_separator_stroke_undefined
category_level1_bottom_stroke
.TSDSOS.SpecStrokeArchive
'category_level1_bottom_stroke_undefined
category_level2_bottom_stroke
.TSDSOS.SpecStrokeArchive
'category_level2_bottom_stroke_undefined
category_level3_bottom_stroke
.TSDSOS.SpecStrokeArchive
'category_level3_bottom_stroke_undefined
category_level4_bottom_stroke
.TSDSOS.SpecStrokeArchive
'category_level4_bottom_stroke_undefined
category_level5_bottom_stroke
.TSDSOS.SpecStrokeArchive
'category_level5_bottom_stroke_undefined
category_level1_interior_stroke
.TSDSOS.SpecStrokeArchive
)category_level1_interior_stroke_undefined
category_level2_interior_stroke
.TSDSOS.SpecStrokeArchive
)category_level2_interior_stroke_undefined
category_level3_interior_stroke
.TSDSOS.SpecStrokeArchive
)category_level3_interior_stroke_undefined
category_level4_interior_stroke
.TSDSOS.SpecStrokeArchive
)category_level4_interior_stroke_undefined
category_level5_interior_stroke
.TSDSOS.SpecStrokeArchive
)category_level5_interior_stroke_undefined
"body_pivot_group_horizontal_stroke
.TSDSOS.SpecStrokeArchive
,body_pivot_group_horizontal_stroke_undefined
 body_pivot_group_vertical_stroke
.TSDSOS.SpecStrokeArchive
*body_pivot_group_vertical_stroke_undefined
(body_pivot_de_emphasis_horizontal_stroke
.TSDSOS.SpecStrokeArchive
2body_pivot_de_emphasis_horizontal_stroke_undefined
#body_pivot_emphasis_vertical_stroke
.TSDSOS.SpecStrokeArchive
-body_pivot_emphasis_vertical_stroke_undefined
+header_column_pivot_group_horizontal_stroke
.TSDSOS.SpecStrokeArchive
5header_column_pivot_group_horizontal_stroke_undefined
,header_column_pivot_group_de_emphasis_stroke
.TSDSOS.SpecStrokeArchive
6header_column_pivot_group_de_emphasis_stroke_undefined
$header_column_pivot_separator_stroke
.TSDSOS.SpecStrokeArchive
.header_column_pivot_separator_stroke_undefined
&header_row_pivot_group_vertical_stroke
.TSDSOS.SpecStrokeArchive
0header_row_pivot_group_vertical_stroke_undefined
)header_row_pivot_group_de_emphasis_stroke
.TSDSOS.SpecStrokeArchive
3header_row_pivot_group_de_emphasis_stroke_undefined
header_row_pivot_title_stroke
.TSDSOS.SpecStrokeArchive
'header_row_pivot_title_stroke_undefined
&footer_row_pivot_group_vertical_stroke
.TSDSOS.SpecStrokeArchive
0footer_row_pivot_group_vertical_stroke_undefined
N6TSTSOS35SpecSetTableStrokePresetListArchiveE
N6TSTSOS32SpecTableStrokePresetListArchiveE
N6TSTSOS38TableCellStylePropertyChangeSetArchiveE
N6TSTSOS34TableStylePropertyChangeSetArchiveE
(3?J`
)5ht
%3AO]ky
&5DSbq
")8DL^j
#*19KY
"1CR
$3:BN
#5GYk}
#/;GS
)8GYky
)5DVew
%7FR`r
)5AP_n}
#5GSapx
 /;JVo
#1dv
TSTArchives.proto
TSPMessages.proto
TSDArchives.proto
TSKArchives.proto
TSSArchives.proto
TSCEArchives.proto
TSWPArchives.proto
TSTStylePropertyArchiving.proto"Q
CellID
packedData
expanded_coord
.TSCE.CellCoordinateArchive"
CellUIDLookupListArchive
column_uids
.TSCE.UidLookupListArchive
row_uids
.TSCE.UidLookupListArchive
column_indexes
row_indexes
CellUIDListArchive
row_uids
.TSP.UUID
column_uids
.TSP.UUID
compressed_row_indexes
compressed_column_indexes
uncompressed_lookup_list
.TST.CellUIDLookupListArchive"F
TableSize
packedData
num_columns
num_rows
ExpandedTableSize
num_columns
num_rows
CellRange
origin
.TST.CellID
size
.TST.TableSize"f
ExpandedCellRange
origin
.TSCE.CellCoordinateArchive
size
.TST.ExpandedTableSize"
TableSelection
cellRange
.TST.CellRange
extendedCellRange
.TST.CellRange
extendedCellRangeValid
selection_type
.TST.SelectionTypeArchive"
TileRowInfo
tile_row_index
cell_count
cell_storage_buffer_pre_bnc
cell_offsets_pre_bnc
storage_version
cell_storage_buffer
cell_offsets
has_wide_offsets
Tile
maxColumn
maxRow
numCells
numrows
rowInfos
.TST.TileRowInfo
storage_version
last_saved_in_BNC
should_use_wide_rows
TileStorage
tiles
.TST.TileStorage.Tile
tile_size
should_use_wide_rows
Tile
tileid
tile
.TSP.Reference"
PopUpMenuModel
item
.TST.PopUpMenuModel.CellValueB
tsce_item
.TSCE.CellValueArchive
CellValue
cell_value_type
2!.TST.PopUpMenuModel.CellValueType
boolean_value
.TSCE.BooleanCellValueArchive
date_value
.TSCE.DateCellValueArchive
number_value
.TSCE.NumberCellValueArchive
string_value
.TSCE.StringCellValueArchive"`
CellValueType
NIL_TYPE
BOOLEAN_TYPE
DATE_TYPE
NUMBER_TYPE
STRING_TYPE
ImportWarningSetArchive
formula_import_warning
21.TST.ImportWarningSetArchive.FormulaImportWarning
cond_format_above_avg_equal_avg
false
cond_format_above_avg_std_dev
false
cond_format_complex_formula
false
cond_format_contains_errors
false
cond_format_expr
false
cond_format_not_contains_errors
false
(cond_format_parameters_not_all_same_type
false
cond_format_stop_if_true
false
 cond_format_unsupported_operator
false
cond_format_unsupported_styling
false
#cond_format_unsupported_time_period
false
error_cell_with_no_formula
false
unsupported_cond_format
false
original_data_format
2formula_warning_filtered_column_formula_not_copied
false
duration_format_range_changed
false
FormulaImportWarning
formula_warning_type
2/.TST.ImportWarningSetArchive.FormulaWarningType
original_formula
supplementary_text
formula_warning_type_int
FormulaWarningType
THREE_D_REFERENCE
ARRAYED_FORMULA
DIFFERENT_BEHAVIOR_FOR_FUNCTION
ERROR_TOKEN
EXTERNAL_REFERENCE
NATURAL_LANGUAGE_FORMULA
REFERENCE_OUT_OF_BOUNDS
SHARED_FORMULA_BASE_NOT_FOUND
UNKNOWN_NAME
UNSUPPORTED_FORMULA
UNSUPPORTED_FUNCTION
UNSUPPORTED_NAME
TRANSPOSED_NO_ISSUES
TRANSPOSED_WITH_ISSUES
 TRANSPOSED_WITH_ISSUES_UNCHANGED
"CellRefImportWarningSetPairArchive
cell_ref
.TSCE.CellReferenceArchive
warning_set
.TST.ImportWarningSetArchive"m
 ImportWarningSetByCellRefArchive
cellref_warning_set_pair
2'.TST.CellRefImportWarningSetPairArchive"
TableDataList
listType
.TST.TableDataList.ListType
nextListID
entries
.TST.TableDataList.ListEntry
segments
.TSP.Reference
ListEntry
refcount
string
reference
.TSP.Reference
formula
.TSCE.FormulaArchive
format
.TSK.FormatStructArchive
custom_format
.TSK.CustomFormatArchive
rich_text_payload
.TSP.Reference
comment_storage
.TSP.Reference
import_warning_set
.TST.ImportWarningSetArchive
cell_spec
.TST.CellSpecArchive"
ListType
STRING
FORMAT
FORMULA
STYLE
FORMULA_ERROR
CUSTOM_FORMAT
MULTIPLE_CHOICE_LIST_FORMAT
RICH_TEXT_PAYLOAD
CONDITIONAL_STYLE
COMMENT_STORAGE
IMPORT_WARNING
CONTROL_CELL_SPEC
TableDataListSegment
list_type
.TST.TableDataList.ListType
key_range
.TSP.Range
entries
.TST.TableDataList.ListEntry"W
TableRBTree
nodes
.TST.TableRBTree.Node
Node
value
HeaderStorageBucket
bucketHashFunction
headers
.TST.HeaderStorageBucket.Header
Header
index
size
hidingState
numberOfCells
cell_style
.TSP.Reference
text_style
.TSP.Reference"L
HeaderStorage
bucketHashFunction
buckets
.TSP.Reference"
DataStore
rowHeaders
.TST.HeaderStorage
columnHeaders
.TSP.Reference
tiles
.TST.TileStorage
stringTable
.TSP.Reference
styleTable
.TSP.Reference
formula_table
.TSP.Reference
formulaErrorTable
.TSP.Reference
format_table_pre_bnc
.TSP.Reference
multipleChoiceListFormatTable
.TSP.Reference
merge_region_map
.TSP.Reference
customFormatTable
.TSP.Reference
nextRowStripID
nextColumnStripID
rowTileTree
.TST.TableRBTree
columnTileTree
.TST.TableRBTree
storage_version_pre_bnc
rich_text_table
.TSP.Reference
conditionalstyletable
.TSP.Reference
commentStorageTable
.TSP.Reference
importWarningSetTable
.TSP.Reference
control_cell_spec_table
.TSP.Reference
format_table
.TSP.Reference"
TableInfoArchive
super
.TSD.DrawableArchive
tableModel
.TSP.Reference
editing_state
.TSP.ReferenceB
summary_model
.TSP.Reference
category_order
.TSP.Reference
view_column_row_uids
.TSP.Reference
group_by_uuid
.TSP.UUID
hidden_states_uuid
.TSP.UUID
formula_coord_space_in_pre40
formula_coord_space
pasteboard_coord_mapper
.TSCE.CoordMapperArchive
layout_engine
.TST.LayoutEngineArchive
pivot_data_model
.TSP.Reference
is_a_pivot_table
pivot_order
.TSP.Reference"^
CategoryInfoArchive
super
.TSD.DrawableArchive
tableModel
.TSP.Reference"[
WPTableInfoArchive
super
.TST.TableInfoArchive
storage
.TSP.Reference"
TableStyleNetworkArchive
body_text_style
.TSP.Reference
header_row_text_style
.TSP.Reference
header_column_text_style
.TSP.Reference
footer_row_text_style
.TSP.Reference
body_cell_style
.TSP.Reference
header_row_style
.TSP.Reference
header_column_style
.TSP.Reference
footer_row_style
.TSP.Reference
table_style
.TSP.Reference
table_name_style
.TSP.Reference
table_name_shape_style
.TSP.Reference
preset_id
category_level_1_text_style
.TSP.Reference
category_level_2_text_style
.TSP.Reference
category_level_3_text_style
.TSP.Reference
category_level_4_text_style
.TSP.Reference
category_level_5_text_style
.TSP.Reference
category_level_1_style
.TSP.Reference
category_level_2_style
.TSP.Reference
category_level_3_style
.TSP.Reference
category_level_4_style
.TSP.Reference
category_level_5_style
.TSP.Reference
label_level_1_text_style
.TSP.Reference
label_level_2_text_style
.TSP.Reference
label_level_3_text_style
.TSP.Reference
label_level_4_text_style
.TSP.Reference
label_level_5_text_style
.TSP.Reference
label_level_1_style
.TSP.Reference
label_level_2_style
.TSP.Reference
label_level_3_style
.TSP.Reference
label_level_4_style
.TSP.Reference
label_level_5_style
.TSP.Reference
pivot_body_summary_row_style
.TSP.Reference
pivot_body_summary_column_style
.TSP.Reference
!pivot_header_column_summary_style
.TSP.Reference"
TableGroupSortOrderUIDArchive
group_sort_rules
2:.TST.TableGroupSortOrderUIDArchive.GroupSortRuleUIDArchive
GroupSortRuleUIDArchive
grouping_column_uid
.TSP.UUID
column_uid
.TSP.UUID
direction
2D.TST.TableGroupSortOrderUIDArchive.GroupSortRuleUIDArchive.Direction"*
Direction
ascending
descending
TableSortOrderArchive
type
2#.TST.TableSortOrderArchive.SortType
rules
2*.TST.TableSortOrderArchive.SortRuleArchive
SortRuleArchive
index
direction
24.TST.TableSortOrderArchive.SortRuleArchive.Direction"*
Direction
ascending
descending
SortType
entire_table
row_range
TableSortOrderUIDArchive
type
2&.TST.TableSortOrderUIDArchive.SortType
rules
2-.TST.TableSortOrderUIDArchive.SortRuleArchive
SortRuleArchive
column_uid
.TSP.UUID
direction
27.TST.TableSortOrderUIDArchive.SortRuleArchive.Direction"*
Direction
ascending
descending
SortType
entire_table
row_range
SortRuleReferenceTrackerArchive
reference_tracker
.TSP.Reference"1
CellRegion
cell_ranges
.TST.CellRange"E
CellUIDRegionArchive
cell_uid_ranges
.TSP.UUIDRectArchive"
StructuredTextImportRecord
import_settings
2!.TSK.StructuredTextImportSettings
import_source
import_date
source_data
source_encoding
confidence
imported_region
.TST.CellRegion
source_row_count
source_column_count
TableModelArchive
table_id
from_table_id
was_cut
table_style
.TSP.Reference
body_text_style
.TSP.Reference
header_row_text_style
.TSP.Reference
header_column_text_style
.TSP.Reference
footer_row_text_style
.TSP.Reference
body_cell_style
.TSP.Reference
header_row_style
.TSP.Reference
header_column_style
.TSP.Reference
footer_row_style
.TSP.Reference
table_name_style
.TSP.Reference
table_name_shape_style
.TSP.Reference
table_style_preset
.TSP.Reference
preset_index
base_data_store
.TST.DataStore
provider
.TSP.Reference
number_of_rows
number_of_columns
table_name
table_name_enabled
table_name_height
table_name_border_enabled
number_of_header_rows
number_of_header_columns
number_of_footer_rows
header_rows_frozen
header_columns_frozen
number_of_hidden_rows
number_of_hidden_columns
number_of_user_hidden_rows
number_of_user_hidden_columns
number_of_filtered_rows
default_row_height
default_column_width
origin_offset
.TST.CellIDB
repeating_header_rows_enabled
style_apply_clears_all
 repeating_header_columns_enabled
&hidden_state_formula_owner_for_columns
.TSP.Reference
#hidden_state_formula_owner_for_rows
.TSP.Reference
row_filter_set_pre_pivot
.TSP.Reference
"conditional_style_formula_owner_id
.TSP.CFUUIDArchive
sort_order
.TST.TableSortOrderArchive
sort_rule_reference_tracker
2$.TST.SortRuleReferenceTrackerArchive
base_column_row_uids
.TSP.Reference
merge_owner
.TST.MergeOwnerArchive
stroke_sidecar
.TSP.Reference
preset_needs_strong_ownership
text_import_record
.TST.StructuredTextImportRecord
category_level_1_style
.TSP.Reference
category_level_2_style
.TSP.Reference
category_level_3_style
.TSP.Reference
category_level_4_style
.TSP.Reference
category_level_5_style
.TSP.Reference
category_level_1_text_style
.TSP.Reference
category_level_2_text_style
.TSP.Reference
category_level_3_text_style
.TSP.Reference
category_level_4_text_style
.TSP.Reference
category_level_5_text_style
.TSP.Reference
hidden_states_owner
.TST.HiddenStatesOwnerArchive
label_level_1_style
.TSP.Reference
label_level_2_style
.TSP.Reference
label_level_3_style
.TSP.Reference
label_level_4_style
.TSP.Reference
label_level_5_style
.TSP.Reference
label_level_1_text_style
.TSP.Reference
label_level_2_text_style
.TSP.Reference
label_level_3_text_style
.TSP.Reference
label_level_4_text_style
.TSP.Reference
label_level_5_text_style
.TSP.Reference
category_owner_deprecated
.TST.CategoryOwnerArchive
pencil_annotation_owner
2!.TST.PencilAnnotationOwnerArchive
from_group_by_uid
haunted_owner
.TSCE.HauntedOwnerArchive
pivot_owner
.TSP.Reference
category_owner
.TSP.Reference
pivot_body_summary_row_style
.TSP.Reference
pivot_body_summary_column_style
.TSP.Reference
!pivot_header_column_summary_style
.TSP.Reference
pivot_value_types_by_col
pivot_date_grouping_columns
pivot_date_grouping_types
SummaryModelArchive
table_info
.TSP.Reference
data_store
.TST.DataStore
column_row_uids
.TSP.Reference
aggregate_formula_owner_uuid
.TSP.UUID
summary_cell_vendor
.TSP.Reference
category_column_width
summary_row_level_1_height
summary_row_level_2_height
summary_row_level_3_height
summary_row_level_4_height
summary_row_level_5_height
 summary_label_row_level_1_height
 summary_label_row_level_2_height
 summary_label_row_level_3_height
 summary_label_row_level_4_height
 summary_label_row_level_5_height
label_row_visibility_1
label_row_visibility_2
label_row_visibility_3
label_row_visibility_4
label_row_visibility_5
summary_row_height_list
label_row_height_list
label_row_visibility_list
group_sort_order
2".TST.TableGroupSortOrderUIDArchive"
%SummaryModelGroupByChangeStateArchive
cell_map
.TSP.Reference
summary_row_height_list
label_row_height_list
label_row_visibility_list
ColumnRowUIDMapArchive
sorted_column_uids
.TSP.UUID
column_index_for_uid
column_uid_for_index
sorted_row_uids
.TSP.UUID
row_index_for_uid
row_uid_for_index
StrokeLayerArchive
row_column_index
stroke_runs
2(.TST.StrokeLayerArchive.StrokeRunArchive
StrokeRunArchive
origin
length
stroke
.TSD.StrokeArchive
order
StrokeSidecarArchive
max_order
column_count
row_count
left_column_stroke_layers
.TSP.Reference
right_column_stroke_layers
.TSP.Reference
top_row_stroke_layers
.TSP.Reference
bottom_row_stroke_layers
.TSP.Reference"
DurationWrapperArchive"
Cell
valueType
.TST.CellValueType
cell_style
.TSP.Reference
text_style
.TSP.Reference
numberValue
stringValue
boolValue
current_format
.TSK.FormatStructArchive
formulaError
.TSP.Reference
number_format
.TSK.FormatStructArchive
currency_format
.TSK.FormatStructArchive
duration_format
.TSK.FormatStructArchive
date_format
.TSK.FormatStructArchive
custom_format
.TSK.FormatStructArchive
base_format
.TSK.FormatStructArchive
explicit_format_flags
richText
.TSP.Reference
conditional_style
.TSP.Reference
comment_storage
.TSP.Reference
conditional_style_applied_rule
import_warning_set
.TST.ImportWarningSetArchive
custom_format_object
.TSK.CustomFormatArchive
cell_border
.TST.CellBorderArchive
cell_spec
.TST.CellSpecArchive
cell_format_kind
text_format
.TSK.FormatStructArchive
boolean_format
.TSK.FormatStructArchive
decimal_value_low
decimal_value_high
MergeRegionMapArchive
cell_range
.TST.CellRange"
CellMapArchive
cell_tiles
.TSP.Reference
uid_based
expanded_cell_ids
.TSCE.CellCoordinateArchive
cell_uid_list
.TST.CellUIDListArchive
merge_uid_ranges
.TSP.UUIDRectArchive
unmerge_uid_ranges
.TSP.UUIDRectArchive
merge_actions
.TST.MergeOperationArchive
may_modify_formulas_in_cells
true
(may_modify_values_referenced_by_formulas
true"
CellListArchive
cells
2!.TST.CellListArchive.OptionalCell
trailing_empty_cell_count
OptionalCell
cell
.TST.Cell"
ConcurrentCellMapArchive
cell_lists
.TSP.Reference
uid_based
merge_actions
.TST.MergeOperationArchive
may_modify_formulas_in_cells
true
(may_modify_values_referenced_by_formulas
true"
ConcurrentCellListArchive
cells
2+.TST.ConcurrentCellListArchive.OptionalCell
cell_uid_range
.TSP.UUIDRectArchive
cell_range
.TST.CellRange
OptionalCell
cell
.TST.Cell"
CellFormatAndValueArchive
valueType
.TST.CellValueType
numberValue
stringValue
boolValue
richTextStorage
.TSP.Reference
use_all_spare_formats
explicit_flags
cell_format_kind
number_format
.TSK.FormatStructArchive
currency_format
.TSK.FormatStructArchive
date_format
.TSK.FormatStructArchive
duration_format
.TSK.FormatStructArchive
text_format
.TSK.FormatStructArchive
boolean_format
.TSK.FormatStructArchive
formatted_value
formatted_rich_text_value
.TSP.Reference
apply_spare_format_only
spare_format_type
decimal_low
decimal_high
suppress_apply_value
CellSpecArchive
interaction_type
formula
.TSCE.FormulaArchive
range_control_min
range_control_max
range_control_inc
chooser_control_popup_model
.TSP.Reference
chooser_control_start_w_first
%category_summary_should_display_label
CommentStorageWrapperArchive
comment_storage
.TSP.Reference"
CellDiffArchive
property_map_to_set
.TSS.CommandPropertyMapArchive
property_map_to_reset
.TSS.CommandPropertyMapArchive"5
CellDiffArray
large_array
.TSP.LargeArray"s
CellDiffArraySegment
large_array_segment
.TSP.LargeArraySegment
elements
.TST.CellDiffArchive"
CellDiffMapArchive
uid_based
expanded_cell_ids
.TSCE.CellCoordinateArchive
cell_uids
.TST.CellUIDListArchive
cell_diff_array
.TSP.Reference"
HierarchicalCellDiffMapArchive
num_row_rules
num_column_rules
row_header_uids
.TSP.UUID
column_header_uids
.TSP.UUID
aggregate_rule_uids
.TSP.UUID
active_flattening_dimension
.TST.TableDimensionArchive
row_value_uids
.TSP.UUID
row_level_preorder
column_value_uids
.TSP.UUID
column_level_preorder
cell_diff_storage
2,.TST.HierarchicalCellDiffMapArchive.BoxedRow
row_sizes
column_sizes
BoxedRow
column_index_set
.TSP.IndexSet
cell_diff_list
.TST.CellDiffArchive"
DoubleStyleMapArchive
capacity
count
cell_map_entry
25.TST.DoubleStyleMapArchive.DoubleStyleMapEntryArchive
DoubleStyleMapEntryArchive
cell_id
.TST.CellID
old_style
.TSP.Reference
new_style
.TSP.Reference"
StyleTableMapArchive
capacity
count
map_entry
23.TST.StyleTableMapArchive.StyleTableMapEntryArchive
StyleTableMapEntryArchive
old_style
.TSP.Reference
new_style
.TSP.Reference"
SelectionArchive
tableModel
.TSP.ReferenceB
selection_type
.TST.SelectionTypeArchive
anchor_cell
.TST.CellID
cell_ranges
.TST.CellRange
base_ranges
.TST.CellRange
cursor_cell
.TST.CellID
table_info
.TSP.Reference
cell_uid_region
.TST.CellUIDRegionArchive
base_uid_region
.TST.CellUIDRegionArchive
anchor_cell_uid
.TSP.UUIDCoordArchive
cursor_cell_uid
.TSP.UUIDCoordArchive"
)DeathhawkRdar39989167CellSelectionArchive
table_info
.TSP.Reference
selection_type
.TST.SelectionTypeArchive
cell_uid_region
.TST.CellUIDRegionArchive
base_uid_region
.TST.CellUIDRegionArchive
anchor_cell_uid
.TSP.UUIDCoordArchive
cursor_cell_uid
.TSP.UUIDCoordArchive"&
StrokeSelectionArchive
mask
ControlCellSelectionArchive"
StockCellSelectionArchive"
TableNameSelectionArchive"p
AutofillSelectionArchive
source_cell_range
.TST.CellRange
target_cell_range
.TST.CellRange"f
FilterRulePrePivotArchive
predicate
2$.TST.FormulaPredicatePrePivotArchive
disabled
FilterRuleArchive
predicate
.TST.FormulaPredicateArchive"
TableStyleArchive
super
.TSS.StyleArchive
override_count
table_properties
2 .TST.TableStylePropertiesArchive"
CellStyleArchive
super
.TSS.StyleArchive
override_count
cell_properties
.TST.CellStylePropertiesArchive"
FormulaPredArgDataArchive
double_value
decimal_low
decimal_high
string_value
date_value
duration_timeinterval
duration_units
boolean_value
FormulaPredArgArchive
arg_type
arg_value
.TST.FormulaPredArgDataArchive
base_cell_ref
.TSCE.CellReferenceArchive
relative_cell_ref
.TSCE.RelativeCellRefArchive
category_ref
.TSCE.CategoryReferenceArchive
uid_tract_list
2).TSCE.ASTNodeArrayArchive.ASTUidTractList
host_cell_coord
.TSCE.CellCoordinateArchive
preserve_row
preserve_column
list_entries
.TST.FormulaPredArgDataArchive
view_tract_ref
.TSCE.ViewTractRefArchive"
FormulaPredicatePrePivotArchive
formula
.TSCE.FormulaArchive
predicate_type
qualifier1
qualifier2
param_index1
param_index2
param_index0
FormulaPredicateArchive
predicate_type
qualifier1
qualifier2
param_value0
.TST.FormulaPredArgArchive
param_value1
.TST.FormulaPredArgArchive
param_value2
.TST.FormulaPredArgArchive
formula
.TSCE.FormulaArchive
for_conditional_style
host_table_uid
.TSP.UUID
host_column_uid
.TSP.UUID
host_row_uid
.TSP.UUID"
ConditionalStyleSetArchive
ruleCount
rules_prepivot
2<.TST.ConditionalStyleSetArchive.ConditionalStyleRulePrePivot
rules
25.TST.ConditionalStyleSetArchive.ConditionalStyleRules
ConditionalStyleRulePrePivot
predicate
2$.TST.FormulaPredicatePrePivotArchive
cell_style
.TSP.Reference
text_style
.TSP.Reference
ConditionalStyleRule
predicate
.TST.FormulaPredicateArchive
cell_style
.TSP.Reference
text_style
.TSP.Reference
ConditionalStyleRules
rule
24.TST.ConditionalStyleSetArchive.ConditionalStyleRule"
FilterSetArchive
type
2#.TST.FilterSetArchive.FilterSetType:
FilterSetArchiveTypeAll
is_enabled
true
filter_rules_prepivot
.TST.FilterRulePrePivotArchive
 needs_formula_rewrite_for_import
false
filter_offsets
filter_enabled
filter_rules
.TST.FilterRuleArchive"I
FilterSetType
FilterSetArchiveTypeAll
FilterSetArchiveTypeAny
UniqueIndexArchive
column_uid
.TSP.UUID
unique_entries
2/.TST.UniqueIndexArchive.UniqueIndexEntryArchive
UniqueIndexEntryArchive
string_value
row_uids
.TSP.UUID"
HiddenStateExtentArchive
hidden_state_extent_uid
.TSP.UUID
hidden_states
2..TST.HiddenStateExtentArchive.RowOrColumnState
row_or_column_direction
22.TST.HiddenStateExtentArchive.RowOrColumnDirection
threshold_value
.TSCE.CellValueArchive
%needs_to_update_filter_set_for_import
false
collapsed_group_uids
.TSP.UUID
filter_set
.TSP.Reference
view_pivot_hidden_indexes
.TSCE.IndexSetArchive
view_only_filtered_indexes
.TSCE.IndexSetArchive
unique_indexes
.TST.UniqueIndexArchive
RowOrColumnState
row_or_column_uid
.TSP.UUID
user_hidden
filtered
RowOrColumnDirection
ColumnDirection
RowDirection
HiddenStatesArchive
hidden_states_uid
.TSP.UUID
column_hidden_state_extent
.TST.HiddenStateExtentArchive
row_hidden_state_extent
.TST.HiddenStateExtentArchive"i
HiddenStatesOwnerArchive
owner_uid
.TSP.UUID
hidden_states
.TST.HiddenStatesArchive"
ExpandCollapseStateArchive
uids_collapsed
.TSP.UUID
uids_expanded
.TSP.UUID
dimension
.TST.TableDimensionArchive"l
TokenAttachmentArchive
super
.TSWP.UIGraphicalAttachment
expressionNode
.TSP.Reference"8
FormulaArchive
expressionTree
.TSP.Reference"h
ExpressionNodeArchive
children
.TSP.Reference
first_index
last_index
BooleanNodeArchive
super
.TST.ExpressionNodeArchive
value
NumberNodeArchive
super
.TST.ExpressionNodeArchive
number
decimal_low
decimal_high
StringNodeArchive
super
.TST.ExpressionNodeArchive
value
IdentifierNodeArchive
super
.TST.ExpressionNodeArchive
identifier
symbol
ArrayNodeArchive
super
.TST.ExpressionNodeArchive
columns
rows
ListNodeArchive
super
.TST.ExpressionNodeArchive"V
OperatorNodeArchive
super
.TST.ExpressionNodeArchive
operatorChar
PostfixOperatorNodeArchive
super
.TST.OperatorNodeArchive"D
PrefixOperatorNodeArchive
super
.TST.OperatorNodeArchive"t
FunctionNodeArchive
super
.TST.ExpressionNodeArchive
functionIndex
invalidFunctionName
FunctionEndNodeArchive
super
.TST.ExpressionNodeArchive"[
DateNodeArchive
super
.TST.ExpressionNodeArchive
value
format
ReferenceNodeArchive
super
.TST.ExpressionNodeArchive
rangeReference
.TSCE.RangeReferenceArchive
preserve_flags
hostTableID
host_cell_ref
.TSCE.CellReferenceArchive
table_uid
.TSP.UUID
range_top_left
.TSP.UUIDCoordArchive
range_bottom_right
.TSP.UUIDCoordArchive
category_ref
.TSCE.CategoryReferenceArchive
uid_range_rect
.TSP.UUIDRectArchive"
DurationNodeArchive
super
.TST.ExpressionNodeArchive
timeinterval
smallest
largest
style
ArgumentPlaceholderNodeArchive
super
.TST.ExpressionNodeArchive
functionIndex
argumentIndex
mode
EmptyExpressionNodeArchive
super
.TST.ExpressionNodeArchive"
LetNodeArchive
super
.TST.ExpressionNodeArchive
whitespace_after_let
whitespace_after_identifier
whitespace_after_equals
whitespace_after_delimiter
InNodeArchive
super
.TST.ExpressionNodeArchive"d
VariableNodeArchive
super
.TST.ExpressionNodeArchive
identifier
symbol
LayoutHintArchive
isValid
cellRange
.TST.CellRange
hintID
.TST.CellID
maximumSize
.TSP.Size
partitionPosition
horizontal
effectiveSize
.TSP.Size
partitioningPass
 CompletionTokenAttachmentArchive
super
.TST.TokenAttachmentArchive
completionText
caretPosition
prefixStart
HiddenStateFormulaOwnerArchive
owner_id
.TSP.CFUUIDArchive
threshold_value
.TSCE.CellValueArchive
%needs_to_update_filter_set_for_import
false"
FormulaStoreArchive
next_formula_index
formulas
2).TST.FormulaStoreArchive.FormulaStorePair
FormulaStorePair
formula_index
formula
.TSCE.FormulaArchive"
MergeOperationArchive
merge_type
.TST.MergeActionArchive
merge_ranges
.TSP.UUIDRectArchive
merge_formulas
.TSCE.FormulaArchive
merge_formula_indexes
MergeOwnerArchive
owner_id
.TSP.CFUUIDArchive
formula_store
.TST.FormulaStoreArchive"p
PencilAnnotationArchive
table_info
.TSP.Reference
pencil_annotation_storage
.TSP.Reference"
PencilAnnotationOwnerArchive
owner_id
.TSP.CFUUIDArchive
formula_store
.TST.FormulaStoreArchive
annotations
.TSP.Reference"
AccumulatorArchive
bool_count
number_count
date_count
duration_count
string_count
min_value
.TSCE.CellValueArchive
max_value
.TSCE.CellValueArchive
number_total_value
.TSCE.CellValueArchive
first_date_seen
.TSCE.CellValueArchive
total_secs_since_ref_date
secs_to_add
bool_true_count
error_count
is_circular_ref
product_value
.TSCE.CellValueArchive
no_content_count
GroupColumnArchive
column_uid
.TSP.UUID
grouping_type
grouping_functor
.TSCE.FunctorArchive
grouping_column_uid
.TSP.UUID"G
GroupColumnListArchive
group_column
.TST.GroupColumnArchive"
ColumnAggregateArchive
column_uid
.TSP.UUID
level
agg_type
show_as_type
column_aggregate_uid
.TSP.UUID
running_total_group_column_uid
.TSP.UUID"M
ColumnAggregateListArchive
aggregates
.TST.ColumnAggregateArchive"
GroupByArchive
group_by_uid
.TSP.UUID
group_column
.TST.GroupColumnArchive
group_node_root
2$.TST.GroupByArchive.GroupNodeArchive
aggregator
2%.TST.GroupByArchive.AggregatorArchive
column_agg_type
.TST.ColumnAggregateArchive
is_enabled
 indirect_agg_type_change_formula
.TSCE.CellCoordinateArchive
grouping_columns_formula
.TSCE.CellCoordinateArchive
aggs_in_group_root_formula
.TSCE.CellCoordinateArchive
grouping_column_headers_formula
.TSCE.CellCoordinateArchive
column_order_changed_formula
.TSCE.CellCoordinateArchive
row_order_changed_formula
.TSCE.CellCoordinateArchive
)row_order_changed_ignoring_recalc_formula
.TSCE.CellCoordinateArchive
owner_index
row_uid_lookup
.TSCE.UidLookupListArchive
hidden_states_changed_formula
.TSCE.CellCoordinateArchive
AggNodeArchive
formula_coord
.TSCE.CellCoordinateArchive
accum
.TST.AccumulatorArchive
child
2".TST.GroupByArchive.AggNodeArchive
GroupNodeArchive
group_uid
.TSP.UUID
child
2$.TST.GroupByArchive.GroupNodeArchive
row_uid
.TSP.UUID
agg_formula_coords
.TSCE.CellCoordinateArchive
format_manager
29.TST.GroupByArchive.GroupNodeArchive.FormatManagerArchive
group_cell_value
.TSCE.CellValueArchive
row_indexes
.TSCE.IndexSetArchive
row_lookup_uids
.TSCE.IndexSetArchive
FormatManagerArchive
cell_value
.TSCE.CellValueArchive
formats
.TSK.FormatStructArchive
row_sets
2G.TST.GroupByArchive.GroupNodeArchive.FormatManagerArchive.RowSetArchive
row_uid_lookup_sets
.TSCE.IndexSetArchive
RowSetArchive
row_uids
.TSP.UUID
AggregatorArchive
column_uid
.TSP.UUID
agg_node
2".TST.GroupByArchive.AggNodeArchive"[
CategoryOwnerArchive
owner_uid
.TSP.UUID
group_by
.TST.GroupByArchive";
CategoryOwnerRefArchive
group_by
.TSP.Reference"v
$PivotGroupingColumnOptionsMapArchive
uids
.TSP.UUID
flags
aggregate_rule_uids
.TSP.UUID"
PivotOwnerArchive
pivot_owner_uid
.TSP.UUID
grouping_columns_for_rows
.TST.GroupColumnListArchive
grouping_columns_for_columns
.TST.GroupColumnListArchive
aggregate_columns
.TST.ColumnAggregateListArchive
flattening_dimension
is_empty_pivot
source_table_uid
.TSP.UUID
refresh_timestamp
grpg_col_options_map
.TSP.Reference
hide_grand_total_rows
source_table_name
hide_grand_total_columns
formula_store
.TST.FormulaStoreArchive
refresh_uid
.TSP.UUID
row_column_rule_change_uid
.TSP.UUID
aggregate_rule_change_uid
.TSP.UUID"q
RichTextPayloadArchive
storage
.TSP.Reference
range
.TSP.Range
cellid
.TST.CellID"Q
#FormulaEqualsTokenAttachmentArchive
super
.TSWP.UIGraphicalAttachment"
CellFillStandIn
fill
.TSD.FillArchive
type_is_mixed
color_has_been_modified
color_is_mixed
first_color_has_been_modified
first_color_is_mixed
last_color_has_been_modified
last_color_is_mixed
gradient_type_has_been_modified
gradient_type_is_mixed
 gradient_angle_has_been_modified
gradient_angle_is_mixed
image_data_has_been_modified
image_data_is_mixed
tint_color_has_been_modified
tint_color_is_mixed
scale_has_been_modified
scale_is_mixed
technique_has_been_modified
technique_is_mixed
FormulaSelectionArchive
super
.TSWP.SelectionArchive
activeTokenCharIndex
CellBorderArchive
top_stroke
.TSD.StrokeArchive
top_stroke_order
right_stroke
.TSD.StrokeArchive
right_stroke_order
bottom_stroke
.TSD.StrokeArchive
bottom_stroke_order
left_stroke
.TSD.StrokeArchive
left_stroke_order
!DefaultCellStylesContainerArchive
table_style_network
.TSP.Reference
row_uids
.TSP.UUID
column_uids
.TSP.UUID
row_types
column_types
is_a_pivot_table
MultiTableRemapperArchive
mapping_purpose
2&.TST.MultiTableRemapperArchive.Purpose
should_steal_references
can_reuse_table_names
owner_uid_mapper
.TSCE.OwnerUIDMapperArchive
backing_tables_for_charts
.TSP.UUIDMapArchive
cross_document_paste
nested_inner_mapper
Purpose
DEFAULT
GROUPING
#PAGES_SECTION_DUPLICATION_NONCOLLAB
ChangePropagationMapWrapper
replacement_behavior
style_replace_prototypes
.TSP.Reference
style_replace_replacements
.TSP.Reference
style_modify_styles
.TSP.Reference
style_modify_old_prop_maps
.TSP.Reference
style_modify_new_prop_maps
.TSP.Reference
style_delete_prototypes
.TSP.Reference
style_delete_replacements
.TSP.Reference
table_preset_replace_prototype
.TSP.Reference
 table_preset_replace_replacement
.TSP.Reference
table_preset_delete_prototype
.TSP.Reference
table_preset_delete_replacement
.TSP.Reference"
SummaryCellVendorArchive
table_info
.TSP.Reference
entries
2..TST.SummaryCellVendorArchive.SummaryCellEntry
SummaryCellEntry
wildcardUID
.TSP.UUID
columnUID
.TSP.UUID
cell
.TST.Cell"[
CategoryOrderArchive
table_info
.TSP.Reference
uid_map
.TSP.Reference"4
PivotOrderArchive
uid_map
.TSP.Reference"
HeaderNameMgrTileArchive
first_fragment
last_fragment
name_frag_entries
21.TST.HeaderNameMgrTileArchive.NameFragmentArchive
NameFragmentArchive
name_fragment
name_precedent
.TSCE.CellCoordinateArchive
uses_of_name_fragment
.TSCE.UidCellRefSetArchive"
HeaderNameMgrArchive
owner_uid
.TSP.UUID
nrm_owner_uid
.TSP.UUID
per_tables
2).TST.HeaderNameMgrArchive.PerTableArchive
name_frag_tiles
.TSP.Reference
PerTableArchive
table_uid
.TSP.UUID
per_table_precedent
.TSCE.CellCoordinateArchive
is_deleted
header_row_uids
.TSP.UUID
header_column_uids
.TSP.UUID
update_header_row_uids
.TSP.UUID
update_header_column_uids
.TSP.UUID"K
WidthHeightCacheFittingEntry
fitting_index
fitting_size
WidthHeightCache
rows_fitting_entries
2!.TST.WidthHeightCacheFittingEntry
columns_count
LayoutEngineArchive
width_height_cache
.TST.WidthHeightCache*
CellType
genericCellType
spanCellType
numberCellType
textCellType
formulaCellType
dateCellType
boolCellType
durationCellType
formulaErrorCellType
automaticCellType
CellValueType
emptyCellValueType
numberCellValueType
stringCellValueType
providedCellValueType
dateCellValueType
boolCellValueType
durationCellValueType
errorCellValueType
richTextCellType
currencyCellValueType
TableDimensionArchive
dimensionNeither
dimensionRow
dimensionColumn
SelectionTypeArchive
deprecatedCellSelectionType
rowSelectionType
columnSelectionType
"deprecatedCellEditingSelectionType
 deprecatedTableNameSelectionType
deprecatedTableSelectionType
regionSelectionType
noSelectionType
FillDirectionArchive
kTSTFillDownArchive
kTSTFillUpArchive
kTSTFillRightArchive
kTSTFillLeftArchive
MergeActionArchive
mergeActionInsert
mergeActionRemove
mergeActionShrink
mergeActionGrow
HideShowActionArchive
hideShowActionHide
hideShowActionShow
import_warning_set
 .TSS.CommandPropertyEntryArchive
.TST.ImportWarningSetArchive:[
format_and_value
 .TSS.CommandPropertyEntryArchive
.TST.CellFormatAndValueArchive:N
cell_border
 .TSS.CommandPropertyEntryArchive
.TST.CellBorderArchive:]
comment_storage
 .TSS.CommandPropertyEntryArchive
2!.TST.CommentStorageWrapperArchive:J
cell_spec
 .TSS.CommandPropertyEntryArchive
.TST.CellSpecArchive
N3TST6CellIDE
N3TST24CellUIDLookupListArchiveE
N3TST18CellUIDListArchiveE
N3TST9TableSizeE
N3TST17ExpandedTableSizeE
N3TST9CellRangeE
N3TST17ExpandedCellRangeE
N3TST14TableSelectionE
N3TST11TileRowInfoE
N3TST4TileE
N3TST16TileStorage_TileE
N3TST11TileStorageE
N3TST24PopUpMenuModel_CellValueE
N3TST14PopUpMenuModelE
N3TST44ImportWarningSetArchive_FormulaImportWarningE
N3TST23ImportWarningSetArchiveE
N3TST34CellRefImportWarningSetPairArchiveE
N3TST32ImportWarningSetByCellRefArchiveE
N3TST23TableDataList_ListEntryE
N3TST13TableDataListE
N3TST20TableDataListSegmentE
N3TST16TableRBTree_NodeE
N3TST11TableRBTreeE
N3TST26HeaderStorageBucket_HeaderE
N3TST19HeaderStorageBucketE
N3TST13HeaderStorageE
N3TST9DataStoreE
N3TST16TableInfoArchiveE
N3TST19CategoryInfoArchiveE
N3TST18WPTableInfoArchiveE
N3TST24TableStyleNetworkArchiveE
N3TST53TableGroupSortOrderUIDArchive_GroupSortRuleUIDArchiveE
N3TST29TableGroupSortOrderUIDArchiveE
N3TST37TableSortOrderArchive_SortRuleArchiveE
N3TST21TableSortOrderArchiveE
N3TST40TableSortOrderUIDArchive_SortRuleArchiveE
N3TST24TableSortOrderUIDArchiveE
N3TST31SortRuleReferenceTrackerArchiveE
N3TST10CellRegionE
N3TST20CellUIDRegionArchiveE
N3TST26StructuredTextImportRecordE
N3TST17TableModelArchiveE
N3TST19SummaryModelArchiveE
N3TST37SummaryModelGroupByChangeStateArchiveE
N3TST22ColumnRowUIDMapArchiveE
N3TST35StrokeLayerArchive_StrokeRunArchiveE
N3TST18StrokeLayerArchiveE
N3TST20StrokeSidecarArchiveE
N3TST22DurationWrapperArchiveE
N3TST4CellE
N3TST21MergeRegionMapArchiveE
N3TST14CellMapArchiveE
N3TST28CellListArchive_OptionalCellE
N3TST15CellListArchiveE
N3TST24ConcurrentCellMapArchiveE
N3TST38ConcurrentCellListArchive_OptionalCellE
N3TST25ConcurrentCellListArchiveE
N3TST25CellFormatAndValueArchiveE
N3TST15CellSpecArchiveE
N3TST28CommentStorageWrapperArchiveE
N3TST15CellDiffArchiveE
N3TST13CellDiffArrayE
N3TST20CellDiffArraySegmentE
N3TST18CellDiffMapArchiveE
N3TST39HierarchicalCellDiffMapArchive_BoxedRowE
N3TST30HierarchicalCellDiffMapArchiveE
N3TST48DoubleStyleMapArchive_DoubleStyleMapEntryArchiveE
N3TST21DoubleStyleMapArchiveE
N3TST46StyleTableMapArchive_StyleTableMapEntryArchiveE
N3TST20StyleTableMapArchiveE
N3TST16SelectionArchiveE
N3TST41DeathhawkRdar39989167CellSelectionArchiveE
N3TST22StrokeSelectionArchiveE
N3TST27ControlCellSelectionArchiveE
N3TST25StockCellSelectionArchiveE
N3TST25TableNameSelectionArchiveE
N3TST24AutofillSelectionArchiveE
N3TST25FilterRulePrePivotArchiveE
N3TST17FilterRuleArchiveE
N3TST17TableStyleArchiveE
N3TST16CellStyleArchiveE
N3TST25FormulaPredArgDataArchiveE
N3TST21FormulaPredArgArchiveE
N3TST31FormulaPredicatePrePivotArchiveE
N3TST23FormulaPredicateArchiveE
N3TST55ConditionalStyleSetArchive_ConditionalStyleRulePrePivotE
N3TST47ConditionalStyleSetArchive_ConditionalStyleRuleE
N3TST48ConditionalStyleSetArchive_ConditionalStyleRulesE
N3TST26ConditionalStyleSetArchiveE
N3TST16FilterSetArchiveE
N3TST42UniqueIndexArchive_UniqueIndexEntryArchiveE
N3TST18UniqueIndexArchiveE
N3TST41HiddenStateExtentArchive_RowOrColumnStateE
N3TST24HiddenStateExtentArchiveE
N3TST19HiddenStatesArchiveE
N3TST24HiddenStatesOwnerArchiveE
N3TST26ExpandCollapseStateArchiveE
N3TST22TokenAttachmentArchiveE
N3TST14FormulaArchiveE
N3TST21ExpressionNodeArchiveE
N3TST18BooleanNodeArchiveE
N3TST17NumberNodeArchiveE
N3TST17StringNodeArchiveE
N3TST21IdentifierNodeArchiveE
N3TST16ArrayNodeArchiveE
N3TST15ListNodeArchiveE
N3TST19OperatorNodeArchiveE
N3TST26PostfixOperatorNodeArchiveE
N3TST25PrefixOperatorNodeArchiveE
N3TST19FunctionNodeArchiveE
N3TST22FunctionEndNodeArchiveE
N3TST15DateNodeArchiveE
N3TST20ReferenceNodeArchiveE
N3TST19DurationNodeArchiveE
N3TST30ArgumentPlaceholderNodeArchiveE
N3TST26EmptyExpressionNodeArchiveE
N3TST14LetNodeArchiveE
N3TST13InNodeArchiveE
N3TST19VariableNodeArchiveE
N3TST17LayoutHintArchiveE
N3TST32CompletionTokenAttachmentArchiveE
N3TST30HiddenStateFormulaOwnerArchiveE
N3TST36FormulaStoreArchive_FormulaStorePairE
N3TST19FormulaStoreArchiveE
N3TST21MergeOperationArchiveE
N3TST17MergeOwnerArchiveE
N3TST23PencilAnnotationArchiveE
N3TST28PencilAnnotationOwnerArchiveE
N3TST18AccumulatorArchiveE
N3TST18GroupColumnArchiveE
N3TST22GroupColumnListArchiveE
N3TST22ColumnAggregateArchiveE
N3TST26ColumnAggregateListArchiveE
N3TST29GroupByArchive_AggNodeArchiveE
N3TST66GroupByArchive_GroupNodeArchive_FormatManagerArchive_RowSetArchiveE
N3TST52GroupByArchive_GroupNodeArchive_FormatManagerArchiveE
N3TST31GroupByArchive_GroupNodeArchiveE
N3TST32GroupByArchive_AggregatorArchiveE
N3TST14GroupByArchiveE
N3TST20CategoryOwnerArchiveE
N3TST23CategoryOwnerRefArchiveE
N3TST36PivotGroupingColumnOptionsMapArchiveE
N3TST17PivotOwnerArchiveE
N3TST22RichTextPayloadArchiveE
N3TST35FormulaEqualsTokenAttachmentArchiveE
N3TST15CellFillStandInE
N3TST23FormulaSelectionArchiveE
N3TST17CellBorderArchiveE
N3TST33DefaultCellStylesContainerArchiveE
N3TST25MultiTableRemapperArchiveE
N3TST27ChangePropagationMapWrapperE
N3TST41SummaryCellVendorArchive_SummaryCellEntryE
N3TST24SummaryCellVendorArchiveE
N3TST20CategoryOrderArchiveE
N3TST17PivotOrderArchiveE
N3TST44HeaderNameMgrTileArchive_NameFragmentArchiveE
N3TST24HeaderNameMgrTileArchiveE
N3TST36HeaderNameMgrArchive_PerTableArchiveE
N3TST20HeaderNameMgrArchiveE
N3TST28WidthHeightCacheFittingEntryE
N3TST16WidthHeightCacheE
N3TST19LayoutEngineArchiveE
N6google8protobuf8internal16InternalMetadata9ContainerINS0_15UnknownFieldSetEEE
N6google8protobuf8internal16InternalMetadata13ContainerBaseE
%4CRdp
TSTStylePropertyArchiving.proto
TSPMessages.proto
TSDArchives.proto
TSKArchives.proto
TSSArchives.proto
TSWPArchives.proto"
Deprecated_TableStrokeArchive
stroke
.TSD.StrokeArchive
background
opacity
empty
CellStylePropertiesArchive
cell_fill
.TSD.FillArchive
text_wrap
deprecated_top_stroke
2".TST.Deprecated_TableStrokeArchive
deprecated_right_stroke
2".TST.Deprecated_TableStrokeArchive
deprecated_bottom_stroke
2".TST.Deprecated_TableStrokeArchive
deprecated_left_stroke
2".TST.Deprecated_TableStrokeArchive
vertical_alignment
padding
.TSWP.PaddingArchive
top_stroke
.TSD.StrokeArchive
right_stroke
.TSD.StrokeArchive
bottom_stroke
.TSD.StrokeArchive
left_stroke
.TSD.StrokeArchive"
"Deprecated_StrokePresetDataArchive
deprecated_horizontal_stroke
2".TST.Deprecated_TableStrokeArchive
deprecated_vertical_stroke
2".TST.Deprecated_TableStrokeArchive
deprecated_exterior_stroke
2".TST.Deprecated_TableStrokeArchive
deprecated_visible_mask
StrokePresetDataArchive
horizontal_stroke
.TSD.StrokeArchive
vertical_stroke
.TSD.StrokeArchive
exterior_stroke
.TSD.StrokeArchive
visible_mask
StrokePresetListArchive
count
deprecated_preset
2'.TST.Deprecated_StrokePresetDataArchive
preset
.TST.StrokePresetDataArchive"
TableStylePropertiesArchive
banded_rows
banded_fill
.TSD.FillArchive
behaves_like_spreadsheet
auto_resize
&deprecated_header_row_separator_stroke
2".TST.Deprecated_TableStrokeArchive
#deprecated_header_row_border_stroke
2".TST.Deprecated_TableStrokeArchive
'deprecated_header_row_horizontal_stroke
2".TST.Deprecated_TableStrokeArchive
%deprecated_header_row_vertical_stroke
2".TST.Deprecated_TableStrokeArchive
&deprecated_header_column_border_stroke
2".TST.Deprecated_TableStrokeArchive
)deprecated_header_column_separator_stroke
2".TST.Deprecated_TableStrokeArchive
*deprecated_header_column_horizontal_stroke
2".TST.Deprecated_TableStrokeArchive
(deprecated_header_column_vertical_stroke
2".TST.Deprecated_TableStrokeArchive
&deprecated_footer_row_separator_stroke
2".TST.Deprecated_TableStrokeArchive
#deprecated_footer_row_border_stroke
2".TST.Deprecated_TableStrokeArchive
'deprecated_footer_row_horizontal_stroke
2".TST.Deprecated_TableStrokeArchive
%deprecated_footer_row_vertical_stroke
2".TST.Deprecated_TableStrokeArchive
.deprecated_table_body_horizontal_border_stroke
2".TST.Deprecated_TableStrokeArchive
,deprecated_table_body_vertical_border_stroke
2".TST.Deprecated_TableStrokeArchive
'deprecated_table_body_horizontal_stroke
2".TST.Deprecated_TableStrokeArchive
%deprecated_table_body_vertical_stroke
2".TST.Deprecated_TableStrokeArchive
stroke_preset_list
.TST.StrokePresetListArchive
v_strokes_visible
h_strokes_visible
hr_separator_visible
hc_separator_visible
footer_separator_visible
table_border_visible
table_header_border_visible
table_hc_divider_visible
table_hr_divider_visible
table_footer_divider_visible
OBSOLETE_master_font_size
master_font_family
writing_direction
.TSWP.WritingDirectionType
header_row_separator_stroke
.TSD.StrokeArchive
header_row_border_stroke
.TSD.StrokeArchive
header_row_horizontal_stroke
.TSD.StrokeArchive
header_row_vertical_stroke
.TSD.StrokeArchive
header_column_border_stroke
.TSD.StrokeArchive
header_column_separator_stroke
.TSD.StrokeArchive
header_column_horizontal_stroke
.TSD.StrokeArchive
header_column_vertical_stroke
.TSD.StrokeArchive
footer_row_separator_stroke
.TSD.StrokeArchive
footer_row_border_stroke
.TSD.StrokeArchive
footer_row_horizontal_stroke
.TSD.StrokeArchive
footer_row_vertical_stroke
.TSD.StrokeArchive
#table_body_horizontal_border_stroke
.TSD.StrokeArchive
!table_body_vertical_border_stroke
.TSD.StrokeArchive
table_body_horizontal_stroke
.TSD.StrokeArchive
table_body_vertical_stroke
.TSD.StrokeArchive
category_level1_top_stroke
.TSD.StrokeArchive
category_level2_top_stroke
.TSD.StrokeArchive
category_level3_top_stroke
.TSD.StrokeArchive
category_level4_top_stroke
.TSD.StrokeArchive
category_level5_top_stroke
.TSD.StrokeArchive
category_level1_bottom_stroke
.TSD.StrokeArchive
category_level2_bottom_stroke
.TSD.StrokeArchive
category_level3_bottom_stroke
.TSD.StrokeArchive
category_level4_bottom_stroke
.TSD.StrokeArchive
category_level5_bottom_stroke
.TSD.StrokeArchive
category_level1_interior_stroke
.TSD.StrokeArchive
category_level2_interior_stroke
.TSD.StrokeArchive
category_level3_interior_stroke
.TSD.StrokeArchive
category_level4_interior_stroke
.TSD.StrokeArchive
category_level5_interior_stroke
.TSD.StrokeArchive
&category_level1_label_separator_stroke
.TSD.StrokeArchive
&category_level2_label_separator_stroke
.TSD.StrokeArchive
&category_level3_label_separator_stroke
.TSD.StrokeArchive
&category_level4_label_separator_stroke
.TSD.StrokeArchive
&category_level5_label_separator_stroke
.TSD.StrokeArchive
(table_body_pivot_group_horizontal_stroke
.TSD.StrokeArchive
&table_body_pivot_group_vertical_stroke
.TSD.StrokeArchive
-table_body_pivot_deemphasis_horizontal_stroke
.TSD.StrokeArchive
)table_body_pivot_emphasis_vertical_stroke
.TSD.StrokeArchive
+header_column_pivot_group_horizontal_stroke
.TSD.StrokeArchive
+header_column_pivot_group_deemphasis_stroke
.TSD.StrokeArchive
$header_column_pivot_separator_stroke
.TSD.StrokeArchive
&header_row_pivot_group_vertical_stroke
.TSD.StrokeArchive
(header_row_pivot_group_deemphasis_stroke
.TSD.StrokeArchive
header_row_pivot_title_stroke
.TSD.StrokeArchive
&footer_row_pivot_group_vertical_stroke
.TSD.StrokeArchive"n
TableStylePresetArchive
index
image
.TSP.Reference
style_network
.TSP.Reference")
TableStrokePresetArchive
index
ThemePresetsArchive
table_style_presets
.TSP.Reference
table_cell_stroke_presets
.TSP.Reference2?
extension
.TSS.ThemeArchive
.TST.ThemePresetsArchive
N3TST29Deprecated_TableStrokeArchiveE
N3TST26CellStylePropertiesArchiveE
N3TST34Deprecated_StrokePresetDataArchiveE
N3TST23StrokePresetDataArchiveE
N3TST23StrokePresetListArchiveE
N3TST27TableStylePropertiesArchiveE
N3TST23TableStylePresetArchiveE
N3TST24TableStrokePresetArchiveE
N3TST19ThemePresetsArchiveE
!"#$%&'()*+,-./0123444456789:;<=>?@ABCDEFGHIJJJKLLLMNOOPQRSTUVWXYYZ[\\\\\\\\\\\\\\\\\\\]^_``````abcdefghijklmnopYYYYYYYYYYYYYYYY
-23
'67
?@
/ g 
"%"+"5"?"C"M"W"a"k"u"
#!#+#5#?#I#S#]#g#m#w#
$)$/$9$D$N$X$^$f$p$t$~$
%&%0%3%=%G%Q%Y%c%g%q%t%~%
&)&4&>&H&L&V&`&j&t&x&
'!'+'.'1';'E'O'Y'_'i's'{'
15TSTDefaultLexer
21TSTDefaultyyFlexLexer
9FlexLexer
 !"#$%&'()*+,-./
pSDA
xCuT
IAVW
?w@CR!"#$%&'()*+,-/0123
LH;<=>?I@
yz{|}~
UDJ@
XYZ[\]^_`abcdefg
hijk
456789:;<=>?
@456789:;<=>?
456789:;<=>?
AB:;<=>?C@DC
DDDDDDDDDDDDDDDDDD
()*46
DDDDDDDDDDDDDDDDBDDDD,DDD@
!&"%$'
DDDD
(+527
0318?:?D
012222222222222222222222222222333344444556667777777778899:;;<<==>>??
PNO 
'(23456789:>?????????????
????? !"#$%&'()*+-
2<=;<
3<?22???????????????????????
3>222222222222355>7>
6>????%??=<?22
??22
2%?2
2$?2
2#?2
2 ?2
2"?2
2!?2
2&?2
2(?2
2'?2
2*?2
2)?2
2+?2
?3%?2
?%?2
8,?7
!#%')+-/
!"#$%&'()*+,-./0123444456789:;<=>?@ABCDEFGHIJJJKLLLMNOOPQRSTUVWXYYZ[\\\\\\\\\\\\\\\\\\\]^_``````abcdefghijklmnopYYYYYYYYYYYYYYYY
r'r'o
r'r'r'
r'r'r'
r'r'r'r'`
r'r'r'r'
r'r'
r'r'
r'r'r'
" "*"."8"B"L"V"`"j"t"~"
# #*#4#>#H#R#X#b#l#p#z#
$$$/$9$C$I$Q$[$_$i$s$w$
%(%2%<%D%N%R%\%_%i%s%{%
&)&3&7&A&K&U&_&c&m&w&
'&'0':'D'J'T'^'f'
13TSTCommaLexer
18TSTignoreFlexLexer
-[TSWPStorage(TSTFormulaAdditions) i_copyIntoContext:stylesheet:paragraphStyle:listStyle:bakeModes:resettingHostTableToMatch:referenceColorHelper:disableMenus:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSWPStorage_FormulaAdditions.mm
Creating a copy of the storage resulted in a smaller storage.
-[TSWPStorage(TSTFormulaAdditions) i_copyIntoContext:stylesheet:paragraphStyle:listStyle:bakeModes:resettingHostTableToMatch:referenceColorHelper:disableMenus:]_block_invoke
Found an attachment that wasn't a TSTWPTokenAttachment
attachment character index out of bounds. Bailing.
Expected destination storage to have an attachment character at this index.
v8@?0
TSUDefaultCat
v40@?0@"TSTWPTokenAttachment"8Q16Q24^B32
-[TSWPStorage(TSTFormulaAdditions) p_rangeOfString:orNodeClass:range:]
Do not call method
%s: %s
-[TSWPStorage(TSTFormulaAdditions) p_stringWithFormulaAsTextFromRange:returningTokenValues:]
Attachment index mismatch
-[TSWPStorage(TSTFormulaAdditions) p_detokenizeTokenAtCharIndex:]
expected only token attachments within the detokenization range
-[TSWPStorage(TSTFormulaAdditions) p_replaceTokenAtCharIndex:withText:]
invalid nil value for '%{public}s'
token
text
-[TSTGroupNode computedGroupValueTuple]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTGroupNode.mm
Only the root groupNode should have no parentNode pointer
-[TSTGroupNode initWithGroupCellValue:groupBy:atLevel:groupUid:children:]
Root node shouldn't have a cellValue
v24@?0q8^B16
v32@?0{TSKUIDStruct=QQ}8^B24
-[TSTGroupNode encodeToArchive:backwardCompat:]
Only the root node has a nil groupCellValue?!
-[TSTGroupNode updateWithDocumentRoot:]
documentRoot
-[TSTGroupNode findGroupNodeForDisplayValuesFromSplitter:atLevel:startAtComponent:startAtWord:preserveFlags:]
Not supported for disconnected GroupNodes
boo_TRUE
boo_FALSE
str_%@
-[TSTGroupNode p_refreshGroupValue]
Unexpected new key:%{public}@, expected:%{public}@
-[TSTGroupNode updateGroupCellValueIfKeyMatches:]
canonicalKeyString shouldn't change here
-[TSTGroupNode insertRowUid:atRowIndex:forGroupValueTuple:atLevel:withLocale:createdGroupNodeCount:]
Pivot table groupBy's EXPECT to be provided with valid rowIndexes
Invalid rowUids should only be coming in for disconnected GroupNodes - normally, we should only add valid rows
-[TSTGroupNode removeRowUid:forGroupValueTuple:atLevel:withLocale:]
Pivot groupBys shouldn't need removeRowUid - we'll need to fix _pivotOnlyRowIndexes if they do
-[TSTGroupNode removeRowUids:]
Pivot groupBys shouldn't need removeRowUids - we'll need to fix _pivotOnlyRowIndexes if they do
+[TSTGroupNode needFormulasForAggregateType:]
Shouldn't be asking if TSCEAggType_Indirect needs formulas
Shouldn't be asking if TSCEAggType_INVALID needs formulas
-[TSTGroupNode rebuildFormulasForAggNode:]
v24@?0@"TSTGroupNode"8^B16
v24@?0r^{TSUIndexRange=qq}8^B16
-[TSTGroupNode containsAnyRowUidInRowUidSet:]
-[TSTGroupNode clearAllGroupNodes]
-[TSTGroupNode clearEmptyNodes]
+[TSTGroupNode localizedStringForCellValue:categoryLevel:groupBy:]
result
-[TSTGroupNode groupValueCellValue]
-[TSTGroupNode groupValueCellValueForGroupBySet:aggIndex:appendAggregateName:]
Grand Total
TSTables
%@ %@
-[TSTGroupNode groupValueHierarchyForChart:]
-[TSTGroupNode groupValueHierarchyForChart:groupBySet:aggIndex:appendAggregateName:]
-[TSTGroupNode groupValueHierarchyStringWithDelimiterString:namingContext:]
-[TSTGroupNode firstVisibleNodeUsingColumnRowUIDMap:forDimension:leafLevel:pivotTableHiddenExtent:]
columnRowUIDMap
-[TSTGroupNode addAggNode:]
Aggregator needs to be setup already
allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size
void TSTArgumentAtIndexLocator::setArgumentAt(NSInteger, TSTFormulaPredArg *__strong)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTArgumentAtIndexLocator.mm
Position %d not supported
virtual TSCEASTElement *TSTArgumentAtIndexLocator::linkedRefNode(TSCEASTLinkedRefElement *)
Never used - now deprecated TSCEASTLinkedRowRefNode
-[TSTCellSelection initWithTableInfo:selectionType:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCellSelection.mm
expected inequality between %{public}s and %{public}s
selectionType
kNoSelection
-[TSTCellSelection initWithTableInfo:rowOrColumn:index:count:]
Invalid selection type used with rowOrColumn initializer.
-[TSTCellSelection logicalCellIDInTable:]
Cannot provide a logical cell ID for a selection that is not rectangular or does not represent a single cell or merge
v16@?0@"TSTTableInfo"8
v32@?0{TSUCellRect={TSUCellCoord=ISBB}{?=II}}8^B24
-[TSTCellSelection selectionByExtendingWithCellRange:inTable:selectionType:cursorCell:]
Can't extend a selection with an invalid cell range
-[TSTCellSelection selectionByAddingCellRange:inTable:withAnchor:cursor:selectionType:]
-[TSTCellSelection selectionByRemovingCellRange:inTable:withAnchor:cursor:selectionType:]
Can't remove an invalid cell range
<%@: %p type: %@ region: %@ base region: %@ anchor: %@ cursor: %@>
<%@: %p type: %@ anchor: %@ cursor: %@>
TSTSelectionType TSTArchivedToNativeSelectionType(const TST::SelectionTypeArchive)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTArchiveUtilities.h
shouldn't be converting from deprecated archived selection type %d
region
column
noSelection
<unknown>
-[TSTRefParser p_parseStringAsGeometricReferenceComponent:inResolver:outPreserveFlags:gettingReferencesMatchingInputAsPrefix:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTRefParser.mm
can't look for geometric references in no particular table
v24@?0r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}8^B16
%@%@ %@%@
%@%@
-[TSTRefParser parseAsTractRefWithParsingContext:]
We should only have a nil preferred geometric resolver if a non-unique table name on another sheet is given without sheet name
-[TSTRefParser parseAsChromeRefWithParsingContext:]
%@:%@
bug in reference parser - only ranges expected here
If there is only one range reference, it should match resultRangeRef.
-[TSTTableModel setStylesheetForUpgradeToSingleStylesheet:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTableModel.mm
presets
v32@?0@8Q16^B24
-[TSTTableModel initWithContext:tableUID:columnRowUIDMap:styles:stylePreset:tableInfo:]_block_invoke
Caller must provide preset or styles or both.
v12@?0{TSUModelRowIndex=I}8
v10@?0{TSUModelColumnIndex=S}8
TSTPencilCat
v40@?0@"TSTPencilAnnotation"8@"TSCEFormulaObject"16Q24^B32
@"TSCEFormulaObject"24@?0@"TSCEFormulaObject"8^{TSCEFormulaRewriteContext=@@{TSCEFormulaRewriteContextRecord={TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}{TSKUIDStruct=QQ}{TSUColumnRowOffset=ii}BBBBBBB}}16
v24@?0@"<TSTCellIteratorData>"8^B16
v48@?0I8@"TSDStroke"12{TSTSimpleRange=qQ}20i36^B40
v48@?0S8@"TSDStroke"12{TSTSimpleRange=qQ}20i36^B40
-[TSTTableModel initAsPivotDataWithContext:tableInfo:sourceModel:sourceBody:sourceHeader:]
calcEngine
 as Pivot Source Table
@"TSSStyle"16@?0@"TSSStyle"8
v24@?0Q8^B16
@"TSTConcurrentCellIteratorFourArgRock"24@?0{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}8
v24@?0@"<TSTCellIteratorData>"8@"TSTConcurrentCellIteratorFourArgRock"16
v32@?0@"TSUMutablePair"8Q16^B24
v16@?0@"NSArray"8
-[TSTTableModel p_updateMergesAndCellsAsPivotDataWithSourceModel:sourceRegion:sourceBodyRegion:]
We should really have rows in a pivot source.
v40@?0{TSUCellCoord=ISBB}8@"TSTCell"16Q24^B32
@"TSTCellMap"24@?0{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}8
v24@?0@"<TSTCellIteratorData>"8@"TSTCellMap"16
v32@?0^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}8{TSUCellCoord=ISBB}16^B24
-[TSTTableModel upgradeDuringDocumentUpgradeIfNeeded:tableInfo:]
Invalid parameter not satisfying: %{public}s
tableInfo != nil
hiddenStates
v24@?0@"TSKCustomFormatWrapper"8^B16
v24@?0@"<TSTCellIteratorData>"8@"TSTConcurrentCellList"16
@"TSTConcurrentSparseCellList"24@?0{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}8
v16@?0@"TSTTableStyle"8
v16@?0@"TSTCellStyle"8
v16@?0@"TSWPParagraphStyle"8
v16@?0@"TSWPShapeStyle"8
v16@?0@"TSTTableStylePreset"8
v16@?0@"TSTHiddenStateFormulaOwner"8
v16@?0@"TSTTableFilterSet"8
v16@?0@"TSTCategoryOwner"8
v16@?0@"TSTPivotOwner"8
v16@?0@"TSWPStorage"8
v16@?0@"TSTColumnRowUIDMap"8
v16@?0@"TSTStrokeSidecar"8
-[TSTTableModel loadFromUnarchiver:]
Unequal date grouping columns and values. We can't make a map.
-[TSTTableModel saveToArchiver:]
Expected all tables to be using subOwner formulaOwnerUIDs now.
TSTPivotTables
Fatal Assertion failure: %{public}s %{public}s:%d Bad table model feature version!
Bad table model feature version!
Unexpected categories feature version in TSTTableModel.
Fatal Assertion failure: %{public}s %{public}s:%d Trying to set a non-nil tableInfo on tableModel of type %d, not allowed.
-[TSTTableModel setTableInfo:]
Trying to set a non-nil tableInfo on tableModel of type %d, not allowed.
-[TSTTableModel setTextImportRecord:]
Bad import record type!
-[TSTTableModel verifySubOwnerUIDsUsed]
Conditional styles ownerUid isn't subOwner uid for table:%@
Sort Rule ownerUid isn't subOwner uid table:%@
Merge ownerUid isn't subOwner uid table:%@
Pencil Annotation ownerUid isn't subOwner uid table:%@
Pivot ownerUid isn't subOwner uid table:%@
TSTHiddenStateFORMULAOwner ownerUid isn't subOwner uid table:%@
<%@> %@ (%@%@)
 From: %@
-[TSTTableModel unnamedTableString]
locale
Table %@
untitledTableNameFormat
-[TSTTableModel setCellsWithBaseCellMap:ignoreFormulas:skipDirtyingNonFormulaCells:]
using a uid based cellmap where a coord based one is expected
-[TSTTableModel clearCommentHostingMapForCommentStorage:]
Tables Comment Storage should not be empty
-[TSTTableModel commentHostingAtBaseCellCoord:forCommentStorage:]
Comment storages should be equal
-[TSTTableModel heightOfRowAtIndex:isDefault:]
Bad row index!
-[TSTTableModel widthOfColumnAtIndex:isDefault:]
Bad column index!
-[TSTTableModel setHeight:ofRowAtIndex:]
-[TSTTableModel setWidth:ofColumnAtIndex:]
v32@?0@"NSNumber"8Q16^B24
-[TSTTableModel insertColumnsAtIndex:uids:metadatas:tableArea:]
invalid table area for column insert
not enough room in the header
-[TSTTableModel insertRowsAtIndex:uids:metadatas:tableArea:unsetFilterHidingAction:]
invalid table area for row insert
not enough room in the header for insert
not enough room in the footer for insert
v32@?0{_NSRange=QQ}8^B24
-[TSTTableModel setHidingState:atRowIndex:]
-[TSTTableModel setHidingState:atColumnIndex:]
-[TSTTableModel columnNameForCellID:restrictToBodyRange:]
refNamer
Column %@
-[TSTTableModel setFormulaOwnerUIDsWithMap:shouldStealReferences:]
Really needed an ownerUIDMapper here - tableModel is %@ (%@)
@"TSCEFormulaObject"28@?0@"TSCEFormulaObject"8I16^B20
@"TSTConditionalStyleSet"28@?0@"TSTConditionalStyleSet"8I16^B20
-[TSTTableModel registerAllFormulasWithCalculationEngine:wasCrossDocumentPaste:infoIsCategorized:wasUndo:]
expect the locally set calc engine to be the same as the one passed in
v24@?0Q8@"TSCEFormulaObject"16
@"TSSStyle"32@?0@"TSSStyle"8@"NSString"16Q24
-[TSTTableModel adoptStylesheet:withMapper:]
we expect the table to not be registered yet
 Document or Theme
-[TSTTableModel validateTableStylesInSameStylesheetExpectingDocSS:]
Expected non-nil document stylesheet for validation.
-[TSTTableModel validateTableStylesInSameStylesheetExpectingDocSS:]_block_invoke
styleStylesheet
Expected%{public}@ stylesheet %p on table network style %lu, got %p
v40@?0@"TSSStyle"8@"NSString"16Q24^B32
v40@?0@"TSWPParagraphStyle"8{_NSRange=QQ}16^B32
-[TSTTableModel baseCellCoordForCellContainingRichTextStorage:]
storage
@"TSTCell"16@?0^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}8
{vector<TSTCell *, std::allocator<TSTCell *>>=^@^@{__compressed_pair<TSTCell *__strong *, std::allocator<TSTCell *>>=^@}}36@?0{TSUModelRowIndex=I}8@"TSTTableTile"12@"TSTTableTileRowInfo"20^v28
v40@?0{TSUModelCellCoord={TSUCellCoord=ISBB}}8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16@"TSTCell"24@"TSTCell"32
-[TSTTableModel setCellsConcurrently:ignoreFormula:clearImportWarnings:formulaReplacer:]_block_invoke
baseCoord should be valid
-[TSTTableModel setCellsConcurrently:ignoreFormula:clearImportWarnings:formulaReplacer:]_block_invoke_2
cells called should have rich text
TSTCategorizedTables
TSTExpandedTables
TSTFutureProofCell
NSString *TSTFeatureIdentifierForCompatibilityVersion(TSPVersion)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCompatibility.h
Unimplemented version for TSTCompatibility: %@
double TSTCellStorageDurationValue(TSTCellStorage *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCellStorage.h
Asked for duration value from non-duration cell.
TSUCellRect TSUCellRangeFromRowRange(NSRange, TSUColumnRowSize)
/Library/Caches/com.apple.xbs/Binaries/iWorkImport_Sim/install/Symbols/BuiltProducts/TSUtility.framework/Headers/TSUColumnRowRect.h
out of bounds
TSUCellRect TSUCellRangeFromColumnRange(NSRange, TSUColumnRowSize)
-[TSTMutableCellIteratorData cellID]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTMutableCellIteratorData.m
cellID read before it was set
-[TSTMutableCellIteratorData cell]
cell read before it was set
-[TSTMutableCellIteratorData mergeRange]
mergeRange read before it was set
-[TSTMutableCellIteratorData formulaSpec]
formulaSpec read before it was set
v24@?0@"TSTTableTileRowInfo"8^B16
v28@?0@"TSTTableTileRowInfo"8I16^B20
Tables/Tile
-[TSTTableTile _setRowInfo:atTileRowIndex:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTableTile.mm
Duplicate row indexes!
Fatal Assertion failure: %{public}s %{public}s:%d Table embiggening is a one-way process
-[TSTTableTile setShouldUseWideRows:]
Table embiggening is a one-way process
-[TSTTableTile populatedRows]_block_invoke
rowInfo
<%@:%p %lu cells/ rows %@ >
Couldn't find row info for row index %lu
-[TSTTableTile setCell:atColumnIndex:tileRowIndex:formatKeys:]
Fatal Assertion failure: %{public}s %{public}s:%d Missing formatKeys when we need them!.
Missing formatKeys when we need them!.
v32@?0@"NSObject"8Q16^B24
-[TSTTableTile assertListRows]_block_invoke
In assertListRows, saw a row info that has no cells
void _assertTileIndexMatch(TSURowIndex, TSURowIndex)
TableTile row index %u should match array index %u.
-[TSTCellRangeControlSpec initWithInteractionType:minimum:maximum:increment:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCellRangeControlSpec.mm
Illegal interaction type:%@
Illegal parameters: %f, %f, %f
+[TSTCellRangeControlSpec cellSpecFromTSKFormat:]
TSTCellRangeControlSpec can only be created from TSKFormats for Stepper, Slider, and Rating.
tstHasFormulas
tstHasPastableFormulas
tstContainsCategoryColumn
tstNumRows
tstNumColumns
tstHasMergeRanges
tstFullyFiltered
tstCopiedRegion
tstSourceTableID
tstSourceOrigin
tstSourceNumHeaderColumns
tstSourceNumHeaderRows
tstSourceNumFooterRows
tstSourceNumRows
tstSourceNumColumns
tstSourceSelectionType
%@ Pivot
-[TSTTableInfo initWithContext:geometry:rows:columns:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTableInfo.mm
stylePreset
-[TSTTableInfo initWithContext:geometry:]
call - (instancetype) initWithContext: (TSPObjectContext *) context geometry: (TSDInfoGeometry *) geometry styles:(TSTTableStyleNetwork *)styles please
-[TSTTableInfo initAsDetailTableWithContext:sourcePivotTableInfo:pivotSourceCell:]
Expect only pivotTable to be passed in.
-[TSTTableInfo initWithContext:fromSourceInfo:cellRegion:waitForCalcEngine:flattenCategories:isSnapshot:]
Copying a categorized table without flattening. If you know how you got here, please write a bug.
v20@?0I8^B12
v20@?0S8^B12
-[TSTTableInfo _initWithContext:flatteningFromComplexInfo:cellRegion:waitForCalcEngine:flatteningOptions:isSnapshot:]
not expecting categorized or pivot table
-[TSTTableInfo _initWithContext:fromSourceInfo:cellRegion:tableModel:waitForCalcEngine:formulaCoordSpace:]
not expecting a categorized table
%@ %p: %@ (tableUID: %@ tableName: %@)
Headers table
Basic table
Checklist table
Stocks table
Plain table
Headers and footers table
+[TSTTableInfo localizedDescriptionForProtoIndex:]
No description for table proto index: %lu
Field 1
Field 2
Field 3
remotedata_positive_fill@2x.png
remotedata_negative_fill@2x.png
-[TSTTableInfo componentRootObject]
Component root object is nil!
-[TSTTableInfo performReadForOneOffFormulaEvaluation:forCellCoord:]
_translator
-[TSTTableInfo notifyTableOfNewResults]
There are no callers of this, but its needed to conform to TSCECalculationEngineRegistration protocol
-[TSTTableInfo filteringColumnNameForColumnIndex:]
-[TSTTableInfo p_setFilterSet:]
Must convert filters to geometric before setting
+[TSTTableInfo bootstrapPresetsOfKind:inTheme:alternate:reservedCount:]
expected equality between %{public}s and %{public}s
p.context
context
-[TSTTableInfo replaceReferencedStylesUsingBlock:]
failed cell map application
Table
+[TSTTableInfo validateNewName:forTable:]
Unable to get sheetNameProvider
B24@?0@"NSArray"8@"NSArray"16
TableInfo %p with tableName: '%@' and tableUID %@ is not registered with the calc-engine properly.
Repaired by renaming table to '%@' with tableUID: %@
-[TSTTableInfo allAnnotations]_block_invoke
iterator shoul only return cells with comments
^%@\s\d+(-\d+)?$
%@-%@
-[TSTTableInfo chooseUniqueNameInContainer:forPaste:needsNewName:avoidNames:]
Fresh table name is the same as the old one - aborting infinite loop.
-[TSTTableInfo getDefaultCell:forCellID:]
trying to get a default cell for an invalid cell ID
-[TSTTableInfo getCell:atCellID:suppressCellBorder:]
-[TSTTableInfo getCell:atCellID:]
-[TSTTableInfo hasFormulaAtCellUID:]
-[TSTTableInfo formulaAtCellID:]
-[TSTTableInfo setCell:atCellUID:ignoreFormula:clearImportWarnings:formulaReplacer:]
-[TSTTableInfo setCell:atCellUID:ignoreFormula:clearImportWarnings:]
-[TSTTableInfo setCellsWithCellMap:ignoreFormulas:skipDirtyingNonFormulaCells:]
coord based cellmaps no longer ok
v32@?0r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}8Q16^B24
@"TSTCellMap"24@?0{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}8
@"TSTConcurrentCellList"24@?0{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}8
-[TSTTableInfo cellValueTypeAtCellID:]
-[TSTTableInfo cellValueTypeAtCellUID:]
-[TSTTableInfo setCellStyle:ofRowAtUID:]
-[TSTTableInfo setTextStyle:ofRowAtUID:]
-[TSTTableInfo cellStyleOfRowAtIndex:isDefault:]
-[TSTTableInfo textStyleOfRowAtIndex:isDefault:]
-[TSTTableInfo setCellStyle:ofColumnAtUID:]
-[TSTTableInfo setTextStyle:ofColumnAtUID:]
-[TSTTableInfo cellStyleOfColumnAtIndex:isDefault:]
-[TSTTableInfo textStyleOfColumnAtIndex:isDefault:]
-[TSTTableInfo defaultCellStyleForCellID:useSoftDefault:outSource:]
-[TSTTableInfo defaultCellStyleForTableStyleArea:]
-[TSTTableInfo defaultTextStyleForCellID:useSoftDefault:outSource:]
-[TSTTableInfo defaultTextStyleForTableStyleArea:]
-[TSTTableInfo cellStyleAtCellID:isDefault:]
-[TSTTableInfo textStyleAtCellID:isDefault:]
-[TSTTableInfo cellStyleAtCellUID:isDefault:]
-[TSTTableInfo textStyleAtCellUID:isDefault:]
-[TSTTableInfo conditionalStyleSetAtCellID:]
-[TSTTableInfo columnNameForCellID:restrictToBodyRange:]
-[TSTTableInfo rowNameForCellID:restrictToBodyRange:]
-[TSTTableInfo columnNameForColumnIndex:withFallbackFormat:]
-[TSTTableInfo stringAtCellID:optionalCell:]
-[TSTTableInfo characterFillAtCellID:optionalCell:]
%@: %@
 (%@)
Value Field
Field
Total
Row Group
Column Group
Summary
v40@?0Q8{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16^B32
v16@?0Q8
-[TSTTableInfo getValue:atCellID:fetchRichTextAttributesIfPlainText:]
-[TSTTableInfo cellValueFromCell:atCellID:]
v24@?0{TSUCellCoord=ISBB}8^B16
v40@?0C8{TSKUIDStruct=QQ}12C28^B32
-[TSTTableInfo _correctAndCheckStateSuppressingAssertions:]
TableChecker: correcting nil categoryOrder in normal/disabled state
TableChecker: correcting missing backpointer in normal/disabled state
TableChecker: correcting uid map in normal/disabled state
TableChecker: correcting strokeSidecar
TableChecker: correcting summaryModel
TableChecker: correcting maps
-[TSTTableInfo setGroupByUid:]
Hey, don't set an invalid groupByUid on TSTTableInfo - ignoring your silly request.
Not expecting our pointer to change during subOwnerUIDUpgrade, if so, categoryOwner will need to update its structures
_groupBy.groupByUid and _groupByUid should match
-[TSTTableInfo setIsCategoryEnabled:]
Cannot enable/disable categories without a groupBy
-[TSTTableInfo isEmptyPivot]
self.pivotOwner
-[TSTTableInfo applyPivotWithColumns:rows:aggregates:flatteningDimension:optionsMap:pivotRowColumnRuleChangeUid:pivotAggregateRuleChangeUid:]
Cannot apply pivot rules to a non-pivot table
v24@?0@"TSTGroupingColumn"8^B16
-[TSTTableInfo verifySubOwnerUIDsUsed]
Row hidden state ownerUid isn't subOwner uid: %@
Column hidden state ownerUid isn't subOwner uid
Category Aggregate ownerUid isn't subOwner uid
GroupBy uid isn't subOwner uid
PivotDataModel uid isn't subOwner uid
v16@?0@"TSTTableModel"8
v16@?0@"TSTSummaryModel"8
v16@?0@"TSTCategoryOrder"8
v16@?0@"TSTPivotRowColumnOrder"8
-[TSTTableInfo saveToArchive:archiver:]
Out-of-bounds type assignment was clamped to max
Out-of-bounds type assignment was clamped to min
_pivotDataModel
_pivotOrder
v16@?0@"TSDLayout"8
-[TSTTableInfo(CellMap) applyCellDiff:atCellUID:migrationMap:inverseCellDiff:defaultCellStyle:defaultTextStyle:]_block_invoke
customFormat
-[TSTTableInfo(CellMap) applyCellDiff:atCellUID:migrationMap:inverseCellDiff:defaultCellStyle:defaultTextStyle:]
TSU_SUCCESS
v16@?0@"TSDCommentStorage"8
v16@?0@"TSTRichTextReferenceWrapper"8
v16@?0@"TSTConditionalStyleSet"8
void TSTEncodeCellToArchive(TSTCell *__strong, TST::Cell *, TSPArchiver *__strong)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTArchiveUtilities.mm
stringValue in string cell is nil
TSDThreadedComments
-[TSTUIDRectRef convertUIDRefToViewTractRef]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTUIDRectRef.mm
If we're already uid-form, why do we have a mapper?
-[TSTUIDRectRef baseRangeRef]
This API can't support multiple base ranges, had %lu
-[TSTUIDRectRef viewRangeRef]
This API can't support multiple view ranges, had %lu
%@<%p> base:
-[TSTCellIterator initWithTableInfo:tableModel:region:flags:searchFlags:clampingRange:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCellIterator.mm
caller should pass in region pointer
Tried to create iterator with range larger than is possible.
cannot use iterator flags to return all empty cells and also use flags to only search for specific kinds of cells
unsupported options, searching for borders but not fetching them
flags remain 0x%lx, flags should all be consumed by this point 
searchFlags remain 0x%lx, searchFlags should all be consumed by this point 
-[TSTCellIterator p_updateDataForMergeAtCellID:]
found this column in the cached merge ranges, so expected a merge range
-[TSTCellIterator p_updateDataForCellID:]
cell iterator was asked for cellID %@ that is outside the table bounds
tableCell
tableCellText
+[TSTCellStyle properties]_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCellStyle.mm
sProperties
+[TSTCellStyle propertiesAllowingNSNull]_block_invoke
s_nullProperties
+[TSTCellStyle nonEmphasisCellProperties]_block_invoke
s_nonEmphasisProperties
+[TSTCellStyle categoriesCellProperties]_block_invoke
bodyStyle
headerRowStyle
headerColumnStyle
footerRowStyle
categoryLevel1Row
categoryLevel2Row
categoryLevel3Row
categoryLevel4Row
categoryLevel5Row
labelLevel1Row
labelLevel2Row
labelLevel3Row
labelLevel4Row
labelLevel5Row
pivotBodySummaryRow
pivotBodySummaryColumn
pivotHeaderColumnSummary
+[TSTCellStyle p_regionStringForTableStyleArea:]
Unexpected value for region.
+[TSTCellStyle initDefaultPropertyMap:forTableStyleArea:presetID:colors:alternate:]
-[TSTCellStyle validate]
orphaned cell style %@
Cell style not in its stylesheet
-[TSTCellStyle targetSizeForImageData:associatedHint:]_block_invoke
preset
-[TSTCellStyle targetSizeForImageData:associatedHint:]
Expected that the imageData would be from the style's fill
v20@?0i8^B12
Copy
Copy Snapshot
Paste
Paste and Match Style
Clear All
Wrap Text
Fit to Content
Collapse
TSTablesUndo
Collapse Group
Collapse Groups
Collapse Selected Group
Collapse Selected Groups
All Column Groups
Selected Column Groups
All Row Groups
Selected Row Groups
Expand
Expand Group
Expand Groups
Expand Selected Group
Expand Selected Groups
Sort Ascending
Sort Descending
Sort Groups
Sort Summaries
Sort Values
All Ascending
All Descending
Sort Groups Ascending
Sort Groups Descending
Sort Grand Totals
Add Field Before
Add Field After
Show Field Options
Promote
Demote
Remove
Quick Filter
Create Table for Source Data
Select Similar Cells
Update Pivot Table
%1$@: %2$@%3$@
%1$@: %2$@: %3$@: %4$@: %5$@
%1$@: %2$@: %3$@: %4$@
%1$@: %2$@: %3$@
%1$@: %2$@
%1$@
 (%1$@)
Can't Add Field
Can't Move Field
Can't Refresh Pivot Table
Swapping the row and column fields would cause the pivot table to exceed the maximum of 1 million rows.
Swapping the row and column fields would cause the pivot table to exceed the maximum of 1,000 columns.
%@ -> %@
-[TSTPivotTranslator resetViewMap]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTPivotTranslator.mm
view and base cannot be the same for a pivot table
-[TSTPivotTranslator tableStyleAreaForRow:]
Unimplemented for pivot tables, because it doesn't make sense.
i32@?0r^{TSUModelCellCoord={TSUCellCoord=ISBB}}8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16C24C28
i24@?0r^{TSUModelCellCoord={TSUCellCoord=ISBB}}8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
v12@?0C8
v24@?0r^{TSUModelRowIndex=I}8r^{TSKUIDStruct=QQ}16
v24@?0r^{TSUModelColumnIndex=S}8r^{TSKUIDStruct=QQ}16
-[TSTPivotTranslator p_applyViewCellCoord:toSummaryUsingBlock:toBaseUsingBlock:]
cell in summary row is in viewMap, but not in summaryMap
-[TSTPivotTranslator indexesForRowsContainedByGroupUIDs:]_block_invoke
do not call with root group
-[TSTPivotTranslator indexesForColumnsContainedByGroupUIDs:]_block_invoke
TSTColumnRowTypeWithIndex TSTMakeColumnRowTypeWithIndex(TSTColumnRowType, NSUInteger)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTableConstants.h
Type:%ldl or index:%lul is too large for TSTIndexedColumnRowType.
-[TSTTableTileRowInfo initFromArchive:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTableTileRowInfo.mm
Can't find the last valid column during unarchive!
lastPreBNCCellRef
Mismatches between buffers.
-[TSTTableTileRowInfo encodeToArchive:archiver:]
should not be archiving an empty row info
Expected current storage version.
-[TSTTableTileRowInfo _insertCell:atIndex:formatKeys:]
Can't insert over an existing cell!
Fatal Assertion failure: %{public}s %{public}s:%d Attempting to write cells to a preBNC row.
-[TSTTableTileRowInfo setCell:atIndex:formatKeys:]
Attempting to write cells to a preBNC row.
Fatal Assertion failure: %{public}s %{public}s:%d Attempting to insert columns in a preBNC row.
-[TSTTableTileRowInfo insertColumnsAtIndex:count:]
Attempting to insert columns in a preBNC row.
Fatal Assertion failure: %{public}s %{public}s:%d Attempting to remove columns in a preBNC row.
-[TSTTableTileRowInfo removeColumnsAtIndex:count:]
Attempting to remove columns in a preBNC row.
-[TSTTableTileRowInfo moveColumnsFromIndex:toIndex:count:]
Move column ranges cannot overlap!
cellsMoved
cellsMovedPreBNC
Incorrect maximum column!
-[TSTTableTileRowInfo validateWithResult:]
%{public}@
 Misaligned cell storage offsets!
 Cell storage overflow!
 Found an extra cell in this row!
 Bad cell version!
 Mismatched presence of cells.
 Misaligned cell storage offsets in PreBNC!
 Cell storage overflow in PreBNC!
 Found an extra preBNC cell in this row!
 Cell storage overflow in Pre BNC!
 Incorrect cell count! Expected:%tu Found:%tu.
 Incorrect PreBNC cell count! Expected:%tu Found:%tu.
<%@:%p tileRowIndex %lu cellCount %lu>
Fatal Assertion failure: %{public}s %{public}s:%d Never call me without a row
TSUColumnIndex _maxColumnIndex(TSTTableTileRowInfo *__unsafe_unretained)
Never call me without a row
void _invalidateMaxColumnIndex(TSTTableTileRowInfo *__unsafe_unretained)
void _updateCellBufferSize(TSTTableTileRowBuffer *, NSUInteger)
Row data buffer is too small!
Fatal Assertion failure: %{public}s %{public}s:%d Can't grow to wide columns in a row buffer not converted for wide offsets
void _extendOffsetArrayForMaxIndex(TSTTableTileRowBuffer *, TSUColumnIndex)
Can't grow to wide columns in a row buffer not converted for wide offsets
Fatal Assertion failure: %{public}s %{public}s:%d Too many columns for our row storage!
Too many columns for our row storage!
Fatal Assertion failure: %{public}s %{public}s:%d Encountered a bad offset while widening!
void _convertBufferToWideIndexes(TSTTableTileRowBuffer *)
Encountered a bad offset while widening!
void _shiftCellStorageInBuffer(TSTTableTileRowBuffer *, NSUInteger, NSInteger)
Row storage buffer overflow!
Fatal Assertion failure: %{public}s %{public}s:%d Corrupt cellStorage shift. Crashing!
Corrupt cellStorage shift. Crashing!
Fatal Assertion failure: %{public}s %{public}s:%d Computed impossible insertion point.
NSUInteger _offsetForInsertInBuffer(TSTTableTileRowBuffer *, TSUColumnIndex, TSUColumnIndex, NSInteger)
Computed impossible insertion point.
void _invalidateMaxColumnIndexForColumnIndex(TSTTableTileRowInfo *__unsafe_unretained, TSUColumnIndex)
NSUInteger _applyMovingCellBuffer(TSTTableTileRowBuffer *, TSTTableTileRowBuffer *, TSUColumnIndex, TSUColumnRowCount)
Overwriting a column in move!
NSUInteger _storageSizeInBuffer(TSTTableTileRowBuffer *, TSUColumnIndex, TSUColumnIndex)
Couldn't find next storage offset for non-last cell!
virtual TSCEASTElement *TSTCellSpecFormulaExtractor::functionNode(TSCEASTFunctionElement *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCellFormulaSpec.mm
Need a locale to parse stock formulas.
-[TSTCellFormulaSpec initWithFormulaObject:locale:]
TSTCellFormulaSpec requires a formula.
<%@: %p>: %@
null formula
UInt16 TSTCellStorageSizeForHeaderFlags(TSTCellStorageFieldFlags)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCellStorage.mm
Storage size should be four-byte-aligned!
BOOL TSTCellStorageVersionCheck(TSTCellStorage *)
Can't parse cell storage header version %d!
void TSTCellToCellStorage(TSTCell *__strong, TSTCellStorage *)
Cell claims to have a string, but has no key for it!
Cell claims to have rich text, but has no key for it!
Cell claims to have a cell style, but has no key for it!
Cell claims to have a text style, but has no key for it!
Cell claims to have conditional style, but has no key for it!
Cell claims to have a formula, but has no key for it!
Cell claims to have a control, but has no key for it!
Cell claims to have a formula syntax error, but has no key for it!
Can't archive a bad format kind!
Cell claims to have a number format, but has no key for it!
Cell claims to have a currency format, but has no key for it!
Cell claims to have a date format, but has no key for it!
Cell claims to have a duration format, but has no key for it!
Cell claims to have a text format, but has no key for it!
Cell claims to have a boolean format, but has no key for it!
Cell claims to have a comment storage, but has no key for it!
Cell claims to have an import warning set, but has no key for it!
Could not archive all computed storage elements!
Failed to process all storage elements in TSTCellToCellStorage! Starting flags:%u Final flags:%u
Size miscalculation!
void TSTCellStorageToCell(TSTCellStorage *, TSTCell *__strong)
Fatal Assertion failure: %{public}s %{public}s:%d Can't get offset for unknown element 0x%02x, offset:%hu!
UInt16 p_OffsetForElementInStorage(TSTCellStorage *, TSTCellStorageFieldFlags)
Can't get offset for unknown element 0x%02x, offset:%hu!
void p_SetKeyAtOffset(TSTCellStorage *, TSTTableDataListKey, UInt16)
Can't set an invalid datalist key!
-[TSTGroupingColumnList addRule:atGroupLevel:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTGroupingColumnList.mm
Can't call this on root level
-[TSTGroupingColumnList removeRuleAtGroupLevel:]
-[TSTGroupingColumnList moveRuleFromGroupLevel:toLevel:]
-[TSTGroupingColumnList changeGroupingTypeForGroupLevel:toType:]
-[TSTGroupingColumnList replaceRuleAtGroupLevel:withRule:]
v32@?0@"TSTGroupingColumn"8Q16^B24
TSTGroupBySet<%p> for pivot: %@
  GroupBy %d: %@
-[TSTGroupBySet restoreFromPivotDataTable:columnGroupings:rowGroupings:aggregates:flatteningDimension:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTGroupBySet.mm
Pivot data model missing when restoring rules for a pivot table
-[TSTGroupBySet setPivotRulesWithPivotDataTable:columnGroupings:rowGroupings:aggregates:flatteningDimension:]
Pivot data model missing when setting rules for a pivot table
-[TSTGroupBySet groupByForColumnLevel:rowLevel:]
columnLevel exceeds columnGroupings.count
rowLevel exceeds rowGroupings.count
No groupBy set for columnLevel: %d
-[TSTGroupBySet groupColumnIndexesForOwnerIndex:]
Excceded our set of practical groupBys
-[TSTGroupBySet groupingColumnsForOwnerIndex:]
Expected to get a grouping column for index: %d
-[TSTGroupBySet groupByForOwnerIndex:createIfMissing:]
ownerIndex out of range: %d
Fatal Assertion failure: %{public}s %{public}s:%d Asking for flattened column aggregate uids while not flattening on columns
-[TSTGroupBySet columnUidsForColumnGroupUid:]
Asking for flattened column aggregate uids while not flattening on columns
Fatal Assertion failure: %{public}s %{public}s:%d Asking for flattened row aggregate uids while not flattening on rows
-[TSTGroupBySet rowUidsForRowGroupUid:]
Asking for flattened row aggregate uids while not flattening on rows
-[TSTGroupBySet columnNameForAggregateIndex:allowDuplicateNames:]
Re-constructing a non-empty pivot table without the calc engine
-[TSTGroupBySet qualifiedColumnNameForAggregateIndex:useShortLabel:allowDuplicateNames:locale:]
Requires a locale here
%@ of %@
<Invalid AggType>: %@
Expecting to have localized label for all correct aggregate types
-[TSTGroupBySet compactQualifiedColumnNameForAggregateIndex:useShortLabel:allowDuplicateNames:locale:]
%@ (%@)
-[TSTGroupBySet percentParentDenominatorCategoryRefFor:inGroupBy:forAggregate:forShowAsType:]
Only expecting these two showAsTypes, got: %d
-[TSTGroupBySet restrictColumnIndexes:toColumnGroupLevel:forPivotTable:]
Only expected this call with pivotTableInfo
-[TSTGroupBySet groupValueTupleForUuidCoord:createIfMissing:]
Couldn't locate rowGroupNode or columnGroupNode
Need a groupBy for this coordinate - why didn't you help?
TSTTableInfo
TSTTableModel
TSTTableStyle
TSTCellStyle
TSTConditionalStyleSet
TSTTableTile
TSTTableDataList
TSTTableDataListSegment
TSTTableHeaderStorageBucket
TSTWPTableInfo
TSTTableStrokePreset
TSTTableStylePreset
TSTArchivedCellSelection
TSTArchivedRdar39989167CellSelection
TSTArchivedStrokeSelection
TSTArchivedAutofillSelection
TSTCellMap
TSTConcurrentCellMap
TSTConcurrentCellList
TSTFormulaEqualsTokenAttachment
TSTWPTokenAttachment
TSTExpressionNode
TSTBooleanNode
TSTNumberNode
TSTStringNode
TSTArrayNode
TSTListNode
TSTLetNode
TSTVariableNode
TSTInNode
TSTOperatorNode
TSTPostfixOperatorNode
TSTPrefixOperatorNode
TSTFunctionNode
TSTFunctionEndNode
TSTDateNode
TSTReferenceNode
TSTDurationNode
TSTArgumentPlaceholderNode
TSTIdentifierNode
TSTMergeRegionMap
TSTEmptyExpressionNode
TSTArchivedLayoutHint
TSTCompletionToken
TSTHiddenStateFormulaOwner
TSTPopUpMenuModel
TSTRichTextPayload
TSTTableFilterSet
TSTTableStyleNetwork
TSTColumnRowUIDMap
TSTSummaryModel
TSTSummaryCellVendor
TSTCategoryOrder
TSTStrokeSidecar
TSTStrokeLayer
TSTPencilAnnotation
TSTHeaderNameMgrTile
TSTHeaderNameMgr
TSTPivotOwner
TSTPivotGroupingColumnOptionsMap
TSTPivotRowColumnOrder
TSTCategoryOwner
TSTGroupBy
TSTCellDiffArray
TSTCellDiffArraySegment
-[TSTConcurrentCellMap viewCellRects]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTConcurrentCellMap.mm
can't use cellid interface with celluid map
-[TSTConcurrentCellMap cellUIDRanges]
can't use celluid interface with cellid map
-[TSTConcurrentCellMap p_cacheRowColumnUIDs]
-[TSTConcurrentCellMap appendCellList:]
cell list uid state doesn't match cell map
-[TSTConcurrentCellMap appendCellLists:]
v40@?0r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}8{TSUViewCellCoord={TSUCellCoord=ISBB}}16{TSUModelCellCoord={TSUCellCoord=ISBB}}24@"TSTCell"32
-[TSTConcurrentCellMap enumerateSeriallyUsingBlock:]
need a celluid based map
check that willApplyToTable was called already
-[TSTConcurrentCellMap p_enumerateNewAndOldCellsSeriallyUsingBlock:]
-[TSTConcurrentCellMap p_enumerateNewAndOldCellsSeriallyUsingPreBNCBlock:]
-[TSTConcurrentCellMap enumerateRowsOfCellsConcurrentlyUsingBlock:]
willApplyToTable should be called first
-[TSTConcurrentCellMap updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:preBNCBlock:]
-[TSTConcurrentCellMap updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:preBNCBlock:]_block_invoke_2
should only be enumerating the cells of interest (stringValue)
-[TSTConcurrentCellMap updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:preBNCBlock:]_block_invoke
should only be enumerating the cells of interest (hasFormula)
-[TSTConcurrentCellMap updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:preBNCBlock:]_block_invoke_3
should only be enumerating the cells of interest (hasFormulaAnyError)
-[TSTConcurrentCellMap updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:preBNCBlock:]_block_invoke_4
should only be enumerating the cells of interest (hasRichText)
-[TSTConcurrentCellMap updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:preBNCBlock:]_block_invoke_5
should only be enumerating the cells of interest (hasConditionalStyle)
-[TSTConcurrentCellMap updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:preBNCBlock:]_block_invoke_6
should only be enumerating the cells of interest (hasCommentStorage)
-[TSTConcurrentCellMap updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:preBNCBlock:]_block_invoke_7
should only be enumerating the cells of interest (hasImportWarningSet)
-[TSTConcurrentCellMap updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:preBNCBlock:]_block_invoke_8
should only be enumerating the cells of interest (hasControl)
{?=IIIIIIIIIS}34@?0@"TSTCell"8@"TSTCell"16@"TSTTableTileRowInfo"24{TSUModelColumnIndex=S}32
-[TSTConcurrentCellMap willApplyToTable:]
applyingToTable already called
need a uidBased cell map
-[TSTConcurrentCellMap convertToInverseCellMap]
willApplyToTable was not called or didApplyToTable called twice
-[TSTConcurrentCellMap pushInverseMergeAction:]
willApplyToTable should have been called
v16@?0@"NSMutableArray"8
-[TSTConcurrentCellList addCell:atViewCellCoord:]
index should be somewhere in the in the cell list's area
-[TSTConcurrentCellList p_setObjectLocale:]
-[TSTConcurrentCellList p_setupInterestingCells:interestingCellIndexes:forAdding:]
cell lists size mismatch
-[TSTConcurrentCellList p_invokeBlock:]
base rows needs to match uids
base cols needs to match uids
cells size needs to match area range
only valid viewRowIndexes should remain
only valid baseRowIndexes should remain
-[TSTConcurrentCellList p_convertToInverseCellMap]
oldCells size mismatch in cellList
-[TSTConcurrentCellList p_gatherRowState:]
-[TSTConcurrentCellList p_accumulateCurrentCellsConcurrentlyUsingBlock:]
_tilesPerRow
_rowInfosPerRow
_tilesPerRow size mismatch in cellList
_rowInfosPerRow size mismatch in cellList
-[TSTConcurrentCellList p_enumerateRowsOfCellsConcurrentlyUsingBlock:]
_oldCells size mismatch in cellList
-[TSTConcurrentCellList p_enumerateNewAndOldCellsSeriallyUsingBlock:]
-[TSTConcurrentCellList p_enumerateNewAndOldCellsSeriallyUsingPreBNCBlock:]
-[TSTConcurrentCellList p_enumerateCellsAddedAndRemovedOfType:usingBlock:]
v32@?0@"TSKFormat"8@"NSMutableIndexSet"16^B24
v32@?0@"NSNumber"8@"NSMutableIndexSet"16^B24
-[TSTConcurrentCellList p_enumerateColumnCellCountDiffUsingBlock:]
_baseColumns and _cellCountDiffsPerColumn sizes should match
-[TSTConcurrentCellList p_enumerateRowCellCountDiffUsingBlock:]
_baseRows and _cellCountDiffsPerRow sizes should match
_baseRows and _tilesPerRow sizes should match
_baseRows and _rowInfosPerRow sizes should match
-[TSTConcurrentCellList p_enumerateCustomFormatsBeingAddedUsingReplacementBlock:]_block_invoke
Expected the custom format replacement to be of the same type as the original.
-[TSTConcurrentCellList p_enumerateCustomFormatsBeingAddedUsingReplacementBlock:]
customFormatToRemove can not be nil.
replacementCustomFormat can not be nil.
-[TSTConcurrentCellList saveToArchiver:]
Archiving is not correctly implemented for subclasses.
-[TSTConcurrentSparseCellList addCell:atViewCellCoord:]
-[TSTConcurrentSparseCellList p_invokeBlock:]
-[TSTConcurrentSparseCellList p_accumulateCurrentCellsConcurrentlyUsingBlock:]
-[TSTConcurrentSparseCellList p_enumerateRowsOfCellsConcurrentlyUsingBlock:]
v12@?0B8
-[TSTTableDataList setRichTextParentInfo:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTableDataList.mm
The richTextParentInfo only applied to the Rich Text Payload datalist.
Tables/DataList
v24@?0@"TSTTableDataObject"8^B16
-[TSTTableDataList p_nextAvailableKey]
-[TSTTableDataList wrappedObjectForPayload:]
Custom Format datalists are obsolete and should never be added to!
-[TSTTableDataList p_setPayload:atSuggestedKey:callWillModify:]
No object with key %u in %{public}@ datalist!
-[TSTTableDataList enumerateFormatsUsingBlock:]
Can't enumerate formats on a non-format list!
-[TSTTableDataList enumerateCustomFormatsUsingBlock:]
Can't enumerate custom formats on a non-custom format list!
-[TSTTableDataList repairStyleDatalistStylesheetIfNecessary]_block_invoke
Expected new style to be in the document stylesheet
-[TSTTableDataList takeReferences:forKey:callWillModify:]
Cannot add reference for custom format
-[TSTTableDataList dropReferences:forKey:callWillModify:]
custom format should not have more than one reference
Comment
Conditional Style
Custom Format
Format
Formula
ControlCellSpec
Formula Error
Import Warning
Multiple Choice List
Rich Text
String
Style
-[TSTTableDataList(Type_Specific_API) allRichTextStorages]
API is intended for kTSTTableDataListTypeRichText lists
-[TSTTableDataList(Type_Specific_API) allRichTextStorages]_block_invoke
richTextObject
richTextObject.richTextStorage
-[TSTTableDataList(Type_Specific_API) containsControlCellSpecs]
API is intended for kTSTTableDataListTypeFormat lists
-[TSTTableDataList(Type_Specific_API) containsFormulas]
API is intended for kTSTTableDataListTypeCellSpec lists
-[TSTTableDataList(Type_Specific_API) cellFormatForKey:]
Can only store formats in this list!
-[TSTTableDataList(Type_Specific_API) commentStorageForKey:]
Can only store cell comment storage objects in this list!
-[TSTTableDataList(Type_Specific_API) conditionalStyleSetForKey:]
Can only store conditional styles in this list!
-[TSTTableDataList(Type_Specific_API) formulaForKey:]
Can only store formulas in this list!
-[TSTTableDataList(Type_Specific_API) controlCellSpecForKey:]
Can only store controls in this list!
-[TSTTableDataList(Type_Specific_API) formulaErrorForKey:]
Can only store formulaErrors in this list!
-[TSTTableDataList(Type_Specific_API) importWarningSetForKey:]
Can only store import warning set objects in this list!
-[TSTTableDataList(Type_Specific_API) multipleChoiceListFormatForKey:]
Can only store pop up menu model in this list!
-[TSTTableDataList(Type_Specific_API) richTextForKey:]
Can only store text storages in this list!
-[TSTTableDataList(Type_Specific_API) stringForKey:]
Can only store strings in this list!
-[TSTTableDataList(Type_Specific_API) stringForKey:shouldWrap:]
-[TSTTableDataList(Type_Specific_API) styleForKey:]
Can only store styles in this list!
-[TSTTableDataList(Upgrade) upgradeCellFormatsU2_0]
This upgrade code is only for the Format list.
-[TSTTableDataList(Upgrade) upgradeCellFormatsU2_0]_block_invoke
customFormatList
-[TSTTableDataList(Upgrade) upgradeConditionalStylesToLinkedRefWithTableUID:]
This upgrade is for conditional style only.
-[TSTTableDataList(Upgrade) reassignCustomFormatUIDForPaste:]
This reassign code is for the Format list only.
v24@?0I8I12^B16
table
tableStyle
+[TSTTableStyle propertiesAllowingNSNull]_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTableStyle.mm
+[TSTTableStyle nonEmphasisTableProperties]_block_invoke
-[TSTTableStyle validate]
orphaned table style %@
Table style not in its stylesheet
-[TSTArchivedCellSelection selection]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTArchivedCellSelection.mm
Call selectionWithParent:
-[TSTArchivedCellSelection selectionWithParent:]
tableInfo
-[TSTArchivedCellSelection setSelection:]
Wrong type of class %@ (expected TSTCellSelection)
<%@: %p> %@
%@ for column %@ at level %lu with show as type %lu %@
(running total on: %@)
v16@?0@"TSPLazyReference"8
B24@?0r^v8r^v16
-[TSTTableTileStorage _upgradeFromTileIDMap:referenceMap:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTableTileStorage.mm
Tile upgrade can't find tile for ID %tu!
error
Fatal Assertion failure: %{public}s %{public}s:%d Failed to load a table tile during upgrade: errorClass=%{public}@, domain=%{public}@, code=%zd, %{public}@hints=%{public}@ (%@) 
recoverable=YES, 
Failed to load a table tile during upgrade: errorClass=%{public}@, domain=%{public}@, code=%zd, %{public}@hints=%{public}@ (%@) 
v32@?0@"TSPLazyReference"8Q16^B24
-[TSTTableTileStorage saveToStorageArchive:treeArchive:archiver:]
Unexpected categories feature version in TSTTableTileStorage.
v28@?0@"TSTTableTile"8I16^B20
-[TSTTableTileStorage setShouldUseWideRows:]
v20@?0@"TSTTableTile"8I16
Fatal Assertion failure: %{public}s %{public}s:%d Bad tile group index!
-[TSTTableTileStorage _groupForTileID:]
Bad tile group index!
-[TSTTableTileStorage _tileForID:createIfMissing:]
tile
v32@?0@"TSTTableTile"8Q16^B24
v24@?0@"TSTTableTileGroup"8^B16
-[TSTTableTileStorage _clearContentAtIndex:count:]
Corrupt tile map during clear!
-[TSTTableTileStorage _shiftRowsDownAtIndex:count:]
Tile insertion got confused!
-[TSTTableTileStorage _insertRowsAtIndex:count:]
Should only have whole-tile moves left in insert!
Corrupt tile map during insert!
Fatal Assertion failure: %{public}s %{public}s:%d Lost track of deletion start point!
-[TSTTableTileStorage _removeRowsAtIndex:count:]
Lost track of deletion start point!
Fatal Assertion failure: %{public}s %{public}s:%d Lost track of tiles during delete!
Lost track of tiles during delete!
Corrupt tile map during delete!
Fatal Assertion failure: %{public}s %{public}s:%d Tile should be empty during delete!
Tile should be empty during delete!
Fatal Assertion failure: %{public}s %{public}s:%d Shifting tiles too far during delete!
Shifting tiles too far during delete!
Fatal Assertion failure: %{public}s %{public}s:%d We removed too many rows during delete!
We removed too many rows during delete!
Shift too big during delete!
v32@?0^v8Q16^B24
TSTTilesCat
-[TSTTableTileStorage moveRowIndexRange:toIndex:]
Move row ranges cannot overlap!
v32@?0q8q16^B24
-[TSTTableTileStorage populatedRows]_block_invoke
Fatal Assertion failure: %{public}s %{public}s:%d Corrupt tile ID set!
-[TSTTableTileStorage lastPopulatedRowIndex]_block_invoke
Corrupt tile ID set!
RowInfo Cell Count Audit
Tile ID %lu, firstRow:%d
Tile Overlap Audit
-[TSTTableTileStorage auditTilesForRowOverlapAndExtensionPastTableBounds:withDataStore:result:]_block_invoke
Expected non-empty tile.
Tile with rows %d-%d overlaps with previous tiles in the table.
TileLastRow:%d tileMaxColumn:%d extends beyond tableModelLastRow:%d lastColumn:%d
v28@?0^{TSTCellStorage=}8S16^B20
-[TSTTableTileStorage prepareToApplyConcurrentCellMap:]_block_invoke
@"TSUPair"12@?0I8
TSKUIDStruct TSTUidApplyingAggregateIndex(const TSKUIDStruct &, NSUInteger)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTUIDTypes.mm
aggregateIndex * 2 had better fit in a UInt8
TSKUIDStruct TSTUidReversingAggregateIndex(const TSKUIDStruct &, NSUInteger)
-[TSTTableHeaderStorage initFromArchive:unarchiver:owner:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTableHeaderStorage.mm
Don't know how to handle this bucket hash function!
-[TSTTableHeaderStorage initFromArchive:unarchiver:owner:]_block_invoke
Bad header bucket count!
Fatal Assertion failure: %{public}s %{public}s:%d Bad bucket count during archiving!
-[TSTTableHeaderStorage encodeToArchive:archiver:]
Bad bucket count during archiving!
Fatal Assertion failure: %{public}s %{public}s:%d Asked to create buckets when we've already done so!
-[TSTTableHeaderStorage p_allocateBuckets]
Asked to create buckets when we've already done so!
-[TSTTableHeaderStorage _headerAtIndex:]
Caller asked for a header for an invalid row/column index!
-[TSTTableHeaderStorage shiftIndexesForwardAtIndex:count:]
Headers spilled out of our last bucket during shift!
-[TSTTableHeaderStorage shiftIndexesBackAtIndex:count:]
Headers spilled below zero!
Fatal Assertion failure: %{public}s %{public}s:%d Move ranges cannot overlap!
-[TSTTableHeaderStorage moveIndexRange:toIndex:]
Move ranges cannot overlap!
v28@?0@"TSTTableHeaderInfo"8I16^B20
TSTTableHeaderStorageBucket *p_mapAtIndex(TSTTableHeaderStorage *__strong, TSUColumnOrRowIndex, BOOL)
Unexpected header bucket index: %u!
Fatal Assertion failure: %{public}s %{public}s:%d Bad header bucket index for creation: %u
Bad header bucket index for creation: %u
Fatal Assertion failure: %{public}s %{public}s:%d Can't be missing the first bucket!
Can't be missing the first bucket!
<%@:%p index %lu baseCol %u rules %@
-[TSTTableHeaderStorageBucket initWithContext:bounds:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTableHeaderStorageBucket.mm
Can't initialize a bucket with a bad range!
Fatal Assertion failure: %{public}s %{public}s:%d Index out of range for bucket!
-[TSTTableHeaderStorageBucket headerAtIndex:]
Index out of range for bucket!
-[TSTTableHeaderStorageBucket mutableHeaderAtIndex:allowCreation:]
-[TSTTableHeaderStorageBucket setHeader:atIndex:]
v32@?0@"TSTTableHeaderInfo"8Q16^B24
-[TSTTableHeaderStorageBucket shiftIndexesBackAtIndex:count:]
Can't shift indexes below zero!
Tables/HeaderStorageBucket
-[TSTTableHeaderStorageBucket loadFromUnarchiver:]
<%@: %p>
[%lu]: %@
table.audited
tileOverlapPreupgrade
tileOverlapPostupgrade
v24@?0@"TSTLayoutSpace"8^B16
TSURowIndex TSTLayoutGetPartitionTopRow(TSTLayout *__strong)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTLayout.mm
row should be less than kTSURowIndexMax
TSUColumnIndex TSTLayoutGetPartitionLowestColumnIndex(TSTLayout *__strong)
column should be less than kTSUColumnIndexMax
CGRect TSTLayoutGetCanvasFrame(TSTLayout *__strong)
Passing in a nil layout to TSTLayoutGetCanvasFrame.
{CGRect={CGPoint=dd}{CGSize=dd}}32@?0@"TSTLayoutSpace"8{?={?=II}{?=II}}16
v24@?0{?={?=II}{?=II}}8
@"TSUBezierPath"16@?0@"NSArray"8
v40@?0Q8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16^B32
-[TSTLayout p_spillRangeForMaskingRichTextLayout:]
alignment should have already been resolved
-[TSTLayout p_prepareAttachmentCellsIfNeeded]_block_invoke_2
cell
iterator should return a valid cellID
storage should be nil since iterator is searching with TSTCellIteratorSearchForRichText
v24@?0@"TSWPStorage"8^B16
v32@?0@"TSTWPLayout"8Q16^B24
-[TSTLayout positionForColumnIndex:bodyWidth:target:outWidth:outGap:]
created an undersized column
-[TSTLayout naturalAlignmentForCellID:]
Contained text editing layout but invalid editing cell ID?
-[TSTLayout p_cellIDForWPLayout:]
TSTLayout should only parent layouts for editing text or cells with inline attachments!
-[TSTLayout maxAutoGrowLineWidthForTextLayout:]
should only be asking max width for unwrapped rich layouts
-[TSTLayout p_computeSpillingTextFrameForEditingLayout:textSize:editingSpillRange:]
B24@?0@"TSTLayout"8^B16
-[TSTAccumulator valueForType:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTAccumulator.mm
%@ does not handle TSCEAggType_StDev/_VAR/_CountDistinct request - a higher level should have handled that
%@ does not handle TSCEAggType_GroupValue/_BodyRows/_Indirect request - a higher level should have handled that
v32@?0@"TSTColumnAggregate"8Q16^B24
-[TSTRefNamer nameForBaseTractRef:namingContext:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTRefNamer.mm
baseString
 | %@
v24@?0r^{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}8^B16
-[TSTRefNamer nameForViewTractRef:namingContext:coordMapper:]_block_invoke
viewString
%@::
Categories
Body
CellDiffArray
-[TSTStrokeSidecar initForUpgradeWithTableModel:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTStrokeSidecar.mm
No usable root style in the document stylesheet or the deprecated theme stylesheet. Dropping the cell style on the floor.
v16@?0{TSUModelCellCoord={TSUCellCoord=ISBB}}8
v56@?0{TSTSimpleRange=qQ}8@"TSDStroke"24i32@"TSDStroke"36i44^B48
-[TSTStrokeSidecar flattenStrokeOrder]
left and right column stroke count should be identical
top and bottom row stroke count should be identical
v44@?0@"TSDStroke"8{TSTSimpleRange=qQ}16i32^B36
v24@?0@"NSArray"8@"NSPointerArray"16
-[TSTStrokeSidecar saveToArchiver:]
top and bottom stroke run arrays have different counts
left and right stroke run arrays have different counts
-[TSCellRangeCache clear]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCellRangeCache.mm
Clear with a BitGridTransaction open
v32@?0r^{TSUCellRect={TSUCellCoord=ISBB}{?=II}}8r^{TSCEInternalCellReference={TSUCellCoord=ISBB}SS}16^B24
v32@?0{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}8^B24
v40@?0Q8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16^B32
-[TSCellRangeCache mergedGridIndicesForDimension:]
Invalid table dimension
-[TSTLayoutSpace invalidateCoordinatesForEditingCellID:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTLayoutSpace.mm
Invalidating for an editing cell range that is not a single logical cell.
-[TSTLayoutSpace nearestRangeForLayoutRect:]
Failed to get nearest cell range from space %@ for layout rect %{public}@
-[TSTLayoutSpace frameForTableNameBorder]
this API is intended to run on the main space
-[TSTLayoutSpace strokeFrameForTableNameBorder]
-[TSTLayoutSpace alignedStrokeFrameForTableNameBorder]
WARNING: vertical stroke ( %f %@ => %@ ) length <= 0.0
WARNING: horizontal stroke ( %f %@ => %@ ) length <= 0.0
v48@?0@"TSDStroke"8{TSTSimpleRange=qQ}16i32i36^B40
-[TSTLayoutSpace validateCoordinateCache:]
There are no column coordinates
-[TSTCoordinateArray setTableWidthForRightToLeft:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCoordinateArray.mm
Setting a table width on a LTR coordinate array has no effect.
CGFloat TSTCoordinateArrayGetCoordinate(TSTCoordinateArray *__strong, TSTGridIndex)
coordinateArray
CGFloat TSTCoordinateArrayGetRawCoordinate(TSTCoordinateArray *__strong, TSTGridIndex)
<%@ %p offset=%u average=%f
 coordinates={empty}>
 coordinates={
  { offset=%u -> coordinate=%f }
v16@?0@8
<%@ %p>: expressionNode:%@, parenNestingLevel:%lu argumentIndex:%lu
invalid symbol
-[TSTVariableNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTVariableNode.mm
Unexpected object in initAsCopyOf:... expected TSTVariableNode, got %@
invalid symbol in copy
invalid symbol in setter
-[TSTVariableNode insertFormulaText:includeWhitespace:]
NumberNode shouldn't have any children
-[TSTVariableNode buildASTNodeArray:hostCell:symbolTable:]
VariableNode shouldn't have any children
void TSTCellRegionGathererMap::joinAndAddRange(TSTCellRange, NSUInteger)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCellRegionGatherer.mm
_cellRanges does not match encodedCoordToCandidateIndexMap
v24@?0{TSTCellRegionGathererKey=QI}8
TSUCellRect TSUMakeCellRectFromNSRanges(NSRange, NSRange)
Invalid column range
Invalid row range
%@ group-by: %@ for column: %@
-[TSTTableStylePreset setStyleNetwork:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTableStylePreset.mm
styleNetwork
-[TSTTableStylePreset presetID]
No valid preset ID
-[TSTTableStylePreset initWithStyleNetwork:]
-[TSTTableStylePreset initWithContext:]
Should always be intialized with a network and an ID
-[TSTTableStylePreset drawSwatchInRect:inContext:]
_styleNetwork
-[TSTTableStylePreset loadFromUnarchiver:]_block_invoke
_tempUpgradePresetID
_styleNetwork.presetID
v16@?0@"TSTTableStyleNetwork"8
-[TSTTableStylePreset saveToArchive:archiver:]
TSTCellFormatKindNumber
TSTCellFormatKindCurrency
TSTCellFormatKindDateTime
TSTCellFormatKindDuration
TSTCellFormatKindText
TSTCellFormatKindBoolean
TSTCellFormatKindNotSet
tableName
textStyle
shapeStyle
@"TSSStyle"40@?0@"TSSStyle"8@"NSString"16Q24Q32
+[TSTTableStyleNetwork createStylesInStylesheet:presetID:colors:alternate:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTableStyleNetwork.mm
Style network is missing styles. %{public}@
+[TSTTableStyleNetwork networkFromStylesheet:presetID:]
no default table style in stylesheet %p
nameStyle
tableNameShapeStyle
+[TSTTableStyleNetwork networkFromTheme:presetID:]
theme
+[TSTTableStyleNetwork networkFromTheme:presetIndex:]
v24@?0Q8Q16
+[TSTTableStyleNetwork networkWithContext:presetID:styleProvider:tableStyleMorphingBlock:nameStyleMorphingBlock:nameShapeStyleMorphingBlock:cellStyleMorphingBlockByStyleArea:textStyleMorphingBlockByStyleArea:]
All styles are not present and accounted for.
-[TSTTableStyleNetwork initWithContext:styleProvider:presetID:]
Cannot set styles from a different context
-[TSTTableStyleNetwork isEqual:]
Cell style array length mismatch
Cell style array element nillity mismatch at position %zu
Text style array length mismatch
Text style array element nillity mismatch at position %zu
-[TSTTableStyleNetwork setTextStyle:forTableStyleArea:]
Pivot areas use the equivalent default area textStyle. Don't try to set it.
-[TSTTableStyleNetwork loadFromArchive:unarchiver:]_block_invoke
_tableStyle must be nil when loading from an archive
-[TSTTableStyleNetwork loadFromArchive:unarchiver:]_block_invoke_14
_tableNameStyle must be nil when loading from an archive
-[TSTTableStyleNetwork loadFromArchive:unarchiver:]_block_invoke_15
_tableNameShapeStyle must be nil when loading from an archive
sheet-0-sheetStyle
%@, %@
cellID:%u, %u, count:%lu
-[TSTTableArchivedControlCellSelection setSelection:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTableArchivedControlCellSelection.mm
Wrong type of class %@ (expected TSTTableControlCellSelection)
-[TSTTableStrokePresetList setStrokePreset:atIndex:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTableStrokePresetList.mm
preset index higher than count
-[TSTTableStrokePresetList initWithArchive:unarchiver:]
invalid preset count
-[TSTTableStrokePresetList horizontalStrokeForStrokePreset:]
illegal preset index
-[TSTTableStrokePresetList verticalStrokeForStrokePreset:]
-[TSTTableStrokePresetList exteriorStrokeForStrokePreset:]
-[TSTTableStrokePresetList maskForStrokePreset:]
v16@?0@"TSSStylesheet"8
-[TSSTheme(TSTArchiving) tstLoadFromArchive:unarchiver:]_block_invoke_2
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSSTheme_TSTArchiving.mm
Preset style network is missing styles when unarchiving. %{public}@
-[TSTExpressionNode exportString]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTExpressionNode.mm
Children of TSTExpressionNode that is tokenized should implement exportString().
v32@?0@"TSTExpressionNode"8Q16^B24
-[TSTExpressionNode recordHashesForSubexpressions:]
subclasses must override recordHashesForSubexpressions so CSE works properly
<%@ %p>: '%@'
-[TSTFormula reparseWithStorage:adjustExpressionTree:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTFormula.mm
Formula storage exceeds maximum length.
'%C%C
'%C%C%C%C
%C%C%C%C%C%C%C%C%C%C%C
+[TSTFormula formulaQuoteContextAtCharIndex:inStorage:]
charIndex %lu not within storage range %@
+-*/^&=><:
%C%C%C%C%C%C%C%C
%C%C%C%C%C%C%C%C%C%C
%C%C%C%C%C
-[TSTFormula p_fixFormula:]
expected a function node with a function start token
unexpected quote context value %ld
expected non-empty storage
expected a function node on the stack
v24@?0@"TSTExpressionNode"8^B16
+[TSTCellChooserControlSpec cellSpecFromTSKFormat:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCellChooserControlSpec.mm
mcFormat
-[TSTCellChooserControlSpec initWithArchive:unarchiver:]
Wrong interaction type for a popup.
v16@?0@"TSTPopUpMenuModel"8
-[TSTOperatorNode initWithContext:operatorChar:children:firstIndex:lastIndex:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTOperatorNode.mm
Operators should only have 2 children.  There are %lu arguments to operator '%hu'
-[TSTOperatorNode initAsCopyOf:intoContext:children:]
Unexpected object in initAsCopyOf:... expected TSTOperatorNode, got %@
-[TSTOperatorNode insertFormulaText:includeWhitespace:]
OperatorNode doesn't have two arguments
-[TSTOperatorNode buildASTNodeArray:hostCell:symbolTable:]
Operator node doesn't have two arguments
Undefined operator node
v28@?0I8@"TSUCustomFormat"12^B20
-[TSTNumberNode initWithContext:string:locale:firstIndex:lastIndex:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTNumberNode.mm
numberString
-[TSTNumberNode initAsCopyOf:intoContext:children:]
Unexpected object in initAsCopyOf:... expected TSTNumberNode, got %@
-[TSTNumberNode insertFormulaText:includeWhitespace:]
-[TSTNumberNode buildASTNodeArray:hostCell:symbolTable:]
NSString *TSTStringForDouble(double, TSULocale *__strong)
A locale is required here
Warning: Creating brave new cell with value type %@ but mismatched format type %@, repairing
-[TSTCell_PreBNC upgradedBraveNewCell]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCell_PreBNC.mm
-[TSTCell_PreBNC initWithLocale:]
The formula should not begin with an equals sign.
The formula contains a syntax error.
-[TSTCell_PreBNC stringForEditing]
durationFormat
-[TSTCell_PreBNC setCellStyle:clearingID:]
expected cell style got %{public}@
-[TSTCell_PreBNC setTextStyle:clearingID:]
-[TSTCell_PreBNC setConditionalStyle:clearingID:]
expected conditional style got %{public}@
B20@?0@"TSKFormat"8S16
-[TSTCell_PreBNC copyAllFormatsToCell:]
dest
<%@:%p: value type %@ value %@>
No content
Number
Currency
DEPRECATED
Date
Bool
Duration
FormulaError
RichText
Cell Spec: 
Value: 
<empty>
<number: %f>
<rich text: '%@'>
<string: '%@'>
<date: '%@'>
<bool: '%@'>
FALSE
TRUE
<duration: %f>
<error>
<unknown cell type>
-[TSTCellMap loadFromUnarchiver:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCellMap.mm
serious error: flag out of sync with content.
-[TSTCellMap loadFromUnarchiver:]_block_invoke
creating a one-to-many cell map but starting with more than one cell
-[TSTCellMap saveToArchiver:]
We should never archive shallow copies. That's not what they are for
v32@?0@"TSTCellList"8Q16^B24
-[TSTCellMap cellIDAtIndex:]
cannot examine cellIDs in UID mode
-[TSTCellMap enumerateCellsWithIDsUsingBlock:]
can't enumerate IDs since have UIDs
-[TSTCellMap enumerateCellsWithUIDsUsingBlock:]
can't enumerate by UIDs since have IDs
-[TSTCellMap findCellForCellID:]
cannot use find with a UID based cell map
v40@?0r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}8@"TSTCell"16Q24^B32
-[TSTCellMap addCell:andCellUID:]
cannot add UIDs in ID mode
cannot add cells in one-to-many mode
-[TSTCellMap addPrecopiedCells:andCellUIDs:]
Cell and CellUID sizes don't match up
-[TSTCellMap addCell:andCellID:]
Cannot add cellIDs while in UID mode.
-[TSTCellMap replaceCellAtIndex0:]
-[TSTCellMap appendCellMap:precopied:]
Trying to append a cellID cellMap to a uidBased map. Aborting.
Trying to append a uidBased cellMap to a cellID map. Aborting.
-[TSTCellMap p_addPrecopiedCells:]
Shallow copy not supported in this path
-[TSTCellMap p_copyCellsAndUUIDsFromCellMap:convertingToCellIDsWithTableInfo:]
This should only be called with a UID based cell map.
-[TSTCellList cellAtIndex:]
Out of range in  %@
-[TSTCellList replaceCell:atIndex:]
Asking to replace where we currently have no cell at all - invalid replaceCell: call
Should now fit in real range
-[TSTCellList loadFromUnarchiver:]_block_invoke
virtual TSCEASTElement *TSTTSCEASTNodeExpressionNodeFunction::functionNode(TSCEASTFunctionElement *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTSCEASTNodeExpressionNodeFunction.mm
improper number of arguments for function node.
virtual TSCEASTElement *TSTTSCEASTNodeExpressionNodeFunction::unknownFunctionNode(TSCEASTUnknownFunctionElement *)
virtual TSCEASTElement *TSTTSCEASTNodeExpressionNodeFunction::colonNode(TSCEASTColonElement *)
improper number of arguments for colon node.
virtual TSCEASTElement *TSTTSCEASTNodeExpressionNodeFunction::arrayNode(TSCEASTArrayElement *)
improper number of arguments for array.
virtual TSCEASTElement *TSTTSCEASTNodeExpressionNodeFunction::listNode(TSCEASTListElement *)
improper number of arguments for list node.
virtual TSCEASTElement *TSTTSCEASTNodeExpressionNodeFunction::viewTractRefNode(TSCEASTViewTractRefElement *)
viewTractRef is expected to have an active tract
TSTExpressionNode *TSTTSCEASTNodeExpressionNodeFunction::expressionNode()
Unable to properly create a TSTExpressionNode. Possibly a bad ASTNodeArray?
void TSTTSCEASTNodeExpressionNodeFunction::processOperatorNode(unichar)
improper number of arguments for operator node.
void TSTTSCEASTNodeExpressionNodeFunction::processPostfixOperatorNode(unichar)
improper number of arguments for postfix operator node.
void TSTTSCEASTNodeExpressionNodeFunction::processPrefixOperatorNode(unichar)
improper number of arguments for prefix operator node.
unichar operatorCharForTag(TSCEASTNodeTag)
Unknown operator tag: %d
static void TSCERelativeCellCoordinate::assertColumnInMaxRange(TSURelativeColumnIndex)
/Library/Caches/com.apple.xbs/Binaries/iWorkImport_Sim/install/Symbols/BuiltProducts/TSCalculationEngine.framework/Headers/TSCETypes.h
TSCERelativeCellCoordinate: column outside valid range: %d
static void TSCERelativeCellCoordinate::assertRowInMaxRange(TSURelativeRowIndex)
TSCERelativeCellCoordinate row outside valid range: %d
TSUColumnIndex TSCEMakeAbsoluteColumnFromRelativeColumn(TSUCellCoord, TSURelativeColumnIndex, BOOL)
overflow in column
TSURowIndex TSCEMakeAbsoluteRowFromRelativeRow(TSUCellCoord, TSURelativeRowIndex, BOOL)
overflow in row, input row: %d with host row: %lu
Calling TSCEMakeAbsoluteRowFromRelativeRow with an invalid hostCell row: %@
-[TSTColumnRowUIDMap initWithContext:tableUUID:numberOfRows:numberOfColumns:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTColumnRowUIDMap.mm
tableUUID
-[TSTColumnRowUIDMap insertColumnsWithUIDs:atIndex:]
cannot insert columns at invalid columnIndex
-[TSTColumnRowUIDMap insertRowsWithUIDs:atIndex:]
cannot insert rows at invalid rowIndex
v28@?0I8r^{TSKUIDStruct=QQ}12^B20
v32@?0r^{TSTLookupKeyCoord=I}8Q16^B24
v28@?0S8r^{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}12^B20
-[TSTImmutableColumnRowUIDMap initWithColumnRowUIDMap:]
@e need to ensure versionCounter was preserved
-[TSTCategoryOwner setTableModel:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCategoryOwner.mm
tableModel
%@<%p> (on table %@)
-[TSTCategoryOwner registerWithCalcEngine:baseOwnerUID:]
Already registered with calcEngine
GroupBy shouldn't be registered yet.
-[TSTCategoryOwner registerGroupByForColumns:ownerIndex:hiddenStates:groupBySet:]
Bad ownerIndex (%d) for groupBy
If ownerIndex matches up, then so should groupByUid
-[TSTCategoryOwner updateWithDocumentRoot:]
%@ @ %@
-[TSTAggNode encodeToArchive:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTAggNode.mm
Not expecting an invalid coord here
-[TSTFunctionNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTFunctionNode.mm
Unexpected object in initAsCopyOf:... expected TSTFunctionNode, got %@
-[TSTFunctionNode buildASTNodeArray:hostCell:symbolTable:]
-[TSTLetNode initWithContext:children:firstIndex:lastIndex:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTLetNode.mm
Let nodes should have exactly 0 or 3 children.  There are %lu arguments to let
A let node's first child must be an identifier.
-[TSTLetNode initAsCopyOf:intoContext:children:]
variable %u
-[TSTLetNode setChildren:]
let nodes must have zero or three children
-[TSTLetNode boundSymbol]
identifier is not of proper type: %@
-[TSTLetNode copyByResolvingIdentifiers:hostTable:baseHostCell:forceReferenceInterpretation:symbolTable:oldToNewNodeMap:]
Let nodes must have exactly zero or three children
-[TSTLetNode addAllIdentifiersToSymbolTable:]
Let nodes must have exactly three children
-[TSTLetNode insertFormulaText:includeWhitespace:]
Let node doesn't have three arguments
-[TSTLetNode buildASTNodeArray:hostCell:symbolTable:]
-[TSTSummaryModel resetForPivotingWithRowUids:columnUids:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTSummaryModel.mm
Resetting a categories summary model for pivoting
-[TSTSummaryModel resetForCategoriesWithForce:]
Resetting a pivoting summary model for categories
-[TSTSummaryModel resetForCategoriesWithForce:]_block_invoke_2
we should have a valid coordinate
v24@?0r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}8@"TSTCell"16
v16@?0@"TSTSummaryCellVendor"8
-[TSTSummaryModel p_setPivotCell:atCellUID:formulaReplacer:]
Attempting to set cell at illegal summary model cell UID:%{public}@
-[TSTSummaryModel allRichTextStorages]
TODO
-[TSTSummaryModel heightOfRowAtIndex:isDefault:]
Individual row heights can only be used for pivot tables.
-[TSTSummaryModel widthOfColumnAtIndex:isDefault:]
Individual column widths can only be used for pivot tables.
-[TSTSummaryModel setHeight:ofRowAtIndex:]
-[TSTSummaryModel setWidth:ofColumnAtIndex:]
-[TSTSummaryModel setLabelRowVisibility:atCategoryLevel:]
-[TSTSummaryModel willRemoveGroup:]
GroupBy tried to remove a summaryRow that doesn't exist in the summaryModel.
+[TSTSummaryModel categoryLevelForTableStyleArea:]
Calling categoryLevelForTableStyleArea with an invalid style area
v16@?0@"TSTCellMap"8
+[TSTCellToggleControlSpec cellSpecFromTSKFormat:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCellToggleControlSpec.mm
Expected checkbox format.
-[TSTCellToggleControlSpec initWithArchive:unarchiver:]
Wrong interaction type for a checkbox.
-[TSTStrokeOrderedLayer initWithContext:majorStrokeLayer:minorStrokeLayer:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTStrokeOrderedLayer.m
majorStrokeLayer
minorStrokeLayer
-[TSTStrokeOrderedLayer appendStroke:inRange:order:]
-[TSTStrokeOrderedLayer insertStroke:inRange:order:]
-[TSTStrokeOrderedLayer invalidate]
-[TSTStrokeOrderedLayer invalidateRange:]
-[TSWPStorage(TSTAdditions) tst_selectionForImplicitlyEditingWithFormatType:percentSymbol:currencySymbol:adjustSelectionForCurrencyOrPercentSymbols:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSWPStorage+TSTAdditions.mm
currencySymbol
-[TSWPStorage(TSTAdditions) tst_tableInfo]
parentInfo of a kTable TSWPStorage must be a TSTTableInfo
-[TSWPStorage(TSTAdditions) rangeForCellID:includingBreak:]
cell attribute not found
TSTWPTokenAttachment *TSTLexer::nextTokenAttachment()
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTLexerAdditions.mm
No more tokenAttachments.
tokenAttachment
virtual TSCEASTElement *TSTTrackingRangeExtractor::anyReferenceNode(TSCEASTRelativeCoordRefElement *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTrackingRangeExtractor.mm
Too many coordinates in tracking range!
tracking region should not yet be initialized
v24@?0r^{TSUCellRect={TSUCellCoord=ISBB}{?=II}}8^B16
+[TSTFormulaPredArgData getPredArgDataFromCell:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTFormulaPredArg.mm
predArgData
-[TSTFormulaPredArgData string]
Wrong data type for call: %d
-[TSTFormulaPredArgData date]
-[TSTFormulaPredArgData number]
-[TSTFormulaPredArgData doubleValue]
-[TSTFormulaPredArgData boolValue]
-[TSTFormulaPredArgData durationValue]
-[TSTFormulaPredArgData durationUnits]
-[TSTFormulaPredArgData duration]
-[TSTFormulaPredArg boolValue]
Wrong type accessor called on %@
-[TSTFormulaPredArg setBoolValue:]
-[TSTFormulaPredArg number]
-[TSTFormulaPredArg setNumber:]
-[TSTFormulaPredArg preserveFlags]
-[TSTFormulaPredArg setPreserveFlags:]
Must set the entire relative reference, if you are relative
-[TSTFormulaPredArg date]
-[TSTFormulaPredArg setDate:]
-[TSTFormulaPredArg string]
-[TSTFormulaPredArg setString:]
-[TSTFormulaPredArg dataList]
-[TSTFormulaPredArg relativeCellRef]
Asking for a relative cell-ref, but we don't have one
-[TSTFormulaPredArg setRelativeCellRef:]
-[TSTFormulaPredArg crossTableRef]
Need a host-cell if we aren't storing a relativeRef
-[TSTFormulaPredArg categoryRef]
-[TSTFormulaPredArg viewTractRef]
-[TSTFormulaPredArg baseCellRef]
-[TSTFormulaPredArg cellRefForHostCoord:]
-[TSTFormulaPredArg setBaseCellRef:]
-[TSTFormulaPredArg durationValue]
-[TSTFormulaPredArg setDurationValue:]
-[TSTFormulaPredArg durationUnits]
-[TSTFormulaPredArg duration]
-[TSTFormulaPredArg setDurationUnits:]
-[TSTFormulaPredArg rewriteWithContext:forArgAt:usingLinkedRef:useColumnRef:hostCellRef:rewriteBlock:]
Not expecting no result
-[TSTFormulaPredArg formulaCreatorForPredArg]
Need a host-cell for this
-[TSTFormulaPredArg formulaCreatorForPredArg0UsingLinkedRef:useColumnRef:]
Only references types are supported for predArg0, saw %d
-[TSTHiddenStatesOwner hiddenStates]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTHiddenStatesOwner.mm
We should only have one hiddenStates per table, at the moment
%@<%p>(on table %@)
 Hidden States:
  - %@
-[TSTHiddenStatesOwner registerHiddenStates:baseOwnerUID:]
HiddenStates couldn't register with calc-engine
-[TSTBooleanNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTBooleanNode.mm
Unexpected object in initAsCopyOf:... expected TSTBooleanNode, got %@
true
false
-[TSTBooleanNode insertFormulaText:includeWhitespace:]
BooleanNode shouldn't have any children
-[TSTBooleanNode buildASTNodeArray:hostCell:symbolTable:]
-[TSTArrayNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTArrayNode.mm
Unexpected object in initAsCopyOf:... expected TSTArrayNode, got %@
-[TSTArrayNode string]
We shouldn't call the arrayNode's string method, because it won't actually return a proper tokenized string
-[TSTArrayNode insertFormulaText:includeWhitespace:]
invalid TSTArrayNode children
expected n-1 delimiter whitespace elements
-[TSTArrayNode buildASTNodeArray:hostCell:symbolTable:]
We don't support more than UINT16_MAX rows in an array
We don't support more than UIN8_MAX columns in an array
-[TSTListNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTListNode.mm
Unexpected object in initAsCopyOf:... expected TSTListNode, got %@
<%@ %p>
-[TSTListNode string]
We shouldn't call the listNode's string method, because it won't actually return a proper tokenized string
-[TSTListNode buildASTNodeArray:hostCell:symbolTable:]
-[TSTGroupNodeFormatManager reset]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTGroupNodeFormatManager.mm
_cellValue
-[TSTGroupNodeFormatManager p_recalculateMergedFormatWithGroupBy:]
Expected duration format.
-[TSTGroupNodeFormatManager mergedFormatChangedByAddingRowUID:andCellValue:groupBy:]
format
groupBy
-[TSTGroupNodeFormatManager mergedFormatChangedByRemovingRowUID:groupBy:]
CellValue:%@
Cache:%@
-[TSTGroupNodeFormatManager updateWithDocumentRoot:]
-[TSTGroupNodeFormatManager initWithArchive:forGroupBy:]
Expected equal size arrays for the format dictionary.
-[TSTGroupNodeFormatManager encodeToArchive:forGroupBy:backwardCompat:]_block_invoke
-[TSTStringNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTStringNode.mm
Unexpected object in initAsCopyOf:... expected TSTStringNode, got %@
\U201C\U2006\U201D
\U201C%@\U201D
-[TSTStringNode insertFormulaText:includeWhitespace:]
StringNode shouldn't have any children
"%@"
-[TSTStringNode buildASTNodeArray:hostCell:symbolTable:]
v24@?0r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}8^B16
-[TSTDateNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTDateNode.mm
Unexpected object in initAsCopyOf:... expected TSTDateNode, got %@
-[TSTDateNode insertFormulaText:includeWhitespace:]
DateNode shouldn't have any children
-[TSTDateNode buildASTNodeArray:hostCell:symbolTable:]
DATE(%ld%@%ld%@%ld)
(DATE(%ld%@%ld%@%ld)+TIMEVALUE(TIME(%ld%@%ld%@%ld)))
<%@ %p>: '%@'%@
 (BLANK)
-[TSTReferenceNode initWithContext:calculationEngine:uidRectRef:categoryRef:hostCellRef:referenceColorHelper:suppressAutomaticNamedReferenceInvalidation:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTReferenceNode.mm
Expected uidRectRef to have same calculation engine as the one that was passed in.
-[TSTReferenceNode initWithReferenceStart:referenceEnd:suppressAutomaticNamedReferenceInvalidation:]
Creating a range reference with two references with different ownerUIDs
Creating a range reference with two references with different calculationEngines
-[TSTReferenceNode initAsCopyOf:intoContext:children:]
Unexpected object in initAsCopyOf:... expected TSTReferenceNode, got %@
unable to resurrect calcEngine in document context.
+[TSTReferenceNode p_spanningCategoryRefForViewRangeRef:groupByUid:categoryLevel:calculationEngine:]
trying to create a spanning category summary ref to more than one column
-[TSTReferenceNode p_categoryRefViewTractRef]
invalidCellTractRef
expected to create an invalid cell tract ref
-[TSTReferenceNode categoryRefTableUID]
asking a non-category ref node for its category ref table UID
-[TSTReferenceNode setHostTableUID:]
invalid tableUID
-[TSTReferenceNode referenceAsStringWithContext:]
nil calculationEngine.  Can't generate string for categoryRefNode.
nil calculationEngine.  Can't generate string for referenceNode.
-[TSTReferenceNode referenceAsStringWithContext:]_block_invoke
#REF!
-[TSTReferenceNode insertFormulaText:includeWhitespace:]
ReferenceNode shouldn't have any children
-[TSTReferenceNode buildASTNodeArray:hostCell:symbolTable:]
-[TSTReferenceNode exportString]
%@ :: 
-[TSTReferenceNode loadFromArchive:unarchiver:]
Invalid TSTReferenceNode archive
-[TSTPencilAnnotation initWithContext:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTPencilAnnotation.mm
v16@?0@"TSDPencilAnnotationStorage"8
-[TSTPencilAnnotation loadFromArchive:unarchiver:]
A TSTPencilAnnotation must have a pencilAnnotationStorage
-[TSTDurationNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTDurationNode.mm
Unexpected object in initAsCopyOf:... expected TSTDurationNode, got %@
-[TSTDurationNode insertFormulaText:includeWhitespace:]
DurationNode shouldn't have any children
-[TSTDurationNode buildASTNodeArray:hostCell:symbolTable:]
DURATION(%g%@%g%@%g%@%g%@%g%@%g)
-[TSTDurationNode date]
We shouldn't ask a Duration for its date.
-[TSTDurationNode format]
We shouldn't ask a Duration for its format.
-[TSTArgumentPlaceholderNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTArgumentPlaceholderNode.mm
Unexpected object in initAsCopyOf:... expected TSTArgumentPlaceholderNode, got %@
-[TSTArgumentPlaceholderNode copyIntoContext:bakeModes:children:]
Unexpected mode value type
value
-[TSTArgumentPlaceholderNode detokenizedText]
expected set placeholder node to return a different node for bakedValue
-[TSTArgumentPlaceholderNode buildASTNodeArray:hostCell:symbolTable:]
ArgumentPlaceholderNode shouldn't have children
-[TSTPostfixOperatorNode insertFormulaText:includeWhitespace:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTPostfixOperatorNode.mm
PostfixOperatorNode doesn't have one argument
-[TSTPostfixOperatorNode buildASTNodeArray:hostCell:symbolTable:]
-[TSTStrokeDefaultVendor p_strokeTypeForColumn:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTStrokeDefaultVendor.mm
expected a pivot table for footer columns
-[TSTStrokeDefaultVendor p_updateStrokeLayer:forColumnStrokeType:]
unexpected column strokeType %zu
-[TSTStrokeDefaultVendor p_updateStrokeLayer:forRowStrokeType:]
unexpected row strokeType %zu
-[TSTUidCoordsPerRunningCellValue getUidCoordforRunningAggregate:tupleForCoord:newUidCoord:addNewUidCoordEvenIfNotFound:inContext:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTRunningTotalContext.mm
Got a too-large insertIndex: %lu
-[TSTRunningTotalContext getPreviousUidCoordForAggIndex:fromNewUidCoord:addNewUidCoordEvenIfNotFound:]
We need to locate (or create) a tuple
-[TSTPrefixOperatorNode insertFormulaText:includeWhitespace:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTPrefixOperatorNode.mm
PrefixOperatorNode doesn't have one argument
-[TSTPrefixOperatorNode buildASTNodeArray:hostCell:symbolTable:]
-[TSTFunctionEndNode insertFormulaText:includeWhitespace:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTFunctionEndNode.mm
We shouldn't ever buildFormulaText: with a functionEndNode
-[TSTFunctionEndNode buildASTNodeArray:hostCell:symbolTable:]
We shouldn't ever buildASTNodeArray: with a functionEndNode
-[TSTCellFormatAndValue stringValue]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCellFormatAndValue.mm
Getting a non-string value as string from a TSTCellFormatAndValue.
-[TSTCellFormatAndValue richTextOrErrorTextStorageValue]
Getting a non-rich-text/non-formula-error value as rich text from a TSTCellFormatAndValue.
+[TSTCellFormatAndValue formatAndValueFromRichTextCell:updatingStorageWithBlock:]
expected rich text cell when creating format and value
-[TSTCellFormatAndValue initFromCell:useAllSpareFormats:forceNoContent:suppressApplyValue:applySpareFormatOnly:]
useAllSpareFormats and spareFormatOnly are mutually exclusive!
deprecated cell value type found
-[TSTCellFormatAndValue copyWithZone:]
-[TSTCellFormatAndValue numberOrCurrencyDecimalValue]
Getting a non-double value as double from a TSTCellFormatAndValue.
-[TSTCellFormatAndValue hasStringContentMatchingCell:]
no string content comparison implemented for value type %d
-[TSTCellFormatAndValue applyToCell:]
-[TSTCellFormatAndValue objectByRemovingPropertiesInMap:addingPropertiesInMap:updateInverseResetPropertyMap:updateInverseSetPropertyMap:]
shouldn't remove the value and format from a cell
-[TSTCellFormatAndValue initFromPropertyCommandMessage:unarchiver:]
rich text cells should have a rich text payload
-[TSTCellFormatAndValue saveToPropertyCommandMessage:archiver:]
Non-nil string resulted in NULL protobufString: '%@'
-[TSTPivotOwner registerWithCalcEngine:forTableModel:baseOwnerUID:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTPivotOwner.mm
_tableModel
-[TSTPivotOwner linkToCalcEngine:forTableModel:]
-[TSTPivotOwner setPivotSourceHeaderTract:]
pivot source header range expected to span all columns
Columns
Rows
Values
v24@?0@"TSTCell"8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
(blank)
v24@?0@"TSTCell"8@"TSCECellValue"16
-[TSTPivotOwner p_setPivotHeaderCellsResettingPivotHidden:preservingStyles:]
Row group not found
Column group not found
v32@?0r^{TSKUIDStruct=QQ}8@"TSTPivotGroupingColumnOptions"16^B24
-[TSTPivotOwner p_formulaForCellCoord:runningTotalContext:]
Invalid ShowAs Type
-[TSTPivotOwner p_sortRowsInMode:sortDirection:columnIndex:level:aggregateIndex:resetLabels:]_block_invoke
Expected a valid category level for all body rows
-[TSTPivotOwner p_sortColumnsInMode:sortDirection:rowIndex:level:aggregateIndex:resetLabels:]_block_invoke
Expected a valid category level for all body columns
-[TSTPivotOwner p_sortFullTable:]
Full table sort is only appropriate for implicit sort modes.
v16@?0@"TSTPivotGroupingColumnOptionsMap"8
-[TSTPivotOwner evaluateFormulaAt:withCalcEngine:recalcOptions:]
Unexpected formulaCoord seen in TSTPivotOwner: %@
-[TSTHiddenStates copyFromHiddenStates:forRange:withContext:isWholeTableCopy:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTHiddenStates.mm
Failed to hide row during copy.
Failed to hide column during copy.
-[TSTStrokeSidecarIterator initWithStrokeSidecar:region:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTStrokeSidecarIterator.mm
-[TSTStrokeSidecarIterator updateCellData:]
invalid cellID in cellData
cellID %@ should be before cursor cellID %@
-[TSTGroupBy didCreateGroup:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTGroupBy.mm
_deferredGroupByChangeNotifications
-[TSTGroupBy willRemoveGroup:]
-[TSTGroupBy didRemoveGroup:]
-[TSTGroupBy didAddRowUID:toGroup:]
-[TSTGroupBy didRemoveRowUID:fromGroup:]
-[TSTGroupBy startOfGroupingChangesBatch]
-[TSTGroupBy endOfGroupingChangesBatch]
-[TSTGroupBy didChangeGroupByStructure]
-[TSTGroupBy encodeToArchive:archiver:backwardCompat:]
Wasn't expecting this not set
-[TSTGroupBy updateWithDocumentRoot:]
-[TSTGroupBy changeForSettingGroupingColumnList:]
New grouping column list is nil
-[TSTGroupBy mapGroupUidsForChange:]
wrong groupByUid
-[TSTGroupBy _addAggregates:atLevel:]
-[TSTGroupBy _removeAggregates:]
-[TSTGroupBy runChange:withAggregates:]
Uh, we were expecting this to be us
-[TSTGroupBy usesPrePivotAggregateTypesOnly]
Should never see TSCEAggType_Indirect on a columnAggregate
-[TSTGroupBy setAggregateType:forColumnUID:atGroupLevel:]
aggType of (%{public}d) is not a valid aggregate type for an entire column
-[TSTGroupBy findGroupNodeForValue:atLevel:createIfMissing:]
Was expecting to have created a groupNode for this groupValue: %@
-[TSTGroupBy beginDeferringRebuildFormulas]
overflow in beginDeferringRebuildFormulas
-[TSTGroupBy endDeferringRebuildFormulas]
endDeferringRebuildFormulas called without matching beginDeferringRebuildFormulas - avoided underflow
-[TSTGroupBy deferGroupByChangeNotifications]
overflow in deferGroupByChangeNotifications
-[TSTGroupBy resumeGroupByChangeNotifications]
resumeGroupByChangeNotifications called without matching deferGroupByChangeNotifications - avoided underflow
-[TSTGroupBy resetGroupings]
Can't resetGroupings with no calcEngine
-[TSTGroupBy createAggregatorsIfMissingAndAssert:]
No TSTAggregator found for column %@
Couldn't create an aggreator for column: %@
-[TSTGroupBy isValidCategoryRef:]
<Relative Ancestor>
-[TSTGroupBy captureCategoryRefsFromIterator:atLevel:asSpanning:]_block_invoke
formula
-[TSTGroupBy captureCategoryLabelRefsForViewRegion:atLevel:asSpanning:forRows:]_block_invoke
No level for agg function labels!
-[TSTGroupBy prettyStringForCategoryRef:forHostCellRef:namingContext:]
%@::%@
-[TSTGroupBy rowUIDForLookupKey:]
Warning, rowUidLookupList is empty, we're not going to find anything.
blank
(error)
TSTLookupKeyCoord::TSTLookupKeyCoord(TSCEUidLookupKey, TSCEUidLookupKey)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCellUIDLookupList.mm
Can't support a column key larger than %lu
Can't support a row key larger than %lu
TSTCellUIDLookupList::TSTCellUIDLookupList(const TSTCellUIDLookupList &, TSTTableInfo *__strong, TSTPruneBehavior, BOOL (^__strong)(const TSTCellUID &, NSUInteger))
Oh in what case do we need to prune away base cells?
Allowing both summary cells and wildcards makes little sense
Allowing both label cells and wildcards makes little sense
-[TSTCellBorder applyToCell:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCellBorder.mm
currentCellBorder
-[TSTCellBorder objectByRemovingPropertiesInMap:addingPropertiesInMap:updateInverseResetPropertyMap:updateInverseSetPropertyMap:]
shouldn't remove the cell border from a cell
-[TSTStrokeLayerAbstractStack p_strokeLayerEnumeration]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTStrokeLayerStack.m
-[TSTStrokeLayerAbstractStack count]
-[TSTStrokeLayerAbstractStack enumerateStrokesAndCapsInRange:usingBlock:]_block_invoke
should never see portal strokes here
-[TSTStrokeLayerAbstractStack enumerateStrokesAndCapsInRange:usingBlock:]
-[TSTStrokeLayerStack insertClearedStrokeAtRange:]
You can't add non-default strokes to a DefaultsOnly TSTStrokeLayerStack.
-[TSTStrokeLayerStack insertDynamicStroke:strokeOrder:atRange:]
-[TSTStrokeLayerStack insertSpillStroke:atRange:]
You can't add non-default strokes to a Defaults Only TSTStrokeLayerStack.
Fatal Assertion failure: %{public}s %{public}s:%d You can't add non-default strokes to a DefaultsOnly TSTStrokeLayerStack.
-[TSTStrokeLayerStack replaceCustomStrokeLayerWith:]
-[TSTStrokeLayerMergedStack lockForWrite]
-[TSTStrokeExporter p_strokeExportCacheForColumnBefore:columnAfter:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTStrokeExporter.mm
looking for two visible columns around the gridline
-[TSTStrokeExporter p_strokeExportCacheForRowAbove:rowBelow:]
looking for two visible rows around the gridline
-[TSTHiddenStateExtent setupAfterUnarchive]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTHiddenStateExtent.mm
-[TSTHiddenStateExtent addHiddenIndex:viewIndex:forAction:]
Not allowing user-hidden as view only
-[TSTHiddenStateExtent hideAtUid:forAction:]
Can't show/hide at a uuid without a TSTTableTranslator to translate to an index
-[TSTHiddenStateExtent showAtUid:forAction:]
-[TSTHiddenStateExtent loadIndexesFromTable:]
-[TSTHiddenStateExtent hideAtViewIndex:forAction:]
Can't show/hide at an index without a TSTTableTranslator to translate to uuid
-[TSTHiddenStateExtent showAtViewIndex:forAction:]
-[TSTHiddenStateExtent hideAtBaseIndex:forAction:]
-[TSTHiddenStateExtent showAtBaseIndex:forAction:]
-[TSTHiddenStateExtent clearAllFiltered]
Can't clearAllFiltered without a TSTTableTranslator to translate to an index
-[TSTHiddenStateExtent hidingActionForViewIndex:]
-[TSTHiddenStateExtent hidingActionForBaseIndex:]
-[TSTHiddenStateExtent indexOfVisibleAfterIndex:]
Can't use this method without a TSTTableTranslator to provide tableSize
-[TSTHiddenStateExtent indexOfVisibleAfterAndIncludingIndex:]
-[TSTHiddenStateExtent p_registerAllFormulasReturningCoords:]
Expecting at most one filter rule on a pivotTable
Only support PivotSourceFiltered filter for pivotTable
-[TSTHiddenStateExtent p_calculateTopOrBottomThresholdWithCalcEngine:formulaCoord:isTop:keyScale:]
Unexpected key scale found: %d
-[TSTHiddenStateExtent p_createThresholdCellValue:locale:]
Unexpected threshold value type found: %d
-[TSTHiddenStateExtent p_calculateUniqueDistinctIndexWithCalcEngine:formulaCoord:tableModel:rule:]
uniqueKeyToRowIndexes
-[TSTHiddenStateExtent evaluateFormulaAt:withCalcEngine:recalcOptions:]
should have nil _rewrittenFilterSet
Unexpected predicate type found when calculating threshold: %d
Only grandTotal predicates are supported for view indexes, not predType %d
Only expect this on pivot tables, atm.
-[TSTHiddenStateExtent setFilterSet:]
filterset should be in geometric form
@"TSCEFormulaObject"16@?0@"TSCEFormulaObject"8
v24@?0@"TSTEphemeralFilter"8^B16
Fatal Assertion failure: %{public}s %{public}s:%d Corrupt cell memory. Crashing!
UInt16 TSTCellStorageSizePreBNC(TSTCellStoragePreBNC *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCellStorage_Deprecated.mm
Corrupt cell memory. Crashing!
BOOL TSTCellStorageVersionCheckPreBNC(TSTCellStoragePreBNC *)
Can't parse cell storage header version %d as PreBNC!
void TSTV1CellStorageToCell(TSTV1CellStorage *, TSTCell_PreBNC *__strong)
wrong version of the storage used here
Failed to process all storage elements in TSTV1CellStorageToCell! Starting flags:%u Final flags:%u
void TSTV3CellStorageToCell(TSTV3CellStorage *, TSTCell_PreBNC *__strong)
Failed to process all storage elements in TSTV3CellStorageToCell! Starting flags:%u Final flags:%u Starting format flags:%u Final format flags:%u
void TSTCellStorageToCell_PreBNC(TSTCellStoragePreBNC *, TSTCell_PreBNC *__strong)
Failed to process all storage elements in TSTCellStorageToCell! Starting flags:%u Final flags:%u Starting format flags:%u Final format flags:%u
UInt16 p_OffsetForFormatInStoragePreBNC(TSTCellStoragePreBNC *, TSTCellStorageFormatFlagsPreBNC)
Can't get offset for unknown element 0x%02x!
Fatal Assertion failure: %{public}s %{public}s:%d Can't get offset for unknown element 0x%02x!
UInt16 p_OffsetForElementInStorage(TSTCellStoragePreBNC *, TSTCellStorageHeaderFlagsPreBNC)
void p_TSTCellToCellStoragePreBNC(TSTCell *__strong, TSTCellStoragePreBNC *, TSTNineKeyStructPreBNC *)
Failed to process all storage elements in TSTCellToCellStorage! Starting flags:%u Final flags:%u Starting format flags:%u Final format flags:%u
TSTMergeOwnerDetailedLogCat
-[TSTMergeOwner initWithTableModel:ownerUID:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTMergeOwner.mm
valid ownerUID is required
-[TSTMergeOwner mergeIndexesForRange:]
The tableModel must be set on the mergeOwner before this API can be used.
-[TSTMergeOwner isValidMergeRange:]
-[TSTMergeOwner insertBaseMergeRange:]
-[TSTMergeOwner removeBaseMergeRange:]
Unexpectedly not just removing one range
-[TSTMergeOwner performActionReturningInverse:]
Invalid merge action
-[TSTMergeOwner shrinkReturningInverseForBaseCellRegion:]
-[TSTMergeOwner p_growRangeFrom:toDesired:]
-[TSTMergeOwner p_growReturningInverseForAction:]
-[TSTMergeOwner rewriteMergesForRemovedRange:uids:isRows:]
-[TSTMergeOwner rewriteMergesForInsertedRange:uids:isRows:]
<%@: %p>
+[TSTCellSpec interactionTypeForShimControlFormatType:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCellSpec.mm
Unconvertible format type.
+[TSTCellSpec shimControlFormatTypeForInteractionType:]
Unconvertible interaction type.
Stepper
Slider
Star Rating
Pop-Up Menu
Checkbox
TSTCellInteractionTypeValueEditing
TSTCellInteractionTypeFormulaEditing
TSTCellInteractionTypeStock
TSTCellInteractionTypeStepper
TSTCellInteractionTypeRating
TSTCellInteractionTypePopup
TSTCellInteractionTypeToggle
TSTCellInteractionTypeCategorySummary
-[TSTSortRuleReferenceTracker p_columnForTrackedReference:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTSortRuleReferenceTracker.mm
Ranges should be one column!
v24@?0r^{TSCESpanningRangeRef={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}C}8^B16
-[TSTSortRuleReferenceTracker updateForSortRules:]
Couldn't track reference!
-[TSTSortRuleReferenceTracker setOwnerUID:]
You should have called setBaseTableUID: instead (it sets both base and subOwner UIDs
v16@?0@"TSCETrackedReferenceStore"8
TSTLayoutEngineDidChangeEmptyFilteredState
cell id to wp column $
dup $
temp wp column $
layout engine concurrent queue
table fonts and metric cache
<%@:%p "%@" range:%@ dynamic_mode:%@ >
TSTCellRange TSTLayoutEngineGetRangeForHint(TSTLayoutEngine *__strong, TSTLayoutHint *__strong)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTLayoutEngine.mm
layoutHint
-[TSTLayoutEngine numberOfRows]
Size invariants violated by dynamic add/remove
-[TSTLayoutEngine numberOfColumns]
B32@?0{TSUCellRect={TSUCellCoord=ISBB}{?=II}}8^B24
d8@?0
B24@?0@8^B16
void TSTLayoutEngineDynamicResizeSave(TSTLayoutEngine *__strong, BOOL *, TSTCellRange *, CGFloat *, BOOL *, TSTCellRange *, CGFloat *)
layoutEngine
resizingColumns
resizeColumnRange
resizeColumnAdjustment
resizingRows
resizeRowRange
resizeRowAdjustment
void TSTLayoutEngineDynamicResizeRestore(TSTLayoutEngine *__strong, BOOL, TSTCellRange, CGFloat, BOOL, TSTCellRange, CGFloat)
v32@?0@"TSTChangeDescriptor"8Q16^B24
v76@?0{TSUCellRect={TSUCellCoord=ISBB}{?=II}}8d24{UIEdgeInsets=dddd}32B64^B68
-[TSTLayoutEngine p_validateFittingInfoWithCellRangeWorker:widthHeightCollection:containsMerges:validationBundle:]_block_invoke
this layout pass should be only merge cells
v40@?0@"TSWPCharacterStyle"8{_NSRange=QQ}16^B32
-[TSTLayoutEngine p_containsGradientThatFillsContainerInStyle:]
style must be character or paragraph.
@"TSTWidthHeightCollection"24@?0{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}8
v24@?0@"<TSTCellIteratorData>"8@"TSTWidthHeightCollection"16
-[TSTLayoutEngine measureWithLayoutState:]
stringContents
v24@?0@"TSTCellStateForLayout"8^B16
-[TSTLayoutEngine formattedDataParagraphStylePropertyMapForCell:atCellID:]
Trying create a text engine for a merged cell other than origin.
#REF!:#REF!
-[TSTLayoutHint copyForArchiving]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTLayoutHint.mm
copy
-[TSTLayoutHint overlapsWithSelectionPath:]
selectionPath
B16@?0@"TSDDrawableSelection"8
-[TSTLayoutHint overlapsWithSelectionPath:]_block_invoke_2
Invalid cell selection index %lu for %@
B16@?0@"TSTCellSelection"8
ID: %@ 
Range: %@ 
-[TSWPParagraphStyle(CellDiffAdditions) objectByRemovingPropertiesInMap:addingPropertiesInMap:updateInverseResetPropertyMap:updateInverseSetPropertyMap:optionalConcurrentStylesheet:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSWPParagraphStyle+CellDiffAdditions.m
Can't specify both a text style and a text style change at the same time.
Stylesheet should not be nil. Attempting repair.
No usable style or stylesheet to vary against!
v32@?0i8C12@16^B24
-[TSTTablePartitioner initWithInfo:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTablePartitioner.m
Incorrect info class in the table partitioner!
-[TSTTablePartitioner measureCellRangeForNextPartitionOfSize:previousHint:horizontally:]
Partitioner can't continue from an invalid range.
-[TSTTablePartitioner calculateCellRangeForNextPartition:nextPartitionRange:additionalHeightForCaption:availableSizeRemaining:previousHint:]
Partitioner measured an invalid range.
-[TSTTablePartitioner nextHintForSize:parentLayout:previousHint:horizontally:outFinished:]
previousHint must be nil, or of type TSTLayoutHint.
Hint is for the wrong table info.
-[TSTTablePartitioner p_didFinishPartitioningHint:horizontally:]
Horizontal partitioning went beyond the table bounds!
Vertical partitioning went beyond the table bounds!
-[TSTTablePartitioner partitioningPassForFirstPartitionSize:]
partitioningPassForFirstPartitionSize: Invalid partition size
(%@,%@)
Fatal Assertion failure: %{public}s %{public}s:%d Datalist segment range start out of bounds on set
-[TSTTableDataListSegment setKeyRange:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTableDataListSegment.mm
Datalist segment range start out of bounds on set
Fatal Assertion failure: %{public}s %{public}s:%d Datalist segment range length out of bounds on set!
Datalist segment range length out of bounds on set!
Fatal Assertion failure: %{public}s %{public}s:%d New segment is empty during split!
-[TSTTableDataListSegment split]
New segment is empty during split!
Fatal Assertion failure: %{public}s %{public}s:%d Keys overlap during split!
Keys overlap during split!
Fatal Assertion failure: %{public}s %{public}s:%d Segment ranges are discontiguous!
Segment ranges are discontiguous!
Fatal Assertion failure: %{public}s %{public}s:%d Existing datalist segment range start out of bounds on split!
Existing datalist segment range start out of bounds on split!
Fatal Assertion failure: %{public}s %{public}s:%d Existing datalist segment range length out of bounds on split!
Existing datalist segment range length out of bounds on split!
Fatal Assertion failure: %{public}s %{public}s:%d New datalist segment range start out of bounds on split!
New datalist segment range start out of bounds on split!
Fatal Assertion failure: %{public}s %{public}s:%d New datalist segment range length out of bounds on split!
New datalist segment range length out of bounds on split!
Fatal Assertion failure: %{public}s %{public}s:%d Got an object with a bad key!
-[TSTTableDataListSegment objectAtIndexedSubscript:]
Got an object with a bad key!
Tables/DataList/Segment
v16@?0@"TSTTableDataObject"8
-[TSTTableDataListSegment saveToArchiver:]
Datalist segment range out of bounds on archive!
-[TSTTableDataListSegment loadObjectsFromDataListArchive:unarchiver:]
Need to set up a segment before doing an upgrade-type load of it!
-[TSTConcurrentCellIterator initWithTableInfo:tableModel:region:forcingRegion:clampingRect:flags:searchFlags:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTConcurrentCellIterator.mm
XOR expectation on getting a tableInfo or tableModel.
-[TSTConcurrentCellIterator enumerateModelConcurrentlyUsingChunkBeginBlock:concurrentBlock:finalBlock:]
You must initialize the iterator with a TSTTableModel to use this enumeration method.
@24@?0{TSUCellRect={TSUCellCoord=ISBB}{?=II}}8
-[TSTConcurrentCellIterator enumerateConcurrentlyUsingChunkBeginBlock:perDispatchThreadBlock:concurrentBlock:finalBlock:]
You may not initialize this iterator with a TSTTableModel to use this enumeration method.
v40@?0{TSUCellRect={TSUCellCoord=ISBB}{?=II}}8@24Q32
-[TSTMergeAction verify]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTMergeAction.mm
%@ has %lu covering ranges and %lu formulas with %lu indexes
Invalid action
Insert action
Remove action
Shrink action
Grow action
-[TSTCellUIDIterator p_nextCellRefIdWithUIDIndexList:UIDs:index:remainDup:lastDiffPos:recentResults:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCellUIDList.mm
Unexpected back reference value.
Unexpected ID reference value.
-[TSTTableTileGroup init]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTableTileGroup.mm
-[TSTTableTileGroup _tileForLazyReference:]
Fatal Assertion failure: %{public}s %{public}s:%d Failed to load a lazy table tile in TSTTableTileGroup: %@ with error: errorClass=%{public}@, domain=%{public}@, code=%zd, %{public}@hints=%{public}@ (%@) 
Failed to load a lazy table tile in TSTTableTileGroup: %@ with error: errorClass=%{public}@, domain=%{public}@, code=%zd, %{public}@hints=%{public}@ (%@) 
Fatal Assertion failure: %{public}s %{public}s:%d Tile ID too low for this group!
NSUInteger _indexForTileID(TSTTableTileID, TSTTableTileID)
Tile ID too low for this group!
Fatal Assertion failure: %{public}s %{public}s:%d Tile ID too high for this group!
Tile ID too high for this group!
-[TSTMergeRegionMap saveToArchiver:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTMergeRegionMap.mm
this should never be called!
%@, %p: for PivotTable: %@
-[TSTPencilAnnotationOwner addAnnotation:withFormula:atIndex:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTPencilAnnotationOwner.mm
Adding a formula at an index that already has an annotation
-[TSTPencilAnnotationOwner addAnnotation:withFormulaObject:atIndex:]
-[TSTPencilAnnotationOwner removeAnnotation:]
Annotations and formulas out of sync!
v32@?0@"TSTPencilAnnotation"8Q16^B24
Fatal Assertion failure: %{public}s %{public}s:%d Attempting to remove annotation at bad index %tu!
-[TSTPencilAnnotationOwner removeAnnotationAtIndex:]
Attempting to remove annotation at bad index %tu!
-[TSTPencilAnnotationOwner cellRangeForAnnotation:]
Unexpected merge range!
-[TSTPencilAnnotationOwner enumerateAnnotationsWithBlock:]
-[TSTPencilAnnotationOwner enumerateAnnotationsWithBlock:]_block_invoke
Unexpected table info on this annotation.
-[TSTPencilAnnotationOwner _enumerateAnnotationsAndFormulasWithIndexes:block:]_block_invoke
-[TSTPencilAnnotationOwner _annotationsForIndexes:]_block_invoke
annotation
-[TSTPencilAnnotationOwner _indexesForRange:startingOnly:]
self.tableModel
self.calculationEngine
-[TSTPencilAnnotationOwner _indexesForRows:]
-[TSTPencilAnnotationOwner _indexesForRows:]_block_invoke
How do we have a zero-row range here?
-[TSTPencilAnnotationOwner _enumerateIndexesIntersectingRegion:block:]
v48@?0@"TSTCellRegion"8r^{TSUCellCoord=ISBB}16Q24{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}32
-[TSTPencilAnnotationOwner initWithArchive:unarchiver:forTableModel:]
Mismatched number of annotations and formulas.
TSKCellPencilAnnotations
TSTPivotGroupingColumnOptionsMap %p
uid:%@, sortByGrTotal:%@, sortDesc:%@, repeatLbls:%@, hideTtls:%@, sortAggRuleUid:%@
v32@?0{TSUCellCoord=ISBB}8d16^B24
v28@?0S8d12^B20
-[TSTWidthHeightCache p_insertColumns:atColumn:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTWidthHeightCache.mm
attempt to insert column range beyond column width cache max columns; truncating
-[TSTWidthHeightCache p_insertRows:atRow:]
attempt to insert row range beyond row height cache max rows; truncating
-[TSTWidthHeightCache p_moveRowsFrom:toRow:]
destination cannot be within the source range.
src range for move exceeds max
dest range for move exceeds max
-[TSTWidthHeightCache p_moveColumnsFrom:toColumn:]
_columnModelWidths is not sized correctly before move
v16@?0I8I12
-[TSTWidthHeightCache resetFittingRowHeightsStartingWith:upToRow:]
startRow should be before endRow
-[TSTWidthHeightCache validateRowsNeedingFittingInfo:validationRegion:layoutEngine:]
rowsNeedingFittingInfo
-[TSTTableSortOrder initWithRules:type:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTableSortOrder.mm
sortRules
B24@?0@"TSTTableSortRule"8@"NSDictionary"16
-[TSTConcurrentMutableCellUIDSet reapAccumulatedCellRegionWithTable:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTConcurrentMutableCellUIDSet.mm
Search not found: %{public}@
-[TSTCellStateForLayout hasContent]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCellStateForLayout.m
expected nil value for '%{public}s'
TSUCastAsClass(TSWPColumn, [self cellContents])
v16@?0@"TSTExpressionNode"8
<%@ %p>: isActive:%@, expressionNode:%@
B16@?0r^{TSKUIDStruct=QQ}8
Fatal Assertion failure: %{public}s %{public}s:%d Not implemented.
-[TSTPivotRowColumnOrder targetGroupFromIndex:minSourceLevel:templateUID:forDimension:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTPivotRowColumnOrder.mm
Not implemented.
Fatal Assertion failure: %{public}s %{public}s:%d Not implemented for columns.
-[TSTPivotRowColumnOrder minimumCategoryLevelInRange:forDimension:]
Not implemented for columns.
<%@ %p>: completionText '%@', prefixRange %@
-[TSTStrokeLayer strokeLayerAtIndex:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTStrokeLayer.mm
should never call this with index > 0
-[TSTMutableStrokeLayer applyStroke:atIndexes:order:applyStroke:atIndexes:order:applyStroke:atIndexes:order:applyStroke:atIndexes:order:applyStroke:atIndexes:order:]
this interface can't be used on complex stroke layers
bodyIndexes
-[TSTConcurrentStylesheet variationOfStyle:propertyMap:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTConcurrentStylesheet.mm
stylesheet used should be same as the one owning the style
All at Once
By Row
By Column
By Cell
By Row Content
By Column Content
By Cell Content
By Row Reverse
By Row Content Reverse
By Column Reverse
By Column Content Reverse
By Cell Reverse
By Cell Content Reverse
+[TSTAnimation textureDeliveryStyleFromDeliveryString:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTAnimation.mm
bad delivery string to delivery style mapping
v32@?0r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}8r^{TSKUIDStruct=QQ}16^B24
void TSTHeaderPerTable::addHeaderUid(const TSKUIDStruct &, BOOL)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTHeaderNameMgr.mm
_headerRowUids
-[TSTHeaderNameMgrTile saveToArchiver:]
_headerNameMgr
-[TSTHeaderNameSubset headerCellsMatchingPrefix:]
Warning: asking for prefix matching, but this search result didn't specify prefixes when it was created
%@ for '%@'
com.apple.Numbers.TST.HeaderNameMgr
v24@?0r^{TSUCellCoord=ISBB}8^B16
-[TSTHeaderNameMgr findTileForString:findClosest:foundAtOffset:]
midTile
-[TSTHeaderNameMgr handleFullTile:]
Could NOT split tile of %lu size for some reason
-[TSTHeaderNameMgr spanningRangeForHeaderCell:]
tracked header reference is not in a header?  (%@ vs body %@)
@"TSTIndexingChunk"24@?0{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}8
v24@?0@"<TSTCellIteratorData>"8@"TSTIndexingChunk"16
v24@?0@"NSString"8^B16
-[TSTCellDiffMap initWithContext:cellDiffArray:cellUIDList:uidBased:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCellDiffMap.mm
Nil cellDiffArray
Nil cellUIDList
unexpected diff/uidlist ratio
-[TSTCellDiffMap addCellDiff:andCellUID:avoidCopy:]
cannot add cellUIDs in cellID mode
can't add cells to a one-to-many mapping
-[TSTCellDiffMap addCellDiff:andCellID:avoidCopy:]
cannot add cellIDs in UID mode
-[TSTCellDiffMap addCellDiffMap:]
both maps should match isUIDBased state
-[TSTCellDiffMap addCellDiffs:atCellUIDs:]
map should be UIDBased
cellDiffs and cellUIDList should match in length
-[TSTCellDiffMap appendCellDiffMap:]
Trying to append a cellID cellDiffMap to a uidBased diff map. Aborting.
v64@?0@"TSTCellDiff"8{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16Q48^B56
Trying to append a uidBased cellDiffMap to a cellID diff map. Aborting.
v40@?0@"TSTCellDiff"8{TSUCellCoord=ISBB}16Q24^B32
B24@?0r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}8Q16
B24@?0{TSKUIDStruct=QQ}8
-[TSTCellDiffMap enumerateElementsUsingBlock:]
cannot enumerate cellUIDs in cellID mode
-[TSTCellDiffMap enumerateCellIDElementsUsingBlock:]
cannot enumerate cellIDs in UID mode
v16@?0@"TSTCellDiffArray"8
-[TSTTableViewSortRule baseIndex]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTableSortRule.mm
Base index is not valid on TSTTableViewSortRule.
-[TSTTableViewSortRule encodeToArchive:]
TSTTableViewColumnSortRule should never be archived
-[TSTTableViewSortRule initFromArchive:]
TSTTableViewColumnSortRule should never be unarchived
-[TSTGroupValueTuple updateWithDocumentRoot:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTGroupValueTuple.mm
+[TSTGroupValueTuple groupValueUidForTuple:appendingTuple:]
upperTuple
lowerTuple
-[TSTGroupValueTuple groupValueTupleByReplacingValue:atLevel:]
Don't try to replace value for the root
%{public}@: level %d is beyond this tuple's size
-[TSTGroupValueTuple groupValueTupleByRemovingValueAtLevel:]
Removing from level %d of a %d-level tuple
%@ [
%@, 
TSTiOSCheckboxChecked6
TSTiOSCheckboxChecked12
TSTiOSCheckboxChecked18
TSTiOSCheckboxChecked24
TSTiOSCheckboxUnchecked6
TSTiOSCheckboxUnchecked12
TSTiOSCheckboxUnchecked18
TSTiOSCheckboxUnchecked24
+[TSTCheckboxRenderer frameWithViewScale:contentFrame:checked:outCheckboxImage:outCheckboxSize:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCheckboxRenderer.m
No checkbox image for rendering!
string
width
height
vertical
direction
wraps
paragraphStyle
v28@?0I8d12^B20
-[TSTColumnRowUIDMapper disconnect]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTColumnRowUIDMapper.mm
No longer have a mapper - disconnected multiple times?
Mappers version counter was already off %lu vs %lu
Should have preserved the versionCounter
-[TSTCategoryStoreIterator initWithInfo:region:flags:searchMask:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCategoryStoreIterator.mm
_info.baseTableModel.dataStore
_info.summaryModel.dataStore
searchMask remain 0x%x, should be consumed by this point
-[TSTCategoryStoreIterator dealloc]
iteration should be terminated
-[TSTCategoryStoreIterator updateCellData:]
_baseTile
_baseRow
incomplete map.
cellRef
this is odd case, iterator found cell at this cellID, but then no cellRef
-[TSTCategoryStoreIterator updateFormulaForCellData:]
this is an odd case, iterator found cell at this cellID, but then no cellRef
-[TSTCategoryStoreIterator getNext]
invalid columnUID
should now have a row that intersects the region
couldn't find offset, that's not good.
should now have a valid cellID at this point
-[TSWPStorage(TablesAdditions) hyperlinkCellID]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSWPStorage_TablesAdditions.mm
cell attribute array should not be empty
-[TSTCategoryAggregateFormulaOwner tableInfo]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCategoryAggregateFormulaOwner.mm
Someone is asking for a tableInfo, but we are not registered with the calcEngine yet
Table %@ is not registered with the calcEngine yet
-[TSTCategoryAggregateFormulaOwner setTableInfo:]
don't allow overwriting table info pointer, should go from nil -> info
Wrong class passed to setTableInfo: %@
-[TSTCategoryAggregateFormulaOwner evaluateFormulaAt:withCalcEngine:recalcOptions:]
Table has no calc engine. Aborting recalculation.
-[TSTRichTextPayload initWithContext:storage:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTRichTextPayload.mm
-[TSTSummaryCellVendor setAggregateType:forColumnUID:atGroupLevel:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTSummaryCellVendor.mm
Not implemented for pivot tables.
-[TSTSummaryCellVendor cellSpecForAggregateType:forColumnUID:atGroupLevel:]
-[TSTSummaryCellVendor setCell:atCellUID:]
Setting vendor cell for a pivot table
Setting vendor cell with an invalid cellUID
Invalid aggregate type in summary cell vendor - BodyRows
Invalid aggregate type in summary cell vendor - Indirect
Invalid aggregate type in summary cell vendor - Label
-[TSTSummaryCellVendor getCell:atCellUID:]
Getting vendor cell for a pivot table
cell should never be nil
Getting vendor cell with an invalid cellUID
-[TSTSummaryCellVendor removeCellsInColumnUid:]
-[TSTSummaryCellVendor cellMapForWildcardCells]
-[TSTSummaryCellVendor runChange:withSummaryCellMap:migrationHelper:]
+[TSTTableFilterRule getPredArgDataFromCell:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTableFilterRule.mm
Expected a cell without an error to make a quick filter rule.
TSTTableFilterRule %p: %@
-[TSTTableFilterRule matchesCell:]
Unexpected predicate argument type!
-[TSTTableFilterSet p_downgradedFilterRuleForListItem:fromPredicate:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTableFilterSet.mm
Don't have a TSTFormulaPredicateTypeDateIsNotTheDate predicate type, but need one.
Invalid Predicate Arg Data for list item
-[TSTTableFilterSet downgradeFilterSetForBackwardCompatWithLocale:]
newRule
Unexpected predicate type during downgrade!
-[TSTTableFilterSet p_thresholdComparisonMatchesFilter:withPredicateType:]
Unexpected predicate type found when calculating threshold
-[TSTTableFilterSet rowIsShown:withHiddenStateExtent:withCalcEngine:]
Unexpected threshold value type found
-[TSTTableFilterSet ruleInFilter:atIndex:]
filter index invalid
rule index invalid
-[TSTTableFilterSet filterAtIndex:inTable:]
-[TSTTableFilterSet removeRulesWithAbsoluteIndices:]
invalid rule index passed in
-[TSTTableFilterSet removeRulesWithIndices:inFilter:]
filter index is out of bounds
rule indices are out of bounds
-[TSTTableFilterSet p_addRules:atRuleIndices:inFilter:isNew:]
no rules given
-[TSTTableFilterSet addRules:inFilter:]
-[TSTTableFilterSet replaceRule:atRuleIndex:inFilter:]
-[TSTTableFilterSet enumerateRulesInFilterIndex:usingBlock:]
-[TSTTableFilterSet ruleIndexInFilter:matchingCell:]
-[TSTTableFilterSet numberOfRulesInFilter:]
Fatal Assertion failure: %{public}s %{public}s:%d Modern filter sets shouldn't have pre-pivot rules!
-[TSTTableFilterSet loadFromArchive:unarchiver:]
Modern filter sets shouldn't have pre-pivot rules!
-[TSTFormulaPredicate initWithPredicateType:arg1:arg2:qualifier1:qualifier2:argumentCellRef:hostCell:forConditionalStyle:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTFormulaPredicate.mm
Conditional styles are not allowed to use anything other than an arg0 of (+0,+0) relative coordinate
-[TSTFormulaPredicate p_creatorForPeriodBoundaryWithScale:direction:offset:argIndex:earlierBound:isCalPers:]
Not a valid date scale
This is expected to be unreachable.
-[TSTFormulaPredicate recreateFormula]
Should already have _predArg0 defined
-[TSTFormulaPredicate p_argTypeForPredArg:argNum:calculationEngine:hostCell:]
A categoryRef as arg 0, I don't think so
A viewTractRef as arg 0, I don't think so
-[TSTFormulaPredicate evaluateAtCellID:onOwnerUID:calcEngine:]
Need both of these set
-[TSTFormulaPredicate setArgumentAt:withPredArg:]
Only a limited set of types are allowed for predArg0, and not %d
%@: Not allowed for argument at position %d
-[TSTFormulaPredicate p_populateMembersFromFormula]
We don't have valid offsets at the moment
-[TSTFormulaPredicate copyByRewritingWithSpec:inOwner:inCellCoordinate:]
Not implemented yet for this type
-[TSTFormulaPredicate upgradeTopAndBottom]
_predArg0
-[TSTFormulaPredicate encodeToPrePivotArchive:archiver:encodingForSOS:]
We need to be backward compatible to use this archiving method
-[TSTFormulaPredicate initFromArchive:]
Have to have archived the _predArg0 argument for upgraded archive format
-[TSTArchivedStrokeSelection setSelection:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTArchivedStrokeSelection.mm
Wrong type of class %@ (expected TSTStrokeSelection)
TSTTableBadgeImageCache
TSUImage *TSTTableBadgeCachedImageForName(NSString *__strong)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTableBadge.m
TSTTableBadge failed to load image %@
void TSTTableBadgeContentsCenterInfoInit(TSTTableBadgeContentsCenterInfo *, CGFloat, CGFloat, CGFloat, CGFloat, CGFloat, CGFloat)
info
TSTErrorMessageIcon
-[TSTCellRegion regionByTrimmingAroundRowIndices:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCellRegion.mm
-[TSTCellRegion regionByTrimmingAroundColumnIndices:]_block_invoke
-[TSTCellRegion prunedCellRegionAgainstTable:behavior:usingBlock:]
-[TSTCellRegion containsCellRange:]_block_invoke
areaRemaining should be greater than the intersection area
-[TSTCellRegion p_copyFromRegion:]
-[TSTCellRegion p_insertRangeIntoRegion:]
Added range:%{public}@ should never overlap previous range:%{public}@ in region:%{public}@.
<%@ %p boundingbox={ %@ }
 cellRanges={empty}>
 cellRanges={
  { %@ }
-[TSTTableTranslator init]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTableTranslator.mm
-[TSTTableTranslator tableAreaForCellID:]
expecting this method to be overridden
-[TSTTableTranslator cellValueTypeAtCellID:]
-[TSTTableTranslator defaultCellStyleForCellID:useSoftDefault:outSource:]
-[TSTTableTranslator defaultTextStyleForCellID:useSoftDefault:outSource:]
-[TSTTableTranslator cellStyleAtCellID:isDefault:]
-[TSTTableTranslator textStyleAtCellID:isDefault:]
-[TSTTableTranslator conditionalStyleSetAtCellID:]
-[TSTTableTranslator stringAtCellID:optionalCell:]
-[TSTTableTranslator getCell:atCellID:suppressCellBorder:]
-[TSTTableTranslator hasFormulaAtCellID:]
-[TSTTableTranslator formulaAtCellID:]
-[TSTTableTranslator postCommentNotificationForStorage:atViewCellCoord:notificationKey:]
-[TSTTableTranslator commentHostingAtCellID:forCommentStorage:]
-[TSTTableTranslator commentHostingAtCellID:]
-[TSTTableTranslator mergeRangeAtCellID:]
-[TSTTableTranslator mergeOriginForCellID:]
{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}24@?0{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}8
-[TSTTableTranslator cellUIDForSummaryCellCoord:]
no summeries in normal table mode
-[TSTTableTranslator cellExistsAtCellID:]
-[TSTTableTranslator hasCommentAtCellID:]
requires identity mapping from view to model space
-[TSTTableTranslator resetViewMap]
view and base must be the same while uncategorized.
-[TSTIdentifierNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTIdentifierNode.mm
Unexpected object in initAsCopyOf:... expected TSTIdentifierNode, got %@
-[TSTIdentifierNode buildASTNodeArray:hostCell:symbolTable:]
IdentifierNode shouldn't have any children
<%@:%p size %f count %u hiding 0x%02hx cstyle %p tstyle %p
-[TSTConditionalStyleRule setCellStyle:textStyle:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTConditionalStyleRule.mm
Can't replace styles!
TSTConditionalStyleRule %p: %@ => %@, %@
CS Predicate: %@
-[TSTConditionalStyleSet copyToGeometricFormWithRewriteContext:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTConditionalStyleSet.mm
Trying to rewrite a conditional style with a non-conditionalStyleFormulaOwner containing ownerUID: %@
-[TSTConditionalStyleSet copyByRepairingBadReferences:]
<%@: %p>: Rules:
CS Rules: 
-[TSTConditionalStyleFormulaOwner initWithTableModel:ownerUID:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTConditionalStyleFormulaOwner.mm
TSTConditionalStyleFormulaOwner: requires a valid ownerUID, table is: %@ (%@)
Equals
Is not equal
Greater than
Greater than or equals
Less than
Less than or equals
Between
Starts with
Ends with
Does not start with
Does not end with
Contains
Does not contain
Text Is
Text Is Not
static TSCECellRef TSTConvertFormulasToBaseForCategoriesRewriter::convertedContainingCellRefForColonTractRewrites(TSCEFormulaRewriteContext &, TSTFormulaCoordinateSpace, TSTFormulaRewriteSpec *__strong)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTConvertFormulasFromBaseForCategoriesRewriter.mm
convertedContainingCellRefForColonTractRewrites: No coordMapper found for tableUID: %@
virtual TSCEASTElement *TSTConvertFormulasToBaseForCategoriesRewriter::colonTractNode(TSCEASTColonTractElement *)
How did this happen? refTableUID is invalid in TSTConvertFormulasFromChromeToBaseForCategoriesRewriter::colonTractNode
srcCoordMapper
Fatal Assertion failure: %{public}s %{public}s:%d at the moment we don't handle this well
-[TSTCategoryOrder targetGroupFromRowIndex:minSourceLevel:templateRowUID:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCategoryOrder.mm
at the moment we don't handle this well
 blank
 error
%@ %c %@
TSURowIndex TSTUidOrderNode::firstIndex()
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTUidOrderNode.mm
Sorting category/pivot order: Never should a group be empty
void TSTUidOrderNode::_orderUsingGroupByAndMaps(TSTGroupBy *__strong, BOOL, int, int, TSTColumnRowUIDMap *__strong, TSTColumnRowUIDMap *__strong, BOOL)
Too many number of levels for this order algorithm.
Level mismatch between the groupBy and the order node tree
+[TSTGroupBy(ChangeGroups) groupingComboForGroupingType:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTGroupBy_ChangeGroups.mm
This grouping type isn't supported in this release
+[TSTGroupBy(ChangeGroups) p_dateBySettingUnit:value:ofDate:inCalendar:]
Continued looping trying to set date %@ to week number %lu
v24@?0r^{TSTGroupingLevelAndType=SC}8^B16
-[TSTTableInfo(Reorganize) p_mappingForSortingRowsOrColumns:withRules:dimension:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTableInfo_Reorganize.mm
Can't sort by an empty rule list!
q24@?0@"TSTTableSortTag"8@"TSTTableSortTag"16
Index out of range!
-[TSTTableInfo(Reorganize) sortTagsForSortingColumns:byRows:]_block_invoke
reorganizeValue
v32@?0@"TSTTableSortTag"8Q16^B24
-[TSTTableInfo(Reorganize) sortTagsForSortingRows:byColumns:]_block_invoke
-[TSTTableInfo(Reorganize) mappingFromRowUids:toRowUids:]
From index out of range!
-[TSTCategoryTranslator maxVisibleRowLevel]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCategoryTranslator.mm
Unimplemented!
-[TSTCategoryTranslator startOfGroupingChangesBatch]
overflow in _groupingsChangingLevel
-[TSTCategoryTranslator endOfGroupingChangesBatch]
endOfGroupingChangesBatch called without matching startOfGroupingChangesBatch - avoided underflow
-[TSTCategoryTranslator resetViewMap]
view and base cannot be the same while categorized
-[TSTCategoryTranslator suspendChangeDescriptorNotificationsDuringBlock:]
not expecting multiple suspensions
+[TSTCategoryTranslator tableStyleAreaForCategoryLevel:isLabel:]
Calling tableStyleAreaForCategoryLevel with an invalid level
Category Column
i28@?0r^{TSUModelCellCoord={TSUCellCoord=ISBB}}8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16C24
i20@?0C8r^{TSKUIDStruct=QQ}12
i12@?0{TSUViewRowIndex=I}8
-[TSTCategoryTranslator setCellStyle:ofRowAtIndex:]
Categories: cannot set cell style for that row
-[TSTCategoryTranslator setTextStyle:ofRowAtIndex:]
Categories: cannot set text style for that row
-[TSTCategoryTranslator setCellStyle:ofColumnAtIndex:]
Categories: setting cell style on unknown column
-[TSTCategoryTranslator setTextStyle:ofColumnAtIndex:]
Categories: setting text style on unknown column
v18@?0{TSUModelColumnIndex=S}8r^{TSKUIDStruct=QQ}10
-[TSTCategoryTranslator conditionalStyleSetAtCellID:]
Categories: cannot get conditional style for that cell
-[TSTCategoryTranslator regionForValueOrCommentCellsInRange:]
Categories: cannot resolve region for cell rect
-[TSTCategoryTranslator p_applyViewCellCoord:toSummaryUsingBlock:toLabelUsingBlock:toCategoryColumnUsingBlock:toBaseUsingBlock:]
summary row does not have a valid summary row uid
-[TSTCategoryTranslator p_applyViewColumnIndex:toCategoryColumnUsingBlock:toBaseUsingBlock:toBeyondBoundsUsingBlock:]
Categories: this column is not is not in the base table
-[TSTCategoryTranslator heightOfRowAtIndex:isDefault:]
uid must be label or summary
-[TSTCategoryTranslator rowHeights]
Categories: cannot get row heights.
-[TSTCategoryTranslator columnWidths]
Categories: cannot get column widths.
-[TSTCategoryTranslator setHeight:ofRowAtIndex:]
Categories: cannot set height of this row
-[TSTCategoryTranslator setWidth:ofColumnAtIndex:]
Categories: cannot set width of this column
-[TSTCategoryTranslator removeRowsAtIndex:count:]
Categories: row removal method is not supported.
-[TSTCategoryTranslator removeColumnsAtIndex:count:]
Categories: column removal method is not supported.
-[TSTCategoryTranslator postCommentNotificationForStorage:atViewCellCoord:notificationKey:]
Categories: cannot post notification for comment/cell/key
-[TSTCategoryTranslator commentHostingAtCellID:forCommentStorage:]
Categories: cannot resolve comment for cell/storage
-[TSTCategoryTranslator commentHostingAtCellID:]
Categories: cannot resolve comment for cell
-[TSTCategoryTranslator moveColumnRange:toColumnIndex:]
Categories: could not move column
-[TSTCategoryTranslator cellIDForCellContainingRichTextStorage:]
Categories: cannot resolve cell for this rich text storage
-[TSTCategoryTranslator mergeCellRange:]
attempting to merge a disjoint cell region
-[TSTCategoryTranslator mergeRangeAtCellID:]
found a disjoint merge range
-[TSTCategoryTranslator mergedGridIndicesForDimension:]
should not be any merged row grid indexes in the body range
-[TSTCategoryTranslator enumerateMergesIntersectingCellRegion:usingBlock:]_block_invoke
Unexpected view source merge region for categorized table: %@
-[TSTCategoryTranslator mergeRangesIntersectingRange:]_block_invoke
-[TSTCategoryTranslator mergeRangesIntersectingCellRegion:]_block_invoke
-[TSTCategoryTranslator mergeRangesAndCrumbsIntersectingRange:]_block_invoke_2
-[TSTCategoryTranslator insertColumnsAtIndex:uids:metadatas:tableArea:]
Categories: destination column is not in the header
Categories: table area should be body
-[TSTCategoryTranslator insertRowsAtIndex:uids:metadatas:tableArea:unsetFilterHidingAction:]
Categories: destination row is not in the actual header
Categories: destination row is not in the footer
No rows match the filter conditions.
@8@?0
v32@?0{_NSRange=QQ}8@24
BOOL TSTCellCoerceCellToFormat(TSTCell *__strong, TSUFormatType)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCell_CoercionEngine.mm
Illegal format type for coercion: %{public}@
Attempting to coerce a cell with mismatched format and value types
BOOL TSTCellCoerceEmptyCellToFormat(TSTCell *__strong, TSUFormatType)
Cannot coerce to %@
BOOL TSTCellCoerceTextCellToNumberFormatWithSeparatorFixing(TSTCell *__strong, TSUFormatType)
Need to have a locale set here.
BOOL TSTCellcoerceTextCellToBestNumberFormatUsingLimitedParsing(TSTCell *__strong, BOOL, BOOL)
unexpected format type
-[TSTCell(Coercion) replaceContentWithParsableString:tableInfo:cellID:flags:outControlWasRemoved:]
Cell must have its locale set in replaceContentWithParsableString:
-[TSTCellStyle(CellDiffAdditions) objectByRemovingPropertiesInMap:addingPropertiesInMap:updateInverseResetPropertyMap:updateInverseSetPropertyMap:optionalConcurrentStylesheet:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCellStyle+CellDiffAdditions.m
Can't specify both a cell style and a cell style change at the same time.
-[TSTDataStoreIterator initWithModel:region:flags:searchMask:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTDataStoreIterator.mm
_dataStore
cannot specify both walk right to left and walk bottom to top
-[TSTDataStoreIterator updateCellData:]
_curTile
_curRow
-[TSTDataStoreIterator updateFormulaForCellData:]
-[TSTDataStoreIterator getNext]
-[TSTArchivedTableNameSelection setSelection:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTArchivedTableNameSelection.mm
Wrong type of class %@ (expected TSTTableNameSelection)
com.apple.iWork.TSTPerformance
General
-[TSTGroupingColumn setFunctorForType]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTGroupingColumn.mm
should not attempt to use an invalid grouping type
-[TSTGroupingColumn p_groupingFormatWithLocale:]
yyyy
LLLL yyyy
EEEE
M/d/yyyy
yyyy'-W'w
yyyy-QQQ
LLLL
Value
Year
Year-Month
Day of Week
Year-Month-Day
Year-Week
Year-Quarter
Month
Quarter
-[TSTConvertFormulasForCategoriesByRewritingWrapper initWithCalcEngine:rewriteSpec:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTConvertFormulasForCategoriesByRewritingWrapper.mm
Why are we even being created for a non-move rewriteSpec: %d
-[TSTConvertFormulasForCategoriesByRewritingWrapper convertFromBaseToChromeForCategorizedTableMove:containingCell:]
srcColumnUids
srcRowUids
dstColumnUids
dstRowUids
-[TSTConvertFormulasForCategoriesByRewritingWrapper convertFromChromeToBaseForCategorizedTableMove:containingCell:]
-[TSTPivotStoreIterator initWithInfo:region:flags:searchMask:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTPivotStoreIterator.mm
info.baseTableModel.dataStore
info.summaryModel.dataStore
-[TSTPivotStoreIterator updateCellData:]
_summaryRow
-[TSTPivotStoreIterator updateFormulaForCellData:]
-[TSTPivotStoreIterator getNext]
Unexpected cell coordinate while iterating.
-[TSTTableModel(FormulaOwner) registerWithCalcEngineForDocumentLoad:ownerKind:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTable_FormulaOwner.mm
-[TSTTableModel(FormulaOwner) registerWithCalcEngineForDocumentLoad:ownerKind:]_block_invoke
can't translate a non-formula cell
-[TSTTableModel(FormulaOwner) performReadForOneOffFormulaEvaluation:forCellCoord:]
Evaluating non-formula cell.
-[TSTTableModel(FormulaOwner) evaluateFormulaAt:withCalcEngine:recalcOptions:]
Table model has no calc engine. Aborting recalculation.
Inconsistent calcEngines
Cell %@::%@ said hasFormula=YES, but had no formula in it
TSTTable_FormulaOwner evaluateFormulaAt
 %C 
-[TSTTableModel(FormulaOwner) writeResultsForCalcEngine:]
expect calc engines to be the same
v24@?0r^{TSCEInternalCellReference={TSUCellCoord=ISBB}SS}8^B16
-[TSTTableModel(FormulaOwner) invalidateForCalcEngine:]
TSTStrokeAssociatedObject
virtual TSCEValue TSTTableResolver::valueForCellCoord(const TSUCellCoord &, BOOL) const
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTableResolver.mm
something went wrong fetching data from the table.
virtual TSCEValue TSTTableResolver::scalarValue(TSCEEvalRef *__strong _Nonnull, const TSCEOwnerUID &, const TSUCellCoord &, BOOL, BOOL) const
Invalid table pointer in a reference to be resolved. Returning a bogus value. Please file a bug.
virtual TSCEHidingAction TSTTableResolver::getHidingAction(TSCEEvalRef *__strong _Nonnull, BOOL) const
can't get hiding action of a range
virtual TSCEValueGrid *TSTTableResolver::valuesForViewTractRef(TSCEViewTractRef *__strong _Nonnull, TSCEHidingAction, TSCEError * _Nonnull __autoreleasing * _Nullable, TSCECellRefSet * _Nonnull) const
Need a tableUID set to use this interface
Need to implement group level restrictions for categorized tables
virtual TSCEValueGrid *TSTTableResolver::valuesForViewTractRef(TSCEViewTractRef *__strong _Nonnull, TSCEHidingAction, TSCEError * _Nonnull __autoreleasing * _Nullable, TSCECellRefSet * _Nonnull) const_block_invoke_2
%@: Should have had all precedents already, but missing: %@
v32@?0r^{TSCEGridCoord=II}8r^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16^B24
v40@?0Q8@"NSString"16r^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}24^B32
virtual TSCECellTractRef *TSTTableResolver::cellTractRefForViewTractRef(TSCEViewTractRef *__strong _Nonnull)
The error in the cell was removed.
The formula was updated because it refers to a table that was transposed.
The formula was updated because it refers to a table that was transposed. You may need to make additional changes.
The formula refers to a table that was transposed. You may want to review it.
The formula was replaced with its last calculated value.
The function %@ might have produced a different result than in Excel. The formula was replaced by a formula that will give the same result.
 Original formula: %@
The following conditional highlighting rules are not supported and were removed: Equal or Above Average, Equal or Below Average.
Conditional highlighting rules using standard deviation are not supported and were removed.
Conditional highlighting rules using formulas are not supported and were removed.
The following conditional highlighting rules are not supported and were removed: Contains Errors.
The following conditional highlighting rules are not supported and were removed: Contains No Errors.
Conditional highlighting rules containing unsupported operators were removed.
Conditional highlighting rules using unsupported style attributes were removed.
The conditional formatting containing an unsupported time period was removed.
Unsupported conditional highlighting rules were removed.
The cell was updated with a more accurate duration format. You may want to review formulas that refer to this cell.
-[TSTImportWarningSet TSTImportFormulaWarningTypeToArchive]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTImportWarningSet.mm
Unhandled FormulaWarningType encountered while saving to archive.
v32@?0@"NSString"8Q16^B24
-[TSTWrappedFormula nodesToCheckForBareArgumentPlaceholders]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTWrappedFormula.mm
Expected function node for %@ at the top of parse tree
-[TSTWrappedFormula insertFormulaText:includeWhitespace:]
-[TSTWrappedFormula reparseWithStorage:adjustExpressionTree:]_block_invoke
Unexpected attachment passed to block
-[TSTWrappedFormula reparseWithStorage:adjustExpressionTree:]
-[TSTWrappedFormula reparseWithStorage:adjustExpressionTree:]_block_invoke_2
Expected top function node to be at index 0
Expected top function node to end at index %lu
expected non-top node to be past index %lu
@"TSTExpressionNode"16@?0@"TSTExpressionNode"8
Fatal Assertion failure: %{public}s %{public}s:%d Unarchiving is incomplete. Equality comparison is bogus and can lead to document corruption. Crashing now.
-[TSTPopUpMenuModel isEqualToChoices:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTPopUpMenuModel.mm
Unarchiving is incomplete. Equality comparison is bogus and can lead to document corruption. Crashing now.
TSTPopUpMenuModel: (
-[TSTPopUpMenuModel p_mcListTypeForArgType:]
Unexpected TSCEArgumentType for popup list.
-[TSTPopUpMenuModel loadFromArchive:]
We are not handling this type of TSCECellValue
TSTPopUpMenuModel Archiving: Only one of item and tsce_item should exist
TSTPopUpMenuModel Archiving: No items to unarchive
Item 1
Item 2
Item 3
+[TSTPopUpMenuModel popupMenuModelReorderingModel:fromIndex:toIndex:]
Bad index
TSTArchives.sos.proto
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/messages/src/TSTArchives.sos.pb.cc
-[TSTTableDataObject loadFromArchive:unarchiver:completion:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTableDataObject.mm
Abstract method not overridden by %{public}@
Abstract method not overridden by %@: %s
-[TSTTableDataObject dropReferences:]
dropping data list ref count by more than the total count
-[TSTTableDataObject estimateByteSize]
refCount: %d   commentStorage: %@
refCount: %d   _conditionalStyleSet: %@
-[TSTTableDataCustomFormat encodeToArchive:archiver:]
Should never archive a new custom format datalist!
refCount: %d   _customFormat: %@
NULL
refCount: %d   format: %@
-[TSTTableDataCellSpec loadFromArchive:unarchiver:completion:]
Shouldn't find unsupported formulas in documents. This document is corrupted.
refCount: %d   _cellSpec: %@
refCount: %d   _formulaError: %@
refCount: %d   importWarningSet: %@
refCount: %d   popUpMenuModel: %@
v16@?0@"TSTRichTextPayload"8
refCount: %d   storage: %@
-[TSTTableDataString initObjectWithString:refCount:]
created a string table entry with a nil string
refCount: %d   string: %@
v16@?0@"TSSStyle"8
refCount: %d   _style: %@
-[TSTCellDictionary setCell:atCellID:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCellDictionary.mm
can't insert an invalid cell ID
-[TSTCellDictionary cellAtCellID:]
can't look up an invalid cell ID
-[TSTCellDictionary hasCellAtCellID:]
<%@ %p with %d key/value pairs 
  { key: string   : %@
         width    : %f
         height   : %f
         vertical : %@
         direction : %@
wpColumn:  object : %@
           string : %@
  },
v32@?0@"TSTLayoutContentCachedKey"8@"TSWPColumn"16^B24
TSTArchives.proto
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/messages/src/TSTArchives.pb.cc
v32@?0@"NSNumber"8@16^B24
v16@?0@"NSMutableDictionary"8
-[TSTCell initWithLocale:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCell.mm
-[TSTCell copyToCell:]
srcStorage
-[TSTCell copyValueAndFormatToCell:]
-[TSTCell cellByApplyingCellDiff:toTable:andUpdateInverse:optionalConcurrentStylesheet:]
cellStyle
-[TSTCell setProvidedValueTypeBeforeUpgrade]
Provided cells only allowed before Pre-UFF upgrade.
-[TSTCell formattedValue]
Cell number format failed to produce return string.
Cell currency format failed to produce return string.
Impossible cell value type reached.
%@ Total
-[TSTCell stringForEditing]
-[TSTCell bakeFormulaToValue]
can't bake non-formula cells
-[TSTCell setCellStyle:clearingID:]
-[TSTCell setTextStyle:clearingID:]
-[TSTCell setConditionalStyle:clearingID:]
v40@?0@"TSWPAttachment"8Q16Q24^B32
-[TSTCell interactionType]
Cell must be inflated to determine interaction type
-[TSTCell hasStockFormulaForStockUI]
Cell must be inflated to ask if it contains a stock formula
-[TSTCell popupChoiceIndex]
Not a popup cell.
-[TSTCell applyPopupChoiceIndex:]
Unexpected argument type for popup TSCECellValue.
Cannot apply popup choice
v40@?0@8{_NSRange=QQ}16^B32
unhandled formula result type found.
-[TSTCell copyAllFormatsToCell:]
-[TSTCell setFormatID:forStorageFlag:]
Inappropriate storage flag.
-[TSTCell formatForStorageFlag:]
-[TSTCell formatIDForStorageFlag:]
<cellSpec: %@>
<cellSpec not populated>
B24@?0@"TSKFormat"8@"TSKFormat"16
v32@?0@"TSTTableGroupSortRuleUID"8Q16^B24
-[TSTTableDataStore decrementColumnCellCount:byAmount:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTableDataStore.mm
Can't drive cell count below zero!
-[TSTTableDataStore getCell:atCellID:]
Retrieving corrupt cell storage data for cellID:%@
v28@?0^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}8S16^B20
void p_performRichTextStorageDOLC(TSTTableDataStore *__strong, TSTCell *__strong, TSTCellStorageRef)
newStorage.documentRoot
-[TSTTableDataStore p_updatePreBNCDataListsForCurrentFormat:numberFormat:currencyFormat:dateFormat:durationFormat:baseFormat:customFormat:stepperSliderFormat:mcListFormat:oldPreBNCStorageRef:callWillModify:]
newMCData
I20@?0@"TSKFormat"8i16
void p_UpdateDataListsForNewCell(TSTTableDataStore *__strong, TSTCell *__strong, TSTCellStorageRef, const TSCEOwnerUID &, __strong id<TSCEFormulaReplacing>, BOOL)
Cell of string value type has no value. Setting to NoContent.
Handed a bad string key! Setting to NoContent.
Expected a formula cell spec
Handed a bad formula key! Repairing.
Expected a control cell spec
Handed a bad formula error key! Repairing.
Handed a bad text storage key! Repairing.
Handed a cell comment key! Repairing.
Handed an import warning set key! Repairing.
Handed a bad cell style key! Repairing.
Handed a bad text style key! Repairing.
Handed a bad conditional style key! Repairing.
-[TSTTableDataStore _setCell:atCellID:tableUID:calculationEngine:conditionalStyleOwner:ignoreFormula:clearImportWarnings:richTextDOLCHint:]
Failed to get tile for cell!
-[TSTTableDataStore setCellMap:tableUID:calculationEngine:conditionalStyleOwner:ignoreFormulas:skipDirtyingNonFormulaCells:doRichTextDOLC:]_block_invoke
Failed to get a tile while setting a map!
-[TSTTableDataStore p_preBNCKeysForCell:oldPreBNCStorageRef:callWillModify:]
Illegal format type %@ for preBNC stepper/slider display format.
preBNCPopupTable
-[TSTTableDataStore resolveDataListKeysForPreBNCCell:suppressTransmutation:sourceStorageVersion:]
String cell has bad string!
StringTable
Formula cell has bad formula!
FormulaTable
NULL formula
FormulaErrorTable
RichTextTable
CommentTable
ImportWarningTable
StyleTable
ConditionalStyleTable
preBNCFormatTable
-[TSTTableDataStore resolveDataListKeysForCell:suppressTransmutation:sourceStorageVersion:]
This cell is corrupt. It has a key for both formula and control.
ControlCellSpecTable
FormatTable
Fatal Assertion failure: %{public}s %{public}s:%d Datalist reference is unexpectedly nil during load!
-[TSTTableDataStore p_loadDatalist:forLazyReference:completionBlock:]
Datalist reference is unexpectedly nil during load!
Fatal Assertion failure: %{public}s %{public}s:%d Failed to load a lazy datalist in TSTTableDataStore: %@ in table: %@ with error: errorClass=%{public}@, domain=%{public}@, code=%zd, %{public}@hints=%{public}@ (%@) 
Failed to load a lazy datalist in TSTTableDataStore: %@ in table: %@ with error: errorClass=%{public}@, domain=%{public}@, code=%zd, %{public}@hints=%{public}@ (%@) 
Fatal Assertion failure: %{public}s %{public}s:%d Conditional style datalist reference is unexpectedly nil!
-[TSTTableDataStore conditionalStyleSetDataList]
Conditional style datalist reference is unexpectedly nil!
Fatal Assertion failure: %{public}s %{public}s:%d String datalist reference is unexpectedly nil!
-[TSTTableDataStore stringDataList]
String datalist reference is unexpectedly nil!
Fatal Assertion failure: %{public}s %{public}s:%d Style datalist reference is unexpectedly nil!
-[TSTTableDataStore styleDataList]
Style datalist reference is unexpectedly nil!
Fatal Assertion failure: %{public}s %{public}s:%d Formula datalist reference is unexpectedly nil!
-[TSTTableDataStore formulaDataList]
Formula datalist reference is unexpectedly nil!
Fatal Assertion failure: %{public}s %{public}s:%d Control cellspec datalist reference is unexpectedly nil!
-[TSTTableDataStore controlCellSpecDataList]
Control cellspec datalist reference is unexpectedly nil!
v16@?0@"TSTTableDataList"8
Fatal Assertion failure: %{public}s %{public}s:%d Formula error datalist reference is unexpectedly nil!
-[TSTTableDataStore formulaErrorDataList]
Formula error datalist reference is unexpectedly nil!
Fatal Assertion failure: %{public}s %{public}s:%d Rich text datalist reference is unexpectedly nil!
-[TSTTableDataStore richTextDataList]
Rich text datalist reference is unexpectedly nil!
-[TSTTableDataStore richTextDataList]_block_invoke
Expected non-nil richTextParentInfo back pointer. Should have been set at initialization.
Fatal Assertion failure: %{public}s %{public}s:%d Format datalist reference is unexpectedly nil!
-[TSTTableDataStore formatDataList]
Format datalist reference is unexpectedly nil!
Fatal Assertion failure: %{public}s %{public}s:%d Comment storage datalist reference is unexpectedly nil!
-[TSTTableDataStore commentStorageDataList]
Comment storage datalist reference is unexpectedly nil!
Fatal Assertion failure: %{public}s %{public}s:%d Import warning datalist reference is unexpectedly nil!
-[TSTTableDataStore importWarningSetDataList]
Import warning datalist reference is unexpectedly nil!
Fatal Assertion failure: %{public}s %{public}s:%d Pre-BNC format datalist reference is unexpectedly nil!
-[TSTTableDataStore preBNCFormatDataList]
Pre-BNC format datalist reference is unexpectedly nil!
-[TSTTableDataStore addPasteboardCustomFormat:toDocument:updatingPasteboardFormat:]
The pasteboard should have had every custom format.
-[TSTTableDataStore copyPasteboardCustomFormatsFromDataStore:]
_pasteboardCustomFormatList
-[TSTTableDataStore makePasteboardCustomFormatList]
-[TSTTableDataStore setupEmptyPasteboardCustomFormatList]
v16@?0@"TSTTableHeaderStorageBucket"8
v16@?0@"TSTMergeRegionMap"8
v16@?0@"TSKCustomFormatList"8
v28@?0I8@"TSKFormat"12^B20
%@, key:%d, cellCount:%d, datalist count:%d
%@, key:%d, cellCount:%d, datalist count:0
v32@?0@"TSTTableDataList"8^v16@"NSString"24
condStyles
strings
styles
cellSpecs
f-errors
rich text
formats
comments
imp warns
DataList RefCount Audit good:%d bad:%d dead:%d
Datalist Duplication Audit
Conditional Styles list has dupes.
Strings List has dupes.
Styles List has dupes.
Formula List has dupes.
Control Cell Spec List has dupes.
Format List has dupes.
Import Warnings List has dupes.
ColumnRowCellCount Audit
Cell count mismatch at row %d: header has %td, row has %td
Cell count mismatch at column %d: header should have %td, has %td
-[TSTTableDataStore updateDataListsConcurrentlyWithConcurrentCellMap:clearImportWarnings:]_block_invoke
v24@?0@"TSTCell"8@"TSTCell"16
-[TSTTableDataStore updateDataListsConcurrentlyWithConcurrentCellMap:clearImportWarnings:]_block_invoke_2
-[TSTTableDataStore updateDataListsConcurrentlyWithConcurrentCellMap:clearImportWarnings:]_block_invoke_3
-[TSTTableDataStore updateDataListsConcurrentlyWithConcurrentCellMap:clearImportWarnings:]_block_invoke_4
-[TSTTableDataStore updateDataListsConcurrentlyWithConcurrentCellMap:clearImportWarnings:]_block_invoke_5
-[TSTTableDataStore updateDataListsConcurrentlyWithConcurrentCellMap:clearImportWarnings:]_block_invoke_6
cells[idx]
v40@?0B8@"TSKFormat"12I20@"NSIndexSet"24^v32
-[TSTTableDataStore setCellsConcurrently:tableUID:calculationEngine:conditionalStyleOwner:ignoreFormula:clearImportWarnings:]_block_invoke
the newCells array and the set of column indexes should be the same size
{vector<long, std::allocator<long>>=^q^q{__compressed_pair<long *, std::allocator<long>>=^q}}40@?0@"TSTTableTileRowInfo"8^v16^v24^v32
-[TSTTableDataStore setCellsConcurrently:tableUID:calculationEngine:conditionalStyleOwner:ignoreFormula:clearImportWarnings:]_block_invoke_2
newFormulaSpec
v18@?0{TSUModelColumnIndex=S}8q10
v36@?0{TSUModelRowIndex=I}8q12@"TSTTableTile"20@"TSTTableTileRowInfo"28
v32@?0@"TSTTableTile"8@"NSMutableIndexSet"16^B24
-[TSTTableDataStore accumulateCurrentCellsConcurrentlyInRow:rowInfo:atColumns:usingCellCreationBlock:]
-[TSTTableDataStore tsceValueFromCell:atCellID:tableUID:]
unhandled table cell type found
-[TSTTableDataStore tsceValueForCellStorageRef:cellCoord:hostTableUID:outValue:]
Can't get a value from a null cell reference!
TSUDecimal TSTCellStorageDecimalValue(TSTCellStorage *)
Asked for TSUDecimal value from an inappropriate cell.
BOOL TSTCellStorageBoolValue(TSTCellStorage *)
Asked for bool value from non-bool cell.
double TSTCellStorageRawDateValue(TSTCellStorage *)
Asked for date value from non-date cell.
-[TSTCommentHosting initWithStorage:forTableInfo:cellUID:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCommentHosting.mm
Expecting valid cell UID!
-[TSTCommentHosting initWithStorage:forTableInfo:baseCellCoord:]
Expecting valid cell ID!
%@@(%@, %@)
TSTTextCellColumnAutocomplete
TSTLastKeyboardWasNumberUserDefault
-[TSTFormulaRewriteSpec initFromMessage:unarchiver:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTFormulaRewriteSpec.mm
Move rewriteSpec should have AUX rowColumnInfo in archive
Sort/Reorder rewriteSpec should have AUX rowColumnInfo in archive
TSTStylePropertyArchiving.proto
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/messages/src/TSTStylePropertyArchiving.pb.cc
-[TSTArchivedAutofillSelection setSelection:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTArchivedAutofillSelection.mm
Wrong type of class %@ (expected TSTAutofillSelection)
-[TSTTableRep hyperlinkRegions]_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTTableRep.mm
Bounds of hyperlink {%@} are not finite
v16@?0^{CGContext=}8
v16@?0@"TSDTexturedRectangle"8
+[TSTTableRep p_countOfIdenticalCellsBetweenOutgoingTableInfo:incomingTableInfo:]
numberOfColumns not equal!
+[TSTTableRep magicMoveAttributeMatchPercentBetweenOutgoingObject:incomingObject:mixingTypeContext:]
equalCellCount(%d) > totalCellCount(%d)!
delegate
void TSTTableRepPrepareToDrawLayoutSpace(TSTTableRep *__strong _Nonnull, TSTLayoutSpace *__strong _Nullable, CGContextRef _Nullable)
space
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}
WARNING: invalid cell fill %@ %@
v32@?0@8@16^B24
-[TSTTableRep p_drawGroupingArrowInContext:contentFrame:cell:cellID:groupingArrowState:alignedClipFrame:verticalAlignment:wpColumn:]
should only be called on grouping cells
should only be called on tables that are grouped
{%@->%@}
{invalid, invalid}
{invalid, %u}
{%u, invalid}
{%u, %u}
TSTCellRange TSTTableRepDrawIndividualCellContent(TSTTableRep *__strong, TSTLayoutSpace *__strong, TSTGridRange, TSTCell *__strong, TSTCellID, __strong id, __strong id<TSTCellIteratorData>, TSTCellRange, BOOL, NSMutableArray<TSTTableBadge *> *__strong, BOOL, TSWPSelection * _Nullable __strong, CGContextRef)
No TSWPColumn layout rock found.
void TSTTableRepDrawGridRange(TSTTableRep *__strong, TSTLayoutSpace *__strong, TSTGridRange, TSTAnimation *__strong, CGContextRef)
background fill is not supported yet
yyFlexLexer::yylex invoked but %option yyclass used
virtual int TSTDefaultLexer::yylex()
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTDefaultLexer.lmm
Unable to lex tokenAttachment.
fatal flex scanner internal error--no action found
fatal flex scanner internal error--end of buffer missed
fatal error - scanner input buffer overflow
input in flex scanner failed
out of dynamic memory in yy_get_next_buffer()
flex scanner push-back overflow
out of dynamic memory in yy_create_buffer()
out of dynamic memory in yyensure_buffer_stack()
out of memory expanding start-condition stack
start-condition stack underflow
Starting parse
Stack size increased to %lu
Entering state %d
Reading a token: 
Now at end of input.
Next token is
Shifting
int TSTyyparse(TSTParser *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTGrammar.ymm
Parser: the quoted string length is less than 2.
-> $$ =
Error: popping
Cleanup: discarding lookahead
Cleanup: popping
token %s (
nterm %s (
%d.%d-%d.%d
$end
$undefined
TOK_LPAREN
TOK_RPAREN
TOK_LBRACK
TOK_RBRACK
TOK_ARG_SEPARATOR
TOK_DOUBLE_COLON
TOK_UNKNOWN
TOK_IN
TOK_LET
TOK_UNQUOTED_IDENTIFIER
TOK_QUOTED_IDENTIFIER
TOK_AGG_IDENTIFIER_WITH_PARENS
TOK_UNQUOTED_IDENTIFIER_WITH_PARENS
TOK_WS
TOK_QUOTEDSTRING
TOK_FUNCTION_TOKEN
TOK_FUNCTION_END_TOKEN
TOK_NUMBER
TOK_BOOLEAN_TOKEN
TOK_DATE_TOKEN
TOK_DURATION_TOKEN
TOK_VARIABLE_TOKEN
TOK_IDENTIFIER_TOKEN
TOK_ARRAY_LINE_DELIMITER
TOK_REFERENCE_TOKEN
TOK_STRING_TOKEN
TOK_ARGUMENT_PLACEHOLDER_TOKEN
TOK_EMPTY_TOKEN
TOK_COLON
TOK_LESS_OR_EQUAL
TOK_GREATER_OR_EQUAL
TOK_GREATER_THAN
TOK_LESS_THAN
TOK_NOT_EQUAL
TOK_EQUALS
TOK_AMPERSAND
TOK_MINUS
TOK_PLUS
TOK_DIV
TOK_TIMES
TOK_POWER
TOK_PIPE
TOK_PERCENT
UPLUS
UMINUS
$accept
root
expr
unquoted_identifier_component
quoted_identifier_component
identifier_component
identifier
reference
piped_reference_list
list
array
list_of_array_rows
list_head
expr_opt
function
Reducing stack by rule %d (line %lu):
   $%d = 
Stack now
Deleting
virtual int TSTCommaLexer::yylex()
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/iWorkImport-460/quicklook/iwork/src/shared/tables/TSTCommaLexer.lmm
_TtP8TSTables35TSTFixedColumnWidthGeometryProvider_
d24@0:8d16
$s8TSTables35TSTFixedColumnWidthGeometryProviderP
TSTFormulaAdditions
TSTGroupNode
TSTCellSelection
TSDTextSelection
NSObject
TSTRefParser
TSCERefParsingProtocol
TSTFormsSheetProvider
TSTTableModel
TSDMixing
TSTCompatibilityVersionProviding
TSTCustomStrokeProviding
TSTStyleProviding
TSTTableStrokeProviding
TSTTableTileCreating
TSTMutableCellIteratorData
TSTCellIteratorData
TSTTableTile
TSTWidthHeightCollection
TSTCellRangeControlSpec
TSTResolverContainerNameProvider
TSCECalculationEngineRegistration
TSKModel
TSTTableInfo
TSDContainerInfo
TSDInfo
TSPCopying
TSDInfoUsingObjectPlaceholderGeometry
TSKSearchable
TSSPresetSource
TSSStyleClient
TSCEColumnRowUIDMapping
TSTTableHiddenRowColumnProviding
TSTAdditionalHiddenRowColumnProviding
TSTTableInternalGeometryProviding
TSTTableMergeRangeProviding
TSWPStorageParent
TSWPTextStatisticsTrackerProvider
TSSPropertySource
CellMap
TSTRichTextReferenceWrapper
TSTCellIterating
TSTMergeListWrapper
TSTUIDRectRef
NSCopying
TSTCellIterator
TSTCellStyle
TSTInNode
TSTCSEData
TSTPivotTranslator
TSTStockDetails
TSTTableTileRowInfo
TSTExpandCollapseState
TSTCellFormulaSpec
TSCEFormulaReturning
TSTGroupingColumnList
TSTAdditions
TSTGroupBySet
TSTCellDiff
TSTConcurrentCellMap
TSTCellMapChangeDescriptorDelivering
TSTConcurrentCellList
TSTConcurrentSparseCellList
TSTCellDiffArraySegment
TSTStructuredTextImportRecord
TSTTableDataList
Type_Specific_API
Upgrade
TSTTableStyle
TSTArchivedCellSelection
TSKArchivedSelection
TSTArchivedRdar39989167CellSelection
TSTColumnAggregate
TSTTableTileStorage
TSTTableHeaderStorage
TSTEphemeralFilter
TSTTableHeaderStorageBucket
TSTFormulaStore
Analytics
TSTLayoutProcessChangesActions
TSWPStyleProviding
TSTLayout
TSWPColumnMetrics
TSWPLayoutParent
TSWPStorageObserver
TSTAccumulator
1qBA
TSTColumnAggregateList
Helper
TSTRangeRefPair
TSTRefNamer
TSCERefNamingProtocol
TSTCellDiffArray
TSTWPTableInfo
TSTStrokeSidecar
TSTStrokeSidecarLookupMap
TSCellRangeCache
TSTTableInfoHint
TSDDrawableContainerInfo
TSDReplaceableMediaContainer
TSDReducibleImageContainer
TSDCompatibilityAwareMediaContainer
TSDSelectableHintMediaContainer
TSTLayoutSpace
TSTCoordinateArray
TSTCellWillChangeProtocol
TSTCellWillChangeDistributor
TSTMergeChangeProtocol
TSTMergeChangeDistributor
TSTFormulaTokenContext
TSTVariableNode
TSTWPFormulaSelection
TSTWPFormulaArchivedSelection
TSTWPFormulaFieldSelection
TSTCellRegionGatherer
TSTAggregator
TSTTableStylePreset
TSSPreset
TSTHiddenStateIndexSet
TSTTableStrokePreset
TSTTableStyleNetwork
TSTLocalStylesKey
TSTLocalAccumulator
TSTTableArchivedControlCellSelection
TSTTableStrokePresetList
TSTTableStrokePresetData
TSTArchiving
TSTLayoutCellIterator
TSTExpressionNode
TSTFormulaToken
TSTFormula
TSTFormulaHelperMethods
ValidationSidecarAdditions
TSTCellChooserControlSpec
TSTHiddenStateFormulaOwner
TSTOperatorNode
TSTStrokeSelection
TSTCustomFormatListUpgradeHelper
TSTCustomFormatListReferenceWrapper
TSTTableControlCellSelection
TSTNumberNode
TSTCell_PreBNC
TSTCellMap
TSTCellMapIterator
TSTCellList
TSTStrokeWidthCache
TSTTableNameSelection
TSTColumnRowUIDMap
TSTImmutableColumnRowUIDMap
TSTCategoryOwner
TSTAggNode
TSTFunctionNode
TSTLetNode
TSTSummaryModel
TSTGroupByChangeProtocol
TSTSummaryModelGroupByChangeState
TSTRWRetainedPointerKeyDictionary
TSTCellToggleControlSpec
TSTStrokeOrderedLayerToken
TSTStrokeLayerStrokeAndRange
TSTStrokeOrderedLayer
TSTFormulaPredArgData
TSTFormulaPredArg
TSTHiddenStatesOwner
TSTBooleanNode
TSTArrayNode
TSTListNode
TSTGroupNodeFormatManager
TSTWPLayout
TSTStringNode
TSTCellUIDRegion
TSTDateNode
TSTReferenceNode
TSTStarRatingRenderer
TSTPencilAnnotation
TSKPencilAnnotation
TSTDurationNode
TSTArgumentPlaceholderNode
TSTPostfixOperatorNode
TSTStrokeDefaultVendor
TSTUidCoordsForLevelAndType
TSTUidCoordsPerGroupValueTuple
TSTUidCoordsPerRunningCellValue
TSTRunningTotalContext
TSTPrefixOperatorNode
TSTFunctionEndNode
TSTCellFormatAndValue
TSTCellDiffing
TSSPropertyCommandSerializing
TSTLayoutValidationBundle
TSTPivotOwner
TSCEFormulaOwning
TSCETableNameChangeProtocol
TSTWPRep
TSTHiddenStates
TSTStrokeSidecarIterator
TSTCellRegionIterating
TSTMutableCellIteratorDataUpdating
TSTGroupBy
TSTCellUIDLookupListWrapper
TSTTableGroupSortRuleUID
TSTEmptyExpressionNode
TSTCellBorder
TSTStrokeLayerEnumerating
TSTStrokeLayerAbstractStack
TSTStrokeLayerStack
TSTStrokeLayerMergedStack
TSTStrokeExporter
TSTUniqueValuesToRows
TSTHiddenStateExtent
TSTMergeOwner
TSTCellSpec
TSTSortRuleReferenceTracker
TSTAutofillSelection
TSTLayoutEngine
'2R2
TSTLayoutHint
TSDHint
TSTArchivedLayoutHint
TSDArchivedHint
CellDiffAdditions
TSTTablePartitionerParticipating
TSTTablePartitioner
TSDPartitioner
TSTLayoutSpaceBundle
TSTTableDataListSegment
TSTConcurrentCellIterator
TSTConcurrentCellIteratorFourArgRock
TSTMergeAction
TSTCellUIDList
TSTCellUIDIterator
TSTGroupByChangeDelayedNotification
TSTGroupByChangeDistributor
TSTTableTileGroup
TSTMergeRegionMap
TSTFormulaRewrite_PivotInfo
TSTPencilAnnotationOwner
TSTPivotGroupingColumnOptions
TSTPivotGroupingColumnOptionsMap
TSTWidthHeightCache
TSTChangeDescriptor
TSTCustomFormatList
TSTTextEngineDelegate
TSWPTextDelegate
TSTTableSortOrder
TSTLayoutTask
TSTConcurrentMutableCellUIDSet
TSTCellStateForLayout
TSTWPTokenAttachment
TSTPivotRowColumnOrder
TSTCompletionToken
TSTStrokeLayerToken
TSTStrokeLayer
NSMutableCopying
TSTMutableStrokeLayer
TSTConcurrentStylesheetKey
TSTConcurrentStylesheet
TSTAnimation
TSTFontInfoCacheEntry
TSTFontInfoCache
TSTIndexingChunk
TSTHeaderNameMgrTile
TSTHeaderNameSubset
TSTHeaderNameMgr
TSCEHeaderNameProtocol
TSTCellDiffMap
TSTTableSortRule
TSTTableViewSortRule
TSTGroupValueTuple
TSTCheckboxRenderer
TSTMergeRangeSortedSet
TSTLayoutContentCachedKey
TSTLayoutDynamicResizeInfo
TSTLayoutDynamicResizeInfoProtocol
TSTColumnRowUIDMapper
TSTCategoryStoreIterator
Q"!Q
ReferenceResolving
TSCEReferenceResolving
TablesAdditions
TSTCategoryAggregateFormulaOwner
TSTRichTextPayload
TSTSummaryCellVendor
TSTTableFilterRule
TSTTableFilterSet
TSTFormulaPredicate
TSTArchivedStrokeSelection
TSTTableBadge
BadgeRendering
TSTCellRegion
ModelCoordinateSupport
ViewCoordinateSupport
TSTMutableCellRegion
TSTCellRegionRowMajorIterator
TSTCellRegionColMajorIterator
TSTCellRegionRowMajorReverseIterator
TSTCellRegionColumnMajorReverseIterator
TSTTableTranslator
TSCETableTranslatorProtocol
TSTStrokeExportCache
TSTIdentifierNode
TSTTableHeaderInfo
TSTTemporaryCollectionNode
TSTConditionalStyleRule
TSTConditionalStyleSet
TSTConcurrentMutableIndexSet
TSTConditionalStyleFormulaOwner
TSTLayoutDynamicResizeInfoUnify
TSTLayoutDynamicResizeInfoAccordion
TSTCategoryOrder
TSTPasteMap
TSTTableSortTag
ChangeGroups
TSTColumnRowMetadata
TSTContentComposingIterator
Reorganize
TSTCategoryTranslator
TSTFilteredTableDynamicContentDelegate
TSTLayoutDynamicContentProtocol
TSTHiddenRowsColumnsCacheValidationCollection
TSTHiddenRowsColumnsCache
Coercion
TSTDataStoreIterator
TSTArchivedLayoutEngineBundle
TSTFormulaEqualsTokenAttachment
TSTFormulaEqualsTokenAttachmentRenderer
TSWPGraphicalAttachmentRenderer
FormulaAdditions
TSTArchivedTableNameSelection
TSTPerformanceLogging
TSTGroupingColumn
TSTConvertFormulasForCategoriesByRewritingWrapper
TSTPivotStoreIterator
FormulaOwner
TSTStrokeAssociatedObject
TSTTableResolverFactory
TSCETableResolverFactoryProtocol
TSCEResolverLocatingProtocol
TSTImportWarningSet
TSTImportWarningSetByCellRef
TSTWrappedFormula
TSTChartReferenceFormula
TSTPopUpMenuModel
TSUMultipleChoiceListChoiceProviding
TSTTableDataObject
TSTTableDataCommentStorage
TSTTableDataConditionalStyleSet
TSTTableDataCustomFormat
TSTTableDataFormat
TSTTableDataCellSpec
TSTTableDataFormulaError
TSTTableDataImportWarningSet
TSTTableDataMultipleChoiceList
TSTTableDataRichText
TSTTableDataString
TSTTableDataStyle
TSTTableDataPayload
TSTCellDictionary
TSTDupContentCache
TSTWPColumnCache
TSTCell
TSTTableGroupSortOrderUID
TSTTableDataStore
TSTCellReorganizeValue
TSTCommentStorageWrapper
TSTLayoutSpaceBezierPathCacheKey
TSTLayoutSpaceBezierPathCache
TSTCommentHosting
TSDComment
TSDAnnotation
TSKAnnotation
TSTConfiguration
TSTFormulaRewriteSpec
TSTArchivedAutofillSelection
TSTTableRepProcessChangesActions
TSTTableRep
TSWPRepParent
TSDContainerRep
TSTTableRepInternal
UITextFieldDelegate
CALayerDelegate
TSTPdfTagger
TSKPdfTagger
TSDMasterDrawableDelegate
context
firstIndex
lastIndex
initWithContext:functionNode:firstIndex:lastIndex:
functionNode
children
count
arrayWithCapacity:
countByEnumeratingWithState:objects:count:
tokenAttachment
objectForKey:
expressionNode
deepCopyIntoContext:bakeModes:withTokenDict:
addObject:
arrayWithArray:
setChildren:
documentRoot
stylesheet
i_copyIntoContext:stylesheet:paragraphStyle:listStyle:bakeModes:resettingHostTableToMatch:referenceColorHelper:disableMenus:
string
writingDirectionForParagraphAtParIndex:
initWithContext:string:kind:stylesheet:paragraphStyle:listStyle:section:columnStyle:paragraphDirection:
defaultParagraphStyle
defaultListStyle
length
stringWithUTF8String:
handleFailureInFunction:file:lineNumber:isFatal:description:
logBacktraceThrottled
range
attachmentIndexRangeForTextRange:
initWithCapacity:
attachmentAtAttachmentIndex:outCharIndex:
tokenType
removeObject:
p_processEndNode:startNode:bakeModes:tokenDict:
initWithContext:expressionNode:
copyIntoContext:bakeModes:
isLocalReference
tableUID
setHostTableUID:
baseBoundingBox
basePreserveFlags
setBaseRangeRef:preserveFlags:
setReferenceColorHelper:
suppressReferenceOptionsMenu
setObject:forUncopiedKey:
functionEndNode
setNeverShowsMenu:
characterAtIndex:
deleteRange:undoTransaction:
replaceCharactersInRange:withString:undoTransaction:
insertAttachmentOrFootnote:range:
anyObject
attachmentAtCharIndex:
performBlockIgnoringModifications:
enumerateAttachmentsOfClass:inTextRange:usingBlock:
stringWithFormat:
exceptionWithName:reason:userInfo:
isEqualToString:
isEqualToExpressionNode:
letString
p_rangeOfString:orNodeClass:range:
inString
whitespaceAndNewlineCharacterSet
characterIsMember:
takeText:withLanguage:
replaceText:withLanguage:atRange:
setLanguage:forCharRange:undoTransaction:
insertUIGraphicalAttachment:withLanguage:
stringWithFormulaPlainTextFromRange:
p_stringWithFormulaAsTextFromRange:returningTokenValues:
stringWithFormulaDetokenizedTextFromRange:
detokenizedText
appendString:
formulaPlainText
appendFormat:
p_detokenizeEverythingInRange:
p_detokenizeTokenAtCharIndex:
p_replaceTokenAtCharIndex:withText:
componentsSeparatedByString:
firstObject
p_replaceUnknownDirectionText:atRange:
subarrayWithRange:
p_replaceMixedDirectionText:atRange:
mutableCopy
alphanumericCharacterSet
documentLocale
isLanguageFormulasDirectionRightToLeft
replaceText:atRange:
substringToIndex:
deleteCharactersInRange:
i_copyIntoContext:stylesheet:
hasDamagedTokenAttachments
isFormulaSyntaxErrorEqual:
rangeOfLetWithinRange:
rangeOfInWithinRange:
previousNonWhitespaceOrNewlineIndexStartingAtIndex:
nextNonWhitespaceOrNewlineIndexStartingAtIndex:
takeText:
insertUIGraphicalAttachment:
stringWithFormulaPlainText
stringWithFormulaDetokenizedText
detokenizeEntireStorage
canonicalKeyString
UTF8String
groupByRootUid
groupValueUid
groupUid
groupValueTuple
groupValueTupleByAppendingValue:
initWithValueArray:
computedGroupValueTuple
groupBy
isForPivotTable
hiddenStates
rowHiddenStateExtent
hasActiveFilters
mutableFilteredIndexes
containsIndexes:
rowCount
initWithGroupCellValue:groupBy:atLevel:groupUid:children:
init
setParentNode:
initWithCellValue:
cellValue
currentLocale
cellValueWithArchive:locale:
addRowUid:
initWithArchive:forGroupBy:atLevel:
groupNodesByGroupUid
groupCellValue
setObject:forKey:
enumerateRowUidsWithBlock:
aggNodeForAggFormulaCoord:
setGroupNode:
addAggNode:
initWithArchive:forGroupBy:
dealloc
removeObjectForKey:
copy
encodeCellValueToArchive:
safeChildren
encodeToArchive:backwardCompat:
aggNodes
formulaCoord
encodeToArchive:forGroupBy:backwardCompat:
valueType
lookupKeyForRowUID:
foreachUuid:
setGroupBy:
setLocale:
customFormatList
updateWithCustomFormatList:
updateWithDocumentRoot:
removeAllObjects
addChild:withKey:
hasUnfilteredRows
addUUID:
p_addChildGroupUidsIntoSet:recursively:skipFiltered:
groupByUid
initWithGroupByUID:absGroupUid:columnUid:aggType:groupLevel:
groupLevel
canonicalKeyStringAtLevel:
findGroupNodeForValue:atLevel:locale:
componentAtIndex:
wordAtIndex:
hasPreserveFlag
trimmedStringStartingAtWord:
localizedBlankGroupName
caseInsensitiveCompare:
localizedErrorGroupName
localizedTrueGroupName
localizedTrueGroupNameForColumn
localizedFalseGroupName
localizedFalseGroupNameForColumn
locale
lowercaseStringWithLocale:
normalizedStringForCompare:
localizedStringForCellValue:categoryLevel:groupBy:
findGroupNodeForDisplayValuesFromSplitter:atLevel:startAtComponent:startAtWord:preserveFlags:
groupValueTupleByReplacingValue:atLevel:
mapPreviousGroupNodeUid:toUpdatedGroupNodeUid:
addChangesTo:forReplacingValue:atLevel:
groupValueTupleByRemovingValueAtLevel:
numberOfLevels
addChangesTo:forRemovingValueAtLevel:
groupValueTupleByPromotingValueAtLevel:toLevel:
addChangesTo:forPromotingValueAtLevel:toLevel:
groupValueTupleByDemotingValueAtLevel:toLevel:
addChangesTo:forDemotingValueAtLevel:toLevel:
groupValueAtLevel:
mergedFormatChangedByAddingRowUID:andCellValue:groupBy:
p_refreshGroupValue
didAddRowUID:toGroup:
prefixTupleToLevel:
didAddGroupNode:
insertRowUid:atRowIndex:forGroupValueTuple:atLevel:withLocale:createdGroupNodeCount:
aggregators
aggNodeForGroupNode:
isRebuildFormulasDeferred
setNeedsRebuildOfAggFormulas:
rebuildFormulasForAggNode:
containsRowUid:
mergedFormatChangedByRemovingRowUID:groupBy:
didRemoveRowUID:fromGroup:
removeRowUid:forGroupValueTuple:atLevel:withLocale:
willRemoveGroupNode:
removeChildForKey:
clearAllGroupNodes
allKeys
findKeyForRowUid:
removeRowUids:
categoryOwner
aggregator
columnUid
aggNodeForColumnUid:
addChild:
enumerateDirectChildren:
tableModel
cellRefsForRowIndexes:tableUID:
referenceToHiddenStateFromRow:toRow:
columnRowUIDMap
rowUidsAsVector
rowIndexesForUIDs:
cellRefsForAggNodesAtGroup:
anyAggregateTypeForColumnUID:
calcEngine
minion
emptyReferenceSetWrapper
insertCellRef:
insertRangeRef:
hiddenStatesChangedPrecedent
replaceFormulaAt:inOwner:precedents:replaceOptions:
removeFormulaAt:inOwner:
markCellRefAsDirty:
markOnlyDependentsDirty:
rowUIDForLookupKey:
uuidsAsVector
containsUuid:
reset
removeAllRowUids
clearEmptyNodes
parentNode
stringByReplacingOccurrencesOfString:withString:
localizedNameForBlankGroupForDocumentLocale:
localizedNameForErrorGroupForDocumentLocale:
tsceValue
tableInfo
columnDisplayNameForCategoryLevel:
localizedTrueStringForBooleanGroupWithString:documentLocale:
localizedFalseStringForBooleanGroupWithString:documentLocale:
trueString
falseString
displayString
errorValue
isCircularReferenceError
initWithString:locale:
localizedStringForKey:value:table:
compactQualifiedColumnNameForAggregateIndex:locale:
groupValueHierarchyStringWithDelimiterString:
groupValueHierarchyStringWithDelimiterString:namingContext:
quoteComponents
forFormulaPlainText
tsce_internationalWhitespaceCharacterSet
rangeOfCharacterFromSet:
tsce_newStringByForcingSingleQuoteEscapes:
isLeaf
isGroupUIDCollapsed:
unfilteredDirectChildGroupUids
directChildGroupUids
firstUidFromUIDSet:isRows:
groupNodeForGroupUid:
firstVisibleNodeUsingColumnRowUIDMap:forDimension:leafLevel:pivotTableHiddenExtent:
enumerateAllGroupsWithStop:withBlock:
enumerateGroupsBetweenLevel:andLevel:withStop:withBlock:
enumerateGroupsBetweenLevel:andLevel:withBlock:
groupNodeForRowUid:atLevel:
needFormulasForAggregateType:
groupUuid
groupValueUuid
labelUid
initAsRootNodeForGroupBy:
isBlankNode
isErrorNode
uidReturn
childGroupUids
unfilteredChildGroupUids
aggregateRefForType:atLevel:forColumnUid:
groupValueRefAtLevel:
groupValueHierarchyRefAtLevel:
updateGroupCellValueIfKeyMatches:
markAsDirtyWithCalcEngine:
markDependentsAsDirtyWithCalcEngine:
pivotOnlyRowIndexes
containsAnyRowUidInRowUidSet:
groupValueCellValue
groupValueCellValueForGroupBySet:aggIndex:appendAggregateName:
groupValueHierarchyForChart:
groupValueHierarchyForChart:groupBySet:aggIndex:appendAggregateName:
groupHierarchyTreeAsFiltered:usingOrder:forDimension:
enumerateGroupsAtLevel:withStop:withBlock:
enumerateGroupsAtLevel:withBlock:
nodePath
.cxx_destruct
.cxx_construct
_groupUid
_groupCellValue
_cachedGroupValueTuple
_groupBy
_groupLevel
_aggNodes
_children
_childrenLock
_rowUidsIndexSet
_pivotOnlyRowIndexes
_parentNode
_formatManager
_childNodesByRowUid
_disconnectedRowUids
T@"TSTGroupBy",N,V_groupBy
T{TSKUIDStruct=QQ},R,V_groupUid
T{TSKUIDStruct=QQ},R
T@"NSUUID",R
T@"TSTGroupValueTuple",R,N
T@"TSCECellValue",R,&,N,V_groupCellValue
TC,R,N,V_groupLevel
TI,R,N
TB,R,N
T@"TSTGroupNode",N,V_parentNode
T@"TSCEUIDSet",R,N
T^v,R,N
initWithDouble:
initWithString:
initWithDate:
initWithDuration:units:
initWithCategoryRef:
initWithViewTractRef:
initWithCrossTableRef:
setUidTractList:
initAsBadRefWithTableUID:uidTractList:
initWithTableUID:uidTractList:
absoluteGroupUid
groupByForUID:withCalcEngine:
translator
rowUIDForBaseRowIndex:
setAbsoluteGroupUid:
astNodeArrayCopy
translationFlags
initWithNodeArray:translationFlags:
cellUIDRegionFromCellRegion:
cellUIDForCellID:
initWithTableInfo:cellUIDRegion:anchorCellUID:cursorCellUID:baseCellUIDRegion:selectionType:searchReferenceRange:beginImplicitEditing:
baseTableModel
cellUIDRegionFromRegion:inTableModel:
initWithTableInfo:cellRegion:anchorCellID:cursorCellID:baseRegion:selectionType:searchReferenceRange:beginImplicitEditing:
initWithTableInfo:cellRegion:anchorCellID:cursorCellID:baseRegion:selectionType:
regionFromRange:
initWithTableInfo:cellRegion:anchorCellID:cursorCellID:baseRegion:
expandCellRangeToCoverMergedCells:
initWithTableInfo:cellRegion:anchorCellID:cursorCellID:selectionType:
initWithTableInfo:cellRange:type:anchorCellID:cursorCellID:
numberOfColumns
numberOfRows
initWithTableInfo:startingRowIndex:numberOfRows:
initWithTableInfo:startingColumnIndex:numberOfColumns:
cellRegion
regionOffsetBy:
anchorCellID
cursorCellID
baseRegion
selectionType
suitableAnchor
suitableCursor
regionFromRowIndices:columnRange:
regionFromColumnIndices:rowRange:
initWithTableInfo:andCellID:
cellIDForCellUID:
selectionWithTableInfo:cellID:
initWithTableInfo:cellRegion:
initWithTableInfo:rowIndices:
initWithTableInfo:columnIndices:
firstCellID
versionCounter
cellRegionFromCellUIDRegion:
p_cacheCellRegion:
invalidRegion
p_cacheBaseRegion:
cellCount
isRectangle
containsSingleCellOrMergeInTable:
mergeOriginForCellID:
sizeClass
initFromMessage:
addFinalizeHandler:
saveToMessage:
setWeakReference:message:
setIgnoreAndPreserveUntilModifiedRuleForField:message:
enumerateCellRangesUsingBlock:
containsCellID:
regionByAddingRange:
regionBySubtractingRange:
selectionAdjustedForVisibilityInTableInfo:alwaysCheckColumns:
isValidForInteraction
intersectingColumnsIndexSet
selectionWithTableInfo:columnIndices:
p_selectionRemovingHiddenRowsInTableInfo:
isAPivotTable
intersectingRowsIndexSet
selectionWithTableInfo:rowIndices:
p_selectionRemovingHiddenColumnsInTableInfo:
indexesOfVisibleRowsInRowRange:
regionByTrimmingAroundRowIndices:
indexesForSummaryRows
indexOfVisibleRowAfterAndIncludingRowAtIndex:
indexOfVisibleRowBeforeAndIncludingRowAtIndex:
tsu_intersectsIndexesInIndexSet:
containsIndex:
indexSetWithIndex:
regionFromColumnIndexes:rowIndexes:
selectionWithTableInfo:cellRegion:
boundingCellRange
indexesOfVisibleColumnsInCellRange:
regionByTrimmingAroundColumnIndices:
indexesForSummaryColumns
indexOfVisibleColumnAfterAndIncludingColumnAtIndex:
indexOfVisibleColumnBeforeAndIncludingColumnAtIndex:
equalsCellRange:
isCategorized
isGroupingRowCollapsed:
rowRangeUnderSummaryOrLabelRow:
addIndexesInRange:
copyWithZone:
isMemberOfClass:
isEqualToSelection:
anchorCellUID
cursorCellUID
searchReferenceRange
beginImplicitEditing
equalsCellRegion:
tableAreaForCellID:
containsCellRegion:
isSingleCellOrMergeRange:
hasMergeFragmentAtCellID:
canEditWithControlCellSubselectionInTable:
cellAtCellID:
hasControl
interactionType
headerColumnRange
intersectsCellRange:
headerRowRange
bodyRowRange
bodyColumnRange
footerRowRange
indexesForCategoryColumnsInRegion:
indexesForSummaryRowsInRegion:
indexesForLabelRowsInRegion:
containsCellsInSummaryRow
containsCellsInLabelRow
containsCellsInCategoryColumn
containsCellsInSummaryOrLabelRows
indexesForGroupingColumnsInRegion:
intersectsCellRegion:
isEmpty
indexesForSummaryAndLabelRowsInRegion:
containsOnlySpecialCategoryCells
containsOnlySpecialPivotCells
numberOfIntersectingColumns
categoryColumnIndex
intersectsColumn:
regionBySubtractingColumnIndexes:
indexesForSummaryAndLabelRows
tsu_indexSetByIntersectingWithIndexes:
layoutEngine
visibleRowIndices
visibleColumnIndices
indexesForNonSummaryBodyRows
indexesForNonSummaryBodyColumns
containsOnlyCellsInSummaryRow
canEditWithCellSubselectionInTable:
boundingTopLeftCellID
mergeRangeAtCellID:
newCell
getCell:atCellID:
isCategoryColumn:
isSummaryRow:
description
mergeRangesIntersectingRange:
containsCellRange:
groupLevelForGroupUid:
aggregateTypeForColumnUID:atGroupLevel:
chromeRangeRefForViewRangeRef:
setSuppressIdenticalEndReference:
setUseSymbolicNames:
setAllowSpanningColumnReferenceBodyQualifier:
namer
nameForChromeRangeRef:namingContext:
selectionWithTableInfo:cellUID:
archivedSelectionClass
isEqual:
class
self
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
isProxy
isKindOfClass:
conformsToProtocol:
respondsToSelector:
retain
release
autorelease
retainCount
zone
hash
superclass
debugDescription
TQ,R
T#,R
T@"NSString",R,C
isAtEndOfLine
T{_NSRange=QQ},R,N
initForUpgradeWithTableInfo:cellRegion:anchorCellID:cursorCellID:baseRegion:selectionType:
initWithTableInfo:cellRegion:anchorCellID:cursorCellID:
initWithTableInfo:selectionType:
initWithTableInfo:andCellRange:
initWithTableInfo:cellID:selectionType:
initWithTableInfo:rowOrColumn:index:count:
initWithTableInfo:andPreviousSelection:offsetBy:
isValid
logicalCellIDInTable:
initWithArchive:unarchiver:
saveToArchive:archiver:
initWithRdar39989167Archive:unarchiver:
selectionByExtendingWithCellRange:inTable:selectionType:cursorCell:
selectionByAddingCellRange:inTable:withAnchor:cursor:selectionType:
selectionByRemovingCellRange:inTable:withAnchor:cursor:selectionType:
selectionAdjustedForVisibilityInTableInfo:
selectionAdjustedForGeometryInTableInfo:
setCellRange:
selectionToBeginImplicitEditingInTableInfo:
selectionExpandedToCoverCollapsedRows
insert:atIndex:count:
remove:atIndex:count:
areCellsInTheSameRegionInTable:
containsSelection:
containsCell:
selectsSingleControlCellWithInteractionUIInTable:
containsHeaderColumns
containsHeaderRows
containsBodyRows
containsBodyColumns
containsFooterRows
containsCellsInCategoryColumnsOrRows
containsCellsInCategoryGroupingColumn
containsGroupValueCells
containsOnlyCellsInCategoryColumn
containsOnlyCellsInSummaryAndLabelRows
containsOnlySpecialCategoryOrPivotCells
containsOnlyGroupValueCells
canEditWithStockCellSubselectionInTable:
briefDescription
intersectsPartialMergeRangeInTable:
getAggregateType:
cellSelectionNameForContextAndActionMenus
setSearchReferenceRange:
setTableInfo:
cellUIDRegion
setCellUIDRegion:
setAnchorCellUID:
setCursorCellUID:
baseCellUIDRegion
setBaseCellUIDRegion:
cachedCellRegion
setCachedCellRegion:
cachedCellRegionVersionCounter
setCachedCellRegionVersionCounter:
cachedBaseRegion
setCachedBaseRegion:
cachedBaseRegionVersionCounter
setCachedBaseRegionVersionCounter:
_beginImplicitEditing
_selectionType
_tableInfo
_cellUIDRegion
_baseCellUIDRegion
_cachedCellRegion
_cachedCellRegionVersionCounter
_cachedBaseRegion
_cachedBaseRegionVersionCounter
_searchReferenceRange
_anchorCellUID
_cursorCellUID
T@"TSTTableInfo",W,N,V_tableInfo
T@"TSTCellUIDRegion",&,N,V_cellUIDRegion
T{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}},N,V_anchorCellUID
T{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}},N,V_cursorCellUID
T@"TSTCellUIDRegion",&,N,V_baseCellUIDRegion
T@"TSTCellRegion",&,N,V_cachedCellRegion
TQ,N,V_cachedCellRegionVersionCounter
T@"TSTCellRegion",&,N,V_cachedBaseRegion
TQ,N,V_cachedBaseRegionVersionCounter
valid
TB,R,N,GisValid
T@"TSTCellRegion",R,N
Tq,R,N,V_selectionType
T{TSUCellCoord=ISBB},R,N
TQ,R,N
TB,R,N,V_beginImplicitEditing
T{_NSRange=QQ},N,V_searchReferenceRange
T@"NSString",R,N
readWeakReferenceMessage:class:protocol:completion:
whitespaceCharacterSet
initWithCellRef:
setWasConstructedViaNames:
uppercaseString
setOverrideText:
setPreserveFlags:
arrayWithObject:
contextTableResolver
hasPrefix:
substringFromIndex:
referenceIsComplete
tsce_stringByUnescapingSingleQuotes
tsce_stringByUnescapingPartialQuotedString
headerNameMgr
headerCellsMatching:limitToTable:includePrefixes:
tsce_stringByAddingSingleQuoteEscapesIfNecessary
setNamesUsed:
array
tableResolverForTableUID:
localizedCaseInsensitiveIsEqual:toString:
anyRefForRangeForHeaderCell:usePreserveFlags:
referenceTextWithCalculationEngine:hostTableUID:
filterColons
rangeOfString:
rangeReference
rangeRef
compare:options:range:locale:
tsce_stringByFoldingForNamedReferenceMatchingWithLocale:
referencesMatchingInputAsPrefix
tsce_referenceComponentsSeparatedBySpace
componentsJoinedByString:
abortObject
isAborted
spanningRangeForHeaderCell:
subsetForReferenceName:limitToTable:includePrefixes:
headerCellsExactlyMatching:
headerCellsMatchingPrefix:
allHeaderCellRefsLimitedToTable:
stringInHeaderCell:
initWithRangeRef:
tsce_stringByAddingSingleQuoteEscapes
tsce_needsReferenceSingleQuoteEscaping
setOverrideTextAsTyped:
p_parseStringAsGeometricReferenceComponent:inResolver:outPreserveFlags:gettingReferencesMatchingInputAsPrefix:
addObjectsFromArray:
objectAtIndex:
preserveFlags
p_chromeReferencesForMixedReferences:calcEngine:
wasConstructedViaNames
parseAsBaseTableReference
p_chromeRangeRefForBaseRangeRef:calcEngine:
sheetName
setSheetNameUnquoted:
tableName
setTableNameUnquoted:
sheetNameUnquoted
tableNameUnquoted
contextResolver
resolverContainerMatchingName:
resolverMatchingName:
resolverMatchingName:contextResolver:
contextSheetName
resolverMatchingNameWithContextContainer:contextContainerName:
rest
resolverUID
setTableUID:
parseAsChromeRefWithParsingContext:
tableResolverForRefResolver:
tsce_referenceComponentsSeparatedByColon
p_parseStringAsReferenceComponentIntersection:inResolver:inTableNamed:preferredGeometricResolver:withParsingContext:
setReferencesMatchingInputAsPrefix:
setReferenceIsComplete:
namesUsed
referenceTextForAutocompleteWithCalculationEngine:hostTableUID:preserveFlags:inputString:inputStringIsComplete:
referenceTextForAutocompleteWithCalculationEngine:contextSheetName:preserveFlags:inputString:inputStringIsComplete:
referenceTextWithCalculationEngine:contextSheetName:
stringByAppendingString:
initWithContextTableResolver:
setContextSheetName:
setFilterColons:
setAbortObject:
anyRef
tsce_referenceComponentsSeparatedByPathDelimiter
p_parseComponentsOfReference:gettingSheetName:gettingTableName:gettingRest:
trimNames
whitespaceCharSet
stringByTrimmingCharactersInSet:
setSheetName:
setTableName:
setRest:
parseStringAsChromeReference:withParsingContext:
p_baseReferencesForChromeReferences:calcEngine:
p_baseRangeRefForChromeRangeRef:calcEngine:
resolverForTableUID:
parseR1C1Coord:containingCell:preserveFlagsOut:
rangeOfString:options:
substringWithRange:
hasSuffix:
setCharactersToBeSkipped:
scanInt:
isAtEnd
trimmedString
tableInfoForTableUID:withCalcEngine:
columnUIDForBaseColumnIndex:
viewColumnIndexForChromeColumnIndex:
columnUIDForColumnIndex:
wasQuoted
refPathSplitter
numComponents
aggregateFunction
aggregateTypeForAggregateLabel:
numWords
rangeOfString:options:range:
setAggregateFunction:
removeRefPathWordAtIndex:
p_findFirstColumnNameInComponent:tableName:refResolver:calcEngine:outPreserveFlags:usedWordCount:
objectLocale
setLocalizedBlankGroupName:
setLocalizedErrorGroupName:
setLocalizedTrueGroupName:
setLocalizedFalseGroupName:
columnIndexForColumnUID:
chromeColumnIndexForViewColumnIndex:
nameForChromeColumnIndex:inTable:useSymbolicNames:
setLocalizedTrueGroupNameForColumn:
setLocalizedFalseGroupNameForColumn:
groupNodeForGroupValueHierarchyFromSplitter:startAtComponent:startAtWord:preserveFlags:
initWithReferenceString:
setRefPathSplitter:
parseAsCategoryRefWithParsingContext:
p_parseAsCategoryRefWithSheet:tableName:columnNameAndGroupValuesStartAt:withParsingContext:
p_baseReferenceForChromeReference:calcEngine:
overrideText
overrideTextAsTyped
p_chromeReferenceForBaseReference:calcEngine:
baseTractRefForChromeTractRef:
boundingRangeRef
chromeTractRefForBaseTractRef:
initWithCalcEngine:
parseStringAsBaseReference:withParsingContext:
parseR1C1Reference:containingCell:preserveFlagsOut:
parseStringAsCategoryRef:withParsingContext:
parseAsTractRefWithParsingContext:
setWhitespaceCharSet:
_calcEngine
_whitespaceCharSet
T@"NSCharacterSet",&,N,V_whitespaceCharSet
T@"TSCECalculationEngine",R,W,N,V_calcEngine
willModify
initWithBaseTableModel:
willModifyForUpgrade
tableStylePreset
theme
presetsOfKind:
presetID
setTableStylePreset:
enumerateObjectsUsingBlock:
makeStyleMapper
mapTableStylesToStylesheet:withMapper:
p_clearDefaultStyles
tableStyle
setTableStyle:
bodyCellStyle
setBodyCellStyle:
headerRowCellStyle
setHeaderRowCellStyle:
headerColumnCellStyle
setHeaderColumnCellStyle:
footerRowCellStyle
setFooterRowCellStyle:
categoryLevel1CellStyle
setCategoryLevel1CellStyle:
categoryLevel2CellStyle
setCategoryLevel2CellStyle:
categoryLevel3CellStyle
setCategoryLevel3CellStyle:
categoryLevel4CellStyle
setCategoryLevel4CellStyle:
categoryLevel5CellStyle
setCategoryLevel5CellStyle:
labelLevel1CellStyle
setLabelLevel1CellStyle:
labelLevel2CellStyle
setLabelLevel2CellStyle:
labelLevel3CellStyle
setLabelLevel3CellStyle:
labelLevel4CellStyle
setLabelLevel4CellStyle:
labelLevel5CellStyle
setLabelLevel5CellStyle:
bodyTextStyle
setBodyTextStyle:
headerRowTextStyle
setHeaderRowTextStyle:
headerColumnTextStyle
setHeaderColumnTextStyle:
footerRowTextStyle
setFooterRowTextStyle:
categoryLevel1TextStyle
setCategoryLevel1TextStyle:
categoryLevel2TextStyle
setCategoryLevel2TextStyle:
categoryLevel3TextStyle
setCategoryLevel3TextStyle:
categoryLevel4TextStyle
setCategoryLevel4TextStyle:
categoryLevel5TextStyle
setCategoryLevel5TextStyle:
labelLevel1TextStyle
setLabelLevel1TextStyle:
labelLevel2TextStyle
setLabelLevel2TextStyle:
labelLevel3TextStyle
setLabelLevel3TextStyle:
labelLevel4TextStyle
setLabelLevel4TextStyle:
labelLevel5TextStyle
setLabelLevel5TextStyle:
tableNameStyle
setTableNameStyle:
tableNameShapeStyle
setTableNameShapeStyle:
pivotBodySummaryRowCellStyle
setPivotBodySummaryRowCellStyle:
pivotBodySummaryColumnCellStyle
setPivotBodySummaryColumnCellStyle:
pivotHeaderColumnSummaryCellStyle
setPivotHeaderColumnSummaryCellStyle:
sharedPropertiesProvider
designModeEnabled
validateTableStylesInSameStylesheetExpectingDocSS:
initWithLocale:
initWithContext:
calculationEngine
sharedTableConfiguration
initWithOwner:
setStorageParentToInfo:
unnamedTableString
tableNameEnabledInNewTables
initWithTableModel:
initWithBaseTable:
initWithTableInfo:baseTableUID:context:
initWithBaseTableUID:
initWithContext:ownerUID:
initWithRules:type:
styleNetwork
rootAncestor
setStyleNetwork:
tableSizeClass
setShouldUseWideRows:
verifySubOwnerUIDsUsed
initWithContext:columnUIDs:rowUIDs:
initWithContext:tableUID:columnRowUIDMap:styles:stylePreset:tableInfo:
objectUUID
initWithContext:tableUUID:numberOfRows:numberOfColumns:
initWithContext:fromSourceModel:region:tableInfo:waitForCalcEngine:formulaCoordSpace:
regionByIntersectingRange:
networkFromStyleProvider:
blockUntilRecalcIsCompleteWithTimeout:
rowUIDsForRowRange:
columnUIDsForColumnRange:
initWithContext:rowUids:columnUids:styles:stylePreset:tableInfo:
fromTableUID
fromGroupByUID
repeatingHeaderRowsEnabled
repeatingHeaderColumnsEnabled
headerRowsFrozen
headerColumnsFrozen
tableNameEnabled
tableNameBorderEnabled
setTableNameBorderEnabled:
tableNameHeight
setTableNameHeight:
styleApplyClearsAll
setStyleApplyClearsAll:
defaultRowHeight
setDefaultRowHeight:
defaultColumnWidth
setDefaultColumnWidth:
heightOfRowAtIndex:isDefault:
setHeight:ofRowAtIndex:
widthOfColumnAtIndex:isDefault:
setWidth:ofColumnAtIndex:
sortOrder
mergeOwner
mergeRangesIntersectingBaseCellRegion:
tableAreaForBaseCellCoord:
insertBaseMergeRange:
pencilAnnotationOwner
formulaStore
rangeFromFormulaAtIndex:useBoundingRange:
pencilAnnotationStorage
copyWithContext:
initWithTableInfo:pencilAnnotationStorage:
addAnnotation:withAnchorRange:
enumerateAnnotationsAndFormulasContainedInRegion:withBlock:
dataStore
hasPasteboardCustomFormats
copyPasteboardCustomFormatsFromDataStore:
coordinateMapper
initForCategorizedTableBaseToChromeRewriterWithSrcTableUID:srcTract:dstTableUID:destTract:coordMapper:
cellID
cell
clearDataListIDs
hasFormulaSyntaxError
formulaSyntaxError
setFormulaSyntaxError:
hasRichText
richTextValue
setRichTextValue:
hasCommentStorage
commentStorage
setCommentStorage:
cellSpec
asChooserControlSpec
popupModel
startWithFirstItem
popupCellSpec:startWithFirstItem:
setCellSpec:
hasFormula
formulaObject
setFormulaObject:
hasConditionalStyle
conditionalStyle
conditionalStyleFormulaOwnerUID
copyByRewritingWithContext:rewriteBlock:
setConditionalStyle:
setCell:atCellID:tableUID:calculationEngine:conditionalStyleOwner:ignoreFormula:clearImportWarnings:doRichTextDOLC:
p_iterateDataStoreCellsInRegion:searchFlags:usingBlock:
strokeSidecar
setStroke:forTopOfRow:order:columnRange:
setStroke:forBottomOfRow:order:columnRange:
setStroke:forLeftOfColumn:order:rowRange:
setStroke:forRightOfColumn:order:rowRange:
enumerateStrokesInRegion:usingTopStrokeBlock:usingBottomStrokeBlock:usingLeftStrokeBlock:usingRightStrokeBlock:
flattenStrokeOrder
numberOfHeaderRows
rows
addRowRange:
removeRowRange:
isRecalculationStarted
recalculationIsPaused
columns
columnUIDsForColumnIndexes:
rowUIDsForRowIndexes:
initForUpgradeWithTableModel:
p_updateMergesAndCellsAsPivotDataWithSourceModel:sourceRegion:sourceBodyRegion:
setCalcEngine:
dropAllTargets
removeValueForProperty:
updateTableRowColumnStylesWithBlock:
replaceRowsWithUids:
replaceColumnsWithUids:
clearAllMergeRanges
updateCalcEngineForTableSize
removeAllFormulasFromOwner:
conditionalStyleFormulaOwner
ownerUID
resetAlmostEverything
resetAllColumnRowSizes
resetMergeCache
enumerateIndexesUsingBlock:
rowUIDForRowIndex:
rowIndexForRowUID:
distantFuture
distantPast
pairWithFirst:second:
indexSet
initWithTableModel:baseRegion:flags:searchFlags:
initWithContext:uidBased:
rockWithFirst:second:third:fourth:
first
currentFormat
currentFormatIsExplicit
setCurrentFormat:isExplicit:
boolValue
setBoolValue:
dateValue
setDateValue:
durationTimeIntervalValue
setDurationTimeIntervalValue:
numberDecimalValue
setNumberDecimalValue:
currencyDecimalValue
setCurrencyDecimalValue:
stringValue
setStringValue:
clear
addCell:andCellID:
second
objectAtIndexedSubscript:
earlierDate:
setFirst:
laterDate:
setSecond:
third
addIndex:
addIndexes:
enumerateModelConcurrentlyUsingChunkBeginBlock:concurrentBlock:finalBlock:
indexSetWithIndexesInRange:
removeIndexes:
removeRowsAtBaseIndexes:
enumerateCellsWithIDsUsingBlock:
markOwnerAsDirty:
dateGroupingTypeForMinMaxDatePair:
initWithTableModel:baseRegion:flags:searchFlags:baseClampingRange:
iterateCellsUsingBlock:
isIdentityMapping
mappedIndexForSourceIndex:
appendCellMap:precopied:
timeIntervalSinceDate:
currentCalendar
components:fromDate:
month
isReadCancelled
insertNewRowsInIndexRange:
insertNewColumnsInIndexRange:
initWithDelegate:
cellMapWithContext:
inflateFromStorageRef:dataStore:suppressingTransmutation:
enumerateCellStoragesRowByRowToMaxID:getPreBNC:withBlock:
setCellsWithBaseCellMap:ignoreFormulas:skipDirtyingNonFormulaCells:
auditTilesForRowOverlapAndExtensionPastTableBounds:result:
logTableTileAuditStatus:withVersion:
p_auditTilesForRowOverlapAndExtensionPastTableBoundsWithVersion:
auditDatalistDuplicationReturningResult:
auditColumnRowCellCountsReturningResult:hasUndercounts:
confirmRefCountsReturningResult:
setUpgrading:
upgradeDataStoreCellStorageIfNeededWithTableUID:conditionalStyleOwner:
repairStyleDatalistStylesheetIfNecessary
p_auditTableHealthUpgradingFromVersion:
p_rebuildTheTable:
shouldUseWideRows
p_upgradeDefaultCellStylesForStrokeSidecar
mergeRanges
indexesOfUserHiddenRowsInCellRange:
showRowAtIndex:forAction:
indexesOfUserHiddenColumnsInCellRange:
showColumnAtIndex:forAction:
upgradeConditionalStylesToLinkedRefWithTableUID:
archivingCompatibilityVersion
embiggenTableForUpgrade
viewCellRegionForBaseCellRect:
NRM_formulaOwnerUID
supportsControlCells
forceLoadHeaderStorages
baseCellCoordForViewCellCoord:
clearValue
willBeRemovedFromDocumentRoot:
wasRemovedFromDocumentRoot:
willBeAddedToDocumentRoot:dolcContext:
wasAddedToDocumentRoot:dolcContext:
hasMismatchedFormatAndValue
formatType
setNumberDoubleValue:
setDefaultFormatForValue
customFormat
clearFormatOfType:
processCustomFormatsWithBlock:
removeControlCellSpec
cellStyle
cellStyleForCellWithEmptyStyleAtBaseCellCoord:isDefault:
setCellStyle:
isVariation
parent
defaultCellStyleForBaseCellCoord:
propertyMap
variationOfStyle:propertyMap:
textStyle
textStyleForCellWithEmptyStyleAtBaseCellCoord:isDefault:
setTextStyle:
defaultTextStyleForBaseCellCoord:
addFunctionUsesInFormula:atCellRef:outContainsVolatileFunction:
copyByClearingUids:containingTableUID:
validateAndRepair
addCell:atViewCellCoord:
initWithTableInfo:region:flags:searchFlags:
initWithContext:viewCellRect:
appendCellLists:
enumerateConcurrentlyUsingChunkBeginBlock:concurrentBlock:finalBlock:
hasCells
convertToUuidBasedCellMapUsingTableInfo:pruneCategorizedCells:
willApplyToTable:
prepareToApplyConcurrentCellMap:
containsCellBorderChanges
accumulateCurrentCellsConcurrently:suppressCellBorder:
setCellsConcurrently:ignoreFormula:clearImportWarnings:formulaReplacer:
didApplyConcurrentCellMap:
validate
dirtyCellsUsingFunction:
generateCategoryStylesConnectedToStylesheet:
defaultCellStyleForTableStyleArea:
addStyle:withParent:identifier:shouldDoDOLC:
defaultTextStyleForTableStyleArea:
upgradeForNewAggregateTypes:
generatePivotStylesConnectedToStylesheet:
scheduleRepairingSpanningFormulasInOwner:
endTrackingNamesInTableForLegacyNRM:
fileFormatVersion
messageVersion
initWithArchive:unarchiver:owner:
tsp_stringWithProtobufString:
isFromCopy
isCrossAppPaste
initWithArchive:unarchiver:forBaseTable:
initWithTableModel:ownerUID:
initWithArchive:unarchiver:forTableModel:
initFromArchive:
initFromArchive:unarchiver:
initWithArchive:unarchiver:forBaseTableUID:
hasPreUFFVersion
nsTableUID
setTableModelDuringUnarchive:
unpackAfterUnarchive:
p_upgradeMerges
updateForTableSize:
tsp_isInDocument
saveToArchive:archiver:isInTheDocument:
setStrongReference:message:
presetNeedsStrongOwnership
tsp_protobufString
isForCopy
numberOfHiddenRows
numberOfUserHiddenRows
mutableFilteredRowIndexes
numberOfHiddenColumns
numberOfUserHiddenColumns
encodeToArchive:
encodeToArchive:archiver:
backwardCompatibleToPrePivot
requiresDocumentVersion:featureIdentifier:
hiddenStatesOwner
hauntedOwner
filterSet
ruleCount
setIgnoreAndPreserveUntilModifiedRuleForFieldPath:message:
setIgnoreAndPreserveRuleForField:message:
setMessageVersion:
requiresDocumentVersion:
bodyRange
setTableRange:bodyRange:forTableUID:
markIndirectCallsAsDirty
ownerKindForOwnerUID:
importSettings
type
summaryModel
aggregateFormulaOwnerUID
hiddenStateOwnerForRowsUID
hiddenStateOwnerForColumnsUID
initWithTableUID:pasteBoardTableUID:hiddenStateOwnerForRowsUID:hiddenStateOwnerForColumnsUID:conditionalStyleOwnerUID:sortRuleReferenceTrackerOwnerUID:mergeOwnerUID:pencilAnnotationOwnerUID:categoryAggregatesOwnerUID:groupByUID:
ownerUIDMapper
setToUpgradeMapping
needsSubOwnerIDUpgrade
verifySubOwnerUIDsUsed:
setToIdentityMapping
intValueForProperty:
valueForProperty:
metadataForRowIndex:hidingAction:uuid:
metadataForColumnIndex:hidingAction:uuid:defaultColumnWidth:
initWithKeyOptions:valueOptions:capacity:
sortOrderWithRules:type:
rules
updateForSortRules:
setBaseTableUID:
sortRuleReferenceTracker
aggregateFormulaOwner
stringFromNumber:
cellRangeForTableArea:givenTableSize:numberOfHeaderRows:numberOfFooterRows:numberOfHeaderColumns:
tableAreaForCellID:inTableWithHeaderColumns:headerRows:footerRows:totalRows:
numberOfHeaderColumns
actualHeaderColumnRange
topCornerRange
bottomCornerRange
tableStyleAreaForBaseCellCoord:
getDefaultCell:forTableStyleArea:
cellExistsAtCellID:
mightHaveCellBorderAtCellID:
cellBorderAtCellID:
setCellBorder:
hasContent
getCell:atBaseCellCoord:suppressCellBorder:
cellExistsAtBaseCellCoord:
getCell:atBaseCellCoord:
replaceFormula:atCellCoord:inOwner:replaceOptions:
hasFormulaAtCellID:
isEmptyForDataStore
maxNumberOfPopulatedCells
numberOfPopulatedCells
hasMaxNumFormulas
p_shouldAllowSetCell:atBaseCellCoord:
cellWillChangeDistributor
willApplyCell:baseCellCoord:tableUID:
setCell:atCellID:tableUID:calculationEngine:conditionalStyleOwner:ignoreFormula:clearImportWarnings:
cellBorder
setCellBorder:atCellID:
setCell:atBaseCellCoord:ignoreFormula:clearImportWarnings:calcEngine:
formulaSyntaxErrorAtCellID:
formulaAtCellID:
formulaSpecAtCellID:
isUIDBased
p_shouldAllowApplyBaseCellMap:
startOfGroupingChangesBatch
willApplyBaseCellMap:tableUID:
setBordersWithCellMap:
setCellMap:tableUID:calculationEngine:conditionalStyleOwner:ignoreFormulas:skipDirtyingNonFormulaCells:doRichTextDOLC:
endOfGroupingChangesBatch
cellWillBeModifiedInCurrentRecalcCycle:
currentFormatIsExplicitForCalcEngine
asDurationFormat
formatByFixingUnitsIfNecessaryForTimeInterval:
formatForCalcEngineAtCellID:formatIsExplicitOut:refIfAvailable:
useAutomaticUnits
cellStorageRefAtCellID:
valueTypeAtCellID:
textStyleAtModelCellCoord:isDefault:
numberOfComments
hasCommentAtBaseCellCoord:
commentHostingMap
initWithStorage:forTableInfo:baseCellCoord:
storage
commentStorageAtCellID:
commentHostingAtBaseCellCoord:forCommentStorage:
commentWillBeAddedToDocumentRoot
postCommentNotificationForStorage:baseCellCoord:notificationKey:
setCell:atBaseCellCoord:ignoreFormula:clearImportWarnings:
arrayWithObjects:count:
dictionaryWithObjects:forKeys:count:
defaultCenter
postNotificationName:object:userInfo:
clearCommentHostingMapForCommentStorage:
setCellStyle:ofRowAtIndex:
setTextStyle:ofRowAtIndex:
cellStyleOfRowAtIndex:
textStyleOfRowAtIndex:
setCellStyle:ofColumnAtIndex:
setTextStyle:ofColumnAtIndex:
cellStyleOfColumnAtIndex:
textStyleOfColumnAtIndex:
defaultCellStyleForBaseCellCoord:useSoftDefault:outSource:
defaultTextStyleForBaseCellCoord:useSoftDefault:outSource:
cellStyleAtCellID:
textStyleAtCellID:
conditionalStyleSetAtCellID:
heightOfRowAtIndex:
widthOfColumnAtIndex:
numberWithDouble:
CGFloatValue
computeDefaultFontHeightForTableStyleArea:
topInset
bottomInset
p_tableSize
mergedRangeForBaseCellCoord:
maxNumberOfRows
insertRows:
insertRowsWithUIDs:atIndex:
insertNewRowsInBaseRange:
updateRowHeaderAtIndex:fromMetadata:
hidingAction
showBaseRowAtIndex:forAction:
hideBaseRowAtIndex:forAction:
rewriteMergesForInsertedRange:uids:isRows:
dirtyCellsForInsertionOfRows:forTable:tableRange:headerRange:
maxNumberOfColumns
insertColumns:
insertColumnsWithUIDs:atIndex:
insertNewColumnsInBaseRange:
updateColumnHeaderAtIndex:fromMetadata:
hideBaseColumnAtIndex:forAction:
setNumberOfHeaderColumns:
dirtyCellsForInsertionOfColumns:forTable:tableRange:headerRange:
setNumberOfHeaderRows:
setNumberOfFooterRows:
didAddRows:
isRegisteredWithCalcEngine
dirtyCellsForRemovalOfRows:fromTable:tableRange:
removeFormulasFromRange:
removeFormulasInRange:
rewriteMergesForRemovedRange:uids:isRows:
deleteRowsFromBaseRange:rowUids:
removeRows:
removeRowsAtIndexes:
dirtyCellsForRemovalOfColumns:fromTable:tableRange:
deleteColumnsFromBaseRange:columnUids:
removeColumns:
removeColumnsAtIndexes:
removeRowsAtIndex:count:
enumerateRangesWithOptions:usingBlock:
removeColumnsAtIndex:count:
_removeAnnotationsFromDeleteRange:
enumerateRangesUsingBlock:
moveRowIndexRange:toIndex:
moveBaseRowRange:toRowIndex:
updateTrackedHeaders:
moveColumnIndexRange:toIndex:
moveBaseColumnRange:toColumnIndex:
swapRowAtIndex:withRowAtIndex:
swapBaseRowAtIndex:withRowAtIndex:
hidingStateOfRowAtIndex:
hidingStateOfColumnAtIndex:
lastArchivedAppVersion
headerInfo_hidingActionForRowAtIndex:
hideRowAtIndex:forAction:
headerInfo_hidingActionForColumnAtIndex:
hideColumnAtIndex:forAction:
needsToUpdateFilterSetForImport
setHidingState:ofRowAtIndex:
setHidingState:ofColumnAtIndex:
formattedValue
stringAtCellID:
hasMigratableStylesInCells
regionFromCellIDVector:
identityTranslator
columnNameForCellCoord:restrictToBodyRange:translator:cellRangeContainingName:
columnNameForCellID:restrictToBodyRange:
displayNameForColumnName:
displayNameForColumnAtIndex:derivation:
cellStyleOfRowAtIndex:isDefault:
maxOrder
strokeLayerForLeftSideOfColumn:
strokeLayerForRightSideOfColumn:
strokeLayerForTopOfRow:
strokeLayerForBottomOfRow:
tsceValueFromCell:atCellID:tableUID:
newCellValueFromTSCEValue:withLocale:
getValue:atBaseCellCoord:fetchRichTextAttributesIfPlainText:
getValue:atBaseCellCoord:fetchRichTextAttributesIfPlainText:skipPendingWrites:
tsceValueForCellStorageRef:cellCoord:hostTableUID:outValue:
initWithContext:string:kind:stylesheet:paragraphStyle:listStyle:section:columnStyle:
nextTableUID
updateTableUIDFrom:toTableUID:
nextConditionalStyleOwnerUID
setOwnerUID:
nextMergeOwnerUID
nextPencilAnnotationOwnerUID
pivotOwner
resetBaseOwnerUID
setFormulaOwnerUIDsWithMap:
ownerUIDMap
remapTableUIDsInFormulasWithMap:calcEngine:
nextCategoryAggregatesOwnerUID
setAggregateFormulaOwnerUID:
nextGroupByUID
setGroupByUid:
addReceiverToGroupBy:
containsForms
isTableLinkedToAForm:
tableUID:changedToTableUID:
platformSupportsForms
copyByRemappingHostCellAgnosticOwnerUIDs:calcEngine:containingCell:outError:
replaceFormulasUsingBlock:
copyByRemappingHostCellAgnosticOwnerUIDsWithMap:calcEngine:ownerUID:error:
replaceConditionalStyleSetsUsingBlock:
formulaID
copyByRemappingOwnerUIDs:calcEngine:containingCell:outBadRefFound:
bakeFormulaToValue
isEqualToFormula:
conditionalStyleID
copyByRemappingOwnerUIDsWithMap:calcEngine:error:
setConditionalStyleAppliedRule:
remapTableUIDsInFormulasWithMap:
customFormatKey
addPasteboardCustomFormat:toDocument:updatingPasteboardFormat:
customFormatForKey:
initWithFormatType:customFormatKey:customFormat:appliedConditionKey:
updateCustomFormatFromPaste:
clearPasteboardCustomFormatMap
mapReassigningPasteboardCustomFormatKeys:
makePasteboardCustomFormatList
beginBatchingGroupCellDirtying
currentTransaction
isSkippingRepairBadRefsForOwnerUID:
duringRollback
tableUIDHistory
hasBadRefWithUidInfo
supportsCategorization
copyByConvertingColonTractToColon:breakUpIntoRefs:
const_astNodeArray
hasFormulaEvaluationError
copyByRepairingBadReferences:
asFormulaSpec
updateCalculationEngineForFormula:inBaseCellCoord:usingCalcEngine:
copyByMakingAllCategoryRefsIndirect:containingCell:
replaceFormulaForConditionalStyle:atCellID:
coordFromIndex:
referenceSet
getPrecedents:calcEngine:hostCell:doImplicitIntersection:returnUidReferences:
enumerateMergeFormulasUsingBlock:
endBatchingGroupCellDirtying
containsFormulas
numberOfConditionalStyles
initForCategorizedTableChromeToBaseRewriterWithSrcTableUID:srcTract:dstTableUID:destTract:coordMapper:srcCoordMapper:fromTableUID:
setConditionalStyleOwnerUID:
cellHasFormula
formulaCoordSpace
cellHasConditionalStyle
setFormulaCoordSpace:
allCellCoords
clearErrorForCells:
mappedStyleForStyle:
supportsBidiTablesUI
setIntValue:forProperty:
networkWithContext:presetID:styleProvider:styleMorphingBlock:
updateHeaderStorageStylesWithBlock:
supportsInlineAttachments
adoptStylesheet:withMapper:supportsInlineAttachments:
assertListTilesAndRows
isAncestorOf:
enumerateAllStylesWithBlock:
annotationsContainedByRegion:
removeAnnotations:
upgradeCellFormatsU2_0
networkFromTheme:presetID:
textStyleForTableStyleArea:
setParagraphStyle:forCharRange:undoTransaction:
enumerateWithAttributeKind:inRange:usingBlock:
defaultFormatWithFormatType:locale:
copyToCell:
rangeForCellID:includingBreak:
newSubstorageWithRange:context:flags:kind:
canBeStoredInAStringValueCell
paragraphStyleAtCharIndex:effectiveRange:
mergedRects
insertBaseMergeRangeRemovingOverlaps:
containsImportWarnings
containsControlCellSpecs
allRichTextStorages
tableNameBorderStroke
initWithTableInfo:tableModel:region:flags:searchFlags:clampingRange:
getNextCellData:
hasEqualContentToCell:
terminate
hasAlternatingRows
initWithContext:fromSourceModel:region:tableInfo:waitForCalcEngine:
setTableNameEnabled:
initWithModel:region:flags:searchMask:
auditRowInfoCellCountsReturningResult:
accumulateCurrentCellsConcurrentlyInRow:rowInfo:atColumns:usingCellCreationBlock:
accumulateCellBordersConcurrently:inRow:atColumns:
accumulateCurrentCellsConcurrentlyUsingBlock:
containsUidReferences
copyToGeometricFormWithRewriteContext:
copyByConvertingToRelativeAncestorsWithRewriteContext:
enumerateCellsAddedAndRemovedOfType:withOptions:usingBlock:
copyByRewritingReferencesToGeometricForm:
updateDataListsConcurrentlyWithConcurrentCellMap:clearImportWarnings:
upgradingFormulasMinion
setCellsConcurrently:tableUID:calculationEngine:conditionalStyleOwner:ignoreFormula:clearImportWarnings:
needsObjectUUID
mixingTypeWithObject:context:
mixedObjectWithFraction:ofObject:
mixedBaseObjectWithObject:
canMixWithNilObjects
mixableObjectClasses
T@"TSTTableStyle",&,N
T@"TSTCellStyle",&,N
T@"TSWPParagraphStyle",&,N
T@"TSWPShapeStyle",&,N
defaultHorizontalBorderStroke
defaultHorizontalBorderStrokeEvenIfNotVisible
defaultVerticalBorderStroke
bodyColumnStroke
bodyRowStroke
bodyRowStrokeEvenIfNotVisible
headerColumnBorderStroke
headerColumnBodyColumnStroke
headerColumnBodyRowStroke
headerColumnSeparatorStroke
headerRowBorderStroke
headerRowBodyColumnStroke
headerRowBodyRowStroke
headerRowSeparatorStroke
footerRowBorderStroke
footerRowBodyColumnStroke
footerRowBodyRowStroke
footerRowSeparatorStroke
categoryLevel1TopStroke
categoryLevel2TopStroke
categoryLevel3TopStroke
categoryLevel4TopStroke
categoryLevel5TopStroke
categoryLevel1LabelSeparatorStroke
categoryLevel2LabelSeparatorStroke
categoryLevel3LabelSeparatorStroke
categoryLevel4LabelSeparatorStroke
categoryLevel5LabelSeparatorStroke
categoryLevel1BottomStroke
categoryLevel2BottomStroke
categoryLevel3BottomStroke
categoryLevel4BottomStroke
categoryLevel5BottomStroke
categoryLevel1InteriorStroke
categoryLevel2InteriorStroke
categoryLevel3InteriorStroke
categoryLevel4InteriorStroke
categoryLevel5InteriorStroke
bodyPivotGroupHorizontalStroke
bodyPivotGroupVerticalStroke
bodyPivotDeEmphasisHorizontalStroke
bodyPivotEmphasisVerticalStroke
headerColumnPivotGroupHorizontalStroke
headerColumnPivotGroupDeEmphasisStroke
headerColumnPivotSeparatorStroke
headerRowPivotGroupVerticalStroke
headerRowPivotGroupDeEmphasisStroke
headerRowPivotTitleStroke
footerRowPivotGroupVerticalStroke
T@"TSDStroke",R,N
enumerateCellsForSOSSerializationWithBlock:
T{TSUModelRowIndex=I},R,N
T{TSUModelColumnIndex=S},R,N
setStrokeSidecar:
willClose
documentLocaleDidChange
setStylesheetForUpgradeToSingleStylesheet:
initWithContext:rows:columns:styles:stylePreset:tableInfo:
initAsPivotDataWithContext:tableInfo:sourceModel:sourceBody:sourceHeader:
resetForPivotingWithRowUids:columnUids:numberOfHeaderRows:numberOfHeaderColumns:
updateMergesAndCellsAsPivotDataWithSourceModel:
hasUsefulPivotDataInSourceBodyTract:
copyPivotDetailDataFromSourceModel:inSourceRegion:columnMapping:rowMapping:
pivotDataCellValueTypeForColumn:
upgradeDuringDocumentUpgradeIfNeeded:tableInfo:
loadFromUnarchiver:
saveToArchiver:
setPresetNeedsStrongOwnership:
setRepeatingHeaderRowsEnabled:
setRepeatingHeaderColumnsEnabled:
setHeaderRowsFrozen:
setHeaderColumnsFrozen:
createPivotOwner
clearPivotOwner
numberOfFooterRows
setlabelLevel1CellStyle:
setlabelLevel2CellStyle:
setlabelLevel3CellStyle:
setlabelLevel4CellStyle:
setlabelLevel5CellStyle:
setlabelLevel1TextStyle:
setlabelLevel2TextStyle:
setlabelLevel3TextStyle:
setlabelLevel4TextStyle:
setlabelLevel5TextStyle:
setColumnRowUIDMap:
setTextImportRecord:
upgradeToSubOwnerUIDMapper
identityOwnerUIDMapper
hasTableBorder
tableWritingDirection
metadataForRowIndex:hidingAction:
metadataForColumnIndex:hidingAction:
setSortOrder:
resetSortRuleReferenceTrackerForInsert
setFromTableUID:
clearFromTableUID
setFromGroupByUID:
clearFromGroupByUID
wasCut
setWasCut:
setIsRegisteredWithCalcEngine:
cellRangeForTableArea:
tableAreaForRow:
tableAreaForColumn:
tableStyleAreaForRow:
tableAreasForBaseCellRect:
getDefaultCell:forBaseCellCoord:
cellAtBaseCellCoord:
hasFormulaAtBaseCellCoord:
formulaSyntaxErrorAtBaseCellCoord:
formulaAtBaseCellCoord:
formulaSpecAtBaseCellCoord:
formatForCalcEngineAtBaseCellCoord:formatIsExplicitOut:
cellValueTypeAtBaseCellCoord:
textStyleForCalcEngineAtBaseCellCoord:isDefault:
hasCommentStorageAtBaseCellCoord:
commentHostingAtBaseCellCoord:
setCommentStorage:atBaseCellCoord:
removeCommentStorageAtBaseCellCoord:
textStyleOfRowAtIndex:isDefault:
cellStyleOfColumnAtIndex:isDefault:
textStyleOfColumnAtIndex:isDefault:
cellStyleAtModelCellCoord:isDefault:
conditionalStyleSetAtBaseCellCoord:
setHeight:ofRow:
setWidth:ofColumn:
rowHeights
columnWidths
setColumnWidths:
setRowHeights:
computeDefaultRowHeight
hasNamesInHeaders
insertRowsInBaseRange:uids:metadata:unsetFilterHidingAction:
insertColumnsAtIndex:uids:metadatas:tableArea:
insertRowsAtIndex:uids:metadatas:tableArea:unsetFilterHidingAction:
removeColumnsAtBaseIndexes:
removeAnnotationsFromRowsAtBaseIndexes:
removeAnnotationsFromColumnsAtBaseIndexes:
upgradeHiddenStates
upgradeHiddenFormulaOwnerForColumnsUID
upgradeHiddenFormulaOwnerForRowsUID
upgradeNeedsToUpdateFilterSetForImport
hiddenStateFormulaOwnerForRows
hiddenStateFormulaOwnerForColumns
setHidingState:atRowIndex:
setHidingState:atColumnIndex:
stringAtBaseCellCoord:optionalCell:
regionForValueOrCommentCellsInBaseCellRect:
displayNameForColumnAtIndex:
fillForRow:
maxStrokeOrder
setStroke:forTopOfRow:order:
setStroke:forBottomOfRow:order:
setStroke:forLeftOfColumn:order:
setStroke:forRightOfColumn:order:
cellValueFromCell:atBaseCellCoord:
cellValueAtBaseCellCoord:
setFormulaOwnerUIDsWithMap:shouldStealReferences:
remapTableUIDsInFormulasWithMap:calcEngine:bakeForBadRefs:
addPasteboardCustomFormatsToDocumentAndUpdateCells
copyPasteboardCustomFormatsFromTableModel:
registerAllFormulasWithCalculationEngine:wasCrossDocumentPaste:infoIsCategorized:wasUndo:
prepareForPasteWithCalculationEngine:sourceOffset:bakeFormulas:
hasFormulas
cellsModifiedInCurrentRecalcCycle
addCellRefToClearError:
clearErrors
adoptStylesheet:withMapper:
allDataAsString
assertCollaborationConvergence
upgradeFormatsForCustomFormatListU2_0
upgradeFromPreUFF
hasImportWarnings
hasControls
baseCellCoordForCellContainingRichTextStorage:
shouldAllowApplyConcurrentCellMap:
setDataStore:
localOwnerID
setLocalOwnerID:
presetIDForUpgrade
setPresetIDForUpgrade:
cellsPendingWrite
cellsToInvalidateAfterRecalc
cellsToInvalidateNonoverflowingAfterRecalc
setConditionalStyleFormulaOwner:
deprecatedProvider
setDeprecatedProvider:
wasUnarchivedFromAProvidedTable
setWasUnarchivedFromAProvidedTable:
textImportRecord
prePivotRowFilterSet
setPrePivotRowFilterSet:
pivotValueTypesByColumn
pivotDateGroupingTypesByColumn
_hiddenStateFormulaOwnerForRows
_hiddenStateFormulaOwnerForColumns
_strokeSidecar
_clearErrorCells
_clearErrorLock
_pivotValueTypesByColumn
_pivotDateGroupingTypesByColumn
_isRegisteredWithCalcEngine
_wasCut
_headerRowsFrozen
_headerColumnsFrozen
_tableNameEnabled
_tableNameBorderEnabled
_repeatingHeaderRowsEnabled
_repeatingHeaderColumnsEnabled
_styleApplyClearsAll
_presetNeedsStrongOwnership
_wasUnarchivedFromAProvidedTable
_localOwnerID
_numberOfHeaderColumns
_numberOfHeaderRows
_numberOfFooterRows
_lastArchivedAppVersion
_archivingCompatibilityVersion
_dataStore
_defaultRowHeight
_defaultColumnWidth
_tableName
_tableNameHeight
_presetIDForUpgrade
_tableStylePreset
_tableStyle
_identityTranslator
_bodyCellStyle
_headerRowCellStyle
_headerColumnCellStyle
_footerRowCellStyle
_categoryLevel1CellStyle
_categoryLevel2CellStyle
_categoryLevel3CellStyle
_categoryLevel4CellStyle
_categoryLevel5CellStyle
_labelLevel1CellStyle
_labelLevel2CellStyle
_labelLevel3CellStyle
_labelLevel4CellStyle
_labelLevel5CellStyle
_bodyTextStyle
_headerRowTextStyle
_headerColumnTextStyle
_footerRowTextStyle
_categoryLevel1TextStyle
_categoryLevel2TextStyle
_categoryLevel3TextStyle
_categoryLevel4TextStyle
_categoryLevel5TextStyle
_labelLevel1TextStyle
_labelLevel2TextStyle
_labelLevel3TextStyle
_labelLevel4TextStyle
_labelLevel5TextStyle
_tableNameStyle
_tableNameShapeStyle
_pivotBodySummaryRowCellStyle
_pivotBodySummaryColumnCellStyle
_pivotHeaderColumnSummaryCellStyle
_cellsPendingWrite
_cellsToInvalidateAfterRecalc
_cellsToInvalidateNonoverflowingAfterRecalc
_conditionalStyleFormulaOwner
_mergeOwner
_categoryOwner
_pivotOwner
_hiddenStatesOwner
_hauntedOwner
_sortOrder
_sortRuleReferenceTracker
_columnRowUIDMap
_cellWillChangeDistributor
_deprecatedProvider
_commentHostingMap
_textImportRecord
_prePivotRowFilterSet
_pencilAnnotationOwner
_tableUID
_fromTableUID
_fromGroupByUID
T@"TSTColumnRowUIDMap",&,N,V_columnRowUIDMap
T@"TSTTableDataStore",&,N,V_dataStore
TQ,N,V_presetIDForUpgrade
T@"TSTConditionalStyleFormulaOwner",&,N,V_conditionalStyleFormulaOwner
T@"TSWPStorage",&,N,V_deprecatedProvider
T@"NSMapTable",R,N,V_commentHostingMap
TQ,R,N,V_lastArchivedAppVersion
T^v,R,N,V_pivotValueTypesByColumn
T^v,R,N,V_pivotDateGroupingTypesByColumn
T@"TSTTableInfo",N,V_tableInfo
T@"TSTTableTranslator",R,N,V_identityTranslator
T{TSKUIDStruct=QQ},R,N
T@"TSTTableFilterSet",&,N,V_prePivotRowFilterSet
T@"TSCECalculationEngine",N,V_calcEngine
TB,N,V_wasCut
T{TSKUIDStruct=QQ},N,V_tableUID
T{TSKUIDStruct=QQ},N,V_fromTableUID
T{TSKUIDStruct=QQ},N,V_fromGroupByUID
TS,N,V_localOwnerID
T@"TSCEOwnerUidMapper",R,N
T@"NSUUID",R,N
T@"NSString",&,N,V_tableName
TB,N,V_tableNameEnabled
Td,N,V_tableNameHeight
TB,N,V_tableNameBorderEnabled
TB,N,V_repeatingHeaderRowsEnabled
TB,N,V_repeatingHeaderColumnsEnabled
Ti,R,N
T{TSUModelRowIndex=I},N,V_numberOfHeaderRows
T{TSUModelRowIndex=I},N,V_numberOfFooterRows
T{TSUModelColumnIndex=S},N,V_numberOfHeaderColumns
TB,N,V_headerRowsFrozen
TB,N,V_headerColumnsFrozen
TB,N,V_styleApplyClearsAll
T@"TSTTableStylePreset",&,N,V_tableStylePreset
T@"TSTSortRuleReferenceTracker",R,N,V_sortRuleReferenceTracker
T@"TSTMergeOwner",R,N,V_mergeOwner
T@"TSTCategoryOwner",R,N,V_categoryOwner
T@"TSTHiddenStatesOwner",R,N,V_hiddenStatesOwner
T@"TSTPencilAnnotationOwner",R,N,V_pencilAnnotationOwner
T@"TSTPivotOwner",R,N,V_pivotOwner
T@"TSCEHauntedOwner",R,N,V_hauntedOwner
T@"TSTCellDictionary",R,N,V_cellsPendingWrite
T@"TSTConcurrentMutableCellUIDSet",R,N,V_cellsToInvalidateAfterRecalc
T@"TSTConcurrentMutableCellUIDSet",R,N,V_cellsToInvalidateNonoverflowingAfterRecalc
T@"TSTTableSortOrder",C,N,V_sortOrder
T@"TSTStrokeSidecar",&,N
T@"TSTCellWillChangeDistributor",R,N,V_cellWillChangeDistributor
TB,N,V_presetNeedsStrongOwnership
TB,N,V_wasUnarchivedFromAProvidedTable
T@"TSTStructuredTextImportRecord",&,N,V_textImportRecord
TB,N
Td,N,V_defaultRowHeight
Td,N,V_defaultColumnWidth
T@"NSArray",R,N
TQ,R,N,V_archivingCompatibilityVersion
T@"TSTTableStyle",&,N,V_tableStyle
T@"TSTCellStyle",&,N,V_bodyCellStyle
T@"TSTCellStyle",&,N,V_headerRowCellStyle
T@"TSTCellStyle",&,N,V_headerColumnCellStyle
T@"TSTCellStyle",&,N,V_footerRowCellStyle
T@"TSTCellStyle",&,N,V_categoryLevel1CellStyle
T@"TSTCellStyle",&,N,V_categoryLevel2CellStyle
T@"TSTCellStyle",&,N,V_categoryLevel3CellStyle
T@"TSTCellStyle",&,N,V_categoryLevel4CellStyle
T@"TSTCellStyle",&,N,V_categoryLevel5CellStyle
T@"TSTCellStyle",&,N,V_labelLevel1CellStyle
T@"TSTCellStyle",&,N,V_labelLevel2CellStyle
T@"TSTCellStyle",&,N,V_labelLevel3CellStyle
T@"TSTCellStyle",&,N,V_labelLevel4CellStyle
T@"TSTCellStyle",&,N,V_labelLevel5CellStyle
T@"TSWPParagraphStyle",&,N,V_bodyTextStyle
T@"TSWPParagraphStyle",&,N,V_headerRowTextStyle
T@"TSWPParagraphStyle",&,N,V_headerColumnTextStyle
T@"TSWPParagraphStyle",&,N,V_footerRowTextStyle
T@"TSWPParagraphStyle",&,N,V_categoryLevel1TextStyle
T@"TSWPParagraphStyle",&,N,V_categoryLevel2TextStyle
T@"TSWPParagraphStyle",&,N,V_categoryLevel3TextStyle
T@"TSWPParagraphStyle",&,N,V_categoryLevel4TextStyle
T@"TSWPParagraphStyle",&,N,V_categoryLevel5TextStyle
T@"TSWPParagraphStyle",&,N,V_labelLevel1TextStyle
T@"TSWPParagraphStyle",&,N,V_labelLevel2TextStyle
T@"TSWPParagraphStyle",&,N,V_labelLevel3TextStyle
T@"TSWPParagraphStyle",&,N,V_labelLevel4TextStyle
T@"TSWPParagraphStyle",&,N,V_labelLevel5TextStyle
T@"TSWPParagraphStyle",&,N,V_tableNameStyle
T@"TSWPShapeStyle",&,N,V_tableNameShapeStyle
T@"TSTCellStyle",&,N,V_pivotBodySummaryRowCellStyle
T@"TSTCellStyle",&,N,V_pivotBodySummaryColumnCellStyle
T@"TSTCellStyle",&,N,V_pivotHeaderColumnSummaryCellStyle
messageWithDescriptor:
readReferenceMessage:class:protocol:completion:
messageWithNewFunction:descriptor:
setCell:
setFormulaSpec:
setMergeRange:
setCellID:
hasAnyCustomFormat
formulaSpec
mergeRange
cellValueType
cellHasCustomFormat
cellHasCommentStorage
cellIsEmpty
T@"TSTCell",R,N
T@"TSTCellFormulaSpec",R,N
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},R,N
TC,R,N
cellIDIsValid
setCellIDIsValid:
cellIsValid
setCellIsValid:
formulaSpecIsValid
setFormulaSpecIsValid:
mergeRangeIsValid
setMergeRangeIsValid:
_cellIDIsValid
_cellIsValid
_formulaSpecIsValid
_mergeRangeIsValid
_cellID
_cell
_formulaSpec
_mergeRange
TB,N,V_cellIDIsValid
TB,N,V_cellIsValid
TB,N,V_formulaSpecIsValid
TB,N,V_mergeRangeIsValid
T{TSUCellCoord=ISBB},N,V_cellID
T@"TSTCell",&,N,V_cell
T@"TSTCellFormulaSpec",&,N,V_formulaSpec
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_mergeRange
pointerAtIndex:
enumerateRowsWithBlock:
maxColumnIndex
enumerateRowsAndIndexesWithBlock:
strongObjectsPointerArray
initWithRows:shouldUseWideRows:context:
bncStorageBufferExists
maxRow
setCount:
setTileRowIndex:
replacePointerAtIndex:withPointer:
p_pruneRowCount
rowInfoFromArchive:
tileRowIndex
rowInfoForTileRowIndex:
_setRowInfo:atTileRowIndex:
usesWideOffsets
convertToWideOffsets
numRows
populatedRows
rowInfoWithTileRowIndex:wideOffsets:
cellStorageRefAtIndex:
preBNCStorageRefAtIndex:
findOrAddRowInfoAtTileRowIndex:
setCell:atIndex:formatKeys:
_removeRowInfo:atTileRowIndex:
insertColumnsAtIndex:count:
setInt:forKey:
pruneEmptyRows
moveColumnsFromIndex:toIndex:count:
_removeRowsAtTileRowIndex:numberOfRows:shiftingContent:
yankRowsAtTileRowIndex:count:
shiftUpAtTileRowIndex:count:
tsu_enumerateNonNullObjectUsingBlock:
maxColumn
initWithRows:context:
packageLocator
lastSavedInBNC
rowInfoAtOrAfterTileRowIndex:outTileRowIndex:
cellStorageRefAtColumnIndex:tileRowIndex:
preBNCCellStorageRefAtColumnIndex:tileRowIndex:
setCell:atColumnIndex:tileRowIndex:formatKeys:
insertColumnsAtColumnIndex:numberOfColumns:
removeColumnsAtColumnIndex:numberOfColumns:
moveColumnsAtColumnIndex:numberOfColumns:toDestColumnIndex:
insertRowsAtTileRowIndex:numberOfRows:
clearRowsAtTileRowIndex:numberOfRows:
shiftUpAndYankBy:
yankRowInfoAtTileRowIndex:
yankRowsAtTileRowIndex:
spliceRowInfo:atTileRowIndex:overwrite:
spliceRows:atTileRowIndex:
swapRowAtTileRowIndex:withRowAtTileRowIndex:
widenAllRowsForUpgrade
assertListRows
setLastSavedInBNC:
rowInfos
setRowInfos:
_storageVersion
_lastSavedInBNC
_shouldUseWideRows
_pruningCount
_rowInfos
T@"NSPointerArray",&,N,V_rowInfos
TS,R,N
T@"NSIndexSet",R,N
TB,N,V_lastSavedInBNC
hasWorkItems
addFittingHeight:forCellID:
addFittingWidth:forCellID:
enumerateFittingHeightsUsingBlock:
enumerateFittingWidthsUsingBlock:
_fittingHeights
_columnToMaxFittingWidths
legalRangeControlMinimum:maximum:increment:
initWithInteractionType:minimum:maximum:increment:
minimum
maximum
increment
numberValueFromString:locale:outDoubleValue:
recomputedValueFromValue:changed:
getCurrentFormat
numberOrCurrencyDecimalValue
asStepperSliderFormat
displayFormatType
defaultRangeControlSpecOfType:
initWithFormatType:minimum:maximum:increment:displayFormatType:
defaultCellValueForInteractionType:
stepperSpecWithMinimum:maximum:increment:
sliderSpecWithMinimum:maximum:increment:
cellSpecFromTSKFormat:
instanceWithArchive:unarchiver:
asRangeControlSpec
valueFromString:locale:
validateFormatAndValue:
tskStepperSliderFormatWithDisplayFormatType:
legacyDisplayFormatType
_interactionType
_legacyDisplayFormatType
_minimum
_maximum
_increment
Td,R,N,V_minimum
Td,R,N,V_maximum
Td,R,N,V_increment
TI,R,N,V_legacyDisplayFormatType
initWithContext:geometry:
tableModelClass
initWithTableInfo:
groupByByUid:
initWithGroupings:categoryOwner:
linkGroupBy:
initWithHiddenStatesOwner:
p_updateStorageParentInfoForModels
setupReceiver
setTableModel:
initWithInfo:
size
p_initializeDefaultHeight:andWidth:
initWithContext:geometry:rows:columns:stylePreset:styles:
presetOfKind:index:
initWithPosition:size:
networkWithContext:presetID:colors:alternate:
setSize:
initWithContext:geometry:rows:columns:styles:
geometry
initPivotTableWithContext:sourceTableInfo:sourceBodyRange:sourceHeaderRowRange:optionalDataModel:
baseTractRefForViewTractRef:
initWithColumns:rows:tableUID:
networkForPivotTables
pivotTableNameForSourceTable:
exteriorTextWrap
setExteriorTextWrap:
setCategoryColumnWidth:
setPivotSourceTableUID:
setPivotSourceTableName:
setPivotDataRefreshUID:
timeIntervalSinceReferenceDate
setPivotDataRefreshTimestamp:
setPivotSourceBodyTract:
setPivotSourceHeaderTract:
initWithColumnAggregates:
applyPivotWithColumns:rows:aggregates:flatteningDimension:optionsMap:pivotRowColumnRuleChangeUid:pivotAggregateRuleChangeUid:
columnUIDs
setOrder:forDimension:
rowUIDs
resetCellsForNewPivotRules
commitPivotChanges
initPivotTableWithContext:sourceTableInfo:sourceBodyRange:sourceHeaderRowRange:
pivotDataModel
groupBySet
pivotDataModelRowIndexesNeededForCell:
contentWritingDirection
setContentWritingDirection:
initAsCompressionMapForIndexes:
pivotDetailTableNameFromSourcePivotTableInfo:pivotSourceCell:
_initWithContext:flatteningFromComplexInfo:cellRegion:waitForCalcEngine:flatteningOptions:isSnapshot:
logFullBacktrace
_initWithContext:fromSourceInfo:cellRegion:tableModel:waitForCalcEngine:formulaCoordSpace:
expandCellRegionToCoverMergedCells:
flatteningDimension
aggregates
baseCellRegionForViewCellRegion:
indexesForCategoryColumns
intersectsIndexesInRange:
enumerateRowRangesUsingBlock:
accessController
hasWrite
flattenGroupValuesIfNeededForCell:viewCellCoord:summaryAndLabelRows:categoryColumns:
hasCellStyle
defaultCellStyleForCellID:
hasTextStyle
defaultTextStyleForCellID:
getTextPropertiesWithCell:cellID:wraps:alignment:verticalAlignment:padding:
initWithPropertiesAndValues:
performWrite:
iterateCellsInRegion:flags:searchFlags:usingBlock:
position
setPrimitiveGeometry:
copyFromHiddenStates:forRange:withContext:isWholeTableCopy:
setParentInfo:
_correctAndCheckStateSuppressingAssertions:
_setCellBordersFlatteningFromComplexInfo:sourceRegion:
indexesOfHiddenRowsInCellRange:
indexesOfHiddenColumnsInCellRange:
setDocumentIsClosing:
clearPartitioner
releaseLayoutEngine
teardown
initWithContext:fromSourceInfo:cellRegion:waitForCalcEngine:flattenCategories:isSnapshot:
setParent:
p_setupTableModelforNewForm
headersFrozenByDefault
checkboxFormat
toggleControlSpec
setCell:atCellUID:ignoreFormula:clearImportWarnings:
p_setupTableModelforStockPrototype
p_setupTableModelforStockSwatch
createLargeDefaultTables
numberOfRowsForProtoIndex:
numberOfColumnsForProtoIndex:
tablePrototypeWithIndex:context:geometry:styles:forTableInsertOnly:
setupTableModelForPrototypeIndex:forTableInsertOnly:
tableModelForTableUID:withCalcEngine:
p_setFillOnCell:positive:
initWithNodeArray:
p_setFormula:atCellID:
initWithCreator:
p_positiveImageFill
p_negativeImageFill
setObject:forProperty:
initWithContext:name:overridePropertyMap:isVariation:
objectForKeyedSubscript:
resourceURL
URLByAppendingPathComponent:
dataFromURL:context:
initWithImageData:technique:tintColor:size:
setObject:forKeyedSubscript:
p_fillResourceWithFilename:
tableNameTextSize
effectiveTableNameHeightForTable:
isSafeToConvertToImage
p_layoutEngineCreateIfNeeded:
archivedLayoutEngineBundle
initWithInfo:layoutEngineBundle:
changeNotifier
setChangeNotifier:
isCategoryGroupValueCell:
isReimportable
isLocked
isInReadOnlyMode
importDate
timeIntervalSinceNow
filteringTableUID
pivotSourceTableUID
pivotSourceTableName
pivotSourceBodyTract
groupLevelAtSummaryRow:
numberOfRowLevels
enclosingGroupNameforRowIndex:level:
groupLevelAtSummaryColumn:
numberOfColumnLevels
enclosingGroupNameforColumnIndex:level:
columnAggregateGroupSize
qualifiedColumnNameForAggregateIndex:locale:
rowAggregateGroupSize
tableRangeCoordinate
numberOfGrandTotalColumns
numberOfFooterOrGrandTotalRows
minNumberOfHeaderColumns
maxNumberOfHeaderColumns
groupSortOrder
setGroupSortOrder:
isRegisteredWithCalcEngine:
registerWithCalcEngine:ownerKind:
registerWithCalcEngine:baseOwnerUID:
linkToCalcEngine:ownerKind:
filterSetUpdated
unregisterFromCalcEngine:
unregisterFromCalcEngine
performReadForOneOffFormulaEvaluation:forCellCoord:
registerLast
filteringTableTranslator
baseColumnRange
columnNameForColumnIndex:withFallbackFormat:translator:
columnNameForColumnIndex:
filteringColumnNameForColumnIndex:
viewColumnIndexForBaseColumnIndex:
filterSetForPivotDataTable:
filterSetForRows
containsFilterRulesInUIDForm
copyByRewritingFilterRulesToGeometricFormWithContext:withTableInfo:
p_setFilterSet:
setFilterSet:forPivotDataTable:
filterCount
isEnabled
initWithNotBlankRowGroupsWithContext:withPivotTable:
setFilterSetForRows:
initWithNotBlankColumnGroupsWithContext:withPivotTable:
setFilterSetForColumns:
enableFilterSet:
clearAllFiltered
stageCountForTextureDeliveryStyle:tableProvider:
textureDeliveryStylesLocalized:
textureDeliveryStyleFromDeliveryString:
cellIteratorWithFlags:searchFlags:
cellFlags
setCellFlags:
topStroke
topStrokeOrder
setTopStroke:order:
leftStroke
leftStrokeOrder
setLeftStroke:order:
bottomStroke
bottomStrokeOrder
setBottomStroke:order:
rightStroke
rightStrokeOrder
setRightStroke:order:
setCellsWithCellMap:ignoreFormulas:skipDirtyingNonFormulaCells:
p_bakeMixedCellStrokesIntoTable:outgoingTable:incomingTable:fraction:
angle
setAngle:
setGeometry:
partitioner
setScaleToFit:
widthValid
heightValid
horizontalFlip
verticalFlip
initWithPosition:size:widthValid:heightValid:horizontalFlip:verticalFlip:angle:
childEnumerator
objectEnumerator
aggregateEnumeratorWithObjects:
visitTSTTableInfo:
bootstrapPresetsOfKind:inTheme:alternate:reservedCount:
documentStylesheet
colors
createStylesInStylesheet:presetID:colors:alternate:
initWithStyleNetwork:
setPresets:ofKind:
setWithObject:
iterateCellsWithFlags:searchFlags:usingBlock:
initShallowMapWithContext:uidBased:
defaultCellStyleForCellID:useSoftDefault:outSource:
defaultTextStyleForCellID:useSoftDefault:outSource:
addCell:andCellUID:
mergedStorageRepresentation
setPosition:
removeAnnotationsFromRowsAtIndexes:
removeAnnotationsFromColumnsAtIndexes:
setDrawableIsBeingCopied:
supportsAutoResizedTables
dupContentCache
cellIDToWPColumnCache
resolverContainerNameForResolver:
nameForResolverContainer:
resolverContainerForName:caseSensitive:
resolverContainerNamesMatchingPrefix:
resolverMatchingName:contextContainerName:
resolversMatchingPrefix:
isPendingTableNameUniquification
compare:
resolverNameIsUsed:
floatValue
isEquivalentForCrossDocumentPasteMasterComparison:objectComparisonBlock:
hasEqualContentToCell:usingRichTextObjectComparisonBlock:
initWithOwnerInsertion:fromOwnerUID:
willModifyTable:uidResolver:calcEngine:
didModifyTable:calcEngine:
allOwnersRegistered
shouldForceRegisterAllTables
loadFromFileVersion
childEnumeratorForUserSearch
childEnumeratorForUserFlags:
modelPathComponentForChild:
acceptVisitor:
registerWithCalcEngineForDocumentLoad:ownerKind:
formulaOwnerUID
ownerKind
objectToArchiveInDependencyTracker
formulaOwner
modelEnumeratorForObjectsConformingToProtocol:
chooseUniqueNameInContainer:forPaste:
registerWithCalcEngine:
registerAllFormulasWithCalculationEngine:
beginTrackingNamesInTable:
beginTrackingNamesInTableForLegacyNRM:
ownerIsRegistered:
scheduleDetectAndRepairConsistencyViolations
upgradeSubOwnerUidForMapperOnCalcEngine:
setNeedsSubOwnerIDUpgrade:
hasCommentAtCellID:
setCommentStorage:atCellUID:
removeCommentStorageAtCellUID:
postCommentNotificationForStorage:atViewCellCoord:notificationKey:
commentHostingAtCellID:forCommentStorage:
commentHostingAtCellID:
beginUpgradingFormulasMode
modelEnumeratorForObjectsOfClass:
upgradeDuringDocumentUpgradeIfNeeded:
uuidBasedCellMapWithContext:
writingDirection
writingDirectionForCellwithTableDefault:
setParagraphWritingDirection:forCharRange:undoTransaction:
textStyleAtCellID:isDefault:
propertyMapWithPropertiesAndValues:
isCategoryGroupValueLabelCell:
isSummaryOrLabelRow:
groupLevelAtRow:
leftInset
rightInset
paddingWithTopInset:leftInset:bottomInset:rightInset:
hasGroupingArrowAtCellID:
pivotOptionsForRowGroupsAtLevel:
repeatLabels
isPivotTrailingAligned:
isPivotUnwrapped:
effectiveTextStyle
cellStyleAtCellID:isDefault:
currentFormatUsesAccountingStyle
modifiedTextPropertiesForCategoryOrPivotCellAtCellID:wraps:padding:alignment:
duplicateFilterSetInUidFormWithTable:
needsFormulaRewriteForImport
setNeedsFormulaRewriteForImport:
hiddenStatesForPivotDataTable:
setFilterSetType:
dirtyFilterState
hasFilterRulesWithTable:inBaseColumns:
numberOfVisibleBaseBodyRows
preventsRowInsertion
getPredArgDataFromCell:
containsObject:
hasCategoryRules
decimalDigitCharacterSet
rangeOfCharacterFromSet:options:
numberValueFromString:locale:outDoubleValue:outValueType:
regularExpressionWithPattern:options:error:
matchesInString:options:range:
chooseUniqueNameInContainer:forPaste:needsNewName:avoidNames:
remappedTableNames
parseNumberFromTableName:
checkoutNumberFormatter
initWithUnsignedInt:
createStringWithNumber:
returnNumberFormatter:
cellRegionForTableStyleArea:
tableAreaForDroppingRowAtIndex:
tableStyleAreaForCellUID:
tableStyleAreaForCellID:
initWithIndexSet:
getDefaultCell:forCellID:
getCell:atCellID:suppressCellBorder:
hasFormulaAtCellUID:
copyToUidFormForTableInfo:inCellCoordinate:preserveHostCell:
copyByRewritingReferencesToUidForm:
setCell:atCellUID:ignoreFormula:clearImportWarnings:formulaReplacer:
emptyFilteredTable
isEmptyPivot
textFormat
prunedCellRegionAgainstTable:behavior:
regionBySubtractingRegion:
cellUIDListFromCellRegion:useCategoriesWildcards:
getCell:atCellUID:
enumerateCellUIDsUsingBlock:
copyJustStrokesToCell:
convertFormulasToUidForm:atCellID:preserveHostCell:
mergeActionForRegion:
addMergeAction:
containsMergeChanges
performRead:
cellValueTypeAtCellID:
cellValueTypeAtCellUID:
setCellStyle:ofRowAtUID:
setTextStyle:ofRowAtUID:
setCellStyle:ofColumnAtUID:
setTextStyle:ofColumnAtUID:
cellStyleAtCellUID:isDefault:
textStyleAtCellUID:isDefault:
initWithContext:rules:
rowNameForCellCoord:restrictToBodyRange:translator:cellRangeContainingName:
columnNameForColumnIndex:withFallbackFormat:
newlineCharacterSet
componentsSeparatedByCharactersInSet:
baseColumnIndexForGroupingAtColumnIndex:
filteringDisplayColumnNameForBaseColumnIndex:
lowestCategoryLevelAsLeadingColumnGroupName:
baseColumnIndexForGroupingAtRowIndex:
lowestCategoryLevelAsLeadingRowGroupName:
cellRangeNameFromChromeRangeRef:namingContext:
usedSymbolicName
translatedCellRangeName:usedSymbolicName:
chromeRowIndexForViewRowIndex:
chromeLabelForColumn:
chromeLabelForRow:
indexOfVisibleColumnBeforeColumnAtIndex:
indexOfVisibleColumnAfterColumnAtIndex:
indexOfVisibleRowBeforeRowAtIndex:
indexOfVisibleRowAfterRowAtIndex:
bodyRangeForLowestLevelGroupEnclosingCellAtCellID:
categoryColumnRange
insertRowsAtIndex:uids:metadatas:tableArea:
addUuidsFromVector:
initWithUUIDVector:
hideAtViewIndex:forAction:
moveRowRange:toRowIndex:
moveColumnRange:toColumnIndex:
hasHiddenColumnsOrRows
numberOfHiddenRowsInCellRange:
numberOfUserHiddenRowsInCellRange:
numberOfHiddenColumnsInCellRange:
hasHiddenRowAtIndex:forAction:
hasHiddenColumnAtIndex:forAction:
indexesOfFilteredColumnsInCellRange:
indexesOfVisibleColumnsInCellRegion:
indexesOfVisibleColumnsInColumnRange:
indexesOfFilteredRowsInCellRange:
indexesOfVisibleRowsInCellRange:
indexesOfVisibleRowsInCellRegion:
indexesOfUserVisibleRowsInCellRange:
indexesOfCollapsedRowsInCellRange:
hidingActionForRowAtIndex:
hidingActionForColumnAtIndex:
anyHiddenRowsInCellRange:forAction:
numberOfBaseBodyRows
hasHiddenRowAtIndex:
hasHiddenColumnAtIndex:
anyHiddenRowsInCellRange:
anyHiddenColumnsInCellRange:
stringAtCellID:optionalCell:
characterFillAtCellID:optionalCell:
hasValueOrError
columnGroupLevelForHeaderRow:
getPivotDataBundleForUidCoord:upToLevel:
rowGroupLevelForHeaderColumn:
activeFlatteningDimension
aggregateIndex
combinedDataValuesWithLocale:
stringByAppendingFormat:
stringForUnderlyingValue
isSummaryColumn:
columnGroupLevelAtColumn:outAggregateIndex:
rowGroupLevelAtRow:outAggregateIndex:
mergeCellRange:
unmergeCellRange:
mergeRangesPartiallyIntersectCellRange:
mergeRangesPartiallyIntersectCellRegion:
hasMergeRangeSpanningRowsForCellRange:
hasMergeRangesIntersectingCellRegion:
mergedGridIndicesForDimension:
regionForValueOrCommentCellsInRange:
hasRangeSpanningRowsForCellRange:
hasMergeRanges
shrinkReturningInverseForRegion:
removeReturningInverseForRegion:
performActionReturningInverse:
mergeActionForRegion:nonOriginPartialsOnly:
enumerateMergesIntersectingCellRegion:usingBlock:
mergeRangesIntersectingCellRegion:
mergeRangesAndCrumbsIntersectingRange:
initWithMergeList:
isValidMergeRange:
initWithDefaultStrokeProvider:customStrokeProvider:tableInfo:
strokeExporterReturningDefaultStrokes:
initWithStrokeProvider:tableProvider:tableInfo:
changeDescriptorWithType:cellRange:
validateChangeDescriptors:
strokeLayerForRow:
mutableStrokeLayerWithContext:subtractingDefaultsFrom:forRange:
setStrokeLayer:forTopOfRow:
setStrokeLayer:forBottomOfRow:
strokeLayerForColumn:
setStrokeLayer:forLeftOfColumn:
setStrokeLayer:forRightOfColumn:
getValue:atCellID:fetchRichTextAttributesIfPlainText:
cellValueFromCell:atCellID:
enumerateCellIDsUsingBlock:
pivotDataTableMapper
registerAllFormulasWithCalculationEngine:wasCrossDocumentPaste:wasUndo:
registerAllFormulasWithCalculationEngine:wasCrossDocumentPaste:
referenceToHiddenStateFromColumn:toColumn:
applyCollapseExpandState:outUndoState:
collapseExpandChanged:forState:
numberDoubleValue
iterateCellsInRange:flags:searchFlags:usingBlock:
numberOfCategoryColumns
numberOfBaseHeaderColumns
isLabelRow:
valueIsText
cellIDForCellContainingRichTextStorage:
writeCellIDsInCellUIDList:toVector:prunedCellUIDs:
convertCellUIDLookupList:toCellRangeVector:prunedSummaryCellUIDs:
mutableRowIndexesForUIDs:
orderedRowUidsFromUids:
columnIndexesForUIDs:
mutableColumnIndexesForUIDs:
orderedColumnUidsFromUids:
getUUIDBytes:forRowIndex:
getUUIDBytes:forColumnIndex:
rowIndexForUUIDBytes:
columnIndexForUUIDBytes:
prunedColumnUIDsFromColumnUIDs:
prunedRowUIDsFromRowUIDs:
UIDSetForIndexes:isRows:
mutableIndexesForUIDSet:isRows:
mutableIndexesForUIDSet:isRows:notFoundUIDs:
rowUuids
columnUuids
rowRangeForUIDs:
columnRangeForUIDs:
uncompressedCellUIDs
indexesForLabelRows
regionBySubtractingRowIndexes:
UIDLookupList
regionByIntersectingRowIndices:
addCellUID:
groupLevelAtLabelRow:
compressedSize
cellRegionFromCellUIDLookupList:
cellRegionFromCellUIDList:includeLabelsWithSummaries:didAddLabels:
cellRegionFromCellUIDLookupList:includeLabelsWithSummaries:didAddLabels:
p_cellRegionFromWildcardCellUIDs:includeLabelsWithSummaries:didAddLabels:
regionByAddingRegion:
regionFromCellRangeVector:
indexesForSummaryRowsAtGroupLevel:
indexesForLabelRowsAtGroupLevel:
tsu_indexSetByAddingIndexes:
region:addingRegion:
cellUIDRegionFromRegion:inTable:
cellRegionFromTable:
cellRangeForUIDRange:
cellUIDRangeForCellRange:
cellRegionForUIDRange:
cellTractRefForUIDRectRef:
getDefaultCell:forCellUID:
getCell:atCellUID:suppressCellBorder:
isGroupedForRows
isGroupedForColumns
groupByForRows
groupByForColumns
maxRowLevel
maxColumnLevel
filteringTableModel
checkStateForArchiving:
categoryOrder
hasValidInfo
hasValidUidMap
checkMapsAndAssert:
groupByChangeDistributor
hasReceiver:
hasMergeRangeSpanningRowsForBaseCellRect:
enumerateAggregates:
setRowOrder:
setSummaryModel:
resetForCategories
resetViewMap
checkState
removeReceiver:
willChangeGroupByTo:
duringSubOwnerUIDUpgrade
unregisterGroupBy:
setGroupingColumnList:
resetGroupBy
setIsEnabled:
setTranslator:
groupingColumns
setPivotSourceBodyUidTract:
setOrderUsingViewOrderForDimension:
didChangeGroupByStructure
initAsDetailTableWithContext:sourcePivotTableInfo:pivotSourceCell:
numberOfCategoryLevels
populatedCategoryGroupLevelsInColumn:
isGroupingColumn:
requiresTrailingAlignment:
requiresUnwrapping:
indexesForGrandTotalRows
indexesForGrandTotalColumns
indexesForLeadingRows
indexesForLeadingColumns
hasHeaderColumnForAggregateNames
hasHeaderRowForAggregateNames
allRowGroupUIDs
allColumnGroupUIDs
indexesForRowsContainedByGroupUIDs:
indexesForColumnsContainedByGroupUIDs:
collapseSummaryRowGroupUIDs:
expandSummaryRowGroupUIDs:
isGroupOrParentsCollapsed:dimension:
isGroupCollapsedAndVisible:dimension:
indexesForSummaryColumnsAtGroupLevel:
indexesForLeadingRowsAtGroupLevel:
indexesForLeadingSummaryRowsAtGroupLevel:
indexesForLeadingColumnsAtGroupLevel:
indexesForLeadingSummaryColumnsAtGroupLevel:
indexesForGroupingColumns
groupingColumnAtCategoryLevel:
groupingColumnLevelsForColumn:
groupingType
enumerateGroupingColumnsForColumn:withBlock:
groupingArrowStateAtCellID:
isRowGroupUIDCollapsed:
isColumnGroupUIDCollapsed:
regionByIntersectingColumnIndices:
peerCellRegionForCellRegion:
setAggregateType:forColumnUID:atGroupLevel:
labelRowVisibilityAtCategoryLevel:
summaryRowHeightAtCategoryLevel:
setSummaryRowHeight:atCategoryLevel:
labelRowHeightAtCategoryLevel:
setLabelRowHeight:atCategoryLevel:
categoryColumnWidth
addUuidsFromSet:
didMakeGroupingChangesInRowUIDs:
regionFromRowIndices:
iteratorClass
loadFromArchive:unarchiver:
setCategoryOrder:
setLayoutEngine:
newObjectUUIDWithOffset:
initWithGroupings:categoryOwner:groupByUid:ownerIndex:
setupAfterUnarchiveForPivotTable:pivotDataTable:
setHiddenStates:
setHiddenStateOwnerForColumnsUID:
setHiddenStateOwnerForRowsUID:
setNeedsToUpdateFilterSetForImport:
initWithContext:tableInfo:rowUids:
setRowUIDsWithPendingGroupingChanges:
setPartitioner:
preUFFVersion
shiftGeometryToIncludeTableNameHeight
sourceType
reassignPasteboardCustomFormatKeys
isInlineWithText
pushScopeForField:message:usingBlock:
initWithLayoutEngine:
hiddenStateExtentUid
localizedDescriptionForProtoIndex:
geometryForPrototypeIndex:withCanvasPoint:
tablePrototypeWithIndex:context:geometry:styles:
canPartitionInline
canPartitionForPrinting
bootstrapPresetsOfKind:inTheme:alternate:
presetKinds
validateNewName:forTable:
performRewritesForInsertedTableInfos:
ensureAllTablesAreRegisteredInDocumentRoot:
upgradeTablesIfNeeded:forDocumentRoot:
tableStyleAreaForCellID:inTableWithHeaderColumns:headerRows:footerRows:totalRows:
matchesObjectPlaceholderGeometry
setMatchesObjectPlaceholderGeometry:
clearBackPointerToParentInfoIfNeeded:
isSelectable
layoutClass
repClass
isThemeContent
parentInfo
owningAttachment
setOwningAttachment:
owningAttachmentNoRecurse
isFloatingAboveText
isAnchoredToText
isInlineWithTextWithWrap
isAttachedToBodyText
isAllowedToAddCaptionToChildInfo:
uuidPathPrefixComponentsProvider
collaboratorCursorForSelectionPath:
T@"TSDInfoGeometry",C,N
T@"NSObject<TSDInfo>",N
T@"TSPObject<TSDOwningAttachment>",N
T@"TSPObject<TSDOwningAttachment>",R,N
floatingAboveText
TB,R,N,GisFloatingAboveText
anchoredToText
TB,R,N,GisAnchoredToText
inlineWithText
TB,R,N,GisInlineWithText
inlineWithTextWithWrap
TB,R,N,GisInlineWithTextWithWrap
attachedToBodyText
TB,R,N,GisAttachedToBodyText
childInfos
prohibitsModificationToChildren
isMaster
T@"NSArray",R,C,N
searchForAnnotationsWithHitBlock:
enumerateAllAnnotationsInModelWithHitBlock:
continueAnnotationSearch:
commandForReplaceAllWithProvider:
T@"NSSet",R,N
replaceReferencedStylesUsingBlock:
referencedStyles
afterReplacingReferencedStylesSetStylesheet:
mergesIntersectingRange:
mergesIntersectingCellRegion:
textIsVerticalAtCharIndex:
autoListRecognition
autoListTermination
textIsLinked
preventsComments
preventsChangeTracking
supportsMultipleColumns
storageChangesInvalidateWrap
supportsVerticalTextLayoutInChildStorages
supportsDropCapsInChildStorages
Tq,R,N
initWithContext:geometry:rows:columns:stylePreset:
initWithContext:geometry:rows:columns:
initForTestingWithContext:rows:columns:
initWithContext:geometry:styles:
initWithContext:otherTableInfo:
initPivotTableWithContext:sourceTableInfo:
hasUsefulPivotSourceCellsInBodyRange:
p_popupItemsForStrings:
p_setPopupMenuOnCell:withItems:andSelectedIndex:
p_setFormulaWithSymbolCellCoord:andAttributeCellCoord:atCellID:
p_setFormulaWithSymbolString:atCellID:
additionalObjectsToCopy
componentRootObject
layoutEngineEffectiveTableNameHeight
isSafeToConvertToImageForImagePaste
isSafeToConvertToAttributedString
isSafeToConvertToText
resolver
supportsHyperlinks
elementKind
supportsAttachedComments
supportsRichTextUndoAtCellID:
isNewlyImported
nsFilteringTableUID
pivotSourceNSTableUID
pivotSourceTableInfo
pivotSourceIsRangeBased
pivotSourceRangeName
notifyTableOfNewResults
filteringRange
filteringBodyRange
filteringBodyRowRange
filteringBaseColumnRange
filteringColumnNameForBaseColumnIndex:
setFilterSet:
chunkCountForTextureDeliveryStyle:animationFilter:
textureDeliveryStylesLocalized:animationFilter:
requiresStagesBuildingInReverse
suppliesFinalTextures
scaleInfoGeometry:
canAspectRatioLockBeChangedByUser
mergedContainedStorages
infoForSelectionPath:
presetKind
shouldCancelScrollingToSelectionPath:forChanges:
setInsertionCenterPosition:
geometryForRTLTableWithGeometry:
contentsAreRightToLeft
allowsCaption
canCommentInCaptionOrTitle
allowsTitle
typeName
setHasReference:
willCopyWithOtherDrawables:
didCopy
didReplaceTextsInStoragesWithPlaceHolderString
prepareForPasteWithSourceOffset:bakeFormulas:
postCommentNotificationForStorage:atCellID:notificationKey:
allAnnotations
bakeFormulas
applyWritingDirection:toCell:cellID:
notifyAboutStructuredTextImportState
duplicateFilterSet
duplicateFilterSetInUidForm
needsFilterFormulaRewriteForImport
setNeedsFilterFormulaRewriteForImport:
hasFilterRulesInBaseColumns:
hasFilterRulesAffectingInsertRows
allBodyValuesAsPregArgDataListForColumnIndex:
canTranspose
useBandedFill
bandedFillObject
hasUntitledTableNameFormat
chooseUniqueNameInContainer:forPaste:needsNewName:
cellIDIsLegal:
tableAreasForCellRange:
setCell:atCellCoord:
cellMapForRegion:uidBased:suppressMergeContent:useCategoriesWildcards:
concurrentCellMapForRegion:suppressMergeContent:
getCell:atCellID:holdingReadLockWithAccessController:
noRuleConditionalStyleSet
rowNameForCellID:restrictToBodyRange:
pivotHeaderColumnDisplayNameAtIndex:
pivotLeadingColumnDisplayNameAtIndex:
pivotHeaderRowDisplayNameAtIndex:
pivotLeadingRowDisplayNameAtIndex:
cellRangeName:usedSymbolicName:
chromeLabelForCellID:
numberOfCells
cellIDLeftOfCellID:
cellIDRightOfCellID:
cellIDAboveCellID:
cellIDBelowCellID:
insertRowsAtIndex:count:addBefore:
insertColumnsAtIndex:count:addBefore:
importDeferredRemoveGroupingRowsAtIndexes:
processDeferredImportActions
hasDeferredImportActions
isCellRangeHidden:
numberOfVisibleBodyRows
numberOfUserVisibleBodyRows
numberOfVisibleBodyColumns
cellValueViewStringAtCellID:optionalCell:
labelValueViewStringAtCellID:optionalCell:
backgroundFill
bodyFill
headerColumnsFill
headerRowsFill
footerRowsFill
fillForColumn:
valueToUseForSummaryCellFormulaError
hasCellID:
cellRegionWithConditionalStyleMatchingCell:
minPopulatedCellRange
findChartableRangesFromTableRange:getBodyRange:headerColumnRange:headerRowRange:
cellUIDListFromCellRegion:
cellRegionFromCellUIDList:
cellUIDForCellID:useCategoriesWildcards:
textStyleForCellWithEmptyStyleAtCellUID:isDefault:
fromTableCoordMapperForPasteboard
applyGroupingColumns:
setIsCategoryEnabled:
startPivotChanges
updatePivotDataModel:pivotDataRefreshUID:pivotDataRefreshTimestamp:uidBodyTract:
handlePivotSorting:
resetPivotOrder
createDetailTableForPivotTableCell:
numberOfBaseColumns
numberOfBaseRows
numberOfBaseHeaderRows
numberOfBaseFooterRows
numberOfChromeColumns
numberOfChromeRows
numberOfChromeHeaderColumns
numberOfChromeHeaderRows
numberOfChromeFooterRows
numberOfGroupLevelsShowingLabelsUnderGroupAtIndex:
isSummaryCell:
isCategoryLabelCell:
isCategoryColumnUneditableCell:
isCategoryGroupingColumn:
isCategoryAnyKindOfCell:
isPivotAnyKindOfCell:
isPivotGrandTotalRow:
isPivotGrandTotalColumn:
isPivotLeadingRow:
isPivotLeadingColumn:
columnIndexForGroupingColumn:
allRowUIDsAtGroupLevel:withFilter:
allColumnUIDsAtGroupLevel:withFilter:
collapseSummaryGroupUIDs:
expandSummaryGroupUIDs:
isGroupingRowCollapsedAndVisible:
isGroupingColumnCollapsed:
isGroupingColumnCollapsedAndVisible:
hasSummaryRowsInRegion:
indexesForSummaryRowsAtGroupLevel:inRegion:
indexesForSummaryRowsUpToGroupLevel:omitGroupsWithUids:
indexesForSummaryRowsFromGroupLevel:toGroupLevel:
indexesForSummaryColumnsFromGroupLevel:toGroupLevel:
indexesForSummaryColumnsInRegion:
indexesForLabelRowsAtGroupLevel:inRegion:
indexesForLabelRowsUpToGroupLevel:omitGroupsWithUids:
indexesForLeadingRowsInRegion:
indexesForLeadingColumnsInRegion:
indexesForBodyAndFooterRows
indexesForBodyRowsInGroupWithRowAtIndex:
regionSubtractingCategoryColumnsAndRows:
groupingColumnLevelCountForColumn:
groupingTypesAreUniqueForColumn:
hasGroupingArrowInCellRegion:
baseTableUID
categoryRefReferringToCellRef:
shouldDisplaySummaryLabelRowAtGroupLevel:
willMakeGroupingChangesInRowUIDs:
processRowsWithPendingGroupingChangesAndReturnAffectedCellRegion
commandForSettingTableDirection:icc:
verifyPivotTableConnections
editorClass
rowUIDsWithPendingGroupingChanges
dragAndDropDetails
setDragAndDropDetails:
isCopyContainingCategoryColumn
setIsCopyContainingCategoryColumn:
hasReference
overrideLayoutHint
setOverrideLayoutHint:
pivotOrder
hiddenStatesUid
setHiddenStatesUid:
setFromTableCoordMapperForPasteboard:
wasRemovedFromDocument
migratingStylesOnly
setMigratingStylesOnly:
rowUIDsForImportedGroupingRows
setRowUIDsForImportedGroupingRows:
documentIsClosing
tableTranslatorBaseMapForPasteboard
setTableTranslatorBaseMapForPasteboard:
tableTranslatorViewMapForPasteboard
setTableTranslatorViewMapForPasteboard:
setArchivedLayoutEngineBundle:
_tableModel
_noRuleConditionalStyleSet
_needsFilterSetUpdated
_isCopyContainingCategoryColumn
_hasReference
_isAPivotTable
_wasRemovedFromDocument
_migratingStylesOnly
_documentIsClosing
_partitioner
_layoutEngine
_summaryModel
_rowUIDsWithPendingGroupingChanges
_formulaCoordSpace
_dragAndDropDetails
_overrideLayoutHint
_categoryOrder
_pivotDataModel
_pivotOrder
_hiddenStates
_translator
_fromTableCoordMapperForPasteboard
_rowUIDsForImportedGroupingRows
_archivedLayoutEngineBundle
_groupByUid
_hiddenStatesUid
_tableTranslatorBaseMapForPasteboard
_tableTranslatorViewMapForPasteboard
T@"TSCEMutableUIDSet",&,N,V_rowUIDsWithPendingGroupingChanges
TB,N,V_migratingStylesOnly
T@"TSCEMutableUIDSet",&,N,V_rowUIDsForImportedGroupingRows
TB,N,V_documentIsClosing
T{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}},N,V_tableTranslatorBaseMapForPasteboard
T{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}},N,V_tableTranslatorViewMapForPasteboard
T@"TSTArchivedLayoutEngineBundle",&,N,V_archivedLayoutEngineBundle
Tq,N,V_formulaCoordSpace
T@"NSDictionary",&,N,V_dragAndDropDetails
TB,N,V_isCopyContainingCategoryColumn
TB,N,V_hasReference
T@"TSTTablePartitioner",&,N,V_partitioner
T@"TSTLayoutHint",&,N,V_overrideLayoutHint
T@"TSTLayoutEngine",&,N,V_layoutEngine
categorized
TB,R,N,GisCategorized
T@"TSCECalculationEngine",N
T@"TSTSummaryModel",R,N,V_summaryModel
T@"TSTColumnRowUIDMap",R,N,V_columnRowUIDMap
T@"TSTCategoryOrder",R,N,V_categoryOrder
TB,R,N,V_isAPivotTable
T@"TSTTableModel",R,&,N,V_pivotDataModel
T@"TSTTableModel",R,N
T@"TSTTableTranslator",R,N
T@"TSTPivotRowColumnOrder",R,N,V_pivotOrder
T@"TSTPivotOwner",R,N
T@"TSTGroupBy",R,N
T{TSKUIDStruct=QQ},N
TI,N
Td,N
T@"NSString",&,N
Tq,N
T@"TSTTableStylePreset",&,N
T@"TSDFill",R,N
T@"TSTConcurrentMutableCellUIDSet",R,N
T@"TSTConditionalStyleFormulaOwner",R,N
T@"TSTCategoryOwner",R,N
T@"TSTHiddenStatesOwner",R,N
T@"TSTHiddenStates",&,N,V_hiddenStates
T@"TSTTableInfo",R,N
T@"TSTPencilAnnotationOwner",R,N
T@"TSTTableFilterSet",C,N
T{TSKUIDStruct=QQ},N,V_hiddenStatesUid
T@"TSTTableGroupSortOrderUID",N
T@"TSTTableSortOrder",C,N
T@"TSTSortRuleReferenceTracker",R,N
T@"TSTStrokeSidecar",R,N
T@"TSTCellWillChangeDistributor",R,N
T@"TSTTableTranslator",&,N,V_translator
T@"TSCECoordMapper",&,N,V_fromTableCoordMapperForPasteboard
T@"TSTStructuredTextImportRecord",&,N
reimportable
TB,R,N,GisReimportable
newlyImported
TB,R,N,GisNewlyImported
T@"NSArray",R,&,N
TB,R,N,V_wasRemovedFromDocument
T@"TSTGroupBy",&,N,V_groupBy
T{TSUChromeColumnIndex=S},R,N
T{TSUChromeRowIndex=I},R,N
T{TSKUIDStruct=QQ},N,V_groupByUid
T@"TSDInfoGeometry",C,D,N
T@"NSObject<TSDInfo>",D,N
T@"TSPObject<TSDOwningAttachment>",D,N
T@"TSPObject<TSDOwningAttachment>",R,D,N
TB,R,D,N,GisFloatingAboveText
TB,R,D,N,GisAnchoredToText
TB,R,D,N,GisInlineWithText
containsProperty:
performBlockWithTemporaryLayout:
objectForProperty:
floatValueForProperty:
boxedObjectForProperty:
doubleValueForProperty:
CGFloatValueForProperty:
cellDiffMapWithContext:
cellDiff
cellAfterApplyDiff:toCell:atCellUID:migrationMap:inverseCellDiff:concurrentStylesheet:defaultCellStyle:defaultTextStyle:
p_performCommentStorageDOLC:
doesSetProperty:
boolValueForSetProperty:
addCustomFormat:oldKey:fuzzyNameMatching:
properties
containsAnyPropertiesInSet:
canBeVendorStorageUid:
setCell:atCellUID:
summaryCellVendor
copyToUidFormForTableInfo:inCellCoordinate:
cellByApplyingCellDiff:toTable:andUpdateInverse:optionalConcurrentStylesheet:
tableUIDMap
p_postCommentNotificationFromDiff:inverseDiff:cellID:
applyCellDiffMap:migrationHelper:updateProperties:
applyCellMap:outPrunedCellMap:outInverseCellMap:options:stylesContainer:
applyCellDiff:atCellUID:migrationMap:inverseCellDiff:defaultCellStyle:defaultTextStyle:
applyConcurrentCellMapToBaseTable:options:requestPruneMap:stylesContainer:migrationHelper:
allowUnarchivingObjectClass:
setCurrencyDoubleValue:
dateWithTimeIntervalSinceReferenceDate:
object
setRichTextValueWithoutPlaintextCollapse:
formatFromArchive:
setFormat:isExplicit:
suggestCellFormatKind:
initFromMessage:unarchiver:
currencyDoubleValue
replies
numberFormat
encodeToArchive:archivingCustomFormats:
currencyFormat
dateFormat
durationFormat
booleanFormat
cellFormatKind
explicitFormatFlags
conditionalStyleAppliedRule
saveToMessage:archiver:
initWithLayoutEngine:range:flags:searchFlags:
cellIteratorWithRange:flags:searchFlags:
iterateCellsAndTerminateWithIterator:usingBlock:
regionFromMergeList:
addRange:
mergeListWrapperWithRangesPassingTest:
regionForList
_mergeList
TB,R
grabViewUidMapper
setViewRangeRef:preserveFlags:
setChromeRangeRef:preserveFlags:
convertUIDRefToViewTractRef
convertViewTractRefToUID
copyOnWriteUIDMapper
viewTractRef
topLeft
bottomRight
initWithTopLeft:bottomRight:tableUID:
initWithCalcEngine:viewTractRef:
initWithCalcEngine:tableUID:uidRange:preserveFlags:
viewMap
spansAllColumns
spansAllRows
uidRange
numColumns
viewColumnIndexesForUIDs:
viewRowIndexesForUIDs:
viewRangeRefs
baseRangeRefs
tsu_indexSetByExcludingIndexes:
baseRowIndexForViewRowIndex:
baseToViewPreserveFlagsAreInverted
setViewPreserveFlags:
viewRowIndexesForChromeRowIndexes:
viewColumnIndexesForChromeColumnIndexes:
viewTractRefForChromeTractRef:
viewTractRefForBaseTractRef:
viewPreserveFlags
setSpansAllColumns:
setSpansAllRows:
chromeTractRefForViewTractRef:
viewCellRegionForBaseCellRegion:
referenceIsValid:
initWithColumnUids:rowUids:purpose:
appendUidTract:
uidTractListWithPurpose:
initWithCalcEngine:viewRangeRef:preserveFlags:
initWithCalcEngine:chromeRangeRef:preserveFlags:
initWithCalcEngine:baseRangeRef:preserveFlags:
isViewRectangle
isBaseRectangle
baseRangeRef
viewRangeRef
baseTractRef
chromeTractRef
viewTractRefIfFullyValid
viewTopLeftCoord
viewBottomRightCoord
baseTopLeftCoord
baseBottomRightCoord
viewCellRegionWithRangeContext:
isValidReference
includeUidTractList
area
singleReferencedColumnUid
setBasePreserveFlags:
needsUidRectUpgrade
setNeedsUidRectUpgrade:
chromeRangeRef
setChromeRangeRef:
_uidRange
_lastKnownViewTractRef
_viewMapVersionCounter
_needsUidRectUpgrade
_viewUidMapper
_basePreserveFlags
_chromeRangeRef
T@"TSCECalculationEngine",W,N,V_calcEngine
TC,N,V_basePreserveFlags
TC,N
T{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}},R,N
T{TSKUIDStruct=QQ},R,N,V_tableUID
T{TSUViewCellCoord={TSUCellCoord=ISBB}},R
T{TSUModelCellCoord={TSUCellCoord=ISBB}},R
TB,N,V_needsUidRectUpgrade
T{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}},N,V_chromeRangeRef
hiddenColumnIndexes
hiddenRowIndexes
indexesOfHiddenColumnsInBaseCellRange:
indexesOfHiddenRowsInBaseCellRange:
initWithInfo:region:flags:searchMask:
initWithStrokeSidecar:region:
addIterator:
newRightToLeftIterator
newIterator
getNext
p_getNextCellID
p_updateDataForCellID:
setRegionIterator:
advanceToCellID:
mergeRangesIntersectingBaseCellRect:
mergeListFromModelMergeList:
updateCellData:
updateFormulaForCellData:
p_updateDataForMergeAtCellID:
nextCellData
initWithTableInfo:region:flags:searchFlags:clampingRange:
initWithTableInfo:flags:searchFlags:
initWithTableInfo:range:flags:searchFlags:
returnCellContents
region
cellData
setCellData:
returnEmptyCells
setReturnEmptyCells:
returnOneEmptyCell
setReturnOneEmptyCell:
terminateRegionIterator
setTerminateRegionIterator:
returnOnlyFormulas
setReturnOnlyFormulas:
returnMergeRanges
setReturnMergeRanges:
contentIterator
setContentIterator:
strokeIterator
setStrokeIterator:
regionIterator
dataStoreIterator
setDataStoreIterator:
rowForColumnIndexesWithMerges
setRowForColumnIndexesWithMerges:
_columnIndexToMergeRangeMap
_returnCellContents
_returnEmptyCells
_returnOneEmptyCell
_terminateRegionIterator
_returnOnlyFormulas
_returnMergeRanges
_rowForColumnIndexesWithMerges
_region
_cellData
_contentIterator
_strokeIterator
_regionIterator
_dataStoreIterator
T@"TSTTableInfo",&,N,V_tableInfo
T@"TSTTableModel",&,N,V_tableModel
T@"TSTCellRegion",R,N,V_region
T@"TSTMutableCellIteratorData",&,N,V_cellData
TB,N,V_returnEmptyCells
TB,N,V_returnOneEmptyCell
TB,N,V_terminateRegionIterator
TB,N,V_returnOnlyFormulas
TB,N,V_returnMergeRanges
T@"<TSTCellRegionIterating><TSTMutableCellIteratorDataUpdating>",&,N,V_contentIterator
T@"<TSTCellRegionIterating><TSTMutableCellIteratorDataUpdating>",&,N,V_strokeIterator
T@"<TSTCellRegionIterating>",&,N,V_regionIterator
T@"<TSTCellRegionIterating><TSTMutableCellIteratorDataUpdating>",&,N,V_dataStoreIterator
TI,N,V_rowForColumnIndexesWithMerges
TB,R,N,V_returnCellContents
initWithProperties:
p_regionStringForTableStyleArea:
colorWithColor:
blackColor
whiteColor
colorWithRed:green:blue:alpha:
p_initBodyRegionPropertyMap:presetID:colors:alternate:
p_initHeaderRowRegionPropertyMap:presetID:colors:alternate:
p_initHeaderColumnRegionPropertyMap:presetID:colors:alternate:
p_initFooterRowRegionPropertyMap:presetID:colors:alternate:
validateIntValue:forProperty:
validateObjectValue:withClass:forProperty:
loadCellStylePropertiesIntoPropertyMap:fromArchive:unarchiver:
overrideCount
saveCellStylePropertiesToArchive:archiver:
loadCellStyleFromArchive:unarchiver:
saveCellStyleToArchive:archiver:
isIdentified
styleIdentifier
imageData
renderedImageSizeForObjectSize:
definesProperty:
null
setValue:forProperty:
propertySet
allProperties
addProperties:
boxedValueForProperty:
enumeratePropertiesUsingBlock:
setBoxedValue:forProperty:
propertiesAllowingNSNull
nonEmphasisCellProperties
categoriesCellProperties
styleIDForPreset:andTableStyleArea:
textStyleIDForPreset:andTableStyleArea:
initDefaultPropertyMap:forTableStyleArea:presetID:colors:alternate:
targetSizeForImageData:associatedHint:
upgradeIfNecessary
containsStyle:
argumentSpec
insertFormulaText:includeWhitespace:
numberWithUnsignedInteger:
setWithSet:
expressionsMatchingCSENodeData:forNode:
recordExpression:data:
expressionsIdenticalToExpression:
expressionSize:
_nodesToData
_hashesToNodeSets
strongToStrongObjectsMapTable
groupByForRowGroups
groupByForColumnGroups
rowGroupings
columnGroupings
baseMap
orderedUidsForDimension:
rowUidsForRowGroupUid:
columnUidsForColumnGroupUid:
flushCachedIndexSets
initWithTableUID:summaryColumns:summaryRows:labelRows:
setChromeCoordsAreViewCoords:
mapBaseRow:toViewRow:
mapBaseColumn:toViewColumn:
summaryMap
mapSummaryRow:toViewRow:
mapSummaryColumn:toViewColumn:
viewCellCoordForCellUID:
p_columnRowTypeForColumnIndex:
p_columnRowTypeForRowIndex:
styleAreaForColumnType:rowType:forAPivotTable:
cellValueTypeAtSummaryModelCoord:
p_applyViewCellCoord:toSummaryUsingBlock:toBaseUsingBlock:
p_applyViewRowIndex:toSummaryUsingBlock:toBaseUsingBlock:toBeyondBoundsUsingBlock:
p_applyViewColumnIndex:toSummaryUsingBlock:toBaseUsingBlock:toBeyondBoundsUsingBlock:
baseColumnIndexForViewColumnIndex:
summaryColumnIndexForViewColumnIndex:
summaryCellCoordForViewCellCoord:
getCell:atCellCoord:
baseCellCoordForCellUID:
summaryRowIndexForViewRowIndex:
cellExistsAtCellCoord:
regionFromCellCoordSet:
viewRowIndexForRowUID:
indexLessThanIndex:
viewColumnIndexForColumnUID:
rowGroupUidForRowUid:outAggregateIndex:
columnGroupUidForColumnUid:outAggregateIndex:
i_populatePivotCachedIndexSetsIfNeeded
numberWithUnsignedChar:
i_indexesForSummaryColumnsAtGroupLevel:
i_indexesForLeadingColumnsAtGroupLevel:
i_indexesForLeadingSummaryColumnsAtGroupLevel:
i_populateIndexesForSummaryColumns
i_populateIndexesForLeadingColumns
i_populateIndexesForLeadingSummaryColumns
minRowLevel
minColumnLevel
maxVisibleRowLevel
maxVisibleColumnLevel
metadataForColumnIndex:
aggregateIndexForColumnIndex:
aggregateIndexForRowIndex:
i_indexesForSummaryRowsAtGroupLevel:
cachedPivotIndexSetsAreValid
setCachedPivotIndexSetsAreValid:
pivotCachedIndexesUnfairLock
setPivotCachedIndexesUnfairLock:
cachedIndexesForSummaryColumns
setCachedIndexesForSummaryColumns:
cachedSummaryColumnIndexesAtLevels
setCachedSummaryColumnIndexesAtLevels:
cachedIndexesForLeadingColumns
setCachedIndexesForLeadingColumns:
cachedLeadingColumnIndexesAtLevels
setCachedLeadingColumnIndexesAtLevels:
cachedLeadingSummaryColumnIndexesAtLevels
setCachedLeadingSummaryColumnIndexesAtLevels:
_cachedPivotIndexSetsAreValid
_pivotCachedIndexesUnfairLock
_cachedIndexesForSummaryColumns
_cachedSummaryColumnIndexesAtLevels
_cachedIndexesForLeadingColumns
_cachedLeadingColumnIndexesAtLevels
_cachedLeadingSummaryColumnIndexesAtLevels
TB,N,V_cachedPivotIndexSetsAreValid
T{os_unfair_lock_s=I},N,V_pivotCachedIndexesUnfairLock
T@"NSIndexSet",&,N,V_cachedIndexesForSummaryColumns
T@"NSMapTable",&,N,V_cachedSummaryColumnIndexesAtLevels
T@"NSIndexSet",&,N,V_cachedIndexesForLeadingColumns
T@"NSMapTable",&,N,V_cachedLeadingColumnIndexesAtLevels
T@"NSMapTable",&,N,V_cachedLeadingSummaryColumnIndexesAtLevels
initWithSymbol:attribute:
symbol
attribute
detailsWithSymbol:attribute:
isEqualToStockDetails:
setSymbol:
setAttribute:
_symbol
_attribute
T@"NSString",&,N,V_symbol
Tq,N,V_attribute
initWithTileRowIndex:wideOffsets:
_archivedColumnCount
_replaceCellAtIndex:withCell:formatKeys:
_insertCell:atIndex:formatKeys:
_removeCellAtIndex:
enumerateStoragesInColumnRange:getPreBNC:withBlock:
validateWithResult:
stringWithString:
accumulateCurrentCellsConcurrentlyAtColumns:usingCellCreationBlock:
lockForConcurrentAccess
unlockForConcurrentAccess
cellIndexAtOrAfterIndex:
cellIndexAtOrBeforeIndex:
enumerateStoragesInColumnRange:withBlock:
searchCellStorageRefAtColumnIndex:searchMask:
_currentData
_preBNCData
_maxColumnIndexPrivate
_maxColumnIndexIsValidPrivate
_unfairLock
_tileRowIndex
_cellCount
TI,N,V_tileRowIndex
TQ,R,N,V_cellCount
uuidsAsTSUVector
uidsCollapsed
uidsExpanded
initWithCollapsed:expanded:dimension:
initWithTSUUUIDVector:
initWithArchive:
saveToArchive:
makeInverse
dimension
_collapsedGroupUIDs
_expandedGroupUIDs
_dimension
_uidsCollapsed
_uidsExpanded
T@"TSCEUIDSet",R,N,V_uidsCollapsed
T@"TSCEUIDSet",R,N,V_uidsExpanded
Tq,R,N,V_dimension
numberWithInteger:
integerValue
p_computeinteractionType:
initWithFormulaObject:locale:
p_mightBeEqual:
isEquivalentToFormula:
initWithArchive:isPreUFF:
T@"TSCEFormulaObject",R,N
initWithFormulaObject:fromTableInfo:fromCellID:
cellSpecReplacingFormulaObject:locale:
hasTSCEFormula
isEquivalent:
categoryAggregateType
stockDetails
_formulaObject
_locale
_categoryAggregateType
_stockDetails
T@"TSCEFormulaObject",R,N,V_formulaObject
TC,R,N,V_categoryAggregateType
T@"TSTStockDetails",R,N,V_stockDetails
hasNumberFormat
hasCurrencyFormat
hasDateFormat
hasDurationFormat
hasTextFormat
hasBooleanFormat
hasImportWarningSet
underlyingDoubleValue
stringID
richTextID
cellStyleID
textStyleID
controlCellSpecID
formulaSyntaxErrorID
numberFormatID
currencyFormatID
dateFormatID
durationFormatID
textFormatID
booleanFormatID
commentStorageID
importWarningSetID
setValueType:
setExplicitFormatFlags:
setCurrencyDecimalValue:roundToDoublePrecision:
setNumberDecimalValue:roundToDoublePrecision:
setStringID:
setRichTextID:
setCellStyleID:
setTextStyleID:
setConditionalStyleID:
setFormulaID:
setControlCellSpecID:
setFormulaSyntaxErrorID:
setNumberFormatID:
setCurrencyFormatID:
setDateFormatID:
setDurationFormatID:
setTextFormatID:
setBooleanFormatID:
setCommentStorageID:
setImportWarningSetID:
ruleAtGroupLevel:
p_isEqual:
groupingColumnUid
insertObject:atIndex:
removeObjectAtIndex:
ruleAtIndex:
initWithGroupingColumnUid:columnUid:groupingType:
replaceRuleAtIndex:withRule:
replaceObjectAtIndex:withObject:
addRule:atIndex:
removeRuleAtIndex:
moveRuleFromIndex:toIndex:
changeGroupingTypeForRuleIndex:toType:
initWithGroupingColumns:
groupingColumnForColumnUID:
isGroupingColumnUidsEqual:
appendRules:
addRule:atGroupLevel:
removeRuleAtGroupLevel:
moveRuleFromGroupLevel:toLevel:
changeGroupingTypeForGroupLevel:toType:
replaceRuleAtGroupLevel:withRule:
groupingColumnUidList
_groupingColumns
initWithFormatString:
formatString
datePortionOfDateTimeFormatString:
formatStringContainsOnlyDate
formatStringContainsAMPMSpecifier
todayFormatForLocale:
nowFormatForLocale:
resetGroupingList
resetGroupings
asArray
columnAggregateUid
pivotDataTableUID
setGroupBySet:
clearMissingCombinations
aggregateAtIndex:
setMinion:
numPracticalGroupBys
groupingColumnsForOwnerIndex:
registerGroupByForColumns:ownerIndex:hiddenStates:groupBySet:
setAggregates:
flushAllChanges
p_resetAllGroupUids:baseGroupUids:summaryGroupUids:forGroupBy:uptoLevel:isFlattening:
initialGroupOrderForGroupBy:baseLevel:outAllUids:outBaseUids:outSummaryUids:
groupColumnIndexesForOwnerIndex:
groupByForOwnerIndex:createIfMissing:
topLevelGroupNode
showAsType
aggregateIndexForUidCoord:
qualifiedColumnNameForAggregateIndex:useShortLabel:allowDuplicateNames:locale:
aggregateType
localizedShortLabelForAggType:
localizedLabelForAggType:
columnNameForAggregateIndex:allowDuplicateNames:
compactQualifiedColumnNameForAggregateIndex:useShortLabel:allowDuplicateNames:locale:
localizedCaseInsensitiveCompare:
groupByForColumnLevel:rowLevel:
groupValueUidForTuple:appendingTuple:
setAggregateIndex:
setAggregateType:
setShowAsType:
setAggregateFieldName:
columnNameForCategoryLevel:shortForm:
addDataField:withValue:
ownerIndex
findGroupNodeForValue:atLevel:createIfMissing:
topLevelGroupUid
categoryRefForUidCoord:outShowAsType:
setColumnUid:
setType:
firstAggregate
groupingColumnForIndex:
percentRunningDenominatorCategoryRefFor:inGroupBy:runningOnColumnUid:forAggregate:
groupingIndexForColumnUID:
ownerIndexForGroupingCombination:
findExistingGroupNodeInGroupBy:usingValues:upToLevel:
columnGroupLevelForColumnUID:
rowGroupLevelForRowUID:
anyAggregator
groupNodeForUuidCoord:
groupByForUuidCoord:
groupValueTupleByAppendingTuple:
initWithPivotTableUID:
linkToCalcEngine:
restoreFromPivotDataTable:columnGroupings:rowGroupings:aggregates:flatteningDimension:
setPivotRulesWithPivotDataTable:columnGroupings:rowGroupings:aggregates:flatteningDimension:
maxGroupByIndex
sawMissingCombination:
allGroupRoots
allColumnGroupUids
allRowGroupUids
baseColumnGroupUids
baseRowGroupUids
summaryColumnGroupUids
summaryRowGroupUids
allColumnUids
allRowUids
baseColumnUids
baseRowUids
hasRunningTotalAggregates
expandGroupUidsForFlattening:forDimension:
aggregateIndexForColumnUid:
aggregateIndexForRowUid:
aggregateForUidCoord:
aggregateIndexForAggName:locale:
columnUIDForGroupingColumnName:
getPivotDataBundleForUidCoord:
grandGrandTotalCategoryRefForAggregate:
grandTotalCategoryRefForColumn:forAggregate:
grandTotalCategoryRefForRow:forAggregate:
percentParentDenominatorCategoryRefFor:inGroupBy:forAggregate:forShowAsType:
restrictColumnIndexes:toColumnGroupLevel:forPivotTable:
restrictRowIndexes:toRowGroupLevel:forPivotTable:
restrictColumnIndexes:forAggrIndexLevel:forPivotTable:
restrictRowIndexes:forAggrIndexLevel:forPivotTable:
hasUnfilteredAt:forDimension:
filteringCategoryRefAt:forDimension:
getPivotHidingIndexesForGroupingColumn:columns:rows:forHiding:forPivotTable:
getHidingIndexesForGrandTotalsForPivotTable:columns:rows:
groupValueTupleForUuidCoord:createIfMissing:
verifyConnectionsWithPivotDataModel:pivotTableUID:
pivotTableUID
setPivotTableUID:
pivotDataTable
bodyGroupingList
setBodyGroupingList:
_inUseGroupBys
_aggregateUidList
_aggregateUidMap
_allColumnGroupUids
_baseColumnGroupUids
_summaryColumnGroupUids
_allRowGroupUids
_baseRowGroupUids
_summaryRowGroupUids
_allFlattenedUids
_baseFlattenedUids
_groupAggregateUidFlatteningMap
_groupAggregateUidUnflatteningMap
_assertedOnMissingCombinations
_filterSet
_pivotDataTable
_columnGroupings
_rowGroupings
_aggregates
_flatteningDimension
_activeFlatteningDimension
_bodyGroupingList
_pivotTableUID
T@"TSTGroupingColumnList",&,N,V_bodyGroupingList
TB,R,N,V_isRegisteredWithCalcEngine
T{TSKUIDStruct=QQ},N,V_pivotTableUID
T@"TSTTableModel",R,N,V_pivotDataTable
T@"TSCECalculationEngine",&,N,V_calcEngine
T@"TSTGroupingColumnList",R,N,V_columnGroupings
T@"TSTGroupingColumnList",R,N,V_rowGroupings
T@"TSTColumnAggregateList",R,N,V_aggregates
Tq,R,N,V_flatteningDimension
Tq,R,N,V_activeFlatteningDimension
T@"TSTTableFilterSet",C,N,V_filterSet
setMessageType:messagePrototype:descriptor:unarchiveClassname:
setDeprecatedMessageType:
setUpgradeMessageType:messagePrototype:unarchiveClassname:
mutableCopyWithZone:
intersectsProperties:
propertySetFromUnionOfPropertySets:
objectForSetProperty:
objectForResetProperty:
addProperty:
p_resetCachedFlags
setBoolValue:forProperty:
setFloatValue:forProperty:
addValuesFromPropertyMap:
filterWithProperties:
removeProperty:
removeAllPropertyValues
objectApplyingDiffToObject:andUpdateInverse:optionalConcurrentStylesheet:
cellDiffProperties
objectByRemovingPropertiesInMap:addingPropertiesInMap:updateInverseResetPropertyMap:updateInverseSetPropertyMap:
objectByRemovingPropertiesInMap:addingPropertiesInMap:updateInverseResetPropertyMap:updateInverseSetPropertyMap:optionalConcurrentStylesheet:
resetPropertiesFromMap:
setPropertiesFromMap:
initFromCommandPropertyMapMessage:unarchiver:
saveToCommandPropertyMapMessage:archiver:
containsStringProperties
doesSetAnyProperties:
doesResetProperty:
doesResetAnyProperties:
containsCellStyleProperties
containsTextStyleProperties
resetObject:forProperty:
resetIntValue:forProperty:
resetFloatValue:forProperty:
propertyMapToSetWithProperties:
removeObjectsToSetForProperty:
objectApplyingDiffToObject:andUpdateInverse:
estimatedByteSize
propertyMapToSet
setPropertyMapToSet:
propertySetToSet
setPropertySetToSet:
propertyMapToReset
setPropertyMapToReset:
propertySetToReset
setPropertySetToReset:
hasCachedContainsCellStyleProperties
setHasCachedContainsCellStyleProperties:
cachedContainsCellStyleProperties
setCachedContainsCellStyleProperties:
hasCachedContainsTextStyleProperties
setHasCachedContainsTextStyleProperties:
cachedContainsTextStyleProperties
setCachedContainsTextStyleProperties:
hasCachedContainsStringProperties
setHasCachedContainsStringProperties:
cachedContainsStringProperties
setCachedContainsStringProperties:
_hasCachedContainsCellStyleProperties
_cachedContainsCellStyleProperties
_hasCachedContainsTextStyleProperties
_cachedContainsTextStyleProperties
_hasCachedContainsStringProperties
_cachedContainsStringProperties
_propertyMapToSet
_propertySetToSet
_propertyMapToReset
_propertySetToReset
T@"TSSPropertyMap",&,N,V_propertyMapToSet
T@"TSSMutablePropertySet",&,N,V_propertySetToSet
T@"TSSPropertyMap",&,N,V_propertyMapToReset
T@"TSSMutablePropertySet",&,N,V_propertySetToReset
TB,N,V_hasCachedContainsCellStyleProperties
TB,N,V_cachedContainsCellStyleProperties
TB,N,V_hasCachedContainsTextStyleProperties
TB,N,V_cachedContainsTextStyleProperties
TB,N,V_hasCachedContainsStringProperties
TB,N,V_cachedContainsStringProperties
empty
TB,R,N,GisEmpty
p_convertToUuidBasedCellListUsingTableInfo:pruneCategorizedCells:
viewCellRect
cellUIDRange
p_cacheRowColumnUIDs
p_accumulateCurrentCellsConcurrentlyUsingBlock:
cellRegionWithTableInfo:
changeDescriptorWithType:cellRegion:
gatherer
cellRanges
gatheredCellRegion
changeDescriptorWithType:strokeRegion:
mergeActions
cellRegionForTable:
changeDescriptorWithType:cellRegion:strokeRegion:
p_clearDataListIDs
p_baseColumnIndexes
p_baseRowIndexes
cellUIDRanges
initWithCellUIDRangeVector:
viewCellRects
regionFromViewCellRectVector:
p_simpleInvokeBlock:
addRegion:
p_invokeBlock:
p_enumerateNewAndOldCellsSeriallyUsingBlock:
p_enumerateNewAndOldCellsSeriallyUsingPreBNCBlock:
p_enumerateCellsAddedAndRemovedOfType:usingBlock:
p_enumerateCellsAddedAndRemovedForFormatsUsingBlock:
p_gatherRowState:
p_enumerateRowsOfCellsConcurrentlyUsingBlock:
p_enumerateCellsAddedAndRemovedForFormatsWithOptions:usingBlock:
hasFormulaAnyError
hasAnyFormats
p_enumerateColumnCellCountDiffUsingBlock:
p_enumerateRowCellCountDiffUsingBlock:
p_enumerateCustomFormatsBeingAddedUsingReplacementBlock:
p_pruneToBaseWithTableInfo:
p_convertToInverseCellMap
verify
p_setObjectLocale:
cellLists
setStrongReferenceArray:message:
allocWithZone:
setCellLists:
setUidBased:
initWithArray:
setMergeActions:
changeDescriptorsForTable:
containsCellChanges
hasMultipleCells
appendCellList:
affectedBaseColumnAndRowIndexes
cellRegionWithTableInfo:passingTest:
enumerateSeriallyUsingBlock:
gatherRowState:
enumerateRowsOfCellsConcurrentlyUsingBlock:
updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:preBNCBlock:
enumerateColumnCellCountDiffUsingBlock:
enumerateRowCellCountDiffUsingBlock:
enumerateCustomFormatsBeingAddedUsingReplacementBlock:
convertToInverseCellMap
addMergeActions:
pushInverseMergeAction:
clearMerges
mayModifyFormulasInCells
setMayModifyFormulasInCells:
mayModifyValuesReferencedByFormulas
setMayModifyValuesReferencedByFormulas:
inverseMergeActions
setInverseMergeActions:
cachedRowUIDs
setCachedRowUIDs:
cachedColumnUIDs
setCachedColumnUIDs:
applyingToTable
setApplyingToTable:
_uidBased
_mayModifyFormulasInCells
_mayModifyValuesReferencedByFormulas
_applyingToTable
_mergeActions
_cellLists
_inverseMergeActions
_cachedRowUIDs
_cachedColumnUIDs
uidBased
TB,N,GisUIDBased,V_uidBased
T@"NSMutableArray",&,N,V_cellLists
T@"NSMutableArray",&,N,V_mergeActions
T@"NSMutableArray",&,N,V_inverseMergeActions
T{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}},N,V_cachedRowUIDs
T{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}},N,V_cachedColumnUIDs
TB,N,V_applyingToTable
TB,N,V_mayModifyFormulasInCells
TB,N,V_mayModifyValuesReferencedByFormulas
initWithContext:viewCellRect:cellUIDRange:
regionFromViewCellRect:
p_pruneCellsAtRow:rowsSize:columnsSize:
enumerateIndexesWithOptions:usingBlock:
p_pruneCellsAtColumn:rowsSize:columnsSize:
baseRowIndexForRowUID:
baseColumnIndexForColumnUID:
p_interestingCellIndexes
p_setupInterestingCells:interestingCellIndexes:forAdding:
dictionary
formatIDForStorageFlag:
numberWithUnsignedInt:
enumerateKeysAndObjectsUsingBlock:
unsignedIntegerValue
asCustomFormatWrapper
initWithContext:cellUIDRange:
setViewCellRect:
setCellUIDRange:
interestingCells
setInterestingCells:
formatsAdded
setFormatsAdded:
formatsRemoved
setFormatsRemoved:
tilesPerRow
setTilesPerRow:
rowInfosPerRow
setRowInfosPerRow:
_viewCellRect
_cellUIDRange
_tilesPerRow
_rowInfosPerRow
_cells
_baseRows
_baseColumns
_viewRows
_viewColumns
_cellCountDiffsPerRow
_cellCountDiffsPerColumn
_preBNCKeysList
_oldCells
_containsCellBorderChanges
_interestingCells
_formatsAdded
_formatsRemoved
TB,R,N,GisUIDBased,V_uidBased
T{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}},N,V_viewCellRect
T{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}},N,V_cellUIDRange
TB,R,N,V_containsCellBorderChanges
T@"NSArray",&,N,V_interestingCells
T@"NSMutableDictionary",&,N,V_formatsAdded
T@"NSMutableDictionary",&,N,V_formatsRemoved
T@"NSMutableArray",&,N,V_tilesPerRow
T@"NSMutableArray",&,N,V_rowInfosPerRow
enumerateIndexesInRange:options:usingBlock:
shiftIndexesStartingAtIndex:by:
validCells
setValidCells:
_validCells
T@"NSMutableIndexSet",&,N,V_validCells
readRepeatedReferenceMessage:class:protocol:completion:
setEstimatedByteSize:
addObject:willModify:
estimatedByteSizeOfElement:
componentReadVersion
setImportSettings:
setImportSource:
setImportDate:
setSourceData:
setConfidence:
setImportedRegion:
setSourceColumnCount:
setSourceRowCount:
isWholeTableImport
settingsFromArchive:
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
dataWithBytes:length:
dataWithContentsOfURL:
sourceEncoding
setSourceEncoding:
fileSystemRepresentation
bytes
record
recordFromArchive:
importSource
sourceData
confidence
importedRegion
sourceColumnCount
sourceRowCount
pasteInverseCommands
setPasteInverseCommands:
pasteType
setPasteType:
pasteWasUpdate
setPasteWasUpdate:
_pasteWasUpdate
_importSettings
_importSource
_importDate
_sourceData
_confidence
_importedRegion
_sourceColumnCount
_sourceRowCount
_pasteInverseCommands
_pasteType
T@"TSKStructuredTextImportSettings",&,N,V_importSettings
T@"NSURL",&,N,V_importSource
T@"NSDate",&,N,V_importDate
T@"NSData",C,N,V_sourceData
Td,N,V_confidence
T@"TSTCellRegion",&,N,V_importedRegion
TQ,N,V_sourceColumnCount
TQ,N,V_sourceRowCount
T@"NSArray",&,N,V_pasteInverseCommands
TQ,N,V_pasteType
TB,N,V_pasteWasUpdate
wholeTableImport
TB,R,N,GisWholeTableImport
listType
initWithType:keyRange:context:
p_shouldUseReverseMap
p_setupWithType:nextKeyID:
p_addInitialSegment
loadObjectsFromDataListArchive:unarchiver:
keys
format
asCurrencyFormat
currencyCode
stringFromDouble:locale:
setIsMarkedCorrupt:
payload
p_enumerateDataObjectsUsingBlock:
isNewForBraveNewCell
encodeObjectsToDataListArchive:archiver:
keyRange
p_segmentForKey:
setObject:atIndexedSubscript:
shouldSplit
split
indexOfObject:
removeIndex:
initObjectWithString:refCount:
initObjectWithFormat:refCount:
initObjectWithCellSpec:refCount:
initObjectWithStyle:refCount:
initObjectWithFormulaError:refCount:
initObjectWithPopUpMenuModel:refCount:
richTextParentInfo
payloadWithStorage:
initObjectWithRichTextPayload:refCount:
initObjectWithConditionalStyleSet:refCount:
initObjectWithCommentStorage:refCount:
initObjectWithImportWarningSet:refCount:
p_objectForPayload:
p_objectForKey:
tst_dataObjectIsEqual:
p_nextAvailableKey
wrappedObjectForPayload:
p_setObject:atKey:updateReverseMap:
listTypeString
takeReference
refCount
p_setPayload:atSuggestedKey:callWillModify:
takeReferences:
richTextStorage
p_clearReverseMapForObject:atKey:
enumerateObjectsWithBlock:
setPayload:
conditionalStyleSet
style
p_objectCount
takeReferences:forKey:callWillModify:
dropReferences:forKey:callWillModify:
dropReferences:
stringForListType:
classForUnarchiver:
setRichTextParentInfo:
initWithType:context:
p_replaceObjectAtKey:withObject:
enumerateFormatsUsingBlock:
enumerateCustomFormatsUsingBlock:
enumerateKeysAndCountsUsingBlock:
refCountForKey:
takeReferenceForKey:callWillModify:
dropReferenceForKey:callWillModify:
setListType:
setIsNewForBraveNewCell:
nextID
setNextID:
useReverseMap
cachedSegment
setCachedSegment:
_segments
_payloadToObjectMap
_unusedKeySet
_isNewForBraveNewCell
_useReverseMap
_listType
_nextID
_richTextParentInfo
_cachedSegment
Ti,N,V_listType
TI,N,V_nextID
TB,R,N,V_useReverseMap
T@"TSTTableDataListSegment",N,V_cachedSegment
TB,N,V_isNewForBraveNewCell
T@"NSObject<TSDContainerInfo><TSWPStorageParent>",N,V_richTextParentInfo
formulaError
importWarningSet
popUpMenuModel
shouldWrap
addCellFormat:atSuggestedKey:callWillModify:
addCommentStorage:atSuggestedKey:callWillModify:
addConditionalStyleSet:atSuggestedKey:callWillModify:
addFormula:atSuggestedKey:callWillModify:
addControlCellSpec:atSuggestedKey:callWillModify:
addFormulaError:atSuggestedKey:callWillModify:
addImportWarningSet:atSuggestedKey:callWillModify:
addMultipleChoiceListFormat:atSuggestedKey:callWillModify:
addRichText:atSuggestedKey:callWillModify:
addString:atSuggestedKey:callWillModify:
addStyle:atSuggestedKey:callWillModify:
cellFormatForKey:
commentStorageForKey:
conditionalStyleSetForKey:
formulaForKey:
controlCellSpecForKey:
formulaErrorForKey:
importWarningSetForKey:
multipleChoiceListFormatForKey:
richTextForKey:
stringForKey:
stringForKey:shouldWrap:
styleForKey:
documentObject
legacyID
upgradedCustomFormatKeyForLegacyID:
unpopulatedCustomFormatWrapperWithFormatType:customFormatKey:
setKey:
copyByUpgradingToLinkedRefAtHostCellRef:
UUID
foreach:
hasDuplicatedElements
reassignCustomFormatUIDForPaste:
getRefCountsFromDataList
tst_dataObjectHash
characterSetWithCharactersInString:
strokeWithColor:width:
strokePresetListForDefaultPropertyMapForTablePresetID:colors:
horizontalStrokeForStrokePreset:
verticalStrokeForStrokePreset:
exteriorStrokeForStrokePreset:
maskForStrokePreset:
maskForStrokePresets:
validateIntValueAsBool:forProperty:
willModifyForUpgradeWithOptions:
deriveCategoryTopStrokeFromFooterRowSeparatorStroke:
deriveCategoryBottomStrokeFromFooterRowSeparatorStroke:
deriveCategoryInteriorStrokeFromFooterRowVerticalStroke:
emptyStrokeWithWidth:
deriveBodyPivotGroupHorizontalStrokeFromTableStyle:propertyMap:
deriveBodyPivotGroupVerticalStrokeFromTableStyle:propertyMap:
deriveBodyPivotDeEmphasisHorizontalStrokeFromTableStyle:propertyMap:
deriveBodyPivotEmphasisVerticalStrokeFromTableStyle:propertyMap:
deriveHeaderColumnPivotGroupHorizontalStrokeFromTableStyle:propertyMap:
deriveHeaderColumnPivotGroupDeEmphasisStrokeFromTableStyle:propertyMap:
deriveHeaderColumnPivotSeparatorStrokeFromTableStyle:propertyMap:
deriveHeaderRowPivotGroupVerticalStrokeFromTableStyle:propertyMap:
deriveHeaderRowPivotGroupDeEmphasisStrokeFromTableStyle:propertyMap:
deriveHeaderRowPivotTitleStrokeFromTableStyle:propertyMap:
deriveFooterRowPivotGroupVerticalStrokeFromTableStyle:propertyMap:
tsp_initWithProtobufString:
tsp_saveToProtobufString:
loadTableStylePropertiesIntoPropertyMap:fromArchive:unarchiver:
saveTableStylePropertiesToArchive:archiver:
curatedTableStylePropertySetForCrossDocumentPasteMasterComparison
hasEqualValues:forProperties:
strokeByTransformingByTransform:
boxedValueForProperty:oldBoxedValue:transformedByTransform:
nonEmphasisTableProperties
presetIDForStyleID:
styleIDForPreset:
defaultIntValueForProperty:
initDefaultStrokePresetListInPropertyMap:presetID:colors:
initDefaultPropertyMap:presetID:colors:alternate:
strokeForStrokePreset:
validatedLoadFromUnarchiver:
isEquivalentForCrossDocumentPasteMasterComparison:
infos
setSelection:
lastCellID
selection
selectionWithParent:
T@"TSKSelection",&,N
_cellSelection
_isLegacyBasedIDSelection
_legacyAnchorCellID
_legacyCursorCellID
_legacyCellRegion
_legacyBaseCellRegion
initWithColumnAggregateUid:columnUid:aggregateType:level:showAsType:runningTotalGroupingColumnUid:
runningTotalGroupingColumnUid
level
initForCategoriesWithColumnUid:aggregateType:level:
initForPivotWithColumnUid:aggregateType:
initForPivotWithColumnUid:aggregateType:showAsType:runningTotalGroupingColumnUid:
initForPivotWithColumnAggregateUid:columnUid:aggregateType:showAsType:runningTotalGroupingColumnUid:
initAsEmptyAggregate
getUUIDBytesForColumnAggregate:
getUUIDBytesForColumn:
getUUIDBytesForRunningTotalGroupingColumn:
_columnUid
_aggregateType
_level
_showAsType
_columnAggregateUid
_runningTotalGroupingColumnUid
_definedColumnAggregateUid
_definedRunningTotalGroupingColumnUid
Ti,R,N,V_level
TC,N,V_aggregateType
TC,R,N,V_showAsType
_createTileWithID:
setKeepObjectInMemory:
_groupForTileID:
setReference:forTileID:
pruneTilesForRows:
_upgradeFromTileIDMap:referenceMap:
objectAndReturnError:
domain
code
tsp_isRecoverable
tsp_hintsDescription
_tileForID:createIfMissing:
setStrongLazyReference:message:
enumerateReferencesWithBlock:
indexGreaterThanOrEqualToIndex:
isEmbiggened
_enumerateLoadedTiles:
enumerateTilesConcurrentlyUsingBlock:
groupWithStartingTileID:
owner
_setTile:forID:
enumerateTilesWithBlock:
_enumerateGroups:
enumerateLoadedTilesWithBlock:
_removeTileForID:
indexGreaterThanIndex:
tileSize
lastPopulatedRowIndex
_shiftRowsDownAtIndex:count:
_yankRowRange:
_spliceRows:atIndex:
_clearContentAtIndex:count:
_shiftRowsUpAtIndex:count:
tsu_addPointersFromPointerArray:
tsu_enumerateNonNullPointersUsingBlock:
_sharedQueue
performAsync:
_enumerateTiles:
performSync:
indexLessThanOrEqualToIndex:
_insertRowsAtIndex:count:
_removeRowsAtIndex:count:
incrementValueForKey:
enumerateRowsInRange:withBlock:
enumerateKeysAndValuesUsingBlock:
removeAllIndexes
initWithStorageArchive:treeArchive:nextTileID:unarchiver:owner:
saveToStorageArchive:treeArchive:archiver:
nextTileID
enumerateRowByRowInRange:withBlock:
rowInfoAtIndex:
tileForWritingAtRowIndex:outTileRange:
tileStartingAtOrBeforeRowIndex:outTileRange:
tileStartingAtOrAfterRowIndex:outTileRange:
insertRowsAtIndex:count:
columnCellCountsOfRowsInRange:
populatedTiles
pruneTileForRowIndex:
needToUpgradeCellStorage
auditTilesForRowOverlapAndExtensionPastTableBounds:withDataStore:result:
widenTilesForUpgrade
makeStorageMap
upgradeRepairedTiles
_tileIDSet
_tileGroups
_upgradeRepairedTiles
TB,R,D,N
TB,R,N,V_upgradeRepairedTiles
TB,N,V_shouldUseWideRows
readLazyReferenceMessage:class:protocol:completion:
initWithContext:bounds:
setBounds:
_headerAtIndex:
initWithSize:hidingAction:cellStyle:textStyle:columnRowUID:
_mutableHeaderAtIndex:
updateFromMetadata:
_setHeader:atIndex:
mutableHeaderAtIndex:allowCreation:
headerAtIndex:
setHeader:atIndex:
shiftIndexesForwardAtIndex:count:
p_allocateBuckets
setHeaders:
shiftIndexesBackAtIndex:count:
hidingState
setHidingState:
enumerateHeadersWithBlock:
_mutableNoCreateHeaderAtIndex:
setNumberOfCells:
minIndex
maxIndex
populatedIndexes
initWithBucket:owner:
firstBucketForArchiving
initFromArchive:unarchiver:owner:
metadataAtIndex:hidingAction:defaultSize:uuid:
updateHeaderAtIndex:fromMetadata:
removeIndexesAtIndex:count:
swapIndex:withIndex:
moveIndexRange:toIndex:
sizeAtIndex:
setSize:atIndex:
hidingStateAtIndex:
setHidingState:atIndex:
cellStyleAtIndex:
setCellStyle:atIndex:
textStyleAtIndex:
setTextStyle:atIndex:
updateStylesWithBlock:
cellCountAtIndex:
decrementCellCountAtIndex:byAmount:
incrementCellCountAtIndex:byAmount:
resetAllCellCounts
totalCellCount
forceLoadHeaders
_buckets
_bucketCount
T@"TSPObject",R,N
initWithIndex:baseColumnIndex:rules:
initWithArray:copyItems:
filterWithIndex:baseColumnIndex:rules:
arrayByAddingObject:
filterWithRule:atIndex:
filterByAddingRule:
filterByRemovingRuleAtIndex:
filterByClearingRules
enumerateRulesUsingBlock:
filterIndex
baseColumnIndex
_filterIndex
_baseColumnIndex
_rules
TQ,R,N,V_filterIndex
T{TSUModelColumnIndex=S},R,N,V_baseColumnIndex
minKey
maxKey
initFromArchive:unarchiver:outIndex:
encodeToArchive:archiver:index:
bounds
data
setData:
_data
_bounds
T@"TSUSparseArray",&,N,V_data
T{_NSRange=QQ},N,V_bounds
reserveNextIndex
clearFormulaAtIndex:
setFormulaObject:atIndex:
replaceFormula:atCellCoord:inOwner:
initWithCreator:translationFlags:
formulaObjectAtIndex:
rangeFromFormulaObject:atCoord:useBoundingRange:
tableUIDFromFormula:atCoord:
copyByForceSettingOwnerUIDs:calcEngine:
initWithOwnerUID:
indexFromCoord:
createFormulaForUIDRange:tableUID:
rangeFromFormulaObject:atCoord:
setFormulaOwnerUID:
formulaCount
reserveNextCoordinate
markForRollback
rollbackToMark:
appendIndexedFormula:
registerAllFormulaToCalculationEngine
createFormulaObjectForRange:atIndex:tableUID:
tableUIDFromFormulaAtIndex:
remapRangeFormulasToOwnerUID:
initWithOwnerUID:archive:unarchiver:
usesOnlyFixedCoords
setUsesOnlyFixedCoords:
_formulaOwnerUID
_formulas
_nextIndex
_usesOnlyFixedCoords
TB,N,V_usesOnlyFixedCoords
T{TSKUIDStruct=QQ},N,V_formulaOwnerUID
strokeRegion
layoutSpacesInvalidateCoordinatesAfterRow:
layoutInvalidate
setLayoutInvalidate:
layoutInvalidateProvider
setLayoutInvalidateProvider:
layoutInvalidateSize
setLayoutInvalidateSize:
layoutInvalidateTableNameVisibility
setLayoutInvalidateTableNameVisibility:
layoutSpacesInvalidateCoordinates
setLayoutSpacesInvalidateCoordinates:
layoutSpacesInvalidateTableOffsets
setLayoutSpacesInvalidateTableOffsets:
layoutInvalidateChildren
setLayoutInvalidateChildren:
layoutUpdateChildren
setLayoutUpdateChildren:
layoutSpacesInvalidateCoordinatesAfterRow
setLayoutSpacesInvalidateCoordinatesAfterRow:
editingCellIDForInvalidation
setEditingCellIDForInvalidation:
mLayoutInvalidate
mLayoutInvalidateProvider
mLayoutInvalidateSize
mLayoutInvalidateTableNameVisibility
mLayoutSpacesInvalidateCoordinates
mLayoutSpacesInvalidateTableOffsets
mLayoutInvalidateChildren
mLayoutUpdateChildren
_layoutSpacesInvalidateCoordinatesAfterRow
_editingCellIDForInvalidation
TB,N,VmLayoutInvalidate
TB,N,VmLayoutInvalidateProvider
TB,N,VmLayoutInvalidateSize
TB,N,VmLayoutInvalidateTableNameVisibility
TB,N,VmLayoutSpacesInvalidateCoordinates
TI,N,V_layoutSpacesInvalidateCoordinatesAfterRow
TB,N,VmLayoutSpacesInvalidateTableOffsets
TB,N,VmLayoutInvalidateChildren
TB,N,VmLayoutUpdateChildren
T{TSUCellCoord=ISBB},N,V_editingCellIDForInvalidation
info
setLayout:
initWithLayout:
p_getLayoutDirectionLeftToRight
newLayoutHint
initWithInfo:layoutHint:
removeContainedTextEditingLayout
removeAttachmentCellLayouts
layoutState
offsetGeometryBy:
strokeFrame
isFrozen
layoutDirectionIsLeftToRight
frame
capturedInfoPositionForAttachment
spaceBundle
space
tableOffset
isDynamicallyChangingInfoGeometry
dynamicInfoGeometry
tableEnvironment
initWithFrame:
layoutGeometryFromInfo
maximumFrameSizeForChild:
alignmentFrame
invalidateLayoutSpaceTableOffsets
invalidateLayoutSpaceCoordinates
fullTransform
geometryFromFullTransform:
transform
isDynamicallyRowTabResizing
dynamicFooterHeight
styleProvidingSource
_visibleFrameForOverscrolledChildFrame:
layoutController
canvas
isAnchoredAtRight
geometryByTranslatingBy:
details
shouldShowCaption
layoutHint
validateLayoutHint:
updateChildrenFromInfo
validateTableNameVisibility
validateLayoutSpaces
setNeedsDisplay
validatePageNumberCount
setNeedsDisplayInRect:
layoutRectForCanvasRect:
invalidateLayoutSpaceCoordinatesAfterColumn:
invalidateLayoutSpaceCoordinatesAfterRow:
containedTextEditingLayout
invalidateSize
addChangeDescriptor:
invalidateChildren
invalidate
gridRangeOfLayoutSpace:
frameForGridRange:
invalidateTableOffsets
invalidateCoordinates
invalidateCoordinatesAfterColumn:
invalidateCoordinatesAfterRow:
setIsValid:
invalidateExteriorWrap
invalidatePosition
widthOfColumn:skipDynamicSwap:returnZeroIfHidden:outIsFitting:
maximumSize
heightOfRow:skipDynamicSwap:withStrokeHeights:returnZeroIfHidden:clampToPartitionSize:maximumPartitionSize:outIsFitting:
setGridRange:
entireFooterRowsCellRange
cacheHintID
headerRowsRepeat
headerColumnsRepeat
cellRange
enumerateLayoutSpacesUsingBlock:
partitionPosition
frozenHeaderColumnsSpace
frozenHeaderRowsSpace
frozenHeaderCornerSpace
repeatHeaderColumnsSpace
repeatHeaderRowsSpace
repeatHeaderCornerSpace
lockForRead
alignedStrokeFrame
canvasRectForLayoutRect:
alignedFrame
unlock
frameInRoot
setTransformToCanvas:
transformToCanvas
transformToDevice
setViewScale:
viewScale
layoutPointForCanvasPoint:
canvasPointForLayoutPoint:
canvasFrame
canvasStrokeFrame
isDynamicallyColumnTabResizing
dynamicColumnTabSize
dynamicRowTabSize
tabsRowWidthAndOptionalLeftGap:
supportsFrozenHeaders
inFindReplaceMode
suppressFrozenHeadersForEditing
isStrokeEditing
entireHeaderColumnsCellRange
isEntireCellRangeHidden:
entireHeaderRowsCellRange
setNewCanvasRevealedHorizontally:
setNewCanvasRevealedVertically:
invalidateFrame
frameHasWidthAndHeight
rangeIntersectingLayoutRect:
isDynamicallyRepressingFrozenHeaderRows
_floatingCellRangeAtRect:inLayoutSpace:withTransform:
isDynamicallyRepressingFrozenHeaderColumns
cellRangeVisibleRect
isRepeat
alignedStrokeFrameForGridRange:
region:addingRange:
layoutSpaceType
layout
gridPointHitByCanvasPoint:tabsViewable:
canvasFrameForGridRange:
intersectionCellRange:
intersectsGridRange:
intersectionGridRange:ofLayoutSpace:
canvasStrokeFrameForGridRange:
containsGridRange:
contentFrameForGridRange:
alignedOverrideFrameForGridRange:strokeWidthOverride:
intersectsRowGridRange:
intersectionRowGridRange:ofLayoutSpace:
alignedStrokeLineForRowGridRange:
intersectsColumnGridRange:
intersectionColumnGridRange:ofLayoutSpace:
alignedStrokeLineForColumnGridRange:
alignedStrokeFramePathForGridRange:frameType:viewScale:inset:reoriginToZero:clipToVisibleRect:cornerRadius:outMaskPath:
alignedStrokeLinePathForRowGridRange:transform:inset:reoriginToZero:cornerRadius:
alignedStrokeLinePathForColumnGridRange:transform:inset:reoriginToZero:cornerRadius:
alignedStrokeFramePathForGridRange:transform:inset:reoriginToZero:cornerRadius:
transformUsingAffineTransform:
bezierPathWithRect:
subtractBezierPath:
uniteWithPolygonalBezierPath:
uniteWithBezierPath:
alignedMaskStrokeFramePathForTransform:cornerRadius:
enumerateMissingRowsIntersectingCellRange:usingBlock:
enumerateRowsIntersectingCellRange:usingBlock:
appendBezierPath:
enumerateMissingColumnsIntersectingCellRange:usingBlock:
enumerateColumnsIntersectingCellRange:usingBlock:
alignedContentFrameForGridRange:
visiblePartOfRange:
alignedStrokeFramePathForRange:frameType:viewScale:inset:reoriginToZero:clipToVisibleRect:cornerRadius:outMaskPath:
setTableNameEditingStorage:
addObserver:
tableNameEditingStorage
removeObserver:
invalidateTableNameHeight
tableNameHeightForStorage:withMaxWidth:
width
alignedRectForLayoutRect:
frameForTableNameBorder
strokeFrameForTableNameBorder
alignedStrokeFrameForTableNameBorder
isBeingManipulated
isInDynamicLayoutMode
dynamicRepResize
isDynamicallyChangingContent
dynamicContentDelegate
cell:forCellID:
modelCellIDForLayoutCellID:
isDynamicallyChangingRowOrColumnCount
naturalAlignmentForCellID:
pageNumber
pageCount
validateCellForDrawing:cell:contents:wrap:verticalAlignment:padding:layoutCacheFlags:pageNumber:pageCount:
cachedCellID
cachedMergeRange
cachedCellWraps
cachedParagraphAlignment
extendedPartitionRangeSingleSpaceIntersectionWithCellRange:
p_maximumSpillRangeForCellID:
p_spillRangeToRightForCellID:
cachedAutosizedFrame
setWithArray:
reverseObjectEnumerator
richTextStorageForLayout
attachmentCount
isDynamicallyHidingContentOfCellID:
isDynamicallyHidingRowsColsCellID:
isDynamicallyHidingTextOfCellID:
cachedCellStyle
cachedTextStyle
initialTextSize
initWithStorage:cellID:frame:
removeFromParent
computedEditingCellContentFrame
cachedPadding
maxSize
p_layoutWhollyContainsGridRange:
contentSizeForCellRange:skipDynamicSwap:
captionEdgeInsets
p_prepareAttachmentCellsIfNeeded
childInfosForChildLayouts
arrayByAddingObjectsFromArray:
clearDynamicStrokesForCellRange:
layoutForInfo:
viewScaleForZoomingToSelectionPath:targetPointSize:
initWithLeftAnchor:rightAnchor:isVertical:
rectInRootForSelectionPath:
orderedSelections
lastObject
edgeInsets
paddingForCellID:
adjustedInsetsForTarget:
p_defaultAlignmentForTableWritingDirection
writingDirectionForParagraphAtCharIndex:
valueIsNumberOrTime
cachedAutoSizeFlags
cachedVerticalAlignment
p_nonAutosizedFrameForTextEditingLayout:
p_nonAutosizedFrameForRichTextLayout:
p_rangeUpAndLeftOfIntersectionRangeOfGridRange:
isCorner
isColumns
isRows
p_autosizedFrameForTextEditingLayout:textSize:
p_autosizedFrameForRichTextLayout:textSize:
setCachedAutosizedFrame:
dependentLayouts
allValues
p_maskRectForTextEditingLayout:
p_maskRectForRichTextLayout:
cachedMaskRect
p_spillRangeForMaskingRichTextLayout:
setCachedMaskRect:
setCachedMaskSpillRange:
styleProvider
styleProviderForTextLayout:
wantsToProvideStylesForTextLayout:
objectsPassingTest:
p_getStyleProvidingAncestorLayout
findLayoutIfAvailableInSet:intersectingRow:
widthForColumnIndex:bodyWidth:
gapForColumnIndex:bodyWidth:
positionForColumnIndex:bodyWidth:target:outWidth:outGap:
layoutMargins
columnCount
alwaysStartsNewTarget
shrinkTextToFit
columnsAreLeftToRight
layoutMarginsForTarget:
textScaleFactor
T@"TSWPPadding",R,N
Td,R,N
autosizeFlagsForTextLayout:
verticalAlignmentForTextLayout:
nonAutosizedFrameForTextLayout:
autosizedFrameForTextLayout:textSize:
dependentsOfTextLayout:
repClassForTextLayout:
descendersCannotClip
forceParentAutosizeFlagsForTextLayout:
invalidateForAutosizingTextLayout:
reliedOnLayoutsForTextLayout:
maxAutoGrowLineWidthForTextLayout:
maxAutoGrowBlockHeightForTextLayout:
initialCharIndex
textLayoutShouldWrapAroundExternalDrawables:
textLayoutShouldLayoutVertically:
maskRectForTextLayout:
naturalAlignmentForTextLayout:
pageCountForAttachment:
pageNumberForAttachment:
adjustRect:forScrollingToSelectionPath:forZoom:
storage:didChangeRange:delta:broadcastKind:attributeKindChanges:
tearDown
scaleToFit
setLayoutHint:
scaleToFitParent
supportsRotation
canRotateChildLayout:
resizeMayChangeAspectRatio
isDraggable
computeLayoutGeometry
computeInfoGeometryFromPureLayoutGeometry:
initialInfoGeometry
wrapFitType
selectionHighlightFrameFittingParentWidthForChildWithFrame:
frameForCaptionPositioning
inspectorGeometry
inspectorGeometryIsAffectedByChangeRecord:
inPrintPreviewMode
setCellRangeVisibleRect:
floatingHeaderRowRangeAtRect:
floatingHeaderColumnRangeAtRect:
alignedStrokeFrameForRange:
bezierPathsForCellRegion:selectionMask:transform:viewScale:inset:clipToVisibleRect:cornerRadius:block:
willBeginTableNameEditingWithStorage:
didEndTableNameEditing
invalidateTableNameVisibility
p_updateCachedStyleInformationFromCellID:
setupContainedTextEditingLayout:
attachmentCellLayoutForCellID:optionalCell:
calculatePointFromSearchReference:
calculatePointFromSearchReferenceWithoutValidation:
activityLineUnscaledEndPointForSearchReference:
unscaledCommentFlagAnchorInfoForSearchReference:
orderedBefore:
canvasShouldScrollForSelectionPath:
textIsVertical
p_textFrameForWrappingCell:defaultRowHeight:
p_cellIDForWPLayout:
p_computeSpillingTextFrameForEditingLayout:textSize:editingSpillRange:
reapCoordinatesChangedMaskForChrome
setContainedTextEditingLayout:
containedTextEditorSpills
containedTextEditorWraps
editingSpillingTextRange
newCanvasRevealedHorizontally
newCanvasRevealedVertically
paddingForEditingCell
prevEditingSpillingTextRange
setPrevEditingSpillingTextRange:
setSpaceBundle:
processChangesFiltering
setProcessChangesFiltering:
attachmentCellStorageToLayoutMap
mLayoutHint
mCanvasVisibleRect
mCanvasSafeRect
mPreviousVisibleStrokeFrame
mProcessChangesFiltering
mTabsVisible
mTableNameVisibilityIsValid
mTableNameVisible
mNewCanvasRevealedHorizontally
mNewCanvasRevealedVertically
mLayoutDirectionIsLeftToRight
mSpaceBundle
mCached
mRenderingFrameForLayoutGeometryFromInfo
mContainedTextEditingLayout
mCachedPaddingForEditingCell
mComputedEditingCellContentFrame
mCachedVerticalAlignmentForEditingCell
mAdjustableTableSize
mFixedTableSize
mCapturedStrokeFrameSizeForInline
mEditingSpillingTextRange
mPrevEditingSpillingTextRange
mContainedTextEditorParagraphAlignment
mContainedTextEditorTextWraps
mRemovingContainedTextEditorLayout
mContainedTextEditorSpills
mSpillingTextSize
mCoordinatesChangedMaskForChrome
mShouldUpdateAttachmentChildren
mPageCount
mPageNumber
_attachmentCellStorageToLayoutMap
_tableNameEditingStorage
_cellRangeVisibleRect
T@"TSUPointerKeyDictionary",R,V_attachmentCellStorageToLayoutMap
T@"TSWPStorage",W,N,V_tableNameEditingStorage
T@"TSTLayoutHint",&,N,VmLayoutHint
T@"TSTLayoutSpaceBundle",&,N,VmSpaceBundle
TB,N,VmProcessChangesFiltering
TB,N,VmNewCanvasRevealedHorizontally
TB,N,VmNewCanvasRevealedVertically
TB,R,N,VmLayoutDirectionIsLeftToRight
T{CGSize=dd},N
T@"TSWPLayout",&,N,VmContainedTextEditingLayout
T{UIEdgeInsets=dddd},R,N,VmCachedPaddingForEditingCell
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},R,N,VmEditingSpillingTextRange
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,VmPrevEditingSpillingTextRange
TB,R,N,VmContainedTextEditorSpills
TB,R,N,VmContainedTextEditorTextWraps
T{CGSize=dd},R,N
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_cellRangeVisibleRect
numberWithUnsignedLongLong:
headerColumnsWidth
headerRowsHeight
initWithLayoutSpaceBundle:type:
setFrozenHeaderColumnsSpace:
setFrozenHeaderRowsSpace:
setFrozenHeaderCornerSpace:
setUserSpaceToDeviceSpaceTransform:
enumerateFrozenLayoutSpacesUsingBlock:
setRepeatHeaderColumnsSpace:
setRepeatHeaderRowsSpace:
setRepeatHeaderCornerSpace:
setHeaderRowsRepeat:
setHeaderColumnsRepeat:
enumerateRepeatLayoutSpacesUsingBlock:
countA
boolCount
boolTrueCount
numberCount
dateCount
durationCount
stringCount
errorCount
noContentCount
minValue
maxValue
dateByAddingTimeInterval:
functionSpecForFunctionIndex:
functionName
sumMixedDurationsAndUnitlessWithoutADateErrorForFunctionName:
invalidDateManipulationError
countOfNumberDateDurationOrBool
countRows
initWithFormatType:decimalPlaces:negativeStyle:showSeparator:
p_averageValueWithA:
isCircularReference
circularReferenceError
countAValue
totalValue
avgAValue
productValue
countValue
countBlankValue
avgValue
countRowsValue
rangeValue
accumulateValue:
accumulate:
valueForType:
setIsCircularReference:
_boolCount
_boolTrueCount
_numberCount
_dateCount
_durationCount
_stringCount
_errorCount
_noContentCount
_minValue
_maxValue
_productValue
_numberTotalValue
_firstDateSeen
_totalSecsSinceReferenceDate
_secondsToAdd
_isCircularReference
TI,R,N,V_boolCount
TI,R,N,V_boolTrueCount
TI,R,N,V_numberCount
TI,R,N,V_dateCount
TI,R,N,V_durationCount
TI,R,N,V_stringCount
TI,R,N,V_errorCount
TI,R,N,V_noContentCount
T{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C},R,N
T@"TSULocale",&,N,V_locale
TB,N,V_isCircularReference
aggregatesOnLevel:
columnAggregateUidList
columnAggregateUuids
_columnAggregates
initWithContext:calculationEngine:viewHostCell:formula:ownerUID:
formulaForCell:atCellID:inTable:
initWithChromeTractRef:calcEngine:
initWithBaseTractRef:calcEngine:
setBaseTractRef:
setChromeTractRef:
_baseTractRef
_chromeTractRef
T@"TSCECellTractRef",&,N,V_baseTractRef
T@"TSCECellTractRef",&,N,V_chromeTractRef
T{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}},R,N
T{RefTypeHolder<TSCERangeRef, 0>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}},R,N
invertedSet
stringForRangeRefPair:namingContext:
chromeCellCoordForBaseCellCoord:
nameForBaseRangeRef:namingContext:
categoryRefForAggregateRangeRef:
hostTableUID
prettyStringForCategoryRef:forHostCellRef:namingContext:
useSymbolicNames
allowTableName
isRectangularRange
setAllowTableName:
foreachRangeRef:
rangeIsWithinTable:
forceEscaping
allowSpanningColumnReferenceBodyQualifier
setQuoteComponents:
setForceEscaping:
cellRangeName:namingContext:
referenceNameIsUnique:forReference:contextTable:
forceTableName
forceSheetName
tsce_stringByForcingSingleQuoteEscapes:
stringValueAtCellCoord:translator:
initWithFormat:
createNameComponentWithChromeRangeRef:rowOrColumnName:isSticky:namingContext:
disableImplicitNaming
p_symbolicColumnNameForRefPair:useTopLeft:isSticky:foundRange:inTableModel:namingContext:
p_symbolicRowNameForRefPair:useTopLeft:isSticky:foundRange:inTableModel:namingContext:
isSingleCellOrSpanningRange
showGeometricAsBase
suppressIdenticalEndReference
boundingRange
nameForBaseTractRef:namingContext:
setUsedSymbolicName:
chromeNameForBaseRangeRef:namingContext:
nameForViewTractRef:namingContext:coordMapper:
nameForWrappedRangeRef:namingContext:
whitespaceAndNewlineCharSet
setWhitespaceAndNewlineCharSet:
nonWhitespaceAndNewlineCharSet
setNonWhitespaceAndNewlineCharSet:
_whitespaceAndNewlineCharSet
_nonWhitespaceAndNewlineCharSet
T@"NSCharacterSet",&,N,V_whitespaceAndNewlineCharSet
T@"NSCharacterSet",&,N,V_nonWhitespaceAndNewlineCharSet
arraySegmentClass
packageLocatorForSegments
zeroWidthEmptyStroke
p_setLeftStroke:order:atCellID:
p_setRightStroke:order:atCellID:
p_setTopStroke:order:atCellID:
p_setBottomStroke:order:atCellID:
overridePropertyMap
baseStyleForVariation
cascadedStyleWithIdentifier:
initWithContext:columnOrRowIndex:
invalidateRange:
setMaxOrder:
setStroke:inRange:order:
leftColumnStrokes
p_setStroke:order:inStrokesArray:atIndex:atRange:
rightColumnStrokes
topRowStrokes
bottomRowStrokes
findStrokeAndRangeAtIndex:
stroke
order
columnOrRowIndex
initWithContext:majorStrokeLayer:minorStrokeLayer:
enumerateRawStrokesSegmentsUsingBlock:
p_flattenMajorStrokeLayer:minorStrokeLayer:
p_strokeRect
enumerateStrokesInRange:usingBlock:
tsu_insertRange:
insertSpaceAtRange:
tsu_removeRange:
removeRange:
moveRange:toIndex:
swapSegmentAtIndex:withSegmentAtIndex:
setColumnOrRowIndex:
setBordersWithConcurrentCellMap:forTableInfo:
_maxOrder
_leftColumnStrokes
_rightColumnStrokes
_topRowStrokes
_bottomRowStrokes
T@"NSPointerArray",R,N,V_leftColumnStrokes
T@"NSPointerArray",R,N,V_rightColumnStrokes
T@"NSPointerArray",R,N,V_topRowStrokes
T@"NSPointerArray",R,N,V_bottomRowStrokes
Ti,N,V_maxOrder
intersectingColumnsInRow:
removeIndexesInRange:
setColumnIndexesInRow:
columnIndexesInRow
setIteratorToRow:
anyCellBordersInThisRow
cellBorderAtColumn:
setRegion:
topStrokeLayer
setTopStrokeLayer:
bottomStrokeLayer
setBottomStrokeLayer:
_columnIndexesInRow
_topStrokeLayer
_bottomStrokeLayer
T@"TSTStrokeSidecar",&,N,V_strokeSidecar
T@"TSTCellRegion",&,N,V_region
T@"NSIndexSet",&,N,V_columnIndexesInRow
T@"TSTStrokeLayer",&,N,V_topStrokeLayer
T@"TSTStrokeLayer",&,N,V_bottomStrokeLayer
cellRangeAtIndex:
p_updateIndexesForReplacingRangeAtIndex:withRange:
indexesForRange:
enumerateModelCellRectsUsingBlock:
indexesForBaseCellRegion:
enumerateCacheItemsUsingBlock:
enumerateCacheItemsIntersectingBaseCellRect:usingBlock:
enumerateCacheItemsIntersectingBaseCellRegion:usingBlock:
partiallyIntersectsModelCellRect:
openRewritingTransaction
commitRewritingTransaction
setCellRange:atIndex:
removeCellRangeAtIndex:
partiallyIntersectsBaseCellRect:
partiallyIntersectsBaseCellRegion:
hasRangeSpanningRowsForCellRect:
expandBaseCellRectToCoverMergedCells:
expandBaseCellRegionToCoverMergedCells:
hasRangeSpanningRowsForCellRegion:
_mergeRanges
_mergeRangesRTree
_mergedAtCellIds
_transaction
addTableStyleIndex:
hasTableStyles
containsStyleNetworkIndex:
enumerateTableStylesUsingBlock:
addCellUID:flags:addingMaximumSize:
hasStylesInCells
cellUIDs
tableStyleIndexes
_cellUIDs
_tableStyleIndexes
_maximumSize
_cellFlags
T{CGSize=dd},R,N,V_maximumSize
T{vector<unsigned long, std::allocator<unsigned long>>=^Q^Q{__compressed_pair<unsigned long *, std::allocator<unsigned long>>=^Q}},R,N,V_cellFlags
T@"TSTCellUIDList",R,N,V_cellUIDs
T@"NSMutableIndexSet",R,N,V_tableStyleIndexes
highestScaleFactorForRenderingDrawableInfo:
isTopmostContainerInfo
initWithImageData:
p_fillPropertyForStyle:
compatibilityCheckerForData:associatedHint:
mediaCompatibilityTypeForData:associatedHint:
bundle
lockForWrite
validateCachedFrames
validateCoordinateCache:
validateTableOffset:
bezierPathCache
setTableWidthForRightToLeft:
gridRange
strokeHeightOfGridRow:inColumnRange:
strokeWidthOfGridColumn:inRowRange:
setTableOffset:
isMain
p_headerColumnsGridRange
p_headerRowsGridRange
p_footerRowsGridRange
p_tableRectForLayoutRect:
p_gridRangeForTableRect:
gridRangeForLayoutRect:
p_rangeForLayoutRect:
frameForRange:
p_tableCoordinateForGridColumn:
p_tableCoordinateForGridRow:
p_layoutPointForTablePoint:
p_tableRectForGridRange:
p_layoutRectForTableRect:
p_frameSpecForGridRange:frameType:strokeWidthOverride:
strokeFrameForGridRange:
p_rawTableCoordinateForGridColumn:
p_layoutCoordinateForGridColumn:
p_layoutCoordinateForGridRow:
p_alignedFrameSpecForGridRange:strokeWidthOverride:
gridPointHitByLayoutPoint:
p_tablePointForLayoutPoint:
p_gridPointForTablePoint:
visibleRange
drawPreventAntialias
p_alignStrokeWidth:deviceWidth:scaledWidth:
p_alignStrokeHeight:deviceWidth:scaledWidth:
p_alignedFrameSpecForRowGridRange:
p_alignedFrameSpecForColumnGridRange:
enumerateMergedStrokesForGridColumn:from:to:usingBlock:
enumerateMergedStrokesForGridRow:from:to:usingBlock:
bezierPathWithContinuousCornerRoundedRect:cornerRadius:
bezierPathForGridRange:transform:inset:reoriginToZero:
mergeRangeEmptyStroke
insertBezierPath:gridRange:transform:inset:reoriginToZero:
alignedFrameForGridRange:
setWidth:
solid
dontClearBackground
color
alphaComponent
newBlendedColorWithFraction:ofColor:
clearColor
setColor:
isRoundDash
paintPath:inContext:
drawBlackAndWhite
strokeHeightOfGridRow:beginColumn:endColumn:
alignStrokeCoordinatesOfBeginPoint:endPoint:width:
strokeWidthForDrawingWithAlignedWidth:originalWidth:
drawSingleStroke:context:beginPoint:endPoint:width:strokeWidthForDrawing:strokeFrame:
enumerateMergedStrokesAndCapsForGridColumn:from:to:usingBlock:
strokeWidthOfGridColumn:beginRow:endRow:
enumerateMergedStrokesAndCapsForGridRow:from:to:usingBlock:
numberOfNonHiddenFooterRows
p_drawStrokeForGridColumn:strokeRect:clearStroke:shadowType:context:
p_drawStrokeForGridRow:strokeRect:clearStroke:shadowType:context:
p_bodyGridRange
initWithCount:atOffset:layoutDirectionIsLeftToRight:
p_topLeftCornerGridRange
p_createRowCoordinatesForGridRange:invalidRowIndex:previousCoordinates:validateSingleRow:outCoordinatesChanged:
p_extendedBodyGridRange
p_createColumnCoordinatesForGridRange:invalidColumnIndex:previousCoordinates:outCoordinatesChanged:
p_gridColumnForTableCoordinate:
p_gridRowForTableCoordinate:
p_bodyTranslationX
p_bodyTranslationY
p_tableCoordinateForX:
p_tableCoordinateForY:
p_cellTypeForGridPoint:
p_layoutOffsetForGridPoint:
p_layoutOffsetForTablePoint:
strokeWidthOfGridColumn:atRowIndex:
strokeHeightOfGridRow:atColumnIndex:
p_alignFrameSpec:
invalidateTableOffset
invalidateCoordinatesForEditingCellID:
validate:
validateCoordinateDirection
nearestRangeForLayoutRect:
contentFrameForRange:
strokeFrameForRange:
canvasFrameForCellRange:
canvasPositionForGridColumn:
canvasPositionForGridRow:
alignedStrokeFrameForCellRange:
drawStrokesInGridRange:clearStrokes:context:
setLayoutDirectionIsLeftToRight:
transformFromCanvas
setTransformFromCanvas:
setTransformToDevice:
transformFromDevice
setTransformFromDevice:
setDrawBlackAndWhite:
setDrawPreventAntialias:
setBezierPathCache:
headerRowColumnCoordinates
setHeaderRowColumnCoordinates:
bodyColumnCoordinates
setBodyColumnCoordinates:
headerColumnRowCoordinates
setHeaderColumnRowCoordinates:
bodyRowCoordinates
setBodyRowCoordinates:
invalidatedForEditingCell
setInvalidatedForEditingCell:
invalidTableOffset
setInvalidTableOffset:
invalidColumnIndex
setInvalidColumnIndex:
invalidRowIndex
setInvalidRowIndex:
cachedFrame
setCachedFrame:
cachedAlignedFrame
setCachedAlignedFrame:
cachedStrokeFrame
setCachedStrokeFrame:
cachedAlignedStrokeFrame
setCachedAlignedStrokeFrame:
mLock
_layoutDirectionIsLeftToRight
_headerColumnsRepeat
_headerRowsRepeat
_drawBlackAndWhite
_drawPreventAntialias
_invalidatedForEditingCell
_invalidTableOffset
_invalidColumnIndex
_layoutSpaceType
_invalidRowIndex
_bundle
_viewScale
_bezierPathCache
_headerRowColumnCoordinates
_bodyColumnCoordinates
_headerColumnRowCoordinates
_bodyRowCoordinates
_tableOffset
_gridRange
_cachedFrame
_cachedAlignedFrame
_cachedStrokeFrame
_cachedAlignedStrokeFrame
_transformToCanvas
_transformFromCanvas
_transformToDevice
_transformFromDevice
T{?={?=II}{?=II}},N,V_gridRange
T@"TSTCoordinateArray",&,N,V_headerRowColumnCoordinates
T@"TSTCoordinateArray",&,N,V_bodyColumnCoordinates
T@"TSTCoordinateArray",&,N,V_headerColumnRowCoordinates
T@"TSTCoordinateArray",&,N,V_bodyRowCoordinates
T@"TSTLayoutSpaceBezierPathCache",&,N,V_bezierPathCache
TB,N,V_invalidatedForEditingCell
TB,N,V_invalidTableOffset
TS,N,V_invalidColumnIndex
TI,N,V_invalidRowIndex
TB,N,V_layoutDirectionIsLeftToRight
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_cachedFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_cachedAlignedFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_cachedStrokeFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_cachedAlignedStrokeFrame
T@"TSTLayoutSpaceBundle",R,W,N,V_bundle
Ti,R,N,V_layoutSpaceType
T@"TSTLayout",R,W,N
T@"TSTLayoutEngine",R,W,N
TB,N,V_headerColumnsRepeat
TB,N,V_headerRowsRepeat
Td,N,V_viewScale
T{CGAffineTransform=dddddd},N,V_transformToCanvas
T{CGAffineTransform=dddddd},N,V_transformFromCanvas
T{CGAffineTransform=dddddd},N,V_transformToDevice
T{CGAffineTransform=dddddd},N,V_transformFromDevice
TB,N,V_drawBlackAndWhite
TB,N,V_drawPreventAntialias
T{CGPoint=dd},N,V_tableOffset
initWithIndexesInRange:
_offset
_count
_coordinates
_average
_visibleIndices
_tableWidth
receivers
distributeBlock:
willApplyConcurrentCellMap:tableUID:
willRemoveRows:tableUID:
protocol
didMergeRange:
didUnmergeRange:
initWithExpressionNode:parenNestingLevel:argumentIndex:
initWithExpressionNode:parenNestingLevel:
tokenContextWithExpressionNode:parenNestingLevel:
tokenContextWithExpressionNode:parenNestingLevel:argumentIndex:
parenNestingLevel
argumentIndex
_expressionNode
_parenNestingLevel
_argumentIndex
T@"TSTExpressionNode",R,N,V_expressionNode
TQ,R,N,V_parenNestingLevel
TQ,R,N,V_argumentIndex
initWithContext:children:firstIndex:lastIndex:
initWithContext:identifier:symbol:firstIndex:lastIndex:
initAsCopyOf:intoContext:children:
whitespaceAfter
setWhitespaceAfter:
whitespaceBefore
setIdentifier:
recordHashesForSubexpressions:
copyByResolvingIdentifiers:hostTable:baseHostCell:forceReferenceInterpretation:symbolTable:oldToNewNodeMap:
buildASTNodeArray:hostCell:symbolTable:
exportString
identifier
_identifier
T@"NSString",&,N,V_identifier
TI,N,V_symbol
initWithType:range:styleInsertionBehavior:caretAffinity:smartFieldRange:leadingEdge:leadingCharIndex:activeTokenCharIndex:
initWithType:range:styleInsertionBehavior:caretAffinity:smartFieldRange:leadingEdge:leadingCharIndex:
allowsKeyCommandCaching
activeTokenCharIndex
setActiveTokenCharIndex:
mActiveTokenCharIndex
TQ,N,VmActiveTokenCharIndex
selectionFromWPSelection:
tst_isCompatibleWithCell:
tst_isCompatibleWithCellRegion:mergeRange:
addColumns:
addRows:
regionByMovingColumnsFromRange:toIndex:
regionByMovingRowsFromRange:toIndex:
p_gatherCellRegionViaCellRegionAddition
p_gatherCellRegionViaReducedOverlap
combineNonOverlappingCellRanges:addingOverlappingCellRanges:
moveColumnsFromRange:toIndex:
moveRowsFromRange:toIndex:
mightOverlap
setMightOverlap:
debugCellRangeMerges
setDebugCellRangeMerges:
_gathererMap
_originToRangeMap
_mightOverlap
_debugCellRangeMerges
TB,N,V_mightOverlap
TQ,N,V_debugCellRangeMerges
initWithColumn:forGroupBy:
initWithArchive:aggregator:
getNextAggFormulaCoord
initWithFormulaCoord:groupNode:aggregator:
allowRegistrationOfAggFormulas
enumerateAllGroupsWithBlock:
clearAggFormulas:inOwner:
upgradeForNewAggregateTypes:inOwner:
initWithArchive:groupBy:
rebuildAggFormulas
clearAggFormulas:
_aggRoot
T@"TSTGroupBy",R,W,N,V_groupBy
T{TSKUIDStruct=QQ},R,N,V_columnUid
drawSwatchInRect:inContext:
p_documentRoot
swatchImage
tableHasStrongOwnership
setTableHasStrongOwnership:
tempUpgradePresetID
setTempUpgradePresetID:
_styleNetwork
_tableHasStrongOwnership
_tempUpgradePresetID
TQ,N,V_tempUpgradePresetID
T@"TSTTableStyleNetwork",C,N
TB,N,V_tableHasStrongOwnership
visibleIndexSet
countOfIndexesInRange:
containsIndexesInRange:
enumerateRangesInRange:options:usingBlock:
tsu_moveIndexesInRange:toOffset:
isIndexHidden:
setHidden:atIndex:
setVisibleIndexSet:
setHidden:atIndexes:
setHidden:inRange:
visibleIndices
numberHiddenIndicesInRange:
numberVisibleIndicesInRange:
anyHiddenIndicesInRange:
visibleIndexAfterIndex:
visibleIndexAfterAndIncludingIndex:
visibleIndexBeforeIndex:
visibleIndexBeforeAndIncludingIndex:
findNthPreviousVisibleIndex:fromIndex:
findNthNextVisibleIndex:fromIndex:
moveRangeFrom:toIndex:
deleteRange:
insertRange:
_visibleIndexSet
T@"NSMutableIndexSet",&,N,V_visibleIndexSet
index
setIndex:
mIndex
initWithContext:styleProvider:
defaultStyleWithContext:
defaultValueForProperty:
setCGFloatValue:forProperty:
defaultTableNameShapeStyleWithContext:
networkWithContext:presetID:styleProvider:tableStyleMorphingBlock:nameStyleMorphingBlock:nameShapeStyleMorphingBlock:cellStyleMorphingBlockByStyleArea:textStyleMorphingBlockByStyleArea:
addStyle:withIdentifier:
defaultPropertyMap
tableNameStyleIDForPreset:
tableNameShapeStyleIDForPreset:
networkFromStylesheet:presetID:
setCellStyle:forTableStyleArea:
setTextStyle:forTableStyleArea:
setPresetID:
initWithContext:styleProvider:presetID:
cellStyleForTableStyleArea:
networkForPivotTables:
emptyStroke
padding
copyWithZone:context:
cellStyles
textStyles
propertySetWithProperties:
overridePropertyMapIsEqualTo:
removeProperties:
styleForStyleNetworkIndex:
p_saveToArchive:archiver:isPre30Alternate:
shouldSaveAlternates
alternateForVersion:
p_clearCategoryStyles
deriveCategoryCellStyleForTableStyleArea:connectedToStylesheet:
deriveCategoryTextStyleForTableStyleArea:connectedToStylesheet:
addStyle:
p_deriveCategoryCellStyleForTableStyleArea:fromCellStyle:connectedToStylesheet:
styleWithIdentifier:
sheetFill
referenceColor
hueComponent
saturationComponent
brightnessComponent
colorWithHue:saturation:brightness:alpha:
fullPropertyMap
p_deriveCategoryTextStyleForTableStyleArea:fromTextStyle:connectedToStylesheet:
p_clearPivotStyles
p_derivePivotCellStyleFromCellStyle:optionalSourceFill:brightnessShift:connectedToStylesheet:styleArea:
lightGrayColor
strokeApplyingEmphasis
strokeApplyingWidth:
p_deriveHeaderColumnPivotSeparatorAndHeaderRowPivotGroupVerticalStrokeFromTableStyle:propertyMap:returnHeaderRowPivotGroupVerticalStroke:
networkFromTheme:presetIndex:
identifiersForPresetID:
pivotTableStyleAreaForRowLevel:columnLevel:numberOfRowLevels:numberOfColumnLevels:columnIndex:
stylesInStylesheet:
dictionaryWithPreset:
initWithContext:fromDictionary:withPreset:
clearAndGenerateCategoryStylesConnectedToStylesheet:
generateCategoryStrokesInTableStyle:
generatePivotStrokesInTableStyle:
maintainPivotStrokesInTableStyle:fromTable:
clearAndGeneratePivotStylesConnectedToStylesheet:
_presetIndex
_cellStyles
_textStyles
TQ,N
_cellStyle
_textStyle
T@"TSTCellStyle",&,N,V_cellStyle
T@"TSWPParagraphStyle",&,N,V_textStyle
idOfFirstOccurence
setIdOfFirstOccurence:
_idOfFirstOccurence
T{TSUCellCoord=ISBB},N,V_idOfFirstOccurence
TQ,N,V_count
initWithKeyboardShown:
mControlCellSelection
T@"TSKSelection",&,N,VmControlCellSelection
presetAtIndex:
strokePresetListForDefaultPropertyMapWithHorizontalStroke:verticalStroke:exteriorStroke:
initWithMask:horizontalStroke:verticalStroke:exteriorStroke:
setStrokePreset:atIndex:
initWithDeprecatedArchive:unarchiver:
horizontalStroke
verticalStroke
exteriorStroke
mask
strokePresetListForDefaultPropertyMapWithFatStroke:andThinStroke:
setStroke:forPresetIndex:
presets
setPresets:
mCount
_presets
T@"NSPointerArray",&,N,V_presets
setHorizontalStroke:
setVerticalStroke:
setExteriorStroke:
setMask:
mHorizontalStroke
mVerticalStroke
mExteriorStroke
mVisibleMask
T@"TSDStroke",&,N,VmHorizontalStroke
T@"TSDStroke",&,N,VmVerticalStroke
T@"TSDStroke",&,N,VmExteriorStroke
TI,N,VmVisibleMask
upgradeStylesWithBlock:
tstLoadFromArchive:unarchiver:
tstSaveToArchive:archiver:
registerPresetSourceClass:
tstRegisterPresetSourceClasses
isDynamicallyHidingRowsCols
isDynamicallyHidingRowsCols:rowColIndex:
isDynamicallyRemovingTextOfCellID:
shallowCopyToCell:
initWithLayout:range:flags:searchFlags:
layoutRange
layoutCellID
layoutCell
modelIteratorData
setModelIteratorData:
queriedModel
setQueriedModel:
modelIteratorHasCell
setModelIteratorHasCell:
columnOrderReversed
setColumnOrderReversed:
numberOfLayoutColumns
setNumberOfLayoutColumns:
setNumberOfColumns:
setNumberOfRows:
layoutCellData
setLayoutCellData:
_queriedModel
_modelIteratorHasCell
_columnOrderReversed
_numberOfLayoutColumns
_numberOfColumns
_numberOfRows
_layoutCellID
_layoutCell
_modelIteratorData
_layoutCellData
_layoutRange
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},R,N,V_layoutRange
T{TSUCellCoord=ISBB},R,N,V_layoutCellID
T@"TSTCell",R,N,V_layoutCell
T@"<TSTCellIteratorData>",N,V_modelIteratorData
TB,N,V_queriedModel
TB,N,V_modelIteratorHasCell
TB,N,V_columnOrderReversed
TI,N,V_numberOfLayoutColumns
TI,N,V_numberOfColumns
TI,N,V_numberOfRows
T@"TSTMutableCellIteratorData",&,N,V_layoutCellData
T@"TSTLayoutEngine",R,&,N,V_layoutEngine
copyIntoContext:bakeModes:children:
forceReferenceInterpretationOfChildren
setFunctionEndNode:
fixStorageLanguage:
addTSTCanvasReferencesToSet:inRangeContext:withColorHelper:preferringNodesFromStorage:allVisitedNodes:
initWithObjects:
firstIndexOfSubtree
lastIndexOfSubtree
mostSpecificNodeContainingIndex:correspondingIndex:
subtreeContainsIndex:
addVariablesMatchingPrefix:forFormulaIndex:toDictionary:symbolTable:
largestCommonSubexpressionExcludingExisting:cseData:
unionSet:
addAllIdentifiersToSymbolTable:
replaceOccurrencesOfChildrenInSet:withIdentifier:symbol:
largestCommonSubexpression
eliminateLargestCommonSubexpression:withSymbolTable:newIdentifierOut:
lowestCommonAncestor:
defaultNameWithIndex:
initWithContext:identifier:firstIndex:lastIndex:
arrayWithObjects:
setWhitespaceAfterDelimiter:
p_eliminateLargestCommonSubexpressionWithLCA:expressions:withSymbolTable:newIdentifierOut:
initWithContext:firstIndex:lastIndex:
isOptional
setArgumentSpec:
buildASTNodeArray:hostCell:
popover
hasMenu
enumerateExpressionNodesUsingBlock:
compareFirstLastIndices:
rangeEncompassingExpressionNodesInRange:
isFunctionNode
canEliminateLargestCommonSubexpressionWithSymbolTable:
eliminateLargestCommonSubexpressionWithSymbolTable:newIdentifierOut:
setTokenAttachment:
setFirstIndex:
setLastIndex:
setWhitespaceBefore:
_argumentSpec
_tokenAttachment
_firstIndex
_lastIndex
_whitespaceBefore
_whitespaceAfter
T@"NSArray",&,N
T^v,N
T@"TSTWPTokenAttachment",N,V_tokenAttachment
TQ,N,V_firstIndex
TQ,N,V_lastIndex
T@"NSString",&,N,V_whitespaceBefore
T@"NSString",&,N,V_whitespaceAfter
T@"UIViewController",R,&,N
Ti,R,D,N
T@"NSString",R,D,N
initWithContext:calculationEngine:baseHostCell:formula:ownerUID:suppressAutomaticNamedReferenceInvalidation:
copyByConvertingColonToColonTract:
initWithCalculationEngine:expressionTree:baseHostCell:hostTable:
initWithContext:calculationEngine:viewHostCell:formula:ownerUID:suppressAutomaticNamedReferenceInvalidation:
initWithCalculationEngine:baseHostCell:hostTable:
setExpressionTree:
setInitialWhitespace:
setSyntaxError:
setEmpty:
geometricFormula
nodesToCheckForBareArgumentPlaceholders
isCategoryRef
categoryRef
relativeGroupUid
resolveCategoryRef:atRowUid:inHostTable:
setCategoryRef:
refersToPivotTable
setAsAbsoluteWithGroupUid:
reparseWithStorage:adjustExpressionTree:
storageExceedsMaxFormulaLength:
p_fixFormula:
fixPreserveFlagsForCategoryRefInNode:
singleQuoteCharacters
doubleQuoteCharacters
quoteContextAtCharIndex:previousContext:inStorage:
parenCountAtCharIndex:unmatchedParenCount:quoteContext:inStorage:
leftParenCharacters
rightParenCharacters
expressionTree
addCharactersInString:
tsu_push:
tsu_pop
tst_hasFormulaEqualsPrefix
p_charactersToTemporarilyChopOffEndToFixSyntaxError
stringByPaddingToLength:withString:startingAtIndex:
insertAttachmentOrFootnote:range:dolcContext:undoTransaction:changeSession:
p_formulaAsTextReturningTokenValues:
initWithContext:string:stylesheet:kind:
leadingSingleQuoteEscapeCharacters
isFormulaEqualsCharacter:
formulaQuoteContextAtCharIndex:inStorage:
parenCountAtCharIndex:inStorage:
initWithContext:calculationEngine:baseHostCell:formula:ownerUID:
initWithCalculationEngine:viewHostCell:hostTable:
formula
hasBareArgumentPlaceholders
reparseWithStorage:
formulaDetokenizedText
canSimplify
simplify
setCalculationEngine:
isSyntaxError
fixupFormulas
setFixupFormulas:
formulaWasFixable
formulaFixupsShouldStick
initialWhitespace
_expressionTree
_calculationEngine
_hostInfo
_initialWhitespace
_hostCell
_syntaxError
_fixupFormulas
_formulaWasFixable
_formulaFixupsShouldStick
_empty
T@"TSCECalculationEngine",W,N,V_calculationEngine
syntaxError
TB,N,GisSyntaxError,V_syntaxError
T@"NSString",C,N,V_initialWhitespace
TB,N,V_fixupFormulas
TB,R,N,V_formulaWasFixable
TB,R,N,V_formulaFixupsShouldStick
T@"TSTExpressionNode",&,N,V_expressionTree
TB,N,GisEmpty,V_empty
tst_hasLeadingCharacterInSet:
characterSetWithRange:
tsu_stringByRemovingCharactersInSet:
tst_isEqualToFormulaEqualsString
tst_hasLeadingSingleQuoteEscape
tst_isOneCharacterInSet:
tst_cleanForFormulaEditor
enumerateCellStringsForRows:rowCount:usingBlock:
enumerateCellStringsUsingBlock:
initWithPopupModel:startWithFirstItem:
choices
displayStringAtIndex:
cellValueWithLocale:
indexForValue:
asMultipleChoiceListFormat
initialValue
initWithInitialValue:multipleChoiceListFormatID:popupModel:
setPopupModel:
displayChoicesForInspector
valueForIndex:
tskMultipleChoiceListFormat
_displayChoices
_startWithFirstItem
_popupModel
T@"TSTPopUpMenuModel",&,N,V_popupModel
TB,R,N,V_startWithFirstItem
setThresholdCellValues:
thresholdCellValues
_ownerUID
_thresholdCellValues
_needsToUpdateFilterSetForImport
T{TSKUIDStruct=QQ},N,V_ownerUID
TB,N,V_needsToUpdateFilterSetForImport
T@"NSArray",&,N,V_thresholdCellValues
initWithContext:operatorChar:children:firstIndex:lastIndex:
operatorChar
initWithContext:children:
setOperatorChar:
_operatorChar
TS,N,V_operatorChar
initWithStrokeVisibilityMask:
strokeSelectionWithMask:
_mask
TI,R,N,V_mask
addCustomFormatForUpgrade:legacyKey:
upgradedCustomFormatList:
controlCellSelection
isKeyboardShown
_keyboardShown
keyboardShown
TB,R,N,GisKeyboardShown,V_keyboardShown
initWithContext:number:string:firstIndex:lastIndex:
initWithContext:number:locale:firstIndex:lastIndex:
initWithContext:string:locale:firstIndex:lastIndex:
setNumber:withLocale:
setString:
number
_string
_number
T{TSUDecimal={?=[2Q]}},R,V_number
checkoutScientificNumberFormatter
createStringWithValue:
returnScientificNumberFormatter:
hasExplicitFormatOfType:allowMismatchedSpare:
p_mostRecentlySetNumberFormatType
baseFormat
setProvidedValueTypeBeforeUpgrade
cellValueTypeDescription
setImportWarningSet:
inflateFromStorageRef:dataStore:
resolveDataListKeysForPreBNCCell:suppressTransmutation:sourceStorageVersion:
hasCellSpec
p_currentFormatIsEqualToOtherCellFormat:
doubleValue
isEqualToDate:
compareRange:otherStorage:otherRange:options:objectComparisonBlock:
setStringValue:clearingID:shouldWrap:
setStringValue:clearingID:
setFormulaSyntaxError:clearingID:
setRichTextValue:clearingID:convertToPlaintextIfPossible:
stringFromString:locale:
stringFromDate:locale:
stringFromBool:locale:
stringFromDurationTimeInterval:locale:
percentSymbol
asNumberFormat
showThousandsSeparator
initWithDecimalPlaces:negativeStyle:showSeparator:accountingStyle:currencyCode:
durationUnitSmallest
durationUnitLargest
durationStyle
initWithUseAutomaticUnits:durationUnitSmallest:durationUnitLargest:durationStyle:
stringFromDurationTimeInterval:locale:showPrecision:
stringForEditing
customFormatData
storageByApplyingCustomFormat:
copyPropertyMap
characterStyleAttributeCount
characterCount
characterStyleAtCharIndex:effectiveRange:
setCharacterStyle:range:undoTransaction:
setFormula:
setCellStyle:clearingID:
setTextStyle:clearingID:
setConditionalStyle:clearingID:
overridesProperty:
cellFill
p_setFormatFlags:explicit:
setCellSpec:clearingID:
spareFormatOfType:allowMismatchedSpare:
applyPopupChoiceIndex:
clearSpareFormatOfType:
setFormula:clearingID:
defaultCellSpec
setDoubleValue:
isControl
p_setFormatExplicit:fromFormatType:setMostRecentlySet:
setFormat:shouldSetExplFlags:isExplicit:makeCurrent:clearingID:
p_TSTCellFormatIsANumberFormatTypeForMostRecentlySet:
p_mostRecentlySetDateFormatType
p_mostRecentlySetTextFormatType
p_TSTCellSetMostRecentlySetNumberFormat:
p_TSTCellSetMostRecentlySetDateFormat:
p_TSTCellSetMostRecentlySetTextFormat:
p_spareFormatOfType:allowMismatchedSpare:explicitOnly:
accountingStyle
useAccountingStyle
negativeStyle
mismatchBetweenValueType:andFormatType:
setCommentStorage:clearingID:
setImportWarningSet:clearingID:
cellValueDescription
stringForCellValueType:
formatType:sharesASpareSlotWithFormatType:
hasASlotForFormatType:
upgradedBraveNewCell
initWithStorageRef:dataStore:
formulaSyntaxErrorString
valueIsStringOrNumber
dataIsReplaceable
hasEqualValueToCell:
copyJustStyleAndStrokesToCell:
clearStrokes
cellFillComparedToDefault:suppressCS:isDefault:
setCellSpecRepairingFormats:
cellSpecForDiff
setSpareFormat:isExplicit:
setCurrentFormat:flags:
p_setFormatForFormulaResult:propagation:
clearNoncurrentImplicitFormats
clearAllFormats
copyAllFormatsToCell:
hasCurrentFormat
hasFormatOfType:allowMismatchedSpare:
customFormatString
currentFormatNegativeStyle
isMostRecentlyExplicitPercent
currentFormatID
setCurrentFormatID:
customFormatID
setCustomFormatID:
baseFormatID
setBaseFormatID:
controlFormatID
setControlFormatID:
multipleChoiceListFormatID
setMultipleChoiceListFormatID:
controlFormat
multipleChoiceListFormat
_valueDouble
_valueID
_valueObject
_valueType
_conditionalStyleAppliedRule
_explicitFormatFlags
_cellStyleID
_textStyleID
_conditionalStyleID
_formulaID
_currentFormatID
_numberFormatID
_currencyFormatID
_dateFormatID
_durationFormatID
_customFormatID
_baseFormatID
_controlFormatID
_multipleChoiceListFormatID
_commentStorageID
_importWarningSetID
_conditionalStyle
_cellBorder
_currentFormat
_numberFormat
_currencyFormat
_dateFormat
_durationFormat
_customFormat
_baseFormat
_controlFormat
_multipleChoiceListFormat
_commentStorage
_importWarningSet
_cellSpec
TI,N,V_cellStyleID
TI,N,V_textStyleID
TI,N,V_conditionalStyleID
TI,N,V_formulaID
TI,N,V_currentFormatID
TI,N,V_numberFormatID
TI,N,V_currencyFormatID
TI,N,V_dateFormatID
TI,N,V_durationFormatID
TI,N,V_customFormatID
TI,N,V_baseFormatID
TI,N,V_commentStorageID
TI,N,V_importWarningSetID
TI,N,V_controlFormatID
TI,N,V_multipleChoiceListFormatID
T@"TSKFormat",R,N,V_controlFormat
T@"TSKFormat",R,N,V_multipleChoiceListFormat
TC,N,V_valueType
T@"NSDate",&,N
T@"TSWPStorage",&,N
T@"TSWPStorage",R,N
T@"TSTConditionalStyleSet",&,N,V_conditionalStyle
TC,N,V_conditionalStyleAppliedRule
T@"TSTCellBorder",&,N,V_cellBorder
T@"TSWPParagraphStyle",R,N
T@"TSTCellSpec",&,N,V_cellSpec
T@"TSCEFormulaObject",&,N
T@"TSTCellSpec",R,N
TS,N,V_explicitFormatFlags
T@"TSKFormat",R,N,V_currentFormat
T@"TSKFormat",R,N,V_numberFormat
T@"TSKFormat",R,N,V_currencyFormat
T@"TSKFormat",R,N,V_dateFormat
T@"TSKFormat",R,N,V_durationFormat
T@"TSKFormat",R,N,V_customFormat
T@"TSKFormat",R,N,V_baseFormat
TS,N,V_cellFlags
T@"TSULocale",R,N,V_locale
T@"TSDCommentStorage",&,N,V_commentStorage
T@"TSTImportWarningSet",&,N,V_importWarningSet
p_addCell:
initWithContext:cell:cellUIDList:skipCellUIDListCopy:
p_cellCount
copyWithZone:copyingCells:
setCellUIDs:
cellUIDList
isOneToMany
p_cellAtIndex:inCellListArray:
cellAtIndex:
initWithCellMap:
enumerateCellsWithUIDsUsingBlock:
reserve:
addCellUIDs:
p_addPrecopiedCells:
replaceCell:atIndex:
remapUIDsByColumnMap:rowMap:ownerMap:
p_copyCellsAndUUIDsFromCellMap:convertingToCellIDsWithTableInfo:
p_resolveCellIDsToUUIDsByTableInfo:
cellIDAtIndex:
p_shallowAddCell:atCellCoord:
shallowAddCell:
addCell:
addPrecopiedCell:
regionFromCellMap:withTableInfo:
initWithContext:cell:cellUIDList:
initWithContext:cell:cellIDList:
cellIDs
iterator
findCellForCellID:
findCellForCellUID:
addPrecopiedCells:andCellUIDs:
replaceCellAtIndex0:
addHeadMergeAction:
cellIDBasedCellMapByTableInfo:
uuidBasedCellMapByTableInfo:
coordinatesForTableInfo:passingTest:
shallowCopyToCoordFormUsingMap:
cellMapMaskedByUIDs:inRows:
shallowCopy
setShallowCopy:
_cellIDs
_searchableIDMap
_searchableUIDMap
_oneToMany
_shallowCopy
T@"TSTCellUIDList",&,N,V_cellUIDs
oneToMany
TB,R,N,GisOneToMany,V_oneToMany
TB,N,V_shallowCopy
nextCellUID
nextCellAndCellUID
currentCellUID
currentCell
_cellMap
_cellUIDIterator
_index
_currentCellUID
_currentCell
trailingEmptyCellCount
lastCell
_trailingEmptyCellCount
initWithContext:functionIndex:children:firstIndex:lastIndex:
setWhitespaceAfterFunctionName:
resurrectModeTokens
removeObjectsInRange:
setInvalidFunctionName:
initWithContext:calculationEngine:uidRectRef:hostCellRef:referenceColorHelper:suppressAutomaticNamedReferenceInvalidation:
initWithContext:calculationEngine:baseRangeRef:preserveFlags:hostCellRef:referenceColorHelper:suppressAutomaticNamedReferenceInvalidation:
initWithReferenceStart:referenceEnd:suppressAutomaticNamedReferenceInvalidation:
setRangeWithFunction:
absoluteCellTractRefForHostCell:offTable:
hasTableUID
initWithContext:boolValue:firstIndex:lastIndex:
initWithContext:stringValue:firstIndex:lastIndex:
initWithContext:dateValue:firstIndex:lastIndex:
setDateFormat:
initWithContext:durationInterval:durationFormat:firstIndex:lastIndex:
initWithContext:children:columns:rows:firstIndex:lastIndex:
includedUidsTract
columnUids
rowUids
setWhitespaceAfterLet:
setWhitespaceAfterIdentifier:
setWhitespaceAfterEquals:
removeLastObject
activeUidTract
isFixedAtZeroRef
initWithContext:calculationEngine:categoryRef:hostCellRef:referenceColorHelper:
strokeWidthForGridIndex:inRange:
strokeWidthForGridIndex:outWidth:outNextWidth:
updateCacheForGridIndex:withMergedStrokes:
lockForWriting
rwlock
setRwlock:
_indexToCacheEntriesMap
_rwlock
T{_opaque_pthread_rwlock_t=q[192c]},N,V_rwlock
tableNameSelection
_checkStructure
disconnect
initWithColumnRowUIDMap:
p_mutableRowIndexesForUIDSet:notFoundUIDs:
p_mutableColumnIndexesForUIDSet:notFoundUIDs:
incrementVersionCounter
nextCellUIDsBatch:batchSize:
uidRectRefForCellTractRef:
applyMap:toRows:
_columnUidForIndex
_rowUidForIndex
_columnIndexForUid
_rowIndexForUid
_versionCounter
_copyOnWriteUIDMapper
TQ,R,N,V_versionCounter
_originalMap
usesPrePivotAggregateTypesOnly
p_compareGroupByViaOwnerIndexes:otherGroupBy:
groupBys
addGroupByInSortedOrder:
addReceiverIfMissing:
mergeChangeDistributor
unregisterFromDistributors
registerOwnerWithOwnerUID:owner:referenceResolver:baseOwnerUID:ownerKind:
checkForFormulaCoordUpgrade
registerWithDistributors
unregisterOwner:
setCategoryOwner:
groupByForOwnerIndex:
resetWithGroupings:categoryOwner:hiddenStates:groupBySet:
initWithGroupings:isEnabled:categoryOwner:groupByUid:ownerIndex:
removeObjectIdenticalTo:
initWithArchive:forCategoryOwner:
encodeToArchive:archiver:backwardCompat:
groupValueTupleForRowUid:atLevel:
groupValueForValue:calcEngine:
removeRowUid:forGroupValue:
insertRowUid:atRowIndex:forGroupValue:
initWithUUID:
hasEnabledGroupBys
p_willApplyCell:baseCellCoord:refreshCategoryInfo:
insertRowUids:
sortGroupBys
resetAllGroupings
verifyConnectionsWithPivotDataModel:
_baseTableUID
_lock
_groupBys
_minion
T@"TSTTableModel",W,N,V_tableModel
T{TSKUIDStruct=QQ},N,V_baseTableUID
T@"<TSCEFormulaReplacing>",&,N,V_minion
setAggNode:forFormulaCoord:
precedentsOfCell:
markCellRefsAsDirty:
descriptionWithGroupBy:
accumulator
setAccumulator:
groupNode
_formulaCoord
_accumulator
_groupNode
_aggregator
T{TSUCellCoord=ISBB},R,N,V_formulaCoord
T@"TSTAccumulator",&,N,V_accumulator
T@"TSTGroupNode",W,N,V_groupNode
T@"TSTAggregator",R,W,N,V_aggregator
T@"NSMutableArray",&,N,V_children
numArguments
argumentSpecForIndex:
initWithContext:argumentSpec:firstIndex:lastIndex:
p_resetArgumentSpecForChildren
enumerateObjectsWithOptions:usingBlock:
p_functionSpec
minArguments
maxArguments
setFunctionNode:
functionIndex
value
setMode:
mode
isDescendantOfChild:
unsupportedFunctionNameForLocale:
localizedFunctionNameForLocale:
insertFormulaText:includeWhitespace:unwrapped:
listSeparator
newDefaultFunctionNodeWithContext:functionIndex:
newSumNodeWithContext:children:
isEmptyFunctionNode
isMissingRequiredArgument
isInvalidFunction
whitespaceAfterLeftParen
setWhitespaceAfterLeftParen:
whitespaceAfterDelimiters
setWhitespaceAfterDelimiters:
whitespaceAfterFunctionName
invalidFunctionName
_functionEndNode
_functionIndex
_whitespaceAfterLeftParen
_whitespaceAfterDelimiters
_whitespaceAfterFunctionName
_invalidFunctionName
TS,R,N,V_functionIndex
T@"TSTFunctionEndNode",&,N
Ts,R,N
T@"NSString",&,V_whitespaceAfterLeftParen
T@"NSArray",&,N,V_whitespaceAfterDelimiters
T@"NSString",&,N,V_whitespaceAfterFunctionName
T@"NSString",&,N,V_invalidFunctionName
invalidFunction
TB,R,N,GisInvalidFunction
tst_hasCaseInsensitivePrefix:withLocale:
p_fixupNodeIfFunctionNode:
whitespaceAfterLet
whitespaceAfterIdentifier
whitespaceAfterEquals
whitespaceAfterDelimiter
newBareLetNodeWithContext:
boundSymbol
_whitespaceAfterLet
_whitespaceAfterIdentifier
_whitespaceAfterEquals
_whitespaceAfterDelimiter
T@"NSString",&,N,V_whitespaceAfterLet
T@"NSString",&,N,V_whitespaceAfterIdentifier
T@"NSString",&,N,V_whitespaceAfterEquals
T@"NSString",&,N,V_whitespaceAfterDelimiter
initWithContext:tableInfo:
initWithTableUID:ownerUID:
initWithGroupRules:withTableInfo:
addReceiver:
resetForCategoriesWithForce:
removeColumnsAtSummaryIndexes:
removeUuidsFromVector:
removeUuidsFromSet:
needsFormulaReset
cellAtCellUID:
setNeedsFormulaReset:
enumerateCellsUsingBlock:
setUpgradingToSubOwnerUIDs:
cellSpecForAggregateType:forColumnUID:atGroupLevel:
copyJustValueToCell:
markAllDependentsAsDirty
setCell:atCellUID:formulaReplacer:
p_setPivotCell:atCellUID:formulaReplacer:
p_setCategoryCell:atCellUID:formulaReplacer:
columnRowUID
removeCellsInColumnUid:
formatOfCellFormatKind:isExplicit:
currencyIsMostRecentlySet
enumerateCellStoragesInRange:withBlock:
viewCellCoordForSummaryCellCoord:
p_tableStyleAreaForCellCoord:
defaultCellStyleForCellCoord:
defaultTextStyleForCellCoord:
summaryRowHeightList
labelRowHeightList
labelRowVisibilityList
cellMapForWildcardCells
setCellMap:
changeType
groupingColumnChanges
p_removeRows:
categoryLevelForTableStyleArea:
didCreateGroup:
willRemoveGroup:
didRemoveGroup:
formulaAtCellCoord:
hasFormulaAtCellCoord:
resetForPivotingWithRowUids:columnUids:
upgradeFormulasForGroupByUIDChange
setFormulaResultCellsWithCellMap:
insertColumnsAtIndex:metadatas:
removeCategoryColumnCellsForRows:
explicitFormatOfKind:atModelCellCoord:currencyIsMostRecentlySet:
p_RowCategoryLevelForCellCoord:isLabel:
p_ColumnCategoryLevelForCellCoord:
setLabelRowVisibility:atCategoryLevel:
currentState
runChange:withSummaryChangeState:migrationHelper:
_needsFormulaReset
_summaryCellVendor
_aggregateFormulaOwner
_groupSortOrder
_categoryColumnWidth
_aggregateFormulaOwnerUID
_summaryRowHeightList
_labelRowHeightList
_labelRowVisibilityList
T^v,R,N,V_summaryRowHeightList
T^v,R,N,V_labelRowHeightList
T^v,R,N,V_labelRowVisibilityList
TB,N,V_needsFormulaReset
T@"TSTTableDataStore",R,N,V_dataStore
T@"TSTSummaryCellVendor",R,N,V_summaryCellVendor
T@"TSTCategoryAggregateFormulaOwner",R,N,V_aggregateFormulaOwner
T@"TSTTableInfo",R,N,V_tableInfo
T@"TSTTableGroupSortOrderUID",&,N,V_groupSortOrder
T{TSKUIDStruct=QQ},N,V_aggregateFormulaOwnerUID
Td,N,V_categoryColumnWidth
initWithMessage:unarchiver:
cellMap
_definedCellMap
T@"TSTCellMap",&,N,V_cellMap
mRWLock
mRetainedPointerKeyDictionary
asToggleControlSpec
initWithStroke:range:order:majorStrokeLayerToken:minorStrokeLayerToken:
tokenWithStroke:range:order:majorStrokeLayerToken:minorStrokeLayerToken:
T{TSTSimpleRange=qQ},R,N
setStroke:
setRange:
setOrder:
majorStrokeLayerToken
setMajorStrokeLayerToken:
minorStrokeLayerToken
setMinorStrokeLayerToken:
_order
_stroke
_majorStrokeLayerToken
_minorStrokeLayerToken
_range
T@"TSDStroke",&,N,V_stroke
T{TSTSimpleRange=qQ},N,V_range
Ti,N,V_order
T@"<TSTStrokeLayerStrokeAndRange>",&,N,V_majorStrokeLayerToken
T@"<TSTStrokeLayerStrokeAndRange>",&,N,V_minorStrokeLayerToken
majorStrokeLayer
startingIndex
minorStrokeLayer
nextStrokeAndRange:
p_findStrokeAndRangeAtIndex:highOrderToken:updatingLowOrderToken:lowOrderLayer:
enumerateStrokesUsingBlock:
appendStroke:inRange:order:
insertStroke:inRange:order:
setMajorStrokeLayer:
setMinorStrokeLayer:
_majorStrokeLayer
_minorStrokeLayer
T@"TSTStrokeLayer",&,N,V_majorStrokeLayer
T@"TSTStrokeLayer",&,N,V_minorStrokeLayer
currencySymbolForCurrencyCode:
tst_selectionForImplicitlyEditingWithFormatType:percentSymbol:currencySymbol:adjustSelectionForCurrencyOrPercentSymbols:
selectionWithRange:
superRange
wpKind
attributeArrayForKind:
tst_selectionForImplicitlyEditingCellWithFormat:adjustSelectionForCurrencyOrPercentSymbols:
tst_tableInfo
initWithUTF8String:
aggregateTypeForAggregateLabel:locale:
absoluteCellTractRefForHostCell:
foreachCellRect:
tsu_isSingleContiguousRange
extractComponentsFromDate:year:month:day:
initWithBool:
dataType
date
durationValue
durationUnits
initWithNumber:
duration
year
_decimal
_dataType
_units
_year
_month
_day
TC,R,N,V_dataType
T@"NSString",R,N,V_string
T@"NSDate",R,N
Tq,R,N,V_year
Tq,R,N,V_month
Tq,R,N,V_day
T@"NSNumber",R,N
T{TSCENumberValue=^^?{TSUDecimal={?=[2Q]}}{TSCEFormat=@IC{TSCEDurationFormat=b1b5b5b2}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}SB},R
setNumber:
lowercaseString
isEqualViaFormattingAsDouble::
isStringValueInList:
underlyingDecimalValue
isNumberValueInList:locale:
isDateValueInListYear:month:day:
isBoolValueInList:
isDurationValueInList:
setRelativeCellRef:
initWithRelativeCellRef:
relativeCellRef
tract
hasCategoryRef
setViewTractRef:
hasViewTractRef
cellRefForHostCoord:
uidRectRef
baseCellRef
crossTableRef
setBaseCellRef:
initWithBaseCellRef:preserveFlags:
cellRef
setBaseCellRef:preserveFlags:
dataList
initWithDataList:
hasRelativeCellRef
uidTractList
preserveColumn
preserveRow
needsFormulaRewriting
formulaCreatorForPredArg0UsingLinkedRef:useColumnRef:
formulaCreatorForPredArg
copyBySettingHostTableUID:hostColumnUID:hostRowUID:
hasHostCell
hostColumnUID
hostRowUID
numberValue
defaultPredicateArg
setNumberValue:
setDate:
isCellValueInList:
convertToRelativeRefIfPossible
setBaseCellRef:preserveColumn:preserveRow:
initWithBaseCellReference:preserveColumn:preserveRow:
cellReference
setBaseCellReference:
setBaseCellReference:preserveColumn:preserveRow:
setDurationValue:
setDurationUnits:
isEqual:atHostCoord:
rewriteWithContext:forArgAt:usingLinkedRef:useColumnRef:hostCellRef:rewriteBlock:
hostCellCoord
setHostCellCoord:
_categoryRef
_viewTractRef
_hostCellCoord
_baseCellRef
_dataList
_uidTractList
_relativeCellRef
_hasRelativeCellRef
_type
_preserveFlags
_listItemsSet
TC,R,N,V_type
T@"TSTFormulaPredArgData",R,N,V_data
T@"NSNumber",&,N
T@"NSString",C,N
T{TSUPreserveFlags=C},N
TB,R,N,V_hasRelativeCellRef
T@"TSCECategoryRef",&,N
T@"TSCEViewTractRef",&,N
T@"TSCEUndoTractList",&,N,V_uidTractList
T@"TSTUIDRectRef",R,N
T{TSUModelCellCoord={TSUCellCoord=ISBB}},N,V_hostCellCoord
columnHiddenStateExtent
initWithArchive:unarchiver:forHiddenStatesOwner:
registerHiddenStates:baseOwnerUID:
hiddenStatesByExtentUid:
unregisterHiddenStates:
willChangeExtentUids:
didChangeExtentUids:
_hiddenStatesByRowExtentUuid
_hiddenStatesByColumnExtentUuid
localizedTrueString
localizedFalseString
setValue:
_value
TB,N,V_value
dimensions
whitespaceBeforeFirstChild
setWhitespaceBeforeFirstChild:
_dimensions
_whitespaceBeforeFirstChild
T{TSCEGridDimensions=II},R,V_dimensions
T@"NSString",&,V_whitespaceBeforeFirstChild
T@"NSArray",&,V_whitespaceAfterDelimiters
currencyCodeForValue:
unitForCurrencyCode:
p_recalculateMergedFormatWithGroupBy:
_rowLookupKeysForFormat
_noFormatMergingNeeded
_cellValue
T@"TSCECellValue",R,&,N,V_cellValue
initWithInfo:frame:
isLayingOutIntoTarget
setCacheIsValid:
cacheIsValid
setCachedCellWraps:
setCachedVerticalAlignment:
setCachedParagraphAlignment:
setCachedMergeRange:
setCachedAutoSizeFlags:
setCachedCellStyle:
setCachedTextStyle:
setCachedPadding:
invalidateForPageCountChange
isDynamicallyChangingAvailableSpaceForContainedChild
repClassOverride
setCachedCellID:
cachedMaskSpillRange
_cachedCellWraps
_cacheIsValid
_cachedVerticalAlignment
_cachedParagraphAlignment
_cachedCellID
_cachedCellStyle
_cachedTextStyle
_cachedAutoSizeFlags
_cachedPadding
_cachedMergeRange
_cachedMaskSpillRange
_cachedMaskRect
_cachedAutosizedFrame
T{TSUCellCoord=ISBB},N,V_cachedCellID
T@"TSTCellStyle",&,N,V_cachedCellStyle
T@"TSWPParagraphStyle",&,N,V_cachedTextStyle
TB,N,V_cachedCellWraps
Ti,N,V_cachedVerticalAlignment
Ti,N,V_cachedParagraphAlignment
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_cachedMergeRange
TQ,N,V_cachedAutoSizeFlags
T@"TSWPPadding",&,N,V_cachedPadding
TB,N,V_cacheIsValid
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_cachedMaskRect
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_cachedMaskSpillRange
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_cachedAutosizedFrame
tokenizeFormulaStringLiterals
tsce_newStringByAddingDoubleQuoteEscapesIfNecessary
T@"NSString",&,N,V_value
pruneAgainstTable:
enumerateCellUIDRangesUsingBlock:
enumerateCellUIDUsingBlock:
subRangesOfCellCount:
_cellUIDRangeList
defaultDateTimeFormatForLocale:
tsce_year
tsce_month
tsce_day
tsce_hour
tsce_minute
tsce_second
initWithContext:asBlank:firstIndex:lastIndex:
isBlank
setIsBlank:
_isBlank
T@"NSDate",&,N,V_value
TB,N,V_isBlank
T@"NSString",&,N,V_dateFormat
p_convertCategoryRefToRelativeForHostCell:
initWithContext:calculationEngine:uidRectRef:categoryRef:hostCellRef:referenceColorHelper:suppressAutomaticNamedReferenceInvalidation:
p_expandedViewRangeRefForViewRangeRef:forLabelRowsInTable:
p_singleCategoryRefForViewRangeRef:rangeContext:calculationEngine:hostCellRef:
isRangeExpression
hostCellRef
referenceColorHelper
p_resetMenu
p_boundingViewRangeRef
isSpanningCategorySummaryRef
p_spanningCategoryRefForViewRangeRef:groupByUid:categoryLevel:calculationEngine:
rangeContext
p_rangeRef:isContainedWithinSummaryAndLabelRowsInTable:
p_cellRangeForSingleCategoryRefInViewRangeRef:inTable:rangeContext:
p_categoryRefViewTractRef
isValidCategoryRef:
viewCellTractRefForCategoryRef:atRowUid:
isSingleColumnSpanningReference
isSingleRowSpanningReference
isCategorySummaryRef
isSpanningCategoryRef:
isRangeWithFunction
p_subregionForRange:rangeContext:
referenceAsStringWithContext:
setForFormulaPlainText:
convertCategoryRefToRelativeAncestorUid:atRowUid:inHostTable:
initWithTableUID:
p_buildASTNodeArray:forCoord:preserveFlags:hostCell:
initWithAbsoluteTractRef:hostCell:
preserveFlagsForReference:calcEngine:
initWithContext:calculationEngine:viewRangeRef:preserveFlags:hostCellRef:referenceColorHelper:suppressAutomaticNamedReferenceInvalidation:
initWithContext:calculationEngine:chromeRangeRef:preserveFlags:hostCellRef:referenceColorHelper:suppressAutomaticNamedReferenceInvalidation:
viewBoundingBox
viewRangeRefDeprecated
categoryRefTableUID
isNonSpanningRangeExpression
setIsBlankForKeyboardInsertion:
isResizable
subregionForReference:range:
subregionForRange:
processChanges:forChangeSource:
setHostCellRef:
setRangeContext:
isBlankForKeyboardInsertion
suppressAutomaticNamedReferenceInvalidation
hasCachedIsValidReference
setHasCachedIsValidReference:
cachedIsValidReference
setCachedIsValidReference:
_refString
_formulaPlainText
_rangeContext
_rangeWithFunction
_isBlankForKeyboardInsertion
_suppressAutomaticNamedReferenceInvalidation
_isCategoryRef
_hasCachedIsValidReference
_cachedIsValidReference
_uidRectRef
_referenceColorHelper
_hostCellRef
T@"TSKDocumentRoot",R,N
T@"TSKChangeNotifier",R,N
TB,N,V_hasCachedIsValidReference
TB,N,V_cachedIsValidReference
T@"TSTUIDRectRef",R,N,V_uidRectRef
T{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}},N,V_hostCellRef
T{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}},R
TC,N,V_rangeContext
rangeWithFunction
TB,N,GisRangeWithFunction,V_rangeWithFunction
TB,N,V_isBlankForKeyboardInsertion
TB,R,N,V_suppressAutomaticNamedReferenceInvalidation
TB,R,N,V_isCategoryRef
T@"TSCECategoryRef",&,N,V_categoryRef
T@"TSTReferenceColorHelper",&,N,V_referenceColorHelper
renderRating:intoContext:rect:showDots:color:useMinimalSpace:
p_newStarPath:
renderRating:intoContext:rect:showDots:color:
initWithContext:tableInfo:pencilAnnotationStorage:
UUIDString
table
cellRangeForAnnotation:
uuid
T@"<TSKPencilAnnotationStorage>",R,N
setTable:
_cellRange
_pencilAnnotationStorage
_table
T@"TSTTableInfo",W,N,V_table
T@"TSDPencilAnnotationStorage",R,N,V_pencilAnnotationStorage
durationInterval
setDurationInterval:
setDurationFormat:
setBlank:
_blank
_durationInterval
Td,N,V_durationInterval
T@"TSKDurationFormat",&,N,V_durationFormat
blank
TB,N,GisBlank,V_blank
p_invalidate
numberWithShort:
bakedValue
argumentSpecForFunctionIndex:argumentIndex:
modes
argumentName
_detokenizedText
_mode
Ts,N,V_mode
p_strokeTypeForColumn:
strokeLayerForStrokeType:
p_strokeTypeForRow:
strokeTypeToLayerMap
strokeLayerStackForStrokeType:
strokeTypeToLayerStackMap
defaultsOnlyStrokeLayerStack
replaceDefaultStrokeLayerWith:
validateGeometry
changeDescriptor
strokeLayer
p_updateStrokeLayer:forColumnStrokeType:
p_updateStrokeLayer:forRowStrokeType:
strokeProvider
applyStroke:atIndexes:order:applyStroke:atIndexes:order:applyStroke:atIndexes:order:applyStroke:atIndexes:order:applyStroke:atIndexes:order:
p_headerColumnSeparatorColumnRangeIsValid
p_headerRowSeparatorRowRangeIsValid
strokeLayerStackForColumn:
strokeLayerStackForRow:
setStrokeProvider:
tableProvider
setTableProvider:
setStrokeTypeToLayerMap:
setStrokeTypeToLayerStackMap:
headerSideBorderColumnRange
setHeaderSideBorderColumnRange:
headerColumnSeparatorColumnRange
setHeaderColumnSeparatorColumnRange:
footerColumnSeparatorColumnRange
setFooterColumnSeparatorColumnRange:
bodySideBorderColumnRange
setBodySideBorderColumnRange:
topBorderRowRange
setTopBorderRowRange:
headerRowSeparatorRowRange
setHeaderRowSeparatorRowRange:
footerRowSeparatorRowRange
setFooterRowSeparatorRowRange:
bottomBorderRowRange
setBottomBorderRowRange:
_isValid
_strokeProvider
_tableProvider
_strokeTypeToLayerMap
_strokeTypeToLayerStackMap
_headerSideBorderColumnRange
_headerColumnSeparatorColumnRange
_footerColumnSeparatorColumnRange
_bodySideBorderColumnRange
_topBorderRowRange
_headerRowSeparatorRowRange
_footerRowSeparatorRowRange
_bottomBorderRowRange
T@"<TSTTableHiddenRowColumnProviding><TSTTableInternalGeometryProviding>",W,N,V_tableProvider
TB,N,V_isValid
T@"NSPointerArray",&,N,V_strokeTypeToLayerMap
T@"NSPointerArray",&,N,V_strokeTypeToLayerStackMap
T{_NSRange=QQ},N,V_headerSideBorderColumnRange
T{_NSRange=QQ},N,V_headerColumnSeparatorColumnRange
T{_NSRange=QQ},N,V_footerColumnSeparatorColumnRange
T{_NSRange=QQ},N,V_bodySideBorderColumnRange
T{_NSRange=QQ},N,V_topBorderRowRange
T{_NSRange=QQ},N,V_headerRowSeparatorRowRange
T{_NSRange=QQ},N,V_footerRowSeparatorRowRange
T{_NSRange=QQ},N,V_bottomBorderRowRange
T@"<TSTTableStrokeProviding>",W,N,V_strokeProvider
addUidCoord:atRunningLevel:
uuidCoordAtRunningLevel:
_uidCoordsPerRunLevel
addUidCoord:tupleForCoord:atRunningLevel:
uuidCoordForGroupTuple:runningLevel:
_uidCoordsPerTuple
isEqualToCellValue:
uuidCoordAtIndex:templateTuple:runningLevel:
getUidCoordforRunningAggregate:tupleForCoord:newUidCoord:addNewUidCoordEvenIfNotFound:inContext:
_cellValues
_uidCoords
initWithGroupBySet:
isMissingRunningTotalFieldForAggIndex:
getPreviousUidCoordForAggIndex:fromNewUidCoord:addNewUidCoordEvenIfNotFound:
_groupBySet
_runAggrForAggIndex
_valuesForRunningAggregatePerRunDirectionUid
T@"TSTGroupBySet",R,N,V_groupBySet
_functionNode
T@"TSTFunctionNode",N,V_functionNode
initFromCell:useAllSpareFormats:
initFromCell:useAllSpareFormats:forceNoContent:suppressApplyValue:applySpareFormatOnly:
formatAndValueFromCell:useAllSpareFormats:
p_copyStorage:
richTextOrErrorTextStorageValue
copyForApplyingNoContentWithSuppressApplyValue:
p_formatForFormatType:
initWithNumberValue:locale:
initWithStringValue:locale:
initWithDateValue:locale:
initWithBoolean:locale:
durationUnitLargestWithTimeInterval:
formatType:isSameCellFormatKindAs:
formatAndValueFromCell:useAllSpareFormats:forceNoContent:
formatAndValueFromCell:useAllSpareFormats:suppressApplyingValue:
formatAndValueFromRichTextCell:updatingStorageWithBlock:
formatAndValueFromCell:applySpareFormatOnly:
initFromPropertyCommandMessage:unarchiver:
saveToPropertyCommandMessage:archiver:
copyForApplyingNoContent
copyForNotApplyingValue
isFormulaSyntaxError
isApplySpareFormatOnly
hasStringContentMatchingCell:
applyToCell:
_useAllSpareFormats
_suppressApplyValue
_applySpareFormatOnly
_spareFormatType
_boolValue
_decimalValue
_objValue
_formattedValue
_formattedRichTextStorage
_explicitFlags
_cellFormatKind
_booleanFormat
_textFormat
T@"NSDate",R,C,N
T{TSUDecimal={?=[2Q]}},R,N
T@"NSString",R,C,N
cacheWidth:ofColumn:
widthOfColumn:handleCacheMissUsingBlock:
generateWidthHeightCollection
widthHeightCollections
setWidthHeightCollections:
_columnToWidth
_widthHeightCollections
T@"NSMutableArray",&,N,V_widthHeightCollections
tableNameChangeDistributor
summaryModelIsCleanForSortPrecedentForTableUID:
uidTractWithCalcEngine:hostTableUID:
initWithUidTract:calcEngine:tableUID:
p_ensureHiddenStatesExistsWithPivotDataTable:
pivotOptionsForUID:
emptyOptions
p_resetHiddenGrandTotals
p_formulaForCellCoord:runningTotalContext:
p_setPivotHeaderCellsResettingPivotHidden:preservingStyles:
p_resetSummaryFormulasForRunningTotalsOnly:preservingStyles:
clearAllPivotHiddenAndInvalidate:
invalidateAllCollapsed
hideColumnsAtIndexes:forAction:invalidate:
showColumnsAtIndexes:forAction:invalidate:
hideRowsAtIndexes:forAction:invalidate:
showRowsAtIndexes:forAction:invalidate:
groupingTypeIsAnyDateType:
shortStringForGroupingType:locale:
applyFormulaResult:
decimalPlaces
p_clearAllPivotHiddenAndFiltered:
p_resetAllHiddenTotals
hideTotals
p_resetHiddenTotalsForGroupingColumnUid:hideTotals:
enumerateOptionsUsingBlock:
copyBySettingTranslationFlags:
p_resetSortingStructures
p_sortRowsInMode:sortDirection:columnIndex:level:aggregateIndex:resetLabels:
p_commitSort
p_sortColumnsInMode:sortDirection:rowIndex:level:aggregateIndex:resetLabels:
p_sortFullTable:
sortByGrandTotal
sortingAggregateRuleUid
sortDescending
initWithViewIndex:direction:
mappingForSortingRows:withRules:
reverseMapIndex:
mappingForSortingColumns:withRules:
setTemporaryOrder:forDimension:
hideAtUid:forAction:
invalidateForChangingIndexes:isRow:forTable:
threadCollector
registerChange:details:forChangeSource:
p_commitSortAsync
linkedResolver
evaluationMode
writeResultsForCalcEngine:
invalidateForCalcEngine:
evaluateFormulaAt:withCalcEngine:recalcOptions:
multiEvaluateFormulasAt:withCalcEngine:recalcOptions:
didAddTableName:forTableUID:
didRemoveTableName:forTableUID:
didChangeTableName:fromTableName:forTableUID:
registerWithCalcEngine:forTableModel:baseOwnerUID:
linkToCalcEngine:forTableModel:
pivotSourceBodyReferenceEmbeddedInFormula
pivotSourceHeaderTract
pivotSourceBodyUidTract
groupingColumnOptionsMapCopy
pivotOptionsForGroupingColumn:
pivotOptionsForGroupingColumnUid:
pivotOptionsForColumnGroupsAtLevel:
groupingColumnUidExists:
setPivotOptions:groupingColumnUid:forSortingOptions:redoSort:
isHidingGrandTotalColumns
setHidingGrandTotalColumns:
isHidingGrandTotalRows
setHidingGrandTotalRows:
resetCellsForNewPivotOrder
rewriteForPaste
sortRowsByColumnIndex:level:aggregateIndex:sortDirection:
sortColumnsByRowIndex:level:aggregateIndex:sortDirection:
filteringChanged:forDimension:
pivotRowUIDs
pivotColumnUIDs
pivotDataRefreshTimestamp
pivotDataRefreshUID
pivotRowColumnRuleChangeUID
setPivotRowColumnRuleChangeUID:
pivotAggregateRuleChangeUID
setPivotAggregateRuleChangeUID:
shouldSkipNextAsyncSort
setShouldSkipNextAsyncSort:
_groupingColumnOptionsMap
_sortedColumnUids
_sortedRowUids
_resetHeaderLabelsAfterSort
_invalidateAfterAsyncSort
_autoImplicitSort
_shouldSkipNextAsyncSort
_isHidingGrandTotalColumns
_isHidingGrandTotalRows
_isEmptyPivot
_formulaStore
_pivotSourceTableName
_pivotDataRefreshTimestamp
_pivotSourceTableUID
_pivotDataRefreshUID
_pivotRowColumnRuleChangeUID
_pivotAggregateRuleChangeUID
_pivotRowUIDs
_pivotColumnUIDs
TB,R,N,V_isEmptyPivot
T@"TSTTableModel",R,N,V_tableModel
T@"TSTPivotGroupingColumnOptionsMap",R,N
T@"TSTFormulaStore",R,N,V_formulaStore
T{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}},R,N,V_pivotRowUIDs
T{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}},R,N,V_pivotColumnUIDs
T{TSKUIDStruct=QQ},N,V_pivotSourceTableUID
T@"NSString",&,N,V_pivotSourceTableName
Td,N,V_pivotDataRefreshTimestamp
T@"TSCECellTractRef",&,N
T@"TSTFormula",R,N
T{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}},N
T{TSKUIDStruct=QQ},N,V_pivotDataRefreshUID
T{TSKUIDStruct=QQ},N,V_pivotRowColumnRuleChangeUID
T{TSKUIDStruct=QQ},N,V_pivotAggregateRuleChangeUID
TB,N,V_shouldSkipNextAsyncSort
tableLayout
maskRect
recursivelyDrawInContext:keepingChildrenPassingTest:
masksToBounds
filterFormulaCoordinateForType:columnOrRowIndex:
initWithHiddenStatesOwner:forRows:
initWithHiddenStatesOwner:shouldRegister:
loadIndexesFromTable:
showAtViewIndex:forAction:
hideAtViewIndexes:forAction:
showAtViewIndexes:forAction:
hideAtBaseIndex:forAction:
showAtBaseIndex:forAction:
mutablePivotHiddenIndexes
clearAllPivotHidden
hidingActionForViewIndex:
hidingActionForBaseIndex:
indexesOfHiddenInRange:
indexesOfUserHiddenInRange:
indexesOfFilteredInRange:
indexesOfVisibleInRange:
indexesOfUserVisibleInRange:
indexesOfVisibleIndexesInIndexes:
indexesOfCollapsedInRange:
numberOfHiddenInRange:
numberOfUserHiddenInRange:
anyHiddenInRange:
anyHiddenInRange:forAction:
enumerateColumnRangesUsingBlock:
hasHiddenAtIndex:
indexOfVisibleBeforeIndex:
indexOfVisibleBeforeAndIncludingIndex:
indexOfVisibleAfterIndex:
indexOfVisibleAfterAndIncludingIndex:
numberOfHiddenInBaseRange:
indexesOfHiddenInBaseRange:
numberOfUserHiddenInBaseRange:
syncUpHiddenStateFormulaOwnerUIDs
setupAfterUnarchive
nextHiddenStateForRowsOwnerUID
setHiddenStateExtentUid:
nextHiddenStateForColumnsOwnerUID
setGroupUID:asCollapsed:
collapsedGroupUids
copyCollapsedStateToUpdatedGroupUids:dimension:
pruneCollapsedGroupsInDimension:
mutateFormulaFiltersWithTable:usingBlock:
dirtyFilterStateForHeaders
dirtyFilterStateForFooters
anyCollapsed
anyHidden
numberOfHidden
numberOfUserHidden
insertBaseRange:
deleteBaseRange:withUids:
moveViewRangeOnlyFrom:toIndex:
moveBaseRangeFrom:toIndex:
swapBaseIndex:withIndex:
mutableUserHiddenIndexes
hiddenOrCollapsedIndexes
supportsPivotTables
initWithFilterRules:type:context:
filterCoordTypeForFilterCoordinate:
columnOrRowIndexForFilterCoordinate:
filterFormulaCoordinateForColumnOrRow:
filterFormulaContainingCell
filterFormulaCoordForViewColumnRow:
mutableIndexSetByIntersecting:withRange:
showBaseColumnAtIndex:forAction:
hidingActionForBaseRowAtIndex:
indexesOfCollapsedColumnsInCellRange:
hidingActionForBaseColumnAtIndex:
anyHiddenColumnsInCellRange:forAction:
numberOfHiddenColumnsInBaseCellRange:
numberOfHiddenRowsInBaseCellRange:
numberOfUserHiddenRowsInBaseCellRange:
setRowGroupUID:asCollapsed:
setColumnGroupUID:asCollapsed:
collapsedRowGroupUids
collapseSummaryColumnGroupUIDs:
expandSummaryColumnGroupUIDs:
collapsedColumnGroupUids
copyCollapsedStateToUpdatedRowGroupUids:
pruneCollapsedRowGroups
pruneCollapsedColumnGroups
filterSetForColumns
hasCollapsedRows
hasCollapsedColumns
moveViewColumnRange:toColumnIndex:
mutableUserHiddenRowIndexes
mutableUserHiddenColumnIndexes
mutablePivotHiddenRowIndexes
mutablePivotHiddenColumnIndexes
mutableFilteredColumnIndexes
verifyConnectionsWithTableModel:
setHiddenStatesOwner:
loadedIndexesAfterUnarchive
_rowHiddenStateExtent
_columnHiddenStateExtent
_loadedIndexesAfterUnarchive
T@"TSTHiddenStatesOwner",W,N,V_hiddenStatesOwner
T@"TSTHiddenStateExtent",R,&,N,V_rowHiddenStateExtent
T@"TSTHiddenStateExtent",R,&,N,V_columnHiddenStateExtent
T@"TSTTableTranslator",R,&,N,V_translator
TB,R,N,V_loadedIndexesAfterUnarchive
T@"TSTTableFilterSet",&,N
p_filterRegion:strokeSidecar:
enumerateColumnsUsingBlock:
enumerateRowsUsingBlock:
regionByIntersectingRegion:
curCellID
setCurCellID:
_curCellID
T@"TSTStrokeSidecar",R,N,V_strokeSidecar
T@"NSObject<TSTCellRegionIterating>",R,N,V_regionIterator
T{TSUCellCoord=ISBB},N,V_curCellID
ownerForOwnerUID:
pivotTableUid
refersToPivotTableRows
refersToPivotTableColumns
groupByForCategoryRef:withCalcEngine:
relativeAncestorGroupUid:
relativeLevelOfAncestorGroupUid:
isRelativeAncestorGroupUid:
isBadRef
resolveRelativeAncestorUid:atRowUid:
convertToRelativeAncestorUid:atRowUid:
setAsRelativeWithGroupUid:
setRelativeGroupUid:
rebuildAllAggFormulas
dropAllAggregators
insertSpanningRangeRef:
filteringChangedPrecedentForTableUID:
initWithNotifyType:group:
isDeferringGroupByChangeNotifications
initWithNotifyType:group:rowUid:
beginDeferringRebuildFormulas
deferGroupByChangeNotifications
endDeferringRebuildFormulas
resumeGroupByChangeNotifications
addAggregator:
usedAggFormulaCoord:
loadFromArchive:
p_setupCustomFormatsWithLocale:
cellHasPrecedents:
resetAllAggsFormula
resetGroupingColumnsFormula
initWithType:groupByUid:
setPreviousLevel:
groupValueTupleByMergingTuple:toLevel:
groupingColumnListCopy
initWithType:groupingColumnChanges:groupByUid:
setUpdatedLevel:
previousLevel
addRemoveOfGroupUid:
updatedLevel
columnAggregateListCopy
_removeAggregates:
_addAggregates:atLevel:
markAllExternalGroupByRefsDirty:
groupByChangedPrecedentForTableUID:
aggregatorForColumn:
dropAggregator:
createAggregatorOnColumn:
distinctValuesAtLevel:
allObjects
sortUsingSelector:
notifyType
sendToDistributor:
sendDeferredNotifictions:
mergeOriginForBaseCellCoord:
allGroupNodeUids
setValue:forFormulaCoord:
valueForFormulaCoord:
hidingActionForUid:viewRcIndex:
cellsInACycleInOwner:
hasFormulaAt:
p_columnNameForColumnUid:
shortStringForGroupingType:
stringForGroupingType:
aggregateTypeForCategoryRef:
aggregateLabelForCategoryRef:
columnNameForCategoryRef:
valuesForCategoryRef:atRowUid:
valueGridForCategoryRef:atRowUid:hidingActionMask:
valueGridForCategoryRef:atRowUid:
setEmptyValueAtCoord:
setValue:atCoord:
missingRunningTotalInFieldError
raiseErrorForError:
initWithValues:
aggrIndexLevel
showAggregateName
sortedArrayFromArray:forDimension:
sortedArrayFromArray:
valueGridForCategoryRef:
cellRefsForCategoryRef:atRowUid:ordered:
bodyRowUidsForCategoryRef:atRowUid:ordered:
setGroupLevel:
rowUIDForViewRowIndex:
getCategoryReferencesWithCalcEngine:
p_promoteSpanningReferences:withCaptured:atLevel:
cellIteratorWithRegion:flags:searchFlags:
captureCategoryRefsFromIterator:atLevel:asSpanning:
uidRectRefForCategoryRef:atRowUid:
tableOrLinkedResolverForTableUID:
groupValueHierarchyStringForCategoryRef:forHostCellRef:namingContext:
setFormatString:
initWithName:formatType:data:
localizedStringWithFormat:
tswp_stringWithUnambiguousNeutralEnding
validateNumberOfGroupsForGroupingColumnList:sourceTableModel:sourceBodyTract:limit:groupNodeCount:
initWithTopLeft:bottomRight:
tableUIDForCategoryRef:withCalcEngine:
validateNumberOfGroupsForGroupingColumnList:pivotDataModel:limit:groupNodeCount:
didInitFromSOS
columnOrderChangedPrecedent
rowOrderChangedPrecedent
rowOrderChangedPrecedentIgnoringRecalc
columnAggregatesOnColumnUids:
changeForUpdatingGroupValueOnNode:toValue:
changeForMovingBaseRows:toDestGroup:
changeForSettingGroupingColumnList:
mapGroupUidsForChange:
runChange:withAggregates:
numberOfGroupsAtLevel:
numberOfGroupsUptoLevel:
indexOfGroupingColumn:
markAllAggregatesAsDirty
enumerateAggregatesAtLevel:withBlock:
groupNodeForGroupUuid:
groupLevelForGroupUid:isBlank:isError:
groupLevelForGroupingColumnUid:
markAllGroupNodesDirty
groupsAtLevel:
rowsForGroupValue:atLevel:
rowUidsForGroupUids:
enumerateRowsUidsAtLevel:withBlock:
childGroupUidsForGroupUids:
labelRowUidsForGroupUids:
labelRowUIDSet
labelRowUIDSetForCategoryLevel:labelRowVisibility:
rowUIDSetForCategoryLevel:
indexesOfGroupUidsInUids:
removeRowUid:
sortedValuesAtLevel:
aggregateRefOnValue:forColumnUid:forType:atLevel:
groupValueRefOnValue:atLevel:
groupValueHierarchyRefOnValue:atLevel:
enterCalcEngineMode
exitCalcEngineMode
inCalcEngineMode
updateAggFormulaCoord:
clearValueForFormulaCoord:
clearAggNode:forFormulaCoord:
createAggregatorsIfMissingAndAssert:
labelForCategoryRef:
valuesForCategoryRef:
valuesForCategoryRef:atRowUid:hidingActionMask:
countOfValuesForCategoryRef:
unorderedCellRefsForCategoryRef:atRowUid:
cellRefsForCategoryRef:atRowUid:
categoryRefsForSpanningCategoryRef:
expandSpanningCategoryRef:
promoteSpanningReferences:
captureCategoryLabelRefsForViewRegion:atLevel:asSpanning:forRows:
captureAnyCategoryRefsForViewRegion:atLevel:asSpanning:
captureCategoryRefsForViewRegion:atLevel:asSpanning:
viewCellTractRefForCategoryRef:
stringForCategoryRef:hostTableUID:
analyze
isBlankGroupUid:
isErrorGroupUid:
aggregateRangeRefForCategoryRef:
columnAggregates
indirectAggTypeChangeFormulaCoord
groupingColumnsFormulaCoord
groupingColumnHeadersFormulaCoord
allAggsInGroupRootFormulaCoord
needsRebuildOfAggFormulas
customFormatForBlankGroup
customFormatForErrorGroup
_isEnabled
_groupRoot
_ownerIndex
_aggregators
_indirectAggTypeChangeFormulaCoord
_groupingColumnsFormulaCoord
_groupingColumnHeadersFormulaCoord
_allAggsInGroupRootFormulaCoord
_columnOrderChangedCoord
_rowOrderChangedCoord
_rowOrderChangedIgnoringRecalcCoord
_hiddenStatesChangedCoord
_groupByChangeDistributor
_nextAggFormulaCoord
_aggValuesLock
_aggNodesByFormulaCoord
_groupNodesByGroupUid
_rebuildFormulasDeferredLevel
_needsRebuildOfAggFormulas
_deferGroupByChangeNotificationsLevel
_deferredGroupByChangeNotifications
_calcEngineGroupByChangeNotifications
_inCalcEngineMode
_groupingColumnHeadersChanged
_rowUidLookupList
_customFormatForBlankGroup
_customFormatForErrorGroup
T@"TSTCategoryOwner",W,N,V_categoryOwner
T@"TSTGroupBySet",W,N,V_groupBySet
T@"TSCECalculationEngine",R,N
T@"NSArray",R,&,V_groupingColumns
TC,R
TB,N,V_isEnabled
T@"TSTGroupByChangeDistributor",R,&,N,V_groupByChangeDistributor
T@"NSMutableArray",R,&,N,V_aggregators
T@"NSArray",R,N,V_columnAggregates
T@"TSULocale",R,N
TS,R,N,V_ownerIndex
T@"<TSCEFormulaReplacing>",R,N
TB,N,V_isRegisteredWithCalcEngine
T@"TSTGroupNode",R,N
T{TSUCellCoord=ISBB},R,N,V_indirectAggTypeChangeFormulaCoord
T{TSUCellCoord=ISBB},R,N,V_groupingColumnsFormulaCoord
T{TSUCellCoord=ISBB},R,N,V_groupingColumnHeadersFormulaCoord
T{TSUCellCoord=ISBB},R,N,V_allAggsInGroupRootFormulaCoord
T{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}},R,N
TB,N,V_needsRebuildOfAggFormulas
T@"TSKCustomFormatWrapper",R,&,N,V_customFormatForBlankGroup
T@"TSKCustomFormatWrapper",R,&,N,V_customFormatForErrorGroup
copyByPruningAgainstTable:behavior:usingBlock:
initWithCellUIDList:
addCellRegion:withColumnUIDs:rowUIDs:
cellUIDAtIndex:
_UIDLookupList
initWithGroupingColumnUID:columnUID:direction:
groupingColumnUID
columnUID
ruleWithGroupingColumnUID:columnUID:direction:
direction
setColumnUID:
setGroupingColumnUID:
ruleByChangingDirectionTo:
ruleByChangingSummaryColumnTo:
groupLevelInTable:
setDirection:
_groupingColumnUID
_columnUID
_direction
_definedGroupingColumnUID
_definedColumnUID
_definedDirection
Ti,N,V_direction
_clearTopStroke
_clearLeftStroke
_clearBottomStroke
_clearRightStroke
definedTopStroke
definedLeftStroke
definedBottomStroke
definedRightStroke
cellBorderForResettingAllStrokes
_topStroke
_topStrokeOrder
_rightStroke
_rightStrokeOrder
_bottomStroke
_bottomStrokeOrder
_leftStroke
_leftStrokeOrder
_definedTopStroke
_definedTopStrokeOrder
_definedRightStroke
_definedRightStrokeOrder
_definedBottomStroke
_definedBottomStrokeOrder
_definedLeftStroke
_definedLeftStrokeOrder
TB,R,N,V_definedTopStroke
TB,R,N,V_definedLeftStroke
TB,R,N,V_definedBottomStroke
TB,R,N,V_definedRightStroke
T@"TSDStroke",R,N,V_topStroke
Ti,R,N,V_topStrokeOrder
T@"TSDStroke",R,N,V_leftStroke
Ti,R,N,V_leftStrokeOrder
T@"TSDStroke",R,N,V_bottomStroke
Ti,R,N,V_bottomStrokeOrder
T@"TSDStroke",R,N,V_rightStroke
Ti,R,N,V_rightStrokeOrder
strokeLayerCount
strokeLayerAtIndex:
replaceStrokeLayerAtIndex:withObject:
p_strokeLayerEnumeration
isPortalStroke
portalledStrokeLayer
enumerateStrokesAndCapsInRange:usingBlock:
isEqualToStroke:
lookupStrokeAtIndex:
enumerateStrokesFrom:to:usingBlock:
enumerateStrokesAndCapsFrom:to:usingBlock:
defaultStrokeLayer
clearedStrokeLayer
setClearedStrokeLayer:
dynamicStrokeLayer
setDynamicStrokeLayer:
spillStrokeLayer
setSpillStrokeLayer:
hasStrokeInRange:
setDefaultStrokeLayer:
customStrokeLayer
setCustomStrokeLayer:
strokeLayerStack
replacementWithDefaults
isEligibleForDefaultsOnlyReplacement
verifyWithExpectedDefaultStrokeLayer:
insertClearedStrokeAtRange:
insertDynamicStroke:strokeOrder:atRange:
insertSpillStroke:atRange:
hasSpillStrokeInRange:
replaceCustomStrokeLayerWith:
invalidateCustomStrokes
invalidateClearedStrokesInRange:
invalidateDynamicStrokes
invalidateDynamicStrokesInRange:
invalidateSpillStrokes
isDefaultsOnly
_isDefaultsOnly
_defaultStrokeLayer
_customStrokeLayer
_clearedStrokeLayer
_dynamicStrokeLayer
_spillStrokeLayer
T@"TSTStrokeLayer",&,N,V_defaultStrokeLayer
T@"TSTStrokeLayer",&,N,V_customStrokeLayer
T@"TSTMutableStrokeLayer",&,N,V_clearedStrokeLayer
T@"TSTMutableStrokeLayer",&,N,V_dynamicStrokeLayer
T@"TSTMutableStrokeLayer",&,N,V_spillStrokeLayer
TB,R,N,V_isDefaultsOnly
startingStrokeOrder
defaultMinorStrokeLayer
defaultMajorStrokeLayer
customUnorderedStrokeLayer
customOrderedStrokeLayer
clearedMinorStrokeLayer
clearedMajorStrokeLayer
dynamicUnorderedStrokeLayer
dynamicOrderedStrokeLayer
spillMinorStrokeLayer
spillMajorStrokeLayer
setSpillMinorStrokeLayer:
setSpillMajorStrokeLayer:
initWithCopyOfMajorStrokes:andMinorStrokes:
mergeTopStrokes:withBottomStrokes:
mergeLeftStrokes:withRightStrokes:
initWithReferenceOfMajorStrokes:andMinorStrokes:
maxWidthOfStrokesInRange:cachedMax:
p_widthOfStrokesAtIndex:
setDefaultMinorStrokeLayer:
setDefaultMajorStrokeLayer:
setCustomUnorderedStrokeLayer:
setCustomOrderedStrokeLayer:
setClearedMinorStrokeLayer:
setClearedMajorStrokeLayer:
setDynamicUnorderedStrokeLayer:
setDynamicOrderedStrokeLayer:
_defaultMinorStrokeLayer
_defaultMajorStrokeLayer
_customUnorderedStrokeLayer
_customOrderedStrokeLayer
_clearedMinorStrokeLayer
_clearedMajorStrokeLayer
_dynamicUnorderedStrokeLayer
_dynamicOrderedStrokeLayer
_spillMinorStrokeLayer
_spillMajorStrokeLayer
T@"TSTStrokeLayer",&,N,V_defaultMinorStrokeLayer
T@"TSTStrokeLayer",&,N,V_defaultMajorStrokeLayer
T@"TSTStrokeLayer",&,N,V_customUnorderedStrokeLayer
T@"TSTStrokeOrderedLayer",&,N,V_customOrderedStrokeLayer
T@"TSTMutableStrokeLayer",&,N,V_clearedMinorStrokeLayer
T@"TSTMutableStrokeLayer",&,N,V_clearedMajorStrokeLayer
T@"TSTMutableStrokeLayer",&,N,V_dynamicUnorderedStrokeLayer
T@"TSTStrokeOrderedLayer",&,N,V_dynamicOrderedStrokeLayer
T@"TSTMutableStrokeLayer",&,N,V_spillMinorStrokeLayer
T@"TSTMutableStrokeLayer",&,N,V_spillMajorStrokeLayer
p_resolveStrokes
customStrokeProvider
defaultStrokeProvider
p_strokeExportCacheForGridRow:
strokeAtIndex:
p_strokeExportCacheForGridColumn:
mergedStrokes
p_strokeExportCacheForColumnBefore:columnAfter:
p_strokeExportCacheForRowAbove:rowBelow:
initWithMergedStack:
strokesForCellID:top:left:bottom:right:
rowStrokeExportCache
setRowStrokeExportCache:
columnStrokeExportCache
setColumnStrokeExportCache:
_defaultStrokeProvider
_customStrokeProvider
_rowStrokeExportCache
_columnStrokeExportCache
T@"<TSTTableStrokeProviding>",R,N,V_defaultStrokeProvider
T@"<TSTCustomStrokeProviding>",R,N,V_customStrokeProvider
T@"TSUIntegerKeyDictionary",&,N,V_rowStrokeExportCache
T@"TSUIntegerKeyDictionary",&,N,V_columnStrokeExportCache
clearRowIndexesCache
uniqueValueToRowUids
setUniqueValueToRowUids:
uniqueValueToRowIndexes
setUniqueValueToRowIndexes:
_uniqueValueToRowUids
_uniqueValueToRowIndexes
T@"NSMutableDictionary",&,N,V_uniqueValueToRowUids
T@"NSMutableDictionary",&,N,V_uniqueValueToRowIndexes
firstIndexNotInIndexSet:beginRange:pastEndRange:
lastIndexNotInIndexSet:beginRange:pastEndRange:
forRows
p_registerAllFormulas
tableTranslator
areMapsStale
viewRowIndexForBaseRowIndex:
viewIndexForBaseIndex:
userHiddenChangedPrecedentForTableUID:
hideAtUid:forIndex:forViewIndex:forAction:
addHiddenIndex:viewIndex:forAction:
hiddenStateChangedForBaseIndex:viewIndex:forAction:
showAtUid:forIndex:forViewIndex:forAction:
removeHiddenIndex:viewIndex:forAction:
p_viewOnlyHiddenIndexes
collapsedIndexes
p_hiddenIndexes
p_baseHiddenIndexes
mutableBaseRowIndexesForUIDs:
mutableBaseColumnIndexesForUIDs:
verifyIndexesAreConsistent
clearInvalidIndexes
viewRowIndexesForBaseRowIndexes:
viewColumnIndexesForBaseColumnIndexes:
showAtUid:forAction:
userHiddenIndexes
filteredIndexes
firstIndexNotInIndexSet:orIndexSet:beginRange:pastEndRange:
lastIndexNotInIndexSet:orIndexSet:beginRange:pastEndRange:
findLastVisibleIndexInBegin:afterEnd:
findFirstVisibleIndexInBegin:afterEnd:
clearAllCachedRowIndexes
dirtyFilterStateForRowRange:
swapIndexesWithIndexSet:index:withIndex:
ruleAtAbsoluteIndex:
predicate
remapOwnerUIDsWithMap:calcEngine:error:
needsThreshold
predicateType
uniqueDistinctPrecedentForTableUID:
baseColumnIndexForFilterRuleInTableModel:
precedentsForFilterSet:calcEngine:hostOwnerUID:hostCellID:
p_registerAllFormulasReturningCoords:
removeUUID:
previousGroupNodeUids
intersectsSet:
updatedGroupNodeUids
previousGroupNodeUidForUpdatedGroupNodeUid:
removeUuidsFromSetReturningRemoved:
addUuidsFromSetReturningAdded:
numberParam1
initWithDate:locale:
p_calculateUniqueThresholdWithCalcEngine:formulaCoord:
shouldAbortRecalculation
rewriteNumberToDurationForSageImport:durationUnitLargest:
p_calculateAverageThresholdWithCalcEngine:formulaCoord:
qualifier1
p_calculateTopOrBottomThresholdWithCalcEngine:formulaCoord:isTop:keyScale:
p_calculateUniqueDistinctIndexWithCalcEngine:formulaCoord:tableModel:rule:
p_createThresholdCellValue:locale:
rowIsShown:withHiddenStateExtent:withCalcEngine:
downgradeFilterSetForBackwardCompatWithLocale:
copyByRewritingFilterRulesToUidFormWithContext:withTableInfo:
rewriteFormulaWithBlock:
p_removeAllFormulaFromCalculationEngine
allFormulaCoordsInOwner:
removeFormulasAt:
markRangeRefAsDirty:
enumerateFiltersInTable:usingBlock:
cellReferenceForIndex:
uniqueValuesForColumnUID:
baseIndexForViewIndex:
removeUid:
anyUserHidden
_hiddenStateExtentUid
_hiddenByUid
_forRows
_collapsedGroupUids
_baseUserHiddenIndexes
_baseFilteredIndexes
_viewOnlyFilteredIndexes
_pivotHiddenIndexes
_viewIndexesMutex
_userHiddenIndexes
_filteredIndexes
_combinedHiddenIndexes
_collapsedIndexes
_uniqueValuesByColumnUid
_columnUidsWithUniqueIndexes
_rewrittenFilterSet
_pendingComputedLock
_pendingColumnsOrRowsShown
_pendingColumnsOrRowsHidden
_pendingViewColumnsOrRowsShown
_pendingViewColumnsOrRowsHidden
_cellRangesToInvalidate
_invalidateViewGeometry
_invalidateCollapsed
T{TSKUIDStruct=QQ},N,V_hiddenStateExtentUid
TB,R,N,V_forRows
T@"TSCEUIDSet",R,N,V_collapsedGroupUids
T@"NSArray",R,N,V_thresholdCellValues
getUUIDBytes:
popupChoiceIndex
mergeRangeCache
loadMergeCache
mergeIndexesForRange:
p_updateOriginMapWithSourceCellCoord:destCellCoord:
initWithType:uidRanges:
addFormula:
addFormulaIndex:
modelCellRanges
p_moveCellFromCellCoord:toCellCoord:
hasMergeFormulas
mergeActionForBaseCellRegion:nonOriginPartialsOnly:
mergeIndexesForBaseCellRegion:
containsModelCellCoord:
mergeFormulas
dirtyCellsForMergingRange:forTable:headerRowRange:headerColumnRange:
reloadMergeCacheForIndexes:
p_dirtyCellsForMerge:
removeBaseMergeRange:
p_shrinkReturningInverseForAction:
p_growReturningInverseForAction:
formulaCoordsReferringToRange:fromOwner:skipSpanning:
p_shrinkMergesAtIndexes:intersectedByBaseRegion:
uidRanges
shrinkReturningInverseForBaseCellRegion:
regionByAddingModelCellRect:
regionBySubtractingModelCellRect:
mergeFormulaIndexes
boundingModelCellRect
regionFromModelCellRect:
regionBySubtractingModelCellRegion:
p_growRangeFrom:toDesired:
intersectsModelCellRect:
allValidMergesForMergeList:
enumerateMergesIntersectingBaseCellRegion:usingBlock:
beginSuppressingWillModifyCalls
initForRemoveRowsOrColumnsFromTable:rowColumnUuids:areRows:
setCanBeNested:
copyByRewritingWithSpec:calcEngine:containingCell:
endSuppressingWillModifyCalls
initForInsertingRowsOrColumnsIntoTable:rowColumnUuids:areRows:
didModifyTable:
allMergesAsString
resetMergeOriginMap
mergeActionForBaseCellRegion:
removeReturningInverseForBaseCellRegion:
find:
p_enumerateMergesUsingBlock:
mergeRangesAndCrumbsIntersectingBaseCellRect:
hasMergeRangesIntersectingBaseCellRect:
hasMergeRangesIntersectingBaseCellRegion:
mergeRangesPartiallyIntersectBaseCellRect:
mergeRangesPartiallyIntersectBaseCellRegion:
rewroteFormula:atCoordinate:withRewriteSpec:isUndo:
setFormulaStore:
mergeOriginsMap
reverseOriginsMap
mergeCacheLoaded
setMergeCacheLoaded:
setMergeRangeCache:
setMergeChangeDistributor:
_mergeOriginsMap
_reverseOriginsMap
_mergeCacheLoaded
_mergeRangeCache
_mergeChangeDistributor
T@"TSCellRangeCache",&,N,V_mergeRangeCache
TB,N,V_mergeCacheLoaded
T@"TSTTableModel",R,W,N,V_tableModel
T@"TSTFormulaStore",&,N,V_formulaStore
T@"TSTMergeChangeDistributor",&,N,V_mergeChangeDistributor
Tr^v,R,N,V_mergeOriginsMap
Tr^v,R,N,V_reverseOriginsMap
interactionTypeIsControl:
setInteractionTypeFromTheFuture:
interactionTypeFromTheFuture
isShimControlFormatType:
interactionTypeForShimControlFormatType:
shimControlFormatTypeForInteractionType:
displayNameForInteractionType:
propertiesMatchingThoseInMap:
_interactionTypeFromTheFuture
TI,N,V_interactionTypeFromTheFuture
registerWithCalcEngine:reregister:
referencesForCalcEngine:referenceTrackerUID:
foreachSpanningRangeRef:
allTrackedReferences
isEqualToTrackedReference:
beginTrackingReference:calcEngine:
endTrackingReference:calcEngine:
initWithSpanningRangeRef:
beginTrackingReference:
endTrackingReference:
baseIndex
p_referenceForColumnIndex:
beginTrackingReferenceWithSpanningRef:
p_columnForTrackedReference:
p_hasRuleReferenceForTrackedReference:
_trackedRefsStore
_isRegisteredWithCalculationEngine
initWithSourceCellRange:
initWithSourceCellRange:targetCellRange:
targetCellRange
sourceCellRange
autofillSelectionWithSourceCellRange:
autofillSelectionWithSourceCellRange:targetCellRange:
isValidForCellSelection:inTable:
isValidForRowVisibilityChangeInRegion:table:
setSourceCellRange:
setTargetCellRange:
_sourceCellRange
_targetCellRange
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_sourceCellRange
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_targetCellRange
addChangeDescriptorWithType:andCellRange:
fixedColumnWidthStack
styleProviderStack
setStyleProviderStack:
addPointer:
setStyleProvidingSource:
modifySafelyUsingBlock:
removePointerAtIndex:
setFixedColumnWidthStack:
initWithName:
widthHeightCacheFromBundle:withNumberOfRows:andNumberOfColumns:
initWithLimit:
tableRowsBehaviorForTable:andEnvironment:
updateCellRange
addChangeDescriptorWithType:andCellRange:andStrokeRange:
validateStrokesArrays:
p_validateStrokesForRegion:
verifyStrokes
hiddenRowsColumnsCache
p_validateStrokeWidthCachesForRegion:invalidateStrokeDefaults:
setMaximumSize:
setCacheHintID:
setPartitionPosition:
widthHeightCache
resetModelCache
resetModelCacheRange:
initWithStylesheet:paragraphStyle:listStyle:columnStyle:alignmentForNaturalAlignment:naturalDirection:
typesettingLocale
shouldHyphenate
initWithPadding:verticalAlignment:locale:shouldHyphenate:
setTableNameTextEngineDelegate:
tableNameTextEngineDelegate
setDelegate:
tableNameTextSizeForTableName:maxWidth:
tableNameTextEngine
measureText:withMaxWidth:
paragraphStyle
calculatedTableNameHeight
tableNameHeightCache
calculatedTableNameHeightIncludingDynamicResize:
isDynamicallyResizingTableName
dynamicTableNameResize
numberOfVisibleRowsInCellRange:
tableStyleAreaForCategoryLevel:isLabel:
fixedWidthProvider
fixedColumnWidth:
isDynamicallyResizingForColumnRowAdd:rowColIndex:
hasWidthForColumn:
getColumnWidth:
getModelWidthForColumn:
setModelWidth:forColumn:
scaleIsValid
tableRowsBehavior
hasHeightForRow:
getRowHeight:
getFitHeight:andModelHeight:forRow:
setModelHeight:forRow:
clampRowHeightAccountingForMaximumPartitionSize:rowIndex:rowHeight:
getModelHeightForRow:
defaultPaddingForCellID:
newTextEngineForCell:atCellID:textStyle:
layoutText:context:kind:minSize:maxSize:anchor:flags:
fontHeightOfParagraphStyle:
typographicBounds
frameBounds
getFitHeightForRow:
resetFittingRowHeightsStartingWith:upToRow:
invalidateBandedFill
p_strokesForGridColumn:isLeft:takeStrokeWriteLock:
p_strokesForGridRow:isTop:takeStrokeWriteLock:
adjustGridColumnForVisibility:isLeft:
adjustGridRowForVisibility:isTop:
p_setDynamicStroke:strokeOrder:forGridRow:isTop:beginColumn:endColumn:
p_setDynamicStroke:strokeOrder:forGridColumn:isLeft:beginRow:endRow:
mergedStrokesForGridRow:
mergedStrokesForGridColumn:
setClearedStrokeForGridColumn:beginRow:endRow:
setClearedStrokeForGridRow:beginColumn:endColumn:
contentWidthForCellRange:skipDynamicSwap:
contentHeightForCellRange:skipDynamicSwap:maximumPartitionSize:
p_contentWidthForCellRange:skipDynamicSwap:validationBundle:
regionByUnioningEveryRangeInRegionWithRange:
shuffleMapping
sourceIndexes
invalidateStrokeDefaults
invalidateStrokeSpills
isDynamicallyChangingRowCount
hiddenColumnIndices
hiddenRowIndices
p_invalidateClearedStrokesForCellRegion:
p_clearStrokesForMergesInCellRegion:
strokeLayerModifiedByInsertingSpaceAt:
strokeLayerModifiedByRemovingRangeAt:
strokesDefaultVendor
modelRowForLayoutRow:
isDynamicallySettingBandedFill
dynamicBandedFill
dynamicBandedFillSetting
numberOfVisibleRowsFromStartRowIndex:toEndRowIndex:
numberOfVisibleRowsFromHeader:
setModelCellID:
setCellPropsRowHeight:
setNeedWPColumn:
setCellWraps:
setPaddingInsets:
setMinSize:
setMaxSize:
setForDrawing:
setLayoutMergeRange:
setInDynamicLayout:
setCellContents:
setLayoutCacheFlags:
setPageNumber:
setPageCount:
measureWithLayoutState:
sizeOfText
p_setDefaultFontHeight:forTableStyleArea:
dynamicContentMustDrawOnMainThread
isMainThread
modelColumnForLayoutColumn:
layoutRowForModelRow:
layoutColumnForModelColumn:
mergeRange:forCellID:
isDynamicallyRevealingRowsCols:rowColIndex:
processHiddenRowsForExport
isRowUserHidden:
numberOfVisibleColumnsInCellRange:
anyRowsUserHiddenInCellRange:
nonUserHiddenRowAfterAndIncludingRow:
entireBodyRowsCellRange
dynamicLayoutParticipants
isDynamicallyChangingColumnCount
changeDescriptorWithType:cellRange:strokeRange:
processedByLayoutEngine
changeDescriptors
setProcessedByLayoutEngine:
validateBandedFill
validateDynamicResizeInfo
validateChangeDescriptorQueue
validateTableNameHeight
invalidateDefaultFontHeights
validateRowVisibility:
p_validateCellIDToWPColumnCacheForChangeDescriptors:
validateChangeDescriptors:tableInfo:numberOfRows:numberOfColumns:
validateLayoutEngineForChangeDescriptors:
validateDefaultFontHeights
validateStrokesForChangeDescriptors:
validateFittingRegionForChangeDescriptors:
validateRowsNeedingFittingInfo:validationRegion:layoutEngine:
validateFittingInfoForValidationRegion:rowsNeedingFittingInfo:
waitForLayoutToComplete:
finalizeLayoutPassWithRowsNeedingFittingInfo:
willModifyIfNeeded:
setFitHeight:forCellID:
enumerateMergeRangesUsingBlock:
regionFromColumnIndices:
postNotificationName:object:
overrideCGFloatValueForProperty:
overrideValueForProperty:
edgeInsetsFromPadding:
queueCellForValidation:cell:textStyle:modelMergeRange:wrap:verticalAlignment:padding:prop:layoutCacheFlags:validationBundle:layoutTask:
p_addFittingInfoForEmptyMergeRange:
p_validateFittingInfoForEmptyCellsBetween:andCellID:inRange:widthHeightCollection:
validateFittingInfoForCell:cellID:mergeRange:setFitting:layoutTask:widthHeightCollection:validationBundle:
processLayoutTask:validationBundle:
p_validateFittingInfoWithCellRangeWorker:widthHeightCollection:containsMerges:validationBundle:
p_validateFittingInfoForEmptyCellsOnSingleRowBetween:andEndCellID:widthHeightCollection:
addRange:height:paddingInsets:isCheckbox:
mergeRangesProppingRowHeightsInRegion:
regionFillingRowsFromRegion:
p_containsGradientThatFillsContainerInStyle:
fillType
p_validationFittingCellRegionForColumnsDeleted:cellRegionGatherer:
p_validationFittingCellRegionForColumnsInserted:cellRegionGatherer:
p_validationFittingCellRegionForColumnsVisibility:cellRegionGatherer:
p_validationFittingCellRegionForColumnsMovedFrom:toColumnIndex:cellRegionGatherer:
p_validationFittingCellRegionForRowsDeleted:cellRegionGatherer:
p_validationFittingCellRegionForRowsInserted:cellRegionGatherer:
p_validationFittingCellRegionForRowsMovedFrom:toRowIndex:cellRegionGatherer:
p_validationFittingCellRegionForRangeMergeUnmerge:cellRegionGatherer:
p_validationFittingCellRegionForStrokesChanged:cellRegionGatherer:
p_validationFittingForChangeDescriptorType:regionFromChangeDescriptor:cellRegionGatherer:
tsu_intersectionWithIndexSet:
p_validationBundleForRegionToValidate:
validateFittingInfoWithCellRange:validationBundle:
setShouldFastPathMeasureFitWidth:
setVerticalAlignment:
layoutCellIDForModelCellID:
hasAttachmentsThatChangeWithPageNumberOrPageCount
wpColumn
keyVal
columnToWidthMapFromCollectionArray:
unsignedIntValue
p_containsGradientFillThatFillsContainerInCell:cellContents:
layoutCacheFlags
cellContents
contentWidthForCellRange:validationBundle:
setMaxWidthForChildren:
addCellState:
numberOfCellStates
numCellsPerTask
modelCellID
minSize
cellWraps
needWPColumn
p_resolvedTextStyleForCell:atCellID:textStyle:outNaturalAlignment:outCellDirection:
fontInfoForTextStyle:withString:
newTextEngineForCell:atCellID:textStyle:naturalAlignment:cellDirection:
setTextColorOverride:
paddingInsets
verticalAlignment
naturalAlignment
initWithString:width:height:paragraphStyle:cellWraps:valueType:paddingInsets:verticalAlignment:writingDirection:naturalAlignment:styleProvidingSource:
setKeyVal:
maxWidthForChildren
layoutTextStorage:minSize:maxSize:anchor:pageNumber:pageCount:flags:
setWpColumn:
setSizeOfText:
columnLayoutWidthForBodyWidth:insets:
shouldFastPathMeasureFitWidth
heightForString:width:outFitWidth:
enumerateCellStatesUsingBlock:
writeToLayoutEngineCaches:
setFittingHeightsFromCollectionArray:
widthForString:
boundingBottomRightCellID
unwrappedFittingWidthsForColumnInCellRegionWorker:
redColor
resolvedTextStyleWithPropertyMap:
formattedDataParagraphStylePropertyMapForCell:atCellID:
defaultColumnStyle
isDynamicallyChangingFontColorOfCellID:
dynamicFontColor
setAlignment:
tabs
insertTab:
currentThread
setProcessHiddenRowsForExport:
pushToStyleProviderStack:
popFromStyleProviderStack
pushToFixedColumnWidthStack:
popFromFixedColumnWidthStack
tableStrokeProvider
hintIsValid:
resetModelHeightWidthCache
clearModelHeightWidthCacheForCellRange:
categoryColumnsCellRange
entireActualHeaderColumnsCellRange
entireBodyCellRange
heightOfRowIgnoringFitting:withStrokeHeights:
fittingHeightOfRow:
setStrokeSpillForRightGridColumn:leftGridColumn:inRow:
hasStrokeSpillForLeftGridColumn:inRow:
setDynamicCellBorder:forCellID:
shouldRowUseBandedFill:
beginDynamicMode:
endDynamicMode:
modelCellRegionForLayoutCellRegion:
layoutCellRegionForModelCellRegion:
isDynamicallyResizingForColumnRowAdd:
isDynamicallyResizingCellIDForColumnRowAdd:
expandCellRangeToVisibleNeighbors:
firstEmptyBodyRow
containsAnyContentInRange:
dynamicLayout
isDynamicallyRevealingRowsCols
updateDynamicTableNameSize:
isDynamicallyChangingSelection
updateDynamicFontColor:andRange:
dynamicCellFillDelegate
isDynamicallyChangingCellFill
captureDynamicResizeInfo
updateDynamicResizeInfo:
invalidateDynamicResizeInfo
isGrouped
fittingWidthsMapForColumns:includeStrokes:
setMaxConcurrentTasks:
unwrappedFittingWidthsForColumnsInCellRegion:
clearRenderingCaches
isCategoryLastSummaryRowCollapsed
isLastVisibleBodyRowCategorySummaryOrLabelRow
readSafelyUsingBlock:
setStrokesDefaultVendor:
setCellIDToWPColumnCache:
setDupContentCache:
tempWPColumnCache
setTempWPColumnCache:
setWidthHeightCache:
setHiddenRowsColumnsCache:
maxConcurrentTasks
setNumCellsPerTask:
setBandedFillObject:
setTableEnvironment:
setTableRowsBehavior:
setInDynamicLayoutMode:
dynamicAddOrRemoveColumnElementSize
setDynamicAddOrRemoveColumnElementSize:
dynamicAddOrRemoveRowElementSize
setDynamicAddOrRemoveRowElementSize:
setDynamicBandedFill:
setDynamicBandedFillSetting:
dynamicColumnAdjustment
setDynamicColumnAdjustment:
setDynamicColumnTabSize:
setDynamicFontColor:
dynamicFontColorCellRange
setDynamicFontColorCellRange:
setDynamicRepResize:
dynamicRepResizeSessionInProgress
setDynamicRepResizeSessionInProgress:
setDynamicInfoGeometry:
dynamicWidthResize
setDynamicWidthResize:
dynamicHeightResize
setDynamicHeightResize:
dynamicResizingColumns
setDynamicResizingColumns:
dynamicResizingColumnRange
setDynamicResizingColumnRange:
dynamicResizingColumnAdjustment
setDynamicResizingColumnAdjustment:
dynamicResizingRows
setDynamicResizingRows:
dynamicResizingRowRange
setDynamicResizingRowRange:
dynamicResizingRowAdjustment
setDynamicResizingRowAdjustment:
dynamicRowAdjustment
setDynamicRowAdjustment:
setDynamicRowTabSize:
dynamicSavedLayoutGeometry
setDynamicSavedLayoutGeometry:
dynamicSelection
setDynamicSelection:
setDynamicTableNameResize:
dynamicSuppressingConditionalStylesCellID
setDynamicSuppressingConditionalStylesCellID:
setChangeDescriptors:
mergeRangesForLayoutPass
setMergeRangesForLayoutPass:
fontInfoCache
setFontInfoCache:
layoutValidateQueue
setLayoutValidateQueue:
layoutMeasureQueue
setLayoutMeasureQueue:
layoutConcurrentQueue
setLayoutConcurrentQueue:
setTopRowStrokes:
setBottomRowStrokes:
setLeftColumnStrokes:
setRightColumnStrokes:
spillStrokeColumns
setSpillStrokeColumns:
cellRegionForClearedMergeStrokes
setCellRegionForClearedMergeStrokes:
columnToStrokeWidthCache
setColumnToStrokeWidthCache:
rowToStrokeHeightCache
setRowToStrokeHeightCache:
paraStyleToHeightCache
setParaStyleToHeightCache:
tableNameBounds
setTableNameBounds:
cachedTableNameHeight
setCachedTableNameHeight:
tableNameHeightValid
setTableNameHeightValid:
cachedNumberOfColumns
setCachedNumberOfColumns:
cachedNumberOfRows
setCachedNumberOfRows:
cachedNumberOfHeaderColumns
setCachedNumberOfHeaderColumns:
cachedNumberOfHeaderRows
setCachedNumberOfHeaderRows:
cachedNumberOfGrandTotalColumns
setCachedNumberOfGrandTotalColumns:
cachedNumberOfFooterRows
setCachedNumberOfFooterRows:
cachedNumberOfFooterOrGrandTotalRows
setCachedNumberOfFooterOrGrandTotalRows:
cachedMaxNumberOfColumns
setCachedMaxNumberOfColumns:
cachedMaxNumberOfRows
setCachedMaxNumberOfRows:
bandedFillIsValid
setBandedFillIsValid:
setUseBandedFill:
tableDefaultFontHeightsAreValid
setTableDefaultFontHeightsAreValid:
contentReadingThreads
setContentReadingThreads:
setEmptyFilteredTable:
setIsGrouped:
setDynamicLayoutParticipants:
setDynamicLayout:
setDynamicContentDelegate:
dynamicHidingContent
setDynamicHidingContent:
dynamicHidingRowsCols
setDynamicHidingRowsCols:
dynamicHidingRowsColsDirection
setDynamicHidingRowsColsDirection:
dynamicHidingText
setDynamicHidingText:
dynamicRemovingText
setDynamicRemovingText:
dynamicRepressFrozenHeaderRows
setDynamicRepressFrozenHeaderRows:
dynamicRepressFrozenHeaderColumns
setDynamicRepressFrozenHeaderColumns:
dynamicResizeInfo
setDynamicResizeInfo:
dynamicRevealingRowsCols
setDynamicRevealingRowsCols:
dynamicRevealingRowsColsDirection
setDynamicRevealingRowsColsDirection:
setDynamicCellFillDelegate:
_tableDefaultFontHeightForArea
_layoutInFlight
_strokesRWLock
_contentRWLock
_dynamicModeUnfairLock
_inDynamicLayoutMode
_dynamicBandedFill
_dynamicBandedFillSetting
_dynamicRepResize
_dynamicRepResizeSessionInProgress
_dynamicResizingColumns
_dynamicResizingRows
_processHiddenRowsForExport
_tableNameHeightValid
_bandedFillIsValid
_useBandedFill
_tableDefaultFontHeightsAreValid
_emptyFilteredTable
_isGrouped
_dynamicRepressFrozenHeaderRows
_dynamicRepressFrozenHeaderColumns
_maxConcurrentTasks
_numCellsPerTask
_tableEnvironment
_tableRowsBehavior
_dynamicColumnAdjustment
_dynamicRowAdjustment
_cachedNumberOfColumns
_cachedNumberOfRows
_cachedNumberOfHeaderColumns
_cachedNumberOfHeaderRows
_cachedNumberOfGrandTotalColumns
_cachedNumberOfFooterRows
_cachedNumberOfFooterOrGrandTotalRows
_changeNotifier
_strokesDefaultVendor
_cellIDToWPColumnCache
_dupContentCache
_tempWPColumnCache
_widthHeightCache
_hiddenRowsColumnsCache
_bandedFillObject
_dynamicAddOrRemoveColumnElementSize
_dynamicAddOrRemoveRowElementSize
_dynamicColumnTabSize
_dynamicFontColor
_dynamicInfoGeometry
_dynamicWidthResize
_dynamicHeightResize
_dynamicResizingColumnAdjustment
_dynamicResizingRowAdjustment
_dynamicRowTabSize
_dynamicSavedLayoutGeometry
_dynamicSelection
_dynamicTableNameResize
_dynamicSuppressingConditionalStylesCellID
_dynamicFooterHeight
_changeDescriptors
_mergeRangesForLayoutPass
_styleProvidingSource
_fontInfoCache
_layoutValidateQueue
_layoutMeasureQueue
_layoutConcurrentQueue
_spillStrokeColumns
_cellRegionForClearedMergeStrokes
_columnToStrokeWidthCache
_rowToStrokeHeightCache
_paraStyleToHeightCache
_cachedTableNameHeight
_tableNameHeightCache
_cachedMaxNumberOfColumns
_cachedMaxNumberOfRows
_contentReadingThreads
_dynamicLayoutParticipants
_dynamicLayout
_dynamicContentDelegate
_dynamicHidingRowsColsDirection
_dynamicResizeInfo
_dynamicRevealingRowsColsDirection
_dynamicCellFillDelegate
_defaultColumnStyle
_tableNameTextEngineDelegate
_styleProviderStack
_fixedColumnWidthStack
_dynamicFontColorCellRange
_dynamicResizingColumnRange
_dynamicResizingRowRange
_dynamicHidingContent
_dynamicHidingRowsCols
_dynamicHidingText
_dynamicRemovingText
_dynamicRevealingRowsCols
_tableNameBounds
T@"TSTWPColumnCache",&,N,V_cellIDToWPColumnCache
T@"TSTDupContentCache",&,N,V_dupContentCache
T@"TSTWPColumnCache",&,N,V_tempWPColumnCache
T@"TSTWidthHeightCache",&,N,V_widthHeightCache
T@"TSTHiddenRowsColumnsCache",&,N,V_hiddenRowsColumnsCache
T@"TSTFontInfoCache",&,N,V_fontInfoCache
T@"TSUWidthLimitedQueue",&,N,V_layoutValidateQueue
T@"TSUWidthLimitedQueue",&,N,V_layoutMeasureQueue
T@"NSObject<OS_dispatch_queue>",&,N,V_layoutConcurrentQueue
T@"TSTStrokeDefaultVendor",&,N,V_strokesDefaultVendor
T@"NSPointerArray",&,N,V_topRowStrokes
T@"NSPointerArray",&,N,V_bottomRowStrokes
T@"NSPointerArray",&,N,V_leftColumnStrokes
T@"NSPointerArray",&,N,V_rightColumnStrokes
T@"TSTConcurrentMutableIndexSet",&,N,V_spillStrokeColumns
T@"TSTCellRegion",&,N,V_cellRegionForClearedMergeStrokes
T@"TSTStrokeWidthCache",&,N,V_columnToStrokeWidthCache
T@"TSTStrokeWidthCache",&,N,V_rowToStrokeHeightCache
T@"TSTRWRetainedPointerKeyDictionary",&,N,V_paraStyleToHeightCache
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_tableNameBounds
Td,N,V_cachedTableNameHeight
TB,N,V_tableNameHeightValid
T@"NSMutableDictionary",R,N,V_tableNameHeightCache
TI,N,V_cachedNumberOfColumns
TI,N,V_cachedNumberOfRows
TI,N,V_cachedNumberOfHeaderColumns
TI,N,V_cachedNumberOfHeaderRows
TI,N,V_cachedNumberOfGrandTotalColumns
TI,N,V_cachedNumberOfFooterRows
TI,N,V_cachedNumberOfFooterOrGrandTotalRows
TQ,N,V_cachedMaxNumberOfColumns
TQ,N,V_cachedMaxNumberOfRows
TB,N,V_bandedFillIsValid
TB,N,V_useBandedFill
T@"TSDFill",&,N,V_bandedFillObject
Ti,N,V_tableRowsBehavior
TB,N,V_tableDefaultFontHeightsAreValid
T@"NSMutableSet",&,N,V_contentReadingThreads
TB,N,V_emptyFilteredTable
T@"NSMutableArray",&,N,V_changeDescriptors
TB,N,V_isGrouped
inDynamicLayoutMode
TB,N,GisInDynamicLayoutMode,V_inDynamicLayoutMode
T@"NSCountedSet",&,N,V_dynamicLayoutParticipants
T@"TSTLayout",&,N,V_dynamicLayout
Td,N,V_dynamicAddOrRemoveColumnElementSize
Td,N,V_dynamicAddOrRemoveRowElementSize
TB,N,V_dynamicBandedFill
TB,N,V_dynamicBandedFillSetting
Ti,N,V_dynamicColumnAdjustment
Td,N,V_dynamicColumnTabSize
T@"<TSTLayoutDynamicContentProtocol>",&,N,V_dynamicContentDelegate
T@"TSUColor",&,N,V_dynamicFontColor
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_dynamicFontColorCellRange
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_dynamicHidingContent
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_dynamicHidingRowsCols
Tq,N,V_dynamicHidingRowsColsDirection
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_dynamicHidingText
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_dynamicRemovingText
T@"TSDInfoGeometry",&,N,V_dynamicInfoGeometry
TB,N,V_dynamicRepressFrozenHeaderRows
TB,N,V_dynamicRepressFrozenHeaderColumns
T@"TSTLayoutDynamicResizeInfo",&,N,V_dynamicResizeInfo
TB,N,V_dynamicResizingColumns
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_dynamicResizingColumnRange
Td,N,V_dynamicResizingColumnAdjustment
TB,N,V_dynamicResizingRows
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_dynamicResizingRowRange
Td,N,V_dynamicResizingRowAdjustment
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_dynamicRevealingRowsCols
Tq,N,V_dynamicRevealingRowsColsDirection
Ti,N,V_dynamicRowAdjustment
Td,N,V_dynamicRowTabSize
T@"TSTCellSelection",&,N,V_dynamicSelection
Td,N,V_dynamicTableNameResize
T{TSUCellCoord=ISBB},N,V_dynamicSuppressingConditionalStylesCellID
T@"<TSTLayoutDynamicCellFillProtocol>",&,N,V_dynamicCellFillDelegate
T@"TSWPColumnStyle",R,N,V_defaultColumnStyle
T@"TSTTextEngineDelegate",&,N,V_tableNameTextEngineDelegate
T@"NSPointerArray",&,N,V_styleProviderStack
T@"NSPointerArray",&,N,V_fixedColumnWidthStack
T@"TSKChangeNotifier",W,N,V_changeNotifier
TI,N,V_maxConcurrentTasks
TI,N,V_numCellsPerTask
Ti,N,V_tableEnvironment
TB,N,V_dynamicRepResize
TB,N,V_dynamicRepResizeSessionInProgress
Td,N,V_dynamicWidthResize
Td,N,V_dynamicHeightResize
T@"TSDLayoutGeometry",C,N,V_dynamicSavedLayoutGeometry
Td,R,N,V_dynamicFooterHeight
T@"TSTMergeRangeSortedSet",&,N,V_mergeRangesForLayoutPass
TB,N,V_processHiddenRowsForExport
T@"<TSWPStyleProviding>",R,N,V_styleProvidingSource
initWithRange:hintId:partitionPosition:maximumSize:effectiveSize:layout:validity:horizontal:
indexForSelection:
selectionAtIndex:
cellSelection
mostSpecificSelectionOfClass:
setPartitioningPass:
horizontal
archivedHintClass
overlapsWithSelectionPath:
copyForArchiving
firstChildHint
lastChildHint
isFirstHint
effectiveSize
T@"<TSDHint>",R,N
T#,R,N
partitioningPass
setEffectiveSize:
setHorizontal:
_horizontal
_partitionPosition
_cacheHintID
_partitioningPass
_layout
_effectiveSize
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_cellRange
T{TSUCellCoord=ISBB},N,V_cacheHintID
T@"NSNumber",&,N,V_partitioningPass
TI,N,V_partitionPosition
T{CGSize=dd},N,V_maximumSize
T{CGSize=dd},N,V_effectiveSize
T@"TSTLayout",W,N,V_layout
TB,N,V_horizontal
initWithContext:hint:
hint
setHint:
T@"<TSDHint>",&,N
mHint
T@"TSTLayoutHint",&,N,VmHint
propertySetByAddingProperties:
containsAnyPropertyInProperties:
repairOrReplaceErrantStyle:
propertyMapWithProperties:
setBoxedObject:forProperty:
enumeratePropertiesAndObjectsUsingBlock:
setInfoGeometry:
makeObjectsPerformSelector:
scaledLayout
validateScaledLayout
caption
calculateCellRangeForNextPartition:nextPartitionRange:additionalHeightForCaption:availableSizeRemaining:previousHint:
participatesInLastRowHeight
p_didFinishPartitioningHint:horizontally:
rootLayout
infoGeometry
measureCellRangeForNextPartitionOfSize:previousHint:horizontally:
partitioningPassForHint:withPreviousHint:
nextHintForSize:parentLayout:previousHint:horizontally:outFinished:
layoutForHint:parentLayout:
hintCacheKeyForHint:
shouldReuseLayout:forSize:parentLayout:hint:
invalidateTextLayout
p_flushCacheAfterPartitioningFinished:lastHint:horizontally:
partitioningPassForFirstPartitionSize:
hintCacheKeyForPartitioningPass:andHintID:
nextLayoutForSize:parentLayout:previousHint:horizontally:outFinished:
didHint:syncWithNextHint:horizontally:
hintForLayout:
setLayoutPartititionsRightToLeft:contentPartitionsRightToLeft:
totalPartitionFrame
inlineTableWidth
mTableInfo
mInfoGeometry
mTableIsLTR
mLayoutIsLTR
mFirstPartitionWidth
mScaleToFit
mScaledLayout
mHintMatricesByCanvas
mPartitioningPassCache
T@"TSTLayout",R,N
T@"TSTTableInfo",R,N,VmTableInfo
Td,R,N,VmFirstPartitionWidth
T{CGSize=dd},N,VmScaleToFit
T@"TSDInfoGeometry",C,N,VmInfoGeometry
getSpaceContainingCellID:
setSpace:
_space
_frozenHeaderColumnsSpace
_frozenHeaderRowsSpace
_frozenHeaderCornerSpace
_repeatHeaderColumnsSpace
_repeatHeaderRowsSpace
_repeatHeaderCornerSpace
T@"TSTLayoutSpace",&,N,V_space
T@"TSTLayoutSpace",&,N,V_frozenHeaderColumnsSpace
T@"TSTLayoutSpace",&,N,V_frozenHeaderRowsSpace
T@"TSTLayoutSpace",&,N,V_frozenHeaderCornerSpace
T@"TSTLayoutSpace",&,N,V_repeatHeaderColumnsSpace
T@"TSTLayoutSpace",&,N,V_repeatHeaderRowsSpace
T@"TSTLayoutSpace",&,N,V_repeatHeaderCornerSpace
byteSizeForArchiving
setKeyRange:
loadObjectFromArchive:listType:unarchiver:completion:
setKeys:
_estimatedByteSize
_keys
_keyRange
T@"NSMutableIndexSet",&,N,V_keys
Ti,R,N,V_listType
TQ,R,N,V_estimatedByteSize
T{_NSRange=QQ},N,V_keyRange
initWithTableInfo:tableModel:region:forcingRegion:clampingRect:flags:searchFlags:
enumerateConcurrentlyUsingChunkBeginBlock:perDispatchThreadBlock:concurrentBlock:finalBlock:
p_enumerateConcurrentlyUsingChunkBeginBlock:perDispatchThreadBlock:concurrentBlock:finalBlock:
flags
iterateCellsInRegion:flags:searchFlags:clampingRange:usingBlock:
initWithTableInfo:region:clampingViewRect:flags:searchFlags:
initWithTableInfo:region:forcingRegion:flags:searchFlags:
cellsPerSubRegion
setCellsPerSubRegion:
forcingRegion
setForcingRegion:
arrayOfChunkRocks
setArrayOfChunkRocks:
setFlags:
searchFlags
setSearchFlags:
clampingRect
setClampingRect:
_cellsPerSubRegion
_forcingRegion
_arrayOfChunkRocks
_flags
_searchFlags
_clampingRect
T@"TSTCellRegion",&,N,V_forcingRegion
T@"NSPointerArray",&,N,V_arrayOfChunkRocks
TQ,N,V_flags
TQ,N,V_searchFlags
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_clampingRect
TQ,N,V_cellsPerSubRegion
initWithFirst:second:third:fourth:
setThird:
fourth
setFourth:
_first
_second
_third
_fourth
T@,&,N,V_first
T@,&,N,V_second
T@,&,N,V_third
T@,&,N,V_fourth
stringForMergeType:
setUidRanges:
setMergeFormulas:
setMergeFormulaIndexes:
initWithType:uidRange:
mergeActionForGrowingRange:coveringRange:inTable:
copyByRemappingUids:rowMap:ownerMap:clearIfMissing:
cellUIDRangeFromMergeFormula:calcEngine:
mergeActionForRemovingRanges:inTable:
mergeActionForInsertingRange:inTable:
initWithType:
hasMultiRowMerge
shrinkAction
actionByExpandingWithAction:
_uidRanges
_mergeFormulas
_mergeFormulaIndexes
Ti,N,V_type
Tr^v,N,V_uidRanges
Tr^v,N,V_mergeFormulas
Tr^v,N,V_mergeFormulaIndexes
compress
p_compressUID:index:UIDtoIndexMap:UIDs:compressedIndexes:lastSameUIDIndex:
compressUIDIndexListFrom:withUIDCount:to:
pruneCellUIDListAgainstTable:behavior:usingBlock:
cellUIDListFromRange:
compressedRowUIDs
compressedColumnUIDs
compressedRowIndexes
compressedColumnIndexes
setCompressedColumnIndexes:
computeValidCount
addCellUIDRanges:
pruneCellUIDListAgainstTable:behavior:
queue
_rowIdList
_columnIdList
_rowUIDIndexList
_columnUIDIndexList
_uncompressedCellUIDs
_compressedSize
_queue
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
TQ,R,N,V_compressedSize
p_nextCellRefIdWithUIDIndexList:UIDs:index:remainDup:lastDiffPos:recentResults:
_nextCellUID_NoDispatch
setCellUIDList:
rowIndex
setRowIndex:
columnIndex
setColumnIndex:
rowRemainDup
setRowRemainDup:
columnRemainDup
setColumnRemainDup:
lastRowDiffPos
setLastRowDiffPos:
lastColumnDiffPos
setLastColumnDiffPos:
cellUID
setCellUID:
_recentRowResults
_recentColumnResults
_cellUIDList
_rowIndex
_columnIndex
_rowRemainDup
_columnRemainDup
_lastRowDiffPos
_lastColumnDiffPos
_cellUID
T@"TSTCellUIDList",&,N,V_cellUIDList
TQ,N,V_index
TQ,N,V_rowIndex
TQ,N,V_columnIndex
TQ,N,V_rowRemainDup
TQ,N,V_columnRemainDup
TQ,N,V_lastRowDiffPos
TQ,N,V_lastColumnDiffPos
T{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}},N,V_cellUID
setNotifyType:
rowUID
setRowUID:
_notifyType
_rowUID
Ti,N,V_notifyType
T@"TSTGroupNode",&,N,V_groupNode
T{TSKUIDStruct=QQ},N,V_rowUID
initWithStartingTileID:
_tileForLazyReference:
referenceForObject:
startingTileID
setStartingTileID:
_tiles
_references
_startingTileID
TQ,N,V_startingTileID
_mergedRects
Tr^v,R,N,V_mergedRects
initWithTableUID:beforeViewColumnRowUIDMap:beforeRewriteMap:
beforeRewriteMap
setBeforeRewriteMap:
beforeColumnRowUIDMap
setBeforeColumnRowUIDMap:
afterRewriteMap
setAfterRewriteMap:
_beforeRewriteMap
_beforeColumnRowUIDMap
_afterRewriteMap
T@"TSTHierarchicalCellDiffMap",&,N,V_beforeRewriteMap
T@"TSTColumnRowUIDMapper",&,N,V_beforeColumnRowUIDMap
T@"TSTHierarchicalCellDiffMap",&,N,V_afterRewriteMap
initWithTableModel:ownerUID:annotations:formulaStore:
addAnnotation:withFormulaObject:atIndex:
annotations
hasObjectForKey:
indexOfAnnotation:
removeAnnotation:
enumerateAnnotationsWithBlock:
_indexesForRange:startingOnly:
_enumerateAnnotationsAndFormulasWithIndexes:block:
_indexesContainedByRegion:
_annotationsForIndexes:
_indexesForRows:
_indexesIntersectingButNotContainingBaseCellRegion:
formulaCoordsReferringToRange:fromOwner:
containsModelCellRect:
_enumerateIndexesIntersectingRegion:block:
requiresDocumentReadVersion:writeVersion:featureIdentifier:
addAnnotation:withFormula:atIndex:
removeAllAnnotations
removeAnnotationAtIndex:
enumerateAnnotationsAndFormulasInRange:withBlock:
containsAnnotation:
annotationsStartingInRange:
_annotationsInRows:
_annotationsIntersectingButNotContainingBaseCellRegion:
setAnnotations:
_annotations
T@"TSCECalculationEngine",R,W,N,V_calculationEngine
T@"TSUSparseArray",&,N,V_annotations
initWithFlags:sortingAggregateRuleUid:
isNotEmpty
_sortingAggregateRuleUid
Tq,R,N,V_flags
T{TSKUIDStruct=QQ},R,N,V_sortingAggregateRuleUid
setPivotOptions:forUid:
prunedCopyWithUids:
_optionsForUidMap
p_resetToRows:andNumColumns:
p_setFittingHeightsFromCollectionWithLock:
numberWithUnsignedShort:
enumerateMappingFollowingSwapsUsingBlock:
willModifyIfPossible:
hasBeforeAfterCounts
p_deleteRowsStartingWith:upToRow:
enumerateRowRangesInReverseUsingBlock:
p_insertRows:atRow:
p_deleteColumnsStartingWith:upToColumn:
enumerateColumnRangesInReverseUsingBlock:
p_insertColumns:atColumn:
p_moveRowsUsingShuffleMapping:
applyMappingToIndexSet:
p_moveRowsFrom:toRow:
p_moveColumnsFrom:toColumn:
p_resetFittingHeightsForRange:
canModify
initWithNumRows:andNumColumns:
setFittingHeightsFromCollection:
needsToBeArchived
setNeedsToBeArchived:
_rowHeights
_columnModelWidths
_needsToBeArchived
TB,N,V_needsToBeArchived
initWithChangeDescriptorType:cellRegion:cellID:strokeRegion:referenceIdentifiers:shuffleMapping:annotations:
initWithChangeDescriptorType:cellRegion:cellID:strokeRegion:referenceIdentifiers:shuffleMapping:
setBeforeCountValue:
setAfterCountValue:
changeDescriptorWithType:cellID:cellRegion:strokeRegion:
changeDescriptorWithType:cellRegion:strokeRegion:beforeCount:afterCount:
changeDescriptorWithType:cellRegion:beforeCount:afterCount:
changeDescriptorWithType:
changeDescriptorWithType:cellID:cellRange:
changeDescriptorWithType:cellID:cellRange:strokeRange:
changeDescriptorWithType:cellID:strokeRange:
changeDescriptorWithType:strokeRange:
changeDescriptorWithType:referenceIdentifiers:
changeDescriptorWithType:shuffleMapping:
changeDescriptorWithAnnotationsRemovedForMerge:
enumerateChangeRecords:withType:block:
markAsProcessed
strokeRange
referenceIdentifiers
setReferenceIdentifiers:
setChangeDescriptor:
setCellRegion:
setStrokeRegion:
setShuffleMapping:
beforeCountValue
afterCountValue
_processedByLayoutEngine
_changeDescriptor
_referenceIdentifiers
_cellRegion
_strokeRegion
_shuffleMapping
_beforeCountValue
_afterCountValue
Ti,N,V_changeDescriptor
T@"TSTCellRegion",&,N,V_cellRegion
T@"TSTCellRegion",&,N,V_strokeRegion
T@"NSHashTable",&,N,V_referenceIdentifiers
T@"TSKShuffleMapping",&,N,V_shuffleMapping
T@"NSSet",&,N,V_annotations
TQ,N,V_beforeCountValue
TQ,N,V_afterCountValue
TB,N,V_processedByLayoutEngine
initWithTopInset:leftInset:bottomInset:rightInset:
forceWesternLineBreaking
T@"<TSWPStyleProviding>",R,W,N
mPadding
mVerticalAlignment
mMaxWidthForChildren
mLocale
mShouldHyphenate
mStyleProvidingSource
Td,N,VmMaxWidthForChildren
T@"<TSWPStyleProviding>",W,N,VmStyleProvidingSource
T@"TSULocale",R,N,VmLocale
TB,R,N,VmShouldHyphenate
ruleWithBaseIndex:direction:
isEqualToArray:
predicateWithBlock:
filteredArrayUsingPredicate:
sortOrderWithBaseColumn:direction:type:
baseColumnIndices
sortOrderByChangingTypeTo:
sortOrderByAddingRule:
sortOrderByRemovingRuleAtIndex:
sortOrderByReplacingRuleAtIndex:withRule:
sortOrderByReplacingRulesWithRules:
sortOrderByRemovingBaseColumnIndices:
containsAnyRulesInBaseColumns:
cachedIndexes
setCachedIndexes:
_cachedIndexes
T@"NSIndexSet",&,N,V_cachedIndexes
T@"NSArray",R,N,V_rules
Ti,R,N,V_type
cellStatesToLayout
layoutMergeRange
inDynamicLayout
cellPropsRowHeight
addEntriesFromDictionary:
initWithLayoutTask:
_cellStatesToLayout
T@"TSTLayoutEngine",R,W,N,V_layoutEngine
T@"NSMutableArray",R,N,V_cellStatesToLayout
reapAccumulatedCellRegionWithTable:
_rowUIDToColumnUIDSetMap
_sem
forDrawing
_cellPropsRowHeight
_cellWraps
_needWPColumn
_shouldFastPathMeasureFitWidth
_forDrawing
_inDynamicLayout
_verticalAlignment
_layoutCacheFlags
_modelCellID
_cellContents
_maxWidthForChildren
_keyVal
_wpColumn
_pageNumber
_pageCount
_layoutMergeRange
_minSize
_maxSize
_sizeOfText
_paddingInsets
T{TSUCellCoord=ISBB},N,V_modelCellID
T@"TSTCell",C,N,V_cell
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_layoutMergeRange
T@,&,N,V_cellContents
T{CGSize=dd},N,V_minSize
T{CGSize=dd},N,V_maxSize
Td,N,V_maxWidthForChildren
T{UIEdgeInsets=dddd},N,V_paddingInsets
Ti,N,V_verticalAlignment
TB,N,V_cellPropsRowHeight
TB,N,V_cellWraps
TB,N,V_needWPColumn
TB,N,V_shouldFastPathMeasureFitWidth
TB,N,V_forDrawing
TB,N,V_inDynamicLayout
Ti,N,V_layoutCacheFlags
T{CGSize=dd},N,V_sizeOfText
T@"TSTLayoutContentCachedKey",&,N,V_keyVal
T@"TSWPColumn",&,N,V_wpColumn
TQ,N,V_pageNumber
TQ,N,V_pageCount
setExpressionNode:
setCachedImage:
copyIntoContext:
requestRedraw
cachedImage
isActive
setActive:
isSelected
setSelected:
isHighlighted
setHighlighted:
neverShowsMenu
cachedImageScreenScale
setCachedImageScreenScale:
mExpressionNode
mActive
mSelected
mHighlighted
mNeverShowsMenu
mTextSize
mMenuRect
mCachedImage
mCachedImageScreenScale
mInInvalidate
T@"TSTExpressionNode",&,N,VmExpressionNode
active
TB,N,GisActive,VmActive
selected
TB,N,GisSelected,VmSelected
highlighted
TB,N,GisHighlighted,VmHighlighted
TB,N,GneverShowsMenu,VmNeverShowsMenu
T^{CGImage=},N
Td,N,VmCachedImageScreenScale
initWithContext:tableInfo:rowUids:columnUids:
_groupBy:
_numberOfLevels:
orderedUidsFromUids:forDimension:
orderForDimension:
_maxLevel:
initWithTableInfo:rowUids:columnUids:
copyWithContext:tableInfo:
targetGroupFromIndex:minSourceLevel:templateUID:forDimension:
minimumCategoryLevelInRange:forDimension:
insertUids:beforeUid:forDimension:
removeUids:forDimension:
groupUidsGivenUids:selectedLevels:forDimension:
uidMap
setUidMap:
isRowOrderTemporary
setIsRowOrderTemporary:
isColumnOrderTemporary
setIsColumnOrderTemporary:
_isRowOrderTemporary
_isColumnOrderTemporary
_uidMap
T@"TSTColumnRowUIDMap",&,V_uidMap
TB,V_isRowOrderTemporary
TB,V_isColumnOrderTemporary
T@"TSTGroupBy",R,&,V_groupBy
p_removeCanvasReference
p_createCanvasReference
initWithContext:completionText:
setCompletionText:
setPrefixRange:
setReferenceColor:
setEditingReferenceNode:
tokenText
makeTokenReflectChoice:
completionText
prefixRange
renderAsTokenType
editingReferenceNode
canvasReferenceProvider
setCanvasReferenceProvider:
_renderAsTokenType
_completionText
_editingReferenceNode
_referenceColor
_canvasReferenceProvider
_prefixRange
T@"NSString",&,N,V_completionText
T{_NSRange=QQ},N,V_prefixRange
Ti,R,N,V_renderAsTokenType
T@"TSTReferenceNode",&,N,V_editingReferenceNode
T@"TSUColor",&,N,V_referenceColor
T@"<TSTCanvasReferenceProvider>",W,N,V_canvasReferenceProvider
initWithStroke:range:order:andPosition:
tokenWithStroke:range:order:andPosition:
_position
TQ,N,V_position
contextForTransientObjects
p_mergeStrokeRunsAtPosition:
p_appendStroke:inRange:order:
p_setStroke:inRange:order:
p_invalidateRange:
p_insertSpaceAtRange:
p_removeRange:
p_flattenStrokeOrder
_strokeRuns
_columnOrRowIndex
TI,N,V_columnOrRowIndex
TI,D,N
isEqualToPropertyMap:
initWithStyle:andPropertyMap:
setStyle:
setPropertyMap:
_style
_propertyMap
T@"TSSStyle",&,N,V_style
T@"TSSPropertyMap",&,N,V_propertyMap
mapTableWithKeyOptions:valueOptions:
initWithStylesheet:
setStylesheet:
repairOrReplaceMap
setRepairOrReplaceMap:
variationMap
setVariationMap:
_repairOrReplaceLock
_variationLock
_stylesheet
_repairOrReplaceMap
_variationMap
T@"TSSStylesheet",&,N,V_stylesheet
T@"NSMapTable",&,N,V_repairOrReplaceMap
T@"NSMapTable",&,N,V_variationMap
addCellRange:
p_NumberOfColumnBuilds:
p_NumberOfRowBuilds:
p_NumberOfCellBuilds:
p_stageCountForProvider:withAnimationKind:
enabled
drawsBlackAndWhite
drawCellContent
newAnimationWithLayout:andDeliveryStyle:
newAnimationWithLayout:andCellRange:
deliveryStyleSupportedForExport:
setStage:andFinal:
cellRangeCount
clearCellRanges
drawTableName
drawTableBackground
drawCellBackground
clipStrokes
drawStrokes
isHidingContentOfCellID:
stageCount
stage
final
showsTableChrome
setShowsTableChrome:
showsOverlayLayers
setShowsOverlayLayers:
expandBackgroundFill
setExpandBackgroundFill:
setDrawsBlackAndWhite:
mKind
mCellRanges
mCellRangeCount
mStageCount
mStage
mFinal
mByColumn
mByRow
mByCell
mByContent
mByCellRange
mByMissingCellRange
mReverse
mShowsTableChrome
mShowsOverlayLayers
mExpandBackgroundFill
mDrawsBlackAndWhite
mLayout
T@"TSTLayout",W,N,VmLayout
TQ,R,VmStageCount
TQ,R,VmStage
TB,R,VmFinal
TB,VmShowsTableChrome
TB,VmShowsOverlayLayers
TB,VmExpandBackgroundFill
TB,VmDrawsBlackAndWhite
heightForString:textMeasurerBundle:width:outFitWidth:
widthForString:textMeasurerBundle:
initWithTextMeasurerBundle:
textMeasurerBundle
setTextMeasurerBundle:
_dupContentEntryToHeightCache
_dupContentEntryToWidthCache
_textMeasurerBundle
T@"TSWPTextMeasurerBundle",&,N,V_textMeasurerBundle
p_didReceiveMemoryWarning:
sharedApplication
addObserver:selector:name:object:
p_didEnterBackground:
canQuicklyMeasureParagraphStyle:
textMeasurerBundleForParagraphStyle:
fontInfoForTextStyle:
canQuicklyMeasureString:textMeasurerBundle:
cache
setCache:
propertyMapToTextStyleMap
setPropertyMapToTextStyleMap:
_resolvedTextStyleLock
_cache
_propertyMapToTextStyleMap
T@"NSMapTable",&,N,V_cache
T@"NSMapTable",&,N,V_propertyMapToTextStyleMap
wordFragmentsList
headerCoords
addHeaderWordFragments:atCoord:
_wordFragmentsList
_headerCoords
sortedArrayUsingSelector:
unpackEntryAfterUnarchive:
addChangedTile:
getNextPrecedentCoord:
setEntry:forPrecedentCoord:
initWithHeaderNameMgr:context:
lastFragment
setLastFragment:
firstFragment
setFirstFragment:
medianStringFromArray:
fragmentEntryForString:createIfMissing:
splitTile
_tileLock
_firstFragment
_lastFragment
_nameFragmentToEntry
_headerNameMgr
T@"NSString",&,N,V_firstFragment
T@"NSString",&,N,V_lastFragment
namePrefixIndex
foldName:
wordFragmentsFromString:savePreserveFlags:
includesPrefixes
initWithHeaderNameMgr:limitToTableUID:
loadSubsetWithExactMatches:prefixMatches:
limitedToTableUID
setIncludesPrefixes:
originalFullReferenceString
_hnm
_limitedToTableUID
_includesPrefixes
_stringsInHeaderCells
_prefixStringsInHeaderCells
_originalFullReferenceString
T{TSKUIDStruct=QQ},R,N,V_limitedToTableUID
TB,N,V_includesPrefixes
T@"NSString",R,N,V_originalFullReferenceString
setup
usedPrecedentCoord:
waitForQueueToDrain
isRecalculationRunning
willModifyWithOptions:
setForceSplitting:
splitRefPath:
trimmedStringWithPreserveFlag:
perTableEntryForTable:createIfMissing:
updateTrackedHeaders:checkForEmptyHeaders:
hasDisallowedHeaderIndexingForTableUID:
dirtySheetTableNameVolatileCells
fragmentEntryForNameFragmentPrecedent:
insertName:
findTileForString:findClosest:
findTileForString:findClosest:foundAtOffset:
handleFullTile:
p_updateWithWordFragments:atCellCoord:tableUID:
p_updateText:atCellCoord:tableUID:
anyHeaderNameChangedPrecedentForTableUID:
insertFoldedName:
removeName:
markCoordsDirty:inOwner:
updateText:atCellCoord:tableUID:
scalarValueFromCoord:permitAccessInsideMergeRegions:fetchRichTextAttributesIfPlainText:
compare:options:
refParser
p_willApplyCell:baseCellCoord:tableUID:
tileForEntry:
columnUIDForViewColumnIndex:
updateWithIndexingChunks:
sheetTableNamePrecedentForTableUID:
enumerateNamesMatchingPrefix:block:
isClosing
p_processWorkForTable:
initWithContext:calcEngine:
setNRM_formulaOwnerUID:
endTrackingNamesInTable:
updateTrackedHeadersForDocumentLocaleChange:
nameFragmentPrecedentsForReferenceString:
baseHeaderColumnsForCell:
baseHeaderRowsForCell:
numberOfTiles
headerNameMgrQueue
clearTextAtCellCoord:tableUID:
_weakCalcEngine
_headerNameMgrQueue
_nextPrecedentCoord
_allHeaderPerTablesPrecedent
_needsTileSplittingPrecedent
_nameFragmentTiles
_fragPrecedentToEntry
_fragPrecedentsUsedByCellRef
_perTableInfo
_headerPerTablePrecedentToTableUID
_namePrefixIndex
_tilesToConsiderSplitting
_isClosing
_nrm_ownerUID
_whitespaceToBreakAt
initWithContext:cellDiffArray:cellUIDList:uidBased:
initWithArray:context:
p_scanCellDiffArrayForCellBorderChanges:
p_scanCellDiffArrayForSuppressCustomFormatHandlingProperty:
addCellDiff:andCellUID:avoidCopy:
addCellDiff:andCellID:avoidCopy:
cellDiffArray
containsSuppressCustomFormatHandlingProperty
p_scanNSArrayOfDiffsForCellBorderChanges:
p_scanNSArrayOfDiffsForSuppressCustomFormatHandlingProperty:
addCellDiff:andCellUID:
enumerateElementsUsingBlock:
addCellDiff:andCellID:
enumerateCellIDElementsUsingBlock:
pruneCellDiffMapAgainstTable:behavior:usingBlock:
setCellDiffArray:
setContainsCellBorderChanges:
initWithContext:cellDiff:cellUIDList:
addCellDiffMap:
addCellDiffs:atCellUIDs:
appendCellDiffMap:
pruneCellDiffMapAgainstTable:behavior:
uuidBasedCellDiffMapByTableInfo:
cellDiffMapByIntersectingUIDs:inRows:
cellDiffMapByRemovingRows:
cellDiffMapByRemovingColumns:
setContainsSuppressCustomFormatHandlingProperty:
_containsSuppressCustomFormatHandlingProperty
_cellDiffArray
T@"TSTCellDiffArray",&,N,V_cellDiffArray
TB,N,V_containsCellBorderChanges
TB,N,V_containsSuppressCustomFormatHandlingProperty
initWithBaseIndex:direction:
ruleByChangingBaseIndexTo:
_baseIndex
T{TSUModelColumnOrRowIndex=I},R,N,V_baseIndex
Ti,R,N,V_direction
ruleWithViewIndex:direction:
viewIndex
_viewIndex
T{TSUViewColumnOrRowIndex=I},R,N,V_viewIndex
combinedCanonicalKeysString
initWithTSCEValues:locale:
_groupValues
_groupValueUid
_combinedCanonicalKeysString
p_iterateCellsAndTerminateWithIterator:usingBlock:
cellIteratorWithRegion:flags:searchFlags:clampingRange:
frameWithViewScale:contentFrame:checked:outCheckboxImage:outCheckboxSize:
imageForScale:checked:outDrawingScale:
CGImageForSize:inContext:orContentsScaleProvider:
frameWithViewScale:contentFrame:
renderCheckbox:viewScale:intoContext:rect:color:
_set
height
isEqualToLayoutContentCachedKey:
descriptionWithObject:class:
addField:value:
addField:format:
descriptionString
mString
mWidth
mHeight
mParagraphStyle
mCellWraps
mValueType
mPaddingInsets
mWritingDirection
mNaturalAlignment
T@"NSString",R,N,VmString
Td,R,N,VmWidth
Td,R,N,VmHeight
T@"TSWPParagraphStyle",R,N,VmParagraphStyle
TB,R,N,VmCellWraps
TC,R,N,VmValueType
T{UIEdgeInsets=dddd},R,N,VmPaddingInsets
Ti,R,N,VmVerticalAlignment
Ti,R,N,VmWritingDirection
Ti,R,N,VmNaturalAlignment
T@"<TSWPStyleProviding>",R,N,VmStyleProvidingSource
p_captureRowColumnInformation:columnRegion:rowRegion:
initWithLayoutEngine:columnRegion:rowRegion:
numberOfIntersectingRows
applyResizeHeightFactor:
applyResizeWidthFactor:
enumerateRowHeightsUsingBlock:
enumerateColumnWidthsUsingBlock:
getMinimumRowHeight:
getMinimumColumnWidth:
initWithLayoutEngine:columnRegion:
initWithLayoutEngine:rowRegion:
initWithDynamicResizeInfo:
getRowInitialHeight:
getColumnInitialWidth:
getRowHeightResize:
getColumnWidthResize:
captureNewMinimumRowHeights:
totalCapturedRowHeights
totalCapturedColumnWidths
totalCurrentRowHeights
totalCurrentColumnWidths
totalMinimumRowHeights
totalMinimumColumnWidths
applyRowTotalHeight:
applyColumnTotalWidth:
capturedTableSize
mValid
mTableRowsBehavior
mRowRegion
mStartRowIndex
mNumberOfRows
mNumberOfResizableRows
mCapturedRowHeights
mCurrentRowHeights
mMinimumRowHeights
mCapturedRowHeightTotal
mColumnRegion
mStartColumnIndex
mNumberOfColumns
mNumberOfResizableColumns
mCapturedColumnWidths
mCurrentColumnWidths
mMinimumColumnWidths
mCapturedColumnWidthTotal
isConnected
_originalUIDMap
_originalVersionCounter
_copiedUIDMap
formulaSpecForStorageRef:
setBaseRow:
setBaseTile:
tempSummaryCell
checkCell:searchFlags:
i_tileStartingAtOrBeforeRowIndex:outTileRange:
intersectsRow:
searchMask
setSearchMask:
baseDataStore
curRowIndex
setCurRowIndex:
isSummaryRow
setIsSummaryRow:
isLabelRow
setIsLabelRow:
setUuid:
baseRowIndex
setBaseRowIndex:
baseTile
baseTileRange
setBaseTileRange:
baseRow
terminated
setTerminated:
populatedColumnsForGroupLevel1
setPopulatedColumnsForGroupLevel1:
populatedColumnsForGroupLevel2
setPopulatedColumnsForGroupLevel2:
populatedColumnsForGroupLevel3
setPopulatedColumnsForGroupLevel3:
populatedColumnsForGroupLevel4
setPopulatedColumnsForGroupLevel4:
populatedColumnsForGroupLevel5
setPopulatedColumnsForGroupLevel5:
viewColumnIndexesInCurrentRow
setViewColumnIndexesInCurrentRow:
_mapFromViewToBaseColumnInCurrentRow
_tempSummaryCell
_isSummaryRow
_isLabelRow
_terminated
_categoryColumnIndex
_curRowIndex
_baseRowIndex
_info
_searchMask
_baseDataStore
_baseMap
_viewMap
_summaryMap
_baseTile
_baseRow
_populatedColumnsForGroupLevel1
_populatedColumnsForGroupLevel2
_populatedColumnsForGroupLevel3
_populatedColumnsForGroupLevel4
_populatedColumnsForGroupLevel5
_viewColumnIndexesInCurrentRow
_uuid
_baseTileRange
T@"TSTCategoryTranslator",R,N,V_translator
T@"TSTTableDataStore",R,W,N,V_baseDataStore
T@"TSTColumnRowUIDMap",R,W,N,V_baseMap
T@"TSTColumnRowUIDMap",R,W,N,V_viewMap
T@"TSTSummaryCellVendor",R,W,N,V_summaryCellVendor
T@"TSTColumnRowUIDMap",R,W,N,V_summaryMap
TQ,N,V_searchMask
TI,N,V_curRowIndex
TS,R,N,V_categoryColumnIndex
TB,N,V_isSummaryRow
TB,N,V_isLabelRow
TC,N,V_groupLevel
T{TSKUIDStruct=QQ},N,V_uuid
TI,N,V_baseRowIndex
T@"TSTTableTile",&,N,V_baseTile
T{_NSRange=QQ},N,V_baseTileRange
T@"TSTTableTileRowInfo",&,N,V_baseRow
T@"TSTCell",R,N,V_cell
TB,N,V_terminated
T@"NSIndexSet",&,N,V_populatedColumnsForGroupLevel1
T@"NSIndexSet",&,N,V_populatedColumnsForGroupLevel2
T@"NSIndexSet",&,N,V_populatedColumnsForGroupLevel3
T@"NSIndexSet",&,N,V_populatedColumnsForGroupLevel4
T@"NSIndexSet",&,N,V_populatedColumnsForGroupLevel5
T@"NSIndexSet",&,N,V_viewColumnIndexesInCurrentRow
T@"TSTTableInfo",R,N,V_info
drawableInfo
groupByUID
resetDependenciesForCell:
UIDForIndex:isRows:
UIDsForIndexes:isRows:
mutableIndexesForUIDs:isRows:
UIDsForRange:isRows:
UIDSetForRange:isRows:
changesWithPageNumber
hyperlinkCellID
attributeArrayForKind:withCreate:
insertStorage:atCharIndex:dolcContext:undoTransaction:
variationOfCharacterStyle:paragraphStyle:propertyMap:
changesWithPageCount
setHyperlinkCellID:
nonUndoableAppendStoragePreservingEmphasis:
T{TSUCellCoord=ISBB},D,N
allCells
removeAllCells
dirtyCellCountInOwner:
summaryModelIsCleanPrecedentForTableUID:
evaluateWithContext:isInACycle:outErrorIsDueToCycle:
updateCalculatedPrecedents:forFormula:atCellRef:withState:
isAbortedError
setError:forCell:
clearErrorForCell:
applyFormulaResult:context:hasWarnings:outWriteDidBeginOrEndWithTextCell:propagateCheckboxesAndRatings:
setCell:atCellID:
Tr^{TSKUIDStruct=QQ},N,V_tableUID
Tr^{TSKUIDStruct=QQ},N,V_ownerUID
T@"TSTTableInfo",W,N
initWithContext:storage:
initWithStorage:
setStorage:
_storage
T@"TSWPStorage",&,N,V_storage
upgradingToSubOwnerUIDs
p_resolveCellUIDToVendorCellUID:
copyByRewritingGroupUid:groupByUID:
setHasCustomFormatsToPaste:
hasCustomFormatsToPaste
setTableInfoForGSSP:
runChange:withSummaryCellMap:migrationHelper:
cellUIDMap
_upgradingToSubOwnerUIDs
_hasCustomFormatsToPaste
_cellUIDMap
T^v,R,N,V_cellUIDMap
TB,N,V_hasCustomFormatsToPaste
T@"TSTTableInfo",R,W,N,V_tableInfo
TB,N,V_upgradingToSubOwnerUIDs
initWithFormulaPredicate:
initWithPredicateType:arg1:arg2:qualifier1:qualifier2:argumentCellRef:hostCell:
initRuleWhereValuesInTable:andDataList:inBaseColumn:matchCell:
copyToUidFormForHiddenRowsWithTableInfo:
copyToGeometricFormForHiddenRowsWithTableInfo:containsBadRef:
evaluateAtCellID:onOwnerUID:calcEngine:
foreachCellRef:
predArg1Type
dataList1
encodeToPrePivotArchive:archiver:
initFromPrePivotArchive:
ruleWithFormulaPredicate:
ruleWhereValuesInTable:inBaseColumn:matchCell:
copyByRewritingToUidFormWithTableInfo:
copyByRewritingToGeometricFormWithTableInfo:containsBadRef:
isUniquesOrDuplicates
setDoesNotNeedFormulaRewriteForImport
matchesRow:withFormulaTableUID:withCalculationEngine:
matchesCell:
setPredicate:
doesNotNeedFormulaRewriteForImport
setDoesNotNeedFormulaRewriteForImport:
_doesNotNeedFormulaRewriteForImport
_predicate
T@"TSTFormulaPredicate",&,N,V_predicate
TB,N,V_doesNotNeedFormulaRewriteForImport
defaultPredicateForType:argumentCellRef:hostCell:
removeRulesWithAbsoluteIndices:
predArg0
forConditionalStyle
initWithPredicateType:arg0:arg1:arg2:qualifier1:qualifier2:forConditionalStyle:
filterSetType
backwardCompatiblePrePivot
canDowngradeForPrePivotFormat
p_downgradedFilterRuleForListItem:fromPredicate:
downgradeForPrePivotFormatForLocale:
setDowngradedForPrePivot:
p_thresholdComparisonMatchesFilter:withPredicateType:
numberOfRulesInFilter:
objectsAtIndexes:
removeObjectsAtIndexes:
insertObjects:atIndexes:
p_addRules:atRuleIndices:inFilter:isNew:
replaceRuleAtAbsoluteIndex:withRule:
filterAtIndex:inTable:
baseColumnIndicesForRulesInTable:
ruleInFilter:atIndex:
canAddRules
newFilterIndex
removeRulesWithIndices:inFilter:
removeRulesForBaseColumnIndices:withTableInfo:
addRules:inFilter:
replaceRule:atRuleIndex:inFilter:
enumerateFilterIndicesInTable:usingBlock:
enumerateFiltersForColumn:withTable:usingBlock:
enumerateRulesInFilterIndex:usingBlock:
filterIndicesForBaseColumn:inTable:
firstFilterIndexForBaseColumn:inTable:
ruleIndexInFilter:matchingCell:
absoluteRuleIndicesForColumn:inTable:
viewColumnIndicesForRulesInTable:
setRules:
downgradedForPrePivot
_needsFormulaRewriteForImport
_filterOffsets
_downgradedForPrePivot
T@"NSArray",&,N,V_rules
Ti,N
TB,N,V_needsFormulaRewriteForImport
TB,N,V_downgradedForPrePivot
p_isEqualForNonFormulaItems:
predicateArg1atBaseHostCoord:calcEngine:
predicateArg2atBaseHostCoord:calcEngine:
recreateFormula
useColumnRefForArg0
initWithPredicateType:arg1:arg2:qualifier1:qualifier2:argumentCellRef:hostCell:forConditionalStyle:
initWithLiteralDateType:date1:date2:number1:number2:qualifier1:qualifier2:argumentCellRef:hostCell:forConditionalStyle:
p_creatorForPeriodBoundaryWithScale:direction:offset:argIndex:earlierBound:isCalPers:
p_populateMembersFromFormula
p_smokeTestThePredicate
p_setPredicateType:
setPredArg0:
setPredArg1:
setPredArg2:
p_setQualifier1:
p_setQualifier2:
copyToUidFormWithRewriteContext:
crossTableRefParam1
crossTableRefParam2
firstValue
p_argTypeForPredArg:argNum:calculationEngine:hostCell:
predArg1
predArg2
p_testDataTypesForArg0:arg1:arg2:predShouldReturn:
evaluateWithContext:
setArgumentAt:withPredArg:
copyByRemappingOwnerUIDs:calcEngine:badRefFound:
copyByRewritingNumberToDurationForSageImport:durationUnitLargest:
rewriteType
isMoveRewriteType:
updatedCellRefForOriginalCellRef:
initWithCalcEngine:rewriteSpec:
convertFromBaseToChromeForCategorizedTableMove:containingCell:
convertFromChromeToBaseForCategorizedTableMove:containingCell:
copyByOffsettingRelativeReferences:
qualifier2
copyByUpdatingLinkedTable:outfoundLinkedRef:
copyByUpgradingToLinkedRefForTable:hostCell:
iterateWithBlock:stop:block:
encodeToPrePivotArchive:archiver:encodingForSOS:
upgradeTopAndBottom
defaultPredicateForType:argumentCellReference:hostCell:
isThresholdNeededForType:
isEqualForInspector:atHostCoordinate:
initWithPredicateType:arg1:arg2:qualifier1:qualifier2:argumentCellReference:hostCell:forConditionalStyle:
initWithLiteralDateType:date1:date2:number1:number2:qualifier1:qualifier2:argumentCellRef:hostCell:
initWithLiteralNumberType:number1:number2:qualifier:argumentCellRef:hostCell:
initWithLiteralDurationType:duration1:durationUnits1:duration2:durationUnits2:qualifier:argumentCellRef:hostCell:
initWithLiteralTextType:string:argumentCellRef:hostCell:
copyToUidFormForConditionalStylesWithTableInfo:containingCell:preserveHostCell:
setHostCell:hostColumnUID:hostRowUID:
getPrecedents:calcEngine:hostOwnerUID:hostCellID:
predArg0Type
predArg2Type
numberParam2
stringParam1
dateTimeParam1
dateTimeParam2
durationParam1
durationParam2
copyByConvertingBaseToChrome:inOwner:inCellCoordinate:
copyByConvertingChromeToBase:inOwner:inCellCoordinate:
copyByRewritingWithSpec:inOwner:inCellCoordinate:
copyByOffsettingRelativeReferencesWithOffset:
copyByUpdatingLinkedTable:hostCell:
iterateFormulasWithContext:shouldStop:block:
expectedArgTypeForPredicateType:firstArg:
setForConditionalStyle:
_formula
_predicateType
_qualifier1
_qualifier2
_argIndex0
_argIndex1
_argIndex2
_predArg0
_predArg1
_predArg2
_forConditionalStyle
T{TSCEUidCellRef={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}{TSKUIDStruct=QQ}},N,V_hostCellRef
TC,R,N,V_predicateType
TC,R,N,V_qualifier1
TC,R,N,V_qualifier2
TB,N,V_forConditionalStyle
T@"TSTFormulaPredArg",&,N,V_predArg0
T@"TSTFormulaPredArg",&,N,V_predArg1
T@"TSTFormulaPredArg",&,N,V_predArg2
mStrokeSelection
T@"TSKSelection",&,N,VmStrokeSelection
imageNamed:
CGColor
showsCellOverflowIndicator
bezierPathWithLegacyRoundedRect:cornerRadius:
CGPath
showsCellWarningIndicator
colorWithAlphaComponent:
setBadgeType:
setFrame:
badgeType
p_drawCellCommentBadgeInContext:
p_drawCellWarningBadgeInContext:
p_drawCellErrorIndicatorInContext:
badgeWithType:color:viewScale:frame:
drawInContext:
_badgeType
_color
_frame
Ti,N,V_badgeType
T@"TSUColor",&,N,V_color
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_frame
p_calculateAncillaryInformation
p_insertRangeIntoRegion:
regionFromCellMap:withTableInfo:passingTest:
p_copy
region:subtractingRange:
region:subtractingRowIndexes:
region:subtractingColumnIndexes:
region:intersectingRange:
unionEveryRangeInRegion:withRange:
region:subtractingRegion:
region:intersectingRegion:
regionByRemovingRows:
regionByRemovingColumns:
mapIndex:
regionByAddingRows:
regionByAddingColumns:
tsu_indexSetByIntersectingWithRange:
prunedCellRegionAgainstTable:behavior:usingBlock:
numberWithBool:
p_copyFromRegion:
initWithCellRegion:
regionFromCellDiffMap:withTableInfo:
regionFromCellUIDVector:withTableInfo:
regionFromOverlappingCellRangeVector:
regionFromModelMergeList:
regionFromMergeActionArray:withTableInfo:
regionFillingColumnsFromRegion:
regionFromPropertyListRepresentation:
regionByCollapsingRangesForRemovedRows:
regionByCollapsingRangesForRemovedColumns:
regionByApplyingRowMapping:
regionUpToColumnIndex:
regionUpToColumnIndexRtoL:maxColumnIndex:
regionAfterColumnIndex:
regionAfterColumnIndexRtoL:
regionUpToRowIndex:
regionAfterRowIndex:
propertyListRepresentation
asCellCoordSet
largestRangeContainingCellID:
partiallyIntersectsCellRange:
isSingleCellWideOrHigh:
newBottomToTopIterator
enumerateColumnsInReverseUsingBlock:
enumerateRowsInReverseUsingBlock:
enumerateInDirection:usingBlock:
enumerateGridColumnsUsingBlock:
enumerateGridRowsUsingBlock:
setBoundingCellRange:
setCellCount:
setFirstCellID:
setLastCellID:
setIntersectingColumnsIndexSet:
setIntersectingRowsIndexSet:
_cellRanges
_boundingCellRange
_intersectingColumnsIndexSet
_intersectingRowsIndexSet
_firstCellID
_lastCellID
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_boundingCellRange
TQ,N,V_cellCount
T@"NSIndexSet",&,N,V_intersectingColumnsIndexSet
T@"NSIndexSet",&,N,V_intersectingRowsIndexSet
T{TSUCellCoord=ISBB},N,V_firstCellID
T{TSUCellCoord=ISBB},N,V_lastCellID
Tr^v,R,N,V_cellRanges
regionByAddingModelCellRegion:
T{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}},R,N
boundingViewCellRect
regionByAddingViewCellRect:
regionBySubtractingViewCellRect:
regionByAddingViewCellRegion:
regionBySubtractingViewCellRegion:
enumerateViewCellRectsUsingBlock:
T{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}},R,N
p_addRange:calculateAncillaryInfo:
getBytes:length:
fillCellRangeRowMajorSet:leftToRight:
mCellRangeSet
mCellID
mBoundingCellRange
fillCellRangeColMajorSet:topToBottom:
viewRowIndexForChromeRowIndex:
viewCellCoordForChromeCellCoord:
viewCellCoordForBaseCellCoord:
chromeCellCoordForViewCellCoord:
viewCellRefForBaseCellRef:
chromeCellRefForViewCellRef:
viewRangeRefForChromeRangeRef:
chromeCellRefForBaseCellRef:
viewCellRefForChromeCellRef:
baseCellRefForViewCellRef:
columnUIDsForBaseColumnIndexes:
rowUIDsForBaseRowIndexes:
columnUIDsForViewColumnIndexes:
rowUIDsForViewRowIndexes:
baseColumnIndexesForUIDs:
baseRowIndexesForUIDs:
baseColumnIndexesForViewColumnIndexes:
baseRowIndexesForViewRowIndexes:
viewColumnGridIndexesForBaseColumnGridIndexes:
baseCellCoordForChromeCellCoord:
baseRowIndexForChromeRowIndex:
baseColumnIndexForChromeColumnIndex:
chromeRowIndexForBaseRowIndex:
chromeColumnIndexForBaseColumnIndex:
chromeRowIndexesForViewRowIndexes:
chromeColumnIndexesForViewColumnIndexes:
bodyBoundingRangeForBaseLevel
metadataForRowIndex:
cellUIDforBaseCellCoord:
cellUIDForSummaryCellCoord:
baseCellRegionForUIDRange:
baseCellRegionForViewCellRect:
baseShuffleMapForViewShuffleMap:
cellAtGroupLevel:columnUID:
forceGroupingChangeReset
resetViewMapAndNotify
_baseTableModel
_coordMapper
T{TSUViewRowIndex=I},R,N
T{TSUViewColumnIndex=S},R,N
T{TSUViewRowIndex=I},N
T{TSUViewColumnIndex=S},N
T@"TSTTableModel",R,N,V_baseTableModel
T@"TSTColumnRowUIDMap",R,N
setMergedStrokes:
_mergedStrokes
T@"TSTStrokeLayerMergedStack",&,N,V_mergedStrokes
lastIdentifierComponent
fullIdentifier
lastComponentWithWhitespaceAppended
componentCount
localizedStringIsTrue:
localizedStringIsFalse:
initWithContextResolver:
identifierComponents
initWithContextResolver:components:
initWithComponents:aggregateFunction:
trimmedStringStartingAtWord:withPreserveFlags:
addIdentifierComponent:
appendToLastComponent:
_components
_aggregateFunction
T@"NSString",&,N,V_aggregateFunction
_hidingState
_numberOfCells
_size
Td,N,V_size
TC,N,V_hidingState
TI,N,V_numberOfCells
setDimensions:
T{TSCEGridDimensions=II},N,V_dimensions
T@"NSString",&,N,V_whitespaceBeforeFirstChild
T@"NSMutableArray",&,N,V_whitespaceAfterDelimiters
initWithPredicate:cellStyle:textStyle:
isEqualToStyle:ignoreObjectUUID:
conditionalStyleRuleWithRule:
isEqualForInspector:
privateCellStyle
privateTextStyle
setCellStyle:textStyle:
evaluateFormulaAtCellID:withCalcEngine:onOwnerUID:
predicateDescription
copyByUpdatingHostCellRef:
mPredicateType
T@"TSTFormulaPredicate",R,C,N
TC,R,N,VmPredicateType
T@"TSTCellStyle",R,C,N
T@"TSWPParagraphStyle",R,C,N
setAllowsMissingPropertiesWithNoParentStyleForUpgrade:
initWithConditionalStyleSet:
iterateFormulasWithContext:block:
copyByReparenting:groupByUID:rewriteContext:
copyByResolvingRelativeAncestorsWithRewriteContext:
precedentsWithCalcEngine:hostOwnerUID:hostCellID:
rulesDescription
currentRules
_conditionalStyleSetRules
T@"NSArray",R,N,V_conditionalStyleSetRules
mMutableIndexSet
formulaCoordsInRange:inOwner:
removeFormulaAtCellID:
addFormulaForConditionalStyle:atCellID:
addCellCoordinate:
checkConditionForCellID:withConditionalStyle:withIndex:
removeAllCellCoordinates
allCondStyleFormulasForTable:
changedConditionForCellID:
_cellsToInvalidate
T@"TSTTableModel",N,V_tableModel
p_applyUnifyResizeFactor:region:direction:totalOfCaptured:count:capturedArray:currentArray:minimumArray:
p_applyUnifyFixedSize:region:direction:count:currentArray:minimumArray:
applyFixedHeight:
applyFixedWidth:
targetWidth
targetHeight
mTargetWidth
mTargetHeight
Td,R,N,VmTargetWidth
Td,R,N,VmTargetHeight
coordMapperForTableUID:calcEngine:
srcCoordMapper
fillInRowGapsUsingIndexes:
fillInColumnGapsUsingIndexes:
relativeBoundingRangeWithContainingCell:
relativeColumns
relativeRows
tableRangeForTable:calcEngine:
intersectWithCellRectIgnoringSpanning:
p_applyAccordionResizeFactor:region:direction:totalOfCaptured:count:capturedArray:currentArray:minimumArray:
heightFactor
widthFactor
_heightFactor
_widthFactor
Td,R,N,V_heightFactor
Td,R,N,V_widthFactor
orderedRowUidsWithLabels
rowOrder
categoryColumnUID
initWithTableInfo:rowUids:
targetGroupFromRowIndex:minSourceLevel:templateRowUID:
minimumCategoryLevelInRowRange:
setTemporaryRowOrder:
setRowOrderUsingViewOrder
insertRowUids:beforeUid:
groupUidsGivenRowUids:selectedLevels:
T@"TSTTableInfo",R,W,V_tableInfo
p_tgtRangeFromPbRange:andMap:
p_tgtRangeForPbRange:givenColumnMaps:rowMaps:
p_indexForTgtToPbMaps:andMap:
p_tgtCellIDForPbCellID:givenColumnMaps:rowMaps:
pbRangeForTgtRange:
pbCellIDForTgtCellID:
p_tgtRangesForPbRange:givenColumnMaps:rowMaps:
initWithPbRange:tgtRange:
initWithPbTable:pbRange:tgtTable:tgtRange:flag:
createTgtRegionFromPbRegion:
createTgtRegionByIntersectingPbRegion:andTgtRegion:
createTgtMergeMapFromPbMergeMap:andTgtRegion:andTgtBodyRange:
mRowTgtToPbMaps
mColumnTgtToPbMaps
initWithNumberOfSortRules:
setReorganizeValue:atIndex:
reorganizeValueAtIndex:
reorganizeValues
setReorganizeValues:
_reorganizeValues
T@"NSMutableArray",&,N,V_reorganizeValues
component:fromDate:
setValue:forComponent:
setDay:
rangeOfUnit:inUnit:forDate:
weekday
tsce_weekNumberForType:
setMonth:
dateFromComponents:
groupingComboForGroupingType:
changesPerColumnMapToBeInGroup:
p_setCell:groupingCellPlan:groupValue:toGroup:templateCell:
p_cellDiffForFinishedCell:
p_setCell:groupingTypeCombo:groupingCellValue:toBeInGroup:
p_setCell:forUniqueGroupingTypeWithGroupColumnValue:toBeInGroup:
p_setCell:forYearGroupingTypeWithGroupColumnValue:toBeInGroup:
p_setCell:forYearQuarterGroupingTypeWithGroupColumnValue:toBeInGroup:
p_setCell:forMonthGroupingTypeWithGroupColumnValue:toBeInGroup:
p_setCell:forYearWeekGroupingTypeWithGroupColumnValue:toBeInGroup:
p_setCell:forDayOfWeekGroupingTypeWithGroupColumnValue:toBeInGroup:
p_setCell:forDayGroupingTypeWithGroupColumnValue:toBeInGroup:
p_setCell:forMonthOfYearGroupingTypeWithGroupColumnValue:toBeInGroup:
p_setCell:forQuarterOfYearGroupingTypeWithGroupColumnValue:toBeInGroup:
copyValueAndFormatToCell:
setYear:
initWithCalendarIdentifier:
timeZoneWithName:
setTimeZone:
defaultDateForGrouping
p_dateBySettingUnit:value:ofDate:inCalendar:
ordinalityOfUnit:inUnit:forDate:
changeCell:atCellUID:toBeInGroup:
changeCellDiffMapToMoveRows:toGroup:templateRowUID:
cellDiffForCell:applyingGroupCellValue:groupingType:toBeInGroup:
tsu_resourcesBundle
metadata
migratedStyleForStyle:
metadataWithUid:
migrateStylesToDocument:
_columnRowUID
_hidingAction
_definedCellStyle
_definedTextStyle
T@"TSTCellStyle",R,N,V_cellStyle
T@"TSWPParagraphStyle",R,N,V_textStyle
Td,R,N,V_size
TC,R,N,V_hidingAction
minCursorCellID
setMinCursorCellID:
cursorCellIDs
setCursorCellIDs:
iterators
setIterators:
_minCursorCellID
_iterators
_cursorCellIDs
T{TSUCellCoord=ISBB},N,V_minCursorCellID
T{vector<TSUCellCoord, std::allocator<TSUCellCoord>>=^{TSUCellCoord}^{TSUCellCoord}{__compressed_pair<TSUCellCoord *, std::allocator<TSUCellCoord>>=^{TSUCellCoord}}},N,V_cursorCellIDs
T@"NSMutableArray",&,N,V_iterators
rank
localizedCaseInsensitiveCompare:toString:
sortTagsForSortingRows:byColumns:
sortTagsForSortingColumns:byRows:
sortedArrayUsingComparator:
initWithStartIndex:endIndex:
mapping
p_mappingForSortingRowsOrColumns:withRules:dimension:
reorganizeValueForSorting
mappingSize
startIndex
dirtyCellsForRowRange:fromTable:tableRange:
mappingFromRowUids:toRowUids:
rearrangeWithMapping:
changeDescriptorsForReorganizingFromRowUids:toRowUids:
withinGroupingChangesBatch
initWithTableUID:summaryRows:labelRows:
p_applyViewCellCoord:toSummaryUsingBlock:toLabelUsingBlock:toCategoryColumnUsingBlock:toBaseUsingBlock:
p_defaultCellStyleOfSummaryOrLabelRowAtLevel:isLabel:
p_applyViewRowIndex:toSummaryUsingBlock:toLabelUsingBlock:toBaseUsingBlock:toBeyondBoundsUsingBlock:
p_defaultTextStyleOfSummaryOrLabelRowAtLevel:isLabel:
p_applyViewColumnIndex:toCategoryColumnUsingBlock:toBaseUsingBlock:toBeyondBoundsUsingBlock:
nonCustomCurrencyFormatSansAccountingStyleForLocale:
initWithTrueString:falseString:
setByAddingObjectsFromSet:
i_populateCachedIndexSetsIfNeeded
i_indexesForLabelRowsAtGroupLevel:
i_indexesForLeadingRowsAtGroupLevel:
i_indexesForLeadingSummaryRowsAtGroupLevel:
i_populateIndexesForSummaryRows
i_populateIndexesForLabelRows
i_populateIndexesForSummaryAndLabelRows
i_populateIndexesForLeadingRows
i_populateIndexesForLeadingSummaryRows
setByUnionWithSet:
isSubsetOf:
suspendChangeDescriptorNotificationsDuringBlock:
summaryCellCoordForCellUID:
baseCoordFromViewCoord:
indexesForLeadingSummaryRows
suspendNotify
setSuspendNotify:
cachedIndexSetsAreValid
setCachedIndexSetsAreValid:
cachedIndexesUnfairLock
setCachedIndexesUnfairLock:
cachedIndexesForSummaryRows
setCachedIndexesForSummaryRows:
cachedSummaryRowIndexesAtLevels
setCachedSummaryRowIndexesAtLevels:
cachedIndexesForLabelRows
setCachedIndexesForLabelRows:
cachedLabelRowIndexesAtLevels
setCachedLabelRowIndexesAtLevels:
cachedIndexesForSummaryAndLabelRows
setCachedIndexesForSummaryAndLabelRows:
cachedIndexesForLeadingRows
setCachedIndexesForLeadingRows:
cachedLeadingRowIndexesAtLevels
setCachedLeadingRowIndexesAtLevels:
cachedIndexesForLeadingSummaryRows
setCachedIndexesForLeadingSummaryRows:
cachedLeadingSummaryRowIndexesAtLevels
setCachedLeadingSummaryRowIndexesAtLevels:
_groupingsChangingLevel
_sawGroupingChangeNeedingReset
_suspendNotify
_cachedIndexSetsAreValid
_cachedIndexesUnfairLock
_cachedIndexesForSummaryRows
_cachedSummaryRowIndexesAtLevels
_cachedIndexesForLabelRows
_cachedLabelRowIndexesAtLevels
_cachedIndexesForSummaryAndLabelRows
_cachedIndexesForLeadingRows
_cachedLeadingRowIndexesAtLevels
_cachedIndexesForLeadingSummaryRows
_cachedLeadingSummaryRowIndexesAtLevels
TB,N,V_suspendNotify
TB,N,V_cachedIndexSetsAreValid
T{os_unfair_lock_s=I},N,V_cachedIndexesUnfairLock
T@"NSIndexSet",&,N,V_cachedIndexesForSummaryRows
T@"NSMapTable",&,N,V_cachedSummaryRowIndexesAtLevels
T@"NSIndexSet",&,N,V_cachedIndexesForLabelRows
T@"NSMapTable",&,N,V_cachedLabelRowIndexesAtLevels
T@"NSIndexSet",&,N,V_cachedIndexesForSummaryAndLabelRows
T@"NSIndexSet",&,N,V_cachedIndexesForLeadingRows
T@"NSMapTable",&,N,V_cachedLeadingRowIndexesAtLevels
T@"NSIndexSet",&,N,V_cachedIndexesForLeadingSummaryRows
T@"NSMapTable",&,N,V_cachedLeadingSummaryRowIndexesAtLevels
visible
setVisible:
hidden
setHidden:
userVisible
setUserVisible:
userHidden
setUserHidden:
_visible
_hidden
_userVisible
_userHidden
T@"NSMutableIndexSet",&,N,V_visible
T@"NSMutableIndexSet",&,N,V_hidden
T@"NSMutableIndexSet",&,N,V_userVisible
T@"NSMutableIndexSet",&,N,V_userHidden
rowMarkIndex
setRowMarkIndex:
tsu_enumerateRangesConcurrentlyUsingBeginBlock:concurrentBlock:finalBlock:
previousNthVisibleRow:fromRowIndex:
previousNthVisibleColumn:fromColumnIndex:
visibleCellOffsetBy:fromCellID:
userVisibleRowIndices
rowsVisible
setRowsVisible:
rowsUserVisible
setRowsUserVisible:
rowsInvalid
setRowsInvalid:
columnsVisible
setColumnsVisible:
columnsInvalid
setColumnsInvalid:
_rowsVisible
_rowsUserVisible
_rowsInvalid
_rowMarkIndex
_columnsVisible
_columnsInvalid
T@"TSTHiddenStateIndexSet",&,N,V_rowsVisible
T@"TSTHiddenStateIndexSet",&,N,V_rowsUserVisible
T@"NSMutableIndexSet",&,N,V_rowsInvalid
TQ,N,V_rowMarkIndex
T@"TSTHiddenStateIndexSet",&,N,V_columnsVisible
T@"NSMutableIndexSet",&,N,V_columnsInvalid
tswp_spaceCharacterSet
removeCharactersInString:
tswp_smartSingleQuotesCharacterSet
stringByReplacingCharactersInRange:withString:
asDateTimeFormat
automaticMaxAndMinDurationUnitsForTimeInterval:
defaultDecimalPlacesForCurrencyCode:
appliedConditionKey
conditionalFormatDataForKey:
currencyCodeIndex
currencyCodeForCurrencySymbol:
asBaseFormat
base
baseUseMinusSign
formatOfType:allowMismatchedSpare:
groupingSeparator
defaultHexadecimalFormat
usesLimitedAutomaticFormatParsing
supportsFormulaEditing
decimalSeparator
setCurrencyOrNumberDoubleValue:
cellValueFromCell:locale:
coerceToFormatType:
coerceToBaseFormat:
coerceTextCellToBestNumberFormatUsingLimitedParsing:
coerceCellToFormatTypeUsingSpares:
replaceContentWithParsableString:tableInfo:cellID:flags:outControlWasRemoved:
propertySetByAddingProperty:
p_setupTileAndRowAtCellID:
setCurRow:
setCurTile:
i_tileStartingAtOrAfterRowIndex:outTileRange:
curTile
curTileRange
setCurTileRange:
curRow
_curTile
_curRow
_curTileRange
T@"TSTTableTile",&,N,V_curTile
T{_NSRange=QQ},N,V_curTileRange
T@"TSTTableTileRowInfo",&,N,V_curRow
tsk_phoneUI
wantsSelectionAtPoint:
rendererForAttachment
baselineOffset
drawAttachment:inContext:selection:
deprecatedProperties
propertySetByRemovingPropertiesFromSet:
boxedDefaultValueForProperty:
defaultStyleWithDefaultPropertiesInContext:
mTableNameSelection
T@"TSKSelection",&,N,VmTableNameSelection
logForCategory:
T@"NSObject<OS_os_log>",R,N
setFunctorForType
initWithColumnUid:groupingType:
p_groupingFormatWithLocale:
shortStringForYearType
shortStringForMonthType
shortStringForDayOfWeekType
shortStringForDayType
shortStringForYearWeekType
shortStringForYearQuarterType
shortStringForMonthOfYearType
shortStringForQuarterOfYearType
stringForUniqueType
stringForYearType
stringForMonthType
stringForDayOfWeekType
stringForDayType
stringForYearWeekType
stringForYearQuarterType
stringForMonthOfYearType
stringForQuarterOfYearType
stringForYearTypeForLocale:
stringForMonthTypeForLocale:
stringForDayOfWeekTypeForLocale:
stringForDayTypeForLocale:
stringForYearWeekTypeForLocale:
stringForYearQuarterTypeForLocale:
stringForMonthOfYearTypeForLocale:
stringForQuarterOfYearTypeForLocale:
stringForUniqueTypeForLocale:
shortStringForYearTypeForLocale:
shortStringForMonthTypeForLocale:
shortStringForDayOfWeekTypeForLocale:
shortStringForDayTypeForLocale:
shortStringForYearWeekTypeForLocale:
shortStringForYearQuarterTypeForLocale:
shortStringForMonthOfYearTypeForLocale:
shortStringForQuarterOfYearTypeForLocale:
coarserGroupingTypeFor:
finerGroupingTypeFor:
stringForGroupingType:locale:
coarserGroupingTypeFor:groupTypesToAvoid:
finerGroupingTypeFor:groupTypesToAvoid:
initWithColumnIndex:groupingType:inTableInfo:
getUUIDBytesForGroupingColumnUid:
getUUIDBytesForColumnUid:
groupingFunctor
uniqueObjectUID
_groupingColumnUid
_groupingType
_groupingFunctor
_groupingFormat
_groupingFormatComputed
_docLocale
_uniqueObjectUID
T{TSKUIDStruct=QQ},R,N,V_uniqueObjectUID
Tr^{TSCEFunctor=@C},R,N,V_groupingFunctor
Tq,R,N,V_groupingType
rewriteSpecBaseToChrome
coordMapper
regionMovedInfo
srcTableUID
srcColumnUids
srcRowUids
dstColumnUids
dstRowUids
uids
dstTableUID
setRewriteSpecBaseToChrome:
setCoordMapper:
rewriteSpecChromeToBase
setRewriteSpecChromeToBase:
finalDstTableUID
rewriteSpec
_rewriteSpecBaseToChrome
_rewriteSpecChromeToBase
_rewriteSpec
T@"TSCECalculationEngine",R,N,V_calcEngine
T@"TSTFormulaRewriteSpec",R,N,V_rewriteSpec
i_rowInfoAtIndex:
_currentViewCellID
_currentBaseCellID
_currentSummaryCellID
_currentCellIDIsBase
_currentRowIndex
_summaryDataStore
_summaryRow
internalFormulaOwnerIDForFormulaOwnerUID:
cellCoordinatesNeedingExcelImportForTable:
tablesByName
addTable:
registerWithCalcEngine:ownerKind:linkOnly:
defaultCharacterStyle
copyByRewritingForExcelImport:outFormulaResult:outDidModifyFormula:outFormulaReplacedForExcelCompatWarning:functionNameReplacedForExcelCompat:formulaFormatFromCell:
isNotReadyError
warningSetForFormulaReplacedForExcelCompat:originalFormula:
warningSetByAddingWarningsFromSet:
copyByRemovingNumberToDateCoercion:outFormulaResult:outDidModifyFormula:
assertAt:nonCalcEngineException:evaluatingFormula:
corruptCellRefs
tableResolverForTableID:
ownerKindForOwnerID:
formulaOwnerUIDForInternalFormulaOwnerID:
resetCorruptCellRefs:
hasRunRecalculationALongTime
requestAutosaveForExpensiveCalculation
clearRecalculationTimer
setDontClearBackground:
TB,N,VdontClearBackground
pattern
patternType
emptyPattern
initWithColor:width:cap:join:pattern:
portalStroke
TB,D,N
cppCalcEngine
insertString:atCharIndex:undoTransaction:
initWithTableResolver:topLeft:bottomRight:preserveFlags:
upgradeStyleForFormulatextForCellCoord:
rangeCoord
tableResolver
topLeftCoord
intersectionWithCellRect:
invalidReferenceError
raiseErrorForInvalidReference
raiseInvalidRangeUsageErrorForReference:
invalidMergeReference:contextEntityUID:
raiseException
isValidOrSpanning
columnGroupLevel
rowGroupLevel
aggregateIndexLevel
initWithColumnRange:rowRange:
enumerateValuesUsingBlock:
aggregateFieldName
invalidAggregateColumnErrorForFunctionName:argumentNumber:
setMissingDataFieldAtIndex:
enumerateDataKeyValuePairsUsingBlock:
keyValuePairCount
initWithColumnUid:rowUid:purpose:
initWithTract:tableUID:preserveFlags:
newTableResolverForResolver:
mapOwnerUID:
valuesForCategoryRef:atRowUid:hidingActionMask:error:
valueGridForCategoryRef:atRowUid:hidingActionMask:error:
resolverContainerMatchingName:inDocumentRoot:
resolverMatchingName:inDocumentRoot:contextResolver:
resolverMatchingNameWithContextContainer:inDocumentRoot:contextContainerName:
p_warningSetForFormulaWarningType:originalFormula:supplementaryText:
warningSetForCondFormatAboveAvgEqualAvg
warningSetForCondFormatAboveAvgStdDev
warningSetForCondFormatComplexFormula
warningSetForCondFormatContainsErrors
warningSetForCondFormatExpr
warningSetForCondFormatNotContainsErrors
warningSetForCondFormatParamatersNotAllTheSame
warningSetForCondFormatStopIfTrue
warningSetForCondFormatUnsupportedOperator
warningSetForCondFormatUnsupportedStyling
warningSetForCondFormatUnsupportedTimePeriod
warningSetForUnsupportedCondFormat
warningSetForDurationFormatRangeChanged
warningSetForUnsupportedDataFormat:
emptyWarningSet
TSTImportFormulaWarningTypeFromArchive:
p_isPersistedWithFormulaWarningTypeEnumeration
TSTImportFormulaWarningTypeToArchive
descriptionWithObject:
localizedWarningStrings
addFieldValue:
warningSetFor3DReferenceFormula:
warningSetForArrayedFormula:
warningSetForDifferentBehaviorForFunctionFormula:originalFormula:
warningSetForErrorTokenFormula:
warningSetForExternalReferenceFormula:
warningSetForNaturalLanguageFormula:
warningSetForReferenceOutOfBoundsFormula:
warningSetForSharedFormulaBaseNotFoundFormula:
warningSetForUnknownName:originalFormula:
warningSetForUnsupportedFormula:
warningSetForUnsupportedFunction:originalFormula:
warningSetForUnsupportedNameFormula:originalFormula:
warningSetForTransposedWithoutIssues:
warningSetForTransposedWithIssues:
warningSetForTransposeUnmodifiedWithIssues
warningSetForFilteredColumnFormulaNotCopied
cellDiffClearingAllWarningsWithContext:
areAnySet
individualWarnings
cellDiffClearingWarningsWithContext:
warningSetByRemovingWarningsFromSet:
_cellWarning
_originalDataFormat
_formulaWarning
addWarning:atCellRef:
cellRefForIndex:
warningSetAtCellRef:
_warningSetForCoordinate
setFunctionIndex:
englishFunctionNameFromFunctionIndex:
TS,N,V_functionIndex
isEqualToChoices:
p_mcListTypeForArgType:
p_mcListTypeOfListItem:
booleanValue
p_listItemAtIndex:
p_numberForListItem:
p_stringForListItem:
p_dateForListItem:
p_booleanForListItem:
initWithArchive:locale:
initWithItems:context:
tsu_stringWithoutAttachmentCharacters
p_appendChoices:uniquelyToChoices:
p_PopUpMenuModelDefaultWithContext:locale:
p_cellValueFromCellWithCustomFormat:locale:
popupMenuModelFromTable:region:initialValue:overflow:
popupMenuModelDeletingItemFromModel:index:
popupMenuModelEditingItemInModel:index:newContent:
popupMenuModelReorderingModel:fromIndex:toIndex:
valueTypeOfItemAtIndex:
numberAtIndex:
stringAtIndex:
dateAtIndex:
booleanAtIndex:
formatAtIndex:
popUpItemFromNumber:format:
popUpItemFromBoolean:
popUpItemFromString:
popUpItemFromDate:format:
_items
initWithRefCount:
loadFromArchive:unarchiver:completion:
p_sharedInitWithRefCount:key:
estimateByteSize
objectWithRefCount:
sharedLoadFromArchive:
dropReference
addReferencesFromObject:
_payload
_key
_refCount
_byteSizeForArchiving
TI,R,N,V_refCount
TQ,R,N,V_byteSizeForArchiving
TI,N,V_key
T@"NSObject<TSTTableDataPayloadHashing>",&,N,V_payload
T@"TSDCommentStorage",R,D,N
T@"TSTConditionalStyleSet",R,D,N
T@"TSUCustomFormat",R,D,N
T@"TSKFormat",R,D,N
T@"TSTCellSpec",R,D,N
T@"TSWPStorage",R,D,N
T@"TSTImportWarningSet",R,D,N
T@"TSTPopUpMenuModel",R,D,N
T@"TSSStyle",R,D,N
objectWithCommentStorage:refCount:
objectWithConditionalStyleSet:refCount:
initObjectWithCustomFormat:refCount:
formatName
objectWithCustomFormat:refCount:
p_setUpFormat:
asLegacyCustomFormat
objectWithFormat:refCount:
objectWithCellSpec:refCount:
objectWithFormulaError:refCount:
objectWithImportWarningSet:refCount:
objectWithPopUpMenuModel:refCount:
richTextPayload
objectWithRichTextPayload:refCount:
objectWithString:refCount:
_shouldWrap
TB,R,N,V_shouldWrap
objectWithStyle:refCount:
noLockShouldUpgradeStyleForFormulatextForCellCoord:
hasCellAtCellID:
applyBlockToAllCells:
shouldUpgradeStyleForFormulatextForCellCoord:
_cellsByCoord
_temporaryObjectContextDelegate
_temporaryContext
_cellCoordsToStyleUpgradeForFormulatext
unsignedLongLongValue
removeObjectsForKeys:
performSyncWriteWithUnderlyingDictionary:
invalidateObjectsWithKeysInCellRange:
cellValueTypeIsExpected:
cellFormatKindIsExpected:
resolveDataListKeysForCell:suppressTransmutation:sourceStorageVersion:
initWithCommentStorage:
conditionalFormatDataForValue:outKey:
valueRepresentsDateWithoutTime
gregorianCalendarLocale
startOfDayForDate:
isDrawable
enumerateAttachmentsInTextRange:usingBlock:
setFormulaObject:clearingID:
supportsStockUI
currencyCodeForUnit:
applyConditionalValue:
basePlaces
initWithBase:basePlaces:baseUseMinusSign:
copyPersistedWithContext:
hyperlinkStyle
smartFieldKind
enumerateSmartFieldsWithAttributeKind:inRange:usingBlock:
p_formatOfCellFormatKind:create:created:
p_setFormatExplicit:fromCellFormatKind:setMostRecentlySet:
_validateCustomFormatWrapper:
p_formatTypeIsANumberFormatTypeForMostRecentlySet:
p_clearFormatOfCellFormatKind:
p_cellFormatKindForValueType:
p_clearIfImplicitAndNotCurrentForKind:format:explicitFormatMask:
p_TSTCellSetMostRecentlySetNumberFormatWithCurrencyFlag:
p_hasExplicitFormatOfCellFormatKind:
formatType:isSameCellFormatKindAs:allowNumberCurrencyMismatch:
p_mismatchBetweenValueType:andCellFormatKind:
setRank:
formatTypeIsExpected:
setCurrencyOrNumberDecimalValue:
mightBeInterestedInMigration
stringForDisplayWithoutColor
hasContentBreakingMergeFragment
hasStockFormulaForStockUI
setCurrentFormat:isExplicit:forExcel:
candidateFormatForSliderStepperControlWithIsCurrent:
hasAnyExplicitFormats
setFormatID:forStorageFlag:
formatForStorageFlag:
hasAnyWarning
_valueBigNumber
_controlCellSpecID
_textFormatID
_booleanFormatID
TC,R,N,V_cellFormatKind
TI,N,V_controlCellSpecID
TI,N,V_textFormatID
TI,N,V_booleanFormatID
T{TSUDecimal={?=[2Q]}},N
T@"TSTStockDetails",R,N
T@"TSKFormat",R,N
T@"TSKFormat",R,N,V_textFormat
T@"TSKFormat",R,N,V_booleanFormat
sortRulesWithTableInfo:
groupSortRules
groupSortOrderWithRules:withTableInfo:
groupSortRulesForLevel:tableInfo:
groupSortOrderWithTableInfo:
groupSortOrderByRemovingColumnUIDs:tableInfo:
groupSortOrderByReplacingRuleAtIndex:withRule:withTableInfo:
containsAnyRulesInColumnUIDList:
_groupSortRules
T@"NSArray",R,N,V_groupSortRules
styleDataList
richTextDataList
formulaErrorDataList
decrementColumnCellCount:byAmount:
p_updateNumberOfPopulatedCells
conditionalStyleSetDataList
commentStorageDataList
stringDataList
formatDataList
populatedCustomFormat:value:
formulaDataList
importWarningSetDataList
controlCellSpecDataList
upgrading
multipleChoiceListFormatDataList
preBNCFormatDataList
_setCell:atCellID:tableUID:calculationEngine:conditionalStyleOwner:ignoreFormula:clearImportWarnings:richTextDOLCHint:
assertIsNotIterating
formulaDefinitionPrecedentForTableUID:
p_preBNCKeysForCell:atCellID:
incrementCellCountsAtCellID:
decrementCellCountsAtCellID:
p_preBNCKeysForCell:oldPreBNCStorageRef:callWillModify:
p_updatePreBNCDataListsForCurrentFormat:numberFormat:currencyFormat:dateFormat:durationFormat:baseFormat:customFormat:stepperSliderFormat:mcListFormat:oldPreBNCStorageRef:callWillModify:
populatedCustomFormatWrapperFromCFWrapper:customFormat:
isMarkedCorrupt
p_stashBadKey:forList:
p_preBNCpopulatedCustomFormat:value:
p_populatedMultipleChoiceListFormat:
p_clearDataListEntriesForStorageRef:cellID:
p_clearDataListEntriesInRange:
p_loadDatalist:forLazyReference:completionBlock:
p_loadDatalist:forLazyReference:
p_makeALazyDatalistOfType:isNewForBNC:
initWithObject:
p_makeALazyDatalistOfType:
removeCustomFormatForKey:
p_pasteboardCustomFormatList
p_pasteboardCustomFormatMap
remapCustomFormatKeysWithOldToNewKeyMap:
_needToUpgradeCellStorage
p_cellMapForUpgradingToBraveNewCell
tsu_enumerateKeysAndObjectsUsingBlock:
indirectErrorForRangeReference:hostTableUID:
errorForRichTextStorage:outValue:
stringForCalcEngineAtCellID:refIfAvailable:
richTextStorageForCalcEngineAtCellID:refIfAvailable:
cellCountOfRowAtIndex:
cellCountOfColumnAtIndex:
hasFormulaSyntaxErrorAtCellID:
addPasteboardCustomFormatFromCell:
setupEmptyPasteboardCustomFormatList
beginIteration
endIteration
copyWithOwner:
pasteboardCustomFormatList
setPasteboardCustomFormatList:
tileStorage
setTileStorage:
rowHeaderStorage
setRowHeaderStorage:
columnHeaderStorage
setColumnHeaderStorage:
styleTableReference
setStyleTableReference:
conditionalStyleSetTableReference
setConditionalStyleSetTableReference:
stringTableReference
setStringTableReference:
formulaTableReference
setFormulaTableReference:
controlCellSpecTableReference
setControlCellSpecTableReference:
formulaErrorTableReference
setFormulaErrorTableReference:
richTextTableReference
setRichTextTableReference:
formatTableReference
setFormatTableReference:
commentStorageTableReference
setCommentStorageTableReference:
importWarningSetTableReference
setImportWarningSetTableReference:
preBNCFormatTableReference
setPreBNCFormatTableReference:
pasteboardCustomFormatMap
setPasteboardCustomFormatMap:
mergedCellRanges
setMergedCellRanges:
cellCountValid
setCellCountValid:
storageVersionPreBNC
setStorageVersionPreBNC:
missingPostBNCDatalists
setMissingPostBNCDatalists:
_iteratorRunningCount
_styleDataList
_conditionalStyleSetDataList
_stringDataList
_formulaDataList
_controlCellSpecDataList
_formulaErrorDataList
_richTextDataList
_formatDataList
_commentStorageDataList
_importWarningSetDataList
_preBNCFormatDataList
_foundABadDatalistKey
_upgrading
_cellCountValid
_storageVersionPreBNC
_missingPostBNCDatalists
_pasteboardCustomFormatList
_tileStorage
_rowHeaderStorage
_columnHeaderStorage
_styleTableReference
_conditionalStyleSetTableReference
_stringTableReference
_formulaTableReference
_controlCellSpecTableReference
_formulaErrorTableReference
_richTextTableReference
_formatTableReference
_commentStorageTableReference
_importWarningSetTableReference
_preBNCFormatTableReference
_multipleChoiceListFormatDataList
_pasteboardCustomFormatMap
_mergedCellRanges
T@"TSTTableTileStorage",&,N,V_tileStorage
T@"TSTTableHeaderStorage",&,N,V_rowHeaderStorage
T@"TSTTableHeaderStorage",&,N,V_columnHeaderStorage
T@"TSPLazyReference",&,N,V_styleTableReference
T@"TSPLazyReference",&,N,V_conditionalStyleSetTableReference
T@"TSPLazyReference",&,N,V_stringTableReference
T@"TSPLazyReference",&,N,V_formulaTableReference
T@"TSPLazyReference",&,N,V_controlCellSpecTableReference
T@"TSPLazyReference",&,N,V_formulaErrorTableReference
T@"TSPLazyReference",&,N,V_richTextTableReference
T@"TSPLazyReference",&,N,V_formatTableReference
T@"TSPLazyReference",&,N,V_commentStorageTableReference
T@"TSPLazyReference",&,N,V_importWarningSetTableReference
T@"TSPLazyReference",&,N,V_preBNCFormatTableReference
T@"TSTTableDataList",R,N,V_multipleChoiceListFormatDataList
T@"NSObject<TSDContainerInfo><TSWPStorageParent>",W,N,V_richTextParentInfo
T@"TSKCustomFormatList",&,N,V_pasteboardCustomFormatList
T@"NSMutableDictionary",&,N,V_pasteboardCustomFormatMap
T@"TSTMergeRegionMap",&,N,V_mergedCellRanges
TI,N,V_cellCount
TB,N,V_cellCountValid
TC,N,V_storageVersionPreBNC
TB,N,V_missingPostBNCDatalists
TB,N,V_upgrading
_rank
_doubleValue
Ti,N,V_rank
Td,N,V_doubleValue
T@"NSString",&,N,V_string
T@"TSDCommentStorage",R,N,V_commentStorage
inset
reoriginToZero
setTransform:
setInset:
setReoriginToZero:
_reoriginToZero
_inset
_transform
T{CGAffineTransform=dddddd},N,V_transform
Td,N,V_inset
TB,N,V_reoriginToZero
p_updateAnnotationUUID
initWithStorage:forTableInfo:cellUID:
setAnnotationUUID:
author
copyWithAuthor:
creationDate
text
isInDocument
isFloatingComment
annotationUUID
annotationType
setAuthor:
annotationDisplayStringType
T@"TSKAnnotationAuthor",&,N
isHighlight
T@"TSDCommentStorage",C,N
viewCellCoord
baseCellCoord
mStorage
_annotationUUID
T@"NSString",&,N,V_annotationUUID
T{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}},R,N,V_cellUID
T{TSUViewCellCoord={TSUCellCoord=ISBB}},R,N
T{TSUModelCellCoord={TSUCellCoord=ISBB}},R,N
resetSharedTableConfiguration
T@"TSTConfiguration",R,N
supportsExpandedTables
setMaxNumberOfRows:
setMaxNumberOfColumns:
setMaxNumberOfPopulatedCells:
supportsContainedTextEditing
setSupportsContainedTextEditing:
showsCellEditingToolbar
setShowsCellEditingToolbar:
supportsAutomaticNumberKeyboard
setSupportsAutomaticNumberKeyboard:
supportsMergedCells
setSupportsMergedCells:
supportsHiddenCells
setSupportsHiddenCells:
returnWhileEditingNavigates
setReturnWhileEditingNavigates:
tabWhileEditingNavigates
setTabWhileEditingNavigates:
continuesEditingAfterNavigation
setContinuesEditingAfterNavigation:
arrowKeyAtEdgeWhileEditingNavigates
setArrowKeyAtEdgeWhileEditingNavigates:
arrowKeysWrap
setArrowKeysWrap:
arrowKeysNavigateWhenEditingBeganByTyping
setArrowKeysNavigateWhenEditingBeganByTyping:
backTabWraps
setBackTabWraps:
tabAtEdgeAddsRow
setTabAtEdgeAddsRow:
tabAtEdgeAddsColumn
setTabAtEdgeAddsColumn:
pastesTile
setPastesTile:
allowHorizontalAutoresize
setAllowHorizontalAutoresize:
selectsCellOnInitialTap
setSelectsCellOnInitialTap:
dragByHandleOnly
setDragByHandleOnly:
cornersCanDragResize
setCornersCanDragResize:
setSupportsControlCells:
controlCellUIAlwaysVisible
setControlCellUIAlwaysVisible:
supportsActionMenu
setSupportsActionMenu:
hasLargerFonts
setHasLargerFonts:
setSupportsFrozenHeaders:
setSupportsAutoResizedTables:
supportsCreateChartFromSelection
setSupportsCreateChartFromSelection:
selectionUsesBezierPath
setSelectionUsesBezierPath:
usesSelectionChromeResizer
setUsesSelectionChromeResizer:
showsChromeWhileEditingCell
setShowsChromeWhileEditingCell:
showsSelectionKnobsWhileEditingCell
setShowsSelectionKnobsWhileEditingCell:
setShowsCellWarningIndicator:
supportsCanvasReferenceEditing
setSupportsCanvasReferenceEditing:
setUsesLimitedAutomaticFormatParsing:
setSupportsFormulaEditing:
supportsImplicitEditing
setSupportsImplicitEditing:
allowFreeformFormulaText
setAllowFreeformFormulaText:
allowWhitespaceInFormulas
setAllowWhitespaceInFormulas:
showsHideUnhideUI
setShowsHideUnhideUI:
exportPermanentHidingState
setExportPermanentHidingState:
setShowsCellOverflowIndicator:
supportsAutofill
setSupportsAutofill:
usesLimitedNumberFormatInspector
setUsesLimitedNumberFormatInspector:
setHeadersFrozenByDefault:
setCreateLargeDefaultTables:
setTableNameEnabledInNewTables:
supportsRowColumnAdderKnob
setSupportsRowColumnAdderKnob:
supportsDragDropMoveMode
setSupportsDragDropMoveMode:
supportsDynamicallyHidingRowColumnForDragDrop
setSupportsDynamicallyHidingRowColumnForDragDrop:
formulaEditorEvaluatesFormulas
setFormulaEditorEvaluatesFormulas:
showReferenceHighlightsOnFormulaCellSelection
setShowReferenceHighlightsOnFormulaCellSelection:
setTokenizeFormulaStringLiterals:
exportsCellComments
setExportsCellComments:
exportsCellAnnotations
setExportsCellAnnotations:
supportsCellCommentsActivityLines
setSupportsCellCommentsActivityLines:
cellEditorsCanScrollToNonLocalTableSelection
setCellEditorsCanScrollToNonLocalTableSelection:
supportsRepeatHeaderRowsOnEachPage
setSupportsRepeatHeaderRowsOnEachPage:
supportsTableTranspose
setSupportsTableTranspose:
supportsRowMovesInPaginatedTables
setSupportsRowMovesInPaginatedTables:
setDisableImplicitNaming:
supportsComplexReorganizeUI
setSupportsComplexReorganizeUI:
supportsQuickFilterUI
setSupportsQuickFilterUI:
pasteFilterHidingAsUserHiding
setPasteFilterHidingAsUserHiding:
allowsFullyFilteredTables
setAllowsFullyFilteredTables:
supportsTableColumnAutocomplete
setSupportsTableColumnAutocomplete:
setSupportsInlineAttachments:
followsLinksOnFirstTap
setFollowsLinksOnFirstTap:
setSupportsBidiTablesUI:
supportsPlaceholderGeometry
setSupportsPlaceholderGeometry:
setSupportsStockUI:
shouldZoomOutOnEndEditing
setShouldZoomOutOnEndEditing:
forceZoomInOnBeginEditing
setForceZoomInOnBeginEditing:
setSupportsCategorization:
setSupportsPivotTables:
structuredTextImportConfidenceThreshold
setStructuredTextImportConfidenceThreshold:
structuredTextImportConfidenceThresholdForCanvas
setStructuredTextImportConfidenceThresholdForCanvas:
structuredTextImportSizeLimit
setStructuredTextImportSizeLimit:
allowsBlackDragDropBackground
setAllowsBlackDragDropBackground:
supportsAddBodyRowAtBottomSiriKitIntent
setSupportsAddBodyRowAtBottomSiriKitIntent:
_supportsContainedTextEditing
_showsCellEditingToolbar
_supportsAutomaticNumberKeyboard
_supportsMergedCells
_supportsHiddenCells
_returnWhileEditingNavigates
_tabWhileEditingNavigates
_continuesEditingAfterNavigation
_arrowKeyAtEdgeWhileEditingNavigates
_arrowKeysWrap
_arrowKeysNavigateWhenEditingBeganByTyping
_backTabWraps
_tabAtEdgeAddsRow
_tabAtEdgeAddsColumn
_pastesTile
_allowHorizontalAutoresize
_selectsCellOnInitialTap
_dragByHandleOnly
_cornersCanDragResize
_supportsControlCells
_controlCellUIAlwaysVisible
_supportsActionMenu
_hasLargerFonts
_supportsFrozenHeaders
_supportsAutoResizedTables
_supportsCreateChartFromSelection
_selectionUsesBezierPath
_usesSelectionChromeResizer
_showsChromeWhileEditingCell
_showsSelectionKnobsWhileEditingCell
_showsCellWarningIndicator
_supportsCanvasReferenceEditing
_usesLimitedAutomaticFormatParsing
_supportsFormulaEditing
_supportsImplicitEditing
_allowFreeformFormulaText
_allowWhitespaceInFormulas
_showsHideUnhideUI
_exportPermanentHidingState
_showsCellOverflowIndicator
_supportsAutofill
_usesLimitedNumberFormatInspector
_headersFrozenByDefault
_createLargeDefaultTables
_tableNameEnabledInNewTables
_supportsRowColumnAdderKnob
_supportsDragDropMoveMode
_supportsDynamicallyHidingRowColumnForDragDrop
_formulaEditorEvaluatesFormulas
_showReferenceHighlightsOnFormulaCellSelection
_tokenizeFormulaStringLiterals
_exportsCellComments
_exportsCellAnnotations
_supportsCellCommentsActivityLines
_cellEditorsCanScrollToNonLocalTableSelection
_supportsRepeatHeaderRowsOnEachPage
_supportsTableTranspose
_supportsRowMovesInPaginatedTables
_disableImplicitNaming
_supportsComplexReorganizeUI
_supportsQuickFilterUI
_pasteFilterHidingAsUserHiding
_allowsFullyFilteredTables
_supportsTableColumnAutocomplete
_supportsInlineAttachments
_followsLinksOnFirstTap
_supportsBidiTablesUI
_supportsPlaceholderGeometry
_supportsStockUI
_shouldZoomOutOnEndEditing
_forceZoomInOnBeginEditing
_supportsCategorization
_supportsPivotTables
_allowsBlackDragDropBackground
_supportsAddBodyRowAtBottomSiriKitIntent
_maxNumberOfRows
_maxNumberOfColumns
_maxNumberOfPopulatedCells
_structuredTextImportConfidenceThreshold
_structuredTextImportConfidenceThresholdForCanvas
_structuredTextImportSizeLimit
TI,N,V_maxNumberOfRows
TI,N,V_maxNumberOfColumns
TI,N,V_maxNumberOfPopulatedCells
TB,N,V_supportsContainedTextEditing
TB,N,V_showsCellEditingToolbar
TB,N,V_supportsAutomaticNumberKeyboard
TB,N,V_supportsMergedCells
TB,N,V_supportsHiddenCells
TB,N,V_returnWhileEditingNavigates
TB,N,V_tabWhileEditingNavigates
TB,N,V_continuesEditingAfterNavigation
TB,N,V_arrowKeyAtEdgeWhileEditingNavigates
TB,N,V_arrowKeysWrap
TB,N,V_arrowKeysNavigateWhenEditingBeganByTyping
TB,N,V_backTabWraps
TB,N,V_tabAtEdgeAddsRow
TB,N,V_tabAtEdgeAddsColumn
TB,N,V_pastesTile
TB,N,V_allowHorizontalAutoresize
TB,N,V_selectsCellOnInitialTap
TB,N,V_dragByHandleOnly
TB,N,V_cornersCanDragResize
TB,N,V_supportsControlCells
TB,N,V_controlCellUIAlwaysVisible
TB,N,V_supportsActionMenu
TB,N,V_hasLargerFonts
TB,N,V_supportsFrozenHeaders
TB,N,V_supportsAutoResizedTables
TB,N,V_supportsCreateChartFromSelection
TB,N,V_selectionUsesBezierPath
TB,N,V_usesSelectionChromeResizer
TB,N,V_showsChromeWhileEditingCell
TB,N,V_showsSelectionKnobsWhileEditingCell
TB,N,V_showsCellWarningIndicator
TB,N,V_supportsCanvasReferenceEditing
TB,N,V_usesLimitedAutomaticFormatParsing
TB,N,V_supportsFormulaEditing
TB,N,V_supportsImplicitEditing
TB,N,V_allowFreeformFormulaText
TB,N,V_allowWhitespaceInFormulas
TB,N,V_showsHideUnhideUI
TB,N,V_exportPermanentHidingState
TB,N,V_showsCellOverflowIndicator
TB,N,V_supportsAutofill
TB,N,V_usesLimitedNumberFormatInspector
TB,N,V_headersFrozenByDefault
TB,N,V_createLargeDefaultTables
TB,N,V_tableNameEnabledInNewTables
TB,N,V_supportsRowColumnAdderKnob
TB,N,V_supportsDragDropMoveMode
TB,N,V_supportsDynamicallyHidingRowColumnForDragDrop
TB,N,V_formulaEditorEvaluatesFormulas
TB,N,V_showReferenceHighlightsOnFormulaCellSelection
TB,N,V_tokenizeFormulaStringLiterals
TB,N,V_exportsCellComments
TB,N,V_exportsCellAnnotations
TB,N,V_supportsCellCommentsActivityLines
TB,N,V_cellEditorsCanScrollToNonLocalTableSelection
TB,N,V_supportsRepeatHeaderRowsOnEachPage
TB,N,V_supportsTableTranspose
TB,N,V_supportsRowMovesInPaginatedTables
TB,N,V_disableImplicitNaming
TB,N,V_supportsComplexReorganizeUI
TB,N,V_supportsQuickFilterUI
TB,N,V_pasteFilterHidingAsUserHiding
TB,N,V_allowsFullyFilteredTables
TB,N,V_supportsTableColumnAutocomplete
TB,N,V_supportsInlineAttachments
TB,N,V_followsLinksOnFirstTap
TB,N,V_supportsBidiTablesUI
TB,N,V_supportsPlaceholderGeometry
TB,N,V_supportsStockUI
TB,N,V_shouldZoomOutOnEndEditing
TB,N,V_forceZoomInOnBeginEditing
TB,N,V_supportsCategorization
TB,N,V_supportsPivotTables
Td,N,V_structuredTextImportConfidenceThreshold
Td,N,V_structuredTextImportConfidenceThresholdForCanvas
TQ,N,V_structuredTextImportSizeLimit
TB,N,V_allowsBlackDragDropBackground
TB,N,V_supportsAddBodyRowAtBottomSiriKitIntent
initWithRewriteType:
setTransposedBodyRange:
setTransposedInfo:
initWithFormulaOwnerUID:uuids:areRows:
setRowColumnInfo:
initWithSrcTableUID:srcTract:dstTableUID:destTract:
setRegionMovedInfo:
setShuffleMap:
addCoordMapper:
setSrcCoordMapper:
initWithTableUID:columnUids:rowUids:
initWithMergeRegion:mergeSource:
setMergeInfo:
initWithMergeOriginsMap:reverseMap:
setMergeOriginMovedInfo:
initWithTableUIDMap:
setTableUIDInfo:
setGroupByChange:
initWithGroupByUid:groupNodeUIDMap:
setGroupNodeUIDInfo:
setGroupByUID:
setIsInverse:
rowColumnInfo
setAuxRowColumnInfo:
conditionalStyleOwnerUID
isInverse
transposedInfo
transposedBodyRange
auxRowColumnInfo
mergeInfo
mergeRegion
mergeSource
mergeOriginMovedInfo
tableUIDInfo
groupNodeUIDInfo
groupByChange
initWithOwnerDeletion:
initWithTransposeTable:transposedBodyRange:numberOfFooterRows:
initForMovingRowsOrColumnsInTable:rowColumnUuids:shuffleMap:areRows:srcTract:destTract:
initForSortWithTableUID:rowUids:shuffleMap:
initForReorderRowsWithTableUID:rowUids:shuffleMap:
initForMovingRegionWithSrcTableUID:srcTract:dstTableUID:destTract:
initForMergeCellsWithTableUID:columnUids:rowUids:mergeSource:
initForUndoMergeCellsWithTableUID:columnUids:rowUids:mergeSource:
initForMergeOriginsMovedWithMap:reverseMap:inTableUID:
initForPastingCellsWithTableUID:columnUids:rowUids:
initForTableUIDReassignment:
initForGroupBy:withGroupByChange:
initForGroupBy:groupNodeUIDReassignment:
initWithPivotRuleChange:
pivotInfo
setPivotInfo:
_pivotInfo
T@"TSTFormulaRewrite_PivotInfo",&,N,V_pivotInfo
autofillSelection
setAutofillSelection:
_autofillSelection
T@"TSTAutofillSelection",&,N,V_autofillSelection
setDirtyCellRange:
dirtyCellRanges
setDirtyStrokeRange:
dirtyStrokeRange
invalidateAllChrome
setInvalidateAllChrome:
invalidateAllChromeCaches
setInvalidateAllChromeCaches:
invalidateColumnChrome
setInvalidateColumnChrome:
invalidateRowChrome
setInvalidateRowChrome:
hideChromeContextMenuButton
setHideChromeContextMenuButton:
invalidateKnobs
setInvalidateKnobs:
invalidateSelection
setInvalidateSelection:
invalidateTableName
setInvalidateTableName:
updateEditorRemainders
setUpdateEditorRemainders:
syncReferenceHighlightState
setSyncReferenceHighlightState:
setSetNeedsDisplay:
hideStepperHUD
setHideStepperHUD:
expandDirtyRegionForReferences
setExpandDirtyRegionForReferences:
repositionStockPopover
setRepositionStockPopover:
_dirtyCellRanges
_invalidateAllChrome
_invalidateAllChromeCaches
_invalidateColumnChrome
_invalidateRowChrome
_hideChromeContextMenuButton
_invalidateKnobs
_invalidateSelection
_invalidateTableName
_updateEditorRemainders
_syncReferenceHighlightState
_setNeedsDisplay
_hideStepperHUD
_expandDirtyRegionForReferences
_repositionStockPopover
_dirtyStrokeRange
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_dirtyStrokeRange
TB,N,V_invalidateAllChrome
TB,N,V_invalidateAllChromeCaches
TB,N,V_invalidateColumnChrome
TB,N,V_invalidateRowChrome
TB,N,V_hideChromeContextMenuButton
TB,N,V_invalidateKnobs
TB,N,V_invalidateSelection
TB,N,V_invalidateTableName
TB,N,V_updateEditorRemainders
TB,N,V_syncReferenceHighlightState
TB,N,V_setNeedsDisplay
TB,N,V_hideStepperHUD
TB,N,V_expandDirtyRegionForReferences
TB,N,V_repositionStockPopover
frameInUnscaledCanvas
visibleUnscaledRectForClippingReps
editorSelection
repForLayout:
transformInRoot
convertUnscaledToBoundsRect:
currentScreenScale
initWithLayout:canvas:
contentsScale
finishInit
setCurrentScreenScale:
layerFrameInScaledCanvas
willBeRemoved
updateChildrenFromLayout
deviceBoundsForCellRange:
removeObjectForKey:andWait:
parentStorage
p_cellIDForHyperlinkField:
p_columnForCellID:useCache:
p_contentFrameWithCellID:
p_horizontalAlignmentTransformForHyperlinkWithColumn:cell:cellID:
p_naturalBoundsRectForHyperlinkField:cellID:column:contentFrame:horizontalAlignmentTransform:
boundsRectForSelection:columnArray:includeRuby:includePaginatedAttachments:
p_horizontalAlignmentTransformForHyperlinkWithBounds:inCell:
hyperlinkRegions
smartFieldsWithAttributeKind:intersectingRange:
hyperlinkRegionWithURL:bezierPath:
validateVisibleRect
dirtyCellRegionGatherer
setDirtyCellRegionGatherer:
isTableNameValid
setTableNameValid:
updateFromLayout
canvasVisibleRect
animationStack
deliveryStyle
shouldSuppressBackgrounds
p_getImageFrameForAnimation:
isPrinting
isDrawingIntoPDF
p_drawAnimation:inContext:
initWithSize:offset:renderBlock:
setTextureType:
setTextureOpacity:
addRenderable:forStage:
enumerateChildTexturesForDescription:passingTest:withBlock:
addFinalTexture:forStage:
setRep:
isMagicMove
setIsMagicMove:
setObjectType:
p_addTexture:forAnimationStage:isFinal:description:
p_countOfIdenticalCellsBetweenOutgoingTableInfo:incomingTableInfo:
beginTableNameForChunk:
isRecursivelyDrawingInContext
p_isTableRenderingRotated
isDrawingInFlippedContext
drawText:inContext:minSize:maxSize:anchor:flags:isFlipped:viewScale:
endTableNameForChunk:
currentAnimation
isCanvasInteractive
isClear
paintRect:inContext:
getValue:
valueWithBytes:objCType:
changingCellFillAtCellID:
didDrawCellImageFill:inCellRange:
beginTableRow:
beginTableCell:withCellID:cellHasContents:cellIsPrimary:
endTableCell:withCellID:cellHasContents:cellIsPrimary:
endTableRow:
p_drawLayoutSpace:range:inContext:
p_drawLayoutSpace:dirtyRect:inContext:
mustDrawOnMainThreadForInteractiveCanvas
isInGroup
setRecursivelyDrawingInContext:
p_drawTableNameInContext:animation:
p_lockAndDrawLayoutSpace:checkFrameHasWidthAndHeight:dirtyRect:inContext:
p_fontColorAtCellID:cell:
beginCheckboxCell:
endCheckboxCell
beginRatingCell:
endRatingCell
boundsOfLineFragmentAtIndex:
pushAnimation:
childReps
popAnimation
imageWithCGImage:
p_cellAtUnscaledPoint:
tableRepDelegateClass
magicMoveAttributeMatchPercentBetweenOutgoingObject:incomingObject:mixingTypeContext:
containerInfo
T@"NSObject<TSDContainerInfo>",R,N
searchSelectionBounds
setSearchSelectionBounds:
ratingsDragCellID
setRatingsDragCellID:
references
aspectOperationIsInProgress
zoomOperationIsInProgress
cellDragController
setCellDragController:
selectionDragAbortedOnNewSelection
setSelectionDragAbortedOnNewSelection:
visibleFillKnobs
setVisibleFillKnobs:
T{CGRect={CGPoint=dd}{CGSize=dd}},N
T{TSUCellCoord=ISBB},N
T@"TSTTableReferences",R,N
T@"TSTSelectionDragController",W,N
T@"NSSet",C,N
textFieldShouldBeginEditing:
textFieldDidBeginEditing:
textFieldShouldEndEditing:
textFieldDidEndEditing:
textFieldDidEndEditing:reason:
textField:shouldChangeCharactersInRange:replacementString:
textFieldDidChangeSelection:
textFieldShouldClear:
textFieldShouldReturn:
displayLayer:
drawLayer:inContext:
layerWillDraw:
layoutSublayersOfLayer:
actionForLayer:forKey:
hitRep:withPrecision:
attachmentCellRepForCellID:optionalCell:
hasVisibleCellWarnings
p_removeObservers
p_addObservers
asyncPostTextChangedInRange:
invalidateEditingCell
canvasBoundsForCellRange:
boundsForCellSelection:
contentsRectForCellRangeAcrossSpaces:contentsCenterInfo:canvasFrame:contentsRect:
logicalCellIDForUnscaledCanvasPoint:
naturalBoundsRectForHyperlinkField:
hyperlinkContainerRep
validateStrokesInEditingSpillingTextRange
isFullyVisibleWithBorder:
p_updateDynamicModePropertiesForContainedTextEditing
p_updateDynamicModePropertiesForContainedTextEditingWithSpillingTextRange:
p_resetDynamicModePropertiesForContainedTextEditing
wantsActivityLine
setTableChrome:
textureForDescription:
p_alignedLayerFrameForLayoutSpace:transform:
validateFrozenHeaderCorner
validateFrozenHeaderRows
validateFrozenHeaderColumns
validateFrozenHeaderTableBodyMask
invalidateFrozenHeaders
p_drawBackgroundFillInLayoutSpace:gridRange:context:
p_drawFinalElements:inContext:
canDrawInBackgroundDuringScroll
canDrawInParallel
p_manageEmptyPivotMessage
p_scaledCanvasFrame
p_positionEmptyPivotMessage
p_deleteEmptyPivotMessage
p_drawingCheckboxOrRatingInCell:cellID:
p_drawCheckboxOrRatingInContext:viewScale:contentFrame:cell:cellID:
p_drawGroupingArrowInContext:contentFrame:cell:cellID:groupingArrowState:alignedClipFrame:verticalAlignment:wpColumn:
tappedControlCellAtUnscaledPoint:
tappedStockCellAtUnscaledPoint:
tableRepIsBeingRemovedFromBackgroundLayout
setTableRepIsBeingRemovedFromBackgroundLayout:
animationController
setAnimationController:
delegate
tableChrome
canvasReferenceController
isZoomToEditOperationInProgress
shouldRepositionStockPopover
setShouldRepositionStockPopover:
zoomToEditOperationIsInProgress
setZoomToEditOperationIsInProgress:
setAspectOperationIsInProgress:
setZoomOperationIsInProgress:
zoomToEditVisibleCellRange
setZoomToEditVisibleCellRange:
cellEditingMaskLayers
setCellEditingMaskLayers:
findSelectionHighlightLayer
setFindSelectionHighlightLayer:
_tableRepIsBeingRemovedFromBackgroundLayout
_selectionDragAbortedOnNewSelection
_isZoomToEditOperationInProgress
_tableNameValid
_shouldRepositionStockPopover
_zoomToEditOperationIsInProgress
_aspectOperationIsInProgress
_zoomOperationIsInProgress
_recursivelyDrawingInContext
_ratingsDragCellID
_cellDragController
_visibleFillKnobs
_animationController
_delegate
_tableChrome
_canvasReferenceController
_currentScreenScale
_dirtyCellRegionGatherer
_animationStack
_cellEditingMaskLayers
_findSelectionHighlightLayer
_zoomToEditVisibleCellRange
_searchSelectionBounds
tableNameValid
TB,N,GisTableNameValid,V_tableNameValid
TB,N,V_shouldRepositionStockPopover
TB,N,V_zoomToEditOperationIsInProgress
TB,N,V_aspectOperationIsInProgress
TB,N,V_zoomOperationIsInProgress
Td,N,V_currentScreenScale
T@"TSTCellRegionGatherer",&,N,V_dirtyCellRegionGatherer
recursivelyDrawingInContext
TB,N,GisRecursivelyDrawingInContext,V_recursivelyDrawingInContext
T@"NSMutableArray",R,N,V_animationStack
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_zoomToEditVisibleCellRange
TB,R,N,V_dragByHandleOnly
T@"NSMutableArray",&,N,V_cellEditingMaskLayers
T@"CAShapeLayer",&,N,V_findSelectionHighlightLayer
TB,V_tableRepIsBeingRemovedFromBackgroundLayout
T@"TSTLayoutEngine",R,N
T@"<TSTTableAnimationController>",W,N,V_animationController
T@"<TSTTableRepDelegate>",R,N,V_delegate
T{CGAffineTransform=dddddd},R,N
T@"<TSTTableChromeProvider>",R,N,V_tableChrome
T@"<TSTCanvasReferenceController>",R,W,N,V_canvasReferenceController
T@"TSTCellSelection",R,N
TB,R,N,V_isZoomToEditOperationInProgress
T@"TSTAnimation",R,N
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_searchSelectionBounds
T{TSUCellCoord=ISBB},N,V_ratingsDragCellID
T@"TSTTableReferences",R,N,V_references
T@"TSTSelectionDragController",W,N,V_cellDragController
TB,N,V_selectionDragAbortedOnNewSelection
TB,R,N,V_selectionUsesBezierPath
TB,R,N,V_selectsCellOnInitialTap
TB,R,N,V_usesSelectionChromeResizer
T@"NSSet",C,N,V_visibleFillKnobs
beginTableChunk:
endTableChunk:
beginTableLayoutSpace:
endTableLayoutSpace:
parentRep
childRepIsOnDocSetupCanvas:
childRepIsMasterDrawable:
listStartAtCharIndex:
transformInParent
drawColumn:selection:inContext:isFlipped:viewScale:renderMode:
replaceOccurrencesOfString:withString:options:range:
functionNameForLocalizedString:
functionSpecForFunctionName:
versionShippedIn
@44@0:8@16@24B32@36
@32@0:8@16@24
@72@0:8@16@24@32@40B48@52@60B68
B16@0:8
{_NSRange=QQ}48@0:8@16#24{_NSRange=QQ}32
B24@0:8@16
{_NSRange=QQ}32@0:8{_NSRange=QQ}16
Q24@0:8Q16
v24@0:8@16
v40@0:8@16{_NSRange=QQ}24
v32@0:8@16@24
v48@0:8@16@24{_NSRange=QQ}32
@16@0:8
@32@0:8{_NSRange=QQ}16
@36@0:8{_NSRange=QQ}16B32
v16@0:8
v32@0:8{_NSRange=QQ}16
v24@0:8Q16
v32@0:8Q16@24
B20@0:8C16
@24@0:8@16
@36@0:8@16C24@28
{TSKUIDStruct=QQ}16@0:8
I16@0:8
^v16@0:8
@60@0:8@16@24C32{TSKUIDStruct=QQ}36@52
@36@0:8r^v16@24C32
v28@0:8^v16B24
v32@0:8@16B24B28
@32@0:8C16C20r^{TSKUIDStruct=QQ}24
@20@0:8C16
@52@0:8@16C24Q28Q36^{TSUPreserveFlags=C}44
v36@0:8@16@24C32
v28@0:8@16C24
v32@0:8@16C24C28
@56@0:8r^{TSKUIDStruct=QQ}16I24@28C36@40^Q48
v44@0:8r^{TSKUIDStruct=QQ}16@24C32@36
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}16@0:8
{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}16@0:8
v24@0:8@?16
v24@0:8r^{TSKUIDStruct=QQ}16
B24@0:8r^{TSKUIDStruct=QQ}16
@32@0:8@16S24B28
@20@0:8B16
@36@0:8B16@20S28B32
{TSKUIDStruct=QQ}44@0:8@16q24C32@36
@36@0:8B16@20q28
v32@0:8^B16@?24
v36@0:8C16^B20@?28
v28@0:8C16@?20
v40@0:8C16C20^B24@?32
v32@0:8C16C20@?24
@24@0:8r^{TSKUIDStruct=QQ}16
@28@0:8r^{TSKUIDStruct=QQ}16C24
C16@0:8
{TSKUIDStruct="_lower"Q"_upper"Q}
@"TSCECellValue"
@"TSTGroupValueTuple"
@"TSTGroupBy"
{unordered_map<TSKUIDStruct, TSTAggNode *, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSTAggNode *>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
@"NSMutableDictionary"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
{TSUIndexSet="_isEmpty"b1"_hasSingleRange"b1"_singleRange"{TSUIndexRange="_begin"q"_end"q}"_multipleRanges"^{?}}
@"TSTGroupNode"
@"TSTGroupNodeFormatManager"
{unordered_map<TSKUIDStruct, TSTGroupNode *, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSTGroupNode *>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
@"TSCEMutableUIDSet"
@32@0:8@16{TSUCellCoord=ISBB}24
@32@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
{_NSRange=QQ}16@0:8
@84@0:8@16@24^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}32^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}40@48q56{_NSRange=QQ}64B80
@84@0:8@16@24{TSUCellCoord=ISBB}32{TSUCellCoord=ISBB}40@48q56{_NSRange=QQ}64B80
@64@0:8@16@24{TSUCellCoord=ISBB}32{TSUCellCoord=ISBB}40@48q56
@56@0:8@16@24{TSUCellCoord=ISBB}32{TSUCellCoord=ISBB}40@48
@56@0:8@16@24{TSUCellCoord=ISBB}32{TSUCellCoord=ISBB}40q48
@48@0:8@16@24{TSUCellCoord=ISBB}32{TSUCellCoord=ISBB}40
@64@0:8@16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24q40{TSUCellCoord=ISBB}48{TSUCellCoord=ISBB}56
@32@0:8@16q24
@40@0:8@16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24
@40@0:8@16{TSUCellCoord=ISBB}24q32
@32@0:8@16I24I28
@32@0:8@16S24I28
@40@0:8@16q24I32I36
@40@0:8@16@24{TSUColumnRowOffset=ii}32
{TSUCellCoord=ISBB}16@0:8
{TSUCellCoord=ISBB}24@0:8@16
@32@0:8r^v16@24
v32@0:8^v16@24
@56@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16@32q40{TSUCellCoord=ISBB}48
@64@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16@32{TSUCellCoord=ISBB}40{TSUCellCoord=ISBB}48q56
@28@0:8@16B24
v32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
v32@0:8q16I24I28
@24@0:8^{_NSZone=}16
B24@0:8{TSUCellCoord=ISBB}16
B24@0:8o^C16
q16@0:8
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16@0:8
v48@0:8{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
@"TSTTableInfo"
@"TSTCellUIDRegion"
@"TSTCellRegion"
{_NSRange="location"Q"length"Q}
{TSKUIDStructCoord="_column"{TSKUIDStruct="_lower"Q"_upper"Q}"_row"{TSKUIDStruct="_lower"Q"_upper"Q}}
{RefTypeHolder<TSCERangeRef, 0>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}56@0:8{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}16@48
{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}56@0:8{RefTypeHolder<TSCERangeRef, 0>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}16@48
{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}32@0:8@16@24
{RefTypeHolder<TSCERangeRef, 0>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}32@0:8@16@24
{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}40@0:8@16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24^{TSUPreserveFlags=C}32
{TSUCellCoord=ISBB}40@0:8@16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24^{TSUPreserveFlags=C}32
@24@0:8@"TSCECalculationEngine"16
{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}32@0:8@"NSString"16@"TSCEReferenceParsingContext"24
{RefTypeHolder<TSCERangeRef, 0>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}32@0:8@"NSString"16@"TSCEReferenceParsingContext"24
{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}40@0:8@"NSString"16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24^{TSUPreserveFlags=C}32
{TSUCellCoord=ISBB}40@0:8@"NSString"16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24^{TSUPreserveFlags=C}32
@"TSCECategoryRef"32@0:8@"NSString"16@"TSCEReferenceParsingContext"24
@"TSCECategoryRef"24@0:8@"TSCEReferenceParsingContext"16
@"TSCEWrappedRangeRef"24@0:8@"TSCEReferenceParsingContext"16
@"TSCECellTractRef"24@0:8@"TSCEReferenceParsingContext"16
{TSUChromeCellCoord={TSUCellCoord=ISBB}}48@0:8@16^{TSCETableResolver=^^?}24^{TSUPreserveFlags=C}32^@40
{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}56@0:8@16^{TSCETableResolver=^^?}24@32^{TSCETableResolver=^^?}40@48
B48@0:8@16^@24^@32^@40
{TSKUIDStruct=QQ}64@0:8@16@24@32@40^{TSUPreserveFlags=C}48^Q56
@48@0:8@16@24Q32@40
@"TSCECalculationEngine"
@"NSCharacterSet"
B32@0:8{TSKUIDStruct=QQ}16
v32@0:8r^{TSKUIDStruct=QQ}16r^{TSKUIDStruct=QQ}24
q24@0:8@16
q32@0:8@16@24
@32@0:8d16@24
q32@0:8@16@"<TSDMixingTypeContext>"24
@"NSArray"16@0:8
@20@0:8S16
@20@0:8I16
@"TSTStrokeLayer"20@0:8S16
@"TSTStrokeLayer"20@0:8I16
@"TSTTableStyle"16@0:8
v24@0:8@"TSTTableStyle"16
@"TSTCellStyle"16@0:8
v24@0:8@"TSTCellStyle"16
@"TSWPParagraphStyle"16@0:8
v24@0:8@"TSWPParagraphStyle"16
@"TSWPShapeStyle"16@0:8
v24@0:8@"TSWPShapeStyle"16
@"TSDStroke"16@0:8
{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16@0:8
@32@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16o^B24
{TSUModelRowIndex=I}16@0:8
{TSUModelColumnIndex=S}16@0:8
@"TSWPParagraphStyle"32@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16o^B24
v24@0:8@?<v@?@"TSTCell"{TSUCellCoord=ISBB}^B>16
@72@0:8@16{TSKUIDStruct=QQ}24@40@48@56@64
@64@0:8@16r^v24r^v32@40@48@56
@56@0:8@16I24I28@32@40@48
@52@0:8@16@24@32@40B48
@60@0:8@16@24@32@40B48q52
@56@0:8@16@24@32@40@48
v38@0:8r^v16r^v24{TSUModelRowIndex=I}32{TSUModelColumnIndex=S}36
v40@0:8@16@24@32
v48@0:8@16@24@32@40
C18@0:8{TSUModelColumnIndex=S}16
B24@0:8Q16
{?=II}16@0:8
v20@0:8B16
d16@0:8
v24@0:8d16
v20@0:8{TSUModelRowIndex=I}16
v18@0:8{TSUModelColumnIndex=S}16
i16@0:8
@24@0:8{TSUModelRowIndex=I}16C20
@22@0:8{TSUModelColumnIndex=S}16C18
v32@0:8{TSKUIDStruct=QQ}16
{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}24@0:8Q16
Q24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
Q20@0:8{TSUModelRowIndex=I}16
Q18@0:8{TSUModelColumnIndex=S}16
@32@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
i32@0:8o@16Q24
i32@0:8o@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24
B24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
i36@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24B32
i32@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24
@24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
v40@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24@32
i48@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24B32B36@40
i40@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24B32B36
i24@0:8@16
i32@0:8@16B24B28
@32@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16^B24
C24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
@32@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16@24
i24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
i28@0:8@16{TSUModelRowIndex=I}24
@28@0:8{TSUModelRowIndex=I}16o^B20
i26@0:8@16{TSUModelColumnIndex=S}24
@26@0:8{TSUModelColumnIndex=S}16o^B18
@36@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16B24o^Q28
@24@0:8Q16
d28@0:8{TSUModelRowIndex=I}16o^B20
d26@0:8{TSUModelColumnIndex=S}16o^B18
v28@0:8d16{TSUModelRowIndex=I}24
v26@0:8d16{TSUModelColumnIndex=S}24
d24@0:8Q16
{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
i52@0:8{_NSRange=QQ}16r^v32@40B48
i42@0:8{TSUModelColumnIndex=S}16r^v18@26Q34
i48@0:8{TSUModelRowIndex=I}16r^v20@28Q36B44
v24@0:8{TSUModelRowIndex=I}16{TSUModelRowIndex=I}20
v20@0:8{TSUModelColumnIndex=S}16{TSUModelColumnIndex=S}18
v36@0:8{_NSRange=QQ}16{TSUModelRowIndex=I}32
v34@0:8{_NSRange=QQ}16{TSUModelColumnIndex=S}32
C20@0:8{TSUModelRowIndex=I}16
v28@0:8C16r^{TSUModelRowIndex=I}20
v28@0:8C16r^{TSUModelColumnIndex=S}20
@28@0:8{TSUCellCoord=ISBB}16B24
@28@0:8S16o^q20
@20@0:8{TSUModelRowIndex=I}16
@24@0:8{TSUCellCoord=ISBB}16
v32@0:8@16I24i28
v32@0:8@16S24i28
v48@0:8@16I24i28{TSTSimpleRange=qQ}32
v48@0:8@16S24i28{TSTSimpleRange=qQ}32
@32@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24
i36@0:8o^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16{TSUModelCellCoord={TSUCellCoord=ISBB}}24B32
i40@0:8o^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16{TSUModelCellCoord={TSUCellCoord=ISBB}}24B32B36
v28@0:8@16B24
v36@0:8r^v16@24B32
v36@0:8@16B24B28B32
v36@0:8@16{TSUColumnRowOffset=ii}24B32
{TSCECellCoordSet={map<unsigned short, TSUIndexSet, std::less<unsigned short>, std::allocator<std::pair<const unsigned short, TSUIndexSet>>>={__tree<std::__value_type<unsigned short, TSUIndexSet>, std::__map_value_compare<unsigned short, std::__value_type<unsigned short, TSUIndexSet>, std::less<unsigned short>, true>, std::allocator<std::__value_type<unsigned short, TSUIndexSet>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned short, TSUIndexSet>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<unsigned short, std::__value_type<unsigned short, TSUIndexSet>, std::less<unsigned short>, true>>=Q}}}}16@0:8
v24@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16
v32@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{TSUModelCellCoord={TSUCellCoord=ISBB}}24@0:8@16
v40@0:8@16Q24@?32
B32@0:8{TSUCellCoord=ISBB}16^@24
B24@0:8^@16
B32@0:8^@16^B24
v40@0:8@16B24B28@32
S16@0:8
v20@0:8S16
@"TSTHiddenStateFormulaOwner"
@"TSTStrokeSidecar"
{TSCECellRefSet="_coordsForOwnerUid"{map<TSKUIDStruct, TSCECellCoordSet, std::less<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSCECellCoordSet>>>="__tree_"{__tree<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>, std::allocator<std::__value_type<TSKUIDStruct, TSCECellCoordSet>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>>="__value_"Q}}}}
{vector<TSTCellValueType, std::allocator<TSTCellValueType>>="__begin_"^C"__end_"^C"__end_cap_"{__compressed_pair<TSTCellValueType *, std::allocator<TSTCellValueType>>="__value_"^C}}
{map<unsigned long, TSTGroupingType, std::less<unsigned long>, std::allocator<std::pair<const unsigned long, TSTGroupingType>>>="__tree_"{__tree<std::__value_type<unsigned long, TSTGroupingType>, std::__map_value_compare<unsigned long, std::__value_type<unsigned long, TSTGroupingType>, std::less<unsigned long>, true>, std::allocator<std::__value_type<unsigned long, TSTGroupingType>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned long, TSTGroupingType>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<unsigned long, std::__value_type<unsigned long, TSTGroupingType>, std::less<unsigned long>, true>>="__value_"Q}}}
{TSUModelColumnIndex="_column"S}
{TSUModelRowIndex="_row"I}
@"TSTTableDataStore"
@"NSString"
@"TSTTableStylePreset"
@"TSTTableStyle"
@"TSTTableTranslator"
@"TSTCellStyle"
@"TSWPParagraphStyle"
@"TSWPShapeStyle"
@"TSTCellDictionary"
@"TSTConcurrentMutableCellUIDSet"
@"TSTConditionalStyleFormulaOwner"
@"TSTMergeOwner"
@"TSTCategoryOwner"
@"TSTPivotOwner"
@"TSTHiddenStatesOwner"
@"TSCEHauntedOwner"
@"TSTTableSortOrder"
@"TSTSortRuleReferenceTracker"
@"TSTColumnRowUIDMap"
@"TSTCellWillChangeDistributor"
@"TSWPStorage"
@"NSMapTable"
@"TSTStructuredTextImportRecord"
@"TSTTableFilterSet"
@"TSTPencilAnnotationOwner"
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16@0:8
@"TSTCell"16@0:8
@"TSTCellFormulaSpec"16@0:8
v24@0:8{TSUCellCoord=ISBB}16
{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}
@"TSTCell"
@"TSTCellFormulaSpec"
{TSUCellRect="origin"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}"size"{?="numberOfColumns"I"numberOfRows"I}}
@36@0:8@16B24@28
v28@0:8@16I24
@28@0:8I16o^I20
^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}24@0:8S16I20
q40@0:8@16S24I28^{?=IIIIIIIIIS}32
i24@0:8S16I20
@24@0:8S16I20
v28@0:8S16I20S24
v24@0:8I16I20
v28@0:8I16I20B24
@24@0:8I16I20
v32@0:8@16I24B28
@"NSPointerArray"
v32@0:8d16{TSUCellCoord=ISBB}24
{vector<std::pair<TSUCellCoord, double>, std::allocator<std::pair<TSUCellCoord, double>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::pair<TSUCellCoord, double> *, std::allocator<std::pair<TSUCellCoord, double>>>="__value_"^v}}
{unordered_map<unsigned short, double, std::hash<unsigned short>, std::equal_to<unsigned short>, std::allocator<std::pair<const unsigned short, double>>>="__table_"{__hash_table<std::__hash_value_type<unsigned short, double>, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, double>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, double>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>, std::allocator<std::__hash_value_type<unsigned short, double>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, double>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, double>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, double>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, double>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, double>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, double>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, double>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned short, double>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, double>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, double>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, double>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>>="__value_"f}}}
B40@0:8d16d24d32
d20@0:8I16
@40@0:8d16d24d32
@44@0:8I16d20d28d36
d32@0:8d16^B24
d32@0:8@16@24
@"NSString"24@0:8@"<TSCEReferenceResolving>"16
@"NSString"24@0:8@"<TSCEResolverContainer>"16
@"<TSCEResolverContainer>"28@0:8@"NSString"16B24
@"NSArray"24@0:8@"NSString"16
@"<TSCEReferenceResolving>"32@0:8@"NSString"16@"<TSCEReferenceResolving>"24
@"<TSCEReferenceResolving>"32@0:8@"NSString"16@"NSString"24
@"NSEnumerator"16@0:8
@"NSEnumerator"24@0:8Q16
@"NSString"24@0:8@"<TSKModel>"16
v24@0:8@"<TSKModelVisitor>"16
v28@0:8@16S24
v28@0:8@"TSCECalculationEngine"16S24
v24@0:8@"TSCECalculationEngine"16
@"TSPObject<TSCECalculationEngineRegistration>"16@0:8
@"<TSCEFormulaOwning>"16@0:8
I24@0:8Q16
@40@0:8q16{CGPoint=dd}24
@48@0:8q16@24@32@40
@52@0:8q16@24@32@40B48
@40@0:8{TSKUIDStruct=QQ}16@32
v40@0:8@16@24Q32
v48@0:8@16@24Q32Q40
B32@0:8@16@24
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}44@0:8Q16{?=II}24I32I36I40
Q40@0:8{TSUCellCoord=ISBB}16I24I28I32I36
@24@0:8@"TSPObjectContext"16
v24@0:8@"TSDInfoGeometry"16
v24@0:8@"NSObject<TSDInfo>"16
@"TSDInfoGeometry"16@0:8
@"NSObject<TSDInfo>"16@0:8
@"TSPObject<TSDOwningAttachment>"16@0:8
v24@0:8@"TSPObject<TSDOwningAttachment>"16
B24@0:8@"NSObject<TSDInfo>"16
@"<TSDInfoUUIDPathPrefixComponentsProvider>"16@0:8
@"TSKCollaboratorCursor"24@0:8@"TSKSelectionPath"16
@24@0:8@?16
@"TSKSearch"24@0:8@?<v@?@"<TSKSearchReference>">16
v24@0:8@?<v@?@"<TSKSearchReference>">16
v24@0:8@"TSKSearch"16
@"TSKCommand"24@0:8@"NSObject<TSKSearchReplaceProvider>"16
v40@0:8@"NSString"16@"TSSTheme"24Q32
@"NSSet"16@0:8
v24@0:8@?<@"TSSStyle"@?@"TSSStyle">16
v24@0:8@"TSSStylesheet"16
{TSKUIDStruct=QQ}20@0:8S16
{TSKUIDStruct=QQ}20@0:8I16
S32@0:8{TSKUIDStruct=QQ}16
I32@0:8{TSKUIDStruct=QQ}16
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}24@0:8@16
@24@0:8r^v16
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}32@0:8{_NSRange=QQ}16
{_NSRange=QQ}24@0:8r^v16
r^v16@0:8
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}24@0:8r^v16
v28@0:8[16C]16I24
v28@0:8[16C]16S24
I24@0:8[16C]16
S24@0:8[16C]16
{TSKUIDStruct=QQ}28@0:8@16B24
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24@0:8r^v16
{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}}32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}16@0:8
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}24@0:8@"NSIndexSet"16
@"NSMutableIndexSet"24@0:8r^v16
@"NSIndexSet"24@0:8r^v16
@"TSCEMutableUIDSet"28@0:8@"NSIndexSet"16B24
@"NSMutableIndexSet"28@0:8@"TSCEUIDSet"16B24
@"NSMutableIndexSet"36@0:8@"TSCEUIDSet"16B24@"TSCEMutableUIDSet"28
{TSKUIDStruct=QQ}28@0:8@"TSCEUIDSet"16B24
B20@0:8I16
B20@0:8S16
I20@0:8I16
S20@0:8S16
B32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
I32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
@32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
B36@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16C32
B24@0:8I16C20
B24@0:8S16C20
C20@0:8I16
C20@0:8S16
@"NSIndexSet"32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
@"NSMutableIndexSet"32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
@"NSIndexSet"24@0:8@"TSTCellRegion"16
@"NSIndexSet"24@0:8@"NSIndexSet"16
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
@"TSTMergeListWrapper"32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
@"TSTMergeListWrapper"24@0:8@"TSTCellRegion"16
@"TSTCellRegion"24@0:8@"TSTCellRegion"16
@56@0:8@16@24I32I36@40@48
@48@0:8@16@24I32I36@40
@40@0:8@16@24I32I36
@40@0:8@16@24@32
@64@0:8@16@24{TSUCellRect={TSUCellCoord=ISBB}{?=II}}32{_NSRange=QQ}48
@72@0:8@16@24{TSUCellRect={TSUCellCoord=ISBB}{?=II}}32{_NSRange=QQ}48@64
@40@0:8@16@24{TSUCellCoord=ISBB}32
@56@0:8@16@24@32B40q44B52
v28@0:8q16B24
v40@0:8@16@24d32
v40@0:8{TSUCellCoord=ISBB}16{TSUCellCoord=ISBB}24{TSUCellCoord=ISBB}32
v32@0:8@16{TSUCellCoord=ISBB}24
v20@0:8I16
@18@0:8{TSUModelColumnIndex=S}16
Q32@0:8Q16@24
@28@0:8B16@20
Q24@0:8@16
v48@0:8@16@24@32d40
v24@0:8q16
v32@0:8{CGSize=dd}16
v32@0:8{CGPoint=dd}16
v32@0:8d16d24
v28@0:8{TSUColumnRowOffset=ii}16B24
B32@0:8@16@?24
i32@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24
i24@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
v40@0:8@16{TSUCellCoord=ISBB}24@32
@32@0:8{TSUCellCoord=ISBB}16@24
v36@0:8i16@20{TSUCellCoord=ISBB}28
v48@0:8{TSUCellCoord=ISBB}16^B24^@32^i40
v64@0:8@16{TSUCellCoord=ISBB}24^B32^i40^i48^@56
v20@0:8i16
@18@0:8{TSUViewColumnIndex=S}16
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24@0:8Q16
Q24@0:8{TSUCellCoord=ISBB}16
Q20@0:8I16
Q20@0:8S16
Q48@0:8{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
i32@0:8@16Q24
i32@0:8o@16{TSUCellCoord=ISBB}24
i36@0:8@16{TSUCellCoord=ISBB}24B32
i32@0:8@16{TSUCellCoord=ISBB}24
B24@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
v36@0:8@16{TSUCellCoord=ISBB}24B32
i48@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24B32B36@40
i40@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24B32B36
v48@0:8@16{TSUViewCellCoord={TSUCellCoord=ISBB}}24@32@40
@36@0:8@16B24B28B32
i40@0:8@16{TSUCellCoord=ISBB}24@32
C24@0:8{TSUCellCoord=ISBB}16
C24@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
i32@0:8@16r^{TSKUIDStruct=QQ}24
@28@0:8I16o^B20
@28@0:8S16o^B20
@36@0:8{TSUCellCoord=ISBB}16B24o^Q28
@32@0:8{TSUCellCoord=ISBB}16o^B24
@32@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16o^B24
@28@0:8S16@20
@40@0:8{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}16o^B32
{TSUCellCoord=ISBB}24@0:8{TSUCellCoord=ISBB}16
d28@0:8I16o^B20
d28@0:8S16o^B20
v28@0:8d16S24
v28@0:8d16I24
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24@0:8{TSUCellCoord=ISBB}16
v28@0:8S16I20B24
i44@0:8S16r^v20@28Q36
i44@0:8I16r^v20@28Q36
i48@0:8I16r^v20@28Q36B44
v24@0:8S16I20
v36@0:8{_NSRange=QQ}16I32
v36@0:8{_NSRange=QQ}16S32
@24@0:8q16
v32@0:8@16@?24
{vector<TSUCellRect, std::allocator<TSUCellRect>>=^{TSUCellRect}^{TSUCellRect}{__compressed_pair<TSUCellRect *, std::allocator<TSUCellRect>>=^{TSUCellRect}}}32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
{vector<TSUCellRect, std::allocator<TSUCellRect>>=^{TSUCellRect}^{TSUCellRect}{__compressed_pair<TSUCellRect *, std::allocator<TSUCellRect>>=^{TSUCellRect}}}24@0:8@16
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16@0:8
i36@0:8o^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16{TSUCellCoord=ISBB}24B32
{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}24@0:8I16I20
{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}24@0:8S16S20
@32@0:8@16^@24
B56@0:8{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}16o^{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}32o^{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}40o^{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}48
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24@0:8{TSUCellCoord=ISBB}16
{TSUCellCoord=ISBB}48@0:8{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
B40@0:8@16^v24^v32
v40@0:8@16^v24^v32
@36@0:8@16B24^B28
@52@0:8{vector<TSKUIDStructCoord, std::allocator<TSKUIDStructCoord>>=^{TSKUIDStructCoord}^{TSKUIDStructCoord}{__compressed_pair<TSKUIDStructCoord *, std::allocator<TSKUIDStructCoord>>=^{TSKUIDStructCoord}}}16B40^B44
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}28@0:8{TSUCellCoord=ISBB}16B24
i32@0:8o@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24
i36@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24B32
@56@0:8{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16o^B48
B20@0:8B16
v96@0:8@16{TSKUIDStruct=QQ}24d40{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}}48
v88@0:8@16@24@32q40@48{TSKUIDStruct=QQ}56{TSKUIDStruct=QQ}72
{TSUChromeColumnIndex=S}16@0:8
{TSUChromeRowIndex=I}16@0:8
S24@0:8@16
@28@0:8C16@?20
@28@0:8C16@20
@28@0:8C16r^v20
@24@0:8C16C20
{_NSRange=QQ}20@0:8I16
q24@0:8{TSUCellCoord=ISBB}16
B40@0:8{TSKUIDStruct=QQ}16q32
C24@0:8r^{TSKUIDStruct=QQ}16
C36@0:8{TSKUIDStruct=QQ}16C32
v40@0:8C16{TSKUIDStruct=QQ}20C36
d20@0:8C16
v28@0:8d16C24
@28@0:8i16@20
v32@0:8r^v16@24
{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}}16@0:8
v64@0:8{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}}16
@"TSTTableModel"
@"TSTConditionalStyleSet"
@"TSTTablePartitioner"
@"TSTLayoutEngine"
@"TSTSummaryModel"
@"NSDictionary"
@"TSTLayoutHint"
@"TSTCategoryOrder"
@"TSTPivotRowColumnOrder"
@"TSTHiddenStates"
@"TSCECoordMapper"
@"TSTArchivedLayoutEngineBundle"
{TSKUIDStructTract="_colIdList"{TSKUIDStructVectorTemplate<TSKUIDStruct>="__begin_"^{TSKUIDStruct}"__end_"^{TSKUIDStruct}"__end_cap_"{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>="__value_"^{TSKUIDStruct}}}"_rowIdList"{TSKUIDStructVectorTemplate<TSKUIDStruct>="__begin_"^{TSKUIDStruct}"__end_"^{TSKUIDStruct}"__end_cap_"{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>="__value_"^{TSKUIDStruct}}}}
B20@0:8i16
@20@0:8i16
f20@0:8i16
i20@0:8i16
d20@0:8i16
v40@0:8@16@24{TSUCellCoord=ISBB}32
v56@0:8@16@24@32Q40@48
@64@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24@32@40@48@56
@80@0:8@16@24r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}32@40@48@56@64@72
@52@0:8@16Q24B32@36@44
@48@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16Q32Q40
v56@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16Q32Q40@?48
{vector<TSUCellRect, std::allocator<TSUCellRect>>="__begin_"^{TSUCellRect}"__end_"^{TSUCellRect}"__end_cap_"{__compressed_pair<TSUCellRect *, std::allocator<TSUCellRect>>="__value_"^{TSUCellRect}}}
@36@0:8@16r^v24C32
@44@0:8@16r^{TSKUIDStruct=QQ}24r^v32C40
v20@0:8C16
v28@0:8r^v16C24
{RefTypeHolder<TSCERangeRef, 0>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}16@0:8
{RefTypeHolder<TSCERangeRef, 1>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}16@0:8
{vector<RefTypeHolder<TSCERangeRef, 0>, std::allocator<RefTypeHolder<TSCERangeRef, 0>>>=^v^v{__compressed_pair<RefTypeHolder<TSCERangeRef, 0> *, std::allocator<RefTypeHolder<TSCERangeRef, 0>>>=^v}}16@0:8
{vector<RefTypeHolder<TSCERangeRef, 1>, std::allocator<RefTypeHolder<TSCERangeRef, 1>>>=^v^v{__compressed_pair<RefTypeHolder<TSCERangeRef, 1> *, std::allocator<RefTypeHolder<TSCERangeRef, 1>>>=^v}}16@0:8
{TSUViewCellCoord={TSUCellCoord=ISBB}}16@0:8
{TSUModelCellCoord={TSUCellCoord=ISBB}}16@0:8
{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}16@0:8
v48@0:8{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}16
@"TSCECellTractRef"
@"TSTColumnRowUIDMapper"
{RefTypeHolder<TSCERangeRef, 2>="_ref"{TSCERangeRef="range"{TSCERangeCoordinate="_topLeft"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}"_bottomRight"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}}"_tableUID"{TSKUIDStruct="_lower"Q"_upper"Q}}}
v24@0:8@?<v@?@"<TSTCellIteratorData>"^B>16
@"<TSTCellIteratorData>"16@0:8
@"TSTTableInfo"16@0:8
@72@0:8@16@24@32Q40Q48{TSUCellRect={TSUCellCoord=ISBB}{?=II}}56
@64@0:8@16@24Q32Q40{TSUCellRect={TSUCellCoord=ISBB}{?=II}}48
@40@0:8@16Q24Q32
@56@0:8@16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24Q40Q48
@48@0:8@16@24Q32Q40
{unordered_map<unsigned short, TSUCellRect, std::hash<unsigned short>, std::equal_to<unsigned short>, std::allocator<std::pair<const unsigned short, TSUCellRect>>>="__table_"{__hash_table<std::__hash_value_type<unsigned short, TSUCellRect>, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, TSUCellRect>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, TSUCellRect>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>, std::allocator<std::__hash_value_type<unsigned short, TSUCellRect>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSUCellRect>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSUCellRect>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSUCellRect>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSUCellRect>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSUCellRect>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSUCellRect>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSUCellRect>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned short, TSUCellRect>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSUCellRect>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, TSUCellRect>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, TSUCellRect>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>>="__value_"f}}}
@"TSTMutableCellIteratorData"
@"<TSTCellRegionIterating><TSTMutableCellIteratorDataUpdating>"
@"<TSTCellRegionIterating>"
@32@0:8Q16Q24
v48@0:8@16Q24@32Q40
v56@0:8@16Q24Q32@40Q48
v40@0:8@16r^v24@32
{CGSize=dd}32@0:8@16@24
^{TSCEFunctionArgSpec=}16@0:8
v40@0:8@16{TSTCSENodeData=QQ}24
@40@0:8{TSTCSENodeData=QQ}16@32
{unordered_map<TSTExpressionNode *, TSTCSENodeData, std::hash<TSTExpressionNode *>, std::equal_to<TSTExpressionNode *>, std::allocator<std::pair<TSTExpressionNode *const, TSTCSENodeData>>>="__table_"{__hash_table<std::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, std::__unordered_map_hasher<TSTExpressionNode *, std::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, std::hash<TSTExpressionNode *>, std::equal_to<TSTExpressionNode *>, true>, std::__unordered_map_equal<TSTExpressionNode *, std::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, std::equal_to<TSTExpressionNode *>, std::hash<TSTExpressionNode *>, true>, std::allocator<std::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSTExpressionNode *, std::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, std::hash<TSTExpressionNode *>, std::equal_to<TSTExpressionNode *>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSTExpressionNode *, std::__hash_value_type<TSTExpressionNode *, TSTCSENodeData>, std::equal_to<TSTExpressionNode *>, std::hash<TSTExpressionNode *>, true>>="__value_"f}}}
Q24@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16
C18@0:8{TSUViewColumnIndex=S}16
C20@0:8{TSUViewRowIndex=I}16
Q20@0:8{TSUViewRowIndex=I}16
{TSUViewColumnIndex=S}16@0:8
{TSUViewRowIndex=I}16@0:8
C24@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16
v44@0:8{TSUViewRowIndex=I}16@?20@?28@?36
@28@0:8{TSUViewRowIndex=I}16o^B20
v42@0:8{TSUViewColumnIndex=S}16@?18@?26@?34
@26@0:8{TSUViewColumnIndex=S}16o^B18
i40@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16@?24@?32
@36@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16B24o^Q28
@32@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16o^B24
i36@0:8@16{TSUViewCellCoord={TSUCellCoord=ISBB}}24B32
i36@0:8o^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16{TSUViewCellCoord={TSUCellCoord=ISBB}}24B32
d28@0:8{TSUViewRowIndex=I}16o^B20
d26@0:8{TSUViewColumnIndex=S}16o^B18
v28@0:8d16{TSUViewRowIndex=I}24
v26@0:8d16{TSUViewColumnIndex=S}24
B24@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16
C28@0:8{TSUViewRowIndex=I}16^Q20
C26@0:8{TSUViewColumnIndex=S}16^Q18
Q18@0:8{TSUViewColumnIndex=S}16
{os_unfair_lock_s=I}16@0:8
v20@0:8{os_unfair_lock_s=I}16
@"NSIndexSet"
@24@0:8I16B20
{vector<TSTCell *, std::allocator<TSTCell *>>=^@^@{__compressed_pair<TSTCell *__strong *, std::allocator<TSTCell *>>=^@}}32@0:8^v16@?24
^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}20@0:8S16
v36@0:8S16@20^{?=IIIIIIIIIS}28
v36@0:8@16S24^{?=IIIIIIIIIS}28
q36@0:8@16S24^{?=IIIIIIIIIS}28
Q24@0:8S16I20
v28@0:8S16S20I24
v40@0:8{_NSRange=QQ}16@?32
v44@0:8{_NSRange=QQ}16B32@?36
B28@0:8S16Q20
{TSTTableTileRowBuffer="_private"{?="cellData"*"cellBufferSize"Q"allocatedCellBufferSize"Q"offsets"^S"offsetBufferCount"S"wideOffsets"B}}
@40@0:8@16@24q32
v24@0:8^v16
{vector<TSU::UUIDData<TSP::UUIDData>, std::allocator<TSU::UUIDData<TSP::UUIDData>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<TSU::UUIDData<TSP::UUIDData> *, std::allocator<TSU::UUIDData<TSP::UUIDData>>>="__value_"^v}}
@"TSCEUIDSet"
@"TSCEFormulaObject"16@0:8
@"TSCEFormulaObject"
@"TSULocale"
@"TSTStockDetails"
@32@0:8{TSKUIDStruct=QQ}16
v32@0:8@16Q24
v32@0:8Q16Q24
v32@0:8Q16q24
v24@0:8C16C20
v28@0:8C16q20
v28@0:8C16@20
@"NSArray"
v56@0:8@16@24@32@40q48
v56@0:8^v16^v24^v32@40C48B52
{vector<unsigned long, std::allocator<unsigned long>>=^Q^Q{__compressed_pair<unsigned long *, std::allocator<unsigned long>>=^Q}}20@0:8S16
q24@0:8r^{TSKUIDStruct=QQ}16
S24@0:8r^{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}16
B24@0:8r^{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}16
@24@0:8S16B20
{vector<TSTGroupNode *, std::allocator<TSTGroupNode *>>=^@^@{__compressed_pair<TSTGroupNode *__strong *, std::allocator<TSTGroupNode *>>=^@}}16@0:8
r^v24@0:8r^{TSKUIDStruct=QQ}16
{TSKUIDStruct=QQ}32@0:8r^{TSKUIDStruct=QQ}16^Q24
Q24@0:8r^{TSKUIDStruct=QQ}16
S24@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
@24@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
@28@0:8Q16B24
@32@0:8Q16@24
@40@0:8Q16B24B28@32
S32@0:8@16@24
{TSKUIDStruct=QQ}24@0:8@16
@32@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16^C24
@28@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16C24
{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}24@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
@40@0:8@16r^v24Q32
@32@0:8r^{TSKUIDStruct=QQ}16@24
@44@0:8@16@24@32C40
@48@0:8@16@24r^{TSKUIDStruct=QQ}32@40
@36@0:8@16S24@28
B32@0:8r^{TSKUIDStruct=QQ}16q24
@32@0:8r^{TSKUIDStruct=QQ}16q24
v52@0:8r^{TSKUIDStruct=QQ}16@24@32B40@44
@28@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16B24
B40@0:8@16{TSKUIDStruct=QQ}24
{vector<TSTGroupBy *, std::allocator<TSTGroupBy *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<TSTGroupBy *__strong *, std::allocator<TSTGroupBy *>>="__value_"^@}}
{TSKUIDStructVectorTemplate<TSKUIDStruct>="__begin_"^{TSKUIDStruct}"__end_"^{TSKUIDStruct}"__end_cap_"{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>="__value_"^{TSKUIDStruct}}}
{unordered_map<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
{unordered_map<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
{unordered_map<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
{vector<TSUIndexSet, std::allocator<TSUIndexSet>>="__begin_"^{TSUIndexSet}"__end_"^{TSUIndexSet}"__end_cap_"{__compressed_pair<TSUIndexSet *, std::allocator<TSUIndexSet>>="__value_"^{TSUIndexSet}}}
@"TSTGroupingColumnList"
@"TSTColumnAggregateList"
v28@0:8@16i24
v24@0:8i16i20
v24@0:8B16i20
v24@0:8f16i20
@"TSSPropertyMap"
@"TSSMutablePropertySet"
@"TSUPair"24@0:8@"TSTTableInfo"16
{vector<TSUViewCellRect, std::allocator<TSUViewCellRect>>=^{TSUViewCellRect}^{TSUViewCellRect}{__compressed_pair<TSUViewCellRect *, std::allocator<TSUViewCellRect>>=^{TSUViewCellRect}}}16@0:8
{vector<TSKUIDStructTract, std::allocator<TSKUIDStructTract>>=^{TSKUIDStructTract}^{TSKUIDStructTract}{__compressed_pair<TSKUIDStructTract *, std::allocator<TSKUIDStructTract>>=^{TSKUIDStructTract}}}16@0:8
@32@0:8@16@?24
v40@0:8q16Q24@?32
v32@0:8Q16@?24
v112@0:8@?16@?24@?32@?40@?48@?56@?64@?72@?80@?88@?96@?104
v40@0:8{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}16
@"NSMutableArray"
@88@0:8@16{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}24{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}}40
@40@0:8@16{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}24
@72@0:8@16{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}}24
v32@0:8@16{TSUViewCellCoord={TSUCellCoord=ISBB}}24
v40@0:8Q16Q24Q32
v36@0:8^v16@24B32
v32@0:8q16@?24
{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16@0:8
v32@0:8{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{TSUViewCellRect="_rect"{TSUCellRect="origin"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}"size"{?="numberOfColumns"I"numberOfRows"I}}}
{vector<TSTCell *, std::allocator<TSTCell *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<TSTCell *__strong *, std::allocator<TSTCell *>>="__value_"^@}}
{vector<TSUModelRowIndex, std::allocator<TSUModelRowIndex>>="__begin_"^{TSUModelRowIndex}"__end_"^{TSUModelRowIndex}"__end_cap_"{__compressed_pair<TSUModelRowIndex *, std::allocator<TSUModelRowIndex>>="__value_"^{TSUModelRowIndex}}}
{vector<TSUModelColumnIndex, std::allocator<TSUModelColumnIndex>>="__begin_"^{TSUModelColumnIndex}"__end_"^{TSUModelColumnIndex}"__end_cap_"{__compressed_pair<TSUModelColumnIndex *, std::allocator<TSUModelColumnIndex>>="__value_"^{TSUModelColumnIndex}}}
{vector<TSUViewRowIndex, std::allocator<TSUViewRowIndex>>="__begin_"^{TSUViewRowIndex}"__end_"^{TSUViewRowIndex}"__end_cap_"{__compressed_pair<TSUViewRowIndex *, std::allocator<TSUViewRowIndex>>="__value_"^{TSUViewRowIndex}}}
{vector<TSUViewColumnIndex, std::allocator<TSUViewColumnIndex>>="__begin_"^{TSUViewColumnIndex}"__end_"^{TSUViewColumnIndex}"__end_cap_"{__compressed_pair<TSUViewColumnIndex *, std::allocator<TSUViewColumnIndex>>="__value_"^{TSUViewColumnIndex}}}
{vector<long, std::allocator<long>>="__begin_"^q"__end_"^q"__end_cap_"{__compressed_pair<long *, std::allocator<long>>="__value_"^q}}
{vector<TSTNineKeyStructPreBNC, std::allocator<TSTNineKeyStructPreBNC>>="__begin_"^{?}"__end_"^{?}"__end_cap_"{__compressed_pair<TSTNineKeyStructPreBNC *, std::allocator<TSTNineKeyStructPreBNC>>="__value_"^{?}}}
@"NSMutableIndexSet"
@"TSKStructuredTextImportSettings"
@"NSURL"
@"NSDate"
@"NSData"
#24@0:8@16
v24@0:8i16I20
@32@0:8@16I24B28
v28@0:8I16@20
v24@0:8I16B20
{unordered_map<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *, TSTTableDataPayloadHash, TSTTableDataPayloadEqual, std::allocator<std::pair<NSObject<TSTTableDataPayloadHashing> *const, TSTTableDataObject *>>>="__table_"{__hash_table<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, std::__unordered_map_hasher<NSObject<TSTTableDataPayloadHashing> *, std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, TSTTableDataPayloadHash, TSTTableDataPayloadEqual, true>, std::__unordered_map_equal<NSObject<TSTTableDataPayloadHashing> *, std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, TSTTableDataPayloadEqual, TSTTableDataPayloadHash, true>, std::allocator<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<NSObject<TSTTableDataPayloadHashing> *, std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, TSTTableDataPayloadHash, TSTTableDataPayloadEqual, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<NSObject<TSTTableDataPayloadHashing> *, std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, TSTTableDataPayloadEqual, TSTTableDataPayloadHash, true>>="__value_"f}}}
@"NSObject<TSDContainerInfo><TSWPStorageParent>"
@"TSTTableDataListSegment"
I32@0:8@16I24B28
@28@0:8I16^B20
v40@0:8@16Q24@32
@44@0:8@16@24@32B40
I24@0:8@16
@76@0:8i16@20{CGAffineTransform=dddddd}28
@"TSKSelection"16@0:8
v24@0:8@"TSKSelection"16
@"TSKSelection"24@0:8@"TSKSelection"16
@"TSTCellSelection"
@76@0:8{TSKUIDStruct=QQ}16{TSKUIDStruct=QQ}32C48i52C56{TSKUIDStruct=QQ}60
@40@0:8{TSKUIDStruct=QQ}16C32i36
@36@0:8{TSKUIDStruct=QQ}16C32
@56@0:8{TSKUIDStruct=QQ}16C32C36{TSKUIDStruct=QQ}40
@72@0:8{TSKUIDStruct=QQ}16{TSKUIDStruct=QQ}32C48C52{TSKUIDStruct=QQ}56
v24@0:8[16C]16
{UUIDData<TSP::UUIDData>=""(?="_uuid"[16C]"_cfuuid"{?="byte0"C"byte1"C"byte2"C"byte3"C"byte4"C"byte5"C"byte6"C"byte7"C"byte8"C"byte9"C"byte10"C"byte11"C"byte12"C"byte13"C"byte14"C"byte15"C}""{?="_lower"Q"_upper"Q})}
@56@0:8r^v16r^v24Q32@40@48
v32@0:8^v16^v24
v40@0:8^v16^v24@32
@28@0:8I16^{_NSRange=QQ}20
B40@0:8{TSUCellCoord=ISBB}16@24^@32
{multimap<TSUCellCoord, std::tuple<unsigned int, unsigned long, TSTCellStorage *>, std::less<TSUCellCoord>, std::allocator<std::pair<const TSUCellCoord, std::tuple<unsigned int, unsigned long, TSTCellStorage *>>>>={__tree<std::__value_type<TSUCellCoord, std::tuple<unsigned int, unsigned long, TSTCellStorage *>>, std::__map_value_compare<TSUCellCoord, std::__value_type<TSUCellCoord, std::tuple<unsigned int, unsigned long, TSTCellStorage *>>, std::less<TSUCellCoord>, true>, std::allocator<std::__value_type<TSUCellCoord, std::tuple<unsigned int, unsigned long, TSTCellStorage *>>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSUCellCoord, std::tuple<unsigned int, unsigned long, TSTCellStorage *>>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<TSUCellCoord, std::__value_type<TSUCellCoord, std::tuple<unsigned int, unsigned long, TSTCellStorage *>>, std::less<TSUCellCoord>, true>>=Q}}}16@0:8
[16@"TSTTableTileGroup"]
@40@0:8r^v16@24@32
@48@0:8I16C20d24{TSKUIDStruct=QQ}32
v24@0:8C16I20
v28@0:8I16Q20
[16@"TSTTableHeaderStorageBucket"]
@34@0:8Q16{TSUModelColumnIndex=S}24@26
@32@0:8@16Q24
@40@0:8@16{_NSRange=QQ}24
@"TSUSparseArray"
Q24@0:8r^{TSUCellCoord=ISBB}16
{TSUCellCoord=ISBB}24@0:8Q16
@32@0:8r^v16r^{TSKUIDStruct=QQ}24
{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}32@0:8@16r^{TSUModelCellCoord={TSUCellCoord=ISBB}}24
{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}36@0:8@16r^{TSUModelCellCoord={TSUCellCoord=ISBB}}24B32
{TSKUIDStruct=QQ}32@0:8@16r^{TSUModelCellCoord={TSUCellCoord=ISBB}}24
@48@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16Q32r^{TSKUIDStruct=QQ}40
{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}28@0:8Q16B24
{TSKUIDStruct=QQ}24@0:8Q16
@40@0:8r^{TSKUIDStruct=QQ}16r^v24@32
v28@0:8B16Q20
@"<TSWPStyleProvider>"16@0:8
@"<TSWPStyleProvider>"24@0:8@"TSWPLayout"16
B24@0:8@"TSWPLayout"16
@28@0:8@16I24
d32@0:8Q16d24
d56@0:8Q16d24@32^d40^d48
{UIEdgeInsets=dddd}24@0:8@16
d56@0:8Q16d24@"<TSWPLayoutTarget>"32^d40^d48
{UIEdgeInsets=dddd}24@0:8@"<TSWPLayoutTarget>"16
@"TSWPPadding"16@0:8
@"TSWPPadding"24@0:8@"<TSWPLayoutTarget>"16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16
{CGRect={CGPoint=dd}{CGSize=dd}}40@0:8@16{CGSize=dd}24
d24@0:8@16
{CGSize=dd}16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}60@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48B56
Q24@0:8@"TSWPLayout"16
i24@0:8@"TSWPLayout"16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@"TSWPLayout"16
{CGRect={CGPoint=dd}{CGSize=dd}}40@0:8@"TSWPLayout"16{CGSize=dd}24
@"<NSFastEnumeration>"24@0:8@"TSWPLayout"16
#24@0:8@"TSWPLayout"16
v24@0:8@"TSWPLayout"16
@"NSSet"24@0:8@"TSWPLayout"16
d24@0:8@"TSWPLayout"16
Q24@0:8@"TSWPAttachment"16
{CGRect={CGPoint=dd}{CGSize=dd}}60@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@"TSKSelectionPath"48B56
v64@0:8@16{_NSRange=QQ}24q40Q48@56
v64@0:8@"TSWPStorage"16{_NSRange=QQ}24q40Q48@"NSArray"56
{CGPoint=dd}16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
d24@0:8o^d16
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}104@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48{CGAffineTransform=dddddd}56
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8{?={?=II}{?=II}}16
@76@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16i32d36d44B52B56d60^@68
@76@0:8{?={?=II}{?=II}}16i32d36d44B52B56d60^@68
v112@0:8@16I24{CGAffineTransform=dddddd}28d76d84B92d96@?104
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24@0:8@16
{CGSize=dd}24@0:8@16
{UIEdgeInsets=dddd}16@0:8
d32@0:8@16d24
{CGPoint=dd}24@0:8@16
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8{TSUCellCoord=ISBB}16^B24
i24@0:8{TSUCellCoord=ISBB}16
{CGSize=dd}32@0:8{?={?=II}{?=II}}16
B32@0:8{?={?=II}{?=II}}16
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8@16{CGSize=dd}24^{TSUCellRect={TSUCellCoord=ISBB}{?=II}}40
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@"TSTLayoutSpaceBundle"
{?="tableNameHeight"d"scaleToFitParent"{CGSize="width"d"height"d}"scaleToFitEnclosingTextColumn"{CGSize="width"d"height"d}}
@"TSWPLayout"
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
{CGSize="width"d"height"d}
@"TSUPointerKeyDictionary"
v24@0:8r^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}20@0:8B16
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}20@0:8C16
{TSCEValue=""(?="DONT_USE_fakeTSCENumberValueStandIn"{?="_decimal"{?="w"[2Q]}"_formatFake"[24C]"_baseUnit"S"_isUnitlessZero"B}"_buff"[9Q])"_type"C}
{TSCENumberValue="_vptr$TSCEAbstractValue"^^?"_decimal"{TSUDecimal="_decimal"{?="w"[2Q]}}"_format"{TSCEFormat="_tskFormat"@"TSKFormat""_formatType"I"_formatState"C"_durationFormat"{TSCEDurationFormat="useAutomaticUnits"b1"durationUnitSmallest"b5"durationUnitLargest"b5"durationStyle"b2}"_baseFormat"{TSCEBaseFormat="base"C"basePlaces"C"baseUseMinusSign"B}"_fractionFormat"{TSCEFractionFormat="fractionAccuracy"c}"_numberFormat"{TSCENumberFormat="decimalPlaces"C"negativeStyle"b3"showThousandsSeparator"b1"useAccountingStyle"b1"currencyCodeIndex"S}}"_baseUnit"S"_isUnitlessZero"B}
{TSCEDateValue="_vptr$TSCEAbstractValue"^^?"mDate"@"NSDate""mFormat"{TSCEFormat="_tskFormat"@"TSKFormat""_formatType"I"_formatState"C"_durationFormat"{TSCEDurationFormat="useAutomaticUnits"b1"durationUnitSmallest"b5"durationUnitLargest"b5"durationStyle"b2}"_baseFormat"{TSCEBaseFormat="base"C"basePlaces"C"baseUseMinusSign"B}"_fractionFormat"{TSCEFractionFormat="fractionAccuracy"c}"_numberFormat"{TSCENumberFormat="decimalPlaces"C"negativeStyle"b3"showThousandsSeparator"b1"useAccountingStyle"b1"currencyCodeIndex"S}}}
@40@0:8@16{TSUViewCellCoord={TSUCellCoord=ISBB}}24@32
@36@0:8r^{TSUChromeColumnIndex=S}16r^{TSKUIDStruct=QQ}24B32
@"NSString"32@0:8r^v16@"TSCERefNamingContext"24
@"NSString"32@0:8@"TSCECellTractRef"16@"TSCERefNamingContext"24
@"NSString"40@0:8@"TSCECellTractRef"16@"TSCERefNamingContext"24@"TSCECoordMapper"32
@"NSString"36@0:8r^{TSUChromeColumnIndex=S}16r^{TSKUIDStruct=QQ}24B32
@"NSString"32@0:8@"TSCEWrappedRangeRef"16@"TSCERefNamingContext"24
@32@0:8r^{TSUCellCoord=ISBB}16@24
@44@0:8r^{TSUCellCoord=ISBB}16B24@28^{TSUCellRect={TSUCellCoord=ISBB}{?=II}}36
@36@0:8S16@20@28
@44@0:8r^v16@24B32@36
@56@0:8@16B24B28^{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}32@40@48
v56@0:8@16i24@28I36{TSTSimpleRange=qQ}40
v36@0:8@16i24{TSUCellCoord=ISBB}28
v24@0:8{?=II}16
v56@0:8@16@?24@?32@?40@?48
v52@0:8{vector<TSTCell *, std::allocator<TSTCell *>>=^@^@{__compressed_pair<TSTCell *__strong *, std::allocator<TSTCell *>>=^@}}16{TSUModelRowIndex=I}40^v44
@"TSTStrokeLayer"
v40@0:8Q16{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}24
v40@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16Q32
v40@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16@?32
{vector<TSUModelCellRect, std::allocator<TSUModelCellRect>>=^{TSUModelCellRect}^{TSUModelCellRect}{__compressed_pair<TSUModelCellRect *, std::allocator<TSUModelCellRect>>=^{TSUModelCellRect}}}16@0:8
{vector<TSUModelCellRect, std::allocator<TSUModelCellRect>>=^{TSUModelCellRect}^{TSUModelCellRect}{__compressed_pair<TSUModelCellRect *, std::allocator<TSUModelCellRect>>=^{TSUModelCellRect}}}32@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{vector<TSUModelCellRect, std::allocator<TSUModelCellRect>>=^{TSUModelCellRect}^{TSUModelCellRect}{__compressed_pair<TSUModelCellRect *, std::allocator<TSUModelCellRect>>=^{TSUModelCellRect}}}24@0:8@16
B32@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}32@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{unordered_map<unsigned long, TSUModelCellRect, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, TSUModelCellRect>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, TSUModelCellRect>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, TSUModelCellRect>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, TSUModelCellRect>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, TSUModelCellRect>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUModelCellRect>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUModelCellRect>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUModelCellRect>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUModelCellRect>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUModelCellRect>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUModelCellRect>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUModelCellRect>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, TSUModelCellRect>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUModelCellRect>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, TSUModelCellRect>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, TSUModelCellRect>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}
{TSCECellRangeRTree="_rTree"{TSCECellRangeRTree_Int="m_root"^{Node}}}
{TSCEBitGrid="_tiles"{vector<TSCEBitGridTile *, std::allocator<TSCEBitGridTile *>>="__begin_"^^{TSCEBitGridTile}"__end_"^^{TSCEBitGridTile}"__end_cap_"{__compressed_pair<TSCEBitGridTile **, std::allocator<TSCEBitGridTile *>>="__value_"^^{TSCEBitGridTile}}}"_count"Q"_lastTileFoundAtIndex"Q"_bitsInColumn"{unordered_map<unsigned int, TSUIndexSet *, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<const unsigned int, TSUIndexSet *>>>="__table_"{__hash_table<std::__hash_value_type<unsigned int, TSUIndexSet *>, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, TSUIndexSet *>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, TSUIndexSet *>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>, std::allocator<std::__hash_value_type<unsigned int, TSUIndexSet *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSUIndexSet *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSUIndexSet *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSUIndexSet *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSUIndexSet *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSUIndexSet *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSUIndexSet *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSUIndexSet *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned int, TSUIndexSet *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSUIndexSet *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, TSUIndexSet *>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, TSUIndexSet *>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>>="__value_"f}}}}
v48@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16Q24{CGSize=dd}32
{vector<unsigned long, std::allocator<unsigned long>>=^Q^Q{__compressed_pair<unsigned long *, std::allocator<unsigned long>>=^Q}}16@0:8
@"TSTCellUIDList"
{vector<unsigned long, std::allocator<unsigned long>>="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::allocator<unsigned long>>="__value_"^Q}}
d24@0:8@"TSDDrawableInfo"16
{CGSize=dd}32@0:8@"TSPData"16@"<NSObject>"24
{?={?=II}{?=II}}24@0:8@16
{?={?=II}{?=II}}40@0:8{?={?=II}{?=II}}16@32
@28@0:8@16i24
v32@0:8{?={?=II}{?=II}}16
{?={?=II}{?=II}}16@0:8
{?={?=II}{?=II}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v64@0:8{CGAffineTransform=dddddd}16
{CGPoint=dd}32@0:8{CGPoint=dd}16
{?=II}36@0:8{CGPoint=dd}16B32
{?=II}32@0:8{CGPoint=dd}16
v40@0:8d16^d24^d32
d32@0:8d16d24
v40@0:8^{CGPoint=dd}16^{CGPoint=dd}24^d32
@60@0:8{?={?=II}{?=II}}16^{CGAffineTransform=dddddd}32d40B48d52
@32@0:8^{CGAffineTransform=dddddd}16d24
{CGRect={CGPoint=dd}{CGSize=dd}}40@0:8{?={?=II}{?=II}}16d32
v112@0:8@16^{CGContext=}24{CGPoint=dd}32{CGPoint=dd}48d64d72{CGRect={CGPoint=dd}{CGSize=dd}}80
B52@0:8I16{?={?=II}{?=II}}20B36i40^{CGContext=}44
v44@0:8{?={?=II}{?=II}}16B32^{CGContext=}36
@52@0:8{?={?=II}{?=II}}16S32@36^B44
@56@0:8{?={?=II}{?=II}}16I32@36B44^B48
I24@0:8d16
d24@0:8d16
i24@0:8{?=II}16
{CGPoint=dd}24@0:8{?=II}16
{?={CGPoint=dd}{CGPoint=dd}{CGPoint=dd}{CGPoint=dd}dddd}44@0:8{?={?=II}{?=II}}16i32^d36
v24@0:8^{?={CGPoint=dd}{CGPoint=dd}{CGPoint=dd}{CGPoint=dd}dddd}16
{?={CGPoint=dd}{CGPoint=dd}{CGPoint=dd}{CGPoint=dd}dddd}40@0:8{?={?=II}{?=II}}16^d32
{?={CGPoint=dd}{CGPoint=dd}{CGPoint=dd}{CGPoint=dd}dddd}32@0:8{?={?=II}{?=II}}16
{CGAffineTransform=dddddd}16@0:8
{_opaque_pthread_rwlock_t="__sig"q"__opaque"[192c]}
@"TSTLayoutSpaceBezierPathCache"
@"TSTCoordinateArray"
{CGPoint="x"d"y"d}
{?="topLeft"{?="column"I"row"I}"bottomRight"{?="column"I"row"I}}
{CGAffineTransform="a"d"b"d"c"d"d"d"tx"d"ty"d}
@28@0:8I16I20B24
v40@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24r^{TSKUIDStruct=QQ}32
v32@0:8@16r^{TSKUIDStruct=QQ}24
v32@0:8r^v16r^{TSKUIDStruct=QQ}24
v40@0:8@"TSTCell"16{TSUModelCellCoord={TSUCellCoord=ISBB}}24r^{TSKUIDStruct=QQ}32
v32@0:8@"TSTCellMap"16r^{TSKUIDStruct=QQ}24
v32@0:8@"TSTConcurrentCellMap"16r^{TSKUIDStruct=QQ}24
@"TSTExpressionNode"
@52@0:8@16@24I32Q36Q44
{TSTCSENodeData=QQ}24@0:8@16
@60@0:8@16@24{TSUCellCoord=ISBB}32B40^v44@52
v40@0:8^{TSCEASTNodeArray=*QQB}16{TSUCellCoord=ISBB}24^v32
@72@0:8i16{_NSRange=QQ}20i36i40{_NSRange=QQ}44B60Q64
@80@0:8i16{_NSRange=QQ}20i36i40{_NSRange=QQ}44B60Q64Q72
B40@0:8@16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24
{TSTCellRegionGathererMap="_cellRangeIndex"Q"_rowRange"{_NSRange="location"Q"length"Q}"_cellRanges"{unordered_map<unsigned long, TSUCellRect, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, TSUCellRect>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, TSUCellRect>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, TSUCellRect>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, TSUCellRect>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, TSUCellRect>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUCellRect>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUCellRect>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUCellRect>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUCellRect>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUCellRect>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUCellRect>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUCellRect>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, TSUCellRect>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUCellRect>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, TSUCellRect>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, TSUCellRect>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}"_encodedJoinCoordToCandidateIndexMap"{unordered_map<TSTCellRegionGathererKey, unsigned long, std::hash<TSTCellRegionGathererKey>, std::equal_to<TSTCellRegionGathererKey>, std::allocator<std::pair<const TSTCellRegionGathererKey, unsigned long>>>="__table_"{__hash_table<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, std::__unordered_map_hasher<TSTCellRegionGathererKey, std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, std::hash<TSTCellRegionGathererKey>, std::equal_to<TSTCellRegionGathererKey>, true>, std::__unordered_map_equal<TSTCellRegionGathererKey, std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, std::equal_to<TSTCellRegionGathererKey>, std::hash<TSTCellRegionGathererKey>, true>, std::allocator<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSTCellRegionGathererKey, std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, std::hash<TSTCellRegionGathererKey>, std::equal_to<TSTCellRegionGathererKey>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSTCellRegionGathererKey, std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, std::equal_to<TSTCellRegionGathererKey>, std::hash<TSTCellRegionGathererKey>, true>>="__value_"f}}}}
{unordered_map<TSUCellCoord, TSUCellRect, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, std::allocator<std::pair<const TSUCellCoord, TSUCellRect>>>="__table_"{__hash_table<std::__hash_value_type<TSUCellCoord, TSUCellRect>, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSUCellRect>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSUCellRect>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>, std::allocator<std::__hash_value_type<TSUCellCoord, TSUCellRect>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellRect>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellRect>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellRect>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellRect>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellRect>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellRect>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellRect>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellRect>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellRect>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSUCellRect>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSUCellRect>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>>="__value_"f}}}
{vector<TSCECellRef, std::allocator<TSCECellRef>>=^{TSCECellRef}^{TSCECellRef}{__compressed_pair<TSCECellRef *, std::allocator<TSCECellRef>>=^{TSCECellRef}}}32@0:8r^{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}16r^{TSKUIDStruct=QQ}24
{vector<TSCECellRef, std::allocator<TSCECellRef>>=^{TSCECellRef}^{TSCECellRef}{__compressed_pair<TSCECellRef *, std::allocator<TSCECellRef>>=^{TSCECellRef}}}24@0:8@16
@"TSTAggNode"
v56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16^{CGContext=}48
@"TSTTableStyleNetwork"
v28@0:8B16@20
v36@0:8B16{_NSRange=QQ}20
Q32@0:8{_NSRange=QQ}16
B32@0:8{_NSRange=QQ}16
Q32@0:8Q16Q24
v40@0:8{_NSRange=QQ}16Q32
@48@0:8@16Q24@32Q40
@80@0:8@16Q24@32@?40@?48@?56@?64@?72
@48@0:8@16Q24@32@?40
Q42@0:8C16C20Q24Q32{TSUViewColumnIndex=S}40
Q28@0:8C16C20B24
@36@0:8@16@24B32
@40@0:8@16@24Q32
@32@0:8^{_NSZone=}16@24
@36@0:8Q16@24B32
@52@0:8@16@24d32B40Q44
{vector<TSTCellStyle *, std::allocator<TSTCellStyle *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<TSTCellStyle *__strong *, std::allocator<TSTCellStyle *>>="__value_"^@}}
{vector<TSWPParagraphStyle *, std::allocator<TSWPParagraphStyle *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<TSWPParagraphStyle *__strong *, std::allocator<TSWPParagraphStyle *>>="__value_"^@}}
@"TSTTableControlCellSelection"
@44@0:8I16@20@28@36
@"TSDStroke"
@"<TSTCellIteratorData>"
v32@0:8^{TSCEASTNodeArray=*QQB}16{TSUCellCoord=ISBB}24
v52@0:8@16C24@28@36@44
v48@0:8@16Q24@32^v40
v36@0:8@16@24I32
B24@0:8^v16
@32@0:8^v16^@24
@48@0:8@16@24^v32^@40
@40@0:8@16^v24^@32
@"TSTWPTokenAttachment"
i36@0:8Q16i24@28
i32@0:8Q16@24
Q44@0:8Q16Q24i32@36
@48@0:8@16@24{TSUModelCellCoord={TSUCellCoord=ISBB}}32@40
@60@0:8@16@24{TSUViewCellCoord={TSUCellCoord=ISBB}}32@40r^{TSKUIDStruct=QQ}48B56
@60@0:8@16@24{TSUModelCellCoord={TSUCellCoord=ISBB}}32@40r^{TSKUIDStruct=QQ}48B56
@56@0:8@16@24{TSUViewCellCoord={TSUCellCoord=ISBB}}32@40r^{TSKUIDStruct=QQ}48
@56@0:8@16@24{TSUModelCellCoord={TSUCellCoord=ISBB}}32@40r^{TSKUIDStruct=QQ}48
@40@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24@32
{TSUModelCellCoord="_coord"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}}
v32@0:8I16I20@?24
@"TSTPopUpMenuModel"
@32@0:8@16r^{TSKUIDStruct=QQ}24
@52@0:8@16S24@28Q36Q44
@56@0:8@16r^{TSUDecimal={?=[2Q]}}24@32Q40Q48
@56@0:8@16@24@32Q40Q48
v32@0:8r^{TSUDecimal={?=[2Q]}}16@24
{TSUDecimal={?=[2Q]}}16@0:8
{TSUDecimal="_decimal"{?="w"[2Q]}}
B24@0:8I16I20
B24@0:8C16I20
@32@0:8^{?={?=Cb8b16b16b16b16b16}[0C]}16@24
v32@0:8^{?={?=Cb8b16b16b16b16b16}[0C]}16@24
v36@0:8^{?={?=Cb8b16b16b16b16b16}[0C]}16@24B32
v40@0:8@16B24B28B32B36
v24@0:8S16B20
v28@0:8B16I20B24
@28@0:8I16B20B24
B24@0:8I16B20
@"NSObject"
@"TSTCellBorder"
@"TSKFormat"
@"TSDCommentStorage"
@"TSTImportWarningSet"
@"TSTCellSpec"
@40@0:8@16@24r^v32
@28@0:8^{_NSZone=}16B24
v32@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24
v40@0:8r^v16r^v24r^v32
{TSCECellCoordSet={map<unsigned short, TSUIndexSet, std::less<unsigned short>, std::allocator<std::pair<const unsigned short, TSUIndexSet>>>={__tree<std::__value_type<unsigned short, TSUIndexSet>, std::__map_value_compare<unsigned short, std::__value_type<unsigned short, TSUIndexSet>, std::less<unsigned short>, true>, std::allocator<std::__value_type<unsigned short, TSUIndexSet>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned short, TSUIndexSet>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<unsigned short, std::__value_type<unsigned short, TSUIndexSet>, std::less<unsigned short>, true>>=Q}}}}32@0:8@16@?24
@28@0:8r^v16B24
{vector<TSUCellCoord, std::allocator<TSUCellCoord>>="__begin_"^{TSUCellCoord}"__end_"^{TSUCellCoord}"__end_cap_"{__compressed_pair<TSUCellCoord *, std::allocator<TSUCellCoord>>="__value_"^{TSUCellCoord}}}
{unordered_map<TSUCellCoord, TSTCell *, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, std::allocator<std::pair<const TSUCellCoord, TSTCell *>>>="__table_"{__hash_table<std::__hash_value_type<TSUCellCoord, TSTCell *>, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTCell *>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTCell *>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>, std::allocator<std::__hash_value_type<TSUCellCoord, TSTCell *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTCell *>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTCell *>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>>="__value_"f}}}
{unordered_map<TSKUIDStructCoord, TSTCell *, std::hash<TSKUIDStructCoord>, std::equal_to<TSKUIDStructCoord>, std::allocator<std::pair<const TSKUIDStructCoord, TSTCell *>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, std::__unordered_map_hasher<TSKUIDStructCoord, std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, std::hash<TSKUIDStructCoord>, std::equal_to<TSKUIDStructCoord>, true>, std::__unordered_map_equal<TSKUIDStructCoord, std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, std::equal_to<TSKUIDStructCoord>, std::hash<TSKUIDStructCoord>, true>, std::allocator<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStructCoord, std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, std::hash<TSKUIDStructCoord>, std::equal_to<TSKUIDStructCoord>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStructCoord, std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, std::equal_to<TSKUIDStructCoord>, std::hash<TSKUIDStructCoord>, true>>="__value_"f}}}
{pair<TSTCell *, TSKUIDStructCoord>=@{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}}16@0:8
r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16@0:8
@"TSTCellMap"
@"TSTCellUIDIterator"
d36@0:8I16{TSTSimpleRange=qQ}20
v36@0:8I16^d20^d28
{_opaque_pthread_rwlock_t=q[192c]}16@0:8
v216@0:8{_opaque_pthread_rwlock_t=q[192c]}16
{vector<TSTStrokeWidthCacheEntry, std::allocator<TSTStrokeWidthCacheEntry>>="__begin_"^{TSTStrokeWidthCacheEntry}"__end_"^{TSTStrokeWidthCacheEntry}"__end_cap_"{__compressed_pair<TSTStrokeWidthCacheEntry *, std::allocator<TSTStrokeWidthCacheEntry>>="__value_"^{TSTStrokeWidthCacheEntry}}}
@40@0:8@16r^v24r^v32
v24@0:8r^v16
v28@0:8r^v16S24
v28@0:8r^v16I24
v28@0:8r^v16B24
{unordered_map<TSKUIDStruct, unsigned short, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, unsigned short>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, unsigned short>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned short>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned short>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, unsigned short>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned short>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned short>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned short>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned short>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned short>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned short>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned short>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned short>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned short>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned short>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned short>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
{unordered_map<TSKUIDStruct, unsigned int, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, unsigned int>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, unsigned int>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned int>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned int>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, unsigned int>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned int>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned int>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned int>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned int>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned int>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned int>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned int>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned int>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
@44@0:8@16S24@28@36
{TSKUIDStruct=QQ}36@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24B32
@"<TSCEFormulaReplacing>"
@40@0:8{TSUCellCoord=ISBB}16@24@32
@"TSTAccumulator"
@"TSTAggregator"
@28@0:8@16S24
s16@0:8
@"TSTFunctionEndNode"
C24@0:8Q16
v40@0:8{TSKUIDStruct=QQ}16@32
v24@0:8@"TSTGroupNode"16
v40@0:8{TSKUIDStruct=QQ}16@"TSTGroupNode"32
v32@0:8r^v16r^v24
i40@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24@32
i26@0:8{TSUModelColumnIndex=S}16@18
v32@0:8C16r^{TSKUIDStruct=QQ}20C28
@36@0:8C16{TSUModelCellCoord={TSUCellCoord=ISBB}}20^B28
C32@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16^B24
v28@0:8Q16C24
Q20@0:8C16
@"TSTSummaryCellVendor"
@"TSTCategoryAggregateFormulaOwner"
@"TSTTableGroupSortOrderUID"
{vector<double, std::allocator<double>>="__begin_"^d"__end_"^d"__end_cap_"{__compressed_pair<double *, std::allocator<double>>="__value_"^d}}
{vector<int, std::allocator<int>>="__begin_"^i"__end_"^i"__end_cap_"{__compressed_pair<int *, std::allocator<int>>="__value_"^i}}
@"TSURetainedPointerKeyDictionary"
@60@0:8@16{TSTSimpleRange=qQ}24i40@44@52
{TSTSimpleRange=qQ}16@0:8
v32@0:8{TSTSimpleRange=qQ}16
@"<TSTStrokeLayerStrokeAndRange>"
{TSTSimpleRange="origin"q"length"Q}
@48@0:8q16@24^@32@40
v44@0:8@16{TSTSimpleRange=qQ}24i40
@40@0:8I16@20@28B36
{_NSRange=QQ}28@0:8{TSUCellCoord=ISBB}16B24
@24@0:8d16
@28@0:8d16C24
{TSCENumberValue=^^?{TSUDecimal={?=[2Q]}}{TSCEFormat=@IC{TSCEDurationFormat=b1b5b5b2}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}SB}16@0:8
{TSUPreserveFlags=C}16@0:8
v17@0:8{TSUPreserveFlags=C}16
B40@0:8q16q24q32
B32@0:8r^{TSUDecimal={?=[2Q]}}16@24
B24@0:8d16
@24@0:8r^{TSCERelativeCellRef={TSCERelativeCellCoordinate=isBB}{TSKUIDStruct=QQ}b1b1b1b1}16
r^{TSCERelativeCellRef={TSCERelativeCellCoordinate=isBB}{TSKUIDStruct=QQ}b1b1b1b1}16@0:8
v24@0:8r^{TSCERelativeCellRef={TSCERelativeCellCoordinate=isBB}{TSKUIDStruct=QQ}b1b1b1b1}16
@24@0:8r^{TSCECrossTableReference={TSKUIDStruct=QQ}{TSCERelativeCellCoordinate=isBB}}16
{TSCECrossTableReference={TSKUIDStruct=QQ}{TSCERelativeCellCoordinate=isBB}}16@0:8
@32@0:8r^v16r^{TSUPreserveFlags=C}24
{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
v32@0:8r^v16r^{TSUPreserveFlags=C}24
v32@0:8r^v16B24B28
@32@0:8@16B24B28
B32@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24
@56@0:8^{TSCEFormulaRewriteContext=@@{TSCEFormulaRewriteContextRecord={TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}{TSKUIDStruct=QQ}{TSUColumnRowOffset=ii}BBBBBBB}}16q24B32B36^{TSCEUidCellRef={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}40@?48
{TSCEFormulaCreator=@?}16@0:8
{TSCEFormulaCreator=@?}24@0:8B16B20
v24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
@"TSCECategoryRef"
@"TSCEViewTractRef"
{RefTypeHolder<TSCECellRef, 0>="_ref"{TSCECellRef="coordinate"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}"_tableUID"{TSKUIDStruct="_lower"Q"_upper"Q}}}
@"TSTFormulaPredArgData"
@"TSCEUndoTractList"
{TSCERelativeCellRef="relativeCoord"{TSCERelativeCellCoordinate="row"i"column"s"_preserveRow"B"_preserveColumn"B}"tableUID"{TSKUIDStruct="_lower"Q"_upper"Q}"preserveColumn"b1"preserveRow"b1"isSpanningColumn"b1"isSpanningRow"b1}
{TSUPreserveFlags="_flags"C}
@"NSMutableSet"
@44@0:8@16B24Q28Q36
@56@0:8@16@24I32I36Q40Q48
{TSCEGridDimensions=II}16@0:8
{TSCEGridDimensions="width"I"height"I}
B40@0:8r^{TSKUIDStruct=QQ}16@24@32
B32@0:8r^{TSKUIDStruct=QQ}16@24
@64@0:8@16{TSUCellCoord=ISBB}24{CGRect={CGPoint=dd}{CGSize=dd}}32
@"TSWPPadding"
{vector<TSKUIDStructTract, std::allocator<TSKUIDStructTract>>=^{TSKUIDStructTract}^{TSKUIDStructTract}{__compressed_pair<TSKUIDStructTract *, std::allocator<TSKUIDStructTract>>=^{TSKUIDStructTract}}}24@0:8Q16
{vector<TSKUIDStructTract, std::allocator<TSKUIDStructTract>>="__begin_"^{TSKUIDStructTract}"__end_"^{TSKUIDStructTract}"__end_cap_"{__compressed_pair<TSKUIDStructTract *, std::allocator<TSKUIDStructTract>>="__value_"^{TSKUIDStructTract}}}
@44@0:8r^v16C24@28r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}36
@52@0:8r^v16{TSKUIDStruct=QQ}24C40@44
{RefTypeHolder<TSCERangeRef, 1>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}32@0:8r^v16@24
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}36@0:8r^v16@24C32
B32@0:8r^{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16@24
C32@0:8r^{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16@24
@68@0:8@16@24@32@40r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}48@56B64
@60@0:8@16@24@32r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}40@48B56
@64@0:8@16@24r^v32C40r^v44@52B60
@64@0:8@16@24r^v32C40r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}44@52B60
@56@0:8@16@24@32r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}40@48
@28@0:8@16C24
v44@0:8^{TSCEASTNodeArray=*QQB}16{TSUCellCoord=ISBB}24C32{TSUCellCoord=ISBB}36
{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16@0:8
v40@0:8{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16
@"TSTUIDRectRef"
@"TSTReferenceColorHelper"
{TSCECellRef="coordinate"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}"_tableUID"{TSKUIDStruct="_lower"Q"_upper"Q}}
^{CGPath=}24@0:8d16
v76@0:8d16^{CGContext=}24{CGRect={CGPoint=dd}{CGSize=dd}}32B64^{CGColor=}68
v80@0:8d16^{CGContext=}24{CGRect={CGPoint=dd}{CGSize=dd}}32B64^{CGColor=}68B76
@"<TSKPencilAnnotationStorage>"16@0:8
@"TSDPencilAnnotationStorage"
@56@0:8@16d24@32Q40Q48
@"TSKDurationFormat"
^v24@0:8S16i20
@48@0:8@16^v24Q32Q40
v20@0:8s16
@"<TSTTableStrokeProviding>"
@"<TSTTableHiddenRowColumnProviding><TSTTableInternalGeometryProviding>"
v28@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16C24
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}20@0:8C16
{unordered_map<TSCECategoryLevel, TSKUIDStructCoord, std::hash<TSCECategoryLevel>, std::equal_to<TSCECategoryLevel>, std::allocator<std::pair<const TSCECategoryLevel, TSKUIDStructCoord>>>="__table_"{__hash_table<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, std::__unordered_map_hasher<TSCECategoryLevel, std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, std::hash<TSCECategoryLevel>, std::equal_to<TSCECategoryLevel>, true>, std::__unordered_map_equal<TSCECategoryLevel, std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, std::equal_to<TSCECategoryLevel>, std::hash<TSCECategoryLevel>, true>, std::allocator<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSCECategoryLevel, std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, std::hash<TSCECategoryLevel>, std::equal_to<TSCECategoryLevel>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSCECategoryLevel, std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, std::equal_to<TSCECategoryLevel>, std::hash<TSCECategoryLevel>, true>>="__value_"f}}}
v36@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16@24C32
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}28@0:8@16C24
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}36@0:8Q16@24C32
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}52@0:8^{TSTRunningAggregate={TSKUIDStruct=QQ}BB}16@24r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}32B40@44
{vector<TSCECellValue *, std::allocator<TSCECellValue *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<TSCECellValue *__strong *, std::allocator<TSCECellValue *>>="__value_"^@}}
{vector<TSTUidCoordsPerGroupValueTuple *, std::allocator<TSTUidCoordsPerGroupValueTuple *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<TSTUidCoordsPerGroupValueTuple *__strong *, std::allocator<TSTUidCoordsPerGroupValueTuple *>>="__value_"^@}}
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}32@0:8S16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}20B28
@"TSTGroupBySet"
{unordered_map<unsigned short, TSTRunningAggregate, std::hash<unsigned short>, std::equal_to<unsigned short>, std::allocator<std::pair<const unsigned short, TSTRunningAggregate>>>="__table_"{__hash_table<std::__hash_value_type<unsigned short, TSTRunningAggregate>, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, TSTRunningAggregate>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, TSTRunningAggregate>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>, std::allocator<std::__hash_value_type<unsigned short, TSTRunningAggregate>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSTRunningAggregate>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSTRunningAggregate>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSTRunningAggregate>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSTRunningAggregate>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSTRunningAggregate>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSTRunningAggregate>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSTRunningAggregate>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned short, TSTRunningAggregate>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSTRunningAggregate>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, TSTRunningAggregate>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, TSTRunningAggregate>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>>="__value_"f}}}
{unordered_map<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>, std::hash<unsigned short>, std::equal_to<unsigned short>, std::allocator<std::pair<const unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>>>="__table_"{__hash_table<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>, std::allocator<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>>="__value_"f}}}
v40@0:8^{TSCEASTNodeArray=}16{TSUCellCoord=ISBB}24^v32
@"TSTFunctionNode"
@48@0:8@16@24@32@40
@48@0:8@"TSSPropertyMap"16@"TSSPropertyMap"24@"TSSPropertyMap"32@"TSSPropertyMap"40
@"TSSPropertySet"16@0:8
@56@0:8@"TSSPropertyMap"16@"TSSPropertyMap"24@"TSSPropertyMap"32@"TSSPropertyMap"40@"TSTConcurrentStylesheet"48
@32@0:8r^{Message=^^?{InternalMetadata=^v}}16@24
v32@0:8^{Message=^^?{InternalMetadata=^v}}16@24
@32@0:8r^{Message=^^?{InternalMetadata=^v}}16@"TSPUnarchiver"24
v32@0:8^{Message=^^?{InternalMetadata=^v}}16@"TSPArchiver"24
@40@0:8@16B24B28B32I36
d28@0:8S16@?20
{TSCERecalculationState=C}33@0:8{TSUCellCoord=ISBB}16@24{TSCERecalculationState=C}32
{TSCERecalculationState=C}33@0:8r^v16@24{TSCERecalculationState=C}32
@"<TSCEReferenceResolving>"16@0:8
{TSCERecalculationState=C}33@0:8{TSUCellCoord=ISBB}16@"TSCECalculationEngine"24{TSCERecalculationState=C}32
{TSCERecalculationState=C}33@0:8r^v16@"TSCECalculationEngine"24{TSCERecalculationState=C}32
v40@0:8@16{TSKUIDStruct=QQ}24
v48@0:8@16@24{TSKUIDStruct=QQ}32
v40@0:8@"NSString"16{TSKUIDStruct=QQ}24
v48@0:8@"NSString"16@"NSString"24{TSKUIDStruct=QQ}32
i40@0:8@16@24r^{TSKUIDStruct=QQ}32
i32@0:8@16@24
v48@0:8@16{TSKUIDStruct=QQ}24B40B44
v24@0:8B16B20
v28@0:8r^{TSKUIDStruct=QQ}16B24
@24@0:8S16C20
@24@0:8I16C20
{TSUModelColumnIndex=S}20@0:8S16
{TSUModelColumnIndex=S}20@0:8I16
@56@0:8{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16@48
v36@0:8I16C20Q24i32
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}52@0:8Q16i24I28C32Q36^B44
v32@0:8@16q24
v32@0:8r^{TSKUIDStruct=QQ}16@24
@"TSTPivotGroupingColumnOptionsMap"
@"TSTFormulaStore"
v32@0:8^{CGContext=}16@?24
{TSUCellCoord=ISBB}24@0:8S16I20
S24@0:8r^{TSUCellCoord=ISBB}16
I24@0:8r^{TSUCellCoord=ISBB}16
{TSUCellCoord=ISBB}20@0:8I16
v36@0:8@16B24@28
v32@0:8@16C24B28
B24@0:8{TSUModelRowIndex=I}16C20
B22@0:8{TSUModelColumnIndex=S}16C18
{TSUModelColumnIndex=S}32@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{TSUModelRowIndex=I}32@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
v40@0:8{_NSRange=QQ}16r^v32
v34@0:8{_NSRange=QQ}16{TSUViewColumnIndex=S}32
v52@0:8@16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24@40B48
@"TSTHiddenStateExtent"
v24@0:8@"TSTMutableCellIteratorData"16
@"NSObject<TSTCellRegionIterating>"
{TSKUIDStruct=QQ}32@0:8@16@24
{TSKUIDStruct=QQ}20@0:8i16
i24@0:8r^{TSKUIDStruct=QQ}16
C32@0:8@16@24
B48@0:8@16@24Q32^Q40
B56@0:8@16@24@32Q40^Q48
@44@0:8@16@24r^{TSKUIDStruct=QQ}32S40
@48@0:8@16B24@28r^{TSKUIDStruct=QQ}36S44
{TSKUIDStruct=QQ}32@0:8r^{TSKUIDStruct=QQ}16r^{TSKUIDStruct=QQ}24
@40@0:8@16r^{TSKUIDStruct=QQ}24r^{TSKUIDStruct=QQ}32
{vector<TSCECategoryLevel, std::allocator<TSCECategoryLevel>>=^C^C{__compressed_pair<TSCECategoryLevel *, std::allocator<TSCECategoryLevel>>=^C}}24@0:8r^{TSKUIDStruct=QQ}16
v40@0:8{TSKUIDStruct=QQ}16@?32
C32@0:8{TSKUIDStruct=QQ}16
C40@0:8r^{TSKUIDStruct=QQ}16^B24^B32
@28@0:8C16Q20
v36@0:8r^{TSKUIDStruct=QQ}16I24@28
@32@0:8@16C24B28
@40@0:8@16r^{TSKUIDStruct=QQ}24C32C36
v24@0:8r^{TSUCellCoord=ISBB}16
v32@0:8@16r^{TSUCellCoord=ISBB}24
@24@0:8r^{TSUCellCoord=ISBB}16
@24@0:8C16B20
C24@0:8@16
@40@0:8@16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24@32
@48@0:8@16Q24Q32^{TSUPreserveFlags=C}40
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}36@0:8@16r^{TSKUIDStruct=QQ}24B32
{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}24@0:8@16
{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}32@0:8@16r^{TSKUIDStruct=QQ}24
{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}36@0:8@16r^{TSKUIDStruct=QQ}24C32
@36@0:8@16r^{TSKUIDStruct=QQ}24C32
{vector<TSCECellRef, std::allocator<TSCECellRef>>=^{TSCECellRef}^{TSCECellRef}{__compressed_pair<TSCECellRef *, std::allocator<TSCECellRef>>=^{TSCECellRef}}}32@0:8@16r^{TSKUIDStruct=QQ}24
{vector<TSCECellRef, std::allocator<TSCECellRef>>=^{TSCECellRef}^{TSCECellRef}{__compressed_pair<TSCECellRef *, std::allocator<TSCECellRef>>=^{TSCECellRef}}}36@0:8@16r^{TSKUIDStruct=QQ}24B32
{vector<TSCECategoryRef *, std::allocator<TSCECategoryRef *>>=^@^@{__compressed_pair<TSCECategoryRef *__strong *, std::allocator<TSCECategoryRef *>>=^@}}24@0:8@16
{vector<TSCECategoryRef *, std::allocator<TSCECategoryRef *>>=^@^@{__compressed_pair<TSCECategoryRef *__strong *, std::allocator<TSCECategoryRef *>>=^@}}32@0:8@16C24B28
{vector<TSCECategoryRef *, std::allocator<TSCECategoryRef *>>=^@^@{__compressed_pair<TSCECategoryRef *__strong *, std::allocator<TSCECategoryRef *>>=^@}}40@0:8{vector<TSCECategoryRef *, std::allocator<TSCECategoryRef *>>=^@^@{__compressed_pair<TSCECategoryRef *__strong *, std::allocator<TSCECategoryRef *>>=^@}}16
{vector<TSCECategoryRef *, std::allocator<TSCECategoryRef *>>=^@^@{__compressed_pair<TSCECategoryRef *__strong *, std::allocator<TSCECategoryRef *>>=^@}}52@0:8{vector<TSCECategoryRef *, std::allocator<TSCECategoryRef *>>=^@^@{__compressed_pair<TSCECategoryRef *__strong *, std::allocator<TSCECategoryRef *>>=^@}}16@40C48
{vector<TSCECategoryRef *, std::allocator<TSCECategoryRef *>>=^@^@{__compressed_pair<TSCECategoryRef *__strong *, std::allocator<TSCECategoryRef *>>=^@}}36@0:8@16C24B28B32
I24@0:8r^{TSKUIDStruct=QQ}16
{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}24@0:8@16
@24@0:8r^{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16
@"TSTGroupByChangeDistributor"
{unordered_map<TSUCellCoord, TSTAggNode *, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, std::allocator<std::pair<const TSUCellCoord, TSTAggNode *>>>="__table_"{__hash_table<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTAggNode *>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTAggNode *>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>, std::allocator<std::__hash_value_type<TSUCellCoord, TSTAggNode *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTAggNode *>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTAggNode *>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>>="__value_"f}}}
{TSCEUidLookupList="_uids"{TSKUIDStructVectorTemplate<TSKUIDStruct>="__begin_"^{TSKUIDStruct}"__end_"^{TSKUIDStruct}"__end_cap_"{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>="__value_"^{TSKUIDStruct}}}"_uidHashToLookupKeyMap"{unordered_map<unsigned long, unsigned int, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, unsigned int>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, unsigned int>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, unsigned int>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}"_uidHashOverflowMap"{unordered_map<unsigned long, std::unordered_set<unsigned int>, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, std::unordered_set<unsigned int>>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}}
@"TSKCustomFormatWrapper"
@40@0:8@16Q24@?32
v24@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
v40@0:8@16r^v24r^v32
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24@0:8Q16
{TSTCellUIDLookupList="_columnUidLookupList"{TSCEUidLookupList="_uids"{TSKUIDStructVectorTemplate<TSKUIDStruct>="__begin_"^{TSKUIDStruct}"__end_"^{TSKUIDStruct}"__end_cap_"{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>="__value_"^{TSKUIDStruct}}}"_uidHashToLookupKeyMap"{unordered_map<unsigned long, unsigned int, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, unsigned int>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, unsigned int>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, unsigned int>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}"_uidHashOverflowMap"{unordered_map<unsigned long, std::unordered_set<unsigned int>, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, std::unordered_set<unsigned int>>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}}"_rowUidLookupList"{TSCEUidLookupList="_uids"{TSKUIDStructVectorTemplate<TSKUIDStruct>="__begin_"^{TSKUIDStruct}"__end_"^{TSKUIDStruct}"__end_cap_"{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>="__value_"^{TSKUIDStruct}}}"_uidHashToLookupKeyMap"{unordered_map<unsigned long, unsigned int, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, unsigned int>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, unsigned int>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, unsigned int>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}"_uidHashOverflowMap"{unordered_map<unsigned long, std::unordered_set<unsigned int>, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, std::unordered_set<unsigned int>>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}}"_cellLookupCoords"{vector<TSTLookupKeyCoord, std::allocator<TSTLookupKeyCoord>>="__begin_"^{TSTLookupKeyCoord}"__end_"^{TSTLookupKeyCoord}"__end_cap_"{__compressed_pair<TSTLookupKeyCoord *, std::allocator<TSTLookupKeyCoord>>="__value_"^{TSTLookupKeyCoord}}}}
@52@0:8{TSKUIDStruct=QQ}16{TSKUIDStruct=QQ}32i48
@"TSTStrokeLayer"24@0:8Q16
v40@0:8{TSTSimpleRange=qQ}16@?32
@48@0:8@16@24{TSTSimpleRange=qQ}32
v44@0:8@16i24{TSTSimpleRange=qQ}28
v40@0:8@16{TSTSimpleRange=qQ}24
B32@0:8{TSTSimpleRange=qQ}16
@"TSTMutableStrokeLayer"
d40@0:8{TSTSimpleRange=qQ}16d32
d24@0:8q16
@"TSTStrokeOrderedLayer"
v56@0:8{TSUCellCoord=ISBB}16^@24^@32^@40^@48
@24@0:8S16S20
@"<TSTCustomStrokeProviding>"
@"TSUIntegerKeyDictionary"
Q40@0:8@16Q24Q32
Q48@0:8@16@24Q32Q40
v40@0:8@16Q24Q32
{TSUModelColumnOrRowIndex=I}20@0:8{TSUViewColumnOrRowIndex=I}16
{TSUViewColumnOrRowIndex=I}20@0:8{TSUModelColumnOrRowIndex=I}16
v28@0:8{TSUModelColumnOrRowIndex=I}16{TSUViewColumnOrRowIndex=I}20C24
B28@0:8r^{TSKUIDStruct=QQ}16C24
B36@0:8r^{TSKUIDStruct=QQ}16{TSUModelColumnOrRowIndex=I}24{TSUViewColumnOrRowIndex=I}28C32
C28@0:8r^{TSKUIDStruct=QQ}16{TSUViewColumnOrRowIndex=I}24
B24@0:8{TSUViewColumnOrRowIndex=I}16C20
B24@0:8{TSUModelColumnOrRowIndex=I}16C20
C20@0:8{TSUViewColumnOrRowIndex=I}16
C20@0:8{TSUModelColumnOrRowIndex=I}16
I32@0:8{_NSRange=QQ}16
B36@0:8{_NSRange=QQ}16C32
I24@0:8I16I20
v36@0:8{_NSRange=QQ}16{TSUModelColumnOrRowIndex=I}32
v36@0:8{_NSRange=QQ}16{TSUViewColumnOrRowIndex=I}32
v24@0:8{TSUModelColumnOrRowIndex=I}16{TSUModelColumnOrRowIndex=I}20
@48@0:8@16@24r^{TSKUIDStruct=QQ}32r^{TSUCellCoord=ISBB}40
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}32@0:8@16r^{TSUCellCoord=ISBB}24
@32@0:8@16r^{TSUCellCoord=ISBB}24
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}40@0:8@16r^{TSUCellCoord=ISBB}24B32C36
@120@0:8{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16@112
v48@0:8@16r^{TSUCellCoord=ISBB}24@32@40
{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}20@0:8{TSUModelColumnOrRowIndex=I}16
{unordered_map<TSKUIDStruct, unsigned char, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, unsigned char>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, unsigned char>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned char>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned char>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, unsigned char>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned char>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned char>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned char>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned char>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned char>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned char>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned char>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned char>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned char>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned char>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned char>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}
{unordered_set<TSKUIDStruct, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<TSKUIDStruct>>="__table_"{__hash_table<TSKUIDStruct, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<TSKUIDStruct>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *>, std::allocator<std::__hash_node<TSKUIDStruct, void *>>>="__value_"{__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::hash<TSKUIDStruct>>="__value_"Q}"__p3_"{__compressed_pair<float, std::equal_to<TSKUIDStruct>>="__value_"f}}}
{vector<TSUCellRect, std::allocator<TSUCellRect>>=^{TSUCellRect}^{TSUCellRect}{__compressed_pair<TSUCellRect *, std::allocator<TSUCellRect>>=^{TSUCellRect}}}24@0:8r^v16
v32@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16{TSUModelCellCoord={TSUCellCoord=ISBB}}24
v24@0:8r^{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}48@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}32
{vector<TSUModelCellRect, std::allocator<TSUModelCellRect>>=^{TSUModelCellRect}^{TSUModelCellRect}{__compressed_pair<TSUModelCellRect *, std::allocator<TSUModelCellRect>>=^{TSUModelCellRect}}}24@0:8r^v16
B24@0:8r^{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{TSUModelCellCoord={TSUCellCoord=ISBB}}24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}44@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24@32B40
v44@0:8{_NSRange=QQ}16r^v32B40
{unordered_map<TSUModelCellCoord, TSUModelCellCoord, std::hash<TSUModelCellCoord>, std::equal_to<TSUModelCellCoord>, std::allocator<std::pair<const TSUModelCellCoord, TSUModelCellCoord>>>="__table_"{__hash_table<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, std::__unordered_map_hasher<TSUModelCellCoord, std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, std::hash<TSUModelCellCoord>, std::equal_to<TSUModelCellCoord>, true>, std::__unordered_map_equal<TSUModelCellCoord, std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, std::equal_to<TSUModelCellCoord>, std::hash<TSUModelCellCoord>, true>, std::allocator<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSUModelCellCoord, std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, std::hash<TSUModelCellCoord>, std::equal_to<TSUModelCellCoord>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSUModelCellCoord, std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, std::equal_to<TSUModelCellCoord>, std::hash<TSUModelCellCoord>, true>>="__value_"f}}}
@"TSCellRangeCache"
@"TSTMergeChangeDistributor"
@40@0:8@16r^{TSKUIDStruct=QQ}24@32
{TSCESpanningRangeRef={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}C}20@0:8S16
@24@0:8r^{TSCESpanningRangeRef={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}C}16
@"TSCETrackedReferenceStore"
@48@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}32
i28@0:8@16i24
{CGSize=dd}32@0:8@16d24
d20@0:8B16
d36@0:8S16B20B24^B28
d60@0:8I16B20B24B28B32{CGSize=dd}36^B52
d44@0:8{CGSize=dd}16I32d36
d24@0:8I16B20
v44@0:8@16i24I28B32I36I40
v28@0:8I16I20I24
B28@0:8^I16B24
d28@0:8I16I20I24
d24@0:8I16I20
v36@0:8I16I20I24@?28
{CGSize=dd}36@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16B32
d36@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16B32
d40@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16@32
d44@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16B32@36
d52@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16B32{CGSize=dd}36
v32@0:8d16Q24
B32@0:8^@16{TSUCellCoord=ISBB}24
B24@0:8q16
B28@0:8q16I24
v40@0:8@16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24
v36@0:8i16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}20
v52@0:8i16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}20{TSUCellRect={TSUCellCoord=ISBB}{?=II}}36
v76@0:8@16{TSUCellCoord=ISBB}24{TSUCellRect={TSUCellCoord=ISBB}{?=II}}32B48@52@60@68
v52@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16@32B40@44
v40@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16@32
v40@0:8{TSUCellCoord=ISBB}16{TSUCellCoord=ISBB}24@32
{TSUCellCoord=ISBB}56@0:8{TSUCellCoord=ISBB}16{TSUCellCoord=ISBB}24{TSUCellRect={TSUCellCoord=ISBB}{?=II}}32@48
v36@0:8@16S24@28
v36@0:8@16I24@28
v36@0:8i16@20@28
@76@0:8{TSUCellCoord=ISBB}16@24@32B40i44@48i56Q60Q68
v104@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16@32@40{TSUCellRect={TSUCellCoord=ISBB}{?=II}}48B64i68@72B80i84@88@96
@56@0:8@16{TSUCellCoord=ISBB}24@32^i40^i48
@48@0:8@16{TSUCellCoord=ISBB}24@32i40i44
@40@0:8@16{TSUCellCoord=ISBB}24@32
{UIEdgeInsets=dddd}24@0:8{TSUCellCoord=ISBB}16
[18d]
@"NSObject<OS_dispatch_group>"
@"TSKChangeNotifier"
@"TSTStrokeDefaultVendor"
@"TSTWPColumnCache"
@"TSTDupContentCache"
@"TSTWidthHeightCache"
@"TSTHiddenRowsColumnsCache"
@"TSDFill"
@"TSUColor"
@"TSDInfoGeometry"
@"TSDLayoutGeometry"
@"TSTMergeRangeSortedSet"
@"<TSWPStyleProviding>"
@"TSTFontInfoCache"
@"TSUWidthLimitedQueue"
@"NSObject<OS_dispatch_queue>"
@"TSTConcurrentMutableIndexSet"
@"TSTStrokeWidthCache"
@"TSTRWRetainedPointerKeyDictionary"
@"NSCountedSet"
@"TSTLayout"
@"<TSTLayoutDynamicContentProtocol>"
@"TSTLayoutDynamicResizeInfo"
@"<TSTLayoutDynamicCellFillProtocol>"
@"TSWPColumnStyle"
@"TSTTextEngineDelegate"
B24@0:8@"TSKSelectionPath"16
@"<TSDHint>"16@0:8
@92@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16{TSUCellCoord=ISBB}32I40{CGSize=dd}44{CGSize=dd}60@76B84B88
@"NSNumber"
@32@0:8@"TSPObjectContext"16@"<TSDHint>"24
v24@0:8@"<TSDHint>"16
@60@0:8{CGSize=dd}16@32@40B48o^B52
B36@0:8@16@24B32
@"TSDLayout"60@0:8{CGSize=dd}16@"TSDLayout"32@"<TSDHint>"40B48o^B52
@"<TSDHint>"60@0:8{CGSize=dd}16@"TSDLayout"32@"<TSDHint>"40B48o^B52
@"TSDLayout"32@0:8@"<TSDHint>"16@"TSDLayout"24
B36@0:8@"<TSDHint>"16@"<TSDHint>"24B32
@"<TSDHint>"24@0:8@"TSDLayout"16
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}44@0:8{CGSize=dd}16@32B40
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}68@0:8S16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}20d36{CGSize=dd}44@60
B28@0:8@16B24
B56@0:8@16{CGSize=dd}24@40@48
@32@0:8{CGSize=dd}16
v36@0:8@16@24B32
B24@0:8@?16
@"TSTLayoutSpace"
@44@0:8i16{_NSRange=QQ}20@36
{unordered_map<unsigned int, TSTTableDataObject *, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<const unsigned int, TSTTableDataObject *>>>="__table_"{__hash_table<std::__hash_value_type<unsigned int, TSTTableDataObject *>, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, TSTTableDataObject *>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, TSTTableDataObject *>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>, std::allocator<std::__hash_value_type<unsigned int, TSTTableDataObject *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned int, TSTTableDataObject *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, TSTTableDataObject *>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, TSTTableDataObject *>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>>="__value_"f}}}
@64@0:8@16@24{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}32Q48Q56
@80@0:8@16@24@32@40{TSUCellRect={TSUCellCoord=ISBB}{?=II}}48Q64Q72
v40@0:8@?16@?24@?32
v48@0:8@?16@?24@?32@?40
{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}}32@0:8@16@24
@40@0:8r^v16r^v24@32
@28@0:8i16r^v20
@40@0:8r^v16r^v24r^v32
{vector<TSCEFormulaObject *, std::allocator<TSCEFormulaObject *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<TSCEFormulaObject *__strong *, std::allocator<TSCEFormulaObject *>>="__value_"^@}}
v64@0:8r^{TSKUIDStruct=QQ}16Q24^v32^v40^v48^v56
v40@0:8r^v16Q24^v32
@"TSTCellUIDLookupListWrapper"
{TSKUIDStruct=QQ}64@0:8r^v16r^v24^Q32^Q40^Q48^v56
B32@0:8^v16Q24
{deque<TSKUIDStruct, std::allocator<TSKUIDStruct>>="__map_"{__split_buffer<TSKUIDStruct *, std::allocator<TSKUIDStruct *>>="__first_"^^{TSKUIDStruct}"__begin_"^^{TSKUIDStruct}"__end_"^^{TSKUIDStruct}"__end_cap_"{__compressed_pair<TSKUIDStruct **, std::allocator<TSKUIDStruct *>>="__value_"^^{TSKUIDStruct}}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::allocator<TSKUIDStruct>>="__value_"Q}}
@44@0:8i16@20{TSKUIDStruct=QQ}28
[256@"TSTTableTile"]
[256@"TSPLazyReference"]
@40@0:8r^{TSKUIDStruct=QQ}16@24@32
@"TSTHierarchicalCellDiffMap"
@56@0:8@16{TSKUIDStruct=QQ}24@40@48
Q40@0:8@16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24
@36@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16B32
@40@0:8q16{TSKUIDStruct=QQ}24
@24@0:8^v16
{map<TSKUIDStruct, TSTPivotGroupingColumnOptions *, std::less<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSTPivotGroupingColumnOptions *>>>="__tree_"{__tree<std::__value_type<TSKUIDStruct, TSTPivotGroupingColumnOptions *>, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSTPivotGroupingColumnOptions *>, std::less<TSKUIDStruct>, true>, std::allocator<std::__value_type<TSKUIDStruct, TSTPivotGroupingColumnOptions *>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSKUIDStruct, TSTPivotGroupingColumnOptions *>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSTPivotGroupingColumnOptions *>, std::less<TSKUIDStruct>, true>>="__value_"Q}}}
d20@0:8S16
v36@0:8^d16^d24I32
B24@0:8I16S20
v36@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16I32
v36@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16S32
@40@0:8@16@24I32S36
{vector<TSTWidthHeightCacheEntry<4>, std::allocator<TSTWidthHeightCacheEntry<4>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<TSTWidthHeightCacheEntry<4> *, std::allocator<TSTWidthHeightCacheEntry<4>>>="__value_"^v}}
@36@0:8i16@20@28
@44@0:8i16{TSUCellCoord=ISBB}20@28@36
@52@0:8i16@20@28Q36Q44
@44@0:8i16@20Q28Q36
@44@0:8i16{TSUCellCoord=ISBB}20{TSUCellRect={TSUCellCoord=ISBB}{?=II}}28
@60@0:8i16{TSUCellCoord=ISBB}20{TSUCellRect={TSUCellCoord=ISBB}{?=II}}28{TSUCellRect={TSUCellCoord=ISBB}{?=II}}44
@36@0:8i16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}20
@52@0:8i16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}20{TSUCellRect={TSUCellCoord=ISBB}{?=II}}36
v36@0:8@16i24@?28
@68@0:8i16@20{TSUCellCoord=ISBB}28@36@44@52@60
@60@0:8i16@20{TSUCellCoord=ISBB}28@36@44@52
@"NSHashTable"
@"TSKShuffleMapping"
@"NSSet"
@"TSULocale"16@0:8
@"<TSWPStyleProviding>"16@0:8
@64@0:8{UIEdgeInsets=dddd}16i48@52B60
@26@0:8{TSUModelColumnIndex=S}16i18i22
{unordered_map<TSKUIDStruct, TSCEMutableUIDSet *, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSCEMutableUIDSet *>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
@"NSObject<OS_dispatch_semaphore>"
v48@0:8{UIEdgeInsets=dddd}16
@"TSTLayoutContentCachedKey"
@"TSWPColumn"
^{CGImage=}16@0:8
v24@0:8^{CGImage=}16
^{CGImage=}
v52@0:8@16C24^v28^v36^v44
@48@0:8@16@24r^v32r^v40
Q20@0:8B16
C20@0:8B16
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}32@0:8r^v16q24
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}24@0:8q16
@40@0:8I16C20^{TSKUIDStruct=QQ}24q32
C40@0:8{_NSRange=QQ}16q32
r^v24@0:8q16
v32@0:8r^v16q24
v40@0:8r^v16r^{TSKUIDStruct=QQ}24q32
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}40@0:8r^v16r^v24q32
@"TSTReferenceNode"
@"<TSTCanvasReferenceProvider>"
@52@0:8@16{TSTSimpleRange=qQ}24i40Q44
@32@0:8{TSTSimpleRange=qQ}16
{vector<TSTStrokeLayerRun, std::allocator<TSTStrokeLayerRun>>="__begin_"^{TSTStrokeLayerRun}"__end_"^{TSTStrokeLayerRun}"__end_cap_"{__compressed_pair<TSTStrokeLayerRun *, std::allocator<TSTStrokeLayerRun>>="__value_"^{TSTStrokeLayerRun}}}
v32@0:8q16q24
v40@0:8{_NSRange=QQ}16q32
v116@0:8@16@24i32@36@44i52@56@64i72@76@84i92@96@104i112
@"TSSStyle"
@"TSSStylesheet"
Q28@0:8@16i24
v28@0:8Q16B24
^{TSUCellRect={TSUCellCoord=ISBB}{?=II}}
d40@0:8@16d24N^d32
[8{os_unfair_lock_s="_os_unfair_lock_opaque"I}]
[8{unordered_map<TSTFontInfoCacheDupContentEntry, double, std::hash<TSTFontInfoCacheDupContentEntry>, std::equal_to<TSTFontInfoCacheDupContentEntry>, std::allocator<std::pair<const TSTFontInfoCacheDupContentEntry, double>>>="__table_"{__hash_table<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, std::__unordered_map_hasher<TSTFontInfoCacheDupContentEntry, std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, std::hash<TSTFontInfoCacheDupContentEntry>, std::equal_to<TSTFontInfoCacheDupContentEntry>, true>, std::__unordered_map_equal<TSTFontInfoCacheDupContentEntry, std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, std::equal_to<TSTFontInfoCacheDupContentEntry>, std::hash<TSTFontInfoCacheDupContentEntry>, true>, std::allocator<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSTFontInfoCacheDupContentEntry, std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, std::hash<TSTFontInfoCacheDupContentEntry>, std::equal_to<TSTFontInfoCacheDupContentEntry>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSTFontInfoCacheDupContentEntry, std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, std::equal_to<TSTFontInfoCacheDupContentEntry>, std::hash<TSTFontInfoCacheDupContentEntry>, true>>="__value_"f}}}]
@"TSWPTextMeasurerBundle"
v32@0:8r^v16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24
{vector<std::vector<NSString *>, std::allocator<std::vector<NSString *>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::vector<NSString *> *, std::allocator<std::vector<NSString *>>>="__value_"^v}}
{vector<TSKUIDStructCoord, std::allocator<TSKUIDStructCoord>>="__begin_"^{TSKUIDStructCoord}"__end_"^{TSKUIDStructCoord}"__end_cap_"{__compressed_pair<TSKUIDStructCoord *, std::allocator<TSKUIDStructCoord>>="__value_"^{TSKUIDStructCoord}}}
^v28@0:8@16B24
{map<NSString *, TSTHeaderNameMgrEntry *, std::less<NSString *>, std::allocator<std::pair<NSString *const, TSTHeaderNameMgrEntry *>>>="__tree_"{__tree<std::__value_type<NSString *, TSTHeaderNameMgrEntry *>, std::__map_value_compare<NSString *, std::__value_type<NSString *, TSTHeaderNameMgrEntry *>, std::less<NSString *>, true>, std::allocator<std::__value_type<NSString *, TSTHeaderNameMgrEntry *>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<NSString *, TSTHeaderNameMgrEntry *>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<NSString *, std::__value_type<NSString *, TSTHeaderNameMgrEntry *>, std::less<NSString *>, true>>="__value_"Q}}}
@"TSTHeaderNameMgr"
{TSCECellRefSet={map<TSKUIDStruct, TSCECellCoordSet, std::less<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSCECellCoordSet>>>={__tree<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>, std::allocator<std::__value_type<TSKUIDStruct, TSCECellCoordSet>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>>=Q}}}}24@0:8@16
{unordered_map<NSString *, TSCECellRefSet, std::hash<NSString *>, std::equal_to<NSString *>, std::allocator<std::pair<NSString *const, TSCECellRefSet>>>="__table_"{__hash_table<std::__hash_value_type<NSString *, TSCECellRefSet>, std::__unordered_map_hasher<NSString *, std::__hash_value_type<NSString *, TSCECellRefSet>, std::hash<NSString *>, std::equal_to<NSString *>, true>, std::__unordered_map_equal<NSString *, std::__hash_value_type<NSString *, TSCECellRefSet>, std::equal_to<NSString *>, std::hash<NSString *>, true>, std::allocator<std::__hash_value_type<NSString *, TSCECellRefSet>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSCECellRefSet>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSCECellRefSet>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSCECellRefSet>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSCECellRefSet>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSCECellRefSet>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSCECellRefSet>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSCECellRefSet>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<NSString *, TSCECellRefSet>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSCECellRefSet>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<NSString *, std::__hash_value_type<NSString *, TSCECellRefSet>, std::hash<NSString *>, std::equal_to<NSString *>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<NSString *, std::__hash_value_type<NSString *, TSCECellRefSet>, std::equal_to<NSString *>, std::hash<NSString *>, true>>="__value_"f}}}
{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}24@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16
@32@0:8@"TSPObjectContext"16@"TSCECalculationEngine"24
{TSCECellRefSet={map<TSKUIDStruct, TSCECellCoordSet, std::less<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSCECellCoordSet>>>={__tree<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>, std::allocator<std::__value_type<TSKUIDStruct, TSCECellCoordSet>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>>=Q}}}}24@0:8@"NSString"16
v32@0:8^v16r^{TSUCellCoord=ISBB}24
{TSUCellCoord=ISBB}20@0:8B16
{vector<NSString *, std::allocator<NSString *>>=^@^@{__compressed_pair<NSString *__strong *, std::allocator<NSString *>>=^@}}28@0:8@16B24
^{TSTHeaderPerTable={TSKUIDStruct=QQ}{TSUCellCoord=ISBB}@@@@B}28@0:8r^{TSKUIDStruct=QQ}16B24
^v24@0:8r^{TSUCellCoord=ISBB}16
@36@0:8@16B24^Q28
v40@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24r^{TSKUIDStruct=QQ}32
v40@0:8r^v16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24r^{TSKUIDStruct=QQ}32
v32@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16r^{TSKUIDStruct=QQ}24
@24@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16
B40@0:8@16r^v24r^{TSKUIDStruct=QQ}32
@28@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16B24
@36@0:8@16r^{TSKUIDStruct=QQ}24B32
{TSCECellRefSet={map<TSKUIDStruct, TSCECellCoordSet, std::less<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSCECellCoordSet>>>={__tree<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>, std::allocator<std::__value_type<TSKUIDStruct, TSCECellCoordSet>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>>=Q}}}}36@0:8@16r^{TSKUIDStruct=QQ}24B32
{TSCECellRefSet={map<TSKUIDStruct, TSCECellCoordSet, std::less<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSCECellCoordSet>>>={__tree<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>, std::allocator<std::__value_type<TSKUIDStruct, TSCECellCoordSet>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>>=Q}}}}24@0:8r^{TSKUIDStruct=QQ}16
{vector<TSTHeaderNameMgrTile *, std::allocator<TSTHeaderNameMgrTile *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<TSTHeaderNameMgrTile *__strong *, std::allocator<TSTHeaderNameMgrTile *>>="__value_"^@}}
{unordered_map<TSUCellCoord, TSTHeaderNameMgrEntry *, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, std::allocator<std::pair<const TSUCellCoord, TSTHeaderNameMgrEntry *>>>="__table_"{__hash_table<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>, std::allocator<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>>="__value_"f}}}
{unordered_map<TSCEUidCellRef, TSCECellCoordSet, std::hash<TSCEUidCellRef>, std::equal_to<TSCEUidCellRef>, std::allocator<std::pair<const TSCEUidCellRef, TSCECellCoordSet>>>="__table_"{__hash_table<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, std::__unordered_map_hasher<TSCEUidCellRef, std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, std::hash<TSCEUidCellRef>, std::equal_to<TSCEUidCellRef>, true>, std::__unordered_map_equal<TSCEUidCellRef, std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, std::equal_to<TSCEUidCellRef>, std::hash<TSCEUidCellRef>, true>, std::allocator<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSCEUidCellRef, std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, std::hash<TSCEUidCellRef>, std::equal_to<TSCEUidCellRef>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSCEUidCellRef, std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, std::equal_to<TSCEUidCellRef>, std::hash<TSCEUidCellRef>, true>>="__value_"f}}}
{unordered_map<TSKUIDStruct, TSTHeaderPerTable *, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSTHeaderPerTable *>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
{unordered_map<TSUCellCoord, TSKUIDStruct, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, std::allocator<std::pair<const TSUCellCoord, TSKUIDStruct>>>="__table_"{__hash_table<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>, std::allocator<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>>="__value_"f}}}
@"TSCENameTrie"
v56@0:8@16{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24
@60@0:8@16{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24B56
@36@0:8@16{TSUCellCoord=ISBB}24B32
@"TSTCellDiffArray"
@24@0:8{TSUModelColumnOrRowIndex=I}16i20
@20@0:8{TSUModelColumnOrRowIndex=I}16
{TSUModelColumnOrRowIndex=I}16@0:8
{TSUModelColumnOrRowIndex="_index"I}
@24@0:8{TSUViewColumnOrRowIndex=I}16i20
{TSUViewColumnOrRowIndex=I}16@0:8
{TSUViewColumnOrRowIndex="_index"I}
@56@0:8@16Q24Q32{TSUCellRect={TSUCellCoord=ISBB}{?=II}}40
v40@0:8Q16Q24@?32
v48@0:8@16Q24Q32@?40
v64@0:8@16Q24Q32{TSUCellRect={TSUCellCoord=ISBB}{?=II}}40@?56
@36@0:8d16B24o^d28
{CGRect={CGPoint=dd}{CGSize=dd}}56@0:8d16{CGRect={CGPoint=dd}{CGSize=dd}}24
{CGRect={CGPoint=dd}{CGSize=dd}}76@0:8d16{CGRect={CGPoint=dd}{CGSize=dd}}24B56o^@60o^{CGSize=dd}68
v76@0:8B16d20^{CGContext=}28{CGRect={CGPoint=dd}{CGSize=dd}}36@68
v76@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16d32{UIEdgeInsets=dddd}40B72
{set<TSTMergeRangeElem, TSTMergeRangeElemCompare, std::allocator<TSTMergeRangeElem>>="__tree_"{__tree<TSTMergeRangeElem, TSTMergeRangeElemCompare, std::allocator<TSTMergeRangeElem>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<TSTMergeRangeElem, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, TSTMergeRangeElemCompare>="__value_"Q}}}
@108@0:8@16d24d32@40B48C52{UIEdgeInsets=dddd}56i88i92i96@100
@40@0:8@"TSTLayoutEngine"16@"TSTCellRegion"24@"TSTCellRegion"32
@24@0:8@"TSTLayoutEngine"16
@32@0:8@"TSTLayoutEngine"16@"TSTCellRegion"24
@24@0:8@"<TSTLayoutDynamicResizeInfoProtocol>"16
v24@0:8@"TSTLayoutEngine"16
@"TSTImmutableColumnRowUIDMap"
B32@0:8@16Q24
{unordered_map<TSUViewColumnIndex, TSUModelColumnIndex, std::hash<TSUViewColumnIndex>, std::equal_to<TSUViewColumnIndex>, std::allocator<std::pair<const TSUViewColumnIndex, TSUModelColumnIndex>>>="__table_"{__hash_table<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, std::__unordered_map_hasher<TSUViewColumnIndex, std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, std::hash<TSUViewColumnIndex>, std::equal_to<TSUViewColumnIndex>, true>, std::__unordered_map_equal<TSUViewColumnIndex, std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, std::equal_to<TSUViewColumnIndex>, std::hash<TSUViewColumnIndex>, true>, std::allocator<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSUViewColumnIndex, std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, std::hash<TSUViewColumnIndex>, std::equal_to<TSUViewColumnIndex>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSUViewColumnIndex, std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, std::equal_to<TSUViewColumnIndex>, std::hash<TSUViewColumnIndex>, true>>="__value_"f}}}
@"TSTCategoryTranslator"
@"TSTTableTile"
@"TSTTableTileRowInfo"
{TSKUIDStruct=QQ}24@0:8I16B20
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}28@0:8@16B24
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}36@0:8{_NSRange=QQ}16B32
@"TSCECalculationEngine"16@0:8
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}28@0:8@"NSIndexSet"16B24
@"NSMutableIndexSet"28@0:8r^v16B24
@32@0:8r^{TSKUIDStruct=QQ}16r^{TSKUIDStruct=QQ}24
r^{TSKUIDStruct=QQ}16@0:8
@40@0:8C16{TSKUIDStruct=QQ}20C36
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
v24@0:8^{TSKUIDStruct=QQ}16
{map<TSKUIDStructCoord, TSTCell *, std::less<TSKUIDStructCoord>, std::allocator<std::pair<const TSKUIDStructCoord, TSTCell *>>>="__tree_"{__tree<std::__value_type<TSKUIDStructCoord, TSTCell *>, std::__map_value_compare<TSKUIDStructCoord, std::__value_type<TSKUIDStructCoord, TSTCell *>, std::less<TSKUIDStructCoord>, true>, std::allocator<std::__value_type<TSKUIDStructCoord, TSTCell *>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSKUIDStructCoord, TSTCell *>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<TSKUIDStructCoord, std::__value_type<TSKUIDStructCoord, TSTCell *>, std::less<TSKUIDStructCoord>, true>>="__value_"Q}}}
@34@0:8@16{TSUModelColumnIndex=S}24@26
@42@0:8@16@24{TSUModelColumnIndex=S}32@34
@32@0:8@16^B24
B36@0:8I16r^{TSKUIDStruct=QQ}20@28
{TSUModelColumnIndex=S}24@0:8@16
@"TSTFormulaPredicate"
@36@0:8@16i24@28
B28@0:8q16C24
B36@0:8I16@20@28
v44@0:8@16@24Q32B40
v34@0:8{TSUModelColumnIndex=S}16@18@?26
@26@0:8{TSUModelColumnIndex=S}16@18
Q26@0:8{TSUModelColumnIndex=S}16@18
@52@0:8C16{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}20{TSUCellCoord=ISBB}44
@36@0:8C16@20{TSUCellCoord=ISBB}28
B32@0:8@16{TSUCellCoord=ISBB}24
@56@0:8C16@20@28@36C44C48B52
@80@0:8C16@20@28C36C40{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}44{TSUCellCoord=ISBB}68B76
@64@0:8C16@20@28C36C40@44{TSUCellCoord=ISBB}52B60
@76@0:8C16@20@28C36C40{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}44{TSUCellCoord=ISBB}68
{TSCEFormulaCreator=@?}44@0:8C16C20@24I32B36B40
@96@0:8C16@20@28d36d44C52C56{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}60{TSUCellCoord=ISBB}84B92
@92@0:8C16@20@28d36d44C52C56{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}60{TSUCellCoord=ISBB}84
@72@0:8C16d20d28C36{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}40{TSUCellCoord=ISBB}64
@80@0:8C16d20C28d32C40C44{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}48{TSUCellCoord=ISBB}72
@60@0:8C16@20{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}28{TSUCellCoord=ISBB}52
@24@0:8^{TSCEFormulaRewriteContext=@@{TSCEFormulaRewriteContextRecord={TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}{TSKUIDStruct=QQ}{TSUColumnRowOffset=ii}BBBBBBB}}16
v40@0:8r^{TSKUIDStruct=QQ}16r^{TSKUIDStruct=QQ}24r^{TSKUIDStruct=QQ}32
v48@0:8^v16@24r^{TSKUIDStruct=QQ}32r^{TSUCellCoord=ISBB}40
C48@0:8@16Q24@32{TSUCellCoord=ISBB}40
B36@0:8C16C20C24^B28
B40@0:8{TSUCellCoord=ISBB}16r^{TSKUIDStruct=QQ}24@32
v32@0:8q16@24
@40@0:8r^v16@24^B32
v40@0:8r^v16@24^B32
v28@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16C24
@48@0:8r^v16@24r^{TSKUIDStruct=QQ}32^B40
@24@0:8{TSUColumnRowOffset=ii}16
@32@0:8r^{TSKUIDStruct=QQ}16{TSUCellCoord=ISBB}24
@32@0:8^{TSCEFormulaRewriteContext=@@{TSCEFormulaRewriteContextRecord={TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}{TSKUIDStruct=QQ}{TSUColumnRowOffset=ii}BBBBBBB}}16@?24
v40@0:8^{TSCEFormulaRewriteContext=@@{TSCEFormulaRewriteContextRecord={TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}{TSKUIDStruct=QQ}{TSUColumnRowOffset=ii}BBBBBBB}}16^B24@?32
C24@0:8C16B20
{TSCEUidCellRef={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16@0:8
v64@0:8{TSCEUidCellRef={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
@"TSTFormulaPredArg"
{TSCEUidCellRef="_columnUid"{TSKUIDStruct="_lower"Q"_upper"Q}"_rowUid"{TSKUIDStruct="_lower"Q"_upper"Q}"_tableUid"{TSKUIDStruct="_lower"Q"_upper"Q}}
@"TSTStrokeSelection"
@68@0:8i16@20d28{CGRect={CGPoint=dd}{CGSize=dd}}36
v24@0:8^{CGContext=}16
@40@0:8@16@24@?32
{vector<TSUCellRect, std::allocator<TSUCellRect>>=^{TSUCellRect}^{TSUCellRect}{__compressed_pair<TSUCellRect *, std::allocator<TSUCellRect>>=^{TSUCellRect}}}32@0:8^v16^v24
@36@0:8{_NSRange=QQ}16I32
@36@0:8{_NSRange=QQ}16S32
v40@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16@?32
{vector<TSUCellRect, std::allocator<TSUCellRect>>=^{TSUCellRect}^{TSUCellRect}{__compressed_pair<TSUCellRect *, std::allocator<TSUCellRect>>=^{TSUCellRect}}}24@0:8Q16
@32@0:8{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
v36@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16B32
{set<TSUCellRect, TSTCellRangeRowMajorLess, std::allocator<TSUCellRect>>="__tree_"{__tree<TSUCellRect, TSTCellRangeRowMajorLess, std::allocator<TSUCellRect>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<TSUCellRect, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, TSTCellRangeRowMajorLess>="__value_"Q}}}
{set<TSUCellRect, TSTCellRangeColumnMajorLess, std::allocator<TSUCellRect>>="__tree_"{__tree<TSUCellRect, TSTCellRangeColumnMajorLess, std::allocator<TSUCellRect>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<TSUCellRect, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, TSTCellRangeColumnMajorLess>="__value_"Q}}}
{RefTypeHolder<TSCECellRef, 2>={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}}24@0:8r^v16
{RefTypeHolder<TSCECellRef, 1>={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}}24@0:8r^v16
{RefTypeHolder<TSCECellRef, 0>={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}}24@0:8r^v16
{TSUModelCellCoord={TSUCellCoord=ISBB}}24@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16
{TSUModelCellCoord={TSUCellCoord=ISBB}}24@0:8{TSUChromeCellCoord={TSUCellCoord=ISBB}}16
{TSUViewCellCoord={TSUCellCoord=ISBB}}24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
{TSUChromeCellCoord={TSUCellCoord=ISBB}}24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
{TSUChromeCellCoord={TSUCellCoord=ISBB}}24@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16
{TSUViewCellCoord={TSUCellCoord=ISBB}}24@0:8{TSUChromeCellCoord={TSUCellCoord=ISBB}}16
{TSUModelRowIndex=I}20@0:8{TSUViewRowIndex=I}16
{TSUModelRowIndex=I}20@0:8{TSUChromeRowIndex=I}16
{TSUModelColumnIndex=S}18@0:8{TSUViewColumnIndex=S}16
{TSUModelColumnIndex=S}18@0:8{TSUChromeColumnIndex=S}16
{TSUViewRowIndex=I}20@0:8{TSUModelRowIndex=I}16
{TSUViewColumnIndex=S}18@0:8{TSUModelColumnIndex=S}16
{TSUChromeRowIndex=I}20@0:8{TSUViewRowIndex=I}16
{TSUChromeColumnIndex=S}18@0:8{TSUViewColumnIndex=S}16
{TSUViewRowIndex=I}20@0:8{TSUChromeRowIndex=I}16
{TSUViewColumnIndex=S}18@0:8{TSUChromeColumnIndex=S}16
{TSUChromeRowIndex=I}20@0:8{TSUModelRowIndex=I}16
{TSUChromeColumnIndex=S}18@0:8{TSUModelColumnIndex=S}16
{TSKUIDStruct=QQ}18@0:8{TSUModelColumnIndex=S}16
{TSKUIDStruct=QQ}20@0:8{TSUModelRowIndex=I}16
{TSUModelColumnIndex=S}32@0:8{TSKUIDStruct=QQ}16
{TSUModelRowIndex=I}32@0:8{TSKUIDStruct=QQ}16
{TSUViewColumnIndex=S}32@0:8{TSKUIDStruct=QQ}16
{TSUViewRowIndex=I}32@0:8{TSKUIDStruct=QQ}16
{TSKUIDStruct=QQ}18@0:8{TSUViewColumnIndex=S}16
{TSKUIDStruct=QQ}20@0:8{TSUViewRowIndex=I}16
@"TSCECellTractRef"24@0:8@"TSCECellTractRef"16
@"NSMutableIndexSet"24@0:8@"NSMutableIndexSet"16
v20@0:8{TSUViewRowIndex=I}16
v18@0:8{TSUViewColumnIndex=S}16
{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}24@0:8{TSUCellCoord=ISBB}16
{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}24@0:8Q16
@32@0:8r^v16o^B24
i32@0:8o@16{TSUViewCellCoord={TSUCellCoord=ISBB}}24
@24@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16
@20@0:8{TSUViewRowIndex=I}16
@32@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16@24
i32@0:8@16{TSUViewCellCoord={TSUCellCoord=ISBB}}24
d20@0:8{TSUViewRowIndex=I}16
d18@0:8{TSUViewColumnIndex=S}16
i42@0:8{TSUViewColumnIndex=S}16r^v18@26Q34
i48@0:8{TSUViewRowIndex=I}16r^v20@28Q36B44
v24@0:8{TSUViewRowIndex=I}16{TSUViewRowIndex=I}20
v20@0:8{TSUViewColumnIndex=S}16{TSUViewColumnIndex=S}18
v36@0:8{_NSRange=QQ}16{TSUViewRowIndex=I}32
v40@0:8@16{TSUViewCellCoord={TSUCellCoord=ISBB}}24@32
@32@0:8@16{TSUViewCellCoord={TSUCellCoord=ISBB}}24
{TSUViewCellCoord={TSUCellCoord=ISBB}}24@0:8@16
B32@0:8{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}24@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16
{TSUViewCellCoord={TSUCellCoord=ISBB}}24@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16
{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}32@0:8{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{vector<TSUViewCellRect, std::allocator<TSUViewCellRect>>=^{TSUViewCellRect}^{TSUViewCellRect}{__compressed_pair<TSUViewCellRect *, std::allocator<TSUViewCellRect>>=^{TSUViewCellRect}}}32@0:8{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{vector<TSUViewCellRect, std::allocator<TSUViewCellRect>>=^{TSUViewCellRect}^{TSUViewCellRect}{__compressed_pair<TSUViewCellRect *, std::allocator<TSUViewCellRect>>=^{TSUViewCellRect}}}24@0:8@16
{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}24@0:8r^v16
{RefTypeHolder<TSCERangeRef, 1>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}24@0:8r^v16
{TSUModelCellCoord={TSUCellCoord=ISBB}}48@0:8{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
{TSUViewCellCoord={TSUCellCoord=ISBB}}48@0:8{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
@28@0:8C16r^{TSKUIDStruct=QQ}20
@"TSTStrokeLayerMergedStack"
@40@0:8r^v16@24^I32
v36@0:8^v16@24I32
v24@0:8{TSCEGridDimensions=II}16
B40@0:8{TSUCellCoord=ISBB}16@24r^{TSKUIDStruct=QQ}32
v32@0:8^{TSCEFormulaRewriteContext=@@{TSCEFormulaRewriteContextRecord={TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}{TSKUIDStruct=QQ}{TSUColumnRowOffset=ii}BBBBBBB}}16@?24
@40@0:8@16r^{TSKUIDStruct=QQ}24^{TSCEFormulaRewriteContext=@@{TSCEFormulaRewriteContextRecord={TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}{TSKUIDStruct=QQ}{TSUColumnRowOffset=ii}BBBBBBB}}32
@40@0:8@16r^{TSKUIDStruct=QQ}24r^{TSUCellCoord=ISBB}32
B40@0:8{TSUCellCoord=ISBB}16@24^Q32
@"TSCECellCoordinateVector"
d76@0:8d16@24q32d40I48^d52^d60^d68
B60@0:8d16@24q32I40^d44^d52
@32@0:8@16r^v24
@32@0:8I16C20^{TSKUIDStruct=QQ}24
C32@0:8{_NSRange=QQ}16
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}32@0:8r^v16r^v24
@68@0:8@16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24@40{TSUCellRect={TSUCellCoord=ISBB}{?=II}}48i64
I32@0:8^v16^{TSTColumnOrRowMap=IIIB}24
{_NSRange=QQ}32@0:8r^{TSTColumnOrRowMap=IIIB}16r^v24
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}48@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16r^v32r^v40
{TSUCellCoord=ISBB}40@0:8{TSUCellCoord=ISBB}16r^v24r^v32
^v48@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16r^v32r^v40
{vector<TSUCellRect, std::allocator<TSUCellRect>>=^{TSUCellRect}^{TSUCellRect}{__compressed_pair<TSUCellRect *, std::allocator<TSUCellRect>>=^{TSUCellRect}}}48@0:8r^v16^@24{TSUCellRect={TSUCellCoord=ISBB}{?=II}}32
{set<TSTColumnOrRowMap, TSTColumnOrRowMapTgtLess, std::allocator<TSTColumnOrRowMap>>="__tree_"{__tree<TSTColumnOrRowMap, TSTColumnOrRowMapTgtLess, std::allocator<TSTColumnOrRowMap>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<TSTColumnOrRowMap, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, TSTColumnOrRowMapTgtLess>="__value_"Q}}}
{unordered_map<TSKUIDStruct, TSTPlanForGroupingCell, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSTPlanForGroupingCell>>>={__hash_table<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>>>={unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, void *>>>={__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, void *> *>=^v}}{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>=Q}{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>=f}}}24@0:8@16
B40@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24@32
@40@0:8r^v16@24r^{TSKUIDStruct=QQ}32
@48@0:8@16@24q32@40
v44@0:8@16S24@28@36
B56@0:8@16r^v24@32@40@48
S24@0:8q16
@48@0:8Q16q24@32@40
@60@0:8d16C24@28@36{TSKUIDStruct=QQ}44
{vector<TSUCellCoord, std::allocator<TSUCellCoord>>=^{TSUCellCoord}^{TSUCellCoord}{__compressed_pair<TSUCellCoord *, std::allocator<TSUCellCoord>>=^{TSUCellCoord}}}16@0:8
v40@0:8{vector<TSUCellCoord, std::allocator<TSUCellCoord>>=^{TSUCellCoord}^{TSUCellCoord}{__compressed_pair<TSUCellCoord *, std::allocator<TSUCellCoord>>=^{TSUCellCoord}}}16
@32@0:8r^v16r^v24
Q24@0:8C16B20
i28@0:8@16{TSUViewRowIndex=I}24
i26@0:8@16{TSUViewColumnIndex=S}24
i56@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16@?24@?32@?40@?48
v52@0:8{TSUViewRowIndex=I}16@?20@?28@?36@?44
{TSUModelCellCoord={TSUCellCoord=ISBB}}24@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
B32@0:8^{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16{TSUCellCoord=ISBB}24
S24@0:8I16S20
{TSUCellCoord=ISBB}32@0:8{TSUColumnRowOffset=ii}16{TSUCellCoord=ISBB}24
I28@0:8Q16I24
@"TSTHiddenStateIndexSet"
v56@0:8@16@24{TSUCellCoord=ISBB}32Q40^B48
B32@0:8{CGPoint=dd}16
v40@0:8@16^{CGContext=}24@32
v40@0:8@"TSWPUIGraphicalAttachment"16^{CGContext=}24@"TSWPSelection"32
@"TSTTableNameSelection"
@24@0:8r*16
@32@0:8q16@24
q24@0:8q16
q32@0:8q16@24
@56@0:8{TSKUIDStruct=QQ}16{TSKUIDStruct=QQ}32q48
@40@0:8{TSKUIDStruct=QQ}16q32
@34@0:8{TSUModelColumnIndex=S}16q18@26
r^{TSCEFunctor=@C}16@0:8
{TSCEFunctor="_formula"@"TSCEFormulaObject""_numArgs"C}
@32@0:8@16r^{TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}24
@"TSTFormulaRewriteSpec"
{TSUViewCellCoord="_coord"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}}
@"TSTPivotTranslator"
i32@0:8@16S24B28
i28@0:8@16S24
^{TSCETableResolver=^^?}24@0:8@16
{TSKUIDStruct=QQ}24@0:8r^{TSKUIDStruct=QQ}16
{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}44@0:8@16r^{TSKUIDStruct=QQ}24C32^@36
@44@0:8@16r^{TSKUIDStruct=QQ}24C32^@36
^{TSCETableResolver=^^?}24@0:8@"<TSCEReferenceResolving>"16
C24@0:8@"TSCECategoryRef"16
{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}44@0:8@"TSCECategoryRef"16r^{TSKUIDStruct=QQ}24C32^@36
@"TSCEValueGrid"44@0:8@"TSCECategoryRef"16r^{TSKUIDStruct=QQ}24C32^@36
{vector<TSCECellRef, std::allocator<TSCECellRef>>=^{TSCECellRef}^{TSCECellRef}{__compressed_pair<TSCECellRef *, std::allocator<TSCECellRef>>=^{TSCECellRef}}}32@0:8@"TSCECategoryRef"16r^{TSKUIDStruct=QQ}24
{vector<TSCECategoryRef *, std::allocator<TSCECategoryRef *>>=^@^@{__compressed_pair<TSCECategoryRef *__strong *, std::allocator<TSCECategoryRef *>>=^@}}24@0:8@"TSCECategoryRef"16
{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}24@0:8@"TSCECategoryRef"16
@"<TSCEResolverContainer>"32@0:8@"NSString"16@"TSKDocumentRoot"24
@"<TSCEReferenceResolving>"40@0:8@"NSString"16@"TSKDocumentRoot"24@"<TSCEReferenceResolving>"32
@"<TSCEReferenceResolving>"40@0:8@"NSString"16@"TSKDocumentRoot"24@"NSString"32
@40@0:8q16@24@32
q20@0:8i16
{TSTImportWarningSetCellWarningFlags="mCondFormatAboveAvgEqualAverageImportWarning"b1"mCondFormatAboveAvgStdDevImportWarning"b1"mCondFormatComplexFormulaImportWarning"b1"mCondFormatContainsErrorsImportWarning"b1"mCondFormatExprImportWarning"b1"mCondFormatNotContainsErrorsImportWarning"b1"mCondFormatParametersNotAllTheSameTypeImportWarning"b1"mCondFormatStopIfTrueImportWarning"b1"mCondFormatUnsupportedOperatorImportWarning"b1"mCondFormatUnsupportedStylingImportWarning"b1"mCondFormatUnsupportedTimePeriodImportWarning"b1"mUnsupportedConditionalFormatImportWarning"b1"mUnsupportedDataFormatImportWarning"b1"mDurationFormatRangeChangedUpgradeWarning"b1}
{TSTImportFormulaWarning="mType"q"mOriginalFormula"@"NSString""mSupplementaryText"@"NSString"}
v32@0:8@16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24
{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24@0:8Q16
{unordered_map<TSCECellRef, TSTImportWarningSet *, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, std::allocator<std::pair<const TSCECellRef, TSTImportWarningSet *>>>="__table_"{__hash_table<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, std::__unordered_map_hasher<TSCECellRef, std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, true>, std::__unordered_map_equal<TSCECellRef, std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, std::equal_to<TSCECellRef>, std::hash<TSCECellRef>, true>, std::allocator<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSCECellRef, std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSCECellRef, std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, std::equal_to<TSCECellRef>, std::hash<TSCECellRef>, true>>="__value_"f}}}
{vector<TSCECellRef, std::allocator<TSCECellRef>>="__begin_"^{TSCECellRef}"__end_"^{TSCECellRef}"__end_cap_"{__compressed_pair<TSCECellRef *, std::allocator<TSCECellRef>>="__value_"^{TSCECellRef}}}
@48@0:8@16@24^B32^B40
@40@0:8@16Q24@32
i24@0:8Q16
B24@0:8@"<TSUMultipleChoiceListChoiceProviding>"16
@"NSString"24@0:8Q16
@"NSDate"24@0:8Q16
i20@0:8c16
v44@0:8r^v16i24@28@?36
v40@0:8r^v16@24@?32
@"NSObject<TSTTableDataPayloadHashing>"
B24@0:8r^{TSUCellCoord=ISBB}16
{map<TSUCellCoord, TSTCell *, std::less<TSUCellCoord>, std::allocator<std::pair<const TSUCellCoord, TSTCell *>>>="__tree_"{__tree<std::__value_type<TSUCellCoord, TSTCell *>, std::__map_value_compare<TSUCellCoord, std::__value_type<TSUCellCoord, TSTCell *>, std::less<TSUCellCoord>, true>, std::allocator<std::__value_type<TSUCellCoord, TSTCell *>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSUCellCoord, TSTCell *>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<TSUCellCoord, std::__value_type<TSUCellCoord, TSTCell *>, std::less<TSUCellCoord>, true>>="__value_"Q}}}
@"TSPTemporaryObjectContextDelegate"
@"TSPObjectContext"
{TSCECellCoordSet="_rowsPerColumn"{map<unsigned short, TSUIndexSet, std::less<unsigned short>, std::allocator<std::pair<const unsigned short, TSUIndexSet>>>="__tree_"{__tree<std::__value_type<unsigned short, TSUIndexSet>, std::__map_value_compare<unsigned short, std::__value_type<unsigned short, TSUIndexSet>, std::less<unsigned short>, true>, std::allocator<std::__value_type<unsigned short, TSUIndexSet>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned short, TSUIndexSet>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<unsigned short, std::__value_type<unsigned short, TSUIndexSet>, std::less<unsigned short>, true>>="__value_"Q}}}}
B28@0:8I16I20B24
C20@0:8C16
B24@0:8C16C20
@32@0:8^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}16@24
v32@0:8^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}16@24
v36@0:8^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}16@24B32
v36@0:8{TSUDecimal={?=[2Q]}}16B32
v32@0:8{TSUDecimal={?=[2Q]}}16
v24@0:8r^{TSUDecimal={?=[2Q]}}16
v48@0:8r^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16@24B32^B36B44
@32@0:8C16B20^B24
B32@0:8C16@20S28
v28@0:8B16C20B24
@28@0:8C16^B20
@24@0:8^B16
@40@0:8Q16@24@32
B24@0:8r^v16
@40@0:8I16C20{TSKUIDStruct=QQ}24
@48@0:8S16C20{TSKUIDStruct=QQ}24d40
v28@0:8S16@20
v24@0:8C16S20
v28@0:8S16Q20
^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}24@0:8{TSUCellCoord=ISBB}16
v36@0:8{TSUCellCoord=ISBB}16B24@?28
@40@0:8{TSUCellCoord=ISBB}16^B24^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}32
@32@0:8{TSUCellCoord=ISBB}16^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}24
{?=IIIIIIIIIS}100@0:8@16@24@32@40@48@56@64@72@80^{?={?=Cb8b16b16b16b16b16}[0C]}88B96
v68@0:8@16{TSUCellCoord=ISBB}24r^{TSKUIDStruct=QQ}32@40@48B56B60B64
v64@0:8@16{TSUCellCoord=ISBB}24r^{TSKUIDStruct=QQ}32@40@48B56B60
v72@0:8@16{TSUCellCoord=ISBB}24r^{TSKUIDStruct=QQ}32@40@48B56B60^B64
v60@0:8@16r^{TSKUIDStruct=QQ}24@32@40B48B52B56
{?=IIIIIIIIIS}32@0:8@16{TSUCellCoord=ISBB}24
{?=IIIIIIIIIS}36@0:8@16^{?={?=Cb8b16b16b16b16b16}[0C]}24B32
@32@0:8@16d24
v32@0:8@16B24C28
v32@0:8^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}16{TSUCellCoord=ISBB}24
@24@0:8^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}16
{vector<TSUCellRect, std::allocator<TSUCellRect>>=^{TSUCellRect}^{TSUCellRect}{__compressed_pair<TSUCellRect *, std::allocator<TSUCellRect>>=^{TSUCellRect}}}16@0:8
v32@0:8^@16@24
v40@0:8^@16@24@?32
@24@0:8i16B20
v56@0:8@16r^{TSKUIDStruct=QQ}24@32@40B48B52
{vector<TSTCell *, std::allocator<TSTCell *>>=^@^@{__compressed_pair<TSTCell *__strong *, std::allocator<TSTCell *>>=^@}}44@0:8{TSUModelRowIndex=I}16@20^v28@?36
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}40@0:8@16{TSUCellCoord=ISBB}24r^{TSKUIDStruct=QQ}32
v48@0:8^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}16r^{TSUCellCoord=ISBB}24r^{TSKUIDStruct=QQ}32^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}40
@"TSTTableDataList"
@"TSKCustomFormatList"
@"TSTTableTileStorage"
@"TSTTableHeaderStorage"
@"TSPLazyReference"
@"TSTMergeRegionMap"
@52@0:8{?={?=II}{?=II}}16^{CGAffineTransform=dddddd}32d40B48
v60@0:8@16{?={?=II}{?=II}}24^{CGAffineTransform=dddddd}40d48B56
@"TSKAnnotationAuthor"16@0:8
v24@0:8@"TSKAnnotationAuthor"16
@"NSDate"16@0:8
@"TSDCommentStorage"16@0:8
v24@0:8@"TSDCommentStorage"16
@64@0:8@16@24{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}32
@40@0:8@16@24{TSUModelCellCoord={TSUCellCoord=ISBB}}32
@44@0:8r^{TSKUIDStruct=QQ}16{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}24I40
@36@0:8r^{TSKUIDStruct=QQ}16r^v24B32
@60@0:8r^{TSKUIDStruct=QQ}16r^v24@32B40r^v44r^v52
@48@0:8r^{TSKUIDStruct=QQ}16r^v24r^{TSKUIDStruct=QQ}32r^v40
@56@0:8r^{TSKUIDStruct=QQ}16r^v24r^{TSKUIDStruct=QQ}32r^v40@48
@72@0:8r^{TSKUIDStruct=QQ}16r^v24r^{TSKUIDStruct=QQ}32r^v40@48@56r^{TSKUIDStruct=QQ}64
@48@0:8r^{TSKUIDStruct=QQ}16r^v24r^v32{TSUCellCoord=ISBB}40
@40@0:8r^v16r^v24r^{TSKUIDStruct=QQ}32
@40@0:8r^{TSKUIDStruct=QQ}16r^v24r^v32
@32@0:8r^{TSKUIDStruct=QQ}16r^v24
@"TSTFormulaRewrite_PivotInfo"
@"TSTAutofillSelection"
Q32@0:8@16@24
d40@0:8@16@24@32
@"NSObject<TSDContainerInfo>"16@0:8
@"TSTTableReferences"16@0:8
@"TSTSelectionDragController"16@0:8
v24@0:8@"TSTSelectionDragController"16
v24@0:8@"NSSet"16
B48@0:8@16{_NSRange=QQ}24@40
B24@0:8@"UITextField"16
v24@0:8@"UITextField"16
v32@0:8@"UITextField"16q24
B48@0:8@"UITextField"16{_NSRange=QQ}24@"NSString"40
v32@0:8@16^{CGContext=}24
v24@0:8@"CALayer"16
v32@0:8@"CALayer"16^{CGContext=}24
@"<CAAction>"32@0:8@"CALayer"16@"NSString"24
@36@0:8{CGPoint=dd}16B32
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8{TSUCellCoord=ISBB}16
v56@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16^{?=Bdddddd}32^{CGRect={CGPoint=dd}{CGSize=dd}}40^{CGRect={CGPoint=dd}{CGSize=dd}}48
{TSUCellCoord=ISBB}32@0:8{CGPoint=dd}16
{CGAffineTransform=dddddd}56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{TSUCellCoord=ISBB}48
{CGRect={CGPoint=dd}{CGSize=dd}}120@0:8@16{TSUCellCoord=ISBB}24@32{CGRect={CGPoint=dd}{CGSize=dd}}40{CGAffineTransform=dddddd}72
{CGAffineTransform=dddddd}40@0:8@16@24{TSUCellCoord=ISBB}32
v44@0:8@16Q24B32@36
v32@0:8^{CGContext=}16@24
{CGRect={CGPoint=dd}{CGSize=dd}}72@0:8@16{CGAffineTransform=dddddd}24
v48@0:8@16{?={?=II}{?=II}}24^{CGContext=}40
v48@0:8@16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24^{CGContext=}40
v64@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24^{CGContext=}56
v68@0:8@16B24{CGRect={CGPoint=dd}{CGSize=dd}}28^{CGContext=}60
v80@0:8^{CGContext=}16d24{CGRect={CGPoint=dd}{CGSize=dd}}32@64{TSUCellCoord=ISBB}72
v124@0:8^{CGContext=}16{CGRect={CGPoint=dd}{CGSize=dd}}24@56{TSUCellCoord=ISBB}64q72{CGRect={CGPoint=dd}{CGSize=dd}}80i112@116
@32@0:8{CGPoint=dd}16
@"TSTTableReferences"
@"TSTSelectionDragController"
@"<TSTTableAnimationController>"
@"<TSTTableRepDelegate>"
@"<TSTTableChromeProvider>"
@"<TSTCanvasReferenceController>"
@"TSTCellRegionGatherer"
@"CAShapeLayer"
v40@0:8@16{TSUCellCoord=ISBB}24B32B36
v24@0:8@"TSTTableRep"16
v24@0:8@"TSTLayoutSpace"16
v40@0:8@"TSTCell"16{TSUCellCoord=ISBB}24B32B36
B24@0:8@"TSDRep"16
