%$"
%&"
%("
%*"
%,"
%."
%0"
%2"
%4"
%6"
%8"
%:"
%<"
%>"
%@"
%B"
%D"
%F"
%H"
%J"
%L"
%N"
%P"
%R"
%T"
%V"
%X"
%Z"
%\"
%^"
%`"
%b"
%d"
%f"
%h"
%j"
%l"
%n"
%p"
%r"
%t"
%v"
%x"
%z"
%|"
%~"
TSWPStorage *TSCERichTextStorage::wpStorage() const
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCERichTextStorage.mm
can't access TSWPStorage of non-rich rich text storage
TSCERichTextStorage TSCERichTextStorage::substringWithRange(const NSRange &) const
Couldn't convert string obtained from storage to UTF-8 - broke a composed character, perhaps?
v56@?0@"NSString"8{_NSRange=QQ}16{_NSRange=QQ}32^B48
@"NSString"16@?0@"NSString"8
-[TSWPStorage(TSTFormulaAdditions) i_copyIntoContext:stylesheet:paragraphStyle:listStyle:bakeModes:resettingHostTableToMatch:referenceColorHelper:disableMenus:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSWPStorage_FormulaAdditions.mm
Creating a copy of the storage resulted in a smaller storage.
-[TSWPStorage(TSTFormulaAdditions) i_copyIntoContext:stylesheet:paragraphStyle:listStyle:bakeModes:resettingHostTableToMatch:referenceColorHelper:disableMenus:]_block_invoke
Found an attachment that wasn't a TSTWPTokenAttachment
attachment character index out of bounds. Bailing.
Expected destination storage to have an attachment character at this index.
v8@?0
TSUDefaultCat
v40@?0@"TSTWPTokenAttachment"8Q16Q24^B32
-[TSWPStorage(TSTFormulaAdditions) p_rangeOfString:orNodeClass:range:]
Do not call method
%s: %s
-[TSWPStorage(TSTFormulaAdditions) p_stringWithFormulaAsTextFromRange:returningTokenValues:]
Attachment index mismatch
-[TSWPStorage(TSTFormulaAdditions) p_detokenizeTokenAtCharIndex:]
expected only token attachments within the detokenization range
-[TSWPStorage(TSTFormulaAdditions) p_replaceTokenAtCharIndex:withText:]
invalid nil value for '%{public}s'
token
text
-[TSTGroupNode computedGroupValueTuple]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTGroupNode.mm
Only the root groupNode should have no parentNode pointer
-[TSTGroupNode setupWithGroupCellValue:groupBy:atLevel:groupUid:children:]
Root node shouldn't have a cellValue
v24@?0q8^B16
-[TSTGroupNode loadFromArchive:unarchiver:forGroupBy:]
unarchiver
v32@?0{TSKUIDStruct=QQ}8^B24
v16@?0@"NSMutableArray"8
-[TSTGroupNode encodeToArchive:backwardCompatOptions:archiver:]
Only the root node has a nil groupCellValue?!
-[TSTGroupNode updateWithDocumentRoot:]
documentRoot
-[TSTGroupNode findGroupNodeForDisplayValuesFromSplitter:atLevel:startAtComponent:startAtWord:preserveFlags:]
Not supported for disconnected GroupNodes
boo_TRUE
boo_FALSE
str_%@
-[TSTGroupNode p_refreshGroupValue]
Unexpected new key:%{public}@, expected:%{public}@
-[TSTGroupNode updateGroupCellValueIfKeyMatches:]
canonicalKeyString shouldn't change here
-[TSTGroupNode insertRowUid:atRowIndex:forGroupValueTuple:atLevel:withLocale:createdGroupNodeCount:]
Pivot table groupBy's EXPECT to be provided with valid rowIndexes
Invalid rowUids should only be coming in for disconnected GroupNodes - normally, we should only add valid rows
-[TSTGroupNode removeRowUid:forGroupValueTuple:atLevel:withLocale:]
Pivot groupBys shouldn't need removeRowUid - we'll need to fix _pivotOnlyRowIndexes if they do
-[TSTGroupNode removeRowUids:]
Pivot groupBys shouldn't need removeRowUids - we'll need to fix _pivotOnlyRowIndexes if they do
+[TSTGroupNode needFormulasForAggregateType:]
Shouldn't be asking if TSCEAggType_Indirect needs formulas
Shouldn't be asking if TSCEAggType_INVALID needs formulas
-[TSTGroupNode rebuildFormulasForAggNode:]
v24@?0@"TSTGroupNode"8^B16
v24@?0r^{TSUIndexRange=qq}8^B16
-[TSTGroupNode containsAnyRowUidInRowUidSet:]
-[TSTGroupNode clearAllGroupNodes]
-[TSTGroupNode clearEmptyNodes]
+[TSTGroupNode localizedStringForCellValue:categoryLevel:groupBy:]
result
-[TSTGroupNode rawGroupValueCellValue]
-[TSTGroupNode groupValueCellValue]
-[TSTGroupNode groupValueCellValueForGroupBySet:aggIndex:appendAggregateName:]
Grand Total
TSTables
%@ %@
-[TSTGroupNode groupValueHierarchyForChart:]
-[TSTGroupNode groupValueHierarchyForChart:groupBySet:aggIndex:appendAggregateName:]
-[TSTGroupNode groupValueHierarchyStringWithDelimiterString:namingContext:]
-[TSTGroupNode firstVisibleNodeUsingColumnRowUIDMap:forDimension:leafLevel:pivotTableHiddenExtent:]
columnRowUIDMap
-[TSTGroupNode addAggNode:]
Aggregator needs to be setup already
vector
void TSTArgumentAtIndexLocator::setArgumentAt(NSInteger, TSTFormulaPredArg *__strong)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTArgumentAtIndexLocator.mm
Position %d not supported
virtual TSCEASTElement *TSTArgumentAtIndexLocator::linkedRefNode(TSCEASTLinkedRefElement *)
Never used - now deprecated TSCEASTLinkedRowRefNode
static void TSCERelativeCellCoordinate::assertColumnInMaxRange(TSURelativeColumnIndex)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCETypes.h
TSCERelativeCellCoordinate: column outside valid range: %d
static void TSCERelativeCellCoordinate::assertRowInMaxRange(TSURelativeRowIndex)
TSCERelativeCellCoordinate row outside valid range: %d
-[TSCEWarning copyByRemappingEntityIDs:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEWarning.mm
TSCE_PORT_ENABLE_REFERENCES: This is probably a bug.
-[TSCEWarning displayStringWithCalculationEngine:forTable:andCellID:]
empty cell warnings are not supported
The formula refers to %@, which contains a cell without a number.
TSCalculationEngine
The formula refers to %@, which contains cells without numbers.
The formula refers to cells without numbers.
The formula compares %@ to %@.
The link is invalid.
ISODD arguments must be integers.
ISEVEN arguments must be integers.
DATE day argument should be between 1 and 31.
DATE month argument should be between 1 and 12.
The formula uses a Boolean in place of a number.
The ranges given to SUMIF have different sizes.
Duration units were removed.
The units of all arguments were converted to match the units of the first argument.
%@%@%@
 (ignored) 
-[TSTCellSelection initWithTableInfo:selectionType:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellSelection.mm
expected inequality between %{public}s and %{public}s
selectionType
kNoSelection
-[TSTCellSelection initWithTableInfo:rowOrColumn:index:count:]
Invalid selection type used with rowOrColumn initializer.
-[TSTCellSelection logicalCellIDInTable:]
Cannot provide a logical cell ID for a selection that is not rectangular or does not represent a single cell or merge
v16@?0@"TSTTableInfo"8
v32@?0{TSUCellRect={TSUCellCoord=ISBB}{?=II}}8^B24
-[TSTCellSelection selectionByExtendingWithCellRange:inTable:selectionType:cursorCell:]
Can't extend a selection with an invalid cell range
-[TSTCellSelection selectionByAddingCellRange:inTable:withAnchor:cursor:selectionType:]
-[TSTCellSelection selectionByRemovingCellRange:inTable:withAnchor:cursor:selectionType:]
Can't remove an invalid cell range
<%@: %p type: %@ region: %@ base region: %@ anchor: %@ cursor: %@>
<%@: %p type: %@ anchor: %@ cursor: %@>
TSTSelectionType TSTArchivedToNativeSelectionType(const TST::SelectionTypeArchive)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTArchiveUtilities.h
shouldn't be converting from deprecated archived selection type %d
region
column
noSelection
<unknown>
-[TSTRefParser p_parseStringAsGeometricReferenceComponent:inResolver:outPreserveFlags:gettingReferencesMatchingInputAsPrefix:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTRefParser.mm
can't look for geometric references in no particular table
v24@?0r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}8^B16
%@%@ %@%@
%@%@
-[TSTRefParser parseAsChromeRefWithParsingContext:]
%@:%@
bug in reference parser - only ranges expected here
If there is only one range reference, it should match resultRangeRef.
-[TSTTableModel setStylesheetForUpgradeToSingleStylesheet:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableModel.mm
presets
v32@?0@8Q16^B24
Fatal Assertion failure: %{public}s %{public}s:%d Caller must provide preset or styles or both.
-[TSTTableModel initWithContext:tableUID:columnRowUIDMap:styles:stylePreset:tableInfo:]_block_invoke
Caller must provide preset or styles or both.
v12@?0{TSUModelRowIndex=I}8
v10@?0{TSUModelColumnIndex=S}8
TSTPencilCat
v40@?0@"TSTPencilAnnotation"8@"TSCEFormulaObject"16Q24^B32
@"TSCEFormulaObject"24@?0@"TSCEFormulaObject"8^{TSCEFormulaRewriteContext=@@{TSCEFormulaRewriteContextRecord={TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}{TSKUIDStruct=QQ}{TSUColumnRowOffset=ii}BBBBBBB}}16
v24@?0@"<TSTCellIteratorData>"8^B16
v48@?0I8@"TSDStroke"12{TSTSimpleRange=qQ}20i36^B40
v48@?0S8@"TSDStroke"12{TSTSimpleRange=qQ}20i36^B40
Fatal Assertion failure: %{public}s %{public}s:%d Problem making sourceBodyRef with range: %@
-[TSTTableModel initAsPivotDataWithContext:tableInfo:sourceModel:sourceBody:sourceHeader:]
Problem making sourceBodyRef with range: %@
calcEngine
expected nil value for '%{public}s'
_tableStylePreset
 as Pivot Source Table
@"TSSStyle"16@?0@"TSSStyle"8
@"TSTCellMap"24@?0{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}8
@32@?0@"<TSTCellIteratorData>"8@"TSTCellMap"16@24
v16@?0@"NSArray"8
v40@?0{TSUCellCoord=ISBB}8@"TSTCell"16Q24^B32
v32@?0^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}8{TSUCellCoord=ISBB}16^B24
-[TSTTableModel upgradeDuringDocumentUpgradeIfNeeded:]
A tableModel with no tableInfo is only allowed for a pivot data model.
hiddenStates
v24@?0Q8^B16
v24@?0@"TSKCustomFormatWrapper"8^B16
@32@?0@"<TSTCellIteratorData>"8@"TSTTableModelCellModificationHelper"16@24
@"TSTTableModelCellModificationHelper"24@?0{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}8
Expected to keep all the cells.
v16@?0@"TSTTableStyle"8
v16@?0@"TSTCellStyle"8
v16@?0@"TSWPParagraphStyle"8
v16@?0@"TSWPShapeStyle"8
v16@?0@"TSTTableStylePreset"8
v16@?0@"TSTHiddenStateFormulaOwner"8
v16@?0@"TSTTableFilterSet"8
v16@?0@"TSTCategoryOwner"8
v16@?0@"TSTPivotOwner"8
v16@?0@"TSWPStorage"8
v16@?0@"TSTColumnRowUIDMap"8
v16@?0@"TSTStrokeSidecar"8
-[TSTTableModel loadFromUnarchiver:]
Unequal date grouping columns and values. We can't make a map.
TSTPivotTables
Fatal Assertion failure: %{public}s %{public}s:%d Bad table model feature version!
-[TSTTableModel saveToArchiver:]
Bad table model feature version!
-[TSTTableModel setTableInfo:]
Do not set a tableInfo pointer on a pivotDataModel
Fatal Assertion failure: %{public}s %{public}s:%d Trying to set a non-nil tableInfo on tableModel of type %d, not allowed.
Trying to set a non-nil tableInfo on tableModel of type %d, not allowed.
-[TSTTableModel setIsAPivotDataModel:]
A pivotDataModel cannot have a tableInfo pointer.
-[TSTTableModel setTextImportRecord:]
Bad import record type!
-[TSTTableModel verifySubOwnerUIDsUsed]
Conditional styles ownerUid isn't subOwner uid for table:%@
TableModel %@: Sort Rule ownerUid isn't subOwner uid table:%@
Merge ownerUid isn't subOwner uid table:%@
Pencil Annotation ownerUid isn't subOwner uid table:%@
Pivot ownerUid isn't subOwner uid table:%@
TSTHiddenStateFORMULAOwner ownerUid isn't subOwner uid table:%@
-[TSTTableModel p_createCommentMapsIfNeeded]
_commentStorageMap should be nil
<%@> %@ (%@%@)
 From: %@
-[TSTTableModel unnamedTableString]
locale
Table %@
untitledTableNameFormat
-[TSTTableModel setCellsWithBaseCellMap:ignoreFormulas:skipDirtyingNonFormulaCells:]
using a uid based cellmap where a coord based one is expected
-[TSTTableModel clearCommentHostingMapForCommentStorage:]
Tables Comment Storage should not be empty
-[TSTTableModel commentHostingAtBaseCellCoord:forCommentStorage:updateCommentMaps:]
Comment storages should be equal
-[TSTTableModel heightOfRowAtIndex:isDefault:]
Bad row index!
-[TSTTableModel widthOfColumnAtIndex:isDefault:]
Bad column index!
-[TSTTableModel setHeight:ofRowAtIndex:]
-[TSTTableModel setWidth:ofColumnAtIndex:]
v32@?0@"NSNumber"8Q16^B24
-[TSTTableModel insertColumnsAtIndex:uids:metadatas:tableArea:]
invalid table area for column insert
not enough room in the header
-[TSTTableModel insertRowsAtIndex:uids:metadatas:tableArea:unsetFilterHidingAction:]
invalid table area for row insert
not enough room in the header for insert
not enough room in the footer for insert
v32@?0{_NSRange=QQ}8^B24
-[TSTTableModel setHidingState:atRowIndex:]
-[TSTTableModel setHidingState:atColumnIndex:]
-[TSTTableModel columnNameForCellID:restrictToBodyRange:]
refNamer
Column %@
-[TSTTableModel setFormulaOwnerUIDsWithMap:shouldStealReferences:]
Really needed an ownerUIDMapper here - tableModel is %@ (%@)
@"TSCEFormulaObject"28@?0@"TSCEFormulaObject"8I16^B20
@"TSTConditionalStyleSet"28@?0@"TSTConditionalStyleSet"8I16^B20
B24@?0@"<TSTCellIteratorData>"8@"TSTTableModelCellModificationHelper"16
v32@?0@"TSCEFormulaObject"8^{TSCEFormulaRewriteContext=@@{TSCEFormulaRewriteContextRecord={TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}{TSKUIDStruct=QQ}{TSUColumnRowOffset=ii}BBBBBBB}}16^B24
v24@?0Q8@"TSCEFormulaObject"16
@"TSSStyle"32@?0@"TSSStyle"8@"NSString"16Q24
-[TSTTableModel adoptStylesheet:withMapper:]
we expect the table to not be registered yet
@"TSSStyle"20@?0@"TSSStyle"8I16
 Document or Theme
-[TSTTableModel validateTableStylesInSameStylesheetExpectingDocSS:]
Expected non-nil document stylesheet for validation.
-[TSTTableModel validateTableStylesInSameStylesheetExpectingDocSS:]_block_invoke
styleStylesheet
Expected%{public}@ stylesheet %p on table network style %lu, got %p
v40@?0@"TSSStyle"8@"NSString"16Q24^B32
v40@?0@"TSWPParagraphStyle"8{_NSRange=QQ}16^B32
-[TSTTableModel baseCellCoordForCellContainingRichTextStorage:]
storage
{vector<TSTCellBorder *, std::allocator<TSTCellBorder *>>=^@^@{__compressed_pair<TSTCellBorder *__strong *, std::allocator<TSTCellBorder *>>=^@}}20@?0{TSUModelRowIndex=I}8^v12
@"TSTCell"24@?0^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}8Q16
{vector<TSTCell *, std::allocator<TSTCell *>>=^@^@{__compressed_pair<TSTCell *__strong *, std::allocator<TSTCell *>>=^@}}44@?0{TSUModelRowIndex=I}8@"TSTTableTile"12@"TSTTableTileRowInfo"20^v28^v36
v40@?0{TSUModelCellCoord={TSUCellCoord=ISBB}}8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16@"TSTCell"24@"TSTCell"32
-[TSTTableModel setCellsConcurrently:ignoreFormula:clearImportWarnings:formulaReplacer:]_block_invoke
baseCoord should be valid
-[TSTTableModel setCellsConcurrently:ignoreFormula:clearImportWarnings:formulaReplacer:]_block_invoke_2
cells called should have rich text
basic_string
TSTExpandedTables
TSTFutureProofCell
TSTPivotTables v2
TSTPivotTables MoreAggregates
NSString *TSTFeatureIdentifierForCompatibilityVersion(TSPVersion)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCompatibility.h
Unimplemented version for TSTCompatibility: %@
double TSTCellStorageDurationValue(TSTCellStorage *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellStorage.h
Asked for duration value from non-duration cell.
TSUCellRect TSUCellRangeFromRowRange(NSRange, TSUColumnRowSize)
/Library/Caches/com.apple.xbs/Binaries/iWorkImport_Sim/install/Symbols/BuiltProducts/TSUtility.framework/Headers/TSUColumnRowRect.h
out of bounds
TSUCellRect TSUCellRangeFromColumnRange(NSRange, TSUColumnRowSize)
BOOL TSTCellStorageVersionCheck(TSTCellStorage *)
Can't parse cell storage header version %d!
v24@?0@"TSTTableTileRowInfo"8^B16
v28@?0@"TSTTableTileRowInfo"8I16^B20
Tables/Tile
-[TSTTableTile _setRowInfo:atTileRowIndex:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableTile.mm
Duplicate row indexes!
Fatal Assertion failure: %{public}s %{public}s:%d Table embiggening is a one-way process
-[TSTTableTile setShouldUseWideRows:]
Table embiggening is a one-way process
-[TSTTableTile populatedRows]_block_invoke
rowInfo
<%@:%p %lu cells/ rows %@ >
Couldn't find row info for row index %lu
-[TSTTableTile setCell:atColumnIndex:tileRowIndex:]
v32@?0@"NSObject"8Q16^B24
-[TSTTableTile assertListRows]_block_invoke
In assertListRows, saw a row info that has no cells
void _assertTileIndexMatch(TSURowIndex, TSURowIndex)
TableTile row index %u should match array index %u.
dat_
-[TSCEDateCellValue compareToCellValue:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEDateCellValue.mm
Unexpected value type found
-[TSTCellRangeControlSpec initWithInteractionType:minimum:maximum:increment:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellRangeControlSpec.mm
Illegal interaction type:%@
Illegal parameters: %f, %f, %f
+[TSTCellRangeControlSpec cellSpecFromTSKFormat:]
TSTCellRangeControlSpec can only be created from TSKFormats for Stepper, Slider, and Rating.
virtual TSCEASTElement *TSCEASTMoveRegionRewriter::colonTractNode(TSCEASTColonTractElement *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTMoveRegionRewriter.mm
Not expected to need to combine RelativeTractRef rewrites
v16@?0@8
ACCRINT
ACCRINTM
ACOS
ACOSH
ADDRESS
AREAS
ASIN
ASINH
ATAN
ATAN2
ATANH
AVEDEV
AVERAGE
AVERAGEA
BITAND
BITLSHIFT
BITRSHIFT
BITOR
BITXOR
CEILING
CHAR
CHOOSE
CLEAN
CODE
COLUMN
COLUMNS
COMBIN
CONCAT
CONCATENATE
CONFIDENCE
CORREL
COSH
COUNT
COUNTA
COUNTBLANK
COUNTIF
COUPDAYBS
COUPDAYS
COUPDAYSNC
COUPNUM
COVAR
DATE
DATEDIF
DEGREES
DISC
DOLLAR
EDATE
EVEN
EXACT
FACT
FALSE
FIND
FIXED
FLOOR
FORECAST
HLOOKUP
HOUR
HYPERLINK
INDEX
INDIRECT
INTERCEPT
IPMT
ISBLANK
ISERROR
ISEVEN
ISODD
ISOWEEKNUM
ISPMT
LARGE
LEFT
LOG10
LOOKUP
LOWER
MATCH
MAXA
MEDIAN
MINA
MINUTE
MIRR
MODE
MONTH
MROUND
NPER
OFFSET
PERCENTILE
POISSON
POWER
PPMT
PRICE
PRICEDISC
PRICEMAT
PROB
PRODUCT
PROPER
QUOTIENT
RADIANS
RAND
RANDBETWEEN
RANK
RATE
REPLACE
REPT
RIGHT
ROMAN
ROUND
ROUNDDOWN
ROUNDUP
ROWS
SEARCH
SECOND
SIGN
SINH
SLOPE
SMALL
SQRT
STDEV
STDEVA
STDEVP
STDEVPA
SUBSTITUTE
SUMIF
SUMPRODUCT
SUMSQ
SWITCH
TANH
TIME
TIMEVALUE
TODAY
TRIM
TRUE
TRUNC
UPPER
VALUE
VARA
VARP
VARPA
VLOOKUP
WEEKDAY
YEAR
op_Multiply
op_Divide
op_Power
op_Percent
op_PlusSign
op_Negate
__CHART
op_Add
op_Subtract
op_Concat
op_LT
op_GT
op_LE
op_GE
op_EQ
op_NE
EFFECT
NOMINAL
NORMDIST
NORMSDIST
NORMINV
NORMSINV
YIELD
YIELDDISC
YIELDMAT
BONDDURATION
BONDMDURATION
ERFC
STANDARDIZE
INTRATE
RECEIVED
CUMIPMT
CUMPRINC
EOMONTH
WORKDAY
MONTHNAME
WEEKNUM
DUR2HOURS
DUR2MINUTES
DUR2SECONDS
DUR2DAYS
DUR2WEEKS
DURATION
EXPONDIST
YEARFRAC
ZTEST
SUMX2MY2
SUMX2PY2
SUMXMY2
SQRTPI
TRANSPOSE
DEVSQ
FREQUENCY
DELTA
FACTDOUBLE
GESTEP
PERCENTRANK
GAMMALN
DATEVALUE
GAMMADIST
GAMMAINV
SUMIFS
AVERAGEIFS
COUNTIFS
AVERAGEIF
IFERROR
DAYNAME
BESSELJ
BESSELY
LOGNORMDIST
LOGINV
TDIST
BINOMDIST
NEGBINOMDIST
FDIST
PERMUT
CHIDIST
CHITEST
TTEST
QUARTILE
MULTINOMIAL
CRITBINOM
BASETONUM
NUMTOBASE
TINV
CONVERT
CHIINV
FINV
BETADIST
BETAINV
NETWORKDAYS
DAYS360
HARMEAN
GEOMEAN
DEC2HEX
DEC2BIN
DEC2OCT
BIN2HEX
BIN2DEC
BIN2OCT
OCT2BIN
OCT2DEC
OCT2HEX
HEX2BIN
HEX2DEC
HEX2OCT
LINEST
DUR2MILLISECONDS
STRIPDURATION
op_Colon
INTERSECT.RANGES
LATITUDE
LONGITUDE
BEARING
ALTITUDE
UNION.RANGES
SERIESSUM
POLYNOMIAL
WEIBULL
CONFIDENCE.T
COVARIANCE.S
MODE.MULT
PERCENTILE.EXC
PERCENTRANK.EXC
QUARTILE.EXC
RANK.AVG
FIND.CASEINSENSITIVE
PLAINTEXT
STOCK
STOCKH
CURRENCY
CURRENCYH
CURRENCYCONVERT
CURRENCYCODE
ISNUMBER
ISTEXT
ISDATE
MAXIFS
MINIFS
XIRR
XNPV
XLOOKUP
XMATCH
SUBTOTAL
COUNTMATCHES
TEXTBEFORE
TEXTBETWEEN
TEXTAFTER
REGEX
REFERENCE.NAME
FORMULATEXT
REGEX.EXTRACT
GETPIVOTDATA
__INTERACTIONTYPE
__CELLVALUETYPE
TEXTJOIN
+[TSCEFunctionSpec(TSCEFunctionSpecDefinitions) functionSpecList]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFunctionSpecDictionary.mm
Couldn't create functionSpecList of %@
-[TSCECellTractRef initWithUidTract:calcEngine:tableUID:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECellTractRef.mm
+[TSCECellTractRef cellTractRefWithUidTractList:onTable:preserveFlags:rewriteContext:]
Can't be spanning on both row and column, tractList: %{public}@
-[TSCECellTractRef uidTractWithCalcEngine:hostTableUID:]
 | %@
v24@?0r^{TSUCellRect={TSUCellCoord=ISBB}{?=II}}8^B16
TSCEASTElement *TSCEASTTransposeRewriter::shouldTransformSpanningColumnToBodyRangeReference(TSCEASTElement *, const TSCEOwnerUID &, TSUColumnIndex, BOOL, TSUCellCoord)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTTransposeRewriter.mm
Table's bodyRange wasn't valid
TSCECellTractRef *TSCEASTTransposeRewriter::transformSpanningColumnToBodyRangeReference(TSCEASTElement *, TSCECellTractRef *__strong, TSUCellCoord)
absTractRef
Couldn't locate a table with uid: %@ in calcEngine %p
Table %@ bodyRange wasn't valid
TSUColumnIndex TSCEMakeAbsoluteColumnFromRelativeColumn(TSUCellCoord, TSURelativeColumnIndex, BOOL)
overflow in column
TSURowIndex TSCEMakeAbsoluteRowFromRelativeRow(TSUCellCoord, TSURelativeRowIndex, BOOL)
overflow in row, input row: %d with host row: %lu
Calling TSCEMakeAbsoluteRowFromRelativeRow with an invalid hostCell row: %@
-[TSTTableInfo initWithContext:geometry:rows:columns:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableInfo.mm
stylePreset
-[TSTTableInfo initWithContext:geometry:]
call - (instancetype) initWithContext: (TSPObjectContext *) context geometry: (TSDInfoGeometry *) geometry styles:(TSTTableStyleNetwork *)styles please
-[TSTTableInfo initAsDetailTableWithContext:sourcePivotTableInfo:pivotSourceCell:]
Expect only pivotTable to be passed in.
-[TSTTableInfo initWithContext:fromSourceInfo:cellRegion:waitForCalcEngine:flattenCategories:isSnapshot:]
Copying a categorized table without flattening. If you know how you got here, please write a bug.
v20@?0I8^B12
v20@?0S8^B12
-[TSTTableInfo _initWithContext:flatteningFromComplexInfo:cellRegion:waitForCalcEngine:flatteningOptions:isSnapshot:]
not expecting categorized or pivot table
-[TSTTableInfo _initWithContext:fromSourceInfo:cellRegion:tableModel:waitForCalcEngine:formulaCoordSpace:]
not expecting a categorized table
%@ %p: %@ (tableUID: %@ tableName: %@)
Headers table
Basic table
Checklist table
Stocks table
Plain table
Headers and footers table
+[TSTTableInfo localizedDescriptionForProtoIndex:]
No description for table proto index: %lu
@"NSString"16@?0@"TSULocale"8
Field 1
Field 2
Field 3
remotedata_positive_fill@2x.png
remotedata_negative_fill@2x.png
-[TSTTableInfo componentRootObject]
Component root object is nil!
-[TSTTableInfo performReadForOneOffFormulaEvaluation:forCellCoord:]
_translator
-[TSTTableInfo notifyTableOfNewResults]
There are no callers of this, but its needed to conform to TSCECalculationEngineRegistration protocol
-[TSTTableInfo filteringColumnNameForColumnIndex:]
-[TSTTableInfo p_setFilterSet:]
Must convert filters to geometric before setting
+[TSTTableInfo bootstrapPresetsOfKind:inTheme:alternate:reservedCount:]
expected equality between %{public}s and %{public}s
p.context
context
Table
+[TSTTableInfo validateNewName:forTable:]
Unable to get sheetNameProvider
B24@?0@"NSArray"8@"NSArray"16
TableInfo %p with tableName: '%@' and tableUID %@ is not registered with the calc-engine properly.
Repaired by renaming table to '%@' with tableUID: %@
@"TSTCellMap"24@?0{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}8
-[TSTTableInfo allAnnotations]_block_invoke
iterator shoul only return cells with comments
v32@?0@"TSTCellMap"8Q16^B24
-[TSTTableInfo annotationWithUUID:]
Given UUID is not a valid UUID: %@
^%@\s\d+(-\d+)?$
%@-%@
-[TSTTableInfo chooseUniqueNameInContainer:forPaste:needsNewName:avoidNames:]
Fresh table name is the same as the old one - aborting infinite loop.
-[TSTTableInfo getDefaultCell:forCellID:]
trying to get a default cell for an invalid cell ID
-[TSTTableInfo getCell:atCellID:suppressCellBorder:]
-[TSTTableInfo getCell:atCellID:]
-[TSTTableInfo hasFormulaAtCellUID:]
-[TSTTableInfo formulaAtCellID:]
-[TSTTableInfo setCell:atCellUID:ignoreFormula:clearImportWarnings:formulaReplacer:]
-[TSTTableInfo setCell:atCellUID:ignoreFormula:clearImportWarnings:]
-[TSTTableInfo setCellsWithCellMap:ignoreFormulas:skipDirtyingNonFormulaCells:]
coord based cellmaps no longer ok
v32@?0r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}8Q16^B24
@"TSTConcurrentCellList"24@?0{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}8
@32@?0@"<TSTCellIteratorData>"8@"TSTConcurrentCellList"16@24
-[TSTTableInfo cellValueTypeAtCellID:]
-[TSTTableInfo cellValueTypeAtCellUID:]
-[TSTTableInfo setCellStyle:ofRowAtUID:]
-[TSTTableInfo setTextStyle:ofRowAtUID:]
-[TSTTableInfo cellStyleOfRowAtIndex:isDefault:]
-[TSTTableInfo textStyleOfRowAtIndex:isDefault:]
-[TSTTableInfo setCellStyle:ofColumnAtUID:]
-[TSTTableInfo setTextStyle:ofColumnAtUID:]
-[TSTTableInfo cellStyleOfColumnAtIndex:isDefault:]
-[TSTTableInfo textStyleOfColumnAtIndex:isDefault:]
-[TSTTableInfo defaultCellStyleForCellID:useSoftDefault:outSource:]
-[TSTTableInfo defaultCellStyleForTableStyleArea:]
-[TSTTableInfo defaultTextStyleForCellID:useSoftDefault:outSource:]
-[TSTTableInfo defaultTextStyleForTableStyleArea:]
-[TSTTableInfo cellStyleAtCellID:isDefault:]
-[TSTTableInfo textStyleAtCellID:isDefault:]
-[TSTTableInfo cellStyleAtCellUID:isDefault:]
-[TSTTableInfo textStyleAtCellUID:isDefault:]
-[TSTTableInfo conditionalStyleSetAtCellID:]
-[TSTTableInfo columnNameForCellID:restrictToBodyRange:]
-[TSTTableInfo rowNameForCellID:restrictToBodyRange:]
-[TSTTableInfo columnNameForColumnIndex:withFallbackFormat:]
-[TSTTableInfo pivotDataLocalizedColumnNameAtDataColumnIndex:]
Only ask about the pivotDataModel on a pivot table.
-[TSTTableInfo stringAtCellID:optionalCell:]
-[TSTTableInfo characterFillAtCellID:optionalCell:]
Value Field
Field
Total
Row Group
Column Group
Summary
v40@?0Q8{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16^B32
v16@?0Q8
-[TSTTableInfo getValue:atCellID:fetchRichTextAttributesIfPlainText:]
-[TSTTableInfo cellValueFromCell:atCellID:]
v24@?0{TSUCellCoord=ISBB}8^B16
-[TSTTableInfo cellUIDListFromCellRegion:useCategoriesWildcards:]_block_invoke
Invalid level for a summary row. We're about to crash. summaryRowIndex:%lu intersectingSummaryRowIndexes:{public}%@ translator:{public}%@
Invalid level for a label row. We're about to crash. labelRowIndex:%lu intersectingLabelRowIndexes:{public}%@ translator:{public}%@
v40@?0C8{TSKUIDStruct=QQ}12C28^B32
-[TSTTableInfo _correctAndCheckStateSuppressingAssertions:]
TableChecker: correcting nil categoryOrder in normal/disabled state
TableChecker: correcting missing backpointer in normal/disabled state
TableChecker: correcting uid map in normal/disabled state
TableChecker: correcting strokeSidecar
TableChecker: correcting summaryModel
TableChecker: correcting maps
-[TSTTableInfo resetCategoriesGroupByForOwnerRemapping]
Not expecting our pointer to change during subOwnerUIDUpgrade, if so, categoryOwner will need to update its structures
-[TSTTableInfo setIsCategoryEnabled:]
Cannot enable/disable categories without a groupBy
-[TSTTableInfo isEmptyPivot]
self.pivotOwner
-[TSTTableInfo applyPivotWithColumns:rows:aggregates:flatteningDimension:optionsMap:pivotRowColumnRuleChangeUid:pivotAggregateRuleChangeUid:]
Cannot apply pivot rules to a non-pivot table
v24@?0@"TSTGroupingColumn"8^B16
-[TSTTableInfo verifySubOwnerUIDsUsed]
Row hidden state ownerUid isn't subOwner uid: %@
Column hidden state ownerUid isn't subOwner uid
Category Aggregate ownerUid isn't subOwner uid
GroupBy uid isn't subOwner uid
PivotDataModel uid isn't subOwner uid
v16@?0@"TSTTableModel"8
v16@?0@"TSTSummaryModel"8
v16@?0@"TSTCategoryOrder"8
v16@?0@"TSTPivotRowColumnOrder"8
-[TSTTableInfo saveToArchive:archiver:]
Out-of-bounds type assignment was clamped to max
Out-of-bounds type assignment was clamped to min
_pivotDataModel
_pivotOrder
v16@?0@"TSDLayout"8
-[TSTTableInfo(CellMap) applyCellDiff:atCellUID:migrationMap:inverseCellDiff:defaultCellStyle:defaultTextStyle:]_block_invoke
customFormat
-[TSTTableInfo(CellMap) applyCellDiff:atCellUID:migrationMap:inverseCellDiff:defaultCellStyle:defaultTextStyle:]
TSU_SUCCESS
virtual NSString *TSCEThunkValue::string(TSCEFunctionSpec *__unsafe_unretained, int, TSULocale *__strong) const
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEThunkValue.mm
ThunkValue doesn't have a meaningful string() to provide
TSCECellDependencies::TSCECellDependencies(TSCEDependencyTracker *, TSCEInternalFormulaOwnerID, const TSCEOwnerUID &, TSCESubFormulaOwnerIndex)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECellDependencies.mm
tile.cppTile
void TSCECellDependencies::readPrecedentsWithOwners(const TSCE::EdgesArchive &, TSCECellRecord *)
corrupted file
Couldn't locate tableID found in cross-table reference: %{public}@
void TSCECellDependencies::readExpandedPrecedentsWithOwners(const TSCE::ExpandedEdgesArchive &, TSCECellRecord *)
void TSCECellDependencies::readFromArchive(const TSCE::CellDependenciesArchive &)
void TSCECellDependencies::unpackAfterUnarchive()
_dependencyTracker
v24@?0r^{TSCEInternalCellReference={TSUCellCoord=ISBB}SS}8^B16
v24@?0^{TSCECellRecord=^{TSCECellRecordEdgeLists}{os_unfair_lock_s=I}Q{TSCEPackedEdge=[8c]}ISS}8^B16
void TSCECellDependencies::readFromTiledArchive(const TSCE::CellDependenciesTiledArchive &, TSPUnarchiver *__strong)_block_invoke
TSCECellRecordTileWrapper *TSCECellDependencies::tileForCoord(const TSUCellCoord &, BOOL)
Expect cppTile to be filled in already
Uh, why are we returning a tile with no insides?
v16@?0^{TSCECellRecord=^{TSCECellRecordEdgeLists}{os_unfair_lock_s=I}Q{TSCEPackedEdge=[8c]}ISS}8
v24@?0r^{TSUCellCoord=ISBB}8^B16
v28@?0S8r^v12^B20
CYCLE 
(formula) 
%@, 
void TSCECellDependencies::findAndRecordCyclesInDirtyCells(TSCETarjanState &, TSCEInternalCellRefQueue &)_block_invoke
Cycle grid out of sync.
IsDirty grid out of sync.
IsDirtyAndNotInACycle grid out of sync.
Avoided underflow in dirtySelfPlusPrecedentsCount for cell: %@
BOOL TSCECellDependencies::dirtyPrecedentCountsAreConsistent(BOOL)_block_invoke
cellRecord
%@:%@ recomputed: <clean> vs stored %lu - inconsistency.
%@...<truncated>
  +1: This cell is dirty
recomputed: %lu vs stored %lu - inconsistency, explanation:
%@precedents:%@
dirty precedents count consistency error in %@ (count is %lu, should be >1)
v16@?0@"TSDCommentStorage"8
v16@?0@"TSTRichTextReferenceWrapper"8
v16@?0@"TSTConditionalStyleSet"8
void TSTEncodeCellToArchive(TSTCell *__strong, TST::Cell *, TSPArchiver *__strong)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTArchiveUtilities.mm
stringValue in string cell is nil
TSDThreadedComments
incbi
-[TSCECellValue tsceValue]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECellValue.mm
Abstract method not overridden by %{public}@
Abstract method not overridden by %@: %s
-[TSCECellValue copyWithZone:]
-[TSCECellValue displayString]
Children of TSCECellValue should implement %@.
-[TSCECellValue canonicalKeyString]
-[TSCECellValue format]
-[TSCECellValue isEqualToCellValue:]
-[TSCECellValue hash]
-[TSCECellValue compareToCellValue:]
-[TSCECellValue updateWithCustomFormatList:]
customFormatList
-[TSCECellValue encodeCellValueToArchive:]
Unexpected value type found in archiving in TSCECellValue
-[TSTUIDRectRef convertUIDRefToViewTractRef]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTUIDRectRef.mm
If we're already uid-form, why do we have a mapper?
-[TSTUIDRectRef excludeSummaryAndLabelRows]
_calcEngine
-[TSTUIDRectRef baseRangeRef]
This API can't support multiple base ranges, had %lu
-[TSTUIDRectRef viewRangeRef]
This API can't support multiple view ranges, had %lu
%@<%p> base:
-[TSTCellIterator initWithTableInfo:tableModel:region:flags:searchFlags:clampingRange:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellIterator.mm
caller should pass in region pointer
Tried to create iterator with range larger than is possible.
cannot use iterator flags to return all empty cells and also use flags to only search for specific kinds of cells
unsupported options, searching for borders but not fetching them
flags remain 0x%lx, flags should all be consumed by this point 
searchFlags remain 0x%lx, searchFlags should all be consumed by this point 
-[TSTCellIterator p_updateDataForMergeAtCellID:]
found this column in the cached merge ranges, so expected a merge range
-[TSTCellIterator p_updateDataForCellID:]
cell iterator was asked for cellID %@ that is outside the table bounds
tableCell
tableCellText
+[TSTCellStyle properties]_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellStyle.mm
sProperties
+[TSTCellStyle propertiesAllowingNSNull]_block_invoke
s_nullProperties
+[TSTCellStyle nonEmphasisCellProperties]_block_invoke
s_nonEmphasisProperties
+[TSTCellStyle categoriesCellProperties]_block_invoke
bodyStyle
headerRowStyle
headerColumnStyle
footerRowStyle
categoryLevel1Row
categoryLevel2Row
categoryLevel3Row
categoryLevel4Row
categoryLevel5Row
labelLevel1Row
labelLevel2Row
labelLevel3Row
labelLevel4Row
labelLevel5Row
pivotBodySummaryRow
pivotBodySummaryColumn
pivotHeaderColumnSummary
+[TSTCellStyle p_regionStringForTableStyleArea:]
Unexpected value for region.
+[TSTCellStyle initDefaultPropertyMap:forTableStyleArea:presetID:colors:alternate:]
-[TSTCellStyle validate]
orphaned cell style %@
Cell style not in its stylesheet
-[TSTCellStyle targetSizeForImageData:associatedHint:]_block_invoke
preset
-[TSTCellStyle targetSizeForImageData:associatedHint:]
Expected that the imageData would be from the style's fill
v20@?0i8^B12
%@ Pivot
AggregateDescriptionFormatString
%1$@ of %2$@
AggregateDescriptionWithParensFormatString
%1$@ (%2$@)
PivotCellDescriptionWithPrefixFormatString
%1$@: %2$@
PivotCellDescription5FieldsFormatString
%1$@: %2$@: %3$@: %4$@: %5$@
PivotCellDescription4FieldsFormatString
%1$@: %2$@: %3$@: %4$@
PivotCellDescription3FieldsFormatString
%1$@: %2$@: %3$@
PivotCellDescription2FieldsFormatString
PivotCellDescription1FieldsFormatString
%1$@
PivotCellDescription2FieldHolderFormatString
PivotCellDescription1FieldHolderFormatString
%@ -> %@
-[TSTPivotTranslator resetViewMap]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTPivotTranslator.mm
view and base cannot be the same for a pivot table
-[TSTPivotTranslator tableStyleAreaForRow:]
Unimplemented for pivot tables, because it doesn't make sense.
i32@?0r^{TSUModelCellCoord={TSUCellCoord=ISBB}}8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16C24C28
i24@?0r^{TSUModelCellCoord={TSUCellCoord=ISBB}}8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
v12@?0C8
v24@?0r^{TSUModelRowIndex=I}8r^{TSKUIDStruct=QQ}16
v24@?0r^{TSUModelColumnIndex=S}8r^{TSKUIDStruct=QQ}16
-[TSTPivotTranslator p_applyViewCellCoord:toSummaryUsingBlock:toBaseUsingBlock:]
cell in summary row is in viewMap, but not in summaryMap
-[TSTPivotTranslator indexesForRowsContainedByGroupUIDs:]_block_invoke
do not call with root group
-[TSTPivotTranslator indexesForColumnsContainedByGroupUIDs:]_block_invoke
TSTColumnRowTypeWithIndex TSTMakeColumnRowTypeWithIndex(TSTColumnRowType, NSUInteger)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableConstants.h
Type:%ldl or index:%lul is too large for TSTIndexedColumnRowType.
-[TSTTableTileRowInfo initFromArchive:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableTileRowInfo.mm
Can't find the last valid column during unarchive!
lastPreBNCCellRef
-[TSTTableTileRowInfo encodeToArchive:archiver:]
should not be archiving an empty row info
v28@?0^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}8S16^B20
Expected current storage version.
-[TSTTableTileRowInfo p_preBNCStorageRefAtIndex:]
We have upgraded to current data. Why are we asking for preBNC data?
-[TSTTableTileRowInfo _insertCell:atIndex:]
Can't insert over an existing cell!
Fatal Assertion failure: %{public}s %{public}s:%d Attempting to write cells to a preBNC row.
-[TSTTableTileRowInfo setCell:atIndex:]
Attempting to write cells to a preBNC row.
Fatal Assertion failure: %{public}s %{public}s:%d Attempting to insert columns in a preBNC row.
-[TSTTableTileRowInfo insertColumnsAtIndex:count:]
Attempting to insert columns in a preBNC row.
Fatal Assertion failure: %{public}s %{public}s:%d Attempting to remove columns in a preBNC row.
-[TSTTableTileRowInfo removeColumnsAtIndex:count:]
Attempting to remove columns in a preBNC row.
-[TSTTableTileRowInfo moveColumnsFromIndex:toIndex:count:]
Move column ranges cannot overlap!
-[TSTTableTileRowInfo enumerateStoragesInColumnRange:getPreBNC:withBlock:]
Incorrect maximum column!
-[TSTTableTileRowInfo validateWithResult:]
%{public}@
 Misaligned cell storage offsets!
 Cell storage overflow!
 Found an extra cell in this row!
 Bad cell version!
 Mismatched presence of cells.
 Misaligned cell storage offsets in PreBNC!
 Cell storage overflow in PreBNC!
 Found an extra preBNC cell in this row!
 Cell storage overflow in Pre BNC!
 Incorrect cell count! Expected:%tu Found:%tu.
 Incorrect PreBNC cell count! Expected:%tu Found:%tu.
<%@:%p tileRowIndex %lu cellCount %lu>
Fatal Assertion failure: %{public}s %{public}s:%d Never call me without a row
TSUColumnIndex _maxColumnIndex(TSTTableTileRowInfo *__unsafe_unretained)
Never call me without a row
void _invalidateMaxColumnIndex(TSTTableTileRowInfo *__unsafe_unretained)
void _updateCellBufferSize(TSTTableTileRowBuffer *, NSUInteger)
Row data buffer is too small!
Fatal Assertion failure: %{public}s %{public}s:%d Can't grow to wide columns in a row buffer not converted for wide offsets
void _extendOffsetArrayForMaxIndex(TSTTableTileRowBuffer *, TSUColumnIndex)
Can't grow to wide columns in a row buffer not converted for wide offsets
Fatal Assertion failure: %{public}s %{public}s:%d Too many columns for our row storage!
Too many columns for our row storage!
void _preallocateCellBufferSize(TSTTableTileRowBuffer *, NSUInteger)
Fatal Assertion failure: %{public}s %{public}s:%d Computed impossible insertion point.
NSUInteger _offsetForInsertInBuffer(TSTTableTileRowBuffer *, TSUColumnIndex, TSUColumnIndex, NSInteger)
Computed impossible insertion point.
void _shiftCellStorageInBuffer(TSTTableTileRowBuffer *, NSUInteger, NSInteger)
Row storage buffer overflow!
Fatal Assertion failure: %{public}s %{public}s:%d Corrupt cellStorage shift. Crashing!
Corrupt cellStorage shift. Crashing!
Fatal Assertion failure: %{public}s %{public}s:%d Encountered a bad offset while widening!
void _convertBufferToWideIndexes(TSTTableTileRowBuffer *)
Encountered a bad offset while widening!
void _invalidateMaxColumnIndexForColumnIndex(TSTTableTileRowInfo *__unsafe_unretained, TSUColumnIndex)
NSUInteger _applyMovingCellBuffer(TSTTableTileRowBuffer *, TSTTableTileRowBuffer *, TSUColumnIndex, TSUColumnRowCount)
Overwriting a column in move!
NSUInteger _storageSizeInBuffer(TSTTableTileRowBuffer *, TSUColumnIndex, TSUColumnIndex)
Couldn't find next storage offset for non-last cell!
virtual TSCEASTElement *TSTCellSpecFormulaExtractor::functionNode(TSCEASTFunctionElement *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellFormulaSpec.mm
Need a locale to parse stock formulas.
-[TSTCellFormulaSpec initWithFormulaObject:locale:]
TSTCellFormulaSpec requires a formula.
<%@: %p>: %@
null formula
%C%C%C%%C
%C%C%C%C%C%C%C%C%C
'%C%C%C%C%C%C%C
-[TSCENameTrie removeName:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCENameTrie.mm
Verify we are deleting the correct node
UInt16 TSTCellStorageSizeForHeaderFlags(TSTCellStorageFieldFlags)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellStorage.mm
Storage size should be four-byte-aligned!
void TSTCellToCellStorage(TSTCell *__strong, TSTCellStorage *)
Cell claims to have a string, but has no key for it!
Cell claims to have rich text, but has no key for it!
Cell claims to have a cell style, but has no key for it!
Cell claims to have a text style, but has no key for it!
Cell claims to have conditional style, but has no key for it!
Cell claims to have a formula, but has no key for it!
Cell claims to have a control, but has no key for it!
Cell claims to have a formula syntax error, but has no key for it!
Can't archive a bad format kind!
Cell claims to have a number format, but has no key for it!
Cell claims to have a currency format, but has no key for it!
Cell claims to have a date format, but has no key for it!
Cell claims to have a duration format, but has no key for it!
Cell claims to have a text format, but has no key for it!
Cell claims to have a boolean format, but has no key for it!
Cell claims to have a comment storage, but has no key for it!
Cell claims to have an import warning set, but has no key for it!
Could not archive all computed storage elements!
Failed to process all storage elements in TSTCellToCellStorage! Starting flags:%u Final flags:%u
Size miscalculation!
void TSTCellStorageToCell(TSTCellStorage *, TSTCell *__strong)
Fatal Assertion failure: %{public}s %{public}s:%d Can't get offset for unknown element 0x%02x, offset:%hu!
UInt16 p_OffsetForElementInStorage(TSTCellStorage *, TSTCellStorageFieldFlags)
Can't get offset for unknown element 0x%02x, offset:%hu!
, %@
%@::{%@}
%@::{%@, ...}
%@::%@
%@, ...
%@<%lu> %@%@
refers to: %@
; referenced by: %@
---Cell dependencies for %@ (%lu dirty cells):
-[TSTGroupingColumnList addRule:atGroupLevel:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTGroupingColumnList.mm
Can't call this on root level
-[TSTGroupingColumnList removeRuleAtGroupLevel:]
-[TSTGroupingColumnList moveRuleFromGroupLevel:toLevel:]
-[TSTGroupingColumnList changeGroupingTypeForGroupLevel:toType:]
-[TSTGroupingColumnList replaceRuleAtGroupLevel:withRule:]
v32@?0@"TSTGroupingColumn"8Q16^B24
TSCEValue TSCEFunction_DAYNAME::evaluateWithContext(TSCEEvaluationContext &)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEDateTimeFunctions.mm
weekday symbols: %@
TSCEValue TSCEFunction_DUR2DAYS::evaluateWithContext(TSCEEvaluationContext &)
Shouldn't get a non-duration in DUR2DAYS
TSCEValue TSCEFunction_DUR2WEEKS::evaluateWithContext(TSCEEvaluationContext &)
Shouldn't get a non-duration in DUR2WEEKS
TSCEValue TSCEFunction_DUR2HOURS::evaluateWithContext(TSCEEvaluationContext &)
Shouldn't get a non-duration in DUR2HOURS
TSCEValue TSCEFunction_DUR2MILLISECONDS::evaluateWithContext(TSCEEvaluationContext &)
Shouldn't get a non-duration in DUR2MILLISECONDS
TSCEValue TSCEFunction_DUR2MINUTES::evaluateWithContext(TSCEEvaluationContext &)
Shouldn't get a non-duration in DUR2MINUTES
TSCEValue TSCEFunction_DUR2SECONDS::evaluateWithContext(TSCEEvaluationContext &)
Shouldn't get a non-duration in DUR2SECONDS
static NSDate *TSCEFunction_WORKDAY::dateByAddingNumberOfDaysExcludingWeekends(NSDate *__strong, int, NSDateComponents *__strong)
Incorrect weekday number in function WORKDAY
virtual TSCEASTElement *TSCEASTRepairBadRefsRewriter::colonTractNode(TSCEASTColonTractElement *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTRepairBadRefsRewriter.mm
Can't have a reference spanning both columns and rows
-[TSCEDistributor protocol]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEDistributor.m
-[TSCEDistributor addReceiver:]
protocol MUST be defined before addReceiver can be used
Error %@: Target %@ does not conform to protocol %@ required for TSCEDistributor class %@.
-[TSCEDistributor suspendDuringBlock:]
someone added a receiver when we were not expecting it
TSCEErrorValue::TSCEErrorValue(TSCEError *__strong)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEErrorValue.mm
1)Creating a TSCEErrorValue with a nil TSCEError
TSCEErrorValue::TSCEErrorValue(const TSCEErrorValue &)
2)Creating a TSCEErrorValue with a nil TSCEError
virtual TSCEReferenceValue TSCEErrorValue::reference(TSCEFunctionSpec *__unsafe_unretained, int, TSCEEvaluationContext *) const
evaluationContext
TSTGroupBySet<%p> for pivot: %@
  GroupBy %d: %@
-[TSTGroupBySet restoreFromPivotDataTable:columnGroupings:rowGroupings:aggregates:flatteningDimension:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTGroupBySet.mm
Pivot data model missing when restoring rules for a pivot table
-[TSTGroupBySet setPivotRulesWithPivotDataTable:columnGroupings:rowGroupings:aggregates:flatteningDimension:]
Pivot data model missing when setting rules for a pivot table
-[TSTGroupBySet groupByForColumnLevel:rowLevel:]
columnLevel exceeds columnGroupings.count
rowLevel exceeds rowGroupings.count
No groupBy set for columnLevel: %d
-[TSTGroupBySet groupColumnIndexesForOwnerIndex:]
Exceeded our set of practical groupBys
-[TSTGroupBySet groupingColumnsForOwnerIndex:]
Expected to get a grouping column for index: %d
-[TSTGroupBySet groupByForOwnerIndex:createIfMissing:]
ownerIndex out of range: %d
Fatal Assertion failure: %{public}s %{public}s:%d Asking for flattened column aggregate uids while not flattening on columns
-[TSTGroupBySet columnUidsForColumnGroupUid:]
Asking for flattened column aggregate uids while not flattening on columns
Fatal Assertion failure: %{public}s %{public}s:%d Asking for flattened row aggregate uids while not flattening on rows
-[TSTGroupBySet rowUidsForRowGroupUid:]
Asking for flattened row aggregate uids while not flattening on rows
-[TSTGroupBySet columnNameForAggregateIndex:allowDuplicateNames:]
Re-constructing a non-empty pivot table without the calc engine
-[TSTGroupBySet descriptionForAggregateIndex:useShortLabel:allowDuplicateNames:locale:]
Requires a locale here
<Invalid AggType>: %@
Expecting to have localized label for all correct aggregate types
-[TSTGroupBySet compactDescriptionForAggregateIndex:useShortLabel:allowDuplicateNames:locale:]
-[TSTGroupBySet percentParentDenominatorCategoryRefFor:inGroupBy:forAggregate:forShowAsType:]
Only expecting these two showAsTypes, got: %d
-[TSTGroupBySet restrictColumnIndexes:toColumnGroupLevel:forPivotTable:]
Only expected this call with pivotTableInfo
-[TSTGroupBySet groupValueTupleForUuidCoord:createIfMissing:]
Couldn't locate rowGroupNode or columnGroupNode
Need a groupBy for this coordinate - why didn't you help?
TSTTableInfo
TSTTableModel
TSTTableStyle
TSTCellStyle
TSTConditionalStyleSet
TSTTableTile
TSTTableDataList
TSTTableDataListSegment
TSTTableHeaderStorageBucket
TSTWPTableInfo
TSTTableStrokePreset
TSTTableStylePreset
TSTArchivedCellSelection
TSTArchivedRdar39989167CellSelection
TSTArchivedStrokeSelection
TSTArchivedAutofillSelection
TSTCellMap
TSTConcurrentCellMap
TSTConcurrentCellList
TSTFormulaEqualsTokenAttachment
TSTWPTokenAttachment
TSTExpressionNode
TSTBooleanNode
TSTNumberNode
TSTStringNode
TSTArrayNode
TSTListNode
TSTLetNode
TSTVariableNode
TSTInNode
TSTOperatorNode
TSTPostfixOperatorNode
TSTPrefixOperatorNode
TSTFunctionNode
TSTFunctionEndNode
TSTDateNode
TSTReferenceNode
TSTDurationNode
TSTArgumentPlaceholderNode
TSTIdentifierNode
TSTMergeRegionMap
TSTEmptyExpressionNode
TSTArchivedLayoutHint
TSTCompletionToken
TSTHiddenStateFormulaOwner
TSTPopUpMenuModel
TSTRichTextPayload
TSTTableFilterSet
TSTTableStyleNetwork
TSTColumnRowUIDMap
TSTSummaryModel
TSTSummaryCellVendor
TSTCategoryOrder
TSTStrokeSidecar
TSTStrokeLayer
TSTPencilAnnotation
TSTHeaderNameMgrTile
TSTHeaderNameMgr
TSTPivotOwner
TSTPivotGroupingColumnOptionsMap
TSTPivotRowColumnOrder
TSTCategoryOwner
TSTGroupBy
TSTAggregator
TSTGroupNode
TSTCellDiffArray
TSTCellDiffArraySegment
<%@>
  %@ used at: %@
-[TSTConcurrentCellMap viewCellRects]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTConcurrentCellMap.mm
can't use cellid interface with celluid map
-[TSTConcurrentCellMap cellUIDRanges]
can't use celluid interface with cellid map
-[TSTConcurrentCellMap p_cacheRowColumnUIDs]
-[TSTConcurrentCellMap appendCellList:]
cell list uid state doesn't match cell map
-[TSTConcurrentCellMap appendCellLists:]
v40@?0r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}8{TSUViewCellCoord={TSUCellCoord=ISBB}}16{TSUModelCellCoord={TSUCellCoord=ISBB}}24@"TSTCell"32
-[TSTConcurrentCellMap enumerateSeriallyUsingBlock:]
need a celluid based map
check that willApplyToTable was called already
-[TSTConcurrentCellMap p_enumerateNewAndOldCellsSeriallyUsingBlock:]
-[TSTConcurrentCellMap enumerateRowsOfCellsConcurrentlyUsingBlock:]
willApplyToTable should be called first
-[TSTConcurrentCellMap updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:]
-[TSTConcurrentCellMap updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:]_block_invoke_2
should only be enumerating the cells of interest (stringValue)
-[TSTConcurrentCellMap updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:]_block_invoke
should only be enumerating the cells of interest (hasFormula)
-[TSTConcurrentCellMap updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:]_block_invoke_3
should only be enumerating the cells of interest (hasFormulaAnyError)
-[TSTConcurrentCellMap updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:]_block_invoke_4
should only be enumerating the cells of interest (hasRichText)
-[TSTConcurrentCellMap updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:]_block_invoke_5
should only be enumerating the cells of interest (hasConditionalStyle)
-[TSTConcurrentCellMap updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:]_block_invoke_6
should only be enumerating the cells of interest (hasCommentStorage)
-[TSTConcurrentCellMap updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:]_block_invoke_7
should only be enumerating the cells of interest (hasImportWarningSet)
-[TSTConcurrentCellMap updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:]_block_invoke_8
should only be enumerating the cells of interest (hasControl)
-[TSTConcurrentCellMap willApplyToTable:]
applyingToTable already called
need a uidBased cell map
-[TSTConcurrentCellMap willApplyToTableModel:]
-[TSTConcurrentCellMap convertToInverseCellMap]
willApplyToTable was not called or didApplyToTable called twice
-[TSTConcurrentCellMap pushInverseMergeAction:]
willApplyToTable should have been called
+[TSTConcurrentCellList cellListWithContext:cellUIDRange:repeatCellVectorPattern:patternDirection:]
expected a pattern for a row of cells
expected a pattern for a column of cells
-[TSTConcurrentCellList addCell:atViewCellCoord:]
index should be somewhere in the in the cell list's area
-[TSTConcurrentCellList addCell:atIndex:]
can only use index interface with celluid map
-[TSTConcurrentCellList p_convertToUuidBasedCellListUsingTableInfo:pruneCategorizedCells:]
cells size:%lu needs to match area range:%lu
-[TSTConcurrentCellList p_setObjectLocale:]
-[TSTConcurrentCellList p_pruneToBaseWithBaseMap:viewMap:]
-[TSTConcurrentCellList p_setupInterestingCells:interestingCellIndexes:forAdding:]
cell lists size mismatch
-[TSTConcurrentCellList p_invokeBlock:]
base rows needs to match uids
base cols needs to match uids
cells size needs to match area range
only valid viewRowIndexes should remain
only valid baseRowIndexes should remain
-[TSTConcurrentCellList p_convertToInverseCellMap]
oldCells size mismatch in cellList
-[TSTConcurrentCellList p_gatherRowState:]
-[TSTConcurrentCellList p_accumulateBordersConcurrentlyUsingBlock:accumulateCellsConcurrentlyUsingBlock:]
_tilesPerRow
_rowInfosPerRow
_tilesPerRow size mismatch in cellList
_rowInfosPerRow size mismatch in cellList
-[TSTConcurrentCellList p_enumerateRowsOfCellsConcurrentlyUsingBlock:]
_oldCells size mismatch in cellList
-[TSTConcurrentCellList p_enumerateNewAndOldCellsSeriallyUsingBlock:]
-[TSTConcurrentCellList p_enumerateCellsAddedAndRemovedOfType:usingBlock:]
_oldCells size:%lu does not match _cells size:%lu in cellList
_interestingCells
-[TSTConcurrentCellList p_enumerateCellsAddedOfType:usingBlock:]
v32@?0@"TSKFormat"8@"NSMutableIndexSet"16^B24
v32@?0@"NSNumber"8@"NSMutableIndexSet"16^B24
-[TSTConcurrentCellList p_enumerateColumnCellCountDiffUsingBlock:]
_baseColumns and _cellCountDiffsPerColumn sizes should match
-[TSTConcurrentCellList p_enumerateRowCellCountDiffUsingBlock:]
_baseRows and _cellCountDiffsPerRow sizes should match
_baseRows and _tilesPerRow sizes should match
_baseRows and _rowInfosPerRow sizes should match
-[TSTConcurrentCellList p_enumerateCustomFormatsBeingAddedUsingReplacementBlock:]_block_invoke
Expected the custom format replacement to be of the same type as the original.
-[TSTConcurrentCellList p_enumerateCustomFormatsBeingAddedUsingReplacementBlock:]
customFormatToRemove can not be nil.
replacementCustomFormat can not be nil.
-[TSTConcurrentCellList saveToArchiver:]
Archiving is not correctly implemented for subclasses.
-[TSTConcurrentSparseCellList addCell:atViewCellCoord:]
-[TSTConcurrentSparseCellList appendCellUIDRange:]
appending cellUIDRanges must have the same set of columns
-[TSTConcurrentSparseCellList p_invokeBlock:]
baseRows size:%lu needs to match row uids size:%lu
baseColumns size:%lu needs to match column uids size:%lu
-[TSTConcurrentSparseCellList p_accumulateBordersConcurrentlyUsingBlock:accumulateCellsConcurrentlyUsingBlock:]
-[TSTConcurrentSparseCellList p_enumerateRowsOfCellsConcurrentlyUsingBlock:]
v12@?0B8
virtual NSString *TSCEStringValue::string(TSCEFunctionSpec *__unsafe_unretained, int, TSULocale *__strong) const
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEStringValue.mm
customFormat.customFormat.defaultFormatData
-[TSTTableDataList setRichTextParentInfo:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableDataList.mm
The richTextParentInfo only applied to the Rich Text Payload datalist.
Tables/DataList
v24@?0@"TSTTableDataObject"8^B16
-[TSTTableDataList p_nextAvailableKey]
-[TSTTableDataList wrappedObjectForPayload:]
Custom Format datalists are obsolete and should never be added to!
_richTextParentInfo
Nil object for %{public}@ payload in %{public}@ datalist!
<nil>
-[TSTTableDataList p_setPayload:atSuggestedKey:callWillModify:]
No object with key %u in %{public}@ datalist!
-[TSTTableDataList enumerateFormatsUsingBlock:]
Can't enumerate formats on a non-format list!
-[TSTTableDataList enumerateLegacyCustomFormatsUsingBlock:]
Can't enumerate custom formats on a non-custom format list!
Fatal Assertion failure: %{public}s %{public}s:%d Expected formula list type.
-[TSTTableDataList replaceFormulasUsingBlock:]
Expected formula list type.
Fatal Assertion failure: %{public}s %{public}s:%d Expected conditional style list type.
-[TSTTableDataList replaceConditionalStyleSetsUsingBlock:]
Expected conditional style list type.
Fatal Assertion failure: %{public}s %{public}s:%d Expected comment type.
-[TSTTableDataList replaceCommentStoragesUsingBlock:]
Expected comment type.
Fatal Assertion failure: %{public}s %{public}s:%d Expected style list type.
-[TSTTableDataList replaceStylesUsingBlock:]
Expected style list type.
Fatal Assertion failure: %{public}s %{public}s:%d Expected formula error list type.
-[TSTTableDataList replaceFormulaErrorsUsingBlock:]
Expected formula error list type.
Fatal Assertion failure: %{public}s %{public}s:%d Expected rich list type.
-[TSTTableDataList replaceRichTextUsingBlock:]
Expected rich list type.
-[TSTTableDataList replaceFormatsUsingBlock:]
-[TSTTableDataList repairStyleDatalistStylesheetIfNecessary]_block_invoke
Expected new style to be in the document stylesheet
-[TSTTableDataList takeReferences:forKey:callWillModify:]
Cannot add reference for custom format
-[TSTTableDataList dropReferences:forKey:callWillModify:]
custom format should not have more than one reference
Comment
Conditional Style
Custom Format
Format
Formula
ControlCellSpec
Formula Error
Import Warning
Multiple Choice List
Rich Text
String
Style
-[TSTTableDataList(Type_Specific_API) allRichTextStorages]
API is intended for kTSTTableDataListTypeRichText lists
-[TSTTableDataList(Type_Specific_API) allRichTextStorages]_block_invoke
richTextObject
richTextObject.richTextStorage
-[TSTTableDataList(Type_Specific_API) containsControlCellSpecs]
API is intended for kTSTTableDataListTypeFormat lists
-[TSTTableDataList(Type_Specific_API) containsFormulas]
API is intended for kTSTTableDataListTypeCellSpec lists
@"TSKFormat"20@?0@"TSKFormat"8I16
@"TSKCustomFormatWrapper"16@?0@"TSKCustomFormatWrapper"8
-[TSTTableDataList(Type_Specific_API) cellFormatForKey:]
Can only store formats in this list!
-[TSTTableDataList(Type_Specific_API) commentStorageForKey:]
Can only store cell comment storage objects in this list!
-[TSTTableDataList(Type_Specific_API) conditionalStyleSetForKey:]
Can only store conditional styles in this list!
-[TSTTableDataList(Type_Specific_API) formulaForKey:]
Can only store formulas in this list!
-[TSTTableDataList(Type_Specific_API) controlCellSpecForKey:]
Can only store controls in this list!
-[TSTTableDataList(Type_Specific_API) formulaErrorForKey:]
Can only store formulaErrors in this list!
-[TSTTableDataList(Type_Specific_API) importWarningSetForKey:]
Can only store import warning set objects in this list!
-[TSTTableDataList(Type_Specific_API) multipleChoiceListFormatForKey:]
Can only store pop up menu model in this list!
-[TSTTableDataList(Type_Specific_API) richTextForKey:]
Can only store text storages in this list!
-[TSTTableDataList(Type_Specific_API) stringForKey:]
Can only store strings in this list!
-[TSTTableDataList(Type_Specific_API) stringForKey:outShouldWrap:outIsShared:]
-[TSTTableDataList(Type_Specific_API) styleForKey:]
Can only store styles in this list!
-[TSTTableDataList(Upgrade) upgradeCellFormatsU2_0]
This upgrade code is only for the Format list.
-[TSTTableDataList(Upgrade) upgradeCellFormatsU2_0]_block_invoke
-[TSTTableDataList(Upgrade) upgradeConditionalStylesToLinkedRefWithTableUID:]
This upgrade is for conditional style only.
v24@?0I8I12^B16
[%lu,%lu]
(%lu x %lu)
q24@?0@8@16
table
tableStyle
+[TSTTableStyle propertiesAllowingNSNull]_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableStyle.mm
+[TSTTableStyle nonEmphasisTableProperties]_block_invoke
-[TSTTableStyle validate]
orphaned table style %@
Table style not in its stylesheet
-[TSCENilCellValue compareToCellValue:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCENilCellValue.mm
-[TSTArchivedCellSelection selection]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTArchivedCellSelection.mm
Call selectionWithParent:
-[TSTArchivedCellSelection selectionWithParent:]
tableInfo
-[TSTArchivedCellSelection setSelection:]
Wrong type of class %@ (expected TSTCellSelection)
<%@: %p> %@
%@ for column %@ at level %lu with show as type %lu %@
(running total on: %@)
-[TSCEStringCellValue initWithString:locale:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEStringCellValue.mm
Creating a TSCEStringCellValue with a nil string.
str_
-[TSCEStringCellValue compareToCellValue:]
-[TSCEStringCellValue encodeToArchive:]
Avoid using nil to mean empty string in a TSCEStringValue, string is: %@
v24@?0^{TSCEASTNodeArray=*QQB}8^{TSCEASTNodeArgInfo=i[3i]{TSKUIDStruct=QQ}{TSUCellCoord=ISBB}}16
v16@?0^{TSCEASTNodeArray=*QQB}8
TSCEFormulaCreator::TSCEFormulaCreator(std::nullptr_t)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFormulaCreator.mm
Passing NULL as an arg to TSCEFormulaCreator() - it doesn't like that
void TSCEASTNodeArray::write(const T &) [T = unsigned long]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTNodeArray.h
_nodeArray
NSString *localizedModeName(TSCEStockAttribute, TSCEFunctionSpec *__strong)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCERemoteDataFunctions.mm
Unexpected function %@!
%@%@=X
TSCEValue evaluateCurrencyFunction(TSCEEvaluationContext &, TSCEFunctionSpec *__strong)
Failed to transform date %@ for CURRENCYH function!
TSCEValue evaluateStockFunction(TSCEEvaluationContext &, TSCEFunctionSpec *__strong)
Failed to transform date %@ for STOCKH function!
-[TSTCellStyleHandle initWithCellStyle:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellStyleHandle.m
cellStyle
expected cell style got %{public}@
v16@?0@"TSPLazyReference"8
B24@?0r^v8r^v16
-[TSTTableTileStorage _upgradeFromTileIDMap:referenceMap:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableTileStorage.mm
Tile upgrade can't find tile for ID %tu!
error
Fatal Assertion failure: %{public}s %{public}s:%d Failed to load a table tile during upgrade: errorClass=%{public}@, domain=%{public}@, code=%zd, %{public}@hints=%{public}@ (%@) 
recoverable=YES, 
Failed to load a table tile during upgrade: errorClass=%{public}@, domain=%{public}@, code=%zd, %{public}@hints=%{public}@ (%@) 
v32@?0@"TSPLazyReference"8Q16^B24
v28@?0@"TSTTableTile"8I16^B20
-[TSTTableTileStorage setShouldUseWideRows:]
v20@?0@"TSTTableTile"8I16
Fatal Assertion failure: %{public}s %{public}s:%d Bad tile group index!
-[TSTTableTileStorage _groupForTileID:]
Bad tile group index!
-[TSTTableTileStorage _tileFromGroupForTileID:]
-[TSTTableTileStorage _tileForID:createIfMissing:]
tile
v32@?0@"TSTTableTile"8Q16^B24
v24@?0@"TSTTableTileGroup"8^B16
-[TSTTableTileStorage _clearContentAtIndex:count:]
Corrupt tile map during clear!
-[TSTTableTileStorage _shiftRowsDownAtIndex:count:]
Tile insertion got confused!
-[TSTTableTileStorage _insertRowsAtIndex:count:]
Should only have whole-tile moves left in insert!
Corrupt tile map during insert!
Fatal Assertion failure: %{public}s %{public}s:%d Lost track of deletion start point!
-[TSTTableTileStorage _removeRowsAtIndex:count:]
Lost track of deletion start point!
Fatal Assertion failure: %{public}s %{public}s:%d Lost track of tiles during delete!
Lost track of tiles during delete!
Corrupt tile map during delete!
Fatal Assertion failure: %{public}s %{public}s:%d Tile should be empty during delete!
Tile should be empty during delete!
Fatal Assertion failure: %{public}s %{public}s:%d Shifting tiles too far during delete!
Shifting tiles too far during delete!
Fatal Assertion failure: %{public}s %{public}s:%d We removed too many rows during delete!
We removed too many rows during delete!
Shift too big during delete!
v32@?0^v8Q16^B24
TSTTilesCat
-[TSTTableTileStorage moveRowIndexRange:toIndex:]
Move row ranges cannot overlap!
v32@?0q8q16^B24
-[TSTTableTileStorage populatedRows]_block_invoke
Fatal Assertion failure: %{public}s %{public}s:%d Corrupt tile ID set!
-[TSTTableTileStorage lastPopulatedRowIndex]_block_invoke
Corrupt tile ID set!
RowInfo Cell Count Audit
Tile ID %lu, firstRow:%d
Tile Overlap Audit
-[TSTTableTileStorage auditTilesForRowOverlapAndExtensionPastTableBounds:withDataStore:result:]_block_invoke
Expected non-empty tile.
Tile with rows %d-%d overlaps with previous tiles in the table.
TileLastRow:%d tileMaxColumn:%d extends beyond tableModelLastRow:%d lastColumn:%d
v28@?0^{TSTCellStorage=}8S16^B20
-[TSTTableTileStorage prepareToApplyConcurrentCellMap:]_block_invoke
@"TSUPair"12@?0I8
TSKUIDStruct TSTUidApplyingAggregateIndex(const TSKUIDStruct &, NSUInteger)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTUIDTypes.mm
aggregateIndex * 2 had better fit in a UInt8
static TSKUIDStruct TSTUidGenerator::newUID(const char *, const char *, bool)
Not expecting null pointers here
Fatal Assertion failure: %{public}s %{public}s:%d Bad header bucket index for creation: %u
-[TSTTableHeaderStorage _allocateBucketsForIndex:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableHeaderStorage.mm
Bad header bucket index for creation: %u
Fatal Assertion failure: %{public}s %{public}s:%d Can't be missing the first bucket!
Can't be missing the first bucket!
Fatal Assertion failure: %{public}s %{public}s:%d Asked to create buckets when we've already done so!
-[TSTTableHeaderStorage _allocateBuckets]
Asked to create buckets when we've already done so!
-[TSTTableHeaderStorage _bucketForIndex:]
Unexpected header bucket index: %u!
-[TSTTableHeaderStorage initFromArchive:unarchiver:owner:]
Don't know how to handle this bucket hash function!
-[TSTTableHeaderStorage initFromArchive:unarchiver:owner:]_block_invoke
Bad header bucket count!
Fatal Assertion failure: %{public}s %{public}s:%d Bad bucket count during archiving!
-[TSTTableHeaderStorage encodeToArchive:archiver:]
Bad bucket count during archiving!
-[TSTTableHeaderStorage sizeAtIndex:]
-[TSTTableHeaderStorage setSize:atIndex:]
-[TSTTableHeaderStorage hidingStateAtIndex:]
-[TSTTableHeaderStorage setHidingState:atIndex:]
-[TSTTableHeaderStorage cellStyleAtIndex:]
-[TSTTableHeaderStorage setCellStyle:atIndex:]
-[TSTTableHeaderStorage textStyleAtIndex:]
-[TSTTableHeaderStorage setTextStyle:atIndex:]
-[TSTTableHeaderStorage defaultStylesAtIndex:outCellStyle:outTextStyle:]
-[TSTTableHeaderStorage defaultStyleHandlesAtIndex:outCellStyleHandle:outTextStyleHandle:]
-[TSTTableHeaderStorage metadataAtIndex:hidingAction:defaultSize:uuid:]
-[TSTTableHeaderStorage updateHeaderAtIndex:fromMetadata:]
-[TSTTableHeaderStorage removeIndexesAtIndex:count:]
-[TSTTableHeaderStorage shiftIndexesForwardAtIndex:count:]
Headers spilled out of our last bucket during shift!
-[TSTTableHeaderStorage shiftIndexesBackAtIndex:count:]
Headers spilled below zero!
Fatal Assertion failure: %{public}s %{public}s:%d Move ranges cannot overlap!
-[TSTTableHeaderStorage moveIndexRange:toIndex:]
Move ranges cannot overlap!
-[TSTTableHeaderStorage cellCountAtIndex:]
-[TSTTableHeaderStorage decrementCellCountAtIndex:byAmount:]
-[TSTTableHeaderStorage incrementCellCountAtIndex:byAmount:]
<%@:%p index %lu baseCol %u rules %@
-[TSTTableHeaderStorageBucket initWithContext:bounds:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableHeaderStorageBucket.mm
Can't initialize a bucket with a bad range!
v32@?0@"TSTTableHeaderInfo"8Q16^B24
Fatal Assertion failure: %{public}s %{public}s:%d Index out of range for bucket!
-[TSTTableHeaderStorageBucket _makeHeaderAtIndex:]
Index out of range for bucket!
-[TSTTableHeaderStorageBucket shiftIndexesBackAtIndex:count:]
Can't shift indexes below zero!
-[TSTTableHeaderStorageBucket headerAtIndex:]
-[TSTTableHeaderStorageBucket setHeader:atIndex:]
Tables/HeaderStorageBucket
-[TSTTableHeaderStorageBucket(Archiving) loadFromUnarchiver:]
Fatal Assertion failure: %{public}s %{public}s:%d Cached style count was wrong!
-[TSTTableHeaderStorageBucket(Archiving) saveToArchiver:]
Cached style count was wrong!
-[TSCELogicalTest initWithCriterion:functionSpec:evaluationContext:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCELogicalTest.mm
type not handled: %d
<%@: %p>: operation: %d value: %@ string: %@ date: %@ -> cost: %lu
<%@: %p>
[%lu]: %@
TSTCategorizedTables
-[TSCEAbstractGrid deepType:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEAbstractGrid.mm
TSCEAbstractGrid subclasses must override
-[TSCEAbstractGrid dimensions]
-[TSCEAbstractGrid valueAtGridCoord:accessContext:]
-[TSCEAbstractGrid valueAtIndex:accessContext:]
-[TSCEAbstractGrid count]
-[TSCEAbstractGrid subGridValueAtGridCoord:width:height:accessContext:]
-[TSCEAbstractGrid newCorrespondingAST:argIndex:bakeReferences:evaluationContext:]
too many arguments to fit in a node!
-[TSCEAbstractGrid value]
v24@?0@"TSTLayoutSpace"8^B16
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTLayout.mm
CGRect TSTLayoutGetCanvasFrame(TSTLayout *__strong)
Passing in a nil layout to TSTLayoutGetCanvasFrame.
{CGRect={CGPoint=dd}{CGSize=dd}}32@?0@"TSTLayoutSpace"8{?={?=II}{?=II}}16
v24@?0{?={?=II}{?=II}}8
@"TSUBezierPath"16@?0@"NSArray"8
v40@?0Q8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16^B32
-[TSTLayout p_spillRangeForMaskingRichTextLayout:]
alignment should have already been resolved
-[TSTLayout p_prepareAttachmentCellsIfNeeded]_block_invoke_2
cell
iterator should return a valid cellID
storage should be nil since iterator is searching with TSTCellIteratorSearchForRichText
v24@?0@"TSWPStorage"8^B16
v32@?0@"TSTWPLayout"8Q16^B24
-[TSTLayout positionForColumnIndex:bodyWidth:target:outWidth:outGap:]
created an undersized column
-[TSTLayout naturalAlignmentForCellID:]
Contained text editing layout but invalid editing cell ID?
-[TSTLayout p_cellIDForWPLayout:]
TSTLayout should only parent layouts for editing text or cells with inline attachments!
-[TSTLayout maxAutoGrowLineWidthForTextLayout:]
should only be asking max width for unwrapped rich layouts
-[TSTLayout p_computeSpillingTextFrameForEditingLayout:textSize:editingSpillRange:]
B24@?0@"TSTLayout"8^B16
-[TSTAccumulator valueForType:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTAccumulator.mm
%@ does not handle TSCEAggType_StDev/_VAR/_CountDistinct request - a higher level should have handled that
%@ does not handle TSCEAggType_GroupValue/_BodyRows/_Indirect request - a higher level should have handled that
v32@?0@"TSTColumnAggregate"8Q16^B24
-[TSCEReferencesToDirty setCalculationEngine:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEReferencesToDirty.mm
-[TSCEReferencesToDirty dirtyAllCellsInOwner:]
depTracker
-[TSCEReferencesToDirty dirtyRangeRef:]
v32@?0r^{TSKUIDStruct=QQ}8r^v16^B24
B8@?0
TSCEErrorValue (type %d %@)
-[TSTRefNamer nameForBaseTractRef:namingContext:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTRefNamer.mm
baseString
v24@?0r^{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}8^B16
-[TSTRefNamer nameForViewTractRef:namingContext:coordMapper:]_block_invoke
viewString
%@::
Categories
Body
 (%@)
%@<%p>: %@
-[TSCENamedReferenceManager initWithContext:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCENamedReferenceManager.mm
use initWithContext:calculationEngine: instead
v16@?0@"TSCETrackedReferenceStore"8
-[TSCENamedReferenceManager setFormulaOwnerUID:]
Invalid formulaOwnerUID
-[TSCESumAccumulator addValue:function:evaluationContext:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCESumAccumulator.mm
Shouldn't get a nil date from something that says it's a date
com.apple.Numbers.TST.PivotCellSetter
(blank)
CellDiffArray
-[TSCECoordMapper chromeTractRefForViewTractRef:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECoordMapper.mm
Not able to find valid indexes
Wasn't expecting this to be possible with valid input
v16@?0I8I12
-[TSTStrokeSidecar initForUpgradeWithTableModel:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTStrokeSidecar.mm
No usable root style in the document stylesheet or the deprecated theme stylesheet. Dropping the cell style on the floor.
v16@?0{TSUModelCellCoord={TSUCellCoord=ISBB}}8
v56@?0{TSTSimpleRange=qQ}8@"TSDStroke"24i32@"TSDStroke"36i44^B48
-[TSTStrokeSidecar flattenStrokeOrder]
left and right column stroke count should be identical
top and bottom row stroke count should be identical
v44@?0@"TSDStroke"8{TSTSimpleRange=qQ}16i32^B36
v24@?0@"NSArray"8@"NSPointerArray"16
-[TSTStrokeSidecar saveToArchiver:]
top and bottom stroke run arrays have different counts
left and right stroke run arrays have different counts
-[TSTCellRangeCache clear]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellRangeCache.mm
Clear with a BitGridTransaction open
v32@?0r^{TSUCellRect={TSUCellCoord=ISBB}{?=II}}8r^{TSCEInternalCellReference={TSUCellCoord=ISBB}SS}16^B24
v32@?0{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}8^B24
v40@?0Q8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16^B32
-[TSTCellRangeCache mergedGridIndicesForDimension:]
Invalid table dimension
-[TSTLayoutSpace invalidateCoordinatesForEditingCellID:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTLayoutSpace.mm
Invalidating for an editing cell range that is not a single logical cell.
-[TSTLayoutSpace nearestRangeForLayoutRect:]
Failed to get nearest cell range from space %@ for layout rect %{public}@
-[TSTLayoutSpace frameForTableNameBorder]
this API is intended to run on the main space
-[TSTLayoutSpace strokeFrameForTableNameBorder]
-[TSTLayoutSpace alignedStrokeFrameForTableNameBorder]
WARNING: vertical stroke ( %f %@ => %@ ) length <= 0.0
WARNING: horizontal stroke ( %f %@ => %@ ) length <= 0.0
v48@?0@"TSDStroke"8{TSTSimpleRange=qQ}16i32i36^B40
-[TSTLayoutSpace validateCoordinateCache:]
There are no column coordinates
-[TSTCoordinateArray setTableWidthForRightToLeft:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCoordinateArray.mm
Setting a table width on a LTR coordinate array has no effect.
CGFloat TSTCoordinateArrayGetCoordinate(TSTCoordinateArray *__strong, TSTGridIndex)
coordinateArray
CGFloat TSTCoordinateArrayGetRawCoordinate(TSTCoordinateArray *__strong, TSTGridIndex)
<%@ %p offset=%u average=%f
 coordinates={empty}>
 coordinates={
  { offset=%u -> coordinate=%f }
-[TSCECellDirtier dirtyNewCellRef:forSeconds:fromStartTime:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECellDirtier.mm
%p Still working on dirtying: %@
igami
%d, 
(%@ %@ %@)
(%@)
(%@%@)
%@,%@
%@(%@)
NSString *TSCEASTDescriptionIterator::prettyDescription()
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTDescriptionIterator.mm
Should only have one argument on _argStack at this point, the final result. ArgStack: %@
virtual TSCEASTElement *TSCEASTDescriptionIterator::binaryInfixOperatorNode(TSCEASTBinaryElement *)
Unknown operator tag: %d
op- 
op+ 
virtual TSCEASTElement *TSCEASTDescriptionIterator::unaryOperatorNode(TSCEASTUnaryElement *, BOOL)
((%@)%%)
%@{%i args, ws:'%@'} 
%@{%i args} 
unknownFunction: %@{%i args} 
[: %@]
Unexpected refType: %@
v24@?0r^{TSCEAnyRef=S{TSCESpanningRangeRef={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}C}{TSKUIDStruct=QQ}B@}8^B16
[%@]
<error in colonTractNode() - got nil>
virtual TSCEASTElement *TSCEASTDescriptionIterator::colonTractNode(TSCEASTColonTractElement *)
Why would this happen?
%@{%@}
<#REF! VTR>
ViewTractRef(%@ Preserve:%u) 
"%@"
"%@" 
unit;%lf
<empty>
<empty> 
<token>
token 
array; cols:%d rows:%d 
%@; %@
{%@ %@}
<list, len:%d>
list; length:%d 
thunk[
let %@ = %@ in
<%@>
(var %u)
virtual TSCEASTElement *TSCEASTDescriptionIterator::anyReferenceNode(TSCEASTRelativeCoordRefElement *)
We shouldn't actually reach here - the tag indicates this reference is valid or spanning
#REF!
%@%@%@%@
[%@%@]
[%@%@, %@%@]
append ws: '%@'
prepend ws: '%@'
#REF! 
#REF(%@%@, %@:: %@)! 
#REF(%@%@, %@)! 
linkedCellRef(%@) 
linkedColumnRef(%@) 
linkedRowRef(%@) 
UidRef(%@ Preserve:%u) 
%@::%@ 
virtual NSString *TSCEDateValue::string(TSCEFunctionSpec *__unsafe_unretained, int, TSULocale *__strong) const
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEDateValue.mm
dateFormat.customFormat.defaultFormatData
<%@ %p>: expressionNode:%@, parenNestingLevel:%lu argumentIndex:%lu
-[TSCEFormulaObject initWithNodeArray:translationFlags:hostTableUID:hostColumnUID:hostRowUID:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFormulaObject.mm
Can only set hostCellUID on uid-form formula
-[TSCEFormulaObject evaluateWithContext:]
Uncaught exception: %{public}@
-[TSCEFormulaObject copyByRewritingForTranspose:calcEngine:containingCell:outTransposeWarning:]
Expect rewriteSpec -willModifyTable: (or variant) to have been called before rewriting formulas.
Expect rewriteSpec -didModifyTable: (or variant) to have been called before rewriting formulas.
-[TSCEFormulaObject copyByRewritingWithSpec:calcEngine:containingCell:]
Warning, no rewriter created for this formula rewrite type (yet).
-[TSCEFormulaObject copyBySettingHostTableUID:hostColumnUID:hostRowUID:]
-[TSCEFormulaObject copyByRewritingReferencesToUidForm:]
preserveHostCell requested, but resolverTableUID %@ not found
-[TSCEFormulaObject copyByRewritingReferencesToGeometricForm:]
Over-riding hostTableUID for %@
conditional style
=__CHART(
+[TSCEFormulaObject parseFormula:calcEngine:unqualifiedReferenceTableUID:containingCell:outError:outNeedsImportRewrite:isChartFormula:isSageUpgrade:]
Only chart formulas should start with the chart prefix.
formula string does not start with =
TSCEThreadAllocatorKey
invalid symbol
-[TSTVariableNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTVariableNode.mm
Unexpected object in initAsCopyOf:... expected TSTVariableNode, got %@
invalid symbol in copy
invalid symbol in setter
-[TSTVariableNode insertFormulaText:includeWhitespace:]
NumberNode shouldn't have any children
-[TSTVariableNode buildASTNodeArray:hostCell:symbolTable:]
VariableNode shouldn't have any children
void TSTCellRegionGathererMap::joinAndAddRange(TSTCellRange, NSUInteger)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellRegionGatherer.mm
_cellRanges does not match encodedCoordToCandidateIndexMap
v24@?0{TSTCellRegionGathererKey=QI}8
TSUCellRect TSUMakeCellRectFromNSRanges(NSRange, NSRange)
Invalid column range
Invalid row range
TSCEASTElement *TSCEASTRewriter::loadAsTree()
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTRewriter.mm
An incomplete node needs one argument - the root of the thunk expression
Not enough arguments for let node
%d is not a valid node tag, seen at offset: %lu, seen in %{public}@
virtual void TSCEASTRewriter::rewrite()
_symbolTable
void TSCEASTNodeArrayReader::setOffset(size_t)
Can't set offset more than one past bytes used, offset: %lu in formula
void TSCEASTIteratorBase::willModify()
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTIteratorBase.h
Attempting to modify an iterator marked as readOnly.
void TSCEASTNodeArray::writeBytes(const uint8_t *, size_t)
%@ group-by: %@ for column: %@
-[TSTTableStylePreset setStyleNetwork:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableStylePreset.mm
styleNetwork
-[TSTTableStylePreset presetID]
No valid preset ID
-[TSTTableStylePreset initWithStyleNetwork:]
-[TSTTableStylePreset initWithContext:]
Should always be intialized with a network and an ID
-[TSTTableStylePreset drawSwatchInRect:inContext:]
_styleNetwork
-[TSTTableStylePreset loadFromUnarchiver:]_block_invoke
_tempUpgradePresetID
_styleNetwork.presetID
v16@?0@"TSTTableStyleNetwork"8
-[TSTTableStylePreset saveToArchive:archiver:]
TSCERemoteDataServerStatusChangeNotification
TSCERemoteDataServerStatusChangesKey
TSCERemoteDataServerStatusChangeToOnlineKey
TSCERemoteDataServerStatusChangeToOfflineKey
TSCERemoteDataCat
ask_price.raw
ask_size.raw
avg_3m_volume.raw
beta_coefficient.raw
bid_price.raw
bid_size.raw
change.raw
currency
day_high.raw
day_low.raw
dividend_per_share.raw
dividend_yield.raw
eps.raw
exchange
fiftytwo_week_high.raw
fiftytwo_week_low.raw
market_cap.raw
name
one_year_target.raw
open.raw
pe_ratio.raw
percent_change.raw
prev_close.raw
price.raw
volume.raw
symbol
time.raw
Not Set
Ask Price
Ask Size
Avg 3M Volume
Beta
Bid Price
Bid Size
Change
Currency
High
Annual Dividend
Dividend Yield
Exchange
52 Week High
52 Week Low
Market Cap
Name
One Year Target
Open
P/E Ratio
Percent Change
Close
Price
Volume
Symbol
Time
-[TSCERelativeTractRef addRelativeColumn:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCERelativeTractRef.mm
Cannot mix spanning and non-spanning column
-[TSCERelativeTractRef addRelativeRow:]
Cannot mix spanning and non-spanning row
-[TSCERelativeTractRef verifySpanningSettings]
Wrong count
Wrong index present
Invalid seen in non-spanning
No column found, but not marked as spanning
No row found, but not marked as spanning
Should match existing asserts
-[TSCERelativeTractRef relativeTopLeft]
-[TSCERelativeTractRef relativeBottomRight]
Non-spanning ref has %d relative columns
No columns found, but not marked as spanning
Non-spanning ref has %d absolute columns
Non-spanning ref has %d relative rows
No rows found, but not marked as spanning
Non-spanning ref has %d absolute rows
TSCEValue TSCEComputeSubtraction(TSCEValue, int, TSCEValue, int, TSCEFunctionSpec *__unsafe_unretained, TSCEEvaluationContext *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEAggregateEval.mm
map::at:  key not found
tableName
textStyle
shapeStyle
@"TSSStyle"40@?0@"TSSStyle"8@"NSString"16Q24Q32
+[TSTTableStyleNetwork createStylesInStylesheet:presetID:colors:alternate:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableStyleNetwork.mm
Style network is missing styles. %{public}@
+[TSTTableStyleNetwork networkFromStylesheet:presetID:]
no default table style in stylesheet %p
nameStyle
tableNameShapeStyle
+[TSTTableStyleNetwork networkFromTheme:presetID:]
theme
+[TSTTableStyleNetwork networkFromTheme:presetIndex:]
+[TSTTableStyleNetwork networkWithContext:presetID:styleProvider:tableStyleMorphingBlock:nameStyleMorphingBlock:nameShapeStyleMorphingBlock:cellStyleMorphingBlockByStyleArea:textStyleMorphingBlockByStyleArea:]
All styles are not present and accounted for.
v24@?0Q8Q16
-[TSTTableStyleNetwork initWithContext:styleProvider:presetID:]
Cannot set styles from a different context
-[TSTTableStyleNetwork isEqual:]
Cell style array length mismatch
Cell style array element nillity mismatch at position %zu
Text style array length mismatch
Text style array element nillity mismatch at position %zu
-[TSTTableStyleNetwork setTextStyle:forTableStyleArea:]
Pivot areas use the equivalent default area textStyle. Don't try to set it.
-[TSTTableStyleNetwork loadFromArchive:unarchiver:]_block_invoke
_tableStyle must be nil when loading from an archive
-[TSTTableStyleNetwork loadFromArchive:unarchiver:]_block_invoke_14
_tableNameStyle must be nil when loading from an archive
-[TSTTableStyleNetwork loadFromArchive:unarchiver:]_block_invoke_15
_tableNameShapeStyle must be nil when loading from an archive
sheet-0-sheetStyle
%@, %@
cellID:%u, %u, count:%lu
void TSCEASTNodeArray::resizeCapacity(size_t)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTNodeArray.mm
No nodeArray allocated.
You are going to crash very soon. You have overwritten your node array: %{public}@
resize didn't grow array enough
empty nodeArray
uint8_t _nodeArray[%d] = {
void TSCEASTNodeArrayReader::pushEndPoint(size_t)
We shouldn't be making the array seem larger when pushing a new end-point
void TSCEASTNodeArrayReader::skipIndexSet()
skipIndexSet going off rails, numRanges: %lu for formula: %{public}@
void TSCEASTNodeArray::write(const T &) [T = TSKUIDStruct]
void TSCEASTNodeArray::write(const T &) [T = int]
-[TSTOwnerUidMapper p_recreateUIDs]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTOwnerUidMapper.mm
Check for non subOwner formula UIDs
-[TSTOwnerUidMapper setToUpgradeMapping]
kTSCERecalcLoopGroupEmpty
CalculationEngine
TSCECalculationEngine
TSCENamedReferenceManager
TSCETrackedReferenceStore
TSCETrackedReferenceTSPObjectDeprecated
TSCERemoteDataStore
TSCEFormulaOwnerDependencies
TSCECellRecordTileWrapper
TSCERangePrecedentsTile
TSCEReferencesToDirty
-[TSTTableStrokePresetList setStrokePreset:atIndex:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableStrokePresetList.mm
preset index higher than count
-[TSTTableStrokePresetList initWithArchive:unarchiver:]
invalid preset count
-[TSTTableStrokePresetList horizontalStrokeForStrokePreset:]
illegal preset index
-[TSTTableStrokePresetList verticalStrokeForStrokePreset:]
-[TSTTableStrokePresetList exteriorStrokeForStrokePreset:]
-[TSTTableStrokePresetList maskForStrokePreset:]
-[TSCEFormulaRewriteSpec addCoordMapper:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFormulaRewriteSpec.mm
Replacing same tableUID with a different coordMapper - expect trouble: %@
 type: %@ %@
(inverse)
 tableUID: %@
Nested rewrites:
   (nested): %@
-[TSCEFormulaRewriteSpec affectedOwnerUID]
Shouldn't ask for the affected owner ID of a move, since there may be two.
Not a meaningful question, there are numerous tables affected
-[TSCEFormulaRewriteSpec affectedConditionalStyleOwnerUID]
Not implemented for these rewrite types.
-[TSCEFormulaRewriteSpec adjustViewTractRef:calcEngine:containingCellRef:undoTractList:]
subclasses must override
-[TSCEFormulaRewriteSpec restoreViewTractRefFromUndoTractList:calcEngine:containingCellRef:]
-[TSCEFormulaRewriteSpec willModifyTable:uidResolver:calcEngine:]
Move region requires the two tables version will/didModifySrcTable:dstTable: be called instead
-[TSCEFormulaRewriteSpec willModifySrcTable:srcUidResolver:dstTable:dstUidResolver:]
Only move region takes two tables
-[TSCEFormulaRewriteSpec didModifySrcTable:dstTable:]
-[TSCEFormulaRewriteSpec didModifyTable:calcEngine:]
Move region requires the two table version didModifySrcTable:dstTable: be called instead
-[TSCEFormulaRewriteSpec affectedRange]
Not implemented yet for this type
Not implemented for this type
Not yet implemented for this type
-[TSCEFormulaRewriteSpec expandedRowColumnUuids]
+[TSCETablesByName containerNameForTable:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCETablesByName.mm
+[TSCETablesByName tableNameForTable:]
%@<%p>:
  ContainerName: '%@' TableName: '%@' Table: %@
v16@?0@"TSSStylesheet"8
-[TSSTheme(TSTArchiving) tstLoadFromArchive:unarchiver:]_block_invoke_2
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSSTheme_TSTArchiving.mm
Preset style network is missing styles when unarchiving. %{public}@
-[TSTExpressionNode exportString]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTExpressionNode.mm
Children of TSTExpressionNode that is tokenized should implement exportString().
v32@?0@"TSTExpressionNode"8Q16^B24
-[TSTExpressionNode recordHashesForSubexpressions:]
subclasses must override recordHashesForSubexpressions so CSE works properly
<%@ %p>: '%@'
-[TSTFormula reparseWithStorage:adjustExpressionTree:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTFormula.mm
Formula storage exceeds maximum length.
'%C%C
'%C%C%C%C
%C%C%C%C%C%C%C%C%C%C%C
+[TSTFormula formulaQuoteContextAtCharIndex:inStorage:]
charIndex %lu not within storage range %@
+-*/^&=><:
%C%C%C%C%C%C%C%C
%C%C%C%C%C%C%C%C%C%C
%C%C%C%C%C
-[TSTFormula p_fixFormula:]
expected a function node with a function start token
expected non-empty storage
expected a function node on the stack
v24@?0@"TSTExpressionNode"8^B16
virtual NSDate *TSCEViewTractRefValue::date(TSCEFunctionSpec *__unsafe_unretained, int, TSCEEvaluationContext *) const
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEViewTractRefValue.mm
Error: couldn't resolve TSCEViewTractRefValue
virtual NSString *TSCEViewTractRefValue::rawString(TSCEFunctionSpec *__unsafe_unretained, int, TSULocale *__strong) const
unsupported
virtual BOOL TSCEViewTractRefValue::boolean(TSCEFunctionSpec *__unsafe_unretained, int, TSCEEvaluationContext *) const
virtual TSCERichTextStorage TSCEViewTractRefValue::richTextStorage(TSCEFunctionSpec *__unsafe_unretained, int, TSCEEvaluationContext *) const
virtual TSCERichTextStorage TSCEViewTractRefValue::rawRichTextStorage(TSCEFunctionSpec *__unsafe_unretained, int, TSCEEvaluationContext *) const
virtual TSCEGrid TSCEViewTractRefValue::formattedGrid(TSCEFunctionSpec *__unsafe_unretained, int, TSCEEvaluationContext *, BOOL) const
virtual TSCENumberValue TSCEViewTractRefValue::number() const
virtual NSDate *TSCEViewTractRefValue::date() const
stdtr
stdtri
+[TSTCellChooserControlSpec cellSpecFromTSKFormat:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellChooserControlSpec.mm
mcFormat
-[TSTCellChooserControlSpec initWithArchive:unarchiver:]
Wrong interaction type for a popup.
v16@?0@"TSTPopUpMenuModel"8
TSCEValue TSCEFunctionArgSpec::valueForModeIndex(short) const
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFunctionArgSpec.mm
Requesting value for non-mode argument.
Requesting value for out of bounds index.
%C%@_ARGUMENT_%d%C
%@ (%@)
Found duplicate for internal ownerID %@, %d and %d
void TSCEIDMap::loadFromArchive(const TSCE::OwnerIDMapArchive &)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEIDMap.mm
Got an invalid ownerUID during loadFromArchive, internalOwnerID: %lu
Repaired duplicate internal formula ownerIDs:
%d -> %d (%@)
TSCEInternalFormulaOwnerID TSCEIDMap::registerUID(TSCEOwnerUID)
new ID %lu is already in use by %@ - attempted reuse by %@
About to overwrite a reference in _uidToInternalIDMap: %d -> %d for ownerUID: %{public}@ in Map: %{public}@
TSCEIDMap:
  %d -> %@
  %d -> <UNREGISTERED>
-[TSTOperatorNode initWithContext:operatorChar:children:firstIndex:lastIndex:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTOperatorNode.mm
Operators should only have 2 children.  There are %lu arguments to operator '%hu'
-[TSTOperatorNode initAsCopyOf:intoContext:children:]
Unexpected object in initAsCopyOf:... expected TSTOperatorNode, got %@
-[TSTOperatorNode insertFormulaText:includeWhitespace:]
OperatorNode doesn't have two arguments
-[TSTOperatorNode buildASTNodeArray:hostCell:symbolTable:]
Operator node doesn't have two arguments
Undefined operator node
virtual TSCEASTElement *TSCEASTRefExtractionIterator::functionNode(TSCEASTFunctionElement *)_block_invoke_2
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTRefExtractionIterator.mm
unhandled case for refType: %d
v28@?0I8@"TSUCustomFormat"12^B20
^%@$
v32@?0@"NSTextCheckingResult"8Q16^B24
-[TSTNumberNode initWithContext:string:locale:firstIndex:lastIndex:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTNumberNode.mm
numberString
-[TSTNumberNode initAsCopyOf:intoContext:children:]
Unexpected object in initAsCopyOf:... expected TSTNumberNode, got %@
-[TSTNumberNode insertFormulaText:includeWhitespace:]
-[TSTNumberNode buildASTNodeArray:hostCell:symbolTable:]
NSString *TSTStringForDouble(double, TSULocale *__strong)
A locale is required here
Warning: Creating brave new cell with value type %@ but mismatched format type %@, repairing
-[TSTCell_PreBNC upgradedBraveNewCell]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCell_PreBNC.mm
-[TSTCell_PreBNC initWithLocale:]
The formula should not begin with an equals sign.
The formula contains a syntax error.
-[TSTCell_PreBNC stringForEditing]
durationFormat
-[TSTCell_PreBNC setCellStyle:clearingID:]
-[TSTCell_PreBNC setTextStyle:clearingID:]
-[TSTCell_PreBNC setConditionalStyle:clearingID:]
expected conditional style got %{public}@
B20@?0@"TSKFormat"8S16
-[TSTCell_PreBNC copyAllFormatsToCell:]
dest
<%@:%p: value type %@ value %@>
No content
Number
DEPRECATED
Date
Bool
Duration
FormulaError
RichText
Cell Spec: 
Value: 
<number: %f>
<rich text: '%@'>
<string: '%@'>
<date: '%@'>
<bool: '%@'>
<duration: %f>
<error>
<unknown cell type>
v24@?0r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}8^B16
v32@?0r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}8r^{TSKUIDStruct=QQ}16^B24
-[TSTCellMap loadFromUnarchiver:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellMap.mm
serious error: flag out of sync with content.
-[TSTCellMap loadFromUnarchiver:]_block_invoke
creating a one-to-many cell map but starting with more than one cell
-[TSTCellMap saveToArchiver:]
We should never archive shallow copies. That's not what they are for
v32@?0@"TSTCellList"8Q16^B24
-[TSTCellMap cellIDAtIndex:]
cannot examine cellIDs in UID mode
-[TSTCellMap enumerateCellsWithIDsUsingBlock:]
can't enumerate IDs since have UIDs
-[TSTCellMap enumerateCellsWithUIDsUsingBlock:]
can't enumerate by UIDs since have IDs
-[TSTCellMap findCellForCellID:]
cannot use find with a UID based cell map
v40@?0r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}8@"TSTCell"16Q24^B32
-[TSTCellMap addCell:andCellUID:]
cannot add UIDs in ID mode
cannot add cells in one-to-many mode
-[TSTCellMap addPrecopiedCells:andCellUIDs:]
Cell and CellUID sizes don't match up
-[TSTCellMap addCell:andCellID:]
Cannot add cellIDs while in UID mode.
-[TSTCellMap replaceCellAtIndex0:]
-[TSTCellMap appendCellMap:precopied:]
Trying to append a cellID cellMap to a uidBased map. Aborting.
Trying to append a uidBased cellMap to a cellID map. Aborting.
-[TSTCellMap p_addPrecopiedCells:]
Shallow copy not supported in this path
-[TSTCellMap p_copyCellsAndUUIDsFromCellMap:convertingToCellIDsWithTableInfo:]
This should only be called with a UID based cell map.
-[TSTCellList cellAtIndex:]
Out of range in  %@
-[TSTCellList replaceCell:atIndex:]
Asking to replace where we currently have no cell at all - invalid replaceCell: call
Should now fit in real range
-[TSTCellList loadFromUnarchiver:]_block_invoke
virtual TSCEASTElement *TSTTSCEASTNodeExpressionNodeFunction::functionNode(TSCEASTFunctionElement *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTSCEASTNodeExpressionNodeFunction.mm
improper number of arguments for function node.
virtual TSCEASTElement *TSTTSCEASTNodeExpressionNodeFunction::unknownFunctionNode(TSCEASTUnknownFunctionElement *)
virtual TSCEASTElement *TSTTSCEASTNodeExpressionNodeFunction::colonNode(TSCEASTColonElement *)
improper number of arguments for colon node.
virtual TSCEASTElement *TSTTSCEASTNodeExpressionNodeFunction::arrayNode(TSCEASTArrayElement *)
improper number of arguments for array.
virtual TSCEASTElement *TSTTSCEASTNodeExpressionNodeFunction::listNode(TSCEASTListElement *)
improper number of arguments for list node.
virtual TSCEASTElement *TSTTSCEASTNodeExpressionNodeFunction::viewTractRefNode(TSCEASTViewTractRefElement *)
viewTractRef is expected to have an active tract
TSTExpressionNode *TSTTSCEASTNodeExpressionNodeFunction::expressionNode()
Unable to properly create a TSTExpressionNode. Possibly a bad ASTNodeArray?
void TSTTSCEASTNodeExpressionNodeFunction::processOperatorNode(unichar)
improper number of arguments for operator node.
void TSTTSCEASTNodeExpressionNodeFunction::processPostfixOperatorNode(unichar)
improper number of arguments for postfix operator node.
void TSTTSCEASTNodeExpressionNodeFunction::processPrefixOperatorNode(unichar)
improper number of arguments for prefix operator node.
unichar operatorCharForTag(TSCEASTNodeTag)
v40@?0d8{TSTSimpleRange=qQ}16^B32
-[TSTColumnRowUIDMap initWithContext:tableUUID:numberOfRows:numberOfColumns:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTColumnRowUIDMap.mm
tableUUID
-[TSTColumnRowUIDMap insertColumnsWithUIDs:atIndex:]
cannot insert columns at invalid columnIndex
-[TSTColumnRowUIDMap insertRowsWithUIDs:atIndex:]
cannot insert rows at invalid rowIndex
v28@?0I8r^{TSKUIDStruct=QQ}12^B20
v32@?0r^{TSTLookupKeyCoord=I}8Q16^B24
v28@?0S8r^{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}12^B20
-[TSTImmutableColumnRowUIDMap initWithColumnRowUIDMap:]
@e need to ensure versionCounter was preserved
gamma
lgam
-[TSTCategoryOwner setTableModel:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCategoryOwner.mm
tableModel
%@<%p> (on table %@)
-[TSTCategoryOwner registerWithCalcEngine:baseOwnerUID:]
Already registered with calcEngine
GroupBy shouldn't be registered yet.
-[TSTCategoryOwner registerGroupByForColumns:ownerIndex:hiddenStates:groupBySet:]
Bad ownerIndex (%d) for groupBy
If ownerIndex matches up, then so should groupByUid
-[TSTCategoryOwner updateWithDocumentRoot:]
TSTPivotTables_v2
%@ @ %@
-[TSTAggNode encodeToArchive:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTAggNode.mm
Not expecting an invalid coord here
NSInteger StockAttributeFromString(NSString *__strong, NSUInteger, NSString *__strong, NSInteger, TSULocale *__strong)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCERemoteDataModeUtility.m
documentLocale
-[TSTFunctionNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTFunctionNode.mm
Unexpected object in initAsCopyOf:... expected TSTFunctionNode, got %@
-[TSTFunctionNode buildASTNodeArray:hostCell:symbolTable:]
Remote Data Coordinator
-[TSCERemoteDataCoordinator registerStore:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCERemoteDataCoordinator.mm
%@ is already registered!
-[TSCERemoteDataCoordinator unregisterStore:]
%@ is not registered
-[TSCERemoteDataCoordinator p_fetcherForDataKind:]
No configured fetcher for this data kind!
-[TSCERemoteDataCoordinator addRemoteDataInterest:forStore:]_block_invoke
Unclaimed specifiers after register!
^IXIC
^NYA
^FTSE
^FTAS
^FTAI
^FCHI
^GDAXI
^AXJO
^AORD
^ATX
^BFX
^BVSP
^GSPTSE
000001.SS
399001.SZ
OMXC20.CO
^OMXH25
^HSI
^NSEI
^BSESN
^JKSE
^ISEQ
^IETP
T25.TA
^TA100
FTSEMIB.MI
^N225
^KLSE
^MXX
^AEX
^NZ50
^OSEAX
RTS.RS
^STI
^KS11
^IBEX
^OMX
^SSMI
^TWII
^DJI
AAPL
SBUX
-[TSCERemoteDataCoordinator p_dataSourceFetcherForRemoteData:]
No matching remote data source fetcher for %@
-[TSCERemoteDataCoordinator p_removeRemoteDataInterest:forStore:]
Unclaimed specifiers after unregister!
-[TSCERemoteDataCoordinator isOnlineForDataKind:]
No status for this data kind!
v32@?0@"NSString"8@"TSCEStock"16^B24
-[TSCERemoteDataCoordinator sourceFetcherDidUpdate:withValues:quotes:]_block_invoke_2
Unexpected changes!
-[TSTLetNode initWithContext:children:firstIndex:lastIndex:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTLetNode.mm
Let nodes should have exactly 0 or 3 children.  There are %lu arguments to let
A let node's first child must be an identifier.
-[TSTLetNode initAsCopyOf:intoContext:children:]
variable %u
-[TSTLetNode setChildren:]
let nodes must have zero or three children
-[TSTLetNode boundSymbol]
identifier is not of proper type: %@
-[TSTLetNode copyByResolvingIdentifiers:hostTable:baseHostCell:forceReferenceInterpretation:symbolTable:oldToNewNodeMap:]
Let nodes must have exactly zero or three children
-[TSTLetNode addAllIdentifiersToSymbolTable:]
Let nodes must have exactly three children
-[TSTLetNode insertFormulaText:includeWhitespace:]
Let node doesn't have three arguments
-[TSTLetNode buildASTNodeArray:hostCell:symbolTable:]
-[TSTSummaryModel resetForPivotingWithRowUids:columnUids:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTSummaryModel.mm
Resetting a categories summary model for pivoting
-[TSTSummaryModel resetForCategoriesWithForce:]
Resetting a pivoting summary model for categories
-[TSTSummaryModel resetForCategoriesWithForce:]_block_invoke_2
we should have a valid coordinate
v24@?0r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}8@"TSTCell"16
v16@?0@"TSTSummaryCellVendor"8
-[TSTSummaryModel p_setPivotCell:atCellUID:formulaReplacer:]
Attempting to set cell at illegal summary model cell UID:%{public}@
-[TSTSummaryModel allRichTextStorages]
TODO
-[TSTSummaryModel heightOfRowAtIndex:isDefault:]
Individual row heights can only be used for pivot tables.
-[TSTSummaryModel widthOfColumnAtIndex:isDefault:]
Individual column widths can only be used for pivot tables.
-[TSTSummaryModel setHeight:ofRowAtIndex:]
-[TSTSummaryModel setWidth:ofColumnAtIndex:]
-[TSTSummaryModel setLabelRowVisibility:atCategoryLevel:]
-[TSTSummaryModel willRemoveGroup:]
GroupBy tried to remove a summaryRow that doesn't exist in the summaryModel.
+[TSTSummaryModel categoryLevelForTableStyleArea:]
Calling categoryLevelForTableStyleArea with an invalid style area
v16@?0@"TSTCellMap"8
+[TSTCellToggleControlSpec cellSpecFromTSKFormat:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellToggleControlSpec.mm
Expected checkbox format.
-[TSTCellToggleControlSpec initWithArchive:unarchiver:]
Wrong interaction type for a checkbox.
-[TSTStrokeOrderedLayer initWithContext:majorStrokeLayer:minorStrokeLayer:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTStrokeOrderedLayer.m
majorStrokeLayer
minorStrokeLayer
-[TSTStrokeOrderedLayer appendStroke:inRange:order:]
-[TSTStrokeOrderedLayer insertStroke:inRange:order:]
-[TSTStrokeOrderedLayer invalidate]
-[TSTStrokeOrderedLayer invalidateRange:]
-[TSWPStorage(TSTAdditions) tst_selectionForImplicitlyEditingWithFormatType:percentSymbol:currencySymbol:adjustSelectionForCurrencyOrPercentSymbols:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSWPStorage+TSTAdditions.mm
currencySymbol
-[TSWPStorage(TSTAdditions) tst_tableInfo]
parentInfo of a TSWPKindTable TSWPStorage must be a TSTTableInfo
-[TSWPStorage(TSTAdditions) rangeForCellID:includingBreak:]
cell attribute not found
TSCEEvaluationContext::TSCEEvaluationContext(TSCECalculationEngine *__strong, const TSCEOwnerUID &, TSUCellCoord)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEEvaluationContext.mm
Didn't get a calc engine
void TSCEEvaluationContext::runBlockUnlessAborted(__strong dispatch_block_t)
failed to create dispatch group
static NSDate *TSCEEvaluationContext::newDateConversionOfString(NSString *__strong, TSCEEvaluationContext *)
Should not have reached this point with a NULL context - you are lucky you are getting any date at all.
TSCEValue TSCEFunction_MULTINOMIAL::evaluateWithContext(TSCEEvaluationContext &)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEMathTrigFunctions.mm
MULTINOMIAL accepts nonnegative arguments only.
v32@?0@"TSCETrackedReference"8Q16^B24
v16@?0@"TSCETrackedReference"8
TSTWPTokenAttachment *TSTLexer::nextTokenAttachment()
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTLexerAdditions.mm
No more tokenAttachments.
tokenAttachment
virtual TSCEASTElement *TSTTrackingRangeExtractor::anyReferenceNode(TSCEASTRelativeCoordRefElement *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTrackingRangeExtractor.mm
Too many coordinates in tracking range!
tracking region should not yet be initialized
+[TSTFormulaPredArgData getPredArgDataFromCell:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTFormulaPredArg.mm
predArgData
-[TSTFormulaPredArgData string]
Wrong data type for call: %d
-[TSTFormulaPredArgData date]
-[TSTFormulaPredArgData number]
-[TSTFormulaPredArgData doubleValue]
-[TSTFormulaPredArgData boolValue]
-[TSTFormulaPredArgData durationValue]
-[TSTFormulaPredArgData durationUnits]
-[TSTFormulaPredArgData duration]
-[TSTFormulaPredArg boolValue]
Wrong type accessor called on %@
-[TSTFormulaPredArg setBoolValue:]
-[TSTFormulaPredArg number]
-[TSTFormulaPredArg setNumber:]
-[TSTFormulaPredArg preserveFlags]
-[TSTFormulaPredArg setPreserveFlags:]
Must set the entire relative reference, if you are relative
-[TSTFormulaPredArg date]
-[TSTFormulaPredArg setDate:]
-[TSTFormulaPredArg string]
-[TSTFormulaPredArg setString:]
-[TSTFormulaPredArg dataList]
-[TSTFormulaPredArg relativeCellRef]
-[TSTFormulaPredArg setRelativeCellRef:]
-[TSTFormulaPredArg crossTableRef]
Need a host-cell if we aren't storing a relativeRef
-[TSTFormulaPredArg categoryRef]
-[TSTFormulaPredArg viewTractRef]
-[TSTFormulaPredArg baseCellRef]
-[TSTFormulaPredArg cellRefForHostCoord:]
-[TSTFormulaPredArg setBaseCellRef:]
-[TSTFormulaPredArg durationValue]
-[TSTFormulaPredArg setDurationValue:]
-[TSTFormulaPredArg durationUnits]
-[TSTFormulaPredArg duration]
-[TSTFormulaPredArg setDurationUnits:]
-[TSTFormulaPredArg rewriteWithContext:forArgAt:usingLinkedRef:useColumnRef:hostCellRef:rewriteBlock:]
Not expecting no result
-[TSTFormulaPredArg formulaCreatorForPredArg]
Need a host-cell for this
-[TSTFormulaPredArg formulaCreatorForPredArg0UsingLinkedRef:useColumnRef:]
Only references types are supported for predArg0, saw %d
-[TSTHiddenStatesOwner hiddenStates]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTHiddenStatesOwner.mm
We should only have one hiddenStates per table, at the moment
%@<%p>(on table %@)
 Hidden States:
  - %@
-[TSTHiddenStatesOwner registerHiddenStates:baseOwnerUID:]
HiddenStates couldn't register with calc-engine
%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X
TSCEOwnerUID TSCESubFormulaOwnerID::formulaOwnerUIDForBaseUIDAndSubownerIndex(const TSCEOwnerUID &, TSCESubFormulaOwnerIndex)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCETypes.mm
OwnerIndex %d doesn't correspond to a subFormulaOwner
TSUCellCoord TSCEMakeAbsoluteCellCoordinateFromRelativeCellCoordinate(TSUCellCoord, TSCERelativeCellCoordinate, const TSUPreserveFlags &)
Wrong sticky setting
tableUID: %@
%@ %@ couldBeIntersection: %@
%@::%@:%@
(include headers)
%@::(%@%d,_)
%@::(_,%@%d)
%@::(%@%d,%@%d)
aggType=%d
-[TSTBooleanNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTBooleanNode.mm
Unexpected object in initAsCopyOf:... expected TSTBooleanNode, got %@
true
false
-[TSTBooleanNode insertFormulaText:includeWhitespace:]
BooleanNode shouldn't have any children
-[TSTBooleanNode buildASTNodeArray:hostCell:symbolTable:]
rewriteType=%d
-[TSCEFormulaRewrite_Uids initWithUids:atIndexes:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFormulaRewriteInfo_RowColumnInfo.mm
Size mismatch for our vectors
-[TSCEFormulaRewrite_Uids containsIndex:]
The %{public}@ API requires -[%{public}@ loadIndexesForTable:] be called first.
-[TSCEFormulaRewrite_Uids rowIndexForUid:]
Warning, %{public}@ did not find the uuid: %@
-[TSCEFormulaRewrite_Uids columnIndexForUid:]
Uids: %@
Indexes: %@
-[TSCEFormulaRewriteInfo_RowColumnInfo saveToMessage:]
Cannot archive until we have called loadIndexesForTable
-[TSCEFormulaRewriteInfo_RowColumnInfo offsetForRowIndex:]
-[TSCEFormulaRewriteInfo_RowColumnInfo offsetForUpdatedRowIndex:isRemoveRows:]
This should be the same offset, then, right
-[TSCEFormulaRewriteInfo_RowColumnInfo updatedCellRefForRewriteType:originalCellRef:]
Not implemented for this rewrite type
Should not see this call, we should get either the insert or remove rewrite types
Should not see this call, its more complex than that
-[TSCEFormulaRewriteInfo_RowColumnInfo originalCellRefForRewriteType:updatedCellRef:]
-[TSCEFormulaRewriteInfo_RowColumnInfo indexIsAffected:]
-[TSCEFormulaRewriteInfo_RowColumnInfo uuidForIndex:]
-[TSCEFormulaRewriteInfo_RowColumnInfo columnIndexForUuid:]
-[TSCEFormulaRewriteInfo_RowColumnInfo rowIndexForUuid:]
-[TSCEFormulaRewriteInfo_RowColumnInfo rowOrColumnIndices]
-[TSCEFormulaRewriteInfo_RowColumnInfo tableRange]
-[TSCEFormulaRewriteInfo_RowColumnInfo affectedRangeForRemoveRows]
-[TSCEFormulaRewriteInfo_RowColumnInfo affectedRangeForMoveRows]
insertInfo
-[TSCEFormulaRewriteInfo_RowColumnInfo uuidsInRange:]
-[TSCEFormulaRewriteInfo_RowColumnInfo uuidsForIndexes:]
%@ uuids: %@
<TSKUIDStructVector: %p>
-[TSTArrayNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTArrayNode.mm
Unexpected object in initAsCopyOf:... expected TSTArrayNode, got %@
-[TSTArrayNode string]
We shouldn't call the arrayNode's string method, because it won't actually return a proper tokenized string
-[TSTArrayNode insertFormulaText:includeWhitespace:]
invalid TSTArrayNode children
expected n-1 delimiter whitespace elements
-[TSTArrayNode buildASTNodeArray:hostCell:symbolTable:]
We don't support more than UINT16_MAX rows in an array
We don't support more than UIN8_MAX columns in an array
-[TSTListNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTListNode.mm
Unexpected object in initAsCopyOf:... expected TSTListNode, got %@
<%@ %p>
-[TSTListNode string]
We shouldn't call the listNode's string method, because it won't actually return a proper tokenized string
-[TSTListNode buildASTNodeArray:hostCell:symbolTable:]
TSCEValue TSCEEvaluationStack::valueForArgumentAtIndexSingletonMode(int, TSCEFunctionSpec *__unsafe_unretained, TSCEEvaluationContext &, TSCEFunctionArgSpec *, TSCEArgumentType, int)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEEvaluationStack.mm
unsupported computed reference type found. See TSCECalcEngine::referenceWasGuaranteedCleanAtRecalcCycleStart
TSCEValue TSCEEvaluationStack::valueForArgumentAtIndexSwitch(int, TSCEFunctionSpec *__unsafe_unretained, TSCEEvaluationContext &, TSCEFunctionArgSpec *, TSCEArgumentType, TSCEArgumentAccessorMode, int)
Invalid accessorMode (%d)
TSCEValue TSCEEvaluationStack::valueForArgumentAtIndex(int, TSCEFunctionSpec *__unsafe_unretained, TSCEEvaluationContext &)
Have to set argument count before you call valueForArgumentAtIndex()
void TSCEEvaluationStack::replaceArgumentAtIndex(int, TSCEValue)
cannot replace an invalid index
size_t TSCEASTStreamIterator::popEmbeddedSizeOffset()
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTStreamIterator.mm
Mismatch in push/popEmbeddedSizeOffset
void TSCEASTStreamIterator::pushIncompleteEmbeddedNode(TSCEASTElementWithChildren *)
Why are we pushing an incomplete embeddedNode multiple times?
virtual void TSCEASTStreamIterator::rewrite()
Unexpected incomplete embedded node type found
virtual TSCEArgumentType TSCEAbstractValue::nativeType() const
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEAbstractValue.mm
Subclasses must override nativeType
virtual TSCEValue TSCEAbstractValue::value() const
virtual NSString *TSCEAbstractValue::bakedString(TSULocale *__strong) const
Shouldn't get a reference type from deepType
these cases shouldn't happen
virtual BOOL TSCEAbstractValue::isNativelyEqual(const TSCEValue &, TSCEEvaluationContext *) const
isNativelyEqual not implemented for type: %d
virtual TSCEReferenceValue TSCEAbstractValue::reference(TSCEFunctionSpec *__unsafe_unretained, int, TSCEEvaluationContext *) const
virtual size_t TSCEAbstractValue::hash() const
subclasses must override TSCEAbstractValue::hash()
virtual TSCEASTNodeArray *TSCEAbstractValue::newCorrespondingAST(TSCEEvaluationContext &, TSCEFunctionSpec *__strong, int, bool) const
subclasses must override newCorrespondingAST
-[TSTGroupNodeFormatManager reset]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTGroupNodeFormatManager.mm
_cellValue
-[TSTGroupNodeFormatManager p_recalculateMergedFormatWithGroupBy:]
Expected duration format.
-[TSTGroupNodeFormatManager mergedFormatChangedByAddingRowUID:andCellValue:groupBy:]
format
groupBy
-[TSTGroupNodeFormatManager mergedFormatChangedByRemovingRowUID:groupBy:]
CellValue:%@
Cache:%@
-[TSTGroupNodeFormatManager updateWithDocumentRoot:]
-[TSTGroupNodeFormatManager initWithArchive:]
Expected equal size arrays for the format dictionary.
-[TSTGroupNodeFormatManager encodeToArchive:forGroupBy:backwardCompat:]_block_invoke
-[TSTStringNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTStringNode.mm
Unexpected object in initAsCopyOf:... expected TSTStringNode, got %@
\U201C\U2006\U201D
\U201C%@\U201D
-[TSTStringNode insertFormulaText:includeWhitespace:]
StringNode shouldn't have any children
-[TSTStringNode buildASTNodeArray:hostCell:symbolTable:]
-[TSTDateNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTDateNode.mm
Unexpected object in initAsCopyOf:... expected TSTDateNode, got %@
-[TSTDateNode insertFormulaText:includeWhitespace:]
DateNode shouldn't have any children
-[TSTDateNode buildASTNodeArray:hostCell:symbolTable:]
DATE(%ld%@%ld%@%ld)
(DATE(%ld%@%ld%@%ld)+TIMEVALUE(TIME(%ld%@%ld%@%ld)))
<%@ %p>: '%@'%@
 (BLANK)
-[TSTReferenceNode initWithContext:calculationEngine:uidRectRef:categoryRef:hostCellRef:referenceColorHelper:suppressAutomaticNamedReferenceInvalidation:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTReferenceNode.mm
Expected uidRectRef to have same calculation engine as the one that was passed in.
-[TSTReferenceNode initWithReferenceStart:referenceEnd:suppressAutomaticNamedReferenceInvalidation:]
Creating a range reference with two references with different ownerUIDs
Creating a range reference with two references with different calculationEngines
-[TSTReferenceNode initAsCopyOf:intoContext:children:]
Unexpected object in initAsCopyOf:... expected TSTReferenceNode, got %@
unable to resurrect calcEngine in document context.
+[TSTReferenceNode p_spanningCategoryRefForViewRangeRef:groupByUid:categoryLevel:calculationEngine:]
trying to create a spanning category summary ref to more than one column
-[TSTReferenceNode p_categoryRefViewTractRef]
invalidCellTractRef
expected to create an invalid cell tract ref
-[TSTReferenceNode categoryRefTableUID]
asking a non-category ref node for its category ref table UID
-[TSTReferenceNode setHostTableUID:]
invalid tableUID
-[TSTReferenceNode referenceAsStringWithContext:]
nil calculationEngine.  Can't generate string for categoryRefNode.
nil calculationEngine.  Can't generate string for referenceNode.
-[TSTReferenceNode referenceAsStringWithContext:]_block_invoke
-[TSTReferenceNode insertFormulaText:includeWhitespace:]
ReferenceNode shouldn't have any children
-[TSTReferenceNode buildASTNodeArray:hostCell:symbolTable:]
-[TSTReferenceNode exportString]
%@ :: 
-[TSTReferenceNode excludeSummaryAndLabelRows]
Need a calcEngine set to do this
-[TSTReferenceNode loadFromArchive:unarchiver:]
Invalid TSTReferenceNode archive
TSCECellRefSet TSCEInternalCellRefSet::asCellRefSet(TSCEDependencyTracker *) const
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEInternalCellRefSet.mm
Need a dependency tracker to do this conversion
v32@?0r^S8r^v16^B24
-[TSTPencilAnnotation initWithContext:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTPencilAnnotation.mm
v16@?0@"TSDPencilAnnotationStorage"8
-[TSTPencilAnnotation loadFromArchive:unarchiver:]
A TSTPencilAnnotation must have a pencilAnnotationStorage
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTInsertRowsRewriter.mm
virtual TSCEASTElement *TSCEASTInsertRowsRewriter::uidReferenceNode(TSCEASTUidReferenceElement *)
TSCEASTInsertRowsRewriter - only move rows uses uuid-form references
virtual TSCEASTElement *TSCEASTRewriteUsingValuesRewriter::binaryInfixOperatorNode(TSCEASTBinaryElement *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTRewriteUsingValuesRewriter.mm
evaluation stack is too small
virtual TSCEASTElement *TSCEASTRewriteUsingValuesRewriter::unaryOperatorNode(TSCEASTUnaryElement *, BOOL)
virtual TSCEASTElement *TSCEASTRewriteUsingValuesRewriter::linkedRefNode(TSCEASTLinkedRefElement *)
Unsupporeted by TSCEASTRewriteUsingValuesRewriter: linkedRefNode
virtual TSCEASTElement *TSCEASTRewriteUsingValuesRewriter::uidReferenceNode(TSCEASTUidReferenceElement *)
Unsupporeted by TSCEASTRewriteUsingValuesRewriter: uidReferenceNode
virtual TSCEASTElement *TSCEASTRewriteUsingValuesRewriter::letBindNode(TSCEASTLetBindElement *)
Not expecting let usage in this rewriter
virtual TSCEASTElement *TSCEASTRewriteUsingValuesRewriter::letVariableNode(TSCEASTLetVariableElement *)
virtual TSCEASTElement *TSCEASTRewriteUsingValuesRewriter::letEndScopeNode(TSCEASTLetEndScopeElement *)
TSCEValue TSCEASTRewriteUsingValuesRewriter::evaluationResult()
an evaluation result is undefined
bool TSCEASTRewriteUsingValuesRewriter::rewriteFunctionCallByRemovingNumberToDateCoercions(uint16_t, uint32_t)
All TSCEASTRewriteUsingValuesRewriter callbacks need to adjust _evaluationStackElementOriginSizes and _copiedNodes appropriately.
-[TSTDurationNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTDurationNode.mm
Unexpected object in initAsCopyOf:... expected TSTDurationNode, got %@
-[TSTDurationNode insertFormulaText:includeWhitespace:]
DurationNode shouldn't have any children
-[TSTDurationNode buildASTNodeArray:hostCell:symbolTable:]
DURATION(%g%@%g%@%g%@%g%@%g%@%g)
-[TSTDurationNode date]
We shouldn't ask a Duration for its date.
-[TSTDurationNode format]
We shouldn't ask a Duration for its format.
sLocalizedTrue
sLocalizedTrueStrings
sLocalizedFalse
sLocalizedFalseStrings
mappings_functionLocalizationDictionary
mappings_localizedTypeStringForArgumentType
an error
an empty cell
empty
a number
a string
a Boolean
a date
a reference
a vector
a duration
anything
a number, date, or duration
localizedFunctionNameForMenuTag
Mean
Median
Mode
localizedNameForFunction:
-[TSULocale(TSCELocalization) localizedNameForFunction:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCELocalization.mm
ERROR: No localized name found for '%@', reverting to english name.
%@_TOOLTIP
localizedCategoryForFunction:
%@_ARGUMENT_%d
%@_ARGUMENT_%d_TOOLTIP
%@_ARGUMENT_%d_MODE_%d
%@_ARGUMENT_%d_MODE_%d_TOOLTIP
arguments
Localizable
strings
-[TSULocale(TSCELocalization) localizedNamesForFunctions:]
Either %@ was translated improperly, or some other function was translated to the same name.
localizedFunctionCategoryDictionary
Date and Time
Engineering
Financial
Logical and Information
Reference
Numeric
Trigonometric
Statistical
Text
localizedCategoryArray
allLocalizedFunctions
localizedLabelForAggType
No Summary
Count (All)
Average (All)
Minimum
Maximum
Category
Group Name
Label
Count
Count (Unique)
Rows
Count (Duplicates)
Count (Blank)
Average
Product
RANGE
localizedShortLabelForAggType
Count All
Average All
Min.
Max.
Unique
Count Duplicates
Count Blank
Base Value
% of Grand Total
% of Column Total
% of Row Total
% of Parent Column Total
% of Parent Row Total
Index
incbet
-[TSTArgumentPlaceholderNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTArgumentPlaceholderNode.mm
Unexpected object in initAsCopyOf:... expected TSTArgumentPlaceholderNode, got %@
-[TSTArgumentPlaceholderNode copyIntoContext:bakeModes:children:]
Unexpected mode value type
value
-[TSTArgumentPlaceholderNode detokenizedText]
expected set placeholder node to return a different node for bakedValue
-[TSTArgumentPlaceholderNode buildASTNodeArray:hostCell:symbolTable:]
ArgumentPlaceholderNode shouldn't have children
-[NSDate(TSCEAdditions) tsce_weekNumberForType:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECalculationUtilities.mm
Incorrect month number in function WEEKNUM
Incorrect type number in function WEEKNUM.
BOOL TSCEValueHasError(const TSCEValue &, int, TSCEEvaluationContext *)
actual values shouldn't have TSCEAnyArgumentType
actual values shouldn't have TSCEDurationArgumentType
actual values shouldn't have TSCENoCoerceScalarArgumentType
NSComparisonResult TSCECaseInsensitiveCompareValues(const TSCEValue &, const TSCEValue &, TSCEEvaluationContext &)
TSCEInvalidComparisonError should not be raised when both numbers are durations
TSCEInvalidComparisonError should not be raised when both numbers are currencies
Dimension here should be duration, TSCEInvalidComparisonError should not be raised if it's a currency
TSCEInvalidComparisonError should not be raised when both numbers have no units
We should never reach here unless you pass in nodes with unsupported types, leftType: %d rightType: %d
+[(){}^$|\./
.{1}
NSString *TSCEConvertWildcardStringToICURegex(NSString *__strong)
We don't want to quote a character that doesn't need to be quoted.
BOOL TSCEValueSufficesForArgumentType(const TSCEValue &, TSCEArgumentType, TSCEArgumentType, TSCEArgumentType, TSCEEvaluationContext *)
empty arguments should never be required
TSCEValue TSCEMultifactorial(TSCEFunctionSpec *__strong, TSCEValue, TSCENumberValue, TSCENumberValue, TSCEEvaluationContext *)
Multifactorial shouldn't have i less than zero.  Please file a bug.
TSCEValue TSCEEvaluateAverageIgnoringError(TSCECalculationEngine *__strong, TSUCellCoord, const TSCEOwnerUID &, TSCERangeCoordinate, const TSCEOwnerUID &)
Unregistered tableUID found when calculating average
NSDictionary<NSString *,NSMutableIndexSet *> *TSCEEvaluateUniqueIgnoringError(TSCECalculationEngine *__strong, TSUCellCoord, const TSCEOwnerUID &, TSCERangeCoordinate, const TSCEOwnerUID &)
Unregistered tableUID found when calculating unique
TSCEValue TSCEEvaluateLargeOrSmallIgnoringError(TSCECalculationEngine *__strong, TSUCellCoord, const TSCEOwnerUID &, TSCERangeCoordinate, const TSCEOwnerUID &, BOOL, double, BOOL)
Unregistered tableUID found when calculating large/small
TSCEValue TSCEEvaluateCountIgnoringError(TSCECalculationEngine *__strong, TSUCellCoord, const TSCEOwnerUID &, TSCERangeCoordinate, const TSCEOwnerUID &)
Unregistered tableUID found when calculating count
-[TSTPostfixOperatorNode insertFormulaText:includeWhitespace:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTPostfixOperatorNode.mm
PostfixOperatorNode doesn't have one argument
-[TSTPostfixOperatorNode buildASTNodeArray:hostCell:symbolTable:]
-[TSTStrokeDefaultVendor enumerateLayerAndStackForGridRowRange:options:usingBlock:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTStrokeDefaultVendor.mm
only handling normal and reverse enumeration
-[TSTStrokeDefaultVendor enumerateLayerAndStackForGridColumnRange:options:usingBlock:]
-[TSTStrokeDefaultVendor p_strokeTypeForColumn:]
expected a pivot table for footer columns
-[TSTStrokeDefaultVendor p_updateStrokeLayer:forColumnStrokeType:]
unexpected column strokeType %zu
-[TSTStrokeDefaultVendor p_updateStrokeLayer:forRowStrokeType:]
unexpected row strokeType %zu
-[TSCEDenseGrid initWithValueGrid:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEDenseGrid.mm
Warning, making a TSCEDenseGrid with a non-zero based offset: %@
-[TSTUidCoordsPerRunningCellValue getUidCoordforRunningAggregate:tupleForCoord:newUidCoord:addNewUidCoordEvenIfNotFound:inContext:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTRunningTotalContext.mm
Got a too-large insertIndex: %lu
-[TSTRunningTotalContext getPreviousUidCoordForAggIndex:fromNewUidCoord:addNewUidCoordEvenIfNotFound:]
We need to locate (or create) a tuple
365.2425
14593.9
453.59237
28.349523125
1.6605390402E-24
0.06479891
1609.344
.9144
.3048
.0254
1E-10
1.143
30,856,775,814,913,673
1609.347218694
6894.75729
133.3223684210526
1E-5
4.4482216152605
0.009806649999788
1E-7
4.184
4.1868
1.602176634E-19
1.3558179483314
1055.05585257348
745.69987158227022
735.49875
1.25
4046.872609874252
1E-20
0.092903
.0295735295625
0.473176473
0.56826125
0.946352946
3.785411784
0.005
1.13652
4.54609
1E-30
35.2391
28.3168
0.0163871
0.44704
0.3048
1.852
grain
shweight
uk_cwt
lcwt
hweight
stone
uk_ton
LTON
brton
Pica
Picapt
parsec
survey_mi
mmHg
Torr
pond
Rank
Reau
tbsp
fl oz
us_pt
uk_pt
tspm
uk_qt
uk_gal
ang3
ang^3
barrel
bushel
ft^3
in^3
ly^3
mi^3
yd^3
Nmi3
Nmi^3
Picapt3
Picapt^3
Pica3
Pica^3
regton
MTON
mi/h
m/sec
mi/mn
ft/mn
ft/s
m/hr
m/mn
admkn
uk_acre
us_acre
ang2
ang^2
ft^2
in^2
ly^2
Morgen
mi^2
Nmi2
Nmi^2
Picapt2
Picapt^2
Pica2
Pica^2
yd^2
byte
+[TSCEUnitRegistry unitForCurrencyCode:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEUnitRegistry.mm
can't look up unit for a nil currency code
+[TSCEUnitRegistry canonicalUnitForDimension:]
Unknown dimension found in canonicalUnitForDimension
+[TSCEUnitRegistry multiplierForUnit:]
Shouldn't try to get the multiplier of an invalid unit prefix
Shouldn't try to get the multiplier of an unknown unit prefix
+[TSCEUnitRegistry convert:fromUnit:toUnit:]
Invalid unit found in convert:
Can't convert across dimensions.
+[TSCEUnitRegistry dimensionForUnit:]
unit out of bounds in dimensionForUnit:.
-[TSTPrefixOperatorNode insertFormulaText:includeWhitespace:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTPrefixOperatorNode.mm
PrefixOperatorNode doesn't have one argument
-[TSTPrefixOperatorNode buildASTNodeArray:hostCell:symbolTable:]
-[TSTFunctionEndNode insertFormulaText:includeWhitespace:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTFunctionEndNode.mm
We shouldn't ever buildFormulaText: with a functionEndNode
-[TSTFunctionEndNode buildASTNodeArray:hostCell:symbolTable:]
We shouldn't ever buildASTNodeArray: with a functionEndNode
const TSCEValue TSCEValueBindingEnvironment::lookup(const TSCESymbol &)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEValueBindingEnvironment.mm
unbound symbol found: %u
void TSCEValueBindingEnvironment::endScope()
_undoSymbols is empty at endScope() - beginScope() never called?
TSCEFunctor(%u args)=%@
TSCECellValue *TSCEFunctor::evaluateWithArgs(NSArray *__strong, TSCECalculationEngine *__strong)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFunctor.mm
Wrong number of arguments for functor: %@, args: %@
-[TSTCellFormatAndValue stringValue]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellFormatAndValue.mm
Getting a non-string value as string from a TSTCellFormatAndValue.
-[TSTCellFormatAndValue richTextOrErrorTextStorageValue]
Getting a non-rich-text/non-formula-error value as rich text from a TSTCellFormatAndValue.
+[TSTCellFormatAndValue formatAndValueFromRichTextCell:updatingStorageWithBlock:]
expected rich text cell when creating format and value
-[TSTCellFormatAndValue initFromCell:useAllSpareFormats:forceNoContent:suppressApplyValue:applySpareFormatOnly:]
useAllSpareFormats and spareFormatOnly are mutually exclusive!
deprecated cell value type found
-[TSTCellFormatAndValue copyWithZone:]
-[TSTCellFormatAndValue numberOrCurrencyDecimalValue]
Getting a non-double value as double from a TSTCellFormatAndValue.
-[TSTCellFormatAndValue hasStringContentMatchingCell:]
no string content comparison implemented for value type %@
-[TSTCellFormatAndValue applyToCell:]
-[TSTCellFormatAndValue objectByRemovingPropertiesInMap:addingPropertiesInMap:updateInverseResetPropertyMap:updateInverseSetPropertyMap:]
shouldn't remove the value and format from a cell
-[TSTCellFormatAndValue initFromPropertyCommandMessage:unarchiver:]
rich text cells should have a rich text payload
-[TSTCellFormatAndValue saveToPropertyCommandMessage:archiver:]
Non-nil string resulted in NULL protobufString: '%@'
static NSDate *TSCEFinancialFunctions::prevCoupDateWithSettlement(NSDate *__strong, NSDate *__strong, int)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFinancialFunctions.mm
Setlement date should not be larger than maturity date
static NSDate *TSCEFinancialFunctions::nextCoupDateWithSettlement(NSDate *__strong, NSDate *__strong, int)
TSCEValue TSCEFunction_ACCRINT::evaluateWithContext(TSCEEvaluationContext &)
ACCRINT: should not reach here if numCoponsLeft is not 1
#%lu[%@]
%@<%p> for ownerUID %@:
Table %@ <- %@
Table %@, Uid: %@ <- %@
-[TSTPivotOwner registerWithCalcEngine:forTableModel:baseOwnerUID:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTPivotOwner.mm
_tableModel
-[TSTPivotOwner linkToCalcEngine:forTableModel:]
-[TSTPivotOwner setPivotSourceHeaderTract:]
pivot source header range expected to span all columns
Columns
Values
-[TSTPivotOwner p_setEmptyPivotTableLabels]
These labels are only for empty pivots
-[TSTPivotOwner p_setPivotHeaderCellsResettingPivotHidden:preservingStyles:]
Row group not found
Column group not found
v32@?0r^{TSKUIDStruct=QQ}8@"TSTPivotGroupingColumnOptions"16^B24
-[TSTPivotOwner p_formulaForCellCoord:runningTotalContext:]
Invalid ShowAs Type
-[TSTPivotOwner p_sortRowsInMode:sortDirection:columnIndex:level:aggregateIndex:resetLabels:]_block_invoke
Expected a valid category level for all body rows
-[TSTPivotOwner p_sortColumnsInMode:sortDirection:rowIndex:level:aggregateIndex:resetLabels:]_block_invoke
Expected a valid category level for all body columns
-[TSTPivotOwner p_sortFullTable:]
Full table sort is only appropriate for implicit sort modes.
v16@?0@"TSTPivotGroupingColumnOptionsMap"8
-[TSTPivotOwner evaluateFormulaAt:withCalcEngine:recalcOptions:]
Unexpected formulaCoord seen in TSTPivotOwner: %@
virtual NSDate *TSCECategoryRefValue::date(TSCEFunctionSpec *__unsafe_unretained, int, TSCEEvaluationContext *) const
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECategoryRefValue.mm
Error: couldn't resolve TSCECategoryRefValue
virtual NSString *TSCECategoryRefValue::rawString(TSCEFunctionSpec *__unsafe_unretained, int, TSULocale *__strong) const
virtual BOOL TSCECategoryRefValue::boolean(TSCEFunctionSpec *__unsafe_unretained, int, TSCEEvaluationContext *) const
virtual TSCERichTextStorage TSCECategoryRefValue::richTextStorage(TSCEFunctionSpec *__unsafe_unretained, int, TSCEEvaluationContext *) const
virtual TSCERichTextStorage TSCECategoryRefValue::rawRichTextStorage(TSCEFunctionSpec *__unsafe_unretained, int, TSCEEvaluationContext *) const
virtual TSCEGrid TSCECategoryRefValue::formattedGrid(TSCEFunctionSpec *__unsafe_unretained, int, TSCEEvaluationContext *, BOOL) const
virtual TSCENumberValue TSCECategoryRefValue::number() const
virtual NSDate *TSCECategoryRefValue::date() const
virtual size_t TSCEASTElement::size(TSCEASTIteratorBase *) const
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTElements.mm
Need to override size() method for derived element types.
TSCEASTAdditionNode
TSCEASTSubtractionNode
TSCEASTMultiplicationNode
TSCEASTDivisionNode
TSCEASTPowerNode
TSCEASTConcatenationNode
TSCEASTGreaterThanNode
TSCEASTGreaterThanOrEqualToNode
TSCEASTLessThanNode
TSCEASTLessThanOrEqualToNode
TSCEASTEqualToNode
TSCEASTNotEqualToNode
TSCEASTNegationNode
TSCEASTPlusSignNode
TSCEASTPercentNode
TSCEASTFunctionNode
TSCEASTFunctionLongNode
TSCEASTNumberNode
TSCEASTBooleanNode
TSCEASTStringNode
TSCEASTDateNode
TSCEASTDurationNode
TSCEASTEmptyArgumentNode
TSCEASTTokenNode
TSCEASTArrayNode
TSCEASTListNode
TSCEASTThunkNode
TSCEASTColonNode
TSCEASTReferenceErrorNode
TSCEASTUnknownFunctionNode
TSCEASTPrependWhitespaceNode
TSCEASTAppendWhitespaceNode
TSCEASTFunctionNodeWithWhitespace
TSCEASTCellReferenceNode
TSCEASTColonWithUidsNode
TSCEASTLinkedCellRefNode
TSCEASTLinkedColumnRefNode
TSCEASTLinkedRowRefNode
TSCEASTUidReferenceNode
TSCEASTLetBindNode
TSCEASTLetVarNode
TSCEASTLetEndScopeNode
TSCEASTCategoryRefNode
TSCEASTColonTractNode
TSCEASTViewTractRefNode
static NSString *TSCEASTElement::stringForTag(TSCEASTNodeTag)
%d is not a valid node tag
Tag: %@ @offset: %lu size=%lu
TSCEASTElement *TSCEASTElementWithChildren::setChildAtIndex(TSCEASTElement *, uint32_t, TSCEASTRewriter *)
Must set children in order
TSCEASTElement *TSCEASTElementWithUidTractsWithChildren::setChildAtIndex(TSCEASTElement *, uint32_t, TSCEASTRewriter *)
void TSCEASTElementWithUidTracts::setRefFlags(TSCEASTRefFlags, TSCEASTIteratorBase *)
Don't call setRefFlags() on this type until it supports them
TSCERangeRef TSCEASTColonElement::rangeReference(TSCEASTIteratorBase *, TSUPreserveFlags &, const TSUCellCoord &)
A calculationEngine needs to be set on this rewriter to use TSCEASTColonElement::rangeReference() method.
void TSCEASTColonTractElement::setTableUID(const TSCEOwnerUID &, TSCEASTIteratorBase *)
TableUID must already been set once to use this API.  Otherwise, this is changing the element's size.
virtual size_t TSCEASTFunctionElement::size(TSCEASTIteratorBase *) const
Unknown tag for TSCEASTFunctionElement: %d
void TSCEASTFunctionElement::setNumArgs(uint32_t, TSCEASTIteratorBase *)
Unhandled function tag: %d
static size_t TSCEASTWhitespaceElement::appendWhitespaceElement(TSCEASTNodeArray *, TSCEASTNodeTag, NSString *__strong)
Not a whitespace tag
static TSCECellTractRef *TSCEASTRelativeCoordRefElement::tractRefUsingUuids(TSCEASTIteratorBase *, const TSCEOwnerUID &, const TSKUIDStructVector &, const TSKUIDStructVector &, TSCEMutableUIDSet *__autoreleasing &, TSCEMutableUIDSet *__autoreleasing &, BOOL)
How can we be spanning in both rows and columns.
static bool TSCEASTRelativeCoordRefElement::expandTractRefUsingUuids(TSCEASTIteratorBase *, const TSCEOwnerUID &, TSCECellTractRef *__strong, const TSKUIDStructVector &, TSKUIDStructVector &, BOOL)
Don't use this method for non-existing ranges, use tractRefUsingUuids() instead.
static bool TSCEASTRelativeCoordRefElement::expandRangeCoordinateUsingUuids(TSCEASTIteratorBase *, const TSCEOwnerUID &, TSCERangeCoordinate &, const TSKUIDStructVector &, TSKUIDStructVector &, BOOL)
Don't use this method for non-existing ranges, use rangeCoordinateUsingUuids() instead.
void TSCEASTRelativeCoordRefElement::setTableUID(const TSCEOwnerUID &, TSCEASTIteratorBase *)
Cannot use setTableUID on a tag that isn't already cross-table
void TSCEASTRelativeCoordRefElement::setRelativeCoord(const TSCERelativeCellCoordinate &, TSCEASTIteratorBase *)
Can't setRelativeCoord on type: %d
Can't use setRelativeCoord to switch from spanning (%d,%d) to not spanning (%d,%d)
TSCECrossTableReference TSCEASTRelativeCoordRefElement::crossTableRef(TSCEASTIteratorBase *) const
Incorrect tag for use with crossTableRef: %d
virtual TSCECellRef TSCEASTRelativeCoordRefElement::absoluteCellRef(TSCEASTIteratorBase *, const TSUCellCoord &) const
Invalid tag: %d
void TSCEASTUidReferenceElement::setTableUID(const TSCEOwnerUID &, TSCEASTIteratorBase *)
void TSCEASTViewTractRefElement::setTableUID(const TSCEOwnerUID &, TSCEASTIteratorBase *)
void TSCEASTNodeArray::write(const T &) [T = TSCEBaseUnit]
void TSCEASTNodeArray::write(const T &) [T = unsigned char]
void TSCEASTNodeArray::write(const T &) [T = TSUDurationStyle]
void TSCEASTNodeArray::write(const T &) [T = bool]
void TSCEASTNodeArray::write(const T &) [T = short]
virtual TSCEASTNodeArray *TSCENilValue::newCorrespondingAST(TSCEEvaluationContext &, TSCEFunctionSpec *__strong, int, bool) const
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCENilValue.mm
nil values are unexpected on the evaluation stack
Malformed Reference Node - Unexpected Path Delimiter
Malformed Reference Node
TSCEASTNodeArray *processReference(TSCEParser *, TSCEASTNode *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECAST.mm
Wrong parser state?
Missing sibling in function call
Malformed Reference Node - Function with trailing crap
Whitespace missing between leaves.
Too many nodes inside a reference node
id TSCEASTLeafGetString(TSCEASTLeaf *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECAST.h
Can't have a string type leaf with type function.
TSCEASTNodeArray *TSCEASTLeafGetFunction(TSCEASTLeaf *)
Can't have a non function type leaf return a function.
TSCEOwnerUID formulaOwnerUIDFromNativeIDString(NSString *__strong, TSCECalculationEngine *__strong, TSCEFormulaSyntaxType)
ResolverId_
We should have successfully registered the parsedOwnerID: %@
Invalid Reference
void gatherNativeReferenceInformation(TSCERegionAllocator *__strong, TSCEASTLeaf *, TSCEOwnerUID, TSCERangeCoordinate *, TSUPreserveFlagsEnum *, NSString *__autoreleasing *, NSString *__autoreleasing *, TSCEASTLeaf **)
We shouldn't have quoted labels on import
-[TSTHiddenStates copyFromHiddenStates:forRange:withContext:isWholeTableCopy:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTHiddenStates.mm
Failed to hide row during copy.
Failed to hide column during copy.
-[TSTStrokeSidecarIterator initWithStrokeSidecar:region:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTStrokeSidecarIterator.mm
-[TSTStrokeSidecarIterator updateCellData:]
invalid cellID in cellData
cellID %@ should be before cursor cellID %@
TSCEASTElement *TSCEASTElementIterator::nextElement()
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTElementIterator.mm
virtual void TSCEASTElementIterator::rewrite()
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTElementIterator.h
No rewrite method implemented for this class - use nextElement() API, or derive from a different AST iterator base class
-[TSTGroupBy didCreateGroup:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTGroupBy.mm
_deferredGroupByChangeNotifications
-[TSTGroupBy willRemoveGroup:]
-[TSTGroupBy didRemoveGroup:]
-[TSTGroupBy didAddRowUID:toGroup:]
-[TSTGroupBy didRemoveRowUID:fromGroup:]
-[TSTGroupBy startOfGroupingChangesBatch]
-[TSTGroupBy endOfGroupingChangesBatch]
-[TSTGroupBy didChangeGroupByStructure]
v16@?0@"TSTGroupNode"8
-[TSTGroupBy encodeToArchive:archiver:backwardCompatOptions:]
Caller should already have tested we think we can fit in a single message.
Wasn't expecting this not set
-[TSTGroupBy updateWithDocumentRoot:]
-[TSTGroupBy changeForSettingGroupingColumnList:]
New grouping column list is nil
-[TSTGroupBy mapGroupUidsForChange:]
wrong groupByUid
-[TSTGroupBy _addAggregates:atLevel:]
-[TSTGroupBy _removeAggregates:]
-[TSTGroupBy runChange:withAggregates:]
Uh, we were expecting this to be us
-[TSTGroupBy usesPrePivotAggregateTypesOnly]
Should never see TSCEAggType_Indirect on a columnAggregate
-[TSTGroupBy setAggregateType:forColumnUID:atGroupLevel:]
aggType of (%d) is not a valid aggregate type for an entire column
-[TSTGroupBy findGroupNodeForValue:atLevel:createIfMissing:]
Was expecting to have created a groupNode for this groupValue: %@
-[TSTGroupBy beginDeferringRebuildFormulas]
overflow in beginDeferringRebuildFormulas
-[TSTGroupBy endDeferringRebuildFormulas]
endDeferringRebuildFormulas called without matching beginDeferringRebuildFormulas - avoided underflow
-[TSTGroupBy deferGroupByChangeNotifications]
overflow in deferGroupByChangeNotifications
-[TSTGroupBy resumeGroupByChangeNotifications]
resumeGroupByChangeNotifications called without matching deferGroupByChangeNotifications - avoided underflow
-[TSTGroupBy resetGroupings]
Can't resetGroupings with no calcEngine
-[TSTGroupBy insertRowUids:]
Column missing from table model when grouping
-[TSTGroupBy createAggregatorsIfMissingAndAssert:]
No TSTAggregator found for column %@
Couldn't create an aggreator for column: %@
-[TSTGroupBy isValidCategoryRef:]
%@: %@
<Relative Ancestor>
-[TSTGroupBy captureCategoryRefsFromIterator:atLevel:asSpanning:]_block_invoke
formula
-[TSTGroupBy captureCategoryLabelRefsForViewRegion:atLevel:asSpanning:forRows:]_block_invoke
No level for agg function labels!
-[TSTGroupBy prettyStringForCategoryRef:forHostCellRef:namingContext:]
-[TSTGroupBy rowUIDForLookupKey:]
Warning, rowUidLookupList is empty, we're not going to find anything.
blank
(error)
+[TSTGroupBy validateNumberOfGroupsForGroupingColumnList:sourceTableModel:sourceBodyTract:limit:groupNodeCount:]
Column missing from table model when validating
TSCEDependencyTracker::~TSCEDependencyTracker()
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEDependencyTracker.mm
dirty cell batching must not be left on when a command finishes!
TSCEOwnerRegistrationCat
TSUError TSCEDependencyTracker::registerOwner(TSCEInternalFormulaOwnerID, __strong id<TSCEFormulaOwning>, TSCESubFormulaOwnerIndex)
registerOwner() doesn't accept class: %@ (not id<TSCEFormulaOwning>)
void TSCEDependencyTracker::resetAllExternalFormulasReferringToOwnerUIDs(const TSCEOwnerUIDVector &, __strong id<TSCEFormulaReplacing>)
Need upgradeMinion for resetAllExternalFormulasReferringToOwnerUIDs
void TSCEDependencyTracker::dgl_replaceCellWithFormula(TSCEInternalFormulaOwnerID, TSUCellCoord, TSCEReferenceSetWrapper *__strong, TSCEReplaceFormulaOptions)
Attempting to call dgl_replaceCellWithFormula with an invalid coord: %@
void TSCEDependencyTracker::dgl_replaceCellWithFormula(TSCEInternalFormulaOwnerID, TSUCellCoord, TSCEReferenceSetWrapper *__strong, TSCEReplaceFormulaOptions)_block_invoke
nonspanning range %{public}@ found in a spanning reference
v24@?0r^{TSCESpanningRangeRef={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}C}8^B16
v24@?0r^{TSKUIDStruct=QQ}8^B16
v32@?0r^{TSKUIDStruct=QQ}8r^{TSKUIDStruct=QQ}16^B24
v24@?0@"TSCECategoryRef"8^B16
unimplemented reference type found: %d
failure adding a formula
void TSCEDependencyTracker::replaceCellWithFormula(const TSCEOwnerUID &, TSUCellCoord, TSCEReferenceSetWrapper *__strong, TSCEReplaceFormulaOptions)
Not expecting insane, or spanning coordinates here: (%lu,%lu)
void TSCEDependencyTracker::dgl_replaceRemoteDataKeysInterestedInForCell(const TSCECellRef &, TSCERemoteDataSpecifierSet *__strong)
Attempted to replace remote data key interest in a cell whose owner isn't registered.
void TSCEDependencyTracker::endSuppressingWillModifyCalls()
not suppressing willModify calls, so cannot end suppressing them
BOOL TSCEDependencyTracker::endBatchingGroupCellDirtying()
cannot end group cell dirtying batching if it is not already on.
void TSCEDependencyTracker::encodeToArchive(TSCE::DependencyTrackerArchive &, BOOL, BOOL, TSPArchiver *__strong)
failed to get an object to archive for a formula owner that needs registration. Registration failure at unarchive time is likely.
TSCEDependencyTracker::TSCEDependencyTracker(const TSCE::DependencyTrackerArchive &, TSPUnarchiver *__strong, TSCECalculationEngine *__strong)_block_invoke
Unarchiving formulaOwnerDependencies: Want to replace owner %@ (%lu) with %@ (%lu) - highly unexpected
v16@?0@"TSPObject<TSCECalculationEngineRegistration>"8
void TSCEDependencyTracker::upgradeToSubOwnerUIDForOwners(TSTOwnerUidMapper *__strong)
Not expecting tableUID to be changing
virtual TSCEASTElement *TSCEASTNodeFormulaStringIterator::binaryInfixOperatorNode(TSCEASTBinaryElement *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTNodeFormulaStringIterator.mm
virtual TSCEASTElement *TSCEASTNodeFormulaStringIterator::unaryOperatorNode(TSCEASTUnaryElement *, BOOL)
virtual TSCEASTElement *TSCEASTNodeFormulaStringIterator::colonNode(TSCEASTColonElement *)
%@%@%@%@%@%@
%@%@%@%@%@
%.17G
DATE(%li,%li,%li)
(DATE(%li,%li,%li)+TIMEVALUE(TIME(%li,%li,%li)))
DURATION(%@,%@,%@,%@,%@,%@)
%C%C
virtual TSCEASTElement *TSCEASTNodeFormulaStringIterator::uidReferenceNode(TSCEASTUidReferenceElement *)
Shouldn't see uid-form references when making Sage formula strings.
virtual TSCEASTElement *TSCEASTNodeFormulaStringIterator::viewTractRefNode(TSCEASTViewTractRefElement *)
Shouldn't see view cellRef references when making Sage formula strings.
NSString *TSCEASTNodeFormulaStringIterator::formulaString()
Unable to properly create a formula string. Possibly a bad ASTNodeArray?
virtual TSCEASTElement *TSCEASTNodeFormulaStringIterator::letBindNode(TSCEASTLetBindElement *)
Let nodes should have been removed prior to Sage export
virtual TSCEASTElement *TSCEASTNodeFormulaStringIterator::letVariableNode(TSCEASTLetVariableElement *)
Variable nodes should have been removed prior to Sage export
void TSCEASTNodeFormulaStringIterator::processOperatorNode(NSString *__strong)
void TSCEASTNodeFormulaStringIterator::processPostfixOperatorNode(NSString *__strong)
void TSCEASTNodeFormulaStringIterator::processPrefixOperatorNode(NSString *__strong)
void TSCEASTNodeFormulaStringIterator::processFunctionNode(uint32_t, TSCEFunctionSpec *__strong, NSString *__strong, NSString *__strong)
Have to either specify a function spec or an unknown function name.
%s error
unknown
domain
singularity
overflow
underflow
total loss of precision
partial loss of precision
TSTLookupKeyCoord::TSTLookupKeyCoord(TSCEUidLookupKey, TSCEUidLookupKey)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellUIDLookupList.mm
Can't support a column key larger than %lu
Can't support a row key larger than %lu
TSTCellUIDLookupList::TSTCellUIDLookupList(const TSTCellUIDLookupList &, TSTTableInfo *__strong, TSTPruneBehavior, BOOL (^__strong)(const TSTCellUID &, NSUInteger))
Oh in what case do we need to prune away base cells?
Allowing both summary cells and wildcards makes little sense
Allowing both label cells and wildcards makes little sense
fdtr
fdtri
Remote Data Store
Remote Data Store Update
-[TSCERemoteDataStore dealloc]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCERemoteDataStore.mm
Failed to unregister store before dealloc
-[TSCERemoteDataStore registerWithCoordinator]_block_invoke
Store is already registered!
-[TSCERemoteDataStore unregisterWithCoordinator]_block_invoke
Store is already unregistered!
-[TSCERemoteDataStore valueForRemoteData:]
Cold specifiers must have dates!
-[TSCERemoteDataStore cachedQuoteForSymbol:]
We're about to capture the coordinator's queue lock. We should NOT have the write lock at this time.
B24@?0@"NSString"8@"NSDictionary"16
-[TSCERemoteDataStore remoteDataDidUpdateValues:quotes:]
Shouldn't get an empty update!
-[TSCERemoteDataStore p_tsceValueFromTsceCellValue:]
Attempted to create a TSCEvalue from an unsupported TSCECellValue of class: %@
v24@?0@"TSCERemoteDataSpecifier"8^B16
-[TSCERemoteDataStore updateWithRemoteDataMap:quotes:syncKey:]
Should never get a docserver update for an unshared file!
v24@?0@"NSString"8^B16
-[TSTCellBorder applyToCell:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellBorder.mm
currentCellBorder
-[TSTCellBorder objectByRemovingPropertiesInMap:addingPropertiesInMap:updateInverseResetPropertyMap:updateInverseSetPropertyMap:]
shouldn't remove the cell border from a cell
-[TSTStrokeLayerAbstractStack p_strokeLayerVector]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTStrokeLayerStack.mm
-[TSTStrokeLayerAbstractStack count]
-[TSTStrokeLayerAbstractStack enumerateStrokesAndCapsInRange:usingBlock:]_block_invoke
should never see portal strokes here
-[TSTStrokeLayerAbstractStack enumerateStrokesAndCapsInRange:usingBlock:]
-[TSTStrokeLayerStack insertClearedStrokeAtRange:]
You can't add non-default strokes to a DefaultsOnly TSTStrokeLayerStack.
-[TSTStrokeLayerStack insertDynamicStroke:strokeOrder:atRange:]
-[TSTStrokeLayerStack insertSpillStroke:atRange:]
You can't add non-default strokes to a Defaults Only TSTStrokeLayerStack.
Fatal Assertion failure: %{public}s %{public}s:%d You can't add non-default strokes to a DefaultsOnly TSTStrokeLayerStack.
-[TSTStrokeLayerStack replaceCustomStrokeLayerWith:]
-[TSTStrokeLayerMergedStack lockForWrite]
-[TSTStrokeExporter p_strokeExportCacheForColumnBefore:columnAfter:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTStrokeExporter.mm
looking for two visible columns around the gridline
-[TSTStrokeExporter p_strokeExportCacheForRowAbove:rowBelow:]
looking for two visible rows around the gridline
TSCESymbol TSCESymbolTable::addSymbol(__strong TSCEIdentifier)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCESymbolTable.mm
can't add a symbol if not in any scope
<TSCESymbolTable %p>: 
%@: %u
void TSCESymbolTable::endScope()
Calling endScope() without beginScope()
-[TSTHiddenStateExtent setupAfterUnarchive]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTHiddenStateExtent.mm
-[TSTHiddenStateExtent p_addHiddenIndex:viewIndex:forAction:]
Not allowing user-hidden as view only
Not allowing pivot-hidden for base indexes.
-[TSTHiddenStateExtent hideAtUid:forAction:]
Can't show/hide at a uuid without a TSTTableTranslator to translate to an index
-[TSTHiddenStateExtent hideAtUid:forIndex:forViewIndex:forAction:]
Pivot Hiding not allowed on base rows or columns.
-[TSTHiddenStateExtent showAtUid:forAction:]
-[TSTHiddenStateExtent p_summaryFilteredIndexes]
translator
-[TSTHiddenStateExtent p_summaryPivotHiddenIndexes]
-[TSTHiddenStateExtent hideAtViewIndex:forAction:]
Can't show/hide at an index without a TSTTableTranslator to translate to uuid
-[TSTHiddenStateExtent showAtViewIndex:forAction:]
-[TSTHiddenStateExtent hideAtBaseIndex:forAction:]
-[TSTHiddenStateExtent showAtBaseIndex:forAction:]
-[TSTHiddenStateExtent clearAllFiltered]
Expected counts to match.
-[TSTHiddenStateExtent hidingActionForViewIndex:]
-[TSTHiddenStateExtent hidingActionForBaseIndex:]
-[TSTHiddenStateExtent indexOfVisibleAfterIndex:]
Can't use this method without a TSTTableTranslator to provide tableSize
-[TSTHiddenStateExtent indexOfVisibleAfterAndIncludingIndex:]
-[TSTHiddenStateExtent p_registerAllFormulasReturningCoords:]
Expecting at most one filter rule on a pivotTable
Only support PivotSourceFiltered filter for pivotTable
-[TSTHiddenStateExtent p_calculateTopOrBottomThresholdWithCalcEngine:formulaCoord:isTop:keyScale:]
Unexpected key scale found: %d
-[TSTHiddenStateExtent p_createThresholdCellValue:locale:]
Unexpected threshold value type found: %d
-[TSTHiddenStateExtent p_calculateUniqueDistinctIndexWithCalcEngine:formulaCoord:tableModel:rule:]
uniqueKeyToRowIndexes
-[TSTHiddenStateExtent evaluateFormulaAt:withCalcEngine:recalcOptions:]
should have nil _rewrittenFilterSet
Unexpected predicate type found when calculating threshold: %d
Only grandTotal predicates are supported for view indexes, not predType %d
Only expect this on pivot tables, atm.
-[TSTHiddenStateExtent setFilterSet:]
filterset should be in geometric form
@"TSCEFormulaObject"16@?0@"TSCEFormulaObject"8
v24@?0@"TSTEphemeralFilter"8^B16
Fatal Assertion failure: %{public}s %{public}s:%d Corrupt cell memory. Crashing!
UInt16 TSTCellStorageSizePreBNC(TSTCellStoragePreBNC *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellStorage_Deprecated.mm
Corrupt cell memory. Crashing!
BOOL TSTCellStorageVersionCheckPreBNC(TSTCellStoragePreBNC *)
Can't parse cell storage header version %d as PreBNC!
void TSTV1CellStorageToCell(TSTV1CellStorage *, TSTCell_PreBNC *__strong)
wrong version of the storage used here
Failed to process all storage elements in TSTV1CellStorageToCell! Starting flags:%u Final flags:%u
void TSTV3CellStorageToCell(TSTV3CellStorage *, TSTCell_PreBNC *__strong)
Failed to process all storage elements in TSTV3CellStorageToCell! Starting flags:%u Final flags:%u Starting format flags:%u Final format flags:%u
void TSTCellStorageToCell_PreBNC(TSTCellStoragePreBNC *, TSTCell_PreBNC *__strong)
Failed to process all storage elements in TSTCellStorageToCell! Starting flags:%u Final flags:%u Starting format flags:%u Final format flags:%u
void p_TSTCellToCellStoragePreBNC(TSTCell *__strong, TSTCellStoragePreBNC *, TSTNineKeyStructPreBNC *)
Failed to process all storage elements in TSTCellToCellStorage! Starting flags:%u Final flags:%u Starting format flags:%u Final format flags:%u
TSTMergeOwnerDetailedLogCat
-[TSTMergeOwner initWithTableModel:ownerUID:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTMergeOwner.mm
valid ownerUID is required
-[TSTMergeOwner mergeIndexesForRange:]
The tableModel must be set on the mergeOwner before this API can be used.
-[TSTMergeOwner isValidMergeRange:]
-[TSTMergeOwner insertBaseMergeRange:]
-[TSTMergeOwner removeBaseMergeRange:]
Unexpectedly not just removing one range
-[TSTMergeOwner performActionReturningInverse:formulaReplacer:]
Invalid merge action
-[TSTMergeOwner shrinkReturningInverseForBaseCellRegion:formulaReplacer:]
-[TSTMergeOwner p_growRangeFrom:toDesired:]
-[TSTMergeOwner p_growReturningInverseForAction:formulaReplacer:]
-[TSTMergeOwner rewriteMergesForRemovedRange:uids:isRows:]
-[TSTMergeOwner rewriteMergesForInsertedRange:uids:isRows:]
<%@: %p>
+[TSTCellSpec interactionTypeForShimControlFormatType:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellSpec.mm
Unconvertible format type.
+[TSTCellSpec shimControlFormatTypeForInteractionType:]
Unconvertible interaction type.
Stepper
Slider
Star Rating
Pop-Up Menu
Checkbox
TSTCellInteractionTypeValueEditing
TSTCellInteractionTypeFormulaEditing
TSTCellInteractionTypeStock
TSTCellInteractionTypeStepper
TSTCellInteractionTypeRating
TSTCellInteractionTypePopup
TSTCellInteractionTypeToggle
TSTCellInteractionTypeCategorySummary
-[TSTSortRuleReferenceTracker p_columnForTrackedReference:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTSortRuleReferenceTracker.mm
Ranges should be one column!
-[TSTSortRuleReferenceTracker updateForSortRules:]
Couldn't track reference!
-[TSTSortRuleReferenceTracker setOwnerUID:]
You should have called setBaseTableUID: instead (it sets both base and subOwner UIDs
void TSCEWholeOwnerDependencies::readFromArchive(const TSCE::WholeOwnerDependenciesArchive &)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEWholeOwnerDependencies.mm
NULL whole owner dependencies
void TSCEWholeOwnerDependencies::unpackAfterUnarchive()_block_invoke
bool TSCEWholeOwnerDependencies::addOwnerReference(const TSCEInternalCellReference &)
TSTLayoutEngineDidChangeEmptyFilteredState
cell id to wp column $
dup $
temp wp column $
layout engine concurrent queue
table fonts and metric cache
<%@:%p "%@" range:%@ dynamic_mode:%@ >
TSTCellRange TSTLayoutEngineGetRangeForHint(TSTLayoutEngine *__strong, TSTLayoutHint *__strong)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTLayoutEngine.mm
layoutHint
-[TSTLayoutEngine numberOfRows]
Size invariants violated by dynamic add/remove
-[TSTLayoutEngine numberOfColumns]
B32@?0{TSUCellRect={TSUCellCoord=ISBB}{?=II}}8^B24
v36@?0I8@"TSTStrokeLayer"12@"TSTStrokeLayerStack"20^B28
d8@?0
B24@?0@8^B16
v32@?0@"TSTChangeDescriptor"8Q16^B24
v76@?0{TSUCellRect={TSUCellCoord=ISBB}{?=II}}8d24{UIEdgeInsets=dddd}32B64^B68
-[TSTLayoutEngine p_validateFittingInfoWithCellRangeWorker:widthHeightCollection:containsMerges:validationBundle:]_block_invoke
this layout pass should be only merge cells
v40@?0@"TSWPCharacterStyle"8{_NSRange=QQ}16^B32
-[TSTLayoutEngine p_containsGradientThatFillsContainerInStyle:]
style must be character or paragraph.
@"TSTWidthHeightCollection"24@?0{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}8
@32@?0@"<TSTCellIteratorData>"8@"TSTWidthHeightCollection"16@24
-[TSTLayoutEngine measureWithLayoutState:]
stringContents
v24@?0@"TSTCellStateForLayout"8^B16
#REF!:#REF!
-[TSTLayoutHint copyForArchiving]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTLayoutHint.mm
copy
-[TSTLayoutHint overlapsWithSelectionPath:]
selectionPath
B16@?0@"TSDDrawableSelection"8
-[TSTLayoutHint overlapsWithSelectionPath:]_block_invoke_2
Invalid cell selection index %lu for %@
B16@?0@"TSTCellSelection"8
ID: %@ 
Range: %@ 
-[TSWPParagraphStyle(CellDiffAdditions) objectByRemovingPropertiesInMap:addingPropertiesInMap:updateInverseResetPropertyMap:updateInverseSetPropertyMap:optionalConcurrentStylesheet:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSWPParagraphStyle+CellDiffAdditions.m
Can't specify both a text style and a text style change at the same time.
Stylesheet should not be nil. Attempting repair.
No usable style or stylesheet to vary against!
v32@?0i8C12@16^B24
-[TSTTablePartitioner initWithInfo:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTablePartitioner.m
Incorrect info class in the table partitioner!
-[TSTTablePartitioner measureCellRangeForNextPartitionOfSize:previousHint:horizontally:]
Partitioner can't continue from an invalid range.
-[TSTTablePartitioner calculateCellRangeForNextPartition:nextPartitionRange:additionalHeightForCaption:availableSizeRemaining:previousHint:]
Partitioner measured an invalid range.
-[TSTTablePartitioner nextHintForSize:parentLayout:previousHint:horizontally:outFinished:]
previousHint must be nil, or of type TSTLayoutHint.
Hint is for the wrong table info.
-[TSTTablePartitioner p_didFinishPartitioningHint:horizontally:]
Horizontal partitioning went beyond the table bounds!
Vertical partitioning went beyond the table bounds!
-[TSTTablePartitioner partitioningPassForFirstPartitionSize:]
partitioningPassForFirstPartitionSize: Invalid partition size
(%@,%@)
chdtrc
chdtri
-[TSCEFormulaOwnerDependencies unpackAfterUnarchive]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFormulaOwnerDependencies.mm
_cellDependencies->dependencyTracker()
-[TSCEFormulaOwnerDependencies saveToArchiver:]
-[TSCEFormulaOwnerDependencies resetOwnerUIDForUpgrade:forBaseOwner:ownerKind:]
OwnerIndex must be set to use this method
Tables cannot use this method
Charts cannot use this method
Fatal Assertion failure: %{public}s %{public}s:%d Datalist segment range start out of bounds on set
-[TSTTableDataListSegment setKeyRange:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableDataListSegment.mm
Datalist segment range start out of bounds on set
Fatal Assertion failure: %{public}s %{public}s:%d Datalist segment range length out of bounds on set!
Datalist segment range length out of bounds on set!
Fatal Assertion failure: %{public}s %{public}s:%d Bad key during split enumeration!
-[TSTTableDataListSegment split]_block_invoke
Bad key during split enumeration!
Fatal Assertion failure: %{public}s %{public}s:%d New segment is empty during split!
-[TSTTableDataListSegment split]
New segment is empty during split!
Fatal Assertion failure: %{public}s %{public}s:%d Datalist segment changed during split!
Datalist segment changed during split!
Fatal Assertion failure: %{public}s %{public}s:%d Keys overlap during split!
Keys overlap during split!
Fatal Assertion failure: %{public}s %{public}s:%d Segment ranges are discontiguous!
Segment ranges are discontiguous!
Fatal Assertion failure: %{public}s %{public}s:%d Existing datalist segment range start out of bounds on split!
Existing datalist segment range start out of bounds on split!
Fatal Assertion failure: %{public}s %{public}s:%d Existing datalist segment range length out of bounds on split!
Existing datalist segment range length out of bounds on split!
Fatal Assertion failure: %{public}s %{public}s:%d New datalist segment range start out of bounds on split!
New datalist segment range start out of bounds on split!
Fatal Assertion failure: %{public}s %{public}s:%d New datalist segment range length out of bounds on split!
New datalist segment range length out of bounds on split!
Fatal Assertion failure: %{public}s %{public}s:%d Got an object with a bad key!
-[TSTTableDataListSegment objectAtIndexedSubscript:]
Got an object with a bad key!
Tables/DataList/Segment
v16@?0@"TSTTableDataObject"8
-[TSTTableDataListSegment saveToArchiver:]
Datalist segment range out of bounds on archive!
-[TSTTableDataListSegment loadObjectsFromDataListArchive:unarchiver:]
Need to set up a segment before doing an upgrade-type load of it!
-[TSTConcurrentCellIterator initWithTableInfo:tableModel:region:forcingRegion:clampingRect:flags:searchFlags:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTConcurrentCellIterator.mm
XOR expectation on getting a tableInfo or tableModel.
-[TSTConcurrentCellIterator enumerateModelConcurrentlyUsingChunkBeginBlock:concurrentBlock:finalBlock:]
You must initialize the iterator with a TSTTableModel to use this enumeration method.
@24@?0{TSUCellRect={TSUCellCoord=ISBB}{?=II}}8
-[TSTConcurrentCellIterator enumerateConcurrentlyUsingChunkBeginBlock:perDispatchThreadBlock:concurrentBlock:finalBlock:]
You may not initialize this iterator with a TSTTableModel to use this enumeration method.
v40@?0{TSUCellRect={TSUCellCoord=ISBB}{?=II}}8@24Q32
-[TSTMergeAction verify]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTMergeAction.mm
%@ has %lu covering ranges and %lu formulas with %lu indexes
Invalid action
Insert action
Remove action
Shrink action
Grow action
-[TSTCellUIDIterator p_nextCellRefIdWithUIDIndexList:UIDs:index:remainDup:lastDiffPos:recentResults:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellUIDList.mm
Unexpected back reference value.
Unexpected ID reference value.
TSCEValue::TSCEValue(const TSCENumberValue &)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEValue.mm
nil TSCENumberValue
TSCEValue::TSCEValue(const TSCEStringValue &)
nil TSCEStringValue
TSCEValue::TSCEValue(const TSCEDateValue &)
nil TSCEDateValue
TSCEValue::TSCEValue(const TSCEGrid &)
nil TSCEGrid
TSCEValue::TSCEValue(const TSCEErrorValue &)
nil TSCEErrorValue
TSCEValue::TSCEValue(const TSCEThunkValue &)
nil TSCEThunkValue
TSCEValue::TSCEValue(const TSCEValueGridValue &)
nil TSCEValueGridValue
TSCEArgumentType TSCEValue::nativeType() const
Undefined type. Returning nonsensical value.
TSCEArgumentType TSCEValue::deepType(TSCEEvaluationContext *) const
TSCENumberValue TSCEValue::number(TSCEFunctionSpec *__unsafe_unretained, int, TSCEEvaluationContext *) const
NSDate *TSCEValue::date(TSCEFunctionSpec *__unsafe_unretained, int, TSCEEvaluationContext *) const
NSString *TSCEValue::string(TSCEFunctionSpec *__unsafe_unretained, int, TSULocale *__strong) const
TSCERichTextStorage TSCEValue::richTextStorage(TSCEFunctionSpec *__unsafe_unretained, int, TSCEEvaluationContext *) const
NSString *TSCEValue::rawString(TSCEFunctionSpec *__unsafe_unretained, int, TSULocale *__strong) const
TSCERichTextStorage TSCEValue::rawRichTextStorage(TSCEFunctionSpec *__unsafe_unretained, int, TSCEEvaluationContext *) const
BOOL TSCEValue::boolean(TSCEFunctionSpec *__unsafe_unretained, int, TSCEEvaluationContext *) const
TSCEGrid TSCEValue::formattedGrid(TSCEFunctionSpec *__unsafe_unretained, int, TSCEEvaluationContext *, BOOL) const
TSCEReferenceValue TSCEValue::reference(TSCEFunctionSpec *__unsafe_unretained, int, TSCEEvaluationContext *) const
TSCEError *TSCEValue::error() const
TSCECategoryRef *TSCEValue::categoryRef() const
This TSCEValue was not of type TSCEValueTypeCategoryRef, its type %d
TSCEFormat TSCEValue::format() const
BOOL TSCEValue::isNativelyEqual(const TSCEValue &, TSCEEvaluationContext *) const
NSString *TSCEValue::bakedString(TSULocale *__strong) const
TSCEASTNodeArray *TSCEValue::newCorrespondingAST(TSCEEvaluationContext &, TSCEFunctionSpec *__strong, int, bool) const
TSCEValue TSCEValue::valueBySettingFormat(const TSCEFormat &)
const TSCEASTNodeArray *TSCEValue::unwrapThunk() const
can't call unwrapThunk() on a non-thunk!
-[TSCEBooleanCellValue compareToCellValue:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEBooleanCellValue.mm
-[TSCERemoteDataSpecifier initWithFunctionIndex:symbol:attribute:year:month:day:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCERemoteDataSpecifier.mm
How does a hot specifier have a date?
How does a cold specifier not have a date?
-[TSCERemoteDataSpecifier encodeToArchive:]
 [%04zd/%02zd/%02zd]
<%@ %@ %@%@>
-[TSTTableTileGroup init]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableTileGroup.mm
-[TSTTableTileGroup _tileForLazyReference:]
Fatal Assertion failure: %{public}s %{public}s:%d Failed to load a lazy table tile in TSTTableTileGroup: %@ with error: errorClass=%{public}@, domain=%{public}@, code=%zd, %{public}@hints=%{public}@ (%@) 
Failed to load a lazy table tile in TSTTableTileGroup: %@ with error: errorClass=%{public}@, domain=%{public}@, code=%zd, %{public}@hints=%{public}@ (%@) 
Fatal Assertion failure: %{public}s %{public}s:%d Tile ID too low for this group!
NSUInteger _indexForTileID(TSTTableTileID, TSTTableTileID)
Tile ID too low for this group!
Fatal Assertion failure: %{public}s %{public}s:%d Tile ID too high for this group!
Tile ID too high for this group!
dur_
num_
-[TSCENumberCellValue compareToCellValue:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCENumberCellValue.mm
-[TSCENumberCellValue setPopulatedCustomFormat:]
Custom formats are only legal for bare numbers and currencies.
-[TSCENumberCellValue encodeToArchive:]
Expected a currency code for unit %d, locale:%@
v32@?0Q8@"NSMutableSet"16^B24
year
month
attribute
B24@?0@"TSCERemoteDataSpecifier"8^B16
(empty) 
<%tu specifiers: %tu hot, %tu cold>
-[TSTMergeRegionMap saveToArchiver:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTMergeRegionMap.mm
this should never be called!
%@, %p: for PivotTable: %@
-[TSTPencilAnnotationOwner addAnnotation:withFormula:atIndex:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTPencilAnnotationOwner.mm
Adding a formula at an index that already has an annotation
-[TSTPencilAnnotationOwner addAnnotation:withFormulaObject:atIndex:]
-[TSTPencilAnnotationOwner removeAnnotation:]
Annotations and formulas out of sync!
v32@?0@"TSTPencilAnnotation"8Q16^B24
Fatal Assertion failure: %{public}s %{public}s:%d Attempting to remove annotation at bad index %tu!
-[TSTPencilAnnotationOwner removeAnnotationAtIndex:]
Attempting to remove annotation at bad index %tu!
-[TSTPencilAnnotationOwner cellRangeForAnnotation:]
Unexpected merge range!
-[TSTPencilAnnotationOwner enumerateAnnotationsWithBlock:]
-[TSTPencilAnnotationOwner enumerateAnnotationsWithBlock:]_block_invoke
Unexpected table info on this annotation.
-[TSTPencilAnnotationOwner _enumerateAnnotationsAndFormulasWithIndexes:block:]_block_invoke
-[TSTPencilAnnotationOwner _annotationsForIndexes:]_block_invoke
annotation
-[TSTPencilAnnotationOwner _indexesForRange:startingOnly:]
self.tableModel
self.calculationEngine
-[TSTPencilAnnotationOwner _indexesForRows:]
-[TSTPencilAnnotationOwner _indexesForRows:]_block_invoke
How do we have a zero-row range here?
-[TSTPencilAnnotationOwner _enumerateIndexesIntersectingRegion:block:]
v48@?0@"TSTCellRegion"8r^{TSUCellCoord=ISBB}16Q24{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}32
-[TSTPencilAnnotationOwner initWithArchive:unarchiver:forTableModel:]
Mismatched number of annotations and formulas.
TSKCellPencilAnnotations
gdtr
TSTPivotGroupingColumnOptionsMap %p
uid:%@, sortByGrTotal:%@, sortDesc:%@, repeatLbls:%@, hideTtls:%@, sortAggRuleUid:%@
v32@?0{TSUCellCoord=ISBB}8d16^B24
v28@?0S8d12^B20
-[TSTWidthHeightCache p_insertColumns:atColumn:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTWidthHeightCache.mm
attempt to insert column range beyond column width cache max columns; truncating
-[TSTWidthHeightCache p_insertRows:atRow:]
attempt to insert row range beyond row height cache max rows; truncating
-[TSTWidthHeightCache p_moveRowsFrom:toRow:]
destination cannot be within the source range.
src range for move exceeds max
dest range for move exceeds max
-[TSTWidthHeightCache p_moveColumnsFrom:toColumn:]
_columnModelWidths is not sized correctly before move
-[TSTWidthHeightCache resetFittingRowHeightsStartingWith:upToRow:]
startRow should be before endRow
-[TSTWidthHeightCache validateRowsNeedingFittingInfo:validationRegion:layoutEngine:]
rowsNeedingFittingInfo
-[TSCERemoteDataSourceFetcher init]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCERemoteDataSourceFetcher.mm
Remote Data Fetcher: %@
v20@?0q8I16
-[TSCERemoteDataSourceFetcher dataKind]
-[TSCERemoteDataSourceFetcher identifier]
-[TSCERemoteDataSourceFetcher canFetchKey:]
-[TSCERemoteDataSourceFetcher sendRequestForKeys:]
-[TSCERemoteDataSourceFetcher fetchQuotesWithTickers:completion:]
-[TSCERemoteDataSourceFetcher autoCompleteQuotesWithInput:completion:]
virtual void TSCEArgumentAccessor::convertToNilIfIgnoring(TSCEValue &, TSCEGridAccessContext &, BOOL)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEArgumentAccessor.mm
Should be unreachable now - each derived type needs to implement its specific accessing, context: %d
static TSCEArgumentAccessor *TSCEArgumentAccessor::argAccessorForContext(TSCEArgumentContext)
No argument accessor class for context: %d
virtual void TSCEStatArgumentAccessor::convertToNilIfIgnoring(TSCEValue &, TSCEGridAccessContext &, BOOL)
Wrong context for this method.
virtual void TSCECountArgumentAccessor::convertToNilIfIgnoring(TSCEValue &, TSCEGridAccessContext &, BOOL)
virtual void TSCEVarArgumentAccessor::convertToNilIfIgnoring(TSCEValue &, TSCEGridAccessContext &, BOOL)
com.apple.Numbers.TSCE.PrecedentLoading
-[TSCEFormulasToSet commonInit]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFormulasToSet.mm
_precedentLoadingQueue
_precedentLoadingGroup
com.apple.Numbers.TSCE.BackgroundFormulas
_backgroundProcessingQueue
-[TSCEFormulasToSet initWithCalcEngine:forMinion:options:]
A minion is required to use TSCEFormulasToSet object
-[TSCEFormulasToSet dealloc]
Deallocing %@ with %lu formulasToReset
Deallocing %@ with %lu formulasToRemove
Deallocing %@ with %lu formulasToReplace
-[TSCEFormulasToSet replaceFormula:atCellCoord:inOwner:replaceOptions:]_block_invoke
Can only place formulas at valid, non-spanning cell coords, not: %@
precedents
-[TSCEFormulasToSet _flushFormulasToReplaceWithDepTracker:startTime:timeout:]_block_invoke
-[TSCEFormulasToSet flushAllFormulaChanges]
We should be empty now, always
-[TSTTableSortOrder initWithRules:type:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableSortOrder.mm
sortRules
-[TSTTableSortOrder sortOrderByReplacingRuleAtIndex:withRule:]
Group Sort Order: trying to replace an object at an index that doesn't exist
B24@?0@"TSTTableSortRule"8@"NSDictionary"16
TSCEValue TSCEFunction___CHART::evaluateWithContext(TSCEEvaluationContext &)_block_invoke_2
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEChartFunctions.mm
apparentTractRefForTractRef let us exceeed tableSize?? (%d,%d)
-[TSTConcurrentMutableCellUIDSet reapAccumulatedCellRegionWithTable:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTConcurrentMutableCellUIDSet.mm
Search not found: %{public}@
void TSCERecalcPhaseState::addNewLeaf(const TSCECellToEvaluate &, TSCEDependencyTracker *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECalcEngine.mm
Invalid ownerId for solving, leaf: %@ for formulaOwner %@ %@
(UNREGISTERED)
com.apple.Numbers.TSCE.RecalcLowPriority
com.apple.Numbers.TSCE.RecalcHighPriority
void TSCECalcEngine::initializeDispatchObjects()
_recalcLowPriorityQueue
_recalcHighPriorityQueue
_recalcDispatchGroup
_recalcLoopGroup
TSCEDebugEnableLocalVariables
com.apple.iWork.CalculationEngine
Performance
com.apple.Numbers.TSCE.writeExclusionQueue
Functions used:
void TSCECalcEngine::assertNonCalcEngineException(NSString *__strong, NSException *__strong, TSCEFormulaObject *__strong) const
Non-calcEngine NSException passed up to %{public}@: %{public}@ with formula: %{public}@
Non-calcEngine type exception passed up to %{public}@ for formula %{public}@.
Non-calcEngine NSException passed up to %{public}@: %{public}@
Non-calcEngine type exception passed up to %{public}@.
void TSCECalcEngine::dispatchOnePhase(TSCERecalcPhaseState *)
phase
dispatchOnePhase
void TSCECalcEngine::dispatchOnePhase(TSCERecalcPhaseState *)_block_invoke
Unexpected calc-engine exception passed up to enqueueTaskForCell: %{public}@
recalcPhaseHoldingReadLock
void TSCECalcEngine::recalcPhaseHoldingReadLock(TSCERecalcPhaseState *)
Unexpected calc-engine exception passed up to recalcPhaseHoldingReadLock: %{public}@ formulaOwner is: %{public}@
void TSCECalcEngine::startRecalculationTask()
cannot start recalculation thread because it is in the wrong state
void TSCECalcEngine::startRecalculationTask()_block_invoke_2
no access controller!
startRecalculationTask
Unexpected calc-engine exception passed up to startRecalculationTask loop: %{public}@
TSUError TSCECalcEngine::registerOwnerWithOwnerUID(const TSCEOwnerUID &, __strong id<TSCEFormulaOwning>, __strong id<TSCEReferenceResolving>, const TSCEOwnerUID &, TSCESubFormulaOwnerIndex)
Resolver doesn't conform to the TSCEReferenceResolving protocol.
%@ doesn't implement: -multiEvaluateFormulasAt:withCalcEngine:recalcOptions:
TSCETransaction *TSCECalcEngine::openTransaction()
There is already an open transaction on this calc-engine: %@
_currentTransaction
void TSCECalcEngine::closeTransaction(TSCETransaction *__strong)
Invalid transaction object passed in: %@
void TSCECalcEngine::replaceFormula(__strong id<TSCEFormulaReturning>, const TSUCellCoord &, const TSCEOwnerUID &, TSCEReplaceFormulaOptions)
void TSCECalcEngine::setRewritingMinion(TSCERewritingMinion *__strong)
Warning: Overwriting a pre-existing rewritingMinion with a new one
NSArray *TSCECalcEngine::rewriteSpecStack()
Need to add locking to run this on multiple threads
void TSCECalcEngine::popRewriteSpec(TSCEFormulaRewriteSpec *__strong)
Popping wrong rewriteSpec off rewriteSpecStack
Have no rewriteSpecs to pop
void TSCECalcEngine::blockUntilRecalcIsCompleteWithTimeout(NSTimeInterval)
Can't block on the calc-engine before it is started up.
void TSCECalcEngine::blockUntilRecalcTaskExitedWithTimeout(NSTimeInterval)
Can't block without an access controller
void TSCECalcEngine::resumeRecalculation()
Can't resume calculation on a closing document!
TSCEValue TSCECalcEngine::evaluateSynchedWithCalcEngineWithFormula(TSCEFormulaObject *__strong, TSCEEvaluationContext &)
TSTHeaderNameMgr *TSCECalcEngine::headerNameMgr() const
_headerNameMgr
TSCEReduceCalcEngineMsgSize
v16@?0@"TSCENamedReferenceManager"8
v16@?0@"TSTHeaderNameMgr"8
v16@?0@"TSCERemoteDataStore"8
v16@?0@"TSCEReferencesToDirty"8
TSCENumberValue::TSCENumberValue(const TSUDecimal &, TSCEBaseUnit, BOOL)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCENumberValue.mm
can't make a unitless zero with a number other than zero!
can't make a unitless zero with a unit!
virtual NSString *TSCENumberValue::string(TSCEFunctionSpec *__unsafe_unretained, int, TSULocale *__strong) const
No locale, falling back to current locale.
NSComparisonResult TSCENumberValue::compare(const TSCENumberValue &) const
Support for non-duration, non-currency unit comparisons is not implemented.
TSCENumberValue TSCENumberValue::percent() const
Should never call percent on a unit value!
v16@?0@"TSTExpressionNode"8
<%@ %p>: isActive:%@, expressionNode:%@
B16@?0r^{TSKUIDStruct=QQ}8
Fatal Assertion failure: %{public}s %{public}s:%d Not implemented.
-[TSTPivotRowColumnOrder targetGroupFromIndex:minSourceLevel:templateUID:forDimension:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTPivotRowColumnOrder.mm
Not implemented.
Fatal Assertion failure: %{public}s %{public}s:%d Not implemented for columns.
-[TSTPivotRowColumnOrder minimumCategoryLevelInRange:forDimension:]
Not implemented for columns.
<%@ %p>: completionText '%@', prefixRange %@
-[TSTStrokeLayer strokeLayerAtIndex:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTStrokeLayer.mm
should never call this with index > 0
-[TSTMutableStrokeLayer applyStroke:atIndexes:order:applyStroke:atIndexes:order:applyStroke:atIndexes:order:applyStroke:atIndexes:order:applyStroke:atIndexes:order:]
this interface can't be used on complex stroke layers
bodyIndexes
-[TSCEGetPivotDataBundle enumerateDataKeyValuePairsUsingBlock:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEGetPivotDataBundle.mm
Size mismatch in data/value pairs
TSCETaggedDecimal TSCETaggedDecimalList::findPivot()
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCETaggedDecimalList.mm
We shouldn't be finding the pivot of a 0 length array
size_t TSCETaggedDecimalList::partitionTaggedDecimals(const TSCETaggedDecimal &)
_size == 0?
+[TSCETaggedDecimalListObject createFromVector:functionSpec:argumentIndex:evaluationContext:ignoreError:ignoreDuplicates:]
Have to set the type of vector appropriately. currentType = %d
-[TSTConcurrentStylesheet variationOfStyle:propertyMap:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTConcurrentStylesheet.mm
stylesheet used should be same as the one owning the style
All at Once
By Row
By Column
By Cell
By Row Content
By Column Content
By Cell Content
By Row Reverse
By Row Content Reverse
By Column Reverse
By Column Content Reverse
By Cell Reverse
By Cell Content Reverse
+[TSTAnimation textureDeliveryStyleFromDeliveryString:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTAnimation.mm
bad delivery string to delivery style mapping
void TSTHeaderPerTable::addHeaderUid(const TSKUIDStruct &, BOOL)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTHeaderNameMgr.mm
_headerRowUids
-[TSTHeaderNameMgrTile saveToArchiver:]
-[TSTHeaderNameSubset headerCellsMatchingPrefix:]
Warning: asking for prefix matching, but this search result didn't specify prefixes when it was created
%@ for '%@'
-[TSTHeaderNameMgr findTileForString:findClosest:foundAtOffset:]
midTile
-[TSTHeaderNameMgr handleFullTile:]
Could NOT split tile of %lu size for some reason
-[TSTHeaderNameMgr spanningRangeForHeaderCell:]
tracked header reference is not in a header?  (%@ vs body %@)
@"TSTIndexingChunk"24@?0{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}8
@32@?0@"<TSTCellIteratorData>"8@"TSTIndexingChunk"16@24
-[TSTCellDiffMap initWithContext:cellDiffArray:cellUIDList:uidBased:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellDiffMap.mm
Nil cellDiffArray
Nil cellUIDList
unexpected diff/uidlist ratio
-[TSTCellDiffMap addCellDiff:andCellUID:avoidCopy:]
cannot add cellUIDs in cellID mode
can't add cells to a one-to-many mapping
-[TSTCellDiffMap addCellDiff:andCellID:avoidCopy:]
cannot add cellIDs in UID mode
-[TSTCellDiffMap addCellDiffMap:]
both maps should match isUIDBased state
-[TSTCellDiffMap addCellDiffs:atCellUIDs:]
map should be UIDBased
cellDiffs and cellUIDList should match in length
-[TSTCellDiffMap appendCellDiffMap:]
Trying to append a cellID cellDiffMap to a uidBased diff map. Aborting.
v64@?0@"TSTCellDiff"8{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16Q48^B56
Trying to append a uidBased cellDiffMap to a cellID diff map. Aborting.
v40@?0@"TSTCellDiff"8{TSUCellCoord=ISBB}16Q24^B32
B24@?0r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}8Q16
B24@?0{TSKUIDStruct=QQ}8
-[TSTCellDiffMap enumerateElementsUsingBlock:]
cannot enumerate cellUIDs in cellID mode
-[TSTCellDiffMap enumerateCellIDElementsUsingBlock:]
cannot enumerate cellIDs in UID mode
v16@?0@"TSTCellDiffArray"8
<%@: %p>:
-[TSTTableViewSortRule baseIndex]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableSortRule.mm
Base index is not valid on TSTTableViewSortRule.
-[TSTTableViewSortRule encodeToArchive:]
TSTTableViewColumnSortRule should never be archived
-[TSTTableViewSortRule initFromArchive:]
TSTTableViewColumnSortRule should never be unarchived
-[TSTGroupValueTuple updateWithDocumentRoot:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTGroupValueTuple.mm
+[TSTGroupValueTuple groupValueUidForTuple:appendingTuple:]
upperTuple
lowerTuple
-[TSTGroupValueTuple groupValueTupleByReplacingValue:atLevel:]
Don't try to replace value for the root
%{public}@: level %d is beyond this tuple's size
-[TSTGroupValueTuple groupValueTupleByRemovingValueAtLevel:]
Removing from level %d of a %d-level tuple
%@ [
%@'%@'
[%@] = 
TSTiOSCheckboxChecked6
TSTiOSCheckboxChecked12
TSTiOSCheckboxChecked18
TSTiOSCheckboxChecked24
TSTiOSCheckboxUnchecked6
TSTiOSCheckboxUnchecked12
TSTiOSCheckboxUnchecked18
TSTiOSCheckboxUnchecked24
+[TSTCheckboxRenderer frameWithViewScale:contentFrame:checked:outCheckboxImage:outCheckboxSize:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCheckboxRenderer.m
No checkbox image for rendering!
v28@?0I8d12^B20
-[TSTColumnRowUIDMapper disconnect]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTColumnRowUIDMapper.mm
No longer have a mapper - disconnected multiple times?
Mappers version counter was already off %lu vs %lu
Should have preserved the versionCounter
-[TSTCategoryStoreIterator initWithInfo:region:flags:searchMask:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCategoryStoreIterator.mm
_info.baseTableModel.dataStore
_info.summaryModel.dataStore
searchMask remain 0x%x, should be consumed by this point
-[TSTCategoryStoreIterator dealloc]
iteration should be terminated
-[TSTCategoryStoreIterator updateCellData:]
_baseTile
_baseRow
incomplete map.
cellRef
this is odd case, iterator found cell at this cellID, but then no cellRef
-[TSTCategoryStoreIterator updateFormulaForCellData:]
this is an odd case, iterator found cell at this cellID, but then no cellRef
-[TSTCategoryStoreIterator getNext]
invalid columnUID
should now have a row that intersects the region
couldn't find offset, that's not good.
should now have a valid cellID at this point
-[TSCEFormulaOwnerWrapper initWithFormulaOwnerUID:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFormulaTranslationFlags.mm
Requires a valid ownerUID
-[TSWPStorage(TablesAdditions) hyperlinkCellID]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSWPStorage_TablesAdditions.mm
cell attribute array should not be empty
-[TSTCategoryAggregateFormulaOwner tableInfo]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCategoryAggregateFormulaOwner.mm
Someone is asking for a tableInfo, but we are not registered with the calcEngine yet
Table %@ is not registered with the calcEngine yet
-[TSTCategoryAggregateFormulaOwner setTableInfo:]
don't allow overwriting table info pointer, should go from nil -> info
Wrong class passed to setTableInfo: %@
-[TSTCategoryAggregateFormulaOwner evaluateFormulaAt:withCalcEngine:recalcOptions:]
Table has no calc engine. Aborting recalculation.
const TSCECellToEvaluate &TSCEInProgressQueue::back()
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEInProgressQueue.mm
Shouldn't call back() from empty in-progress queue
-[TSTRichTextPayload initWithContext:storage:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTRichTextPayload.mm
v24@?0r^{TSCEColumnReference=ISC}8^B16
v24@?0r^{TSCEColumnRangeReference=IISC}8^B16
void TSCESpanningDependencies::readFromArchive(const TSCE::SpanningDependenciesArchive &)_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCESpanningDependencies.mm
NULL spanning dependencies for table: %{public}@
v28@?0{TSCEColumnRangeContextPair=IC}8{TSCEInternalCellReference={TSUCellCoord=ISBB}SS}16
void TSCESpanningDependencies::unpackAfterUnarchive()_block_invoke
v32@?0r^{TSCEColumnRangeReference=IISC}8r^{TSUCellCoord=ISBB}16^B24
v32@?0r^{TSCEColumnReference=ISC}8r^{TSUCellCoord=ISBB}16^B24
void TSCESpanningDependencies::dirtyAllFormulasReferencingRange(TSCERangeCoordinate)
invalid input range
dirty precedents count consistency error - cell: %@ in table: %@
v20@?0{TSCEInternalCellReference={TSUCellCoord=ISBB}SS}8
TSCEFormulaRangeContext formulaRangeContextForArchivedContext(const TSCE::SpanningDependenciesExpandedArchive::RangeContext &)
unknown range dependency context found in archive! Archive is corrupt.
virtual TSCEASTElement *TSCEASTConvertToUidRefsRewriter::anyReferenceNode(TSCEASTRelativeCoordRefElement *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTConvertToUidRefsRewriter.mm
Unhandled reference type
virtual TSCEASTElement *TSCEASTConvertToUidRefsRewriter::colonTractNode(TSCEASTColonTractElement *)
-[TSTSummaryCellVendor setAggregateType:forColumnUID:atGroupLevel:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTSummaryCellVendor.mm
Not implemented for pivot tables.
-[TSTSummaryCellVendor cellSpecForAggregateType:forColumnUID:atGroupLevel:]
-[TSTSummaryCellVendor setCell:atCellUID:]
Setting vendor cell for a pivot table
Setting vendor cell with an invalid cellUID
Invalid aggregate type in summary cell vendor - BodyRows
Invalid aggregate type in summary cell vendor - Label
-[TSTSummaryCellVendor getCell:atCellUID:]
Getting vendor cell for a pivot table
cell should never be nil
Getting vendor cell with an invalid cellUID
-[TSTSummaryCellVendor removeCellsInColumnUid:]
-[TSTSummaryCellVendor cellMapForWildcardCells]
-[TSTSummaryCellVendor runChange:withSummaryCellMap:migrationHelper:]
kTSCERecalcLoopGroupEmpty%u
+[TSTTableFilterRule getPredArgDataFromCell:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableFilterRule.mm
Expected a cell without an error to make a quick filter rule.
TSTTableFilterRule %p: %@
-[TSTTableFilterRule matchesCell:]
Unexpected predicate argument type!
-[TSTTableFilterSet p_downgradedFilterRuleForListItem:fromPredicate:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableFilterSet.mm
Don't have a TSTFormulaPredicateTypeDateIsNotTheDate predicate type, but need one.
Invalid Predicate Arg Data for list item
-[TSTTableFilterSet downgradeFilterSetForBackwardCompatWithLocale:]
newRule
Unexpected predicate type during downgrade!
-[TSTTableFilterSet p_thresholdComparisonMatchesFilter:withPredicateType:]
Unexpected predicate type found when calculating threshold
-[TSTTableFilterSet rowIsShown:withHiddenStateExtent:withCalcEngine:]
Unexpected threshold value type found
-[TSTTableFilterSet ruleInFilter:atIndex:]
filter index invalid
rule index invalid
-[TSTTableFilterSet filterAtIndex:inTable:]
-[TSTTableFilterSet removeRulesWithAbsoluteIndices:]
invalid rule index passed in
-[TSTTableFilterSet removeRulesWithIndices:inFilter:]
filter index is out of bounds
rule indices are out of bounds
-[TSTTableFilterSet p_addRules:atRuleIndices:inFilter:isNew:]
no rules given
-[TSTTableFilterSet addRules:inFilter:]
-[TSTTableFilterSet replaceRule:atRuleIndex:inFilter:]
-[TSTTableFilterSet replaceRuleAtAbsoluteIndex:withRule:]
Insufficient rules to replaceRuleAtAbsoluteIndex: %lu
-[TSTTableFilterSet enumerateRulesInFilterIndex:usingBlock:]
-[TSTTableFilterSet ruleIndexInFilter:matchingCell:]
-[TSTTableFilterSet numberOfRulesInFilter:]
Fatal Assertion failure: %{public}s %{public}s:%d Modern filter sets shouldn't have pre-pivot rules!
-[TSTTableFilterSet loadFromArchive:unarchiver:]
Modern filter sets shouldn't have pre-pivot rules!
+[TSCECategoryRef relativeAncestorGroupUid:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECategoryRef.mm
levelsUp of %d is too large.
-[TSTFormulaPredicate initWithPredicateType:arg1:arg2:qualifier1:qualifier2:argumentCellRef:hostCell:forConditionalStyle:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTFormulaPredicate.mm
Conditional styles are not allowed to use anything other than an arg0 of (+0,+0) relative coordinate
-[TSTFormulaPredicate p_creatorForPeriodBoundaryWithScale:direction:offset:argIndex:earlierBound:isCalPers:]
Not a valid date scale
This is expected to be unreachable.
-[TSTFormulaPredicate recreateFormula]
Should already have _predArg0 defined
-[TSTFormulaPredicate p_argTypeForPredArg:argNum:calculationEngine:hostCell:]
A categoryRef as arg 0, I don't think so
A viewTractRef as arg 0, I don't think so
-[TSTFormulaPredicate evaluateAtCellID:onOwnerUID:calcEngine:]
Need both of these set
-[TSTFormulaPredicate setArgumentAt:withPredArg:]
Only a limited set of types are allowed for predArg0, and not %d
%@: Not allowed for argument at position %d
-[TSTFormulaPredicate p_populateMembersFromFormula]
We don't have valid offsets at the moment
-[TSTFormulaPredicate copyByRewritingWithSpec:inOwner:inCellCoordinate:]
-[TSTFormulaPredicate upgradeTopAndBottom]
_predArg0
-[TSTFormulaPredicate encodeToPrePivotArchive:archiver:encodingForSOS:]
We need to be backward compatible to use this archiving method
-[TSTFormulaPredicate initFromArchive:]
Have to have archived the _predArg0 argument for upgraded archive format
-[TSTArchivedStrokeSelection setSelection:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTArchivedStrokeSelection.mm
Wrong type of class %@ (expected TSTStrokeSelection)
TSTTableBadgeImageCache
TSUImage *TSTTableBadgeCachedImageForName(NSString *__strong)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableBadge.m
TSTTableBadge failed to load image %@
TSTErrorMessageIcon
+[NSCharacterSet(TSCEAdditions) tsce_singleQuoteCharacterSet]_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/NSCharacterSetAdditions.m
(){}+-*/^%:,!&=><$"'#;|
%C%C%C
%C%C%C%C%C%C%C
%C%C
%C%C%C%C%C%C%C%C%C%C%C%C%C%C%C%C%C%C%C%C%C%C
+[NSCharacterSet(TSCEAdditions) tsce_characterSetRequiringSingleQuotes]_block_invoke
.%C%C
+[NSCharacterSet(TSCEAdditions) tsce_periodCharacterSet]_block_invoke
+[NSCharacterSet(TSCEAdditions) tsce_internationalWhitespaceCharacterSet]_block_invoke
+[NSCharacterSet(TSCEAdditions) tsce_internationalWhitespaceAndNewlineCharacterSet]_block_invoke
+[NSCharacterSet(TSCEAdditions) tsce_internationalColonCharacterSet]_block_invoke
+[NSCharacterSet(TSCEAdditions) tsce_dollarSignCharacterSet]_block_invoke
,%C%C;%C%C%C
+[NSCharacterSet(TSCEAdditions) tsce_listDelimiterCharacterSet]_block_invoke
-[TSTCellRegion regionByTrimmingAroundRowIndices:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellRegion.mm
-[TSTCellRegion regionByTrimmingAroundColumnIndices:]_block_invoke
-[TSTCellRegion prunedCellRegionAgainstTable:behavior:usingBlock:]
-[TSTCellRegion containsCellRange:]_block_invoke
areaRemaining should be greater than the intersection area
-[TSTCellRegion p_copyFromRegion:]
-[TSTCellRegion p_insertRangeIntoRegion:]
Added range:%{public}@ should never overlap previous range:%{public}@ in region:%{public}@.
<%@ %p boundingbox={ %@ }
 cellRanges={empty}>
 cellRanges={
  { %@ }
-[TSCEUndoTractList addToIncludedUidsTractColumnUids:rowUids:isRangeRef:preserveRectangularRange:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEUndoTractList.mm
Combining a spanning and non-spanning TSKUIDStructVector vector
<%@> sticky:%d Tracts: 
  %@
-[TSCEUndoTractList(FullTuple) initAsFullTupleForColumnHeaderUid:rowHeaderUid:aggregateRuleUid:flatteningDimension:]
Not a valid TSTTableDimension value: %d
-[TSCEStock init]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEStock.mm
-[TSCEStock initFromArchive:]
-[TSCEStock encodeToArchive:]
_symbol
NULL
-[TSCEStock valueForAttribute:]
Can't fetch an unknown attribute!
-[TSCEStock valueForAttribute:forLocale:]
en_US
MMMdyyyyhhmmzzz
%1.2F
%1.0F
Number suffix - trillions
Number suffix - billions
Number suffix - millions
Number suffix - thousands
-[TSCEStock p_populateAttributesFromArray:]
self.symbol
en_US_POSIX
yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'
BOOL TSCECellRecordTile::insertCellRecord(TSCECellRecord *, TSCECellDependencies *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECellRecordTile.mm
cellDependencies
BOOL TSCECellRecordTile::replaceCellRecord(TSCECellRecord &, TSCECellDependencies *)
cellRecord can't handle multiple self references
BOOL TSCECellRecordTile::replaceCellRecord(TSCECellRecord &, TSCECellDependencies *)_block_invoke
edge pointing to nonexistant table found: %lu
std::vector<TSCECellRecord *> TSCECellRecordTile::sortedCellRecordVector() const
no duplicate cell records permitted, %lu vs %lu
void TSCECellRecordTile::appendExpandedEdgeToArchive(TSCE::ExpandedEdgesArchive *, const TSCEInternalCellReference &) const
_wrapper
-[TSCECellRecordTileWrapper unpackAfterUnarchiveForCellDependencies:]
-[TSTTableTranslator init]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableTranslator.mm
-[TSTTableTranslator tableAreaForCellID:]
expecting this method to be overridden
-[TSTTableTranslator cellValueTypeAtCellID:]
-[TSTTableTranslator defaultCellStyleForCellID:useSoftDefault:outSource:]
-[TSTTableTranslator defaultTextStyleForCellID:useSoftDefault:outSource:]
-[TSTTableTranslator cellStyleAtCellID:isDefault:]
-[TSTTableTranslator textStyleAtCellID:isDefault:]
-[TSTTableTranslator defaultStyleHandlesForCellID:useSoftDefault:styleDefaultsCache:outCellStyleHandle:outTextStyleHandle:]
-[TSTTableTranslator conditionalStyleSetAtCellID:]
-[TSTTableTranslator stringAtCellID:optionalCell:]
-[TSTTableTranslator getCell:atCellID:suppressCellBorder:]
-[TSTTableTranslator hasFormulaAtCellID:]
-[TSTTableTranslator formulaAtCellID:]
-[TSTTableTranslator postCommentNotificationForStorage:atViewCellCoord:notificationKey:]
-[TSTTableTranslator commentHostingAtCellID:forCommentStorage:updateCommentMaps:]
-[TSTTableTranslator commentHostingAtCellID:]
-[TSTTableTranslator mergeRangeAtCellID:]
-[TSTTableTranslator mergeOriginForCellID:]
{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}24@?0{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}8
-[TSTTableTranslator cellUIDForSummaryCellCoord:]
no summeries in normal table mode
-[TSTTableTranslator cellExistsAtCellID:]
-[TSTTableTranslator hasCommentAtCellID:]
requires identity mapping from view to model space
-[TSTTableTranslator resetViewMap]
view and base must be the same while uncategorized.
+[TSCEFunctionSpec functionSpecForFunctionName:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFunctionSpec.mm
functionSpecForFunctionName: expects US function names, but %@ (US is %@) was passed in.
+[TSCEFunctionSpec unsupportedFunctionNameForLocale:]
Unsupported
-[TSCEFunctionSpec loadRepeatingArguments]
I don't think we ever use higher than 2, actually, certainly not repeatingGroupSize: %hd
origArgIndex out of bounds: %lu
-[TSCEFunctionSpec argumentSpecForIndex:]
translatedIndex out of bounds: %lu
%@%i%@
TSCEValue TSCEFunction_INTERSECT_RANGES::evaluateWithContext(TSCEEvaluationContext &)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCELookupReferenceFunctions.mm
Should have detected bad reference during loop
Bad reference should have been detected earlier
TSCEValue TSCEFunction_LOOKUP::evaluateWithContext(TSCEEvaluationContext &)
In function LOOKUP, Should not reach here, user result table should be 1-D.
static NSComparisonResult TSCEFunction_MATCH::compareValue(TSCEValue &, TSCEValue &, TSCEEvaluationContext &)
In function MATCH, should not reach here.
void TSCEFunction_UNION_RANGES::determineShapeOfCellList(std::vector<TSCECellRef>, bool, bool &, bool &, bool &, NSUInteger &)
can't have invalid cell references here
0 first row width should be impossible.
TSCEValue TSCEFunction_UNION_RANGES::evaluateWithContext(TSCEEvaluationContext &)
indices inside a range reference should be references.
each index inside a range reference should be just one cell.
contiguous should imply rectangular
rectangular references should have rowWidth rows
-[TSTIdentifierNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTIdentifierNode.mm
Unexpected object in initAsCopyOf:... expected TSTIdentifierNode, got %@
-[TSTIdentifierNode buildASTNodeArray:hostCell:symbolTable:]
IdentifierNode shouldn't have any children
<%@:%p size %f count %u hiding 0x%02hx cstyle %p tstyle %p
-[TSTConditionalStyleRule predicateType]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTConditionalStyleRule.mm
_predicate
-[TSTConditionalStyleRule setCellStyle:textStyle:]
Can't replace styles!
TSTConditionalStyleRule %p: %@ => %@, %@
CS Predicate: %@
<%@>:
  %@ = %@
  %@ = null
-[TSCEFormulasForUndo splitIntoChunksForExcessiveSize]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFormulasForUndo.mm
Can't split FormulasForOwner that uses formulaStrings (TSTCommandRewriteFormulasForTranspose)
v24@?0@"TSCEFormulaObject"8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16
  ownerKind %d = %@
static TSCENumberFormat TSCENumberFormat::defaultNumberFormatForCurrency(TSULocale *__strong)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFormat.mm
TSCEBaseFormat::TSCEBaseFormat(TSKBaseFormat *__unsafe_unretained)
TSCEBaseFormat has no defaults for nil TSKBaseFormat
TSCEFormat::TSCEFormat(const TSUFormatType)
This TSCEFormat constructor not supported for this type: %d
static TSCEFormat TSCEFormat::createDefaultCurrencyUsingLocale(TSULocale *__strong)
For currency, use the constructor that passes in a locale, and use the document locale.
void TSCEFormat::setFormatType(TSUFormatType)
setFormatType() not allowed in general, type change attempted: %d -> %d
TSCEFormat::TSCEFormat(const TSUFormatType, const TSCENumberFormat &)
Creating a non-number formatType but initializing the numberFormat iVar.
bool TSCEFormat::isEqualNotCountingExplicitness(const TSCEFormat &) const
Trying to compare unexpected type %d.
TSCENumberFormat TSCEFormat::numberFormat() const
Format is not of this type.  Can't return this.
TSCEFractionFormat TSCEFormat::fractionFormat() const
TSCEBaseFormat TSCEFormat::baseFormat() const
TSCEDurationFormat TSCEFormat::durationFormat() const
TSKDateTimeFormat *TSCEFormat::dateTimeFormat() const
TSKCustomFormatWrapper *TSCEFormat::customFormat() const
TSKBooleanFormat *TSCEFormat::booleanFormat() const
-[TSTConditionalStyleSet copyToGeometricFormWithRewriteContext:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTConditionalStyleSet.mm
Trying to rewrite a conditional style with a non-conditionalStyleFormulaOwner containing ownerUID: %@
-[TSTConditionalStyleSet copyByRepairingBadReferences:clearUidHistory:]
<%@: %p>: Rules:
CS Rules: 
-[TSTConditionalStyleFormulaOwner initWithTableModel:ownerUID:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTConditionalStyleFormulaOwner.mm
TSTConditionalStyleFormulaOwner: requires a valid ownerUID, table is: %@ (%@)
TSCEReferenceValue::TSCEReferenceValue(TSCEEvaluationContext &, const TSCEOwnerUID &, const TSCERangeCoordinate &, const TSUPreserveFlags &, BOOL)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEReferenceValue.mm
Invalid attempt to create a reference value with an invalid tableUID.
TSCEReferenceValue::TSCEReferenceValue(TSCEEvaluationContext &, const TSCEOwnerUID &, const TSCERelativeRangeCoordinate &, const TSUPreserveFlags &)
TSCEReferenceValue::TSCEReferenceValue(TSCEEvaluationContext &, const TSCEOwnerUID &, const TSCERelativeCellCoordinate &, const TSUPreserveFlags &)
-[TSCETrackedReference replaceContentsWithContentsOfTrackedReference:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCETrackedReference.mm
can't replace contents with contents of a nil tracked reference
-[TSCETrackedReference referencesForCalcEngine:referenceTrackerUID:]
Non-nil TSCEReferenceSetWrapper is required to use referencesForCalcEngine:
-[TSCETrackedReference precedentsWithCalcEngine:hostOwnerUID:]
Non-nil precedents pointer is required to use precedentsWithCalcEngine:
static TSCECellRef TSTConvertFormulasToBaseForCategoriesRewriter::convertedContainingCellRefForColonTractRewrites(TSCEFormulaRewriteContext &, TSTFormulaCoordinateSpace, TSTFormulaRewriteSpec *__strong)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTConvertFormulasFromBaseForCategoriesRewriter.mm
convertedContainingCellRefForColonTractRewrites: No coordMapper found for tableUID: %@
virtual TSCEASTElement *TSTConvertFormulasToBaseForCategoriesRewriter::colonTractNode(TSCEASTColonTractElement *)
How did this happen? refTableUID is invalid in TSTConvertFormulasFromChromeToBaseForCategoriesRewriter::colonTractNode
srcCoordMapper
v36@?0r^{TSUCellCoord=ISBB}8S16r^{TSUCellRect={TSUCellCoord=ISBB}{?=II}}20^B28
TSCERangePrecedentsTile *TSCERangeDependencies::findTileForToOwnerId(TSCEInternalFormulaOwnerID, BOOL)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCERangeDependencies.mm
v32@?0r^{TSUCellCoord=ISBB}8r^{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16^B24
void TSCERangeDependencies::readFromArchive(const TSCE::RangeDependenciesArchive &)
corrupted range dependencies archive
void TSCERangeDependencies::readFromExpandedArchive(const TSCE::RangeDependenciesArchive &)
void TSCERangeDependencies::unpackAfterUnarchive()
precedentRangeDependencies
Fatal Assertion failure: %{public}s %{public}s:%d at the moment we don't handle this well
-[TSTCategoryOrder targetGroupFromRowIndex:minSourceLevel:templateRowUID:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCategoryOrder.mm
at the moment we don't handle this well
TSURowIndex TSTUidOrderNode::firstIndex()
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTUidOrderNode.mm
Sorting category/pivot order: Never should a group be empty
void TSTUidOrderNode::_orderUsingGroupByAndMaps(TSTGroupBy *__strong, BOOL, int, int, TSTColumnRowUIDMap *__strong, TSTColumnRowUIDMap *__strong, BOOL)
Too many number of levels for this order algorithm.
Level mismatch between the groupBy and the order node tree
TSCECellTractRefCore::TSCECellTractRefCore(const TSUCellCoord &, const TSUCellCoord &)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECellTractRefCore.mm
Both coords must be spanning in the same direction %{public}@ vs %{public}@
TSCECellTractRefCore::TSCECellTractRefCore(const TSUCellCoord &, const TSUCellCoord &, const TSKUIDStruct &)
void TSCECellTractRefCore::addColumn(TSUColumnIndex)
void TSCECellTractRefCore::addRow(TSURowIndex)
void TSCECellTractRefCore::addColumnRange(const TSUIndexRange &)
addColumnRange: should only be used with absolute indexes: %@
void TSCECellTractRefCore::addRowRange(const TSUIndexRange &)
addRowRange: should only be used with absolute indexes: %@
TSUCellCoord TSCECellTractRefCore::coordAtColumnOffset(TSUColumnOrRowIndex, TSUColumnOrRowIndex) const
Not really expecting spanning CellTractRef to be used here
ndtri
+[TSTGroupBy(ChangeGroups) groupingComboForGroupingType:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTGroupBy_ChangeGroups.mm
This grouping type isn't supported in this release
+[TSTGroupBy(ChangeGroups) p_dateBySettingUnit:value:ofDate:inCalendar:]
Continued looping trying to set date %@ to week number %lu
v24@?0r^{TSTGroupingLevelAndType=SC}8^B16
-[TSTTableInfo(Reorganize) p_mappingForSortingRowsOrColumns:withRules:dimension:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableInfo_Reorganize.mm
Can't sort by an empty rule list!
Expected sort tag count:%lu to match itemCount:%lu.
q24@?0@"TSTTableSortTag"8@"TSTTableSortTag"16
Index out of range!
-[TSTTableInfo(Reorganize) sortTagsForSortingColumns:byRows:]_block_invoke
reorganizeValue
v32@?0@"TSTTableSortTag"8Q16^B24
-[TSTTableInfo(Reorganize) sortTagsForSortingRows:byColumns:]_block_invoke
-[TSTTableInfo(Reorganize) mappingFromRowUids:toRowUids:]
From index out of range!
-[TSTCategoryTranslator maxVisibleRowLevel]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCategoryTranslator.mm
Unimplemented!
-[TSTCategoryTranslator startOfGroupingChangesBatch]
overflow in _groupingsChangingLevel
-[TSTCategoryTranslator endOfGroupingChangesBatch]
endOfGroupingChangesBatch called without matching startOfGroupingChangesBatch - avoided underflow
-[TSTCategoryTranslator resetViewMap]
view and base cannot be the same while categorized
-[TSTCategoryTranslator suspendChangeDescriptorNotificationsDuringBlock:]
not expecting multiple suspensions
+[TSTCategoryTranslator tableStyleAreaForCategoryLevel:isLabel:]
Calling tableStyleAreaForCategoryLevel with an invalid level
Category Column
i28@?0r^{TSUModelCellCoord={TSUCellCoord=ISBB}}8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16C24
i20@?0C8r^{TSKUIDStruct=QQ}12
i12@?0{TSUViewRowIndex=I}8
-[TSTCategoryTranslator setCellStyle:ofRowAtIndex:]
Categories: cannot set cell style for that row
-[TSTCategoryTranslator setTextStyle:ofRowAtIndex:]
Categories: cannot set text style for that row
-[TSTCategoryTranslator setCellStyle:ofColumnAtIndex:]
Categories: setting cell style on unknown column
-[TSTCategoryTranslator setTextStyle:ofColumnAtIndex:]
Categories: setting text style on unknown column
v18@?0{TSUModelColumnIndex=S}8r^{TSKUIDStruct=QQ}10
-[TSTCategoryTranslator conditionalStyleSetAtCellID:]
Categories: cannot get conditional style for that cell
-[TSTCategoryTranslator regionForValueOrCommentCellsInRange:]
Categories: cannot resolve region for cell rect
-[TSTCategoryTranslator p_applyViewCellCoord:toSummaryUsingBlock:toLabelUsingBlock:toCategoryColumnUsingBlock:toBaseUsingBlock:]
summary row does not have a valid summary row uid
-[TSTCategoryTranslator p_applyViewColumnIndex:toCategoryColumnUsingBlock:toBaseUsingBlock:toBeyondBoundsUsingBlock:]
Categories: this column is not is not in the base table
-[TSTCategoryTranslator heightOfRowAtIndex:isDefault:]
uid must be label or summary
-[TSTCategoryTranslator rowHeights]
Categories: cannot get row heights.
-[TSTCategoryTranslator columnWidths]
Categories: cannot get column widths.
-[TSTCategoryTranslator setHeight:ofRowAtIndex:]
Categories: cannot set height of this row
-[TSTCategoryTranslator setWidth:ofColumnAtIndex:]
Categories: cannot set width of this column
-[TSTCategoryTranslator removeRowsAtIndex:count:]
Categories: row removal method is not supported.
-[TSTCategoryTranslator removeColumnsAtIndex:count:]
Categories: column removal method is not supported.
-[TSTCategoryTranslator postCommentNotificationForStorage:atViewCellCoord:notificationKey:]
Categories: cannot post notification for comment/cell/key
-[TSTCategoryTranslator commentHostingAtCellID:forCommentStorage:updateCommentMaps:]
Categories: cannot resolve comment for cell/storage
-[TSTCategoryTranslator commentHostingAtCellID:]
Categories: cannot resolve comment for cell
-[TSTCategoryTranslator moveColumnRange:toColumnIndex:]
Categories: could not move column
-[TSTCategoryTranslator cellIDForCellContainingRichTextStorage:]
Categories: cannot resolve cell for this rich text storage
-[TSTCategoryTranslator mergeCellRange:]
attempting to merge a disjoint cell region
-[TSTCategoryTranslator mergeRangeAtCellID:]
found a disjoint merge range
-[TSTCategoryTranslator mergedGridIndicesForDimension:]
should not be any merged row grid indexes in the body range
-[TSTCategoryTranslator enumerateMergesIntersectingCellRegion:usingBlock:]_block_invoke
Unexpected view source merge region for categorized table: %@
-[TSTCategoryTranslator mergeRangesIntersectingRange:]_block_invoke
-[TSTCategoryTranslator mergeRangesIntersectingCellRegion:]_block_invoke
-[TSTCategoryTranslator mergeRangesAndCrumbsIntersectingRange:]_block_invoke_2
-[TSTCategoryTranslator insertColumnsAtIndex:uids:metadatas:tableArea:]
Categories: destination column is not in the header
Categories: table area should be body
-[TSTCategoryTranslator insertRowsAtIndex:uids:metadatas:tableArea:unsetFilterHidingAction:]
Categories: destination row is not in the actual header
Categories: destination row is not in the footer
columnUids: %@
rowUids: %@
%@ mergeSource: %@ mergeRegion: %@
merge origin map:
%@ -> %@
srcTableUID: %@
srcColumnUids: %@
srcRowUids: %@
dstTableUID: %@
dstColumnUids: %@
dstRowUids: %@
-[TSCEFormulaRewrite_RegionMovedInfo loadIndexesFromRegions]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFormulaRewrite_RegionInfo.mm
Expecting source and dest regions to be the same size
No rows match the filter conditions.
@8@?0
v32@?0{_NSRange=QQ}8@24
-[TSTCell(CoercionPrivate) _coerceEmptyCellToFormat:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCell_CoercionEngine.mm
Cannot coerce to %@
-[TSTCell(CoercionPrivate) _coerceToNumberFormatWithSeparatorFixing:]
Need to have a locale set here.
-[TSTCell(CoercionPrivate) _coerceTextCellToBestNumberFormatUsingLimitedParsing:allowFractions:]
unexpected format type
-[TSTCell(Coercion) coerceToFormatType:usingSpares:]
Illegal format type for coercion: %{public}@
Attempting to coerce a cell with mismatched format and value types
-[TSTCell(Coercion) parseContentOrFormulaFromString:tableInfo:cellID:flags:]
Cell must have its locale set in parseContentOrFormulaFromString:
-[TSTCellStyle(CellDiffAdditions) objectByRemovingPropertiesInMap:addingPropertiesInMap:updateInverseResetPropertyMap:updateInverseSetPropertyMap:optionalConcurrentStylesheet:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellStyle+CellDiffAdditions.m
Can't specify both a cell style and a cell style change at the same time.
-[TSTDataStoreIterator initWithModel:region:flags:searchMask:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTDataStoreIterator.mm
_dataStore
cannot specify both walk right to left and walk bottom to top
-[TSTDataStoreIterator updateCellData:]
_curTile
_curRow
-[TSTDataStoreIterator updateFormulaForCellData:]
-[TSTDataStoreIterator getNext]
-[TSCEAggregateGrid initWithGrids:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEAggregateGrid.mm
failed to allocate memory
-[TSCEAggregateGrid valueAtGridCoord:accessContext:]
2D array access not implemented for class %@
-[TSCEAggregateGrid valueAtIndex:accessContext:]
SFTArgumentAccessor consistency violation
-[TSCEAggregateGrid deepType:]
Shouldn't call deepType on an %@ class
-[TSCEAggregateGrid string:argIndex:locale:]
TSCEAggregateGrid doesn't have a meaningful string() to provide
void TSCEVolatileDependencies::readFromArchive(const TSCE::VolatileDependenciesArchive &)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEVolatileDependencies.mm
corrupt volatile dependency tracker archive
bool TSCEVolatileDependencies::addVolatileGeometryReference(const TSCEInternalCellReference &)
NULL volatile dependencies
com.apple.iWork.TSTPerformance
General
-[TSTGroupingColumn setFunctorForType]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTGroupingColumn.mm
should not attempt to use an invalid grouping type
-[TSTGroupingColumn p_groupingFormatWithLocale:]
yyyy
LLLL yyyy
EEEE
M/d/yyyy
yyyy'-W'w
yyyy-QQQ
LLLL
Value
Year
Year-Month
Day of Week
Year-Month-Day
Year-Week
Year-Quarter
Month
Quarter
TSCEArchives.proto
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/messages/src/TSCEArchives.pb.cc
-[TSTConvertFormulasForCategoriesByRewritingWrapper initWithCalcEngine:rewriteSpec:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTConvertFormulasForCategoriesByRewritingWrapper.mm
Why are we even being created for a non-move rewriteSpec: %d
-[TSTConvertFormulasForCategoriesByRewritingWrapper convertFromBaseToChromeForCategorizedTableMove:containingCell:]
srcColumnUids
srcRowUids
dstColumnUids
dstRowUids
-[TSTConvertFormulasForCategoriesByRewritingWrapper convertFromChromeToBaseForCategorizedTableMove:containingCell:]
void TSCECellRefSet::encodeToArchive(TSCE::InternalCellRefSetArchive &, TSCEDependencyTracker *) const
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECellRefSet.mm
-[TSTPivotStoreIterator initWithInfo:region:flags:searchMask:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTPivotStoreIterator.mm
info.baseTableModel.dataStore
info.summaryModel.dataStore
-[TSTPivotStoreIterator updateCellData:]
_summaryRow
-[TSTPivotStoreIterator updateFormulaForCellData:]
-[TSTPivotStoreIterator getNext]
Unexpected cell coordinate while iterating.
-[TSTTableModel(FormulaOwner) registerWithCalcEngineForDocumentLoad:ownerKind:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTable_FormulaOwner.mm
-[TSTTableModel(FormulaOwner) registerWithCalcEngineForDocumentLoad:ownerKind:]_block_invoke
can't translate a non-formula cell
-[TSTTableModel(FormulaOwner) performReadForOneOffFormulaEvaluation:forCellCoord:]
Evaluating non-formula cell.
-[TSTTableModel(FormulaOwner) evaluateFormulaAt:withCalcEngine:recalcOptions:]
Table model has no calc engine. Aborting recalculation.
Inconsistent calcEngines
Cell %@::%@ said hasFormula=YES, but had no formula in it
TSTTable_FormulaOwner evaluateFormulaAt
 %C 
-[TSTTableModel(FormulaOwner) writeResultsForCalcEngine:]
expect calc engines to be the same
-[TSTTableModel(FormulaOwner) invalidateForCalcEngine:]
-[TSCEAnyReference referenceTextWithCalculationEngine:hostTableUID:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEAnyReference.mm
referenceTextWithCalculationEngine currently only supports cell and range references
-[TSCEAnyReference referenceTextWithCalculationEngine:contextSheetName:]
TSTStrokeAssociatedObject
virtual TSCEValue TSTTableResolver::valueForCellCoord(const TSUCellCoord &, BOOL) const
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableResolver.mm
something went wrong fetching data from the table.
virtual TSCEValue TSTTableResolver::scalarValue(TSCEEvalRef *__strong _Nonnull, const TSCEOwnerUID &, const TSUCellCoord &, BOOL, BOOL) const
Invalid table pointer in a reference to be resolved. Returning a bogus value. Please file a bug.
virtual TSCEHidingAction TSTTableResolver::getHidingAction(TSCEEvalRef *__strong _Nonnull, BOOL) const
can't get hiding action of a range
virtual TSCEValueGrid *TSTTableResolver::valuesForViewTractRef(TSCEViewTractRef *__strong _Nonnull, TSCEHidingAction, TSCEError * _Nonnull __autoreleasing * _Nullable, TSCECellRefSet * _Nullable, BOOL) const
Need a tableUID set to use this interface
Need to implement group level restrictions for categorized tables
virtual TSCEValueGrid *TSTTableResolver::valuesForViewTractRef(TSCEViewTractRef *__strong _Nonnull, TSCEHidingAction, TSCEError * _Nonnull __autoreleasing * _Nullable, TSCECellRefSet * _Nullable, BOOL) const_block_invoke_2
%@: Should have had all precedents already, but missing: %@
v32@?0r^{TSCEGridCoord=II}8r^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16^B24
v40@?0Q8@"NSString"16r^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}24^B32
virtual TSCECellTractRef *TSTTableResolver::cellTractRefForViewTractRef(TSCEViewTractRef *__strong _Nonnull)
The error in the cell was removed.
The formula was updated because it refers to a table that was transposed.
The formula was updated because it refers to a table that was transposed. You may need to make additional changes.
The formula refers to a table that was transposed. You may want to review it.
The formula was replaced with its last calculated value.
The function %@ might have produced a different result than in Excel. The formula was replaced by a formula that will give the same result.
 Original formula: %@
The following conditional highlighting rules are not supported and were removed: Equal or Above Average, Equal or Below Average.
Conditional highlighting rules using standard deviation are not supported and were removed.
Conditional highlighting rules using formulas are not supported and were removed.
The following conditional highlighting rules are not supported and were removed: Contains Errors.
The following conditional highlighting rules are not supported and were removed: Contains No Errors.
Conditional highlighting rules containing unsupported operators were removed.
Conditional highlighting rules using unsupported style attributes were removed.
The conditional formatting containing an unsupported time period was removed.
Unsupported conditional highlighting rules were removed.
The cell was updated with a more accurate duration format. You may want to review formulas that refer to this cell.
-[TSTImportWarningSet TSTImportFormulaWarningTypeToArchive]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTImportWarningSet.mm
Unhandled FormulaWarningType encountered while saving to archive.
v32@?0@"NSString"8Q16^B24
-[TSTWrappedFormula nodesToCheckForBareArgumentPlaceholders]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTWrappedFormula.mm
Expected function node for %@ at the top of parse tree
-[TSTWrappedFormula insertFormulaText:includeWhitespace:]
-[TSTWrappedFormula reparseWithStorage:adjustExpressionTree:]_block_invoke
Unexpected attachment passed to block
-[TSTWrappedFormula reparseWithStorage:adjustExpressionTree:]
-[TSTWrappedFormula reparseWithStorage:adjustExpressionTree:]_block_invoke_2
Expected top function node to be at index 0
Expected top function node to end at index %lu
expected non-top node to be past index %lu
TSCEErrorTypeKey
TSCEFunctionNameKey
TSCEExtraInfoStringKey
TSCEExtraInfoNumberKey
kTSCEDateAsTimeIntervalKey
kTSCEOwnerUIDKey
kTSCERangeReferenceKey
kTSCEReferenceArrayKey
kTSCEAnyReferenceKey
kTSCEArgumentIndexKey
kTSCEExpectedTypeKey
kTSCEFoundTypeKey
TSCELowerBoundKey
TSCEUpperBoundKey
TSCELowerBoundInclusiveKey
TSCEUpperBoundInclusiveKey
TSCEValueToMatchKey
TSCEArgumentsAscendingKey
TSCEEqualityPermittedKey
TSCEAfterMatchKey
TSCEOccurrenceKey
TSCEMatchsFoundKey
TSCEPreviousMatchKey
TSCEPreviousValueIsRegexKey
TSCEProblemExpressionStringKey
TSCEProblemModeKey
TSCEProblemNodeIsCellReferenceKey
TSCEAttachmentErrorRaisedInTextCellKey
TSCEInvalidReferenceToMergeKey
TSCEReferenceEndCellInvalidKey
TSCEUnitNameKey
TSCEChooseIndexKey
kTSCEMaxArgsAllowedKey
kTSCEArgsProvideddKey
+[TSCEError errorWithDictionary:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEError.mm
Must have errorTypeKey set to use this API
-[TSCEError displayStringWithCalculationEngine:forTable:andCellID:]
Unknown error.
\U201C%@\U201D isn\U2019t a valid cell reference.
\U201C%@\U201D isn\U2019t a valid function name.
Numbers can\U2019t be divided by zero.
The formula calculates zero to the power of zero, which can\U2019t be computed.
The operator \U201C%@\U201D
The function \U201C%@\U201D
Argument %d of %@
 can\U2019t be %@.
 can\U2019t take %@.
 expects %@
, but cell %@ contains %@.
 but found \U201C%@.\U201D
 but found an empty cell.
This formula can\U2019t reference its own cell, or depend on another formula that references this cell.
Running Total In requires field to be a grouping column.
Argument %d of %@ must refer to a pivot table.
Argument %d of %@ must refer to an aggregate value of the pivot table.
Argument %d of %@ must refer to a grouping column of the pivot table.
invalid number of arguments error exception
spec not found for function %@
one argument
%d arguments
%@ requires at least %@.
%@ requires at least %@, but was given %@.
%@ requires between %d and %d arguments, but was given %@.
%@ requires %@, but was given %@.
%@ requires its arguments to result in a number within the valid range.
The formula contains a number outside the valid range.
The formula contains an invalid reference.
The formula refers to a cell which contains an error.
Cell \U201C%@\U201D contains an error.
Argument %d of %@ is invalid.
The formula contains a page number or page count, which aren\U2019t allowed in formulas.
The formula refers to a cell with a shape or media file. This isn\U2019t supported.
There are no cells in the intersection of the ranges \U201C%@.\U201D
%@ must have a cell or range reference as an argument.
%@ must have a cell reference as an argument.
%@ must have a range reference as an argument.
%@ couldn\U2019t find the value \U201C%@\U201D.
%@ must begin searching from a number within the length of the search text.
Arguments %d and later
Argument %d
Can't be out of bounds without bounds specified
%@ in %@ must be greater than or equal to %g.
%@ in %@ must be greater than %g.
%@ in %@ must be less than or equal to %g.
%@ in %@ must be less than %g.
%@ in %@ must be greater than or equal to %g and less than or equal to %g.
%@ in %@ must be greater than or equal to %g and less than %g.
%@ in %@ must be greater than %g and less than or equal to %g.
%@ in %@ must be greater than %g and less than %g.
Arrays can contain only constant values.
%@ couldn\U2019t find the requested value.
The two ranges in %@ must be the same size.
The formula contains a list where a single argument is expected.
The formula\U2019s arguments can only include one date value.
%@ requires all arguments to be of the same type, either dates, numbers, or durations.
MODE requires that its arguments contain repeated values.
You must specify a value for all the required arguments.
The function doesn\U2019t allow empty arguments.
Argument %d can\U2019t be empty.
The range %@ can\U2019t be used as a single value.
All arguments to %@ must be the same length.
The formula can\U2019t be calculated because the resulting text would be too long.
Lists of references can\U2019t intersect.
%@ requires %@, but none were found.
no bigger than
at least as big as
smaller than
larger than
Argument %d must be %@ argument %d.
Argument %d must be different from argument %d.
The first argument of %@ must be an index of another argument, but there is no argument at index %d.
An empty string can\U2019t be used as an argument of %@.
%@ requires a string specifying a number, but found \U201C%@\U201D instead.
%@ requires a string specifying a date/time value, but found \U201C%@\U201D instead.
%@ requires both arguments to be positive or negative.
Argument %d of %@ must sum to 1.
R1C1-style references aren\U2019t supported.
The date returned by the formula isn\U2019t valid.
The time returned by the formula isn\U2019t valid.
Vector arguments can contain only one row or column.
%@ requires that all arguments be between 0 and 1.
All arguments must be equal to or larger than zero.
Argument %d of %@ can\U2019t be equal to zero.
%@ requires the position argument to be smaller than or equal to the size of the array.
Argument %d of %@ must be equal to 1, 2, or 4.
Argument %d of %@ must be equal to 0 or 1.
Argument %d of %@ must be equal to 1 or 2.
SUBTOTAL requires that its first argument be between 1 and 11 or 101 and 111.
%@ couldn\U2019t reach a result.
%@ couldn\U2019t reach a result. Try adjusting the estimate argument.
%@ requires multiple pairs of cash-flows and dates.
%@ requires dates to be on or after the starting date.
%@ requires at least one positive and one negative argument.
%@ refers to an empty cell.
%@ refers to %@, which is empty.
The operator \U201C-\U201D can\U2019t subtract a date from a number.
Different currency types can\U2019t be compared.
Durations can\U2019t be compared to other data types.
%@ requires that its arguments use the same type of unit.
%@ requires that arguments %@ use the same type of unit.
Argument %d of %@ can\U2019t be a currency or duration.
Arguments %d and later of %@ can\U2019t contain currency or duration values.
Argument %d of %@ can\U2019t be a currency.
Arguments %d and later of %@ can\U2019t be currency values.
Argument %d of %@ can\U2019t be a duration.
The function \U201C%@\U201D expects %@ but found a duration.
%@ requires that all monetary values use the same currency.
Values being summed by %@ must be either all durations or all numbers, unless one value is a date.
Argument %d of %@ requires at least %@ values.
%@ requires an odd number of arguments, at least three.
%@ requires an even number of arguments.
%@ requires that all range arguments are the same size.
Arrays can\U2019t be empty.
\U2018%@\U2019 isn\U2019t a valid character in the base %d numeral system.
\U201C%@\U201D isn\U2019t a valid unit.
%@ requires that all its arguments have the same type of unit (for example, time or temperature).
Prefixes require metric units. The unit \U201C%@\U201D isn\U2019t metric.
The number to convert has units that conflict with the units to convert from.
The index position in the array must contain data.
The x and y arrays must have the same length and width.
The x and y arrays must have the same length.
The x and y arrays must have the same width.
RECEIVED must evaluate to a value greater than zero.
MATCH requires the third argument to be equal to 1, 0, or -1.
Formulas can\U2019t be longer than 8,192 characters.
RANDBETWEEN requires that both durations have the same maximum unit.
%@ requires all values in argument %d to be numbers.
The first argument of CHAR must represent a valid character, generally between 32 and 65535.
When using duration values with NORMDIST, the cumulative argument must be TRUE.
An x variable is too highly correlated with one or more other x variables for LINEST to calculate a result.
You can\U2019t compare %@ with %@ because their data types are different.
%@ can\U2019t be given multiple durations.
LINEST requires more data points to calculate a result.
%@ requires all numbers in argument %d to be positive.
PERCENTRANK requires that argument 2 be within the range specified in argument 1.
PERCENTRANK.EXC requires that argument 2 be within the range specified in argument 1.
Location services are not enabled on the device.
Bearing information can\U2019t be determined right now.
Location service is unable to obtain a location value right now.
Access to the location service was denied by the user.
The network was unavailable or a network error occurred.
Bearing information can\U2019t be determined due to strong interference from nearby magnetic fields.
The latitude and longitude values are invalid
The altitude value is invalid
The bearing value is invalid
The formula contains an unsupported function
%@ requires at least one TRUE condition, but none were found.
The requested STOCK attribute is invalid.
The requested CURRENCY attribute is invalid.
The requested STOCKH attribute is invalid.
The requested CURRENCYH attribute is invalid.
The requested historical date is invalid or is in the future.
There is no historical data on the requested date. The next available is on %@.
There is no historical data in the entire year of the requested date. Historical data may not be available for all securities.
No information about the specified currency pair.
Unable to retrieve information from the remote data server.
Data for the \U2018%@\U2019 attribute isn\U2019t available for the selected symbol.
\U2026
Ask Price data is not available.
Bid Price data is not available.
Ask Size data is not available.
Bid Size data is not available.
The formula refers to a cell without a formula.
The requested REFERENCE.NAME attribute is invalid.
Argument %d of %@ must be an integer, not a decimal number.
Arguments %d and %d of %@ must be integers, not decimal numbers.
Arguments %d, %d, and %d of %@ must be integers, not decimal numbers.
The %@ function raised an error with %d arguments and something unexpected happened. We shouldn't be here.
No specified error, type %d %{public}@ dictionary: %{public}@
#NAME!
#DIV/0!
#VALUE!
#CIRC!
#ARGS!
#NUM!
#SYN!
-[TSCEError rangeRef]
Wrong type stored for kTSCERangeReferenceKey in errorDictionary: %@
+[TSCEError typeErrorForValue:functionSpec:argumentIndex:locale:]
No functionName available from functionSpec: %{public}@
-[TSCEError isNativelyEqual:]
v32@?0@"TSCERemoteDataSpecifier"8@"TSCECellValue"16^B24
v32@?0Q8@"NSMutableDictionary"16^B24
-[TSCERemoteDataValueMap updateWithValuesFromMap:overwriteValues:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCERemoteDataValueMap.mm
-[TSCERemoteDataValueMap initFromArchive:]
Failed to unarchive value for %@!
@"TSTExpressionNode"16@?0@"TSTExpressionNode"8
-[TSTTextStyleHandle initWithTextStyle:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTextStyleHandle.m
expected text style got %{public}@
Fatal Assertion failure: %{public}s %{public}s:%d Unarchiving is incomplete. Equality comparison is bogus and can lead to document corruption. Crashing now.
-[TSTPopUpMenuModel isEqualToChoices:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTPopUpMenuModel.mm
Unarchiving is incomplete. Equality comparison is bogus and can lead to document corruption. Crashing now.
TSTPopUpMenuModel: (
-[TSTPopUpMenuModel p_mcListTypeForArgType:]
Unexpected TSCEArgumentType for popup list.
-[TSTPopUpMenuModel loadFromArchive:]
We are not handling this type of TSCECellValue
TSTPopUpMenuModel Archiving: Only one of item and tsce_item should exist
TSTPopUpMenuModel Archiving: No items to unarchive
Item 1
Item 2
Item 3
+[TSTPopUpMenuModel popupMenuModelReorderingModel:fromIndex:toIndex:]
Bad index
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTIteratorBase.mm
virtual TSCEASTElement *TSCEASTIteratorBase::visitNode(TSCEASTElement *)
TSTArchives.sos.proto
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/messages/src/TSTArchives.sos.pb.cc
-[TSTTableDataObject loadFromArchive:unarchiver:completion:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableDataObject.mm
-[TSTTableDataObject dropReferences:]
dropping data list ref count by more than the total count
-[TSTTableDataObject estimateByteSize]
refCount: %d   commentStorage: %@
refCount: %d   _conditionalStyleSet: %@
-[TSTTableDataCustomFormat encodeToArchive:archiver:]
Should never archive a new custom format datalist!
refCount: %d   _customFormat: %@
refCount: %d   format: %@
-[TSTTableDataCellSpec loadFromArchive:unarchiver:completion:]
Shouldn't find unsupported formulas in documents. This document is corrupted.
refCount: %d   _cellSpec: %@
refCount: %d   _formulaError: %@
refCount: %d   importWarningSet: %@
refCount: %d   popUpMenuModel: %@
v16@?0@"TSTRichTextPayload"8
refCount: %d   storage: %@
-[TSTTableDataString initObjectWithString:refCount:]
created a string table entry with a nil string
refCount: %d   string: %@
v16@?0@"TSSStyle"8
refCount: %d   _style: %@
BOOL TSCEBitGridTile::clearBit(TSUColumnOrRowIndex, TSURowIndex)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEBitGrid.mm
clearBit, out of range [%d,%d]->[%d,%d]: request was [%d,%d]
TSUColumnOrRowIndex TSCEBitGridTile::countInRange(TSUColumnOrRowIndex, TSURowIndex, TSUColumnOrRowIndex, TSURowIndex, const TSCEBitGridTile *) const
countInRange: first row/column must be <= last row/column
countInRange: exclude tile does not correspond to this tile.
countInRange: how did we end up masking off *all* bits?
uint8_t findLowestBitNum(uint32_t)
Can't find a bit set in zero.
Can't find a lowestBitOnly in zero.
TSCEInternalCellReference: #%lu::%@
-[TSTCellDictionary setCell:atCellID:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellDictionary.mm
can't insert an invalid cell ID
-[TSTCellDictionary cellAtCellID:]
can't look up an invalid cell ID
-[TSTCellDictionary hasCellAtCellID:]
v32@?0{_NSRange=QQ}8@"TSTConcurrentSparseCellList"24
TSCEWarningClassKey
TSCEWarningTypeKey
TSCEWarningContextEntityKey
TSCENativeWarningClass
TSCEBlankReferencingWarning
TSCENonNumericReferencingWarning
TSCEComparisonWarning
TSCEInvalidHyperlinkWarning
TSCENonintegerISODDWarning
TSCENonintegerISEVENWarning
TSCEMonthOutOfRangeWarning
TSCEDayOutOfRangeWarning
TSCEBoolToNumberConversionWarning
TSCEMismatchedSizesWarning
TSCELossOfUnitsWarning
TSCEAutomaticUnitConversionWarning
SFTGlobalID_
<%@ %p with %d key/value pairs 
  { key: string   : %@
         width    : %f
         height   : %f
         vertical : %@
         direction : %@
wpColumn:  object : %@
           string : %@
  },
v32@?0@"TSTLayoutContentCachedKey"8@"TSWPColumn"16^B24
TSCEExtraInfoKey
TSCEArgument1Key
TSCEArgument2Key
TSCEArgument3Key
TSCESyntaxError
TSCEInvalidTokenInFormulaError
TSCEUnknownError
TSCEUnknownFunctionError
TSCEUnknownLabelError
TSCEInvalidReferenceError
TSCEDivideByZeroError
TSCEZeroToPowerOfZeroError
TSCECircularReferenceError
TSCEValueError
TSCENumberOfArgumentsError
TSCETooManyArgumentsError
TSCENumberError
TSCEErrorReferenceError
TSCEInvalidArgumentsError
TSCEAutoNumberAttachmentError
TSCEAttachmentError
TSCEMissingTableError
TSCEInvalidIntersectionError
TSCENotAReferenceError
TSCENotACellReferenceError
TSCENotARangeReferenceError
TSCEMatchNotFoundError
TSCERegexMatchNotFoundError
TSCEOutOfBoundsArgumentError
TSCEInvalidArrayContentsError
TSCEValueNotAvailableError
TSCEArgumentSetUsedOutOfContextError
TSCEDifferentNumberOfDataPointsError
TSCEInvalidDateManipulationError
TSCEMixedTypeManipulationError
TSCENoModeError
TSCEEmptyArgumentError
TSCEEmptyArgumentSpecificError
TSCEInvalidHyperlinkError
TSCEDifferentNumberOfElementsError
TSCEStringTooLongError
TSCEUnionInsideIntersectionError
TSCEStartNumberExceedsStringLengthError
TSCENoSuitableArgumentsError
TSCEInvalidArgumentRelationshipError
TSCEInvalidArgumentEqualityRelationshipError
TSCEInvalidIndexForChooseError
TSCENonEmptyStringRequiredError
TSCEStringDoesNotRepresentANumberError
TSCEStringDoesNotRepresentDateError
TSCESignsMustMatchError
TSCERangeDoesNotSumToOneError
TSCEUnsupportedR1C1Error
TSCEInvalidDateError
TSCEInvalidTimeError
TSCENotAVectorError
TSCEInvalidProbabiltyError
TSCENumberSmallerThanZeroError
TSCEArgumentEqualsToZeroError
TSCEPositionLargerThanArrayError
TSCEInvalidFrequencyError
TSCEInvalidTypeError
TSCEInvalidTailError
TSCEInvalidSubtotalFunctionNumberError
TSCENumberDoesNotConvergeError
TSCENumberDoesNotConvergeWithEstimateError
TSCEReferenceToEmptyCellError
TSCENumberMinusDateError
TSCETooFewDataPointsError
TSCEDateEarlierThanStartingDateError
TSCEOnlyPositiveOrNegativeError
TSCEInvalidCurrencyComparisonError
TSCEInvalidComparisonError
TSCEMismatchedUnitsError
TSCEUnitsNotAllowedError
TSCECurrencyNotAllowedError
TSCEDurationNotAllowedError
TSCEMismatchedCurrenciesError
TSCESumMixedDurationsAndUnitlessWithoutADateError
TSCENotEnoughInputsError
TSCEInvalidArgumentPairingsError
TSCERangeSizeMismatchError
TSCEEmptyArrayError
TSCEInvalidBaseCharacterError
TSCEInvalidUnitStringError
TSCEDifferentDimensionsError
TSCENonMetricUnitPrefixError
TSCEConvertOriginUnitMismatchError
TSCEArrayElementNoDataError
TSCEDataInvalidDimensionsError
TSCEDataInvalidLengthError
TSCEDataInvalidWidthError
TSCENegativeReceivedAmountError
TSCEInvalidMatchModeError
TSCEFormulaTooLongError
TSCEMismatchedMaxUnitsError
TSCEGridValueNotNumberError
TSCECharInputOutOfBoundsError
TSCENormdistPDFDurationError
TSCELinestHighlyCorrelatedVariableError
TSCEComparisonTypeError
TSCEMultipleDurationsError
TSCELinestMatrixUnderdeterminedError
TSCENegativeVectorValueError
TSCEPercentRankInputOutOfRangeError
TSCEPercentRankExcInputOutOfRangeError
TSCELocationServicesNotEnabledError
TSCELocationHeadingUnknownError
TSCELocationUnknownError
TSCELocationUserDeniedError
TSCELocationNetworkError
TSCELocationHeadingFailureError
TSCEInvalidLatitudeLongitudeError
TSCEInvalidAltitudeError
TSCEInvalidHeadingError
TSCEInvalidRegexError
TSCEUnsupportedFunctionError
TSCEUnsupportedFeatureError
TSCENoConditionIsTrueError
TSCEInvalidLiveStockAttributeError
TSCENotAReferenceToAFormulaError
TSCEInvalidReferenceNameAttributeError
TSCEInvalidLiveCurrencyAttributeError
TSCEInvalidHistoricalStockAttributeError
TSCEInvalidHistoricalCurrencyAttributeError
TSCEInvalidHistoricalDateError
TSCENoTradingInformationError
TSCEInvalidStockCodeError
TSCEInvalidCurrencyPairError
TSCERemoteDataServerError
TSCERemoteDataUnavailableError
TSCENotReadyError
TSCEDisallowedStockModeError
TSCEInvalidRangeUsageError
TSCEMissingRunningTotalInFieldError
TSCEMissingPivotTableError
TSCEInvalidAggregateColumnError
TSCEInvalidGroupingColumnError
TSCEInvalidDecimalNumberError
TSCEAbortedError
void TSCECellRecord::switchToEdgeListStructure(TSCECellRecordEdgeLists *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECellRecord.mm
Overriding existing _edges pointer
void TSCECellRecord::addEdge(const TSCEInternalCellReference &, BOOL)
Should already have an _edges structure allocated
void TSCECellRecord::readExpandedPrecedentsWithOwners(const TSCE::ExpandedEdgesArchive &)
void TSCEEvaluateViewTractRefWithContext(TSCEViewTractRef *__strong, TSCEEvaluationContext &)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTNodeArrayUtilities.mm
TSCEValue TSCEEvaluateASTNodeArrayWithContext(const TSCEASTNodeArray *, TSCEEvaluationContext &)
Not expecting to see UID references during evaluation.
%d is not a valid node tag, seen in: %{public}@
TSCEEvaluateASTNodeArrayWithContext ended up with an empty evaluation stack for %@
void TSCEASTNodeArrayEncodeToArchiveProcessFirstNode(TSCE::ASTNodeArrayArchive *, TSPArchiver *__strong, TSCEASTElement *, TSCEASTElementIterator *, std::vector<TSCENodeArrayEncodingState> &, TSCEASTNodeArrayArchiveOptionsEnum)
verifySpanningSettings failed while archiving, with options: %d
TSCEASTFeatureNodesSeen TSCEASTNodeArrayEncodeToArchiveWithOptions(TSCE::ASTNodeArrayArchive *, TSCEASTNodeArray *, TSPArchiver *__strong, TSCEASTNodeArrayArchiveOptionsEnum)
TSCEASTNodeArray *TSCEFormulaUnarchivingContext::createNodeArrayFromArchive(const TSCE::ASTNodeArrayArchive &)
unarchived invalid spanning settings
can't end an embedded node array with no previous begin
can't unarchive a let node with insufficient embedded node arrays
TSTArchives.proto
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/messages/src/TSTArchives.pb.cc
-[TSCEEvalRef scalarValueForEvalContext:permitAccessInsideMergeRegions:fetchRichTextAttributesIfPlainText:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEEvalRef.mm
v32@?0@"NSNumber"8@16^B24
v16@?0@"NSMutableDictionary"8
bdtr
-[TSTCell initWithLocale:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCell.mm
-[TSTCell copyToCell:]
srcStorage
-[TSTCell copyValueAndFormatToCell:]
-[TSTCell cellByApplyingCellDiff:toTable:andUpdateInverse:optionalConcurrentStylesheet:]
-[TSTCell setProvidedValueTypeBeforeUpgrade]
Provided cells only allowed before Pre-UFF upgrade.
-[TSTCell formattedValue]
Cell number format failed to produce return string.
Cell currency format failed to produce return string.
Impossible cell value type reached.
%@ Total
-[TSTCell stringForEditing]
-[TSTCell bakeFormulaToValue]
can't bake non-formula cells
-[TSTCell setConditionalStyle:clearingID:]
v40@?0@"TSWPAttachment"8Q16Q24^B32
-[TSTCell interactionType]
Cell must be inflated to determine interaction type
-[TSTCell hasStockFormulaForStockUI]
Cell must be inflated to ask if it contains a stock formula
-[TSTCell popupChoiceIndex]
Not a popup cell.
-[TSTCell applyPopupChoiceIndex:]
Unexpected argument type for popup TSCECellValue.
Cannot apply popup choice
v40@?0@8{_NSRange=QQ}16^B32
unhandled formula result type found.
-[TSTCell copyAllFormatsToCell:]
-[TSTCell setFormatID:forStorageFlag:]
Inappropriate storage flag.
-[TSTCell formatForStorageFlag:]
-[TSTCell formatIDForStorageFlag:]
<Unknown>
<cellSpec: %@>
<cellSpec not populated>
bool TSCEReferenceSet::operator==(const TSCEReferenceSet &) const
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEReferenceSet.mm
Can't compare reference sets from different calcEngines
BOOL TSCEReferenceSet::isEqualToDepTrackerPrecedents(const TSCEReferenceSet &) const
void TSCEReferenceSet::insertRef(TSCEReferenceType)
Inserting these refTypes requires accompanying data, refType was %d
void TSCEReferenceSet::insertRef(const TSCEInternalCellReference &)
Dependency tracker is required to use this method
void TSCEReferenceSet::insertRef(const TSCESpanningRangeRef &)
Why are we getting invalid tableUID here?
void TSCEReferenceSet::removeRef(TSCEReferenceType)
Removing these refTypes requires accompanying data, refType was %d
bool TSCEReferenceSet::containsRef(const TSCEInternalCellReference &) const
void TSCEReferenceSet::foreachInternalCellRef(__strong TSCEForEachInternalCellRefBlock) const
-[TSTTableGroupSortOrderUID groupSortOrderByReplacingRuleAtIndex:withRule:withTableInfo:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableGroupSortOrderUID.mm
v32@?0@"TSTTableGroupSortRuleUID"8Q16^B24
-[TSTTableDataStore decrementColumnCellCount:byAmount:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableDataStore.mm
Can't drive cell count below zero!
-[TSTTableDataStore getCell:atCellID:]
Retrieving corrupt cell storage data for cellID:%@
void p_performRichTextStorageDOLC(TSTTableDataStore *__strong, TSTCell *__strong, TSTCellStorageRef)
newStorage.documentRoot
void p_UpdateDataListsForNewCell(TSTTableDataStore *const __strong, TSTCell *const __strong, TSTCellStorageRef, const TSCEOwnerUID &, const __strong id<TSCEFormulaReplacing>, BOOL)
Cell of string value type has no value. Setting to NoContent.
Handed a bad string key! Setting to NoContent.
Expected a formula cell spec
Handed a bad formula key! Repairing.
Expected a control cell spec
Handed a bad formula error key! Repairing.
Handed a bad text storage key! Repairing.
Handed a cell comment key! Repairing.
Handed an import warning set key! Repairing.
Handed a bad cell style key! Repairing.
Handed a bad text style key! Repairing.
Handed a bad conditional style key! Repairing.
-[TSTTableDataStore _setCell:atCellID:tableUID:calculationEngine:conditionalStyleOwner:ignoreFormula:clearImportWarnings:richTextDOLCHint:]
Failed to get tile for cell!
-[TSTTableDataStore setCellMap:tableUID:calculationEngine:conditionalStyleOwner:ignoreFormulas:skipDirtyingNonFormulaCells:doRichTextDOLC:]_block_invoke
Failed to get a tile while setting a map!
preBNCPopupTable
-[TSTTableDataStore resolveDataListKeysForPreBNCCell:suppressTransmutation:sourceStorageVersion:]
String cell has bad string!
StringTable
Formula cell has bad formula!
FormulaTable
NULL formula
FormulaErrorTable
RichTextTable
CommentTable
ImportWarningTable
StyleTable
ConditionalStyleTable
preBNCFormatTable
-[TSTTableDataStore resolveDataListKeysForCell:cache:suppressTransmutation:sourceStorageVersion:]
This cell is corrupt. It has a key for both formula and control.
ControlCellSpecTable
FormatTable
Fatal Assertion failure: %{public}s %{public}s:%d Datalist reference is unexpectedly nil during load!
-[TSTTableDataStore _loadDatalist:forLazyReference:completionBlock:]
Datalist reference is unexpectedly nil during load!
Fatal Assertion failure: %{public}s %{public}s:%d Failed to load a lazy datalist in TSTTableDataStore: %@ in table: %@ with error: errorClass=%{public}@, domain=%{public}@, code=%zd, %{public}@hints=%{public}@ (%@) 
Failed to load a lazy datalist in TSTTableDataStore: %@ in table: %@ with error: errorClass=%{public}@, domain=%{public}@, code=%zd, %{public}@hints=%{public}@ (%@) 
v16@?0@"TSTTableDataList"8
-[TSTTableDataStore _loadRichTextDataList]_block_invoke
Expected non-nil richTextParentInfo back pointer. Should have been set at initialization.
-[TSTTableDataStore addPasteboardCustomFormatsToDocumentAndTableReturningBadIDs]_block_invoke
Unexpected corrupt custom format being pasted.
v16@?0@"TSTTableHeaderStorageBucket"8
v16@?0@"TSTMergeRegionMap"8
v28@?0I8@"TSKFormat"12^B20
%@, key:%d, cellCount:%d, datalist count:%d
%@, key:%d, cellCount:%d, datalist count:0
v32@?0@"TSTTableDataList"8^v16@"NSString"24
condStyles
styles
cellSpecs
f-errors
rich text
formats
comments
imp warns
DataList RefCount Audit good:%d bad:%d dead:%d
Datalist Duplication Audit
Conditional Styles list has dupes.
Strings List has dupes.
Styles List has dupes.
Formula List has dupes.
Control Cell Spec List has dupes.
Format List has dupes.
Import Warnings List has dupes.
ColumnRowCellCount Audit
Cell count mismatch at row %d: header has %td, row has %td
Cell count mismatch at column %d: header should have %td, has %td
-[TSTTableDataStore updateDataListsConcurrentlyWithConcurrentCellMap:clearImportWarnings:]_block_invoke
v24@?0@"TSTCell"8@"TSTCell"16
-[TSTTableDataStore updateDataListsConcurrentlyWithConcurrentCellMap:clearImportWarnings:]_block_invoke_2
-[TSTTableDataStore updateDataListsConcurrentlyWithConcurrentCellMap:clearImportWarnings:]_block_invoke_3
-[TSTTableDataStore updateDataListsConcurrentlyWithConcurrentCellMap:clearImportWarnings:]_block_invoke_4
-[TSTTableDataStore updateDataListsConcurrentlyWithConcurrentCellMap:clearImportWarnings:]_block_invoke_5
-[TSTTableDataStore updateDataListsConcurrentlyWithConcurrentCellMap:clearImportWarnings:]_block_invoke_6
cells[idx]
v40@?0B8@"TSKFormat"12I20@"NSIndexSet"24^v32
-[TSTTableDataStore setCellsConcurrently:tableUID:calculationEngine:conditionalStyleOwner:ignoreFormula:clearImportWarnings:]_block_invoke
the newCells array and the set of column indexes should be the same size
{vector<long, std::allocator<long>>=^q^q{__compressed_pair<long *, std::allocator<long>>=^q}}32@?0@"TSTTableTileRowInfo"8^v16^v24
-[TSTTableDataStore setCellsConcurrently:tableUID:calculationEngine:conditionalStyleOwner:ignoreFormula:clearImportWarnings:]_block_invoke_2
newFormulaSpec
v18@?0{TSUModelColumnIndex=S}8q10
v36@?0{TSUModelRowIndex=I}8q12@"TSTTableTile"20@"TSTTableTileRowInfo"28
v32@?0@"TSTTableTile"8@"NSMutableIndexSet"16^B24
-[TSTTableDataStore accumulateCurrentCellsConcurrentlyInRow:rowInfo:atColumns:usingCellCreationBlock:]
-[TSTTableDataStore tsceValueFromCell:atCellID:tableUID:]
unhandled table cell type found
-[TSTTableDataStore tsceValueForCellStorageRef:cellCoord:hostTableUID:outValue:]
Can't get a value from a null cell reference!
TSUDecimal TSTCellStorageDecimalValue(TSTCellStorage *)
Asked for TSUDecimal value from an inappropriate cell.
BOOL TSTCellStorageBoolValue(TSTCellStorage *)
Asked for bool value from non-bool cell.
double TSTCellStorageRawDateValue(TSTCellStorage *)
Asked for date value from non-date cell.
-[TSCEValueGrid initWithColumnRange:rowRange:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEValueGrid.mm
Can't set an extent with invalid ranges
-[TSCEValueGrid clearValueAtCoord:]
Can't clear value with a spanning coordinate: %@
-[TSCEValueGrid valueAtCoord:]
Can't read value with a spanning coordinate: %@
-[TSCEValueGrid valueAt1DIndex:]
Index %lu exceeds area: %lu
Can't use valueAt1DIndex: with no dimensions set
-[TSCEValueGrid expandToIncludeCoord:]
Can't expand with a spanning coordinate: %@
-[TSCEValueGrid setValue:atCoord:]
Can't set a value at a spanning coordinate: %@
-[TSCEValueGrid setEmptyValueAtCoord:]
-[TSCEValueGrid subGridAtGridCoord:width:height:]
can't access beyond the end of a vector
Exceeded rowLimit: %d
TSCEValue TSCEFunction_AVERAGEA::evaluateWithContext(TSCEEvaluationContext &)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEStatisticalFunctions.mm
Have to set the type of vector appropriately.
TSCEValue TSCEFunction_CRITBINOM::evaluateWithContext(TSCEEvaluationContext &)
CRITBINOM binary search has a bug.
TSCEValue TSCEFunction_FORECAST::evaluateWithContext(TSCEEvaluationContext &)
Should have at least one x if we're going to successfullly compute FORECAST
TSCEValue TSCEFunction_FREQUENCY::evaluateWithContext(TSCEEvaluationContext &)
static TSCEValue TSCEFunction_GEOMEAN::geometricMeanOfVector(TSCEGrid *, TSCEFunctionSpec *__strong, int, NSArray *__strong, TSCEEvaluationContext *)
static TSCEValue TSCEFunction_HARMEAN::harmonicMeanOfVector(TSCEGrid *, TSCEFunctionSpec *__strong, int, NSArray *__strong, TSCEEvaluationContext *)
static TSCEValue TSCEFunction_LARGE::evaluateWithContext(TSCEEvaluationContext *, TSCEFunctionSpec *__strong, BOOL, BOOL, BOOL)
Out of memory
static TSCEValue TSCEFunction_MAX::extremum(TSCEEvaluationContext *, TSCEFunctionSpec *__strong, int, BOOL, BOOL)
TSCEValue TSCEFunction_MEDIAN::evaluateVector(TSCEFunctionSpec *__unsafe_unretained, TSCEGrid *, TSCEEvaluationContext *)
TSCEValue TSCEFunction_MODE::evaluateVector(TSCEFunctionSpec *__unsafe_unretained, TSCEGrid *, TSCEEvaluationContext *, const TSCEFormat &)
In function MODE, should not reach here.
TSCEValue TSCEFunction_MODE_MULT::evaluateWithContext(TSCEEvaluationContext &)
1, 2, and 3
2 and 3
static TSCEValue TSCEFunction_PERCENTILE::computeWithVector(const TSCEGrid &, const TSUDecimal &, bool, bool, TSCEFunctionSpec *__strong, TSCEEvaluationContext *)
1, 3, and 4
1 and 3
TSCEGrid TSCEFunction_TTEST::subtractVectors(TSCEGrid &, TSCEGrid &, TSCEEvaluationContext &)
Vectors have different number of data points
Vectors have mismatched dimensions.
TSCEValue TSCEFunction_TTEST::evaluateWithContext(TSCEEvaluationContext &)
We probably have a date returned as the variance of these inputs. We should have raised an error earlier in the subtraction code.
Undefined t-test type passed to TTEST. Please file a bug.
1 and 2
-[TSCEReferenceBackedGrid string:argIndex:locale:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEReferenceBackedGrid.mm
TSCEReferenceBackedGrid doesn't have a meaningful string() to provide
-[TSCEReferenceBackedGrid valueAtGridCoord:accessContext:]
-[TSTCommentHosting initWithStorage:forTableInfo:cellUID:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCommentHosting.mm
Expecting valid cell UID!
-[TSTCommentHosting initWithStorage:forTableInfo:baseCellCoord:]
Expecting valid cell ID!
TSTTextCellColumnAutocomplete
-[TSTFormulaRewriteSpec initFromMessage:unarchiver:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTFormulaRewriteSpec.mm
Move rewriteSpec should have AUX rowColumnInfo in archive
Sort/Reorder rewriteSpec should have AUX rowColumnInfo in archive
virtual TSCEASTElement *TSCEASTRowColumnUidMapRewriter::anyReferenceNode(TSCEASTRelativeCoordRefElement *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTRowColumnUidMapRewriter.mm
Expected to be called on uid-form formulas only.
TSTStylePropertyArchiving.proto
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/messages/src/TSTStylePropertyArchiving.pb.cc
-[TSTArchivedAutofillSelection setSelection:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTArchivedAutofillSelection.mm
Wrong type of class %@ (expected TSTAutofillSelection)
-[TSTTableRep hyperlinkRegions]_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableRep.mm
Bounds of hyperlink {%@} are not finite
v16@?0^{CGContext=}8
v16@?0@"TSDTexturedRectangle"8
+[TSTTableRep p_countOfIdenticalCellsBetweenOutgoingTableInfo:incomingTableInfo:]
numberOfColumns not equal!
+[TSTTableRep magicMoveAttributeMatchPercentBetweenOutgoingObject:incomingObject:mixingTypeContext:]
equalCellCount(%d) > totalCellCount(%d)!
delegate
void TSTTableRepPrepareToDrawLayoutSpace(TSTTableRep *__strong _Nonnull, TSTLayoutSpace *__strong _Nullable, CGContextRef _Nullable)
space
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}
WARNING: invalid cell fill %@ %@
v32@?0@8@16^B24
-[TSTTableRep p_drawGroupingArrowInContext:contentFrame:cell:cellID:groupingArrowState:alignedClipFrame:verticalAlignment:wpColumn:]
should only be called on grouping cells
should only be called on tables that are grouped
{%@->%@}
{invalid, invalid}
{invalid, %u}
{%u, invalid}
{%u, %u}
TSTCellRange TSTTableRepDrawIndividualCellContent(TSTTableRep *__strong, TSTLayoutSpace *__strong, TSTGridRange, TSTCell *__strong, TSTCellID, __strong id, __strong id<TSTCellIteratorData>, TSTCellRange, BOOL, NSMutableArray<TSTTableBadge *> *__strong, BOOL, TSWPSelection * _Nullable __strong, CGContextRef)
No TSWPColumn layout rock found.
void TSTTableRepDrawGridRange(TSTTableRep *__strong, TSTLayoutSpace *__strong, TSTGridRange, TSTAnimation *__strong, CGContextRef)
background fill is not supported yet
yyFlexLexer::yylex invoked but %option yyclass used
virtual int TSTDefaultLexer::yylex()
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTDefaultLexer.lmm
Unable to lex tokenAttachment.
fatal flex scanner internal error--no action found
fatal flex scanner internal error--end of buffer missed
fatal error - scanner input buffer overflow
input in flex scanner failed
out of dynamic memory in yy_get_next_buffer()
out of dynamic memory in yy_create_buffer()
out of dynamic memory in yyensure_buffer_stack()
Starting parse
Stack size increased to %lu
Entering state %d
Reading a token: 
Now at end of input.
Next token is
Shifting
int TSTyyparse(TSTParser *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTGrammar.ymm
Parser: the quoted string length is less than 2.
-> $$ =
Error: popping
Cleanup: discarding lookahead
Cleanup: popping
token %s (
nterm %s (
%d.%d-%d.%d
$end
$undefined
TOK_LPAREN
TOK_RPAREN
TOK_LBRACK
TOK_RBRACK
TOK_ARG_SEPARATOR
TOK_DOUBLE_COLON
TOK_UNKNOWN
TOK_IN
TOK_LET
TOK_UNQUOTED_IDENTIFIER
TOK_QUOTED_IDENTIFIER
TOK_AGG_IDENTIFIER_WITH_PARENS
TOK_UNQUOTED_IDENTIFIER_WITH_PARENS
TOK_WS
TOK_QUOTEDSTRING
TOK_FUNCTION_TOKEN
TOK_FUNCTION_END_TOKEN
TOK_NUMBER
TOK_BOOLEAN_TOKEN
TOK_DATE_TOKEN
TOK_DURATION_TOKEN
TOK_VARIABLE_TOKEN
TOK_IDENTIFIER_TOKEN
TOK_ARRAY_LINE_DELIMITER
TOK_REFERENCE_TOKEN
TOK_STRING_TOKEN
TOK_ARGUMENT_PLACEHOLDER_TOKEN
TOK_EMPTY_TOKEN
TOK_COLON
TOK_LESS_OR_EQUAL
TOK_GREATER_OR_EQUAL
TOK_GREATER_THAN
TOK_LESS_THAN
TOK_NOT_EQUAL
TOK_EQUALS
TOK_AMPERSAND
TOK_MINUS
TOK_PLUS
TOK_DIV
TOK_TIMES
TOK_POWER
TOK_PIPE
TOK_PERCENT
UPLUS
UMINUS
$accept
root
expr
unquoted_identifier_component
quoted_identifier_component
identifier_component
identifier
reference
piped_reference_list
list
array
list_of_array_rows
list_head
expr_opt
function
Reducing stack by rule %d (line %lu):
   $%d = 
Stack now
Deleting
virtual int TSTCommaLexer::yylex()
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCommaLexer.lmm
Reference Construction - Manual Error
int TSCEyyparse(void *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEGrammar.ymm
Invalid Native Syntax String for Argument Token.
ARGUMENT
Invalid Function String specified in Token initialization.
Malformed reference
syntax error
memory exhausted
HIGHER
TOK_BANG
TOK_DOLLAR
TOK_REFERENCE_TOKEN_BEGIN
TOK_REFERENCE_TOKEN_END
TOK_UNQUOTED_LABEL
TOK_QUOTED_LABEL
TOK_ERROR
TOK_TOKEN
label
label_end_token
number
number_end_token
list_tail
scoped_reference
scoped_reference_end_token
scoped_reference_tokenized
unscoped_reference
unscoped_reference_end_token
unscoped_reference_tokenized
cell_ref
cell_ref_tokenized
cell_ref_end_token
void TSCEASTNodeAddChild(TSCEASTNode *, TSCEAST *)
Adding child to leaf
_TtP8TSTables35TSTFixedColumnWidthGeometryProvider_
d24@0:8d16
25TSTArgumentAtIndexLocator
25TSTReparentGroupsRewriter
26TSCEASTExcludeUidsRewriter
25TSCEASTMoveRegionRewriter
24TSCEASTTransposeRewriter
14TSCEThunkValue
36TSCEASTConvertFromColonTractRewriter
27TSTCellSpecFormulaExtractor
14TSCETokenValue
MbP?
A16TSCEErrorWrapper
28TSCEASTRepairBadRefsRewriter
14TSCEErrorValue
29TSCEASTFunctionsInUseRewriter
15TSCEStringValue
16TSCEBooleanValue
8TSCEGrid
category column
aggre names col
aggre names row
29TSCEASTExcelPredicateRewriter
0E43TSCEASTSearchForSageTranslationNeedIterator
?26TSCEASTDescriptionIterator
13TSCEDateValue
@C30TSCEASTNodeCategoryRefIterator
25TSCEASTSageExportRewriter
15TSCEASTRewriter
19TSCEASTUnaryElement
20TSCEASTNumberElement
21TSCEASTBooleanElement
21TSCEASTTagOnlyElement
19TSCEASTTokenElement
19TSCEASTArrayElement
25TSCEASTLetVariableElement
25TSCEASTLetEndScopeElement
xV42?)
=19TSCEFunction_MEDIAN
17TSCEFunction_MODE
21TSCEViewTractRefValue
19TSCEIDAllocatorFull
28TSCEASTRefExtractionIterator
KD#B
J@37TSCEASTExcelImportTranslationRewriter
26TSCEASTExcelImportRewriter
36TSTTSCEASTNodeExpressionNodeFunction
UUUUUU
?18TSCEValueGridValue
?8TSTLexer
25TSTTrackingRangeExtractor
28TSTUIDTrackingRangeExtractor
;24TSCEASTClearUidsRewriter
21TSCEASTStreamIterator
17TSCEAbstractValue
42TSCEASTRemoveNumberToDateCoercionsRewriter
?_Zu
?]Zu
<_Zu
25TSCEASTInsertRowsRewriter
33TSCEASTRewriteUsingValuesRewriter
16TSCEAdditionNode
16TSCEFunctionNode
19TSCESubtractionNode
22TSCEMultiplicationNode
16TSCEDivisionNode
13TSCEPowerNode
21TSCEConcatenationNode
19TSCEGreaterThanNode
29TSCEBinaryBooleanOperatorNode
28TSCEGreaterThanOrEqualToNode
16TSCELessThanNode
25TSCELessThanOrEqualToNode
15TSCEEqualToNode
18TSCENotEqualToNode
16TSCENegationNode
16TSCEPlusSignNode
15TSCEPercentNode
13TSCEColonNode
ffffff
26TSCEASTDeleteOwnerRewriter
]r2<
~@fffff
40TSCEASTSearchForExternalOwnerUIDIterator
9TSCELexer
26TSCEASTOwnerUidMapRewriter
28TSCEASTForceOwnerUidRewriter
42TSCEASTHostCellAgnosticOwnerUidMapRewriter
34TSCEASTBadRefWithUidInfoIdentifier
44TSCEASTNumberToDurationForSageImportRewriter
25TSCEASTLetRemovalRewriter
20TSCECategoryRefValue
22TSCEEmptyArgumentValue
14TSCEASTElement
27TSCEASTElementWithUidTracts
26TSCEASTElementWithChildren
39TSCEASTElementWithUidTractsWithChildren
20TSCEASTBinaryElement
19TSCEASTColonElement
24TSCEASTColonTractElement
20TSCEASTStringElement
18TSCEASTDateElement
22TSCEASTDurationElement
22TSCEASTFunctionElement
29TSCEASTUnknownFunctionElement
24TSCEASTWhitespaceElement
30TSCEASTRelativeCoordRefElement
23TSCEASTLinkedRefElement
26TSCEASTUidReferenceElement
26TSCEASTViewTractRefElement
18TSCEASTListElement
19TSCEASTThunkElement
21TSCEASTLetBindElement
25TSCEASTCategoryRefElement
12TSCENilValue
22TSCEASTElementIterator
17TSCEASTEndElement
23TSTBakeFormulasDetector
32TSCEASTNodeFormulaStringIterator
@25TSCEASTRemoveRowsRewriter
20TSCEArgumentAccessor
27TSCENoCheckArgumentAccessor
23TSCEAndArgumentAccessor
23TSCESumArgumentAccessor
27TSCEProductArgumentAccessor
24TSCEModeArgumentAccessor
23TSCEGcdArgumentAccessor
24TSCEStatArgumentAccessor
25TSCECountArgumentAccessor
23TSCEVarArgumentAccessor
25TSCEMatchArgumentAccessor
30TSCEDateVectorArgumentAccessor
32TSCEStrictNumberArgumentAccessor
?333333
?15TSCENumberValue
25TSCEASTSageImportRewriter
20TSTPivotUidOrderNode
15TSTUidOrderNode
32TSCEASTSearchForUidTractIterator
31TSCEASTConvertToUidRefsRewriter
16TSCEUnitlessZero
25TSCEASTMergeCellsRewriter
29TSCEASTUndoMergeCellsRewriter
18TSCEEmptyCellValue
18TSCEReferenceValue
NSt3__120__shared_ptr_emplaceI9TSCEValueNS_9allocatorIS1_EEEE
24TSCEASTLinkedRefRewriter
47TSTConvertFormulasFromBaseForCategoriesRewriter
45TSTConvertFormulasToBaseForCategoriesRewriter
26TSCEASTExcelExportRewriter
5RTreeIjLi2EdLi16ELi8EE
23TSTCategoryUidOrderNode
?333333
31TSCEASTMergeOriginMovedRewriter
44TSCEASTSearchForNumberToDateCoercionIterator
26TSCEASTReorderRowsRewriter
17TSCERichTextValue
26TSCEASTInsertOwnerRewriter
25TSCEASTFreezeRefsRewriter
23TSCEASTThawRefsRewriter
33TSCEASTConvertFromUidRefsRewriter
34TSCEASTConvertToColonTractRewriter
23TSCEASTGroupUIDRewriter
28TSCEASTGroupNodeUIDsRewriter
25TSCEASTSetAggTypeRewriter
32TSCEASTGroupNodesChangedRewriter
34TSTResolveRelativeAncestorRewriter
36TSTConvertToRelativeAncestorRewriter
TSCEArchives.proto
TSCE
TSPMessages.proto
TSKArchives.proto"Y
CellReferenceArchive
column
table_id
.TSP.CFUUIDArchive"a
InternalCellReferenceArchive
coordinate
.TSCE.CellCoordinateArchive
owner_id
RelativeCellRefArchive
relative_row_offset
relative_column_offset
table_uid
.TSP.UUID
preserve_column
preserve_row
is_spanning_column
is_spanning_row
RangeReferenceArchive
table_id
.TSP.CFUUIDArchive
top_left_column
top_left_row
bottom_right_column
bottom_right_row
InternalRangeReferenceArchive
owner_id
range
.TSCE.RangeCoordinateArchive"
IndexSetArchive
entries
2#.TSCE.IndexSetArchive.IndexSetEntry
IndexSetEntry
range_begin
range_end
CellCoordSetArchive
column_entries
2%.TSCE.CellCoordSetArchive.ColumnEntry
ColumnEntry
column
row_set
.TSCE.IndexSetArchive"
InternalCellRefSetArchive
owner_entries
2*.TSCE.InternalCellRefSetArchive.OwnerEntry
OwnerEntry
owner_id
coord_set
.TSCE.CellCoordSetArchive"<
ColumnRowSize
num_columns
num_rows
CellRectArchive
origin
.TSCE.CellCoordinateArchive
size
.TSCE.ColumnRowSize"
CellRefSetArchive
owner_entries
2".TSCE.CellRefSetArchive.OwnerEntry
OwnerEntry
owner_uid
.TSP.UUID
coord_set
.TSCE.CellCoordSetArchive"
UidCoordSetArchive
column_entries
2$.TSCE.UidCoordSetArchive.ColumnEntry
ColumnEntry
column
.TSP.UUID
row_set
.TSP.UUID"
UidCellRefSetArchive
owner_entries
2%.TSCE.UidCellRefSetArchive.OwnerEntry
OwnerEntry
owner_uid
.TSP.UUID
coord_set
.TSCE.UidCoordSetArchive"
ReferencesToDirtyArchive
to_dirty_owner_ids
.TSCE.IndexSetArchive
to_dirty_cells
.TSCE.InternalCellRefSetArchive
to_dirty_cells_additional
.TSCE.InternalCellRefSetArchive
to_dirty_range_refs
2#.TSCE.InternalRangeReferenceArchive
calc_in_progress_cells
.TSCE.InternalCellRefSetArchive
to_update_precedents_cells
.TSCE.InternalCellRefSetArchive"
CoordMapperArchive
table_uid
.TSP.UUID
summary_rows_set
.TSCE.IndexSetArchive
summary_columns_set
.TSCE.IndexSetArchive
label_rows_set
.TSCE.IndexSetArchive
base_to_view_row_map
2(.TSCE.CoordMapperArchive.BaseToViewEntry
base_to_view_column_map
2(.TSCE.CoordMapperArchive.BaseToViewEntry
summary_to_view_row_map
2+.TSCE.CoordMapperArchive.SummaryToViewEntry
summary_to_view_column_map
2+.TSCE.CoordMapperArchive.SummaryToViewEntry
BaseToViewEntry
base_column_or_row
view_column_or_row
SummaryToViewEntry
summary_column_or_row
view_column_or_row
ReferenceArchive
reference_type
2$.TSCE.ReferenceArchive.ReferenceType
cell_reference
.TSCE.CellReferenceArchive
range_reference
.TSCE.RangeReferenceArchive"M
ReferenceType
CELL_REFERENCE
RANGE_REFERENCE
NAME_DEPENDENCY
EdgeArchive
column
is_precedent
owner_id
.TSP.CFUUIDArchive"
EdgesArchive
packed_edge_without_owner
packed_edge_with_owner
owner_id_for_edge
.TSP.CFUUIDArchive
internal_owner_id_for_edge
ExpandedEdgesArchive
edge_without_owner_rows
edge_without_owner_columns
edge_with_owner_rows
edge_with_owner_columns
internal_owner_id_for_edge
CellRecordArchive
column
 dirty_self_plus_precedents_count
is_in_a_cycle
false
edge
.TSCE.EdgeArchiveB
contains_a_formula
true
has_calculated_precedents
false
#calculate_precedents_on_next_recalc
falseB
)translate_for_excel_import_on_next_recalc
false
edges
.TSCE.EdgesArchive"`
CellDependenciesArchive
cell_record
.TSCE.CellRecordArchive
num_dirty_cells
CellRecordExpandedArchive
column
 dirty_self_plus_precedents_count
is_in_a_cycle
false
has_calculated_precedents
false
expanded_edges
.TSCE.ExpandedEdgesArchive"W
CellDependenciesExpandedArchive
cell_record
.TSCE.CellRecordExpandedArchive"
CellRecordTileArchive
internal_owner_id
tile_column_begin
tile_row_begin
cell_records
.TSCE.CellRecordExpandedArchive"I
CellDependenciesTiledArchive
cell_record_tiles
.TSP.Reference"
VolatileDependenciesArchive
volatile_time_cell_column
volatile_time_cell_row
volatile_random_cell_column
volatile_random_cell_row
volatile_locale_cell_column
volatile_locale_cell_row
volatile_location_cell_column
volatile_location_cell_row
volatile_compass_cell_column
volatile_compass_cell_row
 volatile_remote_data_cell_column
volatile_remote_data_cell_row
%volatile_sheet_table_name_cell_column
"volatile_sheet_table_name_cell_row
!calculated_dependency_cell_column
calculated_dependency_cell_row
 volatile_geometry_cell_reference
.TSCE.CellReferenceArchive
volatile_geometry_cell
.TSCE.CellCoordinateArchive"
#VolatileDependenciesExpandedArchive
volatile_time_cells
.TSCE.CellCoordSetArchive
volatile_random_cells
.TSCE.CellCoordSetArchive
volatile_locale_cells
.TSCE.CellCoordSetArchive
volatile_sheet_table_name_cells
.TSCE.CellCoordSetArchive
volatile_remote_data_cells
.TSCE.CellCoordSetArchive
volatile_geometry_cell_refs
.TSCE.InternalCellRefSetArchive"c
 RTreeInternalNodeContentsArchive
child
.TSCE.RTreeNodeArchive"l
RTreeLeafNodeContentsArchive
cell_reference
.TSCE.CellReferenceArchive"
RTreeNodeArchive
level
count
internal_node_contents
2&.TSCE.RTreeInternalNodeContentsArchive
leaf_node_contents
2".TSCE.RTreeLeafNodeContentsArchive"
RTreeArchive
data_file_id
data_size
data_num_dims
data_elem_size
data_elem_real_size
data_max_nodes
data_min_nodes
root
.TSCE.RTreeNodeArchive"
RangeBackDependencyArchive
cell_coord_row
cell_coord_column
range_reference
.TSCE.RangeReferenceArchive
internal_range_reference
2#.TSCE.InternalRangeReferenceArchive"U
RangeDependenciesArchive
back_dependency
2 .TSCE.RangeBackDependencyArchive"
RangePrecedentsTileArchive
to_owner_id
from_to_range
23.TSCE.RangePrecedentsTileArchive.FromToRangeArchive
FromToRangeArchive
from_coord
.TSCE.CellCoordinateArchive
refers_to_rect
.TSCE.CellRectArchive"N
RangeDependenciesTiledArchive
range_precedents_tile
.TSP.Reference"
SpanningDependenciesArchive
column
range_context
2..TSCE.SpanningDependenciesArchive.RangeContext
cell
.TSCE.CellReferenceArchive
total_range_for_deleted_table
.TSCE.RangeCoordinateArchive
body_range_for_deleted_table
.TSCE.RangeCoordinateArchive
referring_column_to_local_cells
2=.TSCE.SpanningDependenciesArchive.ReferringColumnToLocalCells
 referring_column_to_remote_cells
2>.TSCE.SpanningDependenciesArchive.ReferringColumnToRemoteCells
ReferringColumnToLocalCells
column
range_context
2..TSCE.SpanningDependenciesArchive.RangeContext
cell_coordinate
.TSCE.CellCoordinateArchive
ReferringColumnToRemoteCells
column
range_context
2..TSCE.SpanningDependenciesArchive.RangeContext
internal_cell_reference
2".TSCE.InternalCellReferenceArchive"0
RangeContext
DEFAULT
INCLUDE_HEADERS
#SpanningDependenciesExpandedArchive
coord_refers_to_spans
2B.TSCE.SpanningDependenciesExpandedArchive.CellCoordRefersToExtents
total_range_for_table
.TSCE.RangeCoordinateArchive
body_range_for_table
.TSCE.RangeCoordinateArchive
ExtentRange
extent_begin
extent_end
ExtentRangeWithTableWithContext
owner_id
range_context
26.TSCE.SpanningDependenciesExpandedArchive.RangeContext
ranges
25.TSCE.SpanningDependenciesExpandedArchive.ExtentRange
CellCoordRefersToExtents
coordinate
.TSCE.CellCoordinateArchive
ranges_by_table_context
2I.TSCE.SpanningDependenciesExpandedArchive.ExtentRangeWithTableWithContext"0
RangeContext
DEFAULT
INCLUDE_HEADERS
WholeOwnerDependenciesArchive
dependent_cell
2".TSCE.InternalCellReferenceArchive"a
%WholeOwnerDependenciesExpandedArchive
dependent_cells
.TSCE.InternalCellRefSetArchive"
CellErrorsArchive
errors
2$.TSCE.CellErrorsArchive.ErrorForCell
ErrorForCell
coordinate
.TSCE.CellCoordinateArchive
error_flavor
2#.TSCE.CellErrorsArchive.ErrorFlavor
err_due_to_cell
2".TSCE.InternalCellReferenceArchive"i
ErrorFlavor
NONE
ERROR
REF_ERROR
CIRCULAR_REF_ERROR
UNSUPPORTED_FUNCTION_ERROR
UuidReferencesArchive
table_refs
2$.TSCE.UuidReferencesArchive.TableRef
table_uuid_refs
2,.TSCE.UuidReferencesArchive.TableWithUuidRef
TableRef
owner_uuid
.TSP.UUID
coord_set
.TSCE.CellCoordSetArchive
UuidRef
uuid
.TSP.UUID
coord_set
.TSCE.CellCoordSetArchive
TableWithUuidRef
owner_uuid
.TSP.UUID
uuid_refs
2#.TSCE.UuidReferencesArchive.UuidRef"
FormulaOwnerDependenciesArchive
formula_owner_uid
.TSP.UUID
internal_formula_owner_id
owner_kind
cell_dependencies
2%.TSCE.CellDependenciesExpandedArchive
range_dependencies
.TSCE.RangeDependenciesArchive
volatile_dependencies
2).TSCE.VolatileDependenciesExpandedArchive
spanning_column_dependencies
2).TSCE.SpanningDependenciesExpandedArchive
spanning_row_dependencies
2).TSCE.SpanningDependenciesExpandedArchive
whole_owner_dependencies
2+.TSCE.WholeOwnerDependenciesExpandedArchive
cell_errors
.TSCE.CellErrorsArchive
formula_owner
.TSP.Reference
base_owner_uid
.TSP.UUID
tiled_cell_dependencies
2".TSCE.CellDependenciesTiledArchive
uuid_references
.TSCE.UuidReferencesArchive
tiled_range_dependencies
2#.TSCE.RangeDependenciesTiledArchive"
FormulaOwnerInfoArchive
formula_owner_id
.TSP.CFUUIDArchive
cell_dependencies
.TSCE.CellDependenciesArchive
range_dependencies
.TSCE.RangeDependenciesArchive
volatile_dependencies
2!.TSCE.VolatileDependenciesArchive
spanning_column_dependencies
2!.TSCE.SpanningDependenciesArchive
spanning_row_dependencies
2!.TSCE.SpanningDependenciesArchive
whole_owner_dependencies
2#.TSCE.WholeOwnerDependenciesArchive
cell_errors
.TSCE.CellErrorsArchive
formula_owner
.TSP.Reference"Q
SubFormulaOwnerIDArchive
base_owner_uid
.TSP.UUID
owner_kind
OwnerIDMapArchive
map_entry
2..TSCE.OwnerIDMapArchive.OwnerIDMapArchiveEntry
unregistered_internal_owner_id
OwnerIDMapArchiveEntry
internal_owner_id
owner_id
.TSP.CFUUIDArchive"0
UidLookupListArchive
uuids
.TSP.UUID"
DependencyTrackerArchive
formula_owner_info
.TSCE.FormulaOwnerInfoArchive
dirty_leaf
.TSCE.CellReferenceArchiveB
owner_id_map
.TSCE.OwnerIDMapArchive
internal_dirty_leaf
2".TSCE.InternalCellReferenceArchiveB
number_of_formulas
formula_owner_dependencies
.TSP.Reference"e
RemoteDataSpecifierArchive
function_index
symbol
attribute
date
RemoteDataValueMapArchive
entry
22.TSCE.RemoteDataValueMapArchive.RemoteDataMapEntry
RemoteDataMapEntry
specifier
2 .TSCE.RemoteDataSpecifierArchive
value
.TSCE.CellValueArchive"
StockArchive
symbol
date
attribute
2!.TSCE.StockArchive.AttributeEntry
AttributeEntry
attribute
value
RemoteDataStoreArchive
value_map
.TSCE.RemoteDataValueMapArchive
stocks
.TSCE.StockArchive"q
NameTrackedReferencePair
name
tracked_reference
.TSP.Reference
tracked_reference_id
NamesByTrackedReferenceArchive
table_id
.TSP.CFUUIDArchive
name_tracked_reference_pair
.TSCE.NameTrackedReferencePair"
NamedReferenceManagerArchive
reference_tracker
.TSP.Reference
#names_by_tracked_reference_by_table
2$.TSCE.NamesByTrackedReferenceArchiveB
UuidSetStoreArchive
uuidSet
2!.TSCE.UuidSetStoreArchive.UuidSet
UuidSet
uuid
.TSP.UUID
index_of_set
UuidReferenceMapArchive
cell_refs_for_uuid
2-.TSCE.UuidReferenceMapArchive.CellRefsForUuid
CellRefsForUuid
uuid
.TSP.UUID
cell_ref
2".TSCE.InternalCellReferenceArchive
cell_refs
.TSCE.InternalCellRefSetArchive"
GroupByNodeMapArchive
refs_for_group_by
20.TSCE.GroupByNodeMapArchive.GroupNodesForGroupBy
CellRefsForGroupNode
group_node_uid
.TSP.UUID
cell_refs
.TSCE.InternalCellRefSetArchive
GroupNodesForGroupBy
group_by_uid
.TSP.UUID
refs_for_group_node
20.TSCE.GroupByNodeMapArchive.CellRefsForGroupNode"
CalculationEngineArchive
base_date_1904
dependency_tracker
.TSCE.DependencyTrackerArchive
named_reference_manager
.TSP.Reference
excel_import_date_mode
22.TSCE.CalculationEngineArchive.ExcelImportDateMode:
DATE_MODE_1900
saved_locale_identifier_for_4_2
document_random_seed
uuid_reference_map
.TSCE.UuidReferenceMapArchive
document_timestamp
document_timezone
table_uid_history
2 .TSCE.RewriteTableUIDInfoArchive
remote_data_store
.TSP.Reference
group_node_map
.TSCE.GroupByNodeMapArchive
header_name_manager
.TSP.Reference
refs_to_dirty
.TSP.Reference
saved_locale_identifier
begin_tracking_names_legacy_nrm
.TSP.UUID
end_tracking_names_legacy_nrm
.TSP.UUID"_
ExcelImportDateMode
DATE_MODE_1900
DATE_MODE_1900_LEGACY
DATE_MODE_1904_LEGACY
PreserveColumnRowFlagsArchive
begin_row_is_absolute
begin_column_is_absolute
end_row_is_absolute
end_column_is_absolute
CategoryReferenceArchive
group_by_uid
.TSP.UUID
column_uid
.TSP.UUID
aggregate_type
group_level
group_uids
2,.TSCE.CategoryReferenceArchive.CatRefUidList
preserve_flags
2#.TSCE.PreserveColumnRowFlagsArchive
relative_column
relative_group_uid
.TSP.UUID
absolute_group_uid
.TSP.UUID
option_refers_to_pivot_rows
option_refers_to_pivot_columns
agg_index_level
option_show_aggregate_name
CatRefUidList
.TSP.UUID"
ASTNodeArrayArchive
AST_node
2(.TSCE.ASTNodeArrayArchive.ASTNodeArchive
 ASTLocalCellReferenceNodeArchive
row_handle
column_handle
row_is_sticky
column_is_sticky
%ASTCrossTableCellReferenceNodeArchive
row_handle
column_handle
row_is_sticky
column_is_sticky
table_id
.TSP.CFUUIDArchive
)AST_reference_whitespace_after_sheet_name
*AST_reference_whitespace_before_table_name
)AST_reference_whitespace_after_table_name
,AST_reference_whitespace_before_cell_address
ASTColumnCoordinateArchive
column
absolute
false
ASTRowCoordinateArchive
absolute
false
ASTUidList
.TSP.UUID
ASTUidTract
columnUids
2$.TSCE.ASTNodeArrayArchive.ASTUidList
rowUids
2$.TSCE.ASTNodeArrayArchive.ASTUidList
is_range_ref
purpose
2,.TSCE.ASTNodeArrayArchive.ASTUidTractPurpose
preserve_rectangular
true
ASTStickyBits
begin_row_is_absolute
begin_column_is_absolute
end_row_is_absolute
end_column_is_absolute
ASTUidTractList
tract
2%.TSCE.ASTNodeArrayArchive.ASTUidTract
sticky_bits
2'.TSCE.ASTNodeArrayArchive.ASTStickyBits
ASTUidCoordinateArchive
column_uid
.TSP.UUID
row_uid
.TSP.UUID
column_absolute
row_absolute
ASTCategoryLevels
AST_column_group_level
AST_row_group_level
AST_agg_index_level
ASTCategoryReferenceArchive
category_ref
.TSCE.CategoryReferenceArchive
ASTColonTractArchive
relative_column
2P.TSCE.ASTNodeArrayArchive.ASTColonTractArchive.ASTColonTractRelativeRangeArchive
relative_row
2P.TSCE.ASTNodeArrayArchive.ASTColonTractArchive.ASTColonTractRelativeRangeArchive
absolute_column
2P.TSCE.ASTNodeArrayArchive.ASTColonTractArchive.ASTColonTractAbsoluteRangeArchive
absolute_row
2P.TSCE.ASTNodeArrayArchive.ASTColonTractArchive.ASTColonTractAbsoluteRangeArchive
preserve_rectangular
true
!ASTColonTractRelativeRangeArchive
range_begin
range_end
!ASTColonTractAbsoluteRangeArchive
range_begin
range_end
&ASTCrossTableReferenceExtraInfoArchive
table_id
.TSP.CFUUIDArchive
)AST_reference_whitespace_after_sheet_name
*AST_reference_whitespace_before_table_name
)AST_reference_whitespace_after_table_name
,AST_reference_whitespace_before_cell_address
ASTLetNodeWhitespace
AST_let_whitespace_after_let
#AST_let_whitespace_after_identifier
AST_let_whitespace_after_equals
"AST_let_whitespace_after_delimiter
ASTNodeArchive
AST_node_type
2%.TSCE.ASTNodeArrayArchive.ASTNodeType
AST_function_node_index
AST_function_node_numArgs
AST_number_node_number
AST_boolean_node_boolean
AST_string_node_string
AST_date_node_dateNum
"AST_date_node_suppress_date_format
"AST_date_node_suppress_time_format
AST_date_node_date_time_format
AST_duration_node_unitNum
AST_duration_node_unit
AST_duration_node_style
'AST_duration_node_duration_unit_largest
(AST_duration_node_duration_unit_smallest
%AST_duration_node_use_automatic_units
AST_token_node_boolean
AST_array_node_numCol
AST_array_node_numRow
AST_list_node_numArgs
AST_thunk_node_array
.TSCE.ASTNodeArrayArchive
'AST_local_cell_reference_node_reference
2:.TSCE.ASTNodeArrayArchive.ASTLocalCellReferenceNodeArchive
-AST_cross_table_cell_reference_node_reference
2?.TSCE.ASTNodeArrayArchive.ASTCrossTableCellReferenceNodeArchive
 AST_unknown_function_node_string
!AST_unknown_function_node_numArgs
AST_whitespace
AST_column
24.TSCE.ASTNodeArrayArchive.ASTColumnCoordinateArchive
AST_row
21.TSCE.ASTNodeArrayArchive.ASTRowCoordinateArchive
$AST_cross_table_reference_extra_info
2@.TSCE.ASTNodeArrayArchive.ASTCrossTableReferenceExtraInfoArchive
AST_uid_coordinate
21.TSCE.ASTNodeArrayArchive.ASTUidCoordinateArchive
AST_sticky_bits
2'.TSCE.ASTNodeArrayArchive.ASTStickyBits
AST_frozen_sticky_bits
2'.TSCE.ASTNodeArrayArchive.ASTStickyBits
AST_let_identifier
AST_let_e2
.TSCE.ASTNodeArrayArchive
AST_let_whitespace
2..TSCE.ASTNodeArrayArchive.ASTLetNodeWhitespace
AST_symbol
AST_tract_list
2).TSCE.ASTNodeArrayArchive.ASTUidTractList
AST_category_ref
25.TSCE.ASTNodeArrayArchive.ASTCategoryReferenceArchive
AST_colon_tract
2..TSCE.ASTNodeArrayArchive.ASTColonTractArchive
AST_number_node_decimal_low
AST_number_node_decimal_high
AST_category_levels
2+.TSCE.ASTNodeArrayArchive.ASTCategoryLevels"
ASTNodeType
ADDITION_NODE
SUBTRACTION_NODE
MULTIPLICATION_NODE
DIVISION_NODE
POWER_NODE
CONCATENATION_NODE
GREATER_THAN_NODE
GREATER_THAN_OR_EQUAL_TO_NODE
LESS_THAN_NODE
LESS_THAN_OR_EQUAL_TO_NODE
EQUAL_TO_NODE
NOT_EQUAL_TO_NODE
NEGATION_NODE
PLUS_SIGN_NODE
PERCENT_NODE
FUNCTION_NODE
NUMBER_NODE
BOOLEAN_NODE
STRING_NODE
DATE_NODE
DURATION_NODE
EMPTY_ARGUMENT_NODE
TOKEN_NODE
ARRAY_NODE
LIST_NODE
THUNK_NODE
LOCAL_CELL_REFERENCE_NODE
CROSS_TABLE_CELL_REFERENCE_NODE
COLON_NODE
REFERENCE_ERROR_NODE
UNKNOWN_FUNCTION_NODE
APPEND_WHITESPACE_NODE
PREPEND_WHITESPACE_NODE
BEGIN_EMBEDDED_NODE_ARRAY
END_THUNK_NODE
CELL_REFERENCE_NODE
COLON_NODE_WITH_UIDS
REFERENCE_ERROR_WITH_UIDS
UID_REFERENCE_NODE
LET_BIND_NODE
LET_VAR_NODE
LET_END_SCOPE_NODE
LINKED_CELL_REF_NODE
LINKED_COLUMN_REF_NODE
LINKED_ROW_REF_NODE
CATEGORY_REF_NODE
COLON_TRACT_NODE
VIEW_TRACT_REF_NODE
ASTUidTractPurpose
UIDS_INCLUDED
UIDS_PREMERGE
UIDS_PREMOVEREGION
UIDS_EXCLUDED
UIDS_ACTIVE
UIDS_PREMERGE_TOPLEFT
UIDS_REMOVED_BY_MOVE
FULLTUPLE_ROW_COLUMN_HEADER
FULLTUPLE_AGGREGATE_RULE_UID
%FULLTUPLE_ROW_COLUMN_RULE_VALUE_PAIRS
FormulaTranslationFlagsArchive
excel_import_translation
false
+number_to_date_coercion_removal_translation
false
contains_uid_form_references
false
contains_frozen_references
false
returns_percent_formatted
false"
FormulaArchive
AST_node_array
.TSCE.ASTNodeArrayArchive
host_column
host_row
host_column_is_negative
false
host_row_is_negative
false
translation_flags
2$.TSCE.FormulaTranslationFlagsArchive
host_table_uid
.TSP.UUID
host_column_uid
.TSP.UUID
host_row_uid
.TSP.UUID"I
FunctorArchive
formula
.TSCE.FormulaArchive
num_args
FormatStructArchive
format_type
decimal_places
currency_code
negative_style
show_thousands_separator
use_accounting_style
duration_style
base
base_places
base_use_minus_sign
fraction_accuracy
suppress_date_format
suppress_time_format
date_time_format
duration_unit_largest
duration_unit_smallest
RangeCoordinateArchive
top_left_column
top_left_row
bottom_right_column
bottom_right_row
TableTransposeInfoArchive
number_of_footer_rows
body_range_for_transposed_table
.TSCE.RangeCoordinateArchive"c
MergeOriginMovedArchive
src_column
src_row
dst_column
dst_row
OwnerUIDMapperArchive
table_uid
.TSP.UUID
next_table_uid
.TSP.UUID
hidden_state_for_rows_owner_uid
.TSP.UUID
$next_hidden_state_for_rows_owner_uid
.TSP.UUID
"hidden_state_for_columns_owner_uid
.TSP.UUID
'next_hidden_state_for_columns_owner_uid
.TSP.UUID
conditional_style_owner_uid
.TSP.UUID
 next_conditional_style_owner_uid
.TSP.UUID
%sort_rule_reference_tracker_owner_uid
.TSP.UUID
*next_sort_rule_reference_tracker_owner_uid
.TSP.UUID
merge_owner_uid
.TSP.UUID
next_merge_owner_uid
.TSP.UUID
category_aggregates_owner_uid
.TSP.UUID
"next_category_aggregates_owner_uid
.TSP.UUID
group_by_uid
.TSP.UUID
next_group_by_uid
.TSP.UUID
pencil_annotation_owner_uid
.TSP.UUID
 next_pencil_annotation_owner_uid
.TSP.UUID"
RewriteTableUIDInfoArchive
table_uid_map
28.TSCE.RewriteTableUIDInfoArchive.TableUIDMapEntryArchive
TableUIDMapEntryArchive
prev_table_uid
.TSP.UUID
new_table_uid
.TSP.UUID"
GroupByChangeArchive
change_type
2%.TSCE.GroupByChangeArchive.ChangeType
group_by_uid
.TSP.UUID
previous_level
updated_level
previous_to_updated_map
.TSP.UUIDMapArchive
updated_to_previous_map
.TSP.UUIDMapArchive
removed_group_uids
.TSP.UUID
grouping_column_changes
26.TSCE.GroupByChangeArchive.GroupingColumnChangeArchive
GroupingColumnChangeArchive
old_level
new_level
ChangeType
NONE
GROUP_VALUE_CHANGE
GROUP_DEFINITION_CHANGE
REMOVE_GROUP_LEVEL
ADD_GROUP_LEVEL
PROMOTE
DEMOTE
RewriteGroupNodeUIDInfoArchive
group_by_uid
.TSP.UUID
group_node_uid_map
.TSP.UUIDMapArchive"
IndexedUidsArchive
uids
2#.TSCE.IndexedUidsArchive.IndexedUid
IndexedUid
uid_for_index
.TSP.UUID
index_for_uid
RewriteRangeEntryArchive
range_location
range_length
range_uids
.TSP.UUID
offset
ColumnOrRowUuidsInfoArchive
is_rows
table_uid
.TSP.UUID
cond_style_owner_uid
.TSP.UUID
group_by_uid
.TSP.UUID
uids
.TSCE.IndexedUidsArchive
range_entries
.TSCE.RewriteRangeEntryArchive
table_range
.TSCE.RangeCoordinateArchive
insert_at_uid
.TSP.UUID
insert_opposite_uid
.TSP.UUID"
RegionInfoArchive
table_uid
.TSP.UUID
column_uids
.TSCE.IndexedUidsArchive
row_uids
.TSCE.IndexedUidsArchive"
RegionMovedInfoArchive
src_region
.TSCE.RegionInfoArchive
dst_region
.TSCE.RegionInfoArchive
span_rows
span_columns
original_src_region
.TSCE.RegionInfoArchive
final_dest_table_uid
.TSP.UUID"=
MergeSourceArchive
coord_column
coord_row
HauntedOwnerArchive
owner_uid
.TSP.UUID"H
CellCoordinateArchive
packedData
column
CellCoordinateVectorArchive
cell_coord
.TSCE.CellCoordinateArchive"p
 ExpandedCellRefObjectPairArchive
cell_ref
.TSCE.CellReferenceArchive
object
.TSP.Reference"g
ExpandedCellRefObjectMapArchive
cell_ref_object_pair
2&.TSCE.ExpandedCellRefObjectPairArchive"
FormulaAtCoordArchive
column
formula
.TSCE.FormulaArchive
repeat_previous_formula
false"
FormulaCoordPairsByOwnerArchive
owner_kind
owner_uid
.TSP.UUID
formula_at_coords
.TSCE.FormulaAtCoordArchive"[
FormulasForUndoArchive
formulas_for_owner
2%.TSCE.FormulaCoordPairsByOwnerArchive"q
FormulaRewriteCommandArchive
table_rewrite_command
.TSP.Reference
super
.TSK.CommandArchive"U
TrackedReferenceArchive
.TSCE.ASTNodeArrayArchive
formula_id
ExpandedTrackedReferenceArchive
.TSCE.ASTNodeArrayArchive
formula_column
formula_row
TrackedReferenceStoreArchive
uuid
.TSP.CFUUIDArchive
tracked_reference
.TSP.ReferenceB
contained_tracked_reference
.TSCE.TrackedReferenceArchive
$contained_expanded_tracked_reference
2%.TSCE.ExpandedTrackedReferenceArchive"
ViewTractRefArchive
table_uid
.TSP.UUID
uid_tract
2%.TSCE.ASTNodeArrayArchive.ASTUidTract
preserve_flags
2#.TSCE.PreserveColumnRowFlagsArchive
agg_index_level
column_group_level
row_group_level
BooleanCellValueArchive
value
format
.TSK.FormatStructArchive
format_is_explicit
false"
DateCellValueArchive
value
format
.TSK.FormatStructArchive
format_is_implicit
format_is_explicit
false"
NumberCellValueArchive
value
unit_index
currency_code
format
.TSK.FormatStructArchive
format_is_implicit
format_is_explicit
false
decimal_low
decimal_high
StringCellValueArchive
value
format
.TSK.FormatStructArchive
format_is_implicit
format_is_explicit
false
is_regex
false
is_case_sensitive_regex
false"y
ErrorCellValueArchive
error_type
extra_info_int
extra_info_string
extra_info_double
CellValueArchive
cell_value_type
2$.TSCE.CellValueArchive.CellValueType
boolean_value
.TSCE.BooleanCellValueArchive
date_value
.TSCE.DateCellValueArchive
number_value
.TSCE.NumberCellValueArchive
string_value
.TSCE.StringCellValueArchive
error_value
.TSCE.ErrorCellValueArchive"`
CellValueType
NIL_TYPE
BOOLEAN_TYPE
DATE_TYPE
NUMBER_TYPE
STRING_TYPE
N4TSCE20CellReferenceArchiveE
N4TSCE28InternalCellReferenceArchiveE
N4TSCE22RelativeCellRefArchiveE
N4TSCE21RangeReferenceArchiveE
N4TSCE29InternalRangeReferenceArchiveE
N4TSCE29IndexSetArchive_IndexSetEntryE
N4TSCE15IndexSetArchiveE
N4TSCE31CellCoordSetArchive_ColumnEntryE
N4TSCE19CellCoordSetArchiveE
N4TSCE36InternalCellRefSetArchive_OwnerEntryE
N4TSCE25InternalCellRefSetArchiveE
N4TSCE13ColumnRowSizeE
N4TSCE15CellRectArchiveE
N4TSCE28CellRefSetArchive_OwnerEntryE
N4TSCE17CellRefSetArchiveE
N4TSCE30UidCoordSetArchive_ColumnEntryE
N4TSCE18UidCoordSetArchiveE
N4TSCE31UidCellRefSetArchive_OwnerEntryE
N4TSCE20UidCellRefSetArchiveE
N4TSCE24ReferencesToDirtyArchiveE
N4TSCE34CoordMapperArchive_BaseToViewEntryE
N4TSCE37CoordMapperArchive_SummaryToViewEntryE
N4TSCE18CoordMapperArchiveE
N4TSCE16ReferenceArchiveE
N4TSCE11EdgeArchiveE
N4TSCE12EdgesArchiveE
N4TSCE20ExpandedEdgesArchiveE
N4TSCE17CellRecordArchiveE
N4TSCE23CellDependenciesArchiveE
N4TSCE25CellRecordExpandedArchiveE
N4TSCE31CellDependenciesExpandedArchiveE
N4TSCE21CellRecordTileArchiveE
N4TSCE28CellDependenciesTiledArchiveE
N4TSCE27VolatileDependenciesArchiveE
N4TSCE35VolatileDependenciesExpandedArchiveE
N4TSCE32RTreeInternalNodeContentsArchiveE
N4TSCE28RTreeLeafNodeContentsArchiveE
N4TSCE16RTreeNodeArchiveE
N4TSCE12RTreeArchiveE
N4TSCE26RangeBackDependencyArchiveE
N4TSCE24RangeDependenciesArchiveE
N4TSCE45RangePrecedentsTileArchive_FromToRangeArchiveE
N4TSCE26RangePrecedentsTileArchiveE
N4TSCE29RangeDependenciesTiledArchiveE
N4TSCE55SpanningDependenciesArchive_ReferringColumnToLocalCellsE
N4TSCE56SpanningDependenciesArchive_ReferringColumnToRemoteCellsE
N4TSCE27SpanningDependenciesArchiveE
N4TSCE47SpanningDependenciesExpandedArchive_ExtentRangeE
N4TSCE67SpanningDependenciesExpandedArchive_ExtentRangeWithTableWithContextE
N4TSCE60SpanningDependenciesExpandedArchive_CellCoordRefersToExtentsE
N4TSCE35SpanningDependenciesExpandedArchiveE
N4TSCE29WholeOwnerDependenciesArchiveE
N4TSCE37WholeOwnerDependenciesExpandedArchiveE
N4TSCE30CellErrorsArchive_ErrorForCellE
N4TSCE17CellErrorsArchiveE
N4TSCE30UuidReferencesArchive_TableRefE
N4TSCE29UuidReferencesArchive_UuidRefE
N4TSCE38UuidReferencesArchive_TableWithUuidRefE
N4TSCE21UuidReferencesArchiveE
N4TSCE31FormulaOwnerDependenciesArchiveE
N4TSCE23FormulaOwnerInfoArchiveE
N4TSCE24SubFormulaOwnerIDArchiveE
N4TSCE40OwnerIDMapArchive_OwnerIDMapArchiveEntryE
N4TSCE17OwnerIDMapArchiveE
N4TSCE20UidLookupListArchiveE
N4TSCE24DependencyTrackerArchiveE
N4TSCE26RemoteDataSpecifierArchiveE
N4TSCE44RemoteDataValueMapArchive_RemoteDataMapEntryE
N4TSCE25RemoteDataValueMapArchiveE
N4TSCE27StockArchive_AttributeEntryE
N4TSCE12StockArchiveE
N4TSCE22RemoteDataStoreArchiveE
N4TSCE24NameTrackedReferencePairE
N4TSCE30NamesByTrackedReferenceArchiveE
N4TSCE28NamedReferenceManagerArchiveE
N4TSCE27UuidSetStoreArchive_UuidSetE
N4TSCE19UuidSetStoreArchiveE
N4TSCE39UuidReferenceMapArchive_CellRefsForUuidE
N4TSCE23UuidReferenceMapArchiveE
N4TSCE42GroupByNodeMapArchive_CellRefsForGroupNodeE
N4TSCE42GroupByNodeMapArchive_GroupNodesForGroupByE
N4TSCE21GroupByNodeMapArchiveE
N4TSCE24CalculationEngineArchiveE
N4TSCE29PreserveColumnRowFlagsArchiveE
N4TSCE38CategoryReferenceArchive_CatRefUidListE
N4TSCE24CategoryReferenceArchiveE
N4TSCE52ASTNodeArrayArchive_ASTLocalCellReferenceNodeArchiveE
N4TSCE57ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchiveE
N4TSCE46ASTNodeArrayArchive_ASTColumnCoordinateArchiveE
N4TSCE43ASTNodeArrayArchive_ASTRowCoordinateArchiveE
N4TSCE30ASTNodeArrayArchive_ASTUidListE
N4TSCE31ASTNodeArrayArchive_ASTUidTractE
N4TSCE33ASTNodeArrayArchive_ASTStickyBitsE
N4TSCE35ASTNodeArrayArchive_ASTUidTractListE
N4TSCE43ASTNodeArrayArchive_ASTUidCoordinateArchiveE
N4TSCE37ASTNodeArrayArchive_ASTCategoryLevelsE
N4TSCE47ASTNodeArrayArchive_ASTCategoryReferenceArchiveE
N4TSCE74ASTNodeArrayArchive_ASTColonTractArchive_ASTColonTractRelativeRangeArchiveE
N4TSCE74ASTNodeArrayArchive_ASTColonTractArchive_ASTColonTractAbsoluteRangeArchiveE
N4TSCE40ASTNodeArrayArchive_ASTColonTractArchiveE
N4TSCE58ASTNodeArrayArchive_ASTCrossTableReferenceExtraInfoArchiveE
N4TSCE40ASTNodeArrayArchive_ASTLetNodeWhitespaceE
N4TSCE34ASTNodeArrayArchive_ASTNodeArchiveE
N4TSCE19ASTNodeArrayArchiveE
N4TSCE30FormulaTranslationFlagsArchiveE
N4TSCE14FormulaArchiveE
N4TSCE14FunctorArchiveE
N4TSCE19FormatStructArchiveE
N4TSCE22RangeCoordinateArchiveE
N4TSCE25TableTransposeInfoArchiveE
N4TSCE23MergeOriginMovedArchiveE
N4TSCE21OwnerUIDMapperArchiveE
N4TSCE50RewriteTableUIDInfoArchive_TableUIDMapEntryArchiveE
N4TSCE26RewriteTableUIDInfoArchiveE
N4TSCE48GroupByChangeArchive_GroupingColumnChangeArchiveE
N4TSCE20GroupByChangeArchiveE
N4TSCE30RewriteGroupNodeUIDInfoArchiveE
N4TSCE29IndexedUidsArchive_IndexedUidE
N4TSCE18IndexedUidsArchiveE
N4TSCE24RewriteRangeEntryArchiveE
N4TSCE27ColumnOrRowUuidsInfoArchiveE
N4TSCE17RegionInfoArchiveE
N4TSCE22RegionMovedInfoArchiveE
N4TSCE18MergeSourceArchiveE
N4TSCE19HauntedOwnerArchiveE
N4TSCE21CellCoordinateArchiveE
N4TSCE27CellCoordinateVectorArchiveE
N4TSCE32ExpandedCellRefObjectPairArchiveE
N4TSCE31ExpandedCellRefObjectMapArchiveE
N4TSCE21FormulaAtCoordArchiveE
N4TSCE31FormulaCoordPairsByOwnerArchiveE
N4TSCE22FormulasForUndoArchiveE
N4TSCE28FormulaRewriteCommandArchiveE
N4TSCE23TrackedReferenceArchiveE
N4TSCE31ExpandedTrackedReferenceArchiveE
N4TSCE28TrackedReferenceStoreArchiveE
N4TSCE19ViewTractRefArchiveE
N4TSCE23BooleanCellValueArchiveE
N4TSCE20DateCellValueArchiveE
N4TSCE22NumberCellValueArchiveE
N4TSCE22StringCellValueArchiveE
N4TSCE21ErrorCellValueArchiveE
N4TSCE16CellValueArchiveE
N6google8protobuf8internal16InternalMetadata9ContainerINS0_15UnknownFieldSetEEE
N6google8protobuf8internal16InternalMetadata13ContainerBaseE
31TSCEASTOffsetReferencesRewriter
 !"#$%&'(*+,-./012356789ABCD`afghijklmno
   ! " # $ % & ' ( ) / 0 1 2 3 4 5 6 7 8 9 : ; < = > ? @ A B C D E F G H I J K L M N O P Q R S T W _ p q t u v w x y z { | } ~ 
! !!!"!#!$!%!&!'!(!)!*!+!,!-!.!/!0!1!2!3!4!5!6!7!8!9!:!;!=!>!?!@!A!B!C!D!E!F!G!H!I!J!K!S!T!U!V!W!X!Y!Z![!\!]!^!_!`!a!b!c!d!e!f!g!h!i!j!k!l!m!n!o!p!q!r!s!t!u!v!w!x!y!z!{!|!}!~!
" "!"""#"$"%"&"'"(")"*"+","-"."/"0"1"2"3"4"5"6"7"8"9":";"<"=">"?"@"A"B"C"D"E"F"G"H"I"J"K"L"M"N"O"P"Q"R"S"T"U"V"W"X"Y"Z"["\"]"^"_"`"a"b"c"d"e"f"g"h"i"j"k"l"m"n"o"p"q"r"s"t"u"v"w"x"y"z"{"|"}"~"
# #!#"###$#%#&#'#(#)#*#+#,#-#.#/#0#1#2#3#4#5#6#7#8#9#:#;#<#=#>#?#@#A#B#C#D#E#F#G#H#I#J#K#L#M#N#O#P#Q#R#S#T#U#V#W#X#Y#Z#[#\#]#^#_#`#a#b#c#d#e#f#g#h#i#j#k#l#m#n#o#p#q#r#s#t#u#v#w#x#y#z#{#|#}#~#
$ $!$"$#$$$%$&$@$A$B$C$D$E$F$G$H$I$J$`$a$b$c$d$e$f$g$h$i$j$k$l$m$n$o$p$q$r$s$t$u$v$w$x$y$z${$|$}$~$
% %!%"%#%$%%%&%'%(%)%*%+%,%-%.%/%0%1%2%3%4%5%6%7%8%9%:%;%<%=%>%?%@%A%B%C%D%E%F%G%H%I%J%K%L%M%N%O%P%Q%R%S%T%U%V%W%X%Y%Z%[%\%]%^%_%`%a%b%c%d%e%f%g%h%i%j%k%l%m%n%o%p%q%r%s%t%u%v%w%x%y%z%{%|%}%~%
& &!&"&#&$&%&&&'&(&)&*&+&,&-&.&/&0&1&2&3&4&5&6&7&8&9&:&;&<&=&>&?&@&A&B&C&D&E&F&G&H&I&J&K&L&M&N&O&P&Q&R&S&T&U&V&W&X&Y&Z&[&\&]&^&_&`&a&b&c&d&e&f&g&h&i&j&k&l&m&n&o&p&q&r&s&t&u&v&w&x&y&z&{&|&}&
' '!'"'#'$'%'&''')'*'+','-'.'/'0'1'2'3'4'5'6'7'8'9':';'<'='>'?'@'A'B'C'D'E'F'G'H'I'J'K'M'O'P'Q'R'V'X'Y'Z'['\']'^'a'b'c'd'e'f'g'h'i'j'k'l'm'n'o'p'q'r's't'u'v'w'x'y'z'{'|'}'~'
( (!("(#($(%(&('((()(*(+(,(-(.(/(0(1(2(3(4(5(6(7(8(9(:(;(<(=(>(?(@(A(B(C(D(E(F(G(H(I(J(K(L(M(N(O(P(Q(R(S(T(U(V(W(X(Y(Z([(\(](^(_(`(a(b(c(d(e(f(g(h(i(j(k(l(m(n(o(p(q(r(s(t(u(v(w(x(y(z({(|(}(~(
) )!)")#)$)%)&)')()))*)+),)-).)/)0)1)2)3)4)5)6)7)8)9):);)<)=)>)?)@)A)B)C)D)E)F)G)H)I)J)K)L)M)N)O)P)Q)R)S)T)U)V)W)X)Y)Z)[)\)])^)_)`)a)b)c)d)e)f)g)h)i)j)k)l)m)n)o)p)q)r)s)t)u)v)w)x)y)z){)|)})~)
* *!*"*#*$*%*&*'*(*)***+*,*-*.*/*0*1*2*3*4*5*6*7*8*9*:*;*<*=*>*?*@*A*B*C*D*E*F*G*H*I*J*K*L*M*N*O*P*Q*R*S*T*U*V*W*X*Y*Z*[*\*]*^*_*`*a*b*c*d*e*f*g*h*i*j*k*l*m*n*o*p*q*r*s*t*u*v*w*x*y*z*{*|*}*~*
/ /!/"/#/$/%/&/'/(/)/*/+/,/-/.///0/1/2/3/4/5/6/7/8/9/:/;/</=/>/?/@/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O/P/Q/R/S/T/U/V/W/X/Y/Z/[/\/]/^/_/`/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y/z/{/|/}/~/
0 0!0"0#0$0%0&0'0(0)000102030405060708090:0;0<0=0>0?0A0B0C0D0E0F0G0H0I0J0K0L0M0N0O0P0Q0R0S0T0U0V0W0X0Y0Z0[0\0]0^0_0`0a0b0c0d0e0f0g0h0i0j0k0l0m0n0o0p0q0r0s0t0u0v0w0x0y0z0{0|0}0~0
1 1!1"1#1$1%1&1'1(1)1*1+1,1112131415161718191:1;1<1=1>1?1@1A1B1C1D1E1F1G1H1I1J1K1L1M1N1O1P1Q1R1S1T1U1V1W1X1Y1Z1[1\1]1^1_1`1a1b1c1d1e1f1g1h1i1j1k1l1m1n1o1p1q1r1s1t1u1v1w1x1y1z1{1|1}1~1
2 2!2"2#2$2%2&2'2(2)2*2+2,2-2.2/202122232425262728292:2;2<2=2>2?2@2A2B2C2P2Q2R2S2T2U2V2W2X2Y2Z2[2\2]2^2_2`2a2b2c2d2e2f2g2h2i2j2k2l2m2n2o2p2q2r2s2t2u2v2w2x2y2z2{2|2}2
3 3!3"3#3$3%3&3'3(3)3*3+3,3-3.3/303132333435363738393:3;3<3=3>3?3@3A3B3C3D3E3F3G3H3I3J3K3L3M3N3O3P3Q3R3S3T3U3V3W3X3Y3Z3[3\3]3^3_3`3a3b3c3d3e3f3g3h3i3j3k3l3m3n3o3p3q3r3s3t3u3v3w3x3y3z3{3|3}3~3
16TSTTableResolver
17TSCETableResolver
23TSCEASTSortRowsRewriter
19TSCEASTIteratorBase
TSTArchives.sos.proto
TSTSOS
TSDArchives.sos.proto
TSSArchives.sos.proto
TSTStylePropertyArchiving.proto
TSWPArchives.sos.proto"t
#SpecSetTableStrokePresetListArchive
table_stroke_preset_list
.TST.StrokePresetListArchive
unset
 SpecTableStrokePresetListArchive
!spec_set_table_stroke_preset_list
2+.TSTSOS.SpecSetTableStrokePresetListArchive"
&TableCellStylePropertyChangeSetArchive
text_wrap
.TSSSOS.SpecBoolArchive
text_wrap_undefined
type
.TSSSOS.SpecIntegerArchive
type_undefined
fill
.TSDSOS.SpecFillArchive
fill_undefined
vertical_alignment
.TSSSOS.SpecIntegerArchive
vertical_alignment_undefined
padding
.TSWPSOS.SpecPaddingArchive
padding_undefined
"TableStylePropertyChangeSetArchive
auto_resize
.TSSSOS.SpecBoolArchive
auto_resize_undefined
banded_rows
.TSSSOS.SpecBoolArchive
banded_rows_undefined
banded_cell_fill
.TSDSOS.SpecFillArchive
banded_cell_fill_undefined
behaves_like_spreadsheet
.TSSSOS.SpecBoolArchive
"behaves_like_spreadsheet_undefined
body_horizontal_border_stroke
.TSDSOS.SpecStrokeArchive
'body_horizontal_border_stroke_undefined
body_vertical_border_stroke
.TSDSOS.SpecStrokeArchive
%body_vertical_border_stroke_undefined
body_horizontal_stroke
.TSDSOS.SpecStrokeArchive
 body_horizontal_stroke_undefined
body_vertical_stroke
.TSDSOS.SpecStrokeArchive
body_vertical_stroke_undefined
header_column_border_stroke
.TSDSOS.SpecStrokeArchive
%header_column_border_stroke_undefined
header_column_vertical_stroke
.TSDSOS.SpecStrokeArchive
'header_column_vertical_stroke_undefined
header_column_horizontal_stroke
.TSDSOS.SpecStrokeArchive
)header_column_horizontal_stroke_undefined
header_column_separator_stroke
.TSDSOS.SpecStrokeArchive
(header_column_separator_stroke_undefined
header_row_border_stroke
.TSDSOS.SpecStrokeArchive
"header_row_border_stroke_undefined
header_row_horizontal_stroke
.TSDSOS.SpecStrokeArchive
&header_row_horizontal_stroke_undefined
header_row_vertical_stroke
.TSDSOS.SpecStrokeArchive
$header_row_vertical_stroke_undefined
header_row_separator_stroke
.TSDSOS.SpecStrokeArchive
%header_row_separator_stroke_undefined
footer_row_border_stroke
.TSDSOS.SpecStrokeArchive
"footer_row_border_stroke_undefined
footer_row_horizontal_stroke
.TSDSOS.SpecStrokeArchive
&footer_row_horizontal_stroke_undefined
footer_row_vertical_stroke
.TSDSOS.SpecStrokeArchive
$footer_row_vertical_stroke_undefined
footer_row_separator_stroke
.TSDSOS.SpecStrokeArchive
%footer_row_separator_stroke_undefined
stroke_preset_list_object
2(.TSTSOS.SpecTableStrokePresetListArchive
#stroke_preset_list_object_undefined
vertical_strokes_visible
.TSSSOS.SpecBoolArchive
"vertical_strokes_visible_undefined
horizontal_strokes_visible
.TSSSOS.SpecBoolArchive
$horizontal_strokes_visible_undefined
header_row_sep_visible
.TSSSOS.SpecBoolArchive
 header_row_sep_visible_undefined
header_row_verticals_visible
.TSSSOS.SpecBoolArchive
&header_row_verticals_visible_undefined
header_col_sep_visible
.TSSSOS.SpecBoolArchive
 header_col_sep_visible_undefined
header_col_horizontals_visible
.TSSSOS.SpecBoolArchive
(header_col_horizontals_visible_undefined
footer_sep_visible
.TSSSOS.SpecBoolArchive
footer_sep_visible_undefined
footer_verticals_visible
.TSSSOS.SpecBoolArchive
"footer_verticals_visible_undefined
border_strokes_visible
.TSSSOS.SpecBoolArchive
 border_strokes_visible_undefined
master_font_family
.TSSSOS.SpecStringArchive
master_font_family_undefined
writing_direction
.TSSSOS.SpecIntegerArchive
writing_direction_undefined
category_level1_top_stroke
.TSDSOS.SpecStrokeArchive
$category_level1_top_stroke_undefined
category_level2_top_stroke
.TSDSOS.SpecStrokeArchive
$category_level2_top_stroke_undefined
category_level3_top_stroke
.TSDSOS.SpecStrokeArchive
$category_level3_top_stroke_undefined
category_level4_top_stroke
.TSDSOS.SpecStrokeArchive
$category_level4_top_stroke_undefined
category_level5_top_stroke
.TSDSOS.SpecStrokeArchive
$category_level5_top_stroke_undefined
&category_level1_label_separator_stroke
.TSDSOS.SpecStrokeArchive
0category_level1_label_separator_stroke_undefined
&category_level2_label_separator_stroke
.TSDSOS.SpecStrokeArchive
0category_level2_label_separator_stroke_undefined
&category_level3_label_separator_stroke
.TSDSOS.SpecStrokeArchive
0category_level3_label_separator_stroke_undefined
&category_level4_label_separator_stroke
.TSDSOS.SpecStrokeArchive
0category_level4_label_separator_stroke_undefined
&category_level5_label_separator_stroke
.TSDSOS.SpecStrokeArchive
0category_level5_label_separator_stroke_undefined
category_level1_bottom_stroke
.TSDSOS.SpecStrokeArchive
'category_level1_bottom_stroke_undefined
category_level2_bottom_stroke
.TSDSOS.SpecStrokeArchive
'category_level2_bottom_stroke_undefined
category_level3_bottom_stroke
.TSDSOS.SpecStrokeArchive
'category_level3_bottom_stroke_undefined
category_level4_bottom_stroke
.TSDSOS.SpecStrokeArchive
'category_level4_bottom_stroke_undefined
category_level5_bottom_stroke
.TSDSOS.SpecStrokeArchive
'category_level5_bottom_stroke_undefined
category_level1_interior_stroke
.TSDSOS.SpecStrokeArchive
)category_level1_interior_stroke_undefined
category_level2_interior_stroke
.TSDSOS.SpecStrokeArchive
)category_level2_interior_stroke_undefined
category_level3_interior_stroke
.TSDSOS.SpecStrokeArchive
)category_level3_interior_stroke_undefined
category_level4_interior_stroke
.TSDSOS.SpecStrokeArchive
)category_level4_interior_stroke_undefined
category_level5_interior_stroke
.TSDSOS.SpecStrokeArchive
)category_level5_interior_stroke_undefined
"body_pivot_group_horizontal_stroke
.TSDSOS.SpecStrokeArchive
,body_pivot_group_horizontal_stroke_undefined
 body_pivot_group_vertical_stroke
.TSDSOS.SpecStrokeArchive
*body_pivot_group_vertical_stroke_undefined
(body_pivot_de_emphasis_horizontal_stroke
.TSDSOS.SpecStrokeArchive
2body_pivot_de_emphasis_horizontal_stroke_undefined
#body_pivot_emphasis_vertical_stroke
.TSDSOS.SpecStrokeArchive
-body_pivot_emphasis_vertical_stroke_undefined
+header_column_pivot_group_horizontal_stroke
.TSDSOS.SpecStrokeArchive
5header_column_pivot_group_horizontal_stroke_undefined
,header_column_pivot_group_de_emphasis_stroke
.TSDSOS.SpecStrokeArchive
6header_column_pivot_group_de_emphasis_stroke_undefined
$header_column_pivot_separator_stroke
.TSDSOS.SpecStrokeArchive
.header_column_pivot_separator_stroke_undefined
&header_row_pivot_group_vertical_stroke
.TSDSOS.SpecStrokeArchive
0header_row_pivot_group_vertical_stroke_undefined
)header_row_pivot_group_de_emphasis_stroke
.TSDSOS.SpecStrokeArchive
3header_row_pivot_group_de_emphasis_stroke_undefined
header_row_pivot_title_stroke
.TSDSOS.SpecStrokeArchive
'header_row_pivot_title_stroke_undefined
&footer_row_pivot_group_vertical_stroke
.TSDSOS.SpecStrokeArchive
0footer_row_pivot_group_vertical_stroke_undefined
N6TSTSOS35SpecSetTableStrokePresetListArchiveE
N6TSTSOS32SpecTableStrokePresetListArchiveE
N6TSTSOS38TableCellStylePropertyChangeSetArchiveE
N6TSTSOS34TableStylePropertyChangeSetArchiveE
31TSCEASTIsSingleNodeTypeRewriter
16TSCEFunction_ABS
20TSCEFunction_ACCRINT
22TSCEFinancialFunctions
21TSCEFunction_ACCRINTM
17TSCEFunction_ACOS
18TSCEFunction_ACOSH
20TSCEFunction_ADDRESS
16TSCEFunction_AND
18TSCEFunction_AREAS
17TSCEFunction_ASIN
18TSCEFunction_ASINH
17TSCEFunction_ATAN
18TSCEFunction_ATAN2
18TSCEFunction_ATANH
19TSCEFunction_AVEDEV
20TSCEFunction_AVERAGE
21TSCEFunction_AVERAGEA
22TSCEFunction_AVERAGEIF
23TSCEFunction_AVERAGEIFS
22TSCEFunction_BASETONUM
20TSCEFunction_BESSELJ
20TSCEFunction_BESSELY
21TSCEFunction_BETADIST
20TSCEFunction_BETAINV
20TSCEFunction_BIN2DEC
20TSCEFunction_BIN2HEX
20TSCEFunction_BIN2OCT
22TSCEFunction_BINOMDIST
19TSCEFunction_BITAND
22TSCEFunction_BITLSHIFT
22TSCEFunction_BITRSHIFT
18TSCEFunction_BITOR
19TSCEFunction_BITXOR
25TSCEFunction_BONDDURATION
26TSCEFunction_BONDMDURATION
20TSCEFunction_CEILING
17TSCEFunction_CHAR
20TSCEFunction_CHIDIST
19TSCEFunction_CHIINV
20TSCEFunction_CHITEST
19TSCEFunction_CHOOSE
18TSCEFunction_CLEAN
17TSCEFunction_CODE
19TSCEFunction_COLUMN
20TSCEFunction_COLUMNS
19TSCEFunction_COMBIN
19TSCEFunction_CONCAT
24TSCEFunction_CONCATENATE
23TSCEFunction_CONFIDENCE
25TSCEFunction_CONFIDENCE_T
20TSCEFunction_CONVERT
19TSCEFunction_CORREL
16TSCEFunction_COS
17TSCEFunction_COSH
18TSCEFunction_COUNT
19TSCEFunction_COUNTA
23TSCEFunction_COUNTBLANK
20TSCEFunction_COUNTIF
21TSCEFunction_COUNTIFS
25TSCEFunction_COUNTMATCHES
22TSCEFunction_COUPDAYBS
21TSCEFunction_COUPDAYS
23TSCEFunction_COUPDAYSNC
20TSCEFunction_COUPNUM
18TSCEFunction_COVAR
25TSCEFunction_COVARIANCE_S
22TSCEFunction_CRITBINOM
20TSCEFunction_CUMIPMT
21TSCEFunction_CUMPRINC
17TSCEFunction_DATE
20TSCEFunction_DATEDIF
22TSCEFunction_DATEVALUE
16TSCEFunction_DAY
20TSCEFunction_DAYNAME
20TSCEFunction_DAYS360
15TSCEFunction_DB
16TSCEFunction_DDB
20TSCEFunction_DEC2BIN
20TSCEFunction_DEC2HEX
20TSCEFunction_DEC2OCT
20TSCEFunction_DEGREES
18TSCEFunction_DELTA
18TSCEFunction_DEVSQ
17TSCEFunction_DISC
19TSCEFunction_DOLLAR
21TSCEFunction_DUR2DAYS
22TSCEFunction_DUR2HOURS
29TSCEFunction_DUR2MILLISECONDS
24TSCEFunction_DUR2MINUTES
24TSCEFunction_DUR2SECONDS
22TSCEFunction_DUR2WEEKS
21TSCEFunction_DURATION
18TSCEFunction_EDATE
19TSCEFunction_EFFECT
20TSCEFunction_EOMONTH
16TSCEFunction_ERF
17TSCEFunction_ERFC
17TSCEFunction_EVEN
18TSCEFunction_EXACT
16TSCEFunction_EXP
22TSCEFunction_EXPONDIST
17TSCEFunction_FACT
23TSCEFunction_FACTDOUBLE
18TSCEFunction_FALSE
18TSCEFunction_FDIST
17TSCEFunction_FIND
33TSCEFunction_FIND_CASEINSENSITIVE
17TSCEFunction_FINV
18TSCEFunction_FIXED
18TSCEFunction_FLOOR
21TSCEFunction_FORECAST
19TSCELineFitFunction
24TSCEFunction_FORMULATEXT
22TSCEFunction_FREQUENCY
15TSCEFunction_FV
21TSCEFunction_CURRENCY
25TSCEFunction_CURRENCYCODE
28TSCEFunction_CURRENCYCONVERT
22TSCEFunction_CURRENCYH
22TSCEFunction_GAMMADIST
21TSCEFunction_GAMMAINV
20TSCEFunction_GAMMALN
16TSCEFunction_GCD
20TSCEFunction_GEOMEAN
19TSCEFunction_GESTEP
25TSCEFunction_GETPIVOTDATA
20TSCEFunction_HARMEAN
20TSCEFunction_HEX2BIN
20TSCEFunction_HEX2DEC
20TSCEFunction_HEX2OCT
20TSCEFunction_HLOOKUP
17TSCEFunction_HOUR
22TSCEFunction_HYPERLINK
15TSCEFunction_IF
20TSCEFunction_IFERROR
16TSCEFunction_IFS
18TSCEFunction_INDEX
21TSCEFunction_INDIRECT
16TSCEFunction_INT
22TSCEFunction_INTERCEPT
29TSCEFunction_INTERSECT_RANGES
20TSCEFunction_INTRATE
17TSCEFunction_IPMT
16TSCEFunction_IRR
20TSCEFunction_ISBLANK
19TSCEFunction_ISDATE
20TSCEFunction_ISERROR
19TSCEFunction_ISEVEN
21TSCEFunction_ISNUMBER
18TSCEFunction_ISODD
23TSCEFunction_ISOWEEKNUM
18TSCEFunction_ISPMT
19TSCEFunction_ISTEXT
18TSCEFunction_LARGE
16TSCEFunction_LCM
17TSCEFunction_LEFT
16TSCEFunction_LEN
19TSCEFunction_LINEST
15TSCEFunction_LN
16TSCEFunction_LOG
18TSCEFunction_LOG10
19TSCEFunction_LOGINV
24TSCEFunction_LOGNORMDIST
19TSCEFunction_LOOKUP
18TSCEFunction_LOWER
18TSCEFunction_MATCH
16TSCEFunction_MAX
17TSCEFunction_MAXA
19TSCEFunction_MAXIFS
16TSCEFunction_MID
16TSCEFunction_MIN
17TSCEFunction_MINA
19TSCEFunction_MINIFS
19TSCEFunction_MINUTE
17TSCEFunction_MIRR
16TSCEFunction_MOD
22TSCEFunction_MODE_MULT
18TSCEFunction_MONTH
22TSCEFunction_MONTHNAME
19TSCEFunction_MROUND
24TSCEFunction_MULTINOMIAL
25TSCEFunction_NEGBINOMDIST
24TSCEFunction_NETWORKDAYS
20TSCEFunction_NOMINAL
21TSCEFunction_NORMDIST
20TSCEFunction_NORMINV
22TSCEFunction_NORMSDIST
21TSCEFunction_NORMSINV
16TSCEFunction_NOT
16TSCEFunction_NOW
17TSCEFunction_NPER
16TSCEFunction_NPV
22TSCEFunction_NUMTOBASE
20TSCEFunction_OCT2BIN
20TSCEFunction_OCT2DEC
20TSCEFunction_OCT2HEX
16TSCEFunction_ODD
19TSCEFunction_OFFSET
15TSCEFunction_OR
23TSCEFunction_PERCENTILE
27TSCEFunction_PERCENTILE_EXC
24TSCEFunction_PERCENTRANK
28TSCEFunction_PERCENTRANK_EXC
19TSCEFunction_PERMUT
15TSCEFunction_PI
22TSCEFunction_PLAINTEXT
16TSCEFunction_PMT
20TSCEFunction_POISSON
23TSCEFunction_POLYNOMIAL
18TSCEFunction_POWER
17TSCEFunction_PPMT
18TSCEFunction_PRICE
22TSCEFunction_PRICEDISC
21TSCEFunction_PRICEMAT
17TSCEFunction_PROB
20TSCEFunction_PRODUCT
19TSCEFunction_PROPER
15TSCEFunction_PV
21TSCEFunction_QUARTILE
25TSCEFunction_QUARTILE_EXC
21TSCEFunction_QUOTIENT
20TSCEFunction_RADIANS
17TSCEFunction_RAND
24TSCEFunction_RANDBETWEEN
17TSCEFunction_RANK
21TSCEFunction_RANK_AVG
17TSCEFunction_RATE
21TSCEFunction_RECEIVED
27TSCEFunction_REFERENCE_NAME
18TSCEFunction_REGEX
26TSCEFunction_REGEX_EXTRACT
20TSCEFunction_REPLACE
17TSCEFunction_REPT
18TSCEFunction_RIGHT
18TSCEFunction_ROMAN
18TSCEFunction_ROUND
22TSCEFunction_ROUNDDOWN
20TSCEFunction_ROUNDUP
16TSCEFunction_ROW
17TSCEFunction_ROWS
19TSCEFunction_SEARCH
19TSCEFunction_SECOND
22TSCEFunction_SERIESSUM
17TSCEFunction_SIGN
16TSCEFunction_SIN
17TSCEFunction_SINH
16TSCEFunction_SLN
18TSCEFunction_SLOPE
18TSCEFunction_SMALL
17TSCEFunction_SQRT
19TSCEFunction_SQRTPI
24TSCEFunction_STANDARDIZE
18TSCEFunction_STDEV
19TSCEFunction_STDEVA
19TSCEFunction_STDEVP
20TSCEFunction_STDEVPA
18TSCEFunction_STOCK
19TSCEFunction_STOCKH
26TSCEFunction_STRIPDURATION
23TSCEFunction_SUBSTITUTE
21TSCEFunction_SUBTOTAL
16TSCEFunction_SUM
18TSCEFunction_SUMIF
19TSCEFunction_SUMIFS
23TSCEFunction_SUMPRODUCT
18TSCEFunction_SUMSQ
21TSCEFunction_SUMX2MY2
21TSCEFunction_SUMX2PY2
20TSCEFunction_SUMXMY2
19TSCEFunction_SWITCH
16TSCEFunction_SYD
14TSCEFunction_T
16TSCEFunction_TAN
17TSCEFunction_TANH
18TSCEFunction_TDIST
22TSCEFunction_TEXTAFTER
23TSCEFunction_TEXTBEFORE
24TSCEFunction_TEXTBETWEEN
21TSCEFunction_TEXTJOIN
17TSCEFunction_TIME
22TSCEFunction_TIMEVALUE
17TSCEFunction_TINV
18TSCEFunction_TODAY
22TSCEFunction_TRANSPOSE
17TSCEFunction_TRIM
17TSCEFunction_TRUE
18TSCEFunction_TRUNC
18TSCEFunction_TTEST
25TSCEFunction_UNION_RANGES
18TSCEFunction_UPPER
18TSCEFunction_VALUE
16TSCEFunction_VAR
17TSCEFunction_VARA
17TSCEFunction_VARP
18TSCEFunction_VARPA
16TSCEFunction_VDB
20TSCEFunction_VLOOKUP
20TSCEFunction_WEEKDAY
20TSCEFunction_WEEKNUM
20TSCEFunction_WEIBULL
20TSCEFunction_WORKDAY
17TSCEFunction_XIRR
20TSCEFunction_XLOOKUP
19TSCEFunction_XMATCH
17TSCEFunction_XNPV
17TSCEFunction_YEAR
21TSCEFunction_YEARFRAC
18TSCEFunction_YIELD
22TSCEFunction_YIELDDISC
21TSCEFunction_YIELDMAT
18TSCEFunction_ZTEST
20TSCEFunction___CHART
28TSCEFunction___CELLVALUETYPE
30TSCEFunction___INTERACTIONTYPE
TSTArchives.proto
TSPMessages.proto
TSDArchives.proto
TSKArchives.proto
TSSArchives.proto
TSCEArchives.proto
TSWPArchives.proto
TSTStylePropertyArchiving.proto"Q
CellID
packedData
expanded_coord
.TSCE.CellCoordinateArchive"
CellUIDLookupListArchive
column_uids
.TSCE.UidLookupListArchive
row_uids
.TSCE.UidLookupListArchive
column_indexes
row_indexes
CellUIDListArchive
row_uids
.TSP.UUID
column_uids
.TSP.UUID
compressed_row_indexes
compressed_column_indexes
uncompressed_lookup_list
.TST.CellUIDLookupListArchive"F
TableSize
packedData
num_columns
num_rows
ExpandedTableSize
num_columns
num_rows
CellRange
origin
.TST.CellID
size
.TST.TableSize"f
ExpandedCellRange
origin
.TSCE.CellCoordinateArchive
size
.TST.ExpandedTableSize"
TableSelection
cellRange
.TST.CellRange
extendedCellRange
.TST.CellRange
extendedCellRangeValid
selection_type
.TST.SelectionTypeArchive"
TileRowInfo
tile_row_index
cell_count
cell_storage_buffer_pre_bnc
cell_offsets_pre_bnc
storage_version
cell_storage_buffer
cell_offsets
has_wide_offsets
Tile
maxColumn
maxRow
numCells
numrows
rowInfos
.TST.TileRowInfo
storage_version
last_saved_in_BNC
should_use_wide_rows
TileStorage
tiles
.TST.TileStorage.Tile
tile_size
should_use_wide_rows
Tile
tileid
tile
.TSP.Reference"
PopUpMenuModel
item
.TST.PopUpMenuModel.CellValueB
tsce_item
.TSCE.CellValueArchive
CellValue
cell_value_type
2!.TST.PopUpMenuModel.CellValueType
boolean_value
.TSCE.BooleanCellValueArchive
date_value
.TSCE.DateCellValueArchive
number_value
.TSCE.NumberCellValueArchive
string_value
.TSCE.StringCellValueArchive"`
CellValueType
NIL_TYPE
BOOLEAN_TYPE
DATE_TYPE
NUMBER_TYPE
STRING_TYPE
ImportWarningSetArchive
formula_import_warning
21.TST.ImportWarningSetArchive.FormulaImportWarning
cond_format_above_avg_equal_avg
false
cond_format_above_avg_std_dev
false
cond_format_complex_formula
false
cond_format_contains_errors
false
cond_format_expr
false
cond_format_not_contains_errors
false
(cond_format_parameters_not_all_same_type
false
cond_format_stop_if_true
false
 cond_format_unsupported_operator
false
cond_format_unsupported_styling
false
#cond_format_unsupported_time_period
false
error_cell_with_no_formula
false
unsupported_cond_format
false
original_data_format
2formula_warning_filtered_column_formula_not_copied
false
duration_format_range_changed
false
FormulaImportWarning
formula_warning_type
2/.TST.ImportWarningSetArchive.FormulaWarningType
original_formula
supplementary_text
formula_warning_type_int
FormulaWarningType
THREE_D_REFERENCE
ARRAYED_FORMULA
DIFFERENT_BEHAVIOR_FOR_FUNCTION
ERROR_TOKEN
EXTERNAL_REFERENCE
NATURAL_LANGUAGE_FORMULA
REFERENCE_OUT_OF_BOUNDS
SHARED_FORMULA_BASE_NOT_FOUND
UNKNOWN_NAME
UNSUPPORTED_FORMULA
UNSUPPORTED_FUNCTION
UNSUPPORTED_NAME
TRANSPOSED_NO_ISSUES
TRANSPOSED_WITH_ISSUES
 TRANSPOSED_WITH_ISSUES_UNCHANGED
"CellRefImportWarningSetPairArchive
cell_ref
.TSCE.CellReferenceArchive
warning_set
.TST.ImportWarningSetArchive"m
 ImportWarningSetByCellRefArchive
cellref_warning_set_pair
2'.TST.CellRefImportWarningSetPairArchive"
TableDataList
listType
.TST.TableDataList.ListType
nextListID
entries
.TST.TableDataList.ListEntry
segments
.TSP.Reference
is_new_for_bnc
ListEntry
refcount
string
reference
.TSP.Reference
formula
.TSCE.FormulaArchive
format
.TSK.FormatStructArchive
custom_format
.TSK.CustomFormatArchive
rich_text_payload
.TSP.Reference
comment_storage
.TSP.Reference
import_warning_set
.TST.ImportWarningSetArchive
cell_spec
.TST.CellSpecArchive"
ListType
STRING
FORMAT
FORMULA
STYLE
FORMULA_ERROR
CUSTOM_FORMAT
MULTIPLE_CHOICE_LIST_FORMAT
RICH_TEXT_PAYLOAD
CONDITIONAL_STYLE
COMMENT_STORAGE
IMPORT_WARNING
CONTROL_CELL_SPEC
TableDataListSegment
list_type
.TST.TableDataList.ListType
key_range
.TSP.Range
entries
.TST.TableDataList.ListEntry"W
TableRBTree
nodes
.TST.TableRBTree.Node
Node
value
HeaderStorageBucket
bucketHashFunction
headers
.TST.HeaderStorageBucket.Header
Header
index
size
hidingState
numberOfCells
cell_style
.TSP.Reference
text_style
.TSP.Reference"L
HeaderStorage
bucketHashFunction
buckets
.TSP.Reference"
DataStore
rowHeaders
.TST.HeaderStorage
columnHeaders
.TSP.Reference
tiles
.TST.TileStorage
stringTable
.TSP.Reference
styleTable
.TSP.Reference
formula_table
.TSP.Reference
formulaErrorTable
.TSP.Reference
format_table_pre_bnc
.TSP.Reference
multipleChoiceListFormatTable
.TSP.Reference
merge_region_map
.TSP.Reference
deprecated_custom_format_table
.TSP.Reference
nextRowStripID
nextColumnStripID
rowTileTree
.TST.TableRBTree
columnTileTree
.TST.TableRBTree
storage_version_pre_bnc
rich_text_table
.TSP.Reference
conditionalstyletable
.TSP.Reference
commentStorageTable
.TSP.Reference
importWarningSetTable
.TSP.Reference
control_cell_spec_table
.TSP.Reference
format_table
.TSP.Reference"
TableInfoArchive
super
.TSD.DrawableArchive
tableModel
.TSP.Reference
editing_state
.TSP.ReferenceB
summary_model
.TSP.Reference
category_order
.TSP.Reference
view_column_row_uids
.TSP.Reference
group_by_uuid
.TSP.UUID
hidden_states_uuid
.TSP.UUID
formula_coord_space_in_pre40
formula_coord_space
pasteboard_coord_mapper
.TSCE.CoordMapperArchive
layout_engine
.TST.LayoutEngineArchive
pivot_data_model
.TSP.Reference
is_a_pivot_table
pivot_order
.TSP.Reference"^
CategoryInfoArchive
super
.TSD.DrawableArchive
tableModel
.TSP.Reference"[
WPTableInfoArchive
super
.TST.TableInfoArchive
storage
.TSP.Reference"
TableStyleNetworkArchive
body_text_style
.TSP.Reference
header_row_text_style
.TSP.Reference
header_column_text_style
.TSP.Reference
footer_row_text_style
.TSP.Reference
body_cell_style
.TSP.Reference
header_row_style
.TSP.Reference
header_column_style
.TSP.Reference
footer_row_style
.TSP.Reference
table_style
.TSP.Reference
table_name_style
.TSP.Reference
table_name_shape_style
.TSP.Reference
preset_id
category_level_1_text_style
.TSP.Reference
category_level_2_text_style
.TSP.Reference
category_level_3_text_style
.TSP.Reference
category_level_4_text_style
.TSP.Reference
category_level_5_text_style
.TSP.Reference
category_level_1_style
.TSP.Reference
category_level_2_style
.TSP.Reference
category_level_3_style
.TSP.Reference
category_level_4_style
.TSP.Reference
category_level_5_style
.TSP.Reference
label_level_1_text_style
.TSP.Reference
label_level_2_text_style
.TSP.Reference
label_level_3_text_style
.TSP.Reference
label_level_4_text_style
.TSP.Reference
label_level_5_text_style
.TSP.Reference
label_level_1_style
.TSP.Reference
label_level_2_style
.TSP.Reference
label_level_3_style
.TSP.Reference
label_level_4_style
.TSP.Reference
label_level_5_style
.TSP.Reference
pivot_body_summary_row_style
.TSP.Reference
pivot_body_summary_column_style
.TSP.Reference
!pivot_header_column_summary_style
.TSP.Reference"
TableGroupSortOrderUIDArchive
group_sort_rules
2:.TST.TableGroupSortOrderUIDArchive.GroupSortRuleUIDArchive
GroupSortRuleUIDArchive
grouping_column_uid
.TSP.UUID
column_uid
.TSP.UUID
direction
2D.TST.TableGroupSortOrderUIDArchive.GroupSortRuleUIDArchive.Direction"*
Direction
ascending
descending
TableSortOrderArchive
type
2#.TST.TableSortOrderArchive.SortType
rules
2*.TST.TableSortOrderArchive.SortRuleArchive
SortRuleArchive
index
direction
24.TST.TableSortOrderArchive.SortRuleArchive.Direction"*
Direction
ascending
descending
SortType
entire_table
row_range
TableSortOrderUIDArchive
type
2&.TST.TableSortOrderUIDArchive.SortType
rules
2-.TST.TableSortOrderUIDArchive.SortRuleArchive
SortRuleArchive
column_uid
.TSP.UUID
direction
27.TST.TableSortOrderUIDArchive.SortRuleArchive.Direction"*
Direction
ascending
descending
SortType
entire_table
row_range
SortRuleReferenceTrackerArchive
reference_tracker
.TSP.Reference"1
CellRegion
cell_ranges
.TST.CellRange"E
CellUIDRegionArchive
cell_uid_ranges
.TSP.UUIDRectArchive"
StructuredTextImportRecord
import_settings
2!.TSK.StructuredTextImportSettings
import_source
import_date
source_data
source_encoding
confidence
imported_region
.TST.CellRegion
source_row_count
source_column_count
TableModelArchive
table_id
from_table_id
was_cut
table_style
.TSP.Reference
body_text_style
.TSP.Reference
header_row_text_style
.TSP.Reference
header_column_text_style
.TSP.Reference
footer_row_text_style
.TSP.Reference
body_cell_style
.TSP.Reference
header_row_style
.TSP.Reference
header_column_style
.TSP.Reference
footer_row_style
.TSP.Reference
table_name_style
.TSP.Reference
table_name_shape_style
.TSP.Reference
table_style_preset
.TSP.Reference
preset_index
base_data_store
.TST.DataStore
provider
.TSP.Reference
number_of_rows
number_of_columns
table_name
table_name_enabled
table_name_height
table_name_border_enabled
number_of_header_rows
number_of_header_columns
number_of_footer_rows
header_rows_frozen
header_columns_frozen
number_of_hidden_rows
number_of_hidden_columns
number_of_user_hidden_rows
number_of_user_hidden_columns
number_of_filtered_rows
default_row_height
default_column_width
origin_offset
.TST.CellIDB
repeating_header_rows_enabled
style_apply_clears_all
 repeating_header_columns_enabled
&hidden_state_formula_owner_for_columns
.TSP.Reference
#hidden_state_formula_owner_for_rows
.TSP.Reference
row_filter_set_pre_pivot
.TSP.Reference
"conditional_style_formula_owner_id
.TSP.CFUUIDArchive
sort_order
.TST.TableSortOrderArchive
sort_rule_reference_tracker
2$.TST.SortRuleReferenceTrackerArchive
base_column_row_uids
.TSP.Reference
merge_owner
.TST.MergeOwnerArchive
stroke_sidecar
.TSP.Reference
preset_needs_strong_ownership
text_import_record
.TST.StructuredTextImportRecord
category_level_1_style
.TSP.Reference
category_level_2_style
.TSP.Reference
category_level_3_style
.TSP.Reference
category_level_4_style
.TSP.Reference
category_level_5_style
.TSP.Reference
category_level_1_text_style
.TSP.Reference
category_level_2_text_style
.TSP.Reference
category_level_3_text_style
.TSP.Reference
category_level_4_text_style
.TSP.Reference
category_level_5_text_style
.TSP.Reference
hidden_states_owner
.TST.HiddenStatesOwnerArchive
label_level_1_style
.TSP.Reference
label_level_2_style
.TSP.Reference
label_level_3_style
.TSP.Reference
label_level_4_style
.TSP.Reference
label_level_5_style
.TSP.Reference
label_level_1_text_style
.TSP.Reference
label_level_2_text_style
.TSP.Reference
label_level_3_text_style
.TSP.Reference
label_level_4_text_style
.TSP.Reference
label_level_5_text_style
.TSP.Reference
category_owner_deprecated
.TST.CategoryOwnerArchive
pencil_annotation_owner
2!.TST.PencilAnnotationOwnerArchive
from_group_by_uid
haunted_owner
.TSCE.HauntedOwnerArchive
pivot_owner
.TSP.Reference
category_owner
.TSP.Reference
pivot_body_summary_row_style
.TSP.Reference
pivot_body_summary_column_style
.TSP.Reference
!pivot_header_column_summary_style
.TSP.Reference
pivot_value_types_by_col
pivot_date_grouping_columns
pivot_date_grouping_types
SummaryModelArchive
table_info
.TSP.Reference
data_store
.TST.DataStore
column_row_uids
.TSP.Reference
aggregate_formula_owner_uuid
.TSP.UUID
summary_cell_vendor
.TSP.Reference
category_column_width
summary_row_level_1_height
summary_row_level_2_height
summary_row_level_3_height
summary_row_level_4_height
summary_row_level_5_height
 summary_label_row_level_1_height
 summary_label_row_level_2_height
 summary_label_row_level_3_height
 summary_label_row_level_4_height
 summary_label_row_level_5_height
label_row_visibility_1
label_row_visibility_2
label_row_visibility_3
label_row_visibility_4
label_row_visibility_5
summary_row_height_list
label_row_height_list
label_row_visibility_list
group_sort_order
2".TST.TableGroupSortOrderUIDArchive"
%SummaryModelGroupByChangeStateArchive
cell_map
.TSP.Reference
summary_row_height_list
label_row_height_list
label_row_visibility_list
ColumnRowUIDMapArchive
sorted_column_uids
.TSP.UUID
column_index_for_uid
column_uid_for_index
sorted_row_uids
.TSP.UUID
row_index_for_uid
row_uid_for_index
StrokeLayerArchive
row_column_index
stroke_runs
2(.TST.StrokeLayerArchive.StrokeRunArchive
StrokeRunArchive
origin
length
stroke
.TSD.StrokeArchive
order
StrokeSidecarArchive
max_order
column_count
row_count
left_column_stroke_layers
.TSP.Reference
right_column_stroke_layers
.TSP.Reference
top_row_stroke_layers
.TSP.Reference
bottom_row_stroke_layers
.TSP.Reference"
DurationWrapperArchive"
Cell
valueType
.TST.CellValueType
cell_style
.TSP.Reference
text_style
.TSP.Reference
numberValue
stringValue
boolValue
current_format
.TSK.FormatStructArchive
formulaError
.TSP.Reference
number_format
.TSK.FormatStructArchive
currency_format
.TSK.FormatStructArchive
duration_format
.TSK.FormatStructArchive
date_format
.TSK.FormatStructArchive
custom_format
.TSK.FormatStructArchive
base_format
.TSK.FormatStructArchive
explicit_format_flags
richText
.TSP.Reference
conditional_style
.TSP.Reference
comment_storage
.TSP.Reference
conditional_style_applied_rule
import_warning_set
.TST.ImportWarningSetArchive
custom_format_object
.TSK.CustomFormatArchive
cell_border
.TST.CellBorderArchive
cell_spec
.TST.CellSpecArchive
cell_format_kind
text_format
.TSK.FormatStructArchive
boolean_format
.TSK.FormatStructArchive
decimal_value_low
decimal_value_high
MergeRegionMapArchive
cell_range
.TST.CellRange"
CellMapArchive
cell_tiles
.TSP.Reference
uid_based
expanded_cell_ids
.TSCE.CellCoordinateArchive
cell_uid_list
.TST.CellUIDListArchive
merge_uid_ranges
.TSP.UUIDRectArchive
unmerge_uid_ranges
.TSP.UUIDRectArchive
merge_actions
.TST.MergeOperationArchive
may_modify_formulas_in_cells
true
(may_modify_values_referenced_by_formulas
true"
CellListArchive
cells
2!.TST.CellListArchive.OptionalCell
trailing_empty_cell_count
OptionalCell
cell
.TST.Cell"
ConcurrentCellMapArchive
cell_lists
.TSP.Reference
uid_based
merge_actions
.TST.MergeOperationArchive
may_modify_formulas_in_cells
true
(may_modify_values_referenced_by_formulas
true
affects_cell_borders
true"
ConcurrentCellListArchive
cells
2+.TST.ConcurrentCellListArchive.OptionalCell
cell_uid_range
.TSP.UUIDRectArchive
cell_range
.TST.CellRange
OptionalCell
cell
.TST.Cell"
CellFormatAndValueArchive
valueType
.TST.CellValueType
numberValue
stringValue
boolValue
richTextStorage
.TSP.Reference
use_all_spare_formats
explicit_flags
cell_format_kind
number_format
.TSK.FormatStructArchive
currency_format
.TSK.FormatStructArchive
date_format
.TSK.FormatStructArchive
duration_format
.TSK.FormatStructArchive
text_format
.TSK.FormatStructArchive
boolean_format
.TSK.FormatStructArchive
formatted_value
formatted_rich_text_value
.TSP.Reference
apply_spare_format_only
spare_format_type
decimal_low
decimal_high
suppress_apply_value
CellSpecArchive
interaction_type
formula
.TSCE.FormulaArchive
range_control_min
range_control_max
range_control_inc
chooser_control_popup_model
.TSP.Reference
chooser_control_start_w_first
%category_summary_should_display_label
CommentStorageWrapperArchive
comment_storage
.TSP.Reference"
CellDiffArchive
property_map_to_set
.TSS.CommandPropertyMapArchive
property_map_to_reset
.TSS.CommandPropertyMapArchive"5
CellDiffArray
large_array
.TSP.LargeArray"s
CellDiffArraySegment
large_array_segment
.TSP.LargeArraySegment
elements
.TST.CellDiffArchive"
CellDiffMapArchive
uid_based
expanded_cell_ids
.TSCE.CellCoordinateArchive
cell_uids
.TST.CellUIDListArchive
cell_diff_array
.TSP.Reference"
HierarchicalCellDiffMapArchive
num_row_rules
num_column_rules
row_header_uids
.TSP.UUID
column_header_uids
.TSP.UUID
aggregate_rule_uids
.TSP.UUID
active_flattening_dimension
.TST.TableDimensionArchive
row_value_uids
.TSP.UUID
row_level_preorder
column_value_uids
.TSP.UUID
column_level_preorder
cell_diff_storage
2,.TST.HierarchicalCellDiffMapArchive.BoxedRow
row_sizes
column_sizes
BoxedRow
column_index_set
.TSP.IndexSet
cell_diff_list
.TST.CellDiffArchive"
DoubleStyleMapArchive
capacity
count
cell_map_entry
25.TST.DoubleStyleMapArchive.DoubleStyleMapEntryArchive
DoubleStyleMapEntryArchive
cell_id
.TST.CellID
old_style
.TSP.Reference
new_style
.TSP.Reference"
StyleTableMapArchive
capacity
count
map_entry
23.TST.StyleTableMapArchive.StyleTableMapEntryArchive
StyleTableMapEntryArchive
old_style
.TSP.Reference
new_style
.TSP.Reference"
SelectionArchive
tableModel
.TSP.ReferenceB
selection_type
.TST.SelectionTypeArchive
anchor_cell
.TST.CellID
cell_ranges
.TST.CellRange
base_ranges
.TST.CellRange
cursor_cell
.TST.CellID
table_info
.TSP.Reference
cell_uid_region
.TST.CellUIDRegionArchive
base_uid_region
.TST.CellUIDRegionArchive
anchor_cell_uid
.TSP.UUIDCoordArchive
cursor_cell_uid
.TSP.UUIDCoordArchive"
)DeathhawkRdar39989167CellSelectionArchive
table_info
.TSP.Reference
selection_type
.TST.SelectionTypeArchive
cell_uid_region
.TST.CellUIDRegionArchive
base_uid_region
.TST.CellUIDRegionArchive
anchor_cell_uid
.TSP.UUIDCoordArchive
cursor_cell_uid
.TSP.UUIDCoordArchive"&
StrokeSelectionArchive
mask
ControlCellSelectionArchive"
StockCellSelectionArchive"
TableNameSelectionArchive"p
AutofillSelectionArchive
source_cell_range
.TST.CellRange
target_cell_range
.TST.CellRange"f
FilterRulePrePivotArchive
predicate
2$.TST.FormulaPredicatePrePivotArchive
disabled
FilterRuleArchive
predicate
.TST.FormulaPredicateArchive"
TableStyleArchive
super
.TSS.StyleArchive
override_count
table_properties
2 .TST.TableStylePropertiesArchive"
CellStyleArchive
super
.TSS.StyleArchive
override_count
cell_properties
.TST.CellStylePropertiesArchive"
FormulaPredArgDataArchive
double_value
decimal_low
decimal_high
string_value
date_value
duration_timeinterval
duration_units
boolean_value
FormulaPredArgArchive
arg_type
arg_value
.TST.FormulaPredArgDataArchive
base_cell_ref
.TSCE.CellReferenceArchive
relative_cell_ref
.TSCE.RelativeCellRefArchive
category_ref
.TSCE.CategoryReferenceArchive
uid_tract_list
2).TSCE.ASTNodeArrayArchive.ASTUidTractList
host_cell_coord
.TSCE.CellCoordinateArchive
preserve_row
preserve_column
list_entries
.TST.FormulaPredArgDataArchive
view_tract_ref
.TSCE.ViewTractRefArchive"
FormulaPredicatePrePivotArchive
formula
.TSCE.FormulaArchive
predicate_type
qualifier1
qualifier2
param_index1
param_index2
param_index0
FormulaPredicateArchive
predicate_type
qualifier1
qualifier2
param_value0
.TST.FormulaPredArgArchive
param_value1
.TST.FormulaPredArgArchive
param_value2
.TST.FormulaPredArgArchive
formula
.TSCE.FormulaArchive
for_conditional_style
host_table_uid
.TSP.UUID
host_column_uid
.TSP.UUID
host_row_uid
.TSP.UUID"
ConditionalStyleSetArchive
ruleCount
rules_prepivot
2<.TST.ConditionalStyleSetArchive.ConditionalStyleRulePrePivot
rules
25.TST.ConditionalStyleSetArchive.ConditionalStyleRules
ConditionalStyleRulePrePivot
predicate
2$.TST.FormulaPredicatePrePivotArchive
cell_style
.TSP.Reference
text_style
.TSP.Reference
ConditionalStyleRule
predicate
.TST.FormulaPredicateArchive
cell_style
.TSP.Reference
text_style
.TSP.Reference
ConditionalStyleRules
rule
24.TST.ConditionalStyleSetArchive.ConditionalStyleRule"
FilterSetArchive
type
2#.TST.FilterSetArchive.FilterSetType:
FilterSetArchiveTypeAll
is_enabled
true
filter_rules_prepivot
.TST.FilterRulePrePivotArchive
 needs_formula_rewrite_for_import
false
filter_offsets
filter_enabled
filter_rules
.TST.FilterRuleArchive"I
FilterSetType
FilterSetArchiveTypeAll
FilterSetArchiveTypeAny
UniqueIndexArchive
column_uid
.TSP.UUID
unique_entries
2/.TST.UniqueIndexArchive.UniqueIndexEntryArchive
UniqueIndexEntryArchive
string_value
row_uids
.TSP.UUID"
HiddenStateExtentArchive
hidden_state_extent_uid
.TSP.UUID
base_hidden_states
2..TST.HiddenStateExtentArchive.RowOrColumnState
row_or_column_direction
22.TST.HiddenStateExtentArchive.RowOrColumnDirection
threshold_value
.TSCE.CellValueArchive
%needs_to_update_filter_set_for_import
false
collapsed_group_uids
.TSP.UUID
filter_set
.TSP.Reference
summary_pivot_hidden_indexes
.TSCE.IndexSetArchive
summary_filtered_indexes
.TSCE.IndexSetArchive
unique_indexes
.TST.UniqueIndexArchive
summary_hidden_states
2..TST.HiddenStateExtentArchive.RowOrColumnState
RowOrColumnState
row_or_column_uid
.TSP.UUID
user_hidden
filtered
pivot_hidden
RowOrColumnDirection
ColumnDirection
RowDirection
HiddenStatesArchive
hidden_states_uid
.TSP.UUID
column_hidden_state_extent
.TST.HiddenStateExtentArchive
row_hidden_state_extent
.TST.HiddenStateExtentArchive"i
HiddenStatesOwnerArchive
owner_uid
.TSP.UUID
hidden_states
.TST.HiddenStatesArchive"
ExpandCollapseStateArchive
uids_collapsed
.TSP.UUID
uids_expanded
.TSP.UUID
dimension
.TST.TableDimensionArchive"l
TokenAttachmentArchive
super
.TSWP.UIGraphicalAttachment
expressionNode
.TSP.Reference"8
FormulaArchive
expressionTree
.TSP.Reference"h
ExpressionNodeArchive
children
.TSP.Reference
first_index
last_index
BooleanNodeArchive
super
.TST.ExpressionNodeArchive
value
NumberNodeArchive
super
.TST.ExpressionNodeArchive
number
decimal_low
decimal_high
StringNodeArchive
super
.TST.ExpressionNodeArchive
value
IdentifierNodeArchive
super
.TST.ExpressionNodeArchive
identifier
symbol
ArrayNodeArchive
super
.TST.ExpressionNodeArchive
columns
rows
ListNodeArchive
super
.TST.ExpressionNodeArchive"V
OperatorNodeArchive
super
.TST.ExpressionNodeArchive
operatorChar
PostfixOperatorNodeArchive
super
.TST.OperatorNodeArchive"D
PrefixOperatorNodeArchive
super
.TST.OperatorNodeArchive"t
FunctionNodeArchive
super
.TST.ExpressionNodeArchive
functionIndex
invalidFunctionName
FunctionEndNodeArchive
super
.TST.ExpressionNodeArchive"[
DateNodeArchive
super
.TST.ExpressionNodeArchive
value
format
ReferenceNodeArchive
super
.TST.ExpressionNodeArchive
rangeReference
.TSCE.RangeReferenceArchive
preserve_flags
hostTableID
host_cell_ref
.TSCE.CellReferenceArchive
table_uid
.TSP.UUID
range_top_left
.TSP.UUIDCoordArchive
range_bottom_right
.TSP.UUIDCoordArchive
category_ref
.TSCE.CategoryReferenceArchive
uid_range_rect
.TSP.UUIDRectArchive"
DurationNodeArchive
super
.TST.ExpressionNodeArchive
timeinterval
smallest
largest
style
ArgumentPlaceholderNodeArchive
super
.TST.ExpressionNodeArchive
functionIndex
argumentIndex
mode
EmptyExpressionNodeArchive
super
.TST.ExpressionNodeArchive"
LetNodeArchive
super
.TST.ExpressionNodeArchive
whitespace_after_let
whitespace_after_identifier
whitespace_after_equals
whitespace_after_delimiter
InNodeArchive
super
.TST.ExpressionNodeArchive"d
VariableNodeArchive
super
.TST.ExpressionNodeArchive
identifier
symbol
LayoutHintArchive
isValid
cellRange
.TST.CellRange
hintID
.TST.CellID
maximumSize
.TSP.Size
partitionPosition
horizontal
effectiveSize
.TSP.Size
partitioningPass
 CompletionTokenAttachmentArchive
super
.TST.TokenAttachmentArchive
completionText
caretPosition
prefixStart
HiddenStateFormulaOwnerArchive
owner_id
.TSP.CFUUIDArchive
threshold_value
.TSCE.CellValueArchive
%needs_to_update_filter_set_for_import
false"
FormulaStoreArchive
next_formula_index
formulas
2).TST.FormulaStoreArchive.FormulaStorePair
FormulaStorePair
formula_index
formula
.TSCE.FormulaArchive"
MergeOperationArchive
merge_type
.TST.MergeActionArchive
merge_ranges
.TSP.UUIDRectArchive
merge_formulas
.TSCE.FormulaArchive
merge_formula_indexes
MergeOwnerArchive
owner_id
.TSP.CFUUIDArchive
formula_store
.TST.FormulaStoreArchive"p
PencilAnnotationArchive
table_info
.TSP.Reference
pencil_annotation_storage
.TSP.Reference"
PencilAnnotationOwnerArchive
owner_id
.TSP.CFUUIDArchive
formula_store
.TST.FormulaStoreArchive
annotations
.TSP.Reference"
AccumulatorArchive
bool_count
number_count
date_count
duration_count
string_count
min_value
.TSCE.CellValueArchive
max_value
.TSCE.CellValueArchive
number_total_value
.TSCE.CellValueArchive
first_date_seen
.TSCE.CellValueArchive
total_secs_since_ref_date
secs_to_add
bool_true_count
error_count
is_circular_ref
product_value
.TSCE.CellValueArchive
no_content_count
GroupColumnArchive
column_uid
.TSP.UUID
grouping_type
grouping_functor
.TSCE.FunctorArchive
grouping_column_uid
.TSP.UUID"G
GroupColumnListArchive
group_column
.TST.GroupColumnArchive"
ColumnAggregateArchive
column_uid
.TSP.UUID
level
agg_type
show_as_type
column_aggregate_uid
.TSP.UUID
running_total_group_column_uid
.TSP.UUID"M
ColumnAggregateListArchive
aggregates
.TST.ColumnAggregateArchive"
GroupByArchive
group_by_uid
.TSP.UUID
group_column
.TST.GroupColumnArchive
group_node_root
2$.TST.GroupByArchive.GroupNodeArchive
aggregator
2%.TST.GroupByArchive.AggregatorArchive
column_agg_type
.TST.ColumnAggregateArchive
is_enabled
 indirect_agg_type_change_formula
.TSCE.CellCoordinateArchive
grouping_columns_formula
.TSCE.CellCoordinateArchive
aggs_in_group_root_formula
.TSCE.CellCoordinateArchive
grouping_column_headers_formula
.TSCE.CellCoordinateArchive
column_order_changed_formula
.TSCE.CellCoordinateArchive
row_order_changed_formula
.TSCE.CellCoordinateArchive
)row_order_changed_ignoring_recalc_formula
.TSCE.CellCoordinateArchive
owner_index
row_uid_lookup
.TSCE.UidLookupListArchive
hidden_states_changed_formula
.TSCE.CellCoordinateArchive
aggregator_ref
.TSP.Reference
group_node_root_ref
.TSP.Reference
AggNodeArchive
formula_coord
.TSCE.CellCoordinateArchive
accum
.TST.AccumulatorArchive
child
2".TST.GroupByArchive.AggNodeArchive
AggregatorArchive
column_uid
.TSP.UUID
agg_node
2".TST.GroupByArchive.AggNodeArchive
GroupNodeArchive
group_uid
.TSP.UUID
child
2$.TST.GroupByArchive.GroupNodeArchive
row_uid
.TSP.UUID
agg_formula_coords
.TSCE.CellCoordinateArchive
format_manager
29.TST.GroupByArchive.GroupNodeArchive.FormatManagerArchive
group_cell_value
.TSCE.CellValueArchive
row_indexes
.TSCE.IndexSetArchive
row_lookup_uids
.TSCE.IndexSetArchive
child_ref
.TSP.Reference
FormatManagerArchive
cell_value
.TSCE.CellValueArchive
formats
.TSK.FormatStructArchive
row_sets
2G.TST.GroupByArchive.GroupNodeArchive.FormatManagerArchive.RowSetArchive
row_uid_lookup_sets
.TSCE.IndexSetArchive
RowSetArchive
row_uids
.TSP.UUID"[
CategoryOwnerArchive
owner_uid
.TSP.UUID
group_by
.TST.GroupByArchive";
CategoryOwnerRefArchive
group_by
.TSP.Reference"v
$PivotGroupingColumnOptionsMapArchive
uids
.TSP.UUID
flags
aggregate_rule_uids
.TSP.UUID"
PivotOwnerArchive
pivot_owner_uid
.TSP.UUID
grouping_columns_for_rows
.TST.GroupColumnListArchive
grouping_columns_for_columns
.TST.GroupColumnListArchive
aggregate_columns
.TST.ColumnAggregateListArchive
flattening_dimension
is_empty_pivot
source_table_uid
.TSP.UUID
refresh_timestamp
grpg_col_options_map
.TSP.Reference
hide_grand_total_rows
source_table_name
hide_grand_total_columns
formula_store
.TST.FormulaStoreArchive
refresh_uid
.TSP.UUID
row_column_rule_change_uid
.TSP.UUID
aggregate_rule_change_uid
.TSP.UUID"q
RichTextPayloadArchive
storage
.TSP.Reference
range
.TSP.Range
cellid
.TST.CellID"Q
#FormulaEqualsTokenAttachmentArchive
super
.TSWP.UIGraphicalAttachment"
CellFillStandIn
fill
.TSD.FillArchive
type_is_mixed
color_has_been_modified
color_is_mixed
first_color_has_been_modified
first_color_is_mixed
last_color_has_been_modified
last_color_is_mixed
gradient_type_has_been_modified
gradient_type_is_mixed
 gradient_angle_has_been_modified
gradient_angle_is_mixed
image_data_has_been_modified
image_data_is_mixed
tint_color_has_been_modified
tint_color_is_mixed
scale_has_been_modified
scale_is_mixed
technique_has_been_modified
technique_is_mixed
FormulaSelectionArchive
super
.TSWP.SelectionArchive
activeTokenCharIndex
CellBorderArchive
top_stroke
.TSD.StrokeArchive
top_stroke_order
right_stroke
.TSD.StrokeArchive
right_stroke_order
bottom_stroke
.TSD.StrokeArchive
bottom_stroke_order
left_stroke
.TSD.StrokeArchive
left_stroke_order
!DefaultCellStylesContainerArchive
table_style_network
.TSP.Reference
row_uids
.TSP.UUID
column_uids
.TSP.UUID
row_types
column_types
is_a_pivot_table
MultiTableRemapperArchive
mapping_purpose
2&.TST.MultiTableRemapperArchive.Purpose
should_steal_references
can_reuse_table_names
owner_uid_mapper
.TSCE.OwnerUIDMapperArchive
backing_tables_for_charts
.TSP.UUIDMapArchive
cross_document_paste
nested_inner_mapper
Purpose
DEFAULT
GROUPING
#PAGES_SECTION_DUPLICATION_NONCOLLAB
ChangePropagationMapWrapper
replacement_behavior
style_replace_prototypes
.TSP.Reference
style_replace_replacements
.TSP.Reference
style_modify_styles
.TSP.Reference
style_modify_old_prop_maps
.TSP.Reference
style_modify_new_prop_maps
.TSP.Reference
style_delete_prototypes
.TSP.Reference
style_delete_replacements
.TSP.Reference
table_preset_replace_prototype
.TSP.Reference
 table_preset_replace_replacement
.TSP.Reference
table_preset_delete_prototype
.TSP.Reference
table_preset_delete_replacement
.TSP.Reference"
SummaryCellVendorArchive
table_info
.TSP.Reference
entries
2..TST.SummaryCellVendorArchive.SummaryCellEntry
SummaryCellEntry
wildcardUID
.TSP.UUID
columnUID
.TSP.UUID
cell
.TST.Cell"[
CategoryOrderArchive
table_info
.TSP.Reference
uid_map
.TSP.Reference"4
PivotOrderArchive
uid_map
.TSP.Reference"
HeaderNameMgrTileArchive
first_fragment
last_fragment
name_frag_entries
21.TST.HeaderNameMgrTileArchive.NameFragmentArchive
NameFragmentArchive
name_fragment
name_precedent
.TSCE.CellCoordinateArchive
uses_of_name_fragment
.TSCE.UidCellRefSetArchive"
HeaderNameMgrArchive
owner_uid
.TSP.UUID
nrm_owner_uid
.TSP.UUID
per_tables
2).TST.HeaderNameMgrArchive.PerTableArchive
name_frag_tiles
.TSP.Reference
PerTableArchive
table_uid
.TSP.UUID
per_table_precedent
.TSCE.CellCoordinateArchive
is_deleted
header_row_uids
.TSP.UUID
header_column_uids
.TSP.UUID
update_header_row_uids
.TSP.UUID
update_header_column_uids
.TSP.UUID"K
WidthHeightCacheFittingEntry
fitting_index
fitting_size
WidthHeightCache
rows_fitting_entries
2!.TST.WidthHeightCacheFittingEntry
columns_count
LayoutEngineArchive
width_height_cache
.TST.WidthHeightCache"
*CollaboratorTableCursorSubselectionArchive
cell_uid_list
.TST.CellUIDListArchive
selection_type
.TST.SelectionTypeArchive
row_column_uid_list
.TSP.UUID2s
table_cursor_subselection
.TSK.CollaboratorCursorArchive
2/.TST.CollaboratorTableCursorSubselectionArchive*
CellType
genericCellType
spanCellType
numberCellType
textCellType
formulaCellType
dateCellType
boolCellType
durationCellType
formulaErrorCellType
automaticCellType
CellValueType
emptyCellValueType
numberCellValueType
stringCellValueType
providedCellValueType
dateCellValueType
boolCellValueType
durationCellValueType
errorCellValueType
richTextCellType
currencyCellValueType
TableDimensionArchive
dimensionNeither
dimensionRow
dimensionColumn
SelectionTypeArchive
deprecatedCellSelectionType
rowSelectionType
columnSelectionType
"deprecatedCellEditingSelectionType
 deprecatedTableNameSelectionType
deprecatedTableSelectionType
regionSelectionType
noSelectionType
FillDirectionArchive
kTSTFillDownArchive
kTSTFillUpArchive
kTSTFillRightArchive
kTSTFillLeftArchive
MergeActionArchive
mergeActionInsert
mergeActionRemove
mergeActionShrink
mergeActionGrow
HideShowActionArchive
hideShowActionHide
hideShowActionShow
import_warning_set
 .TSS.CommandPropertyEntryArchive
.TST.ImportWarningSetArchive:[
format_and_value
 .TSS.CommandPropertyEntryArchive
.TST.CellFormatAndValueArchive:N
cell_border
 .TSS.CommandPropertyEntryArchive
.TST.CellBorderArchive:]
comment_storage
 .TSS.CommandPropertyEntryArchive
2!.TST.CommentStorageWrapperArchive:J
cell_spec
 .TSS.CommandPropertyEntryArchive
.TST.CellSpecArchive
N3TST6CellIDE
N3TST24CellUIDLookupListArchiveE
N3TST18CellUIDListArchiveE
N3TST9TableSizeE
N3TST17ExpandedTableSizeE
N3TST9CellRangeE
N3TST17ExpandedCellRangeE
N3TST14TableSelectionE
N3TST11TileRowInfoE
N3TST4TileE
N3TST16TileStorage_TileE
N3TST11TileStorageE
N3TST24PopUpMenuModel_CellValueE
N3TST14PopUpMenuModelE
N3TST44ImportWarningSetArchive_FormulaImportWarningE
N3TST23ImportWarningSetArchiveE
N3TST34CellRefImportWarningSetPairArchiveE
N3TST32ImportWarningSetByCellRefArchiveE
N3TST23TableDataList_ListEntryE
N3TST13TableDataListE
N3TST20TableDataListSegmentE
N3TST16TableRBTree_NodeE
N3TST11TableRBTreeE
N3TST26HeaderStorageBucket_HeaderE
N3TST19HeaderStorageBucketE
N3TST13HeaderStorageE
N3TST9DataStoreE
N3TST16TableInfoArchiveE
N3TST19CategoryInfoArchiveE
N3TST18WPTableInfoArchiveE
N3TST24TableStyleNetworkArchiveE
N3TST53TableGroupSortOrderUIDArchive_GroupSortRuleUIDArchiveE
N3TST29TableGroupSortOrderUIDArchiveE
N3TST37TableSortOrderArchive_SortRuleArchiveE
N3TST21TableSortOrderArchiveE
N3TST40TableSortOrderUIDArchive_SortRuleArchiveE
N3TST24TableSortOrderUIDArchiveE
N3TST31SortRuleReferenceTrackerArchiveE
N3TST10CellRegionE
N3TST20CellUIDRegionArchiveE
N3TST26StructuredTextImportRecordE
N3TST17TableModelArchiveE
N3TST19SummaryModelArchiveE
N3TST37SummaryModelGroupByChangeStateArchiveE
N3TST22ColumnRowUIDMapArchiveE
N3TST35StrokeLayerArchive_StrokeRunArchiveE
N3TST18StrokeLayerArchiveE
N3TST20StrokeSidecarArchiveE
N3TST22DurationWrapperArchiveE
N3TST4CellE
N3TST21MergeRegionMapArchiveE
N3TST14CellMapArchiveE
N3TST28CellListArchive_OptionalCellE
N3TST15CellListArchiveE
N3TST24ConcurrentCellMapArchiveE
N3TST38ConcurrentCellListArchive_OptionalCellE
N3TST25ConcurrentCellListArchiveE
N3TST25CellFormatAndValueArchiveE
N3TST15CellSpecArchiveE
N3TST28CommentStorageWrapperArchiveE
N3TST15CellDiffArchiveE
N3TST13CellDiffArrayE
N3TST20CellDiffArraySegmentE
N3TST18CellDiffMapArchiveE
N3TST39HierarchicalCellDiffMapArchive_BoxedRowE
N3TST30HierarchicalCellDiffMapArchiveE
N3TST48DoubleStyleMapArchive_DoubleStyleMapEntryArchiveE
N3TST21DoubleStyleMapArchiveE
N3TST46StyleTableMapArchive_StyleTableMapEntryArchiveE
N3TST20StyleTableMapArchiveE
N3TST16SelectionArchiveE
N3TST41DeathhawkRdar39989167CellSelectionArchiveE
N3TST22StrokeSelectionArchiveE
N3TST27ControlCellSelectionArchiveE
N3TST25StockCellSelectionArchiveE
N3TST25TableNameSelectionArchiveE
N3TST24AutofillSelectionArchiveE
N3TST25FilterRulePrePivotArchiveE
N3TST17FilterRuleArchiveE
N3TST17TableStyleArchiveE
N3TST16CellStyleArchiveE
N3TST25FormulaPredArgDataArchiveE
N3TST21FormulaPredArgArchiveE
N3TST31FormulaPredicatePrePivotArchiveE
N3TST23FormulaPredicateArchiveE
N3TST55ConditionalStyleSetArchive_ConditionalStyleRulePrePivotE
N3TST47ConditionalStyleSetArchive_ConditionalStyleRuleE
N3TST48ConditionalStyleSetArchive_ConditionalStyleRulesE
N3TST26ConditionalStyleSetArchiveE
N3TST16FilterSetArchiveE
N3TST42UniqueIndexArchive_UniqueIndexEntryArchiveE
N3TST18UniqueIndexArchiveE
N3TST41HiddenStateExtentArchive_RowOrColumnStateE
N3TST24HiddenStateExtentArchiveE
N3TST19HiddenStatesArchiveE
N3TST24HiddenStatesOwnerArchiveE
N3TST26ExpandCollapseStateArchiveE
N3TST22TokenAttachmentArchiveE
N3TST14FormulaArchiveE
N3TST21ExpressionNodeArchiveE
N3TST18BooleanNodeArchiveE
N3TST17NumberNodeArchiveE
N3TST17StringNodeArchiveE
N3TST21IdentifierNodeArchiveE
N3TST16ArrayNodeArchiveE
N3TST15ListNodeArchiveE
N3TST19OperatorNodeArchiveE
N3TST26PostfixOperatorNodeArchiveE
N3TST25PrefixOperatorNodeArchiveE
N3TST19FunctionNodeArchiveE
N3TST22FunctionEndNodeArchiveE
N3TST15DateNodeArchiveE
N3TST20ReferenceNodeArchiveE
N3TST19DurationNodeArchiveE
N3TST30ArgumentPlaceholderNodeArchiveE
N3TST26EmptyExpressionNodeArchiveE
N3TST14LetNodeArchiveE
N3TST13InNodeArchiveE
N3TST19VariableNodeArchiveE
N3TST17LayoutHintArchiveE
N3TST32CompletionTokenAttachmentArchiveE
N3TST30HiddenStateFormulaOwnerArchiveE
N3TST36FormulaStoreArchive_FormulaStorePairE
N3TST19FormulaStoreArchiveE
N3TST21MergeOperationArchiveE
N3TST17MergeOwnerArchiveE
N3TST23PencilAnnotationArchiveE
N3TST28PencilAnnotationOwnerArchiveE
N3TST18AccumulatorArchiveE
N3TST18GroupColumnArchiveE
N3TST22GroupColumnListArchiveE
N3TST22ColumnAggregateArchiveE
N3TST26ColumnAggregateListArchiveE
N3TST29GroupByArchive_AggNodeArchiveE
N3TST32GroupByArchive_AggregatorArchiveE
N3TST66GroupByArchive_GroupNodeArchive_FormatManagerArchive_RowSetArchiveE
N3TST52GroupByArchive_GroupNodeArchive_FormatManagerArchiveE
N3TST31GroupByArchive_GroupNodeArchiveE
N3TST14GroupByArchiveE
N3TST20CategoryOwnerArchiveE
N3TST23CategoryOwnerRefArchiveE
N3TST36PivotGroupingColumnOptionsMapArchiveE
N3TST17PivotOwnerArchiveE
N3TST22RichTextPayloadArchiveE
N3TST35FormulaEqualsTokenAttachmentArchiveE
N3TST15CellFillStandInE
N3TST23FormulaSelectionArchiveE
N3TST17CellBorderArchiveE
N3TST33DefaultCellStylesContainerArchiveE
N3TST25MultiTableRemapperArchiveE
N3TST27ChangePropagationMapWrapperE
N3TST41SummaryCellVendorArchive_SummaryCellEntryE
N3TST24SummaryCellVendorArchiveE
N3TST20CategoryOrderArchiveE
N3TST17PivotOrderArchiveE
N3TST44HeaderNameMgrTileArchive_NameFragmentArchiveE
N3TST24HeaderNameMgrTileArchiveE
N3TST36HeaderNameMgrArchive_PerTableArchiveE
N3TST20HeaderNameMgrArchiveE
N3TST28WidthHeightCacheFittingEntryE
N3TST16WidthHeightCacheE
N3TST19LayoutEngineArchiveE
N3TST42CollaboratorTableCursorSubselectionArchiveE
16TSCEReferenceSet
&@7}!(#
7@V1T!&G
?30TSCEASTRowColumnUidMapRewriter
44TSCEASTSearchForExcelTranslationNeedIterator
TSTStylePropertyArchiving.proto
TSPMessages.proto
TSDArchives.proto
TSKArchives.proto
TSSArchives.proto
TSWPArchives.proto"
Deprecated_TableStrokeArchive
stroke
.TSD.StrokeArchive
background
opacity
empty
CellStylePropertiesArchive
cell_fill
.TSD.FillArchive
text_wrap
deprecated_top_stroke
2".TST.Deprecated_TableStrokeArchive
deprecated_right_stroke
2".TST.Deprecated_TableStrokeArchive
deprecated_bottom_stroke
2".TST.Deprecated_TableStrokeArchive
deprecated_left_stroke
2".TST.Deprecated_TableStrokeArchive
vertical_alignment
padding
.TSWP.PaddingArchive
top_stroke
.TSD.StrokeArchive
right_stroke
.TSD.StrokeArchive
bottom_stroke
.TSD.StrokeArchive
left_stroke
.TSD.StrokeArchive"
"Deprecated_StrokePresetDataArchive
deprecated_horizontal_stroke
2".TST.Deprecated_TableStrokeArchive
deprecated_vertical_stroke
2".TST.Deprecated_TableStrokeArchive
deprecated_exterior_stroke
2".TST.Deprecated_TableStrokeArchive
deprecated_visible_mask
StrokePresetDataArchive
horizontal_stroke
.TSD.StrokeArchive
vertical_stroke
.TSD.StrokeArchive
exterior_stroke
.TSD.StrokeArchive
visible_mask
StrokePresetListArchive
count
deprecated_preset
2'.TST.Deprecated_StrokePresetDataArchive
preset
.TST.StrokePresetDataArchive"
TableStylePropertiesArchive
banded_rows
banded_fill
.TSD.FillArchive
behaves_like_spreadsheet
auto_resize
&deprecated_header_row_separator_stroke
2".TST.Deprecated_TableStrokeArchive
#deprecated_header_row_border_stroke
2".TST.Deprecated_TableStrokeArchive
'deprecated_header_row_horizontal_stroke
2".TST.Deprecated_TableStrokeArchive
%deprecated_header_row_vertical_stroke
2".TST.Deprecated_TableStrokeArchive
&deprecated_header_column_border_stroke
2".TST.Deprecated_TableStrokeArchive
)deprecated_header_column_separator_stroke
2".TST.Deprecated_TableStrokeArchive
*deprecated_header_column_horizontal_stroke
2".TST.Deprecated_TableStrokeArchive
(deprecated_header_column_vertical_stroke
2".TST.Deprecated_TableStrokeArchive
&deprecated_footer_row_separator_stroke
2".TST.Deprecated_TableStrokeArchive
#deprecated_footer_row_border_stroke
2".TST.Deprecated_TableStrokeArchive
'deprecated_footer_row_horizontal_stroke
2".TST.Deprecated_TableStrokeArchive
%deprecated_footer_row_vertical_stroke
2".TST.Deprecated_TableStrokeArchive
.deprecated_table_body_horizontal_border_stroke
2".TST.Deprecated_TableStrokeArchive
,deprecated_table_body_vertical_border_stroke
2".TST.Deprecated_TableStrokeArchive
'deprecated_table_body_horizontal_stroke
2".TST.Deprecated_TableStrokeArchive
%deprecated_table_body_vertical_stroke
2".TST.Deprecated_TableStrokeArchive
stroke_preset_list
.TST.StrokePresetListArchive
v_strokes_visible
h_strokes_visible
hr_separator_visible
hc_separator_visible
footer_separator_visible
table_border_visible
table_header_border_visible
table_hc_divider_visible
table_hr_divider_visible
table_footer_divider_visible
OBSOLETE_master_font_size
master_font_family
writing_direction
.TSWP.WritingDirectionType
header_row_separator_stroke
.TSD.StrokeArchive
header_row_border_stroke
.TSD.StrokeArchive
header_row_horizontal_stroke
.TSD.StrokeArchive
header_row_vertical_stroke
.TSD.StrokeArchive
header_column_border_stroke
.TSD.StrokeArchive
header_column_separator_stroke
.TSD.StrokeArchive
header_column_horizontal_stroke
.TSD.StrokeArchive
header_column_vertical_stroke
.TSD.StrokeArchive
footer_row_separator_stroke
.TSD.StrokeArchive
footer_row_border_stroke
.TSD.StrokeArchive
footer_row_horizontal_stroke
.TSD.StrokeArchive
footer_row_vertical_stroke
.TSD.StrokeArchive
#table_body_horizontal_border_stroke
.TSD.StrokeArchive
!table_body_vertical_border_stroke
.TSD.StrokeArchive
table_body_horizontal_stroke
.TSD.StrokeArchive
table_body_vertical_stroke
.TSD.StrokeArchive
category_level1_top_stroke
.TSD.StrokeArchive
category_level2_top_stroke
.TSD.StrokeArchive
category_level3_top_stroke
.TSD.StrokeArchive
category_level4_top_stroke
.TSD.StrokeArchive
category_level5_top_stroke
.TSD.StrokeArchive
category_level1_bottom_stroke
.TSD.StrokeArchive
category_level2_bottom_stroke
.TSD.StrokeArchive
category_level3_bottom_stroke
.TSD.StrokeArchive
category_level4_bottom_stroke
.TSD.StrokeArchive
category_level5_bottom_stroke
.TSD.StrokeArchive
category_level1_interior_stroke
.TSD.StrokeArchive
category_level2_interior_stroke
.TSD.StrokeArchive
category_level3_interior_stroke
.TSD.StrokeArchive
category_level4_interior_stroke
.TSD.StrokeArchive
category_level5_interior_stroke
.TSD.StrokeArchive
&category_level1_label_separator_stroke
.TSD.StrokeArchive
&category_level2_label_separator_stroke
.TSD.StrokeArchive
&category_level3_label_separator_stroke
.TSD.StrokeArchive
&category_level4_label_separator_stroke
.TSD.StrokeArchive
&category_level5_label_separator_stroke
.TSD.StrokeArchive
(table_body_pivot_group_horizontal_stroke
.TSD.StrokeArchive
&table_body_pivot_group_vertical_stroke
.TSD.StrokeArchive
-table_body_pivot_deemphasis_horizontal_stroke
.TSD.StrokeArchive
)table_body_pivot_emphasis_vertical_stroke
.TSD.StrokeArchive
+header_column_pivot_group_horizontal_stroke
.TSD.StrokeArchive
+header_column_pivot_group_deemphasis_stroke
.TSD.StrokeArchive
$header_column_pivot_separator_stroke
.TSD.StrokeArchive
&header_row_pivot_group_vertical_stroke
.TSD.StrokeArchive
(header_row_pivot_group_deemphasis_stroke
.TSD.StrokeArchive
header_row_pivot_title_stroke
.TSD.StrokeArchive
&footer_row_pivot_group_vertical_stroke
.TSD.StrokeArchive"n
TableStylePresetArchive
index
image
.TSP.Reference
style_network
.TSP.Reference")
TableStrokePresetArchive
index
ThemePresetsArchive
table_style_presets
.TSP.Reference
table_cell_stroke_presets
.TSP.Reference2?
extension
.TSS.ThemeArchive
.TST.ThemePresetsArchive
N3TST29Deprecated_TableStrokeArchiveE
N3TST26CellStylePropertiesArchiveE
N3TST34Deprecated_StrokePresetDataArchiveE
N3TST23StrokePresetDataArchiveE
N3TST23StrokePresetListArchiveE
N3TST27TableStylePropertiesArchiveE
N3TST23TableStylePresetArchiveE
N3TST24TableStrokePresetArchiveE
N3TST19ThemePresetsArchiveE
!"#$%&'()*+,-./0123444456789:;<=>?@ABCDEFGHIJJJKLLLMNOOPQRSTUVWXYYZ[\\\\\\\\\\\\\\\\\\\]^_``````abcdefghijklmnopYYYYYYYYYYYYYYYY
-23
'67
?@
/ g 
"%"+"5"?"C"M"W"a"k"u"
#!#+#5#?#I#S#]#g#m#w#
$)$/$9$D$N$X$^$f$p$t$~$
%&%0%3%=%G%Q%Y%c%g%q%t%~%
&)&4&>&H&L&V&`&j&t&x&
'!'+'.'1';'E'O'Y'_'i's'{'
15TSTDefaultLexer
21TSTDefaultyyFlexLexer
 !"#$%&'()*+,-./
pSDA
xCuT
IAVW
?w@CR!"#$%&'()*+,-/0123
LH;<=>?I@
yz{|}~
UDJ@
XYZ[\]^_`abcdefg
hijk
456789:;<=>?
@456789:;<=>?
456789:;<=>?
AB:;<=>?C@
DDDDDDDDDDDDDDDDDD
()*46
DDDDDDDDDDDDDDDDBDDDD,DDD@
!&"%$'
DDDD
(+527
0318?:?D
012222222222222222222222222222333344444556667777777778899:;;<<==>>??
PNO 
'(23456789:>?????????????
????? !"#$%&'()*+-
2<=;<
3<?22???????????????????????
3>222222222222355>7>
6>????%??=<?22
??22
2%?2
2$?2
2#?2
2 ?2
2"?2
2!?2
2&?2
2(?2
2'?2
2*?2
2)?2
2+?2
?3%?2
?%?2
8,?7
!"#$%&'()*+,-./0123444456789:;<=>?@ABCDEFGHIJJJKLLLMNOOPQRSTUVWXYYZ[\\\\\\\\\\\\\\\\\\\]^_``````abcdefghijklmnopYYYYYYYYYYYYYYYY
r'r'o
r'r'r'
r'r'r'
r'r'r'r'`
r'r'r'r'
r'r'
r'r'
r'r'r'
" "*"."8"B"L"V"`"j"t"~"
# #*#4#>#H#R#X#b#l#p#z#
$$$/$9$C$I$Q$[$_$i$s$w$
%(%2%<%D%N%R%\%_%i%s%{%
&)&3&7&A&K&U&_&c&m&w&
'&'0':'D'J'T'^'f'
13TSTCommaLexer
#$%&'()*+,-./012334555556789:;<=>?@ABBCDDDEFEEEGHHHHIHHHHJKLMNONPPQRRRRRRRRRRRRRRRRRRRRSRTUUUUUUVWXYZZZZZZZZZZ[\PPPPPPPPPPPPPPPP
16TSCEDefaultLexer
22TSCEDefaultyyFlexLexer
9FlexLexer
 !"#$%&'(
0123456789:;<
FGHIJK
 !"#$%&
_fgh]^
hi]^fg}&v
#$%&
 !"#$%&!"#$%&PQRSTUVWXYZ[
%&fg
E'=F
)*+,-./|
@PQRSTUVWXYZ[\B]^_v`
 cdefgh
0123456789:;<>?{
wyxz=<'
AHANO
 9:;<GK6789:;<789:;<jklmnopqrstu
BBBBBBBB
$&'15:""BBB@?
%',>
BBBBBBBBBBBBB
BBB4B#!!BBBBBB8B
()*+23
9BBB(-/*.076
)*++++++++++++++++++++,,--./0112233444555556666678888999::;;;<==>>
!"+,.014578:;<>>
-/5689=>>>>>>>>
 !"#$%&1
++>>>>>>>>>>>>>>>>>22>>>>>>>++++++++++++
8:8:;<,0
89=89==;
>>>3
+ >+
+">+
+!>+
+$>+
+#>+
+%>+
$).38=BFJNPSVX[^aeilpsz
$s8TSTables35TSTFixedColumnWidthGeometryProviderP
TSCEUnpersistedStorage
TSTFormulaAdditions
TSCERewritingMinion
TSCEFormulaReplacing
NSObject
TSTGroupNode
TSCEWarning
TSTCellSelection
TSDTextSelection
TSTRefParser
TSCERefParsingProtocol
TSTFormsSheetProvider
1a+a
TSTTableModel
TSDMixing
TSTCompatibilityVersionProviding
TSTCustomStrokeProviding
TSTStyleProviding
TSTTableStrokeProviding
TSTTableTileCreating
TSTMutableCellIteratorData
TSTCellIteratorData
TSTTableTile
TSTWidthHeightCollection
TSCEDateCellValue
TSTCellRangeControlSpec
TSCETableNameChangeProtocol
TSCETablesByNameDistributor
TSCECellCoordinateVector
TSCEFunctionSpecDefinitions
TSCECellTractRef
NSCopying
TSTResolverContainerNameProvider
TSCECalculationEngineRegistration
TSKModel
TSTTableInfo
TSDContainerInfo
TSDInfo
TSPCopying
TSDInfoUsingObjectPlaceholderGeometry
TSKSearchable
TSSPresetSource
TSSStyleClient
TSCEColumnRowUIDMapping
TSTTableHiddenRowColumnProviding
TSTAdditionalHiddenRowColumnProviding
TSTTableInternalGeometryProviding
TSTTableMergeRangeProviding
TSWPStorageParent
TSWPTextStatisticsTrackerProvider
TSKAnnotationParent
TSSPropertySource
CellMap
TSTRichTextReferenceWrapper
TSTCellIterating
TSCECellValue
TSTMergeListWrapper
TSTUIDRectRef
TSTCellIterator
TSTCellStyle
TSTInNode
TSTCSEData
TSTPivotTranslator
TSCEUpgradingTablesMinion
TSTStockDetails
0B `
TSTTableTileRowInfo
TSTExpandCollapseState
TSTCellFormulaSpec
TSCEFormulaReturning
TSCEStringManipulator
TSCENameTrie
TSCEReferenceParsingContext
NumericCompare
TSCEEdgeListPrinter
TSCECellDependencyRowPrinter
TSCECellDependenciesPrinter
TSTGroupingColumnList
TSTAdditions
TSCEDistributor
TSTGroupBySet
TSCETrackedReferenceTSPObjectDeprecated
TSTCellDiff
TSCEFunctionsInUse
TSTConcurrentCellMap
TSTCellMapChangeDescriptorDelivering
TSTConcurrentCellList
TSTConcurrentSparseCellList
TSTCellDiffArraySegment
TSTStructuredTextImportRecord
TSTTableDataList
Type_Specific_API
Upgrade
TSTTableStyle
TSCENilCellValue
TSTArchivedCellSelection
TSKArchivedSelection
TSTArchivedRdar39989167CellSelection
TSTColumnAggregate
TSCEStringCellValue
TSTCellStyleHandle
TSTTableTileStorage
TSTTableHeaderStorage
TSTEphemeralFilter
TSTTableHeaderStorageBucket
Archiving
TSCELogicalTest
TSTFormulaStore
TSCEAbstractGrid
Analytics
TSTLayoutProcessChangesActions
TSWPStyleProviding
TSTLayout
TSWPColumnMetrics
TSWPLayoutParent
TSWPStorageObserver
TSTAccumulator
TSTColumnAggregateList
TSCEReferencesToDirty
Helper
TSCEErrorCellValue
TSTRangeRefPair
TSTRefNamer
TSCERefNamingProtocol
TSCETransaction
TSCENamedReferenceManager
TSCEFormulaOwning
TSCESumAccumulator
TSTPivotCellSetter
TSTCellDiffArray
TSCECoordMapper
TSCECoordMappingProtocol
TSTWPTableInfo
TSTStrokeSidecar
TSTStrokeSidecarLookupMap
TSTCellRangeCache
TSTTableInfoHint
TSDDrawableContainerInfo
TSDReplaceableMediaContainer
TSDReducibleImageContainer
TSDCompatibilityAwareMediaContainer
TSDSelectableHintMediaContainer
TSTLayoutSpace
TSTCoordinateArray
TSCECellDirtier
TSTCellWillChangeProtocol
TSTCellWillChangeDistributor
TSTMergeChangeProtocol
TSTMergeChangeDistributor
TSCEUIDSet
NSMutableCopying
TSCEMutableUIDSet
TSCEConfiguration
TSTFormulaTokenContext
TSCEFormulaObject
TSTVariableNode
TSTWPFormulaSelection
TSTWPFormulaArchivedSelection
TSTWPFormulaFieldSelection
TSTCellRegionGatherer
TSCERegionAllocator
TSTAggregator
TSTTableStylePreset
TSSPreset
TSTHiddenStateIndexSet
TSTTableStrokePreset
TSCERelativeTractRef
TSTTableStyleNetwork
TSTLocalStylesKey
TSTLocalAccumulator
TSCERefNamingContext
TSTOwnerUidMapper
TSCEAbortObject
TSCECalculationEngine
TSCEGroupByChange
TSTTableArchivedControlCellSelection
TSTTableDataListItemCache
TSTTableDataListCache
TSTTableStrokePresetList
TSCEFormulaRewriteSpec
TSTTableStrokePresetData
TSCESageSizedList
TSCE_PrefixMatch
TSCETablesByName
TSTArchiving
TSTLayoutCellIterator
TSTExpressionNode
TSTFormulaToken
TSTFormula
TSTFormulaHelperMethods
ValidationSidecarAdditions
TSCEAdditions
TSTCellChooserControlSpec
TSTTextStyleToFontHeightCache
TSCEFunctionArgumentSpec
TSTHiddenStateFormulaOwner
TSTStyleDefaultsCache
TSTOperatorNode
TSTStrokeSelection
TSTCustomFormatListUpgradeHelper
TSTCustomFormatListReferenceWrapper
TSTTableControlCellSelection
TSCERegexMatcher
TSTNumberNode
!`&`"@
TSTCell_PreBNC
TSTCellMap
TSTCellMapIterator
TSTCellList
TSTStrokeWidthCache
TSTTableNameSelection
TSTColumnRowUIDMap
TSTImmutableColumnRowUIDMap
TSTCategoryOwner
TSTAggNode
TSTFunctionNode
TSCERemoteDataCoordinator
TSTLetNode
TSTSummaryModel
TSTGroupByChangeProtocol
TSTSummaryModelGroupByChangeState
TSTCellToggleControlSpec
TSCEHauntedOwner
TSTStrokeOrderedLayerToken
TSTStrokeLayerStrokeAndRange
TSTStrokeOrderedLayer
TSCEValueContainer
TSCETrackedReferenceStore
TSTFormulaPredArgData
TSTFormulaPredArg
TSTHiddenStatesOwner
TSCEWrappedCellRef
TSCEWrappedRangeRef
TSTBooleanNode
TSCEFormulaRewrite_Uids
TSCEFormulaRewriteInfo_RangeEntry
TSCEFormulaRewriteInfo_RowColumnInfo
TSTArrayNode
TSTListNode
TSTGroupNodeFormatManager
TSTWPLayout
TSTStringNode
TSTCellUIDRegion
TSTDateNode
TSTReferenceNode
TSTStarRatingRenderer
TSTPencilAnnotation
TSKPencilAnnotation
TSCERangePrecedentsTile
TSTDurationNode
TSCELocalization
TSTArgumentPlaceholderNode
TSTPostfixOperatorNode
TSTStrokeDefaultVendor
TSCEDenseGrid
TSTUidCoordsForLevelAndType
TSTUidCoordsPerGroupValueTuple
TSTUidCoordsPerRunningCellValue
TSTRunningTotalContext
TSCEUnitRegistry
TSTPrefixOperatorNode
TSTFunctionEndNode
TSCEColumnRowIndexMapper
TSTCellFormatAndValue
TSTCellDiffing
TSSPropertyCommandSerializing
TSTLayoutValidationBundle
TSCEUuidReferences
TSTPivotOwner
TSTWPRep
TSTHiddenStates
TSTStrokeSidecarIterator
TSTCellRegionIterating
TSTMutableCellIteratorDataUpdating
TSTGroupBy
TSTCellUIDLookupListWrapper
TSTTableGroupSortRuleUID
TSCERemoteDataStore
TSTEmptyExpressionNode
TSTCellBorder
TSTStrokeLayerAbstractStack
TSTStrokeLayerStack
TSTStrokeLayerMergedStack
TSTStrokeExporter
TSTUniqueValuesToRows
TSTHiddenStateExtent
TSTMergeOwner
TSTCellSpec
TSTSortRuleReferenceTracker
TSTAutofillSelection
TSTLayoutEngine
(3R!
TSTLayoutHint
TSDHint
TSTArchivedLayoutHint
TSDArchivedHint
CellDiffAdditions
TSTTablePartitionerParticipating
TSTTablePartitioner
TSDPartitioner
TSTLayoutSpaceBundle
TSCEFormulaOwnerDependencies
TSTTableDataListSegment
TSTConcurrentCellIterator
TSTConcurrentCellIteratorFourArgRock
TSTMergeAction
TSTCellUIDList
TSTCellUIDIterator
TSTGroupByChangeDelayedNotification
TSTGroupByChangeDistributor
TSCEBooleanCellValue
TSCERemoteDataSpecifier
TSTTableTileGroup
TSCENumberCellValue
TSCERemoteDataSpecifierSet
TSTMergeRegionMap
TSTFormulaRewrite_PivotInfo
TSTPencilAnnotationOwner
TSTPivotGroupingColumnOptions
TSTPivotGroupingColumnOptionsMap
TSTWidthHeightCache
TSCERemoteDataSourceFetcher
TSCEFormulasToSet
TSTChangeDescriptor
TSTCustomFormatList
TSTTextEngineDelegate
TSWPTextDelegate
TSTTableSortOrder
TSTLayoutTask
TSTConcurrentMutableCellUIDSet
TSCEReferenceResolving
TSTCellStateForLayout
TSTWPTokenAttachment
TSCEBulkCellChangeMinion
TSTPivotRowColumnOrder
TSTCompletionToken
TSTStrokeLayerToken
TSTStrokeLayer
TSTStrokeLayerEnumerating
TSTMutableStrokeLayer
TSCEGetPivotDataBundle
TSCETaggedDecimalListObject
TSTConcurrentStylesheetKey
TSTConcurrentStylesheet
TSTAnimation
TSTFontInfoCacheEntry
TSTFontInfoCache
TSTIndexingChunk
TSTHeaderNameMgrTile
TSTHeaderNameSubset
TSTHeaderNameMgr
TSTCellDiffMap
TSCETableTransposedInfo
TSCERewriteTableUIDInfo
TSCERewriteGroupNodeUIDInfo
TSTTableSortRule
TSTTableViewSortRule
TSTGroupValueTuple
TSCEQuotedRefPathWord
TSCEQuotedRefPathComponent
TSCEQuotedRefPathSplitter
TSCEUUidReferenceMap
TSTCheckboxRenderer
TSTMergeRangeSortedSet
TSTLayoutContentCachedKey
TSTLayoutDynamicResizeInfo
TSTLayoutDynamicResizeInfoProtocol
TSTColumnRowUIDMapper
TSTCategoryStoreIterator
TSCEFormulaOwnerWrapper
ReferenceResolving
TablesAdditions
TSTCategoryAggregateFormulaOwner
TSTRichTextPayload
TSCEViewTractRef
TSTSummaryCellVendor
TSCECalcTimeoutObject
TSTTableFilterRule
TSTTableFilterSet
TSCECategoryRef
TSTFormulaPredicate
TSTArchivedStrokeSelection
TSTTableBadge
TSTCellRegion
ModelCoordinateSupport
ViewCoordinateSupport
TSTMutableCellRegion
TSTCellRegionRowMajorIterator
TSTCellRegionColMajorIterator
TSTCellRegionRowMajorReverseIterator
TSTCellRegionColumnMajorReverseIterator
TSCEUndoTract
FullTuple
TSCEUndoTractList
NSFastEnumeration
TSCEStock
TSCECellRecordTileWrapper
TSTTableTranslator
TSCETableTranslatorProtocol
TSCEFunctionSpec
TSTStrokeExportCache
TSCEGroupByNodeMap
TSTIdentifierNode
TSTTableHeaderInfo
TSTTemporaryCollectionNode
TSTConditionalStyleRule
TSCEFormulasForUndoForOwnerKind
TSCEFormulasForUndo
TSTConditionalStyleSet
TSTConcurrentMutableIndexSet
TSTConditionalStyleFormulaOwner
TSCETrackedReference
TSTLayoutDynamicResizeInfoUnify
TSTLayoutDynamicResizeInfoAccordion
TSTCategoryOrder
TSTPasteMap
TSTTableSortTag
TSCECalendar
ChangeGroups
TSTColumnRowMetadata
TSTContentComposingIterator
Reorganize
TSTCategoryTranslator
TSCEFormulaRewrite_RegionInfo
TSCEFormulaRewrite_RegionMergedInfo
TSCEFormulaRewrite_MergeOriginMovedInfo
TSCEFormulaRewrite_RegionMovedInfo
TSTFilteredTableDynamicContentDelegate
TSTLayoutDynamicContentProtocol
TSTHiddenRowsColumnsCacheValidationCollection
TSTHiddenRowsColumnsCache
CoercionPrivate
Coercion
TSTDataStoreIterator
TSCEAggregateGrid
TSTArchivedLayoutEngineBundle
TSTFormulaEqualsTokenAttachment
TSTFormulaEqualsTokenAttachmentRenderer
TSWPGraphicalAttachmentRenderer
FormulaAdditions
TSTArchivedTableNameSelection
TSTPerformanceLogging
TSTGroupingColumn
TSTConvertFormulasForCategoriesByRewritingWrapper
TSTPivotStoreIterator
FormulaOwner
TSCEAnyReference
TSTStrokeAssociatedObject
TSTTableResolverFactory
TSCETableResolverFactoryProtocol
TSCEResolverLocatingProtocol
TSTImportWarningSet
TSTImportWarningSetByCellRef
TSTWrappedFormula
TSCEError
TSCERemoteDataValueMap
TSTChartReferenceFormula
TSTTextStyleHandle
TSCECellValueCombinator
TSTPopUpMenuModel
TSUMultipleChoiceListChoiceProviding
TSTTableDataObject
TSTTableDataCommentStorage
TSTTableDataConditionalStyleSet
TSTTableDataCustomFormat
TSTTableDataFormat
TSTTableDataCellSpec
TSTTableDataFormulaError
TSTTableDataImportWarningSet
TSTTableDataMultipleChoiceList
TSTTableDataRichText
TSTTableDataString
TSTTableDataStyle
TSTTableDataPayload
TSTCellDictionary
TSTDupContentCache
TSCEEvalRef
TSTWPColumnCache
TSTTableModelCellModificationHelper
TSTCell
TSCEReferenceSetWrapper
TSTTableGroupSortOrderUID
TSTTableDataStore
TSTCellReorganizeValue
TSCEValueGrid
AbstractGrid
TSTCommentStorageWrapper
TSCEReferenceBackedGrid
TSTLayoutSpaceBezierPathCacheKey
TSTLayoutSpaceBezierPathCache
TSTCommentHosting
TSDComment
TSDAnnotation
TSKAnnotation
TSTConfiguration
TSTFormulaRewriteSpec
HasDateArguments
TSTArchivedAutofillSelection
TSTTableRepProcessChangesActions
TSTTableRep
TSWPRepParent
TSDContainerRep
TSTTableRepInternal
UITextFieldDelegate
CALayerDelegate
TSTPdfTagger
TSKPdfTagger
TSDMasterDrawableDelegate
CGColor
.cxx_destruct
T@"NSArray",R,N
CGFloatValueForProperty:
T@"NSDictionary",&,N,V_metadata
CGPath
T@"TSCEFormulaRewriteInfo_RowColumnInfo",&,N,V_auxRowColumnInfo
T#,R
T@"TSDFill",R,N
T@"<TSCECalculationEngineRegistration>",&,N,V_calcEngineRegistrationObject
T@"TSTCell",R,N
T@"<TSCEFormulaReplacing>",&,N,V_minion
T@"TSTTableGroupSortOrderUID",N
T@"<TSCERefNamingProtocol>",R,&,N
T@,&,N,V_fourth
T@"<TSCEReferenceResolving>",R,N
TB,N,V_allowFreeformFormulaText
T@"<TSDHint>",&,N
TB,N,V_dynamicBandedFillSetting
T@"<TSKMultiTableRemapping>",&
TB,N,V_layoutInvalidateProvider
T@"<TSTCanvasReferenceController>",R,W,N,V_canvasReferenceController
TB,N,V_mixedDurationsAndNumbers
T@"<TSTCellIteratorData>",N,V_modelIteratorData
TB,N,V_supportsDragDropMoveMode
T@"<TSTCellRegionIterating><TSTMutableCellIteratorDataUpdating>",&,N,V_contentIterator
TB,R,N,GisEmpty
T@"<TSTCellRegionIterating><TSTMutableCellIteratorDataUpdating>",&,N,V_strokeIterator
TB,R,N,GisValid
T@"<TSTLayoutDynamicCellFillProtocol>",&,N,V_dynamicCellFillDelegate
TB,R,N,V_mightHaveCustomFormats
T@"<TSTStrokeLayerStrokeAndRange>",&,N,V_majorStrokeLayerToken
TI,N,V_cachedNumberOfFooterRows
T@"<TSTTableAnimationController>",W,N,V_animationController
TQ,N,V_cachedMaxNumberOfColumns
T@"<TSTTableHiddenRowColumnProviding><TSTTableInternalGeometryProviding>",W,N,V_tableProvider
TQ,N,V_rowIndex
T@"<TSTTableStrokeProviding>",R,N,V_defaultStrokeProvider
T^v,R,N
T@"<TSWPStyleProviding>",R,N,V_styleProvidingSource
T^v,R,V_rowUids
T@"<TSWPStyleProviding>",R,W,N,V_styleProvidingSource
Td,R,N,V_height
T@"CAShapeLayer",&,N,V_findSelectionHighlightLayer
Ti,N,V_maxOrder
T@"NSArray",&,N,V_interestingCells
T{?={?=II}{?=II}},N,V_gridRange
T@"NSArray",&,N,V_rules
T{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}},R
T@"NSArray",&,N,V_whitespaceAfterDelimiters
T{TSKUIDStruct=QQ},N,V_tableUID
T@"NSArray",R,C,N
T{TSUCellCoord=ISBB},N,V_cellID
T@"NSArray",R,N,V_conditionalStyleSetRules
T{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}},R,N
T@"NSArray",R,N,V_receivers
_active
T@"NSArray",R,N,V_thresholdCellValues
_aggregateIndex
T@"NSCharacterSet",&,N,V_whitespaceAndNewlineCharSet
_allowTableName
T@"NSCountedSet",&,N,V_dynamicLayoutParticipants
_argumentCounts
T@"NSDate",&
_bounds
T@"NSDate",&,N,V_date
_cachedBaseRegionVersionCounter
T@"NSDate",&,N,V_lastFullRefreshDate
_cachedIndexesForLeadingColumns
T@"NSDate",&,N,V_value
_cachedMaskRect
T@"NSDate",R,C,N
_cellFormatKind
T@"NSDate",R,N,V_startTime
_cellRefDirtier
T@"NSHashTable",&,N,V_referenceIdentifiers
_changeNotifier
T@"NSIndexSet",&,N,V_cachedIndexesForLabelRows
_chromeRangeRef
T@"NSIndexSet",&,N,V_cachedIndexesForLeadingRows
_clearErrorLock
T@"NSIndexSet",&,N,V_cachedIndexesForSummaryAndLabelRows
_coerceToCustomNumberishFormat:
T@"NSIndexSet",&,N,V_cachedIndexesForSummaryRows
_columnsInvalid
T@"NSIndexSet",&,N,V_intersectingColumnsIndexSet
_commentStorage
T@"NSIndexSet",&,N,V_populatedColumnsForGroupLevel1
_compressedSize
T@"NSIndexSet",&,N,V_populatedColumnsForGroupLevel3
_curRow
T@"NSIndexSet",&,N,V_populatedColumnsForGroupLevel5
_currentCellUID
T@"NSIndexSet",R,N
_dataKindStatus
T@"NSMapTable",&,N,V_cachedLabelRowIndexesAtLevels
_dependentsList
T@"NSMapTable",&,N,V_cachedLeadingRowIndexesAtLevels
_documentLocale
T@"NSMapTable",&,N,V_cachedLeadingSummaryRowIndexesAtLevels
_dynamicHidingRowsColsDirection
T@"NSMapTable",&,N,V_cachedSummaryRowIndexesAtLevels
_emptyCellCount
T@"NSMapTable",&,N,V_repairOrReplaceMap
_expandDirtyRegionForReferences
T@"NSMapTable",R,N,V_commentHostingMap
_expressionTree
T@"NSMutableArray",&,N,V_cellEditingMaskLayers
_forceSheetName
T@"NSMutableArray",&,N,V_changeDescriptors
_forceTableName
T@"NSMutableArray",&,N,V_cleanCellDependencyRows
_formatsRemoved
T@"NSMutableArray",&,N,V_inverseMergeActions
_formulaEditorEvaluatesFormulas
T@"NSMutableArray",&,N,V_mergeActions
_formulaWarning
T@"NSMutableArray",&,N,V_reorganizeValues
_fromGroupByUID
T@"NSMutableArray",&,N,V_strongReferences
_groupCellValue
T@"NSMutableArray",&,N,V_tilesPerRow
_groupSortRules
T@"NSMutableArray",&,N,V_widthHeightCollections
_hasLargerFonts
T@"NSMutableArray",R,N,V_animationStack
_hidden
T@"NSMutableDictionary",&,N,V_data
_hiddenStatesByColumnExtentUuid
T@"NSMutableDictionary",&,N,V_partitioningPassCache
_importSettings
T@"NSMutableDictionary",&,N,V_uniqueValueToRowUids
_importedRegion
T@"NSMutableDictionary",R,N,V_cachedStocks
_isCopyContainingCategoryColumn
T@"NSMutableDictionary",R,N,V_tableNameHeightCache
_isRows
T@"NSMutableIndexSet",&,N,V_hidden
_lastRowDiffPos
T@"NSMutableIndexSet",&,N,V_rowsInvalid
_layout
T@"NSMutableIndexSet",&,N,V_userVisible
_layoutInFlight
T@"NSMutableIndexSet",&,N,V_visible
_locale
T@"NSMutableIndexSet",R,N,V_mutableIndexSet
_nestedRewrites
T@"NSMutableSet",&,N,V_contentReadingThreads
_nextCategoryAggregatesOwnerUID
T@"NSMutableSet",&,N,V_unSyncedStocks
_nextHiddenStateForRowsOwnerUID
T@"NSNumber",&,N
_noContentCount
T@"NSNumber",R,N
_number
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
_offset
T@"NSObject<OS_dispatch_source>",&,N,V_timer
_paragraphStyle
T@"NSObject<TSDContainerInfo>",R,N
_pendingViewColumnsOrRowsHidden
T@"NSObject<TSDContainerInfo><TSWPStorageParent>",W,N,V_richTextParentInfo
_pivotDataTable
T@"NSObject<TSDInfo>",N
_populatedColumnsForGroupLevel1
T@"NSObject<TSTTableDataPayloadHashing>",&,N,V_payload
_populatedColumnsForGroupLevel3
T@"NSPointerArray",&,N,V_arrayOfChunkRocks
_populatedColumnsForGroupLevel5
T@"NSPointerArray",&,N,V_presets
_referenceColor
T@"NSPointerArray",&,N,V_strokeTypeToLayerMap
_regionIterator
T@"NSPointerArray",&,N,V_styleProviderStack
_removeFormulasDuringWritePhase
T@"NSPointerArray",R,N,V_leftColumnStrokes
_reservedFragmentPrecedentsLock
T@"NSPointerArray",R,N,V_topRowStrokes
_rowIndexForUid
T@"NSSet",&,N,V_annotations
_rowTgtToPbMaps
T@"NSSet",C,N,V_visibleFillKnobs
_rowUIDsForImportedGroupingRows
T@"NSString",&,N
_rwLock
T@"NSString",&,N,V_aggregateFunction
_second
T@"NSString",&,N,V_completionText
_showCleanCells
T@"NSString",&,N,V_dateFormat
_sourceFetchers
T@"NSString",&,N,V_identifier
_sparseCellList
T@"NSString",&,N,V_localizedBlankGroupName
_startingTileID
T@"NSString",&,N,V_localizedFalseGroupName
_string
T@"NSString",&,N,V_localizedTrueGroupName
_stroke
T@"NSString",&,N,V_ownerName
_strokeProvider
T@"NSString",&,N,V_rawString
_symbol
T@"NSString",&,N,V_sheetName
_tableNameValid
T@"NSString",&,N,V_string
_temporaryObjectContextDelegate
T@"NSString",&,N,V_tableName
_topStrokeOrder
T@"NSString",&,N,V_trailingWhitespace
_transposedInfo
T@"NSString",&,N,V_whitespaceAfter
_uidsForIndexes
T@"NSString",&,N,V_whitespaceAfterEquals
_uuidReferences
T@"NSString",&,N,V_whitespaceAfterIdentifier
_valueBigNumber
T@"NSString",&,N,V_whitespaceBefore
_visibleIndices
T@"NSString",&,V_whitespaceAfterLeftParen
_weakCalcEngine
T@"NSString",C,N
addAllIdentifiersToSymbolTable:
T@"NSString",C,V_overrideText
addChangedTile:
T@"NSString",R
addCoordMapper:
T@"NSString",R,C,N
addMergeAction:
T@"NSString",R,N
addRelativeRow:
T@"NSString",R,N,V_string
addRemoteDataInterest:forStore:
T@"NSString",R,V_blockingIdentifier
affectedBaseColumnAndRowIndexes
T@"NSURL",&,N,V_importSource
afterRewriteMap
T@"NSUUID",R,&,N
aggregateTypeForAggregateLabel:
T@"Protocol",R,N
alignedStrokeFrameForGridRange:
T@"TSCEAnyReference",&,N
allKeys
T@"TSCECalculationEngine",N,V_calcEngine
allRowGroupUids
T@"TSCECalculationEngine",R,N
analyze
T@"TSCECalculationEngine",R,W,N,V_calcEngine
appendCellList:
T@"TSCECalculationEngine",W,N,V_calcEngine
applyingToTable
T@"TSCECalculationEngine",W,V_calcEngine
arrayWithArray:
T@"TSCECategoryRef",&,N,V_categoryRef
asBooleanFormat
T@"TSCECellTractRef",&,N,V_baseTractRef
attachmentCount
T@"TSCECellValue",R,N,V_cellValue
attachmentErrorRaisedInTextCell
T@"TSCECoordMapper",&,N,V_coordMapper
baseColumnIndex
T@"TSCECoordMapper",&,N,V_srcCoordMapper
baseMap
T@"TSCEEdgeListPrinter",&,N,V_precedentsList
beginSuppressingWillModifyCalls
T@"TSCEFormulaObject",R,N
bezierPathCache
T@"TSCEFormulaRewriteInfo_RowColumnInfo",&,N,V_rowColumnInfo
bodyPivotEmphasisVerticalStroke
T@"TSCEFormulaRewriteSpec",&,N,V_rewriteSpecChromeToBase
booleanAtIndex:
T@"TSCEFormulaRewrite_RegionInfo",&,N,V_originalSrcRegion
cachedCellStyle
T@"TSCEFormulaRewrite_RegionInfo",R,N,V_mergeRegion
cachedLeadingRowIndexesAtLevels
T@"TSCEFormulaRewrite_RegionMergedInfo",&,N,V_mergeInfo
cachedSummaryRowIndexesAtLevels
T@"TSCEFormulaRewrite_Uids",R,N,V_columnUids
canDrawInBackgroundDuringScroll
T@"TSCEFormulaRewrite_Uids",R,N,V_rowUids
categoryLevelForTableStyleArea:
T@"TSCEGroupByChange",&,N,V_groupByChange
cellCoordinates
T@"TSCEMutableUIDSet",&,N,V_rowUIDsForImportedGroupingRows
cellIsInACycle:
T@"TSCENamedReferenceManager",R,N
cellRangeName:usedSymbolicName:
T@"TSCERegexMatcher",&,N,V_matcher
cellRefsForRowIndexes:tableUID:
T@"TSCERemoteDataCoordinator",R,W,N,V_coordinator
cellSpecForDiff
T@"TSCERemoteDataSpecifierSet",R,N,V_interestingKeys
cellUID
T@"TSCERemoteDataStore",R
changesPerColumnMapToBeInGroup:
T@"TSCERemoteDataValueMap",R,N,V_remoteDataMap
choices
T@"TSCERewriteTableUIDInfo",&,N,V_tableUIDInfo
clearAllPivotHiddenAndFiltered:
T@"TSCERewritingMinion",&,N
clearEmptyNodes
T@"TSCETablesByName",R
coerceToFormatType:usingSpares:
T@"TSCETablesByNameDistributor",R,N,V_tableNameChangeDistributor
collapseSummaryColumnGroupUIDs:
T@"TSCEUIDSet",R,N
columnGroupings
T@"TSCEUIDSet",R,N,V_expandedRowColumnUuids
columnRemainDup
T@"TSCEUIDSet",R,N,V_removedGroupNodeUids
columnUIDForGroupingColumnName:
T@"TSCEUIDSet",R,N,V_uidsExpanded
columnUIDsForViewColumnIndexes:
T@"TSCEUndoTract",&,N,V_tract
computedEditingCellContentFrame
T@"TSCEUuidReferences",R,&,N,V_uuidReferences
containsCellID:
T@"TSCEWrappedRangeRef",&,N
containsRowUid:
T@"TSDCommentStorage",&,N,V_commentStorage
contentIterator
T@"TSDCommentStorage",R,D,N
contextResolver
T@"TSDFill",&,N,V_bandedFillObject
controlFormatID
T@"TSDInfoGeometry",C,D,N
coordFromIndex:
T@"TSDInfoGeometry",C,N,V_infoGeometry
copyWithAuthor:
T@"TSDPencilAnnotationStorage",R,N,V_pencilAnnotationStorage
countBlankValue
T@"TSDStroke",&,N,VmExteriorStroke
countOfNumberDateDurationOrBool
T@"TSDStroke",&,N,VmVerticalStroke
cppTile
T@"TSDStroke",R,N,V_bottomStroke
curTile
T@"TSDStroke",R,N,V_topStroke
currentFormatID
T@"TSKAnnotationAuthor",&,N
customFormatKey
T@"TSKChangeNotifier",W,N
dateFromString:
T@"TSKCustomFormatWrapper",R,N,V_customFormatForBlankGroup
dealloc
T@"TSKDocumentRoot",R,N
defaultDateTimeFormatForLocale:
T@"TSKFormat",R,D,N
deferGroupByChangeNotifications
T@"TSKFormat",R,N,V_baseFormat
deriveCategoryCellStyleForTableStyleArea:connectedToStylesheet:
T@"TSKFormat",R,N,V_controlFormat
details
T@"TSKFormat",R,N,V_currentFormat
didCopy
T@"TSKFormat",R,N,V_dateFormat
didModifyTable:
T@"TSKFormat",R,N,V_multipleChoiceListFormat
didRemoveTableName:forTableUID:
T@"TSKFormat",R,N,V_textFormat
disableNotifier
T@"TSKSelection",&,N,VmStrokeSelection
drawCellContent
T@"TSKShuffleMapping",&,N,V_shuffleMapping
dropReferences:
T@"TSPLazyReference",&,N,V_commentStorageTableReference
dupContentCache
T@"TSPLazyReference",&,N,V_controlCellSpecTableReference
edgeExpandTractUsingIncludeUidTract:resolver:forRows:isInverse:
T@"TSPLazyReference",&,N,V_formulaErrorTableReference
editorSelection
T@"TSPLazyReference",&,N,V_importWarningSetTableReference
enabled
T@"TSPLazyReference",&,N,V_richTextTableReference
endDynamicMode:
T@"TSPLazyReference",&,N,V_styleTableReference
enumerateCombinationsWithBlock:
T@"TSPObject<TSDOwningAttachment>",D,N
enumerateMergeRangesUsingBlock:
T@"TSPObject<TSDOwningAttachment>",R,D,N
enumerateTableStylesUsingBlock:
T@"TSPObjectContext",R,N,V_temporaryContext
errorForErrorType:functionName:
T@"TSSPropertyMap",&,N,V_propertyMap
expandedSetWithUuidsFromVector:
T@"TSSPropertyMap",&,N,V_propertyMapToSet
extraInfoNumber
T@"TSSStyle",R,D,N
findOrAddRowInfoAtTileRowIndex:
T@"TSTAccumulator",&,N,V_accumulator
flushDirtyReferencesForSeconds:
T@"TSTAnimation",R,N
foreachCellRef:
T@"TSTAutofillSelection",&,N,V_autofillSelection
format:
T@"TSTCategoryOrder",R,N,V_categoryOrder
formats
T@"TSTCategoryOwner",R,N,V_categoryOwner
formulaOwnerUID
T@"TSTCategoryTranslator",R,N,V_translator
formulasForUndo
T@"TSTCell",C,N,V_cell
fullPropertyMap
T@"TSTCell",R,N,V_layoutCell
functionNameForLocalizedString:
T@"TSTCellDictionary",R,N,V_cellsPendingWrite
getColumnWidth:
T@"TSTCellFormulaSpec",&,N,V_formulaSpec
getUUIDBytesForColumnAggregate:
T@"TSTCellMap",&,N,V_cellMap
groupByForColumnLevel:rowLevel:
T@"TSTCellRegion",&,N,V_cachedBaseRegion
groupNodeUIDMap
T@"TSTCellRegion",&,N,V_cellRegion
groupingColumns
T@"TSTCellRegion",&,N,V_columnRegion
handleFullTile:
T@"TSTCellRegion",&,N,V_importedRegion
hasDirtyingToPerformForOwnerId:
T@"TSTCellRegion",&,N,V_rowRegion
hasNumberFormat
T@"TSTCellRegion",R,N
hasPreserveFlag
T@"TSTCellRegionGatherer",&,N,V_dirtyCellRegionGatherer
hasValueOrError
T@"TSTCellSelection",R,N
hashVal
T@"TSTCellSpec",R,D,N
hotData
T@"TSTCellStyle",&,N
hyperlinkCellID
T@"TSTCellStyle",&,N,V_cachedCellStyle
i_populateIndexesForSummaryRows
T@"TSTCellStyle",&,N,V_categoryLevel2CellStyle
inDynamicLayout
T@"TSTCellStyle",&,N,V_categoryLevel4CellStyle
indexGreaterThanOrEqualToIndex:
T@"TSTCellStyle",&,N,V_cellStyle
indexesForNonSummaryBodyColumns
T@"TSTCellStyle",&,N,V_headerColumnCellStyle
indexesOfVisibleRowsInRowRange:
T@"TSTCellStyle",&,N,V_labelLevel1CellStyle
initAsCompressionMapForIndexes:
T@"TSTCellStyle",&,N,V_labelLevel3CellStyle
initWithColumnUid:groupingType:
T@"TSTCellStyle",&,N,V_labelLevel5CellStyle
initWithContext:expressionNode:
T@"TSTCellStyle",&,N,V_pivotBodySummaryRowCellStyle
initWithDouble:
T@"TSTCellStyle",N
initWithFormatType:minimum:maximum:increment:displayFormatType:
T@"TSTCellStyle",R,N,V_cellStyle
initWithLayoutEngine:rowRegion:
T@"TSTCellUIDList",&,N,V_cellUIDList
initWithLocale:
T@"TSTCellUIDList",R,N,V_cellUIDs
initWithObject:
T@"TSTCellUIDRegion",&,N,V_cellUIDRegion
initWithStorageArchive:treeArchive:nextTileID:unarchiver:owner:
T@"TSTCellWillChangeDistributor",R,N,V_cellWillChangeDistributor
initWithSymbol:
T@"TSTColumnRowUIDMap",&,N,V_columnRowUIDMap
initWithTableUID:preserveFlags:
T@"TSTColumnRowUIDMap",R,N
initWithTrueString:falseString:
T@"TSTColumnRowUIDMap",R,W,N,V_baseMap
initWithValues:
T@"TSTColumnRowUIDMap",R,W,N,V_viewMap
insertColumnsAtIndex:metadatas:
T@"TSTConcurrentMutableCellUIDSet",R,N
instanceWithArchive:unarchiver:
T@"TSTConcurrentMutableCellUIDSet",R,N,V_cellsToInvalidateNonoverflowingAfterRecalc
interestingKeys
T@"TSTConcurrentSparseCellList",R,N,V_sparseCellList
invalidFunction
T@"TSTConditionalStyleFormulaOwner",R,N
invalidRowIndex
T@"TSTConditionalStyleSet",R,D,N
invalidateKnobs
T@"TSTCoordinateArray",&,N,V_bodyColumnCoordinates
isAtEnd
T@"TSTCoordinateArray",&,N,V_headerColumnRowCoordinates
isBlank
T@"TSTDupContentCache",&,N,V_dupContentCache
isClear
T@"TSTExpressionNode",&,N,V_expressionTree
isEmpty
T@"TSTFontInfoCache",&,N,V_fontInfoCache
isForPivotTable
T@"TSTFormulaPredArg",&,N,V_predArg0
isNewlyImported
T@"TSTFormulaPredArg",&,N,V_predArg2
isProxy
T@"TSTFormulaPredicate",&,N,V_predicate
isSingleColumnSpanningReference
T@"TSTFormulaRewriteSpec",R,N,V_rewriteSpec
isValid
T@"TSTFormulaStore",&,N,V_formulaStore
isZoomToEditOperationInProgress
T@"TSTFunctionEndNode",&,N
lastRequestDate
T@"TSTGroupBy",&,N,V_groupBy
leftStrokeOrder
T@"TSTGroupBy",R,N
loadTableStylePropertiesIntoPropertyMap:fromArchive:unarchiver:
T@"TSTGroupBy",R,W,N,V_groupBy
localizedTrueGroupNameForColumn
T@"TSTGroupByChangeDistributor",R,N,V_groupByChangeDistributor
logForCategory:
T@"TSTGroupBySet",W,N,V_groupBySet
mByCell
T@"TSTGroupNode",R,N
mCanvasSafeRect
T@"TSTGroupValueTuple",R,N
mCellRangeCount
T@"TSTGroupingColumnList",R,N,V_columnGroupings
mFixedTableSize
T@"TSTHeaderNameMgr",R,&,N
mLocale
T@"TSTHiddenStateExtent",R,N,V_columnHiddenStateExtent
mShouldUpdateAttachmentChildren
T@"TSTHiddenStateIndexSet",&,N,V_columnsVisible
makeStyleMapper
T@"TSTHiddenStateIndexSet",&,N,V_rowsVisible
mapping
T@"TSTHiddenStatesOwner",R,N
markAsProcessed
T@"TSTHiddenStatesOwner",W,N,V_hiddenStatesOwner
matcher
T@"TSTHierarchicalCellDiffMap",&,N,V_beforeRewriteMap
maxNumberOfRows
T@"TSTImportWarningSet",R,D,N
maximum
T@"TSTLayout",&,N,V_scaledLayout
mergeLeftRef:rightRef:outError:
T@"TSTLayout",R,W,N
mergeRangeCache
T@"TSTLayout",W,N,VmLayout
minSize
T@"TSTLayoutDynamicResizeInfo",&,N,V_dynamicResizeInfo
minimum
T@"TSTLayoutEngine",R,N
missingRunningTotalInFieldError
T@"TSTLayoutEngine",R,W,N
moveRuleFromGroupLevel:toLevel:
T@"TSTLayoutHint",&,N,V_overrideLayoutHint
mutableIndexSet
T@"TSTLayoutHint",&,N,VmLayoutHint
mutablePivotHiddenColumnIndexes
T@"TSTLayoutSpace",&,N,V_frozenHeaderCornerSpace
namePrefixIndex
T@"TSTLayoutSpace",&,N,V_repeatHeaderColumnsSpace
needsToUpdateFilterSetForImport
T@"TSTLayoutSpace",&,N,V_repeatHeaderRowsSpace
newCell
T@"TSTLayoutSpaceBezierPathCache",&,N,V_bezierPathCache
nonAutosizedFrameForTextLayout:
T@"TSTLayoutSpaceBundle",R,W,N,V_bundle
numRangeRecords
T@"TSTMergeOwner",R,N,V_mergeOwner
numRows
T@"TSTMergeRegionMap",&,N,V_mergedCellRanges
numberOfVisibleRowsInCellRange:
T@"TSTMutableCellIteratorData",&,N,V_layoutCellData
offline
T@"TSTMutableStrokeLayer",&,N,V_clearedMajorStrokeLayer
options
T@"TSTMutableStrokeLayer",&,N,V_clearedStrokeLayer
p_calculateAncillaryInformation
T@"TSTMutableStrokeLayer",&,N,V_dynamicUnorderedStrokeLayer
p_getLayoutDirectionLeftToRight
T@"TSTMutableStrokeLayer",&,N,V_spillMinorStrokeLayer
p_gridColumnForTableCoordinate:
T@"TSTOwnerUidMapper",R,N
p_maskRectForTextEditingLayout:
T@"TSTPencilAnnotationOwner",R,N,V_pencilAnnotationOwner
p_mostRecentlySetDateFormatType
T@"TSTPivotOwner",R,N
p_pruneRowCount
T@"TSTPivotRowColumnOrder",R,N,V_pivotOrder
p_setCell:forMonthGroupingTypeWithGroupColumnValue:toBeInGroup:
T@"TSTPopUpMenuModel",R,D,N
p_setFormulaWithSymbolCellCoord:andAttributeCellCoord:atCellID:
T@"TSTReferenceNode",&,N,V_editingReferenceNode
p_setupCustomFormatsWithLocale:
T@"TSTSelectionDragController",W,N,V_cellDragController
p_tableCoordinateForGridColumn:
T@"TSTSortRuleReferenceTracker",R,N,V_sortRuleReferenceTracker
p_validationFittingCellRegionForRowsDeleted:cellRegionGatherer:
T@"TSTStockDetails",R,N,V_stockDetails
pattern
T@"TSTStrokeLayer",&,N,V_bottomStrokeLayer
pivotBodySummaryColumnCellStyle
T@"TSTStrokeLayer",&,N,V_customUnorderedStrokeLayer
pointerAtIndex:
T@"TSTStrokeLayer",&,N,V_defaultMinorStrokeLayer
popover
T@"TSTStrokeLayer",&,N,V_majorStrokeLayer
prepareToRewriteWithCalcEngine:
T@"TSTStrokeLayer",&,N,V_topStrokeLayer
processChanges:forChangeSource:
T@"TSTStrokeOrderedLayer",&,N,V_customOrderedStrokeLayer
propertyMapToSetWithProperties:
T@"TSTStrokeSidecar",&,N
purpose
T@"TSTStrokeSidecar",R,N
raiseAbortError
T@"TSTStrokeWidthCache",&,N,V_columnToStrokeWidthCache
raiseDataInvalidDimensionsError
T@"TSTStructuredTextImportRecord",&,N
raiseInvalidTokenInFormulaError
T@"TSTSummaryCellVendor",R,N,V_summaryCellVendor
raiseNumberSmallerThanZeroError
T@"TSTSummaryModel",R,N,V_summaryModel
rangeFromFormulaObject:atCoord:
T@"TSTTableDataList",R,N,V_multipleChoiceListFormatDataList
reducedSetMinusUuidsFromVector:
T@"TSTTableDataListCache",R,N,V_dataListCache
refPathInterestingCharactersSet
T@"TSTTableDataListItemCache",&,N,V_formats
referenceIsValidIncludingSheet:
T@"TSTTableDataListSegment",N,V_cachedSegment
regionByIntersectingRowIndices:
T@"TSTTableDataStore",R,N,V_dataStore
regionMovedInfo
T@"TSTTableFilterSet",&,N
registerAllFormulasWithCalculationEngine:wasCrossDocumentPaste:
T@"TSTTableFilterSet",C,N
relativeCellRef
T@"TSTTableGroupSortOrderUID",&,N,V_groupSortOrder
relativeTopLeft
T@"TSTTableHeaderStorage",&,N,V_rowHeaderStorage
remoteDataStore
T@"TSTTableInfo",N,V_tableInfo
removeAllValues
T@"TSTTableInfo",R,N,V_info
removeCellRef:usingCategoryRef:
T@"TSTTableInfo",R,W,N,V_tableInfo
removeReceiver:
T@"TSTTableInfo",W,N
removeRulesWithAbsoluteIndices:
T@"TSTTableInfo",W,N,V_tableInfo
replaceFormulaErrorsUsingBlock:
T@"TSTTableModel",N,V_baseTableModel
requestLaunched
T@"TSTTableModel",R,N
resetFormulaAt:
T@"TSTTableModel",R,N,V_pivotDataTable
resetModelCache
T@"TSTTableModel",R,W,N,V_tableModel
resetScaleToFit
T@"TSTTableNameSelection",&,N,V_tableNameSelection
rewriteForPaste
T@"TSTTableReferences",R,N
richTextForKey:
T@"TSTTableSortOrder",C,N
richTextPayload
T@"TSTTableStyle",&,N
rollbackToMark:
T@"TSTTableStyleNetwork",C,N
rowInfoAtIndex:
T@"TSTTableStylePreset",&,N,V_tableStylePreset
rowRangeUnderSummaryOrLabelRow:
T@"TSTTableTileRowInfo",&,N,V_baseRow
rowUids
T@"TSTTableTileStorage",&,N,V_tileStorage
rowsUserVisible
T@"TSTTableTranslator",R,N
saveToArchiver:
T@"TSTTextEngineDelegate",&,N,V_tableNameTextEngineDelegate
T@"TSTTextStyleHandle",R,N,V_textStyleHandle
setAccumulator:
T@"TSTUIDRectRef",R,N
setAspectOperationIsInProgress:
T@"TSTWPColumnCache",&,N,V_cellIDToWPColumnCache
setBottomRight:
T@"TSTWPTokenAttachment",W,N,V_tokenAttachment
setCacheHintID:
T@"TSUColor",&,N,V_color
setCachedImage:
T@"TSUColor",&,N,V_referenceColor
setCachedIndexesForSummaryRows:
T@"TSUIntToIntDictionary",R,N,V_dataKindStatus
setCachedValue:
T@"TSUIntegerKeyDictionary",&,N,V_columnStrokeExportCache
setCategoryRef:
T@"TSUIntegerKeyDictionary",&,N,V_strings
setCellStyleID:
T@"TSULocale",&,N,V_locale
setCellsWithCellMap:ignoreFormulas:skipDirtyingNonFormulaCells:
T@"TSULocale",N,V_locale
setColumnIndex:
T@"TSULocale",R,N,V_locale
setConditionalStyleAppliedRule:
T@"TSUNetworkReachability",&,N,V_internetReachability
setCurRowIndex:
T@"TSUPointerKeyDictionary",&,N,V_formatsAdded
setCurrentDate:
T@"TSUPointerKeyDictionary",&,N,V_textStyleToFontHeight
setDoubleValue:
T@"TSUPointerKeyDictionary",R,V_attachmentCellStorageToLayoutMap
setDynamicUnorderedStrokeLayer:
T@"TSUSparseArray",&,N,V_data
setFindSelectionHighlightLayer:
T@"TSUWidthLimitedQueue",&,N,V_layoutMeasureQueue
setFormat:shouldSetExplFlags:isExplicit:makeCurrent:clearingID:
T@"TSWPColumn",&,N,V_wpColumn
setHeaderSideBorderColumnRange:
T@"TSWPLayout",&,N,VmContainedTextEditingLayout
setHidingState:ofColumnAtIndex:
T@"TSWPPadding",R,N
setHostCellRef:
T@"TSWPParagraphStyle",&,N
setInsertAtUid:
T@"TSWPParagraphStyle",&,N,V_cachedTextStyle
setIsBlankForKeyboardInsertion:
T@"TSWPParagraphStyle",&,N,V_categoryLevel2TextStyle
setIsMagicMove:
T@"TSWPParagraphStyle",&,N,V_categoryLevel4TextStyle
setLayoutIsLTR:
T@"TSWPParagraphStyle",&,N,V_footerRowTextStyle
setMaximumSize:
T@"TSWPParagraphStyle",&,N,V_headerRowTextStyle
setMixedRowStartedWithPreserve:
T@"TSWPParagraphStyle",&,N,V_labelLevel2TextStyle
setNeedsDisplay
T@"TSWPParagraphStyle",&,N,V_labelLevel4TextStyle
setNumberValue:
T@"TSWPParagraphStyle",&,N,V_tableNameStyle
setPivotAggregateRuleChangeUID:
T@"TSWPParagraphStyle",N
setPrefixRange:
T@"TSWPParagraphStyle",R,N
setPropertyMap:
T@"TSWPParagraphStyle",R,N,V_textStyle
setRep:
T@"TSWPShapeStyle",&,N,V_tableNameShapeStyle
setRowsInvalid:
T@"TSWPStorage",&,N,V_deprecatedProvider
setSearchFlags:
T@"TSWPStorage",R,D,N
setShowsChromeWhileEditingCell:
T@"TSWPStorage",W,N,V_tableNameEditingStorage
setStringValue:
T@"UIViewController",R,N
setStrokeLayer:forLeftOfColumn:
T@,&,N,V_first
setSupportsComplexReorganizeUI:
T@,&,N,V_warningSetsForUndo
setSyncReferenceHighlightState:
TB,N
setTableChrome:
TB,N,GisBlank,V_blank
setTableNameTextEngineDelegate:
TB,N,GisHighlighted,V_highlighted
setTemporaryOrder:forDimension:
TB,N,GisRangeWithFunction,V_rangeWithFunction
setTextStyleID:
TB,N,GisSelected,V_selected
setTileStorage:
TB,N,GisTableNameValid,V_tableNameValid
setUserVisible:
TB,N,GneverShowsMenu,V_neverShowsMenu
setWhitespaceAndNewlineCharSet:
TB,N,V_allowSpanningColumnReferenceBodyQualifier
shallowCopyToCoordFormUsingMap:
TB,N,V_allowWhitespaceInFormulas
shortStringForDayTypeForLocale:
TB,N,V_allowsFullyFilteredTables
shouldHyphenate
TB,N,V_arrowKeyAtEdgeWhileEditingNavigates
sortOrderByRemovingRuleAtIndex:
TB,N,V_arrowKeysWrap
spanningColumns
TB,N,V_backTabWraps
specifierByChangingAttributeTo:
TB,N,V_cacheIsValid
srcUidForDstUid
TB,N,V_cachedCellWraps
storage
TB,N,V_cachedIsValidReference
stringAtCellID:
TB,N,V_cachedValueWasFetchedWithRichTextAttributes
stringFromDate:
TB,N,V_cellCountValid
strokeLayerForLeftSideOfColumn:
TB,N,V_cellPropsRowHeight
summaryRowIndexForViewRowIndex:
TB,N,V_chromeCoordsAreViewCoords
supportsAutomaticNumberKeyboard
TB,N,V_containsCellBorderChanges
supportsStockUI
TB,N,V_continuesEditingAfterNavigation
suppressFrozenHeadersForEditing
TB,N,V_cornersCanDragResize
tableAreaForDroppingRowAtIndex:
TB,N,V_disableImplicitNaming
tableID
TB,N,V_doesNotNeedFormulaRewriteForImport
tableNameBounds
TB,N,V_dragByHandleOnly
tableNameShapeStyleIDForPreset:
TB,N,V_drawPreventAntialias
tableTranslator
TB,N,V_dynamicRepResize
tabsRowWidthAndOptionalLeftGap:
TB,N,V_dynamicRepressFrozenHeaderColumns
tappedStockCellAtUnscaledPoint:
TB,N,V_dynamicResizingColumns
tempSummaryCell
TB,N,V_emptyFilteredTable
textStyleHandle
TB,N,V_exportPermanentHidingState
threadCollector
TB,N,V_exportsCellComments
timeoutInterval
TB,N,V_fixupFormulas
tokenContextWithExpressionNode:parenNestingLevel:argumentIndex:
TB,N,V_forConditionalStyle
trackedReferencesExistForTable:
TB,N,V_forFormulaPlainText
tst_hasLeadingSingleQuoteEscape
TB,N,V_forceSheetName
tsu_pop
TB,N,V_forceTableName
uniqueObjectUID
TB,N,V_formulaEditorEvaluatesFormulas
updateCellData:
TB,N,V_hasCachedIsValidReference
updateKnownCachedStocksInStore:
TB,N,V_hasContentIsCached
uppercaseString
TB,N,V_hasInterestingKeys
usEnglishLocale
TB,N,V_hasPreserveFlag
usesWideOffsets
TB,N,V_headerColumnsFrozen
valueAtGridCoord:accessContext:
TB,N,V_headerRowsFrozen
viewBoundingBox
TB,N,V_headersFrozenByDefault
viewCellTractRefForCategoryRef:
TB,N,V_hideStepperHUD
viewRowIndexForSummaryRowIndex:
TB,N,V_ignored
visibleCellOffsetBy:fromCellID:
TB,N,V_inInvalidate
warningSetForErrorTokenFormula:
TB,N,V_invalidTableOffset
weekday
TB,N,V_invalidateAllChromeCaches
widthForString:
TB,N,V_invalidateKnobs
widthOfColumnAtIndex:isDefault:
TB,N,V_invalidateSelection
yearsReferenced
TB,N,V_invalidatedForEditingCell
.cxx_construct
T@"NSArray",&,N
CGFloatValue
T@"NSArray",R,V_groupingColumns
CGImageForSize:inContext:orContentsScaleProvider:
T@"NSString",&,N,V_lastFragment
NRM_formulaOwnerUID
T@"TSCEFormulaRewrite_Uids",R,N
T#,R,N
T@"TSDStroke",R,N,V_rightStroke
T@"<TSCEFormulaOwning>",&,N,V_formulaOwner
T@"TSTGroupNode",N,V_parentNode
T@"<TSCEFormulaReplacing>",R,N
T@"TSTTableTile",&,N,V_baseTile
T@"<TSCERefParsingProtocol>",R,&,N
T@,&,N,V_second
T@"<TSCERemoteDataStoreDelegate>",W,N,V_delegate
TB,N,V_createLargeDefaultTables
T@"<TSDHint>",R,N
TB,N,V_layoutInvalidateChildren
T@"<TSKPencilAnnotationStorage>",R,N
TB,N,V_mayModifyFormulasInCells
T@"<TSTCanvasReferenceProvider>",W,N,V_canvasReferenceProvider
TB,N,V_preserveRectangularRange
T@"<TSTCellRegionIterating>",&,N,V_regionIterator
TB,N,V_tabWhileEditingNavigates
T@"<TSTCellRegionIterating><TSTMutableCellIteratorDataUpdating>",&,N,V_dataStoreIterator
TB,R,N,GisOneToMany,V_oneToMany
T@"<TSTCustomStrokeProviding>",R,N,V_customStrokeProvider
TB,R,N,V_isRows
T@"<TSTLayoutDynamicContentProtocol>",&,N,V_dynamicContentDelegate
TB,R,N,V_wasRemovedFromDocument
T@"<TSTStrokeLayerStrokeAndRange>",&,N,V_minorStrokeLayerToken
TI,N,V_cachedNumberOfHeaderRows
T@"<TSTTableChromeProvider>",R,N,V_tableChrome
TQ,N,V_position
T@"<TSTTableRepDelegate>",R,N,V_delegate
TQ,R,N,V_lastArchivedAppVersion
T@"<TSTTableStrokeProviding>",W,N,V_strokeProvider
T^v,R,N,V_groupingColumnChanges
T@"<TSWPStyleProviding>",R,W,N
Td,R,N,V_capturedRowHeightTotal
T@"<TSWPStyleProviding>",W,N,VmStyleProvidingSource
Ti,N,V_listType
T@"NSArray",&,N,V_components
Tq,N,V_cachedParagraphAlignment
T@"NSArray",&,N,V_pasteInverseCommands
T{CGAffineTransform=dddddd},R,N
T@"NSArray",&,N,V_thresholdCellValues
T{TSKUIDStruct=QQ},N,V_ownerUID
T@"NSArray",&,V_whitespaceAfterDelimiters
T{TSKUIDStruct=QQ},R,V_groupUid
T@"NSArray",R,N,V_columnAggregates
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_lastCellRangeAdded
T@"NSArray",R,N,V_groupSortRules
T{_NSRange=QQ},N,V_curTileRange
T@"NSArray",R,N,V_rules
_aggrIndexLevel
T@"NSCharacterSet",&,N,V_nonWhitespaceAndNewlineCharSet
_allAggsInGroupRootFormulaCoord
T@"NSCharacterSet",&,N,V_whitespaceCharSet
_animationStack
T@"NSData",C,N,V_sourceData
_baseTableModel
T@"NSDate",&,N
_bundle
T@"NSDate",&,N,V_importDate
_cachedCellRegionVersionCounter
T@"NSDate",&,N,V_lastRequestDate
_cachedIndexesForSummaryColumns
T@"NSDate",N,V_dateAccumulator
_cellCountValid
T@"NSDate",R,N
_cellID
T@"NSDictionary",&,N,V_dragAndDropDetails
_cellRefsByUuid
T@"NSIndexSet",&,N,V_cachedIndexes
_checkStructure
T@"NSIndexSet",&,N,V_cachedIndexesForLeadingColumns
_chromeTractRef
T@"NSIndexSet",&,N,V_cachedIndexesForLeadingSummaryRows
_clearTopStroke
T@"NSIndexSet",&,N,V_cachedIndexesForSummaryColumns
_coldDataByYear
T@"NSIndexSet",&,N,V_columnIndexesInRow
_columnsVisible
T@"NSIndexSet",&,N,V_intersectingRowsIndexSet
_completionText
T@"NSIndexSet",&,N,V_populatedColumnsForGroupLevel2
_coords
T@"NSIndexSet",&,N,V_populatedColumnsForGroupLevel4
_currencyFormat
T@"NSIndexSet",&,N,V_viewColumnIndexesInCurrentRow
_customFormatID
T@"NSIndexSet",R,V_indexes
_definedCellMap
T@"NSMapTable",&,N,V_cachedLeadingColumnIndexesAtLevels
_displayChoices
T@"NSMapTable",&,N,V_cachedLeadingSummaryColumnIndexesAtLevels
_durationFormat
T@"NSMapTable",&,N,V_cachedSummaryColumnIndexesAtLevels
_dynamicRepressFrozenHeaderRows
T@"NSMapTable",&,N,V_propertyMapToTextStyleMap
_errors
T@"NSMapTable",&,N,V_variationMap
_expressionNode
T@"NSMapTable",R,N,V_commentStorageMap
_fittingHeights
T@"NSMutableArray",&,N,V_cellLists
_forceSplitting
T@"NSMutableArray",&,N,V_children
_formatDataList
T@"NSMutableArray",&,N,V_dirtyCellDependencyRows
_formattedValue
T@"NSMutableArray",&,N,V_iterators
_formulaOwnerId
T@"NSMutableArray",&,N,V_referencesMatchingInputAsPrefix
_fourth
T@"NSMutableArray",&,N,V_rowInfosPerRow
_groupAggregateUidFlatteningMap
T@"NSMutableArray",&,N,V_textStyleReferences
_groupSortOrder
T@"NSMutableArray",&,N,V_whitespaceAfterDelimiters
_groupingFormat
T@"NSMutableArray",R,N,V_aggregators
_height
T@"NSMutableArray",R,N,V_cellStatesToLayout
_hiddenStateFormulaOwnerForRows
T@"NSMutableDictionary",&,N,V_formatsRemoved
_hideStepperHUD
T@"NSMutableDictionary",&,N,V_uniqueValueToRowIndexes
_importWarningSetTableReference
T@"NSMutableDictionary",R,N,V_cachedQuotes
_indexesForUids
T@"NSMutableDictionary",R,N,V_ownerMap
_isDefaultsOnly
T@"NSMutableIndexSet",&,N,V_columnsInvalid
_keyVal
T@"NSMutableIndexSet",&,N,V_keys
_lastSavedInBNC
T@"NSMutableIndexSet",&,N,V_userHidden
_layoutCellData
T@"NSMutableIndexSet",&,N,V_validCells
_leftSingleQuotationMarkEscaped
T@"NSMutableIndexSet",&,N,V_visibleIndexSet
_minion
T@"NSMutableIndexSet",R,N,V_tableStyleIndexes
_neverShowsMenu
T@"NSMutableSet",&,N,V_hotData
_nextGroupByUID
T@"NSMutableSet",R,N,V_sourceFetchers
_nextID
T@"NSNumber",&,N,V_partitioningPass
_nonWhitespaceAndNewlineCharSet
T@"NSObject<OS_dispatch_queue>",&,N,V_layoutConcurrentQueue
_numberFormatID
T@"NSObject<OS_dispatch_semaphore>",R,N,V_tspSemaphore
_originalUIDMap
T@"NSObject<OS_os_log>",R,N
_pasteWasUpdate
T@"NSObject<TSDContainerInfo><TSWPStorageParent>",N,V_richTextParentInfo
_pivotDataModel
T@"NSObject<TSDInfo>",D,N
_pivotDateGroupingTypesByColumn
T@"NSObject<TSTCellRegionIterating>",R,N,V_regionIterator
_populatedColumnsForGroupLevel2
T@"NSOperationQueue",R,N,V_updateQueue
_populatedColumnsForGroupLevel4
T@"NSPointerArray",&,N,V_fixedColumnWidthStack
_precedentsList
T@"NSPointerArray",&,N,V_rowInfos
_region
T@"NSPointerArray",&,N,V_strokeTypeToLayerStackMap
_relativeColumn
T@"NSPointerArray",R,N,V_bottomRowStrokes
_reoriginToZero
T@"NSPointerArray",R,N,V_rightColumnStrokes
_rewrittenCells
T@"NSRegularExpression",R,N,V_regularExpression
_rowInfosPerRow
T@"NSSet",C,N
_rowUID
T@"NSSet",R,N
_rowUidForIndex
T@"NSString",&,N,V_aggregateFieldName
_rwlock
T@"NSString",&,N,V_cellID
_setTile:forID:
T@"NSString",&,N,V_contextSheetName
_shuffleMapping
T@"NSString",&,N,V_firstFragment
_sourceRowCount
T@"NSString",&,N,V_invalidFunctionName
_srcCoordMapper
T@"NSString",&,N,V_localizedErrorGroupName
_storageVersion
T@"NSString",&,N,V_localizedFalseGroupNameForColumn
_stringDataList
T@"NSString",&,N,V_localizedTrueGroupNameForColumn
_strokeIterator
T@"NSString",&,N,V_pivotSourceTableName
_supportsCanvasReferenceEditing
T@"NSString",&,N,V_rest
_tableNameStyle
T@"NSString",&,N,V_sheetNameUnquoted
_temporaryLeftSingleQuoteString
T@"NSString",&,N,V_symbol
_topStrokeLayer
T@"NSString",&,N,V_tableNameUnquoted
_tracts
T@"NSString",&,N,V_value
_uidMap
T@"NSString",&,N,V_whitespaceAfterDelimiter
_unSyncedStocks
T@"NSString",&,N,V_whitespaceAfterFunctionName
_uuidsByCellRef
T@"NSString",&,N,V_whitespaceAfterLet
_versionCounter
T@"NSString",&,N,V_whitespaceBeforeFirstChild
_wasCut
T@"NSString",&,V_whitespaceBeforeFirstChild
accountingStyle
T@"NSString",C,N,V_initialWhitespace
addCellDiffMap:
T@"NSString",C,V_overrideTextAsTyped
addColumnRange:
T@"NSString",R,C
addFunctionUsesInFormula:atCellRef:outContainsVolatileFunction:
T@"NSString",R,D,N
addRefPathWord:
T@"NSString",R,N,V_originalFullReferenceString
addRemoteDataInterest:forOwner:
T@"NSString",R,N,V_symbol
addRow:
T@"NSTimeZone",&
afterCountValue
T@"NSUUID",R
aggregateEnumeratorWithObjects:
T@"NSUUID",R,N
alignedStrokeFrameForCellRange:
T@"TSCEAbortObject",&,N,V_abortObject
allDataAsString
T@"TSCECalculationEngine",N
allRowGroupUIDs
T@"TSCECalculationEngine",R,&,N,V_calcEngine
allSpanningDependenciesAsString
T@"TSCECalculationEngine",R,N,V_calcEngine
anyUuid
T@"TSCECalculationEngine",R,W,N,V_calculationEngine
appendUidTract:
T@"TSCECalculationEngine",W,N,V_calculationEngine
areCellsInTheSameRegionInTable:
T@"TSCECategoryRef",&,N
asArray
T@"TSCECellTractRef",&,N
T@"TSCECellTractRef",&,N,V_chromeTractRef
attachmentError
T@"TSCECellValue",R,N,V_groupCellValue
baseBoundingBox
T@"TSCECoordMapper",&,N,V_fromTableCoordMapperForPasteboard
baseColumnRange
T@"TSCEEdgeListPrinter",&,N,V_dependentsList
baseRow
T@"TSCEFormulaObject",&,N
beginTrackingNamesInRange:ofTableUID:addingTrackedReferencesTo:
T@"TSCEFormulaObject",R,N,V_formulaObject
bodyColumnRange
T@"TSCEFormulaRewriteSpec",&,N,V_rewriteSpecBaseToChrome
boolean
T@"TSCEFormulaRewrite_MergeOriginMovedInfo",&,N,V_mergeOriginMovedInfo
booleanFormatID
T@"TSCEFormulaRewrite_RegionInfo",R,N,V_dstRegion
cachedCellWraps
T@"TSCEFormulaRewrite_RegionInfo",R,N,V_srcRegion
cachedNumberOfGrandTotalColumns
T@"TSCEFormulaRewrite_RegionMovedInfo",&,N,V_regionMovedInfo
cachedTextStyle
T@"TSCEFormulaRewrite_Uids",R,N,V_rowOrColumnUids
caption
T@"TSCEFormulasForUndo",&,N,V_formulasForUndo
cell:forCellID:
T@"TSCEHauntedOwner",R,N,V_hauntedOwner
cellIDs
T@"TSCEMutableUIDSet",&,N,V_rowUIDsWithPendingGroupingChanges
cellMap
T@"TSCEQuotedRefPathSplitter",&,N,V_refPathSplitter
cellRef
T@"TSCERemoteDataCoordinator",R,N
cellRefsToCheck
T@"TSCERemoteDataSpecifierSet",R,N,V_allRequestedKeys
cellStyleHandle
T@"TSCERemoteDataSpecifierSet",R,N,V_newlyRequestedKeys
cellUIDAtIndex:
T@"TSCERemoteDataValueMap",R,N,V_cachedSpecifiers
childEnumerator
T@"TSCERewriteGroupNodeUIDInfo",&,N,V_groupNodeUIDInfo
clearAllFormats
T@"TSCERewriteTableUIDInfo",R
clearCellRanges
T@"TSCETableTransposedInfo",&,N,V_transposedInfo
clearPivotOwner
T@"TSCETablesByNameDistributor",R
collapseExpandChanged:forState:
T@"TSCETransaction",R
colorWithColor:
T@"TSCEUIDSet",R,N,V_collapsedGroupUids
columnHeaderUid
T@"TSCEUIDSet",R,N,V_previousGroupNodeUids
columnRowUIDMap
T@"TSCEUIDSet",R,N,V_uidsCollapsed
columnUIDsForBaseColumnIndexes:
T@"TSCEUIDSet",R,N,V_updatedGroupNodeUids
columns
T@"TSCEUndoTractList",&,N,V_uidTractList
conditionalStyleFormulaOwnerUID
T@"TSCEViewTractRef",&,N
containsObject:
T@"TSCEWrappedRangeRef",R,N
contentHeightForCellRange:skipDynamicSwap:maximumPartitionSize:
T@"TSDCommentStorage",C,N
context
T@"TSDCommentStorage",R,N,V_commentStorage
continuesEditingAfterNavigation
T@"TSDInfoGeometry",&,N,V_dynamicInfoGeometry
convertToBadRef
T@"TSDInfoGeometry",C,N
copyPropertyMap
T@"TSDLayoutGeometry",C,N,V_dynamicSavedLayoutGeometry
corruptCellRefs
T@"TSDStroke",&,N,V_stroke
countForObject:
T@"TSDStroke",&,N,VmHorizontalStroke
cppCellTractRef
T@"TSDStroke",R,N
criteriaParser:
T@"TSDStroke",R,N,V_leftStroke
currentCalendar
T@"TSKAccessController",W,N
currentTimeZone
T@"TSKChangeNotifier",R,N
dateAccumulator
T@"TSKChangeNotifier",W,N,V_changeNotifier
T@"TSKCustomFormatWrapper",R,N,V_customFormatForErrorGroup
defaultCellSpec
T@"TSKDurationFormat",&,N,V_durationFormat
defaultTimeZone
T@"TSKFormat",R,N
deriveBodyPivotGroupHorizontalStrokeFromTableStyle:propertyMap:
T@"TSKFormat",R,N,V_booleanFormat
deriveCategoryTextStyleForTableStyleArea:connectedToStylesheet:
T@"TSKFormat",R,N,V_currencyFormat
detokenizedText
T@"TSKFormat",R,N,V_customFormat
didCreateGroup:
T@"TSKFormat",R,N,V_durationFormat
didRemoveGroup:
T@"TSKFormat",R,N,V_numberFormat
dirtyCellRanges
T@"TSKSelection",&,N
documentDidLoad
T@"TSKShuffleMapping",&,N,V_shuffleMap
dropAggregator:
T@"TSKStructuredTextImportSettings",&,N,V_importSettings
dstUidForSrcUid
T@"TSPLazyReference",&,N,V_conditionalStyleSetTableReference
dynamicResizingColumnAdjustment
T@"TSPLazyReference",&,N,V_formatTableReference
edgeExpandUsingIndexes:forRows:
T@"TSPLazyReference",&,N,V_formulaTableReference
emptyWarningSet
T@"TSPLazyReference",&,N,V_preBNCFormatTableReference
endCheckboxCell
T@"TSPLazyReference",&,N,V_stringTableReference
enumerateCellStringsUsingBlock:
T@"TSPObject",R,N
enumerateGridColumnsUsingBlock:
T@"TSPObject<TSDOwningAttachment>",N
enumerateRowsInRange:withBlock:
T@"TSPObject<TSDOwningAttachment>",R,N
errorDictionary
T@"TSPTemporaryObjectContextDelegate",R,N,V_temporaryObjectContextDelegate
errorSumSquares
T@"TSSPropertyMap",&,N,V_propertyMapToReset
expressionSize:
T@"TSSStyle",&,N,V_style
extraInfoString
T@"TSSStylesheet",&,N,V_stylesheet
flushAllChanges
T@"TSTAggregator",R,W,N,V_aggregator
forRows
T@"TSTArchivedLayoutEngineBundle",&,N,V_archivedLayoutEngineBundle
foreachFormula:
T@"TSTCategoryAggregateFormulaOwner",R,N,V_aggregateFormulaOwner
formatForCalcEngineAtCellID:formatIsExplicitOut:refIfAvailable:
T@"TSTCategoryOwner",R,N
formula
T@"TSTCategoryOwner",W,N,V_categoryOwner
formulaOwnerUid
T@"TSTCell",&,N,V_cell
fullDescription
T@"TSTCell",R,N,V_cell
functionEndNode
T@"TSTCellBorder",&,N,V_cellBorder
gatherRowState:
T@"TSTCellDiffArray",&,N,V_cellDiffArray
getNext
T@"TSTCellFormulaSpec",R,N
groupBy
T@"TSTCellRangeCache",&,N,V_mergeRangeCache
groupLevelForGroupingColumnUid:
T@"TSTCellRegion",&,N,V_cachedCellRegion
groupValueTuple
T@"TSTCellRegion",&,N,V_cellRegionForClearedMergeStrokes
groupingFunctor
T@"TSTCellRegion",&,N,V_forcingRegion
hasContentBreakingMergeFragment
T@"TSTCellRegion",&,N,V_region
hasMenu
T@"TSTCellRegion",&,N,V_strokeRegion
hasPrecedentCountUpdatesPending
T@"TSTCellRegion",R,N,V_region
hasRead
T@"TSTCellSelection",&,N,V_dynamicSelection
hasViewTractRef
T@"TSTCellSpec",&,N,V_cellSpec
hiddenStatesUid
T@"TSTCellSpec",R,N
hotSpecifierSet
T@"TSTCellStyle",&,N,V_bodyCellStyle
i_populateIndexesForLeadingRows
T@"TSTCellStyle",&,N,V_categoryLevel1CellStyle
ignored
T@"TSTCellStyle",&,N,V_categoryLevel3CellStyle
indexFromCoord:
T@"TSTCellStyle",&,N,V_categoryLevel5CellStyle
indexes
T@"TSTCellStyle",&,N,V_footerRowCellStyle
indexesOfHiddenRowsInCellRange:
T@"TSTCellStyle",&,N,V_headerRowCellStyle
inflateFromStorageRef:dataStore:cache:suppressingTransmutation:
T@"TSTCellStyle",&,N,V_labelLevel2CellStyle
initWithCalcEngine:rewriteSpec:
T@"TSTCellStyle",&,N,V_labelLevel4CellStyle
initWithContext:completionText:
T@"TSTCellStyle",&,N,V_pivotBodySummaryColumnCellStyle
initWithContext:otherTableInfo:
T@"TSTCellStyle",&,N,V_pivotHeaderColumnSummaryCellStyle
initWithFormat:
T@"TSTCellStyle",R,C,N
initWithLayout:
T@"TSTCellStyleHandle",R,N,V_cellStyleHandle
initWithLayoutSpaceBundle:type:
T@"TSTCellUIDList",&,N,V_cellUIDs
initWithNumber:
T@"TSTCellUIDRegion",&,N,V_baseCellUIDRegion
initWithParser:
T@"TSTCellWillChangeDistributor",R,N
initWithString:
T@"TSTColumnAggregateList",R,N,V_aggregates
initWithTableInfo:andCellRange:
T@"TSTColumnRowUIDMap",&,V_uidMap
initWithTimeInterval:sinceDate:
T@"TSTColumnRowUIDMap",R,N,V_columnRowUIDMap
initWithValueVector:dimensions:
T@"TSTColumnRowUIDMap",R,W,N,V_summaryMap
initialTextSize
T@"TSTColumnRowUIDMapper",&,N,V_beforeColumnRowUIDMap
insertRangeRef:
T@"TSTConcurrentMutableCellUIDSet",R,N,V_cellsToInvalidateAfterRecalc
interactionType
T@"TSTConcurrentMutableIndexSet",&,N,V_spillStrokeColumns
internalOwnerID
T@"TSTConditionalStyleFormulaOwner",&,N,V_conditionalStyleFormulaOwner
invalidRangeRef
T@"TSTConditionalStyleSet",&,N,V_conditionalStyle
invalidateFrame
T@"TSTConfiguration",R,N
isArray
T@"TSTCoordinateArray",&,N,V_bodyRowCoordinates
isBaseRectangle
T@"TSTCoordinateArray",&,N,V_headerRowColumnCoordinates
isCategoryColumnUneditableCell:
T@"TSTExpressionNode",&,N,V_expressionNode
isCrossAppPaste
T@"TSTExpressionNode",R,N,V_expressionNode
isEqualToArray:
T@"TSTFormula",R,N
isKeyboardShown
T@"TSTFormulaPredArg",&,N,V_predArg1
isNotReadyError
T@"TSTFormulaPredArgData",R,N,V_data
isReadCancelled
T@"TSTFormulaPredicate",R,C,N
isStrokeEditing
T@"TSTFormulaRewrite_PivotInfo",&,N,V_pivotInfo
isViewRectangle
T@"TSTFormulaStore",R,N,V_formulaStore
T@"TSTFunctionNode",N,V_functionNode
layoutSpaceType
T@"TSTGroupBy",N,V_groupBy
linkToCalcEngine:forTableModel:
T@"TSTGroupBy",R,V_groupBy
localizedFunctionNameForLocale:
T@"TSTGroupBy",W,N,V_groupBy
T@"TSTGroupBySet",R,N,V_groupBySet
lowercaseString
T@"TSTGroupNode",&,N,V_groupNode
mCached
T@"TSTGroupNode",W,N,V_groupNode
mCellID
T@"TSTGroupingColumnList",&,N,V_bodyGroupingList
mExteriorStroke
T@"TSTGroupingColumnList",R,N,V_rowGroupings
mLayout
T@"TSTHiddenRowsColumnsCache",&,N,V_hiddenRowsColumnsCache
mRWLock
T@"TSTHiddenStateExtent",R,N,V_rowHiddenStateExtent
mVerticalStroke
T@"TSTHiddenStateIndexSet",&,N,V_rowsUserVisible
malloc:
T@"TSTHiddenStates",&,N,V_hiddenStates
markAllVolatileFunctionsAsDirty
T@"TSTHiddenStatesOwner",R,N,V_hiddenStatesOwner
markForRollback
T@"TSTHierarchicalCellDiffMap",&,N,V_afterRewriteMap
maxGroupByIndex
T@"TSTImportWarningSet",&,N,V_importWarningSet
maxSize
T@"TSTLayout",&,N,V_dynamicLayout
mergeCellRange:
T@"TSTLayout",R,N
mergeOriginsMap
T@"TSTLayout",W,N,V_layout
minCursorCellID
T@"TSTLayoutContentCachedKey",&,N,V_keyVal
miniDescription
T@"TSTLayoutEngine",&,N,V_layoutEngine
minimumCategoryLevelInRowRange:
T@"TSTLayoutEngine",R,N,V_layoutEngine
modelCellRanges
T@"TSTLayoutEngine",R,W,N,V_layoutEngine
multipleChoiceListFormatForKey:
T@"TSTLayoutHint",&,N,VmHint
mutableIndexesForUIDSet:isRows:
T@"TSTLayoutSpace",&,N,V_frozenHeaderColumnsSpace
mutableStrokeLayerWithContext:subtractingDefaultsFrom:forRange:
T@"TSTLayoutSpace",&,N,V_frozenHeaderRowsSpace
needsObjectUUID
T@"TSTLayoutSpace",&,N,V_repeatHeaderCornerSpace
networkFromStylesheet:presetID:
T@"TSTLayoutSpace",&,N,V_space
newSumNodeWithContext:children:
T@"TSTLayoutSpaceBundle",&,N,VmSpaceBundle
numCellsPerTask
T@"TSTMergeChangeDistributor",&,N,V_mergeChangeDistributor
numRelativeRows
T@"TSTMergeRangeSortedSet",&,N,V_mergeRangesForLayoutPass
numberOfColumns
T@"TSTMutableCellIteratorData",&,N,V_cellData
numberWithBool:
T@"TSTMutableCellIteratorData",R,N,V_cellData
openTransaction
T@"TSTMutableStrokeLayer",&,N,V_clearedMinorStrokeLayer
p_bodyGridRange
T@"TSTMutableStrokeLayer",&,N,V_dynamicStrokeLayer
p_cells
T@"TSTMutableStrokeLayer",&,N,V_spillMajorStrokeLayer
p_getNextCellID
T@"TSTMutableStrokeLayer",&,N,V_spillStrokeLayer
p_hiddenIndexes
T@"TSTPencilAnnotationOwner",R,N
p_mightBeEqual:
T@"TSTPivotGroupingColumnOptionsMap",R,N
p_mostRecentlySetTextFormatType
T@"TSTPivotOwner",R,N,V_pivotOwner
p_removeApplicationNotification
T@"TSTPopUpMenuModel",&,N,V_popupModel
p_setFilterSet:
T@"TSTReferenceColorHelper",&,N,V_referenceColorHelper
p_setLeftStroke:order:atCellID:
T@"TSTSelectionDragController",W,N
p_setupTableModelforStockSwatch
T@"TSTSortRuleReferenceTracker",R,N
p_upgradeMerges
T@"TSTStockDetails",R,N
padding
T@"TSTStrokeDefaultVendor",&,N,V_strokesDefaultVendor
payload
T@"TSTStrokeLayer",&,N,V_customStrokeLayer
pivotColumnUIDs
T@"TSTStrokeLayer",&,N,V_defaultMajorStrokeLayer
popRewriteSpec:
T@"TSTStrokeLayer",&,N,V_defaultStrokeLayer
prepareForPasteWithCalculationEngine:sourceOffset:bakeFormulas:
T@"TSTStrokeLayer",&,N,V_minorStrokeLayer
presets
T@"TSTStrokeLayerMergedStack",&,N,V_mergedStrokes
prohibitsModificationToChildren
T@"TSTStrokeOrderedLayer",&,N,V_dynamicOrderedStrokeLayer
prunedColumnUIDsFromColumnUIDs:
T@"TSTStrokeSidecar",&,N,V_strokeSidecar
quoteComponents
T@"TSTStrokeSidecar",R,N,V_strokeSidecar
raiseAttachmentErrorInTextCell:
T@"TSTStrokeWidthCache",&,N,V_rowToStrokeHeightCache
raiseInvalidHistoricalDateError
T@"TSTStructuredTextImportRecord",&,N,V_textImportRecord
raiseNoSuitableArgumentsFoundErrorForFunctionName:requiredType:
T@"TSTSummaryCellVendor",R,W,N,V_summaryCellVendor
raiseValueErrorForFunctionName:
T@"TSTTableControlCellSelection",&,N,V_controlCellSelection
recreateFormula
T@"TSTTableDataListCache",R,N,V_baseDataListCache
refCountForKey:
T@"TSTTableDataListItemCache",&,N,V_cellStyleHandles
refPathSplitter
T@"TSTTableDataListItemCache",&,N,V_textStyleHandles
referencesMatchingInputAsPrefix
T@"TSTTableDataStore",&,N,V_dataStore
regionFillingColumnsFromRegion:
T@"TSTTableDataStore",R,W,N,V_baseDataStore
regionOffsetBy:
T@"TSTTableFilterSet",&,N,V_prePivotRowFilterSet
registerWithCalcEngine:inOwner:
T@"TSTTableFilterSet",C,N,V_filterSet
relativeColumns
T@"TSTTableHeaderStorage",&,N,V_columnHeaderStorage
release
T@"TSTTableInfo",&,N,V_tableInfo
removeAllFormulasCleanObserver:
T@"TSTTableInfo",R,N
removeCalculationStateObserver:
T@"TSTTableInfo",R,N,V_tableInfo
removeObserver:
T@"TSTTableInfo",R,W,V_tableInfo
removeRowRange:
T@"TSTTableInfo",W,N,V_table
renderedImageSizeForObjectSize:
T@"TSTTableModel",&,N,V_tableModel
replies
T@"TSTTableModel",N,V_tableModel
requiresStagesBuildingInReverse
T@"TSTTableModel",R,N,V_pivotDataModel
resetMergeCache
T@"TSTTableModel",R,N,V_tableModel
resetPivotOrder
T@"TSTTableModel",W,N,V_tableModel
resumeEvaluationIfNotTerminated
T@"TSTTablePartitioner",&,N,V_partitioner
rewritingMinion
T@"TSTTableReferences",R,N,V_references
richTextOrErrorTextStorageValue
T@"TSTTableSortOrder",C,N,V_sortOrder
richTextStorage
T@"TSTTableStyle",&,N,V_tableStyle
rowIndexForUid:
T@"TSTTableStylePreset",&,N
rowOrColumnUids
T@"TSTTableTile",&,N,V_curTile
rowUIDs
T@"TSTTableTileRowInfo",&,N,V_curRow
rowUidsAsVector
T@"TSTTableTranslator",&,N,V_translator
ruleIndexInFilter:matchingCell:
T@"TSTTableTranslator",R,N,V_identityTranslator
selectionWithTableInfo:cellUID:
T@"TSTTextStyleHandle",&,N,V_textStyleHandle
setAbortObject:
T@"TSTTextStyleToFontHeightCache",&,N,V_paraStyleToHeightCache
setAnnotations:
T@"TSTUIDRectRef",R,N,V_uidRectRef
setBaseCellRef:
T@"TSTWPColumnCache",&,N,V_tempWPColumnCache
setByRemovingSpecifiersFromSet:
T@"TSTWidthHeightCache",&,N,V_widthHeightCache
setCachedFrame:
T@"TSUColor",&,N,V_dynamicFontColor
setCachedIndexesForLeadingRows:
T@"TSUCustomFormat",R,D,N
setCachedNumberOfHeaderColumns:
T@"TSUIntegerKeyDictionary",&,N,V_cellStyleHandles
setCanBeNested:
T@"TSUIntegerKeyDictionary",&,N,V_rowStrokeExportCache
setCellStyle:forTableStyleArea:
T@"TSUIntegerKeyDictionary",&,N,V_textStyleHandles
setCellUIDList:
T@"TSULocale",&,V_locale
setChooseIndex:
T@"TSULocale",R,N
setConditionalStyle:clearingID:
T@"TSULocale",R,N,VmLocale
setCoordMapper:
T@"TSUNetworkReachability",&,N,V_serverReachability
setCurrencyOrNumberDoubleValue:
T@"TSUPointerKeyDictionary",&,N,V_hintMatricesByCanvas
setDay:
T@"TSUPointerKeyDictionary",R,N,V_storeMap
setDynamicCellBorder:forCellID:
T@"TSUSparseArray",&,N,V_annotations
setFilterSet:forPivotDataTable:
T@"TSUSparseArray",R,N,V_attributes
setFirstCellID:
T@"TSUWidthLimitedQueue",&,N,V_layoutValidateQueue
setFormulaSpec:
T@"TSWPColumnStyle",R,N,V_defaultColumnStyle
setHideChromeContextMenuButton:
T@"TSWPPadding",&,N,V_cachedPadding
setHighlighted:
T@"TSWPPadding",R,N,V_padding
setImportWarningSet:clearingID:
T@"TSWPParagraphStyle",&,N,V_bodyTextStyle
setIntersectingColumnsIndexSet:
T@"TSWPParagraphStyle",&,N,V_categoryLevel1TextStyle
setIsDynamicallyHidingRowsCols:
T@"TSWPParagraphStyle",&,N,V_categoryLevel3TextStyle
setKey:
T@"TSWPParagraphStyle",&,N,V_categoryLevel5TextStyle
setMaxConcurrentOperationCount:
T@"TSWPParagraphStyle",&,N,V_headerColumnTextStyle
setMergeSource:
T@"TSWPParagraphStyle",&,N,V_labelLevel1TextStyle
setModelCellID:
T@"TSWPParagraphStyle",&,N,V_labelLevel3TextStyle
setNewCanvasRevealedVertically:
T@"TSWPParagraphStyle",&,N,V_labelLevel5TextStyle
setPartitioner:
T@"TSWPParagraphStyle",&,N,V_textStyle
setPivotRowColumnRuleChangeUID:
T@"TSWPParagraphStyle",R,C,N
setProblemMode:
T@"TSWPParagraphStyle",R,N,V_paragraphStyle
setRecursivelyDrawingInContext:
T@"TSWPShapeStyle",&,N
setReturnWhileEditingNavigates:
T@"TSWPStorage",&,N
setRowsVisible:
T@"TSWPStorage",&,N,V_storage
setShallowCopy:
T@"TSWPStorage",R,N
setSpaceBundle:
T@"TSWPTextMeasurerBundle",&,N,V_textMeasurerBundle
setStroke:forBottomOfRow:order:
T@,&,N,V_cellContents
setStrongLazyReference:message:
T@,&,N,V_third
setSupportsPlaceholderGeometry:
TB,D,N
setSyntaxError:
TB,N,GisActive,V_active
setTableNameEnabledInNewTables:
TB,N,GisEmpty,V_empty
setTableOffset:
TB,N,GisInDynamicLayoutMode,V_inDynamicLayoutMode
setTextStyle:forTableStyleArea:
TB,N,GisRecursivelyDrawingInContext,V_recursivelyDrawingInContext
setTextureType:
TB,N,GisSyntaxError,V_syntaxError
setTilesPerRow:
TB,N,GisUIDBased,V_uidBased
setWhitespaceAfterFunctionName:
TB,N,V_allowHorizontalAutoresize
shallowAddCell:
TB,N,V_allowTableName
shiftIndexesStartingAtIndex:by:
TB,N,V_allowsBlackDragDropBackground
shortStringForQuarterOfYearType
TB,N,V_applyingToTable
shrinkTextToFit
TB,N,V_arrowKeysNavigateWhenEditingBeganByTyping
sourceCellRange
TB,N,V_aspectOperationIsInProgress
spansAllColumns
TB,N,V_bandedFillIsValid
splitIntoChunksForExcessiveSize
TB,N,V_cachedAllAnnotations
stackReferences
TB,N,V_cachedIndexSetsAreValid
storageExceedsMaxFormulaLength:
TB,N,V_cachedPivotIndexSetsAreValid
stringForYearWeekTypeForLocale:
TB,N,V_canBeNested
strings
TB,N,V_cellEditorsCanScrollToNonLocalTableSelection
styleIdentifier
TB,N,V_cellWraps
superWillModify
TB,N,V_columnOrderReversed
supportsDropCapsInChildStorages
TB,N,V_containsSuppressCustomFormatHandlingProperty
supportsTableColumnAutocomplete
TB,N,V_controlCellUIAlwaysVisible
TB,N,V_dirtyingInProgress
tableDefaultFontHeightsAreValid
TB,N,V_documentIsClosing
tableModelClass
TB,N,V_downgradedForPrePivot
tableNameHeight
TB,N,V_drawBlackAndWhite
tableStyleAreaForBaseCellCoord:
TB,N,V_dynamicBandedFill
tableUIDHistory
TB,N,V_dynamicRepResizeSessionInProgress
takeReferences:
TB,N,V_dynamicRepressFrozenHeaderRows
targetCellRange
TB,N,V_dynamicResizingRows
textScaleFactor
TB,N,V_expandDirtyRegionForReferences
textureDeliveryStylesLocalized:
TB,N,V_exportsCellAnnotations
timeout
TB,N,V_filterColons
tokenAttachment
TB,N,V_followsLinksOnFirstTap
topLeft
TB,N,V_forDrawing
transformInRoot
TB,N,V_forceEscaping
tsu_indexSetByExcludingIndexes:
TB,N,V_forceSplitting
uidsForIndexes:
TB,N,V_forceZoomInOnBeginEditing
unpackAfterUnarchiveForGroupBy:
TB,N,V_foundANumber
updateCellRange
TB,N,V_hasContent
updatePrecedentCountForCellRef:
TB,N,V_hasCustomFormatsToPaste
TB,N,V_hasLargerFonts
userDescription
TB,N,V_hasReference
valueAt1DIndex:
TB,N,V_headerColumnsRepeat
verticalAlignmentForTextLayout:
TB,N,V_headerRowsRepeat
viewCellRegionWithRangeContext:
TB,N,V_hideChromeContextMenuButton
viewMap
TB,N,V_horizontal
visible
TB,N,V_inDynamicLayout
visibleIndexSet
TB,N,V_includesPrefixes
wasUnarchivedFromAProvidedTable
TB,N,V_invalidateAllChrome
whitespaceAfter
TB,N,V_invalidateColumnChrome
widthHeightCacheFromBundle:withNumberOfRows:andNumberOfColumns:
TB,N,V_invalidateRowChrome
wrappedRangeRef
TB,N,V_invalidateTableName
zoomToEditOperationIsInProgress
TB,N,V_isAPivotDataModel
TB,N,V_isBlank
TB,N,V_isBlankForKeyboardInsertion
TB,N,V_isCircularReference
TB,N,V_isCopyContainingCategoryColumn
TB,N,V_isDynamicallyChangingContent
TB,N,V_isDynamicallyChangingRowOrColumnCount
TB,N,V_isDynamicallyHidingRowsCols
TB,N,V_isDynamicallyRemovingText
TB,N,V_isEnabled
TB,N,V_isFormula
TB,N,V_isGrouped
TB,N,V_isInCycle
TB,N,V_isInverse
TB,N,V_isLabelRow
TB,N,V_isNewForBraveNewCell
TB,N,V_isRangeRef
TB,N,V_isRegisteredWithCalcEngine
TB,N,V_isSummaryRow
TB,N,V_isValid
TB,N,V_lastSavedInBNC
TB,N,V_layoutDirectionIsLeftToRight
TB,N,V_layoutInvalidate
TB,N,V_layoutInvalidateSize
TB,N,V_layoutInvalidateTableNameVisibility
TB,N,V_layoutIsLTR
TB,N,V_layoutResetScaleToFit
TB,N,V_layoutSpacesInvalidateCoordinates
TB,N,V_layoutSpacesInvalidateTableOffsets
TB,N,V_layoutUpdateChildren
TB,N,V_lazyReferencesAreLoaded
TB,N,V_mayModifyValuesReferencedByFormulas
TB,N,V_mergeCacheLoaded
TB,N,V_mightOverlap
TB,N,V_migratingStylesOnly
TB,N,V_missingPostBNCDatalists
TB,N,V_modelIteratorHasCell
TB,N,V_namesUsed
TB,N,V_needWPColumn
TB,N,V_needsFormulaReset
TB,N,V_needsFormulaRewriteForImport
TB,N,V_needsRebuildOfAggFormulas
TB,N,V_needsToBeArchived
TB,N,V_needsToUpdateFilterSetForImport
TB,N,V_needsUidRectUpgrade
TB,N,V_parseAsBaseTableReference
TB,N,V_pasteFilterHidingAsUserHiding
TB,N,V_pasteWasUpdate
TB,N,V_pastesTile
TB,N,V_presetNeedsStrongOwnership
TB,N,V_processHiddenRowsForExport
TB,N,V_processedByLayoutEngine
TB,N,V_queriedModel
TB,N,V_quoteComponents
TB,N,V_referenceIsComplete
TB,N,V_registeredWithCoordinator
TB,N,V_reoriginToZero
TB,N,V_repeatingHeaderColumnsEnabled
TB,N,V_repeatingHeaderRowsEnabled
TB,N,V_repositionStockPopover
TB,N,V_returnEmptyCells
TB,N,V_returnMergeRanges
TB,N,V_returnOneEmptyCell
TB,N,V_returnOnlyFormulas
TB,N,V_returnWhileEditingNavigates
TB,N,V_saveAsEmbiggenedFormat
TB,N,V_selectionDragAbortedOnNewSelection
TB,N,V_selectionUsesBezierPath
TB,N,V_selectsCellOnInitialTap
TB,N,V_setNeedsDisplay
TB,N,V_shallowCopy
TB,N,V_shouldCleanGraphForConsistencyViolation
TB,N,V_shouldFastPathMeasureFitWidth
TB,N,V_shouldPerformDetectAndRepairConsistencyViolations
TB,N,V_shouldRepositionStockPopover
TB,N,V_shouldSkipNextAsyncSort
TB,N,V_shouldUseWideRows
TB,N,V_shouldZoomOutOnEndEditing
TB,N,V_showCleanCells
TB,N,V_showGeometricAsBase
TB,N,V_showReferenceHighlightsOnFormulaCellSelection
TB,N,V_showsCellEditingToolbar
TB,N,V_showsCellOverflowIndicator
TB,N,V_showsCellWarningIndicator
TB,N,V_showsChromeWhileEditingCell
TB,N,V_showsHideUnhideUI
TB,N,V_showsSelectionKnobsWhileEditingCell
TB,N,V_spanningColumns
TB,N,V_spanningRows
TB,N,V_styleApplyClearsAll
TB,N,V_supportsActionMenu
TB,N,V_supportsAddBodyRowAtBottomSiriKitIntent
TB,N,V_supportsAutoResizedTables
TB,N,V_supportsAutofill
TB,N,V_supportsAutomaticNumberKeyboard
TB,N,V_supportsBidiTablesUI
TB,N,V_supportsCanvasReferenceEditing
TB,N,V_supportsCategorization
TB,N,V_supportsCellCommentsActivityLines
TB,N,V_supportsComplexReorganizeUI
TB,N,V_supportsContainedTextEditing
TB,N,V_supportsControlCells
TB,N,V_supportsCopySnapshot
TB,N,V_supportsCreateChartFromSelection
TB,N,V_supportsDynamicallyHidingRowColumnForDragDrop
TB,N,V_supportsFormulaEditing
TB,N,V_supportsFrozenHeaders
TB,N,V_supportsHiddenCells
TB,N,V_supportsImplicitEditing
TB,N,V_supportsInlineAttachments
TB,N,V_supportsMergedCells
TB,N,V_supportsPivotTables
TB,N,V_supportsPlaceholderGeometry
TB,N,V_supportsQuickFilterUI
TB,N,V_supportsRepeatHeaderRowsOnEachPage
TB,N,V_supportsRowColumnAdderKnob
TB,N,V_supportsRowMovesInPaginatedTables
TB,N,V_supportsStockUI
TB,N,V_supportsTableColumnAutocomplete
TB,N,V_supportsTableTranspose
TB,N,V_supportsiOSContextMenuItemForEvenlyDistributedColumns
TB,N,V_supportsiOSContextMenuItemForEvenlyDistributedRows
TB,N,V_supportsiOSContextMenuItemForWrappedText
TB,N,V_suppressIdenticalEndReference
TB,N,V_suspendNotify
TB,N,V_syncReferenceHighlightState
TB,N,V_tabAtEdgeAddsColumn
TB,N,V_tabAtEdgeAddsRow
TB,N,V_tableDefaultFontHeightsAreValid
TB,N,V_tableHasStrongOwnership
TB,N,V_tableIsLTR
TB,N,V_tableNameBorderEnabled
TB,N,V_tableNameEnabled
TB,N,V_tableNameEnabledInNewTables
TB,N,V_tableNameHeightValid
TB,N,V_terminateRegionIterator
TB,N,V_terminated
TB,N,V_tokenizeFormulaStringLiterals
TB,N,V_trimNames
TB,N,V_updateEditorRemainders
TB,N,V_upgrading
TB,N,V_upgradingToSubOwnerUIDs
TB,N,V_useBandedFill
TB,N,V_useSymbolicNames
TB,N,V_useWholeTableForInsertionDependencies
TB,N,V_usedSymbolicName
TB,N,V_usesLimitedAutomaticFormatParsing
TB,N,V_usesLimitedNumberFormatInspector
TB,N,V_usesOnlyFixedCoords
TB,N,V_usesSelectionChromeResizer
TB,N,V_value
TB,N,V_wasConstructedViaNames
TB,N,V_wasCut
TB,N,V_wasQuoted
TB,N,V_wasUnarchivedFromAProvidedTable
TB,N,V_zoomOperationIsInProgress
TB,N,V_zoomToEditOperationIsInProgress
TB,N,VdontClearBackground
TB,N,VmNewCanvasRevealedHorizontally
TB,N,VmNewCanvasRevealedVertically
TB,N,VmProcessChangesFiltering
TB,R
TB,R,D,N
TB,R,D,N,GisAnchoredToText
TB,R,D,N,GisFloatingAboveText
TB,R,D,N,GisInlineWithText
TB,R,N
TB,R,N,GisAnchoredToText
TB,R,N,GisAttachedToBodyText
TB,R,N,GisCategorized
TB,R,N,GisFloatingAboveText
TB,R,N,GisInlineWithText
TB,R,N,GisInlineWithTextWithWrap
TB,R,N,GisInvalidFunction
TB,R,N,GisKeyboardShown,V_keyboardShown
TB,R,N,GisNewlyImported
TB,R,N,GisReimportable
TB,R,N,GisUIDBased,V_uidBased
TB,R,N,GisWholeTableImport
TB,R,N,V_affectsCellBorders
TB,R,N,V_beginImplicitEditing
TB,R,N,V_cellWraps
TB,R,N,V_debugOnly_DidCleanGraphForConsistencyViolation
TB,R,N,V_debugOnly_DidDetectAndRepairConsistencyViolations
TB,R,N,V_definedBottomStroke
TB,R,N,V_definedLeftStroke
TB,R,N,V_definedRightStroke
TB,R,N,V_definedTopStroke
TB,R,N,V_didModifyWasCalled
TB,R,N,V_dragByHandleOnly
TB,R,N,V_forRows
TB,R,N,V_formulaFixupsShouldStick
TB,R,N,V_formulaWasFixable
TB,R,N,V_hasAnyRichTextCells
TB,R,N,V_hasRelativeCellRef
TB,R,N,V_isAPivotTable
TB,R,N,V_isArray
TB,R,N,V_isCategoryRef
TB,R,N,V_isDefaultsOnly
TB,R,N,V_isEmptyPivot
TB,R,N,V_isIdentityMapping
TB,R,N,V_isOperator
TB,R,N,V_isRegisteredWithCalcEngine
TB,R,N,V_isVariation
TB,R,N,V_isZoomToEditOperationInProgress
TB,R,N,V_loadedIndexesAfterUnarchive
TB,R,N,V_madeChange
TB,R,N,V_nonDefaultFontName
TB,R,N,V_nonDefaultFontSize
TB,R,N,V_overridesPadding
TB,R,N,V_returnCellContents
TB,R,N,V_selectionUsesBezierPath
TB,R,N,V_selectsCellOnInitialTap
TB,R,N,V_shouldWrap
TB,R,N,V_startWithFirstItem
TB,R,N,V_suppressAutomaticNamedReferenceInvalidation
TB,R,N,V_upgradeRepairedTiles
TB,R,N,V_useReverseMap
TB,R,N,V_usesSelectionChromeResizer
TB,R,N,V_valid
TB,R,N,V_willModifyWasCalled
TB,R,N,VmContainedTextEditorSpills
TB,R,N,VmContainedTextEditorTextWraps
TB,R,N,VmLayoutDirectionIsLeftToRight
TB,R,N,VmShouldHyphenate
TB,R,V_isAborted
TB,R,VmFinal
TB,V_doFullRefresh
TB,V_earlyRefreshRequested
TB,V_isColumnOrderTemporary
TB,V_isRowOrderTemporary
TB,V_offline
TB,V_tableRepIsBeingRemovedFromBackgroundLayout
TB,VmDrawsBlackAndWhite
TB,VmExpandBackgroundFill
TB,VmShowsOverlayLayers
TB,VmShowsTableChrome
TC,N
TC,N,V_aggType
TC,N,V_aggregateType
TC,N,V_basePreserveFlags
TC,N,V_changeType
TC,N,V_columnGroupLevel
TC,N,V_conditionalStyleAppliedRule
TC,N,V_groupLevel
TC,N,V_options
TC,N,V_previousLevel
TC,N,V_purpose
TC,N,V_rangeContext
TC,N,V_rowGroupLevel
TC,N,V_showAsType
TC,N,V_storageVersionPreBNC
TC,N,V_updatedLevel
TC,N,V_valueType
TC,R
TC,R,N
TC,R,N,V_categoryAggregateType
TC,R,N,V_cellFormatKind
TC,R,N,V_dataType
TC,R,N,V_groupLevel
TC,R,N,V_hidingAction
TC,R,N,V_predicateType
TC,R,N,V_qualifier1
TC,R,N,V_qualifier2
TC,R,N,V_showAsType
TC,R,N,V_type
TC,R,N,V_valueType
TI,D,N
TI,N
TI,N,V_baseFormatID
TI,N,V_baseRowIndex
TI,N,V_booleanFormatID
TI,N,V_cachedNumberOfColumns
TI,N,V_cachedNumberOfFooterOrGrandTotalRows
TI,N,V_cachedNumberOfGrandTotalColumns
TI,N,V_cachedNumberOfHeaderColumns
TI,N,V_cachedNumberOfRows
TI,N,V_cellCount
TI,N,V_cellStyleID
TI,N,V_columnOrRowIndex
TI,N,V_commentStorageID
TI,N,V_conditionalStyleID
TI,N,V_controlCellSpecID
TI,N,V_controlFormatID
TI,N,V_curRowIndex
TI,N,V_currencyFormatID
TI,N,V_currentFormatID
TI,N,V_customFormatID
TI,N,V_dateFormatID
TI,N,V_durationFormatID
TI,N,V_finalTopRowIndex
TI,N,V_formulaID
TI,N,V_importWarningSetID
TI,N,V_interactionTypeFromTheFuture
TI,N,V_invalidRowIndex
TI,N,V_key
TI,N,V_layoutSpacesInvalidateCoordinatesAfterRow
TI,N,V_maxConcurrentTasks
TI,N,V_maxNumberOfColumns
TI,N,V_maxNumberOfPopulatedCells
TI,N,V_maxNumberOfRows
TI,N,V_multipleChoiceListFormatID
TI,N,V_nextID
TI,N,V_numCellsPerTask
TI,N,V_numberFormatID
TI,N,V_numberOfColumns
TI,N,V_numberOfFooterRows
TI,N,V_numberOfLayoutColumns
TI,N,V_numberOfRows
TI,N,V_partitionPosition
TI,N,V_rowForColumnIndexesWithMerges
TI,N,V_symbol
TI,N,V_textFormatID
TI,N,V_textStyleID
TI,N,V_tileRowIndex
TI,N,VmVisibleMask
TI,R,N
TI,R,N,V_boolCount
TI,R,N,V_boolTrueCount
TI,R,N,V_dateCount
TI,R,N,V_durationCount
TI,R,N,V_errorCount
TI,R,N,V_legacyDisplayFormatType
TI,R,N,V_mask
TI,R,N,V_noContentCount
TI,R,N,V_numberCount
TI,R,N,V_numberOfColumns
TI,R,N,V_numberOfResizableColumns
TI,R,N,V_numberOfResizableRows
TI,R,N,V_numberOfRows
TI,R,N,V_refCount
TI,R,N,V_rewriteType
TI,R,N,V_startRowIndex
TI,R,N,V_stringCount
TI,V_offset
TQ,N
TQ,N,V_afterCountValue
TQ,N,V_beforeCountValue
TQ,N,V_cachedAutoSizeFlags
TQ,N,V_cachedBaseRegionVersionCounter
TQ,N,V_cachedCellRegionVersionCounter
TQ,N,V_cachedMaxNumberOfRows
TQ,N,V_cellCount
TQ,N,V_cellsPerSubRegion
TQ,N,V_columnIndex
TQ,N,V_columnRemainDup
TQ,N,V_count
TQ,N,V_dirtyPrecedentCount
TQ,N,V_emptyCellCount
TQ,N,V_firstIndex
TQ,N,V_flags
TQ,N,V_index
TQ,N,V_lastColumnDiffPos
TQ,N,V_lastIndex
TQ,N,V_lastRowDiffPos
TQ,N,V_numDirtyCells
TQ,N,V_pageCount
TQ,N,V_pageNumber
TQ,N,V_pasteType
TQ,N,V_presetIDForUpgrade
TQ,N,V_rowMarkIndex
TQ,N,V_rowRemainDup
TQ,N,V_searchFlags
TQ,N,V_searchMask
TQ,N,V_sourceColumnCount
TQ,N,V_sourceRowCount
TQ,N,V_startingTileID
TQ,N,V_structuredTextImportSizeLimit
TQ,N,V_styleCount
TQ,N,V_tempUpgradePresetID
TQ,N,VmActiveTokenCharIndex
TQ,R
TQ,R,N
TQ,R,N,V_archivingCompatibilityVersion
TQ,R,N,V_argumentIndex
TQ,R,N,V_byteSizeForArchiving
TQ,R,N,V_cellCount
TQ,R,N,V_compressedSize
TQ,R,N,V_estimatedByteSize
TQ,R,N,V_filterIndex
TQ,R,N,V_hashVal
TQ,R,N,V_parenNestingLevel
TQ,R,N,V_versionCounter
TQ,R,VmStage
TQ,R,VmStageCount
TS,N,V_aggrIndexLevel
TS,N,V_aggregateIndex
TS,N,V_aggregateIndexLevel
TS,N,V_cellFlags
TS,N,V_explicitFormatFlags
TS,N,V_functionIndex
TS,N,V_internalOwnerID
TS,N,V_invalidColumnIndex
TS,N,V_localOwnerID
TS,N,V_operatorChar
TS,N,V_ownerIndex
TS,N,V_ownerKind
TS,R,N
TS,R,N,V_categoryColumnIndex
TS,R,N,V_formulaOwnerId
TS,R,N,V_functionIndex
TS,R,N,V_ownerIndex
TS,R,N,V_startColumnIndex
TS,R,N,V_toInternalOwnerID
TS,R,V_functionIndex
TSTImportFormulaWarningTypeFromArchive:
TSTImportFormulaWarningTypeToArchive
T^v,N
T^v,N,V_cppCalcEngine
T^v,N,V_evaluationContext
T^v,R,N,V_cellDependencies
T^v,R,N,V_cellUIDMap
T^v,R,N,V_dependTracker
T^v,R,N,V_errors
T^v,R,N,V_labelRowHeightList
T^v,R,N,V_labelRowVisibilityList
T^v,R,N,V_pivotDateGroupingTypesByColumn
T^v,R,N,V_pivotValueTypesByColumn
T^v,R,N,V_previousGroupNodeToUpdated
T^v,R,N,V_rangeDependencies
T^v,R,N,V_spanningColumnDependencies
T^v,R,N,V_spanningRowDependencies
T^v,R,N,V_summaryRowHeightList
T^v,R,N,V_updatedGroupNodeToPrevious
T^v,R,N,V_volatileDependencies
T^v,R,N,V_wholeOwnerDependencies
T^v,R,V_columnUids
T^{CGImage=},N,V_cachedImage
T^{TSCENumberValue=^^?{TSUDecimal={?=[2Q]}}{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}SB},R,N,V_numberAccumulator
T^{TSCETableResolver=^^?},N,V_contextTableResolver
T^{TSCETableResolver=^^?},R,N
Tc,N,V_valueType
Td,N
Td,N,V_cachedImageScreenScale
Td,N,V_cachedTableNameHeight
Td,N,V_categoryColumnWidth
Td,N,V_confidence
Td,N,V_currentScreenScale
Td,N,V_defaultColumnWidth
Td,N,V_defaultRowHeight
Td,N,V_doubleValue
Td,N,V_durationInterval
Td,N,V_dynamicAddOrRemoveColumnElementSize
Td,N,V_dynamicAddOrRemoveRowElementSize
Td,N,V_dynamicColumnTabSize
Td,N,V_dynamicHeightResize
Td,N,V_dynamicResizingColumnAdjustment
Td,N,V_dynamicResizingRowAdjustment
Td,N,V_dynamicRowTabSize
Td,N,V_dynamicTableNameResize
Td,N,V_dynamicWidthResize
Td,N,V_firstPartitionWidth
Td,N,V_inset
Td,N,V_maxWidthForChildren
Td,N,V_pivotDataRefreshTimestamp
Td,N,V_remoteDataSyncKey
Td,N,V_secondsToAdd
Td,N,V_structuredTextImportConfidenceThreshold
Td,N,V_structuredTextImportConfidenceThresholdForCanvas
Td,N,V_tableNameHeight
Td,N,V_viewScale
Td,N,VmMaxWidthForChildren
Td,R,N
Td,R,N,V_capturedColumnWidthTotal
Td,R,N,V_dynamicFooterHeight
Td,R,N,V_fontSize
Td,R,N,V_heightFactor
Td,R,N,V_increment
Td,R,N,V_maximum
Td,R,N,V_minimum
Td,R,N,V_size
Td,R,N,V_timeout
Td,R,N,V_width
Td,R,N,V_widthFactor
Td,R,N,VmTargetHeight
Td,R,N,VmTargetWidth
Td,R,V_timeoutInterval
Ti,N
Ti,N,V_badgeType
Ti,N,V_cachedVerticalAlignment
Ti,N,V_changeDescriptor
Ti,N,V_direction
Ti,N,V_dynamicColumnAdjustment
Ti,N,V_dynamicRowAdjustment
Ti,N,V_layoutCacheFlags
Ti,N,V_notifyType
Ti,N,V_order
Ti,N,V_rank
Ti,N,V_tableEnvironment
Ti,N,V_tableRowsBehavior
Ti,N,V_type
Ti,N,V_verticalAlignment
Ti,R,D,N
Ti,R,N
Ti,R,N,V_bottomStrokeOrder
Ti,R,N,V_direction
Ti,R,N,V_layoutSpaceType
Ti,R,N,V_leftStrokeOrder
Ti,R,N,V_level
Ti,R,N,V_listType
Ti,R,N,V_renderAsTokenType
Ti,R,N,V_rightStrokeOrder
Ti,R,N,V_shipVersion
Ti,R,N,V_tableRowsBehavior
Ti,R,N,V_topStrokeOrder
Ti,R,N,V_type
Ti,R,N,V_verticalAlignment
Ti,R,N,V_writingDirection
Tq,N
Tq,N,V_attribute
Tq,N,V_dynamicHidingRowsColsDirection
Tq,N,V_dynamicRevealingRowsColsDirection
Tq,N,V_errorType
Tq,N,V_formulaCoordSpace
Tq,R,N
Tq,R,N,V_activeFlatteningDimension
Tq,R,N,V_attribute
Tq,R,N,V_day
Tq,R,N,V_dimension
Tq,R,N,V_flags
Tq,R,N,V_flatteningDimension
Tq,R,N,V_groupingType
Tq,R,N,V_month
Tq,R,N,V_naturalAlignment
Tq,R,N,V_selectionType
Tq,R,N,V_year
Tq,V_requestsInFlight
Tq,V_state
Tr^v,N,V_mergeFormulaIndexes
Tr^v,N,V_mergeFormulas
Tr^v,N,V_uidRanges
Tr^v,R
Tr^v,R,N,V_cellRanges
Tr^v,R,N,V_dstUidForSrcUid
Tr^v,R,N,V_mergeOriginsMap
Tr^v,R,N,V_mergedRects
Tr^v,R,N,V_reverseOriginsMap
Tr^v,R,N,V_rowOrColumnUuids
Tr^v,R,N,V_srcUidForDstUid
Tr^v,R,V_orderedUuids
Tr^v,R,V_uids
Tr^v,R,V_viewOrderUids
Tr^{TSCEFunctor=@C},R,N,V_groupingFunctor
Tr^{TSKUIDStruct=QQ},N,V_ownerUID
Tr^{TSKUIDStruct=QQ},N,V_tableUID
Tr^{TSKUIDStruct=QQ},R,N
Tr^{TSKUIDStruct=QQ},R,N,V_conditionalStyleOwnerUID
Tr^{TSKUIDStruct=QQ},R,N,V_groupByUID
Tr^{TSKUIDStruct=QQ},R,N,V_hostColumnUID
Tr^{TSKUIDStruct=QQ},R,N,V_hostRowUID
Tr^{TSKUIDStruct=QQ},R,N,V_hostTableUID
Tr^{TSKUIDStruct=QQ},R,N,V_tableUID
Tr^{TSUCellCoord=ISBB},N,V_mergeSource
Ts,N,V_mode
Ts,N,V_relativeColumn
Ts,R,N
Ts,R,N,V_maxArguments
Ts,R,N,V_minArguments
Ts,R,N,V_repeatingGroupSize
T{CGAffineTransform=dddddd},N,V_transform
T{CGAffineTransform=dddddd},N,V_transformFromCanvas
T{CGAffineTransform=dddddd},N,V_transformFromDevice
T{CGAffineTransform=dddddd},N,V_transformToCanvas
T{CGAffineTransform=dddddd},N,V_transformToDevice
T{CGPoint=dd},N,V_tableOffset
T{CGRect={CGPoint=dd}{CGSize=dd}},N
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_cachedAlignedFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_cachedAlignedStrokeFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_cachedAutosizedFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_cachedFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_cachedMaskRect
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_cachedStrokeFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_cellRangeVisibleRect
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_frame
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_searchSelectionBounds
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_tableNameBounds
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
T{CGSize=dd},N
T{CGSize=dd},N,V_effectiveSize
T{CGSize=dd},N,V_maxSize
T{CGSize=dd},N,V_maximumSize
T{CGSize=dd},N,V_minSize
T{CGSize=dd},N,V_scaleToFit
T{CGSize=dd},N,V_sizeOfText
T{CGSize=dd},R,N
T{CGSize=dd},R,N,V_maximumSize
T{RefTypeHolder<TSCERangeRef, 0>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}},R,N
T{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}},N,V_chromeRangeRef
T{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}},R,N
T{TSCEAnyRef=S{TSCESpanningRangeRef={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}C}{TSKUIDStruct=QQ}B@},R,N
T{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}},N,V_hostCellRef
T{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}},R,N
T{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}},R,N,V_cellRef
T{TSCECellTractRefCore={TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}{TSKUIDStruct=QQ}C{TSUPreserveFlags=C}BBB},N,V_cppCellTractRef
T{TSCEFormulaTranslationFlags=C},R,N,V_translationFlags
T{TSCEGridCoord=II},R,N
T{TSCEGridDimensions=II},N,V_dimensions
T{TSCEGridDimensions=II},R,N
T{TSCEGridDimensions=II},R,V_dimensions
T{TSCEInternalCellReference={TSUCellCoord=ISBB}SS},R,N,V_startCellRef
T{TSCENumberValue=^^?{TSUDecimal={?=[2Q]}}{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}SB},R
T{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}},N,V_transposedBodyRange
T{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}},R,N
T{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}},R,N
T{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}},R,N,V_rangeRef
T{TSCEUidCellRef={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}{TSKUIDStruct=QQ}},N,V_hostCellRef
T{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C},R,N
T{TSKUIDStruct=QQ},N
T{TSKUIDStruct=QQ},N,V_absoluteGroupUid
T{TSKUIDStruct=QQ},N,V_aggregateFormulaOwnerUID
T{TSKUIDStruct=QQ},N,V_baseTableUID
T{TSKUIDStruct=QQ},N,V_columnUid
T{TSKUIDStruct=QQ},N,V_conditionalStyleOwnerUID
T{TSKUIDStruct=QQ},N,V_finalDstTableUID
T{TSKUIDStruct=QQ},N,V_formulaOwnerUID
T{TSKUIDStruct=QQ},N,V_fromGroupByUID
T{TSKUIDStruct=QQ},N,V_fromTableUID
T{TSKUIDStruct=QQ},N,V_groupByUID
T{TSKUIDStruct=QQ},N,V_groupByUid
T{TSKUIDStruct=QQ},N,V_hiddenStateExtentUid
T{TSKUIDStruct=QQ},N,V_hiddenStatesUid
T{TSKUIDStruct=QQ},N,V_hostTableUID
T{TSKUIDStruct=QQ},N,V_insertAtUid
T{TSKUIDStruct=QQ},N,V_insertOppositeUid
T{TSKUIDStruct=QQ},N,V_nextCategoryOwnerUID
T{TSKUIDStruct=QQ},N,V_pivotAggregateRuleChangeUID
T{TSKUIDStruct=QQ},N,V_pivotDataRefreshUID
T{TSKUIDStruct=QQ},N,V_pivotRowColumnRuleChangeUID
T{TSKUIDStruct=QQ},N,V_pivotSourceTableUID
T{TSKUIDStruct=QQ},N,V_pivotTableUID
T{TSKUIDStruct=QQ},N,V_relativeGroupUid
T{TSKUIDStruct=QQ},N,V_rowUID
T{TSKUIDStruct=QQ},N,V_uuid
T{TSKUIDStruct=QQ},R
T{TSKUIDStruct=QQ},R,N
T{TSKUIDStruct=QQ},R,N,V_categoryOwnerUID
T{TSKUIDStruct=QQ},R,N,V_columnUid
T{TSKUIDStruct=QQ},R,N,V_condStyleOwnerUID
T{TSKUIDStruct=QQ},R,N,V_formulaOwnerUid
T{TSKUIDStruct=QQ},R,N,V_groupByUid
T{TSKUIDStruct=QQ},R,N,V_limitedToTableUID
T{TSKUIDStruct=QQ},R,N,V_pbTableUID
T{TSKUIDStruct=QQ},R,N,V_sortingAggregateRuleUid
T{TSKUIDStruct=QQ},R,N,V_tableUID
T{TSKUIDStruct=QQ},R,N,V_uniqueObjectUID
T{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}},N,V_anchorCellUID
T{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}},N,V_cellUID
T{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}},N,V_cursorCellUID
T{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}},R,N,V_cellUID
T{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}},N
T{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}},N,V_cellUIDRange
T{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}},N,V_tableTranslatorBaseMapForPasteboard
T{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}},N,V_tableTranslatorViewMapForPasteboard
T{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}},R,N
T{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}},N,V_cachedColumnUIDs
T{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}},N,V_cachedRowUIDs
T{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}},R,N,V_pivotColumnUIDs
T{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}},R,N,V_pivotRowUIDs
T{TSTPerformanceLoggingToken=@Q},N,V_logToken
T{TSTSimpleRange=qQ},N,V_range
T{TSTSimpleRange=qQ},R,N
T{TSUCellCoord=ISBB},D,N
T{TSUCellCoord=ISBB},N
T{TSUCellCoord=ISBB},N,V_cacheHintID
T{TSUCellCoord=ISBB},N,V_cachedCellID
T{TSUCellCoord=ISBB},N,V_curCellID
T{TSUCellCoord=ISBB},N,V_dynamicSuppressingConditionalStylesCellID
T{TSUCellCoord=ISBB},N,V_editingCellIDForInvalidation
T{TSUCellCoord=ISBB},N,V_firstCellID
T{TSUCellCoord=ISBB},N,V_formulaCoord
T{TSUCellCoord=ISBB},N,V_idOfFirstOccurence
T{TSUCellCoord=ISBB},N,V_lastCellID
T{TSUCellCoord=ISBB},N,V_minCursorCellID
T{TSUCellCoord=ISBB},N,V_modelCellID
T{TSUCellCoord=ISBB},N,V_ratingsDragCellID
T{TSUCellCoord=ISBB},R,N
T{TSUCellCoord=ISBB},R,N,V_allAggsInGroupRootFormulaCoord
T{TSUCellCoord=ISBB},R,N,V_formulaCoord
T{TSUCellCoord=ISBB},R,N,V_groupingColumnHeadersFormulaCoord
T{TSUCellCoord=ISBB},R,N,V_groupingColumnsFormulaCoord
T{TSUCellCoord=ISBB},R,N,V_indirectAggTypeChangeFormulaCoord
T{TSUCellCoord=ISBB},R,N,V_layoutCellID
T{TSUCellCoord=ISBB},R,N,V_sourceRectOrigin
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_boundingCellRange
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_cachedMaskSpillRange
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_cachedMergeRange
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_cellRange
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_clampingRect
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_dirtyStrokeRange
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_dynamicFontColorCellRange
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_dynamicHidingContent
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_dynamicHidingRowsCols
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_dynamicHidingText
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_dynamicRemovingText
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_dynamicResizingColumnRange
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_dynamicResizingRowRange
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_dynamicRevealingRowsCols
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_layoutMergeRange
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_mergeRange
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_sourceCellRange
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_targetCellRange
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_zoomToEditVisibleCellRange
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,VmPrevEditingSpillingTextRange
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},R,N
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},R,N,V_layoutRange
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},R,N,VmEditingSpillingTextRange
T{TSUChromeColumnIndex=S},R,N
T{TSUChromeRowIndex=I},R,N
T{TSUDecimal={?=[2Q]}},N
T{TSUDecimal={?=[2Q]}},R,N
T{TSUDecimal={?=[2Q]}},R,V_number
T{TSUModelCellCoord={TSUCellCoord=ISBB}},N,V_hostCellCoord
T{TSUModelCellCoord={TSUCellCoord=ISBB}},R
T{TSUModelCellCoord={TSUCellCoord=ISBB}},R,N
T{TSUModelColumnIndex=S},N,V_numberOfHeaderColumns
T{TSUModelColumnIndex=S},R,N
T{TSUModelColumnIndex=S},R,N,V_baseColumnIndex
T{TSUModelColumnOrRowIndex=I},R,N,V_baseIndex
T{TSUModelRowIndex=I},N,V_numberOfFooterRows
T{TSUModelRowIndex=I},N,V_numberOfHeaderRows
T{TSUModelRowIndex=I},R,N
T{TSUPreserveFlags=C},N
T{TSUPreserveFlags=C},N,V_preserveFlags
T{TSUPreserveFlags=C},R,N
T{TSUViewCellCoord={TSUCellCoord=ISBB}},R
T{TSUViewCellCoord={TSUCellCoord=ISBB}},R,N
T{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}},N,V_viewCellRect
T{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}},R,N
T{TSUViewColumnIndex=S},N
T{TSUViewColumnIndex=S},R,N
T{TSUViewColumnOrRowIndex=I},R,N,V_viewIndex
T{TSUViewRowIndex=I},N
T{TSUViewRowIndex=I},R,N
T{UIEdgeInsets=dddd},N,V_paddingInsets
T{UIEdgeInsets=dddd},R,N,V_paddingInsets
T{UIEdgeInsets=dddd},R,N,VmCachedPaddingForEditingCell
T{_NSRange=QQ},N,V_baseTileRange
T{_NSRange=QQ},N,V_bodySideBorderColumnRange
T{_NSRange=QQ},N,V_bottomBorderRowRange
T{_NSRange=QQ},N,V_footerColumnSeparatorColumnRange
T{_NSRange=QQ},N,V_footerRowSeparatorRowRange
T{_NSRange=QQ},N,V_headerColumnSeparatorColumnRange
T{_NSRange=QQ},N,V_headerRowSeparatorRowRange
T{_NSRange=QQ},N,V_headerSideBorderColumnRange
T{_NSRange=QQ},N,V_keyRange
T{_NSRange=QQ},N,V_prefixRange
T{_NSRange=QQ},N,V_searchReferenceRange
T{_NSRange=QQ},N,V_topBorderRowRange
T{_NSRange=QQ},R,N
T{_NSRange=QQ},R,V_range
T{_opaque_pthread_rwlock_t=q[192c]},N,V_rwlock
T{os_unfair_lock_s=I},N,V_cachedIndexesUnfairLock
T{os_unfair_lock_s=I},N,V_pivotCachedIndexesUnfairLock
T{shared_ptr<TSCEValue>=^{TSCEValue}^{__shared_weak_count}},N,V_cachedValue
T{vector<TSUCellCoord, std::allocator<TSUCellCoord>>=^{TSUCellCoord}^{TSUCellCoord}{__compressed_pair<TSUCellCoord *, std::allocator<TSUCellCoord>>=^{TSUCellCoord}}},N,V_cursorCellIDs
T{vector<unsigned long, std::allocator<unsigned long>>=^Q^Q{__compressed_pair<unsigned long *, std::allocator<unsigned long>>=^Q}},R,N,V_cellFlags
UIDForIndex:isRows:
UIDLookupList
UIDSetForIndexes:isRows:
UIDSetForRange:isRows:
UIDsForIndexes:isRows:
UIDsForRange:isRows:
URLByAppendingPathComponent:
URLFragmentAllowedCharacterSet
UTF8String
UUID
UUIDString
XLImportDateMode
_AST
_UIDLookupList
_abortObject
_absTractRef
_absoluteGroupUid
_accumulator
_activeFlatteningDimension
_addAggregates:atLevel:
_affectsCellBorders
_afterCountValue
_afterRewriteMap
_aggFormulaCoordsFreeList
_aggNodeCoordsToUnpack
_aggNodes
_aggNodesByFormulaCoord
_aggRoot
_aggType
_aggValuesLock
_aggregateFieldName
_aggregateFormulaOwner
_aggregateFormulaOwnerUID
_aggregateFunction
_aggregateIndexLevel
_aggregateType
_aggregateUidList
_aggregateUidMap
_aggregates
_aggregator
_aggregators
_allColumnGroupUids
_allFlattenedUids
_allHeaderPerTablesPrecedent
_allRequestedKeys
_allRowGroupUids
_allowFreeformFormulaText
_allowHorizontalAutoresize
_allowSpanningColumnReferenceBodyQualifier
_allowWhitespaceInFormulas
_allowsBlackDragDropBackground
_allowsFullyFilteredTables
_anchorCellUID
_animationController
_annotations
_annotationsForIndexes:
_annotationsInRows:
_annotationsIntersectingButNotContainingBaseCellRegion:
_apparentTractRef
_applySpareFormatOnly
_applyingToTable
_archivedColumnCount
_archivedLayoutEngineBundle
_archivingCompatibilityVersion
_argIndex0
_argIndex1
_argIndex2
_argSpec
_argumentIndex
_argumentSpec
_arguments
_arrayOfChunkRocks
_arrowKeyAtEdgeWhileEditingNavigates
_arrowKeysNavigateWhenEditingBeganByTyping
_arrowKeysWrap
_asciiSpaceCharacterSet
_aspectOperationIsInProgress
_assertedOnMissingCombinations
_astNodeArray
_attachmentCellStorageToLayoutMap
_attribute
_attributes
_autoImplicitSort
_autofillSelection
_auxRowColumnInfo
_average
_backTabWraps
_backgroundProcessingQueue
_badgeType
_bandedFillIsValid
_bandedFillObject
_baseCellRef
_baseCellUIDRegion
_baseColumnGroupUids
_baseColumnIndex
_baseColumnToViewColumn
_baseColumns
_baseDataListCache
_baseDataStore
_baseFilteredIndexes
_baseFlattenedUids
_baseFormat
_baseFormatID
_baseHiddenByUid
_baseIndex
_baseMap
_basePreserveFlags
_baseRow
_baseRowGroupUids
_baseRowIndex
_baseRowToViewRow
_baseRows
_baseTableUID
_baseTile
_baseTileRange
_baseTractRef
_baseUserHiddenIndexes
_beforeColumnRowUIDMap
_beforeCountValue
_beforeRewriteMap
_beginImplicitEditing
_bezierPathCache
_blank
_blankString
_blockOffset
_blockingIdentifier
_bodyCellStyle
_bodyColumnCoordinates
_bodyGroupingList
_bodyRowCoordinates
_bodySideBorderColumnRange
_bodyTextStyle
_boolCount
_boolTrueCount
_boolValue
_booleanFormat
_booleanFormatID
_booleanValue
_bottomBorderRowRange
_bottomRowStrokes
_bottomStroke
_bottomStrokeLayer
_bottomStrokeOrder
_boundingCellRange
_bucketCount
_buckets
_byteSizeForArchiving
_cache
_cacheHintID
_cacheIsValid
_cachedAlignedFrame
_cachedAlignedStrokeFrame
_cachedAllAnnotations
_cachedAutoSizeFlags
_cachedAutosizedFrame
_cachedBaseRegion
_cachedCellID
_cachedCellRegion
_cachedCellStyle
_cachedCellWraps
_cachedColumnUIDs
_cachedFrame
_cachedGroupValueTuple
_cachedImage
_cachedImageScreenScale
_cachedIndexSetsAreValid
_cachedIndexes
_cachedIndexesForLabelRows
_cachedIndexesForLeadingRows
_cachedIndexesForLeadingSummaryRows
_cachedIndexesForSummaryAndLabelRows
_cachedIndexesForSummaryRows
_cachedIndexesUnfairLock
_cachedIsValidReference
_cachedLabelRowIndexesAtLevels
_cachedLeadingColumnIndexesAtLevels
_cachedLeadingRowIndexesAtLevels
_cachedLeadingSummaryColumnIndexesAtLevels
_cachedLeadingSummaryRowIndexesAtLevels
_cachedMaskSpillRange
_cachedMaxNumberOfColumns
_cachedMaxNumberOfRows
_cachedMergeRange
_cachedNumberOfColumns
_cachedNumberOfFooterOrGrandTotalRows
_cachedNumberOfFooterRows
_cachedNumberOfGrandTotalColumns
_cachedNumberOfHeaderColumns
_cachedNumberOfHeaderRows
_cachedNumberOfRows
_cachedPadding
_cachedParagraphAlignment
_cachedPivotIndexSetsAreValid
_cachedQuotes
_cachedRowUIDs
_cachedSegment
_cachedSpecifiers
_cachedStocks
_cachedStrokeFrame
_cachedSummaryColumnIndexesAtLevels
_cachedSummaryRowIndexesAtLevels
_cachedTableNameHeight
_cachedTextStyle
_cachedValue
_cachedValueWasFetchedWithRichTextAttributes
_cachedVerticalAlignment
_calcCellsInProgress
_calcEngine
_calcEngineGroupByChangeNotifications
_calcEngineRegistrationObject
_calculationEngine
_calculationWillShutDown
_calendar
_canBeNested
_canvasReferenceController
_canvasReferenceProvider
_capturedColumnWidthTotal
_capturedColumnWidths
_capturedRowHeightTotal
_capturedRowHeights
_categoryAggregateType
_categoryAggregatesOwnerUID
_categoryColumnIndex
_categoryColumnWidth
_categoryLevel1CellStyle
_categoryLevel1TextStyle
_categoryLevel2CellStyle
_categoryLevel2TextStyle
_categoryLevel3CellStyle
_categoryLevel3TextStyle
_categoryLevel4CellStyle
_categoryLevel4TextStyle
_categoryLevel5CellStyle
_categoryLevel5TextStyle
_categoryOrder
_categoryOwner
_categoryOwnerUID
_categoryRef
_cell
_cellBorder
_cellContents
_cellCoordinates
_cellCoordsToStyleUpgradeForFormulatext
_cellCount
_cellCountDiffsPerColumn
_cellCountDiffsPerRow
_cellData
_cellDependencies
_cellDiffArray
_cellDragController
_cellEditingMaskLayers
_cellEditorsCanScrollToNonLocalTableSelection
_cellFlags
_cellIDToWPColumnCache
_cellIDs
_cellLists
_cellMap
_cellPropsRowHeight
_cellRange
_cellRangeVisibleRect
_cellRanges
_cellRangesToInvalidate
_cellRef
_cellRefsByGroupNodeByGroupBy
_cellRefsToCheck
_cellRefsUsingFunction
_cellRegion
_cellRegionForClearedMergeStrokes
_cellSelection
_cellSpec
_cellStatesToLayout
_cellStyle
_cellStyleHandle
_cellStyleHandles
_cellStyleID
_cellStyles
_cellUID
_cellUIDIterator
_cellUIDList
_cellUIDMap
_cellUIDRange
_cellUIDRangeList
_cellUIDRegion
_cellUIDs
_cellValue
_cellValues
_cellWarning
_cellWillChangeDistributor
_cellWraps
_cells
_cellsByCoord
_cellsPendingWrite
_cellsPerSubRegion
_cellsToInvalidate
_cellsToInvalidateAfterRecalc
_cellsToInvalidateNonoverflowingAfterRecalc
_changeDescriptor
_changeDescriptors
_changeType
_childNodesByRowUid
_children
_childrenCoordSet
_childrenLock
_chromeCoordsAreViewCoords
_clampingRect
_cleanCellDependencyRows
_clearBottomStroke
_clearContentAtIndex:count:
_clearErrorCells
_clearLeftStroke
_clearRightStroke
_clearedMajorStrokeLayer
_clearedMinorStrokeLayer
_clearedStrokeLayer
_coerceEmptyCellToFormat:
_coerceTextCellToBestNumberFormatUsingLimitedParsing:allowFractions:
_coerceToBooleanFormat
_coerceToCheckboxFormat
_coerceToCurrencyFormat
_coerceToCustomCurrencyFormat
_coerceToCustomDateTimeFormat
_coerceToCustomNumberFormat
_coerceToCustomTextFormat
_coerceToDateTimeFormat
_coerceToDecimalFormat
_coerceToDurationFormat
_coerceToFractionFormat
_coerceToNumberFormatWithSeparatorFixing:
_coerceToPercentageFormat
_coerceToRatingFormat
_coerceToScientificFormat
_coerceToTextFormat
_collapsedGroupUIDs
_collapsedGroupUids
_collapsedIndexes
_colonCharacterSet
_color
_columnAggregateUid
_columnAggregates
_columnGroupLevel
_columnGroupings
_columnHeaderStorage
_columnHiddenStateExtent
_columnIdList
_columnIndex
_columnIndexForUid
_columnIndexToMergeRangeMap
_columnIndexesInRow
_columnModelWidths
_columnOrRowIndex
_columnOrderChangedCoord
_columnOrderReversed
_columnRegion
_columnRemainDup
_columnRowUID
_columnRowUIDMap
_columnStrokeExportCache
_columnTgtToPbMaps
_columnToMaxFittingWidths
_columnToStrokeWidthCache
_columnToWidth
_columnUID
_columnUIDIndexList
_columnUid
_columnUidForIndex
_columnUids
_columnUidsWithUniqueIndexes
_combinedCanonicalKeyStringAsUtf8
_combinedHiddenIndexes
_commentHostingMap
_commentStorageDataList
_commentStorageID
_commentStorageMap
_commentStorageTableReference
_components
_condStyleOwnerUID
_conditionalStyle
_conditionalStyleAppliedRule
_conditionalStyleFormulaOwner
_conditionalStyleID
_conditionalStyleOwnerUID
_conditionalStyleSetDataList
_conditionalStyleSetRules
_conditionalStyleSetTableReference
_conditionalStylesForUndo
_confidence
_containsCellBorderChanges
_containsSuppressCustomFormatHandlingProperty
_contentIterator
_contentRWLock
_contentReadingThreads
_contextSheetName
_contextTableResolver
_continuesEditingAfterNavigation
_controlCellSelection
_controlCellSpecDataList
_controlCellSpecID
_controlCellSpecTableReference
_controlCellUIAlwaysVisible
_controlFormat
_controlFormatID
_coordMapper
_coordMappersByTableUID
_coordMappersLock
_coordSetsReferringToTable
_coordSetsReferringToUuidInTable
_coordinates
_coordinator
_copiedUIDMap
_copyOnWriteUIDMapper
_cornersCanDragResize
_correctAndCheckStateSuppressingAssertions:
_count
_cppCalcEngine
_cppCellTractRef
_createLargeDefaultTables
_createTileWithID:
_curBlock
_curCellID
_curRowIndex
_curTile
_curTileRange
_currencyFormatID
_currentBaseCellID
_currentCell
_currentCellIDIsBase
_currentColumnWidths
_currentData
_currentFormat
_currentFormatID
_currentRowHeights
_currentRowIndex
_currentScreenScale
_currentSummaryCellID
_currentViewCellID
_cursorCellIDs
_cursorCellUID
_customFormat
_customFormatForBlankGroup
_customFormatForErrorGroup
_customOrderedStrokeLayer
_customStrokeLayer
_customStrokeProvider
_customUnorderedStrokeLayer
_data
_dataFields
_dataList
_dataListCache
_dataStore
_dataStoreIterator
_dataType
_dataValues
_date
_dateAccumulator
_dateCount
_dateFormat
_dateFormatID
_dateValue
_day
_debugOnly_DidCleanGraphForConsistencyViolation
_debugOnly_DidDetectAndRepairConsistencyViolations
_decimal
_decimalValue
_defaultColumnStyle
_defaultColumnWidth
_defaultMajorStrokeLayer
_defaultMinorStrokeLayer
_defaultRowHeight
_defaultStrokeLayer
_defaultStrokeProvider
_deferGroupByChangeNotificationsLevel
_deferredGroupByChangeNotifications
_definedBottomStroke
_definedBottomStrokeOrder
_definedCellStyle
_definedColumnAggregateUid
_definedColumnUID
_definedDirection
_definedGroupingColumnUID
_definedLeftStroke
_definedLeftStrokeOrder
_definedRightStroke
_definedRightStrokeOrder
_definedRunningTotalGroupingColumnUid
_definedTextStyle
_definedTopStroke
_definedTopStrokeOrder
_delegate
_dependTracker
_dependentsToDirtyByFromRef
_deprecatedProvider
_detokenizedText
_didModifyWasCalled
_dimension
_dimensions
_direction
_dirtyCellDependencyRows
_dirtyCellRanges
_dirtyCellRegionGatherer
_dirtyCellsWithNoLockForSeconds:fromStartTime:
_dirtyPrecedentCount
_dirtyStrokeRange
_dirtyingInProgress
_dirtyingLock
_dirtyingMutex
_disableImplicitNaming
_disconnectedRowUids
_doFullRefresh
_docLocale
_documentIsClosing
_doesNotNeedFormulaRewriteForImport
_doubleCurlyQuoteCharacterSet
_doubleValue
_downgradedForPrePivot
_dragAndDropDetails
_dragByHandleOnly
_drawBlackAndWhite
_drawPreventAntialias
_dstRegion
_dstUidForSrcUid
_dupContentCache
_dupContentEntryToHeightCache
_dupContentEntryToWidthCache
_durationCount
_durationFormatID
_durationInterval
_dynamicAddOrRemoveColumnElementSize
_dynamicAddOrRemoveRowElementSize
_dynamicBandedFill
_dynamicBandedFillSetting
_dynamicCellFillDelegate
_dynamicColumnAdjustment
_dynamicColumnTabSize
_dynamicContentDelegate
_dynamicFontColor
_dynamicFontColorCellRange
_dynamicFooterHeight
_dynamicHeightResize
_dynamicHidingContent
_dynamicHidingRowsCols
_dynamicHidingText
_dynamicInfoGeometry
_dynamicLayout
_dynamicLayoutParticipants
_dynamicModeUnfairLock
_dynamicOrderedStrokeLayer
_dynamicRemovingText
_dynamicRepResize
_dynamicRepResizeSessionInProgress
_dynamicRepressFrozenHeaderColumns
_dynamicResizeInfo
_dynamicResizingColumnAdjustment
_dynamicResizingColumnRange
_dynamicResizingColumns
_dynamicResizingRowAdjustment
_dynamicResizingRowRange
_dynamicResizingRows
_dynamicRevealingRowsCols
_dynamicRevealingRowsColsDirection
_dynamicRowAdjustment
_dynamicRowTabSize
_dynamicSavedLayoutGeometry
_dynamicSelection
_dynamicStrokeLayer
_dynamicSuppressingConditionalStylesCellID
_dynamicTableNameResize
_dynamicUnorderedStrokeLayer
_dynamicWidthResize
_earlyRefreshRequested
_edgesForOwner
_editingCellIDForInvalidation
_editingReferenceNode
_effectiveSize
_empty
_emptyCellForPreBNC
_emptyFilteredTable
_enumerateAnnotationsAndFormulasWithIndexes:block:
_enumerateGroups:
_enumerateIndexesIntersectingRegion:block:
_enumerateLoadedTiles:
_enumerateTiles:
_errorCount
_errorDictionary
_errorType
_errorValue
_estimatedByteSize
_evalRef
_evaluationContext
_expandedGroupUIDs
_expandedRowColumnUuids
_explicitFlags
_explicitFormatFlags
_exportPermanentHidingState
_exportsCellAnnotations
_exportsCellComments
_filterColons
_filterIndex
_filterOffsets
_filterSet
_filteredIndexes
_finalDstTableUID
_finalTopRowIndex
_findSelectionHighlightLayer
_first
_firstCellID
_firstDateSeen
_firstFragment
_firstIndex
_firstPartitionWidth
_fixedColumnWidthStack
_fixupFormulas
_flags
_flatteningDimension
_floatingCellRangeAtRect:inLayoutSpace:withTransform:
_flushAllInProgress
_flushCellRefSetWithDepTracker:startTime:timeout:
_flushDependentOnlyCellRefSetWithDepTracker:startTime:timeout:
_flushDirtyOwnerIdsWithDepTracker:startTime:timeout:
_flushFormulasToRemoveWithDepTracker:startTime:timeout:
_flushFormulasToReplaceWithDepTracker:startTime:timeout:
_flushFormulasToResetWithDepTracker:startTime:timeout:
_flushInternalCellRefSetWithDepTracker:startTime:timeout:
_flushRangeRefsWithDepTracker:startTime:timeout:
_flushUpdatePrecedentsCellRefSetWithDepTracker:startTime:timeout:
_followsLinksOnFirstTap
_fontInfoCache
_fontSize
_footerColumnSeparatorColumnRange
_footerRowCellStyle
_footerRowSeparatorRowRange
_footerRowTextStyle
_forConditionalStyle
_forDrawing
_forFormulaPlainText
_forRows
_forceEscaping
_forceZoomInOnBeginEditing
_forcingRegion
_formatManager
_formatTableReference
_formats
_formatsAdded
_formattedRichTextStorage
_formula
_formulaCoord
_formulaCoordSpace
_formulaDataList
_formulaErrorDataList
_formulaErrorTableReference
_formulaFixupsShouldStick
_formulaID
_formulaObject
_formulaOwner
_formulaOwnerUID
_formulaOwnerUIDs
_formulaOwnerUid
_formulaPlainText
_formulaSpec
_formulaStore
_formulaStringsForCellRefs
_formulaTableReference
_formulaWasFixable
_formulas
_formulasForOwnerKind
_formulasForUndo
_formulasToRemove
_formulasToReplace
_formulasToReset
_formulasToSet
_foundABadDatalistKey
_foundANumber
_fragPrecedentToEntry
_fragPrecedentsUsedByCellRef
_frame
_fromCoordToReferRect
_fromTableCoordMapperForPasteboard
_fromTableUID
_frozenHeaderColumnsSpace
_frozenHeaderCornerSpace
_frozenHeaderRowsSpace
_fullwidthApostrophe
_fullwidthApostropheEscaped
_functionEndNode
_functionIndex
_functionName
_functionNode
_gathererMap
_gridKind
_gridRange
_grids
_groupAggregateUidUnflatteningMap
_groupBy
_groupBy:
_groupByChange
_groupByChangeDistributor
_groupBySet
_groupByUID
_groupByUid
_groupBys
_groupForTileID:
_groupLevel
_groupNode
_groupNodeUIDInfo
_groupNodeUIDMap
_groupNodesByCellRef
_groupNodesByGroupUid
_groupRoot
_groupUid
_groupValueUid
_groupValues
_groupingColumnChanges
_groupingColumnHeadersChanged
_groupingColumnHeadersFormulaCoord
_groupingColumnOptionsMap
_groupingColumnUID
_groupingColumnUid
_groupingColumns
_groupingColumnsFormulaCoord
_groupingFormatComputed
_groupingFunctor
_groupingType
_groupingsChangingLevel
_hasAnyRichTextCells
_hasCachedIsValidReference
_hasContent
_hasContentIsCached
_hasCustomFormatsToPaste
_hasInterestingKeys
_hasPreserveFlag
_hasReference
_hasRelativeCellRef
_hasRichTextLock
_hash
_hashVal
_hashesToNodeSets
_hauntedOwner
_head
_headerColumnCellStyle
_headerColumnRowCoordinates
_headerColumnSeparatorColumnRange
_headerColumnTextStyle
_headerColumnsFrozen
_headerColumnsRepeat
_headerCoords
_headerNameMgr
_headerNameMgrReadWriteLock
_headerPerTablePrecedentToTableUID
_headerRowCellStyle
_headerRowColumnCoordinates
_headerRowSeparatorRowRange
_headerRowTextStyle
_headerRowsFrozen
_headerRowsRepeat
_headerSideBorderColumnRange
_headersFrozenByDefault
_heightFactor
_hiddenRowsColumnsCache
_hiddenStateExtentUid
_hiddenStateForColumnsOwnerUID
_hiddenStateForRowsOwnerUID
_hiddenStateFormulaOwnerForColumns
_hiddenStates
_hiddenStatesByRowExtentUuid
_hiddenStatesChangedCoord
_hiddenStatesOwner
_hiddenStatesUid
_hideChromeContextMenuButton
_hidingAction
_hidingState
_highlighted
_hintMatricesByCanvas
_hnm
_horizontal
_hostCell
_hostCellCoord
_hostCellRef
_hostColumnUID
_hostInfo
_hostRowUID
_hostTableUID
_hotData
_idOfFirstOccurence
_identifier
_identityTranslator
_ignored
_importDate
_importSource
_importWarningSet
_importWarningSetDataList
_importWarningSetID
_inCalcEngineMode
_inDynamicLayout
_inDynamicLayoutMode
_inInvalidate
_inUseGroupBys
_includesPrefixes
_increment
_index
_indexMap
_indexToCacheEntriesMap
_indexes
_indexesContainedByRegion:
_indexesForRange:startingOnly:
_indexesForRows:
_indexesIntersectingButNotContainingBaseCellRegion:
_indirectAggTypeChangeFormulaCoord
_info
_infoGeometry
_initWithContext:flatteningFromComplexInfo:cellRegion:waitForCalcEngine:flatteningOptions:isSnapshot:
_initWithContext:fromSourceInfo:cellRegion:tableModel:waitForCalcEngine:formulaCoordSpace:
_initialWhitespace
_insertAtUid
_insertCell:atIndex:
_insertOppositeUid
_insertRowsAtIndex:count:
_inset
_interactionType
_interactionTypeFromTheFuture
_interestingCells
_interestingKeys
_internalOwnerID
_internetReachability
_intersectingColumnsIndexSet
_intersectingRowsIndexSet
_intlWhitespaceCharacterSet
_invalidColumnIndex
_invalidFunctionName
_invalidRowIndex
_invalidTableOffset
_invalidateAfterAsyncSort
_invalidateAllChrome
_invalidateAllChromeCaches
_invalidateCollapsed
_invalidateColumnChrome
_invalidateKnobs
_invalidateRowChrome
_invalidateSelection
_invalidateTableName
_invalidateViewGeometry
_invalidatedForEditingCell
_inverseMergeActions
_isAPivotDataModel
_isAPivotTable
_isAborted
_isArray
_isBlank
_isBlankForKeyboardInsertion
_isCategoryRef
_isCircularReference
_isClosing
_isColumnOrderTemporary
_isDynamicallyChangingContent
_isDynamicallyChangingRowOrColumnCount
_isDynamicallyHidingRowsCols
_isDynamicallyRemovingText
_isEmptyPivot
_isEnabled
_isFlattened
_isFormula
_isGrouped
_isHidingGrandTotalColumns
_isHidingGrandTotalRows
_isIdentityMapping
_isInCycle
_isInverse
_isLabelRow
_isLegacyBasedIDSelection
_isNewForBraveNewCell
_isOperator
_isRangeRef
_isRegisteredWithCalcEngine
_isRegisteredWithCalculationEngine
_isRowOrderTemporary
_isSummaryRow
_isUnarchiving
_isValid
_isVariation
_isZoomToEditOperationInProgress
_items
_iteratorRunningCount
_iterators
_key
_keyRange
_keyboardShown
_keys
_labelLevel1CellStyle
_labelLevel1TextStyle
_labelLevel2CellStyle
_labelLevel2TextStyle
_labelLevel3CellStyle
_labelLevel3TextStyle
_labelLevel4CellStyle
_labelLevel4TextStyle
_labelLevel5CellStyle
_labelLevel5TextStyle
_labelRowHeightList
_labelRowIndexes
_labelRowVisibilityList
_lastArchivedAppVersion
_lastCellID
_lastCellRangeAdded
_lastColumnDiffPos
_lastFragment
_lastFullRefreshDate
_lastIndex
_lastKnownViewTractRef
_lastRequestDate
_lastReturnedArgIndex
_lastReturnedIndex
_lastReturnedSubindex
_layoutCacheFlags
_layoutCell
_layoutCellID
_layoutConcurrentQueue
_layoutDirectionIsLeftToRight
_layoutEngine
_layoutInvalidate
_layoutInvalidateChildren
_layoutInvalidateProvider
_layoutInvalidateSize
_layoutInvalidateTableNameVisibility
_layoutIsLTR
_layoutMeasureQueue
_layoutMergeRange
_layoutRange
_layoutResetScaleToFit
_layoutSpaceType
_layoutSpacesInvalidateCoordinates
_layoutSpacesInvalidateCoordinatesAfterRow
_layoutSpacesInvalidateTableOffsets
_layoutUpdateChildren
_layoutValidateQueue
_lazyReferencesAreLoaded
_leftColumnStrokes
_leftSingleQuotationMark
_leftStroke
_leftStrokeOrder
_legacyAnchorCellID
_legacyBaseCellRegion
_legacyCellRegion
_legacyCursorCellID
_legacyDisplayFormatType
_level
_limitedToTableUID
_listItemsSet
_listType
_loadDatalist:forLazyReference:completionBlock:
_loadedIndexesAfterUnarchive
_localOwnerID
_localizedBlankGroupName
_localizedErrorGroupName
_localizedFalseGroupName
_localizedFalseGroupNameForColumn
_localizedStringFromArgumentsTable:
_localizedTrueGroupName
_localizedTrueGroupNameForColumn
_lock
_logToken
_madeChange
_majorStrokeLayer
_majorStrokeLayerToken
_managedNodeArrays
_mapFromViewToBaseColumnInCurrentRow
_mask
_matcher
_maxArguments
_maxColumnIndexIsValidPrivate
_maxColumnIndexPrivate
_maxConcurrentTasks
_maxLevel:
_maxNumberOfColumns
_maxNumberOfPopulatedCells
_maxNumberOfRows
_maxOrder
_maxSize
_maxValue
_maxWidthForChildren
_maximum
_maximumSize
_mayModifyFormulasInCells
_mayModifyValuesReferencedByFormulas
_mergeActions
_mergeCacheLoaded
_mergeChangeDistributor
_mergeFormulaIndexes
_mergeFormulas
_mergeInfo
_mergeList
_mergeOriginMovedInfo
_mergeOriginsMap
_mergeOwner
_mergeOwnerUID
_mergeRange
_mergeRangeCache
_mergeRanges
_mergeRangesContainingFormulas
_mergeRangesForLayoutPass
_mergeRangesRTree
_mergeRegion
_mergeSource
_mergedAtCellIds
_mergedCellRanges
_mergedRects
_mergedStrokes
_metadata
_mightHaveCustomFormats
_mightOverlap
_migratingStylesOnly
_minArguments
_minCursorCellID
_minSize
_minValue
_minimum
_minimumColumnWidths
_minimumRowHeights
_minorStrokeLayer
_minorStrokeLayerToken
_missingGroupingColumn
_missingPostBNCDatalists
_mixedDurationsAndNumbers
_mode
_modelCellID
_modelIteratorData
_modelIteratorHasCell
_month
_multipleChoiceListFormat
_multipleChoiceListFormatDataList
_multipleChoiceListFormatID
_mutableIndexSet
_mutex
_nameFragmentTiles
_nameFragmentToEntry
_namePrefixIndex
_namesUsed
_naturalAlignment
_needToUpgradeCellStorage
_needWPColumn
_needsFilterSetUpdated
_needsFormulaReset
_needsFormulaRewriteForImport
_needsRebuildOfAggFormulas
_needsSummaryUidUpgrade
_needsTileSplittingPrecedent
_needsToBeArchived
_needsToUpdateFilterSetForImport
_needsUidRectUpgrade
_newlyRequestedKeys
_nextAggFormulaCoord
_nextCategoryOwnerUID
_nextCellUID_NoDispatch
_nextConditionalStyleOwnerUID
_nextEmptyTrackedReferencesIndex
_nextHiddenStateForColumnsOwnerUID
_nextIndex
_nextMergeOwnerUID
_nextPencilAnnotationOwnerUID
_nextPrecedentCoord
_nextPrecedentCoordLock
_nextSortRuleReferenceTrackerOwnerUID
_nextTableUID
_noFormatMergingNeeded
_noRuleConditionalStyleSet
_nodeArrays
_nodesToData
_nonDefaultFontName
_nonDefaultFontSize
_nonFormulaCells
_notifyType
_nrm_ownerUID
_numCellsPerTask
_numDirtyCells
_numberAccumulator
_numberCount
_numberFormat
_numberOfCells
_numberOfColumns
_numberOfFooterRows
_numberOfHeaderColumns
_numberOfHeaderRows
_numberOfLayoutColumns
_numberOfLevels:
_numberOfResizableColumns
_numberOfResizableRows
_numberOfRows
_numberTotalValue
_numberValue
_objValue
_offline
_oldCells
_oneToMany
_operation
_operatorChar
_options
_optionsForUidMap
_order
_orderedUuids
_originToRangeMap
_originalDataFormat
_originalFullReferenceString
_originalMap
_originalSrcRegion
_originalVersionCounter
_overrideLayoutHint
_overrideText
_overrideTextAsTyped
_overridesPadding
_ownerIndex
_ownerKind
_ownerMap
_ownerName
_ownerUID
_padding
_paddingInsets
_pageCount
_pageNumber
_paraStyleToHeightCache
_parenNestingLevel
_parentNode
_parseAsBaseTableReference
_parseFormulaFromString:tableInfo:cellID:
_partitionPosition
_partitioner
_partitioningPass
_partitioningPassCache
_pasteFilterHidingAsUserHiding
_pasteInverseCommands
_pasteType
_pastesTile
_payload
_payloadToObjectMap
_pbTableUID
_pencilAnnotationOwner
_pencilAnnotationOwnerUID
_pencilAnnotationStorage
_pendingCellsToRemove
_pendingColumnsOrRowsHidden
_pendingColumnsOrRowsShown
_pendingComputedLock
_pendingViewColumnsOrRowsShown
_perTableInfo
_periodCharacterSet
_pivotAggregateRuleChangeUID
_pivotBodySummaryColumnCellStyle
_pivotBodySummaryRowCellStyle
_pivotCachedIndexesUnfairLock
_pivotColumnUIDs
_pivotDataRefreshTimestamp
_pivotDataRefreshUID
_pivotHeaderColumnSummaryCellStyle
_pivotInfo
_pivotOnlyRowIndexes
_pivotOrder
_pivotOwner
_pivotRowColumnRuleChangeUID
_pivotRowUIDs
_pivotSourceTableName
_pivotSourceTableUID
_pivotTable
_pivotTableUID
_pivotValueTypesByColumn
_populatedColumns
_populatedRows
_popupModel
_position
_preBNCData
_preBNCFormatDataList
_preBNCFormatTableReference
_prePivotRowFilterSet
_precedentLoadingGroup
_precedentLoadingQueue
_predArg0
_predArg1
_predArg2
_predicate
_predicateType
_prefixRange
_prefixStringsInHeaderCells
_preserveFlags
_preserveRectangularRange
_preservingStyles
_presetIDForUpgrade
_presetIndex
_presetNeedsStrongOwnership
_presets
_previousGroupNodeToUpdated
_previousGroupNodeUids
_previousLevel
_processHiddenRowsForExport
_processedByLayoutEngine
_productValue
_propertyMap
_propertyMapToReset
_propertyMapToSet
_propertyMapToTextStyleMap
_pruningCount
_purpose
_qualifier1
_qualifier2
_queriedModel
_queue
_quoteComponents
_quotedComponents
_range
_rangeContext
_rangeDependencies
_rangeEntries
_rangeRef
_rangeWithFunction
_rank
_ratingsDragCellID
_rawString
_rawValueForDecimalCoercion
_rawValueForStringCoercion
_rebuildFormulasDeferredLevel
_receivers
_recentColumnResults
_recentRowResults
_recursivelyDrawingInContext
_ref
_refCount
_refPathSplitter
_refPathWords
_refString
_referenceColorHelper
_referenceIdentifiers
_referenceIsComplete
_referenceSet
_references
_referencesMatchingInputAsPrefix
_regionMovedInfo
_registeredWithCoordinator
_regularExpression
_relativeCellRef
_relativeColumns
_relativeGroupUid
_relativeRows
_remoteDataMap
_remoteDataSyncKey
_removeAggregates:
_removeAnnotationsFromDeleteRange:
_removeCellAtIndex:
_removeReplaceMutex
_removeRowInfo:atTileRowIndex:
_removeRowsAtIndex:count:
_removeRowsAtTileRowIndex:numberOfRows:shiftingContent:
_removeTileForID:
_removedGroupNodeUids
_renderAsTokenType
_reorganizeValues
_repairOrReplaceLock
_repairOrReplaceMap
_repeatHeaderColumnsSpace
_repeatHeaderCornerSpace
_repeatHeaderRowsSpace
_repeatingArguments
_repeatingGroupSize
_repeatingHeaderColumnsEnabled
_repeatingHeaderRowsEnabled
_replaceCellAtIndex:withCell:
_repositionStockPopover
_requestsInFlight
_requiringSingleQuotesCharacterSet
_reservedFragmentPrecedents
_resetGroupingsOnUpgrade
_resetHeaderLabelsAfterSort
_resolvedTextStyleLock
_rest
_retainedExpressions
_returnCellContents
_returnEmptyCells
_returnMergeRanges
_returnOneEmptyCell
_returnOnlyFormulas
_returnWhileEditingNavigates
_reverseOriginsMap
_rewriteSpec
_rewriteSpecBaseToChrome
_rewriteSpecChromeToBase
_rewriteType
_rewrittenFilterSet
_richTextDataList
_richTextParentInfo
_richTextTableReference
_rightColumnStrokes
_rightSingleQuotationMark
_rightSingleQuotationMarkEscaped
_rightStroke
_rightStrokeOrder
_root
_rowColumnInfo
_rowForColumnIndexesWithMerges
_rowGroupLevel
_rowGroupings
_rowHeaderStorage
_rowHeights
_rowHiddenStateExtent
_rowIdList
_rowIndex
_rowInfos
_rowLookupKeysForFormat
_rowMarkIndex
_rowOrColumnUids
_rowOrColumnUuids
_rowOrderChangedCoord
_rowOrderChangedIgnoringRecalcCoord
_rowRegion
_rowRemainDup
_rowStrokeExportCache
_rowToStrokeHeightCache
_rowUIDIndexList
_rowUIDToColumnUIDSetMap
_rowUIDsWithPendingGroupingChanges
_rowUidLookupList
_rowUids
_rowUidsIndexSet
_rowsInvalid
_rowsUserVisible
_rowsVisible
_rules
_runAggrForAggIndex
_runningInBackground
_runningTotalGroupingColumnUid
_saveAsEmbiggenedFormat
_sawGroupingChangeNeedingReset
_scaleToFit
_scaledLayout
_searchFlags
_searchMask
_searchReferenceRange
_searchSelectionBounds
_searchableIDMap
_searchableUIDMap
_secondsToAdd
_segments
_selected
_selectionDragAbortedOnNewSelection
_selectionType
_selectionUsesBezierPath
_selectsCellOnInitialTap
_sem
_serverReachability
_set
_setCell:atCellID:tableUID:calculationEngine:conditionalStyleOwner:ignoreFormula:clearImportWarnings:richTextDOLCHint:
_setCellBordersFlatteningFromComplexInfo:sourceRegion:
_setNeedsDisplay
_setRowInfo:atTileRowIndex:
_shallowCopy
_sharedQueue
_sheetName
_sheetNameUnquoted
_shiftRowsDownAtIndex:count:
_shiftRowsUpAtIndex:count:
_shipVersion
_shouldCleanGraphForConsistencyViolation
_shouldFastPathMeasureFitWidth
_shouldPerformDetectAndRepairConsistencyViolations
_shouldRepositionStockPopover
_shouldSkipNextAsyncSort
_shouldUseWideRows
_shouldWrap
_shouldZoomOutOnEndEditing
_showAsType
_showGeometricAsBase
_showReferenceHighlightsOnFormulaCellSelection
_showsCellEditingToolbar
_showsCellOverflowIndicator
_showsCellWarningIndicator
_showsChromeWhileEditingCell
_showsHideUnhideUI
_showsSelectionKnobsWhileEditingCell
_shuffleMap
_singleCurlyQuoteCharacterSet
_singleQuoteCharacterSet
_singleQuoteOrWhitespaceCharacterSet
_size
_sizeOfText
_skipRepairBadRefsOwnerUID
_sortOrder
_sortRuleReferenceTracker
_sortRuleReferenceTrackerOwnerUID
_sortedColumnUids
_sortedRowUids
_sortingAggregateRuleUid
_sourceCellRange
_sourceColumnCount
_sourceData
_sourceRectOrigin
_space
_spanningColumnDependencies
_spanningColumns
_spanningRowDependencies
_spanningRows
_spareFormatType
_spillMajorStrokeLayer
_spillMinorStrokeLayer
_spillStrokeColumns
_spillStrokeLayer
_spliceRows:atIndex:
_srcRegion
_srcUidForDstUid
_startCellRef
_startColumnIndex
_startRowIndex
_startTime
_startWithFirstItem
_state
_stockDetails
_storage
_storageVersionPreBNC
_storeMap
_straightQuote
_straightQuoteEscaped
_stringCount
_stringForInternalCellRef:
_stringManipulator
_stringTableReference
_stringValue
_strings
_stringsInHeaderCells
_strokeRegion
_strokeRuns
_strokeSidecar
_strokeTypeToLayerMap
_strokeTypeToLayerStackMap
_strokesDefaultVendor
_strokesRWLock
_strongCellStyle
_strongReferences
_strongRefs
_strongTextStyle
_structuredTextImportConfidenceThreshold
_structuredTextImportConfidenceThresholdForCanvas
_structuredTextImportSizeLimit
_style
_styleApplyClearsAll
_styleCount
_styleDataList
_styleNetwork
_styleProviderStack
_styleProvidingSource
_styleTableReference
_stylesheet
_summaryAndLabelRowIndexes
_summaryCellVendor
_summaryColumnGroupUids
_summaryColumnIndexes
_summaryColumnToViewColumn
_summaryDataListCache
_summaryDataStore
_summaryFilteredIndexes
_summaryHiddenByUid
_summaryMap
_summaryModel
_summaryPivotHiddenIndexes
_summaryRow
_summaryRowGroupUids
_summaryRowHeightList
_summaryRowIndexes
_summaryRowToViewRow
_supportsActionMenu
_supportsAddBodyRowAtBottomSiriKitIntent
_supportsAutoResizedTables
_supportsAutofill
_supportsAutomaticNumberKeyboard
_supportsBidiTablesUI
_supportsCategorization
_supportsCellCommentsActivityLines
_supportsComplexReorganizeUI
_supportsContainedTextEditing
_supportsControlCells
_supportsCopySnapshot
_supportsCreateChartFromSelection
_supportsDragDropMoveMode
_supportsDynamicallyHidingRowColumnForDragDrop
_supportsFormulaEditing
_supportsFrozenHeaders
_supportsHiddenCells
_supportsImplicitEditing
_supportsInlineAttachments
_supportsMergedCells
_supportsPivotTables
_supportsPlaceholderGeometry
_supportsQuickFilterUI
_supportsRepeatHeaderRowsOnEachPage
_supportsRowColumnAdderKnob
_supportsRowMovesInPaginatedTables
_supportsStockUI
_supportsTableColumnAutocomplete
_supportsTableTranspose
_supportsiOSContextMenuItemForEvenlyDistributedColumns
_supportsiOSContextMenuItemForEvenlyDistributedRows
_supportsiOSContextMenuItemForWrappedText
_suppressApplyValue
_suppressAutomaticNamedReferenceInvalidation
_suppressIdenticalEndReference
_suspendNotify
_syncReferenceHighlightState
_syntaxError
_tabAtEdgeAddsColumn
_tabAtEdgeAddsRow
_tabWhileEditingNavigates
_table
_tableChrome
_tableDefaultFontHeightForArea
_tableDefaultFontHeightsAreValid
_tableEnvironment
_tableHasStrongOwnership
_tableInfo
_tableIsLTR
_tableModel
_tableName
_tableNameBorderEnabled
_tableNameBounds
_tableNameChangeDistributor
_tableNameEditingStorage
_tableNameEnabled
_tableNameEnabledInNewTables
_tableNameHeight
_tableNameHeightCache
_tableNameHeightValid
_tableNameSelection
_tableNameShapeStyle
_tableNameTextEngineDelegate
_tableNameUnquoted
_tableOffset
_tableProvider
_tableRange
_tableRepIsBeingRemovedFromBackgroundLayout
_tableResolver
_tableRowsBehavior
_tableStyle
_tableStyleIndexes
_tableStylePreset
_tableTranslatorBaseMapForPasteboard
_tableTranslatorViewMapForPasteboard
_tableUID
_tableUIDInfo
_tableUIDMap
_tableWidth
_tablesByTableNameByContainerName
_taggedList
_targetCellRange
_tempSummaryCell
_tempUpgradePresetID
_tempWPColumnCache
_temporaryContext
_temporaryFullwidthApostropheString
_temporaryRightSingleQuoteString
_temporaryStraightQuoteString
_terminateRegionIterator
_terminated
_textFormat
_textFormatID
_textImportRecord
_textMeasurerBundle
_textStyle
_textStyleHandle
_textStyleHandles
_textStyleID
_textStyleReferences
_textStyleToFontHeight
_textStyles
_third
_thresholdCellValues
_tile
_tileColumnBegin
_tileForID:createIfMissing:
_tileForLazyReference:
_tileFromGroupForTileID:
_tileGroups
_tileIDSet
_tileLock
_tileRowBegin
_tileRowIndex
_tileStorage
_tiles
_tilesPerRow
_tilesToConsiderSplitting
_timeout
_timeoutInterval
_timer
_toDirtyCellRefs
_toDirtyDependentsOnlyCellRefs
_toDirtyInternalCellRefs
_toDirtyOwnerIds
_toDirtyRangeRefs
_toInternalOwnerID
_toUpdateDirtyPrecedentCountCellRefs
_tokenAttachment
_tokenizeFormulaStringLiterals
_topBorderRowRange
_topLeftCoord
_topRowStrokes
_topStroke
_totalSecsSinceReferenceDate
_trackedReferences
_trackedRefsLock
_trackedRefsStore
_tract
_tractRef
_trailingEmptyCellCount
_trailingWhitespace
_transaction
_transform
_transformFromCanvas
_transformFromDevice
_transformToCanvas
_transformToDevice
_translationFlags
_translator
_transposedBodyRange
_trimNames
_tspSemaphore
_type
_uidBased
_uidCoords
_uidCoordsPerRunLevel
_uidCoordsPerTuple
_uidRange
_uidRanges
_uidRectRef
_uidTractList
_uids
_uidsCollapsed
_uidsExpanded
_unarchivedCellRecords
_uncompressedCellUIDs
_unfairLock
_uniqueObjectUID
_uniqueValueToRowIndexes
_uniqueValueToRowUids
_uniqueValuesByColumnUid
_uniqueValuesLock
_units
_unusedKeySet
_updateEditorRemainders
_updateQueue
_updatedGroupNodeToPrevious
_updatedGroupNodeUids
_updatedLevel
_upgradeFromTileIDMap:referenceMap:
_upgradeRepairedTiles
_upgradeRowUidsForFormat
_upgrading
_upgradingToSubOwnerUIDs
_useAllSpareFormats
_useBandedFill
_useReverseMap
_useSymbolicNames
_useWholeTableForInsertionDependencies
_usedSymbolicName
_userHidden
_userHiddenIndexes
_userVisible
_usesLimitedAutomaticFormatParsing
_usesLimitedNumberFormatInspector
_usesOnlyFixedCoords
_usesSelectionChromeResizer
_uuid
_uuidSet
_uuidsByCoord
_valid
_validCells
_validateCustomFormatWrapper:
_value
_valueDouble
_valueForCoord
_valueGrid
_valueID
_valueObject
_valueType
_valuesForDimension
_valuesForRunningAggregatePerRunDirectionUid
_variationLock
_variationMap
_verticalAlignment
_viewCellRect
_viewColumnIndexesInCurrentRow
_viewColumnToBaseColumn
_viewColumnToSummaryColumn
_viewColumns
_viewIndex
_viewIndexesMutex
_viewMap
_viewMapVersionCounter
_viewOrderUids
_viewRowToBaseRow
_viewRowToSummaryRow
_viewRows
_viewScale
_viewTractRef
_viewUidMapper
_visible
_visibleFillKnobs
_visibleFrameForOverscrolledChildFrame:
_visibleIndexSet
_volatileDependencies
_warningSetForCoordinate
_warningSetsForUndo
_wasConstructedViaNames
_wasQuoted
_wasRemovedFromDocument
_wasUnarchivedFromAProvidedTable
_weakTrackedRefsStore
_whitespaceAfter
_whitespaceAfterDelimiter
_whitespaceAfterDelimiters
_whitespaceAfterEquals
_whitespaceAfterFunctionName
_whitespaceAfterIdentifier
_whitespaceAfterLeftParen
_whitespaceAfterLet
_whitespaceAndNewlineCharSet
_whitespaceBefore
_whitespaceBeforeFirstChild
_whitespaceCharSet
_whitespaceToBreakAt
_wholeOwnerDependencies
_width
_widthFactor
_widthHeightCache
_widthHeightCollections
_willModifyWasCalled
_wordFragmentsList
_workerQueue
_wpColumn
_writingDirection
_yankRowRange:
_year
_zoomOperationIsInProgress
_zoomToEditOperationIsInProgress
_zoomToEditVisibleCellRange
abbreviatedNumberForAttribute:atLocale:
abortError
abortObject
absoluteCellTractRefForHostCell:
absoluteCellTractRefForHostCell:offTable:
absoluteGroupUid
absoluteRuleIndicesForColumn:inTable:
acceptVisitor:
accessController
accessorModeForArgumentIndex:
accumulate:
accumulateBordersConcurrentlyUsingBlock:accumulateCellsConcurrentlyUsingBlock:
accumulateCellBordersConcurrentlyInRow:atColumns:
accumulateCurrentCellsConcurrently:
accumulateCurrentCellsConcurrentlyAtColumns:usingCellCreationBlock:
accumulateCurrentCellsConcurrentlyInRow:rowInfo:atColumns:usingCellCreationBlock:
accumulateValue:
accumulator
actionByExpandingWithAction:
actionForLayer:forKey:
active
activeFlatteningDimension
activeTokenCharIndex
activeUidTract
activityLineUnscaledEndPointForSearchReference:
actualHeaderColumnRange
addAggNode:
addAggregator:
addAllFormulasCleanObserver:
addAnnotation:withAnchorRange:
addAnnotation:withFormula:atIndex:
addAnnotation:withFormulaObject:atIndex:
addCalculationStateObserver:
addCell:
addCell:andCellID:
addCell:andCellUID:
addCell:atIndex:
addCell:atUidOffset:
addCell:atViewCellCoord:
addCellCoord:referringToCategoryRef:
addCellCoord:referringToTableUID:
addCellCoord:referringToTableUID:forColumnRowUuid:
addCellCoordinate:
addCellDiff:andCellID:
addCellDiff:andCellID:avoidCopy:
addCellDiff:andCellUID:
addCellDiff:andCellUID:avoidCopy:
addCellDiffs:atCellUIDs:
addCellFormat:atSuggestedKey:callWillModify:
addCellRange:
addCellRef:forUuid:
addCellRef:usingCategoryRef:
addCellRefToCheck:
addCellRefToClearError:
addCellRegion:withColumnUIDs:rowUIDs:
addCellState:
addCellUID:
addCellUID:flags:addingMaximumSize:
addCellUIDRanges:
addCellUIDs:
addChangeDescriptor:
addChangeDescriptorWithType:andCellRange:
addChangeDescriptorWithType:andCellRange:andStrokeRange:
addChangesTo:forDemotingValueAtLevel:toLevel:
addChangesTo:forPromotingValueAtLevel:toLevel:
addChangesTo:forRemovingValueAtLevel:
addChangesTo:forReplacingValue:atLevel:
addCharactersInRange:
addCharactersInString:
addChild:
addChild:skipWillModify:
addChild:withKey:
addColumn:
addColumns:
addCommentStorage:atSuggestedKey:callWillModify:
addComponent:
addConditionalStyleSet:atSuggestedKey:callWillModify:
addControlCellSpec:atSuggestedKey:callWillModify:
addCustomFormat:oldKey:fuzzyNameMatching:
addCustomFormatForUpgrade:legacyKey:
addDataField:withValue:
addDependencyRow:
addDependentWithCellID:forOwner:
addEdge:forOwner:
addEntriesFromDictionary:
addFieldValue:
addFinalTexture:forStage:
addFinalizeHandler:
addFittingHeight:forCellID:
addFittingWidth:forCellID:
addFormula:
addFormula:atCellRef:
addFormula:atSuggestedKey:callWillModify:
addFormulaError:atSuggestedKey:callWillModify:
addFormulaForConditionalStyle:atCellID:
addFormulaIndex:
addFormulaObject:atCellRef:forOwnerKind:
addFormulaString:atCellRef:
addGroupByInSortedOrder:
addHeadMergeAction:
addIdentifierComponent:
addImportWarningSet:atSuggestedKey:callWillModify:
addInProgressCalcCellRefs:
addIndex:
addIndexes:
addIndexesInRange:
addIterator:
addMergeActions:
addMultipleChoiceListFormat:atSuggestedKey:callWillModify:
addNestedRewrite:
addObject:
addObject:willModify:
addObjectsFromArray:
addObserver:
addObserver:selector:name:object:
addOperationWithBlock:
addPasteboardCustomFormatsToDocumentAndTableReturningBadIDs
addPasteboardCustomFormatsToDocumentAndUpdateCells
addPendingCellRemovalAt:
addPointer:
addPrecedentWithCellID:forOwner:
addPrecopiedCell:
addPrecopiedCells:andCellUIDs:
addProperties:
addRange:
addRange:height:paddingInsets:isCheckbox:
addReceiver:
addReceiverIfMissing:
addReceiverToGroupBy:
addRect:fromCoord:
addReferencedStylesToSet:
addReferencesFromObject:
addRegion:
addRelativeColumn:
addRelativeColumnRange:
addRelativeRowRange:
addRemoteDataInterest:
addRemoveOfGroupUid:
addRenderable:forStage:
addRewrittenCellAt:
addRichText:atSuggestedKey:callWillModify:
addRowColumnRuleValuePair:valueUid:
addRowRange:
addRowUid:
addRows:
addRule:atGroupLevel:
addRule:atIndex:
addRules:inFilter:
addSmartField:toRange:dolcContext:undoTransaction:
addString:atSuggestedKey:callWillModify:
addStyle:
addStyle:atSuggestedKey:callWillModify:
addStyle:withIdentifier:
addStyle:withParent:identifier:shouldDoDOLC:
addSubOwnerAliasesForUpgrade:
addTSTCanvasReferencesToSet:inRangeContext:withColorHelper:preferringNodesFromStorage:allVisitedNodes:
addTable:
addTableStyleIndex:
addToExcludedTractUids:isRows:
addToExcludedUidsTractColumnUids:
addToExcludedUidsTractRowUids:
addToIncludedUidsTractColumnUid:rowUid:
addToIncludedUidsTractColumnUids:rowUids:
addToIncludedUidsTractColumnUids:rowUids:isRangeRef:preserveRectangularRange:
addTractAtFront:
addUUID:
addUUIDs:
addUidCoord:atRunningLevel:
addUidCoord:tupleForCoord:atRunningLevel:
addUseOfFunctions:atCellRef:
addUuidsFromSet:
addUuidsFromSetReturningAdded:
addUuidsFromVector:
addValue:function:evaluationContext:
addValuesForDimension:
addValuesFromMap:
addValuesFromPropertyMap:
addVariablesMatchingPrefix:forFormulaIndex:toDictionary:symbolTable:
addWarning:atCellRef:
additionalObjectsToCopy
adjustGridColumnForVisibility:isLeft:
adjustGridRowForVisibility:isTop:
adjustIndexesBy:
adjustRect:forScrollingToSelectionPath:forZoom:
adjustRelativeIndexesBy:
adjustViewTractRef:calcEngine:containingCellRef:undoTractList:
adjustedInsetsForTarget:
adoptStylesheet:withMapper:
adoptStylesheet:withMapper:ownerUID:conditionalStyleOwner:
adoptStylesheet:withMapper:supportsInlineAttachments:
advanceToCellID:
affectedConditionalStyleOwnerUID
affectedOwnerUID
affectedOwnerUIDs
affectedRange
affectedRangeForInsertRows
affectedRangeForMoveRows
affectedRangeForRemoveRows
affectsCellBorders
afterMatch
afterReplacingReferencedStylesSetStylesheet:
aggNodeForAggFormulaCoord:
aggNodeForColumnUid:
aggNodeForGroupNode:
aggNodes
aggrIndexLevel
aggregateAtIndex:
aggregateFieldName
aggregateForUidCoord:
aggregateFormulaOwner
aggregateFormulaOwnerUID
aggregateFunction
aggregateIndex
aggregateIndexForAggName:locale:
aggregateIndexForColumnIndex:
aggregateIndexForColumnUid:
aggregateIndexForRowIndex:
aggregateIndexForRowUid:
aggregateIndexForUidCoord:
aggregateIndexLevel
aggregateLabelForCategoryRef:
aggregateRangeRefForCategoryRef:
aggregateRefForType:atLevel:forColumnUid:
aggregateRefOnValue:forColumnUid:forType:atLevel:
aggregateRuleUid
aggregateType
aggregateTypeForAggregateLabel:locale:
aggregateTypeForCategoryRef:
aggregateTypeForColumnUID:atGroupLevel:
aggregates
aggregatesOnLevel:
aggregator
aggregatorForColumn:
aggregators
alignStrokeCoordinatesOfBeginPoint:endPoint:width:
alignedContentFrameForGridRange:
alignedFrame
alignedFrameForGridRange:
alignedMaskStrokeFramePathForTransform:cornerRadius:
alignedOverrideFrameForGridRange:strokeWidthOverride:
alignedRectForLayoutRect:
alignedStrokeFrame
alignedStrokeFrameForRange:
alignedStrokeFrameForTableNameBorder
alignedStrokeFramePathForGridRange:frameType:viewScale:inset:reoriginToZero:clipToVisibleRect:cornerRadius:outMaskPath:
alignedStrokeFramePathForGridRange:transform:inset:reoriginToZero:cornerRadius:
alignedStrokeFramePathForRange:frameType:viewScale:inset:reoriginToZero:clipToVisibleRect:cornerRadius:outMaskPath:
alignedStrokeLineForColumnGridRange:
alignedStrokeLineForRowGridRange:
alignedStrokeLinePathForColumnGridRange:transform:inset:reoriginToZero:cornerRadius:
alignedStrokeLinePathForRowGridRange:transform:inset:reoriginToZero:cornerRadius:
alignmentFrame
allAggsInGroupRootFormulaCoord
allAnnotations
allBodyValuesAsPregArgDataListForColumnIndex:
allCellCoords
allCellDependenciesAsString
allCellsAreClean
allCellsAreCleanNonBlocking
allColumnGroupUIDs
allColumnGroupUids
allColumnUIDsAtGroupLevel:withFilter:
allColumnUids
allCondStyleFormulasForTable:
allFormulaCellsAreClean
allFormulaCoordsInOwner:
allFormulaOwnersAsString
allGroupNodeUids
allGroupRoots
allHeaderCellRefsLimitedToTable:
allLocalizedFunctions
allMergesAsString
allObjects
allOwnerKinds
allOwnersRegistered
allProperties
allQuotes
allRangeDependenciesAsString
allRefResolverOwnerUIDs
allRemoteData
allRequestedKeys
allRichTextStorages
allRowUIDsAtGroupLevel:withFilter:
allRowUids
allSpecifiers
allSymbols
allTrackedReferences
allValidMergesForMergeList:
allValues
allocWithZone:
allowFreeformFormulaText
allowHorizontalAutoresize
allowRegistrationOfAggFormulas
allowSpanningColumnReferenceBodyQualifier
allowTableName
allowUnarchivingObjectClass:
allowWhitespaceInFormulas
allowsBlackDragDropBackground
allowsCaption
allowsFullyFilteredTables
allowsKeyCommandCaching
allowsTitle
alphaComponent
alphanumericCharacterSet
alternateForVersion:
alwaysStartsNewTarget
amendRewriteWithCalcEngine:
anchorCellID
anchorCellUID
anchoredToText
angle
animationController
animationStack
annotationDisplayStringType
annotationType
annotationUUID
annotationWithUUID:
annotations
annotationsContainedByRegion:
annotationsStartingInRange:
anyAggregateTypeForColumnUID:
anyAggregator
anyCellBordersInThisRow
anyCollapsed
anyHeaderNameChangedPrecedentForTableUID:
anyHidden
anyHiddenColumnsInCellRange:
anyHiddenColumnsInCellRange:forAction:
anyHiddenInRange:
anyHiddenInRange:forAction:
anyHiddenIndicesInRange:
anyHiddenRowsInCellRange:
anyHiddenRowsInCellRange:forAction:
anyObject
anyRef
anyRefForRangeForHeaderCell:usePreserveFlags:
anyReference
anyResolver
anyRowsUserHiddenInCellRange:
anyTableForTableName:
anyUserHidden
appendBezierPath:
appendCellDiffMap:
appendCellLists:
appendCellMap:precopied:
appendCellUIDRange:
appendColumnUid:rowUid:
appendExternalTableUIDs:groupByUIDs:
appendFormat:
appendIndexedFormula:
appendNodeArray:
appendRules:
appendString:
appendStroke:inRange:order:
appendToLastComponent:
applicationDidBecomeActive:
applicationWillResignActive:
applyBlockToAllCells:
applyCellDiff:atCellUID:migrationMap:inverseCellDiff:defaultCellStyle:defaultTextStyle:
applyCellDiffMap:migrationHelper:updateProperties:
applyCellMap:outPrunedCellMap:outInverseCellMap:options:stylesContainer:
applyCellValue:atUidCoord:appendTotalForPivotsFlag:
applyCollapseExpandState:outUndoState:
applyColumnTotalWidth:
applyConcurrentCellMapToBaseTable:options:requestInverseMap:requestPruneMap:stylesContainer:migrationHelper:
applyFixedHeight:
applyFixedWidth:
applyFormula:atUidCoord:
applyFormulaResult:
applyFormulaResult:context:hasWarnings:outWriteDidBeginOrEndWithTextCell:propagateCheckboxesAndRatings:
applyGroupingColumns:
applyMap:toRows:
applyMappingToIndexSet:
applyPivotWithColumns:rows:aggregates:flatteningDimension:optionsMap:pivotRowColumnRuleChangeUid:pivotAggregateRuleChangeUid:
applyPopupChoiceIndex:
applyResizeHeightFactor:
applyResizeWidthFactor:
applyRowTotalHeight:
applyStroke:atIndexes:order:applyStroke:atIndexes:order:applyStroke:atIndexes:order:applyStroke:atIndexes:order:applyStroke:atIndexes:order:
applyToCell:
applyWritingDirection:toCell:cellID:
archivedHintClass
archivedLayoutEngineBundle
archivedSelectionClass
archivingCompatibilityVersion
areAnySet
areMapsStale
area
argIndex
argIndex1
argIndex2
argIndex3
argSpecWithType:accessorMode:rangeContext:
argSpecWithType:accessorMode:rangeContext:argumentContext:
argSpecWithType:accessorMode:rangeContext:argumentContext:disallowedTypes:referenceForGeometryOnly:
argSpecWithType:accessorMode:rangeContext:argumentContext:minValue:minInclusive:maxValue:maxInclusive:isInteger:disallowedTypes:disallowDuration:disallowCurrency:modeValues:defaultModeIndex:referenceForGeometryOnly:forceArrayMode:
argSpecWithType:accessorMode:rangeContext:disallowedTypes:disallowDuration:disallowCurrency:
argSpecWithType:accessorMode:rangeContext:minValue:minInclusive:maxValue:maxInclusive:disallowedTypes:disallowDuration:disallowCurrency:
argSpecWithType:accessorMode:rangeContext:modeValues:defaultModeIndex:
argsAscending
argumentIndex
argumentName
argumentSpec
argumentSpecForFunctionIndex:argumentIndex:
argumentSpecForIndex:
arguments
array
arrayByAddingObject:
arrayByAddingObjectsFromArray:
arrayOfChunkRocks
arrayOrListNode:
arraySegmentClass
arrayWithCapacity:
arrayWithObject:
arrayWithObjects:
arrayWithObjects:count:
arrowKeyAtEdgeWhileEditingNavigates
arrowKeysNavigateWhenEditingBeganByTyping
arrowKeysWrap
asBaseFormat
asCellCoordSet
asChooserControlSpec
asCurrencyFormat
asCustomFormatWrapper
asDateTimeFormat
asDurationFormat
asFormulaSpec
asFractionFormat
asLegacyCustomFormat
asMultipleChoiceListFormat
asNumberFormat
asRangeControlSpec
asStepperSliderFormat
asToggleControlSpec
aspectOperationIsInProgress
assertAt:nonCalcEngineException:evaluatingFormula:
assertCollaborationConvergence
assertDirtyPrecedentsCountConsistency
assertIsNotIterating
assertListRows
assertListTilesAndRows
astNodeArrayCopy
asyncPostTextChangedInRange:
attachedToBodyText
attachmentAtAttachmentIndex:outCharIndex:
attachmentAtCharIndex:
attachmentCellLayoutForCellID:optionalCell:
attachmentCellRepForCellID:optionalCell:
attachmentCellStorageToLayoutMap
attachmentIndexRangeForTextRange:
attribute
attributeArrayForKind:
attributeArrayForKind:withCreate:
attributes
auditColumnRowCellCountsReturningResult:hasUndercounts:
auditDatalistDuplicationReturningResult:
auditRowInfoCellCountsReturningResult:
auditTilesForRowOverlapAndExtensionPastTableBounds:result:
auditTilesForRowOverlapAndExtensionPastTableBounds:withDataStore:result:
author
autoCompleteQuotesWithInput:completion:
autoListRecognition
autoListTermination
autoNumberAttachmentError
autofillSelection
autofillSelectionWithSourceCellRange:
autofillSelectionWithSourceCellRange:targetCellRange:
automaticMaxAndMinDurationUnitsForTimeInterval:
autorelease
autosizeFlagsForTextLayout:
autosizedFrameForTextLayout:textSize:
auxRowColumnInfo
availableCurrencyCodes
avgAValue
avgValue
backTabWraps
backgroundFill
backwardCompatiblePrePivot
backwardCompatibleToPrePivot
badgeType
badgeWithType:color:viewScale:frame:
bakeFormulaToValue
bakeFormulas
bakedString
bakedValue
bandedFillIsValid
bandedFillObject
base
baseBottomRightCoord
baseCellCoord
baseCellCoordForCellContainingRichTextStorage:
baseCellCoordForCellUID:
baseCellCoordForChromeCellCoord:
baseCellCoordForViewCellCoord:
baseCellRef
baseCellRefForChromeCellRef:
baseCellRefForViewCellRef:
baseCellRegionForUIDRange:
baseCellRegionForViewCellRect:
baseCellRegionForViewCellRegion:
baseCellUIDRegion
baseColumnGroupUids
baseColumnIndexForChromeColumnIndex:
baseColumnIndexForColumnUID:
baseColumnIndexForFilterRuleInTableModel:
baseColumnIndexForGroupingAtColumnIndex:
baseColumnIndexForGroupingAtRowIndex:
baseColumnIndexForViewColumnIndex:
baseColumnIndexesForChromeColumnIndexes:
baseColumnIndexesForUIDs:
baseColumnIndexesForViewColumnIndexes:
baseColumnIndices
baseColumnIndicesForRulesInTable:
baseColumnUids
baseCoordFromViewCoord:
baseDataListCache
baseDataStore
baseFormat
baseFormatID
baseHeaderColumnsForCell:
baseHeaderRowsForCell:
baseIndex
basePlaces
basePreserveFlags
baseRangeRef
baseRangeRefs
baseRegion
baseRowGroupUids
baseRowIndex
baseRowIndexForChromeRowIndex:
baseRowIndexForRowUID:
baseRowIndexForViewRowIndex:
baseRowIndexesForChromeRowIndexes:
baseRowIndexesForUIDs:
baseRowIndexesForViewRowIndexes:
baseRowUids
baseShuffleMapForViewShuffleMap:
baseStyleForVariation
baseTableModel
baseTableUID
baseTile
baseTileRange
baseToViewPreserveFlagsAreInverted
baseTopLeftCoord
baseTractRef
baseTractRefForChromeTractRef:
baseTractRefForViewTractRef:
baseUseMinusSign
baselineOfLineFragmentAtIndex:
baselineOffset
beforeColumnRowUIDMap
beforeCountValue
beforeRewriteMap
beginBatchingGroupCellDirtying
beginCheckboxCell:
beginDeferringRebuildFormulas
beginDynamicMode:
beginImplicitEditing
beginIteration
beginRatingCell:
beginTableCell:withCellID:cellHasContents:cellIsPrimary:
beginTableChunk:
beginTableLayoutSpace:
beginTableNameForChunk:
beginTableRow:
beginTrackingNameInCell:ofTableUID:addingTrackedReferencesTo:
beginTrackingNamesInTable:
beginTrackingNamesInTable:limitedToRange:
beginTrackingNamesInTableForLegacyNRM:
beginTrackingReference:
beginTrackingReference:calcEngine:
beginTrackingReferenceWithCellRef:
beginTrackingReferenceWithCellRef:calcEngine:
beginTrackingReferenceWithSpanningRef:
beginTrackingReferenceWithSpanningRef:calcEngine:
beginUpgradingFormulasMode
bezierPathForGridRange:transform:inset:reoriginToZero:
bezierPathWithContinuousCornerRoundedRect:cornerRadius:
bezierPathWithLegacyRoundedRect:cornerRadius:
bezierPathWithRect:
bezierPathsForCellRegion:selectionMask:transform:viewScale:inset:clipToVisibleRect:cornerRadius:block:
binaryUnitPrefixForChars::
blackColor
blank
blockUntilCompleted
blockUntilRecalcIsCompleteWithTimeout:
blockingIdentifier
bncStorageBufferExists
bodyBoundingRangeForBaseLevel
bodyCellStyle
bodyColumnCoordinates
bodyColumnStroke
bodyFill
bodyGroupingList
bodyPivotDeEmphasisHorizontalStroke
bodyPivotGroupHorizontalStroke
bodyPivotGroupVerticalStroke
bodyRange
bodyRangeForLowestLevelGroupEnclosingCellAtCellID:
bodyRangeOfTable
bodyRowCoordinates
bodyRowRange
bodyRowStroke
bodyRowStrokeEvenIfNotVisible
bodyRowUidsForCategoryRef:atRowUid:ordered:
bodySideBorderColumnRange
bodyTextStyle
boolCount
boolForKey:
boolTrueCount
boolValue
boolValueForSetProperty:
boolean:argIndex:evaluationContext:
booleanForFunction:argumentIndex:warningReportingContext:
booleanFormat
booleanValue
bootstrapPresetsOfKind:inTheme:alternate:
bootstrapPresetsOfKind:inTheme:alternate:reservedCount:
bottomBorderRowRange
bottomCornerRange
bottomInset
bottomRight
bottomRightCellCoord
bottomRowStrokes
bottomStroke
bottomStrokeLayer
bottomStrokeOrder
boundSymbol
boundingBottomRightCellID
boundingCellRange
boundingModelCellRect
boundingRange
boundingRangeRef
boundingTopLeftCellID
boundingViewCellRect
bounds
boundsForCellSelection:
boundsOfLineFragmentAtIndex:
boundsRectForSelection:columnArray:includeRuby:includePaginatedAttachments:
boxedDefaultValueForProperty:
boxedObjectForProperty:
boxedValueForProperty:
boxedValueForProperty:oldBoxedValue:transformedByTransform:
briefDescription
brightnessComponent
buildASTNodeArray:hostCell:
buildASTNodeArray:hostCell:symbolTable:
bundle
byteSizeForArchiving
bytes
cache
cacheHintID
cacheIsValid
cacheWidth:ofColumn:
cacheWithDataStore:
cacheWithTableInfo:
cachedAlignedFrame
cachedAlignedStrokeFrame
cachedAllAnnotations
cachedAutoSizeFlags
cachedAutosizedFrame
cachedBaseRegion
cachedBaseRegionVersionCounter
cachedCellID
cachedCellRegion
cachedCellRegionVersionCounter
cachedColumnUIDs
cachedCommentHostingForAnnotationUUID:
cachedFrame
cachedImage
cachedImageScreenScale
cachedIndexSetsAreValid
cachedIndexes
cachedIndexesForLabelRows
cachedIndexesForLeadingColumns
cachedIndexesForLeadingRows
cachedIndexesForLeadingSummaryRows
cachedIndexesForSummaryAndLabelRows
cachedIndexesForSummaryColumns
cachedIndexesForSummaryRows
cachedIndexesUnfairLock
cachedIsValidReference
cachedLabelRowIndexesAtLevels
cachedLeadingColumnIndexesAtLevels
cachedLeadingSummaryColumnIndexesAtLevels
cachedLeadingSummaryRowIndexesAtLevels
cachedMaskRect
cachedMaskSpillRange
cachedMaxNumberOfColumns
cachedMaxNumberOfRows
cachedMergeRange
cachedNumberOfColumns
cachedNumberOfFooterOrGrandTotalRows
cachedNumberOfFooterRows
cachedNumberOfHeaderColumns
cachedNumberOfHeaderRows
cachedNumberOfRows
cachedPadding
cachedParagraphAlignment
cachedPivotIndexSetsAreValid
cachedQuoteForSingleSymbol:
cachedQuoteForSymbol:
cachedQuotes
cachedRowUIDs
cachedSegment
cachedSpecifiers
cachedStocks
cachedStrokeFrame
cachedSummaryColumnIndexesAtLevels
cachedTableNameHeight
cachedValue
cachedValueWasFetchedWithRichTextAttributes
cachedVerticalAlignment
calcEngine
calcEngineRegistrationObject
calculateCellRangeForNextPartition:nextPartitionRange:additionalHeightForCaption:availableSizeRemaining:previousHint:
calculatePointFromSearchReference:
calculatePointFromSearchReferenceWithoutValidation:
calculatedTableNameHeight
calculatedTableNameHeightIncludingDynamicResize:
calculationEngine
canAddRules
canAspectRatioLockBeChangedByUser
canBeNested
canBeStoredInAStringValueCell
canBeVendorStorageUid:
canCommentInCaptionOrTitle
canDowngradeForPrePivotFormat
canDrawInParallel
canEditWithCellSubselectionInTable:
canEditWithControlCellSubselectionInTable:
canEditWithStockCellSubselectionInTable:
canEliminateLargestCommonSubexpressionWithSymbolTable:
canFetchKey:
canMixWithNilObjects
canModify
canPartitionForPrinting
canPartitionInline
canQuicklyMeasureParagraphStyle:
canQuicklyMeasureString:textMeasurerBundle:
canRotateChildLayout:
canSimplify
canTranspose
candidateFormatForSliderStepperControlWithIsCurrent:
canonicalCellReferenceForReference
canonicalKeyString
canonicalKeyStringAtLevel:
canonicalUnitForDimension:
canvas
canvasBoundsForCellRange:
canvasFrame
canvasFrameForCellRange:
canvasFrameForGridRange:
canvasPointForLayoutPoint:
canvasPositionForGridColumn:
canvasPositionForGridRow:
canvasRectForLayoutRect:
canvasReferenceController
canvasReferenceProvider
canvasShouldScrollForSelectionPath:
canvasStrokeFrame
canvasStrokeFrameForGridRange:
canvasVisibleRect
capitalizeWithUndoTransaction:locale:
capitalizedString
captionEdgeInsets
captureAnyCategoryRefsForViewRegion:atLevel:asSpanning:
captureCategoryLabelRefsForViewRegion:atLevel:asSpanning:forRows:
captureCategoryRefsForViewRegion:atLevel:asSpanning:
captureCategoryRefsFromIterator:atLevel:asSpanning:
captureDynamicResizeInfo
captureNewMinimumRowHeights:
capturedColumnWidthTotal
capturedInfoPositionForAttachment
capturedRowHeightTotal
capturedTableSize
cascadedStyleWithIdentifier:
caseInsensitiveCompare:
categoriesCellProperties
categorized
categoryAggregateType
categoryAggregatesOwnerUID
categoryColumnIndex
categoryColumnRange
categoryColumnWidth
categoryColumnsCellRange
categoryLevel1BottomStroke
categoryLevel1CellStyle
categoryLevel1InteriorStroke
categoryLevel1LabelSeparatorStroke
categoryLevel1TextStyle
categoryLevel1TopStroke
categoryLevel2BottomStroke
categoryLevel2CellStyle
categoryLevel2InteriorStroke
categoryLevel2LabelSeparatorStroke
categoryLevel2TextStyle
categoryLevel2TopStroke
categoryLevel3BottomStroke
categoryLevel3CellStyle
categoryLevel3InteriorStroke
categoryLevel3LabelSeparatorStroke
categoryLevel3TextStyle
categoryLevel3TopStroke
categoryLevel4BottomStroke
categoryLevel4CellStyle
categoryLevel4InteriorStroke
categoryLevel4LabelSeparatorStroke
categoryLevel4TextStyle
categoryLevel4TopStroke
categoryLevel5BottomStroke
categoryLevel5CellStyle
categoryLevel5InteriorStroke
categoryLevel5LabelSeparatorStroke
categoryLevel5TextStyle
categoryLevel5TopStroke
categoryOrder
categoryOwner
categoryOwnerUID
categoryRef
categoryRefForAggregateRangeRef:
categoryRefForUidCoord:outShowAsType:
categoryRefReferringToCellRef:
categoryRefTableUID
categoryRefsForSpanningCategoryRef:
cell
cellAfterApplyDiff:toCell:atCellUID:migrationMap:inverseCellDiff:concurrentStylesheet:defaultCellStyle:defaultTextStyle:
cellAtBaseCellCoord:
cellAtCellID:
cellAtCellUID:
cellAtGroupLevel:columnUID:
cellAtIndex:
cellBorder
cellBorderAtCellID:
cellBorderAtColumn:
cellBorderForResettingAllStrokes
cellByApplyingCellDiff:toTable:andUpdateInverse:optionalConcurrentStylesheet:
cellContainsAFormula:
cellContents
cellCoordinatesNeedingExcelImportForTable:
cellCoordinatesSet
cellCount
cellCountAtIndex:
cellCountOfColumnAtIndex:
cellCountOfRowAtIndex:
cellCountValid
cellData
cellDependMemoryUseEstimate
cellDependencies
cellDependenciesAsStringForOwner:
cellDependentsOfCell:
cellDiff
cellDiffArray
cellDiffClearingAllWarningsWithContext:
cellDiffClearingWarningsWithContext:
cellDiffForCell:applyingGroupCellValue:groupingType:toBeInGroup:
cellDiffMapByIntersectingUIDs:inRows:
cellDiffMapByRemovingColumns:
cellDiffMapByRemovingRows:
cellDiffMapWithContext:
cellDiffProperties
cellDragController
cellEditingMaskLayers
cellEditorsCanScrollToNonLocalTableSelection
cellExistsAtBaseCellCoord:
cellExistsAtCellCoord:
cellExistsAtCellID:
cellFill
cellFillComparedToDefault:suppressCS:isDefault:
cellFlags
cellFormatForKey:
cellFormatKind
cellFormatKindForValueType:
cellFormatKindIsExpected:
cellHasCommentStorage
cellHasConditionalStyle
cellHasCustomFormat
cellHasFormula
cellHasPrecedents:
cellID
cellIDAboveCellID:
cellIDAtIndex:
cellIDBasedCellMapByTableInfo:
cellIDBelowCellID:
cellIDForCellContainingRichTextStorage:
cellIDForCellUID:
cellIDIsLegal:
cellIDLeftOfCellID:
cellIDRightOfCellID:
cellIDToWPColumnCache
cellIndexAtOrAfterIndex:
cellIndexAtOrBeforeIndex:
cellIsEmpty
cellIteratorWithFlags:searchFlags:
cellIteratorWithRange:flags:searchFlags:
cellIteratorWithRegion:flags:searchFlags:
cellIteratorWithRegion:flags:searchFlags:clampingRange:
cellListWithContext:cellUIDRange:repeatCellVectorPattern:patternDirection:
cellLists
cellMapForRegion:uidBased:suppressMergeContent:useCategoriesWildcards:
cellMapForRepairingPasteboardCustomFormats:
cellMapForWildcardCells
cellMapMaskedByUIDs:inRows:
cellMapWithContext:
cellModifiedInCurrentRecalcCycle:
cellPropsRowHeight
cellRange
cellRangeAtIndex:
cellRangeCount
cellRangeForAnnotation:
cellRangeForTableArea:
cellRangeForTableArea:givenTableSize:numberOfHeaderRows:numberOfFooterRows:numberOfHeaderColumns:
cellRangeForUIDRange:
cellRangeName:namingContext:
cellRangeNameFromChromeRangeRef:namingContext:
cellRangeVisibleRect
cellRanges
cellRefForHostCoord:
cellRefForIndex:
cellReference
cellReferenceForIndex:
cellRefsForAggNodesAtGroup:
cellRefsForCategoryRef:atRowUid:
cellRefsForCategoryRef:atRowUid:ordered:
cellRegion
cellRegionForClearedMergeStrokes
cellRegionForTable:
cellRegionForTableStyleArea:
cellRegionForUIDRange:
cellRegionFromCellUIDList:
cellRegionFromCellUIDList:includeLabelsWithSummaries:didAddLabels:
cellRegionFromCellUIDLookupList:
cellRegionFromCellUIDLookupList:includeLabelsWithSummaries:didAddLabels:
cellRegionFromCellUIDRegion:
cellRegionFromTable:
cellRegionWithConditionalStyleMatchingCell:
cellRegionWithTableInfo:
cellRegionWithTableInfo:passingTest:
cellSelection
cellSelectionNameForContextAndActionMenus
cellSpec
cellSpecForAggregateType:forColumnUID:atGroupLevel:
cellSpecFromTSKFormat:
cellSpecReplacingFormulaObject:locale:
cellStatesToLayout
cellStorageRefAtCellID:
cellStorageRefAtColumnIndex:tileRowIndex:
cellStorageRefAtIndex:
cellStyle
cellStyleAtCellID:
cellStyleAtCellID:isDefault:
cellStyleAtCellUID:isDefault:
cellStyleAtIndex:
cellStyleAtModelCellCoord:isDefault:
cellStyleForCellWithEmptyStyleAtBaseCellCoord:isDefault:
cellStyleForTableStyleArea:
cellStyleHandleForKey:
cellStyleHandles
cellStyleID
cellStyleOfColumnAtIndex:
cellStyleOfColumnAtIndex:isDefault:
cellStyleOfRowAtIndex:
cellStyleOfRowAtIndex:isDefault:
cellStyles
cellTractRefForUIDRectRef:
cellTractRefWithUidTractList:onTable:preserveFlags:rewriteContext:
cellUIDForCellID:
cellUIDForCellID:useCategoriesWildcards:
cellUIDForSummaryCellCoord:
cellUIDList
cellUIDListFromCellRegion:
cellUIDListFromCellRegion:useCategoriesWildcards:
cellUIDListFromRange:
cellUIDMap
cellUIDRange
cellUIDRangeForCellRange:
cellUIDRangeFromMergeFormula:calcEngine:
cellUIDRanges
cellUIDRegion
cellUIDRegionFromCellRegion:
cellUIDRegionFromRegion:inTable:
cellUIDRegionFromRegion:inTableModel:
cellUIDforBaseCellCoord:
cellUIDs
cellValue
cellValueAtBaseCellCoord:
cellValueDescription
cellValueFromCell:atBaseCellCoord:
cellValueFromCell:atCellID:
cellValueFromCell:locale:
cellValueType
cellValueTypeAtBaseCellCoord:
cellValueTypeAtCellID:
cellValueTypeAtCellUID:
cellValueTypeAtSummaryModelCoord:
cellValueTypeDescription
cellValueTypeIsExpected:
cellValueViewStringAtCellID:optionalCell:
cellValueWithArchive:locale:
cellValueWithLocale:
cellWillChangeDistributor
cellWraps
cellsInACycleInOwner:
cellsModifiedInCurrentRecalcCycle
cellsPendingWrite
cellsPerSubRegion
cellsToInvalidateAfterRecalc
cellsToInvalidateNonoverflowingAfterRecalc
cfLocale
changeCell:atCellUID:toBeInGroup:
changeCellDiffMapToMoveRows:toGroup:templateRowUID:
changeDescriptor
changeDescriptorWithAnnotationsRemovedForMerge:
changeDescriptorWithType:
changeDescriptorWithType:cellID:cellRange:
changeDescriptorWithType:cellID:cellRange:strokeRange:
changeDescriptorWithType:cellID:cellRegion:strokeRegion:
changeDescriptorWithType:cellID:strokeRange:
changeDescriptorWithType:cellRange:
changeDescriptorWithType:cellRange:strokeRange:
changeDescriptorWithType:cellRegion:
changeDescriptorWithType:cellRegion:beforeCount:afterCount:
changeDescriptorWithType:cellRegion:strokeRegion:
changeDescriptorWithType:cellRegion:strokeRegion:beforeCount:afterCount:
changeDescriptorWithType:referenceIdentifiers:
changeDescriptorWithType:shuffleMapping:
changeDescriptorWithType:strokeRange:
changeDescriptorWithType:strokeRegion:
changeDescriptors
changeDescriptorsForReorganizingFromRowUids:toRowUids:
changeDescriptorsForTable:
changeForMovingBaseRows:toDestGroup:
changeForSettingGroupingColumnList:
changeForUpdatingGroupValueOnNode:toValue:
changeGroupingTypeForGroupLevel:toType:
changeGroupingTypeForRuleIndex:toType:
changeNotifier
changeType
changedConditionForCellID:
changesWithPageCount
changesWithPageNumber
changingCellFillAtCellID:
characterAtIndex:
characterCount
characterFillAtCellID:optionalCell:
characterIsMember:
characterSetWithCharactersInString:
characterSetWithRange:
characterStyleAtCharIndex:effectiveRange:
characterStyleAttributeCount
checkCell:searchFlags:
checkConditionForCellID:withConditionalStyle:withIndex:
checkForFormulaCoordUpgrade
checkMapsAndAssert:
checkState
checkStateForArchiving:
checkboxFormat
checkoutNumberFormatter
checkoutScientificNumberFormatter
childEnumeratorForUserFlags:
childEnumeratorForUserSearch
childGroupUids
childGroupUidsForGroupUids:
childInfos
childInfosForChildLayouts
childRepIsMasterDrawable:
childRepIsOnDocSetupCanvas:
childReps
children
chooseIndex
chooseUniqueNameInContainer:forPaste:
chooseUniqueNameInContainer:forPaste:needsNewName:
chooseUniqueNameInContainer:forPaste:needsNewName:avoidNames:
chromeCellCoordForBaseCellCoord:
chromeCellCoordForViewCellCoord:
chromeCellRefForBaseCellRef:
chromeCellRefForViewCellRef:
chromeColumnIndexForBaseColumnIndex:
chromeColumnIndexForViewColumnIndex:
chromeColumnIndexesForViewColumnIndexes:
chromeCoordsAreViewCoords
chromeLabelForCellID:
chromeLabelForColumn:
chromeLabelForRow:
chromeNameForBaseRangeRef:namingContext:
chromeRangeRef
chromeRangeRefForViewRangeRef:
chromeRowIndexForBaseRowIndex:
chromeRowIndexForViewRowIndex:
chromeRowIndexesForViewRowIndexes:
chromeTractRef
chromeTractRefForBaseTractRef:
chromeTractRefForViewTractRef:
chunkCountForTextureDeliveryStyle:animationFilter:
circularReferenceError
clampRowHeightAccountingForMaximumPartitionSize:rowIndex:rowHeight:
clampingRect
class
classForUnarchiver:
cleanCellDependencyRows
clear
clearAggFormulas:
clearAggFormulas:inOwner:
clearAggNode:forFormulaCoord:
clearAllCachedRowIndexes
clearAllFiltered
clearAllGroupNodes
clearAllMergeRanges
clearAllPivotHidden
clearAllPivotHiddenAndInvalidate:
clearAndGenerateCategoryStylesConnectedToStylesheet:
clearAndGeneratePivotStylesConnectedToStylesheet:
clearBackPointerToParentInfoIfNeeded:
clearColor
clearCommentHostingMapForCommentStorage:
clearDataListIDs
clearDisallowHeaderIndexingForTableUID:
clearDynamicStrokesForCellRange:
clearErrorForCell:
clearErrorForCells:
clearErrors
clearFormatOfType:
clearFormulaAtIndex:
clearFormulaAtIndex:formulaReplacer:
clearFromGroupByUID
clearFromTableUID
clearInProgressCalcCellRefs
clearInvalidIndexes
clearLegacyGlobalIDs
clearMerges
clearMissingCombinations
clearModelHeightWidthCacheForCellRange:
clearNoncurrentImplicitFormats
clearPartitioner
clearPreviousLocaleIdentifier
clearRecalculationTimer
clearRenderingCaches
clearRowIndexesCache
clearRowsAtTileRowIndex:numberOfRows:
clearSpareFormatOfType:
clearStrokes
clearTableIndexes
clearTextAtCellCoord:tableUID:
clearValue
clearValueAtColumn:row:
clearValueAtCoord:
clearValueForFormulaCoord:
clearedMajorStrokeLayer
clearedMinorStrokeLayer
clearedStrokeLayer
clipStrokes
closeTransaction:
coarserGroupingTypeFor:
coarserGroupingTypeFor:groupTypesToAvoid:
code
coefficientAtIndex:
coefficientStandardErrorAtIndex:
coerceTextCellToBestNumberFormatUsingLimitedParsing:
coerceToBaseFormat:
coldSpecifierArrayForYear:
coldSpecifierSet
coldSpecifiers
coldSpecifiersForYear:
collaboratorCursorForSelectionPath:
collapseOutColumnIndexes:
collapseOutRowIndexes:
collapseSummaryGroupUIDs:
collapseSummaryRowGroupUIDs:
collapsedColumnGroupUids
collapsedGroupUids
collapsedRowGroupUids
collectIndexes:forRange:
collectPropertyKeysIntoIndexSet:
color
colorWithAlphaComponent:
colorWithHue:saturation:brightness:alpha:
colorWithRed:green:blue:alpha:
colors
columnAggregateGroupSize
columnAggregateListCopy
columnAggregateUid
columnAggregateUidList
columnAggregateUuids
columnAggregates
columnAggregatesOnColumnUids:
columnCellCountsOfRowsInRange:
columnCount
columnDisplayNameForCategoryLevel:
columnGroupLevel
columnGroupLevelAtColumn:outAggregateIndex:
columnGroupLevelForColumnUID:
columnGroupLevelForHeaderRow:
columnGroupUidForColumnUid:outAggregateIndex:
columnHeaderStorage
columnHiddenStateExtent
columnIndex
columnIndexForColumnUID:
columnIndexForGroupingColumn:
columnIndexForUUIDBytes:
columnIndexForUid:
columnIndexForUuid:
columnIndexesForUIDs:
columnIndexesInRow
columnLayoutWidthForBodyWidth:insets:
columnNameForAggregateIndex:allowDuplicateNames:
columnNameForCategoryLevel:shortForm:
columnNameForCategoryRef:
columnNameForCellCoord:restrictToBodyRange:translator:cellRangeContainingName:
columnNameForCellID:restrictToBodyRange:
columnNameForColumnIndex:
columnNameForColumnIndex:withFallbackFormat:
columnNameForColumnIndex:withFallbackFormat:translator:
columnOrRowIndex
columnOrRowIndexForFilterCoordinate:
columnOrderChangedPrecedent
columnOrderReversed
columnRangeForUIDs:
columnRegion
columnRowUID
columnStrokeExportCache
columnToStrokeWidthCache
columnToWidthMapFromCollectionArray:
columnUID
columnUIDForBaseColumnIndex:
columnUIDForColumnIndex:
columnUIDForViewColumnIndex:
columnUIDs
columnUIDsForColumnIndexes:
columnUIDsForColumnRange:
columnUid
columnUids
columnUidsForColumnGroupUid:
columnUuids
columnWidths
columnsAreLeftToRight
columnsInvalid
columnsVisible
combineNonOverlappingCellRanges:addingOverlappingCellRanges:
combinedCanonicalKeyStringAsUtf8
commandForReplaceAllWithProvider:selectionModelTranslatorProvider:outActivityBehavior:
commandForSettingTableDirection:icc:
commentHostingAtBaseCellCoord:
commentHostingAtBaseCellCoord:forCommentStorage:
commentHostingAtBaseCellCoord:forCommentStorage:updateCommentMaps:
commentHostingAtCellID:
commentHostingAtCellID:forCommentStorage:
commentHostingAtCellID:forCommentStorage:updateCommentMaps:
commentHostingMap
commentStorage
commentStorageAtCellID:
commentStorageForKey:
commentStorageID
commentStorageMap
commentStorageTableReference
commentWillBeAddedToDocumentRoot
commitPivotChanges
commitRewritingTransaction
commonInit
compactDescriptionForAggregateIndex:locale:
compactDescriptionForAggregateIndex:useShortLabel:allowDuplicateNames:locale:
compare:
compare:options:
compare:options:range:locale:
compare:withContext:
compareFirstLastIndices:
compareRange:otherStorage:otherRange:options:objectComparisonBlock:
compareToCellValue:
compatibilityCheckerForData:associatedHint:
completionText
component:fromDate:
componentAtIndex:
componentCount
componentReadVersion
componentRootObject
components
components:fromDate:
components:fromDate:toDate:options:
componentsJoinedByString:
componentsSeparatedByCharactersInSet:
componentsSeparatedByString:
compress
compressToZeroBased
compressUIDIndexListFrom:withUIDCount:to:
compressedColumnIndexes
compressedColumnUIDs
compressedRowIndexes
compressedRowUIDs
compressedSize
computeDefaultFontHeightForTableStyleArea:
computeDefaultRowHeight
computeInfoGeometryFromPureLayoutGeometry:
computeLayoutGeometry
computeValidCount
computedGroupValueTuple
concurrentCellMapForRegion:suppressMergeContent:gatherCellBorders:
concurrentCellMapForTable:
concurrentCellMapWithContext:cellUIDRange:repeatCellVectorPattern:patternDirection:uidBased:affectsCellBorders:
condStyleOwnerUID
conditionalFormatDataForValue:outKey:
conditionalStyle
conditionalStyleAppliedRule
conditionalStyleFormulaOwner
conditionalStyleID
conditionalStyleOwnerUID
conditionalStyleRuleWithRule:
conditionalStyleSet
conditionalStyleSetAtBaseCellCoord:
conditionalStyleSetAtCellID:
conditionalStyleSetForKey:
conditionalStyleSetTableReference
conditionalStylesForUndo
confidence
confirmRefCountsReturningResult:
confirmTermination
conformsToProtocol:
const_astNodeArray
containedTextEditingLayout
containedTextEditorSpills
containedTextEditorWraps
containerInfo
containerNameForTable:
containsAnnotation:
containsAnyContentInRange:
containsAnyPropertiesInSet:
containsAnyPropertyInProperties:
containsAnyRowUidInRowUidSet:
containsAnyRulesInBaseColumns:
containsAnyRulesInColumnUIDList:
containsBodyColumns
containsBodyRows
containsCell:
containsCellBorderChanges
containsCellChanges
containsCellRange:
containsCellRegion:
containsCellStyleOrCellDiffCellStyleProperties
containsCellStyleProperties
containsCellsInCategoryColumn
containsCellsInCategoryColumnsOrRows
containsCellsInCategoryGroupingColumn
containsCellsInLabelRow
containsCellsInSummaryOrLabelRows
containsCellsInSummaryRow
containsColdSpecifiers
containsColons
containsControlCellSpecs
containsError:evaluationContext:
containsFilterRulesInUIDForm
containsFooterRows
containsForms
containsFormulas
containsFromCoord:
containsGridRange:
containsGroupValueCells
containsHeaderColumns
containsHeaderRows
containsImportWarnings
containsIndex:
containsIndexes:
containsIndexesInRange:
containsInvalidRef
containsKey:
containsMatchInString:
containsMergeChanges
containsModelCellCoord:
containsModelCellRect:
containsName:
containsOnlyCellsInCategoryColumn
containsOnlyCellsInSummaryAndLabelRows
containsOnlyCellsInSummaryRow
containsOnlyGroupValueCells
containsOnlySpecialCategoryCells
containsOnlySpecialCategoryOrPivotCells
containsOnlySpecialPivotCells
containsParagraphStyleProperties
containsProperty:
containsRect:fromCoord:
containsSelection:
containsSingleCellOrMergeInTable:
containsSpecifier:
containsSpecifiersFromSet:
containsSpecifiersWithSymbol:
containsStyle:
containsStyleNetworkIndex:
containsSuppressCustomFormatHandlingProperty
containsTextStyleProperties
containsUidReferences
containsUuid:
containsValueForAllSpecifiersInSet:
containsValueForSpecifier:
contentFrameForGridRange:
contentFrameForRange:
contentReadingThreads
contentSizeForCellRange:skipDynamicSwap:
contentWidthForCellRange:skipDynamicSwap:
contentWidthForCellRange:validationBundle:
contentWritingDirection
contentsAreRightToLeft
contentsRectForCellRangeAcrossSpaces:contentsCenterInfo:canvasFrame:contentsRect:
contentsScale
contextForTransientObjects
contextSheetName
contextTableResolver
continueAnnotationSearch:
controlCellSelection
controlCellSpecForKey:
controlCellSpecID
controlCellSpecTableReference
controlCellUIAlwaysVisible
controlCharacterSet
controlFormat
convert:fromUnit:toUnit:
convertCategoryRefToRelativeAncestorUid:atRowUid:inHostTable:
convertCellUIDLookupList:toCellRangeVector:prunedSummaryCellUIDs:
convertFormulasToUidForm:atCellID:preserveHostCell:
convertFromBaseToChromeForCategorizedTableMove:containingCell:
convertFromChromeToBaseForCategorizedTableMove:containingCell:
convertToInverseCellMap
convertToRelativeAncestorUid:atRowUid:
convertToRelativeRefIfPossible
convertToUuidBasedCellMapUsingTableInfo:pruneCategorizedCells:
convertToWideOffsets
convertUIDRefToViewTractRef
convertUnscaledToBoundsRect:
convertViewTractRefToUID
coordAtColumnOffset:rowOffset:
coordMapper
coordMapperForTableUID:cppCalcEngine:
coordRangesForInsertRemove
coordinate
coordinateMapper
coordinatesForTableInfo:passingTest:
coordinator
copy
copyAllFormatsToCell:
copyAndReplaceGroupUIDs:
copyByClearingHostCell
copyByClearingUids:containingTableUID:
copyByConvertingBaseToChrome:inOwner:inCellCoordinate:
copyByConvertingChromeToBase:inOwner:inCellCoordinate:
copyByConvertingColonToColonTract:
copyByConvertingColonTractToColon:breakUpIntoRefs:
copyByConvertingToRelativeAncestorsWithRewriteContext:
copyByForceSettingOwnerUIDs:calcEngine:
copyByFreezingRefs:containingCell:
copyByMakingAllCategoryRefsIndirect:
copyByOffsettingRelativeReferences:
copyByOffsettingRelativeReferences:oldContainingCell:newContainingTable:offset:
copyByOffsettingRelativeReferencesWithOffset:
copyByPruningAgainstTable:behavior:usingBlock:
copyByRemappingEntityIDs:
copyByRemappingHostCellAgnosticOwnerUIDs:rewriteContext:outError:
copyByRemappingHostCellAgnosticOwnerUIDsWithMap:rewriteContext:error:
copyByRemappingOwnerUIDs:rewriteContext:outBadRefFound:
copyByRemappingOwnerUIDsWithMap:rewriteContext:error:
copyByRemappingUids:rowMap:ownerMap:clearIfMissing:
copyByRemovingNumberToDateCoercion:outFormulaResult:outDidModifyFormula:
copyByRepairingBadReferences:clearUidHistory:
copyByReparenting:groupByUID:rewriteContext:
copyByResolvingIdentifiers:hostTable:baseHostCell:forceReferenceInterpretation:symbolTable:oldToNewNodeMap:
copyByResolvingRelativeAncestorsWithRewriteContext:
copyByRewritingFilterRulesToGeometricFormWithContext:withTableInfo:
copyByRewritingFilterRulesToUidFormWithContext:withTableInfo:
copyByRewritingFilterRulesWithContext:fromTableModel:toTableModel:
copyByRewritingForExcelExport:
copyByRewritingForExcelImport:outFormulaResult:outDidModifyFormula:outFormulaReplacedForExcelCompatWarning:functionNameReplacedForExcelCompat:formulaFormatFromCell:
copyByRewritingForSageExport:targetDocumentSupportsCrossTableReferences:outshouldBakeWholeFormula:outFeaturesUsed:
copyByRewritingForSageImport:containingCell:
copyByRewritingForTranspose:calcEngine:containingCell:outTransposeWarning:
copyByRewritingFromTableModel:toTableModel:
copyByRewritingGroupUid:groupByUID:
copyByRewritingNumberToDurationForSageImport:durationUnitLargest:
copyByRewritingReferencesToGeometricForm:
copyByRewritingReferencesToUidForm:
copyByRewritingToGeometricFormWithTableInfo:containsBadRef:
copyByRewritingToUidFormWithTableInfo:
copyByRewritingWithContext:rewriteBlock:
copyByRewritingWithSpec:calcEngine:containingCell:
copyByRewritingWithSpec:inOwner:inCellCoordinate:
copyBySettingHostTableUID:hostColumnUID:hostRowUID:
copyBySettingTranslationFlags:
copyByThawingRefs:containingCell:
copyByUpdatingHostCellRef:
copyByUpdatingLinkedTable:hostCell:
copyByUpdatingLinkedTable:outfoundLinkedRef:
copyByUpgradingToLinkedRefAtHostCellRef:
copyByUpgradingToLinkedRefForTable:hostCell:
copyCollapsedStateToUpdatedGroupUids:dimension:
copyCollapsedStateToUpdatedRowGroupUids:
copyForApplyingNoContent
copyForApplyingNoContentWithSuppressApplyValue:
copyForArchiving
copyForNotApplyingValue
copyFromHiddenStates:forRange:withContext:isWholeTableCopy:
copyIntoContext:
copyIntoContext:bakeModes:
copyIntoContext:bakeModes:children:
copyJustStrokesToCell:
copyJustStyleAndStrokesToCell:
copyJustValueToCell:
copyOnWriteUIDMapper
copyPersistedWithContext:
copyPivotDetailDataFromSourceModel:inSourceRegion:columnMapping:rowMapping:
copyStorageUnpersisted:
copyToCell:
copyToGeometricFormForHiddenRowsWithTableInfo:containsBadRef:
copyToGeometricFormWithRewriteContext:
copyToUidFormForConditionalStylesWithTableInfo:containingCell:preserveHostCell:
copyToUidFormForHiddenRowsWithTableInfo:
copyToUidFormForTableInfo:inCellCoordinate:
copyToUidFormForTableInfo:inCellCoordinate:preserveHostCell:
copyToUidFormWithRewriteContext:
copyValueAndFormatToCell:
copyWithContext:
copyWithContext:tableInfo:
copyWithOwner:
copyWithZone:
copyWithZone:context:
copyWithZone:copyingCells:
cornersCanDragResize
cost
count
countA
countAValue
countByEnumeratingWithState:objects:count:
countForOwnerKind:
countOfIndexesInRange:
countOfValuesForCategoryRef:
countRows
countRowsValue
countValue
cppCalcEngine
createAggregatorOnColumn:
createAggregatorsIfMissingAndAssert:
createAuxRowColumnInfoForMove
createDetailTableForPivotTableCell:
createFormulaForUIDRange:tableUID:
createFormulaForUIDTract:tableUID:
createFormulaObjectForRange:atIndex:tableUID:
createFragmentEntryForString:createIfMissingUsingPrecedentCoord:
createFromVector:functionSpec:argumentIndex:evaluationContext:ignoreError:ignoreDuplicates:
createHarmonizedDecimalFormatterOfStyle:
createLargeDefaultTables
createNameComponentWithChromeRangeRef:rowOrColumnName:isSticky:namingContext:
createPivotOwner
createStringWithNumber:
createStringWithValue:
createStylesInStylesheet:presetID:colors:alternate:
createTgtMergeMapFromPbMergeMap:andTgtRegion:andTgtBodyRange:
createTgtRegionByIntersectingPbRegion:tgtTableInfo:tgtRegion:
createTgtRegionFromPbRegion:
creationDate
crossTableRef
crossTableRefParam1
crossTableRefParam2
curCellID
curRow
curRowIndex
curTileRange
curatedTableStylePropertySetForCrossDocumentPasteMasterComparison
currencyCode
currencyCodeForCurrencySymbol:
currencyCodeForUnit:
currencyCodeForValue:
currencyCodeIndex
currencyDecimalValue
currencyDoubleValue
currencyFormat
currencyFormatID
currencyIsMostRecentlySet
currencySymbolForCurrencyCode:
currentAnimation
currentCell
currentCellUID
currentDate
currentFormat
currentFormatIsExplicit
currentFormatIsExplicitForCalcEngine
currentFormatNegativeStyle
currentFormatUsesAccountingStyle
currentLocale
currentRules
currentScreenScale
currentState
currentTableIdRemapper
currentThread
currentTimeZoneCalendar
currentTransaction
cursorCellID
cursorCellIDs
cursorCellUID
customFormat
customFormatData
customFormatDataForValue:
customFormatForBlankGroup
customFormatForErrorGroup
customFormatForKey:
customFormatID
customFormatList
customFormatString
customOrderedStrokeLayer
customStrokeLayer
customStrokeProvider
customUnorderedStrokeLayer
data
dataFromURL:context:
dataIsReplaceable
dataKind
dataKindStatus
dataList
dataList1
dataListCache
dataStore
dataStoreIterator
dataType
dataUsingEncoding:
dataWithBytes:length:
dataWithContentsOfURL:
date
date:argIndex:evaluationContext:
dateAsTimeInterval
dateAtIndex:
dateByAddingComponents:toDate:options:
dateByAddingTimeInterval:
dateCount
dateForFunction:argumentIndex:warningReportingContext:
dateFormat
dateFormatID
dateFromComponents:
dateGroupingTypeForMinMaxDatePair:
dateParserLibrary
datePortionOfDateTimeFormatString:
dateString
dateTimeParam1
dateTimeParam2
dateValue
dateWithIdenticalComponentsInGMTForDate:
dateWithTimeIntervalSinceReferenceDate:
debugDescription
debugFlushAllDirtyReferences
debugOnly_DidCleanGraphForConsistencyViolation
debugOnly_DidDetectAndRepairConsistencyViolations
decimalDigitCharacterSet
decimalPlaces
decimalSeparator
decrementCellCountAtIndex:byAmount:
decrementCellCountsAtCellID:
decrementColumnCellCount:byAmount:
deepCopyIntoContext:bakeModes:withTokenDict:
deepType
deepType:
defaultCellStyleForBaseCellCoord:
defaultCellStyleForBaseCellCoord:useSoftDefault:outSource:
defaultCellStyleForCellCoord:
defaultCellStyleForCellID:
defaultCellStyleForCellID:useSoftDefault:outSource:
defaultCellStyleForTableStyleArea:
defaultCellValueForInteractionType:
defaultCenter
defaultCharacterStyle
defaultColumnStyle
defaultColumnWidth
defaultCurrencyFormatWithCurrencyCode:
defaultCustomFormatData
defaultDateForGrouping
defaultDateOnlyShortFormatForLocale:
defaultDecimalPlacesForCurrencyCode:
defaultFormatData
defaultFormatWithFormatType:locale:
defaultHexadecimalFormat
defaultHorizontalBorderStroke
defaultHorizontalBorderStrokeEvenIfNotVisible
defaultIntValueForProperty:
defaultListStyle
defaultMajorStrokeLayer
defaultMinorStrokeLayer
defaultNameWithIndex:
defaultPaddingForCellID:
defaultParagraphStyle
defaultPredicateArg
defaultPredicateForType:argumentCellRef:hostCell:
defaultPredicateForType:argumentCellReference:hostCell:
defaultPropertyMap
defaultRangeControlSpecOfType:
defaultRowHeight
defaultStrokeLayer
defaultStrokeProvider
defaultStyleHandlesAtBaseCellCoord:useSoftDefault:styleDefaultsCache:outCellStyleHandle:outTextStyleHandle:
defaultStyleHandlesAtIndex:outCellStyleHandle:outTextStyleHandle:
defaultStyleHandlesForCellID:useSoftDefault:styleDefaultsCache:outCellStyleHandle:outTextStyleHandle:
defaultStyleHandlesOfColumnAtIndex:outCellStyleHandle:outTextStyleHandle:
defaultStyleHandlesOfRowAtIndex:outCellStyleHandle:outTextStyleHandle:
defaultStyleWithContext:
defaultStyleWithDefaultPropertiesInContext:
defaultStylesAtIndex:outCellStyle:outTextStyle:
defaultStylesForTableStyleArea:outCellStyle:outTextStyle:
defaultStylesOfColumnAtIndex:outCellStyle:outTextStyle:
defaultStylesOfRowAtIndex:outCellStyle:outTextStyle:
defaultTableNameShapeStyleWithContext:
defaultTextStyleForBaseCellCoord:
defaultTextStyleForBaseCellCoord:useSoftDefault:outSource:
defaultTextStyleForCellCoord:
defaultTextStyleForCellID:
defaultTextStyleForCellID:useSoftDefault:outSource:
defaultTextStyleForTableStyleArea:
defaultValueForProperty:
defaultVerticalBorderStroke
defaultsOnlyStrokeLayerStack
definedBottomStroke
definedLeftStroke
definedRightStroke
definedTopStroke
definesProperty:
degreesFreedom
delayedArchivingPriority
delegate
deleteBaseRange:withUids:
deleteCharactersInRange:
deleteColumnsFromBaseRange:columnUids:
deleteRange:
deleteRange:undoTransaction:
deleteRowsFromBaseRange:rowUids:
deliveryStyle
deliveryStyleSupportedForExport:
dependTracker
dependencyTracker
dependentLayouts
dependentsList
dependentsOfTextLayout:
dependentsToDirtyByFromRef
deprecatedProperties
deprecatedProvider
deriveBodyPivotDeEmphasisHorizontalStrokeFromTableStyle:propertyMap:
deriveBodyPivotEmphasisVerticalStrokeFromTableStyle:propertyMap:
deriveBodyPivotGroupVerticalStrokeFromTableStyle:propertyMap:
deriveCategoryBottomStrokeFromFooterRowSeparatorStroke:
deriveCategoryInteriorStrokeFromFooterRowVerticalStroke:
deriveCategoryTopStrokeFromFooterRowSeparatorStroke:
deriveFooterRowPivotGroupVerticalStrokeFromTableStyle:propertyMap:
deriveHeaderColumnPivotGroupDeEmphasisStrokeFromTableStyle:propertyMap:
deriveHeaderColumnPivotGroupHorizontalStrokeFromTableStyle:propertyMap:
deriveHeaderColumnPivotSeparatorStrokeFromTableStyle:propertyMap:
deriveHeaderRowPivotGroupDeEmphasisStrokeFromTableStyle:propertyMap:
deriveHeaderRowPivotGroupVerticalStrokeFromTableStyle:propertyMap:
deriveHeaderRowPivotTitleStrokeFromTableStyle:propertyMap:
descendersCannotClip
description
descriptionForAggregateIndex:locale:
descriptionForAggregateIndex:useShortLabel:allowDuplicateNames:locale:
descriptionForLevel:
descriptionForPivotBodyCellForUidCoord:
descriptionForPivotGroupCellForColumnUid:upToLevel:
descriptionForPivotGroupCellForRowUid:upToLevel:
descriptionString
descriptionWithGroupBy:
descriptionWithLocale:
descriptionWithObject:
designModeEnabled
detachNewThreadSelector:toTarget:withObject:
detailsWithSymbol:attribute:
detectAndRepairDirtyCellsAreOnLeafQueue
detokenizeEntireStorage
deviceBoundsForCellRange:
dictionary
dictionaryRepresentation
dictionaryWithCapacity:
dictionaryWithContentsOfFile:
dictionaryWithDictionary:
dictionaryWithObjects:forKeys:count:
dictionaryWithPreset:
didAddGroupNode:
didAddRowUID:toGroup:
didAddRows:
didAddTableName:forTableUID:
didApplyConcurrentCellMap:
didChangeExtentUids:
didChangeGroupByStructure
didChangeTableName:fromTableName:forTableUID:
didDrawCellImageFill:inCellRange:
didEndTableNameEditing
didHint:syncWithNextHint:horizontally:
didInitFromSOS
didMakeGroupingChangesInRowUIDs:
didMergeRange:
didModifySrcTable:dstTable:
didModifyTable:calcEngine:
didModifyWasCalled
didRemoveRowUID:fromGroup:
didReplaceTextsInStoragesWithPlaceHolderString
didUnmergeRange:
dimension
dimensionForUnit:
dimensions
directChildGroupUids
direction
dirtyAllCellsInOwner:
dirtyAllCellsInOwnerId:
dirtyCellCount
dirtyCellCountInOwner:
dirtyCellDependencyRows
dirtyCellRef:
dirtyCellRefs:
dirtyCellRefsInReferenceSet:
dirtyCellRegionGatherer
dirtyCellsForColumnRange:fromTable:tableRange:
dirtyCellsForInsertionOfColumns:forTable:tableRange:headerRange:
dirtyCellsForInsertionOfRows:forTable:tableRange:headerRange:
dirtyCellsForMergingRange:forTable:headerRowRange:headerColumnRange:
dirtyCellsForRemovalOfColumns:fromTable:tableRange:
dirtyCellsForRemovalOfRows:fromTable:tableRange:
dirtyCellsForRowRange:fromTable:tableRange:
dirtyCellsForSeconds:fromStartTime:
dirtyCellsForUpgrade
dirtyCellsNow
dirtyCellsUsingFunction:
dirtyCoords:inOwnerId:
dirtyFilterState
dirtyFilterStateForFooters
dirtyFilterStateForHeaders
dirtyFilterStateForRowRange:
dirtyGeometryVolatileCells
dirtyInternalCellRef:
dirtyInternalCellRefs:
dirtyInternalCellRefsVector:
dirtyInternalRangeRef:
dirtyNewCellRef:forSeconds:fromStartTime:
dirtyNowAndTodayVolatileCells
dirtyNowVolatileCells
dirtyOnlyDependentsOfCellRef:
dirtyPrecedentCount
dirtyRandomVolatileCells
dirtyRangeRef:
dirtySheetTableNameVolatileCells
dirtyStrokeRange
dirtyingInProgress
disableImplicitNaming
disconnect
displayChoicesForInspector
displayFormatType
displayLayer:
displayNameForColumnAtIndex:
displayNameForColumnAtIndex:derivation:
displayNameForColumnName:
displayNameForInteractionType:
displayString
displayStringAtIndex:
displayStringForLocale:
displayStringWithCalculationEngine:forTable:andCellID:
displayableDescriptiveName
distantFuture
distantPast
distinctValuesAtLevel:
distributeBlock:
doFullRefresh
documentIsClosing
documentLocale
documentLocaleDidChange
documentLocalizedDisplayNameForColumnAtIndex:
documentObject
documentRandomSeed
documentRoot
documentStylesheet
doesNotNeedFormulaRewriteForImport
doesResetAnyProperties:
doesResetProperty:
doesSetAnyProperties:
doesSetProperty:
domain
dontClearBackground
doubleQuoteCharacters
doubleValue
doubleValueForProperty:
downgradeFilterSetForBackwardCompatWithLocale:
downgradeForPrePivotFormatForLocale:
downgradedForPrePivot
dragAndDropDetails
dragByHandleOnly
drawAttachment:inContext:selection:
drawBlackAndWhite
drawCellBackground
drawColumn:selection:inContext:isFlipped:viewScale:renderMode:
drawInContext:
drawLayer:inContext:
drawPreventAntialias
drawSingleStroke:context:beginPoint:endPoint:width:strokeWidthForDrawing:strokeFrame:
drawStrokes
drawStrokesInGridRange:clearStrokes:context:
drawSwatchInRect:inContext:
drawTableBackground
drawTableName
drawText:inContext:minSize:maxSize:anchor:flags:isFlipped:viewScale:
drawableInfo
drawsBlackAndWhite
dropAllAggregators
dropAllTargets
dropReference
dropReferenceForKey:callWillModify:
dropReferences:forKey:callWillModify:
dropTable:
dropTable:withTableName:withContainerName:
dropTract:
dstColumnUids
dstCondStyleOwnerUID
dstRegion
dstRowUids
dstTableUID
dstUidForSrcUid:
duplicateFilterSet
duplicateFilterSetInUidForm
duplicateFilterSetInUidFormWithTable:
duration
durationCount
durationFormat
durationFormatID
durationInterval
durationNotAllowedError:argumentNumber:
durationParam1
durationParam2
durationStyle
durationTimeIntervalValue
durationUnitLargest
durationUnitLargestWithTimeInterval:
durationUnitSmallest
durationUnits
durationValue
duringRollback
duringSubOwnerUIDUpgrade
dynamicAddOrRemoveColumnElementSize
dynamicAddOrRemoveRowElementSize
dynamicBandedFill
dynamicBandedFillSetting
dynamicCellFillDelegate
dynamicColumnAdjustment
dynamicColumnTabSize
dynamicContentDelegate
dynamicContentMustDrawOnMainThread
dynamicFontColor
dynamicFontColorCellRange
dynamicFooterHeight
dynamicHeightResize
dynamicHidingContent
dynamicHidingRowsCols
dynamicHidingRowsColsDirection
dynamicHidingText
dynamicInfoGeometry
dynamicLayout
dynamicLayoutParticipants
dynamicOrderedStrokeLayer
dynamicRemovingText
dynamicRepResize
dynamicRepResizeSessionInProgress
dynamicRepressFrozenHeaderColumns
dynamicRepressFrozenHeaderRows
dynamicResizeInfo
dynamicResizingColumnRange
dynamicResizingColumns
dynamicResizingRowAdjustment
dynamicResizingRowRange
dynamicResizingRows
dynamicRevealingRowsCols
dynamicRevealingRowsColsDirection
dynamicRowAdjustment
dynamicRowTabSize
dynamicSavedLayoutGeometry
dynamicSelection
dynamicStrokeLayer
dynamicSuppressingConditionalStylesCellID
dynamicTableNameResize
dynamicUnorderedStrokeLayer
dynamicWidthResize
earlierDate:
earlyRefreshRequested
edgeExpandUsingMovingUids:tractList:
edgeInsets
edgeInsetsFromPadding:
editingCellIDForInvalidation
editingReferenceNode
editingSpillingTextRange
editorClass
effectiveSize
effectiveTableNameHeightForTable:
effectiveTextStyle
elementKind
eliminateLargestCommonSubexpression:withSymbolTable:newIdentifierOut:
eliminateLargestCommonSubexpressionWithSymbolTable:newIdentifierOut:
embiggenTableForUpgrade
embiggenedCellCoord
empty
emptyCellCount
emptyFilteredTable
emptyOptions
emptyPattern
emptyReferenceSet
emptyReferenceSetWrapper
emptyStroke
emptyStrokeWithWidth:
enableFilterSet:
enableNotifier
enclosingGroupNameForColumnIndex:level:
enclosingGroupNameForGroupCellValue:
enclosingGroupNameForRowIndex:level:
encodeCellValueToArchive:
encodeObjectsToDataListArchive:archiver:
encodeToArchive:
encodeToArchive:alsoSave31Format:archiver:
encodeToArchive:archiver:
encodeToArchive:archiver:backwardCompatOptions:
encodeToArchive:archivingCustomFormats:
encodeToArchive:backwardCompatOptions:archiver:
encodeToArchive:forGroupBy:backwardCompat:
encodeToExpandedArchive:archiver:
encodeToPrePivotArchive:archiver:
encodeToPrePivotArchive:archiver:encodingForSOS:
endBatchingGroupCellDirtying
endDeferringRebuildFormulas
endIteration
endOfGroupingChangesBatch
endRatingCell
endSuppressingWillModifyCalls
endTableCell:withCellID:cellHasContents:cellIsPrimary:
endTableChunk:
endTableLayoutSpace:
endTableNameForChunk:
endTableRow:
endTrackingNamesInTable:
endTrackingNamesInTableForLegacyNRM:
endTrackingReference:
endTrackingReference:calcEngine:
englishFunctionNameFromFunctionIndex:
enqueueBootstrapChangeDescriptors
enqueueRequestForKeys:
ensureAllTablesAreRegisteredInDocumentRoot:
enterCalcEngineMode
entireActualHeaderColumnsCellRange
entireBodyCellRange
entireBodyRowsCellRange
entireFooterRowsCellRange
entireHeaderColumnsCellRange
entireHeaderRowsCellRange
enumerateAggregates:
enumerateAggregatesAtLevel:withBlock:
enumerateAllAnnotationsInModelWithHitBlock:
enumerateAllGroupsWithBlock:
enumerateAllGroupsWithStop:withBlock:
enumerateAllRanges:
enumerateAllRangesForFromCoord:usingBlock:
enumerateAllStylesWithBlock:
enumerateAnnotationsAndFormulasContainedInRegion:withBlock:
enumerateAnnotationsAndFormulasInRange:withBlock:
enumerateAnnotationsWithBlock:
enumerateAttachmentsInTextRange:usingBlock:
enumerateAttachmentsOfClass:inTextRange:usingBlock:
enumerateCacheItemsIntersectingBaseCellRect:includeCrumbs:usingBlock:
enumerateCacheItemsIntersectingBaseCellRect:usingBlock:
enumerateCacheItemsIntersectingBaseCellRegion:usingBlock:
enumerateCacheItemsUsingBlock:
enumerateCellIDElementsUsingBlock:
enumerateCellIDsUsingBlock:
enumerateCellRangesUsingBlock:
enumerateCellStatesUsingBlock:
enumerateCellStoragesInRange:withBlock:
enumerateCellStoragesRowByRowToMaxID:withBlock:
enumerateCellStringsForRows:rowCount:usingBlock:
enumerateCellUIDRangesUsingBlock:
enumerateCellUIDUsingBlock:
enumerateCellUIDsUsingBlock:
enumerateCellsAddedAndRemovedOfType:withOptions:usingBlock:
enumerateCellsAddedOfType:withOptions:usingBlock:
enumerateCellsForSOSSerializationWithBlock:
enumerateCellsUsingBlock:
enumerateCellsWithIDsUsingBlock:
enumerateCellsWithUIDsUsingBlock:
enumerateChangeRecords:withType:block:
enumerateChildTexturesForDescription:passingTest:withBlock:
enumerateColumnCellCountDiffUsingBlock:
enumerateColumnRangesInReverseUsingBlock:
enumerateColumnRangesUsingBlock:
enumerateColumnUIDUsingBlock:
enumerateColumnWidthsUsingBlock:
enumerateColumnsInReverseUsingBlock:
enumerateColumnsIntersectingCellRange:usingBlock:
enumerateColumnsUsingBlock:
enumerateConcurrentlyUsingChunkBeginBlock:concurrentBlock:finalBlock:
enumerateConcurrentlyUsingChunkBeginBlock:perDispatchThreadBlock:concurrentBlock:finalBlock:
enumerateCustomFormatsBeingAddedUsingReplacementBlock:
enumerateDataKeyValuePairsUsingBlock:
enumerateDirectChildren:
enumerateElementsUsingBlock:
enumerateExpressionNodesUsingBlock:
enumerateFilterIndicesInTable:usingBlock:
enumerateFiltersForColumn:withTable:usingBlock:
enumerateFiltersInTable:usingBlock:
enumerateFittingHeightsUsingBlock:
enumerateFittingWidthsUsingBlock:
enumerateFormatsUsingBlock:
enumerateFormulaOwnersUsingBlock:
enumerateFrozenLayoutSpacesUsingBlock:
enumerateGridRowsUsingBlock:
enumerateGroupingColumnsForColumn:withBlock:
enumerateGroupsAtLevel:withBlock:
enumerateGroupsAtLevel:withStop:withBlock:
enumerateGroupsBetweenLevel:andLevel:withBlock:
enumerateGroupsBetweenLevel:andLevel:withStop:withBlock:
enumerateInDirection:usingBlock:
enumerateIndexesInRange:options:usingBlock:
enumerateIndexesUsingBlock:
enumerateIndexesWithOptions:usingBlock:
enumerateKeysAndCountsUsingBlock:
enumerateKeysAndObjectsUsingBlock:
enumerateKeysAndValuesUsingBlock:
enumerateLayerAndStackForGridColumnRange:options:usingBlock:
enumerateLayerAndStackForGridRowRange:options:usingBlock:
enumerateLayoutSpacesUsingBlock:
enumerateLegacyCustomFormatsUsingBlock:
enumerateLoadedTilesWithBlock:
enumerateMappingFollowingSwapsUsingBlock:
enumerateMatchesInString:options:range:usingBlock:
enumerateMergeFormulasUsingBlock:
enumerateMergedStrokesAndCapsForGridColumn:from:to:usingBlock:
enumerateMergedStrokesAndCapsForGridRow:from:to:usingBlock:
enumerateMergedStrokesForGridColumn:from:to:usingBlock:
enumerateMergedStrokesForGridRow:from:to:usingBlock:
enumerateMergesIntersectingBaseCellRegion:usingBlock:
enumerateMergesIntersectingCellRegion:usingBlock:
enumerateMissingColumnsIntersectingCellRange:usingBlock:
enumerateMissingRowsIntersectingCellRange:usingBlock:
enumerateModelCellRectsUsingBlock:
enumerateModelConcurrentlyUsingChunkBeginBlock:concurrentBlock:finalBlock:
enumerateNamesMatchingPrefix:block:
enumerateObjectsUsingBlock:
enumerateObjectsWithBlock:
enumerateObjectsWithOptions:usingBlock:
enumerateOptionsUsingBlock:
enumeratePropertiesAndObjectsUsingBlock:
enumeratePropertiesUsingBlock:
enumerateRangesInRange:options:usingBlock:
enumerateRangesUsingBlock:
enumerateRangesWithOptions:usingBlock:
enumerateRawStrokesSegmentsUsingBlock:
enumerateReferencesWithBlock:
enumerateRepeatLayoutSpacesUsingBlock:
enumerateRowByRowInRange:withBlock:
enumerateRowCellCountDiffUsingBlock:
enumerateRowColumnRuleValuePairsUsingBlock:
enumerateRowHeightsUsingBlock:
enumerateRowRangesInReverseUsingBlock:
enumerateRowRangesUsingBlock:
enumerateRowUIDUsingBlock:
enumerateRowUidsWithBlock:
enumerateRowsAndIndexesWithBlock:
enumerateRowsInReverseUsingBlock:
enumerateRowsIntersectingCellRange:usingBlock:
enumerateRowsOfCellsConcurrentlyUsingBlock:
enumerateRowsUidsAtLevel:withBlock:
enumerateRowsUsingBlock:
enumerateRowsWithBlock:
enumerateRulesInFilterIndex:usingBlock:
enumerateRulesUsingBlock:
enumerateSeriallyUsingBlock:
enumerateSmartFieldsWithAttributeKind:inRange:usingBlock:
enumerateSpecifiersAndValuesWithBlock:
enumerateSpecifiersWithBlock:
enumerateStoragesInColumnRange:getPreBNC:withBlock:
enumerateStoragesInColumnRange:withBlock:
enumerateStrokesAndCapsFrom:to:usingBlock:
enumerateStrokesAndCapsInRange:usingBlock:
enumerateStrokesFrom:to:usingBlock:
enumerateStrokesInRange:usingBlock:
enumerateStrokesInRegion:usingTopStrokeBlock:usingBottomStrokeBlock:usingLeftStrokeBlock:usingRightStrokeBlock:
enumerateStrokesUsingBlock:
enumerateSubstringsInRange:options:usingBlock:
enumerateTilesConcurrentlyUsingBlock:
enumerateTilesWithBlock:
enumerateValuesForColumn:usingBlock:
enumerateValuesForRow:usingBlock:
enumerateValuesUsingBlock:
enumerateViewCellRectsUsingBlock:
enumerateVisibleColumnIndexesInRange:usingBlock:
enumerateVisibleIndexesInRange:usingBlock:
enumerateWidthsInLayers:usingBlock:
enumerateWidthsInRange:usingBlock:
enumerateWithAttributeKind:inRange:usingBlock:
equalityPermitted
equalsCellRange:
equalsCellRegion:
error
errorCount
errorCountForOwner:
errorForErrorType:
errorForErrorType:functionName:argIndex:
errorForRichTextStorage:outValue:
errorForToken:
errorIsRangeUsageError
errorType
errorTypeKey
errorValue
errorWithDictionary:
errors
estimateByteSize
estimatedByteSize
estimatedByteSizeOfElement:
estimatedMemoryCost
evaluateAtCellID:onOwnerUID:calcEngine:
evaluateFormulaAt:withCalcEngine:recalcOptions:
evaluateFormulaAtCellID:withCalcEngine:onOwnerUID:
evaluateSynchedWithCalcEngineWithFormula:evalContext:
evaluateWithContext:
evaluateWithContext:isInACycle:outErrorIsDueToCycle:
evaluateWithContextGridResult:
evaluationContext
evaluationMode
exceptionIsCircularReferenceError:
exceptionIsFromCalcEngine:
exceptionIsInvalidMergeReference:
exceptionIsRangeUsageError:
exceptionWithName:reason:userInfo:
excludeSummaryAndLabelRows
excludedUidsTract
executeBlockWhileCalculationEngineIsNotWriting:
exitCalcEngineMode
expandBackgroundFill
expandBaseCellRectToCoverMergedCells:
expandBaseCellRegionToCoverMergedCells:
expandCellRangeToCoverMergedCells:
expandCellRangeToVisibleNeighbors:
expandCellRegionToCoverMergedCells:
expandDirtyRegionForReferences
expandGroupUidsForFlattening:forDimension:
expandSpanningCategoryRef:
expandSummaryColumnGroupUIDs:
expandSummaryGroupUIDs:
expandSummaryRowGroupUIDs:
expandToIncludeCoord:
expandUsingIndexes:forRows:
expandedRowColumnUuids
expandedSetWithUuid:
expandedSetWithUuids:
expectedArgTypeForPredicateType:firstArg:
explicitFormatFlags
explicitFormatOfKind:atModelCellCoord:currencyIsMostRecentlySet:
exportPermanentHidingState
exportString
exportsCellAnnotations
exportsCellComments
expressionNode
expressionTree
expressionsIdenticalToExpression:
expressionsMatchingCSENodeData:forNode:
extendMappingWithTableUIDs:calcEngine:
extendTableUIDHistoryWithRewrite:
extendedPartitionRangeSingleSpaceIntersectionWithCellRange:
exteriorStroke
exteriorStrokeForStrokePreset:
exteriorTextWrap
extractComponentsFromDate:year:month:day:
extractComponentsFromDate:year:month:day:hour:minute:second:
fStatistic
falseString
fetchQuotesWithTickers:completion:
fetchableKeysFromSet:
fetcherWithCoordinator:
fileFormatVersion
fileSystemRepresentation
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
fillCellRangeColMajorSet:topToBottom:
fillCellRangeRowMajorSet:leftToRight:
fillForColumn:
fillForRow:
fillInColumnGapsUsingIndexes:
fillInRowGapsUsingIndexes:
fillType
filterAtIndex:inTable:
filterByAddingRule:
filterByClearingRules
filterByRemovingRuleAtIndex:
filterColons
filterCoordTypeForFilterCoordinate:
filterCount
filterFormulaContainingCell
filterFormulaCoordForViewColumnRow:
filterFormulaCoordinateForColumnOrRow:
filterFormulaCoordinateForType:columnOrRowIndex:
filterIndex
filterIndicesForBaseColumn:inTable:
filterSet
filterSetForColumns
filterSetForPivotDataTable:
filterSetForRows
filterSetType
filterSetUpdated
filterUsingPredicate:
filterWithIndex:baseColumnIndex:rules:
filterWithProperties:
filterWithRule:atIndex:
filteredArrayUsingPredicate:
filteringBaseColumnRange
filteringBodyRange
filteringBodyRowRange
filteringCategoryRefAt:forDimension:
filteringChanged:forDimension:
filteringChangedPrecedentForTableUID:
filteringColumnNameForBaseColumnIndex:
filteringColumnNameForColumnIndex:
filteringDisplayColumnNameForBaseColumnIndex:
filteringRange
filteringTableModel
filteringTableTranslator
filteringTableUID
final
finalDstTableUID
finalTopRowIndex
finalizeLayoutPassWithRowsNeedingFittingInfo:
find:
findCellForCellID:
findCellForCellUID:
findChartableRangesFromTableRange:getBodyRange:headerColumnRange:headerRowRange:
findExistingGroupNodeInGroupBy:usingValues:upToLevel:coerceForDateFields:
findFirstVisibleIndexInBegin:afterEnd:
findGroupNodeForDisplayValuesFromSplitter:atLevel:startAtComponent:startAtWord:preserveFlags:
findGroupNodeForValue:atLevel:createIfMissing:
findGroupNodeForValue:atLevel:locale:
findKeyForRowUid:
findLastVisibleIndexInBegin:afterEnd:
findLayoutIfAvailableInSet:intersectingRow:
findNthNextVisibleIndex:fromIndex:
findNthPreviousVisibleIndex:fromIndex:
findSelectionHighlightLayer
findStrokeAndRangeAtIndex:
findTileForString:findClosest:
findTileForString:findClosest:foundAtOffset:
findWidthAndRangeAtIndex:
finerGroupingTypeFor:
finerGroupingTypeFor:groupTypesToAvoid:
finishInit
first
firstAggregate
firstBucketForArchiving
firstCellID
firstChildHint
firstEmptyBodyRow
firstFilterIndexForBaseColumn:inTable:
firstFragment
firstIndex
firstIndexNotInIndexSet:beginRange:pastEndRange:
firstIndexNotInIndexSet:orIndexSet:beginRange:pastEndRange:
firstIndexOfSubtree
firstMissingDataField
firstObject
firstPartitionWidth
firstTractWithPurpose:
firstUidFromUIDSet:isRows:
firstValue
firstVisibleNodeUsingColumnRowUIDMap:forDimension:leafLevel:pivotTableHiddenExtent:
fittingHeightOfRow:
fittingWidthsMapForColumns:includeStrokes:
fixPreserveFlagsForCategoryRefInNode:
fixStorageLanguage:
fixedColumnWidth:
fixedColumnWidthStack
fixedWidthProvider
fixupFormulas
flags
flattenGroupValuesIfNeededForCell:viewCellCoord:summaryAndLabelRows:categoryColumns:
flattenStrokeOrder
flattenedCellRefForCategoryRef:calcEngine:
flattenedGrid:
flattenedGridNoThrow:
flatteningDimension
floatValue
floatValueForProperty:
floatingAboveText
floatingHeaderColumnRangeAtRect:
floatingHeaderRowRangeAtRect:
flush
flushAllDirtyReferences
flushAllFormulaChanges
flushCachedIndexSets
flushCellDirtier
flushFormulaChangesForSeconds:
flushRemoveFormulas
flushReplaceFormulas
flushResetFormulas
foldName:
followsLinksOnFirstTap
fontHeightInfoAtCharIndex:
fontHeightOfParagraphStyle:
fontInfoCache
fontInfoForTextStyle:
fontInfoForTextStyle:withString:
fontSize
footerColumnSeparatorColumnRange
footerRowBodyColumnStroke
footerRowBodyRowStroke
footerRowBorderStroke
footerRowCellStyle
footerRowPivotGroupVerticalStroke
footerRowRange
footerRowSeparatorRowRange
footerRowSeparatorStroke
footerRowTextStyle
footerRowsFill
forConditionalStyle
forDrawing
forFormulaPlainText
forallRefs:
forceEscaping
forceGroupingChangeReset
forceLoadHeaders
forceParentAutosizeFlagsForTextLayout:
forceParentAutosizedFrameForTextLayout:
forceReferenceInterpretationOfChildren
forceSheetName
forceSplitting
forceTableName
forceWesternLineBreaking
forceZoomInOnBeginEditing
forcingRegion
foreach:
foreachAnyRef:
foreachCellRect:
foreachFormulaInOwnerKind:performBlock:
foreachRangeRef:
foreachSpanningRangeRef:
foreachUuid:
formUnionWithCharacterSet:
format
formatAndValueFromCell:applySpareFormatOnly:
formatAndValueFromCell:useAllSpareFormats:
formatAndValueFromCell:useAllSpareFormats:forceNoContent:
formatAndValueFromCell:useAllSpareFormats:suppressApplyingValue:
formatAndValueFromRichTextCell:updatingStorageWithBlock:
formatAtIndex:
formatAtIndex:accessContext:
formatByFixingUnitsIfNecessaryForTimeInterval:
formatForCalcEngineAtBaseCellCoord:formatIsExplicitOut:
formatForKey:
formatForStorageFlag:
formatFromArchive:
formatIDForStorageFlag:
formatName
formatOfCellFormatKind:isExplicit:
formatOfType:allowMismatchedSpare:
formatString
formatStringContainsAMPMSpecifier
formatStringContainsOnlyDate
formatTableReference
formatType
formatType:isSameCellFormatKindAs:
formatType:isSameCellFormatKindAs:allowNumberCurrencyMismatch:
formatType:sharesASpareSlotWithFormatType:
formatTypeIsExpected:
formatsAdded
formatsRemoved
formattedDataParagraphStylePropertyMapForCell:atCellID:
formattedForDollarFunction:precision:forLocale:
formattedGridForFunction:argumentIndex:context:format:
formattedValue
formattingSymbols
formulaAtBaseCellCoord:
formulaAtCellCoord:
formulaAtCellID:
formulaCoord
formulaCoordSpace
formulaCoordsInRange:inOwner:
formulaCoordsReferringToRange:fromOwner:
formulaCoordsReferringToRange:fromOwner:skipSpanning:
formulaCount
formulaCreatorForPredArg
formulaCreatorForPredArg0UsingLinkedRef:useColumnRef:
formulaDefinitionPrecedentForTableUID:
formulaDetokenizedText
formulaEditorEvaluatesFormulas
formulaError
formulaErrorForKey:
formulaErrorTableReference
formulaFixupsShouldStick
formulaForCell:atCellID:inTable:
formulaForKey:
formulaID
formulaObject
formulaObjectAtIndex:
formulaOwner
formulaOwnerId
formulaOwnerUIDForInternalFormulaOwnerID:
formulaOwnerUIDs
formulaPlainText
formulaQuoteContextAtCharIndex:inStorage:
formulaResultForFormattedValue:context:suppressCycleCheck:formatAsPercent:
formulaResultForFormattedValueWithKnownCycleState:context:isInACycle:outErrorIsDueToCycle:formatAsPercent:
formulaSpec
formulaSpecAtBaseCellCoord:
formulaSpecAtCellID:
formulaSpecForStorageRef:
formulaStore
formulaStringAtCellRef:
formulaSyntaxError
formulaSyntaxErrorAtBaseCellCoord:
formulaSyntaxErrorAtCellID:
formulaSyntaxErrorID
formulaSyntaxErrorString
formulaTableReference
formulaWasFixable
forwardRegisterOwnerWithOwnerUID:legacyGlobalID:
foundANumber
foundConsistencyIssues
fourth
fractionAccuracy
fragmentEntryForNameFragmentPrecedent:
fragmentEntryForString:
frame
frameBounds
frameForCaptionPositioning
frameForGridRange:
frameForRange:
frameForTableNameBorder
frameHasWidthAndHeight
frameInRoot
frameInUnscaledCanvas
frameWithViewScale:contentFrame:
frameWithViewScale:contentFrame:checked:outCheckboxImage:outCheckboxSize:
freeAggFormulaCoord:
fromGroupByUID
fromTableCoordMapperForPasteboard
fromTableUID
frozenHeaderColumnsSpace
frozenHeaderCornerSpace
frozenHeaderRowsSpace
fullIdentifier
fullTransform
functionIndex
functionLocalizationDictionary
functionName
functionNode
functionNode:functionName:whitespaceAfterLabel:
functionSpecForFunctionIndex:
functionSpecForFunctionName:
functionSpecList
functionsUsed
gapForColumnIndex:bodyWidth:
gatheredCellRegion
gatherer
generateCategoryStrokesInTableStyle:
generateCategoryStylesConnectedToStylesheet:
generatePivotStrokesInTableStyle:
generatePivotStylesConnectedToStylesheet:
generateRandomSeed
generateWidthHeightCollection
geometricFormula
geometry
geometryByTranslatingBy:
geometryForPrototypeIndex:withCanvasPoint:
geometryForRTLTableWithGeometry:
geometryFromFullTransform:
geometryPrecedentForTableUID:
getAggregateType:
getAllCellRefs:referringToOwnerUID:
getBytes:length:
getCategoryReferencesWithCalcEngine:
getCell:atBaseCellCoord:
getCell:atBaseCellCoord:suppressCellBorder:
getCell:atCellCoord:
getCell:atCellID:
getCell:atCellID:holdingReadLockWithAccessController:
getCell:atCellID:suppressCellBorder:
getCell:atCellUID:
getCell:atCellUID:suppressCellBorder:
getCellRefs:forGroupRootInGroupBy:
getCellRefs:inGroupBy:
getCellRefs:inGroupBys:
getCellRefs:referringToGroupNodes:inGroupBy:
getCellRefs:referringToOwner:
getCellRefs:referringToOwnerUID:referringToUuids:
getCellRefs:referringToOwners:
getCellRefs:referringToUuids:
getColumnInitialWidth:
getColumnWidthResize:
getCurrentFormat
getDefaultCell:forBaseCellCoord:
getDefaultCell:forCellID:
getDefaultCell:forCellUID:
getDefaultCell:forTableStyleArea:
getFitHeight:andModelHeight:forRow:
getFitHeightForRow:
getHidingActionForRows:
getHidingIndexesForGrandTotalsForPivotTable:columns:rows:
getIndexes:maxCount:inIndexRange:
getMinimumColumnWidth:
getMinimumRowHeight:
getModelHeightForRow:
getModelWidthForColumn:
getNextAggFormulaCoord
getNextCellData:
getNextPrecedentCoord:
getPivotDataBundleForUidCoord:
getPivotDataBundleForUidCoord:upToLevel:
getPivotHidingIndexesForGroupingColumn:columns:rows:forHiding:forPivotTable:
getPrecedents:calcEngine:hostCell:doImplicitIntersection:returnUidReferences:
getPrecedents:calcEngine:hostOwnerUID:hostCellID:
getPrecedentsWithCalcEngine:hostOwnerUID:
getPredArgDataFromCell:
getPreviousUidCoordForAggIndex:fromNewUidCoord:addNewUidCoordEvenIfNotFound:
getRefCountsFromDataList
getResolverUID
getRowHeight:
getRowHeightResize:
getRowInitialHeight:
getSpaceContainingCellID:
getTextPropertiesWithCell:cellID:wraps:alignment:verticalAlignment:padding:
getUUIDBytes:
getUUIDBytes:forColumnIndex:
getUUIDBytes:forRowIndex:
getUUIDBytesForColumn:
getUUIDBytesForColumnUid:
getUUIDBytesForGroupingColumnUid:
getUUIDBytesForRunningTotalGroupingColumn:
getUidCoordforRunningAggregate:tupleForCoord:newUidCoord:addNewUidCoordEvenIfNotFound:inContext:
getValue:
getValue:atBaseCellCoord:fetchRichTextAttributesIfPlainText:
getValue:atBaseCellCoord:fetchRichTextAttributesIfPlainText:skipPendingWrites:
getValue:atCellID:fetchRichTextAttributesIfPlainText:
grabViewUidMapper
grandGrandTotalCategoryRefForAggregate:
grandTotalCategoryRefForColumn:forAggregate:
grandTotalCategoryRefForRow:forAggregate:
gregorianCalendarLocale
gridKind
gridPointHitByCanvasPoint:tabsViewable:
gridPointHitByLayoutPoint:
gridRange
gridRangeForLayoutRect:
gridRangeOfLayoutSpace:
groupByByUid:
groupByChange
groupByChangeDistributor
groupByChangedPrecedentForTableUID:
groupByForCategoryRef:withCalcEngine:
groupByForColumnGroups
groupByForColumns
groupByForOwnerIndex:
groupByForOwnerIndex:createIfMissing:
groupByForRowGroups
groupByForRows
groupByForUID:withCalcEngine:
groupByForUuidCoord:
groupByRootUid
groupBySet
groupByUID
groupByUid
groupBys
groupCellValue
groupColumnIndexesForOwnerIndex:
groupHierarchyTreeAsFiltered:usingOrder:forDimension:
groupLevel
groupLevelAtLabelRow:
groupLevelAtRow:
groupLevelAtSummaryColumn:
groupLevelAtSummaryRow:
groupLevelForGroupUid:
groupLevelForGroupUid:isBlank:isError:
groupLevelInTable:
groupNode
groupNodeForGroupUid:
groupNodeForGroupUuid:
groupNodeForGroupValueHierarchyFromSplitter:startAtComponent:startAtWord:preserveFlags:
groupNodeForRowUid:atLevel:
groupNodeForUuidCoord:
groupNodeUIDInfo
groupNodesByGroupUid
groupSortOrder
groupSortOrderByRemovingColumnUIDs:tableInfo:
groupSortOrderByReplacingRuleAtIndex:withRule:withTableInfo:
groupSortOrderWithRules:withTableInfo:
groupSortOrderWithTableInfo:
groupSortRules
groupSortRulesForLevel:tableInfo:
groupUid
groupUidsGivenRowUids:selectedLevels:
groupUidsGivenUids:selectedLevels:forDimension:
groupUuid
groupValueAtLevel:
groupValueCellValue
groupValueCellValueForGroupBySet:aggIndex:appendAggregateName:
groupValueForValue:calcEngine:
groupValueHierarchyForChart:
groupValueHierarchyForChart:groupBySet:aggIndex:appendAggregateName:
groupValueHierarchyRefAtLevel:
groupValueHierarchyRefOnValue:atLevel:
groupValueHierarchyStringForCategoryRef:forHostCellRef:namingContext:
groupValueHierarchyStringWithDelimiterString:
groupValueHierarchyStringWithDelimiterString:namingContext:
groupValueRefAtLevel:
groupValueRefOnValue:atLevel:
groupValueTupleByAppendingTuple:
groupValueTupleByAppendingValue:
groupValueTupleByDemotingValueAtLevel:toLevel:
groupValueTupleByMergingTuple:toLevel:
groupValueTupleByPromotingValueAtLevel:toLevel:
groupValueTupleByRemovingValueAtLevel:
groupValueTupleByReplacingValue:atLevel:
groupValueTupleForRowUid:atLevel:
groupValueTupleForUuidCoord:createIfMissing:
groupValueUid
groupValueUidForTuple:appendingTuple:
groupValueUuid
groupWithStartingTileID:
groupingArrowStateAtCellID:
groupingColumnAtCategoryLevel:
groupingColumnChanges
groupingColumnForColumnUID:
groupingColumnForIndex:
groupingColumnHeadersFormulaCoord
groupingColumnLevelCountForColumn:
groupingColumnLevelsForColumn:
groupingColumnListCopy
groupingColumnOptionsMapCopy
groupingColumnUID
groupingColumnUid
groupingColumnUidExists:
groupingColumnUidList
groupingColumnsForOwnerIndex:
groupingColumnsFormulaCoord
groupingComboForGroupingType:
groupingIndexForColumnUID:
groupingSeparator
groupingType
groupingTypeIsAnyDateType:
groupingTypesAreUniqueForColumn:
groupsAtLevel:
handleFailureInFunction:file:lineNumber:isFatal:description:
handleForCellStyle:
handleForTextStyle:
handlePivotSorting:
hasASlotForFormatType:
hasActiveFilters
hasAlternatingRows
hasAnyCustomFormat
hasAnyDateArgumentsToFunction:
hasAnyExplicitFormats
hasAnyFormats
hasAnyRichTextCells
hasAnyWarning
hasArchivableState
hasAttachmentsThatChangeWithPageNumberOrPageCount
hasBadRefWithUidInfo
hasBareArgumentPlaceholders
hasBeforeAfterCounts
hasBooleanFormat
hasCachedIsValidReference
hasCachedValue
hasCategoryRef
hasCategoryRules
hasCellAtCellID:
hasCellID:
hasCellOrTextStyles
hasCellSpec
hasCellStyle
hasCells
hasCollapsedColumns
hasCollapsedRows
hasCommentAtBaseCellCoord:
hasCommentAtCellID:
hasCommentStorage
hasCommentStorageAtBaseCellCoord:
hasConditionalStyle
hasContent
hasContentIsCached
hasControl
hasControls
hasCurrencyFormat
hasCurrentFormat
hasCustomFormatsToPaste
hasDamagedTokenAttachments
hasDateEqualToDate:
hasDateFormat
hasDateTimeVolatileFunctions
hasDeferredImportActions
hasDisallowedHeaderIndexingForTableUID:
hasDuplicatedElements
hasDurationFormat
hasEnabledGroupBys
hasEqualContentToCell:
hasEqualContentToCell:usingRichTextObjectComparisonBlock:
hasEqualStrokes:
hasEqualValueToCell:
hasEqualValues:forProperties:
hasExplicitFormatOfType:allowMismatchedSpare:
hasFilterRulesAffectingInsertRows
hasFilterRulesInBaseColumns:
hasFilterRulesWithTable:inBaseColumns:
hasFormatOfType:allowMismatchedSpare:
hasFormula
hasFormulaAnyError
hasFormulaAt:
hasFormulaAtBaseCellCoord:
hasFormulaAtCellCoord:
hasFormulaAtCellID:
hasFormulaAtCellUID:
hasFormulaCellsUsingNowTodayRandom
hasFormulaEvaluationError
hasFormulaSyntaxError
hasFormulaSyntaxErrorAtCellID:
hasFormulas
hasFullTupleInformation
hasFullyPopulatedCache
hasGroupingArrowAtCellID:
hasGroupingArrowInCellRegion:
hasHeaderColumnForAggregateNames
hasHeaderContent
hasHeaderRowForAggregateNames
hasHeightForRow:
hasHiddenAtIndex:
hasHiddenColumnAtIndex:
hasHiddenColumnAtIndex:forAction:
hasHiddenColumnsOrRows
hasHiddenRowAtIndex:
hasHiddenRowAtIndex:forAction:
hasHostCell
hasImportWarningSet
hasImportWarnings
hasInterestingKeys
hasLargerFonts
hasMaxNumFormulas
hasMergeFormulas
hasMergeFragmentAtCellID:
hasMergeRangeSpanningRowsForBaseCellRect:
hasMergeRangeSpanningRowsForCellRange:
hasMergeRanges
hasMergeRangesIntersectingBaseCellRect:
hasMergeRangesIntersectingBaseCellRegion:
hasMergeRangesIntersectingCellRegion:
hasMigratableStylesInCells
hasMismatchedFormatAndValue
hasMultiRowMerge
hasMultipleCells
hasNamesInHeaders
hasObjectForKey:
hasPastableFormulas
hasPreUFFVersion
hasPrefix:
hasRangeSpanningRowsForCellRange:
hasRangeSpanningRowsForCellRect:
hasRangeSpanningRowsForCellRegion:
hasReceiver:
hasReference
hasRelativeCellRef
hasRemoteDataFunctions
hasRewrittenCellAt:
hasRichText
hasRunRecalculationALongTime
hasRunningTotalAggregates
hasSpillStrokeInRange:
hasStockFormulaForStockUI
hasStringContentMatchingCell:
hasStrokeInRange:
hasStrokeSpillForLeftGridColumn:inRow:
hasStylesInCells
hasSuffix:
hasSummaryRowsInRegion:
hasTSCEFormula
hasTableBorder
hasTableStyles
hasTableUID
hasTextFormat
hasTextStyle
hasUidTracts
hasUnfilteredAt:forDimension:
hasUnfilteredRows
hasUntitledTableNameFormat
hasUsefulPivotDataInSourceBodyTract:
hasUsefulPivotSourceCellsInBodyRange:
hasValidInfo
hasValidRunningTotalFieldForAggregate:
hasValidUidMap
hasValue
hasValueAtColumn:row:
hasValueAtCoord:
hasVisibleCellWarnings
hasWidthForColumn:
hasWorkItems
hasWrite
hash
hauntedOwner
headerCellsExactlyMatching:
headerCellsMatching:limitToTable:includePrefixes:
headerCellsMatchingPrefix:
headerColumnBodyColumnStroke
headerColumnBodyRowStroke
headerColumnBorderStroke
headerColumnCellStyle
headerColumnPivotGroupDeEmphasisStroke
headerColumnPivotGroupHorizontalStroke
headerColumnPivotSeparatorStroke
headerColumnRange
headerColumnRowCoordinates
headerColumnSeparatorColumnRange
headerColumnSeparatorStroke
headerColumnTextStyle
headerColumnsFill
headerColumnsFrozen
headerColumnsRepeat
headerColumnsWidth
headerInfo_hidingActionForColumnAtIndex:
headerInfo_hidingActionForRowAtIndex:
headerNameMgr
headerRowBodyColumnStroke
headerRowBodyRowStroke
headerRowBorderStroke
headerRowCellStyle
headerRowColumnCoordinates
headerRowPivotGroupDeEmphasisStroke
headerRowPivotGroupVerticalStroke
headerRowPivotTitleStroke
headerRowRange
headerRowSeparatorRowRange
headerRowSeparatorStroke
headerRowTextStyle
headerRowsFill
headerRowsFrozen
headerRowsHeight
headerRowsRepeat
headerSideBorderColumnRange
headerStateOfTableChanged:
headerStateOfTableChanged:changedRows:
headersFrozenByDefault
height
heightFactor
heightForString:textMeasurerBundle:width:outFitWidth:
heightForString:width:outFitWidth:
heightForTextStyle:
heightOfRow:skipDynamicSwap:withStrokeHeights:returnZeroIfHidden:clampToPartitionSize:maximumPartitionSize:outIsFitting:
heightOfRowAtIndex:
heightOfRowAtIndex:isDefault:
heightOfRowIgnoringFitting:withStrokeHeights:
heightValid
hidden
hiddenColumnIndexes
hiddenColumnIndices
hiddenOrCollapsedIndexes
hiddenRowIndexes
hiddenRowIndices
hiddenRowsColumnsCache
hiddenStateExtentUid
hiddenStateForColumnsOwnerUID
hiddenStateForRowsOwnerUID
hiddenStateFormulaOwnerForColumns
hiddenStateFormulaOwnerForRows
hiddenStateOwnerForColumnsUID
hiddenStateOwnerForRowsUID
hiddenStates
hiddenStatesByExtentUid:
hiddenStatesChangedPrecedent
hiddenStatesForPivotDataTable:
hiddenStatesOwner
hideAtBaseIndex:forAction:
hideAtUid:forAction:
hideAtUid:forIndex:forViewIndex:forAction:
hideAtViewIndex:forAction:
hideAtViewIndexes:forAction:
hideBaseColumnAtIndex:forAction:
hideBaseRowAtIndex:forAction:
hideChromeContextMenuButton
hideColumnAtIndex:forAction:
hideColumnsAtIndexes:forAction:invalidate:
hideRowAtIndex:forAction:
hideRowsAtIndexes:forAction:invalidate:
hideStepperHUD
hideTotals
hidingAction
hidingActionForBaseColumnAtIndex:
hidingActionForBaseIndex:
hidingActionForBaseRowAtIndex:
hidingActionForColumnAtIndex:
hidingActionForRowAtIndex:
hidingActionForUid:
hidingActionForViewIndex:
hidingStateAtIndex:
hidingStateOfColumnAtIndex:
hidingStateOfRowAtIndex:
highestScaleFactorForRenderingDrawableInfo:
highlighted
hint
hintCacheKeyForHint:
hintCacheKeyForPartitioningPass:andHintID:
hintForLayout:
hintIsValid:
hintMatricesByCanvas
hitRep:withPrecision:
horizontal
horizontalFlip
horizontalStroke
horizontalStrokeForStrokePreset:
hostCellCoord
hostCellRef
hostColumnUID
hostRowUID
hostTableUID
hostedDescriptionAtCell:
hostedDescriptionAtCell:calcEngine:
hostedDescriptionAtCell:calcEngine:hideUids:
hotSpecifierArray
hotSpecifiers
hour
hueComponent
hyperlinkContainerRep
hyperlinkRegionWithURL:bezierPath:
hyperlinkRegions
hyperlinkStyle
i_cellStyleHandleForDataListKey:
i_copyIntoContext:stylesheet:
i_copyIntoContext:stylesheet:paragraphStyle:listStyle:bakeModes:resettingHostTableToMatch:referenceColorHelper:disableMenus:
i_formatForDataListKey:
i_indexesForLabelRowsAtGroupLevel:
i_indexesForLeadingColumnsAtGroupLevel:
i_indexesForLeadingRowsAtGroupLevel:
i_indexesForLeadingSummaryColumnsAtGroupLevel:
i_indexesForLeadingSummaryRowsAtGroupLevel:
i_indexesForSummaryColumnsAtGroupLevel:
i_indexesForSummaryRowsAtGroupLevel:
i_populateCachedIndexSetsIfNeeded
i_populateIndexesForLabelRows
i_populateIndexesForLeadingColumns
i_populateIndexesForLeadingSummaryColumns
i_populateIndexesForLeadingSummaryRows
i_populateIndexesForSummaryAndLabelRows
i_populateIndexesForSummaryColumns
i_populatePivotCachedIndexSetsIfNeeded
i_rowInfoAtIndex:
i_stringForDataListKey:outShouldWrap:outIsShared:
i_textStyleHandleForDataListKey:
i_tileStartingAtOrAfterRowIndex:outTileRange:
i_tileStartingAtOrBeforeRowIndex:outTileRange:
idOfFirstOccurence
identifier
identifierComponents
identifiersForPresetID:
identityOwnerUIDMapper
identityTranslator
illegalCharacterSet
imageData
imageForScale:checked:outDrawingScale:
imageNamed:
imageWithCGImage:
importDate
importDeferredRemoveGroupingRowsAtIndexes:
importSettings
importSource
importWarningSet
importWarningSetForKey:
importWarningSetID
importWarningSetTableReference
importedRegion
inCalcEngineMode
inDynamicLayoutMode
inFindReplaceMode
inInvalidate
inPrintPreviewMode
inString
includeUidTractList
includedUidsTract
includesPrefixes
increment
incrementCellCountAtIndex:byAmount:
incrementCellCountsAtCellID:
incrementValueForKey:
incrementVersionCounter
index
indexForSelection:
indexForValue:
indexGreaterThanIndex:
indexIsAffected:
indexLessThanIndex:
indexLessThanOrEqualToIndex:
indexOfAnnotation:
indexOfGroupingColumn:
indexOfObject:
indexOfObjectIdenticalTo:
indexOfVisibleAfterAndIncludingIndex:
indexOfVisibleAfterIndex:
indexOfVisibleBeforeAndIncludingIndex:
indexOfVisibleBeforeIndex:
indexOfVisibleColumnAfterAndIncludingColumnAtIndex:
indexOfVisibleColumnAfterColumnAtIndex:
indexOfVisibleColumnBeforeAndIncludingColumnAtIndex:
indexOfVisibleColumnBeforeColumnAtIndex:
indexOfVisibleRowAfterAndIncludingRowAtIndex:
indexOfVisibleRowAfterRowAtIndex:
indexOfVisibleRowBeforeAndIncludingRowAtIndex:
indexOfVisibleRowBeforeRowAtIndex:
indexSet
indexSetBySubtractingOurIndexesFromIndexSet:
indexSetWithIndex:
indexSetWithIndexesInRange:
indexesForBaseCellRegion:
indexesForBodyAndFooterRows
indexesForBodyRowsInGroupWithRowAtIndex:
indexesForCategoryColumns
indexesForCategoryColumnsInRegion:
indexesForColumnsContainedByGroupUIDs:
indexesForGrandTotalColumns
indexesForGrandTotalRows
indexesForGroupingColumns
indexesForGroupingColumnsInRegion:
indexesForLabelRows
indexesForLabelRowsAtGroupLevel:
indexesForLabelRowsAtGroupLevel:inRegion:
indexesForLabelRowsInRegion:
indexesForLabelRowsUpToGroupLevel:omitGroupsWithUids:
indexesForLeadingColumns
indexesForLeadingColumnsAtGroupLevel:
indexesForLeadingColumnsInRegion:
indexesForLeadingRows
indexesForLeadingRowsAtGroupLevel:
indexesForLeadingRowsInRegion:
indexesForLeadingSummaryColumnsAtGroupLevel:
indexesForLeadingSummaryRows
indexesForLeadingSummaryRowsAtGroupLevel:
indexesForNonSummaryBodyRows
indexesForRange:
indexesForRowsContainedByGroupUIDs:
indexesForSummaryAndLabelRows
indexesForSummaryAndLabelRowsInRegion:
indexesForSummaryColumns
indexesForSummaryColumnsAtGroupLevel:
indexesForSummaryColumnsFromGroupLevel:toGroupLevel:
indexesForSummaryColumnsInRegion:
indexesForSummaryRows
indexesForSummaryRowsAtGroupLevel:
indexesForSummaryRowsAtGroupLevel:inRegion:
indexesForSummaryRowsFromGroupLevel:toGroupLevel:
indexesForSummaryRowsInRegion:
indexesForSummaryRowsUpToGroupLevel:omitGroupsWithUids:
indexesOfCollapsedColumnsInCellRange:
indexesOfCollapsedInRange:
indexesOfCollapsedRowsInCellRange:
indexesOfFilteredColumnsInCellRange:
indexesOfFilteredInRange:
indexesOfFilteredRowsInCellRange:
indexesOfGroupUidsInUids:
indexesOfHiddenColumnsInBaseCellRange:
indexesOfHiddenColumnsInCellRange:
indexesOfHiddenInBaseRange:
indexesOfHiddenInRange:
indexesOfHiddenRowsInBaseCellRange:
indexesOfUserHiddenColumnsInCellRange:
indexesOfUserHiddenInRange:
indexesOfUserHiddenRowsInCellRange:
indexesOfUserVisibleInRange:
indexesOfUserVisibleRowsInCellRange:
indexesOfVisibleColumnsInCellRange:
indexesOfVisibleColumnsInCellRegion:
indexesOfVisibleColumnsInColumnRange:
indexesOfVisibleInRange:
indexesOfVisibleIndexesInIndexes:
indexesOfVisibleRowsInCellRange:
indexesOfVisibleRowsInCellRegion:
indirectAggTypeChangeFormulaCoord
indirectErrorForRangeReference:hostTableUID:
individualWarnings
inflateFromStorageRef:dataStore:
inflateFromStorageRef:dataStore:cache:
inflateFromStorageRef:dataStore:suppressingTransmutation:
info
infoForSelectionPath:
infoGeometry
infos
init
initAffineWithMappings:xs:ys:xDimension:
initAsBadRefWithTableUID:uidTractList:
initAsCopyOf:intoContext:children:
initAsDetailTableWithContext:sourcePivotTableInfo:pivotSourceCell:
initAsEmptyAggregate
initAsFullTupleForColumnHeaderUid:rowHeaderUid:aggregateRuleUid:flatteningDimension:
initAsPivotDataWithContext:tableInfo:sourceModel:sourceBody:sourceHeader:
initAsRootNodeForContext:
initAsRootNodeForGroupBy:
initByCopyingASTNodeArray:atFormulaCoord:
initDefaultPropertyMap:forTableStyleArea:presetID:colors:alternate:
initDefaultPropertyMap:presetID:colors:alternate:
initDefaultStrokePresetListInPropertyMap:presetID:colors:
initForCategoriesWithColumnUid:aggregateType:level:
initForCategorizedTableBaseToChromeRewriterWithSrcTableUID:srcTract:dstTableUID:destTract:coordMapper:
initForCategorizedTableChromeToBaseRewriterWithSrcTableUID:srcTract:dstTableUID:destTract:coordMapper:srcCoordMapper:fromTableUID:
initForGroupBy:groupNodeUIDReassignment:
initForGroupBy:withGroupByChange:
initForInsertingRowsOrColumnsIntoTable:rowColumnUuids:areRows:
initForMergeCellsWithTableUID:columnUids:rowUids:mergeSource:
initForMergeOriginsMovedWithMap:reverseMap:inTableUID:
initForMovingRegionWithSrcTableUID:srcTract:dstTableUID:destTract:
initForMovingRowsOrColumnsInTable:rowColumnUuids:shuffleMap:areRows:srcTract:destTract:
initForPastingCellsWithTableUID:columnUids:rowUids:
initForPivotDataTableWithMapper:
initForPivotWithColumnAggregateUid:columnUid:aggregateType:showAsType:runningTotalGroupingColumnUid:
initForPivotWithColumnUid:aggregateType:
initForPivotWithColumnUid:aggregateType:showAsType:runningTotalGroupingColumnUid:
initForRemoveRowsOrColumnsFromTable:rowColumnUuids:areRows:
initForReorderRowsWithTableUID:rowUids:shuffleMap:
initForSortWithTableUID:rowUids:shuffleMap:
initForTableUIDReassignment:
initForTestingWithContext:rows:columns:
initForUndoMergeCellsWithTableUID:columnUids:rowUids:mergeSource:
initForUpgradeWithTableInfo:cellRegion:anchorCellID:cursorCellID:baseRegion:selectionType:
initForUpgradeWithTableModel:
initFromArchive:
initFromArchive:dependencyTracker:
initFromArchive:ownerUID:
initFromArchive:unarchiver:
initFromArchive:unarchiver:owner:
initFromCell:useAllSpareFormats:
initFromCell:useAllSpareFormats:forceNoContent:suppressApplyValue:applySpareFormatOnly:
initFromCommandPropertyMapMessage:unarchiver:
initFromExpandedArchive:
initFromMessage:
initFromMessage:unarchiver:
initFromPrePivotArchive:
initFromPropertyCommandMessage:unarchiver:
initNonAffineWithMappings:xs:ys:xDimension:desiredIntercept:
initObjectWithCellSpec:refCount:
initObjectWithCommentStorage:refCount:
initObjectWithConditionalStyleSet:refCount:
initObjectWithCustomFormat:refCount:
initObjectWithFormat:refCount:
initObjectWithFormulaError:refCount:
initObjectWithImportWarningSet:refCount:
initObjectWithPopUpMenuModel:refCount:
initObjectWithRichTextPayload:refCount:
initObjectWithString:refCount:
initObjectWithStyle:refCount:
initPivotTableWithContext:sourceTableInfo:
initPivotTableWithContext:sourceTableInfo:sourceBodyRange:sourceHeaderRowRange:
initPivotTableWithContext:sourceTableInfo:sourceBodyRange:sourceHeaderRowRange:optionalDataModel:
initRuleWhereValuesInTable:andDataList:inBaseColumn:matchCell:
initShallowMapWithContext:uidBased:
initWitRefValue:rangeContext:
initWithAbsoluteTractRef:hostCell:
initWithArchive:
initWithArchive:aggregator:
initWithArchive:forCategoryOwner:unarchiver:
initWithArchive:forGroupBy:
initWithArchive:groupBy:
initWithArchive:isPreUFF:
initWithArchive:locale:
initWithArchive:unarchiver:
initWithArchive:unarchiver:forBaseTable:
initWithArchive:unarchiver:forBaseTableUID:
initWithArchive:unarchiver:forHiddenStatesOwner:
initWithArchive:unarchiver:forTableModel:
initWithArchive:unarchiver:owner:
initWithArray:
initWithArray:context:
initWithArray:copyItems:
initWithAttributes:
initWithBase:basePlaces:baseUseMinusSign:
initWithBaseCellRef:preserveFlags:
initWithBaseCellReference:preserveColumn:preserveRow:
initWithBaseIndex:direction:
initWithBaseTable:
initWithBaseTableModel:
initWithBaseTableUID:
initWithBaseTableUID:ownerUID:
initWithBaseTractRef:calcEngine:
initWithBool:
initWithBoolean:locale:
initWithBooleanValue:locale:
initWithBucket:owner:
initWithBytes:length:encoding:
initWithCalcEngine:
initWithCalcEngine:baseRangeRef:preserveFlags:
initWithCalcEngine:chromeRangeRef:preserveFlags:
initWithCalcEngine:forMinion:options:
initWithCalcEngine:tableUID:uidRange:preserveFlags:
initWithCalcEngine:viewRangeRef:preserveFlags:
initWithCalcEngine:viewTractRef:
initWithCalculationEngine:baseHostCell:hostTable:
initWithCalculationEngine:expressionTree:baseHostCell:hostTable:
initWithCalculationEngine:viewHostCell:hostTable:
initWithCalendarIdentifier:
initWithCalendarIdentifier:timeZone:
initWithCapacity:
initWithCategoryRef:
initWithCellCoord:tableID:
initWithCellCoord:tableUID:
initWithCellID:dirtyPrecedentCount:
initWithCellMap:
initWithCellRef:
initWithCellRefVector:
initWithCellRegion:
initWithCellStyle:
initWithCellUIDList:
initWithCellUIDRange:
initWithCellUIDRangeVector:
initWithCellValue:
initWithChangeDescriptorType:cellRegion:cellID:strokeRegion:referenceIdentifiers:shuffleMapping:
initWithChangeDescriptorType:cellRegion:cellID:strokeRegion:referenceIdentifiers:shuffleMapping:annotations:
initWithChromeTractRef:calcEngine:
initWithCollapsed:expanded:dimension:
initWithColor:width:cap:join:pattern:
initWithColumn:context:
initWithColumn:forGroupBy:
initWithColumnAggregateUid:columnUid:aggregateType:level:showAsType:runningTotalGroupingColumnUid:
initWithColumnAggregates:
initWithColumnIndex:groupingType:inTableInfo:
initWithColumnRange:rowRange:
initWithColumnRowUIDMap:
initWithColumnUid:rowUid:purpose:
initWithColumnUids:rowUids:purpose:
initWithColumns:rows:tableUID:
initWithCommentStorage:
initWithComponents:aggregateFunction:
initWithConditionalStyleSet:
initWithContext:
initWithContext:affectsCellBorders:
initWithContext:argumentSpec:firstIndex:lastIndex:
initWithContext:asBlank:firstIndex:lastIndex:
initWithContext:boolValue:firstIndex:lastIndex:
initWithContext:calcEngine:
initWithContext:calculationEngine:
initWithContext:calculationEngine:baseHostCell:formula:ownerUID:
initWithContext:calculationEngine:baseHostCell:formula:ownerUID:suppressAutomaticNamedReferenceInvalidation:
initWithContext:calculationEngine:baseRangeRef:preserveFlags:hostCellRef:referenceColorHelper:suppressAutomaticNamedReferenceInvalidation:
initWithContext:calculationEngine:categoryRef:hostCellRef:referenceColorHelper:
initWithContext:calculationEngine:chromeRangeRef:preserveFlags:hostCellRef:referenceColorHelper:suppressAutomaticNamedReferenceInvalidation:
initWithContext:calculationEngine:uidRectRef:categoryRef:hostCellRef:referenceColorHelper:suppressAutomaticNamedReferenceInvalidation:
initWithContext:calculationEngine:uidRectRef:hostCellRef:referenceColorHelper:suppressAutomaticNamedReferenceInvalidation:
initWithContext:calculationEngine:viewHostCell:formula:ownerUID:
initWithContext:calculationEngine:viewHostCell:formula:ownerUID:suppressAutomaticNamedReferenceInvalidation:
initWithContext:calculationEngine:viewRangeRef:preserveFlags:hostCellRef:referenceColorHelper:suppressAutomaticNamedReferenceInvalidation:
initWithContext:cell:cellIDList:
initWithContext:cell:cellUIDList:
initWithContext:cell:cellUIDList:skipCellUIDListCopy:
initWithContext:cellDiff:cellUIDList:
initWithContext:cellDiffArray:cellUIDList:uidBased:
initWithContext:cellUIDRange:
initWithContext:children:
initWithContext:children:columns:rows:firstIndex:lastIndex:
initWithContext:children:firstIndex:lastIndex:
initWithContext:columnOrRowIndex:
initWithContext:columnUIDs:rowUIDs:
initWithContext:dateValue:firstIndex:lastIndex:
initWithContext:dependencyTracker:ownerID:ownerUID:owner:ownerIndex:
initWithContext:durationInterval:durationFormat:firstIndex:lastIndex:
initWithContext:firstIndex:lastIndex:
initWithContext:fromDictionary:withPreset:
initWithContext:fromSourceInfo:cellRegion:waitForCalcEngine:flattenCategories:isSnapshot:
initWithContext:fromSourceModel:region:tableInfo:waitForCalcEngine:
initWithContext:fromSourceModel:region:tableInfo:waitForCalcEngine:formulaCoordSpace:
initWithContext:functionIndex:children:firstIndex:lastIndex:
initWithContext:functionNode:firstIndex:lastIndex:
initWithContext:geometry:
initWithContext:geometry:rows:columns:
initWithContext:geometry:rows:columns:stylePreset:
initWithContext:geometry:rows:columns:stylePreset:styles:
initWithContext:hint:
initWithContext:identifier:firstIndex:lastIndex:
initWithContext:identifier:symbol:firstIndex:lastIndex:
initWithContext:majorStrokeLayer:minorStrokeLayer:
initWithContext:name:overridePropertyMap:isVariation:
initWithContext:number:locale:firstIndex:lastIndex:
initWithContext:number:string:firstIndex:lastIndex:
initWithContext:operatorChar:children:firstIndex:lastIndex:
initWithContext:ownerUID:
initWithContext:rowUids:columnUids:styles:stylePreset:tableInfo:
initWithContext:rows:columns:styles:stylePreset:tableInfo:
initWithContext:rules:
initWithContext:storage:
initWithContext:string:kind:stylesheet:paragraphStyle:listStyle:section:columnStyle:
initWithContext:string:kind:stylesheet:paragraphStyle:listStyle:section:columnStyle:paragraphDirection:
initWithContext:string:locale:firstIndex:lastIndex:
initWithContext:string:stylesheet:kind:
initWithContext:stringValue:firstIndex:lastIndex:
initWithContext:styleProvider:
initWithContext:styleProvider:presetID:
initWithContext:tableInfo:
initWithContext:tableInfo:pencilAnnotationStorage:
initWithContext:tableInfo:rowUids:
initWithContext:tableInfo:rowUids:columnUids:
initWithContext:tableUID:columnRowUIDMap:styles:stylePreset:tableInfo:
initWithContext:tableUUID:numberOfRows:numberOfColumns:
initWithContext:uidBased:
initWithContext:uidBased:affectsCellBorders:
initWithContext:url:
initWithContext:viewCellRect:
initWithContext:viewCellRect:cellUIDRange:
initWithContextResolver:
initWithContextResolver:components:
initWithContextTableResolver:
initWithContextTableResolver:components:
initWithCoordinator:
initWithCopyOfMajorStrokes:andMinorStrokes:
initWithCount:atOffset:layoutDirectionIsLeftToRight:
initWithCppCellTractRef:
initWithCreator:
initWithCreator:argInfo:translationFlags:
initWithCreator:translationFlags:
initWithCriterion:functionSpec:evaluationContext:
initWithCrossTableRef:
initWithData:
initWithDataList:
initWithDataStore:
initWithDate:
initWithDate:locale:
initWithDateValue:locale:
initWithDecimal:locale:
initWithDecimalPlaces:negativeStyle:showSeparator:accountingStyle:currencyCode:
initWithDefaultStrokeProvider:customStrokeProvider:tableInfo:
initWithDelegate:
initWithDependencyTracker:
initWithDeprecatedArchive:unarchiver:
initWithDictionary:
initWithDouble:locale:
initWithDuration:units:
initWithDynamicResizeInfo:
initWithErrorType:
initWithErrorValue:locale:
initWithExpressionNode:parenNestingLevel:
initWithExpressionNode:parenNestingLevel:argumentIndex:
initWithFilterRules:type:context:
initWithFirst:second:third:fourth:
initWithFlags:sortingAggregateRuleUid:
initWithFormatString:
initWithFormatType:customFormatKey:customFormat:
initWithFormatType:decimalPlaces:negativeStyle:showSeparator:
initWithFormulaCoord:groupNode:aggregator:
initWithFormulaObject:fromTableInfo:fromCellID:
initWithFormulaObject:locale:
initWithFormulaOwnerUID:
initWithFormulaOwnerUID:uuids:areRows:
initWithFormulaPredicate:
initWithFractionAccuracy:
initWithFrame:
initWithFunctionIndex:symbol:attribute:year:month:day:
initWithFunctionName:minArgs:maxArgs:repeatingGroupSize:isOperator:shipVersion:arguments:functionIndex:
initWithGrids:
initWithGroupBySet:
initWithGroupByUID:absGroupUid:columnUid:aggType:groupLevel:
initWithGroupByUID:absGroupUid:columnUid:aggType:groupLevel:aggrIndexLevel:
initWithGroupByUID:relGroupUID:absGroupUid:columnUid:aggType:groupLevel:aggrIndexLevel:preserveFlags:
initWithGroupByUID:relGroupUID:absGroupUid:columnUid:aggType:groupLevel:aggrIndexLevel:preserveFlags:relativeColumn:options:
initWithGroupByUid:groupNodeUIDMap:
initWithGroupCellValue:context:atLevel:groupUid:children:
initWithGroupCellValue:groupBy:atLevel:groupUid:children:
initWithGroupRules:withTableInfo:
initWithGroupingColumnUID:columnUID:direction:
initWithGroupingColumnUid:columnUid:groupingType:
initWithGroupingColumns:
initWithGroupings:categoryOwner:
initWithGroupings:categoryOwner:groupByUid:ownerIndex:
initWithGroupings:isEnabled:categoryOwner:groupByUid:ownerIndex:
initWithHeaderNameMgr:context:
initWithHeaderNameMgr:limitToTableUID:
initWithHiddenStatesOwner:
initWithHiddenStatesOwner:forRows:
initWithHiddenStatesOwner:shouldRegister:
initWithIdentityMapping
initWithImageData:
initWithImageData:technique:tintColor:size:
initWithIndex:baseColumnIndex:rules:
initWithIndexSet:
initWithIndexesInRange:
initWithInfo:
initWithInfo:frame:
initWithInfo:layoutEngineBundle:
initWithInfo:layoutHint:
initWithInfo:region:flags:searchMask:
initWithInitialCapacity:
initWithInitialValue:multipleChoiceListFormatID:popupModel:
initWithInt:
initWithInteractionType:minimum:maximum:increment:
initWithItems:context:
initWithKeyOptions:valueOptions:capacity:
initWithKeyboardShown:
initWithLayout:canvas:
initWithLayout:range:flags:searchFlags:
initWithLayoutEngine:
initWithLayoutEngine:columnRegion:
initWithLayoutEngine:columnRegion:rowRegion:
initWithLayoutEngine:range:flags:searchFlags:
initWithLayoutTask:
initWithLeftAnchor:rightAnchor:isVertical:
initWithLimit:
initWithLiteralDateType:date1:date2:number1:number2:qualifier1:qualifier2:argumentCellRef:hostCell:
initWithLiteralDateType:date1:date2:number1:number2:qualifier1:qualifier2:argumentCellRef:hostCell:forConditionalStyle:
initWithLiteralDurationType:duration1:durationUnits1:duration2:durationUnits2:qualifier:argumentCellRef:hostCell:
initWithLiteralNumberType:number1:number2:qualifier:argumentCellRef:hostCell:
initWithLiteralTextType:string:argumentCellRef:hostCell:
initWithLocaleIdentifier:
initWithMask:horizontalStroke:verticalStroke:exteriorStroke:
initWithMergeList:
initWithMergeOriginsMap:reverseMap:
initWithMergeRegion:mergeSource:
initWithMergedStack:
initWithMessage:unarchiver:
initWithModel:region:flags:searchMask:
initWithName:
initWithName:formatType:data:
initWithNodeArray:
initWithNodeArray:translationFlags:
initWithNodeArray:translationFlags:hostTableUID:hostColumnUID:hostRowUID:
initWithNotBlankColumnGroupsWithContext:withPivotTable:
initWithNotBlankRowGroupsWithContext:withPivotTable:
initWithNotifyType:group:
initWithNotifyType:group:rowUid:
initWithNumRows:andNumColumns:
initWithNumberOfSortRules:
initWithNumberValue:locale:
initWithObjects:
initWithObjectsAndKeys:
initWithOwner:
initWithOwnerDeletion:
initWithOwnerId:context:
initWithOwnerId:tileColumnBegin:tileRowBegin:context:
initWithOwnerInsertion:fromOwnerUID:
initWithOwnerUID:
initWithOwnerUID:archive:unarchiver:
initWithPadding:verticalAlignment:locale:shouldHyphenate:
initWithPattern:options:error:
initWithPbRange:tgtRange:
initWithPbTable:pbRange:tgtTable:tgtRange:flag:
initWithPivotRuleChange:
initWithPivotTable:minion:preservingStyles:
initWithPivotTableUID:
initWithPopupModel:startWithFirstItem:
initWithPosition:size:
initWithPosition:size:widthValid:heightValid:horizontalFlip:verticalFlip:angle:
initWithPredicate:cellStyle:textStyle:
initWithPredicateType:arg0:arg1:arg2:qualifier1:qualifier2:forConditionalStyle:
initWithPredicateType:arg1:arg2:qualifier1:qualifier2:argumentCellRef:hostCell:
initWithPredicateType:arg1:arg2:qualifier1:qualifier2:argumentCellRef:hostCell:forConditionalStyle:
initWithPredicateType:arg1:arg2:qualifier1:qualifier2:argumentCellReference:hostCell:forConditionalStyle:
initWithProperties:
initWithPropertiesAndValues:
initWithPurpose:
initWithRange:hintId:partitionPosition:maximumSize:effectiveSize:layout:validity:horizontal:
initWithRange:orderedUuids:offset:
initWithRangeCoord:tableID:
initWithRangeCoord:tableUID:
initWithRangeRef:
initWithRangeRef:hostCell:
initWithRangeRefRect:tableID:
initWithRawString:
initWithRdar39989167Archive:unarchiver:
initWithRefCount:
initWithReferenceSet:
initWithReferenceStart:referenceEnd:suppressAutomaticNamedReferenceInvalidation:
initWithReferenceString:
initWithRegexString:caseSensitive:entireMatch:
initWithRelativeCellRef:
initWithRewriteType:
initWithRows:context:
initWithRows:shouldUseWideRows:context:
initWithRules:type:
initWithSecondsTillAbort:
initWithSize:hidingAction:cellStyle:textStyle:columnRowUID:
initWithSize:offset:renderBlock:
initWithSourceCellRange:
initWithSourceCellRange:targetCellRange:
initWithSourceRectOrigin:cellUIDRange:
initWithSpanningRangeRef:
initWithSpecifierArray:
initWithSpecifiers:
initWithSrcTableUID:srcTract:dstTableUID:destTract:
initWithStartIndex:endIndex:
initWithStartingTileID:
initWithStorage:
initWithStorage:cellID:frame:
initWithStorage:forTableInfo:baseCellCoord:
initWithStorage:forTableInfo:cellUID:
initWithStorageRef:dataStore:
initWithString:caseSensitive:entireMatch:
initWithString:locale:
initWithString:width:height:paragraphStyle:cellWraps:valueType:paddingInsets:verticalAlignment:writingDirection:naturalAlignment:styleProvidingSource:
initWithStringValue:locale:
initWithStroke:range:order:andPosition:
initWithStroke:range:order:majorStrokeLayerToken:minorStrokeLayerToken:
initWithStrokeProvider:tableProvider:tableInfo:
initWithStrokeSidecar:region:
initWithStrokeVisibilityMask:
initWithStyle:andPropertyMap:
initWithStyleNetwork:
initWithStylesheet:
initWithStylesheet:paragraphStyle:listStyle:columnStyle:alignmentForNaturalAlignment:naturalDirection:
initWithSymbol:attribute:
initWithTSCEValues:locale:
initWithTSUUUIDVector:
initWithTableInfo:
initWithTableInfo:andCellID:
initWithTableInfo:andPreviousSelection:offsetBy:
initWithTableInfo:baseTableUID:context:
initWithTableInfo:cellID:selectionType:
initWithTableInfo:cellRange:type:anchorCellID:cursorCellID:
initWithTableInfo:cellRegion:
initWithTableInfo:cellRegion:anchorCellID:cursorCellID:
initWithTableInfo:cellRegion:anchorCellID:cursorCellID:baseRegion:
initWithTableInfo:cellRegion:anchorCellID:cursorCellID:baseRegion:selectionType:
initWithTableInfo:cellRegion:anchorCellID:cursorCellID:baseRegion:selectionType:searchReferenceRange:beginImplicitEditing:
initWithTableInfo:cellRegion:anchorCellID:cursorCellID:selectionType:
initWithTableInfo:cellUIDRegion:anchorCellUID:cursorCellUID:baseCellUIDRegion:selectionType:searchReferenceRange:beginImplicitEditing:
initWithTableInfo:columnIndices:
initWithTableInfo:flags:searchFlags:
initWithTableInfo:pencilAnnotationStorage:
initWithTableInfo:range:flags:searchFlags:
initWithTableInfo:region:clampingViewRect:flags:searchFlags:
initWithTableInfo:region:flags:searchFlags:
initWithTableInfo:region:flags:searchFlags:clampingRange:
initWithTableInfo:region:forcingRegion:flags:searchFlags:
initWithTableInfo:rowIndices:
initWithTableInfo:rowOrColumn:index:count:
initWithTableInfo:rowUids:
initWithTableInfo:rowUids:columnUids:
initWithTableInfo:selectionType:
initWithTableInfo:startingColumnIndex:numberOfColumns:
initWithTableInfo:startingRowIndex:numberOfRows:
initWithTableInfo:tableModel:region:flags:searchFlags:clampingRange:
initWithTableInfo:tableModel:region:forcingRegion:clampingRect:flags:searchFlags:
initWithTableModel:
initWithTableModel:baseRegion:flags:searchFlags:
initWithTableModel:baseRegion:flags:searchFlags:baseClampingRange:
initWithTableModel:ownerUID:
initWithTableModel:ownerUID:annotations:formulaStore:
initWithTableResolver:topLeft:bottomRight:preserveFlags:
initWithTableResolver:tractRefCore:
initWithTableUID:
initWithTableUID:beforeViewColumnRowUIDMap:beforeRewriteMap:
initWithTableUID:columnUids:rowUids:
initWithTableUID:condStyleOwnerUID:groupByUID:uuids:atIndexes:areRows:
initWithTableUID:ownerUID:
initWithTableUID:pasteBoardTableUID:hiddenStateOwnerForRowsUID:hiddenStateOwnerForColumnsUID:conditionalStyleOwnerUID:sortRuleReferenceTrackerOwnerUID:mergeOwnerUID:pencilAnnotationOwnerUID:categoryAggregatesOwnerUID:groupByUID:
initWithTableUID:summaryColumns:summaryRows:labelRows:
initWithTableUID:summaryRows:labelRows:
initWithTableUID:uidTractList:
initWithTableUIDMap:
initWithTextMeasurerBundle:
initWithTextStyle:
initWithTileRowIndex:wideOffsets:
initWithTimeIntervalSinceNow:
initWithTimeIntervalSinceReferenceDate:
initWithTimeout:
initWithTopInset:leftInset:bottomInset:rightInset:
initWithTopLeft:bottomRight:
initWithTopLeft:bottomRight:tableUID:
initWithTrackedReferenceTSPObjectDeprecated:
initWithTract:tableUID:preserveFlags:
initWithTract:tableUID:preserveFlags:columnGroupLevel:rowGroupLevel:aggrIndexLevel:
initWithTransposeTable:transposedBodyRange:numberOfFooterRows:
initWithType:
initWithType:context:
initWithType:groupByUid:
initWithType:groupingColumnChanges:groupByUid:
initWithType:keyRange:context:
initWithType:range:styleInsertionBehavior:caretAffinity:smartFieldRange:caretIsLeadingEdge:leadingCharIndex:
initWithType:range:styleInsertionBehavior:caretAffinity:smartFieldRange:caretIsLeadingEdge:leadingCharIndex:activeTokenCharIndex:
initWithType:range:validVisualRanges:styleInsertionBehavior:caretAffinity:smartFieldRange:caretIsLeadingEdge:leadingCharIndex:headCharIndex:tailCharIndex:activeTokenCharIndex:
initWithType:ranges:validVisualRanges:styleInsertionBehavior:caretAffinity:smartFieldRange:caretIsLeadingEdge:leadingCharIndex:headCharIndex:tailCharIndex:
initWithType:uidRange:
initWithType:uidRanges:
initWithUTF8String:
initWithUUID:
initWithUUIDSet:
initWithUUIDString:
initWithUUIDVector:
initWithUidTract:calcEngine:tableUID:
initWithUids:
initWithUids:atIndexes:
initWithUnsignedInt:
initWithUseAutomaticUnits:durationUnitSmallest:durationUnitLargest:durationStyle:
initWithValue:
initWithValueArray:
initWithValueGrid:
initWithValueVector:
initWithValues:gridKind:
initWithValues:gridKind:isFlattened:
initWithValues:gridKind:isFlattened:dimensions:
initWithViewIndex:direction:
initWithViewTractRef:
initialCharIndex
initialGroupOrderForGroupBy:baseLevel:outAllUids:outBaseUids:outSummaryUids:
initialInfoGeometry
initialValue
initialWhitespace
initialize
inlineTableWidth
inlineWithText
inlineWithTextWithWrap
insert:atIndex:count:
insertAnyRef:
insertAtUid
insertAttachmentOrFootnote:range:
insertAttachmentOrFootnote:range:dolcContext:undoTransaction:changeSession:
insertBaseMergeRange:
insertBaseMergeRangeRemovingOverlaps:
insertBaseRange:
insertBezierPath:gridRange:transform:inset:reoriginToZero:
insertCellRef:
insertClearedStrokeAtRange:
insertColumnGapsAtIndexes:
insertColumns:
insertColumnsAtColumnIndex:numberOfColumns:
insertColumnsAtIndex:count:
insertColumnsAtIndex:count:addBefore:
insertColumnsAtIndex:uids:metadatas:tableArea:
insertColumnsWithUIDs:atIndex:
insertDynamicStroke:strokeOrder:atRange:
insertFoldedName:
insertFormulaText:includeWhitespace:
insertFormulaText:includeWhitespace:unwrapped:
insertName:
insertNewColumnsInBaseRange:
insertNewColumnsInIndexRange:
insertNewRowsInBaseRange:
insertNewRowsInIndexRange:
insertObject:atIndex:
insertObjects:atIndexes:
insertOppositeUid
insertRange:
insertRefs:
insertRowGapsAtIndexes:
insertRowUid:atRowIndex:forGroupValue:
insertRowUid:atRowIndex:forGroupValueTuple:atLevel:withLocale:createdGroupNodeCount:
insertRowUids:
insertRowUids:beforeUid:
insertRows:
insertRowsAtIndex:count:
insertRowsAtIndex:count:addBefore:
insertRowsAtIndex:uids:metadatas:tableArea:
insertRowsAtIndex:uids:metadatas:tableArea:unsetFilterHidingAction:
insertRowsAtTileRowIndex:numberOfRows:
insertRowsInBaseRange:uids:metadata:unsetFilterHidingAction:
insertRowsWithUIDs:atIndex:
insertSpaceAtRange:
insertSpanningRangeRef:
insertSpecifier:
insertSpecifiersFromArray:
insertSpecifiersFromSet:
insertSpillStroke:atRange:
insertStorage:atCharIndex:dolcContext:undoTransaction:
insertString:atCharIndex:undoTransaction:
insertString:atIndex:
insertStroke:inRange:order:
insertTab:
insertUIGraphicalAttachment:
insertUIGraphicalAttachment:withLanguage:
insertUids:beforeUid:forDimension:
inset
inspectorGeometry
inspectorGeometryIsAffectedByChangeRecord:
intForKey:
intValue
intValueForProperty:
integerValue
integrateReservedPrecedents
intendToChangePrecedent:
interactionTypeForShimControlFormatType:
interactionTypeFromTheFuture
interactionTypeIsControl:
interestingCells
internalFormulaOwnerIDForFormulaOwnerUID:
internetReachability
internetReachabilityStatusWithQueue:completion:
intersectSet:
intersectWithCellRect:
intersectWithCellRectIgnoringSpanning:
intersectingColumnsInRow:
intersectingColumnsIndexSet
intersectingRowsIndexSet
intersectionCellRange:
intersectionColumnGridRange:ofLayoutSpace:
intersectionGridRange:ofLayoutSpace:
intersectionRowGridRange:ofLayoutSpace:
intersectionWithCellRect:
intersectsCellRange:
intersectsCellRegion:
intersectsColumn:
intersectsColumnGridRange:
intersectsGridRange:
intersectsIndexesInRange:
intersectsModelCellRect:
intersectsPartialMergeRangeInTable:
intersectsRow:
intersectsRowGridRange:
intersectsSet:
invalidAggregateColumnErrorForFunctionName:argumentNumber:
invalidAttributeErrorValue
invalidCellRef
invalidColumnIndex
invalidCurrencyPairError
invalidDateManipulationError
invalidFunctionName
invalidGroupingColumnErrorForFunctionName:argumentNumber:
invalidHistoricalCurrencyAttributeError
invalidHistoricalDateError
invalidHistoricalStockAttributeError
invalidLiveCurrencyAttributeError
invalidLiveStockAttributeError
invalidMergeReference:contextEntityUID:
invalidReferenceError
invalidReferenceNameAttributeError
invalidReferenceToMerge
invalidRegion
invalidStockCodeError:
invalidSymbolErrorValue
invalidTableOffset
invalidate
invalidateAllChrome
invalidateAllChromeCaches
invalidateAllCollapsed
invalidateBandedFill
invalidateChildren
invalidateClearedStrokesInRange:
invalidateColumnChrome
invalidateCoordinates
invalidateCoordinatesAfterColumn:
invalidateCoordinatesAfterRow:
invalidateCoordinatesForEditingCellID:
invalidateCustomStrokes
invalidateDefaultFontHeights
invalidateDynamicResizeInfo
invalidateDynamicStrokes
invalidateDynamicStrokesInRange:
invalidateEditingCell
invalidateExteriorWrap
invalidateForAutosizingTextLayout:
invalidateForCalcEngine:
invalidateForChangingIndexes:isRow:forTable:
invalidateForPageCountChange
invalidateFrozenHeaders
invalidateLayoutSpaceCoordinates
invalidateLayoutSpaceCoordinatesAfterColumn:
invalidateLayoutSpaceCoordinatesAfterRow:
invalidateLayoutSpaceTableOffsets
invalidateObjectsWithKeysInCellRange:
invalidateObjectsWithKeysInCellRegion:
invalidatePosition
invalidateRange:
invalidateRowChrome
invalidateSelection
invalidateSize
invalidateSpillStrokes
invalidateStrokeDefaults
invalidateStrokeSpills
invalidateTableName
invalidateTableNameHeight
invalidateTableNameVisibility
invalidateTableOffset
invalidateTableOffsets
invalidateTextLayout
invalidateViewGeometry
invalidatedForEditingCell
inverseMergeActions
invertedSet
isAPivotDataModel
isAPivotTable
isAborted
isAbortedError
isActive
isAllInvalid
isAllowedToAddCaptionToChildInfo:
isAncestorOf:
isAnchoredAtRight
isAnchoredToText
isApplySpareFormatOnly
isAtEndOfLine
isAttachedToBodyText
isBadRef
isBeingManipulated
isBlankForKeyboardInsertion
isBlankGroupUid:
isBlankNode
isBoolValueInList:
isCanvasInteractive
isCategorized
isCategoryAnyKindOfCell:
isCategoryColumn:
isCategoryGroupValueCell:
isCategoryGroupValueLabelCell:
isCategoryGroupingColumn:
isCategoryLabelCell:
isCategoryLastSummaryRowCollapsed
isCategoryRef
isCategorySummaryRef
isCellRangeHidden:
isCellReferenceDirty:
isCellValueInList:
isCircularReference
isCircularReferenceError
isClosing
isCold
isColumnGroupUIDCollapsed:
isColumnOrderTemporary
isColumns
isConnected
isControl
isCopyContainingCategoryColumn
isCorner
isCurrency
isDateValueInListYear:month:day:
isDefaultsOnly
isDeferringGroupByChangeNotifications
isDescendantOfChild:
isDoneDirtying
isDraggable
isDrawable
isDrawingInFlippedContext
isDrawingIntoPDF
isDurationValueInList:
isDynamicallyChangingAvailableSpaceForContainedChild
isDynamicallyChangingCellFill
isDynamicallyChangingColumnCount
isDynamicallyChangingContent
isDynamicallyChangingFontColorOfCellID:
isDynamicallyChangingInfoGeometry
isDynamicallyChangingRowCount
isDynamicallyChangingRowOrColumnCount
isDynamicallyChangingSelection
isDynamicallyColumnTabResizing
isDynamicallyHidingContentOfCellID:
isDynamicallyHidingRowsCols
isDynamicallyHidingRowsCols:rowColIndex:
isDynamicallyHidingRowsColsCellID:
isDynamicallyHidingTextOfCellID:
isDynamicallyRemovingText
isDynamicallyRemovingTextOfCellID:
isDynamicallyRepressingFrozenHeaderColumns
isDynamicallyRepressingFrozenHeaderRows
isDynamicallyResizingCellIDForColumnRowAdd:
isDynamicallyResizingForColumnRowAdd:
isDynamicallyResizingForColumnRowAdd:rowColIndex:
isDynamicallyResizingTableName
isDynamicallyRevealingRowsCols
isDynamicallyRevealingRowsCols:rowColIndex:
isDynamicallyRowTabResizing
isDynamicallySettingBandedFill
isEligibleForDefaultsOnlyReplacement
isEmbiggened
isEmptyForArchiving
isEmptyForDataStore
isEmptyForDirtying
isEmptyFunctionNode
isEmptyPivot
isEnabled
isEntireCellRangeHidden:
isEqual:
isEqual:atHostCoord:
isEqualForInspector:
isEqualForInspector:atHostCoordinate:
isEqualToCellValue:
isEqualToChoices:
isEqualToDate:
isEqualToExpressionNode:
isEqualToFormula:
isEqualToIndexSet:
isEqualToLayoutContentCachedKey:
isEqualToNumber:
isEqualToPropertyMap:
isEqualToSelection:
isEqualToSet:
isEqualToStockDetails:
isEqualToString:
isEqualToStroke:
isEqualToStyle:ignoreObjectUUID:
isEqualToTSCEFormulaOwnerWrapper:
isEqualToTimeZone:
isEqualToTrackedReference:
isEqualViaFormattingAsDouble::
isEquivalent:
isEquivalentForCrossDocumentPasteMasterComparison:
isEquivalentForCrossDocumentPasteMasterComparison:objectComparisonBlock:
isEquivalentToFormula:
isEquivalentToFormula:context:thisContainingCell:thatContainingCell:
isErrorGroupUid:
isErrorNode
isErrorReferenceError
isFirstHint
isFixedAtZeroRef
isFloatingAboveText
isFloatingComment
isForCopy
isForDstTable:
isForSrcTable:
isForTable:
isFormula
isFormulaEqualsCharacter:
isFormulaSyntaxError
isFormulaSyntaxErrorEqual:
isFromCalcEngine
isFromCopy
isFrozen
isFullyVisibleWithBorder:
isFunctionNode
isFunctionallyEquivalent:
isGroupCollapsedAndVisible:dimension:
isGroupOrParentsCollapsed:dimension:
isGroupUIDCollapsed:
isGrouped
isGroupedForColumns
isGroupedForRows
isGroupingColumn:
isGroupingColumnCollapsed:
isGroupingColumnCollapsedAndVisible:
isGroupingColumnUidsEqual:
isGroupingRowCollapsed:
isGroupingRowCollapsedAndVisible:
isHidingContentOfCellID:
isHidingGrandTotalColumns
isHidingGrandTotalRows
isHighlight
isHighlighted
isIdentified
isIdentityMapping
isIgnored
isInCollaborationMode
isInCycle
isInDocument
isInDynamicLayoutMode
isInGroup
isInProgressCalcIntCellRef:
isInReadOnlyMode
isIndexHidden:
isInlineWithText
isInlineWithTextWithWrap
isInvalidFunction
isInvalidMergeReference
isInvalidReferenceError
isInverse
isKindOfClass:
isLabelRow
isLabelRow:
isLanguageFormulasDirectionRightToLeft
isLastVisibleBodyRowCategorySummaryOrLabelRow
isLayingOutIntoTarget
isLeaf
isLeftParen:
isLocalReference
isLocked
isMagicMove
isMain
isMainThread
isMaster
isMemberOfClass:
isMismatchedUnitsError
isMissingRequiredArgument
isMissingRunningTotalFieldForAggIndex:
isModeEnabled:functionIndex:
isMostRecentlyExplicitPercent
isMoveRewriteType:
isNativelyEqual:
isNeededWithLayoutEngine:andRange:
isNewForBraveNewCell
isNonSpanningRangeExpression
isNotEmpty
isNumberValueInList:locale:
isObsolete
isOneToMany
isOnlineForDataKind:
isOperator
isOptional
isPendingTableNameUniquification
isPivotAnyKindOfCell:
isPivotGrandTotalColumn:
isPivotGrandTotalRow:
isPivotLeadingColumn:
isPivotLeadingRow:
isPivotTrailingAligned:
isPivotUnwrapped:
isPortalStroke
isPotentiallyTerminating
isPrePivotV2Compatible
isPreservedColumn:preferStart:
isPreservedRow:preferStart:
isPrinting
isRangeExpression
isRangeRef
isRangeWithFunction
isRebuildFormulasDeferred
isRecalculationRunning
isRecalculationStarted
isRectangle
isRectangularRange
isRecursivelyDrawingInContext
isRegisteredWithCalcEngine
isRegisteredWithCalcEngine:
isReimportable
isRelativeAncestorGroupUid:
isRepeat
isResizable
isRightParen:
isRoundDash
isRowGroupUIDCollapsed:
isRowOrderTemporary
isRowUserHidden:
isRows
isSafeToConvertToAttributedString
isSafeToConvertToImage
isSafeToConvertToImageForImagePaste
isSafeToConvertToText
isSelectable
isSelected
isShimControlFormatType:
isSingleCell
isSingleCellOrMergeRange:
isSingleCellOrSpanningRange
isSingleCellWideOrHigh:
isSingleQuote:
isSingleRowSpanningReference
isSkippingRepairBadRefsForOwnerUID:
isSpanningCategoryRef:
isSpanningCategorySummaryRef
isStringValidArgumentToken:
isStringValueInList:
isSubsetOf:
isSubsetOfSet:
isSummaryCell:
isSummaryColumn:
isSummaryOrLabelRow:
isSummaryRow
isSummaryRow:
isSyntaxError
isTableLinkedToAForm:
isTableNameValid
isThemeContent
isThresholdNeededForType:
isTopmostContainerInfo
isUIDBased
isUniquesOrDuplicates
isUnsupportedFeatureError
isUnsupportedFunctionError
isValidCategoryRef:
isValidForCellSelection:inTable:
isValidForInteraction
isValidForRowVisibilityChangeInRegion:table:
isValidMergeRange:
isValidOrSpanning
isValidReference
isVariation
isWholeTableImport
iterateCellsAndTerminateWithIterator:usingBlock:
iterateCellsInRange:flags:searchFlags:usingBlock:
iterateCellsInRegion:flags:searchFlags:clampingRange:usingBlock:
iterateCellsInRegion:flags:searchFlags:usingBlock:
iterateCellsUsingBlock:
iterateCellsWithFlags:searchFlags:usingBlock:
iterateFormulasWithContext:block:
iterateFormulasWithContext:shouldStop:block:
iterateWithBlock:stop:block:
iterator
iteratorClass
iterators
kNilStockAttributeString
keyForCustomFormat:
keyRange
keyVal
keyValuePairCount
keyboardShown
keys
labelForCategoryRef:
labelLevel1CellStyle
labelLevel1TextStyle
labelLevel2CellStyle
labelLevel2TextStyle
labelLevel3CellStyle
labelLevel3TextStyle
labelLevel4CellStyle
labelLevel4TextStyle
labelLevel5CellStyle
labelLevel5TextStyle
labelRowHeightAtCategoryLevel:
labelRowHeightList
labelRowUIDSet
labelRowUIDSetForCategoryLevel:labelRowVisibility:
labelRowUidsForGroupUids:
labelRowVisibilityAtCategoryLevel:
labelRowVisibilityList
labelUid
labelValueViewStringAtCellID:optionalCell:
largestCommonSubexpression
largestCommonSubexpressionExcludingExisting:cseData:
largestRangeContainingCellID:
lastArchivedAppVersion
lastCell
lastCellID
lastCellRangeAdded
lastChildHint
lastColumnDiffPos
lastComponentWithWhitespaceAppended
lastFragment
lastFullRefreshDate
lastIdentifierComponent
lastIndex
lastIndexNotInIndexSet:beginRange:pastEndRange:
lastIndexNotInIndexSet:orIndexSet:beginRange:pastEndRange:
lastIndexOfSubtree
lastObject
lastPopulatedRowIndex
lastRowDiffPos
lastSavedInBNC
laterDate:
layerFrameInScaledCanvas
layerWillDraw:
layout
layoutCacheFlags
layoutCell
layoutCellData
layoutCellID
layoutCellIDForModelCellID:
layoutCellRegionForModelCellRegion:
layoutClass
layoutColumnForModelColumn:
layoutConcurrentQueue
layoutController
layoutDirectionIsLeftToRight
layoutEngine
layoutEngineEffectiveTableNameHeight
layoutForHint:parentLayout:
layoutForInfo:
layoutGeometryFromInfo
layoutHint
layoutInvalidate
layoutInvalidateChildren
layoutInvalidateProvider
layoutInvalidateSize
layoutInvalidateTableNameVisibility
layoutIsLTR
layoutMargins
layoutMarginsForTarget:
layoutMeasureQueue
layoutMergeRange
layoutPointForCanvasPoint:
layoutRange
layoutRectForCanvasRect:
layoutResetScaleToFit
layoutRowForModelRow:
layoutSpacesInvalidateCoordinates
layoutSpacesInvalidateCoordinatesAfterRow
layoutSpacesInvalidateCoordinatesAfterRow:
layoutSpacesInvalidateTableOffsets
layoutState
layoutSublayersOfLayer:
layoutText:context:kind:minSize:maxSize:anchor:flags:
layoutTextStorage:minSize:maxSize:anchor:pageNumber:pageCount:flags:
layoutUpdateChildren
layoutValidateQueue
lazyReferencesAreLoaded
leadingSingleQuoteEscapeCharacters
leftColumnStrokes
leftInset
leftParenCharacters
leftStroke
legacyDisplayFormatType
legacyGlobalIDStringToOwnerUIDMap
legacyID
legalRangeControlMinimum:maximum:increment:
length
letString
level
lightGrayColor
limit
limitedToTableUID
linkGroupBy:
linkToCalcEngine:
linkToCalcEngine:ownerKind:
linkedResolver
listSeparator
listStartAtCharIndex:
listType
listTypeString
loadAllLazyReferences
loadCellStyleFromArchive:unarchiver:
loadCellStylePropertiesIntoPropertyMap:fromArchive:unarchiver:
loadFromArchive:
loadFromArchive:unarchiver:
loadFromArchive:unarchiver:completion:
loadFromArchive:unarchiver:forGroupBy:
loadFromFileVersion
loadFromUnarchiver:
loadIndexesForSrcTable:srcUidResolver:dstTable:dstUidResolver:
loadIndexesForTable:isRows:shuffleMap:
loadIndexesForTable:uidResolver:
loadIndexesForTable:uidResolver:forRemoveRows:shuffleMap:
loadIndexesFromRegions
loadIndexesFromTable:
loadLocalizedStrings
loadMergeCache
loadMergeRangesContainingFormulasInTable:calcEngine:
loadObjectFromArchive:listType:unarchiver:completion:
loadObjectsFromDataListArchive:unarchiver:
loadRepeatingArguments
loadSpecDictionary
loadSubsetWithExactMatches:prefixMatches:
loadedIndexesAfterUnarchive
localOwnerID
localVariablesEnabled
locale
localeIdentifier
localePrecedentForTableUID:
localeSpecificStorageForKey:
localizations
localizedBlankGroupName
localizedCaseInsensitiveCompare:
localizedCaseInsensitiveCompare:toString:
localizedCaseInsensitiveIsEqual:toString:
localizedCategoryArray
localizedCategoryForFunction:
localizedCompare:toString:
localizedDescriptionForProtoIndex:
localizedErrorGroupName
localizedFalseGroupName
localizedFalseGroupNameForColumn
localizedFalseString
localizedFalseStringForBooleanGroupWithString:documentLocale:
localizedFalseStrings
localizedFunctionCategoryDictionary
localizedFunctionNameForMenuTag:
localizedLabelForAggType:
localizedLabelForShowAsType:
localizedModeNameForArgument:modeIndex:ofFunction:
localizedModeToolTipForArgument:modeIndex:ofFunction:
localizedNameForArgument:ofFunction:
localizedNameForBlankGroupForDocumentLocale:
localizedNameForErrorGroupForDocumentLocale:
localizedNameForFunction:
localizedNamesForFunctions:
localizedShortLabelForAggType:
localizedStringForCellValue:categoryLevel:groupBy:
localizedStringForKey:value:table:
localizedStringIsFalse:
localizedStringIsTrue:
localizedStringWithFormat:
localizedToolTipForArgument:ofFunction:
localizedToolTipForFunction:
localizedToolTipStringForLocale:
localizedTrueGroupName
localizedTrueString
localizedTrueStringForBooleanGroupWithString:documentLocale:
localizedTrueStrings
localizedTypeStringForArgumentType:
localizedWarningStrings
lock
lockForConcurrentAccess
lockForRead
lockForWrite
lockForWriting
logBacktraceThrottled
logFullBacktrace
logTableTileAuditStatus:withVersion:
logToken
logicalCellIDForUnscaledCanvasPoint:
logicalCellIDInTable:
logicalTestWithCriterion:functionSpec:evaluationContext:
lookupKeyForRowUID:
lookupStrokeAtIndex:
lowerBound
lowerBoundInclusive
lowercaseStringWithLocale:
lowercaseWithUndoTransaction:locale:
lowestCategoryLevelAsLeadingColumnGroupName:
lowestCategoryLevelAsLeadingRowGroupName:
lowestCommonAncestor:
mAST
mActiveTokenCharIndex
mAdjustableTableSize
mBoundingCellRange
mByCellRange
mByColumn
mByContent
mByMissingCellRange
mByRow
mCachedPaddingForEditingCell
mCachedVerticalAlignmentForEditingCell
mCanvasVisibleRect
mCapturedStrokeFrameSizeForInline
mCellRangeSet
mCellRanges
mComputedEditingCellContentFrame
mContainedTextEditingLayout
mContainedTextEditorParagraphAlignment
mContainedTextEditorSpills
mContainedTextEditorTextWraps
mCoordinatesChangedMaskForChrome
mCount
mDrawsBlackAndWhite
mEditingSpillingTextRange
mExpandBackgroundFill
mFinal
mFormulaID
mHint
mHorizontalStroke
mIndex
mKind
mLayoutDirectionIsLeftToRight
mLayoutHint
mLock
mMaxWidthForChildren
mNewCanvasRevealedHorizontally
mNewCanvasRevealedVertically
mPadding
mPageCount
mPageNumber
mPrevEditingSpillingTextRange
mPreviousVisibleStrokeFrame
mProcessChangesFiltering
mRemovingContainedTextEditorLayout
mRenderingFrameForLayoutGeometryFromInfo
mReverse
mShouldHyphenate
mShowsOverlayLayers
mShowsTableChrome
mSpaceBundle
mSpillingTextSize
mStage
mStageCount
mStorage
mStrokeSelection
mStyleProvidingSource
mTableNameVisibilityIsValid
mTableNameVisible
mTabsVisible
mTargetHeight
mTargetWidth
mValue
mVerticalAlignment
mVisibleMask
mWarnWhenFormulasReferToEmptyCells
madeChange
magicMoveAttributeMatchPercentBetweenOutgoingObject:incomingObject:mixingTypeContext:
mainBundle
maintainPivotStrokesInTableStyle:fromTable:
majorStrokeLayer
majorStrokeLayerToken
makeCellReferenceForOffset:apparentTractRef:
makeCellReferenceInSameTable:
makeInverse
makeListWithFirstElem:trailingWhitespace:isArray:parser:
makeStorageMap
makeTokenReflectChoice:
managedNodeArrayWithCapacity:
mapBaseColumn:toViewColumn:
mapBaseRow:toViewRow:
mapForSingleSpecifier:
mapForSpecifiersInSet:
mapGroupUidsForChange:
mapIndex:
mapOwnerUID:
mapPreviousGroupNodeUid:toUpdatedGroupNodeUid:
mapReassigningPasteboardCustomFormatKeys:
mapSummaryColumn:toViewColumn:
mapSummaryRow:toViewRow:
mapTableStylesToStylesheet:withMapper:
mapTableWithKeyOptions:valueOptions:
mappedIndexForSourceIndex:
mappedStyleForStyle:
mappingForSortingColumns:withRules:
mappingForSortingRows:withRules:
mappingFromRowUids:toRowUids:
mappingSize
markAllAggregatesAsDirty
markAllDependentsAsDirty
markAllExternalGroupByRefsDirty:
markAllFunctionsAsDirty
markAllGroupNodesDirty
markAsDirtyWithCalcEngine:
markCellRefAsDirty:
markCellRefsAsDirty:
markCoordsDirty:inOwner:
markDateTimeVolatileFunctionsAsDirty
markDateTimeVolatileFunctionsAsDirtyForCurrentDateTime
markDependentsAsDirtyWithCalcEngine:
markGeometryVolatileFunctionsAsDirtyInOwner:
markIndirectCallsAsDirty
markLocaleVolatileFunctionsAsDirty
markOnlyDependentsDirty:
markOwnerAsDirty:
markRandomVolatileFunctionsAsDirty
markRangeRefAsDirty:
markRemoteDataVolatileFunctionsAsDirty
markRemoteDataVolatileFunctionsAsDirtyForKeys:
mask
maskForStrokePreset:
maskForStrokePresets:
maskRect
maskRectForTextLayout:
masksToBounds
matchesCell:
matchesFound
matchesInString:options:range:
matchesObjectPlaceholderGeometry
matchesRow:withFormulaTableUID:withCalculationEngine:
maxArgsAllowed
maxArguments
maxAutoGrowBlockHeightForTextLayout:
maxAutoGrowLineWidthForTextLayout:
maxColumn
maxColumnIndex
maxColumnLevel
maxConcurrentTasks
maxIndex
maxKey
maxNumberOfColumns
maxNumberOfHeaderColumns
maxNumberOfPopulatedCells
maxOrder
maxRow
maxRowLevel
maxStrokeOrder
maxValue
maxVisibleColumnLevel
maxVisibleRowLevel
maxWidthForChildren
maxWidthOfStrokesInRange:cachedMax:
maximumFrameSizeForChild:
maximumSize
mayModifyFormulasInCells
mayModifyValuesReferencedByFormulas
measureCellRangeForNextPartitionOfSize:previousHint:horizontally:
measureText:withMaxWidth:
measureWithLayoutState:
mediaCompatibilityTypeForData:associatedHint:
medianStringFromArray:
mergeActionForBaseCellRegion:
mergeActionForBaseCellRegion:nonOriginPartialsOnly:
mergeActionForGrowingRange:coveringRange:inTable:
mergeActionForInsertingRange:inTable:
mergeActionForRegion:
mergeActionForRegion:nonOriginPartialsOnly:
mergeActionForRemovingRanges:inTable:
mergeActions
mergeCacheLoaded
mergeChangeDistributor
mergeFormulaIndexes
mergeFormulas
mergeIndexesForBaseCellRegion:
mergeIndexesForRange:
mergeInfo
mergeLeftStrokes:withRightStrokes:
mergeListFromModelMergeList:
mergeListWrapperWithRangesPassingTest:
mergeOriginForBaseCellCoord:
mergeOriginForCellID:
mergeOriginMovedInfo
mergeOwner
mergeOwnerUID
mergeRange
mergeRange:forCellID:
mergeRangeAtCellID:
mergeRangeAtOriginalCellRef:
mergeRangeEmptyStroke
mergeRanges
mergeRangesAndCrumbsIntersectingBaseCellRect:
mergeRangesAndCrumbsIntersectingRange:
mergeRangesForLayoutPass
mergeRangesIntersectingBaseCellRect:
mergeRangesIntersectingBaseCellRect:includeCrumbs:
mergeRangesIntersectingBaseCellRegion:
mergeRangesIntersectingCellRegion:
mergeRangesIntersectingRange:
mergeRangesPartiallyIntersectBaseCellRect:
mergeRangesPartiallyIntersectBaseCellRegion:
mergeRangesPartiallyIntersectCellRange:
mergeRangesPartiallyIntersectCellRegion:
mergeRangesProppingRowHeightsInRegion:
mergeRegion
mergeSource
mergeTopStrokes:withBottomStrokes:
mergedCellRanges
mergedContainedStorages
mergedFormatChangedByAddingRowUID:andCellValue:groupBy:
mergedFormatChangedByRemovingRowUID:groupBy:
mergedGridIndicesForDimension:
mergedRangeForBaseCellCoord:
mergedRects
mergedStorageRepresentation
mergedStrokes
mergedStrokesForGridColumn:
mergedStrokesForGridRow:
mergesIntersectingCellRegion:
mergesIntersectingRange:
mergingRange
messageVersion
messageWithDescriptor:
messageWithNewFunction:descriptor:
metadata
metadataAtIndex:hidingAction:defaultSize:uuid:
metadataForColumnIndex:
metadataForColumnIndex:hidingAction:
metadataForColumnIndex:hidingAction:uuid:
metadataForRowIndex:
metadataForRowIndex:hidingAction:
metadataForRowIndex:hidingAction:uuid:
metadataWithUid:
mightBeInterestedInMigration
mightHaveCellBorderAtCellID:
mightHaveCustomFormats
mightOverlap
migrateStylesToDocument:
migratedStyleForStyle:
migratingStylesOnly
minArguments
minColumnLevel
minIndex
minKey
minNumberOfHeaderColumns
minPopulatedCellRange
minRowLevel
minValue
minimumCategoryLevelInRange:forDimension:
minimumPositionOffset
minimumTimeBetweenRequests
minion
minorStrokeLayer
minorStrokeLayerToken
minusSet:
minute
mismatchBetweenValueType:andFormatType:
missingPivotTableErrorForFunctionName:argumentNumber:
missingPostBNCDatalists
mixableObjectClasses
mixedBaseObjectWithObject:
mixedColumnStartedWithPreserve
mixedDurationsAndNumbers
mixedObjectWithFraction:ofObject:
mixedRowStartedWithPreserve
mixingTypeWithObject:context:
mode
modeNumberForLocalizedString:argumentSpecIndex:attributeMax:locale:
modelCellID
modelCellIDForLayoutCellID:
modelCellRegionForLayoutCellRegion:
modelColumnForLayoutColumn:
modelEnumeratorForObjectsConformingToProtocol:
modelEnumeratorForObjectsOfClass:
modelIteratorData
modelIteratorHasCell
modelPathComponentForChild:
modelRowForLayoutRow:
modes
modifiedTextPropertiesForCategoryOrPivotCellAtCellID:wraps:padding:alignment:
modifySafelyUsingBlock:
month
mostSpecificNodeContainingIndex:correspondingIndex:
mostSpecificSelectionOfClass:
moveBaseColumnRange:toColumnIndex:
moveBaseRangeFrom:toIndex:
moveBaseRowRange:toRowIndex:
moveColumnIndexRange:toIndex:
moveColumnRange:toColumnIndex:
moveColumnsAtColumnIndex:numberOfColumns:toDestColumnIndex:
moveColumnsFromIndex:toIndex:count:
moveColumnsFromRange:toIndex:
moveIndexRange:toIndex:
moveRange:toIndex:
moveRangeFrom:toIndex:
moveRowIndexRange:toIndex:
moveRowRange:toRowIndex:
moveRowsFromRange:toIndex:
moveRuleFromIndex:toIndex:
moveViewColumnRange:toColumnIndex:
moveViewRangeOnlyFrom:toIndex:
multiEvaluateFormulasAt:withCalcEngine:recalcOptions:
multipleChoiceListFormat
multipleChoiceListFormatDataList
multipleChoiceListFormatID
multiplierForUnit:
mustDrawOnMainThreadForInteractiveCanvas
mutableBaseColumnIndexesForUIDs:
mutableBaseRowIndexesForUIDs:
mutableColumnIndexesForUIDs:
mutableCopy
mutableCopyWithZone:
mutableFilteredColumnIndexes
mutableFilteredIndexes
mutableFilteredRowIndexes
mutableIndexSetByIntersecting:withRange:
mutableIndexesForUIDSet:isRows:notFoundUIDs:
mutableIndexesForUIDs:isRows:
mutablePivotHiddenIndexes
mutablePivotHiddenRowIndexes
mutableRowIndexesForUIDs:
mutableUserHiddenColumnIndexes
mutableUserHiddenIndexes
mutableUserHiddenRowIndexes
mutateFormulaFiltersWithTable:usingBlock:
name
nameForBaseRangeRef:namingContext:
nameForBaseTractRef:namingContext:
nameForChromeColumnIndex:inTable:useSymbolicNames:
nameForChromeRangeRef:namingContext:
nameForResolverContainer:
nameForViewTractRef:namingContext:coordMapper:
nameForWrappedRangeRef:namingContext:
nameFragmentPrecedentsForReferenceString:
namedReferenceManager
namer
namesUsed
nativeLocaleIdentifier
nativeSyntaxStringForArgument:
nativeType
naturalAlignment
naturalAlignmentForCellID:
naturalAlignmentForTextLayout:
naturalBoundsRectForHyperlinkField:
nearestRangeForLayoutRect:
needFormulasForAggregateType:
needToUpgradeCellStorage
needWPColumn
needsFilterFormulaRewriteForImport
needsFormulaReset
needsFormulaRewriteForImport
needsFormulaRewriting
needsRebuildOfAggFormulas
needsSubOwnerIDUpgrade
needsThreshold
needsToBeArchived
needsUidRectUpgrade
negativeStyle
nestedRewrites
networkForPivotTables
networkFromStyleProvider:
networkFromTheme:presetID:
networkFromTheme:presetIndex:
networkReachabilityForInternetConnection
networkReachabilityWithHostName:
networkWithContext:presetID:colors:alternate:
networkWithContext:presetID:styleProvider:styleMorphingBlock:
networkWithContext:presetID:styleProvider:tableStyleMorphingBlock:nameStyleMorphingBlock:nameShapeStyleMorphingBlock:cellStyleMorphingBlockByStyleArea:textStyleMorphingBlockByStyleArea:
neverShowsMenu
newAnimationWithLayout:andCellRange:
newAnimationWithLayout:andDeliveryStyle:
newArrayByScanningString:scanRange:
newBareLetNodeWithContext:
newBlendedColorWithFraction:ofColor:
newBottomToTopIterator
newCanvasRevealedHorizontally
newCanvasRevealedVertically
newCellValueFromTSCEValue:withLocale:
newCellWithLocale:
newCorrespondingAST:argIndex:bakeReferences:evaluationContext:
newDefaultFunctionNodeWithContext:functionIndex:
newFilterIndex
newIterator
newLayoutHint
newRightToLeftIterator
newSubstorageWithRange:context:flags:
newSubstorageWithRange:context:flags:kind:
newTableResolverForResolver:
newTextEngineForCell:atCellID:textStyle:
newTextEngineForCell:atCellID:textStyle:naturalAlignment:cellDirection:
newlineCharacterSet
newlyImported
newlyRequestedKeys
nextCategoryAggregatesOwnerUID
nextCategoryOwnerUID
nextCellAndCellUID
nextCellData
nextCellUID
nextCellUIDsBatch:batchSize:
nextConditionalStyleOwnerUID
nextGroupByUID
nextHiddenStateForColumnsOwnerUID
nextHiddenStateForRowsOwnerUID
nextHintForSize:parentLayout:previousHint:horizontally:outFinished:
nextID
nextLayoutForSize:parentLayout:previousHint:horizontally:outFinished:
nextMergeOwnerUID
nextNonWhitespaceOrNewlineIndexStartingAtIndex:
nextObject
nextPencilAnnotationOwnerUID
nextSortRuleReferenceTrackerOwnerUID
nextStrokeAndRange:
nextTableUID
nextTileID
nextWidthAndRange:
noContentCount
noLockShouldUpgradeStyleForFormulatextForCellCoord:
noRuleConditionalStyleSet
noTradingInformationErrorWithNextAvailableDate:
nodeForName:createIfMissing:
nodePath
nodesToCheckForBareArgumentPlaceholders
nonCustomCurrencyFormatSansAccountingStyleForLocale:
nonDefaultFontName
nonDefaultFontSize
nonEmphasisCellProperties
nonEmphasisTableProperties
nonUndoableAppendStoragePreservingEmphasis:
nonUserHiddenRowAfterAndIncludingRow:
nonValidatedNetworkWithContext:presetID:styleProvider:tableStyleMorphingBlock:nameStyleMorphingBlock:nameShapeStyleMorphingBlock:cellStyleMorphingBlockByStyleArea:textStyleMorphingBlockByStyleArea:
nonWhitespaceAndNewlineCharSet
normalizedStringForCompare:
notAReferenceToAFormulaError
notReadyError
notifyAboutStructuredTextImportState
notifyTableOfNewResults
notifyType
nowFormatForLocale:
nowPrecedentForTableUID:
nsFilteringTableUID
nsTableUID
null
numArguments
numCellRecords
numColumns
numComponents
numDirtyCells
numFormulaCellsInOwner:
numPracticalGroupBys
numRelativeColumns
numWords
number
number:argIndex:evaluationContext:
numberAccumulator
numberAtIndex:
numberCount
numberDecimalValue
numberDoubleValue
numberForFunction:argumentIndex:warningReportingContext:
numberFormat
numberFormatID
numberFormatWithValueType:formatString:decimalPlaces:currencyCode:useAccountingStyle:negativeStyle:showThousandsSeparator:fractionAccuracy:
numberFromString:
numberHiddenIndicesInRange:
numberOfAggregatesAtLevel:
numberOfBaseBodyRows
numberOfBaseColumns
numberOfBaseFooterRows
numberOfBaseHeaderColumns
numberOfBaseHeaderRows
numberOfBaseRows
numberOfCategoryColumns
numberOfCategoryLevels
numberOfCellStates
numberOfCells
numberOfCellsWithFormulas
numberOfChromeColumns
numberOfChromeFooterRows
numberOfChromeHeaderColumns
numberOfChromeHeaderRows
numberOfChromeRows
numberOfColumnLevels
numberOfColumnsForProtoIndex:
numberOfComments
numberOfConditionalStyles
numberOfFooterOrGrandTotalRows
numberOfFooterRows
numberOfGrandTotalColumns
numberOfGroupLevelsShowingLabelsUnderGroupAtIndex:
numberOfGroupsAtLevel:
numberOfGroupsUptoLevel:
numberOfHeaderColumns
numberOfHeaderRows
numberOfHidden
numberOfHiddenColumns
numberOfHiddenColumnsInBaseCellRange:
numberOfHiddenColumnsInCellRange:
numberOfHiddenInBaseRange:
numberOfHiddenInRange:
numberOfHiddenRows
numberOfHiddenRowsInBaseCellRange:
numberOfHiddenRowsInCellRange:
numberOfInProgressCalcCellRef
numberOfIntersectingColumns
numberOfIntersectingRows
numberOfItems
numberOfLayoutColumns
numberOfLevels
numberOfMatchesInString:options:range:
numberOfNonHiddenFooterRows
numberOfPopulatedCells
numberOfPopulatedColumns
numberOfPopulatedRows
numberOfRanges
numberOfResizableColumns
numberOfResizableRows
numberOfRowLevels
numberOfRows
numberOfRowsForProtoIndex:
numberOfRulesInFilter:
numberOfTiles
numberOfUserHidden
numberOfUserHiddenColumns
numberOfUserHiddenInBaseRange:
numberOfUserHiddenInRange:
numberOfUserHiddenRows
numberOfUserHiddenRowsInBaseCellRange:
numberOfUserHiddenRowsInCellRange:
numberOfUserVisibleBodyRows
numberOfVisibleBaseBodyRows
numberOfVisibleBodyColumns
numberOfVisibleBodyRows
numberOfVisibleColumnsInCellRange:
numberOfVisibleRowsFromHeader:
numberOfVisibleRowsFromStartRowIndex:toEndRowIndex:
numberOrCurrencyDecimalValue
numberParam1
numberParam2
numberValue
numberValueFromString:locale:outDecimalValue:
numberValueFromString:locale:outDecimalValue:outValueType:outCurrencyCode:
numberValueFromString:locale:outDoubleValue:
numberValueFromString:locale:outDoubleValue:outValueType:
numberVisibleIndicesInRange:
numberWithDouble:
numberWithInt:
numberWithInteger:
numberWithShort:
numberWithUnsignedChar:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLongLong:
numberWithUnsignedShort:
object
objectAndReturnError:
objectApplyingDiffToObject:andUpdateInverse:
objectApplyingDiffToObject:andUpdateInverse:optionalConcurrentStylesheet:
objectAtIndex:
objectAtIndexedSubscript:
objectByRemovingPropertiesInMap:addingPropertiesInMap:updateInverseResetPropertyMap:updateInverseSetPropertyMap:
objectByRemovingPropertiesInMap:addingPropertiesInMap:updateInverseResetPropertyMap:updateInverseSetPropertyMap:optionalConcurrentStylesheet:
objectEnumerator
objectForKey:
objectForKeyedSubscript:
objectForProperty:
objectForResetProperty:
objectForSetProperty:
objectLocale
objectToArchiveInDependencyTracker
objectUUID
objectWithCellSpec:refCount:
objectWithCommentStorage:refCount:
objectWithConditionalStyleSet:refCount:
objectWithCustomFormat:refCount:
objectWithFormat:refCount:
objectWithFormulaError:refCount:
objectWithImportWarningSet:refCount:
objectWithPopUpMenuModel:refCount:
objectWithRefCount:
objectWithRichTextPayload:refCount:
objectWithString:refCount:
objectWithStyle:refCount:
objectsAtIndexes:
objectsPassingTest:
occurrence
offset
offsetForRowIndex:
offsetForUpdatedRowIndex:isRemoveRows:
offsetGeometryBy:
oneToMany
openRewritingTransaction
operatorChar
order
orderForDimension:
orderedBefore:
orderedColumnUidsFromUids:
orderedRowUidsFromUids:
orderedRowUidsWithLabels
orderedSelections
orderedUidsForDimension:
orderedUidsFromUids:forDimension:
orderedUuids
orderedUuidsForRange:inTable:areRows:shuffleMap:
ordinalityOfUnit:inUnit:forDate:
originalCellRefForRewriteType:updatedCellRef:
originalCellRefForUpdatedCellRef:
originalFullReferenceString
originalGroupNodeUIDs
originalSrcColumnUids
originalSrcCondStyleOwnerUID
originalSrcRegion
originalSrcRowUids
originalSrcTableUID
originalTableUIDs
overlapsWithSelectionPath:
overrideCGFloatValueForProperty:
overrideCount
overrideLayoutHint
overridePropertyMap
overridePropertyMapIsEqualTo:
overrideText
overrideTextAsTyped
overrideValueForProperty:
overridesPadding
overridesProperty:
owner
ownerForOwnerUID:
ownerForUUIDBytes:
ownerIndex
ownerIndexForGroupingCombination:
ownerIsRegistered:
ownerKind
ownerKindForOwnerID:
ownerKindForOwnerUID:
ownerMap
ownerName
ownerUID
ownerUIDForLegacyGlobalID:registeringIfNeeded:
ownerUIDMap
ownerUIDMapper
ownerUIDsForOwnerKind:
owningAttachment
owningAttachmentNoRecurse
p_ColumnCategoryLevelForCellCoord:
p_DictionaryRepresentsInvalidMergeReference:
p_NumberOfCellBuilds:
p_NumberOfColumnBuilds:
p_NumberOfRowBuilds:
p_PopUpMenuModelDefaultWithContext:locale:
p_RowCategoryLevelForCellCoord:isLabel:
p_TSTCellFormatIsANumberFormatTypeForMostRecentlySet:
p_TSTCellSetMostRecentlySetDateFormat:
p_TSTCellSetMostRecentlySetNumberFormat:
p_TSTCellSetMostRecentlySetNumberFormatWithCurrencyFlag:
p_TSTCellSetMostRecentlySetTextFormat:
p_ValidateArguments
p_accumulateBordersConcurrentlyUsingBlock:accumulateCellsConcurrentlyUsingBlock:
p_actionMapForKeys:quotes:
p_addApplicationNotification
p_addCell:
p_addChildGroupUidsIntoSet:recursively:skipFiltered:
p_addFittingInfoForEmptyMergeRange:
p_addHiddenIndex:viewIndex:forAction:
p_addInitialSegment
p_addObservers
p_addPrecopiedCells:
p_addRange:
p_addRange:calculateAncillaryInfo:
p_addRules:atRuleIndices:inFilter:isNew:
p_addTexture:forAnimationStage:isFinal:description:
p_addUUID:
p_addUUIDs:
p_addUUIDsFromVector:
p_alignFrameSpec:
p_alignStrokeHeight:deviceWidth:scaledWidth:
p_alignStrokeWidth:deviceWidth:scaledWidth:
p_alignedFrameSpecForColumnGridRange:
p_alignedFrameSpecForGridRange:strokeWidthOverride:
p_alignedFrameSpecForRowGridRange:
p_alignedLayerFrameForLayoutSpace:transform:
p_appendChoices:uniquelyToChoices:
p_appendStroke:inRange:order:
p_applyAccordionResizeFactor:region:direction:totalOfCaptured:count:capturedArray:currentArray:minimumArray:
p_applyUnifyFixedSize:region:direction:count:currentArray:minimumArray:
p_applyUnifyResizeFactor:region:direction:totalOfCaptured:count:capturedArray:currentArray:minimumArray:
p_applyViewCellCoord:toSummaryUsingBlock:toBaseUsingBlock:
p_applyViewCellCoord:toSummaryUsingBlock:toLabelUsingBlock:toCategoryColumnUsingBlock:toBaseUsingBlock:
p_applyViewColumnIndex:toCategoryColumnUsingBlock:toBaseUsingBlock:toBeyondBoundsUsingBlock:
p_applyViewColumnIndex:toSummaryUsingBlock:toBaseUsingBlock:toBeyondBoundsUsingBlock:
p_applyViewRowIndex:toSummaryUsingBlock:toBaseUsingBlock:toBeyondBoundsUsingBlock:
p_applyViewRowIndex:toSummaryUsingBlock:toLabelUsingBlock:toBaseUsingBlock:toBeyondBoundsUsingBlock:
p_argTypeForPredArg:argNum:calculationEngine:hostCell:
p_auditTableHealthUpgradingFromVersion:
p_auditTilesForRowOverlapAndExtensionPastTableBoundsWithVersion:
p_autosizedFrameForRichTextLayout:textSize:
p_autosizedFrameForTextEditingLayout:textSize:
p_averageValueWithA:
p_bakeMixedCellStrokesIntoTable:outgoingTable:incomingTable:fraction:
p_baseColumnIndexes
p_baseHiddenIndexes
p_baseRangeRefForChromeRangeRef:calcEngine:
p_baseReferenceForChromeReference:calcEngine:
p_baseReferencesForChromeReferences:calcEngine:
p_baseRowIndexes
p_blockUntilRecalcIsCompleteOnNewThreadWithTimeout:
p_bodyTranslationX
p_bodyTranslationY
p_booleanForListItem:
p_boundingViewRangeRef
p_buildASTNodeArray:forCoord:preserveFlags:hostCell:
p_cacheBaseRegion:
p_cacheCellRegion:
p_cacheRowColumnUIDs
p_calculateAverageThresholdWithCalcEngine:formulaCoord:
p_calculateTopOrBottomThresholdWithCalcEngine:formulaCoord:isTop:keyScale:
p_calculateUniqueDistinctIndexWithCalcEngine:formulaCoord:tableModel:rule:
p_calculateUniqueThresholdWithCalcEngine:formulaCoord:
p_canUpdateStore:
p_canUsePrePivotFilterSet
p_captureRowColumnInformation:columnRegion:rowRegion:
p_categoryRefViewTractRef
p_cellAtIndex:inCellListArray:
p_cellAtUnscaledPoint:
p_cellCount
p_cellDiffForFinishedCell:
p_cellIDForHyperlinkField:
p_cellIDForWPLayout:
p_cellMapForUpgradingToBraveNewCell
p_cellRangeForSingleCategoryRefInViewRangeRef:inTable:rangeContext:
p_cellRegionFromWildcardCellUIDs:includeLabelsWithSummaries:didAddLabels:
p_cellTypeForGridPoint:
p_cellValueFromCellWithCustomFormat:locale:
p_charactersToTemporarilyChopOffEndToFixSyntaxError
p_chromeRangeRefForBaseRangeRef:calcEngine:
p_chromeReferenceForBaseReference:calcEngine:
p_chromeReferencesForMixedReferences:calcEngine:
p_cleanupStashedRangeIffExists
p_clearCategoryStyles
p_clearDataListEntriesForStorageRef:cellID:
p_clearDataListEntriesInRange:
p_clearDataListIDs
p_clearDefaultStyles
p_clearFormatOfCellFormatKind:
p_clearIfImplicitAndNotCurrentForKind:format:explicitFormatMask:
p_clearPivotStyles
p_clearReverseMapForObject:atKey:
p_clearStrokesForMergesInCellRegion:
p_coldSpecifierCount
p_collapsedIndexes
p_columnForCellID:useCache:
p_columnForTrackedReference:
p_columnNameForColumnUid:
p_columnRowTypeForColumnIndex:
p_columnRowTypeForRowIndex:
p_commitSort
p_commitSortAsync
p_compareGroupByViaOwnerIndexes:otherGroupBy:
p_compressUID:index:UIDtoIndexMap:UIDs:compressedIndexes:lastSameUIDIndex:
p_computeSpillingTextFrameForEditingLayout:textSize:editingSpillRange:
p_computeinteractionType:
p_configureReachabilityWithHost:
p_containsGradientFillThatFillsContainerInCell:cellContents:
p_containsGradientThatFillsContainerInStyle:
p_contentFrameWithCellID:
p_contentWidthForCellRange:skipDynamicSwap:validationBundle:
p_convertCategoryRefToRelativeForHostCell:
p_convertToInverseCellMap
p_convertToUuidBasedCellListUsingTableInfo:pruneCategorizedCells:
p_copy
p_copyCellsAndUUIDsFromCellMap:convertingToCellIDsWithTableInfo:
p_copyFromRegion:
p_copyStorage:
p_countOfIdenticalCellsBetweenOutgoingTableInfo:incomingTableInfo:
p_createCanvasReference
p_createColumnCoordinatesForGridRange:invalidColumnIndex:previousCoordinates:outCoordinatesChanged:
p_createCommentMapsIfNeeded
p_createRowCoordinatesForGridRange:invalidRowIndex:previousCoordinates:validateSingleRow:outCoordinatesChanged:
p_createThresholdCellValue:locale:
p_creatorForPeriodBoundaryWithScale:direction:offset:argIndex:earlierBound:isCalPers:
p_currentFormatIsEqualToOtherCellFormat:
p_dataSourceFetcherForRemoteData:
p_dateBySettingUnit:value:ofDate:inCalendar:
p_dateForListItem:
p_defaultAlignmentForTableWritingDirection
p_defaultCellStyleOfSummaryOrLabelRowAtLevel:isLabel:
p_defaultStockList
p_defaultStyleHandlesOfSummaryOrLabelRowAtLevel:isLabel:styleDefaultsCache:outCellStyleHandle:outTextStyleHandle:
p_defaultStylesOfSummaryOrLabelRowAtLevel:isLabel:outCellStyle:outTextStyle:
p_defaultTextStyleOfSummaryOrLabelRowAtLevel:isLabel:
p_deleteColumnsStartingWith:upToColumn:
p_deleteEmptyPivotMessage
p_deleteRowsStartingWith:upToRow:
p_deriveCategoryCellStyleForTableStyleArea:fromCellStyle:connectedToStylesheet:
p_deriveCategoryTextStyleForTableStyleArea:fromTextStyle:connectedToStylesheet:
p_deriveHeaderColumnPivotSeparatorAndHeaderRowPivotGroupVerticalStrokeFromTableStyle:propertyMap:returnHeaderRowPivotGroupVerticalStroke:
p_derivePivotCellStyleFromCellStyle:optionalSourceFill:brightnessShift:connectedToStylesheet:styleArea:
p_description:
p_descriptionForPivotGroupValueTuple:upToLevel:locale:
p_detokenizeEverythingInRange:
p_detokenizeTokenAtCharIndex:
p_dictionaryForRemoteData:
p_didEnterBackground:
p_didFinishPartitioningHint:horizontally:
p_didReceiveMemoryWarning:
p_dirtyCellsForMerge:
p_displayNameForColumnAtIndex:documentLocalized:derivation:
p_documentRoot
p_downgradedFilterRuleForListItem:fromPredicate:
p_drawAnimation:inContext:
p_drawBackgroundFillInLayoutSpace:gridRange:context:
p_drawCellCommentBadgeInContext:
p_drawCellErrorIndicatorInContext:
p_drawCellWarningBadgeInContext:
p_drawCheckboxOrRatingInContext:viewScale:contentFrame:cell:cellID:
p_drawFinalElements:inContext:
p_drawGroupingArrowInContext:contentFrame:cell:cellID:groupingArrowState:alignedClipFrame:verticalAlignment:wpColumn:
p_drawLayoutSpace:dirtyRect:inContext:
p_drawLayoutSpace:range:inContext:
p_drawStrokeForGridColumn:strokeRect:clearStroke:shadowType:context:
p_drawStrokeForGridRow:strokeRect:clearStroke:shadowType:context:
p_drawTableNameInContext:animation:
p_drawingCheckboxOrRatingInCell:cellID:
p_eliminateLargestCommonSubexpressionWithLCA:expressions:withSymbolTable:newIdentifierOut:
p_emptyCell
p_ensureHiddenStatesExistsWithPivotDataTable:
p_enumerateCellStoragesRowByRowToMaxID:getPreBNC:withBlock:
p_enumerateCellsAddedAndRemovedForFormatsUsingBlock:
p_enumerateCellsAddedAndRemovedForFormatsWithOptions:usingBlock:
p_enumerateCellsAddedAndRemovedOfType:usingBlock:
p_enumerateCellsAddedOfType:usingBlock:
p_enumerateColumnCellCountDiffUsingBlock:
p_enumerateConcurrentlyUsingChunkBeginBlock:perDispatchThreadBlock:concurrentBlock:finalBlock:
p_enumerateCustomFormatsBeingAddedUsingReplacementBlock:
p_enumerateMergesUsingBlock:
p_enumerateNewAndOldCellsSeriallyUsingBlock:
p_enumerateRowCellCountDiffUsingBlock:
p_enumerateRowsOfCellsConcurrentlyUsingBlock:
p_enumerateYearMapsWithBlock:
p_enumerateYearSetsWithBlock:
p_expandedViewRangeRefForViewRangeRef:forLabelRowsInTable:
p_extendedBodyGridRange
p_fetcherForDataKind:
p_fillPropertyForStyle:
p_fillResourceWithFilename:
p_filterRegion:strokeSidecar:
p_filteredIndexes
p_findFirstColumnNameInComponent:tableName:refResolver:calcEngine:outPreserveFlags:usedWordCount:
p_findStrokeAndRangeAtIndex:highOrderToken:updatingLowOrderToken:lowOrderLayer:
p_fixFormula:
p_fixupNodeIfFunctionNode:
p_flattenMajorStrokeLayer:minorStrokeLayer:
p_flattenStrokeOrder
p_flushCacheAfterPartitioningFinished:lastHint:horizontally:
p_fontColorAtCellID:cell:
p_footerRowsGridRange
p_forceLoadHeaderStorages
p_formatForFormatType:
p_formatOfCellFormatKind:create:returnFormat:outCreated:
p_formatTypeIsANumberFormatTypeForMostRecentlySet:
p_formulaAsTextReturningTokenValues:
p_formulaForCellCoord:runningTotalContext:
p_frameSpecForGridRange:frameType:strokeWidthOverride:
p_functionSpec
p_gatherCellRegionViaCellRegionAddition
p_gatherCellRegionViaReducedOverlap
p_gatherRowState:
p_generateCellContentsAndReturnContents:
p_getImageFrameForAnimation:
p_getStyleProvidingAncestorLayout
p_gridPointForTablePoint:
p_gridRangeForTableRect:
p_gridRowForTableCoordinate:
p_groupingFormatWithLocale:
p_growRangeFrom:toDesired:
p_growReturningInverseForAction:formulaReplacer:
p_hasExplicitFormatOfCellFormatKind:
p_hasRuleReferenceForTrackedReference:
p_headerColumnSeparatorColumnRangeIsValid
p_headerColumnsGridRange
p_headerRowSeparatorRowRangeIsValid
p_headerRowsGridRange
p_hiddenStateChangedForBaseIndex:viewIndex:forAction:
p_horizontalAlignmentTransformForHyperlinkWithBounds:inCell:
p_horizontalAlignmentTransformForHyperlinkWithColumn:cell:cellID:
p_indexForTgtToPbMaps:andMap:
p_initBodyRegionPropertyMap:presetID:colors:alternate:
p_initFooterRowRegionPropertyMap:presetID:colors:alternate:
p_initHeaderColumnRegionPropertyMap:presetID:colors:alternate:
p_initHeaderRowRegionPropertyMap:presetID:colors:alternate:
p_initializeDefaultHeight:andWidth:
p_initializeQueue
p_insertColumns:atColumn:
p_insertRangeIntoRegion:
p_insertRows:atRow:
p_insertSpaceAtRange:
p_interestingCellIndexes
p_invalidate
p_invalidateClearedStrokesForCellRegion:
p_invalidateRange:
p_invokeBlock:
p_isEqual:
p_isEqualForNonFormulaItems:
p_isInCollaborationMode
p_isPersistedWithFormulaWarningTypeEnumeration
p_isTableRenderingRotated
p_iterateCellsAndTerminateWithIterator:usingBlock:
p_iterateDataStoreCellsInRegion:searchFlags:usingBlock:
p_layoutCoordinateForGridColumn:
p_layoutCoordinateForGridRow:
p_layoutEngineCreateIfNeeded:
p_layoutOffsetForGridPoint:
p_layoutOffsetForTablePoint:
p_layoutPointForTablePoint:
p_layoutRectForTableRect:
p_layoutWhollyContainsGridRange:
p_listItemAtIndex:
p_loadLazyDatalists
p_loadLazyTileStorage
p_localeStocks
p_lockAndDrawLayoutSpace:checkFrameHasWidthAndHeight:dirtyRect:inContext:
p_makeALazyDatalistOfType:
p_makeALazyDatalistOfType:isNewForBNC:
p_manageEmptyPivotMessage
p_mappingForSortingRowsOrColumns:withRules:dimension:
p_maskRectForRichTextLayout:
p_maximumSpillRangeForCellID:
p_mcListTypeForArgType:
p_mcListTypeOfListItem:
p_mergeStrokeRunsAtPosition:
p_mismatchBetweenValueType:andCellFormatKind:
p_modifyAllCellsConcurrentlyWithSearchFlags:affectsCellBorders:ignoreFormulas:clearImportWarnings:formulaReplacer:modificationBlock:preApplyBlock:
p_mostRecentlySetNumberFormatType
p_moveCellFromCellCoord:toCellCoord:
p_moveColumnsFrom:toColumn:
p_moveRowsFrom:toRow:
p_moveRowsUsingShuffleMapping:
p_mutableColumnIndexesForUIDSet:notFoundUIDs:
p_mutableRowIndexesForUIDSet:notFoundUIDs:
p_naturalBoundsRectForHyperlinkField:cellID:column:contentFrame:horizontalAlignmentTransform:
p_negativeImageFill
p_newStarPath:
p_nextAvailableKey
p_nextCellRefIdWithUIDIndexList:UIDs:index:remainDup:lastDiffPos:recentResults:
p_nonAutosizedFrameForRichTextLayout:
p_nonAutosizedFrameForTextEditingLayout:
p_numberForListItem:
p_objectCount
p_objectForPayload:
p_parseAsCategoryRefWithSheet:tableName:columnNameAndGroupValuesStartAt:withParsingContext:
p_parseComponentsOfReference:gettingSheetName:gettingTableName:gettingRest:
p_parseStringAsGeometricReferenceComponent:inResolver:outPreserveFlags:gettingReferencesMatchingInputAsPrefix:
p_parseStringAsReferenceComponentIntersection:inResolver:inTableNamed:preferredGeometricResolver:withParsingContext:
p_performCommentStorageDOLC:
p_populateAttributesFromArray:
p_populateMembersFromFormula
p_populatedMultipleChoiceListFormat:
p_popupItemsForStrings:
p_positionEmptyPivotMessage
p_positiveImageFill
p_postCommentNotificationFromDiff:inverseDiff:cellID:
p_preBNCStorageRefAtIndex:
p_preBNCpopulatedCustomFormat:value:
p_prepareAttachmentCellsIfNeeded
p_processEndNode:startNode:bakeModes:tokenDict:
p_processWorkForTable:
p_promoteSpanningReferences:withCaptured:atLevel:
p_pruneCellsAtColumn:rowsSize:columnsSize:
p_pruneCellsAtRow:rowsSize:columnsSize:
p_pruneToBaseWithBaseMap:viewMap:
p_rangeForLayoutRect:
p_rangeOfString:orNodeClass:range:
p_rangeRef:isContainedWithinSummaryAndLabelRowsInTable:
p_rangeUpAndLeftOfIntersectionRangeOfGridRange:
p_rawTableCoordinateForGridColumn:
p_rebuildTheTable
p_recalculateMergedFormatWithGroupBy:
p_recreateUIDs
p_recursiveWriteWillModify:withBlock:
p_referenceForColumnIndex:
p_referenceNodeFromTractRef:
p_refreshGroupValue
p_refreshSpecifiers
p_regionStringForTableStyleArea:
p_registerAllFormulas
p_registerAllFormulasReturningCoords:
p_remapUidVector:usingUidMap:clearIfMissing:
p_removeAllFormulaFromCalculationEngine
p_removeCanvasReference
p_removeHiddenIndex:viewIndex:forAction:
p_removeObservers
p_removeRange:
p_removeRemoteDataInterest:forStore:
p_removeRows:
p_removeUUID:
p_removeUUIDs:
p_removeUUIDsFromVector:
p_replaceCustomFormatsWithBlock:
p_replaceMixedDirectionText:atRange:
p_replaceObjectAtKey:withObject:
p_replaceTokenAtCharIndex:withText:
p_replaceUnknownDirectionText:atRange:
p_reserve:
p_resetAllGroupUids:baseGroupUids:summaryGroupUids:forGroupBy:uptoLevel:isFlattening:
p_resetAllHiddenTotals
p_resetArgumentSpecForChildren
p_resetDynamicModePropertiesForContainedTextEditing
p_resetFittingHeightsForRange:
p_resetHiddenGrandTotals
p_resetHiddenTotalsForGroupingColumnUid:hideTotals:
p_resetMenu
p_resetSortingStructures
p_resetSummaryFormulasForRunningTotalsOnly:preservingStyles:
p_resetToRows:andNumColumns:
p_resolveCellIDsToUUIDsByTableInfo:
p_resolveCellUIDToVendorCellUID:
p_resolveStrokes
p_resolvedTextStyleForCell:atCellID:textStyle:outNaturalAlignment:outCellDirection:
p_revalidateOnlineStatus
p_saveMap:toArchive:
p_saveToArchive:archiver:isPre30Alternate:
p_scaledCanvasFrame
p_scanCellDiffArrayForCellBorderChanges:
p_scanCellDiffArrayForSuppressCustomFormatHandlingProperty:
p_scanNSArrayOfDiffsForCellBorderChanges:
p_scanNSArrayOfDiffsForSuppressCustomFormatHandlingProperty:
p_selectionRemovingHiddenColumnsInTableInfo:
p_selectionRemovingHiddenRowsInTableInfo:
p_setBottomStroke:order:atCellID:
p_setCategoryCell:atCellUID:formulaReplacer:
p_setCell:forDayGroupingTypeWithGroupColumnValue:toBeInGroup:
p_setCell:forDayOfWeekGroupingTypeWithGroupColumnValue:toBeInGroup:
p_setCell:forMonthOfYearGroupingTypeWithGroupColumnValue:toBeInGroup:
p_setCell:forQuarterOfYearGroupingTypeWithGroupColumnValue:toBeInGroup:
p_setCell:forUniqueGroupingTypeWithGroupColumnValue:toBeInGroup:
p_setCell:forYearGroupingTypeWithGroupColumnValue:toBeInGroup:
p_setCell:forYearQuarterGroupingTypeWithGroupColumnValue:toBeInGroup:
p_setCell:forYearWeekGroupingTypeWithGroupColumnValue:toBeInGroup:
p_setCell:groupingCellPlan:groupValue:toGroup:templateCell:
p_setCell:groupingTypeCombo:groupingCellValue:toBeInGroup:
p_setDefaultFontHeight:forTableStyleArea:
p_setDynamicStroke:strokeOrder:forGridColumn:isLeft:beginRow:endRow:
p_setDynamicStroke:strokeOrder:forGridRow:isTop:beginColumn:endColumn:
p_setEmptyPivotTableLabels
p_setFillOnCell:positive:
p_setFittingHeightsFromCollectionWithLock:
p_setFormatExplicit:fromCellFormatKind:setMostRecentlySet:
p_setFormatExplicit:fromFormatType:setMostRecentlySet:
p_setFormatFlags:explicit:
p_setFormatForFormulaResult:propagation:
p_setFormattedAttr:fromArray:
p_setFormula:atCellID:
p_setFormulaWithSymbolString:atCellID:
p_setObject:atKey:updateReverseMap:
p_setObjectLocale:
p_setPayload:atSuggestedKey:callWillModify:
p_setPivotCell:atCellUID:formulaReplacer:
p_setPivotHeaderCellsResettingPivotHidden:preservingStyles:
p_setPopupMenuOnCell:withItems:andSelectedIndex:
p_setPredicateType:
p_setQualifier1:
p_setQualifier2:
p_setRightStroke:order:atCellID:
p_setStroke:inRange:order:
p_setStroke:order:inStrokesArray:atIndex:atRange:
p_setTopStroke:order:atCellID:
p_setUpFormat:
p_setupInterestingCells:interestingCellIndexes:forAdding:
p_setupTableModelforNewForm
p_setupTableModelforStockPrototype
p_setupTileAndRowAtCellID:
p_setupWithType:nextKeyID:
p_shallowAddCell:atCellCoord:
p_sharedInitWithRefCount:key:
p_shouldAllowApplyBaseCellMap:
p_shouldAllowSetCell:atBaseCellCoord:
p_shouldUseReverseMap
p_shrinkMergesAtIndexes:intersectedByBaseRegion:formulaReplacer:
p_shrinkReturningInverseForAction:formulaReplacer:
p_simpleInvokeBlock:
p_singleCategoryRefForViewRangeRef:rangeContext:calculationEngine:hostCellRef:
p_smokeTestThePredicate
p_sortColumnsInMode:sortDirection:rowIndex:level:aggregateIndex:resetLabels:
p_sortFullTable:
p_sortRowsInMode:sortDirection:columnIndex:level:aggregateIndex:resetLabels:
p_spanningCategoryRefForViewRangeRef:groupByUid:categoryLevel:calculationEngine:
p_spareFormatOfType:allowMismatchedSpare:explicitOnly:
p_spillRangeForMaskingRichTextLayout:
p_spillRangeToRightForCellID:
p_stageCountForProvider:withAnimationKind:
p_stashBadKey:forList:
p_stringByUnescapingQuotedStringWithPossibleDollarPrefix:partial:
p_stringForListItem:
p_stringWithFormulaAsTextFromRange:returningTokenValues:
p_strokeExportCacheForColumnBefore:columnAfter:
p_strokeExportCacheForGridColumn:
p_strokeExportCacheForGridRow:
p_strokeExportCacheForRowAbove:rowBelow:
p_strokeLayerVector
p_strokeRect
p_strokeTypeForColumn:
p_strokeTypeForRow:
p_strokesForGridColumn:isLeft:takeStrokeWriteLock:
p_strokesForGridRow:isTop:takeStrokeWriteLock:
p_strokesForValidationOfGridRow:isTop:
p_subregionForRange:rangeContext:
p_summaryFilteredIndexes
p_summaryHiddenIndexes
p_summaryPivotHiddenIndexes
p_symbolicColumnNameForRefPair:useTopLeft:isSticky:foundRange:inTableModel:namingContext:
p_symbolicRowNameForRefPair:useTopLeft:isSticky:foundRange:inTableModel:namingContext:
p_tableCoordinateForGridRow:
p_tableCoordinateForX:
p_tableCoordinateForY:
p_tablePointForLayoutPoint:
p_tableRectForGridRange:
p_tableRectForLayoutRect:
p_tableSize
p_tableStyleAreaForCellCoord:
p_testDataTypesForArg0:arg1:arg2:predShouldReturn:
p_textFrameForWrappingCell:defaultRowHeight:
p_tgtCellIDForPbCellID:givenColumnMaps:rowMaps:
p_tgtRangeForPbRange:givenColumnMaps:rowMaps:
p_tgtRangeFromPbRange:andMap:
p_tgtRangesForPbRange:givenColumnMaps:rowMaps:
p_thresholdComparisonMatchesFilter:withPredicateType:
p_timeInterval
p_topLeftCornerGridRange
p_tsceValueFromTsceCellValue:
p_updateCachedStyleInformationFromCellID:
p_updateCachesWithMap:quotes:overwriteValues:
p_updateDataForCellID:
p_updateDataForMergeAtCellID:
p_updateDynamicModePropertiesForContainedTextEditing
p_updateDynamicModePropertiesForContainedTextEditingWithSpillingTextRange:
p_updateIndexesForReplacingRangeAtIndex:withRange:
p_updateMergesAndCellsAsPivotDataWithSourceModel:sourceRegion:sourceBodyRegion:
p_updateNumberOfPopulatedCells
p_updateOriginMapWithSourceCellCoord:destCellCoord:
p_updateStorageParentInfoForModels
p_updateStrokeLayer:forColumnStrokeType:
p_updateStrokeLayer:forRowStrokeType:
p_updateText:atCellCoord:tableUID:
p_updateWithWordFragments:atCellCoord:tableUID:
p_upgradeDefaultCellStylesForStrokeSidecar
p_userHiddenIndexes
p_validateCellIDToWPColumnCacheForChangeDescriptors:
p_validateFittingInfoForEmptyCellsBetween:andCellID:inRange:widthHeightCollection:
p_validateFittingInfoForEmptyCellsOnSingleRowBetween:andEndCellID:widthHeightCollection:
p_validateFittingInfoWithCellRangeWorker:widthHeightCollection:containsMerges:validationBundle:
p_validateStrokeWidthCachesForGridColumn:
p_validateStrokeWidthCachesForGridRow:
p_validateStrokeWidthCachesForRegion:invalidateStrokeDefaults:
p_validateStrokesForRegion:
p_validationBundleForRegionToValidate:
p_validationFittingCellRegionForColumnsDeleted:cellRegionGatherer:
p_validationFittingCellRegionForColumnsInserted:cellRegionGatherer:
p_validationFittingCellRegionForColumnsMovedFrom:toColumnIndex:cellRegionGatherer:
p_validationFittingCellRegionForColumnsVisibility:cellRegionGatherer:
p_validationFittingCellRegionForRangeMergeUnmerge:cellRegionGatherer:
p_validationFittingCellRegionForRowsInserted:cellRegionGatherer:
p_validationFittingCellRegionForRowsMovedFrom:toRowIndex:cellRegionGatherer:
p_validationFittingCellRegionForStrokesChanged:cellRegionGatherer:
p_validationFittingForChangeDescriptorType:regionFromChangeDescriptor:cellRegionGatherer:
p_viewIndexForBaseIndex:
p_warningSetForFormulaWarningType:originalFormula:supplementaryText:
p_widthOfStrokesAtIndex:
p_willApplyCell:baseCellCoord:refreshCategoryInfo:
p_willApplyCell:baseCellCoord:tableUID:
packageLocator
packageLocatorForSegments
paddingForCellID:
paddingForEditingCell
paddingInsets
paddingWithTopInset:leftInset:bottomInset:rightInset:
pageCount
pageCountForAttachment:
pageNumber
pageNumberForAttachment:
paintPath:inContext:
paintRect:inContext:
pairWithFirst:second:
paraStyleToHeightCache
paragraphCount
paragraphStyle
paragraphStyleAtCharIndex:effectiveRange:
paragraphStyleAtParIndex:effectiveRange:
parenCountAtCharIndex:inStorage:
parenCountAtCharIndex:unmatchedParenCount:quoteContext:inStorage:
parenNestingLevel
parent
parentInfo
parentNode
parentRep
parentStorage
parentUUID
parseAsBaseTableReference
parseAsCategoryRefWithParsingContext:
parseAsChromeRefWithParsingContext:
parseAsTractRefWithParsingContext:
parseContentFromString:flags:
parseContentOrFormulaFromString:tableInfo:cellID:flags:
parseFormula:calcEngine:containingCell:outError:
parseFormula:calcEngine:unqualifiedReferenceTableUID:containingCell:outError:outNeedsImportRewrite:isChartFormula:isSageUpgrade:
parseNumberFromTableName:
parseR1C1Coord:containingCell:preserveFlagsOut:
parseR1C1Reference:containingCell:preserveFlagsOut:
parseStringAsBaseReference:withParsingContext:
parseStringAsCategoryRef:withParsingContext:
parseStringAsChromeReference:withParsingContext:
partiallyIntersectsBaseCellRect:
partiallyIntersectsBaseCellRegion:
partiallyIntersectsCellRange:
partiallyIntersectsModelCellRect:
participatesInLastRowHeight
partitionPosition
partitioner
partitioningPass
partitioningPassCache
partitioningPassForFirstPartitionSize:
partitioningPassForHint:withPreviousHint:
pasteFilterHidingAsUserHiding
pasteInverseCommands
pasteType
pasteWasUpdate
pastesTile
pathForResource:ofType:inDirectory:forLocalization:
patternType
pauseEvaluationForPotentialTermination
pauseRecalculation
pauseRecalculationForBlock:
pauseRecalculationSometimeSoon
payloadWithStorage:
pbCellIDForTgtCellID:
pbRangeForTgtRange:
pbTableUID
peerCellRegionForCellRegion:
pencilAnnotationOwner
pencilAnnotationOwnerUID
pencilAnnotationStorage
perChunkHelperWithSourceRectOrigin:cellUIDRange:
perTableEntryForTable:createIfMissing:
percentParentDenominatorCategoryRefFor:inGroupBy:forAggregate:forShowAsType:
percentRunningDenominatorCategoryRefFor:inGroupBy:runningOnColumnUid:forAggregate:
percentSymbol
performActionReturningInverse:formulaReplacer:
performAsync:
performBlockIgnoringModifications:
performBlockWithTemporaryLayout:
performRead:
performReadAllowingOverlappingImplicitRead:thenWrite:thenReadOnPrimaryThread:
performReadForOneOffFormulaEvaluation:forCellCoord:
performRewritesForInsertedTableInfos:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performSync:
performSyncWriteWithUnderlyingDictionary:
performWrite:
pivotAggregateRuleChangeUID
pivotBodySummaryRowCellStyle
pivotCachedIndexesUnfairLock
pivotDataCellValueTypeForColumn:
pivotDataLocalizedColumnNameAtDataColumnIndex:
pivotDataModel
pivotDataModelRowIndexesNeededForCell:
pivotDataModelSizeClass
pivotDataRefreshTimestamp
pivotDataRefreshUID
pivotDataTable
pivotDataTableMapper
pivotDataTableUID
pivotDateGroupingTypesByColumn
pivotDetailTableNameFromSourcePivotTableInfo:pivotSourceCell:
pivotHeaderColumnDisplayNameAtIndex:
pivotHeaderColumnSummaryCellStyle
pivotHeaderRowDisplayNameAtIndex:
pivotInfo
pivotLeadingColumnDisplayNameAtIndex:
pivotLeadingRowDisplayNameAtIndex:
pivotOnlyRowIndexes
pivotOptionsForColumnGroupsAtLevel:
pivotOptionsForGroupingColumn:
pivotOptionsForGroupingColumnUid:
pivotOptionsForRowGroupsAtLevel:
pivotOptionsForUID:
pivotOrder
pivotOwner
pivotRowColumnRuleChangeUID
pivotRowUIDs
pivotRulesChangedPrecedentForTableUID:
pivotSizeClass
pivotSortChangedPrecedentForTableUID:
pivotSourceBodyReferenceEmbeddedInFormula
pivotSourceBodyTract
pivotSourceBodyUidTract
pivotSourceHeaderTract
pivotSourceIsRangeBased
pivotSourceNSTableUID
pivotSourceRangeName
pivotSourceRangeNameWithTractRef:
pivotSourceTableInfo
pivotSourceTableName
pivotSourceTableUID
pivotTableCanBeRefreshed
pivotTableNameForSourceTable:
pivotTableStyleAreaForRowLevel:columnLevel:numberOfRowLevels:numberOfColumnLevels:columnIndex:
pivotTableUID
pivotTableUid
pivotValueTypesByColumn
platformSupportsForms
popAnimation
popFromFixedColumnWidthStack
popFromStyleProviderStack
popUpItemFromBoolean:
popUpItemFromDate:format:
popUpItemFromNumber:format:
popUpItemFromString:
popUpMenuModel
populatedCategoryGroupLevelsInColumn:
populatedColumns
populatedColumnsForGroupLevel1
populatedColumnsForGroupLevel2
populatedColumnsForGroupLevel3
populatedColumnsForGroupLevel4
populatedColumnsForGroupLevel5
populatedCustomFormatWrapperFromCFWrapper:customFormat:
populatedIndexes
populatedRows
populatedSliceByIndex:byRow:
populatedTiles
popupCellSpec:startWithFirstItem:
popupChoiceIndex
popupMenuModelDeletingItemFromModel:index:
popupMenuModelEditingItemInModel:index:newContent:
popupMenuModelFromTable:region:initialValue:overflow:
popupMenuModelReorderingModel:fromIndex:toIndex:
popupModel
portalStroke
portalledStrokeLayer
position
positionForColumnIndex:bodyWidth:target:outWidth:outGap:
postCommentNotificationForStorage:atCellID:notificationKey:
postCommentNotificationForStorage:atViewCellCoord:notificationKey:
postCommentNotificationForStorage:baseCellCoord:notificationKey:
postNotificationName:object:
postNotificationName:object:userInfo:
preBNCFormatTableReference
preMergeUidTract
preMoveRegionUidTract
prePivotRowFilterSet
preUFFVersion
precedentsForFilterSet:calcEngine:hostOwnerUID:hostCellID:
precedentsList
precedentsOfCell:
precedentsWithCalcEngine:hostOwnerUID:
precedentsWithCalcEngine:hostOwnerUID:hostCellID:
predArg0
predArg0Type
predArg1
predArg1Type
predArg2
predArg2Type
predicate
predicateArg1atBaseHostCoord:calcEngine:
predicateArg2atBaseHostCoord:calcEngine:
predicateDescription
predicateType
predicateWithBlock:
preferredFormatOptions:
preferredTypeForArgumentIndex:
prefixRange
prefixTupleToLevel:
prefixedUnitForString:
prepareDateParserInBackground
prepareForPasteWithSourceOffset:bakeFormulas:
prepareToApplyConcurrentCellMap:
preserveColumn
preserveFlags
preserveFlagsFixingInversionsForTract:absFromRelColumns:absFromRelRows:
preserveFlagsForCoord:preferStart:
preserveFlagsForReference:calcEngine:
preserveRectangular
preserveRectangularRange
preserveRow
presetAtIndex:
presetID
presetIDForStyleID:
presetIDForUpgrade
presetKind
presetKinds
presetNeedsStrongOwnership
presetOfKind:index:
presetsOfKind:
prettyStringForCategoryRef:forHostCellRef:namingContext:
prevEditingSpillingTextRange
preventsChangeTracking
preventsComments
preventsRowInsertion
previousGroupNodeToUpdated
previousGroupNodeUidForUpdatedGroupNodeUid:
previousGroupNodeUids
previousLevel
previousLocaleIdentifier
previousMatch
previousNonWhitespaceOrNewlineIndexStartingAtIndex:
previousNthVisibleColumn:fromColumnIndex:
previousNthVisibleRow:fromRowIndex:
previousRelativeAncestorLevelForUpdatedAncestorCategoryLevel:numLevels:
previousValueIsRegex
privateCellStyle
privateTextStyle
problemExpressionString
problemMode
problemNodeIsCellReference
processChangesFiltering
processCustomFormatsWithBlock:
processDeferredImportActions
processHiddenRowsForExport
processInBackgroundIfNecessary
processInfo
processLayoutTask:validationBundle:
processRowsWithPendingGroupingChangesAndReturnAffectedCellRegion
processedByLayoutEngine
processorCount
productValue
promoteSpanningReferences:
properties
propertiesAllowingNSNull
propertiesMatchingThoseInMap:
propertyListRepresentation
propertyMap
propertyMapToReset
propertyMapToSet
propertyMapToTextStyleMap
propertyMapWithProperties:
propertyMapWithPropertiesAndValues:
propertyRange
propertySet
propertySetByAddingProperties:
propertySetByAddingProperty:
propertySetByRemovingPropertiesFromSet:
propertySetFromUnionOfPropertySets:
propertySetWithProperties:
protocol
providedArgs
providesActivityDescription
pruneAgainstTable:
pruneCellDiffMapAgainstTable:behavior:
pruneCellDiffMapAgainstTable:behavior:usingBlock:
pruneCellUIDListAgainstTable:behavior:
pruneCellUIDListAgainstTable:behavior:usingBlock:
pruneCollapsedColumnGroups
pruneCollapsedGroupsInDimension:
pruneCollapsedRowGroups
pruneEmptyRows
pruneMergeUidTractsAtAndAboveIndex:
pruneTileForRowIndex:
pruneTilesForRows:
prunedCellRegionAgainstTable:behavior:
prunedCellRegionAgainstTable:behavior:usingBlock:
prunedCopyWithUids:
prunedRowUIDsFromRowUIDs:
ptsce_referenceComponentsSeparatedByCharacterInSet:
purgePreBNCDatalists
pushAnimation:
pushInverseMergeAction:
pushRangeAndSpanningDependents:fromCoord:cellIsInACycle:
pushRewriteSpec:
pushScopeForField:message:usingBlock:
pushToFixedColumnWidthStack:
pushToStyleProviderStack:
qualifier1
qualifier2
queriedModel
queue
queueCellForValidation:cell:textStyleHandle:modelMergeRange:wrap:verticalAlignment:padding:prop:layoutCacheFlags:validationBundle:layoutTask:
quoteContextAtCharIndex:previousContext:inStorage:
quoteStringIfNeeded
rSquared
raiseArgumentEqualsToZeroErrorForFunctionName:argumentNumber:
raiseArgumentSetUsedOutOfContextError
raiseArrayElementNoDataError
raiseAutoNumberAttachmentErrorInTextCell:
raiseCharInputOutOfBoundsError
raiseCircularReferenceErrorWithReference:
raiseComparisonTypeExceptionForLeftType:rightType:
raiseConvertOriginUnitMismatchError
raiseCurrencyNotAllowedErrorForFunctionName:argumentNumber:
raiseDataInvalidLengthError
raiseDataInvalidWidthError
raiseDateEarlierThanStartingDateErrorForFunctionName:
raiseDifferentDimensionsErrorForFunctionName:
raiseDifferentNumberOfDataPointsErrorForFunctionName:
raiseDifferentNumberOfElementsErrorForFunctionName:
raiseDisallowedStockModeError:
raiseDivideByZeroError
raiseDurationDisallowedForNormdistPDFError
raiseDurationNotAllowedError:argumentNumber:
raiseEmptyArgumentError
raiseEmptyArgumentSpecificErrorForArgumentNumber:
raiseEmptyArrayError
raiseErrorForError:
raiseErrorForInvalidReference
raiseErrorForInvalidReference:orString:contextEntityUID:
raiseErrorForInvalidReference:orString:contextEntityUID:invalidMergeReference:disqualifiedFromEndCell:
raiseException
raiseIndirectErrorForRangeReference:hostTableUID:
raiseInvalidAltitudeError
raiseInvalidArgumentEqualityRelationshipErrorForFunctionName:argIndex1:argIndex2:
raiseInvalidArgumentPairingsErrorForFunctionName:hasInitialUnrelatedArgument:
raiseInvalidArgumentRelationshipErrorForFunctionName:argIndex1:argIndex2:argsAscending:equalityPermitted:
raiseInvalidArgumentsErrorForFunctionName:argumentIndex:
raiseInvalidArrayContentsError
raiseInvalidBaseCharacterErrorForCharacter:base:
raiseInvalidComparisonError
raiseInvalidCurrencyComparisonError
raiseInvalidDateError
raiseInvalidDateManipulationError
raiseInvalidDecimalNumberErrorForArgument:argIndex2:argIndex3:functionName:
raiseInvalidDecimalNumberErrorForArgument:argIndex2:functionName:
raiseInvalidDecimalNumberErrorForArgument:functionName:
raiseInvalidFrequencyErrorForFunctionName:argumentNumber:
raiseInvalidHeadingError
raiseInvalidHistoricalCurrencyAttributeError
raiseInvalidHistoricalStockAttributeError
raiseInvalidHyperlinkError
raiseInvalidIndexForChooseError:
raiseInvalidIntersectionError:hostTableUID:calcEngine:
raiseInvalidLatitudeLongitudeError
raiseInvalidLiveCurrencyAttributeError
raiseInvalidLiveStockAttributeError
raiseInvalidMatchModeError
raiseInvalidProbabilityErrorForFunctionName:
raiseInvalidRangeUsageErrorForReference:
raiseInvalidReferenceNameAttributeError
raiseInvalidRegexError:
raiseInvalidSubtotalFunctionNumberError
raiseInvalidTailErrorForFunctionName:argumentNumber:
raiseInvalidTimeError
raiseInvalidTypeErrorForFunctionName:argumentNumber:
raiseInvalidUnitStringError:
raiseLinestHighlyCorrelatedVariableError
raiseLinestMatrixUnderdeterminedError
raiseLocationHeadingFailureError
raiseLocationHeadingUnknownError
raiseLocationNetworkError
raiseLocationServicesNotEnabledError
raiseLocationUnknownError
raiseLocationUserDeniedError
raiseMatchNotFoundErrorForValue:isRegex:afterMatch:previousValueToMatch:previousValueIsRegex:occurrence:matchesFound:functionName:
raiseMatchNotFoundErrorForValue:isRegex:functionName:
raiseMismatchedCurrenciesErrorForFunctionName:
raiseMismatchedMaxUnitsError
raiseMismatchedUnitsErrorForFunctionName:
raiseMismatchedUnitsErrorForFunctionName:argumentNumberString:
raiseMixedTypeManipulationErrorForFunctionName:
raiseMultipleDurationsErrorForFunctionName:
raiseNegativeReceivedAmountError
raiseNegativeVectorValueErrorForFunctionName:argumentNumber:
raiseNoConditionIsTrueErrorForFunctionName:
raiseNoModeError
raiseNonEmptyStringRequiredErrorForFunctionName:
raiseNonMetricUnitPrefixErrorForUnitString:
raiseNotAReferenceErrorForFunctionName:
raiseNotAReferenceToAFormulaError
raiseNotAVectorError
raiseNotEnoughInputsErrorForFunctionName:argumentNumber:required:
raiseNotReadyError
raiseNumberDoesNotConvergeErrorForFunctionName:
raiseNumberDoesNotConvergeWithEstimateErrorForFunctionName:
raiseNumberError
raiseNumberErrorForFunctionName:
raiseNumberMinusDateError
raiseOnlyPositiveOrNegativeErrorForFunctionName:
raiseOutOfBoundsArgumentErrorForArgument:functionName:lowerBound:lowerBoundInclusive:
raiseOutOfBoundsArgumentErrorForArgument:functionName:lowerBound:lowerBoundInclusive:upperBound:upperBoundInclusive:
raiseOutOfBoundsArgumentErrorForArgument:functionName:upperBound:upperBoundInclusive:
raisePercentRankExcInputOutOfRangeError
raisePercentRankInputOutOfRangeError
raisePositionLargerThanArrayErrorForFunctionName:
raiseRangeDoesNotSumToOneForFunctionName:argumentNumber:
raiseRangeSizeMismatchErrorForFunctionName:
raiseReferenceToEmptyCellErrorForFunctionName:rangeReference:
raiseRemoteDataUnavailableErrorWithAttribute:
raiseSignsMustMatchErrorForFunctionName:
raiseStartNumberExceedsStringLengthErrorForFunctionName:
raiseStringDoesNotRepresentDateErrorForFunctionName:string:
raiseStringDoesNotRepresentNumberErrorForFunctionName:string:
raiseStringTooLongError
raiseSumMixedDurationsAndUnitlessWithoutADateErrorForFunctionName:
raiseTooFewDataPointsErrorForFunctionName:
raiseTooManyArguments:maximum:provided:
raiseTypeExceptionForValue:functionSpec:argumentIndex:locale:
raiseUnionInsideIntersectionError
raiseUnitsNotAllowedErrorForFunctionName:argumentNumber:
raiseUnknownFunctionErrorForString:
raiseUnsupportedFeatureError
raiseUnsupportedFunctionError
raiseUnsupportedR1C1StyleError
raiseValueNotAvailableErrorForFunctionName:
raiseVectorValueNotNumberErrorForFunctionName:argumentNumber:
raiseWrongNumberOfArgumentsErrorForFunctionName:provided:
raiseZeroToPowerOfZeroError
randomPrecedentForTableUID:
randomSeedFromRandomLo:hi:
range
rangeArrayWithRange:
rangeAtIndex:
rangeContext
rangeCoord
rangeDependencies
rangeEncompassingExpressionNodesInRange:
rangeForCellID:includingBreak:
rangeFromFormulaAtIndex:useBoundingRange:
rangeFromFormulaObject:atCoord:useBoundingRange:
rangeIntersectingLayoutRect:
rangeIsWithinTable:
rangeOfCharacterFromSet:
rangeOfCharacterFromSet:options:
rangeOfCharacterFromSet:options:range:
rangeOfComposedCharacterSequencesForRange:
rangeOfFirstMatchInString:
rangeOfFirstMatchInString:options:range:
rangeOfInWithinRange:
rangeOfLetWithinRange:
rangeOfMatchInString:occurrence:
rangeOfMatchInString:occurrence:matchesFound:
rangeOfString:
rangeOfString:options:
rangeOfString:options:range:
rangeOfString:options:range:locale:
rangeOfUnit:inUnit:forDate:
rangeRef
rangeReference
rangeValue
rangeWithFunction
rank
ratingsDragCellID
rawGroupValueCellValue
rawString
rawString:argIndex:locale:
reachabilityCheckHost
readLazyReferenceMessage:class:protocol:completion:
readReferenceMessage:class:protocol:completion:
readRepeatedReferenceMessage:class:protocol:completion:
readSafelyUsingBlock:
readWeakReferenceMessage:class:protocol:completion:
reapAccumulatedCellRegionWithTable:
reapCoordinatesChangedMaskForChrome
rearrangeWithMapping:
reassignCustomFormatUIDForPaste:
reassignPasteboardCustomFormatKeys
rebuildAggFormulas
rebuildAllAggFormulas
rebuildFormulasForAggNode:
recalcInProgressUpdate:
recalcTimeInSecs
recalculateWithTimeout:
recalculationIsPaused
receivers
recommendedTimeBetweenRequests
recommendedTimeBetweenRequestsForWWAN
recomputedValueFromValue:changed:
record
recordExpression:data:
recordFromArchive:
recordHashesForSubexpressions:
rectInRootForSelectionPath:
recursivelyDrawInContext:keepingChildrenPassingTest:
recursivelyDrawingInContext
redColor
reducedSetMinusUuid:
reducedSetMinusUuids:
refCount
refParser
reference:argIndex:evaluationContext:
referenceArray
referenceAsStringWithContext:
referenceColor
referenceColorHelper
referenceEndCellInvalid
referenceForObject:
referenceIdentifiers
referenceIsComplete
referenceIsValid:
referenceNameIsUnique:forReference:contextTable:
referenceSet
referenceTextForAutocompleteWithCalculationEngine:contextSheetName:preserveFlags:inputString:inputStringIsComplete:
referenceTextForAutocompleteWithCalculationEngine:hostTableUID:preserveFlags:inputString:inputStringIsComplete:
referenceTextWithCalculationEngine:contextSheetName:
referenceTextWithCalculationEngine:hostTableUID:
referenceToHiddenStateFromColumn:toColumn:
referenceToHiddenStateFromRow:toRow:
referenceToNonexistentTableError:
referenceValue
referenceValueForFunction:argumentIndex:warningReportingContext:
referencedStyleWasUpdated:
referencedStyles
references
referencesForCalcEngine:referenceTrackerUID:
referencesToDirty
refersToCellRefForCalculationEngine:referenceTrackerUID:
refersToPivotTable
refersToPivotTableColumns
refersToPivotTableRows
regexMatcherWithRegexString:
regexMatcherWithRegexString:caseSensitive:
regexMatcherWithRegexString:caseSensitive:entireMatch:
regexMatcherWithStringMatch:
regexMatcherWithStringMatch:caseSensitive:entireMatch:
region
region:addingRange:
region:addingRegion:
region:intersectingRange:
region:intersectingRegion:
region:subtractingColumnIndexes:
region:subtractingRange:
region:subtractingRegion:
region:subtractingRowIndexes:
regionAfterColumnIndex:
regionAfterColumnIndexRtoL:
regionAfterRowIndex:
regionByAddingColumns:
regionByAddingModelCellRect:
regionByAddingModelCellRegion:
regionByAddingRange:
regionByAddingRegion:
regionByAddingRows:
regionByAddingViewCellRect:
regionByAddingViewCellRegion:
regionByApplyingRowMapping:
regionByCollapsingRangesForRemovedColumns:
regionByCollapsingRangesForRemovedRows:
regionByIntersectingColumnIndices:
regionByIntersectingRange:
regionByIntersectingRegion:
regionByMovingColumnsFromRange:toIndex:
regionByMovingRowsFromRange:toIndex:
regionByRemovingColumns:
regionByRemovingRows:
regionBySubtractingColumnIndexes:
regionBySubtractingModelCellRect:
regionBySubtractingModelCellRegion:
regionBySubtractingRange:
regionBySubtractingRegion:
regionBySubtractingRowIndexes:
regionBySubtractingViewCellRect:
regionBySubtractingViewCellRegion:
regionByTrimmingAroundColumnIndices:
regionByTrimmingAroundRowIndices:
regionByUnioningEveryRangeInRegionWithRange:
regionFillingRowsFromRegion:
regionForList
regionForValueOrCommentCellsInBaseCellRect:
regionForValueOrCommentCellsInRange:
regionFromCellCoordSet:
regionFromCellDiffMap:withTableInfo:
regionFromCellIDVector:
regionFromCellMap:withTableInfo:
regionFromCellMap:withTableInfo:passingTest:
regionFromCellRangeVector:
regionFromCellUIDVector:withTableInfo:
regionFromColumnIndexes:rowIndexes:
regionFromColumnIndices:
regionFromColumnIndices:rowRange:
regionFromMergeActionArray:withTableInfo:
regionFromMergeList:
regionFromModelCellRect:
regionFromModelMergeList:
regionFromOverlappingCellRangeVector:
regionFromPropertyListRepresentation:
regionFromRange:
regionFromRowIndices:
regionFromRowIndices:columnRange:
regionFromViewCellRect:
regionFromViewCellRectVector:
regionIterator
regionSubtractingCategoryColumnsAndRows:
regionUpToColumnIndex:
regionUpToColumnIndexRtoL:maxColumnIndex:
regionUpToRowIndex:
registerAllFormulaToCalculationEngine
registerAllFormulasWithCalculationEngine:
registerAllFormulasWithCalculationEngine:wasCrossDocumentPaste:infoIsCategorized:wasUndo:
registerAllFormulasWithCalculationEngine:wasCrossDocumentPaste:wasUndo:
registerChange:details:forChangeSource:
registerGroupByForColumns:ownerIndex:hiddenStates:groupBySet:
registerHiddenStates:baseOwnerUID:
registerLast
registerOwnerWithOwnerUID:owner:referenceResolver:baseOwnerUID:ownerKind:
registerPresetSourceClass:
registerStore:
registerWithCalcEngine:
registerWithCalcEngine:baseOwnerUID:
registerWithCalcEngine:forTableModel:baseOwnerUID:
registerWithCalcEngine:ownerKind:
registerWithCalcEngine:ownerKind:linkOnly:
registerWithCalcEngine:reregister:
registerWithCalcEngineForDocumentLoad:ownerKind:
registerWithCoordinator
registerWithDistributors
registeredWithCoordinator
regressionSumSquares
regularExpression
regularExpressionWithPattern:options:error:
reimportable
relativeAncestorGroupUid:
relativeBottomRight
relativeBoundingRangeWithContainingCell:
relativeColumn
relativeGroupUid
relativeLevelOfAncestorGroupUid:
relativeRows
releaseLayoutEngine
reliedOnLayoutsForTextLayout:
reloadMergeCacheForIndexes:
remapOwnerUIDsWithMap:rewriteContext:error:
remapRangeFormulasToOwnerUID:
remapTableUIDsInFormulasWithMap:
remapTableUIDsInFormulasWithMap:calcEngine:
remapTableUIDsInFormulasWithMap:calcEngine:bakeForBadRefs:
remapUIDsByColumnMap:rowMap:ownerMap:
remapUsingColumnUidMap:rowUidMap:clearIfMissing:
remapUsingUidMap:
remapWithMap:
remappedTableNames
remoteDataDidUpdateValues:quotes:
remoteDataDidUpdateValues:quotes:fromStore:syncKey:
remoteDataMap
remoteDataServerError
remoteDataSyncKey
remoteDataUnavailableErrorWithAttribute:
remove:atIndex:count:
removeAllAnnotations
removeAllCellCoordinates
removeAllCellRefsInOwner:
removeAllCells
removeAllFormulasFromOwner:
removeAllIndexes
removeAllObjects
removeAllPropertyValues
removeAllRowUids
removeAllSpecifiers
removeAllUuids
removeAnnotation:
removeAnnotationAtIndex:
removeAnnotations:
removeAnnotationsFromColumnsAtBaseIndexes:
removeAnnotationsFromColumnsAtIndexes:
removeAnnotationsFromRowsAtBaseIndexes:
removeAnnotationsFromRowsAtIndexes:
removeAttachmentCellLayouts
removeBaseMergeRange:
removeCategoryColumnCellsForRows:
removeCellCoord:
removeCellCoord:referringToCategoryRef:
removeCellCoord:referringToTableUID:
removeCellCoord:referringToTableUID:forColumnRowUuid:
removeCellRangeAtIndex:
removeCellRef:
removeCellRef:forUuid:
removeCellsInColumnUid:
removeCharactersInString:
removeChildForKey:
removeColumnRange:
removeColumns:
removeColumnsAtBaseIndexes:
removeColumnsAtColumnIndex:numberOfColumns:
removeColumnsAtIndex:count:
removeColumnsAtIndexes:
removeColumnsAtSummaryIndexes:
removeCommentStorageAtBaseCellCoord:
removeCommentStorageAtCellUID:
removeContainedTextEditingLayout
removeControlCellSpec
removeCustomFormatsWithIDs:
removeFormulaAt:inOwner:
removeFormulaAtCellID:
removeFormulasAt:
removeFormulasAt:inOwner:removeOutstandingReplaces:
removeFormulasFromRange:
removeFormulasInRange:
removeFromExcludedUidsTractColumnUids:
removeFromExcludedUidsTractColumnUidsSet:
removeFromExcludedUidsTractRowUids:
removeFromExcludedUidsTractRowUidsSet:
removeFromParent
removeIndex:
removeIndexes:
removeIndexesAtIndex:count:
removeIndexesInRange:
removeLastObject
removeName:
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removeObjectForKey:andWait:
removeObjectIdenticalTo:
removeObjectsAtIndexes:
removeObjectsForKeys:
removeObjectsInRange:
removeObjectsToSetForProperty:
removePointerAtIndex:
removeProperties:
removeRange:
removeRect:fromCoord:
removeRectsForFromCoord:
removeRefPathWordAtIndex:
removeRelativeColumnRange:
removeRelativeRowRange:
removeRemoteDataInterest:
removeRemoteDataInterest:forOwner:
removeRemoteDataInterest:forStore:
removeReturningInverseForBaseCellRegion:
removeReturningInverseForRegion:
removeRowUid:
removeRowUid:forGroupValue:
removeRowUid:forGroupValueTuple:atLevel:withLocale:
removeRowUids:
removeRows:
removeRowsAtBaseIndexes:
removeRowsAtIndex:count:
removeRowsAtIndexes:
removeRuleAtGroupLevel:
removeRuleAtIndex:
removeRulesForBaseColumnIndices:withTableInfo:
removeRulesWithIndices:inFilter:
removeSpecifier:
removeSpecifiersFromArray:
removeSpecifiersFromSet:
removeUUID:
removeUUIDs:
removeUid:
removeUids:forDimension:
removeUuidsFromSet:
removeUuidsFromSetReturningRemoved:
removeUuidsFromVector:
removeValueForProperty:
removeValueForSpecifier:
removeValuesForSpecifierSet:
removedByMoveUidTract
removedGroupNodeUids
renameTable:fromName:
renderAsTokenType
renderCheckbox:viewScale:intoContext:rect:color:
renderRating:intoContext:rect:showDots:color:
renderRating:intoContext:rect:showDots:color:useMinimalSpace:
rendererForAttachment
reorganizeValueAtIndex:
reorganizeValueForSorting
reorganizeValues
reoriginToZero
repClass
repClassForTextLayout:
repClassOverride
repForLayout:
repairOrReplaceErrantStyle:
repairOrReplaceMap
repairSpanningColumnSetting
repairSpanningRowSetting
repairStyleDatalistStylesheetIfNecessary
reparseWithStorage:
reparseWithStorage:adjustExpressionTree:
repeatHeaderColumnsSpace
repeatHeaderCornerSpace
repeatHeaderRowsSpace
repeatLabels
repeatingGroupSize
repeatingHeaderColumnsEnabled
repeatingHeaderRowsEnabled
replaceCell:atIndex:
replaceCellAtIndex0:
replaceCharactersInRange:withStorage:usePasteRules:dolcContext:undoTransaction:
replaceCharactersInRange:withString:
replaceCharactersInRange:withString:undoTransaction:
replaceColumnsWithUids:
replaceCommentStoragesUsingBlock:
replaceConditionalStyleSetsUsingBlock:
replaceContentsWithContentsOfTrackedReference:
replaceCustomStrokeLayerWith:
replaceDefaultStrokeLayerWith:
replaceFormatsUsingBlock:
replaceFormula:atCellCoord:inOwner:
replaceFormula:atCellCoord:inOwner:replaceOptions:
replaceFormulaAt:inOwner:precedents:replaceOptions:
replaceFormulaForConditionalStyle:atCellID:
replaceFormulasUsingBlock:
replaceObjectAtIndex:withObject:
replaceOccurrencesOfChildrenInSet:withIdentifier:symbol:
replaceOccurrencesOfString:withString:options:range:
replacePointerAtIndex:withPointer:
replaceReferencedStylesUsingBlock:
replaceRemoteDataKeysInterestedIn:forCell:
replaceRichTextUsingBlock:
replaceRowsWithUids:
replaceRule:atRuleIndex:inFilter:
replaceRuleAtAbsoluteIndex:withRule:
replaceRuleAtGroupLevel:withRule:
replaceRuleAtIndex:withRule:
replaceStylesUsingBlock:
replaceText:atRange:
replaceText:withLanguage:atRange:
replacementWithDefaults
reportAutomaticUnitConversionWarningInContext:
reportBoolToNumberConversionWarningInContext:
reportComparisonWarningInContext:leftType:rightType:
reportDayOutOfRangeWarningInContext:
reportLossOfUnitsWarningInContext:
reportMismatchedSizesWarningInContext:
reportMonthOutOfRangeWarningInContext:
reportNonNumericCellWarningInContext:reference:
repositionStockPopover
requestAutosaveForExpensiveCalculation
requestCompleted
requestRedraw
requestsInFlight
requiresDocumentReadVersion:writeVersion:featureIdentifier:
requiresDocumentVersion:
requiresDocumentVersion:featureIdentifier:
requiresTrailingAlignment:
requiresUnwrapping:
reserve:
reserveNextCoordinate
reserveNextIndex
reservePrecedent:forNameFragment:
reservedPrecedentForNameFragment:
reset
resetAllAggsFormula
resetAllCellCounts
resetAllColumnRowSizes
resetAllGroupings
resetAlmostEverything
resetBaseOwnerUID
resetCategoriesGroupByForOwnerRemapping
resetCellsForNewPivotOrder
resetCellsForNewPivotRules
resetCorruptCellRefs:
resetDependenciesForCell:
resetFittingRowHeightsStartingWith:upToRow:
resetFloatValue:forProperty:
resetForCategories
resetForCategoriesWithForce:
resetForPivotingWithRowUids:columnUids:
resetForPivotingWithRowUids:columnUids:numberOfHeaderRows:numberOfHeaderColumns:
resetGroupBy
resetGroupingColumnsFormula
resetGroupingList
resetGroupings
resetIntValue:forProperty:
resetMergeOriginMap
resetModelCacheRange:
resetModelHeightWidthCache
resetObject:forProperty:
resetOwnerUIDForUpgrade:forBaseOwner:ownerKind:
resetPropertiesFromMap:
resetResolver:
resetSharedTableConfiguration
resetSortRuleReferenceTrackerForInsert
resetViewMap
resetViewMapAndNotify
resetWithGroupings:categoryOwner:hiddenStates:groupBySet:
resizeMayChangeAspectRatio
resolveCategoryRef:atRowUid:inHostTable:
resolveDataListKeysForCell:cache:suppressTransmutation:sourceStorageVersion:
resolveDataListKeysForPreBNCCell:suppressTransmutation:sourceStorageVersion:
resolveRelativeAncestorUid:atRowUid:
resolvedTextStyleWithPropertyMap:
resolver
resolverContainerForName:caseSensitive:
resolverContainerMatchingName:
resolverContainerMatchingName:inDocumentRoot:
resolverContainerNameForResolver:
resolverContainerNamesMatchingPrefix:
resolverForCellRef:
resolverForTableID:
resolverForTableUID:
resolverMatchingName:
resolverMatchingName:contextContainerName:
resolverMatchingName:contextResolver:
resolverMatchingName:inDocumentRoot:contextResolver:
resolverMatchingNameWithContextContainer:contextContainerName:
resolverMatchingNameWithContextContainer:inDocumentRoot:contextContainerName:
resolverNameIsUsed:
resolverUID
resolversMatchingPrefix:
resourceURL
respondsToSelector:
rest
restoreFromBadRef
restoreFromPivotDataTable:columnGroupings:rowGroupings:aggregates:flatteningDimension:
restoreViewTractRefFromUndoTractList:calcEngine:containingCellRef:
restrictColumnIndexes:forAggrIndexLevel:forPivotTable:
restrictColumnIndexes:toColumnGroupLevel:forPivotTable:
restrictRowIndexes:forAggrIndexLevel:forPivotTable:
restrictRowIndexes:toRowGroupLevel:forPivotTable:
resultForFunction:
resumeGroupByChangeNotifications
resumeRecalculation
resumeRecalculationForBlock:
resumeUpdating
resurrectModeTokens
retain
retainCount
returnCellContents
returnEmptyCells
returnMergeRanges
returnNumberFormatter:
returnOneEmptyCell
returnOnlyFormulas
returnScientificNumberFormatter:
returnWhileEditingNavigates
reverseMapIndex:
reverseObjectEnumerator
reverseOriginsMap
rewriteFormulaWithBlock:
rewriteMergesForInsertedRange:uids:isRows:
rewriteMergesForRemovedRange:uids:isRows:
rewriteNumberToDurationForSageImport:durationUnitLargest:
rewriteSpec
rewriteSpecBaseToChrome
rewriteSpecChromeToBase
rewriteSpecStack
rewriteType
rewriteTypeUsesAmendRewriteSpec:
rewriteWithContext:forArgAt:usingLinkedRef:useColumnRef:hostCellRef:rewriteBlock:
rewroteFormula:atCoordinate:withRewriteSpec:isUndo:
richTextID
richTextParentInfo
richTextStorageForCalcEngineAtCellID:refIfAvailable:
richTextStorageForLayout
richTextTableReference
richTextValue
rightColumnStrokes
rightInset
rightParenCharacters
rightStroke
rightStrokeOrder
rockWithFirst:second:third:fourth:
rollbackMappings:
rollbackTableUIDHistoryWithRewriteInfo:
rootAncestor
rootCauseForErrorInCell:atRootCell:
rootCommentStorage
rootLayout
rowAggregateGroupSize
rowBasedSubRangesOfCellCount:
rowColumnInfo
rowCount
rowForColumnIndexesWithMerges
rowGroupLevel
rowGroupLevelAtRow:outAggregateIndex:
rowGroupLevelForHeaderColumn:
rowGroupLevelForRowUID:
rowGroupUidForRowUid:outAggregateIndex:
rowGroupings
rowHeaderStorage
rowHeaderUid
rowHeights
rowHiddenStateExtent
rowIndex
rowIndexForRowUID:
rowIndexForUUIDBytes:
rowIndexForUuid:
rowIndexesForUIDs:
rowInfoAtOrAfterTileRowIndex:outTileRowIndex:
rowInfoForTileRowIndex:
rowInfoFromArchive:
rowInfoWithTileRowIndex:wideOffsets:
rowInfos
rowInfosPerRow
rowIsShown:withHiddenStateExtent:withCalcEngine:
rowMarkIndex
rowNameForCellCoord:restrictToBodyRange:translator:cellRangeContainingName:
rowNameForCellID:restrictToBodyRange:
rowOrColumnIndices
rowOrColumnUuids
rowOrder
rowOrderChangedPrecedent
rowOrderChangedPrecedentIgnoringRecalc
rowRangeForUIDs:
rowRegion
rowRemainDup
rowStrokeExportCache
rowToStrokeHeightCache
rowUID
rowUIDForBaseRowIndex:
rowUIDForLookupKey:
rowUIDForRowIndex:
rowUIDForViewRowIndex:
rowUIDSetForCategoryLevel:
rowUIDsForBaseRowIndexes:
rowUIDsForImportedGroupingRows
rowUIDsForRowIndexes:
rowUIDsForRowRange:
rowUIDsForViewRowIndexes:
rowUIDsWithPendingGroupingChanges
rowUidsForGroupUids:
rowUidsForRowGroupUid:
rowUuids
rows
rowsForGroupValue:atLevel:
rowsInvalid
rowsVisible
ruleAtAbsoluteIndex:
ruleAtGroupLevel:
ruleAtIndex:
ruleByChangingBaseIndexTo:
ruleByChangingDirectionTo:
ruleByChangingSummaryColumnTo:
ruleCount
ruleInFilter:atIndex:
ruleWhereValuesInTable:inBaseColumn:matchCell:
ruleWithBaseIndex:direction:
ruleWithFormulaPredicate:
ruleWithGroupingColumnUID:columnUID:direction:
ruleWithViewIndex:direction:
rules
rulesDescription
runChange:withAggregates:
runChange:withSummaryCellMap:migrationHelper:
runChange:withSummaryChangeState:migrationHelper:
runningTotalGroupingColumnUid
rwlock
safeChildren
sageFormulaStringForContainingCell:outHasSageUnsupportedFunctions:
saturationComponent
saveAsEmbiggenedFormat
saveCellStylePropertiesToArchive:archiver:
saveCellStyleToArchive:archiver:
saveTableStylePropertiesToArchive:archiver:
saveToArchive:
saveToArchive:archiver:
saveToArchive:archiver:isInTheDocument:
saveToArchive:columnUids:rowUids:purpose:isRangeRef:preserveRectangularRange:
saveToArchive:tsuColumnUids:tsuRowUids:purpose:isRangeRef:preserveRectangularRange:
saveToCommandPropertyMapMessage:archiver:
saveToMessage:
saveToMessage:archiver:
saveToPropertyCommandMessage:archiver:
saveToStorageArchive:treeArchive:archiver:
sawMissingCombination:
scalarValueForEvalContext:permitAccessInsideMergeRegions:fetchRichTextAttributesIfPlainText:
scalarValueFromCoord:permitAccessInsideMergeRegions:fetchRichTextAttributesIfPlainText:
scaleInfoGeometry:
scaleIsValid
scaleToFit
scaleToFitParent
scaledLayout
scanCharactersFromSet:intoString:
scanInt:
scanLocation
scanUpToCharactersFromSet:intoString:
scannerWithString:
scheduleDetectAndRepairConsistencyViolations
scheduleRepairingSpanningFormulasInOwner:
searchCellStorageRefAtColumnIndex:searchMask:
searchFlags
searchForAnnotationsWithHitBlock:
searchMask
searchReferenceRange
searchSelectionBounds
second
secondsToAdd
selected
selection
selectionAdjustedForGeometryInTableInfo:
selectionAdjustedForVisibilityInTableInfo:
selectionAdjustedForVisibilityInTableInfo:alwaysCheckColumns:
selectionAtIndex:
selectionByAddingCellRange:inTable:withAnchor:cursor:selectionType:
selectionByExtendingWithCellRange:inTable:selectionType:cursorCell:
selectionByRemovingCellRange:inTable:withAnchor:cursor:selectionType:
selectionDragAbortedOnNewSelection
selectionExpandedToCoverCollapsedRows
selectionFromWPSelection:
selectionHighlightFrameFittingParentWidthForChildWithFrame:
selectionToBeginImplicitEditingInTableInfo:
selectionType
selectionUsesBezierPath
selectionWithParent:
selectionWithRange:
selectionWithTableInfo:cellID:
selectionWithTableInfo:cellRegion:
selectionWithTableInfo:columnIndices:
selectionWithTableInfo:rowIndices:
selectsCellOnInitialTap
selectsSingleControlCellWithInteractionUIInTable:
self
sendDeferredNotifictions:
sendRequestForKeys:
sendToDistributor:
serverReachability
setAbsoluteGroupUid:
setAccessController:
setActive:
setActiveTokenCharIndex:
setAfterCountValue:
setAfterMatch:
setAfterRewriteMap:
setAggNode:forFormulaCoord:
setAggrIndexLevel:
setAggregateFieldName:
setAggregateFormulaOwnerUID:
setAggregateFunction:
setAggregateIndex:
setAggregateIndexLevel:
setAggregateType:
setAggregateType:forColumnUID:atGroupLevel:
setAggregates:
setAlignment:
setAllowFreeformFormulaText:
setAllowHorizontalAutoresize:
setAllowSpanningColumnReferenceBodyQualifier:
setAllowTableName:
setAllowWhitespaceInFormulas:
setAllowsBlackDragDropBackground:
setAllowsFullyFilteredTables:
setAllowsMissingPropertiesWithNoParentStyleForUpgrade:
setAnchorCellUID:
setAngle:
setAnimationController:
setAnyReference:
setApplyingToTable:
setArchivedLayoutEngineBundle:
setArgIndex1:
setArgIndex2:
setArgIndex3:
setArgIndex:
setArgsAscending:
setArgumentAt:withPredArg:
setArgumentSpec:
setArrayOfChunkRocks:
setArrowKeyAtEdgeWhileEditingNavigates:
setArrowKeysNavigateWhenEditingBeganByTyping:
setArrowKeysWrap:
setAsAbsoluteWithGroupUid:
setAsRelativeWithGroupUid:
setAttachmentErrorRaisedInTextCell:
setAttribute:
setAuthor:
setAutofillSelection:
setAuxRowColumnInfo:
setBackTabWraps:
setBadgeType:
setBandedFillIsValid:
setBandedFillObject:
setBaseCellRef:preserveColumn:preserveRow:
setBaseCellRef:preserveFlags:
setBaseCellReference:
setBaseCellReference:preserveColumn:preserveRow:
setBaseCellUIDRegion:
setBaseFormatID:
setBasePreserveFlags:
setBaseRangeRef:preserveFlags:
setBaseRow:
setBaseRowIndex:
setBaseTableModel:
setBaseTableUID:
setBaseTile:
setBaseTileRange:
setBaseTractRef:
setBeforeColumnRowUIDMap:
setBeforeCountValue:
setBeforeRewriteMap:
setBezierPathCache:
setBlank:
setBodyCellStyle:
setBodyColumnCoordinates:
setBodyGroupingList:
setBodyRowCoordinates:
setBodySideBorderColumnRange:
setBodyTextStyle:
setBoolValue:
setBoolValue:forProperty:
setBooleanFormatID:
setBordersWithCellMap:
setBordersWithConcurrentCellMap:forTableInfo:
setBottomBorderRowRange:
setBottomStroke:order:
setBottomStrokeLayer:
setBoundingCellRange:
setBoxedObject:forProperty:
setBoxedValue:forProperty:
setByAddingObjectsFromArray:
setByAddingObjectsFromSet:
setByIntersectingWithSet:
setByIntersectingWithSymbolsOfSet:
setByRemovingSpecifiersWithSymbols:
setByUnionWithSet:
setCGFloatValue:forProperty:
setCacheIsValid:
setCachedAlignedFrame:
setCachedAlignedStrokeFrame:
setCachedAllAnnotations:
setCachedAutoSizeFlags:
setCachedAutosizedFrame:
setCachedBaseRegion:
setCachedBaseRegionVersionCounter:
setCachedCellID:
setCachedCellRegion:
setCachedCellRegionVersionCounter:
setCachedCellStyle:
setCachedCellWraps:
setCachedColumnUIDs:
setCachedImageScreenScale:
setCachedIndexSetsAreValid:
setCachedIndexes:
setCachedIndexesForLabelRows:
setCachedIndexesForLeadingColumns:
setCachedIndexesForLeadingSummaryRows:
setCachedIndexesForSummaryAndLabelRows:
setCachedIndexesForSummaryColumns:
setCachedIndexesUnfairLock:
setCachedIsValidReference:
setCachedLabelRowIndexesAtLevels:
setCachedLeadingColumnIndexesAtLevels:
setCachedLeadingRowIndexesAtLevels:
setCachedLeadingSummaryColumnIndexesAtLevels:
setCachedLeadingSummaryRowIndexesAtLevels:
setCachedMaskRect:
setCachedMaskSpillRange:
setCachedMaxNumberOfColumns:
setCachedMaxNumberOfRows:
setCachedMergeRange:
setCachedNumberOfColumns:
setCachedNumberOfFooterOrGrandTotalRows:
setCachedNumberOfFooterRows:
setCachedNumberOfGrandTotalColumns:
setCachedNumberOfHeaderRows:
setCachedNumberOfRows:
setCachedPadding:
setCachedParagraphAlignment:
setCachedPivotIndexSetsAreValid:
setCachedRowUIDs:
setCachedSegment:
setCachedStrokeFrame:
setCachedSummaryColumnIndexesAtLevels:
setCachedSummaryRowIndexesAtLevels:
setCachedTableNameHeight:
setCachedTextStyle:
setCachedValueWasFetchedWithRichTextAttributes:
setCachedVerticalAlignment:
setCalcEngine:
setCalcEngineRegistrationObject:
setCalculationEngine:
setCanvasReferenceProvider:
setCaption:
setCategoryColumnWidth:
setCategoryLevel1CellStyle:
setCategoryLevel1TextStyle:
setCategoryLevel2CellStyle:
setCategoryLevel2TextStyle:
setCategoryLevel3CellStyle:
setCategoryLevel3TextStyle:
setCategoryLevel4CellStyle:
setCategoryLevel4TextStyle:
setCategoryLevel5CellStyle:
setCategoryLevel5TextStyle:
setCategoryOrder:
setCategoryOwner:
setCell:
setCell:atBaseCellCoord:ignoreFormula:clearImportWarnings:
setCell:atBaseCellCoord:ignoreFormula:clearImportWarnings:calcEngine:
setCell:atCellCoord:
setCell:atCellID:
setCell:atCellID:tableUID:calculationEngine:conditionalStyleOwner:ignoreFormula:clearImportWarnings:
setCell:atCellID:tableUID:calculationEngine:conditionalStyleOwner:ignoreFormula:clearImportWarnings:doRichTextDOLC:
setCell:atCellUID:
setCell:atCellUID:formulaReplacer:
setCell:atCellUID:ignoreFormula:clearImportWarnings:
setCell:atCellUID:ignoreFormula:clearImportWarnings:formulaReplacer:
setCell:atColumnIndex:tileRowIndex:
setCell:atIndex:
setCellBorder:
setCellBorder:atCellID:
setCellContents:
setCellCount:
setCellCountValid:
setCellData:
setCellDiffArray:
setCellDragController:
setCellEditingMaskLayers:
setCellEditorsCanScrollToNonLocalTableSelection:
setCellFlags:
setCellID:
setCellIDToWPColumnCache:
setCellLists:
setCellMap:
setCellMap:tableUID:calculationEngine:conditionalStyleOwner:ignoreFormulas:skipDirtyingNonFormulaCells:doRichTextDOLC:
setCellPropsRowHeight:
setCellRange:
setCellRange:atIndex:
setCellRangeVisibleRect:
setCellRegion:
setCellRegionForClearedMergeStrokes:
setCellSpec:
setCellSpec:clearingID:
setCellSpecRepairingFormats:
setCellStyle:
setCellStyle:atIndex:
setCellStyle:clearingID:
setCellStyle:ofColumnAtIndex:
setCellStyle:ofColumnAtUID:
setCellStyle:ofRowAtIndex:
setCellStyle:ofRowAtUID:
setCellStyle:textStyle:
setCellStyleHandle:clearingID:
setCellStyleHandles:
setCellUID:
setCellUIDRange:
setCellUIDRegion:
setCellUIDs:
setCellWraps:
setCellsConcurrently:ignoreFormula:clearImportWarnings:formulaReplacer:
setCellsConcurrently:tableUID:calculationEngine:conditionalStyleOwner:ignoreFormula:clearImportWarnings:
setCellsPerSubRegion:
setCellsWithBaseCellMap:ignoreFormulas:skipDirtyingNonFormulaCells:
setChangeDescriptor:
setChangeDescriptors:
setChangeNotifier:
setChangeType:
setCharacterStyle:range:undoTransaction:
setCharactersToBeSkipped:
setChildren:
setChromeCoordsAreViewCoords:
setChromeRangeRef:
setChromeRangeRef:preserveFlags:
setChromeTractRef:
setClampingRect:
setCleanCellDependencyRows:
setClearedMajorStrokeLayer:
setClearedMinorStrokeLayer:
setClearedStrokeForGridColumn:beginRow:endRow:
setClearedStrokeForGridRow:beginColumn:endColumn:
setClearedStrokeLayer:
setColor:
setColumnGroupLevel:
setColumnGroupUID:asCollapsed:
setColumnHeaderStorage:
setColumnIndexesInRow:
setColumnOrRowIndex:
setColumnOrderReversed:
setColumnRegion:
setColumnRemainDup:
setColumnRowUIDMap:
setColumnStrokeExportCache:
setColumnToStrokeWidthCache:
setColumnUID:
setColumnUid:
setColumnWidths:
setColumns:
setColumnsInvalid:
setColumnsVisible:
setCommentStorage:
setCommentStorage:atBaseCellCoord:
setCommentStorage:atCellUID:
setCommentStorage:clearingID:
setCommentStorageID:
setCommentStorageTableReference:
setCompletionText:
setComponents:
setCompressedColumnIndexes:
setConditionalStyle:
setConditionalStyleFormulaOwner:
setConditionalStyleID:
setConditionalStyleOwnerUID:
setConditionalStyleSetTableReference:
setConfidence:
setContainedTextEditingLayout:
setContainsCellBorderChanges:
setContainsSuppressCustomFormatHandlingProperty:
setContentIterator:
setContentReadingThreads:
setContentWritingDirection:
setContextSheetName:
setContextTableResolver:
setContinuesEditingAfterNavigation:
setControlCellSelection:
setControlCellSpecID:
setControlCellSpecTableReference:
setControlCellUIAlwaysVisible:
setControlFormatID:
setCornersCanDragResize:
setCount:
setCppCalcEngine:
setCppCellTractRef:
setCreateLargeDefaultTables:
setCurCellID:
setCurRow:
setCurTile:
setCurTileRange:
setCurrencyDecimalValue:
setCurrencyDecimalValue:roundToDoublePrecision:
setCurrencyDoubleValue:
setCurrencyFormatID:
setCurrencyOrNumberDecimalValue:
setCurrentDate:timeZone:markVolatilesDirty:
setCurrentFormat:flags:
setCurrentFormat:isExplicit:
setCurrentFormat:isExplicit:forExcel:
setCurrentFormatID:
setCurrentScreenScale:
setCurrentTableIdRemapper:
setCurrentTimeZone:
setCursorCellIDs:
setCursorCellUID:
setCustomFormatID:
setCustomOrderedStrokeLayer:
setCustomStrokeLayer:
setCustomUnorderedStrokeLayer:
setData:
setDataStore:
setDataStoreIterator:
setDate:
setDateAccumulator:
setDateAsTimeInterval:
setDateFormat:
setDateFormatID:
setDateValue:
setDefaultColumnWidth:
setDefaultFormatForValue
setDefaultMajorStrokeLayer:
setDefaultMinorStrokeLayer:
setDefaultRowHeight:
setDefaultStrokeLayer:
setDelegate:
setDependencyTracker:
setDependentsList:
setDeprecatedMessageType:
setDeprecatedProvider:
setDimensions:
setDirection:
setDirtyCellDependencyRows:
setDirtyCellRange:
setDirtyCellRegionGatherer:
setDirtyPrecedentCount:
setDirtyStrokeRange:
setDirtyingInProgress:
setDisableImplicitNaming:
setDisallowHeaderIndexingForTableUID:
setDoFullRefresh:
setDocumentIsClosing:
setDocumentRandomSeed:
setDoesNotNeedFormulaRewriteForImport
setDoesNotNeedFormulaRewriteForImport:
setDontClearBackground:
setDowngradedForPrePivot:
setDragAndDropDetails:
setDragByHandleOnly:
setDrawBlackAndWhite:
setDrawPreventAntialias:
setDrawableIsBeingCopied:
setDrawsBlackAndWhite:
setDupContentCache:
setDurationFormat:
setDurationFormatID:
setDurationInterval:
setDurationTimeIntervalValue:
setDurationUnits:
setDurationValue:
setDuringRollback:
setDynamicAddOrRemoveColumnElementSize:
setDynamicAddOrRemoveRowElementSize:
setDynamicBandedFill:
setDynamicBandedFillSetting:
setDynamicCellFillDelegate:
setDynamicColumnAdjustment:
setDynamicColumnTabSize:
setDynamicContentDelegate:
setDynamicFontColor:
setDynamicFontColorCellRange:
setDynamicHeightResize:
setDynamicHidingContent:
setDynamicHidingRowsCols:
setDynamicHidingRowsColsDirection:
setDynamicHidingText:
setDynamicInfoGeometry:
setDynamicLayout:
setDynamicLayoutParticipants:
setDynamicOrderedStrokeLayer:
setDynamicRemovingText:
setDynamicRepResize:
setDynamicRepResizeSessionInProgress:
setDynamicRepressFrozenHeaderColumns:
setDynamicRepressFrozenHeaderRows:
setDynamicResizeInfo:
setDynamicResizingColumnAdjustment:
setDynamicResizingColumnRange:
setDynamicResizingColumns:
setDynamicResizingRowAdjustment:
setDynamicResizingRowRange:
setDynamicResizingRows:
setDynamicRevealingRowsCols:
setDynamicRevealingRowsColsDirection:
setDynamicRowAdjustment:
setDynamicRowTabSize:
setDynamicSavedLayoutGeometry:
setDynamicSelection:
setDynamicStrokeLayer:
setDynamicSuppressingConditionalStylesCellID:
setDynamicTableNameResize:
setDynamicWidthResize:
setEarlyRefreshRequested:
setEditingCellIDForInvalidation:
setEditingReferenceNode:
setEffectiveSize:
setEmpty:
setEmptyCellCount:
setEmptyFilteredTable:
setEmptyValueAtCoord:
setEntry:forPrecedentCoord:
setEqualityPermitted:
setError:forCell:
setErrorType:
setEstimatedByteSize:
setEvaluationContext:
setExpandBackgroundFill:
setExpandDirtyRegionForReferences:
setExplicitFormatFlags:
setExportPermanentHidingState:
setExportsCellAnnotations:
setExportsCellComments:
setExpressionNode:
setExpressionTree:
setExteriorStroke:
setExteriorTextWrap:
setExtraInfoNumber:
setExtraInfoString:
setFilterColons:
setFilterSet:
setFilterSetForColumns:
setFilterSetForRows:
setFilterSetType:
setFinalDstTableUID:
setFinalTopRowIndex:
setFirst:
setFirstFragment:
setFirstIndex:
setFirstPartitionWidth:
setFitHeight:forCellID:
setFittingHeightsFromCollection:
setFittingHeightsFromCollectionArray:
setFixedColumnWidthStack:
setFixupFormulas:
setFlags:
setFloatValue:forProperty:
setFollowsLinksOnFirstTap:
setFontInfoCache:
setFooterColumnSeparatorColumnRange:
setFooterRowCellStyle:
setFooterRowSeparatorRowRange:
setFooterRowTextStyle:
setForConditionalStyle:
setForDrawing:
setForFormulaPlainText:
setForceEscaping:
setForceSheetName:
setForceSplitting:
setForceTableName:
setForceZoomInOnBeginEditing:
setForcingRegion:
setFormat:
setFormat:isExplicit:
setFormatID:forStorageFlag:
setFormatString:
setFormatTableReference:
setFormats:
setFormatsAdded:
setFormatsRemoved:
setFormula:
setFormula:clearingID:
setFormulaCoord:
setFormulaCoordSpace:
setFormulaEditorEvaluatesFormulas:
setFormulaErrorTableReference:
setFormulaID:
setFormulaObject:
setFormulaObject:atIndex:
setFormulaObject:atIndex:formulaReplacer:
setFormulaObject:clearingID:
setFormulaOwner:
setFormulaOwnerUID:
setFormulaOwnerUIDsWithMap:
setFormulaOwnerUIDsWithMap:shouldStealReferences:
setFormulaResultCellsWithCellMap:
setFormulaStore:
setFormulaSyntaxError:
setFormulaSyntaxError:clearingID:
setFormulaSyntaxErrorID:
setFormulaTableReference:
setFormulasForUndo:
setFoundANumber:
setFourth:
setFrame:
setFromGroupByUID:
setFromTableCoordMapperForPasteboard:
setFromTableUID:
setFrozenHeaderColumnsSpace:
setFrozenHeaderCornerSpace:
setFrozenHeaderRowsSpace:
setFunctionEndNode:
setFunctionIndex:
setFunctionName:
setFunctionNode:
setFunctorForType
setGeometry:
setGridRange:
setGroupBy:
setGroupByChange:
setGroupBySet:
setGroupByUID:
setGroupByUid:
setGroupLevel:
setGroupNode:
setGroupNodeUIDInfo:
setGroupSortOrder:
setGroupUID:asCollapsed:
setGroupingColumnList:
setGroupingColumnUID:
setHasCachedIsValidReference:
setHasContent:
setHasContentIsCached:
setHasCustomFormatsToPaste:
setHasInterestingKeys:
setHasLargerFonts:
setHasPreserveFlag:
setHasReference:
setHasVisibleWarnings:
setHeaderColumnCellStyle:
setHeaderColumnRowCoordinates:
setHeaderColumnSeparatorColumnRange:
setHeaderColumnTextStyle:
setHeaderColumnsFrozen:
setHeaderColumnsRepeat:
setHeaderRowCellStyle:
setHeaderRowColumnCoordinates:
setHeaderRowSeparatorRowRange:
setHeaderRowTextStyle:
setHeaderRowsFrozen:
setHeaderRowsRepeat:
setHeadersFrozenByDefault:
setHeight:forTextStyle:
setHeight:ofRow:
setHeight:ofRowAtIndex:
setHidden:
setHidden:atIndex:
setHidden:atIndexes:
setHidden:inRange:
setHiddenRowsColumnsCache:
setHiddenStateExtentUid:
setHiddenStateOwnerForColumnsUID:
setHiddenStateOwnerForRowsUID:
setHiddenStates:
setHiddenStatesOwner:
setHiddenStatesUid:
setHideStepperHUD:
setHidingGrandTotalColumns:
setHidingGrandTotalRows:
setHidingState:atColumnIndex:
setHidingState:atIndex:
setHidingState:atRowIndex:
setHidingState:ofRowAtIndex:
setHint:
setHintMatricesByCanvas:
setHorizontal:
setHorizontalStroke:
setHostCell:hostColumnUID:hostRowUID:
setHostCellCoord:
setHostTableUID:
setHotData:
setHour:
setHyperlinkCellID:
setIdOfFirstOccurence:
setIdentifier:
setIgnoreAndPreserveUntilModifiedRuleForField:message:
setIgnoreAndPreserveUntilModifiedRuleForFieldPath:message:
setIgnored:
setImportDate:
setImportSettings:
setImportSource:
setImportWarningSet:
setImportWarningSetID:
setImportWarningSetTableReference:
setImportedRegion:
setInDynamicLayout:
setInDynamicLayoutMode:
setInInvalidate:
setIncludesPrefixes:
setIndex:
setInfoGeometry:
setInitialWhitespace:
setInsertOppositeUid:
setInsertionCenterPosition:
setInset:
setInt:forKey:
setIntValue:forProperty:
setInteractionTypeFromTheFuture:
setInterestingCells:
setInternalOwnerID:
setInternetReachability:
setIntersectingRowsIndexSet:
setInvalidColumnIndex:
setInvalidFunctionName:
setInvalidReferenceToMerge:
setInvalidRowIndex:
setInvalidTableOffset:
setInvalidateAllChrome:
setInvalidateAllChromeCaches:
setInvalidateColumnChrome:
setInvalidateKnobs:
setInvalidateRowChrome:
setInvalidateSelection:
setInvalidateTableName:
setInvalidatedForEditingCell:
setInverseMergeActions:
setIsAPivotDataModel:
setIsBlank:
setIsCategoryEnabled:
setIsCircularReference:
setIsColumnOrderTemporary:
setIsCopyContainingCategoryColumn:
setIsDynamicallyChangingContent:
setIsDynamicallyChangingRowOrColumnCount:
setIsDynamicallyRemovingText:
setIsEnabled:
setIsFormula:
setIsGrouped:
setIsInCycle:
setIsInverse:
setIsLabelRow:
setIsNewForBraveNewCell:
setIsRangeRef:
setIsRegisteredWithCalcEngine:
setIsRowOrderTemporary:
setIsSummaryRow:
setIsValid:
setIteratorToRow:
setIterators:
setKeepObjectInMemory:
setKeyRange:
setKeyVal:
setKeys:
setLabelLevel1CellStyle:
setLabelLevel1TextStyle:
setLabelLevel2CellStyle:
setLabelLevel2TextStyle:
setLabelLevel3CellStyle:
setLabelLevel3TextStyle:
setLabelLevel4CellStyle:
setLabelLevel4TextStyle:
setLabelLevel5CellStyle:
setLabelLevel5TextStyle:
setLabelRowHeight:atCategoryLevel:
setLabelRowVisibility:atCategoryLevel:
setLanguage:forCharRange:undoTransaction:
setLastCellID:
setLastCellRangeAdded:
setLastColumnDiffPos:
setLastFragment:
setLastFullRefreshDate:
setLastIndex:
setLastRequestDate:
setLastRowDiffPos:
setLastSavedInBNC:
setLayout:
setLayoutCacheFlags:
setLayoutCellData:
setLayoutConcurrentQueue:
setLayoutDirectionIsLeftToRight:
setLayoutEngine:
setLayoutHint:
setLayoutInvalidate:
setLayoutInvalidateChildren:
setLayoutInvalidateProvider:
setLayoutInvalidateSize:
setLayoutInvalidateTableNameVisibility:
setLayoutMeasureQueue:
setLayoutMergeRange:
setLayoutPartititionsRightToLeft:contentPartitionsRightToLeft:
setLayoutResetScaleToFit:
setLayoutSpacesInvalidateCoordinates:
setLayoutSpacesInvalidateCoordinatesAfterRow:
setLayoutSpacesInvalidateTableOffsets:
setLayoutUpdateChildren:
setLayoutValidateQueue:
setLazyReferencesAreLoaded:
setLeftStroke:order:
setListType:
setLoadFromFileVersion:
setLocalOwnerID:
setLocale:
setLocaleSpecificStorage:forKey:
setLocalizedBlankGroupName:
setLocalizedDateFormatFromTemplate:
setLocalizedErrorGroupName:
setLocalizedFalseGroupName:
setLocalizedFalseGroupNameForColumn:
setLocalizedTrueGroupName:
setLocalizedTrueGroupNameForColumn:
setLogToken:
setLowerBound:
setLowerBoundInclusive:
setMajorStrokeLayer:
setMajorStrokeLayerToken:
setMask:
setMatcher:
setMatchesFound:
setMatchesObjectPlaceholderGeometry:
setMaxArgsAllowed:
setMaxConcurrentTasks:
setMaxNumberOfColumns:
setMaxNumberOfPopulatedCells:
setMaxNumberOfRows:
setMaxOrder:
setMaxSize:
setMaxWidthForChildren:
setMayModifyFormulasInCells:
setMayModifyValuesReferencedByFormulas:
setMergeActions:
setMergeCacheLoaded:
setMergeChangeDistributor:
setMergeFormulaIndexes:
setMergeFormulas:
setMergeInfo:
setMergeOriginMovedInfo:
setMergeRange:
setMergeRangeCache:
setMergeRangesForLayoutPass:
setMergedCellRanges:
setMergedStrokes:
setMessageType:messagePrototype:descriptor:unarchiveClassname:
setMessageVersion:
setMetadata:
setMightOverlap:
setMigratingStylesOnly:
setMinCursorCellID:
setMinFractionDigits:maxFractionDigits:
setMinSize:
setMinion:
setMinorStrokeLayer:
setMinorStrokeLayerToken:
setMinute:
setMissingDataFieldAtIndex:
setMissingPostBNCDatalists:
setMixedColumnStartedWithPreserve:
setMixedDurationsAndNumbers:
setMode:
setModelHeight:forRow:
setModelIteratorData:
setModelIteratorHasCell:
setModelWidth:forColumn:
setMonth:
setMultipleChoiceListFormatID:
setNRM_formulaOwnerUID:
setName:
setNamesUsed:
setNeedWPColumn:
setNeedsDisplayInRect:
setNeedsFilterFormulaRewriteForImport:
setNeedsFormulaReset:
setNeedsFormulaRewriteForImport:
setNeedsRebuildOfAggFormulas:
setNeedsSubOwnerIDUpgrade:
setNeedsToBeArchived:
setNeedsToUpdateFilterSetForImport:
setNeedsUidRectUpgrade:
setNeverShowsMenu:
setNewCanvasRevealedHorizontally:
setNextCategoryAggregatesOwnerUID:
setNextCategoryOwnerUID:
setNextConditionalStyleOwnerUID:
setNextGroupByUID:
setNextHiddenStateForColumnsOwnerUID:
setNextHiddenStateForRowsOwnerUID:
setNextID:
setNextMergeOwnerUID:
setNextPencilAnnotationOwnerUID:
setNextSortRuleReferenceTrackerOwnerUID:
setNextTableUID:
setNonWhitespaceAndNewlineCharSet:
setNotifyType:
setNumCellsPerTask:
setNumDirtyCells:
setNumber:
setNumber:withLocale:
setNumberDecimalValue:
setNumberDecimalValue:roundToDoublePrecision:
setNumberDoubleValue:
setNumberFormatID:
setNumberOfColumns:
setNumberOfFooterRows:
setNumberOfHeaderColumns:
setNumberOfHeaderRows:
setNumberOfLayoutColumns:
setNumberOfRows:
setObject:atIndexedSubscript:
setObject:forKey:
setObject:forKeyedSubscript:
setObject:forProperty:
setObject:forUncopiedKey:
setObjectType:
setOccurrence:
setOfSpecifiersContainedInSet:
setOfSpecifiersNotContainedInSet:
setOfSpecifiersPassingTest:
setOfSpecifiersWithDate:
setOfSpecifiersWithSymbol:
setOffline:
setOffset:
setOperatorChar:
setOptions:
setOrder:
setOrder:forDimension:
setOrderUsingViewOrderForDimension:
setOriginalSrcRegion:
setOverrideLayoutHint:
setOverrideText:
setOverrideTextAsTyped:
setOwnerIndex:
setOwnerKind:
setOwnerName:
setOwnerUID:
setOwnerUIDForLegacyGlobalID:ownerUID:
setOwningAttachment:
setPaddingInsets:
setPageCount:
setPageNumber:
setParaStyleToHeightCache:
setParagraphStyle:forCharRange:undoTransaction:
setParagraphWritingDirection:forCharRange:undoTransaction:
setParent:
setParentInfo:
setParentNode:
setParseAsBaseTableReference:
setPartitionPosition:
setPartitioningPass:
setPartitioningPassCache:
setPasteFilterHidingAsUserHiding:
setPasteInverseCommands:
setPasteType:
setPasteWasUpdate:
setPastesTile:
setPayload:
setPivotBodySummaryColumnCellStyle:
setPivotBodySummaryRowCellStyle:
setPivotCachedIndexesUnfairLock:
setPivotDataRefreshTimestamp:
setPivotDataRefreshUID:
setPivotHeaderColumnSummaryCellStyle:
setPivotInfo:
setPivotOptions:forUid:
setPivotOptions:groupingColumnUid:forSortingOptions:redoSort:
setPivotRulesWithPivotDataTable:columnGroupings:rowGroupings:aggregates:flatteningDimension:
setPivotSourceBodyTract:
setPivotSourceBodyUidTract:
setPivotSourceHeaderTract:
setPivotSourceTableName:
setPivotSourceTableUID:
setPivotTableUID:
setPopulatedColumnsForGroupLevel1:
setPopulatedColumnsForGroupLevel2:
setPopulatedColumnsForGroupLevel3:
setPopulatedColumnsForGroupLevel4:
setPopulatedColumnsForGroupLevel5:
setPopulatedCustomFormat:
setPopupModel:
setPosition:
setPreBNCFormatTableReference:
setPrePivotRowFilterSet:
setPrecedentsList:
setPredArg0:
setPredArg1:
setPredArg2:
setPredicate:
setPreserveFlags:
setPreserveFlagsOnSubrange:
setPreserveRectangular:
setPreserveRectangularRange:
setPresetID:
setPresetIDForUpgrade:
setPresetNeedsStrongOwnership:
setPresets:
setPresets:ofKind:
setPrevEditingSpillingTextRange:
setPreviousLevel:
setPreviousMatch:
setPreviousValueIsRegex:
setPrimitiveGeometry:
setProblemExpressionString:
setProblemNodeIsCellReference:
setProcessChangesFiltering:
setProcessHiddenRowsForExport:
setProcessedByLayoutEngine:
setPropertiesFromMap:
setPropertyMapToReset:
setPropertyMapToSet:
setPropertyMapToTextStyleMap:
setProvidedArgs:
setProvidedValueTypeBeforeUpgrade
setPurpose:
setQueriedModel:
setQuoteComponents:
setRange:
setRangeContext:
setRangeWithFunction:
setRank:
setRatingsDragCellID:
setRawString:
setReachabilityUpdatedBlock:
setRefPathSplitter:
setReference:forTileID:
setReferenceArray:
setReferenceColor:
setReferenceColorHelper:
setReferenceEndCellInvalid:
setReferenceIdentifiers:
setReferenceIsComplete:
setReferencesMatchingInputAsPrefix:
setRegion:
setRegionIterator:
setRegionMovedInfo:
setRegisteredWithCoordinator:
setRelativeCellRef:
setRelativeColumn:
setRelativeColumns:
setRelativeGroupUid:
setRelativeRows:
setRemoteDataStore:
setRemoteDataSyncKey:
setReorganizeValue:atIndex:
setReorganizeValues:
setReoriginToZero:
setRepairOrReplaceMap:
setRepeatHeaderColumnsSpace:
setRepeatHeaderCornerSpace:
setRepeatHeaderRowsSpace:
setRepeatingHeaderColumnsEnabled:
setRepeatingHeaderRowsEnabled:
setRepositionStockPopover:
setRequestsInFlight:
setRest:
setReturnEmptyCells:
setReturnMergeRanges:
setReturnOneEmptyCell:
setReturnOnlyFormulas:
setRewriteSpecBaseToChrome:
setRewriteSpecChromeToBase:
setRewritingMinion:
setRichTextID:
setRichTextParentInfo:
setRichTextTableReference:
setRichTextValue:
setRichTextValue:clearingID:convertToPlaintextIfPossible:
setRichTextValueWithoutPlaintextCollapse:
setRightStroke:order:
setRowColumnInfo:
setRowForColumnIndexesWithMerges:
setRowGroupLevel:
setRowGroupUID:asCollapsed:
setRowHeaderStorage:
setRowHeights:
setRowIndex:
setRowInfos:
setRowInfosPerRow:
setRowMarkIndex:
setRowOrder:
setRowOrderUsingViewOrder
setRowRegion:
setRowRemainDup:
setRowStrokeExportCache:
setRowToStrokeHeightCache:
setRowUID:
setRowUIDsForImportedGroupingRows:
setRowUIDsWithPendingGroupingChanges:
setRows:
setRowsUserVisible:
setRules:
setRwlock:
setSaveAsEmbiggenedFormat:
setScaleToFit:
setScaledLayout:
setSearchMask:
setSearchReferenceRange:
setSearchSelectionBounds:
setSecond:
setSecondsToAdd:
setSelected:
setSelection:
setSelectionDragAbortedOnNewSelection:
setSelectionUsesBezierPath:
setSelectsCellOnInitialTap:
setServerReachability:
setSetNeedsDisplay:
setSheetName:
setSheetNameUnquoted:
setShouldCleanGraphForConsistencyViolation:
setShouldFastPathMeasureFitWidth:
setShouldPerformDetectAndRepairConsistencyViolations:
setShouldRepositionStockPopover:
setShouldSkipNextAsyncSort:
setShouldUseWideRows:
setShouldZoomOutOnEndEditing:
setShowAggregateName:
setShowAsType:
setShowCleanCells:
setShowGeometricAsBase:
setShowReferenceHighlightsOnFormulaCellSelection:
setShowsCellEditingToolbar:
setShowsCellOverflowIndicator:
setShowsCellWarningIndicator:
setShowsHideUnhideUI:
setShowsOverlayLayers:
setShowsSelectionKnobsWhileEditingCell:
setShowsTableChrome:
setShuffleMap:
setShuffleMapping:
setSize:atIndex:
setSizeOfText:
setSortOrder:
setSourceCellRange:
setSourceColumnCount:
setSourceData:
setSourceEncoding:
setSourceRowCount:
setSpace:
setSpanningColumns:
setSpanningRows:
setSpansAllColumns:
setSpansAllRows:
setSpareFormat:isExplicit:
setSpillMajorStrokeLayer:
setSpillMinorStrokeLayer:
setSpillStrokeColumns:
setSpillStrokeLayer:
setSrcCoordMapper:
setStage:andFinal:
setStartingTileID:
setState:
setStorage:
setStorageParentToInfo:
setStorageVersionPreBNC:
setString:
setStringID:
setStringTableReference:
setStringValue:atUidCoord:
setStringValue:clearingID:
setStringValue:clearingID:shouldWrap:
setStrings:
setStroke:
setStroke:forBottomOfRow:order:columnRange:
setStroke:forLeftOfColumn:order:
setStroke:forLeftOfColumn:order:rowRange:
setStroke:forPresetIndex:
setStroke:forRightOfColumn:order:
setStroke:forRightOfColumn:order:rowRange:
setStroke:forTopOfRow:order:
setStroke:forTopOfRow:order:columnRange:
setStroke:inRange:order:
setStrokeIterator:
setStrokeLayer:forBottomOfRow:
setStrokeLayer:forRightOfColumn:
setStrokeLayer:forTopOfRow:
setStrokePreset:atIndex:
setStrokeProvider:
setStrokeRegion:
setStrokeSidecar:
setStrokeSpillForRightGridColumn:leftGridColumn:inRow:
setStrokeTypeToLayerMap:
setStrokeTypeToLayerStackMap:
setStrokesDefaultVendor:
setStrongReference:message:
setStrongReferenceArray:message:
setStrongReferences:
setStructuredTextImportConfidenceThreshold:
setStructuredTextImportConfidenceThresholdForCanvas:
setStructuredTextImportSizeLimit:
setStyle:
setStyleApplyClearsAll:
setStyleCount:
setStyleNetwork:
setStyleProviderStack:
setStyleProvidingSource:
setStyleTableReference:
setStylesheet:
setStylesheetForUpgradeToSingleStylesheet:
setSummaryModel:
setSummaryRowHeight:atCategoryLevel:
setSupportsActionMenu:
setSupportsAddBodyRowAtBottomSiriKitIntent:
setSupportsAutoResizedTables:
setSupportsAutofill:
setSupportsAutomaticNumberKeyboard:
setSupportsBidiTablesUI:
setSupportsCanvasReferenceEditing:
setSupportsCategorization:
setSupportsCellCommentsActivityLines:
setSupportsContainedTextEditing:
setSupportsControlCells:
setSupportsCopySnapshot:
setSupportsCreateChartFromSelection:
setSupportsDragDropMoveMode:
setSupportsDynamicallyHidingRowColumnForDragDrop:
setSupportsFormulaEditing:
setSupportsFrozenHeaders:
setSupportsHiddenCells:
setSupportsImplicitEditing:
setSupportsInlineAttachments:
setSupportsMergedCells:
setSupportsPivotTables:
setSupportsQuickFilterUI:
setSupportsRepeatHeaderRowsOnEachPage:
setSupportsRowColumnAdderKnob:
setSupportsRowMovesInPaginatedTables:
setSupportsStockUI:
setSupportsTableColumnAutocomplete:
setSupportsTableTranspose:
setSupportsiOSContextMenuItemForEvenlyDistributedColumns:
setSupportsiOSContextMenuItemForEvenlyDistributedRows:
setSupportsiOSContextMenuItemForWrappedText:
setSuppressIdenticalEndReference:
setSuspendNotify:
setSymbol:
setTabAtEdgeAddsColumn:
setTabAtEdgeAddsRow:
setTabWhileEditingNavigates:
setTable:
setTableDefaultFontHeightsAreValid:
setTableEnvironment:
setTableHasStrongOwnership:
setTableInfo:
setTableInfoForGSSP:
setTableIsLTR:
setTableModel:
setTableModelDuringUnarchive:
setTableName:
setTableNameBorderEnabled:
setTableNameBounds:
setTableNameEditingStorage:
setTableNameEnabled:
setTableNameHeight:
setTableNameHeightValid:
setTableNameSelection:
setTableNameShapeStyle:
setTableNameStyle:
setTableNameUnquoted:
setTableNameValid:
setTableProvider:
setTableRange:bodyRange:forTableUID:
setTableRepIsBeingRemovedFromBackgroundLayout:
setTableRowsBehavior:
setTableStyle:
setTableStylePreset:
setTableTranslatorBaseMapForPasteboard:
setTableTranslatorViewMapForPasteboard:
setTableUID:
setTableUIDInfo:
setTableWidthForRightToLeft:
setTargetCellRange:
setTempUpgradePresetID:
setTempWPColumnCache:
setTemporaryRowOrder:
setTerminateRegionIterator:
setTerminated:
setTextColorOverride:
setTextFormatID:
setTextImportRecord:
setTextMeasurerBundle:
setTextStyle:
setTextStyle:atIndex:
setTextStyle:clearingID:
setTextStyle:ofColumnAtIndex:
setTextStyle:ofColumnAtUID:
setTextStyle:ofRowAtIndex:
setTextStyle:ofRowAtUID:
setTextStyleHandle:
setTextStyleHandle:clearingID:
setTextStyleHandles:
setTextStyleReferences:
setTextStyleToFontHeight:
setTextureOpacity:
setThird:
setThresholdCellValues:
setTileRowIndex:
setTimeZone:
setTimer:
setToIdentityMapping
setToUpgradeMapping
setTokenAttachment:
setTokenizeFormulaStringLiterals:
setTopBorderRowRange:
setTopLeft:
setTopStroke:order:
setTopStrokeLayer:
setTract:
setTrailingWhitespace:
setTransform:
setTransformFromCanvas:
setTransformFromDevice:
setTransformToCanvas:
setTransformToDevice:
setTranslator:
setTransposedBodyRange:
setTransposedInfo:
setTrimNames:
setType:
setUidBased:
setUidMap:
setUidRanges:
setUidTractList:
setUnSyncedStocks:
setUniqueValueToRowIndexes:
setUniqueValueToRowUids:
setUnitName:
setUpdateEditorRemainders:
setUpdatedLevel:
setUpgradeMessageType:messagePrototype:unarchiveClassname:
setUpgrading:
setUpgradingToSubOwnerUIDs:
setUpperBound:
setUpperBoundInclusive:
setUseBandedFill:
setUseSymbolicNames:
setUseWholeTableForInsertionDependencies:
setUsedSymbolicName:
setUserHidden:
setUserSpaceToDeviceSpaceTransform:
setUsesLimitedAutomaticFormatParsing:
setUsesLimitedNumberFormatInspector:
setUsesOnlyFixedCoords:
setUsesSelectionChromeResizer:
setUuid:
setValidCells:
setValue:
setValue:atCoord:
setValue:forComponent:
setValue:forFormulaCoord:
setValue:forKey:
setValue:forProperty:
setValue:forSpecifier:
setValueToMatch:
setValueType:
setVariationMap:
setVerticalAlignment:
setVerticalStroke:
setViewCellRect:
setViewColumnIndexesInCurrentRow:
setViewPreserveFlags:
setViewRangeRef:preserveFlags:
setViewScale:
setViewTractRef:
setVisible:
setVisibleFillKnobs:
setVisibleIndexSet:
setWarnWhenFormulasReferToEmptyCells:
setWarningSetsForUndo:
setWasConstructedViaNames:
setWasCut:
setWasQuoted:
setWasUnarchivedFromAProvidedTable:
setWeakReference:message:
setWhitespaceAfter:
setWhitespaceAfterDelimiter:
setWhitespaceAfterDelimiters:
setWhitespaceAfterEquals:
setWhitespaceAfterIdentifier:
setWhitespaceAfterLeftParen:
setWhitespaceAfterLet:
setWhitespaceBefore:
setWhitespaceBeforeFirstChild:
setWhitespaceCharSet:
setWidth:
setWidth:ofColumn:
setWidth:ofColumnAtIndex:
setWidthHeightCache:
setWidthHeightCollections:
setWithArray:
setWithCapacity:
setWithObject:
setWithSet:
setWithSpecifier:
setWithSpecifierArray:
setWithSpecifiers:
setWpColumn:
setWrappedRangeRef:
setXLImportDateMode:
setYear:
setZoomOperationIsInProgress:
setZoomToEditOperationIsInProgress:
setZoomToEditVisibleCellRange:
setlabelLevel1CellStyle:
setlabelLevel1TextStyle:
setlabelLevel2CellStyle:
setlabelLevel2TextStyle:
setlabelLevel3CellStyle:
setlabelLevel3TextStyle:
setlabelLevel4CellStyle:
setlabelLevel4TextStyle:
setlabelLevel5CellStyle:
setlabelLevel5TextStyle:
settingsFromArchive:
setup
setupAfterUnarchive
setupAfterUnarchiveForPivotTable:pivotDataTable:
setupContainedTextEditingLayout:
setupReceiver
setupTableModelForPrototypeIndex:forTableInsertOnly:
setupWithGroupCellValue:groupBy:atLevel:groupUid:children:
shallowCopy
shallowCopyToCell:
sharedApplication
sharedCalculationEngineConfiguration
sharedCoordinator
sharedLoadFromArchive:
sharedPropertiesProvider
sharedTableConfiguration
sheetFill
sheetName
sheetNameUnquoted
sheetTableNamePrecedentForTableUID:
shiftGeometryToIncludeTableNameHeight
shiftIndexesBackAtIndex:count:
shiftIndexesForwardAtIndex:count:
shiftUpAndYankBy:
shiftUpAtTileRowIndex:count:
shimControlFormatTypeForInteractionType:
shortDescription
shortStringForDayOfWeekType
shortStringForDayOfWeekTypeForLocale:
shortStringForDayType
shortStringForGroupingType:
shortStringForGroupingType:locale:
shortStringForMonthOfYearType
shortStringForMonthOfYearTypeForLocale:
shortStringForMonthType
shortStringForMonthTypeForLocale:
shortStringForQuarterOfYearTypeForLocale:
shortStringForYearQuarterType
shortStringForYearQuarterTypeForLocale:
shortStringForYearType
shortStringForYearTypeForLocale:
shortStringForYearWeekType
shortStringForYearWeekTypeForLocale:
shortValue
shouldAbortRecalculation
shouldAllowApplyConcurrentCellMap:
shouldCancelScrollingToSelectionPath:forChanges:
shouldCleanGraphForConsistencyViolation
shouldDelayArchiving
shouldDisplaySummaryLabelRowAtGroupLevel:
shouldFastPathMeasureFitWidth
shouldForceRegisterAllTables
shouldPerformDetectAndRepairConsistencyViolations
shouldRepositionStockPopover
shouldReuseLayout:forSize:parentLayout:hint:
shouldRowUseBandedFill:
shouldSaveAlternates
shouldSendSetNowCommand
shouldShowCaption
shouldSkipNextAsyncSort
shouldSplit
shouldSuppressBackgrounds
shouldTruncateSelectionPathAtInfoForCaptionCommand
shouldUpgradeStyleForFormulatextForCellCoord:
shouldUseWideRows
shouldWrap
shouldZoomOutOnEndEditing
showAggregateName
showAsType
showAtBaseIndex:forAction:
showAtUid:forAction:
showAtUid:forIndex:forViewIndex:forAction:
showAtViewIndex:forAction:
showAtViewIndexes:forAction:
showBaseColumnAtIndex:forAction:
showBaseRowAtIndex:forAction:
showCleanCells
showColumnAtIndex:forAction:
showColumnsAtIndexes:forAction:invalidate:
showGeometricAsBase
showReferenceHighlightsOnFormulaCellSelection
showRowAtIndex:forAction:
showRowsAtIndexes:forAction:invalidate:
showThousandsSeparator
showsCellEditingToolbar
showsCellOverflowIndicator
showsCellWarningIndicator
showsChromeWhileEditingCell
showsHideUnhideUI
showsOverlayLayers
showsSelectionKnobsWhileEditingCell
showsTableChrome
shrinkAction
shrinkReturningInverseForBaseCellRegion:
shrinkReturningInverseForBaseCellRegion:formulaReplacer:
shrinkReturningInverseForRegion:
shuffleMap
shuffleMapping
signalIdentifier:
simplify
singleQuoteCharacters
singleReferencedColumnUid
size
sizeAtIndex:
sizeClass
sizeOfText
skipRepairBadRefsForOwnerUID:
sliderSpecWithMinimum:maximum:increment:
smartFieldKind
smartFieldsWithAttributeKind:intersectingRange:
solid
sortByGrandTotal
sortColumnsByRowIndex:level:aggregateIndex:sortDirection:
sortDescending
sortDescriptorWithKey:ascending:
sortGroupBys
sortOrder
sortOrderByAddingRule:
sortOrderByChangingTypeTo:
sortOrderByRemovingBaseColumnIndices:
sortOrderByReplacingRuleAtIndex:withRule:
sortOrderByReplacingRulesWithRules:
sortOrderWithBaseColumn:direction:type:
sortOrderWithRules:type:
sortRowsByColumnIndex:level:aggregateIndex:sortDirection:
sortRuleReferenceTracker
sortRuleReferenceTrackerOwnerUID
sortRulesWithTableInfo:
sortTagsForSortingColumns:byRows:
sortTagsForSortingRows:byColumns:
sortUsingSelector:
sortedArrayFromArray:
sortedArrayFromArray:forDimension:
sortedArrayOfSpecifiers
sortedArrayUsingComparator:
sortedArrayUsingDescriptors:
sortedArrayUsingSelector:
sortedValuesAtLevel:
sortingAggregateRuleUid
sourceColumnCount
sourceData
sourceEncoding
sourceFetcherDidGoOffline:forKeys:
sourceFetcherDidGoOnline:forKeys:
sourceFetcherDidUpdate:withValues:quotes:
sourceFetchers
sourceIndexes
sourceRectOrigin
sourceRowCount
sourceType
space
spaceBundle
spanningColumnDependencies
spanningRangeForHeaderCell:
spanningRowDependencies
spanningRows
spansAllRows
spareFormatOfType:allowMismatchedSpare:
sparseCellList
specWithFunctionName:minArgs:maxArgs:repeatingGroupSize:isOperator:shipVersion:arguments:functionIndex:
specifierFromArchive:
specifierWithFunctionIndex:symbol:attribute:
specifierWithFunctionIndex:symbol:attribute:year:month:day:
spillMajorStrokeLayer
spillMinorStrokeLayer
spillStrokeColumns
spillStrokeLayer
spliceRowInfo:atTileRowIndex:overwrite:
spliceRows:atTileRowIndex:
split
splitRandomSeed:intoLo:hi:
splitRefPath:
splitTile
srcColumnUids
srcCondStyleOwnerUID
srcCoordMapper
srcRegion
srcRowUids
srcTableUID
srcUidForDstUid:
stage
stageCount
stageCountForTextureDeliveryStyle:tableProvider:
standaloneMonthSymbols
standaloneWeekdaySymbols
standardError
standardUserDefaults
startCellRef
startColumnIndex
startDirtyingCellRef
startIndex
startOfDayForDate:
startOfGroupingChangesBatch
startPivotChanges
startRecalcTaskIfNecessary
startRecalculation
startRowIndex
startTime
startWithFirstItem
startingIndex
startingStrokeOrder
startingTileID
state
stepperSpecWithMinimum:maximum:increment:
stockDetails
stockFromArchive:
stockWithAttributes:
stopDirtyingCellRef
stopUpdating
storage:didChangeRange:delta:broadcastKind:attributeKindChanges:
storageByApplyingCustomFormat:
storageChangesInvalidateWrap
storageUUID
storageVersionPreBNC
storeMap
string
string:argIndex:locale:
stringAtBaseCellCoord:optionalCell:
stringAtCellID:optionalCell:
stringAtIndex:
stringByAddingPercentEncodingWithAllowedCharacters:
stringByAppendingFormat:
stringByAppendingString:
stringByFoldingWithOptions:locale:
stringByPaddingToLength:withString:startingAtIndex:
stringByReplacingCharactersInRange:withString:
stringByReplacingMatchesInString:options:range:withTemplate:
stringByReplacingOccurrencesOfString:withString:
stringByTrimmingCharactersInSet:
stringCount
stringForCalcEngineAtCellID:refIfAvailable:
stringForCategoryRef:hostTableUID:
stringForCellValueType:
stringForDayOfWeekType
stringForDayOfWeekTypeForLocale:
stringForDayType
stringForDayTypeForLocale:
stringForDependencyRow
stringForDisplayWithoutColor
stringForEdgesWithLimit:
stringForEditing
stringForFunction:argumentIndex:warningReportingContext:
stringForGroupByChangeType:
stringForGroupingType:
stringForGroupingType:locale:
stringForKey:
stringForKey:outShouldWrap:outIsShared:
stringForKey:shouldWrap:
stringForListType:
stringForMergeType:
stringForMonthOfYearType
stringForMonthOfYearTypeForLocale:
stringForMonthType
stringForMonthTypeForLocale:
stringForOwnerID:withLimit:
stringForOwnerKind:
stringForPurpose:
stringForQuarterOfYearType
stringForQuarterOfYearTypeForLocale:
stringForRangeRefPair:namingContext:
stringForUnderlyingValue
stringForUniqueType
stringForUniqueTypeForLocale:
stringForYearQuarterType
stringForYearQuarterTypeForLocale:
stringForYearType
stringForYearTypeForLocale:
stringForYearWeekType
stringFromBool:locale:
stringFromDate:locale:
stringFromDouble:locale:
stringFromDurationTimeInterval:locale:
stringFromDurationTimeInterval:locale:showPrecision:
stringFromNumber:
stringFromString:locale:
stringID
stringInHeaderCell:
stringParam1
stringTableReference
stringValue
stringValueAtCellCoord:translator:
stringWithCString:encoding:
stringWithCapacity:
stringWithCharacters:length:
stringWithFormat:
stringWithFormulaDetokenizedText
stringWithFormulaDetokenizedTextFromRange:
stringWithFormulaPlainText
stringWithFormulaPlainTextFromRange:
stringWithString:
stringWithUTF8String:
stroke
strokeApplyingEmphasis
strokeApplyingWidth:
strokeAtIndex:
strokeByTransformingByTransform:
strokeExporterReturningDefaultStrokes:
strokeForStrokePreset:
strokeFrame
strokeFrameForGridRange:
strokeFrameForRange:
strokeFrameForTableNameBorder
strokeHeightOfGridRow:atColumnIndex:
strokeHeightOfGridRow:beginColumn:endColumn:
strokeHeightOfGridRow:inColumnRange:
strokeIterator
strokeLayer
strokeLayerAtIndex:
strokeLayerCount
strokeLayerForBottomOfRow:
strokeLayerForColumn:
strokeLayerForRightSideOfColumn:
strokeLayerForRow:
strokeLayerForStrokeType:
strokeLayerForTopOfRow:
strokeLayerModifiedByInsertingSpaceAt:
strokeLayerModifiedByRemovingRangeAt:
strokeLayerStack
strokeLayerStackForColumn:
strokeLayerStackForRow:
strokeLayerStackForStrokeType:
strokePresetListForDefaultPropertyMapForTablePresetID:colors:
strokePresetListForDefaultPropertyMapWithFatStroke:andThinStroke:
strokePresetListForDefaultPropertyMapWithHorizontalStroke:verticalStroke:exteriorStroke:
strokeProvider
strokeRange
strokeRegion
strokeSelectionWithMask:
strokeSidecar
strokeTypeToLayerMap
strokeTypeToLayerStackMap
strokeWidthForDrawingWithAlignedWidth:originalWidth:
strokeWidthForGridIndex:inRange:
strokeWidthForGridIndex:outWidth:outNextWidth:
strokeWidthOfGridColumn:atRowIndex:
strokeWidthOfGridColumn:beginRow:endRow:
strokeWidthOfGridColumn:inRowRange:
strokeWithColor:width:
strokesDefaultVendor
strokesForCellID:top:left:bottom:right:
strongObjectsPointerArray
strongReferences
strongToStrongObjectsMapTable
structuredTextImportConfidenceThreshold
structuredTextImportConfidenceThresholdForCanvas
structuredTextImportSizeLimit
style
styleApplyClearsAll
styleAreaForColumnType:rowType:forAPivotTable:
styleCount
styleForKey:
styleForStyleNetworkIndex:
styleIDForPreset:
styleIDForPreset:andTableStyleArea:
styleNetwork
styleProvider
styleProviderForTextLayout:
styleProviderStack
styleProvidingSource
styleTableReference
styleWithIdentifier:
stylesInStylesheet:
stylesheet
subGridAtGridCoord:width:height:
subGridValueAtGridCoord:width:height:accessContext:
subarrayWithRange:
subregionForRange:
subregionForReference:range:
subsetForOwnerKind:
subsetForReferenceName:limitToTable:includePrefixes:
substringFromIndex:
substringToIndex:
substringWithRange:
subtotalPrecedentForTableUID:
subtractBezierPath:
subtreeContainsIndex:
suggestCellFormatKind:
suitableAnchor
suitableCursor
sumMixedDurationsAndUnitlessWithoutADateErrorForFunctionName:
summaryCellCoordForCellUID:
summaryCellCoordForViewCellCoord:
summaryCellVendor
summaryColumnGroupUids
summaryColumnIndexForViewColumnIndex:
summaryMap
summaryModel
summaryModelIsCleanForSortPrecedentForTableUID:
summaryModelIsCleanPrecedentForTableUID:
summaryRowGroupUids
summaryRowHeightAtCategoryLevel:
summaryRowHeightList
superRange
superclass
suppliesFinalTextures
supportedFunctions
supportsActionMenu
supportsAddBodyRowAtBottomSiriKitIntent
supportsAttachedComments
supportsAutoResizedTables
supportsAutofill
supportsBidiTablesUI
supportsCanvasReferenceEditing
supportsCategorization
supportsCellCommentsActivityLines
supportsComplexReorganizeUI
supportsContainedTextEditing
supportsControlCells
supportsCopySnapshot
supportsCreateChartFromSelection
supportsDragDropMoveMode
supportsDynamicallyHidingRowColumnForDragDrop
supportsExpandedTables
supportsFormulaEditing
supportsFrozenHeaders
supportsHiddenCells
supportsHyperlinks
supportsImplicitEditing
supportsInlineAttachments
supportsMergedCells
supportsMultipleColumns
supportsPivotTables
supportsPlaceholderGeometry
supportsQuickFilterUI
supportsRepeatHeaderRowsOnEachPage
supportsRichTextUndoAtCellID:
supportsRotation
supportsRowColumnAdderKnob
supportsRowMovesInPaginatedTables
supportsTableTranspose
supportsVerticalTextLayoutInChildStorages
supportsiOSContextMenuItemForEvenlyDistributedColumns
supportsiOSContextMenuItemForEvenlyDistributedRows
supportsiOSContextMenuItemForWrappedText
suppressAutomaticNamedReferenceInvalidation
suppressIdenticalEndReference
suppressReferenceOptionsMenu
suspendChangeDescriptorNotificationsDuringBlock:
suspendDuringBlock:
suspendNotify
swapBaseIndex:withIndex:
swapBaseRowAtIndex:withRowAtIndex:
swapIndex:withIndex:
swapIndexesWithIndexSet:index:withIndex:
swapRowAtIndex:withRowAtIndex:
swapRowAtTileRowIndex:withRowAtTileRowIndex:
swapSegmentAtIndex:withSegmentAtIndex:
swatchImage
symbol
syncReferenceHighlightState
syncUpHiddenStateFormulaOwnerUIDs
syntaxError
tabAtEdgeAddsColumn
tabAtEdgeAddsRow
tabWhileEditingNavigates
table
tableAreaForBaseCellCoord:
tableAreaForCellID:
tableAreaForCellID:inTableWithHeaderColumns:headerRows:footerRows:totalRows:
tableAreaForColumn:
tableAreaForRow:
tableAreasForBaseCellRect:
tableAreasForCellRange:
tableChrome
tableEnvironment
tableForTableName:containerName:
tableHasStrongOwnership
tableInfo
tableInfoForTableUID:withCalcEngine:
tableIsLTR
tableLayout
tableModel
tableModelForTableUID:withCalcEngine:
tableName
tableNameBorderEnabled
tableNameBorderStroke
tableNameChangeDistributor
tableNameEditingStorage
tableNameEnabled
tableNameEnabledInNewTables
tableNameForTable:
tableNameHeightCache
tableNameHeightForStorage:withMaxWidth:
tableNameHeightValid
tableNameSelection
tableNameShapeStyle
tableNameStyle
tableNameStyleIDForPreset:
tableNameTextEngine
tableNameTextEngineDelegate
tableNameTextEngineWithTableNameStyle:
tableNameTextSize
tableNameTextSizeForTableName:maxWidth:tableNameStyle:
tableNameUnquoted
tableNameValid
tableOffset
tableOrLinkedResolverForTableUID:
tablePrototypeWithIndex:context:geometry:stylePreset:
tablePrototypeWithIndex:context:geometry:stylePreset:forTableInsertOnly:
tableProvider
tableRange
tableRangeCoordinate
tableRangeForTable:calcEngine:
tableRangeOfTable
tableRepDelegateClass
tableRepIsBeingRemovedFromBackgroundLayout
tableResolver
tableResolverForRefResolver:
tableResolverForTableID:
tableResolverForTableUID:
tableRowsBehavior
tableRowsBehaviorForTable:andEnvironment:
tableSizeClass
tableStrokeProvider
tableStyle
tableStyleAreaForCategoryLevel:isLabel:
tableStyleAreaForCellID:
tableStyleAreaForCellID:inTableWithHeaderColumns:headerRows:footerRows:totalRows:
tableStyleAreaForCellUID:
tableStyleAreaForRow:
tableStyleIndexes
tableStylePreset
tableTranslatorBaseMapForPasteboard
tableTranslatorViewMapForPasteboard
tableUID
tableUID:changedToTableUID:
tableUIDForCategoryRef:withCalcEngine:
tableUIDFromFormula:atCoord:
tableUIDFromFormulaAtIndex:
tableUIDInfo
tableUIDMap
tableWasAdded:
tableWritingDirection
tablesByName
tabs
taggedDecimalList
takeReference
takeReferenceForKey:callWillModify:
takeReferences:forKey:callWillModify:
takeText:
takeText:withLanguage:
tappedControlCellAtUnscaledPoint:
targetGroupFromIndex:minSourceLevel:templateUID:forDimension:
targetGroupFromRowIndex:minSourceLevel:templateRowUID:
targetHeight
targetSizeForImageData:associatedHint:
targetWidth
tearDown
teardown
tempUpgradePresetID
tempWPColumnCache
temporaryContext
temporaryObjectContextDelegate
terminate
terminateRegionIterator
terminated
text
textField:editMenuForCharactersInRange:suggestedActions:
textField:shouldChangeCharactersInRange:replacementString:
textField:willDismissEditMenuWithAnimator:
textField:willPresentEditMenuWithAnimator:
textFieldDidBeginEditing:
textFieldDidChangeSelection:
textFieldDidEndEditing:
textFieldDidEndEditing:reason:
textFieldShouldBeginEditing:
textFieldShouldClear:
textFieldShouldEndEditing:
textFieldShouldReturn:
textFormat
textFormatID
textImportRecord
textIsLinked
textIsVertical
textIsVerticalAtCharIndex:
textLayoutShouldLayoutVertically:
textLayoutShouldWrapAroundExternalDrawables:
textMeasurerBundle
textMeasurerBundleForParagraphStyle:
textRangeForParagraphAtIndex:
textStyle
textStyleAtCellID:
textStyleAtCellID:isDefault:
textStyleAtCellUID:isDefault:
textStyleAtIndex:
textStyleAtModelCellCoord:isDefault:
textStyleForCalcEngineAtBaseCellCoord:isDefault:
textStyleForCellWithEmptyStyleAtBaseCellCoord:isDefault:
textStyleForCellWithEmptyStyleAtCellUID:isDefault:
textStyleForTableStyleArea:
textStyleHandleForKey:
textStyleHandles
textStyleID
textStyleIDForPreset:andTableStyleArea:
textStyleOfColumnAtIndex:
textStyleOfColumnAtIndex:isDefault:
textStyleOfRowAtIndex:
textStyleOfRowAtIndex:isDefault:
textStyleReferences
textStyleToFontHeight
textStyles
textureDeliveryStyleFromDeliveryString:
textureDeliveryStylesLocalized:animationFilter:
textureForDescription:
theme
third
threadDictionary
thresholdCellValues
tileForEntry:
tileForWritingAtRowIndex:outTileRange:
tileRowIndex
tileSize
tileStartingAtOrAfterRowIndex:outTileRange:
tileStartingAtOrBeforeRowIndex:outTileRange:
tileStorage
tilesPerRow
timeIntervalSinceDate:
timeIntervalSinceNow
timeIntervalSinceReferenceDate
timePortionOfDateTimeFormatString:
timeZoneForSecondsFromGMT:
timeZoneWithName:
timer
toInternalOwnerID
todayFormatForLocale:
todayPrecedentForTableUID:
toggleControlSpec
tokenContextWithExpressionNode:parenNestingLevel:
tokenString
tokenText
tokenType
tokenWithStroke:range:order:andPosition:
tokenWithStroke:range:order:majorStrokeLayerToken:minorStrokeLayerToken:
tokenizeFormulaStringLiterals
topBorderRowRange
topCornerRange
topInset
topLeftCellCoord
topLeftCoord
topLevelGroupNode
topLevelGroupUid
topRowStrokes
topStroke
topStrokeLayer
topStrokeOrder
totalCapturedColumnWidths
totalCapturedRowHeights
totalCellCount
totalCurrentColumnWidths
totalCurrentRowHeights
totalMinimumColumnWidths
totalMinimumRowHeights
totalPartitionFrame
totalValue
trackedReferenceAtCoord:
tract
tractCount
tractRef
trailingEmptyCellCount
trailingWhitespace
transform
transformFromCanvas
transformFromDevice
transformInParent
transformToCanvas
transformToDevice
transformUsingAffineTransform:
translatedCellRangeName:usedSymbolicName:
translationFlags
translator
transpose
transposedBodyRange
transposedInfo
trimNames
trimmedString
trimmedStringStartingAtWord:
trimmedStringStartingAtWord:withPreserveFlags:
trimmedStringWithPreserveFlag:
trueString
tsceValue
tsceValueForCellStorageRef:cellCoord:hostTableUID:outValue:
tsceValueFromCell:atCellID:tableUID:
tsce_addObjectNonNil:
tsce_appendSpaces:
tsce_characterSetRequiringSingleQuotes
tsce_dateWithSerialNumber:dateMode:
tsce_dateWithYear:month:day:hour:minute:second:
tsce_day
tsce_dollarSignCharacterSet
tsce_hasCaseInsensitivePrefix:withLocale:
tsce_hour
tsce_internationalColonCharacterSet
tsce_internationalWhitespaceAndNewlineCharacterSet
tsce_internationalWhitespaceCharacterSet
tsce_isSingleQuoted
tsce_isoWeekNumber
tsce_listDelimiterCharacterSet
tsce_mapToDouble
tsce_minute
tsce_month
tsce_needsReferenceSingleQuoteEscaping
tsce_newStringByAddingDoubleQuoteEscapesIfNecessary
tsce_newStringByAddingSingleQuoteEscapesIfNecessary
tsce_newStringByForcingSingleQuoteEscapes:
tsce_numericCompare:
tsce_p_initializeQuotes
tsce_periodCharacterSet
tsce_referenceComponentsSeparatedByColon
tsce_referenceComponentsSeparatedByPathDelimiter
tsce_referenceComponentsSeparatedBySpace
tsce_replaceCharactersInSet:withString:
tsce_second
tsce_singleQuoteCharacterSet
tsce_stringByAddingSingleQuoteEscapes
tsce_stringByAddingSingleQuoteEscapesIfNecessary
tsce_stringByFoldingForNamedReferenceMatchingWithLocale:
tsce_stringByForcingSingleQuoteEscapes:
tsce_stringByRemovingNewlines
tsce_stringByReplacingTabsAndNewlinesWithASingleSpace
tsce_stringByUnescapingPartialQuotedString
tsce_stringByUnescapingPartialQuotedStringWithEmptyQuotedStringOK:
tsce_stringByUnescapingPartialQuotedStringWithEmptyQuotedStringOK:preserveTrailingUnquotedWhitespace:
tsce_stringByUnescapingSingleQuotes
tsce_weekNumberForType:
tsce_weekday
tsce_year
tskMultipleChoiceListFormat
tskStepperSliderFormatWithDisplayFormatType:
tsk_phoneUI
tspSemaphore
tsp_hintsDescription
tsp_initWithProtobufString:
tsp_isInDocument
tsp_isRecoverable
tsp_protobufString
tsp_saveToProtobufString:
tsp_stringWithProtobufString:
tstLoadFromArchive:unarchiver:
tstRegisterPresetSourceClasses
tstSaveToArchive:archiver:
tst_cleanForFormulaEditor
tst_dataObjectHash
tst_dataObjectIsEqual:
tst_hasCaseInsensitivePrefix:withLocale:
tst_hasFormulaEqualsPrefix
tst_hasLeadingCharacterInSet:
tst_isCompatibleWithCell:
tst_isCompatibleWithCellRegion:mergeRange:
tst_isEqualToFormulaEqualsString
tst_isOneCharacterInSet:
tst_selectionForImplicitlyEditingCellWithFormat:adjustSelectionForCurrencyOrPercentSymbols:
tst_selectionForImplicitlyEditingWithFormatType:percentSymbol:currencySymbol:adjustSelectionForCurrencyOrPercentSymbols:
tst_tableInfo
tsu_addPointersFromPointerArray:
tsu_allKeysAsSet
tsu_enumerateKeysAndObjectsUsingBlock:
tsu_enumerateNonNullObjectUsingBlock:
tsu_enumerateNonNullPointersUsingBlock:
tsu_enumerateRangesConcurrentlyUsingBeginBlock:concurrentBlock:finalBlock:
tsu_indexSetByAddingIndexes:
tsu_indexSetByIntersectingWithIndexes:
tsu_indexSetByIntersectingWithRange:
tsu_insertRange:
tsu_intersectionWithIndexSet:
tsu_intersectsIndexesInIndexSet:
tsu_isSingleContiguousRange
tsu_isTaggedPointer
tsu_moveIndexesInRange:toOffset:
tsu_push:
tsu_removeRange:
tsu_resourcesBundle
tsu_setByIntersectingSet:
tsu_setBySubtractingSet:
tsu_stringByRemovingCharactersInSet:
tsu_stringWithoutAttachmentCharacters
tswp_smartSingleQuotesCharacterSet
tswp_spaceCharacterSet
tswp_stringWithUnambiguousNeutralEnding
type
typeErrorForValue:functionSpec:argumentIndex:locale:
typeName
typesettingLocale
typographicBounds
uidBased
uidForIndex:
uidMap
uidRange
uidRanges
uidRectRef
uidRectRefForCategoryRef:atRowUid:
uidRectRefForCellTractRef:
uidReturn
uidTractAtIndex:
uidTractList
uidTractListWithPurpose:
uidTractWithCalcEngine:hostTableUID:
uids
uidsCollapsed
uidsExpanded
unSyncedStocks
uncompressedCellUIDs
underlyingDecimalValue
underlyingDoubleValue
unfilteredChildGroupUids
unfilteredDirectChildGroupUids
unfilteredRowUidsAsVector
unionEveryRangeInRegion:withRange:
unionSet:
uniqueDistinctPrecedentForTableUID:
uniqueValueToRowIndexes
uniqueValueToRowUids
uniqueValuesForColumnUID:
uniqueValuesLock
uniqueValuesUnlock
unitForCurrencyCode:
unitForString:
unitIsMetric:
unitName
unitPrefixForCharacter:
uniteWithBezierPath:
uniteWithPolygonalBezierPath:
unloadIndexes
unlock
unlockForConcurrentAccess
unmergeCellRange:
unnamedTableString
unorderedCellRefsForCategoryRef:atRowUid:
unpackAfterUnarchive
unpackAfterUnarchive:
unpackAfterUnarchiveForCellDependencies:
unpackAfterUnarchiveForGroupBy:atLevel:
unpackEntryAfterUnarchive:
unregisterFromCalcEngine
unregisterFromCalcEngine:
unregisterFromDistributors
unregisterGroupBy:
unregisterHiddenStates:
unregisterOwner:
unregisterStore:
unregisterWithCoordinator
unretainedStrokeLayerForBottomOfRow:
unretainedStrokeLayerForLeftSideOfColumn:
unretainedStrokeLayerForRightSideOfColumn:
unretainedStrokeLayerForTopOfRow:
unscaledCommentFlagAnchorInfoForSearchReference:
unsignedIntValue
unsignedIntegerValue
unsignedLongLongValue
unsupportedFunctionNameForLocale:
unwrappedFittingWidthsForColumnInCellRegionWorker:
unwrappedFittingWidthsForColumnsInCellRegion:
updateAggFormulaCoord:
updateCacheForGridIndex:withMajorStrokes:andMinorStrokes:
updateCachedStocksFromKnownStocks:
updateCachedStocksIntoStore:
updateCalcEngineForTableSize
updateCalculatedPrecedents:forFormula:atCellRef:withState:
updateCalculationEngineForFormula:inBaseCellCoord:usingCalcEngine:
updateChildrenFromInfo
updateChildrenFromLayout
updateColumnHeaderAtIndex:fromMetadata:
updateCommentsWhenAddingTable
updateCustomFormatFromPaste:
updateCustomFormatsAtKey:
updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:
updateDataListsConcurrentlyWithConcurrentCellMap:clearImportWarnings:
updateDynamicFontColor:andRange:
updateDynamicResizeInfo:
updateDynamicTableNameSize:
updateEditorRemainders
updateForSortRules:
updateForTableSize:
updateFormulaForCellData:
updateFromLayout
updateGroupCellValueIfKeyMatches:
updateHeaderAtIndex:fromMetadata:
updateHeaderStorageStylesWithBlock:
updateMergesAndCellsAsPivotDataWithSourceModel:
updatePivotDataModel:pivotDataRefreshUID:pivotDataRefreshTimestamp:uidBodyTract:
updateQueue
updateRowHeaderAtIndex:fromMetadata:
updateStylesWithBlock:
updateTableRowColumnStylesWithBlock:
updateTableUIDFrom:toTableUID:
updateText:atCellCoord:tableUID:
updateTrackedHeaders:
updateTrackedHeaders:checkForEmptyHeaders:
updateTrackedHeadersForDocumentLocaleChange:
updateWithCustomFormatList:
updateWithDocumentRoot:
updateWithIndexingChunks:
updateWithRemoteDataMap:quotes:syncKey:
updateWithValuesFromMap:overwriteValues:
updatedCellRefForOriginalCellRef:
updatedCellRefForRewriteType:originalCellRef:
updatedGroupNodeToPrevious
updatedGroupNodeUidForPreviousGroupNodeUid:
updatedGroupNodeUids
updatedLevel
updatedRelativeAncestorLevelForPreviousAncestorCategoryLevel:numLevels:
upgradeCellFormatsU2_0
upgradeConditionalStylesToLinkedRefWithTableUID:
upgradeDataStoreCellStorageIfNeededWithTableUID:conditionalStyleOwner:
upgradeDuringDocumentUpgradeIfNeeded:
upgradeForNewAggregateTypes:
upgradeForNewAggregateTypes:inOwner:
upgradeForOwners:
upgradeFormatsForCustomFormatListU2_0
upgradeFormulasForGroupByUIDChange
upgradeFromPreUFF
upgradeGroupByUid:toUid:
upgradeHiddenFormulaOwnerForColumnsUID
upgradeHiddenFormulaOwnerForRowsUID
upgradeHiddenStates
upgradeIfNecessary
upgradeNeedsToUpdateFilterSetForImport
upgradeRepairedTiles
upgradeSourceTractsForAbsoluteRefs
upgradeSourceTractsForHostCellChange
upgradeStyleForFormulatextForCellCoord:
upgradeStylesWithBlock:
upgradeSubOwnerUidForMapperOnCalcEngine:
upgradeTablesIfNeeded:forDocumentRoot:
upgradeToSubOwnerUIDForOwners:
upgradeToSubOwnerUIDMapper
upgradeTopAndBottom
upgradedBraveNewCell
upgradedCustomFormatKeyForLegacyID:
upgradedCustomFormatList:
upgrading
upgradingFormulasMinion
upgradingToSubOwnerUIDs
upperBound
upperBoundInclusive
uppercaseStringWithLocale:
uppercaseWithUndoTransaction:locale:
useAccountingStyle
useAutomaticUnits
useBandedFill
useColumnRefForArg0
useReverseMap
useSymbolicNames
useWholeTableForInsertionDependencies
usedAggFormulaCoord:
usedPrecedentCoord:
usedSymbolicName
userHidden
userHiddenChangedPrecedentForTableUID:
userInfo
userVisible
userVisibleRowIndices
usesAllSubOwnerUIDs
usesFunctionsWithDateArgs
usesLimitedAutomaticFormatParsing
usesLimitedNumberFormatInspector
usesOnlyFixedCoords
usesPrePivotAggregateTypesOnly
usesSelectionChromeResizer
uuid
uuidBasedCellDiffMapByTableInfo:
uuidBasedCellMapByTableInfo:
uuidBasedCellMapWithContext:
uuidCoordAtIndex:templateTuple:runningLevel:
uuidCoordAtRunningLevel:
uuidCoordForGroupTuple:runningLevel:
uuidForIndex:
uuidForTableUID:andIndex:direction:
uuidPathPrefixComponentsProvider
uuidReferences
uuidsAsTSUVector
uuidsAsVector
uuidsForIndexes:
uuidsInRange:
valid
validCells
validate
validate:
validateAndRepair
validateBandedFill
validateCachedFrames
validateCellForDrawing:cell:contents:wrap:verticalAlignment:padding:layoutCacheFlags:pageNumber:pageCount:
validateChangeDescriptorQueue
validateChangeDescriptors:
validateChangeDescriptors:tableInfo:numberOfRows:numberOfColumns:
validateCoordinateCache:
validateCoordinateDirection
validateDefaultFontHeights
validateDynamicResizeInfo
validateFittingInfoForCell:cellID:mergeRange:setFitting:layoutTask:widthHeightCollection:validationBundle:styleDefaultsCache:
validateFittingInfoForValidationRegion:rowsNeedingFittingInfo:
validateFittingInfoWithCellRange:validationBundle:
validateFittingRegionForChangeDescriptors:
validateFormatAndValue:
validateFrozenHeaderColumns
validateFrozenHeaderCorner
validateFrozenHeaderRows
validateFrozenHeaderTableBodyMask
validateGeometry
validateIntValue:forProperty:
validateIntValueAsBool:forProperty:
validateLayoutEngineForChangeDescriptors:
validateLayoutHint:
validateLayoutSpaces
validateNewName:forTable:
validateNumberOfGroupsForGroupingColumnList:pivotDataModel:limit:groupNodeCount:
validateNumberOfGroupsForGroupingColumnList:sourceTableModel:sourceBodyTract:limit:groupNodeCount:
validateObjectValue:withClass:forProperty:
validatePageNumberCount
validateRowVisibility:
validateRowsNeedingFittingInfo:validationRegion:layoutEngine:
validateScaledLayout
validateStrokesArrays:
validateStrokesForChangeDescriptors:
validateStrokesInEditingSpillingTextRange
validateTableNameEnabled
validateTableNameHeight
validateTableNameVisibility
validateTableOffset:
validateTableStylesInSameStylesheetExpectingDocSS:
validateVisibleRect
validateWithResult:
validatedLoadFromUnarchiver:
value
valueAtColumn:row:
valueAtCoord:
valueAtIndex:accessContext:
valueAtIndexNoThrow:accessContext:
valueForAttribute:
valueForAttribute:forLocale:
valueForFormulaCoord:
valueForIndex:
valueForProperty:
valueForRemoteData:
valueForSingleKey:
valueForSpecifier:
valueForType:
valueFromString:locale:
valueGridForCategoryRef:
valueGridForCategoryRef:atRowUid:
valueGridForCategoryRef:atRowUid:hidingActionMask:
valueGridForCategoryRef:atRowUid:hidingActionMask:error:
valueIsNumberOrTime
valueIsStringOrNumber
valueIsText
valueMap
valueMapWithSpecifier:value:
valueRepresentsDateWithoutTime
valueToMatch
valueToUseForSummaryCellFormulaError
valueType
valueTypeAtCellID:
valueTypeOfItemAtIndex:
valueWithBytes:objCType:
valuesForCategoryRef:
valuesForCategoryRef:atRowUid:
valuesForCategoryRef:atRowUid:hidingActionMask:
valuesForCategoryRef:atRowUid:hidingActionMask:error:
variationMap
variationOfCharacterStyle:paragraphStyle:propertyMap:
variationOfStyle:propertyMap:
vector
verify
verifyAllOwnersAreKnown
verifyConnectionsWithPivotDataModel:
verifyConnectionsWithPivotDataModel:pivotTableUID:
verifyConnectionsWithTableModel:
verifyIndexesAreConsistent
verifyPivotTableConnections
verifySpanningSettings
verifyStrokes
verifySubOwnerUIDsUsed
verifySubOwnerUIDsUsed:
verifyTableAndBodyRangesForTable:
verifyWithExpectedDefaultStrokeLayer:
versionCounter
versionShippedIn
verticalAlignment
verticalFlip
verticalStroke
verticalStrokeForStrokePreset:
viewBottomRightCoord
viewCellCoord
viewCellCoordForBaseCellCoord:
viewCellCoordForCellUID:
viewCellCoordForChromeCellCoord:
viewCellCoordForSummaryCellCoord:
viewCellRect
viewCellRects
viewCellRefForBaseCellRef:
viewCellRefForChromeCellRef:
viewCellRegionForBaseCellRect:
viewCellRegionForBaseCellRegion:
viewCellTractRefForCategoryRef:atRowUid:
viewColumnGridIndexesForBaseColumnGridIndexes:
viewColumnIndexForBaseColumnIndex:
viewColumnIndexForChromeColumnIndex:
viewColumnIndexForColumnUID:
viewColumnIndexForSummaryColumnIndex:
viewColumnIndexesForBaseColumnIndexes:
viewColumnIndexesForChromeColumnIndexes:
viewColumnIndexesForUIDs:
viewColumnIndexesInCurrentRow
viewColumnIndicesForRulesInTable:
viewIndex
viewOrderUids
viewPreserveFlags
viewRangeRef
viewRangeRefDeprecated
viewRangeRefForChromeRangeRef:
viewRangeRefs
viewRowIndexForBaseRowIndex:
viewRowIndexForChromeRowIndex:
viewRowIndexForRowUID:
viewRowIndexesForBaseRowIndexes:
viewRowIndexesForChromeRowIndexes:
viewRowIndexesForUIDs:
viewScale
viewScaleForZoomingToSelectionPath:targetPointSize:
viewTopLeftCoord
viewTractRef
viewTractRefForBaseTractRef:
viewTractRefForChromeTractRef:
viewTractRefIfFullyValid
viewsOverlappingTableCells
visibleColumnIndices
visibleFillKnobs
visibleIndexAfterAndIncludingIndex:
visibleIndexAfterIndex:
visibleIndexBeforeAndIncludingIndex:
visibleIndexBeforeIndex:
visibleIndices
visiblePartOfRange:
visibleRange
visibleRowIndices
visibleUnscaledRectForClippingReps
visitTSTTableInfo:
volatileDependencies
waitForAllPrecedentsToLoad
waitForLayoutToComplete:
waitForQueueToDrain
waitOnIdentifier:untilDate:releaseReadWhileWaiting:
wantsActivityLine
wantsSelectionAtPoint:
wantsToProvideStylesForTextLayout:
warnWhenFormulasReferToEmptyCells
warningSetAtCellRef:
warningSetByAddingWarningsFromSet:
warningSetByRemovingWarningsFromSet:
warningSetFor3DReferenceFormula:
warningSetForArrayedFormula:
warningSetForCondFormatAboveAvgEqualAvg
warningSetForCondFormatAboveAvgStdDev
warningSetForCondFormatComplexFormula
warningSetForCondFormatContainsErrors
warningSetForCondFormatExpr
warningSetForCondFormatNotContainsErrors
warningSetForCondFormatParamatersNotAllTheSame
warningSetForCondFormatStopIfTrue
warningSetForCondFormatUnsupportedOperator
warningSetForCondFormatUnsupportedStyling
warningSetForCondFormatUnsupportedTimePeriod
warningSetForDifferentBehaviorForFunctionFormula:originalFormula:
warningSetForDurationFormatRangeChanged
warningSetForExternalReferenceFormula:
warningSetForFilteredColumnFormulaNotCopied
warningSetForFormulaReplacedForExcelCompat:originalFormula:
warningSetForNaturalLanguageFormula:
warningSetForReferenceOutOfBoundsFormula:
warningSetForSharedFormulaBaseNotFoundFormula:
warningSetForTransposeUnmodifiedWithIssues
warningSetForTransposedWithIssues:
warningSetForTransposedWithoutIssues:
warningSetForUnknownName:originalFormula:
warningSetForUnsupportedCondFormat
warningSetForUnsupportedDataFormat:
warningSetForUnsupportedFormula:
warningSetForUnsupportedFunction:originalFormula:
warningSetForUnsupportedNameFormula:originalFormula:
warningSetsForUndo
wasAddedToDocumentRoot:dolcContext:
wasConstructedViaNames
wasCut
wasQuoted
wasRemovedFromDocument
wasRemovedFromDocumentRoot:
weekOfYear
whiteColor
whitespaceAfterDelimiter
whitespaceAfterDelimiters
whitespaceAfterEquals
whitespaceAfterFunctionName
whitespaceAfterIdentifier
whitespaceAfterLeftParen
whitespaceAfterLet
whitespaceAndNewlineCharSet
whitespaceAndNewlineCharacterSet
whitespaceBefore
whitespaceBeforeFirstChild
whitespaceCharSet
whitespaceCharacterSet
wholeOwnerDependencies
wholeTableImport
widenAllRowsForUpgrade
widenTilesForUpgrade
width
widthFactor
widthForColumnIndex:bodyWidth:
widthForString:textMeasurerBundle:
widthHeightCache
widthHeightCollections
widthOfColumn:handleCacheMissUsingBlock:
widthOfColumn:skipDynamicSwap:returnZeroIfHidden:outIsFitting:
widthOfColumnAtIndex:
widthValid
willApplyBaseCellMap:tableUID:
willApplyCell:baseCellCoord:tableUID:
willApplyConcurrentCellMap:tableUID:
willApplyToTable:
willApplyToTableModel:
willBeAddedCellCleanup:
willBeAddedToDocumentRoot:dolcContext:
willBeRemoved
willBeRemovedFromDocumentRoot:
willBeginTableNameEditingWithStorage:
willChangeExtentUids:
willChangeGroupByTo:
willClose
willCopyWithOtherDrawables:
willMakeGroupingChangesInRowUIDs:
willModify
willModifyForUpgrade
willModifyForUpgradeWithOptions:
willModifyIfNeeded:
willModifyIfPossible:
willModifySrcTable:srcUidResolver:dstTable:dstUidResolver:
willModifyTable:uidResolver:calcEngine:
willModifyWasCalled
willModifyWithOptions:
willRemoveGroup:
willRemoveGroupNode:
willRemoveRows:tableUID:
withinGroupingChangesBatch
wordAtIndex:
wordFragmentsFromString:savePreserveFlags:
wpColumn
wpKind
wrapFitType
wrappedObjectForPayload:
writeCellIDsInCellUIDList:toVector:prunedCellUIDs:
writeResultsForCalcEngine:
writeToLayoutEngineCaches:
writingDirection
writingDirectionForCellwithTableDefault:
writingDirectionForParagraphAtCharIndex:
writingDirectionForParagraphAtParIndex:
yankRowInfoAtTileRowIndex:
yankRowsAtTileRowIndex:
yankRowsAtTileRowIndex:count:
year
zeroWidthEmptyStroke
zone
zoomOperationIsInProgress
zoomToEditVisibleCellRange
@24@0:8@16
v16@0:8
@44@0:8@16@24B32@36
@32@0:8@16@24
@72@0:8@16@24@32@40B48@52@60B68
B16@0:8
{_NSRange=QQ}48@0:8@16#24{_NSRange=QQ}32
B24@0:8@16
{_NSRange=QQ}32@0:8{_NSRange=QQ}16
Q24@0:8Q16
v24@0:8@16
v40@0:8@16{_NSRange=QQ}24
v32@0:8@16@24
v48@0:8@16@24{_NSRange=QQ}32
@16@0:8
@32@0:8{_NSRange=QQ}16
@36@0:8{_NSRange=QQ}16B32
v32@0:8{_NSRange=QQ}16
v24@0:8Q16
v32@0:8Q16@24
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8@16r^{TSUCellCoord=ISBB}24r^{TSKUIDStruct=QQ}32
v72@0:8@16r^{TSUCellCoord=ISBB}24r^{TSKUIDStruct=QQ}32{TSCEReplaceFormulaOptions=BBBBB{TSKUIDStruct=QQ}@}40
v72@0:8r^{TSUCellCoord=ISBB}16r^{TSKUIDStruct=QQ}24@32{TSCEReplaceFormulaOptions=BBBBB{TSKUIDStruct=QQ}@}40
v32@0:8r^{TSUCellCoord=ISBB}16r^{TSKUIDStruct=QQ}24
v24@0:8r^v16
v24@0:8r^{TSKUIDStruct=QQ}16
v24@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16
v24@0:8r^{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16
@"TSCECalculationEngine"16@0:8
v40@0:8@"<TSCEFormulaReturning>"16r^{TSUCellCoord=ISBB}24r^{TSKUIDStruct=QQ}32
v72@0:8@"<TSCEFormulaReturning>"16r^{TSUCellCoord=ISBB}24r^{TSKUIDStruct=QQ}32{TSCEReplaceFormulaOptions=BBBBB{TSKUIDStruct=QQ}@}40
v72@0:8r^{TSUCellCoord=ISBB}16r^{TSKUIDStruct=QQ}24@"TSCEReferenceSetWrapper"32{TSCEReplaceFormulaOptions=BBBBB{TSKUIDStruct=QQ}@}40
B24@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16
@"TSCEFormulasToSet"
{TSCECellRefSet="_coordsForOwnerUid"{map<TSKUIDStruct, TSCECellCoordSet, std::less<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSCECellCoordSet>>>="__tree_"{__tree<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>, std::allocator<std::__value_type<TSKUIDStruct, TSCECellCoordSet>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>>="__value_"Q}}}}
B20@0:8C16
@36@0:8@16C24@28
{TSKUIDStruct=QQ}16@0:8
I16@0:8
^v16@0:8
v60@0:8@16@24C32{TSKUIDStruct=QQ}36@52
@60@0:8@16@24C32{TSKUIDStruct=QQ}36@52
@32@0:8r^v16@24
v40@0:8r^v16@24@32
v28@0:8@16C24
v40@0:8^v16Q24@32
v32@0:8@16B24B28
@32@0:8C16C20r^{TSKUIDStruct=QQ}24
@20@0:8C16
@52@0:8@16C24Q28Q36^{TSUPreserveFlags=C}44
v36@0:8@16@24C32
v32@0:8@16C24C28
@56@0:8r^{TSKUIDStruct=QQ}16I24@28C36@40^Q48
v44@0:8r^{TSKUIDStruct=QQ}16@24C32@36
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}16@0:8
{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}16@0:8
v24@0:8@?16
B24@0:8r^{TSKUIDStruct=QQ}16
@32@0:8@16S24B28
@20@0:8B16
@36@0:8B16@20S28B32
{TSKUIDStruct=QQ}44@0:8@16q24C32@36
@36@0:8B16@20q28
v32@0:8^B16@?24
v36@0:8C16^B20@?28
v28@0:8C16@?20
v40@0:8C16C20^B24@?32
v32@0:8C16C20@?24
@24@0:8r^{TSKUIDStruct=QQ}16
@28@0:8r^{TSKUIDStruct=QQ}16C24
C16@0:8
{TSKUIDStruct="_lower"Q"_upper"Q}
@"TSCECellValue"
@"TSTGroupValueTuple"
@"TSTGroupBy"
{unordered_map<TSKUIDStruct, TSTAggNode *, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSTAggNode *>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
@"NSMutableDictionary"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
{TSUIndexSet="_isEmpty"b1"_hasSingleRange"b1"_singleRange"{TSUIndexRange="_begin"q"_end"q}"_multipleRanges"^{?}}
@"TSTGroupNode"
@"TSTGroupNodeFormatManager"
{unordered_map<TSKUIDStruct, TSTGroupNode *, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSTGroupNode *>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
@"TSCEMutableUIDSet"
{vector<TSUCellCoord, std::allocator<TSUCellCoord>>="__begin_"^{TSUCellCoord}"__end_"^{TSUCellCoord}"__end_cap_"{__compressed_pair<TSUCellCoord *, std::allocator<TSUCellCoord>>="__value_"^{TSUCellCoord}}}
v32@0:8^{TSCEWarningReportingContext=BB@}16@24
v24@0:8^{TSCEWarningReportingContext=BB@}16
v32@0:8^{TSCEWarningReportingContext=BB@}16c24c28
@24@0:8^{_NSZone=}16
@40@0:8@16r^{TSKUIDStruct=QQ}24{TSUCellCoord=ISBB}32
v20@0:8B16
@"NSDictionary"
@32@0:8@16{TSUCellCoord=ISBB}24
@32@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24
{_NSRange=QQ}16@0:8
@84@0:8@16@24^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}32^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}40@48q56{_NSRange=QQ}64B80
@84@0:8@16@24{TSUCellCoord=ISBB}32{TSUCellCoord=ISBB}40@48q56{_NSRange=QQ}64B80
@64@0:8@16@24{TSUCellCoord=ISBB}32{TSUCellCoord=ISBB}40@48q56
@56@0:8@16@24{TSUCellCoord=ISBB}32{TSUCellCoord=ISBB}40@48
@56@0:8@16@24{TSUCellCoord=ISBB}32{TSUCellCoord=ISBB}40q48
@48@0:8@16@24{TSUCellCoord=ISBB}32{TSUCellCoord=ISBB}40
@64@0:8@16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24q40{TSUCellCoord=ISBB}48{TSUCellCoord=ISBB}56
@32@0:8@16q24
@40@0:8@16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24
@40@0:8@16{TSUCellCoord=ISBB}24q32
@32@0:8@16I24I28
@32@0:8@16S24I28
@40@0:8@16q24I32I36
@40@0:8@16@24{TSUColumnRowOffset=ii}32
{TSUCellCoord=ISBB}16@0:8
{TSUCellCoord=ISBB}24@0:8@16
v32@0:8^v16@24
@56@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16@32q40{TSUCellCoord=ISBB}48
@64@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16@32{TSUCellCoord=ISBB}40{TSUCellCoord=ISBB}48q56
@28@0:8@16B24
v32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
v32@0:8q16I24I28
B24@0:8{TSUCellCoord=ISBB}16
B24@0:8o^C16
q16@0:8
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16@0:8
v48@0:8{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
@"TSTTableInfo"
@"TSTCellUIDRegion"
@"TSTCellRegion"
{_NSRange="location"Q"length"Q}
{TSKUIDStructCoord="_column"{TSKUIDStruct="_lower"Q"_upper"Q}"_row"{TSKUIDStruct="_lower"Q"_upper"Q}}
{RefTypeHolder<TSCERangeRef, 0>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}56@0:8{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}16@48
{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}56@0:8{RefTypeHolder<TSCERangeRef, 0>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}16@48
{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}32@0:8@16@24
{RefTypeHolder<TSCERangeRef, 0>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}32@0:8@16@24
{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}40@0:8@16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24^{TSUPreserveFlags=C}32
{TSUCellCoord=ISBB}40@0:8@16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24^{TSUPreserveFlags=C}32
@24@0:8@"TSCECalculationEngine"16
{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}32@0:8@"NSString"16@"TSCEReferenceParsingContext"24
{RefTypeHolder<TSCERangeRef, 0>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}32@0:8@"NSString"16@"TSCEReferenceParsingContext"24
{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}40@0:8@"NSString"16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24^{TSUPreserveFlags=C}32
{TSUCellCoord=ISBB}40@0:8@"NSString"16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24^{TSUPreserveFlags=C}32
@"TSCECategoryRef"32@0:8@"NSString"16@"TSCEReferenceParsingContext"24
@"TSCECategoryRef"24@0:8@"TSCEReferenceParsingContext"16
@"TSCEWrappedRangeRef"24@0:8@"TSCEReferenceParsingContext"16
@"TSCECellTractRef"24@0:8@"TSCEReferenceParsingContext"16
{TSUChromeCellCoord={TSUCellCoord=ISBB}}48@0:8@16^{TSCETableResolver=^^?}24^{TSUPreserveFlags=C}32^@40
{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}56@0:8@16^{TSCETableResolver=^^?}24@32^{TSCETableResolver=^^?}40@48
B48@0:8@16^@24^@32^@40
{TSKUIDStruct=QQ}64@0:8@16@24@32@40^{TSUPreserveFlags=C}48^Q56
@48@0:8@16@24Q32@40
@"TSCEStringManipulator"
@"TSCECalculationEngine"
@"NSCharacterSet"
B32@0:8{TSKUIDStruct=QQ}16
v32@0:8r^{TSKUIDStruct=QQ}16r^{TSKUIDStruct=QQ}24
q24@0:8@16
q32@0:8@16@24
@32@0:8d16@24
q32@0:8@16@"<TSDMixingTypeContext>"24
@"NSArray"16@0:8
@20@0:8S16
@20@0:8I16
@"TSTStrokeLayer"20@0:8S16
@"TSTStrokeLayer"20@0:8I16
@"TSTTableStyle"16@0:8
v24@0:8@"TSTTableStyle"16
@"TSTCellStyle"16@0:8
v24@0:8@"TSTCellStyle"16
@"TSWPParagraphStyle"16@0:8
v24@0:8@"TSWPParagraphStyle"16
@"TSWPShapeStyle"16@0:8
v24@0:8@"TSWPShapeStyle"16
@"TSDStroke"16@0:8
{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16@0:8
@32@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16o^B24
{TSUModelRowIndex=I}16@0:8
{TSUModelColumnIndex=S}16@0:8
@"TSWPParagraphStyle"32@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16o^B24
v24@0:8@?<v@?@"TSTCell"{TSUCellCoord=ISBB}^B>16
@72@0:8@16{TSKUIDStruct=QQ}24@40@48@56@64
@64@0:8@16r^v24r^v32@40@48@56
@56@0:8@16I24I28@32@40@48
@52@0:8@16@24@32@40B48
@60@0:8@16@24@32@40B48q52
@56@0:8@16@24@32@40@48
v38@0:8r^v16r^v24{TSUModelRowIndex=I}32{TSUModelColumnIndex=S}36
v40@0:8@16@24@32
v48@0:8@16@24@32@40
C18@0:8{TSUModelColumnIndex=S}16
B24@0:8Q16
{?=II}16@0:8
d16@0:8
v24@0:8d16
v20@0:8{TSUModelRowIndex=I}16
v18@0:8{TSUModelColumnIndex=S}16
i16@0:8
@24@0:8{TSUModelRowIndex=I}16C20
@22@0:8{TSUModelColumnIndex=S}16C18
v32@0:8{TSKUIDStruct=QQ}16
{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}24@0:8Q16
Q24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
Q20@0:8{TSUModelRowIndex=I}16
Q18@0:8{TSUModelColumnIndex=S}16
@32@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
i32@0:8o@16Q24
i32@0:8o@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24
B24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
i36@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24B32
i32@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24
@24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
v40@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24@32
i48@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24B32B36@40
i40@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24B32B36
i24@0:8@16
i32@0:8@16B24B28
@32@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16^B24
C24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
@32@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16@24
@36@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16@24B32
i24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
i28@0:8@16{TSUModelRowIndex=I}24
@28@0:8{TSUModelRowIndex=I}16o^B20
i26@0:8@16{TSUModelColumnIndex=S}24
@26@0:8{TSUModelColumnIndex=S}16o^B18
@36@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16B24o^Q28
@24@0:8Q16
v52@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16B24@28^@36^@44
v40@0:8Q16^@24^@32
d28@0:8{TSUModelRowIndex=I}16o^B20
d26@0:8{TSUModelColumnIndex=S}16o^B18
v28@0:8d16{TSUModelRowIndex=I}24
v26@0:8d16{TSUModelColumnIndex=S}24
d24@0:8Q16
{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
i52@0:8{_NSRange=QQ}16r^v32@40B48
i42@0:8{TSUModelColumnIndex=S}16r^v18@26Q34
i48@0:8{TSUModelRowIndex=I}16r^v20@28Q36B44
v24@0:8{TSUModelRowIndex=I}16{TSUModelRowIndex=I}20
v20@0:8{TSUModelColumnIndex=S}16{TSUModelColumnIndex=S}18
v36@0:8{_NSRange=QQ}16{TSUModelRowIndex=I}32
v34@0:8{_NSRange=QQ}16{TSUModelColumnIndex=S}32
C20@0:8{TSUModelRowIndex=I}16
v28@0:8C16r^{TSUModelRowIndex=I}20
v28@0:8C16r^{TSUModelColumnIndex=S}20
@28@0:8{TSUCellCoord=ISBB}16B24
@28@0:8S16o^q20
@32@0:8S16B20o^q24
@20@0:8{TSUModelRowIndex=I}16
@24@0:8{TSUCellCoord=ISBB}16
v32@0:8@16I24i28
v32@0:8@16S24i28
v48@0:8@16I24i28{TSTSimpleRange=qQ}32
v48@0:8@16S24i28{TSTSimpleRange=qQ}32
@32@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24
i36@0:8o^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16{TSUModelCellCoord={TSUCellCoord=ISBB}}24B32
i40@0:8o^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16{TSUModelCellCoord={TSUCellCoord=ISBB}}24B32B36
v28@0:8@16B24
v36@0:8r^v16@24B32
v36@0:8@16B24B28B32
v36@0:8@16{TSUColumnRowOffset=ii}24B32
{TSCECellCoordSet={map<unsigned short, TSUIndexSet, std::less<unsigned short>, std::allocator<std::pair<const unsigned short, TSUIndexSet>>>={__tree<std::__value_type<unsigned short, TSUIndexSet>, std::__map_value_compare<unsigned short, std::__value_type<unsigned short, TSUIndexSet>, std::less<unsigned short>, true>, std::allocator<std::__value_type<unsigned short, TSUIndexSet>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned short, TSUIndexSet>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<unsigned short, std::__value_type<unsigned short, TSUIndexSet>, std::less<unsigned short>, true>>=Q}}}}16@0:8
B24@0:8r^{TSUCellCoord=ISBB}16
v32@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{TSUModelCellCoord={TSUCellCoord=ISBB}}24@0:8@16
v40@0:8@16Q24@?32
B32@0:8{TSUCellCoord=ISBB}16^@24
B24@0:8^@16
B32@0:8^@16^B24
v40@0:8@16B24B28@32
v60@0:8Q16B24B28B32@36@?44@?52
S16@0:8
v20@0:8S16
@"TSTHiddenStateFormulaOwner"
@"TSTStrokeSidecar"
{vector<TSTCellValueType, std::allocator<TSTCellValueType>>="__begin_"^C"__end_"^C"__end_cap_"{__compressed_pair<TSTCellValueType *, std::allocator<TSTCellValueType>>="__value_"^C}}
{map<unsigned long, TSTGroupingType, std::less<unsigned long>, std::allocator<std::pair<const unsigned long, TSTGroupingType>>>="__tree_"{__tree<std::__value_type<unsigned long, TSTGroupingType>, std::__map_value_compare<unsigned long, std::__value_type<unsigned long, TSTGroupingType>, std::less<unsigned long>, true>, std::allocator<std::__value_type<unsigned long, TSTGroupingType>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned long, TSTGroupingType>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<unsigned long, std::__value_type<unsigned long, TSTGroupingType>, std::less<unsigned long>, true>>="__value_"Q}}}
{TSUModelColumnIndex="_column"S}
{TSUModelRowIndex="_row"I}
@"TSTTableDataStore"
@"NSString"
@"TSTTableStylePreset"
@"TSTTableStyle"
@"TSTTableTranslator"
@"TSTCellStyle"
@"TSWPParagraphStyle"
@"TSWPShapeStyle"
@"TSTCellDictionary"
@"TSTConcurrentMutableCellUIDSet"
@"TSTConditionalStyleFormulaOwner"
@"TSTMergeOwner"
@"TSTCategoryOwner"
@"TSTPivotOwner"
@"TSTHiddenStatesOwner"
@"TSCEHauntedOwner"
@"TSTTableSortOrder"
@"TSTSortRuleReferenceTracker"
@"TSTColumnRowUIDMap"
@"TSTCellWillChangeDistributor"
@"TSWPStorage"
@"NSMapTable"
@"TSTStructuredTextImportRecord"
@"TSTTableFilterSet"
@"TSTPencilAnnotationOwner"
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16@0:8
@"TSTCell"16@0:8
@"TSTCellFormulaSpec"16@0:8
v24@0:8{TSUCellCoord=ISBB}16
{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}
@"TSTCell"
@"TSTCellFormulaSpec"
{TSUCellRect="origin"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}"size"{?="numberOfColumns"I"numberOfRows"I}}
@36@0:8@16B24@28
v28@0:8@16I24
@28@0:8I16o^I20
^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}24@0:8S16I20
q32@0:8@16S24I28
i24@0:8S16I20
@24@0:8S16I20
v28@0:8S16I20S24
v24@0:8I16I20
v28@0:8I16I20B24
@24@0:8I16I20
v32@0:8@16I24B28
@"NSPointerArray"
v32@0:8d16{TSUCellCoord=ISBB}24
{vector<std::pair<TSUCellCoord, double>, std::allocator<std::pair<TSUCellCoord, double>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::pair<TSUCellCoord, double> *, std::allocator<std::pair<TSUCellCoord, double>>>="__value_"^v}}
{unordered_map<unsigned short, double, std::hash<unsigned short>, std::equal_to<unsigned short>, std::allocator<std::pair<const unsigned short, double>>>="__table_"{__hash_table<std::__hash_value_type<unsigned short, double>, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, double>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, double>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>, std::allocator<std::__hash_value_type<unsigned short, double>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, double>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, double>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, double>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, double>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, double>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, double>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, double>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned short, double>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, double>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, double>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, double>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>>="__value_"f}}}
@32@0:8^{TSCEDateValue=^^?@{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}}16@24
^{TSCEDateValue=^^?@{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}}16@0:8
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16@0:8
v24@0:8^v16
^{TSCEDateValue=^^?@{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}}
B40@0:8d16d24d32
d20@0:8I16
@40@0:8d16d24d32
@44@0:8I16d20d28d36
d32@0:8d16^B24
d32@0:8@16@24
v40@0:8@16{TSKUIDStruct=QQ}24
v48@0:8@16@24{TSKUIDStruct=QQ}32
v40@0:8@"NSString"16{TSKUIDStruct=QQ}24
v48@0:8@"NSString"16@"NSString"24{TSKUIDStruct=QQ}32
{unordered_set<TSUCellCoord, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, std::allocator<TSUCellCoord>>={__hash_table<TSUCellCoord, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, std::allocator<TSUCellCoord>>={unique_ptr<std::__hash_node_base<std::__hash_node<TSUCellCoord, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSUCellCoord, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<TSUCellCoord, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSUCellCoord, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSUCellCoord, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<TSUCellCoord, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<TSUCellCoord, void *> *>, std::allocator<std::__hash_node<TSUCellCoord, void *>>>={__hash_node_base<std::__hash_node<TSUCellCoord, void *> *>=^v}}{__compressed_pair<unsigned long, std::hash<TSUCellCoord>>=Q}{__compressed_pair<float, std::equal_to<TSUCellCoord>>=f}}}16@0:8
@24@0:8r^v16
@"NSObject<OS_dispatch_semaphore>"
@41@0:8@16r^{TSKUIDStruct=QQ}24{TSUPreserveFlags=C}32^{TSCEFormulaRewriteContext=@@{TSCEFormulaRewriteContextRecord={TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}{TSKUIDStruct=QQ}{TSUColumnRowOffset=ii}BBBBBBB}}33
@40@0:8r^{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}16r^{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}24r^{TSKUIDStruct=QQ}32
@24@0:8r^{TSCECellTractRefCore={TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}{TSKUIDStruct=QQ}C{TSUPreserveFlags=C}BBB}16
@32@0:8r^{TSUCellCoord=ISBB}16r^{TSUCellCoord=ISBB}24
@40@0:8r^{TSUCellCoord=ISBB}16r^{TSUCellCoord=ISBB}24r^{TSKUIDStruct=QQ}32
@24@0:8r^{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16
@40@0:8r^v16@24r^{TSKUIDStruct=QQ}32
{TSUPreserveFlags=C}16@0:8
v17@0:8{TSUPreserveFlags=C}16
B24@0:8S16B20
B24@0:8I16B20
{TSUPreserveFlags=C}28@0:8r^{TSUCellCoord=ISBB}16B24
v24@0:8^{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16
v20@0:8I16
v24@0:8r^{TSUIndexRange=qq}16
v24@0:8r^{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}16
r^{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}16@0:8
v24@0:8r^{TSUColumnRowOffset=ii}16
{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}16@0:8
{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16@0:8
v24@0:8r^{TSUCellCoord=ISBB}16
{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}}32@0:8@16r^{TSKUIDStruct=QQ}24
v24@0:8r^{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
{TSUCellCoord=ISBB}24@0:8I16I20
B40@0:8@16@24B32B36
B32@0:8@16@24
{TSCECellTractRefCore={TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}{TSKUIDStruct=QQ}C{TSUPreserveFlags=C}BBB}16@0:8
v104@0:8{TSCECellTractRefCore={TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}{TSKUIDStruct=QQ}C{TSUPreserveFlags=C}BBB}16
{TSCECellTractRefCore="_columns"{TSUIndexSet="_isEmpty"b1"_hasSingleRange"b1"_singleRange"{TSUIndexRange="_begin"q"_end"q}"_multipleRanges"^{?}}"_rows"{TSUIndexSet="_isEmpty"b1"_hasSingleRange"b1"_singleRange"{TSUIndexRange="_begin"q"_end"q}"_multipleRanges"^{?}}"_tableUID"{TSKUIDStruct="_lower"Q"_upper"Q}"_spanType"C"_preserveFlags"{TSUPreserveFlags="_flags"C}"_preserveRectangular"B"_mixedColumnStartedWithPreserve"B"_mixedRowStartedWithPreserve"B}
@"NSString"24@0:8@"<TSCEReferenceResolving>"16
@"NSString"24@0:8@"<TSCEResolverContainer>"16
@"<TSCEResolverContainer>"28@0:8@"NSString"16B24
@"NSArray"24@0:8@"NSString"16
@"<TSCEReferenceResolving>"32@0:8@"NSString"16@"<TSCEReferenceResolving>"24
@"<TSCEReferenceResolving>"32@0:8@"NSString"16@"NSString"24
@"NSEnumerator"16@0:8
@"NSEnumerator"24@0:8Q16
@"NSString"24@0:8@"<TSKModel>"16
v24@0:8@"<TSKModelVisitor>"16
v28@0:8@16S24
v28@0:8@"TSCECalculationEngine"16S24
v24@0:8@"TSCECalculationEngine"16
@"TSPObject<TSCECalculationEngineRegistration>"16@0:8
@"<TSCEFormulaOwning>"16@0:8
I24@0:8Q16
@40@0:8q16{CGPoint=dd}24
@48@0:8q16@24@32@40
@52@0:8q16@24@32@40B48
@40@0:8{TSKUIDStruct=QQ}16@32
v40@0:8@16@24Q32
v48@0:8@16@24Q32Q40
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}44@0:8Q16{?=II}24I32I36I40
Q40@0:8{TSUCellCoord=ISBB}16I24I28I32I36
@24@0:8@"TSPObjectContext"16
v24@0:8@"TSDInfoGeometry"16
v24@0:8@"NSObject<TSDInfo>"16
@"TSDInfoGeometry"16@0:8
@"NSObject<TSDInfo>"16@0:8
@"TSPObject<TSDOwningAttachment>"16@0:8
v24@0:8@"TSPObject<TSDOwningAttachment>"16
B24@0:8@"NSObject<TSDInfo>"16
@"<TSDInfoUUIDPathPrefixComponentsProvider>"16@0:8
@"TSKCollaboratorCursor"24@0:8@"TSKSelectionPath"16
@24@0:8@?16
@40@0:8@16@24^@32
@"TSKSearch"24@0:8@?<v@?@"<TSKSearchReference>">16
v24@0:8@?<v@?@"<TSKSearchReference>">16
v24@0:8@"TSKSearch"16
@"TSKCommand"40@0:8@"NSObject<TSKSearchReplaceProvider>"16@"<TSKActivitySelectionModelTranslatorProvider>"24^@32
v40@0:8@"NSString"16@"TSSTheme"24Q32
@"NSSet"16@0:8
v24@0:8@?<@"TSSStyle"@?@"TSSStyle">16
v24@0:8@"TSSStylesheet"16
v24@0:8@"TSSStyle"16
{TSKUIDStruct=QQ}20@0:8S16
{TSKUIDStruct=QQ}20@0:8I16
S32@0:8{TSKUIDStruct=QQ}16
I32@0:8{TSKUIDStruct=QQ}16
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}24@0:8@16
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}32@0:8{_NSRange=QQ}16
{_NSRange=QQ}24@0:8r^v16
r^v16@0:8
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}24@0:8r^v16
v28@0:8[16C]16I24
v28@0:8[16C]16S24
I24@0:8[16C]16
S24@0:8[16C]16
{TSKUIDStruct=QQ}28@0:8@16B24
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24@0:8r^v16
{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}}32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}24@0:8@"NSIndexSet"16
@"NSMutableIndexSet"24@0:8r^v16
@"NSIndexSet"24@0:8r^v16
@"TSCEMutableUIDSet"28@0:8@"NSIndexSet"16B24
@"NSMutableIndexSet"28@0:8@"TSCEUIDSet"16B24
@"NSMutableIndexSet"36@0:8@"TSCEUIDSet"16B24@"TSCEMutableUIDSet"28
{TSKUIDStruct=QQ}28@0:8@"TSCEUIDSet"16B24
B20@0:8I16
B20@0:8S16
I20@0:8I16
S20@0:8S16
B32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
I32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
@32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
B36@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16C32
B24@0:8I16C20
B24@0:8S16C20
C20@0:8I16
C20@0:8S16
@"NSIndexSet"32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
@"NSMutableIndexSet"32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
@"NSIndexSet"24@0:8@"TSTCellRegion"16
@"NSIndexSet"24@0:8@"NSIndexSet"16
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
@"TSTMergeListWrapper"32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
@"TSTMergeListWrapper"24@0:8@"TSTCellRegion"16
@"TSTCellRegion"24@0:8@"TSTCellRegion"16
@"<TSKAnnotation>"24@0:8@"NSString"16
@56@0:8@16@24I32I36@40@48
@48@0:8@16@24I32I36@40
@40@0:8@16@24I32I36
@64@0:8@16@24{TSUCellRect={TSUCellCoord=ISBB}{?=II}}32{_NSRange=QQ}48
@72@0:8@16@24{TSUCellRect={TSUCellCoord=ISBB}{?=II}}32{_NSRange=QQ}48@64
@40@0:8@16@24{TSUCellCoord=ISBB}32
@56@0:8@16@24@32B40q44B52
v28@0:8q16B24
v40@0:8@16@24d32
v40@0:8{TSUCellCoord=ISBB}16{TSUCellCoord=ISBB}24{TSUCellCoord=ISBB}32
v32@0:8@16{TSUCellCoord=ISBB}24
@18@0:8{TSUModelColumnIndex=S}16
Q32@0:8Q16@24
@28@0:8B16@20
Q24@0:8@16
v48@0:8@16@24@32d40
v24@0:8q16
v32@0:8{CGSize=dd}16
v32@0:8{CGPoint=dd}16
v32@0:8d16d24
v28@0:8{TSUColumnRowOffset=ii}16B24
B32@0:8@16@?24
i32@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24
i24@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
v40@0:8@16{TSUCellCoord=ISBB}24@32
@32@0:8{TSUCellCoord=ISBB}16@24
@36@0:8{TSUCellCoord=ISBB}16@24B32
v36@0:8i16@20{TSUCellCoord=ISBB}28
v48@0:8{TSUCellCoord=ISBB}16^B24^@32^q40
v64@0:8@16{TSUCellCoord=ISBB}24^B32^q40^i48^@56
v20@0:8i16
@18@0:8{TSUViewColumnIndex=S}16
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24@0:8Q16
Q24@0:8{TSUCellCoord=ISBB}16
Q20@0:8I16
Q20@0:8S16
Q48@0:8{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
i32@0:8@16Q24
i32@0:8o@16{TSUCellCoord=ISBB}24
i36@0:8@16{TSUCellCoord=ISBB}24B32
i32@0:8@16{TSUCellCoord=ISBB}24
B24@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
v36@0:8@16{TSUCellCoord=ISBB}24B32
i48@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24B32B36@40
i40@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24B32B36
v48@0:8@16{TSUViewCellCoord={TSUCellCoord=ISBB}}24@32@40
@36@0:8@16B24B28B32
@32@0:8@16B24B28
i40@0:8@16{TSUCellCoord=ISBB}24@32
C24@0:8{TSUCellCoord=ISBB}16
C24@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
i32@0:8@16r^{TSKUIDStruct=QQ}24
@28@0:8I16o^B20
@28@0:8S16o^B20
@36@0:8{TSUCellCoord=ISBB}16B24o^Q28
@32@0:8{TSUCellCoord=ISBB}16o^B24
@32@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16o^B24
v52@0:8{TSUCellCoord=ISBB}16B24@28^@36^@44
@28@0:8S16@20
@40@0:8{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}16o^B32
{TSUCellCoord=ISBB}24@0:8{TSUCellCoord=ISBB}16
d28@0:8I16o^B20
d28@0:8S16o^B20
v28@0:8d16S24
v28@0:8d16I24
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24@0:8{TSUCellCoord=ISBB}16
v28@0:8S16I20B24
i44@0:8S16r^v20@28Q36
i44@0:8I16r^v20@28Q36
i48@0:8I16r^v20@28Q36B44
v24@0:8S16I20
v36@0:8{_NSRange=QQ}16I32
v36@0:8{_NSRange=QQ}16S32
@24@0:8q16
v32@0:8@16@?24
{vector<TSUCellRect, std::allocator<TSUCellRect>>=^{TSUCellRect}^{TSUCellRect}{__compressed_pair<TSUCellRect *, std::allocator<TSUCellRect>>=^{TSUCellRect}}}32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
{vector<TSUCellRect, std::allocator<TSUCellRect>>=^{TSUCellRect}^{TSUCellRect}{__compressed_pair<TSUCellRect *, std::allocator<TSUCellRect>>=^{TSUCellRect}}}24@0:8@16
i36@0:8o^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16{TSUCellCoord=ISBB}24B32
{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}24@0:8I16I20
{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}24@0:8S16S20
@32@0:8@16^@24
B56@0:8{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}16o^{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}32o^{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}40o^{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}48
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24@0:8{TSUCellCoord=ISBB}16
{TSUCellCoord=ISBB}48@0:8{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
B40@0:8@16^v24^v32
v40@0:8@16^v24^v32
@36@0:8@16B24^B28
@52@0:8{vector<TSKUIDStructCoord, std::allocator<TSKUIDStructCoord>>=^{TSKUIDStructCoord}^{TSKUIDStructCoord}{__compressed_pair<TSKUIDStructCoord *, std::allocator<TSKUIDStructCoord>>=^{TSKUIDStructCoord}}}16B40^B44
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}28@0:8{TSUCellCoord=ISBB}16B24
i32@0:8o@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24
i36@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24B32
@56@0:8{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16o^B48
B20@0:8B16
v96@0:8@16{TSKUIDStruct=QQ}24d40{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}}48
v88@0:8@16@24@32q40@48{TSKUIDStruct=QQ}56{TSKUIDStruct=QQ}72
{TSUChromeColumnIndex=S}16@0:8
{TSUChromeRowIndex=I}16@0:8
S24@0:8@16
@28@0:8C16@?20
@28@0:8C16@20
@28@0:8C16r^v20
@24@0:8C16C20
{_NSRange=QQ}20@0:8I16
q24@0:8{TSUCellCoord=ISBB}16
B40@0:8{TSKUIDStruct=QQ}16q32
C24@0:8r^{TSKUIDStruct=QQ}16
C36@0:8{TSKUIDStruct=QQ}16C32
v40@0:8C16{TSKUIDStruct=QQ}20C36
d20@0:8C16
v28@0:8d16C24
@28@0:8i16@20
v32@0:8r^v16@24
{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}}16@0:8
v64@0:8{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}}16
@"TSTTableModel"
@"TSTConditionalStyleSet"
@"TSTTablePartitioner"
@"TSTLayoutEngine"
@"TSTSummaryModel"
@"TSTLayoutHint"
@"TSTCategoryOrder"
@"TSTPivotRowColumnOrder"
@"TSTHiddenStates"
@"TSCECoordMapper"
@"TSTArchivedLayoutEngineBundle"
{TSKUIDStructTract="_colIdList"{TSKUIDStructVectorTemplate<TSKUIDStruct>="__begin_"^{TSKUIDStruct}"__end_"^{TSKUIDStruct}"__end_cap_"{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>="__value_"^{TSKUIDStruct}}}"_rowIdList"{TSKUIDStructVectorTemplate<TSKUIDStruct>="__begin_"^{TSKUIDStruct}"__end_"^{TSKUIDStruct}"__end_cap_"{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>="__value_"^{TSKUIDStruct}}}}
B20@0:8i16
@20@0:8i16
f20@0:8i16
i20@0:8i16
d20@0:8i16
v40@0:8@16@24{TSUCellCoord=ISBB}32
@40@0:8@16@24@32
v56@0:8@16@24@32Q40@48
@64@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24@32@40@48@56
@80@0:8@16@24r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}32@40@48@56@64@72
@56@0:8@16Q24B32B36@40@48
@48@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16Q32Q40
v56@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16Q32Q40@?48
@32@0:8r^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16@24
c16@0:8
v20@0:8c16
@"TSULocale"
{vector<TSUCellRect, std::allocator<TSUCellRect>>="__begin_"^{TSUCellRect}"__end_"^{TSUCellRect}"__end_cap_"{__compressed_pair<TSUCellRect *, std::allocator<TSUCellRect>>="__value_"^{TSUCellRect}}}
@36@0:8@16r^v24C32
@44@0:8@16r^{TSKUIDStruct=QQ}24r^v32C40
v20@0:8C16
v28@0:8r^v16C24
{RefTypeHolder<TSCERangeRef, 0>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}16@0:8
{RefTypeHolder<TSCERangeRef, 1>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}16@0:8
{vector<RefTypeHolder<TSCERangeRef, 0>, std::allocator<RefTypeHolder<TSCERangeRef, 0>>>=^v^v{__compressed_pair<RefTypeHolder<TSCERangeRef, 0> *, std::allocator<RefTypeHolder<TSCERangeRef, 0>>>=^v}}16@0:8
{vector<RefTypeHolder<TSCERangeRef, 1>, std::allocator<RefTypeHolder<TSCERangeRef, 1>>>=^v^v{__compressed_pair<RefTypeHolder<TSCERangeRef, 1> *, std::allocator<RefTypeHolder<TSCERangeRef, 1>>>=^v}}16@0:8
{TSUViewCellCoord={TSUCellCoord=ISBB}}16@0:8
{TSUModelCellCoord={TSUCellCoord=ISBB}}16@0:8
{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}16@0:8
v48@0:8{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}16
@"TSCECellTractRef"
@"TSTColumnRowUIDMapper"
{RefTypeHolder<TSCERangeRef, 2>="_ref"{TSCERangeRef="range"{TSCERangeCoordinate="_topLeft"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}"_bottomRight"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}}"_tableUID"{TSKUIDStruct="_lower"Q"_upper"Q}}}
v24@0:8@?<v@?@"<TSTCellIteratorData>"^B>16
@"<TSTCellIteratorData>"16@0:8
@"TSTTableInfo"16@0:8
@72@0:8@16@24@32Q40Q48{TSUCellRect={TSUCellCoord=ISBB}{?=II}}56
@64@0:8@16@24Q32Q40{TSUCellRect={TSUCellCoord=ISBB}{?=II}}48
@40@0:8@16Q24Q32
@56@0:8@16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24Q40Q48
@48@0:8@16@24Q32Q40
{unordered_map<unsigned short, TSUCellRect, std::hash<unsigned short>, std::equal_to<unsigned short>, std::allocator<std::pair<const unsigned short, TSUCellRect>>>="__table_"{__hash_table<std::__hash_value_type<unsigned short, TSUCellRect>, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, TSUCellRect>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, TSUCellRect>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>, std::allocator<std::__hash_value_type<unsigned short, TSUCellRect>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSUCellRect>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSUCellRect>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSUCellRect>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSUCellRect>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSUCellRect>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSUCellRect>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSUCellRect>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned short, TSUCellRect>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSUCellRect>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, TSUCellRect>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, TSUCellRect>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>>="__value_"f}}}
@"TSTMutableCellIteratorData"
@"<TSTCellRegionIterating><TSTMutableCellIteratorDataUpdating>"
@"<TSTCellRegionIterating>"
@32@0:8Q16Q24
v48@0:8@16Q24@32Q40
v56@0:8@16Q24Q32@40Q48
v40@0:8@16r^v24@32
{CGSize=dd}32@0:8@16@24
^{TSCEFunctionArgSpec=}16@0:8
v40@0:8@16{TSTCSENodeData=QQ}24
@40@0:8{TSTCSENodeData=QQ}16@32
{unordered_map<unsigned long, TSTCSENodeData, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, TSTCSENodeData>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, TSTCSENodeData>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, TSTCSENodeData>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, TSTCSENodeData>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, TSTCSENodeData>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSTCSENodeData>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSTCSENodeData>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSTCSENodeData>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSTCSENodeData>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSTCSENodeData>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSTCSENodeData>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSTCSENodeData>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, TSTCSENodeData>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSTCSENodeData>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, TSTCSENodeData>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, TSTCSENodeData>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}
@"NSMutableArray"
Q24@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16
C18@0:8{TSUViewColumnIndex=S}16
C20@0:8{TSUViewRowIndex=I}16
Q20@0:8{TSUViewRowIndex=I}16
{TSUViewColumnIndex=S}16@0:8
{TSUViewRowIndex=I}16@0:8
C24@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16
v44@0:8{TSUViewRowIndex=I}16@?20@?28@?36
@28@0:8{TSUViewRowIndex=I}16o^B20
v42@0:8{TSUViewColumnIndex=S}16@?18@?26@?34
@26@0:8{TSUViewColumnIndex=S}16o^B18
i40@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16@?24@?32
@36@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16B24o^Q28
v52@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16B24@28^@36^@44
@32@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16o^B24
i36@0:8@16{TSUViewCellCoord={TSUCellCoord=ISBB}}24B32
i36@0:8o^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16{TSUViewCellCoord={TSUCellCoord=ISBB}}24B32
d28@0:8{TSUViewRowIndex=I}16o^B20
d26@0:8{TSUViewColumnIndex=S}16o^B18
v28@0:8d16{TSUViewRowIndex=I}24
v26@0:8d16{TSUViewColumnIndex=S}24
B24@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16
C28@0:8{TSUViewRowIndex=I}16^Q20
C26@0:8{TSUViewColumnIndex=S}16^Q18
Q18@0:8{TSUViewColumnIndex=S}16
{os_unfair_lock_s=I}16@0:8
v20@0:8{os_unfair_lock_s=I}16
@"NSIndexSet"
@24@0:8I16B20
{vector<TSTCell *, std::allocator<TSTCell *>>=^@^@{__compressed_pair<TSTCell *__strong *, std::allocator<TSTCell *>>=^@}}32@0:8^v16@?24
^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}20@0:8S16
v28@0:8S16@20
q28@0:8@16S24
Q24@0:8S16I20
v28@0:8S16S20I24
v40@0:8{_NSRange=QQ}16@?32
v44@0:8{_NSRange=QQ}16B32@?36
B28@0:8S16Q20
{TSTTableTileRowBuffer="_private"{?="cellData"*"cellBufferSize"Q"allocatedCellBufferSize"Q"offsets"^S"offsetBufferCount"S"wideOffsets"B}}
@40@0:8@16@24q32
{vector<TSU::UUIDData<TSP::UUIDData>, std::allocator<TSU::UUIDData<TSP::UUIDData>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<TSU::UUIDData<TSP::UUIDData> *, std::allocator<TSU::UUIDData<TSP::UUIDData>>>="__value_"^v}}
@"TSCEUIDSet"
@"TSCEFormulaObject"16@0:8
@"TSCEFormulaObject"
@"TSTStockDetails"
^v28@0:8@16B24
{TSCENameTrieNode="_children"{unordered_map<unsigned short, TSCENameTrieNode *, std::hash<unsigned short>, std::equal_to<unsigned short>, std::allocator<std::pair<const unsigned short, TSCENameTrieNode *>>>="__table_"{__hash_table<std::__hash_value_type<unsigned short, TSCENameTrieNode *>, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, TSCENameTrieNode *>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, TSCENameTrieNode *>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>, std::allocator<std::__hash_value_type<unsigned short, TSCENameTrieNode *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCENameTrieNode *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCENameTrieNode *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCENameTrieNode *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCENameTrieNode *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCENameTrieNode *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCENameTrieNode *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCENameTrieNode *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned short, TSCENameTrieNode *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCENameTrieNode *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, TSCENameTrieNode *>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, TSCENameTrieNode *>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>>="__value_"f}}}"_name"@"NSString"}
@32@0:8^{TSCETableResolver=^^?}16@24
@24@0:8^{TSCETableResolver=^^?}16
^{TSCETableResolver=^^?}16@0:8
v24@0:8^{TSCETableResolver=^^?}16
{TSUPreserveFlags="_flags"C}
^{TSCETableResolver=^^?}
@"NSArray"
@"TSCEQuotedRefPathSplitter"
@"TSCEAbortObject"
@32@0:8@16Q24
@"TSCEEdgeListPrinter"
@32@0:8{TSKUIDStruct=QQ}16
v32@0:8@16Q24
v32@0:8Q16Q24
v32@0:8Q16q24
v24@0:8C16C20
v28@0:8C16q20
v28@0:8C16@20
v56@0:8@16@24@32@40q48
v56@0:8^v16^v24^v32@40C48B52
{vector<unsigned long, std::allocator<unsigned long>>=^Q^Q{__compressed_pair<unsigned long *, std::allocator<unsigned long>>=^Q}}20@0:8S16
q24@0:8r^{TSKUIDStruct=QQ}16
S24@0:8r^{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}16
B24@0:8r^{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}16
@24@0:8S16B20
{vector<TSTGroupNode *, std::allocator<TSTGroupNode *>>=^@^@{__compressed_pair<TSTGroupNode *__strong *, std::allocator<TSTGroupNode *>>=^@}}16@0:8
r^v24@0:8r^{TSKUIDStruct=QQ}16
{TSKUIDStruct=QQ}32@0:8r^{TSKUIDStruct=QQ}16^Q24
Q24@0:8r^{TSKUIDStruct=QQ}16
S24@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
@24@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
@28@0:8Q16B24
@32@0:8Q16@24
@40@0:8Q16B24B28@32
S32@0:8@16@24
{TSKUIDStruct=QQ}24@0:8@16
@32@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16^C24
@28@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16C24
{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}24@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
@44@0:8@16r^v24Q32B40
@32@0:8r^{TSKUIDStruct=QQ}16@24
@44@0:8@16@24@32C40
@48@0:8@16@24r^{TSKUIDStruct=QQ}32@40
@36@0:8@16S24@28
B32@0:8r^{TSKUIDStruct=QQ}16q24
@32@0:8r^{TSKUIDStruct=QQ}16q24
v52@0:8r^{TSKUIDStruct=QQ}16@24@32B40@44
@28@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16B24
B40@0:8@16{TSKUIDStruct=QQ}24
{vector<TSTGroupBy *, std::allocator<TSTGroupBy *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<TSTGroupBy *__strong *, std::allocator<TSTGroupBy *>>="__value_"^@}}
{TSKUIDStructVectorTemplate<TSKUIDStruct>="__begin_"^{TSKUIDStruct}"__end_"^{TSKUIDStruct}"__end_cap_"{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>="__value_"^{TSKUIDStruct}}}
{unordered_map<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
{unordered_map<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
{unordered_map<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
{vector<TSUIndexSet, std::allocator<TSUIndexSet>>="__begin_"^{TSUIndexSet}"__end_"^{TSUIndexSet}"__end_cap_"{__compressed_pair<TSUIndexSet *, std::allocator<TSUIndexSet>>="__value_"^{TSUIndexSet}}}
@"TSTGroupingColumnList"
@"TSTColumnAggregateList"
^{TSCEASTNodeArray=*QQB}16@0:8
{?=b48}16@0:8
^{TSCEASTNodeArray=*QQB}
{?="formulaID"b48}
v28@0:8@16i24
v24@0:8i16i20
v24@0:8B16i20
v24@0:8f16i20
@"TSSPropertyMap"
{vector<TSCEFunctionIndex, std::allocator<TSCEFunctionIndex>>=^S^S{__compressed_pair<TSCEFunctionIndex *, std::allocator<TSCEFunctionIndex>>=^S}}16@0:8
v32@0:8r^v16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24
v40@0:8@16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24^B32
{unordered_map<TSCEFunctionIndex, TSCEReferenceSet *, std::hash<TSCEFunctionIndex>, std::equal_to<TSCEFunctionIndex>, std::allocator<std::pair<const TSCEFunctionIndex, TSCEReferenceSet *>>>="__table_"{__hash_table<std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, std::__unordered_map_hasher<TSCEFunctionIndex, std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, std::hash<TSCEFunctionIndex>, std::equal_to<TSCEFunctionIndex>, true>, std::__unordered_map_equal<TSCEFunctionIndex, std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, std::equal_to<TSCEFunctionIndex>, std::hash<TSCEFunctionIndex>, true>, std::allocator<std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSCEFunctionIndex, std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, std::hash<TSCEFunctionIndex>, std::equal_to<TSCEFunctionIndex>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSCEFunctionIndex, std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, std::equal_to<TSCEFunctionIndex>, std::hash<TSCEFunctionIndex>, true>>="__value_"f}}}
{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}
@96@0:8@16{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}}24r^v72q80B88B92
@"TSUPair"24@0:8@"TSTTableInfo"16
{vector<TSUViewCellRect, std::allocator<TSUViewCellRect>>=^{TSUViewCellRect}^{TSUViewCellRect}{__compressed_pair<TSUViewCellRect *, std::allocator<TSUViewCellRect>>=^{TSUViewCellRect}}}16@0:8
{vector<TSKUIDStructTract, std::allocator<TSKUIDStructTract>>=^{TSKUIDStructTract}^{TSKUIDStructTract}{__compressed_pair<TSKUIDStructTract *, std::allocator<TSKUIDStructTract>>=^{TSKUIDStructTract}}}16@0:8
v32@0:8@?16@?24
@32@0:8@16@?24
v40@0:8Q16Q24@?32
v32@0:8Q16@?24
v104@0:8@?16@?24@?32@?40@?48@?56@?64@?72@?80@?88@?96
v40@0:8{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}16
@88@0:8@16{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}}24r^v72q80
@88@0:8@16{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}24{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}}40
@40@0:8@16{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}24
@72@0:8@16{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}}24
v32@0:8@16{TSUViewCellCoord={TSUCellCoord=ISBB}}24
v40@0:8Q16Q24Q32
v36@0:8^v16@24B32
{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16@0:8
v32@0:8{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{TSUViewCellRect="_rect"{TSUCellRect="origin"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}"size"{?="numberOfColumns"I"numberOfRows"I}}}
{vector<TSTCell *, std::allocator<TSTCell *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<TSTCell *__strong *, std::allocator<TSTCell *>>="__value_"^@}}
{vector<TSUModelRowIndex, std::allocator<TSUModelRowIndex>>="__begin_"^{TSUModelRowIndex}"__end_"^{TSUModelRowIndex}"__end_cap_"{__compressed_pair<TSUModelRowIndex *, std::allocator<TSUModelRowIndex>>="__value_"^{TSUModelRowIndex}}}
{vector<TSUModelColumnIndex, std::allocator<TSUModelColumnIndex>>="__begin_"^{TSUModelColumnIndex}"__end_"^{TSUModelColumnIndex}"__end_cap_"{__compressed_pair<TSUModelColumnIndex *, std::allocator<TSUModelColumnIndex>>="__value_"^{TSUModelColumnIndex}}}
{vector<TSUViewRowIndex, std::allocator<TSUViewRowIndex>>="__begin_"^{TSUViewRowIndex}"__end_"^{TSUViewRowIndex}"__end_cap_"{__compressed_pair<TSUViewRowIndex *, std::allocator<TSUViewRowIndex>>="__value_"^{TSUViewRowIndex}}}
{vector<TSUViewColumnIndex, std::allocator<TSUViewColumnIndex>>="__begin_"^{TSUViewColumnIndex}"__end_"^{TSUViewColumnIndex}"__end_cap_"{__compressed_pair<TSUViewColumnIndex *, std::allocator<TSUViewColumnIndex>>="__value_"^{TSUViewColumnIndex}}}
{vector<long, std::allocator<long>>="__begin_"^q"__end_"^q"__end_cap_"{__compressed_pair<long *, std::allocator<long>>="__value_"^q}}
@"TSUPointerKeyDictionary"
v32@0:8@16{TSUColumnRowOffset=ii}24
@"NSMutableIndexSet"
@"TSKStructuredTextImportSettings"
@"NSURL"
@"NSDate"
@"NSData"
#24@0:8@16
v24@0:8i16I20
@32@0:8@16I24B28
v28@0:8I16@20
v24@0:8I16B20
{unordered_map<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *, TSTTableDataPayloadHash, TSTTableDataPayloadEqual, std::allocator<std::pair<NSObject<TSTTableDataPayloadHashing> *const, TSTTableDataObject *>>>="__table_"{__hash_table<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, std::__unordered_map_hasher<NSObject<TSTTableDataPayloadHashing> *, std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, TSTTableDataPayloadHash, TSTTableDataPayloadEqual, true>, std::__unordered_map_equal<NSObject<TSTTableDataPayloadHashing> *, std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, TSTTableDataPayloadEqual, TSTTableDataPayloadHash, true>, std::allocator<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<NSObject<TSTTableDataPayloadHashing> *, std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, TSTTableDataPayloadHash, TSTTableDataPayloadEqual, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<NSObject<TSTTableDataPayloadHashing> *, std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, TSTTableDataPayloadEqual, TSTTableDataPayloadHash, true>>="__value_"f}}}
@"NSObject<TSDContainerInfo><TSWPStorageParent>"
@"TSTTableDataListSegment"
I32@0:8@16I24B28
@36@0:8I16^B20^B28
v40@0:8@16Q24@32
@44@0:8@16@24@32B40
I24@0:8@16
@76@0:8i16@20{CGAffineTransform=dddddd}28
@"TSKSelection"16@0:8
v24@0:8@"TSKSelection"16
@"TSKSelection"24@0:8@"TSKSelection"16
@"TSTCellSelection"
@76@0:8{TSKUIDStruct=QQ}16{TSKUIDStruct=QQ}32C48i52C56{TSKUIDStruct=QQ}60
@40@0:8{TSKUIDStruct=QQ}16C32i36
@36@0:8{TSKUIDStruct=QQ}16C32
@56@0:8{TSKUIDStruct=QQ}16C32C36{TSKUIDStruct=QQ}40
@72@0:8{TSKUIDStruct=QQ}16{TSKUIDStruct=QQ}32C48C52{TSKUIDStruct=QQ}56
v24@0:8[16C]16
{UUIDData<TSP::UUIDData>=""(?="_uuid"[16C]"_cfuuid"{?="byte0"C"byte1"C"byte2"C"byte3"C"byte4"C"byte5"C"byte6"C"byte7"C"byte8"C"byte9"C"byte10"C"byte11"C"byte12"C"byte13"C"byte14"C"byte15"C}""{?="_lower"Q"_upper"Q})}
@32@0:8r^{TSCEStringValue=^^?@{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}b1b1b1}16@24
^{TSCEStringValue=^^?@{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}b1b1b1}16@0:8
^{TSCEStringValue=^^?@{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}b1b1b1}
@"TSWPPadding"
@56@0:8r^v16r^v24Q32@40@48
v32@0:8^v16^v24
v40@0:8^v16^v24@32
@28@0:8I16^{_NSRange=QQ}20
B40@0:8{TSUCellCoord=ISBB}16@24^@32
{multimap<TSUCellCoord, std::tuple<unsigned int, unsigned long, TSTCellStorage *>, std::less<TSUCellCoord>, std::allocator<std::pair<const TSUCellCoord, std::tuple<unsigned int, unsigned long, TSTCellStorage *>>>>={__tree<std::__value_type<TSUCellCoord, std::tuple<unsigned int, unsigned long, TSTCellStorage *>>, std::__map_value_compare<TSUCellCoord, std::__value_type<TSUCellCoord, std::tuple<unsigned int, unsigned long, TSTCellStorage *>>, std::less<TSUCellCoord>, true>, std::allocator<std::__value_type<TSUCellCoord, std::tuple<unsigned int, unsigned long, TSTCellStorage *>>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSUCellCoord, std::tuple<unsigned int, unsigned long, TSTCellStorage *>>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<TSUCellCoord, std::__value_type<TSUCellCoord, std::tuple<unsigned int, unsigned long, TSTCellStorage *>>, std::less<TSUCellCoord>, true>>=Q}}}16@0:8
[16@"TSTTableTileGroup"]
@40@0:8r^v16@24@32
v24@0:8C16I20
Q36@0:8I16^@20^@28
@48@0:8I16C20d24{TSKUIDStruct=QQ}32
v28@0:8I16Q20
[16@"TSTTableHeaderStorageBucket"]
@34@0:8Q16{TSUModelColumnIndex=S}24@26
@"TSUSparseArray"
@128@0:8{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16@112^v120
B120@0:8{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16^v112
{TSCENumberValue="_vptr$TSCEAbstractValue"^^?"_decimal"{TSUDecimal="_decimal"{?="w"[2Q]}}"_format"{TSCEFormat="_tskFormat"@"TSKFormat""_formatType"I"_formatState"C"_durationFormat"{TSCEDurationFormat="_useAutomaticUnits"b1"_durationUnitSmallest"b6"_durationUnitLargest"b6"_durationStyle"b3}"_baseFormat"{TSCEBaseFormat="base"C"basePlaces"C"baseUseMinusSign"B}"_fractionFormat"{TSCEFractionFormat="fractionAccuracy"c}"_numberFormat"{TSCENumberFormat="decimalPlaces"C"negativeStyle"b3"showThousandsSeparator"b1"useAccountingStyle"b1"currencyCodeIndex"S}}"_baseUnit"S"_isUnitlessZero"B}
@"TSCERegexMatcher"
Q24@0:8r^{TSUCellCoord=ISBB}16
{TSUCellCoord=ISBB}24@0:8Q16
@32@0:8r^v16r^{TSKUIDStruct=QQ}24
{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}32@0:8@16r^{TSUModelCellCoord={TSUCellCoord=ISBB}}24
{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}36@0:8@16r^{TSUModelCellCoord={TSUCellCoord=ISBB}}24B32
{TSKUIDStruct=QQ}32@0:8@16r^{TSUModelCellCoord={TSUCellCoord=ISBB}}24
@48@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16Q32r^{TSKUIDStruct=QQ}40
{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}28@0:8Q16B24
{TSKUIDStruct=QQ}24@0:8Q16
@40@0:8r^{TSKUIDStruct=QQ}16r^v24@32
c24@0:8^v16
{TSCEGridDimensions=II}16@0:8
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}32@0:8r^{TSCEGridCoord=II}16^{TSCEGridAccessContext=@^{TSCEFunctionArgSpec}i^{TSCEEvaluationContext}BBBBBCC{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}24
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}32@0:8Q16^{TSCEGridAccessContext=@^{TSCEFunctionArgSpec}i^{TSCEEvaluationContext}BBBBBCC{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}24
{TSCEGrid=^^?@{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}}24@0:8^{TSCEGridAccessContext=@^{TSCEFunctionArgSpec}i^{TSCEEvaluationContext}BBBBBCC{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}16
{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}32@0:8Q16^{TSCEGridAccessContext=@^{TSCEFunctionArgSpec}i^{TSCEEvaluationContext}BBBBBCC{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}24
{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}24@0:8^{TSCEGridAccessContext=@^{TSCEFunctionArgSpec}i^{TSCEEvaluationContext}BBBBBCC{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}16
B28@0:8i16^v20
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}40@0:8r^{TSCEGridCoord=II}16i24i28^{TSCEGridAccessContext=@^{TSCEFunctionArgSpec}i^{TSCEEvaluationContext}BBBBBCC{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}32
^{TSCEASTNodeArray=*QQB}40@0:8@16i24B28^v32
{TSCENumberValue=^^?{TSUDecimal={?=[2Q]}}{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}SB}36@0:8@16i24^v28
@36@0:8@16i24^v28
B36@0:8@16i24^v28
@36@0:8@16i24@28
{TSCEReferenceValue=^^?@{TSUCellCoord=ISBB}{TSUPreserveFlags=C}BB}36@0:8@16i24^v28
v28@0:8B16Q20
@"<TSWPStyleProvider>"16@0:8
@"<TSWPStyleProvider>"24@0:8@"TSWPLayout"16
B24@0:8@"TSWPLayout"16
@28@0:8@16I24
d32@0:8Q16d24
d56@0:8Q16d24@32^d40^d48
{UIEdgeInsets=dddd}24@0:8@16
d56@0:8Q16d24@"<TSWPLayoutTarget>"32^d40^d48
{UIEdgeInsets=dddd}24@0:8@"<TSWPLayoutTarget>"16
@"TSWPPadding"16@0:8
@"TSWPPadding"24@0:8@"<TSWPLayoutTarget>"16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16
{CGRect={CGPoint=dd}{CGSize=dd}}40@0:8@16{CGSize=dd}24
d24@0:8@16
{CGSize=dd}16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}60@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48B56
Q24@0:8@"TSWPLayout"16
i24@0:8@"TSWPLayout"16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@"TSWPLayout"16
{CGRect={CGPoint=dd}{CGSize=dd}}40@0:8@"TSWPLayout"16{CGSize=dd}24
@"<NSFastEnumeration>"24@0:8@"TSWPLayout"16
#24@0:8@"TSWPLayout"16
v24@0:8@"TSWPLayout"16
@"NSSet"24@0:8@"TSWPLayout"16
d24@0:8@"TSWPLayout"16
q24@0:8@"TSWPLayout"16
Q24@0:8@"TSWPAttachment"16
{CGRect={CGPoint=dd}{CGSize=dd}}60@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@"TSKSelectionPath"48B56
v64@0:8@16{_NSRange=QQ}24q40Q48@56
v64@0:8@"TSWPStorage"16{_NSRange=QQ}24q40Q48@"NSArray"56
{CGPoint=dd}16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
d24@0:8o^d16
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}104@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48{CGAffineTransform=dddddd}56
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8{?={?=II}{?=II}}16
@76@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16i32d36d44B52B56d60^@68
@76@0:8{?={?=II}{?=II}}16i32d36d44B52B56d60^@68
v112@0:8@16I24{CGAffineTransform=dddddd}28d76d84B92d96@?104
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24@0:8@16
{CGSize=dd}24@0:8@16
{UIEdgeInsets=dddd}16@0:8
d32@0:8@16d24
{CGPoint=dd}24@0:8@16
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8{TSUCellCoord=ISBB}16^B24
{CGSize=dd}32@0:8{?={?=II}{?=II}}16
B32@0:8{?={?=II}{?=II}}16
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8@16{CGSize=dd}24^{TSUCellRect={TSUCellCoord=ISBB}{?=II}}40
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@"TSTLayoutSpaceBundle"
{?="tableNameHeight"d"scaleToFitParent"{CGSize="width"d"height"d}"scaleToFitEnclosingTextColumn"{CGSize="width"d"height"d}}
@"TSWPLayout"
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
{CGSize="width"d"height"d}
v24@0:8r^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}20@0:8B16
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}20@0:8C16
{TSCEValue=""(?="DONT_USE_fakeTSCENumberValueStandIn"{?="_decimal"{?="w"[2Q]}"_formatFake"[24C]"_baseUnit"S"_isUnitlessZero"B}"_buff"[9Q])"_type"C}
{TSCEDateValue="_vptr$TSCEAbstractValue"^^?"mDate"@"NSDate""mFormat"{TSCEFormat="_tskFormat"@"TSKFormat""_formatType"I"_formatState"C"_durationFormat"{TSCEDurationFormat="_useAutomaticUnits"b1"_durationUnitSmallest"b6"_durationUnitLargest"b6"_durationStyle"b3}"_baseFormat"{TSCEBaseFormat="base"C"basePlaces"C"baseUseMinusSign"B}"_fractionFormat"{TSCEFractionFormat="fractionAccuracy"c}"_numberFormat"{TSCENumberFormat="decimalPlaces"C"negativeStyle"b3"showThousandsSeparator"b1"useAccountingStyle"b1"currencyCodeIndex"S}}}
v24@0:8r^{TSCEInternalCellReference={TSUCellCoord=ISBB}SS}16
v28@0:8r^v16S24
v24@0:8r^{TSCEInternalRangeReference={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}S}16
v40@0:8^v16@24d32
B24@0:8d16
B24@0:8r^{TSCEInternalCellReference={TSUCellCoord=ISBB}SS}16
@"TSCECellDirtier"
{TSCEInternalCellRefSet="_coordsForOwnerId"{unordered_map<unsigned short, TSCECellCoordSet, std::hash<unsigned short>, std::equal_to<unsigned short>, std::allocator<std::pair<const unsigned short, TSCECellCoordSet>>>="__table_"{__hash_table<std::__hash_value_type<unsigned short, TSCECellCoordSet>, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, TSCECellCoordSet>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, TSCECellCoordSet>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>, std::allocator<std::__hash_value_type<unsigned short, TSCECellCoordSet>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, TSCECellCoordSet>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, TSCECellCoordSet>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>>="__value_"f}}}}
{vector<TSCEInternalRangeReference, std::allocator<TSCEInternalRangeReference>>="__begin_"^{TSCEInternalRangeReference}"__end_"^{TSCEInternalRangeReference}"__end_cap_"{__compressed_pair<TSCEInternalRangeReference *, std::allocator<TSCEInternalRangeReference>>="__value_"^{TSCEInternalRangeReference}}}
@40@0:8@16{TSUViewCellCoord={TSUCellCoord=ISBB}}24@32
@32@0:8^{TSCEErrorValue=^^?@}16@24
^{TSCEErrorValue=^^?@}16@0:8
^{TSCEErrorValue=^^?@}
@36@0:8r^{TSUChromeColumnIndex=S}16r^{TSKUIDStruct=QQ}24B32
@"NSString"32@0:8r^v16@"TSCERefNamingContext"24
@"NSString"32@0:8@"TSCECellTractRef"16@"TSCERefNamingContext"24
@"NSString"40@0:8@"TSCECellTractRef"16@"TSCERefNamingContext"24@"TSCECoordMapper"32
@"NSString"36@0:8r^{TSUChromeColumnIndex=S}16r^{TSKUIDStruct=QQ}24B32
@"NSString"32@0:8@"TSCEWrappedRangeRef"16@"TSCERefNamingContext"24
@32@0:8r^{TSUCellCoord=ISBB}16@24
@44@0:8r^{TSUCellCoord=ISBB}16B24@28^{TSUCellRect={TSUCellCoord=ISBB}{?=II}}36
@36@0:8S16@20@28
@44@0:8r^v16@24B32@36
@56@0:8@16B24B28^{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}32@40@48
{TSCERecalculationState=C}33@0:8{TSUCellCoord=ISBB}16@24{TSCERecalculationState=C}32
{TSCERecalculationState=C}33@0:8r^v16@24{TSCERecalculationState=C}32
@"<TSCEReferenceResolving>"16@0:8
{TSCERecalculationState=C}33@0:8{TSUCellCoord=ISBB}16@"TSCECalculationEngine"24{TSCERecalculationState=C}32
{TSCERecalculationState=C}33@0:8r^v16@"TSCECalculationEngine"24{TSCERecalculationState=C}32
@40@0:8r^{TSKUIDStruct=QQ}16{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}24
v48@0:8{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}16r^{TSKUIDStruct=QQ}32@40
v40@0:8{TSUCellCoord=ISBB}16r^{TSKUIDStruct=QQ}24@32
@24@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16
@"TSCETrackedReferenceStore"
v40@0:8r^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16@24^v32
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}24@0:8@16
^{TSCENumberValue=^^?{TSUDecimal={?=[2Q]}}{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}SB}16@0:8
@36@0:8@16@24B32
v56@0:8@16{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24
v60@0:8@16{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24B56
@"TSCEBulkCellChangeMinion"
@"NSObject<OS_dispatch_queue>"
{TSUModelColumnIndex=S}18@0:8{TSUViewColumnIndex=S}16
{TSUModelRowIndex=I}20@0:8{TSUViewRowIndex=I}16
{TSUModelColumnIndex=S}18@0:8{TSUChromeColumnIndex=S}16
{TSUModelRowIndex=I}20@0:8{TSUChromeRowIndex=I}16
{TSUChromeColumnIndex=S}18@0:8{TSUModelColumnIndex=S}16
{TSUChromeRowIndex=I}20@0:8{TSUModelRowIndex=I}16
{TSUViewColumnIndex=S}18@0:8{TSUModelColumnIndex=S}16
{TSUViewRowIndex=I}20@0:8{TSUModelRowIndex=I}16
{TSUChromeColumnIndex=S}18@0:8{TSUViewColumnIndex=S}16
{TSUChromeRowIndex=I}20@0:8{TSUViewRowIndex=I}16
{TSUViewColumnIndex=S}18@0:8{TSUChromeColumnIndex=S}16
{TSUViewRowIndex=I}20@0:8{TSUChromeRowIndex=I}16
{TSUModelCellCoord={TSUCellCoord=ISBB}}24@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16
{TSUModelCellCoord={TSUCellCoord=ISBB}}24@0:8{TSUChromeCellCoord={TSUCellCoord=ISBB}}16
{TSUChromeCellCoord={TSUCellCoord=ISBB}}24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
{TSUChromeCellCoord={TSUCellCoord=ISBB}}24@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16
{TSUViewCellCoord={TSUCellCoord=ISBB}}24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
{TSUViewCellCoord={TSUCellCoord=ISBB}}24@0:8{TSUChromeCellCoord={TSUCellCoord=ISBB}}16
{RefTypeHolder<TSCECellRef, 0>={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}}24@0:8r^v16
{RefTypeHolder<TSCECellRef, 2>={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}}24@0:8r^v16
{RefTypeHolder<TSCECellRef, 1>={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}}24@0:8r^v16
{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}24@0:8r^v16
{RefTypeHolder<TSCERangeRef, 1>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}24@0:8r^v16
r^{TSKUIDStruct=QQ}16@0:8
@"TSCECellTractRef"24@0:8@"TSCECellTractRef"16
@"TSKShuffleMapping"24@0:8@"TSKShuffleMapping"16
@48@0:8r^{TSKUIDStruct=QQ}16@24@32@40
@40@0:8r^{TSKUIDStruct=QQ}16@24@32
v24@0:8S16S20
{unordered_map<unsigned int, unsigned int, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<const unsigned int, unsigned int>>>="__table_"{__hash_table<std::__hash_value_type<unsigned int, unsigned int>, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, unsigned int>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, unsigned int>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>, std::allocator<std::__hash_value_type<unsigned int, unsigned int>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, unsigned int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, unsigned int>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, unsigned int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, unsigned int>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, unsigned int>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, unsigned int>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, unsigned int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned int, unsigned int>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, unsigned int>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, unsigned int>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, unsigned int>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>>="__value_"f}}}
{unordered_map<unsigned short, unsigned short, std::hash<unsigned short>, std::equal_to<unsigned short>, std::allocator<std::pair<const unsigned short, unsigned short>>>="__table_"{__hash_table<std::__hash_value_type<unsigned short, unsigned short>, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, unsigned short>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, unsigned short>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>, std::allocator<std::__hash_value_type<unsigned short, unsigned short>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, unsigned short>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, unsigned short>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, unsigned short>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, unsigned short>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, unsigned short>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, unsigned short>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, unsigned short>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned short, unsigned short>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, unsigned short>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, unsigned short>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, unsigned short>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>>="__value_"f}}}
v56@0:8@16i24@28I36{TSTSimpleRange=qQ}40
v36@0:8@16i24{TSUCellCoord=ISBB}28
v24@0:8{?=II}16
v56@0:8@16@?24@?32@?40@?48
{vector<TSTCellBorder *, std::allocator<TSTCellBorder *>>=^@^@{__compressed_pair<TSTCellBorder *__strong *, std::allocator<TSTCellBorder *>>=^@}}28@0:8{TSUModelRowIndex=I}16^v20
@"TSTStrokeLayer"
v40@0:8Q16{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}24
v40@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16Q32
v40@0:8@16{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}24
v44@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16B32@?36
v40@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16@?32
{vector<TSUModelCellRect, std::allocator<TSUModelCellRect>>=^{TSUModelCellRect}^{TSUModelCellRect}{__compressed_pair<TSUModelCellRect *, std::allocator<TSUModelCellRect>>=^{TSUModelCellRect}}}16@0:8
{vector<TSUModelCellRect, std::allocator<TSUModelCellRect>>=^{TSUModelCellRect}^{TSUModelCellRect}{__compressed_pair<TSUModelCellRect *, std::allocator<TSUModelCellRect>>=^{TSUModelCellRect}}}36@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16B32
{vector<TSUModelCellRect, std::allocator<TSUModelCellRect>>=^{TSUModelCellRect}^{TSUModelCellRect}{__compressed_pair<TSUModelCellRect *, std::allocator<TSUModelCellRect>>=^{TSUModelCellRect}}}32@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{vector<TSUModelCellRect, std::allocator<TSUModelCellRect>>=^{TSUModelCellRect}^{TSUModelCellRect}{__compressed_pair<TSUModelCellRect *, std::allocator<TSUModelCellRect>>=^{TSUModelCellRect}}}24@0:8@16
B32@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}32@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{unordered_map<unsigned long, TSUModelCellRect, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, TSUModelCellRect>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, TSUModelCellRect>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, TSUModelCellRect>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, TSUModelCellRect>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, TSUModelCellRect>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUModelCellRect>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUModelCellRect>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUModelCellRect>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUModelCellRect>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUModelCellRect>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUModelCellRect>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUModelCellRect>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, TSUModelCellRect>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUModelCellRect>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, TSUModelCellRect>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, TSUModelCellRect>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}
{TSCECellRangeRTree="_rTree"{TSCECellRangeRTree_Int="m_root"^{Node}}}
{TSCEBitGrid="_tiles"{vector<TSCEBitGridTile *, std::allocator<TSCEBitGridTile *>>="__begin_"^^{TSCEBitGridTile}"__end_"^^{TSCEBitGridTile}"__end_cap_"{__compressed_pair<TSCEBitGridTile **, std::allocator<TSCEBitGridTile *>>="__value_"^^{TSCEBitGridTile}}}"_count"Q"_lastTileFoundAtIndex"Q}
v48@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16Q24{CGSize=dd}32
{vector<unsigned long, std::allocator<unsigned long>>=^Q^Q{__compressed_pair<unsigned long *, std::allocator<unsigned long>>=^Q}}16@0:8
@"TSTCellUIDList"
{vector<unsigned long, std::allocator<unsigned long>>="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::allocator<unsigned long>>="__value_"^Q}}
d24@0:8@"TSDDrawableInfo"16
{CGSize=dd}32@0:8@"TSPData"16@"<NSObject>"24
{?={?=II}{?=II}}24@0:8@16
{?={?=II}{?=II}}40@0:8{?={?=II}{?=II}}16@32
@28@0:8@16i24
v32@0:8{?={?=II}{?=II}}16
{?={?=II}{?=II}}16@0:8
{?={?=II}{?=II}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v64@0:8{CGAffineTransform=dddddd}16
{CGPoint=dd}32@0:8{CGPoint=dd}16
{?=II}36@0:8{CGPoint=dd}16B32
{?=II}32@0:8{CGPoint=dd}16
v40@0:8d16^d24^d32
d32@0:8d16d24
v40@0:8^{CGPoint=dd}16^{CGPoint=dd}24^d32
@60@0:8{?={?=II}{?=II}}16^{CGAffineTransform=dddddd}32d40B48d52
@32@0:8^{CGAffineTransform=dddddd}16d24
{CGRect={CGPoint=dd}{CGSize=dd}}40@0:8{?={?=II}{?=II}}16d32
v112@0:8@16^{CGContext=}24{CGPoint=dd}32{CGPoint=dd}48d64d72{CGRect={CGPoint=dd}{CGSize=dd}}80
B52@0:8I16{?={?=II}{?=II}}20B36i40^{CGContext=}44
v44@0:8{?={?=II}{?=II}}16B32^{CGContext=}36
@52@0:8{?={?=II}{?=II}}16S32@36^B44
@56@0:8{?={?=II}{?=II}}16I32@36B44^B48
I24@0:8d16
d24@0:8d16
i24@0:8{?=II}16
{CGPoint=dd}24@0:8{?=II}16
{?={CGPoint=dd}{CGPoint=dd}{CGPoint=dd}{CGPoint=dd}dddd}44@0:8{?={?=II}{?=II}}16i32^d36
v24@0:8^{?={CGPoint=dd}{CGPoint=dd}{CGPoint=dd}{CGPoint=dd}dddd}16
{?={CGPoint=dd}{CGPoint=dd}{CGPoint=dd}{CGPoint=dd}dddd}40@0:8{?={?=II}{?=II}}16^d32
{?={CGPoint=dd}{CGPoint=dd}{CGPoint=dd}{CGPoint=dd}dddd}32@0:8{?={?=II}{?=II}}16
{CGAffineTransform=dddddd}16@0:8
{_opaque_pthread_rwlock_t="__sig"q"__opaque"[192c]}
@"TSTLayoutSpaceBezierPathCache"
@"TSTCoordinateArray"
{CGPoint="x"d"y"d}
{?="topLeft"{?="column"I"row"I}"bottomRight"{?="column"I"row"I}}
{CGAffineTransform="a"d"b"d"c"d"d"d"tx"d"ty"d}
@28@0:8I16I20B24
@24@0:8^v16
B32@0:8d16@24
B40@0:8r^{TSCEInternalCellReference={TSUCellCoord=ISBB}SS}16d24@32
{TSCEInternalCellReference={TSUCellCoord=ISBB}SS}16@0:8
{TSCEInternalCellReference="coordinate"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}"tableID"S"reserved"S}
{unordered_map<TSCEInternalCellReference, std::vector<TSCEInternalCellReference>, std::hash<TSCEInternalCellReference>, std::equal_to<TSCEInternalCellReference>, std::allocator<std::pair<const TSCEInternalCellReference, std::vector<TSCEInternalCellReference>>>>="__table_"{__hash_table<std::__hash_value_type<TSCEInternalCellReference, std::vector<TSCEInternalCellReference>>, std::__unordered_map_hasher<TSCEInternalCellReference, std::__hash_value_type<TSCEInternalCellReference, std::vector<TSCEInternalCellReference>>, std::hash<TSCEInternalCellReference>, std::equal_to<TSCEInternalCellReference>, true>, std::__unordered_map_equal<TSCEInternalCellReference, std::__hash_value_type<TSCEInternalCellReference, std::vector<TSCEInternalCellReference>>, std::equal_to<TSCEInternalCellReference>, std::hash<TSCEInternalCellReference>, true>, std::allocator<std::__hash_value_type<TSCEInternalCellReference, std::vector<TSCEInternalCellReference>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::vector<TSCEInternalCellReference>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::vector<TSCEInternalCellReference>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::vector<TSCEInternalCellReference>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::vector<TSCEInternalCellReference>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::vector<TSCEInternalCellReference>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::vector<TSCEInternalCellReference>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::vector<TSCEInternalCellReference>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::vector<TSCEInternalCellReference>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::vector<TSCEInternalCellReference>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSCEInternalCellReference, std::__hash_value_type<TSCEInternalCellReference, std::vector<TSCEInternalCellReference>>, std::hash<TSCEInternalCellReference>, std::equal_to<TSCEInternalCellReference>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSCEInternalCellReference, std::__hash_value_type<TSCEInternalCellReference, std::vector<TSCEInternalCellReference>>, std::equal_to<TSCEInternalCellReference>, std::hash<TSCEInternalCellReference>, true>>="__value_"f}}}
v40@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24r^{TSKUIDStruct=QQ}32
v32@0:8@16r^{TSKUIDStruct=QQ}24
v32@0:8r^v16r^{TSKUIDStruct=QQ}24
v40@0:8@"TSTCell"16{TSUModelCellCoord={TSUCellCoord=ISBB}}24r^{TSKUIDStruct=QQ}32
v32@0:8@"TSTCellMap"16r^{TSKUIDStruct=QQ}24
v32@0:8@"TSTConcurrentCellMap"16r^{TSKUIDStruct=QQ}24
{vector<TSU::UUIDData<TSP::UUIDData>, std::allocator<TSU::UUIDData<TSP::UUIDData>>>=^v^v{__compressed_pair<TSU::UUIDData<TSP::UUIDData> *, std::allocator<TSU::UUIDData<TSP::UUIDData>>>=^v}}16@0:8
{unordered_set<TSKUIDStruct, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<TSKUIDStruct>>="__table_"{__hash_table<TSKUIDStruct, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<TSKUIDStruct>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *>, std::allocator<std::__hash_node<TSKUIDStruct, void *>>>="__value_"{__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::hash<TSKUIDStruct>>="__value_"Q}"__p3_"{__compressed_pair<float, std::equal_to<TSKUIDStruct>>="__value_"f}}}
@"TSTExpressionNode"
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}48@0:8r^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16^v24B32^B36B44
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}40@0:8r^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16^v24B32B36
@72@0:8@16@24r^{TSKUIDStruct=QQ}32r^{TSUCellCoord=ISBB}40^@48^B56B64B68
@48@0:8@16@24r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}32^@40
r^{TSCEASTNodeArray=*QQB}16@0:8
@49@0:8r^{TSCEASTNodeArray=*QQB}16{TSCEFormulaTranslationFlags=C}24r^{TSKUIDStruct=QQ}25r^{TSKUIDStruct=QQ}33r^{TSKUIDStruct=QQ}41
@25@0:8r^{TSCEASTNodeArray=*QQB}16{TSCEFormulaTranslationFlags=C}24
@24@0:8r^{TSCEASTNodeArray=*QQB}16
@33@0:8{TSCEFormulaCreator=@?}16^{TSCEASTNodeArgInfo=i[3i]{TSKUIDStruct=QQ}{TSUCellCoord=ISBB}}24{TSCEFormulaTranslationFlags=C}32
@25@0:8{TSCEFormulaCreator=@?}16{TSCEFormulaTranslationFlags=C}24
@24@0:8{TSCEFormulaCreator=@?}16
@28@0:8r^v16B24
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}36@0:8^v16B24^B28
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}24@0:8^v16
B48@0:8@16Q24^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}32^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}40
v48@0:8^v16@24r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}32B40B44
{vector<TSCECategoryRef *, std::allocator<TSCECategoryRef *>>=^@^@{__compressed_pair<TSCECategoryRef *__strong *, std::allocator<TSCECategoryRef *>>=^@}}24@0:8@16
@36@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16@24B32
@32@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16@24
@32@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16^B24
@48@0:8@16@24r^{TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}32^B40
@40@0:8@16@24r^{TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}32
@40@0:8r^{TSKUIDStruct=QQ}16r^{TSKUIDStruct=QQ}24r^{TSKUIDStruct=QQ}32
@17@0:8{TSCEFormulaTranslationFlags=C}16
@32@0:8^{TSCEFormulaRewriteContext=@@{TSCEFormulaRewriteContextRecord={TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}{TSKUIDStruct=QQ}{TSUColumnRowOffset=ii}BBBBBBB}}16@?24
v40@0:8^{TSCEFormulaRewriteContext=@@{TSCEFormulaRewriteContextRecord={TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}{TSKUIDStruct=QQ}{TSUColumnRowOffset=ii}BBBBBBB}}16^B24@?32
@24@0:8^{TSCEFormulaRewriteContext=@@{TSCEFormulaRewriteContextRecord={TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}{TSKUIDStruct=QQ}{TSUColumnRowOffset=ii}BBBBBBB}}16
@28@0:8^{TSCEFormulaRewriteContext=@@{TSCEFormulaRewriteContextRecord={TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}{TSKUIDStruct=QQ}{TSUColumnRowOffset=ii}BBBBBBB}}16B24
@32@0:8@16r^{TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}24
@32@0:8@16r^{TSKUIDStruct=QQ}24
@40@0:8r^v16^{TSCEFormulaRewriteContext=@@{TSCEFormulaRewriteContextRecord={TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}{TSKUIDStruct=QQ}{TSUColumnRowOffset=ii}BBBBBBB}}24^B32
@44@0:8r^v16r^v24r^v32B40
@32@0:8r^{TSKUIDStruct=QQ}16^B24
@44@0:8^v16B24^B28*36
@32@0:8@16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24
@60@0:8^v16^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}24^B32^B40^@48I56
@40@0:8^v16^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}24^B32
@28@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16C24
@48@0:8@16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24r^{TSKUIDStruct=QQ}32{TSUColumnRowOffset=ii}40
@24@0:8{TSUColumnRowOffset=ii}16
@32@0:8r^{TSKUIDStruct=QQ}16r^{TSKUIDStruct=QQ}24
C32@0:8^v16@24
{TSCEFormulaTranslationFlags=C}16@0:8
{TSCEFormulaTranslationFlags="_flags"C}
@52@0:8@16@24I32Q36Q44
{TSTCSENodeData=QQ}24@0:8@16
@60@0:8@16@24{TSUCellCoord=ISBB}32B40^v44@52
v40@0:8^{TSCEASTNodeArray=*QQB}16{TSUCellCoord=ISBB}24^v32
@84@0:8q16{_NSRange=QQ}24q40q48{_NSRange=QQ}56B72Q76
@96@0:8q16@24B32q36q44{_NSRange=QQ}52B68Q72Q80Q88
@112@0:8q16{_NSRange=QQ}24B40q44q52{_NSRange=QQ}60B76Q80Q88Q96Q104
@92@0:8q16{_NSRange=QQ}24q40q48{_NSRange=QQ}56B72Q76Q84
B40@0:8@16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24
{TSTCellRegionGathererMap="_cellRangeIndex"Q"_rowRange"{_NSRange="location"Q"length"Q}"_cellRanges"{unordered_map<unsigned long, TSUCellRect, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, TSUCellRect>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, TSUCellRect>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, TSUCellRect>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, TSUCellRect>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, TSUCellRect>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUCellRect>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUCellRect>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUCellRect>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUCellRect>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUCellRect>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUCellRect>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUCellRect>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, TSUCellRect>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUCellRect>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, TSUCellRect>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, TSUCellRect>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}"_encodedJoinCoordToCandidateIndexMap"{unordered_map<TSTCellRegionGathererKey, unsigned long, std::hash<TSTCellRegionGathererKey>, std::equal_to<TSTCellRegionGathererKey>, std::allocator<std::pair<const TSTCellRegionGathererKey, unsigned long>>>="__table_"{__hash_table<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, std::__unordered_map_hasher<TSTCellRegionGathererKey, std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, std::hash<TSTCellRegionGathererKey>, std::equal_to<TSTCellRegionGathererKey>, true>, std::__unordered_map_equal<TSTCellRegionGathererKey, std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, std::equal_to<TSTCellRegionGathererKey>, std::hash<TSTCellRegionGathererKey>, true>, std::allocator<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSTCellRegionGathererKey, std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, std::hash<TSTCellRegionGathererKey>, std::equal_to<TSTCellRegionGathererKey>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSTCellRegionGathererKey, std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, std::equal_to<TSTCellRegionGathererKey>, std::hash<TSTCellRegionGathererKey>, true>>="__value_"f}}}}
{unordered_map<TSUCellCoord, TSUCellRect, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, std::allocator<std::pair<const TSUCellCoord, TSUCellRect>>>="__table_"{__hash_table<std::__hash_value_type<TSUCellCoord, TSUCellRect>, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSUCellRect>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSUCellRect>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>, std::allocator<std::__hash_value_type<TSUCellCoord, TSUCellRect>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellRect>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellRect>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellRect>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellRect>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellRect>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellRect>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellRect>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellRect>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellRect>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSUCellRect>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSUCellRect>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>>="__value_"f}}}
^{TSCEASTNodeArray=*QQB}24@0:8Q16
^v24@0:8Q16
^{TSCERegionNode=Q^{TSCERegionNode}^v}
{vector<TSCEASTNodeArray *, std::allocator<TSCEASTNodeArray *>>="__begin_"^^{TSCEASTNodeArray}"__end_"^^{TSCEASTNodeArray}"__end_cap_"{__compressed_pair<TSCEASTNodeArray **, std::allocator<TSCEASTNodeArray *>>="__value_"^^{TSCEASTNodeArray}}}
{vector<TSCECellRef, std::allocator<TSCECellRef>>=^{TSCECellRef}^{TSCECellRef}{__compressed_pair<TSCECellRef *, std::allocator<TSCECellRef>>=^{TSCECellRef}}}32@0:8r^{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}16r^{TSKUIDStruct=QQ}24
{vector<TSCECellRef, std::allocator<TSCECellRef>>=^{TSCECellRef}^{TSCECellRef}{__compressed_pair<TSCECellRef *, std::allocator<TSCECellRef>>=^{TSCECellRef}}}24@0:8@16
@"TSTAggNode"
v56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16^{CGContext=}48
@"TSTTableStyleNetwork"
v28@0:8B16@20
v36@0:8B16{_NSRange=QQ}20
Q32@0:8{_NSRange=QQ}16
B32@0:8{_NSRange=QQ}16
Q32@0:8Q16Q24
v40@0:8{_NSRange=QQ}16Q32
@32@0:8r^{TSKUIDStruct=QQ}16r^{TSUPreserveFlags=C}24
@32@0:8@16r^{TSUCellCoord=ISBB}24
@32@0:8r^{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16r^{TSUCellCoord=ISBB}24
v20@0:8s16
{TSCERelativeCellCoordinate=isBB}16@0:8
{?={TSCERelativeCellCoordinate=isBB}{TSCERelativeCellCoordinate=isBB}}24@0:8r^{TSUCellCoord=ISBB}16
v40@0:8@16r^{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}24r^{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}32
@32@0:8r^{TSUCellCoord=ISBB}16^B24
@24@0:8r^{TSUCellCoord=ISBB}16
@48@0:8@16Q24@32Q40
@80@0:8@16Q24@32@?40@?48@?56@?64@?72
@48@0:8@16Q24@32@?40
Q42@0:8C16C20Q24Q32{TSUViewColumnIndex=S}40
Q28@0:8C16C20B24
@40@0:8@16@24Q32
@32@0:8^{_NSZone=}16@24
@36@0:8Q16@24B32
@52@0:8@16@24d32B40Q44
{vector<TSTCellStyle *, std::allocator<TSTCellStyle *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<TSTCellStyle *__strong *, std::allocator<TSTCellStyle *>>="__value_"^@}}
{vector<TSWPParagraphStyle *, std::allocator<TSWPParagraphStyle *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<TSWPParagraphStyle *__strong *, std::allocator<TSWPParagraphStyle *>>="__value_"^@}}
@96@0:8r^{TSKUIDStruct=QQ}16r^{TSKUIDStruct=QQ}24r^{TSKUIDStruct=QQ}32r^{TSKUIDStruct=QQ}40r^{TSKUIDStruct=QQ}48r^{TSKUIDStruct=QQ}56r^{TSKUIDStruct=QQ}64r^{TSKUIDStruct=QQ}72r^{TSKUIDStruct=QQ}80r^{TSKUIDStruct=QQ}88
{TSKUIDStructMap="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
Q24@0:8i16i20
v40@0:8Q16^i24^i32
v36@0:8@16@24B32
v56@0:8{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}16{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}32r^{TSKUIDStruct=QQ}48
i40@0:8{TSKUIDStruct=QQ}16@32
i68@0:8{TSKUIDStruct=QQ}16@32@40{TSKUIDStruct=QQ}48S64
@24@0:8[16C]16
^{TSCETableResolver=^^?}24@0:8r^{TSKUIDStruct=QQ}16
^{TSCETableResolver=^^?}20@0:8S16
^{TSCETableResolver=^^?}24@0:8@16
{TSKUIDStruct=QQ}40@0:8{TSKUIDStruct=QQ}16I32B36
{TSCERecalculationState=C}41@0:8^v16@24r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}32{TSCERecalculationState=C}40
v32@0:8@16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24
{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}32@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16^B24
{vector<TSUCellCoord, std::allocator<TSUCellCoord>>=^{TSUCellCoord}^{TSUCellCoord}{__compressed_pair<TSUCellCoord *, std::allocator<TSUCellCoord>>=^{TSUCellCoord}}}32@0:8r^{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16r^{TSKUIDStruct=QQ}24
{vector<TSUCellCoord, std::allocator<TSUCellCoord>>=^{TSUCellCoord}^{TSUCellCoord}{__compressed_pair<TSUCellCoord *, std::allocator<TSUCellCoord>>=^{TSUCellCoord}}}36@0:8r^{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16r^{TSKUIDStruct=QQ}24B32
{vector<TSUCellCoord, std::allocator<TSUCellCoord>>=^{TSUCellCoord}^{TSUCellCoord}{__compressed_pair<TSUCellCoord *, std::allocator<TSUCellCoord>>=^{TSUCellCoord}}}32@0:8r^{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}16r^{TSKUIDStruct=QQ}24
{TSCECellCoordSet={map<unsigned short, TSUIndexSet, std::less<unsigned short>, std::allocator<std::pair<const unsigned short, TSUIndexSet>>>={__tree<std::__value_type<unsigned short, TSUIndexSet>, std::__map_value_compare<unsigned short, std::__value_type<unsigned short, TSUIndexSet>, std::less<unsigned short>, true>, std::allocator<std::__value_type<unsigned short, TSUIndexSet>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned short, TSUIndexSet>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<unsigned short, std::__value_type<unsigned short, TSUIndexSet>, std::less<unsigned short>, true>>=Q}}}}24@0:8r^{TSKUIDStruct=QQ}16
{TSKUIDStruct=QQ}24@0:8r^{TSKUIDStruct=QQ}16
v36@0:8{TSKUIDStruct=QQ}16B32
v56@0:8{_NSRange=QQ}16r^{TSKUIDStruct=QQ}32{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}40
v72@0:8{_NSRange=QQ}16r^{TSKUIDStruct=QQ}32{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}40{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}56
v72@0:8{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}16r^{TSKUIDStruct=QQ}32{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}40{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}56
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}32@0:8@16^v24
{TSCEInternalCellRefSet={unordered_map<unsigned short, TSCECellCoordSet, std::hash<unsigned short>, std::equal_to<unsigned short>, std::allocator<std::pair<const unsigned short, TSCECellCoordSet>>>={__hash_table<std::__hash_value_type<unsigned short, TSCECellCoordSet>, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, TSCECellCoordSet>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, TSCECellCoordSet>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>, std::allocator<std::__hash_value_type<unsigned short, TSCECellCoordSet>>>={unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *>>>={__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *>=^v}}{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, TSCECellCoordSet>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>>=Q}{__compressed_pair<float, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, TSCECellCoordSet>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>>=f}}}}16@0:8
B24@0:8r^{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16
{TSCEReferenceSet=^^?^{TSCEDependencyTracker}{unordered_map<TSKUIDStruct, std::unordered_set<TSUCellCoord>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, std::unordered_set<TSUCellCoord>>>>={__hash_table<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>>>={unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *>>>={__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *>=^v}}{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>=Q}{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>=f}}}{map<TSKUIDStruct, std::unordered_set<TSCERangeCoordinate>, std::less<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, std::unordered_set<TSCERangeCoordinate>>>>={__tree<std::__value_type<TSKUIDStruct, std::unordered_set<TSCERangeCoordinate>>, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, std::unordered_set<TSCERangeCoordinate>>, std::less<TSKUIDStruct>, true>, std::allocator<std::__value_type<TSKUIDStruct, std::unordered_set<TSCERangeCoordinate>>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSKUIDStruct, std::unordered_set<TSCERangeCoordinate>>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, std::unordered_set<TSCERangeCoordinate>>, std::less<TSKUIDStruct>, true>>=Q}}}^v^v^v^v^v@^v}24@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16
{TSCECellRefSet={map<TSKUIDStruct, TSCECellCoordSet, std::less<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSCECellCoordSet>>>={__tree<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>, std::allocator<std::__value_type<TSKUIDStruct, TSCECellCoordSet>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>>=Q}}}}24@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16
{TSCEReferenceSet=^^?^{TSCEDependencyTracker}{unordered_map<TSKUIDStruct, std::unordered_set<TSUCellCoord>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, std::unordered_set<TSUCellCoord>>>>={__hash_table<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>>>={unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *>>>={__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *>=^v}}{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>=Q}{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>=f}}}{map<TSKUIDStruct, std::unordered_set<TSCERangeCoordinate>, std::less<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, std::unordered_set<TSCERangeCoordinate>>>>={__tree<std::__value_type<TSKUIDStruct, std::unordered_set<TSCERangeCoordinate>>, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, std::unordered_set<TSCERangeCoordinate>>, std::less<TSKUIDStruct>, true>, std::allocator<std::__value_type<TSKUIDStruct, std::unordered_set<TSCERangeCoordinate>>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSKUIDStruct, std::unordered_set<TSCERangeCoordinate>>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, std::unordered_set<TSCERangeCoordinate>>, std::less<TSKUIDStruct>, true>>=Q}}}^v^v^v^v^v@^v}16@0:8
C24@0:8@16
{vector<TSCECellRef, std::allocator<TSCECellRef>>=^{TSCECellRef}^{TSCECellRef}{__compressed_pair<TSCECellRef *, std::allocator<TSCECellRef>>=^{TSCECellRef}}}32@0:8@16r^{TSKUIDStruct=QQ}24
{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}44@0:8@16r^{TSKUIDStruct=QQ}24C32^@36
@44@0:8@16r^{TSKUIDStruct=QQ}24C32^@36
{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}24@0:8@16
@28@0:8C16r^{TSKUIDStruct=QQ}20
@36@0:8C16r^v20r^{TSKUIDStruct=QQ}28
C24@0:8C16C20
{vector<TSCEGroupingColumnChange, std::allocator<TSCEGroupingColumnChange>>="__begin_"^{TSCEGroupingColumnChange}"__end_"^{TSCEGroupingColumnChange}"__end_cap_"{__compressed_pair<TSCEGroupingColumnChange *, std::allocator<TSCEGroupingColumnChange>>="__value_"^{TSCEGroupingColumnChange}}}
@"TSTTableControlCellSelection"
@28@0:8I16^B20
@"TSTTableDataListItemCache"
@"TSUIntegerKeyDictionary"
@32@0:8r^{TSKUIDStruct=QQ}16^v24
{unordered_set<TSKUIDStruct, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<TSKUIDStruct>>={__hash_table<TSKUIDStruct, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<TSKUIDStruct>>={unique_ptr<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *>, std::allocator<std::__hash_node<TSKUIDStruct, void *>>>={__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *>=^v}}{__compressed_pair<unsigned long, std::hash<TSKUIDStruct>>=Q}{__compressed_pair<float, std::equal_to<TSKUIDStruct>>=f}}}16@0:8
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}32@0:8r^{TSKUIDStruct=QQ}16@24
{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16
{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}32@0:8@16@24
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16
B48@0:8@16@24r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}32^@40
@40@0:8@16@24r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}32
@"TSCETableTransposedInfo"
@"TSCEFormulaRewriteInfo_RowColumnInfo"
@"TSCEFormulaRewrite_RegionMovedInfo"
@"TSCEFormulaRewrite_RegionMergedInfo"
@"TSCEFormulaRewrite_MergeOriginMovedInfo"
@"TSKShuffleMapping"
@"TSCERewriteTableUIDInfo"
@"TSCERewriteGroupNodeUIDInfo"
@"TSCEGroupByChange"
@"TSCEFormulasForUndo"
{unordered_map<TSCECellRef, TSTConditionalStyleSet *, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, std::allocator<std::pair<const TSCECellRef, TSTConditionalStyleSet *>>>="__table_"{__hash_table<std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, std::__unordered_map_hasher<TSCECellRef, std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, true>, std::__unordered_map_equal<TSCECellRef, std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, std::equal_to<TSCECellRef>, std::hash<TSCECellRef>, true>, std::allocator<std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSCECellRef, std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSCECellRef, std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, std::equal_to<TSCECellRef>, std::hash<TSCECellRef>, true>>="__value_"f}}}
{unordered_map<TSCECellRef, TSUCellRect, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, std::allocator<std::pair<const TSCECellRef, TSUCellRect>>>="__table_"{__hash_table<std::__hash_value_type<TSCECellRef, TSUCellRect>, std::__unordered_map_hasher<TSCECellRef, std::__hash_value_type<TSCECellRef, TSUCellRect>, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, true>, std::__unordered_map_equal<TSCECellRef, std::__hash_value_type<TSCECellRef, TSUCellRect>, std::equal_to<TSCECellRef>, std::hash<TSCECellRef>, true>, std::allocator<std::__hash_value_type<TSCECellRef, TSUCellRect>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSUCellRect>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSUCellRect>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSUCellRect>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSUCellRect>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSUCellRect>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSUCellRect>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSUCellRect>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSCECellRef, TSUCellRect>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSUCellRect>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSCECellRef, std::__hash_value_type<TSCECellRef, TSUCellRect>, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSCECellRef, std::__hash_value_type<TSCECellRef, TSUCellRect>, std::equal_to<TSCECellRef>, std::hash<TSCECellRef>, true>>="__value_"f}}}
{unordered_map<TSKUIDStruct, TSCECoordMapper *, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSCECoordMapper *>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
@"TSCEFormulaRewriteSpec"
@44@0:8I16@20@28@36
@"TSDStroke"
@24@0:8^{TSCEParser=@^{TSCELexer}^{TSCEASTNodeArray}^v@{TSKUIDStruct=QQ}{TSUCellCoord=ISBB}BB@}16
v24@0:8^{TSCEASTNodeArray=*QQB}16
@44@0:8^{TSCEASTNodeArray=*QQB}16@24B32^{TSCEParser=@^{TSCELexer}^{TSCEASTNodeArray}^v@{TSKUIDStruct=QQ}{TSUCellCoord=ISBB}BB@}36
^{TSCEASTNodeArray=*QQB}24@0:8^{TSCEParser=@^{TSCELexer}^{TSCEASTNodeArray}^v@{TSKUIDStruct=QQ}{TSUCellCoord=ISBB}BB@}16
^{TSCEASTNodeArray=*QQB}40@0:8^{TSCEParser=@^{TSCELexer}^{TSCEASTNodeArray}^v@{TSKUIDStruct=QQ}{TSUCellCoord=ISBB}BB@}16@24@32
@"TSCETablesByNameDistributor"
@"<TSTCellIteratorData>"
v32@0:8^{TSCEASTNodeArray=*QQB}16{TSUCellCoord=ISBB}24
v52@0:8@16C24@28@36@44
v48@0:8@16Q24@32^v40
v36@0:8@16@24I32
B24@0:8^v16
@32@0:8^v16^@24
@48@0:8@16@24^v32^@40
@40@0:8@16^v24^@32
@"TSTWPTokenAttachment"
i36@0:8Q16i24@28
i32@0:8Q16@24
Q44@0:8Q16Q24i32@36
@48@0:8@16@24{TSUModelCellCoord={TSUCellCoord=ISBB}}32@40
@60@0:8@16@24{TSUViewCellCoord={TSUCellCoord=ISBB}}32@40r^{TSKUIDStruct=QQ}48B56
@60@0:8@16@24{TSUModelCellCoord={TSUCellCoord=ISBB}}32@40r^{TSKUIDStruct=QQ}48B56
@56@0:8@16@24{TSUViewCellCoord={TSUCellCoord=ISBB}}32@40r^{TSKUIDStruct=QQ}48
@56@0:8@16@24{TSUModelCellCoord={TSUCellCoord=ISBB}}32@40r^{TSKUIDStruct=QQ}48
@40@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24@32
{TSUModelCellCoord="_coord"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}}
v32@0:8I16I20@?24
@24@0:8B16B20
@"TSTPopUpMenuModel"
v32@0:8d16@24
{TSCEFunctionArgSpec=ciCi{unordered_set<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>={__hash_table<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>={unique_ptr<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>, std::allocator<std::__hash_node<TSCEArgumentType, void *>>>={__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>=^v}}{__compressed_pair<unsigned long, std::hash<TSCEArgumentType>>=Q}{__compressed_pair<float, std::equal_to<TSCEArgumentType>>=f}}}{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}s@^{TSCEArgumentAccessor}ddsBBBBBBB}28@0:8c16i20C24
{TSCEFunctionArgSpec=ciCi{unordered_set<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>={__hash_table<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>={unique_ptr<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>, std::allocator<std::__hash_node<TSCEArgumentType, void *>>>={__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>=^v}}{__compressed_pair<unsigned long, std::hash<TSCEArgumentType>>=Q}{__compressed_pair<float, std::equal_to<TSCEArgumentType>>=f}}}{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}s@^{TSCEArgumentAccessor}ddsBBBBBBB}32@0:8c16i20C24i28
{TSCEFunctionArgSpec=ciCi{unordered_set<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>={__hash_table<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>={unique_ptr<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>, std::allocator<std::__hash_node<TSCEArgumentType, void *>>>={__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>=^v}}{__compressed_pair<unsigned long, std::hash<TSCEArgumentType>>=Q}{__compressed_pair<float, std::equal_to<TSCEArgumentType>>=f}}}{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}s@^{TSCEArgumentAccessor}ddsBBBBBBB}44@0:8c16i20C24r^v28B36B40
{TSCEFunctionArgSpec=ciCi{unordered_set<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>={__hash_table<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>={unique_ptr<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>, std::allocator<std::__hash_node<TSCEArgumentType, void *>>>={__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>=^v}}{__compressed_pair<unsigned long, std::hash<TSCEArgumentType>>=Q}{__compressed_pair<float, std::equal_to<TSCEArgumentType>>=f}}}{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}s@^{TSCEArgumentAccessor}ddsBBBBBBB}40@0:8c16i20C24r^v28s36
{TSCEFunctionArgSpec=ciCi{unordered_set<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>={__hash_table<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>={unique_ptr<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>, std::allocator<std::__hash_node<TSCEArgumentType, void *>>>={__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>=^v}}{__compressed_pair<unsigned long, std::hash<TSCEArgumentType>>=Q}{__compressed_pair<float, std::equal_to<TSCEArgumentType>>=f}}}{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}s@^{TSCEArgumentAccessor}ddsBBBBBBB}44@0:8c16i20C24i28r^v32B40
{TSCEFunctionArgSpec=ciCi{unordered_set<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>={__hash_table<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>={unique_ptr<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>, std::allocator<std::__hash_node<TSCEArgumentType, void *>>>={__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>=^v}}{__compressed_pair<unsigned long, std::hash<TSCEArgumentType>>=Q}{__compressed_pair<float, std::equal_to<TSCEArgumentType>>=f}}}{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}s@^{TSCEArgumentAccessor}ddsBBBBBBB}68@0:8c16i20C24d28B36d40B48r^v52B60B64
{TSCEFunctionArgSpec=ciCi{unordered_set<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>={__hash_table<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>={unique_ptr<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>, std::allocator<std::__hash_node<TSCEArgumentType, void *>>>={__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>=^v}}{__compressed_pair<unsigned long, std::hash<TSCEArgumentType>>=Q}{__compressed_pair<float, std::equal_to<TSCEArgumentType>>=f}}}{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}s@^{TSCEArgumentAccessor}ddsBBBBBBB}96@0:8c16i20C24i28d32B40d44B52B56r^v60B68B72r^v76s84B88B92
{TSCEFunctionArgSpec="_argumentType"c"_accessorMode"i"_rangeContext"C"_argumentContext"i"_disallowedTypes"{unordered_set<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>="__table_"{__hash_table<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>, std::allocator<std::__hash_node<TSCEArgumentType, void *>>>="__value_"{__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::hash<TSCEArgumentType>>="__value_"Q}"__p3_"{__compressed_pair<float, std::equal_to<TSCEArgumentType>>="__value_"f}}}"_modeValues"{vector<TSCEValue, std::allocator<TSCEValue>>="__begin_"^{TSCEValue}"__end_"^{TSCEValue}"__end_cap_"{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>="__value_"^{TSCEValue}}}"_defaultModeIndex"s"_functionSpec"@"TSCEFunctionSpec""_argAccessor"^{TSCEArgumentAccessor}"_minValue"d"_maxValue"d"_index"s"_minInclusive"B"_maxInclusive"B"_disallowDuration"B"_disallowCurrency"B"_isInteger"B"_forceArrayMode"B"_referenceForGeometryOnly"B}
@52@0:8@16S24@28Q36Q44
{_NSRange=QQ}24@0:8@16
{_NSRange=QQ}32@0:8@16q24
{_NSRange=QQ}40@0:8@16q24o^q32
{_NSRange=QQ}48@0:8@16Q24{_NSRange=QQ}32
@48@0:8@16Q24{_NSRange=QQ}32
Q48@0:8@16Q24{_NSRange=QQ}32
@56@0:8@16Q24{_NSRange=QQ}32@48
@"NSRegularExpression"
@56@0:8@16r^{TSUDecimal={?=[2Q]}}24@32Q40Q48
@56@0:8@16@24@32Q40Q48
v32@0:8r^{TSUDecimal={?=[2Q]}}16@24
{TSUDecimal={?=[2Q]}}16@0:8
{TSUDecimal="_decimal"{?="w"[2Q]}}
B24@0:8I16I20
B24@0:8C16I20
@32@0:8^{?={?=Cb8b16b16b16b16b16}[0C]}16@24
v32@0:8^{?={?=Cb8b16b16b16b16b16}[0C]}16@24
v36@0:8^{?={?=Cb8b16b16b16b16b16}[0C]}16@24B32
v40@0:8@16B24B28B32B36
v24@0:8S16B20
v28@0:8B16I20B24
@28@0:8I16B20B24
@"NSObject"
@"TSTCellBorder"
@"TSKFormat"
@"TSDCommentStorage"
@"TSTImportWarningSet"
@"TSTCellSpec"
@40@0:8@16@24r^v32
@28@0:8^{_NSZone=}16B24
v32@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24
v40@0:8r^v16r^v24r^v32
{TSCECellCoordSet={map<unsigned short, TSUIndexSet, std::less<unsigned short>, std::allocator<std::pair<const unsigned short, TSUIndexSet>>>={__tree<std::__value_type<unsigned short, TSUIndexSet>, std::__map_value_compare<unsigned short, std::__value_type<unsigned short, TSUIndexSet>, std::less<unsigned short>, true>, std::allocator<std::__value_type<unsigned short, TSUIndexSet>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned short, TSUIndexSet>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<unsigned short, std::__value_type<unsigned short, TSUIndexSet>, std::less<unsigned short>, true>>=Q}}}}32@0:8@16@?24
{unordered_map<TSUCellCoord, TSTCell *, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, std::allocator<std::pair<const TSUCellCoord, TSTCell *>>>="__table_"{__hash_table<std::__hash_value_type<TSUCellCoord, TSTCell *>, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTCell *>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTCell *>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>, std::allocator<std::__hash_value_type<TSUCellCoord, TSTCell *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTCell *>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTCell *>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>>="__value_"f}}}
{unordered_map<TSKUIDStructCoord, TSTCell *, std::hash<TSKUIDStructCoord>, std::equal_to<TSKUIDStructCoord>, std::allocator<std::pair<const TSKUIDStructCoord, TSTCell *>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, std::__unordered_map_hasher<TSKUIDStructCoord, std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, std::hash<TSKUIDStructCoord>, std::equal_to<TSKUIDStructCoord>, true>, std::__unordered_map_equal<TSKUIDStructCoord, std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, std::equal_to<TSKUIDStructCoord>, std::hash<TSKUIDStructCoord>, true>, std::allocator<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStructCoord, std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, std::hash<TSKUIDStructCoord>, std::equal_to<TSKUIDStructCoord>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStructCoord, std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, std::equal_to<TSKUIDStructCoord>, std::hash<TSKUIDStructCoord>, true>>="__value_"f}}}
{pair<TSTCell *, TSKUIDStructCoord>=@{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}}16@0:8
r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16@0:8
@"TSTCellMap"
@"TSTCellUIDIterator"
d36@0:8I16{TSTSimpleRange=qQ}20
v36@0:8I16^d20^d28
v36@0:8I16@20@28
{_opaque_pthread_rwlock_t=q[192c]}16@0:8
v216@0:8{_opaque_pthread_rwlock_t=q[192c]}16
{vector<TSTStrokeWidthCacheEntry, std::allocator<TSTStrokeWidthCacheEntry>>="__begin_"^{TSTStrokeWidthCacheEntry}"__end_"^{TSTStrokeWidthCacheEntry}"__end_cap_"{__compressed_pair<TSTStrokeWidthCacheEntry *, std::allocator<TSTStrokeWidthCacheEntry>>="__value_"^{TSTStrokeWidthCacheEntry}}}
@40@0:8@16r^v24r^v32
v28@0:8r^v16I24
v28@0:8r^v16B24
{unordered_map<TSKUIDStruct, unsigned short, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, unsigned short>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, unsigned short>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned short>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned short>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, unsigned short>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned short>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned short>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned short>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned short>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned short>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned short>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned short>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned short>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned short>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned short>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned short>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
{unordered_map<TSKUIDStruct, unsigned int, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, unsigned int>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, unsigned int>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned int>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned int>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, unsigned int>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned int>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned int>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned int>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned int>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned int>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned int>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned int>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned int>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
@44@0:8@16S24@28@36
{TSKUIDStruct=QQ}36@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24B32
@"<TSCEFormulaReplacing>"
@40@0:8{TSUCellCoord=ISBB}16@24@32
@"TSTAccumulator"
{TSCECellCoordSet="_rowsPerColumn"{map<unsigned short, TSUIndexSet, std::less<unsigned short>, std::allocator<std::pair<const unsigned short, TSUIndexSet>>>="__tree_"{__tree<std::__value_type<unsigned short, TSUIndexSet>, std::__map_value_compare<unsigned short, std::__value_type<unsigned short, TSUIndexSet>, std::less<unsigned short>, true>, std::allocator<std::__value_type<unsigned short, TSUIndexSet>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned short, TSUIndexSet>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<unsigned short, std::__value_type<unsigned short, TSUIndexSet>, std::less<unsigned short>, true>>="__value_"Q}}}}
@"TSTAggregator"
@28@0:8@16S24
s16@0:8
@"TSTFunctionEndNode"
B24@0:8q16
@"NSMutableSet"
@"TSCERemoteDataValueMap"
@"TSUIntToIntDictionary"
C24@0:8Q16
v40@0:8{TSKUIDStruct=QQ}16@32
v24@0:8@"TSTGroupNode"16
v40@0:8{TSKUIDStruct=QQ}16@"TSTGroupNode"32
v32@0:8r^v16r^v24
i40@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24@32
i26@0:8{TSUModelColumnIndex=S}16@18
v32@0:8C16r^{TSKUIDStruct=QQ}20C28
@36@0:8C16{TSUModelCellCoord={TSUCellCoord=ISBB}}20^B28
C32@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16^B24
v28@0:8Q16C24
Q20@0:8C16
@"TSTSummaryCellVendor"
@"TSTCategoryAggregateFormulaOwner"
@"TSTTableGroupSortOrderUID"
{vector<double, std::allocator<double>>="__begin_"^d"__end_"^d"__end_cap_"{__compressed_pair<double *, std::allocator<double>>="__value_"^d}}
{vector<int, std::allocator<int>>="__begin_"^i"__end_"^i"__end_cap_"{__compressed_pair<int *, std::allocator<int>>="__value_"^i}}
{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24@0:8r^{TSKUIDStruct=QQ}16
@60@0:8@16{TSTSimpleRange=qQ}24i40@44@52
{TSTSimpleRange=qQ}16@0:8
v32@0:8{TSTSimpleRange=qQ}16
@"<TSTStrokeLayerStrokeAndRange>"
{TSTSimpleRange="origin"q"length"Q}
@48@0:8q16@24^@32@40
{?=d{TSTSimpleRange=qQ}BQ}24@0:8q16
{?=d{TSTSimpleRange=qQ}BQ}56@0:8{?=d{TSTSimpleRange=qQ}BQ}16
v44@0:8@16{TSTSimpleRange=qQ}24i40
@40@0:8I16@20@28B36
{_NSRange=QQ}28@0:8{TSUCellCoord=ISBB}16B24
@112@0:8{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16
@32@0:8r^{TSCESpanningRangeRef={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}C}16@24
@"NSLock"
@24@0:8d16
@28@0:8d16C24
{TSCENumberValue=^^?{TSUDecimal={?=[2Q]}}{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}SB}16@0:8
B40@0:8q16q24q32
B32@0:8r^{TSUDecimal={?=[2Q]}}16@24
@24@0:8r^{TSCERelativeCellRef={TSCERelativeCellCoordinate=isBB}{TSKUIDStruct=QQ}b1b1b1b1}16
r^{TSCERelativeCellRef={TSCERelativeCellCoordinate=isBB}{TSKUIDStruct=QQ}b1b1b1b1}16@0:8
v24@0:8r^{TSCERelativeCellRef={TSCERelativeCellCoordinate=isBB}{TSKUIDStruct=QQ}b1b1b1b1}16
@24@0:8r^{TSCECrossTableReference={TSKUIDStruct=QQ}{TSCERelativeCellCoordinate=isBB}}16
{TSCECrossTableReference={TSKUIDStruct=QQ}{TSCERelativeCellCoordinate=isBB}}16@0:8
@32@0:8r^v16r^{TSUPreserveFlags=C}24
{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
v32@0:8r^v16r^{TSUPreserveFlags=C}24
v32@0:8r^v16B24B28
B32@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24
@56@0:8^{TSCEFormulaRewriteContext=@@{TSCEFormulaRewriteContextRecord={TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}{TSKUIDStruct=QQ}{TSUColumnRowOffset=ii}BBBBBBB}}16q24B32B36^{TSCEUidCellRef={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}40@?48
{TSCEFormulaCreator=@?}16@0:8
{TSCEFormulaCreator=@?}24@0:8B16B20
v24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
@"TSCECategoryRef"
@"TSCEViewTractRef"
{RefTypeHolder<TSCECellRef, 0>="_ref"{TSCECellRef="coordinate"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}"_tableUID"{TSKUIDStruct="_lower"Q"_upper"Q}}}
@"TSTFormulaPredArgData"
@"TSCEUndoTractList"
{TSCERelativeCellRef="relativeCoord"{TSCERelativeCellCoordinate="row"i"column"s"_preserveRow"B"_preserveColumn"B}"tableUID"{TSKUIDStruct="_lower"Q"_upper"Q}"preserveColumn"b1"preserveRow"b1"isSpanningColumn"b1"isSpanningRow"b1}
@40@0:8{TSUCellCoord=ISBB}16{TSKUIDStruct=QQ}24
{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16@0:8
{TSCECellRef="coordinate"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}"_tableUID"{TSKUIDStruct="_lower"Q"_upper"Q}}
@48@0:8{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}16{TSKUIDStruct=QQ}32
@40@0:8{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}16@32
@40@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16@32
{TSCERangeRef="range"{TSCERangeCoordinate="_topLeft"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}"_bottomRight"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}}"_tableUID"{TSKUIDStruct="_lower"Q"_upper"Q}}
@44@0:8@16B24Q28Q36
@32@0:8r^v16r^v24
v36@0:8@16B24@28
I24@0:8r^{TSKUIDStruct=QQ}16
S24@0:8r^{TSKUIDStruct=QQ}16
{unordered_map<unsigned int, TSKUIDStruct, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<const unsigned int, TSKUIDStruct>>>="__table_"{__hash_table<std::__hash_value_type<unsigned int, TSKUIDStruct>, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, TSKUIDStruct>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, TSKUIDStruct>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>, std::allocator<std::__hash_value_type<unsigned int, TSKUIDStruct>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSKUIDStruct>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSKUIDStruct>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSKUIDStruct>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSKUIDStruct>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSKUIDStruct>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSKUIDStruct>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSKUIDStruct>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned int, TSKUIDStruct>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSKUIDStruct>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, TSKUIDStruct>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, TSKUIDStruct>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>>="__value_"f}}}
@44@0:8{_NSRange=QQ}16r^v32I40
@36@0:8r^{TSKUIDStruct=QQ}16r^v24B32
@60@0:8r^{TSKUIDStruct=QQ}16r^{TSKUIDStruct=QQ}24r^{TSKUIDStruct=QQ}32r^v40r^v48B56
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}52@0:8{_NSRange=QQ}16@32B40@44
v44@0:8@16@24B32@36
I24@0:8I16B20
{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}28@0:8I16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}20
{vector<TSCERangeCoordinate, std::allocator<TSCERangeCoordinate>>=^{TSCERangeCoordinate}^{TSCERangeCoordinate}{__compressed_pair<TSCERangeCoordinate *, std::allocator<TSCERangeCoordinate>>=^{TSCERangeCoordinate}}}16@0:8
@"TSCEFormulaRewrite_Uids"
{TSCERangeCoordinate="_topLeft"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}"_bottomRight"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}}
@56@0:8@16@24I32I36Q40Q48
{TSCEGridDimensions="width"I"height"I}
B40@0:8r^{TSKUIDStruct=QQ}16@24@32
B32@0:8r^{TSKUIDStruct=QQ}16@24
@64@0:8@16{TSUCellCoord=ISBB}24{CGRect={CGPoint=dd}{CGSize=dd}}32
{vector<TSKUIDStructTract, std::allocator<TSKUIDStructTract>>=^{TSKUIDStructTract}^{TSKUIDStructTract}{__compressed_pair<TSKUIDStructTract *, std::allocator<TSKUIDStructTract>>=^{TSKUIDStructTract}}}24@0:8Q16
{vector<TSKUIDStructTract, std::allocator<TSKUIDStructTract>>="__begin_"^{TSKUIDStructTract}"__end_"^{TSKUIDStructTract}"__end_cap_"{__compressed_pair<TSKUIDStructTract *, std::allocator<TSKUIDStructTract>>="__value_"^{TSKUIDStructTract}}}
@44@0:8r^v16C24@28r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}36
@52@0:8r^v16{TSKUIDStruct=QQ}24C40@44
{RefTypeHolder<TSCERangeRef, 1>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}32@0:8r^v16@24
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}36@0:8r^v16@24C32
B32@0:8r^{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16@24
C32@0:8r^{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16@24
@68@0:8@16@24@32@40r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}48@56B64
@60@0:8@16@24@32r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}40@48B56
@64@0:8@16@24r^v32C40r^v44@52B60
@64@0:8@16@24r^v32C40r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}44@52B60
@56@0:8@16@24@32r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}40@48
@28@0:8@16C24
v44@0:8^{TSCEASTNodeArray=*QQB}16{TSUCellCoord=ISBB}24C32{TSUCellCoord=ISBB}36
v40@0:8{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16
@"TSTUIDRectRef"
@"TSTReferenceColorHelper"
^{CGPath=}24@0:8d16
v76@0:8d16^{CGContext=}24{CGRect={CGPoint=dd}{CGSize=dd}}32B64^{CGColor=}68
v80@0:8d16^{CGContext=}24{CGRect={CGPoint=dd}{CGSize=dd}}32B64^{CGColor=}68B76
@"<TSKPencilAnnotationStorage>"16@0:8
@"TSDPencilAnnotationStorage"
v32@0:8r^{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16r^{TSUCellCoord=ISBB}24
B32@0:8r^{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16r^{TSUCellCoord=ISBB}24
v32@0:8r^{TSUCellCoord=ISBB}16@?24
{map<TSUCellCoord, std::set<TSUCellRect>, std::less<TSUCellCoord>, std::allocator<std::pair<const TSUCellCoord, std::set<TSUCellRect>>>>="__tree_"{__tree<std::__value_type<TSUCellCoord, std::set<TSUCellRect>>, std::__map_value_compare<TSUCellCoord, std::__value_type<TSUCellCoord, std::set<TSUCellRect>>, std::less<TSUCellCoord>, true>, std::allocator<std::__value_type<TSUCellCoord, std::set<TSUCellRect>>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSUCellCoord, std::set<TSUCellRect>>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<TSUCellCoord, std::__value_type<TSUCellCoord, std::set<TSUCellRect>>, std::less<TSUCellCoord>, true>>="__value_"Q}}}
@56@0:8@16d24@32Q40Q48
@"TSKDurationFormat"
@20@0:8c16
@28@0:8s16@20
@32@0:8s16s20@24
^v24@0:8S16i20
@48@0:8@16^v24Q32Q40
q20@0:8i16
@28@0:8d16i24
@64@0:8q16q24q32q40q48q56
v48@0:8{_NSRange=QQ}16Q32@?40
@"<TSTTableStrokeProviding>"
@"<TSTTableHiddenRowColumnProviding><TSTTableInternalGeometryProviding>"
@28@0:8r^v16c24
@32@0:8r^v16c24B28
@40@0:8r^v16c24B28r^{TSCEGridDimensions=II}32
@"TSCEValueGrid"
v28@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16C24
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}20@0:8C16
{unordered_map<TSCECategoryLevel, TSKUIDStructCoord, std::hash<TSCECategoryLevel>, std::equal_to<TSCECategoryLevel>, std::allocator<std::pair<const TSCECategoryLevel, TSKUIDStructCoord>>>="__table_"{__hash_table<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, std::__unordered_map_hasher<TSCECategoryLevel, std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, std::hash<TSCECategoryLevel>, std::equal_to<TSCECategoryLevel>, true>, std::__unordered_map_equal<TSCECategoryLevel, std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, std::equal_to<TSCECategoryLevel>, std::hash<TSCECategoryLevel>, true>, std::allocator<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSCECategoryLevel, std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, std::hash<TSCECategoryLevel>, std::equal_to<TSCECategoryLevel>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSCECategoryLevel, std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, std::equal_to<TSCECategoryLevel>, std::hash<TSCECategoryLevel>, true>>="__value_"f}}}
v36@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16@24C32
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}28@0:8@16C24
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}36@0:8Q16@24C32
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}52@0:8^{TSTRunningAggregate={TSKUIDStruct=QQ}BB}16@24r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}32B40@44
{vector<TSCECellValue *, std::allocator<TSCECellValue *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<TSCECellValue *__strong *, std::allocator<TSCECellValue *>>="__value_"^@}}
{vector<TSTUidCoordsPerGroupValueTuple *, std::allocator<TSTUidCoordsPerGroupValueTuple *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<TSTUidCoordsPerGroupValueTuple *__strong *, std::allocator<TSTUidCoordsPerGroupValueTuple *>>="__value_"^@}}
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}32@0:8S16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}20B28
@"TSTGroupBySet"
{unordered_map<unsigned short, TSTRunningAggregate, std::hash<unsigned short>, std::equal_to<unsigned short>, std::allocator<std::pair<const unsigned short, TSTRunningAggregate>>>="__table_"{__hash_table<std::__hash_value_type<unsigned short, TSTRunningAggregate>, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, TSTRunningAggregate>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, TSTRunningAggregate>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>, std::allocator<std::__hash_value_type<unsigned short, TSTRunningAggregate>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSTRunningAggregate>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSTRunningAggregate>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSTRunningAggregate>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSTRunningAggregate>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSTRunningAggregate>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSTRunningAggregate>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSTRunningAggregate>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned short, TSTRunningAggregate>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSTRunningAggregate>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, TSTRunningAggregate>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, TSTRunningAggregate>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>>="__value_"f}}}
{unordered_map<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>, std::hash<unsigned short>, std::equal_to<unsigned short>, std::allocator<std::pair<const unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>>>="__table_"{__hash_table<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>, std::allocator<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>>="__value_"f}}}
S20@0:8C16
d20@0:8{?=CS}16
C24@0:8S16S20
{?=CS}24@0:8@16
{TSUDecimal={?=[2Q]}}32@0:8r^{TSUDecimal={?=[2Q]}}16{?=CS}24{?=CS}28
v40@0:8^{TSCEASTNodeArray=}16{TSUCellCoord=ISBB}24^v32
@"TSTFunctionNode"
@48@0:8@16@24@32@40
@48@0:8@"TSSPropertyMap"16@"TSSPropertyMap"24@"TSSPropertyMap"32@"TSSPropertyMap"40
@"TSSPropertySet"16@0:8
@56@0:8@"TSSPropertyMap"16@"TSSPropertyMap"24@"TSSPropertyMap"32@"TSSPropertyMap"40@"TSTConcurrentStylesheet"48
@32@0:8r^{Message=^^?{InternalMetadata=^v}}16@24
v32@0:8^{Message=^^?{InternalMetadata=^v}}16@24
@32@0:8r^{Message=^^?{InternalMetadata=^v}}16@"TSPUnarchiver"24
v32@0:8^{Message=^^?{InternalMetadata=^v}}16@"TSPArchiver"24
@40@0:8@16B24B28B32I36
d28@0:8S16@?20
@24@0:8r^{TSCEInternalCellReference={TSUCellCoord=ISBB}SS}16
v40@0:8r^{TSUCellCoord=ISBB}16r^{TSKUIDStruct=QQ}24r^{TSKUIDStruct=QQ}32
v32@0:8r^{TSUCellCoord=ISBB}16@24
v32@0:8^v16r^{TSKUIDStruct=QQ}24
v32@0:8^v16r^v24
B40@0:8^v16r^{TSKUIDStruct=QQ}24r^v32
{unordered_map<TSKUIDStruct, TSCECellCoordSet, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSCECellCoordSet>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
{unordered_map<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
{unordered_map<TSUCellCoord, std::unordered_set<TSCEUuidPair>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, std::allocator<std::pair<const TSUCellCoord, std::unordered_set<TSCEUuidPair>>>>="__table_"{__hash_table<std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>, std::allocator<std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>>="__value_"f}}}
i40@0:8@16@24r^{TSKUIDStruct=QQ}32
i32@0:8@16@24
v48@0:8@16{TSKUIDStruct=QQ}24B40B44
v24@0:8B16B20
v28@0:8r^{TSKUIDStruct=QQ}16B24
@24@0:8S16C20
@24@0:8I16C20
{TSUModelColumnIndex=S}20@0:8S16
{TSUModelColumnIndex=S}20@0:8I16
@56@0:8{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16@48
v36@0:8I16C20Q24i32
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}52@0:8Q16i24I28C32Q36^B44
v32@0:8@16q24
v32@0:8r^{TSKUIDStruct=QQ}16@24
@"TSTPivotGroupingColumnOptionsMap"
@"TSTFormulaStore"
v32@0:8^{CGContext=}16@?24
{TSUCellCoord=ISBB}24@0:8S16I20
S24@0:8r^{TSUCellCoord=ISBB}16
I24@0:8r^{TSUCellCoord=ISBB}16
{TSUCellCoord=ISBB}20@0:8I16
@40@0:8@16{_NSRange=QQ}24
v32@0:8@16C24B28
B24@0:8{TSUModelRowIndex=I}16C20
B22@0:8{TSUModelColumnIndex=S}16C18
{TSUModelColumnIndex=S}32@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{TSUModelRowIndex=I}32@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
v40@0:8{_NSRange=QQ}16r^v32
v34@0:8{_NSRange=QQ}16{TSUViewColumnIndex=S}32
v52@0:8@16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24@40B48
@"TSTHiddenStateExtent"
v24@0:8@"TSTMutableCellIteratorData"16
@"NSObject<TSTCellRegionIterating>"
{TSKUIDStruct=QQ}32@0:8@16@24
{TSKUIDStruct=QQ}20@0:8i16
i24@0:8r^{TSKUIDStruct=QQ}16
C32@0:8@16@24
B48@0:8@16@24Q32^Q40
B56@0:8@16@24@32Q40^Q48
@44@0:8@16@24r^{TSKUIDStruct=QQ}32S40
@48@0:8@16B24@28r^{TSKUIDStruct=QQ}36S44
{TSKUIDStruct=QQ}32@0:8r^{TSKUIDStruct=QQ}16r^{TSKUIDStruct=QQ}24
@40@0:8@16r^{TSKUIDStruct=QQ}24r^{TSKUIDStruct=QQ}32
v40@0:8^v16@24Q32
{vector<TSCECategoryLevel, std::allocator<TSCECategoryLevel>>=^C^C{__compressed_pair<TSCECategoryLevel *, std::allocator<TSCECategoryLevel>>=^C}}24@0:8r^{TSKUIDStruct=QQ}16
v40@0:8{TSKUIDStruct=QQ}16@?32
C32@0:8{TSKUIDStruct=QQ}16
C40@0:8r^{TSKUIDStruct=QQ}16^B24^B32
@28@0:8C16Q20
v36@0:8r^{TSKUIDStruct=QQ}16I24@28
@32@0:8@16C24B28
@40@0:8@16r^{TSKUIDStruct=QQ}24C32C36
v32@0:8@16r^{TSUCellCoord=ISBB}24
@24@0:8C16B20
@40@0:8@16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24@32
@48@0:8@16Q24Q32^{TSUPreserveFlags=C}40
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}36@0:8@16r^{TSKUIDStruct=QQ}24B32
{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}24@0:8@16
{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}32@0:8@16r^{TSKUIDStruct=QQ}24
{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}36@0:8@16r^{TSKUIDStruct=QQ}24C32
@36@0:8@16r^{TSKUIDStruct=QQ}24C32
{vector<TSCECellRef, std::allocator<TSCECellRef>>=^{TSCECellRef}^{TSCECellRef}{__compressed_pair<TSCECellRef *, std::allocator<TSCECellRef>>=^{TSCECellRef}}}36@0:8@16r^{TSKUIDStruct=QQ}24B32
{vector<TSCECategoryRef *, std::allocator<TSCECategoryRef *>>=^@^@{__compressed_pair<TSCECategoryRef *__strong *, std::allocator<TSCECategoryRef *>>=^@}}32@0:8@16C24B28
{vector<TSCECategoryRef *, std::allocator<TSCECategoryRef *>>=^@^@{__compressed_pair<TSCECategoryRef *__strong *, std::allocator<TSCECategoryRef *>>=^@}}40@0:8{vector<TSCECategoryRef *, std::allocator<TSCECategoryRef *>>=^@^@{__compressed_pair<TSCECategoryRef *__strong *, std::allocator<TSCECategoryRef *>>=^@}}16
{vector<TSCECategoryRef *, std::allocator<TSCECategoryRef *>>=^@^@{__compressed_pair<TSCECategoryRef *__strong *, std::allocator<TSCECategoryRef *>>=^@}}52@0:8{vector<TSCECategoryRef *, std::allocator<TSCECategoryRef *>>=^@^@{__compressed_pair<TSCECategoryRef *__strong *, std::allocator<TSCECategoryRef *>>=^@}}16@40C48
{vector<TSCECategoryRef *, std::allocator<TSCECategoryRef *>>=^@^@{__compressed_pair<TSCECategoryRef *__strong *, std::allocator<TSCECategoryRef *>>=^@}}36@0:8@16C24B28B32
@"TSTGroupByChangeDistributor"
{unordered_map<TSUCellCoord, TSTAggNode *, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, std::allocator<std::pair<const TSUCellCoord, TSTAggNode *>>>="__table_"{__hash_table<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTAggNode *>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTAggNode *>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>, std::allocator<std::__hash_value_type<TSUCellCoord, TSTAggNode *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTAggNode *>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTAggNode *>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>>="__value_"f}}}
{TSCEUidLookupList="_uids"{TSKUIDStructVectorTemplate<TSKUIDStruct>="__begin_"^{TSKUIDStruct}"__end_"^{TSKUIDStruct}"__end_cap_"{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>="__value_"^{TSKUIDStruct}}}"_uidHashToLookupKeyMap"{unordered_map<unsigned long, unsigned int, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, unsigned int>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, unsigned int>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, unsigned int>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}"_uidHashOverflowMap"{unordered_map<unsigned long, std::unordered_set<unsigned int>, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, std::unordered_set<unsigned int>>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}}
@"TSKCustomFormatWrapper"
@40@0:8@16Q24@?32
v24@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
v40@0:8@16r^v24r^v32
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24@0:8Q16
{TSTCellUIDLookupList="_columnUidLookupList"{TSCEUidLookupList="_uids"{TSKUIDStructVectorTemplate<TSKUIDStruct>="__begin_"^{TSKUIDStruct}"__end_"^{TSKUIDStruct}"__end_cap_"{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>="__value_"^{TSKUIDStruct}}}"_uidHashToLookupKeyMap"{unordered_map<unsigned long, unsigned int, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, unsigned int>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, unsigned int>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, unsigned int>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}"_uidHashOverflowMap"{unordered_map<unsigned long, std::unordered_set<unsigned int>, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, std::unordered_set<unsigned int>>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}}"_rowUidLookupList"{TSCEUidLookupList="_uids"{TSKUIDStructVectorTemplate<TSKUIDStruct>="__begin_"^{TSKUIDStruct}"__end_"^{TSKUIDStruct}"__end_cap_"{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>="__value_"^{TSKUIDStruct}}}"_uidHashToLookupKeyMap"{unordered_map<unsigned long, unsigned int, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, unsigned int>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, unsigned int>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, unsigned int>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}"_uidHashOverflowMap"{unordered_map<unsigned long, std::unordered_set<unsigned int>, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, std::unordered_set<unsigned int>>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}}"_cellLookupCoords"{vector<TSTLookupKeyCoord, std::allocator<TSTLookupKeyCoord>>="__begin_"^{TSTLookupKeyCoord}"__end_"^{TSTLookupKeyCoord}"__end_cap_"{__compressed_pair<TSTLookupKeyCoord *, std::allocator<TSTLookupKeyCoord>>="__value_"^{TSTLookupKeyCoord}}}}
@52@0:8{TSKUIDStruct=QQ}16{TSKUIDStruct=QQ}32i48
v28@0:8B16@?20
@"<TSCERemoteDataStoreDelegate>"
@"NSOperationQueue"
@"TSCERemoteDataSpecifierSet"
{vector<TSTStrokeLayer *__unsafe_unretained, std::allocator<TSTStrokeLayer *__unsafe_unretained>>=^@^@{__compressed_pair<TSTStrokeLayer *__unsafe_unretained *, std::allocator<TSTStrokeLayer *__unsafe_unretained>>=^@}}16@0:8
v40@0:8{TSTSimpleRange=qQ}16@?32
@48@0:8@16@24{TSTSimpleRange=qQ}32
v44@0:8@16i24{TSTSimpleRange=qQ}28
v40@0:8@16{TSTSimpleRange=qQ}24
B32@0:8{TSTSimpleRange=qQ}16
{?=@@@@@}16@0:8
@"TSTMutableStrokeLayer"
v32@0:8^v16@?24
d40@0:8{TSTSimpleRange=qQ}16d32
d24@0:8q16
@"TSTStrokeOrderedLayer"
v56@0:8{TSUCellCoord=ISBB}16^@24^@32^@40^@48
@24@0:8S16S20
@"<TSTCustomStrokeProviding>"
Q40@0:8@16Q24Q32
Q48@0:8@16@24Q32Q40
v40@0:8@16Q24Q32
{TSUViewColumnOrRowIndex=I}20@0:8{TSUModelColumnOrRowIndex=I}16
v28@0:8{TSUModelColumnOrRowIndex=I}16{TSUViewColumnOrRowIndex=I}20C24
B28@0:8r^{TSKUIDStruct=QQ}16C24
B36@0:8r^{TSKUIDStruct=QQ}16{TSUModelColumnOrRowIndex=I}24{TSUViewColumnOrRowIndex=I}28C32
B24@0:8{TSUViewColumnOrRowIndex=I}16C20
B24@0:8{TSUModelColumnOrRowIndex=I}16C20
C20@0:8{TSUViewColumnOrRowIndex=I}16
C20@0:8{TSUModelColumnOrRowIndex=I}16
I32@0:8{_NSRange=QQ}16
B36@0:8{_NSRange=QQ}16C32
I24@0:8I16I20
v36@0:8{_NSRange=QQ}16{TSUModelColumnOrRowIndex=I}32
v36@0:8{_NSRange=QQ}16{TSUViewColumnOrRowIndex=I}32
v24@0:8{TSUModelColumnOrRowIndex=I}16{TSUModelColumnOrRowIndex=I}20
@48@0:8@16@24r^{TSKUIDStruct=QQ}32r^{TSUCellCoord=ISBB}40
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}32@0:8@16r^{TSUCellCoord=ISBB}24
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}40@0:8@16r^{TSUCellCoord=ISBB}24B32C36
@120@0:8{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16@112
v48@0:8@16r^{TSUCellCoord=ISBB}24@32@40
{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}20@0:8{TSUModelColumnOrRowIndex=I}16
{unordered_map<TSKUIDStruct, unsigned char, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, unsigned char>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, unsigned char>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned char>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned char>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, unsigned char>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned char>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned char>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned char>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned char>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned char>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned char>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned char>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned char>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned char>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned char>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned char>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
{vector<TSUCellRect, std::allocator<TSUCellRect>>=^{TSUCellRect}^{TSUCellRect}{__compressed_pair<TSUCellRect *, std::allocator<TSUCellRect>>=^{TSUCellRect}}}24@0:8r^v16
v32@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16{TSUModelCellCoord={TSUCellCoord=ISBB}}24
v24@0:8r^{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}48@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}32
{vector<TSUModelCellRect, std::allocator<TSUModelCellRect>>=^{TSUModelCellRect}^{TSUModelCellRect}{__compressed_pair<TSUModelCellRect *, std::allocator<TSUModelCellRect>>=^{TSUModelCellRect}}}24@0:8r^v16
B24@0:8r^{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{TSUModelCellCoord={TSUCellCoord=ISBB}}24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}44@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24@32B40
v44@0:8{_NSRange=QQ}16r^v32B40
{unordered_map<TSUModelCellCoord, TSUModelCellCoord, std::hash<TSUModelCellCoord>, std::equal_to<TSUModelCellCoord>, std::allocator<std::pair<const TSUModelCellCoord, TSUModelCellCoord>>>="__table_"{__hash_table<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, std::__unordered_map_hasher<TSUModelCellCoord, std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, std::hash<TSUModelCellCoord>, std::equal_to<TSUModelCellCoord>, true>, std::__unordered_map_equal<TSUModelCellCoord, std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, std::equal_to<TSUModelCellCoord>, std::hash<TSUModelCellCoord>, true>, std::allocator<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSUModelCellCoord, std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, std::hash<TSUModelCellCoord>, std::equal_to<TSUModelCellCoord>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSUModelCellCoord, std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, std::equal_to<TSUModelCellCoord>, std::hash<TSUModelCellCoord>, true>>="__value_"f}}}
@"TSTMergeChangeDistributor"
@"TSTCellRangeCache"
@40@0:8@16r^{TSKUIDStruct=QQ}24@32
{TSCESpanningRangeRef={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}C}20@0:8S16
@24@0:8r^{TSCESpanningRangeRef={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}C}16
@48@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}32
i28@0:8@16i24
{CGSize=dd}40@0:8@16d24@32
d20@0:8B16
d36@0:8S16B20B24^B28
d60@0:8I16B20B24B28B32{CGSize=dd}36^B52
d44@0:8{CGSize=dd}16I32d36
d24@0:8I16B20
v44@0:8@16i24I28B32I36I40
v28@0:8I16I20I24
B28@0:8^I16B24
d28@0:8I16I20I24
d24@0:8I16I20
v36@0:8I16I20I24@?28
{CGSize=dd}36@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16B32
d36@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16B32
d40@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16@32
d44@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16B32@36
d52@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16B32{CGSize=dd}36
v32@0:8d16Q24
B32@0:8^@16{TSUCellCoord=ISBB}24
B28@0:8q16I24
v40@0:8@16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24
v36@0:8i16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}20
v52@0:8i16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}20{TSUCellRect={TSUCellCoord=ISBB}{?=II}}36
v84@0:8@16{TSUCellCoord=ISBB}24{TSUCellRect={TSUCellCoord=ISBB}{?=II}}32B48@52@60@68@76
v52@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16@32B40@44
v40@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16@32
v40@0:8{TSUCellCoord=ISBB}16{TSUCellCoord=ISBB}24@32
{TSUCellCoord=ISBB}56@0:8{TSUCellCoord=ISBB}16{TSUCellCoord=ISBB}24{TSUCellRect={TSUCellCoord=ISBB}{?=II}}32@48
v36@0:8@16S24@28
v36@0:8@16I24@28
v36@0:8i16@20@28
@76@0:8{TSUCellCoord=ISBB}16@24@32B40i44@48i56Q60Q68
v104@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16@32@40{TSUCellRect={TSUCellCoord=ISBB}{?=II}}48B64i68@72B80i84@88@96
@56@0:8@16{TSUCellCoord=ISBB}24@32^q40^i48
@52@0:8@16{TSUCellCoord=ISBB}24@32q40i48
@40@0:8@16{TSUCellCoord=ISBB}24@32
{UIEdgeInsets=dddd}24@0:8{TSUCellCoord=ISBB}16
{vector<TSTStrokeLayerStack *, std::allocator<TSTStrokeLayerStack *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<TSTStrokeLayerStack *__strong *, std::allocator<TSTStrokeLayerStack *>>="__value_"^@}}
@"NSObject<OS_dispatch_group>"
@"TSKChangeNotifier"
@"TSTStrokeDefaultVendor"
@"TSTWPColumnCache"
@"TSTDupContentCache"
@"TSTWidthHeightCache"
@"TSTHiddenRowsColumnsCache"
@"TSDFill"
@"TSTLayout"
@"<TSTLayoutDynamicContentProtocol>"
@"TSUColor"
@"TSDInfoGeometry"
@"TSDLayoutGeometry"
@"<TSTLayoutDynamicCellFillProtocol>"
@"TSTMergeRangeSortedSet"
@"<TSWPStyleProviding>"
@"TSTFontInfoCache"
@"TSUWidthLimitedQueue"
@"TSTConcurrentMutableIndexSet"
@"TSTStrokeWidthCache"
@"TSTTextStyleToFontHeightCache"
@"NSCountedSet"
@"TSTLayoutDynamicResizeInfo"
@"TSWPColumnStyle"
@"TSTTextEngineDelegate"
B24@0:8@"TSKSelectionPath"16
@"<TSDHint>"16@0:8
@92@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16{TSUCellCoord=ISBB}32I40{CGSize=dd}44{CGSize=dd}60@76B84B88
@"NSNumber"
@32@0:8@"TSPObjectContext"16@"<TSDHint>"24
v24@0:8@"<TSDHint>"16
@60@0:8{CGSize=dd}16@32@40B48o^B52
B36@0:8@16@24B32
@"TSDLayout"60@0:8{CGSize=dd}16@"TSDLayout"32@"<TSDHint>"40B48o^B52
@"<TSDHint>"60@0:8{CGSize=dd}16@"TSDLayout"32@"<TSDHint>"40B48o^B52
@"TSDLayout"32@0:8@"<TSDHint>"16@"TSDLayout"24
B36@0:8@"<TSDHint>"16@"<TSDHint>"24B32
@"<TSDHint>"24@0:8@"TSDLayout"16
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}44@0:8{CGSize=dd}16@32B40
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}68@0:8S16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}20d36{CGSize=dd}44@60
B28@0:8@16B24
B56@0:8@16{CGSize=dd}24@40@48
@32@0:8{CGSize=dd}16
B24@0:8@?16
@"TSTLayoutSpace"
@56@0:8@16^v24S32r^{TSKUIDStruct=QQ}36@44S52
v36@0:8^v16r^{TSUCellCoord=ISBB}24B32
v36@0:8r^{TSKUIDStruct=QQ}16r^{TSKUIDStruct=QQ}24S32
@"TSCEUuidReferences"
@"<TSCEFormulaOwning>"
@"<TSCECalculationEngineRegistration>"
@44@0:8i16{_NSRange=QQ}20@36
{unordered_map<unsigned int, TSTTableDataObject *, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<const unsigned int, TSTTableDataObject *>>>="__table_"{__hash_table<std::__hash_value_type<unsigned int, TSTTableDataObject *>, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, TSTTableDataObject *>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, TSTTableDataObject *>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>, std::allocator<std::__hash_value_type<unsigned int, TSTTableDataObject *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned int, TSTTableDataObject *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, TSTTableDataObject *>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, TSTTableDataObject *>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>>="__value_"f}}}
@64@0:8@16@24{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}32Q48Q56
@80@0:8@16@24@32@40{TSUCellRect={TSUCellCoord=ISBB}{?=II}}48Q64Q72
v40@0:8@?16@?24@?32
v48@0:8@?16@?24@?32@?40
{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}}32@0:8@16@24
@40@0:8r^v16r^v24@32
@28@0:8i16r^v20
@40@0:8r^v16r^v24r^v32
{vector<TSCEFormulaObject *, std::allocator<TSCEFormulaObject *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<TSCEFormulaObject *__strong *, std::allocator<TSCEFormulaObject *>>="__value_"^@}}
v64@0:8r^{TSKUIDStruct=QQ}16Q24^v32^v40^v48^v56
v40@0:8r^v16Q24^v32
@"TSTCellUIDLookupListWrapper"
{TSKUIDStruct=QQ}64@0:8r^v16r^v24^Q32^Q40^Q48^v56
B32@0:8^v16Q24
{deque<TSKUIDStruct, std::allocator<TSKUIDStruct>>="__map_"{__split_buffer<TSKUIDStruct *, std::allocator<TSKUIDStruct *>>="__first_"^^{TSKUIDStruct}"__begin_"^^{TSKUIDStruct}"__end_"^^{TSKUIDStruct}"__end_cap_"{__compressed_pair<TSKUIDStruct **, std::allocator<TSKUIDStruct *>>="__value_"^^{TSKUIDStruct}}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::allocator<TSKUIDStruct>>="__value_"Q}}
@44@0:8i16@20{TSKUIDStruct=QQ}28
@32@0:8^{TSCEBooleanValue=^^?B{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}}16@24
^{TSCEBooleanValue=^^?B{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}}16@0:8
^{TSCEBooleanValue=^^?B{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}}
@36@0:8S16@20q28
@60@0:8S16@20q28q36q44q52
[256@"TSTTableTile"]
[256@"TSPLazyReference"]
@32@0:8r^{TSUDecimal={?=[2Q]}}16@24
@32@0:8^{TSCENumberValue=^^?{TSUDecimal={?=[2Q]}}{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}SB}16@24
^{TSCENumberValue=^^?{TSUDecimal={?=[2Q]}}{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}SB}
{unordered_map<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}
@"TSTHierarchicalCellDiffMap"
@56@0:8@16{TSKUIDStruct=QQ}24@40@48
Q40@0:8@16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24
@36@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16B32
@40@0:8q16{TSKUIDStruct=QQ}24
{map<TSKUIDStruct, TSTPivotGroupingColumnOptions *, std::less<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSTPivotGroupingColumnOptions *>>>="__tree_"{__tree<std::__value_type<TSKUIDStruct, TSTPivotGroupingColumnOptions *>, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSTPivotGroupingColumnOptions *>, std::less<TSKUIDStruct>, true>, std::allocator<std::__value_type<TSKUIDStruct, TSTPivotGroupingColumnOptions *>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSKUIDStruct, TSTPivotGroupingColumnOptions *>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSTPivotGroupingColumnOptions *>, std::less<TSKUIDStruct>, true>>="__value_"Q}}}
d20@0:8S16
v36@0:8^d16^d24I32
B24@0:8I16S20
v36@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16I32
v36@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16S32
@40@0:8@16@24I32S36
{vector<TSTWidthHeightCacheEntry<4>, std::allocator<TSTWidthHeightCacheEntry<4>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<TSTWidthHeightCacheEntry<4> *, std::allocator<TSTWidthHeightCacheEntry<4>>>="__value_"^v}}
@"TSCERemoteDataCoordinator"
@"TSUNetworkReachability"
@"NSObject<OS_dispatch_source>"
@36@0:8@16@24C32
v36@0:8r^v16r^{TSKUIDStruct=QQ}24B32
{unordered_map<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
@36@0:8i16@20@28
@44@0:8i16{TSUCellCoord=ISBB}20@28@36
@52@0:8i16@20@28Q36Q44
@44@0:8i16@20Q28Q36
@44@0:8i16{TSUCellCoord=ISBB}20{TSUCellRect={TSUCellCoord=ISBB}{?=II}}28
@60@0:8i16{TSUCellCoord=ISBB}20{TSUCellRect={TSUCellCoord=ISBB}{?=II}}28{TSUCellRect={TSUCellCoord=ISBB}{?=II}}44
@36@0:8i16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}20
@52@0:8i16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}20{TSUCellRect={TSUCellCoord=ISBB}{?=II}}36
v36@0:8@16i24@?28
@68@0:8i16@20{TSUCellCoord=ISBB}28@36@44@52@60
@60@0:8i16@20{TSUCellCoord=ISBB}28@36@44@52
@"NSHashTable"
@"NSSet"
@"TSULocale"16@0:8
@"<TSWPStyleProviding>"16@0:8
@64@0:8{UIEdgeInsets=dddd}16i48@52B60
@26@0:8{TSUModelColumnIndex=S}16i18i22
{unordered_map<TSKUIDStruct, TSCEMutableUIDSet *, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSCEMutableUIDSet *>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
{TSKUIDStruct=QQ}24@0:8I16B20
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}28@0:8@16B24
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}36@0:8{_NSRange=QQ}16B32
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}28@0:8@"NSIndexSet"16B24
@"NSMutableIndexSet"28@0:8r^v16B24
v48@0:8{UIEdgeInsets=dddd}16
@"TSTTextStyleHandle"
@"TSTLayoutContentCachedKey"
@"TSWPColumn"
v24@0:8^{CGImage=}16
^{CGImage=}16@0:8
^{CGImage=}
v52@0:8@16C24^v28^v36^v44
@48@0:8@16@24r^v32r^v40
Q20@0:8B16
C20@0:8B16
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}32@0:8r^v16q24
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}24@0:8q16
@40@0:8I16C20^{TSKUIDStruct=QQ}24q32
C40@0:8{_NSRange=QQ}16q32
r^v24@0:8q16
v32@0:8r^v16q24
v40@0:8r^v16r^{TSKUIDStruct=QQ}24q32
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}40@0:8r^v16r^v24q32
@"TSTReferenceNode"
@"<TSTCanvasReferenceProvider>"
@52@0:8@16{TSTSimpleRange=qQ}24i40Q44
@"TSTStrokeLayer"24@0:8Q16
@32@0:8{TSTSimpleRange=qQ}16
{vector<TSTStrokeLayerRun, std::allocator<TSTStrokeLayerRun>>="__begin_"^{TSTStrokeLayerRun}"__end_"^{TSTStrokeLayerRun}"__end_cap_"{__compressed_pair<TSTStrokeLayerRun *, std::allocator<TSTStrokeLayerRun>>="__value_"^{TSTStrokeLayerRun}}}
v32@0:8q16q24
v40@0:8{_NSRange=QQ}16q32
v116@0:8@16@24i32@36@44i52@56@64i72@76@84i92@96@104i112
v32@0:8@16r^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}24
{vector<NSString *, std::allocator<NSString *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<NSString *__strong *, std::allocator<NSString *>>="__value_"^@}}
{vector<TSCEValue, std::allocator<TSCEValue>>="__begin_"^{TSCEValue}"__end_"^{TSCEValue}"__end_cap_"{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>="__value_"^{TSCEValue}}}
{vector<bool, std::allocator<bool>>="__begin_"^Q"__size_"Q"__cap_alloc_"{__compressed_pair<unsigned long, std::allocator<unsigned long>>="__value_"Q}}
@52@0:8r^{TSCEGrid=^^?@{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}}16@24i32^{TSCEEvaluationContext=}36B44B48
{TSCETaggedDecimalList="_list"{vector<TSCETaggedDecimal, std::allocator<TSCETaggedDecimal>>="__begin_"^{TSCETaggedDecimal}"__end_"^{TSCETaggedDecimal}"__end_cap_"{__compressed_pair<TSCETaggedDecimal *, std::allocator<TSCETaggedDecimal>>="__value_"^{TSCETaggedDecimal}}}"_startIdx"Q"_size"Q}
@"TSSStyle"
@"TSSStylesheet"
Q28@0:8@16i24
v28@0:8Q16B24
^{TSUCellRect={TSUCellCoord=ISBB}{?=II}}
d40@0:8@16d24N^d32
[8{os_unfair_lock_s="_os_unfair_lock_opaque"I}]
[8{unordered_map<TSTFontInfoCacheDupContentEntry, double, std::hash<TSTFontInfoCacheDupContentEntry>, std::equal_to<TSTFontInfoCacheDupContentEntry>, std::allocator<std::pair<const TSTFontInfoCacheDupContentEntry, double>>>="__table_"{__hash_table<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, std::__unordered_map_hasher<TSTFontInfoCacheDupContentEntry, std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, std::hash<TSTFontInfoCacheDupContentEntry>, std::equal_to<TSTFontInfoCacheDupContentEntry>, true>, std::__unordered_map_equal<TSTFontInfoCacheDupContentEntry, std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, std::equal_to<TSTFontInfoCacheDupContentEntry>, std::hash<TSTFontInfoCacheDupContentEntry>, true>, std::allocator<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSTFontInfoCacheDupContentEntry, std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, std::hash<TSTFontInfoCacheDupContentEntry>, std::equal_to<TSTFontInfoCacheDupContentEntry>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSTFontInfoCacheDupContentEntry, std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, std::equal_to<TSTFontInfoCacheDupContentEntry>, std::hash<TSTFontInfoCacheDupContentEntry>, true>>="__value_"f}}}]
[8@"NSMutableArray"]
@"TSWPTextMeasurerBundle"
{unordered_map<unsigned long, TSTFontInfoCacheEntry *, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, TSTFontInfoCacheEntry *>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, TSTFontInfoCacheEntry *>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, TSTFontInfoCacheEntry *>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, TSTFontInfoCacheEntry *>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, TSTFontInfoCacheEntry *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSTFontInfoCacheEntry *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSTFontInfoCacheEntry *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSTFontInfoCacheEntry *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSTFontInfoCacheEntry *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSTFontInfoCacheEntry *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSTFontInfoCacheEntry *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSTFontInfoCacheEntry *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, TSTFontInfoCacheEntry *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSTFontInfoCacheEntry *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, TSTFontInfoCacheEntry *>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, TSTFontInfoCacheEntry *>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}
{vector<std::vector<NSString *>, std::allocator<std::vector<NSString *>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::vector<NSString *> *, std::allocator<std::vector<NSString *>>>="__value_"^v}}
{vector<TSKUIDStructCoord, std::allocator<TSKUIDStructCoord>>="__begin_"^{TSKUIDStructCoord}"__end_"^{TSKUIDStructCoord}"__end_cap_"{__compressed_pair<TSKUIDStructCoord *, std::allocator<TSKUIDStructCoord>>="__value_"^{TSKUIDStructCoord}}}
^v24@0:8@16
^v32@0:8@16r^{TSUCellCoord=ISBB}24
{map<NSString *, TSTHeaderNameMgrEntry *, std::less<NSString *>, std::allocator<std::pair<NSString *const, TSTHeaderNameMgrEntry *>>>="__tree_"{__tree<std::__value_type<NSString *, TSTHeaderNameMgrEntry *>, std::__map_value_compare<NSString *, std::__value_type<NSString *, TSTHeaderNameMgrEntry *>, std::less<NSString *>, true>, std::allocator<std::__value_type<NSString *, TSTHeaderNameMgrEntry *>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<NSString *, TSTHeaderNameMgrEntry *>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<NSString *, std::__value_type<NSString *, TSTHeaderNameMgrEntry *>, std::less<NSString *>, true>>="__value_"Q}}}
@"TSTHeaderNameMgr"
{TSCECellRefSet={map<TSKUIDStruct, TSCECellCoordSet, std::less<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSCECellCoordSet>>>={__tree<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>, std::allocator<std::__value_type<TSKUIDStruct, TSCECellCoordSet>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>>=Q}}}}24@0:8@16
{unordered_map<NSString *, TSCECellRefSet, std::hash<NSString *>, std::equal_to<NSString *>, std::allocator<std::pair<NSString *const, TSCECellRefSet>>>="__table_"{__hash_table<std::__hash_value_type<NSString *, TSCECellRefSet>, std::__unordered_map_hasher<NSString *, std::__hash_value_type<NSString *, TSCECellRefSet>, std::hash<NSString *>, std::equal_to<NSString *>, true>, std::__unordered_map_equal<NSString *, std::__hash_value_type<NSString *, TSCECellRefSet>, std::equal_to<NSString *>, std::hash<NSString *>, true>, std::allocator<std::__hash_value_type<NSString *, TSCECellRefSet>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSCECellRefSet>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSCECellRefSet>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSCECellRefSet>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSCECellRefSet>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSCECellRefSet>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSCECellRefSet>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSCECellRefSet>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<NSString *, TSCECellRefSet>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSCECellRefSet>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<NSString *, std::__hash_value_type<NSString *, TSCECellRefSet>, std::hash<NSString *>, std::equal_to<NSString *>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<NSString *, std::__hash_value_type<NSString *, TSCECellRefSet>, std::equal_to<NSString *>, std::hash<NSString *>, true>>="__value_"f}}}
v32@0:8^v16r^{TSUCellCoord=ISBB}24
{TSUCellCoord=ISBB}20@0:8B16
{TSUCellCoord=ISBB}32@0:8r^{TSUCellCoord=ISBB}16@24
{vector<NSString *, std::allocator<NSString *>>=^@^@{__compressed_pair<NSString *__strong *, std::allocator<NSString *>>=^@}}28@0:8@16B24
^{TSTHeaderPerTable={TSKUIDStruct=QQ}{TSUCellCoord=ISBB}@@@@B}28@0:8r^{TSKUIDStruct=QQ}16B24
B28@0:8r^{TSKUIDStruct=QQ}16B24
^v24@0:8r^{TSUCellCoord=ISBB}16
@36@0:8@16B24^Q28
v40@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24r^{TSKUIDStruct=QQ}32
B40@0:8r^v16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24r^{TSKUIDStruct=QQ}32
v32@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16r^{TSKUIDStruct=QQ}24
{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}24@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16
B40@0:8@16r^v24r^{TSKUIDStruct=QQ}32
@28@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16B24
@36@0:8@16r^{TSKUIDStruct=QQ}24B32
{TSCECellRefSet={map<TSKUIDStruct, TSCECellCoordSet, std::less<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSCECellCoordSet>>>={__tree<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>, std::allocator<std::__value_type<TSKUIDStruct, TSCECellCoordSet>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>>=Q}}}}36@0:8@16r^{TSKUIDStruct=QQ}24B32
{TSCECellRefSet={map<TSKUIDStruct, TSCECellCoordSet, std::less<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSCECellCoordSet>>>={__tree<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>, std::allocator<std::__value_type<TSKUIDStruct, TSCECellCoordSet>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>>=Q}}}}24@0:8r^{TSKUIDStruct=QQ}16
{vector<TSTHeaderNameMgrTile *, std::allocator<TSTHeaderNameMgrTile *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<TSTHeaderNameMgrTile *__strong *, std::allocator<TSTHeaderNameMgrTile *>>="__value_"^@}}
{unordered_map<TSUCellCoord, TSTHeaderNameMgrEntry *, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, std::allocator<std::pair<const TSUCellCoord, TSTHeaderNameMgrEntry *>>>="__table_"{__hash_table<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>, std::allocator<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>>="__value_"f}}}
{unordered_map<TSCEUidCellRef, TSCECellCoordSet, std::hash<TSCEUidCellRef>, std::equal_to<TSCEUidCellRef>, std::allocator<std::pair<const TSCEUidCellRef, TSCECellCoordSet>>>="__table_"{__hash_table<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, std::__unordered_map_hasher<TSCEUidCellRef, std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, std::hash<TSCEUidCellRef>, std::equal_to<TSCEUidCellRef>, true>, std::__unordered_map_equal<TSCEUidCellRef, std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, std::equal_to<TSCEUidCellRef>, std::hash<TSCEUidCellRef>, true>, std::allocator<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSCEUidCellRef, std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, std::hash<TSCEUidCellRef>, std::equal_to<TSCEUidCellRef>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSCEUidCellRef, std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, std::equal_to<TSCEUidCellRef>, std::hash<TSCEUidCellRef>, true>>="__value_"f}}}
{unordered_map<TSKUIDStruct, TSTHeaderPerTable *, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSTHeaderPerTable *>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
{unordered_map<TSUCellCoord, TSKUIDStruct, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, std::allocator<std::pair<const TSUCellCoord, TSKUIDStruct>>>="__table_"{__hash_table<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>, std::allocator<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>>="__value_"f}}}
@"TSCENameTrie"
{unordered_map<NSString *, TSUCellCoord, std::hash<NSString *>, std::equal_to<NSString *>, std::allocator<std::pair<NSString *const, TSUCellCoord>>>="__table_"{__hash_table<std::__hash_value_type<NSString *, TSUCellCoord>, std::__unordered_map_hasher<NSString *, std::__hash_value_type<NSString *, TSUCellCoord>, std::hash<NSString *>, std::equal_to<NSString *>, true>, std::__unordered_map_equal<NSString *, std::__hash_value_type<NSString *, TSUCellCoord>, std::equal_to<NSString *>, std::hash<NSString *>, true>, std::allocator<std::__hash_value_type<NSString *, TSUCellCoord>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSUCellCoord>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSUCellCoord>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSUCellCoord>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSUCellCoord>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSUCellCoord>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSUCellCoord>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSUCellCoord>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<NSString *, TSUCellCoord>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSUCellCoord>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<NSString *, std::__hash_value_type<NSString *, TSUCellCoord>, std::hash<NSString *>, std::equal_to<NSString *>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<NSString *, std::__hash_value_type<NSString *, TSUCellCoord>, std::equal_to<NSString *>, std::hash<NSString *>, true>>="__value_"f}}}
{vector<TSCECellRef, std::allocator<TSCECellRef>>="__begin_"^{TSCECellRef}"__end_"^{TSCECellRef}"__end_cap_"{__compressed_pair<TSCECellRef *, std::allocator<TSCECellRef>>="__value_"^{TSCECellRef}}}
@60@0:8@16{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24B56
@36@0:8@16{TSUCellCoord=ISBB}24B32
@"TSTCellDiffArray"
v32@0:8{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}16
@32@0:8r^{TSKUIDStruct=QQ}16r^v24
@24@0:8{TSUModelColumnOrRowIndex=I}16i20
@20@0:8{TSUModelColumnOrRowIndex=I}16
{TSUModelColumnOrRowIndex=I}16@0:8
{TSUModelColumnOrRowIndex="_index"I}
@24@0:8{TSUViewColumnOrRowIndex=I}16i20
{TSUViewColumnOrRowIndex=I}16@0:8
{TSUViewColumnOrRowIndex="_index"I}
r*16@0:8
{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__l"{__long=""{?="__is_long_"b1"__cap_"b63}"__size_"Q"__data_"*}"__s"{__short=""{?="__is_long_"b1"__size_"b7}"__padding_"[0c]"__data_"[23c]}"__r"{__raw="__words"[3Q]})}}}
@56@0:8@16Q24Q32{TSUCellRect={TSUCellCoord=ISBB}{?=II}}40
v48@0:8@16Q24Q32@?40
v64@0:8@16Q24Q32{TSUCellRect={TSUCellCoord=ISBB}{?=II}}40@?56
v32@0:8r^{TSCEInternalCellReference={TSUCellCoord=ISBB}SS}16r^{TSKUIDStruct=QQ}24
@32@0:8r^v16^v24
v36@0:8^v16B24@28
{unordered_map<TSKUIDStruct, TSCEInternalCellRefSet, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSCEInternalCellRefSet>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
{unordered_map<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>, std::hash<TSCEInternalCellReference>, std::equal_to<TSCEInternalCellReference>, std::allocator<std::pair<const TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>>>="__table_"{__hash_table<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>, std::__unordered_map_hasher<TSCEInternalCellReference, std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>, std::hash<TSCEInternalCellReference>, std::equal_to<TSCEInternalCellReference>, true>, std::__unordered_map_equal<TSCEInternalCellReference, std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>, std::equal_to<TSCEInternalCellReference>, std::hash<TSCEInternalCellReference>, true>, std::allocator<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSCEInternalCellReference, std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>, std::hash<TSCEInternalCellReference>, std::equal_to<TSCEInternalCellReference>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSCEInternalCellReference, std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>, std::equal_to<TSCEInternalCellReference>, std::hash<TSCEInternalCellReference>, true>>="__value_"f}}}
@36@0:8d16B24o^d28
{CGRect={CGPoint=dd}{CGSize=dd}}56@0:8d16{CGRect={CGPoint=dd}{CGSize=dd}}24
{CGRect={CGPoint=dd}{CGSize=dd}}76@0:8d16{CGRect={CGPoint=dd}{CGSize=dd}}24B56o^@60o^{CGSize=dd}68
v76@0:8B16d20^{CGContext=}28{CGRect={CGPoint=dd}{CGSize=dd}}36@68
v76@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16d32{UIEdgeInsets=dddd}40B72
{set<TSTMergeRangeElem, TSTMergeRangeElemCompare, std::allocator<TSTMergeRangeElem>>="__tree_"{__tree<TSTMergeRangeElem, TSTMergeRangeElemCompare, std::allocator<TSTMergeRangeElem>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<TSTMergeRangeElem, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, TSTMergeRangeElemCompare>="__value_"Q}}}
@112@0:8@16d24d32@40B48C52{UIEdgeInsets=dddd}56i88i92q96@104
@40@0:8@"TSTLayoutEngine"16@"TSTCellRegion"24@"TSTCellRegion"32
@24@0:8@"TSTLayoutEngine"16
@32@0:8@"TSTLayoutEngine"16@"TSTCellRegion"24
@24@0:8@"<TSTLayoutDynamicResizeInfoProtocol>"16
v24@0:8@"TSTLayoutEngine"16
@"TSTImmutableColumnRowUIDMap"
B32@0:8@16Q24
{unordered_map<TSUViewColumnIndex, TSUModelColumnIndex, std::hash<TSUViewColumnIndex>, std::equal_to<TSUViewColumnIndex>, std::allocator<std::pair<const TSUViewColumnIndex, TSUModelColumnIndex>>>="__table_"{__hash_table<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, std::__unordered_map_hasher<TSUViewColumnIndex, std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, std::hash<TSUViewColumnIndex>, std::equal_to<TSUViewColumnIndex>, true>, std::__unordered_map_equal<TSUViewColumnIndex, std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, std::equal_to<TSUViewColumnIndex>, std::hash<TSUViewColumnIndex>, true>, std::allocator<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSUViewColumnIndex, std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, std::hash<TSUViewColumnIndex>, std::equal_to<TSUViewColumnIndex>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSUViewColumnIndex, std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, std::equal_to<TSUViewColumnIndex>, std::hash<TSUViewColumnIndex>, true>>="__value_"f}}}
@"TSTCategoryTranslator"
@"TSTTableDataListCache"
@"TSTTableTile"
@"TSTTableTileRowInfo"
@45@0:8@16r^{TSKUIDStruct=QQ}24{TSUPreserveFlags=C}32C33C37S41
@33@0:8@16r^{TSKUIDStruct=QQ}24{TSUPreserveFlags=C}32
@"TSCEUndoTract"
@40@0:8C16{TSKUIDStruct=QQ}20C36
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
v24@0:8^{TSKUIDStruct=QQ}16
{map<TSKUIDStructCoord, TSTCell *, std::less<TSKUIDStructCoord>, std::allocator<std::pair<const TSKUIDStructCoord, TSTCell *>>>="__tree_"{__tree<std::__value_type<TSKUIDStructCoord, TSTCell *>, std::__map_value_compare<TSKUIDStructCoord, std::__value_type<TSKUIDStructCoord, TSTCell *>, std::less<TSKUIDStructCoord>, true>, std::allocator<std::__value_type<TSKUIDStructCoord, TSTCell *>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSKUIDStructCoord, TSTCell *>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<TSKUIDStructCoord, std::__value_type<TSKUIDStructCoord, TSTCell *>, std::less<TSKUIDStructCoord>, true>>="__value_"Q}}}
@34@0:8@16{TSUModelColumnIndex=S}24@26
@42@0:8@16@24{TSUModelColumnIndex=S}32@34
@32@0:8@16^B24
B36@0:8I16r^{TSKUIDStruct=QQ}20@28
{TSUModelColumnIndex=S}24@0:8@16
@"TSTFormulaPredicate"
B28@0:8q16C24
B36@0:8I16@20@28
v44@0:8@16@24Q32B40
v34@0:8{TSUModelColumnIndex=S}16@18@?26
@26@0:8{TSUModelColumnIndex=S}16@18
Q26@0:8{TSUModelColumnIndex=S}16@18
@76@0:8r^{TSKUIDStruct=QQ}16r^{TSKUIDStruct=QQ}24r^{TSKUIDStruct=QQ}32r^{TSKUIDStruct=QQ}40C48C52S56r^{TSUPreserveFlags=C}60s68C72
@68@0:8r^{TSKUIDStruct=QQ}16r^{TSKUIDStruct=QQ}24r^{TSKUIDStruct=QQ}32r^{TSKUIDStruct=QQ}40C48C52S56r^{TSUPreserveFlags=C}60
@52@0:8r^{TSKUIDStruct=QQ}16r^{TSKUIDStruct=QQ}24r^{TSKUIDStruct=QQ}32C40C44S48
@48@0:8r^{TSKUIDStruct=QQ}16r^{TSKUIDStruct=QQ}24r^{TSKUIDStruct=QQ}32C40C44
@52@0:8C16{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}20{TSUCellCoord=ISBB}44
@36@0:8C16@20{TSUCellCoord=ISBB}28
B32@0:8@16{TSUCellCoord=ISBB}24
@56@0:8C16@20@28@36C44C48B52
@80@0:8C16@20@28C36C40{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}44{TSUCellCoord=ISBB}68B76
@64@0:8C16@20@28C36C40@44{TSUCellCoord=ISBB}52B60
@76@0:8C16@20@28C36C40{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}44{TSUCellCoord=ISBB}68
{TSCEFormulaCreator=@?}44@0:8C16C20@24I32B36B40
@96@0:8C16@20@28d36d44C52C56{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}60{TSUCellCoord=ISBB}84B92
@92@0:8C16@20@28d36d44C52C56{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}60{TSUCellCoord=ISBB}84
@72@0:8C16d20d28C36{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}40{TSUCellCoord=ISBB}64
@80@0:8C16d20C28d32C40C44{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}48{TSUCellCoord=ISBB}72
@60@0:8C16@20{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}28{TSUCellCoord=ISBB}52
v40@0:8r^{TSKUIDStruct=QQ}16r^{TSKUIDStruct=QQ}24r^{TSKUIDStruct=QQ}32
v48@0:8^v16@24r^{TSKUIDStruct=QQ}32r^{TSUCellCoord=ISBB}40
C48@0:8@16Q24@32{TSUCellCoord=ISBB}40
B36@0:8C16C20C24^B28
B40@0:8{TSUCellCoord=ISBB}16r^{TSKUIDStruct=QQ}24@32
v32@0:8q16@24
v40@0:8r^v16^{TSCEFormulaRewriteContext=@@{TSCEFormulaRewriteContextRecord={TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}{TSKUIDStruct=QQ}{TSUColumnRowOffset=ii}BBBBBBB}}24^B32
v28@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16C24
@32@0:8r^{TSKUIDStruct=QQ}16{TSUCellCoord=ISBB}24
C24@0:8C16B20
{TSCEUidCellRef={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16@0:8
v64@0:8{TSCEUidCellRef={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
@"TSTFormulaPredArg"
{TSCEUidCellRef="_columnUid"{TSKUIDStruct="_lower"Q"_upper"Q}"_rowUid"{TSKUIDStruct="_lower"Q"_upper"Q}"_tableUid"{TSKUIDStruct="_lower"Q"_upper"Q}}
@"TSTStrokeSelection"
@68@0:8i16@20d28{CGRect={CGPoint=dd}{CGSize=dd}}36
v24@0:8^{CGContext=}16
@40@0:8@16@24@?32
{vector<TSUCellRect, std::allocator<TSUCellRect>>=^{TSUCellRect}^{TSUCellRect}{__compressed_pair<TSUCellRect *, std::allocator<TSUCellRect>>=^{TSUCellRect}}}32@0:8^v16^v24
@36@0:8{_NSRange=QQ}16I32
@36@0:8{_NSRange=QQ}16S32
v32@0:8q16@?24
v40@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16@?32
{vector<TSUCellRect, std::allocator<TSUCellRect>>=^{TSUCellRect}^{TSUCellRect}{__compressed_pair<TSUCellRect *, std::allocator<TSUCellRect>>=^{TSUCellRect}}}24@0:8Q16
@32@0:8{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
v36@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16B32
{set<TSUCellRect, TSTCellRangeRowMajorLess, std::allocator<TSUCellRect>>="__tree_"{__tree<TSUCellRect, TSTCellRangeRowMajorLess, std::allocator<TSUCellRect>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<TSUCellRect, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, TSTCellRangeRowMajorLess>="__value_"Q}}}
v28@0:8^v16B24
{set<TSUCellRect, TSTCellRangeColumnMajorLess, std::allocator<TSUCellRect>>="__tree_"{__tree<TSUCellRect, TSTCellRangeColumnMajorLess, std::allocator<TSUCellRect>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<TSUCellRect, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, TSTCellRangeColumnMajorLess>="__value_"Q}}}
v52@0:8^v16r^v24r^v32C40B44B48
B36@0:8^v16r^v24B32
@52@0:8{TSKUIDStruct=QQ}16{TSKUIDStruct=QQ}32C48
@36@0:8r^v16r^v24C32
B24@0:8r^v16
B36@0:8r^v16r^v24B32
v48@0:8{TSKUIDStruct=QQ}16{TSKUIDStruct=QQ}32
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
v40@0:8r^v16r^v24B32B36
@68@0:8{TSKUIDStruct=QQ}16{TSKUIDStruct=QQ}32{TSKUIDStruct=QQ}48i64
@32@0:8q16@24
@36@0:8S16S20I24@28
{TSKUIDStruct=QQ}18@0:8{TSUModelColumnIndex=S}16
{TSKUIDStruct=QQ}20@0:8{TSUModelRowIndex=I}16
{TSUModelColumnIndex=S}32@0:8{TSKUIDStruct=QQ}16
{TSUModelRowIndex=I}32@0:8{TSKUIDStruct=QQ}16
{TSUViewColumnIndex=S}32@0:8{TSKUIDStruct=QQ}16
{TSUViewRowIndex=I}32@0:8{TSKUIDStruct=QQ}16
{TSKUIDStruct=QQ}18@0:8{TSUViewColumnIndex=S}16
{TSKUIDStruct=QQ}20@0:8{TSUViewRowIndex=I}16
@"NSMutableIndexSet"24@0:8@"NSMutableIndexSet"16
v20@0:8{TSUViewRowIndex=I}16
v18@0:8{TSUViewColumnIndex=S}16
{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}24@0:8{TSUCellCoord=ISBB}16
{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}24@0:8Q16
@32@0:8r^v16o^B24
i32@0:8o@16{TSUViewCellCoord={TSUCellCoord=ISBB}}24
@24@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16
@20@0:8{TSUViewRowIndex=I}16
@32@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16@24
i32@0:8@16{TSUViewCellCoord={TSUCellCoord=ISBB}}24
d20@0:8{TSUViewRowIndex=I}16
d18@0:8{TSUViewColumnIndex=S}16
i42@0:8{TSUViewColumnIndex=S}16r^v18@26Q34
i48@0:8{TSUViewRowIndex=I}16r^v20@28Q36B44
v24@0:8{TSUViewRowIndex=I}16{TSUViewRowIndex=I}20
v20@0:8{TSUViewColumnIndex=S}16{TSUViewColumnIndex=S}18
v36@0:8{_NSRange=QQ}16{TSUViewRowIndex=I}32
v40@0:8@16{TSUViewCellCoord={TSUCellCoord=ISBB}}24@32
@36@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16@24B32
@32@0:8@16{TSUViewCellCoord={TSUCellCoord=ISBB}}24
{TSUViewCellCoord={TSUCellCoord=ISBB}}24@0:8@16
B32@0:8{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}24@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16
{TSUViewCellCoord={TSUCellCoord=ISBB}}24@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16
{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}32@0:8{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{vector<TSUViewCellRect, std::allocator<TSUViewCellRect>>=^{TSUViewCellRect}^{TSUViewCellRect}{__compressed_pair<TSUViewCellRect *, std::allocator<TSUViewCellRect>>=^{TSUViewCellRect}}}32@0:8{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{vector<TSUViewCellRect, std::allocator<TSUViewCellRect>>=^{TSUViewCellRect}^{TSUViewCellRect}{__compressed_pair<TSUViewCellRect *, std::allocator<TSUViewCellRect>>=^{TSUViewCellRect}}}24@0:8@16
{TSUModelCellCoord={TSUCellCoord=ISBB}}48@0:8{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
{TSUViewCellCoord={TSUCellCoord=ISBB}}48@0:8{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
@56@0:8@16i24i28s32B36i40r^v44S52
B24@0:8s16s20
i24@0:8Q16
c24@0:8Q16
q48@0:8@16Q24q32@40
{vector<TSCEFunctionArgSpec, std::allocator<TSCEFunctionArgSpec>>="__begin_"^{TSCEFunctionArgSpec}"__end_"^{TSCEFunctionArgSpec}"__end_cap_"{__compressed_pair<TSCEFunctionArgSpec *, std::allocator<TSCEFunctionArgSpec>>="__value_"^{TSCEFunctionArgSpec}}}
@"TSTStrokeLayerMergedStack"
v32@0:8r^{TSCEInternalCellReference={TSUCellCoord=ISBB}SS}16@24
B40@0:8^v16r^v24r^{TSKUIDStruct=QQ}32
{unordered_map<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
{unordered_map<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>, std::hash<TSCEInternalCellReference>, std::equal_to<TSCEInternalCellReference>, std::allocator<std::pair<const TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>>>="__table_"{__hash_table<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>, std::__unordered_map_hasher<TSCEInternalCellReference, std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>, std::hash<TSCEInternalCellReference>, std::equal_to<TSCEInternalCellReference>, true>, std::__unordered_map_equal<TSCEInternalCellReference, std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>, std::equal_to<TSCEInternalCellReference>, std::hash<TSCEInternalCellReference>, true>, std::allocator<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSCEInternalCellReference, std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>, std::hash<TSCEInternalCellReference>, std::equal_to<TSCEInternalCellReference>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSCEInternalCellReference, std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>, std::equal_to<TSCEInternalCellReference>, std::hash<TSCEInternalCellReference>, true>>="__value_"f}}}
v24@0:8{TSCEGridDimensions=II}16
B40@0:8{TSUCellCoord=ISBB}16@24r^{TSKUIDStruct=QQ}32
{unordered_map<TSCECellRef, TSCEFormulaObject *, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, std::allocator<std::pair<const TSCECellRef, TSCEFormulaObject *>>>="__table_"{__hash_table<std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>, std::__unordered_map_hasher<TSCECellRef, std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, true>, std::__unordered_map_equal<TSCECellRef, std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>, std::equal_to<TSCECellRef>, std::hash<TSCECellRef>, true>, std::allocator<std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSCECellRef, std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSCECellRef, std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>, std::equal_to<TSCECellRef>, std::hash<TSCECellRef>, true>>="__value_"f}}}
{unordered_set<TSCECellRef, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, std::allocator<TSCECellRef>>="__table_"{__hash_table<TSCECellRef, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, std::allocator<TSCECellRef>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<TSCECellRef, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCECellRef, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<TSCECellRef, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCECellRef, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCECellRef, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<TSCECellRef, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<TSCECellRef, void *> *>, std::allocator<std::__hash_node<TSCECellRef, void *>>>="__value_"{__hash_node_base<std::__hash_node<TSCECellRef, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::hash<TSCECellRef>>="__value_"Q}"__p3_"{__compressed_pair<float, std::equal_to<TSCECellRef>>="__value_"f}}}
v36@0:8@16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24S32
{unordered_set<TSKUIDStruct, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<TSKUIDStruct>>={__hash_table<TSKUIDStruct, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<TSKUIDStruct>>={unique_ptr<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *>, std::allocator<std::__hash_node<TSKUIDStruct, void *>>>={__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *>=^v}}{__compressed_pair<unsigned long, std::hash<TSKUIDStruct>>=Q}{__compressed_pair<float, std::equal_to<TSKUIDStruct>>=f}}}20@0:8S16
{vector<TSCESubFormulaOwnerIndex, std::allocator<TSCESubFormulaOwnerIndex>>=^S^S{__compressed_pair<TSCESubFormulaOwnerIndex *, std::allocator<TSCESubFormulaOwnerIndex>>=^S}}16@0:8
v28@0:8S16@?20
{unordered_map<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *, std::hash<TSCESubFormulaOwnerIndex>, std::equal_to<TSCESubFormulaOwnerIndex>, std::allocator<std::pair<const TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>>>="__table_"{__hash_table<std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, std::__unordered_map_hasher<TSCESubFormulaOwnerIndex, std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, std::hash<TSCESubFormulaOwnerIndex>, std::equal_to<TSCESubFormulaOwnerIndex>, true>, std::__unordered_map_equal<TSCESubFormulaOwnerIndex, std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, std::equal_to<TSCESubFormulaOwnerIndex>, std::hash<TSCESubFormulaOwnerIndex>, true>, std::allocator<std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSCESubFormulaOwnerIndex, std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, std::hash<TSCESubFormulaOwnerIndex>, std::equal_to<TSCESubFormulaOwnerIndex>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSCESubFormulaOwnerIndex, std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, std::equal_to<TSCESubFormulaOwnerIndex>, std::hash<TSCESubFormulaOwnerIndex>, true>>="__value_"f}}}
{unordered_map<TSCECellRef, NSString *, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, std::allocator<std::pair<const TSCECellRef, NSString *>>>="__table_"{__hash_table<std::__hash_value_type<TSCECellRef, NSString *>, std::__unordered_map_hasher<TSCECellRef, std::__hash_value_type<TSCECellRef, NSString *>, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, true>, std::__unordered_map_equal<TSCECellRef, std::__hash_value_type<TSCECellRef, NSString *>, std::equal_to<TSCECellRef>, std::hash<TSCECellRef>, true>, std::allocator<std::__hash_value_type<TSCECellRef, NSString *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, NSString *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, NSString *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, NSString *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, NSString *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, NSString *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, NSString *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, NSString *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSCECellRef, NSString *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, NSString *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSCECellRef, std::__hash_value_type<TSCECellRef, NSString *>, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSCECellRef, std::__hash_value_type<TSCECellRef, NSString *>, std::equal_to<TSCECellRef>, std::hash<TSCECellRef>, true>>="__value_"f}}}
v32@0:8^{TSCEFormulaRewriteContext=@@{TSCEFormulaRewriteContextRecord={TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}{TSKUIDStruct=QQ}{TSUColumnRowOffset=ii}BBBBBBB}}16@?24
@40@0:8@16r^{TSKUIDStruct=QQ}24^{TSCEFormulaRewriteContext=@@{TSCEFormulaRewriteContextRecord={TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}{TSKUIDStruct=QQ}{TSUColumnRowOffset=ii}BBBBBBB}}32
@40@0:8@16r^{TSKUIDStruct=QQ}24r^{TSUCellCoord=ISBB}32
B40@0:8{TSUCellCoord=ISBB}16@24^Q32
@"TSCECellCoordinateVector"
@32@0:8^{TSCEASTNodeArray=*QQB}16r^{TSUCellCoord=ISBB}24
{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}32@0:8@16r^{TSKUIDStruct=QQ}24
d76@0:8d16@24q32d40I48^v52^v60^v68
B60@0:8d16@24q32I40^v44^v52
@32@0:8@16r^v24
@32@0:8I16C20^{TSKUIDStruct=QQ}24
C32@0:8{_NSRange=QQ}16
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}32@0:8r^v16r^v24
@68@0:8@16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24@40{TSUCellRect={TSUCellCoord=ISBB}{?=II}}48i64
I32@0:8^v16^{TSTColumnOrRowMap=IIIB}24
{_NSRange=QQ}32@0:8r^{TSTColumnOrRowMap=IIIB}16r^v24
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}48@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16r^v32r^v40
{TSUCellCoord=ISBB}40@0:8{TSUCellCoord=ISBB}16r^v24r^v32
^v48@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16r^v32r^v40
{vector<TSUCellRect, std::allocator<TSUCellRect>>=^{TSUCellRect}^{TSUCellRect}{__compressed_pair<TSUCellRect *, std::allocator<TSUCellRect>>=^{TSUCellRect}}}48@0:8r^v16^@24{TSUCellRect={TSUCellCoord=ISBB}{?=II}}32
{set<TSTColumnOrRowMap, TSTColumnOrRowMapTgtLess, std::allocator<TSTColumnOrRowMap>>="__tree_"{__tree<TSTColumnOrRowMap, TSTColumnOrRowMapTgtLess, std::allocator<TSTColumnOrRowMap>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<TSTColumnOrRowMap, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, TSTColumnOrRowMapTgtLess>="__value_"Q}}}
@48@0:8Q16@24@32Q40
v72@0:8@16^q24^q32^q40^q48^q56^q64
v48@0:8@16^q24^q32^q40
@"NSCalendar"
{unordered_map<TSKUIDStruct, TSTPlanForGroupingCell, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSTPlanForGroupingCell>>>={__hash_table<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>>>={unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, void *>>>={__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, void *> *>=^v}}{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>=Q}{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>=f}}}24@0:8@16
B40@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24@32
@48@0:8@16@24q32@40
v44@0:8@16S24@28@36
B56@0:8@16r^v24@32@40@48
S24@0:8q16
@48@0:8Q16q24@32@40
@60@0:8d16C24@28@36{TSKUIDStruct=QQ}44
{vector<TSUCellCoord, std::allocator<TSUCellCoord>>=^{TSUCellCoord}^{TSUCellCoord}{__compressed_pair<TSUCellCoord *, std::allocator<TSUCellCoord>>=^{TSUCellCoord}}}16@0:8
v40@0:8{vector<TSUCellCoord, std::allocator<TSUCellCoord>>=^{TSUCellCoord}^{TSUCellCoord}{__compressed_pair<TSUCellCoord *, std::allocator<TSUCellCoord>>=^{TSUCellCoord}}}16
Q24@0:8C16B20
i28@0:8@16{TSUViewRowIndex=I}24
v40@0:8C16B20^@24^@32
v48@0:8C16B20@24^@32^@40
i26@0:8@16{TSUViewColumnIndex=S}24
i56@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16@?24@?32@?40@?48
v52@0:8{TSUViewRowIndex=I}16@?20@?28@?36@?44
{TSUModelCellCoord={TSUCellCoord=ISBB}}24@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
@40@0:8r^{TSKUIDStruct=QQ}16r^v24r^v32
r^{TSUCellCoord=ISBB}16@0:8
@"TSCEFormulaRewrite_RegionInfo"
{unordered_map<TSUCellCoord, TSUCellCoord, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, std::allocator<std::pair<const TSUCellCoord, TSUCellCoord>>>="__table_"{__hash_table<std::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>, std::allocator<std::__hash_value_type<TSUCellCoord, TSUCellCoord>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>>="__value_"f}}}
@48@0:8r^{TSKUIDStruct=QQ}16r^v24r^{TSKUIDStruct=QQ}32r^v40
B32@0:8^{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16{TSUCellCoord=ISBB}24
S24@0:8I16S20
{TSUCellCoord=ISBB}32@0:8{TSUColumnRowOffset=ii}16{TSUCellCoord=ISBB}24
I28@0:8Q16I24
@"TSTHiddenStateIndexSet"
B24@0:8B16B20
B40@0:8@16@24{TSUCellCoord=ISBB}32
v48@0:8@16@24{TSUCellCoord=ISBB}32Q40
{TSTPerformanceLoggingToken=@Q}16@0:8
v32@0:8{TSTPerformanceLoggingToken=@Q}16
{TSTPerformanceLoggingToken="logHandle"@"NSObject<OS_os_log>""signpostID"Q}
c24@0:8^{TSCEEvaluationContext=}16
{vector<TSCEGrid, std::allocator<TSCEGrid>>="__begin_"^{TSCEGrid}"__end_"^{TSCEGrid}"__end_cap_"{__compressed_pair<TSCEGrid *, std::allocator<TSCEGrid>>="__value_"^{TSCEGrid}}}
B32@0:8{CGPoint=dd}16
v40@0:8@16^{CGContext=}24@32
v40@0:8@"TSWPUIGraphicalAttachment"16^{CGContext=}24@"TSWPSelection"32
@"TSTTableNameSelection"
@24@0:8r*16
q24@0:8q16
q32@0:8q16@24
@56@0:8{TSKUIDStruct=QQ}16{TSKUIDStruct=QQ}32q48
@40@0:8{TSKUIDStruct=QQ}16q32
@34@0:8{TSUModelColumnIndex=S}16q18@26
r^{TSCEFunctor=@C}16@0:8
{TSCEFunctor="_formula"@"TSCEFormulaObject""_numArgs"C}
@"TSTFormulaRewriteSpec"
{TSUViewCellCoord="_coord"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}}
@"TSTPivotTranslator"
i32@0:8@16S24B28
i28@0:8@16S24
{TSCEAnyRef=S{TSCESpanningRangeRef={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}C}{TSKUIDStruct=QQ}B@}16@0:8
@45@0:8@16r^{TSKUIDStruct=QQ}24{TSUPreserveFlags=C}32@33B41
@45@0:8@16@24{TSUPreserveFlags=C}32@33B41
{TSCEAnyRef="_refType"S"_spanningRef"{TSCESpanningRangeRef="rangeRef"{TSCERangeRef="range"{TSCERangeCoordinate="_topLeft"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}"_bottomRight"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}}"_tableUID"{TSKUIDStruct="_lower"Q"_upper"Q}}"rangeContext"C}"_uuidValue"{TSKUIDStruct="_lower"Q"_upper"Q}"_couldBeIntersection"B"_refSet"@"TSCEReferenceSetWrapper"}
^{TSCETableResolver=^^?}24@0:8@"<TSCEReferenceResolving>"16
C24@0:8@"TSCECategoryRef"16
{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}44@0:8@"TSCECategoryRef"16r^{TSKUIDStruct=QQ}24C32^@36
@"TSCEValueGrid"44@0:8@"TSCECategoryRef"16r^{TSKUIDStruct=QQ}24C32^@36
{vector<TSCECellRef, std::allocator<TSCECellRef>>=^{TSCECellRef}^{TSCECellRef}{__compressed_pair<TSCECellRef *, std::allocator<TSCECellRef>>=^{TSCECellRef}}}32@0:8@"TSCECategoryRef"16r^{TSKUIDStruct=QQ}24
{vector<TSCECategoryRef *, std::allocator<TSCECategoryRef *>>=^@^@{__compressed_pair<TSCECategoryRef *__strong *, std::allocator<TSCECategoryRef *>>=^@}}24@0:8@"TSCECategoryRef"16
{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}24@0:8@"TSCECategoryRef"16
@"<TSCEResolverContainer>"32@0:8@"NSString"16@"TSKDocumentRoot"24
@"<TSCEReferenceResolving>"40@0:8@"NSString"16@"TSKDocumentRoot"24@"<TSCEReferenceResolving>"32
@"<TSCEReferenceResolving>"40@0:8@"NSString"16@"TSKDocumentRoot"24@"NSString"32
@40@0:8q16@24@32
{TSTImportWarningSetCellWarningFlags="mCondFormatAboveAvgEqualAverageImportWarning"b1"mCondFormatAboveAvgStdDevImportWarning"b1"mCondFormatComplexFormulaImportWarning"b1"mCondFormatContainsErrorsImportWarning"b1"mCondFormatExprImportWarning"b1"mCondFormatNotContainsErrorsImportWarning"b1"mCondFormatParametersNotAllTheSameTypeImportWarning"b1"mCondFormatStopIfTrueImportWarning"b1"mCondFormatUnsupportedOperatorImportWarning"b1"mCondFormatUnsupportedStylingImportWarning"b1"mCondFormatUnsupportedTimePeriodImportWarning"b1"mUnsupportedConditionalFormatImportWarning"b1"mUnsupportedDataFormatImportWarning"b1"mDurationFormatRangeChangedUpgradeWarning"b1}
{TSTImportFormulaWarning="mType"q"mOriginalFormula"@"NSString""mSupplementaryText"@"NSString"}
{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24@0:8Q16
{unordered_map<TSCECellRef, TSTImportWarningSet *, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, std::allocator<std::pair<const TSCECellRef, TSTImportWarningSet *>>>="__table_"{__hash_table<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, std::__unordered_map_hasher<TSCECellRef, std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, true>, std::__unordered_map_equal<TSCECellRef, std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, std::equal_to<TSCECellRef>, std::hash<TSCECellRef>, true>, std::allocator<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSCECellRef, std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSCECellRef, std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, std::equal_to<TSCECellRef>, std::hash<TSCECellRef>, true>>="__value_"f}}}
@36@0:8q16@24i32
@132@0:8{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16@112i120@124
v132@0:8{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16@112i120@124
v64@0:8{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16@48r^{TSKUIDStruct=QQ}56
v72@0:8{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16@48r^{TSKUIDStruct=QQ}56B64B68
@56@0:8{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16r^{TSKUIDStruct=QQ}48
v40@0:8i16@20d28B36
v52@0:8i16@20d28B36d40B48
v28@0:8i16@20
v32@0:8i16i20@24
v36@0:8i16i20i24@28
v60@0:8@16B24B28@32B40i44i48@52
v56@0:8{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16r^{TSKUIDStruct=QQ}48
v48@0:8{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16
v28@0:8@16c24
v40@0:8@16i24i28B32B36
v32@0:8@16i24i28
v56@0:8@16{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}24
v56@0:8{vector<TSCEReferenceValue, std::allocator<TSCEReferenceValue>>=^{TSCEReferenceValue}^{TSCEReferenceValue}{__compressed_pair<TSCEReferenceValue *, std::allocator<TSCEReferenceValue>>=^{TSCEReferenceValue}}}16r^{TSKUIDStruct=QQ}40@48
v24@0:8S16s20
v24@0:8c16c20
B32@0:8@16^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}24
@48@0:8@16{TSKUIDStruct=QQ}24{TSUCellCoord=ISBB}40
^{TSCENumberValue=^^?{TSUDecimal={?=[2Q]}}{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}SB}36@0:8@16i24^{TSCEWarningReportingContext=BB@}28
@36@0:8@16i24^{TSCEWarningReportingContext=BB@}28
B36@0:8@16i24^{TSCEWarningReportingContext=BB@}28
{TSCEGrid=^^?@{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}}44@0:8@16i24^{TSCEEvaluationContext=}28r^{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}36
^{TSCEReferenceValue=^^?@{TSUCellCoord=ISBB}{TSUPreserveFlags=C}BB}36@0:8@16i24^{TSCEWarningReportingContext=BB@}28
^{TSCEGrid=^^?@{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}}16@0:8
^{TSCEReferenceValue=^^?@{TSUCellCoord=ISBB}{TSUPreserveFlags=C}BB}16@0:8
B112@0:8{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16
v32@0:8@16^v24
{unordered_map<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}
@48@0:8@16@24^B32^B40
@40@0:8@16Q24@32
B24@0:8@"<TSUMultipleChoiceListChoiceProviding>"16
@"NSString"24@0:8Q16
@"NSDate"24@0:8Q16
i20@0:8c16
v44@0:8r^v16i24@28@?36
v40@0:8r^v16@24@?32
@"NSObject<TSTTableDataPayloadHashing>"
[20{os_unfair_lock_s="_os_unfair_lock_opaque"I}]
[20{unordered_map<TSUCellCoord, TSTCell *, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, std::allocator<std::pair<const TSUCellCoord, TSTCell *>>>="__table_"{__hash_table<std::__hash_value_type<TSUCellCoord, TSTCell *>, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTCell *>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTCell *>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>, std::allocator<std::__hash_value_type<TSUCellCoord, TSTCell *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTCell *>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTCell *>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>>="__value_"f}}}]
[20{TSCECellCoordSet="_rowsPerColumn"{map<unsigned short, TSUIndexSet, std::less<unsigned short>, std::allocator<std::pair<const unsigned short, TSUIndexSet>>>="__tree_"{__tree<std::__value_type<unsigned short, TSUIndexSet>, std::__map_value_compare<unsigned short, std::__value_type<unsigned short, TSUIndexSet>, std::less<unsigned short>, true>, std::allocator<std::__value_type<unsigned short, TSUIndexSet>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned short, TSUIndexSet>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<unsigned short, std::__value_type<unsigned short, TSUIndexSet>, std::less<unsigned short>, true>>="__value_"Q}}}}]
@"TSPTemporaryObjectContextDelegate"
@"TSPObjectContext"
@40@0:8@16@24^i32
@48@0:8^{TSCETableResolver=^^?}16r^{TSUCellCoord=ISBB}24r^{TSUCellCoord=ISBB}32r^{TSUPreserveFlags=C}40
@32@0:8^{TSCETableResolver=^^?}16r^{TSCECellTractRefCore={TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}{TSKUIDStruct=QQ}C{TSUPreserveFlags=C}BBB}24
r^{TSCECellTractRefCore={TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}{TSKUIDStruct=QQ}C{TSUPreserveFlags=C}BBB}16@0:8
@32@0:8r^{TSCEGridCoord=II}16r^{TSCECellTractRefCore={TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}{TSKUIDStruct=QQ}C{TSUPreserveFlags=C}BBB}24
{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}24@0:8{TSUCellCoord=ISBB}16
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}32@0:8^v16B24B28
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}32@0:8r^{TSUCellCoord=ISBB}16B24B28
{shared_ptr<TSCEValue>=^{TSCEValue}^{__shared_weak_count}}16@0:8
v32@0:8{shared_ptr<TSCEValue>=^{TSCEValue}^{__shared_weak_count}}16
{shared_ptr<TSCEValue>="__ptr_"^{TSCEValue}"__cntrl_"^{__shared_weak_count}}
@72@0:8{TSUCellCoord=ISBB}16{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}}24
@"TSTConcurrentSparseCellList"
B28@0:8I16I20B24
C20@0:8C16
B24@0:8C16C20
@32@0:8^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}16@24
v32@0:8^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}16@24
v40@0:8^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}16@24@32
v36@0:8^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}16@24B32
v44@0:8^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}16@24@32B40
v36@0:8{TSUDecimal={?=[2Q]}}16B32
v32@0:8{TSUDecimal={?=[2Q]}}16
v24@0:8r^{TSUDecimal={?=[2Q]}}16
v48@0:8r^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16@24B32^B36B44
@36@0:8C16B20B24^B28
B32@0:8C16@20S28
v28@0:8B16C20B24
@28@0:8C16^B20
@24@0:8^B16
@"TSTCellStyleHandle"
v24@0:8r^{TSCEAnyRef=S{TSCESpanningRangeRef={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}C}{TSKUIDStruct=QQ}B@}16
v24@0:8r^{TSCESpanningRangeRef={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}C}16
@40@0:8Q16@24@32
@40@0:8I16C20{TSKUIDStruct=QQ}24
@40@0:8S16C20{TSKUIDStruct=QQ}24
v24@0:8C16S20
Q36@0:8S16^@20^@28
v48@0:8@16@24r^{TSKUIDStruct=QQ}32@40
v28@0:8S16Q20
^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}24@0:8{TSUCellCoord=ISBB}16
v32@0:8{TSUCellCoord=ISBB}16@?24
v36@0:8{TSUCellCoord=ISBB}16B24@?28
@40@0:8{TSUCellCoord=ISBB}16^B24^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}32
@32@0:8{TSUCellCoord=ISBB}16^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}24
v68@0:8@16{TSUCellCoord=ISBB}24r^{TSKUIDStruct=QQ}32@40@48B56B60B64
v64@0:8@16{TSUCellCoord=ISBB}24r^{TSKUIDStruct=QQ}32@40@48B56B60
v72@0:8@16{TSUCellCoord=ISBB}24r^{TSKUIDStruct=QQ}32@40@48B56B60^B64
v60@0:8@16r^{TSKUIDStruct=QQ}24@32@40B48B52B56
@32@0:8@16d24
v32@0:8@16B24C28
v40@0:8@16@24B32C36
v32@0:8^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}16{TSUCellCoord=ISBB}24
@24@0:8^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}16
{vector<TSUCellRect, std::allocator<TSUCellRect>>=^{TSUCellRect}^{TSUCellRect}{__compressed_pair<TSUCellRect *, std::allocator<TSUCellRect>>=^{TSUCellRect}}}16@0:8
@40@0:8^@16@24@?32
@24@0:8i16B20
v56@0:8@16r^{TSKUIDStruct=QQ}24@32@40B48B52
{vector<TSTCell *, std::allocator<TSTCell *>>=^@^@{__compressed_pair<TSTCell *__strong *, std::allocator<TSTCell *>>=^@}}44@0:8{TSUModelRowIndex=I}16@20^v28@?36
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}40@0:8@16{TSUCellCoord=ISBB}24r^{TSKUIDStruct=QQ}32
v48@0:8^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}16r^{TSUCellCoord=ISBB}24r^{TSKUIDStruct=QQ}32^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}40
@"TSTTableDataList"
@"TSTTableTileStorage"
@"TSTTableHeaderStorage"
@"TSPLazyReference"
@"TSTMergeRegionMap"
@48@0:8{_NSRange=QQ}16{_NSRange=QQ}32
@32@0:8r^v16r^{TSCEGridDimensions=II}24
{TSCEGridCoord=II}16@0:8
B24@0:8r^{TSCEGridCoord=II}16
v24@0:8r^{TSCEGridCoord=II}16
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}24@0:8I16I20
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}24@0:8r^{TSCEGridCoord=II}16
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}24@0:8Q16
{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}16@0:8
v32@0:8r^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16r^{TSCEGridCoord=II}24
@32@0:8r^{TSCEGridCoord=II}16i24i28
v28@0:8I16@?20
{TSCEGridCoord="column"I"row"I}
{unordered_map<TSCEGridCoord, TSCEValue, std::hash<TSCEGridCoord>, std::equal_to<TSCEGridCoord>, std::allocator<std::pair<const TSCEGridCoord, TSCEValue>>>="__table_"{__hash_table<std::__hash_value_type<TSCEGridCoord, TSCEValue>, std::__unordered_map_hasher<TSCEGridCoord, std::__hash_value_type<TSCEGridCoord, TSCEValue>, std::hash<TSCEGridCoord>, std::equal_to<TSCEGridCoord>, true>, std::__unordered_map_equal<TSCEGridCoord, std::__hash_value_type<TSCEGridCoord, TSCEValue>, std::equal_to<TSCEGridCoord>, std::hash<TSCEGridCoord>, true>, std::allocator<std::__hash_value_type<TSCEGridCoord, TSCEValue>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEGridCoord, TSCEValue>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEGridCoord, TSCEValue>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEGridCoord, TSCEValue>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEGridCoord, TSCEValue>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEGridCoord, TSCEValue>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEGridCoord, TSCEValue>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEGridCoord, TSCEValue>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSCEGridCoord, TSCEValue>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEGridCoord, TSCEValue>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSCEGridCoord, std::__hash_value_type<TSCEGridCoord, TSCEValue>, std::hash<TSCEGridCoord>, std::equal_to<TSCEGridCoord>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSCEGridCoord, std::__hash_value_type<TSCEGridCoord, TSCEValue>, std::equal_to<TSCEGridCoord>, std::hash<TSCEGridCoord>, true>>="__value_"f}}}
^{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}
@24@0:8^{TSCEGridAccessContext=@^{TSCEFunctionArgSpec}i^{TSCEEvaluationContext}BBBBBCC{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}16
@28@0:8r^{TSCEReferenceValue=^^?@{TSUCellCoord=ISBB}{TSUPreserveFlags=C}BB}16C24
@"TSCEEvalRef"
@52@0:8{?={?=II}{?=II}}16^{CGAffineTransform=dddddd}32d40B48
v60@0:8@16{?={?=II}{?=II}}24^{CGAffineTransform=dddddd}40d48B56
@"TSKAnnotationAuthor"16@0:8
v24@0:8@"TSKAnnotationAuthor"16
@"NSDate"16@0:8
@"TSDCommentStorage"16@0:8
v24@0:8@"TSDCommentStorage"16
@64@0:8@16@24{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}32
@40@0:8@16@24{TSUModelCellCoord={TSUCellCoord=ISBB}}32
@44@0:8r^{TSKUIDStruct=QQ}16{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}24I40
@60@0:8r^{TSKUIDStruct=QQ}16r^v24@32B40r^v44r^v52
@56@0:8r^{TSKUIDStruct=QQ}16r^v24r^{TSKUIDStruct=QQ}32r^v40@48
@72@0:8r^{TSKUIDStruct=QQ}16r^v24r^{TSKUIDStruct=QQ}32r^v40@48@56r^{TSKUIDStruct=QQ}64
@48@0:8r^{TSKUIDStruct=QQ}16r^v24r^v32{TSUCellCoord=ISBB}40
@40@0:8r^v16r^v24r^{TSKUIDStruct=QQ}32
@"TSTFormulaRewrite_PivotInfo"
@"TSTAutofillSelection"
Q32@0:8@16@24
d40@0:8@16@24@32
@"NSObject<TSDContainerInfo>"16@0:8
@"TSTTableReferences"16@0:8
@"TSTSelectionDragController"16@0:8
v24@0:8@"TSTSelectionDragController"16
v24@0:8@"NSSet"16
B48@0:8@16{_NSRange=QQ}24@40
@48@0:8@16{_NSRange=QQ}24@40
B24@0:8@"UITextField"16
v24@0:8@"UITextField"16
v32@0:8@"UITextField"16q24
B48@0:8@"UITextField"16{_NSRange=QQ}24@"NSString"40
@"UIMenu"48@0:8@"UITextField"16{_NSRange=QQ}24@"NSArray"40
v32@0:8@"UITextField"16@"<UIEditMenuInteractionAnimating>"24
v32@0:8@16^{CGContext=}24
v24@0:8@"CALayer"16
v32@0:8@"CALayer"16^{CGContext=}24
@"<CAAction>"32@0:8@"CALayer"16@"NSString"24
@36@0:8{CGPoint=dd}16B32
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8{TSUCellCoord=ISBB}16
v56@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16^{?=Bdddddd}32^{CGRect={CGPoint=dd}{CGSize=dd}}40^{CGRect={CGPoint=dd}{CGSize=dd}}48
{TSUCellCoord=ISBB}32@0:8{CGPoint=dd}16
{CGAffineTransform=dddddd}56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{TSUCellCoord=ISBB}48
{CGRect={CGPoint=dd}{CGSize=dd}}120@0:8@16{TSUCellCoord=ISBB}24@32{CGRect={CGPoint=dd}{CGSize=dd}}40{CGAffineTransform=dddddd}72
{CGAffineTransform=dddddd}40@0:8@16@24{TSUCellCoord=ISBB}32
v44@0:8@16Q24B32@36
v32@0:8^{CGContext=}16@24
{CGRect={CGPoint=dd}{CGSize=dd}}72@0:8@16{CGAffineTransform=dddddd}24
v48@0:8@16{?={?=II}{?=II}}24^{CGContext=}40
v48@0:8@16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24^{CGContext=}40
v64@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24^{CGContext=}56
v68@0:8@16B24{CGRect={CGPoint=dd}{CGSize=dd}}28^{CGContext=}60
v80@0:8^{CGContext=}16d24{CGRect={CGPoint=dd}{CGSize=dd}}32@64{TSUCellCoord=ISBB}72
v124@0:8^{CGContext=}16{CGRect={CGPoint=dd}{CGSize=dd}}24@56{TSUCellCoord=ISBB}64q72{CGRect={CGPoint=dd}{CGSize=dd}}80i112@116
@32@0:8{CGPoint=dd}16
@"TSTTableReferences"
@"TSTSelectionDragController"
@"<TSTTableAnimationController>"
@"<TSTTableRepDelegate>"
@"<TSTTableChromeProvider>"
@"<TSTCanvasReferenceController>"
@"TSTCellRegionGatherer"
@"CAShapeLayer"
v40@0:8@16{TSUCellCoord=ISBB}24B32B36
v24@0:8@"TSTTableRep"16
v24@0:8@"TSTLayoutSpace"16
v40@0:8@"TSTCell"16{TSUCellCoord=ISBB}24B32B36
B24@0:8@"TSDRep"16
4tl:4
t*@es
"@M,
r<S[
Tg*
af3'P
KUUUUU
r-Yr
YUUUU
U@_6
F@>F
lz9~
/@o)
?Q&^
?M5i
3?4"L)L
>=kv
@R0-
$h
L\
L\
L\
L\
P`
L\
L\
Xh
P`
L\
Td
L\
L\
P`
L\
P`
P`
P`
P`
P`
L\
L\
P`
L\
L\
Xh
P`
P`
P`
P`
L\
P`
L\
P`
L\
L\
L\
P`
L\
L\
L\
Td
L\
L\
Td
L\
Td
Td
L\
Xh
L\
P`
P`
L\
P`
P`
L\
L\
P`
L\
P`
P`
P`
Td
P`
P`
P`
L\
Td
Xh
P`
P`
P`
Td
P`
P`
L\
L\
P`
L\
P`
L\
P`
P`
Xh
P`
Td
25TSTArgumentAtIndexLocator
25TSTReparentGroupsRewriter
&0:DNXblv
26TSCEASTExcludeUidsRewriter
@25TSCEASTMoveRegionRewriter
24TSCEASTTransposeRewriter
*6BNZ
'+14TSCEThunkValue
"&77
^-8?^^F
9Mccccc
636TSCEASTConvertFromColonTractRewriter
{{{{{{{{{{
27TSTCellSpecFormulaExtractor
14TSCETokenValue
MbP?
kosx~{
\EIMQV16TSCEErrorWrapper
28TSCEASTRepairBadRefsRewriter
14TSCEErrorValue
29TSCEASTFunctionsInUseRewriter
 8Ph
15TSCEStringValue
-<Kgv
16TSCEBooleanValue
8TSCEGrid
98'*
!-XX
category column
aggre names col
aggre names row
LFHJY
29TSCEASTExcelPredicateRewriter
IIIIII
43TSCEASTSearchForSageTranslationNeedIterator
26TSCEASTDescriptionIterator
13TSCEDateValue
30TSCEASTNodeCategoryRefIterator
25TSCEASTSageExportRewriter
15TSCEASTRewriter
19TSCEASTUnaryElement
20TSCEASTNumberElement
xV42?)
# 19TSCEFunction_MEDIAN
 #&),/49>CHMRW\afkpux|
..666
WZ88;
21TSCEViewTractRefValue
19TSCEIDAllocatorFull
28TSCEASTRefExtractionIterator
KD#B
37TSCEASTExcelImportTranslationRewriter
26TSCEASTExcelImportRewriter
"(-D
<EQ&
+T8F
'W*1
'W*1
%f:IT
%47:=(@+.C
136TSTTSCEASTNodeExpressionNodeFunction
J?UUUUUU
?18TSCEValueGridValue
8TSTLexer
25TSTTrackingRangeExtractor
28TSTUIDTrackingRangeExtractor
..#)..
LjpXd
")UU-3D9@
$0>M
444444
24TSCEASTClearUidsRewriter
21TSCEASTStreamIterator
17TSCEAbstractValue
42TSCEASTRemoveNumberToDateCoercionsRewriter
?_Zu
?]Zu
<_Zu
25TSCEASTInsertRowsRewriter
XcBy!n
33TSCEASTRewriteUsingValuesRewriter
16TSCEAdditionNode
16TSCEFunctionNode
19TSCESubtractionNode
22TSCEMultiplicationNode
16TSCEDivisionNode
13TSCEPowerNode
21TSCEConcatenationNode
19TSCEGreaterThanNode
29TSCEBinaryBooleanOperatorNode
28TSCEGreaterThanOrEqualToNode
16TSCELessThanNode
25TSCELessThanOrEqualToNode
15TSCEEqualToNode
18TSCENotEqualToNode
16TSCENegationNode
16TSCEPlusSignNode
15TSCEPercentNode
13TSCEColonNode
ffffff
se@)Q
"%(+.147::
yRV\
v@26TSCEASTDeleteOwnerRewriter
.147
]r2<
~@fffff
|58;>ADF3HKNQTWZ]`ocfrtikvmxz
40TSCEASTSearchForExternalOwnerUIDIterator
9TSCELexer
26TSCEASTOwnerUidMapRewriter
28TSCEASTForceOwnerUidRewriter
42TSCEASTHostCellAgnosticOwnerUidMapRewriter
34TSCEASTBadRefWithUidInfoIdentifier
!%HM)T
)RBM
44TSCEASTNumberToDurationForSageImportRewriter
|25TSCEASTLetRemovalRewriter
20TSCECategoryRefValue
22TSCEEmptyArgumentValue
!$'*-0369<?BEHKNQTWZ]`cfil
llllllll
llll
llllllll
14TSCEASTElement
27TSCEASTElementWithUidTracts
26TSCEASTElementWithChildren
39TSCEASTElementWithUidTractsWithChildren
20TSCEASTBinaryElement
19TSCEASTColonElement
24TSCEASTColonTractElement
20TSCEASTStringElement
18TSCEASTDateElement
22TSCEASTDurationElement
22TSCEASTFunctionElement
29TSCEASTUnknownFunctionElement
24TSCEASTWhitespaceElement
30TSCEASTRelativeCoordRefElement
23TSCEASTLinkedRefElement
26TSCEASTUidReferenceElement
26TSCEASTViewTractRefElement
18TSCEASTListElement
19TSCEASTThunkElement
21TSCEASTLetBindElement
25TSCEASTCategoryRefElement
12TSCENilValue
22TSCEASTElementIterator
17TSCEASTEndElement
21TSCEASTBooleanElement
21TSCEASTTagOnlyElement
19TSCEASTTokenElement
19TSCEASTArrayElement
25TSCEASTLetVariableElement
25TSCEASTLetEndScopeElement
23TSTBakeFormulasDetector
32TSCEASTNodeFormulaStringIterator
:Itt
77U77<777
cENW
25TSCEASTRemoveRowsRewriter
S!W/Z37_DH
S!W/Z37_DH
&/8AJS\enw
&/8AJS\e
&/8AJS\enw
b8???
V?8???J
DD620TSCEArgumentAccessor
27TSCENoCheckArgumentAccessor
23TSCEAndArgumentAccessor
23TSCESumArgumentAccessor
27TSCEProductArgumentAccessor
24TSCEModeArgumentAccessor
23TSCEGcdArgumentAccessor
24TSCEStatArgumentAccessor
25TSCECountArgumentAccessor
23TSCEVarArgumentAccessor
25TSCEMatchArgumentAccessor
30TSCEDateVectorArgumentAccessor
32TSCEStrictNumberArgumentAccessor
333333
15TSCENumberValue
25TSCEASTSageImportRewriter
20TSTPivotUidOrderNode
15TSTUidOrderNode
  00AARR
32TSCEASTSearchForUidTractIterator
31TSCEASTConvertToUidRefsRewriter
16TSCEUnitlessZero
'C[[
25TSCEASTMergeCellsRewriter
29TSCEASTUndoMergeCellsRewriter
18TSCEEmptyCellValue
&3XX
&3XX
:2:?wE~w
!*18TSCEReferenceValue
NSt3__120__shared_ptr_emplaceI9TSCEValueNS_9allocatorIS1_EEEE
24TSCEASTLinkedRefRewriter
47TSTConvertFormulasFromBaseForCategoriesRewriter
45TSTConvertFormulasToBaseForCategoriesRewriter
26TSCEASTExcelExportRewriter
5RTreeIjLi2EdLi16ELi8EE
23TSTCategoryUidOrderNode
!#%')+,
$A*AAA0
333333
@31TSCEASTMergeOriginMovedRewriter
44TSCEASTSearchForNumberToDateCoercionIterator
26TSCEASTReorderRowsRewriter
17TSCERichTextValue
!%)-Z_d{
&&&&&
26TSCEASTInsertOwnerRewriter
25TSCEASTFreezeRefsRewriter
23TSCEASTThawRefsRewriter
\KK:
Ud55s
33TSCEASTConvertFromUidRefsRewriter
?Sdu
111?1\
*-0369<###?BEILO#R34TSCEASTConvertToColonTractRewriter
23TSCEASTGroupUIDRewriter
28TSCEASTGroupNodeUIDsRewriter
25TSCEASTSetAggTypeRewriter
32TSCEASTGroupNodesChangedRewriter
34TSTResolveRelativeAncestorRewriter
36TSTConvertToRelativeAncestorRewriter
$6HZl~
!3BQ`
(7I{
!.=o~
-<gU
!.;HUb
#0BTfu
+=O^p
BTfs
!.;MXcn
&3BQcr
!,9HWdq~
*7DSe
%4CU
$6CS
.=L[h
!0?N
$6HZ
TSCEArchives.proto
TSCE
TSPMessages.proto
TSKArchives.proto"Y
CellReferenceArchive
column
table_id
.TSP.CFUUIDArchive"a
InternalCellReferenceArchive
coordinate
.TSCE.CellCoordinateArchive
owner_id
RelativeCellRefArchive
relative_row_offset
relative_column_offset
table_uid
.TSP.UUID
preserve_column
preserve_row
is_spanning_column
is_spanning_row
RangeReferenceArchive
table_id
.TSP.CFUUIDArchive
top_left_column
top_left_row
bottom_right_column
bottom_right_row
InternalRangeReferenceArchive
owner_id
range
.TSCE.RangeCoordinateArchive"
IndexSetArchive
entries
2#.TSCE.IndexSetArchive.IndexSetEntry
IndexSetEntry
range_begin
range_end
CellCoordSetArchive
column_entries
2%.TSCE.CellCoordSetArchive.ColumnEntry
ColumnEntry
column
row_set
.TSCE.IndexSetArchive"
InternalCellRefSetArchive
owner_entries
2*.TSCE.InternalCellRefSetArchive.OwnerEntry
OwnerEntry
owner_id
coord_set
.TSCE.CellCoordSetArchive"<
ColumnRowSize
num_columns
num_rows
CellRectArchive
origin
.TSCE.CellCoordinateArchive
size
.TSCE.ColumnRowSize"
CellRefSetArchive
owner_entries
2".TSCE.CellRefSetArchive.OwnerEntry
OwnerEntry
owner_uid
.TSP.UUID
coord_set
.TSCE.CellCoordSetArchive"
UidCoordSetArchive
column_entries
2$.TSCE.UidCoordSetArchive.ColumnEntry
ColumnEntry
column
.TSP.UUID
row_set
.TSP.UUID"
UidCellRefSetArchive
owner_entries
2%.TSCE.UidCellRefSetArchive.OwnerEntry
OwnerEntry
owner_uid
.TSP.UUID
coord_set
.TSCE.UidCoordSetArchive"
ReferencesToDirtyArchive
to_dirty_owner_ids
.TSCE.IndexSetArchive
to_dirty_cells
.TSCE.InternalCellRefSetArchive
to_dirty_cells_additional
.TSCE.InternalCellRefSetArchive
to_dirty_range_refs
2#.TSCE.InternalRangeReferenceArchive
calc_in_progress_cells
.TSCE.InternalCellRefSetArchive
to_update_precedents_cells
.TSCE.InternalCellRefSetArchive"
CoordMapperArchive
table_uid
.TSP.UUID
summary_rows_set
.TSCE.IndexSetArchive
summary_columns_set
.TSCE.IndexSetArchive
label_rows_set
.TSCE.IndexSetArchive
base_to_view_row_map
2(.TSCE.CoordMapperArchive.BaseToViewEntry
base_to_view_column_map
2(.TSCE.CoordMapperArchive.BaseToViewEntry
summary_to_view_row_map
2+.TSCE.CoordMapperArchive.SummaryToViewEntry
summary_to_view_column_map
2+.TSCE.CoordMapperArchive.SummaryToViewEntry
BaseToViewEntry
base_column_or_row
view_column_or_row
SummaryToViewEntry
summary_column_or_row
view_column_or_row
ReferenceArchive
reference_type
2$.TSCE.ReferenceArchive.ReferenceType
cell_reference
.TSCE.CellReferenceArchive
range_reference
.TSCE.RangeReferenceArchive"M
ReferenceType
CELL_REFERENCE
RANGE_REFERENCE
NAME_DEPENDENCY
EdgeArchive
column
is_precedent
owner_id
.TSP.CFUUIDArchive"
EdgesArchive
packed_edge_without_owner
packed_edge_with_owner
owner_id_for_edge
.TSP.CFUUIDArchive
internal_owner_id_for_edge
ExpandedEdgesArchive
edge_without_owner_rows
edge_without_owner_columns
edge_with_owner_rows
edge_with_owner_columns
internal_owner_id_for_edge
CellRecordArchive
column
 dirty_self_plus_precedents_count
is_in_a_cycle
false
edge
.TSCE.EdgeArchiveB
contains_a_formula
true
has_calculated_precedents
false
#calculate_precedents_on_next_recalc
falseB
)translate_for_excel_import_on_next_recalc
false
edges
.TSCE.EdgesArchive"`
CellDependenciesArchive
cell_record
.TSCE.CellRecordArchive
num_dirty_cells
CellRecordExpandedArchive
column
 dirty_self_plus_precedents_count
is_in_a_cycle
false
has_calculated_precedents
false
expanded_edges
.TSCE.ExpandedEdgesArchive"W
CellDependenciesExpandedArchive
cell_record
.TSCE.CellRecordExpandedArchive"
CellRecordTileArchive
internal_owner_id
tile_column_begin
tile_row_begin
cell_records
.TSCE.CellRecordExpandedArchive"I
CellDependenciesTiledArchive
cell_record_tiles
.TSP.Reference"
VolatileDependenciesArchive
volatile_time_cell_column
volatile_time_cell_row
volatile_random_cell_column
volatile_random_cell_row
volatile_locale_cell_column
volatile_locale_cell_row
volatile_location_cell_column
volatile_location_cell_row
volatile_compass_cell_column
volatile_compass_cell_row
 volatile_remote_data_cell_column
volatile_remote_data_cell_row
%volatile_sheet_table_name_cell_column
"volatile_sheet_table_name_cell_row
!calculated_dependency_cell_column
calculated_dependency_cell_row
 volatile_geometry_cell_reference
.TSCE.CellReferenceArchive
volatile_geometry_cell
.TSCE.CellCoordinateArchive"
#VolatileDependenciesExpandedArchive
volatile_time_cells
.TSCE.CellCoordSetArchive
volatile_random_cells
.TSCE.CellCoordSetArchive
volatile_locale_cells
.TSCE.CellCoordSetArchive
volatile_sheet_table_name_cells
.TSCE.CellCoordSetArchive
volatile_remote_data_cells
.TSCE.CellCoordSetArchive
volatile_geometry_cell_refs
.TSCE.InternalCellRefSetArchive"c
 RTreeInternalNodeContentsArchive
child
.TSCE.RTreeNodeArchive"l
RTreeLeafNodeContentsArchive
cell_reference
.TSCE.CellReferenceArchive"
RTreeNodeArchive
level
count
internal_node_contents
2&.TSCE.RTreeInternalNodeContentsArchive
leaf_node_contents
2".TSCE.RTreeLeafNodeContentsArchive"
RTreeArchive
data_file_id
data_size
data_num_dims
data_elem_size
data_elem_real_size
data_max_nodes
data_min_nodes
root
.TSCE.RTreeNodeArchive"
RangeBackDependencyArchive
cell_coord_row
cell_coord_column
range_reference
.TSCE.RangeReferenceArchive
internal_range_reference
2#.TSCE.InternalRangeReferenceArchive"U
RangeDependenciesArchive
back_dependency
2 .TSCE.RangeBackDependencyArchive"
RangePrecedentsTileArchive
to_owner_id
from_to_range
23.TSCE.RangePrecedentsTileArchive.FromToRangeArchive
FromToRangeArchive
from_coord
.TSCE.CellCoordinateArchive
refers_to_rect
.TSCE.CellRectArchive"N
RangeDependenciesTiledArchive
range_precedents_tile
.TSP.Reference"
SpanningDependenciesArchive
column
range_context
2..TSCE.SpanningDependenciesArchive.RangeContext
cell
.TSCE.CellReferenceArchive
total_range_for_deleted_table
.TSCE.RangeCoordinateArchive
body_range_for_deleted_table
.TSCE.RangeCoordinateArchive
referring_column_to_local_cells
2=.TSCE.SpanningDependenciesArchive.ReferringColumnToLocalCells
 referring_column_to_remote_cells
2>.TSCE.SpanningDependenciesArchive.ReferringColumnToRemoteCells
ReferringColumnToLocalCells
column
range_context
2..TSCE.SpanningDependenciesArchive.RangeContext
cell_coordinate
.TSCE.CellCoordinateArchive
ReferringColumnToRemoteCells
column
range_context
2..TSCE.SpanningDependenciesArchive.RangeContext
internal_cell_reference
2".TSCE.InternalCellReferenceArchive"0
RangeContext
DEFAULT
INCLUDE_HEADERS
#SpanningDependenciesExpandedArchive
coord_refers_to_spans
2B.TSCE.SpanningDependenciesExpandedArchive.CellCoordRefersToExtents
total_range_for_table
.TSCE.RangeCoordinateArchive
body_range_for_table
.TSCE.RangeCoordinateArchive
ExtentRange
extent_begin
extent_end
ExtentRangeWithTableWithContext
owner_id
range_context
26.TSCE.SpanningDependenciesExpandedArchive.RangeContext
ranges
25.TSCE.SpanningDependenciesExpandedArchive.ExtentRange
CellCoordRefersToExtents
coordinate
.TSCE.CellCoordinateArchive
ranges_by_table_context
2I.TSCE.SpanningDependenciesExpandedArchive.ExtentRangeWithTableWithContext"0
RangeContext
DEFAULT
INCLUDE_HEADERS
WholeOwnerDependenciesArchive
dependent_cell
2".TSCE.InternalCellReferenceArchive"a
%WholeOwnerDependenciesExpandedArchive
dependent_cells
.TSCE.InternalCellRefSetArchive"
CellErrorsArchive
errors
2$.TSCE.CellErrorsArchive.ErrorForCell
ErrorForCell
coordinate
.TSCE.CellCoordinateArchive
error_flavor
2#.TSCE.CellErrorsArchive.ErrorFlavor
err_due_to_cell
2".TSCE.InternalCellReferenceArchive"i
ErrorFlavor
NONE
ERROR
REF_ERROR
CIRCULAR_REF_ERROR
UNSUPPORTED_FUNCTION_ERROR
UuidReferencesArchive
table_refs
2$.TSCE.UuidReferencesArchive.TableRef
table_uuid_refs
2,.TSCE.UuidReferencesArchive.TableWithUuidRef
TableRef
owner_uuid
.TSP.UUID
coord_set
.TSCE.CellCoordSetArchive
UuidRef
uuid
.TSP.UUID
coord_set
.TSCE.CellCoordSetArchive
TableWithUuidRef
owner_uuid
.TSP.UUID
uuid_refs
2#.TSCE.UuidReferencesArchive.UuidRef"
FormulaOwnerDependenciesArchive
formula_owner_uid
.TSP.UUID
internal_formula_owner_id
owner_kind
cell_dependencies
2%.TSCE.CellDependenciesExpandedArchive
range_dependencies
.TSCE.RangeDependenciesArchive
volatile_dependencies
2).TSCE.VolatileDependenciesExpandedArchive
spanning_column_dependencies
2).TSCE.SpanningDependenciesExpandedArchive
spanning_row_dependencies
2).TSCE.SpanningDependenciesExpandedArchive
whole_owner_dependencies
2+.TSCE.WholeOwnerDependenciesExpandedArchive
cell_errors
.TSCE.CellErrorsArchive
formula_owner
.TSP.Reference
base_owner_uid
.TSP.UUID
tiled_cell_dependencies
2".TSCE.CellDependenciesTiledArchive
uuid_references
.TSCE.UuidReferencesArchive
tiled_range_dependencies
2#.TSCE.RangeDependenciesTiledArchive"
FormulaOwnerInfoArchive
formula_owner_id
.TSP.CFUUIDArchive
cell_dependencies
.TSCE.CellDependenciesArchive
range_dependencies
.TSCE.RangeDependenciesArchive
volatile_dependencies
2!.TSCE.VolatileDependenciesArchive
spanning_column_dependencies
2!.TSCE.SpanningDependenciesArchive
spanning_row_dependencies
2!.TSCE.SpanningDependenciesArchive
whole_owner_dependencies
2#.TSCE.WholeOwnerDependenciesArchive
cell_errors
.TSCE.CellErrorsArchive
formula_owner
.TSP.Reference"Q
SubFormulaOwnerIDArchive
base_owner_uid
.TSP.UUID
owner_kind
OwnerIDMapArchive
map_entry
2..TSCE.OwnerIDMapArchive.OwnerIDMapArchiveEntry
unregistered_internal_owner_id
OwnerIDMapArchiveEntry
internal_owner_id
owner_id
.TSP.CFUUIDArchive"0
UidLookupListArchive
uuids
.TSP.UUID"
DependencyTrackerArchive
formula_owner_info
.TSCE.FormulaOwnerInfoArchive
dirty_leaf
.TSCE.CellReferenceArchiveB
owner_id_map
.TSCE.OwnerIDMapArchive
internal_dirty_leaf
2".TSCE.InternalCellReferenceArchiveB
number_of_formulas
formula_owner_dependencies
.TSP.Reference"e
RemoteDataSpecifierArchive
function_index
symbol
attribute
date
RemoteDataValueMapArchive
entry
22.TSCE.RemoteDataValueMapArchive.RemoteDataMapEntry
RemoteDataMapEntry
specifier
2 .TSCE.RemoteDataSpecifierArchive
value
.TSCE.CellValueArchive"
StockArchive
symbol
date
attribute
2!.TSCE.StockArchive.AttributeEntry
AttributeEntry
attribute
value
RemoteDataStoreArchive
value_map
.TSCE.RemoteDataValueMapArchive
stocks
.TSCE.StockArchive"q
NameTrackedReferencePair
name
tracked_reference
.TSP.Reference
tracked_reference_id
NamesByTrackedReferenceArchive
table_id
.TSP.CFUUIDArchive
name_tracked_reference_pair
.TSCE.NameTrackedReferencePair"
NamedReferenceManagerArchive
reference_tracker
.TSP.Reference
#names_by_tracked_reference_by_table
2$.TSCE.NamesByTrackedReferenceArchiveB
UuidSetStoreArchive
uuidSet
2!.TSCE.UuidSetStoreArchive.UuidSet
UuidSet
uuid
.TSP.UUID
index_of_set
UuidReferenceMapArchive
cell_refs_for_uuid
2-.TSCE.UuidReferenceMapArchive.CellRefsForUuid
CellRefsForUuid
uuid
.TSP.UUID
cell_ref
2".TSCE.InternalCellReferenceArchive
cell_refs
.TSCE.InternalCellRefSetArchive"
GroupByNodeMapArchive
refs_for_group_by
20.TSCE.GroupByNodeMapArchive.GroupNodesForGroupBy
CellRefsForGroupNode
group_node_uid
.TSP.UUID
cell_refs
.TSCE.InternalCellRefSetArchive
GroupNodesForGroupBy
group_by_uid
.TSP.UUID
refs_for_group_node
20.TSCE.GroupByNodeMapArchive.CellRefsForGroupNode"
CalculationEngineArchive
base_date_1904
dependency_tracker
.TSCE.DependencyTrackerArchive
named_reference_manager
.TSP.Reference
excel_import_date_mode
22.TSCE.CalculationEngineArchive.ExcelImportDateMode:
DATE_MODE_1900
saved_locale_identifier_for_4_2
document_random_seed
uuid_reference_map
.TSCE.UuidReferenceMapArchive
document_timestamp
document_timezone
table_uid_history
2 .TSCE.RewriteTableUIDInfoArchive
remote_data_store
.TSP.Reference
group_node_map
.TSCE.GroupByNodeMapArchive
header_name_manager
.TSP.Reference
refs_to_dirty
.TSP.Reference
saved_locale_identifier
begin_tracking_names_legacy_nrm
.TSP.UUID
end_tracking_names_legacy_nrm
.TSP.UUID"_
ExcelImportDateMode
DATE_MODE_1900
DATE_MODE_1900_LEGACY
DATE_MODE_1904_LEGACY
PreserveColumnRowFlagsArchive
begin_row_is_absolute
begin_column_is_absolute
end_row_is_absolute
end_column_is_absolute
CategoryReferenceArchive
group_by_uid
.TSP.UUID
column_uid
.TSP.UUID
aggregate_type
group_level
group_uids
2,.TSCE.CategoryReferenceArchive.CatRefUidList
preserve_flags
2#.TSCE.PreserveColumnRowFlagsArchive
relative_column
relative_group_uid
.TSP.UUID
absolute_group_uid
.TSP.UUID
option_refers_to_pivot_rows
option_refers_to_pivot_columns
agg_index_level
option_show_aggregate_name
CatRefUidList
.TSP.UUID"
ASTNodeArrayArchive
AST_node
2(.TSCE.ASTNodeArrayArchive.ASTNodeArchive
 ASTLocalCellReferenceNodeArchive
row_handle
column_handle
row_is_sticky
column_is_sticky
%ASTCrossTableCellReferenceNodeArchive
row_handle
column_handle
row_is_sticky
column_is_sticky
table_id
.TSP.CFUUIDArchive
)AST_reference_whitespace_after_sheet_name
*AST_reference_whitespace_before_table_name
)AST_reference_whitespace_after_table_name
,AST_reference_whitespace_before_cell_address
ASTColumnCoordinateArchive
column
absolute
false
ASTRowCoordinateArchive
absolute
false
ASTUidList
.TSP.UUID
ASTUidTract
columnUids
2$.TSCE.ASTNodeArrayArchive.ASTUidList
rowUids
2$.TSCE.ASTNodeArrayArchive.ASTUidList
is_range_ref
purpose
2,.TSCE.ASTNodeArrayArchive.ASTUidTractPurpose
preserve_rectangular
true
ASTStickyBits
begin_row_is_absolute
begin_column_is_absolute
end_row_is_absolute
end_column_is_absolute
ASTUidTractList
tract
2%.TSCE.ASTNodeArrayArchive.ASTUidTract
sticky_bits
2'.TSCE.ASTNodeArrayArchive.ASTStickyBits
ASTUidCoordinateArchive
column_uid
.TSP.UUID
row_uid
.TSP.UUID
column_absolute
row_absolute
ASTCategoryLevels
AST_column_group_level
AST_row_group_level
AST_agg_index_level
ASTCategoryReferenceArchive
category_ref
.TSCE.CategoryReferenceArchive
ASTColonTractArchive
relative_column
2P.TSCE.ASTNodeArrayArchive.ASTColonTractArchive.ASTColonTractRelativeRangeArchive
relative_row
2P.TSCE.ASTNodeArrayArchive.ASTColonTractArchive.ASTColonTractRelativeRangeArchive
absolute_column
2P.TSCE.ASTNodeArrayArchive.ASTColonTractArchive.ASTColonTractAbsoluteRangeArchive
absolute_row
2P.TSCE.ASTNodeArrayArchive.ASTColonTractArchive.ASTColonTractAbsoluteRangeArchive
preserve_rectangular
true
!ASTColonTractRelativeRangeArchive
range_begin
range_end
!ASTColonTractAbsoluteRangeArchive
range_begin
range_end
&ASTCrossTableReferenceExtraInfoArchive
table_id
.TSP.CFUUIDArchive
)AST_reference_whitespace_after_sheet_name
*AST_reference_whitespace_before_table_name
)AST_reference_whitespace_after_table_name
,AST_reference_whitespace_before_cell_address
ASTLetNodeWhitespace
AST_let_whitespace_after_let
#AST_let_whitespace_after_identifier
AST_let_whitespace_after_equals
"AST_let_whitespace_after_delimiter
ASTNodeArchive
AST_node_type
2%.TSCE.ASTNodeArrayArchive.ASTNodeType
AST_function_node_index
AST_function_node_numArgs
AST_number_node_number
AST_boolean_node_boolean
AST_string_node_string
AST_date_node_dateNum
"AST_date_node_suppress_date_format
"AST_date_node_suppress_time_format
AST_date_node_date_time_format
AST_duration_node_unitNum
AST_duration_node_unit
AST_duration_node_style
'AST_duration_node_duration_unit_largest
(AST_duration_node_duration_unit_smallest
%AST_duration_node_use_automatic_units
AST_token_node_boolean
AST_array_node_numCol
AST_array_node_numRow
AST_list_node_numArgs
AST_thunk_node_array
.TSCE.ASTNodeArrayArchive
'AST_local_cell_reference_node_reference
2:.TSCE.ASTNodeArrayArchive.ASTLocalCellReferenceNodeArchive
-AST_cross_table_cell_reference_node_reference
2?.TSCE.ASTNodeArrayArchive.ASTCrossTableCellReferenceNodeArchive
 AST_unknown_function_node_string
!AST_unknown_function_node_numArgs
AST_whitespace
AST_column
24.TSCE.ASTNodeArrayArchive.ASTColumnCoordinateArchive
AST_row
21.TSCE.ASTNodeArrayArchive.ASTRowCoordinateArchive
$AST_cross_table_reference_extra_info
2@.TSCE.ASTNodeArrayArchive.ASTCrossTableReferenceExtraInfoArchive
AST_uid_coordinate
21.TSCE.ASTNodeArrayArchive.ASTUidCoordinateArchive
AST_sticky_bits
2'.TSCE.ASTNodeArrayArchive.ASTStickyBits
AST_frozen_sticky_bits
2'.TSCE.ASTNodeArrayArchive.ASTStickyBits
AST_let_identifier
AST_let_e2
.TSCE.ASTNodeArrayArchive
AST_let_whitespace
2..TSCE.ASTNodeArrayArchive.ASTLetNodeWhitespace
AST_symbol
AST_tract_list
2).TSCE.ASTNodeArrayArchive.ASTUidTractList
AST_category_ref
25.TSCE.ASTNodeArrayArchive.ASTCategoryReferenceArchive
AST_colon_tract
2..TSCE.ASTNodeArrayArchive.ASTColonTractArchive
AST_number_node_decimal_low
AST_number_node_decimal_high
AST_category_levels
2+.TSCE.ASTNodeArrayArchive.ASTCategoryLevels"
ASTNodeType
ADDITION_NODE
SUBTRACTION_NODE
MULTIPLICATION_NODE
DIVISION_NODE
POWER_NODE
CONCATENATION_NODE
GREATER_THAN_NODE
GREATER_THAN_OR_EQUAL_TO_NODE
LESS_THAN_NODE
LESS_THAN_OR_EQUAL_TO_NODE
EQUAL_TO_NODE
NOT_EQUAL_TO_NODE
NEGATION_NODE
PLUS_SIGN_NODE
PERCENT_NODE
FUNCTION_NODE
NUMBER_NODE
BOOLEAN_NODE
STRING_NODE
DATE_NODE
DURATION_NODE
EMPTY_ARGUMENT_NODE
TOKEN_NODE
ARRAY_NODE
LIST_NODE
THUNK_NODE
LOCAL_CELL_REFERENCE_NODE
CROSS_TABLE_CELL_REFERENCE_NODE
COLON_NODE
REFERENCE_ERROR_NODE
UNKNOWN_FUNCTION_NODE
APPEND_WHITESPACE_NODE
PREPEND_WHITESPACE_NODE
BEGIN_EMBEDDED_NODE_ARRAY
END_THUNK_NODE
CELL_REFERENCE_NODE
COLON_NODE_WITH_UIDS
REFERENCE_ERROR_WITH_UIDS
UID_REFERENCE_NODE
LET_BIND_NODE
LET_VAR_NODE
LET_END_SCOPE_NODE
LINKED_CELL_REF_NODE
LINKED_COLUMN_REF_NODE
LINKED_ROW_REF_NODE
CATEGORY_REF_NODE
COLON_TRACT_NODE
VIEW_TRACT_REF_NODE
ASTUidTractPurpose
UIDS_INCLUDED
UIDS_PREMERGE
UIDS_PREMOVEREGION
UIDS_EXCLUDED
UIDS_ACTIVE
UIDS_PREMERGE_TOPLEFT
UIDS_REMOVED_BY_MOVE
FULLTUPLE_ROW_COLUMN_HEADER
FULLTUPLE_AGGREGATE_RULE_UID
%FULLTUPLE_ROW_COLUMN_RULE_VALUE_PAIRS
FormulaTranslationFlagsArchive
excel_import_translation
false
+number_to_date_coercion_removal_translation
false
contains_uid_form_references
false
contains_frozen_references
false
returns_percent_formatted
false"
FormulaArchive
AST_node_array
.TSCE.ASTNodeArrayArchive
host_column
host_row
host_column_is_negative
false
host_row_is_negative
false
translation_flags
2$.TSCE.FormulaTranslationFlagsArchive
host_table_uid
.TSP.UUID
host_column_uid
.TSP.UUID
host_row_uid
.TSP.UUID"I
FunctorArchive
formula
.TSCE.FormulaArchive
num_args
FormatStructArchive
format_type
decimal_places
currency_code
negative_style
show_thousands_separator
use_accounting_style
duration_style
base
base_places
base_use_minus_sign
fraction_accuracy
suppress_date_format
suppress_time_format
date_time_format
duration_unit_largest
duration_unit_smallest
RangeCoordinateArchive
top_left_column
top_left_row
bottom_right_column
bottom_right_row
TableTransposeInfoArchive
number_of_footer_rows
body_range_for_transposed_table
.TSCE.RangeCoordinateArchive"c
MergeOriginMovedArchive
src_column
src_row
dst_column
dst_row
OwnerUIDMapperArchive
table_uid
.TSP.UUID
next_table_uid
.TSP.UUID
hidden_state_for_rows_owner_uid
.TSP.UUID
$next_hidden_state_for_rows_owner_uid
.TSP.UUID
"hidden_state_for_columns_owner_uid
.TSP.UUID
'next_hidden_state_for_columns_owner_uid
.TSP.UUID
conditional_style_owner_uid
.TSP.UUID
 next_conditional_style_owner_uid
.TSP.UUID
%sort_rule_reference_tracker_owner_uid
.TSP.UUID
*next_sort_rule_reference_tracker_owner_uid
.TSP.UUID
merge_owner_uid
.TSP.UUID
next_merge_owner_uid
.TSP.UUID
category_aggregates_owner_uid
.TSP.UUID
"next_category_aggregates_owner_uid
.TSP.UUID
group_by_uid
.TSP.UUID
next_group_by_uid
.TSP.UUID
pencil_annotation_owner_uid
.TSP.UUID
 next_pencil_annotation_owner_uid
.TSP.UUID"
RewriteTableUIDInfoArchive
table_uid_map
28.TSCE.RewriteTableUIDInfoArchive.TableUIDMapEntryArchive
TableUIDMapEntryArchive
prev_table_uid
.TSP.UUID
new_table_uid
.TSP.UUID"
GroupByChangeArchive
change_type
2%.TSCE.GroupByChangeArchive.ChangeType
group_by_uid
.TSP.UUID
previous_level
updated_level
previous_to_updated_map
.TSP.UUIDMapArchive
updated_to_previous_map
.TSP.UUIDMapArchive
removed_group_uids
.TSP.UUID
grouping_column_changes
26.TSCE.GroupByChangeArchive.GroupingColumnChangeArchive
GroupingColumnChangeArchive
old_level
new_level
ChangeType
NONE
GROUP_VALUE_CHANGE
GROUP_DEFINITION_CHANGE
REMOVE_GROUP_LEVEL
ADD_GROUP_LEVEL
PROMOTE
DEMOTE
RewriteGroupNodeUIDInfoArchive
group_by_uid
.TSP.UUID
group_node_uid_map
.TSP.UUIDMapArchive"
IndexedUidsArchive
uids
2#.TSCE.IndexedUidsArchive.IndexedUid
IndexedUid
uid_for_index
.TSP.UUID
index_for_uid
RewriteRangeEntryArchive
range_location
range_length
range_uids
.TSP.UUID
offset
ColumnOrRowUuidsInfoArchive
is_rows
table_uid
.TSP.UUID
cond_style_owner_uid
.TSP.UUID
group_by_uid
.TSP.UUID
uids
.TSCE.IndexedUidsArchive
range_entries
.TSCE.RewriteRangeEntryArchive
table_range
.TSCE.RangeCoordinateArchive
insert_at_uid
.TSP.UUID
insert_opposite_uid
.TSP.UUID"
RegionInfoArchive
table_uid
.TSP.UUID
column_uids
.TSCE.IndexedUidsArchive
row_uids
.TSCE.IndexedUidsArchive"
RegionMovedInfoArchive
src_region
.TSCE.RegionInfoArchive
dst_region
.TSCE.RegionInfoArchive
span_rows
span_columns
original_src_region
.TSCE.RegionInfoArchive
final_dest_table_uid
.TSP.UUID"=
MergeSourceArchive
coord_column
coord_row
HauntedOwnerArchive
owner_uid
.TSP.UUID"H
CellCoordinateArchive
packedData
column
CellCoordinateVectorArchive
cell_coord
.TSCE.CellCoordinateArchive"p
 ExpandedCellRefObjectPairArchive
cell_ref
.TSCE.CellReferenceArchive
object
.TSP.Reference"g
ExpandedCellRefObjectMapArchive
cell_ref_object_pair
2&.TSCE.ExpandedCellRefObjectPairArchive"
FormulaAtCoordArchive
column
formula
.TSCE.FormulaArchive
repeat_previous_formula
false"
FormulaCoordPairsByOwnerArchive
owner_kind
owner_uid
.TSP.UUID
formula_at_coords
.TSCE.FormulaAtCoordArchive"[
FormulasForUndoArchive
formulas_for_owner
2%.TSCE.FormulaCoordPairsByOwnerArchive"q
FormulaRewriteCommandArchive
table_rewrite_command
.TSP.Reference
super
.TSK.CommandArchive"U
TrackedReferenceArchive
.TSCE.ASTNodeArrayArchive
formula_id
ExpandedTrackedReferenceArchive
.TSCE.ASTNodeArrayArchive
formula_column
formula_row
TrackedReferenceStoreArchive
uuid
.TSP.CFUUIDArchive
tracked_reference
.TSP.ReferenceB
contained_tracked_reference
.TSCE.TrackedReferenceArchive
$contained_expanded_tracked_reference
2%.TSCE.ExpandedTrackedReferenceArchive"
ViewTractRefArchive
table_uid
.TSP.UUID
uid_tract
2%.TSCE.ASTNodeArrayArchive.ASTUidTract
preserve_flags
2#.TSCE.PreserveColumnRowFlagsArchive
agg_index_level
column_group_level
row_group_level
BooleanCellValueArchive
value
format
.TSK.FormatStructArchive
format_is_explicit
false"
DateCellValueArchive
value
format
.TSK.FormatStructArchive
format_is_implicit
format_is_explicit
false"
NumberCellValueArchive
value
unit_index
currency_code
format
.TSK.FormatStructArchive
format_is_implicit
format_is_explicit
false
decimal_low
decimal_high
StringCellValueArchive
value
format
.TSK.FormatStructArchive
format_is_implicit
format_is_explicit
false
is_regex
false
is_case_sensitive_regex
false"y
ErrorCellValueArchive
error_type
extra_info_int
extra_info_string
extra_info_double
CellValueArchive
cell_value_type
2$.TSCE.CellValueArchive.CellValueType
boolean_value
.TSCE.BooleanCellValueArchive
date_value
.TSCE.DateCellValueArchive
number_value
.TSCE.NumberCellValueArchive
string_value
.TSCE.StringCellValueArchive
error_value
.TSCE.ErrorCellValueArchive"`
CellValueType
NIL_TYPE
BOOLEAN_TYPE
DATE_TYPE
NUMBER_TYPE
STRING_TYPE
N4TSCE20CellReferenceArchiveE
N4TSCE28InternalCellReferenceArchiveE
N4TSCE22RelativeCellRefArchiveE
N4TSCE21RangeReferenceArchiveE
N4TSCE29InternalRangeReferenceArchiveE
N4TSCE29IndexSetArchive_IndexSetEntryE
N4TSCE15IndexSetArchiveE
N4TSCE31CellCoordSetArchive_ColumnEntryE
N4TSCE19CellCoordSetArchiveE
N4TSCE36InternalCellRefSetArchive_OwnerEntryE
N4TSCE25InternalCellRefSetArchiveE
N4TSCE13ColumnRowSizeE
N4TSCE15CellRectArchiveE
N4TSCE28CellRefSetArchive_OwnerEntryE
N4TSCE17CellRefSetArchiveE
N4TSCE30UidCoordSetArchive_ColumnEntryE
N4TSCE18UidCoordSetArchiveE
N4TSCE31UidCellRefSetArchive_OwnerEntryE
N4TSCE20UidCellRefSetArchiveE
N4TSCE24ReferencesToDirtyArchiveE
N4TSCE34CoordMapperArchive_BaseToViewEntryE
N4TSCE37CoordMapperArchive_SummaryToViewEntryE
N4TSCE18CoordMapperArchiveE
N4TSCE16ReferenceArchiveE
N4TSCE11EdgeArchiveE
N4TSCE12EdgesArchiveE
N4TSCE20ExpandedEdgesArchiveE
N4TSCE17CellRecordArchiveE
N4TSCE23CellDependenciesArchiveE
N4TSCE25CellRecordExpandedArchiveE
N4TSCE31CellDependenciesExpandedArchiveE
N4TSCE21CellRecordTileArchiveE
N4TSCE28CellDependenciesTiledArchiveE
N4TSCE27VolatileDependenciesArchiveE
N4TSCE35VolatileDependenciesExpandedArchiveE
N4TSCE32RTreeInternalNodeContentsArchiveE
N4TSCE28RTreeLeafNodeContentsArchiveE
N4TSCE16RTreeNodeArchiveE
N4TSCE12RTreeArchiveE
N4TSCE26RangeBackDependencyArchiveE
N4TSCE24RangeDependenciesArchiveE
N4TSCE45RangePrecedentsTileArchive_FromToRangeArchiveE
N4TSCE26RangePrecedentsTileArchiveE
N4TSCE29RangeDependenciesTiledArchiveE
N4TSCE55SpanningDependenciesArchive_ReferringColumnToLocalCellsE
N4TSCE56SpanningDependenciesArchive_ReferringColumnToRemoteCellsE
N4TSCE27SpanningDependenciesArchiveE
N4TSCE47SpanningDependenciesExpandedArchive_ExtentRangeE
N4TSCE67SpanningDependenciesExpandedArchive_ExtentRangeWithTableWithContextE
N4TSCE60SpanningDependenciesExpandedArchive_CellCoordRefersToExtentsE
N4TSCE35SpanningDependenciesExpandedArchiveE
N4TSCE29WholeOwnerDependenciesArchiveE
N4TSCE37WholeOwnerDependenciesExpandedArchiveE
N4TSCE30CellErrorsArchive_ErrorForCellE
N4TSCE17CellErrorsArchiveE
N4TSCE30UuidReferencesArchive_TableRefE
N4TSCE29UuidReferencesArchive_UuidRefE
N4TSCE38UuidReferencesArchive_TableWithUuidRefE
N4TSCE21UuidReferencesArchiveE
N4TSCE31FormulaOwnerDependenciesArchiveE
N4TSCE23FormulaOwnerInfoArchiveE
N4TSCE24SubFormulaOwnerIDArchiveE
N4TSCE40OwnerIDMapArchive_OwnerIDMapArchiveEntryE
N4TSCE17OwnerIDMapArchiveE
N4TSCE20UidLookupListArchiveE
N4TSCE24DependencyTrackerArchiveE
N4TSCE26RemoteDataSpecifierArchiveE
N4TSCE44RemoteDataValueMapArchive_RemoteDataMapEntryE
N4TSCE25RemoteDataValueMapArchiveE
N4TSCE27StockArchive_AttributeEntryE
N4TSCE12StockArchiveE
N4TSCE22RemoteDataStoreArchiveE
N4TSCE24NameTrackedReferencePairE
N4TSCE30NamesByTrackedReferenceArchiveE
N4TSCE28NamedReferenceManagerArchiveE
N4TSCE27UuidSetStoreArchive_UuidSetE
N4TSCE19UuidSetStoreArchiveE
N4TSCE39UuidReferenceMapArchive_CellRefsForUuidE
N4TSCE23UuidReferenceMapArchiveE
N4TSCE42GroupByNodeMapArchive_CellRefsForGroupNodeE
N4TSCE42GroupByNodeMapArchive_GroupNodesForGroupByE
N4TSCE21GroupByNodeMapArchiveE
N4TSCE24CalculationEngineArchiveE
N4TSCE29PreserveColumnRowFlagsArchiveE
N4TSCE38CategoryReferenceArchive_CatRefUidListE
N4TSCE24CategoryReferenceArchiveE
N4TSCE52ASTNodeArrayArchive_ASTLocalCellReferenceNodeArchiveE
N4TSCE57ASTNodeArrayArchive_ASTCrossTableCellReferenceNodeArchiveE
N4TSCE46ASTNodeArrayArchive_ASTColumnCoordinateArchiveE
N4TSCE43ASTNodeArrayArchive_ASTRowCoordinateArchiveE
N4TSCE30ASTNodeArrayArchive_ASTUidListE
N4TSCE31ASTNodeArrayArchive_ASTUidTractE
N4TSCE33ASTNodeArrayArchive_ASTStickyBitsE
N4TSCE35ASTNodeArrayArchive_ASTUidTractListE
N4TSCE43ASTNodeArrayArchive_ASTUidCoordinateArchiveE
N4TSCE37ASTNodeArrayArchive_ASTCategoryLevelsE
N4TSCE47ASTNodeArrayArchive_ASTCategoryReferenceArchiveE
N4TSCE74ASTNodeArrayArchive_ASTColonTractArchive_ASTColonTractRelativeRangeArchiveE
N4TSCE74ASTNodeArrayArchive_ASTColonTractArchive_ASTColonTractAbsoluteRangeArchiveE
N4TSCE40ASTNodeArrayArchive_ASTColonTractArchiveE
N4TSCE58ASTNodeArrayArchive_ASTCrossTableReferenceExtraInfoArchiveE
N4TSCE40ASTNodeArrayArchive_ASTLetNodeWhitespaceE
N4TSCE34ASTNodeArrayArchive_ASTNodeArchiveE
N4TSCE19ASTNodeArrayArchiveE
N4TSCE30FormulaTranslationFlagsArchiveE
N4TSCE14FormulaArchiveE
N4TSCE14FunctorArchiveE
N4TSCE19FormatStructArchiveE
N4TSCE22RangeCoordinateArchiveE
N4TSCE25TableTransposeInfoArchiveE
N4TSCE23MergeOriginMovedArchiveE
N4TSCE21OwnerUIDMapperArchiveE
N4TSCE50RewriteTableUIDInfoArchive_TableUIDMapEntryArchiveE
N4TSCE26RewriteTableUIDInfoArchiveE
N4TSCE48GroupByChangeArchive_GroupingColumnChangeArchiveE
N4TSCE20GroupByChangeArchiveE
N4TSCE30RewriteGroupNodeUIDInfoArchiveE
N4TSCE29IndexedUidsArchive_IndexedUidE
N4TSCE18IndexedUidsArchiveE
N4TSCE24RewriteRangeEntryArchiveE
N4TSCE27ColumnOrRowUuidsInfoArchiveE
N4TSCE17RegionInfoArchiveE
N4TSCE22RegionMovedInfoArchiveE
N4TSCE18MergeSourceArchiveE
N4TSCE19HauntedOwnerArchiveE
N4TSCE21CellCoordinateArchiveE
N4TSCE27CellCoordinateVectorArchiveE
N4TSCE32ExpandedCellRefObjectPairArchiveE
N4TSCE31ExpandedCellRefObjectMapArchiveE
N4TSCE21FormulaAtCoordArchiveE
N4TSCE31FormulaCoordPairsByOwnerArchiveE
N4TSCE22FormulasForUndoArchiveE
N4TSCE28FormulaRewriteCommandArchiveE
N4TSCE23TrackedReferenceArchiveE
N4TSCE31ExpandedTrackedReferenceArchiveE
N4TSCE28TrackedReferenceStoreArchiveE
N4TSCE19ViewTractRefArchiveE
N4TSCE23BooleanCellValueArchiveE
N4TSCE20DateCellValueArchiveE
N4TSCE22NumberCellValueArchiveE
N4TSCE22StringCellValueArchiveE
N4TSCE21ErrorCellValueArchiveE
N4TSCE16CellValueArchiveE
N6google8protobuf8internal16InternalMetadata9ContainerINS0_15UnknownFieldSetEEE
N6google8protobuf8internal16InternalMetadata13ContainerBaseE
31TSCEASTOffsetReferencesRewriter
 !"#$%&'(*+,-./012356789ABCD`afghijklmno
   ! " # $ % & ' ( ) / 0 1 2 3 4 5 6 7 8 9 : ; < = > ? @ A B C D E F G H I J K L M N O P Q R S T W _ p q t u v w x y z { | } ~ 
! !!!"!#!$!%!&!'!(!)!*!+!,!-!.!/!0!1!2!3!4!5!6!7!8!9!:!;!=!>!?!@!A!B!C!D!E!F!G!H!I!J!K!S!T!U!V!W!X!Y!Z![!\!]!^!_!`!a!b!c!d!e!f!g!h!i!j!k!l!m!n!o!p!q!r!s!t!u!v!w!x!y!z!{!|!}!~!
" "!"""#"$"%"&"'"(")"*"+","-"."/"0"1"2"3"4"5"6"7"8"9":";"<"=">"?"@"A"B"C"D"E"F"G"H"I"J"K"L"M"N"O"P"Q"R"S"T"U"V"W"X"Y"Z"["\"]"^"_"`"a"b"c"d"e"f"g"h"i"j"k"l"m"n"o"p"q"r"s"t"u"v"w"x"y"z"{"|"}"~"
# #!#"###$#%#&#'#(#)#*#+#,#-#.#/#0#1#2#3#4#5#6#7#8#9#:#;#<#=#>#?#@#A#B#C#D#E#F#G#H#I#J#K#L#M#N#O#P#Q#R#S#T#U#V#W#X#Y#Z#[#\#]#^#_#`#a#b#c#d#e#f#g#h#i#j#k#l#m#n#o#p#q#r#s#t#u#v#w#x#y#z#{#|#}#~#
$ $!$"$#$$$%$&$@$A$B$C$D$E$F$G$H$I$J$`$a$b$c$d$e$f$g$h$i$j$k$l$m$n$o$p$q$r$s$t$u$v$w$x$y$z${$|$}$~$
% %!%"%#%$%%%&%'%(%)%*%+%,%-%.%/%0%1%2%3%4%5%6%7%8%9%:%;%<%=%>%?%@%A%B%C%D%E%F%G%H%I%J%K%L%M%N%O%P%Q%R%S%T%U%V%W%X%Y%Z%[%\%]%^%_%`%a%b%c%d%e%f%g%h%i%j%k%l%m%n%o%p%q%r%s%t%u%v%w%x%y%z%{%|%}%~%
& &!&"&#&$&%&&&'&(&)&*&+&,&-&.&/&0&1&2&3&4&5&6&7&8&9&:&;&<&=&>&?&@&A&B&C&D&E&F&G&H&I&J&K&L&M&N&O&P&Q&R&S&T&U&V&W&X&Y&Z&[&\&]&^&_&`&a&b&c&d&e&f&g&h&i&j&k&l&m&n&o&p&q&r&s&t&u&v&w&x&y&z&{&|&}&
' '!'"'#'$'%'&''')'*'+','-'.'/'0'1'2'3'4'5'6'7'8'9':';'<'='>'?'@'A'B'C'D'E'F'G'H'I'J'K'M'O'P'Q'R'V'X'Y'Z'['\']'^'a'b'c'd'e'f'g'h'i'j'k'l'm'n'o'p'q'r's't'u'v'w'x'y'z'{'|'}'~'
( (!("(#($(%(&('((()(*(+(,(-(.(/(0(1(2(3(4(5(6(7(8(9(:(;(<(=(>(?(@(A(B(C(D(E(F(G(H(I(J(K(L(M(N(O(P(Q(R(S(T(U(V(W(X(Y(Z([(\(](^(_(`(a(b(c(d(e(f(g(h(i(j(k(l(m(n(o(p(q(r(s(t(u(v(w(x(y(z({(|(}(~(
) )!)")#)$)%)&)')()))*)+),)-).)/)0)1)2)3)4)5)6)7)8)9):);)<)=)>)?)@)A)B)C)D)E)F)G)H)I)J)K)L)M)N)O)P)Q)R)S)T)U)V)W)X)Y)Z)[)\)])^)_)`)a)b)c)d)e)f)g)h)i)j)k)l)m)n)o)p)q)r)s)t)u)v)w)x)y)z){)|)})~)
* *!*"*#*$*%*&*'*(*)***+*,*-*.*/*0*1*2*3*4*5*6*7*8*9*:*;*<*=*>*?*@*A*B*C*D*E*F*G*H*I*J*K*L*M*N*O*P*Q*R*S*T*U*V*W*X*Y*Z*[*\*]*^*_*`*a*b*c*d*e*f*g*h*i*j*k*l*m*n*o*p*q*r*s*t*u*v*w*x*y*z*{*|*}*~*
/ /!/"/#/$/%/&/'/(/)/*/+/,/-/.///0/1/2/3/4/5/6/7/8/9/:/;/</=/>/?/@/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O/P/Q/R/S/T/U/V/W/X/Y/Z/[/\/]/^/_/`/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y/z/{/|/}/~/
0 0!0"0#0$0%0&0'0(0)000102030405060708090:0;0<0=0>0?0A0B0C0D0E0F0G0H0I0J0K0L0M0N0O0P0Q0R0S0T0U0V0W0X0Y0Z0[0\0]0^0_0`0a0b0c0d0e0f0g0h0i0j0k0l0m0n0o0p0q0r0s0t0u0v0w0x0y0z0{0|0}0~0
1 1!1"1#1$1%1&1'1(1)1*1+1,1112131415161718191:1;1<1=1>1?1@1A1B1C1D1E1F1G1H1I1J1K1L1M1N1O1P1Q1R1S1T1U1V1W1X1Y1Z1[1\1]1^1_1`1a1b1c1d1e1f1g1h1i1j1k1l1m1n1o1p1q1r1s1t1u1v1w1x1y1z1{1|1}1~1
2 2!2"2#2$2%2&2'2(2)2*2+2,2-2.2/202122232425262728292:2;2<2=2>2?2@2A2B2C2P2Q2R2S2T2U2V2W2X2Y2Z2[2\2]2^2_2`2a2b2c2d2e2f2g2h2i2j2k2l2m2n2o2p2q2r2s2t2u2v2w2x2y2z2{2|2}2
3 3!3"3#3$3%3&3'3(3)3*3+3,3-3.3/303132333435363738393:3;3<3=3>3?3@3A3B3C3D3E3F3G3H3I3J3K3L3M3N3O3P3Q3R3S3T3U3V3W3X3Y3Z3[3\3]3^3_3`3a3b3c3d3e3f3g3h3i3j3k3l3m3n3o3p3q3r3s3t3u3v3w3x3y3z3{3|3}3~3
16TSTTableResolver
17TSCETableResolver
3@MZg
S8:<>@BDFHJLNPR
23TSCEASTSortRowsRewriter
!$'*-0369
<DGJ
MxMMMMMMMM
MMMM{M~
MMMMMMMM
19TSCEASTIteratorBase
(7FXgy
TSTArchives.sos.proto
TSTSOS
TSDArchives.sos.proto
TSSArchives.sos.proto
TSTStylePropertyArchiving.proto
TSWPArchives.sos.proto"t
#SpecSetTableStrokePresetListArchive
table_stroke_preset_list
.TST.StrokePresetListArchive
unset
 SpecTableStrokePresetListArchive
!spec_set_table_stroke_preset_list
2+.TSTSOS.SpecSetTableStrokePresetListArchive"
&TableCellStylePropertyChangeSetArchive
text_wrap
.TSSSOS.SpecBoolArchive
text_wrap_undefined
type
.TSSSOS.SpecIntegerArchive
type_undefined
fill
.TSDSOS.SpecFillArchive
fill_undefined
vertical_alignment
.TSSSOS.SpecIntegerArchive
vertical_alignment_undefined
padding
.TSWPSOS.SpecPaddingArchive
padding_undefined
"TableStylePropertyChangeSetArchive
auto_resize
.TSSSOS.SpecBoolArchive
auto_resize_undefined
banded_rows
.TSSSOS.SpecBoolArchive
banded_rows_undefined
banded_cell_fill
.TSDSOS.SpecFillArchive
banded_cell_fill_undefined
behaves_like_spreadsheet
.TSSSOS.SpecBoolArchive
"behaves_like_spreadsheet_undefined
body_horizontal_border_stroke
.TSDSOS.SpecStrokeArchive
'body_horizontal_border_stroke_undefined
body_vertical_border_stroke
.TSDSOS.SpecStrokeArchive
%body_vertical_border_stroke_undefined
body_horizontal_stroke
.TSDSOS.SpecStrokeArchive
 body_horizontal_stroke_undefined
body_vertical_stroke
.TSDSOS.SpecStrokeArchive
body_vertical_stroke_undefined
header_column_border_stroke
.TSDSOS.SpecStrokeArchive
%header_column_border_stroke_undefined
header_column_vertical_stroke
.TSDSOS.SpecStrokeArchive
'header_column_vertical_stroke_undefined
header_column_horizontal_stroke
.TSDSOS.SpecStrokeArchive
)header_column_horizontal_stroke_undefined
header_column_separator_stroke
.TSDSOS.SpecStrokeArchive
(header_column_separator_stroke_undefined
header_row_border_stroke
.TSDSOS.SpecStrokeArchive
"header_row_border_stroke_undefined
header_row_horizontal_stroke
.TSDSOS.SpecStrokeArchive
&header_row_horizontal_stroke_undefined
header_row_vertical_stroke
.TSDSOS.SpecStrokeArchive
$header_row_vertical_stroke_undefined
header_row_separator_stroke
.TSDSOS.SpecStrokeArchive
%header_row_separator_stroke_undefined
footer_row_border_stroke
.TSDSOS.SpecStrokeArchive
"footer_row_border_stroke_undefined
footer_row_horizontal_stroke
.TSDSOS.SpecStrokeArchive
&footer_row_horizontal_stroke_undefined
footer_row_vertical_stroke
.TSDSOS.SpecStrokeArchive
$footer_row_vertical_stroke_undefined
footer_row_separator_stroke
.TSDSOS.SpecStrokeArchive
%footer_row_separator_stroke_undefined
stroke_preset_list_object
2(.TSTSOS.SpecTableStrokePresetListArchive
#stroke_preset_list_object_undefined
vertical_strokes_visible
.TSSSOS.SpecBoolArchive
"vertical_strokes_visible_undefined
horizontal_strokes_visible
.TSSSOS.SpecBoolArchive
$horizontal_strokes_visible_undefined
header_row_sep_visible
.TSSSOS.SpecBoolArchive
 header_row_sep_visible_undefined
header_row_verticals_visible
.TSSSOS.SpecBoolArchive
&header_row_verticals_visible_undefined
header_col_sep_visible
.TSSSOS.SpecBoolArchive
 header_col_sep_visible_undefined
header_col_horizontals_visible
.TSSSOS.SpecBoolArchive
(header_col_horizontals_visible_undefined
footer_sep_visible
.TSSSOS.SpecBoolArchive
footer_sep_visible_undefined
footer_verticals_visible
.TSSSOS.SpecBoolArchive
"footer_verticals_visible_undefined
border_strokes_visible
.TSSSOS.SpecBoolArchive
 border_strokes_visible_undefined
master_font_family
.TSSSOS.SpecStringArchive
master_font_family_undefined
writing_direction
.TSSSOS.SpecIntegerArchive
writing_direction_undefined
category_level1_top_stroke
.TSDSOS.SpecStrokeArchive
$category_level1_top_stroke_undefined
category_level2_top_stroke
.TSDSOS.SpecStrokeArchive
$category_level2_top_stroke_undefined
category_level3_top_stroke
.TSDSOS.SpecStrokeArchive
$category_level3_top_stroke_undefined
category_level4_top_stroke
.TSDSOS.SpecStrokeArchive
$category_level4_top_stroke_undefined
category_level5_top_stroke
.TSDSOS.SpecStrokeArchive
$category_level5_top_stroke_undefined
&category_level1_label_separator_stroke
.TSDSOS.SpecStrokeArchive
0category_level1_label_separator_stroke_undefined
&category_level2_label_separator_stroke
.TSDSOS.SpecStrokeArchive
0category_level2_label_separator_stroke_undefined
&category_level3_label_separator_stroke
.TSDSOS.SpecStrokeArchive
0category_level3_label_separator_stroke_undefined
&category_level4_label_separator_stroke
.TSDSOS.SpecStrokeArchive
0category_level4_label_separator_stroke_undefined
&category_level5_label_separator_stroke
.TSDSOS.SpecStrokeArchive
0category_level5_label_separator_stroke_undefined
category_level1_bottom_stroke
.TSDSOS.SpecStrokeArchive
'category_level1_bottom_stroke_undefined
category_level2_bottom_stroke
.TSDSOS.SpecStrokeArchive
'category_level2_bottom_stroke_undefined
category_level3_bottom_stroke
.TSDSOS.SpecStrokeArchive
'category_level3_bottom_stroke_undefined
category_level4_bottom_stroke
.TSDSOS.SpecStrokeArchive
'category_level4_bottom_stroke_undefined
category_level5_bottom_stroke
.TSDSOS.SpecStrokeArchive
'category_level5_bottom_stroke_undefined
category_level1_interior_stroke
.TSDSOS.SpecStrokeArchive
)category_level1_interior_stroke_undefined
category_level2_interior_stroke
.TSDSOS.SpecStrokeArchive
)category_level2_interior_stroke_undefined
category_level3_interior_stroke
.TSDSOS.SpecStrokeArchive
)category_level3_interior_stroke_undefined
category_level4_interior_stroke
.TSDSOS.SpecStrokeArchive
)category_level4_interior_stroke_undefined
category_level5_interior_stroke
.TSDSOS.SpecStrokeArchive
)category_level5_interior_stroke_undefined
"body_pivot_group_horizontal_stroke
.TSDSOS.SpecStrokeArchive
,body_pivot_group_horizontal_stroke_undefined
 body_pivot_group_vertical_stroke
.TSDSOS.SpecStrokeArchive
*body_pivot_group_vertical_stroke_undefined
(body_pivot_de_emphasis_horizontal_stroke
.TSDSOS.SpecStrokeArchive
2body_pivot_de_emphasis_horizontal_stroke_undefined
#body_pivot_emphasis_vertical_stroke
.TSDSOS.SpecStrokeArchive
-body_pivot_emphasis_vertical_stroke_undefined
+header_column_pivot_group_horizontal_stroke
.TSDSOS.SpecStrokeArchive
5header_column_pivot_group_horizontal_stroke_undefined
,header_column_pivot_group_de_emphasis_stroke
.TSDSOS.SpecStrokeArchive
6header_column_pivot_group_de_emphasis_stroke_undefined
$header_column_pivot_separator_stroke
.TSDSOS.SpecStrokeArchive
.header_column_pivot_separator_stroke_undefined
&header_row_pivot_group_vertical_stroke
.TSDSOS.SpecStrokeArchive
0header_row_pivot_group_vertical_stroke_undefined
)header_row_pivot_group_de_emphasis_stroke
.TSDSOS.SpecStrokeArchive
3header_row_pivot_group_de_emphasis_stroke_undefined
header_row_pivot_title_stroke
.TSDSOS.SpecStrokeArchive
'header_row_pivot_title_stroke_undefined
&footer_row_pivot_group_vertical_stroke
.TSDSOS.SpecStrokeArchive
0footer_row_pivot_group_vertical_stroke_undefined
N6TSTSOS35SpecSetTableStrokePresetListArchiveE
N6TSTSOS32SpecTableStrokePresetListArchiveE
N6TSTSOS38TableCellStylePropertyChangeSetArchiveE
N6TSTSOS34TableStylePropertyChangeSetArchiveE
31TSCEASTIsSingleNodeTypeRewriter
16TSCEFunction_ABS
20TSCEFunction_ACCRINT
22TSCEFinancialFunctions
21TSCEFunction_ACCRINTM
17TSCEFunction_ACOS
18TSCEFunction_ACOSH
20TSCEFunction_ADDRESS
16TSCEFunction_AND
18TSCEFunction_AREAS
17TSCEFunction_ASIN
18TSCEFunction_ASINH
17TSCEFunction_ATAN
18TSCEFunction_ATAN2
18TSCEFunction_ATANH
19TSCEFunction_AVEDEV
20TSCEFunction_AVERAGE
21TSCEFunction_AVERAGEA
22TSCEFunction_AVERAGEIF
23TSCEFunction_AVERAGEIFS
22TSCEFunction_BASETONUM
20TSCEFunction_BESSELJ
20TSCEFunction_BESSELY
21TSCEFunction_BETADIST
20TSCEFunction_BETAINV
20TSCEFunction_BIN2DEC
20TSCEFunction_BIN2HEX
20TSCEFunction_BIN2OCT
22TSCEFunction_BINOMDIST
19TSCEFunction_BITAND
22TSCEFunction_BITLSHIFT
22TSCEFunction_BITRSHIFT
18TSCEFunction_BITOR
19TSCEFunction_BITXOR
25TSCEFunction_BONDDURATION
26TSCEFunction_BONDMDURATION
20TSCEFunction_CEILING
17TSCEFunction_CHAR
20TSCEFunction_CHIDIST
19TSCEFunction_CHIINV
20TSCEFunction_CHITEST
19TSCEFunction_CHOOSE
18TSCEFunction_CLEAN
17TSCEFunction_CODE
19TSCEFunction_COLUMN
20TSCEFunction_COLUMNS
19TSCEFunction_COMBIN
19TSCEFunction_CONCAT
24TSCEFunction_CONCATENATE
23TSCEFunction_CONFIDENCE
25TSCEFunction_CONFIDENCE_T
20TSCEFunction_CONVERT
19TSCEFunction_CORREL
16TSCEFunction_COS
17TSCEFunction_COSH
18TSCEFunction_COUNT
19TSCEFunction_COUNTA
23TSCEFunction_COUNTBLANK
20TSCEFunction_COUNTIF
21TSCEFunction_COUNTIFS
25TSCEFunction_COUNTMATCHES
22TSCEFunction_COUPDAYBS
21TSCEFunction_COUPDAYS
23TSCEFunction_COUPDAYSNC
20TSCEFunction_COUPNUM
18TSCEFunction_COVAR
25TSCEFunction_COVARIANCE_S
22TSCEFunction_CRITBINOM
20TSCEFunction_CUMIPMT
21TSCEFunction_CUMPRINC
17TSCEFunction_DATE
20TSCEFunction_DATEDIF
22TSCEFunction_DATEVALUE
16TSCEFunction_DAY
20TSCEFunction_DAYNAME
20TSCEFunction_DAYS360
15TSCEFunction_DB
16TSCEFunction_DDB
20TSCEFunction_DEC2BIN
20TSCEFunction_DEC2HEX
20TSCEFunction_DEC2OCT
20TSCEFunction_DEGREES
18TSCEFunction_DELTA
18TSCEFunction_DEVSQ
17TSCEFunction_DISC
19TSCEFunction_DOLLAR
21TSCEFunction_DUR2DAYS
22TSCEFunction_DUR2HOURS
29TSCEFunction_DUR2MILLISECONDS
24TSCEFunction_DUR2MINUTES
24TSCEFunction_DUR2SECONDS
22TSCEFunction_DUR2WEEKS
21TSCEFunction_DURATION
18TSCEFunction_EDATE
19TSCEFunction_EFFECT
20TSCEFunction_EOMONTH
16TSCEFunction_ERF
17TSCEFunction_ERFC
17TSCEFunction_EVEN
18TSCEFunction_EXACT
16TSCEFunction_EXP
22TSCEFunction_EXPONDIST
17TSCEFunction_FACT
23TSCEFunction_FACTDOUBLE
18TSCEFunction_FALSE
18TSCEFunction_FDIST
17TSCEFunction_FIND
33TSCEFunction_FIND_CASEINSENSITIVE
17TSCEFunction_FINV
18TSCEFunction_FIXED
18TSCEFunction_FLOOR
21TSCEFunction_FORECAST
19TSCELineFitFunction
24TSCEFunction_FORMULATEXT
22TSCEFunction_FREQUENCY
15TSCEFunction_FV
21TSCEFunction_CURRENCY
25TSCEFunction_CURRENCYCODE
28TSCEFunction_CURRENCYCONVERT
22TSCEFunction_CURRENCYH
22TSCEFunction_GAMMADIST
21TSCEFunction_GAMMAINV
20TSCEFunction_GAMMALN
16TSCEFunction_GCD
20TSCEFunction_GEOMEAN
19TSCEFunction_GESTEP
25TSCEFunction_GETPIVOTDATA
20TSCEFunction_HARMEAN
20TSCEFunction_HEX2BIN
20TSCEFunction_HEX2DEC
20TSCEFunction_HEX2OCT
20TSCEFunction_HLOOKUP
17TSCEFunction_HOUR
22TSCEFunction_HYPERLINK
15TSCEFunction_IF
20TSCEFunction_IFERROR
16TSCEFunction_IFS
18TSCEFunction_INDEX
21TSCEFunction_INDIRECT
16TSCEFunction_INT
22TSCEFunction_INTERCEPT
29TSCEFunction_INTERSECT_RANGES
20TSCEFunction_INTRATE
17TSCEFunction_IPMT
16TSCEFunction_IRR
20TSCEFunction_ISBLANK
19TSCEFunction_ISDATE
20TSCEFunction_ISERROR
19TSCEFunction_ISEVEN
21TSCEFunction_ISNUMBER
18TSCEFunction_ISODD
23TSCEFunction_ISOWEEKNUM
18TSCEFunction_ISPMT
19TSCEFunction_ISTEXT
18TSCEFunction_LARGE
16TSCEFunction_LCM
17TSCEFunction_LEFT
16TSCEFunction_LEN
19TSCEFunction_LINEST
15TSCEFunction_LN
16TSCEFunction_LOG
18TSCEFunction_LOG10
19TSCEFunction_LOGINV
24TSCEFunction_LOGNORMDIST
19TSCEFunction_LOOKUP
18TSCEFunction_LOWER
18TSCEFunction_MATCH
16TSCEFunction_MAX
17TSCEFunction_MAXA
19TSCEFunction_MAXIFS
16TSCEFunction_MID
16TSCEFunction_MIN
17TSCEFunction_MINA
19TSCEFunction_MINIFS
19TSCEFunction_MINUTE
17TSCEFunction_MIRR
16TSCEFunction_MOD
17TSCEFunction_MODE
22TSCEFunction_MODE_MULT
18TSCEFunction_MONTH
22TSCEFunction_MONTHNAME
19TSCEFunction_MROUND
24TSCEFunction_MULTINOMIAL
25TSCEFunction_NEGBINOMDIST
24TSCEFunction_NETWORKDAYS
20TSCEFunction_NOMINAL
21TSCEFunction_NORMDIST
20TSCEFunction_NORMINV
22TSCEFunction_NORMSDIST
21TSCEFunction_NORMSINV
16TSCEFunction_NOT
16TSCEFunction_NOW
17TSCEFunction_NPER
16TSCEFunction_NPV
22TSCEFunction_NUMTOBASE
20TSCEFunction_OCT2BIN
20TSCEFunction_OCT2DEC
20TSCEFunction_OCT2HEX
16TSCEFunction_ODD
19TSCEFunction_OFFSET
15TSCEFunction_OR
23TSCEFunction_PERCENTILE
27TSCEFunction_PERCENTILE_EXC
24TSCEFunction_PERCENTRANK
28TSCEFunction_PERCENTRANK_EXC
19TSCEFunction_PERMUT
15TSCEFunction_PI
22TSCEFunction_PLAINTEXT
16TSCEFunction_PMT
20TSCEFunction_POISSON
23TSCEFunction_POLYNOMIAL
18TSCEFunction_POWER
17TSCEFunction_PPMT
18TSCEFunction_PRICE
22TSCEFunction_PRICEDISC
21TSCEFunction_PRICEMAT
17TSCEFunction_PROB
20TSCEFunction_PRODUCT
19TSCEFunction_PROPER
15TSCEFunction_PV
21TSCEFunction_QUARTILE
25TSCEFunction_QUARTILE_EXC
21TSCEFunction_QUOTIENT
20TSCEFunction_RADIANS
17TSCEFunction_RAND
24TSCEFunction_RANDBETWEEN
17TSCEFunction_RANK
21TSCEFunction_RANK_AVG
17TSCEFunction_RATE
21TSCEFunction_RECEIVED
27TSCEFunction_REFERENCE_NAME
18TSCEFunction_REGEX
26TSCEFunction_REGEX_EXTRACT
20TSCEFunction_REPLACE
17TSCEFunction_REPT
18TSCEFunction_RIGHT
18TSCEFunction_ROMAN
18TSCEFunction_ROUND
22TSCEFunction_ROUNDDOWN
20TSCEFunction_ROUNDUP
16TSCEFunction_ROW
17TSCEFunction_ROWS
19TSCEFunction_SEARCH
19TSCEFunction_SECOND
22TSCEFunction_SERIESSUM
17TSCEFunction_SIGN
16TSCEFunction_SIN
17TSCEFunction_SINH
16TSCEFunction_SLN
18TSCEFunction_SLOPE
18TSCEFunction_SMALL
17TSCEFunction_SQRT
19TSCEFunction_SQRTPI
24TSCEFunction_STANDARDIZE
18TSCEFunction_STDEV
19TSCEFunction_STDEVA
19TSCEFunction_STDEVP
20TSCEFunction_STDEVPA
18TSCEFunction_STOCK
19TSCEFunction_STOCKH
26TSCEFunction_STRIPDURATION
23TSCEFunction_SUBSTITUTE
21TSCEFunction_SUBTOTAL
16TSCEFunction_SUM
18TSCEFunction_SUMIF
19TSCEFunction_SUMIFS
23TSCEFunction_SUMPRODUCT
18TSCEFunction_SUMSQ
21TSCEFunction_SUMX2MY2
21TSCEFunction_SUMX2PY2
20TSCEFunction_SUMXMY2
19TSCEFunction_SWITCH
16TSCEFunction_SYD
14TSCEFunction_T
16TSCEFunction_TAN
17TSCEFunction_TANH
18TSCEFunction_TDIST
22TSCEFunction_TEXTAFTER
23TSCEFunction_TEXTBEFORE
24TSCEFunction_TEXTBETWEEN
21TSCEFunction_TEXTJOIN
17TSCEFunction_TIME
22TSCEFunction_TIMEVALUE
17TSCEFunction_TINV
18TSCEFunction_TODAY
22TSCEFunction_TRANSPOSE
17TSCEFunction_TRIM
17TSCEFunction_TRUE
18TSCEFunction_TRUNC
18TSCEFunction_TTEST
25TSCEFunction_UNION_RANGES
18TSCEFunction_UPPER
18TSCEFunction_VALUE
16TSCEFunction_VAR
17TSCEFunction_VARA
17TSCEFunction_VARP
18TSCEFunction_VARPA
16TSCEFunction_VDB
20TSCEFunction_VLOOKUP
20TSCEFunction_WEEKDAY
20TSCEFunction_WEEKNUM
20TSCEFunction_WEIBULL
20TSCEFunction_WORKDAY
17TSCEFunction_XIRR
20TSCEFunction_XLOOKUP
19TSCEFunction_XMATCH
17TSCEFunction_XNPV
17TSCEFunction_YEAR
21TSCEFunction_YEARFRAC
18TSCEFunction_YIELD
22TSCEFunction_YIELDDISC
21TSCEFunction_YIELDMAT
18TSCEFunction_ZTEST
20TSCEFunction___CHART
28TSCEFunction___CELLVALUETYPE
30TSCEFunction___INTERACTIONTYPE
!,7DOe
!.;mz
(7FUds
!0?Q
(7FUds
$+:GOan
&-4<N]
#2DS
(7>FS
&8J\n
&3@MZ
!.=L^p
+8GYhz
(:IVew
!.;HWfu
#2?N[t
'6hz
TSTArchives.proto
TSPMessages.proto
TSDArchives.proto
TSKArchives.proto
TSSArchives.proto
TSCEArchives.proto
TSWPArchives.proto
TSTStylePropertyArchiving.proto"Q
CellID
packedData
expanded_coord
.TSCE.CellCoordinateArchive"
CellUIDLookupListArchive
column_uids
.TSCE.UidLookupListArchive
row_uids
.TSCE.UidLookupListArchive
column_indexes
row_indexes
CellUIDListArchive
row_uids
.TSP.UUID
column_uids
.TSP.UUID
compressed_row_indexes
compressed_column_indexes
uncompressed_lookup_list
.TST.CellUIDLookupListArchive"F
TableSize
packedData
num_columns
num_rows
ExpandedTableSize
num_columns
num_rows
CellRange
origin
.TST.CellID
size
.TST.TableSize"f
ExpandedCellRange
origin
.TSCE.CellCoordinateArchive
size
.TST.ExpandedTableSize"
TableSelection
cellRange
.TST.CellRange
extendedCellRange
.TST.CellRange
extendedCellRangeValid
selection_type
.TST.SelectionTypeArchive"
TileRowInfo
tile_row_index
cell_count
cell_storage_buffer_pre_bnc
cell_offsets_pre_bnc
storage_version
cell_storage_buffer
cell_offsets
has_wide_offsets
Tile
maxColumn
maxRow
numCells
numrows
rowInfos
.TST.TileRowInfo
storage_version
last_saved_in_BNC
should_use_wide_rows
TileStorage
tiles
.TST.TileStorage.Tile
tile_size
should_use_wide_rows
Tile
tileid
tile
.TSP.Reference"
PopUpMenuModel
item
.TST.PopUpMenuModel.CellValueB
tsce_item
.TSCE.CellValueArchive
CellValue
cell_value_type
2!.TST.PopUpMenuModel.CellValueType
boolean_value
.TSCE.BooleanCellValueArchive
date_value
.TSCE.DateCellValueArchive
number_value
.TSCE.NumberCellValueArchive
string_value
.TSCE.StringCellValueArchive"`
CellValueType
NIL_TYPE
BOOLEAN_TYPE
DATE_TYPE
NUMBER_TYPE
STRING_TYPE
ImportWarningSetArchive
formula_import_warning
21.TST.ImportWarningSetArchive.FormulaImportWarning
cond_format_above_avg_equal_avg
false
cond_format_above_avg_std_dev
false
cond_format_complex_formula
false
cond_format_contains_errors
false
cond_format_expr
false
cond_format_not_contains_errors
false
(cond_format_parameters_not_all_same_type
false
cond_format_stop_if_true
false
 cond_format_unsupported_operator
false
cond_format_unsupported_styling
false
#cond_format_unsupported_time_period
false
error_cell_with_no_formula
false
unsupported_cond_format
false
original_data_format
2formula_warning_filtered_column_formula_not_copied
false
duration_format_range_changed
false
FormulaImportWarning
formula_warning_type
2/.TST.ImportWarningSetArchive.FormulaWarningType
original_formula
supplementary_text
formula_warning_type_int
FormulaWarningType
THREE_D_REFERENCE
ARRAYED_FORMULA
DIFFERENT_BEHAVIOR_FOR_FUNCTION
ERROR_TOKEN
EXTERNAL_REFERENCE
NATURAL_LANGUAGE_FORMULA
REFERENCE_OUT_OF_BOUNDS
SHARED_FORMULA_BASE_NOT_FOUND
UNKNOWN_NAME
UNSUPPORTED_FORMULA
UNSUPPORTED_FUNCTION
UNSUPPORTED_NAME
TRANSPOSED_NO_ISSUES
TRANSPOSED_WITH_ISSUES
 TRANSPOSED_WITH_ISSUES_UNCHANGED
"CellRefImportWarningSetPairArchive
cell_ref
.TSCE.CellReferenceArchive
warning_set
.TST.ImportWarningSetArchive"m
 ImportWarningSetByCellRefArchive
cellref_warning_set_pair
2'.TST.CellRefImportWarningSetPairArchive"
TableDataList
listType
.TST.TableDataList.ListType
nextListID
entries
.TST.TableDataList.ListEntry
segments
.TSP.Reference
is_new_for_bnc
ListEntry
refcount
string
reference
.TSP.Reference
formula
.TSCE.FormulaArchive
format
.TSK.FormatStructArchive
custom_format
.TSK.CustomFormatArchive
rich_text_payload
.TSP.Reference
comment_storage
.TSP.Reference
import_warning_set
.TST.ImportWarningSetArchive
cell_spec
.TST.CellSpecArchive"
ListType
STRING
FORMAT
FORMULA
STYLE
FORMULA_ERROR
CUSTOM_FORMAT
MULTIPLE_CHOICE_LIST_FORMAT
RICH_TEXT_PAYLOAD
CONDITIONAL_STYLE
COMMENT_STORAGE
IMPORT_WARNING
CONTROL_CELL_SPEC
TableDataListSegment
list_type
.TST.TableDataList.ListType
key_range
.TSP.Range
entries
.TST.TableDataList.ListEntry"W
TableRBTree
nodes
.TST.TableRBTree.Node
Node
value
HeaderStorageBucket
bucketHashFunction
headers
.TST.HeaderStorageBucket.Header
Header
index
size
hidingState
numberOfCells
cell_style
.TSP.Reference
text_style
.TSP.Reference"L
HeaderStorage
bucketHashFunction
buckets
.TSP.Reference"
DataStore
rowHeaders
.TST.HeaderStorage
columnHeaders
.TSP.Reference
tiles
.TST.TileStorage
stringTable
.TSP.Reference
styleTable
.TSP.Reference
formula_table
.TSP.Reference
formulaErrorTable
.TSP.Reference
format_table_pre_bnc
.TSP.Reference
multipleChoiceListFormatTable
.TSP.Reference
merge_region_map
.TSP.Reference
deprecated_custom_format_table
.TSP.Reference
nextRowStripID
nextColumnStripID
rowTileTree
.TST.TableRBTree
columnTileTree
.TST.TableRBTree
storage_version_pre_bnc
rich_text_table
.TSP.Reference
conditionalstyletable
.TSP.Reference
commentStorageTable
.TSP.Reference
importWarningSetTable
.TSP.Reference
control_cell_spec_table
.TSP.Reference
format_table
.TSP.Reference"
TableInfoArchive
super
.TSD.DrawableArchive
tableModel
.TSP.Reference
editing_state
.TSP.ReferenceB
summary_model
.TSP.Reference
category_order
.TSP.Reference
view_column_row_uids
.TSP.Reference
group_by_uuid
.TSP.UUID
hidden_states_uuid
.TSP.UUID
formula_coord_space_in_pre40
formula_coord_space
pasteboard_coord_mapper
.TSCE.CoordMapperArchive
layout_engine
.TST.LayoutEngineArchive
pivot_data_model
.TSP.Reference
is_a_pivot_table
pivot_order
.TSP.Reference"^
CategoryInfoArchive
super
.TSD.DrawableArchive
tableModel
.TSP.Reference"[
WPTableInfoArchive
super
.TST.TableInfoArchive
storage
.TSP.Reference"
TableStyleNetworkArchive
body_text_style
.TSP.Reference
header_row_text_style
.TSP.Reference
header_column_text_style
.TSP.Reference
footer_row_text_style
.TSP.Reference
body_cell_style
.TSP.Reference
header_row_style
.TSP.Reference
header_column_style
.TSP.Reference
footer_row_style
.TSP.Reference
table_style
.TSP.Reference
table_name_style
.TSP.Reference
table_name_shape_style
.TSP.Reference
preset_id
category_level_1_text_style
.TSP.Reference
category_level_2_text_style
.TSP.Reference
category_level_3_text_style
.TSP.Reference
category_level_4_text_style
.TSP.Reference
category_level_5_text_style
.TSP.Reference
category_level_1_style
.TSP.Reference
category_level_2_style
.TSP.Reference
category_level_3_style
.TSP.Reference
category_level_4_style
.TSP.Reference
category_level_5_style
.TSP.Reference
label_level_1_text_style
.TSP.Reference
label_level_2_text_style
.TSP.Reference
label_level_3_text_style
.TSP.Reference
label_level_4_text_style
.TSP.Reference
label_level_5_text_style
.TSP.Reference
label_level_1_style
.TSP.Reference
label_level_2_style
.TSP.Reference
label_level_3_style
.TSP.Reference
label_level_4_style
.TSP.Reference
label_level_5_style
.TSP.Reference
pivot_body_summary_row_style
.TSP.Reference
pivot_body_summary_column_style
.TSP.Reference
!pivot_header_column_summary_style
.TSP.Reference"
TableGroupSortOrderUIDArchive
group_sort_rules
2:.TST.TableGroupSortOrderUIDArchive.GroupSortRuleUIDArchive
GroupSortRuleUIDArchive
grouping_column_uid
.TSP.UUID
column_uid
.TSP.UUID
direction
2D.TST.TableGroupSortOrderUIDArchive.GroupSortRuleUIDArchive.Direction"*
Direction
ascending
descending
TableSortOrderArchive
type
2#.TST.TableSortOrderArchive.SortType
rules
2*.TST.TableSortOrderArchive.SortRuleArchive
SortRuleArchive
index
direction
24.TST.TableSortOrderArchive.SortRuleArchive.Direction"*
Direction
ascending
descending
SortType
entire_table
row_range
TableSortOrderUIDArchive
type
2&.TST.TableSortOrderUIDArchive.SortType
rules
2-.TST.TableSortOrderUIDArchive.SortRuleArchive
SortRuleArchive
column_uid
.TSP.UUID
direction
27.TST.TableSortOrderUIDArchive.SortRuleArchive.Direction"*
Direction
ascending
descending
SortType
entire_table
row_range
SortRuleReferenceTrackerArchive
reference_tracker
.TSP.Reference"1
CellRegion
cell_ranges
.TST.CellRange"E
CellUIDRegionArchive
cell_uid_ranges
.TSP.UUIDRectArchive"
StructuredTextImportRecord
import_settings
2!.TSK.StructuredTextImportSettings
import_source
import_date
source_data
source_encoding
confidence
imported_region
.TST.CellRegion
source_row_count
source_column_count
TableModelArchive
table_id
from_table_id
was_cut
table_style
.TSP.Reference
body_text_style
.TSP.Reference
header_row_text_style
.TSP.Reference
header_column_text_style
.TSP.Reference
footer_row_text_style
.TSP.Reference
body_cell_style
.TSP.Reference
header_row_style
.TSP.Reference
header_column_style
.TSP.Reference
footer_row_style
.TSP.Reference
table_name_style
.TSP.Reference
table_name_shape_style
.TSP.Reference
table_style_preset
.TSP.Reference
preset_index
base_data_store
.TST.DataStore
provider
.TSP.Reference
number_of_rows
number_of_columns
table_name
table_name_enabled
table_name_height
table_name_border_enabled
number_of_header_rows
number_of_header_columns
number_of_footer_rows
header_rows_frozen
header_columns_frozen
number_of_hidden_rows
number_of_hidden_columns
number_of_user_hidden_rows
number_of_user_hidden_columns
number_of_filtered_rows
default_row_height
default_column_width
origin_offset
.TST.CellIDB
repeating_header_rows_enabled
style_apply_clears_all
 repeating_header_columns_enabled
&hidden_state_formula_owner_for_columns
.TSP.Reference
#hidden_state_formula_owner_for_rows
.TSP.Reference
row_filter_set_pre_pivot
.TSP.Reference
"conditional_style_formula_owner_id
.TSP.CFUUIDArchive
sort_order
.TST.TableSortOrderArchive
sort_rule_reference_tracker
2$.TST.SortRuleReferenceTrackerArchive
base_column_row_uids
.TSP.Reference
merge_owner
.TST.MergeOwnerArchive
stroke_sidecar
.TSP.Reference
preset_needs_strong_ownership
text_import_record
.TST.StructuredTextImportRecord
category_level_1_style
.TSP.Reference
category_level_2_style
.TSP.Reference
category_level_3_style
.TSP.Reference
category_level_4_style
.TSP.Reference
category_level_5_style
.TSP.Reference
category_level_1_text_style
.TSP.Reference
category_level_2_text_style
.TSP.Reference
category_level_3_text_style
.TSP.Reference
category_level_4_text_style
.TSP.Reference
category_level_5_text_style
.TSP.Reference
hidden_states_owner
.TST.HiddenStatesOwnerArchive
label_level_1_style
.TSP.Reference
label_level_2_style
.TSP.Reference
label_level_3_style
.TSP.Reference
label_level_4_style
.TSP.Reference
label_level_5_style
.TSP.Reference
label_level_1_text_style
.TSP.Reference
label_level_2_text_style
.TSP.Reference
label_level_3_text_style
.TSP.Reference
label_level_4_text_style
.TSP.Reference
label_level_5_text_style
.TSP.Reference
category_owner_deprecated
.TST.CategoryOwnerArchive
pencil_annotation_owner
2!.TST.PencilAnnotationOwnerArchive
from_group_by_uid
haunted_owner
.TSCE.HauntedOwnerArchive
pivot_owner
.TSP.Reference
category_owner
.TSP.Reference
pivot_body_summary_row_style
.TSP.Reference
pivot_body_summary_column_style
.TSP.Reference
!pivot_header_column_summary_style
.TSP.Reference
pivot_value_types_by_col
pivot_date_grouping_columns
pivot_date_grouping_types
SummaryModelArchive
table_info
.TSP.Reference
data_store
.TST.DataStore
column_row_uids
.TSP.Reference
aggregate_formula_owner_uuid
.TSP.UUID
summary_cell_vendor
.TSP.Reference
category_column_width
summary_row_level_1_height
summary_row_level_2_height
summary_row_level_3_height
summary_row_level_4_height
summary_row_level_5_height
 summary_label_row_level_1_height
 summary_label_row_level_2_height
 summary_label_row_level_3_height
 summary_label_row_level_4_height
 summary_label_row_level_5_height
label_row_visibility_1
label_row_visibility_2
label_row_visibility_3
label_row_visibility_4
label_row_visibility_5
summary_row_height_list
label_row_height_list
label_row_visibility_list
group_sort_order
2".TST.TableGroupSortOrderUIDArchive"
%SummaryModelGroupByChangeStateArchive
cell_map
.TSP.Reference
summary_row_height_list
label_row_height_list
label_row_visibility_list
ColumnRowUIDMapArchive
sorted_column_uids
.TSP.UUID
column_index_for_uid
column_uid_for_index
sorted_row_uids
.TSP.UUID
row_index_for_uid
row_uid_for_index
StrokeLayerArchive
row_column_index
stroke_runs
2(.TST.StrokeLayerArchive.StrokeRunArchive
StrokeRunArchive
origin
length
stroke
.TSD.StrokeArchive
order
StrokeSidecarArchive
max_order
column_count
row_count
left_column_stroke_layers
.TSP.Reference
right_column_stroke_layers
.TSP.Reference
top_row_stroke_layers
.TSP.Reference
bottom_row_stroke_layers
.TSP.Reference"
DurationWrapperArchive"
Cell
valueType
.TST.CellValueType
cell_style
.TSP.Reference
text_style
.TSP.Reference
numberValue
stringValue
boolValue
current_format
.TSK.FormatStructArchive
formulaError
.TSP.Reference
number_format
.TSK.FormatStructArchive
currency_format
.TSK.FormatStructArchive
duration_format
.TSK.FormatStructArchive
date_format
.TSK.FormatStructArchive
custom_format
.TSK.FormatStructArchive
base_format
.TSK.FormatStructArchive
explicit_format_flags
richText
.TSP.Reference
conditional_style
.TSP.Reference
comment_storage
.TSP.Reference
conditional_style_applied_rule
import_warning_set
.TST.ImportWarningSetArchive
custom_format_object
.TSK.CustomFormatArchive
cell_border
.TST.CellBorderArchive
cell_spec
.TST.CellSpecArchive
cell_format_kind
text_format
.TSK.FormatStructArchive
boolean_format
.TSK.FormatStructArchive
decimal_value_low
decimal_value_high
MergeRegionMapArchive
cell_range
.TST.CellRange"
CellMapArchive
cell_tiles
.TSP.Reference
uid_based
expanded_cell_ids
.TSCE.CellCoordinateArchive
cell_uid_list
.TST.CellUIDListArchive
merge_uid_ranges
.TSP.UUIDRectArchive
unmerge_uid_ranges
.TSP.UUIDRectArchive
merge_actions
.TST.MergeOperationArchive
may_modify_formulas_in_cells
true
(may_modify_values_referenced_by_formulas
true"
CellListArchive
cells
2!.TST.CellListArchive.OptionalCell
trailing_empty_cell_count
OptionalCell
cell
.TST.Cell"
ConcurrentCellMapArchive
cell_lists
.TSP.Reference
uid_based
merge_actions
.TST.MergeOperationArchive
may_modify_formulas_in_cells
true
(may_modify_values_referenced_by_formulas
true
affects_cell_borders
true"
ConcurrentCellListArchive
cells
2+.TST.ConcurrentCellListArchive.OptionalCell
cell_uid_range
.TSP.UUIDRectArchive
cell_range
.TST.CellRange
OptionalCell
cell
.TST.Cell"
CellFormatAndValueArchive
valueType
.TST.CellValueType
numberValue
stringValue
boolValue
richTextStorage
.TSP.Reference
use_all_spare_formats
explicit_flags
cell_format_kind
number_format
.TSK.FormatStructArchive
currency_format
.TSK.FormatStructArchive
date_format
.TSK.FormatStructArchive
duration_format
.TSK.FormatStructArchive
text_format
.TSK.FormatStructArchive
boolean_format
.TSK.FormatStructArchive
formatted_value
formatted_rich_text_value
.TSP.Reference
apply_spare_format_only
spare_format_type
decimal_low
decimal_high
suppress_apply_value
CellSpecArchive
interaction_type
formula
.TSCE.FormulaArchive
range_control_min
range_control_max
range_control_inc
chooser_control_popup_model
.TSP.Reference
chooser_control_start_w_first
%category_summary_should_display_label
CommentStorageWrapperArchive
comment_storage
.TSP.Reference"
CellDiffArchive
property_map_to_set
.TSS.CommandPropertyMapArchive
property_map_to_reset
.TSS.CommandPropertyMapArchive"5
CellDiffArray
large_array
.TSP.LargeArray"s
CellDiffArraySegment
large_array_segment
.TSP.LargeArraySegment
elements
.TST.CellDiffArchive"
CellDiffMapArchive
uid_based
expanded_cell_ids
.TSCE.CellCoordinateArchive
cell_uids
.TST.CellUIDListArchive
cell_diff_array
.TSP.Reference"
HierarchicalCellDiffMapArchive
num_row_rules
num_column_rules
row_header_uids
.TSP.UUID
column_header_uids
.TSP.UUID
aggregate_rule_uids
.TSP.UUID
active_flattening_dimension
.TST.TableDimensionArchive
row_value_uids
.TSP.UUID
row_level_preorder
column_value_uids
.TSP.UUID
column_level_preorder
cell_diff_storage
2,.TST.HierarchicalCellDiffMapArchive.BoxedRow
row_sizes
column_sizes
BoxedRow
column_index_set
.TSP.IndexSet
cell_diff_list
.TST.CellDiffArchive"
DoubleStyleMapArchive
capacity
count
cell_map_entry
25.TST.DoubleStyleMapArchive.DoubleStyleMapEntryArchive
DoubleStyleMapEntryArchive
cell_id
.TST.CellID
old_style
.TSP.Reference
new_style
.TSP.Reference"
StyleTableMapArchive
capacity
count
map_entry
23.TST.StyleTableMapArchive.StyleTableMapEntryArchive
StyleTableMapEntryArchive
old_style
.TSP.Reference
new_style
.TSP.Reference"
SelectionArchive
tableModel
.TSP.ReferenceB
selection_type
.TST.SelectionTypeArchive
anchor_cell
.TST.CellID
cell_ranges
.TST.CellRange
base_ranges
.TST.CellRange
cursor_cell
.TST.CellID
table_info
.TSP.Reference
cell_uid_region
.TST.CellUIDRegionArchive
base_uid_region
.TST.CellUIDRegionArchive
anchor_cell_uid
.TSP.UUIDCoordArchive
cursor_cell_uid
.TSP.UUIDCoordArchive"
)DeathhawkRdar39989167CellSelectionArchive
table_info
.TSP.Reference
selection_type
.TST.SelectionTypeArchive
cell_uid_region
.TST.CellUIDRegionArchive
base_uid_region
.TST.CellUIDRegionArchive
anchor_cell_uid
.TSP.UUIDCoordArchive
cursor_cell_uid
.TSP.UUIDCoordArchive"&
StrokeSelectionArchive
mask
ControlCellSelectionArchive"
StockCellSelectionArchive"
TableNameSelectionArchive"p
AutofillSelectionArchive
source_cell_range
.TST.CellRange
target_cell_range
.TST.CellRange"f
FilterRulePrePivotArchive
predicate
2$.TST.FormulaPredicatePrePivotArchive
disabled
FilterRuleArchive
predicate
.TST.FormulaPredicateArchive"
TableStyleArchive
super
.TSS.StyleArchive
override_count
table_properties
2 .TST.TableStylePropertiesArchive"
CellStyleArchive
super
.TSS.StyleArchive
override_count
cell_properties
.TST.CellStylePropertiesArchive"
FormulaPredArgDataArchive
double_value
decimal_low
decimal_high
string_value
date_value
duration_timeinterval
duration_units
boolean_value
FormulaPredArgArchive
arg_type
arg_value
.TST.FormulaPredArgDataArchive
base_cell_ref
.TSCE.CellReferenceArchive
relative_cell_ref
.TSCE.RelativeCellRefArchive
category_ref
.TSCE.CategoryReferenceArchive
uid_tract_list
2).TSCE.ASTNodeArrayArchive.ASTUidTractList
host_cell_coord
.TSCE.CellCoordinateArchive
preserve_row
preserve_column
list_entries
.TST.FormulaPredArgDataArchive
view_tract_ref
.TSCE.ViewTractRefArchive"
FormulaPredicatePrePivotArchive
formula
.TSCE.FormulaArchive
predicate_type
qualifier1
qualifier2
param_index1
param_index2
param_index0
FormulaPredicateArchive
predicate_type
qualifier1
qualifier2
param_value0
.TST.FormulaPredArgArchive
param_value1
.TST.FormulaPredArgArchive
param_value2
.TST.FormulaPredArgArchive
formula
.TSCE.FormulaArchive
for_conditional_style
host_table_uid
.TSP.UUID
host_column_uid
.TSP.UUID
host_row_uid
.TSP.UUID"
ConditionalStyleSetArchive
ruleCount
rules_prepivot
2<.TST.ConditionalStyleSetArchive.ConditionalStyleRulePrePivot
rules
25.TST.ConditionalStyleSetArchive.ConditionalStyleRules
ConditionalStyleRulePrePivot
predicate
2$.TST.FormulaPredicatePrePivotArchive
cell_style
.TSP.Reference
text_style
.TSP.Reference
ConditionalStyleRule
predicate
.TST.FormulaPredicateArchive
cell_style
.TSP.Reference
text_style
.TSP.Reference
ConditionalStyleRules
rule
24.TST.ConditionalStyleSetArchive.ConditionalStyleRule"
FilterSetArchive
type
2#.TST.FilterSetArchive.FilterSetType:
FilterSetArchiveTypeAll
is_enabled
true
filter_rules_prepivot
.TST.FilterRulePrePivotArchive
 needs_formula_rewrite_for_import
false
filter_offsets
filter_enabled
filter_rules
.TST.FilterRuleArchive"I
FilterSetType
FilterSetArchiveTypeAll
FilterSetArchiveTypeAny
UniqueIndexArchive
column_uid
.TSP.UUID
unique_entries
2/.TST.UniqueIndexArchive.UniqueIndexEntryArchive
UniqueIndexEntryArchive
string_value
row_uids
.TSP.UUID"
HiddenStateExtentArchive
hidden_state_extent_uid
.TSP.UUID
base_hidden_states
2..TST.HiddenStateExtentArchive.RowOrColumnState
row_or_column_direction
22.TST.HiddenStateExtentArchive.RowOrColumnDirection
threshold_value
.TSCE.CellValueArchive
%needs_to_update_filter_set_for_import
false
collapsed_group_uids
.TSP.UUID
filter_set
.TSP.Reference
summary_pivot_hidden_indexes
.TSCE.IndexSetArchive
summary_filtered_indexes
.TSCE.IndexSetArchive
unique_indexes
.TST.UniqueIndexArchive
summary_hidden_states
2..TST.HiddenStateExtentArchive.RowOrColumnState
RowOrColumnState
row_or_column_uid
.TSP.UUID
user_hidden
filtered
pivot_hidden
RowOrColumnDirection
ColumnDirection
RowDirection
HiddenStatesArchive
hidden_states_uid
.TSP.UUID
column_hidden_state_extent
.TST.HiddenStateExtentArchive
row_hidden_state_extent
.TST.HiddenStateExtentArchive"i
HiddenStatesOwnerArchive
owner_uid
.TSP.UUID
hidden_states
.TST.HiddenStatesArchive"
ExpandCollapseStateArchive
uids_collapsed
.TSP.UUID
uids_expanded
.TSP.UUID
dimension
.TST.TableDimensionArchive"l
TokenAttachmentArchive
super
.TSWP.UIGraphicalAttachment
expressionNode
.TSP.Reference"8
FormulaArchive
expressionTree
.TSP.Reference"h
ExpressionNodeArchive
children
.TSP.Reference
first_index
last_index
BooleanNodeArchive
super
.TST.ExpressionNodeArchive
value
NumberNodeArchive
super
.TST.ExpressionNodeArchive
number
decimal_low
decimal_high
StringNodeArchive
super
.TST.ExpressionNodeArchive
value
IdentifierNodeArchive
super
.TST.ExpressionNodeArchive
identifier
symbol
ArrayNodeArchive
super
.TST.ExpressionNodeArchive
columns
rows
ListNodeArchive
super
.TST.ExpressionNodeArchive"V
OperatorNodeArchive
super
.TST.ExpressionNodeArchive
operatorChar
PostfixOperatorNodeArchive
super
.TST.OperatorNodeArchive"D
PrefixOperatorNodeArchive
super
.TST.OperatorNodeArchive"t
FunctionNodeArchive
super
.TST.ExpressionNodeArchive
functionIndex
invalidFunctionName
FunctionEndNodeArchive
super
.TST.ExpressionNodeArchive"[
DateNodeArchive
super
.TST.ExpressionNodeArchive
value
format
ReferenceNodeArchive
super
.TST.ExpressionNodeArchive
rangeReference
.TSCE.RangeReferenceArchive
preserve_flags
hostTableID
host_cell_ref
.TSCE.CellReferenceArchive
table_uid
.TSP.UUID
range_top_left
.TSP.UUIDCoordArchive
range_bottom_right
.TSP.UUIDCoordArchive
category_ref
.TSCE.CategoryReferenceArchive
uid_range_rect
.TSP.UUIDRectArchive"
DurationNodeArchive
super
.TST.ExpressionNodeArchive
timeinterval
smallest
largest
style
ArgumentPlaceholderNodeArchive
super
.TST.ExpressionNodeArchive
functionIndex
argumentIndex
mode
EmptyExpressionNodeArchive
super
.TST.ExpressionNodeArchive"
LetNodeArchive
super
.TST.ExpressionNodeArchive
whitespace_after_let
whitespace_after_identifier
whitespace_after_equals
whitespace_after_delimiter
InNodeArchive
super
.TST.ExpressionNodeArchive"d
VariableNodeArchive
super
.TST.ExpressionNodeArchive
identifier
symbol
LayoutHintArchive
isValid
cellRange
.TST.CellRange
hintID
.TST.CellID
maximumSize
.TSP.Size
partitionPosition
horizontal
effectiveSize
.TSP.Size
partitioningPass
 CompletionTokenAttachmentArchive
super
.TST.TokenAttachmentArchive
completionText
caretPosition
prefixStart
HiddenStateFormulaOwnerArchive
owner_id
.TSP.CFUUIDArchive
threshold_value
.TSCE.CellValueArchive
%needs_to_update_filter_set_for_import
false"
FormulaStoreArchive
next_formula_index
formulas
2).TST.FormulaStoreArchive.FormulaStorePair
FormulaStorePair
formula_index
formula
.TSCE.FormulaArchive"
MergeOperationArchive
merge_type
.TST.MergeActionArchive
merge_ranges
.TSP.UUIDRectArchive
merge_formulas
.TSCE.FormulaArchive
merge_formula_indexes
MergeOwnerArchive
owner_id
.TSP.CFUUIDArchive
formula_store
.TST.FormulaStoreArchive"p
PencilAnnotationArchive
table_info
.TSP.Reference
pencil_annotation_storage
.TSP.Reference"
PencilAnnotationOwnerArchive
owner_id
.TSP.CFUUIDArchive
formula_store
.TST.FormulaStoreArchive
annotations
.TSP.Reference"
AccumulatorArchive
bool_count
number_count
date_count
duration_count
string_count
min_value
.TSCE.CellValueArchive
max_value
.TSCE.CellValueArchive
number_total_value
.TSCE.CellValueArchive
first_date_seen
.TSCE.CellValueArchive
total_secs_since_ref_date
secs_to_add
bool_true_count
error_count
is_circular_ref
product_value
.TSCE.CellValueArchive
no_content_count
GroupColumnArchive
column_uid
.TSP.UUID
grouping_type
grouping_functor
.TSCE.FunctorArchive
grouping_column_uid
.TSP.UUID"G
GroupColumnListArchive
group_column
.TST.GroupColumnArchive"
ColumnAggregateArchive
column_uid
.TSP.UUID
level
agg_type
show_as_type
column_aggregate_uid
.TSP.UUID
running_total_group_column_uid
.TSP.UUID"M
ColumnAggregateListArchive
aggregates
.TST.ColumnAggregateArchive"
GroupByArchive
group_by_uid
.TSP.UUID
group_column
.TST.GroupColumnArchive
group_node_root
2$.TST.GroupByArchive.GroupNodeArchive
aggregator
2%.TST.GroupByArchive.AggregatorArchive
column_agg_type
.TST.ColumnAggregateArchive
is_enabled
 indirect_agg_type_change_formula
.TSCE.CellCoordinateArchive
grouping_columns_formula
.TSCE.CellCoordinateArchive
aggs_in_group_root_formula
.TSCE.CellCoordinateArchive
grouping_column_headers_formula
.TSCE.CellCoordinateArchive
column_order_changed_formula
.TSCE.CellCoordinateArchive
row_order_changed_formula
.TSCE.CellCoordinateArchive
)row_order_changed_ignoring_recalc_formula
.TSCE.CellCoordinateArchive
owner_index
row_uid_lookup
.TSCE.UidLookupListArchive
hidden_states_changed_formula
.TSCE.CellCoordinateArchive
aggregator_ref
.TSP.Reference
group_node_root_ref
.TSP.Reference
AggNodeArchive
formula_coord
.TSCE.CellCoordinateArchive
accum
.TST.AccumulatorArchive
child
2".TST.GroupByArchive.AggNodeArchive
AggregatorArchive
column_uid
.TSP.UUID
agg_node
2".TST.GroupByArchive.AggNodeArchive
GroupNodeArchive
group_uid
.TSP.UUID
child
2$.TST.GroupByArchive.GroupNodeArchive
row_uid
.TSP.UUID
agg_formula_coords
.TSCE.CellCoordinateArchive
format_manager
29.TST.GroupByArchive.GroupNodeArchive.FormatManagerArchive
group_cell_value
.TSCE.CellValueArchive
row_indexes
.TSCE.IndexSetArchive
row_lookup_uids
.TSCE.IndexSetArchive
child_ref
.TSP.Reference
FormatManagerArchive
cell_value
.TSCE.CellValueArchive
formats
.TSK.FormatStructArchive
row_sets
2G.TST.GroupByArchive.GroupNodeArchive.FormatManagerArchive.RowSetArchive
row_uid_lookup_sets
.TSCE.IndexSetArchive
RowSetArchive
row_uids
.TSP.UUID"[
CategoryOwnerArchive
owner_uid
.TSP.UUID
group_by
.TST.GroupByArchive";
CategoryOwnerRefArchive
group_by
.TSP.Reference"v
$PivotGroupingColumnOptionsMapArchive
uids
.TSP.UUID
flags
aggregate_rule_uids
.TSP.UUID"
PivotOwnerArchive
pivot_owner_uid
.TSP.UUID
grouping_columns_for_rows
.TST.GroupColumnListArchive
grouping_columns_for_columns
.TST.GroupColumnListArchive
aggregate_columns
.TST.ColumnAggregateListArchive
flattening_dimension
is_empty_pivot
source_table_uid
.TSP.UUID
refresh_timestamp
grpg_col_options_map
.TSP.Reference
hide_grand_total_rows
source_table_name
hide_grand_total_columns
formula_store
.TST.FormulaStoreArchive
refresh_uid
.TSP.UUID
row_column_rule_change_uid
.TSP.UUID
aggregate_rule_change_uid
.TSP.UUID"q
RichTextPayloadArchive
storage
.TSP.Reference
range
.TSP.Range
cellid
.TST.CellID"Q
#FormulaEqualsTokenAttachmentArchive
super
.TSWP.UIGraphicalAttachment"
CellFillStandIn
fill
.TSD.FillArchive
type_is_mixed
color_has_been_modified
color_is_mixed
first_color_has_been_modified
first_color_is_mixed
last_color_has_been_modified
last_color_is_mixed
gradient_type_has_been_modified
gradient_type_is_mixed
 gradient_angle_has_been_modified
gradient_angle_is_mixed
image_data_has_been_modified
image_data_is_mixed
tint_color_has_been_modified
tint_color_is_mixed
scale_has_been_modified
scale_is_mixed
technique_has_been_modified
technique_is_mixed
FormulaSelectionArchive
super
.TSWP.SelectionArchive
activeTokenCharIndex
CellBorderArchive
top_stroke
.TSD.StrokeArchive
top_stroke_order
right_stroke
.TSD.StrokeArchive
right_stroke_order
bottom_stroke
.TSD.StrokeArchive
bottom_stroke_order
left_stroke
.TSD.StrokeArchive
left_stroke_order
!DefaultCellStylesContainerArchive
table_style_network
.TSP.Reference
row_uids
.TSP.UUID
column_uids
.TSP.UUID
row_types
column_types
is_a_pivot_table
MultiTableRemapperArchive
mapping_purpose
2&.TST.MultiTableRemapperArchive.Purpose
should_steal_references
can_reuse_table_names
owner_uid_mapper
.TSCE.OwnerUIDMapperArchive
backing_tables_for_charts
.TSP.UUIDMapArchive
cross_document_paste
nested_inner_mapper
Purpose
DEFAULT
GROUPING
#PAGES_SECTION_DUPLICATION_NONCOLLAB
ChangePropagationMapWrapper
replacement_behavior
style_replace_prototypes
.TSP.Reference
style_replace_replacements
.TSP.Reference
style_modify_styles
.TSP.Reference
style_modify_old_prop_maps
.TSP.Reference
style_modify_new_prop_maps
.TSP.Reference
style_delete_prototypes
.TSP.Reference
style_delete_replacements
.TSP.Reference
table_preset_replace_prototype
.TSP.Reference
 table_preset_replace_replacement
.TSP.Reference
table_preset_delete_prototype
.TSP.Reference
table_preset_delete_replacement
.TSP.Reference"
SummaryCellVendorArchive
table_info
.TSP.Reference
entries
2..TST.SummaryCellVendorArchive.SummaryCellEntry
SummaryCellEntry
wildcardUID
.TSP.UUID
columnUID
.TSP.UUID
cell
.TST.Cell"[
CategoryOrderArchive
table_info
.TSP.Reference
uid_map
.TSP.Reference"4
PivotOrderArchive
uid_map
.TSP.Reference"
HeaderNameMgrTileArchive
first_fragment
last_fragment
name_frag_entries
21.TST.HeaderNameMgrTileArchive.NameFragmentArchive
NameFragmentArchive
name_fragment
name_precedent
.TSCE.CellCoordinateArchive
uses_of_name_fragment
.TSCE.UidCellRefSetArchive"
HeaderNameMgrArchive
owner_uid
.TSP.UUID
nrm_owner_uid
.TSP.UUID
per_tables
2).TST.HeaderNameMgrArchive.PerTableArchive
name_frag_tiles
.TSP.Reference
PerTableArchive
table_uid
.TSP.UUID
per_table_precedent
.TSCE.CellCoordinateArchive
is_deleted
header_row_uids
.TSP.UUID
header_column_uids
.TSP.UUID
update_header_row_uids
.TSP.UUID
update_header_column_uids
.TSP.UUID"K
WidthHeightCacheFittingEntry
fitting_index
fitting_size
WidthHeightCache
rows_fitting_entries
2!.TST.WidthHeightCacheFittingEntry
columns_count
LayoutEngineArchive
width_height_cache
.TST.WidthHeightCache"
*CollaboratorTableCursorSubselectionArchive
cell_uid_list
.TST.CellUIDListArchive
selection_type
.TST.SelectionTypeArchive
row_column_uid_list
.TSP.UUID2s
table_cursor_subselection
.TSK.CollaboratorCursorArchive
2/.TST.CollaboratorTableCursorSubselectionArchive*
CellType
genericCellType
spanCellType
numberCellType
textCellType
formulaCellType
dateCellType
boolCellType
durationCellType
formulaErrorCellType
automaticCellType
CellValueType
emptyCellValueType
numberCellValueType
stringCellValueType
providedCellValueType
dateCellValueType
boolCellValueType
durationCellValueType
errorCellValueType
richTextCellType
currencyCellValueType
TableDimensionArchive
dimensionNeither
dimensionRow
dimensionColumn
SelectionTypeArchive
deprecatedCellSelectionType
rowSelectionType
columnSelectionType
"deprecatedCellEditingSelectionType
 deprecatedTableNameSelectionType
deprecatedTableSelectionType
regionSelectionType
noSelectionType
FillDirectionArchive
kTSTFillDownArchive
kTSTFillUpArchive
kTSTFillRightArchive
kTSTFillLeftArchive
MergeActionArchive
mergeActionInsert
mergeActionRemove
mergeActionShrink
mergeActionGrow
HideShowActionArchive
hideShowActionHide
hideShowActionShow
import_warning_set
 .TSS.CommandPropertyEntryArchive
.TST.ImportWarningSetArchive:[
format_and_value
 .TSS.CommandPropertyEntryArchive
.TST.CellFormatAndValueArchive:N
cell_border
 .TSS.CommandPropertyEntryArchive
.TST.CellBorderArchive:]
comment_storage
 .TSS.CommandPropertyEntryArchive
2!.TST.CommentStorageWrapperArchive:J
cell_spec
 .TSS.CommandPropertyEntryArchive
.TST.CellSpecArchive
N3TST6CellIDE
N3TST24CellUIDLookupListArchiveE
N3TST18CellUIDListArchiveE
N3TST9TableSizeE
N3TST17ExpandedTableSizeE
N3TST9CellRangeE
N3TST17ExpandedCellRangeE
N3TST14TableSelectionE
N3TST11TileRowInfoE
N3TST4TileE
N3TST16TileStorage_TileE
N3TST11TileStorageE
N3TST24PopUpMenuModel_CellValueE
N3TST14PopUpMenuModelE
N3TST44ImportWarningSetArchive_FormulaImportWarningE
N3TST23ImportWarningSetArchiveE
N3TST34CellRefImportWarningSetPairArchiveE
N3TST32ImportWarningSetByCellRefArchiveE
N3TST23TableDataList_ListEntryE
N3TST13TableDataListE
N3TST20TableDataListSegmentE
N3TST16TableRBTree_NodeE
N3TST11TableRBTreeE
N3TST26HeaderStorageBucket_HeaderE
N3TST19HeaderStorageBucketE
N3TST13HeaderStorageE
N3TST9DataStoreE
N3TST16TableInfoArchiveE
N3TST19CategoryInfoArchiveE
N3TST18WPTableInfoArchiveE
N3TST24TableStyleNetworkArchiveE
N3TST53TableGroupSortOrderUIDArchive_GroupSortRuleUIDArchiveE
N3TST29TableGroupSortOrderUIDArchiveE
N3TST37TableSortOrderArchive_SortRuleArchiveE
N3TST21TableSortOrderArchiveE
N3TST40TableSortOrderUIDArchive_SortRuleArchiveE
N3TST24TableSortOrderUIDArchiveE
N3TST31SortRuleReferenceTrackerArchiveE
N3TST10CellRegionE
N3TST20CellUIDRegionArchiveE
N3TST26StructuredTextImportRecordE
N3TST17TableModelArchiveE
N3TST19SummaryModelArchiveE
N3TST37SummaryModelGroupByChangeStateArchiveE
N3TST22ColumnRowUIDMapArchiveE
N3TST35StrokeLayerArchive_StrokeRunArchiveE
N3TST18StrokeLayerArchiveE
N3TST20StrokeSidecarArchiveE
N3TST22DurationWrapperArchiveE
N3TST4CellE
N3TST21MergeRegionMapArchiveE
N3TST14CellMapArchiveE
N3TST28CellListArchive_OptionalCellE
N3TST15CellListArchiveE
N3TST24ConcurrentCellMapArchiveE
N3TST38ConcurrentCellListArchive_OptionalCellE
N3TST25ConcurrentCellListArchiveE
N3TST25CellFormatAndValueArchiveE
N3TST15CellSpecArchiveE
N3TST28CommentStorageWrapperArchiveE
N3TST15CellDiffArchiveE
N3TST13CellDiffArrayE
N3TST20CellDiffArraySegmentE
N3TST18CellDiffMapArchiveE
N3TST39HierarchicalCellDiffMapArchive_BoxedRowE
N3TST30HierarchicalCellDiffMapArchiveE
N3TST48DoubleStyleMapArchive_DoubleStyleMapEntryArchiveE
N3TST21DoubleStyleMapArchiveE
N3TST46StyleTableMapArchive_StyleTableMapEntryArchiveE
N3TST20StyleTableMapArchiveE
N3TST16SelectionArchiveE
N3TST41DeathhawkRdar39989167CellSelectionArchiveE
N3TST22StrokeSelectionArchiveE
N3TST27ControlCellSelectionArchiveE
N3TST25StockCellSelectionArchiveE
N3TST25TableNameSelectionArchiveE
N3TST24AutofillSelectionArchiveE
N3TST25FilterRulePrePivotArchiveE
N3TST17FilterRuleArchiveE
N3TST17TableStyleArchiveE
N3TST16CellStyleArchiveE
N3TST25FormulaPredArgDataArchiveE
N3TST21FormulaPredArgArchiveE
N3TST31FormulaPredicatePrePivotArchiveE
N3TST23FormulaPredicateArchiveE
N3TST55ConditionalStyleSetArchive_ConditionalStyleRulePrePivotE
N3TST47ConditionalStyleSetArchive_ConditionalStyleRuleE
N3TST48ConditionalStyleSetArchive_ConditionalStyleRulesE
N3TST26ConditionalStyleSetArchiveE
N3TST16FilterSetArchiveE
N3TST42UniqueIndexArchive_UniqueIndexEntryArchiveE
N3TST18UniqueIndexArchiveE
N3TST41HiddenStateExtentArchive_RowOrColumnStateE
N3TST24HiddenStateExtentArchiveE
N3TST19HiddenStatesArchiveE
N3TST24HiddenStatesOwnerArchiveE
N3TST26ExpandCollapseStateArchiveE
N3TST22TokenAttachmentArchiveE
N3TST14FormulaArchiveE
N3TST21ExpressionNodeArchiveE
N3TST18BooleanNodeArchiveE
N3TST17NumberNodeArchiveE
N3TST17StringNodeArchiveE
N3TST21IdentifierNodeArchiveE
N3TST16ArrayNodeArchiveE
N3TST15ListNodeArchiveE
N3TST19OperatorNodeArchiveE
N3TST26PostfixOperatorNodeArchiveE
N3TST25PrefixOperatorNodeArchiveE
N3TST19FunctionNodeArchiveE
N3TST22FunctionEndNodeArchiveE
N3TST15DateNodeArchiveE
N3TST20ReferenceNodeArchiveE
N3TST19DurationNodeArchiveE
N3TST30ArgumentPlaceholderNodeArchiveE
N3TST26EmptyExpressionNodeArchiveE
N3TST14LetNodeArchiveE
N3TST13InNodeArchiveE
N3TST19VariableNodeArchiveE
N3TST17LayoutHintArchiveE
N3TST32CompletionTokenAttachmentArchiveE
N3TST30HiddenStateFormulaOwnerArchiveE
N3TST36FormulaStoreArchive_FormulaStorePairE
N3TST19FormulaStoreArchiveE
N3TST21MergeOperationArchiveE
N3TST17MergeOwnerArchiveE
N3TST23PencilAnnotationArchiveE
N3TST28PencilAnnotationOwnerArchiveE
N3TST18AccumulatorArchiveE
N3TST18GroupColumnArchiveE
N3TST22GroupColumnListArchiveE
N3TST22ColumnAggregateArchiveE
N3TST26ColumnAggregateListArchiveE
N3TST29GroupByArchive_AggNodeArchiveE
N3TST32GroupByArchive_AggregatorArchiveE
N3TST66GroupByArchive_GroupNodeArchive_FormatManagerArchive_RowSetArchiveE
N3TST52GroupByArchive_GroupNodeArchive_FormatManagerArchiveE
N3TST31GroupByArchive_GroupNodeArchiveE
N3TST14GroupByArchiveE
N3TST20CategoryOwnerArchiveE
N3TST23CategoryOwnerRefArchiveE
N3TST36PivotGroupingColumnOptionsMapArchiveE
N3TST17PivotOwnerArchiveE
N3TST22RichTextPayloadArchiveE
N3TST35FormulaEqualsTokenAttachmentArchiveE
N3TST15CellFillStandInE
N3TST23FormulaSelectionArchiveE
N3TST17CellBorderArchiveE
N3TST33DefaultCellStylesContainerArchiveE
N3TST25MultiTableRemapperArchiveE
N3TST27ChangePropagationMapWrapperE
N3TST41SummaryCellVendorArchive_SummaryCellEntryE
N3TST24SummaryCellVendorArchiveE
N3TST20CategoryOrderArchiveE
N3TST17PivotOrderArchiveE
N3TST44HeaderNameMgrTileArchive_NameFragmentArchiveE
N3TST24HeaderNameMgrTileArchiveE
N3TST36HeaderNameMgrArchive_PerTableArchiveE
N3TST20HeaderNameMgrArchiveE
N3TST28WidthHeightCacheFittingEntryE
N3TST16WidthHeightCacheE
N3TST19LayoutEngineArchiveE
N3TST42CollaboratorTableCursorSubselectionArchiveE
@0:
 0@R
d i4CN~
'/16TSCEReferenceSet
A7}!(#
?V1T!&G
AAAA
30TSCEASTRowColumnUidMapRewriter
44TSCEASTSearchForExcelTranslationNeedIterator
(7FUgt
TSTStylePropertyArchiving.proto
TSPMessages.proto
TSDArchives.proto
TSKArchives.proto
TSSArchives.proto
TSWPArchives.proto"
Deprecated_TableStrokeArchive
stroke
.TSD.StrokeArchive
background
opacity
empty
CellStylePropertiesArchive
cell_fill
.TSD.FillArchive
text_wrap
deprecated_top_stroke
2".TST.Deprecated_TableStrokeArchive
deprecated_right_stroke
2".TST.Deprecated_TableStrokeArchive
deprecated_bottom_stroke
2".TST.Deprecated_TableStrokeArchive
deprecated_left_stroke
2".TST.Deprecated_TableStrokeArchive
vertical_alignment
padding
.TSWP.PaddingArchive
top_stroke
.TSD.StrokeArchive
right_stroke
.TSD.StrokeArchive
bottom_stroke
.TSD.StrokeArchive
left_stroke
.TSD.StrokeArchive"
"Deprecated_StrokePresetDataArchive
deprecated_horizontal_stroke
2".TST.Deprecated_TableStrokeArchive
deprecated_vertical_stroke
2".TST.Deprecated_TableStrokeArchive
deprecated_exterior_stroke
2".TST.Deprecated_TableStrokeArchive
deprecated_visible_mask
StrokePresetDataArchive
horizontal_stroke
.TSD.StrokeArchive
vertical_stroke
.TSD.StrokeArchive
exterior_stroke
.TSD.StrokeArchive
visible_mask
StrokePresetListArchive
count
deprecated_preset
2'.TST.Deprecated_StrokePresetDataArchive
preset
.TST.StrokePresetDataArchive"
TableStylePropertiesArchive
banded_rows
banded_fill
.TSD.FillArchive
behaves_like_spreadsheet
auto_resize
&deprecated_header_row_separator_stroke
2".TST.Deprecated_TableStrokeArchive
#deprecated_header_row_border_stroke
2".TST.Deprecated_TableStrokeArchive
'deprecated_header_row_horizontal_stroke
2".TST.Deprecated_TableStrokeArchive
%deprecated_header_row_vertical_stroke
2".TST.Deprecated_TableStrokeArchive
&deprecated_header_column_border_stroke
2".TST.Deprecated_TableStrokeArchive
)deprecated_header_column_separator_stroke
2".TST.Deprecated_TableStrokeArchive
*deprecated_header_column_horizontal_stroke
2".TST.Deprecated_TableStrokeArchive
(deprecated_header_column_vertical_stroke
2".TST.Deprecated_TableStrokeArchive
&deprecated_footer_row_separator_stroke
2".TST.Deprecated_TableStrokeArchive
#deprecated_footer_row_border_stroke
2".TST.Deprecated_TableStrokeArchive
'deprecated_footer_row_horizontal_stroke
2".TST.Deprecated_TableStrokeArchive
%deprecated_footer_row_vertical_stroke
2".TST.Deprecated_TableStrokeArchive
.deprecated_table_body_horizontal_border_stroke
2".TST.Deprecated_TableStrokeArchive
,deprecated_table_body_vertical_border_stroke
2".TST.Deprecated_TableStrokeArchive
'deprecated_table_body_horizontal_stroke
2".TST.Deprecated_TableStrokeArchive
%deprecated_table_body_vertical_stroke
2".TST.Deprecated_TableStrokeArchive
stroke_preset_list
.TST.StrokePresetListArchive
v_strokes_visible
h_strokes_visible
hr_separator_visible
hc_separator_visible
footer_separator_visible
table_border_visible
table_header_border_visible
table_hc_divider_visible
table_hr_divider_visible
table_footer_divider_visible
OBSOLETE_master_font_size
master_font_family
writing_direction
.TSWP.WritingDirectionType
header_row_separator_stroke
.TSD.StrokeArchive
header_row_border_stroke
.TSD.StrokeArchive
header_row_horizontal_stroke
.TSD.StrokeArchive
header_row_vertical_stroke
.TSD.StrokeArchive
header_column_border_stroke
.TSD.StrokeArchive
header_column_separator_stroke
.TSD.StrokeArchive
header_column_horizontal_stroke
.TSD.StrokeArchive
header_column_vertical_stroke
.TSD.StrokeArchive
footer_row_separator_stroke
.TSD.StrokeArchive
footer_row_border_stroke
.TSD.StrokeArchive
footer_row_horizontal_stroke
.TSD.StrokeArchive
footer_row_vertical_stroke
.TSD.StrokeArchive
#table_body_horizontal_border_stroke
.TSD.StrokeArchive
!table_body_vertical_border_stroke
.TSD.StrokeArchive
table_body_horizontal_stroke
.TSD.StrokeArchive
table_body_vertical_stroke
.TSD.StrokeArchive
category_level1_top_stroke
.TSD.StrokeArchive
category_level2_top_stroke
.TSD.StrokeArchive
category_level3_top_stroke
.TSD.StrokeArchive
category_level4_top_stroke
.TSD.StrokeArchive
category_level5_top_stroke
.TSD.StrokeArchive
category_level1_bottom_stroke
.TSD.StrokeArchive
category_level2_bottom_stroke
.TSD.StrokeArchive
category_level3_bottom_stroke
.TSD.StrokeArchive
category_level4_bottom_stroke
.TSD.StrokeArchive
category_level5_bottom_stroke
.TSD.StrokeArchive
category_level1_interior_stroke
.TSD.StrokeArchive
category_level2_interior_stroke
.TSD.StrokeArchive
category_level3_interior_stroke
.TSD.StrokeArchive
category_level4_interior_stroke
.TSD.StrokeArchive
category_level5_interior_stroke
.TSD.StrokeArchive
&category_level1_label_separator_stroke
.TSD.StrokeArchive
&category_level2_label_separator_stroke
.TSD.StrokeArchive
&category_level3_label_separator_stroke
.TSD.StrokeArchive
&category_level4_label_separator_stroke
.TSD.StrokeArchive
&category_level5_label_separator_stroke
.TSD.StrokeArchive
(table_body_pivot_group_horizontal_stroke
.TSD.StrokeArchive
&table_body_pivot_group_vertical_stroke
.TSD.StrokeArchive
-table_body_pivot_deemphasis_horizontal_stroke
.TSD.StrokeArchive
)table_body_pivot_emphasis_vertical_stroke
.TSD.StrokeArchive
+header_column_pivot_group_horizontal_stroke
.TSD.StrokeArchive
+header_column_pivot_group_deemphasis_stroke
.TSD.StrokeArchive
$header_column_pivot_separator_stroke
.TSD.StrokeArchive
&header_row_pivot_group_vertical_stroke
.TSD.StrokeArchive
(header_row_pivot_group_deemphasis_stroke
.TSD.StrokeArchive
header_row_pivot_title_stroke
.TSD.StrokeArchive
&footer_row_pivot_group_vertical_stroke
.TSD.StrokeArchive"n
TableStylePresetArchive
index
image
.TSP.Reference
style_network
.TSP.Reference")
TableStrokePresetArchive
index
ThemePresetsArchive
table_style_presets
.TSP.Reference
table_cell_stroke_presets
.TSP.Reference2?
extension
.TSS.ThemeArchive
.TST.ThemePresetsArchive
N3TST29Deprecated_TableStrokeArchiveE
N3TST26CellStylePropertiesArchiveE
N3TST34Deprecated_StrokePresetDataArchiveE
N3TST23StrokePresetDataArchiveE
N3TST23StrokePresetListArchiveE
N3TST27TableStylePropertiesArchiveE
N3TST23TableStylePresetArchiveE
N3TST24TableStrokePresetArchiveE
N3TST19ThemePresetsArchiveE
!"#$%&'()*+,-./0123444456789:;<=>?@ABCDEFGHIJJJKLLLMNOOPQRSTUVWXYYZ[\\\\\\\\\\\\\\\\\\\]^_``````abcdefghijklmnopYYYYYYYYYYYYYYYY
-23
'67
?@
/ g 
"%"+"5"?"C"M"W"a"k"u"
#!#+#5#?#I#S#]#g#m#w#
$)$/$9$D$N$X$^$f$p$t$~$
%&%0%3%=%G%Q%Y%c%g%q%t%~%
&)&4&>&H&L&V&`&j&t&x&
'!'+'.'1';'E'O'Y'_'i's'{'
15TSTDefaultLexer
21TSTDefaultyyFlexLexer
9FlexLexer
 !"#$%&'()*+,-./
pSDA
xCuT
IAVW
?w@CR!"#$%&'()*+,-/0123
LH;<=>?I@
yz{|}~
UDJ@
XYZ[\]^_`abcdefg
hijk
456789:;<=>?
@456789:;<=>?
456789:;<=>?
AB:;<=>?C@DC
DDDDDDDDDDDDDDDDDD
()*46
DDDDDDDDDDDDDDDDBDDDD,DDD@
!&"%$'
DDDD
(+527
0318?:?D
012222222222222222222222222222333344444556667777777778899:;;<<==>>??
PNO 
'(23456789:>?????????????
????? !"#$%&'()*+-
2<=;<
3<?22???????????????????????
3>222222222222355>7>
6>????%??=<?22
??22
2%?2
2$?2
2#?2
2 ?2
2"?2
2!?2
2&?2
2(?2
2'?2
2*?2
2)?2
2+?2
?3%?2
?%?2
8,?7
!#%')+-/
!"#$%&'()*+,-./0123444456789:;<=>?@ABCDEFGHIJJJKLLLMNOOPQRSTUVWXYYZ[\\\\\\\\\\\\\\\\\\\]^_``````abcdefghijklmnopYYYYYYYYYYYYYYYY
r'r'o
r'r'r'
r'r'r'
r'r'r'r'`
r'r'r'r'
r'r'
r'r'
r'r'r'
" "*"."8"B"L"V"`"j"t"~"
# #*#4#>#H#R#X#b#l#p#z#
$$$/$9$C$I$Q$[$_$i$s$w$
%(%2%<%D%N%R%\%_%i%s%{%
&)&3&7&A&K&U&_&c&m&w&
'&'0':'D'J'T'^'f'
13TSTCommaLexer
#$%&'()*+,-./012334555556789:;<=>?@ABBCDDDEFEEEGHHHHIHHHHJKLMNONPPQRRRRRRRRRRRRRRRRRRRRSRTUUUUUUVWXYZZZZZZZZZZ[\PPPPPPPPPPPPPPPP
16TSCEDefaultLexer
22TSCEDefaultyyFlexLexer
 !"#$%&'(
0123456789:;<
FGHIJK
 !"#$%&
_fgh]^
hi]^fg}&v
#$%&
 !"#$%&!"#$%&PQRSTUVWXYZ[
%&fg
E'=F
)*+,-./|
@PQRSTUVWXYZ[\B]^_v`
 cdefgh
0123456789:;<>?{
wyxz=<'
AHANO
 9:;<GK6789:;<789:;<jklmnopqrstu
H~#BA
BBBBBBBB
$&'15:""BBB@?
%',>
BBBBBBBBBBBBB
BBB4B#!!BBBBBB8B
()*+23
9BBB(-/*.076
)*++++++++++++++++++++,,--./0112233444555556666678888999::;;;<==>>
!"+,.014578:;<>>
-/5689=>>>>>>>>
 !"#$%&1
++>>>>>>>>>>>>>>>>>22>>>>>>>++++++++++++
8:8:;<,0
89=89==;
>>>3
+ >+
+">+
+!>+
+$>+
+#>+
+%>+
$).38=BFJNPSVX[^aeilpsz
TSWPStorage *TSCERichTextStorage::wpStorage() const
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCERichTextStorage.mm
can't access TSWPStorage of non-rich rich text storage
TSCERichTextStorage TSCERichTextStorage::substringWithRange(const NSRange &) const
Couldn't convert string obtained from storage to UTF-8 - broke a composed character, perhaps?
v56@?0@"NSString"8{_NSRange=QQ}16{_NSRange=QQ}32^B48
@"NSString"16@?0@"NSString"8
-[TSWPStorage(TSTFormulaAdditions) i_copyIntoContext:stylesheet:paragraphStyle:listStyle:bakeModes:resettingHostTableToMatch:referenceColorHelper:disableMenus:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSWPStorage_FormulaAdditions.mm
Creating a copy of the storage resulted in a smaller storage.
-[TSWPStorage(TSTFormulaAdditions) i_copyIntoContext:stylesheet:paragraphStyle:listStyle:bakeModes:resettingHostTableToMatch:referenceColorHelper:disableMenus:]_block_invoke
Found an attachment that wasn't a TSTWPTokenAttachment
attachment character index out of bounds. Bailing.
Expected destination storage to have an attachment character at this index.
v8@?0
TSUDefaultCat
v40@?0@"TSTWPTokenAttachment"8Q16Q24^B32
-[TSWPStorage(TSTFormulaAdditions) p_rangeOfString:orNodeClass:range:]
Do not call method
%s: %s
-[TSWPStorage(TSTFormulaAdditions) p_stringWithFormulaAsTextFromRange:returningTokenValues:]
Attachment index mismatch
-[TSWPStorage(TSTFormulaAdditions) p_detokenizeTokenAtCharIndex:]
expected only token attachments within the detokenization range
-[TSWPStorage(TSTFormulaAdditions) p_replaceTokenAtCharIndex:withText:]
invalid nil value for '%{public}s'
token
text
-[TSTGroupNode computedGroupValueTuple]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTGroupNode.mm
Only the root groupNode should have no parentNode pointer
-[TSTGroupNode setupWithGroupCellValue:groupBy:atLevel:groupUid:children:]
Root node shouldn't have a cellValue
v24@?0q8^B16
-[TSTGroupNode loadFromArchive:unarchiver:forGroupBy:]
unarchiver
v32@?0{TSKUIDStruct=QQ}8^B24
v16@?0@"NSMutableArray"8
-[TSTGroupNode encodeToArchive:backwardCompatOptions:archiver:]
Only the root node has a nil groupCellValue?!
-[TSTGroupNode updateWithDocumentRoot:]
documentRoot
-[TSTGroupNode findGroupNodeForDisplayValuesFromSplitter:atLevel:startAtComponent:startAtWord:preserveFlags:]
Not supported for disconnected GroupNodes
boo_TRUE
boo_FALSE
str_%@
-[TSTGroupNode p_refreshGroupValue]
Unexpected new key:%{public}@, expected:%{public}@
-[TSTGroupNode updateGroupCellValueIfKeyMatches:]
canonicalKeyString shouldn't change here
-[TSTGroupNode insertRowUid:atRowIndex:forGroupValueTuple:atLevel:withLocale:createdGroupNodeCount:]
Pivot table groupBy's EXPECT to be provided with valid rowIndexes
Invalid rowUids should only be coming in for disconnected GroupNodes - normally, we should only add valid rows
-[TSTGroupNode removeRowUid:forGroupValueTuple:atLevel:withLocale:]
Pivot groupBys shouldn't need removeRowUid - we'll need to fix _pivotOnlyRowIndexes if they do
-[TSTGroupNode removeRowUids:]
Pivot groupBys shouldn't need removeRowUids - we'll need to fix _pivotOnlyRowIndexes if they do
+[TSTGroupNode needFormulasForAggregateType:]
Shouldn't be asking if TSCEAggType_Indirect needs formulas
Shouldn't be asking if TSCEAggType_INVALID needs formulas
-[TSTGroupNode rebuildFormulasForAggNode:]
v24@?0@"TSTGroupNode"8^B16
v24@?0r^{TSUIndexRange=qq}8^B16
-[TSTGroupNode containsAnyRowUidInRowUidSet:]
-[TSTGroupNode clearAllGroupNodes]
-[TSTGroupNode clearEmptyNodes]
+[TSTGroupNode localizedStringForCellValue:categoryLevel:groupBy:]
result
-[TSTGroupNode rawGroupValueCellValue]
-[TSTGroupNode groupValueCellValue]
-[TSTGroupNode groupValueCellValueForGroupBySet:aggIndex:appendAggregateName:]
Grand Total
TSTables
%@ %@
-[TSTGroupNode groupValueHierarchyForChart:]
-[TSTGroupNode groupValueHierarchyForChart:groupBySet:aggIndex:appendAggregateName:]
-[TSTGroupNode groupValueHierarchyStringWithDelimiterString:namingContext:]
-[TSTGroupNode firstVisibleNodeUsingColumnRowUIDMap:forDimension:leafLevel:pivotTableHiddenExtent:]
columnRowUIDMap
-[TSTGroupNode addAggNode:]
Aggregator needs to be setup already
vector
void TSTArgumentAtIndexLocator::setArgumentAt(NSInteger, TSTFormulaPredArg *__strong)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTArgumentAtIndexLocator.mm
Position %d not supported
virtual TSCEASTElement *TSTArgumentAtIndexLocator::linkedRefNode(TSCEASTLinkedRefElement *)
Never used - now deprecated TSCEASTLinkedRowRefNode
static void TSCERelativeCellCoordinate::assertColumnInMaxRange(TSURelativeColumnIndex)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCETypes.h
TSCERelativeCellCoordinate: column outside valid range: %d
static void TSCERelativeCellCoordinate::assertRowInMaxRange(TSURelativeRowIndex)
TSCERelativeCellCoordinate row outside valid range: %d
-[TSCEWarning copyByRemappingEntityIDs:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEWarning.mm
TSCE_PORT_ENABLE_REFERENCES: This is probably a bug.
-[TSCEWarning displayStringWithCalculationEngine:forTable:andCellID:]
empty cell warnings are not supported
The formula refers to %@, which contains a cell without a number.
TSCalculationEngine
The formula refers to %@, which contains cells without numbers.
The formula refers to cells without numbers.
The formula compares %@ to %@.
The link is invalid.
ISODD arguments must be integers.
ISEVEN arguments must be integers.
DATE day argument should be between 1 and 31.
DATE month argument should be between 1 and 12.
The formula uses a Boolean in place of a number.
The ranges given to SUMIF have different sizes.
Duration units were removed.
The units of all arguments were converted to match the units of the first argument.
%@%@%@
 (ignored) 
-[TSTCellSelection initWithTableInfo:selectionType:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellSelection.mm
expected inequality between %{public}s and %{public}s
selectionType
kNoSelection
-[TSTCellSelection initWithTableInfo:rowOrColumn:index:count:]
Invalid selection type used with rowOrColumn initializer.
-[TSTCellSelection logicalCellIDInTable:]
Cannot provide a logical cell ID for a selection that is not rectangular or does not represent a single cell or merge
v16@?0@"TSTTableInfo"8
v32@?0{TSUCellRect={TSUCellCoord=ISBB}{?=II}}8^B24
-[TSTCellSelection selectionByExtendingWithCellRange:inTable:selectionType:cursorCell:]
Can't extend a selection with an invalid cell range
-[TSTCellSelection selectionByAddingCellRange:inTable:withAnchor:cursor:selectionType:]
-[TSTCellSelection selectionByRemovingCellRange:inTable:withAnchor:cursor:selectionType:]
Can't remove an invalid cell range
<%@: %p type: %@ region: %@ base region: %@ anchor: %@ cursor: %@>
<%@: %p type: %@ anchor: %@ cursor: %@>
TSTSelectionType TSTArchivedToNativeSelectionType(const TST::SelectionTypeArchive)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTArchiveUtilities.h
shouldn't be converting from deprecated archived selection type %d
region
column
noSelection
<unknown>
-[TSTRefParser p_parseStringAsGeometricReferenceComponent:inResolver:outPreserveFlags:gettingReferencesMatchingInputAsPrefix:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTRefParser.mm
can't look for geometric references in no particular table
v24@?0r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}8^B16
%@%@ %@%@
%@%@
-[TSTRefParser parseAsChromeRefWithParsingContext:]
%@:%@
bug in reference parser - only ranges expected here
If there is only one range reference, it should match resultRangeRef.
-[TSTTableModel setStylesheetForUpgradeToSingleStylesheet:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableModel.mm
presets
v32@?0@8Q16^B24
Fatal Assertion failure: %{public}s %{public}s:%d Caller must provide preset or styles or both.
-[TSTTableModel initWithContext:tableUID:columnRowUIDMap:styles:stylePreset:tableInfo:]_block_invoke
Caller must provide preset or styles or both.
v12@?0{TSUModelRowIndex=I}8
v10@?0{TSUModelColumnIndex=S}8
TSTPencilCat
v40@?0@"TSTPencilAnnotation"8@"TSCEFormulaObject"16Q24^B32
@"TSCEFormulaObject"24@?0@"TSCEFormulaObject"8^{TSCEFormulaRewriteContext=@@{TSCEFormulaRewriteContextRecord={TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}{TSKUIDStruct=QQ}{TSUColumnRowOffset=ii}BBBBBBB}}16
v24@?0@"<TSTCellIteratorData>"8^B16
v48@?0I8@"TSDStroke"12{TSTSimpleRange=qQ}20i36^B40
v48@?0S8@"TSDStroke"12{TSTSimpleRange=qQ}20i36^B40
Fatal Assertion failure: %{public}s %{public}s:%d Problem making sourceBodyRef with range: %@
-[TSTTableModel initAsPivotDataWithContext:tableInfo:sourceModel:sourceBody:sourceHeader:]
Problem making sourceBodyRef with range: %@
calcEngine
expected nil value for '%{public}s'
_tableStylePreset
 as Pivot Source Table
@"TSSStyle"16@?0@"TSSStyle"8
@"TSTCellMap"24@?0{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}8
@32@?0@"<TSTCellIteratorData>"8@"TSTCellMap"16@24
v16@?0@"NSArray"8
v40@?0{TSUCellCoord=ISBB}8@"TSTCell"16Q24^B32
v32@?0^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}8{TSUCellCoord=ISBB}16^B24
-[TSTTableModel upgradeDuringDocumentUpgradeIfNeeded:]
A tableModel with no tableInfo is only allowed for a pivot data model.
hiddenStates
v24@?0Q8^B16
v24@?0@"TSKCustomFormatWrapper"8^B16
@32@?0@"<TSTCellIteratorData>"8@"TSTTableModelCellModificationHelper"16@24
@"TSTTableModelCellModificationHelper"24@?0{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}8
Expected to keep all the cells.
v16@?0@"TSTTableStyle"8
v16@?0@"TSTCellStyle"8
v16@?0@"TSWPParagraphStyle"8
v16@?0@"TSWPShapeStyle"8
v16@?0@"TSTTableStylePreset"8
v16@?0@"TSTHiddenStateFormulaOwner"8
v16@?0@"TSTTableFilterSet"8
v16@?0@"TSTCategoryOwner"8
v16@?0@"TSTPivotOwner"8
v16@?0@"TSWPStorage"8
v16@?0@"TSTColumnRowUIDMap"8
v16@?0@"TSTStrokeSidecar"8
-[TSTTableModel loadFromUnarchiver:]
Unequal date grouping columns and values. We can't make a map.
TSTPivotTables
Fatal Assertion failure: %{public}s %{public}s:%d Bad table model feature version!
-[TSTTableModel saveToArchiver:]
Bad table model feature version!
-[TSTTableModel setTableInfo:]
Do not set a tableInfo pointer on a pivotDataModel
Fatal Assertion failure: %{public}s %{public}s:%d Trying to set a non-nil tableInfo on tableModel of type %d, not allowed.
Trying to set a non-nil tableInfo on tableModel of type %d, not allowed.
-[TSTTableModel setIsAPivotDataModel:]
A pivotDataModel cannot have a tableInfo pointer.
-[TSTTableModel setTextImportRecord:]
Bad import record type!
-[TSTTableModel verifySubOwnerUIDsUsed]
Conditional styles ownerUid isn't subOwner uid for table:%@
TableModel %@: Sort Rule ownerUid isn't subOwner uid table:%@
Merge ownerUid isn't subOwner uid table:%@
Pencil Annotation ownerUid isn't subOwner uid table:%@
Pivot ownerUid isn't subOwner uid table:%@
TSTHiddenStateFORMULAOwner ownerUid isn't subOwner uid table:%@
-[TSTTableModel p_createCommentMapsIfNeeded]
_commentStorageMap should be nil
<%@> %@ (%@%@)
 From: %@
-[TSTTableModel unnamedTableString]
locale
Table %@
untitledTableNameFormat
-[TSTTableModel setCellsWithBaseCellMap:ignoreFormulas:skipDirtyingNonFormulaCells:]
using a uid based cellmap where a coord based one is expected
-[TSTTableModel clearCommentHostingMapForCommentStorage:]
Tables Comment Storage should not be empty
-[TSTTableModel commentHostingAtBaseCellCoord:forCommentStorage:updateCommentMaps:]
Comment storages should be equal
-[TSTTableModel heightOfRowAtIndex:isDefault:]
Bad row index!
-[TSTTableModel widthOfColumnAtIndex:isDefault:]
Bad column index!
-[TSTTableModel setHeight:ofRowAtIndex:]
-[TSTTableModel setWidth:ofColumnAtIndex:]
v32@?0@"NSNumber"8Q16^B24
-[TSTTableModel insertColumnsAtIndex:uids:metadatas:tableArea:]
invalid table area for column insert
not enough room in the header
-[TSTTableModel insertRowsAtIndex:uids:metadatas:tableArea:unsetFilterHidingAction:]
invalid table area for row insert
not enough room in the header for insert
not enough room in the footer for insert
v32@?0{_NSRange=QQ}8^B24
-[TSTTableModel setHidingState:atRowIndex:]
-[TSTTableModel setHidingState:atColumnIndex:]
-[TSTTableModel columnNameForCellID:restrictToBodyRange:]
refNamer
Column %@
-[TSTTableModel setFormulaOwnerUIDsWithMap:shouldStealReferences:]
Really needed an ownerUIDMapper here - tableModel is %@ (%@)
@"TSCEFormulaObject"28@?0@"TSCEFormulaObject"8I16^B20
@"TSTConditionalStyleSet"28@?0@"TSTConditionalStyleSet"8I16^B20
B24@?0@"<TSTCellIteratorData>"8@"TSTTableModelCellModificationHelper"16
v32@?0@"TSCEFormulaObject"8^{TSCEFormulaRewriteContext=@@{TSCEFormulaRewriteContextRecord={TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}{TSKUIDStruct=QQ}{TSUColumnRowOffset=ii}BBBBBBB}}16^B24
v24@?0Q8@"TSCEFormulaObject"16
@"TSSStyle"32@?0@"TSSStyle"8@"NSString"16Q24
-[TSTTableModel adoptStylesheet:withMapper:]
we expect the table to not be registered yet
@"TSSStyle"20@?0@"TSSStyle"8I16
 Document or Theme
-[TSTTableModel validateTableStylesInSameStylesheetExpectingDocSS:]
Expected non-nil document stylesheet for validation.
-[TSTTableModel validateTableStylesInSameStylesheetExpectingDocSS:]_block_invoke
styleStylesheet
Expected%{public}@ stylesheet %p on table network style %lu, got %p
v40@?0@"TSSStyle"8@"NSString"16Q24^B32
v40@?0@"TSWPParagraphStyle"8{_NSRange=QQ}16^B32
-[TSTTableModel baseCellCoordForCellContainingRichTextStorage:]
storage
{vector<TSTCellBorder *, std::allocator<TSTCellBorder *>>=^@^@{__compressed_pair<TSTCellBorder *__strong *, std::allocator<TSTCellBorder *>>=^@}}20@?0{TSUModelRowIndex=I}8^v12
@"TSTCell"24@?0^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}8Q16
{vector<TSTCell *, std::allocator<TSTCell *>>=^@^@{__compressed_pair<TSTCell *__strong *, std::allocator<TSTCell *>>=^@}}44@?0{TSUModelRowIndex=I}8@"TSTTableTile"12@"TSTTableTileRowInfo"20^v28^v36
v40@?0{TSUModelCellCoord={TSUCellCoord=ISBB}}8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16@"TSTCell"24@"TSTCell"32
-[TSTTableModel setCellsConcurrently:ignoreFormula:clearImportWarnings:formulaReplacer:]_block_invoke_3
baseCoord should be valid
-[TSTTableModel setCellsConcurrently:ignoreFormula:clearImportWarnings:formulaReplacer:]_block_invoke_4
cells called should have rich text
basic_string
TSTExpandedTables
TSTFutureProofCell
TSTPivotTables v2
TSTPivotTables MoreAggregates
NSString *TSTFeatureIdentifierForCompatibilityVersion(TSPVersion)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCompatibility.h
Unimplemented version for TSTCompatibility: %@
double TSTCellStorageDurationValue(TSTCellStorage *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellStorage.h
Asked for duration value from non-duration cell.
TSUCellRect TSUCellRangeFromRowRange(NSRange, TSUColumnRowSize)
/Library/Caches/com.apple.xbs/Binaries/iWorkImport_Sim/install/Symbols/BuiltProducts/TSUtility.framework/Headers/TSUColumnRowRect.h
out of bounds
TSUCellRect TSUCellRangeFromColumnRange(NSRange, TSUColumnRowSize)
BOOL TSTCellStorageVersionCheck(TSTCellStorage *)
Can't parse cell storage header version %d!
v24@?0@"TSTTableTileRowInfo"8^B16
v28@?0@"TSTTableTileRowInfo"8I16^B20
Tables/Tile
-[TSTTableTile _setRowInfo:atTileRowIndex:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableTile.mm
Duplicate row indexes!
Fatal Assertion failure: %{public}s %{public}s:%d Table embiggening is a one-way process
-[TSTTableTile setShouldUseWideRows:]
Table embiggening is a one-way process
-[TSTTableTile populatedRows]_block_invoke
rowInfo
<%@:%p %lu cells/ rows %@ >
Couldn't find row info for row index %lu
-[TSTTableTile setCell:atColumnIndex:tileRowIndex:]
v32@?0@"NSObject"8Q16^B24
-[TSTTableTile assertListRows]_block_invoke
In assertListRows, saw a row info that has no cells
void _assertTileIndexMatch(TSURowIndex, TSURowIndex)
TableTile row index %u should match array index %u.
dat_
-[TSCEDateCellValue compareToCellValue:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEDateCellValue.mm
Unexpected value type found
-[TSTCellRangeControlSpec initWithInteractionType:minimum:maximum:increment:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellRangeControlSpec.mm
Illegal interaction type:%@
Illegal parameters: %f, %f, %f
+[TSTCellRangeControlSpec cellSpecFromTSKFormat:]
TSTCellRangeControlSpec can only be created from TSKFormats for Stepper, Slider, and Rating.
virtual TSCEASTElement *TSCEASTMoveRegionRewriter::colonTractNode(TSCEASTColonTractElement *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTMoveRegionRewriter.mm
Not expected to need to combine RelativeTractRef rewrites
v16@?0@8
ACCRINT
ACCRINTM
ACOS
ACOSH
ADDRESS
AREAS
ASIN
ASINH
ATAN
ATAN2
ATANH
AVEDEV
AVERAGE
AVERAGEA
BITAND
BITLSHIFT
BITRSHIFT
BITOR
BITXOR
CEILING
CHAR
CHOOSE
CLEAN
CODE
COLUMN
COLUMNS
COMBIN
CONCAT
CONCATENATE
CONFIDENCE
CORREL
COSH
COUNT
COUNTA
COUNTBLANK
COUNTIF
COUPDAYBS
COUPDAYS
COUPDAYSNC
COUPNUM
COVAR
DATE
DATEDIF
DEGREES
DISC
DOLLAR
EDATE
EVEN
EXACT
FACT
FALSE
FIND
FIXED
FLOOR
FORECAST
HLOOKUP
HOUR
HYPERLINK
INDEX
INDIRECT
INTERCEPT
IPMT
ISBLANK
ISERROR
ISEVEN
ISODD
ISOWEEKNUM
ISPMT
LARGE
LEFT
LOG10
LOOKUP
LOWER
MATCH
MAXA
MEDIAN
MINA
MINUTE
MIRR
MODE
MONTH
MROUND
NPER
OFFSET
PERCENTILE
POISSON
POWER
PPMT
PRICE
PRICEDISC
PRICEMAT
PROB
PRODUCT
PROPER
QUOTIENT
RADIANS
RAND
RANDBETWEEN
RANK
RATE
REPLACE
REPT
RIGHT
ROMAN
ROUND
ROUNDDOWN
ROUNDUP
ROWS
SEARCH
SECOND
SIGN
SINH
SLOPE
SMALL
SQRT
STDEV
STDEVA
STDEVP
STDEVPA
SUBSTITUTE
SUMIF
SUMPRODUCT
SUMSQ
SWITCH
TANH
TIME
TIMEVALUE
TODAY
TRIM
TRUE
TRUNC
UPPER
VALUE
VARA
VARP
VARPA
VLOOKUP
WEEKDAY
YEAR
op_Multiply
op_Divide
op_Power
op_Percent
op_PlusSign
op_Negate
__CHART
op_Add
op_Subtract
op_Concat
op_LT
op_GT
op_LE
op_GE
op_EQ
op_NE
EFFECT
NOMINAL
NORMDIST
NORMSDIST
NORMINV
NORMSINV
YIELD
YIELDDISC
YIELDMAT
BONDDURATION
BONDMDURATION
ERFC
STANDARDIZE
INTRATE
RECEIVED
CUMIPMT
CUMPRINC
EOMONTH
WORKDAY
MONTHNAME
WEEKNUM
DUR2HOURS
DUR2MINUTES
DUR2SECONDS
DUR2DAYS
DUR2WEEKS
DURATION
EXPONDIST
YEARFRAC
ZTEST
SUMX2MY2
SUMX2PY2
SUMXMY2
SQRTPI
TRANSPOSE
DEVSQ
FREQUENCY
DELTA
FACTDOUBLE
GESTEP
PERCENTRANK
GAMMALN
DATEVALUE
GAMMADIST
GAMMAINV
SUMIFS
AVERAGEIFS
COUNTIFS
AVERAGEIF
IFERROR
DAYNAME
BESSELJ
BESSELY
LOGNORMDIST
LOGINV
TDIST
BINOMDIST
NEGBINOMDIST
FDIST
PERMUT
CHIDIST
CHITEST
TTEST
QUARTILE
MULTINOMIAL
CRITBINOM
BASETONUM
NUMTOBASE
TINV
CONVERT
CHIINV
FINV
BETADIST
BETAINV
NETWORKDAYS
DAYS360
HARMEAN
GEOMEAN
DEC2HEX
DEC2BIN
DEC2OCT
BIN2HEX
BIN2DEC
BIN2OCT
OCT2BIN
OCT2DEC
OCT2HEX
HEX2BIN
HEX2DEC
HEX2OCT
LINEST
DUR2MILLISECONDS
STRIPDURATION
op_Colon
INTERSECT.RANGES
LATITUDE
LONGITUDE
BEARING
ALTITUDE
UNION.RANGES
SERIESSUM
POLYNOMIAL
WEIBULL
CONFIDENCE.T
COVARIANCE.S
MODE.MULT
PERCENTILE.EXC
PERCENTRANK.EXC
QUARTILE.EXC
RANK.AVG
FIND.CASEINSENSITIVE
PLAINTEXT
STOCK
STOCKH
CURRENCY
CURRENCYH
CURRENCYCONVERT
CURRENCYCODE
ISNUMBER
ISTEXT
ISDATE
MAXIFS
MINIFS
XIRR
XNPV
XLOOKUP
XMATCH
SUBTOTAL
COUNTMATCHES
TEXTBEFORE
TEXTBETWEEN
TEXTAFTER
REGEX
REFERENCE.NAME
FORMULATEXT
REGEX.EXTRACT
GETPIVOTDATA
__INTERACTIONTYPE
__CELLVALUETYPE
TEXTJOIN
+[TSCEFunctionSpec(TSCEFunctionSpecDefinitions) functionSpecList]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFunctionSpecDictionary.mm
Couldn't create functionSpecList of %@
-[TSCECellTractRef initWithUidTract:calcEngine:tableUID:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECellTractRef.mm
+[TSCECellTractRef cellTractRefWithUidTractList:onTable:preserveFlags:rewriteContext:]
Can't be spanning on both row and column, tractList: %{public}@
-[TSCECellTractRef uidTractWithCalcEngine:hostTableUID:]
 | %@
v24@?0r^{TSUCellRect={TSUCellCoord=ISBB}{?=II}}8^B16
TSCEASTElement *TSCEASTTransposeRewriter::shouldTransformSpanningColumnToBodyRangeReference(TSCEASTElement *, const TSCEOwnerUID &, TSUColumnIndex, BOOL, TSUCellCoord)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTTransposeRewriter.mm
Table's bodyRange wasn't valid
TSCECellTractRef *TSCEASTTransposeRewriter::transformSpanningColumnToBodyRangeReference(TSCEASTElement *, TSCECellTractRef *__strong, TSUCellCoord)
absTractRef
Couldn't locate a table with uid: %@ in calcEngine %p
Table %@ bodyRange wasn't valid
TSUColumnIndex TSCEMakeAbsoluteColumnFromRelativeColumn(TSUCellCoord, TSURelativeColumnIndex, BOOL)
overflow in column
TSURowIndex TSCEMakeAbsoluteRowFromRelativeRow(TSUCellCoord, TSURelativeRowIndex, BOOL)
overflow in row, input row: %d with host row: %lu
Calling TSCEMakeAbsoluteRowFromRelativeRow with an invalid hostCell row: %@
-[TSTTableInfo initWithContext:geometry:rows:columns:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableInfo.mm
stylePreset
-[TSTTableInfo initWithContext:geometry:]
call - (instancetype) initWithContext: (TSPObjectContext *) context geometry: (TSDInfoGeometry *) geometry styles:(TSTTableStyleNetwork *)styles please
-[TSTTableInfo initAsDetailTableWithContext:sourcePivotTableInfo:pivotSourceCell:]
Expect only pivotTable to be passed in.
-[TSTTableInfo initWithContext:fromSourceInfo:cellRegion:waitForCalcEngine:flattenCategories:isSnapshot:]
Copying a categorized table without flattening. If you know how you got here, please write a bug.
v20@?0I8^B12
v20@?0S8^B12
-[TSTTableInfo _initWithContext:flatteningFromComplexInfo:cellRegion:waitForCalcEngine:flatteningOptions:isSnapshot:]
not expecting categorized or pivot table
-[TSTTableInfo _initWithContext:fromSourceInfo:cellRegion:tableModel:waitForCalcEngine:formulaCoordSpace:]
not expecting a categorized table
%@ %p: %@ (tableUID: %@ tableName: %@)
Headers table
Basic table
Checklist table
Stocks table
Plain table
Headers and footers table
+[TSTTableInfo localizedDescriptionForProtoIndex:]
No description for table proto index: %lu
@"NSString"16@?0@"TSULocale"8
Field 1
Field 2
Field 3
remotedata_positive_fill@2x.png
remotedata_negative_fill@2x.png
-[TSTTableInfo componentRootObject]
Component root object is nil!
-[TSTTableInfo performReadForOneOffFormulaEvaluation:forCellCoord:]
_translator
-[TSTTableInfo notifyTableOfNewResults]
There are no callers of this, but its needed to conform to TSCECalculationEngineRegistration protocol
-[TSTTableInfo filteringColumnNameForColumnIndex:]
-[TSTTableInfo p_setFilterSet:]
Must convert filters to geometric before setting
+[TSTTableInfo bootstrapPresetsOfKind:inTheme:alternate:reservedCount:]
expected equality between %{public}s and %{public}s
p.context
context
Table
+[TSTTableInfo validateNewName:forTable:]
Unable to get sheetNameProvider
B24@?0@"NSArray"8@"NSArray"16
TableInfo %p with tableName: '%@' and tableUID %@ is not registered with the calc-engine properly.
Repaired by renaming table to '%@' with tableUID: %@
@"TSTCellMap"24@?0{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}8
-[TSTTableInfo allAnnotations]_block_invoke_2
iterator shoul only return cells with comments
v32@?0@"TSTCellMap"8Q16^B24
-[TSTTableInfo annotationWithUUID:]
Given UUID is not a valid UUID: %@
^%@\s\d+(-\d+)?$
%@-%@
-[TSTTableInfo chooseUniqueNameInContainer:forPaste:needsNewName:avoidNames:]
Fresh table name is the same as the old one - aborting infinite loop.
-[TSTTableInfo getDefaultCell:forCellID:]
trying to get a default cell for an invalid cell ID
-[TSTTableInfo getCell:atCellID:suppressCellBorder:]
-[TSTTableInfo getCell:atCellID:]
-[TSTTableInfo hasFormulaAtCellUID:]
-[TSTTableInfo formulaAtCellID:]
-[TSTTableInfo setCell:atCellUID:ignoreFormula:clearImportWarnings:formulaReplacer:]
-[TSTTableInfo setCell:atCellUID:ignoreFormula:clearImportWarnings:]
-[TSTTableInfo setCellsWithCellMap:ignoreFormulas:skipDirtyingNonFormulaCells:]
coord based cellmaps no longer ok
v32@?0r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}8Q16^B24
@"TSTConcurrentCellList"24@?0{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}8
@32@?0@"<TSTCellIteratorData>"8@"TSTConcurrentCellList"16@24
-[TSTTableInfo cellValueTypeAtCellID:]
-[TSTTableInfo cellValueTypeAtCellUID:]
-[TSTTableInfo setCellStyle:ofRowAtUID:]
-[TSTTableInfo setTextStyle:ofRowAtUID:]
-[TSTTableInfo cellStyleOfRowAtIndex:isDefault:]
-[TSTTableInfo textStyleOfRowAtIndex:isDefault:]
-[TSTTableInfo setCellStyle:ofColumnAtUID:]
-[TSTTableInfo setTextStyle:ofColumnAtUID:]
-[TSTTableInfo cellStyleOfColumnAtIndex:isDefault:]
-[TSTTableInfo textStyleOfColumnAtIndex:isDefault:]
-[TSTTableInfo defaultCellStyleForCellID:useSoftDefault:outSource:]
-[TSTTableInfo defaultCellStyleForTableStyleArea:]
-[TSTTableInfo defaultTextStyleForCellID:useSoftDefault:outSource:]
-[TSTTableInfo defaultTextStyleForTableStyleArea:]
-[TSTTableInfo cellStyleAtCellID:isDefault:]
-[TSTTableInfo textStyleAtCellID:isDefault:]
-[TSTTableInfo cellStyleAtCellUID:isDefault:]
-[TSTTableInfo textStyleAtCellUID:isDefault:]
-[TSTTableInfo conditionalStyleSetAtCellID:]
-[TSTTableInfo columnNameForCellID:restrictToBodyRange:]
-[TSTTableInfo rowNameForCellID:restrictToBodyRange:]
-[TSTTableInfo columnNameForColumnIndex:withFallbackFormat:]
-[TSTTableInfo pivotDataLocalizedColumnNameAtDataColumnIndex:]
Only ask about the pivotDataModel on a pivot table.
-[TSTTableInfo stringAtCellID:optionalCell:]
-[TSTTableInfo characterFillAtCellID:optionalCell:]
Value Field
Field
Total
Row Group
Column Group
Summary
v40@?0Q8{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16^B32
v16@?0Q8
-[TSTTableInfo getValue:atCellID:fetchRichTextAttributesIfPlainText:]
-[TSTTableInfo cellValueFromCell:atCellID:]
v24@?0{TSUCellCoord=ISBB}8^B16
-[TSTTableInfo cellUIDListFromCellRegion:useCategoriesWildcards:]_block_invoke
Invalid level for a summary row. We're about to crash. summaryRowIndex:%lu intersectingSummaryRowIndexes:{public}%@ translator:{public}%@
-[TSTTableInfo cellUIDListFromCellRegion:useCategoriesWildcards:]_block_invoke_3
Invalid level for a label row. We're about to crash. labelRowIndex:%lu intersectingLabelRowIndexes:{public}%@ translator:{public}%@
v40@?0C8{TSKUIDStruct=QQ}12C28^B32
-[TSTTableInfo _correctAndCheckStateSuppressingAssertions:]
TableChecker: correcting nil categoryOrder in normal/disabled state
TableChecker: correcting missing backpointer in normal/disabled state
TableChecker: correcting uid map in normal/disabled state
TableChecker: correcting strokeSidecar
TableChecker: correcting summaryModel
TableChecker: correcting maps
-[TSTTableInfo resetCategoriesGroupByForOwnerRemapping]
Not expecting our pointer to change during subOwnerUIDUpgrade, if so, categoryOwner will need to update its structures
-[TSTTableInfo setIsCategoryEnabled:]
Cannot enable/disable categories without a groupBy
-[TSTTableInfo isEmptyPivot]
self.pivotOwner
-[TSTTableInfo applyPivotWithColumns:rows:aggregates:flatteningDimension:optionsMap:pivotRowColumnRuleChangeUid:pivotAggregateRuleChangeUid:]
Cannot apply pivot rules to a non-pivot table
v24@?0@"TSTGroupingColumn"8^B16
-[TSTTableInfo verifySubOwnerUIDsUsed]
Row hidden state ownerUid isn't subOwner uid: %@
Column hidden state ownerUid isn't subOwner uid
Category Aggregate ownerUid isn't subOwner uid
GroupBy uid isn't subOwner uid
PivotDataModel uid isn't subOwner uid
v16@?0@"TSTTableModel"8
v16@?0@"TSTSummaryModel"8
v16@?0@"TSTCategoryOrder"8
v16@?0@"TSTPivotRowColumnOrder"8
-[TSTTableInfo saveToArchive:archiver:]
Out-of-bounds type assignment was clamped to max
Out-of-bounds type assignment was clamped to min
_pivotDataModel
_pivotOrder
v16@?0@"TSDLayout"8
-[TSTTableInfo(CellMap) applyCellDiff:atCellUID:migrationMap:inverseCellDiff:defaultCellStyle:defaultTextStyle:]_block_invoke
customFormat
-[TSTTableInfo(CellMap) applyCellDiff:atCellUID:migrationMap:inverseCellDiff:defaultCellStyle:defaultTextStyle:]
TSU_SUCCESS
virtual NSString *TSCEThunkValue::string(TSCEFunctionSpec *__unsafe_unretained, int, TSULocale *__strong) const
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEThunkValue.mm
ThunkValue doesn't have a meaningful string() to provide
TSCECellDependencies::TSCECellDependencies(TSCEDependencyTracker *, TSCEInternalFormulaOwnerID, const TSCEOwnerUID &, TSCESubFormulaOwnerIndex)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECellDependencies.mm
tile.cppTile
void TSCECellDependencies::readPrecedentsWithOwners(const TSCE::EdgesArchive &, TSCECellRecord *)
corrupted file
Couldn't locate tableID found in cross-table reference: %{public}@
void TSCECellDependencies::readExpandedPrecedentsWithOwners(const TSCE::ExpandedEdgesArchive &, TSCECellRecord *)
void TSCECellDependencies::readFromArchive(const TSCE::CellDependenciesArchive &)
void TSCECellDependencies::unpackAfterUnarchive()
_dependencyTracker
v24@?0r^{TSCEInternalCellReference={TSUCellCoord=ISBB}SS}8^B16
v24@?0^{TSCECellRecord=^{TSCECellRecordEdgeLists}{os_unfair_lock_s=I}Q{TSCEPackedEdge=[8c]}ISS}8^B16
void TSCECellDependencies::readFromTiledArchive(const TSCE::CellDependenciesTiledArchive &, TSPUnarchiver *__strong)_block_invoke
TSCECellRecordTileWrapper *TSCECellDependencies::tileForCoord(const TSUCellCoord &, BOOL)
Expect cppTile to be filled in already
Uh, why are we returning a tile with no insides?
v16@?0^{TSCECellRecord=^{TSCECellRecordEdgeLists}{os_unfair_lock_s=I}Q{TSCEPackedEdge=[8c]}ISS}8
v24@?0r^{TSUCellCoord=ISBB}8^B16
v28@?0S8r^v12^B20
CYCLE 
(formula) 
%@, 
void TSCECellDependencies::findAndRecordCyclesInDirtyCells(TSCETarjanState &, TSCEInternalCellRefQueue &)_block_invoke
Cycle grid out of sync.
IsDirty grid out of sync.
IsDirtyAndNotInACycle grid out of sync.
Avoided underflow in dirtySelfPlusPrecedentsCount for cell: %@
BOOL TSCECellDependencies::dirtyPrecedentCountsAreConsistent(BOOL)_block_invoke
cellRecord
%@:%@ recomputed: <clean> vs stored %lu - inconsistency.
%@...<truncated>
  +1: This cell is dirty
recomputed: %lu vs stored %lu - inconsistency, explanation:
%@precedents:%@
dirty precedents count consistency error in %@ (count is %lu, should be >1)
v16@?0@"TSDCommentStorage"8
v16@?0@"TSTRichTextReferenceWrapper"8
v16@?0@"TSTConditionalStyleSet"8
void TSTEncodeCellToArchive(TSTCell *__strong, TST::Cell *, TSPArchiver *__strong)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTArchiveUtilities.mm
stringValue in string cell is nil
TSDThreadedComments
incbi
-[TSCECellValue tsceValue]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECellValue.mm
Abstract method not overridden by %{public}@
Abstract method not overridden by %@: %s
-[TSCECellValue copyWithZone:]
-[TSCECellValue displayString]
Children of TSCECellValue should implement %@.
-[TSCECellValue canonicalKeyString]
-[TSCECellValue format]
-[TSCECellValue isEqualToCellValue:]
-[TSCECellValue hash]
-[TSCECellValue compareToCellValue:]
-[TSCECellValue updateWithCustomFormatList:]
customFormatList
-[TSCECellValue encodeCellValueToArchive:]
Unexpected value type found in archiving in TSCECellValue
-[TSTUIDRectRef convertUIDRefToViewTractRef]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTUIDRectRef.mm
If we're already uid-form, why do we have a mapper?
-[TSTUIDRectRef excludeSummaryAndLabelRows]
_calcEngine
-[TSTUIDRectRef baseRangeRef]
This API can't support multiple base ranges, had %lu
-[TSTUIDRectRef viewRangeRef]
This API can't support multiple view ranges, had %lu
%@<%p> base:
-[TSTCellIterator initWithTableInfo:tableModel:region:flags:searchFlags:clampingRange:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellIterator.mm
caller should pass in region pointer
Tried to create iterator with range larger than is possible.
cannot use iterator flags to return all empty cells and also use flags to only search for specific kinds of cells
unsupported options, searching for borders but not fetching them
flags remain 0x%lx, flags should all be consumed by this point 
searchFlags remain 0x%lx, searchFlags should all be consumed by this point 
-[TSTCellIterator p_updateDataForMergeAtCellID:]
found this column in the cached merge ranges, so expected a merge range
-[TSTCellIterator p_updateDataForCellID:]
cell iterator was asked for cellID %@ that is outside the table bounds
tableCell
tableCellText
+[TSTCellStyle properties]_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellStyle.mm
sProperties
+[TSTCellStyle propertiesAllowingNSNull]_block_invoke
s_nullProperties
+[TSTCellStyle nonEmphasisCellProperties]_block_invoke
s_nonEmphasisProperties
+[TSTCellStyle categoriesCellProperties]_block_invoke
bodyStyle
headerRowStyle
headerColumnStyle
footerRowStyle
categoryLevel1Row
categoryLevel2Row
categoryLevel3Row
categoryLevel4Row
categoryLevel5Row
labelLevel1Row
labelLevel2Row
labelLevel3Row
labelLevel4Row
labelLevel5Row
pivotBodySummaryRow
pivotBodySummaryColumn
pivotHeaderColumnSummary
+[TSTCellStyle p_regionStringForTableStyleArea:]
Unexpected value for region.
+[TSTCellStyle initDefaultPropertyMap:forTableStyleArea:presetID:colors:alternate:]
-[TSTCellStyle validate]
orphaned cell style %@
Cell style not in its stylesheet
-[TSTCellStyle targetSizeForImageData:associatedHint:]_block_invoke
preset
-[TSTCellStyle targetSizeForImageData:associatedHint:]
Expected that the imageData would be from the style's fill
v20@?0i8^B12
%@ Pivot
AggregateDescriptionFormatString
%1$@ of %2$@
AggregateDescriptionWithParensFormatString
%1$@ (%2$@)
PivotCellDescriptionWithPrefixFormatString
%1$@: %2$@
PivotCellDescription5FieldsFormatString
%1$@: %2$@: %3$@: %4$@: %5$@
PivotCellDescription4FieldsFormatString
%1$@: %2$@: %3$@: %4$@
PivotCellDescription3FieldsFormatString
%1$@: %2$@: %3$@
PivotCellDescription2FieldsFormatString
PivotCellDescription1FieldsFormatString
%1$@
PivotCellDescription2FieldHolderFormatString
PivotCellDescription1FieldHolderFormatString
%@ -> %@
-[TSTPivotTranslator resetViewMap]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTPivotTranslator.mm
view and base cannot be the same for a pivot table
-[TSTPivotTranslator tableStyleAreaForRow:]
Unimplemented for pivot tables, because it doesn't make sense.
i32@?0r^{TSUModelCellCoord={TSUCellCoord=ISBB}}8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16C24C28
i24@?0r^{TSUModelCellCoord={TSUCellCoord=ISBB}}8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
v12@?0C8
v24@?0r^{TSUModelRowIndex=I}8r^{TSKUIDStruct=QQ}16
v24@?0r^{TSUModelColumnIndex=S}8r^{TSKUIDStruct=QQ}16
-[TSTPivotTranslator p_applyViewCellCoord:toSummaryUsingBlock:toBaseUsingBlock:]
cell in summary row is in viewMap, but not in summaryMap
-[TSTPivotTranslator indexesForRowsContainedByGroupUIDs:]_block_invoke
do not call with root group
-[TSTPivotTranslator indexesForColumnsContainedByGroupUIDs:]_block_invoke
TSTColumnRowTypeWithIndex TSTMakeColumnRowTypeWithIndex(TSTColumnRowType, NSUInteger)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableConstants.h
Type:%ldl or index:%lul is too large for TSTIndexedColumnRowType.
-[TSTTableTileRowInfo initFromArchive:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableTileRowInfo.mm
Can't find the last valid column during unarchive!
lastPreBNCCellRef
-[TSTTableTileRowInfo encodeToArchive:archiver:]
should not be archiving an empty row info
v28@?0^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}8S16^B20
Expected current storage version.
-[TSTTableTileRowInfo p_preBNCStorageRefAtIndex:]
We have upgraded to current data. Why are we asking for preBNC data?
-[TSTTableTileRowInfo _insertCell:atIndex:]
Can't insert over an existing cell!
Fatal Assertion failure: %{public}s %{public}s:%d Attempting to write cells to a preBNC row.
-[TSTTableTileRowInfo setCell:atIndex:]
Attempting to write cells to a preBNC row.
Fatal Assertion failure: %{public}s %{public}s:%d Attempting to insert columns in a preBNC row.
-[TSTTableTileRowInfo insertColumnsAtIndex:count:]
Attempting to insert columns in a preBNC row.
Fatal Assertion failure: %{public}s %{public}s:%d Attempting to remove columns in a preBNC row.
-[TSTTableTileRowInfo removeColumnsAtIndex:count:]
Attempting to remove columns in a preBNC row.
-[TSTTableTileRowInfo moveColumnsFromIndex:toIndex:count:]
Move column ranges cannot overlap!
-[TSTTableTileRowInfo enumerateStoragesInColumnRange:getPreBNC:withBlock:]
Incorrect maximum column!
-[TSTTableTileRowInfo validateWithResult:]
%{public}@
 Misaligned cell storage offsets!
 Cell storage overflow!
 Found an extra cell in this row!
 Bad cell version!
 Mismatched presence of cells.
 Misaligned cell storage offsets in PreBNC!
 Cell storage overflow in PreBNC!
 Found an extra preBNC cell in this row!
 Cell storage overflow in Pre BNC!
 Incorrect cell count! Expected:%tu Found:%tu.
 Incorrect PreBNC cell count! Expected:%tu Found:%tu.
<%@:%p tileRowIndex %lu cellCount %lu>
Fatal Assertion failure: %{public}s %{public}s:%d Never call me without a row
TSUColumnIndex _maxColumnIndex(TSTTableTileRowInfo *__unsafe_unretained)
Never call me without a row
void _invalidateMaxColumnIndex(TSTTableTileRowInfo *__unsafe_unretained)
void _updateCellBufferSize(TSTTableTileRowBuffer *, NSUInteger)
Row data buffer is too small!
Fatal Assertion failure: %{public}s %{public}s:%d Can't grow to wide columns in a row buffer not converted for wide offsets
void _extendOffsetArrayForMaxIndex(TSTTableTileRowBuffer *, TSUColumnIndex)
Can't grow to wide columns in a row buffer not converted for wide offsets
Fatal Assertion failure: %{public}s %{public}s:%d Too many columns for our row storage!
Too many columns for our row storage!
void _preallocateCellBufferSize(TSTTableTileRowBuffer *, NSUInteger)
Fatal Assertion failure: %{public}s %{public}s:%d Computed impossible insertion point.
NSUInteger _offsetForInsertInBuffer(TSTTableTileRowBuffer *, TSUColumnIndex, TSUColumnIndex, NSInteger)
Computed impossible insertion point.
void _shiftCellStorageInBuffer(TSTTableTileRowBuffer *, NSUInteger, NSInteger)
Row storage buffer overflow!
Fatal Assertion failure: %{public}s %{public}s:%d Corrupt cellStorage shift. Crashing!
Corrupt cellStorage shift. Crashing!
Fatal Assertion failure: %{public}s %{public}s:%d Encountered a bad offset while widening!
void _convertBufferToWideIndexes(TSTTableTileRowBuffer *)
Encountered a bad offset while widening!
void _invalidateMaxColumnIndexForColumnIndex(TSTTableTileRowInfo *__unsafe_unretained, TSUColumnIndex)
NSUInteger _applyMovingCellBuffer(TSTTableTileRowBuffer *, TSTTableTileRowBuffer *, TSUColumnIndex, TSUColumnRowCount)
Overwriting a column in move!
NSUInteger _storageSizeInBuffer(TSTTableTileRowBuffer *, TSUColumnIndex, TSUColumnIndex)
Couldn't find next storage offset for non-last cell!
virtual TSCEASTElement *TSTCellSpecFormulaExtractor::functionNode(TSCEASTFunctionElement *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellFormulaSpec.mm
Need a locale to parse stock formulas.
-[TSTCellFormulaSpec initWithFormulaObject:locale:]
TSTCellFormulaSpec requires a formula.
<%@: %p>: %@
null formula
%C%C%C%%C
%C%C%C%C%C%C%C%C%C
'%C%C%C%C%C%C%C
-[TSCENameTrie removeName:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCENameTrie.mm
Verify we are deleting the correct node
UInt16 TSTCellStorageSizeForHeaderFlags(TSTCellStorageFieldFlags)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellStorage.mm
Storage size should be four-byte-aligned!
void TSTCellToCellStorage(TSTCell *__strong, TSTCellStorage *)
Cell claims to have a string, but has no key for it!
Cell claims to have rich text, but has no key for it!
Cell claims to have a cell style, but has no key for it!
Cell claims to have a text style, but has no key for it!
Cell claims to have conditional style, but has no key for it!
Cell claims to have a formula, but has no key for it!
Cell claims to have a control, but has no key for it!
Cell claims to have a formula syntax error, but has no key for it!
Can't archive a bad format kind!
Cell claims to have a number format, but has no key for it!
Cell claims to have a currency format, but has no key for it!
Cell claims to have a date format, but has no key for it!
Cell claims to have a duration format, but has no key for it!
Cell claims to have a text format, but has no key for it!
Cell claims to have a boolean format, but has no key for it!
Cell claims to have a comment storage, but has no key for it!
Cell claims to have an import warning set, but has no key for it!
Could not archive all computed storage elements!
Failed to process all storage elements in TSTCellToCellStorage! Starting flags:%u Final flags:%u
Size miscalculation!
void TSTCellStorageToCell(TSTCellStorage *, TSTCell *__strong)
Fatal Assertion failure: %{public}s %{public}s:%d Can't get offset for unknown element 0x%02x, offset:%hu!
UInt16 p_OffsetForElementInStorage(TSTCellStorage *, TSTCellStorageFieldFlags)
Can't get offset for unknown element 0x%02x, offset:%hu!
, %@
%@::{%@}
%@::{%@, ...}
%@::%@
%@, ...
%@<%lu> %@%@
refers to: %@
; referenced by: %@
---Cell dependencies for %@ (%lu dirty cells):
-[TSTGroupingColumnList addRule:atGroupLevel:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTGroupingColumnList.mm
Can't call this on root level
-[TSTGroupingColumnList removeRuleAtGroupLevel:]
-[TSTGroupingColumnList moveRuleFromGroupLevel:toLevel:]
-[TSTGroupingColumnList changeGroupingTypeForGroupLevel:toType:]
-[TSTGroupingColumnList replaceRuleAtGroupLevel:withRule:]
v32@?0@"TSTGroupingColumn"8Q16^B24
TSCEValue TSCEFunction_DAYNAME::evaluateWithContext(TSCEEvaluationContext &)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEDateTimeFunctions.mm
weekday symbols: %@
TSCEValue TSCEFunction_DUR2DAYS::evaluateWithContext(TSCEEvaluationContext &)
Shouldn't get a non-duration in DUR2DAYS
TSCEValue TSCEFunction_DUR2WEEKS::evaluateWithContext(TSCEEvaluationContext &)
Shouldn't get a non-duration in DUR2WEEKS
TSCEValue TSCEFunction_DUR2HOURS::evaluateWithContext(TSCEEvaluationContext &)
Shouldn't get a non-duration in DUR2HOURS
TSCEValue TSCEFunction_DUR2MILLISECONDS::evaluateWithContext(TSCEEvaluationContext &)
Shouldn't get a non-duration in DUR2MILLISECONDS
TSCEValue TSCEFunction_DUR2MINUTES::evaluateWithContext(TSCEEvaluationContext &)
Shouldn't get a non-duration in DUR2MINUTES
TSCEValue TSCEFunction_DUR2SECONDS::evaluateWithContext(TSCEEvaluationContext &)
Shouldn't get a non-duration in DUR2SECONDS
static NSDate *TSCEFunction_WORKDAY::dateByAddingNumberOfDaysExcludingWeekends(NSDate *__strong, int, NSDateComponents *__strong)
Incorrect weekday number in function WORKDAY
virtual TSCEASTElement *TSCEASTRepairBadRefsRewriter::colonTractNode(TSCEASTColonTractElement *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTRepairBadRefsRewriter.mm
Can't have a reference spanning both columns and rows
-[TSCEDistributor protocol]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEDistributor.m
-[TSCEDistributor addReceiver:]
protocol MUST be defined before addReceiver can be used
Error %@: Target %@ does not conform to protocol %@ required for TSCEDistributor class %@.
-[TSCEDistributor suspendDuringBlock:]
someone added a receiver when we were not expecting it
TSCEErrorValue::TSCEErrorValue(TSCEError *__strong)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEErrorValue.mm
1)Creating a TSCEErrorValue with a nil TSCEError
TSCEErrorValue::TSCEErrorValue(const TSCEErrorValue &)
2)Creating a TSCEErrorValue with a nil TSCEError
virtual TSCEReferenceValue TSCEErrorValue::reference(TSCEFunctionSpec *__unsafe_unretained, int, TSCEEvaluationContext *) const
evaluationContext
TSTGroupBySet<%p> for pivot: %@
  GroupBy %d: %@
-[TSTGroupBySet restoreFromPivotDataTable:columnGroupings:rowGroupings:aggregates:flatteningDimension:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTGroupBySet.mm
Pivot data model missing when restoring rules for a pivot table
-[TSTGroupBySet setPivotRulesWithPivotDataTable:columnGroupings:rowGroupings:aggregates:flatteningDimension:]
Pivot data model missing when setting rules for a pivot table
-[TSTGroupBySet groupByForColumnLevel:rowLevel:]
columnLevel exceeds columnGroupings.count
rowLevel exceeds rowGroupings.count
No groupBy set for columnLevel: %d
-[TSTGroupBySet groupColumnIndexesForOwnerIndex:]
Exceeded our set of practical groupBys
-[TSTGroupBySet groupingColumnsForOwnerIndex:]
Expected to get a grouping column for index: %d
-[TSTGroupBySet groupByForOwnerIndex:createIfMissing:]
ownerIndex out of range: %d
Fatal Assertion failure: %{public}s %{public}s:%d Asking for flattened column aggregate uids while not flattening on columns
-[TSTGroupBySet columnUidsForColumnGroupUid:]
Asking for flattened column aggregate uids while not flattening on columns
Fatal Assertion failure: %{public}s %{public}s:%d Asking for flattened row aggregate uids while not flattening on rows
-[TSTGroupBySet rowUidsForRowGroupUid:]
Asking for flattened row aggregate uids while not flattening on rows
-[TSTGroupBySet columnNameForAggregateIndex:allowDuplicateNames:]
Re-constructing a non-empty pivot table without the calc engine
-[TSTGroupBySet descriptionForAggregateIndex:useShortLabel:allowDuplicateNames:locale:]
Requires a locale here
<Invalid AggType>: %@
Expecting to have localized label for all correct aggregate types
-[TSTGroupBySet compactDescriptionForAggregateIndex:useShortLabel:allowDuplicateNames:locale:]
-[TSTGroupBySet percentParentDenominatorCategoryRefFor:inGroupBy:forAggregate:forShowAsType:]
Only expecting these two showAsTypes, got: %d
-[TSTGroupBySet restrictColumnIndexes:toColumnGroupLevel:forPivotTable:]
Only expected this call with pivotTableInfo
-[TSTGroupBySet groupValueTupleForUuidCoord:createIfMissing:]
Couldn't locate rowGroupNode or columnGroupNode
Need a groupBy for this coordinate - why didn't you help?
TSTTableInfo
TSTTableModel
TSTTableStyle
TSTCellStyle
TSTConditionalStyleSet
TSTTableTile
TSTTableDataList
TSTTableDataListSegment
TSTTableHeaderStorageBucket
TSTWPTableInfo
TSTTableStrokePreset
TSTTableStylePreset
TSTArchivedCellSelection
TSTArchivedRdar39989167CellSelection
TSTArchivedStrokeSelection
TSTArchivedAutofillSelection
TSTCellMap
TSTConcurrentCellMap
TSTConcurrentCellList
TSTFormulaEqualsTokenAttachment
TSTWPTokenAttachment
TSTExpressionNode
TSTBooleanNode
TSTNumberNode
TSTStringNode
TSTArrayNode
TSTListNode
TSTLetNode
TSTVariableNode
TSTInNode
TSTOperatorNode
TSTPostfixOperatorNode
TSTPrefixOperatorNode
TSTFunctionNode
TSTFunctionEndNode
TSTDateNode
TSTReferenceNode
TSTDurationNode
TSTArgumentPlaceholderNode
TSTIdentifierNode
TSTMergeRegionMap
TSTEmptyExpressionNode
TSTArchivedLayoutHint
TSTCompletionToken
TSTHiddenStateFormulaOwner
TSTPopUpMenuModel
TSTRichTextPayload
TSTTableFilterSet
TSTTableStyleNetwork
TSTColumnRowUIDMap
TSTSummaryModel
TSTSummaryCellVendor
TSTCategoryOrder
TSTStrokeSidecar
TSTStrokeLayer
TSTPencilAnnotation
TSTHeaderNameMgrTile
TSTHeaderNameMgr
TSTPivotOwner
TSTPivotGroupingColumnOptionsMap
TSTPivotRowColumnOrder
TSTCategoryOwner
TSTGroupBy
TSTAggregator
TSTGroupNode
TSTCellDiffArray
TSTCellDiffArraySegment
<%@>
  %@ used at: %@
-[TSTConcurrentCellMap viewCellRects]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTConcurrentCellMap.mm
can't use cellid interface with celluid map
-[TSTConcurrentCellMap cellUIDRanges]
can't use celluid interface with cellid map
-[TSTConcurrentCellMap p_cacheRowColumnUIDs]
-[TSTConcurrentCellMap appendCellList:]
cell list uid state doesn't match cell map
-[TSTConcurrentCellMap appendCellLists:]
v40@?0r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}8{TSUViewCellCoord={TSUCellCoord=ISBB}}16{TSUModelCellCoord={TSUCellCoord=ISBB}}24@"TSTCell"32
-[TSTConcurrentCellMap enumerateSeriallyUsingBlock:]
need a celluid based map
check that willApplyToTable was called already
-[TSTConcurrentCellMap p_enumerateNewAndOldCellsSeriallyUsingBlock:]
-[TSTConcurrentCellMap enumerateRowsOfCellsConcurrentlyUsingBlock:]
willApplyToTable should be called first
-[TSTConcurrentCellMap updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:]
-[TSTConcurrentCellMap updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:]_block_invoke_2
should only be enumerating the cells of interest (stringValue)
-[TSTConcurrentCellMap updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:]_block_invoke_3
should only be enumerating the cells of interest (hasFormula)
-[TSTConcurrentCellMap updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:]_block_invoke_5
should only be enumerating the cells of interest (hasFormulaAnyError)
-[TSTConcurrentCellMap updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:]_block_invoke_6
should only be enumerating the cells of interest (hasRichText)
-[TSTConcurrentCellMap updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:]_block_invoke_7
should only be enumerating the cells of interest (hasConditionalStyle)
-[TSTConcurrentCellMap updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:]_block_invoke_8
should only be enumerating the cells of interest (hasCommentStorage)
-[TSTConcurrentCellMap updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:]_block_invoke_9
should only be enumerating the cells of interest (hasImportWarningSet)
-[TSTConcurrentCellMap updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:]_block_invoke_10
should only be enumerating the cells of interest (hasControl)
-[TSTConcurrentCellMap willApplyToTable:]
applyingToTable already called
need a uidBased cell map
-[TSTConcurrentCellMap willApplyToTableModel:]
-[TSTConcurrentCellMap convertToInverseCellMap]
willApplyToTable was not called or didApplyToTable called twice
-[TSTConcurrentCellMap pushInverseMergeAction:]
willApplyToTable should have been called
+[TSTConcurrentCellList cellListWithContext:cellUIDRange:repeatCellVectorPattern:patternDirection:]
expected a pattern for a row of cells
expected a pattern for a column of cells
-[TSTConcurrentCellList addCell:atViewCellCoord:]
index should be somewhere in the in the cell list's area
-[TSTConcurrentCellList addCell:atIndex:]
can only use index interface with celluid map
-[TSTConcurrentCellList p_convertToUuidBasedCellListUsingTableInfo:pruneCategorizedCells:]
cells size:%lu needs to match area range:%lu
-[TSTConcurrentCellList p_setObjectLocale:]
-[TSTConcurrentCellList p_pruneToBaseWithBaseMap:viewMap:]
-[TSTConcurrentCellList p_setupInterestingCells:interestingCellIndexes:forAdding:]
cell lists size mismatch
-[TSTConcurrentCellList p_invokeBlock:]
base rows needs to match uids
base cols needs to match uids
cells size needs to match area range
only valid viewRowIndexes should remain
only valid baseRowIndexes should remain
-[TSTConcurrentCellList p_convertToInverseCellMap]
oldCells size mismatch in cellList
-[TSTConcurrentCellList p_gatherRowState:]
-[TSTConcurrentCellList p_accumulateBordersConcurrentlyUsingBlock:accumulateCellsConcurrentlyUsingBlock:]
_tilesPerRow
_rowInfosPerRow
_tilesPerRow size mismatch in cellList
_rowInfosPerRow size mismatch in cellList
-[TSTConcurrentCellList p_enumerateRowsOfCellsConcurrentlyUsingBlock:]
_oldCells size mismatch in cellList
-[TSTConcurrentCellList p_enumerateNewAndOldCellsSeriallyUsingBlock:]
-[TSTConcurrentCellList p_enumerateCellsAddedAndRemovedOfType:usingBlock:]
_oldCells size:%lu does not match _cells size:%lu in cellList
_interestingCells
-[TSTConcurrentCellList p_enumerateCellsAddedOfType:usingBlock:]
v32@?0@"TSKFormat"8@"NSMutableIndexSet"16^B24
v32@?0@"NSNumber"8@"NSMutableIndexSet"16^B24
-[TSTConcurrentCellList p_enumerateColumnCellCountDiffUsingBlock:]
_baseColumns and _cellCountDiffsPerColumn sizes should match
-[TSTConcurrentCellList p_enumerateRowCellCountDiffUsingBlock:]
_baseRows and _cellCountDiffsPerRow sizes should match
_baseRows and _tilesPerRow sizes should match
_baseRows and _rowInfosPerRow sizes should match
-[TSTConcurrentCellList p_enumerateCustomFormatsBeingAddedUsingReplacementBlock:]_block_invoke
Expected the custom format replacement to be of the same type as the original.
-[TSTConcurrentCellList p_enumerateCustomFormatsBeingAddedUsingReplacementBlock:]
customFormatToRemove can not be nil.
replacementCustomFormat can not be nil.
-[TSTConcurrentCellList saveToArchiver:]
Archiving is not correctly implemented for subclasses.
-[TSTConcurrentSparseCellList addCell:atViewCellCoord:]
-[TSTConcurrentSparseCellList appendCellUIDRange:]
appending cellUIDRanges must have the same set of columns
-[TSTConcurrentSparseCellList p_invokeBlock:]
baseRows size:%lu needs to match row uids size:%lu
baseColumns size:%lu needs to match column uids size:%lu
-[TSTConcurrentSparseCellList p_accumulateBordersConcurrentlyUsingBlock:accumulateCellsConcurrentlyUsingBlock:]
-[TSTConcurrentSparseCellList p_enumerateRowsOfCellsConcurrentlyUsingBlock:]
v12@?0B8
virtual NSString *TSCEStringValue::string(TSCEFunctionSpec *__unsafe_unretained, int, TSULocale *__strong) const
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEStringValue.mm
customFormat.customFormat.defaultFormatData
-[TSTTableDataList setRichTextParentInfo:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableDataList.mm
The richTextParentInfo only applied to the Rich Text Payload datalist.
Tables/DataList
v24@?0@"TSTTableDataObject"8^B16
-[TSTTableDataList p_nextAvailableKey]
-[TSTTableDataList wrappedObjectForPayload:]
Custom Format datalists are obsolete and should never be added to!
_richTextParentInfo
Nil object for %{public}@ payload in %{public}@ datalist!
<nil>
-[TSTTableDataList p_setPayload:atSuggestedKey:callWillModify:]
No object with key %u in %{public}@ datalist!
-[TSTTableDataList enumerateFormatsUsingBlock:]
Can't enumerate formats on a non-format list!
-[TSTTableDataList enumerateLegacyCustomFormatsUsingBlock:]
Can't enumerate custom formats on a non-custom format list!
Fatal Assertion failure: %{public}s %{public}s:%d Expected formula list type.
-[TSTTableDataList replaceFormulasUsingBlock:]
Expected formula list type.
Fatal Assertion failure: %{public}s %{public}s:%d Expected conditional style list type.
-[TSTTableDataList replaceConditionalStyleSetsUsingBlock:]
Expected conditional style list type.
Fatal Assertion failure: %{public}s %{public}s:%d Expected comment type.
-[TSTTableDataList replaceCommentStoragesUsingBlock:]
Expected comment type.
Fatal Assertion failure: %{public}s %{public}s:%d Expected style list type.
-[TSTTableDataList replaceStylesUsingBlock:]
Expected style list type.
Fatal Assertion failure: %{public}s %{public}s:%d Expected formula error list type.
-[TSTTableDataList replaceFormulaErrorsUsingBlock:]
Expected formula error list type.
Fatal Assertion failure: %{public}s %{public}s:%d Expected rich list type.
-[TSTTableDataList replaceRichTextUsingBlock:]
Expected rich list type.
-[TSTTableDataList replaceFormatsUsingBlock:]
-[TSTTableDataList repairStyleDatalistStylesheetIfNecessary]_block_invoke
Expected new style to be in the document stylesheet
-[TSTTableDataList takeReferences:forKey:callWillModify:]
Cannot add reference for custom format
-[TSTTableDataList dropReferences:forKey:callWillModify:]
custom format should not have more than one reference
Comment
Conditional Style
Custom Format
Format
Formula
ControlCellSpec
Formula Error
Import Warning
Multiple Choice List
Rich Text
String
Style
-[TSTTableDataList(Type_Specific_API) allRichTextStorages]
API is intended for kTSTTableDataListTypeRichText lists
-[TSTTableDataList(Type_Specific_API) allRichTextStorages]_block_invoke
richTextObject
richTextObject.richTextStorage
-[TSTTableDataList(Type_Specific_API) containsControlCellSpecs]
API is intended for kTSTTableDataListTypeFormat lists
-[TSTTableDataList(Type_Specific_API) containsFormulas]
API is intended for kTSTTableDataListTypeCellSpec lists
@"TSKFormat"20@?0@"TSKFormat"8I16
@"TSKCustomFormatWrapper"16@?0@"TSKCustomFormatWrapper"8
-[TSTTableDataList(Type_Specific_API) cellFormatForKey:]
Can only store formats in this list!
-[TSTTableDataList(Type_Specific_API) commentStorageForKey:]
Can only store cell comment storage objects in this list!
-[TSTTableDataList(Type_Specific_API) conditionalStyleSetForKey:]
Can only store conditional styles in this list!
-[TSTTableDataList(Type_Specific_API) formulaForKey:]
Can only store formulas in this list!
-[TSTTableDataList(Type_Specific_API) controlCellSpecForKey:]
Can only store controls in this list!
-[TSTTableDataList(Type_Specific_API) formulaErrorForKey:]
Can only store formulaErrors in this list!
-[TSTTableDataList(Type_Specific_API) importWarningSetForKey:]
Can only store import warning set objects in this list!
-[TSTTableDataList(Type_Specific_API) multipleChoiceListFormatForKey:]
Can only store pop up menu model in this list!
-[TSTTableDataList(Type_Specific_API) richTextForKey:]
Can only store text storages in this list!
-[TSTTableDataList(Type_Specific_API) stringForKey:]
Can only store strings in this list!
-[TSTTableDataList(Type_Specific_API) stringForKey:outShouldWrap:outIsShared:]
-[TSTTableDataList(Type_Specific_API) styleForKey:]
Can only store styles in this list!
-[TSTTableDataList(Upgrade) upgradeCellFormatsU2_0]
This upgrade code is only for the Format list.
-[TSTTableDataList(Upgrade) upgradeCellFormatsU2_0]_block_invoke
-[TSTTableDataList(Upgrade) upgradeConditionalStylesToLinkedRefWithTableUID:]
This upgrade is for conditional style only.
v24@?0I8I12^B16
[%lu,%lu]
(%lu x %lu)
q24@?0@8@16
table
tableStyle
+[TSTTableStyle propertiesAllowingNSNull]_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableStyle.mm
+[TSTTableStyle nonEmphasisTableProperties]_block_invoke
-[TSTTableStyle validate]
orphaned table style %@
Table style not in its stylesheet
-[TSCENilCellValue compareToCellValue:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCENilCellValue.mm
-[TSTArchivedCellSelection selection]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTArchivedCellSelection.mm
Call selectionWithParent:
-[TSTArchivedCellSelection selectionWithParent:]
tableInfo
-[TSTArchivedCellSelection setSelection:]
Wrong type of class %@ (expected TSTCellSelection)
<%@: %p> %@
%@ for column %@ at level %lu with show as type %lu %@
(running total on: %@)
-[TSCEStringCellValue initWithString:locale:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEStringCellValue.mm
Creating a TSCEStringCellValue with a nil string.
str_
-[TSCEStringCellValue compareToCellValue:]
-[TSCEStringCellValue encodeToArchive:]
Avoid using nil to mean empty string in a TSCEStringValue, string is: %@
v24@?0^{TSCEASTNodeArray=*QQB}8^{TSCEASTNodeArgInfo=i[3i]{TSKUIDStruct=QQ}{TSUCellCoord=ISBB}}16
v16@?0^{TSCEASTNodeArray=*QQB}8
TSCEFormulaCreator::TSCEFormulaCreator(std::nullptr_t)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFormulaCreator.mm
Passing NULL as an arg to TSCEFormulaCreator() - it doesn't like that
void TSCEASTNodeArray::write(const T &) [T = unsigned long]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTNodeArray.h
_nodeArray
NSString *localizedModeName(TSCEStockAttribute, TSCEFunctionSpec *__strong)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCERemoteDataFunctions.mm
Unexpected function %@!
%@%@=X
TSCEValue evaluateCurrencyFunction(TSCEEvaluationContext &, TSCEFunctionSpec *__strong)
Failed to transform date %@ for CURRENCYH function!
TSCEValue evaluateStockFunction(TSCEEvaluationContext &, TSCEFunctionSpec *__strong)
Failed to transform date %@ for STOCKH function!
-[TSTCellStyleHandle initWithCellStyle:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellStyleHandle.m
cellStyle
expected cell style got %{public}@
v16@?0@"TSPLazyReference"8
B24@?0r^v8r^v16
-[TSTTableTileStorage _upgradeFromTileIDMap:referenceMap:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableTileStorage.mm
Tile upgrade can't find tile for ID %tu!
error
Fatal Assertion failure: %{public}s %{public}s:%d Failed to load a table tile during upgrade: errorClass=%{public}@, domain=%{public}@, code=%zd, %{public}@hints=%{public}@ (%@) 
recoverable=YES, 
Failed to load a table tile during upgrade: errorClass=%{public}@, domain=%{public}@, code=%zd, %{public}@hints=%{public}@ (%@) 
v32@?0@"TSPLazyReference"8Q16^B24
v28@?0@"TSTTableTile"8I16^B20
-[TSTTableTileStorage setShouldUseWideRows:]
v20@?0@"TSTTableTile"8I16
Fatal Assertion failure: %{public}s %{public}s:%d Bad tile group index!
-[TSTTableTileStorage _groupForTileID:]
Bad tile group index!
-[TSTTableTileStorage _tileFromGroupForTileID:]
-[TSTTableTileStorage _tileForID:createIfMissing:]
tile
v32@?0@"TSTTableTile"8Q16^B24
v24@?0@"TSTTableTileGroup"8^B16
-[TSTTableTileStorage _clearContentAtIndex:count:]
Corrupt tile map during clear!
-[TSTTableTileStorage _shiftRowsDownAtIndex:count:]
Tile insertion got confused!
-[TSTTableTileStorage _insertRowsAtIndex:count:]
Should only have whole-tile moves left in insert!
Corrupt tile map during insert!
Fatal Assertion failure: %{public}s %{public}s:%d Lost track of deletion start point!
-[TSTTableTileStorage _removeRowsAtIndex:count:]
Lost track of deletion start point!
Fatal Assertion failure: %{public}s %{public}s:%d Lost track of tiles during delete!
Lost track of tiles during delete!
Corrupt tile map during delete!
Fatal Assertion failure: %{public}s %{public}s:%d Tile should be empty during delete!
Tile should be empty during delete!
Fatal Assertion failure: %{public}s %{public}s:%d Shifting tiles too far during delete!
Shifting tiles too far during delete!
Fatal Assertion failure: %{public}s %{public}s:%d We removed too many rows during delete!
We removed too many rows during delete!
Shift too big during delete!
v32@?0^v8Q16^B24
TSTTilesCat
-[TSTTableTileStorage moveRowIndexRange:toIndex:]
Move row ranges cannot overlap!
v32@?0q8q16^B24
-[TSTTableTileStorage populatedRows]_block_invoke
Fatal Assertion failure: %{public}s %{public}s:%d Corrupt tile ID set!
-[TSTTableTileStorage lastPopulatedRowIndex]_block_invoke
Corrupt tile ID set!
RowInfo Cell Count Audit
Tile ID %lu, firstRow:%d
Tile Overlap Audit
-[TSTTableTileStorage auditTilesForRowOverlapAndExtensionPastTableBounds:withDataStore:result:]_block_invoke
Expected non-empty tile.
Tile with rows %d-%d overlaps with previous tiles in the table.
TileLastRow:%d tileMaxColumn:%d extends beyond tableModelLastRow:%d lastColumn:%d
v28@?0^{TSTCellStorage=}8S16^B20
-[TSTTableTileStorage prepareToApplyConcurrentCellMap:]_block_invoke
@"TSUPair"12@?0I8
TSKUIDStruct TSTUidApplyingAggregateIndex(const TSKUIDStruct &, NSUInteger)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTUIDTypes.mm
aggregateIndex * 2 had better fit in a UInt8
static TSKUIDStruct TSTUidGenerator::newUID(const char *, const char *, bool)
Not expecting null pointers here
Fatal Assertion failure: %{public}s %{public}s:%d Bad header bucket index for creation: %u
-[TSTTableHeaderStorage _allocateBucketsForIndex:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableHeaderStorage.mm
Bad header bucket index for creation: %u
Fatal Assertion failure: %{public}s %{public}s:%d Can't be missing the first bucket!
Can't be missing the first bucket!
Fatal Assertion failure: %{public}s %{public}s:%d Asked to create buckets when we've already done so!
-[TSTTableHeaderStorage _allocateBuckets]
Asked to create buckets when we've already done so!
-[TSTTableHeaderStorage _bucketForIndex:]
Unexpected header bucket index: %u!
-[TSTTableHeaderStorage initFromArchive:unarchiver:owner:]
Don't know how to handle this bucket hash function!
-[TSTTableHeaderStorage initFromArchive:unarchiver:owner:]_block_invoke
Bad header bucket count!
Fatal Assertion failure: %{public}s %{public}s:%d Bad bucket count during archiving!
-[TSTTableHeaderStorage encodeToArchive:archiver:]
Bad bucket count during archiving!
-[TSTTableHeaderStorage sizeAtIndex:]
-[TSTTableHeaderStorage setSize:atIndex:]
-[TSTTableHeaderStorage hidingStateAtIndex:]
-[TSTTableHeaderStorage setHidingState:atIndex:]
-[TSTTableHeaderStorage cellStyleAtIndex:]
-[TSTTableHeaderStorage setCellStyle:atIndex:]
-[TSTTableHeaderStorage textStyleAtIndex:]
-[TSTTableHeaderStorage setTextStyle:atIndex:]
-[TSTTableHeaderStorage defaultStylesAtIndex:outCellStyle:outTextStyle:]
-[TSTTableHeaderStorage defaultStyleHandlesAtIndex:outCellStyleHandle:outTextStyleHandle:]
-[TSTTableHeaderStorage metadataAtIndex:hidingAction:defaultSize:uuid:]
-[TSTTableHeaderStorage updateHeaderAtIndex:fromMetadata:]
-[TSTTableHeaderStorage removeIndexesAtIndex:count:]
-[TSTTableHeaderStorage shiftIndexesForwardAtIndex:count:]
Headers spilled out of our last bucket during shift!
-[TSTTableHeaderStorage shiftIndexesBackAtIndex:count:]
Headers spilled below zero!
Fatal Assertion failure: %{public}s %{public}s:%d Move ranges cannot overlap!
-[TSTTableHeaderStorage moveIndexRange:toIndex:]
Move ranges cannot overlap!
-[TSTTableHeaderStorage cellCountAtIndex:]
-[TSTTableHeaderStorage decrementCellCountAtIndex:byAmount:]
-[TSTTableHeaderStorage incrementCellCountAtIndex:byAmount:]
<%@:%p index %lu baseCol %u rules %@
-[TSTTableHeaderStorageBucket initWithContext:bounds:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableHeaderStorageBucket.mm
Can't initialize a bucket with a bad range!
v32@?0@"TSTTableHeaderInfo"8Q16^B24
Fatal Assertion failure: %{public}s %{public}s:%d Index out of range for bucket!
-[TSTTableHeaderStorageBucket _makeHeaderAtIndex:]
Index out of range for bucket!
-[TSTTableHeaderStorageBucket shiftIndexesBackAtIndex:count:]
Can't shift indexes below zero!
-[TSTTableHeaderStorageBucket headerAtIndex:]
-[TSTTableHeaderStorageBucket setHeader:atIndex:]
Tables/HeaderStorageBucket
-[TSTTableHeaderStorageBucket(Archiving) loadFromUnarchiver:]
Fatal Assertion failure: %{public}s %{public}s:%d Cached style count was wrong!
-[TSTTableHeaderStorageBucket(Archiving) saveToArchiver:]
Cached style count was wrong!
-[TSCELogicalTest initWithCriterion:functionSpec:evaluationContext:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCELogicalTest.mm
type not handled: %d
<%@: %p>: operation: %d value: %@ string: %@ date: %@ -> cost: %lu
<%@: %p>
[%lu]: %@
TSTCategorizedTables
-[TSCEAbstractGrid deepType:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEAbstractGrid.mm
TSCEAbstractGrid subclasses must override
-[TSCEAbstractGrid dimensions]
-[TSCEAbstractGrid valueAtGridCoord:accessContext:]
-[TSCEAbstractGrid valueAtIndex:accessContext:]
-[TSCEAbstractGrid count]
-[TSCEAbstractGrid subGridValueAtGridCoord:width:height:accessContext:]
-[TSCEAbstractGrid newCorrespondingAST:argIndex:bakeReferences:evaluationContext:]
too many arguments to fit in a node!
-[TSCEAbstractGrid value]
v24@?0@"TSTLayoutSpace"8^B16
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTLayout.mm
CGRect TSTLayoutGetCanvasFrame(TSTLayout *__strong)
Passing in a nil layout to TSTLayoutGetCanvasFrame.
{CGRect={CGPoint=dd}{CGSize=dd}}32@?0@"TSTLayoutSpace"8{?={?=II}{?=II}}16
v24@?0{?={?=II}{?=II}}8
@"TSUBezierPath"16@?0@"NSArray"8
v40@?0Q8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16^B32
-[TSTLayout p_spillRangeForMaskingRichTextLayout:]
alignment should have already been resolved
-[TSTLayout p_prepareAttachmentCellsIfNeeded]_block_invoke_2
cell
iterator should return a valid cellID
storage should be nil since iterator is searching with TSTCellIteratorSearchForRichText
v24@?0@"TSWPStorage"8^B16
v32@?0@"TSTWPLayout"8Q16^B24
-[TSTLayout positionForColumnIndex:bodyWidth:target:outWidth:outGap:]
created an undersized column
-[TSTLayout naturalAlignmentForCellID:]
Contained text editing layout but invalid editing cell ID?
-[TSTLayout p_cellIDForWPLayout:]
TSTLayout should only parent layouts for editing text or cells with inline attachments!
-[TSTLayout maxAutoGrowLineWidthForTextLayout:]
should only be asking max width for unwrapped rich layouts
-[TSTLayout p_computeSpillingTextFrameForEditingLayout:textSize:editingSpillRange:]
B24@?0@"TSTLayout"8^B16
-[TSTAccumulator valueForType:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTAccumulator.mm
%@ does not handle TSCEAggType_StDev/_VAR/_CountDistinct request - a higher level should have handled that
%@ does not handle TSCEAggType_GroupValue/_BodyRows/_Indirect request - a higher level should have handled that
v32@?0@"TSTColumnAggregate"8Q16^B24
-[TSCEReferencesToDirty setCalculationEngine:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEReferencesToDirty.mm
-[TSCEReferencesToDirty dirtyAllCellsInOwner:]
depTracker
-[TSCEReferencesToDirty dirtyRangeRef:]
v32@?0r^{TSKUIDStruct=QQ}8r^v16^B24
B8@?0
TSCEErrorValue (type %d %@)
-[TSTRefNamer nameForBaseTractRef:namingContext:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTRefNamer.mm
baseString
v24@?0r^{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}8^B16
-[TSTRefNamer nameForViewTractRef:namingContext:coordMapper:]_block_invoke
viewString
%@::
Categories
Body
 (%@)
%@<%p>: %@
-[TSCENamedReferenceManager initWithContext:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCENamedReferenceManager.mm
use initWithContext:calculationEngine: instead
v16@?0@"TSCETrackedReferenceStore"8
-[TSCENamedReferenceManager setFormulaOwnerUID:]
Invalid formulaOwnerUID
-[TSCESumAccumulator addValue:function:evaluationContext:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCESumAccumulator.mm
Shouldn't get a nil date from something that says it's a date
com.apple.Numbers.TST.PivotCellSetter
(blank)
CellDiffArray
-[TSCECoordMapper chromeTractRefForViewTractRef:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECoordMapper.mm
Not able to find valid indexes
Wasn't expecting this to be possible with valid input
v16@?0I8I12
-[TSTStrokeSidecar initForUpgradeWithTableModel:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTStrokeSidecar.mm
No usable root style in the document stylesheet or the deprecated theme stylesheet. Dropping the cell style on the floor.
v16@?0{TSUModelCellCoord={TSUCellCoord=ISBB}}8
v56@?0{TSTSimpleRange=qQ}8@"TSDStroke"24i32@"TSDStroke"36i44^B48
-[TSTStrokeSidecar flattenStrokeOrder]
left and right column stroke count should be identical
top and bottom row stroke count should be identical
v44@?0@"TSDStroke"8{TSTSimpleRange=qQ}16i32^B36
v24@?0@"NSArray"8@"NSPointerArray"16
-[TSTStrokeSidecar saveToArchiver:]
top and bottom stroke run arrays have different counts
left and right stroke run arrays have different counts
-[TSTCellRangeCache clear]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellRangeCache.mm
Clear with a BitGridTransaction open
v32@?0r^{TSUCellRect={TSUCellCoord=ISBB}{?=II}}8r^{TSCEInternalCellReference={TSUCellCoord=ISBB}SS}16^B24
v32@?0{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}8^B24
v40@?0Q8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16^B32
-[TSTCellRangeCache mergedGridIndicesForDimension:]
Invalid table dimension
-[TSTLayoutSpace invalidateCoordinatesForEditingCellID:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTLayoutSpace.mm
Invalidating for an editing cell range that is not a single logical cell.
-[TSTLayoutSpace nearestRangeForLayoutRect:]
Failed to get nearest cell range from space %@ for layout rect %{public}@
-[TSTLayoutSpace frameForTableNameBorder]
this API is intended to run on the main space
-[TSTLayoutSpace strokeFrameForTableNameBorder]
-[TSTLayoutSpace alignedStrokeFrameForTableNameBorder]
WARNING: vertical stroke ( %f %@ => %@ ) length <= 0.0
WARNING: horizontal stroke ( %f %@ => %@ ) length <= 0.0
v48@?0@"TSDStroke"8{TSTSimpleRange=qQ}16i32i36^B40
-[TSTLayoutSpace validateCoordinateCache:]
There are no column coordinates
-[TSTCoordinateArray setTableWidthForRightToLeft:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCoordinateArray.mm
Setting a table width on a LTR coordinate array has no effect.
CGFloat TSTCoordinateArrayGetCoordinate(TSTCoordinateArray *__strong, TSTGridIndex)
coordinateArray
CGFloat TSTCoordinateArrayGetRawCoordinate(TSTCoordinateArray *__strong, TSTGridIndex)
<%@ %p offset=%u average=%f
 coordinates={empty}>
 coordinates={
  { offset=%u -> coordinate=%f }
-[TSCECellDirtier dirtyNewCellRef:forSeconds:fromStartTime:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECellDirtier.mm
%p Still working on dirtying: %@
igami
%d, 
(%@ %@ %@)
(%@)
(%@%@)
%@,%@
%@(%@)
NSString *TSCEASTDescriptionIterator::prettyDescription()
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTDescriptionIterator.mm
Should only have one argument on _argStack at this point, the final result. ArgStack: %@
virtual TSCEASTElement *TSCEASTDescriptionIterator::binaryInfixOperatorNode(TSCEASTBinaryElement *)
Unknown operator tag: %d
op- 
op+ 
virtual TSCEASTElement *TSCEASTDescriptionIterator::unaryOperatorNode(TSCEASTUnaryElement *, BOOL)
((%@)%%)
%@{%i args, ws:'%@'} 
%@{%i args} 
unknownFunction: %@{%i args} 
[: %@]
Unexpected refType: %@
v24@?0r^{TSCEAnyRef=S{TSCESpanningRangeRef={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}C}{TSKUIDStruct=QQ}B@}8^B16
[%@]
<error in colonTractNode() - got nil>
virtual TSCEASTElement *TSCEASTDescriptionIterator::colonTractNode(TSCEASTColonTractElement *)
Why would this happen?
%@{%@}
<#REF! VTR>
ViewTractRef(%@ Preserve:%u) 
"%@"
"%@" 
unit;%lf
<empty>
<empty> 
<token>
token 
array; cols:%d rows:%d 
%@; %@
{%@ %@}
<list, len:%d>
list; length:%d 
thunk[
let %@ = %@ in
<%@>
(var %u)
virtual TSCEASTElement *TSCEASTDescriptionIterator::anyReferenceNode(TSCEASTRelativeCoordRefElement *)
We shouldn't actually reach here - the tag indicates this reference is valid or spanning
#REF!
%@%@%@%@
[%@%@]
[%@%@, %@%@]
append ws: '%@'
prepend ws: '%@'
#REF! 
#REF(%@%@, %@:: %@)! 
#REF(%@%@, %@)! 
linkedCellRef(%@) 
linkedColumnRef(%@) 
linkedRowRef(%@) 
UidRef(%@ Preserve:%u) 
%@::%@ 
virtual NSString *TSCEDateValue::string(TSCEFunctionSpec *__unsafe_unretained, int, TSULocale *__strong) const
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEDateValue.mm
dateFormat.customFormat.defaultFormatData
<%@ %p>: expressionNode:%@, parenNestingLevel:%lu argumentIndex:%lu
-[TSCEFormulaObject initWithNodeArray:translationFlags:hostTableUID:hostColumnUID:hostRowUID:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFormulaObject.mm
Can only set hostCellUID on uid-form formula
-[TSCEFormulaObject evaluateWithContext:]
Uncaught exception: %{public}@
-[TSCEFormulaObject copyByRewritingForTranspose:calcEngine:containingCell:outTransposeWarning:]
Expect rewriteSpec -willModifyTable: (or variant) to have been called before rewriting formulas.
Expect rewriteSpec -didModifyTable: (or variant) to have been called before rewriting formulas.
-[TSCEFormulaObject copyByRewritingWithSpec:calcEngine:containingCell:]
Warning, no rewriter created for this formula rewrite type (yet).
-[TSCEFormulaObject copyBySettingHostTableUID:hostColumnUID:hostRowUID:]
-[TSCEFormulaObject copyByRewritingReferencesToUidForm:]
preserveHostCell requested, but resolverTableUID %@ not found
-[TSCEFormulaObject copyByRewritingReferencesToGeometricForm:]
Over-riding hostTableUID for %@
conditional style
=__CHART(
+[TSCEFormulaObject parseFormula:calcEngine:unqualifiedReferenceTableUID:containingCell:outError:outNeedsImportRewrite:isChartFormula:isSageUpgrade:]
Only chart formulas should start with the chart prefix.
formula string does not start with =
TSCEThreadAllocatorKey
invalid symbol
-[TSTVariableNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTVariableNode.mm
Unexpected object in initAsCopyOf:... expected TSTVariableNode, got %@
invalid symbol in copy
invalid symbol in setter
-[TSTVariableNode insertFormulaText:includeWhitespace:]
NumberNode shouldn't have any children
-[TSTVariableNode buildASTNodeArray:hostCell:symbolTable:]
VariableNode shouldn't have any children
void TSTCellRegionGathererMap::joinAndAddRange(TSTCellRange, NSUInteger)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellRegionGatherer.mm
_cellRanges does not match encodedCoordToCandidateIndexMap
v24@?0{TSTCellRegionGathererKey=QI}8
TSUCellRect TSUMakeCellRectFromNSRanges(NSRange, NSRange)
Invalid column range
Invalid row range
TSCEASTElement *TSCEASTRewriter::loadAsTree()
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTRewriter.mm
An incomplete node needs one argument - the root of the thunk expression
Not enough arguments for let node
%d is not a valid node tag, seen at offset: %lu, seen in %{public}@
virtual void TSCEASTRewriter::rewrite()
_symbolTable
void TSCEASTNodeArrayReader::setOffset(size_t)
Can't set offset more than one past bytes used, offset: %lu in formula
void TSCEASTIteratorBase::willModify()
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTIteratorBase.h
Attempting to modify an iterator marked as readOnly.
void TSCEASTNodeArray::writeBytes(const uint8_t *, size_t)
%@ group-by: %@ for column: %@
-[TSTTableStylePreset setStyleNetwork:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableStylePreset.mm
styleNetwork
-[TSTTableStylePreset presetID]
No valid preset ID
-[TSTTableStylePreset initWithStyleNetwork:]
-[TSTTableStylePreset initWithContext:]
Should always be intialized with a network and an ID
-[TSTTableStylePreset drawSwatchInRect:inContext:]
_styleNetwork
-[TSTTableStylePreset loadFromUnarchiver:]_block_invoke
_tempUpgradePresetID
_styleNetwork.presetID
v16@?0@"TSTTableStyleNetwork"8
-[TSTTableStylePreset saveToArchive:archiver:]
TSCERemoteDataServerStatusChangeNotification
TSCERemoteDataServerStatusChangesKey
TSCERemoteDataServerStatusChangeToOnlineKey
TSCERemoteDataServerStatusChangeToOfflineKey
TSCERemoteDataCat
ask_price.raw
ask_size.raw
avg_3m_volume.raw
beta_coefficient.raw
bid_price.raw
bid_size.raw
change.raw
currency
day_high.raw
day_low.raw
dividend_per_share.raw
dividend_yield.raw
eps.raw
exchange
fiftytwo_week_high.raw
fiftytwo_week_low.raw
market_cap.raw
name
one_year_target.raw
open.raw
pe_ratio.raw
percent_change.raw
prev_close.raw
price.raw
volume.raw
symbol
time.raw
Not Set
Ask Price
Ask Size
Avg 3M Volume
Beta
Bid Price
Bid Size
Change
Currency
High
Annual Dividend
Dividend Yield
Exchange
52 Week High
52 Week Low
Market Cap
Name
One Year Target
Open
P/E Ratio
Percent Change
Close
Price
Volume
Symbol
Time
-[TSCERelativeTractRef addRelativeColumn:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCERelativeTractRef.mm
Cannot mix spanning and non-spanning column
-[TSCERelativeTractRef addRelativeRow:]
Cannot mix spanning and non-spanning row
-[TSCERelativeTractRef verifySpanningSettings]
Wrong count
Wrong index present
Invalid seen in non-spanning
No column found, but not marked as spanning
No row found, but not marked as spanning
Should match existing asserts
-[TSCERelativeTractRef relativeTopLeft]
-[TSCERelativeTractRef relativeBottomRight]
Non-spanning ref has %d relative columns
No columns found, but not marked as spanning
Non-spanning ref has %d absolute columns
Non-spanning ref has %d relative rows
No rows found, but not marked as spanning
Non-spanning ref has %d absolute rows
TSCEValue TSCEComputeSubtraction(TSCEValue, int, TSCEValue, int, TSCEFunctionSpec *__unsafe_unretained, TSCEEvaluationContext *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEAggregateEval.mm
map::at:  key not found
tableName
textStyle
shapeStyle
@"TSSStyle"40@?0@"TSSStyle"8@"NSString"16Q24Q32
+[TSTTableStyleNetwork createStylesInStylesheet:presetID:colors:alternate:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableStyleNetwork.mm
Style network is missing styles. %{public}@
+[TSTTableStyleNetwork networkFromStylesheet:presetID:]
no default table style in stylesheet %p
nameStyle
tableNameShapeStyle
+[TSTTableStyleNetwork networkFromTheme:presetID:]
theme
+[TSTTableStyleNetwork networkFromTheme:presetIndex:]
+[TSTTableStyleNetwork networkWithContext:presetID:styleProvider:tableStyleMorphingBlock:nameStyleMorphingBlock:nameShapeStyleMorphingBlock:cellStyleMorphingBlockByStyleArea:textStyleMorphingBlockByStyleArea:]
All styles are not present and accounted for.
v24@?0Q8Q16
-[TSTTableStyleNetwork initWithContext:styleProvider:presetID:]
Cannot set styles from a different context
-[TSTTableStyleNetwork isEqual:]
Cell style array length mismatch
Cell style array element nillity mismatch at position %zu
Text style array length mismatch
Text style array element nillity mismatch at position %zu
-[TSTTableStyleNetwork setTextStyle:forTableStyleArea:]
Pivot areas use the equivalent default area textStyle. Don't try to set it.
-[TSTTableStyleNetwork loadFromArchive:unarchiver:]_block_invoke
_tableStyle must be nil when loading from an archive
-[TSTTableStyleNetwork loadFromArchive:unarchiver:]_block_invoke_30
_tableNameStyle must be nil when loading from an archive
-[TSTTableStyleNetwork loadFromArchive:unarchiver:]_block_invoke_31
_tableNameShapeStyle must be nil when loading from an archive
sheet-0-sheetStyle
%@, %@
cellID:%u, %u, count:%lu
void TSCEASTNodeArray::resizeCapacity(size_t)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTNodeArray.mm
No nodeArray allocated.
You are going to crash very soon. You have overwritten your node array: %{public}@
resize didn't grow array enough
empty nodeArray
uint8_t _nodeArray[%d] = {
void TSCEASTNodeArrayReader::pushEndPoint(size_t)
We shouldn't be making the array seem larger when pushing a new end-point
void TSCEASTNodeArrayReader::skipIndexSet()
skipIndexSet going off rails, numRanges: %lu for formula: %{public}@
void TSCEASTNodeArray::write(const T &) [T = TSKUIDStruct]
void TSCEASTNodeArray::write(const T &) [T = int]
-[TSTOwnerUidMapper p_recreateUIDs]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTOwnerUidMapper.mm
Check for non subOwner formula UIDs
-[TSTOwnerUidMapper setToUpgradeMapping]
kTSCERecalcLoopGroupEmpty
CalculationEngine
TSCECalculationEngine
TSCENamedReferenceManager
TSCETrackedReferenceStore
TSCETrackedReferenceTSPObjectDeprecated
TSCERemoteDataStore
TSCEFormulaOwnerDependencies
TSCECellRecordTileWrapper
TSCERangePrecedentsTile
TSCEReferencesToDirty
-[TSTTableStrokePresetList setStrokePreset:atIndex:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableStrokePresetList.mm
preset index higher than count
-[TSTTableStrokePresetList initWithArchive:unarchiver:]
invalid preset count
-[TSTTableStrokePresetList horizontalStrokeForStrokePreset:]
illegal preset index
-[TSTTableStrokePresetList verticalStrokeForStrokePreset:]
-[TSTTableStrokePresetList exteriorStrokeForStrokePreset:]
-[TSTTableStrokePresetList maskForStrokePreset:]
-[TSCEFormulaRewriteSpec addCoordMapper:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFormulaRewriteSpec.mm
Replacing same tableUID with a different coordMapper - expect trouble: %@
 type: %@ %@
(inverse)
 tableUID: %@
Nested rewrites:
   (nested): %@
-[TSCEFormulaRewriteSpec affectedOwnerUID]
Shouldn't ask for the affected owner ID of a move, since there may be two.
Not a meaningful question, there are numerous tables affected
-[TSCEFormulaRewriteSpec affectedConditionalStyleOwnerUID]
Not implemented for these rewrite types.
-[TSCEFormulaRewriteSpec adjustViewTractRef:calcEngine:containingCellRef:undoTractList:]
subclasses must override
-[TSCEFormulaRewriteSpec restoreViewTractRefFromUndoTractList:calcEngine:containingCellRef:]
-[TSCEFormulaRewriteSpec willModifyTable:uidResolver:calcEngine:]
Move region requires the two tables version will/didModifySrcTable:dstTable: be called instead
-[TSCEFormulaRewriteSpec willModifySrcTable:srcUidResolver:dstTable:dstUidResolver:]
Only move region takes two tables
-[TSCEFormulaRewriteSpec didModifySrcTable:dstTable:]
-[TSCEFormulaRewriteSpec didModifyTable:calcEngine:]
Move region requires the two table version didModifySrcTable:dstTable: be called instead
-[TSCEFormulaRewriteSpec affectedRange]
Not implemented yet for this type
Not implemented for this type
Not yet implemented for this type
-[TSCEFormulaRewriteSpec expandedRowColumnUuids]
+[TSCETablesByName containerNameForTable:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCETablesByName.mm
+[TSCETablesByName tableNameForTable:]
%@<%p>:
  ContainerName: '%@' TableName: '%@' Table: %@
v16@?0@"TSSStylesheet"8
-[TSSTheme(TSTArchiving) tstLoadFromArchive:unarchiver:]_block_invoke_3
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSSTheme_TSTArchiving.mm
Preset style network is missing styles when unarchiving. %{public}@
-[TSTExpressionNode exportString]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTExpressionNode.mm
Children of TSTExpressionNode that is tokenized should implement exportString().
v32@?0@"TSTExpressionNode"8Q16^B24
-[TSTExpressionNode recordHashesForSubexpressions:]
subclasses must override recordHashesForSubexpressions so CSE works properly
<%@ %p>: '%@'
-[TSTFormula reparseWithStorage:adjustExpressionTree:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTFormula.mm
Formula storage exceeds maximum length.
'%C%C
'%C%C%C%C
%C%C%C%C%C%C%C%C%C%C%C
+[TSTFormula formulaQuoteContextAtCharIndex:inStorage:]
charIndex %lu not within storage range %@
+-*/^&=><:
%C%C%C%C%C%C%C%C
%C%C%C%C%C%C%C%C%C%C
%C%C%C%C%C
-[TSTFormula p_fixFormula:]
expected a function node with a function start token
expected non-empty storage
expected a function node on the stack
v24@?0@"TSTExpressionNode"8^B16
virtual NSDate *TSCEViewTractRefValue::date(TSCEFunctionSpec *__unsafe_unretained, int, TSCEEvaluationContext *) const
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEViewTractRefValue.mm
Error: couldn't resolve TSCEViewTractRefValue
virtual NSString *TSCEViewTractRefValue::rawString(TSCEFunctionSpec *__unsafe_unretained, int, TSULocale *__strong) const
unsupported
virtual BOOL TSCEViewTractRefValue::boolean(TSCEFunctionSpec *__unsafe_unretained, int, TSCEEvaluationContext *) const
virtual TSCERichTextStorage TSCEViewTractRefValue::richTextStorage(TSCEFunctionSpec *__unsafe_unretained, int, TSCEEvaluationContext *) const
virtual TSCERichTextStorage TSCEViewTractRefValue::rawRichTextStorage(TSCEFunctionSpec *__unsafe_unretained, int, TSCEEvaluationContext *) const
virtual TSCEGrid TSCEViewTractRefValue::formattedGrid(TSCEFunctionSpec *__unsafe_unretained, int, TSCEEvaluationContext *, BOOL) const
virtual TSCENumberValue TSCEViewTractRefValue::number() const
virtual NSDate *TSCEViewTractRefValue::date() const
stdtr
stdtri
+[TSTCellChooserControlSpec cellSpecFromTSKFormat:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellChooserControlSpec.mm
mcFormat
-[TSTCellChooserControlSpec initWithArchive:unarchiver:]
Wrong interaction type for a popup.
v16@?0@"TSTPopUpMenuModel"8
TSCEValue TSCEFunctionArgSpec::valueForModeIndex(short) const
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFunctionArgSpec.mm
Requesting value for non-mode argument.
Requesting value for out of bounds index.
%C%@_ARGUMENT_%d%C
%@ (%@)
Found duplicate for internal ownerID %@, %d and %d
void TSCEIDMap::loadFromArchive(const TSCE::OwnerIDMapArchive &)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEIDMap.mm
Got an invalid ownerUID during loadFromArchive, internalOwnerID: %lu
Repaired duplicate internal formula ownerIDs:
%d -> %d (%@)
TSCEInternalFormulaOwnerID TSCEIDMap::registerUID(TSCEOwnerUID)
new ID %lu is already in use by %@ - attempted reuse by %@
About to overwrite a reference in _uidToInternalIDMap: %d -> %d for ownerUID: %{public}@ in Map: %{public}@
TSCEIDMap:
  %d -> %@
  %d -> <UNREGISTERED>
-[TSTOperatorNode initWithContext:operatorChar:children:firstIndex:lastIndex:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTOperatorNode.mm
Operators should only have 2 children.  There are %lu arguments to operator '%hu'
-[TSTOperatorNode initAsCopyOf:intoContext:children:]
Unexpected object in initAsCopyOf:... expected TSTOperatorNode, got %@
-[TSTOperatorNode insertFormulaText:includeWhitespace:]
OperatorNode doesn't have two arguments
-[TSTOperatorNode buildASTNodeArray:hostCell:symbolTable:]
Operator node doesn't have two arguments
Undefined operator node
virtual TSCEASTElement *TSCEASTRefExtractionIterator::functionNode(TSCEASTFunctionElement *)_block_invoke_2
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTRefExtractionIterator.mm
unhandled case for refType: %d
v28@?0I8@"TSUCustomFormat"12^B20
^%@$
v32@?0@"NSTextCheckingResult"8Q16^B24
-[TSTNumberNode initWithContext:string:locale:firstIndex:lastIndex:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTNumberNode.mm
numberString
-[TSTNumberNode initAsCopyOf:intoContext:children:]
Unexpected object in initAsCopyOf:... expected TSTNumberNode, got %@
-[TSTNumberNode insertFormulaText:includeWhitespace:]
-[TSTNumberNode buildASTNodeArray:hostCell:symbolTable:]
NSString *TSTStringForDouble(double, TSULocale *__strong)
A locale is required here
Warning: Creating brave new cell with value type %@ but mismatched format type %@, repairing
-[TSTCell_PreBNC upgradedBraveNewCell]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCell_PreBNC.mm
-[TSTCell_PreBNC initWithLocale:]
The formula should not begin with an equals sign.
The formula contains a syntax error.
-[TSTCell_PreBNC stringForEditing]
durationFormat
-[TSTCell_PreBNC setCellStyle:clearingID:]
-[TSTCell_PreBNC setTextStyle:clearingID:]
-[TSTCell_PreBNC setConditionalStyle:clearingID:]
expected conditional style got %{public}@
B20@?0@"TSKFormat"8S16
-[TSTCell_PreBNC copyAllFormatsToCell:]
dest
<%@:%p: value type %@ value %@>
No content
Number
DEPRECATED
Date
Bool
Duration
FormulaError
RichText
Cell Spec: 
Value: 
<number: %f>
<rich text: '%@'>
<string: '%@'>
<date: '%@'>
<bool: '%@'>
<duration: %f>
<error>
<unknown cell type>
v24@?0r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}8^B16
v32@?0r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}8r^{TSKUIDStruct=QQ}16^B24
-[TSTCellMap loadFromUnarchiver:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellMap.mm
serious error: flag out of sync with content.
-[TSTCellMap loadFromUnarchiver:]_block_invoke_2
creating a one-to-many cell map but starting with more than one cell
-[TSTCellMap saveToArchiver:]
We should never archive shallow copies. That's not what they are for
v32@?0@"TSTCellList"8Q16^B24
-[TSTCellMap cellIDAtIndex:]
cannot examine cellIDs in UID mode
-[TSTCellMap enumerateCellsWithIDsUsingBlock:]
can't enumerate IDs since have UIDs
-[TSTCellMap enumerateCellsWithUIDsUsingBlock:]
can't enumerate by UIDs since have IDs
-[TSTCellMap findCellForCellID:]
cannot use find with a UID based cell map
v40@?0r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}8@"TSTCell"16Q24^B32
-[TSTCellMap addCell:andCellUID:]
cannot add UIDs in ID mode
cannot add cells in one-to-many mode
-[TSTCellMap addPrecopiedCells:andCellUIDs:]
Cell and CellUID sizes don't match up
-[TSTCellMap addCell:andCellID:]
Cannot add cellIDs while in UID mode.
-[TSTCellMap replaceCellAtIndex0:]
-[TSTCellMap appendCellMap:precopied:]
Trying to append a cellID cellMap to a uidBased map. Aborting.
Trying to append a uidBased cellMap to a cellID map. Aborting.
-[TSTCellMap p_addPrecopiedCells:]
Shallow copy not supported in this path
-[TSTCellMap p_copyCellsAndUUIDsFromCellMap:convertingToCellIDsWithTableInfo:]
This should only be called with a UID based cell map.
-[TSTCellList cellAtIndex:]
Out of range in  %@
-[TSTCellList replaceCell:atIndex:]
Asking to replace where we currently have no cell at all - invalid replaceCell: call
Should now fit in real range
-[TSTCellList loadFromUnarchiver:]_block_invoke
virtual TSCEASTElement *TSTTSCEASTNodeExpressionNodeFunction::functionNode(TSCEASTFunctionElement *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTSCEASTNodeExpressionNodeFunction.mm
improper number of arguments for function node.
virtual TSCEASTElement *TSTTSCEASTNodeExpressionNodeFunction::unknownFunctionNode(TSCEASTUnknownFunctionElement *)
virtual TSCEASTElement *TSTTSCEASTNodeExpressionNodeFunction::colonNode(TSCEASTColonElement *)
improper number of arguments for colon node.
virtual TSCEASTElement *TSTTSCEASTNodeExpressionNodeFunction::arrayNode(TSCEASTArrayElement *)
improper number of arguments for array.
virtual TSCEASTElement *TSTTSCEASTNodeExpressionNodeFunction::listNode(TSCEASTListElement *)
improper number of arguments for list node.
virtual TSCEASTElement *TSTTSCEASTNodeExpressionNodeFunction::viewTractRefNode(TSCEASTViewTractRefElement *)
viewTractRef is expected to have an active tract
TSTExpressionNode *TSTTSCEASTNodeExpressionNodeFunction::expressionNode()
Unable to properly create a TSTExpressionNode. Possibly a bad ASTNodeArray?
void TSTTSCEASTNodeExpressionNodeFunction::processOperatorNode(unichar)
improper number of arguments for operator node.
void TSTTSCEASTNodeExpressionNodeFunction::processPostfixOperatorNode(unichar)
improper number of arguments for postfix operator node.
void TSTTSCEASTNodeExpressionNodeFunction::processPrefixOperatorNode(unichar)
improper number of arguments for prefix operator node.
unichar operatorCharForTag(TSCEASTNodeTag)
v40@?0d8{TSTSimpleRange=qQ}16^B32
-[TSTColumnRowUIDMap initWithContext:tableUUID:numberOfRows:numberOfColumns:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTColumnRowUIDMap.mm
tableUUID
-[TSTColumnRowUIDMap insertColumnsWithUIDs:atIndex:]
cannot insert columns at invalid columnIndex
-[TSTColumnRowUIDMap insertRowsWithUIDs:atIndex:]
cannot insert rows at invalid rowIndex
v28@?0I8r^{TSKUIDStruct=QQ}12^B20
v32@?0r^{TSTLookupKeyCoord=I}8Q16^B24
v28@?0S8r^{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}12^B20
-[TSTImmutableColumnRowUIDMap initWithColumnRowUIDMap:]
@e need to ensure versionCounter was preserved
gamma
lgam
-[TSTCategoryOwner setTableModel:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCategoryOwner.mm
tableModel
%@<%p> (on table %@)
-[TSTCategoryOwner registerWithCalcEngine:baseOwnerUID:]
Already registered with calcEngine
GroupBy shouldn't be registered yet.
-[TSTCategoryOwner registerGroupByForColumns:ownerIndex:hiddenStates:groupBySet:]
Bad ownerIndex (%d) for groupBy
If ownerIndex matches up, then so should groupByUid
-[TSTCategoryOwner updateWithDocumentRoot:]
TSTPivotTables_v2
%@ @ %@
-[TSTAggNode encodeToArchive:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTAggNode.mm
Not expecting an invalid coord here
NSInteger StockAttributeFromString(NSString *__strong, NSUInteger, NSString *__strong, NSInteger, TSULocale *__strong)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCERemoteDataModeUtility.m
documentLocale
-[TSTFunctionNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTFunctionNode.mm
Unexpected object in initAsCopyOf:... expected TSTFunctionNode, got %@
-[TSTFunctionNode buildASTNodeArray:hostCell:symbolTable:]
Remote Data Coordinator
-[TSCERemoteDataCoordinator registerStore:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCERemoteDataCoordinator.mm
%@ is already registered!
-[TSCERemoteDataCoordinator unregisterStore:]
%@ is not registered
-[TSCERemoteDataCoordinator p_fetcherForDataKind:]
No configured fetcher for this data kind!
-[TSCERemoteDataCoordinator addRemoteDataInterest:forStore:]_block_invoke
Unclaimed specifiers after register!
^IXIC
^NYA
^FTSE
^FTAS
^FTAI
^FCHI
^GDAXI
^AXJO
^AORD
^ATX
^BFX
^BVSP
^GSPTSE
000001.SS
399001.SZ
OMXC20.CO
^OMXH25
^HSI
^NSEI
^BSESN
^JKSE
^ISEQ
^IETP
T25.TA
^TA100
FTSEMIB.MI
^N225
^KLSE
^MXX
^AEX
^NZ50
^OSEAX
RTS.RS
^STI
^KS11
^IBEX
^OMX
^SSMI
^TWII
^DJI
AAPL
SBUX
-[TSCERemoteDataCoordinator p_dataSourceFetcherForRemoteData:]
No matching remote data source fetcher for %@
-[TSCERemoteDataCoordinator p_removeRemoteDataInterest:forStore:]
Unclaimed specifiers after unregister!
-[TSCERemoteDataCoordinator isOnlineForDataKind:]
No status for this data kind!
v32@?0@"NSString"8@"TSCEStock"16^B24
-[TSCERemoteDataCoordinator sourceFetcherDidUpdate:withValues:quotes:]_block_invoke
Unexpected changes!
-[TSTLetNode initWithContext:children:firstIndex:lastIndex:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTLetNode.mm
Let nodes should have exactly 0 or 3 children.  There are %lu arguments to let
A let node's first child must be an identifier.
-[TSTLetNode initAsCopyOf:intoContext:children:]
variable %u
-[TSTLetNode setChildren:]
let nodes must have zero or three children
-[TSTLetNode boundSymbol]
identifier is not of proper type: %@
-[TSTLetNode copyByResolvingIdentifiers:hostTable:baseHostCell:forceReferenceInterpretation:symbolTable:oldToNewNodeMap:]
Let nodes must have exactly zero or three children
-[TSTLetNode addAllIdentifiersToSymbolTable:]
Let nodes must have exactly three children
-[TSTLetNode insertFormulaText:includeWhitespace:]
Let node doesn't have three arguments
-[TSTLetNode buildASTNodeArray:hostCell:symbolTable:]
-[TSTSummaryModel resetForPivotingWithRowUids:columnUids:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTSummaryModel.mm
Resetting a categories summary model for pivoting
-[TSTSummaryModel resetForCategoriesWithForce:]
Resetting a pivoting summary model for categories
-[TSTSummaryModel resetForCategoriesWithForce:]_block_invoke_3
we should have a valid coordinate
v24@?0r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}8@"TSTCell"16
v16@?0@"TSTSummaryCellVendor"8
-[TSTSummaryModel p_setPivotCell:atCellUID:formulaReplacer:]
Attempting to set cell at illegal summary model cell UID:%{public}@
-[TSTSummaryModel allRichTextStorages]
TODO
-[TSTSummaryModel heightOfRowAtIndex:isDefault:]
Individual row heights can only be used for pivot tables.
-[TSTSummaryModel widthOfColumnAtIndex:isDefault:]
Individual column widths can only be used for pivot tables.
-[TSTSummaryModel setHeight:ofRowAtIndex:]
-[TSTSummaryModel setWidth:ofColumnAtIndex:]
-[TSTSummaryModel setLabelRowVisibility:atCategoryLevel:]
-[TSTSummaryModel willRemoveGroup:]
GroupBy tried to remove a summaryRow that doesn't exist in the summaryModel.
+[TSTSummaryModel categoryLevelForTableStyleArea:]
Calling categoryLevelForTableStyleArea with an invalid style area
v16@?0@"TSTCellMap"8
+[TSTCellToggleControlSpec cellSpecFromTSKFormat:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellToggleControlSpec.mm
Expected checkbox format.
-[TSTCellToggleControlSpec initWithArchive:unarchiver:]
Wrong interaction type for a checkbox.
-[TSTStrokeOrderedLayer initWithContext:majorStrokeLayer:minorStrokeLayer:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTStrokeOrderedLayer.m
majorStrokeLayer
minorStrokeLayer
-[TSTStrokeOrderedLayer appendStroke:inRange:order:]
-[TSTStrokeOrderedLayer insertStroke:inRange:order:]
-[TSTStrokeOrderedLayer invalidate]
-[TSTStrokeOrderedLayer invalidateRange:]
-[TSWPStorage(TSTAdditions) tst_selectionForImplicitlyEditingWithFormatType:percentSymbol:currencySymbol:adjustSelectionForCurrencyOrPercentSymbols:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSWPStorage+TSTAdditions.mm
currencySymbol
-[TSWPStorage(TSTAdditions) tst_tableInfo]
parentInfo of a TSWPKindTable TSWPStorage must be a TSTTableInfo
-[TSWPStorage(TSTAdditions) rangeForCellID:includingBreak:]
cell attribute not found
TSCEEvaluationContext::TSCEEvaluationContext(TSCECalculationEngine *__strong, const TSCEOwnerUID &, TSUCellCoord)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEEvaluationContext.mm
Didn't get a calc engine
void TSCEEvaluationContext::runBlockUnlessAborted(__strong dispatch_block_t)
failed to create dispatch group
static NSDate *TSCEEvaluationContext::newDateConversionOfString(NSString *__strong, TSCEEvaluationContext *)
Should not have reached this point with a NULL context - you are lucky you are getting any date at all.
TSCEValue TSCEFunction_MULTINOMIAL::evaluateWithContext(TSCEEvaluationContext &)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEMathTrigFunctions.mm
MULTINOMIAL accepts nonnegative arguments only.
v32@?0@"TSCETrackedReference"8Q16^B24
v16@?0@"TSCETrackedReference"8
TSTWPTokenAttachment *TSTLexer::nextTokenAttachment()
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTLexerAdditions.mm
No more tokenAttachments.
tokenAttachment
virtual TSCEASTElement *TSTTrackingRangeExtractor::anyReferenceNode(TSCEASTRelativeCoordRefElement *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTrackingRangeExtractor.mm
Too many coordinates in tracking range!
tracking region should not yet be initialized
+[TSTFormulaPredArgData getPredArgDataFromCell:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTFormulaPredArg.mm
predArgData
-[TSTFormulaPredArgData string]
Wrong data type for call: %d
-[TSTFormulaPredArgData date]
-[TSTFormulaPredArgData number]
-[TSTFormulaPredArgData doubleValue]
-[TSTFormulaPredArgData boolValue]
-[TSTFormulaPredArgData durationValue]
-[TSTFormulaPredArgData durationUnits]
-[TSTFormulaPredArgData duration]
-[TSTFormulaPredArg boolValue]
Wrong type accessor called on %@
-[TSTFormulaPredArg setBoolValue:]
-[TSTFormulaPredArg number]
-[TSTFormulaPredArg setNumber:]
-[TSTFormulaPredArg preserveFlags]
-[TSTFormulaPredArg setPreserveFlags:]
Must set the entire relative reference, if you are relative
-[TSTFormulaPredArg date]
-[TSTFormulaPredArg setDate:]
-[TSTFormulaPredArg string]
-[TSTFormulaPredArg setString:]
-[TSTFormulaPredArg dataList]
-[TSTFormulaPredArg relativeCellRef]
-[TSTFormulaPredArg setRelativeCellRef:]
-[TSTFormulaPredArg crossTableRef]
Need a host-cell if we aren't storing a relativeRef
-[TSTFormulaPredArg categoryRef]
-[TSTFormulaPredArg viewTractRef]
-[TSTFormulaPredArg baseCellRef]
-[TSTFormulaPredArg cellRefForHostCoord:]
-[TSTFormulaPredArg setBaseCellRef:]
-[TSTFormulaPredArg durationValue]
-[TSTFormulaPredArg setDurationValue:]
-[TSTFormulaPredArg durationUnits]
-[TSTFormulaPredArg duration]
-[TSTFormulaPredArg setDurationUnits:]
-[TSTFormulaPredArg rewriteWithContext:forArgAt:usingLinkedRef:useColumnRef:hostCellRef:rewriteBlock:]
Not expecting no result
-[TSTFormulaPredArg formulaCreatorForPredArg]
Need a host-cell for this
-[TSTFormulaPredArg formulaCreatorForPredArg0UsingLinkedRef:useColumnRef:]
Only references types are supported for predArg0, saw %d
-[TSTHiddenStatesOwner hiddenStates]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTHiddenStatesOwner.mm
We should only have one hiddenStates per table, at the moment
%@<%p>(on table %@)
 Hidden States:
  - %@
-[TSTHiddenStatesOwner registerHiddenStates:baseOwnerUID:]
HiddenStates couldn't register with calc-engine
%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X
TSCEOwnerUID TSCESubFormulaOwnerID::formulaOwnerUIDForBaseUIDAndSubownerIndex(const TSCEOwnerUID &, TSCESubFormulaOwnerIndex)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCETypes.mm
OwnerIndex %d doesn't correspond to a subFormulaOwner
TSUCellCoord TSCEMakeAbsoluteCellCoordinateFromRelativeCellCoordinate(TSUCellCoord, TSCERelativeCellCoordinate, const TSUPreserveFlags &)
Wrong sticky setting
tableUID: %@
%@ %@ couldBeIntersection: %@
%@::%@:%@
(include headers)
%@::(%@%d,_)
%@::(_,%@%d)
%@::(%@%d,%@%d)
aggType=%d
-[TSTBooleanNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTBooleanNode.mm
Unexpected object in initAsCopyOf:... expected TSTBooleanNode, got %@
true
false
-[TSTBooleanNode insertFormulaText:includeWhitespace:]
BooleanNode shouldn't have any children
-[TSTBooleanNode buildASTNodeArray:hostCell:symbolTable:]
rewriteType=%d
-[TSCEFormulaRewrite_Uids initWithUids:atIndexes:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFormulaRewriteInfo_RowColumnInfo.mm
Size mismatch for our vectors
-[TSCEFormulaRewrite_Uids containsIndex:]
The %{public}@ API requires -[%{public}@ loadIndexesForTable:] be called first.
-[TSCEFormulaRewrite_Uids rowIndexForUid:]
Warning, %{public}@ did not find the uuid: %@
-[TSCEFormulaRewrite_Uids columnIndexForUid:]
Uids: %@
Indexes: %@
-[TSCEFormulaRewriteInfo_RowColumnInfo saveToMessage:]
Cannot archive until we have called loadIndexesForTable
-[TSCEFormulaRewriteInfo_RowColumnInfo offsetForRowIndex:]
-[TSCEFormulaRewriteInfo_RowColumnInfo offsetForUpdatedRowIndex:isRemoveRows:]
This should be the same offset, then, right
-[TSCEFormulaRewriteInfo_RowColumnInfo updatedCellRefForRewriteType:originalCellRef:]
Not implemented for this rewrite type
Should not see this call, we should get either the insert or remove rewrite types
Should not see this call, its more complex than that
-[TSCEFormulaRewriteInfo_RowColumnInfo originalCellRefForRewriteType:updatedCellRef:]
-[TSCEFormulaRewriteInfo_RowColumnInfo indexIsAffected:]
-[TSCEFormulaRewriteInfo_RowColumnInfo uuidForIndex:]
-[TSCEFormulaRewriteInfo_RowColumnInfo columnIndexForUuid:]
-[TSCEFormulaRewriteInfo_RowColumnInfo rowIndexForUuid:]
-[TSCEFormulaRewriteInfo_RowColumnInfo rowOrColumnIndices]
-[TSCEFormulaRewriteInfo_RowColumnInfo tableRange]
-[TSCEFormulaRewriteInfo_RowColumnInfo affectedRangeForRemoveRows]
-[TSCEFormulaRewriteInfo_RowColumnInfo affectedRangeForMoveRows]
insertInfo
-[TSCEFormulaRewriteInfo_RowColumnInfo uuidsInRange:]
-[TSCEFormulaRewriteInfo_RowColumnInfo uuidsForIndexes:]
%@ uuids: %@
<TSKUIDStructVector: %p>
-[TSTArrayNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTArrayNode.mm
Unexpected object in initAsCopyOf:... expected TSTArrayNode, got %@
-[TSTArrayNode string]
We shouldn't call the arrayNode's string method, because it won't actually return a proper tokenized string
-[TSTArrayNode insertFormulaText:includeWhitespace:]
invalid TSTArrayNode children
expected n-1 delimiter whitespace elements
-[TSTArrayNode buildASTNodeArray:hostCell:symbolTable:]
We don't support more than UINT16_MAX rows in an array
We don't support more than UIN8_MAX columns in an array
-[TSTListNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTListNode.mm
Unexpected object in initAsCopyOf:... expected TSTListNode, got %@
<%@ %p>
-[TSTListNode string]
We shouldn't call the listNode's string method, because it won't actually return a proper tokenized string
-[TSTListNode buildASTNodeArray:hostCell:symbolTable:]
TSCEValue TSCEEvaluationStack::valueForArgumentAtIndexSingletonMode(int, TSCEFunctionSpec *__unsafe_unretained, TSCEEvaluationContext &, TSCEFunctionArgSpec *, TSCEArgumentType, int)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEEvaluationStack.mm
unsupported computed reference type found. See TSCECalcEngine::referenceWasGuaranteedCleanAtRecalcCycleStart
TSCEValue TSCEEvaluationStack::valueForArgumentAtIndexSwitch(int, TSCEFunctionSpec *__unsafe_unretained, TSCEEvaluationContext &, TSCEFunctionArgSpec *, TSCEArgumentType, TSCEArgumentAccessorMode, int)
Invalid accessorMode (%d)
TSCEValue TSCEEvaluationStack::valueForArgumentAtIndex(int, TSCEFunctionSpec *__unsafe_unretained, TSCEEvaluationContext &)
Have to set argument count before you call valueForArgumentAtIndex()
void TSCEEvaluationStack::replaceArgumentAtIndex(int, TSCEValue)
cannot replace an invalid index
size_t TSCEASTStreamIterator::popEmbeddedSizeOffset()
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTStreamIterator.mm
Mismatch in push/popEmbeddedSizeOffset
void TSCEASTStreamIterator::pushIncompleteEmbeddedNode(TSCEASTElementWithChildren *)
Why are we pushing an incomplete embeddedNode multiple times?
virtual void TSCEASTStreamIterator::rewrite()
Unexpected incomplete embedded node type found
virtual TSCEArgumentType TSCEAbstractValue::nativeType() const
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEAbstractValue.mm
Subclasses must override nativeType
virtual TSCEValue TSCEAbstractValue::value() const
virtual NSString *TSCEAbstractValue::bakedString(TSULocale *__strong) const
Shouldn't get a reference type from deepType
these cases shouldn't happen
virtual BOOL TSCEAbstractValue::isNativelyEqual(const TSCEValue &, TSCEEvaluationContext *) const
isNativelyEqual not implemented for type: %d
virtual TSCEReferenceValue TSCEAbstractValue::reference(TSCEFunctionSpec *__unsafe_unretained, int, TSCEEvaluationContext *) const
virtual size_t TSCEAbstractValue::hash() const
subclasses must override TSCEAbstractValue::hash()
virtual TSCEASTNodeArray *TSCEAbstractValue::newCorrespondingAST(TSCEEvaluationContext &, TSCEFunctionSpec *__strong, int, bool) const
subclasses must override newCorrespondingAST
-[TSTGroupNodeFormatManager reset]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTGroupNodeFormatManager.mm
_cellValue
-[TSTGroupNodeFormatManager p_recalculateMergedFormatWithGroupBy:]
Expected duration format.
-[TSTGroupNodeFormatManager mergedFormatChangedByAddingRowUID:andCellValue:groupBy:]
format
groupBy
-[TSTGroupNodeFormatManager mergedFormatChangedByRemovingRowUID:groupBy:]
CellValue:%@
Cache:%@
-[TSTGroupNodeFormatManager updateWithDocumentRoot:]
-[TSTGroupNodeFormatManager initWithArchive:]
Expected equal size arrays for the format dictionary.
-[TSTGroupNodeFormatManager encodeToArchive:forGroupBy:backwardCompat:]_block_invoke
-[TSTStringNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTStringNode.mm
Unexpected object in initAsCopyOf:... expected TSTStringNode, got %@
\U201C\U2006\U201D
\U201C%@\U201D
-[TSTStringNode insertFormulaText:includeWhitespace:]
StringNode shouldn't have any children
-[TSTStringNode buildASTNodeArray:hostCell:symbolTable:]
-[TSTDateNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTDateNode.mm
Unexpected object in initAsCopyOf:... expected TSTDateNode, got %@
-[TSTDateNode insertFormulaText:includeWhitespace:]
DateNode shouldn't have any children
-[TSTDateNode buildASTNodeArray:hostCell:symbolTable:]
DATE(%ld%@%ld%@%ld)
(DATE(%ld%@%ld%@%ld)+TIMEVALUE(TIME(%ld%@%ld%@%ld)))
<%@ %p>: '%@'%@
 (BLANK)
-[TSTReferenceNode initWithContext:calculationEngine:uidRectRef:categoryRef:hostCellRef:referenceColorHelper:suppressAutomaticNamedReferenceInvalidation:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTReferenceNode.mm
Expected uidRectRef to have same calculation engine as the one that was passed in.
-[TSTReferenceNode initWithReferenceStart:referenceEnd:suppressAutomaticNamedReferenceInvalidation:]
Creating a range reference with two references with different ownerUIDs
Creating a range reference with two references with different calculationEngines
-[TSTReferenceNode initAsCopyOf:intoContext:children:]
Unexpected object in initAsCopyOf:... expected TSTReferenceNode, got %@
unable to resurrect calcEngine in document context.
+[TSTReferenceNode p_spanningCategoryRefForViewRangeRef:groupByUid:categoryLevel:calculationEngine:]
trying to create a spanning category summary ref to more than one column
-[TSTReferenceNode p_categoryRefViewTractRef]
invalidCellTractRef
expected to create an invalid cell tract ref
-[TSTReferenceNode categoryRefTableUID]
asking a non-category ref node for its category ref table UID
-[TSTReferenceNode setHostTableUID:]
invalid tableUID
-[TSTReferenceNode referenceAsStringWithContext:]
nil calculationEngine.  Can't generate string for categoryRefNode.
nil calculationEngine.  Can't generate string for referenceNode.
-[TSTReferenceNode referenceAsStringWithContext:]_block_invoke
-[TSTReferenceNode insertFormulaText:includeWhitespace:]
ReferenceNode shouldn't have any children
-[TSTReferenceNode buildASTNodeArray:hostCell:symbolTable:]
-[TSTReferenceNode exportString]
%@ :: 
-[TSTReferenceNode excludeSummaryAndLabelRows]
Need a calcEngine set to do this
-[TSTReferenceNode loadFromArchive:unarchiver:]
Invalid TSTReferenceNode archive
TSCECellRefSet TSCEInternalCellRefSet::asCellRefSet(TSCEDependencyTracker *) const
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEInternalCellRefSet.mm
Need a dependency tracker to do this conversion
v32@?0r^S8r^v16^B24
-[TSTPencilAnnotation initWithContext:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTPencilAnnotation.mm
v16@?0@"TSDPencilAnnotationStorage"8
-[TSTPencilAnnotation loadFromArchive:unarchiver:]
A TSTPencilAnnotation must have a pencilAnnotationStorage
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTInsertRowsRewriter.mm
virtual TSCEASTElement *TSCEASTInsertRowsRewriter::uidReferenceNode(TSCEASTUidReferenceElement *)
TSCEASTInsertRowsRewriter - only move rows uses uuid-form references
virtual TSCEASTElement *TSCEASTRewriteUsingValuesRewriter::binaryInfixOperatorNode(TSCEASTBinaryElement *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTRewriteUsingValuesRewriter.mm
evaluation stack is too small
virtual TSCEASTElement *TSCEASTRewriteUsingValuesRewriter::unaryOperatorNode(TSCEASTUnaryElement *, BOOL)
virtual TSCEASTElement *TSCEASTRewriteUsingValuesRewriter::linkedRefNode(TSCEASTLinkedRefElement *)
Unsupporeted by TSCEASTRewriteUsingValuesRewriter: linkedRefNode
virtual TSCEASTElement *TSCEASTRewriteUsingValuesRewriter::uidReferenceNode(TSCEASTUidReferenceElement *)
Unsupporeted by TSCEASTRewriteUsingValuesRewriter: uidReferenceNode
virtual TSCEASTElement *TSCEASTRewriteUsingValuesRewriter::letBindNode(TSCEASTLetBindElement *)
Not expecting let usage in this rewriter
virtual TSCEASTElement *TSCEASTRewriteUsingValuesRewriter::letVariableNode(TSCEASTLetVariableElement *)
virtual TSCEASTElement *TSCEASTRewriteUsingValuesRewriter::letEndScopeNode(TSCEASTLetEndScopeElement *)
TSCEValue TSCEASTRewriteUsingValuesRewriter::evaluationResult()
an evaluation result is undefined
bool TSCEASTRewriteUsingValuesRewriter::rewriteFunctionCallByRemovingNumberToDateCoercions(uint16_t, uint32_t)
All TSCEASTRewriteUsingValuesRewriter callbacks need to adjust _evaluationStackElementOriginSizes and _copiedNodes appropriately.
-[TSTDurationNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTDurationNode.mm
Unexpected object in initAsCopyOf:... expected TSTDurationNode, got %@
-[TSTDurationNode insertFormulaText:includeWhitespace:]
DurationNode shouldn't have any children
-[TSTDurationNode buildASTNodeArray:hostCell:symbolTable:]
DURATION(%g%@%g%@%g%@%g%@%g%@%g)
-[TSTDurationNode date]
We shouldn't ask a Duration for its date.
-[TSTDurationNode format]
We shouldn't ask a Duration for its format.
sLocalizedTrue
sLocalizedTrueStrings
sLocalizedFalse
sLocalizedFalseStrings
mappings_functionLocalizationDictionary
mappings_localizedTypeStringForArgumentType
an error
an empty cell
empty
a number
a string
a Boolean
a date
a reference
a vector
a duration
anything
a number, date, or duration
localizedFunctionNameForMenuTag
Mean
Median
Mode
localizedNameForFunction:
-[TSULocale(TSCELocalization) localizedNameForFunction:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCELocalization.mm
ERROR: No localized name found for '%@', reverting to english name.
%@_TOOLTIP
localizedCategoryForFunction:
%@_ARGUMENT_%d
%@_ARGUMENT_%d_TOOLTIP
%@_ARGUMENT_%d_MODE_%d
%@_ARGUMENT_%d_MODE_%d_TOOLTIP
arguments
Localizable
strings
-[TSULocale(TSCELocalization) localizedNamesForFunctions:]
Either %@ was translated improperly, or some other function was translated to the same name.
localizedFunctionCategoryDictionary
Date and Time
Engineering
Financial
Logical and Information
Reference
Numeric
Trigonometric
Statistical
Text
localizedCategoryArray
allLocalizedFunctions
localizedLabelForAggType
No Summary
Count (All)
Average (All)
Minimum
Maximum
Category
Group Name
Label
Count
Count (Unique)
Rows
Count (Duplicates)
Count (Blank)
Average
Product
RANGE
localizedShortLabelForAggType
Count All
Average All
Min.
Max.
Unique
Count Duplicates
Count Blank
Base Value
% of Grand Total
% of Column Total
% of Row Total
% of Parent Column Total
% of Parent Row Total
Index
incbet
-[TSTArgumentPlaceholderNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTArgumentPlaceholderNode.mm
Unexpected object in initAsCopyOf:... expected TSTArgumentPlaceholderNode, got %@
-[TSTArgumentPlaceholderNode copyIntoContext:bakeModes:children:]
Unexpected mode value type
value
-[TSTArgumentPlaceholderNode detokenizedText]
expected set placeholder node to return a different node for bakedValue
-[TSTArgumentPlaceholderNode buildASTNodeArray:hostCell:symbolTable:]
ArgumentPlaceholderNode shouldn't have children
-[NSDate(TSCEAdditions) tsce_weekNumberForType:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECalculationUtilities.mm
Incorrect month number in function WEEKNUM
Incorrect type number in function WEEKNUM.
BOOL TSCEValueHasError(const TSCEValue &, int, TSCEEvaluationContext *)
actual values shouldn't have TSCEAnyArgumentType
actual values shouldn't have TSCEDurationArgumentType
actual values shouldn't have TSCENoCoerceScalarArgumentType
NSComparisonResult TSCECaseInsensitiveCompareValues(const TSCEValue &, const TSCEValue &, TSCEEvaluationContext &)
TSCEInvalidComparisonError should not be raised when both numbers are durations
TSCEInvalidComparisonError should not be raised when both numbers are currencies
Dimension here should be duration, TSCEInvalidComparisonError should not be raised if it's a currency
TSCEInvalidComparisonError should not be raised when both numbers have no units
We should never reach here unless you pass in nodes with unsupported types, leftType: %d rightType: %d
+[(){}^$|\./
.{1}
NSString *TSCEConvertWildcardStringToICURegex(NSString *__strong)
We don't want to quote a character that doesn't need to be quoted.
BOOL TSCEValueSufficesForArgumentType(const TSCEValue &, TSCEArgumentType, TSCEArgumentType, TSCEArgumentType, TSCEEvaluationContext *)
empty arguments should never be required
TSCEValue TSCEMultifactorial(TSCEFunctionSpec *__strong, TSCEValue, TSCENumberValue, TSCENumberValue, TSCEEvaluationContext *)
Multifactorial shouldn't have i less than zero.  Please file a bug.
TSCEValue TSCEEvaluateAverageIgnoringError(TSCECalculationEngine *__strong, TSUCellCoord, const TSCEOwnerUID &, TSCERangeCoordinate, const TSCEOwnerUID &)
Unregistered tableUID found when calculating average
NSDictionary<NSString *,NSMutableIndexSet *> *TSCEEvaluateUniqueIgnoringError(TSCECalculationEngine *__strong, TSUCellCoord, const TSCEOwnerUID &, TSCERangeCoordinate, const TSCEOwnerUID &)
Unregistered tableUID found when calculating unique
TSCEValue TSCEEvaluateLargeOrSmallIgnoringError(TSCECalculationEngine *__strong, TSUCellCoord, const TSCEOwnerUID &, TSCERangeCoordinate, const TSCEOwnerUID &, BOOL, double, BOOL)
Unregistered tableUID found when calculating large/small
TSCEValue TSCEEvaluateCountIgnoringError(TSCECalculationEngine *__strong, TSUCellCoord, const TSCEOwnerUID &, TSCERangeCoordinate, const TSCEOwnerUID &)
Unregistered tableUID found when calculating count
-[TSTPostfixOperatorNode insertFormulaText:includeWhitespace:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTPostfixOperatorNode.mm
PostfixOperatorNode doesn't have one argument
-[TSTPostfixOperatorNode buildASTNodeArray:hostCell:symbolTable:]
-[TSTStrokeDefaultVendor enumerateLayerAndStackForGridRowRange:options:usingBlock:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTStrokeDefaultVendor.mm
only handling normal and reverse enumeration
-[TSTStrokeDefaultVendor enumerateLayerAndStackForGridColumnRange:options:usingBlock:]
-[TSTStrokeDefaultVendor p_strokeTypeForColumn:]
expected a pivot table for footer columns
-[TSTStrokeDefaultVendor p_updateStrokeLayer:forColumnStrokeType:]
unexpected column strokeType %zu
-[TSTStrokeDefaultVendor p_updateStrokeLayer:forRowStrokeType:]
unexpected row strokeType %zu
-[TSCEDenseGrid initWithValueGrid:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEDenseGrid.mm
Warning, making a TSCEDenseGrid with a non-zero based offset: %@
-[TSTUidCoordsPerRunningCellValue getUidCoordforRunningAggregate:tupleForCoord:newUidCoord:addNewUidCoordEvenIfNotFound:inContext:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTRunningTotalContext.mm
Got a too-large insertIndex: %lu
-[TSTRunningTotalContext getPreviousUidCoordForAggIndex:fromNewUidCoord:addNewUidCoordEvenIfNotFound:]
We need to locate (or create) a tuple
365.2425
14593.9
453.59237
28.349523125
1.6605390402E-24
0.06479891
1609.344
.9144
.3048
.0254
1E-10
1.143
30,856,775,814,913,673
1609.347218694
6894.75729
133.3223684210526
1E-5
4.4482216152605
0.009806649999788
1E-7
4.184
4.1868
1.602176634E-19
1.3558179483314
1055.05585257348
745.69987158227022
735.49875
1.25
4046.872609874252
1E-20
0.092903
.0295735295625
0.473176473
0.56826125
0.946352946
3.785411784
0.005
1.13652
4.54609
1E-30
35.2391
28.3168
0.0163871
0.44704
0.3048
1.852
grain
shweight
uk_cwt
lcwt
hweight
stone
uk_ton
LTON
brton
Pica
Picapt
parsec
survey_mi
mmHg
Torr
pond
Rank
Reau
tbsp
fl oz
us_pt
uk_pt
tspm
uk_qt
uk_gal
ang3
ang^3
barrel
bushel
ft^3
in^3
ly^3
mi^3
yd^3
Nmi3
Nmi^3
Picapt3
Picapt^3
Pica3
Pica^3
regton
MTON
mi/h
m/sec
mi/mn
ft/mn
ft/s
m/hr
m/mn
admkn
uk_acre
us_acre
ang2
ang^2
ft^2
in^2
ly^2
Morgen
mi^2
Nmi2
Nmi^2
Picapt2
Picapt^2
Pica2
Pica^2
yd^2
byte
+[TSCEUnitRegistry unitForCurrencyCode:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEUnitRegistry.mm
can't look up unit for a nil currency code
+[TSCEUnitRegistry canonicalUnitForDimension:]
Unknown dimension found in canonicalUnitForDimension
+[TSCEUnitRegistry multiplierForUnit:]
Shouldn't try to get the multiplier of an invalid unit prefix
Shouldn't try to get the multiplier of an unknown unit prefix
+[TSCEUnitRegistry convert:fromUnit:toUnit:]
Invalid unit found in convert:
Can't convert across dimensions.
+[TSCEUnitRegistry dimensionForUnit:]
unit out of bounds in dimensionForUnit:.
-[TSTPrefixOperatorNode insertFormulaText:includeWhitespace:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTPrefixOperatorNode.mm
PrefixOperatorNode doesn't have one argument
-[TSTPrefixOperatorNode buildASTNodeArray:hostCell:symbolTable:]
-[TSTFunctionEndNode insertFormulaText:includeWhitespace:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTFunctionEndNode.mm
We shouldn't ever buildFormulaText: with a functionEndNode
-[TSTFunctionEndNode buildASTNodeArray:hostCell:symbolTable:]
We shouldn't ever buildASTNodeArray: with a functionEndNode
const TSCEValue TSCEValueBindingEnvironment::lookup(const TSCESymbol &)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEValueBindingEnvironment.mm
unbound symbol found: %u
void TSCEValueBindingEnvironment::endScope()
_undoSymbols is empty at endScope() - beginScope() never called?
TSCEFunctor(%u args)=%@
TSCECellValue *TSCEFunctor::evaluateWithArgs(NSArray *__strong, TSCECalculationEngine *__strong)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFunctor.mm
Wrong number of arguments for functor: %@, args: %@
-[TSTCellFormatAndValue stringValue]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellFormatAndValue.mm
Getting a non-string value as string from a TSTCellFormatAndValue.
-[TSTCellFormatAndValue richTextOrErrorTextStorageValue]
Getting a non-rich-text/non-formula-error value as rich text from a TSTCellFormatAndValue.
+[TSTCellFormatAndValue formatAndValueFromRichTextCell:updatingStorageWithBlock:]
expected rich text cell when creating format and value
-[TSTCellFormatAndValue initFromCell:useAllSpareFormats:forceNoContent:suppressApplyValue:applySpareFormatOnly:]
useAllSpareFormats and spareFormatOnly are mutually exclusive!
deprecated cell value type found
-[TSTCellFormatAndValue copyWithZone:]
-[TSTCellFormatAndValue numberOrCurrencyDecimalValue]
Getting a non-double value as double from a TSTCellFormatAndValue.
-[TSTCellFormatAndValue hasStringContentMatchingCell:]
no string content comparison implemented for value type %@
-[TSTCellFormatAndValue applyToCell:]
-[TSTCellFormatAndValue objectByRemovingPropertiesInMap:addingPropertiesInMap:updateInverseResetPropertyMap:updateInverseSetPropertyMap:]
shouldn't remove the value and format from a cell
-[TSTCellFormatAndValue initFromPropertyCommandMessage:unarchiver:]
rich text cells should have a rich text payload
-[TSTCellFormatAndValue saveToPropertyCommandMessage:archiver:]
Non-nil string resulted in NULL protobufString: '%@'
static NSDate *TSCEFinancialFunctions::prevCoupDateWithSettlement(NSDate *__strong, NSDate *__strong, int)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFinancialFunctions.mm
Setlement date should not be larger than maturity date
static NSDate *TSCEFinancialFunctions::nextCoupDateWithSettlement(NSDate *__strong, NSDate *__strong, int)
TSCEValue TSCEFunction_ACCRINT::evaluateWithContext(TSCEEvaluationContext &)
ACCRINT: should not reach here if numCoponsLeft is not 1
#%lu[%@]
%@<%p> for ownerUID %@:
Table %@ <- %@
Table %@, Uid: %@ <- %@
-[TSTPivotOwner registerWithCalcEngine:forTableModel:baseOwnerUID:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTPivotOwner.mm
_tableModel
-[TSTPivotOwner linkToCalcEngine:forTableModel:]
-[TSTPivotOwner setPivotSourceHeaderTract:]
pivot source header range expected to span all columns
Columns
Values
-[TSTPivotOwner p_setEmptyPivotTableLabels]
These labels are only for empty pivots
-[TSTPivotOwner p_setPivotHeaderCellsResettingPivotHidden:preservingStyles:]
Row group not found
Column group not found
v32@?0r^{TSKUIDStruct=QQ}8@"TSTPivotGroupingColumnOptions"16^B24
-[TSTPivotOwner p_formulaForCellCoord:runningTotalContext:]
Invalid ShowAs Type
-[TSTPivotOwner p_sortRowsInMode:sortDirection:columnIndex:level:aggregateIndex:resetLabels:]_block_invoke
Expected a valid category level for all body rows
-[TSTPivotOwner p_sortColumnsInMode:sortDirection:rowIndex:level:aggregateIndex:resetLabels:]_block_invoke
Expected a valid category level for all body columns
-[TSTPivotOwner p_sortFullTable:]
Full table sort is only appropriate for implicit sort modes.
v16@?0@"TSTPivotGroupingColumnOptionsMap"8
-[TSTPivotOwner evaluateFormulaAt:withCalcEngine:recalcOptions:]
Unexpected formulaCoord seen in TSTPivotOwner: %@
virtual NSDate *TSCECategoryRefValue::date(TSCEFunctionSpec *__unsafe_unretained, int, TSCEEvaluationContext *) const
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECategoryRefValue.mm
Error: couldn't resolve TSCECategoryRefValue
virtual NSString *TSCECategoryRefValue::rawString(TSCEFunctionSpec *__unsafe_unretained, int, TSULocale *__strong) const
virtual BOOL TSCECategoryRefValue::boolean(TSCEFunctionSpec *__unsafe_unretained, int, TSCEEvaluationContext *) const
virtual TSCERichTextStorage TSCECategoryRefValue::richTextStorage(TSCEFunctionSpec *__unsafe_unretained, int, TSCEEvaluationContext *) const
virtual TSCERichTextStorage TSCECategoryRefValue::rawRichTextStorage(TSCEFunctionSpec *__unsafe_unretained, int, TSCEEvaluationContext *) const
virtual TSCEGrid TSCECategoryRefValue::formattedGrid(TSCEFunctionSpec *__unsafe_unretained, int, TSCEEvaluationContext *, BOOL) const
virtual TSCENumberValue TSCECategoryRefValue::number() const
virtual NSDate *TSCECategoryRefValue::date() const
virtual size_t TSCEASTElement::size(TSCEASTIteratorBase *) const
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTElements.mm
Need to override size() method for derived element types.
TSCEASTAdditionNode
TSCEASTSubtractionNode
TSCEASTMultiplicationNode
TSCEASTDivisionNode
TSCEASTPowerNode
TSCEASTConcatenationNode
TSCEASTGreaterThanNode
TSCEASTGreaterThanOrEqualToNode
TSCEASTLessThanNode
TSCEASTLessThanOrEqualToNode
TSCEASTEqualToNode
TSCEASTNotEqualToNode
TSCEASTNegationNode
TSCEASTPlusSignNode
TSCEASTPercentNode
TSCEASTFunctionNode
TSCEASTFunctionLongNode
TSCEASTNumberNode
TSCEASTBooleanNode
TSCEASTStringNode
TSCEASTDateNode
TSCEASTDurationNode
TSCEASTEmptyArgumentNode
TSCEASTTokenNode
TSCEASTArrayNode
TSCEASTListNode
TSCEASTThunkNode
TSCEASTColonNode
TSCEASTReferenceErrorNode
TSCEASTUnknownFunctionNode
TSCEASTPrependWhitespaceNode
TSCEASTAppendWhitespaceNode
TSCEASTFunctionNodeWithWhitespace
TSCEASTCellReferenceNode
TSCEASTColonWithUidsNode
TSCEASTLinkedCellRefNode
TSCEASTLinkedColumnRefNode
TSCEASTLinkedRowRefNode
TSCEASTUidReferenceNode
TSCEASTLetBindNode
TSCEASTLetVarNode
TSCEASTLetEndScopeNode
TSCEASTCategoryRefNode
TSCEASTColonTractNode
TSCEASTViewTractRefNode
static NSString *TSCEASTElement::stringForTag(TSCEASTNodeTag)
%d is not a valid node tag
Tag: %@ @offset: %lu size=%lu
TSCEASTElement *TSCEASTElementWithChildren::setChildAtIndex(TSCEASTElement *, uint32_t, TSCEASTRewriter *)
Must set children in order
TSCEASTElement *TSCEASTElementWithUidTractsWithChildren::setChildAtIndex(TSCEASTElement *, uint32_t, TSCEASTRewriter *)
void TSCEASTElementWithUidTracts::setRefFlags(TSCEASTRefFlags, TSCEASTIteratorBase *)
Don't call setRefFlags() on this type until it supports them
TSCERangeRef TSCEASTColonElement::rangeReference(TSCEASTIteratorBase *, TSUPreserveFlags &, const TSUCellCoord &)
A calculationEngine needs to be set on this rewriter to use TSCEASTColonElement::rangeReference() method.
void TSCEASTColonTractElement::setTableUID(const TSCEOwnerUID &, TSCEASTIteratorBase *)
TableUID must already been set once to use this API.  Otherwise, this is changing the element's size.
virtual size_t TSCEASTFunctionElement::size(TSCEASTIteratorBase *) const
Unknown tag for TSCEASTFunctionElement: %d
void TSCEASTFunctionElement::setNumArgs(uint32_t, TSCEASTIteratorBase *)
Unhandled function tag: %d
static size_t TSCEASTWhitespaceElement::appendWhitespaceElement(TSCEASTNodeArray *, TSCEASTNodeTag, NSString *__strong)
Not a whitespace tag
static TSCECellTractRef *TSCEASTRelativeCoordRefElement::tractRefUsingUuids(TSCEASTIteratorBase *, const TSCEOwnerUID &, const TSKUIDStructVector &, const TSKUIDStructVector &, TSCEMutableUIDSet *__autoreleasing &, TSCEMutableUIDSet *__autoreleasing &, BOOL)
How can we be spanning in both rows and columns.
static bool TSCEASTRelativeCoordRefElement::expandTractRefUsingUuids(TSCEASTIteratorBase *, const TSCEOwnerUID &, TSCECellTractRef *__strong, const TSKUIDStructVector &, TSKUIDStructVector &, BOOL)
Don't use this method for non-existing ranges, use tractRefUsingUuids() instead.
static bool TSCEASTRelativeCoordRefElement::expandRangeCoordinateUsingUuids(TSCEASTIteratorBase *, const TSCEOwnerUID &, TSCERangeCoordinate &, const TSKUIDStructVector &, TSKUIDStructVector &, BOOL)
Don't use this method for non-existing ranges, use rangeCoordinateUsingUuids() instead.
void TSCEASTRelativeCoordRefElement::setTableUID(const TSCEOwnerUID &, TSCEASTIteratorBase *)
Cannot use setTableUID on a tag that isn't already cross-table
void TSCEASTRelativeCoordRefElement::setRelativeCoord(const TSCERelativeCellCoordinate &, TSCEASTIteratorBase *)
Can't setRelativeCoord on type: %d
Can't use setRelativeCoord to switch from spanning (%d,%d) to not spanning (%d,%d)
TSCECrossTableReference TSCEASTRelativeCoordRefElement::crossTableRef(TSCEASTIteratorBase *) const
Incorrect tag for use with crossTableRef: %d
virtual TSCECellRef TSCEASTRelativeCoordRefElement::absoluteCellRef(TSCEASTIteratorBase *, const TSUCellCoord &) const
Invalid tag: %d
void TSCEASTUidReferenceElement::setTableUID(const TSCEOwnerUID &, TSCEASTIteratorBase *)
void TSCEASTViewTractRefElement::setTableUID(const TSCEOwnerUID &, TSCEASTIteratorBase *)
void TSCEASTNodeArray::write(const T &) [T = TSCEBaseUnit]
void TSCEASTNodeArray::write(const T &) [T = unsigned char]
void TSCEASTNodeArray::write(const T &) [T = TSUDurationStyle]
void TSCEASTNodeArray::write(const T &) [T = bool]
void TSCEASTNodeArray::write(const T &) [T = short]
virtual TSCEASTNodeArray *TSCENilValue::newCorrespondingAST(TSCEEvaluationContext &, TSCEFunctionSpec *__strong, int, bool) const
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCENilValue.mm
nil values are unexpected on the evaluation stack
Malformed Reference Node - Unexpected Path Delimiter
Malformed Reference Node
TSCEASTNodeArray *processReference(TSCEParser *, TSCEASTNode *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECAST.mm
Wrong parser state?
Missing sibling in function call
Malformed Reference Node - Function with trailing crap
Whitespace missing between leaves.
Too many nodes inside a reference node
id TSCEASTLeafGetString(TSCEASTLeaf *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECAST.h
Can't have a string type leaf with type function.
TSCEASTNodeArray *TSCEASTLeafGetFunction(TSCEASTLeaf *)
Can't have a non function type leaf return a function.
TSCEOwnerUID formulaOwnerUIDFromNativeIDString(NSString *__strong, TSCECalculationEngine *__strong, TSCEFormulaSyntaxType)
ResolverId_
We should have successfully registered the parsedOwnerID: %@
Invalid Reference
void gatherNativeReferenceInformation(TSCERegionAllocator *__strong, TSCEASTLeaf *, TSCEOwnerUID, TSCERangeCoordinate *, TSUPreserveFlagsEnum *, NSString *__autoreleasing *, NSString *__autoreleasing *, TSCEASTLeaf **)
We shouldn't have quoted labels on import
-[TSTHiddenStates copyFromHiddenStates:forRange:withContext:isWholeTableCopy:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTHiddenStates.mm
Failed to hide row during copy.
Failed to hide column during copy.
-[TSTStrokeSidecarIterator initWithStrokeSidecar:region:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTStrokeSidecarIterator.mm
-[TSTStrokeSidecarIterator updateCellData:]
invalid cellID in cellData
cellID %@ should be before cursor cellID %@
TSCEASTElement *TSCEASTElementIterator::nextElement()
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTElementIterator.mm
virtual void TSCEASTElementIterator::rewrite()
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTElementIterator.h
No rewrite method implemented for this class - use nextElement() API, or derive from a different AST iterator base class
-[TSTGroupBy didCreateGroup:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTGroupBy.mm
_deferredGroupByChangeNotifications
-[TSTGroupBy willRemoveGroup:]
-[TSTGroupBy didRemoveGroup:]
-[TSTGroupBy didAddRowUID:toGroup:]
-[TSTGroupBy didRemoveRowUID:fromGroup:]
-[TSTGroupBy startOfGroupingChangesBatch]
-[TSTGroupBy endOfGroupingChangesBatch]
-[TSTGroupBy didChangeGroupByStructure]
v16@?0@"TSTGroupNode"8
-[TSTGroupBy encodeToArchive:archiver:backwardCompatOptions:]
Caller should already have tested we think we can fit in a single message.
Wasn't expecting this not set
-[TSTGroupBy updateWithDocumentRoot:]
-[TSTGroupBy changeForSettingGroupingColumnList:]
New grouping column list is nil
-[TSTGroupBy mapGroupUidsForChange:]
wrong groupByUid
-[TSTGroupBy _addAggregates:atLevel:]
-[TSTGroupBy _removeAggregates:]
-[TSTGroupBy runChange:withAggregates:]
Uh, we were expecting this to be us
-[TSTGroupBy usesPrePivotAggregateTypesOnly]
Should never see TSCEAggType_Indirect on a columnAggregate
-[TSTGroupBy setAggregateType:forColumnUID:atGroupLevel:]
aggType of (%d) is not a valid aggregate type for an entire column
-[TSTGroupBy findGroupNodeForValue:atLevel:createIfMissing:]
Was expecting to have created a groupNode for this groupValue: %@
-[TSTGroupBy beginDeferringRebuildFormulas]
overflow in beginDeferringRebuildFormulas
-[TSTGroupBy endDeferringRebuildFormulas]
endDeferringRebuildFormulas called without matching beginDeferringRebuildFormulas - avoided underflow
-[TSTGroupBy deferGroupByChangeNotifications]
overflow in deferGroupByChangeNotifications
-[TSTGroupBy resumeGroupByChangeNotifications]
resumeGroupByChangeNotifications called without matching deferGroupByChangeNotifications - avoided underflow
-[TSTGroupBy resetGroupings]
Can't resetGroupings with no calcEngine
-[TSTGroupBy insertRowUids:]
Column missing from table model when grouping
-[TSTGroupBy createAggregatorsIfMissingAndAssert:]
No TSTAggregator found for column %@
Couldn't create an aggreator for column: %@
-[TSTGroupBy isValidCategoryRef:]
%@: %@
<Relative Ancestor>
-[TSTGroupBy captureCategoryRefsFromIterator:atLevel:asSpanning:]_block_invoke
formula
-[TSTGroupBy captureCategoryLabelRefsForViewRegion:atLevel:asSpanning:forRows:]_block_invoke_2
No level for agg function labels!
-[TSTGroupBy prettyStringForCategoryRef:forHostCellRef:namingContext:]
-[TSTGroupBy rowUIDForLookupKey:]
Warning, rowUidLookupList is empty, we're not going to find anything.
blank
(error)
+[TSTGroupBy validateNumberOfGroupsForGroupingColumnList:sourceTableModel:sourceBodyTract:limit:groupNodeCount:]
Column missing from table model when validating
TSCEDependencyTracker::~TSCEDependencyTracker()
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEDependencyTracker.mm
dirty cell batching must not be left on when a command finishes!
TSCEOwnerRegistrationCat
TSUError TSCEDependencyTracker::registerOwner(TSCEInternalFormulaOwnerID, __strong id<TSCEFormulaOwning>, TSCESubFormulaOwnerIndex)
registerOwner() doesn't accept class: %@ (not id<TSCEFormulaOwning>)
void TSCEDependencyTracker::resetAllExternalFormulasReferringToOwnerUIDs(const TSCEOwnerUIDVector &, __strong id<TSCEFormulaReplacing>)
Need upgradeMinion for resetAllExternalFormulasReferringToOwnerUIDs
void TSCEDependencyTracker::dgl_replaceCellWithFormula(TSCEInternalFormulaOwnerID, TSUCellCoord, TSCEReferenceSetWrapper *__strong, TSCEReplaceFormulaOptions)
Attempting to call dgl_replaceCellWithFormula with an invalid coord: %@
void TSCEDependencyTracker::dgl_replaceCellWithFormula(TSCEInternalFormulaOwnerID, TSUCellCoord, TSCEReferenceSetWrapper *__strong, TSCEReplaceFormulaOptions)_block_invoke_3
nonspanning range %{public}@ found in a spanning reference
v24@?0r^{TSCESpanningRangeRef={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}C}8^B16
v24@?0r^{TSKUIDStruct=QQ}8^B16
v32@?0r^{TSKUIDStruct=QQ}8r^{TSKUIDStruct=QQ}16^B24
v24@?0@"TSCECategoryRef"8^B16
void TSCEDependencyTracker::dgl_replaceCellWithFormula(TSCEInternalFormulaOwnerID, TSUCellCoord, TSCEReferenceSetWrapper *__strong, TSCEReplaceFormulaOptions)_block_invoke_9
unimplemented reference type found: %d
failure adding a formula
void TSCEDependencyTracker::replaceCellWithFormula(const TSCEOwnerUID &, TSUCellCoord, TSCEReferenceSetWrapper *__strong, TSCEReplaceFormulaOptions)
Not expecting insane, or spanning coordinates here: (%lu,%lu)
void TSCEDependencyTracker::dgl_replaceRemoteDataKeysInterestedInForCell(const TSCECellRef &, TSCERemoteDataSpecifierSet *__strong)
Attempted to replace remote data key interest in a cell whose owner isn't registered.
void TSCEDependencyTracker::endSuppressingWillModifyCalls()
not suppressing willModify calls, so cannot end suppressing them
BOOL TSCEDependencyTracker::endBatchingGroupCellDirtying()
cannot end group cell dirtying batching if it is not already on.
void TSCEDependencyTracker::encodeToArchive(TSCE::DependencyTrackerArchive &, BOOL, BOOL, TSPArchiver *__strong)
failed to get an object to archive for a formula owner that needs registration. Registration failure at unarchive time is likely.
TSCEDependencyTracker::TSCEDependencyTracker(const TSCE::DependencyTrackerArchive &, TSPUnarchiver *__strong, TSCECalculationEngine *__strong)_block_invoke
Unarchiving formulaOwnerDependencies: Want to replace owner %@ (%lu) with %@ (%lu) - highly unexpected
v16@?0@"TSPObject<TSCECalculationEngineRegistration>"8
void TSCEDependencyTracker::upgradeToSubOwnerUIDForOwners(TSTOwnerUidMapper *__strong)
Not expecting tableUID to be changing
virtual TSCEASTElement *TSCEASTNodeFormulaStringIterator::binaryInfixOperatorNode(TSCEASTBinaryElement *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTNodeFormulaStringIterator.mm
virtual TSCEASTElement *TSCEASTNodeFormulaStringIterator::unaryOperatorNode(TSCEASTUnaryElement *, BOOL)
virtual TSCEASTElement *TSCEASTNodeFormulaStringIterator::colonNode(TSCEASTColonElement *)
%@%@%@%@%@%@
%@%@%@%@%@
%.17G
DATE(%li,%li,%li)
(DATE(%li,%li,%li)+TIMEVALUE(TIME(%li,%li,%li)))
DURATION(%@,%@,%@,%@,%@,%@)
%C%C
virtual TSCEASTElement *TSCEASTNodeFormulaStringIterator::uidReferenceNode(TSCEASTUidReferenceElement *)
Shouldn't see uid-form references when making Sage formula strings.
virtual TSCEASTElement *TSCEASTNodeFormulaStringIterator::viewTractRefNode(TSCEASTViewTractRefElement *)
Shouldn't see view cellRef references when making Sage formula strings.
NSString *TSCEASTNodeFormulaStringIterator::formulaString()
Unable to properly create a formula string. Possibly a bad ASTNodeArray?
virtual TSCEASTElement *TSCEASTNodeFormulaStringIterator::letBindNode(TSCEASTLetBindElement *)
Let nodes should have been removed prior to Sage export
virtual TSCEASTElement *TSCEASTNodeFormulaStringIterator::letVariableNode(TSCEASTLetVariableElement *)
Variable nodes should have been removed prior to Sage export
void TSCEASTNodeFormulaStringIterator::processOperatorNode(NSString *__strong)
void TSCEASTNodeFormulaStringIterator::processPostfixOperatorNode(NSString *__strong)
void TSCEASTNodeFormulaStringIterator::processPrefixOperatorNode(NSString *__strong)
void TSCEASTNodeFormulaStringIterator::processFunctionNode(uint32_t, TSCEFunctionSpec *__strong, NSString *__strong, NSString *__strong)
Have to either specify a function spec or an unknown function name.
%s error
unknown
domain
singularity
overflow
underflow
total loss of precision
partial loss of precision
TSTLookupKeyCoord::TSTLookupKeyCoord(TSCEUidLookupKey, TSCEUidLookupKey)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellUIDLookupList.mm
Can't support a column key larger than %lu
Can't support a row key larger than %lu
TSTCellUIDLookupList::TSTCellUIDLookupList(const TSTCellUIDLookupList &, TSTTableInfo *__strong, TSTPruneBehavior, BOOL (^__strong)(const TSTCellUID &, NSUInteger))
Oh in what case do we need to prune away base cells?
Allowing both summary cells and wildcards makes little sense
Allowing both label cells and wildcards makes little sense
fdtr
fdtri
Remote Data Store
Remote Data Store Update
-[TSCERemoteDataStore dealloc]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCERemoteDataStore.mm
Failed to unregister store before dealloc
-[TSCERemoteDataStore registerWithCoordinator]_block_invoke
Store is already registered!
-[TSCERemoteDataStore unregisterWithCoordinator]_block_invoke
Store is already unregistered!
-[TSCERemoteDataStore valueForRemoteData:]
Cold specifiers must have dates!
-[TSCERemoteDataStore cachedQuoteForSymbol:]
We're about to capture the coordinator's queue lock. We should NOT have the write lock at this time.
B24@?0@"NSString"8@"NSDictionary"16
-[TSCERemoteDataStore remoteDataDidUpdateValues:quotes:]
Shouldn't get an empty update!
-[TSCERemoteDataStore p_tsceValueFromTsceCellValue:]
Attempted to create a TSCEvalue from an unsupported TSCECellValue of class: %@
v24@?0@"TSCERemoteDataSpecifier"8^B16
-[TSCERemoteDataStore updateWithRemoteDataMap:quotes:syncKey:]
Should never get a docserver update for an unshared file!
v24@?0@"NSString"8^B16
-[TSTCellBorder applyToCell:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellBorder.mm
currentCellBorder
-[TSTCellBorder objectByRemovingPropertiesInMap:addingPropertiesInMap:updateInverseResetPropertyMap:updateInverseSetPropertyMap:]
shouldn't remove the cell border from a cell
-[TSTStrokeLayerAbstractStack p_strokeLayerVector]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTStrokeLayerStack.mm
-[TSTStrokeLayerAbstractStack count]
-[TSTStrokeLayerAbstractStack enumerateStrokesAndCapsInRange:usingBlock:]_block_invoke
should never see portal strokes here
-[TSTStrokeLayerAbstractStack enumerateStrokesAndCapsInRange:usingBlock:]
-[TSTStrokeLayerStack insertClearedStrokeAtRange:]
You can't add non-default strokes to a DefaultsOnly TSTStrokeLayerStack.
-[TSTStrokeLayerStack insertDynamicStroke:strokeOrder:atRange:]
-[TSTStrokeLayerStack insertSpillStroke:atRange:]
You can't add non-default strokes to a Defaults Only TSTStrokeLayerStack.
Fatal Assertion failure: %{public}s %{public}s:%d You can't add non-default strokes to a DefaultsOnly TSTStrokeLayerStack.
-[TSTStrokeLayerStack replaceCustomStrokeLayerWith:]
-[TSTStrokeLayerMergedStack lockForWrite]
-[TSTStrokeExporter p_strokeExportCacheForColumnBefore:columnAfter:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTStrokeExporter.mm
looking for two visible columns around the gridline
-[TSTStrokeExporter p_strokeExportCacheForRowAbove:rowBelow:]
looking for two visible rows around the gridline
TSCESymbol TSCESymbolTable::addSymbol(__strong TSCEIdentifier)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCESymbolTable.mm
can't add a symbol if not in any scope
<TSCESymbolTable %p>: 
%@: %u
void TSCESymbolTable::endScope()
Calling endScope() without beginScope()
-[TSTHiddenStateExtent setupAfterUnarchive]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTHiddenStateExtent.mm
-[TSTHiddenStateExtent p_addHiddenIndex:viewIndex:forAction:]
Not allowing user-hidden as view only
Not allowing pivot-hidden for base indexes.
-[TSTHiddenStateExtent hideAtUid:forAction:]
Can't show/hide at a uuid without a TSTTableTranslator to translate to an index
-[TSTHiddenStateExtent hideAtUid:forIndex:forViewIndex:forAction:]
Pivot Hiding not allowed on base rows or columns.
-[TSTHiddenStateExtent showAtUid:forAction:]
-[TSTHiddenStateExtent p_summaryFilteredIndexes]
translator
-[TSTHiddenStateExtent p_summaryPivotHiddenIndexes]
-[TSTHiddenStateExtent hideAtViewIndex:forAction:]
Can't show/hide at an index without a TSTTableTranslator to translate to uuid
-[TSTHiddenStateExtent showAtViewIndex:forAction:]
-[TSTHiddenStateExtent hideAtBaseIndex:forAction:]
-[TSTHiddenStateExtent showAtBaseIndex:forAction:]
-[TSTHiddenStateExtent clearAllFiltered]
Expected counts to match.
-[TSTHiddenStateExtent hidingActionForViewIndex:]
-[TSTHiddenStateExtent hidingActionForBaseIndex:]
-[TSTHiddenStateExtent indexOfVisibleAfterIndex:]
Can't use this method without a TSTTableTranslator to provide tableSize
-[TSTHiddenStateExtent indexOfVisibleAfterAndIncludingIndex:]
-[TSTHiddenStateExtent p_registerAllFormulasReturningCoords:]
Expecting at most one filter rule on a pivotTable
Only support PivotSourceFiltered filter for pivotTable
-[TSTHiddenStateExtent p_calculateTopOrBottomThresholdWithCalcEngine:formulaCoord:isTop:keyScale:]
Unexpected key scale found: %d
-[TSTHiddenStateExtent p_createThresholdCellValue:locale:]
Unexpected threshold value type found: %d
-[TSTHiddenStateExtent p_calculateUniqueDistinctIndexWithCalcEngine:formulaCoord:tableModel:rule:]
uniqueKeyToRowIndexes
-[TSTHiddenStateExtent evaluateFormulaAt:withCalcEngine:recalcOptions:]
should have nil _rewrittenFilterSet
Unexpected predicate type found when calculating threshold: %d
Only grandTotal predicates are supported for view indexes, not predType %d
Only expect this on pivot tables, atm.
-[TSTHiddenStateExtent setFilterSet:]
filterset should be in geometric form
@"TSCEFormulaObject"16@?0@"TSCEFormulaObject"8
v24@?0@"TSTEphemeralFilter"8^B16
Fatal Assertion failure: %{public}s %{public}s:%d Corrupt cell memory. Crashing!
UInt16 TSTCellStorageSizePreBNC(TSTCellStoragePreBNC *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellStorage_Deprecated.mm
Corrupt cell memory. Crashing!
BOOL TSTCellStorageVersionCheckPreBNC(TSTCellStoragePreBNC *)
Can't parse cell storage header version %d as PreBNC!
void TSTV1CellStorageToCell(TSTV1CellStorage *, TSTCell_PreBNC *__strong)
wrong version of the storage used here
Failed to process all storage elements in TSTV1CellStorageToCell! Starting flags:%u Final flags:%u
void TSTV3CellStorageToCell(TSTV3CellStorage *, TSTCell_PreBNC *__strong)
Failed to process all storage elements in TSTV3CellStorageToCell! Starting flags:%u Final flags:%u Starting format flags:%u Final format flags:%u
void TSTCellStorageToCell_PreBNC(TSTCellStoragePreBNC *, TSTCell_PreBNC *__strong)
Failed to process all storage elements in TSTCellStorageToCell! Starting flags:%u Final flags:%u Starting format flags:%u Final format flags:%u
void p_TSTCellToCellStoragePreBNC(TSTCell *__strong, TSTCellStoragePreBNC *, TSTNineKeyStructPreBNC *)
Failed to process all storage elements in TSTCellToCellStorage! Starting flags:%u Final flags:%u Starting format flags:%u Final format flags:%u
TSTMergeOwnerDetailedLogCat
-[TSTMergeOwner initWithTableModel:ownerUID:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTMergeOwner.mm
valid ownerUID is required
-[TSTMergeOwner mergeIndexesForRange:]
The tableModel must be set on the mergeOwner before this API can be used.
-[TSTMergeOwner isValidMergeRange:]
-[TSTMergeOwner insertBaseMergeRange:]
-[TSTMergeOwner removeBaseMergeRange:]
Unexpectedly not just removing one range
-[TSTMergeOwner performActionReturningInverse:formulaReplacer:]
Invalid merge action
-[TSTMergeOwner shrinkReturningInverseForBaseCellRegion:formulaReplacer:]
-[TSTMergeOwner p_growRangeFrom:toDesired:]
-[TSTMergeOwner p_growReturningInverseForAction:formulaReplacer:]
-[TSTMergeOwner rewriteMergesForRemovedRange:uids:isRows:]
-[TSTMergeOwner rewriteMergesForInsertedRange:uids:isRows:]
<%@: %p>
+[TSTCellSpec interactionTypeForShimControlFormatType:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellSpec.mm
Unconvertible format type.
+[TSTCellSpec shimControlFormatTypeForInteractionType:]
Unconvertible interaction type.
Stepper
Slider
Star Rating
Pop-Up Menu
Checkbox
TSTCellInteractionTypeValueEditing
TSTCellInteractionTypeFormulaEditing
TSTCellInteractionTypeStock
TSTCellInteractionTypeStepper
TSTCellInteractionTypeRating
TSTCellInteractionTypePopup
TSTCellInteractionTypeToggle
TSTCellInteractionTypeCategorySummary
-[TSTSortRuleReferenceTracker p_columnForTrackedReference:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTSortRuleReferenceTracker.mm
Ranges should be one column!
-[TSTSortRuleReferenceTracker updateForSortRules:]
Couldn't track reference!
-[TSTSortRuleReferenceTracker setOwnerUID:]
You should have called setBaseTableUID: instead (it sets both base and subOwner UIDs
void TSCEWholeOwnerDependencies::readFromArchive(const TSCE::WholeOwnerDependenciesArchive &)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEWholeOwnerDependencies.mm
NULL whole owner dependencies
void TSCEWholeOwnerDependencies::unpackAfterUnarchive()_block_invoke
bool TSCEWholeOwnerDependencies::addOwnerReference(const TSCEInternalCellReference &)
TSTLayoutEngineDidChangeEmptyFilteredState
cell id to wp column $
dup $
temp wp column $
layout engine concurrent queue
table fonts and metric cache
<%@:%p "%@" range:%@ dynamic_mode:%@ >
TSTCellRange TSTLayoutEngineGetRangeForHint(TSTLayoutEngine *__strong, TSTLayoutHint *__strong)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTLayoutEngine.mm
layoutHint
-[TSTLayoutEngine numberOfRows]
Size invariants violated by dynamic add/remove
-[TSTLayoutEngine numberOfColumns]
B32@?0{TSUCellRect={TSUCellCoord=ISBB}{?=II}}8^B24
v36@?0I8@"TSTStrokeLayer"12@"TSTStrokeLayerStack"20^B28
d8@?0
B24@?0@8^B16
v32@?0@"TSTChangeDescriptor"8Q16^B24
v76@?0{TSUCellRect={TSUCellCoord=ISBB}{?=II}}8d24{UIEdgeInsets=dddd}32B64^B68
-[TSTLayoutEngine p_validateFittingInfoWithCellRangeWorker:widthHeightCollection:containsMerges:validationBundle:]_block_invoke
this layout pass should be only merge cells
v40@?0@"TSWPCharacterStyle"8{_NSRange=QQ}16^B32
-[TSTLayoutEngine p_containsGradientThatFillsContainerInStyle:]
style must be character or paragraph.
@"TSTWidthHeightCollection"24@?0{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}8
@32@?0@"<TSTCellIteratorData>"8@"TSTWidthHeightCollection"16@24
-[TSTLayoutEngine measureWithLayoutState:]
stringContents
v24@?0@"TSTCellStateForLayout"8^B16
#REF!:#REF!
-[TSTLayoutHint copyForArchiving]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTLayoutHint.mm
copy
-[TSTLayoutHint overlapsWithSelectionPath:]
selectionPath
B16@?0@"TSDDrawableSelection"8
-[TSTLayoutHint overlapsWithSelectionPath:]_block_invoke_2
Invalid cell selection index %lu for %@
B16@?0@"TSTCellSelection"8
ID: %@ 
Range: %@ 
-[TSWPParagraphStyle(CellDiffAdditions) objectByRemovingPropertiesInMap:addingPropertiesInMap:updateInverseResetPropertyMap:updateInverseSetPropertyMap:optionalConcurrentStylesheet:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSWPParagraphStyle+CellDiffAdditions.m
Can't specify both a text style and a text style change at the same time.
Stylesheet should not be nil. Attempting repair.
No usable style or stylesheet to vary against!
v32@?0i8C12@16^B24
-[TSTTablePartitioner initWithInfo:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTablePartitioner.m
Incorrect info class in the table partitioner!
-[TSTTablePartitioner measureCellRangeForNextPartitionOfSize:previousHint:horizontally:]
Partitioner can't continue from an invalid range.
-[TSTTablePartitioner calculateCellRangeForNextPartition:nextPartitionRange:additionalHeightForCaption:availableSizeRemaining:previousHint:]
Partitioner measured an invalid range.
-[TSTTablePartitioner nextHintForSize:parentLayout:previousHint:horizontally:outFinished:]
previousHint must be nil, or of type TSTLayoutHint.
Hint is for the wrong table info.
-[TSTTablePartitioner p_didFinishPartitioningHint:horizontally:]
Horizontal partitioning went beyond the table bounds!
Vertical partitioning went beyond the table bounds!
-[TSTTablePartitioner partitioningPassForFirstPartitionSize:]
partitioningPassForFirstPartitionSize: Invalid partition size
(%@,%@)
chdtrc
chdtri
-[TSCEFormulaOwnerDependencies unpackAfterUnarchive]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFormulaOwnerDependencies.mm
_cellDependencies->dependencyTracker()
-[TSCEFormulaOwnerDependencies saveToArchiver:]
-[TSCEFormulaOwnerDependencies resetOwnerUIDForUpgrade:forBaseOwner:ownerKind:]
OwnerIndex must be set to use this method
Tables cannot use this method
Charts cannot use this method
Fatal Assertion failure: %{public}s %{public}s:%d Datalist segment range start out of bounds on set
-[TSTTableDataListSegment setKeyRange:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableDataListSegment.mm
Datalist segment range start out of bounds on set
Fatal Assertion failure: %{public}s %{public}s:%d Datalist segment range length out of bounds on set!
Datalist segment range length out of bounds on set!
Fatal Assertion failure: %{public}s %{public}s:%d Bad key during split enumeration!
-[TSTTableDataListSegment split]_block_invoke
Bad key during split enumeration!
Fatal Assertion failure: %{public}s %{public}s:%d New segment is empty during split!
-[TSTTableDataListSegment split]
New segment is empty during split!
Fatal Assertion failure: %{public}s %{public}s:%d Datalist segment changed during split!
Datalist segment changed during split!
Fatal Assertion failure: %{public}s %{public}s:%d Keys overlap during split!
Keys overlap during split!
Fatal Assertion failure: %{public}s %{public}s:%d Segment ranges are discontiguous!
Segment ranges are discontiguous!
Fatal Assertion failure: %{public}s %{public}s:%d Existing datalist segment range start out of bounds on split!
Existing datalist segment range start out of bounds on split!
Fatal Assertion failure: %{public}s %{public}s:%d Existing datalist segment range length out of bounds on split!
Existing datalist segment range length out of bounds on split!
Fatal Assertion failure: %{public}s %{public}s:%d New datalist segment range start out of bounds on split!
New datalist segment range start out of bounds on split!
Fatal Assertion failure: %{public}s %{public}s:%d New datalist segment range length out of bounds on split!
New datalist segment range length out of bounds on split!
Fatal Assertion failure: %{public}s %{public}s:%d Got an object with a bad key!
-[TSTTableDataListSegment objectAtIndexedSubscript:]
Got an object with a bad key!
Tables/DataList/Segment
v16@?0@"TSTTableDataObject"8
-[TSTTableDataListSegment saveToArchiver:]
Datalist segment range out of bounds on archive!
-[TSTTableDataListSegment loadObjectsFromDataListArchive:unarchiver:]
Need to set up a segment before doing an upgrade-type load of it!
-[TSTConcurrentCellIterator initWithTableInfo:tableModel:region:forcingRegion:clampingRect:flags:searchFlags:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTConcurrentCellIterator.mm
XOR expectation on getting a tableInfo or tableModel.
-[TSTConcurrentCellIterator enumerateModelConcurrentlyUsingChunkBeginBlock:concurrentBlock:finalBlock:]
You must initialize the iterator with a TSTTableModel to use this enumeration method.
@24@?0{TSUCellRect={TSUCellCoord=ISBB}{?=II}}8
-[TSTConcurrentCellIterator enumerateConcurrentlyUsingChunkBeginBlock:perDispatchThreadBlock:concurrentBlock:finalBlock:]
You may not initialize this iterator with a TSTTableModel to use this enumeration method.
v40@?0{TSUCellRect={TSUCellCoord=ISBB}{?=II}}8@24Q32
-[TSTMergeAction verify]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTMergeAction.mm
%@ has %lu covering ranges and %lu formulas with %lu indexes
Invalid action
Insert action
Remove action
Shrink action
Grow action
-[TSTCellUIDIterator p_nextCellRefIdWithUIDIndexList:UIDs:index:remainDup:lastDiffPos:recentResults:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellUIDList.mm
Unexpected back reference value.
Unexpected ID reference value.
TSCEValue::TSCEValue(const TSCENumberValue &)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEValue.mm
nil TSCENumberValue
TSCEValue::TSCEValue(const TSCEStringValue &)
nil TSCEStringValue
TSCEValue::TSCEValue(const TSCEDateValue &)
nil TSCEDateValue
TSCEValue::TSCEValue(const TSCEGrid &)
nil TSCEGrid
TSCEValue::TSCEValue(const TSCEErrorValue &)
nil TSCEErrorValue
TSCEValue::TSCEValue(const TSCEThunkValue &)
nil TSCEThunkValue
TSCEValue::TSCEValue(const TSCEValueGridValue &)
nil TSCEValueGridValue
TSCEArgumentType TSCEValue::nativeType() const
Undefined type. Returning nonsensical value.
TSCEArgumentType TSCEValue::deepType(TSCEEvaluationContext *) const
TSCENumberValue TSCEValue::number(TSCEFunctionSpec *__unsafe_unretained, int, TSCEEvaluationContext *) const
NSDate *TSCEValue::date(TSCEFunctionSpec *__unsafe_unretained, int, TSCEEvaluationContext *) const
NSString *TSCEValue::string(TSCEFunctionSpec *__unsafe_unretained, int, TSULocale *__strong) const
TSCERichTextStorage TSCEValue::richTextStorage(TSCEFunctionSpec *__unsafe_unretained, int, TSCEEvaluationContext *) const
NSString *TSCEValue::rawString(TSCEFunctionSpec *__unsafe_unretained, int, TSULocale *__strong) const
TSCERichTextStorage TSCEValue::rawRichTextStorage(TSCEFunctionSpec *__unsafe_unretained, int, TSCEEvaluationContext *) const
BOOL TSCEValue::boolean(TSCEFunctionSpec *__unsafe_unretained, int, TSCEEvaluationContext *) const
TSCEGrid TSCEValue::formattedGrid(TSCEFunctionSpec *__unsafe_unretained, int, TSCEEvaluationContext *, BOOL) const
TSCEReferenceValue TSCEValue::reference(TSCEFunctionSpec *__unsafe_unretained, int, TSCEEvaluationContext *) const
TSCEError *TSCEValue::error() const
TSCECategoryRef *TSCEValue::categoryRef() const
This TSCEValue was not of type TSCEValueTypeCategoryRef, its type %d
TSCEFormat TSCEValue::format() const
BOOL TSCEValue::isNativelyEqual(const TSCEValue &, TSCEEvaluationContext *) const
NSString *TSCEValue::bakedString(TSULocale *__strong) const
TSCEASTNodeArray *TSCEValue::newCorrespondingAST(TSCEEvaluationContext &, TSCEFunctionSpec *__strong, int, bool) const
TSCEValue TSCEValue::valueBySettingFormat(const TSCEFormat &)
const TSCEASTNodeArray *TSCEValue::unwrapThunk() const
can't call unwrapThunk() on a non-thunk!
-[TSCEBooleanCellValue compareToCellValue:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEBooleanCellValue.mm
-[TSCERemoteDataSpecifier initWithFunctionIndex:symbol:attribute:year:month:day:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCERemoteDataSpecifier.mm
How does a hot specifier have a date?
How does a cold specifier not have a date?
-[TSCERemoteDataSpecifier encodeToArchive:]
 [%04zd/%02zd/%02zd]
<%@ %@ %@%@>
-[TSTTableTileGroup init]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableTileGroup.mm
-[TSTTableTileGroup _tileForLazyReference:]
Fatal Assertion failure: %{public}s %{public}s:%d Failed to load a lazy table tile in TSTTableTileGroup: %@ with error: errorClass=%{public}@, domain=%{public}@, code=%zd, %{public}@hints=%{public}@ (%@) 
Failed to load a lazy table tile in TSTTableTileGroup: %@ with error: errorClass=%{public}@, domain=%{public}@, code=%zd, %{public}@hints=%{public}@ (%@) 
Fatal Assertion failure: %{public}s %{public}s:%d Tile ID too low for this group!
NSUInteger _indexForTileID(TSTTableTileID, TSTTableTileID)
Tile ID too low for this group!
Fatal Assertion failure: %{public}s %{public}s:%d Tile ID too high for this group!
Tile ID too high for this group!
dur_
num_
-[TSCENumberCellValue compareToCellValue:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCENumberCellValue.mm
-[TSCENumberCellValue setPopulatedCustomFormat:]
Custom formats are only legal for bare numbers and currencies.
-[TSCENumberCellValue encodeToArchive:]
Expected a currency code for unit %d, locale:%@
v32@?0Q8@"NSMutableSet"16^B24
year
month
attribute
B24@?0@"TSCERemoteDataSpecifier"8^B16
(empty) 
<%tu specifiers: %tu hot, %tu cold>
-[TSTMergeRegionMap saveToArchiver:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTMergeRegionMap.mm
this should never be called!
%@, %p: for PivotTable: %@
-[TSTPencilAnnotationOwner addAnnotation:withFormula:atIndex:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTPencilAnnotationOwner.mm
Adding a formula at an index that already has an annotation
-[TSTPencilAnnotationOwner addAnnotation:withFormulaObject:atIndex:]
-[TSTPencilAnnotationOwner removeAnnotation:]
Annotations and formulas out of sync!
v32@?0@"TSTPencilAnnotation"8Q16^B24
Fatal Assertion failure: %{public}s %{public}s:%d Attempting to remove annotation at bad index %tu!
-[TSTPencilAnnotationOwner removeAnnotationAtIndex:]
Attempting to remove annotation at bad index %tu!
-[TSTPencilAnnotationOwner cellRangeForAnnotation:]
Unexpected merge range!
-[TSTPencilAnnotationOwner enumerateAnnotationsWithBlock:]
-[TSTPencilAnnotationOwner enumerateAnnotationsWithBlock:]_block_invoke
Unexpected table info on this annotation.
-[TSTPencilAnnotationOwner _enumerateAnnotationsAndFormulasWithIndexes:block:]_block_invoke
-[TSTPencilAnnotationOwner _annotationsForIndexes:]_block_invoke
annotation
-[TSTPencilAnnotationOwner _indexesForRange:startingOnly:]
self.tableModel
self.calculationEngine
-[TSTPencilAnnotationOwner _indexesForRows:]
-[TSTPencilAnnotationOwner _indexesForRows:]_block_invoke
How do we have a zero-row range here?
-[TSTPencilAnnotationOwner _enumerateIndexesIntersectingRegion:block:]
v48@?0@"TSTCellRegion"8r^{TSUCellCoord=ISBB}16Q24{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}32
-[TSTPencilAnnotationOwner initWithArchive:unarchiver:forTableModel:]
Mismatched number of annotations and formulas.
TSKCellPencilAnnotations
gdtr
TSTPivotGroupingColumnOptionsMap %p
uid:%@, sortByGrTotal:%@, sortDesc:%@, repeatLbls:%@, hideTtls:%@, sortAggRuleUid:%@
v32@?0{TSUCellCoord=ISBB}8d16^B24
v28@?0S8d12^B20
-[TSTWidthHeightCache p_insertColumns:atColumn:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTWidthHeightCache.mm
attempt to insert column range beyond column width cache max columns; truncating
-[TSTWidthHeightCache p_insertRows:atRow:]
attempt to insert row range beyond row height cache max rows; truncating
-[TSTWidthHeightCache p_moveRowsFrom:toRow:]
destination cannot be within the source range.
src range for move exceeds max
dest range for move exceeds max
-[TSTWidthHeightCache p_moveColumnsFrom:toColumn:]
_columnModelWidths is not sized correctly before move
-[TSTWidthHeightCache resetFittingRowHeightsStartingWith:upToRow:]
startRow should be before endRow
-[TSTWidthHeightCache validateRowsNeedingFittingInfo:validationRegion:layoutEngine:]
rowsNeedingFittingInfo
-[TSCERemoteDataSourceFetcher init]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCERemoteDataSourceFetcher.mm
Remote Data Fetcher: %@
v20@?0q8I16
-[TSCERemoteDataSourceFetcher dataKind]
-[TSCERemoteDataSourceFetcher identifier]
-[TSCERemoteDataSourceFetcher canFetchKey:]
-[TSCERemoteDataSourceFetcher sendRequestForKeys:]
-[TSCERemoteDataSourceFetcher fetchQuotesWithTickers:completion:]
-[TSCERemoteDataSourceFetcher autoCompleteQuotesWithInput:completion:]
virtual void TSCEArgumentAccessor::convertToNilIfIgnoring(TSCEValue &, TSCEGridAccessContext &, BOOL)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEArgumentAccessor.mm
Should be unreachable now - each derived type needs to implement its specific accessing, context: %d
static TSCEArgumentAccessor *TSCEArgumentAccessor::argAccessorForContext(TSCEArgumentContext)
No argument accessor class for context: %d
virtual void TSCEStatArgumentAccessor::convertToNilIfIgnoring(TSCEValue &, TSCEGridAccessContext &, BOOL)
Wrong context for this method.
virtual void TSCECountArgumentAccessor::convertToNilIfIgnoring(TSCEValue &, TSCEGridAccessContext &, BOOL)
virtual void TSCEVarArgumentAccessor::convertToNilIfIgnoring(TSCEValue &, TSCEGridAccessContext &, BOOL)
com.apple.Numbers.TSCE.PrecedentLoading
-[TSCEFormulasToSet commonInit]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFormulasToSet.mm
_precedentLoadingQueue
_precedentLoadingGroup
com.apple.Numbers.TSCE.BackgroundFormulas
_backgroundProcessingQueue
-[TSCEFormulasToSet initWithCalcEngine:forMinion:options:]
A minion is required to use TSCEFormulasToSet object
-[TSCEFormulasToSet dealloc]
Deallocing %@ with %lu formulasToReset
Deallocing %@ with %lu formulasToRemove
Deallocing %@ with %lu formulasToReplace
-[TSCEFormulasToSet replaceFormula:atCellCoord:inOwner:replaceOptions:]_block_invoke
Can only place formulas at valid, non-spanning cell coords, not: %@
precedents
-[TSCEFormulasToSet _flushFormulasToReplaceWithDepTracker:startTime:timeout:]_block_invoke
-[TSCEFormulasToSet flushAllFormulaChanges]
We should be empty now, always
-[TSTTableSortOrder initWithRules:type:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableSortOrder.mm
sortRules
-[TSTTableSortOrder sortOrderByReplacingRuleAtIndex:withRule:]
Group Sort Order: trying to replace an object at an index that doesn't exist
B24@?0@"TSTTableSortRule"8@"NSDictionary"16
TSCEValue TSCEFunction___CHART::evaluateWithContext(TSCEEvaluationContext &)_block_invoke_2
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEChartFunctions.mm
apparentTractRefForTractRef let us exceeed tableSize?? (%d,%d)
-[TSTConcurrentMutableCellUIDSet reapAccumulatedCellRegionWithTable:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTConcurrentMutableCellUIDSet.mm
Search not found: %{public}@
void TSCERecalcPhaseState::addNewLeaf(const TSCECellToEvaluate &, TSCEDependencyTracker *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECalcEngine.mm
Invalid ownerId for solving, leaf: %@ for formulaOwner %@ %@
(UNREGISTERED)
com.apple.Numbers.TSCE.RecalcLowPriority
com.apple.Numbers.TSCE.RecalcHighPriority
void TSCECalcEngine::initializeDispatchObjects()
_recalcLowPriorityQueue
_recalcHighPriorityQueue
_recalcDispatchGroup
_recalcLoopGroup
TSCEDebugEnableLocalVariables
com.apple.iWork.CalculationEngine
Performance
com.apple.Numbers.TSCE.writeExclusionQueue
Functions used:
void TSCECalcEngine::assertNonCalcEngineException(NSString *__strong, NSException *__strong, TSCEFormulaObject *__strong) const
Non-calcEngine NSException passed up to %{public}@: %{public}@ with formula: %{public}@
Non-calcEngine type exception passed up to %{public}@ for formula %{public}@.
Non-calcEngine NSException passed up to %{public}@: %{public}@
Non-calcEngine type exception passed up to %{public}@.
void TSCECalcEngine::dispatchOnePhase(TSCERecalcPhaseState *)
phase
dispatchOnePhase
void TSCECalcEngine::dispatchOnePhase(TSCERecalcPhaseState *)_block_invoke
Unexpected calc-engine exception passed up to enqueueTaskForCell: %{public}@
recalcPhaseHoldingReadLock
void TSCECalcEngine::recalcPhaseHoldingReadLock(TSCERecalcPhaseState *)
Unexpected calc-engine exception passed up to recalcPhaseHoldingReadLock: %{public}@ formulaOwner is: %{public}@
void TSCECalcEngine::startRecalculationTask()
cannot start recalculation thread because it is in the wrong state
void TSCECalcEngine::startRecalculationTask()_block_invoke
no access controller!
startRecalculationTask
Unexpected calc-engine exception passed up to startRecalculationTask loop: %{public}@
TSUError TSCECalcEngine::registerOwnerWithOwnerUID(const TSCEOwnerUID &, __strong id<TSCEFormulaOwning>, __strong id<TSCEReferenceResolving>, const TSCEOwnerUID &, TSCESubFormulaOwnerIndex)
Resolver doesn't conform to the TSCEReferenceResolving protocol.
%@ doesn't implement: -multiEvaluateFormulasAt:withCalcEngine:recalcOptions:
TSCETransaction *TSCECalcEngine::openTransaction()
There is already an open transaction on this calc-engine: %@
_currentTransaction
void TSCECalcEngine::closeTransaction(TSCETransaction *__strong)
Invalid transaction object passed in: %@
void TSCECalcEngine::replaceFormula(__strong id<TSCEFormulaReturning>, const TSUCellCoord &, const TSCEOwnerUID &, TSCEReplaceFormulaOptions)
void TSCECalcEngine::setRewritingMinion(TSCERewritingMinion *__strong)
Warning: Overwriting a pre-existing rewritingMinion with a new one
NSArray *TSCECalcEngine::rewriteSpecStack()
Need to add locking to run this on multiple threads
void TSCECalcEngine::popRewriteSpec(TSCEFormulaRewriteSpec *__strong)
Popping wrong rewriteSpec off rewriteSpecStack
Have no rewriteSpecs to pop
void TSCECalcEngine::blockUntilRecalcIsCompleteWithTimeout(NSTimeInterval)
Can't block on the calc-engine before it is started up.
void TSCECalcEngine::blockUntilRecalcTaskExitedWithTimeout(NSTimeInterval)
Can't block without an access controller
void TSCECalcEngine::resumeRecalculation()
Can't resume calculation on a closing document!
TSCEValue TSCECalcEngine::evaluateSynchedWithCalcEngineWithFormula(TSCEFormulaObject *__strong, TSCEEvaluationContext &)
TSTHeaderNameMgr *TSCECalcEngine::headerNameMgr() const
_headerNameMgr
TSCEReduceCalcEngineMsgSize
v16@?0@"TSCENamedReferenceManager"8
v16@?0@"TSTHeaderNameMgr"8
v16@?0@"TSCERemoteDataStore"8
v16@?0@"TSCEReferencesToDirty"8
TSCENumberValue::TSCENumberValue(const TSUDecimal &, TSCEBaseUnit, BOOL)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCENumberValue.mm
can't make a unitless zero with a number other than zero!
can't make a unitless zero with a unit!
virtual NSString *TSCENumberValue::string(TSCEFunctionSpec *__unsafe_unretained, int, TSULocale *__strong) const
No locale, falling back to current locale.
NSComparisonResult TSCENumberValue::compare(const TSCENumberValue &) const
Support for non-duration, non-currency unit comparisons is not implemented.
TSCENumberValue TSCENumberValue::percent() const
Should never call percent on a unit value!
v16@?0@"TSTExpressionNode"8
<%@ %p>: isActive:%@, expressionNode:%@
B16@?0r^{TSKUIDStruct=QQ}8
Fatal Assertion failure: %{public}s %{public}s:%d Not implemented.
-[TSTPivotRowColumnOrder targetGroupFromIndex:minSourceLevel:templateUID:forDimension:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTPivotRowColumnOrder.mm
Not implemented.
Fatal Assertion failure: %{public}s %{public}s:%d Not implemented for columns.
-[TSTPivotRowColumnOrder minimumCategoryLevelInRange:forDimension:]
Not implemented for columns.
<%@ %p>: completionText '%@', prefixRange %@
-[TSTStrokeLayer strokeLayerAtIndex:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTStrokeLayer.mm
should never call this with index > 0
-[TSTMutableStrokeLayer applyStroke:atIndexes:order:applyStroke:atIndexes:order:applyStroke:atIndexes:order:applyStroke:atIndexes:order:applyStroke:atIndexes:order:]
this interface can't be used on complex stroke layers
bodyIndexes
-[TSCEGetPivotDataBundle enumerateDataKeyValuePairsUsingBlock:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEGetPivotDataBundle.mm
Size mismatch in data/value pairs
TSCETaggedDecimal TSCETaggedDecimalList::findPivot()
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCETaggedDecimalList.mm
We shouldn't be finding the pivot of a 0 length array
size_t TSCETaggedDecimalList::partitionTaggedDecimals(const TSCETaggedDecimal &)
_size == 0?
+[TSCETaggedDecimalListObject createFromVector:functionSpec:argumentIndex:evaluationContext:ignoreError:ignoreDuplicates:]
Have to set the type of vector appropriately. currentType = %d
-[TSTConcurrentStylesheet variationOfStyle:propertyMap:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTConcurrentStylesheet.mm
stylesheet used should be same as the one owning the style
All at Once
By Row
By Column
By Cell
By Row Content
By Column Content
By Cell Content
By Row Reverse
By Row Content Reverse
By Column Reverse
By Column Content Reverse
By Cell Reverse
By Cell Content Reverse
+[TSTAnimation textureDeliveryStyleFromDeliveryString:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTAnimation.mm
bad delivery string to delivery style mapping
void TSTHeaderPerTable::addHeaderUid(const TSKUIDStruct &, BOOL)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTHeaderNameMgr.mm
_headerRowUids
-[TSTHeaderNameMgrTile saveToArchiver:]
-[TSTHeaderNameSubset headerCellsMatchingPrefix:]
Warning: asking for prefix matching, but this search result didn't specify prefixes when it was created
%@ for '%@'
-[TSTHeaderNameMgr findTileForString:findClosest:foundAtOffset:]
midTile
-[TSTHeaderNameMgr handleFullTile:]
Could NOT split tile of %lu size for some reason
-[TSTHeaderNameMgr spanningRangeForHeaderCell:]
tracked header reference is not in a header?  (%@ vs body %@)
@"TSTIndexingChunk"24@?0{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}8
@32@?0@"<TSTCellIteratorData>"8@"TSTIndexingChunk"16@24
-[TSTCellDiffMap initWithContext:cellDiffArray:cellUIDList:uidBased:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellDiffMap.mm
Nil cellDiffArray
Nil cellUIDList
unexpected diff/uidlist ratio
-[TSTCellDiffMap addCellDiff:andCellUID:avoidCopy:]
cannot add cellUIDs in cellID mode
can't add cells to a one-to-many mapping
-[TSTCellDiffMap addCellDiff:andCellID:avoidCopy:]
cannot add cellIDs in UID mode
-[TSTCellDiffMap addCellDiffMap:]
both maps should match isUIDBased state
-[TSTCellDiffMap addCellDiffs:atCellUIDs:]
map should be UIDBased
cellDiffs and cellUIDList should match in length
-[TSTCellDiffMap appendCellDiffMap:]
Trying to append a cellID cellDiffMap to a uidBased diff map. Aborting.
v64@?0@"TSTCellDiff"8{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16Q48^B56
Trying to append a uidBased cellDiffMap to a cellID diff map. Aborting.
v40@?0@"TSTCellDiff"8{TSUCellCoord=ISBB}16Q24^B32
B24@?0r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}8Q16
B24@?0{TSKUIDStruct=QQ}8
-[TSTCellDiffMap enumerateElementsUsingBlock:]
cannot enumerate cellUIDs in cellID mode
-[TSTCellDiffMap enumerateCellIDElementsUsingBlock:]
cannot enumerate cellIDs in UID mode
v16@?0@"TSTCellDiffArray"8
<%@: %p>:
-[TSTTableViewSortRule baseIndex]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableSortRule.mm
Base index is not valid on TSTTableViewSortRule.
-[TSTTableViewSortRule encodeToArchive:]
TSTTableViewColumnSortRule should never be archived
-[TSTTableViewSortRule initFromArchive:]
TSTTableViewColumnSortRule should never be unarchived
-[TSTGroupValueTuple updateWithDocumentRoot:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTGroupValueTuple.mm
+[TSTGroupValueTuple groupValueUidForTuple:appendingTuple:]
upperTuple
lowerTuple
-[TSTGroupValueTuple groupValueTupleByReplacingValue:atLevel:]
Don't try to replace value for the root
%{public}@: level %d is beyond this tuple's size
-[TSTGroupValueTuple groupValueTupleByRemovingValueAtLevel:]
Removing from level %d of a %d-level tuple
%@ [
%@'%@'
[%@] = 
TSTiOSCheckboxChecked6
TSTiOSCheckboxChecked12
TSTiOSCheckboxChecked18
TSTiOSCheckboxChecked24
TSTiOSCheckboxUnchecked6
TSTiOSCheckboxUnchecked12
TSTiOSCheckboxUnchecked18
TSTiOSCheckboxUnchecked24
+[TSTCheckboxRenderer frameWithViewScale:contentFrame:checked:outCheckboxImage:outCheckboxSize:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCheckboxRenderer.m
No checkbox image for rendering!
v28@?0I8d12^B20
-[TSTColumnRowUIDMapper disconnect]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTColumnRowUIDMapper.mm
No longer have a mapper - disconnected multiple times?
Mappers version counter was already off %lu vs %lu
Should have preserved the versionCounter
-[TSTCategoryStoreIterator initWithInfo:region:flags:searchMask:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCategoryStoreIterator.mm
_info.baseTableModel.dataStore
_info.summaryModel.dataStore
searchMask remain 0x%x, should be consumed by this point
-[TSTCategoryStoreIterator dealloc]
iteration should be terminated
-[TSTCategoryStoreIterator updateCellData:]
_baseTile
_baseRow
incomplete map.
cellRef
this is odd case, iterator found cell at this cellID, but then no cellRef
-[TSTCategoryStoreIterator updateFormulaForCellData:]
this is an odd case, iterator found cell at this cellID, but then no cellRef
-[TSTCategoryStoreIterator getNext]
invalid columnUID
should now have a row that intersects the region
couldn't find offset, that's not good.
should now have a valid cellID at this point
-[TSCEFormulaOwnerWrapper initWithFormulaOwnerUID:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFormulaTranslationFlags.mm
Requires a valid ownerUID
-[TSWPStorage(TablesAdditions) hyperlinkCellID]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSWPStorage_TablesAdditions.mm
cell attribute array should not be empty
-[TSTCategoryAggregateFormulaOwner tableInfo]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCategoryAggregateFormulaOwner.mm
Someone is asking for a tableInfo, but we are not registered with the calcEngine yet
Table %@ is not registered with the calcEngine yet
-[TSTCategoryAggregateFormulaOwner setTableInfo:]
don't allow overwriting table info pointer, should go from nil -> info
Wrong class passed to setTableInfo: %@
-[TSTCategoryAggregateFormulaOwner evaluateFormulaAt:withCalcEngine:recalcOptions:]
Table has no calc engine. Aborting recalculation.
const TSCECellToEvaluate &TSCEInProgressQueue::back()
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEInProgressQueue.mm
Shouldn't call back() from empty in-progress queue
-[TSTRichTextPayload initWithContext:storage:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTRichTextPayload.mm
v24@?0r^{TSCEColumnReference=ISC}8^B16
v24@?0r^{TSCEColumnRangeReference=IISC}8^B16
void TSCESpanningDependencies::readFromArchive(const TSCE::SpanningDependenciesArchive &)_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCESpanningDependencies.mm
NULL spanning dependencies for table: %{public}@
v28@?0{TSCEColumnRangeContextPair=IC}8{TSCEInternalCellReference={TSUCellCoord=ISBB}SS}16
void TSCESpanningDependencies::unpackAfterUnarchive()_block_invoke
v32@?0r^{TSCEColumnRangeReference=IISC}8r^{TSUCellCoord=ISBB}16^B24
v32@?0r^{TSCEColumnReference=ISC}8r^{TSUCellCoord=ISBB}16^B24
void TSCESpanningDependencies::dirtyAllFormulasReferencingRange(TSCERangeCoordinate)
invalid input range
dirty precedents count consistency error - cell: %@ in table: %@
v20@?0{TSCEInternalCellReference={TSUCellCoord=ISBB}SS}8
TSCEFormulaRangeContext formulaRangeContextForArchivedContext(const TSCE::SpanningDependenciesExpandedArchive::RangeContext &)
unknown range dependency context found in archive! Archive is corrupt.
virtual TSCEASTElement *TSCEASTConvertToUidRefsRewriter::anyReferenceNode(TSCEASTRelativeCoordRefElement *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTConvertToUidRefsRewriter.mm
Unhandled reference type
virtual TSCEASTElement *TSCEASTConvertToUidRefsRewriter::colonTractNode(TSCEASTColonTractElement *)
-[TSTSummaryCellVendor setAggregateType:forColumnUID:atGroupLevel:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTSummaryCellVendor.mm
Not implemented for pivot tables.
-[TSTSummaryCellVendor cellSpecForAggregateType:forColumnUID:atGroupLevel:]
-[TSTSummaryCellVendor setCell:atCellUID:]
Setting vendor cell for a pivot table
Setting vendor cell with an invalid cellUID
Invalid aggregate type in summary cell vendor - BodyRows
Invalid aggregate type in summary cell vendor - Label
-[TSTSummaryCellVendor getCell:atCellUID:]
Getting vendor cell for a pivot table
cell should never be nil
Getting vendor cell with an invalid cellUID
-[TSTSummaryCellVendor removeCellsInColumnUid:]
-[TSTSummaryCellVendor cellMapForWildcardCells]
-[TSTSummaryCellVendor runChange:withSummaryCellMap:migrationHelper:]
kTSCERecalcLoopGroupEmpty%u
+[TSTTableFilterRule getPredArgDataFromCell:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableFilterRule.mm
Expected a cell without an error to make a quick filter rule.
TSTTableFilterRule %p: %@
-[TSTTableFilterRule matchesCell:]
Unexpected predicate argument type!
-[TSTTableFilterSet p_downgradedFilterRuleForListItem:fromPredicate:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableFilterSet.mm
Don't have a TSTFormulaPredicateTypeDateIsNotTheDate predicate type, but need one.
Invalid Predicate Arg Data for list item
-[TSTTableFilterSet downgradeFilterSetForBackwardCompatWithLocale:]
newRule
Unexpected predicate type during downgrade!
-[TSTTableFilterSet p_thresholdComparisonMatchesFilter:withPredicateType:]
Unexpected predicate type found when calculating threshold
-[TSTTableFilterSet rowIsShown:withHiddenStateExtent:withCalcEngine:]
Unexpected threshold value type found
-[TSTTableFilterSet ruleInFilter:atIndex:]
filter index invalid
rule index invalid
-[TSTTableFilterSet filterAtIndex:inTable:]
-[TSTTableFilterSet removeRulesWithAbsoluteIndices:]
invalid rule index passed in
-[TSTTableFilterSet removeRulesWithIndices:inFilter:]
filter index is out of bounds
rule indices are out of bounds
-[TSTTableFilterSet p_addRules:atRuleIndices:inFilter:isNew:]
no rules given
-[TSTTableFilterSet addRules:inFilter:]
-[TSTTableFilterSet replaceRule:atRuleIndex:inFilter:]
-[TSTTableFilterSet replaceRuleAtAbsoluteIndex:withRule:]
Insufficient rules to replaceRuleAtAbsoluteIndex: %lu
-[TSTTableFilterSet enumerateRulesInFilterIndex:usingBlock:]
-[TSTTableFilterSet ruleIndexInFilter:matchingCell:]
-[TSTTableFilterSet numberOfRulesInFilter:]
Fatal Assertion failure: %{public}s %{public}s:%d Modern filter sets shouldn't have pre-pivot rules!
-[TSTTableFilterSet loadFromArchive:unarchiver:]
Modern filter sets shouldn't have pre-pivot rules!
+[TSCECategoryRef relativeAncestorGroupUid:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECategoryRef.mm
levelsUp of %d is too large.
-[TSTFormulaPredicate initWithPredicateType:arg1:arg2:qualifier1:qualifier2:argumentCellRef:hostCell:forConditionalStyle:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTFormulaPredicate.mm
Conditional styles are not allowed to use anything other than an arg0 of (+0,+0) relative coordinate
-[TSTFormulaPredicate p_creatorForPeriodBoundaryWithScale:direction:offset:argIndex:earlierBound:isCalPers:]
Not a valid date scale
This is expected to be unreachable.
-[TSTFormulaPredicate recreateFormula]
Should already have _predArg0 defined
-[TSTFormulaPredicate p_argTypeForPredArg:argNum:calculationEngine:hostCell:]
A categoryRef as arg 0, I don't think so
A viewTractRef as arg 0, I don't think so
-[TSTFormulaPredicate evaluateAtCellID:onOwnerUID:calcEngine:]
Need both of these set
-[TSTFormulaPredicate setArgumentAt:withPredArg:]
Only a limited set of types are allowed for predArg0, and not %d
%@: Not allowed for argument at position %d
-[TSTFormulaPredicate p_populateMembersFromFormula]
We don't have valid offsets at the moment
-[TSTFormulaPredicate copyByRewritingWithSpec:inOwner:inCellCoordinate:]
-[TSTFormulaPredicate upgradeTopAndBottom]
_predArg0
-[TSTFormulaPredicate encodeToPrePivotArchive:archiver:encodingForSOS:]
We need to be backward compatible to use this archiving method
-[TSTFormulaPredicate initFromArchive:]
Have to have archived the _predArg0 argument for upgraded archive format
-[TSTArchivedStrokeSelection setSelection:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTArchivedStrokeSelection.mm
Wrong type of class %@ (expected TSTStrokeSelection)
TSTTableBadgeImageCache
TSUImage *TSTTableBadgeCachedImageForName(NSString *__strong)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableBadge.m
TSTTableBadge failed to load image %@
TSTErrorMessageIcon
+[NSCharacterSet(TSCEAdditions) tsce_singleQuoteCharacterSet]_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/NSCharacterSetAdditions.m
(){}+-*/^%:,!&=><$"'#;|
%C%C%C
%C%C%C%C%C%C%C
%C%C
%C%C%C%C%C%C%C%C%C%C%C%C%C%C%C%C%C%C%C%C%C%C
+[NSCharacterSet(TSCEAdditions) tsce_characterSetRequiringSingleQuotes]_block_invoke
.%C%C
+[NSCharacterSet(TSCEAdditions) tsce_periodCharacterSet]_block_invoke
+[NSCharacterSet(TSCEAdditions) tsce_internationalWhitespaceCharacterSet]_block_invoke
+[NSCharacterSet(TSCEAdditions) tsce_internationalWhitespaceAndNewlineCharacterSet]_block_invoke
+[NSCharacterSet(TSCEAdditions) tsce_internationalColonCharacterSet]_block_invoke
+[NSCharacterSet(TSCEAdditions) tsce_dollarSignCharacterSet]_block_invoke
,%C%C;%C%C%C
+[NSCharacterSet(TSCEAdditions) tsce_listDelimiterCharacterSet]_block_invoke
-[TSTCellRegion regionByTrimmingAroundRowIndices:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellRegion.mm
-[TSTCellRegion regionByTrimmingAroundColumnIndices:]_block_invoke
-[TSTCellRegion prunedCellRegionAgainstTable:behavior:usingBlock:]
-[TSTCellRegion containsCellRange:]_block_invoke
areaRemaining should be greater than the intersection area
-[TSTCellRegion p_copyFromRegion:]
-[TSTCellRegion p_insertRangeIntoRegion:]
Added range:%{public}@ should never overlap previous range:%{public}@ in region:%{public}@.
<%@ %p boundingbox={ %@ }
 cellRanges={empty}>
 cellRanges={
  { %@ }
-[TSCEUndoTractList addToIncludedUidsTractColumnUids:rowUids:isRangeRef:preserveRectangularRange:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEUndoTractList.mm
Combining a spanning and non-spanning TSKUIDStructVector vector
<%@> sticky:%d Tracts: 
  %@
-[TSCEUndoTractList(FullTuple) initAsFullTupleForColumnHeaderUid:rowHeaderUid:aggregateRuleUid:flatteningDimension:]
Not a valid TSTTableDimension value: %d
-[TSCEStock init]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEStock.mm
-[TSCEStock initFromArchive:]
-[TSCEStock encodeToArchive:]
_symbol
NULL
-[TSCEStock valueForAttribute:]
Can't fetch an unknown attribute!
-[TSCEStock valueForAttribute:forLocale:]
en_US
MMMdyyyyhhmmzzz
%1.2F
%1.0F
Number suffix - trillions
Number suffix - billions
Number suffix - millions
Number suffix - thousands
-[TSCEStock p_populateAttributesFromArray:]
self.symbol
en_US_POSIX
yyyy'-'MM'-'dd'T'HH':'mm':'ss'Z'
BOOL TSCECellRecordTile::insertCellRecord(TSCECellRecord *, TSCECellDependencies *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECellRecordTile.mm
cellDependencies
BOOL TSCECellRecordTile::replaceCellRecord(TSCECellRecord &, TSCECellDependencies *)
cellRecord can't handle multiple self references
BOOL TSCECellRecordTile::replaceCellRecord(TSCECellRecord &, TSCECellDependencies *)_block_invoke_2
edge pointing to nonexistant table found: %lu
std::vector<TSCECellRecord *> TSCECellRecordTile::sortedCellRecordVector() const
no duplicate cell records permitted, %lu vs %lu
void TSCECellRecordTile::appendExpandedEdgeToArchive(TSCE::ExpandedEdgesArchive *, const TSCEInternalCellReference &) const
_wrapper
-[TSCECellRecordTileWrapper unpackAfterUnarchiveForCellDependencies:]
-[TSTTableTranslator init]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableTranslator.mm
-[TSTTableTranslator tableAreaForCellID:]
expecting this method to be overridden
-[TSTTableTranslator cellValueTypeAtCellID:]
-[TSTTableTranslator defaultCellStyleForCellID:useSoftDefault:outSource:]
-[TSTTableTranslator defaultTextStyleForCellID:useSoftDefault:outSource:]
-[TSTTableTranslator cellStyleAtCellID:isDefault:]
-[TSTTableTranslator textStyleAtCellID:isDefault:]
-[TSTTableTranslator defaultStyleHandlesForCellID:useSoftDefault:styleDefaultsCache:outCellStyleHandle:outTextStyleHandle:]
-[TSTTableTranslator conditionalStyleSetAtCellID:]
-[TSTTableTranslator stringAtCellID:optionalCell:]
-[TSTTableTranslator getCell:atCellID:suppressCellBorder:]
-[TSTTableTranslator hasFormulaAtCellID:]
-[TSTTableTranslator formulaAtCellID:]
-[TSTTableTranslator postCommentNotificationForStorage:atViewCellCoord:notificationKey:]
-[TSTTableTranslator commentHostingAtCellID:forCommentStorage:updateCommentMaps:]
-[TSTTableTranslator commentHostingAtCellID:]
-[TSTTableTranslator mergeRangeAtCellID:]
-[TSTTableTranslator mergeOriginForCellID:]
{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}24@?0{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}8
-[TSTTableTranslator cellUIDForSummaryCellCoord:]
no summeries in normal table mode
-[TSTTableTranslator cellExistsAtCellID:]
-[TSTTableTranslator hasCommentAtCellID:]
requires identity mapping from view to model space
-[TSTTableTranslator resetViewMap]
view and base must be the same while uncategorized.
+[TSCEFunctionSpec functionSpecForFunctionName:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFunctionSpec.mm
functionSpecForFunctionName: expects US function names, but %@ (US is %@) was passed in.
+[TSCEFunctionSpec unsupportedFunctionNameForLocale:]
Unsupported
-[TSCEFunctionSpec loadRepeatingArguments]
I don't think we ever use higher than 2, actually, certainly not repeatingGroupSize: %hd
origArgIndex out of bounds: %lu
-[TSCEFunctionSpec argumentSpecForIndex:]
translatedIndex out of bounds: %lu
%@%i%@
TSCEValue TSCEFunction_INTERSECT_RANGES::evaluateWithContext(TSCEEvaluationContext &)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCELookupReferenceFunctions.mm
Should have detected bad reference during loop
Bad reference should have been detected earlier
TSCEValue TSCEFunction_LOOKUP::evaluateWithContext(TSCEEvaluationContext &)
In function LOOKUP, Should not reach here, user result table should be 1-D.
static NSComparisonResult TSCEFunction_MATCH::compareValue(TSCEValue &, TSCEValue &, TSCEEvaluationContext &)
In function MATCH, should not reach here.
void TSCEFunction_UNION_RANGES::determineShapeOfCellList(std::vector<TSCECellRef>, bool, bool &, bool &, bool &, NSUInteger &)
can't have invalid cell references here
0 first row width should be impossible.
TSCEValue TSCEFunction_UNION_RANGES::evaluateWithContext(TSCEEvaluationContext &)
indices inside a range reference should be references.
each index inside a range reference should be just one cell.
contiguous should imply rectangular
rectangular references should have rowWidth rows
-[TSTIdentifierNode initAsCopyOf:intoContext:children:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTIdentifierNode.mm
Unexpected object in initAsCopyOf:... expected TSTIdentifierNode, got %@
-[TSTIdentifierNode buildASTNodeArray:hostCell:symbolTable:]
IdentifierNode shouldn't have any children
<%@:%p size %f count %u hiding 0x%02hx cstyle %p tstyle %p
-[TSTConditionalStyleRule predicateType]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTConditionalStyleRule.mm
_predicate
-[TSTConditionalStyleRule setCellStyle:textStyle:]
Can't replace styles!
TSTConditionalStyleRule %p: %@ => %@, %@
CS Predicate: %@
<%@>:
  %@ = %@
  %@ = null
-[TSCEFormulasForUndo splitIntoChunksForExcessiveSize]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFormulasForUndo.mm
Can't split FormulasForOwner that uses formulaStrings (TSTCommandRewriteFormulasForTranspose)
v24@?0@"TSCEFormulaObject"8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16
  ownerKind %d = %@
static TSCENumberFormat TSCENumberFormat::defaultNumberFormatForCurrency(TSULocale *__strong)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFormat.mm
TSCEBaseFormat::TSCEBaseFormat(TSKBaseFormat *__unsafe_unretained)
TSCEBaseFormat has no defaults for nil TSKBaseFormat
TSCEFormat::TSCEFormat(const TSUFormatType)
This TSCEFormat constructor not supported for this type: %d
static TSCEFormat TSCEFormat::createDefaultCurrencyUsingLocale(TSULocale *__strong)
For currency, use the constructor that passes in a locale, and use the document locale.
void TSCEFormat::setFormatType(TSUFormatType)
setFormatType() not allowed in general, type change attempted: %d -> %d
TSCEFormat::TSCEFormat(const TSUFormatType, const TSCENumberFormat &)
Creating a non-number formatType but initializing the numberFormat iVar.
bool TSCEFormat::isEqualNotCountingExplicitness(const TSCEFormat &) const
Trying to compare unexpected type %d.
TSCENumberFormat TSCEFormat::numberFormat() const
Format is not of this type.  Can't return this.
TSCEFractionFormat TSCEFormat::fractionFormat() const
TSCEBaseFormat TSCEFormat::baseFormat() const
TSCEDurationFormat TSCEFormat::durationFormat() const
TSKDateTimeFormat *TSCEFormat::dateTimeFormat() const
TSKCustomFormatWrapper *TSCEFormat::customFormat() const
TSKBooleanFormat *TSCEFormat::booleanFormat() const
-[TSTConditionalStyleSet copyToGeometricFormWithRewriteContext:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTConditionalStyleSet.mm
Trying to rewrite a conditional style with a non-conditionalStyleFormulaOwner containing ownerUID: %@
-[TSTConditionalStyleSet copyByRepairingBadReferences:clearUidHistory:]
<%@: %p>: Rules:
CS Rules: 
-[TSTConditionalStyleFormulaOwner initWithTableModel:ownerUID:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTConditionalStyleFormulaOwner.mm
TSTConditionalStyleFormulaOwner: requires a valid ownerUID, table is: %@ (%@)
TSCEReferenceValue::TSCEReferenceValue(TSCEEvaluationContext &, const TSCEOwnerUID &, const TSCERangeCoordinate &, const TSUPreserveFlags &, BOOL)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEReferenceValue.mm
Invalid attempt to create a reference value with an invalid tableUID.
TSCEReferenceValue::TSCEReferenceValue(TSCEEvaluationContext &, const TSCEOwnerUID &, const TSCERelativeRangeCoordinate &, const TSUPreserveFlags &)
TSCEReferenceValue::TSCEReferenceValue(TSCEEvaluationContext &, const TSCEOwnerUID &, const TSCERelativeCellCoordinate &, const TSUPreserveFlags &)
-[TSCETrackedReference replaceContentsWithContentsOfTrackedReference:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCETrackedReference.mm
can't replace contents with contents of a nil tracked reference
-[TSCETrackedReference referencesForCalcEngine:referenceTrackerUID:]
Non-nil TSCEReferenceSetWrapper is required to use referencesForCalcEngine:
-[TSCETrackedReference precedentsWithCalcEngine:hostOwnerUID:]
Non-nil precedents pointer is required to use precedentsWithCalcEngine:
static TSCECellRef TSTConvertFormulasToBaseForCategoriesRewriter::convertedContainingCellRefForColonTractRewrites(TSCEFormulaRewriteContext &, TSTFormulaCoordinateSpace, TSTFormulaRewriteSpec *__strong)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTConvertFormulasFromBaseForCategoriesRewriter.mm
convertedContainingCellRefForColonTractRewrites: No coordMapper found for tableUID: %@
virtual TSCEASTElement *TSTConvertFormulasToBaseForCategoriesRewriter::colonTractNode(TSCEASTColonTractElement *)
How did this happen? refTableUID is invalid in TSTConvertFormulasFromChromeToBaseForCategoriesRewriter::colonTractNode
srcCoordMapper
v36@?0r^{TSUCellCoord=ISBB}8S16r^{TSUCellRect={TSUCellCoord=ISBB}{?=II}}20^B28
TSCERangePrecedentsTile *TSCERangeDependencies::findTileForToOwnerId(TSCEInternalFormulaOwnerID, BOOL)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCERangeDependencies.mm
v32@?0r^{TSUCellCoord=ISBB}8r^{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16^B24
void TSCERangeDependencies::readFromArchive(const TSCE::RangeDependenciesArchive &)
corrupted range dependencies archive
void TSCERangeDependencies::readFromExpandedArchive(const TSCE::RangeDependenciesArchive &)
void TSCERangeDependencies::unpackAfterUnarchive()
precedentRangeDependencies
Fatal Assertion failure: %{public}s %{public}s:%d at the moment we don't handle this well
-[TSTCategoryOrder targetGroupFromRowIndex:minSourceLevel:templateRowUID:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCategoryOrder.mm
at the moment we don't handle this well
TSURowIndex TSTUidOrderNode::firstIndex()
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTUidOrderNode.mm
Sorting category/pivot order: Never should a group be empty
void TSTUidOrderNode::_orderUsingGroupByAndMaps(TSTGroupBy *__strong, BOOL, int, int, TSTColumnRowUIDMap *__strong, TSTColumnRowUIDMap *__strong, BOOL)
Too many number of levels for this order algorithm.
Level mismatch between the groupBy and the order node tree
TSCECellTractRefCore::TSCECellTractRefCore(const TSUCellCoord &, const TSUCellCoord &)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECellTractRefCore.mm
Both coords must be spanning in the same direction %{public}@ vs %{public}@
TSCECellTractRefCore::TSCECellTractRefCore(const TSUCellCoord &, const TSUCellCoord &, const TSKUIDStruct &)
void TSCECellTractRefCore::addColumn(TSUColumnIndex)
void TSCECellTractRefCore::addRow(TSURowIndex)
void TSCECellTractRefCore::addColumnRange(const TSUIndexRange &)
addColumnRange: should only be used with absolute indexes: %@
void TSCECellTractRefCore::addRowRange(const TSUIndexRange &)
addRowRange: should only be used with absolute indexes: %@
TSUCellCoord TSCECellTractRefCore::coordAtColumnOffset(TSUColumnOrRowIndex, TSUColumnOrRowIndex) const
Not really expecting spanning CellTractRef to be used here
ndtri
+[TSTGroupBy(ChangeGroups) groupingComboForGroupingType:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTGroupBy_ChangeGroups.mm
This grouping type isn't supported in this release
+[TSTGroupBy(ChangeGroups) p_dateBySettingUnit:value:ofDate:inCalendar:]
Continued looping trying to set date %@ to week number %lu
v24@?0r^{TSTGroupingLevelAndType=SC}8^B16
-[TSTTableInfo(Reorganize) p_mappingForSortingRowsOrColumns:withRules:dimension:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableInfo_Reorganize.mm
Can't sort by an empty rule list!
Expected sort tag count:%lu to match itemCount:%lu.
q24@?0@"TSTTableSortTag"8@"TSTTableSortTag"16
Index out of range!
-[TSTTableInfo(Reorganize) sortTagsForSortingColumns:byRows:]_block_invoke
reorganizeValue
v32@?0@"TSTTableSortTag"8Q16^B24
-[TSTTableInfo(Reorganize) sortTagsForSortingRows:byColumns:]_block_invoke
-[TSTTableInfo(Reorganize) mappingFromRowUids:toRowUids:]
From index out of range!
-[TSTCategoryTranslator maxVisibleRowLevel]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCategoryTranslator.mm
Unimplemented!
-[TSTCategoryTranslator startOfGroupingChangesBatch]
overflow in _groupingsChangingLevel
-[TSTCategoryTranslator endOfGroupingChangesBatch]
endOfGroupingChangesBatch called without matching startOfGroupingChangesBatch - avoided underflow
-[TSTCategoryTranslator resetViewMap]
view and base cannot be the same while categorized
-[TSTCategoryTranslator suspendChangeDescriptorNotificationsDuringBlock:]
not expecting multiple suspensions
+[TSTCategoryTranslator tableStyleAreaForCategoryLevel:isLabel:]
Calling tableStyleAreaForCategoryLevel with an invalid level
Category Column
i28@?0r^{TSUModelCellCoord={TSUCellCoord=ISBB}}8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16C24
i20@?0C8r^{TSKUIDStruct=QQ}12
i12@?0{TSUViewRowIndex=I}8
-[TSTCategoryTranslator setCellStyle:ofRowAtIndex:]
Categories: cannot set cell style for that row
-[TSTCategoryTranslator setTextStyle:ofRowAtIndex:]
Categories: cannot set text style for that row
-[TSTCategoryTranslator setCellStyle:ofColumnAtIndex:]
Categories: setting cell style on unknown column
-[TSTCategoryTranslator setTextStyle:ofColumnAtIndex:]
Categories: setting text style on unknown column
v18@?0{TSUModelColumnIndex=S}8r^{TSKUIDStruct=QQ}10
-[TSTCategoryTranslator conditionalStyleSetAtCellID:]
Categories: cannot get conditional style for that cell
-[TSTCategoryTranslator regionForValueOrCommentCellsInRange:]
Categories: cannot resolve region for cell rect
-[TSTCategoryTranslator p_applyViewCellCoord:toSummaryUsingBlock:toLabelUsingBlock:toCategoryColumnUsingBlock:toBaseUsingBlock:]
summary row does not have a valid summary row uid
-[TSTCategoryTranslator p_applyViewColumnIndex:toCategoryColumnUsingBlock:toBaseUsingBlock:toBeyondBoundsUsingBlock:]
Categories: this column is not is not in the base table
-[TSTCategoryTranslator heightOfRowAtIndex:isDefault:]
uid must be label or summary
-[TSTCategoryTranslator rowHeights]
Categories: cannot get row heights.
-[TSTCategoryTranslator columnWidths]
Categories: cannot get column widths.
-[TSTCategoryTranslator setHeight:ofRowAtIndex:]
Categories: cannot set height of this row
-[TSTCategoryTranslator setWidth:ofColumnAtIndex:]
Categories: cannot set width of this column
-[TSTCategoryTranslator removeRowsAtIndex:count:]
Categories: row removal method is not supported.
-[TSTCategoryTranslator removeColumnsAtIndex:count:]
Categories: column removal method is not supported.
-[TSTCategoryTranslator postCommentNotificationForStorage:atViewCellCoord:notificationKey:]
Categories: cannot post notification for comment/cell/key
-[TSTCategoryTranslator commentHostingAtCellID:forCommentStorage:updateCommentMaps:]
Categories: cannot resolve comment for cell/storage
-[TSTCategoryTranslator commentHostingAtCellID:]
Categories: cannot resolve comment for cell
-[TSTCategoryTranslator moveColumnRange:toColumnIndex:]
Categories: could not move column
-[TSTCategoryTranslator cellIDForCellContainingRichTextStorage:]
Categories: cannot resolve cell for this rich text storage
-[TSTCategoryTranslator mergeCellRange:]
attempting to merge a disjoint cell region
-[TSTCategoryTranslator mergeRangeAtCellID:]
found a disjoint merge range
-[TSTCategoryTranslator mergedGridIndicesForDimension:]
should not be any merged row grid indexes in the body range
-[TSTCategoryTranslator enumerateMergesIntersectingCellRegion:usingBlock:]_block_invoke
Unexpected view source merge region for categorized table: %@
-[TSTCategoryTranslator mergeRangesIntersectingRange:]_block_invoke
-[TSTCategoryTranslator mergeRangesIntersectingCellRegion:]_block_invoke
-[TSTCategoryTranslator mergeRangesAndCrumbsIntersectingRange:]_block_invoke_2
-[TSTCategoryTranslator insertColumnsAtIndex:uids:metadatas:tableArea:]
Categories: destination column is not in the header
Categories: table area should be body
-[TSTCategoryTranslator insertRowsAtIndex:uids:metadatas:tableArea:unsetFilterHidingAction:]
Categories: destination row is not in the actual header
Categories: destination row is not in the footer
columnUids: %@
rowUids: %@
%@ mergeSource: %@ mergeRegion: %@
merge origin map:
%@ -> %@
srcTableUID: %@
srcColumnUids: %@
srcRowUids: %@
dstTableUID: %@
dstColumnUids: %@
dstRowUids: %@
-[TSCEFormulaRewrite_RegionMovedInfo loadIndexesFromRegions]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEFormulaRewrite_RegionInfo.mm
Expecting source and dest regions to be the same size
No rows match the filter conditions.
@8@?0
v32@?0{_NSRange=QQ}8@24
-[TSTCell(CoercionPrivate) _coerceEmptyCellToFormat:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCell_CoercionEngine.mm
Cannot coerce to %@
-[TSTCell(CoercionPrivate) _coerceToNumberFormatWithSeparatorFixing:]
Need to have a locale set here.
-[TSTCell(CoercionPrivate) _coerceTextCellToBestNumberFormatUsingLimitedParsing:allowFractions:]
unexpected format type
-[TSTCell(Coercion) coerceToFormatType:usingSpares:]
Illegal format type for coercion: %{public}@
Attempting to coerce a cell with mismatched format and value types
-[TSTCell(Coercion) parseContentOrFormulaFromString:tableInfo:cellID:flags:]
Cell must have its locale set in parseContentOrFormulaFromString:
-[TSTCellStyle(CellDiffAdditions) objectByRemovingPropertiesInMap:addingPropertiesInMap:updateInverseResetPropertyMap:updateInverseSetPropertyMap:optionalConcurrentStylesheet:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellStyle+CellDiffAdditions.m
Can't specify both a cell style and a cell style change at the same time.
-[TSTDataStoreIterator initWithModel:region:flags:searchMask:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTDataStoreIterator.mm
_dataStore
cannot specify both walk right to left and walk bottom to top
-[TSTDataStoreIterator updateCellData:]
_curTile
_curRow
-[TSTDataStoreIterator updateFormulaForCellData:]
-[TSTDataStoreIterator getNext]
-[TSCEAggregateGrid initWithGrids:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEAggregateGrid.mm
failed to allocate memory
-[TSCEAggregateGrid valueAtGridCoord:accessContext:]
2D array access not implemented for class %@
-[TSCEAggregateGrid valueAtIndex:accessContext:]
SFTArgumentAccessor consistency violation
-[TSCEAggregateGrid deepType:]
Shouldn't call deepType on an %@ class
-[TSCEAggregateGrid string:argIndex:locale:]
TSCEAggregateGrid doesn't have a meaningful string() to provide
void TSCEVolatileDependencies::readFromArchive(const TSCE::VolatileDependenciesArchive &)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEVolatileDependencies.mm
corrupt volatile dependency tracker archive
bool TSCEVolatileDependencies::addVolatileGeometryReference(const TSCEInternalCellReference &)
NULL volatile dependencies
com.apple.iWork.TSTPerformance
General
-[TSTGroupingColumn setFunctorForType]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTGroupingColumn.mm
should not attempt to use an invalid grouping type
-[TSTGroupingColumn p_groupingFormatWithLocale:]
yyyy
LLLL yyyy
EEEE
M/d/yyyy
yyyy'-W'w
yyyy-QQQ
LLLL
Value
Year
Year-Month
Day of Week
Year-Month-Day
Year-Week
Year-Quarter
Month
Quarter
TSCEArchives.proto
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/messages/src/TSCEArchives.pb.cc
-[TSTConvertFormulasForCategoriesByRewritingWrapper initWithCalcEngine:rewriteSpec:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTConvertFormulasForCategoriesByRewritingWrapper.mm
Why are we even being created for a non-move rewriteSpec: %d
-[TSTConvertFormulasForCategoriesByRewritingWrapper convertFromBaseToChromeForCategorizedTableMove:containingCell:]
srcColumnUids
srcRowUids
dstColumnUids
dstRowUids
-[TSTConvertFormulasForCategoriesByRewritingWrapper convertFromChromeToBaseForCategorizedTableMove:containingCell:]
void TSCECellRefSet::encodeToArchive(TSCE::InternalCellRefSetArchive &, TSCEDependencyTracker *) const
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECellRefSet.mm
-[TSTPivotStoreIterator initWithInfo:region:flags:searchMask:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTPivotStoreIterator.mm
info.baseTableModel.dataStore
info.summaryModel.dataStore
-[TSTPivotStoreIterator updateCellData:]
_summaryRow
-[TSTPivotStoreIterator updateFormulaForCellData:]
-[TSTPivotStoreIterator getNext]
Unexpected cell coordinate while iterating.
-[TSTTableModel(FormulaOwner) registerWithCalcEngineForDocumentLoad:ownerKind:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTable_FormulaOwner.mm
-[TSTTableModel(FormulaOwner) registerWithCalcEngineForDocumentLoad:ownerKind:]_block_invoke
can't translate a non-formula cell
-[TSTTableModel(FormulaOwner) performReadForOneOffFormulaEvaluation:forCellCoord:]
Evaluating non-formula cell.
-[TSTTableModel(FormulaOwner) evaluateFormulaAt:withCalcEngine:recalcOptions:]
Table model has no calc engine. Aborting recalculation.
Inconsistent calcEngines
Cell %@::%@ said hasFormula=YES, but had no formula in it
TSTTable_FormulaOwner evaluateFormulaAt
 %C 
-[TSTTableModel(FormulaOwner) writeResultsForCalcEngine:]
expect calc engines to be the same
-[TSTTableModel(FormulaOwner) invalidateForCalcEngine:]
-[TSCEAnyReference referenceTextWithCalculationEngine:hostTableUID:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEAnyReference.mm
referenceTextWithCalculationEngine currently only supports cell and range references
-[TSCEAnyReference referenceTextWithCalculationEngine:contextSheetName:]
TSTStrokeAssociatedObject
virtual TSCEValue TSTTableResolver::valueForCellCoord(const TSUCellCoord &, BOOL) const
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableResolver.mm
something went wrong fetching data from the table.
virtual TSCEValue TSTTableResolver::scalarValue(TSCEEvalRef *__strong _Nonnull, const TSCEOwnerUID &, const TSUCellCoord &, BOOL, BOOL) const
Invalid table pointer in a reference to be resolved. Returning a bogus value. Please file a bug.
virtual TSCEHidingAction TSTTableResolver::getHidingAction(TSCEEvalRef *__strong _Nonnull, BOOL) const
can't get hiding action of a range
virtual TSCEValueGrid *TSTTableResolver::valuesForViewTractRef(TSCEViewTractRef *__strong _Nonnull, TSCEHidingAction, TSCEError * _Nonnull __autoreleasing * _Nullable, TSCECellRefSet * _Nullable, BOOL) const
Need a tableUID set to use this interface
Need to implement group level restrictions for categorized tables
virtual TSCEValueGrid *TSTTableResolver::valuesForViewTractRef(TSCEViewTractRef *__strong _Nonnull, TSCEHidingAction, TSCEError * _Nonnull __autoreleasing * _Nullable, TSCECellRefSet * _Nullable, BOOL) const_block_invoke_4
%@: Should have had all precedents already, but missing: %@
v32@?0r^{TSCEGridCoord=II}8r^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16^B24
v40@?0Q8@"NSString"16r^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}24^B32
virtual TSCECellTractRef *TSTTableResolver::cellTractRefForViewTractRef(TSCEViewTractRef *__strong _Nonnull)
The error in the cell was removed.
The formula was updated because it refers to a table that was transposed.
The formula was updated because it refers to a table that was transposed. You may need to make additional changes.
The formula refers to a table that was transposed. You may want to review it.
The formula was replaced with its last calculated value.
The function %@ might have produced a different result than in Excel. The formula was replaced by a formula that will give the same result.
 Original formula: %@
The following conditional highlighting rules are not supported and were removed: Equal or Above Average, Equal or Below Average.
Conditional highlighting rules using standard deviation are not supported and were removed.
Conditional highlighting rules using formulas are not supported and were removed.
The following conditional highlighting rules are not supported and were removed: Contains Errors.
The following conditional highlighting rules are not supported and were removed: Contains No Errors.
Conditional highlighting rules containing unsupported operators were removed.
Conditional highlighting rules using unsupported style attributes were removed.
The conditional formatting containing an unsupported time period was removed.
Unsupported conditional highlighting rules were removed.
The cell was updated with a more accurate duration format. You may want to review formulas that refer to this cell.
-[TSTImportWarningSet TSTImportFormulaWarningTypeToArchive]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTImportWarningSet.mm
Unhandled FormulaWarningType encountered while saving to archive.
v32@?0@"NSString"8Q16^B24
-[TSTWrappedFormula nodesToCheckForBareArgumentPlaceholders]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTWrappedFormula.mm
Expected function node for %@ at the top of parse tree
-[TSTWrappedFormula insertFormulaText:includeWhitespace:]
-[TSTWrappedFormula reparseWithStorage:adjustExpressionTree:]_block_invoke
Unexpected attachment passed to block
-[TSTWrappedFormula reparseWithStorage:adjustExpressionTree:]
-[TSTWrappedFormula reparseWithStorage:adjustExpressionTree:]_block_invoke_2
Expected top function node to be at index 0
Expected top function node to end at index %lu
expected non-top node to be past index %lu
TSCEErrorTypeKey
TSCEFunctionNameKey
TSCEExtraInfoStringKey
TSCEExtraInfoNumberKey
kTSCEDateAsTimeIntervalKey
kTSCEOwnerUIDKey
kTSCERangeReferenceKey
kTSCEReferenceArrayKey
kTSCEAnyReferenceKey
kTSCEArgumentIndexKey
kTSCEExpectedTypeKey
kTSCEFoundTypeKey
TSCELowerBoundKey
TSCEUpperBoundKey
TSCELowerBoundInclusiveKey
TSCEUpperBoundInclusiveKey
TSCEValueToMatchKey
TSCEArgumentsAscendingKey
TSCEEqualityPermittedKey
TSCEAfterMatchKey
TSCEOccurrenceKey
TSCEMatchsFoundKey
TSCEPreviousMatchKey
TSCEPreviousValueIsRegexKey
TSCEProblemExpressionStringKey
TSCEProblemModeKey
TSCEProblemNodeIsCellReferenceKey
TSCEAttachmentErrorRaisedInTextCellKey
TSCEInvalidReferenceToMergeKey
TSCEReferenceEndCellInvalidKey
TSCEUnitNameKey
TSCEChooseIndexKey
kTSCEMaxArgsAllowedKey
kTSCEArgsProvideddKey
+[TSCEError errorWithDictionary:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEError.mm
Must have errorTypeKey set to use this API
-[TSCEError displayStringWithCalculationEngine:forTable:andCellID:]
Unknown error.
\U201C%@\U201D isn\U2019t a valid cell reference.
\U201C%@\U201D isn\U2019t a valid function name.
Numbers can\U2019t be divided by zero.
The formula calculates zero to the power of zero, which can\U2019t be computed.
The operator \U201C%@\U201D
The function \U201C%@\U201D
Argument %d of %@
 can\U2019t be %@.
 can\U2019t take %@.
 expects %@
, but cell %@ contains %@.
 but found \U201C%@.\U201D
 but found an empty cell.
This formula can\U2019t reference its own cell, or depend on another formula that references this cell.
Running Total In requires field to be a grouping column.
Argument %d of %@ must refer to a pivot table.
Argument %d of %@ must refer to an aggregate value of the pivot table.
Argument %d of %@ must refer to a grouping column of the pivot table.
invalid number of arguments error exception
spec not found for function %@
one argument
%d arguments
%@ requires at least %@.
%@ requires at least %@, but was given %@.
%@ requires between %d and %d arguments, but was given %@.
%@ requires %@, but was given %@.
%@ requires its arguments to result in a number within the valid range.
The formula contains a number outside the valid range.
The formula contains an invalid reference.
The formula refers to a cell which contains an error.
Cell \U201C%@\U201D contains an error.
Argument %d of %@ is invalid.
The formula contains a page number or page count, which aren\U2019t allowed in formulas.
The formula refers to a cell with a shape or media file. This isn\U2019t supported.
There are no cells in the intersection of the ranges \U201C%@.\U201D
%@ must have a cell or range reference as an argument.
%@ must have a cell reference as an argument.
%@ must have a range reference as an argument.
%@ couldn\U2019t find the value \U201C%@\U201D.
%@ must begin searching from a number within the length of the search text.
Arguments %d and later
Argument %d
Can't be out of bounds without bounds specified
%@ in %@ must be greater than or equal to %g.
%@ in %@ must be greater than %g.
%@ in %@ must be less than or equal to %g.
%@ in %@ must be less than %g.
%@ in %@ must be greater than or equal to %g and less than or equal to %g.
%@ in %@ must be greater than or equal to %g and less than %g.
%@ in %@ must be greater than %g and less than or equal to %g.
%@ in %@ must be greater than %g and less than %g.
Arrays can contain only constant values.
%@ couldn\U2019t find the requested value.
The two ranges in %@ must be the same size.
The formula contains a list where a single argument is expected.
The formula\U2019s arguments can only include one date value.
%@ requires all arguments to be of the same type, either dates, numbers, or durations.
MODE requires that its arguments contain repeated values.
You must specify a value for all the required arguments.
The function doesn\U2019t allow empty arguments.
Argument %d can\U2019t be empty.
The range %@ can\U2019t be used as a single value.
All arguments to %@ must be the same length.
The formula can\U2019t be calculated because the resulting text would be too long.
Lists of references can\U2019t intersect.
%@ requires %@, but none were found.
no bigger than
at least as big as
smaller than
larger than
Argument %d must be %@ argument %d.
Argument %d must be different from argument %d.
The first argument of %@ must be an index of another argument, but there is no argument at index %d.
An empty string can\U2019t be used as an argument of %@.
%@ requires a string specifying a number, but found \U201C%@\U201D instead.
%@ requires a string specifying a date/time value, but found \U201C%@\U201D instead.
%@ requires both arguments to be positive or negative.
Argument %d of %@ must sum to 1.
R1C1-style references aren\U2019t supported.
The date returned by the formula isn\U2019t valid.
The time returned by the formula isn\U2019t valid.
Vector arguments can contain only one row or column.
%@ requires that all arguments be between 0 and 1.
All arguments must be equal to or larger than zero.
Argument %d of %@ can\U2019t be equal to zero.
%@ requires the position argument to be smaller than or equal to the size of the array.
Argument %d of %@ must be equal to 1, 2, or 4.
Argument %d of %@ must be equal to 0 or 1.
Argument %d of %@ must be equal to 1 or 2.
SUBTOTAL requires that its first argument be between 1 and 11 or 101 and 111.
%@ couldn\U2019t reach a result.
%@ couldn\U2019t reach a result. Try adjusting the estimate argument.
%@ requires multiple pairs of cash-flows and dates.
%@ requires dates to be on or after the starting date.
%@ requires at least one positive and one negative argument.
%@ refers to an empty cell.
%@ refers to %@, which is empty.
The operator \U201C-\U201D can\U2019t subtract a date from a number.
Different currency types can\U2019t be compared.
Durations can\U2019t be compared to other data types.
%@ requires that its arguments use the same type of unit.
%@ requires that arguments %@ use the same type of unit.
Argument %d of %@ can\U2019t be a currency or duration.
Arguments %d and later of %@ can\U2019t contain currency or duration values.
Argument %d of %@ can\U2019t be a currency.
Arguments %d and later of %@ can\U2019t be currency values.
Argument %d of %@ can\U2019t be a duration.
The function \U201C%@\U201D expects %@ but found a duration.
%@ requires that all monetary values use the same currency.
Values being summed by %@ must be either all durations or all numbers, unless one value is a date.
Argument %d of %@ requires at least %@ values.
%@ requires an odd number of arguments, at least three.
%@ requires an even number of arguments.
%@ requires that all range arguments are the same size.
Arrays can\U2019t be empty.
\U2018%@\U2019 isn\U2019t a valid character in the base %d numeral system.
\U201C%@\U201D isn\U2019t a valid unit.
%@ requires that all its arguments have the same type of unit (for example, time or temperature).
Prefixes require metric units. The unit \U201C%@\U201D isn\U2019t metric.
The number to convert has units that conflict with the units to convert from.
The index position in the array must contain data.
The x and y arrays must have the same length and width.
The x and y arrays must have the same length.
The x and y arrays must have the same width.
RECEIVED must evaluate to a value greater than zero.
MATCH requires the third argument to be equal to 1, 0, or -1.
Formulas can\U2019t be longer than 8,192 characters.
RANDBETWEEN requires that both durations have the same maximum unit.
%@ requires all values in argument %d to be numbers.
The first argument of CHAR must represent a valid character, generally between 32 and 65535.
When using duration values with NORMDIST, the cumulative argument must be TRUE.
An x variable is too highly correlated with one or more other x variables for LINEST to calculate a result.
You can\U2019t compare %@ with %@ because their data types are different.
%@ can\U2019t be given multiple durations.
LINEST requires more data points to calculate a result.
%@ requires all numbers in argument %d to be positive.
PERCENTRANK requires that argument 2 be within the range specified in argument 1.
PERCENTRANK.EXC requires that argument 2 be within the range specified in argument 1.
Location services are not enabled on the device.
Bearing information can\U2019t be determined right now.
Location service is unable to obtain a location value right now.
Access to the location service was denied by the user.
The network was unavailable or a network error occurred.
Bearing information can\U2019t be determined due to strong interference from nearby magnetic fields.
The latitude and longitude values are invalid
The altitude value is invalid
The bearing value is invalid
The formula contains an unsupported function
%@ requires at least one TRUE condition, but none were found.
The requested STOCK attribute is invalid.
The requested CURRENCY attribute is invalid.
The requested STOCKH attribute is invalid.
The requested CURRENCYH attribute is invalid.
The requested historical date is invalid or is in the future.
There is no historical data on the requested date. The next available is on %@.
There is no historical data in the entire year of the requested date. Historical data may not be available for all securities.
No information about the specified currency pair.
Unable to retrieve information from the remote data server.
Data for the \U2018%@\U2019 attribute isn\U2019t available for the selected symbol.
\U2026
Ask Price data is not available.
Bid Price data is not available.
Ask Size data is not available.
Bid Size data is not available.
The formula refers to a cell without a formula.
The requested REFERENCE.NAME attribute is invalid.
Argument %d of %@ must be an integer, not a decimal number.
Arguments %d and %d of %@ must be integers, not decimal numbers.
Arguments %d, %d, and %d of %@ must be integers, not decimal numbers.
The %@ function raised an error with %d arguments and something unexpected happened. We shouldn't be here.
No specified error, type %d %{public}@ dictionary: %{public}@
#NAME!
#DIV/0!
#VALUE!
#CIRC!
#ARGS!
#NUM!
#SYN!
-[TSCEError rangeRef]
Wrong type stored for kTSCERangeReferenceKey in errorDictionary: %@
+[TSCEError typeErrorForValue:functionSpec:argumentIndex:locale:]
No functionName available from functionSpec: %{public}@
-[TSCEError isNativelyEqual:]
v32@?0@"TSCERemoteDataSpecifier"8@"TSCECellValue"16^B24
v32@?0Q8@"NSMutableDictionary"16^B24
-[TSCERemoteDataValueMap updateWithValuesFromMap:overwriteValues:]_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCERemoteDataValueMap.mm
-[TSCERemoteDataValueMap initFromArchive:]
Failed to unarchive value for %@!
@"TSTExpressionNode"16@?0@"TSTExpressionNode"8
-[TSTTextStyleHandle initWithTextStyle:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTextStyleHandle.m
expected text style got %{public}@
Fatal Assertion failure: %{public}s %{public}s:%d Unarchiving is incomplete. Equality comparison is bogus and can lead to document corruption. Crashing now.
-[TSTPopUpMenuModel isEqualToChoices:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTPopUpMenuModel.mm
Unarchiving is incomplete. Equality comparison is bogus and can lead to document corruption. Crashing now.
TSTPopUpMenuModel: (
-[TSTPopUpMenuModel p_mcListTypeForArgType:]
Unexpected TSCEArgumentType for popup list.
-[TSTPopUpMenuModel loadFromArchive:]
We are not handling this type of TSCECellValue
TSTPopUpMenuModel Archiving: Only one of item and tsce_item should exist
TSTPopUpMenuModel Archiving: No items to unarchive
Item 1
Item 2
Item 3
+[TSTPopUpMenuModel popupMenuModelReorderingModel:fromIndex:toIndex:]
Bad index
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTIteratorBase.mm
virtual TSCEASTElement *TSCEASTIteratorBase::visitNode(TSCEASTElement *)
TSTArchives.sos.proto
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/messages/src/TSTArchives.sos.pb.cc
-[TSTTableDataObject loadFromArchive:unarchiver:completion:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableDataObject.mm
-[TSTTableDataObject dropReferences:]
dropping data list ref count by more than the total count
-[TSTTableDataObject estimateByteSize]
refCount: %d   commentStorage: %@
refCount: %d   _conditionalStyleSet: %@
-[TSTTableDataCustomFormat encodeToArchive:archiver:]
Should never archive a new custom format datalist!
refCount: %d   _customFormat: %@
refCount: %d   format: %@
-[TSTTableDataCellSpec loadFromArchive:unarchiver:completion:]
Shouldn't find unsupported formulas in documents. This document is corrupted.
refCount: %d   _cellSpec: %@
refCount: %d   _formulaError: %@
refCount: %d   importWarningSet: %@
refCount: %d   popUpMenuModel: %@
v16@?0@"TSTRichTextPayload"8
refCount: %d   storage: %@
-[TSTTableDataString initObjectWithString:refCount:]
created a string table entry with a nil string
refCount: %d   string: %@
v16@?0@"TSSStyle"8
refCount: %d   _style: %@
BOOL TSCEBitGridTile::clearBit(TSUColumnOrRowIndex, TSURowIndex)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEBitGrid.mm
clearBit, out of range [%d,%d]->[%d,%d]: request was [%d,%d]
TSUColumnOrRowIndex TSCEBitGridTile::countInRange(TSUColumnOrRowIndex, TSURowIndex, TSUColumnOrRowIndex, TSURowIndex, const TSCEBitGridTile *) const
countInRange: first row/column must be <= last row/column
countInRange: exclude tile does not correspond to this tile.
countInRange: how did we end up masking off *all* bits?
uint8_t findLowestBitNum(uint32_t)
Can't find a bit set in zero.
Can't find a lowestBitOnly in zero.
TSCEInternalCellReference: #%lu::%@
-[TSTCellDictionary setCell:atCellID:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCellDictionary.mm
can't insert an invalid cell ID
-[TSTCellDictionary cellAtCellID:]
can't look up an invalid cell ID
-[TSTCellDictionary hasCellAtCellID:]
v32@?0{_NSRange=QQ}8@"TSTConcurrentSparseCellList"24
TSCEWarningClassKey
TSCEWarningTypeKey
TSCEWarningContextEntityKey
TSCENativeWarningClass
TSCEBlankReferencingWarning
TSCENonNumericReferencingWarning
TSCEComparisonWarning
TSCEInvalidHyperlinkWarning
TSCENonintegerISODDWarning
TSCENonintegerISEVENWarning
TSCEMonthOutOfRangeWarning
TSCEDayOutOfRangeWarning
TSCEBoolToNumberConversionWarning
TSCEMismatchedSizesWarning
TSCELossOfUnitsWarning
TSCEAutomaticUnitConversionWarning
SFTGlobalID_
<%@ %p with %d key/value pairs 
  { key: string   : %@
         width    : %f
         height   : %f
         vertical : %@
         direction : %@
wpColumn:  object : %@
           string : %@
  },
v32@?0@"TSTLayoutContentCachedKey"8@"TSWPColumn"16^B24
TSCEExtraInfoKey
TSCEArgument1Key
TSCEArgument2Key
TSCEArgument3Key
TSCESyntaxError
TSCEInvalidTokenInFormulaError
TSCEUnknownError
TSCEUnknownFunctionError
TSCEUnknownLabelError
TSCEInvalidReferenceError
TSCEDivideByZeroError
TSCEZeroToPowerOfZeroError
TSCECircularReferenceError
TSCEValueError
TSCENumberOfArgumentsError
TSCETooManyArgumentsError
TSCENumberError
TSCEErrorReferenceError
TSCEInvalidArgumentsError
TSCEAutoNumberAttachmentError
TSCEAttachmentError
TSCEMissingTableError
TSCEInvalidIntersectionError
TSCENotAReferenceError
TSCENotACellReferenceError
TSCENotARangeReferenceError
TSCEMatchNotFoundError
TSCERegexMatchNotFoundError
TSCEOutOfBoundsArgumentError
TSCEInvalidArrayContentsError
TSCEValueNotAvailableError
TSCEArgumentSetUsedOutOfContextError
TSCEDifferentNumberOfDataPointsError
TSCEInvalidDateManipulationError
TSCEMixedTypeManipulationError
TSCENoModeError
TSCEEmptyArgumentError
TSCEEmptyArgumentSpecificError
TSCEInvalidHyperlinkError
TSCEDifferentNumberOfElementsError
TSCEStringTooLongError
TSCEUnionInsideIntersectionError
TSCEStartNumberExceedsStringLengthError
TSCENoSuitableArgumentsError
TSCEInvalidArgumentRelationshipError
TSCEInvalidArgumentEqualityRelationshipError
TSCEInvalidIndexForChooseError
TSCENonEmptyStringRequiredError
TSCEStringDoesNotRepresentANumberError
TSCEStringDoesNotRepresentDateError
TSCESignsMustMatchError
TSCERangeDoesNotSumToOneError
TSCEUnsupportedR1C1Error
TSCEInvalidDateError
TSCEInvalidTimeError
TSCENotAVectorError
TSCEInvalidProbabiltyError
TSCENumberSmallerThanZeroError
TSCEArgumentEqualsToZeroError
TSCEPositionLargerThanArrayError
TSCEInvalidFrequencyError
TSCEInvalidTypeError
TSCEInvalidTailError
TSCEInvalidSubtotalFunctionNumberError
TSCENumberDoesNotConvergeError
TSCENumberDoesNotConvergeWithEstimateError
TSCEReferenceToEmptyCellError
TSCENumberMinusDateError
TSCETooFewDataPointsError
TSCEDateEarlierThanStartingDateError
TSCEOnlyPositiveOrNegativeError
TSCEInvalidCurrencyComparisonError
TSCEInvalidComparisonError
TSCEMismatchedUnitsError
TSCEUnitsNotAllowedError
TSCECurrencyNotAllowedError
TSCEDurationNotAllowedError
TSCEMismatchedCurrenciesError
TSCESumMixedDurationsAndUnitlessWithoutADateError
TSCENotEnoughInputsError
TSCEInvalidArgumentPairingsError
TSCERangeSizeMismatchError
TSCEEmptyArrayError
TSCEInvalidBaseCharacterError
TSCEInvalidUnitStringError
TSCEDifferentDimensionsError
TSCENonMetricUnitPrefixError
TSCEConvertOriginUnitMismatchError
TSCEArrayElementNoDataError
TSCEDataInvalidDimensionsError
TSCEDataInvalidLengthError
TSCEDataInvalidWidthError
TSCENegativeReceivedAmountError
TSCEInvalidMatchModeError
TSCEFormulaTooLongError
TSCEMismatchedMaxUnitsError
TSCEGridValueNotNumberError
TSCECharInputOutOfBoundsError
TSCENormdistPDFDurationError
TSCELinestHighlyCorrelatedVariableError
TSCEComparisonTypeError
TSCEMultipleDurationsError
TSCELinestMatrixUnderdeterminedError
TSCENegativeVectorValueError
TSCEPercentRankInputOutOfRangeError
TSCEPercentRankExcInputOutOfRangeError
TSCELocationServicesNotEnabledError
TSCELocationHeadingUnknownError
TSCELocationUnknownError
TSCELocationUserDeniedError
TSCELocationNetworkError
TSCELocationHeadingFailureError
TSCEInvalidLatitudeLongitudeError
TSCEInvalidAltitudeError
TSCEInvalidHeadingError
TSCEInvalidRegexError
TSCEUnsupportedFunctionError
TSCEUnsupportedFeatureError
TSCENoConditionIsTrueError
TSCEInvalidLiveStockAttributeError
TSCENotAReferenceToAFormulaError
TSCEInvalidReferenceNameAttributeError
TSCEInvalidLiveCurrencyAttributeError
TSCEInvalidHistoricalStockAttributeError
TSCEInvalidHistoricalCurrencyAttributeError
TSCEInvalidHistoricalDateError
TSCENoTradingInformationError
TSCEInvalidStockCodeError
TSCEInvalidCurrencyPairError
TSCERemoteDataServerError
TSCERemoteDataUnavailableError
TSCENotReadyError
TSCEDisallowedStockModeError
TSCEInvalidRangeUsageError
TSCEMissingRunningTotalInFieldError
TSCEMissingPivotTableError
TSCEInvalidAggregateColumnError
TSCEInvalidGroupingColumnError
TSCEInvalidDecimalNumberError
TSCEAbortedError
void TSCECellRecord::switchToEdgeListStructure(TSCECellRecordEdgeLists *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCECellRecord.mm
Overriding existing _edges pointer
void TSCECellRecord::addEdge(const TSCEInternalCellReference &, BOOL)
Should already have an _edges structure allocated
void TSCECellRecord::readExpandedPrecedentsWithOwners(const TSCE::ExpandedEdgesArchive &)
void TSCEEvaluateViewTractRefWithContext(TSCEViewTractRef *__strong, TSCEEvaluationContext &)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTNodeArrayUtilities.mm
TSCEValue TSCEEvaluateASTNodeArrayWithContext(const TSCEASTNodeArray *, TSCEEvaluationContext &)
Not expecting to see UID references during evaluation.
%d is not a valid node tag, seen in: %{public}@
TSCEEvaluateASTNodeArrayWithContext ended up with an empty evaluation stack for %@
void TSCEASTNodeArrayEncodeToArchiveProcessFirstNode(TSCE::ASTNodeArrayArchive *, TSPArchiver *__strong, TSCEASTElement *, TSCEASTElementIterator *, std::vector<TSCENodeArrayEncodingState> &, TSCEASTNodeArrayArchiveOptionsEnum)
verifySpanningSettings failed while archiving, with options: %d
TSCEASTFeatureNodesSeen TSCEASTNodeArrayEncodeToArchiveWithOptions(TSCE::ASTNodeArrayArchive *, TSCEASTNodeArray *, TSPArchiver *__strong, TSCEASTNodeArrayArchiveOptionsEnum)
TSCEASTNodeArray *TSCEFormulaUnarchivingContext::createNodeArrayFromArchive(const TSCE::ASTNodeArrayArchive &)
unarchived invalid spanning settings
can't end an embedded node array with no previous begin
can't unarchive a let node with insufficient embedded node arrays
TSTArchives.proto
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/messages/src/TSTArchives.pb.cc
-[TSCEEvalRef scalarValueForEvalContext:permitAccessInsideMergeRegions:fetchRichTextAttributesIfPlainText:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEEvalRef.mm
v32@?0@"NSNumber"8@16^B24
v16@?0@"NSMutableDictionary"8
bdtr
-[TSTCell initWithLocale:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCell.mm
-[TSTCell copyToCell:]
srcStorage
-[TSTCell copyValueAndFormatToCell:]
-[TSTCell cellByApplyingCellDiff:toTable:andUpdateInverse:optionalConcurrentStylesheet:]
-[TSTCell setProvidedValueTypeBeforeUpgrade]
Provided cells only allowed before Pre-UFF upgrade.
-[TSTCell formattedValue]
Cell number format failed to produce return string.
Cell currency format failed to produce return string.
Impossible cell value type reached.
%@ Total
-[TSTCell stringForEditing]
-[TSTCell bakeFormulaToValue]
can't bake non-formula cells
-[TSTCell setConditionalStyle:clearingID:]
v40@?0@"TSWPAttachment"8Q16Q24^B32
-[TSTCell interactionType]
Cell must be inflated to determine interaction type
-[TSTCell hasStockFormulaForStockUI]
Cell must be inflated to ask if it contains a stock formula
-[TSTCell popupChoiceIndex]
Not a popup cell.
-[TSTCell applyPopupChoiceIndex:]
Unexpected argument type for popup TSCECellValue.
Cannot apply popup choice
v40@?0@8{_NSRange=QQ}16^B32
unhandled formula result type found.
-[TSTCell copyAllFormatsToCell:]
-[TSTCell setFormatID:forStorageFlag:]
Inappropriate storage flag.
-[TSTCell formatForStorageFlag:]
-[TSTCell formatIDForStorageFlag:]
<Unknown>
<cellSpec: %@>
<cellSpec not populated>
bool TSCEReferenceSet::operator==(const TSCEReferenceSet &) const
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEReferenceSet.mm
Can't compare reference sets from different calcEngines
BOOL TSCEReferenceSet::isEqualToDepTrackerPrecedents(const TSCEReferenceSet &) const
void TSCEReferenceSet::insertRef(TSCEReferenceType)
Inserting these refTypes requires accompanying data, refType was %d
void TSCEReferenceSet::insertRef(const TSCEInternalCellReference &)
Dependency tracker is required to use this method
void TSCEReferenceSet::insertRef(const TSCESpanningRangeRef &)
Why are we getting invalid tableUID here?
void TSCEReferenceSet::removeRef(TSCEReferenceType)
Removing these refTypes requires accompanying data, refType was %d
bool TSCEReferenceSet::containsRef(const TSCEInternalCellReference &) const
void TSCEReferenceSet::foreachInternalCellRef(__strong TSCEForEachInternalCellRefBlock) const
-[TSTTableGroupSortOrderUID groupSortOrderByReplacingRuleAtIndex:withRule:withTableInfo:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableGroupSortOrderUID.mm
v32@?0@"TSTTableGroupSortRuleUID"8Q16^B24
-[TSTTableDataStore decrementColumnCellCount:byAmount:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableDataStore.mm
Can't drive cell count below zero!
-[TSTTableDataStore getCell:atCellID:]
Retrieving corrupt cell storage data for cellID:%@
void p_performRichTextStorageDOLC(TSTTableDataStore *__strong, TSTCell *__strong, TSTCellStorageRef)
newStorage.documentRoot
void p_UpdateDataListsForNewCell(TSTTableDataStore *const __strong, TSTCell *const __strong, TSTCellStorageRef, const TSCEOwnerUID &, const __strong id<TSCEFormulaReplacing>, BOOL)
Cell of string value type has no value. Setting to NoContent.
Handed a bad string key! Setting to NoContent.
Expected a formula cell spec
Handed a bad formula key! Repairing.
Expected a control cell spec
Handed a bad formula error key! Repairing.
Handed a bad text storage key! Repairing.
Handed a cell comment key! Repairing.
Handed an import warning set key! Repairing.
Handed a bad cell style key! Repairing.
Handed a bad text style key! Repairing.
Handed a bad conditional style key! Repairing.
-[TSTTableDataStore _setCell:atCellID:tableUID:calculationEngine:conditionalStyleOwner:ignoreFormula:clearImportWarnings:richTextDOLCHint:]
Failed to get tile for cell!
-[TSTTableDataStore setCellMap:tableUID:calculationEngine:conditionalStyleOwner:ignoreFormulas:skipDirtyingNonFormulaCells:doRichTextDOLC:]_block_invoke
Failed to get a tile while setting a map!
preBNCPopupTable
-[TSTTableDataStore resolveDataListKeysForPreBNCCell:suppressTransmutation:sourceStorageVersion:]
String cell has bad string!
StringTable
Formula cell has bad formula!
FormulaTable
NULL formula
FormulaErrorTable
RichTextTable
CommentTable
ImportWarningTable
StyleTable
ConditionalStyleTable
preBNCFormatTable
-[TSTTableDataStore resolveDataListKeysForCell:cache:suppressTransmutation:sourceStorageVersion:]
This cell is corrupt. It has a key for both formula and control.
ControlCellSpecTable
FormatTable
Fatal Assertion failure: %{public}s %{public}s:%d Datalist reference is unexpectedly nil during load!
-[TSTTableDataStore _loadDatalist:forLazyReference:completionBlock:]
Datalist reference is unexpectedly nil during load!
Fatal Assertion failure: %{public}s %{public}s:%d Failed to load a lazy datalist in TSTTableDataStore: %@ in table: %@ with error: errorClass=%{public}@, domain=%{public}@, code=%zd, %{public}@hints=%{public}@ (%@) 
Failed to load a lazy datalist in TSTTableDataStore: %@ in table: %@ with error: errorClass=%{public}@, domain=%{public}@, code=%zd, %{public}@hints=%{public}@ (%@) 
v16@?0@"TSTTableDataList"8
-[TSTTableDataStore _loadRichTextDataList]_block_invoke
Expected non-nil richTextParentInfo back pointer. Should have been set at initialization.
-[TSTTableDataStore addPasteboardCustomFormatsToDocumentAndTableReturningBadIDs]_block_invoke
Unexpected corrupt custom format being pasted.
v16@?0@"TSTTableHeaderStorageBucket"8
v16@?0@"TSTMergeRegionMap"8
v28@?0I8@"TSKFormat"12^B20
%@, key:%d, cellCount:%d, datalist count:%d
%@, key:%d, cellCount:%d, datalist count:0
v32@?0@"TSTTableDataList"8^v16@"NSString"24
condStyles
styles
cellSpecs
f-errors
rich text
formats
comments
imp warns
DataList RefCount Audit good:%d bad:%d dead:%d
Datalist Duplication Audit
Conditional Styles list has dupes.
Strings List has dupes.
Styles List has dupes.
Formula List has dupes.
Control Cell Spec List has dupes.
Format List has dupes.
Import Warnings List has dupes.
ColumnRowCellCount Audit
Cell count mismatch at row %d: header has %td, row has %td
Cell count mismatch at column %d: header should have %td, has %td
-[TSTTableDataStore updateDataListsConcurrentlyWithConcurrentCellMap:clearImportWarnings:]_block_invoke
v24@?0@"TSTCell"8@"TSTCell"16
-[TSTTableDataStore updateDataListsConcurrentlyWithConcurrentCellMap:clearImportWarnings:]_block_invoke_2
-[TSTTableDataStore updateDataListsConcurrentlyWithConcurrentCellMap:clearImportWarnings:]_block_invoke_3
-[TSTTableDataStore updateDataListsConcurrentlyWithConcurrentCellMap:clearImportWarnings:]_block_invoke_4
-[TSTTableDataStore updateDataListsConcurrentlyWithConcurrentCellMap:clearImportWarnings:]_block_invoke_5
-[TSTTableDataStore updateDataListsConcurrentlyWithConcurrentCellMap:clearImportWarnings:]_block_invoke_6
-[TSTTableDataStore updateDataListsConcurrentlyWithConcurrentCellMap:clearImportWarnings:]_block_invoke_7
-[TSTTableDataStore updateDataListsConcurrentlyWithConcurrentCellMap:clearImportWarnings:]_block_invoke_8
-[TSTTableDataStore updateDataListsConcurrentlyWithConcurrentCellMap:clearImportWarnings:]_block_invoke_9
-[TSTTableDataStore updateDataListsConcurrentlyWithConcurrentCellMap:clearImportWarnings:]_block_invoke_12
cells[idx]
v40@?0B8@"TSKFormat"12I20@"NSIndexSet"24^v32
-[TSTTableDataStore setCellsConcurrently:tableUID:calculationEngine:conditionalStyleOwner:ignoreFormula:clearImportWarnings:]_block_invoke
the newCells array and the set of column indexes should be the same size
{vector<long, std::allocator<long>>=^q^q{__compressed_pair<long *, std::allocator<long>>=^q}}32@?0@"TSTTableTileRowInfo"8^v16^v24
-[TSTTableDataStore setCellsConcurrently:tableUID:calculationEngine:conditionalStyleOwner:ignoreFormula:clearImportWarnings:]_block_invoke_2
newFormulaSpec
v18@?0{TSUModelColumnIndex=S}8q10
v36@?0{TSUModelRowIndex=I}8q12@"TSTTableTile"20@"TSTTableTileRowInfo"28
v32@?0@"TSTTableTile"8@"NSMutableIndexSet"16^B24
-[TSTTableDataStore accumulateCurrentCellsConcurrentlyInRow:rowInfo:atColumns:usingCellCreationBlock:]
-[TSTTableDataStore tsceValueFromCell:atCellID:tableUID:]
unhandled table cell type found
-[TSTTableDataStore tsceValueForCellStorageRef:cellCoord:hostTableUID:outValue:]
Can't get a value from a null cell reference!
TSUDecimal TSTCellStorageDecimalValue(TSTCellStorage *)
Asked for TSUDecimal value from an inappropriate cell.
BOOL TSTCellStorageBoolValue(TSTCellStorage *)
Asked for bool value from non-bool cell.
double TSTCellStorageRawDateValue(TSTCellStorage *)
Asked for date value from non-date cell.
-[TSCEValueGrid initWithColumnRange:rowRange:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEValueGrid.mm
Can't set an extent with invalid ranges
-[TSCEValueGrid clearValueAtCoord:]
Can't clear value with a spanning coordinate: %@
-[TSCEValueGrid valueAtCoord:]
Can't read value with a spanning coordinate: %@
-[TSCEValueGrid valueAt1DIndex:]
Index %lu exceeds area: %lu
Can't use valueAt1DIndex: with no dimensions set
-[TSCEValueGrid expandToIncludeCoord:]
Can't expand with a spanning coordinate: %@
-[TSCEValueGrid setValue:atCoord:]
Can't set a value at a spanning coordinate: %@
-[TSCEValueGrid setEmptyValueAtCoord:]
-[TSCEValueGrid subGridAtGridCoord:width:height:]
can't access beyond the end of a vector
Exceeded rowLimit: %d
TSCEValue TSCEFunction_AVERAGEA::evaluateWithContext(TSCEEvaluationContext &)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEStatisticalFunctions.mm
Have to set the type of vector appropriately.
TSCEValue TSCEFunction_CRITBINOM::evaluateWithContext(TSCEEvaluationContext &)
CRITBINOM binary search has a bug.
TSCEValue TSCEFunction_FORECAST::evaluateWithContext(TSCEEvaluationContext &)
Should have at least one x if we're going to successfullly compute FORECAST
TSCEValue TSCEFunction_FREQUENCY::evaluateWithContext(TSCEEvaluationContext &)
static TSCEValue TSCEFunction_GEOMEAN::geometricMeanOfVector(TSCEGrid *, TSCEFunctionSpec *__strong, int, NSArray *__strong, TSCEEvaluationContext *)
static TSCEValue TSCEFunction_HARMEAN::harmonicMeanOfVector(TSCEGrid *, TSCEFunctionSpec *__strong, int, NSArray *__strong, TSCEEvaluationContext *)
static TSCEValue TSCEFunction_LARGE::evaluateWithContext(TSCEEvaluationContext *, TSCEFunctionSpec *__strong, BOOL, BOOL, BOOL)
Out of memory
static TSCEValue TSCEFunction_MAX::extremum(TSCEEvaluationContext *, TSCEFunctionSpec *__strong, int, BOOL, BOOL)
TSCEValue TSCEFunction_MEDIAN::evaluateVector(TSCEFunctionSpec *__unsafe_unretained, TSCEGrid *, TSCEEvaluationContext *)
TSCEValue TSCEFunction_MODE::evaluateVector(TSCEFunctionSpec *__unsafe_unretained, TSCEGrid *, TSCEEvaluationContext *, const TSCEFormat &)
In function MODE, should not reach here.
TSCEValue TSCEFunction_MODE_MULT::evaluateWithContext(TSCEEvaluationContext &)
1, 2, and 3
2 and 3
static TSCEValue TSCEFunction_PERCENTILE::computeWithVector(const TSCEGrid &, const TSUDecimal &, bool, bool, TSCEFunctionSpec *__strong, TSCEEvaluationContext *)
1, 3, and 4
1 and 3
TSCEGrid TSCEFunction_TTEST::subtractVectors(TSCEGrid &, TSCEGrid &, TSCEEvaluationContext &)
Vectors have different number of data points
Vectors have mismatched dimensions.
TSCEValue TSCEFunction_TTEST::evaluateWithContext(TSCEEvaluationContext &)
We probably have a date returned as the variance of these inputs. We should have raised an error earlier in the subtraction code.
Undefined t-test type passed to TTEST. Please file a bug.
1 and 2
-[TSCEReferenceBackedGrid string:argIndex:locale:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEReferenceBackedGrid.mm
TSCEReferenceBackedGrid doesn't have a meaningful string() to provide
-[TSCEReferenceBackedGrid valueAtGridCoord:accessContext:]
-[TSTCommentHosting initWithStorage:forTableInfo:cellUID:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCommentHosting.mm
Expecting valid cell UID!
-[TSTCommentHosting initWithStorage:forTableInfo:baseCellCoord:]
Expecting valid cell ID!
TSTTextCellColumnAutocomplete
-[TSTFormulaRewriteSpec initFromMessage:unarchiver:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTFormulaRewriteSpec.mm
Move rewriteSpec should have AUX rowColumnInfo in archive
Sort/Reorder rewriteSpec should have AUX rowColumnInfo in archive
virtual TSCEASTElement *TSCEASTRowColumnUidMapRewriter::anyReferenceNode(TSCEASTRelativeCoordRefElement *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEASTRowColumnUidMapRewriter.mm
Expected to be called on uid-form formulas only.
TSTStylePropertyArchiving.proto
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/messages/src/TSTStylePropertyArchiving.pb.cc
-[TSTArchivedAutofillSelection setSelection:]
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTArchivedAutofillSelection.mm
Wrong type of class %@ (expected TSTAutofillSelection)
-[TSTTableRep hyperlinkRegions]_block_invoke
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTTableRep.mm
Bounds of hyperlink {%@} are not finite
v16@?0^{CGContext=}8
v16@?0@"TSDTexturedRectangle"8
+[TSTTableRep p_countOfIdenticalCellsBetweenOutgoingTableInfo:incomingTableInfo:]
numberOfColumns not equal!
+[TSTTableRep magicMoveAttributeMatchPercentBetweenOutgoingObject:incomingObject:mixingTypeContext:]
equalCellCount(%d) > totalCellCount(%d)!
delegate
void TSTTableRepPrepareToDrawLayoutSpace(TSTTableRep *__strong _Nonnull, TSTLayoutSpace *__strong _Nullable, CGContextRef _Nullable)
space
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}
WARNING: invalid cell fill %@ %@
v32@?0@8@16^B24
-[TSTTableRep p_drawGroupingArrowInContext:contentFrame:cell:cellID:groupingArrowState:alignedClipFrame:verticalAlignment:wpColumn:]
should only be called on grouping cells
should only be called on tables that are grouped
{%@->%@}
{invalid, invalid}
{invalid, %u}
{%u, invalid}
{%u, %u}
TSTCellRange TSTTableRepDrawIndividualCellContent(TSTTableRep *__strong, TSTLayoutSpace *__strong, TSTGridRange, TSTCell *__strong, TSTCellID, __strong id, __strong id<TSTCellIteratorData>, TSTCellRange, BOOL, NSMutableArray<TSTTableBadge *> *__strong, BOOL, TSWPSelection * _Nullable __strong, CGContextRef)
No TSWPColumn layout rock found.
void TSTTableRepDrawGridRange(TSTTableRep *__strong, TSTLayoutSpace *__strong, TSTGridRange, TSTAnimation *__strong, CGContextRef)
background fill is not supported yet
yyFlexLexer::yylex invoked but %option yyclass used
virtual int TSTDefaultLexer::yylex()
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTDefaultLexer.lmm
Unable to lex tokenAttachment.
fatal flex scanner internal error--no action found
fatal flex scanner internal error--end of buffer missed
fatal error - scanner input buffer overflow
input in flex scanner failed
out of dynamic memory in yy_get_next_buffer()
out of dynamic memory in yy_create_buffer()
out of dynamic memory in yyensure_buffer_stack()
Starting parse
Stack size increased to %lu
Entering state %d
Reading a token: 
Now at end of input.
Next token is
Shifting
int TSTyyparse(TSTParser *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTGrammar.ymm
Parser: the quoted string length is less than 2.
-> $$ =
Error: popping
Cleanup: discarding lookahead
Cleanup: popping
token %s (
nterm %s (
%d.%d-%d.%d
$end
$undefined
TOK_LPAREN
TOK_RPAREN
TOK_LBRACK
TOK_RBRACK
TOK_ARG_SEPARATOR
TOK_DOUBLE_COLON
TOK_UNKNOWN
TOK_IN
TOK_LET
TOK_UNQUOTED_IDENTIFIER
TOK_QUOTED_IDENTIFIER
TOK_AGG_IDENTIFIER_WITH_PARENS
TOK_UNQUOTED_IDENTIFIER_WITH_PARENS
TOK_WS
TOK_QUOTEDSTRING
TOK_FUNCTION_TOKEN
TOK_FUNCTION_END_TOKEN
TOK_NUMBER
TOK_BOOLEAN_TOKEN
TOK_DATE_TOKEN
TOK_DURATION_TOKEN
TOK_VARIABLE_TOKEN
TOK_IDENTIFIER_TOKEN
TOK_ARRAY_LINE_DELIMITER
TOK_REFERENCE_TOKEN
TOK_STRING_TOKEN
TOK_ARGUMENT_PLACEHOLDER_TOKEN
TOK_EMPTY_TOKEN
TOK_COLON
TOK_LESS_OR_EQUAL
TOK_GREATER_OR_EQUAL
TOK_GREATER_THAN
TOK_LESS_THAN
TOK_NOT_EQUAL
TOK_EQUALS
TOK_AMPERSAND
TOK_MINUS
TOK_PLUS
TOK_DIV
TOK_TIMES
TOK_POWER
TOK_PIPE
TOK_PERCENT
UPLUS
UMINUS
$accept
root
expr
unquoted_identifier_component
quoted_identifier_component
identifier_component
identifier
reference
piped_reference_list
list
array
list_of_array_rows
list_head
expr_opt
function
Reducing stack by rule %d (line %lu):
   $%d = 
Stack now
Deleting
virtual int TSTCommaLexer::yylex()
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/tables/TSTCommaLexer.lmm
Reference Construction - Manual Error
int TSCEyyparse(void *)
/Library/Caches/com.apple.xbs/Sources/iWorkImport_Sim/quicklook/iwork/src/shared/calculationEngine/TSCEGrammar.ymm
Invalid Native Syntax String for Argument Token.
ARGUMENT
Invalid Function String specified in Token initialization.
Malformed reference
syntax error
memory exhausted
HIGHER
TOK_BANG
TOK_DOLLAR
TOK_REFERENCE_TOKEN_BEGIN
TOK_REFERENCE_TOKEN_END
TOK_UNQUOTED_LABEL
TOK_QUOTED_LABEL
TOK_ERROR
TOK_TOKEN
label
label_end_token
number
number_end_token
list_tail
scoped_reference
scoped_reference_end_token
scoped_reference_tokenized
unscoped_reference
unscoped_reference_end_token
unscoped_reference_tokenized
cell_ref
cell_ref_tokenized
cell_ref_end_token
void TSCEASTNodeAddChild(TSCEASTNode *, TSCEAST *)
Adding child to leaf
_TtP8TSTables35TSTFixedColumnWidthGeometryProvider_
d24@0:8d16
$s8TSTables35TSTFixedColumnWidthGeometryProviderP
TSCEUnpersistedStorage
TSTFormulaAdditions
TSCERewritingMinion
TSCEFormulaReplacing
NSObject
TSTGroupNode
TSCEWarning
TSTCellSelection
TSDTextSelection
TSTRefParser
TSCERefParsingProtocol
TSTFormsSheetProvider
1a+a
TSTTableModel
TSDMixing
TSTCompatibilityVersionProviding
TSTCustomStrokeProviding
TSTStyleProviding
TSTTableStrokeProviding
TSTTableTileCreating
TSTMutableCellIteratorData
TSTCellIteratorData
TSTTableTile
TSTWidthHeightCollection
TSCEDateCellValue
TSTCellRangeControlSpec
TSCETableNameChangeProtocol
TSCETablesByNameDistributor
TSCECellCoordinateVector
TSCEFunctionSpecDefinitions
TSCECellTractRef
NSCopying
TSTResolverContainerNameProvider
TSCECalculationEngineRegistration
TSKModel
TSTTableInfo
TSDContainerInfo
TSDInfo
TSPCopying
TSDInfoUsingObjectPlaceholderGeometry
TSKSearchable
TSSPresetSource
TSSStyleClient
TSCEColumnRowUIDMapping
TSTTableHiddenRowColumnProviding
TSTAdditionalHiddenRowColumnProviding
TSTTableInternalGeometryProviding
TSTTableMergeRangeProviding
TSWPStorageParent
TSWPTextStatisticsTrackerProvider
TSKAnnotationParent
TSSPropertySource
CellMap
TSTRichTextReferenceWrapper
TSTCellIterating
TSCECellValue
TSTMergeListWrapper
TSTUIDRectRef
TSTCellIterator
TSTCellStyle
TSTInNode
TSTCSEData
TSTPivotTranslator
TSCEUpgradingTablesMinion
TSTStockDetails
0B `
TSTTableTileRowInfo
TSTExpandCollapseState
TSTCellFormulaSpec
TSCEFormulaReturning
TSCEStringManipulator
TSCENameTrie
TSCEReferenceParsingContext
NumericCompare
TSCEEdgeListPrinter
TSCECellDependencyRowPrinter
TSCECellDependenciesPrinter
TSTGroupingColumnList
TSTAdditions
TSCEDistributor
TSTGroupBySet
TSCETrackedReferenceTSPObjectDeprecated
TSTCellDiff
TSCEFunctionsInUse
TSTConcurrentCellMap
TSTCellMapChangeDescriptorDelivering
TSTConcurrentCellList
TSTConcurrentSparseCellList
TSTCellDiffArraySegment
TSTStructuredTextImportRecord
TSTTableDataList
Type_Specific_API
Upgrade
TSTTableStyle
TSCENilCellValue
TSTArchivedCellSelection
TSKArchivedSelection
TSTArchivedRdar39989167CellSelection
TSTColumnAggregate
TSCEStringCellValue
TSTCellStyleHandle
TSTTableTileStorage
TSTTableHeaderStorage
TSTEphemeralFilter
TSTTableHeaderStorageBucket
Archiving
TSCELogicalTest
TSTFormulaStore
TSCEAbstractGrid
Analytics
TSTLayoutProcessChangesActions
TSWPStyleProviding
TSTLayout
TSWPColumnMetrics
TSWPLayoutParent
TSWPStorageObserver
TSTAccumulator
TSTColumnAggregateList
TSCEReferencesToDirty
Helper
TSCEErrorCellValue
TSTRangeRefPair
TSTRefNamer
TSCERefNamingProtocol
TSCETransaction
TSCENamedReferenceManager
TSCEFormulaOwning
TSCESumAccumulator
TSTPivotCellSetter
TSTCellDiffArray
TSCECoordMapper
TSCECoordMappingProtocol
TSTWPTableInfo
TSTStrokeSidecar
TSTStrokeSidecarLookupMap
TSTCellRangeCache
TSTTableInfoHint
TSDDrawableContainerInfo
TSDReplaceableMediaContainer
TSDReducibleImageContainer
TSDCompatibilityAwareMediaContainer
TSDSelectableHintMediaContainer
TSTLayoutSpace
TSTCoordinateArray
TSCECellDirtier
TSTCellWillChangeProtocol
TSTCellWillChangeDistributor
TSTMergeChangeProtocol
TSTMergeChangeDistributor
TSCEUIDSet
NSMutableCopying
TSCEMutableUIDSet
TSCEConfiguration
TSTFormulaTokenContext
TSCEFormulaObject
TSTVariableNode
TSTWPFormulaSelection
TSTWPFormulaArchivedSelection
TSTWPFormulaFieldSelection
TSTCellRegionGatherer
TSCERegionAllocator
TSTAggregator
TSTTableStylePreset
TSSPreset
TSTHiddenStateIndexSet
TSTTableStrokePreset
TSCERelativeTractRef
TSTTableStyleNetwork
TSTLocalStylesKey
TSTLocalAccumulator
TSCERefNamingContext
TSTOwnerUidMapper
TSCEAbortObject
TSCECalculationEngine
TSCEGroupByChange
TSTTableArchivedControlCellSelection
TSTTableDataListItemCache
TSTTableDataListCache
TSTTableStrokePresetList
TSCEFormulaRewriteSpec
TSTTableStrokePresetData
TSCESageSizedList
TSCE_PrefixMatch
TSCETablesByName
TSTArchiving
TSTLayoutCellIterator
TSTExpressionNode
TSTFormulaToken
TSTFormula
TSTFormulaHelperMethods
ValidationSidecarAdditions
TSCEAdditions
TSTCellChooserControlSpec
TSTTextStyleToFontHeightCache
TSCEFunctionArgumentSpec
TSTHiddenStateFormulaOwner
TSTStyleDefaultsCache
TSTOperatorNode
TSTStrokeSelection
TSTCustomFormatListUpgradeHelper
TSTCustomFormatListReferenceWrapper
TSTTableControlCellSelection
TSCERegexMatcher
TSTNumberNode
!`&`"@
TSTCell_PreBNC
TSTCellMap
TSTCellMapIterator
TSTCellList
TSTStrokeWidthCache
TSTTableNameSelection
TSTColumnRowUIDMap
TSTImmutableColumnRowUIDMap
TSTCategoryOwner
TSTAggNode
TSTFunctionNode
TSCERemoteDataCoordinator
TSTLetNode
TSTSummaryModel
TSTGroupByChangeProtocol
TSTSummaryModelGroupByChangeState
TSTCellToggleControlSpec
TSCEHauntedOwner
TSTStrokeOrderedLayerToken
TSTStrokeLayerStrokeAndRange
TSTStrokeOrderedLayer
TSCEValueContainer
TSCETrackedReferenceStore
TSTFormulaPredArgData
TSTFormulaPredArg
TSTHiddenStatesOwner
TSCEWrappedCellRef
TSCEWrappedRangeRef
TSTBooleanNode
TSCEFormulaRewrite_Uids
TSCEFormulaRewriteInfo_RangeEntry
TSCEFormulaRewriteInfo_RowColumnInfo
TSTArrayNode
TSTListNode
TSTGroupNodeFormatManager
TSTWPLayout
TSTStringNode
TSTCellUIDRegion
TSTDateNode
TSTReferenceNode
TSTStarRatingRenderer
TSTPencilAnnotation
TSKPencilAnnotation
TSCERangePrecedentsTile
TSTDurationNode
TSCELocalization
TSTArgumentPlaceholderNode
TSTPostfixOperatorNode
TSTStrokeDefaultVendor
TSCEDenseGrid
TSTUidCoordsForLevelAndType
TSTUidCoordsPerGroupValueTuple
TSTUidCoordsPerRunningCellValue
TSTRunningTotalContext
TSCEUnitRegistry
TSTPrefixOperatorNode
TSTFunctionEndNode
TSCEColumnRowIndexMapper
TSTCellFormatAndValue
TSTCellDiffing
TSSPropertyCommandSerializing
TSTLayoutValidationBundle
TSCEUuidReferences
TSTPivotOwner
TSTWPRep
TSTHiddenStates
TSTStrokeSidecarIterator
TSTCellRegionIterating
TSTMutableCellIteratorDataUpdating
TSTGroupBy
TSTCellUIDLookupListWrapper
TSTTableGroupSortRuleUID
TSCERemoteDataStore
TSTEmptyExpressionNode
TSTCellBorder
TSTStrokeLayerAbstractStack
TSTStrokeLayerStack
TSTStrokeLayerMergedStack
TSTStrokeExporter
TSTUniqueValuesToRows
TSTHiddenStateExtent
TSTMergeOwner
TSTCellSpec
TSTSortRuleReferenceTracker
TSTAutofillSelection
TSTLayoutEngine
(3R!
TSTLayoutHint
TSDHint
TSTArchivedLayoutHint
TSDArchivedHint
CellDiffAdditions
TSTTablePartitionerParticipating
TSTTablePartitioner
TSDPartitioner
TSTLayoutSpaceBundle
TSCEFormulaOwnerDependencies
TSTTableDataListSegment
TSTConcurrentCellIterator
TSTConcurrentCellIteratorFourArgRock
TSTMergeAction
TSTCellUIDList
TSTCellUIDIterator
TSTGroupByChangeDelayedNotification
TSTGroupByChangeDistributor
TSCEBooleanCellValue
TSCERemoteDataSpecifier
TSTTableTileGroup
TSCENumberCellValue
TSCERemoteDataSpecifierSet
TSTMergeRegionMap
TSTFormulaRewrite_PivotInfo
TSTPencilAnnotationOwner
TSTPivotGroupingColumnOptions
TSTPivotGroupingColumnOptionsMap
TSTWidthHeightCache
TSCERemoteDataSourceFetcher
TSCEFormulasToSet
TSTChangeDescriptor
TSTCustomFormatList
TSTTextEngineDelegate
TSWPTextDelegate
TSTTableSortOrder
TSTLayoutTask
TSTConcurrentMutableCellUIDSet
TSCEReferenceResolving
TSTCellStateForLayout
TSTWPTokenAttachment
TSCEBulkCellChangeMinion
TSTPivotRowColumnOrder
TSTCompletionToken
TSTStrokeLayerToken
TSTStrokeLayer
TSTStrokeLayerEnumerating
TSTMutableStrokeLayer
TSCEGetPivotDataBundle
TSCETaggedDecimalListObject
TSTConcurrentStylesheetKey
TSTConcurrentStylesheet
TSTAnimation
TSTFontInfoCacheEntry
TSTFontInfoCache
TSTIndexingChunk
TSTHeaderNameMgrTile
TSTHeaderNameSubset
TSTHeaderNameMgr
TSTCellDiffMap
TSCETableTransposedInfo
TSCERewriteTableUIDInfo
TSCERewriteGroupNodeUIDInfo
TSTTableSortRule
TSTTableViewSortRule
TSTGroupValueTuple
TSCEQuotedRefPathWord
TSCEQuotedRefPathComponent
TSCEQuotedRefPathSplitter
TSCEUUidReferenceMap
TSTCheckboxRenderer
TSTMergeRangeSortedSet
TSTLayoutContentCachedKey
TSTLayoutDynamicResizeInfo
TSTLayoutDynamicResizeInfoProtocol
TSTColumnRowUIDMapper
TSTCategoryStoreIterator
TSCEFormulaOwnerWrapper
ReferenceResolving
TablesAdditions
TSTCategoryAggregateFormulaOwner
TSTRichTextPayload
TSCEViewTractRef
TSTSummaryCellVendor
TSCECalcTimeoutObject
TSTTableFilterRule
TSTTableFilterSet
TSCECategoryRef
TSTFormulaPredicate
TSTArchivedStrokeSelection
TSTTableBadge
TSTCellRegion
ModelCoordinateSupport
ViewCoordinateSupport
TSTMutableCellRegion
TSTCellRegionRowMajorIterator
TSTCellRegionColMajorIterator
TSTCellRegionRowMajorReverseIterator
TSTCellRegionColumnMajorReverseIterator
TSCEUndoTract
FullTuple
TSCEUndoTractList
NSFastEnumeration
TSCEStock
TSCECellRecordTileWrapper
TSTTableTranslator
TSCETableTranslatorProtocol
TSCEFunctionSpec
TSTStrokeExportCache
TSCEGroupByNodeMap
TSTIdentifierNode
TSTTableHeaderInfo
TSTTemporaryCollectionNode
TSTConditionalStyleRule
TSCEFormulasForUndoForOwnerKind
TSCEFormulasForUndo
TSTConditionalStyleSet
TSTConcurrentMutableIndexSet
TSTConditionalStyleFormulaOwner
TSCETrackedReference
TSTLayoutDynamicResizeInfoUnify
TSTLayoutDynamicResizeInfoAccordion
TSTCategoryOrder
TSTPasteMap
TSTTableSortTag
TSCECalendar
ChangeGroups
TSTColumnRowMetadata
TSTContentComposingIterator
Reorganize
TSTCategoryTranslator
TSCEFormulaRewrite_RegionInfo
TSCEFormulaRewrite_RegionMergedInfo
TSCEFormulaRewrite_MergeOriginMovedInfo
TSCEFormulaRewrite_RegionMovedInfo
TSTFilteredTableDynamicContentDelegate
TSTLayoutDynamicContentProtocol
TSTHiddenRowsColumnsCacheValidationCollection
TSTHiddenRowsColumnsCache
CoercionPrivate
Coercion
TSTDataStoreIterator
TSCEAggregateGrid
TSTArchivedLayoutEngineBundle
TSTFormulaEqualsTokenAttachment
TSTFormulaEqualsTokenAttachmentRenderer
TSWPGraphicalAttachmentRenderer
FormulaAdditions
TSTArchivedTableNameSelection
TSTPerformanceLogging
TSTGroupingColumn
TSTConvertFormulasForCategoriesByRewritingWrapper
TSTPivotStoreIterator
FormulaOwner
TSCEAnyReference
TSTStrokeAssociatedObject
TSTTableResolverFactory
TSCETableResolverFactoryProtocol
TSCEResolverLocatingProtocol
TSTImportWarningSet
TSTImportWarningSetByCellRef
TSTWrappedFormula
TSCEError
TSCERemoteDataValueMap
TSTChartReferenceFormula
TSTTextStyleHandle
TSCECellValueCombinator
TSTPopUpMenuModel
TSUMultipleChoiceListChoiceProviding
TSTTableDataObject
TSTTableDataCommentStorage
TSTTableDataConditionalStyleSet
TSTTableDataCustomFormat
TSTTableDataFormat
TSTTableDataCellSpec
TSTTableDataFormulaError
TSTTableDataImportWarningSet
TSTTableDataMultipleChoiceList
TSTTableDataRichText
TSTTableDataString
TSTTableDataStyle
TSTTableDataPayload
TSTCellDictionary
TSTDupContentCache
TSCEEvalRef
TSTWPColumnCache
TSTTableModelCellModificationHelper
TSTCell
TSCEReferenceSetWrapper
TSTTableGroupSortOrderUID
TSTTableDataStore
TSTCellReorganizeValue
TSCEValueGrid
AbstractGrid
TSTCommentStorageWrapper
TSCEReferenceBackedGrid
TSTLayoutSpaceBezierPathCacheKey
TSTLayoutSpaceBezierPathCache
TSTCommentHosting
TSDComment
TSDAnnotation
TSKAnnotation
TSTConfiguration
TSTFormulaRewriteSpec
HasDateArguments
TSTArchivedAutofillSelection
TSTTableRepProcessChangesActions
TSTTableRep
TSWPRepParent
TSDContainerRep
TSTTableRepInternal
UITextFieldDelegate
CALayerDelegate
TSTPdfTagger
TSKPdfTagger
TSDMasterDrawableDelegate
CGColor
.cxx_destruct
T@"NSArray",R,N
CGFloatValueForProperty:
T@"NSDictionary",&,N,V_metadata
CGPath
T@"TSCEFormulaRewriteInfo_RowColumnInfo",&,N,V_auxRowColumnInfo
T#,R
T@"TSDFill",R,N
T@"<TSCECalculationEngineRegistration>",&,N,V_calcEngineRegistrationObject
T@"TSTCell",R,N
T@"<TSCEFormulaReplacing>",&,N,V_minion
T@"TSTTableGroupSortOrderUID",N
T@"<TSCERefNamingProtocol>",R,&,N
T@,&,N,V_fourth
T@"<TSCEReferenceResolving>",R,N
TB,N,V_allowFreeformFormulaText
T@"<TSDHint>",&,N
TB,N,V_dynamicBandedFillSetting
T@"<TSKMultiTableRemapping>",&
TB,N,V_layoutInvalidateProvider
T@"<TSTCanvasReferenceController>",R,W,N,V_canvasReferenceController
TB,N,V_mixedDurationsAndNumbers
T@"<TSTCellIteratorData>",N,V_modelIteratorData
TB,N,V_supportsDragDropMoveMode
T@"<TSTCellRegionIterating><TSTMutableCellIteratorDataUpdating>",&,N,V_contentIterator
TB,R,N,GisEmpty
T@"<TSTCellRegionIterating><TSTMutableCellIteratorDataUpdating>",&,N,V_strokeIterator
TB,R,N,GisValid
T@"<TSTLayoutDynamicCellFillProtocol>",&,N,V_dynamicCellFillDelegate
TB,R,N,V_mightHaveCustomFormats
T@"<TSTStrokeLayerStrokeAndRange>",&,N,V_majorStrokeLayerToken
TI,N,V_cachedNumberOfFooterRows
T@"<TSTTableAnimationController>",W,N,V_animationController
TQ,N,V_cachedMaxNumberOfColumns
T@"<TSTTableHiddenRowColumnProviding><TSTTableInternalGeometryProviding>",W,N,V_tableProvider
TQ,N,V_rowIndex
T@"<TSTTableStrokeProviding>",R,N,V_defaultStrokeProvider
T^v,R,N
T@"<TSWPStyleProviding>",R,N,V_styleProvidingSource
T^v,R,V_rowUids
T@"<TSWPStyleProviding>",R,W,N,V_styleProvidingSource
Td,R,N,V_height
T@"CAShapeLayer",&,N,V_findSelectionHighlightLayer
Ti,N,V_maxOrder
T@"NSArray",&,N,V_interestingCells
T{?={?=II}{?=II}},N,V_gridRange
T@"NSArray",&,N,V_rules
T{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}},R
T@"NSArray",&,N,V_whitespaceAfterDelimiters
T{TSKUIDStruct=QQ},N,V_tableUID
T@"NSArray",R,C,N
T{TSUCellCoord=ISBB},N,V_cellID
T@"NSArray",R,N,V_conditionalStyleSetRules
T{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}},R,N
T@"NSArray",R,N,V_receivers
_active
T@"NSArray",R,N,V_thresholdCellValues
_aggregateIndex
T@"NSCharacterSet",&,N,V_whitespaceAndNewlineCharSet
_allowTableName
T@"NSCountedSet",&,N,V_dynamicLayoutParticipants
_argumentCounts
T@"NSDate",&
_bounds
T@"NSDate",&,N,V_date
_cachedBaseRegionVersionCounter
T@"NSDate",&,N,V_lastFullRefreshDate
_cachedIndexesForLeadingColumns
T@"NSDate",&,N,V_value
_cachedMaskRect
T@"NSDate",R,C,N
_cellFormatKind
T@"NSDate",R,N,V_startTime
_cellRefDirtier
T@"NSHashTable",&,N,V_referenceIdentifiers
_changeNotifier
T@"NSIndexSet",&,N,V_cachedIndexesForLabelRows
_chromeRangeRef
T@"NSIndexSet",&,N,V_cachedIndexesForLeadingRows
_clearErrorLock
T@"NSIndexSet",&,N,V_cachedIndexesForSummaryAndLabelRows
_coerceToCustomNumberishFormat:
T@"NSIndexSet",&,N,V_cachedIndexesForSummaryRows
_columnsInvalid
T@"NSIndexSet",&,N,V_intersectingColumnsIndexSet
_commentStorage
T@"NSIndexSet",&,N,V_populatedColumnsForGroupLevel1
_compressedSize
T@"NSIndexSet",&,N,V_populatedColumnsForGroupLevel3
_curRow
T@"NSIndexSet",&,N,V_populatedColumnsForGroupLevel5
_currentCellUID
T@"NSIndexSet",R,N
_dataKindStatus
T@"NSMapTable",&,N,V_cachedLabelRowIndexesAtLevels
_dependentsList
T@"NSMapTable",&,N,V_cachedLeadingRowIndexesAtLevels
_documentLocale
T@"NSMapTable",&,N,V_cachedLeadingSummaryRowIndexesAtLevels
_dynamicHidingRowsColsDirection
T@"NSMapTable",&,N,V_cachedSummaryRowIndexesAtLevels
_emptyCellCount
T@"NSMapTable",&,N,V_repairOrReplaceMap
_expandDirtyRegionForReferences
T@"NSMapTable",R,N,V_commentHostingMap
_expressionTree
T@"NSMutableArray",&,N,V_cellEditingMaskLayers
_forceSheetName
T@"NSMutableArray",&,N,V_changeDescriptors
_forceTableName
T@"NSMutableArray",&,N,V_cleanCellDependencyRows
_formatsRemoved
T@"NSMutableArray",&,N,V_inverseMergeActions
_formulaEditorEvaluatesFormulas
T@"NSMutableArray",&,N,V_mergeActions
_formulaWarning
T@"NSMutableArray",&,N,V_reorganizeValues
_fromGroupByUID
T@"NSMutableArray",&,N,V_strongReferences
_groupCellValue
T@"NSMutableArray",&,N,V_tilesPerRow
_groupSortRules
T@"NSMutableArray",&,N,V_widthHeightCollections
_hasLargerFonts
T@"NSMutableArray",R,N,V_animationStack
_hidden
T@"NSMutableDictionary",&,N,V_data
_hiddenStatesByColumnExtentUuid
T@"NSMutableDictionary",&,N,V_partitioningPassCache
_importSettings
T@"NSMutableDictionary",&,N,V_uniqueValueToRowUids
_importedRegion
T@"NSMutableDictionary",R,N,V_cachedStocks
_isCopyContainingCategoryColumn
T@"NSMutableDictionary",R,N,V_tableNameHeightCache
_isRows
T@"NSMutableIndexSet",&,N,V_hidden
_lastRowDiffPos
T@"NSMutableIndexSet",&,N,V_rowsInvalid
_layout
T@"NSMutableIndexSet",&,N,V_userVisible
_layoutInFlight
T@"NSMutableIndexSet",&,N,V_visible
_locale
T@"NSMutableIndexSet",R,N,V_mutableIndexSet
_nestedRewrites
T@"NSMutableSet",&,N,V_contentReadingThreads
_nextCategoryAggregatesOwnerUID
T@"NSMutableSet",&,N,V_unSyncedStocks
_nextHiddenStateForRowsOwnerUID
T@"NSNumber",&,N
_noContentCount
T@"NSNumber",R,N
_number
T@"NSObject<OS_dispatch_queue>",R,N,V_queue
_offset
T@"NSObject<OS_dispatch_source>",&,N,V_timer
_paragraphStyle
T@"NSObject<TSDContainerInfo>",R,N
_pendingViewColumnsOrRowsHidden
T@"NSObject<TSDContainerInfo><TSWPStorageParent>",W,N,V_richTextParentInfo
_pivotDataTable
T@"NSObject<TSDInfo>",N
_populatedColumnsForGroupLevel1
T@"NSObject<TSTTableDataPayloadHashing>",&,N,V_payload
_populatedColumnsForGroupLevel3
T@"NSPointerArray",&,N,V_arrayOfChunkRocks
_populatedColumnsForGroupLevel5
T@"NSPointerArray",&,N,V_presets
_referenceColor
T@"NSPointerArray",&,N,V_strokeTypeToLayerMap
_regionIterator
T@"NSPointerArray",&,N,V_styleProviderStack
_removeFormulasDuringWritePhase
T@"NSPointerArray",R,N,V_leftColumnStrokes
_reservedFragmentPrecedentsLock
T@"NSPointerArray",R,N,V_topRowStrokes
_rowIndexForUid
T@"NSSet",&,N,V_annotations
_rowTgtToPbMaps
T@"NSSet",C,N,V_visibleFillKnobs
_rowUIDsForImportedGroupingRows
T@"NSString",&,N
_rwLock
T@"NSString",&,N,V_aggregateFunction
_second
T@"NSString",&,N,V_completionText
_showCleanCells
T@"NSString",&,N,V_dateFormat
_sourceFetchers
T@"NSString",&,N,V_identifier
_sparseCellList
T@"NSString",&,N,V_localizedBlankGroupName
_startingTileID
T@"NSString",&,N,V_localizedFalseGroupName
_string
T@"NSString",&,N,V_localizedTrueGroupName
_stroke
T@"NSString",&,N,V_ownerName
_strokeProvider
T@"NSString",&,N,V_rawString
_symbol
T@"NSString",&,N,V_sheetName
_tableNameValid
T@"NSString",&,N,V_string
_temporaryObjectContextDelegate
T@"NSString",&,N,V_tableName
_topStrokeOrder
T@"NSString",&,N,V_trailingWhitespace
_transposedInfo
T@"NSString",&,N,V_whitespaceAfter
_uidsForIndexes
T@"NSString",&,N,V_whitespaceAfterEquals
_uuidReferences
T@"NSString",&,N,V_whitespaceAfterIdentifier
_valueBigNumber
T@"NSString",&,N,V_whitespaceBefore
_visibleIndices
T@"NSString",&,V_whitespaceAfterLeftParen
_weakCalcEngine
T@"NSString",C,N
addAllIdentifiersToSymbolTable:
T@"NSString",C,V_overrideText
addChangedTile:
T@"NSString",R
addCoordMapper:
T@"NSString",R,C,N
addMergeAction:
T@"NSString",R,N
addRelativeRow:
T@"NSString",R,N,V_string
addRemoteDataInterest:forStore:
T@"NSString",R,V_blockingIdentifier
affectedBaseColumnAndRowIndexes
T@"NSURL",&,N,V_importSource
afterRewriteMap
T@"NSUUID",R,&,N
aggregateTypeForAggregateLabel:
T@"Protocol",R,N
alignedStrokeFrameForGridRange:
T@"TSCEAnyReference",&,N
allKeys
T@"TSCECalculationEngine",N,V_calcEngine
allRowGroupUids
T@"TSCECalculationEngine",R,N
analyze
T@"TSCECalculationEngine",R,W,N,V_calcEngine
appendCellList:
T@"TSCECalculationEngine",W,N,V_calcEngine
applyingToTable
T@"TSCECalculationEngine",W,V_calcEngine
arrayWithArray:
T@"TSCECategoryRef",&,N,V_categoryRef
asBooleanFormat
T@"TSCECellTractRef",&,N,V_baseTractRef
attachmentCount
T@"TSCECellValue",R,N,V_cellValue
attachmentErrorRaisedInTextCell
T@"TSCECoordMapper",&,N,V_coordMapper
baseColumnIndex
T@"TSCECoordMapper",&,N,V_srcCoordMapper
baseMap
T@"TSCEEdgeListPrinter",&,N,V_precedentsList
beginSuppressingWillModifyCalls
T@"TSCEFormulaObject",R,N
bezierPathCache
T@"TSCEFormulaRewriteInfo_RowColumnInfo",&,N,V_rowColumnInfo
bodyPivotEmphasisVerticalStroke
T@"TSCEFormulaRewriteSpec",&,N,V_rewriteSpecChromeToBase
booleanAtIndex:
T@"TSCEFormulaRewrite_RegionInfo",&,N,V_originalSrcRegion
cachedCellStyle
T@"TSCEFormulaRewrite_RegionInfo",R,N,V_mergeRegion
cachedLeadingRowIndexesAtLevels
T@"TSCEFormulaRewrite_RegionMergedInfo",&,N,V_mergeInfo
cachedSummaryRowIndexesAtLevels
T@"TSCEFormulaRewrite_Uids",R,N,V_columnUids
canDrawInBackgroundDuringScroll
T@"TSCEFormulaRewrite_Uids",R,N,V_rowUids
categoryLevelForTableStyleArea:
T@"TSCEGroupByChange",&,N,V_groupByChange
cellCoordinates
T@"TSCEMutableUIDSet",&,N,V_rowUIDsForImportedGroupingRows
cellIsInACycle:
T@"TSCENamedReferenceManager",R,N
cellRangeName:usedSymbolicName:
T@"TSCERegexMatcher",&,N,V_matcher
cellRefsForRowIndexes:tableUID:
T@"TSCERemoteDataCoordinator",R,W,N,V_coordinator
cellSpecForDiff
T@"TSCERemoteDataSpecifierSet",R,N,V_interestingKeys
cellUID
T@"TSCERemoteDataStore",R
changesPerColumnMapToBeInGroup:
T@"TSCERemoteDataValueMap",R,N,V_remoteDataMap
choices
T@"TSCERewriteTableUIDInfo",&,N,V_tableUIDInfo
clearAllPivotHiddenAndFiltered:
T@"TSCERewritingMinion",&,N
clearEmptyNodes
T@"TSCETablesByName",R
coerceToFormatType:usingSpares:
T@"TSCETablesByNameDistributor",R,N,V_tableNameChangeDistributor
collapseSummaryColumnGroupUIDs:
T@"TSCEUIDSet",R,N
columnGroupings
T@"TSCEUIDSet",R,N,V_expandedRowColumnUuids
columnRemainDup
T@"TSCEUIDSet",R,N,V_removedGroupNodeUids
columnUIDForGroupingColumnName:
T@"TSCEUIDSet",R,N,V_uidsExpanded
columnUIDsForViewColumnIndexes:
T@"TSCEUndoTract",&,N,V_tract
computedEditingCellContentFrame
T@"TSCEUuidReferences",R,&,N,V_uuidReferences
containsCellID:
T@"TSCEWrappedRangeRef",&,N
containsRowUid:
T@"TSDCommentStorage",&,N,V_commentStorage
contentIterator
T@"TSDCommentStorage",R,D,N
contextResolver
T@"TSDFill",&,N,V_bandedFillObject
controlFormatID
T@"TSDInfoGeometry",C,D,N
coordFromIndex:
T@"TSDInfoGeometry",C,N,V_infoGeometry
copyWithAuthor:
T@"TSDPencilAnnotationStorage",R,N,V_pencilAnnotationStorage
countBlankValue
T@"TSDStroke",&,N,VmExteriorStroke
countOfNumberDateDurationOrBool
T@"TSDStroke",&,N,VmVerticalStroke
cppTile
T@"TSDStroke",R,N,V_bottomStroke
curTile
T@"TSDStroke",R,N,V_topStroke
currentFormatID
T@"TSKAnnotationAuthor",&,N
customFormatKey
T@"TSKChangeNotifier",W,N
dateFromString:
T@"TSKCustomFormatWrapper",R,N,V_customFormatForBlankGroup
dealloc
T@"TSKDocumentRoot",R,N
defaultDateTimeFormatForLocale:
T@"TSKFormat",R,D,N
deferGroupByChangeNotifications
T@"TSKFormat",R,N,V_baseFormat
deriveCategoryCellStyleForTableStyleArea:connectedToStylesheet:
T@"TSKFormat",R,N,V_controlFormat
details
T@"TSKFormat",R,N,V_currentFormat
didCopy
T@"TSKFormat",R,N,V_dateFormat
didModifyTable:
T@"TSKFormat",R,N,V_multipleChoiceListFormat
didRemoveTableName:forTableUID:
T@"TSKFormat",R,N,V_textFormat
disableNotifier
T@"TSKSelection",&,N,VmStrokeSelection
drawCellContent
T@"TSKShuffleMapping",&,N,V_shuffleMapping
dropReferences:
T@"TSPLazyReference",&,N,V_commentStorageTableReference
dupContentCache
T@"TSPLazyReference",&,N,V_controlCellSpecTableReference
edgeExpandTractUsingIncludeUidTract:resolver:forRows:isInverse:
T@"TSPLazyReference",&,N,V_formulaErrorTableReference
editorSelection
T@"TSPLazyReference",&,N,V_importWarningSetTableReference
enabled
T@"TSPLazyReference",&,N,V_richTextTableReference
endDynamicMode:
T@"TSPLazyReference",&,N,V_styleTableReference
enumerateCombinationsWithBlock:
T@"TSPObject<TSDOwningAttachment>",D,N
enumerateMergeRangesUsingBlock:
T@"TSPObject<TSDOwningAttachment>",R,D,N
enumerateTableStylesUsingBlock:
T@"TSPObjectContext",R,N,V_temporaryContext
errorForErrorType:functionName:
T@"TSSPropertyMap",&,N,V_propertyMap
expandedSetWithUuidsFromVector:
T@"TSSPropertyMap",&,N,V_propertyMapToSet
extraInfoNumber
T@"TSSStyle",R,D,N
findOrAddRowInfoAtTileRowIndex:
T@"TSTAccumulator",&,N,V_accumulator
flushDirtyReferencesForSeconds:
T@"TSTAnimation",R,N
foreachCellRef:
T@"TSTAutofillSelection",&,N,V_autofillSelection
format:
T@"TSTCategoryOrder",R,N,V_categoryOrder
formats
T@"TSTCategoryOwner",R,N,V_categoryOwner
formulaOwnerUID
T@"TSTCategoryTranslator",R,N,V_translator
formulasForUndo
T@"TSTCell",C,N,V_cell
fullPropertyMap
T@"TSTCell",R,N,V_layoutCell
functionNameForLocalizedString:
T@"TSTCellDictionary",R,N,V_cellsPendingWrite
getColumnWidth:
T@"TSTCellFormulaSpec",&,N,V_formulaSpec
getUUIDBytesForColumnAggregate:
T@"TSTCellMap",&,N,V_cellMap
groupByForColumnLevel:rowLevel:
T@"TSTCellRegion",&,N,V_cachedBaseRegion
groupNodeUIDMap
T@"TSTCellRegion",&,N,V_cellRegion
groupingColumns
T@"TSTCellRegion",&,N,V_columnRegion
handleFullTile:
T@"TSTCellRegion",&,N,V_importedRegion
hasDirtyingToPerformForOwnerId:
T@"TSTCellRegion",&,N,V_rowRegion
hasNumberFormat
T@"TSTCellRegion",R,N
hasPreserveFlag
T@"TSTCellRegionGatherer",&,N,V_dirtyCellRegionGatherer
hasValueOrError
T@"TSTCellSelection",R,N
hashVal
T@"TSTCellSpec",R,D,N
hotData
T@"TSTCellStyle",&,N
hyperlinkCellID
T@"TSTCellStyle",&,N,V_cachedCellStyle
i_populateIndexesForSummaryRows
T@"TSTCellStyle",&,N,V_categoryLevel2CellStyle
inDynamicLayout
T@"TSTCellStyle",&,N,V_categoryLevel4CellStyle
indexGreaterThanOrEqualToIndex:
T@"TSTCellStyle",&,N,V_cellStyle
indexesForNonSummaryBodyColumns
T@"TSTCellStyle",&,N,V_headerColumnCellStyle
indexesOfVisibleRowsInRowRange:
T@"TSTCellStyle",&,N,V_labelLevel1CellStyle
initAsCompressionMapForIndexes:
T@"TSTCellStyle",&,N,V_labelLevel3CellStyle
initWithColumnUid:groupingType:
T@"TSTCellStyle",&,N,V_labelLevel5CellStyle
initWithContext:expressionNode:
T@"TSTCellStyle",&,N,V_pivotBodySummaryRowCellStyle
initWithDouble:
T@"TSTCellStyle",N
initWithFormatType:minimum:maximum:increment:displayFormatType:
T@"TSTCellStyle",R,N,V_cellStyle
initWithLayoutEngine:rowRegion:
T@"TSTCellUIDList",&,N,V_cellUIDList
initWithLocale:
T@"TSTCellUIDList",R,N,V_cellUIDs
initWithObject:
T@"TSTCellUIDRegion",&,N,V_cellUIDRegion
initWithStorageArchive:treeArchive:nextTileID:unarchiver:owner:
T@"TSTCellWillChangeDistributor",R,N,V_cellWillChangeDistributor
initWithSymbol:
T@"TSTColumnRowUIDMap",&,N,V_columnRowUIDMap
initWithTableUID:preserveFlags:
T@"TSTColumnRowUIDMap",R,N
initWithTrueString:falseString:
T@"TSTColumnRowUIDMap",R,W,N,V_baseMap
initWithValues:
T@"TSTColumnRowUIDMap",R,W,N,V_viewMap
insertColumnsAtIndex:metadatas:
T@"TSTConcurrentMutableCellUIDSet",R,N
instanceWithArchive:unarchiver:
T@"TSTConcurrentMutableCellUIDSet",R,N,V_cellsToInvalidateNonoverflowingAfterRecalc
interestingKeys
T@"TSTConcurrentSparseCellList",R,N,V_sparseCellList
invalidFunction
T@"TSTConditionalStyleFormulaOwner",R,N
invalidRowIndex
T@"TSTConditionalStyleSet",R,D,N
isArray
T@"TSTCoordinateArray",&,N,V_bodyColumnCoordinates
isBaseRectangle
T@"TSTCoordinateArray",&,N,V_headerColumnRowCoordinates
isCategoryColumnUneditableCell:
T@"TSTDupContentCache",&,N,V_dupContentCache
isCrossAppPaste
T@"TSTExpressionNode",&,N,V_expressionTree
isEqualToArray:
T@"TSTFontInfoCache",&,N,V_fontInfoCache
isKeyboardShown
T@"TSTFormulaPredArg",&,N,V_predArg0
isNotReadyError
T@"TSTFormulaPredArg",&,N,V_predArg2
isReadCancelled
T@"TSTFormulaPredicate",&,N,V_predicate
isStrokeEditing
T@"TSTFormulaRewriteSpec",R,N,V_rewriteSpec
isViewRectangle
T@"TSTFormulaStore",&,N,V_formulaStore
T@"TSTFunctionEndNode",&,N
layoutSpaceType
T@"TSTGroupBy",&,N,V_groupBy
linkToCalcEngine:forTableModel:
T@"TSTGroupBy",R,N
localizedFunctionNameForLocale:
T@"TSTGroupBy",R,W,N,V_groupBy
T@"TSTGroupByChangeDistributor",R,N,V_groupByChangeDistributor
lowercaseString
T@"TSTGroupBySet",W,N,V_groupBySet
mCached
T@"TSTGroupNode",R,N
mCellID
T@"TSTGroupValueTuple",R,N
mExteriorStroke
T@"TSTGroupingColumnList",R,N,V_columnGroupings
mLayout
T@"TSTHeaderNameMgr",R,&,N
mRWLock
T@"TSTHiddenStateExtent",R,N,V_columnHiddenStateExtent
mVerticalStroke
T@"TSTHiddenStateIndexSet",&,N,V_columnsVisible
malloc:
T@"TSTHiddenStateIndexSet",&,N,V_rowsVisible
markAllVolatileFunctionsAsDirty
T@"TSTHiddenStatesOwner",R,N
markForRollback
T@"TSTHiddenStatesOwner",W,N,V_hiddenStatesOwner
maxGroupByIndex
T@"TSTHierarchicalCellDiffMap",&,N,V_beforeRewriteMap
maxSize
T@"TSTImportWarningSet",R,D,N
mergeCellRange:
T@"TSTLayout",&,N,V_scaledLayout
mergeOriginsMap
T@"TSTLayout",R,W,N
minCursorCellID
T@"TSTLayout",W,N,VmLayout
miniDescription
T@"TSTLayoutDynamicResizeInfo",&,N,V_dynamicResizeInfo
minimumCategoryLevelInRowRange:
T@"TSTLayoutEngine",R,N
modelCellRanges
T@"TSTLayoutEngine",R,W,N
multipleChoiceListFormatForKey:
T@"TSTLayoutHint",&,N,V_overrideLayoutHint
mutableIndexesForUIDSet:isRows:
T@"TSTLayoutHint",&,N,VmLayoutHint
mutableStrokeLayerWithContext:subtractingDefaultsFrom:forRange:
T@"TSTLayoutSpace",&,N,V_frozenHeaderCornerSpace
needsObjectUUID
T@"TSTLayoutSpace",&,N,V_repeatHeaderColumnsSpace
networkFromStylesheet:presetID:
T@"TSTLayoutSpace",&,N,V_repeatHeaderRowsSpace
newSumNodeWithContext:children:
T@"TSTLayoutSpaceBezierPathCache",&,N,V_bezierPathCache
numCellsPerTask
T@"TSTLayoutSpaceBundle",R,W,N,V_bundle
numRelativeRows
T@"TSTMergeOwner",R,N,V_mergeOwner
numberOfColumns
T@"TSTMergeRegionMap",&,N,V_mergedCellRanges
numberWithBool:
T@"TSTMutableCellIteratorData",&,N,V_layoutCellData
openTransaction
T@"TSTMutableStrokeLayer",&,N,V_clearedMajorStrokeLayer
p_bodyGridRange
T@"TSTMutableStrokeLayer",&,N,V_clearedStrokeLayer
p_cells
T@"TSTMutableStrokeLayer",&,N,V_dynamicUnorderedStrokeLayer
p_getNextCellID
T@"TSTMutableStrokeLayer",&,N,V_spillMinorStrokeLayer
p_hiddenIndexes
T@"TSTOwnerUidMapper",R,N
p_mightBeEqual:
T@"TSTPencilAnnotationOwner",R,N,V_pencilAnnotationOwner
p_mostRecentlySetTextFormatType
T@"TSTPivotOwner",R,N
p_removeApplicationNotification
T@"TSTPivotRowColumnOrder",R,N,V_pivotOrder
p_setFilterSet:
T@"TSTPopUpMenuModel",R,D,N
p_setLeftStroke:order:atCellID:
T@"TSTReferenceNode",&,N,V_editingReferenceNode
p_setupTableModelforStockSwatch
T@"TSTSelectionDragController",W,N,V_cellDragController
p_upgradeMerges
T@"TSTSortRuleReferenceTracker",R,N,V_sortRuleReferenceTracker
padding
T@"TSTStockDetails",R,N,V_stockDetails
payload
T@"TSTStrokeLayer",&,N,V_bottomStrokeLayer
pivotColumnUIDs
T@"TSTStrokeLayer",&,N,V_customUnorderedStrokeLayer
popRewriteSpec:
T@"TSTStrokeLayer",&,N,V_defaultMinorStrokeLayer
prepareForPasteWithCalculationEngine:sourceOffset:bakeFormulas:
T@"TSTStrokeLayer",&,N,V_majorStrokeLayer
presets
T@"TSTStrokeLayer",&,N,V_topStrokeLayer
prohibitsModificationToChildren
T@"TSTStrokeOrderedLayer",&,N,V_customOrderedStrokeLayer
prunedColumnUIDsFromColumnUIDs:
T@"TSTStrokeSidecar",&,N
quoteComponents
T@"TSTStrokeSidecar",R,N
raiseAttachmentErrorInTextCell:
T@"TSTStrokeWidthCache",&,N,V_columnToStrokeWidthCache
raiseInvalidHistoricalDateError
T@"TSTStructuredTextImportRecord",&,N
raiseNoSuitableArgumentsFoundErrorForFunctionName:requiredType:
T@"TSTSummaryCellVendor",R,N,V_summaryCellVendor
raiseValueErrorForFunctionName:
T@"TSTSummaryModel",R,N,V_summaryModel
recreateFormula
T@"TSTTableDataList",R,N,V_multipleChoiceListFormatDataList
refCountForKey:
T@"TSTTableDataListCache",R,N,V_dataListCache
refPathSplitter
T@"TSTTableDataListItemCache",&,N,V_formats
referencesMatchingInputAsPrefix
T@"TSTTableDataListSegment",N,V_cachedSegment
regionFillingColumnsFromRegion:
T@"TSTTableDataStore",R,N,V_dataStore
regionOffsetBy:
T@"TSTTableFilterSet",&,N
registerWithCalcEngine:inOwner:
T@"TSTTableFilterSet",C,N
relativeColumns
T@"TSTTableGroupSortOrderUID",&,N,V_groupSortOrder
release
T@"TSTTableHeaderStorage",&,N,V_rowHeaderStorage
removeAllFormulasCleanObserver:
T@"TSTTableInfo",N,V_tableInfo
removeCalculationStateObserver:
T@"TSTTableInfo",R,N,V_info
removeObserver:
T@"TSTTableInfo",R,W,N,V_tableInfo
removeRowRange:
T@"TSTTableInfo",W,N
renderedImageSizeForObjectSize:
T@"TSTTableInfo",W,N,V_tableInfo
replies
T@"TSTTableModel",N,V_baseTableModel
requiresStagesBuildingInReverse
T@"TSTTableModel",R,N
resetMergeCache
T@"TSTTableModel",R,N,V_pivotDataTable
resetPivotOrder
T@"TSTTableModel",R,W,N,V_tableModel
resumeEvaluationIfNotTerminated
T@"TSTTableNameSelection",&,N,V_tableNameSelection
rewritingMinion
T@"TSTTableReferences",R,N
richTextOrErrorTextStorageValue
T@"TSTTableSortOrder",C,N
richTextStorage
T@"TSTTableStyle",&,N
rowIndexForUid:
T@"TSTTableStyleNetwork",C,N
rowOrColumnUids
T@"TSTTableStylePreset",&,N,V_tableStylePreset
rowUIDs
T@"TSTTableTileRowInfo",&,N,V_baseRow
rowUidsAsVector
T@"TSTTableTileStorage",&,N,V_tileStorage
ruleIndexInFilter:matchingCell:
T@"TSTTableTranslator",R,N
selectionWithTableInfo:cellUID:
T@"TSTTextEngineDelegate",&,N,V_tableNameTextEngineDelegate
setAbortObject:
T@"TSTTextStyleHandle",R,N,V_textStyleHandle
setAnnotations:
T@"TSTUIDRectRef",R,N
setBaseCellRef:
T@"TSTWPColumnCache",&,N,V_cellIDToWPColumnCache
setByRemovingSpecifiersFromSet:
T@"TSTWPTokenAttachment",W,N,V_tokenAttachment
setCachedFrame:
T@"TSUColor",&,N,V_color
setCachedIndexesForLeadingRows:
T@"TSUColor",&,N,V_referenceColor
setCachedNumberOfHeaderColumns:
T@"TSUIntToIntDictionary",R,N,V_dataKindStatus
setCanBeNested:
T@"TSUIntegerKeyDictionary",&,N,V_columnStrokeExportCache
setCellStyle:forTableStyleArea:
T@"TSUIntegerKeyDictionary",&,N,V_strings
setCellUIDList:
T@"TSULocale",&,N,V_locale
setChooseIndex:
T@"TSULocale",N,V_locale
setConditionalStyle:clearingID:
T@"TSULocale",R,N,V_locale
setCoordMapper:
T@"TSUNetworkReachability",&,N,V_internetReachability
setCurrencyOrNumberDoubleValue:
T@"TSUPointerKeyDictionary",&,N,V_formatsAdded
setDay:
T@"TSUPointerKeyDictionary",&,N,V_textStyleToFontHeight
setDynamicCellBorder:forCellID:
T@"TSUPointerKeyDictionary",R,V_attachmentCellStorageToLayoutMap
setFilterSet:forPivotDataTable:
T@"TSUSparseArray",&,N,V_data
setFirstCellID:
T@"TSUWidthLimitedQueue",&,N,V_layoutMeasureQueue
setFormulaSpec:
T@"TSWPColumn",&,N,V_wpColumn
setHideChromeContextMenuButton:
T@"TSWPLayout",&,N,VmContainedTextEditingLayout
setHighlighted:
T@"TSWPPadding",R,N
setImportWarningSet:clearingID:
T@"TSWPParagraphStyle",&,N
setIntersectingColumnsIndexSet:
T@"TSWPParagraphStyle",&,N,V_cachedTextStyle
setIsDynamicallyHidingRowsCols:
T@"TSWPParagraphStyle",&,N,V_categoryLevel2TextStyle
setKey:
T@"TSWPParagraphStyle",&,N,V_categoryLevel4TextStyle
setMaxConcurrentOperationCount:
T@"TSWPParagraphStyle",&,N,V_footerRowTextStyle
setMergeSource:
T@"TSWPParagraphStyle",&,N,V_headerRowTextStyle
setModelCellID:
T@"TSWPParagraphStyle",&,N,V_labelLevel2TextStyle
setNewCanvasRevealedVertically:
T@"TSWPParagraphStyle",&,N,V_labelLevel4TextStyle
setPartitioner:
T@"TSWPParagraphStyle",&,N,V_tableNameStyle
setPivotRowColumnRuleChangeUID:
T@"TSWPParagraphStyle",N
setProblemMode:
T@"TSWPParagraphStyle",R,N
setRecursivelyDrawingInContext:
T@"TSWPParagraphStyle",R,N,V_textStyle
setReturnWhileEditingNavigates:
T@"TSWPShapeStyle",&,N,V_tableNameShapeStyle
setRowsVisible:
T@"TSWPStorage",&,N,V_deprecatedProvider
setShallowCopy:
T@"TSWPStorage",R,D,N
setSpaceBundle:
T@"TSWPStorage",W,N,V_tableNameEditingStorage
setStroke:forBottomOfRow:order:
T@"UIViewController",R,N
setStrongLazyReference:message:
T@,&,N,V_first
setSupportsPlaceholderGeometry:
T@,&,N,V_warningSetsForUndo
setSyntaxError:
TB,N
setTableNameEnabledInNewTables:
TB,N,GisBlank,V_blank
setTableOffset:
TB,N,GisHighlighted,V_highlighted
setTextStyle:forTableStyleArea:
TB,N,GisRangeWithFunction,V_rangeWithFunction
setTextureType:
TB,N,GisSelected,V_selected
setTilesPerRow:
TB,N,GisTableNameValid,V_tableNameValid
setWhitespaceAfterFunctionName:
TB,N,GneverShowsMenu,V_neverShowsMenu
shallowAddCell:
TB,N,V_allowSpanningColumnReferenceBodyQualifier
shiftIndexesStartingAtIndex:by:
TB,N,V_allowWhitespaceInFormulas
shortStringForQuarterOfYearType
TB,N,V_allowsFullyFilteredTables
shrinkTextToFit
TB,N,V_arrowKeyAtEdgeWhileEditingNavigates
sourceCellRange
TB,N,V_arrowKeysWrap
spansAllColumns
TB,N,V_backTabWraps
splitIntoChunksForExcessiveSize
TB,N,V_cacheIsValid
stackReferences
TB,N,V_cachedCellWraps
storageExceedsMaxFormulaLength:
TB,N,V_cachedIsValidReference
stringForYearWeekTypeForLocale:
TB,N,V_cachedValueWasFetchedWithRichTextAttributes
strings
TB,N,V_cellCountValid
styleIdentifier
TB,N,V_cellPropsRowHeight
superWillModify
TB,N,V_chromeCoordsAreViewCoords
supportsDropCapsInChildStorages
TB,N,V_containsCellBorderChanges
supportsTableColumnAutocomplete
TB,N,V_continuesEditingAfterNavigation
TB,N,V_cornersCanDragResize
tableDefaultFontHeightsAreValid
TB,N,V_disableImplicitNaming
tableModelClass
TB,N,V_doesNotNeedFormulaRewriteForImport
tableNameHeight
TB,N,V_dragByHandleOnly
tableStyleAreaForBaseCellCoord:
TB,N,V_drawPreventAntialias
tableUIDHistory
TB,N,V_dynamicRepResize
takeReferences:
TB,N,V_dynamicRepressFrozenHeaderColumns
targetCellRange
TB,N,V_dynamicResizingColumns
textScaleFactor
TB,N,V_emptyFilteredTable
textureDeliveryStylesLocalized:
TB,N,V_exportPermanentHidingState
timeout
TB,N,V_exportsCellComments
tokenAttachment
TB,N,V_fixupFormulas
topLeft
TB,N,V_forConditionalStyle
transformInRoot
TB,N,V_forFormulaPlainText
tsu_indexSetByExcludingIndexes:
TB,N,V_forceSheetName
uidsForIndexes:
TB,N,V_forceTableName
unpackAfterUnarchiveForGroupBy:
TB,N,V_formulaEditorEvaluatesFormulas
updateCellRange
TB,N,V_hasCachedIsValidReference
updatePrecedentCountForCellRef:
TB,N,V_hasContentIsCached
TB,N,V_hasInterestingKeys
userDescription
TB,N,V_hasPreserveFlag
valueAt1DIndex:
TB,N,V_headerColumnsFrozen
verticalAlignmentForTextLayout:
TB,N,V_headerRowsFrozen
viewCellRegionWithRangeContext:
TB,N,V_headersFrozenByDefault
viewMap
TB,N,V_hideStepperHUD
visible
TB,N,V_ignored
visibleIndexSet
TB,N,V_inInvalidate
wasUnarchivedFromAProvidedTable
TB,N,V_invalidTableOffset
whitespaceAfter
TB,N,V_invalidateAllChromeCaches
widthHeightCacheFromBundle:withNumberOfRows:andNumberOfColumns:
TB,N,V_invalidateKnobs
wrappedRangeRef
TB,N,V_invalidateSelection
zoomToEditOperationIsInProgress
.cxx_construct
T@"NSArray",&,N
CGFloatValue
T@"NSArray",R,V_groupingColumns
CGImageForSize:inContext:orContentsScaleProvider:
T@"NSString",&,N,V_lastFragment
NRM_formulaOwnerUID
T@"TSCEFormulaRewrite_Uids",R,N
T#,R,N
T@"TSDStroke",R,N,V_rightStroke
T@"<TSCEFormulaOwning>",&,N,V_formulaOwner
T@"TSTGroupNode",N,V_parentNode
T@"<TSCEFormulaReplacing>",R,N
T@"TSTTableTile",&,N,V_baseTile
T@"<TSCERefParsingProtocol>",R,&,N
T@,&,N,V_second
T@"<TSCERemoteDataStoreDelegate>",W,N,V_delegate
TB,N,V_createLargeDefaultTables
T@"<TSDHint>",R,N
TB,N,V_layoutInvalidateChildren
T@"<TSKPencilAnnotationStorage>",R,N
TB,N,V_mayModifyFormulasInCells
T@"<TSTCanvasReferenceProvider>",W,N,V_canvasReferenceProvider
TB,N,V_preserveRectangularRange
T@"<TSTCellRegionIterating>",&,N,V_regionIterator
TB,N,V_tabWhileEditingNavigates
T@"<TSTCellRegionIterating><TSTMutableCellIteratorDataUpdating>",&,N,V_dataStoreIterator
TB,R,N,GisOneToMany,V_oneToMany
T@"<TSTCustomStrokeProviding>",R,N,V_customStrokeProvider
TB,R,N,V_isRows
T@"<TSTLayoutDynamicContentProtocol>",&,N,V_dynamicContentDelegate
TB,R,N,V_wasRemovedFromDocument
T@"<TSTStrokeLayerStrokeAndRange>",&,N,V_minorStrokeLayerToken
TI,N,V_cachedNumberOfHeaderRows
T@"<TSTTableChromeProvider>",R,N,V_tableChrome
TQ,N,V_position
T@"<TSTTableRepDelegate>",R,N,V_delegate
TQ,R,N,V_lastArchivedAppVersion
T@"<TSTTableStrokeProviding>",W,N,V_strokeProvider
T^v,R,N,V_groupingColumnChanges
T@"<TSWPStyleProviding>",R,W,N
Td,R,N,V_capturedRowHeightTotal
T@"<TSWPStyleProviding>",W,N,VmStyleProvidingSource
Ti,N,V_listType
T@"NSArray",&,N,V_components
Tq,N,V_cachedParagraphAlignment
T@"NSArray",&,N,V_pasteInverseCommands
T{CGAffineTransform=dddddd},R,N
T@"NSArray",&,N,V_thresholdCellValues
T{TSKUIDStruct=QQ},N,V_ownerUID
T@"NSArray",&,V_whitespaceAfterDelimiters
T{TSKUIDStruct=QQ},R,V_groupUid
T@"NSArray",R,N,V_columnAggregates
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_lastCellRangeAdded
T@"NSArray",R,N,V_groupSortRules
T{_NSRange=QQ},N,V_curTileRange
T@"NSArray",R,N,V_rules
_aggrIndexLevel
T@"NSCharacterSet",&,N,V_nonWhitespaceAndNewlineCharSet
_allAggsInGroupRootFormulaCoord
T@"NSCharacterSet",&,N,V_whitespaceCharSet
_animationStack
T@"NSData",C,N,V_sourceData
_baseTableModel
T@"NSDate",&,N
_bundle
T@"NSDate",&,N,V_importDate
_cachedCellRegionVersionCounter
T@"NSDate",&,N,V_lastRequestDate
_cachedIndexesForSummaryColumns
T@"NSDate",N,V_dateAccumulator
_cellCountValid
T@"NSDate",R,N
_cellID
T@"NSDictionary",&,N,V_dragAndDropDetails
_cellRefsByUuid
T@"NSIndexSet",&,N,V_cachedIndexes
_checkStructure
T@"NSIndexSet",&,N,V_cachedIndexesForLeadingColumns
_chromeTractRef
T@"NSIndexSet",&,N,V_cachedIndexesForLeadingSummaryRows
_clearTopStroke
T@"NSIndexSet",&,N,V_cachedIndexesForSummaryColumns
_coldDataByYear
T@"NSIndexSet",&,N,V_columnIndexesInRow
_columnsVisible
T@"NSIndexSet",&,N,V_intersectingRowsIndexSet
_completionText
T@"NSIndexSet",&,N,V_populatedColumnsForGroupLevel2
_coords
T@"NSIndexSet",&,N,V_populatedColumnsForGroupLevel4
_currencyFormat
T@"NSIndexSet",&,N,V_viewColumnIndexesInCurrentRow
_customFormatID
T@"NSIndexSet",R,V_indexes
_definedCellMap
T@"NSMapTable",&,N,V_cachedLeadingColumnIndexesAtLevels
_displayChoices
T@"NSMapTable",&,N,V_cachedLeadingSummaryColumnIndexesAtLevels
_durationFormat
T@"NSMapTable",&,N,V_cachedSummaryColumnIndexesAtLevels
_dynamicRepressFrozenHeaderRows
T@"NSMapTable",&,N,V_propertyMapToTextStyleMap
_errors
T@"NSMapTable",&,N,V_variationMap
_expressionNode
T@"NSMapTable",R,N,V_commentStorageMap
_fittingHeights
T@"NSMutableArray",&,N,V_cellLists
_forceSplitting
T@"NSMutableArray",&,N,V_children
_formatDataList
T@"NSMutableArray",&,N,V_dirtyCellDependencyRows
_formattedValue
T@"NSMutableArray",&,N,V_iterators
_formulaOwnerId
T@"NSMutableArray",&,N,V_referencesMatchingInputAsPrefix
_fourth
T@"NSMutableArray",&,N,V_rowInfosPerRow
_groupAggregateUidFlatteningMap
T@"NSMutableArray",&,N,V_textStyleReferences
_groupSortOrder
T@"NSMutableArray",&,N,V_whitespaceAfterDelimiters
_groupingFormat
T@"NSMutableArray",R,N,V_aggregators
_height
T@"NSMutableArray",R,N,V_cellStatesToLayout
_hiddenStateFormulaOwnerForRows
T@"NSMutableDictionary",&,N,V_formatsRemoved
_hideStepperHUD
T@"NSMutableDictionary",&,N,V_uniqueValueToRowIndexes
_importWarningSetTableReference
T@"NSMutableDictionary",R,N,V_cachedQuotes
_indexesForUids
T@"NSMutableDictionary",R,N,V_ownerMap
_isDefaultsOnly
T@"NSMutableIndexSet",&,N,V_columnsInvalid
_keyVal
T@"NSMutableIndexSet",&,N,V_keys
_lastSavedInBNC
T@"NSMutableIndexSet",&,N,V_userHidden
_layoutCellData
T@"NSMutableIndexSet",&,N,V_validCells
_leftSingleQuotationMarkEscaped
T@"NSMutableIndexSet",&,N,V_visibleIndexSet
_minion
T@"NSMutableIndexSet",R,N,V_tableStyleIndexes
_neverShowsMenu
T@"NSMutableSet",&,N,V_hotData
_nextGroupByUID
T@"NSMutableSet",R,N,V_sourceFetchers
_nextID
T@"NSNumber",&,N,V_partitioningPass
_nonWhitespaceAndNewlineCharSet
T@"NSObject<OS_dispatch_queue>",&,N,V_layoutConcurrentQueue
_numberFormatID
T@"NSObject<OS_dispatch_semaphore>",R,N,V_tspSemaphore
_originalUIDMap
T@"NSObject<OS_os_log>",R,N
_pasteWasUpdate
T@"NSObject<TSDContainerInfo><TSWPStorageParent>",N,V_richTextParentInfo
_pivotDataModel
T@"NSObject<TSDInfo>",D,N
_pivotDateGroupingTypesByColumn
T@"NSObject<TSTCellRegionIterating>",R,N,V_regionIterator
_populatedColumnsForGroupLevel2
T@"NSOperationQueue",R,N,V_updateQueue
_populatedColumnsForGroupLevel4
T@"NSPointerArray",&,N,V_fixedColumnWidthStack
_precedentsList
T@"NSPointerArray",&,N,V_rowInfos
_region
T@"NSPointerArray",&,N,V_strokeTypeToLayerStackMap
_relativeColumn
T@"NSPointerArray",R,N,V_bottomRowStrokes
_reoriginToZero
T@"NSPointerArray",R,N,V_rightColumnStrokes
_rewrittenCells
T@"NSRegularExpression",R,N,V_regularExpression
_rowInfosPerRow
T@"NSSet",C,N
_rowUID
T@"NSSet",R,N
_rowUidForIndex
T@"NSString",&,N,V_aggregateFieldName
_rwlock
T@"NSString",&,N,V_cellID
_setTile:forID:
T@"NSString",&,N,V_contextSheetName
_shuffleMapping
T@"NSString",&,N,V_firstFragment
_sourceRowCount
T@"NSString",&,N,V_invalidFunctionName
_srcCoordMapper
T@"NSString",&,N,V_localizedErrorGroupName
_storageVersion
T@"NSString",&,N,V_localizedFalseGroupNameForColumn
_stringDataList
T@"NSString",&,N,V_localizedTrueGroupNameForColumn
_strokeIterator
T@"NSString",&,N,V_pivotSourceTableName
_supportsCanvasReferenceEditing
T@"NSString",&,N,V_rest
_tableNameStyle
T@"NSString",&,N,V_sheetNameUnquoted
_temporaryLeftSingleQuoteString
T@"NSString",&,N,V_symbol
_topStrokeLayer
T@"NSString",&,N,V_tableNameUnquoted
_tracts
T@"NSString",&,N,V_value
_uidMap
T@"NSString",&,N,V_whitespaceAfterDelimiter
_unSyncedStocks
T@"NSString",&,N,V_whitespaceAfterFunctionName
_uuidsByCellRef
T@"NSString",&,N,V_whitespaceAfterLet
_versionCounter
T@"NSString",&,N,V_whitespaceBeforeFirstChild
_wasCut
T@"NSString",&,V_whitespaceBeforeFirstChild
accountingStyle
T@"NSString",C,N,V_initialWhitespace
addCellDiffMap:
T@"NSString",C,V_overrideTextAsTyped
addColumnRange:
T@"NSString",R,C
addFunctionUsesInFormula:atCellRef:outContainsVolatileFunction:
T@"NSString",R,D,N
addRefPathWord:
T@"NSString",R,N,V_originalFullReferenceString
addRemoteDataInterest:forOwner:
T@"NSString",R,N,V_symbol
addRow:
T@"NSTimeZone",&
afterCountValue
T@"NSUUID",R
aggregateEnumeratorWithObjects:
T@"NSUUID",R,N
alignedStrokeFrameForCellRange:
T@"TSCEAbortObject",&,N,V_abortObject
allDataAsString
T@"TSCECalculationEngine",N
allRowGroupUIDs
T@"TSCECalculationEngine",R,&,N,V_calcEngine
allSpanningDependenciesAsString
T@"TSCECalculationEngine",R,N,V_calcEngine
anyUuid
T@"TSCECalculationEngine",R,W,N,V_calculationEngine
appendUidTract:
T@"TSCECalculationEngine",W,N,V_calculationEngine
areCellsInTheSameRegionInTable:
T@"TSCECategoryRef",&,N
asArray
T@"TSCECellTractRef",&,N
T@"TSCECellTractRef",&,N,V_chromeTractRef
attachmentError
T@"TSCECellValue",R,N,V_groupCellValue
baseBoundingBox
T@"TSCECoordMapper",&,N,V_fromTableCoordMapperForPasteboard
baseColumnRange
T@"TSCEEdgeListPrinter",&,N,V_dependentsList
baseRow
T@"TSCEFormulaObject",&,N
beginTrackingNamesInRange:ofTableUID:addingTrackedReferencesTo:
T@"TSCEFormulaObject",R,N,V_formulaObject
bodyColumnRange
T@"TSCEFormulaRewriteSpec",&,N,V_rewriteSpecBaseToChrome
boolean
T@"TSCEFormulaRewrite_MergeOriginMovedInfo",&,N,V_mergeOriginMovedInfo
booleanFormatID
T@"TSCEFormulaRewrite_RegionInfo",R,N,V_dstRegion
cachedCellWraps
T@"TSCEFormulaRewrite_RegionInfo",R,N,V_srcRegion
cachedNumberOfGrandTotalColumns
T@"TSCEFormulaRewrite_RegionMovedInfo",&,N,V_regionMovedInfo
cachedTextStyle
T@"TSCEFormulaRewrite_Uids",R,N,V_rowOrColumnUids
caption
T@"TSCEFormulasForUndo",&,N,V_formulasForUndo
cell:forCellID:
T@"TSCEHauntedOwner",R,N,V_hauntedOwner
cellIDs
T@"TSCEMutableUIDSet",&,N,V_rowUIDsWithPendingGroupingChanges
cellMap
T@"TSCEQuotedRefPathSplitter",&,N,V_refPathSplitter
cellRef
T@"TSCERemoteDataCoordinator",R,N
cellRefsToCheck
T@"TSCERemoteDataSpecifierSet",R,N,V_allRequestedKeys
cellStyleHandle
T@"TSCERemoteDataSpecifierSet",R,N,V_newlyRequestedKeys
cellUIDAtIndex:
T@"TSCERemoteDataValueMap",R,N,V_cachedSpecifiers
childEnumerator
T@"TSCERewriteGroupNodeUIDInfo",&,N,V_groupNodeUIDInfo
clearAllFormats
T@"TSCERewriteTableUIDInfo",R
clearCellRanges
T@"TSCETableTransposedInfo",&,N,V_transposedInfo
clearPivotOwner
T@"TSCETablesByNameDistributor",R
collapseExpandChanged:forState:
T@"TSCETransaction",R
colorWithColor:
T@"TSCEUIDSet",R,N,V_collapsedGroupUids
columnHeaderUid
T@"TSCEUIDSet",R,N,V_previousGroupNodeUids
columnRowUIDMap
T@"TSCEUIDSet",R,N,V_uidsCollapsed
columnUIDsForBaseColumnIndexes:
T@"TSCEUIDSet",R,N,V_updatedGroupNodeUids
columns
T@"TSCEUndoTractList",&,N,V_uidTractList
conditionalStyleFormulaOwnerUID
T@"TSCEViewTractRef",&,N
containsObject:
T@"TSCEWrappedRangeRef",R,N
contentHeightForCellRange:skipDynamicSwap:maximumPartitionSize:
T@"TSDCommentStorage",C,N
context
T@"TSDCommentStorage",R,N,V_commentStorage
continuesEditingAfterNavigation
T@"TSDInfoGeometry",&,N,V_dynamicInfoGeometry
convertToBadRef
T@"TSDInfoGeometry",C,N
copyPropertyMap
T@"TSDLayoutGeometry",C,N,V_dynamicSavedLayoutGeometry
corruptCellRefs
T@"TSDStroke",&,N,V_stroke
countForObject:
T@"TSDStroke",&,N,VmHorizontalStroke
cppCellTractRef
T@"TSDStroke",R,N
criteriaParser:
T@"TSDStroke",R,N,V_leftStroke
currentCalendar
T@"TSKAccessController",W,N
currentTimeZone
T@"TSKChangeNotifier",R,N
dateAccumulator
T@"TSKChangeNotifier",W,N,V_changeNotifier
T@"TSKCustomFormatWrapper",R,N,V_customFormatForErrorGroup
defaultCellSpec
T@"TSKDurationFormat",&,N,V_durationFormat
defaultTimeZone
T@"TSKFormat",R,N
deriveBodyPivotGroupHorizontalStrokeFromTableStyle:propertyMap:
T@"TSKFormat",R,N,V_booleanFormat
deriveCategoryTextStyleForTableStyleArea:connectedToStylesheet:
T@"TSKFormat",R,N,V_currencyFormat
detokenizedText
T@"TSKFormat",R,N,V_customFormat
didCreateGroup:
T@"TSKFormat",R,N,V_durationFormat
didRemoveGroup:
T@"TSKFormat",R,N,V_numberFormat
dirtyCellRanges
T@"TSKSelection",&,N
documentDidLoad
T@"TSKShuffleMapping",&,N,V_shuffleMap
dropAggregator:
T@"TSKStructuredTextImportSettings",&,N,V_importSettings
dstUidForSrcUid
T@"TSPLazyReference",&,N,V_conditionalStyleSetTableReference
dynamicResizingColumnAdjustment
T@"TSPLazyReference",&,N,V_formatTableReference
edgeExpandUsingIndexes:forRows:
T@"TSPLazyReference",&,N,V_formulaTableReference
emptyWarningSet
T@"TSPLazyReference",&,N,V_preBNCFormatTableReference
endCheckboxCell
T@"TSPLazyReference",&,N,V_stringTableReference
enumerateCellStringsUsingBlock:
T@"TSPObject",R,N
enumerateGridColumnsUsingBlock:
T@"TSPObject<TSDOwningAttachment>",N
enumerateRowsInRange:withBlock:
T@"TSPObject<TSDOwningAttachment>",R,N
errorDictionary
T@"TSPTemporaryObjectContextDelegate",R,N,V_temporaryObjectContextDelegate
errorSumSquares
T@"TSSPropertyMap",&,N,V_propertyMapToReset
expressionSize:
T@"TSSStyle",&,N,V_style
extraInfoString
T@"TSSStylesheet",&,N,V_stylesheet
flushAllChanges
T@"TSTAggregator",R,W,N,V_aggregator
forRows
T@"TSTArchivedLayoutEngineBundle",&,N,V_archivedLayoutEngineBundle
foreachFormula:
T@"TSTCategoryAggregateFormulaOwner",R,N,V_aggregateFormulaOwner
formatForCalcEngineAtCellID:formatIsExplicitOut:refIfAvailable:
T@"TSTCategoryOwner",R,N
formula
T@"TSTCategoryOwner",W,N,V_categoryOwner
formulaOwnerUid
T@"TSTCell",&,N,V_cell
fullDescription
T@"TSTCell",R,N,V_cell
functionEndNode
T@"TSTCellBorder",&,N,V_cellBorder
gatherRowState:
T@"TSTCellDiffArray",&,N,V_cellDiffArray
getNext
T@"TSTCellFormulaSpec",R,N
groupBy
T@"TSTCellRangeCache",&,N,V_mergeRangeCache
groupLevelForGroupingColumnUid:
T@"TSTCellRegion",&,N,V_cachedCellRegion
groupValueTuple
T@"TSTCellRegion",&,N,V_cellRegionForClearedMergeStrokes
groupingFunctor
T@"TSTCellRegion",&,N,V_forcingRegion
hasContentBreakingMergeFragment
T@"TSTCellRegion",&,N,V_region
hasMenu
T@"TSTCellRegion",&,N,V_strokeRegion
hasPrecedentCountUpdatesPending
T@"TSTCellRegion",R,N,V_region
hasRead
T@"TSTCellSelection",&,N,V_dynamicSelection
hasViewTractRef
T@"TSTCellSpec",&,N,V_cellSpec
hiddenStatesUid
T@"TSTCellSpec",R,N
hotSpecifierSet
T@"TSTCellStyle",&,N,V_bodyCellStyle
i_populateIndexesForLeadingRows
T@"TSTCellStyle",&,N,V_categoryLevel1CellStyle
ignored
T@"TSTCellStyle",&,N,V_categoryLevel3CellStyle
indexFromCoord:
T@"TSTCellStyle",&,N,V_categoryLevel5CellStyle
indexes
T@"TSTCellStyle",&,N,V_footerRowCellStyle
indexesOfHiddenRowsInCellRange:
T@"TSTCellStyle",&,N,V_headerRowCellStyle
inflateFromStorageRef:dataStore:cache:suppressingTransmutation:
T@"TSTCellStyle",&,N,V_labelLevel2CellStyle
initWithCalcEngine:rewriteSpec:
T@"TSTCellStyle",&,N,V_labelLevel4CellStyle
initWithContext:completionText:
T@"TSTCellStyle",&,N,V_pivotBodySummaryColumnCellStyle
initWithContext:otherTableInfo:
T@"TSTCellStyle",&,N,V_pivotHeaderColumnSummaryCellStyle
initWithFormat:
T@"TSTCellStyle",R,C,N
initWithLayout:
T@"TSTCellStyleHandle",R,N,V_cellStyleHandle
initWithLayoutSpaceBundle:type:
T@"TSTCellUIDList",&,N,V_cellUIDs
initWithNumber:
T@"TSTCellUIDRegion",&,N,V_baseCellUIDRegion
initWithParser:
T@"TSTCellWillChangeDistributor",R,N
initWithString:
T@"TSTColumnAggregateList",R,N,V_aggregates
initWithTableInfo:andCellRange:
T@"TSTColumnRowUIDMap",&,V_uidMap
initWithTimeInterval:sinceDate:
T@"TSTColumnRowUIDMap",R,N,V_columnRowUIDMap
initWithValueVector:dimensions:
T@"TSTColumnRowUIDMap",R,W,N,V_summaryMap
initialTextSize
T@"TSTColumnRowUIDMapper",&,N,V_beforeColumnRowUIDMap
insertRangeRef:
T@"TSTConcurrentMutableCellUIDSet",R,N,V_cellsToInvalidateAfterRecalc
interactionType
T@"TSTConcurrentMutableIndexSet",&,N,V_spillStrokeColumns
internalOwnerID
T@"TSTConditionalStyleFormulaOwner",&,N,V_conditionalStyleFormulaOwner
invalidRangeRef
T@"TSTConditionalStyleSet",&,N,V_conditionalStyle
invalidateKnobs
T@"TSTConfiguration",R,N
isAtEnd
T@"TSTCoordinateArray",&,N,V_bodyRowCoordinates
isBlank
T@"TSTCoordinateArray",&,N,V_headerRowColumnCoordinates
isClear
T@"TSTExpressionNode",&,N,V_expressionNode
isEmpty
T@"TSTExpressionNode",R,N,V_expressionNode
isForPivotTable
T@"TSTFormula",R,N
isNewlyImported
T@"TSTFormulaPredArg",&,N,V_predArg1
isProxy
T@"TSTFormulaPredArgData",R,N,V_data
isSingleColumnSpanningReference
T@"TSTFormulaPredicate",R,C,N
isValid
T@"TSTFormulaRewrite_PivotInfo",&,N,V_pivotInfo
isZoomToEditOperationInProgress
T@"TSTFormulaStore",R,N,V_formulaStore
lastRequestDate
T@"TSTFunctionNode",N,V_functionNode
leftStrokeOrder
T@"TSTGroupBy",N,V_groupBy
loadTableStylePropertiesIntoPropertyMap:fromArchive:unarchiver:
T@"TSTGroupBy",R,V_groupBy
localizedTrueGroupNameForColumn
T@"TSTGroupBy",W,N,V_groupBy
logForCategory:
T@"TSTGroupBySet",R,N,V_groupBySet
mByCell
T@"TSTGroupNode",&,N,V_groupNode
mCanvasSafeRect
T@"TSTGroupNode",W,N,V_groupNode
mCellRangeCount
T@"TSTGroupingColumnList",&,N,V_bodyGroupingList
mFixedTableSize
T@"TSTGroupingColumnList",R,N,V_rowGroupings
mLocale
T@"TSTHiddenRowsColumnsCache",&,N,V_hiddenRowsColumnsCache
mShouldUpdateAttachmentChildren
T@"TSTHiddenStateExtent",R,N,V_rowHiddenStateExtent
makeStyleMapper
T@"TSTHiddenStateIndexSet",&,N,V_rowsUserVisible
mapping
T@"TSTHiddenStates",&,N,V_hiddenStates
markAsProcessed
T@"TSTHiddenStatesOwner",R,N,V_hiddenStatesOwner
matcher
T@"TSTHierarchicalCellDiffMap",&,N,V_afterRewriteMap
maxNumberOfRows
T@"TSTImportWarningSet",&,N,V_importWarningSet
maximum
T@"TSTLayout",&,N,V_dynamicLayout
mergeLeftRef:rightRef:outError:
T@"TSTLayout",R,N
mergeRangeCache
T@"TSTLayout",W,N,V_layout
minSize
T@"TSTLayoutContentCachedKey",&,N,V_keyVal
minimum
T@"TSTLayoutEngine",&,N,V_layoutEngine
missingRunningTotalInFieldError
T@"TSTLayoutEngine",R,N,V_layoutEngine
moveRuleFromGroupLevel:toLevel:
T@"TSTLayoutEngine",R,W,N,V_layoutEngine
mutableIndexSet
T@"TSTLayoutHint",&,N,VmHint
mutablePivotHiddenColumnIndexes
T@"TSTLayoutSpace",&,N,V_frozenHeaderColumnsSpace
namePrefixIndex
T@"TSTLayoutSpace",&,N,V_frozenHeaderRowsSpace
needsToUpdateFilterSetForImport
T@"TSTLayoutSpace",&,N,V_repeatHeaderCornerSpace
newCell
T@"TSTLayoutSpace",&,N,V_space
nonAutosizedFrameForTextLayout:
T@"TSTLayoutSpaceBundle",&,N,VmSpaceBundle
numRangeRecords
T@"TSTMergeChangeDistributor",&,N,V_mergeChangeDistributor
numRows
T@"TSTMergeRangeSortedSet",&,N,V_mergeRangesForLayoutPass
numberOfVisibleRowsInCellRange:
T@"TSTMutableCellIteratorData",&,N,V_cellData
offline
T@"TSTMutableCellIteratorData",R,N,V_cellData
options
T@"TSTMutableStrokeLayer",&,N,V_clearedMinorStrokeLayer
p_calculateAncillaryInformation
T@"TSTMutableStrokeLayer",&,N,V_dynamicStrokeLayer
p_getLayoutDirectionLeftToRight
T@"TSTMutableStrokeLayer",&,N,V_spillMajorStrokeLayer
p_gridColumnForTableCoordinate:
T@"TSTMutableStrokeLayer",&,N,V_spillStrokeLayer
p_maskRectForTextEditingLayout:
T@"TSTPencilAnnotationOwner",R,N
p_mostRecentlySetDateFormatType
T@"TSTPivotGroupingColumnOptionsMap",R,N
p_pruneRowCount
T@"TSTPivotOwner",R,N,V_pivotOwner
p_setCell:forMonthGroupingTypeWithGroupColumnValue:toBeInGroup:
T@"TSTPopUpMenuModel",&,N,V_popupModel
p_setFormulaWithSymbolCellCoord:andAttributeCellCoord:atCellID:
T@"TSTReferenceColorHelper",&,N,V_referenceColorHelper
p_setupCustomFormatsWithLocale:
T@"TSTSelectionDragController",W,N
p_tableCoordinateForGridColumn:
T@"TSTSortRuleReferenceTracker",R,N
p_validationFittingCellRegionForRowsDeleted:cellRegionGatherer:
T@"TSTStockDetails",R,N
pattern
T@"TSTStrokeDefaultVendor",&,N,V_strokesDefaultVendor
pivotBodySummaryColumnCellStyle
T@"TSTStrokeLayer",&,N,V_customStrokeLayer
pointerAtIndex:
T@"TSTStrokeLayer",&,N,V_defaultMajorStrokeLayer
popover
T@"TSTStrokeLayer",&,N,V_defaultStrokeLayer
prepareToRewriteWithCalcEngine:
T@"TSTStrokeLayer",&,N,V_minorStrokeLayer
processChanges:forChangeSource:
T@"TSTStrokeLayerMergedStack",&,N,V_mergedStrokes
propertyMapToSetWithProperties:
T@"TSTStrokeOrderedLayer",&,N,V_dynamicOrderedStrokeLayer
purpose
T@"TSTStrokeSidecar",&,N,V_strokeSidecar
raiseAbortError
T@"TSTStrokeSidecar",R,N,V_strokeSidecar
raiseDataInvalidDimensionsError
T@"TSTStrokeWidthCache",&,N,V_rowToStrokeHeightCache
raiseInvalidTokenInFormulaError
T@"TSTStructuredTextImportRecord",&,N,V_textImportRecord
raiseNumberSmallerThanZeroError
T@"TSTSummaryCellVendor",R,W,N,V_summaryCellVendor
rangeFromFormulaObject:atCoord:
T@"TSTTableControlCellSelection",&,N,V_controlCellSelection
reducedSetMinusUuidsFromVector:
T@"TSTTableDataListCache",R,N,V_baseDataListCache
refPathInterestingCharactersSet
T@"TSTTableDataListItemCache",&,N,V_cellStyleHandles
referenceIsValidIncludingSheet:
T@"TSTTableDataListItemCache",&,N,V_textStyleHandles
regionByIntersectingRowIndices:
T@"TSTTableDataStore",&,N,V_dataStore
regionMovedInfo
T@"TSTTableDataStore",R,W,N,V_baseDataStore
registerAllFormulasWithCalculationEngine:wasCrossDocumentPaste:
T@"TSTTableFilterSet",&,N,V_prePivotRowFilterSet
relativeCellRef
T@"TSTTableFilterSet",C,N,V_filterSet
relativeTopLeft
T@"TSTTableHeaderStorage",&,N,V_columnHeaderStorage
remoteDataStore
T@"TSTTableInfo",&,N,V_tableInfo
removeAllValues
T@"TSTTableInfo",R,N
removeCellRef:usingCategoryRef:
T@"TSTTableInfo",R,N,V_tableInfo
removeReceiver:
T@"TSTTableInfo",R,W,V_tableInfo
removeRulesWithAbsoluteIndices:
T@"TSTTableInfo",W,N,V_table
replaceFormulaErrorsUsingBlock:
T@"TSTTableModel",&,N,V_tableModel
requestLaunched
T@"TSTTableModel",N,V_tableModel
resetFormulaAt:
T@"TSTTableModel",R,N,V_pivotDataModel
resetModelCache
T@"TSTTableModel",R,N,V_tableModel
resetScaleToFit
T@"TSTTableModel",W,N,V_tableModel
rewriteForPaste
T@"TSTTablePartitioner",&,N,V_partitioner
richTextForKey:
T@"TSTTableReferences",R,N,V_references
richTextPayload
T@"TSTTableSortOrder",C,N,V_sortOrder
rollbackToMark:
T@"TSTTableStyle",&,N,V_tableStyle
rowInfoAtIndex:
T@"TSTTableStylePreset",&,N
rowRangeUnderSummaryOrLabelRow:
T@"TSTTableTile",&,N,V_curTile
rowUids
T@"TSTTableTileRowInfo",&,N,V_curRow
rowsUserVisible
T@"TSTTableTranslator",&,N,V_translator
saveToArchiver:
T@"TSTTableTranslator",R,N,V_identityTranslator
T@"TSTTextStyleHandle",&,N,V_textStyleHandle
setAccumulator:
T@"TSTTextStyleToFontHeightCache",&,N,V_paraStyleToHeightCache
setAspectOperationIsInProgress:
T@"TSTUIDRectRef",R,N,V_uidRectRef
setBottomRight:
T@"TSTWPColumnCache",&,N,V_tempWPColumnCache
setCacheHintID:
T@"TSTWidthHeightCache",&,N,V_widthHeightCache
setCachedImage:
T@"TSUColor",&,N,V_dynamicFontColor
setCachedIndexesForSummaryRows:
T@"TSUCustomFormat",R,D,N
setCachedValue:
T@"TSUIntegerKeyDictionary",&,N,V_cellStyleHandles
setCategoryRef:
T@"TSUIntegerKeyDictionary",&,N,V_rowStrokeExportCache
setCellStyleID:
T@"TSUIntegerKeyDictionary",&,N,V_textStyleHandles
setCellsWithCellMap:ignoreFormulas:skipDirtyingNonFormulaCells:
T@"TSULocale",&,V_locale
setColumnIndex:
T@"TSULocale",R,N
setConditionalStyleAppliedRule:
T@"TSULocale",R,N,VmLocale
setCurRowIndex:
T@"TSUNetworkReachability",&,N,V_serverReachability
setCurrentDate:
T@"TSUPointerKeyDictionary",&,N,V_hintMatricesByCanvas
setDoubleValue:
T@"TSUPointerKeyDictionary",R,N,V_storeMap
setDynamicUnorderedStrokeLayer:
T@"TSUSparseArray",&,N,V_annotations
setFindSelectionHighlightLayer:
T@"TSUSparseArray",R,N,V_attributes
setFormat:shouldSetExplFlags:isExplicit:makeCurrent:clearingID:
T@"TSUWidthLimitedQueue",&,N,V_layoutValidateQueue
setHeaderSideBorderColumnRange:
T@"TSWPColumnStyle",R,N,V_defaultColumnStyle
setHidingState:ofColumnAtIndex:
T@"TSWPPadding",&,N,V_cachedPadding
setHostCellRef:
T@"TSWPPadding",R,N,V_padding
setInsertAtUid:
T@"TSWPParagraphStyle",&,N,V_bodyTextStyle
setIsBlankForKeyboardInsertion:
T@"TSWPParagraphStyle",&,N,V_categoryLevel1TextStyle
setIsMagicMove:
T@"TSWPParagraphStyle",&,N,V_categoryLevel3TextStyle
setLayoutIsLTR:
T@"TSWPParagraphStyle",&,N,V_categoryLevel5TextStyle
setMaximumSize:
T@"TSWPParagraphStyle",&,N,V_headerColumnTextStyle
setMixedRowStartedWithPreserve:
T@"TSWPParagraphStyle",&,N,V_labelLevel1TextStyle
setNeedsDisplay
T@"TSWPParagraphStyle",&,N,V_labelLevel3TextStyle
setNumberValue:
T@"TSWPParagraphStyle",&,N,V_labelLevel5TextStyle
setPivotAggregateRuleChangeUID:
T@"TSWPParagraphStyle",&,N,V_textStyle
setPrefixRange:
T@"TSWPParagraphStyle",R,C,N
setPropertyMap:
T@"TSWPParagraphStyle",R,N,V_paragraphStyle
setRep:
T@"TSWPShapeStyle",&,N
setRowsInvalid:
T@"TSWPStorage",&,N
setSearchFlags:
T@"TSWPStorage",&,N,V_storage
setShowsChromeWhileEditingCell:
T@"TSWPStorage",R,N
setStringValue:
T@"TSWPTextMeasurerBundle",&,N,V_textMeasurerBundle
setStrokeLayer:forLeftOfColumn:
T@,&,N,V_cellContents
setSupportsComplexReorganizeUI:
T@,&,N,V_third
setSyncReferenceHighlightState:
TB,D,N
setTableChrome:
TB,N,GisActive,V_active
setTableNameTextEngineDelegate:
TB,N,GisEmpty,V_empty
setTemporaryOrder:forDimension:
TB,N,GisInDynamicLayoutMode,V_inDynamicLayoutMode
setTextStyleID:
TB,N,GisRecursivelyDrawingInContext,V_recursivelyDrawingInContext
setTileStorage:
TB,N,GisSyntaxError,V_syntaxError
setUserVisible:
TB,N,GisUIDBased,V_uidBased
setWhitespaceAndNewlineCharSet:
TB,N,V_allowHorizontalAutoresize
shallowCopyToCoordFormUsingMap:
TB,N,V_allowTableName
shortStringForDayTypeForLocale:
TB,N,V_allowsBlackDragDropBackground
shouldHyphenate
TB,N,V_applyingToTable
sortOrderByRemovingRuleAtIndex:
TB,N,V_arrowKeysNavigateWhenEditingBeganByTyping
spanningColumns
TB,N,V_aspectOperationIsInProgress
specifierByChangingAttributeTo:
TB,N,V_bandedFillIsValid
srcUidForDstUid
TB,N,V_cachedAllAnnotations
storage
TB,N,V_cachedIndexSetsAreValid
stringAtCellID:
TB,N,V_cachedPivotIndexSetsAreValid
stringFromDate:
TB,N,V_canBeNested
strokeLayerForLeftSideOfColumn:
TB,N,V_cellEditorsCanScrollToNonLocalTableSelection
summaryRowIndexForViewRowIndex:
TB,N,V_cellWraps
supportsAutomaticNumberKeyboard
TB,N,V_columnOrderReversed
supportsStockUI
TB,N,V_containsSuppressCustomFormatHandlingProperty
suppressFrozenHeadersForEditing
TB,N,V_controlCellUIAlwaysVisible
tableAreaForDroppingRowAtIndex:
TB,N,V_dirtyingInProgress
tableID
TB,N,V_documentIsClosing
tableNameBounds
TB,N,V_downgradedForPrePivot
tableNameShapeStyleIDForPreset:
TB,N,V_drawBlackAndWhite
tableTranslator
TB,N,V_dynamicBandedFill
tabsRowWidthAndOptionalLeftGap:
TB,N,V_dynamicRepResizeSessionInProgress
tappedStockCellAtUnscaledPoint:
TB,N,V_dynamicRepressFrozenHeaderRows
tempSummaryCell
TB,N,V_dynamicResizingRows
textStyleHandle
TB,N,V_expandDirtyRegionForReferences
threadCollector
TB,N,V_exportsCellAnnotations
timeoutInterval
TB,N,V_filterColons
tokenContextWithExpressionNode:parenNestingLevel:argumentIndex:
TB,N,V_followsLinksOnFirstTap
trackedReferencesExistForTable:
TB,N,V_forDrawing
tst_hasLeadingSingleQuoteEscape
TB,N,V_forceEscaping
tsu_pop
TB,N,V_forceSplitting
uniqueObjectUID
TB,N,V_forceZoomInOnBeginEditing
updateCellData:
TB,N,V_foundANumber
updateKnownCachedStocksInStore:
TB,N,V_hasContent
uppercaseString
TB,N,V_hasCustomFormatsToPaste
usEnglishLocale
TB,N,V_hasLargerFonts
usesWideOffsets
TB,N,V_hasReference
valueAtGridCoord:accessContext:
TB,N,V_headerColumnsRepeat
viewBoundingBox
TB,N,V_headerRowsRepeat
viewCellTractRefForCategoryRef:
TB,N,V_hideChromeContextMenuButton
viewRowIndexForSummaryRowIndex:
TB,N,V_horizontal
visibleCellOffsetBy:fromCellID:
TB,N,V_inDynamicLayout
warningSetForErrorTokenFormula:
TB,N,V_includesPrefixes
weekday
TB,N,V_invalidateAllChrome
widthForString:
TB,N,V_invalidateColumnChrome
widthOfColumnAtIndex:isDefault:
TB,N,V_invalidateRowChrome
yearsReferenced
TB,N,V_invalidateTableName
TB,N,V_invalidatedForEditingCell
TB,N,V_isAPivotDataModel
TB,N,V_isBlank
TB,N,V_isBlankForKeyboardInsertion
TB,N,V_isCircularReference
TB,N,V_isCopyContainingCategoryColumn
TB,N,V_isDynamicallyChangingContent
TB,N,V_isDynamicallyChangingRowOrColumnCount
TB,N,V_isDynamicallyHidingRowsCols
TB,N,V_isDynamicallyRemovingText
TB,N,V_isEnabled
TB,N,V_isFormula
TB,N,V_isGrouped
TB,N,V_isInCycle
TB,N,V_isInverse
TB,N,V_isLabelRow
TB,N,V_isNewForBraveNewCell
TB,N,V_isRangeRef
TB,N,V_isRegisteredWithCalcEngine
TB,N,V_isSummaryRow
TB,N,V_isValid
TB,N,V_lastSavedInBNC
TB,N,V_layoutDirectionIsLeftToRight
TB,N,V_layoutInvalidate
TB,N,V_layoutInvalidateSize
TB,N,V_layoutInvalidateTableNameVisibility
TB,N,V_layoutIsLTR
TB,N,V_layoutResetScaleToFit
TB,N,V_layoutSpacesInvalidateCoordinates
TB,N,V_layoutSpacesInvalidateTableOffsets
TB,N,V_layoutUpdateChildren
TB,N,V_lazyReferencesAreLoaded
TB,N,V_mayModifyValuesReferencedByFormulas
TB,N,V_mergeCacheLoaded
TB,N,V_mightOverlap
TB,N,V_migratingStylesOnly
TB,N,V_missingPostBNCDatalists
TB,N,V_modelIteratorHasCell
TB,N,V_namesUsed
TB,N,V_needWPColumn
TB,N,V_needsFormulaReset
TB,N,V_needsFormulaRewriteForImport
TB,N,V_needsRebuildOfAggFormulas
TB,N,V_needsToBeArchived
TB,N,V_needsToUpdateFilterSetForImport
TB,N,V_needsUidRectUpgrade
TB,N,V_parseAsBaseTableReference
TB,N,V_pasteFilterHidingAsUserHiding
TB,N,V_pasteWasUpdate
TB,N,V_pastesTile
TB,N,V_presetNeedsStrongOwnership
TB,N,V_processHiddenRowsForExport
TB,N,V_processedByLayoutEngine
TB,N,V_queriedModel
TB,N,V_quoteComponents
TB,N,V_referenceIsComplete
TB,N,V_registeredWithCoordinator
TB,N,V_reoriginToZero
TB,N,V_repeatingHeaderColumnsEnabled
TB,N,V_repeatingHeaderRowsEnabled
TB,N,V_repositionStockPopover
TB,N,V_returnEmptyCells
TB,N,V_returnMergeRanges
TB,N,V_returnOneEmptyCell
TB,N,V_returnOnlyFormulas
TB,N,V_returnWhileEditingNavigates
TB,N,V_saveAsEmbiggenedFormat
TB,N,V_selectionDragAbortedOnNewSelection
TB,N,V_selectionUsesBezierPath
TB,N,V_selectsCellOnInitialTap
TB,N,V_setNeedsDisplay
TB,N,V_shallowCopy
TB,N,V_shouldCleanGraphForConsistencyViolation
TB,N,V_shouldFastPathMeasureFitWidth
TB,N,V_shouldPerformDetectAndRepairConsistencyViolations
TB,N,V_shouldRepositionStockPopover
TB,N,V_shouldSkipNextAsyncSort
TB,N,V_shouldUseWideRows
TB,N,V_shouldZoomOutOnEndEditing
TB,N,V_showCleanCells
TB,N,V_showGeometricAsBase
TB,N,V_showReferenceHighlightsOnFormulaCellSelection
TB,N,V_showsCellEditingToolbar
TB,N,V_showsCellOverflowIndicator
TB,N,V_showsCellWarningIndicator
TB,N,V_showsChromeWhileEditingCell
TB,N,V_showsHideUnhideUI
TB,N,V_showsSelectionKnobsWhileEditingCell
TB,N,V_spanningColumns
TB,N,V_spanningRows
TB,N,V_styleApplyClearsAll
TB,N,V_supportsActionMenu
TB,N,V_supportsAddBodyRowAtBottomSiriKitIntent
TB,N,V_supportsAutoResizedTables
TB,N,V_supportsAutofill
TB,N,V_supportsAutomaticNumberKeyboard
TB,N,V_supportsBidiTablesUI
TB,N,V_supportsCanvasReferenceEditing
TB,N,V_supportsCategorization
TB,N,V_supportsCellCommentsActivityLines
TB,N,V_supportsComplexReorganizeUI
TB,N,V_supportsContainedTextEditing
TB,N,V_supportsControlCells
TB,N,V_supportsCopySnapshot
TB,N,V_supportsCreateChartFromSelection
TB,N,V_supportsDynamicallyHidingRowColumnForDragDrop
TB,N,V_supportsFormulaEditing
TB,N,V_supportsFrozenHeaders
TB,N,V_supportsHiddenCells
TB,N,V_supportsImplicitEditing
TB,N,V_supportsInlineAttachments
TB,N,V_supportsMergedCells
TB,N,V_supportsPivotTables
TB,N,V_supportsPlaceholderGeometry
TB,N,V_supportsQuickFilterUI
TB,N,V_supportsRepeatHeaderRowsOnEachPage
TB,N,V_supportsRowColumnAdderKnob
TB,N,V_supportsRowMovesInPaginatedTables
TB,N,V_supportsStockUI
TB,N,V_supportsTableColumnAutocomplete
TB,N,V_supportsTableTranspose
TB,N,V_supportsiOSContextMenuItemForEvenlyDistributedColumns
TB,N,V_supportsiOSContextMenuItemForEvenlyDistributedRows
TB,N,V_supportsiOSContextMenuItemForWrappedText
TB,N,V_suppressIdenticalEndReference
TB,N,V_suspendNotify
TB,N,V_syncReferenceHighlightState
TB,N,V_tabAtEdgeAddsColumn
TB,N,V_tabAtEdgeAddsRow
TB,N,V_tableDefaultFontHeightsAreValid
TB,N,V_tableHasStrongOwnership
TB,N,V_tableIsLTR
TB,N,V_tableNameBorderEnabled
TB,N,V_tableNameEnabled
TB,N,V_tableNameEnabledInNewTables
TB,N,V_tableNameHeightValid
TB,N,V_terminateRegionIterator
TB,N,V_terminated
TB,N,V_tokenizeFormulaStringLiterals
TB,N,V_trimNames
TB,N,V_updateEditorRemainders
TB,N,V_upgrading
TB,N,V_upgradingToSubOwnerUIDs
TB,N,V_useBandedFill
TB,N,V_useSymbolicNames
TB,N,V_useWholeTableForInsertionDependencies
TB,N,V_usedSymbolicName
TB,N,V_usesLimitedAutomaticFormatParsing
TB,N,V_usesLimitedNumberFormatInspector
TB,N,V_usesOnlyFixedCoords
TB,N,V_usesSelectionChromeResizer
TB,N,V_value
TB,N,V_wasConstructedViaNames
TB,N,V_wasCut
TB,N,V_wasQuoted
TB,N,V_wasUnarchivedFromAProvidedTable
TB,N,V_zoomOperationIsInProgress
TB,N,V_zoomToEditOperationIsInProgress
TB,N,VdontClearBackground
TB,N,VmNewCanvasRevealedHorizontally
TB,N,VmNewCanvasRevealedVertically
TB,N,VmProcessChangesFiltering
TB,R
TB,R,D,N
TB,R,D,N,GisAnchoredToText
TB,R,D,N,GisFloatingAboveText
TB,R,D,N,GisInlineWithText
TB,R,N
TB,R,N,GisAnchoredToText
TB,R,N,GisAttachedToBodyText
TB,R,N,GisCategorized
TB,R,N,GisFloatingAboveText
TB,R,N,GisInlineWithText
TB,R,N,GisInlineWithTextWithWrap
TB,R,N,GisInvalidFunction
TB,R,N,GisKeyboardShown,V_keyboardShown
TB,R,N,GisNewlyImported
TB,R,N,GisReimportable
TB,R,N,GisUIDBased,V_uidBased
TB,R,N,GisWholeTableImport
TB,R,N,V_affectsCellBorders
TB,R,N,V_beginImplicitEditing
TB,R,N,V_cellWraps
TB,R,N,V_debugOnly_DidCleanGraphForConsistencyViolation
TB,R,N,V_debugOnly_DidDetectAndRepairConsistencyViolations
TB,R,N,V_definedBottomStroke
TB,R,N,V_definedLeftStroke
TB,R,N,V_definedRightStroke
TB,R,N,V_definedTopStroke
TB,R,N,V_didModifyWasCalled
TB,R,N,V_dragByHandleOnly
TB,R,N,V_forRows
TB,R,N,V_formulaFixupsShouldStick
TB,R,N,V_formulaWasFixable
TB,R,N,V_hasAnyRichTextCells
TB,R,N,V_hasRelativeCellRef
TB,R,N,V_isAPivotTable
TB,R,N,V_isArray
TB,R,N,V_isCategoryRef
TB,R,N,V_isDefaultsOnly
TB,R,N,V_isEmptyPivot
TB,R,N,V_isIdentityMapping
TB,R,N,V_isOperator
TB,R,N,V_isRegisteredWithCalcEngine
TB,R,N,V_isVariation
TB,R,N,V_isZoomToEditOperationInProgress
TB,R,N,V_loadedIndexesAfterUnarchive
TB,R,N,V_madeChange
TB,R,N,V_nonDefaultFontName
TB,R,N,V_nonDefaultFontSize
TB,R,N,V_overridesPadding
TB,R,N,V_returnCellContents
TB,R,N,V_selectionUsesBezierPath
TB,R,N,V_selectsCellOnInitialTap
TB,R,N,V_shouldWrap
TB,R,N,V_startWithFirstItem
TB,R,N,V_suppressAutomaticNamedReferenceInvalidation
TB,R,N,V_upgradeRepairedTiles
TB,R,N,V_useReverseMap
TB,R,N,V_usesSelectionChromeResizer
TB,R,N,V_valid
TB,R,N,V_willModifyWasCalled
TB,R,N,VmContainedTextEditorSpills
TB,R,N,VmContainedTextEditorTextWraps
TB,R,N,VmLayoutDirectionIsLeftToRight
TB,R,N,VmShouldHyphenate
TB,R,V_isAborted
TB,R,VmFinal
TB,V_doFullRefresh
TB,V_earlyRefreshRequested
TB,V_isColumnOrderTemporary
TB,V_isRowOrderTemporary
TB,V_offline
TB,V_tableRepIsBeingRemovedFromBackgroundLayout
TB,VmDrawsBlackAndWhite
TB,VmExpandBackgroundFill
TB,VmShowsOverlayLayers
TB,VmShowsTableChrome
TC,N
TC,N,V_aggType
TC,N,V_aggregateType
TC,N,V_basePreserveFlags
TC,N,V_changeType
TC,N,V_columnGroupLevel
TC,N,V_conditionalStyleAppliedRule
TC,N,V_groupLevel
TC,N,V_options
TC,N,V_previousLevel
TC,N,V_purpose
TC,N,V_rangeContext
TC,N,V_rowGroupLevel
TC,N,V_showAsType
TC,N,V_storageVersionPreBNC
TC,N,V_updatedLevel
TC,N,V_valueType
TC,R
TC,R,N
TC,R,N,V_categoryAggregateType
TC,R,N,V_cellFormatKind
TC,R,N,V_dataType
TC,R,N,V_groupLevel
TC,R,N,V_hidingAction
TC,R,N,V_predicateType
TC,R,N,V_qualifier1
TC,R,N,V_qualifier2
TC,R,N,V_showAsType
TC,R,N,V_type
TC,R,N,V_valueType
TI,D,N
TI,N
TI,N,V_baseFormatID
TI,N,V_baseRowIndex
TI,N,V_booleanFormatID
TI,N,V_cachedNumberOfColumns
TI,N,V_cachedNumberOfFooterOrGrandTotalRows
TI,N,V_cachedNumberOfGrandTotalColumns
TI,N,V_cachedNumberOfHeaderColumns
TI,N,V_cachedNumberOfRows
TI,N,V_cellCount
TI,N,V_cellStyleID
TI,N,V_columnOrRowIndex
TI,N,V_commentStorageID
TI,N,V_conditionalStyleID
TI,N,V_controlCellSpecID
TI,N,V_controlFormatID
TI,N,V_curRowIndex
TI,N,V_currencyFormatID
TI,N,V_currentFormatID
TI,N,V_customFormatID
TI,N,V_dateFormatID
TI,N,V_durationFormatID
TI,N,V_finalTopRowIndex
TI,N,V_formulaID
TI,N,V_importWarningSetID
TI,N,V_interactionTypeFromTheFuture
TI,N,V_invalidRowIndex
TI,N,V_key
TI,N,V_layoutSpacesInvalidateCoordinatesAfterRow
TI,N,V_maxConcurrentTasks
TI,N,V_maxNumberOfColumns
TI,N,V_maxNumberOfPopulatedCells
TI,N,V_maxNumberOfRows
TI,N,V_multipleChoiceListFormatID
TI,N,V_nextID
TI,N,V_numCellsPerTask
TI,N,V_numberFormatID
TI,N,V_numberOfColumns
TI,N,V_numberOfFooterRows
TI,N,V_numberOfLayoutColumns
TI,N,V_numberOfRows
TI,N,V_partitionPosition
TI,N,V_rowForColumnIndexesWithMerges
TI,N,V_symbol
TI,N,V_textFormatID
TI,N,V_textStyleID
TI,N,V_tileRowIndex
TI,N,VmVisibleMask
TI,R,N
TI,R,N,V_boolCount
TI,R,N,V_boolTrueCount
TI,R,N,V_dateCount
TI,R,N,V_durationCount
TI,R,N,V_errorCount
TI,R,N,V_legacyDisplayFormatType
TI,R,N,V_mask
TI,R,N,V_noContentCount
TI,R,N,V_numberCount
TI,R,N,V_numberOfColumns
TI,R,N,V_numberOfResizableColumns
TI,R,N,V_numberOfResizableRows
TI,R,N,V_numberOfRows
TI,R,N,V_refCount
TI,R,N,V_rewriteType
TI,R,N,V_startRowIndex
TI,R,N,V_stringCount
TI,V_offset
TQ,N
TQ,N,V_afterCountValue
TQ,N,V_beforeCountValue
TQ,N,V_cachedAutoSizeFlags
TQ,N,V_cachedBaseRegionVersionCounter
TQ,N,V_cachedCellRegionVersionCounter
TQ,N,V_cachedMaxNumberOfRows
TQ,N,V_cellCount
TQ,N,V_cellsPerSubRegion
TQ,N,V_columnIndex
TQ,N,V_columnRemainDup
TQ,N,V_count
TQ,N,V_dirtyPrecedentCount
TQ,N,V_emptyCellCount
TQ,N,V_firstIndex
TQ,N,V_flags
TQ,N,V_index
TQ,N,V_lastColumnDiffPos
TQ,N,V_lastIndex
TQ,N,V_lastRowDiffPos
TQ,N,V_numDirtyCells
TQ,N,V_pageCount
TQ,N,V_pageNumber
TQ,N,V_pasteType
TQ,N,V_presetIDForUpgrade
TQ,N,V_rowMarkIndex
TQ,N,V_rowRemainDup
TQ,N,V_searchFlags
TQ,N,V_searchMask
TQ,N,V_sourceColumnCount
TQ,N,V_sourceRowCount
TQ,N,V_startingTileID
TQ,N,V_structuredTextImportSizeLimit
TQ,N,V_styleCount
TQ,N,V_tempUpgradePresetID
TQ,N,VmActiveTokenCharIndex
TQ,R
TQ,R,N
TQ,R,N,V_archivingCompatibilityVersion
TQ,R,N,V_argumentIndex
TQ,R,N,V_byteSizeForArchiving
TQ,R,N,V_cellCount
TQ,R,N,V_compressedSize
TQ,R,N,V_estimatedByteSize
TQ,R,N,V_filterIndex
TQ,R,N,V_hashVal
TQ,R,N,V_parenNestingLevel
TQ,R,N,V_versionCounter
TQ,R,VmStage
TQ,R,VmStageCount
TS,N,V_aggrIndexLevel
TS,N,V_aggregateIndex
TS,N,V_aggregateIndexLevel
TS,N,V_cellFlags
TS,N,V_explicitFormatFlags
TS,N,V_functionIndex
TS,N,V_internalOwnerID
TS,N,V_invalidColumnIndex
TS,N,V_localOwnerID
TS,N,V_operatorChar
TS,N,V_ownerIndex
TS,N,V_ownerKind
TS,R,N
TS,R,N,V_categoryColumnIndex
TS,R,N,V_formulaOwnerId
TS,R,N,V_functionIndex
TS,R,N,V_ownerIndex
TS,R,N,V_startColumnIndex
TS,R,N,V_toInternalOwnerID
TS,R,V_functionIndex
TSTImportFormulaWarningTypeFromArchive:
TSTImportFormulaWarningTypeToArchive
T^v,N
T^v,N,V_cppCalcEngine
T^v,N,V_evaluationContext
T^v,R,N,V_cellDependencies
T^v,R,N,V_cellUIDMap
T^v,R,N,V_dependTracker
T^v,R,N,V_errors
T^v,R,N,V_labelRowHeightList
T^v,R,N,V_labelRowVisibilityList
T^v,R,N,V_pivotDateGroupingTypesByColumn
T^v,R,N,V_pivotValueTypesByColumn
T^v,R,N,V_previousGroupNodeToUpdated
T^v,R,N,V_rangeDependencies
T^v,R,N,V_spanningColumnDependencies
T^v,R,N,V_spanningRowDependencies
T^v,R,N,V_summaryRowHeightList
T^v,R,N,V_updatedGroupNodeToPrevious
T^v,R,N,V_volatileDependencies
T^v,R,N,V_wholeOwnerDependencies
T^v,R,V_columnUids
T^{CGImage=},N,V_cachedImage
T^{TSCENumberValue=^^?{TSUDecimal={?=[2Q]}}{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}SB},R,N,V_numberAccumulator
T^{TSCETableResolver=^^?},N,V_contextTableResolver
T^{TSCETableResolver=^^?},R,N
Tc,N,V_valueType
Td,N
Td,N,V_cachedImageScreenScale
Td,N,V_cachedTableNameHeight
Td,N,V_categoryColumnWidth
Td,N,V_confidence
Td,N,V_currentScreenScale
Td,N,V_defaultColumnWidth
Td,N,V_defaultRowHeight
Td,N,V_doubleValue
Td,N,V_durationInterval
Td,N,V_dynamicAddOrRemoveColumnElementSize
Td,N,V_dynamicAddOrRemoveRowElementSize
Td,N,V_dynamicColumnTabSize
Td,N,V_dynamicHeightResize
Td,N,V_dynamicResizingColumnAdjustment
Td,N,V_dynamicResizingRowAdjustment
Td,N,V_dynamicRowTabSize
Td,N,V_dynamicTableNameResize
Td,N,V_dynamicWidthResize
Td,N,V_firstPartitionWidth
Td,N,V_inset
Td,N,V_maxWidthForChildren
Td,N,V_pivotDataRefreshTimestamp
Td,N,V_remoteDataSyncKey
Td,N,V_secondsToAdd
Td,N,V_structuredTextImportConfidenceThreshold
Td,N,V_structuredTextImportConfidenceThresholdForCanvas
Td,N,V_tableNameHeight
Td,N,V_viewScale
Td,N,VmMaxWidthForChildren
Td,R,N
Td,R,N,V_capturedColumnWidthTotal
Td,R,N,V_dynamicFooterHeight
Td,R,N,V_fontSize
Td,R,N,V_heightFactor
Td,R,N,V_increment
Td,R,N,V_maximum
Td,R,N,V_minimum
Td,R,N,V_size
Td,R,N,V_timeout
Td,R,N,V_width
Td,R,N,V_widthFactor
Td,R,N,VmTargetHeight
Td,R,N,VmTargetWidth
Td,R,V_timeoutInterval
Ti,N
Ti,N,V_badgeType
Ti,N,V_cachedVerticalAlignment
Ti,N,V_changeDescriptor
Ti,N,V_direction
Ti,N,V_dynamicColumnAdjustment
Ti,N,V_dynamicRowAdjustment
Ti,N,V_layoutCacheFlags
Ti,N,V_notifyType
Ti,N,V_order
Ti,N,V_rank
Ti,N,V_tableEnvironment
Ti,N,V_tableRowsBehavior
Ti,N,V_type
Ti,N,V_verticalAlignment
Ti,R,D,N
Ti,R,N
Ti,R,N,V_bottomStrokeOrder
Ti,R,N,V_direction
Ti,R,N,V_layoutSpaceType
Ti,R,N,V_leftStrokeOrder
Ti,R,N,V_level
Ti,R,N,V_listType
Ti,R,N,V_renderAsTokenType
Ti,R,N,V_rightStrokeOrder
Ti,R,N,V_shipVersion
Ti,R,N,V_tableRowsBehavior
Ti,R,N,V_topStrokeOrder
Ti,R,N,V_type
Ti,R,N,V_verticalAlignment
Ti,R,N,V_writingDirection
Tq,N
Tq,N,V_attribute
Tq,N,V_dynamicHidingRowsColsDirection
Tq,N,V_dynamicRevealingRowsColsDirection
Tq,N,V_errorType
Tq,N,V_formulaCoordSpace
Tq,R,N
Tq,R,N,V_activeFlatteningDimension
Tq,R,N,V_attribute
Tq,R,N,V_day
Tq,R,N,V_dimension
Tq,R,N,V_flags
Tq,R,N,V_flatteningDimension
Tq,R,N,V_groupingType
Tq,R,N,V_month
Tq,R,N,V_naturalAlignment
Tq,R,N,V_selectionType
Tq,R,N,V_year
Tq,V_requestsInFlight
Tq,V_state
Tr^v,N,V_mergeFormulaIndexes
Tr^v,N,V_mergeFormulas
Tr^v,N,V_uidRanges
Tr^v,R
Tr^v,R,N,V_cellRanges
Tr^v,R,N,V_dstUidForSrcUid
Tr^v,R,N,V_mergeOriginsMap
Tr^v,R,N,V_mergedRects
Tr^v,R,N,V_reverseOriginsMap
Tr^v,R,N,V_rowOrColumnUuids
Tr^v,R,N,V_srcUidForDstUid
Tr^v,R,V_orderedUuids
Tr^v,R,V_uids
Tr^v,R,V_viewOrderUids
Tr^{TSCEFunctor=@C},R,N,V_groupingFunctor
Tr^{TSKUIDStruct=QQ},N,V_ownerUID
Tr^{TSKUIDStruct=QQ},N,V_tableUID
Tr^{TSKUIDStruct=QQ},R,N
Tr^{TSKUIDStruct=QQ},R,N,V_conditionalStyleOwnerUID
Tr^{TSKUIDStruct=QQ},R,N,V_groupByUID
Tr^{TSKUIDStruct=QQ},R,N,V_hostColumnUID
Tr^{TSKUIDStruct=QQ},R,N,V_hostRowUID
Tr^{TSKUIDStruct=QQ},R,N,V_hostTableUID
Tr^{TSKUIDStruct=QQ},R,N,V_tableUID
Tr^{TSUCellCoord=ISBB},N,V_mergeSource
Ts,N,V_mode
Ts,N,V_relativeColumn
Ts,R,N
Ts,R,N,V_maxArguments
Ts,R,N,V_minArguments
Ts,R,N,V_repeatingGroupSize
T{CGAffineTransform=dddddd},N,V_transform
T{CGAffineTransform=dddddd},N,V_transformFromCanvas
T{CGAffineTransform=dddddd},N,V_transformFromDevice
T{CGAffineTransform=dddddd},N,V_transformToCanvas
T{CGAffineTransform=dddddd},N,V_transformToDevice
T{CGPoint=dd},N,V_tableOffset
T{CGRect={CGPoint=dd}{CGSize=dd}},N
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_cachedAlignedFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_cachedAlignedStrokeFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_cachedAutosizedFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_cachedFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_cachedMaskRect
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_cachedStrokeFrame
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_cellRangeVisibleRect
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_frame
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_searchSelectionBounds
T{CGRect={CGPoint=dd}{CGSize=dd}},N,V_tableNameBounds
T{CGRect={CGPoint=dd}{CGSize=dd}},R,N
T{CGSize=dd},N
T{CGSize=dd},N,V_effectiveSize
T{CGSize=dd},N,V_maxSize
T{CGSize=dd},N,V_maximumSize
T{CGSize=dd},N,V_minSize
T{CGSize=dd},N,V_scaleToFit
T{CGSize=dd},N,V_sizeOfText
T{CGSize=dd},R,N
T{CGSize=dd},R,N,V_maximumSize
T{RefTypeHolder<TSCERangeRef, 0>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}},R,N
T{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}},N,V_chromeRangeRef
T{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}},R,N
T{TSCEAnyRef=S{TSCESpanningRangeRef={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}C}{TSKUIDStruct=QQ}B@},R,N
T{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}},N,V_hostCellRef
T{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}},R,N
T{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}},R,N,V_cellRef
T{TSCECellTractRefCore={TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}{TSKUIDStruct=QQ}C{TSUPreserveFlags=C}BBB},N,V_cppCellTractRef
T{TSCEFormulaTranslationFlags=C},R,N,V_translationFlags
T{TSCEGridCoord=II},R,N
T{TSCEGridDimensions=II},N,V_dimensions
T{TSCEGridDimensions=II},R,N
T{TSCEGridDimensions=II},R,V_dimensions
T{TSCEInternalCellReference={TSUCellCoord=ISBB}SS},R,N,V_startCellRef
T{TSCENumberValue=^^?{TSUDecimal={?=[2Q]}}{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}SB},R
T{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}},N,V_transposedBodyRange
T{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}},R,N
T{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}},R,N
T{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}},R,N,V_rangeRef
T{TSCEUidCellRef={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}{TSKUIDStruct=QQ}},N,V_hostCellRef
T{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C},R,N
T{TSKUIDStruct=QQ},N
T{TSKUIDStruct=QQ},N,V_absoluteGroupUid
T{TSKUIDStruct=QQ},N,V_aggregateFormulaOwnerUID
T{TSKUIDStruct=QQ},N,V_baseTableUID
T{TSKUIDStruct=QQ},N,V_columnUid
T{TSKUIDStruct=QQ},N,V_conditionalStyleOwnerUID
T{TSKUIDStruct=QQ},N,V_finalDstTableUID
T{TSKUIDStruct=QQ},N,V_formulaOwnerUID
T{TSKUIDStruct=QQ},N,V_fromGroupByUID
T{TSKUIDStruct=QQ},N,V_fromTableUID
T{TSKUIDStruct=QQ},N,V_groupByUID
T{TSKUIDStruct=QQ},N,V_groupByUid
T{TSKUIDStruct=QQ},N,V_hiddenStateExtentUid
T{TSKUIDStruct=QQ},N,V_hiddenStatesUid
T{TSKUIDStruct=QQ},N,V_hostTableUID
T{TSKUIDStruct=QQ},N,V_insertAtUid
T{TSKUIDStruct=QQ},N,V_insertOppositeUid
T{TSKUIDStruct=QQ},N,V_nextCategoryOwnerUID
T{TSKUIDStruct=QQ},N,V_pivotAggregateRuleChangeUID
T{TSKUIDStruct=QQ},N,V_pivotDataRefreshUID
T{TSKUIDStruct=QQ},N,V_pivotRowColumnRuleChangeUID
T{TSKUIDStruct=QQ},N,V_pivotSourceTableUID
T{TSKUIDStruct=QQ},N,V_pivotTableUID
T{TSKUIDStruct=QQ},N,V_relativeGroupUid
T{TSKUIDStruct=QQ},N,V_rowUID
T{TSKUIDStruct=QQ},N,V_uuid
T{TSKUIDStruct=QQ},R
T{TSKUIDStruct=QQ},R,N
T{TSKUIDStruct=QQ},R,N,V_categoryOwnerUID
T{TSKUIDStruct=QQ},R,N,V_columnUid
T{TSKUIDStruct=QQ},R,N,V_condStyleOwnerUID
T{TSKUIDStruct=QQ},R,N,V_formulaOwnerUid
T{TSKUIDStruct=QQ},R,N,V_groupByUid
T{TSKUIDStruct=QQ},R,N,V_limitedToTableUID
T{TSKUIDStruct=QQ},R,N,V_pbTableUID
T{TSKUIDStruct=QQ},R,N,V_sortingAggregateRuleUid
T{TSKUIDStruct=QQ},R,N,V_tableUID
T{TSKUIDStruct=QQ},R,N,V_uniqueObjectUID
T{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}},N,V_anchorCellUID
T{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}},N,V_cellUID
T{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}},N,V_cursorCellUID
T{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}},R,N,V_cellUID
T{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}},N
T{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}},N,V_cellUIDRange
T{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}},N,V_tableTranslatorBaseMapForPasteboard
T{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}},N,V_tableTranslatorViewMapForPasteboard
T{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}},R,N
T{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}},N,V_cachedColumnUIDs
T{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}},N,V_cachedRowUIDs
T{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}},R,N,V_pivotColumnUIDs
T{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}},R,N,V_pivotRowUIDs
T{TSTPerformanceLoggingToken=@Q},N,V_logToken
T{TSTSimpleRange=qQ},N,V_range
T{TSTSimpleRange=qQ},R,N
T{TSUCellCoord=ISBB},D,N
T{TSUCellCoord=ISBB},N
T{TSUCellCoord=ISBB},N,V_cacheHintID
T{TSUCellCoord=ISBB},N,V_cachedCellID
T{TSUCellCoord=ISBB},N,V_curCellID
T{TSUCellCoord=ISBB},N,V_dynamicSuppressingConditionalStylesCellID
T{TSUCellCoord=ISBB},N,V_editingCellIDForInvalidation
T{TSUCellCoord=ISBB},N,V_firstCellID
T{TSUCellCoord=ISBB},N,V_formulaCoord
T{TSUCellCoord=ISBB},N,V_idOfFirstOccurence
T{TSUCellCoord=ISBB},N,V_lastCellID
T{TSUCellCoord=ISBB},N,V_minCursorCellID
T{TSUCellCoord=ISBB},N,V_modelCellID
T{TSUCellCoord=ISBB},N,V_ratingsDragCellID
T{TSUCellCoord=ISBB},R,N
T{TSUCellCoord=ISBB},R,N,V_allAggsInGroupRootFormulaCoord
T{TSUCellCoord=ISBB},R,N,V_formulaCoord
T{TSUCellCoord=ISBB},R,N,V_groupingColumnHeadersFormulaCoord
T{TSUCellCoord=ISBB},R,N,V_groupingColumnsFormulaCoord
T{TSUCellCoord=ISBB},R,N,V_indirectAggTypeChangeFormulaCoord
T{TSUCellCoord=ISBB},R,N,V_layoutCellID
T{TSUCellCoord=ISBB},R,N,V_sourceRectOrigin
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_boundingCellRange
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_cachedMaskSpillRange
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_cachedMergeRange
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_cellRange
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_clampingRect
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_dirtyStrokeRange
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_dynamicFontColorCellRange
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_dynamicHidingContent
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_dynamicHidingRowsCols
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_dynamicHidingText
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_dynamicRemovingText
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_dynamicResizingColumnRange
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_dynamicResizingRowRange
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_dynamicRevealingRowsCols
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_layoutMergeRange
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_mergeRange
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_sourceCellRange
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_targetCellRange
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,V_zoomToEditVisibleCellRange
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},N,VmPrevEditingSpillingTextRange
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},R,N
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},R,N,V_layoutRange
T{TSUCellRect={TSUCellCoord=ISBB}{?=II}},R,N,VmEditingSpillingTextRange
T{TSUChromeColumnIndex=S},R,N
T{TSUChromeRowIndex=I},R,N
T{TSUDecimal={?=[2Q]}},N
T{TSUDecimal={?=[2Q]}},R,N
T{TSUDecimal={?=[2Q]}},R,V_number
T{TSUModelCellCoord={TSUCellCoord=ISBB}},N,V_hostCellCoord
T{TSUModelCellCoord={TSUCellCoord=ISBB}},R
T{TSUModelCellCoord={TSUCellCoord=ISBB}},R,N
T{TSUModelColumnIndex=S},N,V_numberOfHeaderColumns
T{TSUModelColumnIndex=S},R,N
T{TSUModelColumnIndex=S},R,N,V_baseColumnIndex
T{TSUModelColumnOrRowIndex=I},R,N,V_baseIndex
T{TSUModelRowIndex=I},N,V_numberOfFooterRows
T{TSUModelRowIndex=I},N,V_numberOfHeaderRows
T{TSUModelRowIndex=I},R,N
T{TSUPreserveFlags=C},N
T{TSUPreserveFlags=C},N,V_preserveFlags
T{TSUPreserveFlags=C},R,N
T{TSUViewCellCoord={TSUCellCoord=ISBB}},R
T{TSUViewCellCoord={TSUCellCoord=ISBB}},R,N
T{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}},N,V_viewCellRect
T{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}},R,N
T{TSUViewColumnIndex=S},N
T{TSUViewColumnIndex=S},R,N
T{TSUViewColumnOrRowIndex=I},R,N,V_viewIndex
T{TSUViewRowIndex=I},N
T{TSUViewRowIndex=I},R,N
T{UIEdgeInsets=dddd},N,V_paddingInsets
T{UIEdgeInsets=dddd},R,N,V_paddingInsets
T{UIEdgeInsets=dddd},R,N,VmCachedPaddingForEditingCell
T{_NSRange=QQ},N,V_baseTileRange
T{_NSRange=QQ},N,V_bodySideBorderColumnRange
T{_NSRange=QQ},N,V_bottomBorderRowRange
T{_NSRange=QQ},N,V_footerColumnSeparatorColumnRange
T{_NSRange=QQ},N,V_footerRowSeparatorRowRange
T{_NSRange=QQ},N,V_headerColumnSeparatorColumnRange
T{_NSRange=QQ},N,V_headerRowSeparatorRowRange
T{_NSRange=QQ},N,V_headerSideBorderColumnRange
T{_NSRange=QQ},N,V_keyRange
T{_NSRange=QQ},N,V_prefixRange
T{_NSRange=QQ},N,V_searchReferenceRange
T{_NSRange=QQ},N,V_topBorderRowRange
T{_NSRange=QQ},R,N
T{_NSRange=QQ},R,V_range
T{_opaque_pthread_rwlock_t=q[192c]},N,V_rwlock
T{os_unfair_lock_s=I},N,V_cachedIndexesUnfairLock
T{os_unfair_lock_s=I},N,V_pivotCachedIndexesUnfairLock
T{shared_ptr<TSCEValue>=^{TSCEValue}^{__shared_weak_count}},N,V_cachedValue
T{vector<TSUCellCoord, std::allocator<TSUCellCoord>>=^{TSUCellCoord}^{TSUCellCoord}{__compressed_pair<TSUCellCoord *, std::allocator<TSUCellCoord>>=^{TSUCellCoord}}},N,V_cursorCellIDs
T{vector<unsigned long, std::allocator<unsigned long>>=^Q^Q{__compressed_pair<unsigned long *, std::allocator<unsigned long>>=^Q}},R,N,V_cellFlags
UIDForIndex:isRows:
UIDLookupList
UIDSetForIndexes:isRows:
UIDSetForRange:isRows:
UIDsForIndexes:isRows:
UIDsForRange:isRows:
URLByAppendingPathComponent:
URLFragmentAllowedCharacterSet
UTF8String
UUID
UUIDString
XLImportDateMode
_AST
_UIDLookupList
_abortObject
_absTractRef
_absoluteGroupUid
_accumulator
_activeFlatteningDimension
_addAggregates:atLevel:
_affectsCellBorders
_afterCountValue
_afterRewriteMap
_aggFormulaCoordsFreeList
_aggNodeCoordsToUnpack
_aggNodes
_aggNodesByFormulaCoord
_aggRoot
_aggType
_aggValuesLock
_aggregateFieldName
_aggregateFormulaOwner
_aggregateFormulaOwnerUID
_aggregateFunction
_aggregateIndexLevel
_aggregateType
_aggregateUidList
_aggregateUidMap
_aggregates
_aggregator
_aggregators
_allColumnGroupUids
_allFlattenedUids
_allHeaderPerTablesPrecedent
_allRequestedKeys
_allRowGroupUids
_allowFreeformFormulaText
_allowHorizontalAutoresize
_allowSpanningColumnReferenceBodyQualifier
_allowWhitespaceInFormulas
_allowsBlackDragDropBackground
_allowsFullyFilteredTables
_anchorCellUID
_animationController
_annotations
_annotationsForIndexes:
_annotationsInRows:
_annotationsIntersectingButNotContainingBaseCellRegion:
_apparentTractRef
_applySpareFormatOnly
_applyingToTable
_archivedColumnCount
_archivedLayoutEngineBundle
_archivingCompatibilityVersion
_argIndex0
_argIndex1
_argIndex2
_argSpec
_argumentIndex
_argumentSpec
_arguments
_arrayOfChunkRocks
_arrowKeyAtEdgeWhileEditingNavigates
_arrowKeysNavigateWhenEditingBeganByTyping
_arrowKeysWrap
_asciiSpaceCharacterSet
_aspectOperationIsInProgress
_assertedOnMissingCombinations
_astNodeArray
_attachmentCellStorageToLayoutMap
_attribute
_attributes
_autoImplicitSort
_autofillSelection
_auxRowColumnInfo
_average
_backTabWraps
_backgroundProcessingQueue
_badgeType
_bandedFillIsValid
_bandedFillObject
_baseCellRef
_baseCellUIDRegion
_baseColumnGroupUids
_baseColumnIndex
_baseColumnToViewColumn
_baseColumns
_baseDataListCache
_baseDataStore
_baseFilteredIndexes
_baseFlattenedUids
_baseFormat
_baseFormatID
_baseHiddenByUid
_baseIndex
_baseMap
_basePreserveFlags
_baseRow
_baseRowGroupUids
_baseRowIndex
_baseRowToViewRow
_baseRows
_baseTableUID
_baseTile
_baseTileRange
_baseTractRef
_baseUserHiddenIndexes
_beforeColumnRowUIDMap
_beforeCountValue
_beforeRewriteMap
_beginImplicitEditing
_bezierPathCache
_blank
_blankString
_blockOffset
_blockingIdentifier
_bodyCellStyle
_bodyColumnCoordinates
_bodyGroupingList
_bodyRowCoordinates
_bodySideBorderColumnRange
_bodyTextStyle
_boolCount
_boolTrueCount
_boolValue
_booleanFormat
_booleanFormatID
_booleanValue
_bottomBorderRowRange
_bottomRowStrokes
_bottomStroke
_bottomStrokeLayer
_bottomStrokeOrder
_boundingCellRange
_bucketCount
_buckets
_byteSizeForArchiving
_cache
_cacheHintID
_cacheIsValid
_cachedAlignedFrame
_cachedAlignedStrokeFrame
_cachedAllAnnotations
_cachedAutoSizeFlags
_cachedAutosizedFrame
_cachedBaseRegion
_cachedCellID
_cachedCellRegion
_cachedCellStyle
_cachedCellWraps
_cachedColumnUIDs
_cachedFrame
_cachedGroupValueTuple
_cachedImage
_cachedImageScreenScale
_cachedIndexSetsAreValid
_cachedIndexes
_cachedIndexesForLabelRows
_cachedIndexesForLeadingRows
_cachedIndexesForLeadingSummaryRows
_cachedIndexesForSummaryAndLabelRows
_cachedIndexesForSummaryRows
_cachedIndexesUnfairLock
_cachedIsValidReference
_cachedLabelRowIndexesAtLevels
_cachedLeadingColumnIndexesAtLevels
_cachedLeadingRowIndexesAtLevels
_cachedLeadingSummaryColumnIndexesAtLevels
_cachedLeadingSummaryRowIndexesAtLevels
_cachedMaskSpillRange
_cachedMaxNumberOfColumns
_cachedMaxNumberOfRows
_cachedMergeRange
_cachedNumberOfColumns
_cachedNumberOfFooterOrGrandTotalRows
_cachedNumberOfFooterRows
_cachedNumberOfGrandTotalColumns
_cachedNumberOfHeaderColumns
_cachedNumberOfHeaderRows
_cachedNumberOfRows
_cachedPadding
_cachedParagraphAlignment
_cachedPivotIndexSetsAreValid
_cachedQuotes
_cachedRowUIDs
_cachedSegment
_cachedSpecifiers
_cachedStocks
_cachedStrokeFrame
_cachedSummaryColumnIndexesAtLevels
_cachedSummaryRowIndexesAtLevels
_cachedTableNameHeight
_cachedTextStyle
_cachedValue
_cachedValueWasFetchedWithRichTextAttributes
_cachedVerticalAlignment
_calcCellsInProgress
_calcEngine
_calcEngineGroupByChangeNotifications
_calcEngineRegistrationObject
_calculationEngine
_calculationWillShutDown
_calendar
_canBeNested
_canvasReferenceController
_canvasReferenceProvider
_capturedColumnWidthTotal
_capturedColumnWidths
_capturedRowHeightTotal
_capturedRowHeights
_categoryAggregateType
_categoryAggregatesOwnerUID
_categoryColumnIndex
_categoryColumnWidth
_categoryLevel1CellStyle
_categoryLevel1TextStyle
_categoryLevel2CellStyle
_categoryLevel2TextStyle
_categoryLevel3CellStyle
_categoryLevel3TextStyle
_categoryLevel4CellStyle
_categoryLevel4TextStyle
_categoryLevel5CellStyle
_categoryLevel5TextStyle
_categoryOrder
_categoryOwner
_categoryOwnerUID
_categoryRef
_cell
_cellBorder
_cellContents
_cellCoordinates
_cellCoordsToStyleUpgradeForFormulatext
_cellCount
_cellCountDiffsPerColumn
_cellCountDiffsPerRow
_cellData
_cellDependencies
_cellDiffArray
_cellDragController
_cellEditingMaskLayers
_cellEditorsCanScrollToNonLocalTableSelection
_cellFlags
_cellIDToWPColumnCache
_cellIDs
_cellLists
_cellMap
_cellPropsRowHeight
_cellRange
_cellRangeVisibleRect
_cellRanges
_cellRangesToInvalidate
_cellRef
_cellRefsByGroupNodeByGroupBy
_cellRefsToCheck
_cellRefsUsingFunction
_cellRegion
_cellRegionForClearedMergeStrokes
_cellSelection
_cellSpec
_cellStatesToLayout
_cellStyle
_cellStyleHandle
_cellStyleHandles
_cellStyleID
_cellStyles
_cellUID
_cellUIDIterator
_cellUIDList
_cellUIDMap
_cellUIDRange
_cellUIDRangeList
_cellUIDRegion
_cellUIDs
_cellValue
_cellValues
_cellWarning
_cellWillChangeDistributor
_cellWraps
_cells
_cellsByCoord
_cellsPendingWrite
_cellsPerSubRegion
_cellsToInvalidate
_cellsToInvalidateAfterRecalc
_cellsToInvalidateNonoverflowingAfterRecalc
_changeDescriptor
_changeDescriptors
_changeType
_childNodesByRowUid
_children
_childrenCoordSet
_childrenLock
_chromeCoordsAreViewCoords
_clampingRect
_cleanCellDependencyRows
_clearBottomStroke
_clearContentAtIndex:count:
_clearErrorCells
_clearLeftStroke
_clearRightStroke
_clearedMajorStrokeLayer
_clearedMinorStrokeLayer
_clearedStrokeLayer
_coerceEmptyCellToFormat:
_coerceTextCellToBestNumberFormatUsingLimitedParsing:allowFractions:
_coerceToBooleanFormat
_coerceToCheckboxFormat
_coerceToCurrencyFormat
_coerceToCustomCurrencyFormat
_coerceToCustomDateTimeFormat
_coerceToCustomNumberFormat
_coerceToCustomTextFormat
_coerceToDateTimeFormat
_coerceToDecimalFormat
_coerceToDurationFormat
_coerceToFractionFormat
_coerceToNumberFormatWithSeparatorFixing:
_coerceToPercentageFormat
_coerceToRatingFormat
_coerceToScientificFormat
_coerceToTextFormat
_collapsedGroupUIDs
_collapsedGroupUids
_collapsedIndexes
_colonCharacterSet
_color
_columnAggregateUid
_columnAggregates
_columnGroupLevel
_columnGroupings
_columnHeaderStorage
_columnHiddenStateExtent
_columnIdList
_columnIndex
_columnIndexForUid
_columnIndexToMergeRangeMap
_columnIndexesInRow
_columnModelWidths
_columnOrRowIndex
_columnOrderChangedCoord
_columnOrderReversed
_columnRegion
_columnRemainDup
_columnRowUID
_columnRowUIDMap
_columnStrokeExportCache
_columnTgtToPbMaps
_columnToMaxFittingWidths
_columnToStrokeWidthCache
_columnToWidth
_columnUID
_columnUIDIndexList
_columnUid
_columnUidForIndex
_columnUids
_columnUidsWithUniqueIndexes
_combinedCanonicalKeyStringAsUtf8
_combinedHiddenIndexes
_commentHostingMap
_commentStorageDataList
_commentStorageID
_commentStorageMap
_commentStorageTableReference
_components
_condStyleOwnerUID
_conditionalStyle
_conditionalStyleAppliedRule
_conditionalStyleFormulaOwner
_conditionalStyleID
_conditionalStyleOwnerUID
_conditionalStyleSetDataList
_conditionalStyleSetRules
_conditionalStyleSetTableReference
_conditionalStylesForUndo
_confidence
_containsCellBorderChanges
_containsSuppressCustomFormatHandlingProperty
_contentIterator
_contentRWLock
_contentReadingThreads
_contextSheetName
_contextTableResolver
_continuesEditingAfterNavigation
_controlCellSelection
_controlCellSpecDataList
_controlCellSpecID
_controlCellSpecTableReference
_controlCellUIAlwaysVisible
_controlFormat
_controlFormatID
_coordMapper
_coordMappersByTableUID
_coordMappersLock
_coordSetsReferringToTable
_coordSetsReferringToUuidInTable
_coordinates
_coordinator
_copiedUIDMap
_copyOnWriteUIDMapper
_cornersCanDragResize
_correctAndCheckStateSuppressingAssertions:
_count
_cppCalcEngine
_cppCellTractRef
_createLargeDefaultTables
_createTileWithID:
_curBlock
_curCellID
_curRowIndex
_curTile
_curTileRange
_currencyFormatID
_currentBaseCellID
_currentCell
_currentCellIDIsBase
_currentColumnWidths
_currentData
_currentFormat
_currentFormatID
_currentRowHeights
_currentRowIndex
_currentScreenScale
_currentSummaryCellID
_currentViewCellID
_cursorCellIDs
_cursorCellUID
_customFormat
_customFormatForBlankGroup
_customFormatForErrorGroup
_customOrderedStrokeLayer
_customStrokeLayer
_customStrokeProvider
_customUnorderedStrokeLayer
_data
_dataFields
_dataList
_dataListCache
_dataStore
_dataStoreIterator
_dataType
_dataValues
_date
_dateAccumulator
_dateCount
_dateFormat
_dateFormatID
_dateValue
_day
_debugOnly_DidCleanGraphForConsistencyViolation
_debugOnly_DidDetectAndRepairConsistencyViolations
_decimal
_decimalValue
_defaultColumnStyle
_defaultColumnWidth
_defaultMajorStrokeLayer
_defaultMinorStrokeLayer
_defaultRowHeight
_defaultStrokeLayer
_defaultStrokeProvider
_deferGroupByChangeNotificationsLevel
_deferredGroupByChangeNotifications
_definedBottomStroke
_definedBottomStrokeOrder
_definedCellStyle
_definedColumnAggregateUid
_definedColumnUID
_definedDirection
_definedGroupingColumnUID
_definedLeftStroke
_definedLeftStrokeOrder
_definedRightStroke
_definedRightStrokeOrder
_definedRunningTotalGroupingColumnUid
_definedTextStyle
_definedTopStroke
_definedTopStrokeOrder
_delegate
_dependTracker
_dependentsToDirtyByFromRef
_deprecatedProvider
_detokenizedText
_didModifyWasCalled
_dimension
_dimensions
_direction
_dirtyCellDependencyRows
_dirtyCellRanges
_dirtyCellRegionGatherer
_dirtyCellsWithNoLockForSeconds:fromStartTime:
_dirtyPrecedentCount
_dirtyStrokeRange
_dirtyingInProgress
_dirtyingLock
_dirtyingMutex
_disableImplicitNaming
_disconnectedRowUids
_doFullRefresh
_docLocale
_documentIsClosing
_doesNotNeedFormulaRewriteForImport
_doubleCurlyQuoteCharacterSet
_doubleValue
_downgradedForPrePivot
_dragAndDropDetails
_dragByHandleOnly
_drawBlackAndWhite
_drawPreventAntialias
_dstRegion
_dstUidForSrcUid
_dupContentCache
_dupContentEntryToHeightCache
_dupContentEntryToWidthCache
_durationCount
_durationFormatID
_durationInterval
_dynamicAddOrRemoveColumnElementSize
_dynamicAddOrRemoveRowElementSize
_dynamicBandedFill
_dynamicBandedFillSetting
_dynamicCellFillDelegate
_dynamicColumnAdjustment
_dynamicColumnTabSize
_dynamicContentDelegate
_dynamicFontColor
_dynamicFontColorCellRange
_dynamicFooterHeight
_dynamicHeightResize
_dynamicHidingContent
_dynamicHidingRowsCols
_dynamicHidingText
_dynamicInfoGeometry
_dynamicLayout
_dynamicLayoutParticipants
_dynamicModeUnfairLock
_dynamicOrderedStrokeLayer
_dynamicRemovingText
_dynamicRepResize
_dynamicRepResizeSessionInProgress
_dynamicRepressFrozenHeaderColumns
_dynamicResizeInfo
_dynamicResizingColumnAdjustment
_dynamicResizingColumnRange
_dynamicResizingColumns
_dynamicResizingRowAdjustment
_dynamicResizingRowRange
_dynamicResizingRows
_dynamicRevealingRowsCols
_dynamicRevealingRowsColsDirection
_dynamicRowAdjustment
_dynamicRowTabSize
_dynamicSavedLayoutGeometry
_dynamicSelection
_dynamicStrokeLayer
_dynamicSuppressingConditionalStylesCellID
_dynamicTableNameResize
_dynamicUnorderedStrokeLayer
_dynamicWidthResize
_earlyRefreshRequested
_edgesForOwner
_editingCellIDForInvalidation
_editingReferenceNode
_effectiveSize
_empty
_emptyCellForPreBNC
_emptyFilteredTable
_enumerateAnnotationsAndFormulasWithIndexes:block:
_enumerateGroups:
_enumerateIndexesIntersectingRegion:block:
_enumerateLoadedTiles:
_enumerateTiles:
_errorCount
_errorDictionary
_errorType
_errorValue
_estimatedByteSize
_evalRef
_evaluationContext
_expandedGroupUIDs
_expandedRowColumnUuids
_explicitFlags
_explicitFormatFlags
_exportPermanentHidingState
_exportsCellAnnotations
_exportsCellComments
_filterColons
_filterIndex
_filterOffsets
_filterSet
_filteredIndexes
_finalDstTableUID
_finalTopRowIndex
_findSelectionHighlightLayer
_first
_firstCellID
_firstDateSeen
_firstFragment
_firstIndex
_firstPartitionWidth
_fixedColumnWidthStack
_fixupFormulas
_flags
_flatteningDimension
_floatingCellRangeAtRect:inLayoutSpace:withTransform:
_flushAllInProgress
_flushCellRefSetWithDepTracker:startTime:timeout:
_flushDependentOnlyCellRefSetWithDepTracker:startTime:timeout:
_flushDirtyOwnerIdsWithDepTracker:startTime:timeout:
_flushFormulasToRemoveWithDepTracker:startTime:timeout:
_flushFormulasToReplaceWithDepTracker:startTime:timeout:
_flushFormulasToResetWithDepTracker:startTime:timeout:
_flushInternalCellRefSetWithDepTracker:startTime:timeout:
_flushRangeRefsWithDepTracker:startTime:timeout:
_flushUpdatePrecedentsCellRefSetWithDepTracker:startTime:timeout:
_followsLinksOnFirstTap
_fontInfoCache
_fontSize
_footerColumnSeparatorColumnRange
_footerRowCellStyle
_footerRowSeparatorRowRange
_footerRowTextStyle
_forConditionalStyle
_forDrawing
_forFormulaPlainText
_forRows
_forceEscaping
_forceZoomInOnBeginEditing
_forcingRegion
_formatManager
_formatTableReference
_formats
_formatsAdded
_formattedRichTextStorage
_formula
_formulaCoord
_formulaCoordSpace
_formulaDataList
_formulaErrorDataList
_formulaErrorTableReference
_formulaFixupsShouldStick
_formulaID
_formulaObject
_formulaOwner
_formulaOwnerUID
_formulaOwnerUIDs
_formulaOwnerUid
_formulaPlainText
_formulaSpec
_formulaStore
_formulaStringsForCellRefs
_formulaTableReference
_formulaWasFixable
_formulas
_formulasForOwnerKind
_formulasForUndo
_formulasToRemove
_formulasToReplace
_formulasToReset
_formulasToSet
_foundABadDatalistKey
_foundANumber
_fragPrecedentToEntry
_fragPrecedentsUsedByCellRef
_frame
_fromCoordToReferRect
_fromTableCoordMapperForPasteboard
_fromTableUID
_frozenHeaderColumnsSpace
_frozenHeaderCornerSpace
_frozenHeaderRowsSpace
_fullwidthApostrophe
_fullwidthApostropheEscaped
_functionEndNode
_functionIndex
_functionName
_functionNode
_gathererMap
_gridKind
_gridRange
_grids
_groupAggregateUidUnflatteningMap
_groupBy
_groupBy:
_groupByChange
_groupByChangeDistributor
_groupBySet
_groupByUID
_groupByUid
_groupBys
_groupForTileID:
_groupLevel
_groupNode
_groupNodeUIDInfo
_groupNodeUIDMap
_groupNodesByCellRef
_groupNodesByGroupUid
_groupRoot
_groupUid
_groupValueUid
_groupValues
_groupingColumnChanges
_groupingColumnHeadersChanged
_groupingColumnHeadersFormulaCoord
_groupingColumnOptionsMap
_groupingColumnUID
_groupingColumnUid
_groupingColumns
_groupingColumnsFormulaCoord
_groupingFormatComputed
_groupingFunctor
_groupingType
_groupingsChangingLevel
_hasAnyRichTextCells
_hasCachedIsValidReference
_hasContent
_hasContentIsCached
_hasCustomFormatsToPaste
_hasInterestingKeys
_hasPreserveFlag
_hasReference
_hasRelativeCellRef
_hasRichTextLock
_hash
_hashVal
_hashesToNodeSets
_hauntedOwner
_head
_headerColumnCellStyle
_headerColumnRowCoordinates
_headerColumnSeparatorColumnRange
_headerColumnTextStyle
_headerColumnsFrozen
_headerColumnsRepeat
_headerCoords
_headerNameMgr
_headerNameMgrReadWriteLock
_headerPerTablePrecedentToTableUID
_headerRowCellStyle
_headerRowColumnCoordinates
_headerRowSeparatorRowRange
_headerRowTextStyle
_headerRowsFrozen
_headerRowsRepeat
_headerSideBorderColumnRange
_headersFrozenByDefault
_heightFactor
_hiddenRowsColumnsCache
_hiddenStateExtentUid
_hiddenStateForColumnsOwnerUID
_hiddenStateForRowsOwnerUID
_hiddenStateFormulaOwnerForColumns
_hiddenStates
_hiddenStatesByRowExtentUuid
_hiddenStatesChangedCoord
_hiddenStatesOwner
_hiddenStatesUid
_hideChromeContextMenuButton
_hidingAction
_hidingState
_highlighted
_hintMatricesByCanvas
_hnm
_horizontal
_hostCell
_hostCellCoord
_hostCellRef
_hostColumnUID
_hostInfo
_hostRowUID
_hostTableUID
_hotData
_idOfFirstOccurence
_identifier
_identityTranslator
_ignored
_importDate
_importSource
_importWarningSet
_importWarningSetDataList
_importWarningSetID
_inCalcEngineMode
_inDynamicLayout
_inDynamicLayoutMode
_inInvalidate
_inUseGroupBys
_includesPrefixes
_increment
_index
_indexMap
_indexToCacheEntriesMap
_indexes
_indexesContainedByRegion:
_indexesForRange:startingOnly:
_indexesForRows:
_indexesIntersectingButNotContainingBaseCellRegion:
_indirectAggTypeChangeFormulaCoord
_info
_infoGeometry
_initWithContext:flatteningFromComplexInfo:cellRegion:waitForCalcEngine:flatteningOptions:isSnapshot:
_initWithContext:fromSourceInfo:cellRegion:tableModel:waitForCalcEngine:formulaCoordSpace:
_initialWhitespace
_insertAtUid
_insertCell:atIndex:
_insertOppositeUid
_insertRowsAtIndex:count:
_inset
_interactionType
_interactionTypeFromTheFuture
_interestingCells
_interestingKeys
_internalOwnerID
_internetReachability
_intersectingColumnsIndexSet
_intersectingRowsIndexSet
_intlWhitespaceCharacterSet
_invalidColumnIndex
_invalidFunctionName
_invalidRowIndex
_invalidTableOffset
_invalidateAfterAsyncSort
_invalidateAllChrome
_invalidateAllChromeCaches
_invalidateCollapsed
_invalidateColumnChrome
_invalidateKnobs
_invalidateRowChrome
_invalidateSelection
_invalidateTableName
_invalidateViewGeometry
_invalidatedForEditingCell
_inverseMergeActions
_isAPivotDataModel
_isAPivotTable
_isAborted
_isArray
_isBlank
_isBlankForKeyboardInsertion
_isCategoryRef
_isCircularReference
_isClosing
_isColumnOrderTemporary
_isDynamicallyChangingContent
_isDynamicallyChangingRowOrColumnCount
_isDynamicallyHidingRowsCols
_isDynamicallyRemovingText
_isEmptyPivot
_isEnabled
_isFlattened
_isFormula
_isGrouped
_isHidingGrandTotalColumns
_isHidingGrandTotalRows
_isIdentityMapping
_isInCycle
_isInverse
_isLabelRow
_isLegacyBasedIDSelection
_isNewForBraveNewCell
_isOperator
_isRangeRef
_isRegisteredWithCalcEngine
_isRegisteredWithCalculationEngine
_isRowOrderTemporary
_isSummaryRow
_isUnarchiving
_isValid
_isVariation
_isZoomToEditOperationInProgress
_items
_iteratorRunningCount
_iterators
_key
_keyRange
_keyboardShown
_keys
_labelLevel1CellStyle
_labelLevel1TextStyle
_labelLevel2CellStyle
_labelLevel2TextStyle
_labelLevel3CellStyle
_labelLevel3TextStyle
_labelLevel4CellStyle
_labelLevel4TextStyle
_labelLevel5CellStyle
_labelLevel5TextStyle
_labelRowHeightList
_labelRowIndexes
_labelRowVisibilityList
_lastArchivedAppVersion
_lastCellID
_lastCellRangeAdded
_lastColumnDiffPos
_lastFragment
_lastFullRefreshDate
_lastIndex
_lastKnownViewTractRef
_lastRequestDate
_lastReturnedArgIndex
_lastReturnedIndex
_lastReturnedSubindex
_layoutCacheFlags
_layoutCell
_layoutCellID
_layoutConcurrentQueue
_layoutDirectionIsLeftToRight
_layoutEngine
_layoutInvalidate
_layoutInvalidateChildren
_layoutInvalidateProvider
_layoutInvalidateSize
_layoutInvalidateTableNameVisibility
_layoutIsLTR
_layoutMeasureQueue
_layoutMergeRange
_layoutRange
_layoutResetScaleToFit
_layoutSpaceType
_layoutSpacesInvalidateCoordinates
_layoutSpacesInvalidateCoordinatesAfterRow
_layoutSpacesInvalidateTableOffsets
_layoutUpdateChildren
_layoutValidateQueue
_lazyReferencesAreLoaded
_leftColumnStrokes
_leftSingleQuotationMark
_leftStroke
_leftStrokeOrder
_legacyAnchorCellID
_legacyBaseCellRegion
_legacyCellRegion
_legacyCursorCellID
_legacyDisplayFormatType
_level
_limitedToTableUID
_listItemsSet
_listType
_loadDatalist:forLazyReference:completionBlock:
_loadedIndexesAfterUnarchive
_localOwnerID
_localizedBlankGroupName
_localizedErrorGroupName
_localizedFalseGroupName
_localizedFalseGroupNameForColumn
_localizedStringFromArgumentsTable:
_localizedTrueGroupName
_localizedTrueGroupNameForColumn
_lock
_logToken
_madeChange
_majorStrokeLayer
_majorStrokeLayerToken
_managedNodeArrays
_mapFromViewToBaseColumnInCurrentRow
_mask
_matcher
_maxArguments
_maxColumnIndexIsValidPrivate
_maxColumnIndexPrivate
_maxConcurrentTasks
_maxLevel:
_maxNumberOfColumns
_maxNumberOfPopulatedCells
_maxNumberOfRows
_maxOrder
_maxSize
_maxValue
_maxWidthForChildren
_maximum
_maximumSize
_mayModifyFormulasInCells
_mayModifyValuesReferencedByFormulas
_mergeActions
_mergeCacheLoaded
_mergeChangeDistributor
_mergeFormulaIndexes
_mergeFormulas
_mergeInfo
_mergeList
_mergeOriginMovedInfo
_mergeOriginsMap
_mergeOwner
_mergeOwnerUID
_mergeRange
_mergeRangeCache
_mergeRanges
_mergeRangesContainingFormulas
_mergeRangesForLayoutPass
_mergeRangesRTree
_mergeRegion
_mergeSource
_mergedAtCellIds
_mergedCellRanges
_mergedRects
_mergedStrokes
_metadata
_mightHaveCustomFormats
_mightOverlap
_migratingStylesOnly
_minArguments
_minCursorCellID
_minSize
_minValue
_minimum
_minimumColumnWidths
_minimumRowHeights
_minorStrokeLayer
_minorStrokeLayerToken
_missingGroupingColumn
_missingPostBNCDatalists
_mixedDurationsAndNumbers
_mode
_modelCellID
_modelIteratorData
_modelIteratorHasCell
_month
_multipleChoiceListFormat
_multipleChoiceListFormatDataList
_multipleChoiceListFormatID
_mutableIndexSet
_mutex
_nameFragmentTiles
_nameFragmentToEntry
_namePrefixIndex
_namesUsed
_naturalAlignment
_needToUpgradeCellStorage
_needWPColumn
_needsFilterSetUpdated
_needsFormulaReset
_needsFormulaRewriteForImport
_needsRebuildOfAggFormulas
_needsSummaryUidUpgrade
_needsTileSplittingPrecedent
_needsToBeArchived
_needsToUpdateFilterSetForImport
_needsUidRectUpgrade
_newlyRequestedKeys
_nextAggFormulaCoord
_nextCategoryOwnerUID
_nextCellUID_NoDispatch
_nextConditionalStyleOwnerUID
_nextEmptyTrackedReferencesIndex
_nextHiddenStateForColumnsOwnerUID
_nextIndex
_nextMergeOwnerUID
_nextPencilAnnotationOwnerUID
_nextPrecedentCoord
_nextPrecedentCoordLock
_nextSortRuleReferenceTrackerOwnerUID
_nextTableUID
_noFormatMergingNeeded
_noRuleConditionalStyleSet
_nodeArrays
_nodesToData
_nonDefaultFontName
_nonDefaultFontSize
_nonFormulaCells
_notifyType
_nrm_ownerUID
_numCellsPerTask
_numDirtyCells
_numberAccumulator
_numberCount
_numberFormat
_numberOfCells
_numberOfColumns
_numberOfFooterRows
_numberOfHeaderColumns
_numberOfHeaderRows
_numberOfLayoutColumns
_numberOfLevels:
_numberOfResizableColumns
_numberOfResizableRows
_numberOfRows
_numberTotalValue
_numberValue
_objValue
_offline
_oldCells
_oneToMany
_operation
_operatorChar
_options
_optionsForUidMap
_order
_orderedUuids
_originToRangeMap
_originalDataFormat
_originalFullReferenceString
_originalMap
_originalSrcRegion
_originalVersionCounter
_overrideLayoutHint
_overrideText
_overrideTextAsTyped
_overridesPadding
_ownerIndex
_ownerKind
_ownerMap
_ownerName
_ownerUID
_padding
_paddingInsets
_pageCount
_pageNumber
_paraStyleToHeightCache
_parenNestingLevel
_parentNode
_parseAsBaseTableReference
_parseFormulaFromString:tableInfo:cellID:
_partitionPosition
_partitioner
_partitioningPass
_partitioningPassCache
_pasteFilterHidingAsUserHiding
_pasteInverseCommands
_pasteType
_pastesTile
_payload
_payloadToObjectMap
_pbTableUID
_pencilAnnotationOwner
_pencilAnnotationOwnerUID
_pencilAnnotationStorage
_pendingCellsToRemove
_pendingColumnsOrRowsHidden
_pendingColumnsOrRowsShown
_pendingComputedLock
_pendingViewColumnsOrRowsShown
_perTableInfo
_periodCharacterSet
_pivotAggregateRuleChangeUID
_pivotBodySummaryColumnCellStyle
_pivotBodySummaryRowCellStyle
_pivotCachedIndexesUnfairLock
_pivotColumnUIDs
_pivotDataRefreshTimestamp
_pivotDataRefreshUID
_pivotHeaderColumnSummaryCellStyle
_pivotInfo
_pivotOnlyRowIndexes
_pivotOrder
_pivotOwner
_pivotRowColumnRuleChangeUID
_pivotRowUIDs
_pivotSourceTableName
_pivotSourceTableUID
_pivotTable
_pivotTableUID
_pivotValueTypesByColumn
_populatedColumns
_populatedRows
_popupModel
_position
_preBNCData
_preBNCFormatDataList
_preBNCFormatTableReference
_prePivotRowFilterSet
_precedentLoadingGroup
_precedentLoadingQueue
_predArg0
_predArg1
_predArg2
_predicate
_predicateType
_prefixRange
_prefixStringsInHeaderCells
_preserveFlags
_preserveRectangularRange
_preservingStyles
_presetIDForUpgrade
_presetIndex
_presetNeedsStrongOwnership
_presets
_previousGroupNodeToUpdated
_previousGroupNodeUids
_previousLevel
_processHiddenRowsForExport
_processedByLayoutEngine
_productValue
_propertyMap
_propertyMapToReset
_propertyMapToSet
_propertyMapToTextStyleMap
_pruningCount
_purpose
_qualifier1
_qualifier2
_queriedModel
_queue
_quoteComponents
_quotedComponents
_range
_rangeContext
_rangeDependencies
_rangeEntries
_rangeRef
_rangeWithFunction
_rank
_ratingsDragCellID
_rawString
_rawValueForDecimalCoercion
_rawValueForStringCoercion
_rebuildFormulasDeferredLevel
_receivers
_recentColumnResults
_recentRowResults
_recursivelyDrawingInContext
_ref
_refCount
_refPathSplitter
_refPathWords
_refString
_referenceColorHelper
_referenceIdentifiers
_referenceIsComplete
_referenceSet
_references
_referencesMatchingInputAsPrefix
_regionMovedInfo
_registeredWithCoordinator
_regularExpression
_relativeCellRef
_relativeColumns
_relativeGroupUid
_relativeRows
_remoteDataMap
_remoteDataSyncKey
_removeAggregates:
_removeAnnotationsFromDeleteRange:
_removeCellAtIndex:
_removeReplaceMutex
_removeRowInfo:atTileRowIndex:
_removeRowsAtIndex:count:
_removeRowsAtTileRowIndex:numberOfRows:shiftingContent:
_removeTileForID:
_removedGroupNodeUids
_renderAsTokenType
_reorganizeValues
_repairOrReplaceLock
_repairOrReplaceMap
_repeatHeaderColumnsSpace
_repeatHeaderCornerSpace
_repeatHeaderRowsSpace
_repeatingArguments
_repeatingGroupSize
_repeatingHeaderColumnsEnabled
_repeatingHeaderRowsEnabled
_replaceCellAtIndex:withCell:
_repositionStockPopover
_requestsInFlight
_requiringSingleQuotesCharacterSet
_reservedFragmentPrecedents
_resetGroupingsOnUpgrade
_resetHeaderLabelsAfterSort
_resolvedTextStyleLock
_rest
_retainedExpressions
_returnCellContents
_returnEmptyCells
_returnMergeRanges
_returnOneEmptyCell
_returnOnlyFormulas
_returnWhileEditingNavigates
_reverseOriginsMap
_rewriteSpec
_rewriteSpecBaseToChrome
_rewriteSpecChromeToBase
_rewriteType
_rewrittenFilterSet
_richTextDataList
_richTextParentInfo
_richTextTableReference
_rightColumnStrokes
_rightSingleQuotationMark
_rightSingleQuotationMarkEscaped
_rightStroke
_rightStrokeOrder
_root
_rowColumnInfo
_rowForColumnIndexesWithMerges
_rowGroupLevel
_rowGroupings
_rowHeaderStorage
_rowHeights
_rowHiddenStateExtent
_rowIdList
_rowIndex
_rowInfos
_rowLookupKeysForFormat
_rowMarkIndex
_rowOrColumnUids
_rowOrColumnUuids
_rowOrderChangedCoord
_rowOrderChangedIgnoringRecalcCoord
_rowRegion
_rowRemainDup
_rowStrokeExportCache
_rowToStrokeHeightCache
_rowUIDIndexList
_rowUIDToColumnUIDSetMap
_rowUIDsWithPendingGroupingChanges
_rowUidLookupList
_rowUids
_rowUidsIndexSet
_rowsInvalid
_rowsUserVisible
_rowsVisible
_rules
_runAggrForAggIndex
_runningInBackground
_runningTotalGroupingColumnUid
_saveAsEmbiggenedFormat
_sawGroupingChangeNeedingReset
_scaleToFit
_scaledLayout
_searchFlags
_searchMask
_searchReferenceRange
_searchSelectionBounds
_searchableIDMap
_searchableUIDMap
_secondsToAdd
_segments
_selected
_selectionDragAbortedOnNewSelection
_selectionType
_selectionUsesBezierPath
_selectsCellOnInitialTap
_sem
_serverReachability
_set
_setCell:atCellID:tableUID:calculationEngine:conditionalStyleOwner:ignoreFormula:clearImportWarnings:richTextDOLCHint:
_setCellBordersFlatteningFromComplexInfo:sourceRegion:
_setNeedsDisplay
_setRowInfo:atTileRowIndex:
_shallowCopy
_sharedQueue
_sheetName
_sheetNameUnquoted
_shiftRowsDownAtIndex:count:
_shiftRowsUpAtIndex:count:
_shipVersion
_shouldCleanGraphForConsistencyViolation
_shouldFastPathMeasureFitWidth
_shouldPerformDetectAndRepairConsistencyViolations
_shouldRepositionStockPopover
_shouldSkipNextAsyncSort
_shouldUseWideRows
_shouldWrap
_shouldZoomOutOnEndEditing
_showAsType
_showGeometricAsBase
_showReferenceHighlightsOnFormulaCellSelection
_showsCellEditingToolbar
_showsCellOverflowIndicator
_showsCellWarningIndicator
_showsChromeWhileEditingCell
_showsHideUnhideUI
_showsSelectionKnobsWhileEditingCell
_shuffleMap
_singleCurlyQuoteCharacterSet
_singleQuoteCharacterSet
_singleQuoteOrWhitespaceCharacterSet
_size
_sizeOfText
_skipRepairBadRefsOwnerUID
_sortOrder
_sortRuleReferenceTracker
_sortRuleReferenceTrackerOwnerUID
_sortedColumnUids
_sortedRowUids
_sortingAggregateRuleUid
_sourceCellRange
_sourceColumnCount
_sourceData
_sourceRectOrigin
_space
_spanningColumnDependencies
_spanningColumns
_spanningRowDependencies
_spanningRows
_spareFormatType
_spillMajorStrokeLayer
_spillMinorStrokeLayer
_spillStrokeColumns
_spillStrokeLayer
_spliceRows:atIndex:
_srcRegion
_srcUidForDstUid
_startCellRef
_startColumnIndex
_startRowIndex
_startTime
_startWithFirstItem
_state
_stockDetails
_storage
_storageVersionPreBNC
_storeMap
_straightQuote
_straightQuoteEscaped
_stringCount
_stringForInternalCellRef:
_stringManipulator
_stringTableReference
_stringValue
_strings
_stringsInHeaderCells
_strokeRegion
_strokeRuns
_strokeSidecar
_strokeTypeToLayerMap
_strokeTypeToLayerStackMap
_strokesDefaultVendor
_strokesRWLock
_strongCellStyle
_strongReferences
_strongRefs
_strongTextStyle
_structuredTextImportConfidenceThreshold
_structuredTextImportConfidenceThresholdForCanvas
_structuredTextImportSizeLimit
_style
_styleApplyClearsAll
_styleCount
_styleDataList
_styleNetwork
_styleProviderStack
_styleProvidingSource
_styleTableReference
_stylesheet
_summaryAndLabelRowIndexes
_summaryCellVendor
_summaryColumnGroupUids
_summaryColumnIndexes
_summaryColumnToViewColumn
_summaryDataListCache
_summaryDataStore
_summaryFilteredIndexes
_summaryHiddenByUid
_summaryMap
_summaryModel
_summaryPivotHiddenIndexes
_summaryRow
_summaryRowGroupUids
_summaryRowHeightList
_summaryRowIndexes
_summaryRowToViewRow
_supportsActionMenu
_supportsAddBodyRowAtBottomSiriKitIntent
_supportsAutoResizedTables
_supportsAutofill
_supportsAutomaticNumberKeyboard
_supportsBidiTablesUI
_supportsCategorization
_supportsCellCommentsActivityLines
_supportsComplexReorganizeUI
_supportsContainedTextEditing
_supportsControlCells
_supportsCopySnapshot
_supportsCreateChartFromSelection
_supportsDragDropMoveMode
_supportsDynamicallyHidingRowColumnForDragDrop
_supportsFormulaEditing
_supportsFrozenHeaders
_supportsHiddenCells
_supportsImplicitEditing
_supportsInlineAttachments
_supportsMergedCells
_supportsPivotTables
_supportsPlaceholderGeometry
_supportsQuickFilterUI
_supportsRepeatHeaderRowsOnEachPage
_supportsRowColumnAdderKnob
_supportsRowMovesInPaginatedTables
_supportsStockUI
_supportsTableColumnAutocomplete
_supportsTableTranspose
_supportsiOSContextMenuItemForEvenlyDistributedColumns
_supportsiOSContextMenuItemForEvenlyDistributedRows
_supportsiOSContextMenuItemForWrappedText
_suppressApplyValue
_suppressAutomaticNamedReferenceInvalidation
_suppressIdenticalEndReference
_suspendNotify
_syncReferenceHighlightState
_syntaxError
_tabAtEdgeAddsColumn
_tabAtEdgeAddsRow
_tabWhileEditingNavigates
_table
_tableChrome
_tableDefaultFontHeightForArea
_tableDefaultFontHeightsAreValid
_tableEnvironment
_tableHasStrongOwnership
_tableInfo
_tableIsLTR
_tableModel
_tableName
_tableNameBorderEnabled
_tableNameBounds
_tableNameChangeDistributor
_tableNameEditingStorage
_tableNameEnabled
_tableNameEnabledInNewTables
_tableNameHeight
_tableNameHeightCache
_tableNameHeightValid
_tableNameSelection
_tableNameShapeStyle
_tableNameTextEngineDelegate
_tableNameUnquoted
_tableOffset
_tableProvider
_tableRange
_tableRepIsBeingRemovedFromBackgroundLayout
_tableResolver
_tableRowsBehavior
_tableStyle
_tableStyleIndexes
_tableStylePreset
_tableTranslatorBaseMapForPasteboard
_tableTranslatorViewMapForPasteboard
_tableUID
_tableUIDInfo
_tableUIDMap
_tableWidth
_tablesByTableNameByContainerName
_taggedList
_targetCellRange
_tempSummaryCell
_tempUpgradePresetID
_tempWPColumnCache
_temporaryContext
_temporaryFullwidthApostropheString
_temporaryRightSingleQuoteString
_temporaryStraightQuoteString
_terminateRegionIterator
_terminated
_textFormat
_textFormatID
_textImportRecord
_textMeasurerBundle
_textStyle
_textStyleHandle
_textStyleHandles
_textStyleID
_textStyleReferences
_textStyleToFontHeight
_textStyles
_third
_thresholdCellValues
_tile
_tileColumnBegin
_tileForID:createIfMissing:
_tileForLazyReference:
_tileFromGroupForTileID:
_tileGroups
_tileIDSet
_tileLock
_tileRowBegin
_tileRowIndex
_tileStorage
_tiles
_tilesPerRow
_tilesToConsiderSplitting
_timeout
_timeoutInterval
_timer
_toDirtyCellRefs
_toDirtyDependentsOnlyCellRefs
_toDirtyInternalCellRefs
_toDirtyOwnerIds
_toDirtyRangeRefs
_toInternalOwnerID
_toUpdateDirtyPrecedentCountCellRefs
_tokenAttachment
_tokenizeFormulaStringLiterals
_topBorderRowRange
_topLeftCoord
_topRowStrokes
_topStroke
_totalSecsSinceReferenceDate
_trackedReferences
_trackedRefsLock
_trackedRefsStore
_tract
_tractRef
_trailingEmptyCellCount
_trailingWhitespace
_transaction
_transform
_transformFromCanvas
_transformFromDevice
_transformToCanvas
_transformToDevice
_translationFlags
_translator
_transposedBodyRange
_trimNames
_tspSemaphore
_type
_uidBased
_uidCoords
_uidCoordsPerRunLevel
_uidCoordsPerTuple
_uidRange
_uidRanges
_uidRectRef
_uidTractList
_uids
_uidsCollapsed
_uidsExpanded
_unarchivedCellRecords
_uncompressedCellUIDs
_unfairLock
_uniqueObjectUID
_uniqueValueToRowIndexes
_uniqueValueToRowUids
_uniqueValuesByColumnUid
_uniqueValuesLock
_units
_unusedKeySet
_updateEditorRemainders
_updateQueue
_updatedGroupNodeToPrevious
_updatedGroupNodeUids
_updatedLevel
_upgradeFromTileIDMap:referenceMap:
_upgradeRepairedTiles
_upgradeRowUidsForFormat
_upgrading
_upgradingToSubOwnerUIDs
_useAllSpareFormats
_useBandedFill
_useReverseMap
_useSymbolicNames
_useWholeTableForInsertionDependencies
_usedSymbolicName
_userHidden
_userHiddenIndexes
_userVisible
_usesLimitedAutomaticFormatParsing
_usesLimitedNumberFormatInspector
_usesOnlyFixedCoords
_usesSelectionChromeResizer
_uuid
_uuidSet
_uuidsByCoord
_valid
_validCells
_validateCustomFormatWrapper:
_value
_valueDouble
_valueForCoord
_valueGrid
_valueID
_valueObject
_valueType
_valuesForDimension
_valuesForRunningAggregatePerRunDirectionUid
_variationLock
_variationMap
_verticalAlignment
_viewCellRect
_viewColumnIndexesInCurrentRow
_viewColumnToBaseColumn
_viewColumnToSummaryColumn
_viewColumns
_viewIndex
_viewIndexesMutex
_viewMap
_viewMapVersionCounter
_viewOrderUids
_viewRowToBaseRow
_viewRowToSummaryRow
_viewRows
_viewScale
_viewTractRef
_viewUidMapper
_visible
_visibleFillKnobs
_visibleFrameForOverscrolledChildFrame:
_visibleIndexSet
_volatileDependencies
_warningSetForCoordinate
_warningSetsForUndo
_wasConstructedViaNames
_wasQuoted
_wasRemovedFromDocument
_wasUnarchivedFromAProvidedTable
_weakTrackedRefsStore
_whitespaceAfter
_whitespaceAfterDelimiter
_whitespaceAfterDelimiters
_whitespaceAfterEquals
_whitespaceAfterFunctionName
_whitespaceAfterIdentifier
_whitespaceAfterLeftParen
_whitespaceAfterLet
_whitespaceAndNewlineCharSet
_whitespaceBefore
_whitespaceBeforeFirstChild
_whitespaceCharSet
_whitespaceToBreakAt
_wholeOwnerDependencies
_width
_widthFactor
_widthHeightCache
_widthHeightCollections
_willModifyWasCalled
_wordFragmentsList
_workerQueue
_wpColumn
_writingDirection
_yankRowRange:
_year
_zoomOperationIsInProgress
_zoomToEditOperationIsInProgress
_zoomToEditVisibleCellRange
abbreviatedNumberForAttribute:atLocale:
abortError
abortObject
absoluteCellTractRefForHostCell:
absoluteCellTractRefForHostCell:offTable:
absoluteGroupUid
absoluteRuleIndicesForColumn:inTable:
acceptVisitor:
accessController
accessorModeForArgumentIndex:
accumulate:
accumulateBordersConcurrentlyUsingBlock:accumulateCellsConcurrentlyUsingBlock:
accumulateCellBordersConcurrentlyInRow:atColumns:
accumulateCurrentCellsConcurrently:
accumulateCurrentCellsConcurrentlyAtColumns:usingCellCreationBlock:
accumulateCurrentCellsConcurrentlyInRow:rowInfo:atColumns:usingCellCreationBlock:
accumulateValue:
accumulator
actionByExpandingWithAction:
actionForLayer:forKey:
active
activeFlatteningDimension
activeTokenCharIndex
activeUidTract
activityLineUnscaledEndPointForSearchReference:
actualHeaderColumnRange
addAggNode:
addAggregator:
addAllFormulasCleanObserver:
addAnnotation:withAnchorRange:
addAnnotation:withFormula:atIndex:
addAnnotation:withFormulaObject:atIndex:
addCalculationStateObserver:
addCell:
addCell:andCellID:
addCell:andCellUID:
addCell:atIndex:
addCell:atUidOffset:
addCell:atViewCellCoord:
addCellCoord:referringToCategoryRef:
addCellCoord:referringToTableUID:
addCellCoord:referringToTableUID:forColumnRowUuid:
addCellCoordinate:
addCellDiff:andCellID:
addCellDiff:andCellID:avoidCopy:
addCellDiff:andCellUID:
addCellDiff:andCellUID:avoidCopy:
addCellDiffs:atCellUIDs:
addCellFormat:atSuggestedKey:callWillModify:
addCellRange:
addCellRef:forUuid:
addCellRef:usingCategoryRef:
addCellRefToCheck:
addCellRefToClearError:
addCellRegion:withColumnUIDs:rowUIDs:
addCellState:
addCellUID:
addCellUID:flags:addingMaximumSize:
addCellUIDRanges:
addCellUIDs:
addChangeDescriptor:
addChangeDescriptorWithType:andCellRange:
addChangeDescriptorWithType:andCellRange:andStrokeRange:
addChangesTo:forDemotingValueAtLevel:toLevel:
addChangesTo:forPromotingValueAtLevel:toLevel:
addChangesTo:forRemovingValueAtLevel:
addChangesTo:forReplacingValue:atLevel:
addCharactersInRange:
addCharactersInString:
addChild:
addChild:skipWillModify:
addChild:withKey:
addColumn:
addColumns:
addCommentStorage:atSuggestedKey:callWillModify:
addComponent:
addConditionalStyleSet:atSuggestedKey:callWillModify:
addControlCellSpec:atSuggestedKey:callWillModify:
addCustomFormat:oldKey:fuzzyNameMatching:
addCustomFormatForUpgrade:legacyKey:
addDataField:withValue:
addDependencyRow:
addDependentWithCellID:forOwner:
addEdge:forOwner:
addEntriesFromDictionary:
addFieldValue:
addFinalTexture:forStage:
addFinalizeHandler:
addFittingHeight:forCellID:
addFittingWidth:forCellID:
addFormula:
addFormula:atCellRef:
addFormula:atSuggestedKey:callWillModify:
addFormulaError:atSuggestedKey:callWillModify:
addFormulaForConditionalStyle:atCellID:
addFormulaIndex:
addFormulaObject:atCellRef:forOwnerKind:
addFormulaString:atCellRef:
addGroupByInSortedOrder:
addHeadMergeAction:
addIdentifierComponent:
addImportWarningSet:atSuggestedKey:callWillModify:
addInProgressCalcCellRefs:
addIndex:
addIndexes:
addIndexesInRange:
addIterator:
addMergeActions:
addMultipleChoiceListFormat:atSuggestedKey:callWillModify:
addNestedRewrite:
addObject:
addObject:willModify:
addObjectsFromArray:
addObserver:
addObserver:selector:name:object:
addOperationWithBlock:
addPasteboardCustomFormatsToDocumentAndTableReturningBadIDs
addPasteboardCustomFormatsToDocumentAndUpdateCells
addPendingCellRemovalAt:
addPointer:
addPrecedentWithCellID:forOwner:
addPrecopiedCell:
addPrecopiedCells:andCellUIDs:
addProperties:
addRange:
addRange:height:paddingInsets:isCheckbox:
addReceiver:
addReceiverIfMissing:
addReceiverToGroupBy:
addRect:fromCoord:
addReferencedStylesToSet:
addReferencesFromObject:
addRegion:
addRelativeColumn:
addRelativeColumnRange:
addRelativeRowRange:
addRemoteDataInterest:
addRemoveOfGroupUid:
addRenderable:forStage:
addRewrittenCellAt:
addRichText:atSuggestedKey:callWillModify:
addRowColumnRuleValuePair:valueUid:
addRowRange:
addRowUid:
addRows:
addRule:atGroupLevel:
addRule:atIndex:
addRules:inFilter:
addSmartField:toRange:dolcContext:undoTransaction:
addString:atSuggestedKey:callWillModify:
addStyle:
addStyle:atSuggestedKey:callWillModify:
addStyle:withIdentifier:
addStyle:withParent:identifier:shouldDoDOLC:
addSubOwnerAliasesForUpgrade:
addTSTCanvasReferencesToSet:inRangeContext:withColorHelper:preferringNodesFromStorage:allVisitedNodes:
addTable:
addTableStyleIndex:
addToExcludedTractUids:isRows:
addToExcludedUidsTractColumnUids:
addToExcludedUidsTractRowUids:
addToIncludedUidsTractColumnUid:rowUid:
addToIncludedUidsTractColumnUids:rowUids:
addToIncludedUidsTractColumnUids:rowUids:isRangeRef:preserveRectangularRange:
addTractAtFront:
addUUID:
addUUIDs:
addUidCoord:atRunningLevel:
addUidCoord:tupleForCoord:atRunningLevel:
addUseOfFunctions:atCellRef:
addUuidsFromSet:
addUuidsFromSetReturningAdded:
addUuidsFromVector:
addValue:function:evaluationContext:
addValuesForDimension:
addValuesFromMap:
addValuesFromPropertyMap:
addVariablesMatchingPrefix:forFormulaIndex:toDictionary:symbolTable:
addWarning:atCellRef:
additionalObjectsToCopy
adjustGridColumnForVisibility:isLeft:
adjustGridRowForVisibility:isTop:
adjustIndexesBy:
adjustRect:forScrollingToSelectionPath:forZoom:
adjustRelativeIndexesBy:
adjustViewTractRef:calcEngine:containingCellRef:undoTractList:
adjustedInsetsForTarget:
adoptStylesheet:withMapper:
adoptStylesheet:withMapper:ownerUID:conditionalStyleOwner:
adoptStylesheet:withMapper:supportsInlineAttachments:
advanceToCellID:
affectedConditionalStyleOwnerUID
affectedOwnerUID
affectedOwnerUIDs
affectedRange
affectedRangeForInsertRows
affectedRangeForMoveRows
affectedRangeForRemoveRows
affectsCellBorders
afterMatch
afterReplacingReferencedStylesSetStylesheet:
aggNodeForAggFormulaCoord:
aggNodeForColumnUid:
aggNodeForGroupNode:
aggNodes
aggrIndexLevel
aggregateAtIndex:
aggregateFieldName
aggregateForUidCoord:
aggregateFormulaOwner
aggregateFormulaOwnerUID
aggregateFunction
aggregateIndex
aggregateIndexForAggName:locale:
aggregateIndexForColumnIndex:
aggregateIndexForColumnUid:
aggregateIndexForRowIndex:
aggregateIndexForRowUid:
aggregateIndexForUidCoord:
aggregateIndexLevel
aggregateLabelForCategoryRef:
aggregateRangeRefForCategoryRef:
aggregateRefForType:atLevel:forColumnUid:
aggregateRefOnValue:forColumnUid:forType:atLevel:
aggregateRuleUid
aggregateType
aggregateTypeForAggregateLabel:locale:
aggregateTypeForCategoryRef:
aggregateTypeForColumnUID:atGroupLevel:
aggregates
aggregatesOnLevel:
aggregator
aggregatorForColumn:
aggregators
alignStrokeCoordinatesOfBeginPoint:endPoint:width:
alignedContentFrameForGridRange:
alignedFrame
alignedFrameForGridRange:
alignedMaskStrokeFramePathForTransform:cornerRadius:
alignedOverrideFrameForGridRange:strokeWidthOverride:
alignedRectForLayoutRect:
alignedStrokeFrame
alignedStrokeFrameForRange:
alignedStrokeFrameForTableNameBorder
alignedStrokeFramePathForGridRange:frameType:viewScale:inset:reoriginToZero:clipToVisibleRect:cornerRadius:outMaskPath:
alignedStrokeFramePathForGridRange:transform:inset:reoriginToZero:cornerRadius:
alignedStrokeFramePathForRange:frameType:viewScale:inset:reoriginToZero:clipToVisibleRect:cornerRadius:outMaskPath:
alignedStrokeLineForColumnGridRange:
alignedStrokeLineForRowGridRange:
alignedStrokeLinePathForColumnGridRange:transform:inset:reoriginToZero:cornerRadius:
alignedStrokeLinePathForRowGridRange:transform:inset:reoriginToZero:cornerRadius:
alignmentFrame
allAggsInGroupRootFormulaCoord
allAnnotations
allBodyValuesAsPregArgDataListForColumnIndex:
allCellCoords
allCellDependenciesAsString
allCellsAreClean
allCellsAreCleanNonBlocking
allColumnGroupUIDs
allColumnGroupUids
allColumnUIDsAtGroupLevel:withFilter:
allColumnUids
allCondStyleFormulasForTable:
allFormulaCellsAreClean
allFormulaCoordsInOwner:
allFormulaOwnersAsString
allGroupNodeUids
allGroupRoots
allHeaderCellRefsLimitedToTable:
allLocalizedFunctions
allMergesAsString
allObjects
allOwnerKinds
allOwnersRegistered
allProperties
allQuotes
allRangeDependenciesAsString
allRefResolverOwnerUIDs
allRemoteData
allRequestedKeys
allRichTextStorages
allRowUIDsAtGroupLevel:withFilter:
allRowUids
allSpecifiers
allSymbols
allTrackedReferences
allValidMergesForMergeList:
allValues
allocWithZone:
allowFreeformFormulaText
allowHorizontalAutoresize
allowRegistrationOfAggFormulas
allowSpanningColumnReferenceBodyQualifier
allowTableName
allowUnarchivingObjectClass:
allowWhitespaceInFormulas
allowsBlackDragDropBackground
allowsCaption
allowsFullyFilteredTables
allowsKeyCommandCaching
allowsTitle
alphaComponent
alphanumericCharacterSet
alternateForVersion:
alwaysStartsNewTarget
amendRewriteWithCalcEngine:
anchorCellID
anchorCellUID
anchoredToText
angle
animationController
animationStack
annotationDisplayStringType
annotationType
annotationUUID
annotationWithUUID:
annotations
annotationsContainedByRegion:
annotationsStartingInRange:
anyAggregateTypeForColumnUID:
anyAggregator
anyCellBordersInThisRow
anyCollapsed
anyHeaderNameChangedPrecedentForTableUID:
anyHidden
anyHiddenColumnsInCellRange:
anyHiddenColumnsInCellRange:forAction:
anyHiddenInRange:
anyHiddenInRange:forAction:
anyHiddenIndicesInRange:
anyHiddenRowsInCellRange:
anyHiddenRowsInCellRange:forAction:
anyObject
anyRef
anyRefForRangeForHeaderCell:usePreserveFlags:
anyReference
anyResolver
anyRowsUserHiddenInCellRange:
anyTableForTableName:
anyUserHidden
appendBezierPath:
appendCellDiffMap:
appendCellLists:
appendCellMap:precopied:
appendCellUIDRange:
appendColumnUid:rowUid:
appendExternalTableUIDs:groupByUIDs:
appendFormat:
appendIndexedFormula:
appendNodeArray:
appendRules:
appendString:
appendStroke:inRange:order:
appendToLastComponent:
applicationDidBecomeActive:
applicationWillResignActive:
applyBlockToAllCells:
applyCellDiff:atCellUID:migrationMap:inverseCellDiff:defaultCellStyle:defaultTextStyle:
applyCellDiffMap:migrationHelper:updateProperties:
applyCellMap:outPrunedCellMap:outInverseCellMap:options:stylesContainer:
applyCellValue:atUidCoord:appendTotalForPivotsFlag:
applyCollapseExpandState:outUndoState:
applyColumnTotalWidth:
applyConcurrentCellMapToBaseTable:options:requestInverseMap:requestPruneMap:stylesContainer:migrationHelper:
applyFixedHeight:
applyFixedWidth:
applyFormula:atUidCoord:
applyFormulaResult:
applyFormulaResult:context:hasWarnings:outWriteDidBeginOrEndWithTextCell:propagateCheckboxesAndRatings:
applyGroupingColumns:
applyMap:toRows:
applyMappingToIndexSet:
applyPivotWithColumns:rows:aggregates:flatteningDimension:optionsMap:pivotRowColumnRuleChangeUid:pivotAggregateRuleChangeUid:
applyPopupChoiceIndex:
applyResizeHeightFactor:
applyResizeWidthFactor:
applyRowTotalHeight:
applyStroke:atIndexes:order:applyStroke:atIndexes:order:applyStroke:atIndexes:order:applyStroke:atIndexes:order:applyStroke:atIndexes:order:
applyToCell:
applyWritingDirection:toCell:cellID:
archivedHintClass
archivedLayoutEngineBundle
archivedSelectionClass
archivingCompatibilityVersion
areAnySet
areMapsStale
area
argIndex
argIndex1
argIndex2
argIndex3
argSpecWithType:accessorMode:rangeContext:
argSpecWithType:accessorMode:rangeContext:argumentContext:
argSpecWithType:accessorMode:rangeContext:argumentContext:disallowedTypes:referenceForGeometryOnly:
argSpecWithType:accessorMode:rangeContext:argumentContext:minValue:minInclusive:maxValue:maxInclusive:isInteger:disallowedTypes:disallowDuration:disallowCurrency:modeValues:defaultModeIndex:referenceForGeometryOnly:forceArrayMode:
argSpecWithType:accessorMode:rangeContext:disallowedTypes:disallowDuration:disallowCurrency:
argSpecWithType:accessorMode:rangeContext:minValue:minInclusive:maxValue:maxInclusive:disallowedTypes:disallowDuration:disallowCurrency:
argSpecWithType:accessorMode:rangeContext:modeValues:defaultModeIndex:
argsAscending
argumentIndex
argumentName
argumentSpec
argumentSpecForFunctionIndex:argumentIndex:
argumentSpecForIndex:
arguments
array
arrayByAddingObject:
arrayByAddingObjectsFromArray:
arrayOfChunkRocks
arrayOrListNode:
arraySegmentClass
arrayWithCapacity:
arrayWithObject:
arrayWithObjects:
arrayWithObjects:count:
arrowKeyAtEdgeWhileEditingNavigates
arrowKeysNavigateWhenEditingBeganByTyping
arrowKeysWrap
asBaseFormat
asCellCoordSet
asChooserControlSpec
asCurrencyFormat
asCustomFormatWrapper
asDateTimeFormat
asDurationFormat
asFormulaSpec
asFractionFormat
asLegacyCustomFormat
asMultipleChoiceListFormat
asNumberFormat
asRangeControlSpec
asStepperSliderFormat
asToggleControlSpec
aspectOperationIsInProgress
assertAt:nonCalcEngineException:evaluatingFormula:
assertCollaborationConvergence
assertDirtyPrecedentsCountConsistency
assertIsNotIterating
assertListRows
assertListTilesAndRows
astNodeArrayCopy
asyncPostTextChangedInRange:
attachedToBodyText
attachmentAtAttachmentIndex:outCharIndex:
attachmentAtCharIndex:
attachmentCellLayoutForCellID:optionalCell:
attachmentCellRepForCellID:optionalCell:
attachmentCellStorageToLayoutMap
attachmentIndexRangeForTextRange:
attribute
attributeArrayForKind:
attributeArrayForKind:withCreate:
attributes
auditColumnRowCellCountsReturningResult:hasUndercounts:
auditDatalistDuplicationReturningResult:
auditRowInfoCellCountsReturningResult:
auditTilesForRowOverlapAndExtensionPastTableBounds:result:
auditTilesForRowOverlapAndExtensionPastTableBounds:withDataStore:result:
author
autoCompleteQuotesWithInput:completion:
autoListRecognition
autoListTermination
autoNumberAttachmentError
autofillSelection
autofillSelectionWithSourceCellRange:
autofillSelectionWithSourceCellRange:targetCellRange:
automaticMaxAndMinDurationUnitsForTimeInterval:
autorelease
autosizeFlagsForTextLayout:
autosizedFrameForTextLayout:textSize:
auxRowColumnInfo
availableCurrencyCodes
avgAValue
avgValue
backTabWraps
backgroundFill
backwardCompatiblePrePivot
backwardCompatibleToPrePivot
badgeType
badgeWithType:color:viewScale:frame:
bakeFormulaToValue
bakeFormulas
bakedString
bakedValue
bandedFillIsValid
bandedFillObject
base
baseBottomRightCoord
baseCellCoord
baseCellCoordForCellContainingRichTextStorage:
baseCellCoordForCellUID:
baseCellCoordForChromeCellCoord:
baseCellCoordForViewCellCoord:
baseCellRef
baseCellRefForChromeCellRef:
baseCellRefForViewCellRef:
baseCellRegionForUIDRange:
baseCellRegionForViewCellRect:
baseCellRegionForViewCellRegion:
baseCellUIDRegion
baseColumnGroupUids
baseColumnIndexForChromeColumnIndex:
baseColumnIndexForColumnUID:
baseColumnIndexForFilterRuleInTableModel:
baseColumnIndexForGroupingAtColumnIndex:
baseColumnIndexForGroupingAtRowIndex:
baseColumnIndexForViewColumnIndex:
baseColumnIndexesForChromeColumnIndexes:
baseColumnIndexesForUIDs:
baseColumnIndexesForViewColumnIndexes:
baseColumnIndices
baseColumnIndicesForRulesInTable:
baseColumnUids
baseCoordFromViewCoord:
baseDataListCache
baseDataStore
baseFormat
baseFormatID
baseHeaderColumnsForCell:
baseHeaderRowsForCell:
baseIndex
basePlaces
basePreserveFlags
baseRangeRef
baseRangeRefs
baseRegion
baseRowGroupUids
baseRowIndex
baseRowIndexForChromeRowIndex:
baseRowIndexForRowUID:
baseRowIndexForViewRowIndex:
baseRowIndexesForChromeRowIndexes:
baseRowIndexesForUIDs:
baseRowIndexesForViewRowIndexes:
baseRowUids
baseShuffleMapForViewShuffleMap:
baseStyleForVariation
baseTableModel
baseTableUID
baseTile
baseTileRange
baseToViewPreserveFlagsAreInverted
baseTopLeftCoord
baseTractRef
baseTractRefForChromeTractRef:
baseTractRefForViewTractRef:
baseUseMinusSign
baselineOfLineFragmentAtIndex:
baselineOffset
beforeColumnRowUIDMap
beforeCountValue
beforeRewriteMap
beginBatchingGroupCellDirtying
beginCheckboxCell:
beginDeferringRebuildFormulas
beginDynamicMode:
beginImplicitEditing
beginIteration
beginRatingCell:
beginTableCell:withCellID:cellHasContents:cellIsPrimary:
beginTableChunk:
beginTableLayoutSpace:
beginTableNameForChunk:
beginTableRow:
beginTrackingNameInCell:ofTableUID:addingTrackedReferencesTo:
beginTrackingNamesInTable:
beginTrackingNamesInTable:limitedToRange:
beginTrackingNamesInTableForLegacyNRM:
beginTrackingReference:
beginTrackingReference:calcEngine:
beginTrackingReferenceWithCellRef:
beginTrackingReferenceWithCellRef:calcEngine:
beginTrackingReferenceWithSpanningRef:
beginTrackingReferenceWithSpanningRef:calcEngine:
beginUpgradingFormulasMode
bezierPathForGridRange:transform:inset:reoriginToZero:
bezierPathWithContinuousCornerRoundedRect:cornerRadius:
bezierPathWithLegacyRoundedRect:cornerRadius:
bezierPathWithRect:
bezierPathsForCellRegion:selectionMask:transform:viewScale:inset:clipToVisibleRect:cornerRadius:block:
binaryUnitPrefixForChars::
blackColor
blank
blockUntilCompleted
blockUntilRecalcIsCompleteWithTimeout:
blockingIdentifier
bncStorageBufferExists
bodyBoundingRangeForBaseLevel
bodyCellStyle
bodyColumnCoordinates
bodyColumnStroke
bodyFill
bodyGroupingList
bodyPivotDeEmphasisHorizontalStroke
bodyPivotGroupHorizontalStroke
bodyPivotGroupVerticalStroke
bodyRange
bodyRangeForLowestLevelGroupEnclosingCellAtCellID:
bodyRangeOfTable
bodyRowCoordinates
bodyRowRange
bodyRowStroke
bodyRowStrokeEvenIfNotVisible
bodyRowUidsForCategoryRef:atRowUid:ordered:
bodySideBorderColumnRange
bodyTextStyle
boolCount
boolForKey:
boolTrueCount
boolValue
boolValueForSetProperty:
boolean:argIndex:evaluationContext:
booleanForFunction:argumentIndex:warningReportingContext:
booleanFormat
booleanValue
bootstrapPresetsOfKind:inTheme:alternate:
bootstrapPresetsOfKind:inTheme:alternate:reservedCount:
bottomBorderRowRange
bottomCornerRange
bottomInset
bottomRight
bottomRightCellCoord
bottomRowStrokes
bottomStroke
bottomStrokeLayer
bottomStrokeOrder
boundSymbol
boundingBottomRightCellID
boundingCellRange
boundingModelCellRect
boundingRange
boundingRangeRef
boundingTopLeftCellID
boundingViewCellRect
bounds
boundsForCellSelection:
boundsOfLineFragmentAtIndex:
boundsRectForSelection:columnArray:includeRuby:includePaginatedAttachments:
boxedDefaultValueForProperty:
boxedObjectForProperty:
boxedValueForProperty:
boxedValueForProperty:oldBoxedValue:transformedByTransform:
briefDescription
brightnessComponent
buildASTNodeArray:hostCell:
buildASTNodeArray:hostCell:symbolTable:
bundle
byteSizeForArchiving
bytes
cache
cacheHintID
cacheIsValid
cacheWidth:ofColumn:
cacheWithDataStore:
cacheWithTableInfo:
cachedAlignedFrame
cachedAlignedStrokeFrame
cachedAllAnnotations
cachedAutoSizeFlags
cachedAutosizedFrame
cachedBaseRegion
cachedBaseRegionVersionCounter
cachedCellID
cachedCellRegion
cachedCellRegionVersionCounter
cachedColumnUIDs
cachedCommentHostingForAnnotationUUID:
cachedFrame
cachedImage
cachedImageScreenScale
cachedIndexSetsAreValid
cachedIndexes
cachedIndexesForLabelRows
cachedIndexesForLeadingColumns
cachedIndexesForLeadingRows
cachedIndexesForLeadingSummaryRows
cachedIndexesForSummaryAndLabelRows
cachedIndexesForSummaryColumns
cachedIndexesForSummaryRows
cachedIndexesUnfairLock
cachedIsValidReference
cachedLabelRowIndexesAtLevels
cachedLeadingColumnIndexesAtLevels
cachedLeadingSummaryColumnIndexesAtLevels
cachedLeadingSummaryRowIndexesAtLevels
cachedMaskRect
cachedMaskSpillRange
cachedMaxNumberOfColumns
cachedMaxNumberOfRows
cachedMergeRange
cachedNumberOfColumns
cachedNumberOfFooterOrGrandTotalRows
cachedNumberOfFooterRows
cachedNumberOfHeaderColumns
cachedNumberOfHeaderRows
cachedNumberOfRows
cachedPadding
cachedParagraphAlignment
cachedPivotIndexSetsAreValid
cachedQuoteForSingleSymbol:
cachedQuoteForSymbol:
cachedQuotes
cachedRowUIDs
cachedSegment
cachedSpecifiers
cachedStocks
cachedStrokeFrame
cachedSummaryColumnIndexesAtLevels
cachedTableNameHeight
cachedValue
cachedValueWasFetchedWithRichTextAttributes
cachedVerticalAlignment
calcEngine
calcEngineRegistrationObject
calculateCellRangeForNextPartition:nextPartitionRange:additionalHeightForCaption:availableSizeRemaining:previousHint:
calculatePointFromSearchReference:
calculatePointFromSearchReferenceWithoutValidation:
calculatedTableNameHeight
calculatedTableNameHeightIncludingDynamicResize:
calculationEngine
canAddRules
canAspectRatioLockBeChangedByUser
canBeNested
canBeStoredInAStringValueCell
canBeVendorStorageUid:
canCommentInCaptionOrTitle
canDowngradeForPrePivotFormat
canDrawInParallel
canEditWithCellSubselectionInTable:
canEditWithControlCellSubselectionInTable:
canEditWithStockCellSubselectionInTable:
canEliminateLargestCommonSubexpressionWithSymbolTable:
canFetchKey:
canMixWithNilObjects
canModify
canPartitionForPrinting
canPartitionInline
canQuicklyMeasureParagraphStyle:
canQuicklyMeasureString:textMeasurerBundle:
canRotateChildLayout:
canSimplify
canTranspose
candidateFormatForSliderStepperControlWithIsCurrent:
canonicalCellReferenceForReference
canonicalKeyString
canonicalKeyStringAtLevel:
canonicalUnitForDimension:
canvas
canvasBoundsForCellRange:
canvasFrame
canvasFrameForCellRange:
canvasFrameForGridRange:
canvasPointForLayoutPoint:
canvasPositionForGridColumn:
canvasPositionForGridRow:
canvasRectForLayoutRect:
canvasReferenceController
canvasReferenceProvider
canvasShouldScrollForSelectionPath:
canvasStrokeFrame
canvasStrokeFrameForGridRange:
canvasVisibleRect
capitalizeWithUndoTransaction:locale:
capitalizedString
captionEdgeInsets
captureAnyCategoryRefsForViewRegion:atLevel:asSpanning:
captureCategoryLabelRefsForViewRegion:atLevel:asSpanning:forRows:
captureCategoryRefsForViewRegion:atLevel:asSpanning:
captureCategoryRefsFromIterator:atLevel:asSpanning:
captureDynamicResizeInfo
captureNewMinimumRowHeights:
capturedColumnWidthTotal
capturedInfoPositionForAttachment
capturedRowHeightTotal
capturedTableSize
cascadedStyleWithIdentifier:
caseInsensitiveCompare:
categoriesCellProperties
categorized
categoryAggregateType
categoryAggregatesOwnerUID
categoryColumnIndex
categoryColumnRange
categoryColumnWidth
categoryColumnsCellRange
categoryLevel1BottomStroke
categoryLevel1CellStyle
categoryLevel1InteriorStroke
categoryLevel1LabelSeparatorStroke
categoryLevel1TextStyle
categoryLevel1TopStroke
categoryLevel2BottomStroke
categoryLevel2CellStyle
categoryLevel2InteriorStroke
categoryLevel2LabelSeparatorStroke
categoryLevel2TextStyle
categoryLevel2TopStroke
categoryLevel3BottomStroke
categoryLevel3CellStyle
categoryLevel3InteriorStroke
categoryLevel3LabelSeparatorStroke
categoryLevel3TextStyle
categoryLevel3TopStroke
categoryLevel4BottomStroke
categoryLevel4CellStyle
categoryLevel4InteriorStroke
categoryLevel4LabelSeparatorStroke
categoryLevel4TextStyle
categoryLevel4TopStroke
categoryLevel5BottomStroke
categoryLevel5CellStyle
categoryLevel5InteriorStroke
categoryLevel5LabelSeparatorStroke
categoryLevel5TextStyle
categoryLevel5TopStroke
categoryOrder
categoryOwner
categoryOwnerUID
categoryRef
categoryRefForAggregateRangeRef:
categoryRefForUidCoord:outShowAsType:
categoryRefReferringToCellRef:
categoryRefTableUID
categoryRefsForSpanningCategoryRef:
cell
cellAfterApplyDiff:toCell:atCellUID:migrationMap:inverseCellDiff:concurrentStylesheet:defaultCellStyle:defaultTextStyle:
cellAtBaseCellCoord:
cellAtCellID:
cellAtCellUID:
cellAtGroupLevel:columnUID:
cellAtIndex:
cellBorder
cellBorderAtCellID:
cellBorderAtColumn:
cellBorderForResettingAllStrokes
cellByApplyingCellDiff:toTable:andUpdateInverse:optionalConcurrentStylesheet:
cellContainsAFormula:
cellContents
cellCoordinatesNeedingExcelImportForTable:
cellCoordinatesSet
cellCount
cellCountAtIndex:
cellCountOfColumnAtIndex:
cellCountOfRowAtIndex:
cellCountValid
cellData
cellDependMemoryUseEstimate
cellDependencies
cellDependenciesAsStringForOwner:
cellDependentsOfCell:
cellDiff
cellDiffArray
cellDiffClearingAllWarningsWithContext:
cellDiffClearingWarningsWithContext:
cellDiffForCell:applyingGroupCellValue:groupingType:toBeInGroup:
cellDiffMapByIntersectingUIDs:inRows:
cellDiffMapByRemovingColumns:
cellDiffMapByRemovingRows:
cellDiffMapWithContext:
cellDiffProperties
cellDragController
cellEditingMaskLayers
cellEditorsCanScrollToNonLocalTableSelection
cellExistsAtBaseCellCoord:
cellExistsAtCellCoord:
cellExistsAtCellID:
cellFill
cellFillComparedToDefault:suppressCS:isDefault:
cellFlags
cellFormatForKey:
cellFormatKind
cellFormatKindForValueType:
cellFormatKindIsExpected:
cellHasCommentStorage
cellHasConditionalStyle
cellHasCustomFormat
cellHasFormula
cellHasPrecedents:
cellID
cellIDAboveCellID:
cellIDAtIndex:
cellIDBasedCellMapByTableInfo:
cellIDBelowCellID:
cellIDForCellContainingRichTextStorage:
cellIDForCellUID:
cellIDIsLegal:
cellIDLeftOfCellID:
cellIDRightOfCellID:
cellIDToWPColumnCache
cellIndexAtOrAfterIndex:
cellIndexAtOrBeforeIndex:
cellIsEmpty
cellIteratorWithFlags:searchFlags:
cellIteratorWithRange:flags:searchFlags:
cellIteratorWithRegion:flags:searchFlags:
cellIteratorWithRegion:flags:searchFlags:clampingRange:
cellListWithContext:cellUIDRange:repeatCellVectorPattern:patternDirection:
cellLists
cellMapForRegion:uidBased:suppressMergeContent:useCategoriesWildcards:
cellMapForRepairingPasteboardCustomFormats:
cellMapForWildcardCells
cellMapMaskedByUIDs:inRows:
cellMapWithContext:
cellModifiedInCurrentRecalcCycle:
cellPropsRowHeight
cellRange
cellRangeAtIndex:
cellRangeCount
cellRangeForAnnotation:
cellRangeForTableArea:
cellRangeForTableArea:givenTableSize:numberOfHeaderRows:numberOfFooterRows:numberOfHeaderColumns:
cellRangeForUIDRange:
cellRangeName:namingContext:
cellRangeNameFromChromeRangeRef:namingContext:
cellRangeVisibleRect
cellRanges
cellRefForHostCoord:
cellRefForIndex:
cellReference
cellReferenceForIndex:
cellRefsForAggNodesAtGroup:
cellRefsForCategoryRef:atRowUid:
cellRefsForCategoryRef:atRowUid:ordered:
cellRegion
cellRegionForClearedMergeStrokes
cellRegionForTable:
cellRegionForTableStyleArea:
cellRegionForUIDRange:
cellRegionFromCellUIDList:
cellRegionFromCellUIDList:includeLabelsWithSummaries:didAddLabels:
cellRegionFromCellUIDLookupList:
cellRegionFromCellUIDLookupList:includeLabelsWithSummaries:didAddLabels:
cellRegionFromCellUIDRegion:
cellRegionFromTable:
cellRegionWithConditionalStyleMatchingCell:
cellRegionWithTableInfo:
cellRegionWithTableInfo:passingTest:
cellSelection
cellSelectionNameForContextAndActionMenus
cellSpec
cellSpecForAggregateType:forColumnUID:atGroupLevel:
cellSpecFromTSKFormat:
cellSpecReplacingFormulaObject:locale:
cellStatesToLayout
cellStorageRefAtCellID:
cellStorageRefAtColumnIndex:tileRowIndex:
cellStorageRefAtIndex:
cellStyle
cellStyleAtCellID:
cellStyleAtCellID:isDefault:
cellStyleAtCellUID:isDefault:
cellStyleAtIndex:
cellStyleAtModelCellCoord:isDefault:
cellStyleForCellWithEmptyStyleAtBaseCellCoord:isDefault:
cellStyleForTableStyleArea:
cellStyleHandleForKey:
cellStyleHandles
cellStyleID
cellStyleOfColumnAtIndex:
cellStyleOfColumnAtIndex:isDefault:
cellStyleOfRowAtIndex:
cellStyleOfRowAtIndex:isDefault:
cellStyles
cellTractRefForUIDRectRef:
cellTractRefWithUidTractList:onTable:preserveFlags:rewriteContext:
cellUIDForCellID:
cellUIDForCellID:useCategoriesWildcards:
cellUIDForSummaryCellCoord:
cellUIDList
cellUIDListFromCellRegion:
cellUIDListFromCellRegion:useCategoriesWildcards:
cellUIDListFromRange:
cellUIDMap
cellUIDRange
cellUIDRangeForCellRange:
cellUIDRangeFromMergeFormula:calcEngine:
cellUIDRanges
cellUIDRegion
cellUIDRegionFromCellRegion:
cellUIDRegionFromRegion:inTable:
cellUIDRegionFromRegion:inTableModel:
cellUIDforBaseCellCoord:
cellUIDs
cellValue
cellValueAtBaseCellCoord:
cellValueDescription
cellValueFromCell:atBaseCellCoord:
cellValueFromCell:atCellID:
cellValueFromCell:locale:
cellValueType
cellValueTypeAtBaseCellCoord:
cellValueTypeAtCellID:
cellValueTypeAtCellUID:
cellValueTypeAtSummaryModelCoord:
cellValueTypeDescription
cellValueTypeIsExpected:
cellValueViewStringAtCellID:optionalCell:
cellValueWithArchive:locale:
cellValueWithLocale:
cellWillChangeDistributor
cellWraps
cellsInACycleInOwner:
cellsModifiedInCurrentRecalcCycle
cellsPendingWrite
cellsPerSubRegion
cellsToInvalidateAfterRecalc
cellsToInvalidateNonoverflowingAfterRecalc
cfLocale
changeCell:atCellUID:toBeInGroup:
changeCellDiffMapToMoveRows:toGroup:templateRowUID:
changeDescriptor
changeDescriptorWithAnnotationsRemovedForMerge:
changeDescriptorWithType:
changeDescriptorWithType:cellID:cellRange:
changeDescriptorWithType:cellID:cellRange:strokeRange:
changeDescriptorWithType:cellID:cellRegion:strokeRegion:
changeDescriptorWithType:cellID:strokeRange:
changeDescriptorWithType:cellRange:
changeDescriptorWithType:cellRange:strokeRange:
changeDescriptorWithType:cellRegion:
changeDescriptorWithType:cellRegion:beforeCount:afterCount:
changeDescriptorWithType:cellRegion:strokeRegion:
changeDescriptorWithType:cellRegion:strokeRegion:beforeCount:afterCount:
changeDescriptorWithType:referenceIdentifiers:
changeDescriptorWithType:shuffleMapping:
changeDescriptorWithType:strokeRange:
changeDescriptorWithType:strokeRegion:
changeDescriptors
changeDescriptorsForReorganizingFromRowUids:toRowUids:
changeDescriptorsForTable:
changeForMovingBaseRows:toDestGroup:
changeForSettingGroupingColumnList:
changeForUpdatingGroupValueOnNode:toValue:
changeGroupingTypeForGroupLevel:toType:
changeGroupingTypeForRuleIndex:toType:
changeNotifier
changeType
changedConditionForCellID:
changesWithPageCount
changesWithPageNumber
changingCellFillAtCellID:
characterAtIndex:
characterCount
characterFillAtCellID:optionalCell:
characterIsMember:
characterSetWithCharactersInString:
characterSetWithRange:
characterStyleAtCharIndex:effectiveRange:
characterStyleAttributeCount
checkCell:searchFlags:
checkConditionForCellID:withConditionalStyle:withIndex:
checkForFormulaCoordUpgrade
checkMapsAndAssert:
checkState
checkStateForArchiving:
checkboxFormat
checkoutNumberFormatter
checkoutScientificNumberFormatter
childEnumeratorForUserFlags:
childEnumeratorForUserSearch
childGroupUids
childGroupUidsForGroupUids:
childInfos
childInfosForChildLayouts
childRepIsMasterDrawable:
childRepIsOnDocSetupCanvas:
children
chooseIndex
chooseUniqueNameInContainer:forPaste:
chooseUniqueNameInContainer:forPaste:needsNewName:
chooseUniqueNameInContainer:forPaste:needsNewName:avoidNames:
chromeCellCoordForBaseCellCoord:
chromeCellCoordForViewCellCoord:
chromeCellRefForBaseCellRef:
chromeCellRefForViewCellRef:
chromeColumnIndexForBaseColumnIndex:
chromeColumnIndexForViewColumnIndex:
chromeColumnIndexesForViewColumnIndexes:
chromeCoordsAreViewCoords
chromeLabelForCellID:
chromeLabelForColumn:
chromeLabelForRow:
chromeNameForBaseRangeRef:namingContext:
chromeRangeRef
chromeRangeRefForViewRangeRef:
chromeRowIndexForBaseRowIndex:
chromeRowIndexForViewRowIndex:
chromeRowIndexesForViewRowIndexes:
chromeTractRef
chromeTractRefForBaseTractRef:
chromeTractRefForViewTractRef:
chunkCountForTextureDeliveryStyle:animationFilter:
circularReferenceError
clampRowHeightAccountingForMaximumPartitionSize:rowIndex:rowHeight:
clampingRect
class
classForUnarchiver:
cleanCellDependencyRows
clear
clearAggFormulas:
clearAggFormulas:inOwner:
clearAggNode:forFormulaCoord:
clearAllCachedRowIndexes
clearAllFiltered
clearAllGroupNodes
clearAllMergeRanges
clearAllPivotHidden
clearAllPivotHiddenAndInvalidate:
clearAndGenerateCategoryStylesConnectedToStylesheet:
clearAndGeneratePivotStylesConnectedToStylesheet:
clearBackPointerToParentInfoIfNeeded:
clearColor
clearCommentHostingMapForCommentStorage:
clearDataListIDs
clearDisallowHeaderIndexingForTableUID:
clearDynamicStrokesForCellRange:
clearErrorForCell:
clearErrorForCells:
clearErrors
clearFormatOfType:
clearFormulaAtIndex:
clearFormulaAtIndex:formulaReplacer:
clearFromGroupByUID
clearFromTableUID
clearInProgressCalcCellRefs
clearInvalidIndexes
clearLegacyGlobalIDs
clearMerges
clearMissingCombinations
clearModelHeightWidthCacheForCellRange:
clearNoncurrentImplicitFormats
clearPartitioner
clearPreviousLocaleIdentifier
clearRecalculationTimer
clearRenderingCaches
clearRowIndexesCache
clearRowsAtTileRowIndex:numberOfRows:
clearSpareFormatOfType:
clearStrokes
clearTableIndexes
clearTextAtCellCoord:tableUID:
clearValue
clearValueAtColumn:row:
clearValueAtCoord:
clearValueForFormulaCoord:
clearedMajorStrokeLayer
clearedMinorStrokeLayer
clearedStrokeLayer
clipStrokes
closeTransaction:
coarserGroupingTypeFor:
coarserGroupingTypeFor:groupTypesToAvoid:
code
coefficientAtIndex:
coefficientStandardErrorAtIndex:
coerceTextCellToBestNumberFormatUsingLimitedParsing:
coerceToBaseFormat:
coldSpecifierArrayForYear:
coldSpecifierSet
coldSpecifiers
coldSpecifiersForYear:
collaboratorCursorForSelectionPath:
collapseOutColumnIndexes:
collapseOutRowIndexes:
collapseSummaryGroupUIDs:
collapseSummaryRowGroupUIDs:
collapsedColumnGroupUids
collapsedGroupUids
collapsedRowGroupUids
collectIndexes:forRange:
collectPropertyKeysIntoIndexSet:
color
colorWithAlphaComponent:
colorWithHue:saturation:brightness:alpha:
colorWithRed:green:blue:alpha:
colors
columnAggregateGroupSize
columnAggregateListCopy
columnAggregateUid
columnAggregateUidList
columnAggregateUuids
columnAggregates
columnAggregatesOnColumnUids:
columnCellCountsOfRowsInRange:
columnCount
columnDisplayNameForCategoryLevel:
columnGroupLevel
columnGroupLevelAtColumn:outAggregateIndex:
columnGroupLevelForColumnUID:
columnGroupLevelForHeaderRow:
columnGroupUidForColumnUid:outAggregateIndex:
columnHeaderStorage
columnHiddenStateExtent
columnIndex
columnIndexForColumnUID:
columnIndexForGroupingColumn:
columnIndexForUUIDBytes:
columnIndexForUid:
columnIndexForUuid:
columnIndexesForUIDs:
columnIndexesInRow
columnLayoutWidthForBodyWidth:insets:
columnNameForAggregateIndex:allowDuplicateNames:
columnNameForCategoryLevel:shortForm:
columnNameForCategoryRef:
columnNameForCellCoord:restrictToBodyRange:translator:cellRangeContainingName:
columnNameForCellID:restrictToBodyRange:
columnNameForColumnIndex:
columnNameForColumnIndex:withFallbackFormat:
columnNameForColumnIndex:withFallbackFormat:translator:
columnOrRowIndex
columnOrRowIndexForFilterCoordinate:
columnOrderChangedPrecedent
columnOrderReversed
columnRangeForUIDs:
columnRegion
columnRowUID
columnStrokeExportCache
columnToStrokeWidthCache
columnToWidthMapFromCollectionArray:
columnUID
columnUIDForBaseColumnIndex:
columnUIDForColumnIndex:
columnUIDForViewColumnIndex:
columnUIDs
columnUIDsForColumnIndexes:
columnUIDsForColumnRange:
columnUid
columnUids
columnUidsForColumnGroupUid:
columnUuids
columnWidths
columnsAreLeftToRight
columnsInvalid
columnsVisible
combineNonOverlappingCellRanges:addingOverlappingCellRanges:
combinedCanonicalKeyStringAsUtf8
commandForReplaceAllWithProvider:selectionModelTranslatorProvider:outActivityBehavior:
commandForSettingTableDirection:icc:
commentHostingAtBaseCellCoord:
commentHostingAtBaseCellCoord:forCommentStorage:
commentHostingAtBaseCellCoord:forCommentStorage:updateCommentMaps:
commentHostingAtCellID:
commentHostingAtCellID:forCommentStorage:
commentHostingAtCellID:forCommentStorage:updateCommentMaps:
commentHostingMap
commentStorage
commentStorageAtCellID:
commentStorageForKey:
commentStorageID
commentStorageMap
commentStorageTableReference
commentWillBeAddedToDocumentRoot
commitPivotChanges
commitRewritingTransaction
commonInit
compactDescriptionForAggregateIndex:locale:
compactDescriptionForAggregateIndex:useShortLabel:allowDuplicateNames:locale:
compare:
compare:options:
compare:options:range:locale:
compare:withContext:
compareFirstLastIndices:
compareRange:otherStorage:otherRange:options:objectComparisonBlock:
compareToCellValue:
compatibilityCheckerForData:associatedHint:
completionText
component:fromDate:
componentAtIndex:
componentCount
componentReadVersion
componentRootObject
components
components:fromDate:
components:fromDate:toDate:options:
componentsJoinedByString:
componentsSeparatedByCharactersInSet:
componentsSeparatedByString:
compress
compressToZeroBased
compressUIDIndexListFrom:withUIDCount:to:
compressedColumnIndexes
compressedColumnUIDs
compressedRowIndexes
compressedRowUIDs
compressedSize
computeDefaultFontHeightForTableStyleArea:
computeDefaultRowHeight
computeInfoGeometryFromPureLayoutGeometry:
computeLayoutGeometry
computeValidCount
computedGroupValueTuple
concurrentCellMapForRegion:suppressMergeContent:gatherCellBorders:
concurrentCellMapForTable:
concurrentCellMapWithContext:cellUIDRange:repeatCellVectorPattern:patternDirection:uidBased:affectsCellBorders:
condStyleOwnerUID
conditionalFormatDataForValue:outKey:
conditionalStyle
conditionalStyleAppliedRule
conditionalStyleFormulaOwner
conditionalStyleID
conditionalStyleOwnerUID
conditionalStyleRuleWithRule:
conditionalStyleSet
conditionalStyleSetAtBaseCellCoord:
conditionalStyleSetAtCellID:
conditionalStyleSetForKey:
conditionalStyleSetTableReference
conditionalStylesForUndo
confidence
confirmRefCountsReturningResult:
confirmTermination
conformsToProtocol:
const_astNodeArray
containedTextEditingLayout
containedTextEditorSpills
containedTextEditorWraps
containerInfo
containerNameForTable:
containsAnnotation:
containsAnyContentInRange:
containsAnyPropertiesInSet:
containsAnyPropertyInProperties:
containsAnyRowUidInRowUidSet:
containsAnyRulesInBaseColumns:
containsAnyRulesInColumnUIDList:
containsBodyColumns
containsBodyRows
containsCell:
containsCellBorderChanges
containsCellChanges
containsCellRange:
containsCellRegion:
containsCellStyleOrCellDiffCellStyleProperties
containsCellStyleProperties
containsCellsInCategoryColumn
containsCellsInCategoryColumnsOrRows
containsCellsInCategoryGroupingColumn
containsCellsInLabelRow
containsCellsInSummaryOrLabelRows
containsCellsInSummaryRow
containsColdSpecifiers
containsColons
containsControlCellSpecs
containsError:evaluationContext:
containsFilterRulesInUIDForm
containsFooterRows
containsForms
containsFormulas
containsFromCoord:
containsGridRange:
containsGroupValueCells
containsHeaderColumns
containsHeaderRows
containsImportWarnings
containsIndex:
containsIndexes:
containsIndexesInRange:
containsInvalidRef
containsKey:
containsMatchInString:
containsMergeChanges
containsModelCellCoord:
containsModelCellRect:
containsName:
containsOnlyCellsInCategoryColumn
containsOnlyCellsInSummaryAndLabelRows
containsOnlyCellsInSummaryRow
containsOnlyGroupValueCells
containsOnlySpecialCategoryCells
containsOnlySpecialCategoryOrPivotCells
containsOnlySpecialPivotCells
containsParagraphStyleProperties
containsProperty:
containsRect:fromCoord:
containsSelection:
containsSingleCellOrMergeInTable:
containsSpecifier:
containsSpecifiersFromSet:
containsSpecifiersWithSymbol:
containsStyle:
containsStyleNetworkIndex:
containsSuppressCustomFormatHandlingProperty
containsTextStyleProperties
containsUidReferences
containsUuid:
containsValueForAllSpecifiersInSet:
containsValueForSpecifier:
contentFrameForGridRange:
contentFrameForRange:
contentReadingThreads
contentSizeForCellRange:skipDynamicSwap:
contentWidthForCellRange:skipDynamicSwap:
contentWidthForCellRange:validationBundle:
contentWritingDirection
contentsAreRightToLeft
contentsRectForCellRangeAcrossSpaces:contentsCenterInfo:canvasFrame:contentsRect:
contentsScale
contextForTransientObjects
contextSheetName
contextTableResolver
continueAnnotationSearch:
controlCellSelection
controlCellSpecForKey:
controlCellSpecID
controlCellSpecTableReference
controlCellUIAlwaysVisible
controlCharacterSet
controlFormat
convert:fromUnit:toUnit:
convertCategoryRefToRelativeAncestorUid:atRowUid:inHostTable:
convertCellUIDLookupList:toCellRangeVector:prunedSummaryCellUIDs:
convertFormulasToUidForm:atCellID:preserveHostCell:
convertFromBaseToChromeForCategorizedTableMove:containingCell:
convertFromChromeToBaseForCategorizedTableMove:containingCell:
convertToInverseCellMap
convertToRelativeAncestorUid:atRowUid:
convertToRelativeRefIfPossible
convertToUuidBasedCellMapUsingTableInfo:pruneCategorizedCells:
convertToWideOffsets
convertUIDRefToViewTractRef
convertUnscaledToBoundsRect:
convertViewTractRefToUID
coordAtColumnOffset:rowOffset:
coordMapper
coordMapperForTableUID:cppCalcEngine:
coordRangesForInsertRemove
coordinate
coordinateMapper
coordinatesForTableInfo:passingTest:
coordinator
copy
copyAllFormatsToCell:
copyAndReplaceGroupUIDs:
copyByClearingHostCell
copyByClearingUids:containingTableUID:
copyByConvertingBaseToChrome:inOwner:inCellCoordinate:
copyByConvertingChromeToBase:inOwner:inCellCoordinate:
copyByConvertingColonToColonTract:
copyByConvertingColonTractToColon:breakUpIntoRefs:
copyByConvertingToRelativeAncestorsWithRewriteContext:
copyByForceSettingOwnerUIDs:calcEngine:
copyByFreezingRefs:containingCell:
copyByMakingAllCategoryRefsIndirect:
copyByOffsettingRelativeReferences:
copyByOffsettingRelativeReferences:oldContainingCell:newContainingTable:offset:
copyByOffsettingRelativeReferencesWithOffset:
copyByPruningAgainstTable:behavior:usingBlock:
copyByRemappingEntityIDs:
copyByRemappingHostCellAgnosticOwnerUIDs:rewriteContext:outError:
copyByRemappingHostCellAgnosticOwnerUIDsWithMap:rewriteContext:error:
copyByRemappingOwnerUIDs:rewriteContext:outBadRefFound:
copyByRemappingOwnerUIDsWithMap:rewriteContext:error:
copyByRemappingUids:rowMap:ownerMap:clearIfMissing:
copyByRemovingNumberToDateCoercion:outFormulaResult:outDidModifyFormula:
copyByRepairingBadReferences:clearUidHistory:
copyByReparenting:groupByUID:rewriteContext:
copyByResolvingIdentifiers:hostTable:baseHostCell:forceReferenceInterpretation:symbolTable:oldToNewNodeMap:
copyByResolvingRelativeAncestorsWithRewriteContext:
copyByRewritingFilterRulesToGeometricFormWithContext:withTableInfo:
copyByRewritingFilterRulesToUidFormWithContext:withTableInfo:
copyByRewritingFilterRulesWithContext:fromTableModel:toTableModel:
copyByRewritingForExcelExport:
copyByRewritingForExcelImport:outFormulaResult:outDidModifyFormula:outFormulaReplacedForExcelCompatWarning:functionNameReplacedForExcelCompat:formulaFormatFromCell:
copyByRewritingForSageExport:targetDocumentSupportsCrossTableReferences:outshouldBakeWholeFormula:outFeaturesUsed:
copyByRewritingForSageImport:containingCell:
copyByRewritingForTranspose:calcEngine:containingCell:outTransposeWarning:
copyByRewritingFromTableModel:toTableModel:
copyByRewritingGroupUid:groupByUID:
copyByRewritingNumberToDurationForSageImport:durationUnitLargest:
copyByRewritingReferencesToGeometricForm:
copyByRewritingReferencesToUidForm:
copyByRewritingToGeometricFormWithTableInfo:containsBadRef:
copyByRewritingToUidFormWithTableInfo:
copyByRewritingWithContext:rewriteBlock:
copyByRewritingWithSpec:calcEngine:containingCell:
copyByRewritingWithSpec:inOwner:inCellCoordinate:
copyBySettingHostTableUID:hostColumnUID:hostRowUID:
copyBySettingTranslationFlags:
copyByThawingRefs:containingCell:
copyByUpdatingHostCellRef:
copyByUpdatingLinkedTable:hostCell:
copyByUpdatingLinkedTable:outfoundLinkedRef:
copyByUpgradingToLinkedRefAtHostCellRef:
copyByUpgradingToLinkedRefForTable:hostCell:
copyCollapsedStateToUpdatedGroupUids:dimension:
copyCollapsedStateToUpdatedRowGroupUids:
copyForApplyingNoContent
copyForApplyingNoContentWithSuppressApplyValue:
copyForArchiving
copyForNotApplyingValue
copyFromHiddenStates:forRange:withContext:isWholeTableCopy:
copyIntoContext:
copyIntoContext:bakeModes:
copyIntoContext:bakeModes:children:
copyJustStrokesToCell:
copyJustStyleAndStrokesToCell:
copyJustValueToCell:
copyOnWriteUIDMapper
copyPersistedWithContext:
copyPivotDetailDataFromSourceModel:inSourceRegion:columnMapping:rowMapping:
copyStorageUnpersisted:
copyToCell:
copyToGeometricFormForHiddenRowsWithTableInfo:containsBadRef:
copyToGeometricFormWithRewriteContext:
copyToUidFormForConditionalStylesWithTableInfo:containingCell:preserveHostCell:
copyToUidFormForHiddenRowsWithTableInfo:
copyToUidFormForTableInfo:inCellCoordinate:
copyToUidFormForTableInfo:inCellCoordinate:preserveHostCell:
copyToUidFormWithRewriteContext:
copyValueAndFormatToCell:
copyWithContext:
copyWithContext:tableInfo:
copyWithOwner:
copyWithZone:
copyWithZone:context:
copyWithZone:copyingCells:
cornersCanDragResize
cost
count
countA
countAValue
countByEnumeratingWithState:objects:count:
countForOwnerKind:
countOfIndexesInRange:
countOfValuesForCategoryRef:
countRows
countRowsValue
countValue
cppCalcEngine
createAggregatorOnColumn:
createAggregatorsIfMissingAndAssert:
createAuxRowColumnInfoForMove
createDetailTableForPivotTableCell:
createFormulaForUIDRange:tableUID:
createFormulaForUIDTract:tableUID:
createFormulaObjectForRange:atIndex:tableUID:
createFragmentEntryForString:createIfMissingUsingPrecedentCoord:
createFromVector:functionSpec:argumentIndex:evaluationContext:ignoreError:ignoreDuplicates:
createHarmonizedDecimalFormatterOfStyle:
createLargeDefaultTables
createNameComponentWithChromeRangeRef:rowOrColumnName:isSticky:namingContext:
createPivotOwner
createStringWithNumber:
createStringWithValue:
createStylesInStylesheet:presetID:colors:alternate:
createTgtMergeMapFromPbMergeMap:andTgtRegion:andTgtBodyRange:
createTgtRegionByIntersectingPbRegion:tgtTableInfo:tgtRegion:
createTgtRegionFromPbRegion:
creationDate
crossTableRef
crossTableRefParam1
crossTableRefParam2
curCellID
curRow
curRowIndex
curTileRange
curatedTableStylePropertySetForCrossDocumentPasteMasterComparison
currencyCode
currencyCodeForCurrencySymbol:
currencyCodeForUnit:
currencyCodeForValue:
currencyCodeIndex
currencyDecimalValue
currencyDoubleValue
currencyFormat
currencyFormatID
currencyIsMostRecentlySet
currencySymbolForCurrencyCode:
currentAnimation
currentCell
currentCellUID
currentDate
currentFormat
currentFormatIsExplicit
currentFormatIsExplicitForCalcEngine
currentFormatNegativeStyle
currentFormatUsesAccountingStyle
currentLocale
currentRules
currentScreenScale
currentState
currentTableIdRemapper
currentThread
currentTimeZoneCalendar
currentTransaction
cursorCellID
cursorCellIDs
cursorCellUID
customFormat
customFormatData
customFormatDataForValue:
customFormatForBlankGroup
customFormatForErrorGroup
customFormatForKey:
customFormatID
customFormatList
customFormatString
customOrderedStrokeLayer
customStrokeLayer
customStrokeProvider
customUnorderedStrokeLayer
data
dataFromURL:context:
dataIsReplaceable
dataKind
dataKindStatus
dataList
dataList1
dataListCache
dataStore
dataStoreIterator
dataType
dataUsingEncoding:
dataWithBytes:length:
dataWithContentsOfURL:
date
date:argIndex:evaluationContext:
dateAsTimeInterval
dateAtIndex:
dateByAddingComponents:toDate:options:
dateByAddingTimeInterval:
dateCount
dateForFunction:argumentIndex:warningReportingContext:
dateFormat
dateFormatID
dateFromComponents:
dateGroupingTypeForMinMaxDatePair:
dateParserLibrary
datePortionOfDateTimeFormatString:
dateString
dateTimeParam1
dateTimeParam2
dateValue
dateWithIdenticalComponentsInGMTForDate:
dateWithTimeIntervalSinceReferenceDate:
debugDescription
debugFlushAllDirtyReferences
debugOnly_DidCleanGraphForConsistencyViolation
debugOnly_DidDetectAndRepairConsistencyViolations
decimalDigitCharacterSet
decimalPlaces
decimalSeparator
decrementCellCountAtIndex:byAmount:
decrementCellCountsAtCellID:
decrementColumnCellCount:byAmount:
deepCopyIntoContext:bakeModes:withTokenDict:
deepType
deepType:
defaultCellStyleForBaseCellCoord:
defaultCellStyleForBaseCellCoord:useSoftDefault:outSource:
defaultCellStyleForCellCoord:
defaultCellStyleForCellID:
defaultCellStyleForCellID:useSoftDefault:outSource:
defaultCellStyleForTableStyleArea:
defaultCellValueForInteractionType:
defaultCenter
defaultColumnStyle
defaultColumnWidth
defaultCurrencyFormatWithCurrencyCode:
defaultCustomFormatData
defaultDateForGrouping
defaultDateOnlyShortFormatForLocale:
defaultDecimalPlacesForCurrencyCode:
defaultFormatData
defaultFormatWithFormatType:locale:
defaultHexadecimalFormat
defaultHorizontalBorderStroke
defaultHorizontalBorderStrokeEvenIfNotVisible
defaultIntValueForProperty:
defaultListStyle
defaultMajorStrokeLayer
defaultMinorStrokeLayer
defaultNameWithIndex:
defaultPaddingForCellID:
defaultParagraphStyle
defaultPredicateArg
defaultPredicateForType:argumentCellRef:hostCell:
defaultPredicateForType:argumentCellReference:hostCell:
defaultPropertyMap
defaultRangeControlSpecOfType:
defaultRowHeight
defaultStrokeLayer
defaultStrokeProvider
defaultStyleHandlesAtBaseCellCoord:useSoftDefault:styleDefaultsCache:outCellStyleHandle:outTextStyleHandle:
defaultStyleHandlesAtIndex:outCellStyleHandle:outTextStyleHandle:
defaultStyleHandlesForCellID:useSoftDefault:styleDefaultsCache:outCellStyleHandle:outTextStyleHandle:
defaultStyleHandlesOfColumnAtIndex:outCellStyleHandle:outTextStyleHandle:
defaultStyleHandlesOfRowAtIndex:outCellStyleHandle:outTextStyleHandle:
defaultStyleWithContext:
defaultStyleWithDefaultPropertiesInContext:
defaultStylesAtIndex:outCellStyle:outTextStyle:
defaultStylesForTableStyleArea:outCellStyle:outTextStyle:
defaultStylesOfColumnAtIndex:outCellStyle:outTextStyle:
defaultStylesOfRowAtIndex:outCellStyle:outTextStyle:
defaultTableNameShapeStyleWithContext:
defaultTextStyleForBaseCellCoord:
defaultTextStyleForBaseCellCoord:useSoftDefault:outSource:
defaultTextStyleForCellCoord:
defaultTextStyleForCellID:
defaultTextStyleForCellID:useSoftDefault:outSource:
defaultTextStyleForTableStyleArea:
defaultValueForProperty:
defaultVerticalBorderStroke
defaultsOnlyStrokeLayerStack
definedBottomStroke
definedLeftStroke
definedRightStroke
definedTopStroke
definesProperty:
degreesFreedom
delayedArchivingPriority
delegate
deleteBaseRange:withUids:
deleteCharactersInRange:
deleteColumnsFromBaseRange:columnUids:
deleteRange:
deleteRange:undoTransaction:
deleteRowsFromBaseRange:rowUids:
deliveryStyle
deliveryStyleSupportedForExport:
dependTracker
dependencyTracker
dependentLayouts
dependentsList
dependentsOfTextLayout:
dependentsToDirtyByFromRef
deprecatedProperties
deprecatedProvider
deriveBodyPivotDeEmphasisHorizontalStrokeFromTableStyle:propertyMap:
deriveBodyPivotEmphasisVerticalStrokeFromTableStyle:propertyMap:
deriveBodyPivotGroupVerticalStrokeFromTableStyle:propertyMap:
deriveCategoryBottomStrokeFromFooterRowSeparatorStroke:
deriveCategoryInteriorStrokeFromFooterRowVerticalStroke:
deriveCategoryTopStrokeFromFooterRowSeparatorStroke:
deriveFooterRowPivotGroupVerticalStrokeFromTableStyle:propertyMap:
deriveHeaderColumnPivotGroupDeEmphasisStrokeFromTableStyle:propertyMap:
deriveHeaderColumnPivotGroupHorizontalStrokeFromTableStyle:propertyMap:
deriveHeaderColumnPivotSeparatorStrokeFromTableStyle:propertyMap:
deriveHeaderRowPivotGroupDeEmphasisStrokeFromTableStyle:propertyMap:
deriveHeaderRowPivotGroupVerticalStrokeFromTableStyle:propertyMap:
deriveHeaderRowPivotTitleStrokeFromTableStyle:propertyMap:
descendersCannotClip
description
descriptionForAggregateIndex:locale:
descriptionForAggregateIndex:useShortLabel:allowDuplicateNames:locale:
descriptionForLevel:
descriptionForPivotBodyCellForUidCoord:
descriptionForPivotGroupCellForColumnUid:upToLevel:
descriptionForPivotGroupCellForRowUid:upToLevel:
descriptionString
descriptionWithGroupBy:
descriptionWithLocale:
descriptionWithObject:
designModeEnabled
detachNewThreadSelector:toTarget:withObject:
detailsWithSymbol:attribute:
detectAndRepairDirtyCellsAreOnLeafQueue
detokenizeEntireStorage
deviceBoundsForCellRange:
dictionary
dictionaryRepresentation
dictionaryWithCapacity:
dictionaryWithContentsOfFile:
dictionaryWithDictionary:
dictionaryWithObjects:forKeys:count:
dictionaryWithPreset:
didAddGroupNode:
didAddRowUID:toGroup:
didAddRows:
didAddTableName:forTableUID:
didApplyConcurrentCellMap:
didChangeExtentUids:
didChangeGroupByStructure
didChangeTableName:fromTableName:forTableUID:
didDrawCellImageFill:inCellRange:
didEndTableNameEditing
didHint:syncWithNextHint:horizontally:
didInitFromSOS
didMakeGroupingChangesInRowUIDs:
didMergeRange:
didModifySrcTable:dstTable:
didModifyTable:calcEngine:
didModifyWasCalled
didRemoveRowUID:fromGroup:
didReplaceTextsInStoragesWithPlaceHolderString
didUnmergeRange:
dimension
dimensionForUnit:
dimensions
directChildGroupUids
direction
dirtyAllCellsInOwner:
dirtyAllCellsInOwnerId:
dirtyCellCount
dirtyCellCountInOwner:
dirtyCellDependencyRows
dirtyCellRef:
dirtyCellRefs:
dirtyCellRefsInReferenceSet:
dirtyCellRegionGatherer
dirtyCellsForColumnRange:fromTable:tableRange:
dirtyCellsForInsertionOfColumns:forTable:tableRange:headerRange:
dirtyCellsForInsertionOfRows:forTable:tableRange:headerRange:
dirtyCellsForMergingRange:forTable:headerRowRange:headerColumnRange:
dirtyCellsForRemovalOfColumns:fromTable:tableRange:
dirtyCellsForRemovalOfRows:fromTable:tableRange:
dirtyCellsForRowRange:fromTable:tableRange:
dirtyCellsForSeconds:fromStartTime:
dirtyCellsForUpgrade
dirtyCellsNow
dirtyCellsUsingFunction:
dirtyCoords:inOwnerId:
dirtyFilterState
dirtyFilterStateForFooters
dirtyFilterStateForHeaders
dirtyFilterStateForRowRange:
dirtyGeometryVolatileCells
dirtyInternalCellRef:
dirtyInternalCellRefs:
dirtyInternalCellRefsVector:
dirtyInternalRangeRef:
dirtyNewCellRef:forSeconds:fromStartTime:
dirtyNowAndTodayVolatileCells
dirtyNowVolatileCells
dirtyOnlyDependentsOfCellRef:
dirtyPrecedentCount
dirtyRandomVolatileCells
dirtyRangeRef:
dirtySheetTableNameVolatileCells
dirtyStrokeRange
dirtyingInProgress
disableImplicitNaming
disconnect
displayChoicesForInspector
displayFormatType
displayLayer:
displayNameForColumnAtIndex:
displayNameForColumnAtIndex:derivation:
displayNameForColumnName:
displayNameForInteractionType:
displayString
displayStringAtIndex:
displayStringForLocale:
displayStringWithCalculationEngine:forTable:andCellID:
displayableDescriptiveName
distantFuture
distantPast
distinctValuesAtLevel:
distributeBlock:
doFullRefresh
documentIsClosing
documentLocale
documentLocaleDidChange
documentLocalizedDisplayNameForColumnAtIndex:
documentObject
documentRandomSeed
documentRoot
documentStylesheet
doesNotNeedFormulaRewriteForImport
doesResetAnyProperties:
doesResetProperty:
doesSetAnyProperties:
doesSetProperty:
domain
dontClearBackground
doubleQuoteCharacters
doubleValue
doubleValueForProperty:
downgradeFilterSetForBackwardCompatWithLocale:
downgradeForPrePivotFormatForLocale:
downgradedForPrePivot
dragAndDropDetails
dragByHandleOnly
drawAttachment:inContext:selection:
drawBlackAndWhite
drawCellBackground
drawColumn:selection:inContext:isFlipped:viewScale:renderMode:
drawInContext:
drawLayer:inContext:
drawPreventAntialias
drawSingleStroke:context:beginPoint:endPoint:width:strokeWidthForDrawing:strokeFrame:
drawStrokes
drawStrokesInGridRange:clearStrokes:context:
drawSwatchInRect:inContext:
drawTableBackground
drawTableName
drawText:inContext:minSize:maxSize:anchor:flags:isFlipped:viewScale:
drawableInfo
drawsBlackAndWhite
dropAllAggregators
dropAllTargets
dropReference
dropReferenceForKey:callWillModify:
dropReferences:forKey:callWillModify:
dropTable:
dropTable:withTableName:withContainerName:
dropTract:
dstColumnUids
dstCondStyleOwnerUID
dstRegion
dstRowUids
dstTableUID
dstUidForSrcUid:
duplicateFilterSet
duplicateFilterSetInUidForm
duplicateFilterSetInUidFormWithTable:
duration
durationCount
durationFormat
durationFormatID
durationInterval
durationNotAllowedError:argumentNumber:
durationParam1
durationParam2
durationStyle
durationTimeIntervalValue
durationUnitLargest
durationUnitLargestWithTimeInterval:
durationUnitSmallest
durationUnits
durationValue
duringRollback
duringSubOwnerUIDUpgrade
dynamicAddOrRemoveColumnElementSize
dynamicAddOrRemoveRowElementSize
dynamicBandedFill
dynamicBandedFillSetting
dynamicCellFillDelegate
dynamicColumnAdjustment
dynamicColumnTabSize
dynamicContentDelegate
dynamicContentMustDrawOnMainThread
dynamicFontColor
dynamicFontColorCellRange
dynamicFooterHeight
dynamicHeightResize
dynamicHidingContent
dynamicHidingRowsCols
dynamicHidingRowsColsDirection
dynamicHidingText
dynamicInfoGeometry
dynamicLayout
dynamicLayoutParticipants
dynamicOrderedStrokeLayer
dynamicRemovingText
dynamicRepResize
dynamicRepResizeSessionInProgress
dynamicRepressFrozenHeaderColumns
dynamicRepressFrozenHeaderRows
dynamicResizeInfo
dynamicResizingColumnRange
dynamicResizingColumns
dynamicResizingRowAdjustment
dynamicResizingRowRange
dynamicResizingRows
dynamicRevealingRowsCols
dynamicRevealingRowsColsDirection
dynamicRowAdjustment
dynamicRowTabSize
dynamicSavedLayoutGeometry
dynamicSelection
dynamicStrokeLayer
dynamicSuppressingConditionalStylesCellID
dynamicTableNameResize
dynamicUnorderedStrokeLayer
dynamicWidthResize
earlierDate:
earlyRefreshRequested
edgeExpandUsingMovingUids:tractList:
edgeInsets
edgeInsetsFromPadding:
editingCellIDForInvalidation
editingReferenceNode
editingSpillingTextRange
editorClass
effectiveSize
effectiveTableNameHeightForTable:
effectiveTextStyle
elementKind
eliminateLargestCommonSubexpression:withSymbolTable:newIdentifierOut:
eliminateLargestCommonSubexpressionWithSymbolTable:newIdentifierOut:
embiggenTableForUpgrade
embiggenedCellCoord
empty
emptyCellCount
emptyFilteredTable
emptyOptions
emptyPattern
emptyReferenceSet
emptyReferenceSetWrapper
emptyStroke
emptyStrokeWithWidth:
enableFilterSet:
enableNotifier
enclosingGroupNameForColumnIndex:level:
enclosingGroupNameForGroupCellValue:
enclosingGroupNameForRowIndex:level:
encodeCellValueToArchive:
encodeObjectsToDataListArchive:archiver:
encodeToArchive:
encodeToArchive:alsoSave31Format:archiver:
encodeToArchive:archiver:
encodeToArchive:archiver:backwardCompatOptions:
encodeToArchive:archivingCustomFormats:
encodeToArchive:backwardCompatOptions:archiver:
encodeToArchive:forGroupBy:backwardCompat:
encodeToExpandedArchive:archiver:
encodeToPrePivotArchive:archiver:
encodeToPrePivotArchive:archiver:encodingForSOS:
endBatchingGroupCellDirtying
endDeferringRebuildFormulas
endIteration
endOfGroupingChangesBatch
endRatingCell
endSuppressingWillModifyCalls
endTableCell:withCellID:cellHasContents:cellIsPrimary:
endTableChunk:
endTableLayoutSpace:
endTableNameForChunk:
endTableRow:
endTrackingNamesInTable:
endTrackingNamesInTableForLegacyNRM:
endTrackingReference:
endTrackingReference:calcEngine:
englishFunctionNameFromFunctionIndex:
enqueueBootstrapChangeDescriptors
enqueueRequestForKeys:
ensureAllTablesAreRegisteredInDocumentRoot:
enterCalcEngineMode
entireActualHeaderColumnsCellRange
entireBodyCellRange
entireBodyRowsCellRange
entireFooterRowsCellRange
entireHeaderColumnsCellRange
entireHeaderRowsCellRange
enumerateAggregates:
enumerateAggregatesAtLevel:withBlock:
enumerateAllAnnotationsInModelWithHitBlock:
enumerateAllGroupsWithBlock:
enumerateAllGroupsWithStop:withBlock:
enumerateAllRanges:
enumerateAllRangesForFromCoord:usingBlock:
enumerateAllStylesWithBlock:
enumerateAnnotationsAndFormulasContainedInRegion:withBlock:
enumerateAnnotationsAndFormulasInRange:withBlock:
enumerateAnnotationsWithBlock:
enumerateAttachmentsInTextRange:usingBlock:
enumerateAttachmentsOfClass:inTextRange:usingBlock:
enumerateCacheItemsIntersectingBaseCellRect:includeCrumbs:usingBlock:
enumerateCacheItemsIntersectingBaseCellRect:usingBlock:
enumerateCacheItemsIntersectingBaseCellRegion:usingBlock:
enumerateCacheItemsUsingBlock:
enumerateCellIDElementsUsingBlock:
enumerateCellIDsUsingBlock:
enumerateCellRangesUsingBlock:
enumerateCellStatesUsingBlock:
enumerateCellStoragesInRange:withBlock:
enumerateCellStoragesRowByRowToMaxID:withBlock:
enumerateCellStringsForRows:rowCount:usingBlock:
enumerateCellUIDRangesUsingBlock:
enumerateCellUIDUsingBlock:
enumerateCellUIDsUsingBlock:
enumerateCellsAddedAndRemovedOfType:withOptions:usingBlock:
enumerateCellsAddedOfType:withOptions:usingBlock:
enumerateCellsForSOSSerializationWithBlock:
enumerateCellsUsingBlock:
enumerateCellsWithIDsUsingBlock:
enumerateCellsWithUIDsUsingBlock:
enumerateChangeRecords:withType:block:
enumerateChildTexturesForDescription:passingTest:withBlock:
enumerateColumnCellCountDiffUsingBlock:
enumerateColumnRangesInReverseUsingBlock:
enumerateColumnRangesUsingBlock:
enumerateColumnUIDUsingBlock:
enumerateColumnWidthsUsingBlock:
enumerateColumnsInReverseUsingBlock:
enumerateColumnsIntersectingCellRange:usingBlock:
enumerateColumnsUsingBlock:
enumerateConcurrentlyUsingChunkBeginBlock:concurrentBlock:finalBlock:
enumerateConcurrentlyUsingChunkBeginBlock:perDispatchThreadBlock:concurrentBlock:finalBlock:
enumerateCustomFormatsBeingAddedUsingReplacementBlock:
enumerateDataKeyValuePairsUsingBlock:
enumerateDirectChildren:
enumerateElementsUsingBlock:
enumerateExpressionNodesUsingBlock:
enumerateFilterIndicesInTable:usingBlock:
enumerateFiltersForColumn:withTable:usingBlock:
enumerateFiltersInTable:usingBlock:
enumerateFittingHeightsUsingBlock:
enumerateFittingWidthsUsingBlock:
enumerateFormatsUsingBlock:
enumerateFormulaOwnersUsingBlock:
enumerateFrozenLayoutSpacesUsingBlock:
enumerateGridRowsUsingBlock:
enumerateGroupingColumnsForColumn:withBlock:
enumerateGroupsAtLevel:withBlock:
enumerateGroupsAtLevel:withStop:withBlock:
enumerateGroupsBetweenLevel:andLevel:withBlock:
enumerateGroupsBetweenLevel:andLevel:withStop:withBlock:
enumerateInDirection:usingBlock:
enumerateIndexesInRange:options:usingBlock:
enumerateIndexesUsingBlock:
enumerateIndexesWithOptions:usingBlock:
enumerateKeysAndCountsUsingBlock:
enumerateKeysAndObjectsUsingBlock:
enumerateKeysAndValuesUsingBlock:
enumerateLayerAndStackForGridColumnRange:options:usingBlock:
enumerateLayerAndStackForGridRowRange:options:usingBlock:
enumerateLayoutSpacesUsingBlock:
enumerateLegacyCustomFormatsUsingBlock:
enumerateLoadedTilesWithBlock:
enumerateMappingFollowingSwapsUsingBlock:
enumerateMatchesInString:options:range:usingBlock:
enumerateMergeFormulasUsingBlock:
enumerateMergedStrokesAndCapsForGridColumn:from:to:usingBlock:
enumerateMergedStrokesAndCapsForGridRow:from:to:usingBlock:
enumerateMergedStrokesForGridColumn:from:to:usingBlock:
enumerateMergedStrokesForGridRow:from:to:usingBlock:
enumerateMergesIntersectingBaseCellRegion:usingBlock:
enumerateMergesIntersectingCellRegion:usingBlock:
enumerateMissingColumnsIntersectingCellRange:usingBlock:
enumerateMissingRowsIntersectingCellRange:usingBlock:
enumerateModelCellRectsUsingBlock:
enumerateModelConcurrentlyUsingChunkBeginBlock:concurrentBlock:finalBlock:
enumerateNamesMatchingPrefix:block:
enumerateObjectsUsingBlock:
enumerateObjectsWithBlock:
enumerateObjectsWithOptions:usingBlock:
enumerateOptionsUsingBlock:
enumeratePropertiesAndObjectsUsingBlock:
enumeratePropertiesUsingBlock:
enumerateRangesInRange:options:usingBlock:
enumerateRangesUsingBlock:
enumerateRangesWithOptions:usingBlock:
enumerateRawStrokesSegmentsUsingBlock:
enumerateReferencesWithBlock:
enumerateRepeatLayoutSpacesUsingBlock:
enumerateRowByRowInRange:withBlock:
enumerateRowCellCountDiffUsingBlock:
enumerateRowColumnRuleValuePairsUsingBlock:
enumerateRowHeightsUsingBlock:
enumerateRowRangesInReverseUsingBlock:
enumerateRowRangesUsingBlock:
enumerateRowUIDUsingBlock:
enumerateRowUidsWithBlock:
enumerateRowsAndIndexesWithBlock:
enumerateRowsInReverseUsingBlock:
enumerateRowsIntersectingCellRange:usingBlock:
enumerateRowsOfCellsConcurrentlyUsingBlock:
enumerateRowsUidsAtLevel:withBlock:
enumerateRowsUsingBlock:
enumerateRowsWithBlock:
enumerateRulesInFilterIndex:usingBlock:
enumerateRulesUsingBlock:
enumerateSeriallyUsingBlock:
enumerateSmartFieldsWithAttributeKind:inRange:usingBlock:
enumerateSpecifiersAndValuesWithBlock:
enumerateSpecifiersWithBlock:
enumerateStoragesInColumnRange:getPreBNC:withBlock:
enumerateStoragesInColumnRange:withBlock:
enumerateStrokesAndCapsFrom:to:usingBlock:
enumerateStrokesAndCapsInRange:usingBlock:
enumerateStrokesFrom:to:usingBlock:
enumerateStrokesInRange:usingBlock:
enumerateStrokesInRegion:usingTopStrokeBlock:usingBottomStrokeBlock:usingLeftStrokeBlock:usingRightStrokeBlock:
enumerateStrokesUsingBlock:
enumerateSubstringsInRange:options:usingBlock:
enumerateTilesConcurrentlyUsingBlock:
enumerateTilesWithBlock:
enumerateValuesForColumn:usingBlock:
enumerateValuesForRow:usingBlock:
enumerateValuesUsingBlock:
enumerateViewCellRectsUsingBlock:
enumerateVisibleColumnIndexesInRange:usingBlock:
enumerateVisibleIndexesInRange:usingBlock:
enumerateWidthsInLayers:usingBlock:
enumerateWidthsInRange:usingBlock:
enumerateWithAttributeKind:inRange:usingBlock:
equalityPermitted
equalsCellRange:
equalsCellRegion:
error
errorCount
errorCountForOwner:
errorForErrorType:
errorForErrorType:functionName:argIndex:
errorForRichTextStorage:outValue:
errorForToken:
errorIsRangeUsageError
errorType
errorTypeKey
errorValue
errorWithDictionary:
errors
estimateByteSize
estimatedByteSize
estimatedByteSizeOfElement:
estimatedMemoryCost
evaluateAtCellID:onOwnerUID:calcEngine:
evaluateFormulaAt:withCalcEngine:recalcOptions:
evaluateFormulaAtCellID:withCalcEngine:onOwnerUID:
evaluateSynchedWithCalcEngineWithFormula:evalContext:
evaluateWithContext:
evaluateWithContext:isInACycle:outErrorIsDueToCycle:
evaluateWithContextGridResult:
evaluationContext
evaluationMode
exceptionIsCircularReferenceError:
exceptionIsFromCalcEngine:
exceptionIsInvalidMergeReference:
exceptionIsRangeUsageError:
exceptionWithName:reason:userInfo:
excludeSummaryAndLabelRows
excludedUidsTract
executeBlockWhileCalculationEngineIsNotWriting:
exitCalcEngineMode
expandBackgroundFill
expandBaseCellRectToCoverMergedCells:
expandBaseCellRegionToCoverMergedCells:
expandCellRangeToCoverMergedCells:
expandCellRangeToVisibleNeighbors:
expandCellRegionToCoverMergedCells:
expandDirtyRegionForReferences
expandGroupUidsForFlattening:forDimension:
expandSpanningCategoryRef:
expandSummaryColumnGroupUIDs:
expandSummaryGroupUIDs:
expandSummaryRowGroupUIDs:
expandToIncludeCoord:
expandUsingIndexes:forRows:
expandedRowColumnUuids
expandedSetWithUuid:
expandedSetWithUuids:
expectedArgTypeForPredicateType:firstArg:
explicitFormatFlags
explicitFormatOfKind:atModelCellCoord:currencyIsMostRecentlySet:
exportPermanentHidingState
exportString
exportsCellAnnotations
exportsCellComments
expressionNode
expressionTree
expressionsIdenticalToExpression:
expressionsMatchingCSENodeData:forNode:
extendMappingWithTableUIDs:calcEngine:
extendTableUIDHistoryWithRewrite:
extendedPartitionRangeSingleSpaceIntersectionWithCellRange:
exteriorStroke
exteriorStrokeForStrokePreset:
exteriorTextWrap
extractComponentsFromDate:year:month:day:
extractComponentsFromDate:year:month:day:hour:minute:second:
fStatistic
falseString
fetchQuotesWithTickers:completion:
fetchableKeysFromSet:
fetcherWithCoordinator:
fileFormatVersion
fileSystemRepresentation
fileURLWithFileSystemRepresentation:isDirectory:relativeToURL:
fillCellRangeColMajorSet:topToBottom:
fillCellRangeRowMajorSet:leftToRight:
fillForColumn:
fillForRow:
fillInColumnGapsUsingIndexes:
fillInRowGapsUsingIndexes:
fillType
filterAtIndex:inTable:
filterByAddingRule:
filterByClearingRules
filterByRemovingRuleAtIndex:
filterColons
filterCoordTypeForFilterCoordinate:
filterCount
filterFormulaContainingCell
filterFormulaCoordForViewColumnRow:
filterFormulaCoordinateForColumnOrRow:
filterFormulaCoordinateForType:columnOrRowIndex:
filterIndex
filterIndicesForBaseColumn:inTable:
filterSet
filterSetForColumns
filterSetForPivotDataTable:
filterSetForRows
filterSetType
filterSetUpdated
filterUsingPredicate:
filterWithIndex:baseColumnIndex:rules:
filterWithProperties:
filterWithRule:atIndex:
filteredArrayUsingPredicate:
filteringBaseColumnRange
filteringBodyRange
filteringBodyRowRange
filteringCategoryRefAt:forDimension:
filteringChanged:forDimension:
filteringChangedPrecedentForTableUID:
filteringColumnNameForBaseColumnIndex:
filteringColumnNameForColumnIndex:
filteringDisplayColumnNameForBaseColumnIndex:
filteringRange
filteringTableModel
filteringTableTranslator
filteringTableUID
final
finalDstTableUID
finalTopRowIndex
finalizeLayoutPassWithRowsNeedingFittingInfo:
find:
findCellForCellID:
findCellForCellUID:
findChartableRangesFromTableRange:getBodyRange:headerColumnRange:headerRowRange:
findExistingGroupNodeInGroupBy:usingValues:upToLevel:coerceForDateFields:
findFirstVisibleIndexInBegin:afterEnd:
findGroupNodeForDisplayValuesFromSplitter:atLevel:startAtComponent:startAtWord:preserveFlags:
findGroupNodeForValue:atLevel:createIfMissing:
findGroupNodeForValue:atLevel:locale:
findKeyForRowUid:
findLastVisibleIndexInBegin:afterEnd:
findLayoutIfAvailableInSet:intersectingRow:
findNthNextVisibleIndex:fromIndex:
findNthPreviousVisibleIndex:fromIndex:
findSelectionHighlightLayer
findStrokeAndRangeAtIndex:
findTileForString:findClosest:
findTileForString:findClosest:foundAtOffset:
findWidthAndRangeAtIndex:
finerGroupingTypeFor:
finerGroupingTypeFor:groupTypesToAvoid:
finishInit
first
firstAggregate
firstBucketForArchiving
firstCellID
firstChildHint
firstEmptyBodyRow
firstFilterIndexForBaseColumn:inTable:
firstFragment
firstIndex
firstIndexNotInIndexSet:beginRange:pastEndRange:
firstIndexNotInIndexSet:orIndexSet:beginRange:pastEndRange:
firstIndexOfSubtree
firstMissingDataField
firstObject
firstPartitionWidth
firstTractWithPurpose:
firstUidFromUIDSet:isRows:
firstValue
firstVisibleNodeUsingColumnRowUIDMap:forDimension:leafLevel:pivotTableHiddenExtent:
fittingHeightOfRow:
fittingWidthsMapForColumns:includeStrokes:
fixPreserveFlagsForCategoryRefInNode:
fixStorageLanguage:
fixedColumnWidth:
fixedColumnWidthStack
fixedWidthProvider
fixupFormulas
flags
flattenGroupValuesIfNeededForCell:viewCellCoord:summaryAndLabelRows:categoryColumns:
flattenStrokeOrder
flattenedCellRefForCategoryRef:calcEngine:
flattenedGrid:
flattenedGridNoThrow:
flatteningDimension
floatValue
floatValueForProperty:
floatingAboveText
floatingHeaderColumnRangeAtRect:
floatingHeaderRowRangeAtRect:
flush
flushAllDirtyReferences
flushAllFormulaChanges
flushCachedIndexSets
flushCellDirtier
flushFormulaChangesForSeconds:
flushRemoveFormulas
flushReplaceFormulas
flushResetFormulas
foldName:
followsLinksOnFirstTap
fontHeightInfoAtCharIndex:
fontHeightOfParagraphStyle:
fontInfoCache
fontInfoForTextStyle:
fontInfoForTextStyle:withString:
fontSize
footerColumnSeparatorColumnRange
footerRowBodyColumnStroke
footerRowBodyRowStroke
footerRowBorderStroke
footerRowCellStyle
footerRowPivotGroupVerticalStroke
footerRowRange
footerRowSeparatorRowRange
footerRowSeparatorStroke
footerRowTextStyle
footerRowsFill
forConditionalStyle
forDrawing
forFormulaPlainText
forallRefs:
forceEscaping
forceGroupingChangeReset
forceLoadHeaders
forceParentAutosizeFlagsForTextLayout:
forceParentAutosizedFrameForTextLayout:
forceReferenceInterpretationOfChildren
forceSheetName
forceSplitting
forceTableName
forceWesternLineBreaking
forceZoomInOnBeginEditing
forcingRegion
foreach:
foreachAnyRef:
foreachCellRect:
foreachFormulaInOwnerKind:performBlock:
foreachRangeRef:
foreachSpanningRangeRef:
foreachUuid:
formUnionWithCharacterSet:
format
formatAndValueFromCell:applySpareFormatOnly:
formatAndValueFromCell:useAllSpareFormats:
formatAndValueFromCell:useAllSpareFormats:forceNoContent:
formatAndValueFromCell:useAllSpareFormats:suppressApplyingValue:
formatAndValueFromRichTextCell:updatingStorageWithBlock:
formatAtIndex:
formatAtIndex:accessContext:
formatByFixingUnitsIfNecessaryForTimeInterval:
formatForCalcEngineAtBaseCellCoord:formatIsExplicitOut:
formatForKey:
formatForStorageFlag:
formatFromArchive:
formatIDForStorageFlag:
formatName
formatOfCellFormatKind:isExplicit:
formatOfType:allowMismatchedSpare:
formatString
formatStringContainsAMPMSpecifier
formatStringContainsOnlyDate
formatTableReference
formatType
formatType:isSameCellFormatKindAs:
formatType:isSameCellFormatKindAs:allowNumberCurrencyMismatch:
formatType:sharesASpareSlotWithFormatType:
formatTypeIsExpected:
formatsAdded
formatsRemoved
formattedDataParagraphStylePropertyMapForCell:atCellID:
formattedForDollarFunction:precision:forLocale:
formattedGridForFunction:argumentIndex:context:format:
formattedValue
formattingSymbols
formulaAtBaseCellCoord:
formulaAtCellCoord:
formulaAtCellID:
formulaCoord
formulaCoordSpace
formulaCoordsInRange:inOwner:
formulaCoordsReferringToRange:fromOwner:
formulaCoordsReferringToRange:fromOwner:skipSpanning:
formulaCount
formulaCreatorForPredArg
formulaCreatorForPredArg0UsingLinkedRef:useColumnRef:
formulaDefinitionPrecedentForTableUID:
formulaDetokenizedText
formulaEditorEvaluatesFormulas
formulaError
formulaErrorForKey:
formulaErrorTableReference
formulaFixupsShouldStick
formulaForCell:atCellID:inTable:
formulaForKey:
formulaID
formulaObject
formulaObjectAtIndex:
formulaOwner
formulaOwnerId
formulaOwnerUIDForInternalFormulaOwnerID:
formulaOwnerUIDs
formulaPlainText
formulaQuoteContextAtCharIndex:inStorage:
formulaResultForFormattedValue:context:suppressCycleCheck:formatAsPercent:
formulaResultForFormattedValueWithKnownCycleState:context:isInACycle:outErrorIsDueToCycle:formatAsPercent:
formulaSpec
formulaSpecAtBaseCellCoord:
formulaSpecAtCellID:
formulaSpecForStorageRef:
formulaStore
formulaStringAtCellRef:
formulaSyntaxError
formulaSyntaxErrorAtBaseCellCoord:
formulaSyntaxErrorAtCellID:
formulaSyntaxErrorID
formulaSyntaxErrorString
formulaTableReference
formulaWasFixable
forwardRegisterOwnerWithOwnerUID:legacyGlobalID:
foundANumber
foundConsistencyIssues
fourth
fractionAccuracy
fragmentEntryForNameFragmentPrecedent:
fragmentEntryForString:
frame
frameBounds
frameForCaptionPositioning
frameForGridRange:
frameForRange:
frameForTableNameBorder
frameHasWidthAndHeight
frameInRoot
frameInUnscaledCanvas
frameWithViewScale:contentFrame:
frameWithViewScale:contentFrame:checked:outCheckboxImage:outCheckboxSize:
freeAggFormulaCoord:
fromGroupByUID
fromTableCoordMapperForPasteboard
fromTableUID
frozenHeaderColumnsSpace
frozenHeaderCornerSpace
frozenHeaderRowsSpace
fullIdentifier
fullTransform
functionIndex
functionLocalizationDictionary
functionName
functionNode
functionNode:functionName:whitespaceAfterLabel:
functionSpecForFunctionIndex:
functionSpecForFunctionName:
functionSpecList
functionsUsed
gapForColumnIndex:bodyWidth:
gatheredCellRegion
gatherer
generateCategoryStrokesInTableStyle:
generateCategoryStylesConnectedToStylesheet:
generatePivotStrokesInTableStyle:
generatePivotStylesConnectedToStylesheet:
generateRandomSeed
generateWidthHeightCollection
geometricFormula
geometry
geometryByTranslatingBy:
geometryForPrototypeIndex:withCanvasPoint:
geometryForRTLTableWithGeometry:
geometryFromFullTransform:
geometryPrecedentForTableUID:
getAggregateType:
getAllCellRefs:referringToOwnerUID:
getBytes:length:
getCategoryReferencesWithCalcEngine:
getCell:atBaseCellCoord:
getCell:atBaseCellCoord:suppressCellBorder:
getCell:atCellCoord:
getCell:atCellID:
getCell:atCellID:holdingReadLockWithAccessController:
getCell:atCellID:suppressCellBorder:
getCell:atCellUID:
getCell:atCellUID:suppressCellBorder:
getCellRefs:forGroupRootInGroupBy:
getCellRefs:inGroupBy:
getCellRefs:inGroupBys:
getCellRefs:referringToGroupNodes:inGroupBy:
getCellRefs:referringToOwner:
getCellRefs:referringToOwnerUID:referringToUuids:
getCellRefs:referringToOwners:
getCellRefs:referringToUuids:
getColumnInitialWidth:
getColumnWidthResize:
getCurrentFormat
getDefaultCell:forBaseCellCoord:
getDefaultCell:forCellID:
getDefaultCell:forCellUID:
getDefaultCell:forTableStyleArea:
getFitHeight:andModelHeight:forRow:
getFitHeightForRow:
getHidingActionForRows:
getHidingIndexesForGrandTotalsForPivotTable:columns:rows:
getIndexes:maxCount:inIndexRange:
getMinimumColumnWidth:
getMinimumRowHeight:
getModelHeightForRow:
getModelWidthForColumn:
getNextAggFormulaCoord
getNextCellData:
getNextPrecedentCoord:
getPivotDataBundleForUidCoord:
getPivotDataBundleForUidCoord:upToLevel:
getPivotHidingIndexesForGroupingColumn:columns:rows:forHiding:forPivotTable:
getPrecedents:calcEngine:hostCell:doImplicitIntersection:returnUidReferences:
getPrecedents:calcEngine:hostOwnerUID:hostCellID:
getPrecedentsWithCalcEngine:hostOwnerUID:
getPredArgDataFromCell:
getPreviousUidCoordForAggIndex:fromNewUidCoord:addNewUidCoordEvenIfNotFound:
getRefCountsFromDataList
getResolverUID
getRowHeight:
getRowHeightResize:
getRowInitialHeight:
getSpaceContainingCellID:
getTextPropertiesWithCell:cellID:wraps:alignment:verticalAlignment:padding:
getUUIDBytes:
getUUIDBytes:forColumnIndex:
getUUIDBytes:forRowIndex:
getUUIDBytesForColumn:
getUUIDBytesForColumnUid:
getUUIDBytesForGroupingColumnUid:
getUUIDBytesForRunningTotalGroupingColumn:
getUidCoordforRunningAggregate:tupleForCoord:newUidCoord:addNewUidCoordEvenIfNotFound:inContext:
getValue:
getValue:atBaseCellCoord:fetchRichTextAttributesIfPlainText:
getValue:atBaseCellCoord:fetchRichTextAttributesIfPlainText:skipPendingWrites:
getValue:atCellID:fetchRichTextAttributesIfPlainText:
grabViewUidMapper
grandGrandTotalCategoryRefForAggregate:
grandTotalCategoryRefForColumn:forAggregate:
grandTotalCategoryRefForRow:forAggregate:
gregorianCalendarLocale
gridKind
gridPointHitByCanvasPoint:tabsViewable:
gridPointHitByLayoutPoint:
gridRange
gridRangeForLayoutRect:
gridRangeOfLayoutSpace:
groupByByUid:
groupByChange
groupByChangeDistributor
groupByChangedPrecedentForTableUID:
groupByForCategoryRef:withCalcEngine:
groupByForColumnGroups
groupByForColumns
groupByForOwnerIndex:
groupByForOwnerIndex:createIfMissing:
groupByForRowGroups
groupByForRows
groupByForUID:withCalcEngine:
groupByForUuidCoord:
groupByRootUid
groupBySet
groupByUID
groupByUid
groupBys
groupCellValue
groupColumnIndexesForOwnerIndex:
groupHierarchyTreeAsFiltered:usingOrder:forDimension:
groupLevel
groupLevelAtLabelRow:
groupLevelAtRow:
groupLevelAtSummaryColumn:
groupLevelAtSummaryRow:
groupLevelForGroupUid:
groupLevelForGroupUid:isBlank:isError:
groupLevelInTable:
groupNode
groupNodeForGroupUid:
groupNodeForGroupUuid:
groupNodeForGroupValueHierarchyFromSplitter:startAtComponent:startAtWord:preserveFlags:
groupNodeForRowUid:atLevel:
groupNodeForUuidCoord:
groupNodeUIDInfo
groupNodesByGroupUid
groupSortOrder
groupSortOrderByRemovingColumnUIDs:tableInfo:
groupSortOrderByReplacingRuleAtIndex:withRule:withTableInfo:
groupSortOrderWithRules:withTableInfo:
groupSortOrderWithTableInfo:
groupSortRules
groupSortRulesForLevel:tableInfo:
groupUid
groupUidsGivenRowUids:selectedLevels:
groupUidsGivenUids:selectedLevels:forDimension:
groupUuid
groupValueAtLevel:
groupValueCellValue
groupValueCellValueForGroupBySet:aggIndex:appendAggregateName:
groupValueForValue:calcEngine:
groupValueHierarchyForChart:
groupValueHierarchyForChart:groupBySet:aggIndex:appendAggregateName:
groupValueHierarchyRefAtLevel:
groupValueHierarchyRefOnValue:atLevel:
groupValueHierarchyStringForCategoryRef:forHostCellRef:namingContext:
groupValueHierarchyStringWithDelimiterString:
groupValueHierarchyStringWithDelimiterString:namingContext:
groupValueRefAtLevel:
groupValueRefOnValue:atLevel:
groupValueTupleByAppendingTuple:
groupValueTupleByAppendingValue:
groupValueTupleByDemotingValueAtLevel:toLevel:
groupValueTupleByMergingTuple:toLevel:
groupValueTupleByPromotingValueAtLevel:toLevel:
groupValueTupleByRemovingValueAtLevel:
groupValueTupleByReplacingValue:atLevel:
groupValueTupleForRowUid:atLevel:
groupValueTupleForUuidCoord:createIfMissing:
groupValueUid
groupValueUidForTuple:appendingTuple:
groupValueUuid
groupWithStartingTileID:
groupingArrowStateAtCellID:
groupingColumnAtCategoryLevel:
groupingColumnChanges
groupingColumnForColumnUID:
groupingColumnForIndex:
groupingColumnHeadersFormulaCoord
groupingColumnLevelCountForColumn:
groupingColumnLevelsForColumn:
groupingColumnListCopy
groupingColumnOptionsMapCopy
groupingColumnUID
groupingColumnUid
groupingColumnUidExists:
groupingColumnUidList
groupingColumnsForOwnerIndex:
groupingColumnsFormulaCoord
groupingComboForGroupingType:
groupingIndexForColumnUID:
groupingSeparator
groupingType
groupingTypeIsAnyDateType:
groupingTypesAreUniqueForColumn:
groupsAtLevel:
handleFailureInFunction:file:lineNumber:isFatal:description:
handleForCellStyle:
handleForTextStyle:
handlePivotSorting:
hasASlotForFormatType:
hasActiveFilters
hasAlternatingRows
hasAnyCustomFormat
hasAnyDateArgumentsToFunction:
hasAnyExplicitFormats
hasAnyFormats
hasAnyRichTextCells
hasAnyWarning
hasArchivableState
hasAttachmentsThatChangeWithPageNumberOrPageCount
hasBadRefWithUidInfo
hasBareArgumentPlaceholders
hasBeforeAfterCounts
hasBooleanFormat
hasCachedIsValidReference
hasCachedValue
hasCategoryRef
hasCategoryRules
hasCellAtCellID:
hasCellID:
hasCellOrTextStyles
hasCellSpec
hasCellStyle
hasCells
hasCollapsedColumns
hasCollapsedRows
hasCommentAtBaseCellCoord:
hasCommentAtCellID:
hasCommentStorage
hasCommentStorageAtBaseCellCoord:
hasConditionalStyle
hasContent
hasContentIsCached
hasControl
hasControls
hasCurrencyFormat
hasCurrentFormat
hasCustomFormatsToPaste
hasDamagedTokenAttachments
hasDateEqualToDate:
hasDateFormat
hasDateTimeVolatileFunctions
hasDeferredImportActions
hasDisallowedHeaderIndexingForTableUID:
hasDuplicatedElements
hasDurationFormat
hasEnabledGroupBys
hasEqualContentToCell:
hasEqualContentToCell:usingRichTextObjectComparisonBlock:
hasEqualStrokes:
hasEqualValueToCell:
hasEqualValues:forProperties:
hasExplicitFormatOfType:allowMismatchedSpare:
hasFilterRulesAffectingInsertRows
hasFilterRulesInBaseColumns:
hasFilterRulesWithTable:inBaseColumns:
hasFormatOfType:allowMismatchedSpare:
hasFormula
hasFormulaAnyError
hasFormulaAt:
hasFormulaAtBaseCellCoord:
hasFormulaAtCellCoord:
hasFormulaAtCellID:
hasFormulaAtCellUID:
hasFormulaCellsUsingNowTodayRandom
hasFormulaEvaluationError
hasFormulaSyntaxError
hasFormulaSyntaxErrorAtCellID:
hasFormulas
hasFullTupleInformation
hasFullyPopulatedCache
hasGroupingArrowAtCellID:
hasGroupingArrowInCellRegion:
hasHeaderColumnForAggregateNames
hasHeaderContent
hasHeaderRowForAggregateNames
hasHeightForRow:
hasHiddenAtIndex:
hasHiddenColumnAtIndex:
hasHiddenColumnAtIndex:forAction:
hasHiddenColumnsOrRows
hasHiddenRowAtIndex:
hasHiddenRowAtIndex:forAction:
hasHostCell
hasImportWarningSet
hasImportWarnings
hasInterestingKeys
hasLargerFonts
hasMaxNumFormulas
hasMergeFormulas
hasMergeFragmentAtCellID:
hasMergeRangeSpanningRowsForBaseCellRect:
hasMergeRangeSpanningRowsForCellRange:
hasMergeRanges
hasMergeRangesIntersectingBaseCellRect:
hasMergeRangesIntersectingBaseCellRegion:
hasMergeRangesIntersectingCellRegion:
hasMigratableStylesInCells
hasMismatchedFormatAndValue
hasMultiRowMerge
hasMultipleCells
hasNamesInHeaders
hasObjectForKey:
hasPastableFormulas
hasPreUFFVersion
hasPrefix:
hasRangeSpanningRowsForCellRange:
hasRangeSpanningRowsForCellRect:
hasRangeSpanningRowsForCellRegion:
hasReceiver:
hasReference
hasRelativeCellRef
hasRemoteDataFunctions
hasRewrittenCellAt:
hasRichText
hasRunRecalculationALongTime
hasRunningTotalAggregates
hasSpillStrokeInRange:
hasStockFormulaForStockUI
hasStringContentMatchingCell:
hasStrokeInRange:
hasStrokeSpillForLeftGridColumn:inRow:
hasStylesInCells
hasSuffix:
hasSummaryRowsInRegion:
hasTSCEFormula
hasTableBorder
hasTableStyles
hasTableUID
hasTextFormat
hasTextStyle
hasUidTracts
hasUnfilteredAt:forDimension:
hasUnfilteredRows
hasUntitledTableNameFormat
hasUsefulPivotDataInSourceBodyTract:
hasUsefulPivotSourceCellsInBodyRange:
hasValidInfo
hasValidRunningTotalFieldForAggregate:
hasValidUidMap
hasValue
hasValueAtColumn:row:
hasValueAtCoord:
hasVisibleCellWarnings
hasWidthForColumn:
hasWorkItems
hasWrite
hash
hauntedOwner
headerCellsExactlyMatching:
headerCellsMatching:limitToTable:includePrefixes:
headerCellsMatchingPrefix:
headerColumnBodyColumnStroke
headerColumnBodyRowStroke
headerColumnBorderStroke
headerColumnCellStyle
headerColumnPivotGroupDeEmphasisStroke
headerColumnPivotGroupHorizontalStroke
headerColumnPivotSeparatorStroke
headerColumnRange
headerColumnRowCoordinates
headerColumnSeparatorColumnRange
headerColumnSeparatorStroke
headerColumnTextStyle
headerColumnsFill
headerColumnsFrozen
headerColumnsRepeat
headerColumnsWidth
headerInfo_hidingActionForColumnAtIndex:
headerInfo_hidingActionForRowAtIndex:
headerNameMgr
headerRowBodyColumnStroke
headerRowBodyRowStroke
headerRowBorderStroke
headerRowCellStyle
headerRowColumnCoordinates
headerRowPivotGroupDeEmphasisStroke
headerRowPivotGroupVerticalStroke
headerRowPivotTitleStroke
headerRowRange
headerRowSeparatorRowRange
headerRowSeparatorStroke
headerRowTextStyle
headerRowsFill
headerRowsFrozen
headerRowsHeight
headerRowsRepeat
headerSideBorderColumnRange
headerStateOfTableChanged:
headerStateOfTableChanged:changedRows:
headersFrozenByDefault
height
heightFactor
heightForString:textMeasurerBundle:width:outFitWidth:
heightForString:width:outFitWidth:
heightForTextStyle:
heightOfRow:skipDynamicSwap:withStrokeHeights:returnZeroIfHidden:clampToPartitionSize:maximumPartitionSize:outIsFitting:
heightOfRowAtIndex:
heightOfRowAtIndex:isDefault:
heightOfRowIgnoringFitting:withStrokeHeights:
heightValid
hidden
hiddenColumnIndexes
hiddenColumnIndices
hiddenOrCollapsedIndexes
hiddenRowIndexes
hiddenRowIndices
hiddenRowsColumnsCache
hiddenStateExtentUid
hiddenStateForColumnsOwnerUID
hiddenStateForRowsOwnerUID
hiddenStateFormulaOwnerForColumns
hiddenStateFormulaOwnerForRows
hiddenStateOwnerForColumnsUID
hiddenStateOwnerForRowsUID
hiddenStates
hiddenStatesByExtentUid:
hiddenStatesChangedPrecedent
hiddenStatesForPivotDataTable:
hiddenStatesOwner
hideAtBaseIndex:forAction:
hideAtUid:forAction:
hideAtUid:forIndex:forViewIndex:forAction:
hideAtViewIndex:forAction:
hideAtViewIndexes:forAction:
hideBaseColumnAtIndex:forAction:
hideBaseRowAtIndex:forAction:
hideChromeContextMenuButton
hideColumnAtIndex:forAction:
hideColumnsAtIndexes:forAction:invalidate:
hideRowAtIndex:forAction:
hideRowsAtIndexes:forAction:invalidate:
hideStepperHUD
hideTotals
hidingAction
hidingActionForBaseColumnAtIndex:
hidingActionForBaseIndex:
hidingActionForBaseRowAtIndex:
hidingActionForColumnAtIndex:
hidingActionForRowAtIndex:
hidingActionForUid:
hidingActionForViewIndex:
hidingStateAtIndex:
hidingStateOfColumnAtIndex:
hidingStateOfRowAtIndex:
highestScaleFactorForRenderingDrawableInfo:
highlighted
hint
hintCacheKeyForHint:
hintCacheKeyForPartitioningPass:andHintID:
hintForLayout:
hintIsValid:
hintMatricesByCanvas
hitRep:withPrecision:
horizontal
horizontalFlip
horizontalStroke
horizontalStrokeForStrokePreset:
hostCellCoord
hostCellRef
hostColumnUID
hostRowUID
hostTableUID
hostedDescriptionAtCell:
hostedDescriptionAtCell:calcEngine:
hostedDescriptionAtCell:calcEngine:hideUids:
hotSpecifierArray
hotSpecifiers
hour
hueComponent
hyperlinkContainerRep
hyperlinkRegionWithURL:bezierPath:
hyperlinkRegions
hyperlinkStyle
i_cellStyleHandleForDataListKey:
i_copyIntoContext:stylesheet:
i_copyIntoContext:stylesheet:paragraphStyle:listStyle:bakeModes:resettingHostTableToMatch:referenceColorHelper:disableMenus:
i_formatForDataListKey:
i_indexesForLabelRowsAtGroupLevel:
i_indexesForLeadingColumnsAtGroupLevel:
i_indexesForLeadingRowsAtGroupLevel:
i_indexesForLeadingSummaryColumnsAtGroupLevel:
i_indexesForLeadingSummaryRowsAtGroupLevel:
i_indexesForSummaryColumnsAtGroupLevel:
i_indexesForSummaryRowsAtGroupLevel:
i_populateCachedIndexSetsIfNeeded
i_populateIndexesForLabelRows
i_populateIndexesForLeadingColumns
i_populateIndexesForLeadingSummaryColumns
i_populateIndexesForLeadingSummaryRows
i_populateIndexesForSummaryAndLabelRows
i_populateIndexesForSummaryColumns
i_populatePivotCachedIndexSetsIfNeeded
i_rowInfoAtIndex:
i_stringForDataListKey:outShouldWrap:outIsShared:
i_textStyleHandleForDataListKey:
i_tileStartingAtOrAfterRowIndex:outTileRange:
i_tileStartingAtOrBeforeRowIndex:outTileRange:
idOfFirstOccurence
identifier
identifierComponents
identifiersForPresetID:
identityOwnerUIDMapper
identityTranslator
illegalCharacterSet
imageData
imageForScale:checked:outDrawingScale:
imageNamed:
importDate
importDeferredRemoveGroupingRowsAtIndexes:
importSettings
importSource
importWarningSet
importWarningSetForKey:
importWarningSetID
importWarningSetTableReference
importedRegion
inCalcEngineMode
inDynamicLayoutMode
inFindReplaceMode
inInvalidate
inPrintPreviewMode
inString
includeUidTractList
includedUidsTract
includesPrefixes
increment
incrementCellCountAtIndex:byAmount:
incrementCellCountsAtCellID:
incrementValueForKey:
incrementVersionCounter
index
indexForSelection:
indexForValue:
indexGreaterThanIndex:
indexIsAffected:
indexLessThanIndex:
indexLessThanOrEqualToIndex:
indexOfAnnotation:
indexOfGroupingColumn:
indexOfObject:
indexOfObjectIdenticalTo:
indexOfVisibleAfterAndIncludingIndex:
indexOfVisibleAfterIndex:
indexOfVisibleBeforeAndIncludingIndex:
indexOfVisibleBeforeIndex:
indexOfVisibleColumnAfterAndIncludingColumnAtIndex:
indexOfVisibleColumnAfterColumnAtIndex:
indexOfVisibleColumnBeforeAndIncludingColumnAtIndex:
indexOfVisibleColumnBeforeColumnAtIndex:
indexOfVisibleRowAfterAndIncludingRowAtIndex:
indexOfVisibleRowAfterRowAtIndex:
indexOfVisibleRowBeforeAndIncludingRowAtIndex:
indexOfVisibleRowBeforeRowAtIndex:
indexSet
indexSetBySubtractingOurIndexesFromIndexSet:
indexSetWithIndex:
indexSetWithIndexesInRange:
indexesForBaseCellRegion:
indexesForBodyAndFooterRows
indexesForBodyRowsInGroupWithRowAtIndex:
indexesForCategoryColumns
indexesForCategoryColumnsInRegion:
indexesForColumnsContainedByGroupUIDs:
indexesForGrandTotalColumns
indexesForGrandTotalRows
indexesForGroupingColumns
indexesForGroupingColumnsInRegion:
indexesForLabelRows
indexesForLabelRowsAtGroupLevel:
indexesForLabelRowsAtGroupLevel:inRegion:
indexesForLabelRowsInRegion:
indexesForLabelRowsUpToGroupLevel:omitGroupsWithUids:
indexesForLeadingColumns
indexesForLeadingColumnsAtGroupLevel:
indexesForLeadingColumnsInRegion:
indexesForLeadingRows
indexesForLeadingRowsAtGroupLevel:
indexesForLeadingRowsInRegion:
indexesForLeadingSummaryColumnsAtGroupLevel:
indexesForLeadingSummaryRows
indexesForLeadingSummaryRowsAtGroupLevel:
indexesForNonSummaryBodyRows
indexesForRange:
indexesForRowsContainedByGroupUIDs:
indexesForSummaryAndLabelRows
indexesForSummaryAndLabelRowsInRegion:
indexesForSummaryColumns
indexesForSummaryColumnsAtGroupLevel:
indexesForSummaryColumnsFromGroupLevel:toGroupLevel:
indexesForSummaryColumnsInRegion:
indexesForSummaryRows
indexesForSummaryRowsAtGroupLevel:
indexesForSummaryRowsAtGroupLevel:inRegion:
indexesForSummaryRowsFromGroupLevel:toGroupLevel:
indexesForSummaryRowsInRegion:
indexesForSummaryRowsUpToGroupLevel:omitGroupsWithUids:
indexesOfCollapsedColumnsInCellRange:
indexesOfCollapsedInRange:
indexesOfCollapsedRowsInCellRange:
indexesOfFilteredColumnsInCellRange:
indexesOfFilteredInRange:
indexesOfFilteredRowsInCellRange:
indexesOfGroupUidsInUids:
indexesOfHiddenColumnsInBaseCellRange:
indexesOfHiddenColumnsInCellRange:
indexesOfHiddenInBaseRange:
indexesOfHiddenInRange:
indexesOfHiddenRowsInBaseCellRange:
indexesOfUserHiddenColumnsInCellRange:
indexesOfUserHiddenInRange:
indexesOfUserHiddenRowsInCellRange:
indexesOfUserVisibleInRange:
indexesOfUserVisibleRowsInCellRange:
indexesOfVisibleColumnsInCellRange:
indexesOfVisibleColumnsInCellRegion:
indexesOfVisibleColumnsInColumnRange:
indexesOfVisibleInRange:
indexesOfVisibleIndexesInIndexes:
indexesOfVisibleRowsInCellRange:
indexesOfVisibleRowsInCellRegion:
indirectAggTypeChangeFormulaCoord
indirectErrorForRangeReference:hostTableUID:
individualWarnings
inflateFromStorageRef:dataStore:
inflateFromStorageRef:dataStore:cache:
inflateFromStorageRef:dataStore:suppressingTransmutation:
info
infoForSelectionPath:
infoGeometry
infos
init
initAffineWithMappings:xs:ys:xDimension:
initAsBadRefWithTableUID:uidTractList:
initAsCopyOf:intoContext:children:
initAsDetailTableWithContext:sourcePivotTableInfo:pivotSourceCell:
initAsEmptyAggregate
initAsFullTupleForColumnHeaderUid:rowHeaderUid:aggregateRuleUid:flatteningDimension:
initAsPivotDataWithContext:tableInfo:sourceModel:sourceBody:sourceHeader:
initAsRootNodeForContext:
initAsRootNodeForGroupBy:
initByCopyingASTNodeArray:atFormulaCoord:
initDefaultPropertyMap:forTableStyleArea:presetID:colors:alternate:
initDefaultPropertyMap:presetID:colors:alternate:
initDefaultStrokePresetListInPropertyMap:presetID:colors:
initForCategoriesWithColumnUid:aggregateType:level:
initForCategorizedTableBaseToChromeRewriterWithSrcTableUID:srcTract:dstTableUID:destTract:coordMapper:
initForCategorizedTableChromeToBaseRewriterWithSrcTableUID:srcTract:dstTableUID:destTract:coordMapper:srcCoordMapper:fromTableUID:
initForGroupBy:groupNodeUIDReassignment:
initForGroupBy:withGroupByChange:
initForInsertingRowsOrColumnsIntoTable:rowColumnUuids:areRows:
initForMergeCellsWithTableUID:columnUids:rowUids:mergeSource:
initForMergeOriginsMovedWithMap:reverseMap:inTableUID:
initForMovingRegionWithSrcTableUID:srcTract:dstTableUID:destTract:
initForMovingRowsOrColumnsInTable:rowColumnUuids:shuffleMap:areRows:srcTract:destTract:
initForPastingCellsWithTableUID:columnUids:rowUids:
initForPivotDataTableWithMapper:
initForPivotWithColumnAggregateUid:columnUid:aggregateType:showAsType:runningTotalGroupingColumnUid:
initForPivotWithColumnUid:aggregateType:
initForPivotWithColumnUid:aggregateType:showAsType:runningTotalGroupingColumnUid:
initForRemoveRowsOrColumnsFromTable:rowColumnUuids:areRows:
initForReorderRowsWithTableUID:rowUids:shuffleMap:
initForSortWithTableUID:rowUids:shuffleMap:
initForTableUIDReassignment:
initForTestingWithContext:rows:columns:
initForUndoMergeCellsWithTableUID:columnUids:rowUids:mergeSource:
initForUpgradeWithTableInfo:cellRegion:anchorCellID:cursorCellID:baseRegion:selectionType:
initForUpgradeWithTableModel:
initFromArchive:
initFromArchive:dependencyTracker:
initFromArchive:ownerUID:
initFromArchive:unarchiver:
initFromArchive:unarchiver:owner:
initFromCell:useAllSpareFormats:
initFromCell:useAllSpareFormats:forceNoContent:suppressApplyValue:applySpareFormatOnly:
initFromCommandPropertyMapMessage:unarchiver:
initFromExpandedArchive:
initFromMessage:
initFromMessage:unarchiver:
initFromPrePivotArchive:
initFromPropertyCommandMessage:unarchiver:
initNonAffineWithMappings:xs:ys:xDimension:desiredIntercept:
initObjectWithCellSpec:refCount:
initObjectWithCommentStorage:refCount:
initObjectWithConditionalStyleSet:refCount:
initObjectWithCustomFormat:refCount:
initObjectWithFormat:refCount:
initObjectWithFormulaError:refCount:
initObjectWithImportWarningSet:refCount:
initObjectWithPopUpMenuModel:refCount:
initObjectWithRichTextPayload:refCount:
initObjectWithString:refCount:
initObjectWithStyle:refCount:
initPivotTableWithContext:sourceTableInfo:
initPivotTableWithContext:sourceTableInfo:sourceBodyRange:sourceHeaderRowRange:
initPivotTableWithContext:sourceTableInfo:sourceBodyRange:sourceHeaderRowRange:optionalDataModel:
initRuleWhereValuesInTable:andDataList:inBaseColumn:matchCell:
initShallowMapWithContext:uidBased:
initWitRefValue:rangeContext:
initWithAbsoluteTractRef:hostCell:
initWithArchive:
initWithArchive:aggregator:
initWithArchive:forCategoryOwner:unarchiver:
initWithArchive:forGroupBy:
initWithArchive:groupBy:
initWithArchive:isPreUFF:
initWithArchive:locale:
initWithArchive:unarchiver:
initWithArchive:unarchiver:forBaseTable:
initWithArchive:unarchiver:forBaseTableUID:
initWithArchive:unarchiver:forHiddenStatesOwner:
initWithArchive:unarchiver:forTableModel:
initWithArchive:unarchiver:owner:
initWithArray:
initWithArray:context:
initWithArray:copyItems:
initWithAttributes:
initWithBase:basePlaces:baseUseMinusSign:
initWithBaseCellRef:preserveFlags:
initWithBaseCellReference:preserveColumn:preserveRow:
initWithBaseIndex:direction:
initWithBaseTable:
initWithBaseTableModel:
initWithBaseTableUID:
initWithBaseTableUID:ownerUID:
initWithBaseTractRef:calcEngine:
initWithBool:
initWithBoolean:locale:
initWithBooleanValue:locale:
initWithBucket:owner:
initWithBytes:length:encoding:
initWithCalcEngine:
initWithCalcEngine:baseRangeRef:preserveFlags:
initWithCalcEngine:chromeRangeRef:preserveFlags:
initWithCalcEngine:forMinion:options:
initWithCalcEngine:tableUID:uidRange:preserveFlags:
initWithCalcEngine:viewRangeRef:preserveFlags:
initWithCalcEngine:viewTractRef:
initWithCalculationEngine:baseHostCell:hostTable:
initWithCalculationEngine:expressionTree:baseHostCell:hostTable:
initWithCalculationEngine:viewHostCell:hostTable:
initWithCalendarIdentifier:
initWithCalendarIdentifier:timeZone:
initWithCapacity:
initWithCategoryRef:
initWithCellCoord:tableID:
initWithCellCoord:tableUID:
initWithCellID:dirtyPrecedentCount:
initWithCellMap:
initWithCellRef:
initWithCellRefVector:
initWithCellRegion:
initWithCellStyle:
initWithCellUIDList:
initWithCellUIDRange:
initWithCellUIDRangeVector:
initWithCellValue:
initWithChangeDescriptorType:cellRegion:cellID:strokeRegion:referenceIdentifiers:shuffleMapping:
initWithChangeDescriptorType:cellRegion:cellID:strokeRegion:referenceIdentifiers:shuffleMapping:annotations:
initWithChromeTractRef:calcEngine:
initWithCollapsed:expanded:dimension:
initWithColor:width:cap:join:pattern:
initWithColumn:context:
initWithColumn:forGroupBy:
initWithColumnAggregateUid:columnUid:aggregateType:level:showAsType:runningTotalGroupingColumnUid:
initWithColumnAggregates:
initWithColumnIndex:groupingType:inTableInfo:
initWithColumnRange:rowRange:
initWithColumnRowUIDMap:
initWithColumnUid:rowUid:purpose:
initWithColumnUids:rowUids:purpose:
initWithColumns:rows:tableUID:
initWithCommentStorage:
initWithComponents:aggregateFunction:
initWithConditionalStyleSet:
initWithContext:
initWithContext:affectsCellBorders:
initWithContext:argumentSpec:firstIndex:lastIndex:
initWithContext:asBlank:firstIndex:lastIndex:
initWithContext:boolValue:firstIndex:lastIndex:
initWithContext:calcEngine:
initWithContext:calculationEngine:
initWithContext:calculationEngine:baseHostCell:formula:ownerUID:
initWithContext:calculationEngine:baseHostCell:formula:ownerUID:suppressAutomaticNamedReferenceInvalidation:
initWithContext:calculationEngine:baseRangeRef:preserveFlags:hostCellRef:referenceColorHelper:suppressAutomaticNamedReferenceInvalidation:
initWithContext:calculationEngine:categoryRef:hostCellRef:referenceColorHelper:
initWithContext:calculationEngine:chromeRangeRef:preserveFlags:hostCellRef:referenceColorHelper:suppressAutomaticNamedReferenceInvalidation:
initWithContext:calculationEngine:uidRectRef:categoryRef:hostCellRef:referenceColorHelper:suppressAutomaticNamedReferenceInvalidation:
initWithContext:calculationEngine:uidRectRef:hostCellRef:referenceColorHelper:suppressAutomaticNamedReferenceInvalidation:
initWithContext:calculationEngine:viewHostCell:formula:ownerUID:
initWithContext:calculationEngine:viewHostCell:formula:ownerUID:suppressAutomaticNamedReferenceInvalidation:
initWithContext:calculationEngine:viewRangeRef:preserveFlags:hostCellRef:referenceColorHelper:suppressAutomaticNamedReferenceInvalidation:
initWithContext:cell:cellIDList:
initWithContext:cell:cellUIDList:
initWithContext:cell:cellUIDList:skipCellUIDListCopy:
initWithContext:cellDiff:cellUIDList:
initWithContext:cellDiffArray:cellUIDList:uidBased:
initWithContext:cellUIDRange:
initWithContext:children:
initWithContext:children:columns:rows:firstIndex:lastIndex:
initWithContext:children:firstIndex:lastIndex:
initWithContext:columnOrRowIndex:
initWithContext:columnUIDs:rowUIDs:
initWithContext:dateValue:firstIndex:lastIndex:
initWithContext:dependencyTracker:ownerID:ownerUID:owner:ownerIndex:
initWithContext:durationInterval:durationFormat:firstIndex:lastIndex:
initWithContext:firstIndex:lastIndex:
initWithContext:fromDictionary:withPreset:
initWithContext:fromSourceInfo:cellRegion:waitForCalcEngine:flattenCategories:isSnapshot:
initWithContext:fromSourceModel:region:tableInfo:waitForCalcEngine:
initWithContext:fromSourceModel:region:tableInfo:waitForCalcEngine:formulaCoordSpace:
initWithContext:functionIndex:children:firstIndex:lastIndex:
initWithContext:functionNode:firstIndex:lastIndex:
initWithContext:geometry:
initWithContext:geometry:rows:columns:
initWithContext:geometry:rows:columns:stylePreset:
initWithContext:geometry:rows:columns:stylePreset:styles:
initWithContext:hint:
initWithContext:identifier:firstIndex:lastIndex:
initWithContext:identifier:symbol:firstIndex:lastIndex:
initWithContext:majorStrokeLayer:minorStrokeLayer:
initWithContext:name:overridePropertyMap:isVariation:
initWithContext:number:locale:firstIndex:lastIndex:
initWithContext:number:string:firstIndex:lastIndex:
initWithContext:operatorChar:children:firstIndex:lastIndex:
initWithContext:ownerUID:
initWithContext:rowUids:columnUids:styles:stylePreset:tableInfo:
initWithContext:rows:columns:styles:stylePreset:tableInfo:
initWithContext:rules:
initWithContext:storage:
initWithContext:string:kind:stylesheet:paragraphStyle:listStyle:section:columnStyle:
initWithContext:string:kind:stylesheet:paragraphStyle:listStyle:section:columnStyle:paragraphDirection:
initWithContext:string:locale:firstIndex:lastIndex:
initWithContext:string:stylesheet:kind:
initWithContext:stringValue:firstIndex:lastIndex:
initWithContext:styleProvider:
initWithContext:styleProvider:presetID:
initWithContext:tableInfo:
initWithContext:tableInfo:pencilAnnotationStorage:
initWithContext:tableInfo:rowUids:
initWithContext:tableInfo:rowUids:columnUids:
initWithContext:tableUID:columnRowUIDMap:styles:stylePreset:tableInfo:
initWithContext:tableUUID:numberOfRows:numberOfColumns:
initWithContext:uidBased:
initWithContext:uidBased:affectsCellBorders:
initWithContext:url:
initWithContext:viewCellRect:
initWithContext:viewCellRect:cellUIDRange:
initWithContextResolver:
initWithContextResolver:components:
initWithContextTableResolver:
initWithContextTableResolver:components:
initWithCoordinator:
initWithCopyOfMajorStrokes:andMinorStrokes:
initWithCount:atOffset:layoutDirectionIsLeftToRight:
initWithCppCellTractRef:
initWithCreator:
initWithCreator:argInfo:translationFlags:
initWithCreator:translationFlags:
initWithCriterion:functionSpec:evaluationContext:
initWithCrossTableRef:
initWithData:
initWithDataList:
initWithDataStore:
initWithDate:
initWithDate:locale:
initWithDateValue:locale:
initWithDecimal:locale:
initWithDecimalPlaces:negativeStyle:showSeparator:accountingStyle:currencyCode:
initWithDefaultStrokeProvider:customStrokeProvider:tableInfo:
initWithDelegate:
initWithDependencyTracker:
initWithDeprecatedArchive:unarchiver:
initWithDictionary:
initWithDouble:locale:
initWithDuration:units:
initWithDynamicResizeInfo:
initWithErrorType:
initWithErrorValue:locale:
initWithExpressionNode:parenNestingLevel:
initWithExpressionNode:parenNestingLevel:argumentIndex:
initWithFilterRules:type:context:
initWithFirst:second:third:fourth:
initWithFlags:sortingAggregateRuleUid:
initWithFormatString:
initWithFormatType:customFormatKey:customFormat:
initWithFormatType:decimalPlaces:negativeStyle:showSeparator:
initWithFormulaCoord:groupNode:aggregator:
initWithFormulaObject:fromTableInfo:fromCellID:
initWithFormulaObject:locale:
initWithFormulaOwnerUID:
initWithFormulaOwnerUID:uuids:areRows:
initWithFormulaPredicate:
initWithFractionAccuracy:
initWithFrame:
initWithFunctionIndex:symbol:attribute:year:month:day:
initWithFunctionName:minArgs:maxArgs:repeatingGroupSize:isOperator:shipVersion:arguments:functionIndex:
initWithGrids:
initWithGroupBySet:
initWithGroupByUID:absGroupUid:columnUid:aggType:groupLevel:
initWithGroupByUID:absGroupUid:columnUid:aggType:groupLevel:aggrIndexLevel:
initWithGroupByUID:relGroupUID:absGroupUid:columnUid:aggType:groupLevel:aggrIndexLevel:preserveFlags:
initWithGroupByUID:relGroupUID:absGroupUid:columnUid:aggType:groupLevel:aggrIndexLevel:preserveFlags:relativeColumn:options:
initWithGroupByUid:groupNodeUIDMap:
initWithGroupCellValue:context:atLevel:groupUid:children:
initWithGroupCellValue:groupBy:atLevel:groupUid:children:
initWithGroupRules:withTableInfo:
initWithGroupingColumnUID:columnUID:direction:
initWithGroupingColumnUid:columnUid:groupingType:
initWithGroupingColumns:
initWithGroupings:categoryOwner:
initWithGroupings:categoryOwner:groupByUid:ownerIndex:
initWithGroupings:isEnabled:categoryOwner:groupByUid:ownerIndex:
initWithHeaderNameMgr:context:
initWithHeaderNameMgr:limitToTableUID:
initWithHiddenStatesOwner:
initWithHiddenStatesOwner:forRows:
initWithHiddenStatesOwner:shouldRegister:
initWithIdentityMapping
initWithImageData:
initWithImageData:technique:tintColor:size:
initWithIndex:baseColumnIndex:rules:
initWithIndexSet:
initWithIndexesInRange:
initWithInfo:
initWithInfo:frame:
initWithInfo:layoutEngineBundle:
initWithInfo:layoutHint:
initWithInfo:region:flags:searchMask:
initWithInitialCapacity:
initWithInitialValue:multipleChoiceListFormatID:popupModel:
initWithInt:
initWithInteractionType:minimum:maximum:increment:
initWithItems:context:
initWithKeyOptions:valueOptions:capacity:
initWithKeyboardShown:
initWithLayout:canvas:
initWithLayout:range:flags:searchFlags:
initWithLayoutEngine:
initWithLayoutEngine:columnRegion:
initWithLayoutEngine:columnRegion:rowRegion:
initWithLayoutEngine:range:flags:searchFlags:
initWithLayoutTask:
initWithLeftAnchor:rightAnchor:isVertical:
initWithLimit:
initWithLiteralDateType:date1:date2:number1:number2:qualifier1:qualifier2:argumentCellRef:hostCell:
initWithLiteralDateType:date1:date2:number1:number2:qualifier1:qualifier2:argumentCellRef:hostCell:forConditionalStyle:
initWithLiteralDurationType:duration1:durationUnits1:duration2:durationUnits2:qualifier:argumentCellRef:hostCell:
initWithLiteralNumberType:number1:number2:qualifier:argumentCellRef:hostCell:
initWithLiteralTextType:string:argumentCellRef:hostCell:
initWithLocaleIdentifier:
initWithMask:horizontalStroke:verticalStroke:exteriorStroke:
initWithMergeList:
initWithMergeOriginsMap:reverseMap:
initWithMergeRegion:mergeSource:
initWithMergedStack:
initWithMessage:unarchiver:
initWithModel:region:flags:searchMask:
initWithName:
initWithName:formatType:data:
initWithNodeArray:
initWithNodeArray:translationFlags:
initWithNodeArray:translationFlags:hostTableUID:hostColumnUID:hostRowUID:
initWithNotBlankColumnGroupsWithContext:withPivotTable:
initWithNotBlankRowGroupsWithContext:withPivotTable:
initWithNotifyType:group:
initWithNotifyType:group:rowUid:
initWithNumRows:andNumColumns:
initWithNumberOfSortRules:
initWithNumberValue:locale:
initWithObjects:
initWithObjectsAndKeys:
initWithOwner:
initWithOwnerDeletion:
initWithOwnerId:context:
initWithOwnerId:tileColumnBegin:tileRowBegin:context:
initWithOwnerInsertion:fromOwnerUID:
initWithOwnerUID:
initWithOwnerUID:archive:unarchiver:
initWithPadding:verticalAlignment:locale:shouldHyphenate:
initWithPattern:options:error:
initWithPbRange:tgtRange:
initWithPbTable:pbRange:tgtTable:tgtRange:flag:
initWithPivotRuleChange:
initWithPivotTable:minion:preservingStyles:
initWithPivotTableUID:
initWithPopupModel:startWithFirstItem:
initWithPosition:size:
initWithPosition:size:widthValid:heightValid:horizontalFlip:verticalFlip:angle:
initWithPredicate:cellStyle:textStyle:
initWithPredicateType:arg0:arg1:arg2:qualifier1:qualifier2:forConditionalStyle:
initWithPredicateType:arg1:arg2:qualifier1:qualifier2:argumentCellRef:hostCell:
initWithPredicateType:arg1:arg2:qualifier1:qualifier2:argumentCellRef:hostCell:forConditionalStyle:
initWithPredicateType:arg1:arg2:qualifier1:qualifier2:argumentCellReference:hostCell:forConditionalStyle:
initWithProperties:
initWithPropertiesAndValues:
initWithPurpose:
initWithRange:hintId:partitionPosition:maximumSize:effectiveSize:layout:validity:horizontal:
initWithRange:orderedUuids:offset:
initWithRangeCoord:tableID:
initWithRangeCoord:tableUID:
initWithRangeRef:
initWithRangeRef:hostCell:
initWithRangeRefRect:tableID:
initWithRawString:
initWithRdar39989167Archive:unarchiver:
initWithRefCount:
initWithReferenceSet:
initWithReferenceStart:referenceEnd:suppressAutomaticNamedReferenceInvalidation:
initWithReferenceString:
initWithRegexString:caseSensitive:entireMatch:
initWithRelativeCellRef:
initWithRewriteType:
initWithRows:context:
initWithRows:shouldUseWideRows:context:
initWithRules:type:
initWithSecondsTillAbort:
initWithSize:hidingAction:cellStyle:textStyle:columnRowUID:
initWithSize:offset:renderBlock:
initWithSourceCellRange:
initWithSourceCellRange:targetCellRange:
initWithSourceRectOrigin:cellUIDRange:
initWithSpanningRangeRef:
initWithSpecifierArray:
initWithSpecifiers:
initWithSrcTableUID:srcTract:dstTableUID:destTract:
initWithStartIndex:endIndex:
initWithStartingTileID:
initWithStorage:
initWithStorage:cellID:frame:
initWithStorage:forTableInfo:baseCellCoord:
initWithStorage:forTableInfo:cellUID:
initWithStorageRef:dataStore:
initWithString:caseSensitive:entireMatch:
initWithString:locale:
initWithString:width:height:paragraphStyle:cellWraps:valueType:paddingInsets:verticalAlignment:writingDirection:naturalAlignment:styleProvidingSource:
initWithStringValue:locale:
initWithStroke:range:order:andPosition:
initWithStroke:range:order:majorStrokeLayerToken:minorStrokeLayerToken:
initWithStrokeProvider:tableProvider:tableInfo:
initWithStrokeSidecar:region:
initWithStrokeVisibilityMask:
initWithStyle:andPropertyMap:
initWithStyleNetwork:
initWithStylesheet:
initWithStylesheet:paragraphStyle:listStyle:columnStyle:alignmentForNaturalAlignment:naturalDirection:
initWithSymbol:attribute:
initWithTSCEValues:locale:
initWithTSUUUIDVector:
initWithTableInfo:
initWithTableInfo:andCellID:
initWithTableInfo:andPreviousSelection:offsetBy:
initWithTableInfo:baseTableUID:context:
initWithTableInfo:cellID:selectionType:
initWithTableInfo:cellRange:type:anchorCellID:cursorCellID:
initWithTableInfo:cellRegion:
initWithTableInfo:cellRegion:anchorCellID:cursorCellID:
initWithTableInfo:cellRegion:anchorCellID:cursorCellID:baseRegion:
initWithTableInfo:cellRegion:anchorCellID:cursorCellID:baseRegion:selectionType:
initWithTableInfo:cellRegion:anchorCellID:cursorCellID:baseRegion:selectionType:searchReferenceRange:beginImplicitEditing:
initWithTableInfo:cellRegion:anchorCellID:cursorCellID:selectionType:
initWithTableInfo:cellUIDRegion:anchorCellUID:cursorCellUID:baseCellUIDRegion:selectionType:searchReferenceRange:beginImplicitEditing:
initWithTableInfo:columnIndices:
initWithTableInfo:flags:searchFlags:
initWithTableInfo:pencilAnnotationStorage:
initWithTableInfo:range:flags:searchFlags:
initWithTableInfo:region:clampingViewRect:flags:searchFlags:
initWithTableInfo:region:flags:searchFlags:
initWithTableInfo:region:flags:searchFlags:clampingRange:
initWithTableInfo:region:forcingRegion:flags:searchFlags:
initWithTableInfo:rowIndices:
initWithTableInfo:rowOrColumn:index:count:
initWithTableInfo:rowUids:
initWithTableInfo:rowUids:columnUids:
initWithTableInfo:selectionType:
initWithTableInfo:startingColumnIndex:numberOfColumns:
initWithTableInfo:startingRowIndex:numberOfRows:
initWithTableInfo:tableModel:region:flags:searchFlags:clampingRange:
initWithTableInfo:tableModel:region:forcingRegion:clampingRect:flags:searchFlags:
initWithTableModel:
initWithTableModel:baseRegion:flags:searchFlags:
initWithTableModel:baseRegion:flags:searchFlags:baseClampingRange:
initWithTableModel:ownerUID:
initWithTableModel:ownerUID:annotations:formulaStore:
initWithTableResolver:topLeft:bottomRight:preserveFlags:
initWithTableResolver:tractRefCore:
initWithTableUID:
initWithTableUID:beforeViewColumnRowUIDMap:beforeRewriteMap:
initWithTableUID:columnUids:rowUids:
initWithTableUID:condStyleOwnerUID:groupByUID:uuids:atIndexes:areRows:
initWithTableUID:ownerUID:
initWithTableUID:pasteBoardTableUID:hiddenStateOwnerForRowsUID:hiddenStateOwnerForColumnsUID:conditionalStyleOwnerUID:sortRuleReferenceTrackerOwnerUID:mergeOwnerUID:pencilAnnotationOwnerUID:categoryAggregatesOwnerUID:groupByUID:
initWithTableUID:summaryColumns:summaryRows:labelRows:
initWithTableUID:summaryRows:labelRows:
initWithTableUID:uidTractList:
initWithTableUIDMap:
initWithTextMeasurerBundle:
initWithTextStyle:
initWithTileRowIndex:wideOffsets:
initWithTimeIntervalSinceNow:
initWithTimeIntervalSinceReferenceDate:
initWithTimeout:
initWithTopInset:leftInset:bottomInset:rightInset:
initWithTopLeft:bottomRight:
initWithTopLeft:bottomRight:tableUID:
initWithTrackedReferenceTSPObjectDeprecated:
initWithTract:tableUID:preserveFlags:
initWithTract:tableUID:preserveFlags:columnGroupLevel:rowGroupLevel:aggrIndexLevel:
initWithTransposeTable:transposedBodyRange:numberOfFooterRows:
initWithType:
initWithType:context:
initWithType:groupByUid:
initWithType:groupingColumnChanges:groupByUid:
initWithType:keyRange:context:
initWithType:range:styleInsertionBehavior:caretAffinity:smartFieldRange:caretIsLeadingEdge:leadingCharIndex:
initWithType:range:styleInsertionBehavior:caretAffinity:smartFieldRange:caretIsLeadingEdge:leadingCharIndex:activeTokenCharIndex:
initWithType:range:validVisualRanges:styleInsertionBehavior:caretAffinity:smartFieldRange:caretIsLeadingEdge:leadingCharIndex:headCharIndex:tailCharIndex:activeTokenCharIndex:
initWithType:ranges:validVisualRanges:styleInsertionBehavior:caretAffinity:smartFieldRange:caretIsLeadingEdge:leadingCharIndex:headCharIndex:tailCharIndex:
initWithType:uidRange:
initWithType:uidRanges:
initWithUTF8String:
initWithUUID:
initWithUUIDSet:
initWithUUIDString:
initWithUUIDVector:
initWithUidTract:calcEngine:tableUID:
initWithUids:
initWithUids:atIndexes:
initWithUnsignedInt:
initWithUseAutomaticUnits:durationUnitSmallest:durationUnitLargest:durationStyle:
initWithValue:
initWithValueArray:
initWithValueGrid:
initWithValueVector:
initWithValues:gridKind:
initWithValues:gridKind:isFlattened:
initWithValues:gridKind:isFlattened:dimensions:
initWithViewIndex:direction:
initWithViewTractRef:
initialCharIndex
initialGroupOrderForGroupBy:baseLevel:outAllUids:outBaseUids:outSummaryUids:
initialInfoGeometry
initialValue
initialWhitespace
initialize
inlineTableWidth
inlineWithText
inlineWithTextWithWrap
insert:atIndex:count:
insertAnyRef:
insertAtUid
insertAttachmentOrFootnote:range:
insertAttachmentOrFootnote:range:dolcContext:undoTransaction:changeSession:
insertBaseMergeRange:
insertBaseMergeRangeRemovingOverlaps:
insertBaseRange:
insertBezierPath:gridRange:transform:inset:reoriginToZero:
insertCellRef:
insertClearedStrokeAtRange:
insertColumnGapsAtIndexes:
insertColumns:
insertColumnsAtColumnIndex:numberOfColumns:
insertColumnsAtIndex:count:
insertColumnsAtIndex:count:addBefore:
insertColumnsAtIndex:uids:metadatas:tableArea:
insertColumnsWithUIDs:atIndex:
insertDynamicStroke:strokeOrder:atRange:
insertFoldedName:
insertFormulaText:includeWhitespace:
insertFormulaText:includeWhitespace:unwrapped:
insertName:
insertNewColumnsInBaseRange:
insertNewColumnsInIndexRange:
insertNewRowsInBaseRange:
insertNewRowsInIndexRange:
insertObject:atIndex:
insertObjects:atIndexes:
insertOppositeUid
insertRange:
insertRefs:
insertRowGapsAtIndexes:
insertRowUid:atRowIndex:forGroupValue:
insertRowUid:atRowIndex:forGroupValueTuple:atLevel:withLocale:createdGroupNodeCount:
insertRowUids:
insertRowUids:beforeUid:
insertRows:
insertRowsAtIndex:count:
insertRowsAtIndex:count:addBefore:
insertRowsAtIndex:uids:metadatas:tableArea:
insertRowsAtIndex:uids:metadatas:tableArea:unsetFilterHidingAction:
insertRowsAtTileRowIndex:numberOfRows:
insertRowsInBaseRange:uids:metadata:unsetFilterHidingAction:
insertRowsWithUIDs:atIndex:
insertSpaceAtRange:
insertSpanningRangeRef:
insertSpecifier:
insertSpecifiersFromArray:
insertSpecifiersFromSet:
insertSpillStroke:atRange:
insertStorage:atCharIndex:dolcContext:undoTransaction:
insertString:atCharIndex:undoTransaction:
insertString:atIndex:
insertStroke:inRange:order:
insertTab:
insertUIGraphicalAttachment:
insertUIGraphicalAttachment:withLanguage:
insertUids:beforeUid:forDimension:
inset
inspectorGeometry
inspectorGeometryIsAffectedByChangeRecord:
intForKey:
intValue
intValueForProperty:
integerValue
integrateReservedPrecedents
intendToChangePrecedent:
interactionTypeForShimControlFormatType:
interactionTypeFromTheFuture
interactionTypeIsControl:
interestingCells
internalFormulaOwnerIDForFormulaOwnerUID:
internetReachability
internetReachabilityStatusWithQueue:completion:
intersectSet:
intersectWithCellRect:
intersectWithCellRectIgnoringSpanning:
intersectingColumnsInRow:
intersectingColumnsIndexSet
intersectingRowsIndexSet
intersectionCellRange:
intersectionColumnGridRange:ofLayoutSpace:
intersectionGridRange:ofLayoutSpace:
intersectionRowGridRange:ofLayoutSpace:
intersectionWithCellRect:
intersectsCellRange:
intersectsCellRegion:
intersectsColumn:
intersectsColumnGridRange:
intersectsGridRange:
intersectsIndexesInRange:
intersectsModelCellRect:
intersectsPartialMergeRangeInTable:
intersectsRow:
intersectsRowGridRange:
intersectsSet:
invalidAggregateColumnErrorForFunctionName:argumentNumber:
invalidAttributeErrorValue
invalidCellRef
invalidColumnIndex
invalidCurrencyPairError
invalidDateManipulationError
invalidFunctionName
invalidGroupingColumnErrorForFunctionName:argumentNumber:
invalidHistoricalCurrencyAttributeError
invalidHistoricalDateError
invalidHistoricalStockAttributeError
invalidLiveCurrencyAttributeError
invalidLiveStockAttributeError
invalidMergeReference:contextEntityUID:
invalidReferenceError
invalidReferenceNameAttributeError
invalidReferenceToMerge
invalidRegion
invalidStockCodeError:
invalidSymbolErrorValue
invalidTableOffset
invalidate
invalidateAllChrome
invalidateAllChromeCaches
invalidateAllCollapsed
invalidateBandedFill
invalidateChildren
invalidateClearedStrokesInRange:
invalidateColumnChrome
invalidateCoordinates
invalidateCoordinatesAfterColumn:
invalidateCoordinatesAfterRow:
invalidateCoordinatesForEditingCellID:
invalidateCustomStrokes
invalidateDefaultFontHeights
invalidateDynamicResizeInfo
invalidateDynamicStrokes
invalidateDynamicStrokesInRange:
invalidateEditingCell
invalidateExteriorWrap
invalidateForAutosizingTextLayout:
invalidateForCalcEngine:
invalidateForChangingIndexes:isRow:forTable:
invalidateForPageCountChange
invalidateFrozenHeaders
invalidateLayoutSpaceCoordinates
invalidateLayoutSpaceCoordinatesAfterColumn:
invalidateLayoutSpaceCoordinatesAfterRow:
invalidateLayoutSpaceTableOffsets
invalidateObjectsWithKeysInCellRange:
invalidateObjectsWithKeysInCellRegion:
invalidatePosition
invalidateRange:
invalidateRowChrome
invalidateSelection
invalidateSize
invalidateSpillStrokes
invalidateStrokeDefaults
invalidateStrokeSpills
invalidateTableName
invalidateTableNameHeight
invalidateTableNameVisibility
invalidateTableOffset
invalidateTableOffsets
invalidateTextLayout
invalidateViewGeometry
invalidatedForEditingCell
inverseMergeActions
invertedSet
isAPivotDataModel
isAPivotTable
isAborted
isAbortedError
isActive
isAllInvalid
isAllowedToAddCaptionToChildInfo:
isAncestorOf:
isAnchoredAtRight
isAnchoredToText
isApplySpareFormatOnly
isAtEndOfLine
isAttachedToBodyText
isBadRef
isBeingManipulated
isBlankForKeyboardInsertion
isBlankGroupUid:
isBlankNode
isBoolValueInList:
isCanvasInteractive
isCategorized
isCategoryAnyKindOfCell:
isCategoryColumn:
isCategoryGroupValueCell:
isCategoryGroupValueLabelCell:
isCategoryGroupingColumn:
isCategoryLabelCell:
isCategoryLastSummaryRowCollapsed
isCategoryRef
isCategorySummaryRef
isCellRangeHidden:
isCellReferenceDirty:
isCellValueInList:
isCircularReference
isCircularReferenceError
isClosing
isCold
isColumnGroupUIDCollapsed:
isColumnOrderTemporary
isColumns
isConnected
isControl
isCopyContainingCategoryColumn
isCorner
isCurrency
isDateValueInListYear:month:day:
isDefaultsOnly
isDeferringGroupByChangeNotifications
isDescendantOfChild:
isDoneDirtying
isDraggable
isDrawable
isDrawingInFlippedContext
isDrawingIntoPDF
isDurationValueInList:
isDynamicallyChangingAvailableSpaceForContainedChild
isDynamicallyChangingCellFill
isDynamicallyChangingColumnCount
isDynamicallyChangingContent
isDynamicallyChangingFontColorOfCellID:
isDynamicallyChangingInfoGeometry
isDynamicallyChangingRowCount
isDynamicallyChangingRowOrColumnCount
isDynamicallyChangingSelection
isDynamicallyColumnTabResizing
isDynamicallyHidingContentOfCellID:
isDynamicallyHidingRowsCols
isDynamicallyHidingRowsCols:rowColIndex:
isDynamicallyHidingRowsColsCellID:
isDynamicallyHidingTextOfCellID:
isDynamicallyRemovingText
isDynamicallyRemovingTextOfCellID:
isDynamicallyRepressingFrozenHeaderColumns
isDynamicallyRepressingFrozenHeaderRows
isDynamicallyResizingCellIDForColumnRowAdd:
isDynamicallyResizingForColumnRowAdd:
isDynamicallyResizingForColumnRowAdd:rowColIndex:
isDynamicallyResizingTableName
isDynamicallyRevealingRowsCols
isDynamicallyRevealingRowsCols:rowColIndex:
isDynamicallyRowTabResizing
isDynamicallySettingBandedFill
isEligibleForDefaultsOnlyReplacement
isEmbiggened
isEmptyForArchiving
isEmptyForDataStore
isEmptyForDirtying
isEmptyFunctionNode
isEmptyPivot
isEnabled
isEntireCellRangeHidden:
isEqual:
isEqual:atHostCoord:
isEqualForInspector:
isEqualForInspector:atHostCoordinate:
isEqualToCellValue:
isEqualToChoices:
isEqualToDate:
isEqualToExpressionNode:
isEqualToFormula:
isEqualToIndexSet:
isEqualToLayoutContentCachedKey:
isEqualToNumber:
isEqualToPropertyMap:
isEqualToSelection:
isEqualToSet:
isEqualToStockDetails:
isEqualToString:
isEqualToStroke:
isEqualToStyle:ignoreObjectUUID:
isEqualToTSCEFormulaOwnerWrapper:
isEqualToTimeZone:
isEqualToTrackedReference:
isEqualViaFormattingAsDouble::
isEquivalent:
isEquivalentForCrossDocumentPasteMasterComparison:
isEquivalentForCrossDocumentPasteMasterComparison:objectComparisonBlock:
isEquivalentToFormula:
isEquivalentToFormula:context:thisContainingCell:thatContainingCell:
isErrorGroupUid:
isErrorNode
isErrorReferenceError
isFirstHint
isFixedAtZeroRef
isFloatingAboveText
isFloatingComment
isForCopy
isForDstTable:
isForSrcTable:
isForTable:
isFormula
isFormulaEqualsCharacter:
isFormulaSyntaxError
isFormulaSyntaxErrorEqual:
isFromCalcEngine
isFromCopy
isFrozen
isFullyVisibleWithBorder:
isFunctionNode
isFunctionallyEquivalent:
isGroupCollapsedAndVisible:dimension:
isGroupOrParentsCollapsed:dimension:
isGroupUIDCollapsed:
isGrouped
isGroupedForColumns
isGroupedForRows
isGroupingColumn:
isGroupingColumnCollapsed:
isGroupingColumnCollapsedAndVisible:
isGroupingColumnUidsEqual:
isGroupingRowCollapsed:
isGroupingRowCollapsedAndVisible:
isHidingContentOfCellID:
isHidingGrandTotalColumns
isHidingGrandTotalRows
isHighlight
isHighlighted
isIdentified
isIdentityMapping
isIgnored
isInCollaborationMode
isInCycle
isInDocument
isInDynamicLayoutMode
isInGroup
isInProgressCalcIntCellRef:
isInReadOnlyMode
isIndexHidden:
isInlineWithText
isInlineWithTextWithWrap
isInvalidFunction
isInvalidMergeReference
isInvalidReferenceError
isInverse
isKindOfClass:
isLabelRow
isLabelRow:
isLanguageFormulasDirectionRightToLeft
isLastVisibleBodyRowCategorySummaryOrLabelRow
isLayingOutIntoTarget
isLeaf
isLeftParen:
isLocalReference
isLocked
isMagicMove
isMain
isMainThread
isMaster
isMemberOfClass:
isMismatchedUnitsError
isMissingRequiredArgument
isMissingRunningTotalFieldForAggIndex:
isModeEnabled:functionIndex:
isMostRecentlyExplicitPercent
isMoveRewriteType:
isNativelyEqual:
isNeededWithLayoutEngine:andRange:
isNewForBraveNewCell
isNonSpanningRangeExpression
isNotEmpty
isNumberValueInList:locale:
isObsolete
isOneToMany
isOnlineForDataKind:
isOperator
isOptional
isPendingTableNameUniquification
isPivotAnyKindOfCell:
isPivotGrandTotalColumn:
isPivotGrandTotalRow:
isPivotLeadingColumn:
isPivotLeadingRow:
isPivotTrailingAligned:
isPivotUnwrapped:
isPortalStroke
isPotentiallyTerminating
isPrePivotV2Compatible
isPreservedColumn:preferStart:
isPreservedRow:preferStart:
isPrinting
isRangeExpression
isRangeRef
isRangeWithFunction
isRebuildFormulasDeferred
isRecalculationRunning
isRecalculationStarted
isRectangle
isRectangularRange
isRecursivelyDrawingInContext
isRegisteredWithCalcEngine
isRegisteredWithCalcEngine:
isReimportable
isRelativeAncestorGroupUid:
isRepeat
isResizable
isRightParen:
isRoundDash
isRowGroupUIDCollapsed:
isRowOrderTemporary
isRowUserHidden:
isRows
isSafeToConvertToAttributedString
isSafeToConvertToImage
isSafeToConvertToImageForImagePaste
isSafeToConvertToText
isSelectable
isSelected
isShimControlFormatType:
isSingleCell
isSingleCellOrMergeRange:
isSingleCellOrSpanningRange
isSingleCellWideOrHigh:
isSingleQuote:
isSingleRowSpanningReference
isSkippingRepairBadRefsForOwnerUID:
isSpanningCategoryRef:
isSpanningCategorySummaryRef
isStringValidArgumentToken:
isStringValueInList:
isSubsetOf:
isSubsetOfSet:
isSummaryCell:
isSummaryColumn:
isSummaryOrLabelRow:
isSummaryRow
isSummaryRow:
isSyntaxError
isTableLinkedToAForm:
isTableNameValid
isThemeContent
isThresholdNeededForType:
isTopmostContainerInfo
isUIDBased
isUniquesOrDuplicates
isUnsupportedFeatureError
isUnsupportedFunctionError
isValidCategoryRef:
isValidForCellSelection:inTable:
isValidForInteraction
isValidForRowVisibilityChangeInRegion:table:
isValidMergeRange:
isValidOrSpanning
isValidReference
isVariation
isWholeTableImport
iterateCellsAndTerminateWithIterator:usingBlock:
iterateCellsInRange:flags:searchFlags:usingBlock:
iterateCellsInRegion:flags:searchFlags:clampingRange:usingBlock:
iterateCellsInRegion:flags:searchFlags:usingBlock:
iterateCellsUsingBlock:
iterateCellsWithFlags:searchFlags:usingBlock:
iterateFormulasWithContext:block:
iterateFormulasWithContext:shouldStop:block:
iterateWithBlock:stop:block:
iterator
iteratorClass
iterators
kNilStockAttributeString
keyForCustomFormat:
keyRange
keyVal
keyValuePairCount
keyboardShown
keys
labelForCategoryRef:
labelLevel1CellStyle
labelLevel1TextStyle
labelLevel2CellStyle
labelLevel2TextStyle
labelLevel3CellStyle
labelLevel3TextStyle
labelLevel4CellStyle
labelLevel4TextStyle
labelLevel5CellStyle
labelLevel5TextStyle
labelRowHeightAtCategoryLevel:
labelRowHeightList
labelRowUIDSet
labelRowUIDSetForCategoryLevel:labelRowVisibility:
labelRowUidsForGroupUids:
labelRowVisibilityAtCategoryLevel:
labelRowVisibilityList
labelUid
labelValueViewStringAtCellID:optionalCell:
largestCommonSubexpression
largestCommonSubexpressionExcludingExisting:cseData:
largestRangeContainingCellID:
lastArchivedAppVersion
lastCell
lastCellID
lastCellRangeAdded
lastChildHint
lastColumnDiffPos
lastComponentWithWhitespaceAppended
lastFragment
lastFullRefreshDate
lastIdentifierComponent
lastIndex
lastIndexNotInIndexSet:beginRange:pastEndRange:
lastIndexNotInIndexSet:orIndexSet:beginRange:pastEndRange:
lastIndexOfSubtree
lastObject
lastPopulatedRowIndex
lastRowDiffPos
lastSavedInBNC
laterDate:
layerFrameInScaledCanvas
layerWillDraw:
layout
layoutCacheFlags
layoutCell
layoutCellData
layoutCellID
layoutCellIDForModelCellID:
layoutCellRegionForModelCellRegion:
layoutClass
layoutColumnForModelColumn:
layoutConcurrentQueue
layoutController
layoutDirectionIsLeftToRight
layoutEngine
layoutEngineEffectiveTableNameHeight
layoutForHint:parentLayout:
layoutForInfo:
layoutGeometryFromInfo
layoutHint
layoutInvalidate
layoutInvalidateChildren
layoutInvalidateProvider
layoutInvalidateSize
layoutInvalidateTableNameVisibility
layoutIsLTR
layoutMargins
layoutMarginsForTarget:
layoutMeasureQueue
layoutMergeRange
layoutPointForCanvasPoint:
layoutRange
layoutRectForCanvasRect:
layoutResetScaleToFit
layoutRowForModelRow:
layoutSpacesInvalidateCoordinates
layoutSpacesInvalidateCoordinatesAfterRow
layoutSpacesInvalidateCoordinatesAfterRow:
layoutSpacesInvalidateTableOffsets
layoutState
layoutSublayersOfLayer:
layoutText:context:kind:minSize:maxSize:anchor:flags:
layoutTextStorage:minSize:maxSize:anchor:pageNumber:pageCount:flags:
layoutUpdateChildren
layoutValidateQueue
lazyReferencesAreLoaded
leadingSingleQuoteEscapeCharacters
leftColumnStrokes
leftInset
leftParenCharacters
leftStroke
legacyDisplayFormatType
legacyGlobalIDStringToOwnerUIDMap
legacyID
legalRangeControlMinimum:maximum:increment:
length
letString
level
lightGrayColor
limit
limitedToTableUID
linkGroupBy:
linkToCalcEngine:
linkToCalcEngine:ownerKind:
linkedResolver
listSeparator
listStartAtCharIndex:
listType
listTypeString
loadAllLazyReferences
loadCellStyleFromArchive:unarchiver:
loadCellStylePropertiesIntoPropertyMap:fromArchive:unarchiver:
loadFromArchive:
loadFromArchive:unarchiver:
loadFromArchive:unarchiver:completion:
loadFromArchive:unarchiver:forGroupBy:
loadFromFileVersion
loadFromUnarchiver:
loadIndexesForSrcTable:srcUidResolver:dstTable:dstUidResolver:
loadIndexesForTable:isRows:shuffleMap:
loadIndexesForTable:uidResolver:
loadIndexesForTable:uidResolver:forRemoveRows:shuffleMap:
loadIndexesFromRegions
loadIndexesFromTable:
loadLocalizedStrings
loadMergeCache
loadMergeRangesContainingFormulasInTable:calcEngine:
loadObjectFromArchive:listType:unarchiver:completion:
loadObjectsFromDataListArchive:unarchiver:
loadRepeatingArguments
loadSpecDictionary
loadSubsetWithExactMatches:prefixMatches:
loadedIndexesAfterUnarchive
localOwnerID
localVariablesEnabled
locale
localeIdentifier
localePrecedentForTableUID:
localeSpecificStorageForKey:
localizations
localizedBlankGroupName
localizedCaseInsensitiveCompare:
localizedCaseInsensitiveCompare:toString:
localizedCaseInsensitiveIsEqual:toString:
localizedCategoryArray
localizedCategoryForFunction:
localizedCompare:toString:
localizedDescriptionForProtoIndex:
localizedErrorGroupName
localizedFalseGroupName
localizedFalseGroupNameForColumn
localizedFalseString
localizedFalseStringForBooleanGroupWithString:documentLocale:
localizedFalseStrings
localizedFunctionCategoryDictionary
localizedFunctionNameForMenuTag:
localizedLabelForAggType:
localizedLabelForShowAsType:
localizedModeNameForArgument:modeIndex:ofFunction:
localizedModeToolTipForArgument:modeIndex:ofFunction:
localizedNameForArgument:ofFunction:
localizedNameForBlankGroupForDocumentLocale:
localizedNameForErrorGroupForDocumentLocale:
localizedNameForFunction:
localizedNamesForFunctions:
localizedShortLabelForAggType:
localizedStringForCellValue:categoryLevel:groupBy:
localizedStringForKey:value:table:
localizedStringIsFalse:
localizedStringIsTrue:
localizedStringWithFormat:
localizedToolTipForArgument:ofFunction:
localizedToolTipForFunction:
localizedToolTipStringForLocale:
localizedTrueGroupName
localizedTrueString
localizedTrueStringForBooleanGroupWithString:documentLocale:
localizedTrueStrings
localizedTypeStringForArgumentType:
localizedWarningStrings
lock
lockForConcurrentAccess
lockForRead
lockForWrite
lockForWriting
logBacktraceThrottled
logFullBacktrace
logTableTileAuditStatus:withVersion:
logToken
logicalCellIDForUnscaledCanvasPoint:
logicalCellIDInTable:
logicalTestWithCriterion:functionSpec:evaluationContext:
lookupKeyForRowUID:
lookupStrokeAtIndex:
lowerBound
lowerBoundInclusive
lowercaseStringWithLocale:
lowercaseWithUndoTransaction:locale:
lowestCategoryLevelAsLeadingColumnGroupName:
lowestCategoryLevelAsLeadingRowGroupName:
lowestCommonAncestor:
mAST
mActiveTokenCharIndex
mAdjustableTableSize
mBoundingCellRange
mByCellRange
mByColumn
mByContent
mByMissingCellRange
mByRow
mCachedPaddingForEditingCell
mCachedVerticalAlignmentForEditingCell
mCanvasVisibleRect
mCapturedStrokeFrameSizeForInline
mCellRangeSet
mCellRanges
mComputedEditingCellContentFrame
mContainedTextEditingLayout
mContainedTextEditorParagraphAlignment
mContainedTextEditorSpills
mContainedTextEditorTextWraps
mCoordinatesChangedMaskForChrome
mCount
mDrawsBlackAndWhite
mEditingSpillingTextRange
mExpandBackgroundFill
mFinal
mFormulaID
mHint
mHorizontalStroke
mIndex
mKind
mLayoutDirectionIsLeftToRight
mLayoutHint
mLock
mMaxWidthForChildren
mNewCanvasRevealedHorizontally
mNewCanvasRevealedVertically
mPadding
mPageCount
mPageNumber
mPrevEditingSpillingTextRange
mPreviousVisibleStrokeFrame
mProcessChangesFiltering
mRemovingContainedTextEditorLayout
mRenderingFrameForLayoutGeometryFromInfo
mReverse
mShouldHyphenate
mShowsOverlayLayers
mShowsTableChrome
mSpaceBundle
mSpillingTextSize
mStage
mStageCount
mStorage
mStrokeSelection
mStyleProvidingSource
mTableNameVisibilityIsValid
mTableNameVisible
mTabsVisible
mTargetHeight
mTargetWidth
mValue
mVerticalAlignment
mVisibleMask
mWarnWhenFormulasReferToEmptyCells
madeChange
magicMoveAttributeMatchPercentBetweenOutgoingObject:incomingObject:mixingTypeContext:
mainBundle
maintainPivotStrokesInTableStyle:fromTable:
majorStrokeLayer
majorStrokeLayerToken
makeCellReferenceForOffset:apparentTractRef:
makeCellReferenceInSameTable:
makeInverse
makeListWithFirstElem:trailingWhitespace:isArray:parser:
makeStorageMap
makeTokenReflectChoice:
managedNodeArrayWithCapacity:
mapBaseColumn:toViewColumn:
mapBaseRow:toViewRow:
mapForSingleSpecifier:
mapForSpecifiersInSet:
mapGroupUidsForChange:
mapIndex:
mapOwnerUID:
mapPreviousGroupNodeUid:toUpdatedGroupNodeUid:
mapReassigningPasteboardCustomFormatKeys:
mapSummaryColumn:toViewColumn:
mapSummaryRow:toViewRow:
mapTableStylesToStylesheet:withMapper:
mapTableWithKeyOptions:valueOptions:
mappedIndexForSourceIndex:
mappedStyleForStyle:
mappingForSortingColumns:withRules:
mappingForSortingRows:withRules:
mappingFromRowUids:toRowUids:
mappingSize
markAllAggregatesAsDirty
markAllDependentsAsDirty
markAllExternalGroupByRefsDirty:
markAllFunctionsAsDirty
markAllGroupNodesDirty
markAsDirtyWithCalcEngine:
markCellRefAsDirty:
markCellRefsAsDirty:
markCoordsDirty:inOwner:
markDateTimeVolatileFunctionsAsDirty
markDateTimeVolatileFunctionsAsDirtyForCurrentDateTime
markDependentsAsDirtyWithCalcEngine:
markGeometryVolatileFunctionsAsDirtyInOwner:
markIndirectCallsAsDirty
markLocaleVolatileFunctionsAsDirty
markOnlyDependentsDirty:
markOwnerAsDirty:
markRandomVolatileFunctionsAsDirty
markRangeRefAsDirty:
markRemoteDataVolatileFunctionsAsDirty
markRemoteDataVolatileFunctionsAsDirtyForKeys:
mask
maskForStrokePreset:
maskForStrokePresets:
maskRect
maskRectForTextLayout:
masksToBounds
matchesCell:
matchesFound
matchesInString:options:range:
matchesObjectPlaceholderGeometry
matchesRow:withFormulaTableUID:withCalculationEngine:
maxArgsAllowed
maxArguments
maxAutoGrowBlockHeightForTextLayout:
maxAutoGrowLineWidthForTextLayout:
maxColumn
maxColumnIndex
maxColumnLevel
maxConcurrentTasks
maxIndex
maxKey
maxNumberOfColumns
maxNumberOfHeaderColumns
maxNumberOfPopulatedCells
maxOrder
maxRow
maxRowLevel
maxStrokeOrder
maxValue
maxVisibleColumnLevel
maxVisibleRowLevel
maxWidthForChildren
maxWidthOfStrokesInRange:cachedMax:
maximumFrameSizeForChild:
maximumSize
mayModifyFormulasInCells
mayModifyValuesReferencedByFormulas
measureCellRangeForNextPartitionOfSize:previousHint:horizontally:
measureText:withMaxWidth:
measureWithLayoutState:
mediaCompatibilityTypeForData:associatedHint:
medianStringFromArray:
mergeActionForBaseCellRegion:
mergeActionForBaseCellRegion:nonOriginPartialsOnly:
mergeActionForGrowingRange:coveringRange:inTable:
mergeActionForInsertingRange:inTable:
mergeActionForRegion:
mergeActionForRegion:nonOriginPartialsOnly:
mergeActionForRemovingRanges:inTable:
mergeActions
mergeCacheLoaded
mergeChangeDistributor
mergeFormulaIndexes
mergeFormulas
mergeIndexesForBaseCellRegion:
mergeIndexesForRange:
mergeInfo
mergeLeftStrokes:withRightStrokes:
mergeListFromModelMergeList:
mergeListWrapperWithRangesPassingTest:
mergeOriginForBaseCellCoord:
mergeOriginForCellID:
mergeOriginMovedInfo
mergeOwner
mergeOwnerUID
mergeRange
mergeRange:forCellID:
mergeRangeAtCellID:
mergeRangeAtOriginalCellRef:
mergeRangeEmptyStroke
mergeRanges
mergeRangesAndCrumbsIntersectingBaseCellRect:
mergeRangesAndCrumbsIntersectingRange:
mergeRangesForLayoutPass
mergeRangesIntersectingBaseCellRect:
mergeRangesIntersectingBaseCellRect:includeCrumbs:
mergeRangesIntersectingBaseCellRegion:
mergeRangesIntersectingCellRegion:
mergeRangesIntersectingRange:
mergeRangesPartiallyIntersectBaseCellRect:
mergeRangesPartiallyIntersectBaseCellRegion:
mergeRangesPartiallyIntersectCellRange:
mergeRangesPartiallyIntersectCellRegion:
mergeRangesProppingRowHeightsInRegion:
mergeRegion
mergeSource
mergeTopStrokes:withBottomStrokes:
mergedCellRanges
mergedContainedStorages
mergedFormatChangedByAddingRowUID:andCellValue:groupBy:
mergedFormatChangedByRemovingRowUID:groupBy:
mergedGridIndicesForDimension:
mergedRangeForBaseCellCoord:
mergedRects
mergedStorageRepresentation
mergedStrokes
mergedStrokesForGridColumn:
mergedStrokesForGridRow:
mergesIntersectingCellRegion:
mergesIntersectingRange:
mergingRange
messageVersion
messageWithDescriptor:
messageWithNewFunction:descriptor:
metadata
metadataAtIndex:hidingAction:defaultSize:uuid:
metadataForColumnIndex:
metadataForColumnIndex:hidingAction:
metadataForColumnIndex:hidingAction:uuid:
metadataForRowIndex:
metadataForRowIndex:hidingAction:
metadataForRowIndex:hidingAction:uuid:
metadataWithUid:
mightBeInterestedInMigration
mightHaveCellBorderAtCellID:
mightHaveCustomFormats
mightOverlap
migrateStylesToDocument:
migratedStyleForStyle:
migratingStylesOnly
minArguments
minColumnLevel
minIndex
minKey
minNumberOfHeaderColumns
minPopulatedCellRange
minRowLevel
minValue
minimumCategoryLevelInRange:forDimension:
minimumPositionOffset
minimumTimeBetweenRequests
minion
minorStrokeLayer
minorStrokeLayerToken
minusSet:
minute
mismatchBetweenValueType:andFormatType:
missingPivotTableErrorForFunctionName:argumentNumber:
missingPostBNCDatalists
mixableObjectClasses
mixedBaseObjectWithObject:
mixedColumnStartedWithPreserve
mixedDurationsAndNumbers
mixedObjectWithFraction:ofObject:
mixedRowStartedWithPreserve
mixingTypeWithObject:context:
mode
modeNumberForLocalizedString:argumentSpecIndex:attributeMax:locale:
modelCellID
modelCellIDForLayoutCellID:
modelCellRegionForLayoutCellRegion:
modelColumnForLayoutColumn:
modelEnumeratorForObjectsConformingToProtocol:
modelEnumeratorForObjectsOfClass:
modelIteratorData
modelIteratorHasCell
modelPathComponentForChild:
modelRowForLayoutRow:
modes
modifiedTextPropertiesForCategoryOrPivotCellAtCellID:wraps:padding:alignment:
modifySafelyUsingBlock:
month
mostSpecificNodeContainingIndex:correspondingIndex:
mostSpecificSelectionOfClass:
moveBaseColumnRange:toColumnIndex:
moveBaseRangeFrom:toIndex:
moveBaseRowRange:toRowIndex:
moveColumnIndexRange:toIndex:
moveColumnRange:toColumnIndex:
moveColumnsAtColumnIndex:numberOfColumns:toDestColumnIndex:
moveColumnsFromIndex:toIndex:count:
moveColumnsFromRange:toIndex:
moveIndexRange:toIndex:
moveRange:toIndex:
moveRangeFrom:toIndex:
moveRowIndexRange:toIndex:
moveRowRange:toRowIndex:
moveRowsFromRange:toIndex:
moveRuleFromIndex:toIndex:
moveViewColumnRange:toColumnIndex:
moveViewRangeOnlyFrom:toIndex:
multiEvaluateFormulasAt:withCalcEngine:recalcOptions:
multipleChoiceListFormat
multipleChoiceListFormatDataList
multipleChoiceListFormatID
multiplierForUnit:
mustDrawOnMainThreadForInteractiveCanvas
mutableBaseColumnIndexesForUIDs:
mutableBaseRowIndexesForUIDs:
mutableColumnIndexesForUIDs:
mutableCopy
mutableCopyWithZone:
mutableFilteredColumnIndexes
mutableFilteredIndexes
mutableFilteredRowIndexes
mutableIndexSetByIntersecting:withRange:
mutableIndexesForUIDSet:isRows:notFoundUIDs:
mutableIndexesForUIDs:isRows:
mutablePivotHiddenIndexes
mutablePivotHiddenRowIndexes
mutableRowIndexesForUIDs:
mutableUserHiddenColumnIndexes
mutableUserHiddenIndexes
mutableUserHiddenRowIndexes
mutateFormulaFiltersWithTable:usingBlock:
name
nameForBaseRangeRef:namingContext:
nameForBaseTractRef:namingContext:
nameForChromeColumnIndex:inTable:useSymbolicNames:
nameForChromeRangeRef:namingContext:
nameForResolverContainer:
nameForViewTractRef:namingContext:coordMapper:
nameForWrappedRangeRef:namingContext:
nameFragmentPrecedentsForReferenceString:
namedReferenceManager
namer
namesUsed
nativeLocaleIdentifier
nativeSyntaxStringForArgument:
nativeType
naturalAlignment
naturalAlignmentForCellID:
naturalAlignmentForTextLayout:
naturalBoundsRectForHyperlinkField:
nearestRangeForLayoutRect:
needFormulasForAggregateType:
needToUpgradeCellStorage
needWPColumn
needsFilterFormulaRewriteForImport
needsFormulaReset
needsFormulaRewriteForImport
needsFormulaRewriting
needsRebuildOfAggFormulas
needsSubOwnerIDUpgrade
needsThreshold
needsToBeArchived
needsUidRectUpgrade
negativeStyle
nestedRewrites
networkForPivotTables
networkFromStyleProvider:
networkFromTheme:presetID:
networkFromTheme:presetIndex:
networkReachabilityForInternetConnection
networkReachabilityWithHostName:
networkWithContext:presetID:colors:alternate:
networkWithContext:presetID:styleProvider:styleMorphingBlock:
networkWithContext:presetID:styleProvider:tableStyleMorphingBlock:nameStyleMorphingBlock:nameShapeStyleMorphingBlock:cellStyleMorphingBlockByStyleArea:textStyleMorphingBlockByStyleArea:
neverShowsMenu
newAnimationWithLayout:andCellRange:
newAnimationWithLayout:andDeliveryStyle:
newArrayByScanningString:scanRange:
newBareLetNodeWithContext:
newBlendedColorWithFraction:ofColor:
newBottomToTopIterator
newCanvasRevealedHorizontally
newCanvasRevealedVertically
newCellValueFromTSCEValue:withLocale:
newCellWithLocale:
newCorrespondingAST:argIndex:bakeReferences:evaluationContext:
newDefaultFunctionNodeWithContext:functionIndex:
newFilterIndex
newIterator
newLayoutHint
newRightToLeftIterator
newSubstorageWithRange:context:flags:
newSubstorageWithRange:context:flags:kind:
newTableResolverForResolver:
newTextEngineForCell:atCellID:textStyle:
newTextEngineForCell:atCellID:textStyle:naturalAlignment:cellDirection:
newlineCharacterSet
newlyImported
newlyRequestedKeys
nextCategoryAggregatesOwnerUID
nextCategoryOwnerUID
nextCellAndCellUID
nextCellData
nextCellUID
nextCellUIDsBatch:batchSize:
nextConditionalStyleOwnerUID
nextGroupByUID
nextHiddenStateForColumnsOwnerUID
nextHiddenStateForRowsOwnerUID
nextHintForSize:parentLayout:previousHint:horizontally:outFinished:
nextID
nextLayoutForSize:parentLayout:previousHint:horizontally:outFinished:
nextMergeOwnerUID
nextNonWhitespaceOrNewlineIndexStartingAtIndex:
nextObject
nextPencilAnnotationOwnerUID
nextSortRuleReferenceTrackerOwnerUID
nextStrokeAndRange:
nextTableUID
nextTileID
nextWidthAndRange:
noContentCount
noLockShouldUpgradeStyleForFormulatextForCellCoord:
noRuleConditionalStyleSet
noTradingInformationErrorWithNextAvailableDate:
nodeForName:createIfMissing:
nodePath
nodesToCheckForBareArgumentPlaceholders
nonCustomCurrencyFormatSansAccountingStyleForLocale:
nonDefaultFontName
nonDefaultFontSize
nonEmphasisCellProperties
nonEmphasisTableProperties
nonUndoableAppendStoragePreservingEmphasis:
nonUserHiddenRowAfterAndIncludingRow:
nonValidatedNetworkWithContext:presetID:styleProvider:tableStyleMorphingBlock:nameStyleMorphingBlock:nameShapeStyleMorphingBlock:cellStyleMorphingBlockByStyleArea:textStyleMorphingBlockByStyleArea:
nonWhitespaceAndNewlineCharSet
normalizedStringForCompare:
notAReferenceToAFormulaError
notReadyError
notifyAboutStructuredTextImportState
notifyTableOfNewResults
notifyType
nowFormatForLocale:
nowPrecedentForTableUID:
nsFilteringTableUID
nsTableUID
null
numArguments
numCellRecords
numColumns
numComponents
numDirtyCells
numFormulaCellsInOwner:
numPracticalGroupBys
numRelativeColumns
numWords
number
number:argIndex:evaluationContext:
numberAccumulator
numberAtIndex:
numberCount
numberDecimalValue
numberDoubleValue
numberForFunction:argumentIndex:warningReportingContext:
numberFormat
numberFormatID
numberFormatWithValueType:formatString:decimalPlaces:currencyCode:useAccountingStyle:negativeStyle:showThousandsSeparator:fractionAccuracy:
numberFromString:
numberHiddenIndicesInRange:
numberOfAggregatesAtLevel:
numberOfBaseBodyRows
numberOfBaseColumns
numberOfBaseFooterRows
numberOfBaseHeaderColumns
numberOfBaseHeaderRows
numberOfBaseRows
numberOfCategoryColumns
numberOfCategoryLevels
numberOfCellStates
numberOfCells
numberOfCellsWithFormulas
numberOfChromeColumns
numberOfChromeFooterRows
numberOfChromeHeaderColumns
numberOfChromeHeaderRows
numberOfChromeRows
numberOfColumnLevels
numberOfColumnsForProtoIndex:
numberOfComments
numberOfConditionalStyles
numberOfFooterOrGrandTotalRows
numberOfFooterRows
numberOfGrandTotalColumns
numberOfGroupLevelsShowingLabelsUnderGroupAtIndex:
numberOfGroupsAtLevel:
numberOfGroupsUptoLevel:
numberOfHeaderColumns
numberOfHeaderRows
numberOfHidden
numberOfHiddenColumns
numberOfHiddenColumnsInBaseCellRange:
numberOfHiddenColumnsInCellRange:
numberOfHiddenInBaseRange:
numberOfHiddenInRange:
numberOfHiddenRows
numberOfHiddenRowsInBaseCellRange:
numberOfHiddenRowsInCellRange:
numberOfInProgressCalcCellRef
numberOfIntersectingColumns
numberOfIntersectingRows
numberOfItems
numberOfLayoutColumns
numberOfLevels
numberOfMatchesInString:options:range:
numberOfNonHiddenFooterRows
numberOfPopulatedCells
numberOfPopulatedColumns
numberOfPopulatedRows
numberOfRanges
numberOfResizableColumns
numberOfResizableRows
numberOfRowLevels
numberOfRows
numberOfRowsForProtoIndex:
numberOfRulesInFilter:
numberOfTiles
numberOfUserHidden
numberOfUserHiddenColumns
numberOfUserHiddenInBaseRange:
numberOfUserHiddenInRange:
numberOfUserHiddenRows
numberOfUserHiddenRowsInBaseCellRange:
numberOfUserHiddenRowsInCellRange:
numberOfUserVisibleBodyRows
numberOfVisibleBaseBodyRows
numberOfVisibleBodyColumns
numberOfVisibleBodyRows
numberOfVisibleColumnsInCellRange:
numberOfVisibleRowsFromHeader:
numberOfVisibleRowsFromStartRowIndex:toEndRowIndex:
numberOrCurrencyDecimalValue
numberParam1
numberParam2
numberValue
numberValueFromString:locale:outDecimalValue:
numberValueFromString:locale:outDecimalValue:outValueType:outCurrencyCode:
numberValueFromString:locale:outDoubleValue:
numberValueFromString:locale:outDoubleValue:outValueType:
numberVisibleIndicesInRange:
numberWithDouble:
numberWithInt:
numberWithInteger:
numberWithShort:
numberWithUnsignedChar:
numberWithUnsignedInt:
numberWithUnsignedInteger:
numberWithUnsignedLongLong:
numberWithUnsignedShort:
object
objectAndReturnError:
objectApplyingDiffToObject:andUpdateInverse:
objectApplyingDiffToObject:andUpdateInverse:optionalConcurrentStylesheet:
objectAtIndex:
objectAtIndexedSubscript:
objectByRemovingPropertiesInMap:addingPropertiesInMap:updateInverseResetPropertyMap:updateInverseSetPropertyMap:
objectByRemovingPropertiesInMap:addingPropertiesInMap:updateInverseResetPropertyMap:updateInverseSetPropertyMap:optionalConcurrentStylesheet:
objectEnumerator
objectForKey:
objectForKeyedSubscript:
objectForProperty:
objectForResetProperty:
objectForSetProperty:
objectLocale
objectToArchiveInDependencyTracker
objectUUID
objectWithCellSpec:refCount:
objectWithCommentStorage:refCount:
objectWithConditionalStyleSet:refCount:
objectWithCustomFormat:refCount:
objectWithFormat:refCount:
objectWithFormulaError:refCount:
objectWithImportWarningSet:refCount:
objectWithPopUpMenuModel:refCount:
objectWithRefCount:
objectWithRichTextPayload:refCount:
objectWithString:refCount:
objectWithStyle:refCount:
objectsAtIndexes:
objectsPassingTest:
occurrence
offset
offsetForRowIndex:
offsetForUpdatedRowIndex:isRemoveRows:
offsetGeometryBy:
oneToMany
openRewritingTransaction
operatorChar
order
orderForDimension:
orderedBefore:
orderedColumnUidsFromUids:
orderedRowUidsFromUids:
orderedRowUidsWithLabels
orderedSelections
orderedUidsForDimension:
orderedUidsFromUids:forDimension:
orderedUuids
orderedUuidsForRange:inTable:areRows:shuffleMap:
ordinalityOfUnit:inUnit:forDate:
originalCellRefForRewriteType:updatedCellRef:
originalCellRefForUpdatedCellRef:
originalFullReferenceString
originalGroupNodeUIDs
originalSrcColumnUids
originalSrcCondStyleOwnerUID
originalSrcRegion
originalSrcRowUids
originalSrcTableUID
originalTableUIDs
overlapsWithSelectionPath:
overrideCGFloatValueForProperty:
overrideCount
overrideLayoutHint
overridePropertyMap
overridePropertyMapIsEqualTo:
overrideText
overrideTextAsTyped
overrideValueForProperty:
overridesPadding
overridesProperty:
owner
ownerForOwnerUID:
ownerForUUIDBytes:
ownerIndex
ownerIndexForGroupingCombination:
ownerIsRegistered:
ownerKind
ownerKindForOwnerID:
ownerKindForOwnerUID:
ownerMap
ownerName
ownerUID
ownerUIDForLegacyGlobalID:registeringIfNeeded:
ownerUIDMap
ownerUIDMapper
ownerUIDsForOwnerKind:
owningAttachment
owningAttachmentNoRecurse
p_ColumnCategoryLevelForCellCoord:
p_DictionaryRepresentsInvalidMergeReference:
p_NumberOfCellBuilds:
p_NumberOfColumnBuilds:
p_NumberOfRowBuilds:
p_PopUpMenuModelDefaultWithContext:locale:
p_RowCategoryLevelForCellCoord:isLabel:
p_TSTCellFormatIsANumberFormatTypeForMostRecentlySet:
p_TSTCellSetMostRecentlySetDateFormat:
p_TSTCellSetMostRecentlySetNumberFormat:
p_TSTCellSetMostRecentlySetNumberFormatWithCurrencyFlag:
p_TSTCellSetMostRecentlySetTextFormat:
p_ValidateArguments
p_accumulateBordersConcurrentlyUsingBlock:accumulateCellsConcurrentlyUsingBlock:
p_actionMapForKeys:quotes:
p_addApplicationNotification
p_addCell:
p_addChildGroupUidsIntoSet:recursively:skipFiltered:
p_addFittingInfoForEmptyMergeRange:
p_addHiddenIndex:viewIndex:forAction:
p_addInitialSegment
p_addObservers
p_addPrecopiedCells:
p_addRange:
p_addRange:calculateAncillaryInfo:
p_addRules:atRuleIndices:inFilter:isNew:
p_addTexture:forAnimationStage:isFinal:description:
p_addUUID:
p_addUUIDs:
p_addUUIDsFromVector:
p_alignFrameSpec:
p_alignStrokeHeight:deviceWidth:scaledWidth:
p_alignStrokeWidth:deviceWidth:scaledWidth:
p_alignedFrameSpecForColumnGridRange:
p_alignedFrameSpecForGridRange:strokeWidthOverride:
p_alignedFrameSpecForRowGridRange:
p_alignedLayerFrameForLayoutSpace:transform:
p_appendChoices:uniquelyToChoices:
p_appendStroke:inRange:order:
p_applyAccordionResizeFactor:region:direction:totalOfCaptured:count:capturedArray:currentArray:minimumArray:
p_applyUnifyFixedSize:region:direction:count:currentArray:minimumArray:
p_applyUnifyResizeFactor:region:direction:totalOfCaptured:count:capturedArray:currentArray:minimumArray:
p_applyViewCellCoord:toSummaryUsingBlock:toBaseUsingBlock:
p_applyViewCellCoord:toSummaryUsingBlock:toLabelUsingBlock:toCategoryColumnUsingBlock:toBaseUsingBlock:
p_applyViewColumnIndex:toCategoryColumnUsingBlock:toBaseUsingBlock:toBeyondBoundsUsingBlock:
p_applyViewColumnIndex:toSummaryUsingBlock:toBaseUsingBlock:toBeyondBoundsUsingBlock:
p_applyViewRowIndex:toSummaryUsingBlock:toBaseUsingBlock:toBeyondBoundsUsingBlock:
p_applyViewRowIndex:toSummaryUsingBlock:toLabelUsingBlock:toBaseUsingBlock:toBeyondBoundsUsingBlock:
p_argTypeForPredArg:argNum:calculationEngine:hostCell:
p_auditTableHealthUpgradingFromVersion:
p_auditTilesForRowOverlapAndExtensionPastTableBoundsWithVersion:
p_autosizedFrameForRichTextLayout:textSize:
p_autosizedFrameForTextEditingLayout:textSize:
p_averageValueWithA:
p_bakeMixedCellStrokesIntoTable:outgoingTable:incomingTable:fraction:
p_baseColumnIndexes
p_baseHiddenIndexes
p_baseRangeRefForChromeRangeRef:calcEngine:
p_baseReferenceForChromeReference:calcEngine:
p_baseReferencesForChromeReferences:calcEngine:
p_baseRowIndexes
p_blockUntilRecalcIsCompleteOnNewThreadWithTimeout:
p_bodyTranslationX
p_bodyTranslationY
p_booleanForListItem:
p_boundingViewRangeRef
p_buildASTNodeArray:forCoord:preserveFlags:hostCell:
p_cacheBaseRegion:
p_cacheCellRegion:
p_cacheRowColumnUIDs
p_calculateAverageThresholdWithCalcEngine:formulaCoord:
p_calculateTopOrBottomThresholdWithCalcEngine:formulaCoord:isTop:keyScale:
p_calculateUniqueDistinctIndexWithCalcEngine:formulaCoord:tableModel:rule:
p_calculateUniqueThresholdWithCalcEngine:formulaCoord:
p_canUpdateStore:
p_canUsePrePivotFilterSet
p_captureRowColumnInformation:columnRegion:rowRegion:
p_categoryRefViewTractRef
p_cellAtIndex:inCellListArray:
p_cellAtUnscaledPoint:
p_cellCount
p_cellDiffForFinishedCell:
p_cellIDForHyperlinkField:
p_cellIDForWPLayout:
p_cellMapForUpgradingToBraveNewCell
p_cellRangeForSingleCategoryRefInViewRangeRef:inTable:rangeContext:
p_cellRegionFromWildcardCellUIDs:includeLabelsWithSummaries:didAddLabels:
p_cellTypeForGridPoint:
p_cellValueFromCellWithCustomFormat:locale:
p_charactersToTemporarilyChopOffEndToFixSyntaxError
p_chromeRangeRefForBaseRangeRef:calcEngine:
p_chromeReferenceForBaseReference:calcEngine:
p_chromeReferencesForMixedReferences:calcEngine:
p_cleanupStashedRangeIffExists
p_clearCategoryStyles
p_clearDataListEntriesForStorageRef:cellID:
p_clearDataListEntriesInRange:
p_clearDataListIDs
p_clearDefaultStyles
p_clearFormatOfCellFormatKind:
p_clearIfImplicitAndNotCurrentForKind:format:explicitFormatMask:
p_clearPivotStyles
p_clearReverseMapForObject:atKey:
p_clearStrokesForMergesInCellRegion:
p_coldSpecifierCount
p_collapsedIndexes
p_columnForCellID:useCache:
p_columnForTrackedReference:
p_columnNameForColumnUid:
p_columnRowTypeForColumnIndex:
p_columnRowTypeForRowIndex:
p_commitSort
p_commitSortAsync
p_compareGroupByViaOwnerIndexes:otherGroupBy:
p_compressUID:index:UIDtoIndexMap:UIDs:compressedIndexes:lastSameUIDIndex:
p_computeSpillingTextFrameForEditingLayout:textSize:editingSpillRange:
p_computeinteractionType:
p_configureReachabilityWithHost:
p_containsGradientFillThatFillsContainerInCell:cellContents:
p_containsGradientThatFillsContainerInStyle:
p_contentFrameWithCellID:
p_contentWidthForCellRange:skipDynamicSwap:validationBundle:
p_convertCategoryRefToRelativeForHostCell:
p_convertToInverseCellMap
p_convertToUuidBasedCellListUsingTableInfo:pruneCategorizedCells:
p_copy
p_copyCellsAndUUIDsFromCellMap:convertingToCellIDsWithTableInfo:
p_copyFromRegion:
p_copyStorage:
p_countOfIdenticalCellsBetweenOutgoingTableInfo:incomingTableInfo:
p_createCanvasReference
p_createColumnCoordinatesForGridRange:invalidColumnIndex:previousCoordinates:outCoordinatesChanged:
p_createCommentMapsIfNeeded
p_createRowCoordinatesForGridRange:invalidRowIndex:previousCoordinates:validateSingleRow:outCoordinatesChanged:
p_createThresholdCellValue:locale:
p_creatorForPeriodBoundaryWithScale:direction:offset:argIndex:earlierBound:isCalPers:
p_currentFormatIsEqualToOtherCellFormat:
p_dataSourceFetcherForRemoteData:
p_dateBySettingUnit:value:ofDate:inCalendar:
p_dateForListItem:
p_defaultAlignmentForTableWritingDirection
p_defaultCellStyleOfSummaryOrLabelRowAtLevel:isLabel:
p_defaultStockList
p_defaultStyleHandlesOfSummaryOrLabelRowAtLevel:isLabel:styleDefaultsCache:outCellStyleHandle:outTextStyleHandle:
p_defaultStylesOfSummaryOrLabelRowAtLevel:isLabel:outCellStyle:outTextStyle:
p_defaultTextStyleOfSummaryOrLabelRowAtLevel:isLabel:
p_deleteColumnsStartingWith:upToColumn:
p_deleteEmptyPivotMessage
p_deleteRowsStartingWith:upToRow:
p_deriveCategoryCellStyleForTableStyleArea:fromCellStyle:connectedToStylesheet:
p_deriveCategoryTextStyleForTableStyleArea:fromTextStyle:connectedToStylesheet:
p_deriveHeaderColumnPivotSeparatorAndHeaderRowPivotGroupVerticalStrokeFromTableStyle:propertyMap:returnHeaderRowPivotGroupVerticalStroke:
p_derivePivotCellStyleFromCellStyle:optionalSourceFill:brightnessShift:connectedToStylesheet:styleArea:
p_description:
p_descriptionForPivotGroupValueTuple:upToLevel:locale:
p_detokenizeEverythingInRange:
p_detokenizeTokenAtCharIndex:
p_dictionaryForRemoteData:
p_didEnterBackground:
p_didFinishPartitioningHint:horizontally:
p_didReceiveMemoryWarning:
p_dirtyCellsForMerge:
p_displayNameForColumnAtIndex:documentLocalized:derivation:
p_documentRoot
p_downgradedFilterRuleForListItem:fromPredicate:
p_drawAnimation:inContext:
p_drawBackgroundFillInLayoutSpace:gridRange:context:
p_drawCellCommentBadgeInContext:
p_drawCellErrorIndicatorInContext:
p_drawCellWarningBadgeInContext:
p_drawCheckboxOrRatingInContext:viewScale:contentFrame:cell:cellID:
p_drawFinalElements:inContext:
p_drawGroupingArrowInContext:contentFrame:cell:cellID:groupingArrowState:alignedClipFrame:verticalAlignment:wpColumn:
p_drawLayoutSpace:dirtyRect:inContext:
p_drawLayoutSpace:range:inContext:
p_drawStrokeForGridColumn:strokeRect:clearStroke:shadowType:context:
p_drawStrokeForGridRow:strokeRect:clearStroke:shadowType:context:
p_drawTableNameInContext:animation:
p_drawingCheckboxOrRatingInCell:cellID:
p_eliminateLargestCommonSubexpressionWithLCA:expressions:withSymbolTable:newIdentifierOut:
p_emptyCell
p_ensureHiddenStatesExistsWithPivotDataTable:
p_enumerateCellStoragesRowByRowToMaxID:getPreBNC:withBlock:
p_enumerateCellsAddedAndRemovedForFormatsUsingBlock:
p_enumerateCellsAddedAndRemovedForFormatsWithOptions:usingBlock:
p_enumerateCellsAddedAndRemovedOfType:usingBlock:
p_enumerateCellsAddedOfType:usingBlock:
p_enumerateColumnCellCountDiffUsingBlock:
p_enumerateConcurrentlyUsingChunkBeginBlock:perDispatchThreadBlock:concurrentBlock:finalBlock:
p_enumerateCustomFormatsBeingAddedUsingReplacementBlock:
p_enumerateMergesUsingBlock:
p_enumerateNewAndOldCellsSeriallyUsingBlock:
p_enumerateRowCellCountDiffUsingBlock:
p_enumerateRowsOfCellsConcurrentlyUsingBlock:
p_enumerateYearMapsWithBlock:
p_enumerateYearSetsWithBlock:
p_expandedViewRangeRefForViewRangeRef:forLabelRowsInTable:
p_extendedBodyGridRange
p_fetcherForDataKind:
p_fillPropertyForStyle:
p_fillResourceWithFilename:
p_filterRegion:strokeSidecar:
p_filteredIndexes
p_findFirstColumnNameInComponent:tableName:refResolver:calcEngine:outPreserveFlags:usedWordCount:
p_findStrokeAndRangeAtIndex:highOrderToken:updatingLowOrderToken:lowOrderLayer:
p_fixFormula:
p_fixupNodeIfFunctionNode:
p_flattenMajorStrokeLayer:minorStrokeLayer:
p_flattenStrokeOrder
p_flushCacheAfterPartitioningFinished:lastHint:horizontally:
p_fontColorAtCellID:cell:
p_footerRowsGridRange
p_forceLoadHeaderStorages
p_formatForFormatType:
p_formatOfCellFormatKind:create:returnFormat:outCreated:
p_formatTypeIsANumberFormatTypeForMostRecentlySet:
p_formulaAsTextReturningTokenValues:
p_formulaForCellCoord:runningTotalContext:
p_frameSpecForGridRange:frameType:strokeWidthOverride:
p_functionSpec
p_gatherCellRegionViaCellRegionAddition
p_gatherCellRegionViaReducedOverlap
p_gatherRowState:
p_generateCellContentsAndReturnContents:
p_getImageFrameForAnimation:
p_getStyleProvidingAncestorLayout
p_gridPointForTablePoint:
p_gridRangeForTableRect:
p_gridRowForTableCoordinate:
p_groupingFormatWithLocale:
p_growRangeFrom:toDesired:
p_growReturningInverseForAction:formulaReplacer:
p_hasExplicitFormatOfCellFormatKind:
p_hasRuleReferenceForTrackedReference:
p_headerColumnSeparatorColumnRangeIsValid
p_headerColumnsGridRange
p_headerRowSeparatorRowRangeIsValid
p_headerRowsGridRange
p_hiddenStateChangedForBaseIndex:viewIndex:forAction:
p_horizontalAlignmentTransformForHyperlinkWithBounds:inCell:
p_horizontalAlignmentTransformForHyperlinkWithColumn:cell:cellID:
p_indexForTgtToPbMaps:andMap:
p_initBodyRegionPropertyMap:presetID:colors:alternate:
p_initFooterRowRegionPropertyMap:presetID:colors:alternate:
p_initHeaderColumnRegionPropertyMap:presetID:colors:alternate:
p_initHeaderRowRegionPropertyMap:presetID:colors:alternate:
p_initializeDefaultHeight:andWidth:
p_initializeQueue
p_insertColumns:atColumn:
p_insertRangeIntoRegion:
p_insertRows:atRow:
p_insertSpaceAtRange:
p_interestingCellIndexes
p_invalidate
p_invalidateClearedStrokesForCellRegion:
p_invalidateRange:
p_invokeBlock:
p_isEqual:
p_isEqualForNonFormulaItems:
p_isInCollaborationMode
p_isPersistedWithFormulaWarningTypeEnumeration
p_isTableRenderingRotated
p_iterateCellsAndTerminateWithIterator:usingBlock:
p_iterateDataStoreCellsInRegion:searchFlags:usingBlock:
p_layoutCoordinateForGridColumn:
p_layoutCoordinateForGridRow:
p_layoutEngineCreateIfNeeded:
p_layoutOffsetForGridPoint:
p_layoutOffsetForTablePoint:
p_layoutPointForTablePoint:
p_layoutRectForTableRect:
p_layoutWhollyContainsGridRange:
p_listItemAtIndex:
p_loadLazyDatalists
p_loadLazyTileStorage
p_localeStocks
p_lockAndDrawLayoutSpace:checkFrameHasWidthAndHeight:dirtyRect:inContext:
p_makeALazyDatalistOfType:
p_makeALazyDatalistOfType:isNewForBNC:
p_manageEmptyPivotMessage
p_mappingForSortingRowsOrColumns:withRules:dimension:
p_maskRectForRichTextLayout:
p_maximumSpillRangeForCellID:
p_mcListTypeForArgType:
p_mcListTypeOfListItem:
p_mergeStrokeRunsAtPosition:
p_mismatchBetweenValueType:andCellFormatKind:
p_modifyAllCellsConcurrentlyWithSearchFlags:affectsCellBorders:ignoreFormulas:clearImportWarnings:formulaReplacer:modificationBlock:preApplyBlock:
p_mostRecentlySetNumberFormatType
p_moveCellFromCellCoord:toCellCoord:
p_moveColumnsFrom:toColumn:
p_moveRowsFrom:toRow:
p_moveRowsUsingShuffleMapping:
p_mutableColumnIndexesForUIDSet:notFoundUIDs:
p_mutableRowIndexesForUIDSet:notFoundUIDs:
p_naturalBoundsRectForHyperlinkField:cellID:column:contentFrame:horizontalAlignmentTransform:
p_negativeImageFill
p_newStarPath:
p_nextAvailableKey
p_nextCellRefIdWithUIDIndexList:UIDs:index:remainDup:lastDiffPos:recentResults:
p_nonAutosizedFrameForRichTextLayout:
p_nonAutosizedFrameForTextEditingLayout:
p_numberForListItem:
p_objectCount
p_objectForPayload:
p_parseAsCategoryRefWithSheet:tableName:columnNameAndGroupValuesStartAt:withParsingContext:
p_parseComponentsOfReference:gettingSheetName:gettingTableName:gettingRest:
p_parseStringAsGeometricReferenceComponent:inResolver:outPreserveFlags:gettingReferencesMatchingInputAsPrefix:
p_parseStringAsReferenceComponentIntersection:inResolver:inTableNamed:preferredGeometricResolver:withParsingContext:
p_performCommentStorageDOLC:
p_populateAttributesFromArray:
p_populateMembersFromFormula
p_populatedMultipleChoiceListFormat:
p_popupItemsForStrings:
p_positionEmptyPivotMessage
p_positiveImageFill
p_postCommentNotificationFromDiff:inverseDiff:cellID:
p_preBNCStorageRefAtIndex:
p_preBNCpopulatedCustomFormat:value:
p_prepareAttachmentCellsIfNeeded
p_processEndNode:startNode:bakeModes:tokenDict:
p_processWorkForTable:
p_promoteSpanningReferences:withCaptured:atLevel:
p_pruneCellsAtColumn:rowsSize:columnsSize:
p_pruneCellsAtRow:rowsSize:columnsSize:
p_pruneToBaseWithBaseMap:viewMap:
p_rangeForLayoutRect:
p_rangeOfString:orNodeClass:range:
p_rangeRef:isContainedWithinSummaryAndLabelRowsInTable:
p_rangeUpAndLeftOfIntersectionRangeOfGridRange:
p_rawTableCoordinateForGridColumn:
p_rebuildTheTable
p_recalculateMergedFormatWithGroupBy:
p_recreateUIDs
p_recursiveWriteWillModify:withBlock:
p_referenceForColumnIndex:
p_referenceNodeFromTractRef:
p_refreshGroupValue
p_refreshSpecifiers
p_regionStringForTableStyleArea:
p_registerAllFormulas
p_registerAllFormulasReturningCoords:
p_remapUidVector:usingUidMap:clearIfMissing:
p_removeAllFormulaFromCalculationEngine
p_removeCanvasReference
p_removeHiddenIndex:viewIndex:forAction:
p_removeObservers
p_removeRange:
p_removeRemoteDataInterest:forStore:
p_removeRows:
p_removeUUID:
p_removeUUIDs:
p_removeUUIDsFromVector:
p_replaceCustomFormatsWithBlock:
p_replaceMixedDirectionText:atRange:
p_replaceObjectAtKey:withObject:
p_replaceTokenAtCharIndex:withText:
p_replaceUnknownDirectionText:atRange:
p_reserve:
p_resetAllGroupUids:baseGroupUids:summaryGroupUids:forGroupBy:uptoLevel:isFlattening:
p_resetAllHiddenTotals
p_resetArgumentSpecForChildren
p_resetDynamicModePropertiesForContainedTextEditing
p_resetFittingHeightsForRange:
p_resetHiddenGrandTotals
p_resetHiddenTotalsForGroupingColumnUid:hideTotals:
p_resetMenu
p_resetSortingStructures
p_resetSummaryFormulasForRunningTotalsOnly:preservingStyles:
p_resetToRows:andNumColumns:
p_resolveCellIDsToUUIDsByTableInfo:
p_resolveCellUIDToVendorCellUID:
p_resolveStrokes
p_resolvedTextStyleForCell:atCellID:textStyle:outNaturalAlignment:outCellDirection:
p_revalidateOnlineStatus
p_saveMap:toArchive:
p_saveToArchive:archiver:isPre30Alternate:
p_scaledCanvasFrame
p_scanCellDiffArrayForCellBorderChanges:
p_scanCellDiffArrayForSuppressCustomFormatHandlingProperty:
p_scanNSArrayOfDiffsForCellBorderChanges:
p_scanNSArrayOfDiffsForSuppressCustomFormatHandlingProperty:
p_selectionRemovingHiddenColumnsInTableInfo:
p_selectionRemovingHiddenRowsInTableInfo:
p_setBottomStroke:order:atCellID:
p_setCategoryCell:atCellUID:formulaReplacer:
p_setCell:forDayGroupingTypeWithGroupColumnValue:toBeInGroup:
p_setCell:forDayOfWeekGroupingTypeWithGroupColumnValue:toBeInGroup:
p_setCell:forMonthOfYearGroupingTypeWithGroupColumnValue:toBeInGroup:
p_setCell:forQuarterOfYearGroupingTypeWithGroupColumnValue:toBeInGroup:
p_setCell:forUniqueGroupingTypeWithGroupColumnValue:toBeInGroup:
p_setCell:forYearGroupingTypeWithGroupColumnValue:toBeInGroup:
p_setCell:forYearQuarterGroupingTypeWithGroupColumnValue:toBeInGroup:
p_setCell:forYearWeekGroupingTypeWithGroupColumnValue:toBeInGroup:
p_setCell:groupingCellPlan:groupValue:toGroup:templateCell:
p_setCell:groupingTypeCombo:groupingCellValue:toBeInGroup:
p_setDefaultFontHeight:forTableStyleArea:
p_setDynamicStroke:strokeOrder:forGridColumn:isLeft:beginRow:endRow:
p_setDynamicStroke:strokeOrder:forGridRow:isTop:beginColumn:endColumn:
p_setEmptyPivotTableLabels
p_setFillOnCell:positive:
p_setFittingHeightsFromCollectionWithLock:
p_setFormatExplicit:fromCellFormatKind:setMostRecentlySet:
p_setFormatExplicit:fromFormatType:setMostRecentlySet:
p_setFormatFlags:explicit:
p_setFormatForFormulaResult:propagation:
p_setFormattedAttr:fromArray:
p_setFormula:atCellID:
p_setFormulaWithSymbolString:atCellID:
p_setObject:atKey:updateReverseMap:
p_setObjectLocale:
p_setPayload:atSuggestedKey:callWillModify:
p_setPivotCell:atCellUID:formulaReplacer:
p_setPivotHeaderCellsResettingPivotHidden:preservingStyles:
p_setPopupMenuOnCell:withItems:andSelectedIndex:
p_setPredicateType:
p_setQualifier1:
p_setQualifier2:
p_setRightStroke:order:atCellID:
p_setStroke:inRange:order:
p_setStroke:order:inStrokesArray:atIndex:atRange:
p_setTopStroke:order:atCellID:
p_setUpFormat:
p_setupInterestingCells:interestingCellIndexes:forAdding:
p_setupTableModelforNewForm
p_setupTableModelforStockPrototype
p_setupTileAndRowAtCellID:
p_setupWithType:nextKeyID:
p_shallowAddCell:atCellCoord:
p_sharedInitWithRefCount:key:
p_shouldAllowApplyBaseCellMap:
p_shouldAllowSetCell:atBaseCellCoord:
p_shouldUseReverseMap
p_shrinkMergesAtIndexes:intersectedByBaseRegion:formulaReplacer:
p_shrinkReturningInverseForAction:formulaReplacer:
p_simpleInvokeBlock:
p_singleCategoryRefForViewRangeRef:rangeContext:calculationEngine:hostCellRef:
p_smokeTestThePredicate
p_sortColumnsInMode:sortDirection:rowIndex:level:aggregateIndex:resetLabels:
p_sortFullTable:
p_sortRowsInMode:sortDirection:columnIndex:level:aggregateIndex:resetLabels:
p_spanningCategoryRefForViewRangeRef:groupByUid:categoryLevel:calculationEngine:
p_spareFormatOfType:allowMismatchedSpare:explicitOnly:
p_spillRangeForMaskingRichTextLayout:
p_spillRangeToRightForCellID:
p_stageCountForProvider:withAnimationKind:
p_stashBadKey:forList:
p_stringByUnescapingQuotedStringWithPossibleDollarPrefix:partial:
p_stringForListItem:
p_stringWithFormulaAsTextFromRange:returningTokenValues:
p_strokeExportCacheForColumnBefore:columnAfter:
p_strokeExportCacheForGridColumn:
p_strokeExportCacheForGridRow:
p_strokeExportCacheForRowAbove:rowBelow:
p_strokeLayerVector
p_strokeRect
p_strokeTypeForColumn:
p_strokeTypeForRow:
p_strokesForGridColumn:isLeft:takeStrokeWriteLock:
p_strokesForGridRow:isTop:takeStrokeWriteLock:
p_strokesForValidationOfGridRow:isTop:
p_subregionForRange:rangeContext:
p_summaryFilteredIndexes
p_summaryHiddenIndexes
p_summaryPivotHiddenIndexes
p_symbolicColumnNameForRefPair:useTopLeft:isSticky:foundRange:inTableModel:namingContext:
p_symbolicRowNameForRefPair:useTopLeft:isSticky:foundRange:inTableModel:namingContext:
p_tableCoordinateForGridRow:
p_tableCoordinateForX:
p_tableCoordinateForY:
p_tablePointForLayoutPoint:
p_tableRectForGridRange:
p_tableRectForLayoutRect:
p_tableSize
p_tableStyleAreaForCellCoord:
p_testDataTypesForArg0:arg1:arg2:predShouldReturn:
p_textFrameForWrappingCell:defaultRowHeight:
p_tgtCellIDForPbCellID:givenColumnMaps:rowMaps:
p_tgtRangeForPbRange:givenColumnMaps:rowMaps:
p_tgtRangeFromPbRange:andMap:
p_tgtRangesForPbRange:givenColumnMaps:rowMaps:
p_thresholdComparisonMatchesFilter:withPredicateType:
p_timeInterval
p_topLeftCornerGridRange
p_tsceValueFromTsceCellValue:
p_updateCachedStyleInformationFromCellID:
p_updateCachesWithMap:quotes:overwriteValues:
p_updateDataForCellID:
p_updateDataForMergeAtCellID:
p_updateDynamicModePropertiesForContainedTextEditing
p_updateDynamicModePropertiesForContainedTextEditingWithSpillingTextRange:
p_updateIndexesForReplacingRangeAtIndex:withRange:
p_updateMergesAndCellsAsPivotDataWithSourceModel:sourceRegion:sourceBodyRegion:
p_updateNumberOfPopulatedCells
p_updateOriginMapWithSourceCellCoord:destCellCoord:
p_updateStorageParentInfoForModels
p_updateStrokeLayer:forColumnStrokeType:
p_updateStrokeLayer:forRowStrokeType:
p_updateText:atCellCoord:tableUID:
p_updateWithWordFragments:atCellCoord:tableUID:
p_upgradeDefaultCellStylesForStrokeSidecar
p_userHiddenIndexes
p_validateCellIDToWPColumnCacheForChangeDescriptors:
p_validateFittingInfoForEmptyCellsBetween:andCellID:inRange:widthHeightCollection:
p_validateFittingInfoForEmptyCellsOnSingleRowBetween:andEndCellID:widthHeightCollection:
p_validateFittingInfoWithCellRangeWorker:widthHeightCollection:containsMerges:validationBundle:
p_validateStrokeWidthCachesForGridColumn:
p_validateStrokeWidthCachesForGridRow:
p_validateStrokeWidthCachesForRegion:invalidateStrokeDefaults:
p_validateStrokesForRegion:
p_validationBundleForRegionToValidate:
p_validationFittingCellRegionForColumnsDeleted:cellRegionGatherer:
p_validationFittingCellRegionForColumnsInserted:cellRegionGatherer:
p_validationFittingCellRegionForColumnsMovedFrom:toColumnIndex:cellRegionGatherer:
p_validationFittingCellRegionForColumnsVisibility:cellRegionGatherer:
p_validationFittingCellRegionForRangeMergeUnmerge:cellRegionGatherer:
p_validationFittingCellRegionForRowsInserted:cellRegionGatherer:
p_validationFittingCellRegionForRowsMovedFrom:toRowIndex:cellRegionGatherer:
p_validationFittingCellRegionForStrokesChanged:cellRegionGatherer:
p_validationFittingForChangeDescriptorType:regionFromChangeDescriptor:cellRegionGatherer:
p_viewIndexForBaseIndex:
p_warningSetForFormulaWarningType:originalFormula:supplementaryText:
p_widthOfStrokesAtIndex:
p_willApplyCell:baseCellCoord:refreshCategoryInfo:
p_willApplyCell:baseCellCoord:tableUID:
packageLocator
packageLocatorForSegments
paddingForCellID:
paddingForEditingCell
paddingInsets
paddingWithTopInset:leftInset:bottomInset:rightInset:
pageCount
pageCountForAttachment:
pageNumber
pageNumberForAttachment:
paintPath:inContext:
paintRect:inContext:
pairWithFirst:second:
paraStyleToHeightCache
paragraphCount
paragraphStyle
paragraphStyleAtCharIndex:effectiveRange:
paragraphStyleAtParIndex:effectiveRange:
parenCountAtCharIndex:inStorage:
parenCountAtCharIndex:unmatchedParenCount:quoteContext:inStorage:
parenNestingLevel
parent
parentInfo
parentNode
parentRep
parentStorage
parentUUID
parseAsBaseTableReference
parseAsCategoryRefWithParsingContext:
parseAsChromeRefWithParsingContext:
parseAsTractRefWithParsingContext:
parseContentFromString:flags:
parseContentOrFormulaFromString:tableInfo:cellID:flags:
parseFormula:calcEngine:containingCell:outError:
parseFormula:calcEngine:unqualifiedReferenceTableUID:containingCell:outError:outNeedsImportRewrite:isChartFormula:isSageUpgrade:
parseNumberFromTableName:
parseR1C1Coord:containingCell:preserveFlagsOut:
parseR1C1Reference:containingCell:preserveFlagsOut:
parseStringAsBaseReference:withParsingContext:
parseStringAsCategoryRef:withParsingContext:
parseStringAsChromeReference:withParsingContext:
partiallyIntersectsBaseCellRect:
partiallyIntersectsBaseCellRegion:
partiallyIntersectsCellRange:
partiallyIntersectsModelCellRect:
participatesInLastRowHeight
partitionPosition
partitioner
partitioningPass
partitioningPassCache
partitioningPassForFirstPartitionSize:
partitioningPassForHint:withPreviousHint:
pasteFilterHidingAsUserHiding
pasteInverseCommands
pasteType
pasteWasUpdate
pastesTile
pathForResource:ofType:inDirectory:forLocalization:
patternType
pauseEvaluationForPotentialTermination
pauseRecalculation
pauseRecalculationForBlock:
pauseRecalculationSometimeSoon
payloadWithStorage:
pbCellIDForTgtCellID:
pbRangeForTgtRange:
pbTableUID
peerCellRegionForCellRegion:
pencilAnnotationOwner
pencilAnnotationOwnerUID
pencilAnnotationStorage
perChunkHelperWithSourceRectOrigin:cellUIDRange:
perTableEntryForTable:createIfMissing:
percentParentDenominatorCategoryRefFor:inGroupBy:forAggregate:forShowAsType:
percentRunningDenominatorCategoryRefFor:inGroupBy:runningOnColumnUid:forAggregate:
percentSymbol
performActionReturningInverse:formulaReplacer:
performAsync:
performBlockIgnoringModifications:
performBlockWithTemporaryLayout:
performRead:
performReadAllowingOverlappingImplicitRead:thenWrite:thenReadOnPrimaryThread:
performReadForOneOffFormulaEvaluation:forCellCoord:
performRewritesForInsertedTableInfos:
performSelector:
performSelector:withObject:
performSelector:withObject:withObject:
performSync:
performSyncWriteWithUnderlyingDictionary:
performWrite:
pivotAggregateRuleChangeUID
pivotBodySummaryRowCellStyle
pivotCachedIndexesUnfairLock
pivotDataCellValueTypeForColumn:
pivotDataLocalizedColumnNameAtDataColumnIndex:
pivotDataModel
pivotDataModelRowIndexesNeededForCell:
pivotDataModelSizeClass
pivotDataRefreshTimestamp
pivotDataRefreshUID
pivotDataTable
pivotDataTableMapper
pivotDataTableUID
pivotDateGroupingTypesByColumn
pivotDetailTableNameFromSourcePivotTableInfo:pivotSourceCell:
pivotHeaderColumnDisplayNameAtIndex:
pivotHeaderColumnSummaryCellStyle
pivotHeaderRowDisplayNameAtIndex:
pivotInfo
pivotLeadingColumnDisplayNameAtIndex:
pivotLeadingRowDisplayNameAtIndex:
pivotOnlyRowIndexes
pivotOptionsForColumnGroupsAtLevel:
pivotOptionsForGroupingColumn:
pivotOptionsForGroupingColumnUid:
pivotOptionsForRowGroupsAtLevel:
pivotOptionsForUID:
pivotOrder
pivotOwner
pivotRowColumnRuleChangeUID
pivotRowUIDs
pivotRulesChangedPrecedentForTableUID:
pivotSizeClass
pivotSortChangedPrecedentForTableUID:
pivotSourceBodyReferenceEmbeddedInFormula
pivotSourceBodyTract
pivotSourceBodyUidTract
pivotSourceHeaderTract
pivotSourceIsRangeBased
pivotSourceNSTableUID
pivotSourceRangeName
pivotSourceRangeNameWithTractRef:
pivotSourceTableInfo
pivotSourceTableName
pivotSourceTableUID
pivotTableCanBeRefreshed
pivotTableNameForSourceTable:
pivotTableStyleAreaForRowLevel:columnLevel:numberOfRowLevels:numberOfColumnLevels:columnIndex:
pivotTableUID
pivotTableUid
pivotValueTypesByColumn
platformSupportsForms
popAnimation
popFromFixedColumnWidthStack
popFromStyleProviderStack
popUpItemFromBoolean:
popUpItemFromDate:format:
popUpItemFromNumber:format:
popUpItemFromString:
popUpMenuModel
populatedCategoryGroupLevelsInColumn:
populatedColumns
populatedColumnsForGroupLevel1
populatedColumnsForGroupLevel2
populatedColumnsForGroupLevel3
populatedColumnsForGroupLevel4
populatedColumnsForGroupLevel5
populatedCustomFormatWrapperFromCFWrapper:customFormat:
populatedIndexes
populatedRows
populatedSliceByIndex:byRow:
populatedTiles
popupCellSpec:startWithFirstItem:
popupChoiceIndex
popupMenuModelDeletingItemFromModel:index:
popupMenuModelEditingItemInModel:index:newContent:
popupMenuModelFromTable:region:initialValue:overflow:
popupMenuModelReorderingModel:fromIndex:toIndex:
popupModel
portalStroke
portalledStrokeLayer
position
positionForColumnIndex:bodyWidth:target:outWidth:outGap:
postCommentNotificationForStorage:atCellID:notificationKey:
postCommentNotificationForStorage:atViewCellCoord:notificationKey:
postCommentNotificationForStorage:baseCellCoord:notificationKey:
postNotificationName:object:
postNotificationName:object:userInfo:
preBNCFormatTableReference
preMergeUidTract
preMoveRegionUidTract
prePivotRowFilterSet
preUFFVersion
precedentsForFilterSet:calcEngine:hostOwnerUID:hostCellID:
precedentsList
precedentsOfCell:
precedentsWithCalcEngine:hostOwnerUID:
precedentsWithCalcEngine:hostOwnerUID:hostCellID:
predArg0
predArg0Type
predArg1
predArg1Type
predArg2
predArg2Type
predicate
predicateArg1atBaseHostCoord:calcEngine:
predicateArg2atBaseHostCoord:calcEngine:
predicateDescription
predicateType
predicateWithBlock:
preferredFormatOptions:
preferredTypeForArgumentIndex:
prefixRange
prefixTupleToLevel:
prefixedUnitForString:
prepareDateParserInBackground
prepareForPasteWithSourceOffset:bakeFormulas:
prepareToApplyConcurrentCellMap:
preserveColumn
preserveFlags
preserveFlagsFixingInversionsForTract:absFromRelColumns:absFromRelRows:
preserveFlagsForCoord:preferStart:
preserveFlagsForReference:calcEngine:
preserveRectangular
preserveRectangularRange
preserveRow
presetAtIndex:
presetID
presetIDForStyleID:
presetIDForUpgrade
presetKind
presetKinds
presetNeedsStrongOwnership
presetOfKind:index:
presetsOfKind:
prettyStringForCategoryRef:forHostCellRef:namingContext:
prevEditingSpillingTextRange
preventsChangeTracking
preventsComments
preventsRowInsertion
previousGroupNodeToUpdated
previousGroupNodeUidForUpdatedGroupNodeUid:
previousGroupNodeUids
previousLevel
previousLocaleIdentifier
previousMatch
previousNonWhitespaceOrNewlineIndexStartingAtIndex:
previousNthVisibleColumn:fromColumnIndex:
previousNthVisibleRow:fromRowIndex:
previousRelativeAncestorLevelForUpdatedAncestorCategoryLevel:numLevels:
previousValueIsRegex
privateCellStyle
privateTextStyle
problemExpressionString
problemMode
problemNodeIsCellReference
processChangesFiltering
processCustomFormatsWithBlock:
processDeferredImportActions
processHiddenRowsForExport
processInBackgroundIfNecessary
processInfo
processLayoutTask:validationBundle:
processRowsWithPendingGroupingChangesAndReturnAffectedCellRegion
processedByLayoutEngine
processorCount
productValue
promoteSpanningReferences:
properties
propertiesAllowingNSNull
propertiesMatchingThoseInMap:
propertyListRepresentation
propertyMap
propertyMapToReset
propertyMapToSet
propertyMapToTextStyleMap
propertyMapWithProperties:
propertyMapWithPropertiesAndValues:
propertyRange
propertySet
propertySetByAddingProperties:
propertySetByAddingProperty:
propertySetByRemovingPropertiesFromSet:
propertySetFromUnionOfPropertySets:
propertySetWithProperties:
protocol
providedArgs
providesActivityDescription
pruneAgainstTable:
pruneCellDiffMapAgainstTable:behavior:
pruneCellDiffMapAgainstTable:behavior:usingBlock:
pruneCellUIDListAgainstTable:behavior:
pruneCellUIDListAgainstTable:behavior:usingBlock:
pruneCollapsedColumnGroups
pruneCollapsedGroupsInDimension:
pruneCollapsedRowGroups
pruneEmptyRows
pruneMergeUidTractsAtAndAboveIndex:
pruneTileForRowIndex:
pruneTilesForRows:
prunedCellRegionAgainstTable:behavior:
prunedCellRegionAgainstTable:behavior:usingBlock:
prunedCopyWithUids:
prunedRowUIDsFromRowUIDs:
ptsce_referenceComponentsSeparatedByCharacterInSet:
purgePreBNCDatalists
pushAnimation:
pushInverseMergeAction:
pushRangeAndSpanningDependents:fromCoord:cellIsInACycle:
pushRewriteSpec:
pushScopeForField:message:usingBlock:
pushToFixedColumnWidthStack:
pushToStyleProviderStack:
qualifier1
qualifier2
queriedModel
queue
queueCellForValidation:cell:textStyleHandle:modelMergeRange:wrap:verticalAlignment:padding:prop:layoutCacheFlags:validationBundle:layoutTask:
quoteContextAtCharIndex:previousContext:inStorage:
quoteStringIfNeeded
rSquared
raiseArgumentEqualsToZeroErrorForFunctionName:argumentNumber:
raiseArgumentSetUsedOutOfContextError
raiseArrayElementNoDataError
raiseAutoNumberAttachmentErrorInTextCell:
raiseCharInputOutOfBoundsError
raiseCircularReferenceErrorWithReference:
raiseComparisonTypeExceptionForLeftType:rightType:
raiseConvertOriginUnitMismatchError
raiseCurrencyNotAllowedErrorForFunctionName:argumentNumber:
raiseDataInvalidLengthError
raiseDataInvalidWidthError
raiseDateEarlierThanStartingDateErrorForFunctionName:
raiseDifferentDimensionsErrorForFunctionName:
raiseDifferentNumberOfDataPointsErrorForFunctionName:
raiseDifferentNumberOfElementsErrorForFunctionName:
raiseDisallowedStockModeError:
raiseDivideByZeroError
raiseDurationDisallowedForNormdistPDFError
raiseDurationNotAllowedError:argumentNumber:
raiseEmptyArgumentError
raiseEmptyArgumentSpecificErrorForArgumentNumber:
raiseEmptyArrayError
raiseErrorForError:
raiseErrorForInvalidReference
raiseErrorForInvalidReference:orString:contextEntityUID:
raiseErrorForInvalidReference:orString:contextEntityUID:invalidMergeReference:disqualifiedFromEndCell:
raiseException
raiseIndirectErrorForRangeReference:hostTableUID:
raiseInvalidAltitudeError
raiseInvalidArgumentEqualityRelationshipErrorForFunctionName:argIndex1:argIndex2:
raiseInvalidArgumentPairingsErrorForFunctionName:hasInitialUnrelatedArgument:
raiseInvalidArgumentRelationshipErrorForFunctionName:argIndex1:argIndex2:argsAscending:equalityPermitted:
raiseInvalidArgumentsErrorForFunctionName:argumentIndex:
raiseInvalidArrayContentsError
raiseInvalidBaseCharacterErrorForCharacter:base:
raiseInvalidComparisonError
raiseInvalidCurrencyComparisonError
raiseInvalidDateError
raiseInvalidDateManipulationError
raiseInvalidDecimalNumberErrorForArgument:argIndex2:argIndex3:functionName:
raiseInvalidDecimalNumberErrorForArgument:argIndex2:functionName:
raiseInvalidDecimalNumberErrorForArgument:functionName:
raiseInvalidFrequencyErrorForFunctionName:argumentNumber:
raiseInvalidHeadingError
raiseInvalidHistoricalCurrencyAttributeError
raiseInvalidHistoricalStockAttributeError
raiseInvalidHyperlinkError
raiseInvalidIndexForChooseError:
raiseInvalidIntersectionError:hostTableUID:calcEngine:
raiseInvalidLatitudeLongitudeError
raiseInvalidLiveCurrencyAttributeError
raiseInvalidLiveStockAttributeError
raiseInvalidMatchModeError
raiseInvalidProbabilityErrorForFunctionName:
raiseInvalidRangeUsageErrorForReference:
raiseInvalidReferenceNameAttributeError
raiseInvalidRegexError:
raiseInvalidSubtotalFunctionNumberError
raiseInvalidTailErrorForFunctionName:argumentNumber:
raiseInvalidTimeError
raiseInvalidTypeErrorForFunctionName:argumentNumber:
raiseInvalidUnitStringError:
raiseLinestHighlyCorrelatedVariableError
raiseLinestMatrixUnderdeterminedError
raiseLocationHeadingFailureError
raiseLocationHeadingUnknownError
raiseLocationNetworkError
raiseLocationServicesNotEnabledError
raiseLocationUnknownError
raiseLocationUserDeniedError
raiseMatchNotFoundErrorForValue:isRegex:afterMatch:previousValueToMatch:previousValueIsRegex:occurrence:matchesFound:functionName:
raiseMatchNotFoundErrorForValue:isRegex:functionName:
raiseMismatchedCurrenciesErrorForFunctionName:
raiseMismatchedMaxUnitsError
raiseMismatchedUnitsErrorForFunctionName:
raiseMismatchedUnitsErrorForFunctionName:argumentNumberString:
raiseMixedTypeManipulationErrorForFunctionName:
raiseMultipleDurationsErrorForFunctionName:
raiseNegativeReceivedAmountError
raiseNegativeVectorValueErrorForFunctionName:argumentNumber:
raiseNoConditionIsTrueErrorForFunctionName:
raiseNoModeError
raiseNonEmptyStringRequiredErrorForFunctionName:
raiseNonMetricUnitPrefixErrorForUnitString:
raiseNotAReferenceErrorForFunctionName:
raiseNotAReferenceToAFormulaError
raiseNotAVectorError
raiseNotEnoughInputsErrorForFunctionName:argumentNumber:required:
raiseNotReadyError
raiseNumberDoesNotConvergeErrorForFunctionName:
raiseNumberDoesNotConvergeWithEstimateErrorForFunctionName:
raiseNumberError
raiseNumberErrorForFunctionName:
raiseNumberMinusDateError
raiseOnlyPositiveOrNegativeErrorForFunctionName:
raiseOutOfBoundsArgumentErrorForArgument:functionName:lowerBound:lowerBoundInclusive:
raiseOutOfBoundsArgumentErrorForArgument:functionName:lowerBound:lowerBoundInclusive:upperBound:upperBoundInclusive:
raiseOutOfBoundsArgumentErrorForArgument:functionName:upperBound:upperBoundInclusive:
raisePercentRankExcInputOutOfRangeError
raisePercentRankInputOutOfRangeError
raisePositionLargerThanArrayErrorForFunctionName:
raiseRangeDoesNotSumToOneForFunctionName:argumentNumber:
raiseRangeSizeMismatchErrorForFunctionName:
raiseReferenceToEmptyCellErrorForFunctionName:rangeReference:
raiseRemoteDataUnavailableErrorWithAttribute:
raiseSignsMustMatchErrorForFunctionName:
raiseStartNumberExceedsStringLengthErrorForFunctionName:
raiseStringDoesNotRepresentDateErrorForFunctionName:string:
raiseStringDoesNotRepresentNumberErrorForFunctionName:string:
raiseStringTooLongError
raiseSumMixedDurationsAndUnitlessWithoutADateErrorForFunctionName:
raiseTooFewDataPointsErrorForFunctionName:
raiseTooManyArguments:maximum:provided:
raiseTypeExceptionForValue:functionSpec:argumentIndex:locale:
raiseUnionInsideIntersectionError
raiseUnitsNotAllowedErrorForFunctionName:argumentNumber:
raiseUnknownFunctionErrorForString:
raiseUnsupportedFeatureError
raiseUnsupportedFunctionError
raiseUnsupportedR1C1StyleError
raiseValueNotAvailableErrorForFunctionName:
raiseVectorValueNotNumberErrorForFunctionName:argumentNumber:
raiseWrongNumberOfArgumentsErrorForFunctionName:provided:
raiseZeroToPowerOfZeroError
randomPrecedentForTableUID:
randomSeedFromRandomLo:hi:
range
rangeArrayWithRange:
rangeAtIndex:
rangeContext
rangeCoord
rangeDependencies
rangeEncompassingExpressionNodesInRange:
rangeForCellID:includingBreak:
rangeFromFormulaAtIndex:useBoundingRange:
rangeFromFormulaObject:atCoord:useBoundingRange:
rangeIntersectingLayoutRect:
rangeIsWithinTable:
rangeOfCharacterFromSet:
rangeOfCharacterFromSet:options:
rangeOfCharacterFromSet:options:range:
rangeOfComposedCharacterSequencesForRange:
rangeOfFirstMatchInString:
rangeOfFirstMatchInString:options:range:
rangeOfInWithinRange:
rangeOfLetWithinRange:
rangeOfMatchInString:occurrence:
rangeOfMatchInString:occurrence:matchesFound:
rangeOfString:
rangeOfString:options:
rangeOfString:options:range:
rangeOfString:options:range:locale:
rangeOfUnit:inUnit:forDate:
rangeRef
rangeReference
rangeValue
rangeWithFunction
rank
ratingsDragCellID
rawGroupValueCellValue
rawString
rawString:argIndex:locale:
reachabilityCheckHost
readLazyReferenceMessage:class:protocol:completion:
readReferenceMessage:class:protocol:completion:
readRepeatedReferenceMessage:class:protocol:completion:
readSafelyUsingBlock:
readWeakReferenceMessage:class:protocol:completion:
reapAccumulatedCellRegionWithTable:
reapCoordinatesChangedMaskForChrome
rearrangeWithMapping:
reassignCustomFormatUIDForPaste:
reassignPasteboardCustomFormatKeys
rebuildAggFormulas
rebuildAllAggFormulas
rebuildFormulasForAggNode:
recalcInProgressUpdate:
recalcTimeInSecs
recalculateWithTimeout:
recalculationIsPaused
receivers
recommendedTimeBetweenRequests
recommendedTimeBetweenRequestsForWWAN
recomputedValueFromValue:changed:
record
recordExpression:data:
recordFromArchive:
recordHashesForSubexpressions:
rectInRootForSelectionPath:
recursivelyDrawInContext:keepingChildrenPassingTest:
recursivelyDrawingInContext
redColor
reducedSetMinusUuid:
reducedSetMinusUuids:
refCount
refParser
reference:argIndex:evaluationContext:
referenceArray
referenceAsStringWithContext:
referenceColor
referenceColorHelper
referenceEndCellInvalid
referenceForObject:
referenceIdentifiers
referenceIsComplete
referenceIsValid:
referenceNameIsUnique:forReference:contextTable:
referenceSet
referenceTextForAutocompleteWithCalculationEngine:contextSheetName:preserveFlags:inputString:inputStringIsComplete:
referenceTextForAutocompleteWithCalculationEngine:hostTableUID:preserveFlags:inputString:inputStringIsComplete:
referenceTextWithCalculationEngine:contextSheetName:
referenceTextWithCalculationEngine:hostTableUID:
referenceToHiddenStateFromColumn:toColumn:
referenceToHiddenStateFromRow:toRow:
referenceToNonexistentTableError:
referenceValue
referenceValueForFunction:argumentIndex:warningReportingContext:
referencedStyleWasUpdated:
referencedStyles
references
referencesForCalcEngine:referenceTrackerUID:
referencesToDirty
refersToCellRefForCalculationEngine:referenceTrackerUID:
refersToPivotTable
refersToPivotTableColumns
refersToPivotTableRows
regexMatcherWithRegexString:
regexMatcherWithRegexString:caseSensitive:
regexMatcherWithRegexString:caseSensitive:entireMatch:
regexMatcherWithStringMatch:
regexMatcherWithStringMatch:caseSensitive:entireMatch:
region
region:addingRange:
region:addingRegion:
region:intersectingRange:
region:intersectingRegion:
region:subtractingColumnIndexes:
region:subtractingRange:
region:subtractingRegion:
region:subtractingRowIndexes:
regionAfterColumnIndex:
regionAfterColumnIndexRtoL:
regionAfterRowIndex:
regionByAddingColumns:
regionByAddingModelCellRect:
regionByAddingModelCellRegion:
regionByAddingRange:
regionByAddingRegion:
regionByAddingRows:
regionByAddingViewCellRect:
regionByAddingViewCellRegion:
regionByApplyingRowMapping:
regionByCollapsingRangesForRemovedColumns:
regionByCollapsingRangesForRemovedRows:
regionByIntersectingColumnIndices:
regionByIntersectingRange:
regionByIntersectingRegion:
regionByMovingColumnsFromRange:toIndex:
regionByMovingRowsFromRange:toIndex:
regionByRemovingColumns:
regionByRemovingRows:
regionBySubtractingColumnIndexes:
regionBySubtractingModelCellRect:
regionBySubtractingModelCellRegion:
regionBySubtractingRange:
regionBySubtractingRegion:
regionBySubtractingRowIndexes:
regionBySubtractingViewCellRect:
regionBySubtractingViewCellRegion:
regionByTrimmingAroundColumnIndices:
regionByTrimmingAroundRowIndices:
regionByUnioningEveryRangeInRegionWithRange:
regionFillingRowsFromRegion:
regionForList
regionForValueOrCommentCellsInBaseCellRect:
regionForValueOrCommentCellsInRange:
regionFromCellCoordSet:
regionFromCellDiffMap:withTableInfo:
regionFromCellIDVector:
regionFromCellMap:withTableInfo:
regionFromCellMap:withTableInfo:passingTest:
regionFromCellRangeVector:
regionFromCellUIDVector:withTableInfo:
regionFromColumnIndexes:rowIndexes:
regionFromColumnIndices:
regionFromColumnIndices:rowRange:
regionFromMergeActionArray:withTableInfo:
regionFromMergeList:
regionFromModelCellRect:
regionFromModelMergeList:
regionFromOverlappingCellRangeVector:
regionFromPropertyListRepresentation:
regionFromRange:
regionFromRowIndices:
regionFromRowIndices:columnRange:
regionFromViewCellRect:
regionFromViewCellRectVector:
regionIterator
regionSubtractingCategoryColumnsAndRows:
regionUpToColumnIndex:
regionUpToColumnIndexRtoL:maxColumnIndex:
regionUpToRowIndex:
registerAllFormulaToCalculationEngine
registerAllFormulasWithCalculationEngine:
registerAllFormulasWithCalculationEngine:wasCrossDocumentPaste:infoIsCategorized:wasUndo:
registerAllFormulasWithCalculationEngine:wasCrossDocumentPaste:wasUndo:
registerChange:details:forChangeSource:
registerGroupByForColumns:ownerIndex:hiddenStates:groupBySet:
registerHiddenStates:baseOwnerUID:
registerLast
registerOwnerWithOwnerUID:owner:referenceResolver:baseOwnerUID:ownerKind:
registerPresetSourceClass:
registerStore:
registerWithCalcEngine:
registerWithCalcEngine:baseOwnerUID:
registerWithCalcEngine:forTableModel:baseOwnerUID:
registerWithCalcEngine:ownerKind:
registerWithCalcEngine:ownerKind:linkOnly:
registerWithCalcEngine:reregister:
registerWithCalcEngineForDocumentLoad:ownerKind:
registerWithCoordinator
registerWithDistributors
registeredWithCoordinator
regressionSumSquares
regularExpression
regularExpressionWithPattern:options:error:
reimportable
relativeAncestorGroupUid:
relativeBottomRight
relativeBoundingRangeWithContainingCell:
relativeColumn
relativeGroupUid
relativeLevelOfAncestorGroupUid:
relativeRows
releaseLayoutEngine
reliedOnLayoutsForTextLayout:
reloadMergeCacheForIndexes:
remapOwnerUIDsWithMap:rewriteContext:error:
remapRangeFormulasToOwnerUID:
remapTableUIDsInFormulasWithMap:
remapTableUIDsInFormulasWithMap:calcEngine:
remapTableUIDsInFormulasWithMap:calcEngine:bakeForBadRefs:
remapUIDsByColumnMap:rowMap:ownerMap:
remapUsingColumnUidMap:rowUidMap:clearIfMissing:
remapUsingUidMap:
remapWithMap:
remappedTableNames
remoteDataDidUpdateValues:quotes:
remoteDataDidUpdateValues:quotes:fromStore:syncKey:
remoteDataMap
remoteDataServerError
remoteDataSyncKey
remoteDataUnavailableErrorWithAttribute:
remove:atIndex:count:
removeAllAnnotations
removeAllCellCoordinates
removeAllCellRefsInOwner:
removeAllCells
removeAllFormulasFromOwner:
removeAllIndexes
removeAllObjects
removeAllPropertyValues
removeAllRowUids
removeAllSpecifiers
removeAllUuids
removeAnnotation:
removeAnnotationAtIndex:
removeAnnotations:
removeAnnotationsFromColumnsAtBaseIndexes:
removeAnnotationsFromColumnsAtIndexes:
removeAnnotationsFromRowsAtBaseIndexes:
removeAnnotationsFromRowsAtIndexes:
removeAttachmentCellLayouts
removeBaseMergeRange:
removeCategoryColumnCellsForRows:
removeCellCoord:
removeCellCoord:referringToCategoryRef:
removeCellCoord:referringToTableUID:
removeCellCoord:referringToTableUID:forColumnRowUuid:
removeCellRangeAtIndex:
removeCellRef:
removeCellRef:forUuid:
removeCellsInColumnUid:
removeCharactersInString:
removeChildForKey:
removeColumnRange:
removeColumns:
removeColumnsAtBaseIndexes:
removeColumnsAtColumnIndex:numberOfColumns:
removeColumnsAtIndex:count:
removeColumnsAtIndexes:
removeColumnsAtSummaryIndexes:
removeCommentStorageAtBaseCellCoord:
removeCommentStorageAtCellUID:
removeContainedTextEditingLayout
removeControlCellSpec
removeCustomFormatsWithIDs:
removeFormulaAt:inOwner:
removeFormulaAtCellID:
removeFormulasAt:
removeFormulasAt:inOwner:removeOutstandingReplaces:
removeFormulasFromRange:
removeFormulasInRange:
removeFromExcludedUidsTractColumnUids:
removeFromExcludedUidsTractColumnUidsSet:
removeFromExcludedUidsTractRowUids:
removeFromExcludedUidsTractRowUidsSet:
removeFromParent
removeIndex:
removeIndexes:
removeIndexesAtIndex:count:
removeIndexesInRange:
removeLastObject
removeName:
removeObject:
removeObjectAtIndex:
removeObjectForKey:
removeObjectForKey:andWait:
removeObjectIdenticalTo:
removeObjectsAtIndexes:
removeObjectsForKeys:
removeObjectsInRange:
removeObjectsToSetForProperty:
removePointerAtIndex:
removeProperties:
removeRange:
removeRect:fromCoord:
removeRectsForFromCoord:
removeRefPathWordAtIndex:
removeRelativeColumnRange:
removeRelativeRowRange:
removeRemoteDataInterest:
removeRemoteDataInterest:forOwner:
removeRemoteDataInterest:forStore:
removeReturningInverseForBaseCellRegion:
removeReturningInverseForRegion:
removeRowUid:
removeRowUid:forGroupValue:
removeRowUid:forGroupValueTuple:atLevel:withLocale:
removeRowUids:
removeRows:
removeRowsAtBaseIndexes:
removeRowsAtIndex:count:
removeRowsAtIndexes:
removeRuleAtGroupLevel:
removeRuleAtIndex:
removeRulesForBaseColumnIndices:withTableInfo:
removeRulesWithIndices:inFilter:
removeSpecifier:
removeSpecifiersFromArray:
removeSpecifiersFromSet:
removeUUID:
removeUUIDs:
removeUid:
removeUids:forDimension:
removeUuidsFromSet:
removeUuidsFromSetReturningRemoved:
removeUuidsFromVector:
removeValueForProperty:
removeValueForSpecifier:
removeValuesForSpecifierSet:
removedByMoveUidTract
removedGroupNodeUids
renameTable:fromName:
renderAsTokenType
renderCheckbox:viewScale:intoContext:rect:color:
renderRating:intoContext:rect:showDots:color:
renderRating:intoContext:rect:showDots:color:useMinimalSpace:
rendererForAttachment
reorganizeValueAtIndex:
reorganizeValueForSorting
reorganizeValues
reoriginToZero
repClass
repClassForTextLayout:
repClassOverride
repForLayout:
repairOrReplaceErrantStyle:
repairOrReplaceMap
repairSpanningColumnSetting
repairSpanningRowSetting
repairStyleDatalistStylesheetIfNecessary
reparseWithStorage:
reparseWithStorage:adjustExpressionTree:
repeatHeaderColumnsSpace
repeatHeaderCornerSpace
repeatHeaderRowsSpace
repeatLabels
repeatingGroupSize
repeatingHeaderColumnsEnabled
repeatingHeaderRowsEnabled
replaceCell:atIndex:
replaceCellAtIndex0:
replaceCharactersInRange:withStorage:usePasteRules:dolcContext:undoTransaction:
replaceCharactersInRange:withString:
replaceCharactersInRange:withString:undoTransaction:
replaceColumnsWithUids:
replaceCommentStoragesUsingBlock:
replaceConditionalStyleSetsUsingBlock:
replaceContentsWithContentsOfTrackedReference:
replaceCustomStrokeLayerWith:
replaceDefaultStrokeLayerWith:
replaceFormatsUsingBlock:
replaceFormula:atCellCoord:inOwner:
replaceFormula:atCellCoord:inOwner:replaceOptions:
replaceFormulaAt:inOwner:precedents:replaceOptions:
replaceFormulaForConditionalStyle:atCellID:
replaceFormulasUsingBlock:
replaceObjectAtIndex:withObject:
replaceOccurrencesOfChildrenInSet:withIdentifier:symbol:
replaceOccurrencesOfString:withString:options:range:
replacePointerAtIndex:withPointer:
replaceReferencedStylesUsingBlock:
replaceRemoteDataKeysInterestedIn:forCell:
replaceRichTextUsingBlock:
replaceRowsWithUids:
replaceRule:atRuleIndex:inFilter:
replaceRuleAtAbsoluteIndex:withRule:
replaceRuleAtGroupLevel:withRule:
replaceRuleAtIndex:withRule:
replaceStylesUsingBlock:
replaceText:atRange:
replaceText:withLanguage:atRange:
replacementWithDefaults
reportAutomaticUnitConversionWarningInContext:
reportBoolToNumberConversionWarningInContext:
reportComparisonWarningInContext:leftType:rightType:
reportDayOutOfRangeWarningInContext:
reportLossOfUnitsWarningInContext:
reportMismatchedSizesWarningInContext:
reportMonthOutOfRangeWarningInContext:
reportNonNumericCellWarningInContext:reference:
repositionStockPopover
requestAutosaveForExpensiveCalculation
requestCompleted
requestRedraw
requestsInFlight
requiresDocumentReadVersion:writeVersion:featureIdentifier:
requiresDocumentVersion:
requiresDocumentVersion:featureIdentifier:
requiresTrailingAlignment:
requiresUnwrapping:
reserve:
reserveNextCoordinate
reserveNextIndex
reservePrecedent:forNameFragment:
reservedPrecedentForNameFragment:
reset
resetAllAggsFormula
resetAllCellCounts
resetAllColumnRowSizes
resetAllGroupings
resetAlmostEverything
resetBaseOwnerUID
resetCategoriesGroupByForOwnerRemapping
resetCellsForNewPivotOrder
resetCellsForNewPivotRules
resetCorruptCellRefs:
resetDependenciesForCell:
resetFittingRowHeightsStartingWith:upToRow:
resetFloatValue:forProperty:
resetForCategories
resetForCategoriesWithForce:
resetForPivotingWithRowUids:columnUids:
resetForPivotingWithRowUids:columnUids:numberOfHeaderRows:numberOfHeaderColumns:
resetGroupBy
resetGroupingColumnsFormula
resetGroupingList
resetGroupings
resetIntValue:forProperty:
resetMergeOriginMap
resetModelCacheRange:
resetModelHeightWidthCache
resetObject:forProperty:
resetOwnerUIDForUpgrade:forBaseOwner:ownerKind:
resetPropertiesFromMap:
resetResolver:
resetSharedTableConfiguration
resetSortRuleReferenceTrackerForInsert
resetViewMap
resetViewMapAndNotify
resetWithGroupings:categoryOwner:hiddenStates:groupBySet:
resizeMayChangeAspectRatio
resolveCategoryRef:atRowUid:inHostTable:
resolveDataListKeysForCell:cache:suppressTransmutation:sourceStorageVersion:
resolveDataListKeysForPreBNCCell:suppressTransmutation:sourceStorageVersion:
resolveRelativeAncestorUid:atRowUid:
resolvedTextStyleWithPropertyMap:
resolver
resolverContainerForName:caseSensitive:
resolverContainerMatchingName:
resolverContainerMatchingName:inDocumentRoot:
resolverContainerNameForResolver:
resolverContainerNamesMatchingPrefix:
resolverForCellRef:
resolverForTableID:
resolverForTableUID:
resolverMatchingName:
resolverMatchingName:contextContainerName:
resolverMatchingName:contextResolver:
resolverMatchingName:inDocumentRoot:contextResolver:
resolverMatchingNameWithContextContainer:contextContainerName:
resolverMatchingNameWithContextContainer:inDocumentRoot:contextContainerName:
resolverNameIsUsed:
resolverUID
resolversMatchingPrefix:
resourceURL
respondsToSelector:
rest
restoreFromBadRef
restoreFromPivotDataTable:columnGroupings:rowGroupings:aggregates:flatteningDimension:
restoreViewTractRefFromUndoTractList:calcEngine:containingCellRef:
restrictColumnIndexes:forAggrIndexLevel:forPivotTable:
restrictColumnIndexes:toColumnGroupLevel:forPivotTable:
restrictRowIndexes:forAggrIndexLevel:forPivotTable:
restrictRowIndexes:toRowGroupLevel:forPivotTable:
resultForFunction:
resumeGroupByChangeNotifications
resumeRecalculation
resumeRecalculationForBlock:
resumeUpdating
resurrectModeTokens
retain
retainCount
returnCellContents
returnEmptyCells
returnMergeRanges
returnNumberFormatter:
returnOneEmptyCell
returnOnlyFormulas
returnScientificNumberFormatter:
returnWhileEditingNavigates
reverseMapIndex:
reverseObjectEnumerator
reverseOriginsMap
rewriteFormulaWithBlock:
rewriteMergesForInsertedRange:uids:isRows:
rewriteMergesForRemovedRange:uids:isRows:
rewriteNumberToDurationForSageImport:durationUnitLargest:
rewriteSpec
rewriteSpecBaseToChrome
rewriteSpecChromeToBase
rewriteSpecStack
rewriteType
rewriteTypeUsesAmendRewriteSpec:
rewriteWithContext:forArgAt:usingLinkedRef:useColumnRef:hostCellRef:rewriteBlock:
rewroteFormula:atCoordinate:withRewriteSpec:isUndo:
richTextID
richTextParentInfo
richTextStorageForCalcEngineAtCellID:refIfAvailable:
richTextStorageForLayout
richTextTableReference
richTextValue
rightColumnStrokes
rightInset
rightParenCharacters
rightStroke
rightStrokeOrder
rockWithFirst:second:third:fourth:
rollbackMappings:
rollbackTableUIDHistoryWithRewriteInfo:
rootAncestor
rootCauseForErrorInCell:atRootCell:
rootCommentStorage
rootLayout
rowAggregateGroupSize
rowBasedSubRangesOfCellCount:
rowColumnInfo
rowCount
rowForColumnIndexesWithMerges
rowGroupLevel
rowGroupLevelAtRow:outAggregateIndex:
rowGroupLevelForHeaderColumn:
rowGroupLevelForRowUID:
rowGroupUidForRowUid:outAggregateIndex:
rowGroupings
rowHeaderStorage
rowHeaderUid
rowHeights
rowHiddenStateExtent
rowIndex
rowIndexForRowUID:
rowIndexForUUIDBytes:
rowIndexForUuid:
rowIndexesForUIDs:
rowInfoAtOrAfterTileRowIndex:outTileRowIndex:
rowInfoForTileRowIndex:
rowInfoFromArchive:
rowInfoWithTileRowIndex:wideOffsets:
rowInfos
rowInfosPerRow
rowIsShown:withHiddenStateExtent:withCalcEngine:
rowMarkIndex
rowNameForCellCoord:restrictToBodyRange:translator:cellRangeContainingName:
rowNameForCellID:restrictToBodyRange:
rowOrColumnIndices
rowOrColumnUuids
rowOrder
rowOrderChangedPrecedent
rowOrderChangedPrecedentIgnoringRecalc
rowRangeForUIDs:
rowRegion
rowRemainDup
rowStrokeExportCache
rowToStrokeHeightCache
rowUID
rowUIDForBaseRowIndex:
rowUIDForLookupKey:
rowUIDForRowIndex:
rowUIDForViewRowIndex:
rowUIDSetForCategoryLevel:
rowUIDsForBaseRowIndexes:
rowUIDsForImportedGroupingRows
rowUIDsForRowIndexes:
rowUIDsForRowRange:
rowUIDsForViewRowIndexes:
rowUIDsWithPendingGroupingChanges
rowUidsForGroupUids:
rowUidsForRowGroupUid:
rowUuids
rows
rowsForGroupValue:atLevel:
rowsInvalid
rowsVisible
ruleAtAbsoluteIndex:
ruleAtGroupLevel:
ruleAtIndex:
ruleByChangingBaseIndexTo:
ruleByChangingDirectionTo:
ruleByChangingSummaryColumnTo:
ruleCount
ruleInFilter:atIndex:
ruleWhereValuesInTable:inBaseColumn:matchCell:
ruleWithBaseIndex:direction:
ruleWithFormulaPredicate:
ruleWithGroupingColumnUID:columnUID:direction:
ruleWithViewIndex:direction:
rules
rulesDescription
runChange:withAggregates:
runChange:withSummaryCellMap:migrationHelper:
runChange:withSummaryChangeState:migrationHelper:
runningTotalGroupingColumnUid
rwlock
safeChildren
sageFormulaStringForContainingCell:outHasSageUnsupportedFunctions:
saturationComponent
saveAsEmbiggenedFormat
saveCellStylePropertiesToArchive:archiver:
saveCellStyleToArchive:archiver:
saveTableStylePropertiesToArchive:archiver:
saveToArchive:
saveToArchive:archiver:
saveToArchive:archiver:isInTheDocument:
saveToArchive:columnUids:rowUids:purpose:isRangeRef:preserveRectangularRange:
saveToArchive:tsuColumnUids:tsuRowUids:purpose:isRangeRef:preserveRectangularRange:
saveToCommandPropertyMapMessage:archiver:
saveToMessage:
saveToMessage:archiver:
saveToPropertyCommandMessage:archiver:
saveToStorageArchive:treeArchive:archiver:
sawMissingCombination:
scalarValueForEvalContext:permitAccessInsideMergeRegions:fetchRichTextAttributesIfPlainText:
scalarValueFromCoord:permitAccessInsideMergeRegions:fetchRichTextAttributesIfPlainText:
scaleInfoGeometry:
scaleIsValid
scaleToFit
scaleToFitParent
scaledLayout
scanCharactersFromSet:intoString:
scanInt:
scanLocation
scanUpToCharactersFromSet:intoString:
scannerWithString:
scheduleDetectAndRepairConsistencyViolations
scheduleRepairingSpanningFormulasInOwner:
searchCellStorageRefAtColumnIndex:searchMask:
searchFlags
searchForAnnotationsWithHitBlock:
searchMask
searchReferenceRange
searchSelectionBounds
second
secondsToAdd
selected
selection
selectionAdjustedForGeometryInTableInfo:
selectionAdjustedForVisibilityInTableInfo:
selectionAdjustedForVisibilityInTableInfo:alwaysCheckColumns:
selectionAtIndex:
selectionByAddingCellRange:inTable:withAnchor:cursor:selectionType:
selectionByExtendingWithCellRange:inTable:selectionType:cursorCell:
selectionByRemovingCellRange:inTable:withAnchor:cursor:selectionType:
selectionDragAbortedOnNewSelection
selectionExpandedToCoverCollapsedRows
selectionFromWPSelection:
selectionHighlightFrameFittingParentWidthForChildWithFrame:
selectionToBeginImplicitEditingInTableInfo:
selectionType
selectionUsesBezierPath
selectionWithParent:
selectionWithRange:
selectionWithTableInfo:cellID:
selectionWithTableInfo:cellRegion:
selectionWithTableInfo:columnIndices:
selectionWithTableInfo:rowIndices:
selectsCellOnInitialTap
selectsSingleControlCellWithInteractionUIInTable:
self
sendDeferredNotifictions:
sendRequestForKeys:
sendToDistributor:
serverReachability
setAbsoluteGroupUid:
setAccessController:
setActive:
setActiveTokenCharIndex:
setAfterCountValue:
setAfterMatch:
setAfterRewriteMap:
setAggNode:forFormulaCoord:
setAggrIndexLevel:
setAggregateFieldName:
setAggregateFormulaOwnerUID:
setAggregateFunction:
setAggregateIndex:
setAggregateIndexLevel:
setAggregateType:
setAggregateType:forColumnUID:atGroupLevel:
setAggregates:
setAlignment:
setAllowFreeformFormulaText:
setAllowHorizontalAutoresize:
setAllowSpanningColumnReferenceBodyQualifier:
setAllowTableName:
setAllowWhitespaceInFormulas:
setAllowsBlackDragDropBackground:
setAllowsFullyFilteredTables:
setAllowsMissingPropertiesWithNoParentStyleForUpgrade:
setAnchorCellUID:
setAngle:
setAnimationController:
setAnyReference:
setApplyingToTable:
setArchivedLayoutEngineBundle:
setArgIndex1:
setArgIndex2:
setArgIndex3:
setArgIndex:
setArgsAscending:
setArgumentAt:withPredArg:
setArgumentSpec:
setArrayOfChunkRocks:
setArrowKeyAtEdgeWhileEditingNavigates:
setArrowKeysNavigateWhenEditingBeganByTyping:
setArrowKeysWrap:
setAsAbsoluteWithGroupUid:
setAsRelativeWithGroupUid:
setAttachmentErrorRaisedInTextCell:
setAttribute:
setAuthor:
setAutofillSelection:
setAuxRowColumnInfo:
setBackTabWraps:
setBadgeType:
setBandedFillIsValid:
setBandedFillObject:
setBaseCellRef:preserveColumn:preserveRow:
setBaseCellRef:preserveFlags:
setBaseCellReference:
setBaseCellReference:preserveColumn:preserveRow:
setBaseCellUIDRegion:
setBaseFormatID:
setBasePreserveFlags:
setBaseRangeRef:preserveFlags:
setBaseRow:
setBaseRowIndex:
setBaseTableModel:
setBaseTableUID:
setBaseTile:
setBaseTileRange:
setBaseTractRef:
setBeforeColumnRowUIDMap:
setBeforeCountValue:
setBeforeRewriteMap:
setBezierPathCache:
setBlank:
setBodyCellStyle:
setBodyColumnCoordinates:
setBodyGroupingList:
setBodyRowCoordinates:
setBodySideBorderColumnRange:
setBodyTextStyle:
setBoolValue:
setBoolValue:forProperty:
setBooleanFormatID:
setBordersWithCellMap:
setBordersWithConcurrentCellMap:forTableInfo:
setBottomBorderRowRange:
setBottomStroke:order:
setBottomStrokeLayer:
setBoundingCellRange:
setBoxedObject:forProperty:
setBoxedValue:forProperty:
setByAddingObjectsFromArray:
setByAddingObjectsFromSet:
setByIntersectingWithSet:
setByIntersectingWithSymbolsOfSet:
setByRemovingSpecifiersWithSymbols:
setByUnionWithSet:
setCGFloatValue:forProperty:
setCacheIsValid:
setCachedAlignedFrame:
setCachedAlignedStrokeFrame:
setCachedAllAnnotations:
setCachedAutoSizeFlags:
setCachedAutosizedFrame:
setCachedBaseRegion:
setCachedBaseRegionVersionCounter:
setCachedCellID:
setCachedCellRegion:
setCachedCellRegionVersionCounter:
setCachedCellStyle:
setCachedCellWraps:
setCachedColumnUIDs:
setCachedImageScreenScale:
setCachedIndexSetsAreValid:
setCachedIndexes:
setCachedIndexesForLabelRows:
setCachedIndexesForLeadingColumns:
setCachedIndexesForLeadingSummaryRows:
setCachedIndexesForSummaryAndLabelRows:
setCachedIndexesForSummaryColumns:
setCachedIndexesUnfairLock:
setCachedIsValidReference:
setCachedLabelRowIndexesAtLevels:
setCachedLeadingColumnIndexesAtLevels:
setCachedLeadingRowIndexesAtLevels:
setCachedLeadingSummaryColumnIndexesAtLevels:
setCachedLeadingSummaryRowIndexesAtLevels:
setCachedMaskRect:
setCachedMaskSpillRange:
setCachedMaxNumberOfColumns:
setCachedMaxNumberOfRows:
setCachedMergeRange:
setCachedNumberOfColumns:
setCachedNumberOfFooterOrGrandTotalRows:
setCachedNumberOfFooterRows:
setCachedNumberOfGrandTotalColumns:
setCachedNumberOfHeaderRows:
setCachedNumberOfRows:
setCachedPadding:
setCachedParagraphAlignment:
setCachedPivotIndexSetsAreValid:
setCachedRowUIDs:
setCachedSegment:
setCachedStrokeFrame:
setCachedSummaryColumnIndexesAtLevels:
setCachedSummaryRowIndexesAtLevels:
setCachedTableNameHeight:
setCachedTextStyle:
setCachedValueWasFetchedWithRichTextAttributes:
setCachedVerticalAlignment:
setCalcEngine:
setCalcEngineRegistrationObject:
setCalculationEngine:
setCanvasReferenceProvider:
setCaption:
setCategoryColumnWidth:
setCategoryLevel1CellStyle:
setCategoryLevel1TextStyle:
setCategoryLevel2CellStyle:
setCategoryLevel2TextStyle:
setCategoryLevel3CellStyle:
setCategoryLevel3TextStyle:
setCategoryLevel4CellStyle:
setCategoryLevel4TextStyle:
setCategoryLevel5CellStyle:
setCategoryLevel5TextStyle:
setCategoryOrder:
setCategoryOwner:
setCell:
setCell:atBaseCellCoord:ignoreFormula:clearImportWarnings:
setCell:atBaseCellCoord:ignoreFormula:clearImportWarnings:calcEngine:
setCell:atCellCoord:
setCell:atCellID:
setCell:atCellID:tableUID:calculationEngine:conditionalStyleOwner:ignoreFormula:clearImportWarnings:
setCell:atCellID:tableUID:calculationEngine:conditionalStyleOwner:ignoreFormula:clearImportWarnings:doRichTextDOLC:
setCell:atCellUID:
setCell:atCellUID:formulaReplacer:
setCell:atCellUID:ignoreFormula:clearImportWarnings:
setCell:atCellUID:ignoreFormula:clearImportWarnings:formulaReplacer:
setCell:atColumnIndex:tileRowIndex:
setCell:atIndex:
setCellBorder:
setCellBorder:atCellID:
setCellContents:
setCellCount:
setCellCountValid:
setCellData:
setCellDiffArray:
setCellDragController:
setCellEditingMaskLayers:
setCellEditorsCanScrollToNonLocalTableSelection:
setCellFlags:
setCellID:
setCellIDToWPColumnCache:
setCellLists:
setCellMap:
setCellMap:tableUID:calculationEngine:conditionalStyleOwner:ignoreFormulas:skipDirtyingNonFormulaCells:doRichTextDOLC:
setCellPropsRowHeight:
setCellRange:
setCellRange:atIndex:
setCellRangeVisibleRect:
setCellRegion:
setCellRegionForClearedMergeStrokes:
setCellSpec:
setCellSpec:clearingID:
setCellSpecRepairingFormats:
setCellStyle:
setCellStyle:atIndex:
setCellStyle:clearingID:
setCellStyle:ofColumnAtIndex:
setCellStyle:ofColumnAtUID:
setCellStyle:ofRowAtIndex:
setCellStyle:ofRowAtUID:
setCellStyle:textStyle:
setCellStyleHandle:clearingID:
setCellStyleHandles:
setCellUID:
setCellUIDRange:
setCellUIDRegion:
setCellUIDs:
setCellWraps:
setCellsConcurrently:ignoreFormula:clearImportWarnings:formulaReplacer:
setCellsConcurrently:tableUID:calculationEngine:conditionalStyleOwner:ignoreFormula:clearImportWarnings:
setCellsPerSubRegion:
setCellsWithBaseCellMap:ignoreFormulas:skipDirtyingNonFormulaCells:
setChangeDescriptor:
setChangeDescriptors:
setChangeNotifier:
setChangeType:
setCharacterStyle:range:undoTransaction:
setCharactersToBeSkipped:
setChildren:
setChromeCoordsAreViewCoords:
setChromeRangeRef:
setChromeRangeRef:preserveFlags:
setChromeTractRef:
setClampingRect:
setCleanCellDependencyRows:
setClearedMajorStrokeLayer:
setClearedMinorStrokeLayer:
setClearedStrokeForGridColumn:beginRow:endRow:
setClearedStrokeForGridRow:beginColumn:endColumn:
setClearedStrokeLayer:
setColor:
setColumnGroupLevel:
setColumnGroupUID:asCollapsed:
setColumnHeaderStorage:
setColumnIndexesInRow:
setColumnOrRowIndex:
setColumnOrderReversed:
setColumnRegion:
setColumnRemainDup:
setColumnRowUIDMap:
setColumnStrokeExportCache:
setColumnToStrokeWidthCache:
setColumnUID:
setColumnUid:
setColumnWidths:
setColumns:
setColumnsInvalid:
setColumnsVisible:
setCommentStorage:
setCommentStorage:atBaseCellCoord:
setCommentStorage:atCellUID:
setCommentStorage:clearingID:
setCommentStorageID:
setCommentStorageTableReference:
setCompletionText:
setComponents:
setCompressedColumnIndexes:
setConditionalStyle:
setConditionalStyleFormulaOwner:
setConditionalStyleID:
setConditionalStyleOwnerUID:
setConditionalStyleSetTableReference:
setConfidence:
setContainedTextEditingLayout:
setContainsCellBorderChanges:
setContainsSuppressCustomFormatHandlingProperty:
setContentIterator:
setContentReadingThreads:
setContentWritingDirection:
setContextSheetName:
setContextTableResolver:
setContinuesEditingAfterNavigation:
setControlCellSelection:
setControlCellSpecID:
setControlCellSpecTableReference:
setControlCellUIAlwaysVisible:
setControlFormatID:
setCornersCanDragResize:
setCount:
setCppCalcEngine:
setCppCellTractRef:
setCreateLargeDefaultTables:
setCurCellID:
setCurRow:
setCurTile:
setCurTileRange:
setCurrencyDecimalValue:
setCurrencyDecimalValue:roundToDoublePrecision:
setCurrencyDoubleValue:
setCurrencyFormatID:
setCurrencyOrNumberDecimalValue:
setCurrentDate:timeZone:markVolatilesDirty:
setCurrentFormat:flags:
setCurrentFormat:isExplicit:
setCurrentFormat:isExplicit:forExcel:
setCurrentFormatID:
setCurrentScreenScale:
setCurrentTableIdRemapper:
setCurrentTimeZone:
setCursorCellIDs:
setCursorCellUID:
setCustomFormatID:
setCustomOrderedStrokeLayer:
setCustomStrokeLayer:
setCustomUnorderedStrokeLayer:
setData:
setDataStore:
setDataStoreIterator:
setDate:
setDateAccumulator:
setDateAsTimeInterval:
setDateFormat:
setDateFormatID:
setDateValue:
setDefaultColumnWidth:
setDefaultFormatForValue
setDefaultMajorStrokeLayer:
setDefaultMinorStrokeLayer:
setDefaultRowHeight:
setDefaultStrokeLayer:
setDelegate:
setDependencyTracker:
setDependentsList:
setDeprecatedMessageType:
setDeprecatedProvider:
setDimensions:
setDirection:
setDirtyCellDependencyRows:
setDirtyCellRange:
setDirtyCellRegionGatherer:
setDirtyPrecedentCount:
setDirtyStrokeRange:
setDirtyingInProgress:
setDisableImplicitNaming:
setDisallowHeaderIndexingForTableUID:
setDoFullRefresh:
setDocumentIsClosing:
setDocumentRandomSeed:
setDoesNotNeedFormulaRewriteForImport
setDoesNotNeedFormulaRewriteForImport:
setDontClearBackground:
setDowngradedForPrePivot:
setDragAndDropDetails:
setDragByHandleOnly:
setDrawBlackAndWhite:
setDrawPreventAntialias:
setDrawableIsBeingCopied:
setDrawsBlackAndWhite:
setDupContentCache:
setDurationFormat:
setDurationFormatID:
setDurationInterval:
setDurationTimeIntervalValue:
setDurationUnits:
setDurationValue:
setDuringRollback:
setDynamicAddOrRemoveColumnElementSize:
setDynamicAddOrRemoveRowElementSize:
setDynamicBandedFill:
setDynamicBandedFillSetting:
setDynamicCellFillDelegate:
setDynamicColumnAdjustment:
setDynamicColumnTabSize:
setDynamicContentDelegate:
setDynamicFontColor:
setDynamicFontColorCellRange:
setDynamicHeightResize:
setDynamicHidingContent:
setDynamicHidingRowsCols:
setDynamicHidingRowsColsDirection:
setDynamicHidingText:
setDynamicInfoGeometry:
setDynamicLayout:
setDynamicLayoutParticipants:
setDynamicOrderedStrokeLayer:
setDynamicRemovingText:
setDynamicRepResize:
setDynamicRepResizeSessionInProgress:
setDynamicRepressFrozenHeaderColumns:
setDynamicRepressFrozenHeaderRows:
setDynamicResizeInfo:
setDynamicResizingColumnAdjustment:
setDynamicResizingColumnRange:
setDynamicResizingColumns:
setDynamicResizingRowAdjustment:
setDynamicResizingRowRange:
setDynamicResizingRows:
setDynamicRevealingRowsCols:
setDynamicRevealingRowsColsDirection:
setDynamicRowAdjustment:
setDynamicRowTabSize:
setDynamicSavedLayoutGeometry:
setDynamicSelection:
setDynamicStrokeLayer:
setDynamicSuppressingConditionalStylesCellID:
setDynamicTableNameResize:
setDynamicWidthResize:
setEarlyRefreshRequested:
setEditingCellIDForInvalidation:
setEditingReferenceNode:
setEffectiveSize:
setEmpty:
setEmptyCellCount:
setEmptyFilteredTable:
setEmptyValueAtCoord:
setEntry:forPrecedentCoord:
setEqualityPermitted:
setError:forCell:
setErrorType:
setEstimatedByteSize:
setEvaluationContext:
setExpandBackgroundFill:
setExpandDirtyRegionForReferences:
setExplicitFormatFlags:
setExportPermanentHidingState:
setExportsCellAnnotations:
setExportsCellComments:
setExpressionNode:
setExpressionTree:
setExteriorStroke:
setExteriorTextWrap:
setExtraInfoNumber:
setExtraInfoString:
setFilterColons:
setFilterSet:
setFilterSetForColumns:
setFilterSetForRows:
setFilterSetType:
setFinalDstTableUID:
setFinalTopRowIndex:
setFirst:
setFirstFragment:
setFirstIndex:
setFirstPartitionWidth:
setFitHeight:forCellID:
setFittingHeightsFromCollection:
setFittingHeightsFromCollectionArray:
setFixedColumnWidthStack:
setFixupFormulas:
setFlags:
setFloatValue:forProperty:
setFollowsLinksOnFirstTap:
setFontInfoCache:
setFooterColumnSeparatorColumnRange:
setFooterRowCellStyle:
setFooterRowSeparatorRowRange:
setFooterRowTextStyle:
setForConditionalStyle:
setForDrawing:
setForFormulaPlainText:
setForceEscaping:
setForceSheetName:
setForceSplitting:
setForceTableName:
setForceZoomInOnBeginEditing:
setForcingRegion:
setFormat:
setFormat:isExplicit:
setFormatID:forStorageFlag:
setFormatString:
setFormatTableReference:
setFormats:
setFormatsAdded:
setFormatsRemoved:
setFormula:
setFormula:clearingID:
setFormulaCoord:
setFormulaCoordSpace:
setFormulaEditorEvaluatesFormulas:
setFormulaErrorTableReference:
setFormulaID:
setFormulaObject:
setFormulaObject:atIndex:
setFormulaObject:atIndex:formulaReplacer:
setFormulaObject:clearingID:
setFormulaOwner:
setFormulaOwnerUID:
setFormulaOwnerUIDsWithMap:
setFormulaOwnerUIDsWithMap:shouldStealReferences:
setFormulaResultCellsWithCellMap:
setFormulaStore:
setFormulaSyntaxError:
setFormulaSyntaxError:clearingID:
setFormulaSyntaxErrorID:
setFormulaTableReference:
setFormulasForUndo:
setFoundANumber:
setFourth:
setFrame:
setFromGroupByUID:
setFromTableCoordMapperForPasteboard:
setFromTableUID:
setFrozenHeaderColumnsSpace:
setFrozenHeaderCornerSpace:
setFrozenHeaderRowsSpace:
setFunctionEndNode:
setFunctionIndex:
setFunctionName:
setFunctionNode:
setFunctorForType
setGeometry:
setGridRange:
setGroupBy:
setGroupByChange:
setGroupBySet:
setGroupByUID:
setGroupByUid:
setGroupLevel:
setGroupNode:
setGroupNodeUIDInfo:
setGroupSortOrder:
setGroupUID:asCollapsed:
setGroupingColumnList:
setGroupingColumnUID:
setHasCachedIsValidReference:
setHasContent:
setHasContentIsCached:
setHasCustomFormatsToPaste:
setHasInterestingKeys:
setHasLargerFonts:
setHasPreserveFlag:
setHasReference:
setHasVisibleWarnings:
setHeaderColumnCellStyle:
setHeaderColumnRowCoordinates:
setHeaderColumnSeparatorColumnRange:
setHeaderColumnTextStyle:
setHeaderColumnsFrozen:
setHeaderColumnsRepeat:
setHeaderRowCellStyle:
setHeaderRowColumnCoordinates:
setHeaderRowSeparatorRowRange:
setHeaderRowTextStyle:
setHeaderRowsFrozen:
setHeaderRowsRepeat:
setHeadersFrozenByDefault:
setHeight:forTextStyle:
setHeight:ofRow:
setHeight:ofRowAtIndex:
setHidden:
setHidden:atIndex:
setHidden:atIndexes:
setHidden:inRange:
setHiddenRowsColumnsCache:
setHiddenStateExtentUid:
setHiddenStateOwnerForColumnsUID:
setHiddenStateOwnerForRowsUID:
setHiddenStates:
setHiddenStatesOwner:
setHiddenStatesUid:
setHideStepperHUD:
setHidingGrandTotalColumns:
setHidingGrandTotalRows:
setHidingState:atColumnIndex:
setHidingState:atIndex:
setHidingState:atRowIndex:
setHidingState:ofRowAtIndex:
setHint:
setHintMatricesByCanvas:
setHorizontal:
setHorizontalStroke:
setHostCell:hostColumnUID:hostRowUID:
setHostCellCoord:
setHostTableUID:
setHotData:
setHour:
setHyperlinkCellID:
setIdOfFirstOccurence:
setIdentifier:
setIgnoreAndPreserveUntilModifiedRuleForField:message:
setIgnoreAndPreserveUntilModifiedRuleForFieldPath:message:
setIgnored:
setImportDate:
setImportSettings:
setImportSource:
setImportWarningSet:
setImportWarningSetID:
setImportWarningSetTableReference:
setImportedRegion:
setInDynamicLayout:
setInDynamicLayoutMode:
setInInvalidate:
setIncludesPrefixes:
setIndex:
setInfoGeometry:
setInitialWhitespace:
setInsertOppositeUid:
setInsertionCenterPosition:
setInset:
setInt:forKey:
setIntValue:forProperty:
setInteractionTypeFromTheFuture:
setInterestingCells:
setInternalOwnerID:
setInternetReachability:
setIntersectingRowsIndexSet:
setInvalidColumnIndex:
setInvalidFunctionName:
setInvalidReferenceToMerge:
setInvalidRowIndex:
setInvalidTableOffset:
setInvalidateAllChrome:
setInvalidateAllChromeCaches:
setInvalidateColumnChrome:
setInvalidateKnobs:
setInvalidateRowChrome:
setInvalidateSelection:
setInvalidateTableName:
setInvalidatedForEditingCell:
setInverseMergeActions:
setIsAPivotDataModel:
setIsBlank:
setIsCategoryEnabled:
setIsCircularReference:
setIsColumnOrderTemporary:
setIsCopyContainingCategoryColumn:
setIsDynamicallyChangingContent:
setIsDynamicallyChangingRowOrColumnCount:
setIsDynamicallyRemovingText:
setIsEnabled:
setIsFormula:
setIsGrouped:
setIsInCycle:
setIsInverse:
setIsLabelRow:
setIsNewForBraveNewCell:
setIsRangeRef:
setIsRegisteredWithCalcEngine:
setIsRowOrderTemporary:
setIsSummaryRow:
setIsValid:
setIteratorToRow:
setIterators:
setKeepObjectInMemory:
setKeyRange:
setKeyVal:
setKeys:
setLabelLevel1CellStyle:
setLabelLevel1TextStyle:
setLabelLevel2CellStyle:
setLabelLevel2TextStyle:
setLabelLevel3CellStyle:
setLabelLevel3TextStyle:
setLabelLevel4CellStyle:
setLabelLevel4TextStyle:
setLabelLevel5CellStyle:
setLabelLevel5TextStyle:
setLabelRowHeight:atCategoryLevel:
setLabelRowVisibility:atCategoryLevel:
setLanguage:forCharRange:undoTransaction:
setLastCellID:
setLastCellRangeAdded:
setLastColumnDiffPos:
setLastFragment:
setLastFullRefreshDate:
setLastIndex:
setLastRequestDate:
setLastRowDiffPos:
setLastSavedInBNC:
setLayout:
setLayoutCacheFlags:
setLayoutCellData:
setLayoutConcurrentQueue:
setLayoutDirectionIsLeftToRight:
setLayoutEngine:
setLayoutHint:
setLayoutInvalidate:
setLayoutInvalidateChildren:
setLayoutInvalidateProvider:
setLayoutInvalidateSize:
setLayoutInvalidateTableNameVisibility:
setLayoutMeasureQueue:
setLayoutMergeRange:
setLayoutPartititionsRightToLeft:contentPartitionsRightToLeft:
setLayoutResetScaleToFit:
setLayoutSpacesInvalidateCoordinates:
setLayoutSpacesInvalidateCoordinatesAfterRow:
setLayoutSpacesInvalidateTableOffsets:
setLayoutUpdateChildren:
setLayoutValidateQueue:
setLazyReferencesAreLoaded:
setLeftStroke:order:
setListType:
setLoadFromFileVersion:
setLocalOwnerID:
setLocale:
setLocaleSpecificStorage:forKey:
setLocalizedBlankGroupName:
setLocalizedDateFormatFromTemplate:
setLocalizedErrorGroupName:
setLocalizedFalseGroupName:
setLocalizedFalseGroupNameForColumn:
setLocalizedTrueGroupName:
setLocalizedTrueGroupNameForColumn:
setLogToken:
setLowerBound:
setLowerBoundInclusive:
setMajorStrokeLayer:
setMajorStrokeLayerToken:
setMask:
setMatcher:
setMatchesFound:
setMatchesObjectPlaceholderGeometry:
setMaxArgsAllowed:
setMaxConcurrentTasks:
setMaxNumberOfColumns:
setMaxNumberOfPopulatedCells:
setMaxNumberOfRows:
setMaxOrder:
setMaxSize:
setMaxWidthForChildren:
setMayModifyFormulasInCells:
setMayModifyValuesReferencedByFormulas:
setMergeActions:
setMergeCacheLoaded:
setMergeChangeDistributor:
setMergeFormulaIndexes:
setMergeFormulas:
setMergeInfo:
setMergeOriginMovedInfo:
setMergeRange:
setMergeRangeCache:
setMergeRangesForLayoutPass:
setMergedCellRanges:
setMergedStrokes:
setMessageType:messagePrototype:descriptor:unarchiveClassname:
setMessageVersion:
setMetadata:
setMightOverlap:
setMigratingStylesOnly:
setMinCursorCellID:
setMinFractionDigits:maxFractionDigits:
setMinSize:
setMinion:
setMinorStrokeLayer:
setMinorStrokeLayerToken:
setMinute:
setMissingDataFieldAtIndex:
setMissingPostBNCDatalists:
setMixedColumnStartedWithPreserve:
setMixedDurationsAndNumbers:
setMode:
setModelHeight:forRow:
setModelIteratorData:
setModelIteratorHasCell:
setModelWidth:forColumn:
setMonth:
setMultipleChoiceListFormatID:
setNRM_formulaOwnerUID:
setName:
setNamesUsed:
setNeedWPColumn:
setNeedsDisplayInRect:
setNeedsFilterFormulaRewriteForImport:
setNeedsFormulaReset:
setNeedsFormulaRewriteForImport:
setNeedsRebuildOfAggFormulas:
setNeedsSubOwnerIDUpgrade:
setNeedsToBeArchived:
setNeedsToUpdateFilterSetForImport:
setNeedsUidRectUpgrade:
setNeverShowsMenu:
setNewCanvasRevealedHorizontally:
setNextCategoryAggregatesOwnerUID:
setNextCategoryOwnerUID:
setNextConditionalStyleOwnerUID:
setNextGroupByUID:
setNextHiddenStateForColumnsOwnerUID:
setNextHiddenStateForRowsOwnerUID:
setNextID:
setNextMergeOwnerUID:
setNextPencilAnnotationOwnerUID:
setNextSortRuleReferenceTrackerOwnerUID:
setNextTableUID:
setNonWhitespaceAndNewlineCharSet:
setNotifyType:
setNumCellsPerTask:
setNumDirtyCells:
setNumber:
setNumber:withLocale:
setNumberDecimalValue:
setNumberDecimalValue:roundToDoublePrecision:
setNumberDoubleValue:
setNumberFormatID:
setNumberOfColumns:
setNumberOfFooterRows:
setNumberOfHeaderColumns:
setNumberOfHeaderRows:
setNumberOfLayoutColumns:
setNumberOfRows:
setObject:atIndexedSubscript:
setObject:forKey:
setObject:forKeyedSubscript:
setObject:forProperty:
setObject:forUncopiedKey:
setObjectType:
setOccurrence:
setOfSpecifiersContainedInSet:
setOfSpecifiersNotContainedInSet:
setOfSpecifiersPassingTest:
setOfSpecifiersWithDate:
setOfSpecifiersWithSymbol:
setOffline:
setOffset:
setOperatorChar:
setOptions:
setOrder:
setOrder:forDimension:
setOrderUsingViewOrderForDimension:
setOriginalSrcRegion:
setOverrideLayoutHint:
setOverrideText:
setOverrideTextAsTyped:
setOwnerIndex:
setOwnerKind:
setOwnerName:
setOwnerUID:
setOwnerUIDForLegacyGlobalID:ownerUID:
setOwningAttachment:
setPaddingInsets:
setPageCount:
setPageNumber:
setParaStyleToHeightCache:
setParagraphStyle:forCharRange:undoTransaction:
setParagraphWritingDirection:forCharRange:undoTransaction:
setParent:
setParentInfo:
setParentNode:
setParseAsBaseTableReference:
setPartitionPosition:
setPartitioningPass:
setPartitioningPassCache:
setPasteFilterHidingAsUserHiding:
setPasteInverseCommands:
setPasteType:
setPasteWasUpdate:
setPastesTile:
setPayload:
setPivotBodySummaryColumnCellStyle:
setPivotBodySummaryRowCellStyle:
setPivotCachedIndexesUnfairLock:
setPivotDataRefreshTimestamp:
setPivotDataRefreshUID:
setPivotHeaderColumnSummaryCellStyle:
setPivotInfo:
setPivotOptions:forUid:
setPivotOptions:groupingColumnUid:forSortingOptions:redoSort:
setPivotRulesWithPivotDataTable:columnGroupings:rowGroupings:aggregates:flatteningDimension:
setPivotSourceBodyTract:
setPivotSourceBodyUidTract:
setPivotSourceHeaderTract:
setPivotSourceTableName:
setPivotSourceTableUID:
setPivotTableUID:
setPopulatedColumnsForGroupLevel1:
setPopulatedColumnsForGroupLevel2:
setPopulatedColumnsForGroupLevel3:
setPopulatedColumnsForGroupLevel4:
setPopulatedColumnsForGroupLevel5:
setPopulatedCustomFormat:
setPopupModel:
setPosition:
setPreBNCFormatTableReference:
setPrePivotRowFilterSet:
setPrecedentsList:
setPredArg0:
setPredArg1:
setPredArg2:
setPredicate:
setPreserveFlags:
setPreserveFlagsOnSubrange:
setPreserveRectangular:
setPreserveRectangularRange:
setPresetID:
setPresetIDForUpgrade:
setPresetNeedsStrongOwnership:
setPresets:
setPresets:ofKind:
setPrevEditingSpillingTextRange:
setPreviousLevel:
setPreviousMatch:
setPreviousValueIsRegex:
setPrimitiveGeometry:
setProblemExpressionString:
setProblemNodeIsCellReference:
setProcessChangesFiltering:
setProcessHiddenRowsForExport:
setProcessedByLayoutEngine:
setPropertiesFromMap:
setPropertyMapToReset:
setPropertyMapToSet:
setPropertyMapToTextStyleMap:
setProvidedArgs:
setProvidedValueTypeBeforeUpgrade
setPurpose:
setQueriedModel:
setQuoteComponents:
setRange:
setRangeContext:
setRangeWithFunction:
setRank:
setRatingsDragCellID:
setRawString:
setReachabilityUpdatedBlock:
setRefPathSplitter:
setReference:forTileID:
setReferenceArray:
setReferenceColor:
setReferenceColorHelper:
setReferenceEndCellInvalid:
setReferenceIdentifiers:
setReferenceIsComplete:
setReferencesMatchingInputAsPrefix:
setRegion:
setRegionIterator:
setRegionMovedInfo:
setRegisteredWithCoordinator:
setRelativeCellRef:
setRelativeColumn:
setRelativeColumns:
setRelativeGroupUid:
setRelativeRows:
setRemoteDataStore:
setRemoteDataSyncKey:
setReorganizeValue:atIndex:
setReorganizeValues:
setReoriginToZero:
setRepairOrReplaceMap:
setRepeatHeaderColumnsSpace:
setRepeatHeaderCornerSpace:
setRepeatHeaderRowsSpace:
setRepeatingHeaderColumnsEnabled:
setRepeatingHeaderRowsEnabled:
setRepositionStockPopover:
setRequestsInFlight:
setRest:
setReturnEmptyCells:
setReturnMergeRanges:
setReturnOneEmptyCell:
setReturnOnlyFormulas:
setRewriteSpecBaseToChrome:
setRewriteSpecChromeToBase:
setRewritingMinion:
setRichTextID:
setRichTextParentInfo:
setRichTextTableReference:
setRichTextValue:
setRichTextValue:clearingID:convertToPlaintextIfPossible:
setRichTextValueWithoutPlaintextCollapse:
setRightStroke:order:
setRowColumnInfo:
setRowForColumnIndexesWithMerges:
setRowGroupLevel:
setRowGroupUID:asCollapsed:
setRowHeaderStorage:
setRowHeights:
setRowIndex:
setRowInfos:
setRowInfosPerRow:
setRowMarkIndex:
setRowOrder:
setRowOrderUsingViewOrder
setRowRegion:
setRowRemainDup:
setRowStrokeExportCache:
setRowToStrokeHeightCache:
setRowUID:
setRowUIDsForImportedGroupingRows:
setRowUIDsWithPendingGroupingChanges:
setRows:
setRowsUserVisible:
setRules:
setRwlock:
setSaveAsEmbiggenedFormat:
setScaleToFit:
setScaledLayout:
setSearchMask:
setSearchReferenceRange:
setSearchSelectionBounds:
setSecond:
setSecondsToAdd:
setSelected:
setSelection:
setSelectionDragAbortedOnNewSelection:
setSelectionUsesBezierPath:
setSelectsCellOnInitialTap:
setServerReachability:
setSetNeedsDisplay:
setSheetName:
setSheetNameUnquoted:
setShouldCleanGraphForConsistencyViolation:
setShouldFastPathMeasureFitWidth:
setShouldPerformDetectAndRepairConsistencyViolations:
setShouldRepositionStockPopover:
setShouldSkipNextAsyncSort:
setShouldUseWideRows:
setShouldZoomOutOnEndEditing:
setShowAggregateName:
setShowAsType:
setShowCleanCells:
setShowGeometricAsBase:
setShowReferenceHighlightsOnFormulaCellSelection:
setShowsCellEditingToolbar:
setShowsCellOverflowIndicator:
setShowsCellWarningIndicator:
setShowsHideUnhideUI:
setShowsOverlayLayers:
setShowsSelectionKnobsWhileEditingCell:
setShowsTableChrome:
setShuffleMap:
setShuffleMapping:
setSize:atIndex:
setSizeOfText:
setSortOrder:
setSourceCellRange:
setSourceColumnCount:
setSourceData:
setSourceEncoding:
setSourceRowCount:
setSpace:
setSpanningColumns:
setSpanningRows:
setSpansAllColumns:
setSpansAllRows:
setSpareFormat:isExplicit:
setSpillMajorStrokeLayer:
setSpillMinorStrokeLayer:
setSpillStrokeColumns:
setSpillStrokeLayer:
setSrcCoordMapper:
setStage:andFinal:
setStartingTileID:
setState:
setStorage:
setStorageParentToInfo:
setStorageVersionPreBNC:
setString:
setStringID:
setStringTableReference:
setStringValue:atUidCoord:
setStringValue:clearingID:
setStringValue:clearingID:shouldWrap:
setStrings:
setStroke:
setStroke:forBottomOfRow:order:columnRange:
setStroke:forLeftOfColumn:order:
setStroke:forLeftOfColumn:order:rowRange:
setStroke:forPresetIndex:
setStroke:forRightOfColumn:order:
setStroke:forRightOfColumn:order:rowRange:
setStroke:forTopOfRow:order:
setStroke:forTopOfRow:order:columnRange:
setStroke:inRange:order:
setStrokeIterator:
setStrokeLayer:forBottomOfRow:
setStrokeLayer:forRightOfColumn:
setStrokeLayer:forTopOfRow:
setStrokePreset:atIndex:
setStrokeProvider:
setStrokeRegion:
setStrokeSidecar:
setStrokeSpillForRightGridColumn:leftGridColumn:inRow:
setStrokeTypeToLayerMap:
setStrokeTypeToLayerStackMap:
setStrokesDefaultVendor:
setStrongReference:message:
setStrongReferenceArray:message:
setStrongReferences:
setStructuredTextImportConfidenceThreshold:
setStructuredTextImportConfidenceThresholdForCanvas:
setStructuredTextImportSizeLimit:
setStyle:
setStyleApplyClearsAll:
setStyleCount:
setStyleNetwork:
setStyleProviderStack:
setStyleProvidingSource:
setStyleTableReference:
setStylesheet:
setStylesheetForUpgradeToSingleStylesheet:
setSummaryModel:
setSummaryRowHeight:atCategoryLevel:
setSupportsActionMenu:
setSupportsAddBodyRowAtBottomSiriKitIntent:
setSupportsAutoResizedTables:
setSupportsAutofill:
setSupportsAutomaticNumberKeyboard:
setSupportsBidiTablesUI:
setSupportsCanvasReferenceEditing:
setSupportsCategorization:
setSupportsCellCommentsActivityLines:
setSupportsContainedTextEditing:
setSupportsControlCells:
setSupportsCopySnapshot:
setSupportsCreateChartFromSelection:
setSupportsDragDropMoveMode:
setSupportsDynamicallyHidingRowColumnForDragDrop:
setSupportsFormulaEditing:
setSupportsFrozenHeaders:
setSupportsHiddenCells:
setSupportsImplicitEditing:
setSupportsInlineAttachments:
setSupportsMergedCells:
setSupportsPivotTables:
setSupportsQuickFilterUI:
setSupportsRepeatHeaderRowsOnEachPage:
setSupportsRowColumnAdderKnob:
setSupportsRowMovesInPaginatedTables:
setSupportsStockUI:
setSupportsTableColumnAutocomplete:
setSupportsTableTranspose:
setSupportsiOSContextMenuItemForEvenlyDistributedColumns:
setSupportsiOSContextMenuItemForEvenlyDistributedRows:
setSupportsiOSContextMenuItemForWrappedText:
setSuppressIdenticalEndReference:
setSuspendNotify:
setSymbol:
setTabAtEdgeAddsColumn:
setTabAtEdgeAddsRow:
setTabWhileEditingNavigates:
setTable:
setTableDefaultFontHeightsAreValid:
setTableEnvironment:
setTableHasStrongOwnership:
setTableInfo:
setTableInfoForGSSP:
setTableIsLTR:
setTableModel:
setTableModelDuringUnarchive:
setTableName:
setTableNameBorderEnabled:
setTableNameBounds:
setTableNameEditingStorage:
setTableNameEnabled:
setTableNameHeight:
setTableNameHeightValid:
setTableNameSelection:
setTableNameShapeStyle:
setTableNameStyle:
setTableNameUnquoted:
setTableNameValid:
setTableProvider:
setTableRange:bodyRange:forTableUID:
setTableRepIsBeingRemovedFromBackgroundLayout:
setTableRowsBehavior:
setTableStyle:
setTableStylePreset:
setTableTranslatorBaseMapForPasteboard:
setTableTranslatorViewMapForPasteboard:
setTableUID:
setTableUIDInfo:
setTableWidthForRightToLeft:
setTargetCellRange:
setTempUpgradePresetID:
setTempWPColumnCache:
setTemporaryRowOrder:
setTerminateRegionIterator:
setTerminated:
setTextColorOverride:
setTextFormatID:
setTextImportRecord:
setTextMeasurerBundle:
setTextStyle:
setTextStyle:atIndex:
setTextStyle:clearingID:
setTextStyle:ofColumnAtIndex:
setTextStyle:ofColumnAtUID:
setTextStyle:ofRowAtIndex:
setTextStyle:ofRowAtUID:
setTextStyleHandle:
setTextStyleHandle:clearingID:
setTextStyleHandles:
setTextStyleReferences:
setTextStyleToFontHeight:
setTextureOpacity:
setThird:
setThresholdCellValues:
setTileRowIndex:
setTimeZone:
setTimer:
setToIdentityMapping
setToUpgradeMapping
setTokenAttachment:
setTokenizeFormulaStringLiterals:
setTopBorderRowRange:
setTopLeft:
setTopStroke:order:
setTopStrokeLayer:
setTract:
setTrailingWhitespace:
setTransform:
setTransformFromCanvas:
setTransformFromDevice:
setTransformToCanvas:
setTransformToDevice:
setTranslator:
setTransposedBodyRange:
setTransposedInfo:
setTrimNames:
setType:
setUidBased:
setUidMap:
setUidRanges:
setUidTractList:
setUnSyncedStocks:
setUniqueValueToRowIndexes:
setUniqueValueToRowUids:
setUnitName:
setUpdateEditorRemainders:
setUpdatedLevel:
setUpgradeMessageType:messagePrototype:unarchiveClassname:
setUpgrading:
setUpgradingToSubOwnerUIDs:
setUpperBound:
setUpperBoundInclusive:
setUseBandedFill:
setUseSymbolicNames:
setUseWholeTableForInsertionDependencies:
setUsedSymbolicName:
setUserHidden:
setUserSpaceToDeviceSpaceTransform:
setUsesLimitedAutomaticFormatParsing:
setUsesLimitedNumberFormatInspector:
setUsesOnlyFixedCoords:
setUsesSelectionChromeResizer:
setUuid:
setValidCells:
setValue:
setValue:atCoord:
setValue:forComponent:
setValue:forFormulaCoord:
setValue:forKey:
setValue:forProperty:
setValue:forSpecifier:
setValueToMatch:
setValueType:
setVariationMap:
setVerticalAlignment:
setVerticalStroke:
setViewCellRect:
setViewColumnIndexesInCurrentRow:
setViewPreserveFlags:
setViewRangeRef:preserveFlags:
setViewScale:
setViewTractRef:
setVisible:
setVisibleFillKnobs:
setVisibleIndexSet:
setWarnWhenFormulasReferToEmptyCells:
setWarningSetsForUndo:
setWasConstructedViaNames:
setWasCut:
setWasQuoted:
setWasUnarchivedFromAProvidedTable:
setWeakReference:message:
setWhitespaceAfter:
setWhitespaceAfterDelimiter:
setWhitespaceAfterDelimiters:
setWhitespaceAfterEquals:
setWhitespaceAfterIdentifier:
setWhitespaceAfterLeftParen:
setWhitespaceAfterLet:
setWhitespaceBefore:
setWhitespaceBeforeFirstChild:
setWhitespaceCharSet:
setWidth:
setWidth:ofColumn:
setWidth:ofColumnAtIndex:
setWidthHeightCache:
setWidthHeightCollections:
setWithArray:
setWithCapacity:
setWithObject:
setWithSet:
setWithSpecifier:
setWithSpecifierArray:
setWithSpecifiers:
setWpColumn:
setWrappedRangeRef:
setXLImportDateMode:
setYear:
setZoomOperationIsInProgress:
setZoomToEditOperationIsInProgress:
setZoomToEditVisibleCellRange:
setlabelLevel1CellStyle:
setlabelLevel1TextStyle:
setlabelLevel2CellStyle:
setlabelLevel2TextStyle:
setlabelLevel3CellStyle:
setlabelLevel3TextStyle:
setlabelLevel4CellStyle:
setlabelLevel4TextStyle:
setlabelLevel5CellStyle:
setlabelLevel5TextStyle:
settingsFromArchive:
setup
setupAfterUnarchive
setupAfterUnarchiveForPivotTable:pivotDataTable:
setupContainedTextEditingLayout:
setupReceiver
setupTableModelForPrototypeIndex:forTableInsertOnly:
setupWithGroupCellValue:groupBy:atLevel:groupUid:children:
shallowCopy
shallowCopyToCell:
sharedApplication
sharedCalculationEngineConfiguration
sharedCoordinator
sharedLoadFromArchive:
sharedPropertiesProvider
sharedTableConfiguration
sheetFill
sheetName
sheetNameUnquoted
sheetTableNamePrecedentForTableUID:
shiftGeometryToIncludeTableNameHeight
shiftIndexesBackAtIndex:count:
shiftIndexesForwardAtIndex:count:
shiftUpAndYankBy:
shiftUpAtTileRowIndex:count:
shimControlFormatTypeForInteractionType:
shortDescription
shortStringForDayOfWeekType
shortStringForDayOfWeekTypeForLocale:
shortStringForDayType
shortStringForGroupingType:
shortStringForGroupingType:locale:
shortStringForMonthOfYearType
shortStringForMonthOfYearTypeForLocale:
shortStringForMonthType
shortStringForMonthTypeForLocale:
shortStringForQuarterOfYearTypeForLocale:
shortStringForYearQuarterType
shortStringForYearQuarterTypeForLocale:
shortStringForYearType
shortStringForYearTypeForLocale:
shortStringForYearWeekType
shortStringForYearWeekTypeForLocale:
shortValue
shouldAbortRecalculation
shouldAllowApplyConcurrentCellMap:
shouldCancelScrollingToSelectionPath:forChanges:
shouldCleanGraphForConsistencyViolation
shouldDelayArchiving
shouldDisplaySummaryLabelRowAtGroupLevel:
shouldFastPathMeasureFitWidth
shouldForceRegisterAllTables
shouldPerformDetectAndRepairConsistencyViolations
shouldRepositionStockPopover
shouldReuseLayout:forSize:parentLayout:hint:
shouldRowUseBandedFill:
shouldSaveAlternates
shouldSendSetNowCommand
shouldShowCaption
shouldSkipNextAsyncSort
shouldSplit
shouldSuppressBackgrounds
shouldTruncateSelectionPathAtInfoForCaptionCommand
shouldUpgradeStyleForFormulatextForCellCoord:
shouldUseWideRows
shouldWrap
shouldZoomOutOnEndEditing
showAggregateName
showAsType
showAtBaseIndex:forAction:
showAtUid:forAction:
showAtUid:forIndex:forViewIndex:forAction:
showAtViewIndex:forAction:
showAtViewIndexes:forAction:
showBaseColumnAtIndex:forAction:
showBaseRowAtIndex:forAction:
showCleanCells
showColumnAtIndex:forAction:
showColumnsAtIndexes:forAction:invalidate:
showGeometricAsBase
showReferenceHighlightsOnFormulaCellSelection
showRowAtIndex:forAction:
showRowsAtIndexes:forAction:invalidate:
showThousandsSeparator
showsCellEditingToolbar
showsCellOverflowIndicator
showsCellWarningIndicator
showsChromeWhileEditingCell
showsHideUnhideUI
showsOverlayLayers
showsSelectionKnobsWhileEditingCell
showsTableChrome
shrinkAction
shrinkReturningInverseForBaseCellRegion:
shrinkReturningInverseForBaseCellRegion:formulaReplacer:
shrinkReturningInverseForRegion:
shuffleMap
shuffleMapping
signalIdentifier:
simplify
singleQuoteCharacters
singleReferencedColumnUid
size
sizeAtIndex:
sizeClass
sizeOfText
skipRepairBadRefsForOwnerUID:
sliderSpecWithMinimum:maximum:increment:
smartFieldKind
smartFieldsWithAttributeKind:intersectingRange:
solid
sortByGrandTotal
sortColumnsByRowIndex:level:aggregateIndex:sortDirection:
sortDescending
sortDescriptorWithKey:ascending:
sortGroupBys
sortOrder
sortOrderByAddingRule:
sortOrderByChangingTypeTo:
sortOrderByRemovingBaseColumnIndices:
sortOrderByReplacingRuleAtIndex:withRule:
sortOrderByReplacingRulesWithRules:
sortOrderWithBaseColumn:direction:type:
sortOrderWithRules:type:
sortRowsByColumnIndex:level:aggregateIndex:sortDirection:
sortRuleReferenceTracker
sortRuleReferenceTrackerOwnerUID
sortRulesWithTableInfo:
sortTagsForSortingColumns:byRows:
sortTagsForSortingRows:byColumns:
sortUsingSelector:
sortedArrayFromArray:
sortedArrayFromArray:forDimension:
sortedArrayOfSpecifiers
sortedArrayUsingComparator:
sortedArrayUsingDescriptors:
sortedArrayUsingSelector:
sortedValuesAtLevel:
sortingAggregateRuleUid
sourceColumnCount
sourceData
sourceEncoding
sourceFetcherDidGoOffline:forKeys:
sourceFetcherDidGoOnline:forKeys:
sourceFetcherDidUpdate:withValues:quotes:
sourceFetchers
sourceIndexes
sourceRectOrigin
sourceRowCount
sourceType
space
spaceBundle
spanningColumnDependencies
spanningRangeForHeaderCell:
spanningRowDependencies
spanningRows
spansAllRows
spareFormatOfType:allowMismatchedSpare:
sparseCellList
specWithFunctionName:minArgs:maxArgs:repeatingGroupSize:isOperator:shipVersion:arguments:functionIndex:
specifierFromArchive:
specifierWithFunctionIndex:symbol:attribute:
specifierWithFunctionIndex:symbol:attribute:year:month:day:
spillMajorStrokeLayer
spillMinorStrokeLayer
spillStrokeColumns
spillStrokeLayer
spliceRowInfo:atTileRowIndex:overwrite:
spliceRows:atTileRowIndex:
split
splitRandomSeed:intoLo:hi:
splitRefPath:
splitTile
srcColumnUids
srcCondStyleOwnerUID
srcCoordMapper
srcRegion
srcRowUids
srcTableUID
srcUidForDstUid:
stage
stageCount
stageCountForTextureDeliveryStyle:tableProvider:
standaloneMonthSymbols
standaloneWeekdaySymbols
standardError
standardUserDefaults
startCellRef
startColumnIndex
startDirtyingCellRef
startIndex
startOfDayForDate:
startOfGroupingChangesBatch
startPivotChanges
startRecalcTaskIfNecessary
startRecalculation
startRowIndex
startTime
startWithFirstItem
startingIndex
startingStrokeOrder
startingTileID
state
stepperSpecWithMinimum:maximum:increment:
stockDetails
stockFromArchive:
stockWithAttributes:
stopDirtyingCellRef
stopUpdating
storage:didChangeRange:delta:broadcastKind:attributeKindChanges:
storageByApplyingCustomFormat:
storageChangesInvalidateWrap
storageUUID
storageVersionPreBNC
storeMap
string
string:argIndex:locale:
stringAtBaseCellCoord:optionalCell:
stringAtCellID:optionalCell:
stringAtIndex:
stringByAddingPercentEncodingWithAllowedCharacters:
stringByAppendingFormat:
stringByAppendingString:
stringByFoldingWithOptions:locale:
stringByPaddingToLength:withString:startingAtIndex:
stringByReplacingCharactersInRange:withString:
stringByReplacingMatchesInString:options:range:withTemplate:
stringByReplacingOccurrencesOfString:withString:
stringByTrimmingCharactersInSet:
stringCount
stringForCalcEngineAtCellID:refIfAvailable:
stringForCategoryRef:hostTableUID:
stringForCellValueType:
stringForDayOfWeekType
stringForDayOfWeekTypeForLocale:
stringForDayType
stringForDayTypeForLocale:
stringForDependencyRow
stringForDisplayWithoutColor
stringForEdgesWithLimit:
stringForEditing
stringForFunction:argumentIndex:warningReportingContext:
stringForGroupByChangeType:
stringForGroupingType:
stringForGroupingType:locale:
stringForKey:
stringForKey:outShouldWrap:outIsShared:
stringForKey:shouldWrap:
stringForListType:
stringForMergeType:
stringForMonthOfYearType
stringForMonthOfYearTypeForLocale:
stringForMonthType
stringForMonthTypeForLocale:
stringForOwnerID:withLimit:
stringForOwnerKind:
stringForPurpose:
stringForQuarterOfYearType
stringForQuarterOfYearTypeForLocale:
stringForRangeRefPair:namingContext:
stringForUnderlyingValue
stringForUniqueType
stringForUniqueTypeForLocale:
stringForYearQuarterType
stringForYearQuarterTypeForLocale:
stringForYearType
stringForYearTypeForLocale:
stringForYearWeekType
stringFromBool:locale:
stringFromDate:locale:
stringFromDouble:locale:
stringFromDurationTimeInterval:locale:
stringFromDurationTimeInterval:locale:showPrecision:
stringFromNumber:
stringFromString:locale:
stringID
stringInHeaderCell:
stringParam1
stringTableReference
stringValue
stringValueAtCellCoord:translator:
stringWithCString:encoding:
stringWithCapacity:
stringWithCharacters:length:
stringWithFormat:
stringWithFormulaDetokenizedText
stringWithFormulaDetokenizedTextFromRange:
stringWithFormulaPlainText
stringWithFormulaPlainTextFromRange:
stringWithString:
stringWithUTF8String:
stroke
strokeApplyingEmphasis
strokeApplyingWidth:
strokeAtIndex:
strokeByTransformingByTransform:
strokeExporterReturningDefaultStrokes:
strokeForStrokePreset:
strokeFrame
strokeFrameForGridRange:
strokeFrameForRange:
strokeFrameForTableNameBorder
strokeHeightOfGridRow:atColumnIndex:
strokeHeightOfGridRow:beginColumn:endColumn:
strokeHeightOfGridRow:inColumnRange:
strokeIterator
strokeLayer
strokeLayerAtIndex:
strokeLayerCount
strokeLayerForBottomOfRow:
strokeLayerForColumn:
strokeLayerForRightSideOfColumn:
strokeLayerForRow:
strokeLayerForStrokeType:
strokeLayerForTopOfRow:
strokeLayerModifiedByInsertingSpaceAt:
strokeLayerModifiedByRemovingRangeAt:
strokeLayerStack
strokeLayerStackForColumn:
strokeLayerStackForRow:
strokeLayerStackForStrokeType:
strokePresetListForDefaultPropertyMapForTablePresetID:colors:
strokePresetListForDefaultPropertyMapWithFatStroke:andThinStroke:
strokePresetListForDefaultPropertyMapWithHorizontalStroke:verticalStroke:exteriorStroke:
strokeProvider
strokeRange
strokeRegion
strokeSelectionWithMask:
strokeSidecar
strokeTypeToLayerMap
strokeTypeToLayerStackMap
strokeWidthForDrawingWithAlignedWidth:originalWidth:
strokeWidthForGridIndex:inRange:
strokeWidthForGridIndex:outWidth:outNextWidth:
strokeWidthOfGridColumn:atRowIndex:
strokeWidthOfGridColumn:beginRow:endRow:
strokeWidthOfGridColumn:inRowRange:
strokeWithColor:width:
strokesDefaultVendor
strokesForCellID:top:left:bottom:right:
strongObjectsPointerArray
strongReferences
strongToStrongObjectsMapTable
structuredTextImportConfidenceThreshold
structuredTextImportConfidenceThresholdForCanvas
structuredTextImportSizeLimit
style
styleApplyClearsAll
styleAreaForColumnType:rowType:forAPivotTable:
styleCount
styleForKey:
styleForStyleNetworkIndex:
styleIDForPreset:
styleIDForPreset:andTableStyleArea:
styleNetwork
styleProvider
styleProviderForTextLayout:
styleProviderStack
styleProvidingSource
styleTableReference
styleWithIdentifier:
stylesInStylesheet:
stylesheet
subGridAtGridCoord:width:height:
subGridValueAtGridCoord:width:height:accessContext:
subarrayWithRange:
subregionForRange:
subregionForReference:range:
subsetForOwnerKind:
subsetForReferenceName:limitToTable:includePrefixes:
substringFromIndex:
substringToIndex:
substringWithRange:
subtotalPrecedentForTableUID:
subtractBezierPath:
subtreeContainsIndex:
suggestCellFormatKind:
suitableAnchor
suitableCursor
sumMixedDurationsAndUnitlessWithoutADateErrorForFunctionName:
summaryCellCoordForCellUID:
summaryCellCoordForViewCellCoord:
summaryCellVendor
summaryColumnGroupUids
summaryColumnIndexForViewColumnIndex:
summaryMap
summaryModel
summaryModelIsCleanForSortPrecedentForTableUID:
summaryModelIsCleanPrecedentForTableUID:
summaryRowGroupUids
summaryRowHeightAtCategoryLevel:
summaryRowHeightList
superRange
superclass
suppliesFinalTextures
supportedFunctions
supportsActionMenu
supportsAddBodyRowAtBottomSiriKitIntent
supportsAttachedComments
supportsAutoResizedTables
supportsAutofill
supportsBidiTablesUI
supportsCanvasReferenceEditing
supportsCategorization
supportsCellCommentsActivityLines
supportsComplexReorganizeUI
supportsContainedTextEditing
supportsControlCells
supportsCopySnapshot
supportsCreateChartFromSelection
supportsDragDropMoveMode
supportsDynamicallyHidingRowColumnForDragDrop
supportsExpandedTables
supportsFormulaEditing
supportsFrozenHeaders
supportsHiddenCells
supportsHyperlinks
supportsImplicitEditing
supportsInlineAttachments
supportsMergedCells
supportsMultipleColumns
supportsPivotTables
supportsPlaceholderGeometry
supportsQuickFilterUI
supportsRepeatHeaderRowsOnEachPage
supportsRichTextUndoAtCellID:
supportsRotation
supportsRowColumnAdderKnob
supportsRowMovesInPaginatedTables
supportsTableTranspose
supportsVerticalTextLayoutInChildStorages
supportsiOSContextMenuItemForEvenlyDistributedColumns
supportsiOSContextMenuItemForEvenlyDistributedRows
supportsiOSContextMenuItemForWrappedText
suppressAutomaticNamedReferenceInvalidation
suppressIdenticalEndReference
suppressReferenceOptionsMenu
suspendChangeDescriptorNotificationsDuringBlock:
suspendDuringBlock:
suspendNotify
swapBaseIndex:withIndex:
swapBaseRowAtIndex:withRowAtIndex:
swapIndex:withIndex:
swapIndexesWithIndexSet:index:withIndex:
swapRowAtIndex:withRowAtIndex:
swapRowAtTileRowIndex:withRowAtTileRowIndex:
swapSegmentAtIndex:withSegmentAtIndex:
swatchImage
symbol
syncReferenceHighlightState
syncUpHiddenStateFormulaOwnerUIDs
syntaxError
tabAtEdgeAddsColumn
tabAtEdgeAddsRow
tabWhileEditingNavigates
table
tableAreaForBaseCellCoord:
tableAreaForCellID:
tableAreaForCellID:inTableWithHeaderColumns:headerRows:footerRows:totalRows:
tableAreaForColumn:
tableAreaForRow:
tableAreasForBaseCellRect:
tableAreasForCellRange:
tableChrome
tableEnvironment
tableForTableName:containerName:
tableHasStrongOwnership
tableInfo
tableInfoForTableUID:withCalcEngine:
tableIsLTR
tableLayout
tableModel
tableModelForTableUID:withCalcEngine:
tableName
tableNameBorderEnabled
tableNameBorderStroke
tableNameChangeDistributor
tableNameEditingStorage
tableNameEnabled
tableNameEnabledInNewTables
tableNameForTable:
tableNameHeightCache
tableNameHeightForStorage:withMaxWidth:
tableNameHeightValid
tableNameSelection
tableNameShapeStyle
tableNameStyle
tableNameStyleIDForPreset:
tableNameTextEngine
tableNameTextEngineDelegate
tableNameTextEngineWithTableNameStyle:
tableNameTextSize
tableNameTextSizeForTableName:maxWidth:tableNameStyle:
tableNameUnquoted
tableNameValid
tableOffset
tableOrLinkedResolverForTableUID:
tablePrototypeWithIndex:context:geometry:stylePreset:
tablePrototypeWithIndex:context:geometry:stylePreset:forTableInsertOnly:
tableProvider
tableRange
tableRangeCoordinate
tableRangeForTable:calcEngine:
tableRangeOfTable
tableRepDelegateClass
tableRepIsBeingRemovedFromBackgroundLayout
tableResolver
tableResolverForRefResolver:
tableResolverForTableID:
tableResolverForTableUID:
tableRowsBehavior
tableRowsBehaviorForTable:andEnvironment:
tableSizeClass
tableStrokeProvider
tableStyle
tableStyleAreaForCategoryLevel:isLabel:
tableStyleAreaForCellID:
tableStyleAreaForCellID:inTableWithHeaderColumns:headerRows:footerRows:totalRows:
tableStyleAreaForCellUID:
tableStyleAreaForRow:
tableStyleIndexes
tableStylePreset
tableTranslatorBaseMapForPasteboard
tableTranslatorViewMapForPasteboard
tableUID
tableUID:changedToTableUID:
tableUIDForCategoryRef:withCalcEngine:
tableUIDFromFormula:atCoord:
tableUIDFromFormulaAtIndex:
tableUIDInfo
tableUIDMap
tableWasAdded:
tableWritingDirection
tablesByName
tabs
taggedDecimalList
takeReference
takeReferenceForKey:callWillModify:
takeReferences:forKey:callWillModify:
takeText:
takeText:withLanguage:
tappedControlCellAtUnscaledPoint:
targetGroupFromIndex:minSourceLevel:templateUID:forDimension:
targetGroupFromRowIndex:minSourceLevel:templateRowUID:
targetHeight
targetSizeForImageData:associatedHint:
targetWidth
tearDown
teardown
tempUpgradePresetID
tempWPColumnCache
temporaryContext
temporaryObjectContextDelegate
terminate
terminateRegionIterator
terminated
text
textField:editMenuForCharactersInRange:suggestedActions:
textField:shouldChangeCharactersInRange:replacementString:
textField:willDismissEditMenuWithAnimator:
textField:willPresentEditMenuWithAnimator:
textFieldDidBeginEditing:
textFieldDidChangeSelection:
textFieldDidEndEditing:
textFieldDidEndEditing:reason:
textFieldShouldBeginEditing:
textFieldShouldClear:
textFieldShouldEndEditing:
textFieldShouldReturn:
textFormat
textFormatID
textImportRecord
textIsLinked
textIsVertical
textIsVerticalAtCharIndex:
textLayoutShouldLayoutVertically:
textLayoutShouldWrapAroundExternalDrawables:
textMeasurerBundle
textMeasurerBundleForParagraphStyle:
textRangeForParagraphAtIndex:
textStyle
textStyleAtCellID:
textStyleAtCellID:isDefault:
textStyleAtCellUID:isDefault:
textStyleAtIndex:
textStyleAtModelCellCoord:isDefault:
textStyleForCalcEngineAtBaseCellCoord:isDefault:
textStyleForCellWithEmptyStyleAtBaseCellCoord:isDefault:
textStyleForCellWithEmptyStyleAtCellUID:isDefault:
textStyleForTableStyleArea:
textStyleHandleForKey:
textStyleHandles
textStyleID
textStyleIDForPreset:andTableStyleArea:
textStyleOfColumnAtIndex:
textStyleOfColumnAtIndex:isDefault:
textStyleOfRowAtIndex:
textStyleOfRowAtIndex:isDefault:
textStyleReferences
textStyleToFontHeight
textStyles
textureDeliveryStyleFromDeliveryString:
textureDeliveryStylesLocalized:animationFilter:
textureForDescription:
theme
third
threadDictionary
thresholdCellValues
tileForEntry:
tileForWritingAtRowIndex:outTileRange:
tileRowIndex
tileSize
tileStartingAtOrAfterRowIndex:outTileRange:
tileStartingAtOrBeforeRowIndex:outTileRange:
tileStorage
tilesPerRow
timeIntervalSinceDate:
timeIntervalSinceNow
timeIntervalSinceReferenceDate
timePortionOfDateTimeFormatString:
timeZoneForSecondsFromGMT:
timeZoneWithName:
timer
toInternalOwnerID
todayFormatForLocale:
todayPrecedentForTableUID:
toggleControlSpec
tokenContextWithExpressionNode:parenNestingLevel:
tokenString
tokenText
tokenType
tokenWithStroke:range:order:andPosition:
tokenWithStroke:range:order:majorStrokeLayerToken:minorStrokeLayerToken:
tokenizeFormulaStringLiterals
topBorderRowRange
topCornerRange
topInset
topLeftCellCoord
topLeftCoord
topLevelGroupNode
topLevelGroupUid
topRowStrokes
topStroke
topStrokeLayer
topStrokeOrder
totalCapturedColumnWidths
totalCapturedRowHeights
totalCellCount
totalCurrentColumnWidths
totalCurrentRowHeights
totalMinimumColumnWidths
totalMinimumRowHeights
totalPartitionFrame
totalValue
trackedReferenceAtCoord:
tract
tractCount
tractRef
trailingEmptyCellCount
trailingWhitespace
transform
transformFromCanvas
transformFromDevice
transformInParent
transformToCanvas
transformToDevice
transformUsingAffineTransform:
translatedCellRangeName:usedSymbolicName:
translationFlags
translator
transpose
transposedBodyRange
transposedInfo
trimNames
trimmedString
trimmedStringStartingAtWord:
trimmedStringStartingAtWord:withPreserveFlags:
trimmedStringWithPreserveFlag:
trueString
tsceValue
tsceValueForCellStorageRef:cellCoord:hostTableUID:outValue:
tsceValueFromCell:atCellID:tableUID:
tsce_addObjectNonNil:
tsce_appendSpaces:
tsce_characterSetRequiringSingleQuotes
tsce_dateWithSerialNumber:dateMode:
tsce_dateWithYear:month:day:hour:minute:second:
tsce_day
tsce_dollarSignCharacterSet
tsce_hasCaseInsensitivePrefix:withLocale:
tsce_hour
tsce_internationalColonCharacterSet
tsce_internationalWhitespaceAndNewlineCharacterSet
tsce_internationalWhitespaceCharacterSet
tsce_isSingleQuoted
tsce_isoWeekNumber
tsce_listDelimiterCharacterSet
tsce_mapToDouble
tsce_minute
tsce_month
tsce_needsReferenceSingleQuoteEscaping
tsce_newStringByAddingDoubleQuoteEscapesIfNecessary
tsce_newStringByAddingSingleQuoteEscapesIfNecessary
tsce_newStringByForcingSingleQuoteEscapes:
tsce_numericCompare:
tsce_p_initializeQuotes
tsce_periodCharacterSet
tsce_referenceComponentsSeparatedByColon
tsce_referenceComponentsSeparatedByPathDelimiter
tsce_referenceComponentsSeparatedBySpace
tsce_replaceCharactersInSet:withString:
tsce_second
tsce_singleQuoteCharacterSet
tsce_stringByAddingSingleQuoteEscapes
tsce_stringByAddingSingleQuoteEscapesIfNecessary
tsce_stringByFoldingForNamedReferenceMatchingWithLocale:
tsce_stringByForcingSingleQuoteEscapes:
tsce_stringByRemovingNewlines
tsce_stringByReplacingTabsAndNewlinesWithASingleSpace
tsce_stringByUnescapingPartialQuotedString
tsce_stringByUnescapingPartialQuotedStringWithEmptyQuotedStringOK:
tsce_stringByUnescapingPartialQuotedStringWithEmptyQuotedStringOK:preserveTrailingUnquotedWhitespace:
tsce_stringByUnescapingSingleQuotes
tsce_weekNumberForType:
tsce_weekday
tsce_year
tskMultipleChoiceListFormat
tskStepperSliderFormatWithDisplayFormatType:
tsk_phoneUI
tspSemaphore
tsp_hintsDescription
tsp_initWithProtobufString:
tsp_isInDocument
tsp_isRecoverable
tsp_protobufString
tsp_saveToProtobufString:
tsp_stringWithProtobufString:
tstLoadFromArchive:unarchiver:
tstRegisterPresetSourceClasses
tstSaveToArchive:archiver:
tst_cleanForFormulaEditor
tst_dataObjectHash
tst_dataObjectIsEqual:
tst_hasCaseInsensitivePrefix:withLocale:
tst_hasFormulaEqualsPrefix
tst_hasLeadingCharacterInSet:
tst_isCompatibleWithCell:
tst_isCompatibleWithCellRegion:mergeRange:
tst_isEqualToFormulaEqualsString
tst_isOneCharacterInSet:
tst_selectionForImplicitlyEditingCellWithFormat:adjustSelectionForCurrencyOrPercentSymbols:
tst_selectionForImplicitlyEditingWithFormatType:percentSymbol:currencySymbol:adjustSelectionForCurrencyOrPercentSymbols:
tst_tableInfo
tsu_addPointersFromPointerArray:
tsu_allKeysAsSet
tsu_enumerateKeysAndObjectsUsingBlock:
tsu_enumerateNonNullObjectUsingBlock:
tsu_enumerateNonNullPointersUsingBlock:
tsu_enumerateRangesConcurrentlyUsingBeginBlock:concurrentBlock:finalBlock:
tsu_indexSetByAddingIndexes:
tsu_indexSetByIntersectingWithIndexes:
tsu_indexSetByIntersectingWithRange:
tsu_insertRange:
tsu_intersectionWithIndexSet:
tsu_intersectsIndexesInIndexSet:
tsu_isSingleContiguousRange
tsu_isTaggedPointer
tsu_moveIndexesInRange:toOffset:
tsu_push:
tsu_removeRange:
tsu_resourcesBundle
tsu_setByIntersectingSet:
tsu_setBySubtractingSet:
tsu_stringByRemovingCharactersInSet:
tsu_stringWithoutAttachmentCharacters
tswp_smartSingleQuotesCharacterSet
tswp_spaceCharacterSet
tswp_stringWithUnambiguousNeutralEnding
type
typeErrorForValue:functionSpec:argumentIndex:locale:
typeName
typesettingLocale
typographicBounds
uidBased
uidForIndex:
uidMap
uidRange
uidRanges
uidRectRef
uidRectRefForCategoryRef:atRowUid:
uidRectRefForCellTractRef:
uidReturn
uidTractAtIndex:
uidTractList
uidTractListWithPurpose:
uidTractWithCalcEngine:hostTableUID:
uids
uidsCollapsed
uidsExpanded
unSyncedStocks
uncompressedCellUIDs
underlyingDecimalValue
underlyingDoubleValue
unfilteredChildGroupUids
unfilteredDirectChildGroupUids
unfilteredRowUidsAsVector
unionEveryRangeInRegion:withRange:
unionSet:
uniqueDistinctPrecedentForTableUID:
uniqueValueToRowIndexes
uniqueValueToRowUids
uniqueValuesForColumnUID:
uniqueValuesLock
uniqueValuesUnlock
unitForCurrencyCode:
unitForString:
unitIsMetric:
unitName
unitPrefixForCharacter:
uniteWithBezierPath:
uniteWithPolygonalBezierPath:
unloadIndexes
unlock
unlockForConcurrentAccess
unmergeCellRange:
unnamedTableString
unorderedCellRefsForCategoryRef:atRowUid:
unpackAfterUnarchive
unpackAfterUnarchive:
unpackAfterUnarchiveForCellDependencies:
unpackAfterUnarchiveForGroupBy:atLevel:
unpackEntryAfterUnarchive:
unregisterFromCalcEngine
unregisterFromCalcEngine:
unregisterFromDistributors
unregisterGroupBy:
unregisterHiddenStates:
unregisterOwner:
unregisterStore:
unregisterWithCoordinator
unretainedStrokeLayerForBottomOfRow:
unretainedStrokeLayerForLeftSideOfColumn:
unretainedStrokeLayerForRightSideOfColumn:
unretainedStrokeLayerForTopOfRow:
unscaledCommentFlagAnchorInfoForSearchReference:
unsignedIntValue
unsignedIntegerValue
unsignedLongLongValue
unsupportedFunctionNameForLocale:
unwrappedFittingWidthsForColumnInCellRegionWorker:
unwrappedFittingWidthsForColumnsInCellRegion:
updateAggFormulaCoord:
updateCacheForGridIndex:withMajorStrokes:andMinorStrokes:
updateCachedStocksFromKnownStocks:
updateCachedStocksIntoStore:
updateCalcEngineForTableSize
updateCalculatedPrecedents:forFormula:atCellRef:withState:
updateCalculationEngineForFormula:inBaseCellCoord:usingCalcEngine:
updateChildrenFromInfo
updateChildrenFromLayout
updateColumnHeaderAtIndex:fromMetadata:
updateCommentsWhenAddingTable
updateCustomFormatFromPaste:
updateCustomFormatsAtKey:
updateDataListsConcurrentlyUsingCommentStorageBlock:conditionalStyleSetBlock:controlCellSpecBlock:formulaBlock:formulaErrorBlock:importWarningSetBlock:richTextBlock:stringBlock:styleBlock:customFormatBlock:formatBlock:
updateDataListsConcurrentlyWithConcurrentCellMap:clearImportWarnings:
updateDynamicFontColor:andRange:
updateDynamicResizeInfo:
updateDynamicTableNameSize:
updateEditorRemainders
updateForSortRules:
updateForTableSize:
updateFormulaForCellData:
updateFromLayout
updateGroupCellValueIfKeyMatches:
updateHeaderAtIndex:fromMetadata:
updateHeaderStorageStylesWithBlock:
updateMergesAndCellsAsPivotDataWithSourceModel:
updatePivotDataModel:pivotDataRefreshUID:pivotDataRefreshTimestamp:uidBodyTract:
updateQueue
updateRowHeaderAtIndex:fromMetadata:
updateStylesWithBlock:
updateTableRowColumnStylesWithBlock:
updateTableUIDFrom:toTableUID:
updateText:atCellCoord:tableUID:
updateTrackedHeaders:
updateTrackedHeaders:checkForEmptyHeaders:
updateTrackedHeadersForDocumentLocaleChange:
updateWithCustomFormatList:
updateWithDocumentRoot:
updateWithIndexingChunks:
updateWithRemoteDataMap:quotes:syncKey:
updateWithValuesFromMap:overwriteValues:
updatedCellRefForOriginalCellRef:
updatedCellRefForRewriteType:originalCellRef:
updatedGroupNodeToPrevious
updatedGroupNodeUidForPreviousGroupNodeUid:
updatedGroupNodeUids
updatedLevel
updatedRelativeAncestorLevelForPreviousAncestorCategoryLevel:numLevels:
upgradeCellFormatsU2_0
upgradeConditionalStylesToLinkedRefWithTableUID:
upgradeDataStoreCellStorageIfNeededWithTableUID:conditionalStyleOwner:
upgradeDuringDocumentUpgradeIfNeeded:
upgradeForNewAggregateTypes:
upgradeForNewAggregateTypes:inOwner:
upgradeForOwners:
upgradeFormatsForCustomFormatListU2_0
upgradeFormulasForGroupByUIDChange
upgradeFromPreUFF
upgradeGroupByUid:toUid:
upgradeHiddenFormulaOwnerForColumnsUID
upgradeHiddenFormulaOwnerForRowsUID
upgradeHiddenStates
upgradeIfNecessary
upgradeNeedsToUpdateFilterSetForImport
upgradeRepairedTiles
upgradeSourceTractsForAbsoluteRefs
upgradeSourceTractsForHostCellChange
upgradeStyleForFormulatextForCellCoord:
upgradeStylesWithBlock:
upgradeSubOwnerUidForMapperOnCalcEngine:
upgradeTablesIfNeeded:forDocumentRoot:
upgradeToSubOwnerUIDForOwners:
upgradeToSubOwnerUIDMapper
upgradeTopAndBottom
upgradedBraveNewCell
upgradedCustomFormatKeyForLegacyID:
upgradedCustomFormatList:
upgrading
upgradingFormulasMinion
upgradingToSubOwnerUIDs
upperBound
upperBoundInclusive
uppercaseStringWithLocale:
uppercaseWithUndoTransaction:locale:
useAccountingStyle
useAutomaticUnits
useBandedFill
useColumnRefForArg0
useReverseMap
useSymbolicNames
useWholeTableForInsertionDependencies
usedAggFormulaCoord:
usedPrecedentCoord:
usedSymbolicName
userHidden
userHiddenChangedPrecedentForTableUID:
userInfo
userVisible
userVisibleRowIndices
usesAllSubOwnerUIDs
usesFunctionsWithDateArgs
usesLimitedAutomaticFormatParsing
usesLimitedNumberFormatInspector
usesOnlyFixedCoords
usesPrePivotAggregateTypesOnly
usesSelectionChromeResizer
uuid
uuidBasedCellDiffMapByTableInfo:
uuidBasedCellMapByTableInfo:
uuidBasedCellMapWithContext:
uuidCoordAtIndex:templateTuple:runningLevel:
uuidCoordAtRunningLevel:
uuidCoordForGroupTuple:runningLevel:
uuidForIndex:
uuidForTableUID:andIndex:direction:
uuidPathPrefixComponentsProvider
uuidReferences
uuidsAsTSUVector
uuidsAsVector
uuidsForIndexes:
uuidsInRange:
valid
validCells
validate
validate:
validateAndRepair
validateBandedFill
validateCachedFrames
validateCellForDrawing:cell:contents:wrap:verticalAlignment:padding:layoutCacheFlags:pageNumber:pageCount:
validateChangeDescriptorQueue
validateChangeDescriptors:
validateChangeDescriptors:tableInfo:numberOfRows:numberOfColumns:
validateCoordinateCache:
validateCoordinateDirection
validateDefaultFontHeights
validateDynamicResizeInfo
validateFittingInfoForCell:cellID:mergeRange:setFitting:layoutTask:widthHeightCollection:validationBundle:styleDefaultsCache:
validateFittingInfoForValidationRegion:rowsNeedingFittingInfo:
validateFittingInfoWithCellRange:validationBundle:
validateFittingRegionForChangeDescriptors:
validateFormatAndValue:
validateFrozenHeaderColumns
validateFrozenHeaderCorner
validateFrozenHeaderRows
validateFrozenHeaderTableBodyMask
validateGeometry
validateIntValue:forProperty:
validateIntValueAsBool:forProperty:
validateLayoutEngineForChangeDescriptors:
validateLayoutHint:
validateLayoutSpaces
validateNewName:forTable:
validateNumberOfGroupsForGroupingColumnList:pivotDataModel:limit:groupNodeCount:
validateNumberOfGroupsForGroupingColumnList:sourceTableModel:sourceBodyTract:limit:groupNodeCount:
validateObjectValue:withClass:forProperty:
validatePageNumberCount
validateRowVisibility:
validateRowsNeedingFittingInfo:validationRegion:layoutEngine:
validateScaledLayout
validateStrokesArrays:
validateStrokesForChangeDescriptors:
validateStrokesInEditingSpillingTextRange
validateTableNameEnabled
validateTableNameHeight
validateTableNameVisibility
validateTableOffset:
validateTableStylesInSameStylesheetExpectingDocSS:
validateVisibleRect
validateWithResult:
validatedLoadFromUnarchiver:
value
valueAtColumn:row:
valueAtCoord:
valueAtIndex:accessContext:
valueAtIndexNoThrow:accessContext:
valueForAttribute:
valueForAttribute:forLocale:
valueForFormulaCoord:
valueForIndex:
valueForProperty:
valueForRemoteData:
valueForSingleKey:
valueForSpecifier:
valueForType:
valueFromString:locale:
valueGridForCategoryRef:
valueGridForCategoryRef:atRowUid:
valueGridForCategoryRef:atRowUid:hidingActionMask:
valueGridForCategoryRef:atRowUid:hidingActionMask:error:
valueIsNumberOrTime
valueIsStringOrNumber
valueIsText
valueMap
valueMapWithSpecifier:value:
valueRepresentsDateWithoutTime
valueToMatch
valueToUseForSummaryCellFormulaError
valueType
valueTypeAtCellID:
valueTypeOfItemAtIndex:
valueWithBytes:objCType:
valuesForCategoryRef:
valuesForCategoryRef:atRowUid:
valuesForCategoryRef:atRowUid:hidingActionMask:
valuesForCategoryRef:atRowUid:hidingActionMask:error:
variationMap
variationOfCharacterStyle:paragraphStyle:propertyMap:
variationOfStyle:propertyMap:
vector
verify
verifyAllOwnersAreKnown
verifyConnectionsWithPivotDataModel:
verifyConnectionsWithPivotDataModel:pivotTableUID:
verifyConnectionsWithTableModel:
verifyIndexesAreConsistent
verifyPivotTableConnections
verifySpanningSettings
verifyStrokes
verifySubOwnerUIDsUsed
verifySubOwnerUIDsUsed:
verifyTableAndBodyRangesForTable:
verifyWithExpectedDefaultStrokeLayer:
versionCounter
versionShippedIn
verticalAlignment
verticalFlip
verticalStroke
verticalStrokeForStrokePreset:
viewBottomRightCoord
viewCellCoord
viewCellCoordForBaseCellCoord:
viewCellCoordForCellUID:
viewCellCoordForChromeCellCoord:
viewCellCoordForSummaryCellCoord:
viewCellRect
viewCellRects
viewCellRefForBaseCellRef:
viewCellRefForChromeCellRef:
viewCellRegionForBaseCellRect:
viewCellRegionForBaseCellRegion:
viewCellTractRefForCategoryRef:atRowUid:
viewColumnGridIndexesForBaseColumnGridIndexes:
viewColumnIndexForBaseColumnIndex:
viewColumnIndexForChromeColumnIndex:
viewColumnIndexForColumnUID:
viewColumnIndexForSummaryColumnIndex:
viewColumnIndexesForBaseColumnIndexes:
viewColumnIndexesForChromeColumnIndexes:
viewColumnIndexesForUIDs:
viewColumnIndexesInCurrentRow
viewColumnIndicesForRulesInTable:
viewIndex
viewOrderUids
viewPreserveFlags
viewRangeRef
viewRangeRefDeprecated
viewRangeRefForChromeRangeRef:
viewRangeRefs
viewRowIndexForBaseRowIndex:
viewRowIndexForChromeRowIndex:
viewRowIndexForRowUID:
viewRowIndexesForBaseRowIndexes:
viewRowIndexesForChromeRowIndexes:
viewRowIndexesForUIDs:
viewScale
viewScaleForZoomingToSelectionPath:targetPointSize:
viewTopLeftCoord
viewTractRef
viewTractRefForBaseTractRef:
viewTractRefForChromeTractRef:
viewTractRefIfFullyValid
viewsOverlappingTableCells
visibleColumnIndices
visibleFillKnobs
visibleIndexAfterAndIncludingIndex:
visibleIndexAfterIndex:
visibleIndexBeforeAndIncludingIndex:
visibleIndexBeforeIndex:
visibleIndices
visiblePartOfRange:
visibleRange
visibleRowIndices
visibleUnscaledRectForClippingReps
visitTSTTableInfo:
volatileDependencies
waitForAllPrecedentsToLoad
waitForLayoutToComplete:
waitForQueueToDrain
waitOnIdentifier:untilDate:releaseReadWhileWaiting:
wantsActivityLine
wantsSelectionAtPoint:
wantsToProvideStylesForTextLayout:
warnWhenFormulasReferToEmptyCells
warningSetAtCellRef:
warningSetByAddingWarningsFromSet:
warningSetByRemovingWarningsFromSet:
warningSetFor3DReferenceFormula:
warningSetForArrayedFormula:
warningSetForCondFormatAboveAvgEqualAvg
warningSetForCondFormatAboveAvgStdDev
warningSetForCondFormatComplexFormula
warningSetForCondFormatContainsErrors
warningSetForCondFormatExpr
warningSetForCondFormatNotContainsErrors
warningSetForCondFormatParamatersNotAllTheSame
warningSetForCondFormatStopIfTrue
warningSetForCondFormatUnsupportedOperator
warningSetForCondFormatUnsupportedStyling
warningSetForCondFormatUnsupportedTimePeriod
warningSetForDifferentBehaviorForFunctionFormula:originalFormula:
warningSetForDurationFormatRangeChanged
warningSetForExternalReferenceFormula:
warningSetForFilteredColumnFormulaNotCopied
warningSetForFormulaReplacedForExcelCompat:originalFormula:
warningSetForNaturalLanguageFormula:
warningSetForReferenceOutOfBoundsFormula:
warningSetForSharedFormulaBaseNotFoundFormula:
warningSetForTransposeUnmodifiedWithIssues
warningSetForTransposedWithIssues:
warningSetForTransposedWithoutIssues:
warningSetForUnknownName:originalFormula:
warningSetForUnsupportedCondFormat
warningSetForUnsupportedDataFormat:
warningSetForUnsupportedFormula:
warningSetForUnsupportedFunction:originalFormula:
warningSetForUnsupportedNameFormula:originalFormula:
warningSetsForUndo
wasAddedToDocumentRoot:dolcContext:
wasConstructedViaNames
wasCut
wasQuoted
wasRemovedFromDocument
wasRemovedFromDocumentRoot:
weekOfYear
whiteColor
whitespaceAfterDelimiter
whitespaceAfterDelimiters
whitespaceAfterEquals
whitespaceAfterFunctionName
whitespaceAfterIdentifier
whitespaceAfterLeftParen
whitespaceAfterLet
whitespaceAndNewlineCharSet
whitespaceAndNewlineCharacterSet
whitespaceBefore
whitespaceBeforeFirstChild
whitespaceCharSet
whitespaceCharacterSet
wholeOwnerDependencies
wholeTableImport
widenAllRowsForUpgrade
widenTilesForUpgrade
width
widthFactor
widthForColumnIndex:bodyWidth:
widthForString:textMeasurerBundle:
widthHeightCache
widthHeightCollections
widthOfColumn:handleCacheMissUsingBlock:
widthOfColumn:skipDynamicSwap:returnZeroIfHidden:outIsFitting:
widthOfColumnAtIndex:
widthValid
willApplyBaseCellMap:tableUID:
willApplyCell:baseCellCoord:tableUID:
willApplyConcurrentCellMap:tableUID:
willApplyToTable:
willApplyToTableModel:
willBeAddedCellCleanup:
willBeAddedToDocumentRoot:dolcContext:
willBeRemoved
willBeRemovedFromDocumentRoot:
willBeginTableNameEditingWithStorage:
willChangeExtentUids:
willChangeGroupByTo:
willClose
willCopyWithOtherDrawables:
willMakeGroupingChangesInRowUIDs:
willModify
willModifyForUpgrade
willModifyForUpgradeWithOptions:
willModifyIfNeeded:
willModifyIfPossible:
willModifySrcTable:srcUidResolver:dstTable:dstUidResolver:
willModifyTable:uidResolver:calcEngine:
willModifyWasCalled
willModifyWithOptions:
willRemoveGroup:
willRemoveGroupNode:
willRemoveRows:tableUID:
withinGroupingChangesBatch
wordAtIndex:
wordFragmentsFromString:savePreserveFlags:
wpColumn
wpKind
wrapFitType
wrappedObjectForPayload:
writeCellIDsInCellUIDList:toVector:prunedCellUIDs:
writeResultsForCalcEngine:
writeToLayoutEngineCaches:
writingDirection
writingDirectionForCellwithTableDefault:
writingDirectionForParagraphAtCharIndex:
writingDirectionForParagraphAtParIndex:
yankRowInfoAtTileRowIndex:
yankRowsAtTileRowIndex:
yankRowsAtTileRowIndex:count:
year
zeroWidthEmptyStroke
zone
zoomOperationIsInProgress
zoomToEditVisibleCellRange
@24@0:8@16
v16@0:8
@44@0:8@16@24B32@36
@32@0:8@16@24
@72@0:8@16@24@32@40B48@52@60B68
B16@0:8
{_NSRange=QQ}48@0:8@16#24{_NSRange=QQ}32
B24@0:8@16
{_NSRange=QQ}32@0:8{_NSRange=QQ}16
Q24@0:8Q16
v24@0:8@16
v40@0:8@16{_NSRange=QQ}24
v32@0:8@16@24
v48@0:8@16@24{_NSRange=QQ}32
@16@0:8
@32@0:8{_NSRange=QQ}16
@36@0:8{_NSRange=QQ}16B32
v32@0:8{_NSRange=QQ}16
v24@0:8Q16
v32@0:8Q16@24
#16@0:8
@24@0:8:16
@32@0:8:16@24
@40@0:8:16@24@32
B24@0:8#16
B24@0:8:16
Vv16@0:8
Q16@0:8
^{_NSZone=}16@0:8
B24@0:8@"Protocol"16
@"NSString"16@0:8
v40@0:8@16r^{TSUCellCoord=ISBB}24r^{TSKUIDStruct=QQ}32
v72@0:8@16r^{TSUCellCoord=ISBB}24r^{TSKUIDStruct=QQ}32{TSCEReplaceFormulaOptions=BBBBB{TSKUIDStruct=QQ}@}40
v72@0:8r^{TSUCellCoord=ISBB}16r^{TSKUIDStruct=QQ}24@32{TSCEReplaceFormulaOptions=BBBBB{TSKUIDStruct=QQ}@}40
v32@0:8r^{TSUCellCoord=ISBB}16r^{TSKUIDStruct=QQ}24
v24@0:8r^v16
v24@0:8r^{TSKUIDStruct=QQ}16
v24@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16
v24@0:8r^{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16
@"TSCECalculationEngine"16@0:8
v40@0:8@"<TSCEFormulaReturning>"16r^{TSUCellCoord=ISBB}24r^{TSKUIDStruct=QQ}32
v72@0:8@"<TSCEFormulaReturning>"16r^{TSUCellCoord=ISBB}24r^{TSKUIDStruct=QQ}32{TSCEReplaceFormulaOptions=BBBBB{TSKUIDStruct=QQ}@}40
v72@0:8r^{TSUCellCoord=ISBB}16r^{TSKUIDStruct=QQ}24@"TSCEReferenceSetWrapper"32{TSCEReplaceFormulaOptions=BBBBB{TSKUIDStruct=QQ}@}40
B24@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16
@"TSCEFormulasToSet"
{TSCECellRefSet="_coordsForOwnerUid"{map<TSKUIDStruct, TSCECellCoordSet, std::less<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSCECellCoordSet>>>="__tree_"{__tree<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>, std::allocator<std::__value_type<TSKUIDStruct, TSCECellCoordSet>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>>="__value_"Q}}}}
B20@0:8C16
@36@0:8@16C24@28
{TSKUIDStruct=QQ}16@0:8
I16@0:8
^v16@0:8
v60@0:8@16@24C32{TSKUIDStruct=QQ}36@52
@60@0:8@16@24C32{TSKUIDStruct=QQ}36@52
@32@0:8r^v16@24
v40@0:8r^v16@24@32
v28@0:8@16C24
v40@0:8^v16Q24@32
v32@0:8@16B24B28
@32@0:8C16C20r^{TSKUIDStruct=QQ}24
@20@0:8C16
@52@0:8@16C24Q28Q36^{TSUPreserveFlags=C}44
v36@0:8@16@24C32
v32@0:8@16C24C28
@56@0:8r^{TSKUIDStruct=QQ}16I24@28C36@40^Q48
v44@0:8r^{TSKUIDStruct=QQ}16@24C32@36
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}16@0:8
{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}16@0:8
v24@0:8@?16
B24@0:8r^{TSKUIDStruct=QQ}16
@32@0:8@16S24B28
@20@0:8B16
@36@0:8B16@20S28B32
{TSKUIDStruct=QQ}44@0:8@16q24C32@36
@36@0:8B16@20q28
v32@0:8^B16@?24
v36@0:8C16^B20@?28
v28@0:8C16@?20
v40@0:8C16C20^B24@?32
v32@0:8C16C20@?24
@24@0:8r^{TSKUIDStruct=QQ}16
@28@0:8r^{TSKUIDStruct=QQ}16C24
C16@0:8
{TSKUIDStruct="_lower"Q"_upper"Q}
@"TSCECellValue"
@"TSTGroupValueTuple"
@"TSTGroupBy"
{unordered_map<TSKUIDStruct, TSTAggNode *, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSTAggNode *>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTAggNode *>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
@"NSMutableDictionary"
{os_unfair_lock_s="_os_unfair_lock_opaque"I}
{TSUIndexSet="_isEmpty"b1"_hasSingleRange"b1"_singleRange"{TSUIndexRange="_begin"q"_end"q}"_multipleRanges"^{?}}
@"TSTGroupNode"
@"TSTGroupNodeFormatManager"
{unordered_map<TSKUIDStruct, TSTGroupNode *, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSTGroupNode *>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTGroupNode *>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
@"TSCEMutableUIDSet"
{vector<TSUCellCoord, std::allocator<TSUCellCoord>>="__begin_"^{TSUCellCoord}"__end_"^{TSUCellCoord}"__end_cap_"{__compressed_pair<TSUCellCoord *, std::allocator<TSUCellCoord>>="__value_"^{TSUCellCoord}}}
v32@0:8^{TSCEWarningReportingContext=BB@}16@24
v24@0:8^{TSCEWarningReportingContext=BB@}16
v32@0:8^{TSCEWarningReportingContext=BB@}16c24c28
@24@0:8^{_NSZone=}16
@40@0:8@16r^{TSKUIDStruct=QQ}24{TSUCellCoord=ISBB}32
v20@0:8B16
@"NSDictionary"
@32@0:8@16{TSUCellCoord=ISBB}24
@32@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24
{_NSRange=QQ}16@0:8
@84@0:8@16@24^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}32^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}40@48q56{_NSRange=QQ}64B80
@84@0:8@16@24{TSUCellCoord=ISBB}32{TSUCellCoord=ISBB}40@48q56{_NSRange=QQ}64B80
@64@0:8@16@24{TSUCellCoord=ISBB}32{TSUCellCoord=ISBB}40@48q56
@56@0:8@16@24{TSUCellCoord=ISBB}32{TSUCellCoord=ISBB}40@48
@56@0:8@16@24{TSUCellCoord=ISBB}32{TSUCellCoord=ISBB}40q48
@48@0:8@16@24{TSUCellCoord=ISBB}32{TSUCellCoord=ISBB}40
@64@0:8@16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24q40{TSUCellCoord=ISBB}48{TSUCellCoord=ISBB}56
@32@0:8@16q24
@40@0:8@16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24
@40@0:8@16{TSUCellCoord=ISBB}24q32
@32@0:8@16I24I28
@32@0:8@16S24I28
@40@0:8@16q24I32I36
@40@0:8@16@24{TSUColumnRowOffset=ii}32
{TSUCellCoord=ISBB}16@0:8
{TSUCellCoord=ISBB}24@0:8@16
v32@0:8^v16@24
@56@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16@32q40{TSUCellCoord=ISBB}48
@64@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16@32{TSUCellCoord=ISBB}40{TSUCellCoord=ISBB}48q56
@28@0:8@16B24
v32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
v32@0:8q16I24I28
B24@0:8{TSUCellCoord=ISBB}16
B24@0:8o^C16
q16@0:8
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16@0:8
v48@0:8{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
@"TSTTableInfo"
@"TSTCellUIDRegion"
@"TSTCellRegion"
{_NSRange="location"Q"length"Q}
{TSKUIDStructCoord="_column"{TSKUIDStruct="_lower"Q"_upper"Q}"_row"{TSKUIDStruct="_lower"Q"_upper"Q}}
{RefTypeHolder<TSCERangeRef, 0>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}56@0:8{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}16@48
{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}56@0:8{RefTypeHolder<TSCERangeRef, 0>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}16@48
{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}32@0:8@16@24
{RefTypeHolder<TSCERangeRef, 0>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}32@0:8@16@24
{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}40@0:8@16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24^{TSUPreserveFlags=C}32
{TSUCellCoord=ISBB}40@0:8@16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24^{TSUPreserveFlags=C}32
@24@0:8@"TSCECalculationEngine"16
{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}32@0:8@"NSString"16@"TSCEReferenceParsingContext"24
{RefTypeHolder<TSCERangeRef, 0>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}32@0:8@"NSString"16@"TSCEReferenceParsingContext"24
{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}40@0:8@"NSString"16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24^{TSUPreserveFlags=C}32
{TSUCellCoord=ISBB}40@0:8@"NSString"16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24^{TSUPreserveFlags=C}32
@"TSCECategoryRef"32@0:8@"NSString"16@"TSCEReferenceParsingContext"24
@"TSCECategoryRef"24@0:8@"TSCEReferenceParsingContext"16
@"TSCEWrappedRangeRef"24@0:8@"TSCEReferenceParsingContext"16
@"TSCECellTractRef"24@0:8@"TSCEReferenceParsingContext"16
{TSUChromeCellCoord={TSUCellCoord=ISBB}}48@0:8@16^{TSCETableResolver=^^?}24^{TSUPreserveFlags=C}32^@40
{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}56@0:8@16^{TSCETableResolver=^^?}24@32^{TSCETableResolver=^^?}40@48
B48@0:8@16^@24^@32^@40
{TSKUIDStruct=QQ}64@0:8@16@24@32@40^{TSUPreserveFlags=C}48^Q56
@48@0:8@16@24Q32@40
@"TSCEStringManipulator"
@"TSCECalculationEngine"
@"NSCharacterSet"
B32@0:8{TSKUIDStruct=QQ}16
v32@0:8r^{TSKUIDStruct=QQ}16r^{TSKUIDStruct=QQ}24
q24@0:8@16
q32@0:8@16@24
@32@0:8d16@24
q32@0:8@16@"<TSDMixingTypeContext>"24
@"NSArray"16@0:8
@20@0:8S16
@20@0:8I16
@"TSTStrokeLayer"20@0:8S16
@"TSTStrokeLayer"20@0:8I16
@"TSTTableStyle"16@0:8
v24@0:8@"TSTTableStyle"16
@"TSTCellStyle"16@0:8
v24@0:8@"TSTCellStyle"16
@"TSWPParagraphStyle"16@0:8
v24@0:8@"TSWPParagraphStyle"16
@"TSWPShapeStyle"16@0:8
v24@0:8@"TSWPShapeStyle"16
@"TSDStroke"16@0:8
{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16@0:8
@32@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16o^B24
{TSUModelRowIndex=I}16@0:8
{TSUModelColumnIndex=S}16@0:8
@"TSWPParagraphStyle"32@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16o^B24
v24@0:8@?<v@?@"TSTCell"{TSUCellCoord=ISBB}^B>16
@72@0:8@16{TSKUIDStruct=QQ}24@40@48@56@64
@64@0:8@16r^v24r^v32@40@48@56
@56@0:8@16I24I28@32@40@48
@52@0:8@16@24@32@40B48
@60@0:8@16@24@32@40B48q52
@56@0:8@16@24@32@40@48
v38@0:8r^v16r^v24{TSUModelRowIndex=I}32{TSUModelColumnIndex=S}36
v40@0:8@16@24@32
v48@0:8@16@24@32@40
C18@0:8{TSUModelColumnIndex=S}16
B24@0:8Q16
{?=II}16@0:8
d16@0:8
v24@0:8d16
v20@0:8{TSUModelRowIndex=I}16
v18@0:8{TSUModelColumnIndex=S}16
i16@0:8
@24@0:8{TSUModelRowIndex=I}16C20
@22@0:8{TSUModelColumnIndex=S}16C18
v32@0:8{TSKUIDStruct=QQ}16
{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}24@0:8Q16
Q24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
Q20@0:8{TSUModelRowIndex=I}16
Q18@0:8{TSUModelColumnIndex=S}16
@32@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
i32@0:8o@16Q24
i32@0:8o@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24
B24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
i36@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24B32
i32@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24
@24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
v40@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24@32
i48@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24B32B36@40
i40@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24B32B36
i24@0:8@16
i32@0:8@16B24B28
@32@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16^B24
C24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
@32@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16@24
@36@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16@24B32
i24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
i28@0:8@16{TSUModelRowIndex=I}24
@28@0:8{TSUModelRowIndex=I}16o^B20
i26@0:8@16{TSUModelColumnIndex=S}24
@26@0:8{TSUModelColumnIndex=S}16o^B18
@36@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16B24o^Q28
@24@0:8Q16
v52@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16B24@28^@36^@44
v40@0:8Q16^@24^@32
d28@0:8{TSUModelRowIndex=I}16o^B20
d26@0:8{TSUModelColumnIndex=S}16o^B18
v28@0:8d16{TSUModelRowIndex=I}24
v26@0:8d16{TSUModelColumnIndex=S}24
d24@0:8Q16
{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
i52@0:8{_NSRange=QQ}16r^v32@40B48
i42@0:8{TSUModelColumnIndex=S}16r^v18@26Q34
i48@0:8{TSUModelRowIndex=I}16r^v20@28Q36B44
v24@0:8{TSUModelRowIndex=I}16{TSUModelRowIndex=I}20
v20@0:8{TSUModelColumnIndex=S}16{TSUModelColumnIndex=S}18
v36@0:8{_NSRange=QQ}16{TSUModelRowIndex=I}32
v34@0:8{_NSRange=QQ}16{TSUModelColumnIndex=S}32
C20@0:8{TSUModelRowIndex=I}16
v28@0:8C16r^{TSUModelRowIndex=I}20
v28@0:8C16r^{TSUModelColumnIndex=S}20
@28@0:8{TSUCellCoord=ISBB}16B24
@28@0:8S16o^q20
@32@0:8S16B20o^q24
@20@0:8{TSUModelRowIndex=I}16
@24@0:8{TSUCellCoord=ISBB}16
v32@0:8@16I24i28
v32@0:8@16S24i28
v48@0:8@16I24i28{TSTSimpleRange=qQ}32
v48@0:8@16S24i28{TSTSimpleRange=qQ}32
@32@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24
i36@0:8o^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16{TSUModelCellCoord={TSUCellCoord=ISBB}}24B32
i40@0:8o^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16{TSUModelCellCoord={TSUCellCoord=ISBB}}24B32B36
v28@0:8@16B24
v36@0:8r^v16@24B32
v36@0:8@16B24B28B32
v36@0:8@16{TSUColumnRowOffset=ii}24B32
{TSCECellCoordSet={map<unsigned short, TSUIndexSet, std::less<unsigned short>, std::allocator<std::pair<const unsigned short, TSUIndexSet>>>={__tree<std::__value_type<unsigned short, TSUIndexSet>, std::__map_value_compare<unsigned short, std::__value_type<unsigned short, TSUIndexSet>, std::less<unsigned short>, true>, std::allocator<std::__value_type<unsigned short, TSUIndexSet>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned short, TSUIndexSet>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<unsigned short, std::__value_type<unsigned short, TSUIndexSet>, std::less<unsigned short>, true>>=Q}}}}16@0:8
B24@0:8r^{TSUCellCoord=ISBB}16
v32@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{TSUModelCellCoord={TSUCellCoord=ISBB}}24@0:8@16
v40@0:8@16Q24@?32
B32@0:8{TSUCellCoord=ISBB}16^@24
B24@0:8^@16
B32@0:8^@16^B24
v40@0:8@16B24B28@32
v60@0:8Q16B24B28B32@36@?44@?52
S16@0:8
v20@0:8S16
@"TSTHiddenStateFormulaOwner"
@"TSTStrokeSidecar"
{vector<TSTCellValueType, std::allocator<TSTCellValueType>>="__begin_"^C"__end_"^C"__end_cap_"{__compressed_pair<TSTCellValueType *, std::allocator<TSTCellValueType>>="__value_"^C}}
{map<unsigned long, TSTGroupingType, std::less<unsigned long>, std::allocator<std::pair<const unsigned long, TSTGroupingType>>>="__tree_"{__tree<std::__value_type<unsigned long, TSTGroupingType>, std::__map_value_compare<unsigned long, std::__value_type<unsigned long, TSTGroupingType>, std::less<unsigned long>, true>, std::allocator<std::__value_type<unsigned long, TSTGroupingType>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned long, TSTGroupingType>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<unsigned long, std::__value_type<unsigned long, TSTGroupingType>, std::less<unsigned long>, true>>="__value_"Q}}}
{TSUModelColumnIndex="_column"S}
{TSUModelRowIndex="_row"I}
@"TSTTableDataStore"
@"NSString"
@"TSTTableStylePreset"
@"TSTTableStyle"
@"TSTTableTranslator"
@"TSTCellStyle"
@"TSWPParagraphStyle"
@"TSWPShapeStyle"
@"TSTCellDictionary"
@"TSTConcurrentMutableCellUIDSet"
@"TSTConditionalStyleFormulaOwner"
@"TSTMergeOwner"
@"TSTCategoryOwner"
@"TSTPivotOwner"
@"TSTHiddenStatesOwner"
@"TSCEHauntedOwner"
@"TSTTableSortOrder"
@"TSTSortRuleReferenceTracker"
@"TSTColumnRowUIDMap"
@"TSTCellWillChangeDistributor"
@"TSWPStorage"
@"NSMapTable"
@"TSTStructuredTextImportRecord"
@"TSTTableFilterSet"
@"TSTPencilAnnotationOwner"
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16@0:8
@"TSTCell"16@0:8
@"TSTCellFormulaSpec"16@0:8
v24@0:8{TSUCellCoord=ISBB}16
{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}
@"TSTCell"
@"TSTCellFormulaSpec"
{TSUCellRect="origin"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}"size"{?="numberOfColumns"I"numberOfRows"I}}
@36@0:8@16B24@28
v28@0:8@16I24
@28@0:8I16o^I20
^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}24@0:8S16I20
q32@0:8@16S24I28
i24@0:8S16I20
@24@0:8S16I20
v28@0:8S16I20S24
v24@0:8I16I20
v28@0:8I16I20B24
@24@0:8I16I20
v32@0:8@16I24B28
@"NSPointerArray"
v32@0:8d16{TSUCellCoord=ISBB}24
{vector<std::pair<TSUCellCoord, double>, std::allocator<std::pair<TSUCellCoord, double>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::pair<TSUCellCoord, double> *, std::allocator<std::pair<TSUCellCoord, double>>>="__value_"^v}}
{unordered_map<unsigned short, double, std::hash<unsigned short>, std::equal_to<unsigned short>, std::allocator<std::pair<const unsigned short, double>>>="__table_"{__hash_table<std::__hash_value_type<unsigned short, double>, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, double>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, double>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>, std::allocator<std::__hash_value_type<unsigned short, double>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, double>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, double>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, double>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, double>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, double>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, double>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, double>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned short, double>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, double>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, double>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, double>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>>="__value_"f}}}
@32@0:8^{TSCEDateValue=^^?@{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}}16@24
^{TSCEDateValue=^^?@{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}}16@0:8
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16@0:8
v24@0:8^v16
^{TSCEDateValue=^^?@{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}}
B40@0:8d16d24d32
d20@0:8I16
@40@0:8d16d24d32
@44@0:8I16d20d28d36
d32@0:8d16^B24
d32@0:8@16@24
v40@0:8@16{TSKUIDStruct=QQ}24
v48@0:8@16@24{TSKUIDStruct=QQ}32
v40@0:8@"NSString"16{TSKUIDStruct=QQ}24
v48@0:8@"NSString"16@"NSString"24{TSKUIDStruct=QQ}32
{unordered_set<TSUCellCoord, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, std::allocator<TSUCellCoord>>={__hash_table<TSUCellCoord, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, std::allocator<TSUCellCoord>>={unique_ptr<std::__hash_node_base<std::__hash_node<TSUCellCoord, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSUCellCoord, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<TSUCellCoord, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSUCellCoord, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSUCellCoord, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<TSUCellCoord, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<TSUCellCoord, void *> *>, std::allocator<std::__hash_node<TSUCellCoord, void *>>>={__hash_node_base<std::__hash_node<TSUCellCoord, void *> *>=^v}}{__compressed_pair<unsigned long, std::hash<TSUCellCoord>>=Q}{__compressed_pair<float, std::equal_to<TSUCellCoord>>=f}}}16@0:8
@24@0:8r^v16
@"NSObject<OS_dispatch_semaphore>"
@41@0:8@16r^{TSKUIDStruct=QQ}24{TSUPreserveFlags=C}32^{TSCEFormulaRewriteContext=@@{TSCEFormulaRewriteContextRecord={TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}{TSKUIDStruct=QQ}{TSUColumnRowOffset=ii}BBBBBBB}}33
@40@0:8r^{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}16r^{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}24r^{TSKUIDStruct=QQ}32
@24@0:8r^{TSCECellTractRefCore={TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}{TSKUIDStruct=QQ}C{TSUPreserveFlags=C}BBB}16
@32@0:8r^{TSUCellCoord=ISBB}16r^{TSUCellCoord=ISBB}24
@40@0:8r^{TSUCellCoord=ISBB}16r^{TSUCellCoord=ISBB}24r^{TSKUIDStruct=QQ}32
@24@0:8r^{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16
@40@0:8r^v16@24r^{TSKUIDStruct=QQ}32
{TSUPreserveFlags=C}16@0:8
v17@0:8{TSUPreserveFlags=C}16
B24@0:8S16B20
B24@0:8I16B20
{TSUPreserveFlags=C}28@0:8r^{TSUCellCoord=ISBB}16B24
v24@0:8^{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16
v20@0:8I16
v24@0:8r^{TSUIndexRange=qq}16
v24@0:8r^{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}16
r^{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}16@0:8
v24@0:8r^{TSUColumnRowOffset=ii}16
{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}16@0:8
{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16@0:8
v24@0:8r^{TSUCellCoord=ISBB}16
{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}}32@0:8@16r^{TSKUIDStruct=QQ}24
v24@0:8r^{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
{TSUCellCoord=ISBB}24@0:8I16I20
B40@0:8@16@24B32B36
B32@0:8@16@24
{TSCECellTractRefCore={TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}{TSKUIDStruct=QQ}C{TSUPreserveFlags=C}BBB}16@0:8
v104@0:8{TSCECellTractRefCore={TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}{TSKUIDStruct=QQ}C{TSUPreserveFlags=C}BBB}16
{TSCECellTractRefCore="_columns"{TSUIndexSet="_isEmpty"b1"_hasSingleRange"b1"_singleRange"{TSUIndexRange="_begin"q"_end"q}"_multipleRanges"^{?}}"_rows"{TSUIndexSet="_isEmpty"b1"_hasSingleRange"b1"_singleRange"{TSUIndexRange="_begin"q"_end"q}"_multipleRanges"^{?}}"_tableUID"{TSKUIDStruct="_lower"Q"_upper"Q}"_spanType"C"_preserveFlags"{TSUPreserveFlags="_flags"C}"_preserveRectangular"B"_mixedColumnStartedWithPreserve"B"_mixedRowStartedWithPreserve"B}
@"NSString"24@0:8@"<TSCEReferenceResolving>"16
@"NSString"24@0:8@"<TSCEResolverContainer>"16
@"<TSCEResolverContainer>"28@0:8@"NSString"16B24
@"NSArray"24@0:8@"NSString"16
@"<TSCEReferenceResolving>"32@0:8@"NSString"16@"<TSCEReferenceResolving>"24
@"<TSCEReferenceResolving>"32@0:8@"NSString"16@"NSString"24
@"NSEnumerator"16@0:8
@"NSEnumerator"24@0:8Q16
@"NSString"24@0:8@"<TSKModel>"16
v24@0:8@"<TSKModelVisitor>"16
v28@0:8@16S24
v28@0:8@"TSCECalculationEngine"16S24
v24@0:8@"TSCECalculationEngine"16
@"TSPObject<TSCECalculationEngineRegistration>"16@0:8
@"<TSCEFormulaOwning>"16@0:8
I24@0:8Q16
@40@0:8q16{CGPoint=dd}24
@48@0:8q16@24@32@40
@52@0:8q16@24@32@40B48
@40@0:8{TSKUIDStruct=QQ}16@32
v40@0:8@16@24Q32
v48@0:8@16@24Q32Q40
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}44@0:8Q16{?=II}24I32I36I40
Q40@0:8{TSUCellCoord=ISBB}16I24I28I32I36
@24@0:8@"TSPObjectContext"16
v24@0:8@"TSDInfoGeometry"16
v24@0:8@"NSObject<TSDInfo>"16
@"TSDInfoGeometry"16@0:8
@"NSObject<TSDInfo>"16@0:8
@"TSPObject<TSDOwningAttachment>"16@0:8
v24@0:8@"TSPObject<TSDOwningAttachment>"16
B24@0:8@"NSObject<TSDInfo>"16
@"<TSDInfoUUIDPathPrefixComponentsProvider>"16@0:8
@"TSKCollaboratorCursor"24@0:8@"TSKSelectionPath"16
@24@0:8@?16
@40@0:8@16@24^@32
@"TSKSearch"24@0:8@?<v@?@"<TSKSearchReference>">16
v24@0:8@?<v@?@"<TSKSearchReference>">16
v24@0:8@"TSKSearch"16
@"TSKCommand"40@0:8@"NSObject<TSKSearchReplaceProvider>"16@"<TSKActivitySelectionModelTranslatorProvider>"24^@32
v40@0:8@"NSString"16@"TSSTheme"24Q32
@"NSSet"16@0:8
v24@0:8@?<@"TSSStyle"@?@"TSSStyle">16
v24@0:8@"TSSStylesheet"16
v24@0:8@"TSSStyle"16
{TSKUIDStruct=QQ}20@0:8S16
{TSKUIDStruct=QQ}20@0:8I16
S32@0:8{TSKUIDStruct=QQ}16
I32@0:8{TSKUIDStruct=QQ}16
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}24@0:8@16
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}32@0:8{_NSRange=QQ}16
{_NSRange=QQ}24@0:8r^v16
r^v16@0:8
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}24@0:8r^v16
v28@0:8[16C]16I24
v28@0:8[16C]16S24
I24@0:8[16C]16
S24@0:8[16C]16
{TSKUIDStruct=QQ}28@0:8@16B24
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24@0:8r^v16
{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}}32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}24@0:8@"NSIndexSet"16
@"NSMutableIndexSet"24@0:8r^v16
@"NSIndexSet"24@0:8r^v16
@"TSCEMutableUIDSet"28@0:8@"NSIndexSet"16B24
@"NSMutableIndexSet"28@0:8@"TSCEUIDSet"16B24
@"NSMutableIndexSet"36@0:8@"TSCEUIDSet"16B24@"TSCEMutableUIDSet"28
{TSKUIDStruct=QQ}28@0:8@"TSCEUIDSet"16B24
B20@0:8I16
B20@0:8S16
I20@0:8I16
S20@0:8S16
B32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
I32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
@32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
B36@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16C32
B24@0:8I16C20
B24@0:8S16C20
C20@0:8I16
C20@0:8S16
@"NSIndexSet"32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
@"NSMutableIndexSet"32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
@"NSIndexSet"24@0:8@"TSTCellRegion"16
@"NSIndexSet"24@0:8@"NSIndexSet"16
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
@"TSTMergeListWrapper"32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
@"TSTMergeListWrapper"24@0:8@"TSTCellRegion"16
@"TSTCellRegion"24@0:8@"TSTCellRegion"16
@"<TSKAnnotation>"24@0:8@"NSString"16
@56@0:8@16@24I32I36@40@48
@48@0:8@16@24I32I36@40
@40@0:8@16@24I32I36
@64@0:8@16@24{TSUCellRect={TSUCellCoord=ISBB}{?=II}}32{_NSRange=QQ}48
@72@0:8@16@24{TSUCellRect={TSUCellCoord=ISBB}{?=II}}32{_NSRange=QQ}48@64
@40@0:8@16@24{TSUCellCoord=ISBB}32
@56@0:8@16@24@32B40q44B52
v28@0:8q16B24
v40@0:8@16@24d32
v40@0:8{TSUCellCoord=ISBB}16{TSUCellCoord=ISBB}24{TSUCellCoord=ISBB}32
v32@0:8@16{TSUCellCoord=ISBB}24
@18@0:8{TSUModelColumnIndex=S}16
Q32@0:8Q16@24
@28@0:8B16@20
Q24@0:8@16
v48@0:8@16@24@32d40
v24@0:8q16
v32@0:8{CGSize=dd}16
v32@0:8{CGPoint=dd}16
v32@0:8d16d24
v28@0:8{TSUColumnRowOffset=ii}16B24
B32@0:8@16@?24
i32@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24
i24@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
v40@0:8@16{TSUCellCoord=ISBB}24@32
@32@0:8{TSUCellCoord=ISBB}16@24
@36@0:8{TSUCellCoord=ISBB}16@24B32
v36@0:8i16@20{TSUCellCoord=ISBB}28
v48@0:8{TSUCellCoord=ISBB}16^B24^@32^q40
v64@0:8@16{TSUCellCoord=ISBB}24^B32^q40^i48^@56
v20@0:8i16
@18@0:8{TSUViewColumnIndex=S}16
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24@0:8Q16
Q24@0:8{TSUCellCoord=ISBB}16
Q20@0:8I16
Q20@0:8S16
Q48@0:8{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
i32@0:8@16Q24
i32@0:8o@16{TSUCellCoord=ISBB}24
i36@0:8@16{TSUCellCoord=ISBB}24B32
i32@0:8@16{TSUCellCoord=ISBB}24
B24@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
v36@0:8@16{TSUCellCoord=ISBB}24B32
i48@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24B32B36@40
i40@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24B32B36
v48@0:8@16{TSUViewCellCoord={TSUCellCoord=ISBB}}24@32@40
@36@0:8@16B24B28B32
@32@0:8@16B24B28
i40@0:8@16{TSUCellCoord=ISBB}24@32
C24@0:8{TSUCellCoord=ISBB}16
C24@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
i32@0:8@16r^{TSKUIDStruct=QQ}24
@28@0:8I16o^B20
@28@0:8S16o^B20
@36@0:8{TSUCellCoord=ISBB}16B24o^Q28
@32@0:8{TSUCellCoord=ISBB}16o^B24
@32@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16o^B24
v52@0:8{TSUCellCoord=ISBB}16B24@28^@36^@44
@28@0:8S16@20
@40@0:8{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}16o^B32
{TSUCellCoord=ISBB}24@0:8{TSUCellCoord=ISBB}16
d28@0:8I16o^B20
d28@0:8S16o^B20
v28@0:8d16S24
v28@0:8d16I24
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24@0:8{TSUCellCoord=ISBB}16
v28@0:8S16I20B24
i44@0:8S16r^v20@28Q36
i44@0:8I16r^v20@28Q36
i48@0:8I16r^v20@28Q36B44
v24@0:8S16I20
v36@0:8{_NSRange=QQ}16I32
v36@0:8{_NSRange=QQ}16S32
@24@0:8q16
v32@0:8@16@?24
{vector<TSUCellRect, std::allocator<TSUCellRect>>=^{TSUCellRect}^{TSUCellRect}{__compressed_pair<TSUCellRect *, std::allocator<TSUCellRect>>=^{TSUCellRect}}}32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
{vector<TSUCellRect, std::allocator<TSUCellRect>>=^{TSUCellRect}^{TSUCellRect}{__compressed_pair<TSUCellRect *, std::allocator<TSUCellRect>>=^{TSUCellRect}}}24@0:8@16
i36@0:8o^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16{TSUCellCoord=ISBB}24B32
{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}24@0:8I16I20
{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}24@0:8S16S20
@32@0:8@16^@24
B56@0:8{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}16o^{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}32o^{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}40o^{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}48
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24@0:8{TSUCellCoord=ISBB}16
{TSUCellCoord=ISBB}48@0:8{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
B40@0:8@16^v24^v32
v40@0:8@16^v24^v32
@36@0:8@16B24^B28
@52@0:8{vector<TSKUIDStructCoord, std::allocator<TSKUIDStructCoord>>=^{TSKUIDStructCoord}^{TSKUIDStructCoord}{__compressed_pair<TSKUIDStructCoord *, std::allocator<TSKUIDStructCoord>>=^{TSKUIDStructCoord}}}16B40^B44
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}28@0:8{TSUCellCoord=ISBB}16B24
i32@0:8o@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24
i36@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24B32
@56@0:8{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16o^B48
B20@0:8B16
v96@0:8@16{TSKUIDStruct=QQ}24d40{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}}48
v88@0:8@16@24@32q40@48{TSKUIDStruct=QQ}56{TSKUIDStruct=QQ}72
{TSUChromeColumnIndex=S}16@0:8
{TSUChromeRowIndex=I}16@0:8
S24@0:8@16
@28@0:8C16@?20
@28@0:8C16@20
@28@0:8C16r^v20
@24@0:8C16C20
{_NSRange=QQ}20@0:8I16
q24@0:8{TSUCellCoord=ISBB}16
B40@0:8{TSKUIDStruct=QQ}16q32
C24@0:8r^{TSKUIDStruct=QQ}16
C36@0:8{TSKUIDStruct=QQ}16C32
v40@0:8C16{TSKUIDStruct=QQ}20C36
d20@0:8C16
v28@0:8d16C24
@28@0:8i16@20
v32@0:8r^v16@24
{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}}16@0:8
v64@0:8{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}}16
@"TSTTableModel"
@"TSTConditionalStyleSet"
@"TSTTablePartitioner"
@"TSTLayoutEngine"
@"TSTSummaryModel"
@"TSTLayoutHint"
@"TSTCategoryOrder"
@"TSTPivotRowColumnOrder"
@"TSTHiddenStates"
@"TSCECoordMapper"
@"TSTArchivedLayoutEngineBundle"
{TSKUIDStructTract="_colIdList"{TSKUIDStructVectorTemplate<TSKUIDStruct>="__begin_"^{TSKUIDStruct}"__end_"^{TSKUIDStruct}"__end_cap_"{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>="__value_"^{TSKUIDStruct}}}"_rowIdList"{TSKUIDStructVectorTemplate<TSKUIDStruct>="__begin_"^{TSKUIDStruct}"__end_"^{TSKUIDStruct}"__end_cap_"{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>="__value_"^{TSKUIDStruct}}}}
B20@0:8i16
@20@0:8i16
f20@0:8i16
i20@0:8i16
d20@0:8i16
v40@0:8@16@24{TSUCellCoord=ISBB}32
@40@0:8@16@24@32
v56@0:8@16@24@32Q40@48
@64@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24@32@40@48@56
@80@0:8@16@24r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}32@40@48@56@64@72
@56@0:8@16Q24B32B36@40@48
@48@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16Q32Q40
v56@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16Q32Q40@?48
@32@0:8r^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16@24
c16@0:8
v20@0:8c16
@"TSULocale"
{vector<TSUCellRect, std::allocator<TSUCellRect>>="__begin_"^{TSUCellRect}"__end_"^{TSUCellRect}"__end_cap_"{__compressed_pair<TSUCellRect *, std::allocator<TSUCellRect>>="__value_"^{TSUCellRect}}}
@36@0:8@16r^v24C32
@44@0:8@16r^{TSKUIDStruct=QQ}24r^v32C40
v20@0:8C16
v28@0:8r^v16C24
{RefTypeHolder<TSCERangeRef, 0>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}16@0:8
{RefTypeHolder<TSCERangeRef, 1>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}16@0:8
{vector<RefTypeHolder<TSCERangeRef, 0>, std::allocator<RefTypeHolder<TSCERangeRef, 0>>>=^v^v{__compressed_pair<RefTypeHolder<TSCERangeRef, 0> *, std::allocator<RefTypeHolder<TSCERangeRef, 0>>>=^v}}16@0:8
{vector<RefTypeHolder<TSCERangeRef, 1>, std::allocator<RefTypeHolder<TSCERangeRef, 1>>>=^v^v{__compressed_pair<RefTypeHolder<TSCERangeRef, 1> *, std::allocator<RefTypeHolder<TSCERangeRef, 1>>>=^v}}16@0:8
{TSUViewCellCoord={TSUCellCoord=ISBB}}16@0:8
{TSUModelCellCoord={TSUCellCoord=ISBB}}16@0:8
{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}16@0:8
v48@0:8{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}16
@"TSCECellTractRef"
@"TSTColumnRowUIDMapper"
{RefTypeHolder<TSCERangeRef, 2>="_ref"{TSCERangeRef="range"{TSCERangeCoordinate="_topLeft"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}"_bottomRight"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}}"_tableUID"{TSKUIDStruct="_lower"Q"_upper"Q}}}
v24@0:8@?<v@?@"<TSTCellIteratorData>"^B>16
@"<TSTCellIteratorData>"16@0:8
@"TSTTableInfo"16@0:8
@72@0:8@16@24@32Q40Q48{TSUCellRect={TSUCellCoord=ISBB}{?=II}}56
@64@0:8@16@24Q32Q40{TSUCellRect={TSUCellCoord=ISBB}{?=II}}48
@40@0:8@16Q24Q32
@56@0:8@16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24Q40Q48
@48@0:8@16@24Q32Q40
{unordered_map<unsigned short, TSUCellRect, std::hash<unsigned short>, std::equal_to<unsigned short>, std::allocator<std::pair<const unsigned short, TSUCellRect>>>="__table_"{__hash_table<std::__hash_value_type<unsigned short, TSUCellRect>, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, TSUCellRect>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, TSUCellRect>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>, std::allocator<std::__hash_value_type<unsigned short, TSUCellRect>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSUCellRect>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSUCellRect>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSUCellRect>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSUCellRect>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSUCellRect>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSUCellRect>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSUCellRect>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned short, TSUCellRect>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSUCellRect>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, TSUCellRect>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, TSUCellRect>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>>="__value_"f}}}
@"TSTMutableCellIteratorData"
@"<TSTCellRegionIterating><TSTMutableCellIteratorDataUpdating>"
@"<TSTCellRegionIterating>"
@32@0:8Q16Q24
v48@0:8@16Q24@32Q40
v56@0:8@16Q24Q32@40Q48
v40@0:8@16r^v24@32
{CGSize=dd}32@0:8@16@24
^{TSCEFunctionArgSpec=}16@0:8
v40@0:8@16{TSTCSENodeData=QQ}24
@40@0:8{TSTCSENodeData=QQ}16@32
{unordered_map<unsigned long, TSTCSENodeData, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, TSTCSENodeData>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, TSTCSENodeData>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, TSTCSENodeData>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, TSTCSENodeData>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, TSTCSENodeData>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSTCSENodeData>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSTCSENodeData>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSTCSENodeData>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSTCSENodeData>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSTCSENodeData>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSTCSENodeData>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSTCSENodeData>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, TSTCSENodeData>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSTCSENodeData>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, TSTCSENodeData>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, TSTCSENodeData>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}
@"NSMutableArray"
Q24@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16
C18@0:8{TSUViewColumnIndex=S}16
C20@0:8{TSUViewRowIndex=I}16
Q20@0:8{TSUViewRowIndex=I}16
{TSUViewColumnIndex=S}16@0:8
{TSUViewRowIndex=I}16@0:8
C24@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16
v44@0:8{TSUViewRowIndex=I}16@?20@?28@?36
@28@0:8{TSUViewRowIndex=I}16o^B20
v42@0:8{TSUViewColumnIndex=S}16@?18@?26@?34
@26@0:8{TSUViewColumnIndex=S}16o^B18
i40@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16@?24@?32
@36@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16B24o^Q28
v52@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16B24@28^@36^@44
@32@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16o^B24
i36@0:8@16{TSUViewCellCoord={TSUCellCoord=ISBB}}24B32
i36@0:8o^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16{TSUViewCellCoord={TSUCellCoord=ISBB}}24B32
d28@0:8{TSUViewRowIndex=I}16o^B20
d26@0:8{TSUViewColumnIndex=S}16o^B18
v28@0:8d16{TSUViewRowIndex=I}24
v26@0:8d16{TSUViewColumnIndex=S}24
B24@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16
C28@0:8{TSUViewRowIndex=I}16^Q20
C26@0:8{TSUViewColumnIndex=S}16^Q18
Q18@0:8{TSUViewColumnIndex=S}16
{os_unfair_lock_s=I}16@0:8
v20@0:8{os_unfair_lock_s=I}16
@"NSIndexSet"
@24@0:8I16B20
{vector<TSTCell *, std::allocator<TSTCell *>>=^@^@{__compressed_pair<TSTCell *__strong *, std::allocator<TSTCell *>>=^@}}32@0:8^v16@?24
^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}20@0:8S16
v28@0:8S16@20
q28@0:8@16S24
Q24@0:8S16I20
v28@0:8S16S20I24
v40@0:8{_NSRange=QQ}16@?32
v44@0:8{_NSRange=QQ}16B32@?36
B28@0:8S16Q20
{TSTTableTileRowBuffer="_private"{?="cellData"*"cellBufferSize"Q"allocatedCellBufferSize"Q"offsets"^S"offsetBufferCount"S"wideOffsets"B}}
@40@0:8@16@24q32
{vector<TSU::UUIDData<TSP::UUIDData>, std::allocator<TSU::UUIDData<TSP::UUIDData>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<TSU::UUIDData<TSP::UUIDData> *, std::allocator<TSU::UUIDData<TSP::UUIDData>>>="__value_"^v}}
@"TSCEUIDSet"
@"TSCEFormulaObject"16@0:8
@"TSCEFormulaObject"
@"TSTStockDetails"
^v28@0:8@16B24
{TSCENameTrieNode="_children"{unordered_map<unsigned short, TSCENameTrieNode *, std::hash<unsigned short>, std::equal_to<unsigned short>, std::allocator<std::pair<const unsigned short, TSCENameTrieNode *>>>="__table_"{__hash_table<std::__hash_value_type<unsigned short, TSCENameTrieNode *>, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, TSCENameTrieNode *>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, TSCENameTrieNode *>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>, std::allocator<std::__hash_value_type<unsigned short, TSCENameTrieNode *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCENameTrieNode *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCENameTrieNode *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCENameTrieNode *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCENameTrieNode *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCENameTrieNode *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCENameTrieNode *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCENameTrieNode *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned short, TSCENameTrieNode *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCENameTrieNode *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, TSCENameTrieNode *>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, TSCENameTrieNode *>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>>="__value_"f}}}"_name"@"NSString"}
@32@0:8^{TSCETableResolver=^^?}16@24
@24@0:8^{TSCETableResolver=^^?}16
^{TSCETableResolver=^^?}16@0:8
v24@0:8^{TSCETableResolver=^^?}16
{TSUPreserveFlags="_flags"C}
^{TSCETableResolver=^^?}
@"NSArray"
@"TSCEQuotedRefPathSplitter"
@"TSCEAbortObject"
@32@0:8@16Q24
@"TSCEEdgeListPrinter"
@32@0:8{TSKUIDStruct=QQ}16
v32@0:8@16Q24
v32@0:8Q16Q24
v32@0:8Q16q24
v24@0:8C16C20
v28@0:8C16q20
v28@0:8C16@20
v56@0:8@16@24@32@40q48
v56@0:8^v16^v24^v32@40C48B52
{vector<unsigned long, std::allocator<unsigned long>>=^Q^Q{__compressed_pair<unsigned long *, std::allocator<unsigned long>>=^Q}}20@0:8S16
q24@0:8r^{TSKUIDStruct=QQ}16
S24@0:8r^{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}16
B24@0:8r^{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}16
@24@0:8S16B20
{vector<TSTGroupNode *, std::allocator<TSTGroupNode *>>=^@^@{__compressed_pair<TSTGroupNode *__strong *, std::allocator<TSTGroupNode *>>=^@}}16@0:8
r^v24@0:8r^{TSKUIDStruct=QQ}16
{TSKUIDStruct=QQ}32@0:8r^{TSKUIDStruct=QQ}16^Q24
Q24@0:8r^{TSKUIDStruct=QQ}16
S24@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
@24@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
@28@0:8Q16B24
@32@0:8Q16@24
@40@0:8Q16B24B28@32
S32@0:8@16@24
{TSKUIDStruct=QQ}24@0:8@16
@32@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16^C24
@28@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16C24
{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}24@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
@44@0:8@16r^v24Q32B40
@32@0:8r^{TSKUIDStruct=QQ}16@24
@44@0:8@16@24@32C40
@48@0:8@16@24r^{TSKUIDStruct=QQ}32@40
@36@0:8@16S24@28
B32@0:8r^{TSKUIDStruct=QQ}16q24
@32@0:8r^{TSKUIDStruct=QQ}16q24
v52@0:8r^{TSKUIDStruct=QQ}16@24@32B40@44
@28@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16B24
B40@0:8@16{TSKUIDStruct=QQ}24
{vector<TSTGroupBy *, std::allocator<TSTGroupBy *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<TSTGroupBy *__strong *, std::allocator<TSTGroupBy *>>="__value_"^@}}
{TSKUIDStructVectorTemplate<TSKUIDStruct>="__begin_"^{TSKUIDStruct}"__end_"^{TSKUIDStruct}"__end_cap_"{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>="__value_"^{TSKUIDStruct}}}
{unordered_map<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::pair<unsigned long, TSTColumnAggregate *>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
{unordered_map<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSKUIDStructVectorTemplate<TSKUIDStruct>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
{unordered_map<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::pair<TSKUIDStruct, unsigned long>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
{vector<TSUIndexSet, std::allocator<TSUIndexSet>>="__begin_"^{TSUIndexSet}"__end_"^{TSUIndexSet}"__end_cap_"{__compressed_pair<TSUIndexSet *, std::allocator<TSUIndexSet>>="__value_"^{TSUIndexSet}}}
@"TSTGroupingColumnList"
@"TSTColumnAggregateList"
^{TSCEASTNodeArray=*QQB}16@0:8
{?=b48}16@0:8
^{TSCEASTNodeArray=*QQB}
{?="formulaID"b48}
v28@0:8@16i24
v24@0:8i16i20
v24@0:8B16i20
v24@0:8f16i20
@"TSSPropertyMap"
{vector<TSCEFunctionIndex, std::allocator<TSCEFunctionIndex>>=^S^S{__compressed_pair<TSCEFunctionIndex *, std::allocator<TSCEFunctionIndex>>=^S}}16@0:8
v32@0:8r^v16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24
v40@0:8@16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24^B32
{unordered_map<TSCEFunctionIndex, TSCEReferenceSet *, std::hash<TSCEFunctionIndex>, std::equal_to<TSCEFunctionIndex>, std::allocator<std::pair<const TSCEFunctionIndex, TSCEReferenceSet *>>>="__table_"{__hash_table<std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, std::__unordered_map_hasher<TSCEFunctionIndex, std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, std::hash<TSCEFunctionIndex>, std::equal_to<TSCEFunctionIndex>, true>, std::__unordered_map_equal<TSCEFunctionIndex, std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, std::equal_to<TSCEFunctionIndex>, std::hash<TSCEFunctionIndex>, true>, std::allocator<std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSCEFunctionIndex, std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, std::hash<TSCEFunctionIndex>, std::equal_to<TSCEFunctionIndex>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSCEFunctionIndex, std::__hash_value_type<TSCEFunctionIndex, TSCEReferenceSet *>, std::equal_to<TSCEFunctionIndex>, std::hash<TSCEFunctionIndex>, true>>="__value_"f}}}
{_opaque_pthread_mutex_t="__sig"q"__opaque"[56c]}
@96@0:8@16{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}}24r^v72q80B88B92
@"TSUPair"24@0:8@"TSTTableInfo"16
{vector<TSUViewCellRect, std::allocator<TSUViewCellRect>>=^{TSUViewCellRect}^{TSUViewCellRect}{__compressed_pair<TSUViewCellRect *, std::allocator<TSUViewCellRect>>=^{TSUViewCellRect}}}16@0:8
{vector<TSKUIDStructTract, std::allocator<TSKUIDStructTract>>=^{TSKUIDStructTract}^{TSKUIDStructTract}{__compressed_pair<TSKUIDStructTract *, std::allocator<TSKUIDStructTract>>=^{TSKUIDStructTract}}}16@0:8
v32@0:8@?16@?24
@32@0:8@16@?24
v40@0:8Q16Q24@?32
v32@0:8Q16@?24
v104@0:8@?16@?24@?32@?40@?48@?56@?64@?72@?80@?88@?96
v40@0:8{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}16
@88@0:8@16{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}}24r^v72q80
@88@0:8@16{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}24{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}}40
@40@0:8@16{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}24
@72@0:8@16{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}}24
v32@0:8@16{TSUViewCellCoord={TSUCellCoord=ISBB}}24
v40@0:8Q16Q24Q32
v36@0:8^v16@24B32
{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16@0:8
v32@0:8{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{TSUViewCellRect="_rect"{TSUCellRect="origin"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}"size"{?="numberOfColumns"I"numberOfRows"I}}}
{vector<TSTCell *, std::allocator<TSTCell *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<TSTCell *__strong *, std::allocator<TSTCell *>>="__value_"^@}}
{vector<TSUModelRowIndex, std::allocator<TSUModelRowIndex>>="__begin_"^{TSUModelRowIndex}"__end_"^{TSUModelRowIndex}"__end_cap_"{__compressed_pair<TSUModelRowIndex *, std::allocator<TSUModelRowIndex>>="__value_"^{TSUModelRowIndex}}}
{vector<TSUModelColumnIndex, std::allocator<TSUModelColumnIndex>>="__begin_"^{TSUModelColumnIndex}"__end_"^{TSUModelColumnIndex}"__end_cap_"{__compressed_pair<TSUModelColumnIndex *, std::allocator<TSUModelColumnIndex>>="__value_"^{TSUModelColumnIndex}}}
{vector<TSUViewRowIndex, std::allocator<TSUViewRowIndex>>="__begin_"^{TSUViewRowIndex}"__end_"^{TSUViewRowIndex}"__end_cap_"{__compressed_pair<TSUViewRowIndex *, std::allocator<TSUViewRowIndex>>="__value_"^{TSUViewRowIndex}}}
{vector<TSUViewColumnIndex, std::allocator<TSUViewColumnIndex>>="__begin_"^{TSUViewColumnIndex}"__end_"^{TSUViewColumnIndex}"__end_cap_"{__compressed_pair<TSUViewColumnIndex *, std::allocator<TSUViewColumnIndex>>="__value_"^{TSUViewColumnIndex}}}
{vector<long, std::allocator<long>>="__begin_"^q"__end_"^q"__end_cap_"{__compressed_pair<long *, std::allocator<long>>="__value_"^q}}
@"TSUPointerKeyDictionary"
v32@0:8@16{TSUColumnRowOffset=ii}24
@"NSMutableIndexSet"
@"TSKStructuredTextImportSettings"
@"NSURL"
@"NSDate"
@"NSData"
#24@0:8@16
v24@0:8i16I20
@32@0:8@16I24B28
v28@0:8I16@20
v24@0:8I16B20
{unordered_map<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *, TSTTableDataPayloadHash, TSTTableDataPayloadEqual, std::allocator<std::pair<NSObject<TSTTableDataPayloadHashing> *const, TSTTableDataObject *>>>="__table_"{__hash_table<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, std::__unordered_map_hasher<NSObject<TSTTableDataPayloadHashing> *, std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, TSTTableDataPayloadHash, TSTTableDataPayloadEqual, true>, std::__unordered_map_equal<NSObject<TSTTableDataPayloadHashing> *, std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, TSTTableDataPayloadEqual, TSTTableDataPayloadHash, true>, std::allocator<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<NSObject<TSTTableDataPayloadHashing> *, std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, TSTTableDataPayloadHash, TSTTableDataPayloadEqual, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<NSObject<TSTTableDataPayloadHashing> *, std::__hash_value_type<NSObject<TSTTableDataPayloadHashing> *, TSTTableDataObject *>, TSTTableDataPayloadEqual, TSTTableDataPayloadHash, true>>="__value_"f}}}
@"NSObject<TSDContainerInfo><TSWPStorageParent>"
@"TSTTableDataListSegment"
I32@0:8@16I24B28
@36@0:8I16^B20^B28
v40@0:8@16Q24@32
@44@0:8@16@24@32B40
I24@0:8@16
@76@0:8i16@20{CGAffineTransform=dddddd}28
@"TSKSelection"16@0:8
v24@0:8@"TSKSelection"16
@"TSKSelection"24@0:8@"TSKSelection"16
@"TSTCellSelection"
@76@0:8{TSKUIDStruct=QQ}16{TSKUIDStruct=QQ}32C48i52C56{TSKUIDStruct=QQ}60
@40@0:8{TSKUIDStruct=QQ}16C32i36
@36@0:8{TSKUIDStruct=QQ}16C32
@56@0:8{TSKUIDStruct=QQ}16C32C36{TSKUIDStruct=QQ}40
@72@0:8{TSKUIDStruct=QQ}16{TSKUIDStruct=QQ}32C48C52{TSKUIDStruct=QQ}56
v24@0:8[16C]16
{UUIDData<TSP::UUIDData>=""(?="_uuid"[16C]"_cfuuid"{?="byte0"C"byte1"C"byte2"C"byte3"C"byte4"C"byte5"C"byte6"C"byte7"C"byte8"C"byte9"C"byte10"C"byte11"C"byte12"C"byte13"C"byte14"C"byte15"C}""{?="_lower"Q"_upper"Q})}
@32@0:8r^{TSCEStringValue=^^?@{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}b1b1b1}16@24
^{TSCEStringValue=^^?@{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}b1b1b1}16@0:8
^{TSCEStringValue=^^?@{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}b1b1b1}
@"TSWPPadding"
@56@0:8r^v16r^v24Q32@40@48
v32@0:8^v16^v24
v40@0:8^v16^v24@32
@28@0:8I16^{_NSRange=QQ}20
B40@0:8{TSUCellCoord=ISBB}16@24^@32
{multimap<TSUCellCoord, std::tuple<unsigned int, unsigned long, TSTCellStorage *>, std::less<TSUCellCoord>, std::allocator<std::pair<const TSUCellCoord, std::tuple<unsigned int, unsigned long, TSTCellStorage *>>>>={__tree<std::__value_type<TSUCellCoord, std::tuple<unsigned int, unsigned long, TSTCellStorage *>>, std::__map_value_compare<TSUCellCoord, std::__value_type<TSUCellCoord, std::tuple<unsigned int, unsigned long, TSTCellStorage *>>, std::less<TSUCellCoord>, true>, std::allocator<std::__value_type<TSUCellCoord, std::tuple<unsigned int, unsigned long, TSTCellStorage *>>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSUCellCoord, std::tuple<unsigned int, unsigned long, TSTCellStorage *>>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<TSUCellCoord, std::__value_type<TSUCellCoord, std::tuple<unsigned int, unsigned long, TSTCellStorage *>>, std::less<TSUCellCoord>, true>>=Q}}}16@0:8
[16@"TSTTableTileGroup"]
@40@0:8r^v16@24@32
v24@0:8C16I20
Q36@0:8I16^@20^@28
@48@0:8I16C20d24{TSKUIDStruct=QQ}32
v28@0:8I16Q20
[16@"TSTTableHeaderStorageBucket"]
@34@0:8Q16{TSUModelColumnIndex=S}24@26
@"TSUSparseArray"
@128@0:8{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16@112^v120
B120@0:8{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16^v112
{TSCENumberValue="_vptr$TSCEAbstractValue"^^?"_decimal"{TSUDecimal="_decimal"{?="w"[2Q]}}"_format"{TSCEFormat="_tskFormat"@"TSKFormat""_formatType"I"_formatState"C"_durationFormat"{TSCEDurationFormat="_useAutomaticUnits"b1"_durationUnitSmallest"b6"_durationUnitLargest"b6"_durationStyle"b3}"_baseFormat"{TSCEBaseFormat="base"C"basePlaces"C"baseUseMinusSign"B}"_fractionFormat"{TSCEFractionFormat="fractionAccuracy"c}"_numberFormat"{TSCENumberFormat="decimalPlaces"C"negativeStyle"b3"showThousandsSeparator"b1"useAccountingStyle"b1"currencyCodeIndex"S}}"_baseUnit"S"_isUnitlessZero"B}
@"TSCERegexMatcher"
Q24@0:8r^{TSUCellCoord=ISBB}16
{TSUCellCoord=ISBB}24@0:8Q16
@32@0:8r^v16r^{TSKUIDStruct=QQ}24
{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}32@0:8@16r^{TSUModelCellCoord={TSUCellCoord=ISBB}}24
{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}36@0:8@16r^{TSUModelCellCoord={TSUCellCoord=ISBB}}24B32
{TSKUIDStruct=QQ}32@0:8@16r^{TSUModelCellCoord={TSUCellCoord=ISBB}}24
@48@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16Q32r^{TSKUIDStruct=QQ}40
{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}28@0:8Q16B24
{TSKUIDStruct=QQ}24@0:8Q16
@40@0:8r^{TSKUIDStruct=QQ}16r^v24@32
c24@0:8^v16
{TSCEGridDimensions=II}16@0:8
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}32@0:8r^{TSCEGridCoord=II}16^{TSCEGridAccessContext=@^{TSCEFunctionArgSpec}i^{TSCEEvaluationContext}BBBBBCC{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}24
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}32@0:8Q16^{TSCEGridAccessContext=@^{TSCEFunctionArgSpec}i^{TSCEEvaluationContext}BBBBBCC{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}24
{TSCEGrid=^^?@{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}}24@0:8^{TSCEGridAccessContext=@^{TSCEFunctionArgSpec}i^{TSCEEvaluationContext}BBBBBCC{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}16
{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}32@0:8Q16^{TSCEGridAccessContext=@^{TSCEFunctionArgSpec}i^{TSCEEvaluationContext}BBBBBCC{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}24
{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}24@0:8^{TSCEGridAccessContext=@^{TSCEFunctionArgSpec}i^{TSCEEvaluationContext}BBBBBCC{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}16
B28@0:8i16^v20
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}40@0:8r^{TSCEGridCoord=II}16i24i28^{TSCEGridAccessContext=@^{TSCEFunctionArgSpec}i^{TSCEEvaluationContext}BBBBBCC{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}32
^{TSCEASTNodeArray=*QQB}40@0:8@16i24B28^v32
{TSCENumberValue=^^?{TSUDecimal={?=[2Q]}}{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}SB}36@0:8@16i24^v28
@36@0:8@16i24^v28
B36@0:8@16i24^v28
@36@0:8@16i24@28
{TSCEReferenceValue=^^?@{TSUCellCoord=ISBB}{TSUPreserveFlags=C}BB}36@0:8@16i24^v28
v28@0:8B16Q20
@"<TSWPStyleProvider>"16@0:8
@"<TSWPStyleProvider>"24@0:8@"TSWPLayout"16
B24@0:8@"TSWPLayout"16
@28@0:8@16I24
d32@0:8Q16d24
d56@0:8Q16d24@32^d40^d48
{UIEdgeInsets=dddd}24@0:8@16
d56@0:8Q16d24@"<TSWPLayoutTarget>"32^d40^d48
{UIEdgeInsets=dddd}24@0:8@"<TSWPLayoutTarget>"16
@"TSWPPadding"16@0:8
@"TSWPPadding"24@0:8@"<TSWPLayoutTarget>"16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@16
{CGRect={CGPoint=dd}{CGSize=dd}}40@0:8@16{CGSize=dd}24
d24@0:8@16
{CGSize=dd}16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}60@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48B56
Q24@0:8@"TSWPLayout"16
i24@0:8@"TSWPLayout"16
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8@"TSWPLayout"16
{CGRect={CGPoint=dd}{CGSize=dd}}40@0:8@"TSWPLayout"16{CGSize=dd}24
@"<NSFastEnumeration>"24@0:8@"TSWPLayout"16
#24@0:8@"TSWPLayout"16
v24@0:8@"TSWPLayout"16
@"NSSet"24@0:8@"TSWPLayout"16
d24@0:8@"TSWPLayout"16
q24@0:8@"TSWPLayout"16
Q24@0:8@"TSWPAttachment"16
{CGRect={CGPoint=dd}{CGSize=dd}}60@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@"TSKSelectionPath"48B56
v64@0:8@16{_NSRange=QQ}24q40Q48@56
v64@0:8@"TSWPStorage"16{_NSRange=QQ}24q40Q48@"NSArray"56
{CGPoint=dd}16@0:8
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{CGRect={CGPoint=dd}{CGSize=dd}}16@0:8
v48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
d24@0:8o^d16
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}104@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16@48{CGAffineTransform=dddddd}56
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8{?={?=II}{?=II}}16
@76@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16i32d36d44B52B56d60^@68
@76@0:8{?={?=II}{?=II}}16i32d36d44B52B56d60^@68
v112@0:8@16I24{CGAffineTransform=dddddd}28d76d84B92d96@?104
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24@0:8@16
{CGSize=dd}24@0:8@16
{UIEdgeInsets=dddd}16@0:8
d32@0:8@16d24
{CGPoint=dd}24@0:8@16
{CGRect={CGPoint=dd}{CGSize=dd}}32@0:8{TSUCellCoord=ISBB}16^B24
{CGSize=dd}32@0:8{?={?=II}{?=II}}16
B32@0:8{?={?=II}{?=II}}16
{CGRect={CGPoint=dd}{CGSize=dd}}48@0:8@16{CGSize=dd}24^{TSUCellRect={TSUCellCoord=ISBB}{?=II}}40
{CGRect="origin"{CGPoint="x"d"y"d}"size"{CGSize="width"d"height"d}}
@"TSTLayoutSpaceBundle"
{?="tableNameHeight"d"scaleToFitParent"{CGSize="width"d"height"d}"scaleToFitEnclosingTextColumn"{CGSize="width"d"height"d}}
@"TSWPLayout"
{UIEdgeInsets="top"d"left"d"bottom"d"right"d}
{CGSize="width"d"height"d}
v24@0:8r^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}20@0:8B16
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}20@0:8C16
{TSCEValue=""(?="DONT_USE_fakeTSCENumberValueStandIn"{?="_decimal"{?="w"[2Q]}"_formatFake"[24C]"_baseUnit"S"_isUnitlessZero"B}"_buff"[9Q])"_type"C}
{TSCEDateValue="_vptr$TSCEAbstractValue"^^?"mDate"@"NSDate""mFormat"{TSCEFormat="_tskFormat"@"TSKFormat""_formatType"I"_formatState"C"_durationFormat"{TSCEDurationFormat="_useAutomaticUnits"b1"_durationUnitSmallest"b6"_durationUnitLargest"b6"_durationStyle"b3}"_baseFormat"{TSCEBaseFormat="base"C"basePlaces"C"baseUseMinusSign"B}"_fractionFormat"{TSCEFractionFormat="fractionAccuracy"c}"_numberFormat"{TSCENumberFormat="decimalPlaces"C"negativeStyle"b3"showThousandsSeparator"b1"useAccountingStyle"b1"currencyCodeIndex"S}}}
v24@0:8r^{TSCEInternalCellReference={TSUCellCoord=ISBB}SS}16
v28@0:8r^v16S24
v24@0:8r^{TSCEInternalRangeReference={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}S}16
v40@0:8^v16@24d32
B24@0:8d16
B24@0:8r^{TSCEInternalCellReference={TSUCellCoord=ISBB}SS}16
@"TSCECellDirtier"
{TSCEInternalCellRefSet="_coordsForOwnerId"{unordered_map<unsigned short, TSCECellCoordSet, std::hash<unsigned short>, std::equal_to<unsigned short>, std::allocator<std::pair<const unsigned short, TSCECellCoordSet>>>="__table_"{__hash_table<std::__hash_value_type<unsigned short, TSCECellCoordSet>, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, TSCECellCoordSet>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, TSCECellCoordSet>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>, std::allocator<std::__hash_value_type<unsigned short, TSCECellCoordSet>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, TSCECellCoordSet>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, TSCECellCoordSet>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>>="__value_"f}}}}
{vector<TSCEInternalRangeReference, std::allocator<TSCEInternalRangeReference>>="__begin_"^{TSCEInternalRangeReference}"__end_"^{TSCEInternalRangeReference}"__end_cap_"{__compressed_pair<TSCEInternalRangeReference *, std::allocator<TSCEInternalRangeReference>>="__value_"^{TSCEInternalRangeReference}}}
@40@0:8@16{TSUViewCellCoord={TSUCellCoord=ISBB}}24@32
@32@0:8^{TSCEErrorValue=^^?@}16@24
^{TSCEErrorValue=^^?@}16@0:8
^{TSCEErrorValue=^^?@}
@36@0:8r^{TSUChromeColumnIndex=S}16r^{TSKUIDStruct=QQ}24B32
@"NSString"32@0:8r^v16@"TSCERefNamingContext"24
@"NSString"32@0:8@"TSCECellTractRef"16@"TSCERefNamingContext"24
@"NSString"40@0:8@"TSCECellTractRef"16@"TSCERefNamingContext"24@"TSCECoordMapper"32
@"NSString"36@0:8r^{TSUChromeColumnIndex=S}16r^{TSKUIDStruct=QQ}24B32
@"NSString"32@0:8@"TSCEWrappedRangeRef"16@"TSCERefNamingContext"24
@32@0:8r^{TSUCellCoord=ISBB}16@24
@44@0:8r^{TSUCellCoord=ISBB}16B24@28^{TSUCellRect={TSUCellCoord=ISBB}{?=II}}36
@36@0:8S16@20@28
@44@0:8r^v16@24B32@36
@56@0:8@16B24B28^{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}32@40@48
{TSCERecalculationState=C}33@0:8{TSUCellCoord=ISBB}16@24{TSCERecalculationState=C}32
{TSCERecalculationState=C}33@0:8r^v16@24{TSCERecalculationState=C}32
@"<TSCEReferenceResolving>"16@0:8
{TSCERecalculationState=C}33@0:8{TSUCellCoord=ISBB}16@"TSCECalculationEngine"24{TSCERecalculationState=C}32
{TSCERecalculationState=C}33@0:8r^v16@"TSCECalculationEngine"24{TSCERecalculationState=C}32
@40@0:8r^{TSKUIDStruct=QQ}16{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}24
v48@0:8{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}16r^{TSKUIDStruct=QQ}32@40
v40@0:8{TSUCellCoord=ISBB}16r^{TSKUIDStruct=QQ}24@32
@24@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16
@"TSCETrackedReferenceStore"
v40@0:8r^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16@24^v32
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}24@0:8@16
^{TSCENumberValue=^^?{TSUDecimal={?=[2Q]}}{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}SB}16@0:8
@36@0:8@16@24B32
v56@0:8@16{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24
v60@0:8@16{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24B56
@"TSCEBulkCellChangeMinion"
@"NSObject<OS_dispatch_queue>"
{TSUModelColumnIndex=S}18@0:8{TSUViewColumnIndex=S}16
{TSUModelRowIndex=I}20@0:8{TSUViewRowIndex=I}16
{TSUModelColumnIndex=S}18@0:8{TSUChromeColumnIndex=S}16
{TSUModelRowIndex=I}20@0:8{TSUChromeRowIndex=I}16
{TSUChromeColumnIndex=S}18@0:8{TSUModelColumnIndex=S}16
{TSUChromeRowIndex=I}20@0:8{TSUModelRowIndex=I}16
{TSUViewColumnIndex=S}18@0:8{TSUModelColumnIndex=S}16
{TSUViewRowIndex=I}20@0:8{TSUModelRowIndex=I}16
{TSUChromeColumnIndex=S}18@0:8{TSUViewColumnIndex=S}16
{TSUChromeRowIndex=I}20@0:8{TSUViewRowIndex=I}16
{TSUViewColumnIndex=S}18@0:8{TSUChromeColumnIndex=S}16
{TSUViewRowIndex=I}20@0:8{TSUChromeRowIndex=I}16
{TSUModelCellCoord={TSUCellCoord=ISBB}}24@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16
{TSUModelCellCoord={TSUCellCoord=ISBB}}24@0:8{TSUChromeCellCoord={TSUCellCoord=ISBB}}16
{TSUChromeCellCoord={TSUCellCoord=ISBB}}24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
{TSUChromeCellCoord={TSUCellCoord=ISBB}}24@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16
{TSUViewCellCoord={TSUCellCoord=ISBB}}24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
{TSUViewCellCoord={TSUCellCoord=ISBB}}24@0:8{TSUChromeCellCoord={TSUCellCoord=ISBB}}16
{RefTypeHolder<TSCECellRef, 0>={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}}24@0:8r^v16
{RefTypeHolder<TSCECellRef, 2>={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}}24@0:8r^v16
{RefTypeHolder<TSCECellRef, 1>={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}}24@0:8r^v16
{RefTypeHolder<TSCERangeRef, 2>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}24@0:8r^v16
{RefTypeHolder<TSCERangeRef, 1>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}24@0:8r^v16
r^{TSKUIDStruct=QQ}16@0:8
@"TSCECellTractRef"24@0:8@"TSCECellTractRef"16
@"TSKShuffleMapping"24@0:8@"TSKShuffleMapping"16
@48@0:8r^{TSKUIDStruct=QQ}16@24@32@40
@40@0:8r^{TSKUIDStruct=QQ}16@24@32
v24@0:8S16S20
{unordered_map<unsigned int, unsigned int, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<const unsigned int, unsigned int>>>="__table_"{__hash_table<std::__hash_value_type<unsigned int, unsigned int>, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, unsigned int>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, unsigned int>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>, std::allocator<std::__hash_value_type<unsigned int, unsigned int>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, unsigned int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, unsigned int>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, unsigned int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, unsigned int>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, unsigned int>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, unsigned int>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, unsigned int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned int, unsigned int>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, unsigned int>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, unsigned int>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, unsigned int>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>>="__value_"f}}}
{unordered_map<unsigned short, unsigned short, std::hash<unsigned short>, std::equal_to<unsigned short>, std::allocator<std::pair<const unsigned short, unsigned short>>>="__table_"{__hash_table<std::__hash_value_type<unsigned short, unsigned short>, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, unsigned short>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, unsigned short>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>, std::allocator<std::__hash_value_type<unsigned short, unsigned short>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, unsigned short>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, unsigned short>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, unsigned short>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, unsigned short>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, unsigned short>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, unsigned short>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, unsigned short>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned short, unsigned short>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, unsigned short>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, unsigned short>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, unsigned short>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>>="__value_"f}}}
v56@0:8@16i24@28I36{TSTSimpleRange=qQ}40
v36@0:8@16i24{TSUCellCoord=ISBB}28
v24@0:8{?=II}16
v56@0:8@16@?24@?32@?40@?48
{vector<TSTCellBorder *, std::allocator<TSTCellBorder *>>=^@^@{__compressed_pair<TSTCellBorder *__strong *, std::allocator<TSTCellBorder *>>=^@}}28@0:8{TSUModelRowIndex=I}16^v20
@"TSTStrokeLayer"
v40@0:8Q16{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}24
v40@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16Q32
v40@0:8@16{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}24
v44@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16B32@?36
v40@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16@?32
{vector<TSUModelCellRect, std::allocator<TSUModelCellRect>>=^{TSUModelCellRect}^{TSUModelCellRect}{__compressed_pair<TSUModelCellRect *, std::allocator<TSUModelCellRect>>=^{TSUModelCellRect}}}16@0:8
{vector<TSUModelCellRect, std::allocator<TSUModelCellRect>>=^{TSUModelCellRect}^{TSUModelCellRect}{__compressed_pair<TSUModelCellRect *, std::allocator<TSUModelCellRect>>=^{TSUModelCellRect}}}36@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16B32
{vector<TSUModelCellRect, std::allocator<TSUModelCellRect>>=^{TSUModelCellRect}^{TSUModelCellRect}{__compressed_pair<TSUModelCellRect *, std::allocator<TSUModelCellRect>>=^{TSUModelCellRect}}}32@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{vector<TSUModelCellRect, std::allocator<TSUModelCellRect>>=^{TSUModelCellRect}^{TSUModelCellRect}{__compressed_pair<TSUModelCellRect *, std::allocator<TSUModelCellRect>>=^{TSUModelCellRect}}}24@0:8@16
B32@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}32@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{unordered_map<unsigned long, TSUModelCellRect, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, TSUModelCellRect>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, TSUModelCellRect>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, TSUModelCellRect>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, TSUModelCellRect>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, TSUModelCellRect>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUModelCellRect>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUModelCellRect>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUModelCellRect>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUModelCellRect>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUModelCellRect>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUModelCellRect>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUModelCellRect>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, TSUModelCellRect>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUModelCellRect>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, TSUModelCellRect>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, TSUModelCellRect>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}
{TSCECellRangeRTree="_rTree"{TSCECellRangeRTree_Int="m_root"^{Node}}}
{TSCEBitGrid="_tiles"{vector<TSCEBitGridTile *, std::allocator<TSCEBitGridTile *>>="__begin_"^^{TSCEBitGridTile}"__end_"^^{TSCEBitGridTile}"__end_cap_"{__compressed_pair<TSCEBitGridTile **, std::allocator<TSCEBitGridTile *>>="__value_"^^{TSCEBitGridTile}}}"_count"Q"_lastTileFoundAtIndex"Q}
v48@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16Q24{CGSize=dd}32
{vector<unsigned long, std::allocator<unsigned long>>=^Q^Q{__compressed_pair<unsigned long *, std::allocator<unsigned long>>=^Q}}16@0:8
@"TSTCellUIDList"
{vector<unsigned long, std::allocator<unsigned long>>="__begin_"^Q"__end_"^Q"__end_cap_"{__compressed_pair<unsigned long *, std::allocator<unsigned long>>="__value_"^Q}}
d24@0:8@"TSDDrawableInfo"16
{CGSize=dd}32@0:8@"TSPData"16@"<NSObject>"24
{?={?=II}{?=II}}24@0:8@16
{?={?=II}{?=II}}40@0:8{?={?=II}{?=II}}16@32
@28@0:8@16i24
v32@0:8{?={?=II}{?=II}}16
{?={?=II}{?=II}}16@0:8
{?={?=II}{?=II}}48@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16
v64@0:8{CGAffineTransform=dddddd}16
{CGPoint=dd}32@0:8{CGPoint=dd}16
{?=II}36@0:8{CGPoint=dd}16B32
{?=II}32@0:8{CGPoint=dd}16
v40@0:8d16^d24^d32
d32@0:8d16d24
v40@0:8^{CGPoint=dd}16^{CGPoint=dd}24^d32
@60@0:8{?={?=II}{?=II}}16^{CGAffineTransform=dddddd}32d40B48d52
@32@0:8^{CGAffineTransform=dddddd}16d24
{CGRect={CGPoint=dd}{CGSize=dd}}40@0:8{?={?=II}{?=II}}16d32
v112@0:8@16^{CGContext=}24{CGPoint=dd}32{CGPoint=dd}48d64d72{CGRect={CGPoint=dd}{CGSize=dd}}80
B52@0:8I16{?={?=II}{?=II}}20B36i40^{CGContext=}44
v44@0:8{?={?=II}{?=II}}16B32^{CGContext=}36
@52@0:8{?={?=II}{?=II}}16S32@36^B44
@56@0:8{?={?=II}{?=II}}16I32@36B44^B48
I24@0:8d16
d24@0:8d16
i24@0:8{?=II}16
{CGPoint=dd}24@0:8{?=II}16
{?={CGPoint=dd}{CGPoint=dd}{CGPoint=dd}{CGPoint=dd}dddd}44@0:8{?={?=II}{?=II}}16i32^d36
v24@0:8^{?={CGPoint=dd}{CGPoint=dd}{CGPoint=dd}{CGPoint=dd}dddd}16
{?={CGPoint=dd}{CGPoint=dd}{CGPoint=dd}{CGPoint=dd}dddd}40@0:8{?={?=II}{?=II}}16^d32
{?={CGPoint=dd}{CGPoint=dd}{CGPoint=dd}{CGPoint=dd}dddd}32@0:8{?={?=II}{?=II}}16
{CGAffineTransform=dddddd}16@0:8
{_opaque_pthread_rwlock_t="__sig"q"__opaque"[192c]}
@"TSTLayoutSpaceBezierPathCache"
@"TSTCoordinateArray"
{CGPoint="x"d"y"d}
{?="topLeft"{?="column"I"row"I}"bottomRight"{?="column"I"row"I}}
{CGAffineTransform="a"d"b"d"c"d"d"d"tx"d"ty"d}
@28@0:8I16I20B24
@24@0:8^v16
B32@0:8d16@24
B40@0:8r^{TSCEInternalCellReference={TSUCellCoord=ISBB}SS}16d24@32
{TSCEInternalCellReference={TSUCellCoord=ISBB}SS}16@0:8
{TSCEInternalCellReference="coordinate"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}"tableID"S"reserved"S}
{unordered_map<TSCEInternalCellReference, std::vector<TSCEInternalCellReference>, std::hash<TSCEInternalCellReference>, std::equal_to<TSCEInternalCellReference>, std::allocator<std::pair<const TSCEInternalCellReference, std::vector<TSCEInternalCellReference>>>>="__table_"{__hash_table<std::__hash_value_type<TSCEInternalCellReference, std::vector<TSCEInternalCellReference>>, std::__unordered_map_hasher<TSCEInternalCellReference, std::__hash_value_type<TSCEInternalCellReference, std::vector<TSCEInternalCellReference>>, std::hash<TSCEInternalCellReference>, std::equal_to<TSCEInternalCellReference>, true>, std::__unordered_map_equal<TSCEInternalCellReference, std::__hash_value_type<TSCEInternalCellReference, std::vector<TSCEInternalCellReference>>, std::equal_to<TSCEInternalCellReference>, std::hash<TSCEInternalCellReference>, true>, std::allocator<std::__hash_value_type<TSCEInternalCellReference, std::vector<TSCEInternalCellReference>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::vector<TSCEInternalCellReference>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::vector<TSCEInternalCellReference>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::vector<TSCEInternalCellReference>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::vector<TSCEInternalCellReference>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::vector<TSCEInternalCellReference>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::vector<TSCEInternalCellReference>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::vector<TSCEInternalCellReference>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::vector<TSCEInternalCellReference>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::vector<TSCEInternalCellReference>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSCEInternalCellReference, std::__hash_value_type<TSCEInternalCellReference, std::vector<TSCEInternalCellReference>>, std::hash<TSCEInternalCellReference>, std::equal_to<TSCEInternalCellReference>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSCEInternalCellReference, std::__hash_value_type<TSCEInternalCellReference, std::vector<TSCEInternalCellReference>>, std::equal_to<TSCEInternalCellReference>, std::hash<TSCEInternalCellReference>, true>>="__value_"f}}}
v40@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24r^{TSKUIDStruct=QQ}32
v32@0:8@16r^{TSKUIDStruct=QQ}24
v32@0:8r^v16r^{TSKUIDStruct=QQ}24
v40@0:8@"TSTCell"16{TSUModelCellCoord={TSUCellCoord=ISBB}}24r^{TSKUIDStruct=QQ}32
v32@0:8@"TSTCellMap"16r^{TSKUIDStruct=QQ}24
v32@0:8@"TSTConcurrentCellMap"16r^{TSKUIDStruct=QQ}24
{vector<TSU::UUIDData<TSP::UUIDData>, std::allocator<TSU::UUIDData<TSP::UUIDData>>>=^v^v{__compressed_pair<TSU::UUIDData<TSP::UUIDData> *, std::allocator<TSU::UUIDData<TSP::UUIDData>>>=^v}}16@0:8
{unordered_set<TSKUIDStruct, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<TSKUIDStruct>>="__table_"{__hash_table<TSKUIDStruct, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<TSKUIDStruct>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *>, std::allocator<std::__hash_node<TSKUIDStruct, void *>>>="__value_"{__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::hash<TSKUIDStruct>>="__value_"Q}"__p3_"{__compressed_pair<float, std::equal_to<TSKUIDStruct>>="__value_"f}}}
@"TSTExpressionNode"
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}48@0:8r^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16^v24B32^B36B44
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}40@0:8r^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16^v24B32B36
@72@0:8@16@24r^{TSKUIDStruct=QQ}32r^{TSUCellCoord=ISBB}40^@48^B56B64B68
@48@0:8@16@24r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}32^@40
r^{TSCEASTNodeArray=*QQB}16@0:8
@49@0:8r^{TSCEASTNodeArray=*QQB}16{TSCEFormulaTranslationFlags=C}24r^{TSKUIDStruct=QQ}25r^{TSKUIDStruct=QQ}33r^{TSKUIDStruct=QQ}41
@25@0:8r^{TSCEASTNodeArray=*QQB}16{TSCEFormulaTranslationFlags=C}24
@24@0:8r^{TSCEASTNodeArray=*QQB}16
@33@0:8{TSCEFormulaCreator=@?}16^{TSCEASTNodeArgInfo=i[3i]{TSKUIDStruct=QQ}{TSUCellCoord=ISBB}}24{TSCEFormulaTranslationFlags=C}32
@25@0:8{TSCEFormulaCreator=@?}16{TSCEFormulaTranslationFlags=C}24
@24@0:8{TSCEFormulaCreator=@?}16
@28@0:8r^v16B24
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}36@0:8^v16B24^B28
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}24@0:8^v16
B48@0:8@16Q24^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}32^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}40
v48@0:8^v16@24r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}32B40B44
{vector<TSCECategoryRef *, std::allocator<TSCECategoryRef *>>=^@^@{__compressed_pair<TSCECategoryRef *__strong *, std::allocator<TSCECategoryRef *>>=^@}}24@0:8@16
@36@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16@24B32
@32@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16@24
@32@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16^B24
@48@0:8@16@24r^{TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}32^B40
@40@0:8@16@24r^{TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}32
@40@0:8r^{TSKUIDStruct=QQ}16r^{TSKUIDStruct=QQ}24r^{TSKUIDStruct=QQ}32
@17@0:8{TSCEFormulaTranslationFlags=C}16
@32@0:8^{TSCEFormulaRewriteContext=@@{TSCEFormulaRewriteContextRecord={TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}{TSKUIDStruct=QQ}{TSUColumnRowOffset=ii}BBBBBBB}}16@?24
v40@0:8^{TSCEFormulaRewriteContext=@@{TSCEFormulaRewriteContextRecord={TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}{TSKUIDStruct=QQ}{TSUColumnRowOffset=ii}BBBBBBB}}16^B24@?32
@24@0:8^{TSCEFormulaRewriteContext=@@{TSCEFormulaRewriteContextRecord={TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}{TSKUIDStruct=QQ}{TSUColumnRowOffset=ii}BBBBBBB}}16
@28@0:8^{TSCEFormulaRewriteContext=@@{TSCEFormulaRewriteContextRecord={TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}{TSKUIDStruct=QQ}{TSUColumnRowOffset=ii}BBBBBBB}}16B24
@32@0:8@16r^{TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}24
@32@0:8@16r^{TSKUIDStruct=QQ}24
@40@0:8r^v16^{TSCEFormulaRewriteContext=@@{TSCEFormulaRewriteContextRecord={TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}{TSKUIDStruct=QQ}{TSUColumnRowOffset=ii}BBBBBBB}}24^B32
@44@0:8r^v16r^v24r^v32B40
@32@0:8r^{TSKUIDStruct=QQ}16^B24
@44@0:8^v16B24^B28*36
@32@0:8@16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24
@60@0:8^v16^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}24^B32^B40^@48I56
@40@0:8^v16^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}24^B32
@28@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16C24
@48@0:8@16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24r^{TSKUIDStruct=QQ}32{TSUColumnRowOffset=ii}40
@24@0:8{TSUColumnRowOffset=ii}16
@32@0:8r^{TSKUIDStruct=QQ}16r^{TSKUIDStruct=QQ}24
C32@0:8^v16@24
{TSCEFormulaTranslationFlags=C}16@0:8
{TSCEFormulaTranslationFlags="_flags"C}
@52@0:8@16@24I32Q36Q44
{TSTCSENodeData=QQ}24@0:8@16
@60@0:8@16@24{TSUCellCoord=ISBB}32B40^v44@52
v40@0:8^{TSCEASTNodeArray=*QQB}16{TSUCellCoord=ISBB}24^v32
@84@0:8q16{_NSRange=QQ}24q40q48{_NSRange=QQ}56B72Q76
@96@0:8q16@24B32q36q44{_NSRange=QQ}52B68Q72Q80Q88
@112@0:8q16{_NSRange=QQ}24B40q44q52{_NSRange=QQ}60B76Q80Q88Q96Q104
@92@0:8q16{_NSRange=QQ}24q40q48{_NSRange=QQ}56B72Q76Q84
B40@0:8@16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24
{TSTCellRegionGathererMap="_cellRangeIndex"Q"_rowRange"{_NSRange="location"Q"length"Q}"_cellRanges"{unordered_map<unsigned long, TSUCellRect, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, TSUCellRect>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, TSUCellRect>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, TSUCellRect>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, TSUCellRect>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, TSUCellRect>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUCellRect>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUCellRect>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUCellRect>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUCellRect>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUCellRect>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUCellRect>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUCellRect>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, TSUCellRect>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSUCellRect>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, TSUCellRect>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, TSUCellRect>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}"_encodedJoinCoordToCandidateIndexMap"{unordered_map<TSTCellRegionGathererKey, unsigned long, std::hash<TSTCellRegionGathererKey>, std::equal_to<TSTCellRegionGathererKey>, std::allocator<std::pair<const TSTCellRegionGathererKey, unsigned long>>>="__table_"{__hash_table<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, std::__unordered_map_hasher<TSTCellRegionGathererKey, std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, std::hash<TSTCellRegionGathererKey>, std::equal_to<TSTCellRegionGathererKey>, true>, std::__unordered_map_equal<TSTCellRegionGathererKey, std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, std::equal_to<TSTCellRegionGathererKey>, std::hash<TSTCellRegionGathererKey>, true>, std::allocator<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSTCellRegionGathererKey, std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, std::hash<TSTCellRegionGathererKey>, std::equal_to<TSTCellRegionGathererKey>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSTCellRegionGathererKey, std::__hash_value_type<TSTCellRegionGathererKey, unsigned long>, std::equal_to<TSTCellRegionGathererKey>, std::hash<TSTCellRegionGathererKey>, true>>="__value_"f}}}}
{unordered_map<TSUCellCoord, TSUCellRect, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, std::allocator<std::pair<const TSUCellCoord, TSUCellRect>>>="__table_"{__hash_table<std::__hash_value_type<TSUCellCoord, TSUCellRect>, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSUCellRect>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSUCellRect>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>, std::allocator<std::__hash_value_type<TSUCellCoord, TSUCellRect>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellRect>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellRect>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellRect>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellRect>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellRect>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellRect>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellRect>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellRect>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellRect>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSUCellRect>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSUCellRect>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>>="__value_"f}}}
^{TSCEASTNodeArray=*QQB}24@0:8Q16
^v24@0:8Q16
^{TSCERegionNode=Q^{TSCERegionNode}^v}
{vector<TSCEASTNodeArray *, std::allocator<TSCEASTNodeArray *>>="__begin_"^^{TSCEASTNodeArray}"__end_"^^{TSCEASTNodeArray}"__end_cap_"{__compressed_pair<TSCEASTNodeArray **, std::allocator<TSCEASTNodeArray *>>="__value_"^^{TSCEASTNodeArray}}}
{vector<TSCECellRef, std::allocator<TSCECellRef>>=^{TSCECellRef}^{TSCECellRef}{__compressed_pair<TSCECellRef *, std::allocator<TSCECellRef>>=^{TSCECellRef}}}32@0:8r^{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}16r^{TSKUIDStruct=QQ}24
{vector<TSCECellRef, std::allocator<TSCECellRef>>=^{TSCECellRef}^{TSCECellRef}{__compressed_pair<TSCECellRef *, std::allocator<TSCECellRef>>=^{TSCECellRef}}}24@0:8@16
@"TSTAggNode"
v56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16^{CGContext=}48
@"TSTTableStyleNetwork"
v28@0:8B16@20
v36@0:8B16{_NSRange=QQ}20
Q32@0:8{_NSRange=QQ}16
B32@0:8{_NSRange=QQ}16
Q32@0:8Q16Q24
v40@0:8{_NSRange=QQ}16Q32
@32@0:8r^{TSKUIDStruct=QQ}16r^{TSUPreserveFlags=C}24
@32@0:8@16r^{TSUCellCoord=ISBB}24
@32@0:8r^{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16r^{TSUCellCoord=ISBB}24
v20@0:8s16
{TSCERelativeCellCoordinate=isBB}16@0:8
{?={TSCERelativeCellCoordinate=isBB}{TSCERelativeCellCoordinate=isBB}}24@0:8r^{TSUCellCoord=ISBB}16
v40@0:8@16r^{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}24r^{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}32
@32@0:8r^{TSUCellCoord=ISBB}16^B24
@24@0:8r^{TSUCellCoord=ISBB}16
@48@0:8@16Q24@32Q40
@80@0:8@16Q24@32@?40@?48@?56@?64@?72
@48@0:8@16Q24@32@?40
Q42@0:8C16C20Q24Q32{TSUViewColumnIndex=S}40
Q28@0:8C16C20B24
@40@0:8@16@24Q32
@32@0:8^{_NSZone=}16@24
@36@0:8Q16@24B32
@52@0:8@16@24d32B40Q44
{vector<TSTCellStyle *, std::allocator<TSTCellStyle *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<TSTCellStyle *__strong *, std::allocator<TSTCellStyle *>>="__value_"^@}}
{vector<TSWPParagraphStyle *, std::allocator<TSWPParagraphStyle *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<TSWPParagraphStyle *__strong *, std::allocator<TSWPParagraphStyle *>>="__value_"^@}}
@96@0:8r^{TSKUIDStruct=QQ}16r^{TSKUIDStruct=QQ}24r^{TSKUIDStruct=QQ}32r^{TSKUIDStruct=QQ}40r^{TSKUIDStruct=QQ}48r^{TSKUIDStruct=QQ}56r^{TSKUIDStruct=QQ}64r^{TSKUIDStruct=QQ}72r^{TSKUIDStruct=QQ}80r^{TSKUIDStruct=QQ}88
{TSKUIDStructMap="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
Q24@0:8i16i20
v40@0:8Q16^i24^i32
v36@0:8@16@24B32
v56@0:8{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}16{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}32r^{TSKUIDStruct=QQ}48
i40@0:8{TSKUIDStruct=QQ}16@32
i68@0:8{TSKUIDStruct=QQ}16@32@40{TSKUIDStruct=QQ}48S64
@24@0:8[16C]16
^{TSCETableResolver=^^?}24@0:8r^{TSKUIDStruct=QQ}16
^{TSCETableResolver=^^?}20@0:8S16
^{TSCETableResolver=^^?}24@0:8@16
{TSKUIDStruct=QQ}40@0:8{TSKUIDStruct=QQ}16I32B36
{TSCERecalculationState=C}41@0:8^v16@24r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}32{TSCERecalculationState=C}40
v32@0:8@16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24
{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}32@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16^B24
{vector<TSUCellCoord, std::allocator<TSUCellCoord>>=^{TSUCellCoord}^{TSUCellCoord}{__compressed_pair<TSUCellCoord *, std::allocator<TSUCellCoord>>=^{TSUCellCoord}}}32@0:8r^{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16r^{TSKUIDStruct=QQ}24
{vector<TSUCellCoord, std::allocator<TSUCellCoord>>=^{TSUCellCoord}^{TSUCellCoord}{__compressed_pair<TSUCellCoord *, std::allocator<TSUCellCoord>>=^{TSUCellCoord}}}36@0:8r^{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16r^{TSKUIDStruct=QQ}24B32
{vector<TSUCellCoord, std::allocator<TSUCellCoord>>=^{TSUCellCoord}^{TSUCellCoord}{__compressed_pair<TSUCellCoord *, std::allocator<TSUCellCoord>>=^{TSUCellCoord}}}32@0:8r^{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}16r^{TSKUIDStruct=QQ}24
{TSCECellCoordSet={map<unsigned short, TSUIndexSet, std::less<unsigned short>, std::allocator<std::pair<const unsigned short, TSUIndexSet>>>={__tree<std::__value_type<unsigned short, TSUIndexSet>, std::__map_value_compare<unsigned short, std::__value_type<unsigned short, TSUIndexSet>, std::less<unsigned short>, true>, std::allocator<std::__value_type<unsigned short, TSUIndexSet>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned short, TSUIndexSet>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<unsigned short, std::__value_type<unsigned short, TSUIndexSet>, std::less<unsigned short>, true>>=Q}}}}24@0:8r^{TSKUIDStruct=QQ}16
{TSKUIDStruct=QQ}24@0:8r^{TSKUIDStruct=QQ}16
v36@0:8{TSKUIDStruct=QQ}16B32
v56@0:8{_NSRange=QQ}16r^{TSKUIDStruct=QQ}32{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}40
v72@0:8{_NSRange=QQ}16r^{TSKUIDStruct=QQ}32{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}40{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}56
v72@0:8{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}16r^{TSKUIDStruct=QQ}32{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}40{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}56
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}32@0:8@16^v24
{TSCEInternalCellRefSet={unordered_map<unsigned short, TSCECellCoordSet, std::hash<unsigned short>, std::equal_to<unsigned short>, std::allocator<std::pair<const unsigned short, TSCECellCoordSet>>>={__hash_table<std::__hash_value_type<unsigned short, TSCECellCoordSet>, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, TSCECellCoordSet>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, TSCECellCoordSet>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>, std::allocator<std::__hash_value_type<unsigned short, TSCECellCoordSet>>>={unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *>>>={__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSCECellCoordSet>, void *> *>=^v}}{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, TSCECellCoordSet>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>>=Q}{__compressed_pair<float, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, TSCECellCoordSet>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>>=f}}}}16@0:8
B24@0:8r^{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16
{TSCEReferenceSet=^^?^{TSCEDependencyTracker}{unordered_map<TSKUIDStruct, std::unordered_set<TSUCellCoord>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, std::unordered_set<TSUCellCoord>>>>={__hash_table<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>>>={unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *>>>={__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *>=^v}}{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>=Q}{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>=f}}}{map<TSKUIDStruct, std::unordered_set<TSCERangeCoordinate>, std::less<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, std::unordered_set<TSCERangeCoordinate>>>>={__tree<std::__value_type<TSKUIDStruct, std::unordered_set<TSCERangeCoordinate>>, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, std::unordered_set<TSCERangeCoordinate>>, std::less<TSKUIDStruct>, true>, std::allocator<std::__value_type<TSKUIDStruct, std::unordered_set<TSCERangeCoordinate>>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSKUIDStruct, std::unordered_set<TSCERangeCoordinate>>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, std::unordered_set<TSCERangeCoordinate>>, std::less<TSKUIDStruct>, true>>=Q}}}^v^v^v^v^v@^v}24@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16
{TSCECellRefSet={map<TSKUIDStruct, TSCECellCoordSet, std::less<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSCECellCoordSet>>>={__tree<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>, std::allocator<std::__value_type<TSKUIDStruct, TSCECellCoordSet>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>>=Q}}}}24@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16
{TSCEReferenceSet=^^?^{TSCEDependencyTracker}{unordered_map<TSKUIDStruct, std::unordered_set<TSUCellCoord>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, std::unordered_set<TSUCellCoord>>>>={__hash_table<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>>>={unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *>>>={__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, void *> *>=^v}}{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>=Q}{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_set<TSUCellCoord>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>=f}}}{map<TSKUIDStruct, std::unordered_set<TSCERangeCoordinate>, std::less<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, std::unordered_set<TSCERangeCoordinate>>>>={__tree<std::__value_type<TSKUIDStruct, std::unordered_set<TSCERangeCoordinate>>, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, std::unordered_set<TSCERangeCoordinate>>, std::less<TSKUIDStruct>, true>, std::allocator<std::__value_type<TSKUIDStruct, std::unordered_set<TSCERangeCoordinate>>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSKUIDStruct, std::unordered_set<TSCERangeCoordinate>>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, std::unordered_set<TSCERangeCoordinate>>, std::less<TSKUIDStruct>, true>>=Q}}}^v^v^v^v^v@^v}16@0:8
C24@0:8@16
{vector<TSCECellRef, std::allocator<TSCECellRef>>=^{TSCECellRef}^{TSCECellRef}{__compressed_pair<TSCECellRef *, std::allocator<TSCECellRef>>=^{TSCECellRef}}}32@0:8@16r^{TSKUIDStruct=QQ}24
{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}44@0:8@16r^{TSKUIDStruct=QQ}24C32^@36
@44@0:8@16r^{TSKUIDStruct=QQ}24C32^@36
{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}24@0:8@16
@28@0:8C16r^{TSKUIDStruct=QQ}20
@36@0:8C16r^v20r^{TSKUIDStruct=QQ}28
C24@0:8C16C20
{vector<TSCEGroupingColumnChange, std::allocator<TSCEGroupingColumnChange>>="__begin_"^{TSCEGroupingColumnChange}"__end_"^{TSCEGroupingColumnChange}"__end_cap_"{__compressed_pair<TSCEGroupingColumnChange *, std::allocator<TSCEGroupingColumnChange>>="__value_"^{TSCEGroupingColumnChange}}}
@"TSTTableControlCellSelection"
@28@0:8I16^B20
@"TSTTableDataListItemCache"
@"TSUIntegerKeyDictionary"
@32@0:8r^{TSKUIDStruct=QQ}16^v24
{unordered_set<TSKUIDStruct, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<TSKUIDStruct>>={__hash_table<TSKUIDStruct, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<TSKUIDStruct>>={unique_ptr<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *>, std::allocator<std::__hash_node<TSKUIDStruct, void *>>>={__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *>=^v}}{__compressed_pair<unsigned long, std::hash<TSKUIDStruct>>=Q}{__compressed_pair<float, std::equal_to<TSKUIDStruct>>=f}}}16@0:8
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}32@0:8r^{TSKUIDStruct=QQ}16@24
{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16
{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}32@0:8@16@24
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16
B48@0:8@16@24r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}32^@40
@40@0:8@16@24r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}32
@"TSCETableTransposedInfo"
@"TSCEFormulaRewriteInfo_RowColumnInfo"
@"TSCEFormulaRewrite_RegionMovedInfo"
@"TSCEFormulaRewrite_RegionMergedInfo"
@"TSCEFormulaRewrite_MergeOriginMovedInfo"
@"TSKShuffleMapping"
@"TSCERewriteTableUIDInfo"
@"TSCERewriteGroupNodeUIDInfo"
@"TSCEGroupByChange"
@"TSCEFormulasForUndo"
{unordered_map<TSCECellRef, TSTConditionalStyleSet *, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, std::allocator<std::pair<const TSCECellRef, TSTConditionalStyleSet *>>>="__table_"{__hash_table<std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, std::__unordered_map_hasher<TSCECellRef, std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, true>, std::__unordered_map_equal<TSCECellRef, std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, std::equal_to<TSCECellRef>, std::hash<TSCECellRef>, true>, std::allocator<std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSCECellRef, std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSCECellRef, std::__hash_value_type<TSCECellRef, TSTConditionalStyleSet *>, std::equal_to<TSCECellRef>, std::hash<TSCECellRef>, true>>="__value_"f}}}
{unordered_map<TSCECellRef, TSUCellRect, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, std::allocator<std::pair<const TSCECellRef, TSUCellRect>>>="__table_"{__hash_table<std::__hash_value_type<TSCECellRef, TSUCellRect>, std::__unordered_map_hasher<TSCECellRef, std::__hash_value_type<TSCECellRef, TSUCellRect>, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, true>, std::__unordered_map_equal<TSCECellRef, std::__hash_value_type<TSCECellRef, TSUCellRect>, std::equal_to<TSCECellRef>, std::hash<TSCECellRef>, true>, std::allocator<std::__hash_value_type<TSCECellRef, TSUCellRect>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSUCellRect>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSUCellRect>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSUCellRect>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSUCellRect>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSUCellRect>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSUCellRect>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSUCellRect>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSCECellRef, TSUCellRect>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSUCellRect>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSCECellRef, std::__hash_value_type<TSCECellRef, TSUCellRect>, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSCECellRef, std::__hash_value_type<TSCECellRef, TSUCellRect>, std::equal_to<TSCECellRef>, std::hash<TSCECellRef>, true>>="__value_"f}}}
{unordered_map<TSKUIDStruct, TSCECoordMapper *, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSCECoordMapper *>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCECoordMapper *>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
@"TSCEFormulaRewriteSpec"
@44@0:8I16@20@28@36
@"TSDStroke"
@24@0:8^{TSCEParser=@^{TSCELexer}^{TSCEASTNodeArray}^v@{TSKUIDStruct=QQ}{TSUCellCoord=ISBB}BB@}16
v24@0:8^{TSCEASTNodeArray=*QQB}16
@44@0:8^{TSCEASTNodeArray=*QQB}16@24B32^{TSCEParser=@^{TSCELexer}^{TSCEASTNodeArray}^v@{TSKUIDStruct=QQ}{TSUCellCoord=ISBB}BB@}36
^{TSCEASTNodeArray=*QQB}24@0:8^{TSCEParser=@^{TSCELexer}^{TSCEASTNodeArray}^v@{TSKUIDStruct=QQ}{TSUCellCoord=ISBB}BB@}16
^{TSCEASTNodeArray=*QQB}40@0:8^{TSCEParser=@^{TSCELexer}^{TSCEASTNodeArray}^v@{TSKUIDStruct=QQ}{TSUCellCoord=ISBB}BB@}16@24@32
@"TSCETablesByNameDistributor"
@"<TSTCellIteratorData>"
v32@0:8^{TSCEASTNodeArray=*QQB}16{TSUCellCoord=ISBB}24
v52@0:8@16C24@28@36@44
v48@0:8@16Q24@32^v40
v36@0:8@16@24I32
B24@0:8^v16
@32@0:8^v16^@24
@48@0:8@16@24^v32^@40
@40@0:8@16^v24^@32
@"TSTWPTokenAttachment"
i36@0:8Q16i24@28
i32@0:8Q16@24
Q44@0:8Q16Q24i32@36
@48@0:8@16@24{TSUModelCellCoord={TSUCellCoord=ISBB}}32@40
@60@0:8@16@24{TSUViewCellCoord={TSUCellCoord=ISBB}}32@40r^{TSKUIDStruct=QQ}48B56
@60@0:8@16@24{TSUModelCellCoord={TSUCellCoord=ISBB}}32@40r^{TSKUIDStruct=QQ}48B56
@56@0:8@16@24{TSUViewCellCoord={TSUCellCoord=ISBB}}32@40r^{TSKUIDStruct=QQ}48
@56@0:8@16@24{TSUModelCellCoord={TSUCellCoord=ISBB}}32@40r^{TSKUIDStruct=QQ}48
@40@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24@32
{TSUModelCellCoord="_coord"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}}
v32@0:8I16I20@?24
@24@0:8B16B20
@"TSTPopUpMenuModel"
v32@0:8d16@24
{TSCEFunctionArgSpec=ciCi{unordered_set<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>={__hash_table<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>={unique_ptr<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>, std::allocator<std::__hash_node<TSCEArgumentType, void *>>>={__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>=^v}}{__compressed_pair<unsigned long, std::hash<TSCEArgumentType>>=Q}{__compressed_pair<float, std::equal_to<TSCEArgumentType>>=f}}}{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}s@^{TSCEArgumentAccessor}ddsBBBBBBB}28@0:8c16i20C24
{TSCEFunctionArgSpec=ciCi{unordered_set<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>={__hash_table<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>={unique_ptr<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>, std::allocator<std::__hash_node<TSCEArgumentType, void *>>>={__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>=^v}}{__compressed_pair<unsigned long, std::hash<TSCEArgumentType>>=Q}{__compressed_pair<float, std::equal_to<TSCEArgumentType>>=f}}}{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}s@^{TSCEArgumentAccessor}ddsBBBBBBB}32@0:8c16i20C24i28
{TSCEFunctionArgSpec=ciCi{unordered_set<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>={__hash_table<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>={unique_ptr<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>, std::allocator<std::__hash_node<TSCEArgumentType, void *>>>={__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>=^v}}{__compressed_pair<unsigned long, std::hash<TSCEArgumentType>>=Q}{__compressed_pair<float, std::equal_to<TSCEArgumentType>>=f}}}{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}s@^{TSCEArgumentAccessor}ddsBBBBBBB}44@0:8c16i20C24r^v28B36B40
{TSCEFunctionArgSpec=ciCi{unordered_set<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>={__hash_table<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>={unique_ptr<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>, std::allocator<std::__hash_node<TSCEArgumentType, void *>>>={__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>=^v}}{__compressed_pair<unsigned long, std::hash<TSCEArgumentType>>=Q}{__compressed_pair<float, std::equal_to<TSCEArgumentType>>=f}}}{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}s@^{TSCEArgumentAccessor}ddsBBBBBBB}40@0:8c16i20C24r^v28s36
{TSCEFunctionArgSpec=ciCi{unordered_set<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>={__hash_table<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>={unique_ptr<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>, std::allocator<std::__hash_node<TSCEArgumentType, void *>>>={__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>=^v}}{__compressed_pair<unsigned long, std::hash<TSCEArgumentType>>=Q}{__compressed_pair<float, std::equal_to<TSCEArgumentType>>=f}}}{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}s@^{TSCEArgumentAccessor}ddsBBBBBBB}44@0:8c16i20C24i28r^v32B40
{TSCEFunctionArgSpec=ciCi{unordered_set<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>={__hash_table<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>={unique_ptr<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>, std::allocator<std::__hash_node<TSCEArgumentType, void *>>>={__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>=^v}}{__compressed_pair<unsigned long, std::hash<TSCEArgumentType>>=Q}{__compressed_pair<float, std::equal_to<TSCEArgumentType>>=f}}}{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}s@^{TSCEArgumentAccessor}ddsBBBBBBB}68@0:8c16i20C24d28B36d40B48r^v52B60B64
{TSCEFunctionArgSpec=ciCi{unordered_set<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>={__hash_table<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>={unique_ptr<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>, std::allocator<std::__hash_node<TSCEArgumentType, void *>>>={__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>=^v}}{__compressed_pair<unsigned long, std::hash<TSCEArgumentType>>=Q}{__compressed_pair<float, std::equal_to<TSCEArgumentType>>=f}}}{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}s@^{TSCEArgumentAccessor}ddsBBBBBBB}96@0:8c16i20C24i28d32B40d44B52B56r^v60B68B72r^v76s84B88B92
{TSCEFunctionArgSpec="_argumentType"c"_accessorMode"i"_rangeContext"C"_argumentContext"i"_disallowedTypes"{unordered_set<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>="__table_"{__hash_table<TSCEArgumentType, std::hash<TSCEArgumentType>, std::equal_to<TSCEArgumentType>, std::allocator<TSCEArgumentType>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>, std::allocator<std::__hash_node<TSCEArgumentType, void *>>>="__value_"{__hash_node_base<std::__hash_node<TSCEArgumentType, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::hash<TSCEArgumentType>>="__value_"Q}"__p3_"{__compressed_pair<float, std::equal_to<TSCEArgumentType>>="__value_"f}}}"_modeValues"{vector<TSCEValue, std::allocator<TSCEValue>>="__begin_"^{TSCEValue}"__end_"^{TSCEValue}"__end_cap_"{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>="__value_"^{TSCEValue}}}"_defaultModeIndex"s"_functionSpec"@"TSCEFunctionSpec""_argAccessor"^{TSCEArgumentAccessor}"_minValue"d"_maxValue"d"_index"s"_minInclusive"B"_maxInclusive"B"_disallowDuration"B"_disallowCurrency"B"_isInteger"B"_forceArrayMode"B"_referenceForGeometryOnly"B}
@52@0:8@16S24@28Q36Q44
{_NSRange=QQ}24@0:8@16
{_NSRange=QQ}32@0:8@16q24
{_NSRange=QQ}40@0:8@16q24o^q32
{_NSRange=QQ}48@0:8@16Q24{_NSRange=QQ}32
@48@0:8@16Q24{_NSRange=QQ}32
Q48@0:8@16Q24{_NSRange=QQ}32
@56@0:8@16Q24{_NSRange=QQ}32@48
@"NSRegularExpression"
@56@0:8@16r^{TSUDecimal={?=[2Q]}}24@32Q40Q48
@56@0:8@16@24@32Q40Q48
v32@0:8r^{TSUDecimal={?=[2Q]}}16@24
{TSUDecimal={?=[2Q]}}16@0:8
{TSUDecimal="_decimal"{?="w"[2Q]}}
B24@0:8I16I20
B24@0:8C16I20
@32@0:8^{?={?=Cb8b16b16b16b16b16}[0C]}16@24
v32@0:8^{?={?=Cb8b16b16b16b16b16}[0C]}16@24
v36@0:8^{?={?=Cb8b16b16b16b16b16}[0C]}16@24B32
v40@0:8@16B24B28B32B36
v24@0:8S16B20
v28@0:8B16I20B24
@28@0:8I16B20B24
@"NSObject"
@"TSTCellBorder"
@"TSKFormat"
@"TSDCommentStorage"
@"TSTImportWarningSet"
@"TSTCellSpec"
@40@0:8@16@24r^v32
@28@0:8^{_NSZone=}16B24
v32@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24
v40@0:8r^v16r^v24r^v32
{TSCECellCoordSet={map<unsigned short, TSUIndexSet, std::less<unsigned short>, std::allocator<std::pair<const unsigned short, TSUIndexSet>>>={__tree<std::__value_type<unsigned short, TSUIndexSet>, std::__map_value_compare<unsigned short, std::__value_type<unsigned short, TSUIndexSet>, std::less<unsigned short>, true>, std::allocator<std::__value_type<unsigned short, TSUIndexSet>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned short, TSUIndexSet>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<unsigned short, std::__value_type<unsigned short, TSUIndexSet>, std::less<unsigned short>, true>>=Q}}}}32@0:8@16@?24
{unordered_map<TSUCellCoord, TSTCell *, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, std::allocator<std::pair<const TSUCellCoord, TSTCell *>>>="__table_"{__hash_table<std::__hash_value_type<TSUCellCoord, TSTCell *>, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTCell *>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTCell *>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>, std::allocator<std::__hash_value_type<TSUCellCoord, TSTCell *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTCell *>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTCell *>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>>="__value_"f}}}
{unordered_map<TSKUIDStructCoord, TSTCell *, std::hash<TSKUIDStructCoord>, std::equal_to<TSKUIDStructCoord>, std::allocator<std::pair<const TSKUIDStructCoord, TSTCell *>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, std::__unordered_map_hasher<TSKUIDStructCoord, std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, std::hash<TSKUIDStructCoord>, std::equal_to<TSKUIDStructCoord>, true>, std::__unordered_map_equal<TSKUIDStructCoord, std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, std::equal_to<TSKUIDStructCoord>, std::hash<TSKUIDStructCoord>, true>, std::allocator<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStructCoord, std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, std::hash<TSKUIDStructCoord>, std::equal_to<TSKUIDStructCoord>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStructCoord, std::__hash_value_type<TSKUIDStructCoord, TSTCell *>, std::equal_to<TSKUIDStructCoord>, std::hash<TSKUIDStructCoord>, true>>="__value_"f}}}
{pair<TSTCell *, TSKUIDStructCoord>=@{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}}16@0:8
r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16@0:8
@"TSTCellMap"
@"TSTCellUIDIterator"
d36@0:8I16{TSTSimpleRange=qQ}20
v36@0:8I16^d20^d28
v36@0:8I16@20@28
{_opaque_pthread_rwlock_t=q[192c]}16@0:8
v216@0:8{_opaque_pthread_rwlock_t=q[192c]}16
{vector<TSTStrokeWidthCacheEntry, std::allocator<TSTStrokeWidthCacheEntry>>="__begin_"^{TSTStrokeWidthCacheEntry}"__end_"^{TSTStrokeWidthCacheEntry}"__end_cap_"{__compressed_pair<TSTStrokeWidthCacheEntry *, std::allocator<TSTStrokeWidthCacheEntry>>="__value_"^{TSTStrokeWidthCacheEntry}}}
@40@0:8@16r^v24r^v32
v28@0:8r^v16I24
v28@0:8r^v16B24
{unordered_map<TSKUIDStruct, unsigned short, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, unsigned short>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, unsigned short>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned short>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned short>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, unsigned short>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned short>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned short>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned short>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned short>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned short>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned short>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned short>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned short>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned short>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned short>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned short>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
{unordered_map<TSKUIDStruct, unsigned int, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, unsigned int>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, unsigned int>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned int>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned int>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, unsigned int>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned int>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned int>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned int>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned int>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned int>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned int>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned int>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned int>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
@44@0:8@16S24@28@36
{TSKUIDStruct=QQ}36@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24B32
@"<TSCEFormulaReplacing>"
@40@0:8{TSUCellCoord=ISBB}16@24@32
@"TSTAccumulator"
{TSCECellCoordSet="_rowsPerColumn"{map<unsigned short, TSUIndexSet, std::less<unsigned short>, std::allocator<std::pair<const unsigned short, TSUIndexSet>>>="__tree_"{__tree<std::__value_type<unsigned short, TSUIndexSet>, std::__map_value_compare<unsigned short, std::__value_type<unsigned short, TSUIndexSet>, std::less<unsigned short>, true>, std::allocator<std::__value_type<unsigned short, TSUIndexSet>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned short, TSUIndexSet>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<unsigned short, std::__value_type<unsigned short, TSUIndexSet>, std::less<unsigned short>, true>>="__value_"Q}}}}
@"TSTAggregator"
@28@0:8@16S24
s16@0:8
@"TSTFunctionEndNode"
B24@0:8q16
@"NSMutableSet"
@"TSCERemoteDataValueMap"
@"TSUIntToIntDictionary"
C24@0:8Q16
v40@0:8{TSKUIDStruct=QQ}16@32
v24@0:8@"TSTGroupNode"16
v40@0:8{TSKUIDStruct=QQ}16@"TSTGroupNode"32
v32@0:8r^v16r^v24
i40@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24@32
i26@0:8{TSUModelColumnIndex=S}16@18
v32@0:8C16r^{TSKUIDStruct=QQ}20C28
@36@0:8C16{TSUModelCellCoord={TSUCellCoord=ISBB}}20^B28
C32@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16^B24
v28@0:8Q16C24
Q20@0:8C16
@"TSTSummaryCellVendor"
@"TSTCategoryAggregateFormulaOwner"
@"TSTTableGroupSortOrderUID"
{vector<double, std::allocator<double>>="__begin_"^d"__end_"^d"__end_cap_"{__compressed_pair<double *, std::allocator<double>>="__value_"^d}}
{vector<int, std::allocator<int>>="__begin_"^i"__end_"^i"__end_cap_"{__compressed_pair<int *, std::allocator<int>>="__value_"^i}}
{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24@0:8r^{TSKUIDStruct=QQ}16
@60@0:8@16{TSTSimpleRange=qQ}24i40@44@52
{TSTSimpleRange=qQ}16@0:8
v32@0:8{TSTSimpleRange=qQ}16
@"<TSTStrokeLayerStrokeAndRange>"
{TSTSimpleRange="origin"q"length"Q}
@48@0:8q16@24^@32@40
{?=d{TSTSimpleRange=qQ}BQ}24@0:8q16
{?=d{TSTSimpleRange=qQ}BQ}56@0:8{?=d{TSTSimpleRange=qQ}BQ}16
v44@0:8@16{TSTSimpleRange=qQ}24i40
@40@0:8I16@20@28B36
{_NSRange=QQ}28@0:8{TSUCellCoord=ISBB}16B24
@112@0:8{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16
@32@0:8r^{TSCESpanningRangeRef={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}C}16@24
@"NSLock"
@24@0:8d16
@28@0:8d16C24
{TSCENumberValue=^^?{TSUDecimal={?=[2Q]}}{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}SB}16@0:8
B40@0:8q16q24q32
B32@0:8r^{TSUDecimal={?=[2Q]}}16@24
@24@0:8r^{TSCERelativeCellRef={TSCERelativeCellCoordinate=isBB}{TSKUIDStruct=QQ}b1b1b1b1}16
r^{TSCERelativeCellRef={TSCERelativeCellCoordinate=isBB}{TSKUIDStruct=QQ}b1b1b1b1}16@0:8
v24@0:8r^{TSCERelativeCellRef={TSCERelativeCellCoordinate=isBB}{TSKUIDStruct=QQ}b1b1b1b1}16
@24@0:8r^{TSCECrossTableReference={TSKUIDStruct=QQ}{TSCERelativeCellCoordinate=isBB}}16
{TSCECrossTableReference={TSKUIDStruct=QQ}{TSCERelativeCellCoordinate=isBB}}16@0:8
@32@0:8r^v16r^{TSUPreserveFlags=C}24
{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
v32@0:8r^v16r^{TSUPreserveFlags=C}24
v32@0:8r^v16B24B28
B32@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24
@56@0:8^{TSCEFormulaRewriteContext=@@{TSCEFormulaRewriteContextRecord={TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}{TSKUIDStruct=QQ}{TSUColumnRowOffset=ii}BBBBBBB}}16q24B32B36^{TSCEUidCellRef={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}40@?48
{TSCEFormulaCreator=@?}16@0:8
{TSCEFormulaCreator=@?}24@0:8B16B20
v24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
@"TSCECategoryRef"
@"TSCEViewTractRef"
{RefTypeHolder<TSCECellRef, 0>="_ref"{TSCECellRef="coordinate"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}"_tableUID"{TSKUIDStruct="_lower"Q"_upper"Q}}}
@"TSTFormulaPredArgData"
@"TSCEUndoTractList"
{TSCERelativeCellRef="relativeCoord"{TSCERelativeCellCoordinate="row"i"column"s"_preserveRow"B"_preserveColumn"B}"tableUID"{TSKUIDStruct="_lower"Q"_upper"Q}"preserveColumn"b1"preserveRow"b1"isSpanningColumn"b1"isSpanningRow"b1}
@40@0:8{TSUCellCoord=ISBB}16{TSKUIDStruct=QQ}24
{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16@0:8
{TSCECellRef="coordinate"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}"_tableUID"{TSKUIDStruct="_lower"Q"_upper"Q}}
@48@0:8{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}16{TSKUIDStruct=QQ}32
@40@0:8{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}16@32
@40@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16@32
{TSCERangeRef="range"{TSCERangeCoordinate="_topLeft"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}"_bottomRight"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}}"_tableUID"{TSKUIDStruct="_lower"Q"_upper"Q}}
@44@0:8@16B24Q28Q36
@32@0:8r^v16r^v24
v36@0:8@16B24@28
I24@0:8r^{TSKUIDStruct=QQ}16
S24@0:8r^{TSKUIDStruct=QQ}16
{unordered_map<unsigned int, TSKUIDStruct, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<const unsigned int, TSKUIDStruct>>>="__table_"{__hash_table<std::__hash_value_type<unsigned int, TSKUIDStruct>, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, TSKUIDStruct>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, TSKUIDStruct>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>, std::allocator<std::__hash_value_type<unsigned int, TSKUIDStruct>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSKUIDStruct>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSKUIDStruct>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSKUIDStruct>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSKUIDStruct>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSKUIDStruct>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSKUIDStruct>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSKUIDStruct>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned int, TSKUIDStruct>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSKUIDStruct>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, TSKUIDStruct>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, TSKUIDStruct>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>>="__value_"f}}}
@44@0:8{_NSRange=QQ}16r^v32I40
@36@0:8r^{TSKUIDStruct=QQ}16r^v24B32
@60@0:8r^{TSKUIDStruct=QQ}16r^{TSKUIDStruct=QQ}24r^{TSKUIDStruct=QQ}32r^v40r^v48B56
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}52@0:8{_NSRange=QQ}16@32B40@44
v44@0:8@16@24B32@36
I24@0:8I16B20
{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}28@0:8I16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}20
{vector<TSCERangeCoordinate, std::allocator<TSCERangeCoordinate>>=^{TSCERangeCoordinate}^{TSCERangeCoordinate}{__compressed_pair<TSCERangeCoordinate *, std::allocator<TSCERangeCoordinate>>=^{TSCERangeCoordinate}}}16@0:8
@"TSCEFormulaRewrite_Uids"
{TSCERangeCoordinate="_topLeft"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}"_bottomRight"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}}
@56@0:8@16@24I32I36Q40Q48
{TSCEGridDimensions="width"I"height"I}
B40@0:8r^{TSKUIDStruct=QQ}16@24@32
B32@0:8r^{TSKUIDStruct=QQ}16@24
@64@0:8@16{TSUCellCoord=ISBB}24{CGRect={CGPoint=dd}{CGSize=dd}}32
{vector<TSKUIDStructTract, std::allocator<TSKUIDStructTract>>=^{TSKUIDStructTract}^{TSKUIDStructTract}{__compressed_pair<TSKUIDStructTract *, std::allocator<TSKUIDStructTract>>=^{TSKUIDStructTract}}}24@0:8Q16
{vector<TSKUIDStructTract, std::allocator<TSKUIDStructTract>>="__begin_"^{TSKUIDStructTract}"__end_"^{TSKUIDStructTract}"__end_cap_"{__compressed_pair<TSKUIDStructTract *, std::allocator<TSKUIDStructTract>>="__value_"^{TSKUIDStructTract}}}
@44@0:8r^v16C24@28r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}36
@52@0:8r^v16{TSKUIDStruct=QQ}24C40@44
{RefTypeHolder<TSCERangeRef, 1>={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}32@0:8r^v16@24
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}36@0:8r^v16@24C32
B32@0:8r^{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16@24
C32@0:8r^{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16@24
@68@0:8@16@24@32@40r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}48@56B64
@60@0:8@16@24@32r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}40@48B56
@64@0:8@16@24r^v32C40r^v44@52B60
@64@0:8@16@24r^v32C40r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}44@52B60
@56@0:8@16@24@32r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}40@48
@28@0:8@16C24
v44@0:8^{TSCEASTNodeArray=*QQB}16{TSUCellCoord=ISBB}24C32{TSUCellCoord=ISBB}36
v40@0:8{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16
@"TSTUIDRectRef"
@"TSTReferenceColorHelper"
^{CGPath=}24@0:8d16
v76@0:8d16^{CGContext=}24{CGRect={CGPoint=dd}{CGSize=dd}}32B64^{CGColor=}68
v80@0:8d16^{CGContext=}24{CGRect={CGPoint=dd}{CGSize=dd}}32B64^{CGColor=}68B76
@"<TSKPencilAnnotationStorage>"16@0:8
@"TSDPencilAnnotationStorage"
v32@0:8r^{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16r^{TSUCellCoord=ISBB}24
B32@0:8r^{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16r^{TSUCellCoord=ISBB}24
v32@0:8r^{TSUCellCoord=ISBB}16@?24
{map<TSUCellCoord, std::set<TSUCellRect>, std::less<TSUCellCoord>, std::allocator<std::pair<const TSUCellCoord, std::set<TSUCellRect>>>>="__tree_"{__tree<std::__value_type<TSUCellCoord, std::set<TSUCellRect>>, std::__map_value_compare<TSUCellCoord, std::__value_type<TSUCellCoord, std::set<TSUCellRect>>, std::less<TSUCellCoord>, true>, std::allocator<std::__value_type<TSUCellCoord, std::set<TSUCellRect>>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSUCellCoord, std::set<TSUCellRect>>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<TSUCellCoord, std::__value_type<TSUCellCoord, std::set<TSUCellRect>>, std::less<TSUCellCoord>, true>>="__value_"Q}}}
@56@0:8@16d24@32Q40Q48
@"TSKDurationFormat"
@20@0:8c16
@28@0:8s16@20
@32@0:8s16s20@24
^v24@0:8S16i20
@48@0:8@16^v24Q32Q40
q20@0:8i16
@28@0:8d16i24
@64@0:8q16q24q32q40q48q56
v48@0:8{_NSRange=QQ}16Q32@?40
@"<TSTTableStrokeProviding>"
@"<TSTTableHiddenRowColumnProviding><TSTTableInternalGeometryProviding>"
@28@0:8r^v16c24
@32@0:8r^v16c24B28
@40@0:8r^v16c24B28r^{TSCEGridDimensions=II}32
@"TSCEValueGrid"
v28@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16C24
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}20@0:8C16
{unordered_map<TSCECategoryLevel, TSKUIDStructCoord, std::hash<TSCECategoryLevel>, std::equal_to<TSCECategoryLevel>, std::allocator<std::pair<const TSCECategoryLevel, TSKUIDStructCoord>>>="__table_"{__hash_table<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, std::__unordered_map_hasher<TSCECategoryLevel, std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, std::hash<TSCECategoryLevel>, std::equal_to<TSCECategoryLevel>, true>, std::__unordered_map_equal<TSCECategoryLevel, std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, std::equal_to<TSCECategoryLevel>, std::hash<TSCECategoryLevel>, true>, std::allocator<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSCECategoryLevel, std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, std::hash<TSCECategoryLevel>, std::equal_to<TSCECategoryLevel>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSCECategoryLevel, std::__hash_value_type<TSCECategoryLevel, TSKUIDStructCoord>, std::equal_to<TSCECategoryLevel>, std::hash<TSCECategoryLevel>, true>>="__value_"f}}}
v36@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16@24C32
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}28@0:8@16C24
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}36@0:8Q16@24C32
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}52@0:8^{TSTRunningAggregate={TSKUIDStruct=QQ}BB}16@24r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}32B40@44
{vector<TSCECellValue *, std::allocator<TSCECellValue *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<TSCECellValue *__strong *, std::allocator<TSCECellValue *>>="__value_"^@}}
{vector<TSTUidCoordsPerGroupValueTuple *, std::allocator<TSTUidCoordsPerGroupValueTuple *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<TSTUidCoordsPerGroupValueTuple *__strong *, std::allocator<TSTUidCoordsPerGroupValueTuple *>>="__value_"^@}}
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}32@0:8S16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}20B28
@"TSTGroupBySet"
{unordered_map<unsigned short, TSTRunningAggregate, std::hash<unsigned short>, std::equal_to<unsigned short>, std::allocator<std::pair<const unsigned short, TSTRunningAggregate>>>="__table_"{__hash_table<std::__hash_value_type<unsigned short, TSTRunningAggregate>, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, TSTRunningAggregate>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, TSTRunningAggregate>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>, std::allocator<std::__hash_value_type<unsigned short, TSTRunningAggregate>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSTRunningAggregate>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSTRunningAggregate>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSTRunningAggregate>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSTRunningAggregate>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSTRunningAggregate>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSTRunningAggregate>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSTRunningAggregate>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned short, TSTRunningAggregate>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, TSTRunningAggregate>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, TSTRunningAggregate>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, TSTRunningAggregate>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>>="__value_"f}}}
{unordered_map<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>, std::hash<unsigned short>, std::equal_to<unsigned short>, std::allocator<std::pair<const unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>>>="__table_"{__hash_table<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>, std::allocator<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned short, std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, std::hash<unsigned short>, std::equal_to<unsigned short>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned short, std::__hash_value_type<unsigned short, std::unordered_map<TSKUIDStruct, TSTUidCoordsPerRunningCellValue *>>, std::equal_to<unsigned short>, std::hash<unsigned short>, true>>="__value_"f}}}
S20@0:8C16
d20@0:8{?=CS}16
C24@0:8S16S20
{?=CS}24@0:8@16
{TSUDecimal={?=[2Q]}}32@0:8r^{TSUDecimal={?=[2Q]}}16{?=CS}24{?=CS}28
v40@0:8^{TSCEASTNodeArray=}16{TSUCellCoord=ISBB}24^v32
@"TSTFunctionNode"
@48@0:8@16@24@32@40
@48@0:8@"TSSPropertyMap"16@"TSSPropertyMap"24@"TSSPropertyMap"32@"TSSPropertyMap"40
@"TSSPropertySet"16@0:8
@56@0:8@"TSSPropertyMap"16@"TSSPropertyMap"24@"TSSPropertyMap"32@"TSSPropertyMap"40@"TSTConcurrentStylesheet"48
@32@0:8r^{Message=^^?{InternalMetadata=^v}}16@24
v32@0:8^{Message=^^?{InternalMetadata=^v}}16@24
@32@0:8r^{Message=^^?{InternalMetadata=^v}}16@"TSPUnarchiver"24
v32@0:8^{Message=^^?{InternalMetadata=^v}}16@"TSPArchiver"24
@40@0:8@16B24B28B32I36
d28@0:8S16@?20
@24@0:8r^{TSCEInternalCellReference={TSUCellCoord=ISBB}SS}16
v40@0:8r^{TSUCellCoord=ISBB}16r^{TSKUIDStruct=QQ}24r^{TSKUIDStruct=QQ}32
v32@0:8r^{TSUCellCoord=ISBB}16@24
v32@0:8^v16r^{TSKUIDStruct=QQ}24
v32@0:8^v16r^v24
B40@0:8^v16r^{TSKUIDStruct=QQ}24r^v32
{unordered_map<TSKUIDStruct, TSCECellCoordSet, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSCECellCoordSet>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCECellCoordSet>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
{unordered_map<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCECellCoordSet>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
{unordered_map<TSUCellCoord, std::unordered_set<TSCEUuidPair>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, std::allocator<std::pair<const TSUCellCoord, std::unordered_set<TSCEUuidPair>>>>="__table_"{__hash_table<std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>, std::allocator<std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, std::unordered_set<TSCEUuidPair>>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>>="__value_"f}}}
i40@0:8@16@24r^{TSKUIDStruct=QQ}32
i32@0:8@16@24
v48@0:8@16{TSKUIDStruct=QQ}24B40B44
v24@0:8B16B20
v28@0:8r^{TSKUIDStruct=QQ}16B24
@24@0:8S16C20
@24@0:8I16C20
{TSUModelColumnIndex=S}20@0:8S16
{TSUModelColumnIndex=S}20@0:8I16
@56@0:8{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16@48
v36@0:8I16C20Q24i32
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}52@0:8Q16i24I28C32Q36^B44
v32@0:8@16q24
v32@0:8r^{TSKUIDStruct=QQ}16@24
@"TSTPivotGroupingColumnOptionsMap"
@"TSTFormulaStore"
v32@0:8^{CGContext=}16@?24
{TSUCellCoord=ISBB}24@0:8S16I20
S24@0:8r^{TSUCellCoord=ISBB}16
I24@0:8r^{TSUCellCoord=ISBB}16
{TSUCellCoord=ISBB}20@0:8I16
@40@0:8@16{_NSRange=QQ}24
v32@0:8@16C24B28
B24@0:8{TSUModelRowIndex=I}16C20
B22@0:8{TSUModelColumnIndex=S}16C18
{TSUModelColumnIndex=S}32@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{TSUModelRowIndex=I}32@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
v40@0:8{_NSRange=QQ}16r^v32
v34@0:8{_NSRange=QQ}16{TSUViewColumnIndex=S}32
v52@0:8@16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24@40B48
@"TSTHiddenStateExtent"
v24@0:8@"TSTMutableCellIteratorData"16
@"NSObject<TSTCellRegionIterating>"
{TSKUIDStruct=QQ}32@0:8@16@24
{TSKUIDStruct=QQ}20@0:8i16
i24@0:8r^{TSKUIDStruct=QQ}16
C32@0:8@16@24
B48@0:8@16@24Q32^Q40
B56@0:8@16@24@32Q40^Q48
@44@0:8@16@24r^{TSKUIDStruct=QQ}32S40
@48@0:8@16B24@28r^{TSKUIDStruct=QQ}36S44
{TSKUIDStruct=QQ}32@0:8r^{TSKUIDStruct=QQ}16r^{TSKUIDStruct=QQ}24
@40@0:8@16r^{TSKUIDStruct=QQ}24r^{TSKUIDStruct=QQ}32
v40@0:8^v16@24Q32
{vector<TSCECategoryLevel, std::allocator<TSCECategoryLevel>>=^C^C{__compressed_pair<TSCECategoryLevel *, std::allocator<TSCECategoryLevel>>=^C}}24@0:8r^{TSKUIDStruct=QQ}16
v40@0:8{TSKUIDStruct=QQ}16@?32
C32@0:8{TSKUIDStruct=QQ}16
C40@0:8r^{TSKUIDStruct=QQ}16^B24^B32
@28@0:8C16Q20
v36@0:8r^{TSKUIDStruct=QQ}16I24@28
@32@0:8@16C24B28
@40@0:8@16r^{TSKUIDStruct=QQ}24C32C36
v32@0:8@16r^{TSUCellCoord=ISBB}24
@24@0:8C16B20
@40@0:8@16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24@32
@48@0:8@16Q24Q32^{TSUPreserveFlags=C}40
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}36@0:8@16r^{TSKUIDStruct=QQ}24B32
{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}24@0:8@16
{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}32@0:8@16r^{TSKUIDStruct=QQ}24
{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}36@0:8@16r^{TSKUIDStruct=QQ}24C32
@36@0:8@16r^{TSKUIDStruct=QQ}24C32
{vector<TSCECellRef, std::allocator<TSCECellRef>>=^{TSCECellRef}^{TSCECellRef}{__compressed_pair<TSCECellRef *, std::allocator<TSCECellRef>>=^{TSCECellRef}}}36@0:8@16r^{TSKUIDStruct=QQ}24B32
{vector<TSCECategoryRef *, std::allocator<TSCECategoryRef *>>=^@^@{__compressed_pair<TSCECategoryRef *__strong *, std::allocator<TSCECategoryRef *>>=^@}}32@0:8@16C24B28
{vector<TSCECategoryRef *, std::allocator<TSCECategoryRef *>>=^@^@{__compressed_pair<TSCECategoryRef *__strong *, std::allocator<TSCECategoryRef *>>=^@}}40@0:8{vector<TSCECategoryRef *, std::allocator<TSCECategoryRef *>>=^@^@{__compressed_pair<TSCECategoryRef *__strong *, std::allocator<TSCECategoryRef *>>=^@}}16
{vector<TSCECategoryRef *, std::allocator<TSCECategoryRef *>>=^@^@{__compressed_pair<TSCECategoryRef *__strong *, std::allocator<TSCECategoryRef *>>=^@}}52@0:8{vector<TSCECategoryRef *, std::allocator<TSCECategoryRef *>>=^@^@{__compressed_pair<TSCECategoryRef *__strong *, std::allocator<TSCECategoryRef *>>=^@}}16@40C48
{vector<TSCECategoryRef *, std::allocator<TSCECategoryRef *>>=^@^@{__compressed_pair<TSCECategoryRef *__strong *, std::allocator<TSCECategoryRef *>>=^@}}36@0:8@16C24B28B32
@"TSTGroupByChangeDistributor"
{unordered_map<TSUCellCoord, TSTAggNode *, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, std::allocator<std::pair<const TSUCellCoord, TSTAggNode *>>>="__table_"{__hash_table<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTAggNode *>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTAggNode *>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>, std::allocator<std::__hash_value_type<TSUCellCoord, TSTAggNode *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTAggNode *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTAggNode *>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTAggNode *>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>>="__value_"f}}}
{TSCEUidLookupList="_uids"{TSKUIDStructVectorTemplate<TSKUIDStruct>="__begin_"^{TSKUIDStruct}"__end_"^{TSKUIDStruct}"__end_cap_"{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>="__value_"^{TSKUIDStruct}}}"_uidHashToLookupKeyMap"{unordered_map<unsigned long, unsigned int, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, unsigned int>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, unsigned int>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, unsigned int>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}"_uidHashOverflowMap"{unordered_map<unsigned long, std::unordered_set<unsigned int>, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, std::unordered_set<unsigned int>>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}}
@"TSKCustomFormatWrapper"
@40@0:8@16Q24@?32
v24@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
v40@0:8@16r^v24r^v32
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24@0:8Q16
{TSTCellUIDLookupList="_columnUidLookupList"{TSCEUidLookupList="_uids"{TSKUIDStructVectorTemplate<TSKUIDStruct>="__begin_"^{TSKUIDStruct}"__end_"^{TSKUIDStruct}"__end_cap_"{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>="__value_"^{TSKUIDStruct}}}"_uidHashToLookupKeyMap"{unordered_map<unsigned long, unsigned int, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, unsigned int>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, unsigned int>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, unsigned int>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}"_uidHashOverflowMap"{unordered_map<unsigned long, std::unordered_set<unsigned int>, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, std::unordered_set<unsigned int>>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}}"_rowUidLookupList"{TSCEUidLookupList="_uids"{TSKUIDStructVectorTemplate<TSKUIDStruct>="__begin_"^{TSKUIDStruct}"__end_"^{TSKUIDStruct}"__end_cap_"{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>="__value_"^{TSKUIDStruct}}}"_uidHashToLookupKeyMap"{unordered_map<unsigned long, unsigned int, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, unsigned int>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, unsigned int>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, unsigned int>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, unsigned int>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, unsigned int>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}"_uidHashOverflowMap"{unordered_map<unsigned long, std::unordered_set<unsigned int>, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, std::unordered_set<unsigned int>>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, std::unordered_set<unsigned int>>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}}"_cellLookupCoords"{vector<TSTLookupKeyCoord, std::allocator<TSTLookupKeyCoord>>="__begin_"^{TSTLookupKeyCoord}"__end_"^{TSTLookupKeyCoord}"__end_cap_"{__compressed_pair<TSTLookupKeyCoord *, std::allocator<TSTLookupKeyCoord>>="__value_"^{TSTLookupKeyCoord}}}}
@52@0:8{TSKUIDStruct=QQ}16{TSKUIDStruct=QQ}32i48
v28@0:8B16@?20
@"<TSCERemoteDataStoreDelegate>"
@"NSOperationQueue"
@"TSCERemoteDataSpecifierSet"
{vector<TSTStrokeLayer *__unsafe_unretained, std::allocator<TSTStrokeLayer *__unsafe_unretained>>=^@^@{__compressed_pair<TSTStrokeLayer *__unsafe_unretained *, std::allocator<TSTStrokeLayer *__unsafe_unretained>>=^@}}16@0:8
v40@0:8{TSTSimpleRange=qQ}16@?32
@48@0:8@16@24{TSTSimpleRange=qQ}32
v44@0:8@16i24{TSTSimpleRange=qQ}28
v40@0:8@16{TSTSimpleRange=qQ}24
B32@0:8{TSTSimpleRange=qQ}16
{?=@@@@@}16@0:8
@"TSTMutableStrokeLayer"
v32@0:8^v16@?24
d40@0:8{TSTSimpleRange=qQ}16d32
d24@0:8q16
@"TSTStrokeOrderedLayer"
v56@0:8{TSUCellCoord=ISBB}16^@24^@32^@40^@48
@24@0:8S16S20
@"<TSTCustomStrokeProviding>"
Q40@0:8@16Q24Q32
Q48@0:8@16@24Q32Q40
v40@0:8@16Q24Q32
{TSUViewColumnOrRowIndex=I}20@0:8{TSUModelColumnOrRowIndex=I}16
v28@0:8{TSUModelColumnOrRowIndex=I}16{TSUViewColumnOrRowIndex=I}20C24
B28@0:8r^{TSKUIDStruct=QQ}16C24
B36@0:8r^{TSKUIDStruct=QQ}16{TSUModelColumnOrRowIndex=I}24{TSUViewColumnOrRowIndex=I}28C32
B24@0:8{TSUViewColumnOrRowIndex=I}16C20
B24@0:8{TSUModelColumnOrRowIndex=I}16C20
C20@0:8{TSUViewColumnOrRowIndex=I}16
C20@0:8{TSUModelColumnOrRowIndex=I}16
I32@0:8{_NSRange=QQ}16
B36@0:8{_NSRange=QQ}16C32
I24@0:8I16I20
v36@0:8{_NSRange=QQ}16{TSUModelColumnOrRowIndex=I}32
v36@0:8{_NSRange=QQ}16{TSUViewColumnOrRowIndex=I}32
v24@0:8{TSUModelColumnOrRowIndex=I}16{TSUModelColumnOrRowIndex=I}20
@48@0:8@16@24r^{TSKUIDStruct=QQ}32r^{TSUCellCoord=ISBB}40
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}32@0:8@16r^{TSUCellCoord=ISBB}24
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}40@0:8@16r^{TSUCellCoord=ISBB}24B32C36
@120@0:8{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16@112
v48@0:8@16r^{TSUCellCoord=ISBB}24@32@40
{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}20@0:8{TSUModelColumnOrRowIndex=I}16
{unordered_map<TSKUIDStruct, unsigned char, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, unsigned char>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, unsigned char>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned char>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned char>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, unsigned char>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned char>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned char>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned char>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned char>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned char>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned char>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned char>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned char>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, unsigned char>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned char>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, unsigned char>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
{vector<TSUCellRect, std::allocator<TSUCellRect>>=^{TSUCellRect}^{TSUCellRect}{__compressed_pair<TSUCellRect *, std::allocator<TSUCellRect>>=^{TSUCellRect}}}24@0:8r^v16
v32@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16{TSUModelCellCoord={TSUCellCoord=ISBB}}24
v24@0:8r^{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}48@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}32
{vector<TSUModelCellRect, std::allocator<TSUModelCellRect>>=^{TSUModelCellRect}^{TSUModelCellRect}{__compressed_pair<TSUModelCellRect *, std::allocator<TSUModelCellRect>>=^{TSUModelCellRect}}}24@0:8r^v16
B24@0:8r^{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{TSUModelCellCoord={TSUCellCoord=ISBB}}24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}44@0:8@16{TSUModelCellCoord={TSUCellCoord=ISBB}}24@32B40
v44@0:8{_NSRange=QQ}16r^v32B40
{unordered_map<TSUModelCellCoord, TSUModelCellCoord, std::hash<TSUModelCellCoord>, std::equal_to<TSUModelCellCoord>, std::allocator<std::pair<const TSUModelCellCoord, TSUModelCellCoord>>>="__table_"{__hash_table<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, std::__unordered_map_hasher<TSUModelCellCoord, std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, std::hash<TSUModelCellCoord>, std::equal_to<TSUModelCellCoord>, true>, std::__unordered_map_equal<TSUModelCellCoord, std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, std::equal_to<TSUModelCellCoord>, std::hash<TSUModelCellCoord>, true>, std::allocator<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSUModelCellCoord, std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, std::hash<TSUModelCellCoord>, std::equal_to<TSUModelCellCoord>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSUModelCellCoord, std::__hash_value_type<TSUModelCellCoord, TSUModelCellCoord>, std::equal_to<TSUModelCellCoord>, std::hash<TSUModelCellCoord>, true>>="__value_"f}}}
@"TSTMergeChangeDistributor"
@"TSTCellRangeCache"
@40@0:8@16r^{TSKUIDStruct=QQ}24@32
{TSCESpanningRangeRef={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}C}20@0:8S16
@24@0:8r^{TSCESpanningRangeRef={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}C}16
@48@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}32
i28@0:8@16i24
{CGSize=dd}40@0:8@16d24@32
d20@0:8B16
d36@0:8S16B20B24^B28
d60@0:8I16B20B24B28B32{CGSize=dd}36^B52
d44@0:8{CGSize=dd}16I32d36
d24@0:8I16B20
v44@0:8@16i24I28B32I36I40
v28@0:8I16I20I24
B28@0:8^I16B24
d28@0:8I16I20I24
d24@0:8I16I20
v36@0:8I16I20I24@?28
{CGSize=dd}36@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16B32
d36@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16B32
d40@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16@32
d44@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16B32@36
d52@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16B32{CGSize=dd}36
v32@0:8d16Q24
B32@0:8^@16{TSUCellCoord=ISBB}24
B28@0:8q16I24
v40@0:8@16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24
v36@0:8i16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}20
v52@0:8i16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}20{TSUCellRect={TSUCellCoord=ISBB}{?=II}}36
v84@0:8@16{TSUCellCoord=ISBB}24{TSUCellRect={TSUCellCoord=ISBB}{?=II}}32B48@52@60@68@76
v52@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16@32B40@44
v40@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16@32
v40@0:8{TSUCellCoord=ISBB}16{TSUCellCoord=ISBB}24@32
{TSUCellCoord=ISBB}56@0:8{TSUCellCoord=ISBB}16{TSUCellCoord=ISBB}24{TSUCellRect={TSUCellCoord=ISBB}{?=II}}32@48
v36@0:8@16S24@28
v36@0:8@16I24@28
v36@0:8i16@20@28
@76@0:8{TSUCellCoord=ISBB}16@24@32B40i44@48i56Q60Q68
v104@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16@32@40{TSUCellRect={TSUCellCoord=ISBB}{?=II}}48B64i68@72B80i84@88@96
@56@0:8@16{TSUCellCoord=ISBB}24@32^q40^i48
@52@0:8@16{TSUCellCoord=ISBB}24@32q40i48
@40@0:8@16{TSUCellCoord=ISBB}24@32
{UIEdgeInsets=dddd}24@0:8{TSUCellCoord=ISBB}16
{vector<TSTStrokeLayerStack *, std::allocator<TSTStrokeLayerStack *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<TSTStrokeLayerStack *__strong *, std::allocator<TSTStrokeLayerStack *>>="__value_"^@}}
@"NSObject<OS_dispatch_group>"
@"TSKChangeNotifier"
@"TSTStrokeDefaultVendor"
@"TSTWPColumnCache"
@"TSTDupContentCache"
@"TSTWidthHeightCache"
@"TSTHiddenRowsColumnsCache"
@"TSDFill"
@"TSTLayout"
@"<TSTLayoutDynamicContentProtocol>"
@"TSUColor"
@"TSDInfoGeometry"
@"TSDLayoutGeometry"
@"<TSTLayoutDynamicCellFillProtocol>"
@"TSTMergeRangeSortedSet"
@"<TSWPStyleProviding>"
@"TSTFontInfoCache"
@"TSUWidthLimitedQueue"
@"TSTConcurrentMutableIndexSet"
@"TSTStrokeWidthCache"
@"TSTTextStyleToFontHeightCache"
@"NSCountedSet"
@"TSTLayoutDynamicResizeInfo"
@"TSWPColumnStyle"
@"TSTTextEngineDelegate"
B24@0:8@"TSKSelectionPath"16
@"<TSDHint>"16@0:8
@92@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16{TSUCellCoord=ISBB}32I40{CGSize=dd}44{CGSize=dd}60@76B84B88
@"NSNumber"
@32@0:8@"TSPObjectContext"16@"<TSDHint>"24
v24@0:8@"<TSDHint>"16
@60@0:8{CGSize=dd}16@32@40B48o^B52
B36@0:8@16@24B32
@"TSDLayout"60@0:8{CGSize=dd}16@"TSDLayout"32@"<TSDHint>"40B48o^B52
@"<TSDHint>"60@0:8{CGSize=dd}16@"TSDLayout"32@"<TSDHint>"40B48o^B52
@"TSDLayout"32@0:8@"<TSDHint>"16@"TSDLayout"24
B36@0:8@"<TSDHint>"16@"<TSDHint>"24B32
@"<TSDHint>"24@0:8@"TSDLayout"16
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}44@0:8{CGSize=dd}16@32B40
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}68@0:8S16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}20d36{CGSize=dd}44@60
B28@0:8@16B24
B56@0:8@16{CGSize=dd}24@40@48
@32@0:8{CGSize=dd}16
B24@0:8@?16
@"TSTLayoutSpace"
@56@0:8@16^v24S32r^{TSKUIDStruct=QQ}36@44S52
v36@0:8^v16r^{TSUCellCoord=ISBB}24B32
v36@0:8r^{TSKUIDStruct=QQ}16r^{TSKUIDStruct=QQ}24S32
@"TSCEUuidReferences"
@"<TSCEFormulaOwning>"
@"<TSCECalculationEngineRegistration>"
@44@0:8i16{_NSRange=QQ}20@36
{unordered_map<unsigned int, TSTTableDataObject *, std::hash<unsigned int>, std::equal_to<unsigned int>, std::allocator<std::pair<const unsigned int, TSTTableDataObject *>>>="__table_"{__hash_table<std::__hash_value_type<unsigned int, TSTTableDataObject *>, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, TSTTableDataObject *>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, TSTTableDataObject *>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>, std::allocator<std::__hash_value_type<unsigned int, TSTTableDataObject *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned int, TSTTableDataObject *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned int, TSTTableDataObject *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned int, std::__hash_value_type<unsigned int, TSTTableDataObject *>, std::hash<unsigned int>, std::equal_to<unsigned int>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned int, std::__hash_value_type<unsigned int, TSTTableDataObject *>, std::equal_to<unsigned int>, std::hash<unsigned int>, true>>="__value_"f}}}
@64@0:8@16@24{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}32Q48Q56
@80@0:8@16@24@32@40{TSUCellRect={TSUCellCoord=ISBB}{?=II}}48Q64Q72
v40@0:8@?16@?24@?32
v48@0:8@?16@?24@?32@?40
{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}}32@0:8@16@24
@40@0:8r^v16r^v24@32
@28@0:8i16r^v20
@40@0:8r^v16r^v24r^v32
{vector<TSCEFormulaObject *, std::allocator<TSCEFormulaObject *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<TSCEFormulaObject *__strong *, std::allocator<TSCEFormulaObject *>>="__value_"^@}}
v64@0:8r^{TSKUIDStruct=QQ}16Q24^v32^v40^v48^v56
v40@0:8r^v16Q24^v32
@"TSTCellUIDLookupListWrapper"
{TSKUIDStruct=QQ}64@0:8r^v16r^v24^Q32^Q40^Q48^v56
B32@0:8^v16Q24
{deque<TSKUIDStruct, std::allocator<TSKUIDStruct>>="__map_"{__split_buffer<TSKUIDStruct *, std::allocator<TSKUIDStruct *>>="__first_"^^{TSKUIDStruct}"__begin_"^^{TSKUIDStruct}"__end_"^^{TSKUIDStruct}"__end_cap_"{__compressed_pair<TSKUIDStruct **, std::allocator<TSKUIDStruct *>>="__value_"^^{TSKUIDStruct}}}"__start_"Q"__size_"{__compressed_pair<unsigned long, std::allocator<TSKUIDStruct>>="__value_"Q}}
@44@0:8i16@20{TSKUIDStruct=QQ}28
@32@0:8^{TSCEBooleanValue=^^?B{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}}16@24
^{TSCEBooleanValue=^^?B{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}}16@0:8
^{TSCEBooleanValue=^^?B{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}}
@36@0:8S16@20q28
@60@0:8S16@20q28q36q44q52
[256@"TSTTableTile"]
[256@"TSPLazyReference"]
@32@0:8r^{TSUDecimal={?=[2Q]}}16@24
@32@0:8^{TSCENumberValue=^^?{TSUDecimal={?=[2Q]}}{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}SB}16@24
^{TSCENumberValue=^^?{TSUDecimal={?=[2Q]}}{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}SB}
{unordered_map<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, NSMutableSet<TSCERemoteDataSpecifier *> *>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}
@"TSTHierarchicalCellDiffMap"
@56@0:8@16{TSKUIDStruct=QQ}24@40@48
Q40@0:8@16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24
@36@0:8{TSUModelCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16B32
@40@0:8q16{TSKUIDStruct=QQ}24
{map<TSKUIDStruct, TSTPivotGroupingColumnOptions *, std::less<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSTPivotGroupingColumnOptions *>>>="__tree_"{__tree<std::__value_type<TSKUIDStruct, TSTPivotGroupingColumnOptions *>, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSTPivotGroupingColumnOptions *>, std::less<TSKUIDStruct>, true>, std::allocator<std::__value_type<TSKUIDStruct, TSTPivotGroupingColumnOptions *>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSKUIDStruct, TSTPivotGroupingColumnOptions *>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSTPivotGroupingColumnOptions *>, std::less<TSKUIDStruct>, true>>="__value_"Q}}}
d20@0:8S16
v36@0:8^d16^d24I32
B24@0:8I16S20
v36@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16I32
v36@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16S32
@40@0:8@16@24I32S36
{vector<TSTWidthHeightCacheEntry<4>, std::allocator<TSTWidthHeightCacheEntry<4>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<TSTWidthHeightCacheEntry<4> *, std::allocator<TSTWidthHeightCacheEntry<4>>>="__value_"^v}}
@"TSCERemoteDataCoordinator"
@"TSUNetworkReachability"
@"NSObject<OS_dispatch_source>"
@36@0:8@16@24C32
v36@0:8r^v16r^{TSKUIDStruct=QQ}24B32
{unordered_map<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSUCellCoord, TSCEFormulaToReplace>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
@36@0:8i16@20@28
@44@0:8i16{TSUCellCoord=ISBB}20@28@36
@52@0:8i16@20@28Q36Q44
@44@0:8i16@20Q28Q36
@44@0:8i16{TSUCellCoord=ISBB}20{TSUCellRect={TSUCellCoord=ISBB}{?=II}}28
@60@0:8i16{TSUCellCoord=ISBB}20{TSUCellRect={TSUCellCoord=ISBB}{?=II}}28{TSUCellRect={TSUCellCoord=ISBB}{?=II}}44
@36@0:8i16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}20
@52@0:8i16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}20{TSUCellRect={TSUCellCoord=ISBB}{?=II}}36
v36@0:8@16i24@?28
@68@0:8i16@20{TSUCellCoord=ISBB}28@36@44@52@60
@60@0:8i16@20{TSUCellCoord=ISBB}28@36@44@52
@"NSHashTable"
@"NSSet"
@"TSULocale"16@0:8
@"<TSWPStyleProviding>"16@0:8
@64@0:8{UIEdgeInsets=dddd}16i48@52B60
@26@0:8{TSUModelColumnIndex=S}16i18i22
{unordered_map<TSKUIDStruct, TSCEMutableUIDSet *, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSCEMutableUIDSet *>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCEMutableUIDSet *>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
{TSKUIDStruct=QQ}24@0:8I16B20
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}28@0:8@16B24
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}36@0:8{_NSRange=QQ}16B32
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}28@0:8@"NSIndexSet"16B24
@"NSMutableIndexSet"28@0:8r^v16B24
v48@0:8{UIEdgeInsets=dddd}16
@"TSTTextStyleHandle"
@"TSTLayoutContentCachedKey"
@"TSWPColumn"
v24@0:8^{CGImage=}16
^{CGImage=}16@0:8
^{CGImage=}
v52@0:8@16C24^v28^v36^v44
@48@0:8@16@24r^v32r^v40
Q20@0:8B16
C20@0:8B16
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}32@0:8r^v16q24
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}24@0:8q16
@40@0:8I16C20^{TSKUIDStruct=QQ}24q32
C40@0:8{_NSRange=QQ}16q32
r^v24@0:8q16
v32@0:8r^v16q24
v40@0:8r^v16r^{TSKUIDStruct=QQ}24q32
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}40@0:8r^v16r^v24q32
@"TSTReferenceNode"
@"<TSTCanvasReferenceProvider>"
@52@0:8@16{TSTSimpleRange=qQ}24i40Q44
@"TSTStrokeLayer"24@0:8Q16
@32@0:8{TSTSimpleRange=qQ}16
{vector<TSTStrokeLayerRun, std::allocator<TSTStrokeLayerRun>>="__begin_"^{TSTStrokeLayerRun}"__end_"^{TSTStrokeLayerRun}"__end_cap_"{__compressed_pair<TSTStrokeLayerRun *, std::allocator<TSTStrokeLayerRun>>="__value_"^{TSTStrokeLayerRun}}}
v32@0:8q16q24
v40@0:8{_NSRange=QQ}16q32
v116@0:8@16@24i32@36@44i52@56@64i72@76@84i92@96@104i112
v32@0:8@16r^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}24
{vector<NSString *, std::allocator<NSString *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<NSString *__strong *, std::allocator<NSString *>>="__value_"^@}}
{vector<TSCEValue, std::allocator<TSCEValue>>="__begin_"^{TSCEValue}"__end_"^{TSCEValue}"__end_cap_"{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>="__value_"^{TSCEValue}}}
{vector<bool, std::allocator<bool>>="__begin_"^Q"__size_"Q"__cap_alloc_"{__compressed_pair<unsigned long, std::allocator<unsigned long>>="__value_"Q}}
@52@0:8r^{TSCEGrid=^^?@{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}}16@24i32^{TSCEEvaluationContext=}36B44B48
{TSCETaggedDecimalList="_list"{vector<TSCETaggedDecimal, std::allocator<TSCETaggedDecimal>>="__begin_"^{TSCETaggedDecimal}"__end_"^{TSCETaggedDecimal}"__end_cap_"{__compressed_pair<TSCETaggedDecimal *, std::allocator<TSCETaggedDecimal>>="__value_"^{TSCETaggedDecimal}}}"_startIdx"Q"_size"Q}
@"TSSStyle"
@"TSSStylesheet"
Q28@0:8@16i24
v28@0:8Q16B24
^{TSUCellRect={TSUCellCoord=ISBB}{?=II}}
d40@0:8@16d24N^d32
[8{os_unfair_lock_s="_os_unfair_lock_opaque"I}]
[8{unordered_map<TSTFontInfoCacheDupContentEntry, double, std::hash<TSTFontInfoCacheDupContentEntry>, std::equal_to<TSTFontInfoCacheDupContentEntry>, std::allocator<std::pair<const TSTFontInfoCacheDupContentEntry, double>>>="__table_"{__hash_table<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, std::__unordered_map_hasher<TSTFontInfoCacheDupContentEntry, std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, std::hash<TSTFontInfoCacheDupContentEntry>, std::equal_to<TSTFontInfoCacheDupContentEntry>, true>, std::__unordered_map_equal<TSTFontInfoCacheDupContentEntry, std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, std::equal_to<TSTFontInfoCacheDupContentEntry>, std::hash<TSTFontInfoCacheDupContentEntry>, true>, std::allocator<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSTFontInfoCacheDupContentEntry, std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, std::hash<TSTFontInfoCacheDupContentEntry>, std::equal_to<TSTFontInfoCacheDupContentEntry>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSTFontInfoCacheDupContentEntry, std::__hash_value_type<TSTFontInfoCacheDupContentEntry, double>, std::equal_to<TSTFontInfoCacheDupContentEntry>, std::hash<TSTFontInfoCacheDupContentEntry>, true>>="__value_"f}}}]
[8@"NSMutableArray"]
@"TSWPTextMeasurerBundle"
{unordered_map<unsigned long, TSTFontInfoCacheEntry *, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, TSTFontInfoCacheEntry *>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, TSTFontInfoCacheEntry *>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, TSTFontInfoCacheEntry *>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, TSTFontInfoCacheEntry *>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, TSTFontInfoCacheEntry *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSTFontInfoCacheEntry *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSTFontInfoCacheEntry *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSTFontInfoCacheEntry *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSTFontInfoCacheEntry *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSTFontInfoCacheEntry *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSTFontInfoCacheEntry *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSTFontInfoCacheEntry *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, TSTFontInfoCacheEntry *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, TSTFontInfoCacheEntry *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, TSTFontInfoCacheEntry *>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, TSTFontInfoCacheEntry *>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}
{vector<std::vector<NSString *>, std::allocator<std::vector<NSString *>>>="__begin_"^v"__end_"^v"__end_cap_"{__compressed_pair<std::vector<NSString *> *, std::allocator<std::vector<NSString *>>>="__value_"^v}}
{vector<TSKUIDStructCoord, std::allocator<TSKUIDStructCoord>>="__begin_"^{TSKUIDStructCoord}"__end_"^{TSKUIDStructCoord}"__end_cap_"{__compressed_pair<TSKUIDStructCoord *, std::allocator<TSKUIDStructCoord>>="__value_"^{TSKUIDStructCoord}}}
^v24@0:8@16
^v32@0:8@16r^{TSUCellCoord=ISBB}24
{map<NSString *, TSTHeaderNameMgrEntry *, std::less<NSString *>, std::allocator<std::pair<NSString *const, TSTHeaderNameMgrEntry *>>>="__tree_"{__tree<std::__value_type<NSString *, TSTHeaderNameMgrEntry *>, std::__map_value_compare<NSString *, std::__value_type<NSString *, TSTHeaderNameMgrEntry *>, std::less<NSString *>, true>, std::allocator<std::__value_type<NSString *, TSTHeaderNameMgrEntry *>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<NSString *, TSTHeaderNameMgrEntry *>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<NSString *, std::__value_type<NSString *, TSTHeaderNameMgrEntry *>, std::less<NSString *>, true>>="__value_"Q}}}
@"TSTHeaderNameMgr"
{TSCECellRefSet={map<TSKUIDStruct, TSCECellCoordSet, std::less<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSCECellCoordSet>>>={__tree<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>, std::allocator<std::__value_type<TSKUIDStruct, TSCECellCoordSet>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>>=Q}}}}24@0:8@16
{unordered_map<NSString *, TSCECellRefSet, std::hash<NSString *>, std::equal_to<NSString *>, std::allocator<std::pair<NSString *const, TSCECellRefSet>>>="__table_"{__hash_table<std::__hash_value_type<NSString *, TSCECellRefSet>, std::__unordered_map_hasher<NSString *, std::__hash_value_type<NSString *, TSCECellRefSet>, std::hash<NSString *>, std::equal_to<NSString *>, true>, std::__unordered_map_equal<NSString *, std::__hash_value_type<NSString *, TSCECellRefSet>, std::equal_to<NSString *>, std::hash<NSString *>, true>, std::allocator<std::__hash_value_type<NSString *, TSCECellRefSet>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSCECellRefSet>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSCECellRefSet>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSCECellRefSet>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSCECellRefSet>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSCECellRefSet>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSCECellRefSet>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSCECellRefSet>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<NSString *, TSCECellRefSet>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSCECellRefSet>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<NSString *, std::__hash_value_type<NSString *, TSCECellRefSet>, std::hash<NSString *>, std::equal_to<NSString *>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<NSString *, std::__hash_value_type<NSString *, TSCECellRefSet>, std::equal_to<NSString *>, std::hash<NSString *>, true>>="__value_"f}}}
v32@0:8^v16r^{TSUCellCoord=ISBB}24
{TSUCellCoord=ISBB}20@0:8B16
{TSUCellCoord=ISBB}32@0:8r^{TSUCellCoord=ISBB}16@24
{vector<NSString *, std::allocator<NSString *>>=^@^@{__compressed_pair<NSString *__strong *, std::allocator<NSString *>>=^@}}28@0:8@16B24
^{TSTHeaderPerTable={TSKUIDStruct=QQ}{TSUCellCoord=ISBB}@@@@B}28@0:8r^{TSKUIDStruct=QQ}16B24
B28@0:8r^{TSKUIDStruct=QQ}16B24
^v24@0:8r^{TSUCellCoord=ISBB}16
@36@0:8@16B24^Q28
v40@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24r^{TSKUIDStruct=QQ}32
B40@0:8r^v16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24r^{TSKUIDStruct=QQ}32
v32@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16r^{TSKUIDStruct=QQ}24
{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}24@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16
B40@0:8@16r^v24r^{TSKUIDStruct=QQ}32
@28@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16B24
@36@0:8@16r^{TSKUIDStruct=QQ}24B32
{TSCECellRefSet={map<TSKUIDStruct, TSCECellCoordSet, std::less<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSCECellCoordSet>>>={__tree<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>, std::allocator<std::__value_type<TSKUIDStruct, TSCECellCoordSet>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>>=Q}}}}36@0:8@16r^{TSKUIDStruct=QQ}24B32
{TSCECellRefSet={map<TSKUIDStruct, TSCECellCoordSet, std::less<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSCECellCoordSet>>>={__tree<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>, std::allocator<std::__value_type<TSKUIDStruct, TSCECellCoordSet>>>=^v{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSKUIDStruct, TSCECellCoordSet>, void *>>>={__tree_end_node<std::__tree_node_base<void *> *>=^v}}{__compressed_pair<unsigned long, std::__map_value_compare<TSKUIDStruct, std::__value_type<TSKUIDStruct, TSCECellCoordSet>, std::less<TSKUIDStruct>, true>>=Q}}}}24@0:8r^{TSKUIDStruct=QQ}16
{vector<TSTHeaderNameMgrTile *, std::allocator<TSTHeaderNameMgrTile *>>="__begin_"^@"__end_"^@"__end_cap_"{__compressed_pair<TSTHeaderNameMgrTile *__strong *, std::allocator<TSTHeaderNameMgrTile *>>="__value_"^@}}
{unordered_map<TSUCellCoord, TSTHeaderNameMgrEntry *, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, std::allocator<std::pair<const TSUCellCoord, TSTHeaderNameMgrEntry *>>>="__table_"{__hash_table<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>, std::allocator<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTHeaderNameMgrEntry *>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>>="__value_"f}}}
{unordered_map<TSCEUidCellRef, TSCECellCoordSet, std::hash<TSCEUidCellRef>, std::equal_to<TSCEUidCellRef>, std::allocator<std::pair<const TSCEUidCellRef, TSCECellCoordSet>>>="__table_"{__hash_table<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, std::__unordered_map_hasher<TSCEUidCellRef, std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, std::hash<TSCEUidCellRef>, std::equal_to<TSCEUidCellRef>, true>, std::__unordered_map_equal<TSCEUidCellRef, std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, std::equal_to<TSCEUidCellRef>, std::hash<TSCEUidCellRef>, true>, std::allocator<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSCEUidCellRef, std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, std::hash<TSCEUidCellRef>, std::equal_to<TSCEUidCellRef>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSCEUidCellRef, std::__hash_value_type<TSCEUidCellRef, TSCECellCoordSet>, std::equal_to<TSCEUidCellRef>, std::hash<TSCEUidCellRef>, true>>="__value_"f}}}
{unordered_map<TSKUIDStruct, TSTHeaderPerTable *, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSTHeaderPerTable *>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTHeaderPerTable *>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
{unordered_map<TSUCellCoord, TSKUIDStruct, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, std::allocator<std::pair<const TSUCellCoord, TSKUIDStruct>>>="__table_"{__hash_table<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>, std::allocator<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSKUIDStruct>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>>="__value_"f}}}
@"TSCENameTrie"
{unordered_map<NSString *, TSUCellCoord, std::hash<NSString *>, std::equal_to<NSString *>, std::allocator<std::pair<NSString *const, TSUCellCoord>>>="__table_"{__hash_table<std::__hash_value_type<NSString *, TSUCellCoord>, std::__unordered_map_hasher<NSString *, std::__hash_value_type<NSString *, TSUCellCoord>, std::hash<NSString *>, std::equal_to<NSString *>, true>, std::__unordered_map_equal<NSString *, std::__hash_value_type<NSString *, TSUCellCoord>, std::equal_to<NSString *>, std::hash<NSString *>, true>, std::allocator<std::__hash_value_type<NSString *, TSUCellCoord>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSUCellCoord>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSUCellCoord>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSUCellCoord>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSUCellCoord>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSUCellCoord>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSUCellCoord>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSUCellCoord>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<NSString *, TSUCellCoord>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<NSString *, TSUCellCoord>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<NSString *, std::__hash_value_type<NSString *, TSUCellCoord>, std::hash<NSString *>, std::equal_to<NSString *>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<NSString *, std::__hash_value_type<NSString *, TSUCellCoord>, std::equal_to<NSString *>, std::hash<NSString *>, true>>="__value_"f}}}
{vector<TSCECellRef, std::allocator<TSCECellRef>>="__begin_"^{TSCECellRef}"__end_"^{TSCECellRef}"__end_cap_"{__compressed_pair<TSCECellRef *, std::allocator<TSCECellRef>>="__value_"^{TSCECellRef}}}
@60@0:8@16{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24B56
@36@0:8@16{TSUCellCoord=ISBB}24B32
@"TSTCellDiffArray"
v32@0:8{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}16
@32@0:8r^{TSKUIDStruct=QQ}16r^v24
@24@0:8{TSUModelColumnOrRowIndex=I}16i20
@20@0:8{TSUModelColumnOrRowIndex=I}16
{TSUModelColumnOrRowIndex=I}16@0:8
{TSUModelColumnOrRowIndex="_index"I}
@24@0:8{TSUViewColumnOrRowIndex=I}16i20
{TSUViewColumnOrRowIndex=I}16@0:8
{TSUViewColumnOrRowIndex="_index"I}
r*16@0:8
{basic_string<char, std::char_traits<char>, std::allocator<char>>="__r_"{__compressed_pair<std::basic_string<char>::__rep, std::allocator<char>>="__value_"{__rep=""(?="__l"{__long="__data_"*"__size_"Q"__cap_"b63"__is_long_"b1}"__s"{__short="__data_"[23c]"__padding_"[0C]"__size_"b7"__is_long_"b1}"__r"{__raw="__words"[3Q]})}}}
@56@0:8@16Q24Q32{TSUCellRect={TSUCellCoord=ISBB}{?=II}}40
v48@0:8@16Q24Q32@?40
v64@0:8@16Q24Q32{TSUCellRect={TSUCellCoord=ISBB}{?=II}}40@?56
v32@0:8r^{TSCEInternalCellReference={TSUCellCoord=ISBB}SS}16r^{TSKUIDStruct=QQ}24
@32@0:8r^v16^v24
v36@0:8^v16B24@28
{unordered_map<TSKUIDStruct, TSCEInternalCellRefSet, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSCEInternalCellRefSet>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSCEInternalCellRefSet>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
{unordered_map<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>, std::hash<TSCEInternalCellReference>, std::equal_to<TSCEInternalCellReference>, std::allocator<std::pair<const TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>>>="__table_"{__hash_table<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>, std::__unordered_map_hasher<TSCEInternalCellReference, std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>, std::hash<TSCEInternalCellReference>, std::equal_to<TSCEInternalCellReference>, true>, std::__unordered_map_equal<TSCEInternalCellReference, std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>, std::equal_to<TSCEInternalCellReference>, std::hash<TSCEInternalCellReference>, true>, std::allocator<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSCEInternalCellReference, std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>, std::hash<TSCEInternalCellReference>, std::equal_to<TSCEInternalCellReference>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSCEInternalCellReference, std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStruct>>, std::equal_to<TSCEInternalCellReference>, std::hash<TSCEInternalCellReference>, true>>="__value_"f}}}
@36@0:8d16B24o^d28
{CGRect={CGPoint=dd}{CGSize=dd}}56@0:8d16{CGRect={CGPoint=dd}{CGSize=dd}}24
{CGRect={CGPoint=dd}{CGSize=dd}}76@0:8d16{CGRect={CGPoint=dd}{CGSize=dd}}24B56o^@60o^{CGSize=dd}68
v76@0:8B16d20^{CGContext=}28{CGRect={CGPoint=dd}{CGSize=dd}}36@68
v76@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16d32{UIEdgeInsets=dddd}40B72
{set<TSTMergeRangeElem, TSTMergeRangeElemCompare, std::allocator<TSTMergeRangeElem>>="__tree_"{__tree<TSTMergeRangeElem, TSTMergeRangeElemCompare, std::allocator<TSTMergeRangeElem>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<TSTMergeRangeElem, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, TSTMergeRangeElemCompare>="__value_"Q}}}
@112@0:8@16d24d32@40B48C52{UIEdgeInsets=dddd}56i88i92q96@104
@40@0:8@"TSTLayoutEngine"16@"TSTCellRegion"24@"TSTCellRegion"32
@24@0:8@"TSTLayoutEngine"16
@32@0:8@"TSTLayoutEngine"16@"TSTCellRegion"24
@24@0:8@"<TSTLayoutDynamicResizeInfoProtocol>"16
v24@0:8@"TSTLayoutEngine"16
@"TSTImmutableColumnRowUIDMap"
B32@0:8@16Q24
{unordered_map<TSUViewColumnIndex, TSUModelColumnIndex, std::hash<TSUViewColumnIndex>, std::equal_to<TSUViewColumnIndex>, std::allocator<std::pair<const TSUViewColumnIndex, TSUModelColumnIndex>>>="__table_"{__hash_table<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, std::__unordered_map_hasher<TSUViewColumnIndex, std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, std::hash<TSUViewColumnIndex>, std::equal_to<TSUViewColumnIndex>, true>, std::__unordered_map_equal<TSUViewColumnIndex, std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, std::equal_to<TSUViewColumnIndex>, std::hash<TSUViewColumnIndex>, true>, std::allocator<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSUViewColumnIndex, std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, std::hash<TSUViewColumnIndex>, std::equal_to<TSUViewColumnIndex>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSUViewColumnIndex, std::__hash_value_type<TSUViewColumnIndex, TSUModelColumnIndex>, std::equal_to<TSUViewColumnIndex>, std::hash<TSUViewColumnIndex>, true>>="__value_"f}}}
@"TSTCategoryTranslator"
@"TSTTableDataListCache"
@"TSTTableTile"
@"TSTTableTileRowInfo"
@45@0:8@16r^{TSKUIDStruct=QQ}24{TSUPreserveFlags=C}32C33C37S41
@33@0:8@16r^{TSKUIDStruct=QQ}24{TSUPreserveFlags=C}32
@"TSCEUndoTract"
@40@0:8C16{TSKUIDStruct=QQ}20C36
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
v24@0:8^{TSKUIDStruct=QQ}16
{map<TSKUIDStructCoord, TSTCell *, std::less<TSKUIDStructCoord>, std::allocator<std::pair<const TSKUIDStructCoord, TSTCell *>>>="__tree_"{__tree<std::__value_type<TSKUIDStructCoord, TSTCell *>, std::__map_value_compare<TSKUIDStructCoord, std::__value_type<TSKUIDStructCoord, TSTCell *>, std::less<TSKUIDStructCoord>, true>, std::allocator<std::__value_type<TSKUIDStructCoord, TSTCell *>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<TSKUIDStructCoord, TSTCell *>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<TSKUIDStructCoord, std::__value_type<TSKUIDStructCoord, TSTCell *>, std::less<TSKUIDStructCoord>, true>>="__value_"Q}}}
@34@0:8@16{TSUModelColumnIndex=S}24@26
@42@0:8@16@24{TSUModelColumnIndex=S}32@34
@32@0:8@16^B24
B36@0:8I16r^{TSKUIDStruct=QQ}20@28
{TSUModelColumnIndex=S}24@0:8@16
@"TSTFormulaPredicate"
B28@0:8q16C24
B36@0:8I16@20@28
v44@0:8@16@24Q32B40
v34@0:8{TSUModelColumnIndex=S}16@18@?26
@26@0:8{TSUModelColumnIndex=S}16@18
Q26@0:8{TSUModelColumnIndex=S}16@18
@76@0:8r^{TSKUIDStruct=QQ}16r^{TSKUIDStruct=QQ}24r^{TSKUIDStruct=QQ}32r^{TSKUIDStruct=QQ}40C48C52S56r^{TSUPreserveFlags=C}60s68C72
@68@0:8r^{TSKUIDStruct=QQ}16r^{TSKUIDStruct=QQ}24r^{TSKUIDStruct=QQ}32r^{TSKUIDStruct=QQ}40C48C52S56r^{TSUPreserveFlags=C}60
@52@0:8r^{TSKUIDStruct=QQ}16r^{TSKUIDStruct=QQ}24r^{TSKUIDStruct=QQ}32C40C44S48
@48@0:8r^{TSKUIDStruct=QQ}16r^{TSKUIDStruct=QQ}24r^{TSKUIDStruct=QQ}32C40C44
@52@0:8C16{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}20{TSUCellCoord=ISBB}44
@36@0:8C16@20{TSUCellCoord=ISBB}28
B32@0:8@16{TSUCellCoord=ISBB}24
@56@0:8C16@20@28@36C44C48B52
@80@0:8C16@20@28C36C40{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}44{TSUCellCoord=ISBB}68B76
@64@0:8C16@20@28C36C40@44{TSUCellCoord=ISBB}52B60
@76@0:8C16@20@28C36C40{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}44{TSUCellCoord=ISBB}68
{TSCEFormulaCreator=@?}44@0:8C16C20@24I32B36B40
@96@0:8C16@20@28d36d44C52C56{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}60{TSUCellCoord=ISBB}84B92
@92@0:8C16@20@28d36d44C52C56{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}60{TSUCellCoord=ISBB}84
@72@0:8C16d20d28C36{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}40{TSUCellCoord=ISBB}64
@80@0:8C16d20C28d32C40C44{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}48{TSUCellCoord=ISBB}72
@60@0:8C16@20{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}28{TSUCellCoord=ISBB}52
v40@0:8r^{TSKUIDStruct=QQ}16r^{TSKUIDStruct=QQ}24r^{TSKUIDStruct=QQ}32
v48@0:8^v16@24r^{TSKUIDStruct=QQ}32r^{TSUCellCoord=ISBB}40
C48@0:8@16Q24@32{TSUCellCoord=ISBB}40
B36@0:8C16C20C24^B28
B40@0:8{TSUCellCoord=ISBB}16r^{TSKUIDStruct=QQ}24@32
v32@0:8q16@24
v40@0:8r^v16^{TSCEFormulaRewriteContext=@@{TSCEFormulaRewriteContextRecord={TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}{TSKUIDStruct=QQ}{TSUColumnRowOffset=ii}BBBBBBB}}24^B32
v28@0:8r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}16C24
@32@0:8r^{TSKUIDStruct=QQ}16{TSUCellCoord=ISBB}24
C24@0:8C16B20
{TSCEUidCellRef={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16@0:8
v64@0:8{TSCEUidCellRef={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
@"TSTFormulaPredArg"
{TSCEUidCellRef="_columnUid"{TSKUIDStruct="_lower"Q"_upper"Q}"_rowUid"{TSKUIDStruct="_lower"Q"_upper"Q}"_tableUid"{TSKUIDStruct="_lower"Q"_upper"Q}}
@"TSTStrokeSelection"
@68@0:8i16@20d28{CGRect={CGPoint=dd}{CGSize=dd}}36
v24@0:8^{CGContext=}16
@40@0:8@16@24@?32
{vector<TSUCellRect, std::allocator<TSUCellRect>>=^{TSUCellRect}^{TSUCellRect}{__compressed_pair<TSUCellRect *, std::allocator<TSUCellRect>>=^{TSUCellRect}}}32@0:8^v16^v24
@36@0:8{_NSRange=QQ}16I32
@36@0:8{_NSRange=QQ}16S32
v32@0:8q16@?24
v40@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16@?32
{vector<TSUCellRect, std::allocator<TSUCellRect>>=^{TSUCellRect}^{TSUCellRect}{__compressed_pair<TSUCellRect *, std::allocator<TSUCellRect>>=^{TSUCellRect}}}24@0:8Q16
@32@0:8{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
v36@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16B32
{set<TSUCellRect, TSTCellRangeRowMajorLess, std::allocator<TSUCellRect>>="__tree_"{__tree<TSUCellRect, TSTCellRangeRowMajorLess, std::allocator<TSUCellRect>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<TSUCellRect, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, TSTCellRangeRowMajorLess>="__value_"Q}}}
v28@0:8^v16B24
{set<TSUCellRect, TSTCellRangeColumnMajorLess, std::allocator<TSUCellRect>>="__tree_"{__tree<TSUCellRect, TSTCellRangeColumnMajorLess, std::allocator<TSUCellRect>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<TSUCellRect, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, TSTCellRangeColumnMajorLess>="__value_"Q}}}
v52@0:8^v16r^v24r^v32C40B44B48
B36@0:8^v16r^v24B32
@52@0:8{TSKUIDStruct=QQ}16{TSKUIDStruct=QQ}32C48
@36@0:8r^v16r^v24C32
B24@0:8r^v16
B36@0:8r^v16r^v24B32
v48@0:8{TSKUIDStruct=QQ}16{TSKUIDStruct=QQ}32
Q40@0:8^{?=Q^@^Q[5Q]}16^@24Q32
v40@0:8r^v16r^v24B32B36
@68@0:8{TSKUIDStruct=QQ}16{TSKUIDStruct=QQ}32{TSKUIDStruct=QQ}48i64
@32@0:8q16@24
@36@0:8S16S20I24@28
{TSKUIDStruct=QQ}18@0:8{TSUModelColumnIndex=S}16
{TSKUIDStruct=QQ}20@0:8{TSUModelRowIndex=I}16
{TSUModelColumnIndex=S}32@0:8{TSKUIDStruct=QQ}16
{TSUModelRowIndex=I}32@0:8{TSKUIDStruct=QQ}16
{TSUViewColumnIndex=S}32@0:8{TSKUIDStruct=QQ}16
{TSUViewRowIndex=I}32@0:8{TSKUIDStruct=QQ}16
{TSKUIDStruct=QQ}18@0:8{TSUViewColumnIndex=S}16
{TSKUIDStruct=QQ}20@0:8{TSUViewRowIndex=I}16
@"NSMutableIndexSet"24@0:8@"NSMutableIndexSet"16
v20@0:8{TSUViewRowIndex=I}16
v18@0:8{TSUViewColumnIndex=S}16
{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}24@0:8{TSUCellCoord=ISBB}16
{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}24@0:8Q16
@32@0:8r^v16o^B24
i32@0:8o@16{TSUViewCellCoord={TSUCellCoord=ISBB}}24
@24@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16
@20@0:8{TSUViewRowIndex=I}16
@32@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16@24
i32@0:8@16{TSUViewCellCoord={TSUCellCoord=ISBB}}24
d20@0:8{TSUViewRowIndex=I}16
d18@0:8{TSUViewColumnIndex=S}16
i42@0:8{TSUViewColumnIndex=S}16r^v18@26Q34
i48@0:8{TSUViewRowIndex=I}16r^v20@28Q36B44
v24@0:8{TSUViewRowIndex=I}16{TSUViewRowIndex=I}20
v20@0:8{TSUViewColumnIndex=S}16{TSUViewColumnIndex=S}18
v36@0:8{_NSRange=QQ}16{TSUViewRowIndex=I}32
v40@0:8@16{TSUViewCellCoord={TSUCellCoord=ISBB}}24@32
@36@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16@24B32
@32@0:8@16{TSUViewCellCoord={TSUCellCoord=ISBB}}24
{TSUViewCellCoord={TSUCellCoord=ISBB}}24@0:8@16
B32@0:8{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}24@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16
{TSUViewCellCoord={TSUCellCoord=ISBB}}24@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16
{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}32@0:8{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{vector<TSUViewCellRect, std::allocator<TSUViewCellRect>>=^{TSUViewCellRect}^{TSUViewCellRect}{__compressed_pair<TSUViewCellRect *, std::allocator<TSUViewCellRect>>=^{TSUViewCellRect}}}32@0:8{TSUViewCellRect={TSUCellRect={TSUCellCoord=ISBB}{?=II}}}16
{vector<TSUViewCellRect, std::allocator<TSUViewCellRect>>=^{TSUViewCellRect}^{TSUViewCellRect}{__compressed_pair<TSUViewCellRect *, std::allocator<TSUViewCellRect>>=^{TSUViewCellRect}}}24@0:8@16
{TSUModelCellCoord={TSUCellCoord=ISBB}}48@0:8{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24@0:8{TSUModelCellCoord={TSUCellCoord=ISBB}}16
{TSUViewCellCoord={TSUCellCoord=ISBB}}48@0:8{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
@56@0:8@16i24i28s32B36i40r^v44S52
B24@0:8s16s20
i24@0:8Q16
c24@0:8Q16
q48@0:8@16Q24q32@40
{vector<TSCEFunctionArgSpec, std::allocator<TSCEFunctionArgSpec>>="__begin_"^{TSCEFunctionArgSpec}"__end_"^{TSCEFunctionArgSpec}"__end_cap_"{__compressed_pair<TSCEFunctionArgSpec *, std::allocator<TSCEFunctionArgSpec>>="__value_"^{TSCEFunctionArgSpec}}}
@"TSTStrokeLayerMergedStack"
v32@0:8r^{TSCEInternalCellReference={TSUCellCoord=ISBB}SS}16@24
B40@0:8^v16r^v24r^{TSKUIDStruct=QQ}32
{unordered_map<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>>>="__table_"{__hash_table<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, std::unordered_map<TSKUIDStruct, TSCEInternalCellRefSet>>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>="__value_"f}}}
{unordered_map<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>, std::hash<TSCEInternalCellReference>, std::equal_to<TSCEInternalCellReference>, std::allocator<std::pair<const TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>>>="__table_"{__hash_table<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>, std::__unordered_map_hasher<TSCEInternalCellReference, std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>, std::hash<TSCEInternalCellReference>, std::equal_to<TSCEInternalCellReference>, true>, std::__unordered_map_equal<TSCEInternalCellReference, std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>, std::equal_to<TSCEInternalCellReference>, std::hash<TSCEInternalCellReference>, true>, std::allocator<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSCEInternalCellReference, std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>, std::hash<TSCEInternalCellReference>, std::equal_to<TSCEInternalCellReference>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSCEInternalCellReference, std::__hash_value_type<TSCEInternalCellReference, std::unordered_set<TSKUIDStructCoord>>, std::equal_to<TSCEInternalCellReference>, std::hash<TSCEInternalCellReference>, true>>="__value_"f}}}
v24@0:8{TSCEGridDimensions=II}16
B40@0:8{TSUCellCoord=ISBB}16@24r^{TSKUIDStruct=QQ}32
{unordered_map<TSCECellRef, TSCEFormulaObject *, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, std::allocator<std::pair<const TSCECellRef, TSCEFormulaObject *>>>="__table_"{__hash_table<std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>, std::__unordered_map_hasher<TSCECellRef, std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, true>, std::__unordered_map_equal<TSCECellRef, std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>, std::equal_to<TSCECellRef>, std::hash<TSCECellRef>, true>, std::allocator<std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSCECellRef, std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSCECellRef, std::__hash_value_type<TSCECellRef, TSCEFormulaObject *>, std::equal_to<TSCECellRef>, std::hash<TSCECellRef>, true>>="__value_"f}}}
{unordered_set<TSCECellRef, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, std::allocator<TSCECellRef>>="__table_"{__hash_table<TSCECellRef, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, std::allocator<TSCECellRef>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<TSCECellRef, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCECellRef, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<TSCECellRef, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCECellRef, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSCECellRef, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<TSCECellRef, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<TSCECellRef, void *> *>, std::allocator<std::__hash_node<TSCECellRef, void *>>>="__value_"{__hash_node_base<std::__hash_node<TSCECellRef, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::hash<TSCECellRef>>="__value_"Q}"__p3_"{__compressed_pair<float, std::equal_to<TSCECellRef>>="__value_"f}}}
v36@0:8@16r^{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24S32
{unordered_set<TSKUIDStruct, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<TSKUIDStruct>>={__hash_table<TSKUIDStruct, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<TSKUIDStruct>>={unique_ptr<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *>, std::allocator<std::__hash_node<TSKUIDStruct, void *>>>={__hash_node_base<std::__hash_node<TSKUIDStruct, void *> *>=^v}}{__compressed_pair<unsigned long, std::hash<TSKUIDStruct>>=Q}{__compressed_pair<float, std::equal_to<TSKUIDStruct>>=f}}}20@0:8S16
{vector<TSCESubFormulaOwnerIndex, std::allocator<TSCESubFormulaOwnerIndex>>=^S^S{__compressed_pair<TSCESubFormulaOwnerIndex *, std::allocator<TSCESubFormulaOwnerIndex>>=^S}}16@0:8
v28@0:8S16@?20
{unordered_map<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *, std::hash<TSCESubFormulaOwnerIndex>, std::equal_to<TSCESubFormulaOwnerIndex>, std::allocator<std::pair<const TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>>>="__table_"{__hash_table<std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, std::__unordered_map_hasher<TSCESubFormulaOwnerIndex, std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, std::hash<TSCESubFormulaOwnerIndex>, std::equal_to<TSCESubFormulaOwnerIndex>, true>, std::__unordered_map_equal<TSCESubFormulaOwnerIndex, std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, std::equal_to<TSCESubFormulaOwnerIndex>, std::hash<TSCESubFormulaOwnerIndex>, true>, std::allocator<std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSCESubFormulaOwnerIndex, std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, std::hash<TSCESubFormulaOwnerIndex>, std::equal_to<TSCESubFormulaOwnerIndex>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSCESubFormulaOwnerIndex, std::__hash_value_type<TSCESubFormulaOwnerIndex, TSCEFormulasForUndoForOwnerKind *>, std::equal_to<TSCESubFormulaOwnerIndex>, std::hash<TSCESubFormulaOwnerIndex>, true>>="__value_"f}}}
{unordered_map<TSCECellRef, NSString *, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, std::allocator<std::pair<const TSCECellRef, NSString *>>>="__table_"{__hash_table<std::__hash_value_type<TSCECellRef, NSString *>, std::__unordered_map_hasher<TSCECellRef, std::__hash_value_type<TSCECellRef, NSString *>, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, true>, std::__unordered_map_equal<TSCECellRef, std::__hash_value_type<TSCECellRef, NSString *>, std::equal_to<TSCECellRef>, std::hash<TSCECellRef>, true>, std::allocator<std::__hash_value_type<TSCECellRef, NSString *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, NSString *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, NSString *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, NSString *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, NSString *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, NSString *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, NSString *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, NSString *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSCECellRef, NSString *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, NSString *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSCECellRef, std::__hash_value_type<TSCECellRef, NSString *>, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSCECellRef, std::__hash_value_type<TSCECellRef, NSString *>, std::equal_to<TSCECellRef>, std::hash<TSCECellRef>, true>>="__value_"f}}}
v32@0:8^{TSCEFormulaRewriteContext=@@{TSCEFormulaRewriteContextRecord={TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}{TSKUIDStruct=QQ}{TSUColumnRowOffset=ii}BBBBBBB}}16@?24
@40@0:8@16r^{TSKUIDStruct=QQ}24^{TSCEFormulaRewriteContext=@@{TSCEFormulaRewriteContextRecord={TSCEFormulaContainingCell={TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}BB}{TSKUIDStruct=QQ}{TSUColumnRowOffset=ii}BBBBBBB}}32
@40@0:8@16r^{TSKUIDStruct=QQ}24r^{TSUCellCoord=ISBB}32
B40@0:8{TSUCellCoord=ISBB}16@24^Q32
@"TSCECellCoordinateVector"
@32@0:8^{TSCEASTNodeArray=*QQB}16r^{TSUCellCoord=ISBB}24
{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}32@0:8@16r^{TSKUIDStruct=QQ}24
d76@0:8d16@24q32d40I48^v52^v60^v68
B60@0:8d16@24q32I40^v44^v52
@32@0:8@16r^v24
@32@0:8I16C20^{TSKUIDStruct=QQ}24
C32@0:8{_NSRange=QQ}16
{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}32@0:8r^v16r^v24
@68@0:8@16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24@40{TSUCellRect={TSUCellCoord=ISBB}{?=II}}48i64
I32@0:8^v16^{TSTColumnOrRowMap=IIIB}24
{_NSRange=QQ}32@0:8r^{TSTColumnOrRowMap=IIIB}16r^v24
{TSUCellRect={TSUCellCoord=ISBB}{?=II}}48@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16r^v32r^v40
{TSUCellCoord=ISBB}40@0:8{TSUCellCoord=ISBB}16r^v24r^v32
^v48@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16r^v32r^v40
{vector<TSUCellRect, std::allocator<TSUCellRect>>=^{TSUCellRect}^{TSUCellRect}{__compressed_pair<TSUCellRect *, std::allocator<TSUCellRect>>=^{TSUCellRect}}}48@0:8r^v16^@24{TSUCellRect={TSUCellCoord=ISBB}{?=II}}32
{set<TSTColumnOrRowMap, TSTColumnOrRowMapTgtLess, std::allocator<TSTColumnOrRowMap>>="__tree_"{__tree<TSTColumnOrRowMap, TSTColumnOrRowMapTgtLess, std::allocator<TSTColumnOrRowMap>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<TSTColumnOrRowMap, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, TSTColumnOrRowMapTgtLess>="__value_"Q}}}
@48@0:8Q16@24@32Q40
v72@0:8@16^q24^q32^q40^q48^q56^q64
v48@0:8@16^q24^q32^q40
@"NSCalendar"
{unordered_map<TSKUIDStruct, TSTPlanForGroupingCell, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, std::allocator<std::pair<const TSKUIDStruct, TSTPlanForGroupingCell>>>={__hash_table<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>, std::allocator<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>>>={unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, void *> *> *>>>={__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, void *> *> *>>>=^^v{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, void *> *> *>>={__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, void *> *> *>>=Q}}}}{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, void *>>>={__hash_node_base<std::__hash_node<std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, void *> *>=^v}}{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, std::hash<TSKUIDStruct>, std::equal_to<TSKUIDStruct>, true>>=Q}{__compressed_pair<float, std::__unordered_map_equal<TSKUIDStruct, std::__hash_value_type<TSKUIDStruct, TSTPlanForGroupingCell>, std::equal_to<TSKUIDStruct>, std::hash<TSKUIDStruct>, true>>=f}}}24@0:8@16
B40@0:8@16r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}24@32
@48@0:8@16@24q32@40
v44@0:8@16S24@28@36
B56@0:8@16r^v24@32@40@48
S24@0:8q16
@48@0:8Q16q24@32@40
@60@0:8d16C24@28@36{TSKUIDStruct=QQ}44
{vector<TSUCellCoord, std::allocator<TSUCellCoord>>=^{TSUCellCoord}^{TSUCellCoord}{__compressed_pair<TSUCellCoord *, std::allocator<TSUCellCoord>>=^{TSUCellCoord}}}16@0:8
v40@0:8{vector<TSUCellCoord, std::allocator<TSUCellCoord>>=^{TSUCellCoord}^{TSUCellCoord}{__compressed_pair<TSUCellCoord *, std::allocator<TSUCellCoord>>=^{TSUCellCoord}}}16
Q24@0:8C16B20
i28@0:8@16{TSUViewRowIndex=I}24
v40@0:8C16B20^@24^@32
v48@0:8C16B20@24^@32^@40
i26@0:8@16{TSUViewColumnIndex=S}24
i56@0:8{TSUViewCellCoord={TSUCellCoord=ISBB}}16@?24@?32@?40@?48
v52@0:8{TSUViewRowIndex=I}16@?20@?28@?36@?44
{TSUModelCellCoord={TSUCellCoord=ISBB}}24@0:8r^{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}16
@40@0:8r^{TSKUIDStruct=QQ}16r^v24r^v32
r^{TSUCellCoord=ISBB}16@0:8
@"TSCEFormulaRewrite_RegionInfo"
{unordered_map<TSUCellCoord, TSUCellCoord, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, std::allocator<std::pair<const TSUCellCoord, TSUCellCoord>>>="__table_"{__hash_table<std::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>, std::allocator<std::__hash_value_type<TSUCellCoord, TSUCellCoord>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSUCellCoord>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSUCellCoord>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>>="__value_"f}}}
@48@0:8r^{TSKUIDStruct=QQ}16r^v24r^{TSKUIDStruct=QQ}32r^v40
B32@0:8^{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16{TSUCellCoord=ISBB}24
S24@0:8I16S20
{TSUCellCoord=ISBB}32@0:8{TSUColumnRowOffset=ii}16{TSUCellCoord=ISBB}24
I28@0:8Q16I24
@"TSTHiddenStateIndexSet"
B24@0:8B16B20
B40@0:8@16@24{TSUCellCoord=ISBB}32
v48@0:8@16@24{TSUCellCoord=ISBB}32Q40
{TSTPerformanceLoggingToken=@Q}16@0:8
v32@0:8{TSTPerformanceLoggingToken=@Q}16
{TSTPerformanceLoggingToken="logHandle"@"NSObject<OS_os_log>""signpostID"Q}
c24@0:8^{TSCEEvaluationContext=}16
{vector<TSCEGrid, std::allocator<TSCEGrid>>="__begin_"^{TSCEGrid}"__end_"^{TSCEGrid}"__end_cap_"{__compressed_pair<TSCEGrid *, std::allocator<TSCEGrid>>="__value_"^{TSCEGrid}}}
B32@0:8{CGPoint=dd}16
v40@0:8@16^{CGContext=}24@32
v40@0:8@"TSWPUIGraphicalAttachment"16^{CGContext=}24@"TSWPSelection"32
@"TSTTableNameSelection"
@24@0:8r*16
q24@0:8q16
q32@0:8q16@24
@56@0:8{TSKUIDStruct=QQ}16{TSKUIDStruct=QQ}32q48
@40@0:8{TSKUIDStruct=QQ}16q32
@34@0:8{TSUModelColumnIndex=S}16q18@26
r^{TSCEFunctor=@C}16@0:8
{TSCEFunctor="_formula"@"TSCEFormulaObject""_numArgs"C}
@"TSTFormulaRewriteSpec"
{TSUViewCellCoord="_coord"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}}
@"TSTPivotTranslator"
i32@0:8@16S24B28
i28@0:8@16S24
{TSCEAnyRef=S{TSCESpanningRangeRef={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}C}{TSKUIDStruct=QQ}B@}16@0:8
@45@0:8@16r^{TSKUIDStruct=QQ}24{TSUPreserveFlags=C}32@33B41
@45@0:8@16@24{TSUPreserveFlags=C}32@33B41
{TSCEAnyRef="_refType"S"_spanningRef"{TSCESpanningRangeRef="rangeRef"{TSCERangeRef="range"{TSCERangeCoordinate="_topLeft"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}"_bottomRight"{TSUCellCoord="row"I"column"S"_preserveRow"B"_preserveColumn"B}}"_tableUID"{TSKUIDStruct="_lower"Q"_upper"Q}}"rangeContext"C}"_uuidValue"{TSKUIDStruct="_lower"Q"_upper"Q}"_couldBeIntersection"B"_refSet"@"TSCEReferenceSetWrapper"}
^{TSCETableResolver=^^?}24@0:8@"<TSCEReferenceResolving>"16
C24@0:8@"TSCECategoryRef"16
{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}44@0:8@"TSCECategoryRef"16r^{TSKUIDStruct=QQ}24C32^@36
@"TSCEValueGrid"44@0:8@"TSCECategoryRef"16r^{TSKUIDStruct=QQ}24C32^@36
{vector<TSCECellRef, std::allocator<TSCECellRef>>=^{TSCECellRef}^{TSCECellRef}{__compressed_pair<TSCECellRef *, std::allocator<TSCECellRef>>=^{TSCECellRef}}}32@0:8@"TSCECategoryRef"16r^{TSKUIDStruct=QQ}24
{vector<TSCECategoryRef *, std::allocator<TSCECategoryRef *>>=^@^@{__compressed_pair<TSCECategoryRef *__strong *, std::allocator<TSCECategoryRef *>>=^@}}24@0:8@"TSCECategoryRef"16
{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}24@0:8@"TSCECategoryRef"16
@"<TSCEResolverContainer>"32@0:8@"NSString"16@"TSKDocumentRoot"24
@"<TSCEReferenceResolving>"40@0:8@"NSString"16@"TSKDocumentRoot"24@"<TSCEReferenceResolving>"32
@"<TSCEReferenceResolving>"40@0:8@"NSString"16@"TSKDocumentRoot"24@"NSString"32
@40@0:8q16@24@32
{TSTImportWarningSetCellWarningFlags="mCondFormatAboveAvgEqualAverageImportWarning"b1"mCondFormatAboveAvgStdDevImportWarning"b1"mCondFormatComplexFormulaImportWarning"b1"mCondFormatContainsErrorsImportWarning"b1"mCondFormatExprImportWarning"b1"mCondFormatNotContainsErrorsImportWarning"b1"mCondFormatParametersNotAllTheSameTypeImportWarning"b1"mCondFormatStopIfTrueImportWarning"b1"mCondFormatUnsupportedOperatorImportWarning"b1"mCondFormatUnsupportedStylingImportWarning"b1"mCondFormatUnsupportedTimePeriodImportWarning"b1"mUnsupportedConditionalFormatImportWarning"b1"mUnsupportedDataFormatImportWarning"b1"mDurationFormatRangeChangedUpgradeWarning"b1}
{TSTImportFormulaWarning="mType"q"mOriginalFormula"@"NSString""mSupplementaryText"@"NSString"}
{TSCECellRef={TSUCellCoord=ISBB}{TSKUIDStruct=QQ}}24@0:8Q16
{unordered_map<TSCECellRef, TSTImportWarningSet *, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, std::allocator<std::pair<const TSCECellRef, TSTImportWarningSet *>>>="__table_"{__hash_table<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, std::__unordered_map_hasher<TSCECellRef, std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, true>, std::__unordered_map_equal<TSCECellRef, std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, std::equal_to<TSCECellRef>, std::hash<TSCECellRef>, true>, std::allocator<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSCECellRef, std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, std::hash<TSCECellRef>, std::equal_to<TSCECellRef>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSCECellRef, std::__hash_value_type<TSCECellRef, TSTImportWarningSet *>, std::equal_to<TSCECellRef>, std::hash<TSCECellRef>, true>>="__value_"f}}}
@36@0:8q16@24i32
@132@0:8{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16@112i120@124
v132@0:8{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16@112i120@124
v64@0:8{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16@48r^{TSKUIDStruct=QQ}56
v72@0:8{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16@48r^{TSKUIDStruct=QQ}56B64B68
@56@0:8{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16r^{TSKUIDStruct=QQ}48
v40@0:8i16@20d28B36
v52@0:8i16@20d28B36d40B48
v28@0:8i16@20
v32@0:8i16i20@24
v36@0:8i16i20i24@28
v60@0:8@16B24B28@32B40i44i48@52
v56@0:8{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16r^{TSKUIDStruct=QQ}48
v48@0:8{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}16
v28@0:8@16c24
v40@0:8@16i24i28B32B36
v32@0:8@16i24i28
v56@0:8@16{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}24
v56@0:8{vector<TSCEReferenceValue, std::allocator<TSCEReferenceValue>>=^{TSCEReferenceValue}^{TSCEReferenceValue}{__compressed_pair<TSCEReferenceValue *, std::allocator<TSCEReferenceValue>>=^{TSCEReferenceValue}}}16r^{TSKUIDStruct=QQ}40@48
v24@0:8S16s20
v24@0:8c16c20
B32@0:8@16^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}24
@48@0:8@16{TSKUIDStruct=QQ}24{TSUCellCoord=ISBB}40
^{TSCENumberValue=^^?{TSUDecimal={?=[2Q]}}{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}SB}36@0:8@16i24^{TSCEWarningReportingContext=BB@}28
@36@0:8@16i24^{TSCEWarningReportingContext=BB@}28
B36@0:8@16i24^{TSCEWarningReportingContext=BB@}28
{TSCEGrid=^^?@{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}}44@0:8@16i24^{TSCEEvaluationContext=}28r^{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}36
^{TSCEReferenceValue=^^?@{TSUCellCoord=ISBB}{TSUPreserveFlags=C}BB}36@0:8@16i24^{TSCEWarningReportingContext=BB@}28
^{TSCEGrid=^^?@{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}}16@0:8
^{TSCEReferenceValue=^^?@{TSUCellCoord=ISBB}{TSUPreserveFlags=C}BB}16@0:8
B112@0:8{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16
v32@0:8@16^v24
{unordered_map<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *, std::hash<unsigned long>, std::equal_to<unsigned long>, std::allocator<std::pair<const unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>>>="__table_"{__hash_table<std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>, std::allocator<std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<unsigned long, std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>, std::hash<unsigned long>, std::equal_to<unsigned long>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<unsigned long, std::__hash_value_type<unsigned long, NSMutableDictionary<TSCERemoteDataSpecifier *,TSCECellValue *> *>, std::equal_to<unsigned long>, std::hash<unsigned long>, true>>="__value_"f}}}
@48@0:8@16@24^B32^B40
@40@0:8@16Q24@32
B24@0:8@"<TSUMultipleChoiceListChoiceProviding>"16
@"NSString"24@0:8Q16
@"NSDate"24@0:8Q16
i20@0:8c16
v44@0:8r^v16i24@28@?36
v40@0:8r^v16@24@?32
@"NSObject<TSTTableDataPayloadHashing>"
[20{os_unfair_lock_s="_os_unfair_lock_opaque"I}]
[20{unordered_map<TSUCellCoord, TSTCell *, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, std::allocator<std::pair<const TSUCellCoord, TSTCell *>>>="__table_"{__hash_table<std::__hash_value_type<TSUCellCoord, TSTCell *>, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTCell *>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTCell *>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>, std::allocator<std::__hash_value_type<TSUCellCoord, TSTCell *>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSUCellCoord, TSTCell *>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTCell *>, std::hash<TSUCellCoord>, std::equal_to<TSUCellCoord>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSUCellCoord, std::__hash_value_type<TSUCellCoord, TSTCell *>, std::equal_to<TSUCellCoord>, std::hash<TSUCellCoord>, true>>="__value_"f}}}]
[20{TSCECellCoordSet="_rowsPerColumn"{map<unsigned short, TSUIndexSet, std::less<unsigned short>, std::allocator<std::pair<const unsigned short, TSUIndexSet>>>="__tree_"{__tree<std::__value_type<unsigned short, TSUIndexSet>, std::__map_value_compare<unsigned short, std::__value_type<unsigned short, TSUIndexSet>, std::less<unsigned short>, true>, std::allocator<std::__value_type<unsigned short, TSUIndexSet>>>="__begin_node_"^v"__pair1_"{__compressed_pair<std::__tree_end_node<std::__tree_node_base<void *> *>, std::allocator<std::__tree_node<std::__value_type<unsigned short, TSUIndexSet>, void *>>>="__value_"{__tree_end_node<std::__tree_node_base<void *> *>="__left_"^v}}"__pair3_"{__compressed_pair<unsigned long, std::__map_value_compare<unsigned short, std::__value_type<unsigned short, TSUIndexSet>, std::less<unsigned short>, true>>="__value_"Q}}}}]
@"TSPTemporaryObjectContextDelegate"
@"TSPObjectContext"
@40@0:8@16@24^i32
@48@0:8^{TSCETableResolver=^^?}16r^{TSUCellCoord=ISBB}24r^{TSUCellCoord=ISBB}32r^{TSUPreserveFlags=C}40
@32@0:8^{TSCETableResolver=^^?}16r^{TSCECellTractRefCore={TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}{TSKUIDStruct=QQ}C{TSUPreserveFlags=C}BBB}24
r^{TSCECellTractRefCore={TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}{TSKUIDStruct=QQ}C{TSUPreserveFlags=C}BBB}16@0:8
@32@0:8r^{TSCEGridCoord=II}16r^{TSCECellTractRefCore={TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}{TSKUIDStruct=QQ}C{TSUPreserveFlags=C}BBB}24
{TSCEFormat=@IC{TSCEDurationFormat=b1b6b6b3}{TSCEBaseFormat=CCB}{TSCEFractionFormat=c}{TSCENumberFormat=Cb3b1b1S}}24@0:8{TSUCellCoord=ISBB}16
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}32@0:8^v16B24B28
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}32@0:8r^{TSUCellCoord=ISBB}16B24B28
{shared_ptr<TSCEValue>=^{TSCEValue}^{__shared_weak_count}}16@0:8
v32@0:8{shared_ptr<TSCEValue>=^{TSCEValue}^{__shared_weak_count}}16
{shared_ptr<TSCEValue>="__ptr_"^{TSCEValue}"__cntrl_"^{__shared_weak_count}}
@72@0:8{TSUCellCoord=ISBB}16{TSKUIDStructTract={TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}{TSKUIDStructVectorTemplate<TSKUIDStruct>=^{TSKUIDStruct}^{TSKUIDStruct}{__compressed_pair<TSKUIDStruct *, std::allocator<TSKUIDStruct>>=^{TSKUIDStruct}}}}24
@"TSTConcurrentSparseCellList"
B28@0:8I16I20B24
C20@0:8C16
B24@0:8C16C20
@32@0:8^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}16@24
v32@0:8^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}16@24
v40@0:8^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}16@24@32
v36@0:8^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}16@24B32
v44@0:8^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}16@24@32B40
v36@0:8{TSUDecimal={?=[2Q]}}16B32
v32@0:8{TSUDecimal={?=[2Q]}}16
v24@0:8r^{TSUDecimal={?=[2Q]}}16
v48@0:8r^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16@24B32^B36B44
@36@0:8C16B20B24^B28
B32@0:8C16@20S28
v28@0:8B16C20B24
@28@0:8C16^B20
@24@0:8^B16
@"TSTCellStyleHandle"
v24@0:8r^{TSCEAnyRef=S{TSCESpanningRangeRef={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}C}{TSKUIDStruct=QQ}B@}16
v24@0:8r^{TSCESpanningRangeRef={TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}C}16
@40@0:8Q16@24@32
@40@0:8I16C20{TSKUIDStruct=QQ}24
@40@0:8S16C20{TSKUIDStruct=QQ}24
v24@0:8C16S20
Q36@0:8S16^@20^@28
v48@0:8@16@24r^{TSKUIDStruct=QQ}32@40
v28@0:8S16Q20
^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}24@0:8{TSUCellCoord=ISBB}16
v32@0:8{TSUCellCoord=ISBB}16@?24
v36@0:8{TSUCellCoord=ISBB}16B24@?28
@40@0:8{TSUCellCoord=ISBB}16^B24^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}32
@32@0:8{TSUCellCoord=ISBB}16^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}24
v68@0:8@16{TSUCellCoord=ISBB}24r^{TSKUIDStruct=QQ}32@40@48B56B60B64
v64@0:8@16{TSUCellCoord=ISBB}24r^{TSKUIDStruct=QQ}32@40@48B56B60
v72@0:8@16{TSUCellCoord=ISBB}24r^{TSKUIDStruct=QQ}32@40@48B56B60^B64
v60@0:8@16r^{TSKUIDStruct=QQ}24@32@40B48B52B56
@32@0:8@16d24
v32@0:8@16B24C28
v40@0:8@16@24B32C36
v32@0:8^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}16{TSUCellCoord=ISBB}24
@24@0:8^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}16
{vector<TSUCellRect, std::allocator<TSUCellRect>>=^{TSUCellRect}^{TSUCellRect}{__compressed_pair<TSUCellRect *, std::allocator<TSUCellRect>>=^{TSUCellRect}}}16@0:8
@40@0:8^@16@24@?32
@24@0:8i16B20
v56@0:8@16r^{TSKUIDStruct=QQ}24@32@40B48B52
{vector<TSTCell *, std::allocator<TSTCell *>>=^@^@{__compressed_pair<TSTCell *__strong *, std::allocator<TSTCell *>>=^@}}44@0:8{TSUModelRowIndex=I}16@20^v28@?36
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}40@0:8@16{TSUCellCoord=ISBB}24r^{TSKUIDStruct=QQ}32
v48@0:8^{TSTCellStorage={?=Cb8b16b16b16b32}[0C]}16r^{TSUCellCoord=ISBB}24r^{TSKUIDStruct=QQ}32^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}40
@"TSTTableDataList"
@"TSTTableTileStorage"
@"TSTTableHeaderStorage"
@"TSPLazyReference"
@"TSTMergeRegionMap"
@48@0:8{_NSRange=QQ}16{_NSRange=QQ}32
@32@0:8r^v16r^{TSCEGridDimensions=II}24
{TSCEGridCoord=II}16@0:8
B24@0:8r^{TSCEGridCoord=II}16
v24@0:8r^{TSCEGridCoord=II}16
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}24@0:8I16I20
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}24@0:8r^{TSCEGridCoord=II}16
{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}24@0:8Q16
{vector<TSCEValue, std::allocator<TSCEValue>>=^{TSCEValue}^{TSCEValue}{__compressed_pair<TSCEValue *, std::allocator<TSCEValue>>=^{TSCEValue}}}16@0:8
v32@0:8r^{TSCEValue=(?={?={?=[2Q]}[24C]SB}[9Q])C}16r^{TSCEGridCoord=II}24
@32@0:8r^{TSCEGridCoord=II}16i24i28
v28@0:8I16@?20
{TSCEGridCoord="column"I"row"I}
{unordered_map<TSCEGridCoord, TSCEValue, std::hash<TSCEGridCoord>, std::equal_to<TSCEGridCoord>, std::allocator<std::pair<const TSCEGridCoord, TSCEValue>>>="__table_"{__hash_table<std::__hash_value_type<TSCEGridCoord, TSCEValue>, std::__unordered_map_hasher<TSCEGridCoord, std::__hash_value_type<TSCEGridCoord, TSCEValue>, std::hash<TSCEGridCoord>, std::equal_to<TSCEGridCoord>, true>, std::__unordered_map_equal<TSCEGridCoord, std::__hash_value_type<TSCEGridCoord, TSCEValue>, std::equal_to<TSCEGridCoord>, std::hash<TSCEGridCoord>, true>, std::allocator<std::__hash_value_type<TSCEGridCoord, TSCEValue>>>="__bucket_list_"{unique_ptr<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEGridCoord, TSCEValue>, void *> *> *[], std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEGridCoord, TSCEValue>, void *> *> *>>>="__ptr_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEGridCoord, TSCEValue>, void *> *> **, std::__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEGridCoord, TSCEValue>, void *> *> *>>>="__value_"^^v"__value_"{__bucket_list_deallocator<std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEGridCoord, TSCEValue>, void *> *> *>>="__data_"{__compressed_pair<unsigned long, std::allocator<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEGridCoord, TSCEValue>, void *> *> *>>="__value_"Q}}}}"__p1_"{__compressed_pair<std::__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEGridCoord, TSCEValue>, void *> *>, std::allocator<std::__hash_node<std::__hash_value_type<TSCEGridCoord, TSCEValue>, void *>>>="__value_"{__hash_node_base<std::__hash_node<std::__hash_value_type<TSCEGridCoord, TSCEValue>, void *> *>="__next_"^v}}"__p2_"{__compressed_pair<unsigned long, std::__unordered_map_hasher<TSCEGridCoord, std::__hash_value_type<TSCEGridCoord, TSCEValue>, std::hash<TSCEGridCoord>, std::equal_to<TSCEGridCoord>, true>>="__value_"Q}"__p3_"{__compressed_pair<float, std::__unordered_map_equal<TSCEGridCoord, std::__hash_value_type<TSCEGridCoord, TSCEValue>, std::equal_to<TSCEGridCoord>, std::hash<TSCEGridCoord>, true>>="__value_"f}}}
^{TSUIndexSet=b1b1{TSUIndexRange=qq}^{?}}
@24@0:8^{TSCEGridAccessContext=@^{TSCEFunctionArgSpec}i^{TSCEEvaluationContext}BBBBBCC{TSCERangeRef={TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}{TSKUIDStruct=QQ}}}16
@28@0:8r^{TSCEReferenceValue=^^?@{TSUCellCoord=ISBB}{TSUPreserveFlags=C}BB}16C24
@"TSCEEvalRef"
@52@0:8{?={?=II}{?=II}}16^{CGAffineTransform=dddddd}32d40B48
v60@0:8@16{?={?=II}{?=II}}24^{CGAffineTransform=dddddd}40d48B56
@"TSKAnnotationAuthor"16@0:8
v24@0:8@"TSKAnnotationAuthor"16
@"NSDate"16@0:8
@"TSDCommentStorage"16@0:8
v24@0:8@"TSDCommentStorage"16
@64@0:8@16@24{TSKUIDStructCoord={TSKUIDStruct=QQ}{TSKUIDStruct=QQ}}32
@40@0:8@16@24{TSUModelCellCoord={TSUCellCoord=ISBB}}32
@44@0:8r^{TSKUIDStruct=QQ}16{TSCERangeCoordinate={TSUCellCoord=ISBB}{TSUCellCoord=ISBB}}24I40
@60@0:8r^{TSKUIDStruct=QQ}16r^v24@32B40r^v44r^v52
@56@0:8r^{TSKUIDStruct=QQ}16r^v24r^{TSKUIDStruct=QQ}32r^v40@48
@72@0:8r^{TSKUIDStruct=QQ}16r^v24r^{TSKUIDStruct=QQ}32r^v40@48@56r^{TSKUIDStruct=QQ}64
@48@0:8r^{TSKUIDStruct=QQ}16r^v24r^v32{TSUCellCoord=ISBB}40
@40@0:8r^v16r^v24r^{TSKUIDStruct=QQ}32
@"TSTFormulaRewrite_PivotInfo"
@"TSTAutofillSelection"
Q32@0:8@16@24
d40@0:8@16@24@32
@"NSObject<TSDContainerInfo>"16@0:8
@"TSTTableReferences"16@0:8
@"TSTSelectionDragController"16@0:8
v24@0:8@"TSTSelectionDragController"16
v24@0:8@"NSSet"16
B48@0:8@16{_NSRange=QQ}24@40
@48@0:8@16{_NSRange=QQ}24@40
B24@0:8@"UITextField"16
v24@0:8@"UITextField"16
v32@0:8@"UITextField"16q24
B48@0:8@"UITextField"16{_NSRange=QQ}24@"NSString"40
@"UIMenu"48@0:8@"UITextField"16{_NSRange=QQ}24@"NSArray"40
v32@0:8@"UITextField"16@"<UIEditMenuInteractionAnimating>"24
v32@0:8@16^{CGContext=}24
v24@0:8@"CALayer"16
v32@0:8@"CALayer"16^{CGContext=}24
@"<CAAction>"32@0:8@"CALayer"16@"NSString"24
@36@0:8{CGPoint=dd}16B32
{CGRect={CGPoint=dd}{CGSize=dd}}24@0:8{TSUCellCoord=ISBB}16
v56@0:8{TSUCellRect={TSUCellCoord=ISBB}{?=II}}16^{?=Bdddddd}32^{CGRect={CGPoint=dd}{CGSize=dd}}40^{CGRect={CGPoint=dd}{CGSize=dd}}48
{TSUCellCoord=ISBB}32@0:8{CGPoint=dd}16
{CGAffineTransform=dddddd}56@0:8{CGRect={CGPoint=dd}{CGSize=dd}}16{TSUCellCoord=ISBB}48
{CGRect={CGPoint=dd}{CGSize=dd}}120@0:8@16{TSUCellCoord=ISBB}24@32{CGRect={CGPoint=dd}{CGSize=dd}}40{CGAffineTransform=dddddd}72
{CGAffineTransform=dddddd}40@0:8@16@24{TSUCellCoord=ISBB}32
v44@0:8@16Q24B32@36
v32@0:8^{CGContext=}16@24
{CGRect={CGPoint=dd}{CGSize=dd}}72@0:8@16{CGAffineTransform=dddddd}24
v48@0:8@16{?={?=II}{?=II}}24^{CGContext=}40
v48@0:8@16{TSUCellRect={TSUCellCoord=ISBB}{?=II}}24^{CGContext=}40
v64@0:8@16{CGRect={CGPoint=dd}{CGSize=dd}}24^{CGContext=}56
v68@0:8@16B24{CGRect={CGPoint=dd}{CGSize=dd}}28^{CGContext=}60
v80@0:8^{CGContext=}16d24{CGRect={CGPoint=dd}{CGSize=dd}}32@64{TSUCellCoord=ISBB}72
v124@0:8^{CGContext=}16{CGRect={CGPoint=dd}{CGSize=dd}}24@56{TSUCellCoord=ISBB}64q72{CGRect={CGPoint=dd}{CGSize=dd}}80i112@116
@32@0:8{CGPoint=dd}16
@"TSTTableReferences"
@"TSTSelectionDragController"
@"<TSTTableAnimationController>"
@"<TSTTableRepDelegate>"
@"<TSTTableChromeProvider>"
@"<TSTCanvasReferenceController>"
@"TSTCellRegionGatherer"
@"CAShapeLayer"
v40@0:8@16{TSUCellCoord=ISBB}24B32B36
v24@0:8@"TSTTableRep"16
v24@0:8@"TSTLayoutSpace"16
v40@0:8@"TSTCell"16{TSUCellCoord=ISBB}24B32B36
B24@0:8@"TSDRep"16
4tl:4
t*@es
"@M,
r<S[
Tg*
af3'P
KUUUUU
r-Yr
YUUUU
U@_6
F@>F
lz9~
/@o)
?Q&^
?M5i
3?4"L)L
>=kv
@R0-
